WEBVTT
1
00:00:06.970 --> 00:00:14.410
Okay, moving on. Let's say that we've been allocated Class C 200.15.10.0/24, again, the same

2
00:00:14.440 --> 00:00:15.600
as the last example.

3
00:00:16.059 --> 00:00:19.770
And here, we're going to move the line all the way to the right.

4
00:00:19.780 --> 00:00:21.990
We're going to go with a /31.

5
00:00:22.090 --> 00:00:27.100
Obviously, we can't do a /32 if we want to have more than one available host now.

6
00:00:27.370 --> 00:00:32.870
You can use a /32 subnet mask, but there is only one host there that's mostly used for

7
00:00:32.870 --> 00:00:34.120
a loopback addresses.

8
00:00:34.130 --> 00:00:35.160
Don't worry about it yet.

9
00:00:35.170 --> 00:00:36.680
We're going to talk about that later on.

10
00:00:36.970 --> 00:00:43.120
So if you do need to have multiple hosts, then the furthest right you can go is a /31.

11
00:00:43.390 --> 00:00:51.010
If we wrote that subnet mask in a dotted decimal notation, it would be 255.255.255.254. We get

12
00:00:51.070 --> 00:00:58.000
the 254 because it's 128 plus 64, 32, 16, 8, 4 plus 2, comes up

13
00:00:58.000 --> 00:00:58.300
to 254.

14
00:00:58.670 --> 00:01:04.430
So that leaves 1 bit for the host address, which has obviously got a possible value of a 1 or a 0.

15
00:01:04.480 --> 00:01:08.260
So, a Class C /31,

16
00:01:08.440 --> 00:01:17.560
it borrows 7 bits for the network address from the host address. That gives us 128 subnets, which

17
00:01:17.560 --> 00:01:24.970
is 2 to the power of 7. Let's count it up, 2, 4, 8, 16, 32, 64,

18
00:01:24.970 --> 00:01:25.630
128,

19
00:01:25.930 --> 00:01:28.070
and that's going to accommodate 2 hosts each.

20
00:01:28.120 --> 00:01:30.670
So that's what we get with a /31.

21
00:01:31.240 --> 00:01:43.720
The valid host addresses would be 200.15.10.0 to 200.15.10.1, 200.15.10.2 to 200.15.10.3,

22
00:01:43.720 --> 00:01:47.530
then 200.15.10.4 to 200.15.10.5, etc., all the way up to

23
00:01:47.530 --> 00:01:51.400
200.15.10.254 and 200.15.10.255.

24
00:01:52.390 --> 00:02:02.350
You can check this by, we're using 200.15.10.0, so the first three octets are never going to change. The last

25
00:02:02.350 --> 00:02:02.650
octet,

26
00:02:02.650 --> 00:02:09.370
just start with all 0's, and then it would be 0000001, and then a 0 or a 1,

27
00:02:09.370 --> 00:02:15.310
and then 0000010,

28
00:02:15.310 --> 00:02:15.960
and then

29
00:02:15.990 --> 00:02:16.990
a 0 or a 1,

30
00:02:16.990 --> 00:02:17.500
and so on.

31
00:02:19.360 --> 00:02:25.640
But wait, if we're using a /31, there's only 2 possible values to assign to hosts.

32
00:02:25.950 --> 00:02:33.600
What about the network and broadcast address? A /31 subnet breaks the standard rules of IP addressing,

33
00:02:33.760 --> 00:02:38.950
where we have to have the network address and the broadcast address at the top and the bottom of the range.

34
00:02:39.310 --> 00:02:39.810
/31

35
00:02:39.820 --> 00:02:45.270
subnets are, however, supported on Cisco routers for point to point links.

36
00:02:45.520 --> 00:02:49.550
If you think about it, a point to point link, there's this one side and the other side.

37
00:02:49.570 --> 00:02:53.910
Well, any traffic that comes from here needs to go at the other side, and vice versa.

38
00:02:53.920 --> 00:02:55.550
There's nowhere else for it to go,

39
00:02:55.570 --> 00:02:59.080
so there isn't really any point in having a network and a broadcast address.

40
00:02:59.290 --> 00:03:02.980
So that's why Cisco allowed that exception.

41
00:03:02.980 --> 00:03:05.950
You can have a /31 on a point to point link.

42
00:03:08.060 --> 00:03:11.470
Next up, moving on, we're going to move the line back a space.

43
00:03:11.470 --> 00:03:18.310
We're going to create a /30 now. The subnet mask in dotted decimal, 255.255.255.252,

44
00:03:18.310 --> 00:03:21.570
that and /30,

45
00:03:21.580 --> 00:03:22.780
they both mean the same thing.

46
00:03:23.680 --> 00:03:29.290
That is going to leave 2 bits for the host address. Because we got 2 bits for the host address,

47
00:03:29.470 --> 00:03:34.550
2 to the power of 2 is 4, minus 2 for the network and the broadcast address,

48
00:03:34.550 --> 00:03:37.150
that gives us 2 possible hosts.

49
00:03:37.510 --> 00:03:40.960
It borrows 6 bits for the network address.

50
00:03:40.960 --> 00:03:48.580
If we count this up, 2, 4, 8, 16, 32, 64, is our 64 bits, which can accommodate 2

51
00:03:48.580 --> 00:03:55.630
hosts each. The valid addresses are on the first subnet.

52
00:03:55.630 --> 00:04:03.190
The network address is 200.15.10.0, and the broadcast address is 200.15.10.3.

53
00:04:03.440 --> 00:04:09.620
The valid addresses are 200.15.10.1 and 200.15.10.2. The next subnet is 200.15.10.5

54
00:04:09.640 --> 00:04:16.240
to 200.15.10.6, and the network is 200.15.10.4, the broadcast is 200.15.10.7.

55
00:04:16.390 --> 00:04:17.529
The next subnet,

56
00:04:17.529 --> 00:04:19.300
the network would be 200.15.10.8.

57
00:04:19.300 --> 00:04:24.090
The valid addresses would be 200.15.10.9 and 200.15.10.10, and the broadcast would be 200.15.10.11, and so on.

58
00:04:24.640 --> 00:04:31.030
As you look at this, the way that you can calculate what the different valid subnets are going

59
00:04:31.030 --> 00:04:36.000
to be, notice where the line is, it's after the number 4.

60
00:04:36.310 --> 00:04:39.240
So, the network address is going to go up in values of 4.

61
00:04:39.250 --> 00:04:42.220
The first network address is 200.15.10.0.

62
00:04:42.410 --> 00:04:45.330
The next network address is 200.15.10.4. The next network

63
00:04:45.340 --> 00:04:45.900
address is 200.15.10.8,

64
00:04:45.940 --> 00:04:48.640
200.15.10.12, 200.15.10.16, and so on.

65
00:04:48.790 --> 00:04:53.920
And because we know the network addresses, we can work out what the broadcast address and the range

66
00:04:53.920 --> 00:04:55.840
of valid IP addresses are going to be.

67
00:04:56.350 --> 00:05:03.070
So here, it's going up in values of 4. The first subnet is going to be a 200.15.10.0, so 200.15.10.0 is the network address.

68
00:05:03.400 --> 00:05:09.250
And because the next range starts at 200.15.10.4, the broadcast address must be 200.15.10.3.

69
00:05:09.250 --> 00:05:14.080
So if 200.15.10.0 is the network address, and 200.15.10.3 is the broadcast address, the valid host addresses

70
00:05:14.080 --> 00:05:15.880
must be 200.15.10.1 and 200.15.10.2.

71
00:05:16.390 --> 00:05:23.050
The next subnet starts with 200.15.10.4. The next subnet after that is at 200.15.10.8, so the broadcast address must

72
00:05:23.050 --> 00:05:23.890
be 200.15.10.7.

73
00:05:24.010 --> 00:05:31.510
So, network address of 200.15.10.4, broadcast address of 200.15.10.7, that leaves the addresses in between of 200.15.10.5

74
00:05:31.510 --> 00:05:34.600
and 200.15.10.6 are available to be assigned to our hosts.

75
00:05:36.640 --> 00:05:44.380
Let's look at the comparison between the /31 and the /30 now. Hopefully, you noticed that they both supported

76
00:05:44.380 --> 00:05:51.730
2 hosts per subnet. But a /31 supported a 128 subnetworks,

77
00:05:51.760 --> 00:05:54.460
a /30 only supported 64.

78
00:05:54.610 --> 00:06:00.010
So you're maybe thinking, "Oh, well, we're always going to use a /31 then." And a /31 is

79
00:06:00.010 --> 00:06:03.970
useful if you need to maximize the use of your address space.

80
00:06:04.300 --> 00:06:07.960
But a /30 is more commonly used,

81
00:06:07.960 --> 00:06:12.280
it's more standardized. For the CCNA exam,

82
00:06:13.150 --> 00:06:17.860
if you get a question where you've got the choice where you could use either a /31 or a /30,

83
00:06:18.070 --> 00:06:19.960
always use a /30.

84
00:06:20.090 --> 00:06:27.370
If the question requires you to come up with a subnet that supports 2 hosts, use a /30

85
00:06:27.370 --> 00:06:30.970
unless the question explicitly tells you to use a /31.

86
00:06:33.280 --> 00:06:35.870
Okay, so we covered the /30 and the /31.

87
00:06:35.890 --> 00:06:38.800
Next up is a /29,

88
00:06:38.810 --> 00:06:48.070
so we're going to move the line back a space again. A /29 in dotted decimal is 255.255.255.248.

89
00:06:48.320 --> 00:06:53.930
Again, we get the 248 because it's 128 plus 64 plus 32 plus 16 plus 8,

90
00:06:54.220 --> 00:06:56.380
up to where the line is.

91
00:06:56.800 --> 00:07:04.420
That leaves 3 bits for the host address, 2 the power to 3 is 2, 4, 8, 8 minus 2, because

92
00:07:04.420 --> 00:07:11.150
of the network address and the broadcast address, gives us 6 available host addresses. And Class C,

93
00:07:11.200 --> 00:07:13.450
the default subnet mask is /24.

94
00:07:13.570 --> 00:07:19.610
Here, we're using a /29, so we're borrowing 5 bits for the network address. 2 to the power

95
00:07:19.610 --> 00:07:23.010
of 5 is 2, 4, 8, 16, 32.

96
00:07:23.200 --> 00:07:25.990
So, we've got 32 available subnets here.

97
00:07:27.920 --> 00:07:35.220
Valid host addresses, notice that the line is after the 8, so the network addresses are going

98
00:07:35.220 --> 00:07:40.400
to go up in values of 8. The first one will be 200.15.10.0, then 200.15.10.8, then 200.15.10.16, and so on.

99
00:07:40.620 --> 00:07:43.430
So the first subnet, the network address is 200.15.10.0.

100
00:07:43.440 --> 00:07:46.160
The next subnet, the network address is 200.15.10.8,

101
00:07:46.170 --> 00:07:49.470
so the broadcast address for that first subnet must be one less.

102
00:07:49.650 --> 00:07:55.320
It's going to 200.15.10.7, for our example.

103
00:07:55.500 --> 00:08:01.920
So the network address is 200.15.10.0, and the broadcast address is 200.15.10.7, that leaves 200.15.10.1 to 200.15.10.6 available

104
00:08:01.920 --> 00:08:03.510
to be assigned for our hosts.

105
00:08:03.960 --> 00:08:10.050
The next subnet is going to be, I've said already, starts off with 200.15.10.8.

106
00:08:10.200 --> 00:08:11.820
The next one is at 200.15.10.16,

107
00:08:11.820 --> 00:08:19.950
so our broadcast address now must be 200.15.10.15, one less, which leaves the available host addresses of 200.15.10.9

108
00:08:19.950 --> 00:08:21.000
to 200.15.10.14.

109
00:08:21.120 --> 00:08:25.560
And we can go on like this all the way up to 200.15.10.248

110
00:08:25.860 --> 00:08:29.670
is the network address. 200.15.10.255,

111
00:08:29.670 --> 00:08:33.690
the broadcast address. The host addresses 200.15.10.249 to 200.15.10.254.

112
00:08:35.820 --> 00:08:38.789
And we can carry on moving the line back a place,

113
00:08:38.789 --> 00:08:42.750
so we did /31, /30, /29.

114
00:08:42.960 --> 00:08:49.300
We could also do a /28, which is 255.255.255.240.

115
00:08:49.560 --> 00:08:55.920
That is going to give us 16 networks of 14 hosts, each on a Class C.

116
00:08:55.920 --> 00:09:02.040
Again, the default is a /24. If we are using a /28, we've borrowed 4 bits. 4 bits

117
00:09:02.040 --> 00:09:09.560
is 2, 4, 8, 16 available subnets, and after 28, it goes up to 32.

118
00:09:09.570 --> 00:09:17.100
So we've got 4 bits available for our host addressing, that is 2, 4, 8, 16 minus 2 for the hosts,

119
00:09:17.100 --> 00:09:19.380
which gives us 14 available hosts.

120
00:09:20.550 --> 00:09:24.570
Then, we can move the line back again to a /27,

121
00:09:24.570 --> 00:09:31.290
that's going to be borrowing 3 bits. So that is 2, 4, 8 available networks, leaving 5 bits

122
00:09:31.290 --> 00:09:38.430
available for our hosts, which will be 2, 4, 8, 16, 32 minus 2, gives us 30 available hosts.

123
00:09:39.030 --> 00:09:40.860
You can see how I'm getting that now.

124
00:09:41.100 --> 00:09:47.670
A /26 is 4 networks and 62 hosts, a /25 is 2 networks and 126

125
00:09:47.670 --> 00:09:55.020
hosts, and /24 is the default, 1 network with 254

126
00:09:55.020 --> 00:09:55.560
hosts.

127
00:09:57.080 --> 00:10:03.860
Okay, so that's how we carry out subnetting, and figure out how many networks and how many hosts we're

128
00:10:03.860 --> 00:10:11.540
going to have. Next thing to tell you about is Variable Length Subnet Masks (VLSM). With early routing protocols,

129
00:10:11.540 --> 00:10:18.050
like RIPv1, they only supported Fixed Length Subnet Masks (FLSM), which meant you could subnet,

130
00:10:18.350 --> 00:10:23.210
but all subnets in a particular network had to be the same size.

131
00:10:23.480 --> 00:10:30.040
So all of your different subnets had to accommodate 14 hosts, for example, or 30 hosts, for example.

132
00:10:30.320 --> 00:10:36.890
And if you had one subnet that needed up to 30 hosts, you had to have all your subnets at the size of 30 hosts,

133
00:10:36.890 --> 00:10:43.010
or even if one of them only had 3 hosts in it. Then, later routing protocols, they came out with

134
00:10:43.010 --> 00:10:49.400
support for Variable Length Subnet Masks, that means that within the same range, you can have different

135
00:10:49.400 --> 00:10:51.590
sizes of subnets in there to see.

136
00:10:51.590 --> 00:10:54.970
So, say, I've got one part of my network which has got 10 hosts in it.

137
00:10:55.010 --> 00:11:01.300
I could give them 14 available hosts and another part of a network that's got 28 hosts there.

138
00:11:01.460 --> 00:11:07.040
I could give them a subnet mask that gives them 30 available hosts. So, Variable Length Subnet Masking,

139
00:11:07.040 --> 00:11:10.610
it means we can use different length subnet masks within the same network.

140
00:11:10.820 --> 00:11:16.430
This is a good thing because it lets us be much more precise with the size of our networks, and we're

141
00:11:16.430 --> 00:11:18.820
going to be wasting a lot less addresses.

142
00:11:19.250 --> 00:11:20.240
We'll cover

143
00:11:20.240 --> 00:11:24.530
how to do VLSM, Variable Length Subnet Masking, in the next lecture.

