WEBVTT
1
00:00:06.440 --> 00:00:13.550
In this lecture, you'll learn about virtualizing network devices, and the first thing I want to cover

2
00:00:13.550 --> 00:00:20.450
here is how networking works on Type one hypervisor like VMware Vï¿½a ESX.

3
00:00:20.780 --> 00:00:26.510
So it was type one hypervisor, as we were talking about in the last lecture before I show you how it

4
00:00:26.510 --> 00:00:26.840
works.

5
00:00:26.840 --> 00:00:32.070
And it was a quick recap of how switched networking works in traditional networks.

6
00:00:32.420 --> 00:00:38.600
So in the example here, we've got the switch, which has got two servers plugged into it.

7
00:00:38.870 --> 00:00:41.210
The servers here are not virtualize.

8
00:00:41.210 --> 00:00:43.070
These are Bayamon servers.

9
00:00:43.070 --> 00:00:47.630
A bare email server means a server where the operating system is running directly on the hardware.

10
00:00:47.780 --> 00:00:49.550
It's not running a hypervisor.

11
00:00:49.800 --> 00:00:55.130
So we got server one in VLAN 20 with IP address to 10 2014.

12
00:00:55.340 --> 00:01:02.010
And we've got server tattooed on another application which in VLAN 30 IP address handwrote TANDOOR 3.0

13
00:01:02.020 --> 00:01:03.470
TAM one switch.

14
00:01:03.470 --> 00:01:08.660
We configure the physical part connected to server one as an access part and VLAN 20.

15
00:01:08.960 --> 00:01:13.820
The physical part connected to Server two is an Axis Power and VLAN 30.

16
00:01:14.150 --> 00:01:16.910
So right now we've got glia to set up.

17
00:01:16.910 --> 00:01:17.390
Done.

18
00:01:17.630 --> 00:01:23.450
But if we wanted those two servers to be able to communicate with each other very differently or three

19
00:01:23.450 --> 00:01:25.690
subnet, so we would need a router for that.

20
00:01:25.790 --> 00:01:30.500
So much out of our this is a simple configuration.

21
00:01:30.680 --> 00:01:36.440
So you got interface gigabit Ethernet zero swash one point twenty IP address, ten to twenty point one.

22
00:01:36.620 --> 00:01:43.310
It's the default gateway for server one and the other sub interface gig zero SWASH one point thirty

23
00:01:43.460 --> 00:01:48.350
IP address to handle thirty point one is the default gateway for server two.

24
00:01:48.830 --> 00:01:52.370
Now those two servers are able to communicate with each other.

25
00:01:52.400 --> 00:01:55.190
So you already knew how that works on traditional switch networks.

26
00:01:55.600 --> 00:02:03.690
Let's see how things work when we've got multiple virtual machines running on top of a virtualization

27
00:02:03.720 --> 00:02:04.090
torched.

28
00:02:05.090 --> 00:02:12.490
So the blue box here is a single physical host and we've got two virtual machines running on there,

29
00:02:12.500 --> 00:02:17.770
it's the same as the servers we had in the last slide, but we've got them running as virtual machines

30
00:02:17.790 --> 00:02:17.930
there.

31
00:02:17.960 --> 00:02:25.220
So we've got virtual machine one, the same VLAN 20 iPads out to out 2010 on Virtual Machine two and

32
00:02:25.220 --> 00:02:28.560
view on 30 IP address, hand in hand, third hand.

33
00:02:28.910 --> 00:02:35.870
We're also going to need an IP address on the host, on the underlying server hardware itself as well

34
00:02:36.140 --> 00:02:40.550
to be able to manage that with our hypervisor software.

35
00:02:40.760 --> 00:02:48.230
So for that, we've got the management IP address on their hand hand, Dalton, Dalton and Watson Valentine.

36
00:02:48.590 --> 00:02:56.330
Now, the problem that we have is in an example here, that one physical box is connected up to the

37
00:02:56.330 --> 00:03:00.070
switch, the physical switch with a single cable.

38
00:03:00.620 --> 00:03:08.060
So when traffic goes down to that host, how does it know whether to send that to the management IP

39
00:03:08.060 --> 00:03:12.920
address, the virtual virtual machine one or virtual machine to another in different Valencia?

40
00:03:12.950 --> 00:03:16.040
How is the villain going to work as well?

41
00:03:16.730 --> 00:03:24.470
Well, the way that it works is it uses a virtual switch to yeshivish switch up at the top, but actually

42
00:03:24.470 --> 00:03:26.360
a physical switch outside the box.

43
00:03:26.700 --> 00:03:29.450
The box is connected to the physical cable.

44
00:03:29.840 --> 00:03:35.690
The switch is highlighted in red is a switch that is running in software.

45
00:03:35.720 --> 00:03:38.360
So it's not an actual physical thing.

46
00:03:39.560 --> 00:03:47.240
We connect the physical part on the horse up to the physical switch and we can figure it out as a trunk

47
00:03:47.240 --> 00:03:47.590
part.

48
00:03:47.600 --> 00:03:54.440
So before we had access parts that were connected to individual servers, now traffic is going to multiple

49
00:03:54.440 --> 00:03:58.040
different virtual servers that are in different VILLINES.

50
00:03:58.130 --> 00:04:01.130
So we need to configure that as a trunk part.

51
00:04:01.310 --> 00:04:07.070
And whenever traffic is getting sent down a virtual machine one, it will be tagged as view on 20 when

52
00:04:07.070 --> 00:04:08.330
it goes into virtual machine.

53
00:04:08.330 --> 00:04:10.310
Two will be tagged as V on Thursday.

54
00:04:10.460 --> 00:04:13.910
When it's for management, it will be tagged as VLAN 10.

55
00:04:14.180 --> 00:04:23.360
When the traffic comes in to the virtual host, it looks at the tag and based on the tag, it knows

56
00:04:23.360 --> 00:04:24.650
where to send to traffic.

57
00:04:24.830 --> 00:04:28.610
So right now that is all layer to information.

58
00:04:28.790 --> 00:04:31.130
Traffic can get down to our virtual machines.

59
00:04:31.280 --> 00:04:36.170
We don't have any layer free configuration here yet, so the virtual machines won't be able to communicate

60
00:04:36.170 --> 00:04:36.830
with each other.

61
00:04:36.980 --> 00:04:42.590
If we wanted to do that, we could do the same as we did in the previous slide, where upstream we've

62
00:04:42.590 --> 00:04:48.820
got a router and it's acting as the default gateway for the three different IP subnets.

63
00:04:49.610 --> 00:04:55.550
Now, with the virtual switch that you see here that is highlighted in red, that is running in software,

64
00:04:55.820 --> 00:05:04.400
if it's in VMware, they're going to be using their own netiv software for very used to be support for

65
00:05:04.430 --> 00:05:10.780
the Cisco software product, which was the Nexus One, thousand of which was a software switch.

66
00:05:10.790 --> 00:05:13.310
So, again, you couldn't buy this as a physical thing.

67
00:05:13.490 --> 00:05:20.150
It was software that you installed in your VMware environment and not replaced their native switch.

68
00:05:20.390 --> 00:05:24.530
The Nexus One thousand V is still supported and Microsoft hypervisor.

69
00:05:24.680 --> 00:05:27.340
But support is going for it in VMware now.

70
00:05:27.590 --> 00:05:34.160
So the example you see how it's working for the networking for our type one hypervisor.

71
00:05:35.280 --> 00:05:43.620
Next thing that we're going to look at is if I go back a slide, this is fine if you're running this

72
00:05:43.620 --> 00:05:52.320
in your own data center, but let's say that these virtual machines now are being run in a cloud environment

73
00:05:52.740 --> 00:05:58.820
and you want to have your own router to control the routing between them.

74
00:05:59.190 --> 00:06:04.200
You don't need to do that because when you do deploy this in a cloud environment, the routing can be

75
00:06:04.200 --> 00:06:07.650
taken care of for you by the cloud service provider.

76
00:06:07.890 --> 00:06:09.360
But maybe you don't want not.

77
00:06:09.390 --> 00:06:14.540
Maybe you want to implement some advanced routing features and you need to use your own radar.

78
00:06:14.820 --> 00:06:20.490
Well, they're not going to let you put a physical or in their facility.

79
00:06:20.700 --> 00:06:28.320
So what you can do instead is you can use a virtual drive to the virtual router runs as a virtual machine

80
00:06:28.320 --> 00:06:29.190
itself.

81
00:06:29.430 --> 00:06:31.690
So now we've got we've got big blue box.

82
00:06:31.690 --> 00:06:37.050
You see here again is one physical box on physical horse.

83
00:06:37.290 --> 00:06:44.940
We are running virtual machine, one IP address, 10, 20, top 10, virtual machine to 10 to 20 DOTAN

84
00:06:45.090 --> 00:06:49.050
and then we run another virtual machine, which is not running Windows.

85
00:06:49.050 --> 00:06:50.160
It's not running Linux.

86
00:06:50.310 --> 00:06:59.550
It's running routing software like Cisco, CSR one thousand V and it can write between those different

87
00:06:59.550 --> 00:07:00.540
virtual machines.

88
00:07:01.260 --> 00:07:05.730
If you're looking at this, by the way, and thinking, well, what about if I've got virtual machines

89
00:07:05.730 --> 00:07:08.340
running on another physical horse and another box?

90
00:07:08.560 --> 00:07:10.190
Yes, you can do that as well.

91
00:07:10.200 --> 00:07:12.570
And you can still have your layer two in your layer.

92
00:07:12.570 --> 00:07:19.020
Three connect to the AI between different physical boxes and still run all of your devices as virtual

93
00:07:19.020 --> 00:07:19.560
machines.

94
00:07:19.740 --> 00:07:27.360
OK, so that was we are two and we are free on our different options on type one hypervisor.

95
00:07:27.390 --> 00:07:32.490
Next, let's look at some other types of virtualization we can do for network devices.

96
00:07:33.330 --> 00:07:37.920
First one is looking at virtualizing our firewalls.

97
00:07:38.860 --> 00:07:45.430
Cisco have got the firewall called the AC, it's the adaptive security appliance, and it supports being

98
00:07:45.430 --> 00:07:46.150
virtualize.

99
00:07:46.390 --> 00:07:50.410
The big blue box that you see here is a single physical box.

100
00:07:50.710 --> 00:07:56.200
And to virtualize, what we can do is we can create separate security contacts.

101
00:07:56.500 --> 00:08:00.730
So the admin context has got global administrative configuration.

102
00:08:00.970 --> 00:08:07.540
We configure a customer one context, which has got customer ones configuration, and we configure a

103
00:08:07.540 --> 00:08:11.020
customer to context, which has got customer 2s configuration.

104
00:08:11.290 --> 00:08:19.930
Customer one, their traffic is going through on interfaces gigabit zero one and zero swash to customer

105
00:08:19.940 --> 00:08:26.200
to traffic is going through interfaces gigabit Ethernet zero swash three and zero swash for the different

106
00:08:26.200 --> 00:08:29.980
interfaces are dedicated to the different contacts.

107
00:08:30.310 --> 00:08:36.250
Now when you do it like this, those two contacts act and behave as if they're two completely separate

108
00:08:36.250 --> 00:08:37.600
physical firewalls.

109
00:08:37.840 --> 00:08:44.200
And you could also give the customers access to manage their own devices because we have got separate

110
00:08:44.200 --> 00:08:45.190
configurations.

111
00:08:45.430 --> 00:08:47.500
You could have administrators for customer.

112
00:08:47.500 --> 00:08:53.680
One could assess each and to the customer one context and configure it administrators for customer two.

113
00:08:53.770 --> 00:08:56.110
You could allow them to do their own configuration.

114
00:08:56.290 --> 00:09:00.580
They could S.H. into the customer to contact and do their configuration.

115
00:09:01.000 --> 00:09:06.970
The two sets of administrators would not even know that another context existed on that same physical

116
00:09:06.970 --> 00:09:07.390
box.

117
00:09:07.630 --> 00:09:11.200
They appear to be separate physical firewalls and match how they act.

118
00:09:11.620 --> 00:09:18.490
The benefit that we get from doing this is it can save money because we just buy one firewall rather

119
00:09:18.490 --> 00:09:20.800
than buying two physical firewalls.

120
00:09:21.100 --> 00:09:26.620
And if you want it to have redundancy, well, if you weren't using virtualization, you would need

121
00:09:26.620 --> 00:09:32.470
two firewalls for customer and two firewalls for customer B, but using virtualization, we can just

122
00:09:32.470 --> 00:09:34.090
buy two firewalls.

123
00:09:34.210 --> 00:09:38.870
And that gives us the redundancy for both customer A on customer B as well.

124
00:09:39.520 --> 00:09:41.650
OK, so that was our firewall virtualization.

125
00:09:42.040 --> 00:09:48.850
You can't do this type of virtualization on as well, but only on the really high end service providers.

126
00:09:49.150 --> 00:09:54.550
What you'll find support for on your normal enterprise level is VR.

127
00:09:54.920 --> 00:10:02.080
VR stands for virtual routing and forwarding and you can see here we've got a single physical router

128
00:10:02.410 --> 00:10:08.560
and we can have separate routing tables on there for different customers or different departments.

129
00:10:08.830 --> 00:10:13.900
So, for example, here we've got customer one and whenever rates come in, an interface gigabit Ethernet

130
00:10:13.900 --> 00:10:19.360
zero one, we know that they go into the customer one routing table whenever I come in on interface

131
00:10:19.360 --> 00:10:24.160
gigabit Ethernet 003 that goes into the customer to routing table.

132
00:10:24.490 --> 00:10:30.430
Now, with the example here, you couldn't give the customers or administrators access to the right

133
00:10:30.430 --> 00:10:33.840
or to configure it because there is a single configuration.

134
00:10:34.030 --> 00:10:39.250
So when you're in that configuration, you can see information for both customer one and customer two

135
00:10:39.250 --> 00:10:39.680
as well.

136
00:10:39.820 --> 00:10:46.480
So really, it has to be just the service provider that are of the higher level of hierarchy that has

137
00:10:46.480 --> 00:10:48.700
access to this previous example.

138
00:10:49.120 --> 00:10:50.710
They've got their own configurations.

139
00:10:50.710 --> 00:10:53.250
You can give them access with Vaughters.

140
00:10:53.260 --> 00:10:56.440
There's just one configuration, so you can't give them access to that.

141
00:10:56.710 --> 00:11:03.610
Where you'll most often Cevat after being used is, for example, where free VPN is going.

142
00:11:03.610 --> 00:11:06.880
Back to our example from the earlier section.

143
00:11:07.120 --> 00:11:09.370
We've got the service provider network here.

144
00:11:09.370 --> 00:11:12.010
They've got PD and New York and Boston.

145
00:11:12.850 --> 00:11:21.280
We prevision layer three VPN for customer E and you see the interfaces with customer E are connected

146
00:11:21.280 --> 00:11:21.670
and on.

147
00:11:21.880 --> 00:11:24.570
We assign those through very customer.

148
00:11:25.090 --> 00:11:31.690
So whenever a customer is received on not interface, we know it's for customer E and we can send it

149
00:11:31.690 --> 00:11:32.470
to the customer.

150
00:11:32.490 --> 00:11:34.330
We are on the other side.

151
00:11:34.660 --> 00:11:40.800
We also have customer B who are connected into the same physical diverters as well.

152
00:11:41.080 --> 00:11:47.710
We are saying those interfaces to VHF customer B, so whenever a customer Birute comes in, it goes

153
00:11:47.710 --> 00:11:54.180
into the customer B writing table and it will be advertised to the customer B on the other side by having

154
00:11:54.190 --> 00:12:00.220
separate routing tables separate via graphs for customer E and customer B, that keeps them separate

155
00:12:00.310 --> 00:12:04.630
and it makes sure that we never have rights being mingled with each other, which would obviously be

156
00:12:04.630 --> 00:12:05.710
a security issue.

157
00:12:07.380 --> 00:12:15.280
OK, so to summarize virtualization, it supports running multiple virtual systems on a single physical

158
00:12:15.280 --> 00:12:15.750
system.

159
00:12:16.030 --> 00:12:20.050
This provides flexibility and it reduces costs.

160
00:12:20.590 --> 00:12:25.750
If you are wondering about redundancy, because that could be a concern, you may be thinking, well,

161
00:12:25.780 --> 00:12:30.130
wait a minute, I've got multiple virtual machines running on one single physical box.

162
00:12:30.430 --> 00:12:33.130
What happens if that physical box blows up?

163
00:12:33.130 --> 00:12:34.920
I've lost all my virtual machines.

164
00:12:35.230 --> 00:12:37.930
Well, you can still support redundancies when in fact.

165
00:12:38.110 --> 00:12:44.080
Honesty is often easier to implement in a virtual environment than when you're using dedicated physical

166
00:12:44.080 --> 00:12:50.020
appliances, the redundancy supported by adding multiple physical systems, which each have virtual

167
00:12:50.020 --> 00:12:51.390
systems running on them.

168
00:12:51.550 --> 00:12:57.010
And typically it's very easy to move the virtual machines from one underlying physical box to another

169
00:12:57.010 --> 00:12:57.190
one.

170
00:12:57.520 --> 00:13:02.610
So if you have a physical failure, you just move your virtual machines to another box.

171
00:13:02.800 --> 00:13:05.840
You can automate and you can be up and running very quickly.

172
00:13:06.760 --> 00:13:08.620
OK, so much virtualization, Don.

173
00:13:08.740 --> 00:13:15.220
I just want to mention one other thing while we're here as well, which is about clustering and clustering

174
00:13:15.220 --> 00:13:18.600
is kind of like the opposite of virtualization.

175
00:13:18.610 --> 00:13:20.170
We look back at virtualization.

176
00:13:20.350 --> 00:13:25.810
Virtualization supports running multiple virtual systems on a single physical system.

177
00:13:26.050 --> 00:13:27.880
Clustering is the other way around.

178
00:13:28.150 --> 00:13:33.780
Clustering supports, combining multiple physical systems into a single virtual system.

179
00:13:33.910 --> 00:13:40.600
And you can see here we're doing that with our AC firewalls again, where we've got four physical firewalls

180
00:13:40.810 --> 00:13:42.460
that we can configure them.

181
00:13:42.460 --> 00:13:46.120
So they operate like very one single firewall.

182
00:13:46.390 --> 00:13:48.760
The reason you could do that is for redundancy.

183
00:13:48.760 --> 00:13:53.010
If any one of the four fails, the other three keep operating, profit keeps going through.

184
00:13:53.230 --> 00:13:58.390
It also increases performance as well, because now we've got four times with three that we would have

185
00:13:58.390 --> 00:13:59.950
if we just had the one firewall.

186
00:14:00.220 --> 00:14:03.820
OK, that is it for virtualization.

187
00:14:04.090 --> 00:14:06.010
See it in the next lecture.

188
00:14:06.130 --> 00:14:08.770
We will get more into the cloud computing again.

