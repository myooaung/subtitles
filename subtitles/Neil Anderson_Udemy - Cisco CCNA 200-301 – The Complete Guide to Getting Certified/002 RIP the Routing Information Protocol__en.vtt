WEBVTT
1
00:00:06.480 --> 00:00:13.760
In this lecture, you'll learn about RIP, the Routing Information Protocol.

2
00:00:13.770 --> 00:00:17.600
RIP is a Distance Vector routing protocol.

3
00:00:17.700 --> 00:00:21.880
We spoke earlier about the difference between Distance Vector and the Link State routing

4
00:00:21.880 --> 00:00:25.220
protocols. So you know that it's Distance Vector,

5
00:00:25.230 --> 00:00:28.890
so it's going to be using routing by rumour.

6
00:00:29.160 --> 00:00:32.290
It uses hop count as its metric.

7
00:00:32.340 --> 00:00:39.810
So let's say the Router1 wants to get to the 10.1.0.0 network, and to get there,

8
00:00:39.810 --> 00:00:48.240
it needs to go via R2, R3, and R4. Then, that network would be 3 hops away. A hop is a

9
00:00:48.280 --> 00:00:55.740
router that the traffic has to go through to get to that final destination. The maximum hop count is

10
00:00:55.740 --> 00:01:00.270
15, so there's a bit of a scalability limitation with RIP.

11
00:01:00.270 --> 00:01:08.090
So, it's not really used except in lab or demo environments. It will perform Equal Cost Multi Path (ECMP),

12
00:01:08.090 --> 00:01:11.100
up to 4 equal cost paths

13
00:01:11.100 --> 00:01:21.120
by default. We're currently on RIP version 2 (RIPv2), before that was, obviously, RIP version 1 (RIPv1). RIPv1 is a legacy

14
00:01:21.120 --> 00:01:25.350
protocol which is typically not used at all anymore.

15
00:01:25.410 --> 00:01:27.640
RIPv2 isn't used very often.

16
00:01:27.660 --> 00:01:35.380
RIPv1 really isn't used at all anymore, although, it is still supported on Cisco routers. RIPv1 has 

17
00:01:35.520 --> 00:01:39.030
limitations even worse than we have with RIPv2.

18
00:01:39.150 --> 00:01:47.070
It doesn't send subnet mask information with routing updates, so Variable Length Subnet Masks (VSLM) is

19
00:01:47.070 --> 00:01:48.840
not supported.

20
00:01:48.900 --> 00:01:55.860
You don't have to use classful networks with RIPv1. For example, all of your networks could be

21
00:01:55.860 --> 00:02:02.940
a /28, and that would work just fine as long as they are all /28. But you couldn't have some

22
00:02:02.940 --> 00:02:07.350
/24, some /28, and some /30, for example.

23
00:02:07.350 --> 00:02:10.430
They all have to be the same. RIPv2

24
00:02:10.440 --> 00:02:19.020
does support VLSM. RIPv1 updates are sent every 30 seconds as broadcast traffic, so everything

25
00:02:19.020 --> 00:02:22.740
that gets hit by the traffic in that subnet has to process it.

26
00:02:22.830 --> 00:02:27.820
RIPv2 uses multicast address, 224.0.0.9,

27
00:02:27.870 --> 00:02:34.650
so it's more efficient than RIPv1 is. RIPv2 supports authentication,

28
00:02:34.830 --> 00:02:41.520
RIPv1 does not. With authentication, we can put a password on the router on both sides of the link,

29
00:02:41.730 --> 00:02:46.700
so they will not form an adjacency unless we both have the same matching password.

30
00:02:46.770 --> 00:02:49.010
It gives us some better security.

31
00:02:49.170 --> 00:02:52.860
Authentication is supported in all the modern routing protocols,

32
00:02:52.920 --> 00:03:01.440
it's not covered on the CCNA exam though. We also have RIPng, as well as RIPv1 and on RIPv2.

33
00:03:01.440 --> 00:03:07.290
RIPng is RIP next generation, that supports IPv6 networks.

34
00:03:07.350 --> 00:03:10.350
It's not covered on the CCNA exam.

35
00:03:10.560 --> 00:03:17.820
So for the current version of CCNA, you really only need to know RIPv2. To configure RIP, pretty

36
00:03:17.820 --> 00:03:25.230
simple, at global config we say 'router rip' and then, optionally, we're going to say 'version 2'. We do

37
00:03:25.230 --> 00:03:31.800
want it to be running the latest version, and then to specify the interfaces that you want RIP to be running

38
00:03:31.800 --> 00:03:33.660
on and to be advertised,

39
00:03:33.660 --> 00:03:40.530
we use the 'network' command. So in this example, we've said 'network 10.0.0.0'. All interfaces

40
00:03:40.530 --> 00:03:47.300
that begin with 10 will start sending out RIP hello messages and try to form an adjacency.

41
00:03:47.430 --> 00:03:53.670
When they do form a ppeering relationship with the router on the other side of the link, they will advertise

42
00:03:53.730 --> 00:04:01.980
all of the 10.X.X.X networks to that router. The network command should reference a classful network, and no

43
00:04:01.980 --> 00:04:08.660
subnet mask is specified. For example, if on the router, we had an interface with IP address

44
00:04:08.660 --> 00:04:12.020
10.1.1.1/24,

45
00:04:12.030 --> 00:04:20.750
we don't say 'network 10.1.1.0', we say 'network 10.0.0.0'. RIP will automatically

46
00:04:20.750 --> 00:04:25.310
summarize routes to the classful boundary by default.

47
00:04:25.310 --> 00:04:33.020
For example, if you've got an interface with IP address 192.168.10.1/30, and

48
00:04:33.020 --> 00:04:36.050
under RIP, you include that with a network statement,

49
00:04:36.140 --> 00:04:44.600
it will be advertised as 192.168.10.0/24. Because any address that begins with

50
00:04:44.600 --> 00:04:45.590
192

51
00:04:45.590 --> 00:04:49.910
is a Class C address, which has got a default mask of /24.

52
00:04:49.970 --> 00:04:53.720
So in our example, rather than advertising it as a /30,

53
00:04:53.720 --> 00:04:57.170
it will summarize it to a /24.

54
00:04:57.260 --> 00:05:03.980
If we had an interface with IP address 172.16.10.1/30, that will be advertised

55
00:05:03.980 --> 00:05:10.630
as 172.16.0.0/16, because that's a Class B address and it would default to a

56
00:05:10.630 --> 00:05:11.580
/16.

57
00:05:11.840 --> 00:05:20.960
That is almost never desirable. Unless by some magical coincidence your network, the summarization

58
00:05:20.990 --> 00:05:25.010
does fall exactly in the classful boundaries, in which case, it would be fine.

59
00:05:25.220 --> 00:05:31.220
Your network, modern real networks, aren't designed that they all fall into the summarization ranges

60
00:05:31.430 --> 00:05:38.330
exactly on classical boundaries. So, if you leave auto-summary turned on, it's liable to cause havoc on

61
00:05:38.330 --> 00:05:42.600
your network, possibly blackholing, dropping some of your traffic.

62
00:05:42.690 --> 00:05:53.590
So, we always disable auto-summary. To do that, the commands is 'router rip' and then 'no auto-summary'. So we don't

63
00:05:53.590 --> 00:05:59.920
want to do the automatic summarization, but we probably still will want to do summarization manually.

64
00:06:00.340 --> 00:06:02.040
To do that,

65
00:06:02.050 --> 00:06:09.730
the command is 'ip summary-address'. So, we would do this to get control of exactly how we are summarizing.

66
00:06:10.090 --> 00:06:11.140
When we do this,

67
00:06:11.140 --> 00:06:17.880
the individual summarized routes that fall within the larger range are not going to be advertised, only the summary

68
00:06:17.930 --> 00:06:18.630
route.

69
00:06:18.640 --> 00:06:24.580
So in the neighbor router that learns the route, it's not going to learn all those different individual route.

70
00:06:24.580 --> 00:06:31.390
It will only learn the summary route. It's more efficient and it takes up less memory. It also compartmentalizes

71
00:06:31.450 --> 00:06:33.190
the different parts of your network.

72
00:06:33.280 --> 00:06:39.630
So if you have an outage anywhere, it's going to limit the impact that that has network wide.

73
00:06:39.790 --> 00:06:48.440
So to configure this, while looking at our example here, on router R2, you see that all of the 10.1.X.X

74
00:06:48.470 --> 00:06:54.340
networks are over to the left, out interface FastEthernet1/0. All of the 10.0.X.X networks are

75
00:06:54.340 --> 00:07:00.880
over to the right, out interface FastEthernet0/0 on router R2. So, what we're going to do in the

76
00:07:00.880 --> 00:07:09.700
example is R2 is going to advertise all of the 10.0.X.X networks to R3 as a single summary

77
00:07:09.700 --> 00:07:09.990
route.

78
00:07:10.300 --> 00:07:17.200
So rather than advertising 10.0.0.0/24, and 10.0.1.0/24, and

79
00:07:17.200 --> 00:07:19.740
10.0.2.0/24.

80
00:07:19.750 --> 00:07:26.370
It's just going to advertise 10.0.0.0/16. So R3 is only going to learn

81
00:07:26.400 --> 00:07:27.820
that one summary route,

82
00:07:28.060 --> 00:07:34.960
rather than the three individual /24 routes. So we configure this at the interface level, and you

83
00:07:34.960 --> 00:07:38.470
configure it on the interface that you're sending the summary route

84
00:07:38.470 --> 00:07:39.870
out of.

85
00:07:39.900 --> 00:07:45.900
So all of the 10.0.X.X networks are available out interface FastEthernet0/0, but we're going

86
00:07:45.900 --> 00:07:54.140
to advertise that to R3, out interface FastEthernet1/0. So we configure this on interface fastEthernet1/0,

87
00:07:54.140 --> 00:07:58.780
the interface we're sending the summary route out of. And then to configure the summary, we

88
00:07:58.780 --> 00:08:00.680
say 'ip summary-address rip

89
00:08:00.700 --> 00:08:02.800
10.0.0.0',

90
00:08:02.800 --> 00:08:08.520
and then the subnet mask, 255.255.0.0. So it will just send that one route of

91
00:08:08.520 --> 00:08:12.980
10.0.0.0/16 to router R3.

92
00:08:13.330 --> 00:08:21.070
To be honest though, RIP is only used in really small networks, or for labs, or for demos.

93
00:08:21.070 --> 00:08:27.480
So your network is probably not going to be that big, that you're going to care too much about summarization anyway.

94
00:08:27.500 --> 00:08:34.630
To verify RIP, to verify any routing protocol that we've got running on a router, we can say

95
00:08:34.640 --> 00:08:42.750
'show ip protocols'. So we've done that in the example here, and we can see that the routing protocol was RIP. RIP is

96
00:08:42.840 --> 00:08:43.730
running.

97
00:08:43.799 --> 00:08:50.220
I can also see the interfaces that RIP is running on. So it's running on FastEthernet0/0, FastEthernet1/0,

98
00:08:50.230 --> 00:08:55.650
FastEthernet2/0, and FastEthernet3/0, and I must have just put this command and not long

99
00:08:55.680 --> 00:09:02.310
after configuring it, because it's only sent and received two updates on those interfaces.

100
00:09:02.310 --> 00:09:09.970
I can see it will do equal cost load balancing up to 4 maximum paths. It's routing for the 10.0.0.0

101
00:09:09.970 --> 00:09:17.670
network, and it's got neighbors' routing information sources at 10.0.0.2, and 10.0.3.2.

102
00:09:17.690 --> 00:09:25.390
The distance is the Administrative Distance (AD), which defaults to 120 for RIP.

103
00:09:25.390 --> 00:09:33.190
If I wanted to see my RIP configuration, I can do a 'show run', and then pipe '|', and then 'section rip', rather

104
00:09:33.190 --> 00:09:37.900
than doing a 'show run' and having to scroll through the whole config to the RIP section,

105
00:09:37.900 --> 00:09:39.720
This will show me just the RIP command,

106
00:09:39.730 --> 00:09:42.110
so it's quite convenient.

107
00:09:42.730 --> 00:09:48.540
And once I've configured RIP, I'm going to want to check that I do have RIP routes in routing table.

108
00:09:48.550 --> 00:09:55.420
So my standard command for that is 'show IP route'. In the example here, I can see that I've got 4 routes

109
00:09:55.450 --> 00:09:57.250
that were learned via RIP.

110
00:09:57.490 --> 00:10:02.980
I can see that they are in the column in left, it says 'R', means they were learned by RIP. And I can

111
00:10:02.980 --> 00:10:10.090
see that the Administrative Distance is 120, and then I've got a slash '/', after that

112
00:10:10.090 --> 00:10:18.080
is the metric, that is how many hop counts that destination network is away, the next hop address

113
00:10:18.130 --> 00:10:27.010
when I received the last update, and the outgoing interface. And finally, I can also check the RIP database.

114
00:10:27.020 --> 00:10:34.210
What this is useful for is if you've configured RIP and then you can see that you've got RIP neighbors,

115
00:10:34.510 --> 00:10:39.390
but you look in the routing table and you're not seeing the expected routes in there.

116
00:10:39.700 --> 00:10:44.140
Well, maybe, the routes weren't even received at all.

117
00:10:44.170 --> 00:10:49.750
So the way that you can check that is with the 'show ip rip database', or maybe the routes were received but

118
00:10:49.750 --> 00:10:55.810
they're not the best route. So to check if the routes were received at all by RIP, whether or not they made

119
00:10:55.810 --> 00:10:57.700
it in routing table or not,

120
00:10:57.700 --> 00:11:02.440
we can do a 'show ip rip database'. Next thing to cover

121
00:11:02.440 --> 00:11:06.200
here is default route injection.

122
00:11:06.310 --> 00:11:13.450
This is where we have got a default static route for all traffic probably going out to the Internet, and

123
00:11:13.450 --> 00:11:18.350
we don't want to have to configure a default static route on every single router.

124
00:11:18.670 --> 00:11:24.620
So what we'll do is on the final outbound router, which is connected out to the Internet,

125
00:11:24.640 --> 00:11:26.440
we will configure a default

126
00:11:26.440 --> 00:11:31.560
static route there, and we will then advertise, it inject it into RIP,

127
00:11:31.690 --> 00:11:37.890
so all of our other internal routers will learn about it automatically. Saves us having to do a static route

128
00:11:37.890 --> 00:11:41.210
for it on every single router in the organization.

129
00:11:41.210 --> 00:11:46.460
So in the example here, it's R4 that is connected to the Internet.

130
00:11:46.820 --> 00:11:50.450
So on R4, I say 'ip route

131
00:11:50.610 --> 00:11:54.550
0.0.0.0 0.0.0.0',

132
00:11:54.580 --> 00:12:02.170
so it's a default static route, with the next hop address of 203.0.113.2.

133
00:12:02.170 --> 00:12:09.760
I then want to inject that into RIP, so I say 'router rip' and 'default-information originate'. So that

134
00:12:09.850 --> 00:12:17.410
default static route will be injected into RIP, and it will be advertised to R3 and R5, from R4, and

135
00:12:17.410 --> 00:12:24.440
then they will advertise it on further inbound into my other internal RIP routers. If I now do a

136
00:12:24.450 --> 00:12:27.710
'show ip route', so this is on R1.

137
00:12:27.880 --> 00:12:33.050
If I go back to the topology diagram, you see that R1 is all the way over on the right.

138
00:12:33.250 --> 00:12:40.650
It will have learned this because I configured it on R4. And on R1, I do have a RIP route for

139
00:12:40.740 --> 00:12:50.380
0.0.0.0/0, so that's a default static route. The Administrative Distance is 120 because it is RIP. The hop count is 2,

140
00:12:50.600 --> 00:12:55.360
and I can see that my next hop address is to 10.0.3.2, out interface

141
00:12:55.360 --> 00:12:58.120
FastEthernet3/0.

142
00:12:58.150 --> 00:13:01.280
Okay, that was everything I needed to tell you about

143
00:13:01.330 --> 00:13:02.380
RIP here.

144
00:13:02.380 --> 00:13:08.380
I'll see you in the next lecture for a lab demo of a basic RIP configuration.

