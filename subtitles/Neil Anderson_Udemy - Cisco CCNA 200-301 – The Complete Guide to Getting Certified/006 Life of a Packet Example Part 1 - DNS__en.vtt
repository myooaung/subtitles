WEBVTT
1
00:00:06.400 --> 00:00:09.520
This lecture is a big deal.

2
00:00:09.520 --> 00:00:18.070
It's the culmination of everything that we covered already, and we're going to walk through the life

3
00:00:18.070 --> 00:00:27.850
of a packet from the sender through to the receiver and how everything works together to make that possible.

4
00:00:27.850 --> 00:00:31.580
So, really it's a review of what we covered already.

5
00:00:31.600 --> 00:00:37.720
This is going to tie everything together, and it's going to prove to you that you now know the fundamentals

6
00:00:37.720 --> 00:00:39.850
of IP networking.

7
00:00:39.850 --> 00:00:50.290
So in the example here, we've got Host A on the left, and it's going to send some HTTP traffic to our

8
00:00:50.290 --> 00:00:51.100
Web Server

9
00:00:51.100 --> 00:01:00.100
over on the right, which is www.flackbox.com. It's going to use the FQDN to send the traffic.

10
00:01:00.340 --> 00:01:08.980
So, it's also going to need to resolve that FQDN name to the IP address using DNS.

11
00:01:08.980 --> 00:01:11.170
Also, it's a routed network,

12
00:01:11.170 --> 00:01:17.200
we've got different IP subnets there, and we've got a couple of routers in the middle of the topology.

13
00:01:17.200 --> 00:01:26.470
I've deliberately included multiple subnets, routers, and a DNS Server because I want it to mimic what you

14
00:01:26.470 --> 00:01:32.860
would see on real world network because I want you to be confident that you can work on your real work

15
00:01:32.860 --> 00:01:37.910
networks, and you understand how IP networking actually works.

16
00:01:38.080 --> 00:01:41.580
Because of that, there is quite a bit to this example,

17
00:01:41.590 --> 00:01:46.400
so it's going to take a little while. I'm going to split this into two videos.

18
00:01:46.510 --> 00:01:57.310
The first part will cover resolving the FQDN to the IP address by DNS. And then, the second video will

19
00:01:57.310 --> 00:01:59.670
cover the HTTP traffic.

20
00:01:59.680 --> 00:02:05.280
Okay, so let's walk through how this is going to work right from the start.

21
00:02:05.320 --> 00:02:10.509
So again, we're going to use the OSI stack model for this.

22
00:02:10.509 --> 00:02:14.110
Don't worry, this is pretty much the last time you'll see it in the course

23
00:02:14.120 --> 00:02:18.430
now, but it's really fundamental to networking works.

24
00:02:18.430 --> 00:02:20.800
So, that's why you've seen it so many times.

25
00:02:20.800 --> 00:02:28.480
So, one more time, the OSI reference model. We're going to be composing that web traffic and sending it

26
00:02:28.480 --> 00:02:31.140
to the Web Server from our source on the left.

27
00:02:31.180 --> 00:02:37.510
So, it will compose the packet starting off with the information at the Application Layer, that will then

28
00:02:37.510 --> 00:02:43.820
be encapsulated in the Presentation Layer header, and then that will be encapsulated in the Session Layer

29
00:02:43.840 --> 00:02:44.580
header.

30
00:02:44.620 --> 00:02:52.360
Then, we get down to the really important information for networking, so Layer 4, the Transport Layer.

31
00:02:52.390 --> 00:03:00.520
This is web traffic, so it's going to be sent with TCP, and the destination port is going to be Port 80.

32
00:03:00.550 --> 00:03:09.430
Then, when the sender on the left is composing this web traffic, it needs to make the Layer 3 header

33
00:03:09.430 --> 00:03:17.740
next, where it needs to enter the destination IP address, and it doesn't know what the destination IP

34
00:03:17.740 --> 00:03:22.250
address is because the user just opened up a browser and entered in there

35
00:03:22.250 --> 00:03:30.730
www.flackbox.com. So, the sender will need to resolve that to an IP address to complete this

36
00:03:30.730 --> 00:03:38.760
packet, and it's going to use DNS for that. Host A, which is at 10.10.10.10/24,

37
00:03:39.060 --> 00:03:45.730
wants to send a packet to the FQDN of www.flackbox.com, but it doesn't know the destination

38
00:03:45.760 --> 00:03:53.170
IP address. So it will hold onto that packet, and in the meantime, it will send the DNS request to its

39
00:03:53.170 --> 00:04:01.900
DNS Server at 10.10.100.10. So the host already knows its IP address, its subnet mask, its

40
00:04:01.900 --> 00:04:10.090
default gateway, and its DNS Server. Host A will compare its IP address and subnet mask to the destination

41
00:04:10.120 --> 00:04:16.930
address of the DNS Server, and it sees that it's on a different IP subnet, so the DNS request will need

42
00:04:16.930 --> 00:04:25.300
to be sent via its default gateway. Host A will hold the DNS request and send a broadcast ARP request

43
00:04:25.300 --> 00:04:31.810
for its default gateway, which is at 10.10.10.1. So, you can see that in the diagram

44
00:04:31.810 --> 00:04:39.100
here. Host A sends an ARP request, it comes from 10.10.10.10, it says it's looking for its default

45
00:04:39.130 --> 00:04:43.850
gateway 10.10.10.1, and it says, "Hey, what's your MAC address."

46
00:04:43.870 --> 00:04:49.720
So, that comes from a source MAC of 1111.2222.3333, and it goes to a destination MAC of the Layer 2

47
00:04:49.720 --> 00:04:58.390
broadcast address of FFFF.FFFF.FFFF. The ARP request will be received by Switch 1 on the left. Switch 1

48
00:04:58.390 --> 00:05:05.080
will add an entry in its MAC address table, mapping Host A's MAC address of 1111.2222.3333 to

49
00:05:05.080 --> 00:05:11.890
Port 1. Switch 1 will then flood broadcast traffic out all ports apart from the one that it was

50
00:05:11.890 --> 00:05:19.480
received on. So, that will go out Port 2. The ARP request is still from 10.10.10.10,

51
00:05:19.660 --> 00:05:24.790
looking for 10.10.10.1, with a source MAC of 1111.2222.3333, a destination

52
00:05:24.790 --> 00:05:31.660
MAC of FFFFF.FFFF.FFFFF. That will hit router A's interface of 10.10.10.1.

53
00:05:31.710 --> 00:05:39.550
Router A will process the ARP request and see that it is for itself. It will then send a unicast

54
00:05:39.610 --> 00:05:47.620
ARP reply back to Host A, and Router A will add an entry for Host A, mapping IP address of

55
00:05:47.620 --> 00:05:53.530
10.10.10.10 to the MAC address of 1111.2222.3333, and that will be added to its ARP cache.

56
00:05:55.420 --> 00:06:03.580
It will then send the ARP reply. Switch 1 will receive that, and it will add an entry in its MAC address

57
00:06:03.580 --> 00:06:11.500
table, mapping Router A's MAC address of 4444.5555.6666 to Port 2. Switch 1 will then send the ARP reply out

58
00:06:11.620 --> 00:06:19.390
only Port 1, which Host A is plugged into because the ARP reply is a unicast reply, and the switch

59
00:06:19.480 --> 00:06:26.440
already has Host A's MAC address in its MAC address table. It knows it's available out Port 1.

60
00:06:27.930 --> 00:06:34.150
Okay, so there goes the ARP reply. It says, "I'm 10.10.10.1, and here's my MAC address."

61
00:06:34.180 --> 00:06:41.560
That came from Router A, the source MAC is 4444.5555.6666, and the destination MAC is 1111.2222.3333,

62
00:06:41.590 --> 00:06:44.890
on Host A. Host A will receive that,

63
00:06:44.950 --> 00:06:50.800
it will then add an entry for Router A, mapping Router A's IP address of 10.10.10.1

64
00:06:50.800 --> 00:06:57.850
to the MAC address of 4444.5555.6666, it will add that to its ARP cache, and it will then use that whenever

65
00:06:57.850 --> 00:07:05.450
it needs to send traffic to another IP subnet. Host A will then send the DNS request for

66
00:07:05.450 --> 00:07:16.120
www.flackbox.com. So that DNS request, it will say, "Tell me the IP address of www.flackbox.com, please?"

67
00:07:16.120 --> 00:07:22.440
It comes from a source MAC of 1111.2222.3333 on Host A. It goes to Host A's default gateway

68
00:07:22.450 --> 00:07:29.200
MAC address of 4444.5555.6666, the source IP is 10.10.10.10 on Host A, and the

69
00:07:29.200 --> 00:07:37.720
destination IP is its DNS Server at 10.10.100.10. That is unicast traffic, so Switch 1

70
00:07:37.720 --> 00:07:44.430
will send the DNS request out only Port 2, which Router A is plugged into, and which the switch already has

71
00:07:44.430 --> 00:07:53.250
its MAC address table. So, the DNS request will come into Router A. It will receive the request

72
00:07:53.250 --> 00:07:57.560
and see that the destination IP address is 10.10.100.10,

73
00:07:57.570 --> 00:08:05.370
the DNS Server. Router A has an interface in that subnet, 10.10.100.0/24, so it knows that

74
00:08:05.370 --> 00:08:12.050
the destination should be available out that port. It doesn't know the MAC address of 10.10.100.10

75
00:08:12.150 --> 00:08:18.990
yet though, so it will hold the DNS request packet and send an ARP request out of the

76
00:08:18.990 --> 00:08:24.170
10.10.100.1 interface. So, there goes the ARP request. Thats from

77
00:08:24.180 --> 00:08:31.970
10.10.100.1 on the router, it's looking for 10.10.100.10, asking what

78
00:08:31.970 --> 00:08:39.340
its MAC address is. It comes from a source MAC of 8888.9999.AAAA, which is on that interface on the

79
00:08:39.340 --> 00:08:45.820
router. The destination MAC is always the same for an ARP request FFFF.FFFF.FFFF, the Layer 2

80
00:08:45.820 --> 00:08:53.200
broadcast address. The ARP request will be received by Switch 3. Switch 3 will add an entry in

81
00:08:53.200 --> 00:09:00.870
its MAC address table, mapping Router A's MAC address 8888.9999.AAAA to Port 1. It will then flood the broadcast

82
00:09:00.870 --> 00:09:08.160
traffic out all ports apart from the one it was received on. So, that will go down to the DNS Server out Port 2

83
00:09:08.170 --> 00:09:09.810
as well.

84
00:09:09.820 --> 00:09:14.890
Again, the ARP request looks the same as from 10.10.100.1, looking for

85
00:09:14.910 --> 00:09:20.590
10.10.100.10, from a source MAC of 8888.9999.AAAA, destination MAC of FFFF.FFFF.FFFF.

86
00:09:20.770 --> 00:09:28.600
So, the ARP request hits the DNS Server's interface of 10.10.100.10. The DNS

87
00:09:28.600 --> 00:09:35.170
Server will process the ARP request and see that it's for itself. It will then send a unicast ARP reply

88
00:09:35.170 --> 00:09:42.050
back to Router A. The DNS Server will add an entry for Router A, mapping IP address of

89
00:09:42.070 --> 00:09:48.280
10.10.100.1 to MAC address 8888.9999.AAAA to its ARP cache, and it will use that whenever

90
00:09:48.280 --> 00:09:53.560
it needs to send traffic to another IP subnet because 10.10.100.1 is its

91
00:09:53.560 --> 00:10:01.720
default gateway. So there goes the ARP reply from 10.10.100.10, saying, "Here's my MAC address

92
00:10:02.200 --> 00:10:09.490
of source MAC 3333.4444.5555," going back to the router with a destination MAC of 8888.9999.AAAA. Switch 3

93
00:10:09.490 --> 00:10:15.340
will receive that, and it will add an entry in its MAC address table, mapping the DNS Server's MAC

94
00:10:15.340 --> 00:10:22.630
address of 3333.4444.5555 to Port 2. It will then send the ARP reply out only Port 1, which Router A is plugged

95
00:10:22.650 --> 00:10:30.820
into because that is a unicast reply, and it already has Router A in its MAC address table. So, there

96
00:10:30.820 --> 00:10:38.710
goes the ARP reply unchanged on its way to Router A. Router A will receive that. It will then add an entry

97
00:10:38.740 --> 00:10:45.250
for the DNS Server, mapping IP address of 10.10.100.10 to MAC address 3333.4444.5555

98
00:10:45.250 --> 00:10:53.650
to its ARP cache. Router A will then send the DNS request it was holding from Host A to the DNS Server.

99
00:10:54.740 --> 00:11:02.640
Now, the source and destination MAC address of a packet are updated hop by hop, but the source and destination

100
00:11:02.670 --> 00:11:11.790
IP addresses always remain the same end to end unchanged from the original source to the final destination.

101
00:11:12.520 --> 00:11:18.780
The source and destination MAC addresses in our example will be updated to come from Router A

102
00:11:18.780 --> 00:11:25.770
and go to the DNS Server for this DNS request. The source and destination IP addresses are still Host A

103
00:11:25.860 --> 00:11:32.670
10.10.10.10, and the DNS Server is the destination at 10.10.100.10.

104
00:11:32.670 --> 00:11:40.560
So there goes the DNS request, DNS request's saying, "Tell me the IP address of www.flackbox.com."

105
00:11:40.560 --> 00:11:47.400
The source and destination MAC addresses are now changed to be 8888.9999.AAAA on Router A, going to

106
00:11:47.430 --> 00:11:53.940
3333.4444.55555 on the DNS Server. The source IP is still 10.10.10.10 on Host A.

107
00:11:54.240 --> 00:12:00.900
The destination IP is still 10.10.100.10 on the DNS Server. Switch 3 will send

108
00:12:00.900 --> 00:12:07.110
out only Port 2, which is the DNS Server plugged into it, which Switch 3 already has in its

109
00:12:07.110 --> 00:12:15.150
MAC address table. So the DNS request gets sent down to the DNS Server, the DNS Server will receive the

110
00:12:15.150 --> 00:12:19.800
DNS request packet and see that the destination is itself.

111
00:12:19.800 --> 00:12:27.690
So, looking at the OSI stack again. It comes in on the physical wire, and the receiver will then process

112
00:12:27.690 --> 00:12:33.270
the packet starting at the bottom of a stack working its way up. So, it sees that the destination MAC

113
00:12:33.270 --> 00:12:39.240
address is 3333.4444.5555, which is itself. So, it will carry on processing the packet. It sees that

114
00:12:39.240 --> 00:12:44.700
the destination IP address in the Layer 3 header is 10.10.100.10, which again is

115
00:12:44.760 --> 00:12:52.500
itself, it will carry on processing the packet. Then in the Layer 4, Transport header, it sees that it's

116
00:12:52.500 --> 00:13:00.910
UDP and it's at Port 53. So, it knows that this is a DNS request because DNS uses UDP port 53.

117
00:13:00.910 --> 00:13:08.670
It will then pass the packet up the rest of the stack. So look at the Session header, the Presentation

118
00:13:08.670 --> 00:13:15.810
header, and the Application header, and it will process that DNS requests. The server will look in its DNS

119
00:13:15.810 --> 00:13:23.070
database and see an address record for www.flackbox.com at 10.10.12.10.

120
00:13:23.070 --> 00:13:30.530
That was configured in DNS. It will send the information back to Host A in a DNS response. It knows to send the

121
00:13:30.530 --> 00:13:36.150
response to 10.10.10.10 because that was the source IP address in the DNS request.

122
00:13:36.510 --> 00:13:42.780
And it knows to send it via Router A because Router A is its default gateway, and the destination is

123
00:13:42.780 --> 00:13:50.280
in another subnet. The DNS Server already has Router A's MAC address in its ARP cache, so it does not

124
00:13:50.280 --> 00:13:58.190
need to send an ARP request for this. So, the DNS reply says that "www.flackbox.com 

125
00:13:58.190 --> 00:14:02.960
is at 10.10.12.10." The source MAC is 3333.4444.5555.

126
00:14:02.960 --> 00:14:05.240
The destination MAC is its default gateway

127
00:14:05.240 --> 00:14:11.960
at 8888.9999.AAAA. Source IP is the DNS Server at 10.10.100.10, and the destination

128
00:14:11.960 --> 00:14:13.100
IP is Host A

129
00:14:13.100 --> 00:14:20.310
at 10.10.10.10. Switch 3 will receive the DNS response, and it will send out only Port 1,

130
00:14:20.330 --> 00:14:25.320
which Router A is plugged into and which it already has in its MAC address table.

131
00:14:25.520 --> 00:14:33.290
So, it passes that onto Router A. Router A will receive the DNS response packet and see the destination

132
00:14:33.320 --> 00:14:39.710
IP address 10.10.10.10. It has an interface in the subnet of 10.10.10.0/24,

133
00:14:39.740 --> 00:14:46.880
so it knows that the destination should be available out that port and Router A has the MAC

134
00:14:46.880 --> 00:14:52.240
address for 10.10.10.10 in its ARP cache. So, again it doesn't need to send another ARP

135
00:14:52.250 --> 00:15:03.950
request. So it will send the DNS reply out that interface, again it is going from source IP

136
00:15:03.950 --> 00:15:10.400
10.10.100.10, the DNS Server going to destination IP 10.10.10.10 Host A. So that doesn't

137
00:15:10.420 --> 00:15:14.190
change, but the source and destination MAC will be updated.

138
00:15:14.290 --> 00:15:22.510
Source MAC is 4444.5555.6666, and the destination MAC is 1111.2222.3333, which is the MAC address is on the

139
00:15:22.510 --> 00:15:30.700
left hand side of Roter A. Switch 1 will receive the DNS response and send out only Port 1, which Host A

140
00:15:30.700 --> 00:15:37.770
is plugged into and which it already has in its MAC address table. So, it passes the DNS reply down

141
00:15:37.780 --> 00:15:45.970
to Host A. Host A now learns from that DNS response that www.flackbox.com is available

142
00:15:46.280 --> 00:15:52.530
at 10.10.12.10. It can now update the packet it was waiting to send to

143
00:15:53.530 --> 00:16:01.820
www.flackbox.com with that destination IP address. Host A sees that the Web Server is not on its own subnet,

144
00:16:01.820 --> 00:16:06.620
so it knows that any packets it sends there must go via its default gateway.

145
00:16:07.420 --> 00:16:18.430
Okay, so at this point Host A has learned the IP address of the Web Server through DNS. So, that covers

146
00:16:18.430 --> 00:16:27.310
us for part 1 of this lecture. In part 2, in the next lecture, you'll see how the actual HTTP traffic makes

147
00:16:27.310 --> 00:16:28.900
it over to the Web Server.

