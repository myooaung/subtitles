WEBVTT
1
00:00:06.400 --> 00:00:16.000
In this lecture, you'll learn about system, log on to school devices, just log is a standard format

2
00:00:16.000 --> 00:00:22.000
for logging messages and Cisco iOS complies with that standard.

3
00:00:22.350 --> 00:00:30.040
Aslaug message is generated when something happens on the device, like if an interface comes up or

4
00:00:30.040 --> 00:00:34.600
goes down or if an SPF neighbor adjacency comes up her goes down.

5
00:00:35.970 --> 00:00:44.970
Versus a set format for the good messages, and this is an industry standard, all vendors comply with

6
00:00:44.970 --> 00:00:46.560
the standard yeshivas.

7
00:00:46.560 --> 00:00:48.330
Quite a few parameters here.

8
00:00:49.020 --> 00:00:51.150
Let's go through it one by one.

9
00:00:52.350 --> 00:00:59.580
So the first thing in the swag message is an optional sequence number.

10
00:00:59.730 --> 00:01:03.140
For example, we don't have one set, so it's just a star there.

11
00:01:03.690 --> 00:01:08.490
The next thing in the message is a timestamp.

12
00:01:08.650 --> 00:01:16.670
You can see from our example that this event happened on October the 3rd at about quarter to 1:00 a.m.

13
00:01:17.670 --> 00:01:22.080
The next thing that is listed is the facility.

14
00:01:22.320 --> 00:01:27.290
This is the thing that generated the event.

15
00:01:27.480 --> 00:01:32.070
And our example is going to be a change of state on a link.

16
00:01:32.200 --> 00:01:34.290
So the facility here is the link.

17
00:01:34.440 --> 00:01:39.880
If it had been an adjacency coming up or going down memory facility would have been SBF.

18
00:01:40.890 --> 00:01:44.490
The next thing is the severity level.

19
00:01:44.640 --> 00:01:49.020
We're going to cover this in more detail in a few slides.

20
00:01:49.320 --> 00:01:56.730
There's eight different severity levels going from zero through to eight with zero being the most severe

21
00:01:57.030 --> 00:01:58.320
in our example.

22
00:01:58.320 --> 00:02:02.580
The severity level of this event is Cervetti five.

23
00:02:03.940 --> 00:02:10.449
Next thing is in your mnemonic, which is a short description of what happened.

24
00:02:10.479 --> 00:02:13.720
So here we can see that a link has changed.

25
00:02:14.050 --> 00:02:19.600
And then the next thing, the last thing in this whole message is a more detailed description.

26
00:02:19.840 --> 00:02:24.780
You can see the description and an example is the interface farchione four zero zero.

27
00:02:24.940 --> 00:02:31.410
Change that state to administratively down to somebody tight shot down on that interface.

28
00:02:32.320 --> 00:02:33.830
OK, so a standard format.

29
00:02:34.060 --> 00:02:36.390
Next thing is the severity level.

30
00:02:36.820 --> 00:02:43.960
Like I just said, there's eight different levels from zero through seven with zero being the most serious.

31
00:02:44.200 --> 00:02:50.910
And these are, again, standard levels that are used the same by all vendors.

32
00:02:51.010 --> 00:02:54.010
It's covered in the documentation for such log.

33
00:02:54.250 --> 00:02:59.670
So the most serious event you can have would be an emergency, which is value zero.

34
00:02:59.800 --> 00:03:06.520
So the values go from zero or seven in each of those values has got a standard name as well, the name

35
00:03:06.520 --> 00:03:10.000
for severity level zero as emergency.

36
00:03:10.180 --> 00:03:14.550
And that means that the system is unusable upon condition.

37
00:03:14.560 --> 00:03:15.610
It's really bad.

38
00:03:16.060 --> 00:03:20.110
The next severity level is an alert, which is level one.

39
00:03:20.680 --> 00:03:25.050
A condition should be corrected immediately, such as a corrupted system database.

40
00:03:25.090 --> 00:03:26.440
It's still really bad.

41
00:03:26.860 --> 00:03:33.880
Critical is level to such as hard device errors and level three is an error.

42
00:03:33.920 --> 00:03:38.080
So three and above up to zero are bad things.

43
00:03:38.080 --> 00:03:40.390
Bad errors happening on your device.

44
00:03:40.690 --> 00:03:43.390
Level four is a warning.

45
00:03:43.390 --> 00:03:47.640
So that might be serious is definitely something that you want to check out.

46
00:03:48.070 --> 00:03:55.690
Level five is a new S, which is a normal but significant condition that you should also check, for

47
00:03:55.690 --> 00:03:59.020
example, an interface being shut down by an administrator.

48
00:03:59.180 --> 00:04:03.550
That's not a warning or an error because somebody has to have deliberately done not.

49
00:04:03.880 --> 00:04:06.260
Obviously, that can be impactful on the device.

50
00:04:06.260 --> 00:04:08.380
So that's why it gets a noticeable.

51
00:04:08.830 --> 00:04:13.570
The next one, level six, is informational, which is just an informational message.

52
00:04:13.570 --> 00:04:14.470
Nothing's wrong.

53
00:04:14.470 --> 00:04:17.740
It's a normal thing happening, but it's telling you about it.

54
00:04:18.070 --> 00:04:25.300
And level seven is debug messages that contain information normally of use only when debugging a program.

55
00:04:25.480 --> 00:04:31.180
So this would be quite low level, verbose, like a lot of detail about something happening.

56
00:04:33.350 --> 00:04:40.990
First of all, messages can be logged to various locations from your router or switch, first place

57
00:04:40.990 --> 00:04:43.560
that we can log to is the console line.

58
00:04:43.750 --> 00:04:50.440
So if you are connected to the device over a console cable, you're logged in and you're working at

59
00:04:50.440 --> 00:04:55.300
the command line, then you'll see that as you're working in a command line, you'll see six log messages

60
00:04:55.300 --> 00:04:57.760
pop up in the command line interface.

61
00:04:57.910 --> 00:05:05.740
As you're working in there, the logging to the console is turned on by default and the default severity

62
00:05:05.740 --> 00:05:07.000
level is debugging.

63
00:05:07.000 --> 00:05:10.030
So everything gets logged to the console by default.

64
00:05:10.450 --> 00:05:14.630
Next place that we can log to is the virtual terminal.

65
00:05:15.280 --> 00:05:21.390
So if you're at the command line again, but this time it's over a telnet or an associate session,

66
00:05:21.700 --> 00:05:23.440
this is from logging there.

67
00:05:23.650 --> 00:05:25.960
This is not enabled by default.

68
00:05:26.650 --> 00:05:31.750
So you'll notice if you're working on a switch by default, if you're going over a console connection,

69
00:05:31.750 --> 00:05:35.140
you're going to see messages popping up as you're working there.

70
00:05:35.410 --> 00:05:40.690
But if you're over telling our associates, you won't notice because just log logging is enabled by

71
00:05:40.690 --> 00:05:44.200
default, the console, but not in your terminal lines.

72
00:05:44.680 --> 00:05:49.150
The next place we can log to is the logging buffer.

73
00:05:49.430 --> 00:05:54.100
This is where events are saved and from memory on the device.

74
00:05:54.220 --> 00:05:59.530
And to view the buffer, you do that with the Schule logging command and you'll see all the events that

75
00:05:59.530 --> 00:06:02.080
are in the buffer, just like the console line.

76
00:06:02.230 --> 00:06:05.800
Logging to the buffer is enabled by default as well.

77
00:06:06.460 --> 00:06:11.890
And the last place that we can log to is an external log server, which I'll talk about in a bit more

78
00:06:11.890 --> 00:06:13.630
detail later on in this lecture.

79
00:06:15.220 --> 00:06:21.940
So those are logging locations, you can log to one of them or two of them or all of them, you can

80
00:06:21.940 --> 00:06:24.100
walk to as many of them as you want.

81
00:06:24.220 --> 00:06:30.250
It's the same messages that will be getting logged to each of the different locations.

82
00:06:30.430 --> 00:06:38.620
But you can log either the same or different severity levels to each of those different locations when

83
00:06:38.620 --> 00:06:39.110
you do that.

84
00:06:39.130 --> 00:06:45.250
All messages of that severity level that you set for that location and higher will be logged there.

85
00:06:45.670 --> 00:06:53.050
For example, if you set a logging level of three for the console, then events with severity levels

86
00:06:53.050 --> 00:06:56.080
zero, one, two and three will be involved there.

87
00:06:56.290 --> 00:06:59.890
So it's everything at that level and everything Morse code as well.

88
00:06:59.980 --> 00:07:05.650
Remember, the lure of a number of a Morse code is if you say logging level of seven to an external

89
00:07:05.650 --> 00:07:10.840
system, log server events from all sweaty levels to zero to seven would be log there.

90
00:07:12.340 --> 00:07:18.160
So let's have a look at how you would configure this, remember, logging the console is turned on by

91
00:07:18.160 --> 00:07:18.550
default.

92
00:07:18.730 --> 00:07:25.190
If you want to disable more than a global config, you could use to command no logging control.

93
00:07:25.600 --> 00:07:32.740
Next example is for logging to the UI lines for Telnet and MSH connections.

94
00:07:32.950 --> 00:07:34.780
It's a logging monitor there.

95
00:07:34.780 --> 00:07:36.550
And then we set the Laboe here.

96
00:07:36.560 --> 00:07:42.190
We've said logging monitor six six is known by the name of informational.

97
00:07:42.190 --> 00:07:47.830
So everything informational and higher would show up in your command line when you're logged in using

98
00:07:47.830 --> 00:07:49.720
a telnet or associate session.

99
00:07:49.990 --> 00:07:54.370
And the last example here is logging buffer to debugging logging.

100
00:07:54.370 --> 00:07:59.780
Bufford is going to Verum Buffer and here it is, the debugging level.

101
00:07:59.830 --> 00:08:02.800
So that would be everything seven and higher.

102
00:08:05.160 --> 00:08:12.270
You can also log to an external long server, the benefit you get from this is that it centralisers

103
00:08:12.270 --> 00:08:13.490
event reporting.

104
00:08:13.650 --> 00:08:18.240
Maybe you've got 30 Ersin switches in your compass.

105
00:08:18.450 --> 00:08:22.470
You could configure them all to log to the same source log server.

106
00:08:22.620 --> 00:08:28.250
And then you've got one single location that you can use for monitoring all of the logs.

107
00:08:28.710 --> 00:08:34.830
If you are using an external search log server, you'll typically set verbose and logging there because

108
00:08:34.830 --> 00:08:39.900
you want to have a lot of information on not just the whole point of a system is for logging.

109
00:08:40.080 --> 00:08:43.049
So you're not going to have minimal information getting logged there.

110
00:08:43.169 --> 00:08:44.520
You're going to log everything.

111
00:08:44.520 --> 00:08:49.460
So that way when you are troubleshooting later, you're going to have all the details that you need.

112
00:08:49.470 --> 00:08:52.560
You don't have to do that, but it's what people would normally do.

113
00:08:53.010 --> 00:08:56.280
The configuration to log to an external system.

114
00:08:56.280 --> 00:09:03.330
Org server, a global config logging, and then the IP address of an external server and then logging.

115
00:09:03.330 --> 00:09:06.700
Tropp on the severity level that you want to log there.

116
00:09:06.720 --> 00:09:09.420
So here we're using debugging, which is what we'd normally be done.

117
00:09:10.750 --> 00:09:17.170
And this is an example of what you would see are not external log server, for example, here is the

118
00:09:17.170 --> 00:09:21.730
key source of all servers are free version that you can get from service.

119
00:09:22.030 --> 00:09:28.090
And you see the information that's listed there with the date of the event, the time the event happened,

120
00:09:28.420 --> 00:09:34.780
the prior to a which is the severity level, the host names, you can see the actual device that logged

121
00:09:34.780 --> 00:09:37.840
this event and then a message, what actually happened?

122
00:09:40.150 --> 00:09:47.500
OK, so that was really a basic slug server we had to look out there and that gives you a general benefit

123
00:09:47.500 --> 00:09:49.630
of centralizing all of your logs.

124
00:09:49.900 --> 00:09:52.870
Another thing you can use is a steam system.

125
00:09:52.870 --> 00:10:00.130
Steam stands for security information and event management that also provides a centralized location

126
00:10:00.130 --> 00:10:01.710
for all your logging messages.

127
00:10:01.960 --> 00:10:06.490
But this is normally a bit more of an expensive option than a basic search log server.

128
00:10:06.610 --> 00:10:13.180
And it will typically provide advanced analysis, advanced reporting, nice graphs, and it can Kodaly

129
00:10:13.180 --> 00:10:14.290
events as well.

130
00:10:14.500 --> 00:10:20.650
Meaning, for example, if somebody was launching an attack against you, you would have multiple devices

131
00:10:20.650 --> 00:10:26.710
and logging events about it properly on the Besim system can look at the information from those multiple

132
00:10:26.710 --> 00:10:31.210
devices and she related to each other and it can report or not for you.

133
00:10:31.360 --> 00:10:36.700
So using a stream system gives you more advanced reporting tools and more advanced troubleshooting tools

134
00:10:36.700 --> 00:10:37.110
as well.

135
00:10:39.280 --> 00:10:46.900
OK, so once we've got our logging set up to view how you have configured it, this logging command

136
00:10:46.900 --> 00:10:47.590
will do that.

137
00:10:47.830 --> 00:10:55.680
So you can see here we are logging at our cervetti level events to the console, warning to our viewing

138
00:10:55.690 --> 00:11:03.670
lines and debugging to the buffer also from that same command she logging underneath your configuration.

139
00:11:03.940 --> 00:11:07.840
Under there, you'll see all of the events that are in the buffer.

140
00:11:07.840 --> 00:11:13.090
So if we look at the example here, you can see down at the bottom there, we can see a couple of interfaces

141
00:11:13.090 --> 00:11:13.800
coming out.

142
00:11:13.960 --> 00:11:18.400
OK, so that's how you see your configuration and also how you see the events in the buffer.

143
00:11:19.710 --> 00:11:24.390
OK, a couple of things I want to tell you about at the end of the lecture here.

144
00:11:24.840 --> 00:11:28.910
First one is logging Synchronoss.

145
00:11:29.280 --> 00:11:36.270
So when you're working in a command line session by default, any system log messages are getting logged.

146
00:11:36.280 --> 00:11:41.400
There are going to be printed into the middle of any commands that you're currently typing.

147
00:11:41.670 --> 00:11:42.930
So you can see an example here.

148
00:11:42.930 --> 00:11:48.960
I was entering the command do you IP interface brief and in the middle of an event was logged.

149
00:11:49.170 --> 00:11:55.210
And what happens is it makes it hard to see where you're at in your command.

150
00:11:55.230 --> 00:11:59.670
It's actually quite easy in the example because I've highlighted in blue text, but when you're working

151
00:11:59.670 --> 00:12:04.500
at video command line, it's not going to be highlighted in blue and it's going to make it hard to see

152
00:12:04.500 --> 00:12:06.300
where you were in your command.

153
00:12:06.300 --> 00:12:10.950
And what you usually end up doing is just hitting backspace to delete everything and then start the

154
00:12:10.950 --> 00:12:11.730
command again.

155
00:12:11.880 --> 00:12:13.500
And it's a little bit annoying.

156
00:12:13.740 --> 00:12:15.720
So you can stop that from happening.

157
00:12:15.840 --> 00:12:19.510
And when you do that is by using the logging synchronous command.

158
00:12:19.590 --> 00:12:24.450
This is done at the lighting level so you can configured it under a control line in your view lines

159
00:12:24.450 --> 00:12:24.900
as well.

160
00:12:25.110 --> 00:12:27.810
And you just enter the command logging synchronous light.

161
00:12:27.830 --> 00:12:31.380
You can see here once you do that, it's exactly the same thing again.

162
00:12:32.080 --> 00:12:33.420
So I'm in the middle of a command.

163
00:12:33.420 --> 00:12:37.080
I'm doing a do you IP interface brief, but I haven't finished typing it yet.

164
00:12:37.380 --> 00:12:41.670
And while I'm in the middle of typing that command, a logging event comes up.

165
00:12:41.670 --> 00:12:49.050
But because of enabled logging synchronise it reprints the command that I was typing in exactly what

166
00:12:49.050 --> 00:12:54.750
I was on a new line and then I can see exactly what I am and not command and I don't get confused.

167
00:12:54.780 --> 00:13:00.330
So it's best practice to configure and logging synchronous on your lines just makes things more convenient.

168
00:13:01.410 --> 00:13:05.130
Last thing to tell you about, which is another thing that you're going to want to know about because

169
00:13:05.130 --> 00:13:11.310
it's important and it's useful for your world is about debug and the terminal monitor command.

170
00:13:12.330 --> 00:13:18.400
So show and debug commands can be used to view specific information over and above the standards.

171
00:13:18.400 --> 00:13:19.740
Just log messages.

172
00:13:19.740 --> 00:13:25.440
You've already seen loads of your commands as we've been going through the course of your output shows

173
00:13:25.440 --> 00:13:28.180
a static point in time stage.

174
00:13:28.200 --> 00:13:35.430
You enter the command and it gives you the output of Vista when you hit the Anarky debug output dynamically

175
00:13:35.430 --> 00:13:40.560
updates in real time so you could, for example, debug messages.

176
00:13:40.830 --> 00:13:47.580
And as new events happen, they will be reported in Utah in real time in the command line.

177
00:13:47.700 --> 00:13:50.550
So it keeps updating, it keeps giving you new information.

178
00:13:50.790 --> 00:13:52.530
Debug is very useful.

179
00:13:52.530 --> 00:13:57.000
If you're doing some troubleshooting, be careful with debug commands.

180
00:13:57.000 --> 00:14:02.940
In production environments, a large amount of output can overwhelm the device for some debug that will

181
00:14:02.940 --> 00:14:04.860
generate loads of information.

182
00:14:05.010 --> 00:14:09.270
And it's all getting into the command line and it kind of unlocks the device.

183
00:14:09.270 --> 00:14:10.200
So be careful.

184
00:14:10.200 --> 00:14:12.720
Don't run any of those commands on a production system.

185
00:14:13.500 --> 00:14:18.430
Debug output is logged to the console line and the buffer by default.

186
00:14:18.750 --> 00:14:24.210
If you do a debug and you're connected over a console line, you will see your output and also you can

187
00:14:24.210 --> 00:14:26.700
do a show logging to see the output as well.

188
00:14:27.060 --> 00:14:34.620
But if you're logged in over a telnet or associate session, which you usually will be, and uncredible

189
00:14:34.620 --> 00:14:39.570
command, even though events are being generated, you're not going to see them in the command line.

190
00:14:39.780 --> 00:14:46.350
And this is something that trip shop administrators are new to Cisco devices all the time.

191
00:14:46.630 --> 00:14:54.420
So to actually see the debug output being reported, you have to put in the terminal monitor command

192
00:14:54.420 --> 00:14:59.760
and that is done in the enable prompt give out maybe isn't making too much sense now.

193
00:14:59.760 --> 00:15:04.290
So I'll show you what I mean right in the next lecture when we do a lab demo.

