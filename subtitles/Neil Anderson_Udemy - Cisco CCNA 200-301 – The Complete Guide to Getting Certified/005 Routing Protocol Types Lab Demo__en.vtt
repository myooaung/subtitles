WEBVTT
1
00:00:06.460 --> 00:00:16.920
This lecture is a lab demo, where I'll compare our Distance Vector and our Link State routing protocols.

2
00:00:16.990 --> 00:00:24.040
It's the same lab topology we've been using for the last few demos. I've got routers R1 to R5,

3
00:00:24.040 --> 00:00:32.530
and this is continuing on from the last demo where we already had RIP set up and configured. So let's check

4
00:00:32.530 --> 00:00:43.060
that. So I'll go on to R1 here. Now, the command to check which routing protocols are running is 'show

5
00:00:43.180 --> 00:00:50.170
ip protocols'. So I do that, you can have multiple routing protocols running on the same router,

6
00:00:50.210 --> 00:00:56.140
but it's usually not a good idea to do that. Here, I can see that the routing protocol, I'm only

7
00:00:56.140 --> 00:01:06.580
running one, and it is RIP. To check the configuration, I could do a 'show run' and then scroll all the

8
00:01:06.580 --> 00:01:13.510
way through my configuration until I get to the RIP section. But you see here, even on the router without

9
00:01:13.510 --> 00:01:19.780
much config like the one I have here, it can be a bit inconvenient to find the section. So a couple of

10
00:01:19.780 --> 00:01:28.180
easier ways of doing this, I can do a 'show run' and then use the pipe (|) symbol and then say 'section rip'

11
00:01:28.600 --> 00:01:34.300
and it will just show me that part of the running config, so it's a lot more convenient.

12
00:01:34.660 --> 00:01:41.580
Another way you can do it is 'show run' and then pipe (|) it and say 'begin rip' and it will begin the running

13
00:01:41.580 --> 00:01:44.690
config output where it sees that string of RIP,

14
00:01:44.840 --> 00:01:53.170
so that will take me to the correct place as well. So you can see here, I've got RIP configured on here, and

15
00:01:53.380 --> 00:02:04.090
to see the information that was received from RIP, I can do a 'show ip rip database', and that will show

16
00:02:04.090 --> 00:02:08.350
me all the routes that were learned from the neighbors.

17
00:02:08.350 --> 00:02:12.520
So with our routing protocols, there's really three things that happen.

18
00:02:12.520 --> 00:02:16.630
The routers will form an adjacency with each other.

19
00:02:16.630 --> 00:02:23.020
I'll talk about that more later. They then will exchange routes with each other, which will go into routing protocol

20
00:02:23.020 --> 00:02:30.500
database and then the best routes will make it into the routing table. And to view, so 'show ip rip database'

21
00:02:30.510 --> 00:02:38.020
is how I can see the database, to see the routes that are best that made it into the routing table, I can do a 'show ip route'

22
00:02:38.380 --> 00:02:41.590
and I can see my RIP routes in there.

23
00:02:41.600 --> 00:02:46.180
Okay, let's scroll back a little, you can see with the 'show ip rip database',

24
00:02:46.240 --> 00:02:53.460
remember RIP was a distance vector routing protocol, it uses routing by rumour,

25
00:02:53.620 --> 00:03:01.160
so I just get information from neighbors as far as the neighbors point of view is concerned.

26
00:03:01.410 --> 00:03:09.820
Okay, next thing I'm going to do is to configure OSPF on here. So I'll go to global configuration,

27
00:03:09.820 --> 00:03:14.800
again don't worry too much about the config yet because we'll cover this in more detail when we get

28
00:03:14.800 --> 00:03:27.730
to the OSPF section. I'm going to say 'router OSPF 1' and then network is 10.0.0.0, and it uses a

29
00:03:27.730 --> 00:03:31.510
wild card mask, which is the inverse of a subnet mask,

30
00:03:31.530 --> 00:03:37.270
so that is 0.255.255.255. That's equivalent to a subnet mask of

31
00:03:37.340 --> 00:03:45.970
255.0.0.0, meaning I want to enable OSPF and all my interfaces which have got an IP address

32
00:03:45.970 --> 00:03:47.090
that begins with 10,

33
00:03:47.110 --> 00:03:52.030
I don't care what the other octets are. And you see it's giving me the error message, incomplete command,

34
00:03:52.060 --> 00:03:54.320
because I forgot to specify the area.

35
00:03:54.370 --> 00:03:55.660
I'll say 'area 0'.

36
00:03:55.720 --> 00:04:00.080
Don't worry about the areas yet, we'll cover that when we get to OSPF.

37
00:04:00.740 --> 00:04:03.610
Okay, so that was on R1.

38
00:04:03.610 --> 00:04:14.950
I need to do it on all of my other routers as well. So I'll do a 'config t' on R2 and say 'router ospf 1',

39
00:04:15.550 --> 00:04:31.360
and then 'network 10.0.0.0 0.255.255.255 area 0'. I'll also do it on R3.

40
00:04:31.400 --> 00:04:46.340
Let's do this quickly for you, 'router ospf 1' 'network 10.0.0.0 0.255.255.255 area 0', and R4 'config t',

41
00:04:46.340 --> 00:04:49.450
'router ospf 1'

42
00:04:49.460 --> 00:04:50.710
'net 10.0.0.0 0.255.255.255 area 0'

43
00:04:50.750 --> 00:04:52.830
I can just put in the same command and every router

44
00:04:52.910 --> 00:05:02.620
because they've all got networks that begin with a 10, and remember to put the area in as well.

45
00:05:02.650 --> 00:05:17.660
Just one more to do. So R5, 'config t' 'router ospf 1' 'network 10.0.0.0 0.255.255.255 area 0'.

46
00:05:17.680 --> 00:05:22.790
Remember in the last lab demo I used a text editor to copy and paste,

47
00:05:22.810 --> 00:05:24.090
you can see the benefit of it there.

48
00:05:24.100 --> 00:05:29.440
It was quicker when I use the text editor and it's more convenient and I made a couple of typos, like

49
00:05:29.680 --> 00:05:30.390
I did it again,

50
00:05:30.400 --> 00:05:36.800
I keep forgetting to put the area in. If you use a text editor, that's another benefit that you're not going to

51
00:05:36.820 --> 00:05:40.150
make any errors, you're not going to have any typos there.

52
00:05:40.150 --> 00:05:42.850
Okay, so that is OSPF configured.

53
00:05:42.850 --> 00:05:47.790
I can see the OSPF adjacencies coming up. So now,

54
00:05:47.890 --> 00:05:53.410
if on my router here, I do a 'show ip ospf ip database',

55
00:05:56.380 --> 00:06:00.690
and I need to do this at the enable prompt or put the 'do' in front.

56
00:06:00.760 --> 00:06:01.860
So I'll do that,

57
00:06:01.900 --> 00:06:07.900
you can see the difference is that I'm seeing link information in here. So the router

58
00:06:07.900 --> 00:06:09.250
here, R5,

59
00:06:09.250 --> 00:06:17.050
it learns about all of the other routers in the area and it learns about all of the links on those routers as

60
00:06:17.050 --> 00:06:17.740
well.

61
00:06:17.770 --> 00:06:25.440
If I went onto R5 and did the same command on here as well, a 'show ip ospf database', it's going

62
00:06:25.440 --> 00:06:32.890
to have exactly the same information. So it does not get updated from the neighbor routers' point of view.

63
00:06:33.010 --> 00:06:39.730
All of the states of all of the links of all of the routers in the network get shared the same between

64
00:06:39.730 --> 00:06:40.250
all of the

65
00:06:40.250 --> 00:06:41.990
routers in the area. So

66
00:06:41.980 --> 00:06:47.890
the routers have a more complete view of the network with our Link State routing protocols.

67
00:06:47.950 --> 00:06:48.280
Okay,

68
00:06:48.310 --> 00:06:51.080
that was what I wanted to show you there.

69
00:06:51.100 --> 00:06:52.270
See you in the next lecture.

