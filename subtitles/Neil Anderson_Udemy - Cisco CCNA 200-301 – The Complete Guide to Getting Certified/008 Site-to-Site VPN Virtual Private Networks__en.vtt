WEBVTT
1
00:00:07.420 --> 00:00:13.510
In this lecture, you'll learn about VPN, virtual private networks.

2
00:00:13.780 --> 00:00:21.850
I'll start off with site to say VPN and then after this will get on to client to site remote access

3
00:00:21.850 --> 00:00:22.510
VPN.

4
00:00:22.840 --> 00:00:29.470
So with a site to, say, VPN, you can see in my example here, I've got an office in New York and

5
00:00:29.470 --> 00:00:31.420
I've got an office in Boston.

6
00:00:31.600 --> 00:00:37.930
When hosts in New York communicate with each other about traffic will be unencrypted and when hosts

7
00:00:37.930 --> 00:00:42.540
in Boston communicate with each other and not example, that's unencrypted as well.

8
00:00:42.820 --> 00:00:49.390
But when hosts in New York and Boston communicate with each other across the untrusted network of the

9
00:00:49.390 --> 00:00:55.120
Internet, traffic is going to go through our VPN tunnel and it's going to be encrypted.

10
00:00:55.270 --> 00:01:01.630
So anybody on the Internet is able, if not traffic will be Shia, that they won't be able to read it

11
00:01:01.630 --> 00:01:03.370
because it's encrypted traffic.

12
00:01:04.519 --> 00:01:11.930
So you're safe to say VPN used symmetric encryption algorithms such as theirs for triple days and it's

13
00:01:11.930 --> 00:01:18.830
more likely to be nowadays to send encrypted traffic between locations over an untrusted network such

14
00:01:18.830 --> 00:01:19.820
as the Internet.

15
00:01:20.270 --> 00:01:28.490
Traffic inside an office is often left unencrypted as inside the office is often seen as a trusted network.

16
00:01:28.730 --> 00:01:37.070
However, VPN tunnels can also be deployed internally, and Cisco traffic is another, more manageable

17
00:01:37.070 --> 00:01:39.770
solution for internal authentication.

18
00:01:39.770 --> 00:01:42.950
And encryption is not covered in this Youzhny exam.

19
00:01:45.090 --> 00:01:53.270
VPN tunnels typically terminate on a firewall or a router on both sides, and a pressure key can be

20
00:01:53.270 --> 00:01:57.500
configured on both sides of the tunnel or certificate's can be used.

21
00:01:57.650 --> 00:02:04.700
And Certificate's offer a more scalable solution because each of your different tunnels should have

22
00:02:04.700 --> 00:02:06.210
a different key.

23
00:02:06.410 --> 00:02:12.770
You don't want to to use the same key again, because if one tunnel gets compromised, if you were using

24
00:02:12.770 --> 00:02:18.440
the same key everywhere and not means that all of your tunnels are compromised, so Certificate's can

25
00:02:18.440 --> 00:02:21.360
give you a more scalable solution to manage risk.

26
00:02:21.620 --> 00:02:26.890
But to be honest, in real world deployment's p shared keys are very commonly used.

27
00:02:26.900 --> 00:02:28.250
It's just easier to set them up.

28
00:02:29.030 --> 00:02:38.300
IP Shake is a framework of open standards that provide secure encrypted communication on an IP network

29
00:02:38.480 --> 00:02:43.370
and its IP shack that we're going to use for our site to site VPN tunnels.

30
00:02:43.790 --> 00:02:47.570
Incyte IP, Internet key exchange honeypots.

31
00:02:47.570 --> 00:02:54.350
IC handles negotiation of protocols and algorithms and generates the encryption and authentication keys

32
00:02:54.590 --> 00:02:55.970
and ISO camp.

33
00:02:55.990 --> 00:03:02.180
That's Internet Security Association and key management protocol defines the procedures for authenticating

34
00:03:02.180 --> 00:03:06.560
and communicating peer creation and management of security associations.

35
00:03:06.800 --> 00:03:13.140
Isaach Camp typically uses IC for the key exchange so I can ISO comp.

36
00:03:13.160 --> 00:03:17.560
You'll often you'll often find those terms being used interchangeably.

37
00:03:17.570 --> 00:03:24.110
So even though there is a slight difference there, you'll often see them being used as Cinnamon's of

38
00:03:24.110 --> 00:03:24.650
each other.

39
00:03:26.540 --> 00:03:34.480
Authentication header H provides integrity, authentication and protection from replay attacks and ESP

40
00:03:34.760 --> 00:03:41.150
the encapsulating security payload provides confidentiality, integrity, authentication and protection

41
00:03:41.150 --> 00:03:42.290
from replay attacks.

42
00:03:42.500 --> 00:03:49.490
So when you're implementing IP Sheck, you've got the option of doing it either with each other or with

43
00:03:49.490 --> 00:03:50.200
E.S.P.

44
00:03:50.330 --> 00:03:56.070
You may be noticed there was a big one missing for each, which is confidentiality.

45
00:03:56.300 --> 00:04:03.950
When you are using a VPN tunnel, pretty much always you're going to want the actual data to be encrypted.

46
00:04:03.950 --> 00:04:05.630
So you've got the confidentiality.

47
00:04:05.840 --> 00:04:10.130
So ESP is a lot more commonly used than h.s.

48
00:04:11.650 --> 00:04:18.910
And as well as the choice between H and E.S.P, you can also use either tonneau mode or transport mode.

49
00:04:19.240 --> 00:04:25.540
Tunnel mode protects the internal routing information by encrypting the IP header of the original pocket.

50
00:04:25.780 --> 00:04:33.220
The original pocket is encapsulated by another set of IP headers and Hesp tunnel mode is widely implemented

51
00:04:33.220 --> 00:04:35.380
in site site VPN scenarios.

52
00:04:36.360 --> 00:04:42.360
The other option is transport modes, you use one or the other transport mode and trips only the payload

53
00:04:42.360 --> 00:04:49.380
on the ESP trailer, so the IP header of the original pocket is not encrypted and the IP transport mode

54
00:04:49.380 --> 00:04:53.250
is implemented for client site remote access VPN scenarios.

