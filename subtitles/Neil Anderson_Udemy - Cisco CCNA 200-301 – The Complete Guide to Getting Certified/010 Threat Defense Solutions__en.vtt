WEBVTT
1
00:00:07.490 --> 00:00:16.910
Back near the start of this section, we had Wenche, where I covered the Coleman attacks that a Hocker

2
00:00:16.910 --> 00:00:24.050
will launch against you, and now that I've covered the different security devices that are available,

3
00:00:24.230 --> 00:00:32.060
I can wrap up the section with this last lecture where I will cover the mitigation techniques which

4
00:00:32.060 --> 00:00:39.020
protect you against those different attacks, and I'll cover them off here in the same order that they

5
00:00:39.020 --> 00:00:41.860
were covered in the Coleman attacks lecture.

6
00:00:42.050 --> 00:00:50.410
So starting off with malware to guard against this malware software should be installed on the host

7
00:00:50.420 --> 00:00:57.710
systems on malware software, uses signatures on heuristics to detect malicious software and block it

8
00:00:57.710 --> 00:01:05.269
from running to the way that the signatures work is it looks for new characteristics of new viruses.

9
00:01:05.390 --> 00:01:08.420
When it sees them, it will block that file from running.

10
00:01:08.660 --> 00:01:13.760
What heuristics does is it's not looking for nowon signatures of viruses.

11
00:01:13.910 --> 00:01:20.720
It's looking for characteristics on a file which are common across other different viruses.

12
00:01:20.720 --> 00:01:21.350
Severe.

13
00:01:21.530 --> 00:01:27.670
The file would be suspicious and that will again trigger the on e malware software.

14
00:01:27.710 --> 00:01:35.540
So you want to have your own malware software running on your corporate host pitches and you want controls

15
00:01:35.540 --> 00:01:39.590
to be in place there to prevent users from disabling the software.

16
00:01:39.890 --> 00:01:46.250
Because maybe a hacker has got a Trojan horse which is available for download online.

17
00:01:46.430 --> 00:01:52.010
They've made it look very attractive and a user could be determined that they really want to download

18
00:01:52.010 --> 00:01:55.130
this Trojan horse, which, of course, is going to do damage.

19
00:01:55.370 --> 00:02:03.290
So to prevent users from doing bad things like that, you want to make sure they're prevented from disabling

20
00:02:03.290 --> 00:02:05.090
the on malware software.

21
00:02:05.660 --> 00:02:12.290
An IP can also be used to detect and block network traffic containing malware from getting into your

22
00:02:12.290 --> 00:02:13.250
organization.

23
00:02:15.120 --> 00:02:22.080
Still on malware and also providing protection against phishing and data exfiltration, you can use

24
00:02:22.080 --> 00:02:26.220
the Cisco ESG on WSJ appliances.

25
00:02:26.400 --> 00:02:34.140
The NSA is the email security appliance and it scans the links and attachments and incoming e-mail for

26
00:02:34.140 --> 00:02:36.730
malware, phishing attacks on spam.

27
00:02:36.870 --> 00:02:40.290
And it blocks them before they can get to your user's mailbox.

28
00:02:40.560 --> 00:02:46.800
Results of the Cisco WSC, which is the Web security appliance and not prevents users from accessing

29
00:02:46.800 --> 00:02:48.030
dangerous websites.

30
00:02:48.210 --> 00:02:55.020
The kind of places that would maybe accidentally download a Trojan horse or a worm from policies can

31
00:02:55.020 --> 00:03:02.040
also be implemented on the SSA and the WSJ to prevent sensitive information from being sent out of the

32
00:03:02.040 --> 00:03:02.970
organization.

33
00:03:03.150 --> 00:03:09.030
So you can configure rules with your policies there about what is sensitive information and you can

34
00:03:09.030 --> 00:03:10.940
block that from being sent out.

35
00:03:12.810 --> 00:03:19.080
Policies and procedures should be implemented, for example, about how and what information can be

36
00:03:19.080 --> 00:03:26.370
sent or taken outside the company premises, for example, to prevent data exfiltration, you could

37
00:03:26.370 --> 00:03:27.750
have a policy.

38
00:03:27.930 --> 00:03:33.930
But staff are not allowed to have corporate data on USB sticks because that would be easy to lose in

39
00:03:33.930 --> 00:03:35.190
a public place.

40
00:03:35.550 --> 00:03:38.910
Security awareness training should also be implemented.

41
00:03:39.130 --> 00:03:45.600
So, for example, you should train your staff about the dangers of phishing and tell them that they

42
00:03:45.600 --> 00:03:51.740
should not open suspicious emails that they should call a member of I.T. staff to investigate it.

43
00:03:53.630 --> 00:04:00.080
Moving on to reconnaissance on social engineering, low level reconnaissance, for example, just doing

44
00:04:00.080 --> 00:04:06.980
research on Google, on the company and also social engineering can use very low tech methods to gain

45
00:04:06.980 --> 00:04:14.240
information and access to the target organization because of its difficult for I.T. departments to use

46
00:04:14.240 --> 00:04:17.019
technical solutions to protect against them.

47
00:04:17.269 --> 00:04:21.519
So the way to defend against them is through staff security awareness.

48
00:04:21.529 --> 00:04:28.130
Again, again, policies and procedures should be implemented to guard against these kind of attacks,

49
00:04:28.280 --> 00:04:31.880
and staff should be educated about security concerns.

50
00:04:32.090 --> 00:04:38.420
So, for example, this should be made aware that if somebody calls them, that person may not be who

51
00:04:38.420 --> 00:04:39.290
they say they are.

52
00:04:39.650 --> 00:04:44.360
They should be very guarded about giving out what could be sensitive information.

53
00:04:46.080 --> 00:04:52.280
An IPS can defend against deeper reconnaissance, which uses part on vulnerability scanners.

54
00:04:52.480 --> 00:04:59.250
It's not normal behavior for a horse to scan through a range of numbers that would indicate a Paasschen

55
00:04:59.250 --> 00:05:03.300
attack and an eyepiece can detect and drop traffic.

56
00:05:03.660 --> 00:05:10.290
A determined attacker may attempt to circumvent this by running the scan over a longer period of time.

57
00:05:10.530 --> 00:05:13.690
That can make it more difficult for the IPS to detect it.

58
00:05:14.040 --> 00:05:20.760
But if you're using an advanced eyepiece like the one from Cisco, it can still detect this kind of

59
00:05:20.760 --> 00:05:26.310
attack because it's able to court actions that happened before and after other options.

60
00:05:26.500 --> 00:05:34.110
So if it sees that a horse has been running scout over a long period of time and then the horse takes

61
00:05:34.110 --> 00:05:40.620
another action, which would indicate an escalation of the attack but will trigger the IPS to fire,

62
00:05:40.770 --> 00:05:42.930
it will send an alert to the administrators.

63
00:05:43.030 --> 00:05:43.980
You can also block.

64
00:05:46.660 --> 00:05:54.050
Moving on to a distributed denial of service, again, we can use an IPS here and IPS can detect these

65
00:05:54.050 --> 00:05:57.040
DOS attacks through a normally based inspection.

66
00:05:57.280 --> 00:06:03.460
Obviously, if you're under Adidas attack, it's not going to be conforming to the normal traffic patterns

67
00:06:03.460 --> 00:06:04.710
that you would expect to see.

68
00:06:05.140 --> 00:06:12.010
Also, advanced firewalls like the Cisco RSA can offload incoming connection attempts from servers when

69
00:06:12.020 --> 00:06:18.310
the traffic reaches a threshold and respond with quicker connection time outs and or cookies.

70
00:06:18.520 --> 00:06:25.900
To how this works is if there is a server behind the firewall that you want to protect, the RSA can

71
00:06:25.900 --> 00:06:30.700
monitor the rate of traffic, the rate of new connections that are coming into that server.

72
00:06:30.940 --> 00:06:37.640
And if it goes above a certain threshold, that would indicate that that server may be under the DOS

73
00:06:37.660 --> 00:06:43.960
attack and then the firewall can start seeing the incoming connections to the incoming connections terminate

74
00:06:43.960 --> 00:06:46.690
on the firewall rather than the server.

75
00:06:46.910 --> 00:06:54.070
And if it is a TCP Synthroid attack, the firewall is capable of actually responding with a cookie rather

76
00:06:54.070 --> 00:06:57.010
than a Sinak and not keeping any half open.

77
00:06:57.010 --> 00:07:00.630
Connections to the firewall was a hardened security device.

78
00:07:00.850 --> 00:07:05.920
It is less susceptible to DOS attacks and maybe your other servers.

79
00:07:06.040 --> 00:07:13.870
However, your firewalls can still be a target of the DOS attacks and we can also become overwhelmed.

80
00:07:14.020 --> 00:07:16.840
So there are other solutions available as well.

81
00:07:17.560 --> 00:07:26.110
UNIDO services such as Arber Networks one global Internet traffic to detect botnet and command and control

82
00:07:26.110 --> 00:07:30.500
servers they have on premises and cloud based solutions.

83
00:07:30.500 --> 00:07:36.700
So on your premises and also available in the cloud which scrubbed traffic when an organization is under

84
00:07:36.720 --> 00:07:37.870
de dos attack.

85
00:07:38.170 --> 00:07:44.710
If you do become under Adidas attack, Arbor Networks, they can detect that more easily because they

86
00:07:44.710 --> 00:07:49.570
are monitoring for botnet on command and control servers when it happens.

87
00:07:49.750 --> 00:07:57.370
But it can be sent either to an appliance on premises or to a cloud based service which will scrub it,

88
00:07:57.370 --> 00:08:04.330
which will just allow the clean traffic through and which will block the traffic from the botnet geographic

89
00:08:04.330 --> 00:08:06.220
dispersion of an organization.

90
00:08:06.230 --> 00:08:12.670
Services can also help mitigate the attacks so you can use any cash to have your servers spread across

91
00:08:12.670 --> 00:08:19.270
multiple locations, but makes it more difficult for an attacker to launch a detox attack against it.

92
00:08:21.140 --> 00:08:28.550
Next up, spoofing mine in the middle, on reflection, attacks first defense we have here is unicast

93
00:08:28.550 --> 00:08:31.640
reverse path forwarding you RPF.

94
00:08:31.640 --> 00:08:38.450
This guards against spoofed IP addresses because it verifies a source IP address is reachable through

95
00:08:38.450 --> 00:08:40.799
the same interface it was received on.

96
00:08:40.820 --> 00:08:42.490
So let me explain how this works.

97
00:08:42.770 --> 00:08:49.720
You can see in the diagram here, we've got our outside interface on the left fast zero zero on Iwa

98
00:08:49.730 --> 00:08:50.420
Rohter.

99
00:08:50.840 --> 00:08:54.290
We've got an external host on the Internet on the left there.

100
00:08:54.590 --> 00:09:00.140
Then on the right we've got our internal server, one thing, two to one, six, eight or 10.

101
00:09:00.410 --> 00:09:02.750
On the IP address, there is one thing.

102
00:09:02.750 --> 00:09:05.550
Tudo 168, dot dot one, slash twenty four.

103
00:09:05.780 --> 00:09:12.710
So if we did a show IP right on this right here in the middle here you would see that we've got a connected

104
00:09:12.710 --> 00:09:18.350
right to one name, two to one six eight oh oh oh swash twenty four network on the inside on fast one

105
00:09:18.350 --> 00:09:24.770
sloshy to our other connected network is going out to the internet on two or three to one one three

106
00:09:24.990 --> 00:09:28.010
zero three, an interface zero zero.

107
00:09:28.340 --> 00:09:33.890
And here we've configured a default site to send all of our traffic out to the Internet.

108
00:09:34.010 --> 00:09:38.150
Again, going at interface fast zero zero six here.

109
00:09:38.150 --> 00:09:45.620
What happens is the host out on the Internet about an Ataka and they try to send some traffic in with

110
00:09:45.620 --> 00:09:50.450
a spoofed IP address looking like they're actually on the inside of the network.

111
00:09:50.660 --> 00:09:56.840
So a reason they would do this, maybe they know that there are security measures on the inside here

112
00:09:56.870 --> 00:09:59.810
which are only going to accept traffic from this network.

113
00:09:59.810 --> 00:10:03.740
So they try to spoof it to make it look like they are on network.

114
00:10:03.740 --> 00:10:10.060
So they send in a packet with a source IP address of one nine two to one six one hundred.

115
00:10:10.790 --> 00:10:17.120
Well, if you have got unicast reverse forwarding turned on, which is by default, the driver is going

116
00:10:17.120 --> 00:10:23.740
to block pocket because what it does is it looks and it sees a top pocket coming in.

117
00:10:23.960 --> 00:10:25.460
It's come in with Schorsch address.

118
00:10:25.460 --> 00:10:30.290
One thing to you, two one six eight oh one hundred on interface fasta zero zero.

119
00:10:30.530 --> 00:10:37.080
What the RPF check does is it says, if I was going to send traffic to the IP address, would I send

120
00:10:37.100 --> 00:10:39.830
out that same interface that I get that it came in on?

121
00:10:40.220 --> 00:10:46.610
But no, if the driver was going to send traffic to one thing, two one six eight one hundred, it would

122
00:10:46.610 --> 00:10:53.600
send to the fast one swash zero interface because Vyse come in on the Fast 070, a different interface

123
00:10:53.900 --> 00:10:56.270
that indicates is invalid.

124
00:10:56.270 --> 00:11:00.710
It's a spoofed source IP address and will just drop pocket.

125
00:11:03.160 --> 00:11:09.370
When an attacker disproof their source IP address, they don't receive return traffic, so they do not

126
00:11:09.370 --> 00:11:14.560
see the sequence numbers in TGP responses from the target going back to the previous.

127
00:11:14.560 --> 00:11:15.070
Try it again.

128
00:11:15.100 --> 00:11:22.840
Let's say that we didn't have you RPF on here and that the host on the left here did send in a pocket

129
00:11:23.020 --> 00:11:27.460
with with a spoofed source of gas of one nine two to 160 over 100.

130
00:11:27.670 --> 00:11:34.000
Well, whenever you return, traffic were sent back to the IP address wandering through to 160 to 100.

131
00:11:34.240 --> 00:11:40.450
Obviously, it's not going to get sent back to that host to when it is sending in traffic with a spoofed

132
00:11:40.450 --> 00:11:41.260
source address.

133
00:11:41.470 --> 00:11:43.570
But traffic is going to be just one way.

134
00:11:43.690 --> 00:11:46.000
It's sending pockets into the target.

135
00:11:46.500 --> 00:11:50.080
News is that it's not going to get any return pockets coming back.

136
00:11:51.560 --> 00:11:59.420
So it's not going to see the sequence numbers in return pickpockets, but a target may be more vulnerable

137
00:11:59.420 --> 00:12:06.800
to attacks if it uses predictable TCP sequence numbers, because the way that TGP works is when a connection

138
00:12:06.800 --> 00:12:11.900
is set up and there's a session between two hosts, we're going to use TCP sequence numbers.

139
00:12:12.080 --> 00:12:18.020
And if TCAP sequence numbers appear to be invalid, the host will just drop the traffic going back to

140
00:12:18.020 --> 00:12:19.310
the previous site again.

141
00:12:19.460 --> 00:12:24.610
But see that my host on the left here is sending an attack against the Servet on right.

142
00:12:24.800 --> 00:12:27.780
I want to see that the topic is getting to the server.

143
00:12:28.040 --> 00:12:35.390
Well, if that server is using predictable TCP sequence numbers, then the host here can pretend like

144
00:12:35.390 --> 00:12:41.270
it is in a two way communication with the server and it can send multiple packets in not session and

145
00:12:41.270 --> 00:12:43.590
they will be accepted by the server.

146
00:12:43.790 --> 00:12:50.240
It would be better if the server used random sequence numbers and then that would prevent the attacker

147
00:12:50.240 --> 00:12:51.440
from doing that.

148
00:12:52.490 --> 00:12:58.610
So because of is, your applications should be up to date and parched so that they are using random

149
00:12:58.610 --> 00:13:04.850
rather than predictable TGP sequence numbers, if that is not possible, if an application does not

150
00:13:04.850 --> 00:13:11.510
support it, then an advanced firewall can also do that as long as it is in the traffic path.

151
00:13:13.610 --> 00:13:20.990
Also, to guard against spiffing, you should use secure authentication where possible secure authentication

152
00:13:21.350 --> 00:13:24.020
systems are communicating with who they think they are.

153
00:13:24.350 --> 00:13:30.400
We also have dynamic AAFP inspection, which will detect and block AAFP spoofing attacks we covered

154
00:13:30.620 --> 00:13:32.600
back in the switch security section.

155
00:13:34.600 --> 00:13:41.590
For guarding against password attacks, firewalls on pocket fillers, your access controllers should

156
00:13:41.590 --> 00:13:46.480
be configured to prevent illegitimate users from having connectivity to login windows.

157
00:13:46.780 --> 00:13:53.680
For example, if you're the administrator and you need to log in to a network device to administer that,

158
00:13:53.830 --> 00:13:55.290
you should be able to do that.

159
00:13:55.450 --> 00:13:59.460
Somebody works in the warehouse, should not have connectivity.

160
00:13:59.620 --> 00:14:04.830
They should not be able to get along and prompt on that particular device, if at all possible, that

161
00:14:04.840 --> 00:14:06.580
traffic should be blocked.

162
00:14:07.120 --> 00:14:12.190
Policies should also be in place to enforce secure passwords for your users.

163
00:14:12.220 --> 00:14:15.820
You do have a legitimate reason to get to a login window.

164
00:14:16.120 --> 00:14:23.380
Password complexity settings include minimum password length, special requirements for the characters.

165
00:14:23.590 --> 00:14:29.980
For example, having to use a capital where having a user number, having to use a special character

166
00:14:29.990 --> 00:14:31.060
such as an asterisk.

167
00:14:31.450 --> 00:14:37.900
Other settings include how often passwords must be changed on prevention of old passwords from being

168
00:14:37.900 --> 00:14:43.300
reused again to what a user might try to do is have a password of password when virtually change your

169
00:14:43.300 --> 00:14:47.320
password to change it to something out, but then we just immediately change it again.

170
00:14:47.320 --> 00:14:48.340
Back to password.

171
00:14:48.550 --> 00:14:49.630
Your password.

172
00:14:49.630 --> 00:14:52.450
Complexity settings should also prevent as well.

173
00:14:52.600 --> 00:14:56.290
So again, sermonize to protect against password attacks.

174
00:14:56.530 --> 00:15:02.170
Make sure the only people who should be able to get to the login window can get there and also make

175
00:15:02.170 --> 00:15:05.440
sure that your users are using complex passwords.

176
00:15:07.050 --> 00:15:13.320
Multifactor authentication should also be used where shootable this uses something the user knows,

177
00:15:13.320 --> 00:15:18.840
which is password and something they have, which could be a biometric reader, for example, assuming

178
00:15:18.840 --> 00:15:24.630
it checks for fingerprint or a code which is generated on a mobile app or security device.

179
00:15:24.960 --> 00:15:31.050
And also, staff should be educated to guard against social engineering attacks against their passwords.

180
00:15:31.440 --> 00:15:37.290
So they should be told if somebody phones up and asks for your password or asked to change your password

181
00:15:37.290 --> 00:15:40.970
to a certain thing, be very suspicious of do not do it.

182
00:15:43.050 --> 00:15:49.770
To guard against buffer overflow attacks, software should be up to date, and Patch rejects malformed

183
00:15:49.770 --> 00:15:50.320
pockets.

184
00:15:50.550 --> 00:15:56.520
If you've got your own internal developers that are building your own applications, they should also

185
00:15:56.520 --> 00:16:01.340
make sure that they are not susceptible to buffer overflow attacks.

186
00:16:02.970 --> 00:16:08.790
Four pocket sniffers, your pocket fillers and firewall's should be used to ensure traffic cops are

187
00:16:08.790 --> 00:16:13.260
controlled, so traffic should only be going where it should be going to.

188
00:16:13.560 --> 00:16:15.930
It's going to lessen the chance that somebody shouldn't.

189
00:16:15.930 --> 00:16:22.800
She is able to sniff it and traffic should be authenticated and encrypted if it passes over an untrusted

190
00:16:22.800 --> 00:16:23.340
network.

191
00:16:25.020 --> 00:16:31.860
And finally, you can also employ the services of a penetration test, their penetration test must be

192
00:16:31.860 --> 00:16:35.280
employed to test the organization Security Defense.

193
00:16:35.430 --> 00:16:41.190
So a penetration test, there is a general penetration test there, uses the same tools and methods

194
00:16:41.190 --> 00:16:42.300
as a hacker.

195
00:16:42.600 --> 00:16:46.410
So what we're testing for is would a hacker be able to do any damage?

196
00:16:46.560 --> 00:16:52.470
The way they do that is they act the same way that a hacker with internal security teams should also

197
00:16:52.470 --> 00:16:56.010
do their own testing of their security systems and policies.

198
00:16:56.130 --> 00:17:00.360
But an external penetration tester can be used for validation.

199
00:17:00.760 --> 00:17:07.800
OK, so that was all of the different defense solutions that we're going to use to guard against those

200
00:17:07.800 --> 00:17:08.230
threats.

201
00:17:08.520 --> 00:17:09.960
See you in the next section.

