WEBVTT
1
00:00:06.460 --> 00:00:12.490
Hopefully, you've got a good handle on all of the subnetting information that we've covered so far,

2
00:00:12.850 --> 00:00:19.380
and you'd be able to work your way through a subnetting problem. But let's actually verify that now by

3
00:00:19.390 --> 00:00:21.980
doing a practice question.

4
00:00:21.970 --> 00:00:24.960
So the question is, what are the network address,

5
00:00:25.000 --> 00:00:31.350
the broadcast address, and the valid host addresses for the IP address of 198.22.45.173/26?

6
00:00:31.420 --> 00:00:40.240
And the second part of the question, what is the subnet mask in dotted decimal notation?

7
00:00:40.690 --> 00:00:47.950
So stop the video now, please, and figure that out. When you come back, I'll walk you through how we arrive

8
00:00:48.020 --> 00:00:51.270
at the answer.

9
00:00:51.320 --> 00:00:55.320
Okay, so let's look at how we are going to figure out the answer to the question.

10
00:00:55.330 --> 00:01:00.220
We're actually going to do the second part of the question first because it's more logical and easier

11
00:01:00.220 --> 00:01:01.270
to do it that way.

12
00:01:01.360 --> 00:01:07.790
The second part of the question was, what is the subnet mask, /26, in dotted decimal?

13
00:01:07.870 --> 00:01:16.090
And the way to do this, whenever you're working out a subnetting problem, particularly at the start, is to write out the

14
00:01:16.090 --> 00:01:22.360
bit pattern at the top of the piece of paper. Later on, you'll be able to do a lot of these in your head, but when

15
00:01:22.360 --> 00:01:28.180
you're first learning, it's way easier to write it all out like this. So take a piece of paper,

16
00:01:28.180 --> 00:01:38.140
and at the top, start off at the right, and write 1, 2, 4, 8, 16, 32, 64, 128, and then you can put a dot in, and then

17
00:01:38.140 --> 00:01:46.840
1, 2, 4, 8, and so on, until you've drawn out the bit pattern for the 4 octets in your subnet mask.

18
00:01:47.200 --> 00:01:54.110
Then, the question that we had was we had to work out the dotted decimal notation for a /26.

19
00:01:54.220 --> 00:01:58.370
So just under your bit pattern, at the top of the paper, write out 26

20
00:01:58.380 --> 00:02:04.630
1's underneath that, and then, you can put in 6 0's for the host portion of the

21
00:02:04.630 --> 00:02:10.680
address. Also, draw a line in where the line is for the subnet mask, and then we can just add these up.

22
00:02:10.720 --> 00:02:14.490
So, obviously, the 1st octet is all 1's, it's going to be 255.

23
00:02:14.650 --> 00:02:17.600
The 2nd octet is also going to be 255.

24
00:02:17.680 --> 00:02:20.380
The 3rd octet is also 255.

25
00:02:20.530 --> 00:02:27.970
And then, at the 4th octet, where we're doing the subnetting here, the 1's are in the 128 and the 64.

26
00:02:27.970 --> 00:02:32.230
So, we add 128 and 64 together to give us 192.

27
00:02:32.350 --> 00:02:35.680
So a /26 in dotted decimal notation is

28
00:02:35.770 --> 00:02:40.270
255.255.255.192.

29
00:02:40.390 --> 00:02:43.960
Let's look at what the second part of the question was.

30
00:02:43.960 --> 00:02:45.240
What is the network address,

31
00:02:45.250 --> 00:02:49.660
the broadcast address, and the valid host addresses for the IP address

32
00:02:49.660 --> 00:02:51.890
198.22.45.173

33
00:02:51.880 --> 00:02:55.900
/26?

34
00:02:55.960 --> 00:03:02.170
So again, we use our piece of paper, and we're going to write out the IP address now as well.

35
00:03:02.170 --> 00:03:06.940
You can see that I've done it on the top part here. That is the bit pattern for

36
00:03:07.120 --> 00:03:10.990
198.22.45.173,

37
00:03:10.990 --> 00:03:19.440
that's how we would write it in decimal. The network portion of the address is the first 26 bits,

38
00:03:19.870 --> 00:03:28.330
so I can see that that is 198.22.45, and then I just count whatever is

39
00:03:28.330 --> 00:03:33.300
in the first 2 bits here, and I've got a 1 for the 128 and a 0 for 64,

40
00:03:33.310 --> 00:03:35.540
so that means it's 128.

41
00:03:35.680 --> 00:03:42.230
So, the network address is 198.22.45.128.

42
00:03:42.310 --> 00:03:46.820
Don't worry about the text yet. This is a second way that we can figure out the answer,

43
00:03:46.840 --> 00:03:48.510
that I'll get to in a second.

44
00:03:48.670 --> 00:03:54.970
I'm going to explain how to do it the long way first. The long way is the logical way to do it first,

45
00:03:55.240 --> 00:04:04.270
where we write out the IP address and the subnet mask in binary notation, and we put in the line where the subnet

46
00:04:04.270 --> 00:04:11.740
mask is. From that, we can figure out what the network address is. Like I just said 198.22.45.128,

47
00:04:11.740 --> 00:04:18.790
I can see it here. Then we figure out what the broadcast address is, so that would be if we

48
00:04:18.790 --> 00:04:26.050
had a 1 in all of the host bits. So that would be a 1 on the 32, up to the 1. And if

49
00:04:26.050 --> 00:04:33.250
we add up 32 plus 16, plus 8, plus 4, plus 2, plus 1, so that's 32 plus 16

50
00:04:33.250 --> 00:04:43.490
is 48, plus 8 is 56, plus 4 is 60, plus 2 is 62, plus 1 is 63.

51
00:04:43.510 --> 00:04:53.300
So the network portion of the address was 198.22.45.128, 128 plus 63 is going to be 191.

52
00:04:53.320 --> 00:05:02.410
Again, the network address is 192.22.45.128. The broadcast address

53
00:05:02.650 --> 00:05:09.490
is 198.22.45.191. So we've got the network address and the broadcast address.

54
00:05:09.940 --> 00:05:15.740
The possible host addresses are going to be the addresses that lie between those 2 numbers,

55
00:05:15.760 --> 00:05:27.840
so that would be 198.22.45.129, going up to 198.22.45.190.

56
00:05:27.840 --> 00:05:34.600
Okay, so that's how we can figure that out very manually and very logically. We can take

57
00:05:34.720 --> 00:05:40.780
a little bit of a shortcut, and what we do is, again, you saw this in the last lecture, we look at where

58
00:05:40.780 --> 00:05:47.620
the line is, so the line is here, after the 64. So, I know that my subnets go up in multiples

59
00:05:47.620 --> 00:05:56.020
of 64. So the first one is going to be 198.22.45.0, then

60
00:05:56.030 --> 00:06:04.130
198.22.45.64, then 198.22.45.128, and so on. I can see that this address that I'm interested

61
00:06:04.130 --> 00:06:15.950
in is 198.22.45.173. So first subnet is 198.22.45.0, then 198.22.45.64, then 198.22.45.128.

62
00:06:16.310 --> 00:06:25.130
The next one would be 128 plus 64, which is going be 198.22.45.192. 198.22.45.173

63
00:06:25.130 --> 00:06:31.850
is less than 198.22.45.192, so it must be in the 198.22.45.128 network. I know this is this is in the network

64
00:06:32.390 --> 00:06:40.790
198.22.45.128. I then add on 64, I know to add on 64 because that's where the line

65
00:06:40.790 --> 00:06:49.940
is, and the next network address would be 198.22.45.192. So the next network address is 198.22.45.192. It must mean that

66
00:06:49.940 --> 00:06:55.850
the broadcast address for this subnet is 1 less than that, it's going to be 198.22.45.191. So there, I've figured out my

67
00:06:55.850 --> 00:07:03.200
network address is 198.22.45.128. I figured out that my broadcast address is 198.22.45.191. The available hosts must be

68
00:07:03.200 --> 00:07:04.550
everything in between,

69
00:07:04.550 --> 00:07:13.480
that would be 198.22.45.129 to 198.22.45.190.

70
00:07:13.550 --> 00:07:15.380
Okay, so that is how we can figure it out.

71
00:07:15.800 --> 00:07:24.350
And a final important point to tell you here is, notice that everything was done on where the subnet line is,

72
00:07:24.350 --> 00:07:32.240
and in this example is at /26, so that is in the last octet. So, we don't actually need to worry about

73
00:07:32.240 --> 00:07:38.530
the first 3 octets. They're always going to be unchanged as 198.22.45

74
00:07:38.530 --> 00:07:44.960
in our example. So you can save some time by only writing out the octet that the subnetting is happening on. You don't

75
00:07:44.960 --> 00:07:51.500
have to write the whole thing out in full every time. Okay, so that was a quick example of how we will solve

76
00:07:51.560 --> 00:07:55.970
a subnetting question, the kind of thing that you would see on the CCNA exam.

