WEBVTT
1
00:00:06.450 --> 00:00:14.820
In this lecture, I'll do a lab demo showing the basics of how a routing protocol works.

2
00:00:14.820 --> 00:00:22.800
So the lab topology, we've got those five routers again R1 to R5, and I've already configured

3
00:00:22.830 --> 00:00:27.290
IP addresses on all of the interfaces.

4
00:00:27.330 --> 00:00:32.710
So first thing that I'm going to do is to configure a routing protocol.

5
00:00:32.740 --> 00:00:37.800
Now, the focus of this section is not on the routing protocol configuration.

6
00:00:37.860 --> 00:00:44.610
We'll get into that when we cover each of the routing protocols individually, in their own separate sections

7
00:00:44.670 --> 00:00:51.750
later on. The point of this section is to show you the commonalities, the things that work the same

8
00:00:51.750 --> 00:00:54.300
on all of the different routing protocols.

9
00:00:54.330 --> 00:01:02.010
So I'm going to use RIP, the Routing Information Protocol, for this demo and I'll show you the configuration

10
00:01:02.010 --> 00:01:02.400
now,

11
00:01:02.460 --> 00:01:06.410
so I've got that configured in WordPad here.

12
00:01:06.480 --> 00:01:12.180
You'll see that you'll do this lot in the real world as well, where you have common configurations that

13
00:01:12.180 --> 00:01:14.210
you're going to use on multiple routers.

14
00:01:14.250 --> 00:01:20.860
It's easiest to write them down in a text editor, and then you can copy and paste from there.

15
00:01:20.880 --> 00:01:27.660
Also in the real world, you'll usually have templates that you'll use for common configuration for your

16
00:01:27.900 --> 00:01:33.630
routers and switches too, and whenever you provision a new router or switch, all you'll have to do is take

17
00:01:33.630 --> 00:01:40.290
that template, change the IP addresses in there and then any other specific settings, and then you can

18
00:01:40.290 --> 00:01:45.840
copy and paste into the router or switch. It makes it a lot easier that way,

19
00:01:45.830 --> 00:01:48.360
it also stops you from making errors as well.

20
00:01:48.450 --> 00:01:50.110
So, that's what I'm going to do here.

21
00:01:50.130 --> 00:01:58.080
I've got my basic RIP configuration typed out in a text editor, so I've got 'router rip' to enable the

22
00:01:58.080 --> 00:01:58.950
protocol.

23
00:01:58.980 --> 00:02:02.200
I'm going to run 'version 2' rather than 'version 1'.

24
00:02:02.310 --> 00:02:09.090
I'm not going to do automatic summary at a classful boundary, and I'm going to enable it in all my interfaces that are

25
00:02:09.570 --> 00:02:11.700
in the 10.0.0.0 network.

26
00:02:11.700 --> 00:02:14.320
Again, don't worry too much about the config for now.

27
00:02:14.340 --> 00:02:16.960
We'll cover this in more detail later.

28
00:02:17.010 --> 00:02:25.650
So I'm going to copy that from my text editor and then go to the lab and I'm going to paste this in on

29
00:02:25.770 --> 00:02:35.130
each of the routers. So I'll do it on R1, I'll also do it on R2,

30
00:02:38.200 --> 00:02:40.810
on R3.

31
00:02:40.960 --> 00:02:46.420
I should've put 'config t' in the first line of the text editor and that would have made it a little bit easier

32
00:02:46.420 --> 00:02:47.190
for me.

33
00:02:47.260 --> 00:02:51.070
But that's okay, I can just type in each time.

34
00:02:51.070 --> 00:02:57.550
So just exactly the same config on all of my routers.

35
00:02:57.710 --> 00:03:04.960
Now, I'll go to one of the routers it was in the middle, that was R3 and I'm going to do a 'debug' on

36
00:03:04.960 --> 00:03:11.880
here. Debugs are similar to show commands but where a show command gives you a point in time snapshot

37
00:03:11.950 --> 00:03:18.540
information, debug information gets updated in real time. You'll see what I mean now.

38
00:03:18.610 --> 00:03:24.790
So just like show commands, debug commands get entered at the enable prompt and I'm going to 'debug

39
00:03:24.910 --> 00:03:33.790
ip rip'. And I should start seeing the updates being sent and received on here.

40
00:03:33.880 --> 00:03:41.460
So there you go, I saw a rip update being received from 10.1.0.2.

41
00:03:41.560 --> 00:03:47.480
Let's just check the topology, so I'm on R3 right now and

42
00:03:47.480 --> 00:03:50.260
10.1.0.2,

43
00:03:50.260 --> 00:03:52.970
that was an update coming in from R2.

44
00:03:52.990 --> 00:04:00.750
I'm also going to see updates coming in from R4 on 10.1.1.1 as well. So

45
00:04:00.770 --> 00:04:04.970
R3, because I enabled the routing protocol on all my routers,

46
00:04:05.020 --> 00:04:11.380
they will form adjacencies with each of their directly connected neighbors and they will start sending

47
00:04:11.410 --> 00:04:17.220
updates to each other. Not just about their own directly connected routes, but about all the networks they've

48
00:04:17.260 --> 00:04:23.440
learned from the other routers as well. So R3 should receive information about the

49
00:04:23.440 --> 00:04:26.870
10.0.0.0/24,

50
00:04:26.890 --> 00:04:31.650
the 10.0.1.1/24, and the 10.0.2.1/24

51
00:04:31.650 --> 00:04:38.560
network from R2, and also the 10.0.3.0/24 as well. It's also

52
00:04:38.560 --> 00:04:46.300
going to be sending updates to R2 and to R4 as well. So if I jump back on the command line, you'll

53
00:04:46.300 --> 00:04:54.820
see that yes, it is sending and receiving updates. So if I scroll back a bit, you'll see that it's been

54
00:04:54.820 --> 00:05:06.880
receiving updates from 10.1.0.2, which was R2, and it's also receiving updates

55
00:05:06.880 --> 00:05:14.560
from 10.1.1.1, which is R4. It's also sending updates to those routers

56
00:05:14.560 --> 00:05:23.620
as well. So it's getting this information. If I now do a 'show ip route', you'll see that the routing table

57
00:05:23.620 --> 00:05:24.600
is upated.

58
00:05:24.850 --> 00:05:31.520
Actually, let me just turn to debugging off as well to save them updating anymore.

59
00:05:31.540 --> 00:05:38.080
The command to turn off all debugging is 'undebug all' after you've enter this, you might still see

60
00:05:38.080 --> 00:05:45.580
a few debug outputs coming in but it will turn it off. So let's just scroll down a bit and do a 'show ip route'

61
00:05:45.940 --> 00:05:49.770
and you'll see that my routing table has now been updated.

62
00:05:49.840 --> 00:05:57.700
So you see the codes up at the top here tells you the way that that particular network was learned about,

63
00:05:57.700 --> 00:05:59.740
whether it's directly connected,

64
00:05:59.830 --> 00:06:01.150
a local route,

65
00:06:01.240 --> 00:06:06.220
whether it's a manually configured static route or if it was learned from a routing protocol and which

66
00:06:06.230 --> 00:06:08.750
routing protocol it was learned from.

67
00:06:08.780 --> 00:06:18.340
So you see here the code R, if we look up a bit higher up here and if I can find it there, R is RIP.

68
00:06:18.800 --> 00:06:26.110
So it learned the routes to the 10.0.0.0, the 10.0.1.0,the 10.0.2.0, and the 10.0.3.0 networks

69
00:06:26.440 --> 00:06:27.890
via RIP,

70
00:06:27.900 --> 00:06:35.620
also on the left hand side, 10.1.2.0 and 10.1.3.0. It is directly connected to all of the other networks.

71
00:06:36.040 --> 00:06:37.170
With the example here,

72
00:06:37.180 --> 00:06:43.300
I didn't have any static routes set-up beforehand, so the routers only knew about their directly

73
00:06:43.300 --> 00:06:44.650
connected interfaces.

74
00:06:44.650 --> 00:06:51.430
But when I enabled my routing protocol, they shared information with each other and the routing tables

75
00:06:51.430 --> 00:06:57.700
are going to be updated in all of the routers. If I jump onto R1 as well and do a 'show ip route' here,

76
00:06:57.940 --> 00:07:05.260
you'll see it also knows about all of the networks and our topology, either directly connected or it learned

77
00:07:05.260 --> 00:07:07.160
them via RIP.

78
00:07:07.210 --> 00:07:07.540
Okay,

79
00:07:07.590 --> 00:07:12.610
so that's the basics of how a routing protocol works.

80
00:07:12.610 --> 00:07:17.980
We'll get a bit deeper into routing protocols starting with the next lecture.

