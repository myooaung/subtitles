WEBVTT
1
00:00:00.940 --> 00:00:03.940
[Autogenerated] when it comes to pricing and AWS,

2
00:00:03.940 --> 00:00:08.340
a good pricing mindset to keep in your mind is the following

3
00:00:08.340 --> 00:00:14.090
pay as you go pay less when you reserve resource is and pay

4
00:00:14.090 --> 00:00:16.380
even less when you use more.

5
00:00:16.380 --> 00:00:20.410
Resource is a good rule of thumb when it comes to pricing,

6
00:00:20.410 --> 00:00:24.080
and AWS is you will pay for compute capacity.

7
00:00:24.080 --> 00:00:28.250
You will pay for storage and you will pay for data transfer

8
00:00:28.250 --> 00:00:33.080
out of AWS as we previously discussed,

9
00:00:33.080 --> 00:00:39.670
there are four volume types when it comes to EBS and E b s

10
00:00:39.670 --> 00:00:43.520
provisioned IOPS is the most expensive of all of these.

11
00:00:43.520 --> 00:00:51.700
However, it also provides very high, inconsistent performance as three,

12
00:00:51.700 --> 00:00:55.300
as we talked about earlier, comes in different types as well.

13
00:00:55.300 --> 00:00:59.780
It's important to understand the different types and the use cases

14
00:00:59.780 --> 00:01:03.340
for when to use them and when not to use them.

15
00:01:03.340 --> 00:01:07.700
Always pay close attention to get requests when you're

16
00:01:07.700 --> 00:01:12.200
dealing with S3 because again it is the most expensive

17
00:01:12.200 --> 00:01:15.540
operation you can perform in S3.

18
00:01:15.540 --> 00:01:19.000
When you want to use S3,

19
00:01:19.000 --> 00:01:22.420
take advantage of something like dynamodb to hold

20
00:01:22.420 --> 00:01:25.760
the metadata for your S3 objects.

21
00:01:25.760 --> 00:01:30.210
That way you don't have to do expensive get request to access that data.

22
00:01:30.210 --> 00:01:36.440
You can query your database to get that data to optimize costs in S3.

23
00:01:36.440 --> 00:01:40.380
Pay attention to the storage class you're using how much storage you're

24
00:01:40.380 --> 00:01:43.540
consuming because you're charged by the gigabyte.

25
00:01:43.540 --> 00:01:48.290
How many requests you're making to S3 and how much data

26
00:01:48.290 --> 00:01:51.840
you're transferring out of S3 Those will all affect the

27
00:01:51.840 --> 00:01:55.240
costs involved with using S3.

28
00:01:55.240 --> 00:02:00.920
When it comes to PBS volume costs, pay attention to the volume type.

29
00:02:00.920 --> 00:02:04.740
Again provisioned IOPS is the most expensive type.

30
00:02:04.740 --> 00:02:07.500
Pay attention to how maney IOPS you have provisioned

31
00:02:07.500 --> 00:02:09.000
because with provisioned IOPS,

32
00:02:09.000 --> 00:02:13.030
you specify your capacity and the higher the number all the way up to

33
00:02:13.030 --> 00:02:17.290
32,000 will affect the cost that you're gonna pay.

34
00:02:17.290 --> 00:02:18.460
And with provisions IOPS.

35
00:02:18.460 --> 00:02:21.670
Whether you use them or not, because you provisioned them,

36
00:02:21.670 --> 00:02:23.340
you will pay for them.

37
00:02:23.340 --> 00:02:28.040
Also, keep in mind that snapshots are cumulative.

38
00:02:28.040 --> 00:02:32.110
Yeah, they will take the changes between the previous snapshot.

39
00:02:32.110 --> 00:02:34.460
But the problem is, when you get many of these,

40
00:02:34.460 --> 00:02:39.180
you will begin to consume more storage and then data transfer.

41
00:02:39.180 --> 00:02:42.520
Anytime we move data out of AWS,

42
00:02:42.520 --> 00:02:46.530
there will be costs associated with that Look for every

43
00:02:46.530 --> 00:02:50.780
opportunity to incorporate serverless options is possible

44
00:02:50.780 --> 00:02:52.450
is part of your deployment.

45
00:02:52.450 --> 00:02:55.540
You see, two instances we've talked about,

46
00:02:55.540 --> 00:02:58.320
you need to make sure you understand the various types of

47
00:02:58.320 --> 00:03:01.740
two instances and when to use them.

48
00:03:01.740 --> 00:03:05.740
But in most cases, server list is gonna be a better option.

49
00:03:05.740 --> 00:03:09.490
It's gonna be more cost effective because you're not gonna have to manage

50
00:03:09.490 --> 00:03:13.640
a bunch of servers and take care of all that capacity.

51
00:03:13.640 --> 00:03:18.220
So serverless tends to come upon the exam.

52
00:03:18.220 --> 00:03:24.710
The areas you want to focus on our AWS lambda Amazon has three,

53
00:03:24.710 --> 00:03:25.390
believe it or not,

54
00:03:25.390 --> 00:03:31.440
is also serve URL is and Amazon API gateway as well as fargate.

55
00:03:31.440 --> 00:03:36.060
If you're working with Docker containers, there's others as well.

56
00:03:36.060 --> 00:03:39.200
But for the exam, these are the ones you should focus on.

57
00:03:39.200 --> 00:03:44.650
Lambda S3, API, Gateway and Fargate, which is part of E CSS,

58
00:03:44.650 --> 00:03:47.140
known as elastic container services.

59
00:03:47.140 --> 00:03:51.620
When answering questions on the exam related to compute cost,

60
00:03:51.620 --> 00:03:58.640
the following is a good guidance of what to focus on regarding the cost.

61
00:03:58.640 --> 00:04:02.640
Every second that a resource is running, it's costing you money.

62
00:04:02.640 --> 00:04:05.600
So when you don't need a server, shut it down.

63
00:04:05.600 --> 00:04:07.700
If you can replace it with a serve URL is option.

64
00:04:07.700 --> 00:04:09.240
That's even better.

65
00:04:09.240 --> 00:04:13.240
These instantiate figuration is also something you must focus on.

66
00:04:13.240 --> 00:04:14.130
For example,

67
00:04:14.130 --> 00:04:18.240
a T three instantiate is gonna be a lot less costly

68
00:04:18.240 --> 00:04:22.030
than a C five of similar size.

69
00:04:22.030 --> 00:04:27.230
The type of instance that you purchase also plays a role in cost.

70
00:04:27.230 --> 00:04:28.360
A reserved instance.

71
00:04:28.360 --> 00:04:31.110
I can save a lot of money over and on demand

72
00:04:31.110 --> 00:04:34.220
instantiate if it's running all the time.

73
00:04:34.220 --> 00:04:35.460
A good rule of thumb is.

74
00:04:35.460 --> 00:04:38.650
If a resource will run more than 50% of the time,

75
00:04:38.650 --> 00:04:43.440
it's probably more cost effective to run it as a reserved instance.

76
00:04:43.440 --> 00:04:45.840
The other instantiate IP is a spot instance,

77
00:04:45.840 --> 00:04:49.440
and these are designed to handle spotty loads.

78
00:04:49.440 --> 00:04:53.390
They can be interrupted and spot instances can see very cost

79
00:04:53.390 --> 00:04:58.340
effective When you use them correctly.

80
00:04:58.340 --> 00:05:02.090
The number of instances is also gonna play a factor because

81
00:05:02.090 --> 00:05:04.740
you're gonna be paying on a per instance basis.

82
00:05:04.740 --> 00:05:08.270
You remember you're paying by the second in most cases for an instance,

83
00:05:08.270 --> 00:05:11.940
so the more of these you have, the more it's going to cost.

84
00:05:11.940 --> 00:05:14.820
You should also pay attention to CloudWatch monitoring,

85
00:05:14.820 --> 00:05:19.020
depending on if you choose basic monitoring or detailed

86
00:05:19.020 --> 00:05:22.460
monitoring that will affect your costs and doing custom

87
00:05:22.460 --> 00:05:24.940
CloudWatch metrics will also affect your costs.

88
00:05:24.940 --> 00:05:29.250
So pay attention to that with CloudWatch and use CloudWatch to your advantage.

89
00:05:29.250 --> 00:05:32.110
To monitor your resource is because you can set up

90
00:05:32.110 --> 00:05:36.440
CloudWatch to monitor these instances, and when they're not being used,

91
00:05:36.440 --> 00:05:38.540
you can turn them off.

92
00:05:38.540 --> 00:05:41.730
Auto scaling can also be used to your advantage because we can

93
00:05:41.730 --> 00:05:46.410
use auto scaling again to scale down when we're not using a

94
00:05:46.410 --> 00:05:47.730
resource when we don't need them.

95
00:05:47.730 --> 00:05:49.890
When there's the peak load is not there.

96
00:05:49.890 --> 00:05:53.530
We can scale down and auto scaling helps us do that.

97
00:05:53.530 --> 00:05:57.780
Pay attention to the OS and software that you're using because there's

98
00:05:57.780 --> 00:06:01.540
questions on the exam related to OS and software.

99
00:06:01.540 --> 00:06:06.430
And if you look at them, usually they have licenses associated with them.

100
00:06:06.430 --> 00:06:13.100
Any time a licensed software product is involved or a licenses OS is involved,

101
00:06:13.100 --> 00:06:15.930
it's gonna cost more than an open source product.

102
00:06:15.930 --> 00:06:22.540
So SQL Server Enterprise or Oracle on a Windows Server 2016 box.

103
00:06:22.540 --> 00:06:25.660
It's going to cost a lot more than deploying a post grass

104
00:06:25.660 --> 00:06:30.040
SQL or of my SQL on Amazon Linux instance.

105
00:06:30.040 --> 00:06:31.440
Finally,

106
00:06:31.440 --> 00:06:34.960
the tendency that you select can have a huge impact on

107
00:06:34.960 --> 00:06:39.630
cost a shared tenant system is always going to cost less

108
00:06:39.630 --> 00:06:42.410
than a dedicated tenant system.

109
00:06:42.410 --> 00:06:43.410
If you remember,

110
00:06:43.410 --> 00:06:48.090
shared Tendencias a similar concept to apartment buildings versus a house.

111
00:06:48.090 --> 00:06:51.900
An apartment building is a multi tenant system.

112
00:06:51.900 --> 00:06:53.940
It has lots of occupants.

113
00:06:53.940 --> 00:06:58.330
Where is the house typically has a single owner some

114
00:06:58.330 --> 00:07:01.150
workloads that involved HIPPA or PC.

115
00:07:01.150 --> 00:07:07.270
IT compliance, for example, may not be allowed to run on shared tenant systems,

116
00:07:07.270 --> 00:07:10.540
so they may require dedicated tendency.

117
00:07:10.540 --> 00:07:12.340
So pay attention to that.

118
00:07:12.340 --> 00:07:18.740
Let's look at a couple of more exam questions.

119
00:07:18.740 --> 00:07:26.300
A custom application with 200 gigabyte my SQL database runs on two instance.

120
00:07:26.300 --> 00:07:29.520
The application is only being used for short periods of time in

121
00:07:29.520 --> 00:07:32.640
the morning and sometimes in the evening.

122
00:07:32.640 --> 00:07:38.140
What is the most cost effective storage type for this application?

123
00:07:38.140 --> 00:07:38.360
E.

124
00:07:38.360 --> 00:07:40.850
B s provisioned IOPS E.

125
00:07:40.850 --> 00:07:41.010
B.

126
00:07:41.010 --> 00:07:41.630
S throughput.

127
00:07:41.630 --> 00:07:43.860
Optimized HTTP E.

128
00:07:43.860 --> 00:07:49.220
B s general purpose SSD or Amazon efs again.

129
00:07:49.220 --> 00:07:50.380
Take a minute.

130
00:07:50.380 --> 00:07:51.870
Pause the video.

131
00:07:51.870 --> 00:07:54.020
Think about your answer.

132
00:07:54.020 --> 00:07:58.520
Did you pick C because the application is only being

133
00:07:58.520 --> 00:08:00.730
used for short periods of time?

134
00:08:00.730 --> 00:08:03.570
We're not gonna have a lot of activity on this because

135
00:08:03.570 --> 00:08:05.930
it's for very short periods of time.

136
00:08:05.930 --> 00:08:09.290
and because provisioned IOPS is gonna cost all the time,

137
00:08:09.290 --> 00:08:12.350
it's not a really cost effective model, but E.

138
00:08:12.350 --> 00:08:17.910
B s general purpose SSD is a great choice in this case because it's

139
00:08:17.910 --> 00:08:22.760
gonna be the most cost effective throughput optimizes,

140
00:08:22.760 --> 00:08:26.390
really not gonna work because we're dealing with this database on we're

141
00:08:26.390 --> 00:08:28.820
gonna have random reads happening from the database.

142
00:08:28.820 --> 00:08:32.130
So a traditional hard drive is not a good option.

143
00:08:32.130 --> 00:08:35.700
Remember, refer back to this We talked about this earlier, and E.

144
00:08:35.700 --> 00:08:39.910
F s is also not a good option for this again because

145
00:08:39.910 --> 00:08:41.550
we're dealing with a my SQL database.

146
00:08:41.550 --> 00:08:43.800
It's only running a short period of time each day,

147
00:08:43.800 --> 00:08:45.580
so we don't need this to be running.

148
00:08:45.580 --> 00:08:49.580
A better use would even be with server.

149
00:08:49.580 --> 00:08:56.540
URL is Aurora, So pay attention to these types of questions on the exam.

150
00:08:56.540 --> 00:08:59.940
Let's look at another question.

151
00:08:59.940 --> 00:09:04.630
A Solutions architect is designing a system which needs a minimum of

152
00:09:04.630 --> 00:09:09.340
eight M five large instances to serve traffic.

153
00:09:09.340 --> 00:09:13.440
The system will be deployed in US East one and needs to handle

154
00:09:13.440 --> 00:09:17.540
the failure of an entire availability zone.

155
00:09:17.540 --> 00:09:22.510
Assume that all two instances are properly linked to the

156
00:09:22.510 --> 00:09:27.550
elastic load balancer and you can use availability zones a

157
00:09:27.550 --> 00:09:31.340
through F six availability zones.

158
00:09:31.340 --> 00:09:34.440
How should you distribute the traffic to save as much as

159
00:09:34.440 --> 00:09:41.940
possible while maintaining high availability?

160
00:09:41.940 --> 00:09:43.940
Pause the video.

161
00:09:43.940 --> 00:09:50.840
Take a minute and think about the question.

162
00:09:50.840 --> 00:09:54.540
Did you select Option C?

163
00:09:54.540 --> 00:09:58.110
Questions like this one can be tricky on the exam

164
00:09:58.110 --> 00:10:00.940
if we don't read them carefully.

165
00:10:00.940 --> 00:10:08.940
The question states that we have to have eight servers available at all times,

166
00:10:08.940 --> 00:10:11.600
even if we lose a single availability zone.

167
00:10:11.600 --> 00:10:16.540
So losing one availability zone should not drop us below eight.

168
00:10:16.540 --> 00:10:23.070
It also states that we must do it in the most cost effective way possible.

169
00:10:23.070 --> 00:10:28.560
So some people might have selected Option A three

170
00:10:28.560 --> 00:10:31.340
servers and each ese a through D.

171
00:10:31.340 --> 00:10:33.210
The problem with the answer?

172
00:10:33.210 --> 00:10:33.940
A.

173
00:10:33.940 --> 00:10:35.110
We'll just take a quick look at it.

174
00:10:35.110 --> 00:10:36.940
We won't like go into each one of these,

175
00:10:36.940 --> 00:10:39.520
but we'll look at answer A because you should be

176
00:10:39.520 --> 00:10:41.740
familiar with this process at this point.

177
00:10:41.740 --> 00:10:47.390
But with a it's not gonna work, because if we lose a single availability zone,

178
00:10:47.390 --> 00:10:51.620
we started with 12 servers because we had four

179
00:10:51.620 --> 00:10:53.630
availability zones with three servers each,

180
00:10:53.630 --> 00:10:55.000
so we had 12 servers.

181
00:10:55.000 --> 00:10:57.020
Got to maintain a minimum of eight.

182
00:10:57.020 --> 00:10:58.280
We lose one, ese.

183
00:10:58.280 --> 00:11:03.180
We're gonna lose three servers that is gonna leave us at nine servers.

184
00:11:03.180 --> 00:11:05.540
That's more than the eighth that we need.

185
00:11:05.540 --> 00:11:09.240
And it's not as cost effective as one of the other options.

186
00:11:09.240 --> 00:11:14.030
That's what we have to look for on these questions when we're taking the exam,

187
00:11:14.030 --> 00:11:17.350
look very closely at how the question is worded.

188
00:11:17.350 --> 00:11:21.350
And if they're looking for something about most cost effective,

189
00:11:21.350 --> 00:11:23.440
you need to pay very close attention because there's

190
00:11:23.440 --> 00:11:26.150
likely going to be two correct answers.

191
00:11:26.150 --> 00:11:30.340
But one is gonna be better because it's gonna be more cost effective.

192
00:11:30.340 --> 00:11:31.470
So in this case,

193
00:11:31.470 --> 00:11:37.540
Option C is our best answer because we can lose a single availability zone

194
00:11:37.540 --> 00:11:44.340
and we're still going to have eight servers available.

195
00:11:44.340 --> 00:11:50.620
Let's look at some exam takeaways for always.

196
00:11:50.620 --> 00:11:54.610
On instances, purchase reserved instances like I was saying,

197
00:11:54.610 --> 00:11:57.040
it's gonna be cheaper to use, reserved instance.

198
00:11:57.040 --> 00:12:00.940
If it's gonna be on all the time,

199
00:12:00.940 --> 00:12:03.960
look for survival is options to eliminate instantiate

200
00:12:03.960 --> 00:12:05.960
costs because if we can go serve,

201
00:12:05.960 --> 00:12:09.910
URL is we're not gonna be paying an hourly or by the minute,

202
00:12:09.910 --> 00:12:14.180
or by the second rate for a server that's running we're only

203
00:12:14.180 --> 00:12:16.410
going to pay when it's actually being used.

204
00:12:16.410 --> 00:12:21.670
If we go serve URL is choose the most cost effective

205
00:12:21.670 --> 00:12:24.140
instantiate type for a given workload.

206
00:12:24.140 --> 00:12:29.740
Don't use a nem five when a T two will do or a T three.

207
00:12:29.740 --> 00:12:34.340
Don't use a C five When you can use an M five.

208
00:12:34.340 --> 00:12:38.940
Use the most cost effective data storage option again.

209
00:12:38.940 --> 00:12:43.290
Thinking back about EBS volumes Don't use provisioned IOPS SSD.

210
00:12:43.290 --> 00:12:46.900
If you don't need that general purpose will work just fine.

211
00:12:46.900 --> 00:12:50.130
In most cases, if you have need for high performance,

212
00:12:50.130 --> 00:12:57.000
then yes, you will have to use that. But pay attention to what the question is asking for a given scenario.

