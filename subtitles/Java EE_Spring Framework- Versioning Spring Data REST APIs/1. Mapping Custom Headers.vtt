WEBVTT
1
00:00:01.140 --> 00:00:01.560
Hi.

2
00:00:01.560 --> 00:00:06.640
This is Greg Golightly, and welcome to Using a Custom Header for Versioning.

3
00:00:06.640 --> 00:00:09.760
When you think about adding headers for a method in Spring,

4
00:00:09.760 --> 00:00:13.560
this is what might come to mind. If you wanted to add a custom header named

5
00:00:13.560 --> 00:00:19.090
Accept‑version, and only run this method if the value is v2, you could add the

6
00:00:19.090 --> 00:00:22.620
headers value in the @RequestMapping annotation,

7
00:00:22.620 --> 00:00:25.000
and it would work like you expect.

8
00:00:25.000 --> 00:00:28.340
Let's take a look at this in our sample project.

9
00:00:28.340 --> 00:00:30.600
Here's our ExampleService class.

10
00:00:30.600 --> 00:00:32.450
This is a regular REST controller,

11
00:00:32.450 --> 00:00:35.200
and we've got a couple of different methods defined. Notice

12
00:00:35.200 --> 00:00:38.690
how they both map to /schedule, however,

13
00:00:38.690 --> 00:00:42.920
we've included the headers value in the @RequestMapping annotation.

14
00:00:42.920 --> 00:00:50.360
GetScheduleV1 takes the header Accept‑version=v1 and getScheduleV2

15
00:00:50.360 --> 00:00:54.140
has the header value of Accept‑version=v2.

16
00:00:54.140 --> 00:00:57.250
Each method has a slightly different return value so that we

17
00:00:57.250 --> 00:00:59.300
can tell the difference when we call them.

18
00:00:59.300 --> 00:01:05.800
Let's fire up the app and see how we hit these services with the custom header.

19
00:01:05.800 --> 00:01:09.760
First, we'll try calling the endpoint without including the custom

20
00:01:09.760 --> 00:01:15.980
header Notice that we get a 404 Not Found because we did not

21
00:01:15.980 --> 00:01:18.350
include the proper header information.

22
00:01:18.350 --> 00:01:23.740
Let's try running it with the Accept version valued v1.

23
00:01:23.740 --> 00:01:27.150
Now we can see we get a response back with the message, Your

24
00:01:27.150 --> 00:01:30.500
v1 schedule is Monday through Friday, 9‑5.

25
00:01:30.500 --> 00:01:33.670
This matches the code that we annotated with the v1

26
00:01:33.670 --> 00:01:36.260
version in our example service.

27
00:01:36.260 --> 00:01:38.990
Now let's run it with the Accept‑version header with a

28
00:01:38.990 --> 00:01:44.870
value of v2, and we can see the message, Your v2 schedule

29
00:01:44.870 --> 00:01:47.620
is Monday through Wednesday, 6‑6.

30
00:01:47.620 --> 00:01:52.340
This matches what we have mapped in our service for the v2 header.

31
00:01:52.340 --> 00:02:02.000
Also notice in both examples, I was able to use the same URL, localhost:8081/schedule.

