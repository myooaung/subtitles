WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.440 --> 00:00:04.629
Let's understand Java variables.

00:00:04.629 --> 00:00:07.045
Java languages statically typed.

00:00:07.045 --> 00:00:10.790
All variables must be declared report that can be used.

00:00:11.280 --> 00:00:14.230
In some languages like Python.

00:00:14.230 --> 00:00:16.690
A variable can be used without declaring.

00:00:16.690 --> 00:00:19.340
But in Java I don't work.

00:00:19.470 --> 00:00:24.190
These are some primitive data types we have in Java.

00:00:24.190 --> 00:00:30.130
Typically you lose biotin sharp perceiving memory for small numbers.

00:00:30.130 --> 00:00:32.740
You will see in a longer,

00:00:32.740 --> 00:00:36.910
more widely used in real-world applications.

00:00:36.910 --> 00:00:39.895
Longer the higher the indenting deters.

00:00:39.895 --> 00:00:42.735
Florida and w's four decimal values.

00:00:42.735 --> 00:00:44.959
And double is more precise.

00:00:44.959 --> 00:00:47.750
And you are Boolean, true and false.

00:00:47.750 --> 00:00:52.440
You have GAD, which can store single Unicode character.

00:00:56.530 --> 00:01:01.230
Let's see some examples of primitive data types.

00:01:04.720 --> 00:01:08.105
Let's declare a short type.

00:01:08.105 --> 00:01:12.965
And we'll have five. Let's print it out.

00:01:12.965 --> 00:01:20.450
In Java, we can concatenate a string which is rad sharp with another value.

00:01:20.450 --> 00:01:24.450
It can be of different derivative by using the plus symbol.

00:01:28.390 --> 00:01:31.160
So it printed varchar.

00:01:31.160 --> 00:01:33.780
Let's declaring tape.

00:01:38.950 --> 00:01:43.760
Can grayed out and hit Enter.

00:01:43.760 --> 00:01:45.500
It will print the entire system out,

00:01:45.500 --> 00:01:47.520
print a landscape map.

00:01:49.240 --> 00:01:52.500
Let's now print variant.

00:01:58.420 --> 00:02:06.150
And reading card printed will declare a double type.

00:02:08.020 --> 00:02:11.730
And we'll print the WTO.

00:02:19.720 --> 00:02:23.790
Similarly, we can have Boolean type.

00:02:28.390 --> 00:02:31.920
And let's print out also.

00:02:38.260 --> 00:02:42.980
And all these are variables where declaring of different data types.

00:02:42.980 --> 00:02:47.130
If we tried to assign without declaring them.

00:02:50.980 --> 00:02:54.725
You can't have VD double to 30.5.

00:02:54.725 --> 00:03:00.660
It says cannot resolve symbol where W2 and you will get a compile time error also.

00:03:01.660 --> 00:03:05.730
You cannot have variables without declaration.

00:03:08.830 --> 00:03:13.460
Also, the convention is to start the variables with the small letter.

00:03:13.460 --> 00:03:18.180
And then first letter of every word can be a capital letter.

00:03:19.810 --> 00:03:27.930
Let's declare a caretaker and catch store single characters only.

00:03:29.110 --> 00:03:31.820
And if we try to score.

00:03:31.820 --> 00:03:34.070
Then grid given error.

00:03:34.070 --> 00:03:36.590
You can just hovered over this and then you can

00:03:36.590 --> 00:03:40.380
see too many characters in character literal.

00:03:40.630 --> 00:03:43.520
To store multiple characters.

00:03:43.520 --> 00:03:46.410
We have something called string in Java.

00:03:47.050 --> 00:03:52.290
So java.lang, string presents character strings.

00:03:54.970 --> 00:03:58.410
Let's declare a string variable.

00:04:05.260 --> 00:04:09.270
Then we can print it out like the other variables.

00:04:14.220 --> 00:04:17.725
String classes, many inbuilt methods.

00:04:17.725 --> 00:04:20.690
Let's try out one of those.

00:04:21.540 --> 00:04:24.625
You can simply put a dot here.

00:04:24.625 --> 00:04:28.730
And intelligent it would show you all the available methods.

00:04:29.610 --> 00:04:34.280
And let's do lowercase.

00:04:35.520 --> 00:04:45.620
And we'll say var string converted to lowercase. Lets run this.

00:04:48.600 --> 00:04:52.105
We can see that the verge thing is getting printed

00:04:52.105 --> 00:04:56.390
and also the stringing Lord cases getting predict.

00:04:58.510 --> 00:05:02.790
Similarly, you can prioritize method substring.

00:05:03.370 --> 00:05:06.650
Then we have our editor types in Java.

00:05:06.650 --> 00:05:10.025
It also fixed number of values of single-letter type.

00:05:10.025 --> 00:05:13.310
And you can grab an element specifying the index number.

00:05:13.310 --> 00:05:15.755
And the index number starts with 0.

00:05:15.755 --> 00:05:18.150
Let's see an example.

00:05:18.670 --> 00:05:22.020
We'll declare an entire array.

00:05:22.030 --> 00:05:25.830
Let's call it in direct variable.

00:05:26.050 --> 00:05:28.730
We need to give it as Cij,

00:05:28.730 --> 00:05:32.360
which the new int of size three.

00:05:32.360 --> 00:05:35.400
And let's have a semicolon.

00:05:36.010 --> 00:05:39.120
Let's store some values in data.

00:05:39.120 --> 00:05:43.490
The index 0 will store them.

00:05:44.070 --> 00:05:49.790
And then similarly Hit index 12 will store different values.

00:05:57.810 --> 00:06:03.950
Now let's bring in data value.

00:06:16.650 --> 00:06:20.510
We can see that it is getting printed.

00:06:21.000 --> 00:06:27.380
You can also declare that is by directly specifying the values within curly braces.

00:06:30.510 --> 00:06:35.330
And the value should be separated by comma.

00:06:39.330 --> 00:06:44.020
Now let's print the value at index two for

00:06:44.020 --> 00:06:53.330
this area. This would get printed.

00:06:56.310 --> 00:06:57.520
Here.

00:06:57.520 --> 00:07:00.260
We can see that these getting printed.

00:07:00.510 --> 00:07:02.770
So if you know the values,

00:07:02.770 --> 00:07:04.395
you can declared like this.

00:07:04.395 --> 00:07:10.685
Otherwise you can declared with the size and then at runtime you can populate the values.

00:07:10.685 --> 00:07:14.960
You can search for Java documentation and go to

00:07:14.960 --> 00:07:20.820
the oracle site and learn about different data types and various operations you can do.

00:07:21.370 --> 00:07:25.860
Let's search for Java is Oracle.

00:07:33.040 --> 00:07:36.710
We can find more information about diaries and

00:07:36.710 --> 00:07:41.610
different operations that we can do are not is like sorting, searching, etc.
