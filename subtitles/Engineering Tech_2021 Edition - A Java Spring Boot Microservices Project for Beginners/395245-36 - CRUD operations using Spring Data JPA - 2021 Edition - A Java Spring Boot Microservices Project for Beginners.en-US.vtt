WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.530 --> 00:00:05.160
We'll come back till now we have seen how to fate shot data from

00:00:05.160 --> 00:00:10.270
the database using the crowd repository findall method.

00:00:11.060 --> 00:00:14.670
Let us now understand how to do

00:00:14.670 --> 00:00:19.240
other kinds of database operations such as insert, delete, and update.

00:00:21.250 --> 00:00:25.805
First we'll make some changes to the course NPP.

00:00:25.805 --> 00:00:29.269
We'll add an annotation JSON ignore properties,

00:00:29.269 --> 00:00:32.600
show that some of the additional implementations of hibernate,

00:00:32.600 --> 00:00:34.455
like hibernate to Lady Michelle,

00:00:34.455 --> 00:00:37.170
Asia and handler, those you'd be ignored.

00:00:37.690 --> 00:00:40.985
Do not need to understand those concepts.

00:00:40.985 --> 00:00:43.745
To do the prod operations.

00:00:43.745 --> 00:00:48.050
Then will ensure a course id is of type.

00:00:48.050 --> 00:00:49.265
Begin to our long,

00:00:49.265 --> 00:00:53.520
because our database ID field is of type big it,

00:00:55.000 --> 00:00:59.450
it did not create any suits for the select or final operation,

00:00:59.450 --> 00:01:01.340
but for insert, delete will apply.

00:01:01.340 --> 00:01:03.660
In short, it's of the same type.

00:01:04.810 --> 00:01:09.170
Generate the corresponding getter or setter methods are simply

00:01:09.170 --> 00:01:13.860
update the data type for the course ID field.

00:01:18.130 --> 00:01:20.465
Back in the controller.

00:01:20.465 --> 00:01:25.620
Let's add a method to get a specific course.

00:01:27.460 --> 00:01:33.420
So this method will take a course ID and return the corresponding course.

00:01:33.550 --> 00:01:40.050
Core repository has different methods to fit specific IDs.

00:01:44.860 --> 00:01:49.850
By ID. Then we

00:01:49.850 --> 00:01:54.305
have to capture the request mapping since we'll be dynamically passing the ID.

00:01:54.305 --> 00:01:58.655
That we can do that is by using curly braces center,

00:01:58.655 --> 00:02:01.620
capturing some variable inside that.

00:02:03.250 --> 00:02:06.244
Using the path variable annotation,

00:02:06.244 --> 00:02:11.100
we can map the ID getting passed in the URL to the method parameter.

00:02:12.940 --> 00:02:16.955
And using that ID, we can fetch data.

00:02:16.955 --> 00:02:20.460
Let's run it and see the output.

00:02:22.330 --> 00:02:26.435
It's trying to build it. It gave some syntax error.

00:02:26.435 --> 00:02:31.790
Let's fix those. It path variable.

00:02:31.790 --> 00:02:36.200
We do not need to use the equal sign.

00:02:36.200 --> 00:02:38.850
Let's sum it again.

00:02:39.820 --> 00:02:45.950
Okay, so we love to convert the output to a core subject.

00:02:45.950 --> 00:02:49.010
So there is another method available, gate one ID.

00:02:49.010 --> 00:02:51.530
So that will directly give us a core subject from

00:02:51.530 --> 00:02:54.990
the course to positively. Let's use that.

00:02:56.230 --> 00:03:03.180
So gate one and specify the ID and the corresponding cost object will be returned.

00:03:07.630 --> 00:03:10.800
Let's run it again.

00:03:14.350 --> 00:03:18.800
This dynamic RAM fame application is up and running at port 8080.

00:03:18.800 --> 00:03:21.140
Let's see of courses.

00:03:21.140 --> 00:03:22.670
You are, it works fine, it does.

00:03:22.670 --> 00:03:25.295
And now we'll pass specific ID.

00:03:25.295 --> 00:03:27.780
Let's pass one.

00:03:29.170 --> 00:03:33.600
And we can see that the fossil record is getting faced.

00:03:36.730 --> 00:03:42.440
That is the big data HADOOP course bus two.

00:03:42.440 --> 00:03:46.220
And then you can see the second course is getting phased.

00:03:46.220 --> 00:03:47.570
And if we try to bison ID,

00:03:47.570 --> 00:03:52.415
which doesn't exist to give you some exception which can be handled in the application.

00:03:52.415 --> 00:03:59.250
But for now, let's better understand how could just pass idea and get our data back.

00:04:01.540 --> 00:04:04.820
Now we'll see the insert operation.

00:04:04.820 --> 00:04:06.860
So for the insert operation,

00:04:06.860 --> 00:04:11.960
we need to pass an object to the CPA repositories to there

00:04:11.960 --> 00:04:18.120
is a safe mentor that would take core subject is a parameter and saved to the database.

00:04:23.020 --> 00:04:27.709
Instead of get elliptic send a post request to the application.

00:04:27.709 --> 00:04:32.360
The way to do that is specific to our mid third dot type is

00:04:32.360 --> 00:04:38.520
pushed and passed through a URL in the value.

00:04:38.680 --> 00:04:43.590
So we left class courses URL.

00:04:45.250 --> 00:04:48.320
So that when the URL to post,

00:04:48.320 --> 00:04:51.500
let's now add a method to do delete operation,

00:04:51.500 --> 00:04:53.450
like the insert operation,

00:04:53.450 --> 00:05:01.745
delete operation would not return anything apart from the HTTP status to delete a course.

00:05:01.745 --> 00:05:04.895
So we'll have to pass the course.

00:05:04.895 --> 00:05:07.130
Id is a parameter.

00:05:07.130 --> 00:05:14.310
The way to do that is by using the path variable annotation and specifying them.

00:05:16.270 --> 00:05:19.440
Method name is delete.

00:05:25.330 --> 00:05:34.170
We can now one method for insertion and deletion will go and run the application.

00:05:35.110 --> 00:05:38.975
Got some compilation error. There's a typo here.

00:05:38.975 --> 00:05:42.815
Let's fix it. Run it again.

00:05:42.815 --> 00:05:44.870
That is running now,

00:05:44.870 --> 00:05:50.795
we can pass an ID and see the output are paired with at all courses.

00:05:50.795 --> 00:05:52.310
Let's not try post.

00:05:52.310 --> 00:05:55.130
Select the type is pushed to the request.

00:05:55.130 --> 00:05:58.740
Now look two passages and object in the body.

00:06:00.090 --> 00:06:08.600
So let's add a new record with course edify and course named Java and somewhat acronym.

00:06:10.050 --> 00:06:15.565
And Ruby specified though typist Jason application station because you're

00:06:15.565 --> 00:06:21.145
sending adjacent object. Now send it.

00:06:21.145 --> 00:06:23.440
Let's see if it got inserted.

00:06:23.440 --> 00:06:27.820
Gave some error. Let's see what it is.

00:06:27.820 --> 00:06:32.425
It says IDs of the class must be manually assigned.

00:06:32.425 --> 00:06:34.630
Yeah, so these two here is,

00:06:34.630 --> 00:06:36.565
while reading the incoming request,

00:06:36.565 --> 00:06:41.300
we did not convert that to a core subject.

00:06:41.760 --> 00:06:45.325
So when you specify a request for the annotation,

00:06:45.325 --> 00:06:49.104
the JSON object will get converted to a core subject

00:06:49.104 --> 00:06:54.170
and object will be used by the GP repository.

00:06:55.050 --> 00:06:57.400
So that is the state that we missed.

00:06:57.400 --> 00:07:00.250
Let's run it again.

00:07:00.250 --> 00:07:04.330
We'll now post, post the same object with Coursera.

00:07:04.330 --> 00:07:09.529
Before. This time we got to a 100 okay, status.

00:07:11.040 --> 00:07:14.540
Let's go and check it in our database.

00:07:17.400 --> 00:07:21.250
We can see that the accord with

00:07:21.250 --> 00:07:25.520
course Eddie for cotton circuit and we can see the query in the logo.

00:07:29.890 --> 00:07:32.570
You'll add another record.

00:07:32.570 --> 00:07:36.900
Let's insert course with Coursera D5.

00:07:42.400 --> 00:07:45.275
Calories also getting circuit.

00:07:45.275 --> 00:07:53.150
You can change the course m and send it again to see that.

00:07:53.150 --> 00:07:55.440
But of course template updated.

00:07:58.390 --> 00:08:03.600
To use the same method could do obtain also.

00:08:04.300 --> 00:08:10.430
Lets now try or delete for delete with up to select the delete request type.

00:08:10.430 --> 00:08:12.740
First, let's do a get.

00:08:12.740 --> 00:08:15.170
We are able to get the course.

00:08:15.170 --> 00:08:17.600
You'd cos 35, let's not deleted, select,

00:08:17.600 --> 00:08:21.060
Delete and send. The same request.

00:08:29.260 --> 00:08:32.550
Will delete an anther record.

00:08:34.360 --> 00:08:40.350
This time of course ID for and you take him got deleted.
