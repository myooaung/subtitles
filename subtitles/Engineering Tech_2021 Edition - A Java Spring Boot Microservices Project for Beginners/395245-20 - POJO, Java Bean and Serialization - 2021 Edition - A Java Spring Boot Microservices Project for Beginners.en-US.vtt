WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.350
will you come back?

00:00:01.350 --> 00:00:02.150
Till now,

00:00:02.150 --> 00:00:03.800
we have seen Java classes,

00:00:03.800 --> 00:00:05.550
objects and interfaces.

00:00:05.550 --> 00:00:11.550
Let's now look at the one of the Tom or standard that that is there.

00:00:11.550 --> 00:00:12.560
In the Java world,

00:00:12.560 --> 00:00:16.330
it is called Pozo Plain old Java object.

00:00:16.330 --> 00:00:18.050
So what does it really mean?

00:00:18.050 --> 00:00:25.410
The concept oppose a was introduced by Java some time back toe being some sort off standard

00:00:25.410 --> 00:00:29.350
or or globally acceptable former with the Java community.

00:00:29.350 --> 00:00:35.730
So there are some standards for the class must be declared public.

00:00:35.730 --> 00:00:38.080
Properties of pills must be private.

00:00:38.080 --> 00:00:43.530
So we have created Java classes and we are some feels and let the private that is because

00:00:43.530 --> 00:00:48.960
of the poster standard and must have public getter instead of matters so that anybody wants

00:00:48.960 --> 00:00:53.170
to interact with This object came in tracked through gator inside of matters,

00:00:53.170 --> 00:00:58.100
so this should be public in produce 11 different constructor.

00:00:58.100 --> 00:01:04.700
It can also a personal constructed with documents poses make the program more reliable and

00:01:04.700 --> 00:01:06.470
increase its visibility.

00:01:06.470 --> 00:01:10.110
It is kind of the global standard now for Java development.

00:01:10.110 --> 00:01:12.550
If we're building Java classes and objects,

00:01:12.550 --> 00:01:15.850
you keep in mind approaches standards while designing them.

00:01:15.850 --> 00:01:19.240
Next coming to Java bean,

00:01:19.240 --> 00:01:20.770
a bill is a pozo,

00:01:20.770 --> 00:01:22.880
but additional it must be serial Izabal.

00:01:22.880 --> 00:01:24.530
So let's understand what is.

00:01:24.530 --> 00:01:26.810
The relation is serialized.

00:01:26.810 --> 00:01:28.510
Object is converted to bite,

00:01:28.510 --> 00:01:33.750
stream and stored in memory or a tent or databases or it in the file system,

00:01:33.750 --> 00:01:38.190
and the byte stream can be this realized to reconstruct topped it.

00:01:38.190 --> 00:01:40.970
Serialism helps in sharing objects,

00:01:40.970 --> 00:01:43.070
so that could be multiple Java instances.

00:01:43.070 --> 00:01:44.330
Running in an inter praise,

00:01:44.330 --> 00:01:48.020
you can take a knob checked from one instance,

00:01:48.020 --> 00:01:52.220
serialize it and then share that serialize object with another instance,

00:01:52.220 --> 00:01:57.830
which can be serialize it and use it and serialize update can be cast for faster data

00:01:57.830 --> 00:01:58.300
upriver.

00:01:58.300 --> 00:02:00.580
It is faster than recreating.

00:02:00.580 --> 00:02:04.700
The object you see realize it cash it and D C realize it.

00:02:04.700 --> 00:02:07.090
And use that to suffer another plan,

00:02:07.090 --> 00:02:08.820
which is a question for the same object.

00:02:08.820 --> 00:02:10.780
Rather than trying to build object again,

00:02:10.780 --> 00:02:16.710
we can also itchy persistence by storing intimated state of an object with simulation.

00:02:16.710 --> 00:02:21.400
So let's say there is an object with certain pills and the pills can get changed.

00:02:21.400 --> 00:02:22.160
For example,

00:02:22.160 --> 00:02:25.150
number of users enrolled for a course can change,

00:02:25.150 --> 00:02:28.150
and number of reviews for a course might change.

00:02:28.150 --> 00:02:33.850
So for the northern intimidate State off any object you condition allies the intermediate

00:02:33.850 --> 00:02:40.030
state and know that it is heavily used in database And it is to store intimidate states

00:02:40.030 --> 00:02:46.410
which we'll discuss later when we start talking about Javadi This inflection now how we

00:02:46.410 --> 00:02:47.970
make an object see relatable.

00:02:47.970 --> 00:02:53.030
We do that by implementing Jabhat IOC realizable in defaced and then the object becomes

00:02:53.030 --> 00:02:58.690
cereal Izabal So that is all about puzzle job in and simulation.

00:02:58.690 --> 00:02:59.400
Thank you.

