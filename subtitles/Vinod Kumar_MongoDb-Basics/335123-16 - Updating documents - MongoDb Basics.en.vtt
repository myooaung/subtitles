WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:07.440
Let's have a look at updating documents on for updating the documents.

00:00:07.440 --> 00:00:08.890
Let's take a different collection.

00:00:08.890 --> 00:00:09.230
Andi.

00:00:09.230 --> 00:00:12.630
I have another Jason are a document called Products.

00:00:12.630 --> 00:00:13.390
Start Jason.

00:00:13.390 --> 00:00:17.850
Let's import the same thing into our Mongo DB database.

00:00:17.850 --> 00:00:18.600
To do so.

00:00:18.600 --> 00:00:22.920
Let's execute the Mongo import for it.

00:00:22.920 --> 00:00:30.460
Jason Buddy Onda database that we want to use the testily be on the collection that we want

00:00:30.460 --> 00:00:32.330
to use is the same name as the product,

00:00:32.330 --> 00:00:34.530
so I can just type your product.

00:00:34.530 --> 00:00:36.080
Start chase on now.

00:00:36.080 --> 00:00:37.760
Since we didn't mention the collection name,

00:00:37.760 --> 00:00:39.880
it's going to take the base name off this file,

00:00:39.880 --> 00:00:41.520
which happens to be product.

00:00:41.520 --> 00:00:43.680
So that's execute Andi,

00:00:43.680 --> 00:00:46.450
it says imported 85 documents.

00:00:46.450 --> 00:00:47.180
Now.

00:00:47.180 --> 00:00:51.730
One thing you can observe this time is that if I run the command once more,

00:00:51.730 --> 00:00:53.360
it's going to result in tow.

00:00:53.360 --> 00:00:54.480
Others on.

00:00:54.480 --> 00:00:56.660
That's because if you observe,

00:00:56.660 --> 00:01:00.530
we already have underscored idee property for every document.

00:01:00.530 --> 00:01:03.500
If you try to insert again with the same underscored Heidi,

00:01:03.500 --> 00:01:04.700
we get the other.

00:01:04.700 --> 00:01:08.970
So now that we have got all the documents inserted,

00:01:08.970 --> 00:01:11.350
let's have a look at what exactly we have.

00:01:11.350 --> 00:01:12.380
That's it.

00:01:12.380 --> 00:01:12.760
US.

00:01:12.760 --> 00:01:19.450
Test two db show collections And this time I want to say,

00:01:19.450 --> 00:01:22.120
db dot products Start,

00:01:22.120 --> 00:01:32.140
find don't pretty Let's say we want to modify a data for one off this product.

00:01:32.140 --> 00:01:33.030
For example,

00:01:33.030 --> 00:01:40.520
let's say the name off this particular product for 19 instead of branch all I want to

00:01:40.520 --> 00:01:42.050
change this toe eggplant,

00:01:42.050 --> 00:01:43.770
And to do that,

00:01:43.770 --> 00:01:46.310
we would be using the update command.

00:01:46.310 --> 00:01:50.350
So we'll say db dot broader start update.

00:01:50.350 --> 00:01:53.320
So the update takes a few parameters.

00:01:53.320 --> 00:01:58.860
The first Fatemi turn off this update function is the quietly so the quiet he happens to be

00:01:58.860 --> 00:01:59.850
underscore.

00:01:59.850 --> 00:02:01.250
Idea is 19.

00:02:01.250 --> 00:02:06.550
The second is the document that you want to do.

00:02:06.550 --> 00:02:12.140
Now if I just say that I want to change the name off this from brindle,

00:02:12.140 --> 00:02:16.850
toe eggplant and press ender.

00:02:16.850 --> 00:02:23.820
Now it says that number off documents match this one number of absurd documents.

00:02:23.820 --> 00:02:27.350
Zero a number off modified documents is one.

00:02:27.350 --> 00:02:31.550
And if I go and have a look at whether it has updated or not,

00:02:31.550 --> 00:02:32.450
David,

00:02:32.450 --> 00:02:37.660
our products start find dot pretty Andi,

00:02:37.660 --> 00:02:41.580
you should see that the product number 19 is changed,

00:02:41.580 --> 00:02:43.650
but not as we expected.

00:02:43.650 --> 00:02:46.150
We wanted the name to be changed,

00:02:46.150 --> 00:02:48.550
but it has replaced the entire document.

00:02:48.550 --> 00:02:49.850
So this was a bad idea.

00:02:49.850 --> 00:02:56.960
So in order to change only one or two properties often entire document we should be using

00:02:56.960 --> 00:02:58.660
an operator called Set.

00:02:58.660 --> 00:02:59.650
For example,

00:02:59.650 --> 00:03:02.900
let's do the same thing for this one.

00:03:02.900 --> 00:03:05.510
Except that incident the brand fresh.

00:03:05.510 --> 00:03:05.730
Oh,

00:03:05.730 --> 00:03:11.950
I want to change this to Grand Mal Not and to do so this time I'm going to use db dot

00:03:11.950 --> 00:03:14.250
products Don't update.

00:03:14.250 --> 00:03:20.500
I'll say the same quality this time underscored ideas 20 Onda Then the document that we

00:03:20.500 --> 00:03:25.050
want to update happens to be dollar set.

00:03:25.050 --> 00:03:26.360
And then we say,

00:03:26.360 --> 00:03:28.260
What are the property that we want to set?

00:03:28.260 --> 00:03:33.420
So I'll take your brand happens to be my lord And if I want,

00:03:33.420 --> 00:03:37.750
I can also add another property which is currently not existing,

00:03:37.750 --> 00:03:38.970
for example,

00:03:38.970 --> 00:03:42.920
I may say that details Andi,

00:03:42.920 --> 00:03:45.050
I can say you're something like this,

00:03:45.050 --> 00:03:47.060
which I don't have any details at this time.

00:03:47.060 --> 00:03:51.360
So I closed the bracket for the set operators on the clothes,

00:03:51.360 --> 00:03:56.190
the bracket for the modifying document and that's the end of the update function so I can

00:03:56.190 --> 00:03:58.130
execute the same thing again,

00:03:58.130 --> 00:03:58.910
the same result,

00:03:58.910 --> 00:04:03.050
it says number of documents matches one number off absurd,

00:04:03.050 --> 00:04:07.490
documented zero and modified document is one unlike the previous one.

00:04:07.490 --> 00:04:07.880
Now,

00:04:07.880 --> 00:04:11.820
if I execute the find method to redo all the values,

00:04:11.820 --> 00:04:18.360
you'll see that the document 20 is intact except the brand has changed.

00:04:18.360 --> 00:04:20.950
A new property call details is added.

