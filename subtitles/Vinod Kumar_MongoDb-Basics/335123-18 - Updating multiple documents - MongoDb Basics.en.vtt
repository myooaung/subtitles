WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:07.380
Let's everyone increment the price off all the products off fresh whole bran.

00:00:07.380 --> 00:00:08.510
So first,

00:00:08.510 --> 00:00:10.570
let's find out what of those products.

00:00:10.570 --> 00:00:13.250
So we get into the Mongo Shell.

00:00:13.250 --> 00:00:15.050
That's to date of this.

00:00:15.050 --> 00:00:16.390
And then I'll say,

00:00:16.390 --> 00:00:25.900
db dot products don't find and I'll give the conditioners brand is fresher Onda.

00:00:25.900 --> 00:00:30.050
We can also see a pretty so that we can see the results properly.

00:00:30.050 --> 00:00:31.780
So there are many of them.

00:00:31.780 --> 00:00:39.880
Let's see the last few off them where the product price happens to be 29 35 39 and we want

00:00:39.880 --> 00:00:44.750
toe check if that increases the product's price for all of this.

00:00:44.750 --> 00:00:51.250
So let's right the quiet for the same things with a D v dot products start update and the

00:00:51.250 --> 00:00:57.610
criteria happens to be brand equals two official and then toe increment.

00:00:57.610 --> 00:01:00.580
The price we can say dollar I.

00:01:00.580 --> 00:01:00.830
N.

00:01:00.830 --> 00:01:01.210
C.

00:01:01.210 --> 00:01:08.410
For inclement with a unit price on the amount being incriminated lets everyone to

00:01:08.410 --> 00:01:10.050
incriminate is by â‚¹5.

00:01:10.050 --> 00:01:18.260
So it says here that find all the products with this brand facial and then increments the

00:01:18.260 --> 00:01:20.380
unit price by five.

00:01:20.380 --> 00:01:23.370
So if it is 30 it should become terrified.

00:01:23.370 --> 00:01:25.070
Terrified becomes 40 and so on.

00:01:25.070 --> 00:01:28.180
So let's see if this works saved this.

00:01:28.180 --> 00:01:29.550
Andi,

00:01:29.550 --> 00:01:43.360
execute this when execute it says number off documents matched one Absolutely zero modified

00:01:43.360 --> 00:01:43.830
his one.

00:01:43.830 --> 00:01:45.040
But we saw there are many,

00:01:45.040 --> 00:01:47.140
many documents matching that condition,

00:01:47.140 --> 00:01:50.050
but there was only one update took place.

00:01:50.050 --> 00:01:51.780
Now this is because by default,

00:01:51.780 --> 00:01:56.610
mongo db opted the very first document that it finds Not since in this case it was quite

00:01:56.610 --> 00:01:57.410
arbitrary.

00:01:57.410 --> 00:01:59.630
We don't get the desired result.

00:01:59.630 --> 00:02:00.740
You can go and verify that.

00:02:00.740 --> 00:02:01.350
Also,

00:02:01.350 --> 00:02:07.660
ultimately we go here and then specify 1/3 option where we earlier give absurd.

00:02:07.660 --> 00:02:09.320
This time we don't want to Really absurd.

00:02:09.320 --> 00:02:16.360
But we can say your multi as true now by default Multi has been set us false.

00:02:16.360 --> 00:02:17.610
So we save this.

00:02:17.610 --> 00:02:24.100
Were under same thing again on defense it This time it is Master documents are 56 modified

00:02:24.100 --> 00:02:25.460
documents are 56.

00:02:25.460 --> 00:02:28.100
So we can also go to the Mongo shell.

00:02:28.100 --> 00:02:28.810
Onda,

00:02:28.810 --> 00:02:37.250
check Devi Dark Products start find Onda with their brand fresher Well,

00:02:37.250 --> 00:02:38.150
so say pretty.

00:02:38.150 --> 00:02:42.700
So if you remember the last few outputs we had Ah,

00:02:42.700 --> 00:02:45.030
35 For this We now have 40.

00:02:45.030 --> 00:02:49.150
We had 39 it is 44 we had 29.

00:02:49.150 --> 00:02:54.250
That's changed 234 So this way we can update multiple documents as well.

