WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.880
work with more complex queries.

00:00:04.880 --> 00:00:06.820
We need to have more complex state.

00:00:06.820 --> 00:00:09.540
So I have a file here called Sales Death Date.

00:00:09.540 --> 00:00:10.450
Other dogs.

00:00:10.450 --> 00:00:12.420
The extension doesn't matter.

00:00:12.420 --> 00:00:14.600
But if you look at the file carefully,

00:00:14.600 --> 00:00:16.290
this is not a Jason Ari.

00:00:16.290 --> 00:00:17.670
For example,

00:00:17.670 --> 00:00:20.550
Jason Fields must have double correct text,

00:00:20.550 --> 00:00:27.010
and also an array must have started their square record on every Jason object must have a

00:00:27.010 --> 00:00:27.590
comma,

00:00:27.590 --> 00:00:30.310
but this is just a collection of Jason objects,

00:00:30.310 --> 00:00:31.750
one object but light.

00:00:31.750 --> 00:00:35.530
So let's import the same in tow among with the big collection.

00:00:35.530 --> 00:00:36.240
For that,

00:00:36.240 --> 00:00:37.500
let's issue the command.

00:00:37.500 --> 00:00:42.770
Mongo Import on the TV is tested.

00:00:42.770 --> 00:00:43.230
Levy,

00:00:43.230 --> 00:00:45.870
on the file that we want to use,

00:00:45.870 --> 00:00:49.120
happens to be called sales data dot dogs.

00:00:49.120 --> 00:00:51.150
If you don't mention the collection name,

00:00:51.150 --> 00:00:53.260
the base name of the file will be used,

00:00:53.260 --> 00:00:55.450
which is sales dash data.

00:00:55.450 --> 00:00:59.520
Now I would like to have this as a collection called Sales,

00:00:59.520 --> 00:01:03.550
so I'll see your data collection says.

00:01:03.550 --> 00:01:05.560
And when I pressed Enter,

00:01:05.560 --> 00:01:11.550
you'll see that it has imported 286 document Let's go and have a look into that in the

00:01:11.550 --> 00:01:12.400
Mongol shell.

00:01:12.400 --> 00:01:21.840
So we have the sales on the DB dot sales start,

00:01:21.840 --> 00:01:25.550
find and I believe is a pretty format to prettify the same thing.

00:01:25.550 --> 00:01:31.570
We can see that all the documents are lined up with an automatically generated underscore.

00:01:31.570 --> 00:01:31.850
80.

00:01:31.850 --> 00:01:37.680
Now it is important to see that we have some new medical field suggests quarter and sales

00:01:37.680 --> 00:01:38.800
amount etcetera.

00:01:38.800 --> 00:01:41.120
Now let's work on this.

00:01:41.120 --> 00:01:44.150
Andi execute some more complex varies.

00:01:44.150 --> 00:01:49.940
Let's everyone acquiree for our sales collection and get on the sales where the sales

00:01:49.940 --> 00:01:53.000
amount is more than R equals to $10,000.

00:01:53.000 --> 00:01:59.530
So the quite it would look something like david dot sales don't find and the quality is on

00:01:59.530 --> 00:02:00.900
the sales amount.

00:02:00.900 --> 00:02:02.540
So it's a sales amount,

00:02:02.540 --> 00:02:05.730
and then we use another object and say,

00:02:05.730 --> 00:02:07.550
dollar G t E.

00:02:07.550 --> 00:02:08.950
And then the amount,

00:02:08.950 --> 00:02:10.550
which is $10,000 itself.

00:02:10.550 --> 00:02:15.770
And if you want to prettify the or put let's call the pretty function as well Syria,

00:02:15.770 --> 00:02:22.090
it and then I would say Mongol less than e eg zero fighter Js on.

00:02:22.090 --> 00:02:25.650
We get a bunch of documents that satisfy that condition

