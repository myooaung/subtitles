WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.730
in Britain,

00:00:01.730 --> 00:00:03.720
a class represents an abstraction,

00:00:03.720 --> 00:00:07.550
and what you do by kidding it last is creating a data type.

00:00:07.550 --> 00:00:08.480
For example,

00:00:08.480 --> 00:00:09.550
I can see here,

00:00:09.550 --> 00:00:10.340
class,

00:00:10.340 --> 00:00:13.610
person and then simply say,

00:00:13.610 --> 00:00:19.380
past at this time not having any court inside that all we have done is creating a meditate

00:00:19.380 --> 00:00:23.550
called person using which you can create variables called objects.

00:00:23.550 --> 00:00:24.770
For example,

00:00:24.770 --> 00:00:26.650
if I say type person,

00:00:26.650 --> 00:00:29.910
you see that you get the class tie.

00:00:29.910 --> 00:00:32.170
This is just like another detail.

00:00:32.170 --> 00:00:32.410
So,

00:00:32.410 --> 00:00:32.960
for example,

00:00:32.960 --> 00:00:35.680
for six int you'll see that it is.

00:00:35.680 --> 00:00:39.110
It is also a tentative and what have you done using entry?

00:00:39.110 --> 00:00:42.320
Create variables off int str etcetera.

00:00:42.320 --> 00:00:48.670
Now we can create variables off person now to create a variable off person human simply

00:00:48.670 --> 00:00:53.400
safety one equals toe person and then called its constructor,

00:00:53.400 --> 00:00:57.440
just like how you're probably done with str int.

00:00:57.440 --> 00:00:59.350
If you press enter now and then,

00:00:59.350 --> 00:01:00.790
say life P one,

00:01:00.790 --> 00:01:06.100
you'll see that p one is an object or an instance off person.

00:01:06.100 --> 00:01:11.360
What we see her as double underscore Main double underscore is because it's the name off

00:01:11.360 --> 00:01:11.920
for school,

00:01:11.920 --> 00:01:13.430
as the model had.

00:01:13.430 --> 00:01:18.350
I created a file called person dot B y then I would have probably got it in a different way

00:01:18.350 --> 00:01:18.350
.

00:01:18.350 --> 00:01:20.450
Since we have created an object.

00:01:20.450 --> 00:01:20.980
No.

00:01:20.980 --> 00:01:27.680
And I can also go and see d a r off p one to see what additional attributes there are there

00:01:27.680 --> 00:01:28.440
for people.

00:01:28.440 --> 00:01:31.210
And you'll see that without even having to write anything.

00:01:31.210 --> 00:01:32.250
The person class.

00:01:32.250 --> 00:01:35.550
We already have got a lot off dunder methods,

00:01:35.550 --> 00:01:39.470
and all these gender matters come from another class car object,

00:01:39.470 --> 00:01:43.520
which this person class supposedly inherit from.

00:01:43.520 --> 00:01:48.750
We can also write our own Additional active users are members off the class person,

00:01:48.750 --> 00:01:49.680
for example.

00:01:49.680 --> 00:01:51.060
I can go and say,

00:01:51.060 --> 00:01:54.950
plus person Andi in the block.

00:01:54.950 --> 00:01:56.820
I can trade some variables.

00:01:56.820 --> 00:01:57.490
For example,

00:01:57.490 --> 00:02:03.460
I can say I d decodes toe something like one name equals toe.

00:02:03.460 --> 00:02:04.650
Let they re note,

00:02:04.650 --> 00:02:08.000
probably city equals toe bangle.

00:02:08.000 --> 00:02:10.710
And I can write my own functions like,

00:02:10.710 --> 00:02:11.540
for example,

00:02:11.540 --> 00:02:16.500
death cream to be dates for the time being passed again.

00:02:16.500 --> 00:02:17.010
Now,

00:02:17.010 --> 00:02:20.040
when I come off this now and see that we have a class person,

00:02:20.040 --> 00:02:26.510
I may have to say either the person where I'll see all the attributes city I the name

00:02:26.510 --> 00:02:31.850
printed is that just attributes you can make out whether that's a function are variable

00:02:31.850 --> 00:02:33.220
Oregon constancy here.

00:02:33.220 --> 00:02:35.920
P one equals toe person on you.

00:02:35.920 --> 00:02:37.150
Call the constructor,

00:02:37.150 --> 00:02:39.350
and then I could say the area off person.

00:02:39.350 --> 00:02:42.170
We should see a similar result as well.

00:02:42.170 --> 00:02:45.760
Although I created variables in this fashion,

00:02:45.760 --> 00:02:49.630
this is not the way you create variables that belonged to an object.

00:02:49.630 --> 00:02:50.590
So typically,

00:02:50.590 --> 00:02:52.780
if the valuables are declared over here,

00:02:52.780 --> 00:02:56.850
they are all shared across all objects off this particular class.

00:02:56.850 --> 00:03:01.350
These are equal it off static variables off Java RC shop.

00:03:01.350 --> 00:03:05.650
Another point to mention here is that the function print details.

00:03:05.650 --> 00:03:08.010
What we have returned has no argument.

00:03:08.010 --> 00:03:14.050
Dysfunction can only be called using the person class and not by person object just to

00:03:14.050 --> 00:03:14.590
clarify.

00:03:14.590 --> 00:03:16.200
Let's go and check it out.

00:03:16.200 --> 00:03:19.610
If I think you're person dot details,

00:03:19.610 --> 00:03:22.010
you'll see that there is no odor.

00:03:22.010 --> 00:03:25.330
But if I say be one dot print details,

00:03:25.330 --> 00:03:30.650
you get one error saying that it takes zero positional arguments,

00:03:30.650 --> 00:03:32.140
but one was given.

00:03:32.140 --> 00:03:33.580
So it says that hey,

00:03:33.580 --> 00:03:34.280
your past,

00:03:34.280 --> 00:03:35.440
an argument over here,

00:03:35.440 --> 00:03:37.970
so as if I passed an argument over here.

00:03:37.970 --> 00:03:39.200
But I haven't.

00:03:39.200 --> 00:03:41.210
But then why am I getting this error?

00:03:41.210 --> 00:03:42.670
We'll have a look in tow,

00:03:42.670 --> 00:03:45.640
theist in detail in the next video

