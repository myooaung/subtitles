WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.860
in this lecture,

00:00:00.860 --> 00:00:05.060
let's have a look at conditional statements which are lose us toe conditionally.

00:00:05.060 --> 00:00:11.620
Execute one or more bite on statements so this is achieved by using a key work.

00:00:11.620 --> 00:00:13.250
Or if on then,

00:00:13.250 --> 00:00:16.590
there are associate ID keywords called a leaf and ends.

00:00:16.590 --> 00:00:20.200
Let's have a look at the same by taking an example,

00:00:20.200 --> 00:00:22.140
so I'm gonna clear the second script.

00:00:22.140 --> 00:00:25.050
File your called E X zero food or the white.

00:00:25.050 --> 00:00:31.570
Let's have you wanna accept the number from the user in an integer format so I can say,

00:00:31.570 --> 00:00:34.350
Ain't but accept the data from the user.

00:00:34.350 --> 00:00:36.080
Julie's that input function.

00:00:36.080 --> 00:00:37.260
Given a message,

00:00:37.260 --> 00:00:39.400
Enter the number now.

00:00:39.400 --> 00:00:45.640
Once the user enters anything that anything is considered to be a string or an str,

00:00:45.640 --> 00:00:49.900
this end will convert the input by the user in tow,

00:00:49.900 --> 00:00:54.920
a number in case the user has endured something like a SDF or something.

00:00:54.920 --> 00:00:55.750
Non Humenik.

00:00:55.750 --> 00:00:58.430
This will fail and stops the execution,

00:00:58.430 --> 00:00:59.950
the program then and there itself.

00:00:59.950 --> 00:01:02.850
But let's assume the user is enduring a number,

00:01:02.850 --> 00:01:05.020
and that number is now here in this.

00:01:05.020 --> 00:01:09.990
Now let's have you want toe check if the number is greater than 1000.

00:01:09.990 --> 00:01:11.980
If the number is greater than 1000.

00:01:11.980 --> 00:01:14.750
I won't tell you that that you rented a very big number.

00:01:14.750 --> 00:01:17.040
But other ways it's OK.

00:01:17.040 --> 00:01:18.860
That's a year if numb,

00:01:18.860 --> 00:01:21.620
greater than 1000 then.

00:01:21.620 --> 00:01:25.440
So we use a colon here to indicate that Then now,

00:01:25.440 --> 00:01:29.680
in case if you're coming from C C plus plus Java or C shop,

00:01:29.680 --> 00:01:34.760
your usedto give this in particular around record.

00:01:34.760 --> 00:01:38.200
For example on the news that lived record like this to say Hey,

00:01:38.200 --> 00:01:40.290
whenever this condition is satisfied,

00:01:40.290 --> 00:01:43.010
execute everything in this particular block.

00:01:43.010 --> 00:01:45.830
But in spite on we don't have this concept off.

00:01:45.830 --> 00:01:49.510
Calais brackets on their own record here for grouping the condition.

00:01:49.510 --> 00:01:50.610
It's totally optional.

00:01:50.610 --> 00:01:54.450
So let me get it off that and give a condition itself.

00:01:54.450 --> 00:01:57.760
Now here we say colon doing together.

00:01:57.760 --> 00:01:59.580
If this condition is satisfied,

00:01:59.580 --> 00:02:02.330
then you do these statements.

00:02:02.330 --> 00:02:04.080
Now Notice the rustle in the press.

00:02:04.080 --> 00:02:08.150
Enter visual studio cord indented my statements over here.

00:02:08.150 --> 00:02:13.180
So this is important because bite on says all the statement that are supposed to be

00:02:13.180 --> 00:02:19.770
executed for this particular condition must be indented with at least one or two spaces.

00:02:19.770 --> 00:02:22.950
So as a practice we have four spaces here,

00:02:22.950 --> 00:02:24.720
so I'm gonna take your print,

00:02:24.720 --> 00:02:29.920
you have enter a big number,

00:02:29.920 --> 00:02:31.470
Andi.

00:02:31.470 --> 00:02:32.910
Then I can say here,

00:02:32.910 --> 00:02:33.640
fringe,

00:02:33.640 --> 00:02:34.840
maybe a line.

00:02:34.840 --> 00:02:38.410
And then I can say here,

00:02:38.410 --> 00:02:39.830
strange.

00:02:39.830 --> 00:02:45.650
By now you should notice here that these two statements,

00:02:45.650 --> 00:02:51.390
because they're equally distant from the left margin they both are considered as a group to

00:02:51.390 --> 00:02:53.530
be executive if this condition is true.

00:02:53.530 --> 00:02:59.110
But if the condition is not true than those two statements are skipped and I'm coming to

00:02:59.110 --> 00:02:59.960
line number six,

00:02:59.960 --> 00:03:01.530
there's nothing in line number seven.

00:03:01.530 --> 00:03:02.950
I have a by statement,

00:03:02.950 --> 00:03:05.040
So let's give it a try by saving this,

00:03:05.040 --> 00:03:06.610
going back to the command front,

00:03:06.610 --> 00:03:12.540
diving by country and then the egg zeroed food or three way now for Windows users,

00:03:12.540 --> 00:03:17.360
you may have to take a bite on exerted that people I pressed enter.

00:03:17.360 --> 00:03:18.630
It's gonna ask a number.

00:03:18.630 --> 00:03:21.210
Let's say 6789.

00:03:21.210 --> 00:03:22.510
Press enter.

00:03:22.510 --> 00:03:22.980
It says,

00:03:22.980 --> 00:03:23.200
Hey,

00:03:23.200 --> 00:03:25.480
you have entered a big number by,

00:03:25.480 --> 00:03:30.760
but in case if I enter 678 I press enter,

00:03:30.760 --> 00:03:35.750
the condition fails and we don't have an ultimate Toby taken place.

00:03:35.750 --> 00:03:39.070
But then we do have a by statement that gets printed.

00:03:39.070 --> 00:03:44.060
You can see that these two are now included only if the condition is true.

00:03:44.060 --> 00:03:48.020
But in some cases we may also have to take an Internet step.

00:03:48.020 --> 00:03:49.000
For example,

00:03:49.000 --> 00:03:54.310
let's say I want except a number from the user and then check if the input number is an

00:03:54.310 --> 00:03:55.550
even are are.

00:03:55.550 --> 00:03:59.770
And according to you have to tell the use that that you have entered a even number are in

00:03:59.770 --> 00:04:00.300
our number.

00:04:00.300 --> 00:04:03.200
So let's take another example on.

00:04:03.200 --> 00:04:06.290
Then I'll call it us the exit treat or feline on.

00:04:06.290 --> 00:04:11.920
This time I want so say that except a number from the user.

00:04:11.920 --> 00:04:22.610
Andi trained you the number IHS you and I are That's the ask.

00:04:22.610 --> 00:04:25.150
So let's say we want to accept the number,

00:04:25.150 --> 00:04:32.720
so we're going to say it and then I'll say input under a number again.

00:04:32.720 --> 00:04:35.150
If the user has entered a non numeric value,

00:04:35.150 --> 00:04:40.450
the end constructor will raise an error and stop the execution of the program.

00:04:40.450 --> 00:04:45.850
Let's listen to the user really entering a value number now to check if the number is even

00:04:45.850 --> 00:04:45.850
.

00:04:45.850 --> 00:04:53.430
Are are I can check if number modelers to is it equals 20 If the answer is yes,

00:04:53.430 --> 00:04:58.450
as they print you have ender and even number.

00:04:58.450 --> 00:05:02.240
If the condition is not true,

00:05:02.240 --> 00:05:03.250
that made it the condition.

00:05:03.250 --> 00:05:05.460
Sales don't taken on Internet part.

00:05:05.460 --> 00:05:09.380
So which means out of come backwards and then say else.

00:05:09.380 --> 00:05:13.360
And then I put a colon to indicate there is one more statement around.

00:05:13.360 --> 00:05:14.100
Execute.

00:05:14.100 --> 00:05:14.920
So again you see,

00:05:14.920 --> 00:05:18.680
ask another press colon and enter beer scored automatically.

00:05:18.680 --> 00:05:19.130
Indians,

00:05:19.130 --> 00:05:20.400
my courtiers.

00:05:20.400 --> 00:05:28.610
When I say your print you have under and our number and then of course I can come out and

00:05:28.610 --> 00:05:29.850
then I can say print.

00:05:29.850 --> 00:05:31.340
What now?

00:05:31.340 --> 00:05:37.780
Notice that if I use an indentation for this like this now these two statements are

00:05:37.780 --> 00:05:40.420
considered as part of the else block,

00:05:40.420 --> 00:05:45.750
which means that the by statement will not be printed if you have actually entered an even

00:05:45.750 --> 00:05:46.210
number.

00:05:46.210 --> 00:05:47.640
So it is important toe.

00:05:47.640 --> 00:05:50.390
Maintain that indentation properly.

00:05:50.390 --> 00:05:51.780
That saved this.

00:05:51.780 --> 00:05:52.540
Give it a try.

00:05:52.540 --> 00:05:55.060
Why don three,

00:05:55.060 --> 00:05:56.510
he exhort.

00:05:56.510 --> 00:05:57.220
Treat our people?

00:05:57.220 --> 00:05:58.270
I pressed.

00:05:58.270 --> 00:05:58.850
Enter.

00:05:58.850 --> 00:05:59.470
It's gonna say,

00:05:59.470 --> 00:06:01.590
Enter the number That's 45.

00:06:01.590 --> 00:06:03.880
It says You're entered an odd number.

00:06:03.880 --> 00:06:06.200
I'll type your 66.

00:06:06.200 --> 00:06:08.350
It says you're entered an even number,

00:06:08.350 --> 00:06:10.600
and you can see in both the cases.

00:06:10.600 --> 00:06:16.910
The by statement has been printed in few other cases you may want to check in case if the

00:06:16.910 --> 00:06:18.520
first condition fails,

00:06:18.520 --> 00:06:20.410
you want to check another condition.

00:06:20.410 --> 00:06:21.980
And if that condition failed,

00:06:21.980 --> 00:06:24.750
you wanna check one more condition and so on and so forth.

00:06:24.750 --> 00:06:27.880
Now this is where we have a concept off.

00:06:27.880 --> 00:06:35.780
Chain off if conditions where I can have an if you live a lift lift and then else so I can

00:06:35.780 --> 00:06:41.730
have as many lives as I want on an optional else statement to understand the same,

00:06:41.730 --> 00:06:43.060
let's take another example.

00:06:43.060 --> 00:06:46.890
So I'm creating a new file called Year 04 Door P.

00:06:46.890 --> 00:06:47.660
White on.

00:06:47.660 --> 00:06:54.920
Then let's say we want except a number representing a month on if the number is not within

00:06:54.920 --> 00:06:57.850
the range of value the month that I want to give another.

00:06:57.850 --> 00:07:02.250
But if it's a value month that I'm gonna tell how many days are there in the month.

00:07:02.250 --> 00:07:09.020
So let's define a variable court month because toe end on,

00:07:09.020 --> 00:07:13.050
then they input end of a month.

00:07:13.050 --> 00:07:21.430
I can also tell you that a number between 1 to 12 what the user may enter something outside

00:07:21.430 --> 00:07:27.090
of the range for the very first thing that I will check here is that give month is less

00:07:27.090 --> 00:07:27.800
than one.

00:07:27.800 --> 00:07:28.740
Oh,

00:07:28.740 --> 00:07:31.350
month is greater than 12.

00:07:31.350 --> 00:07:33.970
If either one of the condition is true.

00:07:33.970 --> 00:07:34.620
For example,

00:07:34.620 --> 00:07:36.770
let's have entered minus five.

00:07:36.770 --> 00:07:39.490
So minus five less than one is true.

00:07:39.490 --> 00:07:43.470
It doesn't even bother to check the second condition because that's a shark sur cute there

00:07:43.470 --> 00:07:43.470
.

00:07:43.470 --> 00:07:45.920
So the second condition is never executed.

00:07:45.920 --> 00:07:47.850
The first condition is true,

00:07:47.850 --> 00:07:49.710
which means it's an invalid month.

00:07:49.710 --> 00:07:53.050
What about if I under a number as to any fight?

00:07:53.050 --> 00:07:58.810
The first condition is not true because 25 less than one this falls then it's gonna check

00:07:58.810 --> 00:08:03.830
is the second condition true and prettify greater than 12 is true which is invalid.

00:08:03.830 --> 00:08:09.490
So hence if any one of these two conditions are failed that I want to tell here that Hey,

00:08:09.490 --> 00:08:15.150
you have ender and invalid number for a month.

00:08:15.150 --> 00:08:20.910
But in case if the user has entered properly,

00:08:20.910 --> 00:08:25.950
that means the user has entered a number between one and 12 which is a valid month.

00:08:25.950 --> 00:08:32.040
Now all the statements that I'm gonna right here will be executed only if this condition

00:08:32.040 --> 00:08:32.700
phase.

00:08:32.700 --> 00:08:35.850
So at this time in line number six,

00:08:35.850 --> 00:08:39.450
I know that the user has endured a number from 1 to 12.

00:08:39.450 --> 00:08:46.360
Let's was considered for February so I can check your give Month is equals to two that made

00:08:46.360 --> 00:08:48.750
it February against their print.

00:08:48.750 --> 00:08:55.920
There are either age or 29 days in this month because that's February.

00:08:55.920 --> 00:08:58.840
But if it is not so very,

00:08:58.840 --> 00:09:04.960
let's check by using Ellie and I can check Month Is it equals to four,

00:09:04.960 --> 00:09:09.600
which is April are I can check is it equals toe.

00:09:09.600 --> 00:09:10.190
June,

00:09:10.190 --> 00:09:13.350
which is six all month,

00:09:13.350 --> 00:09:15.790
equals Tau nine for September.

00:09:15.790 --> 00:09:19.490
Our month equals toe 11 for number.

00:09:19.490 --> 00:09:25.250
Then I can say there are 30 days getting this month.

00:09:25.250 --> 00:09:32.410
Now you can see that I'm checking the same condition for different values here,

00:09:32.410 --> 00:09:38.160
so month equals 246 9 11 Now we can simplify this,

00:09:38.160 --> 00:09:39.480
and I'll show that in a minute.

00:09:39.480 --> 00:09:40.970
But for the time being,

00:09:40.970 --> 00:09:41.760
let's give it us.

00:09:41.760 --> 00:09:46.050
If month is April or June or September,

00:09:46.050 --> 00:09:48.990
our number Then I said about 30 days.

00:09:48.990 --> 00:09:55.250
Notice that I'm doing all these things only if the number is a valued number for a month

00:09:55.250 --> 00:09:58.310
and it is 2469 11.

00:09:58.310 --> 00:10:01.140
If it is not any off these fine ones.

00:10:01.140 --> 00:10:04.120
The remaining seven months have 31 days now.

00:10:04.120 --> 00:10:07.140
I don't have to check the remaining seven months.

00:10:07.140 --> 00:10:11.630
I can simply say here it is not one of these five that I can say French.

00:10:11.630 --> 00:10:15.250
There are 31 days in this month.

00:10:15.250 --> 00:10:21.950
And of course now I want to reduce This nodded already is this sandwich is kind of copy

00:10:21.950 --> 00:10:24.080
paste and then come in one off the line.

00:10:24.080 --> 00:10:27.450
So that put the length that owner execute this one.

00:10:27.450 --> 00:10:36.480
I cannot replace this like month in and then I can supply a bunch of values like 46 nine,

00:10:36.480 --> 00:10:37.190
and 11.

00:10:37.190 --> 00:10:43.780
So the in operator is now checking whether this variable matches anyone off them or not.

00:10:43.780 --> 00:10:46.380
If matches anyone off them that this is true,

00:10:46.380 --> 00:10:47.610
it's gonna execute this.

00:10:47.610 --> 00:10:48.950
If it doesn't match,

00:10:48.950 --> 00:10:51.020
then it's gonna go to the Elsa section.

00:10:51.020 --> 00:10:54.250
Now notice that it's only gonna check this condition.

00:10:54.250 --> 00:11:01.540
If the first condition has fate that saved this and then go and execute the same I'm gonna

00:11:01.540 --> 00:11:02.250
say here,

00:11:02.250 --> 00:11:03.280
clear.

00:11:03.280 --> 00:11:04.230
And then I say,

00:11:04.230 --> 00:11:05.170
my country,

00:11:05.170 --> 00:11:06.000
Yeah.

00:11:06.000 --> 00:11:08.610
04 people it is.

00:11:08.610 --> 00:11:09.670
Enter a month.

00:11:09.670 --> 00:11:13.170
Let's argue 67 which is an invaluable month.

00:11:13.170 --> 00:11:14.600
And as you can see,

00:11:14.600 --> 00:11:17.040
67 less than one is false.

00:11:17.040 --> 00:11:19.840
But then it's gonna check this 1 67 Grant.

00:11:19.840 --> 00:11:20.010
Well,

00:11:20.010 --> 00:11:20.520
it's true.

00:11:20.520 --> 00:11:26.060
It's gonna execute this one because the condition was satisfied the else will not even take

00:11:26.060 --> 00:11:26.580
place.

00:11:26.580 --> 00:11:28.700
So I'm gonna get one single.

00:11:28.700 --> 00:11:31.450
I notice you have entered an invalid number for a month.

00:11:31.450 --> 00:11:33.500
The same thing would happen if I type.

00:11:33.500 --> 00:11:38.030
You're saying zero because this time zero less than one is true.

00:11:38.030 --> 00:11:40.790
It does anyone bother to check the second condition on?

00:11:40.790 --> 00:11:42.710
Because the first condition is true.

00:11:42.710 --> 00:11:46.960
This if condition is executive and the else block is skipped.

00:11:46.960 --> 00:11:48.870
So I'm gonna go and enter again.

00:11:48.870 --> 00:11:49.950
See the same result.

00:11:49.950 --> 00:11:50.720
However,

00:11:50.720 --> 00:11:51.680
if I wonder,

00:11:51.680 --> 00:11:52.130
Do,

00:11:52.130 --> 00:11:52.960
for example,

00:11:52.960 --> 00:11:54.820
it's going to result in tow.

00:11:54.820 --> 00:11:59.260
This or put none off this to will take place somewhere around the same thing.

00:11:59.260 --> 00:12:00.380
Month is too.

00:12:00.380 --> 00:12:01.970
It says 28 or 29.

00:12:01.970 --> 00:12:03.950
Let's drive with a thrill.

00:12:03.950 --> 00:12:11.550
Our June are September all number.

00:12:11.550 --> 00:12:14.030
You can t get 30 days in these months,

00:12:14.030 --> 00:12:20.550
but anything like January or March you're going to see that it is 31 base in this month

