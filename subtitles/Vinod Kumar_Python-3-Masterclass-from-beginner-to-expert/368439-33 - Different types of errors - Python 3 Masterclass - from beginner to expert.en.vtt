WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.450
a lot of times in pipe on human come across with errors that happen in the run time.

00:00:05.450 --> 00:00:06.180
Andi,

00:00:06.180 --> 00:00:07.650
they're called exceptions.

00:00:07.650 --> 00:00:11.030
Now there are two types of exceptions that you will come across.

00:00:11.030 --> 00:00:13.350
One is called S Index.

00:00:13.350 --> 00:00:16.210
There's under a bunch of other errors,

00:00:16.210 --> 00:00:20.660
such as value at our name era index that are some off,

00:00:20.660 --> 00:00:20.930
um,

00:00:20.930 --> 00:00:22.260
we have already seen,

00:00:22.260 --> 00:00:23.280
but in this video,

00:00:23.280 --> 00:00:25.250
we're going to see them in detail.

00:00:25.250 --> 00:00:26.570
So for that,

00:00:26.570 --> 00:00:27.780
let's take an example.

00:00:27.780 --> 00:00:34.510
I am going to create a new file call x 16 dot people where I want toe except a number from

00:00:34.510 --> 00:00:35.730
the user on.

00:00:35.730 --> 00:00:37.970
Then bring the square off the same.

00:00:37.970 --> 00:00:43.080
So I'll have your number equals toe int off.

00:00:43.080 --> 00:00:46.850
Then they input and a number.

00:00:46.850 --> 00:00:49.330
And then I type your desk,

00:00:49.330 --> 00:00:50.640
your equals toe,

00:00:50.640 --> 00:00:51.650
sometimes known.

00:00:51.650 --> 00:00:57.090
And then I will print out the results of the print square off.

00:00:57.090 --> 00:00:59.900
This is another curly bracket,

00:00:59.900 --> 00:01:03.920
and then I'll take your door for Mert numb on.

00:01:03.920 --> 00:01:05.080
Then Sq are.

00:01:05.080 --> 00:01:07.430
So let's go to the command front.

00:01:07.430 --> 00:01:08.350
I go to the command,

00:01:08.350 --> 00:01:11.210
prompt where I am already in my work folder,

00:01:11.210 --> 00:01:15.800
and then I just type your by down three D X 16 dark people.

00:01:15.800 --> 00:01:17.100
I press ender.

00:01:17.100 --> 00:01:18.510
Enter the number.

00:01:18.510 --> 00:01:19.430
I'll die Pierce,

00:01:19.430 --> 00:01:24.090
23 I get the result off 23 which is 529.

00:01:24.090 --> 00:01:28.560
Notice when I executed a number of lines here are three,

00:01:28.560 --> 00:01:31.860
and all of them got executed without any problem.

00:01:31.860 --> 00:01:36.560
But let's assume that I just missed one bracket at line number three when an executive

00:01:36.560 --> 00:01:37.690
script.

00:01:37.690 --> 00:01:38.860
Technically speaking,

00:01:38.860 --> 00:01:43.750
this is the first or put direction see on the screen that is input and their number.

00:01:43.750 --> 00:01:47.020
And then it should convert that into integer,

00:01:47.020 --> 00:01:48.260
ascended to numb.

00:01:48.260 --> 00:01:53.820
And then it's going to calibrate the num times numb and then store it in squared on.

00:01:53.820 --> 00:01:57.600
Then when I'm actually generating this format,

00:01:57.600 --> 00:01:59.690
so there is no other within this block,

00:01:59.690 --> 00:02:03.680
as you can see that the former function is called numb and ask your is supplied.

00:02:03.680 --> 00:02:05.360
And then there is the result in string,

00:02:05.360 --> 00:02:10.530
and that resulting string is being printed using the print where there is a closing record

00:02:10.530 --> 00:02:11.030
missing.

00:02:11.030 --> 00:02:11.720
So,

00:02:11.720 --> 00:02:12.790
technically speaking,

00:02:12.790 --> 00:02:17.620
the print function should give another at that point in time that the last line being

00:02:17.620 --> 00:02:18.450
interpreted.

00:02:18.450 --> 00:02:21.180
Let's go and give it a try here when I tried this.

00:02:21.180 --> 00:02:26.100
You can see that even before it could execute the very first a statement.

00:02:26.100 --> 00:02:29.430
I got another called syntax error unexpected,

00:02:29.430 --> 00:02:29.980
even if,

00:02:29.980 --> 00:02:33.390
while passing on it is as much as possible,

00:02:33.390 --> 00:02:36.050
it is telling me that it's Lina before on.

00:02:36.050 --> 00:02:40.710
You can also see that there is an a carrot symbol and a pero symbol here that say that

00:02:40.710 --> 00:02:42.390
somewhere there is another here.

00:02:42.390 --> 00:02:46.190
What it did is even before the interpretation can begin,

00:02:46.190 --> 00:02:50.560
it has passed the entire five on during the past time.

00:02:50.560 --> 00:02:53.000
It figured out that there is a problem here,

00:02:53.000 --> 00:02:59.090
so you get a syntax that are even before the actual script can be run only when there is no

00:02:59.090 --> 00:02:59.920
syntax error.

00:02:59.920 --> 00:03:02.220
Then the script begins the execution.

00:03:02.220 --> 00:03:05.600
Now let's make one more mistake by typing here.

00:03:05.600 --> 00:03:09.150
Another cutlet package may be accidental or intentional.

00:03:09.150 --> 00:03:10.040
In this case,

00:03:10.040 --> 00:03:15.060
it is intentional just to show you that we are going to have an error in the format

00:03:15.060 --> 00:03:17.920
function because we have three former expensive files here,

00:03:17.920 --> 00:03:20.080
but they only supplied to off them.

00:03:20.080 --> 00:03:20.730
Let's see,

00:03:20.730 --> 00:03:22.360
what is the outcome off this?

00:03:22.360 --> 00:03:23.800
When I execute this,

00:03:23.800 --> 00:03:26.380
let me clear the screen and then run the program again,

00:03:26.380 --> 00:03:31.030
it says in the number of that 34 man I pressed Enter.

00:03:31.030 --> 00:03:37.700
You can see now only during the execution off the court when it is encountering this

00:03:37.700 --> 00:03:39.440
function format,

00:03:39.440 --> 00:03:40.520
and that is where it is,

00:03:40.520 --> 00:03:44.040
giving another index several to pull index out off range.

00:03:44.040 --> 00:03:49.230
So we're supplying here to pull all the parameters of a function is considered as two

00:03:49.230 --> 00:03:50.880
people on that.

00:03:50.880 --> 00:03:55.990
The pupil doesn't match this because here we have three index requirements.

00:03:55.990 --> 00:03:59.770
But as there are only two indexes available over here,

00:03:59.770 --> 00:04:02.280
so it's giving another at their own diamond.

00:04:02.280 --> 00:04:04.050
This time it's called Index era,

00:04:04.050 --> 00:04:07.210
so there is a syntax error there than indexer.

00:04:07.210 --> 00:04:07.790
Similarly,

00:04:07.790 --> 00:04:12.900
if I type your some a s d of kind of stuff on the press enter,

00:04:12.900 --> 00:04:17.540
you'll see that the into constructor is giving me an error called value.

00:04:17.540 --> 00:04:20.460
So as you see the index,

00:04:20.460 --> 00:04:27.140
several value at our syntax on these are actual class that so if I go here and into bite on

00:04:27.140 --> 00:04:30.820
shell and then take your time off index error,

00:04:30.820 --> 00:04:34.340
you'll see that it says it's a type means it's a data type.

00:04:34.340 --> 00:04:35.310
In other words,

00:04:35.310 --> 00:04:38.960
it's a class to take your health on index error,

00:04:38.960 --> 00:04:40.470
you will see that it is.

00:04:40.470 --> 00:04:42.750
It's a class index error.

00:04:42.750 --> 00:04:49.180
So neither all some of the building other classes that are available in a fight on you can

00:04:49.180 --> 00:04:51.570
see that there is also indexed error.

00:04:51.570 --> 00:04:54.650
Look up error that an exception that the base exception.

00:04:54.650 --> 00:04:58.440
So they're the hierarchy off on these classes that exist.

00:04:58.440 --> 00:05:03.070
Let's see some other prominent exception classes that are available in Piketon.

00:05:03.070 --> 00:05:05.820
So you're with a bunch of exception classes.

00:05:05.820 --> 00:05:06.760
As you can see,

00:05:06.760 --> 00:05:09.870
all of them are grouped under some other classes.

00:05:09.870 --> 00:05:11.720
Here is the base exception.

00:05:11.720 --> 00:05:15.160
We call this as the root off all exceptions,

00:05:15.160 --> 00:05:16.820
and there are subtypes here,

00:05:16.820 --> 00:05:18.150
like system exit,

00:05:18.150 --> 00:05:18.930
keyboard,

00:05:18.930 --> 00:05:19.660
interrupt,

00:05:19.660 --> 00:05:21.290
generator exit.

00:05:21.290 --> 00:05:25.980
Exceptional exception is the one that we are investing on.

00:05:25.980 --> 00:05:27.210
Under the exception,

00:05:27.210 --> 00:05:29.270
you can see that there is something called Look up.

00:05:29.270 --> 00:05:34.550
It are under the look up There are you see and index error In object oriented programming,

00:05:34.550 --> 00:05:37.300
we say index error is a subclass off.

00:05:37.300 --> 00:05:37.680
Look up.

00:05:37.680 --> 00:05:38.830
Better look up.

00:05:38.830 --> 00:05:43.720
There is a surplus off exception exception of the subplots off base exception.

00:05:43.720 --> 00:05:44.460
Similarly,

00:05:44.460 --> 00:05:48.590
you can see that there is an automatic error which contains zero division error.

00:05:48.590 --> 00:05:54.160
So we will see that in the next video that our war effort or sometimes you got syntax error

00:05:54.160 --> 00:05:54.160
.

00:05:54.160 --> 00:05:56.820
So the syntax error is also part off this,

00:05:56.820 --> 00:05:57.620
as you can see here,

00:05:57.620 --> 00:06:01.700
that syntax error in case if you're using a wrong indentation,

00:06:01.700 --> 00:06:05.510
venerating the if conditions of for loops or you're gonna get an indentation error.

00:06:05.510 --> 00:06:09.760
But there aren't syntax errors over here and lots off errors,

00:06:09.760 --> 00:06:10.620
as you can see.

00:06:10.620 --> 00:06:13.790
But we are more interested in some of the building errors,

00:06:13.790 --> 00:06:14.780
like name error,

00:06:14.780 --> 00:06:15.560
value error,

00:06:15.560 --> 00:06:18.370
our index error and few other types.

00:06:18.370 --> 00:06:22.470
Whenever a a function or a constructor gives error,

00:06:22.470 --> 00:06:24.760
recall it as raising off exceptions.

00:06:24.760 --> 00:06:26.680
So whenever an exception is raised,

00:06:26.680 --> 00:06:31.660
if there is no handler for the exception than the interpreter,

00:06:31.660 --> 00:06:35.230
typically break sex execution of the program on,

00:06:35.230 --> 00:06:37.150
then gives the other details.

00:06:37.150 --> 00:06:43.490
But programmatically we can also handle those exceptions and then take alternative steps.

00:06:43.490 --> 00:06:44.690
In the next video,

00:06:44.690 --> 00:06:47.790
we're going to see how to handle exceptions in Python

