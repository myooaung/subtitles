WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.650
Jason,

00:00:01.650 --> 00:00:04.440
which is an acronym for childless script object notation,

00:00:04.440 --> 00:00:06.250
is a method off,

00:00:06.250 --> 00:00:12.520
including texted later so that two applications can exchange data in a understandable

00:00:12.520 --> 00:00:13.150
format.

00:00:13.150 --> 00:00:17.150
This is very widely used in rest ful Web services.

00:00:17.150 --> 00:00:22.430
In spite On is a very powerful language that can be used for creating such Web services.

00:00:22.430 --> 00:00:23.290
At times,

00:00:23.290 --> 00:00:27.290
we may want to convert by turn data into a Jason format.

00:00:27.290 --> 00:00:30.250
A Jason object is very simple,

00:00:30.250 --> 00:00:36.460
but a presentation off a non ordered set off name value piers an object in Jason always

00:00:36.460 --> 00:00:39.990
begins with curly bracket and injured a curly bracket.

00:00:39.990 --> 00:00:43.000
And the keys are always supposed to be string values,

00:00:43.000 --> 00:00:45.920
and the valued themselves can be off different types.

00:00:45.920 --> 00:00:46.560
For example,

00:00:46.560 --> 00:00:49.740
they can be a string number object,

00:00:49.740 --> 00:00:50.330
Ari,

00:00:50.330 --> 00:00:52.060
true or false notice.

00:00:52.060 --> 00:00:54.660
The true offers are in lower case.

00:00:54.660 --> 00:00:56.020
It can also be an AL value,

00:00:56.020 --> 00:00:58.500
representing that the value is missing in this video.

00:00:58.500 --> 00:01:03.790
Let's go and have a look at how we can convert A I don't data structure in tow.

00:01:03.790 --> 00:01:08.330
Jason Data for that considered this variable Korpi one,

00:01:08.330 --> 00:01:11.390
which is a dictionary that contains a bunch of keys,

00:01:11.390 --> 00:01:15.810
nor that the keys are here represented in single courts.

00:01:15.810 --> 00:01:17.250
But as in Jason,

00:01:17.250 --> 00:01:20.950
it is always expected that the keys are in double coded text.

00:01:20.950 --> 00:01:23.790
The values themselves can be off different date.

00:01:23.790 --> 00:01:27.340
Here we have a string email is again a key,

00:01:27.340 --> 00:01:28.740
and there is a value here,

00:01:28.740 --> 00:01:33.550
which is again a string if you see here that the key called Married on Value for That is

00:01:33.550 --> 00:01:34.130
true.

00:01:34.130 --> 00:01:38.210
But bite on True Falls started a captain ITER Languages.

00:01:38.210 --> 00:01:41.300
Here is another key that has a list off strings,

00:01:41.300 --> 00:01:44.110
so this can go as complex as possible.

00:01:44.110 --> 00:01:45.990
But for this demonstration,

00:01:45.990 --> 00:01:49.380
let's see how to convert this p one into a Jason String.

00:01:49.380 --> 00:01:52.610
In order to convert a vital data into Jason Strings,

00:01:52.610 --> 00:01:55.650
you need to import the model Jason.

00:01:55.650 --> 00:01:56.350
So,

00:01:56.350 --> 00:01:57.620
for thing is important,

00:01:57.620 --> 00:01:58.180
Jason,

00:01:58.180 --> 00:01:59.660
now that we have Jason,

00:01:59.660 --> 00:02:05.250
we can check one of the members off this to list the non dunder functions off.

00:02:05.250 --> 00:02:05.750
Jason.

00:02:05.750 --> 00:02:09.120
Let's make use off the custom function that we have return earlier,

00:02:09.120 --> 00:02:14.770
called the I R and then type Jason and you'll see that it has these many non dollar

00:02:14.770 --> 00:02:15.500
functions.

00:02:15.500 --> 00:02:16.350
On average,

00:02:16.350 --> 00:02:22.820
these two can be used for converting a vital data into a Jason string on these two

00:02:22.820 --> 00:02:23.380
functions.

00:02:23.380 --> 00:02:27.660
Load and loads can be used for converting adjacent string in tow.

00:02:27.660 --> 00:02:33.520
A python object know the difference between dump and dumps is Dump actually converts the

00:02:33.520 --> 00:02:34.330
Jason on,

00:02:34.330 --> 00:02:36.490
then stores that into a fight.

00:02:36.490 --> 00:02:42.440
But as dumps is a function that converts the by conductor into a chase on string and

00:02:42.440 --> 00:02:43.350
returns the same,

00:02:43.350 --> 00:02:44.460
let's give it a try,

00:02:44.460 --> 00:02:48.500
Jason dot drums and then type your fee one on.

00:02:48.500 --> 00:02:49.590
If a press enter,

00:02:49.590 --> 00:02:54.430
you can see that we get the same data in Jason.

00:02:54.430 --> 00:02:55.240
Form it now.

00:02:55.240 --> 00:03:00.520
One thing that you can notice straight away here is that all the str values off this P one

00:03:00.520 --> 00:03:04.250
have been converted into strings in double courts here,

00:03:04.250 --> 00:03:06.840
and that's one of the key requirement off Jason.

00:03:06.840 --> 00:03:11.750
But you can also do certain things like formatting while representing that as a string.

00:03:11.750 --> 00:03:16.390
So where this function takes a couple of additional perimeters so I could stay here,

00:03:16.390 --> 00:03:24.640
help on Jason domes and you can see that there is an object that we had to supply,

00:03:24.640 --> 00:03:28.040
which gets serialized into a Jason formatted string.

00:03:28.040 --> 00:03:33.000
But the one that you can try using for Indian Nation is this IND.

00:03:33.000 --> 00:03:39.300
It so I can specify a number of characters that it has toe used for inventing the key value

00:03:39.300 --> 00:03:41.200
based so we can use the same things.

00:03:41.200 --> 00:03:42.900
I can see her just under terms.

00:03:42.900 --> 00:03:45.180
Be one indent equals toe,

00:03:45.180 --> 00:03:45.940
for example.

00:03:45.940 --> 00:03:51.440
Three and you'll see know that we got indentation in see characters.

00:03:51.440 --> 00:03:55.280
But since this is an extra ER were not able to see the indentation.

00:03:55.280 --> 00:03:58.360
So we're going to stay here strange and then say,

00:03:58.360 --> 00:04:05.870
Jason Door terms the one is the object indent equals 23 and then I will see that the actual

00:04:05.870 --> 00:04:08.930
data is nicely formatted over here.

00:04:08.930 --> 00:04:09.520
At times,

00:04:09.520 --> 00:04:10.490
you want toe,

00:04:10.490 --> 00:04:12.280
save this into a file.

00:04:12.280 --> 00:04:14.920
Instead of using the Jason dumped,

00:04:14.920 --> 00:04:16.870
you have to use the Jason Dunn function.

00:04:16.870 --> 00:04:17.920
If you want to know,

00:04:17.920 --> 00:04:19.150
how do I save it?

00:04:19.150 --> 00:04:20.550
Let's go give it a try.

00:04:20.550 --> 00:04:23.190
So for 30 health on Jason dirt,

00:04:23.190 --> 00:04:23.910
do you?

00:04:23.910 --> 00:04:24.650
MP Tom,

00:04:24.650 --> 00:04:28.340
you can see that I have to supply to mandatory parameters.

00:04:28.340 --> 00:04:30.530
The 1st 1 is an object,

00:04:30.530 --> 00:04:32.560
which is the data that you want to convert.

00:04:32.560 --> 00:04:34.950
The 2nd 1 is the five pointer,

00:04:34.950 --> 00:04:38.820
which represents a file that can be you for writing.

00:04:38.820 --> 00:04:39.420
Of course,

00:04:39.420 --> 00:04:41.860
other parameters like Indian can also get supplies.

00:04:41.860 --> 00:04:45.070
So for doing this first,

00:04:45.070 --> 00:04:50.970
let's create a file by using FB equals toe open some five name,

00:04:50.970 --> 00:04:51.320
Let's say,

00:04:51.320 --> 00:04:51.910
for example,

00:04:51.910 --> 00:04:54.330
I consider person start Jason.

00:04:54.330 --> 00:04:56.450
Some finding were importantly,

00:04:56.450 --> 00:05:02.360
more equals toe W is required because otherwise you will not be able to open the file if

00:05:02.360 --> 00:05:03.730
the file doesn't exist.

00:05:03.730 --> 00:05:07.750
Let's use Jason dot com and then supply our P one,

00:05:07.750 --> 00:05:09.480
which is the rotator that I want to write.

00:05:09.480 --> 00:05:11.920
And then FB is the final point,

00:05:11.920 --> 00:05:15.160
or which represents a new file called Person Jason.

00:05:15.160 --> 00:05:17.530
And then indent equals two.

00:05:17.530 --> 00:05:18.390
For example,

00:05:18.390 --> 00:05:20.670
four I press ender.

00:05:20.670 --> 00:05:26.090
Now the fire gets opened and closed and in between the country would have been returned.

00:05:26.090 --> 00:05:30.200
So I'm gonna just exit from here on their check.

00:05:30.200 --> 00:05:31.710
If the fine exist,

00:05:31.710 --> 00:05:35.200
you concede that there is a file called Person or Jason.

00:05:35.200 --> 00:05:37.550
And if I see what is the content off that?

00:05:37.550 --> 00:05:42.780
So you should see that it's the same content that we wrote from Brighton Shell

