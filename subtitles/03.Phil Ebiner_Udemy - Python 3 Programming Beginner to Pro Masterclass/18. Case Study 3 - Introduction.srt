1
00:00:01,100 --> 00:00:03,370
Hello everyone and welcome to this lecture.

2
00:00:03,740 --> 00:00:09,860
I'm super excited because there's this section we're going to introduce the evolutional new network

3
00:00:10,510 --> 00:00:19,010
and we're going to cover as well as how can we perform deep learning in Keris and in using simple language

4
00:00:19,010 --> 00:00:21,130
in general which is super exciting.

5
00:00:21,530 --> 00:00:26,930
All right so what we're going to do here is we're going to introduce the problem first.

6
00:00:26,930 --> 00:00:31,650
So we're going to learn how can we build convolution more networks.

7
00:00:31,850 --> 00:00:39,110
But based on a specific problem set this is a specific issue or problem they were trying to solve.

8
00:00:39,110 --> 00:00:44,930
So what I selected here is just a really simple but kind of you know fun case study or a problem that

9
00:00:44,930 --> 00:00:46,230
we wanted to solve.

10
00:00:46,530 --> 00:00:51,300
And our objective is simply is we wanted to train a network.

11
00:00:51,400 --> 00:01:00,740
Okay Odom call it a deep network or a convolution and neural network that can simply detect a specific

12
00:01:00,740 --> 00:01:02,640
person is smiling or not.

13
00:01:02,720 --> 00:01:03,220
Okay.

14
00:01:03,410 --> 00:01:09,640
Again it's very very simple suppose to be very easy compared to it or kind of more advanced strategies.

15
00:01:09,650 --> 00:01:14,660
But you know since we're introducing here the concept I just wanted to give you kind of a more fun approach

16
00:01:15,020 --> 00:01:16,110
of a funky study.

17
00:01:16,160 --> 00:01:18,700
I'm going to build from scratch moving forward.

18
00:01:18,720 --> 00:01:19,390
All right.

19
00:01:19,820 --> 00:01:22,150
So again our problem statement is mine detector.

20
00:01:22,220 --> 00:01:26,290
We wanted to detect people smiling happy like faces.

21
00:01:26,660 --> 00:01:29,930
You can think about it you know kind of in some applications.

22
00:01:29,930 --> 00:01:35,930
And then for example for Facebook facial recognition for instance we can detect if a person is smiling

23
00:01:35,930 --> 00:01:36,730
or not.

24
00:01:36,800 --> 00:01:41,590
If you're one for example in Lyca that's kind of you know like an application they can build.

25
00:01:41,740 --> 00:01:45,160
Is that using your camera and you're in your home for.

26
00:01:45,170 --> 00:01:52,400
For instance you can train for example vidor's for instance you know if you're home to open whenever

27
00:01:52,400 --> 00:01:58,640
it detects it person is smiling so it's only smily people or smiley faces are allowed into the house

28
00:01:58,700 --> 00:01:59,290
kind of thing.

29
00:01:59,390 --> 00:02:00,050
OK.

30
00:02:00,100 --> 00:02:01,090
All right.

31
00:02:01,550 --> 00:02:02,600
So let's get started.

32
00:02:02,930 --> 00:02:09,820
So we're going to do here is we are going to look at the problem statement.

33
00:02:09,980 --> 00:02:10,280
OK.

34
00:02:10,290 --> 00:02:11,960
And look at the technical data set.

35
00:02:11,960 --> 00:02:17,280
So the tiddley dataset simply is again smiling faces and sad faces.

36
00:02:17,300 --> 00:02:26,550
So if the person is smiling like this for example we are going to assign a specific label as one we're

37
00:02:26,570 --> 00:02:28,410
going to say give the person smiling.

38
00:02:28,610 --> 00:02:33,020
The network of the fishing network should generate value of one.

39
00:02:33,500 --> 00:02:40,190
If the person is not smiling then it was an AIDS zero pushing it a smiling maybe looking down generate

40
00:02:40,190 --> 00:02:46,510
one the person smiling and a one of the person not smiling but maybe looks sad the Geneva 0 and so on.

41
00:02:46,550 --> 00:02:53,990
So simply put our input to our network is it's an image so I'm going to simply feed all our images to

42
00:02:53,990 --> 00:02:54,720
the network.

43
00:02:54,910 --> 00:02:57,430
OK an hour of the class.

44
00:02:57,440 --> 00:03:02,100
We're going to be either 0 4 not smiling and one for smiling.

45
00:03:02,120 --> 00:03:02,930
That's it.

46
00:03:02,930 --> 00:03:04,870
In a nutshell that's in a very simple form.

47
00:03:05,060 --> 00:03:09,590
Obviously there issue with the problem might seem simple but to train the net or keynoted a team kind

48
00:03:09,590 --> 00:03:13,510
of you know like a computer it's a pretty a pretty intense task.

49
00:03:13,520 --> 00:03:17,650
We're going to learn how can we you know like come like feet.

50
00:03:17,670 --> 00:03:23,240
Or the training data set how to perform testing how to treat all the different convolution in the network

51
00:03:23,270 --> 00:03:25,340
and we're going to learn a lot in this section.

52
00:03:25,730 --> 00:03:31,430
So the dataset and the seeders and images that can be used to solve one of the happy house problem you

53
00:03:31,610 --> 00:03:36,530
can access the data from here and the data as well as contained within the course package.

54
00:03:36,530 --> 00:03:40,340
We need to build an artificial network that can detect smiling faces.

55
00:03:40,340 --> 00:03:45,170
That's the only object only smiling people would be allowed to enter the house.

56
00:03:45,170 --> 00:03:48,510
That's kind of you know one quick application for our for our palm.

57
00:03:48,620 --> 00:03:49,300
Right.

58
00:03:49,680 --> 00:03:50,280
OK.

59
00:03:50,720 --> 00:03:52,570
So let's take a look at the problem statement.

60
00:03:52,580 --> 00:03:55,450
But a little bit more of kind of machine learning terms.

61
00:03:55,550 --> 00:03:56,060
Okay.

62
00:03:56,420 --> 00:03:59,900
So I guess I can see here we have input images or images.

63
00:03:59,900 --> 00:04:04,160
Here are 64 pixels by 64 pixels.

64
00:04:04,160 --> 00:04:07,710
Again if you guys are not familiar with like you know what they mean by pixels and so on.

65
00:04:07,820 --> 00:04:13,220
I included this slide right after this slide that describes what they mean by pixel what they mean by

66
00:04:13,220 --> 00:04:15,080
an image and so on and so forth.

67
00:04:15,080 --> 00:04:18,060
But this kind of you know our our input image.

68
00:04:18,110 --> 00:04:23,930
So here we have these images we actually have 750 images.

69
00:04:24,140 --> 00:04:25,680
They are divided as follows.

70
00:04:25,870 --> 00:04:34,400
600 for training and 150 for testing and images are simply 64 by 64 pixels and they are coloured as

71
00:04:34,400 --> 00:04:34,980
well.

72
00:04:35,390 --> 00:04:39,140
And our objective is to treat a lot of efficient a network in here.

73
00:04:39,350 --> 00:04:45,950
Okay that will act as a kind of a classifier that simply look at the image and can tell us okay if this

74
00:04:45,950 --> 00:04:51,700
person is smiling or not if the target class is one or the other class is zero which is really powerful.

75
00:04:51,980 --> 00:04:53,370
OK.

76
00:04:53,990 --> 00:04:56,220
So the question is what OK.

77
00:04:56,270 --> 00:04:57,470
What do you mean by an image.

78
00:04:57,470 --> 00:04:58,520
What do you mean by pixel.

79
00:04:58,520 --> 00:04:58,890
What the.

80
00:04:59,000 --> 00:04:59,450
All that.

81
00:04:59,450 --> 00:05:00,530
So I just wanted to include.

82
00:05:00,810 --> 00:05:02,230
A quick slide for you guys.

83
00:05:02,470 --> 00:05:06,230
Again this is kind of the dimensions of the image 64 bit by 64 bit.

84
00:05:06,250 --> 00:05:09,940
Let's take a look at you know kind of a view of what they mean by an image.

85
00:05:10,060 --> 00:05:15,160
Assuming that you don't have any experience with computer vision or of any other image processing in

86
00:05:15,160 --> 00:05:16,430
the past.

87
00:05:16,540 --> 00:05:24,420
So in computers we store images in all collagen in a pixel format so let's assume that we have for example

88
00:05:24,490 --> 00:05:26,950
here our Mona Lisa for example.

89
00:05:28,160 --> 00:05:34,760
Image if you kind of you know zoom in this image you would actually find that this image is just a bunch

90
00:05:34,760 --> 00:05:38,530
of zeros and ones a bunch of numbers just zeros and ones.

91
00:05:38,990 --> 00:05:45,830
And simply put if you dig a little deeper into this image you'll find that for example in this case

92
00:05:45,830 --> 00:05:49,900
this image lists 64 bit by 64 bit.

93
00:05:50,060 --> 00:05:56,070
When we say it's 64 kind of you know pixels I'm sorry 6 for pixels by 64 pixels.

94
00:05:56,270 --> 00:06:02,200
That means it's divided into kind of all a granular granular format getting all boxes here like here

95
00:06:02,220 --> 00:06:03,320
like this.

96
00:06:03,320 --> 00:06:07,960
And each of these boxes or each of these pixels would put a certain value.

97
00:06:08,350 --> 00:06:09,020
OK.

98
00:06:09,200 --> 00:06:10,500
Where zero.

99
00:06:10,570 --> 00:06:15,340
If you put zero in here like here that indicates specific colour.

100
00:06:15,560 --> 00:06:22,050
So if you put zero that mean that basically this pixel is totally black like he this big city limits

101
00:06:22,140 --> 00:06:26,250
this because the image actually contains a few open at the actually contain a value of zero.

102
00:06:26,630 --> 00:06:26,900
OK.

103
00:06:26,930 --> 00:06:29,320
What about this one zero or about this one zero.

104
00:06:29,340 --> 00:06:29,530
Okay.

105
00:06:29,540 --> 00:06:31,490
What about weight values.

106
00:06:31,490 --> 00:06:36,260
So for the white pixels we are going to have two hundred and fifty five.

107
00:06:36,620 --> 00:06:40,030
That's the value that contained in a pixel when it's white.

108
00:06:40,460 --> 00:06:45,980
So again zero indicates black 255 indicates white.

109
00:06:46,180 --> 00:06:46,430
OK.

110
00:06:46,460 --> 00:06:47,450
What about in between.

111
00:06:47,480 --> 00:06:50,830
In between That's kind of the grey the grey skill.

112
00:06:50,840 --> 00:06:56,270
So for example this pixel is one hundred and fifty five for example value that indicates as kind of

113
00:06:56,270 --> 00:07:01,070
a grey area and that's kind of you know the different shades kind of you know like some of colouring

114
00:07:01,070 --> 00:07:03,810
or chills of grey for instance.

115
00:07:03,830 --> 00:07:07,820
So if it's all zero that means it's dark black.

116
00:07:07,930 --> 00:07:12,810
If it's all like for example here like White for example pixels that's 255.

117
00:07:12,920 --> 00:07:17,690
And if it's grey like these pixels or maybe like these pixels then you want to find kind of a range

118
00:07:18,020 --> 00:07:22,950
between zero and 255 that indicates agree image.

119
00:07:23,040 --> 00:07:23,960
Right.

120
00:07:24,170 --> 00:07:29,120
So that's kind of you know their presentation of an image here if you haven't had any background for

121
00:07:29,120 --> 00:07:32,210
example in like you know the logical tones or binary

122
00:07:35,710 --> 00:07:40,260
of binding or decimal numbering format just long story short.

123
00:07:40,490 --> 00:07:44,890
Any values are stored in a computer in just a bunch of zeros and ones.

124
00:07:45,800 --> 00:07:52,010
So this zito for instance that's presented in the computer a bunch of zeroes SEALS use it as you like

125
00:07:52,080 --> 00:07:52,970
isidore's.

126
00:07:53,200 --> 00:07:53,460
OK.

127
00:07:53,480 --> 00:07:59,120
That's why we call it a bit because here we have you know like eight places to translate that number

128
00:07:59,120 --> 00:08:02,300
to the decimal number into binary number.

129
00:08:02,300 --> 00:08:09,350
What if we have for example let's say a white collar like 255 that's in a binary format indicates all

130
00:08:09,350 --> 00:08:13,300
once like eight bits and all of them are contains ones.

131
00:08:13,340 --> 00:08:17,310
If you don't have any background in binary form I just don't what about it just here.

132
00:08:17,330 --> 00:08:22,070
Let's take a look at a decimal which is you know what humans are kind of trying to understand value

133
00:08:22,070 --> 00:08:25,440
of zero indicates black values of 255.

134
00:08:25,490 --> 00:08:26,220
In the kipp's WHAT.

135
00:08:26,240 --> 00:08:27,830
That's all we wanted to know.

136
00:08:28,110 --> 00:08:29,090
Alright.

137
00:08:29,270 --> 00:08:30,030
Okay.

138
00:08:30,350 --> 00:08:32,440
Let's recap what we have covered so far.

139
00:08:32,630 --> 00:08:35,460
So again here we have our problem statement.

140
00:08:35,630 --> 00:08:39,890
Again we want to detect and develop kind of in your network that detect smile.

141
00:08:40,210 --> 00:08:42,760
So here we have our images.

142
00:08:42,800 --> 00:08:48,810
We have part of the class of 0 1 0 indicates not smiling one indicates smiling.

143
00:08:49,160 --> 00:08:52,260
And what we going to do here is we have our our data set.

144
00:08:52,280 --> 00:08:54,630
We have 750 images.

145
00:08:54,820 --> 00:09:03,530
They are divided into 600 training and 150 for testing and images of simply 64 bit by 64 sorry 64 pixels

146
00:09:03,560 --> 00:09:05,050
by 64 pixels.

147
00:09:05,210 --> 00:09:07,880
And they're all coloured collars for that.

148
00:09:08,270 --> 00:09:13,760
And in this nutshell will warrior present image any image we're presented in a kind of you know bunch

149
00:09:13,760 --> 00:09:19,510
of pixels and we assign certain values with the pixels average from zero to two hundred and fifty five.

150
00:09:19,520 --> 00:09:23,560
And that's how we present an image in in a computer.

151
00:09:23,810 --> 00:09:25,150
Okay.

152
00:09:25,450 --> 00:09:27,410
And that's pretty much all for this lecture.

153
00:09:27,440 --> 00:09:33,350
In the next lectures we're going to dig a little bit deeper into what do we mean by artificial intelligence

154
00:09:33,350 --> 00:09:35,000
or fission in your network.

155
00:09:35,270 --> 00:09:40,000
And we're going learn how can we bood start building our Confucian work together.

156
00:09:40,380 --> 00:09:43,840
Your kids enjoy their lecture and see you in the next lecture.
