1
00:00:00,210 --> 00:00:05,640
Hello everyone and welcome to this section and this section we're going to give you a brief introduction

2
00:00:05,700 --> 00:00:13,350
of penders and then going to see how can we use penders Within Python this simply is what we call a

3
00:00:13,350 --> 00:00:16,500
play called The the excel within python.

4
00:00:16,590 --> 00:00:19,450
You can use it to deal with tables you can use it.

5
00:00:19,450 --> 00:00:24,250
It's extremely powerful and we let we know I'm going to cover tons of examples here in this section.

6
00:00:24,270 --> 00:00:27,660
So in this section we're going to start with a pen there's basics and then we're going to see how can

7
00:00:27,660 --> 00:00:29,820
we access elements use the indexing.

8
00:00:30,060 --> 00:00:33,280
How can we get let's say see is the file how can we appeal.

9
00:00:33,290 --> 00:00:41,390
H.t. Emails beta How do pandas or politicians apply function sorting and ordering an concatenating concatenating

10
00:00:41,400 --> 00:00:42,480
emerging as one.

11
00:00:42,500 --> 00:00:42,760
All right.

12
00:00:42,840 --> 00:00:44,100
Let's get started.

13
00:00:44,100 --> 00:00:52,340
So first how can we up imported penders to do can import pend there's a speedy you can again there's

14
00:00:52,380 --> 00:00:56,370
kind of the tradition that we do as again are very similar to important umpires.

15
00:00:56,370 --> 00:01:02,270
MP You've done that and then there's a first step is the loading and then right now what are you going

16
00:01:02,270 --> 00:01:07,830
to do with there one going to define let's say toolis first lists that compares the actual values that

17
00:01:07,830 --> 00:01:08,490
we're looking for.

18
00:01:08,490 --> 00:01:12,720
So let's assume that I'm looking for let's say fruits and vegetables fine my list equals two square

19
00:01:12,720 --> 00:01:16,640
brackets he has one final key what a melon or engine Apple.

20
00:01:16,890 --> 00:01:23,640
And then here I can actually specify within the penders leader frame or C it isn't going to tell you

21
00:01:23,640 --> 00:01:25,250
exactly what they mean by this.

22
00:01:25,270 --> 00:01:29,050
You can you just perspire a label you can specify a label for each of the elements.

23
00:01:29,100 --> 00:01:30,660
So I'm going to specify a list.

24
00:01:30,660 --> 00:01:34,790
Again another list and quality label equals to fruit.

25
00:01:34,800 --> 00:01:37,310
Number one will stick in one string fruit.

26
00:01:37,320 --> 00:01:38,480
Number two.

27
00:01:38,580 --> 00:01:39,900
And number three.

28
00:01:40,230 --> 00:01:40,530
Okay.

29
00:01:40,560 --> 00:01:41,730
Let's on those two.

30
00:01:41,730 --> 00:01:46,910
So now I have again my list which is again of all then and then I have a label which is simply hair

31
00:01:46,950 --> 00:01:50,300
on fruit one two and three if they update the type.

32
00:01:50,310 --> 00:01:55,070
Obviously we're going into two lists because you know you just haven't done much any penders anymore.

33
00:01:55,710 --> 00:01:57,220
So what we could do.

34
00:01:57,320 --> 00:02:05,060
You can define all quality pandas seeders spend this here is simply put you can store dealer you can.

35
00:02:05,070 --> 00:02:07,540
It's kind of a data type that you can use.

36
00:02:07,740 --> 00:02:11,950
They can actually stored elements in store as well labels for it.

37
00:02:12,000 --> 00:02:12,590
Okay.

38
00:02:12,960 --> 00:02:15,320
And then you can access these elements using the labels.

39
00:02:15,330 --> 00:02:16,760
I'm going to tell you what they mean by that.

40
00:02:17,010 --> 00:02:22,950
So in order to define is as again in pennies we're getting to see it is indeed a free Think of series

41
00:02:23,030 --> 00:02:28,710
as you know just one dimensional column for example in Excel.

42
00:02:28,950 --> 00:02:34,180
Think of a data frame as a two dimensional or a multidimensional table with an X out.

43
00:02:34,200 --> 00:02:35,040
That's what it is.

44
00:02:35,040 --> 00:02:36,040
It's very simple again.

45
00:02:37,430 --> 00:02:43,570
So if you wanted to create pen this series out of the list what you could do with it can okay.

46
00:02:43,580 --> 00:02:51,140
PD because we import penders a speedy dot series and then here you specify what's your data what information

47
00:02:51,140 --> 00:02:52,170
you're looking for.

48
00:02:52,340 --> 00:02:55,060
And what's the label or what index you're looking for.

49
00:02:55,380 --> 00:03:01,370
So you could do it it comes off like a dealer equals to my list which is basically one of melon or and

50
00:03:01,400 --> 00:03:06,060
Apple common and there's a spike index equals to a label which is this my colony here.

51
00:03:06,190 --> 00:03:06,390
OK.

52
00:03:06,410 --> 00:03:07,240
That will be my label.

53
00:03:07,250 --> 00:03:10,220
That's we're going to be exercising my values and my elements.

54
00:03:10,460 --> 00:03:14,710
And then you create it simply your X which is your data offering.

55
00:03:14,840 --> 00:03:16,520
Okay so you create your seeders.

56
00:03:16,580 --> 00:03:21,620
So simply put Now you have fruit one two and three you have watermelon autism and pi.

57
00:03:21,650 --> 00:03:22,810
OK.

58
00:03:23,540 --> 00:03:25,260
That's how you simply create the seedless.

59
00:03:25,290 --> 00:03:26,150
Right.

60
00:03:26,300 --> 00:03:30,980
The next step is we know we're not going to be using see it as extensively has been offering which is

61
00:03:30,980 --> 00:03:32,990
a multidimensional and that's what we need.

62
00:03:33,040 --> 00:03:35,300
We need to see how can we and can we use it.

63
00:03:35,300 --> 00:03:41,060
So it's assumed that we wanted to for example define it in a frame or a penders in a frame.

64
00:03:41,180 --> 00:03:46,580
And then call the data frame and then open he had parentheses here.

65
00:03:46,730 --> 00:03:47,340
OK.

66
00:03:47,540 --> 00:03:54,920
And then what I'm going to do you specify it I need employee idea that has let's say 1 1 1 2 2 2 3 3

67
00:03:54,920 --> 00:03:56,210
3 and then comma.

68
00:03:56,240 --> 00:04:01,730
Then ISPs fight employee meme which is a cause let's say chanels to Mitch and then he will specify it

69
00:04:01,730 --> 00:04:08,030
say the celery and then use bespoke it's only 5 3 9 and 3 8 and he does have experience of three four

70
00:04:08,030 --> 00:04:08,960
and nine.

71
00:04:09,290 --> 00:04:16,280
If you run this and you plug the data frame then you can actually get something very similar to an Excel

72
00:04:17,180 --> 00:04:17,830
table.

73
00:04:18,110 --> 00:04:19,230
And that's what we've got here.

74
00:04:19,430 --> 00:04:24,650
We got actually the first one which has the kind of the the tail which is employee I.D. And here you

75
00:04:24,650 --> 00:04:30,590
have all the values you have one to and see which is you list that you can simply write it as kind of

76
00:04:30,590 --> 00:04:36,300
a dictionary see a list a key and key and value.

77
00:04:36,440 --> 00:04:40,370
If you go to a call where the key value period is when we defined dictionary you can actually define

78
00:04:40,370 --> 00:04:43,040
it as one of the same fans in the same fashion he does.

79
00:04:43,040 --> 00:04:45,320
But quite simply name you can write whatever you want.

80
00:04:45,310 --> 00:04:48,530
He had celery you can specify and use of experience.

81
00:04:48,530 --> 00:04:52,530
And that's how you come up with kind of you know like an Excel table Percy.

82
00:04:53,030 --> 00:04:58,790
Once you have a pen there's a frame that it would be very powerful and very easy to exit or pin information

83
00:04:58,790 --> 00:05:04,750
and do tons of tons of stuff with it as if you're you know dealing dealing in Excel you get quality.

84
00:05:04,780 --> 00:05:11,330
I wanted let's say to show the head of show the first section you can call d.f. or did a frame dot head

85
00:05:11,600 --> 00:05:14,080
because here you call it a frame sdf.

86
00:05:14,150 --> 00:05:19,070
So now you can actually obtain our pile of dozens of methods to it and go get d.f. head and only two

87
00:05:19,190 --> 00:05:21,620
they are going to open the first two rows.

88
00:05:21,620 --> 00:05:25,170
What if on opening in the tail which is simply the last elements within a frame.

89
00:05:25,280 --> 00:05:26,140
Okay d.f..

90
00:05:26,230 --> 00:05:28,070
Teal one day out your key.

91
00:05:28,090 --> 00:05:31,580
Is the last element within here which is simply the last element in it.

92
00:05:31,880 --> 00:05:37,790
For one of the C D F tail two that will generate the last two rows and so on.

93
00:05:38,060 --> 00:05:40,580
But I'll give d.f. head a lever there as is.

94
00:05:40,670 --> 00:05:45,560
Then you will open pretty much the first couple of the first couple of rows as the head of the the different

95
00:05:45,990 --> 00:05:46,680
alright.

96
00:05:47,210 --> 00:05:47,790
OK.

97
00:05:48,290 --> 00:05:51,460
So how can we actually access elements using indexing.

98
00:05:51,470 --> 00:05:54,300
You can access elements within a day in a frame as follows.

99
00:05:54,290 --> 00:05:58,880
Let's assume again I'm going to define my exact same data from my listicle what a minute or it is an

100
00:05:58,880 --> 00:06:02,030
apple label fruit 1 2 and 3.

101
00:06:02,060 --> 00:06:07,400
Again if I wanted to find a seeders going to call Wikipedia dotsie it is going to call it my data and

102
00:06:07,400 --> 00:06:13,970
my index and undies that will do any X and then no one can access different values or different elements

103
00:06:14,000 --> 00:06:16,360
in the video frame using its label.

104
00:06:16,700 --> 00:06:22,570
So if I want to for example to an apple I can call it with its label which is fruit three which are

105
00:06:22,570 --> 00:06:24,700
the label they have here for the apple.

106
00:06:25,100 --> 00:06:27,420
If I write X and then it open.

107
00:06:27,500 --> 00:06:30,570
Basically my square brackets here.

108
00:06:30,590 --> 00:06:32,780
And then I can list what's my label is.

109
00:06:33,060 --> 00:06:34,430
Okay then look it up.

110
00:06:34,450 --> 00:06:39,600
Apple took this fruit number two then hung it up in the audience and sorts of our own.

111
00:06:40,030 --> 00:06:44,180
Okay so now basically I going to work to have a quick overview.

112
00:06:44,190 --> 00:06:50,900
No we can we know how can we define penders seeders and penders the error free using lists from a list.

113
00:06:50,970 --> 00:06:52,380
From it the dictionary as one.

114
00:06:52,480 --> 00:06:57,600
OK and how can actually x different elements within a be different are x.

115
00:06:57,710 --> 00:07:00,610
What if I wanted for example to read C as he did.

116
00:07:00,650 --> 00:07:04,390
And you get to read all the C is weedeater within it every hour.

117
00:07:04,670 --> 00:07:08,420
So let's assume that we have a simple file and you guys are going to have access to that firehouse in

118
00:07:08,420 --> 00:07:09,610
the course package.

119
00:07:09,740 --> 00:07:16,520
So in order to read the data from the quality of the key PD dot read underscored C as V and then specify

120
00:07:16,520 --> 00:07:17,290
the name of the file.

121
00:07:17,290 --> 00:07:23,300
You don't see as V and then you get a lot in differing d.f. if you run this and if you plot the d.f.

122
00:07:23,780 --> 00:07:29,240
then you would come up with basically all the elements that you had in your separate file.

123
00:07:29,240 --> 00:07:35,240
Again it's loaded as if ignored Silicon excel format is very simple very powerful.

124
00:07:35,270 --> 00:07:35,910
What if I want.

125
00:07:36,000 --> 00:07:37,620
For example let's say you.

126
00:07:37,860 --> 00:07:44,280
You can write again within a c v by Colin D F dot to underscore C is V.

127
00:07:44,280 --> 00:07:50,020
And then you specify Okay the vva the file the name of the fight opportunity he'd call a simple update.

128
00:07:50,130 --> 00:07:55,560
And if you don't know all this then then then you actually wrote data.

129
00:07:55,800 --> 00:07:59,600
These exim data into this is very simple opport.

130
00:07:59,890 --> 00:08:01,200
OK.

131
00:08:01,380 --> 00:08:03,340
So let's assume that he wanted to a.

132
00:08:03,810 --> 00:08:10,820
For example tables or a paper of data from a web page from each email for example.

133
00:08:11,330 --> 00:08:15,960
So I guess you can see here have had this website called Canadian house housing prices showing let's

134
00:08:15,960 --> 00:08:22,350
say Canadians see these average house prices for April 2018 and you can see there are two tables in

135
00:08:22,350 --> 00:08:22,770
here.

136
00:08:23,010 --> 00:08:27,150
What if I wanted to spin these two cables and load them within python in a day a offering.

137
00:08:27,150 --> 00:08:33,150
You can actually do do they're using the Dot Dot believe H to amount and then you can specify the name

138
00:08:33,150 --> 00:08:34,450
of the website you're looking for.

139
00:08:34,530 --> 00:08:34,990
Okay.

140
00:08:35,220 --> 00:08:40,350
If you on this then you would see that you actually took it successfully and then you can see within

141
00:08:40,350 --> 00:08:44,830
the daily frame Yeah because they have two tables to connect to the first table by d.f. square brackets

142
00:08:44,850 --> 00:08:45,590
0.

143
00:08:45,600 --> 00:08:46,640
You can run there.

144
00:08:46,670 --> 00:08:47,230
They'll tell you OK.

145
00:08:47,250 --> 00:08:53,580
That's my first table and there's a table that you can see here gay Heaven coover Ahead of Ontario Calgary

146
00:08:53,580 --> 00:08:54,250
Ottawa.

147
00:08:54,410 --> 00:08:58,880
And we have all the average prices and here they have the 12 months.

148
00:08:59,070 --> 00:09:03,360
Months change she'd have a fourteen point three percent increase which is you know kind of insane.

149
00:09:03,360 --> 00:09:06,540
That's why you know the average house pricing vehicle which is crazy.

150
00:09:06,720 --> 00:09:12,540
And then here if I want to talk in the next table I can up in d.f. Square America one that will open

151
00:09:12,540 --> 00:09:13,320
again the House.

152
00:09:13,320 --> 00:09:17,770
House prices changes which is my second table.

153
00:09:17,790 --> 00:09:22,850
As you can see here for the Canadian this galien cities and there's getting in provinces.

154
00:09:23,260 --> 00:09:24,320
OK it sounds great.

155
00:09:24,320 --> 00:09:32,670
Now we can actually see any you use pen there's a frame deal to load data within from each meal.

156
00:09:32,740 --> 00:09:35,650
A CML dealer website.

157
00:09:35,730 --> 00:09:40,980
Next step is what if I wanted to perform some operations on delivery so it's assumed again I'm going

158
00:09:40,980 --> 00:09:41,980
to find I paid a fee.

159
00:09:42,020 --> 00:09:46,100
I would find that before again you know for kind of from a dictionary persay.

160
00:09:46,360 --> 00:09:46,580
Yeah.

161
00:09:46,590 --> 00:09:47,980
Define employee I.D..

162
00:09:48,000 --> 00:09:50,810
Have all these employee numbers employee names.

163
00:09:50,810 --> 00:09:52,730
These are all the names they have.

164
00:09:52,780 --> 00:09:56,840
I hate to have my salary which is all the senators who have years of experience.

165
00:09:56,850 --> 00:10:00,560
And then I can call d.f. and that's again my frame here.

166
00:10:00,780 --> 00:10:06,880
What I could do is they can actually perform some penders operations by picking specific elements kind

167
00:10:06,900 --> 00:10:09,770
of applying it if condition to select.

168
00:10:09,770 --> 00:10:17,160
For example what if I won it let's say the role was that has no experience at then only graded them

169
00:10:17,200 --> 00:10:18,700
would equal to three.

170
00:10:18,720 --> 00:10:20,820
So I'm looking for this.

171
00:10:20,970 --> 00:10:23,570
I'm looking for this and I'm looking for this straight.

172
00:10:23,580 --> 00:10:26,990
I want to skip this B.S. so I could do that.

173
00:10:27,000 --> 00:10:32,920
You can specify Okay I need my data free which is my d.f. you open square brackets.

174
00:10:33,180 --> 00:10:37,030
And then I could do they can write you if condition hit pretty much okay.

175
00:10:37,050 --> 00:10:42,020
What I'm looking for is I'm looking for the data frame with column years of experience this way.

176
00:10:42,090 --> 00:10:44,860
D.f. square brackets years of experience.

177
00:10:45,060 --> 00:10:46,160
And then this was folky.

178
00:10:46,170 --> 00:10:49,130
The elements are greater than or equal to 3.

179
00:10:49,140 --> 00:10:50,700
These are the elements I'm looking for.

180
00:10:50,850 --> 00:10:55,980
If you run that then you will see you actually skipped that row here and you only came up with the first

181
00:10:55,980 --> 00:10:58,180
three rows which makes complete sense.

182
00:10:58,410 --> 00:11:05,180
What if I wanted to let's say delete a certain column for example as I wanted to delete let's say the

183
00:11:05,180 --> 00:11:06,390
f employee.

184
00:11:06,420 --> 00:11:11,750
I'm not I'm not interested in it you can actually call a Dell or a delete d.f. Square Beckett in plumy

185
00:11:11,740 --> 00:11:12,190
idea.

186
00:11:12,210 --> 00:11:13,990
If you run that then you're OK.

187
00:11:14,010 --> 00:11:15,860
Then you actually got rid of this column.

188
00:11:15,870 --> 00:11:17,900
Then you have an employee name.

189
00:11:17,990 --> 00:11:20,650
You have the salary and you have years of experience.
