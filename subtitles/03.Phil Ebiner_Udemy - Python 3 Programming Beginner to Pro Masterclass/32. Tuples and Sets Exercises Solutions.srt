1
00:00:00,480 --> 00:00:02,440
Hello everyone and welcome to this lecture.

2
00:00:02,790 --> 00:00:08,910
Let's get started and let's try to solve the sets and tuples exercises so the first one is where have

3
00:00:08,970 --> 00:00:13,800
I defined my tuple here that has Chanel and 26 and I am asking you to print Hello followed by the name

4
00:00:13,830 --> 00:00:15,170
and the age and its people.

5
00:00:15,330 --> 00:00:17,400
All right so this should be easy.

6
00:00:17,400 --> 00:00:19,400
So we're going to do print right.

7
00:00:19,560 --> 00:00:21,260
I'm going to say OK I need to print.

8
00:00:21,300 --> 00:00:22,070
Hello.

9
00:00:23,610 --> 00:00:24,810
And I want to pin the name.

10
00:00:24,990 --> 00:00:29,180
So if you as a member is using the fournette method I can say Okay clearly brackets here.

11
00:00:29,280 --> 00:00:30,250
Right.

12
00:00:30,270 --> 00:00:35,370
And then you're going to see okay you are for example here again another one causing and a person on

13
00:00:35,370 --> 00:00:43,300
the age 18 years old and let's put exclamation mark for instance what it could do basically dot format.

14
00:00:43,700 --> 00:00:44,720
Right.

15
00:00:44,850 --> 00:00:50,790
And then I'll pass along basically my tuple elements zero and one of indexing it's this heat I'm just

16
00:00:50,790 --> 00:00:56,280
trying to kind of experiment with you guys to make sure they understand how to access elements within

17
00:00:56,280 --> 00:00:59,670
the tuple which is kind of an indexing that we have them for my sake.

18
00:00:59,700 --> 00:01:05,350
I need to go into my duple square brackets and is the element zero.

19
00:01:05,550 --> 00:01:05,790
OK.

20
00:01:05,820 --> 00:01:07,660
That's the first element within the format.

21
00:01:07,740 --> 00:01:08,290
Right.

22
00:01:08,580 --> 00:01:11,180
And then the second element is going to be my tuple.

23
00:01:12,530 --> 00:01:14,540
Square bracket of 1.

24
00:01:14,940 --> 00:01:15,690
Ah right.

25
00:01:15,710 --> 00:01:17,090
That's pretty much it.

26
00:01:17,150 --> 00:01:18,230
That's it.

27
00:01:18,260 --> 00:01:19,280
Say hello Chanel.

28
00:01:19,280 --> 00:01:20,300
You are 26 years old.

29
00:01:20,300 --> 00:01:20,810
Looks great.

30
00:01:20,810 --> 00:01:22,650
That's exactly what we're expecting.

31
00:01:22,670 --> 00:01:23,560
All right.

32
00:01:23,900 --> 00:01:27,140
This question here is that I want you to define a tuple.

33
00:01:27,290 --> 00:01:28,910
Six of your favourite friends.

34
00:01:29,000 --> 00:01:32,300
Print all the tuple list elements.

35
00:01:32,480 --> 00:01:34,950
And first last element sorry first Ellen.

36
00:01:35,060 --> 00:01:35,810
OK.

37
00:01:36,860 --> 00:01:37,810
So.

38
00:01:39,050 --> 00:01:43,500
Here I just have you know a couple of names that I selected so in order to define that message came

39
00:01:43,510 --> 00:01:50,130
my and this tuple equals two and you get say a scale you can call whatever names you want.

40
00:01:50,190 --> 00:01:50,450
OK.

41
00:01:50,510 --> 00:01:58,190
So if that's okay and let's cut it a couple of couple of lines here and say okay let's let's say for

42
00:01:58,190 --> 00:02:03,800
example of print on a picture that might you please define properly my tuple and that you'll find that

43
00:02:03,800 --> 00:02:04,510
these are the names.

44
00:02:04,510 --> 00:02:05,720
Looks great.

45
00:02:05,720 --> 00:02:07,480
I wanted to print all the names.

46
00:02:07,480 --> 00:02:11,620
Actually we have just done that or what you could do going to say Okay.

47
00:02:11,840 --> 00:02:12,620
So now we are parted.

48
00:02:12,620 --> 00:02:13,400
This looks good.

49
00:02:13,400 --> 00:02:16,310
Second point is I wanted to print the last element.

50
00:02:16,310 --> 00:02:17,620
So what are you going to do here.

51
00:02:17,620 --> 00:02:18,110
Going to see.

52
00:02:18,140 --> 00:02:19,330
I need to print.

53
00:02:19,730 --> 00:02:24,780
And they want to access my tuple but I wanted to print the last element to do that.

54
00:02:24,780 --> 00:02:30,230
I mean say again negative indexing if you as a member of minus 1 and that should return me my last element

55
00:02:30,230 --> 00:02:30,430
here.

56
00:02:30,440 --> 00:02:31,790
Steve Right.

57
00:02:32,310 --> 00:02:37,620
And if I wanted to print or should you know to show the first two elements which are Chanel here Mitch.

58
00:02:37,880 --> 00:02:39,630
What I could do let's delete this.

59
00:02:40,480 --> 00:02:47,310
Harder to do that are going to stick it print and want again go into my duple and I'm going to use slicing.

60
00:02:47,350 --> 00:02:53,030
I need to get zero and then column and then to four and that they'll give mission elements.

61
00:02:53,150 --> 00:02:59,830
Because remember this in the 0 1 2 3 and 4 and now again 2 which means that were going to go from zero

62
00:02:59,830 --> 00:03:04,990
till 1 would simply exclude the number two which of the hundreds of times before.

63
00:03:05,320 --> 00:03:06,040
Right.

64
00:03:07,410 --> 00:03:07,780
OK.

65
00:03:07,830 --> 00:03:13,740
So question number three is that we wanted to define a tuple with your first name last name and age

66
00:03:13,780 --> 00:03:16,000
and find the length and the type as well.

67
00:03:16,050 --> 00:03:16,690
That's easy.

68
00:03:16,690 --> 00:03:24,240
So we're going to say OK in my example tuple Okay equals to call it whatever I'm going to say okay let's

69
00:03:24,240 --> 00:03:27,240
say mittened for example which are going to be my name here.

70
00:03:27,500 --> 00:03:28,200
OK.

71
00:03:28,530 --> 00:03:34,010
And I wanted to let's say for example of the find your last name let's call it Steve for example.

72
00:03:34,020 --> 00:03:36,700
And I need to define the age that say 25.

73
00:03:36,810 --> 00:03:46,290
And that's okay and if I want to let's say prints take a look at it prints my tuple from the middle

74
00:03:46,320 --> 00:03:48,330
Steve Steven 25 it looks great.

75
00:03:48,510 --> 00:03:50,110
I wanted to give the sense of the tuple.

76
00:03:50,140 --> 00:03:54,220
You can just use length function length and pass along my tuple.

77
00:03:56,720 --> 00:03:58,340
And then to come up with a value of three.

78
00:03:58,490 --> 00:04:01,510
And if I give the type you can just use tape.

79
00:04:03,000 --> 00:04:06,720
And then use my parcel of my tuple again.

80
00:04:07,170 --> 00:04:07,950
Perfect.

81
00:04:08,190 --> 00:04:11,650
And you come up with a value of duple which makes complete sense.

82
00:04:11,830 --> 00:04:13,110
Are ready.

83
00:04:13,110 --> 00:04:20,280
Question number four wanted to print the number 40 print the word in the word world in the number 25

84
00:04:20,350 --> 00:04:25,040
print the entire list and tuple Listed below are eight.

85
00:04:25,110 --> 00:04:28,350
So let's see how can we do this.

86
00:04:28,410 --> 00:04:31,210
First I wanted to print the number 40.

87
00:04:31,370 --> 00:04:31,670
Okay.

88
00:04:31,680 --> 00:04:34,320
So underpin this how can we access this.

89
00:04:34,340 --> 00:04:35,890
I mean think a print.

90
00:04:36,030 --> 00:04:41,130
I want to go into my underscored tuple and I want to access specific elements.

91
00:04:41,130 --> 00:04:46,410
So first element is I want Okay this is indexed zero all that is Index one right which means that when

92
00:04:46,410 --> 00:04:52,620
I go here into one and inside it because I want to print 40 This is index zero this index ones which

93
00:04:52,620 --> 00:04:59,490
means I want to go and get inside the nested these sickly lists and that should generate some apology

94
00:04:59,490 --> 00:05:01,680
that actually in a word tea.

95
00:05:01,810 --> 00:05:02,150
Right.

96
00:05:02,160 --> 00:05:02,400
Why.

97
00:05:02,400 --> 00:05:07,600
Because because he wrote in and run my duple my detachable just went up here and just captured the element

98
00:05:07,610 --> 00:05:07,950
here.

99
00:05:08,140 --> 00:05:08,350
OK.

100
00:05:08,370 --> 00:05:12,750
Please don't be confused which is going to run that first and then run this and then you're cockup come

101
00:05:12,750 --> 00:05:13,860
up with number 40.

102
00:05:14,100 --> 00:05:14,390
Okay.

103
00:05:14,400 --> 00:05:16,400
Because that's the latest value that we have.

104
00:05:17,090 --> 00:05:18,780
All right let's copy that.

105
00:05:18,960 --> 00:05:21,890
And they want it to print the word world.

106
00:05:21,930 --> 00:05:24,040
So world here has the index this is zero.

107
00:05:24,180 --> 00:05:25,220
All that is one.

108
00:05:25,500 --> 00:05:26,440
And all that is true.

109
00:05:26,450 --> 00:05:26,870
Right.

110
00:05:26,880 --> 00:05:33,330
So I need to just I need this and I need to go ahead and select two that would print were perfect.

111
00:05:34,410 --> 00:05:37,650
One copy that again and put it here.

112
00:05:37,950 --> 00:05:41,440
And I wanted to print the number 25 which is here.

113
00:05:41,480 --> 00:05:46,520
All right so basically this is 0 1 2 and 3 that means I want to go HUGE into three.

114
00:05:47,010 --> 00:05:48,350
And this is zero.

115
00:05:48,360 --> 00:05:49,160
This is one.

116
00:05:49,210 --> 00:05:51,350
So I want to do this actually looks good.

117
00:05:51,540 --> 00:05:58,670
And that they will come up with the number 25 perfect setting ourselves using a copy again.

118
00:05:59,130 --> 00:06:02,600
And I want it to print the entire list.

119
00:06:02,610 --> 00:06:07,970
I wanted to print that to print the entire list which is basically this is the only list that we have.

120
00:06:08,040 --> 00:06:10,890
So I don't need to do this and that's it.

121
00:06:10,890 --> 00:06:11,620
What a good to go.

122
00:06:11,650 --> 00:06:14,280
If you're on it you've come up with because this is in the zero.

123
00:06:14,280 --> 00:06:17,330
All that is in one that will return my list.

124
00:06:17,460 --> 00:06:19,930
Perfect copy that's they say again.

125
00:06:20,010 --> 00:06:21,900
And I wanted to print the entire tuple.

126
00:06:21,900 --> 00:06:23,670
I wanted to pin the entire message to people.

127
00:06:23,670 --> 00:06:24,390
That's what I meant.

128
00:06:24,390 --> 00:06:27,090
So here this is 0 1 2 and 3.

129
00:06:27,090 --> 00:06:32,650
So if I go here just change it to three four I run it over them up with the tuples which it looks great.

130
00:06:32,760 --> 00:06:36,600
I hope that's pretty easy appreciate for well what's a five.

131
00:06:36,630 --> 00:06:40,820
I wanted to execute the following commands and explain what went wrong and what went right.

132
00:06:40,950 --> 00:06:46,710
So if I assume that you're fine you know it's OK tuple does not support item assignment which basically

133
00:06:47,250 --> 00:06:51,890
kind of you know contradicts a definition of a tuple you want to write something in a tuple which doesn't

134
00:06:51,900 --> 00:06:52,360
make sense.

135
00:06:52,350 --> 00:06:55,690
You can you're not allowed to do this tuples are immutable objects.

136
00:06:56,480 --> 00:06:57,220
Right.

137
00:06:57,780 --> 00:06:58,150
OK.

138
00:06:58,210 --> 00:06:59,070
So what about here.

139
00:06:59,080 --> 00:07:04,890
If I basically run this OK you you'll find that you know it's when just find it when just.

140
00:07:04,900 --> 00:07:05,690
Okay.

141
00:07:05,710 --> 00:07:09,690
So what happened here is that you basically went in here.

142
00:07:10,120 --> 00:07:13,980
You were able to overwrite values within the list.

143
00:07:14,200 --> 00:07:14,730
OK.

144
00:07:15,010 --> 00:07:19,030
So simply put you when they're into the items is 0 1 2 and 3.

145
00:07:19,030 --> 00:07:20,530
So this is not the number three.

146
00:07:20,680 --> 00:07:26,710
When they're through the first element 10 and you overlay va'ad value and you put 9 into it.

147
00:07:26,710 --> 00:07:28,260
You are actually allowed to do this.

148
00:07:28,270 --> 00:07:32,980
You are allowed because this is kind of a list within the tuple to allow to actually override the value

149
00:07:33,070 --> 00:07:35,090
of the list which is pretty interesting.

150
00:07:35,110 --> 00:07:40,180
You can't override the entire value of a table however you're allowed to write in values within the

151
00:07:40,180 --> 00:07:42,670
list defined inside its ubel.

152
00:07:42,750 --> 00:07:45,800
It's kind of a nested tuple in a way.

153
00:07:47,060 --> 00:07:47,570
Okay.

154
00:07:47,680 --> 00:07:50,050
Question 6 is executed the following commands.

155
00:07:50,050 --> 00:07:52,030
And explain what went wrong and what went right.

156
00:07:52,030 --> 00:07:58,120
We found that you'll find that tuple does not support item deletion because I wanted to go ahead and

157
00:07:58,120 --> 00:08:00,770
delete specific elements within the tuple.

158
00:08:00,910 --> 00:08:03,050
Okay so it doesn't allow that.

159
00:08:03,170 --> 00:08:03,430
Why.

160
00:08:03,430 --> 00:08:05,620
Because again tuples are immutable.

161
00:08:05,650 --> 00:08:08,080
However if I wanted to get rid of the entire.

162
00:08:08,860 --> 00:08:13,790
Cuple can actually let's assuming just create this year copy in the next one.

163
00:08:13,790 --> 00:08:16,280
From on this you'll find this has been executed correctly.

164
00:08:16,280 --> 00:08:17,150
No problem.

165
00:08:17,540 --> 00:08:20,680
So if I do print my tuple in 10 well my tuple does not need.

166
00:08:20,680 --> 00:08:23,980
That is not defined does not exist because you just believe the entire thing.

167
00:08:24,020 --> 00:08:26,710
So you are actually allowed to delete the entire tuple.

168
00:08:26,720 --> 00:08:31,190
However you are not allowed to go ahead and deliver just one element within it you just get read if

169
00:08:31,190 --> 00:08:32,250
you want to get registered.

170
00:08:32,330 --> 00:08:38,670
You're allowed to get rid of of of of the Empire tuple of the entire thing completely.

171
00:08:38,900 --> 00:08:43,570
You're not allowed to just delete one single element within the you are right.

172
00:08:45,260 --> 00:08:46,370
Perfect.

173
00:08:46,460 --> 00:08:47,560
Question number seven.

174
00:08:47,570 --> 00:08:48,920
Check of the name python.

175
00:08:48,930 --> 00:08:50,350
Exists in a tuple.

176
00:08:50,580 --> 00:08:51,260
OK.

177
00:08:51,380 --> 00:08:53,790
Again we haven't done that so far.

178
00:08:53,810 --> 00:08:59,610
But you know I'm assuming you guys are experts now so you can just go and research for example.

179
00:08:59,630 --> 00:09:06,720
So in order to check for a specific name what you could do is say okay I wanted to print for example.

180
00:09:06,920 --> 00:09:09,350
Well I think you use the in kind of keyword.

181
00:09:09,380 --> 00:09:11,390
How can we do that and say okay in.

182
00:09:11,510 --> 00:09:15,160
And I'm looking for the word piceance going to see a python.

183
00:09:15,400 --> 00:09:15,930
Right.

184
00:09:16,460 --> 00:09:19,590
If Python is in my tuple.

185
00:09:21,530 --> 00:09:23,560
It's a very easy way to say Okay.

186
00:09:23,580 --> 00:09:28,690
Could you please check if Python the word Python is contained within my cuple.

187
00:09:29,060 --> 00:09:32,520
And this basically sentence should be return true or false.

188
00:09:32,520 --> 00:09:33,200
That's it.

189
00:09:33,410 --> 00:09:38,210
Or if I had that you'd find the actually that it and the value is true because why.

190
00:09:38,210 --> 00:09:40,110
Because Python was actually one of them.

191
00:09:40,140 --> 00:09:40,750
All right.

192
00:09:41,060 --> 00:09:45,610
If I let's say make this an upper case for example and I'm asking you then you can know well false.

193
00:09:45,620 --> 00:09:45,920
Why.

194
00:09:45,920 --> 00:09:48,620
Because this is upper case and this is lowercase.

195
00:09:48,650 --> 00:09:53,060
So this one python will upper case P is not included here.

196
00:09:53,960 --> 00:09:55,790
What about let's say physics for example.

197
00:09:55,790 --> 00:09:57,220
I'm looking for physics.

198
00:09:57,230 --> 00:09:58,590
There's physics.

199
00:09:59,540 --> 00:10:06,320
I'm sorry if there's word physics is contained in my tuple for it with only no false.

200
00:10:06,320 --> 00:10:09,710
However maths is maths contained within my tuple.

201
00:10:09,710 --> 00:10:12,230
Well that's true because maths is contained in maths.

202
00:10:12,500 --> 00:10:13,610
All right.

203
00:10:13,610 --> 00:10:14,420
Perfect.

204
00:10:14,900 --> 00:10:19,490
The next question that we have here a question 8 they're asking you to remove the duplicates from the

205
00:10:19,490 --> 00:10:20,550
fundamentalist.

206
00:10:20,810 --> 00:10:26,960
So if you as a member if we wanted to create eset out of mind of the list this should declare of all

207
00:10:26,960 --> 00:10:28,340
these duplicates.

208
00:10:28,430 --> 00:10:32,950
Right so we're in due here agonistic is set to a creative set out of my list.

209
00:10:33,110 --> 00:10:33,770
Right.

210
00:10:34,040 --> 00:10:34,700
OK.

211
00:10:35,090 --> 00:10:38,330
And this is basically you can create a set.

212
00:10:38,480 --> 00:10:39,260
Right.

213
00:10:39,260 --> 00:10:44,110
But I wanted to do the duplicates and create and put them in a different list to do that.

214
00:10:44,120 --> 00:10:47,560
I'm going to cast it again into a list.

215
00:10:47,980 --> 00:10:48,700
All right.

216
00:10:48,770 --> 00:10:53,640
And there will be let's say let's call it mind you will list my new lists.

217
00:10:55,860 --> 00:10:56,920
Four and that's.

218
00:10:57,040 --> 00:11:02,790
And if I were for example it's a prince and I wanted to print my new lists here.

219
00:11:03,210 --> 00:11:06,750
If I had met you would find that basically here you remove all the duplicates.

220
00:11:06,750 --> 00:11:12,240
Number two has been deleted because it has been duplicated 50 has been just one to one sample has been

221
00:11:12,240 --> 00:11:12,990
duplicated.

222
00:11:13,260 --> 00:11:17,620
And mine as well has been included only one value because has been duplicated as well.

223
00:11:17,640 --> 00:11:19,770
Great.

224
00:11:19,800 --> 00:11:24,480
The next question that we have is I want you to add your name to the following set and convert it into

225
00:11:24,480 --> 00:11:25,050
a list.

226
00:11:25,110 --> 00:11:25,350
OK.

227
00:11:25,380 --> 00:11:26,340
Let's be interesting.

228
00:11:26,340 --> 00:11:31,620
So in order to add a specific element again here we need some research centre research to do that.

229
00:11:31,620 --> 00:11:34,410
Let's actually run this and let's run this just cleaned up.

230
00:11:34,450 --> 00:11:38,530
That's all I need to do to add a specific element to a list.

231
00:11:38,550 --> 00:11:41,300
You're going to say came my underscored set.

232
00:11:41,620 --> 00:11:41,990
OK.

233
00:11:42,030 --> 00:11:43,710
Don't add.

234
00:11:44,280 --> 00:11:49,080
Which is a method that you can use to add specific elements to a set and then you can add for example

235
00:11:49,080 --> 00:11:50,100
the name right here.

236
00:11:50,550 --> 00:11:52,580
And if I want let's say two four of them.

237
00:11:52,730 --> 00:11:56,360
You might set the four on it you would find that there is name for example.

238
00:11:56,370 --> 00:12:00,880
Actually John because John is repeated only one John has been used which makes sense.

239
00:12:00,900 --> 00:12:03,310
Mike Ryan which is is the name has been added.

240
00:12:03,480 --> 00:12:05,970
And Sarah again here has been included as well.

241
00:12:06,250 --> 00:12:07,400
Right.

242
00:12:07,440 --> 00:12:11,910
For one it for example to convert it into a list you can again.

243
00:12:11,920 --> 00:12:14,960
I've done that before several times can say okay lists.

244
00:12:15,210 --> 00:12:18,590
And I wanted to use my set.

245
00:12:18,810 --> 00:12:22,230
So I get a good verse from my set into a list and a call.

246
00:12:22,250 --> 00:12:23,710
There's output lists.

247
00:12:25,930 --> 00:12:31,800
And here I can just go ahead and print basically my out on the scores list.

248
00:12:31,910 --> 00:12:37,550
So you find that basically you have a list with all the names after removing any repetition.

249
00:12:37,730 --> 00:12:38,960
Right.

250
00:12:39,100 --> 00:12:43,360
The last example that we have is that wanted to run the code and explain what it does.

251
00:12:43,390 --> 00:12:48,880
And again I'm asking you to on the code to write the code because we're going to have that in a lot

252
00:12:48,880 --> 00:12:50,520
more details in the future.

253
00:12:50,620 --> 00:12:57,640
He'd just ask you to define for example here set which is my gaucherie and Cherry And I'm asking you

254
00:12:57,640 --> 00:13:00,980
can you please check if orange is in my grocery.

255
00:13:01,200 --> 00:13:03,540
Okay which is again if condition.

256
00:13:03,570 --> 00:13:10,240
It's kind of you know like a like a teaser you know like to the next lectures we're going to be discussing

257
00:13:10,240 --> 00:13:12,310
what they mean by if conditions then what do we need it.

258
00:13:12,430 --> 00:13:17,380
But the overall idea is you see that the checking is or is contained in my grocery list.

259
00:13:17,500 --> 00:13:18,950
Yes please print.

260
00:13:19,090 --> 00:13:23,170
Yes I have got older and in my gaucher List don't worry about the syntax.

261
00:13:23,160 --> 00:13:26,970
And what about the Collen here and all that we're going to cover it in more and lot more detail than

262
00:13:26,980 --> 00:13:31,870
whatever the indent here which is you know kind of a standard I'm going to use if if conditions if I

263
00:13:31,890 --> 00:13:33,990
am that you would find that nothing has been done.

264
00:13:34,000 --> 00:13:35,590
We didn't print anything.

265
00:13:35,590 --> 00:13:35,920
Why.

266
00:13:35,920 --> 00:13:39,040
Because orange is action not contained within mangosteens.

267
00:13:39,040 --> 00:13:43,350
However if I did that you would find that it has been printed.

268
00:13:43,600 --> 00:13:43,870
Why.

269
00:13:43,870 --> 00:13:47,450
Because in this case orange is actually contained within my list.

270
00:13:47,800 --> 00:13:54,380
So when I checked it actually I was able to hear implement the body of the if.

271
00:13:54,450 --> 00:13:54,750
Why.

272
00:13:54,760 --> 00:13:57,550
Because this has been satisfied.

273
00:13:57,550 --> 00:14:00,220
This was the return of this was actually true.

274
00:14:00,670 --> 00:14:04,550
Yes was was contained in my gauci list.

275
00:14:04,560 --> 00:14:06,970
Then I'm going to do this here.

276
00:14:06,970 --> 00:14:07,690
I didn't do it.

277
00:14:07,690 --> 00:14:08,020
Why.

278
00:14:08,020 --> 00:14:12,490
Because audience was in the micro list and that's pretty much what I want you to know.

279
00:14:12,580 --> 00:14:13,530
Up to this moment.

280
00:14:13,750 --> 00:14:14,660
All right.

281
00:14:14,680 --> 00:14:16,110
I hope you guys enjoy that lecture.

282
00:14:16,120 --> 00:14:18,170
I hope you enjoy it all the.

283
00:14:18,400 --> 00:14:20,580
You know seeders exercises again.

284
00:14:20,590 --> 00:14:21,900
That was a lot of exercises.

285
00:14:21,900 --> 00:14:23,130
I hope you guys enjoyed it.

286
00:14:23,190 --> 00:14:29,210
You can kind of you know familiar with the sets and tuples and see you guys in future lectures.
