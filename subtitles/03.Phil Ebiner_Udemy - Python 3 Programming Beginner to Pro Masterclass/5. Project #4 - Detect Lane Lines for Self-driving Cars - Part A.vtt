WEBVTT
1
00:00:00.360 --> 00:00:05.370
Hello everyone and welcome to this project and this project we're going to see how kind of we apply

2
00:00:05.740 --> 00:00:12.510
Python and as an open CV to actually look into some practical applications which is we're going to be

3
00:00:12.510 --> 00:00:14.870
using in self driving cars for example.

4
00:00:14.970 --> 00:00:15.560
OK.

5
00:00:15.750 --> 00:00:23.520
So again Python has a lot of applications we can use it for for machine learning for deep learning for

6
00:00:23.520 --> 00:00:27.030
just general you know like coding of programming for Web development.

7
00:00:27.030 --> 00:00:30.950
And you can obviously use it as well to verify algorithms for driving cars.

8
00:00:31.080 --> 00:00:34.310
And that's going again they're going to be our fun project as well.

9
00:00:34.560 --> 00:00:36.230
So it's assumed that we have a camera.

10
00:00:36.360 --> 00:00:36.610
OK.

11
00:00:36.630 --> 00:00:40.630
For driving cause obviously we need to view the world around us.

12
00:00:41.010 --> 00:00:44.910
So what we're going to do with this we're implementing a plan to put let's say camera in front of our

13
00:00:45.000 --> 00:00:48.320
vehicle and that camera will take certain images.

14
00:00:48.450 --> 00:00:55.960
And the idea is for perception to try to see how can the car views the world around us.

15
00:00:56.050 --> 00:01:00.770
See Okay that's a pedestrian that's a stop sign that's a lane detection and so on and so forth.

16
00:01:00.780 --> 00:01:01.250
Okay.

17
00:01:01.470 --> 00:01:03.900
So in this exercise again it's a very simple exercise.

18
00:01:03.930 --> 00:01:10.860
I'm going to teach you how can we use open CV and use python in general to actually detect lean lines

19
00:01:10.860 --> 00:01:11.730
within the image.

20
00:01:11.810 --> 00:01:12.240
Okay.

21
00:01:12.270 --> 00:01:13.650
It's pretty interesting.

22
00:01:13.650 --> 00:01:14.850
So here we have this.

23
00:01:14.870 --> 00:01:19.650
This is you know this image that we paint out of of our Kemalist we have a camera that's placed on the

24
00:01:19.650 --> 00:01:20.150
dashboard.

25
00:01:20.160 --> 00:01:20.900
Let's see.

26
00:01:21.170 --> 00:01:21.860
Okay.

27
00:01:21.990 --> 00:01:25.560
And what we need to do with that we need to detect these two lane lines.

28
00:01:25.650 --> 00:01:26.390
OK.

29
00:01:27.090 --> 00:01:29.580
So we wanted simply put to the car.

30
00:01:29.610 --> 00:01:34.860
I'm just saying that these two lines within the image is actually our lane and ignore everything else.

31
00:01:34.900 --> 00:01:38.880
OK so can we think about the how can we do this in python.

32
00:01:39.150 --> 00:01:42.840
So first step we need to do all the region of interest masking.

33
00:01:42.840 --> 00:01:47.610
So what we're going to do that we're going to we we know that these lean's these two lines are within

34
00:01:47.610 --> 00:01:49.430
that region within our image.

35
00:01:49.450 --> 00:01:50.030
Correct.

36
00:01:50.250 --> 00:01:50.910
OK.

37
00:01:51.180 --> 00:01:55.800
So we're going to do with those we say okay so if we're looking for lane lines let's focus on this portion

38
00:01:55.800 --> 00:01:56.690
of the image.

39
00:01:56.950 --> 00:01:58.540
Let's ignore everything else.

40
00:01:58.710 --> 00:02:02.220
So I'm going to do here is going to ignore let's say the sky we know the Villeins one I'm not going

41
00:02:02.220 --> 00:02:04.750
to be here in the sky lanes we're not going to be here.

42
00:02:04.750 --> 00:02:08.230
It's in the trees for example we're going to be let's say in that region of interest.

43
00:02:08.730 --> 00:02:13.590
And I'm going to do here this is this exercise we're going to create what we call vision of interest

44
00:02:13.590 --> 00:02:14.340
masking.

45
00:02:14.550 --> 00:02:21.100
We're going to mass the region of interest and select mainly the pixels that has the lean lines in them.

46
00:02:21.320 --> 00:02:23.190
You can see how can we actually do that.

47
00:02:23.580 --> 00:02:27.420
So the first step is obviously that's our region interests.

48
00:02:27.660 --> 00:02:31.670
OK so we're going to ignore everything else we're going to do here.

49
00:02:31.920 --> 00:02:39.300
We're going to create a mask and that mask simply has uro's everywhere and has one ones here.

50
00:02:39.460 --> 00:02:45.240
As you always mention or as they call before any image is presented again in some some pixels of zeros

51
00:02:45.240 --> 00:02:45.900
and ones.

52
00:02:45.930 --> 00:02:50.270
Zenawi In the case black Okay 255 indicates white.

53
00:02:50.350 --> 00:02:51.320
Okay.

54
00:02:51.930 --> 00:02:53.610
So here we have what to do with that.

55
00:02:53.640 --> 00:02:56.150
Create a mask that mask has zeros everywhere.

56
00:02:56.160 --> 00:02:58.460
However this region only has white.

57
00:02:58.470 --> 00:03:04.730
Okay so here these pixels has 255 in them every anywhere else is just zeros.

58
00:03:05.170 --> 00:03:05.720
Right.

59
00:03:06.020 --> 00:03:11.700
So we're going to do with our image which is what you're paying from our camera we're getting that mask

60
00:03:11.790 --> 00:03:14.810
which is again a bunch of zeros and ones somewhere.

61
00:03:14.830 --> 00:03:18.720
And then if you drive somewhere and they're going to do you're going to perform or called an ending

62
00:03:18.750 --> 00:03:20.590
operation and operation.

63
00:03:21.120 --> 00:03:26.580
Let's think of end first you know as the multiplication summats multiplication first it's all going

64
00:03:26.580 --> 00:03:29.290
to do he is going to multiply the values of pixels.

65
00:03:29.310 --> 00:03:32.920
Whatever it is with the pixel by the value of the picture here in the mask.

66
00:03:33.090 --> 00:03:39.870
So if we did any then you play by zero that would set it to zero which means you are simply killing

67
00:03:39.980 --> 00:03:44.960
all of the pixels everywhere else and keeping the pixels only in the region of interest.

68
00:03:45.240 --> 00:03:50.160
So if you take let's say any sort of year multiplied by the value here which is one which is let's say

69
00:03:50.160 --> 00:03:56.860
two hundred fifty five marker play any value by one way to one of the five that will generate value.

70
00:03:56.880 --> 00:04:03.060
That means you are masking but only keeping that region of interest and masking anything else.

71
00:04:03.900 --> 00:04:05.840
And that's very much why you go what is going to get.

72
00:04:05.850 --> 00:04:07.080
So are we going to get here.

73
00:04:07.260 --> 00:04:13.640
Well we are simply going to get an image that has all zeros and we only mask our our region of interest.

74
00:04:13.830 --> 00:04:14.800
Okay.

75
00:04:15.240 --> 00:04:16.260
And that's the first step.

76
00:04:16.320 --> 00:04:16.920
Okay.

77
00:04:17.080 --> 00:04:22.590
The next step is we get to and before we actually move to the next step let's go to the table here.

78
00:04:22.590 --> 00:04:26.410
That indicates the ending operation so ending operation.

79
00:04:26.490 --> 00:04:31.090
This is the logic the logic design is if we have zeros left to inputs.

80
00:04:31.180 --> 00:04:31.640
Okay.

81
00:04:31.720 --> 00:04:39.410
And this game has in zero zero and zero in the up are going to be 0 0 and 1 and we're going to be zero.

82
00:04:39.630 --> 00:04:42.230
If it's 1 0 0 we're going to be zero.

83
00:04:42.630 --> 00:04:47.400
If it's one of the one there meaning going to be one which makes sense because it's and that means both

84
00:04:47.400 --> 00:04:51.390
conditions has to be true both conditions has to be ones.

85
00:04:51.390 --> 00:04:54.930
So the path we're going to be one if any of the input is zero.

86
00:04:54.930 --> 00:04:57.040
That means we'll just get to the up to be zero.

87
00:04:57.090 --> 00:04:57.310
OK.

88
00:04:57.330 --> 00:04:59.810
There's the whole idea of ending Gates okay or anything.

89
00:05:00.350 --> 00:05:00.900
Proceed.

90
00:05:01.140 --> 00:05:01.970
Okay.

91
00:05:02.570 --> 00:05:03.180
All right.

92
00:05:03.570 --> 00:05:03.930
OK.

93
00:05:03.970 --> 00:05:04.790
The next step is.

94
00:05:04.810 --> 00:05:05.910
That's the first part.

95
00:05:05.950 --> 00:05:11.200
The second part is how can we actually select the pixels only with their value.

96
00:05:11.200 --> 00:05:13.350
With you know the lean lean lines in it.

97
00:05:13.420 --> 00:05:14.460
OK.

98
00:05:14.560 --> 00:05:15.830
Any guesses.

99
00:05:15.910 --> 00:05:16.290
All right.

100
00:05:16.390 --> 00:05:22.230
So I hope it goes gastard So simply put here of the pixels of this lean.

101
00:05:22.250 --> 00:05:25.500
The lines are actually values of one good the other white right.

102
00:05:25.780 --> 00:05:28.340
Any other pixels actually agree values.

103
00:05:28.630 --> 00:05:33.030
So all we could do here is first with the region of interest masking.

104
00:05:33.070 --> 00:05:37.030
Second step is going to go here and do kind of pixel selection.

105
00:05:37.030 --> 00:05:42.620
We're just going to go and select pixels only that has ones in them which indicates weight.

106
00:05:42.850 --> 00:05:43.990
And that's it.

107
00:05:43.990 --> 00:05:46.730
Then you added kind of an intelligence then you added.

108
00:05:46.750 --> 00:05:52.120
Now based on the image I can actually detect my lean lines which is really powerful why it could do

109
00:05:52.120 --> 00:05:58.780
afterwards you can then help that information to let's say sentell your vehicle for example can do tons

110
00:05:58.780 --> 00:06:02.640
of stuff with it again within an environment with an open civil war.

111
00:06:02.750 --> 00:06:03.240
All right.

112
00:06:03.440 --> 00:06:06.700
And that's pretty much all for this section in the next section and show you how can we actually use

113
00:06:06.850 --> 00:06:10.970
that information to develop our code.

114
00:06:11.010 --> 00:06:11.440
OK.

115
00:06:11.530 --> 00:06:13.220
Because I enjoyed it and see you in that section.
