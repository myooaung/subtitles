1
00:00:01,980 --> 00:00:04,090
Hello everyone and welcome to this lecture.

2
00:00:04,550 --> 00:00:08,430
I'm super excited because we are getting a little bit closer to our goal.

3
00:00:08,450 --> 00:00:12,530
We're our target of actually building our convolutions your network together.

4
00:00:12,780 --> 00:00:17,520
This understanding is from a theoretical perspective and then we're going to be ready to go ahead and

5
00:00:17,520 --> 00:00:22,690
start recording the entire network and detect you know happy or smiley faces.

6
00:00:22,720 --> 00:00:23,110
Right.

7
00:00:23,310 --> 00:00:24,470
So the next layer.

8
00:00:24,600 --> 00:00:24,940
Okay.

9
00:00:24,950 --> 00:00:29,160
In our our journey is what we call of the max appallingly.

10
00:00:29,300 --> 00:00:29,820
OK.

11
00:00:30,030 --> 00:00:33,460
Again let's let's take a look.

12
00:00:33,660 --> 00:00:34,330
Let's go back.

13
00:00:34,350 --> 00:00:35,740
Let's take a look at one.

14
00:00:36,000 --> 00:00:39,870
So if you give us a call that's our convolution network.

15
00:00:40,110 --> 00:00:40,300
OK.

16
00:00:40,320 --> 00:00:41,650
That's the overall network.

17
00:00:42,060 --> 00:00:46,860
Again here we have our fully connected artificial network which consists of a bunch of neurones which

18
00:00:46,870 --> 00:00:48,610
as we discussed how can we do that.

19
00:00:48,870 --> 00:00:55,320
Here we have our Simply our target class we have either zero or one zero indicates not smiling.

20
00:00:55,320 --> 00:00:56,660
One indicates mining.

21
00:00:57,090 --> 00:00:59,810
And here we have the different layers.

22
00:00:59,990 --> 00:01:00,330
OK.

23
00:01:00,360 --> 00:01:07,670
So we have our image here we have our first convolution layers which generates our feature maps.

24
00:01:07,820 --> 00:01:14,310
He we know how can we do the beta Lou which is you know again used for non-linear and non-linearity

25
00:01:14,310 --> 00:01:16,170
within our network.

26
00:01:16,170 --> 00:01:17,240
And now to the fun part.

27
00:01:17,250 --> 00:01:22,320
Now we need to discuss how can we do the pooling or Max pooling which is this layer cake.

28
00:01:22,650 --> 00:01:25,950
So pulling simply takes the feature detectors.

29
00:01:26,070 --> 00:01:33,510
So these are the feature maps and simply put reduces the dimensionality of these feature maps into kind

30
00:01:33,510 --> 00:01:39,060
of you know welchol Appalling filters or smaller versions of them just to make a bit more efficient

31
00:01:39,510 --> 00:01:43,670
to be ready to train our network or defeated or fully connected network.

32
00:01:44,070 --> 00:01:45,260
How can you do that.

33
00:01:45,270 --> 00:01:47,900
That's our topic for this lecture.

34
00:01:48,190 --> 00:01:48,830
All right.

35
00:01:49,050 --> 00:01:54,510
So in order to do mext pooling or I we simply let's take a look at a quick example.

36
00:01:54,510 --> 00:01:56,180
Literally that's our image.

37
00:01:56,260 --> 00:02:04,120
Okay let's assume that we're going to use a max pooling layer of all college to buy 10.

38
00:02:04,410 --> 00:02:08,790
So simply put the mext pooling is again another filter.

39
00:02:08,810 --> 00:02:10,610
Hume and assume it's two by two.

40
00:02:10,780 --> 00:02:11,450
Okay.

41
00:02:11,570 --> 00:02:15,780
And well Greek Greek use a specific type of pooling we'll call the max pooling.

42
00:02:16,010 --> 00:02:16,650
OK.

43
00:02:17,040 --> 00:02:17,860
What do you mean.

44
00:02:18,090 --> 00:02:23,520
So simply put we're going to go through this simple assume that we have two by two matrix.

45
00:02:23,520 --> 00:02:27,410
So we're going to put the two point two Matrix here on our image.

46
00:02:27,450 --> 00:02:31,580
We're going to select the maximum pixel value.

47
00:02:31,680 --> 00:02:34,290
So he what's the maximum out of these voter values.

48
00:02:34,290 --> 00:02:35,580
Simply put it's a six.

49
00:02:35,580 --> 00:02:36,890
And that's why here.

50
00:02:37,410 --> 00:02:38,910
This pixel going to be six.

51
00:02:39,360 --> 00:02:46,200
And then we're going to move simply our filters to the right and then are going to select the maximum

52
00:02:46,200 --> 00:02:50,280
value so the maximum value out of all of their wins out of all of these out is 8.

53
00:02:50,280 --> 00:02:52,630
So that's why we selected eight.

54
00:02:52,740 --> 00:02:53,690
They all come here.

55
00:02:53,790 --> 00:02:56,860
We select the maximum value which has lines will select nine.

56
00:02:57,300 --> 00:03:01,380
We've come here to select the maximum value which is four and that will become four.

57
00:03:01,770 --> 00:03:04,960
And that's pretty much how can we do with the max pooling.

58
00:03:05,280 --> 00:03:08,020
All right so what's your what's the essence like what happened.

59
00:03:08,310 --> 00:03:09,920
What happened is actually very important.

60
00:03:10,060 --> 00:03:15,410
Here we had a an image or a feature map of four by four pixels.

61
00:03:15,410 --> 00:03:16,130
Right.

62
00:03:16,260 --> 00:03:21,030
This has been kind of reduced it to becoming two by two which is very powerful.

63
00:03:21,030 --> 00:03:25,630
Now we actually use them in shanidar pretty much in two like you know like half or even maybe like kind

64
00:03:25,650 --> 00:03:27,600
a quarter of it.

65
00:03:27,750 --> 00:03:34,020
So pulling down sampling layers are placed AFTER called volution leaders to deduce feature map they

66
00:03:34,020 --> 00:03:37,200
mention allotey this improve the computational efficiency.

67
00:03:37,200 --> 00:03:40,700
So now the network doesn't need to go ahead and train all these players.

68
00:03:40,710 --> 00:03:44,200
Actually teams are kind of this smaller values.

69
00:03:44,790 --> 00:03:51,310
One key element one key important aspect is that pooling helps the model to generalise by avoiding overfilling.

70
00:03:51,670 --> 00:03:53,860
And there's actually a very important aspect.

71
00:03:54,120 --> 00:03:59,470
So let's assume that for example the value of six was in here let's say the value of six for example

72
00:03:59,470 --> 00:04:01,530
it was here okay.

73
00:04:02,040 --> 00:04:07,170
What's going to happen actually this this matrix will going to be exactly the same which means that

74
00:04:07,230 --> 00:04:09,880
even if the pixels are shifted a little bit.

75
00:04:09,870 --> 00:04:12,660
So let's say this 6 was contained in here.

76
00:04:13,110 --> 00:04:19,880
Even if they apply the exact same spooling the value of this you know would become six as well.

77
00:04:20,100 --> 00:04:20,710
Why.

78
00:04:20,910 --> 00:04:26,160
Because again we just we are putting the maximum of kind of renauld Reason of pixels and that's very

79
00:04:26,160 --> 00:04:27,180
powerful.

80
00:04:27,180 --> 00:04:32,070
So the network would be able to generalize so even for example if let's see the smiling face shifted

81
00:04:32,070 --> 00:04:35,330
a little bit to the right we've shifted a little bit to the left.

82
00:04:35,330 --> 00:04:41,490
We'll do an old shift that somehow like let's say the faces looking down or up or whatever we the network

83
00:04:41,490 --> 00:04:42,750
would be able to generalize.

84
00:04:42,750 --> 00:04:43,050
Why.

85
00:04:43,050 --> 00:04:48,440
Because we are NARP pick some dependent we are paying the maximum values here.

86
00:04:48,450 --> 00:04:53,760
Out of all of them and we come up with certain value for specific hinode kind of you know kind of zipping

87
00:04:53,810 --> 00:05:00,920
format you are condensing all these pixels into one value of pixels quality 6.

88
00:05:01,860 --> 00:05:07,170
So Max Pauling works by detailing the maximum feature response within a given sample size and if each

89
00:05:07,170 --> 00:05:07,680
map.

90
00:05:07,890 --> 00:05:12,450
So we simply select only the pixels that have the highest impact.

91
00:05:12,510 --> 00:05:18,270
So out of let's say these pixels the highest impact is this which is that's why we selected it out of

92
00:05:18,270 --> 00:05:21,790
these pixels the highest one of the best one is actually the value of nine and so on.

93
00:05:21,900 --> 00:05:22,620
Great.

94
00:05:22,740 --> 00:05:23,870
All right.

95
00:05:24,550 --> 00:05:24,870
OK.

96
00:05:24,900 --> 00:05:29,980
Let's take a look at a life illustration of the of the Empire layers that we discussed so far.

97
00:05:30,000 --> 00:05:34,560
So now we know how can we perform Peacher detection.

98
00:05:34,740 --> 00:05:36,600
How can we do our play there Lou.

99
00:05:36,630 --> 00:05:37,950
Activation function.

100
00:05:37,950 --> 00:05:45,530
And then how can we obtain our our next pooling actually before going ahead to the life illustration.

101
00:05:45,600 --> 00:05:49,710
What I wanted to show you is one last layer is what we call the flattening layer.

102
00:05:49,710 --> 00:05:52,570
And after that then we're going to be ready to the life lustration.

103
00:05:52,920 --> 00:05:55,180
What happened after mewl pain this matrix.

104
00:05:55,200 --> 00:05:55,480
Okay.

105
00:05:55,500 --> 00:06:01,270
With this kind of you know the max spalling layer we or we perform a code flattening we simply take

106
00:06:01,270 --> 00:06:03,100
this and flatten it up.

107
00:06:03,270 --> 00:06:09,210
We make it in a one column six eight nine and four and that's it.

108
00:06:09,210 --> 00:06:14,170
Then you are pretty much ready to take veres the flattened layer and feed it to the network and that's

109
00:06:14,170 --> 00:06:18,630
pretty much how can you run or how can you build your volution urine.

110
00:06:19,170 --> 00:06:24,630
Before we start coding Let's go ahead and go into a light illustration to understand what you mean here

111
00:06:24,630 --> 00:06:25,240
to that link.

112
00:06:25,250 --> 00:06:27,410
I understand what you mean by this.

113
00:06:27,420 --> 00:06:30,320
You know could have been convolution in that network in action.

114
00:06:34,250 --> 00:06:34,890
All right.

115
00:06:34,950 --> 00:06:39,590
So let's take a look at the convolution here our network in action.

116
00:06:39,690 --> 00:06:42,780
So please go ahead to the s c s.

117
00:06:42,930 --> 00:06:43,340
Right.

118
00:06:43,380 --> 00:06:45,180
And let's see a backslash.

119
00:06:45,390 --> 00:06:50,190
And there is a Harley spects ledge vis Leisure's com flat HCM.

120
00:06:50,400 --> 00:06:55,260
And you can find the link as well in the lecture slides and that's pretty really interesting website

121
00:06:55,260 --> 00:06:58,130
because it shows you the in Piku convolutions in action.

122
00:06:58,620 --> 00:07:01,050
So simply here.

123
00:07:01,460 --> 00:07:08,580
In our example we wanted to kind of perform a very simple exercise to detect happy faces are these smiling

124
00:07:08,670 --> 00:07:09,240
or not.

125
00:07:09,240 --> 00:07:10,580
Either one or zero.

126
00:07:10,920 --> 00:07:19,640
However he we wanted to detect numbers so this kind of in all this dataset that Selena famously set

127
00:07:20,120 --> 00:07:24,540
just you know like you can draw whatever value you want here and it would tell you what where did you

128
00:07:24,540 --> 00:07:29,670
draw he was at 0 1 2 3 4 or up to nine.

129
00:07:29,760 --> 00:07:31,000
So let's give it a shot.

130
00:07:31,020 --> 00:07:34,980
Let's assume I'm going to just going to write five here you can simply computer write five.

131
00:07:35,580 --> 00:07:35,910
Okay.

132
00:07:35,930 --> 00:07:37,850
You can write whatever five you want.

133
00:07:38,160 --> 00:07:38,570
All right.

134
00:07:38,670 --> 00:07:42,440
And basically that's the that's all the different layers in action.

135
00:07:42,440 --> 00:07:44,630
It's brilliant to have really amazing.

136
00:07:44,630 --> 00:07:49,750
So I guess I can see here if you find that these are kind of the first layer to the convolution layer.

137
00:07:49,760 --> 00:07:53,090
These are the different feature maps that you're pinned.

138
00:07:53,240 --> 00:07:58,330
And that's kind of you know like the first empirically you can show or disable an image.

139
00:07:58,370 --> 00:08:02,320
So if you can do show if you can remove it that we're on move this.

140
00:08:02,330 --> 00:08:03,220
That's our input.

141
00:08:03,290 --> 00:08:04,790
So that's our employer.

142
00:08:04,790 --> 00:08:08,060
This is the convolution lady can show it and you can enable it.

143
00:08:08,360 --> 00:08:10,270
So that's our feature maps.

144
00:08:10,630 --> 00:08:15,140
You guys remember we apply the convolutions which is you know different filters to come up with these

145
00:08:15,140 --> 00:08:20,970
feature feature maps again all the featured maps the different you find you know here a little bit darker

146
00:08:20,990 --> 00:08:23,930
here a little bit like or brighter here and so on.

147
00:08:24,080 --> 00:08:30,260
And that's our feature maps firstly and then afterwards from the feature maps we do with the max pwning

148
00:08:30,260 --> 00:08:34,080
layer which is simply what we call it here down sampling.

149
00:08:34,140 --> 00:08:38,020
So down sampling this is pretty much a scene for mext pooling.

150
00:08:38,120 --> 00:08:40,060
You can actually show it you should hide it.

151
00:08:40,070 --> 00:08:41,240
It's really interesting too.

152
00:08:41,500 --> 00:08:49,250
If you guys can see that simply the image here was let's say the dimensions was let's say 64 64 here

153
00:08:49,250 --> 00:08:50,830
it has been down sampled.

154
00:08:50,930 --> 00:08:51,160
OK.

155
00:08:51,200 --> 00:08:54,550
Which is the advantages of the wiener Amex pulling in.

156
00:08:54,650 --> 00:08:59,350
Bear in mind that the image just pretty up to see if you take a look at here between these two.

157
00:08:59,620 --> 00:09:00,290
Okay.

158
00:09:00,440 --> 00:09:06,830
The actual features are still intact even though a lot of information has been you know kind of downsized

159
00:09:06,830 --> 00:09:09,610
have been down sample have been kind of zipped.

160
00:09:09,680 --> 00:09:11,600
Think of it as kind of doing zipping to the fire.

161
00:09:11,630 --> 00:09:13,160
The information is in the sea.

162
00:09:13,490 --> 00:09:15,740
However the size is much less.

163
00:09:16,070 --> 00:09:21,470
And then afterwards we have another convolution layer which is convincingly as to you can show it and

164
00:09:21,470 --> 00:09:23,850
you can hide it which is this confusion low.

165
00:09:24,020 --> 00:09:24,540
OK.

166
00:09:24,920 --> 00:09:30,200
And then we have another down sample English which is simply this lake which is taking again these features

167
00:09:30,390 --> 00:09:34,670
there and selling them again one more time and then down now to the fun part.

168
00:09:34,670 --> 00:09:39,470
Basically what we have here is our fully connected fishing network.

169
00:09:39,860 --> 00:09:42,560
We do the fully connected which is this layer.

170
00:09:42,960 --> 00:09:44,640
But my this has been flattened.

171
00:09:44,690 --> 00:09:45,350
Right.

172
00:09:45,740 --> 00:09:53,030
And then we have another fully connected layer which is this layer and then the output will be out quickly.

173
00:09:53,330 --> 00:09:54,860
If you get bitten.

174
00:09:55,130 --> 00:10:00,620
This is very important to make sure that here we have 10 samples of 10 neurones in the output showing

175
00:10:00,620 --> 00:10:05,220
simply our values from zini from zero to nine.

176
00:10:05,450 --> 00:10:08,420
Okay which is which is exactly what we're looking for.

177
00:10:08,460 --> 00:10:14,440
To classify whatever value we're going to be putting here into one of these categories from one to nine.

178
00:10:14,480 --> 00:10:16,120
All right that looks great.

179
00:10:16,490 --> 00:10:22,100
So that's pretty much how can we implement convolutions or evolution you know what in action if you

180
00:10:22,250 --> 00:10:28,100
can see here you would find that the guest the first guess was actually right we had 0 5 in here and

181
00:10:28,100 --> 00:10:29,710
we put your pain down.

182
00:10:29,740 --> 00:10:34,780
The actual value added to the first guess was actually five which is perfect.

183
00:10:35,100 --> 00:10:41,210
And what it's telling you here the second guess which is you know kind of the next best one is milk

184
00:10:41,240 --> 00:10:46,850
is eight case with saying you the best one was five and then the next one it might be eight but because

185
00:10:46,850 --> 00:10:49,820
the first guess was highest has higher probability.

186
00:10:49,850 --> 00:10:53,730
So that's what has been classified as five which is a two stroke class or eight.

187
00:10:53,750 --> 00:10:56,800
Let's actually give that and let's maybe try another value.

188
00:10:57,170 --> 00:11:00,620
Let's try for example zero as we do here.

189
00:11:01,340 --> 00:11:06,170
And that's telling you okay that's out there on cemp and growing that's our 0.

190
00:11:06,200 --> 00:11:11,610
Our first guest was actually 02 which is you know these again our all the future maps all I want Max

191
00:11:11,620 --> 00:11:12,690
pooling layers.

192
00:11:12,890 --> 00:11:15,610
Again another feature convolution lay of two.

193
00:11:15,650 --> 00:11:21,320
And then another down sampling layer and then again another two layers here showing the fully connected

194
00:11:21,320 --> 00:11:24,020
network which is a maze again a classes you two.

195
00:11:24,230 --> 00:11:25,940
And then I guess a six.

196
00:11:25,940 --> 00:11:28,980
Let's give that let's may be right for example eight.

197
00:11:30,390 --> 00:11:31,500
Let's make it.

198
00:11:31,560 --> 00:11:33,290
Looks a little bit like this.

199
00:11:33,420 --> 00:11:36,870
Aniston and you again the first guess eight second guess is six.

200
00:11:37,380 --> 00:11:38,770
Let's maybe try zero.

201
00:11:38,780 --> 00:11:42,290
But maybe let's not con this non stop like here.

202
00:11:42,570 --> 00:11:47,040
It's actually even you know it was able to even deal with even though we're didn't close heat here.

203
00:11:47,080 --> 00:11:49,110
The first guess what's the insula which you'll scream.

204
00:11:49,500 --> 00:11:52,060
Let's maybe try another parameter.

205
00:11:52,080 --> 00:11:55,030
Let's say try for example seven.

206
00:11:55,260 --> 00:11:58,750
So let's make it like you know like this for example shows yorki.

207
00:11:58,830 --> 00:11:59,940
Yes was seven.

208
00:11:59,970 --> 00:12:01,620
And the second guess was one one.

209
00:12:01,650 --> 00:12:01,920
Why.

210
00:12:01,920 --> 00:12:04,410
Because one is actually speeding pretty close to the seven.

211
00:12:04,420 --> 00:12:05,020
Right.

212
00:12:05,400 --> 00:12:06,590
Let's try one.

213
00:12:08,320 --> 00:12:11,380
And it tells you actually that was first class was first guess was one.

214
00:12:11,380 --> 00:12:12,310
Looks good.

215
00:12:12,610 --> 00:12:16,710
Let's try for example make a little bit later all seven or a one day.

216
00:12:16,750 --> 00:12:20,710
Again the first guest was one and the second guess was seven mixteca Looks good.

217
00:12:20,710 --> 00:12:25,000
Again you guys can you know spend the entire day playing here with you know with this.

218
00:12:25,000 --> 00:12:30,160
It's really interesting because now I actually see kind of you know like like an immense brain which

219
00:12:30,160 --> 00:12:30,670
is amazing.

220
00:12:30,670 --> 00:12:32,800
Now you've built kind of the mini brain.

221
00:12:33,070 --> 00:12:35,530
You're right you can train that brain to do whatever you want.

222
00:12:35,530 --> 00:12:43,930
Classifying numbers classify images translate data you know like to interpret for example voice the

223
00:12:43,930 --> 00:12:45,280
natural language processing.

224
00:12:45,280 --> 00:12:47,010
It's just fascinating.

225
00:12:47,410 --> 00:12:52,440
All right looking let's enjoy that section and see you in the next section.
