WEBVTT
1
00:00:00.070 --> 00:00:02.040
- [Instructor] Before we get started on practicing

2
00:00:02.040 --> 00:00:04.060
some test-driven development habits,

3
00:00:04.060 --> 00:00:07.010
I want to take a moment to first share with you

4
00:00:07.010 --> 00:00:09.040
a few of my favorite arguments

5
00:00:09.040 --> 00:00:12.060
for why test-driven development really matters.

6
00:00:12.060 --> 00:00:15.080
The actual list of reasons could easily be a long one,

7
00:00:15.080 --> 00:00:18.050
so I'm going to condense this to just my favorites

8
00:00:18.050 --> 00:00:21.040
and hopefully the most important ones.

9
00:00:21.040 --> 00:00:23.000
It's one of the best ways to get

10
00:00:23.000 --> 00:00:25.050
really quick design validation.

11
00:00:25.050 --> 00:00:27.090
When you think about it as a developer,

12
00:00:27.090 --> 00:00:29.040
when you write code for anything,

13
00:00:29.040 --> 00:00:31.030
the first thing you do in your head

14
00:00:31.030 --> 00:00:33.020
is come up with a design.

15
00:00:33.020 --> 00:00:34.070
You may or may not actually

16
00:00:34.070 --> 00:00:37.040
formally document that design on paper,

17
00:00:37.040 --> 00:00:39.000
but it is still true that design

18
00:00:39.000 --> 00:00:42.070
happens before development usually.

19
00:00:42.070 --> 00:00:44.040
And you need to test your design

20
00:00:44.040 --> 00:00:46.030
before it's too settled

21
00:00:46.030 --> 00:00:48.070
because an implemented bad design choice

22
00:00:48.070 --> 00:00:51.040
tends to be pretty expensive to change later

23
00:00:51.040 --> 00:00:53.020
in the development cycle.

24
00:00:53.020 --> 00:00:54.090
By practicing TDD,

25
00:00:54.090 --> 00:00:57.030
you get the quick design feedback you need

26
00:00:57.030 --> 00:00:59.090
and the ability to fix a small problem

27
00:00:59.090 --> 00:01:02.010
before it becomes a big one.

28
00:01:02.010 --> 00:01:04.090
Good test coverage is what I like to call

29
00:01:04.090 --> 00:01:07.010
executable documentation,

30
00:01:07.010 --> 00:01:09.040
which is the best documentation you can have

31
00:01:09.040 --> 00:01:11.090
on a software application.

32
00:01:11.090 --> 00:01:15.020
Tests tend to also be a teams most trustworthy documentation

33
00:01:15.020 --> 00:01:16.090
because it gives you facts

34
00:01:16.090 --> 00:01:20.050
not just opinions of what other teammates believe

35
00:01:20.050 --> 00:01:22.040
or what other forms of documentation

36
00:01:22.040 --> 00:01:24.070
might be saying about the system.

37
00:01:24.070 --> 00:01:27.060
Given how well tests can double as documentation,

38
00:01:27.060 --> 00:01:30.080
they're also a good place to begin documenting

39
00:01:30.080 --> 00:01:33.030
a feature's acceptance criteria.

40
00:01:33.030 --> 00:01:35.070
When starting out writing automated test code

41
00:01:35.070 --> 00:01:37.030
for the first time,

42
00:01:37.030 --> 00:01:40.050
the low-hanging fruit test cases are the ones

43
00:01:40.050 --> 00:01:42.020
where you are verifying that

44
00:01:42.020 --> 00:01:44.060
all the acceptance criteria have been met

45
00:01:44.060 --> 00:01:46.030
for a feature.

46
00:01:46.030 --> 00:01:49.050
Automated tests, specifically unit tests

47
00:01:49.050 --> 00:01:53.010
are also very useful in helping to verify the parts

48
00:01:53.010 --> 00:01:54.070
before the whole.

49
00:01:54.070 --> 00:01:57.050
When you consider that many teams are often developing

50
00:01:57.050 --> 00:02:00.070
different aspects of a feature simultaneously,

51
00:02:00.070 --> 00:02:02.000
does a great thing to be able to

52
00:02:02.000 --> 00:02:04.070
verify each part independently

53
00:02:04.070 --> 00:02:06.070
before it is integrated with other parts

54
00:02:06.070 --> 00:02:09.020
that make up the whole feature.

55
00:02:09.020 --> 00:02:11.000
Another good reason is that

56
00:02:11.000 --> 00:02:13.030
it's good for change management.

57
00:02:13.030 --> 00:02:16.060
So think, one cannot change what one doesn't understand.

58
00:02:16.060 --> 00:02:17.070
Right?

59
00:02:17.070 --> 00:02:20.040
Well this saying holds true for writing code.

60
00:02:20.040 --> 00:02:23.040
A good way to understand code before you change it

61
00:02:23.040 --> 00:02:25.000
is to make sure there's test coverage

62
00:02:25.000 --> 00:02:26.080
around that code.

63
00:02:26.080 --> 00:02:28.030
Reading and running tests,

64
00:02:28.030 --> 00:02:30.070
especially for code you didn't write,

65
00:02:30.070 --> 00:02:32.080
will help you with understanding,

66
00:02:32.080 --> 00:02:34.020
and the better you understand it,

67
00:02:34.020 --> 00:02:35.070
the better position you'll be

68
00:02:35.070 --> 00:02:38.050
to start making safe changes.

69
00:02:38.050 --> 00:02:40.040
And along those same lines,

70
00:02:40.040 --> 00:02:42.070
TDD is a useful tactic to employ

71
00:02:42.070 --> 00:02:44.080
for troubleshooting defects.

72
00:02:44.080 --> 00:02:47.000
Writing tests should become a habit

73
00:02:47.000 --> 00:02:49.040
for every troubleshooting effort.

74
00:02:49.040 --> 00:02:50.070
The tests you write can serve as

75
00:02:50.070 --> 00:02:53.040
a pretty useful historical artifact.

76
00:02:53.040 --> 00:02:55.050
They can help out when a defect

77
00:02:55.050 --> 00:02:58.030
or a similar defect reoccurs.

78
00:02:58.030 --> 00:03:01.040
Having tests in place on a team can also help

79
00:03:01.040 --> 00:03:05.030
with onboarding and training new developers.

80
00:03:05.030 --> 00:03:08.030
A new developer can read and hopefully contribute to

81
00:03:08.030 --> 00:03:11.070
the writing of tests for features,

82
00:03:11.070 --> 00:03:15.000
and they can do no harm assuming those tests

83
00:03:15.000 --> 00:03:17.090
are written in a safe way.

84
00:03:17.090 --> 00:03:20.070
Consider how much writing tests can be used

85
00:03:20.070 --> 00:03:23.090
for just in time training for a new developer.

86
00:03:23.090 --> 00:03:25.070
This allows the new developer to learn

87
00:03:25.070 --> 00:03:28.010
what the system actually does

88
00:03:28.010 --> 00:03:31.080
by taking advantage of executable documentation

89
00:03:31.080 --> 00:03:33.090
and contributing to it as well.

90
00:03:33.090 --> 00:03:36.010
The final reason is pretty simple.

91
00:03:36.010 --> 00:03:38.090
Practicing, and I mean truly practicing

92
00:03:38.090 --> 00:03:42.030
and able to prove test-driven development

93
00:03:42.030 --> 00:03:45.000
is definitely a next-level skill set.

94
00:03:45.000 --> 00:03:46.080
It's a good thing to have on your resume

95
00:03:46.080 --> 00:03:48.050
to help you stand out in a crowd

96
00:03:48.050 --> 00:03:50.050
of similar job candidates

97
00:03:50.050 --> 00:03:53.040
that didn't take the time to call this out on a resume

98
00:03:53.040 --> 00:03:56.090
or didn't even take the time to personally adopt

99
00:03:56.090 --> 00:03:59.050
test-driven habits to begin with.

100
00:03:59.050 --> 00:04:02.000
Often times, it's a team mandate

101
00:04:02.000 --> 00:04:04.040
or an important part of team culture

102
00:04:04.040 --> 00:04:06.070
to practice test-driven development.

103
00:04:06.070 --> 00:04:09.040
You want to be seen as a team fit

104
00:04:09.040 --> 00:04:11.030
by having this on your resume.

105
00:04:11.030 --> 00:04:13.050
And when you do, you're signaling

106
00:04:13.050 --> 00:04:15.090
a certain amount of discipline and leadership

107
00:04:15.090 --> 00:04:19.050
to potential hiring managers and future teammates.

108
00:04:19.050 --> 00:04:20.090
If you want to start leveling up

109
00:04:20.090 --> 00:04:22.030
your job opportunities,

110
00:04:22.030 --> 00:04:25.070
and by extension possibly your compensation,

111
00:04:25.070 --> 00:04:27.020
you may want to start with developing

112
00:04:27.020 --> 00:04:30.000
some test-driven development mastery.

113
00:04:30.000 --> 00:04:31.070
And speaking of mastery,

114
00:04:31.070 --> 00:04:34.010
it definitely takes a lot of practice

115
00:04:34.010 --> 00:04:36.000
to reach that next level.

116
00:04:36.000 --> 00:04:37.090
So, let's get started on just that.

117
00:04:37.090 --> 00:04:40.000
Time for some hands-on practice.

