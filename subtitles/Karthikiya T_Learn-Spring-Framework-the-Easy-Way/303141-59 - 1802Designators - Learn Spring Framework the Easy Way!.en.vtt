WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.440
in this video,

00:00:01.440 --> 00:00:05.660
we're going to talk about designators that can be part off a point.

00:00:05.660 --> 00:00:11.730
Could expression does it make us will help us target a specific set off joint points.

00:00:11.730 --> 00:00:19.190
And here's the one that were already a bear off execution who target the joint points that

00:00:19.190 --> 00:00:20.550
are matter executions.

00:00:20.550 --> 00:00:22.370
And here's the syntax.

00:00:22.370 --> 00:00:23.150
For the same,

00:00:23.150 --> 00:00:24.740
you would use the key,

00:00:24.740 --> 00:00:32.670
what execution and then the written type of the methods that you want to target the target

00:00:32.670 --> 00:00:37.350
type or that last name dot the name of the method.

00:00:37.350 --> 00:00:42.610
And when you specify darts in this manner,

00:00:42.610 --> 00:00:47.550
that means we're targetting methods having any number of arguments.

00:00:47.550 --> 00:00:51.250
And here is an example expression that we've been using.

00:00:51.250 --> 00:00:55.970
So what this expression means is we want to target a joint point,

00:00:55.970 --> 00:01:03.550
which is a matter execution and those methods that target can have any written type,

00:01:03.550 --> 00:01:08.450
and those methods must belong to the loan service type.

00:01:08.450 --> 00:01:15.730
Don't the method can have any name and any number of arguments?

00:01:15.730 --> 00:01:17.570
That's what this expression means.

00:01:17.570 --> 00:01:20.650
Let's mourn with the dogs designator.

00:01:20.650 --> 00:01:23.040
So by using this designator,

00:01:23.040 --> 00:01:29.350
you will be able to target joint points whose arguments are either instances off given type

00:01:29.350 --> 00:01:33.060
are with the same name of the definition.

00:01:33.060 --> 00:01:33.500
Might look,

00:01:33.500 --> 00:01:34.390
come choosing.

00:01:34.390 --> 00:01:36.600
Let's take a look at an example of the same.

00:01:36.600 --> 00:01:40.350
So I go back to my example.

00:01:40.350 --> 00:01:47.770
Let's try to use the same expression here as part of the before advise.

00:01:47.770 --> 00:01:49.630
But no,

00:01:49.630 --> 00:01:52.410
that is also make use off this ox.

00:01:52.410 --> 00:01:53.450
Does it matter?

00:01:53.450 --> 00:01:57.090
Let me just simply copy it.

00:01:57.090 --> 00:02:03.290
Has these and use it in here.

00:02:03.290 --> 00:02:08.950
All right,

00:02:08.950 --> 00:02:09.800
here we have it.

00:02:09.800 --> 00:02:16.310
So what this expression means is I want to target method executions that belonged to the

00:02:16.310 --> 00:02:17.160
loan service,

00:02:17.160 --> 00:02:21.610
and the matter would have argument.

00:02:21.610 --> 00:02:25.150
Customer I d with the exact same name.

00:02:25.150 --> 00:02:29.540
So if you go back is the exact same name.

00:02:29.540 --> 00:02:30.950
What we have in here,

00:02:30.950 --> 00:02:39.490
you're going to use the same because now we can pass this as an argument to our red wise,

00:02:39.490 --> 00:02:43.500
And this is going to be off string type.

00:02:43.500 --> 00:02:45.730
And by doing so,

00:02:45.730 --> 00:02:50.550
you're getting access to whatever the argument that is sent to this method.

00:02:50.550 --> 00:02:53.290
Well,

00:02:53.290 --> 00:02:54.750
this might sound unusual,

00:02:54.750 --> 00:03:00.480
but Ringel take care off passing this argument when you have the following designator.

00:03:00.480 --> 00:03:06.700
Let me try to print it so that we're sure that things are indeed working,

00:03:06.700 --> 00:03:16.250
so I'm just simply going to print the customer variety in this manner.

00:03:16.250 --> 00:03:21.650
All right,

00:03:21.650 --> 00:03:28.560
that's on the program and make sure we're able to receive that argument.

00:03:28.560 --> 00:03:29.950
And sure enough,

00:03:29.950 --> 00:03:38.530
whatever we're sending in here has been sent to this method and so door advice in this man

00:03:38.530 --> 00:03:38.530
.

00:03:38.530 --> 00:03:40.050
Likewise,

00:03:40.050 --> 00:03:45.840
you can also specify list off arguments that you may be having in this map that if you have

00:03:45.840 --> 00:03:47.010
more than one argument,

00:03:47.010 --> 00:03:53.540
then you would just specified those names in here and you would catch them in the same

00:03:53.540 --> 00:03:56.100
order as part of the before method.

00:03:56.100 --> 00:04:01.790
Assassin Plaza similarly can also specify the type.

00:04:01.790 --> 00:04:03.490
For example,

00:04:03.490 --> 00:04:11.690
you can say that there's a string argument that the target method receives,

00:04:11.690 --> 00:04:17.340
and now you'll just simply get access to that perimeter.

00:04:17.340 --> 00:04:21.850
Are the argument Well,

00:04:21.850 --> 00:04:26.750
not all these expressions were experimented because some of these may not be applicable in

00:04:26.750 --> 00:04:27.560
the case.

00:04:27.560 --> 00:04:32.350
Feel free to experiment with all these designators,

00:04:32.350 --> 00:04:36.440
but I'm just going to walk you through as to what each one of these designators are meant

00:04:36.440 --> 00:04:36.870
for.

00:04:36.870 --> 00:04:39.240
So,

00:04:39.240 --> 00:04:44.850
Mike was he also got this hogs with the following symbol.

00:04:44.850 --> 00:04:45.610
Well,

00:04:45.610 --> 00:04:49.450
when you have this at sign then that will have a different meaning.

00:04:49.450 --> 00:04:50.820
In this case,

00:04:50.820 --> 00:04:56.840
we want to target joint points whose arguments are annotated with the given annotation type

00:04:56.840 --> 00:04:56.840
.

00:04:56.840 --> 00:04:57.630
An example.

00:04:57.630 --> 00:04:59.350
Expression can be seen in here.

00:04:59.350 --> 00:05:03.350
Sometimes we use annotations as part of the matter argument.

00:05:03.350 --> 00:05:04.430
In that case,

00:05:04.430 --> 00:05:11.850
you can target those methods by using this designator and the annotation class name.

00:05:11.850 --> 00:05:12.500
Well,

00:05:12.500 --> 00:05:15.450
this is very rare that you would need this anyway.

00:05:15.450 --> 00:05:19.350
Similarly got at a notation.

00:05:19.350 --> 00:05:22.410
This is somewhat similar to the at ARDS,

00:05:22.410 --> 00:05:24.610
but the difference is here.

00:05:24.610 --> 00:05:26.150
He won't specify the type,

00:05:26.150 --> 00:05:33.100
but you would specify the annotation itself and you would be able to target those methods.

00:05:33.100 --> 00:05:36.100
The designators,

00:05:36.100 --> 00:05:39.190
this and target are a little tricky,

00:05:39.190 --> 00:05:42.450
and it requires some understanding on the proxy objects and all.

00:05:42.450 --> 00:05:44.260
But to put it simple,

00:05:44.260 --> 00:05:49.590
when you have a class that uses an interface and you want to target all the classes that

00:05:49.590 --> 00:05:50.970
implement that interface,

00:05:50.970 --> 00:05:54.950
then you have to use the target designator.

00:05:54.950 --> 00:05:58.630
So here's expression for the same here.

00:05:58.630 --> 00:06:05.480
We're trying to target all the classes that implement this interface or,

00:06:05.480 --> 00:06:13.760
if you want to directly point to a class than you would use this key would and here is

00:06:13.760 --> 00:06:14.990
example of the same.

00:06:14.990 --> 00:06:16.880
Well,

00:06:16.880 --> 00:06:17.490
to be honest,

00:06:17.490 --> 00:06:18.180
we don't be.

00:06:18.180 --> 00:06:23.880
We won't be using majority off these designators and real world applications.

00:06:23.880 --> 00:06:25.390
Most of the time,

00:06:25.390 --> 00:06:29.300
we would only target matter execution as the joint points.

00:06:29.300 --> 00:06:33.340
But these are just for your information,

00:06:33.340 --> 00:06:35.480
just for the completeness off this course,

00:06:35.480 --> 00:06:39.120
and then we have at Target.

00:06:39.120 --> 00:06:40.440
And as you would guess,

00:06:40.440 --> 00:06:42.430
this has something to do with annotations.

00:06:42.430 --> 00:06:49.350
So this time we're trying to target the classes that used the following annotation type,

00:06:49.350 --> 00:06:54.950
and this is most often applicable in case offspring and Missy.

00:06:54.950 --> 00:06:57.820
And similarly,

00:06:57.820 --> 00:07:00.150
we have at annotation,

00:07:00.150 --> 00:07:03.400
and I believe we had all the record it.

00:07:03.400 --> 00:07:07.710
So this is duplicate.

00:07:07.710 --> 00:07:09.550
Let me just get it off this from here,

00:07:09.550 --> 00:07:13.750
okay?

00:07:13.750 --> 00:07:22.250
And then we have this Doesn't matter written.

00:07:22.250 --> 00:07:27.850
And this would help you target joint points that belonged to a particular package.

00:07:27.850 --> 00:07:29.190
Our type.

00:07:29.190 --> 00:07:30.110
An example.

00:07:30.110 --> 00:07:31.750
Expression can be seen in here.

00:07:31.750 --> 00:07:34.250
Something I want to talk.

00:07:34.250 --> 00:07:36.100
Get all the loans of his class,

00:07:36.100 --> 00:07:40.810
matt retributions and olders methods,

00:07:40.810 --> 00:07:45.450
or the classes must belong to this package.

00:07:45.450 --> 00:07:48.450
Arc dot company Jassim Plaza.

00:07:48.450 --> 00:07:50.580
Holy.

00:07:50.580 --> 00:07:52.350
That's about it on designators

