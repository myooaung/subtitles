WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.230
in this way,

00:00:01.230 --> 00:00:05.010
they were going to try to understand the terms lazy loading and eager loading,

00:00:05.010 --> 00:00:08.950
Whatever the example that were talked about in our previous video,

00:00:08.950 --> 00:00:16.870
his tone does lazy loading because the instances created when we need it only when we

00:00:16.870 --> 00:00:20.180
request for an instance would then stands be created,

00:00:20.180 --> 00:00:21.220
for example,

00:00:21.220 --> 00:00:22.530
to go to the main method.

00:00:22.530 --> 00:00:28.960
What we're doing here is we're calling this mattered gettin stance off Singleton example.

00:00:28.960 --> 00:00:34.500
And that is when the instances created not before it.

00:00:34.500 --> 00:00:36.950
This is called lazy lowering.

00:00:36.950 --> 00:00:41.470
Now we're going to design our singleton patent in such way that the instance would be

00:00:41.470 --> 00:00:42.240
created,

00:00:42.240 --> 00:00:43.650
pray or two requesting for it.

00:00:43.650 --> 00:00:46.550
And here is example of the same.

00:00:46.550 --> 00:00:48.250
And as you would guess,

00:00:48.250 --> 00:00:49.200
our instance,

00:00:49.200 --> 00:00:55.680
creation code would go inside s static block and the static block would be executed when

00:00:55.680 --> 00:00:57.780
the class gets loaded into the memory.

00:00:57.780 --> 00:01:00.980
And every time we request for an instance,

00:01:00.980 --> 00:01:06.850
we're not going to create an instance but rather were just simply returning an instance as

00:01:06.850 --> 00:01:07.370
is.

00:01:07.370 --> 00:01:16.160
And here are the set off statements where were using that instance Sassen Plaza.

00:01:16.160 --> 00:01:22.680
So that's the basic difference between lazy loading and eager loading And if you run the

00:01:22.680 --> 00:01:23.350
program,

00:01:23.350 --> 00:01:24.650
everything works.

00:01:24.650 --> 00:01:25.140
Spell.

00:01:25.140 --> 00:01:30.750
I'm going to make this project available for you to download so that they can take a look

00:01:30.750 --> 00:01:31.050
at it.

00:01:31.050 --> 00:01:31.870
Now,

00:01:31.870 --> 00:01:33.080
from our next video,

00:01:33.080 --> 00:01:37.660
you will comfortably understand What is a singleton in spring.

00:01:37.660 --> 00:01:40.350
I'll see you in my next video.

