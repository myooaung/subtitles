WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.290
in this video,

00:00:01.290 --> 00:00:03.470
we're going to talk about factory beans,

00:00:03.470 --> 00:00:09.600
so I have no introduced A new class file which is responsible for generating the arm dips

00:00:09.600 --> 00:00:10.800
off Silver Manager.

00:00:10.800 --> 00:00:14.460
And that's why it's called as Silver manager Factory Bean.

00:00:14.460 --> 00:00:17.780
And in order to create this class,

00:00:17.780 --> 00:00:21.450
it must implement the factory being interface,

00:00:21.450 --> 00:00:23.570
which comes with a couple off methods.

00:00:23.570 --> 00:00:26.150
One is the get object type,

00:00:26.150 --> 00:00:32.050
which was just written the type off object and the other is get object.

00:00:32.050 --> 00:00:40.910
So here you would provide a piece off code that will ultimately return the desired object.

00:00:40.910 --> 00:00:42.110
In this case,

00:00:42.110 --> 00:00:44.730
depending on the validity off the FBI key,

00:00:44.730 --> 00:00:47.610
we're going to return the Silver Manager object.

00:00:47.610 --> 00:00:49.710
And inside this method,

00:00:49.710 --> 00:00:55.480
he's a P I key valid having to do some logic in here.

00:00:55.480 --> 00:00:56.350
Of course,

00:00:56.350 --> 00:00:59.350
it doesn't make sense to hard core values like this,

00:00:59.350 --> 00:01:03.850
but imagine that we have some cord to validate the FBI key.

00:01:03.850 --> 00:01:05.580
So in my case,

00:01:05.580 --> 00:01:10.710
if the appear key is 123 then I'm assuming that the key is valid.

00:01:10.710 --> 00:01:12.250
Otherwise it's not,

00:01:12.250 --> 00:01:18.290
in which case with little faults and while creating this object,

00:01:18.290 --> 00:01:21.600
were also passing an argument to its constructor.

00:01:21.600 --> 00:01:27.280
So here we're setting this flag restricted access accordingly.

00:01:27.280 --> 00:01:28.970
Some of the features would be enabled,

00:01:28.970 --> 00:01:31.150
and some of the features would be disabled.

00:01:31.150 --> 00:01:37.600
So the user who has purchased the license will have an exclusive access or unlimited access

00:01:37.600 --> 00:01:37.600
.

00:01:37.600 --> 00:01:38.730
Otherwise,

00:01:38.730 --> 00:01:43.070
I usable have very restricted access and from,

00:01:43.070 --> 00:01:44.150
or conflict file.

00:01:44.150 --> 00:01:48.980
I'm pointing to the server manager factor being class,

00:01:48.980 --> 00:01:57.160
and then I'm passing this argument to its constructor in this case and passing 321 So that

00:01:57.160 --> 00:01:58.560
means R A.

00:01:58.560 --> 00:02:00.460
P I key should be invalid.

00:02:00.460 --> 00:02:07.550
And it is the constructor that takes the perimeter.

00:02:07.550 --> 00:02:09.200
It's as simple as that.

00:02:09.200 --> 00:02:15.780
Let's on the program and they use a must see restrictive axis.

00:02:15.780 --> 00:02:17.940
Looks like we have a natural here.

00:02:17.940 --> 00:02:19.450
Let's take a look at what it is.

00:02:19.450 --> 00:02:22.150
Not sure Why is that happening?

00:02:22.150 --> 00:02:28.350
It's on the program and see if things will work and it walked.

00:02:28.350 --> 00:02:36.970
That's trained the FBI key toe 123 and the user must have unlimited access.

00:02:36.970 --> 00:02:39.130
Sure enough,

00:02:39.130 --> 00:02:43.080
it worked from the Java conflict file.

00:02:43.080 --> 00:02:45.990
Things are again pretty straightforward.

00:02:45.990 --> 00:02:49.050
You just try to create an instance or factory object,

00:02:49.050 --> 00:02:52.950
bypassing some value to its constructor,

00:02:52.950 --> 00:03:02.050
and then you just simply return an object off the server manager by calling the get object

00:03:02.050 --> 00:03:11.030
method off factory being as simple as that pretty straightforward that switch to Java

00:03:11.030 --> 00:03:19.850
Kontic and run our program and it walked as well.

00:03:19.850 --> 00:03:25.850
But the key thing to note here is we no longer have the instance Station called in here

00:03:25.850 --> 00:03:29.410
that has been moved to a new class,

00:03:29.410 --> 00:03:35.110
which is solely responsible for creating the instance off the server manager and Spring

00:03:35.110 --> 00:03:37.130
won't create the server manager object,

00:03:37.130 --> 00:03:43.200
but it is going to request this factor being to create an instance off several manager by

00:03:43.200 --> 00:03:44.950
calling to get object method.

00:03:44.950 --> 00:03:50.750
And that's why you have tow implement the factor being only Denville things work.

00:03:50.750 --> 00:03:53.070
And moreover,

00:03:53.070 --> 00:03:54.970
these methods are not static meant.

00:03:54.970 --> 00:04:00.350
That's anymore because now we're able to create an instance off factor being and call its

00:04:00.350 --> 00:04:00.950
methods.

00:04:00.950 --> 00:04:04.290
All right,

00:04:04.290 --> 00:04:05.290
that's about it.

