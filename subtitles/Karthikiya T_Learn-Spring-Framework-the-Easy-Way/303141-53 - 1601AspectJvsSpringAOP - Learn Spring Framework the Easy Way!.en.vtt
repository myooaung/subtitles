WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.220
in this week.

00:00:05.220 --> 00:00:07.840
We're going to quickly understand what is Aspect J.

00:00:07.840 --> 00:00:09.130
And we'll understand.

00:00:09.130 --> 00:00:15.570
Why is it the better option compared to spring Able P Aspect J is an MLP extension created

00:00:15.570 --> 00:00:16.350
by Park,

00:00:16.350 --> 00:00:17.500
which is a company,

00:00:17.500 --> 00:00:22.880
And the main motive is to promote the modular ization off crosscutting concerns such as

00:00:22.880 --> 00:00:23.830
logging,

00:00:23.830 --> 00:00:25.270
exception handling security,

00:00:25.270 --> 00:00:26.050
etcetera.

00:00:26.050 --> 00:00:32.450
What this means is Aspect JSA Project specifically tuned to address the problem with the

00:00:32.450 --> 00:00:33.890
crosscutting concerns.

00:00:33.890 --> 00:00:34.950
And in fact,

00:00:34.950 --> 00:00:41.030
Spring has inherited a lot of features from Aspect your project to create their own a pope

00:00:41.030 --> 00:00:42.150
implementation.

00:00:42.150 --> 00:00:45.450
So since you're comfortable with spring Evo P by now,

00:00:45.450 --> 00:00:49.050
you should be able to easily understand aspect J as well.

00:00:49.050 --> 00:00:53.460
Let's take a look at some of the pros and cons off both in spring.

00:00:53.460 --> 00:00:56.990
The envelop the reading process happens during the run time.

00:00:56.990 --> 00:01:02.570
That means the process of applying the aspect on the target object happens during the run

00:01:02.570 --> 00:01:03.100
time,

00:01:03.100 --> 00:01:08.650
as I had already mentioned and for that very reason it might cost some applications

00:01:08.650 --> 00:01:09.660
performance.

00:01:09.660 --> 00:01:16.080
This might be a downside combat toe aspect J and as I had mentioned before spring users

00:01:16.080 --> 00:01:22.560
proxy Best Able P it's going to create a proxy object isn't the dynamic proxy mechanism and

00:01:22.560 --> 00:01:26.210
as a downside off that approach were restricted to only matter.

00:01:26.210 --> 00:01:27.750
Execution joint points.

00:01:27.750 --> 00:01:28.610
For example,

00:01:28.610 --> 00:01:32.900
if you'd like to apply aspect during constructor execution,

00:01:32.900 --> 00:01:36.120
that cannot be accomplished with spring Able P.

00:01:36.120 --> 00:01:40.950
And that's exactly where aspect would shine in case off aspect J.

00:01:40.950 --> 00:01:45.950
The leaving process happens during the compile time and less during the run time,

00:01:45.950 --> 00:01:52.100
and obviously that would have less impact on the applications performance aspect developed

00:01:52.100 --> 00:01:52.100
.

00:01:52.100 --> 00:01:58.310
So give us more fine grain control on the joint point like constructor executions or feel

00:01:58.310 --> 00:01:59.050
change events,

00:01:59.050 --> 00:01:59.850
etcetera.

00:01:59.850 --> 00:02:01.380
And moreover,

00:02:01.380 --> 00:02:05.250
aspect it promotes and petition driven configuration.

00:02:05.250 --> 00:02:08.020
And we know the benefits off using annotations.

00:02:08.020 --> 00:02:12.740
It's going to decrease the complexity off the code and increase the readability off the

00:02:12.740 --> 00:02:13.220
court.

00:02:13.220 --> 00:02:15.990
And this is something that you cannot do well with.

00:02:15.990 --> 00:02:18.650
Spring able P That being said,

00:02:18.650 --> 00:02:23.750
sometimes it might be a better option to go with spring elope instead off aspect J,

00:02:23.750 --> 00:02:27.200
especially if you're not looking for the features that aspect J provides,

00:02:27.200 --> 00:02:29.230
then you could just simply go with the springs.

00:02:29.230 --> 00:02:30.170
Aerial P.

00:02:30.170 --> 00:02:31.210
In fact,

00:02:31.210 --> 00:02:33.110
aspect is an open source project.

00:02:33.110 --> 00:02:37.650
Spring developers can easily make the aspect the library as part of the spring framework,

00:02:37.650 --> 00:02:40.170
but they didn't do so for a reason.

00:02:40.170 --> 00:02:45.490
There are a lot of products out there which are still using the springs Able p and not

00:02:45.490 --> 00:02:47.910
needed a project like Asper J.

00:02:47.910 --> 00:02:51.500
But since majority of the projects uses Aspect J,

00:02:51.500 --> 00:02:56.000
we're going to be focusing on Aspect J for the rest off our course,

00:02:56.000 --> 00:02:57.590
I will see assume.

