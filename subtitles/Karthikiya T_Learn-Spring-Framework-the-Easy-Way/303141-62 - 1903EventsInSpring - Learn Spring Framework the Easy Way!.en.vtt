WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:08.570
it's time to take a look at an example off eventing in spring framework.

00:00:08.570 --> 00:00:10.370
And as you would expect,

00:00:10.370 --> 00:00:13.730
these are the basic things required for us to perform.

00:00:13.730 --> 00:00:16.890
Eventing in spring are anywhere else.

00:00:16.890 --> 00:00:22.350
You would need the evened itself and in spring this has to be a class that extends

00:00:22.350 --> 00:00:23.410
application event,

00:00:23.410 --> 00:00:27.250
and we need a publisher as well,

00:00:27.250 --> 00:00:31.570
which is essentially a class from there.

00:00:31.570 --> 00:00:34.000
We would like to publish this event,

00:00:34.000 --> 00:00:39.350
and in order to do the same or in order to publish the event,

00:00:39.350 --> 00:00:45.420
we need the publisher object and that we can get by implementing application.

00:00:45.420 --> 00:00:47.980
He went published Rivere interface,

00:00:47.980 --> 00:00:52.650
and we need bunch off listeners who want to listen to that event.

00:00:52.650 --> 00:00:58.620
And for that we have to implement the application listener interface.

00:00:58.620 --> 00:01:00.100
But fortunately,

00:01:00.100 --> 00:01:02.230
with the recent versions Offspring framework,

00:01:02.230 --> 00:01:05.160
you don't have to deal with these classes and interfaces.

00:01:05.160 --> 00:01:07.340
Things have been kept pretty simple.

00:01:07.340 --> 00:01:10.810
Now this even been here is just a simple,

00:01:10.810 --> 00:01:11.550
poor Joe,

00:01:11.550 --> 00:01:19.150
and we can use auto wide annotation to inject the object the publisher object.

00:01:19.150 --> 00:01:23.200
And for listener who can just simply use an annotation,

00:01:23.200 --> 00:01:26.550
let's take a look an example so that you'll understand better.

00:01:26.550 --> 00:01:33.810
So what I have here is I'm trying to take the same example as previous,

00:01:33.810 --> 00:01:40.470
we're going to have a transaction failed event and for that have created an event which is

00:01:40.470 --> 00:01:40.900
a simple,

00:01:40.900 --> 00:01:41.650
poor Joe,

00:01:41.650 --> 00:01:43.700
just as you're seeing in here.

00:01:43.700 --> 00:01:45.120
Very simple.

00:01:45.120 --> 00:01:45.780
Poggio.

00:01:45.780 --> 00:01:49.850
No classes or interfaces implemented are extended.

00:01:49.850 --> 00:01:56.680
And then we're going to have the publisher cord now assume that we're having some kind off

00:01:56.680 --> 00:02:01.950
a code in here where we're trying to send funds to another account.

00:02:01.950 --> 00:02:06.200
And in case if there is a failure off the transaction,

00:02:06.200 --> 00:02:10.650
then we wanted to call this method publish custom event,

00:02:10.650 --> 00:02:14.350
and we're going to use this object,

00:02:14.350 --> 00:02:19.810
which is what a wired publisher that publishes event.

00:02:19.810 --> 00:02:26.760
And you would send an instance how this event and finally will have a bunch off listeners

00:02:26.760 --> 00:02:31.620
who want to listen to that event and inside our listener classes,

00:02:31.620 --> 00:02:34.660
all I'm trying to do is to use the sanitation,

00:02:34.660 --> 00:02:36.190
even listener,

00:02:36.190 --> 00:02:40.100
and we also need to mention what is even that you're expecting.

00:02:40.100 --> 00:02:41.570
In our case,

00:02:41.570 --> 00:02:43.690
it's transaction failed custom.

00:02:43.690 --> 00:02:51.150
Even the one would you have just created and you would have some kind of a handling god.

00:02:51.150 --> 00:02:52.710
Similarly,

00:02:52.710 --> 00:02:53.800
we have another event,

00:02:53.800 --> 00:02:55.960
listener for email as well.

00:02:55.960 --> 00:02:57.900
And in future,

00:02:57.900 --> 00:03:00.850
if you need to add another even handling cord,

00:03:00.850 --> 00:03:04.870
you don't have to make any changes in the publisher class.

00:03:04.870 --> 00:03:11.010
All you have to do is introduce that handling cord and then add that bean as part of the

00:03:11.010 --> 00:03:11.850
conflict file.

00:03:11.850 --> 00:03:15.820
And all this is somewhat similar to the Observer designed Patton.

00:03:15.820 --> 00:03:19.850
Let's try to run the program and see the result,

00:03:19.850 --> 00:03:24.340
and the court in here is pretty easy to understand.

00:03:24.340 --> 00:03:34.060
What I'm trying to do is I'm trying to just call this publish custom event method right

00:03:34.060 --> 00:03:34.680
from here,

00:03:34.680 --> 00:03:41.360
and ultimately we'll see the transaction failed.

00:03:41.360 --> 00:03:44.890
Event that's on the program and see the result,

00:03:44.890 --> 00:03:49.240
and there it is,

00:03:49.240 --> 00:03:50.410
ignored the first line.

00:03:50.410 --> 00:03:52.150
We're going to talk about it in a while,

00:03:52.150 --> 00:03:55.750
but here is what we're looking for.

00:03:55.750 --> 00:03:56.540
All right,

00:03:56.540 --> 00:03:57.450
I'll see you soon

