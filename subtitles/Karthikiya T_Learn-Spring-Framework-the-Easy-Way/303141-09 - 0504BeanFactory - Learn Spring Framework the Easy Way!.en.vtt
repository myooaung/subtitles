WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.970
in this video,

00:00:00.970 --> 00:00:05.650
we're going to talk about being factory so far in our examples,

00:00:05.650 --> 00:00:10.920
we had used application context to load the IBC Container and it's beans.

00:00:10.920 --> 00:00:13.490
But there is something called a bean factory,

00:00:13.490 --> 00:00:17.590
which you can think off it as a predecessor off application context.

00:00:17.590 --> 00:00:17.980
Or,

00:00:17.980 --> 00:00:18.850
in other words,

00:00:18.850 --> 00:00:22.250
you can think off it as a previous washing off application context,

00:00:22.250 --> 00:00:25.150
which is lightweight with less a number of features.

00:00:25.150 --> 00:00:27.620
And in order to define the being factory,

00:00:27.620 --> 00:00:30.300
you have to include a couple off instructions.

00:00:30.300 --> 00:00:32.670
One is to create the resource object,

00:00:32.670 --> 00:00:36.430
and the other is to create the being factor itself by passing.

00:00:36.430 --> 00:00:39.150
That resource has an argument to its constructor.

00:00:39.150 --> 00:00:40.050
Now,

00:00:40.050 --> 00:00:43.570
just as we have multiple variants off application context,

00:00:43.570 --> 00:00:44.690
depending on prom,

00:00:44.690 --> 00:00:46.930
bear the conflict families to be read.

00:00:46.930 --> 00:00:50.910
We do have the same stuff in case off being factory as well,

00:00:50.910 --> 00:00:53.710
so you would create the resource object accordingly,

00:00:53.710 --> 00:00:55.540
and you would pass it as an argument.

00:00:55.540 --> 00:00:56.810
Toby in factory.

00:00:56.810 --> 00:00:57.520
In here,

00:00:57.520 --> 00:01:00.450
we have a couple of examples to demonstrate the same.

00:01:00.450 --> 00:01:04.220
If you'd like to read the XML file from the file system,

00:01:04.220 --> 00:01:09.430
you have to create the falling resource and then you would feed that as an argument toe

00:01:09.430 --> 00:01:10.810
being factor constructor.

00:01:10.810 --> 00:01:12.100
On the other hand,

00:01:12.100 --> 00:01:15.390
if you'd like to read XML file from the class part,

00:01:15.390 --> 00:01:19.550
then you would use a class path resource to do that job.

00:01:19.550 --> 00:01:20.290
Likewise,

00:01:20.290 --> 00:01:22.750
we have many different ways to define the bean factory.

00:01:22.750 --> 00:01:25.770
You have to choose the one that sells your purpose.

00:01:25.770 --> 00:01:29.060
But if you're using being factory or application context,

00:01:29.060 --> 00:01:32.740
you have to sacrifice a lot of features that spring offers.

00:01:32.740 --> 00:01:34.050
For example,

00:01:34.050 --> 00:01:37.150
you're limited to using only XML conflict files,

00:01:37.150 --> 00:01:43.270
and you cannot use any annotation based conflagrations if you're using being factory now.

00:01:43.270 --> 00:01:44.870
This is a serious problem,

00:01:44.870 --> 00:01:49.310
especially if you want to leverage the Springs auto wiring feature,

00:01:49.310 --> 00:01:51.450
which will talk about incoming chapters.

00:01:51.450 --> 00:01:52.290
Also,

00:01:52.290 --> 00:01:55.920
being factory would be a problem for internationalisation,

00:01:55.920 --> 00:01:56.910
eventing,

00:01:56.910 --> 00:01:57.750
etcetera.

00:01:57.750 --> 00:01:58.300
Now,

00:01:58.300 --> 00:02:00.030
don't worry about all these stones.

00:02:00.030 --> 00:02:03.050
We're going to explore all of them incoming chapters.

00:02:03.050 --> 00:02:04.390
But clearly,

00:02:04.390 --> 00:02:10.860
application context is of a better option combat toe being factory as it supports a lot off

00:02:10.860 --> 00:02:13.420
features which being factory doesn't.

00:02:13.420 --> 00:02:17.750
But there could be some cases were being factory might be a better option.

00:02:17.750 --> 00:02:18.690
For example,

00:02:18.690 --> 00:02:21.320
say that you're developing an application for a mobile device.

00:02:21.320 --> 00:02:22.520
And at the same time,

00:02:22.520 --> 00:02:26.090
you realize that you don't need all the features off application context.

00:02:26.090 --> 00:02:32.060
Then you can use being factory because it will offer better performance at the cost off

00:02:32.060 --> 00:02:32.850
features.

00:02:32.850 --> 00:02:33.840
All right.

00:02:33.840 --> 00:02:34.870
Hope it makes sense.

00:02:34.870 --> 00:02:35.880
See you zoom.

