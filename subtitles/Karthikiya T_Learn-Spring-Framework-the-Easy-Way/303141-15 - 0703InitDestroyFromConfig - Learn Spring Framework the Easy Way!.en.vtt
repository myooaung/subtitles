WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.960
okay,

00:00:00.960 --> 00:00:05.900
We have seen how we can make use off in it and destroy methods during the last cycle off a

00:00:05.900 --> 00:00:09.950
bean by using some spring specific interfaces.

00:00:09.950 --> 00:00:11.780
But we have one.

00:00:11.780 --> 00:00:14.320
Seed is drawback with this approach.

00:00:14.320 --> 00:00:19.850
Is that our code or are bean is tightly coupled with spring framework,

00:00:19.850 --> 00:00:25.350
and that may actually destroy the very purpose why spring is even existing.

00:00:25.350 --> 00:00:32.350
So we have an alternate away to deal with the same instruct using these interfaces in here

00:00:32.350 --> 00:00:32.350
.

00:00:32.350 --> 00:00:38.490
We'll just simply right or methods,

00:00:38.490 --> 00:00:42.290
and you can give any name off your choice.

00:00:42.290 --> 00:00:45.010
Let me make it toe in it.

00:00:45.010 --> 00:00:45.880
And then,

00:00:45.880 --> 00:00:47.450
from our convict files,

00:00:47.450 --> 00:00:50.850
we can introduce some additional attributes.

00:00:50.850 --> 00:00:53.110
Something like this.

00:00:53.110 --> 00:00:55.710
We're going to introduce these two attributes,

00:00:55.710 --> 00:00:59.130
and it mattered and destroy method,

00:00:59.130 --> 00:01:03.350
and they're just point to the respect to methods reciting in the bean.

00:01:03.350 --> 00:01:05.700
And that's all there is to it.

00:01:05.700 --> 00:01:08.780
It's as good as our previous example,

00:01:08.780 --> 00:01:15.380
except that we're not tightly coupled to spring specific interfaces.

00:01:15.380 --> 00:01:17.190
It's as simple as that.

00:01:17.190 --> 00:01:21.450
And if you want to do the same from the Java conflict file,

00:01:21.450 --> 00:01:24.250
it's simple as Bill just happen to Jews.

00:01:24.250 --> 00:01:25.450
The falling attributes,

00:01:25.450 --> 00:01:34.040
just as you're seeing here and let's go to our main program and is the Java conflict to run

00:01:34.040 --> 00:01:38.660
the program and this will work as well.

00:01:38.660 --> 00:01:41.070
And Justin,

00:01:41.070 --> 00:01:45.750
Because if you're okay with the tight coupling and you introduce those interfaces in here,

00:01:45.750 --> 00:01:50.450
then the following is a priority.

00:01:50.450 --> 00:01:56.350
If you've introduced all these methods like a post construct annotated method,

00:01:56.350 --> 00:02:03.450
the after property set method is in the spring interfaces and then it method as well.

00:02:03.450 --> 00:02:07.130
Then spring will call these methods in the falling order.

00:02:07.130 --> 00:02:13.150
Forced it would call the method annotated with post construct and then after property set.

00:02:13.150 --> 00:02:15.240
And then they innit,

00:02:15.240 --> 00:02:17.850
method that to define in the conflict file.

00:02:17.850 --> 00:02:19.840
Just letting you know in Gaza.

00:02:19.840 --> 00:02:20.750
Feel curious.

00:02:20.750 --> 00:02:23.080
Hold it.

00:02:23.080 --> 00:02:24.750
That's about it In this video,

00:02:24.750 --> 00:02:26.190
I will see you soon.

