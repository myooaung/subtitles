WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:07.850
If you don't follow proper naming conventions for your editor classes,

00:00:07.850 --> 00:00:10.550
then spring will not be able to recognize them.

00:00:10.550 --> 00:00:15.780
But that doesn't mean that you don't have freedom to give your own name.

00:00:15.780 --> 00:00:21.340
You can give whatever the name off your choice as long as you let spring know about the

00:00:21.340 --> 00:00:21.950
change.

00:00:21.950 --> 00:00:28.850
So how do we express this to spring about the change in name Wellspring providers a special

00:00:28.850 --> 00:00:31.520
class specifically for this purpose.

00:00:31.520 --> 00:00:38.050
And that class is the custom editor configure.

00:00:38.050 --> 00:00:45.390
So this is the class that will help us create the link between the server conflict and its

00:00:45.390 --> 00:00:46.050
editor.

00:00:46.050 --> 00:00:48.650
And in order to do that,

00:00:48.650 --> 00:00:54.150
you have to populate a field that belonged to the customer editor configure.

00:00:54.150 --> 00:00:57.730
And that field is the custom editors,

00:00:57.730 --> 00:01:00.600
which is basically going to accept a map.

00:01:00.600 --> 00:01:06.310
So we have to inject the map to this class,

00:01:06.310 --> 00:01:08.620
and in this case,

00:01:08.620 --> 00:01:14.270
we're making use off the center injection to inject the map into this property.

00:01:14.270 --> 00:01:14.970
Sassen,

00:01:14.970 --> 00:01:21.830
Blauser and the map would have key value pairs basically an entry,

00:01:21.830 --> 00:01:28.640
and each entry would have information about the destination object and its corresponding

00:01:28.640 --> 00:01:29.350
editor,

00:01:29.350 --> 00:01:31.660
Tassan Blezard.

00:01:31.660 --> 00:01:37.870
So in here as part off key This is our destination,

00:01:37.870 --> 00:01:44.760
object class and then have also provided the value that basically points to the editor

00:01:44.760 --> 00:01:45.390
class.

00:01:45.390 --> 00:01:47.450
And that's all there is to it.

00:01:47.450 --> 00:01:51.140
Things will work pretty smooth without any problem,

00:01:51.140 --> 00:01:51.960
no matter what.

00:01:51.960 --> 00:01:54.200
Name the trig you to your editor class.

00:01:54.200 --> 00:01:57.850
Now this has worked.

00:01:57.850 --> 00:02:02.870
But we have one problem with this confident class.

00:02:02.870 --> 00:02:05.480
Or more specifically,

00:02:05.480 --> 00:02:06.470
with discussed,

00:02:06.470 --> 00:02:08.170
um editors Property.

00:02:08.170 --> 00:02:09.480
The problem is,

00:02:09.480 --> 00:02:12.750
if you have a parametric constructor in your editor class,

00:02:12.750 --> 00:02:15.170
then this technique may not work.

00:02:15.170 --> 00:02:16.450
For example,

00:02:16.450 --> 00:02:23.800
inside our civil Conflict editor I'm now going to introduce a para mi tries constructor.

00:02:23.800 --> 00:02:26.050
And in our example,

00:02:26.050 --> 00:02:32.750
let's say that I wanted to upend some kind off a secure string to the password,

00:02:32.750 --> 00:02:37.530
and that's what I'm trying to do in here.

00:02:37.530 --> 00:02:42.450
I want to be able to inject that secure string into the custom,

00:02:42.450 --> 00:02:43.140
complicate it,

00:02:43.140 --> 00:02:43.690
Rex,

00:02:43.690 --> 00:02:49.270
and then I'll be able to happen that string along with the password.

00:02:49.270 --> 00:02:50.550
So no,

00:02:50.550 --> 00:02:54.550
With the way I configured this editor in here,

00:02:54.550 --> 00:02:59.150
I cannot really pass an argument to the constructor,

00:02:59.150 --> 00:03:07.240
and this is actually going to throw an exception because we have to have a default

00:03:07.240 --> 00:03:08.150
constructor.

00:03:08.150 --> 00:03:12.600
And when you don't have any constructor like we have before.

00:03:12.600 --> 00:03:18.250
That means a default constructors already present and so wouldn't see any exceptions.

00:03:18.250 --> 00:03:19.760
So no.

00:03:19.760 --> 00:03:22.650
In order for this to work,

00:03:22.650 --> 00:03:28.100
we have to introduce a default constructor without any arguments.

00:03:28.100 --> 00:03:32.850
This will get our program working.

00:03:32.850 --> 00:03:34.340
But still,

00:03:34.340 --> 00:03:38.050
we won't be able to inject the argument.

00:03:38.050 --> 00:03:41.550
So in our next week,

00:03:41.550 --> 00:03:44.150
we're going to see how to solve this problem.

00:03:44.150 --> 00:03:45.950
I will see you soon.

