WEBVTT
1
00:00:04.110 --> 00:00:07.030
Spring Boot Actuator provides health checkups,

2
00:00:07.030 --> 00:00:12.890
auditing, metrics gathering, and HTTP tracing by exposing various

3
00:00:12.890 --> 00:00:17.390
HTTP or JMX endpoints you can interact with.

4
00:00:17.390 --> 00:00:20.920
The simplest way to enable of these features is to add a dependency

5
00:00:20.920 --> 00:00:24.990
in the POM file for spring‑boot‑starter‑actuator.

6
00:00:24.990 --> 00:00:30.200
Let's see the Actuator endpoints in action.

7
00:00:30.200 --> 00:00:33.740
Let's look at enabling Actuator. I've opened the code for

8
00:00:33.740 --> 00:00:37.610
module 8 and navigated to the Maven POM file.

9
00:00:37.610 --> 00:00:40.190
Let's take a look at that.

10
00:00:40.190 --> 00:00:46.320
The dependency that we need for the Actuator is found at the very bottom on

11
00:00:46.320 --> 00:00:52.250
lines 54 through 57, and it is the spring‑boot‑starter‑actuator.

12
00:00:52.250 --> 00:00:54.060
When we add this dependency,

13
00:00:54.060 --> 00:00:57.830
we automatically get a list of useful endpoints that help

14
00:00:57.830 --> 00:01:00.320
monitor and manage the application.

15
00:01:00.320 --> 00:01:05.930
I've deployed the application, so let's take a look at pulling up this endpoint.

16
00:01:05.930 --> 00:01:11.840
So the endpoint is localhost:8080/actuator. And this shows a list of all of

17
00:01:11.840 --> 00:01:16.380
the available endpoints via Actuator, and there are several.

18
00:01:16.380 --> 00:01:19.340
Let's look at these endpoints in more detail.

19
00:01:19.340 --> 00:01:22.010
Health is enabled.

20
00:01:22.010 --> 00:01:26.030
Notice it returns the status of UP, so health provides basic

21
00:01:26.030 --> 00:01:32.520
information about the application's health.

22
00:01:32.520 --> 00:01:34.540
There's also actuator/info.

23
00:01:34.540 --> 00:01:36.510
This is enabled by default.

24
00:01:36.510 --> 00:01:38.750
It displays general information about your

25
00:01:38.750 --> 00:01:42.370
application obtained from build files.

26
00:01:42.370 --> 00:01:45.680
There are loggers, metrics, and mappings.

27
00:01:45.680 --> 00:01:48.730
Since endpoints may contain sensitive information,

28
00:01:48.730 --> 00:01:51.440
most of them are turned off by default,

29
00:01:51.440 --> 00:01:56.450
and I did turn them on using the applications.properties file, and there's a

30
00:01:56.450 --> 00:02:02.278
setting here on line 9, management.endpoints.web.exposure.include. So here I

31
00:02:02.278 --> 00:02:05.348
listed the list of endpoints to include info,

32
00:02:05.348 --> 00:02:08.838
health, metrics, loggers, beans, and mappings.

33
00:02:08.838 --> 00:02:10.688
So let's go back.

34
00:02:10.688 --> 00:02:14.188
There's also one called metrics. So this endpoint shows

35
00:02:14.188 --> 00:02:18.458
several useful metrics, contains information like the JVM

36
00:02:18.458 --> 00:02:24.208
memory used, system CPU usage, open files, and more.

37
00:02:24.208 --> 00:02:31.908
And so, you can pick one of these and obtain more detail about it.

38
00:02:31.908 --> 00:02:39.778
So just at the end of this URL, you paste it and it gives you more detail.

39
00:02:39.778 --> 00:02:45.308
There's also logging information, so click on actuator/loggers,

40
00:02:45.308 --> 00:02:48.608
and it just shows the application logs and also lets

41
00:02:48.608 --> 00:02:55.000
you change the log level at runtime. It's a very neat feature.

