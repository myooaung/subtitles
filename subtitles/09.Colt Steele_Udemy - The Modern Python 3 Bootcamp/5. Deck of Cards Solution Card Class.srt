1
00:00:00,360 --> 00:00:01,590
Hey welcome back.

2
00:00:01,590 --> 00:00:07,230
So this video is a solution slash code along to the card and deck exercise.

3
00:00:07,260 --> 00:00:09,720
I'm going to start off by implementing the card class.

4
00:00:09,720 --> 00:00:16,050
It's nice and simple and short and I've actually copied the three kind of bullet points for the assignment

5
00:00:16,050 --> 00:00:18,190
that have to do with the card class.

6
00:00:18,480 --> 00:00:19,420
So let's start there.

7
00:00:19,560 --> 00:00:22,020
I'm in a file I'm calling deck of cards.

8
00:00:22,380 --> 00:00:31,400
Save it and let's define our class class card capital C colon and then we'll do what we need.

9
00:00:31,450 --> 00:00:35,020
Let's see each instance of cards Scheppers suit and each should have a value.

10
00:00:35,040 --> 00:00:39,330
So let's define Dondre in that.

11
00:00:39,690 --> 00:00:42,720
And that's always the first thing it's going to be self.

12
00:00:42,720 --> 00:00:45,930
And then we can do suit or value first.

13
00:00:45,930 --> 00:00:47,400
It really doesn't matter.

14
00:00:47,520 --> 00:00:50,680
Let's do value and then shoot.

15
00:00:51,300 --> 00:00:56,220
And the only reason I made that decision is because most of the time when we referred to a card as human

16
00:00:56,220 --> 00:01:02,990
beings we refer to the value and then the suit the ten of hearts the ace of spades doesn't matter otherwise.

17
00:01:03,150 --> 00:01:03,710
OK.

18
00:01:03,990 --> 00:01:13,650
So we have that and we are going to do is that self-taught value to be value self that suit equals suit

19
00:01:14,100 --> 00:01:15,010
just like that.

20
00:01:15,090 --> 00:01:21,060
And we have enough now where we can actually create a card so we can do something like card and then

21
00:01:21,060 --> 00:01:28,420
we had pass in the value to be let's go with Ace and then hearts.

22
00:01:28,800 --> 00:01:29,460
Perfect.

23
00:01:29,730 --> 00:01:37,680
And then we should be able to print C and then print C dot suit and let's just start there.

24
00:01:37,680 --> 00:01:39,890
So let's execute this.

25
00:01:40,530 --> 00:01:46,920
And there we go we have this main card object this ID and then suit is hearts.

26
00:01:47,220 --> 00:01:52,450
So now all we have is this Last thing here to define a method for us.

27
00:01:52,550 --> 00:01:54,460
I never know how to say this to be honest.

28
00:01:54,480 --> 00:02:00,120
This is always a challenge for making courses things that I just never speak out loud in my developer

29
00:02:00,120 --> 00:02:04,440
life representation represent whatever it is.

30
00:02:04,440 --> 00:02:12,740
R E P R So let's define that and it should display the card value and suit like Ace of Clubs J.

31
00:02:12,750 --> 00:02:14,850
Jack of diamonds etc..

32
00:02:15,180 --> 00:02:15,960
All right.

33
00:02:15,960 --> 00:02:20,360
So that is our E.P. our self.

34
00:02:20,640 --> 00:02:23,530
And let's just return an F string.

35
00:02:24,030 --> 00:02:31,050
I should mention that if you are trying to get the test to pass that I provided for this exercise as

36
00:02:31,050 --> 00:02:38,330
of now basically January 1st 2018 Tomi's coding challenges don't support Python 3.6 which is where the

37
00:02:38,380 --> 00:02:39,660
strings are introduced.

38
00:02:39,660 --> 00:02:44,540
So you actually need to use dot format if you don't recall how you used up format.

39
00:02:44,640 --> 00:02:50,840
You can find it in one of the very very early videos but it basically looks like if we're going to do.

40
00:02:50,850 --> 00:02:58,600
Ace of hearts we put these two planks in here and then we do a duck format and then we specify self

41
00:02:58,630 --> 00:03:05,400
dot what we want first value and then self dot suit.

42
00:03:05,400 --> 00:03:06,750
So this so go there.

43
00:03:06,750 --> 00:03:08,250
This will go there.

44
00:03:08,250 --> 00:03:11,090
I prefer the string but let's just make sure this works.

45
00:03:11,100 --> 00:03:15,980
So now when I print see if we get a.

46
00:03:16,050 --> 00:03:17,220
Of hearts.

47
00:03:17,220 --> 00:03:18,090
Perfect.

48
00:03:18,150 --> 00:03:20,550
Let's do one or two more.

49
00:03:20,700 --> 00:03:28,630
Let's see to see three and let's do a ten of diamonds.

50
00:03:28,830 --> 00:03:30,470
Make that capital just be consistent.

51
00:03:30,480 --> 00:03:32,040
And then this of spades.

52
00:03:32,490 --> 00:03:33,770
And that should be king.

53
00:03:34,080 --> 00:03:35,040
All right.

54
00:03:35,040 --> 00:03:40,950
Now if you print all those great it's working.

55
00:03:40,980 --> 00:03:43,740
And that's actually the it to the card class.

56
00:03:43,860 --> 00:03:54,150
I will just duplicate this comment out the version with the format I prefer using an F string like this

57
00:03:54,790 --> 00:03:58,300
f up there of.

58
00:03:59,100 --> 00:04:02,150
And then a closing quote should be good.

59
00:04:02,150 --> 00:04:05,340
I want to mess up extra print at the end.

60
00:04:05,610 --> 00:04:07,470
Double check still works OK.

61
00:04:07,650 --> 00:04:08,310
Perfect.

62
00:04:08,310 --> 00:04:10,970
So we're done with the card class.
