WEBVTT
1
00:00:00.250 --> 00:00:04.770
They will come back the next builtin function we'll see is called reversed.

2
00:00:04.830 --> 00:00:12.810
So not reverse but reversed just like sort versus sorted and what Reversed does is it returned a reverse

3
00:00:13.020 --> 00:00:13.800
iterator.

4
00:00:13.800 --> 00:00:18.010
So it sounds like I'm getting tired of hearing the word reverse in my mind.

5
00:00:18.150 --> 00:00:21.130
Reverse the list method that we've seen already.

6
00:00:21.150 --> 00:00:25.870
This one I could have you know Nom's none's.

7
00:00:25.890 --> 00:00:29.500
OK I'll go with that one two three four.

8
00:00:29.550 --> 00:00:29.820
I do.

9
00:00:29.820 --> 00:00:31.350
None stop reverse.

10
00:00:31.350 --> 00:00:31.950
Right.

11
00:00:32.220 --> 00:00:33.030
And I look at Nunn's.

12
00:00:33.060 --> 00:00:34.080
It's been reversed.

13
00:00:34.110 --> 00:00:35.310
That is a list method.

14
00:00:35.310 --> 00:00:38.920
It doesn't in place just like sort but reversed.

15
00:00:38.970 --> 00:00:41.690
R E V E R S E D.

16
00:00:41.730 --> 00:00:42.880
You know why I just spelled it.

17
00:00:43.030 --> 00:00:44.820
Well taken an iterable collection.

18
00:00:45.000 --> 00:00:50.190
So it could be something like a string hello or could be another list.

19
00:00:50.670 --> 00:00:53.300
And actually I'll start by just showing you a list.

20
00:00:53.370 --> 00:00:59.740
I do one two three four or even Nunn's That's even simpler pass nuns.

21
00:00:59.880 --> 00:01:00.870
What does it give us.

22
00:01:00.870 --> 00:01:03.200
It's called a reverse iterator object.

23
00:01:03.210 --> 00:01:05.940
In this case a list reverse iterator object.

24
00:01:06.180 --> 00:01:12.060
It doesn't really matter if you wanted to turn it back into a list which you probably wouldn't do because

25
00:01:12.060 --> 00:01:14.170
a list already has a reverse method.

26
00:01:14.280 --> 00:01:16.470
But if you wanted to just do this.

27
00:01:16.470 --> 00:01:21.160
Also remember if you want a reverse copy of a list you can use a slice.

28
00:01:21.280 --> 00:01:28.360
But what's important and interesting about reversed is that we can use it with other things like a string.

29
00:01:28.360 --> 00:01:35.800
So if we do hello It doesn't look like much here right but we can iterate over this so I can do something

30
00:01:35.800 --> 00:01:36.010
like.

31
00:01:36.020 --> 00:01:43.190
For char in reversed hello world like this.

32
00:01:45.220 --> 00:01:54.200
And then we'll just print char and then I get Durrow Ola which is hello world in reverse.

33
00:01:54.580 --> 00:02:00.080
So if we just wanted to reverse a string like we had you know hello here.

34
00:02:00.220 --> 00:02:06.970
Remember we can use a slice on strings and we can do what is a negative one like that where it's the

35
00:02:06.970 --> 00:02:10.140
step to take to go from the beginning to the end but go backwards.

36
00:02:10.240 --> 00:02:14.530
So that will just give us a reverse string if we wanted to use reverse.

37
00:02:14.540 --> 00:02:21.930
So this is kind of fancy not fancy new goodway but complex what we could do is turn it into a list.

38
00:02:21.930 --> 00:02:29.050
So use reversed of hello right which gives us the reversed object.

39
00:02:29.100 --> 00:02:32.730
Turn it into a list like this.

40
00:02:35.090 --> 00:02:36.920
And then join it back together.

41
00:02:37.100 --> 00:02:38.830
So I'll copy this.

42
00:02:39.170 --> 00:02:47.290
To join and join on an empty string join that list have quite a journey to get there.

43
00:02:47.510 --> 00:02:54.010
I prefer the slice method but you would use reversed if you are iterating over something in reverse.

44
00:02:54.260 --> 00:03:04.760
So you could also just use it on a range so I could do for x in reversed range 0 to 10.

45
00:03:04.790 --> 00:03:10.660
Now we could just do negative 1 and that gives just the reverse already from 10 to zero negative 1.

46
00:03:10.850 --> 00:03:20.700
But if I have a range like that I can use reversed on it print x and there we go we go backwards.

47
00:03:20.720 --> 00:03:26.000
So it's a way to reverse any iterator that we want to work with if we want to iterate over something

48
00:03:26.000 --> 00:03:26.950
in reverse.

49
00:03:27.110 --> 00:03:34.660
OK so to sum it all up list reverse will reverse a list in place and it works only with lists reversed.

50
00:03:34.700 --> 00:03:38.220
The built in function will return a reversed iterator.

51
00:03:38.300 --> 00:03:41.450
So if we just want to loop through it we don't have to do anything special.

52
00:03:41.570 --> 00:03:47.420
But if we want it to be a list save it to a variable then we can cast it into a list with the list function

53
00:03:47.420 --> 00:03:51.140
like we did here or this is a crazy one or reversed a string.

54
00:03:51.260 --> 00:03:57.250
But remember we also can take advantage of slices on things like lists but not every iterator supports

55
00:03:57.250 --> 00:03:58.370
slices.

56
00:03:58.370 --> 00:04:04.070
So if there is a situation where you need something reversed whether to iterate over it in a reverse

57
00:04:04.070 --> 00:04:08.110
order or to save it to a variable you can use reversed.
