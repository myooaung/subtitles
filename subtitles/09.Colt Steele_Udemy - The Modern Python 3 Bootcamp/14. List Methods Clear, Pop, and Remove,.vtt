WEBVTT
1
00:00:00.390 --> 00:00:06.650
All right we're pushing on with more list methods we've seen so far a couple ways of adding to a list.

2
00:00:06.660 --> 00:00:08.800
Now we're going to see how to remove things.

3
00:00:08.940 --> 00:00:10.490
And there's a couple of options.

4
00:00:10.740 --> 00:00:17.850
So the simplest way and possibly the least commonly used at least in my experience is clear clear we'll

5
00:00:17.850 --> 00:00:20.520
remove all of the items in the list at once.

6
00:00:20.640 --> 00:00:25.350
No matter what's in there it doesn't discriminate just gets rid of everything.

7
00:00:25.350 --> 00:00:26.570
So here's an example.

8
00:00:26.660 --> 00:00:31.110
We have a list 1 2 three four in the first list variable first list.

9
00:00:31.140 --> 00:00:31.710
Clear.

10
00:00:31.710 --> 00:00:33.160
We don't pass in anything.

11
00:00:33.210 --> 00:00:36.680
So we need those empty parentheses in order to invoke it.

12
00:00:36.690 --> 00:00:40.010
We'll talk more about what they do and what would happen if we left them off.

13
00:00:40.110 --> 00:00:44.980
When we get to functions but just know we need the parentheses even if we don't put anything in them.

14
00:00:45.110 --> 00:00:46.780
And now we looked at first list.

15
00:00:46.920 --> 00:00:48.930
It's totally empty.

16
00:00:48.930 --> 00:00:52.060
So I have a demo demo is a bit generous.

17
00:00:52.080 --> 00:00:56.050
I have a list called items and this would be like a shopping cart.

18
00:00:56.220 --> 00:01:01.950
So you might want to if a user signs out or they want to delete everything in their shopping cart you

19
00:01:01.950 --> 00:01:06.380
could clear it all at once with items not clear.

20
00:01:06.600 --> 00:01:09.860
And if you look at items it's not gone it's just empty.

21
00:01:09.990 --> 00:01:14.170
But of course a lot of the time we don't want to remove everything from a list.

22
00:01:14.270 --> 00:01:16.740
What if we just wanted to remove a single element.

23
00:01:17.130 --> 00:01:19.930
Well one way to do that is by using POP.

24
00:01:19.980 --> 00:01:26.910
So the way that pop works is that we pass in a particular index the index at which we want to delete

25
00:01:26.940 --> 00:01:34.260
an item or if we don't pass in an index and we do empty parentheses it will remove the last item by

26
00:01:34.260 --> 00:01:36.140
default.

27
00:01:36.240 --> 00:01:41.320
So I also mentioned that it will return removes and returns will cover that in just a moment.

28
00:01:41.400 --> 00:01:47.320
But if we had our first list one two three four and we just run a pop without specifying a number.

29
00:01:47.400 --> 00:01:51.470
It removes the last item by default which is for.

30
00:01:51.520 --> 00:01:53.380
So the list looks like one to three.

31
00:01:53.380 --> 00:02:00.910
At this point then if we run pop again but this time I pass in one that is saying please remove the

32
00:02:00.910 --> 00:02:02.850
item at the index of 1.

33
00:02:03.310 --> 00:02:07.100
So that would be 0 1 which means 2.

34
00:02:07.420 --> 00:02:09.240
So let's take a look at some code.

35
00:02:09.730 --> 00:02:11.460
Let's rerun items here.

36
00:02:11.680 --> 00:02:19.390
So I have this items list and if I just run items that pop just like this you can see that it returns

37
00:02:19.420 --> 00:02:20.200
cat food.

38
00:02:20.200 --> 00:02:26.080
So it takes the item off it takes cat food off it if you look at items it now is shorter doesn't have

39
00:02:26.080 --> 00:02:29.290
cat food but it also doesn't just disappear.

40
00:02:29.290 --> 00:02:32.070
It lets us capture cat food if we wanted to.

41
00:02:32.080 --> 00:02:38.310
So I could make a variable like this last item equals items pop.

42
00:02:38.790 --> 00:02:44.880
And if I did this if we look at items it's now gone down one more teapot is gone.

43
00:02:45.010 --> 00:02:50.140
But if I look at last item it has the value of Tea-Pot stored inside of it.

44
00:02:50.170 --> 00:02:53.820
We'll talk a lot more about what returning values actually means later on.

45
00:02:53.950 --> 00:02:56.130
I know I'm saying that a lot in these couple of videos.

46
00:02:56.200 --> 00:03:00.060
So we can also use POP let me restore items one more time.

47
00:03:00.340 --> 00:03:04.540
So now it's back to its initial state where it has four items.

48
00:03:04.540 --> 00:03:10.340
If I wanted to remove mug we can't find the index that's 0 1.

49
00:03:10.660 --> 00:03:17.080
And so then I could do items pop one and that returns mug.

50
00:03:17.080 --> 00:03:20.210
And if we look at items now Moag is gone.

51
00:03:20.970 --> 00:03:23.280
And it doesn't leave an empty space behind or anything.

52
00:03:23.410 --> 00:03:24.190
It's gone.

53
00:03:24.190 --> 00:03:27.070
And the list shrinks around it.

54
00:03:27.230 --> 00:03:31.380
So to delete the first thing from a list I could just do items.

55
00:03:31.420 --> 00:03:38.240
And let's save it to variable again first equals items dot pop and the index of zero.

56
00:03:38.380 --> 00:03:43.140
And if you look at first it has socks and items as teapot and cat food.

57
00:03:43.150 --> 00:03:45.400
So we removed socks from the beginning.

58
00:03:45.670 --> 00:03:46.570
So that's pop.

59
00:03:46.570 --> 00:03:47.940
You don't pass in a value.

60
00:03:47.950 --> 00:03:49.600
It removes the last thing by default.

61
00:03:49.690 --> 00:03:55.780
If you do pass in an index it removes the item at that index and in both cases it returns the removed

62
00:03:55.780 --> 00:03:56.380
item.

63
00:03:56.380 --> 00:03:58.540
If you want to capture it and do something with it.

64
00:03:58.660 --> 00:03:59.090
OK.

65
00:03:59.200 --> 00:04:02.090
So you might be feeling a bit overwhelmed by all these methods.

66
00:04:02.120 --> 00:04:02.830
That's OK.

67
00:04:02.860 --> 00:04:06.470
There's a lot of them don't feel like you need to memorize all of them.

68
00:04:06.490 --> 00:04:11.140
I'm going to try and give you a lot of opportunity to practice lots of quizzes and exercises.

69
00:04:11.170 --> 00:04:16.060
But even then this is not something that you need to memorize or you shouldn't feel like you have to

70
00:04:16.060 --> 00:04:17.780
just sit there and memorize it right away.

71
00:04:17.800 --> 00:04:19.030
It will come with time.

72
00:04:19.030 --> 00:04:23.950
The last method will take a look at which has to do with removing items from lists is a bit different.

73
00:04:24.250 --> 00:04:26.010
It's called remove.

74
00:04:26.230 --> 00:04:32.710
Easy to remember and it works a little bit different in that we actually provide an item of value that

75
00:04:32.710 --> 00:04:40.970
we want to remove not an index so it will remove the first item from a list whose value is X meaning

76
00:04:40.970 --> 00:04:44.560
we pass an X and it will find the first match and remove it.

77
00:04:44.690 --> 00:04:49.620
Whatever the index is and if it doesn't find that item it throws an error.

78
00:04:50.150 --> 00:04:51.440
So here's an example.

79
00:04:51.500 --> 00:04:54.830
This list has 1 2 3 4 4 4.

80
00:04:54.980 --> 00:05:01.410
And if I run dot remove two it's going to find the first instance of 2 which is right here.

81
00:05:01.430 --> 00:05:05.900
It's the only one and it removes it out leaving us with 1 3 4 4 4.

82
00:05:06.350 --> 00:05:12.390
But if we try to remove 4 There's multiple fours it will only remove the first one.

83
00:05:12.890 --> 00:05:15.320
And so we end up with 1 3 4 4.

84
00:05:15.350 --> 00:05:19.710
So this is useful if you're not sure where something is in a list but you want to remove it.

85
00:05:19.760 --> 00:05:21.590
You can use dot remove.

86
00:05:21.590 --> 00:05:27.920
We should also note that it does not return the item that was removed because you know already what

87
00:05:27.920 --> 00:05:29.270
you're trying to remove.

88
00:05:29.270 --> 00:05:33.320
So if you need that value you know we have to write here we're telling it to remove too.

89
00:05:33.680 --> 00:05:33.910
OK.

90
00:05:33.920 --> 00:05:35.150
So let's do an example.

91
00:05:35.300 --> 00:05:41.090
Let's make a list called names and names will be a list and it will have a couple of fast forward through

92
00:05:41.090 --> 00:05:43.530
this OK.

93
00:05:43.570 --> 00:05:50.720
Well my computer shut down halfway through that but I'm back here now with a completed list of names.

94
00:05:50.830 --> 00:05:51.840
And there's a couple in it.

95
00:05:51.840 --> 00:05:53.360
My name is on here twice.

96
00:05:53.620 --> 00:05:59.950
So let's do names dot remove and I want to remove blue because she's a cat.

97
00:06:00.130 --> 00:06:01.710
And these are all people.

98
00:06:02.230 --> 00:06:04.920
And if I look at names now blue is gone.

99
00:06:05.410 --> 00:06:13.960
If I did the same thing for colds the first time it removes this version but it still leaves cold there.

100
00:06:14.200 --> 00:06:19.500
So if we can do it over time and now this list has no cult in it.

101
00:06:19.540 --> 00:06:27.520
And lastly if I tried to remove something that isn't in the list like hey Seuss I get this value error

102
00:06:27.730 --> 00:06:30.290
list remove x x is not in the list.

103
00:06:30.340 --> 00:06:33.190
We haven't learned how to handle errors or do anything when we get error.

104
00:06:33.200 --> 00:06:36.640
So for now it's just good to know that it generates an error.

105
00:06:36.880 --> 00:06:39.700
OK so three ways of removing items.

106
00:06:39.790 --> 00:06:43.210
The first one is like taking a sledgehammer to your list.

107
00:06:43.210 --> 00:06:45.370
It removes everything clear.

108
00:06:45.400 --> 00:06:51.370
Then we saw pop which pop on its own without any data passed in without an index specified we'll delete

109
00:06:51.370 --> 00:06:53.170
the last item and return it.

110
00:06:53.200 --> 00:06:59.260
But if you provide an index it removes the item at that index and returns it and finally remove is a

111
00:06:59.260 --> 00:07:05.060
bit different in that we pass in a value we want to remove if it finds it it will remove the first instance.

112
00:07:05.140 --> 00:07:06.830
Otherwise it throws an error.

113
00:07:06.960 --> 00:07:07.350
OK.

114
00:07:07.420 --> 00:07:09.090
Three more methods under our belt.
