WEBVTT
1
00:00:00.300 --> 00:00:00.830
All right.

2
00:00:00.870 --> 00:00:02.830
So we have a new exercise here.

3
00:00:02.880 --> 00:00:10.350
This one is asking you to use both a for loop and a while loop to generate the following stunning emoji

4
00:00:10.440 --> 00:00:11.100
art.

5
00:00:11.100 --> 00:00:15.230
So the first thing I mentioned to print this happy face or smiley face.

6
00:00:15.510 --> 00:00:20.450
You need to print this special string so you can just copy that.

7
00:00:20.550 --> 00:00:25.640
Or if you don't you can try and replace it with just an asterisk or any symbol.

8
00:00:25.710 --> 00:00:28.900
So I don't really care if it doesn't have to be the emoji.

9
00:00:29.040 --> 00:00:34.980
And if for some reason the emoji won't print correctly on your machine just use a star or a hash or

10
00:00:34.980 --> 00:00:36.120
whatever.

11
00:00:36.480 --> 00:00:39.210
And so you'll need to use both the for loop and a while loop.

12
00:00:39.210 --> 00:00:44.070
And the idea is that you're just printing you know one out and then two and then three and four and

13
00:00:44.070 --> 00:00:51.240
then five up to 10 and you can take advantage of the fact that you can multiply a string by a number

14
00:00:51.350 --> 00:00:52.950
to print it out multiple times.

15
00:00:53.070 --> 00:00:54.230
Or an alternative.

16
00:00:54.240 --> 00:01:00.840
Not necessarily a better one is to actually have nested loops so I'll show you that as a potential option

17
00:01:00.840 --> 00:01:02.010
as well.

18
00:01:02.010 --> 00:01:03.960
So both for loop and a while loop.

19
00:01:04.260 --> 00:01:07.270
Print out one all the way up to 10 smiley faces.

20
00:01:07.380 --> 00:01:08.260
Give it a shot.

21
00:01:08.310 --> 00:01:10.150
Let me throw up the positive video thing.

22
00:01:10.260 --> 00:01:15.480
There you are Pozzo video in three to one and I'm back.

23
00:01:15.570 --> 00:01:19.820
Well actually never left it over to my terminal make a new file.

24
00:01:19.890 --> 00:01:27.760
I will call this one art p y OK and let's start with the for loop version.

25
00:01:28.000 --> 00:01:31.290
And before I go any further let me copy this.

26
00:01:31.330 --> 00:01:33.310
So don't forget that.

27
00:01:33.460 --> 00:01:37.400
Put that up here and I can just show you if we execute this now.

28
00:01:37.450 --> 00:01:38.490
Python 3.

29
00:01:38.560 --> 00:01:41.160
Art we get one little happy face.

30
00:01:41.660 --> 00:01:42.440
OK.

31
00:01:42.700 --> 00:01:54.870
So let's go for and we want to do something 10 times so we could do for X or let's do some in range

32
00:01:56.230 --> 00:01:58.810
and we could just do 10 like this.

33
00:01:58.810 --> 00:02:02.460
But the thing is remember that's going to go from zero to 10.

34
00:02:02.710 --> 00:02:07.960
And what I'm going to do is take advantage of the fact that I can multiply.

35
00:02:07.960 --> 00:02:10.570
So I'm going to take this string one happy face.

36
00:02:10.630 --> 00:02:14.980
Multiply it by two or by ten and it will repeat itself 10 times.

37
00:02:14.980 --> 00:02:16.340
But if I start at zero.

38
00:02:16.450 --> 00:02:19.420
Multiplying it by zero is not going to give me the result I want.

39
00:02:19.420 --> 00:02:21.030
So I want to start at 1.

40
00:02:21.190 --> 00:02:26.130
So we'll go from 1 to 11 just like that.

41
00:02:26.340 --> 00:02:34.120
And next thing we'll do is just print this actually copy this line up here just like that.

42
00:02:34.120 --> 00:02:42.460
So starting at one or going to print the string one time then next time through the loop is to say we're

43
00:02:42.460 --> 00:02:46.720
going to print this two times and each time we print it's on a separate line.

44
00:02:46.910 --> 00:02:50.890
So the result is hopefully let's see if we got it right.

45
00:02:51.160 --> 00:02:51.860
There we go.

46
00:02:52.000 --> 00:02:53.670
We go from one down to ten.

47
00:02:53.680 --> 00:02:56.440
One two three four five six seven eight nine ten.

48
00:02:56.440 --> 00:02:57.000
Perfect.

49
00:02:57.160 --> 00:02:57.560
OK.

50
00:02:57.670 --> 00:03:00.080
So let's do the same thing with a WHILE loop.

51
00:03:00.280 --> 00:03:06.020
So we want to have a variable let's just call it yeah why not times.

52
00:03:06.120 --> 00:03:13.170
And it's going to start at 1 and then we'll have our while in the condition and we want this loop to

53
00:03:13.170 --> 00:03:18.780
keep running wild times is less than 11 or less than or equal to 10.

54
00:03:18.810 --> 00:03:27.660
Either one and in here we're going to copy this and just steal from it but change numb to be times.

55
00:03:28.440 --> 00:03:32.940
And if I don't if I read it now we'd have an infinite loop where it would just print one smiley face

56
00:03:32.940 --> 00:03:35.230
on every line forever to the end of time.

57
00:03:35.260 --> 00:03:37.680
To my computer battery died.

58
00:03:38.230 --> 00:03:44.020
But what we want instead is to add one to times each time through the loop.

59
00:03:44.040 --> 00:03:45.280
So it starts at 1.

60
00:03:45.750 --> 00:03:46.970
Is times less than 11.

61
00:03:47.010 --> 00:03:48.550
Yep it's one.

62
00:03:48.570 --> 00:03:50.730
So we're going to print one smiley face.

63
00:03:50.730 --> 00:03:52.280
Now times is added 1.

64
00:03:52.290 --> 00:03:53.200
So it's two.

65
00:03:53.510 --> 00:03:55.100
OK is 2 less than 11.

66
00:03:55.110 --> 00:03:55.810
Yep.

67
00:03:55.830 --> 00:03:57.190
So we print 2.

68
00:03:57.270 --> 00:04:00.160
Now we're on three and we keep going until we hit 10.

69
00:04:00.180 --> 00:04:01.370
It's 10 less than 11.

70
00:04:01.410 --> 00:04:02.310
Yes.

71
00:04:02.310 --> 00:04:04.340
So we're going to print 10 and add one.

72
00:04:04.350 --> 00:04:07.470
So times is now 11 times less than 11.

73
00:04:07.470 --> 00:04:08.030
No.

74
00:04:08.340 --> 00:04:08.760
All right.

75
00:04:08.880 --> 00:04:10.600
Let's see if it works.

76
00:04:10.770 --> 00:04:11.400
Looks good.

77
00:04:11.400 --> 00:04:13.940
We get two of the exact same thing.

78
00:04:14.220 --> 00:04:15.660
So this is kind of fun.

79
00:04:15.960 --> 00:04:20.420
I'm going to comment this out and I want to show nested loops very briefly.

80
00:04:20.640 --> 00:04:26.310
So let's say that I want to do this entire thing three times.

81
00:04:26.790 --> 00:04:29.140
Well I could easily do that with another loop.

82
00:04:29.190 --> 00:04:34.370
So I'll just say for x in range 3

83
00:04:37.170 --> 00:04:40.030
and I'll just put this code in that loop.

84
00:04:40.080 --> 00:04:41.940
So I need to indented properly.

85
00:04:41.940 --> 00:04:43.420
So we're not using x.

86
00:04:43.440 --> 00:04:46.060
This just says repeated what's whatever's in here.

87
00:04:46.050 --> 00:04:53.550
Get rid of that equal sign whatever's in here three times and then what happens to be is that we're

88
00:04:53.550 --> 00:04:54.950
going to print three.

89
00:04:55.000 --> 00:04:59.960
We're going to print a pyramid from 1 to 10 3 different times so let's see what it looks like.

90
00:05:00.030 --> 00:05:03.180
Make clear give us as much space as we need.

91
00:05:03.600 --> 00:05:04.690
And there we go.

92
00:05:04.710 --> 00:05:07.030
So we just nested a loop instead of another one.

93
00:05:07.230 --> 00:05:10.520
We were repeating something that is repeating something on its own.

94
00:05:10.530 --> 00:05:15.810
So the weird nested loops solution that I want to show you that that's not better.

95
00:05:15.840 --> 00:05:20.930
But let's say you didn't know about this multiplying by a string by a number.

96
00:05:21.060 --> 00:05:23.310
What we could do instead.

97
00:05:23.450 --> 00:05:30.570
I'm going to cut that out and just start fresh the bottom and say Here we go and we won't do a nested

98
00:05:30.570 --> 00:05:32.100
loop like that.

99
00:05:32.100 --> 00:05:39.180
So what we could do right here this is essentially a loop where we're printing this and we're multiplying

100
00:05:39.180 --> 00:05:39.480
it.

101
00:05:39.630 --> 00:05:46.990
So we are adding in remember multiplication is basically addition multiple times.

102
00:05:47.250 --> 00:05:50.790
So what we could do is take this and add it to itself each time.

103
00:05:50.790 --> 00:05:58.500
So I'll make a new variable in here and I'll just call it time equals those to count count and I'll

104
00:05:58.500 --> 00:06:10.930
set it at 1 and then I'll do while count is less than numb I'm going to and this is get crazy.

105
00:06:10.930 --> 00:06:20.650
So I'm going to make a variable string that I'll call not as TR Let's go with smileys and I'll set it

106
00:06:20.650 --> 00:06:23.080
at an empty string.

107
00:06:23.650 --> 00:06:29.140
Ok then in here I'm going to add this in to Smiley's every time.

108
00:06:29.140 --> 00:06:38.410
So smileys plus equals a new smiley face and I need to then say count plus equals 1.

109
00:06:38.850 --> 00:06:46.540
And then at the very end outside the while loop we will print smile's with parentheses.

110
00:06:46.690 --> 00:06:46.890
OK.

111
00:06:46.900 --> 00:06:50.920
So this is a gross gross solution compared to this multiplication.

112
00:06:51.220 --> 00:06:56.020
But I just want to show that you could replace that multiplication with a nested.

113
00:06:56.140 --> 00:06:57.310
So what's happening here.

114
00:06:57.490 --> 00:07:03.300
OK so let's say that we are on the fourth iteration of the outer loop.

115
00:07:03.880 --> 00:07:07.330
OK what we're going to do is we have this variable count set to 1.

116
00:07:07.480 --> 00:07:11.380
Each time it resets to 1 and our smileys is an empty string.

117
00:07:12.070 --> 00:07:15.700
So wild count is less than numb which was four.

118
00:07:16.120 --> 00:07:18.130
A while one is less than four that's true.

119
00:07:18.370 --> 00:07:20.860
We're going to add 1 to our Smiley's variable.

120
00:07:20.860 --> 00:07:23.980
So it gets one smiley face and then we add one to count.

121
00:07:24.010 --> 00:07:26.060
So now count is two is to less than four.

122
00:07:26.080 --> 00:07:33.260
Yes so we add another smiley face and so we have two smileys and then we keep going three and then four.

123
00:07:33.790 --> 00:07:36.050
And I think this should actually be less than or equal to no.

124
00:07:36.900 --> 00:07:37.790
Anyway let's see.

125
00:07:37.800 --> 00:07:38.810
I miss a colon.

126
00:07:38.830 --> 00:07:40.300
No it looks good.

127
00:07:40.470 --> 00:07:43.820
So this is the wonky way of doing it.

128
00:07:44.010 --> 00:07:49.150
So I'll just add a comment without string multiplication.

129
00:07:51.910 --> 00:07:53.100
Ugly solution.

130
00:07:53.530 --> 00:07:54.850
OK great.

131
00:07:54.880 --> 00:07:57.830
So we'll leave it off there if you want to play around with this.

132
00:07:57.940 --> 00:08:01.540
A fun challenge is to actually make this centered.

133
00:08:01.600 --> 00:08:05.860
So rather than being you know what is this isosceles triangle.

134
00:08:05.890 --> 00:08:08.460
Make it a triangle that is centered or a pyramid.

135
00:08:08.650 --> 00:08:16.290
And to do that you would actually want to work with odd numbers so we could do something like this come

136
00:08:16.460 --> 00:08:24.790
at this out again and let's go while we're less than 20 and we'll add two each time.

137
00:08:27.220 --> 00:08:32.380
OK so we get one and then three and then five and then you would want to center them all.

138
00:08:32.380 --> 00:08:37.360
So this bottom row would be unchanged but everything else would be shifted over to make a centered pyramid

139
00:08:37.560 --> 00:08:41.880
and to do that you need to add space before each Moji to move them over.

140
00:08:41.920 --> 00:08:45.330
So if you don't try that it's kind of a bit of a fun challenge.

141
00:08:45.350 --> 00:08:46.940
Otherwise we're done.

142
00:08:47.080 --> 00:08:48.620
We have another exercise after this.
