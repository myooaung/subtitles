WEBVTT
1
00:00:00.270 --> 00:00:01.670
All right I'll come back.

2
00:00:01.740 --> 00:00:04.710
So you might be wondering what is a variable.

3
00:00:05.070 --> 00:00:11.800
Well variables like containers don't assume they you know pull it out later.

4
00:00:11.970 --> 00:00:18.000
They can hold all sorts of things like numbers booleans and streams and a lot more.

5
00:00:18.030 --> 00:00:19.500
We'll talk later.

6
00:00:20.030 --> 00:00:22.710
OK I think that's that's enough of that for now.

7
00:00:22.980 --> 00:00:29.490
So variables in Python are like variables in math so if you ever took algebra you probably saw equations

8
00:00:29.490 --> 00:00:34.270
that had X's or wise or other letters interspersed inside the equations.

9
00:00:34.440 --> 00:00:36.110
It's the same idea here.

10
00:00:36.150 --> 00:00:40.080
So our variables hold the value and they have a name.

11
00:00:40.080 --> 00:00:41.850
So those are the two key components.

12
00:00:41.940 --> 00:00:45.970
So I like to think of them as sort of like jar's like a mason jar.

13
00:00:46.050 --> 00:00:51.660
You put something in the jar and then you give it a name maybe a little piece of tape and a sharpie

14
00:00:51.660 --> 00:00:52.890
to create a label.

15
00:00:52.890 --> 00:00:59.850
So this jar says Colt's favorite color and this jar says berry jam and this one says I don't know tips

16
00:00:59.850 --> 00:01:00.550
or whatever.

17
00:01:00.690 --> 00:01:01.400
That's the name.

18
00:01:01.400 --> 00:01:05.940
And then inside we have data and that's pretty much as far as that analogy goes.

19
00:01:05.940 --> 00:01:11.940
So in Python mind this is what it looks like to create or assign a variable.

20
00:01:11.940 --> 00:01:17.010
So this is how we initially tell Python hey I want a variable called X..

21
00:01:17.160 --> 00:01:18.550
So that's the left part.

22
00:01:18.660 --> 00:01:21.200
And I want to set it equal to 100 at the beginning.

23
00:01:21.420 --> 00:01:26.070
So variables can change and we'll talk about that as well but they have a name on the left an equal

24
00:01:26.070 --> 00:01:28.080
sign and then a value on the right.

25
00:01:28.200 --> 00:01:32.870
And I did say this in the song if you didn't catch this they can be all sorts of data types.

26
00:01:32.910 --> 00:01:34.630
We've only seen numbers so far.

27
00:01:34.770 --> 00:01:39.320
So I'm talking about numbers but in a bit we'll see other types of data we can put in variables.

28
00:01:39.420 --> 00:01:40.910
So we're not limited to numbers.

29
00:01:41.010 --> 00:01:47.210
And then we have a second variable assignment down here Khaleesi Mother of Dragons equals 1.

30
00:01:47.250 --> 00:01:51.270
If you're wondering that's a game of thrones character if you haven't seen given Thrones it wouldn't

31
00:01:51.270 --> 00:01:55.770
start it now because you'll get distracted and never finish this course.

32
00:01:55.850 --> 00:02:00.060
Anyway the key thing is that we have a name on the left and we're sitting it equal to some corresponding

33
00:02:00.060 --> 00:02:00.760
value.

34
00:02:01.110 --> 00:02:03.670
And then of course we can recall those values.

35
00:02:04.020 --> 00:02:06.380
Otherwise variables wouldn't be very useful.

36
00:02:06.390 --> 00:02:13.590
So here you could print Khaleesi mother of dragons which is one plus X which is one hundred and that

37
00:02:13.590 --> 00:02:15.710
results in one hundred and one.

38
00:02:15.720 --> 00:02:19.670
So this is a silly example for a random slide of course.

39
00:02:19.700 --> 00:02:23.300
You're not going to be doing things like this but variables are really really useful.

40
00:02:23.330 --> 00:02:27.720
You'll use them in every single program we create from here on out for a couple of reasons.

41
00:02:27.720 --> 00:02:31.630
One they can make your code more legible and reusable.

42
00:02:31.650 --> 00:02:37.830
You know we might have a really long piece of text or a really long number like pi that we don't want

43
00:02:37.830 --> 00:02:39.720
to have to type out every time.

44
00:02:39.990 --> 00:02:43.470
But more importantly most of our data is not static.

45
00:02:43.500 --> 00:02:44.550
A lot of it changes.

46
00:02:44.550 --> 00:02:47.350
It might depend on user input which we'll see later on.

47
00:02:47.580 --> 00:02:51.200
So we might not know exactly what x is.

48
00:02:51.270 --> 00:02:56.540
So we know it's it's 100 here but maybe we're working with a user's password.

49
00:02:56.580 --> 00:02:57.600
We don't know what that is.

50
00:02:57.600 --> 00:03:02.600
So we have a variable called Password and it's equal to whatever the user typed in.

51
00:03:02.790 --> 00:03:07.560
And then we do something with password maybe we check it against our database or something.

52
00:03:07.560 --> 00:03:09.630
And the idea is that it's not up to us.

53
00:03:09.810 --> 00:03:13.260
And so our code needs to be able to work with dynamic data.

54
00:03:13.620 --> 00:03:14.090
OK.

55
00:03:14.340 --> 00:03:18.510
So to wrap this slide up variables always assigned with the variable name on the left and the value

56
00:03:18.510 --> 00:03:20.200
on the right of the equal sign.

57
00:03:21.290 --> 00:03:23.150
And this again is a variable assignment.

58
00:03:23.150 --> 00:03:28.250
So we have to tell Python hey I want a variable called X set it equal to 100.

59
00:03:28.250 --> 00:03:31.260
If we don't assign it first we can't use it later.

60
00:03:31.310 --> 00:03:32.560
It will cause a problem.

61
00:03:32.780 --> 00:03:34.340
And in just a minute I'll show you that.

62
00:03:34.370 --> 00:03:39.850
So I'm going to hop over to my terminal and really quickly open up Python 3.

63
00:03:40.260 --> 00:03:40.800
OK.

64
00:03:41.060 --> 00:03:48.290
So I'm going to define a variable I'll call numb of cat and let's say that I am crazy and I have ninety

65
00:03:48.290 --> 00:03:49.670
nine cats.

66
00:03:49.850 --> 00:03:50.910
Now what I want to show you.

67
00:03:50.990 --> 00:03:59.840
Yes we can recall Gnome of cat and in the Python interpreter it will show me 99 but in a regular bit

68
00:03:59.840 --> 00:04:02.960
of Python code in a file like a python file.

69
00:04:03.020 --> 00:04:07.950
If I just wrote the line number of cats is not going to printed out I would need to actually have a

70
00:04:07.970 --> 00:04:10.250
print number of cats.

71
00:04:11.060 --> 00:04:15.830
And you don't really see a difference here but I'll show you later in the video that there is a significant

72
00:04:15.830 --> 00:04:16.450
difference.

73
00:04:16.660 --> 00:04:17.150
OK.

74
00:04:17.390 --> 00:04:29.210
So by just recalling the of cats and let's say multiplying by two I get 198 but important to notice

75
00:04:29.210 --> 00:04:32.960
that number of cats is not 198 itself.

76
00:04:33.140 --> 00:04:34.630
It's ninety nine.

77
00:04:34.940 --> 00:04:39.170
So all that I'm doing is saying give me what the current value of number of cats is and multiply by

78
00:04:39.170 --> 00:04:39.880
two.

79
00:04:40.220 --> 00:04:43.440
But I'm never saying change no cat.

80
00:04:43.490 --> 00:04:48.050
So that's where we get to the next thing which is variable re-assignment.

81
00:04:48.200 --> 00:04:51.820
So variables can be assigned to other variables.

82
00:04:51.860 --> 00:04:53.170
So here's an example.

83
00:04:53.210 --> 00:04:54.130
Python is awesome.

84
00:04:54.140 --> 00:04:55.260
Equals 100.

85
00:04:55.670 --> 00:04:59.480
And I can say just another variable equals Python is awesome.

86
00:04:59.480 --> 00:05:04.300
And so then at this point just another variable is equal to 100.

87
00:05:04.310 --> 00:05:06.890
So variables can also be reassigned at a time.

88
00:05:06.950 --> 00:05:10.730
So I could change Python this awesome to 1 3 3 7.

89
00:05:11.090 --> 00:05:13.310
So it's no longer equal to 100.

90
00:05:13.310 --> 00:05:20.920
I've changed it to 1 3 3 7 and we can also assign variables at the same time as other variables.

91
00:05:21.320 --> 00:05:22.560
So here's an example.

92
00:05:22.610 --> 00:05:25.760
And the syntax might be a little weird but we separate things by commas.

93
00:05:26.000 --> 00:05:30.590
So all comma at comma once equals five and 10 come a 15.

94
00:05:30.590 --> 00:05:34.570
Well all is five at 10 and once it's 15.

95
00:05:34.880 --> 00:05:38.810
Now I only recommend doing this if the variables make sense to be assigned together.

96
00:05:38.840 --> 00:05:39.940
So if they're just arbitrary.

97
00:05:39.950 --> 00:05:44.030
I mean these are all arbitrary examples that don't really make sense but I would only do them in one

98
00:05:44.030 --> 00:05:46.640
line if they had something to do with one another.

99
00:05:46.790 --> 00:05:48.740
OK so let's hop back over here.

100
00:05:48.770 --> 00:05:57.660
Now I have no of cats and if I wanted to I could update it at any point so I could manually do it by

101
00:05:57.660 --> 00:06:01.110
saying of cats equals 198.

102
00:06:01.920 --> 00:06:04.540
And now if I look at number of cats it's 198.

103
00:06:04.680 --> 00:06:05.280
OK.

104
00:06:05.460 --> 00:06:06.860
But the other thing I want to show you.

105
00:06:07.110 --> 00:06:13.680
I'm going to reset it back to 99 is let's let's say one of my cats passed away.

106
00:06:13.680 --> 00:06:20.040
Actually I don't want to upset anyone let's say that I'm giving my cat a kitten to my sister as a Christmas

107
00:06:20.040 --> 00:06:20.730
gift.

108
00:06:20.750 --> 00:06:22.630
Now of course he goes ninety nine.

109
00:06:23.100 --> 00:06:27.440
Well I can also say number of cats equals number of cat minus one.

110
00:06:27.870 --> 00:06:31.470
It's equal to the current number of cats minus one.

111
00:06:31.620 --> 00:06:34.330
And now what does number of cats.

112
00:06:34.340 --> 00:06:35.740
It's 98.

113
00:06:36.060 --> 00:06:41.730
So we can also do something like speak of variable friends and I don't know.

114
00:06:41.760 --> 00:06:44.080
My friends could start at zero I have no friends.

115
00:06:45.070 --> 00:06:52.650
But then maybe I decide all my cats are friends so I could say none of friends equals none of cats so

116
00:06:52.650 --> 00:06:58.230
I'm assigning I'm reassigning friends first of all but I'm using the value of name of cats to update

117
00:06:58.230 --> 00:07:00.310
friends of cats is 98.

118
00:07:00.450 --> 00:07:03.100
So right now friends is also 98.

119
00:07:03.330 --> 00:07:04.580
And I'll leave it at that for now.

120
00:07:04.710 --> 00:07:07.210
You'll see us use variables all the time.

121
00:07:07.260 --> 00:07:11.830
So if you still have a couple of questions about them we'll probably answer them as we go.

122
00:07:11.970 --> 00:07:13.770
But they're really fundamental.

123
00:07:13.770 --> 00:07:17.090
Again it's a way to store data with a name and that's pretty much it.
