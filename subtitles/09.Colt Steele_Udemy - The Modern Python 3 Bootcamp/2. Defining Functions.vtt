WEBVTT
1
00:00:00.290 --> 00:00:00.600
Get.

2
00:00:00.630 --> 00:00:05.790
So it's about time for us to write our first function What's the syntax look like.

3
00:00:06.090 --> 00:00:12.930
Well it starts with the key word def for Define DPF space and then the name of a function.

4
00:00:12.990 --> 00:00:15.290
And this is typically snake case.

5
00:00:15.330 --> 00:00:21.820
So all lowercase with what you call these things underscores between words and then parentheses.

6
00:00:22.110 --> 00:00:24.670
And for now we're going to leave them just empty.

7
00:00:24.720 --> 00:00:26.240
You can put things in here.

8
00:00:26.280 --> 00:00:29.280
We'll talk about that in a future video and then a colon.

9
00:00:29.310 --> 00:00:31.550
Just like with a conditional statement or a loop.

10
00:00:31.950 --> 00:00:36.280
And then we indent whatever code we want to be part of the function.

11
00:00:36.450 --> 00:00:40.170
So here is our very first function it's called Say hi.

12
00:00:40.650 --> 00:00:44.940
We've defined it with a def keyword we have the parentheses the colon and all it does.

13
00:00:44.970 --> 00:00:46.530
Every time we call say hi.

14
00:00:46.650 --> 00:00:49.260
It just prints the string high.

15
00:00:49.260 --> 00:00:52.940
Now it's important to realize is that just defining this does nothing on its own.

16
00:00:52.980 --> 00:00:53.810
Well that's not true.

17
00:00:53.820 --> 00:00:54.570
It defines it.

18
00:00:54.720 --> 00:00:57.650
But it won't actually run the code it never executes.

19
00:00:57.870 --> 00:00:59.480
So we will never see print.

20
00:00:59.520 --> 00:01:05.940
Will never see never see high printed unless we actually invoke the function or executed by calling

21
00:01:05.940 --> 00:01:09.270
its name and then adding parentheses afterward.

22
00:01:09.450 --> 00:01:10.830
So let's define our own.

23
00:01:10.860 --> 00:01:18.960
I'm going to make a new file called The first function that P Y and this function will start super simple.

24
00:01:19.050 --> 00:01:23.610
Well just start by writing def and this is going to be a function that sings happy birthday.

25
00:01:23.730 --> 00:01:28.810
So we'll just call let's do sing happy birthday.

26
00:01:29.370 --> 00:01:31.890
If you don't know happy birthday by the way I know.

27
00:01:31.890 --> 00:01:34.640
Different countries have different songs in the U.S..

28
00:01:34.890 --> 00:01:36.960
Happy birthday to you Happy Birthday to you.

29
00:01:36.960 --> 00:01:39.100
Happy birthday dear somebody's name.

30
00:01:39.180 --> 00:01:40.710
Happy birthday to you.

31
00:01:40.710 --> 00:01:42.520
So we'll just write that now.

32
00:01:42.960 --> 00:01:48.280
So I just went ahead and typed it up and rather than singing it to a specific person for now I'm going

33
00:01:48.290 --> 00:01:49.700
to say happy birthday dear you.

34
00:01:49.770 --> 00:01:51.480
But we'll revisit this later.

35
00:01:51.690 --> 00:01:57.140
So we get these four lines printed every time we call sing happy birthday.

36
00:01:57.510 --> 00:02:03.830
So if I run this right now Python 3 first function nothing happens.

37
00:02:03.900 --> 00:02:04.940
We don't get an error.

38
00:02:05.070 --> 00:02:06.500
But nothing is printed.

39
00:02:06.540 --> 00:02:10.830
And again that's because we're not actually invoking the function.

40
00:02:11.010 --> 00:02:14.840
So I need to call sing Happy Birthday with parentheses.

41
00:02:15.390 --> 00:02:19.530
And if I do that now I get those four lines printed out.

42
00:02:19.530 --> 00:02:25.380
If I leave the parentheses off nothing happens.

43
00:02:25.380 --> 00:02:29.970
We have to have those parentheses in order to say hey you know that thing sing happy birthday.

44
00:02:30.060 --> 00:02:35.310
I want you to now call it versus this right here is saying Hey I thought you know that thing sing happy

45
00:02:35.310 --> 00:02:36.010
birthday.

46
00:02:37.090 --> 00:02:38.230
And that's it.

47
00:02:38.230 --> 00:02:40.810
In this case we want to actually execute.

48
00:02:41.190 --> 00:02:41.680
OK.

49
00:02:41.770 --> 00:02:48.150
And so we can do it three four five times as many as we want and now we executed.

50
00:02:48.220 --> 00:02:53.710
Look how many times we get it and all we had to do was write sing Happy Birthday to get four lines of

51
00:02:54.040 --> 00:02:54.890
code for free.

52
00:02:55.010 --> 00:03:00.640
And that's a really silly example because oftentimes functions might give us other functions inside

53
00:03:00.640 --> 00:03:02.790
of them and those functions might call other functions.

54
00:03:02.800 --> 00:03:08.530
And at the end of the day a single function call might actually result in 100 or 200 lines of code running

55
00:03:08.530 --> 00:03:09.100
at some point.

56
00:03:09.100 --> 00:03:16.330
For example this rock paper scissors refactor this start game function right here ends up actually invoking

57
00:03:16.600 --> 00:03:22.210
display header and pick computer move and calculate winner and each of those have their own.

58
00:03:22.210 --> 00:03:24.490
I don't know 10 20 30 lines of code.

59
00:03:24.580 --> 00:03:28.750
So there's a lot of stuff happening just by the single line that we're writing.

60
00:03:28.750 --> 00:03:30.390
So I'll leave this video here.

61
00:03:30.430 --> 00:03:32.910
This is the basic syntax to defining a function.

62
00:03:32.950 --> 00:03:39.070
Def name of the function parens call and indent all the code that goes in the function.

63
00:03:39.340 --> 00:03:44.790
And then we have to execute it separately with parentheses in the name of the function.

64
00:03:45.070 --> 00:03:45.810
And we're good to go.

65
00:03:45.910 --> 00:03:47.600
So this is our first simple function.
