1
00:00:00,150 --> 00:00:00,890
Welcome back.

2
00:00:00,900 --> 00:00:05,120
So we've seen the basic syntax of a function and we've seen how to return value.

3
00:00:05,130 --> 00:00:11,280
We have enough now enough tools to define a function that does something a bit more interesting and

4
00:00:11,280 --> 00:00:16,950
what we're going to do is to find a function that will toss a coin for us or flip a coin and it will

5
00:00:16,950 --> 00:00:19,730
use random which we've seen before.

6
00:00:19,950 --> 00:00:26,160
We've used Rand and we're going to use a different part of the random module and our function will return

7
00:00:26,170 --> 00:00:31,070
heads or tails depending on a random toss or random flip.

8
00:00:31,080 --> 00:00:39,480
So let's first make a new file and I'll just call it coin flip IPY Let's open it up and the first thing

9
00:00:39,480 --> 00:00:46,810
we'll do is write from random import random and we're not really going to discuss this.

10
00:00:46,830 --> 00:00:48,920
We're kind of skipping over it like we have in the past.

11
00:00:48,930 --> 00:00:53,460
If you've watched those videos this is a module that comes with Python but we have to manually include

12
00:00:53,460 --> 00:00:58,090
it that's all but I'll say for now when we talk about modules it will make more sense.

13
00:00:58,260 --> 00:01:00,010
OK but onto the function part.

14
00:01:00,210 --> 00:01:07,380
So what we want is a function called let's say flip a coin and it takes no inputs we haven't talked

15
00:01:07,380 --> 00:01:13,230
about that yet but that doesn't mean that it has to do the exact same thing every time our silly happy

16
00:01:13,230 --> 00:01:16,880
birthday demo does the exact same thing every single time through.

17
00:01:17,070 --> 00:01:23,400
But because we're going to use the random module we can add an element of randomness if we can get a

18
00:01:23,400 --> 00:01:24,210
different result.

19
00:01:24,210 --> 00:01:25,800
Heads or tails.

20
00:01:25,830 --> 00:01:27,530
So there's a couple of steps.

21
00:01:27,540 --> 00:01:35,490
First thing we need to do is generate random number and we're going to go from 0 to 1.

22
00:01:36,060 --> 00:01:41,270
And if the decimal number so it's going to be a float if it's between zero and 0.5.

23
00:01:41,380 --> 00:01:43,620
Well we'll sign it that say head.

24
00:01:43,740 --> 00:01:49,590
Otherwise we'll do tails and then we'll just return the string heads or tails and that's it.

25
00:01:49,590 --> 00:01:52,230
So let's let's just generate the number to start.

26
00:01:52,230 --> 00:01:58,060
So to generate a random number from 0 to 1 all we have to do is type random just like this.

27
00:01:58,200 --> 00:02:02,840
So let me actually just demo this to you in the terminal Python 3.

28
00:02:03,210 --> 00:02:08,470
And if you just type random like this it's giving us a number between 0 and 1.

29
00:02:08,490 --> 00:02:14,820
So it doesn't include one but it includes point 9 9 9 9 9 9 9 9 9 and you can see they range from zero

30
00:02:14,820 --> 00:02:15,480
to 1.

31
00:02:15,750 --> 00:02:16,200
OK.

32
00:02:16,320 --> 00:02:17,730
So we've got that.

33
00:02:17,910 --> 00:02:22,560
This is going to generate the number and all we want to do you know we could set it to a variable.

34
00:02:22,590 --> 00:02:28,670
So we could call it just R and R equals random and then it's just a simple IF statement.

35
00:02:28,830 --> 00:02:30,760
If R is.

36
00:02:30,840 --> 00:02:37,040
And let's do greater than 0.5 and then we'll just add in or else.

37
00:02:37,050 --> 00:02:38,900
So what do we do if it's greater.

38
00:02:38,940 --> 00:02:46,140
We're going to return and it's up to us which way we want to do this let's turn heads else return tails

39
00:02:46,890 --> 00:02:48,450
Just like that.

40
00:02:49,080 --> 00:02:54,260
And let's try this let's just do a print flip a coin.

41
00:02:54,910 --> 00:02:59,800
So flip coin is going to be called executed although I caught myself here.

42
00:02:59,970 --> 00:03:03,120
We need parentheses if we just print flip coin.

43
00:03:03,150 --> 00:03:04,590
It's not going to actually execute it.

44
00:03:04,590 --> 00:03:09,300
So we need to execute it which is going to then generate a random number save it to a variable called

45
00:03:09,300 --> 00:03:14,860
R and then if R is greater than 0.5 will turn heads.

46
00:03:14,860 --> 00:03:16,700
Otherwise will return tails.

47
00:03:16,710 --> 00:03:17,630
Let's see if it works

48
00:03:20,390 --> 00:03:26,300
you've got heads tails heads tails heads heads tails.

49
00:03:26,480 --> 00:03:27,240
Cool.

50
00:03:27,260 --> 00:03:29,460
So we can accept that it's random enough.

51
00:03:29,490 --> 00:03:32,990
It doesn't matter if it's perfect if it's exactly 50/50.

52
00:03:33,000 --> 00:03:34,070
It doesn't matter.

53
00:03:34,130 --> 00:03:35,670
A quick change we could make.

54
00:03:35,750 --> 00:03:37,060
I'll leave this version here.

55
00:03:37,310 --> 00:03:43,490
But we could shorten this a little bit by doing instead of saving it to a variable.

56
00:03:43,940 --> 00:03:45,130
We could just do.

57
00:03:45,410 --> 00:03:54,210
If random is greater than 0.5 return heads else return tails.

58
00:03:54,610 --> 00:03:55,000
OK.

59
00:03:55,040 --> 00:03:59,660
So here is our slightly improved version or we're just not using a separate variable.

60
00:03:59,660 --> 00:04:05,510
The only other thing I would mention is that by redefining flip a coin down here it actually overwrites

61
00:04:05,510 --> 00:04:06,560
this version.

62
00:04:06,830 --> 00:04:12,760
So if I just tried to run flip the coin again it's not going to run.

63
00:04:12,770 --> 00:04:16,540
I mean they both do the exact same thing but it's not going to execute this version.

64
00:04:16,610 --> 00:04:18,830
It's going to execute the overwritten version.

65
00:04:18,830 --> 00:04:26,580
So we could tell that if I did in all caps like this which do we expect to see heads or tails.

66
00:04:26,660 --> 00:04:27,420
Let's see.

67
00:04:27,420 --> 00:04:29,750
And I need to add a decimal point there.

68
00:04:29,750 --> 00:04:30,500
Here we go.

69
00:04:30,500 --> 00:04:32,920
So you can see it's all caps.

70
00:04:32,960 --> 00:04:36,890
So what this shows us is that we've overwritten flip a coin that was defined once.

71
00:04:36,890 --> 00:04:38,050
It's now defined again.

72
00:04:38,180 --> 00:04:41,110
This version has lost just like overwriting a variable.

73
00:04:41,470 --> 00:04:41,950
OK.

74
00:04:42,050 --> 00:04:46,040
So I'm going to get rid of this initial version and just keep this one here.

75
00:04:46,240 --> 00:04:49,950
And this is our first function that does something a bit more interesting.

76
00:04:50,090 --> 00:04:51,400
It has an element of randomness.

77
00:04:51,410 --> 00:04:55,010
It doesn't you know just sing Happy Birthday over and over monotonously.

78
00:04:55,100 --> 00:04:57,340
This gives us a different result each time through.

79
00:04:57,610 --> 00:05:02,210
OK next we're actually going to see how we can write functions that except inputs.
