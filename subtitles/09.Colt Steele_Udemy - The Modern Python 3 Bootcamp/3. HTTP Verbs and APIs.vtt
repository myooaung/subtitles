WEBVTT
1
00:00:00.220 --> 00:00:03.600
OK this is part two of the age to be crash course.

2
00:00:03.810 --> 00:00:08.910
I initially intended it to be one video but I realized it was getting too long and I hate having really

3
00:00:08.910 --> 00:00:09.720
long videos.

4
00:00:09.720 --> 00:00:10.620
So I split it up.

5
00:00:10.620 --> 00:00:14.970
So if you're looking to just jump into the python that will be the next video I promise this one won't

6
00:00:14.970 --> 00:00:15.650
be split.

7
00:00:15.870 --> 00:00:16.350
OK.

8
00:00:16.350 --> 00:00:18.920
So the last thing we talked about were status codes.

9
00:00:18.960 --> 00:00:25.890
Now we're going to talk about HTP verbs and this can be confusing when you first learn about HGP requests

10
00:00:26.400 --> 00:00:31.730
because seems like any request it should work the same way you're sending a request for a you.

11
00:00:31.790 --> 00:00:37.070
Well you're asking for please give me this page you are com slash Samman or please give me the page.

12
00:00:37.080 --> 00:00:38.490
Facebook dot com.

13
00:00:38.560 --> 00:00:43.470
But there's actually a couple of different requests that you can make and the most standard requests

14
00:00:43.470 --> 00:00:48.600
that we that we've talked about the only type of request we've talked about is called a GET request.

15
00:00:48.870 --> 00:00:53.460
And there's another type called a POST request and there's actually a couple of others but the only

16
00:00:53.460 --> 00:00:59.010
two we're going to concern yourself with the two most most fundamental are GET and POST and these are

17
00:00:59.010 --> 00:01:01.110
two types of requests we can make.

18
00:01:01.140 --> 00:01:07.920
Notice when I sent a request to Google dot com slash Hello slash called slash cat even though it failed

19
00:01:08.890 --> 00:01:10.420
see this request method.

20
00:01:10.590 --> 00:01:12.420
Same thing as request verb.

21
00:01:12.810 --> 00:01:19.550
It's set to get and what that means is that I'm trying to retrieve data I'm asking for a web page.

22
00:01:19.560 --> 00:01:20.630
I'm doing a search.

23
00:01:20.820 --> 00:01:23.030
I'm not trying to write data.

24
00:01:23.040 --> 00:01:24.580
I'm not sending data.

25
00:01:24.630 --> 00:01:26.320
I'm not trying to update something.

26
00:01:26.460 --> 00:01:29.880
So a request is for getting information retrieving.

27
00:01:29.880 --> 00:01:31.890
Think of it as just browsing the web.

28
00:01:31.980 --> 00:01:37.830
You go to a dot com you're making a GET request a POST request however would be if you were trying to

29
00:01:37.860 --> 00:01:43.920
submit a new comment on Reddit dot com or you're trying to post a photo to Facebook where you're actually

30
00:01:43.950 --> 00:01:48.950
sending something to the server that then has what's known as a side effect.

31
00:01:49.110 --> 00:01:54.220
So you get request data can be passed in what's known as a query string.

32
00:01:54.240 --> 00:01:57.240
We will discuss that later in a POST request.

33
00:01:57.240 --> 00:02:03.060
You can pass all sorts of data in the request body so you could pass a photo through or you could post

34
00:02:03.060 --> 00:02:06.640
your Facebook status message in a POST request.

35
00:02:07.020 --> 00:02:09.300
But the key difference has to do with side effects.

36
00:02:09.300 --> 00:02:15.870
So what this means is a GET request is you retrieving information saying I would like the contents of

37
00:02:15.930 --> 00:02:18.510
Google dot com slash Sammons search please.

38
00:02:18.660 --> 00:02:23.700
And you're not doing anything to the server you're not adding something to the database you're not sending

39
00:02:23.730 --> 00:02:26.230
any data that is going to be inserted anywhere.

40
00:02:26.390 --> 00:02:34.740
He is only asking for retrieval of info versus if we are posting a comment on Reddit to come I'm actually

41
00:02:34.740 --> 00:02:40.560
sending data along and I'm saying Please add this comment to your database add it to the Web site and

42
00:02:40.560 --> 00:02:41.980
then send me a response.

43
00:02:42.090 --> 00:02:47.010
And that has side effects because you're actually altering something you're changing part of the backend

44
00:02:47.170 --> 00:02:52.500
to other small differences that get requests can be cached post requests can't be get requests can be

45
00:02:52.500 --> 00:02:58.620
bookmarked so any bookmark you have on your browser is a GET request post requests cannot be so tried

46
00:02:58.620 --> 00:03:05.910
to go to YouTube dot com right now I'm making a GET request and oh man there's so many things that loaded

47
00:03:06.030 --> 00:03:07.450
we look into dev tools.

48
00:03:07.680 --> 00:03:08.660
It's pretty crazy.

49
00:03:08.670 --> 00:03:11.460
But if we scroll up to the top Here's my initial request.

50
00:03:11.460 --> 00:03:14.620
It was a GET request I'm just asking for information.

51
00:03:14.670 --> 00:03:20.640
So here's one more example to show that if I go to Facebook dotcom as a GET request which is anything

52
00:03:20.640 --> 00:03:24.120
we're browsing any time I just typed up here it's a GET request.

53
00:03:24.270 --> 00:03:26.150
Let's go to the in the developer tools.

54
00:03:26.160 --> 00:03:29.800
You can see it's a get butts over here.

55
00:03:30.030 --> 00:03:32.180
I tried to sign up with.

56
00:03:32.250 --> 00:03:33.260
I knew this would fail.

57
00:03:33.300 --> 00:03:35.880
So I'm not trying to game Facebook.

58
00:03:35.970 --> 00:03:38.200
They have a that you can't have a one letter name.

59
00:03:38.250 --> 00:03:44.190
So I put a one letter name in here and it treats it like I'm trying to register.

60
00:03:44.310 --> 00:03:44.550
Right.

61
00:03:44.550 --> 00:03:49.900
It sends a request to the server but then the server is going to say oh you can't do that.

62
00:03:50.190 --> 00:03:51.040
That's not allowed.

63
00:03:51.040 --> 00:03:54.750
Like you know you need to have a longer name but it still gets to the server.

64
00:03:54.840 --> 00:03:59.160
And this information is sent to the server as part of a post request and it's right here.

65
00:03:59.280 --> 00:04:04.590
So register and if you look at the response the response is not in him.

66
00:04:04.610 --> 00:04:07.690
So we will talk about this later on in a minute.

67
00:04:07.920 --> 00:04:10.310
But the response is something called Jason.

68
00:04:10.500 --> 00:04:15.210
And if we look at it it says error message first or last names on Facebook.

69
00:04:15.360 --> 00:04:21.540
Can't be too short which is what I got up here so we'll talk about why that is and what I really want

70
00:04:21.540 --> 00:04:25.770
to focus on is that a post request was generated when I tried to sign up.

71
00:04:25.770 --> 00:04:30.300
So hopefully you can see the difference a get request is me retrieving a page like going to Facebook

72
00:04:30.540 --> 00:04:32.640
or just asking for the sign up page.

73
00:04:32.640 --> 00:04:39.270
But then when I actually try and send data it's actually sending a post request so two differences and

74
00:04:39.270 --> 00:04:40.870
from python we can do both.

75
00:04:41.040 --> 00:04:46.320
A lot of what we'll be doing and a lot of most projects not most but a lot of projects that will do

76
00:04:46.860 --> 00:04:50.700
involve retrieving data getting new stories getting jokes.

77
00:04:50.700 --> 00:04:55.560
We're just asking for information getting the weather but we're also capable of sending post requests

78
00:04:55.590 --> 00:04:56.770
through python.

79
00:04:57.150 --> 00:04:58.670
So how we would do that.

80
00:04:58.740 --> 00:05:01.170
Most of the time through an API.

81
00:05:01.520 --> 00:05:05.610
OK so now let's talk about what the heck is an API.

82
00:05:06.060 --> 00:05:09.450
OK so API stands for application programming interface.

83
00:05:09.540 --> 00:05:11.860
You've probably heard the term before.

84
00:05:12.000 --> 00:05:17.640
If you've just done any research around web development or tech it's kind of a word you hear a lot and

85
00:05:17.630 --> 00:05:24.750
all that it really means is it's a version of a web site intended for computers to talk between computers

86
00:05:24.750 --> 00:05:26.370
or between code.

87
00:05:26.420 --> 00:05:33.210
So were the Web sites we see right this is designed for a human to look at those buttons there's icons

88
00:05:33.210 --> 00:05:36.440
or big text little fields and colors.

89
00:05:36.720 --> 00:05:42.480
But if I'm sending code to find the information on this page there's not much information here there

90
00:05:42.480 --> 00:05:45.540
is maybe I don't know 200 words.

91
00:05:45.810 --> 00:05:47.400
That's probably generous not sure.

92
00:05:47.520 --> 00:05:51.060
Anyway there's a couple hundred 200 words and that's it.

93
00:05:51.060 --> 00:05:54.670
And if I just wanted that information or here I have read it Dot.

94
00:05:54.700 --> 00:05:55.950
Hope nothing bad.

95
00:05:55.960 --> 00:06:01.950
Open right now but I'm looking at here is a version of the web site intended for humans to look at.

96
00:06:02.310 --> 00:06:07.240
And those photos there's bigger text all the stuff we already talked about including ads as well.

97
00:06:07.380 --> 00:06:10.480
But as far as the information itself there's not that much here.

98
00:06:10.560 --> 00:06:11.910
So this is not an API.

99
00:06:11.940 --> 00:06:13.710
This is a human interface.

100
00:06:13.830 --> 00:06:18.970
So Reddit has a version of their web site intended for computers a k an API.

101
00:06:19.110 --> 00:06:26.430
If I just tack on Slashdot song and I hit Enter this is the exact same information that we saw on this

102
00:06:26.430 --> 00:06:27.230
page.

103
00:06:28.430 --> 00:06:34.610
But it's not presented for humans like it is here as part of HVM I'll remember if I do view developer

104
00:06:35.060 --> 00:06:40.490
view source the actual age him that sent back is kind of massive.

105
00:06:40.820 --> 00:06:42.370
There's a lot of extra stuff.

106
00:06:42.830 --> 00:06:49.220
But if we look at the API version there's still a lot here definitely a lot but it's more condensed

107
00:06:49.250 --> 00:06:54.470
and it doesn't contain all the information for making things bold or making things blue or whatever

108
00:06:54.470 --> 00:06:55.040
it is.

109
00:06:55.040 --> 00:06:57.300
So this is called an API.

110
00:06:57.300 --> 00:07:03.350
So API wise just allow us to write code that can get data from another application without having to

111
00:07:03.350 --> 00:07:06.190
understand how the application works without having to be human.

112
00:07:06.230 --> 00:07:10.620
We can just transfer data back and forth with another Web site in a really easy way.

113
00:07:10.680 --> 00:07:12.110
That's all an API is.

114
00:07:12.140 --> 00:07:13.970
So lots of Web sites have API.

115
00:07:14.000 --> 00:07:18.860
Good job has one that allows you to you know write code that can make a new repository.

116
00:07:18.860 --> 00:07:20.140
Spotify has one.

117
00:07:20.180 --> 00:07:26.210
You can write code in Python that uses the API to retrieve a list of your playlists or probably seen

118
00:07:26.210 --> 00:07:31.070
that you sign up for a web site through Facebook the only way that works is that Facebook has an API

119
00:07:31.070 --> 00:07:31.820
to allow that.

120
00:07:31.820 --> 00:07:36.350
So the whole point where we're going with this is that we'll write Python code to send a request to

121
00:07:36.370 --> 00:07:36.550
you.

122
00:07:36.620 --> 00:07:39.210
Well let's say whether dot com.

123
00:07:39.470 --> 00:07:45.020
And if I go to whether dot com in my browser as you know a human is going to give me a page with ads

124
00:07:45.050 --> 00:07:48.110
and big photos and colors and who knows what else.

125
00:07:48.140 --> 00:07:52.290
Now Barb javascript effects and animations a bunch of extra stuff.

126
00:07:52.430 --> 00:07:57.740
But if I'm just trying to build an app that displays the current temperature in you know San Francisco

127
00:07:57.740 --> 00:07:59.860
or Shanghai or something.

128
00:07:59.960 --> 00:08:05.120
All I want is a little bit of data to come back that says something like temp

129
00:08:07.860 --> 00:08:15.300
is I don't know 78 something like this Fahrenheit and that's ideally what I'd want but this is a very

130
00:08:15.300 --> 00:08:16.130
simplified.

131
00:08:16.350 --> 00:08:23.130
But if we sent a request to the correct weather dot com API which could be something like Slash API

132
00:08:23.160 --> 00:08:24.570
it's not always.

133
00:08:24.570 --> 00:08:27.570
Sometimes there are separate Web sites like API out whether dot com.

134
00:08:27.570 --> 00:08:33.030
So this is hypothetical but if I sent to if I sent a request to this particular place which is only

135
00:08:33.030 --> 00:08:39.750
intended for code and other computers to talk to I could get a cool response like this where my Python

136
00:08:39.750 --> 00:08:45.110
code can just take this and immediately do something with it rather than if I send a request to the

137
00:08:45.110 --> 00:08:47.220
dot com not to the API.

138
00:08:47.430 --> 00:08:53.740
And I look at what the response is imagine getting all of this back and having to deal with it in python.

139
00:08:53.730 --> 00:08:56.750
This could all be stored in a variable where would you even start.

140
00:08:56.760 --> 00:08:57.690
It's crazy.

141
00:08:57.780 --> 00:09:02.240
And that leads us to another topic cobwebbed web scraping which we talk about later in the course.

142
00:09:02.250 --> 00:09:06.540
So instead an API allows us to say hey we're a computer.

143
00:09:06.570 --> 00:09:10.800
We just want the information please send it back in a format that we care about.

144
00:09:10.980 --> 00:09:14.680
And there's a couple of formats there called Jason and ex-MIL.

145
00:09:14.810 --> 00:09:17.700
JASON OM stands for javascript object notation.

146
00:09:17.700 --> 00:09:22.080
If you don't know javascript don't fret about it it's just a standard data format nowadays.

147
00:09:22.140 --> 00:09:26.480
SML used to be the standard but now Jaison is the reigning king or queen.

148
00:09:26.760 --> 00:09:29.640
OK so this has been an insane crash course.

149
00:09:29.640 --> 00:09:35.990
I hope 15 20 percent of the stuck the key things we can send requests and get responses in the browser.

150
00:09:36.000 --> 00:09:37.430
We can do the same thing with Python.

151
00:09:37.440 --> 00:09:38.510
We'll see in the next video.

152
00:09:38.610 --> 00:09:45.030
And at the end of the day we specify what format we want back and certain Web sites have API eyes that

153
00:09:45.030 --> 00:09:49.950
allow us to say I want this but don't give me the time I'll give me the simplified version.

154
00:09:49.950 --> 00:09:55.270
In Jaison and that's what we're going to focus on in the next video in the next couple of videos is

155
00:09:55.270 --> 00:10:00.600
interacting with Web sites that have API API or like the special secret door.

156
00:10:00.630 --> 00:10:06.180
Not really a secret but a special door back entrance into a server that our code can take advantage

157
00:10:06.180 --> 00:10:06.590
of.

158
00:10:06.830 --> 00:10:09.430
Ok I really apologize for how long this is.

159
00:10:09.450 --> 00:10:10.750
There's just a lot to cover.

160
00:10:10.830 --> 00:10:16.290
If you are new to web development and to just the internet in general I can imagine that was pretty

161
00:10:16.290 --> 00:10:17.000
overwhelming.

162
00:10:17.190 --> 00:10:19.330
You do not need to understand all of that.

163
00:10:19.380 --> 00:10:20.590
Not even close.

164
00:10:20.610 --> 00:10:22.440
So like I said 10 15 percent.

165
00:10:22.440 --> 00:10:23.160
That's OK.

166
00:10:23.250 --> 00:10:27.290
I just want you to have heard these words before we start talking about them in Python.
