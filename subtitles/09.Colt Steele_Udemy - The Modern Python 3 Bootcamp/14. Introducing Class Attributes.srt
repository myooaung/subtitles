1
00:00:00,260 --> 00:00:00,990
All right.

2
00:00:01,020 --> 00:00:04,880
So we've seen how to define instance attributes and instance methods.

3
00:00:04,920 --> 00:00:09,850
Now we're going to talk about class attributes and then following this class methods.

4
00:00:10,020 --> 00:00:17,250
So if an instance attribute is defined on each individual instance of a class on each user object a

5
00:00:17,250 --> 00:00:22,590
class attribute is defined once and it lives on the class itself.

6
00:00:22,590 --> 00:00:25,010
So directly on the class and they are shared.

7
00:00:25,020 --> 00:00:31,020
So whatever class attributes we define are shared by all instances they kind of all point to the same

8
00:00:31,020 --> 00:00:32,430
class attribute.

9
00:00:32,700 --> 00:00:33,910
So let me show you what I mean.

10
00:00:34,140 --> 00:00:40,870
So I'm back in the same user file where I have my class User net and then a couple of instance methods.

11
00:00:41,040 --> 00:00:48,000
I'll start off by saying that class attributes and methods are used far less often than instance attributes

12
00:00:48,090 --> 00:00:49,590
and instance methods.

13
00:00:49,590 --> 00:00:54,200
But with that said this is a video on class attributes so I better come up with an example.

14
00:00:54,270 --> 00:01:00,030
And the first one I'm going to show you has to do with keeping track of how many users we've created.

15
00:01:00,030 --> 00:01:03,190
So let's say that this is modeling a chat room now.

16
00:01:03,480 --> 00:01:08,550
And I went to the Facebook Messenger and I want to know when to keep track of how many users are active

17
00:01:08,550 --> 00:01:09,500
at any given moment.

18
00:01:09,540 --> 00:01:13,730
So I could say something like five users online for users online.

19
00:01:13,740 --> 00:01:19,380
So what I'm going to do is define my class variable and the syntax for that is we just put it up here

20
00:01:19,410 --> 00:01:21,830
and we don't write self.

21
00:01:21,840 --> 00:01:27,750
So if I just define a method or a variable in here or in here if I said something like I don't know.

22
00:01:27,780 --> 00:01:29,720
Count equals zero.

23
00:01:29,730 --> 00:01:32,800
This is a variable scoped to full name.

24
00:01:32,980 --> 00:01:39,690
But if I wanted to be part of the class or defined as a class attribute I'll come up here or anywhere.

25
00:01:39,720 --> 00:01:41,460
That's not in one of those methods.

26
00:01:41,700 --> 00:01:44,960
But traditionally you do it up top let's call this one.

27
00:01:45,030 --> 00:01:48,850
Active users and set it equal to zero.

28
00:01:49,370 --> 00:01:50,000
OK.

29
00:01:50,340 --> 00:01:55,980
So what we've done now is define a class attribute called active users and it exists one time on the

30
00:01:55,980 --> 00:02:00,240
User class itself not on the individual instances of user.

31
00:02:00,750 --> 00:02:07,260
And the way we actually refer to it if I wanted to print active users I could come down here or comment

32
00:02:07,260 --> 00:02:09,010
everything out and just do print.

33
00:02:09,270 --> 00:02:13,910
And I refer to the class name user that active users.

34
00:02:13,980 --> 00:02:18,090
So I don't refer to the instances anymore just use you're not active users.

35
00:02:18,090 --> 00:02:19,710
It started it starts at zero.

36
00:02:19,740 --> 00:02:24,160
But see if we're right and we get zero OK.

37
00:02:24,360 --> 00:02:29,890
So let's say Now any time a new users initialized we're going to add one to active users.

38
00:02:30,120 --> 00:02:31,390
So we don't write self.

39
00:02:31,410 --> 00:02:35,740
It's going to be user active users plus equals 1.

40
00:02:35,760 --> 00:02:43,950
So any time a new user is created and it runs automatically This code is all for the instance self.

41
00:02:43,950 --> 00:02:48,750
So the individual instance last name age first name this is referring to the class attribute or a class

42
00:02:48,750 --> 00:02:49,540
variable.

43
00:02:49,560 --> 00:02:51,510
Active Users who we're adding one to it.

44
00:02:51,720 --> 00:02:52,250
OK.

45
00:02:52,530 --> 00:02:53,490
So let's test this out.

46
00:02:53,490 --> 00:02:58,600
We're going to print it out and then let's create or to use or so I'm going to copy this.

47
00:02:58,870 --> 00:03:00,330
Put it afterwards.

48
00:03:00,990 --> 00:03:03,220
And then let's print active users again.

49
00:03:03,270 --> 00:03:12,320
So we should see zero and then to after we create these two users let's test it cool zero and then two.

50
00:03:12,870 --> 00:03:13,450
All right.

51
00:03:13,560 --> 00:03:22,440
So we could also do something like define a method called log out and all that log out does is let's

52
00:03:22,440 --> 00:03:29,660
make it an instance method because it's going to print something like I don't know Jane logged out.

53
00:03:29,760 --> 00:03:31,250
Jane left the chat room.

54
00:03:31,370 --> 00:03:33,910
So we'll make that an F string that will return.

55
00:03:34,410 --> 00:03:39,970
And it should say self-taught first has logged out.

56
00:03:40,680 --> 00:03:45,310
But before that we're going to decrement user data active users.

57
00:03:47,900 --> 00:03:48,430
OK.

58
00:03:48,720 --> 00:03:55,170
So when log out as called on an individual instance of user We're going to refer to the class variable

59
00:03:55,170 --> 00:03:57,360
active users and subtract one from it.

60
00:03:57,360 --> 00:03:59,850
Remember there's only one copy of this at any given time.

61
00:03:59,880 --> 00:04:01,800
We could have a thousand different users.

62
00:04:01,830 --> 00:04:08,460
There's only one user that active users they're all referring to it when we write user active users.

63
00:04:08,460 --> 00:04:12,230
And then I'm going to return self-doubt first as logged out.

64
00:04:12,810 --> 00:04:14,370
Let's test this out.

65
00:04:15,000 --> 00:04:16,010
So I'll do.

66
00:04:16,140 --> 00:04:19,560
Print user 2 dot log out.

67
00:04:19,860 --> 00:04:22,520
And then let's print active users again.

68
00:04:22,980 --> 00:04:26,450
So we should see zero active users add to.

69
00:04:26,460 --> 00:04:31,110
So then we should T-2 and then we should see a log out method and then we should go down to one active

70
00:04:31,110 --> 00:04:35,700
user and moment of truth there we go 0 users.

71
00:04:35,700 --> 00:04:37,970
Then we created to then block a logged out.

72
00:04:37,980 --> 00:04:39,200
So we're left with one.
