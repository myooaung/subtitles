1
00:00:00,270 --> 00:00:04,650
All right in the last video we saw how to access individual items out of a list.

2
00:00:04,740 --> 00:00:09,140
In this video we'll see how to access all of the items out of a list at the same time.

3
00:00:09,510 --> 00:00:15,460
So suppose we had a list of numbers we could print out each item one at a time.

4
00:00:15,510 --> 00:00:18,420
Print number 0 1 2 3.

5
00:00:18,420 --> 00:00:23,820
There's short comings to this and it's a lot of text but there's also the problem of we might not know

6
00:00:23,820 --> 00:00:24,890
how many numbers are in here.

7
00:00:24,900 --> 00:00:29,240
What if there's 50 numbers or what's a shopping list and a user has added a thousand items.

8
00:00:29,250 --> 00:00:31,790
We're not going to write a thousand print statements.

9
00:00:31,920 --> 00:00:38,010
So just like before when we talked about repeating processes this is the same idea our solution is to

10
00:00:38,010 --> 00:00:42,240
use a loop we can use both a for loop and a while loop.

11
00:00:42,240 --> 00:00:44,940
And in this first example I'll show you a for loop.

12
00:00:45,000 --> 00:00:46,350
It's really nice and simple.

13
00:00:46,440 --> 00:00:51,450
The syntax to do this in Python is really clean especially compared to some other programming languages.

14
00:00:51,570 --> 00:00:59,730
So here we have a numbers list say 1 1 2 3 and 4 and all we have to do is write our FOR loop for number

15
00:00:59,730 --> 00:01:08,280
or whatever item name we want in numbers colon and number is going to automatically have the value of

16
00:01:08,400 --> 00:01:12,680
1 2 3 4 of the piece of data inside of the list.

17
00:01:12,690 --> 00:01:17,850
So let's do an example and I'll actually quit out of Python here and I'll make a new file called for

18
00:01:17,850 --> 00:01:24,930
loop and let's make our colors list those brackets.

19
00:01:24,960 --> 00:01:30,220
Let's do purple again teal and let's do magenta.

20
00:01:31,010 --> 00:01:31,650
OK.

21
00:01:31,780 --> 00:01:38,460
And if I want to print them all out on their own I would just do four and we could call it C we could

22
00:01:38,460 --> 00:01:39,090
call it color.

23
00:01:39,090 --> 00:01:41,600
It doesn't matter in colors.

24
00:01:42,150 --> 00:01:45,330
So just like before we had a range here for a for loop.

25
00:01:45,720 --> 00:01:50,940
If you remember actually really quickly in the loop section said yeah we can use a list but we don't

26
00:01:50,940 --> 00:01:52,100
know what lists are yet.

27
00:01:52,290 --> 00:01:57,020
So another one of those things we kind of have to wait unfortunately.

28
00:01:57,120 --> 00:01:58,830
So here we go we can do a print.

29
00:01:59,010 --> 00:02:04,230
The simplest thing would just be to print color and that's it.

30
00:02:04,230 --> 00:02:14,430
So color is rather than you know when we did for x in range one comment two or something or 4:59 whatever

31
00:02:14,430 --> 00:02:17,240
it is x stored a numeric value.

32
00:02:17,580 --> 00:02:21,970
In this case color will store whatever the value is in that list.

33
00:02:22,020 --> 00:02:30,180
So we could have strings but I could also add afterwards let's add true a boolean and eight point nine.

34
00:02:30,750 --> 00:02:39,390
OK so let's print this out and make some space Python 3 for loop and we get purple teal magenta.

35
00:02:39,390 --> 00:02:39,970
True.

36
00:02:40,030 --> 00:02:41,200
Eight point nine.

37
00:02:41,820 --> 00:02:47,570
So it's really simple to use a for loop to iterate through a list and we don't have to just print things

38
00:02:47,580 --> 00:02:54,900
of course I'll comment this out and we could have another list called numbers and set it equal to just

39
00:02:54,960 --> 00:02:56,450
random numbers if we wanted to.

40
00:02:56,550 --> 00:03:11,060
4 6 2 8 9 7 whatever it is 10 and we could do for numb in numbers let's you print numb times no.

41
00:03:11,180 --> 00:03:13,920
So we'll just square them simple.

42
00:03:15,060 --> 00:03:15,660
And there we go.

43
00:03:15,690 --> 00:03:18,180
We get 60 and 36 down to 100.

44
00:03:18,330 --> 00:03:18,820
Totally.

45
00:03:18,840 --> 00:03:24,770
Well not totally random but random numbers that we're printing out from a list and squaring.

46
00:03:25,050 --> 00:03:25,260
OK.

47
00:03:25,260 --> 00:03:26,670
So that's using a for loop.

48
00:03:26,850 --> 00:03:32,890
So next let's see how to do it with a WHILE loop and using a while loop is a little bit more complicated.

49
00:03:32,940 --> 00:03:35,920
It's a little more syntax that doesn't necessarily make it worse.

50
00:03:35,970 --> 00:03:40,080
And we actually talk about a situation where you would want to use a while loop but let's look at it

51
00:03:40,080 --> 00:03:40,950
first.

52
00:03:41,460 --> 00:03:42,930
So you use a while loop.

53
00:03:42,930 --> 00:03:47,670
We have to basically take advantage of the index of each item in the list.

54
00:03:47,670 --> 00:03:55,380
So we start with a variable that often is called the eye for index or id x or index or I X doesn't really

55
00:03:55,380 --> 00:03:56,430
matter.

56
00:03:56,430 --> 00:03:57,820
And we set it equal to zero.

57
00:03:58,080 --> 00:04:02,320
And what we're going to do is print out the first item number zero.

58
00:04:02,460 --> 00:04:10,100
Then we'll add one to the two I will print out numbers 1 and so on until we get to the end of the list

59
00:04:10,110 --> 00:04:11,390
the last index.

60
00:04:11,400 --> 00:04:15,540
So you can see here our loop runs well is less than the length of numbers.

61
00:04:15,780 --> 00:04:21,660
And notice it's less than not but then are equal to because length is 1 2 3 4.

62
00:04:22,080 --> 00:04:26,880
And if we tried to access numbers square bracket 4 that's out of the list range.

63
00:04:26,880 --> 00:04:30,030
So we need to do less than that Mike.

64
00:04:30,210 --> 00:04:36,120
And then all we do is access numbers and we have to add one to each time through.

65
00:04:36,120 --> 00:04:38,130
Otherwise we get an infinite loop.

66
00:04:38,160 --> 00:04:39,580
So let's go make a file.

67
00:04:39,840 --> 00:04:48,790
This time I will call it while loop IPY and I'll copy over my colors and let's actually add one more.

68
00:04:48,840 --> 00:04:54,570
How about crimson and I lied.

69
00:04:54,570 --> 00:04:55,360
I'll do two more.

70
00:04:55,380 --> 00:04:56,820
Let's do it.

71
00:04:56,850 --> 00:04:58,760
Emerald green OK.

72
00:05:00,070 --> 00:05:02,610
So what we can do now is loop through.

73
00:05:02,620 --> 00:05:06,260
So we can be using a while loop we set up an initial index variable.

74
00:05:06,370 --> 00:05:11,860
I'll call it index that needs to start at zero and thus we want it to start at the end which you could

75
00:05:11,860 --> 00:05:12,480
also do.

76
00:05:12,640 --> 00:05:15,910
Let's start with index zero and then we'll have a WHILE loop.

77
00:05:16,000 --> 00:05:22,870
So while index is less then and we want it to be less than the length of colors.

78
00:05:22,980 --> 00:05:25,890
So while it's less then one two three four or five.

79
00:05:26,620 --> 00:05:28,500
But we don't want to hard code 5.

80
00:05:28,600 --> 00:05:32,010
Because we don't know how many items are in here potentially.

81
00:05:32,020 --> 00:05:38,050
So while that's the case we could just start reprinting colors square bracket index.

82
00:05:38,710 --> 00:05:44,130
And if I left this on it's own right now it could print purple over and over and over because index

83
00:05:44,170 --> 00:05:45,270
is set to be zero.

84
00:05:45,280 --> 00:05:46,540
And we're never changing it.

85
00:05:46,840 --> 00:05:53,140
So we need to increment index plus equals 1.

86
00:05:53,160 --> 00:05:55,480
So let's give it a shot.

87
00:05:55,650 --> 00:05:59,620
Python 3 while loop IPY and there we go.

88
00:05:59,700 --> 00:06:01,400
One two three four five.

89
00:06:01,800 --> 00:06:07,680
So if all we wanted to do is print out data or just access the data directly from inside the list to

90
00:06:07,680 --> 00:06:10,370
do something with it it's much easier to use a for loop.

91
00:06:10,380 --> 00:06:16,680
In my opinion cleaner nicer looking just shorter but sometimes we might want to actually do something

92
00:06:16,680 --> 00:06:17,690
with the index.

93
00:06:17,850 --> 00:06:20,830
So with these colors this is a very silly example.

94
00:06:20,940 --> 00:06:28,500
But what if we want to print out something like zero item or have zero color is purple.

95
00:06:28,500 --> 00:06:36,120
And then one color is teal and so on we need to actually have the index available to us which we don't

96
00:06:36,120 --> 00:06:38,620
by default in the for loop.

97
00:06:39,030 --> 00:06:40,870
So we could do something like this.

98
00:06:41,090 --> 00:06:43,460
We will do a print with an F string.

99
00:06:43,860 --> 00:06:50,940
And let's do instead of here we'll add index colon.

100
00:06:51,570 --> 00:06:54,910
And then let's do colour's index.

101
00:06:55,020 --> 00:06:59,800
So this will give us zero colon purple.

102
00:06:59,910 --> 00:07:05,610
OK so we're going to add the index and interpolate that into the string and then the colors square brackets

103
00:07:05,700 --> 00:07:13,820
index so 0 and then purple one teal and let's take a look and there we go.

104
00:07:13,920 --> 00:07:15,910
Zero purple one teal and so on.

105
00:07:16,320 --> 00:07:22,440
Maybe not what you would need do all the time just printing out a list of colors isn't exactly the most

106
00:07:22,440 --> 00:07:23,400
useful thing either.

107
00:07:23,580 --> 00:07:28,410
But there definitely are situations where you may want to take advantage of the index so you could use

108
00:07:28,410 --> 00:07:31,620
a while loop to do that because you already have the index.

109
00:07:31,620 --> 00:07:34,700
But typically I prefer for a loop if you can get away with it.

110
00:07:34,760 --> 00:07:38,400
It's just so much nicer looking two options so pick the one you prefer.

111
00:07:38,400 --> 00:07:39,290
They both work.
