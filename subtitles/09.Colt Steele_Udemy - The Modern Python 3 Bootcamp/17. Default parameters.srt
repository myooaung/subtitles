1
00:00:00,300 --> 00:00:00,660
All right.

2
00:00:00,720 --> 00:00:04,020
So we've seen how to define functions with one or more parameters.

3
00:00:04,020 --> 00:00:08,270
But there's still a couple of finer points around parameters we have yet to discuss.

4
00:00:08,310 --> 00:00:13,470
And in this video we're going to talk about one of them which is setting up default parameters giving

5
00:00:13,470 --> 00:00:15,380
parameters a default value.

6
00:00:15,630 --> 00:00:18,420
So let me just illustrate what I'm referring to.

7
00:00:18,420 --> 00:00:24,730
Right now we have this square function from a couple of videos back where we just you know there's a

8
00:00:24,730 --> 00:00:28,780
single parameter numb and we return numb times numb.

9
00:00:29,060 --> 00:00:35,240
Well let's suppose I want to change this up to rather than squaring every time I'm going to change it

10
00:00:35,250 --> 00:00:40,430
to be called exponent and it will have two parameters a numb and a power.

11
00:00:40,710 --> 00:00:44,940
And it's going to return numb raised to the power.

12
00:00:45,330 --> 00:00:54,870
So as an example if we had print exponents two to the third that should return to us two times two times

13
00:00:54,870 --> 00:00:57,460
two which would give us eight.

14
00:00:57,480 --> 00:01:06,930
Same thing if we did let's say three to the second power it should return to us nine three times three.

15
00:01:07,380 --> 00:01:12,660
And right now it actually it should do that we should get eight and nine if we execute this let's verify

16
00:01:12,660 --> 00:01:18,010
that Python 3 my files called exponent Y and we get 8 and 9.

17
00:01:18,010 --> 00:01:25,380
Cool but now let's say I want a default behavior of the most common operation or the most common exponential

18
00:01:25,380 --> 00:01:27,470
operation is usually to square something.

19
00:01:27,510 --> 00:01:32,890
So let's say if I don't pass in a power it should default to 2.

20
00:01:33,060 --> 00:01:35,640
So that we should square thinks this should still return 9.

21
00:01:35,730 --> 00:01:37,310
And this should still return 8.

22
00:01:37,440 --> 00:01:43,000
And let's add one more and if I just passed in seven it should be forty nine.

23
00:01:43,020 --> 00:01:46,020
So these will have a default value for power.

24
00:01:46,410 --> 00:01:50,160
And if we specify a value it should override the default.

25
00:01:50,160 --> 00:01:56,910
But if we try this right now there's a problem and the problem is after the first one runs when we don't

26
00:01:56,910 --> 00:01:59,460
provide a power This error is triggered.

27
00:01:59,460 --> 00:02:03,070
Missing one required positional argument power power is required.

28
00:02:03,150 --> 00:02:04,470
So how do we fix this.

29
00:02:04,470 --> 00:02:09,390
And the answer is we just need a little bit of magical syntax inside the function definition.

30
00:02:09,510 --> 00:02:14,040
Right after the parameter we can get an equal sign and then a default value.

31
00:02:14,460 --> 00:02:21,870
So this right here power equals to basically says if no power is specified by default it should be set

32
00:02:21,870 --> 00:02:22,590
to 2.

33
00:02:22,920 --> 00:02:25,070
And now our code doesn't break anymore.

34
00:02:25,230 --> 00:02:26,400
Let's test it out.

35
00:02:26,580 --> 00:02:29,110
And now we get eight nine and forty nine.

36
00:02:29,130 --> 00:02:30,090
It's working.

37
00:02:30,090 --> 00:02:34,110
This is also the exact same idea powering things like pop.

38
00:02:34,110 --> 00:02:41,400
So we've seen pop before Here's a list of countries and I'm able to do country pop and specify an index

39
00:02:41,460 --> 00:02:46,100
like zero in which case it takes an index and removes the first.

40
00:02:46,100 --> 00:02:48,070
It removes the item at that index.

41
00:02:48,180 --> 00:02:54,570
So countries is now shorter but I can also do countries and not specify an index and by default the

42
00:02:54,570 --> 00:02:57,940
index will be the last index in the list.

43
00:02:58,140 --> 00:03:01,570
Oh well I think that's kind of failed.

44
00:03:01,590 --> 00:03:08,460
I need to actually call pop just two countries parentheses now for two countries that pop without specifying

45
00:03:08,460 --> 00:03:10,360
an index.

46
00:03:10,530 --> 00:03:13,080
It defaults to removing the last item.

47
00:03:13,080 --> 00:03:14,380
We've done the same thing here.

48
00:03:14,430 --> 00:03:18,860
If you don't pass in a power it defaults to to back to the slides.

49
00:03:19,290 --> 00:03:24,970
Here's a couple of examples here we have an add function with two default parameter values.

50
00:03:24,990 --> 00:03:33,600
So if you don't pass in either a or b then we just get 10 plus 20 A defaults 10 B defaults to 20 if

51
00:03:33,600 --> 00:03:40,830
you've left one off like if we passed in just five then a would be equal to 5 and B would be equal to

52
00:03:40,830 --> 00:03:41,460
20.

53
00:03:41,940 --> 00:03:46,390
Or we override them both by passing in our own values.

54
00:03:46,410 --> 00:03:48,780
Here's another more complex example.

55
00:03:48,780 --> 00:03:52,200
It's called show information and there's two parameters.

56
00:03:52,200 --> 00:03:59,940
First name and is instructor first name defaults to Colt is instr. defaults to false and all that it

57
00:03:59,940 --> 00:04:05,760
does is it checks if the first name is called and is instructor is true we print Welcome back.

58
00:04:05,910 --> 00:04:12,140
Cold If first name is Colt and is instructor is is false because that's the only other option.

59
00:04:12,330 --> 00:04:14,140
Will print or we return.

60
00:04:14,160 --> 00:04:15,950
I really thought you were an instructor.

61
00:04:16,020 --> 00:04:20,100
And lastly we just return Hello whatever the first name is.

62
00:04:20,100 --> 00:04:21,260
It's been passed in.

63
00:04:21,540 --> 00:04:24,910
So let's talk about why these default harams are so useful.

64
00:04:25,080 --> 00:04:28,060
If we take an example like pop we used it all the time.

65
00:04:28,290 --> 00:04:32,160
It works in two different well that's the same thing but in two different ways.

66
00:04:32,160 --> 00:04:32,660
Right.

67
00:04:32,670 --> 00:04:37,410
It will either by default remove the last item or we pass an index and it removes that index.

68
00:04:37,470 --> 00:04:42,420
We use it in both situations and there's no reason to have two separate functions to do that.

69
00:04:42,600 --> 00:04:45,870
You know just have a remove last or remove by index.

70
00:04:45,930 --> 00:04:47,930
Instead we put them together in pop.

71
00:04:48,060 --> 00:04:54,390
So in a way it makes our code more flexible but also without default parameters we often can have errors

72
00:04:54,600 --> 00:04:58,960
when we tried to run xponent without passing in a required power.

73
00:04:59,460 --> 00:05:00,520
It actually just broke.

74
00:05:00,540 --> 00:05:02,430
There was an error and it got mad at us.

75
00:05:02,430 --> 00:05:06,990
Python said you know I expected exactly two arguments and I only got one what's going on.

76
00:05:07,050 --> 00:05:11,130
So we can avoid those sorts of errors by actually using default harams.

77
00:05:11,270 --> 00:05:18,550
Lastly let's talk about the values that default parameters can be so they can actually be anything.

78
00:05:18,630 --> 00:05:20,910
Lisp dictionary strings Bullen's.

79
00:05:20,910 --> 00:05:22,290
And what I want to highlight here.

80
00:05:22,350 --> 00:05:24,550
They can actually be other functions.

81
00:05:24,930 --> 00:05:28,720
So here's an example and this one if you haven't seen if you haven't worked with them.

82
00:05:28,740 --> 00:05:33,070
The programming language for this one might mess with your head a little bit.

83
00:05:33,210 --> 00:05:38,990
But if we look at what we have first up there's a function called add no default values or default parameters

84
00:05:39,000 --> 00:05:41,220
just it takes two numbers and adds them together.

85
00:05:41,580 --> 00:05:47,110
Same thing with subtract we have subtract it which just takes 2 numbers and subtracts a minus B.

86
00:05:47,730 --> 00:05:54,840
But then we have this one called math and math takes two numbers a and b and something called F N which

87
00:05:54,870 --> 00:06:02,220
is going to be a function and it defaults to add and what happens here instead of math.

88
00:06:02,250 --> 00:06:08,190
It just takes whatever the function is that's passed in and it executes it with a and b.

89
00:06:08,190 --> 00:06:17,730
So in this first example math to come to a is to B is 2 and No f n was provided so it defaults to add.

90
00:06:17,730 --> 00:06:25,270
So add 2 comma 2 which then calls add a peer which returns 2 plus 2 which is 4.

91
00:06:25,380 --> 00:06:29,560
So we have a default value default parameter which is a function.

92
00:06:29,580 --> 00:06:37,750
In this case add referring to this or we could do math to comma two and then pass and subtract.

93
00:06:37,920 --> 00:06:42,360
And in this case is to be asked to F N is subtract.

94
00:06:42,390 --> 00:06:49,560
So then it calls return subtract 2 common to which then run subtract and we return to minus 2 which

95
00:06:49,560 --> 00:06:50,190
is zero.

96
00:06:50,340 --> 00:06:55,920
So I apologize if this confuses you more but I just wanted to show you that a default parameter is not

97
00:06:56,010 --> 00:06:58,120
limited to a string or an integer.

98
00:06:58,140 --> 00:07:03,390
It could be a list dictionary or even another function like we have here.

99
00:07:03,390 --> 00:07:03,770
OK.

100
00:07:03,870 --> 00:07:07,300
So here I have the exact same code in a sublime text file.

101
00:07:07,380 --> 00:07:10,860
But let's instead of putting our default parameter at the end.

102
00:07:10,950 --> 00:07:14,470
Let's put it at the beginning.

103
00:07:15,060 --> 00:07:17,890
There's going to be a problem I mean first off right off the bat.

104
00:07:18,000 --> 00:07:24,770
This function called down here is going to have function B to A is 2 and then B is subtract which is

105
00:07:24,780 --> 00:07:25,920
going to mess everything up.

106
00:07:26,070 --> 00:07:28,440
But even ignoring that here's the problem.

107
00:07:28,440 --> 00:07:30,670
If I just want to add four and five.

108
00:07:30,870 --> 00:07:34,190
I know that function f and by default is ADD.

109
00:07:34,290 --> 00:07:40,080
So I don't pass that in and I just do four and five and I'm trying to do a is for and B is 5.

110
00:07:40,080 --> 00:07:43,770
It's not going to work because these parameters are assigned in order.

111
00:07:43,770 --> 00:07:49,020
So four is assigned to F and 5 is assigned to a.

112
00:07:49,200 --> 00:07:51,000
And then there's nothing assigned to B.

113
00:07:51,000 --> 00:07:58,340
It has no default parameter so it just throws an error so we have to make sure that our default parameters

114
00:07:58,490 --> 00:08:05,450
either go at the end or that every single parameter has a default value but we can't have one go at

115
00:08:05,450 --> 00:08:10,460
the beginning and then be followed by something that doesn't have a default because then Python gets

116
00:08:10,460 --> 00:08:11,240
confused.

117
00:08:11,300 --> 00:08:17,630
It just assigns things in order and then we end up one parameter short so hopefully that made sense.

118
00:08:17,630 --> 00:08:21,060
I think this video is getting a little bit long so I'm going to end it here.
