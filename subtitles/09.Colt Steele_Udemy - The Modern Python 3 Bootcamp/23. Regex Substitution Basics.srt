1
00:00:00,150 --> 00:00:01,430
Hey welcome back.

2
00:00:01,470 --> 00:00:07,200
The last big topic around projects that we'll talk about has to do with substitutions or finding and

3
00:00:07,200 --> 00:00:12,140
replacing things in text based off of a regular expression pattern.

4
00:00:12,180 --> 00:00:13,820
Another very common use case.

5
00:00:13,860 --> 00:00:19,740
Before we dive into the specifics I just want to highlight at the bottom of the documentation on the

6
00:00:19,740 --> 00:00:21,010
Python docs.

7
00:00:21,080 --> 00:00:25,110
There's a nice little overview of some common problems with regular expressions.

8
00:00:25,110 --> 00:00:30,030
And one of the big points that it makes is that you may not always need to use a regular expression.

9
00:00:30,030 --> 00:00:36,750
So if you're trying to match a fixed string or a single character and you know you're not using things

10
00:00:36,750 --> 00:00:40,830
like ignore case then regular expressions might be overpowered.

11
00:00:40,950 --> 00:00:46,610
Strings have some of those methods already in place to help you find things or substitute things.

12
00:00:46,710 --> 00:00:52,320
So you know you could use the replace method for example if I click on this you just give it a what

13
00:00:52,320 --> 00:00:53,210
you trying to replace.

14
00:00:53,220 --> 00:00:55,690
And then what you want to replace it with and it will do that.

15
00:00:55,830 --> 00:01:02,640
So if I'm trying to replace the curse word the F word exactly the F word and nothing else.

16
00:01:02,730 --> 00:01:05,610
And I want to replace it with stars or something.

17
00:01:05,670 --> 00:01:10,470
It would probably be best to use the string method replace But if instead I'm trying to replace something

18
00:01:10,470 --> 00:01:15,390
that's like phone numbers I'm trying to replace phone numbers in the string and block them out with

19
00:01:15,390 --> 00:01:19,770
the Stars so that people can't you know see the number I'm releasing some document I don't want the

20
00:01:19,770 --> 00:01:25,650
numbers in there it would be better or really only doable using a regular expression or you could do

21
00:01:25,650 --> 00:01:30,930
it yourself manually and like iterate through the string at each index and check it would be a nightmare.

22
00:01:30,930 --> 00:01:32,610
So string don't replace wouldn't work.

23
00:01:32,640 --> 00:01:33,640
Just keep that in mind.

24
00:01:33,660 --> 00:01:36,340
Sometimes there are things you can do without a regular expression.

25
00:01:36,540 --> 00:01:37,060
OK.

26
00:01:37,350 --> 00:01:40,390
But we are in a reject section after all.

27
00:01:40,440 --> 00:01:44,190
And we're going to talk about the sub method very useful.

28
00:01:44,220 --> 00:01:52,080
What it will do you compile a pattern first then use that pattern we call sub with it and we specify

29
00:01:52,350 --> 00:01:55,480
what we want to replace that pattern with.

30
00:01:55,530 --> 00:01:56,600
This is the replacement.

31
00:01:56,610 --> 00:02:02,040
The first argument and the second argument is the string that we're going to replace things in.

32
00:02:02,050 --> 00:02:03,300
So let me show you an example.

33
00:02:03,480 --> 00:02:09,090
Let's say that I have a classified document here very short classified document.

34
00:02:09,150 --> 00:02:15,780
Last night Mrs. Dezi and Mr. White murdered Mr. Chao and I want to remove the names to protect their

35
00:02:15,780 --> 00:02:17,150
privacy.

36
00:02:17,160 --> 00:02:24,540
So what I need to do is basically select anything that starts with the pattern misses period or Mr.

37
00:02:24,540 --> 00:02:25,270
Period or.

38
00:02:25,290 --> 00:02:26,950
Well we don't have a Ms.

39
00:02:26,970 --> 00:02:28,290
Let's do that.

40
00:02:28,290 --> 00:02:35,280
Now we do I want to select that followed by a name that comes afterwards.

41
00:02:35,310 --> 00:02:36,670
So how are we going to do this.

42
00:02:36,930 --> 00:02:39,040
Well let's define our pattern first.

43
00:02:39,060 --> 00:02:44,530
So are e compile save it to a variable called pattern.

44
00:02:44,660 --> 00:02:47,980
Are you compile our rostering.

45
00:02:48,060 --> 00:02:55,520
And we'll start with select Mr. or Mrs. or Ms.

46
00:02:55,690 --> 00:03:00,750
And we put parens around that because we only want one of these or works.

47
00:03:00,990 --> 00:03:03,430
And then there is a letter.

48
00:03:03,810 --> 00:03:09,120
Let's just do a to z rather than upper case and you have to worry about that and then we'll do our IID

49
00:03:09,120 --> 00:03:11,500
dot ignore case are you dumb.

50
00:03:11,550 --> 00:03:15,120
I saw more than one and that should work for us.

51
00:03:15,120 --> 00:03:16,100
That should match it.

52
00:03:16,320 --> 00:03:17,570
So Mr.

53
00:03:17,590 --> 00:03:18,160
MRS.

54
00:03:18,210 --> 00:03:20,130
Mr Mrs or Ms.

55
00:03:20,130 --> 00:03:22,620
Followed by A to Z.

56
00:03:23,000 --> 00:03:25,460
And let's just make sure that it's matching.

57
00:03:25,560 --> 00:03:35,560
So if we just start if we use a let's do pattern find all and then we'll find all of the text.

58
00:03:35,590 --> 00:03:36,950
That's the name of our string.

59
00:03:37,270 --> 00:03:38,320
Let's print the result.

60
00:03:38,320 --> 00:03:42,810
Remember this returns instead of a match object it just returns a list.

61
00:03:43,060 --> 00:03:44,300
I have it spelled correctly.

62
00:03:44,440 --> 00:03:45,110
OK.

63
00:03:45,340 --> 00:03:49,620
And if I run the file you'll see that it looks like it's not working.

64
00:03:49,840 --> 00:03:52,810
It looks like it's only it's only matching Ms.

65
00:03:52,870 --> 00:03:53,500
Geez.

66
00:03:53,530 --> 00:03:55,300
Mrs Mr and Ms.

67
00:03:55,300 --> 00:03:58,900
That's because the way I find all works if instead of find.

68
00:03:58,930 --> 00:04:09,580
We did search and let's do say variable let's just do actually print patterned out search text dot group

69
00:04:09,790 --> 00:04:12,370
like that.

70
00:04:12,510 --> 00:04:16,520
You'll see that it matches the first thing it returns because that's what search does.

71
00:04:16,620 --> 00:04:18,700
It only gives the first match.

72
00:04:18,840 --> 00:04:20,730
It does give us Mrs. Daisy.

73
00:04:20,930 --> 00:04:22,750
It was not just matching the misses.

74
00:04:22,860 --> 00:04:28,880
It's just that when we use find doll it uses that first group here rather than the entire match.

75
00:04:28,890 --> 00:04:31,060
It's kind of annoying anyway.

76
00:04:31,470 --> 00:04:33,860
What we want to do is use sub which is pattern.

77
00:04:33,900 --> 00:04:37,000
So what do we want to replace it with.

78
00:04:37,290 --> 00:04:40,200
Just write read redacted or something like that.

79
00:04:40,410 --> 00:04:43,440
And what are we replacing in the string text.

80
00:04:43,680 --> 00:04:51,210
So we're using this pattern and we're ignoring case this will match this right here.

81
00:04:51,210 --> 00:04:58,250
This right here and this right here and then we're going to replace it all with redacted each instance

82
00:04:59,190 --> 00:05:02,970
and then let's do print let's just print the result of that.

83
00:05:03,150 --> 00:05:08,870
Let's save it to a variable and then print results.

84
00:05:08,910 --> 00:05:10,290
Here we go.

85
00:05:10,320 --> 00:05:11,270
There we go.

86
00:05:11,280 --> 00:05:14,780
Last night redacted and redacted murdered redacted.

87
00:05:15,060 --> 00:05:15,430
OK.

88
00:05:15,480 --> 00:05:19,530
So that's good but maybe it would be better if we changed it a bit.

89
00:05:19,590 --> 00:05:23,970
What if we could do something like last night Mrs..

90
00:05:24,300 --> 00:05:33,760
And then D and Mr. W so that we still can keep track of who is who.

91
00:05:33,840 --> 00:05:34,980
Rather than redacted.

92
00:05:34,980 --> 00:05:40,530
I mean imagine there's you know a whole police report with like 20 sentences plus if it just said redacted

93
00:05:40,530 --> 00:05:42,830
over and over and over it would be very difficult.

94
00:05:42,840 --> 00:05:45,790
So if we do this instead it should be easier.

95
00:05:46,260 --> 00:05:51,900
But this is harder because I mean how do we do that right now replacing them all with the exact same

96
00:05:51,900 --> 00:06:00,300
thing redacted and it's replacing everything or just replacing the misses and the space in between.

97
00:06:00,360 --> 00:06:08,760
And the name what would you want to do is actually just replace this part and this part and that part.

98
00:06:08,760 --> 00:06:09,860
So it's kind of hard.

99
00:06:09,960 --> 00:06:11,100
Well it seems hard.

100
00:06:11,220 --> 00:06:14,160
What we can do is take advantage of capture groups.

101
00:06:14,250 --> 00:06:18,490
We already have a capture group here and we can work with that.

102
00:06:18,630 --> 00:06:19,730
There's a special syntax.

103
00:06:19,740 --> 00:06:25,050
It's kind of bizarre that allows us to reference capture groups and see if we can find it here.

104
00:06:25,050 --> 00:06:29,610
Looks like this backslash G for group.

105
00:06:29,790 --> 00:06:36,040
And then in brackets angle brackets a number and that's of course that will correspond to running group

106
00:06:36,160 --> 00:06:37,550
1.

107
00:06:37,740 --> 00:06:43,950
Also if we give Remember this from earlier for we can add a name to catch capture group you can refer

108
00:06:43,950 --> 00:06:48,100
to it in there just like you would use a number you can use the name.

109
00:06:48,300 --> 00:06:50,150
I'll just use the number though.

110
00:06:50,220 --> 00:06:52,590
So this is group 1.

111
00:06:52,680 --> 00:06:58,860
So if I wanted to just do Mr. redacted Mrs. redacted MS redacted get rid of the last name I already

112
00:06:58,860 --> 00:06:59,260
have.

113
00:06:59,270 --> 00:07:01,430
Mr. Mrs. and MS in a group.

114
00:07:01,620 --> 00:07:04,300
So I'm going to reference backslash G.

115
00:07:05,140 --> 00:07:13,080
One which is going to give us whatever the result was the first capture group and out of space.

116
00:07:13,130 --> 00:07:19,740
And if we look at the result now we get last night Mrs. redacted and Mr. redacted murdered MS redacted.

117
00:07:19,740 --> 00:07:29,210
If I didn't have the space in there or if I changed the order like this I'm swapping them you get last

118
00:07:29,210 --> 00:07:32,960
night redacted misses and redacted Mr. murdered redacted Ms.

119
00:07:33,220 --> 00:07:36,250
OK so hopefully you can see how that all works.

120
00:07:36,250 --> 00:07:40,510
It's kind of a weird syntax to use this but this is how it works.

121
00:07:40,580 --> 00:07:43,880
It's matching whatever the first group was.

122
00:07:43,910 --> 00:07:49,470
So if I wanted to continue on and include the first letter we have to get a little fancier.

123
00:07:49,610 --> 00:07:51,140
We need to differentiate.

124
00:07:51,140 --> 00:07:53,500
Right now we're just getting all of the letters.

125
00:07:53,500 --> 00:07:55,360
Like it's just Mr. Mrs. and Miss.

126
00:07:55,370 --> 00:08:01,580
And then any letters afterwards until you hit a space or at least we first want to capture the first

127
00:08:01,580 --> 00:08:02,580
letter.

128
00:08:02,660 --> 00:08:04,350
So it's just going to be a.

129
00:08:04,460 --> 00:08:09,380
I'm not going to specify it has to be capitalized because maybe there's you know Mr. White like that

130
00:08:09,620 --> 00:08:17,180
and I'm going to capture that in the group and then afterwards any number of letters following that.

131
00:08:17,690 --> 00:08:27,300
So what that will now allow us to do is also reference backslash g to and I can get rid of the redacted

132
00:08:27,300 --> 00:08:28,280
part.

133
00:08:28,500 --> 00:08:30,470
So it's going to capture this.

134
00:08:30,530 --> 00:08:35,820
It's going to capture a single letter and then any other letters afterwards are not being captured in

135
00:08:35,820 --> 00:08:36,680
the group right now.

136
00:08:36,750 --> 00:08:38,590
But it's still matching them.

137
00:08:38,970 --> 00:08:45,240
And then I can just take first group space group too and that should give us Mrs. D.

138
00:08:45,270 --> 00:08:47,760
Mr. W let's see if it works.

139
00:08:49,690 --> 00:08:50,540
It does.

140
00:08:50,950 --> 00:08:51,720
Mrs. D.

141
00:08:51,730 --> 00:08:54,460
And Mr. W murdered Mrs. or Ms.

142
00:08:54,460 --> 00:08:55,380
C..

143
00:08:55,630 --> 00:08:56,180
Awesome.

144
00:08:56,560 --> 00:08:59,380
So that's the basics of using sub.

145
00:08:59,770 --> 00:09:06,430
You can just directly substitute for a string that you hard code in or you can reference parts capture

146
00:09:06,430 --> 00:09:11,230
groups that you went and added in using parentheses in the regular expression itself.

147
00:09:11,230 --> 00:09:14,660
This is pretty powerful stuff if you're trying to do this on your own.

148
00:09:14,770 --> 00:09:18,140
It would be a lot more work if you weren't using regular expressions.
