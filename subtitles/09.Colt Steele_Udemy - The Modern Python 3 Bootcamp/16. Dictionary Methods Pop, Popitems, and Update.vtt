WEBVTT
1
00:00:00.230 --> 00:00:04.700
OK so pushing on with our dictionary methods we have three more to talk about.

2
00:00:04.950 --> 00:00:10.470
So the first one is pop and if you remember back to the list methods video when we talked about pop

3
00:00:10.770 --> 00:00:13.200
it was a way to remove an item from a list.

4
00:00:13.200 --> 00:00:18.360
So the same thing in a dictionary but it's a bit different in that we have to provide the key of what

5
00:00:18.360 --> 00:00:20.570
we want to remove.

6
00:00:20.680 --> 00:00:24.960
So we have to provide the key like this right here.

7
00:00:24.970 --> 00:00:29.120
The Pop A and D is this dictionary.

8
00:00:29.350 --> 00:00:32.880
It's then going to remove the key value pair where the key is.

9
00:00:33.130 --> 00:00:35.590
So then we end up with C and B and that's it.

10
00:00:36.410 --> 00:00:43.210
And also if you try and pop something that doesn't exist in there like e it will give you an error.

11
00:00:43.250 --> 00:00:46.830
So here is an example we have instructors still perfect.

12
00:00:46.850 --> 00:00:53.180
Let's say I want to remove Owen's dog because my dog sadly passed away.

13
00:00:53.450 --> 00:01:03.230
Let's do instructor dot pop owns underscore dog and it returns true because that is the value that has

14
00:01:03.230 --> 00:01:04.720
been removed the corresponding value.

15
00:01:04.720 --> 00:01:07.220
Just like with a list when we pop something.

16
00:01:07.250 --> 00:01:09.840
If you remember we could remove it.

17
00:01:09.860 --> 00:01:13.300
But then the second thing you said it returned the value of what was removed.

18
00:01:13.310 --> 00:01:17.540
So in a dictionary it doesn't return the key because we're giving it the key.

19
00:01:17.540 --> 00:01:18.460
So we already have that.

20
00:01:18.560 --> 00:01:21.510
But it does return the value and if we look at instr. again.

21
00:01:21.650 --> 00:01:24.180
Now on dog is gone.

22
00:01:24.560 --> 00:01:29.360
And unlike a list where we could pop we could do something like.

23
00:01:29.570 --> 00:01:36.320
Pop and not pass anything in and it would just pick the last thing that doesn't work in a dictionary

24
00:01:36.320 --> 00:01:37.820
because there's no order.

25
00:01:37.820 --> 00:01:45.010
So if I just try instr. up pop I get an error expected at least when arguments got zero.

26
00:01:45.020 --> 00:01:46.120
Same thing.

27
00:01:46.190 --> 00:01:51.310
Get a different error but if I try and remove something that doesn't exist like e-mail I get a key error

28
00:01:51.350 --> 00:01:55.110
because it can't find anything with the key of e-mail.

29
00:01:55.130 --> 00:02:00.830
So if we did want to just randomly delete something even though there is no order like a list if you

30
00:02:00.830 --> 00:02:05.370
just wanted to remove anything from a dictionary enter pop item.

31
00:02:05.420 --> 00:02:07.170
So pop item does just that.

32
00:02:07.280 --> 00:02:08.870
We don't provide any data to it.

33
00:02:08.870 --> 00:02:10.100
We don't pass a key.

34
00:02:10.190 --> 00:02:13.440
It will just pick something at random to remove from a dictionary.

35
00:02:13.820 --> 00:02:15.450
So here we go instructor.

36
00:02:15.470 --> 00:02:18.790
Pop item.

37
00:02:18.890 --> 00:02:24.350
And so it removed the key 44 which was set to my favorite number.

38
00:02:24.350 --> 00:02:28.800
We could do it one more time and this time it removed is hilarious.

39
00:02:28.940 --> 00:02:30.300
Which was set to false.

40
00:02:30.460 --> 00:02:32.910
And if you look at instructor both of those are gone.

41
00:02:33.320 --> 00:02:39.830
And if I did try and pass something in like I wanted to remove name it gets mad at me and says Hey Pop

42
00:02:39.830 --> 00:02:42.290
item takes no arguments and you gave me one.

43
00:02:42.560 --> 00:02:44.640
So that's pretty much it to pop item.

44
00:02:44.750 --> 00:02:46.490
It will remove something at random.

45
00:02:46.580 --> 00:02:50.700
Oh and as for what this is here we'll learn in the next section.

46
00:02:50.720 --> 00:02:52.660
It's not a list and it's not a dictionary.

47
00:02:52.670 --> 00:02:53.760
It's something else.

48
00:02:54.940 --> 00:02:56.860
Lastly we have updated.

49
00:02:57.040 --> 00:03:04.780
So what update will do is it will take a list and update a set of keys and values into another list.

50
00:03:04.790 --> 00:03:06.760
So let me just show an example here.

51
00:03:06.760 --> 00:03:13.060
Here we have first which is a dictionary the same one we've been working with is one B is to and so

52
00:03:13.060 --> 00:03:13.460
on.

53
00:03:13.630 --> 00:03:16.710
And then we have an empty dictionary set to a variable named second.

54
00:03:16.850 --> 00:03:24.870
And if I do second update first what it will do is take everything in first and add it to second.

55
00:03:25.510 --> 00:03:27.250
So let's take a look now.

56
00:03:27.640 --> 00:03:32.310
It doesn't look like your instructor still has a couple of properties in there.

57
00:03:32.590 --> 00:03:39.770
So let me make another variable and this one I will call person and person I won't just make it empty

58
00:03:39.790 --> 00:03:49.530
let me add one thing in here like let's do City which is going to be sent to San Francisco too much.

59
00:03:49.540 --> 00:03:52.580
Let's do Antigua in Guatemala.

60
00:03:52.800 --> 00:03:53.440
OK.

61
00:03:53.620 --> 00:03:54.670
Just like that.

62
00:03:54.760 --> 00:04:02.110
And if I run person update instructor what it's going to do is take all these key value pairs from instructor

63
00:04:02.110 --> 00:04:03.740
and add them into person.

64
00:04:04.090 --> 00:04:06.860
So it won't overwrite city and remove it.

65
00:04:07.270 --> 00:04:13.690
But if we look at person now it contained city Antigua and then name and of course his favorite language

66
00:04:14.050 --> 00:04:16.170
and instructor is unchanged.

67
00:04:17.760 --> 00:04:23.940
I should also mention though if we do change something let's say in person I changed name and I reset

68
00:04:23.940 --> 00:04:26.240
it to rather than cold.

69
00:04:26.240 --> 00:04:29.350
How about we go with a Velia like this.

70
00:04:29.550 --> 00:04:38.160
And I look at person now name is Velia if I run update again it will overwrite name and change it to

71
00:04:38.400 --> 00:04:39.510
the name from person.

72
00:04:39.720 --> 00:04:42.870
So it doesn't just add values and keys and values that aren't there.

73
00:04:42.870 --> 00:04:45.630
It will also overwrite the ones that are there.

74
00:04:45.630 --> 00:04:50.090
So for that person now its name is back to cold.

75
00:04:50.210 --> 00:04:58.680
And last note about it if I tried to do you know person that update and they give an empty dictionary.

76
00:04:59.010 --> 00:05:00.370
OK person.

77
00:05:02.210 --> 00:05:03.280
It doesn't do anything.

78
00:05:03.290 --> 00:05:05.850
So it's not going to remove things.

79
00:05:05.930 --> 00:05:09.840
It's only going to be additive or updated updated.

80
00:05:09.890 --> 00:05:15.890
It's going to edit the properties and overwrite them but it won't remove them if we pass in an empty

81
00:05:15.890 --> 00:05:18.550
dictionary or something that contains fewer properties.

82
00:05:18.690 --> 00:05:20.330
OK so that update.

83
00:05:20.480 --> 00:05:28.160
We also saw a pop item to get rid of a random key value in a dictionary and pop which forces us to specify

84
00:05:28.160 --> 00:05:31.070
what we want to remove by giving a key.

85
00:05:31.070 --> 00:05:34.240
And that wraps up these two videos on dictionary methods.

86
00:05:34.250 --> 00:05:36.760
Next we're going to go in a slightly different direction.

87
00:05:36.800 --> 00:05:42.800
Take a break from the slide and just looking at new methods and syntax we're actually going to try modeling

88
00:05:42.800 --> 00:05:47.410
something a bit more complex using nested lists and dictionaries to model playlists.

89
00:05:47.420 --> 00:05:48.680
From my spotify account.
