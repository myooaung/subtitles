WEBVTT
1
00:00:00.180 --> 00:00:00.620
All right.

2
00:00:00.630 --> 00:00:01.620
Welcome back.

3
00:00:01.620 --> 00:00:07.210
So this video is about sort of a weird topic called truthiness and falseness.

4
00:00:07.260 --> 00:00:12.690
I wasn't sure how to spell falseness So I just just left it off but it's about both.

5
00:00:12.690 --> 00:00:17.490
So we established in the last video that in a conditional check and a conditional statement there is

6
00:00:17.490 --> 00:00:21.320
an expression and it always evaluates to be true or false.

7
00:00:21.540 --> 00:00:24.210
So there's no gray area in between.

8
00:00:24.210 --> 00:00:29.310
So this is slightly new this isn't really the focus of the video though but there is something called

9
00:00:29.400 --> 00:00:32.200
is that we'll talk about actually in a future video.

10
00:00:32.220 --> 00:00:37.700
It's very similar to double equal sign where we check for equality but there's a slight difference.

11
00:00:37.890 --> 00:00:42.270
But in this example x is equal to once with variable x set it to 1.

12
00:00:42.570 --> 00:00:45.570
When we run X is one we get true.

13
00:00:45.900 --> 00:00:48.680
And X is zero or any other number.

14
00:00:48.780 --> 00:00:49.750
We get false.

15
00:00:49.780 --> 00:00:51.240
There's no gray area in between.

16
00:00:51.240 --> 00:00:52.740
It's a yes or no.

17
00:00:52.740 --> 00:00:59.170
So this here this is a truthy expression and this is a falsie expression.

18
00:00:59.280 --> 00:01:01.320
So that's pretty straightforward.

19
00:01:01.470 --> 00:01:08.790
But really with this video is about is that values on their own single individual values not full expressions

20
00:01:08.790 --> 00:01:09.780
like this.

21
00:01:09.780 --> 00:01:14.550
They can have or they do have an inherent truthiness or faultiness.

22
00:01:14.760 --> 00:01:19.930
I feel like I'm you know talking about like politicians or something talking about truthiness and falseness.

23
00:01:19.950 --> 00:01:21.980
But here's a couple of examples.

24
00:01:22.750 --> 00:01:27.910
So things that are naturally false on their own include empty strings.

25
00:01:27.910 --> 00:01:34.790
And I'm going to demonstrate office the value none which we briefly touched on and zero numbers zero.

26
00:01:34.900 --> 00:01:38.100
So those are all on their own are false.

27
00:01:38.470 --> 00:01:45.220
So when I say that they're false on their own it doesn't mean that just by referencing zero the entire

28
00:01:45.220 --> 00:01:46.330
thing is going to be false.

29
00:01:46.380 --> 00:01:48.460
Let me open a Python 3 here.

30
00:01:48.460 --> 00:01:50.220
I could do something like this.

31
00:01:50.320 --> 00:01:57.610
Let's say if I did just if zero very bland and by the way I'm going to do a conditional statement in

32
00:01:57.610 --> 00:02:00.200
the REPL here in the shell.

33
00:02:00.370 --> 00:02:05.700
You can do that and it will basically force you to go to a new line when I hit enter.

34
00:02:06.160 --> 00:02:08.630
And it gives you the three dots saying I'm waiting.

35
00:02:08.630 --> 00:02:13.150
So I mean indent and I'll just do ePrint.

36
00:02:13.720 --> 00:02:16.520
Yea it doesn't really matter what we put here.

37
00:02:16.840 --> 00:02:26.590
So this print will only run if this is truthy if this evaluates to true and all we have is zero.

38
00:02:26.590 --> 00:02:31.150
So on its own I have to hit enter one more time by the way to tell Python Ok I'm done.

39
00:02:32.190 --> 00:02:40.250
And nothing prints but if I try that whole thing again and I change it to the number one and this time

40
00:02:40.250 --> 00:02:41.390
I do print.

41
00:02:41.910 --> 00:02:42.640
Yay.

42
00:02:43.000 --> 00:02:50.180
Questionmark hit enter one more time because I need to tell Python I'm done it prints Yeah.

43
00:02:50.370 --> 00:02:52.230
So what does this tell us.

44
00:02:52.230 --> 00:02:59.430
It tells us that this expression even though it's just the number one the number 1 on its own is truthy

45
00:02:59.430 --> 00:03:07.200
it has a default inherent truthiness to it and 0 has an inherent falseness to it because we didn't get

46
00:03:07.200 --> 00:03:08.580
this print.

47
00:03:08.580 --> 00:03:10.250
So why does this really matter.

48
00:03:10.500 --> 00:03:14.240
Well it's one it's good to know about but we can take advantage of it.

49
00:03:14.280 --> 00:03:21.660
So here's a quick example from the sort of real world a real example at least where we could use take

50
00:03:21.660 --> 00:03:25.230
advantage of the inherent truthiness and falseness of values.

51
00:03:25.230 --> 00:03:32.790
So what I'm going to do now is make a new file and I'm just going to call it truth the truthiness dot

52
00:03:33.000 --> 00:03:34.360
p y.

53
00:03:34.890 --> 00:03:39.290
So in here will ask for input and we'll just ask for.

54
00:03:39.630 --> 00:03:49.890
Enter your favorite animal something silly like this and at the end we'll just write something like.

55
00:03:49.900 --> 00:03:51.800
Print.

56
00:03:52.530 --> 00:04:01.890
Save as a variable what's called animal and we'll just say print animal Plus is my favorite too.

57
00:04:01.890 --> 00:04:06.450
So I know this is very trivial at the moment but we're getting input and we're printing it back out.

58
00:04:06.510 --> 00:04:08.060
Let's just make sure that part works.

59
00:04:08.070 --> 00:04:16.680
So I'm going to run Python three truthiness to your favorite animal you say it's a newt and it says

60
00:04:16.710 --> 00:04:18.060
Newt is my favorite too.

61
00:04:18.390 --> 00:04:24.180
But there's this edge case where I can say enter your favorite animal and I just hit enter and we just

62
00:04:24.180 --> 00:04:25.990
get blank is my favorite too.

63
00:04:26.100 --> 00:04:32.580
So it's an empty string is the value of animal because we didn't enter anything in.

64
00:04:32.600 --> 00:04:44.110
So what we could do is appear at a conditional check and I would just say if animal just like this one

65
00:04:44.110 --> 00:04:48.080
two three four then we'll print animal it's my favorite too.

66
00:04:48.580 --> 00:04:54.580
So this single line we're not checking if animals are equal to something we're saying if animal at all

67
00:04:54.760 --> 00:04:55.900
if it exists.

68
00:04:55.900 --> 00:05:04.970
And the only reason this works is because strings any string that isn't empty is truthy.

69
00:05:05.320 --> 00:05:07.450
But if it's empty it's falsie.

70
00:05:07.810 --> 00:05:11.850
So if animal is empty then this won't execute.

71
00:05:11.980 --> 00:05:18.830
So we could add or else if we wanted to super simple and just say print.

72
00:05:19.450 --> 00:05:23.420
You didn't say anything like that.

73
00:05:23.640 --> 00:05:25.020
And let's see what happens.

74
00:05:26.850 --> 00:05:29.400
And to your favorite animal I just hit enter.

75
00:05:29.400 --> 00:05:30.560
Empty string triggers.

76
00:05:30.600 --> 00:05:31.700
You don't say anything.

77
00:05:33.180 --> 00:05:40.590
And if I say instead salamander too close to a newt goat go is my favorite too.

78
00:05:40.710 --> 00:05:41.580
Great.

79
00:05:41.580 --> 00:05:41.840
All right.

80
00:05:41.850 --> 00:05:47.430
So what I'm just trying to show you is that you'll see this occasionally not just with animal but where

81
00:05:47.640 --> 00:05:53.580
values are checked to see if they exist and that the way that that works depends on inherent truthiness

82
00:05:53.640 --> 00:05:55.830
and falseness of values.

83
00:05:55.830 --> 00:06:03.180
So to sum that up empty strings and zero are the two most common as well as empty objects we haven't

84
00:06:03.180 --> 00:06:07.450
talked about objects yet but it helps to know those are also false.

85
00:06:07.470 --> 00:06:13.500
So basically anything that empty or zero or the actual value none.

86
00:06:13.500 --> 00:06:15.930
Capital and non-special Python's value.

87
00:06:16.020 --> 00:06:19.700
We haven't addressed much yet either but we do know it exists.

88
00:06:19.880 --> 00:06:21.990
All right so those are all inherently falsie.

89
00:06:22.290 --> 00:06:24.450
Everything else is truly.
