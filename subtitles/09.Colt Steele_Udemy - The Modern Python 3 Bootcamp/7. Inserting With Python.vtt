WEBVTT
1
00:00:00.330 --> 00:00:01.430
All right welcome back.

2
00:00:01.440 --> 00:00:06.480
So we've seen how to connect to a database slush create a new one the very first time but every other

3
00:00:06.480 --> 00:00:07.540
time connect to it.

4
00:00:07.740 --> 00:00:09.950
And also how to create a single table.

5
00:00:09.960 --> 00:00:13.440
Now we're going to focus on inserting data into those tables.

6
00:00:13.440 --> 00:00:19.350
And the first thing I could show you is like the most basic kind of dumb way of doing it I say dumb

7
00:00:19.380 --> 00:00:26.160
because if you were just to insert a hard coded line of sequel which we totally can do it kind of defeats

8
00:00:26.160 --> 00:00:27.650
the purpose of using Python.

9
00:00:27.810 --> 00:00:31.460
Why not just write that single line of sequel as sequel.

10
00:00:31.530 --> 00:00:32.850
Why go through python.

11
00:00:32.910 --> 00:00:37.410
But we could insert something so let's let's do an insert into friend.

12
00:00:37.410 --> 00:00:43.140
This isn't going to work of course on its own but let's say I'm writing a single query to insert a new

13
00:00:43.140 --> 00:00:50.160
friend and I'm going to go with a default order so values and then we'll need to have.

14
00:00:50.160 --> 00:00:51.910
We've got to pay attention to quotes of course.

15
00:00:51.900 --> 00:00:55.950
I'm going to do single quotes and then double quotes around the entire thing.

16
00:00:56.340 --> 00:00:57.200
I hate that.

17
00:00:57.210 --> 00:00:57.850
There we go.

18
00:00:58.140 --> 00:01:00.440
So single quotes first name will be.

19
00:01:00.660 --> 00:01:02.340
This is how you spell Merryweather.

20
00:01:04.360 --> 00:01:07.320
Messed up the quotes again like that.

21
00:01:07.510 --> 00:01:08.440
Meriwether Lewis.

22
00:01:08.440 --> 00:01:11.550
And then we are seven out of 10 friends.

23
00:01:11.560 --> 00:01:15.990
So here is a line of sequel on its own and it's not going to do anything for me.

24
00:01:16.150 --> 00:01:17.380
I'm going to make it a variable.

25
00:01:17.380 --> 00:01:19.730
So I'm going to call it insert query.

26
00:01:19.780 --> 00:01:21.390
Now this line is getting kind of long.

27
00:01:21.550 --> 00:01:29.570
So what you will see people do is triple quotes like this and then we can break it up.

28
00:01:29.580 --> 00:01:32.750
Usually people break it up on the values line.

29
00:01:33.430 --> 00:01:34.450
So something like that.

30
00:01:34.470 --> 00:01:36.060
I'm also going to comment out this.

31
00:01:36.060 --> 00:01:41.760
We don't need to create the table again and I don't know is he going to like my single quotes inside

32
00:01:41.760 --> 00:01:42.800
of the triple quotes.

33
00:01:42.810 --> 00:01:43.690
We will see.

34
00:01:43.830 --> 00:01:44.840
And then we'll do a c.

35
00:01:44.910 --> 00:01:46.320
Execute that.

36
00:01:46.350 --> 00:01:47.650
Insert queery.

37
00:01:47.670 --> 00:01:53.360
So again this will just insert a single hard coded line or a single hardcoded friend.

38
00:01:53.520 --> 00:01:57.580
Get rid of this random P at the end and let's see if it works.

39
00:01:57.590 --> 00:01:59.900
So Python 3 friends.

40
00:02:00.310 --> 00:02:03.720
OK well that's a problem because I misspelled queery.

41
00:02:03.950 --> 00:02:05.940
Well Martin it looks like it worked.

42
00:02:06.000 --> 00:02:07.620
Let's see.

43
00:02:07.830 --> 00:02:11.600
Let's do a select star from friends.

44
00:02:11.640 --> 00:02:13.070
All right so we have a new friend in there.

45
00:02:13.110 --> 00:02:13.900
Cool.

46
00:02:14.400 --> 00:02:15.320
So that works.

47
00:02:15.330 --> 00:02:18.510
But as I mentioned you probably wouldn't use Python for this.

48
00:02:18.510 --> 00:02:20.950
Usually you have some sort of dynamic data.

49
00:02:21.160 --> 00:02:26.160
So some uses maybe you have like a file of 10000.

50
00:02:26.190 --> 00:02:30.900
I don't know things from a CSFB file and you want to convert it into your siecle database.

51
00:02:30.900 --> 00:02:36.390
Maybe you have a list of email addresses that you stole from somewhere and you're trying to get it into

52
00:02:36.390 --> 00:02:38.800
your sequel database you want to iterate over the list.

53
00:02:38.850 --> 00:02:44.810
You would do that with Python and then for each one insert except you would have variables here.

54
00:02:45.060 --> 00:02:51.600
Or often you have an application with a form or some sort of user input where data is coming in that

55
00:02:51.600 --> 00:02:53.620
you are then inserting into your database.

56
00:02:53.790 --> 00:02:59.070
So let's let's sort of imagine that that's what's going on for us.

57
00:02:59.100 --> 00:03:04.740
Let's imagine that we have form data let's just say we're doing first name and last name actually let's

58
00:03:04.740 --> 00:03:13.350
just do first name honestly and we have a variable called first and it's going to be I don't know Dana

59
00:03:14.310 --> 00:03:19.440
that's our friend we're inserting we don't have any restrictions that says we have to have a first name

60
00:03:19.440 --> 00:03:20.760
last name and closeness.

61
00:03:20.910 --> 00:03:27.690
So just for the sake of time I'm only doing first so you might think well the best way to do that if

62
00:03:27.690 --> 00:03:31.390
I have a variable coming in again or imagine we don't know what this is.

63
00:03:31.470 --> 00:03:36.240
It's not up to us we just know there's a variable called First it's coming from a form maybe even say

64
00:03:36.240 --> 00:03:37.680
form first.

65
00:03:38.220 --> 00:03:40.110
I could do something like this.

66
00:03:40.110 --> 00:03:41.630
I could do an F string.

67
00:03:42.150 --> 00:03:43.580
And this is not a good idea.

68
00:03:43.590 --> 00:03:48.060
I'll explain why in a bit when you have a video actually on sequel injection.

69
00:03:48.450 --> 00:03:53.700
Basically you don't want to be inserting random data variables into your code or into your sequel statements

70
00:03:53.730 --> 00:03:54.600
on your own.

71
00:03:54.630 --> 00:03:59.550
Of course that's something you need to do a lot is have your data added in have variables added into

72
00:03:59.550 --> 00:04:00.230
a sequel query.

73
00:04:00.240 --> 00:04:02.760
But I'm going to show you the actual way of doing it.

74
00:04:02.910 --> 00:04:08.370
And again I mean I have a video explaining why this is problematic and and what it looks like but what

75
00:04:08.370 --> 00:04:09.540
we could do is something like this.

76
00:04:09.540 --> 00:04:13.690
Insert into friends and then values.

77
00:04:13.870 --> 00:04:21.750
One need to specify we're only inserting first name values and then instead of just typing whatever

78
00:04:21.750 --> 00:04:32.850
we're going to type in here like Todd I would do f string interpellation and then say form First there

79
00:04:32.850 --> 00:04:37.950
is an important thing to note this on its own is not going to work because then our query would look

80
00:04:37.950 --> 00:04:38.790
like this.

81
00:04:38.790 --> 00:04:42.420
At the end of the day when it's all said and done that's not going to work.

82
00:04:42.420 --> 00:04:45.360
We need quotes around it for sequel.

83
00:04:45.360 --> 00:04:50.040
So we have to add in additional quotes and this gets really annoying to manage.

84
00:04:50.040 --> 00:04:55.260
This is one of the reasons why it's not a good idea to do an F string and to manually put your own data

85
00:04:55.260 --> 00:04:57.600
in there but this might seem like a good idea.

86
00:04:57.750 --> 00:04:58.650
So let's try it.

87
00:04:58.710 --> 00:05:04.860
Let's just make a variable again called queery and then do see that execute queery.

88
00:05:05.490 --> 00:05:07.920
And if all goes well hopefully it will.

89
00:05:07.920 --> 00:05:09.510
This should work.

90
00:05:10.260 --> 00:05:12.060
Let's open it up again.

91
00:05:12.060 --> 00:05:14.310
Select star from friends.

92
00:05:14.570 --> 00:05:18.520
OK so we have two friends and there Dana only has a first name but that's fine.

93
00:05:18.660 --> 00:05:21.230
So I mentioned this is not a good way of doing it.

94
00:05:21.270 --> 00:05:26.520
So the better way of doing this if you have some variables that you need to interpolate that you need

95
00:05:26.520 --> 00:05:29.260
to add in to a query instead of this.

96
00:05:29.280 --> 00:05:32.520
I'm going to keep this but I'm going to label it as bad

97
00:05:35.280 --> 00:05:41.140
don't do this and then the better way I'll do it on here.

98
00:05:41.280 --> 00:05:43.500
A better way is going to be.

99
00:05:43.650 --> 00:05:52.380
Let's say we have our same form data form first equals this time it's Mary Todd.

100
00:05:52.550 --> 00:05:57.990
I don't even know if that first name Mary middle name Todd or if it's all first name Mary Dasch Todd

101
00:05:58.270 --> 00:05:59.330
or hyphen Todd.

102
00:05:59.430 --> 00:06:07.710
What we do is instead writer queery but we add question marks here for every value that we want to be

103
00:06:07.920 --> 00:06:08.520
added in.

104
00:06:08.520 --> 00:06:15.680
So I think to make more sense if I copy this say queery equals insert into friends first name values

105
00:06:16.410 --> 00:06:17.640
question mark.

106
00:06:17.730 --> 00:06:24.240
Then when we actually execute the query we pass in a tuple containing the values that we want to be

107
00:06:24.330 --> 00:06:26.180
added in.

108
00:06:26.190 --> 00:06:32.210
So it's kind of silly because we only have one thing that we're inserting just the first name.

109
00:06:32.370 --> 00:06:35.120
So it's annoying that we have to make it a table but we do.

110
00:06:35.250 --> 00:06:40.410
Otherwise it will try and basically iterate over each character of the string.

111
00:06:40.590 --> 00:06:46.530
If we do it as a tuple it will iterate over the one thing and the tuple and put the value of this at

112
00:06:46.560 --> 00:06:47.550
that question mark.

113
00:06:47.700 --> 00:06:49.560
It takes care of a lot of stuff for us.

114
00:06:49.560 --> 00:06:53.110
The quotes sanitizes it so that no one can inject sequel.

115
00:06:53.250 --> 00:06:56.230
And we can forget to so one item to also we need that comma.

116
00:06:56.260 --> 00:07:00.910
Tried running it and we look at our database one more time

117
00:07:04.280 --> 00:07:06.040
we now have Mary Todd in there.

118
00:07:06.410 --> 00:07:09.650
So this is kind of cumbersome to do it this way with one value.

119
00:07:09.650 --> 00:07:12.270
Usually this is what we would have.

120
00:07:12.320 --> 00:07:20.330
So I'll keep this actually and duplicate it one more time and instead of form first let's just say form

121
00:07:20.330 --> 00:07:22.010
data or data.

122
00:07:22.160 --> 00:07:25.090
And this is coming from a form that looks like this.

123
00:07:25.280 --> 00:07:26.730
It's already in a tuple.

124
00:07:26.730 --> 00:07:38.480
So if we have Steve Irwin and we are nine out of 10 friends then we need to have three commas.

125
00:07:38.480 --> 00:07:44.800
So comma 3 question marks I mean and then and here we just pass in data.

126
00:07:44.810 --> 00:07:47.390
So this is more accurate more sort of.

127
00:07:47.390 --> 00:07:51.020
Well first of all it's less of a headache but it's also more realistic.

128
00:07:51.050 --> 00:07:55.030
You have a bunch of data together usually coming from a form it's already grouped.

129
00:07:55.190 --> 00:08:00.140
And we can insert it all and it will automatically take the first thing and put it right here.

130
00:08:00.320 --> 00:08:01.960
The second thing put it right here.

131
00:08:01.970 --> 00:08:06.730
The third thing right here and I'm not specifying the actual column names because the order the data

132
00:08:06.730 --> 00:08:10.210
is coming in matches the data the order the columns are already in.

133
00:08:10.340 --> 00:08:11.220
So let's try it.

134
00:08:11.300 --> 00:08:13.340
We don't need this to be an F string by the way.

135
00:08:13.430 --> 00:08:17.410
Not that it really hurts and see what works.

136
00:08:20.500 --> 00:08:27.290
Open or back up one more time select star from friends capitalization to the loft.

137
00:08:27.290 --> 00:08:29.580
Now we have this new row Steve Irwin 9.

138
00:08:29.750 --> 00:08:30.160
OK.

139
00:08:30.230 --> 00:08:35.750
So that's one way of inserting what I want to show you next is how to insert in bulk.

140
00:08:35.780 --> 00:08:37.100
I'll do that in the next video.

141
00:08:37.400 --> 00:08:41.810
Either through a collection of items that you have you want to iterate over and insert one at a time

142
00:08:42.140 --> 00:08:44.270
or how to answer them all in one go.
