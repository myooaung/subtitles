WEBVTT
1
00:00:00.005 --> 00:00:01.007
- [Instructor] Throughout this course,

2
00:00:01.007 --> 00:00:05.004
we will build a small application for Landon hotel

3
00:00:05.004 --> 00:00:08.000
that calls several popular APIs

4
00:00:08.000 --> 00:00:11.009
using a variety of techniques in Java.

5
00:00:11.009 --> 00:00:14.004
The application will monitor Twitter

6
00:00:14.004 --> 00:00:18.000
for tweets by guests that mentioned Hotel Landon.

7
00:00:18.000 --> 00:00:21.004
When a tweet occurs, a text message with an assessment

8
00:00:21.004 --> 00:00:22.009
of the tweet sentiment

9
00:00:22.009 --> 00:00:26.004
will be sent to the hotel manager's cell phone.

10
00:00:26.004 --> 00:00:28.000
To build the application,

11
00:00:28.000 --> 00:00:32.002
we'll need to work with three APIs, the Twitter API,

12
00:00:32.002 --> 00:00:36.005
the text analytics API from Azure Cognitive Services

13
00:00:36.005 --> 00:00:40.002
and a messaging API from Twilio.

14
00:00:40.002 --> 00:00:44.000
The application will use the Spring Framework WebClient

15
00:00:44.000 --> 00:00:46.006
to receive tweets that are pushed to the client

16
00:00:46.006 --> 00:00:51.009
by Twitter streaming API that is protected by OAuth 2.

17
00:00:51.009 --> 00:00:54.008
Once the tweet is received from the stream,

18
00:00:54.008 --> 00:00:57.008
it will be sent to the text analytics API

19
00:00:57.008 --> 00:01:00.006
within Azure Cognitive Services.

20
00:01:00.006 --> 00:01:04.005
This API will determine if the sentiment was positive

21
00:01:04.005 --> 00:01:06.002
or negative.

22
00:01:06.002 --> 00:01:10.000
To make this call, we'll use the native HTTP Client

23
00:01:10.000 --> 00:01:12.003
introduced in Java 11

24
00:01:12.003 --> 00:01:16.006
and a security scheme based on an API key.

25
00:01:16.006 --> 00:01:18.008
After the sentiment data is returned

26
00:01:18.008 --> 00:01:21.003
from Azure Cognitive Services,

27
00:01:21.003 --> 00:01:25.006
we'll construct a text message that describes the sentiment.

28
00:01:25.006 --> 00:01:28.009
To deliver the message to the Landon hotel manager,

29
00:01:28.009 --> 00:01:33.006
we'll use the SMS messaging API provided by Twilio.

30
00:01:33.006 --> 00:01:35.009
This call will give us some great experience

31
00:01:35.009 --> 00:01:38.003
working with the Open Fame Project

32
00:01:38.003 --> 00:01:42.001
which makes calling APIs much simpler in Java.

33
00:01:42.001 --> 00:01:45.004
We'll also see how to call APIs that are protected

34
00:01:45.004 --> 00:01:48.001
with basic authentication.

35
00:01:48.001 --> 00:01:50.003
Each chapter in the course teaches you

36
00:01:50.003 --> 00:01:55.000
how to use a popular API, a specific client technology,

37
00:01:55.000 --> 00:01:57.006
and a different security scheme.

38
00:01:57.006 --> 00:02:00.004
This gives you broad exposure to the situations

39
00:02:00.004 --> 00:02:01.006
that you'll encounter

40
00:02:01.006 --> 00:02:04.002
when calling rest APIs.

41
00:02:04.002 --> 00:02:06.003
In the challenge for each chapter,

42
00:02:06.003 --> 00:02:10.001
you'll be asked to build the next API integration

43
00:02:10.001 --> 00:02:13.009
to deliver the monitoring application for Hotel Landon.

44
00:02:13.009 --> 00:02:18.002
So each challenge will add another increment to the project.

45
00:02:18.002 --> 00:02:21.007
Starting with Azure Cognitive Services integration,

46
00:02:21.007 --> 00:02:23.003
then moving to Twitter

47
00:02:23.003 --> 00:02:25.009
and concluding with Twilio.

48
00:02:25.009 --> 00:02:27.007
If you need help with the challenge,

49
00:02:27.007 --> 00:02:30.008
you can always check out the solution.

50
00:02:30.008 --> 00:02:33.007
In the solution, I'll show you how I completed

51
00:02:33.007 --> 00:02:37.002
the API integration for the project.

52
00:02:37.002 --> 00:02:39.001
By the end of the course project,

53
00:02:39.001 --> 00:02:41.006
you'll have a fully functioning application

54
00:02:41.006 --> 00:02:44.001
that uses AI, social media,

55
00:02:44.001 --> 00:02:48.009
and text messaging to demonstrate the power of web APIs.

56
00:02:48.009 --> 00:02:50.008
And Oh yeah, it's also pretty impressive

57
00:02:50.008 --> 00:02:52.006
to show your friends.

58
00:02:52.006 --> 00:02:55.000
All right, let's go ahead and get started.

