WEBVTT
1
00:00:01.040 --> 00:00:03.610
And finally, we have a ViewResolver.

2
00:00:03.610 --> 00:00:07.150
The ViewResolver is a little bit different because the

3
00:00:07.150 --> 00:00:10.780
TemplateResolver looked up the actual template.

4
00:00:10.780 --> 00:00:14.650
The ViewResolver just takes whichever template was loaded

5
00:00:14.650 --> 00:00:19.790
and returns that based off the name, so they kind of work in conjunction.

6
00:00:19.790 --> 00:00:21.750
I will tell you now, though,

7
00:00:21.750 --> 00:00:25.010
that the viewResolver.setOrder that you can see in

8
00:00:25.010 --> 00:00:26.880
the middle of our method here,

9
00:00:26.880 --> 00:00:33.030
that has to be before the JSP page in this example for it to work.

10
00:00:33.030 --> 00:00:39.060
So we're going to change the order of our JSP viewResolver to 1, and this to 0.

11
00:00:39.060 --> 00:00:41.880
If not, it'll look for JSP's name this way.

12
00:00:41.880 --> 00:00:44.720
It is possible to configure them to work together,

13
00:00:44.720 --> 00:00:47.050
but it's kind of outside the scope of this course,

14
00:00:47.050 --> 00:00:49.430
and specifically this example.

15
00:00:49.430 --> 00:00:53.900
Let's add our ViewResolver, and our template page,

16
00:00:53.900 --> 00:00:57.570
and any other configuration we need to to run the rest of this demo now.

17
00:00:57.570 --> 00:01:01.930
To add the viewResolver for the Thymeleaf pages,

18
00:01:01.930 --> 00:01:04.310
I'm going to go ahead and give myself a little bit of whitespace

19
00:01:04.310 --> 00:01:08.040
below the ViewResolver we have for JSP pages,

20
00:01:08.040 --> 00:01:09.660
and I'm going to paste that code in there.

21
00:01:09.660 --> 00:01:11.440
I've already got it written.

22
00:01:11.440 --> 00:01:13.570
The thymeleafResolver, as we mentioned earlier,

23
00:01:13.570 --> 00:01:16.370
is real simple because it calls the TemplateEngine.

24
00:01:16.370 --> 00:01:18.360
One thing I am going to change, though,

25
00:01:18.360 --> 00:01:22.950
is you'll notice how line 57 and line 65 in my code

26
00:01:22.950 --> 00:01:32.140
are both set to an order of 0, I want to change that setOrder on line 57 to 1.

27
00:01:32.140 --> 00:01:37.180
This will make it to where the thymeleafResolver pulls our page up first.

28
00:01:37.180 --> 00:01:39.740
And as I mentioned earlier, and I'm going to mention again,

29
00:01:39.740 --> 00:01:43.080
we are currently breaking the JSP functionality of our

30
00:01:43.080 --> 00:01:46.540
application to show you the thymeleafResolver.

31
00:01:46.540 --> 00:01:50.380
It's outside the scope of this course to have both Thymeleaf and

32
00:01:50.380 --> 00:01:53.200
JSPs working together in the same application,

33
00:01:53.200 --> 00:01:55.480
and it's really not a common occurrence.

34
00:01:55.480 --> 00:01:56.880
Most people don't do it that way.

35
00:01:56.880 --> 00:02:00.100
They usually choose one or the other.

36
00:02:00.100 --> 00:02:01.820
Now that we have that set up,

37
00:02:01.820 --> 00:02:06.520
I want to go out to our WEB‑INF folder and create the views

38
00:02:06.520 --> 00:02:11.000
directory that's being called by our templateResolver.

39
00:02:11.000 --> 00:02:17.420
So I'm going to right‑click on WEB‑INF and say New, Directory, and

40
00:02:17.420 --> 00:02:23.590
I'm going to type this as views. Inside of here, I want to create a

41
00:02:23.590 --> 00:02:29.490
new HTML page. So I'm going to say New, HTML 5, and I'm going to name

42
00:02:29.490 --> 00:02:33.840
this thyme.html, and hit Enter.

43
00:02:33.840 --> 00:02:40.730
It comes up with a very basic HTML page for us. To make this a Thymeleaf

44
00:02:40.730 --> 00:02:44.300
page, I'm actually going to just replace the contents inside of here and

45
00:02:44.300 --> 00:02:47.140
talk through the two pieces that we have.

46
00:02:47.140 --> 00:02:54.030
We have a HTML namespace on line 2 that's really an xml namespace that

47
00:02:54.030 --> 00:02:59.760
HTML is utilizing of thymeleaf.org, and we can now use those elements

48
00:02:59.760 --> 00:03:03.860
that that namespace defines as we have on line 8 where we're calling the

49
00:03:03.860 --> 00:03:08.900
th:text with the message in there. So this will pull out a message that

50
00:03:08.900 --> 00:03:10.530
we haven't yet defined.

51
00:03:10.530 --> 00:03:13.100
You'll notice that it's currently read on line 8 because it

52
00:03:13.100 --> 00:03:14.580
doesn't know where that's coming from,

53
00:03:14.580 --> 00:03:17.640
and that's because we have nothing to route to this page yet.

54
00:03:17.640 --> 00:03:20.620
Let's go up to our controllers, and specifically our

55
00:03:20.620 --> 00:03:24.020
greeting controller, and open it up.

56
00:03:24.020 --> 00:03:29.940
And let's add in a request to actually load this page and display that

57
00:03:29.940 --> 00:03:32.990
element that it's stopping on telling us that there's nothing to find

58
00:03:32.990 --> 00:03:38.180
calling it. I'm going to actually copy that greeting that we already have

59
00:03:38.180 --> 00:03:42.520
and paste that down below here, and change this to work for the thyme

60
00:03:42.520 --> 00:03:44.820
page that we just created.

61
00:03:44.820 --> 00:03:45.910
Call it thyme,

62
00:03:45.910 --> 00:03:50.420
and we're going to return to that thyme.html page that we just made,

63
00:03:50.420 --> 00:03:56.300
and let's just change this to Hello Thymeleaf.

64
00:03:56.300 --> 00:03:59.270
Save that. Now we have all of the pieces together

65
00:03:59.270 --> 00:04:01.700
in our application to run this.

66
00:04:01.700 --> 00:04:05.280
Let's exit full screen, start up our server, and go

67
00:04:05.280 --> 00:04:07.540
see what this now looks like.

68
00:04:07.540 --> 00:04:08.810
Here's our browser page,

69
00:04:08.810 --> 00:04:12.560
just like we would expect it to show up. The difference is now we can come

70
00:04:12.560 --> 00:04:18.120
up here and type in thyme, and it will go through and pull that page out

71
00:04:18.120 --> 00:04:23.360
for us and show us the Hello Thymeleaf that we just added into that

72
00:04:23.360 --> 00:04:26.110
message property. It works pretty well.

73
00:04:26.110 --> 00:04:29.960
I will tell you, though, that if we back up right now and hit our greeting link,

74
00:04:29.960 --> 00:04:30.860
it's going to break.

75
00:04:30.860 --> 00:04:32.560
We're going to get that 500 error.

76
00:04:32.560 --> 00:04:37.900
So I'm going to back out the changes that we made for Thymeleaf.

77
00:04:37.900 --> 00:04:40.260
I wanted to show you how to integrate it, and you can see it,

78
00:04:40.260 --> 00:04:43.910
you can use everything that we have already taught you with

79
00:04:43.910 --> 00:04:47.020
JSPs works with Thymeleaf pages,

80
00:04:47.020 --> 00:04:50.780
but the two just aren't configured to run alongside of one another.

81
00:04:50.780 --> 00:04:52.530
But you can see how Thymeleaf works,

82
00:04:52.530 --> 00:05:01.000
how it's really lightweight, it's really centered around HTML 5, and it doesn't have some of the nuances that JSP pages have in there.

