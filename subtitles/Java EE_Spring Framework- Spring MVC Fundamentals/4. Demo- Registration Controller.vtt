WEBVTT
1
00:00:01.040 --> 00:00:03.980
Let's start adding some of our conference registration

2
00:00:03.980 --> 00:00:05.960
functionality to our application.

3
00:00:05.960 --> 00:00:09.310
We've gone through and looked at controllers, looked at all the pieces.

4
00:00:09.310 --> 00:00:12.810
Let's just start adding some functionality to our app.

5
00:00:12.810 --> 00:00:16.640
I have closed all the open files that I had and shut down my server.

6
00:00:16.640 --> 00:00:20.120
I would advise you to do the same thing so that we're in the same space

7
00:00:20.120 --> 00:00:23.010
and same state if you don't have any problems with that.

8
00:00:23.010 --> 00:00:26.180
I'm going to start by first opening up our webapp folder,

9
00:00:26.180 --> 00:00:30.310
and we created this index.html file underneath webapp.

10
00:00:30.310 --> 00:00:34.890
We don't need that anymore because we have our application configured correctly

11
00:00:34.890 --> 00:00:40.170
and hosting up Spring MVC files so it will utilize that src,

12
00:00:40.170 --> 00:00:43.350
main, resources one that we kept a copy of.

13
00:00:43.350 --> 00:00:48.240
I'm going to go ahead and delete this and click OK.

14
00:00:48.240 --> 00:00:51.970
And then what I want to do is I'm going to open up our jsp folder,

15
00:00:51.970 --> 00:00:56.640
and I'm going to right‑click and create a new JSP file.

16
00:00:56.640 --> 00:01:01.190
And I'm going to call this registration.jsp.

17
00:01:01.190 --> 00:01:07.830
And it will create the standard template that we've already been using.

18
00:01:07.830 --> 00:01:12.050
I'm going to change the title to say Registration.

19
00:01:12.050 --> 00:01:12.960
And for now,

20
00:01:12.960 --> 00:01:18.060
I'm going to do the same thing we did before and add in an h1 just to

21
00:01:18.060 --> 00:01:20.640
make it so we don't have a blank page when we land here.

22
00:01:20.640 --> 00:01:24.180
And I'll just say Registration here as well.

23
00:01:24.180 --> 00:01:32.040
Now I want to go to that static HTML page we have for our index underneath src,

24
00:01:32.040 --> 00:01:35.280
main, resources, index.html.

25
00:01:35.280 --> 00:01:36.590
I'm going to open that page up.

26
00:01:36.590 --> 00:01:41.560
I told you when I set up our environment that I like it to go

27
00:01:41.560 --> 00:01:44.870
ahead and keep pulling that index page up.

28
00:01:44.870 --> 00:01:48.530
And there's a little trick as you're getting started with Spring

29
00:01:48.530 --> 00:01:51.850
development and IntelliJ and all these tools that I like to do.

30
00:01:51.850 --> 00:01:56.440
I like to leave this basic index.html page or a development page in here.

31
00:01:56.440 --> 00:01:58.090
You can keep one of these in your application,

32
00:01:58.090 --> 00:02:00.270
and it doesn't need to be named index.html.

33
00:02:00.270 --> 00:02:03.560
You can point your run configuration to a different page.

34
00:02:03.560 --> 00:02:09.040
But I want to go in here, and I'm going to add href.

35
00:02:09.040 --> 00:02:17.440
And I want to point this to greeting, and I want to close that off,

36
00:02:17.440 --> 00:02:20.640
and I'm just going to say Greeting here.

37
00:02:20.640 --> 00:02:23.710
Make sure you don't take the default of the /greeting because that

38
00:02:23.710 --> 00:02:25.630
will take you to the root of the application,

39
00:02:25.630 --> 00:02:27.510
and it won't function correctly.

40
00:02:27.510 --> 00:02:28.790
So I'm going to save that.

41
00:02:28.790 --> 00:02:31.120
I'm going to add another one here and do the same thing.

42
00:02:31.120 --> 00:02:33.250
I'm going to say a href.

43
00:02:33.250 --> 00:02:38.630
I'm going to do registration,

44
00:02:38.630 --> 00:02:46.930
and I want to close that element off and save that as well.

45
00:02:46.930 --> 00:02:49.440
Now I've got these two anchor tags in here,

46
00:02:49.440 --> 00:02:51.440
and what happens is that it launches our application.

47
00:02:51.440 --> 00:02:54.040
I'm just going to be able to click on these links really easily to

48
00:02:54.040 --> 00:02:57.690
navigate to different pieces of our application.

49
00:02:57.690 --> 00:03:01.360
Let's launch our app now and see what it does.

50
00:03:01.360 --> 00:03:04.930
I'm going to go down to our Run console and click the

51
00:03:04.930 --> 00:03:06.240
start for the run configuration,

52
00:03:06.240 --> 00:03:09.480
or you can do it from up above in our Tomcat configuration.

53
00:03:09.480 --> 00:03:10.430
And when this gets done building,

54
00:03:10.430 --> 00:03:19.240
it's going to pull up our web page and navigate us to our index page.

55
00:03:19.240 --> 00:03:22.860
Now you'll see we have a Greeting and a Registration link here.

56
00:03:22.860 --> 00:03:27.030
When I click on the Greeting link, it'll navigate me to the greeting page.

57
00:03:27.030 --> 00:03:28.980
It's exactly what we expected it to do.

58
00:03:28.980 --> 00:03:32.740
If I back up and go to the Registration, it's going to get an error.

59
00:03:32.740 --> 00:03:35.680
We don't have that mapping set up.

60
00:03:35.680 --> 00:03:39.340
It's because we haven't created a controller to point to that.

61
00:03:39.340 --> 00:03:41.180
Let's do that now.

62
00:03:41.180 --> 00:03:47.150
Switching back over to our IDE, let's go ahead and open up our src,

63
00:03:47.150 --> 00:03:51.850
main, java controller package.

64
00:03:51.850 --> 00:03:55.730
And I want to right‑click on that and say New, Java Class.

65
00:03:55.730 --> 00:04:04.020
I'm going to call this RegistrationController and hit Enter on that.

66
00:04:04.020 --> 00:04:07.590
And we're going to go through the exact same operations we did before.

67
00:04:07.590 --> 00:04:10.250
We're going to annotate this as a Controller.

68
00:04:10.250 --> 00:04:14.740
We want to add an annotation for @GetMapping.

69
00:04:14.740 --> 00:04:20.170
We want to tie this mapping to registration.

70
00:04:20.170 --> 00:04:28.690
And then we want to add a method in here of public String getRegistration.

71
00:04:28.690 --> 00:04:31.600
And I specifically named it that because we're doing

72
00:04:31.600 --> 00:04:34.100
a Get on the registration URL.

73
00:04:34.100 --> 00:04:36.940
Honestly, it's just my naming convention.

74
00:04:36.940 --> 00:04:39.840
There's nothing significant to it, nothing Spring related.

75
00:04:39.840 --> 00:04:42.590
It's just my own personal preference.

76
00:04:42.590 --> 00:04:45.310
And we're going to pass in the Map<String,

77
00:04:45.310 --> 00:04:51.020
Object for our model to pass attributes back and forth.

78
00:04:51.020 --> 00:04:59.210
And inside of here, we can now just return the string registration,

79
00:04:59.210 --> 00:05:05.830
and that is going to do an internal lookup to our registration.jsp page.

80
00:05:05.830 --> 00:05:08.920
Let's go ahead and restart our server, let that pull up again,

81
00:05:08.920 --> 00:05:11.720
and check to make sure that all of those pieces are

82
00:05:11.720 --> 00:05:13.940
wired up how we think they should be.

83
00:05:13.940 --> 00:05:19.230
Our app will now display the registration page when we've linked

84
00:05:19.230 --> 00:05:23.180
to it by clicking on that registration page,

85
00:05:23.180 --> 00:05:24.740
and that's what we expect to see.

86
00:05:24.740 --> 00:05:29.450
It's now serving up our page through our controller.

87
00:05:29.450 --> 00:05:30.320
But hold on.

88
00:05:30.320 --> 00:05:33.370
How is it doing all of this?

89
00:05:33.370 --> 00:05:37.560
That's great that we've added a controller in here and we've added some

90
00:05:37.560 --> 00:05:41.360
JSP pages and they've somehow wired themselves together.

91
00:05:41.360 --> 00:05:44.140
What's really going on inside of here?

92
00:05:44.140 --> 00:05:49.580
If we open up our GreetingController that we created

93
00:05:49.580 --> 00:05:52.630
and our RegistrationController, they look the same.

94
00:05:52.630 --> 00:05:56.560
There's nothing telling it where to route here or what we're doing,

95
00:05:56.560 --> 00:05:58.120
any of that type of stuff.

96
00:05:58.120 --> 00:06:01.010
And there's nothing inside of this JSP page that's

97
00:06:01.010 --> 00:06:03.140
telling us anything significant.

98
00:06:03.140 --> 00:06:03.900
Well,

99
00:06:03.900 --> 00:06:08.210
it all starts with our ConferenceApplication that is

100
00:06:08.210 --> 00:06:12.460
annotated as a @SpringBootApplication,

101
00:06:12.460 --> 00:06:16.470
and it extends SpringBootServletInitializer.

102
00:06:16.470 --> 00:06:23.100
This tells the application server to go ahead and create a

103
00:06:23.100 --> 00:06:26.910
dispatcher servlet and start serving up things.

104
00:06:26.910 --> 00:06:31.510
And as part of that annotation of @SpringBootApplication,

105
00:06:31.510 --> 00:06:34.900
it goes and starts looking for our controller and things with our

106
00:06:34.900 --> 00:06:38.770
annotation such as @Controller and @GetMapping,

107
00:06:38.770 --> 00:06:42.280
and our GreetingController that has the same thing,

108
00:06:42.280 --> 00:06:43.940
@Controller and @GetMapping.

109
00:06:43.940 --> 00:06:47.070
It starts navigating through all of that stuff.

110
00:06:47.070 --> 00:06:51.910
So this underneath the scenes here is creating a dispatcher servlet.

111
00:06:51.910 --> 00:06:54.070
If you've gone through this course before or you're

112
00:06:54.070 --> 00:06:59.360
looking at older JSPs that have been written or maintained

113
00:06:59.360 --> 00:07:01.550
through a Spring MVC application,

114
00:07:01.550 --> 00:07:04.890
it's always centered around a dispatcher servlet.

115
00:07:04.890 --> 00:07:09.540
If we look at our run configuration and you go scroll through this,

116
00:07:09.540 --> 00:07:14.910
you'll see inside of here it is calling our dispatcher servlet.

117
00:07:14.910 --> 00:07:17.750
It tells us that it's initializing that dispatcher servlet.

118
00:07:17.750 --> 00:07:19.760
Well, we didn't create that.

119
00:07:19.760 --> 00:07:24.240
Spring did for us by extending that SpringBootServletInitializer.

120
00:07:24.240 --> 00:07:28.240
It got rid of a lot of the boilerplate code that we have done

121
00:07:28.240 --> 00:07:31.890
in the past by just configuring that for us.

122
00:07:31.890 --> 00:07:36.640
Now if we open up our project, how do we interact with that though?

123
00:07:36.640 --> 00:07:38.030
It's our application.properties.

124
00:07:38.030 --> 00:07:41.550
This is where we did our InternalResourceViewResolver.

125
00:07:41.550 --> 00:07:46.880
We told it to go look under this directory and look for .jsp pages.

126
00:07:46.880 --> 00:07:50.560
So when we return that string from any of our controllers,

127
00:07:50.560 --> 00:07:53.340
our RegistrationController, for example,

128
00:07:53.340 --> 00:07:56.950
it is handling every web request through our dispatcher servlet.

129
00:07:56.950 --> 00:08:01.080
That's why the GetMapping for registration ties to it the way that it does.

130
00:08:01.080 --> 00:08:03.950
And when we tell it to return that registration page,

131
00:08:03.950 --> 00:08:12.000
it goes and looks for that registration.jsp page. Let's dissect this a little bit further in the next few examples.

