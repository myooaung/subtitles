WEBVTT
1
00:00:01.040 --> 00:00:04.570
Controllers in Spring MVC are very lightweight.

2
00:00:04.570 --> 00:00:08.440
They don't even actually require you to implement an interface.

3
00:00:08.440 --> 00:00:10.870
So if you remember, our controller definition from our

4
00:00:10.870 --> 00:00:13.340
Hello World action that we did earlier,

5
00:00:13.340 --> 00:00:16.830
our greeting controller was very basic, no interface,

6
00:00:16.830 --> 00:00:20.870
no class that we had to extend, we really only needed two parts.

7
00:00:20.870 --> 00:00:25.280
We needed a Controller annotation that told Spring MVC that this is a

8
00:00:25.280 --> 00:00:29.600
controller and it should be included in the available controllers for it to

9
00:00:29.600 --> 00:00:33.900
route information to, and that we needed to have a request mapping

10
00:00:33.900 --> 00:00:36.930
associated with it. And the request mapping,

11
00:00:36.930 --> 00:00:37.900
which in our case,

12
00:00:37.900 --> 00:00:41.720
is a GetMapping, tells Spring which method is going to

13
00:00:41.720 --> 00:00:45.160
handle which request. Now before we move on,

14
00:00:45.160 --> 00:00:47.210
though, I want to mention a few things.

15
00:00:47.210 --> 00:00:51.710
Spring does have some older concrete classes that you can extend,

16
00:00:51.710 --> 00:00:55.470
and your URL will map the class based off the controller name.

17
00:00:55.470 --> 00:00:57.830
It's a little bit of an older approach, in fact,

18
00:00:57.830 --> 00:01:01.490
it's kind of a more odd approach now, but it works just fine,

19
00:01:01.490 --> 00:01:03.840
and you may run into it out there.

20
00:01:03.840 --> 00:01:04.880
More and more people, though,

21
00:01:04.880 --> 00:01:09.150
are choosing the controller requestâ€‘based mapping approach as they've worked

22
00:01:09.150 --> 00:01:13.560
with more and more RESTful services. It doesn't make a lot of sense to have

23
00:01:13.560 --> 00:01:18.210
two different ways inside your application. Since I'm going to show you some

24
00:01:18.210 --> 00:01:20.380
of the things with RESTful services later,

25
00:01:20.380 --> 00:01:27.000
I chose to just show you this approach in this example. There are other ways of doing it, though, like I mentioned.

