WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.610
higher order component or head.

00:00:02.610 --> 00:00:06.790
Josie is an at once technic in react for reusing component logic,

00:00:06.790 --> 00:00:14.050
their apartment that emerges from reacts composition of nature and use his Josie's for

00:00:14.050 --> 00:00:15.780
solving crosscutting concerns.

00:00:15.780 --> 00:00:17.700
In general,

00:00:17.700 --> 00:00:20.840
it's a function that takes a component on Britain's.

00:00:20.840 --> 00:00:25.020
Either the same component or a modified was not the component are completely a new

00:00:25.020 --> 00:00:25.610
component.

00:00:25.610 --> 00:00:26.740
For example,

00:00:26.740 --> 00:00:33.160
the function loading here takes hold component as a perimeter and returns a new class that

00:00:33.160 --> 00:00:38.220
extends component so their way it is returning a component on the components render

00:00:38.220 --> 00:00:39.620
function is making use.

00:00:39.620 --> 00:00:44.600
The old component are returning a completely a different component.

00:00:44.600 --> 00:00:47.990
And if you have a look at the class contact list here,

00:00:47.990 --> 00:00:50.330
which is a component from the module,

00:00:50.330 --> 00:00:53.050
we're not exporting the contact lists plants.

00:00:53.050 --> 00:00:57.160
But instead we're exporting the return value from the loading function,

00:00:57.160 --> 00:01:00.020
which takes contact list as an argument.

00:01:00.020 --> 00:01:01.650
So wherever your instance,

00:01:01.650 --> 00:01:03.540
shooting the contact list component,

00:01:03.540 --> 00:01:08.010
you're actually instance creating the return value from the loading function,

00:01:08.010 --> 00:01:09.600
which is a new component,

00:01:09.600 --> 00:01:14.280
and all the props that you're passing here is passed to the new component,

00:01:14.280 --> 00:01:20.620
and then the new component can check the value off the props and then either done some

00:01:20.620 --> 00:01:24.630
alternate component are the old component with this props.

00:01:24.630 --> 00:01:27.900
Pastor toe the old component to understand the same.

00:01:27.900 --> 00:01:29.930
Let's have a look at using an example.

00:01:29.930 --> 00:01:31.820
In this example,

00:01:31.820 --> 00:01:34.890
we have a indexed or jace in the SRC,

00:01:34.890 --> 00:01:41.300
which is defining a component card app and renders the same on an HTML element whose ideas

00:01:41.300 --> 00:01:47.340
route and the component itself is currently displaying a deal with a hedge one and a

00:01:47.340 --> 00:01:47.750
picture.

00:01:47.750 --> 00:01:50.550
So this is the outcome off the same.

00:01:50.550 --> 00:01:54.440
I also have a component here called Contact Car,

00:01:54.440 --> 00:02:00.070
which transforms a prop called Contact in tow au I,

00:02:00.070 --> 00:02:01.640
displaying the image,

00:02:01.640 --> 00:02:02.080
name,

00:02:02.080 --> 00:02:04.470
email and phone off the contact person.

00:02:04.470 --> 00:02:08.770
And this is the same contact card that we have used in the previous examples to.

00:02:08.770 --> 00:02:11.500
We also have a rest Endpoint,

00:02:11.500 --> 00:02:13.900
which is insert using the Jason Serval,

00:02:13.900 --> 00:02:15.490
the Jasons,

00:02:15.490 --> 00:02:21.980
or is making is off this db slash data are Jason the data Georgeson has to address no

00:02:21.980 --> 00:02:23.780
contacts and products.

00:02:23.780 --> 00:02:25.190
And to start the server,

00:02:25.190 --> 00:02:30.850
let's go to the command front and then typing in B m run,

00:02:30.850 --> 00:02:35.940
rest server and the rest server runs this command,

00:02:35.940 --> 00:02:41.400
which is actually Jason server for 4000 DeLay off 1005 100.

00:02:41.400 --> 00:02:47.440
So this is a purposeful delay off 100 seconds introduced over here and also watches the

00:02:47.440 --> 00:02:50.200
changes in db slash data charges and fight.

00:02:50.200 --> 00:02:58.510
So if I go to the browser open and you down and then type in local most colon 4000 slash

00:02:58.510 --> 00:02:59.240
context,

00:02:59.240 --> 00:03:04.110
you'll see that the rest wants comes after a delay off 1.5 seconds.

00:03:04.110 --> 00:03:05.570
So each time I refresh,

00:03:05.570 --> 00:03:10.490
you would see that it's taking one enough seconds to respond because of this particular

00:03:10.490 --> 00:03:11.260
delay option.

00:03:11.260 --> 00:03:14.080
Now,

00:03:14.080 --> 00:03:20.370
let us create a new component called contact List that displays a list off contacts by

00:03:20.370 --> 00:03:23.070
making a request to the rest endpoint.

00:03:23.070 --> 00:03:24.670
So I go to the SRC,

00:03:24.670 --> 00:03:28.980
created new jobs good five or contact listed R.

00:03:28.980 --> 00:03:35.610
J s import there yet because we're gonna use the J six and I'm really clear their component

00:03:35.610 --> 00:03:36.870
using a function.

00:03:36.870 --> 00:03:40.500
Sometimes they let contact list equals two.

00:03:40.500 --> 00:03:48.140
I would like to extract a prob Caldas contacts and then president a function and we want

00:03:48.140 --> 00:03:51.600
toe convert this context at a in tow,

00:03:51.600 --> 00:03:53.900
an area off contact cards.

00:03:53.900 --> 00:03:54.840
Some tape here,

00:03:54.840 --> 00:04:00.980
let list equals two on deck stop man really see one single contact,

00:04:00.980 --> 00:04:06.350
and then we have a written contract car and I'll supply contact equals toe,

00:04:06.350 --> 00:04:09.780
See key equals toe.

00:04:09.780 --> 00:04:14.680
See that I d We're not important the contact cards.

00:04:14.680 --> 00:04:25.270
So that's import dot slash Contact our I know that I have here I can say return.

00:04:25.270 --> 00:04:26.970
Do.

00:04:26.970 --> 00:04:29.060
And then inside this,

00:04:29.060 --> 00:04:30.300
I can say list.

00:04:30.300 --> 00:04:32.170
So now I have my contact list.

00:04:32.170 --> 00:04:32.600
Really?

00:04:32.600 --> 00:04:34.550
Let's export the same from here.

00:04:34.550 --> 00:04:38.400
Explore default contact list.

00:04:38.400 --> 00:04:42.430
So if you go to the index Georgie s now,

00:04:42.430 --> 00:04:44.920
I should be able tow Use that over here.

00:04:44.920 --> 00:04:46.120
That is also initialize.

00:04:46.120 --> 00:04:48.170
The state member called us contacts,

00:04:48.170 --> 00:04:49.300
which is an empty area.

00:04:49.300 --> 00:04:57.110
And here I'm simply going to take contact list slash contact list were to import the

00:04:57.110 --> 00:05:03.750
contact list as a important contact list from dark slash contact list.

00:05:03.750 --> 00:05:09.630
We also have to supply this state as props here.

00:05:09.630 --> 00:05:12.500
So I'm gonna type your contacts equals toe,

00:05:12.500 --> 00:05:14.260
distort state art,

00:05:14.260 --> 00:05:15.250
foreign tax.

00:05:15.250 --> 00:05:18.410
So if you go back to the browser,

00:05:18.410 --> 00:05:23.270
I don't see any changes because right now we have an a day off empty objects.

00:05:23.270 --> 00:05:24.780
So if I go on,

00:05:24.780 --> 00:05:26.250
do an inspect here,

00:05:26.250 --> 00:05:29.870
I should be able to see that there is a conduct list,

00:05:29.870 --> 00:05:31.500
which is an empty deal right now.

00:05:31.500 --> 00:05:31.700
Now,

00:05:31.700 --> 00:05:34.750
let us go and fetch the data from the rest.

00:05:34.750 --> 00:05:39.250
Endpoint using component didn't mount lifecycle function.

00:05:39.250 --> 00:05:48.210
And let's use the fetch A p i to fetch the contacts.

00:05:48.210 --> 00:05:54.950
So the urine is http local most 4000 slash contexts.

00:05:54.950 --> 00:05:57.800
Now the French AP evidence promise.

00:05:57.800 --> 00:06:01.770
So I allowed to say dark then and then I get the response.

00:06:01.770 --> 00:06:04.660
And then I have to convert the response in tow.

00:06:04.660 --> 00:06:07.090
Jason and the response start,

00:06:07.090 --> 00:06:10.030
Jason also returns a promise again.

00:06:10.030 --> 00:06:12.070
I never said then data.

00:06:12.070 --> 00:06:13.670
And then I have to say here,

00:06:13.670 --> 00:06:20.540
probably this start state state off contacts on data.

00:06:20.540 --> 00:06:22.550
So if I save this now,

00:06:22.550 --> 00:06:27.350
you should be able to see that after a 1.5 seconds delay,

00:06:27.350 --> 00:06:29.430
you should see the contact list coming up.

00:06:29.430 --> 00:06:30.710
Now,

00:06:30.710 --> 00:06:35.270
this can be converted into a modern Javal strips facing away to style.

00:06:35.270 --> 00:06:36.670
To do that,

00:06:36.670 --> 00:06:41.000
the first thing I have to do is to collect the return value from dysfunction.

00:06:41.000 --> 00:06:44.560
So I'm gonna call this as let rest equals too.

00:06:44.560 --> 00:06:52.110
But generally this is a promise or rescue the promise we can ask Java script to say,

00:06:52.110 --> 00:06:54.970
Wait for this promise to be resolved by falling.

00:06:54.970 --> 00:06:55.550
Await.

00:06:55.550 --> 00:06:58.920
So now arrest is no longer a promise,

00:06:58.920 --> 00:07:01.530
but the result value off the promise.

00:07:01.530 --> 00:07:04.590
And then I can call the rest Dark Jason,

00:07:04.590 --> 00:07:06.930
which gives me data left.

00:07:06.930 --> 00:07:14.400
Let me call it as contacts equals toe a wage respite our Jason And then I can take this

00:07:14.400 --> 00:07:16.820
contacts and pass it to my set state.

00:07:16.820 --> 00:07:17.540
So I can say,

00:07:17.540 --> 00:07:18.110
you know,

00:07:18.110 --> 00:07:24.700
this dog Sex State and in calibrated I can simply call it as contact on then these things

00:07:24.700 --> 00:07:25.830
are no longer required.

00:07:25.830 --> 00:07:30.900
The only problem is that a weight can be used only if the function is a thing.

00:07:30.900 --> 00:07:33.850
I'm gonna mark this function as easing.

00:07:33.850 --> 00:07:35.180
Save this.

00:07:35.180 --> 00:07:36.730
Go back to the browser.

00:07:36.730 --> 00:07:37.430
We should know.

00:07:37.430 --> 00:07:40.000
See that the result is the same thing.

00:07:40.000 --> 00:07:48.230
So there is a delay off 1.5 2nd after which you will see the actual contact list.

00:07:48.230 --> 00:07:48.420
Now,

00:07:48.420 --> 00:07:54.230
the reason I introduced the delay off 1.5 seconds is toe display an alternate component

00:07:54.230 --> 00:08:00.390
here saying loading maybe with an animated GIF file until the data is not available.

00:08:00.390 --> 00:08:00.980
Now,

00:08:00.980 --> 00:08:05.160
this particular requirement may be there for many other components also.

00:08:05.160 --> 00:08:10.820
So instead of raiding the logic for displaying an alternate image in the contact list

00:08:10.820 --> 00:08:11.440
component,

00:08:11.440 --> 00:08:14.510
we would like to externalize this into some other function.

00:08:14.510 --> 00:08:17.510
Now this is where the higher order component comes into picture,

00:08:17.510 --> 00:08:21.510
so let us create a higher to a component called as loading.

00:08:21.510 --> 00:08:22.600
If you remember,

00:08:22.600 --> 00:08:23.960
Head Josie is nothing.

00:08:23.960 --> 00:08:27.550
But if a function that takes old component,

00:08:27.550 --> 00:08:29.850
Andi returns a new component.

00:08:29.850 --> 00:08:33.710
So that's going to create a new file over here.

00:08:33.710 --> 00:08:36.290
Car loading dock GS.

00:08:36.290 --> 00:08:45.440
So let's say the function called lordy that takes something like ordered component what

00:08:45.440 --> 00:08:47.830
they have done a new component.

00:08:47.830 --> 00:08:52.730
So the new component can be a stateless our state full for this demonstration of me was a

00:08:52.730 --> 00:08:54.060
state full component.

00:08:54.060 --> 00:08:54.890
So I said,

00:08:54.890 --> 00:08:57.020
Class new company,

00:08:57.020 --> 00:09:00.750
which extends from component,

00:09:00.750 --> 00:09:04.030
have to import this everyday.

00:09:04.030 --> 00:09:05.570
I am RC on.

00:09:05.570 --> 00:09:09.990
I got the react for J six and component which is used over here.

00:09:09.990 --> 00:09:16.450
The component should have a mental function on the render country here is simply going to

00:09:16.450 --> 00:09:21.350
return the old component by supplying all the props that this receives.

00:09:21.350 --> 00:09:32.920
So I'm gonna say here or component and then I say dr dot This start drops and one last

00:09:32.920 --> 00:09:34.840
thing is toe export.

00:09:34.840 --> 00:09:35.990
This loading function,

00:09:35.990 --> 00:09:40.090
I'm gonna say you're export default loading.

00:09:40.090 --> 00:09:42.370
See this Now,

00:09:42.370 --> 00:09:48.280
if I come back to the contact list So instead of exporting this old component,

00:09:48.280 --> 00:09:54.530
I'm going to say you're voting off this component and we have important loading from the

00:09:54.530 --> 00:09:55.610
loading dock GS.

00:09:55.610 --> 00:09:58.120
They've saved this and go back to the browser.

00:09:58.120 --> 00:10:07.640
You will see that there is no change and there is no change because in the index years were

00:10:07.640 --> 00:10:10.160
actually instance creating contact list.

00:10:10.160 --> 00:10:13.560
And now contact list is not a class,

00:10:13.560 --> 00:10:16.770
but it is a return value off the loading function,

00:10:16.770 --> 00:10:19.960
which is nothing but this particular company.

00:10:19.960 --> 00:10:24.400
So when you say in indexed RJ's contact list as a component,

00:10:24.400 --> 00:10:27.250
you're actually refering toe this new component,

00:10:27.250 --> 00:10:30.780
and it receives the props here called contacts.

00:10:30.780 --> 00:10:36.900
And all we're doing is that component renders another component called old component by

00:10:36.900 --> 00:10:38.500
supplying the contacts,

00:10:38.500 --> 00:10:39.040
props.

00:10:39.040 --> 00:10:42.670
And obviously the old component is the perimeter of this loading,

00:10:42.670 --> 00:10:44.760
which is coming from contact list.

00:10:44.760 --> 00:10:45.180
Here,

00:10:45.180 --> 00:10:47.680
you can see the perimeter is nothing with the contact list.

00:10:47.680 --> 00:10:49.190
Eventually what?

00:10:49.190 --> 00:10:54.210
The context we supply over here goes toe this particular component.

00:10:54.210 --> 00:10:57.700
And from there it reaches this contact lists company.

00:10:57.700 --> 00:11:01.730
If you're wondering why we're introducing this additional abstraction,

00:11:01.730 --> 00:11:09.360
that's because now we can do some logic over here inside this render function and instead

00:11:09.360 --> 00:11:11.350
off rendering this old component,

00:11:11.350 --> 00:11:13.810
we can render some other component.

00:11:13.810 --> 00:11:14.900
For example,

00:11:14.900 --> 00:11:20.420
we know that distort props contains a member called contacts that we supplied from intake

00:11:20.420 --> 00:11:21.200
searches.

00:11:21.200 --> 00:11:24.280
We can check if their contacts is empty,

00:11:24.280 --> 00:11:24.730
indignant?

00:11:24.730 --> 00:11:28.220
Return something like loading or an animal jail.

00:11:28.220 --> 00:11:36.460
So what I do that disappeared here a variable for let output equals toe this particular Js

00:11:36.460 --> 00:11:37.020
X.

00:11:37.020 --> 00:11:41.100
But I also check if they start Rob,

00:11:41.100 --> 00:11:46.090
start on tax dot Land is equals to zero.

00:11:46.090 --> 00:11:49.020
That means we don't have this data it.

00:11:49.020 --> 00:11:55.350
So I'm gonna say you're all put equals toe paragraph and then I say you're loading.

00:11:55.350 --> 00:12:06.330
We can also are additional last names like text sender so that it's aligned in the center.

00:12:06.330 --> 00:12:10.830
And now I can return this output saying return awkward.

00:12:10.830 --> 00:12:12.350
I saved this.

00:12:12.350 --> 00:12:15.000
Go back now And if you see initially,

00:12:15.000 --> 00:12:15.990
we get this.

00:12:15.990 --> 00:12:17.640
But when the data is available,

00:12:17.640 --> 00:12:19.150
we are actually getting the list.

00:12:19.150 --> 00:12:20.570
Let me refresh it again.

00:12:20.570 --> 00:12:22.550
You'll see that the data is not there.

00:12:22.550 --> 00:12:23.310
It is loading.

00:12:23.310 --> 00:12:24.050
Please wait.

00:12:24.050 --> 00:12:25.970
And once the data is available,

00:12:25.970 --> 00:12:28.060
this component is really under.

00:12:28.060 --> 00:12:29.500
At that point in time,

00:12:29.500 --> 00:12:32.020
this condition is no longer applicable.

00:12:32.020 --> 00:12:34.740
So it is actually supplying the whole component,

00:12:34.740 --> 00:12:36.060
which is a contact list.

00:12:36.060 --> 00:12:39.310
We can also simplify this using other functions.

00:12:39.310 --> 00:12:40.260
For example,

00:12:40.260 --> 00:12:45.330
here I can declare a variable or pantsed loading equals toe.

00:12:45.330 --> 00:12:51.410
We receive all component and then pass it on to dysfunction on dysfunction returns.

00:12:51.410 --> 00:12:53.810
Nothing but a component over here.

00:12:53.810 --> 00:12:56.200
And right now this is a state full component.

00:12:56.200 --> 00:12:58.930
If you're trying to make this as a stateless component,

00:12:58.930 --> 00:13:08.730
it is just going tohave a function which takes drops as para Meter returns this ender

00:13:08.730 --> 00:13:09.650
component.

00:13:09.650 --> 00:13:11.660
So we don't need this bracket anymore.

00:13:11.660 --> 00:13:14.220
And then we don't have the key work on this,

00:13:14.220 --> 00:13:16.450
but in severe receiving prompts over here.

00:13:16.450 --> 00:13:20.990
So I'll remove this start crops so that we don't say prop start contacts.

00:13:20.990 --> 00:13:25.650
We also don't need this component anymore because we're now having a stateless component.

00:13:25.650 --> 00:13:27.480
And we can also write a function.

00:13:27.480 --> 00:13:29.250
Corn is empty,

00:13:29.250 --> 00:13:32.970
which checks if given data is empty.

00:13:32.970 --> 00:13:35.510
Because right now we're only chicken if the length is zero.

00:13:35.510 --> 00:13:37.550
But what if we're supplying an object?

00:13:37.550 --> 00:13:40.950
An unusual object that we're trying to disperse a component,

00:13:40.950 --> 00:13:42.040
for example,

00:13:42.040 --> 00:13:43.660
a single contact person.

00:13:43.660 --> 00:13:49.160
But that is taking some time and we want to do is a loading so we can say here is empty off

00:13:49.160 --> 00:13:55.770
some data on believe this conditions in there if data is defined as a last data,

00:13:55.770 --> 00:13:58.320
is an instance off.

00:13:58.320 --> 00:13:58.980
Harry,

00:13:58.980 --> 00:14:05.710
What we want to check if the island's zero then we wanted it and threw it is empty,

00:14:05.710 --> 00:14:10.350
other 300 false So I can simply say return data about length.

00:14:10.350 --> 00:14:13.800
He's equals 20 That means it is empty.

00:14:13.800 --> 00:14:15.310
Otherwise it is not.

00:14:15.310 --> 00:14:16.890
It's gonna written falls from here.

00:14:16.890 --> 00:14:18.690
But if data has been defined,

00:14:18.690 --> 00:14:19.860
but it's not another.

00:14:19.860 --> 00:14:23.720
It is a regular object that I can check your gift data,

00:14:23.720 --> 00:14:25.970
which means if data has been defined,

00:14:25.970 --> 00:14:28.840
return with a object,

00:14:28.840 --> 00:14:31.240
your keys off data,

00:14:31.240 --> 00:14:36.330
which returns the area off on the properties of the object and we check your that.

00:14:36.330 --> 00:14:39.060
Is there any property or not?

00:14:39.060 --> 00:14:41.130
So if there are no properties,

00:14:41.130 --> 00:14:42.670
then return true from years,

00:14:42.670 --> 00:14:44.360
indicating the object is empty.

00:14:44.360 --> 00:14:45.190
Otherwise,

00:14:45.190 --> 00:14:46.530
we're gonna return falls.

00:14:46.530 --> 00:14:49.650
But if data itself has not been defined,

00:14:49.650 --> 00:14:53.640
then we're gonna simply done falls from here and now instead,

00:14:53.640 --> 00:14:54.570
off this,

00:14:54.570 --> 00:14:56.830
I can actually cut this from here.

00:14:56.830 --> 00:15:02.750
And then call is empty off this particular object,

00:15:02.750 --> 00:15:04.470
which is an area at this point in time.

00:15:04.470 --> 00:15:08.500
And we should still see the airport coming in the same fashion.

00:15:08.500 --> 00:15:10.390
But this looks much simpler.

00:15:10.390 --> 00:15:12.440
Now we have a lording,

00:15:12.440 --> 00:15:18.010
which is a function that takes old component returns and new component over here,

00:15:18.010 --> 00:15:19.490
which takes the props.

00:15:19.490 --> 00:15:24.300
And as you also can see that there is just a return object over here,

00:15:24.300 --> 00:15:25.330
there is nothing else.

00:15:25.330 --> 00:15:28.590
So we don't need this return keyword And this curly brackets.

00:15:28.590 --> 00:15:30.840
So I can extract this from here on.

00:15:30.840 --> 00:15:34.370
Then replace this with that copy Now.

00:15:34.370 --> 00:15:34.640
Hey,

00:15:34.640 --> 00:15:36.850
Josie is much simplified.

00:15:36.850 --> 00:15:39.660
There is one more scope for enhancement here.

00:15:39.660 --> 00:15:45.050
We're assuming there the props always has a property core contact.

00:15:45.050 --> 00:15:47.290
But what if you're working with products,

00:15:47.290 --> 00:15:53.370
are employees or customers are some other components So this has to be passed dynamically

00:15:53.370 --> 00:15:56.650
instead of assuming that it is contacts to do so.

00:15:56.650 --> 00:15:59.580
React also follows another pattern.

00:15:59.580 --> 00:16:01.550
So we go to the contact list.

00:16:01.550 --> 00:16:02.320
Why?

00:16:02.320 --> 00:16:07.320
This is a Cosi which takes old component and returns a new component.

00:16:07.320 --> 00:16:10.140
We don't want the property to be part of this.

00:16:10.140 --> 00:16:15.700
So the general convention is that you call a function by supplying a property and that

00:16:15.700 --> 00:16:17.250
function returns and juicy.

00:16:17.250 --> 00:16:18.640
So in other words,

00:16:18.640 --> 00:16:21.650
we're gonna call and loading as a function.

00:16:21.650 --> 00:16:25.440
So this function returns a juicy on the high.

00:16:25.440 --> 00:16:28.760
Josie will be supplying this as argument on here.

00:16:28.760 --> 00:16:34.000
I can say that here for this contact list contact is the property that represents the Ari.

00:16:34.000 --> 00:16:36.390
So if I'm looking at a product list,

00:16:36.390 --> 00:16:37.120
for example,

00:16:37.120 --> 00:16:39.600
I'm is a loading off products.

00:16:39.600 --> 00:16:42.360
And then this is the second call,

00:16:42.360 --> 00:16:44.460
which means you call this function,

00:16:44.460 --> 00:16:45.490
it threatens Ahidjo,

00:16:45.490 --> 00:16:45.850
see,

00:16:45.850 --> 00:16:48.650
and using the really juicy I'm passing an old component.

00:16:48.650 --> 00:16:50.430
Soto accommodate this.

00:16:50.430 --> 00:16:56.230
I go to the loading door Js Now I have to receive a perimeter car,

00:16:56.230 --> 00:16:57.790
probably property.

00:16:57.790 --> 00:17:00.730
And that property is supposed to be used over here.

00:17:00.730 --> 00:17:02.250
So this is all had Josie.

00:17:02.250 --> 00:17:04.110
I'm gonna cut this for a minute now,

00:17:04.110 --> 00:17:09.410
loading the function that received a property as a computer like context,

00:17:09.410 --> 00:17:14.370
our products and that function returns Ahidjo see which were just cut.

00:17:14.370 --> 00:17:16.260
Now we have the property over here,

00:17:16.260 --> 00:17:18.940
and that probably can be bus here.

00:17:18.940 --> 00:17:20.150
And to do that,

00:17:20.150 --> 00:17:21.190
I'm gonna remove this.

00:17:21.190 --> 00:17:24.240
Put a square bracket and college as property.

00:17:24.240 --> 00:17:26.420
Let us say this contact list.

00:17:26.420 --> 00:17:28.340
Also go back to the browser.

00:17:28.340 --> 00:17:32.280
Let's refresh and you'll see that the effect is seem now,

00:17:32.280 --> 00:17:36.200
this kind of a pattern Iscor as carrier functions,

00:17:36.200 --> 00:17:38.470
which actually calls one function,

00:17:38.470 --> 00:17:39.800
Then using that return belly,

00:17:39.800 --> 00:17:44.150
which is another function we're calling that function by supplying an argument.

00:17:44.150 --> 00:17:50.170
And the way you write that is generally variable equals toe a perimeter.

00:17:50.170 --> 00:17:55.240
This is a return belly off that function and that function except takes one parameter.

00:17:55.240 --> 00:18:01.130
This is another function which takes a perimeter and returns a J six over here.

00:18:01.130 --> 00:18:01.630
Generally,

00:18:01.630 --> 00:18:07.200
the way you might read carry functions would look like a function that's a fun one equals

00:18:07.200 --> 00:18:07.670
toe,

00:18:07.670 --> 00:18:13.690
something that takes a perimeter one but returns another function,

00:18:13.690 --> 00:18:18.060
which takes probably perimeter to which returned something like some Britain then.

00:18:18.060 --> 00:18:24.680
And in our call this you might have done something like fun one off something like this.

00:18:24.680 --> 00:18:29.940
And then something like this and the return value off this would be the ritual.

00:18:29.940 --> 00:18:34.990
And just to make sure that this particular loading hatches he works in a genetic fashion,

00:18:34.990 --> 00:18:44.750
let us also create one more component called US product list Turkey s and I'm gonna copy

00:18:44.750 --> 00:18:50.700
and paste the court from an existing one just to say sometime it is very much identical to

00:18:50.700 --> 00:18:51.950
the one that we have done.

00:18:51.950 --> 00:18:52.820
For example,

00:18:52.820 --> 00:18:55.490
here is a component called Product,

00:18:55.490 --> 00:19:01.870
which takes a prop scored product and displays the same with an image name.

00:19:01.870 --> 00:19:03.640
Wanted a per unit donated place.

00:19:03.640 --> 00:19:04.580
That's this component,

00:19:04.580 --> 00:19:06.350
which is a stateless component over here,

00:19:06.350 --> 00:19:10.730
and I have a product list as a component,

00:19:10.730 --> 00:19:12.230
which takes props.

00:19:12.230 --> 00:19:13.230
Card products,

00:19:13.230 --> 00:19:15.410
convert the products in tow,

00:19:15.410 --> 00:19:17.280
a product component,

00:19:17.280 --> 00:19:17.670
Ari.

00:19:17.670 --> 00:19:19.470
And then we're just displaying that,

00:19:19.470 --> 00:19:21.680
using a do as you can see here.

00:19:21.680 --> 00:19:26.170
I'm calling the loading function by supplying products I'm calling.

00:19:26.170 --> 00:19:31.370
This function returns the higher the component with simply takes product list as an old

00:19:31.370 --> 00:19:33.830
component and returns the modified component,

00:19:33.830 --> 00:19:38.660
and we know that the modified component is nothing but displaying the lording Please wait

00:19:38.660 --> 00:19:41.350
message until the product list is available.

00:19:41.350 --> 00:19:46.760
Now we want to use this in our indexed orgs so I'm displaying this over here.

00:19:46.760 --> 00:19:48.740
Let me arrange them properly.

00:19:48.740 --> 00:19:50.020
In two columns,

00:19:50.020 --> 00:19:51.430
Someone use a deal.

00:19:51.430 --> 00:19:54.990
It was last name is equals tow rope.

00:19:54.990 --> 00:20:00.660
And then I'm gonna create two years here who's class me equals to call.

00:20:00.660 --> 00:20:03.770
I'm gonna copy this.

00:20:03.770 --> 00:20:05.910
Make a duplicate.

00:20:05.910 --> 00:20:11.550
I cut this one basted in the first column and here a menace A for a list.

00:20:11.550 --> 00:20:16.430
Broad apps equals toe the start state dark products.

00:20:16.430 --> 00:20:22.070
And we don't have this dark state of products that's going are one variable here card

00:20:22.070 --> 00:20:22.690
products,

00:20:22.690 --> 00:20:24.820
which is an empty early on.

00:20:24.820 --> 00:20:27.380
As long as this array elements empty,

00:20:27.380 --> 00:20:31.540
you'll see that this component always displace loading.

00:20:31.540 --> 00:20:32.370
Please wait.

00:20:32.370 --> 00:20:33.380
So I say this,

00:20:33.380 --> 00:20:34.570
go back to the browser,

00:20:34.570 --> 00:20:37.640
and if you see here that this gets result.

00:20:37.640 --> 00:20:41.390
But since this component initial data is an empty aria,

00:20:41.390 --> 00:20:43.060
we still get this loading.

00:20:43.060 --> 00:20:43.710
Please wait.

00:20:43.710 --> 00:20:49.480
So until this crop is changed that until the state has changed,

00:20:49.480 --> 00:20:52.050
you will not see this component of real enduring.

00:20:52.050 --> 00:20:54.630
So this will always be displaying a test loading.

00:20:54.630 --> 00:20:57.240
So as soon as the state here changes,

00:20:57.240 --> 00:21:00.650
the state is propagated to the product list as props.

00:21:00.650 --> 00:21:05.840
And since the props changes the product list is no rear ender When they re rendering

00:21:05.840 --> 00:21:06.530
happens.

00:21:06.530 --> 00:21:08.580
The condition here is different.

00:21:08.580 --> 00:21:09.780
It is actually checking.

00:21:09.780 --> 00:21:10.540
Is it empty?

00:21:10.540 --> 00:21:10.720
No,

00:21:10.720 --> 00:21:11.820
it is not empty.

00:21:11.820 --> 00:21:16.740
That means the rial product list component is now being rendered with products.

00:21:16.740 --> 00:21:18.900
So to make sure that that works,

00:21:18.900 --> 00:21:20.220
it's basically a copy.

00:21:20.220 --> 00:21:21.380
Pissed off the same thing.

00:21:21.380 --> 00:21:21.930
Sam Religious.

00:21:21.930 --> 00:21:28.040
Copy this base for here on whether this contacts is there.

00:21:28.040 --> 00:21:29.760
It's now called US products.

00:21:29.760 --> 00:21:31.210
I saved this.

00:21:31.210 --> 00:21:32.550
Go back to the browser.

00:21:32.550 --> 00:21:33.180
We should know.

00:21:33.180 --> 00:21:35.670
See that we have the loading on.

00:21:35.670 --> 00:21:37.020
Then with a little bit of chile,

00:21:37.020 --> 00:21:39.420
we see the products also over there,

00:21:39.420 --> 00:21:45.850
which means we're now using this higher component called loading for crosscutting concepts

00:21:45.850 --> 00:21:47.260
and on the cross cutting content.

00:21:47.260 --> 00:21:51.950
Here is toe display an alternate message while the data is being loaded.

