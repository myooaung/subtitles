WEBVTT
1
00:00:00.050 --> 00:00:02.040
- [Narrator] Okay now that we've seen the APIs,

2
00:00:02.040 --> 00:00:04.020
let's go ahead and set up

3
00:00:04.020 --> 00:00:06.070
the Java Enterprise Edition Application.

4
00:00:06.070 --> 00:00:08.060
We are going to build a RESTful application.

5
00:00:08.060 --> 00:00:10.080
We are going to see the usage of the

6
00:00:10.080 --> 00:00:14.020
enterprise concurrency APIs inside a REST class.

7
00:00:14.020 --> 00:00:16.080
So through a REST class we are going to use them.

8
00:00:16.080 --> 00:00:19.020
So let's see what to do in order to set up

9
00:00:19.020 --> 00:00:22.020
that RESTful application in the NetBeans IDE.

10
00:00:22.020 --> 00:00:24.080
The first step is to create a new project

11
00:00:24.080 --> 00:00:26.030
from Maven archetype.

12
00:00:26.030 --> 00:00:28.010
So what I'm gonna do is, I'm just going

13
00:00:28.010 --> 00:00:30.000
to clear everything, stop everything,

14
00:00:30.000 --> 00:00:32.070
and let's start from the beginning.

15
00:00:32.070 --> 00:00:35.010
Clear this out.

16
00:00:35.010 --> 00:00:36.000
Okay.

17
00:00:36.000 --> 00:00:37.080
So I'm gonna say new project

18
00:00:37.080 --> 00:00:41.000
and there you choose option of Maven.

19
00:00:41.000 --> 00:00:43.050
Now under this list for a particular project,

20
00:00:43.050 --> 00:00:47.040
I'm actually going to make one from a Maven archetype.

21
00:00:47.040 --> 00:00:49.060
So say next and it will search for that archetype.

22
00:00:49.060 --> 00:00:54.010
The archetype is Java EE 8 Essentials Archetype.

23
00:00:54.010 --> 00:00:56.090
Very convenient archetype which will give you

24
00:00:56.090 --> 00:00:59.080
a complete reference to the Java EE 8 APIs.

25
00:00:59.080 --> 00:01:01.070
Okay say next

26
00:01:01.070 --> 00:01:02.050
and give it a name.

27
00:01:02.050 --> 00:01:06.090
So let's call it javaeeconcurrency.

28
00:01:06.090 --> 00:01:08.080
Let's get rid of the default package.

29
00:01:08.080 --> 00:01:09.060
We don't want that.

30
00:01:09.060 --> 00:01:12.040
We'll create our own packages.

31
00:01:12.040 --> 00:01:14.070
And say finish.

32
00:01:14.070 --> 00:01:17.090
So let the project be now constructed

33
00:01:17.090 --> 00:01:19.000
inside the IDE.

34
00:01:19.000 --> 00:01:20.030
This is how it looks like.

35
00:01:20.030 --> 00:01:22.040
You have your RESTful web services contained here.

36
00:01:22.040 --> 00:01:23.050
You have source packages

37
00:01:23.050 --> 00:01:25.040
and the rest of the dependencies full.

38
00:01:25.040 --> 00:01:26.020
Right.

39
00:01:26.020 --> 00:01:29.060
Now this project is going to do database interactions

40
00:01:29.060 --> 00:01:33.070
and it will also use connection pooling by a third party.

41
00:01:33.070 --> 00:01:35.060
C3PO we'll talk all about this

42
00:01:35.060 --> 00:01:36.060
in the subsequent videos.

43
00:01:36.060 --> 00:01:38.070
Do not bother too much about that right now.

44
00:01:38.070 --> 00:01:40.070
So we will have to add the dependencies

45
00:01:40.070 --> 00:01:43.090
for all of these external jars into the project.

46
00:01:43.090 --> 00:01:44.070
Right.

47
00:01:44.070 --> 00:01:46.030
The dependencies file is already

48
00:01:46.030 --> 00:01:48.060
available as part of your exercise files.

49
00:01:48.060 --> 00:01:50.040
You can pick those from there.

50
00:01:50.040 --> 00:01:52.000
So I'm just going to quickly

51
00:01:52.000 --> 00:01:54.010
get those dependencies, yeah.

52
00:01:54.010 --> 00:01:55.010
So if you are able to see

53
00:01:55.010 --> 00:01:57.060
this is the connector dependency which

54
00:01:57.060 --> 00:01:59.090
is the driver jar file for the database.

55
00:01:59.090 --> 00:02:01.080
Then theses couple of dependencies

56
00:02:01.080 --> 00:02:04.040
are for the C3PO connection pooling.

57
00:02:04.040 --> 00:02:05.060
We'll see why we need that but,

58
00:02:05.060 --> 00:02:06.080
let's right now

59
00:02:06.080 --> 00:02:09.090
just add these to the configuration file.

60
00:02:09.090 --> 00:02:12.070
So I'm going to take this, copy,

61
00:02:12.070 --> 00:02:14.000
go to my IDE

62
00:02:14.000 --> 00:02:17.050
and under the project files go to pom.xml

63
00:02:17.050 --> 00:02:18.090
and we see that the dependency for

64
00:02:18.090 --> 00:02:22.010
Java EE API has already been inserted

65
00:02:22.010 --> 00:02:23.060
because of the archetype.

66
00:02:23.060 --> 00:02:25.040
So further to that, we are going to add

67
00:02:25.040 --> 00:02:28.050
our own dependencies.

68
00:02:28.050 --> 00:02:29.070
Right?

69
00:02:29.070 --> 00:02:30.090
So these couple of them as I said

70
00:02:30.090 --> 00:02:32.060
are for the connection pooling mechanism.

71
00:02:32.060 --> 00:02:35.010
This is for the driver jar of the database.

72
00:02:35.010 --> 00:02:36.050
Okay.

73
00:02:36.050 --> 00:02:38.080
So what is the next step?

74
00:02:38.080 --> 00:02:40.070
Create all packages for beans,

75
00:02:40.070 --> 00:02:43.010
rest classes, DAO classes, okay.

76
00:02:43.010 --> 00:02:44.060
So let's go ahead

77
00:02:44.060 --> 00:02:47.090
and under the source package

78
00:02:47.090 --> 00:02:49.090
if you see there are the default packages

79
00:02:49.090 --> 00:02:52.000
that have got created because of the archetype.

80
00:02:52.000 --> 00:02:54.000
We do not need them, okay.

81
00:02:54.000 --> 00:02:56.000
This is a RESTful application

82
00:02:56.000 --> 00:02:58.000
and this is definitely going to deal

83
00:02:58.000 --> 00:03:00.080
with the basics of JAX-RS services.

84
00:03:00.080 --> 00:03:03.000
In case you think you do not really know

85
00:03:03.000 --> 00:03:05.050
much about JAX-RS services I will

86
00:03:05.050 --> 00:03:07.010
request you to take a very basic

87
00:03:07.010 --> 00:03:10.020
course on JAX-RS right here on LinkedIn Learning, right.

88
00:03:10.020 --> 00:03:13.040
So these are the default packages we do not want them.

89
00:03:13.040 --> 00:03:17.080
We just want to grab the JAX-RS configuration class.

90
00:03:17.080 --> 00:03:19.040
Very crucial.

91
00:03:19.040 --> 00:03:22.090
So this is a JAX-RS Java API for

92
00:03:22.090 --> 00:03:24.090
RESTful web services application

93
00:03:24.090 --> 00:03:26.020
that we are trying to build.

94
00:03:26.020 --> 00:03:28.050
And the class that we are looking at right now

95
00:03:28.050 --> 00:03:31.030
is going to extend the application class.

96
00:03:31.030 --> 00:03:35.050
Now when you talk about this is a basic class

97
00:03:35.050 --> 00:03:39.020
that will define the components of your JAX-RS application

98
00:03:39.020 --> 00:03:41.080
and it will also given the additional metadata.

99
00:03:41.080 --> 00:03:43.050
So whenever you want to run this application,

100
00:03:43.050 --> 00:03:46.020
the starting point will be this basic configuration

101
00:03:46.020 --> 00:03:47.090
class for your RESTful application.

102
00:03:47.090 --> 00:03:49.040
It will contain, of course, the

103
00:03:49.040 --> 00:03:51.090
reference of all your RESTful beans

104
00:03:51.090 --> 00:03:53.040
and whenever you want to access

105
00:03:53.040 --> 00:03:54.080
this RESTful application

106
00:03:54.080 --> 00:03:56.070
you'll have to access the resources path

107
00:03:56.070 --> 00:03:58.040
on line number 12 first

108
00:03:58.040 --> 00:04:00.080
and then the path of the specific RESTful bean

109
00:04:00.080 --> 00:04:02.020
that you want to go to.

110
00:04:02.020 --> 00:04:04.010
Now in case you do not have much knowledge

111
00:04:04.010 --> 00:04:07.010
about JAX-RS services implementation,

112
00:04:07.010 --> 00:04:08.070
I'll request you to take a small course

113
00:04:08.070 --> 00:04:10.030
about it on LinkedIn Learning.

114
00:04:10.030 --> 00:04:13.000
There after which you can proceed with this video.

115
00:04:13.000 --> 00:04:15.020
So this is the basic configuration class

116
00:04:15.020 --> 00:04:16.090
for our RESTful application

117
00:04:16.090 --> 00:04:19.010
and all the RESTful resources that

118
00:04:19.010 --> 00:04:20.040
you want to access.

119
00:04:20.040 --> 00:04:22.050
The application path annotation

120
00:04:22.050 --> 00:04:24.000
mentions the URI.

121
00:04:24.000 --> 00:04:27.030
So this is the basic URI for this application.

122
00:04:27.030 --> 00:04:29.050
If you want to access any RESTful bean

123
00:04:29.050 --> 00:04:31.000
out of this application you have to

124
00:04:31.000 --> 00:04:34.010
first access the resources path, right.

125
00:04:34.010 --> 00:04:36.020
So if we are just going to grab this class,

126
00:04:36.020 --> 00:04:37.010
copy,

127
00:04:37.010 --> 00:04:39.060
and paste it in our own package.

128
00:04:39.060 --> 00:04:41.040
So let's create a package first.

129
00:04:41.040 --> 00:04:44.080
Let's say com.app.rest.

130
00:04:44.080 --> 00:04:45.070
Okay.

131
00:04:45.070 --> 00:04:47.040
So these are going to have the REST classes.

132
00:04:47.040 --> 00:04:51.010
And I'm going to copy this.

133
00:04:51.010 --> 00:04:52.040
Refactor and copy because we will

134
00:04:52.040 --> 00:04:54.030
also have to change the package name.

135
00:04:54.030 --> 00:04:57.030
Get rid of the unwanted inputs and there we go.

136
00:04:57.030 --> 00:04:59.060
So now the JAX-RS configuration class,

137
00:04:59.060 --> 00:05:01.080
the basic JAX-RS service,

138
00:05:01.080 --> 00:05:04.070
is going to be present inside com.app.rest.

139
00:05:04.070 --> 00:05:07.020
So now we can delete these default packages.

140
00:05:07.020 --> 00:05:10.060
We do not need them anymore.

141
00:05:10.060 --> 00:05:11.070
Okay.

142
00:05:11.070 --> 00:05:13.080
So for those who are a little newer

143
00:05:13.080 --> 00:05:15.070
to the concept of JAX-RS service,

144
00:05:15.070 --> 00:05:17.000
this is a configuration class which

145
00:05:17.000 --> 00:05:19.020
extends the application class from

146
00:05:19.020 --> 00:05:22.080
java.ws.rs.core package

147
00:05:22.080 --> 00:05:24.060
and this is the one that is going to provide

148
00:05:24.060 --> 00:05:27.080
you with the basic URI for your application, right.

149
00:05:27.080 --> 00:05:29.030
Next step will be

150
00:05:29.030 --> 00:05:32.010
to create a RESTful bean,

151
00:05:32.010 --> 00:05:33.090
define at the rate path.

152
00:05:33.090 --> 00:05:35.030
The path annotation to it

153
00:05:35.030 --> 00:05:37.060
and specify its URI.

154
00:05:37.060 --> 00:05:39.000
Okay.

155
00:05:39.000 --> 00:05:42.080
So let's go ahead and create a RESTful bean here.

156
00:05:42.080 --> 00:05:44.060
So that will be class basically

157
00:05:44.060 --> 00:05:47.080
and let's say it is

158
00:05:47.080 --> 00:05:49.050
GreetResource.

159
00:05:49.050 --> 00:05:52.020
Just trying greet the user.

160
00:05:52.020 --> 00:05:53.000
Okay.

161
00:05:53.000 --> 00:05:55.070
This has to be annotated

162
00:05:55.070 --> 00:05:58.040
with the path annotation.

163
00:05:58.040 --> 00:06:01.010
So path will signify a value

164
00:06:01.010 --> 00:06:04.060
and let's say that value is greetUser.

165
00:06:04.060 --> 00:06:05.090
And what does this do?

166
00:06:05.090 --> 00:06:09.020
In order to reach the RESTful bean of GreetResource,

167
00:06:09.020 --> 00:06:12.010
you will have to access this path in the URL.

168
00:06:12.010 --> 00:06:12.090
Right?

169
00:06:12.090 --> 00:06:13.090
So when you hit this application,

170
00:06:13.090 --> 00:06:16.090
you're supposed to first access the basic URI

171
00:06:16.090 --> 00:06:19.030
and then access the URI with respect

172
00:06:19.030 --> 00:06:21.000
to the RESTful bean, right.

173
00:06:21.000 --> 00:06:24.050
So that becomes the URI for this resource.

174
00:06:24.050 --> 00:06:27.050
Next we have the write at REST method

175
00:06:27.050 --> 00:06:30.030
annotated with either @GET or @POST.

176
00:06:30.030 --> 00:06:31.080
So as we know, that when you talk

177
00:06:31.080 --> 00:06:33.050
about a RESTful service the methods

178
00:06:33.050 --> 00:06:34.090
that you write inside it

179
00:06:34.090 --> 00:06:37.080
will correspond to the STDP type requests, right.

180
00:06:37.080 --> 00:06:40.030
So let's say I want to add on a method

181
00:06:40.030 --> 00:06:42.040
which corresponds to HTP GET.

182
00:06:42.040 --> 00:06:45.010
So I'm going to say at the rate GET.

183
00:06:45.010 --> 00:06:46.010
So this can be imported.

184
00:06:46.010 --> 00:06:50.020
The annotation can be imported from javas.ws.rs

185
00:06:50.020 --> 00:06:51.010
on line number 8.

186
00:06:51.010 --> 00:06:52.090
The import is already come there.

187
00:06:52.090 --> 00:06:53.080
Right.

188
00:06:53.080 --> 00:06:56.020
Let's go down and write a method.

189
00:06:56.020 --> 00:06:59.050
So say public, let this return a string

190
00:06:59.050 --> 00:07:02.080
and we'll just say greetUser.

191
00:07:02.080 --> 00:07:05.040
Return a simple value which is

192
00:07:05.040 --> 00:07:06.090
let's not say hello world for a change

193
00:07:06.090 --> 00:07:12.010
let's say Java EE concurrency starts.

194
00:07:12.010 --> 00:07:13.070
Okay.

195
00:07:13.070 --> 00:07:16.000
Another thing is, we created a package for REST but,

196
00:07:16.000 --> 00:07:17.090
we still have to create package for beans,

197
00:07:17.090 --> 00:07:19.000
DAO classes, et cetera.

198
00:07:19.000 --> 00:07:21.020
So let's also get done with that.

199
00:07:21.020 --> 00:07:24.040
Under the source package let's say Java package

200
00:07:24.040 --> 00:07:27.040
com.app.beans.

201
00:07:27.040 --> 00:07:30.010
Another package will be database interaction classes.

202
00:07:30.010 --> 00:07:34.070
All of them will reside under com.app.dao.

203
00:07:34.070 --> 00:07:36.000
And then of course the runnable,

204
00:07:36.000 --> 00:07:37.060
the tasks that we have to define.

205
00:07:37.060 --> 00:07:39.030
Another package for that

206
00:07:39.030 --> 00:07:42.060
com.app.runnables.

207
00:07:42.060 --> 00:07:43.040
Great.

208
00:07:43.040 --> 00:07:44.090
So our entire structure is ready.

209
00:07:44.090 --> 00:07:48.000
The RESTful resource is already added there.

210
00:07:48.000 --> 00:07:48.080
So now,

211
00:07:48.080 --> 00:07:51.050
let's clean and build this project

212
00:07:51.050 --> 00:07:54.060
so that all the dependencies specifies in the palm XML

213
00:07:54.060 --> 00:07:57.000
get installed for this project.

214
00:07:57.000 --> 00:07:58.050
So now we are going to run this application

215
00:07:58.050 --> 00:08:00.000
using application server.

216
00:08:00.000 --> 00:08:02.000
And then we'll test out the RESTful API

217
00:08:02.000 --> 00:08:04.000
using the postman tool.

