WEBVTT
1
00:00:00.050 --> 00:00:02.020
- [Instructor] Okay, so now let's take a look

2
00:00:02.020 --> 00:00:04.000
at the Environment Setup.

3
00:00:04.000 --> 00:00:06.060
We'll look at the software prerequisites first,

4
00:00:06.060 --> 00:00:09.070
and then we'll go on to see how do you create a project.

5
00:00:09.070 --> 00:00:12.030
We of course will need Java Development Kit,

6
00:00:12.030 --> 00:00:15.060
that is JDK, the Java software, version 1.8 or higher.

7
00:00:15.060 --> 00:00:17.040
It can be downloaded from the link

8
00:00:17.040 --> 00:00:19.010
that is mentioned on the slide.

9
00:00:19.010 --> 00:00:20.030
Then, we of course need

10
00:00:20.030 --> 00:00:22.010
an integrated development environment.

11
00:00:22.010 --> 00:00:24.070
We are choosing NetBeans IDE,

12
00:00:24.070 --> 00:00:27.060
which is one shop stop for all the development activity,

13
00:00:27.060 --> 00:00:29.000
like coding, testing,

14
00:00:29.000 --> 00:00:31.090
hosting the application on the server, et cetera.

15
00:00:31.090 --> 00:00:34.050
8.2 is the most stable version, so we'll go with that.

16
00:00:34.050 --> 00:00:37.010
However, if you are comfortable with any other

17
00:00:37.010 --> 00:00:39.020
integrated development environment like, say,

18
00:00:39.020 --> 00:00:42.090
Eclipse, or IntelliJ, you are free to pick that up.

19
00:00:42.090 --> 00:00:45.090
Now, under the Java Enterprise Edition concurrency utilities

20
00:00:45.090 --> 00:00:48.020
we are going to build a RESTful application,

21
00:00:48.020 --> 00:00:51.060
and we need to host that on an application server

22
00:00:51.060 --> 00:00:55.010
for which we will require an application container, right?

23
00:00:55.010 --> 00:00:58.070
So we have chosen GlassFish Server version five.

24
00:00:58.070 --> 00:01:00.040
You can download it from that link,

25
00:01:00.040 --> 00:01:02.090
and if you wish to choose any other kind of server

26
00:01:02.090 --> 00:01:06.050
which is IBM WebSphere, WebLogic, or Wifly,

27
00:01:06.050 --> 00:01:07.080
of course, go ahead with that.

28
00:01:07.080 --> 00:01:10.030
In order to test out the RESTful web services,

29
00:01:10.030 --> 00:01:12.090
we would go with a tool called Postman.

30
00:01:12.090 --> 00:01:14.090
It's a very common and popular tool

31
00:01:14.090 --> 00:01:17.040
which is used across the industry projects

32
00:01:17.040 --> 00:01:19.020
to test RESTful services.

33
00:01:19.020 --> 00:01:22.050
So you can download it and install it on your machine.

34
00:01:22.050 --> 00:01:24.020
And then this course is of course

35
00:01:24.020 --> 00:01:26.020
going to do a few database interactions,

36
00:01:26.020 --> 00:01:28.050
so we will require a database server.

37
00:01:28.050 --> 00:01:30.060
I am going with MySQL server,

38
00:01:30.060 --> 00:01:32.070
if you want to pick up any other database server

39
00:01:32.070 --> 00:01:36.010
like MS SQL, or PostgreSQL, of course, go ahead with that.

40
00:01:36.010 --> 00:01:38.000
There's no problem with that at all.

41
00:01:38.000 --> 00:01:39.020
Now let's understand,

42
00:01:39.020 --> 00:01:42.080
how do you set up a Java Standard Edition project.

43
00:01:42.080 --> 00:01:44.040
Now this course is actually about

44
00:01:44.040 --> 00:01:46.050
Java Enterprise Edition concurrency,

45
00:01:46.050 --> 00:01:48.020
but we have to take a look at some of the

46
00:01:48.020 --> 00:01:51.000
Java Standard Edition concurrency APIs first,

47
00:01:51.000 --> 00:01:53.040
so that the understanding for the Enterprise Edition

48
00:01:53.040 --> 00:01:54.080
is a little better.

49
00:01:54.080 --> 00:01:56.070
Okay, so we are going to ahead and create

50
00:01:56.070 --> 00:01:58.050
a Standard Edition project first,

51
00:01:58.050 --> 00:02:00.090
look at the APIs of Java SE concurrency,

52
00:02:00.090 --> 00:02:03.000
and then move on with it.

53
00:02:03.000 --> 00:02:06.090
So now I'll open my IDE, and I'll create a new project here.

54
00:02:06.090 --> 00:02:10.010
You first have to create a Maven Java project in your IDE.

55
00:02:10.010 --> 00:02:11.030
So let's go ahead,

56
00:02:11.030 --> 00:02:13.020
I'll say it right click, New Project.

57
00:02:13.020 --> 00:02:16.060
And choose Maven, and under that choose a Java Application.

58
00:02:16.060 --> 00:02:17.070
Let's click on Next,

59
00:02:17.070 --> 00:02:23.090
and name this project as Java SE Concurrency.

60
00:02:23.090 --> 00:02:25.070
Let's get rid of this default package.

61
00:02:25.070 --> 00:02:26.060
We do not want that.

62
00:02:26.060 --> 00:02:28.050
We'll create our own packages.

63
00:02:28.050 --> 00:02:31.000
Let's click on Finish.

64
00:02:31.000 --> 00:02:32.050
Right, the next step is,

65
00:02:32.050 --> 00:02:34.050
we have to add the database connector

66
00:02:34.050 --> 00:02:36.060
JAR dependency for the project.

67
00:02:36.060 --> 00:02:37.080
What I mean by this is,

68
00:02:37.080 --> 00:02:40.060
I already said that all the demos that we do

69
00:02:40.060 --> 00:02:43.030
are going to have database interactions.

70
00:02:43.030 --> 00:02:45.050
We've chosen the MySQL database server,

71
00:02:45.050 --> 00:02:48.040
and we are going to write simple Java database connectivity,

72
00:02:48.040 --> 00:02:50.070
which is JDBC code.

73
00:02:50.070 --> 00:02:52.090
Now in order that the code works correctly,

74
00:02:52.090 --> 00:02:56.040
we will require the MySQL connector JAR,

75
00:02:56.040 --> 00:02:59.010
which we say is the driver implementation

76
00:02:59.010 --> 00:03:01.040
for the MySQL server, right?

77
00:03:01.040 --> 00:03:04.030
So that dependency you'll have to mention

78
00:03:04.030 --> 00:03:07.030
in your configuration file, which is pom.xml

79
00:03:07.030 --> 00:03:08.050
in your project.

80
00:03:08.050 --> 00:03:11.070
So the pom.xml will be available under the Project Files,

81
00:03:11.070 --> 00:03:13.020
you can just open that,

82
00:03:13.020 --> 00:03:18.030
and let's insert the dependencies tag here.

83
00:03:18.030 --> 00:03:19.080
Let's also end it,

84
00:03:19.080 --> 00:03:23.080
and within this we can enter the MySQL connector dependency.

85
00:03:23.080 --> 00:03:27.010
Now, I have already got that dependency ready with me,

86
00:03:27.010 --> 00:03:29.070
you can find it under the exercise folders

87
00:03:29.070 --> 00:03:31.070
for Chapter One 01_02 begin,

88
00:03:31.070 --> 00:03:34.060
so I'm just going to open that file up, and there we go.

89
00:03:34.060 --> 00:03:36.090
That's the first dependency that I can see.

90
00:03:36.090 --> 00:03:38.070
So I'm just going to copy this,

91
00:03:38.070 --> 00:03:43.020
go back to my project, and paste it on line number 10.

92
00:03:43.020 --> 00:03:44.070
Okay, right?

93
00:03:44.070 --> 00:03:45.080
Just make sure.

94
00:03:45.080 --> 00:03:49.000
Whatever version of MySQL server that you pick up,

95
00:03:49.000 --> 00:03:52.080
the corresponding MySQL connector JAR is also picked up,

96
00:03:52.080 --> 00:03:54.040
otherwise you may have certain conflicts

97
00:03:54.040 --> 00:03:55.090
and the code may not work correctly.

98
00:03:55.090 --> 00:03:58.030
So just be careful about that.

99
00:03:58.030 --> 00:04:00.030
If you want any information on which JAR

100
00:04:00.030 --> 00:04:02.020
has to be picked out, you just have to refer

101
00:04:02.020 --> 00:04:04.050
to the MySQL Server website,

102
00:04:04.050 --> 00:04:07.000
and all the information is available right there.

103
00:04:07.000 --> 00:04:08.090
Okay, the next step will be

104
00:04:08.090 --> 00:04:11.040
to create a proper package structure

105
00:04:11.040 --> 00:04:13.000
to store all the source code.

106
00:04:13.000 --> 00:04:14.090
Okay, so let's go back to the IDE

107
00:04:14.090 --> 00:04:16.050
and under the Source Package,

108
00:04:16.050 --> 00:04:18.010
we are going to create a lot of packages.

109
00:04:18.010 --> 00:04:18.090
Let's say it,

110
00:04:18.090 --> 00:04:21.020
right click, New, Java Package,

111
00:04:21.020 --> 00:04:25.040
I'm going to say com.app.test.

112
00:04:25.040 --> 00:04:27.030
So let's say this is the folder where we're going

113
00:04:27.030 --> 00:04:29.040
to test out everything, right?

114
00:04:29.040 --> 00:04:30.020
Another folder is,

115
00:04:30.020 --> 00:04:32.050
we said we're going to make database interactions,

116
00:04:32.050 --> 00:04:35.020
so we're going to have dedicated classes

117
00:04:35.020 --> 00:04:37.070
which do database transaction operations.

118
00:04:37.070 --> 00:04:39.090
We do not want to write everything under the main meter

119
00:04:39.090 --> 00:04:41.030
because that's a hay-walk.

120
00:04:41.030 --> 00:04:43.060
We should not be writing that kind of code.

121
00:04:43.060 --> 00:04:45.040
So I'm going to make a separate package,

122
00:04:45.040 --> 00:04:49.040
which has classes for interacting with the database,

123
00:04:49.040 --> 00:04:51.090
which is the DAO folder, right?

124
00:04:51.090 --> 00:04:55.050
Next up is the folder where you want to store all the data

125
00:04:55.050 --> 00:04:56.090
so in an object oriented programming,

126
00:04:56.090 --> 00:04:59.070
typically we store data in the form of Java beans

127
00:04:59.070 --> 00:05:01.050
so I'm going to create a folder for that too.

128
00:05:01.050 --> 00:05:06.090
So let's say com.app.beans, great.

129
00:05:06.090 --> 00:05:09.080
Then the next big thing, we are going to write

130
00:05:09.080 --> 00:05:11.070
classes for multi-trading, right,

131
00:05:11.070 --> 00:05:13.020
so we're going to have this application,

132
00:05:13.020 --> 00:05:15.030
which is called the Multi-Trading Capability,

133
00:05:15.030 --> 00:05:18.080
so we are going to have those runnable tasks, right?

134
00:05:18.080 --> 00:05:22.090
So let's create a package for runnables.

135
00:05:22.090 --> 00:05:24.060
You can choose to give a different name

136
00:05:24.060 --> 00:05:26.020
to all of these packages.

137
00:05:26.020 --> 00:05:28.040
This is the one convention that I have followed.

138
00:05:28.040 --> 00:05:30.000
You can go ahead and follow your own.

139
00:05:30.000 --> 00:05:31.030
There's no problem with that.

140
00:05:31.030 --> 00:05:34.030
Alright, so Beans is going to have all Java Beans.

141
00:05:34.030 --> 00:05:36.080
DAO is going to have the database related classes.

142
00:05:36.080 --> 00:05:39.080
Runnables is going to have all the classes for the trades,

143
00:05:39.080 --> 00:05:41.040
which are going to do jobs for you

144
00:05:41.040 --> 00:05:43.070
and Tests is the folder, which will contain

145
00:05:43.070 --> 00:05:46.050
all the testing classes for this application.

146
00:05:46.050 --> 00:05:48.060
Okay, what's the next step?

147
00:05:48.060 --> 00:05:50.050
Let's create a class with the main method.

148
00:05:50.050 --> 00:05:53.000
Okay, so let's go onto the Tests folder,

149
00:05:53.000 --> 00:05:56.020
create a class, very simple class test,

150
00:05:56.020 --> 00:06:00.090
and let's grab the main method here

151
00:06:00.090 --> 00:06:04.090
and let's put a simple Sysout.

152
00:06:04.090 --> 00:06:14.050
Let's say Java SE concurrency learning is started.

153
00:06:14.050 --> 00:06:16.060
Okay, right?

154
00:06:16.060 --> 00:06:18.050
After that, clean and build the code

155
00:06:18.050 --> 00:06:19.040
and run the application.

156
00:06:19.040 --> 00:06:20.060
So I'm gonna write click on this

157
00:06:20.060 --> 00:06:22.040
and say clean and build

158
00:06:22.040 --> 00:06:23.090
and it'll clean and build the project.

159
00:06:23.090 --> 00:06:27.020
It'll install that MySQL Connector Dependency for us.

160
00:06:27.020 --> 00:06:28.050
Yes, the build is a success.

161
00:06:28.050 --> 00:06:31.000
Let's clear the console and now right click on this

162
00:06:31.000 --> 00:06:32.080
and run the file.

163
00:06:32.080 --> 00:06:34.050
Okay, so there we are.

164
00:06:34.050 --> 00:06:36.010
The project setup is ready for us

165
00:06:36.010 --> 00:06:37.060
and now we can start taking a look

166
00:06:37.060 --> 00:06:40.090
into the concepts of JAVA Standard Edition API

167
00:06:40.090 --> 00:06:43.000
and then we look at the demos.

