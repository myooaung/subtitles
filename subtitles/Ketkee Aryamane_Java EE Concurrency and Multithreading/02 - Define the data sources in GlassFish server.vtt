WEBVTT
1
00:00:00.050 --> 00:00:02.090
- [Instructor] Now let's see the demo for concurrency

2
00:00:02.090 --> 00:00:05.080
by using the JTA Transaction API.

3
00:00:05.080 --> 00:00:07.080
Now, let's understand this,

4
00:00:07.080 --> 00:00:10.040
that I am going to simulate a scenario here.

5
00:00:10.040 --> 00:00:14.050
I have only one database schema, which is test.

6
00:00:14.050 --> 00:00:17.020
So, I am going to create a scenario where I establish

7
00:00:17.020 --> 00:00:19.030
two different data sources pointing

8
00:00:19.030 --> 00:00:21.010
to that same database, test.

9
00:00:21.010 --> 00:00:23.040
And that we will see that whenever you perform

10
00:00:23.040 --> 00:00:25.040
transactions on multiple data sources,

11
00:00:25.040 --> 00:00:27.050
is the transaction management okay

12
00:00:27.050 --> 00:00:29.040
during concurrency programming.

13
00:00:29.040 --> 00:00:30.070
So, we have a set of two tables:

14
00:00:30.070 --> 00:00:34.060
bank_account_transaction and bank_account_transaction_log.

15
00:00:34.060 --> 00:00:35.060
And they're dependent tables,

16
00:00:35.060 --> 00:00:38.070
so if you have an entry in bank_account_transaction,

17
00:00:38.070 --> 00:00:40.090
only then will you ever have an entry

18
00:00:40.090 --> 00:00:42.080
in bank_account_transaction_log.

19
00:00:42.080 --> 00:00:46.000
So, the transaction ID is a foreign key in the second table

20
00:00:46.000 --> 00:00:48.050
which is, of course, the primary key of the first one.

21
00:00:48.050 --> 00:00:50.010
Do not worry about the table schema

22
00:00:50.010 --> 00:00:52.030
because the database script is

23
00:00:52.030 --> 00:00:55.030
already provided to you in the exercise folders.

24
00:00:55.030 --> 00:00:56.040
So, you can just run them on

25
00:00:56.040 --> 00:00:58.030
and have them at your database.

26
00:00:58.030 --> 00:01:00.090
Now, we have to create two different

27
00:01:00.090 --> 00:01:04.070
data source object resources on the GlassFish Server

28
00:01:04.070 --> 00:01:06.090
through the IDE and admin console.

29
00:01:06.090 --> 00:01:09.060
So, what we'll do is, let's go back to the IDE.

30
00:01:09.060 --> 00:01:13.040
And on this project, you can right click and say New

31
00:01:13.040 --> 00:01:18.010
and select the option of GlassFish.

32
00:01:18.010 --> 00:01:21.070
Now, under the GlassFish option you have these many options.

33
00:01:21.070 --> 00:01:23.090
So, I'm going to set up a connection pool.

34
00:01:23.090 --> 00:01:26.030
If you remember one of our previous demos

35
00:01:26.030 --> 00:01:27.080
that we did when we were trying

36
00:01:27.080 --> 00:01:30.060
to read all the users and save them to a file,

37
00:01:30.060 --> 00:01:32.060
we did a lot of database interactions.

38
00:01:32.060 --> 00:01:35.070
And so many database connection objects were created.

39
00:01:35.070 --> 00:01:38.060
So I actually plugged in a third-party

40
00:01:38.060 --> 00:01:42.000
connection pooling library, C3PO.

41
00:01:42.000 --> 00:01:43.080
But that was an extended party.

42
00:01:43.080 --> 00:01:47.050
What I am going do here is, I'll create the connection pool

43
00:01:47.050 --> 00:01:50.030
inside the application server itself,

44
00:01:50.030 --> 00:01:54.030
and then we will draw two data sources out of that pool.

45
00:01:54.030 --> 00:01:55.020
Okay?

46
00:01:55.020 --> 00:01:56.000
So, let's get started.

47
00:01:56.000 --> 00:01:58.010
We'll click on Next.

48
00:01:58.010 --> 00:01:59.070
Let's give it a name.

49
00:01:59.070 --> 00:02:04.000
We'll maybe say testingPool.

50
00:02:04.000 --> 00:02:05.050
And now I'm not going to extract

51
00:02:05.050 --> 00:02:06.060
from the existing connection,

52
00:02:06.060 --> 00:02:09.040
I'm going to configure my database schema.

53
00:02:09.040 --> 00:02:10.070
Now, for this you will, of course,

54
00:02:10.070 --> 00:02:13.000
require the database configuration.

55
00:02:13.000 --> 00:02:15.070
So I'll have to select the MySQL server,

56
00:02:15.070 --> 00:02:17.050
which is right there at the bottom.

57
00:02:17.050 --> 00:02:20.010
And most importantly, as we said Global Transactions,

58
00:02:20.010 --> 00:02:22.080
so it will require the XA resource.

59
00:02:22.080 --> 00:02:24.040
This is very critical.

60
00:02:24.040 --> 00:02:27.020
Say Next, and now, you're able to provide

61
00:02:27.020 --> 00:02:29.000
the data source class name.

62
00:02:29.000 --> 00:02:31.050
Now we, of course, know that we need an XA resource

63
00:02:31.050 --> 00:02:33.080
in order to do these kind of transactions.

64
00:02:33.080 --> 00:02:36.030
Now, the exact XA resource that's available

65
00:02:36.030 --> 00:02:39.030
in the MySQL connector driver jar file,

66
00:02:39.030 --> 00:02:43.050
the name for it is, MysqlXADataSource.

67
00:02:43.050 --> 00:02:46.010
So I'm just going to change that here quickly.

68
00:02:46.010 --> 00:02:47.060
That's the one.

69
00:02:47.060 --> 00:02:49.040
Then, let's come down and provide

70
00:02:49.040 --> 00:02:51.050
the necessary parameters of the database.

71
00:02:51.050 --> 00:02:54.020
So, one, I need the JDBC URL.

72
00:02:54.020 --> 00:02:56.080
Let's go ahead and provide that.

73
00:02:56.080 --> 00:03:02.060
That'll be localhost:3306/test.

74
00:03:02.060 --> 00:03:04.010
That's my database.

75
00:03:04.010 --> 00:03:05.080
And then, of course, the credentials.

76
00:03:05.080 --> 00:03:09.090
Let's give the credentials as well.

77
00:03:09.090 --> 00:03:10.070
Okay.

78
00:03:10.070 --> 00:03:14.000
And then let's go ahead and click on Next.

79
00:03:14.000 --> 00:03:16.080
Let's keep all of these configuration properties

80
00:03:16.080 --> 00:03:18.080
for the connection pool as they are.

81
00:03:18.080 --> 00:03:21.030
We do not want to really configure anything right now.

82
00:03:21.030 --> 00:03:23.030
You may want to configure it when you actually do it

83
00:03:23.030 --> 00:03:26.080
in your live projects as per your application requirements.

84
00:03:26.080 --> 00:03:29.060
So let's click on Finish.

85
00:03:29.060 --> 00:03:33.050
Now, the moment we do this, under the WEB-INF directory,

86
00:03:33.050 --> 00:03:37.030
you have a GlassFish resources XML that'll get generated.

87
00:03:37.030 --> 00:03:40.080
Let's right-click on it and copy the path of that file.

88
00:03:40.080 --> 00:03:44.090
So, you have to click here and take this path.

89
00:03:44.090 --> 00:03:48.070
Close this, and now, let's go to the admin console.

90
00:03:48.070 --> 00:03:51.060
In the Resources tab, you have this button of Add Resources.

91
00:03:51.060 --> 00:03:53.000
So, I'm going to click there

92
00:03:53.000 --> 00:03:57.070
and choose this XML file path that I copied.

93
00:03:57.070 --> 00:04:00.080
So, when I say Open and when I say OK,

94
00:04:00.080 --> 00:04:03.090
do you see that the resource was added successfully?

95
00:04:03.090 --> 00:04:06.070
So now, let's go to JDBC Resources,

96
00:04:06.070 --> 00:04:08.050
and let's check the connection pool.

97
00:04:08.050 --> 00:04:09.030
There you go.

98
00:04:09.030 --> 00:04:11.000
You have your testing pool now

99
00:04:11.000 --> 00:04:13.060
that we created a while ago from the IDE

100
00:04:13.060 --> 00:04:16.080
available right there as a resource on the server.

101
00:04:16.080 --> 00:04:17.060
Okay?

102
00:04:17.060 --> 00:04:19.080
Now, using this connection pool,

103
00:04:19.080 --> 00:04:21.090
we are going to create two data sources.

104
00:04:21.090 --> 00:04:23.060
So, let's go back to JDBC and come here,

105
00:04:23.060 --> 00:04:26.090
JDBC Resources, and click on New.

106
00:04:26.090 --> 00:04:30.010
Let's give a name, jdbc/source1,

107
00:04:30.010 --> 00:04:33.030
and I want to draw this out of the testing pool.

108
00:04:33.030 --> 00:04:34.090
Say OK.

109
00:04:34.090 --> 00:04:36.080
So that source is now ready for you.

110
00:04:36.080 --> 00:04:38.060
Let's create one more.

111
00:04:38.060 --> 00:04:40.070
Let's name it source2,

112
00:04:40.070 --> 00:04:44.040
and then, testingPool again, and say OK.

113
00:04:44.040 --> 00:04:46.070
So now do you see the two data sources listed

114
00:04:46.070 --> 00:04:48.050
which are drawn from the testing pool

115
00:04:48.050 --> 00:04:50.090
that we created for this table.

116
00:04:50.090 --> 00:04:51.070
Right?

117
00:04:51.070 --> 00:04:54.070
So now, basically we have this step done.

118
00:04:54.070 --> 00:04:55.070
We have created two different

119
00:04:55.070 --> 00:04:58.010
data source object resources on the server,

120
00:04:58.010 --> 00:05:00.020
by first creating the connection pool,

121
00:05:00.020 --> 00:05:02.000
and then creating the resources.

122
00:05:02.000 --> 00:05:04.000
The next step in the next video.

