WEBVTT
1
00:00:00.050 --> 00:00:02.010
- [Narrator] Okay. The next step is

2
00:00:02.010 --> 00:00:04.080
Create a TransactionProcessor.

3
00:00:04.080 --> 00:00:07.080
That will be now a runnable or callable implementation.

4
00:00:07.080 --> 00:00:10.030
So, let's say we pick up the runnable implementation.

5
00:00:10.030 --> 00:00:13.020
Inside the run() method, we have to do a lot of things.

6
00:00:13.020 --> 00:00:14.050
So, let's first define that class.

7
00:00:14.050 --> 00:00:15.080
Let's go to IDE.

8
00:00:15.080 --> 00:00:18.050
And, under the runnables folder,

9
00:00:18.050 --> 00:00:20.070
I'm going to have a class

10
00:00:20.070 --> 00:00:26.090
called TransactionProcessor.

11
00:00:26.090 --> 00:00:30.010
Okay.

12
00:00:30.010 --> 00:00:34.050
And this will, of course, implements Runnable.

13
00:00:34.050 --> 00:00:35.060
Okay.

14
00:00:35.060 --> 00:00:38.070
So, that's the class we have now with us.

15
00:00:38.070 --> 00:00:41.000
And what we are going to do is,

16
00:00:41.000 --> 00:00:43.020
inside this, the first step is,

17
00:00:43.020 --> 00:00:47.060
we have to get the javax.transaction.UserTransaction object.

18
00:00:47.060 --> 00:00:49.090
So, that is going to happen by the JNDI lookup.

19
00:00:49.090 --> 00:00:51.020
The next big step is,

20
00:00:51.020 --> 00:00:54.010
you will have to get the TransactionBean object as well

21
00:00:54.010 --> 00:00:55.050
by the JNDI lookup.

22
00:00:55.050 --> 00:00:57.050
So, let's go there.

23
00:00:57.050 --> 00:01:01.000
Let's come inside and say private UserTransaction

24
00:01:01.000 --> 00:01:04.020
so this comes from the javax.transaction package.

25
00:01:04.020 --> 00:01:05.060
Take a reference for it.

26
00:01:05.060 --> 00:01:09.090
And also, take a reference for your TransactionBean.

27
00:01:09.090 --> 00:01:14.030
(keyboard typing sound)

28
00:01:14.030 --> 00:01:15.080
Okay.

29
00:01:15.080 --> 00:01:20.050
Now, we write the constructor of TransactionProcessor().

30
00:01:20.050 --> 00:01:23.040
And, what are we going to do inside it?

31
00:01:23.040 --> 00:01:25.040
We are going to do the JNDI lookup.

32
00:01:25.040 --> 00:01:26.050
And this time, we are going to do it

33
00:01:26.050 --> 00:01:28.030
by the initial context API.

34
00:01:28.030 --> 00:01:29.090
So, let's do it carefully.

35
00:01:29.090 --> 00:01:33.050
InitialContext, that's the API javax.naming,

36
00:01:33.050 --> 00:01:37.040
get a reference, and say new.

37
00:01:37.040 --> 00:01:39.080
And then say,

38
00:01:39.080 --> 00:01:41.060
userTransaction.

39
00:01:41.060 --> 00:01:44.020
I want a userTransaction object.

40
00:01:44.020 --> 00:01:48.030
So, that will be context.lookup().

41
00:01:48.030 --> 00:01:51.010
So, across the application server,

42
00:01:51.010 --> 00:01:55.010
you will have the user transaction API by this JNDI name.

43
00:01:55.010 --> 00:02:01.090
It will be "java:comp/UserTransaction"

44
00:02:01.090 --> 00:02:05.080
Okay. And the other thing is, you will have to cast this

45
00:02:05.080 --> 00:02:11.040
to userTransaction because it runs an object kind of formal.

46
00:02:11.040 --> 00:02:13.050
Okay, the next thing is,

47
00:02:13.050 --> 00:02:15.090
we have to do exactly the same procedure

48
00:02:15.090 --> 00:02:17.080
for the TransactionBean.

49
00:02:17.080 --> 00:02:21.000
Okay, so, let's say bean and I'm going to also look up

50
00:02:21.000 --> 00:02:23.090
the bean resource by the context object.

51
00:02:23.090 --> 00:02:26.090
I'm going to say context.lookup

52
00:02:26.090 --> 00:02:28.050
Okay, now understand this.

53
00:02:28.050 --> 00:02:31.040
This transactionBean is there right inside your

54
00:02:31.040 --> 00:02:33.050
project's module, one of the modules.

55
00:02:33.050 --> 00:02:35.010
So, in order to pick up that

56
00:02:35.010 --> 00:02:37.020
particular bean from the module,

57
00:02:37.020 --> 00:02:42.020
you have this convention, you say java:module/

58
00:02:42.020 --> 00:02:44.030
and the name of the bean.

59
00:02:44.030 --> 00:02:48.030
So, the name of the bean that we gave was tx-bean.

60
00:02:48.030 --> 00:02:53.090
And then, of course, let's cast this to TransactionBean.

61
00:02:53.090 --> 00:02:54.070
Okay?

62
00:02:54.070 --> 00:02:56.050
So, in case you have a confusion, if you remember,

63
00:02:56.050 --> 00:02:59.070
recollect, on line 20, we have given a name to the bean.

64
00:02:59.070 --> 00:03:00.050
Right?

65
00:03:00.050 --> 00:03:03.020
That's the name we are now trying to put up here.

66
00:03:03.020 --> 00:03:04.010
Save this, and of course,

67
00:03:04.010 --> 00:03:05.080
this is definitely going to throw you

68
00:03:05.080 --> 00:03:07.010
some checked exceptions.

69
00:03:07.010 --> 00:03:09.090
So, let's quickly fix that with a try-catch block.

70
00:03:09.090 --> 00:03:11.050
Yes.

71
00:03:11.050 --> 00:03:14.040
So, what this does is, it will throw a NamingException

72
00:03:14.040 --> 00:03:17.010
in case it's not able to find any of these resources.

73
00:03:17.010 --> 00:03:18.000
Okay?

74
00:03:18.000 --> 00:03:20.010
Now, the next step will be,

75
00:03:20.010 --> 00:03:22.040
we'll have to define the run() method,

76
00:03:22.040 --> 00:03:24.000
begin the transaction,

77
00:03:24.000 --> 00:03:25.060
call all the TransactionBean methods

78
00:03:25.060 --> 00:03:28.040
one after another within the same transaction, of course,

79
00:03:28.040 --> 00:03:31.020
and then, commit and rollback as desired.

80
00:03:31.020 --> 00:03:33.070
All of this is going to go in the run() method.

81
00:03:33.070 --> 00:03:37.020
So, let's go back to the IDE

82
00:03:37.020 --> 00:03:40.050
and I'm just going to...

83
00:03:40.050 --> 00:03:41.070
After the constructor,

84
00:03:41.070 --> 00:03:43.070
I'm going to put this run() method call.

85
00:03:43.070 --> 00:03:45.000
Let's get rid of the throw implementation,

86
00:03:45.000 --> 00:03:46.010
we don't want that.

87
00:03:46.010 --> 00:03:47.080
What I want to do, the first step,

88
00:03:47.080 --> 00:03:51.060
take the userTransaction and begin() it.

89
00:03:51.060 --> 00:03:56.020
Next, take the bean and saveBankAccountTransaction().

90
00:03:56.020 --> 00:04:00.050
Next will be, bean.saveBankAccountTransactionLog(), right?

91
00:04:00.050 --> 00:04:02.040
So, those methods, one after the other.

92
00:04:02.040 --> 00:04:04.020
And then finding if everything is okay.

93
00:04:04.020 --> 00:04:06.060
Then, you say commit().

94
00:04:06.060 --> 00:04:08.050
Okay.

95
00:04:08.050 --> 00:04:11.030
Save this and let's handle the exceptions thrown.

96
00:04:11.030 --> 00:04:13.030
So, surround the block with try-catch.

97
00:04:13.030 --> 00:04:15.020
And, what I'll additionally do is,

98
00:04:15.020 --> 00:04:17.010
instead of these couple of catch blocks,

99
00:04:17.010 --> 00:04:21.000
I'll add one catch block with the exception

100
00:04:21.000 --> 00:04:23.080
part I need to define.

101
00:04:23.080 --> 00:04:27.030
And, inside this, we will put a system.out

102
00:04:27.030 --> 00:04:30.000
and we are going to say "ROLLING BACK"

103
00:04:30.000 --> 00:04:32.010
so, if anything goes wrong, in any of these operations,

104
00:04:32.010 --> 00:04:33.090
then you do roll back, right?

105
00:04:33.090 --> 00:04:36.050
So, we say because

106
00:04:36.050 --> 00:04:39.050
and let's get hold of that exception variable

107
00:04:39.050 --> 00:04:42.070
and just print out getMessage().

108
00:04:42.070 --> 00:04:44.090
And, after that, of course, the big step,

109
00:04:44.090 --> 00:04:48.030
try userTransaction.rollback();

110
00:04:48.030 --> 00:04:53.010
Let's handle the exceptions with respect to this, yes.

111
00:04:53.010 --> 00:04:54.040
Okay.

112
00:04:54.040 --> 00:04:57.000
So, that's what this is.

113
00:04:57.000 --> 00:05:00.060
The transaction processor is ready with us.

114
00:05:00.060 --> 00:05:03.000
The rest of the steps, we will see in the next video.

