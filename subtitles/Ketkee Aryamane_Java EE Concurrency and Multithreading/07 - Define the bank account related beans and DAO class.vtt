WEBVTT
1
00:00:00.020 --> 00:00:03.070
- [Woman] Let's start the ManagedExecutorService demo now.

2
00:00:03.070 --> 00:00:06.010
First we will do all the database interactions

3
00:00:06.010 --> 00:00:10.010
and the things related to the data of the objects, right?

4
00:00:10.010 --> 00:00:12.090
So the first thing is create a BankAccountDao class.

5
00:00:12.090 --> 00:00:14.080
So let's head back to the IDE

6
00:00:14.080 --> 00:00:15.080
and under the Dao folder,

7
00:00:15.080 --> 00:00:17.060
I'm going to create a class.

8
00:00:17.060 --> 00:00:20.080
BankAccountDao.

9
00:00:20.080 --> 00:00:22.060
So this is the class which is going to do the

10
00:00:22.060 --> 00:00:24.090
database interactions for us.

11
00:00:24.090 --> 00:00:27.030
Next step will be create the BankAccount

12
00:00:27.030 --> 00:00:31.010
and the BankAccountTransaction beans as per the tables.

13
00:00:31.010 --> 00:00:32.020
So if you look at the database.

14
00:00:32.020 --> 00:00:35.020
I have the BankAccount table with these fields,

15
00:00:35.020 --> 00:00:38.050
and the Transaction table with five other columns.

16
00:00:38.050 --> 00:00:39.080
Do not worry about this.

17
00:00:39.080 --> 00:00:42.020
The database script is already provided to you

18
00:00:42.020 --> 00:00:43.060
in your exercise files.

19
00:00:43.060 --> 00:00:45.090
So you will have all of this data ready with you

20
00:00:45.090 --> 00:00:48.050
when you start off this demo.

21
00:00:48.050 --> 00:00:50.070
So let's go to the IDE and create beans now.

22
00:00:50.070 --> 00:00:53.050
Let's create one for BankAccount

23
00:00:53.050 --> 00:00:56.020
to store all the BankAccount information.

24
00:00:56.020 --> 00:00:58.080
And what will it have?

25
00:00:58.080 --> 00:01:03.050
It will have an account number.

26
00:01:03.050 --> 00:01:10.070
Then it will have the name of the account holder.

27
00:01:10.070 --> 00:01:14.030
The email of the account holder

28
00:01:14.030 --> 00:01:19.070
and it will also have the account type.

29
00:01:19.070 --> 00:01:22.010
Okay. Let's go ahead and insert the data setters.

30
00:01:22.010 --> 00:01:23.060
So right-click Insert Code,

31
00:01:23.060 --> 00:01:24.080
generate getters and setters,

32
00:01:24.080 --> 00:01:29.020
and select all fields, generate and just save.

33
00:01:29.020 --> 00:01:30.090
Right, so BankAccount bean is ready with us.

34
00:01:30.090 --> 00:01:33.070
Next, will be the BankAccountTransaction bean.

35
00:01:33.070 --> 00:01:39.070
So let's go ahead and say BankAccountTransactionBean.

36
00:01:39.070 --> 00:01:40.050
Let's not suffix bean,

37
00:01:40.050 --> 00:01:43.030
let's just say BankAccountTransaction.

38
00:01:43.030 --> 00:01:44.020
Now what are the fields

39
00:01:44.020 --> 00:01:46.030
inside the BankAccountTransaction bean?

40
00:01:46.030 --> 00:01:48.060
Let's go ahead and define them.

41
00:01:48.060 --> 00:01:53.090
First one, of course, the account number.

42
00:01:53.090 --> 00:01:55.080
I want a space between the data type

43
00:01:55.080 --> 00:01:59.000
and the field name. Next is...

44
00:01:59.000 --> 00:02:02.010
We have the amount for this transaction.

45
00:02:02.010 --> 00:02:04.040
We will take a double type variable.

46
00:02:04.040 --> 00:02:09.020
Next, we have the transaction date.

47
00:02:09.020 --> 00:02:12.030
So txDate maybe?

48
00:02:12.030 --> 00:02:15.090
And then we have the transaction type,

49
00:02:15.090 --> 00:02:19.020
whether it was a credit or debit operation,

50
00:02:19.020 --> 00:02:20.040
and then we have the

51
00:02:20.040 --> 00:02:23.000
unique identifier for this transaction.

52
00:02:23.000 --> 00:02:24.050
That would be a

53
00:02:24.050 --> 00:02:27.050
txID which is off in digit type.

54
00:02:27.050 --> 00:02:31.060
And let's quickly generate the data setters for this too.

55
00:02:31.060 --> 00:02:32.080
So right-click Insert Code,

56
00:02:32.080 --> 00:02:36.030
select all your properties and say Generate.

57
00:02:36.030 --> 00:02:38.040
Okay, so the beans are ready with us

58
00:02:38.040 --> 00:02:40.030
and the Dao is also ready with us.

59
00:02:40.030 --> 00:02:42.000
We have to do one big thing here.

60
00:02:42.000 --> 00:02:45.010
Now we are going to create local connection objects

61
00:02:45.010 --> 00:02:47.080
the way we did in the Standard Edition demo.

62
00:02:47.080 --> 00:02:51.040
Here, we are going to have a DataSource object

63
00:02:51.040 --> 00:02:55.000
because we have to do connection pulling using c3p0.

64
00:02:55.000 --> 00:02:56.090
Right, so I'm going to take the DataSource object

65
00:02:56.090 --> 00:02:59.020
from Java Extort SQL.

66
00:02:59.020 --> 00:03:02.090
This is generally how we do it in live applications

67
00:03:02.090 --> 00:03:06.050
and we also have a constructor.

68
00:03:06.050 --> 00:03:10.070
Which will quickly initialize the DataSource for us.

69
00:03:10.070 --> 00:03:13.080
Okay, now we are going to add methods

70
00:03:13.080 --> 00:03:15.090
in the BankAccountDao class.

71
00:03:15.090 --> 00:03:18.070
One, is to get the BankAccount information

72
00:03:18.070 --> 00:03:20.020
for all the users,

73
00:03:20.020 --> 00:03:24.000
and second, to get the transaction information

74
00:03:24.000 --> 00:03:26.010
for a particular BankAccount.

75
00:03:26.010 --> 00:03:28.000
We'll look at this in the next video.

