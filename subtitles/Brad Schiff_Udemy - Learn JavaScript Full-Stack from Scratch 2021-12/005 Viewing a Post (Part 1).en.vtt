WEBVTT
1
00:00:01.720 --> 00:00:02.650
Hello, everyone.

2
00:00:03.070 --> 00:00:11.080
In this lesson, we are going to work on being able to view an existing post from within our Web app,

3
00:00:11.350 --> 00:00:12.860
let's jump right into it.

4
00:00:13.030 --> 00:00:19.510
So in our previous lesson, we set up the ability to click on this create post button, and we were

5
00:00:19.510 --> 00:00:24.910
able to successfully submit a user's input as a new document into our database.

6
00:00:25.480 --> 00:00:32.240
Well, now the question becomes, how can we view that existing post from within our website, right

7
00:00:32.380 --> 00:00:33.730
from within a U.

8
00:00:33.730 --> 00:00:35.230
RL for that post?

9
00:00:35.740 --> 00:00:42.340
Well, before we worry about the exact You URL that an individual post should have, let's first worry

10
00:00:42.340 --> 00:00:47.080
about the HTML template that an individual posts screen should have.

11
00:00:47.590 --> 00:00:50.590
For example, it should look something like this.

12
00:00:51.250 --> 00:00:57.620
So let's get started by adding a new SJS template in our project for this template.

13
00:00:58.270 --> 00:01:00.610
We're not going to type this HTML out.

14
00:01:00.610 --> 00:01:02.180
Let's just copy and paste it.

15
00:01:02.590 --> 00:01:09.610
As always, you can jump to the repository and look inside complex app and then HTML templates.

16
00:01:10.070 --> 00:01:16.510
And in this case we are interested in the template that is named post HTML.

17
00:01:16.930 --> 00:01:18.040
So open that up.

18
00:01:18.950 --> 00:01:21.020
And then click on Raw.

19
00:01:22.830 --> 00:01:29.730
Let's copy everything here into our clipboard, so select it all copy, OK, back in your text editor,

20
00:01:30.150 --> 00:01:32.990
let's add a new file within our views folder.

21
00:01:33.000 --> 00:01:35.670
So if I right click on Views new file.

22
00:01:36.480 --> 00:01:42.990
Let's name this single dash post dash screen SJS.

23
00:01:44.220 --> 00:01:49.140
OK, in the new file, go ahead and paste in your clipboard up at the very top.

24
00:01:49.140 --> 00:01:54.360
Let's be sure to delete what should instead be our shared header include.

25
00:01:54.930 --> 00:02:01.260
So I'm going to begin selecting from line number one down until the closing header tag in this comment

26
00:02:01.260 --> 00:02:03.270
that says header ends here.

27
00:02:03.810 --> 00:02:12.910
Let's delete all of that and then we can just say less than percentage Dasch include and then file path

28
00:02:12.910 --> 00:02:14.520
of includes header.

29
00:02:15.150 --> 00:02:16.170
Let's close this out.

30
00:02:16.290 --> 00:02:22.590
Percentage greater than OK then let's copy that into our clipboard and do the same thing for the footer.

31
00:02:23.010 --> 00:02:23.970
So copy this.

32
00:02:24.240 --> 00:02:25.350
Include Command.

33
00:02:26.010 --> 00:02:27.960
Scroll down until you find this comment.

34
00:02:28.230 --> 00:02:35.310
Footer begins and then select that and select all the way down to the bottom and delete paste in your

35
00:02:35.310 --> 00:02:38.610
clipboard and just change header to footer.

36
00:02:39.580 --> 00:02:46.480
OK, let's go ahead and save this template and now back in your browser, let's imagine that if someone

37
00:02:46.480 --> 00:02:55.900
visited a Eurail that looked like this, so localhost Colgan three thousand slash post and then slash

38
00:02:55.900 --> 00:03:01.240
and then this last segment, you could imagine this would be the exact post that they want to see.

39
00:03:01.630 --> 00:03:03.940
So maybe they want to see post ABC.

40
00:03:03.940 --> 00:03:07.850
Maybe they want to see post X, Y, Z or post one, two, three.

41
00:03:07.900 --> 00:03:13.050
The idea is that it's slash post and then slash the post they're looking for.

42
00:03:13.510 --> 00:03:18.780
OK, but with this general selected pattern here in mind, let's jump into our router.

43
00:03:19.360 --> 00:03:23.320
So within the root of our project, jump into router J.S..

44
00:03:24.770 --> 00:03:31.270
Under this comment where it says posts related roots, let's add a new line and let's say rude or not,

45
00:03:31.280 --> 00:03:40.790
get give it a string of text and let's say slash post slash and then we can say Colen and then we can

46
00:03:40.790 --> 00:03:42.080
make up any name we want.

47
00:03:42.080 --> 00:03:48.400
But let's say I said the idea is that there's colon and then the name part is now flexible.

48
00:03:48.890 --> 00:03:51.680
This will represent whatever the user includes.

49
00:03:51.680 --> 00:03:58.640
After the post slash, we will circle back how to use this a bit later on in the lesson.

50
00:03:59.060 --> 00:04:02.520
For now, let's move on and let's give this a second argument.

51
00:04:02.960 --> 00:04:08.120
This should be the function that we want to run in response to this incoming request.

52
00:04:08.600 --> 00:04:14.060
So we'd want to look inside our post controller and we haven't created this function yet.

53
00:04:14.270 --> 00:04:19.520
But you can imagine that in about ten seconds we're going to start creating it, let's say post controller,

54
00:04:19.520 --> 00:04:28.160
dot view, single notice that for this route I did not bother calling user controller must be logged

55
00:04:28.160 --> 00:04:28.400
in.

56
00:04:29.000 --> 00:04:34.220
This is because I do want the general public to be able to view a single post.

57
00:04:34.790 --> 00:04:39.500
The idea behind this application that we're building is almost similar to a blogging platform.

58
00:04:39.980 --> 00:04:40.160
Right.

59
00:04:40.250 --> 00:04:44.210
So by default, any posts you create are viewable to the public.

60
00:04:44.720 --> 00:04:50.720
OK, let's go ahead and save this and then let's jump into our post controller and create a function

61
00:04:50.720 --> 00:04:53.710
with this matching name in our controller folder.

62
00:04:53.720 --> 00:04:58.880
Jump into post controller down at the very bottom, let's create a new function.

63
00:04:58.880 --> 00:05:02.150
So exports dot view single.

64
00:05:02.540 --> 00:05:07.040
Let's set that to equal a function within these function parentheses.

65
00:05:07.040 --> 00:05:10.950
Let's be sure to include request and response, OK?

66
00:05:10.970 --> 00:05:16.460
And within the body of this function, let's just render that new Ajay's template we just created.

67
00:05:17.150 --> 00:05:24.980
So response dot render the name of the template was a single dash post dash screen.

68
00:05:25.640 --> 00:05:28.320
Let's go ahead and save this and then test it out.

69
00:05:28.330 --> 00:05:34.400
So back in the browser you can click back to the home page if you want and up in the address bar let's

70
00:05:34.400 --> 00:05:35.030
type in.

71
00:05:35.180 --> 00:05:42.410
So localhost column three thousand slash post slash and then you could just make up anything.

72
00:05:42.410 --> 00:05:43.850
Just hit a few random keys.

73
00:05:45.960 --> 00:05:51.750
Woops, looks like we're pulling in HTML successfully, but clearly we are missing a bit of success

74
00:05:51.750 --> 00:05:55.150
or styling, I think I know exactly what the problem is.

75
00:05:55.170 --> 00:06:02.070
So back in our text editor within your Views folder, dig into the sub folder that's named includes

76
00:06:02.700 --> 00:06:06.030
and we want to open up header SJS.

77
00:06:07.050 --> 00:06:12.570
All we need to do is on line number 11 for the HSF value for the stylesheet.

78
00:06:12.840 --> 00:06:16.860
We just need to add a forward slash right at the beginning like this.

79
00:06:17.490 --> 00:06:23.580
You might remember we already did this once, but then when we set up this reusable header include file,

80
00:06:23.970 --> 00:06:27.750
clearly we copied and pasted from a file where we had not made this change.

81
00:06:28.590 --> 00:06:33.540
So as soon as you have the forward slash right before the M and Main here, just go ahead and save.

82
00:06:34.020 --> 00:06:38.700
And now if we refresh back in the browser, we are in business now.

83
00:06:38.700 --> 00:06:43.850
Obviously, all of this is fake or hardcoded content and data.

84
00:06:44.250 --> 00:06:44.550
Right?

85
00:06:44.570 --> 00:06:48.800
This is just a static HTML template that we copied and pasted.

86
00:06:49.260 --> 00:06:57.240
So our goal is to pull in a real existing post from the database and then show its title here.

87
00:06:57.570 --> 00:07:02.960
It's created on or posted on date here as well as its body content.

88
00:07:03.570 --> 00:07:10.120
So in order to look up a post in our database, this is where our You URL structure comes into play.

89
00:07:10.560 --> 00:07:17.700
Let's set things up so that this last segment of the You are rel is the idea of the post that should

90
00:07:17.700 --> 00:07:18.390
be loaded.

91
00:07:18.750 --> 00:07:25.350
This is similar to how when you view an individual tweet on Twitter or open Instagram and your Web browser

92
00:07:25.350 --> 00:07:32.550
and view a post, either way you'll see a random string of characters in the euro that represents that

93
00:07:32.550 --> 00:07:34.090
specific post.

94
00:07:34.530 --> 00:07:40.410
So with that in mind, let's jump back into our post controller and work on the function that will be

95
00:07:40.410 --> 00:07:42.150
called for a route like this.
