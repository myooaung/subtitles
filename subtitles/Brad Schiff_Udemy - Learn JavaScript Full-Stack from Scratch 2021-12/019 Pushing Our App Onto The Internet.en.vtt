WEBVTT
1
00:00:01.880 --> 00:00:02.870
Hello, everyone.

2
00:00:03.140 --> 00:00:09.770
In this lesson, we are going to finally push our application up onto the web so that we can share it

3
00:00:09.770 --> 00:00:11.120
with our friends and family.

4
00:00:11.480 --> 00:00:17.690
So up until this point in the course, we've used our personal physical computer as the environment

5
00:00:17.690 --> 00:00:20.210
to run our server dogs file.

6
00:00:20.420 --> 00:00:25.250
That's great, but it means that we are the only ones that can access our node application.

7
00:00:25.640 --> 00:00:33.050
So our goal for this lesson is to send our files to a hosting company, and they will run our node application

8
00:00:33.050 --> 00:00:38.660
in their environment or on their hardware, and they'll make sure that it's publicly available around

9
00:00:38.660 --> 00:00:42.170
the clock from a normal web address instead of local host.

10
00:00:42.650 --> 00:00:45.320
All right, so without further ado, let's get started.

11
00:00:45.710 --> 00:00:51.170
There are countless web hosting companies out there, but I don't want you to have to spend even a single

12
00:00:51.170 --> 00:00:55.520
penny right now on hosting while you're just learning and experimenting.

13
00:00:55.790 --> 00:01:01.670
And I can't think of too many hosts that offer free plans that do not require you to enter a credit

14
00:01:01.670 --> 00:01:02.060
card.

15
00:01:02.330 --> 00:01:05.990
And it let you run server side node applications.

16
00:01:06.440 --> 00:01:12.410
So not just cloud functions or lambda functions, but actual ongoing node applications on the server

17
00:01:12.410 --> 00:01:12.830
side.

18
00:01:13.070 --> 00:01:18.050
Actually, the only company I can think of that offers that for free is Heroku.

19
00:01:18.620 --> 00:01:21.080
So Heroku is what we're going to use in this course.

20
00:01:21.290 --> 00:01:23.490
I'm not affiliated with them in any way.

21
00:01:23.510 --> 00:01:26.180
I do not benefit when you use their service.

22
00:01:26.480 --> 00:01:29.390
I just think they have one of the coolest free plans out there.

23
00:01:29.750 --> 00:01:34.880
This is the hosting platform that I recommend you use, and this is what I'm going to show you how to

24
00:01:34.880 --> 00:01:36.230
use in this lesson.

25
00:01:36.680 --> 00:01:43.880
So right now in a new tab, go ahead and Google for Heroku, it should just be Heroku dot com.

26
00:01:44.330 --> 00:01:50.330
Big Picture Before we can send Heroku our files, we need to first sign up for a free account.

27
00:01:50.900 --> 00:01:55.310
So from the homepage, there should be a sign up button in the top right corner.

28
00:01:55.580 --> 00:01:56.840
Let's go ahead and click on that.

29
00:01:57.650 --> 00:02:02.930
The great thing about Heroku is that we can use it for free, and it's not some gimmicky, limited free

30
00:02:02.930 --> 00:02:03.500
trial.

31
00:02:03.740 --> 00:02:07.520
We don't even need to enter any sort of payment information whatsoever.

32
00:02:07.910 --> 00:02:13.070
So go ahead and fill out this registration form and feel free to pause the video while you do that and

33
00:02:13.070 --> 00:02:14.090
then submit the form.

34
00:02:14.420 --> 00:02:19.190
As soon as you submit the form, you should see a screen asking you to go check your email to confirm

35
00:02:19.190 --> 00:02:19.880
your account.

36
00:02:20.240 --> 00:02:21.380
So go do that right now.

37
00:02:21.380 --> 00:02:22.160
Check your email.

38
00:02:22.160 --> 00:02:25.340
You should see an email from Heroku with an activation link.

39
00:02:25.520 --> 00:02:28.360
Be sure to click on that activation link at that point.

40
00:02:28.400 --> 00:02:30.440
Heroku will ask you to set up a password.

41
00:02:30.920 --> 00:02:33.950
So go ahead and create a new password and then submit this form.

42
00:02:34.700 --> 00:02:35.050
Cool.

43
00:02:35.060 --> 00:02:37.070
And then we should be welcomed to Heroku.

44
00:02:37.430 --> 00:02:38.540
Let's go ahead and click this.

45
00:02:38.540 --> 00:02:39.980
Click here to proceed button.

46
00:02:40.400 --> 00:02:45.710
And from this Heroku dashboard, we should see an option down here to create a new app.

47
00:02:46.310 --> 00:02:51.200
If you do not see this option down here, you can also use this menu towards the top right that says

48
00:02:51.200 --> 00:02:53.900
new and then click on Create New app.

49
00:02:54.320 --> 00:02:55.490
So I'll click on this down here.

50
00:02:55.490 --> 00:02:56.510
Create new app.

51
00:02:57.320 --> 00:02:59.690
First, we need to choose a name for this new app.

52
00:03:00.050 --> 00:03:06.590
Now, this name does need to be unique, so if I type in to do app, you can see that someone has already

53
00:03:06.590 --> 00:03:11.240
taken that name, so you might need to experiment to find something that no one's used before.

54
00:03:11.630 --> 00:03:14.570
Maybe I'll try to do app for course.

55
00:03:15.410 --> 00:03:15.710
Cool.

56
00:03:15.710 --> 00:03:20.330
That's available, so you'll need to type in something different and totally unique here and then choose

57
00:03:20.330 --> 00:03:20.870
your region.

58
00:03:20.870 --> 00:03:23.360
And then finally, let's just click Create app.

59
00:03:25.180 --> 00:03:32.920
From this next screen, the deploy screen, we need a way to send our code files over to Heroku now

60
00:03:32.920 --> 00:03:35.560
in just a few minutes from now, if you scroll down just a little bit.

61
00:03:35.770 --> 00:03:41.500
We're going to use this deployment method called GitHub, or essentially where you just connect your

62
00:03:41.500 --> 00:03:43.480
GitHub account to your Heroku account.

63
00:03:43.840 --> 00:03:48.970
It is much, much easier to set up than using the Heroku Seelye option.

64
00:03:49.420 --> 00:03:54.730
However, before we actually connect it to GitHub and send over our files, let's first make sure that

65
00:03:54.730 --> 00:04:00.670
our files make sense not just for a local hosted private computer, but that they also make sense for

66
00:04:00.670 --> 00:04:02.830
a public Heroku server.

67
00:04:03.340 --> 00:04:08.890
So to do that, jump into voice code with our project open that we've been working on the To-Do app

68
00:04:08.890 --> 00:04:17.110
folder, and you and I know that Server Dogs is the main file that you execute to actually start our

69
00:04:17.110 --> 00:04:17.980
application.

70
00:04:18.250 --> 00:04:20.680
However, Heroku can't read our mind.

71
00:04:20.980 --> 00:04:26.950
It doesn't know which file to launch the application from, so we need to spell out that Server Dogs

72
00:04:26.950 --> 00:04:31.510
is sort of our main entry point into the application to set that up.

73
00:04:31.540 --> 00:04:38.740
All we need to do is jump into our packaged JSON file and we're interested in this scripts area.

74
00:04:39.190 --> 00:04:41.620
We want to have a script called Start.

75
00:04:41.920 --> 00:04:47.290
Now, if you downloaded one of the zip files at the end of each lesson, or if you're using a recent

76
00:04:47.290 --> 00:04:54.640
modern version of Node, your packaged JSON file probably already has a script named Start.

77
00:04:55.240 --> 00:04:56.140
That's perfect.

78
00:04:56.770 --> 00:05:00.000
However, if you don't see a start script, here's what you can do.

79
00:05:00.010 --> 00:05:02.500
I'll actually delete it and type it in again with you.

80
00:05:02.770 --> 00:05:10.360
We just want to make sure we have a script with the exact specific name of Start, so quotes around

81
00:05:10.360 --> 00:05:16.930
start, then a colon quotes for the command and the command to execute that file is just node and then

82
00:05:16.930 --> 00:05:17.530
a space.

83
00:05:17.860 --> 00:05:21.780
The name of the file we want to run is server dot jets.

84
00:05:22.540 --> 00:05:24.190
I'll go ahead and save that file.

85
00:05:25.060 --> 00:05:26.410
OK, and we're almost there.

86
00:05:26.740 --> 00:05:33.670
What we need to do now is jump into server J.S. and remember that our application runs on port three

87
00:05:33.670 --> 00:05:34.870
thousand right.

88
00:05:34.870 --> 00:05:39.880
So that's why when we visited local host, we also typed in colon three thousand.

89
00:05:40.300 --> 00:05:43.270
Remember, we set up this line of code that says APT.

90
00:05:43.480 --> 00:05:45.280
Listen on that port number.

91
00:05:45.610 --> 00:05:51.400
Well, that makes sense when the application is running on our computer, but we don't know which port

92
00:05:51.400 --> 00:05:54.490
number Heroku will want to run our application on.

93
00:05:54.790 --> 00:05:59.740
So we need to make this code dynamic so that it works with three thousand on our computer.

94
00:05:59.980 --> 00:06:05.410
But if it's running within the context of a Heroku computer, it uses whatever their magical number

95
00:06:05.410 --> 00:06:05.770
is.

96
00:06:06.040 --> 00:06:08.410
So do this with me up towards the top of this file.

97
00:06:08.620 --> 00:06:11.080
Maybe right below this let Deb line.

98
00:06:11.230 --> 00:06:18.760
Let's add a new line and say let port equal and then to get the exact port number that the Heroku environment's

99
00:06:18.760 --> 00:06:19.400
going to want.

100
00:06:19.420 --> 00:06:25.540
We can say process, dot, EMV, dot, all uppercase port.

101
00:06:26.230 --> 00:06:30.160
So if this exists, if we are within the Heroku environment, that will make sense.

102
00:06:30.160 --> 00:06:36.220
But then right after that, we want to set up the number of 3000 as a fallback so we can write an if

103
00:06:36.220 --> 00:06:40.840
statement if parentheses curly brackets within the condition.

104
00:06:40.840 --> 00:06:47.200
For our if statement, we can say if port double equals sign, if it equals null.

105
00:06:47.200 --> 00:06:54.850
So if it hasn't been defined or if it's nothing, or if port double equal sign is just an empty string

106
00:06:54.850 --> 00:07:00.970
of text or is nothing, if this is the case, then within our curly brackets we can just set port to

107
00:07:00.970 --> 00:07:02.170
equal three thousand.

108
00:07:02.680 --> 00:07:06.190
So this way, in any environment, our port number will make sense.

109
00:07:06.580 --> 00:07:10.120
Now we just need to actually use this port variable that we just created.

110
00:07:10.480 --> 00:07:16.510
So down on this line of code, when we say App Dot, listen within the parentheses, get rid of three

111
00:07:16.510 --> 00:07:17.080
thousand.

112
00:07:17.350 --> 00:07:19.720
And just use our port variable instead.

113
00:07:20.200 --> 00:07:20.620
Cool.

114
00:07:20.800 --> 00:07:22.870
Let's go ahead and save this file.

115
00:07:23.170 --> 00:07:28.510
At this point, we are ready to send this entire folder worth of files over to GitHub.

116
00:07:28.900 --> 00:07:29.740
Let me explain.

117
00:07:29.740 --> 00:07:35.830
So back in Heroku, we need a way to take our code files and send them to Heroku.

118
00:07:36.010 --> 00:07:39.430
And the easiest way to do that is to use GitHub.

119
00:07:39.850 --> 00:07:42.550
If you are already familiar with Git and GitHub.

120
00:07:42.580 --> 00:07:43.270
That's great.

121
00:07:43.480 --> 00:07:46.840
You really don't need to pay too much attention to the next couple of minutes.

122
00:07:47.020 --> 00:07:52.660
However, if you've never even heard of Git or GitHub or you have no idea how to get started, I want

123
00:07:52.660 --> 00:07:55.690
you to be able to follow along with this project as well.

124
00:07:56.110 --> 00:08:00.670
So here's what you can do in a new tab visit GitHub dot com.

125
00:08:00.970 --> 00:08:06.190
It is completely free to sign up for an account doesn't cost a penny, and you don't need to enter a

126
00:08:06.190 --> 00:08:06.910
credit card.

127
00:08:07.330 --> 00:08:13.090
So if you do not already have a GitHub account right now, pause this video and go sign up for a GitHub

128
00:08:13.090 --> 00:08:13.570
account.

129
00:08:14.050 --> 00:08:19.210
Once you have your new free GitHub account, you can come back and resume this video and then you're

130
00:08:19.210 --> 00:08:23.500
going to want to install GitHub desktop onto your computer.

131
00:08:23.920 --> 00:08:24.550
So the web?

132
00:08:24.680 --> 00:08:29.100
Dress for that is literally just desktop dot, GitHub dot com.

133
00:08:29.400 --> 00:08:34.170
Or if you just Google for GitHub desktop, this should be one of the first results.

134
00:08:34.800 --> 00:08:39.190
So go ahead and download that it's available for Windows and Mac.

135
00:08:39.210 --> 00:08:44.640
Just install that program and go ahead and pause this video and then come back and resume the video.

136
00:08:44.940 --> 00:08:51.150
Once you've installed and opened GitHub desktop, when you open the application for the first time,

137
00:08:51.150 --> 00:08:52.740
it'll look something like this.

138
00:08:53.400 --> 00:08:58.890
You can see I'm not even signed into the app yet because I use Git from the command line, but this

139
00:08:58.890 --> 00:09:02.330
is not a course about Git and learning it on the command line.

140
00:09:02.340 --> 00:09:08.610
So right now, if you've never used Git before, we just want you to have the easiest, simplest route

141
00:09:08.760 --> 00:09:11.070
to be able to push files up to GitHub.

142
00:09:11.430 --> 00:09:14.700
So just go ahead and sign in with your GitHub dot com account.

143
00:09:15.240 --> 00:09:19.350
It'll open a web page where you need to sign in with your username and password, and then it wants

144
00:09:19.350 --> 00:09:21.490
you to authorize GitHub desktop.

145
00:09:21.510 --> 00:09:27.090
So just go ahead and give it the default or full permissions that it wants, then allow it to launch

146
00:09:27.090 --> 00:09:27.810
the application.

147
00:09:27.810 --> 00:09:31.140
And now you'll be logged in from within GitHub desktop.

148
00:09:31.500 --> 00:09:37.380
From this screen, we want to create a brand new repository, so let's use this button that reads Create

149
00:09:37.380 --> 00:09:39.480
a new repository on your hard drive.

150
00:09:39.960 --> 00:09:41.130
So click that button.

151
00:09:41.400 --> 00:09:43.320
The name doesn't really matter.

152
00:09:43.740 --> 00:09:46.440
You can name it anything that makes sense to you personally.

153
00:09:46.440 --> 00:09:50.820
I'll name it JavaScript to do app next.

154
00:09:50.820 --> 00:09:56.190
We don't need to change this local path option, but just make sure you take note of where it's pointing

155
00:09:56.190 --> 00:09:56.640
towards.

156
00:09:56.880 --> 00:10:01.830
So, for example, it's probably somewhere in your documents folder and it'll create a new folder called

157
00:10:01.830 --> 00:10:02.520
GitHub.

158
00:10:02.970 --> 00:10:05.130
So we'll see where that comes into play in just a moment.

159
00:10:05.490 --> 00:10:11.040
Let's be sure to check this checkbox that says Initialize this repository with a read me.

160
00:10:11.790 --> 00:10:14.820
OK, now we can go ahead and click Create repository.

161
00:10:16.280 --> 00:10:19.640
OK, now this is where that GitHub folder comes into play.

162
00:10:19.940 --> 00:10:26.240
So on my computer now, if I go into the documents folder, I have this new folder called GitHub.

163
00:10:26.270 --> 00:10:29.420
So I want you to find and locate this folder on your computer.

164
00:10:29.720 --> 00:10:35.150
And then if you go into that GitHub folder, you'll see a folder with that project or repo name we just

165
00:10:35.150 --> 00:10:35.670
chose.

166
00:10:35.690 --> 00:10:38.450
So I made up a name of JavaScript to do app.

167
00:10:38.460 --> 00:10:39.920
You probably chose something different.

168
00:10:39.950 --> 00:10:42.920
It doesn't matter, but just go into that folder.

169
00:10:43.340 --> 00:10:46.880
It's empty, except for the Read Me file that GitHub created for us.

170
00:10:46.880 --> 00:10:53.750
And what we want to do now is just sort of copy and paste or drag and drop all of our code files into

171
00:10:53.750 --> 00:10:54.740
this directory.

172
00:10:55.190 --> 00:11:00.950
So in my case, the code that we've been working on for the last ten or so lessons, here it is to do

173
00:11:00.950 --> 00:11:01.340
app.

174
00:11:01.970 --> 00:11:04.520
So I'm just going to go into that folder, right?

175
00:11:04.550 --> 00:11:06.320
These are the files that should look familiar.

176
00:11:06.600 --> 00:11:08.120
Server yes.

177
00:11:08.420 --> 00:11:09.740
Packaged JSON.

178
00:11:09.740 --> 00:11:15.830
So all the files from vs code, essentially, I'm just going to select all of those and then copy and

179
00:11:15.830 --> 00:11:19.190
paste or drag and drop them into this new folder.

180
00:11:20.240 --> 00:11:20.610
Cool.

181
00:11:20.630 --> 00:11:25.400
Now this will be the copy of the files that you actually edit and maintain going forward.

182
00:11:25.700 --> 00:11:29.630
So I'd recommend closing all current instances of vs code.

183
00:11:29.840 --> 00:11:34.790
And then when you reopen that folder, you would open this folder in vs code.

184
00:11:35.450 --> 00:11:35.840
Cool.

185
00:11:36.020 --> 00:11:43.400
However, let's go back to GitHub desktop, and it is aware of all of the new files and folders that

186
00:11:43.400 --> 00:11:45.410
we just moved into that project.

187
00:11:45.860 --> 00:11:50.330
However, you'll see that there are some really large number here when it's counting how many files

188
00:11:50.330 --> 00:11:51.230
have been changed.

189
00:11:52.100 --> 00:11:57.560
This is because it is needlessly keeping track of the Node Modules folder.

190
00:11:58.010 --> 00:12:04.610
We don't need get to track these files because as long as we have our packaged JSON grocery list file,

191
00:12:04.910 --> 00:12:11.060
well, we're always just one command away of npm install from getting all of these thousands and thousands

192
00:12:11.060 --> 00:12:12.080
of files back.

193
00:12:12.560 --> 00:12:18.890
So to tell Git to just ignore this node modules folder, here's what you can do in GitHub desktop.

194
00:12:19.190 --> 00:12:26.030
Click the repository menu up in the very top menu bar and then click repository settings.

195
00:12:27.810 --> 00:12:32.460
That will open this screen, and then we're interested in this ignored files option, click on that

196
00:12:32.910 --> 00:12:33.900
in this area.

197
00:12:34.020 --> 00:12:37.530
Just type in node underscore modules.

198
00:12:37.890 --> 00:12:38.940
Forward slash.

199
00:12:39.360 --> 00:12:40.800
Go ahead and click Save.

200
00:12:41.100 --> 00:12:41.770
Perfect.

201
00:12:41.790 --> 00:12:45.090
So now get knows that it doesn't need to track those files.

202
00:12:45.420 --> 00:12:49.080
And these are really the only core files of our project that matter.

203
00:12:49.590 --> 00:12:51.520
At this point, we're ready to move forward.

204
00:12:51.540 --> 00:12:54.150
So in get first, you would commit your changes.

205
00:12:54.600 --> 00:13:00.930
So in this area, I'll just give a summary of first push of all files.

206
00:13:01.380 --> 00:13:02.490
The message doesn't matter.

207
00:13:02.490 --> 00:13:05.010
This is just for your own history and organization.

208
00:13:05.670 --> 00:13:08.910
And then it's falling off the bottom of my screen, but down at the very bottom.

209
00:13:09.180 --> 00:13:11.370
Just click the commit to main button.

210
00:13:13.150 --> 00:13:18.460
Cool, now that we've committed those changes locally on our computer, the last step is just to actually

211
00:13:18.460 --> 00:13:23.330
push them up onto the web to GitHub, to push it to GitHub servers.

212
00:13:23.350 --> 00:13:27.520
We're just going to use this button right here that says Publish Repository.

213
00:13:27.820 --> 00:13:28.960
So let's click on that.

214
00:13:29.470 --> 00:13:31.750
These settings look great and absolutely do.

215
00:13:31.780 --> 00:13:35.800
Make sure that this keep this code private checkbox is checked.

216
00:13:36.250 --> 00:13:42.820
I want you to keep this private because in our server dogs file, we have our MongoDB username and password

217
00:13:42.820 --> 00:13:44.200
in that connection string.

218
00:13:44.590 --> 00:13:46.840
So we definitely want to keep that private.

219
00:13:47.110 --> 00:13:47.860
Now, don't worry.

220
00:13:48.040 --> 00:13:54.670
Later in the course in our complex app project, we will learn about something called environment variables

221
00:13:55.060 --> 00:13:58.990
that can handle sensitive values like that in an industry standard.

222
00:13:58.990 --> 00:14:00.150
Best practice way.

223
00:14:00.160 --> 00:14:05.920
But for now, in this simple project, just making this repository private will be OK.

224
00:14:06.310 --> 00:14:12.190
Let's go ahead and click Publish Repository as soon as you click that button, even on a slow internet

225
00:14:12.190 --> 00:14:12.760
connection.

226
00:14:12.910 --> 00:14:16.540
It shouldn't take more than maybe 20 seconds at the very most.

227
00:14:16.900 --> 00:14:24.010
It should be very quick, and now we are ready to go back into Heroku and connect GitHub to Heroku.

228
00:14:24.490 --> 00:14:29.980
So remember at the start of the video when we create a new project in Heroku and then from this deploy

229
00:14:29.980 --> 00:14:33.190
screen, remember we're going to choose a deployment method.

230
00:14:33.400 --> 00:14:37.600
And we said that the GitHub option is by far the easiest option.

231
00:14:37.990 --> 00:14:43.390
So right now, go ahead and click that connect to GitHub button that you see here in Heroku.

232
00:14:43.810 --> 00:14:48.820
If you can't remember how to get to the screen in Heroku, remember you just view your project and then

233
00:14:48.820 --> 00:14:52.060
it is the Deploy tab or this deploy link right here.

234
00:14:52.240 --> 00:14:55.570
You just scroll down a tiny bit and then click Connect to GitHub.

235
00:14:56.110 --> 00:14:59.350
The very first time you do this, so it's just a one time setup.

236
00:14:59.590 --> 00:15:04.600
You need to tell GitHub that you're giving it permission for Heroku to connect to it.

237
00:15:05.050 --> 00:15:10.420
So Heroku will probably open a new window, a new pop up, and it's really just GitHub saying, Hey,

238
00:15:10.420 --> 00:15:14.740
do you really want to give permission to Heroku to access your GitHub account?

239
00:15:15.100 --> 00:15:16.420
Absolutely, we do.

240
00:15:16.510 --> 00:15:17.740
We trust Heroku.

241
00:15:17.860 --> 00:15:21.700
So click yes or give permission or whatever the positive button is.

242
00:15:22.180 --> 00:15:28.330
Then back from this main screen in Heroku, you will be able to search through all of your GitHub repositories.

243
00:15:28.720 --> 00:15:31.570
So I know I named my repo JavaScript to do app.

244
00:15:31.570 --> 00:15:35.800
But if you don't remember the name, you can just click the search button here that will show you all

245
00:15:35.800 --> 00:15:37.060
of your repositories.

246
00:15:37.480 --> 00:15:41.980
But once you find the actual specific one that we're interested in, just click this Connect button

247
00:15:41.980 --> 00:15:42.520
right here.

248
00:15:43.540 --> 00:15:43.900
Cool.

249
00:15:43.930 --> 00:15:45.610
Now, if we just scroll down a little bit.

250
00:15:46.000 --> 00:15:49.600
Go ahead and click this Enable Automatic Deploys button.

251
00:15:50.050 --> 00:15:55.180
So now in the future, whenever you push a new change to your GitHub repo, Heroku will automatically

252
00:15:55.180 --> 00:15:56.710
rebuild your application.

253
00:15:57.520 --> 00:16:02.140
But for this very first time, let's just scroll down and perform an initial deploy.

254
00:16:02.320 --> 00:16:06.070
So down at the very bottom manual deploy click deploy branch.

255
00:16:06.820 --> 00:16:11.710
Right now, Heroku is downloading all of our dependencies from our packaged JSON file.

256
00:16:11.860 --> 00:16:16.360
It's getting our project ready, and now you can see your app was successfully deployed.

257
00:16:16.600 --> 00:16:21.550
You can either use this view button here or back up at the very top of your project.

258
00:16:21.700 --> 00:16:24.280
You can always use this open app button.

259
00:16:26.760 --> 00:16:29.070
If you can't find that open up button, that's OK.

260
00:16:29.520 --> 00:16:34.620
All it's going to do is take you to an address that is your unique app name.

261
00:16:34.980 --> 00:16:37.710
Dot Heroku app, dot com.

262
00:16:38.220 --> 00:16:38.520
Cool.

263
00:16:38.520 --> 00:16:40.890
So we can see when I try to visit that URL.

264
00:16:41.160 --> 00:16:45.450
This is that basic password protection that we set up in our previous lesson.

265
00:16:45.810 --> 00:16:49.830
So I chose a username of learn in a password of JavaScript.

266
00:16:49.860 --> 00:16:54.990
You might have chose different values, but if I log in, awesome, here's our application.

267
00:16:55.350 --> 00:17:01.710
I can try to create a new item, say by tea that's working, I can try to update it to add exclamation

268
00:17:01.710 --> 00:17:02.190
marks.

269
00:17:02.460 --> 00:17:05.250
That's working, and I can try to delete that item.

270
00:17:06.480 --> 00:17:07.230
Perfect.

271
00:17:07.590 --> 00:17:11.910
If you made it this far, I want you to give yourself a huge pat on the back.

272
00:17:12.240 --> 00:17:15.630
You now have a living breathing URL.

273
00:17:16.180 --> 00:17:19.170
Granted, your new URL will be different for this first part.

274
00:17:19.350 --> 00:17:26.160
Whatever your unique app name is, but you can now share your URL with your friends, family, anyone

275
00:17:26.160 --> 00:17:27.210
that you want to impress.

276
00:17:27.480 --> 00:17:34.470
And let them know that you built this full stack JavaScript application from scratch.

277
00:17:35.040 --> 00:17:41.610
This is a huge accomplishment, and I really want you to relish this moment of sharing this application

278
00:17:41.790 --> 00:17:42.990
with the people, you know.

279
00:17:43.290 --> 00:17:46.170
Be sure to tell them a bit about what you've learned so far.

280
00:17:46.380 --> 00:17:49.170
Have them add a few sample items to the list.

281
00:17:49.470 --> 00:17:52.800
Take your time because I really don't want you to get burned out.

282
00:17:53.130 --> 00:17:59.130
It's important to have lots of small victories along the road towards becoming a developer and completing

283
00:17:59.130 --> 00:18:02.100
this application is our first significant victory.

284
00:18:02.430 --> 00:18:03.360
So soak it in.

285
00:18:03.600 --> 00:18:08.910
Enjoy the moment if you want to take a small break before jumping into the remainder of this course,

286
00:18:09.150 --> 00:18:11.730
where we build our more complex app number two.

287
00:18:11.910 --> 00:18:13.110
That's totally fine.

288
00:18:13.440 --> 00:18:19.290
The most important part is that you just don't get burned out and that you stay excited about this process,

289
00:18:19.530 --> 00:18:24.900
and nothing is going to get you more excited than sharing your progress with the people you care about.

290
00:18:25.200 --> 00:18:26.220
So enjoy this moment.

291
00:18:26.370 --> 00:18:32.460
Maybe go celebrate a bit and then our very next lesson we are going to address what's next.

292
00:18:32.760 --> 00:18:38.850
We're going to talk about where we go from here and take a look ahead at the more complex app number

293
00:18:38.850 --> 00:18:41.310
two we're going to begin work on.

294
00:18:41.610 --> 00:18:42.570
So excited for you.

295
00:18:42.690 --> 00:18:45.570
Let's keep our momentum rolling and I'll see you then.
