WEBVTT
1
00:00:01.770 --> 00:00:02.700
Hello, everyone.

2
00:00:03.120 --> 00:00:07.890
In this lesson, we are going to answer the question, where do we begin?

3
00:00:08.490 --> 00:00:10.410
JavaScript is a huge topic.

4
00:00:10.410 --> 00:00:11.790
So how do we get started?

5
00:00:12.330 --> 00:00:14.450
Well, in my mind, the answer is simple.

6
00:00:14.790 --> 00:00:17.660
We begin with the language itself.

7
00:00:18.030 --> 00:00:19.290
But what do I mean by that?

8
00:00:19.800 --> 00:00:22.040
The human mind is made for language, right?

9
00:00:22.110 --> 00:00:24.320
The same way that a cheetah is born to run.

10
00:00:24.720 --> 00:00:27.180
You and I are born to use language.

11
00:00:27.420 --> 00:00:30.860
It's our superpower and it comes naturally, right?

12
00:00:30.960 --> 00:00:34.950
Parents don't have to, quote, teach their children how to speak.

13
00:00:35.280 --> 00:00:40.380
You simply talk in front of a child and they naturally absorb language.

14
00:00:40.620 --> 00:00:45.000
The human mind is able to put all the puzzle pieces together without breaking a sweat.

15
00:00:45.240 --> 00:00:51.210
So let's use this strength to our advantage, because I found that when students view JavaScript big

16
00:00:51.210 --> 00:00:58.920
picture as a language just like English or Spanish or Mandarin, the learning process becomes so much

17
00:00:58.920 --> 00:00:59.520
easier.

18
00:01:00.030 --> 00:01:06.390
But on the other hand, if instead you view JavaScript as just a big, long list of made up words that

19
00:01:06.390 --> 00:01:12.150
you need to memorize, well, in that case, learning JavaScript feels like trying to grab a fistful

20
00:01:12.150 --> 00:01:12.810
of sand.

21
00:01:13.110 --> 00:01:14.640
Very difficult to grasp.

22
00:01:15.000 --> 00:01:20.760
So right now, let me give you an example of what I mean when I say that we should begin with the language

23
00:01:20.760 --> 00:01:21.530
itself.

24
00:01:21.930 --> 00:01:23.940
Let's take English as an example.

25
00:01:24.090 --> 00:01:25.200
So here's a sentence.

26
00:01:25.530 --> 00:01:30.150
The ASD cat quickly ate the Zizic.

27
00:01:30.660 --> 00:01:33.990
Now, two of the words in the sentence are made up nonsense.

28
00:01:34.320 --> 00:01:40.620
But because we understand the structure of the English language, it doesn't really matter that we don't

29
00:01:40.620 --> 00:01:41.840
know what these words mean.

30
00:01:42.090 --> 00:01:45.500
We can still basically understand the sentence as a whole.

31
00:01:45.900 --> 00:01:53.310
So we want this same level of comfort with the JavaScript language, because once you understand the

32
00:01:53.310 --> 00:02:00.900
structure of a language, it gives you contextual clues to help you understand what's going on, even

33
00:02:00.900 --> 00:02:03.510
if you don't understand each word individually.

34
00:02:03.990 --> 00:02:04.210
Right.

35
00:02:04.230 --> 00:02:07.460
We still know that there's a cat and it's quickly eating something.

36
00:02:07.860 --> 00:02:12.810
OK, now, at this point, you might be wondering, what does this have to do with JavaScript and computer

37
00:02:12.810 --> 00:02:13.500
programming?

38
00:02:13.890 --> 00:02:15.530
Well, let me give you a metaphor.

39
00:02:15.930 --> 00:02:18.270
So, again, let's take the English language.

40
00:02:18.540 --> 00:02:22.380
And we know that we speak English in many different environments.

41
00:02:22.650 --> 00:02:27.750
Just for two quick examples, let's take your family's home and your workplace.

42
00:02:28.110 --> 00:02:36.030
So you speak English in both environments, but each environment also has its own made up words or jargon

43
00:02:36.030 --> 00:02:39.080
or slang that are not part of the language itself.

44
00:02:39.570 --> 00:02:39.830
Right.

45
00:02:39.860 --> 00:02:46.440
So maybe in your family's home you have a made up nonsense word to describe the way your dog eats its

46
00:02:46.440 --> 00:02:46.980
food.

47
00:02:47.370 --> 00:02:47.970
Who knows?

48
00:02:47.970 --> 00:02:49.530
Every home and family is different.

49
00:02:49.530 --> 00:02:55.650
But the point is, is that you probably have unique little phrases or words that if you used with a

50
00:02:55.650 --> 00:02:58.740
stranger, they would just look at you weird and have no idea what you mean.

51
00:02:59.100 --> 00:02:59.430
Right.

52
00:02:59.430 --> 00:03:01.440
And it's the same thing with your workplace.

53
00:03:01.770 --> 00:03:08.040
No matter which industry you work in, it probably has its own unique set of jargon or slang or made

54
00:03:08.040 --> 00:03:08.820
up words.

55
00:03:09.150 --> 00:03:14.880
And people outside of your workplace environment probably will not understand these words or phrases.

56
00:03:15.300 --> 00:03:20.470
OK, so there's this distinction between language and environment, OK?

57
00:03:20.550 --> 00:03:22.620
And it's the same thing with JavaScript.

58
00:03:22.920 --> 00:03:26.370
JavaScript is also spoken in different environments.

59
00:03:26.760 --> 00:03:33.870
Some of the most common are the Web browser node, JS, Mongo, DB and countless others.

60
00:03:33.870 --> 00:03:35.900
But these are just three of the most popular.

61
00:03:36.330 --> 00:03:42.360
Don't worry, I do not expect you to know what node is and I do not expect you to know what Mongo DB

62
00:03:42.360 --> 00:03:42.780
is.

63
00:03:43.170 --> 00:03:46.070
We will learn about those things later on in the course.

64
00:03:46.350 --> 00:03:53.550
For now, all you need to know is that there are multiple environments in which JavaScript can be spoken.

65
00:03:53.940 --> 00:03:59.970
And just like with the English environments, like our family's home and workplace, each environment

66
00:03:59.970 --> 00:04:03.890
has its own unique made up words or jargon or slang.

67
00:04:04.170 --> 00:04:10.630
So, for example, here's a line of JavaScript code that you would use in the Web browser environment.

68
00:04:11.070 --> 00:04:15.240
Now, don't worry, I do not expect you to understand this code at all.

69
00:04:15.660 --> 00:04:21.300
I'm only showing it right now to demonstrate the difference between language and environment.

70
00:04:21.660 --> 00:04:22.740
So hang in there with me.

71
00:04:23.370 --> 00:04:31.380
This code tells the Web browser to show a Pop-Up message that reads, Thanks for clicking any time the

72
00:04:31.380 --> 00:04:33.580
visitor clicks anywhere on the page.

73
00:04:33.960 --> 00:04:35.280
Now, here's the important part.

74
00:04:35.760 --> 00:04:43.530
Even though this is a line of JavaScript code, none of these words are part of the JavaScript language.

75
00:04:44.050 --> 00:04:51.120
So, for example, the word document or the squished together phrase of add event listener or the word

76
00:04:51.120 --> 00:04:52.420
click or alert?

77
00:04:52.740 --> 00:04:58.370
Yes, these are words in the English language, but they are not words in the JavaScript language.

78
00:04:58.710 --> 00:05:01.260
These words only have meaning within the common.

79
00:05:01.270 --> 00:05:08.800
Text of the Web browser environment, if you used any of these words in a different JavaScript environment,

80
00:05:09.130 --> 00:05:13.240
it would be like using one of your made up family words with a stranger.

81
00:05:13.580 --> 00:05:19.990
OK, but the question becomes, if these words are not in the JavaScript language, then what makes

82
00:05:19.990 --> 00:05:21.880
this line of code JavaScript?

83
00:05:22.000 --> 00:05:27.730
Well, it's the periods, the parentheses, the quotes, the commas and the other symbols.

84
00:05:28.070 --> 00:05:32.920
These are the structure or skeleton or syntax of the language.

85
00:05:33.130 --> 00:05:36.130
They are the glue that holds the sentence together.

86
00:05:36.550 --> 00:05:39.570
And that is what we want to learn first.

87
00:05:40.080 --> 00:05:43.690
That's exactly what we're going to focus on in this first chapter.

88
00:05:44.170 --> 00:05:49.720
By the end of this chapter, when you see a line of JavaScript code, you're going to have the same

89
00:05:49.720 --> 00:05:53.530
feeling as when I showed you this sentence in English.

90
00:05:53.950 --> 00:05:54.340
Right.

91
00:05:54.340 --> 00:06:00.280
You might not understand every single word individually, but because you understand that there are

92
00:06:00.310 --> 00:06:06.760
adjectives and nouns and verbs, your mind is still able to get a general idea of what's going on.

93
00:06:07.210 --> 00:06:14.440
OK, so we're going to get that same level of comfort and familiarity and even predictability with JavaScript.

94
00:06:14.710 --> 00:06:17.700
Getting to that point has got to be our first goal.

95
00:06:18.040 --> 00:06:22.370
It's the first step to genuinely understanding a programming language.

96
00:06:22.870 --> 00:06:28.930
Now, if you've ever tried to learn JavaScript in the past but got discouraged because it seemed too

97
00:06:28.930 --> 00:06:34.800
difficult or confusing, it's probably because the teacher took the opposite approach.

98
00:06:35.290 --> 00:06:42.600
Far too many teachers make the mistake of having you begin by memorizing environmental jargon, right?

99
00:06:42.610 --> 00:06:45.820
These Made-Up words that are unique to each environment.

100
00:06:46.210 --> 00:06:52.000
They start out by having you memorize these words and abilities before you even understand the glue

101
00:06:52.000 --> 00:06:53.500
that holds everything together.

102
00:06:53.830 --> 00:06:56.670
Write the language itself, the syntax, the structure.

103
00:06:57.130 --> 00:07:03.700
Now, teachers do this because they underestimate you, your intellect and your attention span.

104
00:07:04.240 --> 00:07:10.120
They think that if you don't build the cheesy click me, I'm a button app in the first 10 minutes of

105
00:07:10.120 --> 00:07:15.850
the course that you'll get bored and give up, they think that you don't have the mental capacity for

106
00:07:15.850 --> 00:07:21.880
abstract ideas and they think that you need to jump into concrete examples right away or you'll get

107
00:07:21.880 --> 00:07:22.570
confused.

108
00:07:22.840 --> 00:07:25.030
OK, but I know that that's not true.

109
00:07:25.270 --> 00:07:29.590
The fact that you mastered the English language is proof that it's not true.

110
00:07:30.040 --> 00:07:36.580
Your mind was made for language and we're going to leverage that on our way to becoming a full stack

111
00:07:36.580 --> 00:07:37.900
JavaScript developer.

112
00:07:38.320 --> 00:07:40.480
So here's what we're going to do in this course.

113
00:07:40.690 --> 00:07:45.210
Like I said in our first chapter, we're going to focus on the language itself.

114
00:07:45.430 --> 00:07:51.100
After that, once we've built up a bit of comfort, we're then going to learn the three most popular

115
00:07:51.520 --> 00:08:00.670
and lucrative JavaScript environments, which as of today are the Web browser node, Jass and Mongo

116
00:08:00.670 --> 00:08:01.240
DB.

117
00:08:01.540 --> 00:08:07.060
Again, don't worry, at this point, I do not expect you to know what Node or Mongo TBR.

118
00:08:07.360 --> 00:08:09.280
We will learn about that later in the course.

119
00:08:09.410 --> 00:08:15.670
For now, all you need to know is that there are multiple JavaScript environments and each one has its

120
00:08:15.670 --> 00:08:20.230
own unique set of jargon or slang or lingo or new vocabulary.

121
00:08:20.590 --> 00:08:26.050
And using these words is how we perform the unique abilities of that environment.

122
00:08:26.260 --> 00:08:29.260
Here's a quick example for each of these big three environments.

123
00:08:29.500 --> 00:08:30.520
Hey, Web browser.

124
00:08:30.790 --> 00:08:34.720
When someone clicks on this button, do this in response.

125
00:08:35.110 --> 00:08:37.750
Hey, Node, when someone visits this U.

126
00:08:37.750 --> 00:08:40.420
RL, please show them this content.

127
00:08:40.780 --> 00:08:48.520
And hey, Mongo DB, please save this data into a database so we can access it later on in the future.

128
00:08:48.900 --> 00:08:55.150
Now obviously you can't just use plain English like this, but the idea is that each environment has

129
00:08:55.150 --> 00:09:01.900
its unique jargon or lingo or new vocabulary, new made up words that you use in your code to perform

130
00:09:01.900 --> 00:09:03.280
these unique abilities.

131
00:09:03.910 --> 00:09:09.670
And as fun as that is, and as tempting as it might be to jump right into that, we need to begin first

132
00:09:09.670 --> 00:09:15.970
with the language itself, the symbols, the syntax, the structure, the anatomy of a JavaScript sentence.

133
00:09:16.240 --> 00:09:22.420
Once we're comfortable with that, then we can jump in to the concrete uses for JavaScript in the real

134
00:09:22.420 --> 00:09:24.400
world in these environments.

135
00:09:24.760 --> 00:09:29.620
And that, my friends, is how we become a full stack JavaScript developer.

136
00:09:29.920 --> 00:09:32.410
We combine the abstract with the concrete.

137
00:09:32.710 --> 00:09:38.970
We learned the language and then we understand how to use it to build all layers of an application.

138
00:09:39.310 --> 00:09:45.040
This holistic skill set is incredibly in demand, can be very lucrative, but more importantly, it

139
00:09:45.040 --> 00:09:46.750
can be very fun and rewarding.

140
00:09:47.080 --> 00:09:51.280
So I don't know about you, but I am very excited to get started on this JavaScript journey with you.

141
00:09:51.580 --> 00:09:56.770
In our very next lesson, we're going to begin coding, experimenting and moving right along.

142
00:09:56.980 --> 00:09:58.150
So let's get things rolling.

143
00:09:58.150 --> 00:10:00.940
Let's start building some momentum and I will see you.

144
00:10:01.190 --> 00:10:02.450
In the next lesson.
