WEBVTT
1
00:00:01.730 --> 00:00:06.180
Hello, everyone, and welcome back to the 10 days of JavaScript.

2
00:00:06.530 --> 00:00:08.900
Here we are in day number five.

3
00:00:09.200 --> 00:00:15.200
And in this lesson, we are going to learn how to make decisions in our code.

4
00:00:15.740 --> 00:00:17.650
Let's jump right into an example.

5
00:00:18.200 --> 00:00:25.370
So let's imagine that we own an online strawbery store and we have a rule that an order must contain

6
00:00:25.370 --> 00:00:29.370
at least 10 strawberries in order for a user to place that order.

7
00:00:29.720 --> 00:00:32.030
Otherwise, it's just not worth our while to ship it.

8
00:00:32.600 --> 00:00:43.880
So if a visitor has added 10 or more strawberries to their cart, so let's say let Strawbery count equal

9
00:00:43.880 --> 00:00:51.950
20, OK, as long as this variable that we just made up of Strawberry Count is greater than 10, then

10
00:00:51.950 --> 00:00:59.120
maybe we want to output a message onto the Web page that says congratulations so we can use the Web

11
00:00:59.120 --> 00:01:01.310
browsers document object.

12
00:01:01.670 --> 00:01:04.280
And it contains a method named right.

13
00:01:04.580 --> 00:01:06.200
So document right.

14
00:01:06.590 --> 00:01:09.560
And we can include a string of text in these parentheses.

15
00:01:09.560 --> 00:01:11.270
So I can just say congrats.

16
00:01:12.020 --> 00:01:16.070
And then if I take a look at the preview area of code pen, there we can see.

17
00:01:16.070 --> 00:01:16.830
Congrats.

18
00:01:17.300 --> 00:01:24.590
OK, but on the other hand, if Strawbery Count is less than 10, we don't want to say congrats.

19
00:01:25.010 --> 00:01:27.320
In that case, we would want to say document.

20
00:01:27.500 --> 00:01:30.170
Right and say sorry.

21
00:01:30.410 --> 00:01:34.220
We do not ship orders that small.

22
00:01:34.970 --> 00:01:41.140
OK, now down in the preview area, obviously we do not want to show both of these messages.

23
00:01:41.720 --> 00:01:48.280
We want to show either one or the other depending on the value of strawberry count.

24
00:01:48.860 --> 00:01:56.780
So the question becomes, how can we make a decision in our code so that our application can handle

25
00:01:57.110 --> 00:01:59.900
either situation and act accordingly?

26
00:02:00.350 --> 00:02:05.110
Well, the answer is that we can use something called an if statement.

27
00:02:05.870 --> 00:02:09.520
So check this out right above the congrats line.

28
00:02:09.530 --> 00:02:14.140
Let's say if and then a space and then parentheses.

29
00:02:14.630 --> 00:02:23.930
So if and then inside the parentheses, let's say Strawbery Count is greater than nine.

30
00:02:24.530 --> 00:02:24.790
Right.

31
00:02:24.800 --> 00:02:28.160
So that would include 10 and obviously any number greater than ten.

32
00:02:28.400 --> 00:02:34.190
And then right after the closing parentheses, let's open up curly brackets inside the curly brackets.

33
00:02:34.190 --> 00:02:35.360
I like to dropdown.

34
00:02:36.180 --> 00:02:42.590
OK, now on this new line in between the curly brackets, let's cut and paste the congrats line.

35
00:02:44.010 --> 00:02:46.170
So I'm just going to select this, cut it.

36
00:02:47.300 --> 00:02:48.260
Paste it right here.

37
00:02:48.740 --> 00:02:53.570
OK, now there's one more step I want to include before I take a break and explain how this code is

38
00:02:53.570 --> 00:02:54.040
working.

39
00:02:54.440 --> 00:03:02.060
So right after this closing curly bracket right here, let's say else, and then a new curly bracket

40
00:03:02.060 --> 00:03:02.450
pair.

41
00:03:02.810 --> 00:03:09.680
And in between these curly brackets, let's drop down and let's cut and paste our sorry message into

42
00:03:09.680 --> 00:03:10.900
these curly brackets.

43
00:03:11.510 --> 00:03:13.640
So I'm going to select this cut and paste it.

44
00:03:14.770 --> 00:03:16.360
OK, so what's going on?

45
00:03:16.370 --> 00:03:18.410
Let's review this code and detail.

46
00:03:18.770 --> 00:03:21.260
It really almost makes sense in plain English.

47
00:03:21.260 --> 00:03:31.230
We're saying if Strawberry Count is greater than nine, then do this or else or otherwise do this.

48
00:03:31.880 --> 00:03:38.990
So now down in the preview area, we only see the congrats message because our strawberry count is clearly

49
00:03:38.990 --> 00:03:40.130
greater than nine.

50
00:03:40.620 --> 00:03:47.150
But if we change this value up here to something that is not greater than nine, like maybe five, for

51
00:03:47.150 --> 00:03:52.370
example, then down in the previous area we see the sorry message and that's cool.

52
00:03:52.580 --> 00:03:55.910
It means that our tiny application is now flexible.

53
00:03:56.210 --> 00:03:59.900
It automatically adapts and makes decisions on its own.

54
00:04:00.350 --> 00:04:02.540
And that's the heart and soul of programming.

55
00:04:02.930 --> 00:04:10.640
Computer programming uses if statements or similar conditional logic like this everywhere, for example,

56
00:04:10.640 --> 00:04:19.100
on Facebook, if you are someone's friend, then you can see their entire profile and all of their photos

57
00:04:19.530 --> 00:04:21.290
else or otherwise.

58
00:04:21.290 --> 00:04:26.780
If you are not their friend, maybe you just see a very limited version of their profile.

59
00:04:27.140 --> 00:04:30.880
OK, now let's learn more about how if statements work.

60
00:04:31.280 --> 00:04:35.930
So for starters, you do not need to include the else area.

61
00:04:36.530 --> 00:04:39.950
The else is just a fallback insurance plan.

62
00:04:40.400 --> 00:04:40.760
Right?

63
00:04:40.880 --> 00:04:45.500
If this condition is not true, then the else will happen.

64
00:04:45.830 --> 00:04:47.480
But you don't have to have the else.

65
00:04:47.480 --> 00:04:51.560
So we could delete the word else and then it's curly bracket pair like this.

66
00:04:52.130 --> 00:04:57.380
And now down in the previous area, we see that if this condition is not true, then just literally

67
00:04:57.380 --> 00:04:58.740
nothing happens.

68
00:04:59.360 --> 00:05:04.640
So the idea here is that the if statement can stand on its own without the else block.

69
00:05:05.270 --> 00:05:12.140
OK, the next thing I want to cover is that this area inside the parentheses is called the condition.

70
00:05:12.560 --> 00:05:18.260
A condition is going to boil down to a value of either true or false.

71
00:05:18.740 --> 00:05:24.500
If it's true, then obviously the code inside the if curly brackets will run, if it's false, then

72
00:05:24.500 --> 00:05:28.280
either nothing will happen or the code inside your else block will run.

73
00:05:28.850 --> 00:05:34.970
Now for the condition we are not limited to only the greater than symbol or operator.

74
00:05:35.270 --> 00:05:41.570
But before we move on to learn about other ways of comparing values, let's first analyze what's really

75
00:05:41.570 --> 00:05:42.400
going on here.

76
00:05:42.770 --> 00:05:48.770
So as you might have guessed, the greater than operator is going to compare the value to its left and

77
00:05:48.770 --> 00:05:54.530
the value to its right and then return either a value of true or a value of false.

78
00:05:54.920 --> 00:06:00.070
Now, this whole idea of a true or false value is a new concept to us.

79
00:06:00.530 --> 00:06:05.780
So in previous lessons, we've learned that there are different types of values in JavaScript.

80
00:06:06.200 --> 00:06:10.640
So down here, just as an example, I could say let test value equal.

81
00:06:10.970 --> 00:06:15.950
And we've learned that one type of value is a number, right?

82
00:06:15.960 --> 00:06:17.620
You don't need quotes around a number.

83
00:06:17.870 --> 00:06:21.050
We learned that another type of value is a string of text.

84
00:06:21.440 --> 00:06:21.770
Right?

85
00:06:21.770 --> 00:06:22.940
You wrap it in quotes.

86
00:06:23.420 --> 00:06:27.560
We learned that another type of value is an object with curly brackets.

87
00:06:28.640 --> 00:06:28.940
Right.

88
00:06:28.950 --> 00:06:37.550
So you say Species' Cath, we learned that another type of value is an array with square brackets separated

89
00:06:37.550 --> 00:06:39.290
by commas like this.

90
00:06:41.060 --> 00:06:48.290
So that's no strings of text objects, arrays, and now I want to introduce you to a new type of value

91
00:06:48.620 --> 00:06:49.820
named a Bulleen.

92
00:06:50.300 --> 00:06:56.450
A Boolean value is either set to literally the word true, and it's not wrapped in quotes.

93
00:06:56.690 --> 00:07:00.530
If it was wrapped in quotes, that would just be a simple string of text.

94
00:07:00.980 --> 00:07:05.240
But you can literally just say true or false.

95
00:07:05.840 --> 00:07:12.080
OK, so the idea here is that up in our condition for the statement, the greater than operator is either

96
00:07:12.080 --> 00:07:14.780
going to return true or false.

97
00:07:15.050 --> 00:07:16.850
And that's a special type of value.

98
00:07:17.100 --> 00:07:22.130
OK, and then the if statement knows what to do with that true or false value.

99
00:07:22.610 --> 00:07:28.790
OK, so now that we have a general idea of what's going on, let's take a look at other ways of comparing

100
00:07:28.790 --> 00:07:31.870
values aside from the greater than operator.

101
00:07:32.210 --> 00:07:35.780
So obviously there is also the less than operator.

102
00:07:36.320 --> 00:07:39.740
There is also the less than or equal to operator.

103
00:07:40.170 --> 00:07:44.390
As you might have guessed, there's the greater than or equal to operator.

104
00:07:44.990 --> 00:07:50.930
Or if you want to see if a value equals something in particular, you can say two equal signs.

105
00:07:51.360 --> 00:07:57.410
And now this would only return true if our strawbery count was specifically set to nine.

106
00:07:58.190 --> 00:08:04.190
The key here is that a single equal sign is how we can assign a value.

107
00:08:05.120 --> 00:08:12.680
We are saying this should equal this, whereas double equals sign or two equal signs in a row like this

108
00:08:12.980 --> 00:08:15.530
is how we check for equality.

109
00:08:16.160 --> 00:08:23.600
OK, another comparison operator is if we say exclamation equal sign and this will return true if the

110
00:08:23.600 --> 00:08:26.610
value is anything but the number nine.

111
00:08:27.320 --> 00:08:31.900
So if I come up here and set the value to twenty, obviously that's not nine.

112
00:08:31.910 --> 00:08:34.720
So down here we see the congrats message.

113
00:08:35.240 --> 00:08:41.190
Also, it's important to know that we do not even need to use a comparison operator at all.

114
00:08:41.480 --> 00:08:48.680
So, for example, our condition could literally just be the strawberry count variable, because in

115
00:08:48.680 --> 00:08:52.970
this context, we're JavaScript is expecting a true or false value.

116
00:08:53.210 --> 00:08:57.410
Any number larger than zero will be interpreted as true.

117
00:08:57.770 --> 00:09:01.700
So right now we see that this is a valuating to true because we see the congrats message.

118
00:09:01.700 --> 00:09:06.320
But up on this first line of code, if we changed our variable to equal zero.

119
00:09:07.340 --> 00:09:13.250
We see that it evaluates to false, so within this context of everything getting interpreted as either

120
00:09:13.250 --> 00:09:15.570
true or false, zero is false.

121
00:09:15.860 --> 00:09:17.410
Any other number is true.

122
00:09:17.840 --> 00:09:24.260
Obviously, if we spell out true, we see the congrats message or we could set this to false.

123
00:09:25.280 --> 00:09:32.270
Also, a completely empty string of text will be interpreted as a false value, but a string of text

124
00:09:32.270 --> 00:09:37.860
with any actual content in it is interpreted as true, OK, at this point in the lesson.

125
00:09:37.880 --> 00:09:39.470
Let's change gears a bit.

126
00:09:39.830 --> 00:09:47.570
And I want to stress the fact that this whole idea of true or false values is not limited to just an

127
00:09:47.570 --> 00:09:55.040
if statement or in other words, the if statement is not the only place where a true or false value

128
00:09:55.040 --> 00:09:55.760
is useful.

129
00:09:56.060 --> 00:09:58.370
So right now, I want to show you a new example.

130
00:09:58.640 --> 00:10:04.220
I'm going to completely erase everything we have here and start fresh for this next example.

131
00:10:04.430 --> 00:10:11.210
Let's imagine that we want to output something onto the Web page many, many times, maybe one or two

132
00:10:11.210 --> 00:10:12.260
hundred times.

133
00:10:12.650 --> 00:10:13.910
So this is totally random.

134
00:10:13.910 --> 00:10:15.200
But just type this out with me.

135
00:10:15.200 --> 00:10:25.520
If we say document, right, and we say there are two strawberries, OK, and then let's just copy and

136
00:10:25.520 --> 00:10:30.760
paste this line, copy and paste it and imagine that you wanted to count counts.

137
00:10:30.770 --> 00:10:32.230
He'd say there are two strawberries.

138
00:10:32.240 --> 00:10:32.780
There are three.

139
00:10:32.780 --> 00:10:33.350
There are four.

140
00:10:33.350 --> 00:10:34.010
There are five.

141
00:10:34.010 --> 00:10:34.760
There are six.

142
00:10:35.030 --> 00:10:38.710
And imagine you wanted to count like this all the way up to 500.

143
00:10:39.080 --> 00:10:45.470
Well, copying and pasting would be incredibly repetitive and it's really just sloppy, lazy code.

144
00:10:45.950 --> 00:10:50.630
But luckily computers are really good at repetitive tasks.

145
00:10:51.200 --> 00:10:56.390
So right now I want to show you how we can make the computer do all of that hard work for us.

146
00:10:56.750 --> 00:11:00.330
And the key here is leveraging a true or false value.

147
00:11:00.680 --> 00:11:01.520
So check this out.

148
00:11:01.670 --> 00:11:05.570
Let's begin with two forward slashes to begin a comment.

149
00:11:05.810 --> 00:11:09.200
I will explain why we are including this comment in just a moment.

150
00:11:09.590 --> 00:11:16.400
But right after that, let's say a while and then a pair of parentheses and then after that, a pair

151
00:11:16.400 --> 00:11:17.530
of curly brackets.

152
00:11:18.860 --> 00:11:25.430
Now, within the while parentheses, we include a condition, obviously, that will return true or false.

153
00:11:25.880 --> 00:11:32.600
Now, as long as it evaluates to true, whatever lives within the curly brackets is going to happen

154
00:11:32.600 --> 00:11:33.230
again.

155
00:11:33.650 --> 00:11:38.900
And then it's going to check the true or false nature of our condition again and then repeat the curly

156
00:11:38.900 --> 00:11:44.950
brackets again and again and again until finally the condition evaluates to false.

157
00:11:45.380 --> 00:11:48.680
It's a bit hard to understand until you actually see it in action.

158
00:11:48.950 --> 00:11:52.040
So let's try this out on a new line up at the very, very top.

159
00:11:52.040 --> 00:12:02.180
Let's say let strawberry count equal to OK, now in the condition for our while loop within these parentheses,

160
00:12:02.180 --> 00:12:10.940
let's say while Strawbery Count is less than two hundred, then within the curly brackets for the while

161
00:12:10.940 --> 00:12:12.830
loop let's say document dot.

162
00:12:12.860 --> 00:12:13.280
Right.

163
00:12:14.150 --> 00:12:20.420
And let's say there are and then instead of hard coding a number ourselves right here, like three or

164
00:12:20.420 --> 00:12:26.330
four or five, let's end the quotes and say plus strawberry count.

165
00:12:26.330 --> 00:12:29.870
So pull in the variable and then let's finish out the sentence.

166
00:12:29.870 --> 00:12:37.550
So there are blank strawberries, OK, now, right after this line, but still within the while loop

167
00:12:37.550 --> 00:12:46.880
curly brackets, let's say strawberry count should equal strawberry count plus one.

168
00:12:47.420 --> 00:12:49.760
I will explain this line of code in just a minute.

169
00:12:49.760 --> 00:12:55.490
But for now, let's try removing the two forward slashes on this line of code to basically remove the

170
00:12:55.490 --> 00:12:56.120
comment.

171
00:12:57.770 --> 00:13:03.590
OK, down the previous area, you can see that the computer automatically counted all the way to one

172
00:13:03.590 --> 00:13:04.670
hundred ninety nine.

173
00:13:05.450 --> 00:13:10.850
If we wanted it to actually include two hundred, we could change this to less than or equal to.

174
00:13:12.800 --> 00:13:15.730
OK, then down the preview, we see it counted all the way to two hundred.

175
00:13:16.100 --> 00:13:17.030
So what's going on.

176
00:13:17.030 --> 00:13:17.990
How is this working.

177
00:13:18.500 --> 00:13:22.640
Basically a while loop is just going to keep repeating its body.

178
00:13:23.030 --> 00:13:27.710
It's area within the curly brackets here until the condition is no longer true.

179
00:13:28.220 --> 00:13:35.390
So we know that Strawberry Count starts out with a value of two and then each time the while loop runs,

180
00:13:35.390 --> 00:13:40.220
remember, on this line of code we are basically incrementing strawberry count by one.

181
00:13:40.610 --> 00:13:43.840
So we're saying that variable should equal itself plus one.

182
00:13:44.540 --> 00:13:45.740
Now, a neat little trick.

183
00:13:46.070 --> 00:13:49.640
There is a more succinct or cleaner way of writing the same line of code.

184
00:13:49.970 --> 00:13:55.640
But before we improve or modify this line, I want to be sure to comment about the beginning of our

185
00:13:55.640 --> 00:13:56.930
while loop once again.

186
00:13:57.380 --> 00:14:04.550
So just to forward Slash is here and I'm only doing this because code pen automatically reruns and retests

187
00:14:04.550 --> 00:14:06.800
your code after every keystroke.

188
00:14:07.190 --> 00:14:12.530
And when you're working with a while loop, you want to be careful to not try and execute an infinite

189
00:14:12.530 --> 00:14:12.950
loop.

190
00:14:13.340 --> 00:14:18.890
Because if you think about it, without this line of code that I'm highlighting right now, if we never

191
00:14:18.890 --> 00:14:24.200
incremented the value of Strawberry Count, then the while loop would just run forever because it would

192
00:14:24.200 --> 00:14:24.800
never have a.

193
00:14:24.820 --> 00:14:31.840
Value greater than 200 and computers don't like it when you create an infinite loop, they tend to freeze

194
00:14:31.840 --> 00:14:34.030
up or lock up anyways.

195
00:14:34.030 --> 00:14:39.160
Once you've commented at the beginning of the while loop, we can improve this line of code by simply

196
00:14:39.160 --> 00:14:42.100
saying strawbery count plus.

197
00:14:42.100 --> 00:14:48.370
Plus when we include two plus symbols at the end of a variable like this, it will increment or add

198
00:14:48.370 --> 00:14:49.870
one to that value.

199
00:14:50.290 --> 00:14:51.510
OK, now let's test this out.

200
00:14:51.520 --> 00:14:57.460
Let's get rid of the comment or the two slashes in front of a while and we see that it works perfectly

201
00:14:57.460 --> 00:14:57.880
still.

202
00:14:58.210 --> 00:14:59.610
And just a small update.

203
00:14:59.830 --> 00:15:03.570
Why don't we change it so that each sentence sits on its own line?

204
00:15:04.000 --> 00:15:08.320
So after Strawberry's period, I'm just going to include a B-R tag.

205
00:15:08.920 --> 00:15:09.310
Cool.

206
00:15:09.310 --> 00:15:10.090
And there we see it.

207
00:15:10.300 --> 00:15:14.170
The computer counts all the way up to 200 for us.

208
00:15:14.590 --> 00:15:17.560
And computers are really good at repetitive tasks like this.

209
00:15:17.560 --> 00:15:24.000
You could change this to 500 and it's going to count all the way up for you anyways.

210
00:15:24.010 --> 00:15:30.040
The take away idea here is that there are many places in JavaScript where you can leverage a true or

211
00:15:30.040 --> 00:15:33.790
false value to circle back to the idea of this lesson.

212
00:15:33.970 --> 00:15:40.000
The while loop is going to keep repeating itself again and again and again as long as this value is

213
00:15:40.000 --> 00:15:48.130
true or to put it into common English, it's basically saying, while this is true, do this.

214
00:15:49.030 --> 00:15:51.640
Now, that's going to bring this lesson to a close.

215
00:15:51.640 --> 00:15:57.310
But before we move on to the next lesson, I do want to let you know that I am fully aware that these

216
00:15:57.310 --> 00:16:01.030
first four or five lessons have been a bit disjointed.

217
00:16:01.510 --> 00:16:06.910
And I know it can be challenging to stay engaged because we haven't yet tried to test our knowledge

218
00:16:07.090 --> 00:16:09.850
by building some sort of real world application.

219
00:16:10.270 --> 00:16:10.530
Right.

220
00:16:10.540 --> 00:16:18.160
The fun level has not been too high yet, but trust me, you are doing yourself a huge favor by learning

221
00:16:18.160 --> 00:16:25.120
this core of the language first, once all of these different symbols in parentheses and equal signs,

222
00:16:25.390 --> 00:16:32.500
once this basic syntax becomes even a little bit familiar to you, you will have already won 90 percent

223
00:16:32.500 --> 00:16:38.020
of the battle of learning to be a JavaScript developer because JavaScript is JavaScript.

224
00:16:38.290 --> 00:16:43.720
It doesn't matter if we are writing it in the Web browser or if we are writing it from node to set up

225
00:16:43.720 --> 00:16:47.740
a server or we are writing it for Mongo DB to work with the database.

226
00:16:48.160 --> 00:16:54.130
If you can speak this code, if you can speak this language itself, then learning the environmental

227
00:16:54.130 --> 00:16:58.180
jargon of the browser or node or Mongo DB is a piece of cake.

228
00:16:58.660 --> 00:17:04.570
Now again, I know the fun level in the course so far has been relatively low and I know that so many

229
00:17:04.570 --> 00:17:07.880
other courses take the opposite approach they have.

230
00:17:07.880 --> 00:17:13.630
You start building a web application immediately, but you're really just copying what the instructor

231
00:17:13.630 --> 00:17:19.480
is typing because things are moving so fast and you haven't yet had a chance to get familiar with the

232
00:17:19.480 --> 00:17:20.200
syntax.

233
00:17:20.200 --> 00:17:20.500
Right.

234
00:17:20.710 --> 00:17:26.830
The parentheses, the curly brackets, the dots, the equal signs, the quotes, so on and so forth.

235
00:17:27.220 --> 00:17:34.510
So long story short, I know without a doubt that this is the most boring and tedious part of the entire

236
00:17:34.510 --> 00:17:35.650
full stack course.

237
00:17:36.100 --> 00:17:41.230
But consider this first chapter, the metaphorical act of eating your broccoli.

238
00:17:41.620 --> 00:17:41.950
Right.

239
00:17:41.950 --> 00:17:45.940
It's not the tastiest, but it's really good for you in the long run.

240
00:17:46.450 --> 00:17:50.140
So for many of you, I know it feels like we're moving very slowly.

241
00:17:50.530 --> 00:17:51.130
Don't worry.

242
00:17:51.130 --> 00:17:55.750
The speed and tempo of this course is going to pick up dramatically as we move on.

243
00:17:55.750 --> 00:18:01.630
But in this first introductory chapter, let's just keep eating our broccoli for a few more lessons.

244
00:18:01.810 --> 00:18:02.040
Right.

245
00:18:02.080 --> 00:18:04.600
We are already done with day five out of ten.

246
00:18:04.900 --> 00:18:11.770
And once we finished the ten days of JavaScript, we will have a rock solid foundation and a basic understanding

247
00:18:11.770 --> 00:18:12.940
of the language itself.

248
00:18:13.240 --> 00:18:18.580
And then from there, we can get on to the fun stuff and actually start building applications.

249
00:18:18.910 --> 00:18:21.340
Trust me, there is a method to this madness.

250
00:18:21.700 --> 00:18:27.880
Now, in our very next lesson, we are going to learn more about functions as we answer the question

251
00:18:28.270 --> 00:18:30.490
what is a higher order function?

252
00:18:30.970 --> 00:18:31.900
Should be a lot of fun.

253
00:18:31.930 --> 00:18:35.950
Let's keep things rolling and I will see you in the next lesson.
