1
00:00:01,520 --> 00:00:06,080
Hello, everyone, and welcome to the ten days of JavaScript.

2
00:00:06,410 --> 00:00:12,170
In this first chapter, we are going to give you a rock solid foundation that you can build a career

3
00:00:12,170 --> 00:00:16,430
on top of and no prior experience or knowledge is required.

4
00:00:16,730 --> 00:00:21,830
So even if you have zero experience with computer programming in general, or maybe if you've never

5
00:00:21,830 --> 00:00:26,510
even heard of JavaScript, this is the perfect place to get started.

6
00:00:27,020 --> 00:00:32,570
OK, so right now in video number one day number one, we're going to get started in about 30 seconds

7
00:00:32,570 --> 00:00:33,040
from now.

8
00:00:33,350 --> 00:00:40,310
But first, I just want to say that JavaScript is much bigger than the Web browser in the modern era.

9
00:00:40,310 --> 00:00:43,590
JavaScript can be used for just about anything.

10
00:00:44,210 --> 00:00:51,700
Having said that, we are indeed going to begin in the Web browser because it's super accessible, right.

11
00:00:51,730 --> 00:00:55,340
It's something that every computer already has.

12
00:00:55,760 --> 00:01:00,520
So this way you don't need to go download and install anything fancy or extra.

13
00:01:00,860 --> 00:01:03,410
Your computer already has a Web browser on it.

14
00:01:03,590 --> 00:01:09,320
So right here, right now, we are going to get started, get your hands dirty and have you write your

15
00:01:09,320 --> 00:01:11,760
first bit of JavaScript code.

16
00:01:12,320 --> 00:01:19,310
So right now, I want you to follow along with me and I want you to open up Google dot com in a new

17
00:01:19,310 --> 00:01:20,910
tab or a new window.

18
00:01:21,410 --> 00:01:24,260
Technically, it doesn't need to be Google dot com.

19
00:01:24,260 --> 00:01:26,750
It could be any website that you want to visit.

20
00:01:27,200 --> 00:01:30,260
OK, but the important part is that I want you to right.

21
00:01:30,260 --> 00:01:38,720
Click somewhere on the Web page and in the menu that pops up, I want you to choose the inspect option.

22
00:01:39,170 --> 00:01:41,840
I'm using Google Chrome as my Web browser.

23
00:01:41,990 --> 00:01:44,120
You could also use Firefox.

24
00:01:44,630 --> 00:01:48,140
The newest versions of Microsoft Edge are also excellent.

25
00:01:48,470 --> 00:01:54,860
And if you want to use Safari, you'll need to go into the advanced preferences and enable the developed

26
00:01:54,860 --> 00:01:56,210
menu anyways.

27
00:01:56,210 --> 00:02:01,040
The point is, is that no matter what you're using as your web browser, if you right click somewhere

28
00:02:01,040 --> 00:02:04,220
on the page, you should see an inspect option.

29
00:02:04,430 --> 00:02:05,780
And I want you to click that.

30
00:02:06,800 --> 00:02:09,560
And that's going to open up your developer tools.

31
00:02:10,530 --> 00:02:16,380
It might be a separate window like this or it might be attached to the bottom of your screen, but either

32
00:02:16,380 --> 00:02:23,700
way, within this developer tools area, I want you to look for something called the console once you

33
00:02:23,710 --> 00:02:24,820
found console.

34
00:02:24,840 --> 00:02:26,100
Go ahead and click on it.

35
00:02:27,000 --> 00:02:32,550
If you're having a hard time finding the console tab, you might just want to perform a quick Google

36
00:02:32,550 --> 00:02:36,780
search for how do I open the console in blank?

37
00:02:37,110 --> 00:02:40,920
And you would replace Blank with the name of the Web browser that you're using.

38
00:02:40,920 --> 00:02:48,660
So maybe Chrome or Firefox or Microsoft Edge or Safari, because there are keyboard shortcuts that you

39
00:02:48,660 --> 00:02:50,970
can press to directly open the console.

40
00:02:51,300 --> 00:02:52,350
And that's a bit easier.

41
00:02:52,350 --> 00:02:57,540
But I'm not going to run through those because they're different for each Web browser and operating

42
00:02:57,540 --> 00:02:58,050
system.

43
00:02:58,590 --> 00:03:04,980
OK, but the idea is once you have successfully opened the console, you should see some sort of symbol

44
00:03:04,980 --> 00:03:08,960
or a blinking cursor about here where it might be closer to the bottom.

45
00:03:09,240 --> 00:03:16,440
But the idea here is this is where we can experiment with JavaScript code or in other words, this is

46
00:03:16,440 --> 00:03:20,120
where we can type and tell the Web browser what to do.

47
00:03:20,640 --> 00:03:28,380
So, for example, we see my cursor blinking here and if on my keyboard I say two plus two and press

48
00:03:28,380 --> 00:03:30,880
enter, we see four.

49
00:03:31,200 --> 00:03:35,210
Let me make this a bit easier to read and let's try something else.

50
00:03:35,220 --> 00:03:38,720
So maybe five times five.

51
00:03:39,060 --> 00:03:44,180
So five asterisk five press enter twenty five.

52
00:03:44,580 --> 00:03:49,410
Now at this point, you might be thinking to yourself that this is not impressive at all because you've

53
00:03:49,410 --> 00:03:53,130
seen additions before and you've seen multiplication before.

54
00:03:53,490 --> 00:03:53,780
Right.

55
00:03:53,790 --> 00:03:55,430
We've all used a calculator.

56
00:03:55,680 --> 00:03:59,260
What does this have to do with JavaScript and learning how to program.

57
00:03:59,640 --> 00:04:02,550
Well, believe it or not, these lines of code.

58
00:04:02,550 --> 00:04:05,610
So two plus two and five, asterisk five.

59
00:04:06,090 --> 00:04:14,100
These are lines of JavaScript and we just use JavaScript code to make the computer solve these or evaluate

60
00:04:14,100 --> 00:04:15,430
these for us.

61
00:04:16,020 --> 00:04:21,470
OK, but as you might have guessed, computers can do much more than just basic arithmetic.

62
00:04:21,810 --> 00:04:27,060
One of the most useful things that computers can do is store values in memory.

63
00:04:27,660 --> 00:04:28,890
Let me show you what I mean.

64
00:04:29,250 --> 00:04:32,190
I want you to type this out with me in your console.

65
00:04:32,760 --> 00:04:44,610
If I type left and then a space and then my favorite, no space equals and then just pick a number at

66
00:04:44,610 --> 00:04:45,090
random.

67
00:04:45,090 --> 00:04:45,330
Right.

68
00:04:45,330 --> 00:04:47,880
Whatever your favorite or whatever your lucky number is.

69
00:04:48,180 --> 00:04:57,570
So in my case, let my favorite number equal seven and then press enter and we just stored this value

70
00:04:57,570 --> 00:04:58,510
in memory.

71
00:04:58,980 --> 00:04:59,910
So check this out.

72
00:04:59,920 --> 00:05:00,990
Let's try something new.

73
00:05:00,990 --> 00:05:03,630
Let's say ten plus.

74
00:05:03,750 --> 00:05:09,300
Let's say my favorite number three press enter or return.

75
00:05:09,540 --> 00:05:11,190
We see seventeen.

76
00:05:11,730 --> 00:05:17,850
Right, because we set this my favorite number to equal or to have a value of seven.

77
00:05:18,450 --> 00:05:24,450
So ten plus seven is seventeen and we can store more than just numbers.

78
00:05:24,870 --> 00:05:35,520
So for example, we could try storing our name in memory, type this out with me, let my name equal

79
00:05:36,060 --> 00:05:37,740
and then open up a quote.

80
00:05:37,740 --> 00:05:41,010
You can use a single quote or a double quote.

81
00:05:41,010 --> 00:05:44,910
It's up to you and then type in your name and then close out the quote.

82
00:05:45,390 --> 00:05:47,370
Just make sure your quotes are consistent.

83
00:05:47,370 --> 00:05:51,240
So if you use a double quote at the beginning, use a double quote at the end.

84
00:05:51,780 --> 00:05:57,180
In case you're wondering why we're using quotes this time, it's because in JavaScript, if you're just

85
00:05:57,180 --> 00:06:03,540
dealing with a number that doesn't need quotes because a number is a special type of data, but if you

86
00:06:03,540 --> 00:06:09,060
want a string of text, write like a name or word, a sentence or even a paragraph.

87
00:06:09,540 --> 00:06:14,190
In JavaScript, we call that a string of text or just a string.

88
00:06:14,520 --> 00:06:16,890
And we always want to wrap that in quotes.

89
00:06:17,430 --> 00:06:24,510
So you would typing your name right and wrap it in quotes and then press enter and we just stored that

90
00:06:24,510 --> 00:06:25,100
in memory.

91
00:06:25,320 --> 00:06:30,840
So now if you ever want to use it again, you can just type in my name, press enter and it's going

92
00:06:30,840 --> 00:06:32,070
to give you your name.

93
00:06:32,700 --> 00:06:41,220
Or for a more useful example, we could open up a string of text and say hello, my name is and then

94
00:06:41,220 --> 00:06:43,200
a space and then close out the quote.

95
00:06:44,610 --> 00:06:46,740
And then after that, let's add on.

96
00:06:46,740 --> 00:06:52,240
So the addition symbol and then let's type in this label name of where we stored the value.

97
00:06:52,260 --> 00:06:58,860
So my name and then let's add on a closing period to close out the sentence.

98
00:06:58,860 --> 00:06:59,090
Right.

99
00:06:59,100 --> 00:07:07,350
So quotation period, close out the quote press enter and the computer adds all of this up for us and

100
00:07:07,350 --> 00:07:08,010
generates.

101
00:07:08,020 --> 00:07:09,480
Hello, my name is Brad.

102
00:07:09,870 --> 00:07:15,960
And closes the sentence out with a period so you can see that addition is not only for numbers, we

103
00:07:15,960 --> 00:07:18,810
can also add strings of text together.

104
00:07:19,440 --> 00:07:24,700
If you're still a little bit confused on the difference between a number and a string.

105
00:07:25,050 --> 00:07:26,720
Let me show you this quick example.

106
00:07:27,180 --> 00:07:31,180
So when we say two plus two, we get four.

107
00:07:31,740 --> 00:07:39,900
However, if we opened up a quote and said to close out the quote and then plus and then quote to close

108
00:07:39,900 --> 00:07:47,190
out the quote, if I press enter here we see 22, which doesn't make any sense mathematically.

109
00:07:47,670 --> 00:07:53,730
This is because when you wrap something in quotes, JavaScript is not going to treat it as a no.

110
00:07:53,910 --> 00:07:58,920
It's going to treat it as a string of text and interpret it quite literally.

111
00:07:59,010 --> 00:07:59,280
Right.

112
00:07:59,310 --> 00:08:07,620
So it's just going to squish these together to two without the quotes JavaScript knows to interpret

113
00:08:07,620 --> 00:08:10,200
these as actual numbers.

114
00:08:10,560 --> 00:08:17,280
Now, if this distinction between numbers and strings of text is still not clear, don't worry about

115
00:08:17,280 --> 00:08:17,400
it.

116
00:08:17,640 --> 00:08:21,940
This is a topic that we will address again later on in future lessons.

117
00:08:22,470 --> 00:08:25,170
Trust me, we are going to learn through repetition.

118
00:08:25,730 --> 00:08:31,110
OK, now, finally, let's get to the truly interesting part of this lesson.

119
00:08:31,620 --> 00:08:35,300
So we've seen that we can store values in memory, right?

120
00:08:35,310 --> 00:08:40,490
So we stored my favorite number and we stored my name.

121
00:08:41,040 --> 00:08:43,200
And these are labels that I just made up.

122
00:08:43,640 --> 00:08:47,700
There's nothing special about the phrase my favorite number or my name.

123
00:08:48,300 --> 00:08:48,600
Right.

124
00:08:48,610 --> 00:08:57,600
So you could have said let Unicorn equal 12 or let pizza equal cheese.

125
00:08:58,410 --> 00:09:04,560
As long as your label name starts with the letter and doesn't contain any spaces in it, you can basically

126
00:09:04,560 --> 00:09:06,630
create any label name that you want.

127
00:09:07,260 --> 00:09:08,820
OK, that was a bit of a tangent.

128
00:09:09,090 --> 00:09:16,020
Anyways, the idea is we've seen that we can store values in memory with our own custom labels.

129
00:09:16,470 --> 00:09:24,250
But the really interesting part is that the environment also stores a ton of its own values in memory.

130
00:09:24,900 --> 00:09:26,830
Now, when I say environment, what do I mean?

131
00:09:27,570 --> 00:09:31,610
Well, in this case, the Web browser is our environment.

132
00:09:32,310 --> 00:09:39,000
So, for example, the Web browser is storing the title of this Web page in memory.

133
00:09:39,510 --> 00:09:43,320
In my case, that's Google or whichever Web page you were visiting.

134
00:09:43,740 --> 00:09:44,670
Now check this out.

135
00:09:44,850 --> 00:09:51,280
We can actually use JavaScript code to manipulate this title that we see right here.

136
00:09:52,590 --> 00:09:56,090
So back in our console, I want you to follow along with me.

137
00:09:56,490 --> 00:10:03,400
So just like we made up labels like my favorite number or my name or unicorn or pizza.

138
00:10:03,720 --> 00:10:10,950
Well, the Web browser environment has created a label or object named document.

139
00:10:11,970 --> 00:10:14,910
Now I just use the new word, their object.

140
00:10:15,270 --> 00:10:18,590
At this point, we have no idea what an object is.

141
00:10:19,020 --> 00:10:19,650
Don't worry.

142
00:10:19,650 --> 00:10:22,790
We're going to learn about objects in lesson number three.

143
00:10:23,250 --> 00:10:31,650
But for now, all you need to know is that we can look inside an object with a period and then the document

144
00:10:31,650 --> 00:10:34,740
object contains a property named title.

145
00:10:35,180 --> 00:10:43,650
So if we say document, dot title and then press enter, we see Google or the title of whichever Web

146
00:10:43,650 --> 00:10:44,580
page you're visiting.

147
00:10:45,030 --> 00:10:49,520
Now here is where things finally get interesting and we start to see the big picture.

148
00:10:49,830 --> 00:10:57,400
We can update or manipulate the value of this property and the Web browser will use that new value.

149
00:10:57,840 --> 00:11:03,390
So if we wanted to change this, instead of saying Google to saying something random, we could just

150
00:11:03,390 --> 00:11:10,950
say document dot title equals and then a string of text.

151
00:11:10,950 --> 00:11:19,350
So quotes and maybe I'll just say hello and and the quote, press enter and you can see up in my tab

152
00:11:19,350 --> 00:11:22,800
for the Web browser we now see hello instead of Google.

153
00:11:23,280 --> 00:11:23,660
Cool.

154
00:11:23,850 --> 00:11:26,190
Now let's try one more example task.

155
00:11:26,190 --> 00:11:32,880
Before we bring this lesson to a close, let's try to use JavaScript code to change the background color

156
00:11:32,880 --> 00:11:38,670
of Google from white to maybe a light blue or any other color that you would choose.

157
00:11:39,240 --> 00:11:41,310
So back in the console, check this out.

158
00:11:41,790 --> 00:11:54,000
We can say document dot, body dot style, dot by ground color.

159
00:11:55,200 --> 00:11:58,890
So I'll give you a minute to type that out again.

160
00:11:58,890 --> 00:12:04,440
Remember that the dot or period is how you look inside an object for other properties.

161
00:12:05,040 --> 00:12:09,660
We will learn more about objects and future lessons, but for now you could almost think of.

162
00:12:09,720 --> 00:12:15,120
This as a Russian stacking doll, you know, the dolls where one is slightly smaller and it fits inside

163
00:12:15,120 --> 00:12:15,580
the other.

164
00:12:16,230 --> 00:12:17,870
That's basically what's going on here.

165
00:12:18,180 --> 00:12:21,450
So document contains a property named body.

166
00:12:22,110 --> 00:12:28,500
Body contains a property name, style and style, contains a property named background color.

167
00:12:28,860 --> 00:12:36,900
And make sure you type the C in color here as a capital an uppercase C, because this is case sensitive

168
00:12:37,320 --> 00:12:37,980
anyways.

169
00:12:37,990 --> 00:12:44,270
So after that we can say equals and then in quotes you can choose any color name you want.

170
00:12:44,700 --> 00:12:52,260
So I'm going to say light blue, but you could say yellow or orange or green, just type out a really

171
00:12:52,260 --> 00:12:54,320
common color name that you can think of.

172
00:12:55,260 --> 00:12:59,940
And as soon as I press enter, you can see the webpage updated.

173
00:13:00,600 --> 00:13:01,030
Cool.

174
00:13:01,290 --> 00:13:05,070
Now, that's going to bring the Hands-On portion of this lesson to a close.

175
00:13:05,280 --> 00:13:07,110
But I do have a quick review for you.

176
00:13:07,680 --> 00:13:17,160
So the takeaway for this lesson is the idea of values, storing values in memory, accessing those values,

177
00:13:17,160 --> 00:13:24,960
and then even assigning or updating to new different values, because at its core, that's really all

178
00:13:24,960 --> 00:13:28,060
programming is working with values.

179
00:13:28,560 --> 00:13:36,450
Now, before we jump into lesson number two, I do want to stress the fact that these words like document

180
00:13:36,450 --> 00:13:44,200
and body and style and background color, these words are not part of the JavaScript language itself.

181
00:13:44,580 --> 00:13:53,460
So just like earlier, when you and I chose words like my favorite number and my name and unicorn and

182
00:13:53,460 --> 00:14:01,440
pizza, just like we did, that the Web browser environment chose the words document and body style

183
00:14:01,440 --> 00:14:02,520
and background color.

184
00:14:02,970 --> 00:14:08,030
These words have no meaning outside the context of the web browser environment.

185
00:14:08,550 --> 00:14:14,790
So just like you might have a word or phrase in your family that doesn't have meaning outside the context

186
00:14:14,790 --> 00:14:21,870
of your home, because remember, the Web browser is just one of many different JavaScript environments.

187
00:14:22,170 --> 00:14:28,710
Later on in the course we will learn about the node environment, which can be used as a server and

188
00:14:28,710 --> 00:14:35,180
also the Mongo DB environment, which is used for storing and retrieving data in a database.

189
00:14:35,700 --> 00:14:41,880
So long story short, at this point in the course, I do not want you to worry about trying to memorize

190
00:14:41,880 --> 00:14:43,320
these words that you see here.

191
00:14:43,890 --> 00:14:48,230
This is just environmental jargon that the Web browser uses.

192
00:14:48,660 --> 00:14:52,920
We can start to remember some of these key property names later on in the course.

193
00:14:53,250 --> 00:15:03,480
But for now, I want you to focus on the equal sign and the quotes and the periods and the plus symbols

194
00:15:03,480 --> 00:15:04,700
that we used earlier.

195
00:15:05,220 --> 00:15:10,850
Right, because that is the skeleton in the core of the JavaScript language itself.

196
00:15:11,280 --> 00:15:15,370
It's the aspect that never changes regardless of environment.

197
00:15:15,870 --> 00:15:20,130
Anyways, congratulations on writing your first bit of JavaScript in this lesson.

198
00:15:20,280 --> 00:15:24,500
You got your hands dirty with code, which is already more than most people can say.

199
00:15:24,930 --> 00:15:27,750
I've got a quick vocabulary note at the end here.

200
00:15:28,200 --> 00:15:34,830
Throughout this lesson, you heard me refer to things like my favorite number and my name as labels

201
00:15:35,280 --> 00:15:37,290
label is not the technical term.

202
00:15:37,770 --> 00:15:42,420
I just made that up to try and make the lesson more understandable or less intimidating.

203
00:15:42,900 --> 00:15:50,190
The technical term is that this is a variable in the example that I'm highlighting right now, we stored

204
00:15:50,190 --> 00:15:55,860
the value of seven within a variable named my favorite number.

205
00:15:56,340 --> 00:16:02,280
So the technical term instead of label, we would refer to this as the identifier for the variable.

206
00:16:03,180 --> 00:16:03,510
Cool.

207
00:16:03,510 --> 00:16:08,280
So I like to strike a balance between using easy to understand language, but also letting you know

208
00:16:08,280 --> 00:16:10,050
the technical names for everything.

209
00:16:10,500 --> 00:16:10,890
All right.

210
00:16:10,900 --> 00:16:17,190
Now, looking ahead to our very next lesson, we are going to learn about one of the most important

211
00:16:17,190 --> 00:16:21,680
ideas in all of programming, and that is functions.

212
00:16:22,050 --> 00:16:23,930
So what in the world is a function?

213
00:16:24,480 --> 00:16:25,980
Well, let's answer that question.

214
00:16:26,160 --> 00:16:30,270
Let's keep our momentum rolling and I will see you in the next lesson.
