WEBVTT
1
00:00:01.700 --> 00:00:02.690
Hello, everyone.

2
00:00:03.020 --> 00:00:10.670
In this lesson, we're going to make sure that you have access to a text editing program on your computer

3
00:00:11.090 --> 00:00:14.610
before we worry about downloading and installing a text editor.

4
00:00:14.870 --> 00:00:18.230
Let's first go over why we want one in the first place.

5
00:00:18.680 --> 00:00:25.400
So in our previous lesson, we installed Node J.S. and then we learned how to access it from our command

6
00:00:25.400 --> 00:00:25.850
line.

7
00:00:26.120 --> 00:00:31.370
So if I typed Node, I can then start speaking JavaScript two plus two.

8
00:00:31.790 --> 00:00:32.790
You get the idea.

9
00:00:33.080 --> 00:00:39.380
However, if we want to do something complex and interesting, we are going to need to write multiple

10
00:00:39.380 --> 00:00:40.400
lines of code.

11
00:00:40.880 --> 00:00:46.910
So almost as if you were writing a play or a movie or TV show, you would need to write a fairly long

12
00:00:46.910 --> 00:00:47.610
script.

13
00:00:48.050 --> 00:00:49.300
Well, it's the same thing here.

14
00:00:49.490 --> 00:00:57.710
We want to be able to write a long script or a bunch of code and then feed that all into note at once.

15
00:00:58.310 --> 00:01:04.460
Now, the way that this is typically done is by using a text editing program to create a JavaScript

16
00:01:04.460 --> 00:01:09.740
file on our computers hard drive, and then we can feed that file into node.

17
00:01:10.310 --> 00:01:16.160
Now, there are many, many different text ed programs in the world, and many of them are free to use.

18
00:01:16.610 --> 00:01:23.990
The program that I personally use and also that I strongly recommend is named Visual Studio Code.

19
00:01:24.500 --> 00:01:27.410
It's also often referred to as voice code.

20
00:01:27.920 --> 00:01:35.480
So you can Google for Visual Studio Code or as of this recording, the official website is code dot

21
00:01:35.630 --> 00:01:38.080
visual studio, dot com.

22
00:01:38.630 --> 00:01:45.550
It's completely free and completely safe to use and it's available for Windows, Mac and Linux.

23
00:01:46.010 --> 00:01:49.970
It's the text editing program that I'm going to be using throughout the course.

24
00:01:50.150 --> 00:01:56.840
So if you want to follow along with me step by step, I strongly recommend you also download and install

25
00:01:57.200 --> 00:02:00.140
Visual Studio Code a little bit later on.

26
00:02:00.140 --> 00:02:05.410
In this very lesson, I will explain why I think V code is such a great option.

27
00:02:05.660 --> 00:02:11.490
However, I don't want to be dogmatic, so I don't want to force my preferences or opinions on you.

28
00:02:11.720 --> 00:02:14.360
There are many other text editors that you can use.

29
00:02:14.630 --> 00:02:19.010
For example, Adam is a very popular text editor that's also free.

30
00:02:19.520 --> 00:02:23.860
Also Sublime Text is another very popular text editor.

31
00:02:24.350 --> 00:02:29.570
Technically, it's not free, it's available for purchase, but you can use it for free to evaluate

32
00:02:29.570 --> 00:02:32.700
it and decide if you'd like to buy it indefinitely.

33
00:02:33.050 --> 00:02:37.340
The point that I'm trying to make is that there are many, many different text editing programs out

34
00:02:37.340 --> 00:02:37.640
there.

35
00:02:37.850 --> 00:02:42.140
So I don't want you to feel bad if you really don't want to use visual studio code.

36
00:02:42.470 --> 00:02:48.170
However, having said that, my opinion is that you should give it a try because I think it's amazing

37
00:02:48.440 --> 00:02:49.020
anyways.

38
00:02:49.070 --> 00:02:54.860
Having said all of that, right now, I recommend you pause this video lesson while you download and

39
00:02:54.860 --> 00:02:56.720
install voice code.

40
00:02:57.320 --> 00:02:57.890
All right.

41
00:02:57.890 --> 00:03:03.320
At this point, I will assume that you've had a chance to install voice code or you already have an

42
00:03:03.320 --> 00:03:06.110
existing text editor and you're fairly comfortable with it.

43
00:03:06.470 --> 00:03:14.090
So now let's give ourselves a goal of creating our first JavaScript file and then feeding it into node.

44
00:03:14.480 --> 00:03:20.000
Now, instead of just creating a JavaScript file directly on our desktop or in some random folder,

45
00:03:20.360 --> 00:03:26.870
why don't we create a new folder on our computer specifically for this JavaScript file so it doesn't

46
00:03:26.870 --> 00:03:28.700
matter where we create this folder.

47
00:03:28.910 --> 00:03:35.930
But for example, on my desktop, maybe I will create a brand new folder and the name of the folder

48
00:03:35.930 --> 00:03:41.420
doesn't matter, but I will name it first node experiment.

49
00:03:42.740 --> 00:03:47.200
You could name this folder testing or pizza or unicorn.

50
00:03:48.110 --> 00:03:55.310
The idea is that we just created a new empty folder and now I want to open this folder with our text

51
00:03:55.310 --> 00:03:56.190
editor program.

52
00:03:56.690 --> 00:03:59.690
So right now, go ahead and open up LVS code.

53
00:04:00.290 --> 00:04:06.740
And there are several different ways to open a folder in this text ed program so you can use the top

54
00:04:06.740 --> 00:04:16.280
left file menu and just choose a file and then either open or open folder or an even easier way is just

55
00:04:16.280 --> 00:04:22.640
in Windows or Mac to find that new folder that you created and you can just drag and drop the new folder

56
00:04:23.000 --> 00:04:24.290
onto LVS code.

57
00:04:24.440 --> 00:04:29.840
So if you're on Windows, you can just drag this folder onto the VTS code program window.

58
00:04:30.140 --> 00:04:36.000
Or if you're on Mac, you can drag your new folder onto the VTS code icon in your dock.

59
00:04:36.810 --> 00:04:43.030
OK, now once you've opened that folder with VTS code, you should see a few options right about here.

60
00:04:43.610 --> 00:04:47.900
First of all, we can go ahead and close the welcome screen or any sort of welcome tabs.

61
00:04:49.010 --> 00:04:51.940
OK, and then this left hand middle menu that we see here.

62
00:04:52.460 --> 00:04:57.950
Here we see the name of the folder that I just opened up and if I hover over that little tab, I have

63
00:04:57.950 --> 00:04:59.170
a few different options.

64
00:04:59.600 --> 00:05:01.190
So this first icon will create.

65
00:05:01.370 --> 00:05:06.830
A new file within that folder, that's what I'm interested in doing, I want to create a new file in

66
00:05:06.830 --> 00:05:13.220
that brand new folder so you can either click this icon here or you can click file new files up to you,

67
00:05:13.670 --> 00:05:14.540
or you could even just.

68
00:05:14.540 --> 00:05:14.870
Right.

69
00:05:14.870 --> 00:05:18.830
Click anywhere in this empty space right about here and choose new file.

70
00:05:19.190 --> 00:05:23.930
At the end of the day, all we really want to do is create a new JavaScript file and the name doesn't

71
00:05:23.930 --> 00:05:24.430
matter.

72
00:05:24.800 --> 00:05:34.250
I will name it test J.S. The DOT JS tells our computer that this is a JavaScript file, so the first

73
00:05:34.250 --> 00:05:35.300
part of the name doesn't matter.

74
00:05:35.300 --> 00:05:39.340
You could name it Pizza J.S. or Unicorn Dot Jazz.

75
00:05:40.010 --> 00:05:45.140
OK, after we create that file, LVS code opens it up and within this main part of the screen we can

76
00:05:45.140 --> 00:05:45.980
start typing.

77
00:05:46.350 --> 00:05:52.700
So just like before in the code pen examples, we are free to write multiple lines of JavaScript within

78
00:05:52.700 --> 00:05:53.560
this new file.

79
00:05:53.990 --> 00:05:56.790
So why don't you type this out and follow along with me.

80
00:05:57.110 --> 00:05:58.550
Let's create a variable.

81
00:05:58.550 --> 00:06:04.670
So let's say let Strawbery count equal 20.

82
00:06:05.270 --> 00:06:12.620
OK, then below this, let's write an if statement and say if Strawbery Count is greater than 10, logout

83
00:06:12.620 --> 00:06:18.770
a message to the console that says you have enough strawberries otherwise else log out a message that

84
00:06:18.770 --> 00:06:20.960
says you do not have enough strawberries.

85
00:06:21.590 --> 00:06:31.100
So say if parentheses curly brackets within the parentheses for our condition we can say if straw berry

86
00:06:31.100 --> 00:06:40.490
count is greater than ten, then within the curly brackets we can drop down and say console log, you

87
00:06:40.490 --> 00:06:43.520
have enough strawberries.

88
00:06:44.090 --> 00:06:49.970
OK, and then if this is false, if Strawberry Count is not greater than 10 down here after the closing

89
00:06:49.970 --> 00:06:55.190
curly bracket, we can just say else curly brackets, log out to the console.

90
00:06:56.000 --> 00:06:59.060
You do not have enough berries.

91
00:07:00.240 --> 00:07:03.320
OK, then push control s or command us to save this file.

92
00:07:03.320 --> 00:07:05.240
Or you can just use file save.

93
00:07:06.690 --> 00:07:12.660
And now the moment we've all been waiting for, let's feed this file into Noad, right, so instead

94
00:07:12.660 --> 00:07:18.990
of having the Web browser execute this JavaScript code, we want the node environment to execute our

95
00:07:18.990 --> 00:07:19.440
code.

96
00:07:20.040 --> 00:07:23.640
Now, in our previous lesson, we learned how to run node, right.

97
00:07:23.650 --> 00:07:25.450
You need to open up your command line.

98
00:07:25.720 --> 00:07:30.870
However, this is one of the biggest reasons why I'm a huge fan of LVS code.

99
00:07:31.080 --> 00:07:37.350
While you're in VST code, I want you to hold down the control key on your keyboard and simultaneously

100
00:07:37.350 --> 00:07:43.940
press the build the key, which is the key to the left of the one key or it's also the back tick key,

101
00:07:44.640 --> 00:07:45.960
the key right above tab.

102
00:07:46.090 --> 00:07:54.090
So hold control and the still the key and that opens up a command line directly within our voice code

103
00:07:54.090 --> 00:07:54.670
program.

104
00:07:55.050 --> 00:07:59.640
This is incredibly convenient and it makes our lives a lot easier.

105
00:08:00.180 --> 00:08:06.750
You can also access the command line and VSE code by looking in the top view menu and then clicking

106
00:08:06.750 --> 00:08:07.830
on terminal.

107
00:08:08.550 --> 00:08:15.180
Now, if I was not using voice code, I would need to open my command line like we did in our previous

108
00:08:15.180 --> 00:08:15.660
lesson.

109
00:08:15.990 --> 00:08:20.130
Write the command prompt for windows or the terminal for Mac.

110
00:08:20.700 --> 00:08:27.060
But in voice code you don't need to jump back and forth between two separate programs between your text

111
00:08:27.060 --> 00:08:29.340
editor and your command line and voice code.

112
00:08:29.340 --> 00:08:32.200
Your command line is just conveniently right here.

113
00:08:32.700 --> 00:08:39.150
Another thing that's cool is voice code automatically points your command line towards the current folder

114
00:08:39.150 --> 00:08:40.070
that you're working in.

115
00:08:40.500 --> 00:08:46.800
So usually in the command line you would need to say code space and then type out the directory of where

116
00:08:46.800 --> 00:08:48.990
you want to point towards with VTS code.

117
00:08:48.990 --> 00:08:50.060
We don't need to do that.

118
00:08:50.280 --> 00:08:53.790
Our command line is already pointing towards our new working folder.

119
00:08:54.190 --> 00:08:55.100
So check this out.

120
00:08:55.320 --> 00:09:03.330
All we need to do to feed our JavaScript file into node is down in the command line, right node and

121
00:09:03.330 --> 00:09:05.970
then a space and then the name of our file.

122
00:09:06.390 --> 00:09:08.130
So in my case, that's test.

123
00:09:08.420 --> 00:09:15.870
James, we actually do not need to include the dot js so you can just type the actual name of your file

124
00:09:16.080 --> 00:09:17.280
and then push enter.

125
00:09:18.320 --> 00:09:23.870
Awesome, we see you have enough strawberries, and if we come up to our JavaScript code and change

126
00:09:23.870 --> 00:09:29.600
the strawberry count to something really small, like three, and I save the file and then I come down

127
00:09:29.600 --> 00:09:31.430
here and run that code again.

128
00:09:31.430 --> 00:09:33.410
So I say Noad test.

129
00:09:35.050 --> 00:09:41.890
You do not have enough berries, and again, if you named your file something different than test dogs,

130
00:09:42.160 --> 00:09:44.470
you would not say no test.

131
00:09:44.740 --> 00:09:50.640
For example, if you named your file pizza, James, then in the command line, you would write Noad

132
00:09:50.650 --> 00:09:52.000
Space Pizza.

133
00:09:52.360 --> 00:09:56.650
Really, all we are doing is passing our file into Noad.

134
00:09:57.070 --> 00:09:59.890
We're just saying, hey, Noad, execute our file.

135
00:10:00.310 --> 00:10:00.790
Cool.

136
00:10:00.810 --> 00:10:05.560
Now, there's nothing very interesting or impressive about a simple if statement, right?

137
00:10:05.860 --> 00:10:10.770
However, we now have everything we need to really start rolling.

138
00:10:11.170 --> 00:10:17.530
We've installed node onto our computers, we have a text editor program and now we know how to use the

139
00:10:17.530 --> 00:10:22.600
command line to feed a JavaScript file into the node environment.

140
00:10:23.170 --> 00:10:24.390
So I've got some good news.

141
00:10:24.610 --> 00:10:32.730
This means that in our very next lesson, we are ready to use node to build our own small, simple server.

142
00:10:33.130 --> 00:10:38.380
This is where the big picture of what we are trying to accomplish is going to come into focus.

143
00:10:38.800 --> 00:10:43.060
I am so excited to write our first bit of real world node code with you.

144
00:10:43.340 --> 00:10:47.770
So let's keep our momentum rolling and I will see you in the next lesson.
