WEBVTT
1
00:00:00.330 --> 00:00:08.930
So when I click on this chat icon now in our command line, we should see a new user connected perfect.

2
00:00:09.180 --> 00:00:14.150
We have now established an ongoing connection between the browser and server.

3
00:00:14.700 --> 00:00:17.790
At this point, let's give ourselves a new goal to work towards.

4
00:00:18.330 --> 00:00:24.480
Let's set things up so that when you type a message into the chat field and then press enter to submit

5
00:00:24.480 --> 00:00:29.340
the message, we send that to the server through our socket connection.

6
00:00:29.760 --> 00:00:35.530
And then we told the server to broadcast that out to any and all chat users.

7
00:00:36.180 --> 00:00:42.450
So, for example, I'm logged in with my brat account in this window, but in this browser window I'm

8
00:00:42.450 --> 00:00:44.840
logged in with my Bachs a lot account.

9
00:00:45.570 --> 00:00:52.320
So ideally, if barks a lot, has the chat open when the Brat account sends a message to the server,

10
00:00:52.530 --> 00:00:56.820
the server should then echo out that message to all connected users.

11
00:00:56.820 --> 00:00:58.680
So Bachs a lot should receive it.

12
00:00:59.580 --> 00:01:03.050
This all sounds a lot more complicated than it actually is.

13
00:01:03.390 --> 00:01:05.660
So for now, let's take this one step at a time.

14
00:01:05.970 --> 00:01:12.630
Let's go right the front end or user experience JavaScript to intercept the event of a user typing into

15
00:01:12.630 --> 00:01:14.810
this field and then pressing enter.

16
00:01:15.480 --> 00:01:23.340
So in your text editor back in our chat JS file, let's scroll up to the very top and within our constructor.

17
00:01:23.910 --> 00:01:24.270
Oops.

18
00:01:24.270 --> 00:01:30.060
Actually up at the very top you can see VSG code tried to import something when I tried to type Io and

19
00:01:30.060 --> 00:01:31.530
run the function named IO.

20
00:01:31.770 --> 00:01:33.290
I don't actually want this up here.

21
00:01:33.300 --> 00:01:36.240
So if your voice code did this as well, you can delete this.

22
00:01:37.600 --> 00:01:45.060
OK, but up at the top within our constructor, let's create a few properties that select this text

23
00:01:45.060 --> 00:01:47.440
field and the form that it lives within.

24
00:01:48.180 --> 00:01:57.510
So right below when we call inject HTML, let's say this dot chat field equals and then let's just say

25
00:01:57.510 --> 00:02:03.630
document dot query selector quotes and it has an ID.

26
00:02:03.630 --> 00:02:06.780
So hash tag of chat field.

27
00:02:07.420 --> 00:02:08.550
OK, right below this.

28
00:02:08.550 --> 00:02:18.660
Let's also say this dot chat form equals document dot query selector and it has an ID, so hash tag

29
00:02:18.900 --> 00:02:20.910
of chat form.

30
00:02:21.510 --> 00:02:27.600
OK, now let's just set up an event listener for chat form that when it is submitted we do something

31
00:02:27.600 --> 00:02:28.190
custom.

32
00:02:29.220 --> 00:02:32.340
So within our events area, let's add a new event.

33
00:02:32.970 --> 00:02:40.490
Let's say this dot chap form dot add event listener.

34
00:02:41.670 --> 00:02:47.700
We give this two arguments, a comma B the first argument is the event that we're listening for instead

35
00:02:47.700 --> 00:02:48.430
of click.

36
00:02:48.450 --> 00:02:51.060
This would be quotes submit.

37
00:02:51.660 --> 00:02:51.900
Right.

38
00:02:51.900 --> 00:02:58.020
We're listening for when the form is submitted for the second argument, let's get rid of the B placeholder

39
00:02:58.020 --> 00:03:00.330
and instead include an arrow function.

40
00:03:01.020 --> 00:03:03.540
So parentheses and then the arrow symbol.

41
00:03:03.750 --> 00:03:10.200
And in this case I actually do want to include curly brackets and dropdown between the curly brackets.

42
00:03:11.130 --> 00:03:13.290
Now let's do this within our parentheses.

43
00:03:13.290 --> 00:03:21.180
Let's include a parameter of E short for event and then within the body of this function, let's say

44
00:03:21.360 --> 00:03:24.260
e dot prevent default.

45
00:03:25.560 --> 00:03:31.350
So when this form is submitted, we do not want to perform a hard reload write, we want to stop that

46
00:03:31.350 --> 00:03:32.490
default behavior.

47
00:03:32.920 --> 00:03:34.110
OK then right after that.

48
00:03:34.110 --> 00:03:38.930
But still within the body of this function, let's call a function that doesn't exist yet.

49
00:03:39.000 --> 00:03:40.710
We can create it in just a moment.

50
00:03:40.740 --> 00:03:47.470
So let's say this dot send message to server.

51
00:03:48.420 --> 00:03:51.840
OK, now let's just go create a method with this matching name.

52
00:03:52.470 --> 00:04:01.890
So down within our methods area, let's create a new method, give it a name of send message to server

53
00:04:02.280 --> 00:04:04.320
parentheses, curly brackets.

54
00:04:05.280 --> 00:04:10.790
And now remember, we stored our socket connection within the property of this dot socket.

55
00:04:11.580 --> 00:04:16.530
Now to leverage it, we can just look inside it and call a method named omit.

56
00:04:17.550 --> 00:04:21.360
This will emit an event with a bit of data to the server.

57
00:04:21.780 --> 00:04:23.100
We give it to arguments.

58
00:04:23.100 --> 00:04:30.030
So A comma B the first argument is a custom name that we get to make up that describes this type of

59
00:04:30.030 --> 00:04:30.540
event.

60
00:04:31.020 --> 00:04:39.150
So quotes you can make up any name you want, but I will name this event chat message from browser.

61
00:04:40.320 --> 00:04:47.010
OK, then the second argument, instead of this placeholder B, we just give it an object with any data

62
00:04:47.010 --> 00:04:48.810
that we want to send to the server.

63
00:04:49.440 --> 00:04:54.390
So curly brackets to create an object, you can make up any property name you want, but I'm going to

64
00:04:54.390 --> 00:04:57.690
go with a property of message colon.

65
00:04:57.960 --> 00:04:59.880
And then this is where you could say, Hey.

66
00:05:00.030 --> 00:05:06.180
Hello, but what we'd want to do is actually just pull the value of whatever the user has typed into

67
00:05:06.180 --> 00:05:07.230
this text field.

68
00:05:08.430 --> 00:05:16.620
So to do that instead of quotes, hey, hello, we just have message colon and then say this dot chat

69
00:05:16.620 --> 00:05:21.450
field dot value, OK, after this line.

70
00:05:21.450 --> 00:05:25.270
But still within this method, let's clear out that Chatfield.

71
00:05:25.470 --> 00:05:25.620
Right.

72
00:05:25.680 --> 00:05:27.360
So after it's sent to the server.

73
00:05:27.780 --> 00:05:33.600
So if we type a bit of text, as soon as we submit this, then that field should be cleared and emptied

74
00:05:33.600 --> 00:05:33.930
out.

75
00:05:34.090 --> 00:05:36.030
So you're ready to type a new message.

76
00:05:38.070 --> 00:05:45.120
So to do that, we can just say this dot chat field dot value should now equal just an empty pair of

77
00:05:45.120 --> 00:05:45.750
quotes.

78
00:05:46.320 --> 00:05:51.630
And then let's also be sure to focus that field again, just so it's truly ready for the user to just

79
00:05:51.870 --> 00:05:53.690
immediately begin typing again.

80
00:05:53.940 --> 00:05:58.830
So this dot chat field and then call focus cool.

81
00:05:59.010 --> 00:06:06.690
At this point, let's save this file and now let's go into our app JS file and tell our server what

82
00:06:06.690 --> 00:06:10.320
it should do when it detects an event of this type.

83
00:06:10.530 --> 00:06:10.780
Right.

84
00:06:10.830 --> 00:06:13.320
An event of chat message from browser.

85
00:06:14.070 --> 00:06:18.750
So at this point, jump back into app dot J.S. and towards the bottom.

86
00:06:18.750 --> 00:06:25.110
Look for this section where we said Io dot on connection within the body of this function.

87
00:06:25.110 --> 00:06:28.380
We can go ahead and get rid of this console dot logline.

88
00:06:28.380 --> 00:06:29.700
That was just for a test.

89
00:06:30.330 --> 00:06:36.820
OK, and within the parentheses for this function, let's include a parameter, let's call it socket.

90
00:06:37.530 --> 00:06:40.810
So this represents the connection between server and browser.

91
00:06:41.040 --> 00:06:50.100
So now within the body of this function, let's say socket dot on and we give this to arguments.

92
00:06:50.100 --> 00:06:54.210
So A comma, B, the first argument is the event type.

93
00:06:54.780 --> 00:07:03.120
So on the event of in this case it would be quotes and then chat message from browser.

94
00:07:03.840 --> 00:07:06.360
This is what makes Socket Io so powerful.

95
00:07:06.660 --> 00:07:10.480
We are free to create as many different types of events as we want.

96
00:07:10.890 --> 00:07:16.530
So if we were building a game in the browser, you could imagine there'd be events such as joint lobby,

97
00:07:16.530 --> 00:07:19.290
exit, lobby, run, jump, walk.

98
00:07:19.950 --> 00:07:25.110
OK, now when the server detects an event of this type, then for the second argument instead of this

99
00:07:25.110 --> 00:07:28.800
B, we just include a function that we'd want to run in response.

100
00:07:29.520 --> 00:07:32.670
So function parentheses, curly brackets.

101
00:07:32.970 --> 00:07:36.350
Now remember, the browser sent along an object of data.

102
00:07:36.660 --> 00:07:42.330
So within this function, within the parentheses, we can include a parameter to receive that incoming

103
00:07:42.330 --> 00:07:42.740
data.

104
00:07:43.440 --> 00:07:46.330
The parameter name could be anything but let's call it data.

105
00:07:47.010 --> 00:07:53.550
OK, now within the body of this function, just as a test, why don't we log to the console, the message

106
00:07:53.550 --> 00:07:55.530
that the user is sending to the browser.

107
00:07:56.040 --> 00:08:00.600
So console dot log data, dot message.

108
00:08:00.870 --> 00:08:05.210
Remember, that's the name of the property that we chose in our front end JavaScript.

109
00:08:06.240 --> 00:08:12.960
Let's go ahead and save this and then be sure to open up your command line so it's visible and back

110
00:08:12.960 --> 00:08:17.360
in the browser, if I refresh to have the latest JavaScript.

111
00:08:17.370 --> 00:08:27.120
Now, if I open up the chat and say Hey, hello there and push enter back in my command line, I see

112
00:08:27.120 --> 00:08:28.100
that message.

113
00:08:28.770 --> 00:08:31.050
So now let's take things one step further.

114
00:08:31.290 --> 00:08:38.010
Instead of just logging that message to the console as a test, let's send it out or broadcast it out

115
00:08:38.190 --> 00:08:40.290
to all connected users.

116
00:08:40.980 --> 00:08:50.340
So let's get rid of this console log line and instead, let's say Io dot image if you want it to emit

117
00:08:50.340 --> 00:08:56.880
an event only to the browser that just sent you this message, we could say socket dot emit.

118
00:08:57.120 --> 00:09:05.160
But in this case we're saying Io emit because we want to emit an event to everyone, all connected users.

119
00:09:05.760 --> 00:09:08.580
So within these imit parentheses we give it to arguments.

120
00:09:08.580 --> 00:09:10.800
The first is the name of the event type.

121
00:09:10.890 --> 00:09:15.750
Let's go with chat message from server.

122
00:09:16.680 --> 00:09:21.780
OK, and then for the second argument, we give it an object of any data that we want to send.

123
00:09:22.180 --> 00:09:29.280
So let's just include a property of message Colen and just give it whatever value the browser just sent

124
00:09:29.280 --> 00:09:29.970
to the server.

125
00:09:30.330 --> 00:09:31.940
So data message.

126
00:09:32.730 --> 00:09:37.980
So essentially we're just taking the message that one browser sent to the server and then the server

127
00:09:37.980 --> 00:09:41.970
is sending that out to all connected browsers.

128
00:09:42.540 --> 00:09:44.190
Let's go ahead and save this.

129
00:09:44.490 --> 00:09:50.220
And now we just need to go into our front end JavaScript and tell it what to do when it receives or

130
00:09:50.220 --> 00:09:56.560
detects an event of chat message from server back in Chappaqua.

131
00:09:56.610 --> 00:09:57.210
Yes.

132
00:09:57.660 --> 00:09:59.850
I want you to scroll down and find our method, the.

133
00:09:59.950 --> 00:10:07.330
Named open connection within this method, right below this line, let's add a new line and let's say

134
00:10:07.330 --> 00:10:19.510
this dot socket dot on and on the event of chat message from server, then the next argument.

135
00:10:19.510 --> 00:10:22.690
So comma, we would want to run a function in response.

136
00:10:22.690 --> 00:10:27.580
So function parentheses, curly brackets within these parentheses.

137
00:10:27.580 --> 00:10:31.690
Let's include a parameter to receive the incoming data, let's say data.

138
00:10:32.740 --> 00:10:39.940
And then in the body of this function, just as a quick annoying test, let's have an alert pop up so

139
00:10:39.940 --> 00:10:43.150
alert and let's just alert data message.

140
00:10:44.050 --> 00:10:46.980
Let's go ahead and save this and test everything out.

141
00:10:47.440 --> 00:10:50.770
So be sure to refresh all of your browser windows.

142
00:10:51.400 --> 00:10:53.590
So I have one window where I'm logged in as Brad.

143
00:10:53.590 --> 00:10:59.890
I have this window where I'm logged in with barks a lot and then also be sure to have the chat box opened

144
00:11:00.100 --> 00:11:03.230
in all of your browsers, OK?

145
00:11:03.550 --> 00:11:11.020
And then in the window where I'm logged in with Brad, if I say is anyone there and hit enter, not

146
00:11:11.020 --> 00:11:15.460
only do I see that alert message in this window, but in the window where I'm logged in with barks a

147
00:11:15.460 --> 00:11:18.520
lot, I also see that alert message.

148
00:11:18.880 --> 00:11:26.290
This means that we successfully send a message to the server from this browser and then the server broadcasted

149
00:11:26.290 --> 00:11:30.550
that data to any and all other connected browsers.

150
00:11:31.320 --> 00:11:35.230
This may not seem like much, but trust me, this is very powerful.

151
00:11:35.620 --> 00:11:39.550
In our next lesson, we are going to continue building out our chat feature.

152
00:11:40.010 --> 00:11:42.400
Let's keep things rolling and I'll see you then.
