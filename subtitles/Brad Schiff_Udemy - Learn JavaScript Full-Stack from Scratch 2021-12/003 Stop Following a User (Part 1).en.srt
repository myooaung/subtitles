1
00:00:01,820 --> 00:00:02,810
Hello, everyone.

2
00:00:03,080 --> 00:00:09,990
In this lesson, we're going to continue working on our follow feature, let's jump right into the action.

3
00:00:10,400 --> 00:00:13,550
So in our previous lesson, we set up this follow button.

4
00:00:14,240 --> 00:00:19,850
Well, now, in this lesson, if I'm already following this user, I should instead see a button here

5
00:00:19,850 --> 00:00:21,870
that says stop following.

6
00:00:22,310 --> 00:00:28,610
Now, before we rush to create that logic or functionality, let's first realize that there are multiple

7
00:00:28,610 --> 00:00:30,710
pages within a user's profile.

8
00:00:31,400 --> 00:00:36,410
Right now, we're on the default view or the posts view, but we're also going to want to be able to

9
00:00:36,410 --> 00:00:42,860
click on followers or following to go to different pages to see a list of their followers and a list

10
00:00:42,860 --> 00:00:44,050
of who they are following.

11
00:00:44,450 --> 00:00:49,760
What I'm getting at here is on all three of these pages, we would still want to know if you're following

12
00:00:49,760 --> 00:00:51,080
the current user or not.

13
00:00:51,350 --> 00:00:57,590
So what I want to do is create a function or an area that can run for all three of these different routes.

14
00:00:58,100 --> 00:00:59,990
Let me show you how I would do this.

15
00:01:00,320 --> 00:01:05,570
So within our text editor, I want you to open up your router JS file.

16
00:01:06,890 --> 00:01:11,230
OK, here we see a comment profile related roots, right?

17
00:01:11,240 --> 00:01:13,750
Slash profile, slash user name.

18
00:01:14,210 --> 00:01:19,690
The first function checks to see if there's an account with that matching username, if it even exists.

19
00:01:20,510 --> 00:01:24,770
If it does exist, then we're also calling profile posts screen.

20
00:01:25,280 --> 00:01:28,710
Here's what I'm going to do in between these two functions.

21
00:01:28,730 --> 00:01:36,710
So right about here, let's call a function named shared profile data and we can reuse this function

22
00:01:36,890 --> 00:01:38,630
for the other two routes as well.

23
00:01:39,770 --> 00:01:46,550
So for now, for the slash profile slash user name route, right after the if user exists, let's add

24
00:01:46,550 --> 00:01:54,070
another function call user controller DOT shared profile data, comma.

25
00:01:54,830 --> 00:01:56,510
Let's go ahead and save this.

26
00:01:56,660 --> 00:02:01,390
And now we better go create a function with this matching name within our user controller.

27
00:02:01,940 --> 00:02:08,930
So in our controllers folder, let's dig in to user controller James.

28
00:02:10,340 --> 00:02:12,030
We want to create a new function.

29
00:02:12,050 --> 00:02:14,920
It doesn't matter where we could create it right at the top here.

30
00:02:16,250 --> 00:02:24,920
So I would just say exports dot shared profile data should equal a function.

31
00:02:25,490 --> 00:02:32,090
And within the parentheses, let's be sure to include three parameters, not only request and response,

32
00:02:32,090 --> 00:02:38,090
but also next, right after this function does its job, we want to call next.

33
00:02:38,180 --> 00:02:40,850
So the final function for this route can run.

34
00:02:41,330 --> 00:02:46,560
OK, now that we've created this reusable function that can be leveraged for multiple U.

35
00:02:46,580 --> 00:02:50,890
URLs or routes, let's get back to the actual question or task at hand.

36
00:02:51,350 --> 00:02:58,190
So when a user visits a profile screen, we want to know if the current visitor is already following

37
00:02:58,190 --> 00:02:59,350
this account or not.

38
00:02:59,810 --> 00:03:03,220
So let's do this within the body of our new function here.

39
00:03:03,470 --> 00:03:04,760
Let's create a variable.

40
00:03:04,760 --> 00:03:11,030
Let's say let's is following and by default, let's set it to false.

41
00:03:11,690 --> 00:03:14,390
But right below this, let's write an if statement.

42
00:03:14,390 --> 00:03:21,460
So if parentheses curly brackets for the condition, if the current visitor is signed in or logged in.

43
00:03:22,130 --> 00:03:26,480
So if request session user.

44
00:03:27,080 --> 00:03:31,730
Well, if the current visitors logged in, then let's just ask our follow model.

45
00:03:31,910 --> 00:03:37,970
If this current visitor is following the current profile before we try to leverage our follow model

46
00:03:37,970 --> 00:03:44,440
here up at the top, we need to require in or import the follow model to save a bit of typing.

47
00:03:44,450 --> 00:03:52,580
You can just duplicate one of these lines, copy paste, change this to const follow and change this

48
00:03:52,580 --> 00:03:55,850
to require in the follow file.

49
00:03:56,540 --> 00:04:01,390
OK, now within our IF statement, let's do this, let's say uppercase follow.

50
00:04:01,730 --> 00:04:06,800
We haven't created this method in our follow model yet, but you can imagine that in 30 seconds or so

51
00:04:06,800 --> 00:04:11,780
we will, let's say, is visiter following.

52
00:04:12,350 --> 00:04:18,110
In order for this method to do its job, we'd need to pass it two things, either the user name or ID

53
00:04:18,140 --> 00:04:20,090
of the current profile.

54
00:04:20,820 --> 00:04:22,910
So in this case, the bark's a lot account.

55
00:04:23,510 --> 00:04:25,040
Let's go ahead and give it the ID.

56
00:04:25,430 --> 00:04:30,230
So request profile user dot, underscore ID.

57
00:04:30,770 --> 00:04:35,000
This will already exist on our request object from our function named.

58
00:04:35,390 --> 00:04:40,250
Does user exist or I believe the exact name was if user exists.

59
00:04:40,560 --> 00:04:46,370
OK, the other piece of data this method would need to do his job is the current visitor ID.

60
00:04:47,180 --> 00:04:52,240
So let's just include a comma here and say request dot visitor ID.

61
00:04:52,730 --> 00:04:57,710
OK, now we have not created this method in our model yet, but since it's going to have to visit the

62
00:04:57,710 --> 00:05:00,500
database, it's going to take a while to complete.

63
00:05:00,800 --> 00:05:01,250
So at.

64
00:05:01,350 --> 00:05:06,900
Start started this line, let's be sure to await also, you can imagine that will set this function

65
00:05:06,900 --> 00:05:11,120
up to eventually return either a value of true or false right.

66
00:05:11,310 --> 00:05:15,420
Is the current visitor already following this profile account or not?

67
00:05:15,650 --> 00:05:19,800
Let's store the true or false value that this is going to return in.

68
00:05:19,800 --> 00:05:21,810
This is following variable.

69
00:05:22,750 --> 00:05:29,130
So at the start of this line, we can just say is following and update its value.

70
00:05:29,620 --> 00:05:35,130
OK, finally after this if statement, we would now have a correct, true or false value.

71
00:05:35,440 --> 00:05:38,050
So let's just add that on to the request object.

72
00:05:38,050 --> 00:05:46,990
Let's say request dot is following equals our local is following, variable is following.

73
00:05:47,410 --> 00:05:49,530
At this point, this function has done its job.

74
00:05:49,540 --> 00:05:51,740
So then we can call next.

75
00:05:52,570 --> 00:05:54,580
OK, let's go ahead and save this.

76
00:05:54,760 --> 00:06:01,440
And now we better go into our follow model and make sure that it has a function named is Visiter Following.

77
00:06:01,990 --> 00:06:08,920
So within our Models folder, let's jump in to follow Dot J.S. let's scroll down to the very bottom

78
00:06:09,250 --> 00:06:18,280
and right before the closing module, dot exports, let's say uppercase follow dot is visiter following

79
00:06:18,700 --> 00:06:22,810
and this should equal a function within these parentheses.

80
00:06:22,810 --> 00:06:25,030
Let's be sure to include two parameters.

81
00:06:26,320 --> 00:06:31,660
So followed idee colon visitor Idy.

82
00:06:32,440 --> 00:06:35,950
Now within this function, we know that we're going to need to talk to a database.

83
00:06:36,160 --> 00:06:39,460
So let's just go ahead and make this function asynchronous right away.

84
00:06:39,460 --> 00:06:42,970
So async cool within the body of this function.

85
00:06:42,970 --> 00:06:43,720
Let's do this.

86
00:06:43,900 --> 00:06:45,370
Let's create a variable.

87
00:06:45,400 --> 00:06:51,040
We could name it anything, but let's call it follow doc and let's set it to equal.

88
00:06:51,220 --> 00:06:55,240
And then I just want to look within our follows collection in our database.

89
00:06:55,540 --> 00:07:02,800
So follows collection and then I want to see if I can find so dot find one.

90
00:07:03,160 --> 00:07:09,640
I want to see if I can find an existing document where the followed ID matches the current profile I'm

91
00:07:09,640 --> 00:07:14,230
viewing and the author ID matches the current account I'm logged in with.

92
00:07:14,680 --> 00:07:18,190
So let's do this within the parentheses for find one.

93
00:07:18,190 --> 00:07:22,780
We would include an object so curly brackets and describe what we're looking for.

94
00:07:23,290 --> 00:07:29,920
So let's say we want the followed ID field to have a value of this parameter.

95
00:07:29,920 --> 00:07:33,610
So followed I d comma.

96
00:07:33,790 --> 00:07:42,310
We're also looking for the author ID property Colon to match the current ID of the logged in or visitor

97
00:07:42,310 --> 00:07:42,790
user.

98
00:07:43,090 --> 00:07:49,360
Now we don't just want to pass that string of characters, we want it to be a Mongo DB object ID object

99
00:07:49,600 --> 00:07:57,430
so we can say create a new instance of object ID and then pass that visitor ID.

100
00:07:58,210 --> 00:07:58,570
Cool.

101
00:07:58,900 --> 00:08:01,870
Now altogether this is going to return a promise.

102
00:08:02,290 --> 00:08:05,560
So at the start of this, let's be sure to include a wait.

103
00:08:06,250 --> 00:08:10,330
We want to wait for that database action to finish now below this line.

104
00:08:10,960 --> 00:08:12,880
Let's just set up an if else.

105
00:08:12,880 --> 00:08:17,470
So if parentheses curly brackets also add an else block.

106
00:08:18,130 --> 00:08:26,560
Now we can just say if follow doc, if this is able to find a document matching our conditions, well

107
00:08:26,560 --> 00:08:30,490
then let's just return a value of true else.

108
00:08:30,490 --> 00:08:33,100
Let's just return a value of false.

109
00:08:33,520 --> 00:08:39,730
Let's save this and then jump back into our user controller file to refresh our memory of what's going

110
00:08:39,730 --> 00:08:40,020
on.

111
00:08:40,360 --> 00:08:47,530
So this function of shared profile data is going to run for a profile route like when I'm visiting Bachs

112
00:08:47,530 --> 00:08:53,650
allots profile by default or setting a is following property of false.

113
00:08:54,010 --> 00:09:00,490
But if the current visitor is logged in, then we can check to see is this visitor following the current

114
00:09:00,490 --> 00:09:01,210
profile.

115
00:09:01,540 --> 00:09:03,880
So that's either going to be true or false.

116
00:09:04,780 --> 00:09:11,470
We're storing that value on the request object so that we can use it within our next function for this

117
00:09:11,470 --> 00:09:12,010
route.

118
00:09:12,580 --> 00:09:14,440
So let's go find that next function.

119
00:09:14,860 --> 00:09:19,660
I believe it has a name of profile screen or view profile posts screen.

120
00:09:20,080 --> 00:09:20,420
Yep.

121
00:09:20,440 --> 00:09:26,230
Towards the bottom of our user controller here we see exports dot profile posts screen.

122
00:09:26,800 --> 00:09:32,860
So when we are rendering the profile template, let's just pass in a new bit of data.

123
00:09:33,220 --> 00:09:39,940
So maybe right after this property we could add a comma and then say maybe a property named is following

124
00:09:40,210 --> 00:09:42,640
and give it a value of request.

125
00:09:42,650 --> 00:09:44,710
DOT is following.

126
00:09:45,340 --> 00:09:45,700
Cool.

127
00:09:45,700 --> 00:09:47,350
Let's go ahead and save this.

128
00:09:47,560 --> 00:09:50,470
And now let's jump into that profile template.

129
00:09:50,770 --> 00:09:51,040
Right.

130
00:09:51,040 --> 00:09:54,310
The edges or HTML that controls this screen.

131
00:09:54,940 --> 00:10:01,650
We can use that true or false value to show either the follow button or the stop following button.

132
00:10:02,170 --> 00:10:09,010
So back in our text editor within the root of our project, Look for your views folder within views,

133
00:10:09,010 --> 00:10:10,720
look for profile.

134
00:10:10,720 --> 00:10:18,160
Dot Ejaz towards the top around line number eight, we see an opening form tag.

135
00:10:18,460 --> 00:10:21,940
So that is the form that contains the start following button.

136
00:10:22,230 --> 00:10:28,290
Let's do this let's go ahead and cut the entire form element into our clipboard, so it should just

137
00:10:28,290 --> 00:10:30,830
be four lines of code for the entire form.

138
00:10:31,080 --> 00:10:31,980
Let's cut that.

139
00:10:33,030 --> 00:10:35,790
And in its place, let's set up an if statement.

140
00:10:36,120 --> 00:10:37,860
So drop into SJS.

141
00:10:38,070 --> 00:10:42,240
We do not need the equal sign because we're not outputting or escaping anything.

142
00:10:42,480 --> 00:10:44,420
We just want an if statement.

143
00:10:44,940 --> 00:10:47,790
So then I will close the edges inside it.

144
00:10:47,790 --> 00:10:56,070
Let's set up and if parentheses curly brackets for starters, let's say only if user.

145
00:10:56,190 --> 00:10:56,500
Right.

146
00:10:56,520 --> 00:11:02,130
Only if you're logged in should you see either of the follow or stop following buttons.

147
00:11:02,520 --> 00:11:06,330
OK, now within this if statement, let's add one more if statement.

148
00:11:06,360 --> 00:11:14,130
So if parentheses curly brackets this time below that we also want an else block for the condition.

149
00:11:14,130 --> 00:11:17,340
Let's just say is following.

150
00:11:17,940 --> 00:11:23,980
If this is true, if the current visitor is already following this profile, then this is where we'd

151
00:11:24,000 --> 00:11:27,710
want to show the stop following button else.

152
00:11:27,720 --> 00:11:32,060
Otherwise this is where we'd want to show the begin following button.

153
00:11:32,790 --> 00:11:35,760
So within the block right now, we can just paste in our clipboard.

154
00:11:36,660 --> 00:11:37,720
This is good to go.

155
00:11:37,890 --> 00:11:43,410
Now let's also paste in our clipboard within the IF block, but we need to make a few adjustments.

156
00:11:43,680 --> 00:11:51,420
So first of all, for the action instead of ad follow, this would be remove follow.

157
00:11:51,910 --> 00:11:57,600
OK, and then for the actual button that you click on, you can just get rid of this existing button.

158
00:11:58,260 --> 00:12:00,720
And below that we see a commented outline.

159
00:12:01,230 --> 00:12:02,870
Let's uncommented this.

160
00:12:02,880 --> 00:12:10,630
So get rid of this beginning portion and then at the end, get rid of the dash dash greater than OK.

161
00:12:10,770 --> 00:12:13,380
And that is the red stop following button.

162
00:12:13,830 --> 00:12:18,630
Now that we've got that set up, we can go ahead and remove that comment and outline from the else block.

163
00:12:18,960 --> 00:12:20,100
We no longer need it there.

164
00:12:20,310 --> 00:12:22,460
I only included it there for your reference.

165
00:12:23,220 --> 00:12:23,600
Cool.

166
00:12:23,790 --> 00:12:29,130
Now, before we test this out, we need to pay attention of when we should drop out and drop back into

167
00:12:29,130 --> 00:12:34,740
SJS on this line with the second if statement after the opening curly bracket.

168
00:12:35,010 --> 00:12:43,350
Let's drop out of SJS and then on this line with else at the beginning, let's drop back in to SJS.

169
00:12:43,800 --> 00:12:49,770
At the end of the line, we can drop out of SJS and then finally right after the final form tag.

170
00:12:49,770 --> 00:12:54,420
But before this closing curly bracket, we can drop back into SJS.

171
00:12:55,290 --> 00:12:55,680
Cool.

172
00:12:55,890 --> 00:12:58,560
Let's go ahead and save this and test it out.

173
00:12:59,070 --> 00:12:59,460
Oops.

174
00:12:59,460 --> 00:13:02,220
Looks like we have an error in our user controller file.

175
00:13:02,220 --> 00:13:09,900
So jump into user controller and up at the very top within our shared profile data function, we used

176
00:13:09,900 --> 00:13:14,370
the await feature, but I forgot to make this an async function right here.

177
00:13:14,370 --> 00:13:15,900
Just say async.

178
00:13:16,440 --> 00:13:19,050
Let's give this to save and go test it out.

179
00:13:19,050 --> 00:13:25,440
So back in the browser, as soon as I refresh, I should now stop following button because I'm already

180
00:13:25,440 --> 00:13:26,550
following Bachs a lot.

181
00:13:26,790 --> 00:13:27,780
So if I refresh.

182
00:13:28,860 --> 00:13:29,580
Perfect.

183
00:13:29,850 --> 00:13:36,030
Now let's go set up a route to support the slash remove follow Eurail pattern.

184
00:13:36,570 --> 00:13:36,840
Right.

185
00:13:36,840 --> 00:13:40,110
Because that's the route that this form is going to submit to.

186
00:13:40,710 --> 00:13:41,820
Let me show you what I mean.
