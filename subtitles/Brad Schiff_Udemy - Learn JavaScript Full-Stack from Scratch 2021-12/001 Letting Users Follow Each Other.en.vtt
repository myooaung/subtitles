WEBVTT
1
00:00:01.810 --> 00:00:02.770
Hello, everyone.

2
00:00:03.040 --> 00:00:08.980
In this lesson, we are going to let one user account follow another user account.

3
00:00:09.430 --> 00:00:10.720
Let's walk through an example.

4
00:00:10.730 --> 00:00:17.020
So I'm currently logged in with my brat account, but let's say I search for dog.

5
00:00:18.520 --> 00:00:22.000
I see this post titled Being a Dog Is Fun by barks a lot.

6
00:00:22.000 --> 00:00:27.320
So if I click on that to read it, if I really enjoyed this post I might want to follow the author.

7
00:00:27.760 --> 00:00:34.660
So first let's make sure that I can actually click on their author name here or their avatar here to

8
00:00:34.660 --> 00:00:35.860
view their profile.

9
00:00:36.370 --> 00:00:40.810
Then from their profile screen there will be a button that says Begin following this user.

10
00:00:41.170 --> 00:00:43.900
OK, but first, let's set up the links to their profile.

11
00:00:44.350 --> 00:00:50.370
So to adjust this template, let's jump into our text editor within our Views folder.

12
00:00:50.410 --> 00:00:59.200
Let's jump in to a single dash post dash screen, OK, if we scroll down past this area with the title

13
00:01:00.820 --> 00:01:04.240
in this next chunk of code, we see an element or link.

14
00:01:04.720 --> 00:01:05.820
Here's the image tag.

15
00:01:05.830 --> 00:01:08.540
So this is the link surrounding the avatar.

16
00:01:09.010 --> 00:01:18.370
So if someone clicks on that graviton instead of just an HSF of hash tag, let's say slash profile slash,

17
00:01:18.700 --> 00:01:22.270
and then it should be their username only, this should be dynamic.

18
00:01:22.960 --> 00:01:28.150
So let's get rid of the actual word username and instead drop in to SJS.

19
00:01:29.290 --> 00:01:35.950
Less than percentage equal sign to close that out, percentage greater than and let's just say post

20
00:01:35.950 --> 00:01:39.330
dot author, dot username.

21
00:01:39.670 --> 00:01:44.260
OK, not to save a bit of typing, let's just copy the same RF value.

22
00:01:44.800 --> 00:01:50.470
So from the beginning forward slash before profile all the way to the closing tag.

23
00:01:50.650 --> 00:01:51.630
Let's copy that.

24
00:01:53.170 --> 00:01:58.540
And then on this line where we see posted by and then it's going to be the username you can click on.

25
00:01:58.780 --> 00:02:01.150
Let's also adjust this value.

26
00:02:01.570 --> 00:02:04.630
So instead of the hash tag, just paste in your clipboard.

27
00:02:05.060 --> 00:02:08.170
OK, let's save this and then refresh on the front end.

28
00:02:10.500 --> 00:02:16.230
OK, so now my brat account can view this post by the dog and actually click on the author's name to

29
00:02:16.230 --> 00:02:21.490
go to that profile, if I go back, I can also now click on their avatar.

30
00:02:23.320 --> 00:02:23.730
Cool.

31
00:02:23.970 --> 00:02:30.480
Now, from this profile screen, let's set things up so that when I click this follow icon or follow

32
00:02:30.480 --> 00:02:35.680
button, I actually begin following this user to make that happen.

33
00:02:35.700 --> 00:02:39.360
Let's jump into the template that powers this profile screen.

34
00:02:39.810 --> 00:02:46.760
So back in our editor within our Views folder, let's jump in to profile SJS.

35
00:02:47.820 --> 00:02:53.580
OK, around line number nine, we see a button with the text that says follow.

36
00:02:54.090 --> 00:02:57.570
And we can see that this button lives within a form element.

37
00:02:57.990 --> 00:03:00.520
So when they click this button, this form is going to submit.

38
00:03:00.810 --> 00:03:03.990
So let's just adjust the form action attribute.

39
00:03:04.410 --> 00:03:04.680
Right.

40
00:03:04.680 --> 00:03:08.200
This defines where the form is going to submit or send its request to.

41
00:03:08.640 --> 00:03:19.890
So get rid of the placeholder hash tag and instead, let's say slash ad follow slash and then the username

42
00:03:19.890 --> 00:03:24.480
of the user you want to begin following only we'd want this to be dynamic.

43
00:03:24.480 --> 00:03:33.580
So instead we would drop in to SJS and just work with the variable that's named profile user name.

44
00:03:34.470 --> 00:03:36.810
OK, let's go ahead and save this.

45
00:03:37.050 --> 00:03:40.490
And now we better go set up a route that matches this pattern.

46
00:03:41.100 --> 00:03:44.760
So within the route of our project folder, jump into Rueter.

47
00:03:45.150 --> 00:03:45.690
Yes.

48
00:03:47.010 --> 00:03:53.190
Let's scroll down to the bottom and right before the closing module DOT exports, let's add a new comment

49
00:03:53.190 --> 00:03:56.430
and say follow related routes.

50
00:03:57.240 --> 00:03:58.490
OK, then let's Adira.

51
00:03:58.500 --> 00:04:00.750
So router dot post.

52
00:04:00.750 --> 00:04:10.440
If someone sends a post request to slash ad follow slash and then to store a segment of the Eurail as

53
00:04:10.440 --> 00:04:14.490
a query parameter, we can just say Colline username.

54
00:04:15.120 --> 00:04:16.410
OK then comma.

55
00:04:16.410 --> 00:04:21.480
And the second argument is a function that we would want to run in response to this.

56
00:04:22.080 --> 00:04:27.420
In this case, instead of working with our user controller or post controller, let's have a separate

57
00:04:27.420 --> 00:04:31.210
controller dedicated to follows or creating a follow.

58
00:04:31.860 --> 00:04:37.890
So let's scroll up to the top of this file and you can see we're already importing our user controller

59
00:04:37.890 --> 00:04:39.030
and post controller.

60
00:04:39.420 --> 00:04:46.770
So just duplicate one of these lines to save a bit of typing, copy paste and let's name the new copy

61
00:04:48.300 --> 00:04:55.340
follow controller and then just require in a file that's named Orlo Controller.

62
00:04:55.740 --> 00:05:00.000
OK, now we can leverage this to back down in our new route.

63
00:05:00.720 --> 00:05:05.310
For the second argument, let's begin working with our follow controller.

64
00:05:05.790 --> 00:05:09.090
And we haven't created any functions within that controller yet.

65
00:05:09.440 --> 00:05:11.640
You can imagine that we will in just a moment.

66
00:05:11.670 --> 00:05:18.570
So let's look inside it for a function named add follow while we're at it.

67
00:05:18.570 --> 00:05:24.200
Let's actually protect this route with our must be logged in function, right?

68
00:05:24.240 --> 00:05:27.540
If you're not logged in, we just want to stop this route immediately.

69
00:05:27.810 --> 00:05:30.840
Clearly, you should be logged in in order to follow a user.

70
00:05:31.200 --> 00:05:41.250
So right before we list out this function, we can just say user controller DOT must be logged in and

71
00:05:41.250 --> 00:05:42.360
then include a comma.

72
00:05:43.050 --> 00:05:45.090
At this point, this route is good to go.

73
00:05:45.300 --> 00:05:52.350
Now we just need to jump into our follow controller file and create a matching function named add follow.

74
00:05:52.620 --> 00:05:53.940
So let's save this.

75
00:05:54.240 --> 00:06:00.600
And then within our controllers folder, if you don't already have an empty file name to follow controller

76
00:06:00.610 --> 00:06:02.310
tags, that's OK.

77
00:06:02.520 --> 00:06:04.410
Just go ahead and create one right now.

78
00:06:05.010 --> 00:06:12.870
OK, but within that file, let's begin by saying exports dot and we want to function with that matching

79
00:06:12.870 --> 00:06:16.860
name that we just referenced of ADD follow.

80
00:06:17.430 --> 00:06:24.030
Let's set that to equal a function and within the parentheses, be sure to include parameters of request

81
00:06:24.030 --> 00:06:25.020
and response.

82
00:06:25.710 --> 00:06:31.500
OK, now when it comes to the actual body of this function, we would just want to leverage our model

83
00:06:31.500 --> 00:06:32.380
for a follow.

84
00:06:32.820 --> 00:06:37.980
So before we move on any further, let's create a new file within our models folder.

85
00:06:38.400 --> 00:06:39.150
So I'm going to right.

86
00:06:39.150 --> 00:06:48.360
Click on the models folder, choose new file, let's name it uppercase follow dot J.S. within this new

87
00:06:48.360 --> 00:06:54.150
model file, let's say let uppercase follow equal a function.

88
00:06:54.780 --> 00:07:00.600
For now we can leave this function completely blank and then down at the very bottom of this file we

89
00:07:00.600 --> 00:07:03.270
would just want to export uppercase follow.

90
00:07:03.600 --> 00:07:08.310
So module dot exports equals follow.

91
00:07:09.460 --> 00:07:16.420
Let's go ahead and save this and now back in our follow controller, up at the very top, let's import

92
00:07:16.420 --> 00:07:24.040
or require in the model so we can say consed uppercase follow equals and then just require it.

93
00:07:24.040 --> 00:07:31.660
And so we would give require a file path dot dot to move up out of the controllers folder and then go

94
00:07:31.660 --> 00:07:37.000
into the models folder and then pull in the file that's named uppercase fallen.

95
00:07:37.870 --> 00:07:45.280
OK, now within our add follow function, what we would actually want to do is create a new variable,

96
00:07:45.280 --> 00:07:53.110
let's say lowercase follow and set that to equal a new instance of uppercase follow.

97
00:07:53.650 --> 00:07:59.110
Within these parentheses, we want to pass in any information that the model would need to make its

98
00:07:59.110 --> 00:08:01.330
decisions and performance validation.

99
00:08:01.720 --> 00:08:07.720
In this case, we'd want to pass it to things the user name that the current user is trying to follow

100
00:08:08.170 --> 00:08:14.050
and the idea of the current visitor that has session data, the user that's logged in that's trying

101
00:08:14.050 --> 00:08:14.960
to do the following.

102
00:08:15.460 --> 00:08:22.720
So first, the user name that they want to begin following that would be request programmes, dot,

103
00:08:23.050 --> 00:08:25.140
username, comma.

104
00:08:25.300 --> 00:08:29.900
Then let's also give it the current visitor, the person that's trying to do the following.

105
00:08:30.310 --> 00:08:33.490
So request dot visitor ID.

106
00:08:34.480 --> 00:08:41.320
OK, now that our model has everything that it needs on a new line, we can just say follow lowercase

107
00:08:41.320 --> 00:08:44.110
follow dot, create.

108
00:08:45.100 --> 00:08:45.340
Right.

109
00:08:45.340 --> 00:08:53.070
We want to create a new follow document in the database that says that X user is now following Y user.

110
00:08:53.530 --> 00:08:58.960
We haven't actually created this method yet in our model, but you can imagine we will in just a moment.

111
00:08:59.230 --> 00:09:03.220
And when we do set it up, we will make sure that it returns a promise.

112
00:09:03.550 --> 00:09:10.090
And if it's a promise, that means at the end of it we could say dot then and dot Keje.

113
00:09:10.780 --> 00:09:14.410
Let's provide arrow functions within both then and catch.

114
00:09:16.680 --> 00:09:18.060
Do the same thing for Ketch.

115
00:09:21.220 --> 00:09:28.150
OK, now, if this promise is successful, if it resolves, then we just want to create a flash message

116
00:09:28.150 --> 00:09:32.740
that says congrats, you successfully started following excuser.

117
00:09:33.250 --> 00:09:34.270
So let's do that here.

118
00:09:34.480 --> 00:09:36.370
Request Flash.

119
00:09:36.580 --> 00:09:41.020
Let's add on to a collection of messages named Success Karma.

120
00:09:41.020 --> 00:09:45.520
And the actual message could be successfully followed.

121
00:09:45.730 --> 00:09:50.080
And actually, instead of quotes, let's use back ticks for this message.

122
00:09:51.820 --> 00:09:57.790
So I will also adjust the closing quote to be back, Dick, let's say, successfully followed and then

123
00:09:57.790 --> 00:10:00.490
to do something dynamic, dollar sign curly brackets.

124
00:10:01.030 --> 00:10:03.980
And it would just be the username that they just tried to follow.

125
00:10:04.000 --> 00:10:10.990
So request Paramo username so successfully followed Brad or successfully followed barks a lot.

126
00:10:11.680 --> 00:10:17.800
OK, after we create that flash message, then I would just want to redirect them back to that user's

127
00:10:17.800 --> 00:10:23.410
profile so I would manually save session data requests session not save.

128
00:10:23.830 --> 00:10:28.900
I'd give that an arrow function and it can all sit on one line and then I would just redirect them.

129
00:10:28.900 --> 00:10:39.020
So response dot redirect instead of quotes, I'd use tactics and say slash profile slash and then sign

130
00:10:39.040 --> 00:10:44.410
curly brackets, request prams, dot username, ok.

131
00:10:44.650 --> 00:10:51.460
However, if this promise fails or if it rejects, well that means the visitor was trying something

132
00:10:51.460 --> 00:10:53.530
weird or sneaky or malicious.

133
00:10:54.010 --> 00:11:01.510
So in that case, within catch, within the parentheses, I'd want to receive whatever errors the promise

134
00:11:01.510 --> 00:11:02.740
is going to reject with.

135
00:11:03.160 --> 00:11:06.220
There might only be one error, but it's still going to be an array.

136
00:11:06.850 --> 00:11:10.360
So errors dot for each.

137
00:11:10.990 --> 00:11:14.380
We'd want to provide the same function that we'd run once for each error.

138
00:11:14.390 --> 00:11:19.900
So let's use an arrow function pass in a parameter of error or singular.

139
00:11:20.080 --> 00:11:22.290
We don't need parentheses for just one parameter.

140
00:11:22.780 --> 00:11:26.840
OK, and what I'd want to do for each item is just create a flash message.

141
00:11:26.840 --> 00:11:32.290
So request flash, add on to the errors collection and the message would be error.

142
00:11:32.920 --> 00:11:35.230
OK, after that foreach finishes.

143
00:11:35.230 --> 00:11:39.780
I just want to save the session data and redirect them back to the homepage.

144
00:11:40.180 --> 00:11:40.450
Right.

145
00:11:40.450 --> 00:11:44.050
Because they're probably trying something weird or sneaky or malicious.

146
00:11:44.320 --> 00:11:49.810
So I wouldn't want to redirect them to a username that probably doesn't even exist or is something weird.

147
00:11:50.590 --> 00:11:55.420
So request session, save, provide an arrow function.

148
00:11:56.050 --> 00:11:57.250
We don't need curly brackets.

149
00:11:57.250 --> 00:12:00.370
It's just one statement or one action on a single line.

150
00:12:00.730 --> 00:12:05.680
And this is where we can just say response dot redirect back to the home page.

151
00:12:06.320 --> 00:12:08.770
OK, let's go ahead and save this file.

152
00:12:09.010 --> 00:12:14.860
And now we better go jump into our follow model and make sure that it has a function named create that

153
00:12:14.860 --> 00:12:16.000
returns a promise.

154
00:12:16.690 --> 00:12:19.540
So jump into uppercase, follow JS.
