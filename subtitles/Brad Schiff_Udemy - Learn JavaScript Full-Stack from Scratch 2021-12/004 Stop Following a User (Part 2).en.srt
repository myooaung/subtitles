1
00:00:00,300 --> 00:00:05,940
As soon as I refresh, I should now say stop following button, because I'm already following barks

2
00:00:05,940 --> 00:00:06,240
a lot.

3
00:00:06,490 --> 00:00:09,300
So if I refresh perfect.

4
00:00:09,540 --> 00:00:15,750
Now let's go set up a route to support the slash, remove, follow neutral pattern.

5
00:00:16,290 --> 00:00:16,530
Right.

6
00:00:16,530 --> 00:00:19,830
Because that's the route that this form is going to submit to.

7
00:00:20,400 --> 00:00:21,520
Let me show you what I mean.

8
00:00:21,540 --> 00:00:29,160
So back in the route of our project folder, jump into Rouda or JS down at the bottom of our router,

9
00:00:29,160 --> 00:00:32,880
we have follow related routes to save a bit of typing.

10
00:00:32,880 --> 00:00:35,670
Just duplicate this line for adding a follow.

11
00:00:37,050 --> 00:00:39,570
Select that line, copy right below this.

12
00:00:39,570 --> 00:00:42,150
Paste it in this new copy.

13
00:00:42,150 --> 00:00:46,370
Just change add follow to remove follow.

14
00:00:46,920 --> 00:00:48,930
OK, we still want to begin by running.

15
00:00:48,930 --> 00:00:56,220
Must be logged in but for the second function instead of add follow, let's change this to remove follow,

16
00:00:56,670 --> 00:01:02,220
let's save this and now let's jump into our follow controller and create a function with this matching

17
00:01:02,220 --> 00:01:02,510
name.

18
00:01:03,000 --> 00:01:08,280
So in follow controller there's no sense reinventing the wheel or typing all of this out again.

19
00:01:08,700 --> 00:01:13,410
Let's just copy and paste our add value and make a couple of adjustments.

20
00:01:14,220 --> 00:01:15,780
So I will copy all of this.

21
00:01:16,170 --> 00:01:20,460
And right below this, just paste it in in the new duplicated copy.

22
00:01:20,460 --> 00:01:26,430
Let's change this name to remove follow now instead of calling follow dot create.

23
00:01:26,730 --> 00:01:31,500
Let's call follow dot delete for the success message.

24
00:01:31,500 --> 00:01:39,720
We can just change it to successfully stopped and then change this word to following so successfully

25
00:01:39,720 --> 00:01:41,460
stopped following barks a lot.

26
00:01:42,270 --> 00:01:44,790
OK, everything else here can stay the same.

27
00:01:45,150 --> 00:01:46,620
Let's go ahead and save this.

28
00:01:46,800 --> 00:01:51,420
And now within our follow model, let's be sure to add a delete method.

29
00:01:51,930 --> 00:01:58,620
So within our models folder let's jump into follow dot J.S. Let's scroll down and find our create method

30
00:01:58,890 --> 00:02:05,730
and we can just copy and paste this to just select the entire create method with that in your clipboard

31
00:02:05,730 --> 00:02:06,270
right below it.

32
00:02:06,270 --> 00:02:07,650
Just paste or duplicate.

33
00:02:08,580 --> 00:02:11,000
Let's change this to delete.

34
00:02:12,540 --> 00:02:17,190
And then the only other change we need to make is the database action that we want to run.

35
00:02:17,760 --> 00:02:23,430
So instead of insert one, it would be delete one.

36
00:02:24,240 --> 00:02:31,020
OK, now before we save this and test it out, let's first add two more validation rules.

37
00:02:31,620 --> 00:02:36,990
Those two rules being you cannot remove a follow if you do not already follow the user.

38
00:02:37,530 --> 00:02:37,800
Right.

39
00:02:37,800 --> 00:02:42,090
Because in that case, then this delete one method wouldn't find a document to delete.

40
00:02:42,480 --> 00:02:48,240
And also you should not be able to add a follow if you're already following that user.

41
00:02:48,690 --> 00:02:52,290
So to enforce these rules, let's do this within our delete method.

42
00:02:52,470 --> 00:02:59,460
When we call this dot validate, let's just pass it a string of text and let it know which action we're

43
00:02:59,460 --> 00:03:00,540
currently performing.

44
00:03:00,870 --> 00:03:03,210
So in this case it would be delete.

45
00:03:03,930 --> 00:03:10,140
And then if we scroll up just a tiny bit into our create method, when we call this dot validate, let's

46
00:03:10,140 --> 00:03:11,850
say create.

47
00:03:12,900 --> 00:03:17,130
OK, now let's go up to our validate method and enforce these rules.

48
00:03:18,530 --> 00:03:24,620
After the closing curly bracket for the else block, so right here, but still within the overall validate

49
00:03:24,620 --> 00:03:34,900
function, let's create a variable named does follow already exist to see if a follow already exists.

50
00:03:34,910 --> 00:03:42,020
We could simply set this to equal and then look within our follows collection in the database and run

51
00:03:42,020 --> 00:03:47,600
the find one method curly brackets to describe the document we're looking for.

52
00:03:47,840 --> 00:03:52,920
And let's say the followed I.D. should match.

53
00:03:52,940 --> 00:03:56,270
So Colon, this dot followed IdÃ©e.

54
00:03:57,230 --> 00:04:07,310
Comma and the author ID should match and then create a new instance of object ID and pass it this author

55
00:04:07,310 --> 00:04:07,910
ID.

56
00:04:09,170 --> 00:04:13,030
OK, now this find one method is going to return a promise.

57
00:04:13,040 --> 00:04:15,800
So at the beginning of this, let's include a wait.

58
00:04:17,910 --> 00:04:24,390
OK, now, right below this line, let's set up an if statement, let's say if parentheses curly brackets,

59
00:04:24,780 --> 00:04:30,800
if the current action parameter equals a double equal signs create.

60
00:04:31,440 --> 00:04:36,510
And in order for this to work, we need to receive this with a parameter within the parentheses for

61
00:04:36,510 --> 00:04:37,140
this function.

62
00:04:37,530 --> 00:04:42,510
So right here, be sure to add in a parameter named action right below in this file.

63
00:04:42,510 --> 00:04:48,030
Just a minute ago, the two times when we called the validate, we passed to the value of either create

64
00:04:48,030 --> 00:04:48,690
or delete.

65
00:04:49,140 --> 00:04:55,860
So now we're saying if the current action equals create, then we'd want to make sure that a follow

66
00:04:55,860 --> 00:04:59,140
matching these two IDs does not already exist.

67
00:04:59,790 --> 00:05:08,390
So let's say if parentheses, curly brackets, if it does follow, already exist.

68
00:05:08,940 --> 00:05:15,870
If this is able to find a matching document, then this will evaluate to true because any object will

69
00:05:15,870 --> 00:05:16,970
evaluate to true.

70
00:05:17,430 --> 00:05:22,980
So if one already exists and the incoming request is trying to create another one, well then within

71
00:05:22,980 --> 00:05:26,150
the curly brackets, we just want to push an error onto our array.

72
00:05:26,460 --> 00:05:34,410
This dot errors dot push and say you are already following this user.

73
00:05:36,020 --> 00:05:41,820
OK, now to save a bit of typing, we can just copy and paste these three lines of code and do the same

74
00:05:41,820 --> 00:05:43,280
thing for the delete action.

75
00:05:43,740 --> 00:05:46,590
So let's copy this right below this pasted in.

76
00:05:47,040 --> 00:05:55,140
Let's say if action double equals sign delete, then we want to check for the opposite of this.

77
00:05:55,140 --> 00:05:58,020
So let's include an exclamation mark at the beginning here.

78
00:05:58,830 --> 00:06:04,050
Right, because you should not be able to stop following or remove a follow from someone you're not

79
00:06:04,050 --> 00:06:05,070
already following.

80
00:06:05,670 --> 00:06:14,820
Then for the error that we would push in this instance, it would say you cannot stop following someone

81
00:06:15,180 --> 00:06:19,020
you do not already follow.

82
00:06:20,250 --> 00:06:24,270
OK, let's go ahead and save this and test it out first.

83
00:06:24,270 --> 00:06:30,420
I should say that because we just now implemented these rules, you might have already accidentally

84
00:06:30,420 --> 00:06:37,350
created duplicate follows, meaning if you clicked, begin following more than once for a given user.

85
00:06:37,920 --> 00:06:40,530
If that's the case, then when you click, stop following.

86
00:06:40,530 --> 00:06:45,440
It wouldn't truly stop following them because it would only delete the first matching document.

87
00:06:45,780 --> 00:06:52,290
So to avoid that frustration, I recommend going into your Mongo DB Atlus account and within the following

88
00:06:52,320 --> 00:06:59,130
collection click find the pull in the latest data and make sure that there's only one document with

89
00:06:59,130 --> 00:07:02,580
the same followed ID and authorized values.

90
00:07:03,180 --> 00:07:08,610
And you could just delete any existing follow documents to give yourself a clean slate now that those

91
00:07:08,610 --> 00:07:10,620
new validation rules are in place.

92
00:07:11,040 --> 00:07:12,180
But let's test this out.

93
00:07:12,750 --> 00:07:15,120
I'll be sure to refresh, so please stop following.

94
00:07:15,120 --> 00:07:19,980
Button has the updated action and let me try to stop following Bachs a lot.

95
00:07:21,810 --> 00:07:27,060
Cool successfully stopped following barks a lot, and now it's a follow button again, if I go into

96
00:07:27,060 --> 00:07:31,080
the database and search the find collection, you can see it's gone.

97
00:07:31,680 --> 00:07:37,860
But if I change my mind and want to begin following that user again, perfect successfully followed

98
00:07:37,860 --> 00:07:38,550
barks a lot.

99
00:07:39,120 --> 00:07:42,910
And you can see there's a matching follow in the database again.

100
00:07:43,620 --> 00:07:48,410
Now let's enforce a new rule being you should not be allowed to follow yourself.

101
00:07:48,810 --> 00:07:56,400
So if I visit my own profile before we visually hide the follow button on your own profile, let's first

102
00:07:56,400 --> 00:08:01,290
set up validation checks to make sure that that would never go through anyways.

103
00:08:01,830 --> 00:08:09,510
So back in our text editor below this if statement for the if action equals delete, let's add a new

104
00:08:09,510 --> 00:08:17,160
line and we can even leave a comment to ourselves and say, should not be able to follow yourself to

105
00:08:17,160 --> 00:08:17,940
enforce this.

106
00:08:17,940 --> 00:08:19,590
Let's just set up an if statement.

107
00:08:19,740 --> 00:08:32,310
So if parentheses curly brackets and say if this dot followed ID equals this dot author ID, if that's

108
00:08:32,310 --> 00:08:34,640
the case then we just want to push an error.

109
00:08:34,650 --> 00:08:44,830
So this errors push and let's say you cannot follow yourself, let's save this and test it out.

110
00:08:44,850 --> 00:08:47,700
So now if I try to follow my own account.

111
00:08:50,950 --> 00:08:57,190
Cool, it kicks me back to the homepage, you cannot follow yourself now that we've enforced that validation

112
00:08:57,190 --> 00:08:59,950
check, let's visually hide this button.

113
00:09:00,160 --> 00:09:06,700
If you're currently viewing your own profile to make this happen, I want to jump back to our shared

114
00:09:06,700 --> 00:09:11,140
profile data function that we're going to run for all three of these routes.

115
00:09:11,680 --> 00:09:11,980
Right.

116
00:09:11,980 --> 00:09:18,250
That area where we already created the property named is following to determine if the current visitor

117
00:09:18,250 --> 00:09:19,940
is following the current profile.

118
00:09:20,470 --> 00:09:21,460
Let me show you what I mean.

119
00:09:21,760 --> 00:09:28,570
So within our user controller file, in the controllers folder, user controller dot J.S..

120
00:09:30,170 --> 00:09:34,740
Remember, towards the top, we created this function named shared profile data.

121
00:09:35,270 --> 00:09:36,590
Well, we've already created this.

122
00:09:36,590 --> 00:09:40,150
One variable is following right above that.

123
00:09:40,160 --> 00:09:47,690
Let's just create a variable Soulet and let's name it is visitors profile by default.

124
00:09:47,690 --> 00:09:49,650
Let's set this to equal false.

125
00:09:50,420 --> 00:09:54,100
However, if you're logged in, let's perform a check.

126
00:09:54,710 --> 00:10:04,850
So then the if curly brackets we can just say is visitors profile equals and now we can just look within

127
00:10:04,850 --> 00:10:15,020
our request profile user underscore ID to get the actual Mongo DB object id object for the current profile

128
00:10:15,020 --> 00:10:23,930
user and any Mongo DB object ID has a method named equals so we can just check it against the current

129
00:10:23,930 --> 00:10:29,510
session user ID request session dot user dot underscore ID.

130
00:10:30,110 --> 00:10:33,300
The equals method will either return true or false.

131
00:10:33,890 --> 00:10:35,640
So that's going to be the correct value.

132
00:10:35,870 --> 00:10:46,130
Now down here, let's just add on to the request object and say request dot is visitor's profile equals

133
00:10:46,400 --> 00:10:47,920
our local variable.

134
00:10:48,200 --> 00:10:50,880
So is visitors profile.

135
00:10:51,530 --> 00:10:51,920
Cool.

136
00:10:52,100 --> 00:10:57,230
So now this true or false value will be available from the next function for this route.

137
00:10:57,800 --> 00:11:02,300
So let's scroll down and find the function named profile posts screen.

138
00:11:02,990 --> 00:11:09,740
When we render that template, let's just give it a new property so we can include a comma and say is

139
00:11:09,740 --> 00:11:19,080
visitors profile colon and then look on the request object for is visitors profile.

140
00:11:20,470 --> 00:11:20,870
Cool.

141
00:11:21,140 --> 00:11:29,300
Let's go ahead and save this and then jump in to our profile dot SJS file to actually leverage it to

142
00:11:29,300 --> 00:11:30,220
refresh your memory.

143
00:11:30,230 --> 00:11:36,310
Remember, we just want to hide or not display this button if you're currently viewing your own profile.

144
00:11:36,740 --> 00:11:44,420
Now, luckily for us, we already have both of those buttons wrapped in an overall if the current visitor

145
00:11:44,420 --> 00:11:45,560
has a user session.

146
00:11:46,250 --> 00:11:50,390
So within this outer if condition, let's just add on another check.

147
00:11:50,390 --> 00:11:59,510
So ampersand, ampersand and say and you are not so exclamation to check for the opposite is visitors

148
00:11:59,810 --> 00:12:00,500
profile.

149
00:12:01,310 --> 00:12:08,060
So only if you're logged in and it's not your profile, should you see either of the stop following

150
00:12:08,060 --> 00:12:09,530
or start following buttons.

151
00:12:10,010 --> 00:12:12,560
Let's go ahead and save this and test it out.

152
00:12:12,560 --> 00:12:15,200
So if I refresh on my own profile screen.

153
00:12:16,800 --> 00:12:17,380
Perfect.

154
00:12:17,400 --> 00:12:22,380
It's gone completely, but if I go back to the bark's a lot profile.

155
00:12:24,100 --> 00:12:26,110
The appropriate button is still there.

156
00:12:26,650 --> 00:12:27,370
Excellent.

157
00:12:27,520 --> 00:12:33,940
And that's going to bring this lesson to a close now before we change gears and work on our homepage

158
00:12:33,940 --> 00:12:37,920
feed, that should show the latest posts from the users you follow.

159
00:12:38,230 --> 00:12:44,080
Before we get to that, let's first actually complete the profile screen, meaning you should be able

160
00:12:44,080 --> 00:12:49,090
to click on followers to view a list of this current users followers.

161
00:12:49,540 --> 00:12:53,200
And you should be able to click on Following to see who they are following.

162
00:12:53,680 --> 00:12:59,530
Not to mention these counter numbers that we see here should actually represent the number of matching

163
00:12:59,530 --> 00:13:05,100
documents in our database instead of just this fake hard coded HTML data.

164
00:13:05,620 --> 00:13:05,910
Right.

165
00:13:05,950 --> 00:13:07,030
Clearly, the bark's a lot.

166
00:13:07,030 --> 00:13:08,820
User does not have three posts.

167
00:13:09,520 --> 00:13:13,340
So all of that is what we're going to implement in our next lesson.

168
00:13:13,750 --> 00:13:16,210
Let's keep things rolling and I'll see you then.
