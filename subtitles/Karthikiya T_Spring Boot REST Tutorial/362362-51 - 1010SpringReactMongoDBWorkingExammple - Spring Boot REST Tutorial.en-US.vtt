WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.350
So let's take a look at a working example off complete reactor application that use this

00:00:05.350 --> 00:00:06.250
mongo DB.

00:00:06.250 --> 00:00:07.580
But before that,

00:00:07.580 --> 00:00:09.210
let me walk you through the project.

00:00:09.210 --> 00:00:10.360
First things first,

00:00:10.360 --> 00:00:12.840
you have to create a springboard project.

00:00:12.840 --> 00:00:13.900
And in my case,

00:00:13.900 --> 00:00:18.250
I use spring tool suit in order to do that job.

00:00:18.250 --> 00:00:25.770
So just populate all the fields in here and click next hit.

00:00:25.770 --> 00:00:28.490
It controls all the starter dependence is that you have been eating.

00:00:28.490 --> 00:00:38.340
How do you search for react to that would show me all the reactor libraries and if you

00:00:38.340 --> 00:00:44.660
notice currently react to support is available for all these databases all it is no

00:00:44.660 --> 00:00:45.930
excluded a basis,

00:00:45.930 --> 00:00:49.680
which includes mongo db Red is Cassandra,

00:00:49.680 --> 00:00:50.420
etcetera.

00:00:50.420 --> 00:00:53.280
And we also have a support for an SQL database,

00:00:53.280 --> 00:00:53.570
which is,

00:00:53.570 --> 00:00:54.250
by the way,

00:00:54.250 --> 00:00:55.720
experimental.

00:00:55.720 --> 00:00:59.100
It's not recommended that you use this in actual projects,

00:00:59.100 --> 00:01:01.680
but the one that we're gonna be needing,

00:01:01.680 --> 00:01:02.030
though,

00:01:02.030 --> 00:01:06.150
is mongo DB as well as we need React a Web.

00:01:06.150 --> 00:01:11.760
I have already done this and so have this project with all of those dependent is added.

00:01:11.760 --> 00:01:16.910
So we have bet plucks dependency as well as the reactor mongo DB.

00:01:16.910 --> 00:01:17.920
And in addition,

00:01:17.920 --> 00:01:21.070
to that since I'm going to be using an embedded mongo db,

00:01:21.070 --> 00:01:24.050
I also have to include the following dependency.

00:01:24.050 --> 00:01:27.450
So once I have all these dependence is in place.

00:01:27.450 --> 00:01:33.080
The next thing that I want to do is to configure the falling perimeter as part of the

00:01:33.080 --> 00:01:34.540
application or properties.

00:01:34.540 --> 00:01:39.650
And this points to the you are a off mongo DB with a specific port.

00:01:39.650 --> 00:01:40.870
So are embedded.

00:01:40.870 --> 00:01:46.270
Mongo DB is going to be running in this particular port with whatever the database name

00:01:46.270 --> 00:01:50.510
that you'd like to give next.

00:01:50.510 --> 00:01:52.810
Let's talk about the depository.

00:01:52.810 --> 00:01:56.230
So I just created an interface with some random name.

00:01:56.230 --> 00:02:02.650
But this must extend the reactor mongo repository that belongs to Spring Data Project.

00:02:02.650 --> 00:02:05.110
And like I mentioned before,

00:02:05.110 --> 00:02:10.230
this is going to bring us all the basic functionalities that will help us perform crowd

00:02:10.230 --> 00:02:11.150
operations.

00:02:11.150 --> 00:02:14.760
If you want to go beyond what it all the offers,

00:02:14.760 --> 00:02:20.270
then you have to introduce some additional equity methods are give those greedy annotations

00:02:20.270 --> 00:02:21.870
and give your custom greedy,

00:02:21.870 --> 00:02:22.550
etcetera.

00:02:22.550 --> 00:02:23.750
But at the moment,

00:02:23.750 --> 00:02:25.550
we're not going to be needing all that,

00:02:25.550 --> 00:02:30.430
and we're not going to be having service layer so we don't have a service interface or its

00:02:30.430 --> 00:02:31.400
implementation.

00:02:31.400 --> 00:02:36.070
We're going to call this repository statically from the controller logic.

00:02:36.070 --> 00:02:37.880
So here is our controller,

00:02:37.880 --> 00:02:43.450
with all the methods that were talked previously,

00:02:43.450 --> 00:02:46.950
and in order to use the depository,

00:02:46.950 --> 00:02:49.650
I'm dependence injecting it.

00:02:49.650 --> 00:02:52.130
And here is a product,

00:02:52.130 --> 00:02:52.700
Bo Jo.

00:02:52.700 --> 00:02:56.090
And since I'm using mongo DB,

00:02:56.090 --> 00:02:57.630
which is a no SQL database,

00:02:57.630 --> 00:03:01.090
I have toe annotate it with a document.

00:03:01.090 --> 00:03:05.540
If you are aware off SQL data basis or relational data basis,

00:03:05.540 --> 00:03:08.500
this would correspond to an entity,

00:03:08.500 --> 00:03:14.650
and the collection in North Co database would correspond to a table,

00:03:14.650 --> 00:03:16.370
but still,

00:03:16.370 --> 00:03:18.570
the stuff would remain pretty standard.

00:03:18.570 --> 00:03:24.050
I have a couple of fields idea as well as the product name.

00:03:24.050 --> 00:03:29.750
We also have some validation to set the limit off characters for the spirit name,

00:03:29.750 --> 00:03:38.760
and this will be activated whenever we have valid.

00:03:38.760 --> 00:03:39.650
Annotation added.

00:03:39.650 --> 00:03:45.610
I already have this application running,

00:03:45.610 --> 00:03:48.490
so let's take a look at how it functions.

00:03:48.490 --> 00:03:50.150
Let me go to a client.

00:03:50.150 --> 00:04:01.150
Let me first try to create some products so that we can experiment with them.

00:04:01.150 --> 00:04:09.660
We're going to be sending Jason data so this Jason Data must map with the poor Joe.

00:04:09.660 --> 00:04:27.590
And here it's going to be local host happen 80 80 slash products if you go back to the

00:04:27.590 --> 00:04:28.390
controller.

00:04:28.390 --> 00:04:35.590
So that's exact mapping we have in here.

00:04:35.590 --> 00:04:42.080
That's products and made to send Jason as part of the request body,

00:04:42.080 --> 00:04:44.610
which will be saved.

00:04:44.610 --> 00:04:47.050
And a more no object would be ripped on back,

00:04:47.050 --> 00:04:50.580
which will see on the client side.

00:04:50.580 --> 00:05:04.640
Let me just send the request between the idea to something else can it to change my dad one

00:05:04.640 --> 00:05:23.650
header to say that the content type is Jason and product has been added.

00:05:23.650 --> 00:05:28.350
When we had a couple of more products real quick,

00:05:28.350 --> 00:05:41.250
No,

00:05:41.250 --> 00:05:43.620
let me retrieve all the products available.

00:05:43.620 --> 00:05:55.150
So this is going to bring all the list of products that were just populated.

00:05:55.150 --> 00:05:59.690
Now let me just update this product with I d one.

00:05:59.690 --> 00:06:02.710
I'm going to specify ideas,

00:06:02.710 --> 00:06:04.050
part of the part credible,

00:06:04.050 --> 00:06:07.960
and the body would have the Jason.

00:06:07.960 --> 00:06:12.250
I would like to name it as whatever.

00:06:12.250 --> 00:06:13.250
It doesn't matter.

00:06:13.250 --> 00:06:15.940
Of course,

00:06:15.940 --> 00:06:19.740
we need to change the method to something else.

00:06:19.740 --> 00:06:23.350
So that's put method for ablation,

00:06:23.350 --> 00:06:27.550
and it has been updated.

00:06:27.550 --> 00:06:35.200
Let me check if it indeed God updated and sure days,

00:06:35.200 --> 00:06:38.650
we can also delete a particular product.

00:06:38.650 --> 00:06:42.650
So that may send delete Scdp request.

00:06:42.650 --> 00:06:47.980
And we got 200.

00:06:47.980 --> 00:06:48.160
Okay,

00:06:48.160 --> 00:06:48.990
Response.

00:06:48.990 --> 00:06:51.960
Which means product has been deleted.

00:06:51.960 --> 00:07:03.510
Let's take a look at all the final list of products available and we have only two hope it

00:07:03.510 --> 00:07:04.280
makes sense.

