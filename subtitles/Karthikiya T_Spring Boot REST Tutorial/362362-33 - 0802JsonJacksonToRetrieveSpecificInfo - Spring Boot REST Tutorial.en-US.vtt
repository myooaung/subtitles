WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.850
In our previous example,

00:00:01.850 --> 00:00:07.040
we had a couple off up services Web service one end up service to were able to make a Web

00:00:07.040 --> 00:00:13.020
service call from Web service to to Web service one in order to retrieve list off products

00:00:13.020 --> 00:00:13.020
.

00:00:13.020 --> 00:00:16.090
And we're trying to display them as it is.

00:00:16.090 --> 00:00:16.980
However,

00:00:16.980 --> 00:00:22.000
in most cases we don't want to use or were not going to be needing the entire list off

00:00:22.000 --> 00:00:22.590
products.

00:00:22.590 --> 00:00:28.260
Maybe you'd like to retrieve specifications Formacion only depending on your needs.

00:00:28.260 --> 00:00:29.820
In fact,

00:00:29.820 --> 00:00:32.450
most often that would be the case.

00:00:32.450 --> 00:00:39.250
So what we're going to try to do now is in strong retrieving all the list of products from

00:00:39.250 --> 00:00:39.810
Web service.

00:00:39.810 --> 00:00:40.350
One.

00:00:40.350 --> 00:00:45.760
We're only interested in retrieving the product name with product I.

00:00:45.760 --> 00:00:45.900
D.

00:00:45.900 --> 00:00:46.470
One.

00:00:46.470 --> 00:00:49.370
The answer to it is Jackson Library.

00:00:49.370 --> 00:00:50.950
Let's take a look at the cord.

00:00:50.950 --> 00:00:54.610
So here we have the controller,

00:00:54.610 --> 00:01:01.730
and all I'm trying to do here is we have the your this your will help us retrieve all the

00:01:01.730 --> 00:01:02.750
list of products.

00:01:02.750 --> 00:01:08.260
But what I'm interested in is retreating only the first product details,

00:01:08.260 --> 00:01:14.080
and then I want to get more specific and retrieve the product name with identified one

00:01:14.080 --> 00:01:18.460
until as part of the you'll.

00:01:18.460 --> 00:01:24.280
I'm trying to get a specific product with the island fire Inside the Web service one,

00:01:24.280 --> 00:01:31.690
we have a controller method that would help us retrieve a specific product based on the

00:01:31.690 --> 00:01:32.330
product.

00:01:32.330 --> 00:01:32.930
I d.

00:01:32.930 --> 00:01:34.380
You are a template.

00:01:34.380 --> 00:01:42.760
So this response would essentially will now have the first product and then we're going to

00:01:42.760 --> 00:01:44.630
create an object off Mapple.

00:01:44.630 --> 00:01:50.660
What the seller wants to do is we can actually read the end of response in the form off a

00:01:50.660 --> 00:01:55.240
tree which we can then travels through and retreat specific information.

00:01:55.240 --> 00:01:58.890
And here is instruction for the same using the map or object.

00:01:58.890 --> 00:02:02.290
I'm trying to read the response as a tree and in this case,

00:02:02.290 --> 00:02:04.480
I'm only interested in retrieving the body.

00:02:04.480 --> 00:02:09.550
Were not interested in head road will have things like state of scored etcetera.

00:02:09.550 --> 00:02:10.720
If you wish,

00:02:10.720 --> 00:02:13.350
you can actually retrieve the header information.

00:02:13.350 --> 00:02:15.380
There's a method for the same.

00:02:15.380 --> 00:02:17.560
And here it is,

00:02:17.560 --> 00:02:21.190
but for normal interested in returning the body.

00:02:21.190 --> 00:02:24.850
So once you get hold off the root node,

00:02:24.850 --> 00:02:32.280
we can use the Jackson Library methods in order to retrieve specifications Formation in

00:02:32.280 --> 00:02:32.990
this case,

00:02:32.990 --> 00:02:34.330
as that mentioned before,

00:02:34.330 --> 00:02:37.490
were only interested in retreating the product name,

00:02:37.490 --> 00:02:42.150
and then we're just simply trying toe display it in the form off a text.

00:02:42.150 --> 00:02:44.550
Ultimately,

00:02:44.550 --> 00:02:46.950
if you send a query to this method,

00:02:46.950 --> 00:02:50.250
you would see the result.

00:02:50.250 --> 00:02:51.810
However,

00:02:51.810 --> 00:02:54.340
more stuffing things may not be so simple.

00:02:54.340 --> 00:02:55.150
In our case,

00:02:55.150 --> 00:02:57.830
we have this set off products,

00:02:57.830 --> 00:03:01.090
but Jason can actually get little complex.

00:03:01.090 --> 00:03:02.850
For example,

00:03:02.850 --> 00:03:05.510
you could have Jason,

00:03:05.510 --> 00:03:08.330
which will have an aerialist off products.

00:03:08.330 --> 00:03:13.570
So we have products and then and add a list off products.

00:03:13.570 --> 00:03:16.190
And you can also have nested objects,

00:03:16.190 --> 00:03:17.160
for example,

00:03:17.160 --> 00:03:18.500
a spot off each product.

00:03:18.500 --> 00:03:21.750
You could have seller information in this manner.

00:03:21.750 --> 00:03:23.950
In our case,

00:03:23.950 --> 00:03:25.750
if you go to the product for Joe,

00:03:25.750 --> 00:03:31.790
it's pretty simple.

00:03:31.790 --> 00:03:34.190
All it has is three feels,

00:03:34.190 --> 00:03:39.650
and so you're able to see the same in here.

00:03:39.650 --> 00:03:41.240
However,

00:03:41.240 --> 00:03:42.770
you could have another object,

00:03:42.770 --> 00:03:46.260
something like Cellar that would,

00:03:46.260 --> 00:03:48.020
in turn will have multiple fields,

00:03:48.020 --> 00:03:50.550
so its object inside another object.

00:03:50.550 --> 00:03:54.950
And so the Jason Dress bonds that we get will also be nested.

00:03:54.950 --> 00:03:59.710
So if you have a response that looks something like this,

00:03:59.710 --> 00:04:04.250
he can still use Jackson Library to get specific information.

00:04:04.250 --> 00:04:10.750
Jackson Library has all the methods you need to help you retrieve specific information.

00:04:10.750 --> 00:04:16.670
It would be very impractical off me to demonstrate you all those methods available,

00:04:16.670 --> 00:04:18.110
I believe,

00:04:18.110 --> 00:04:20.950
and just go three,

00:04:20.950 --> 00:04:26.900
turn off these members description and then get a sense off some understanding on what each

00:04:26.900 --> 00:04:28.310
one of this matter does.

00:04:28.310 --> 00:04:36.150
So we have one to find a specific element using apart.

00:04:36.150 --> 00:04:37.330
I mean,

00:04:37.330 --> 00:04:45.750
let's say that I would like to retrieve the city off the seller so you could have a bath

00:04:45.750 --> 00:04:54.760
that say's product slash city something of that sort.

00:04:54.760 --> 00:05:01.600
And obviously this is not the perfect example.

00:05:01.600 --> 00:05:05.660
You can experiment with all these methods and to simply play with it.

00:05:05.660 --> 00:05:07.380
And we don't a purse.

00:05:07.380 --> 00:05:14.330
Typically read the Jason in the form off a string and store it as part of the string object

00:05:14.330 --> 00:05:14.330
.

00:05:14.330 --> 00:05:20.490
And then we'll try to experiment with the Jackson Library before we actually get into the

00:05:20.490 --> 00:05:21.850
production code.

00:05:21.850 --> 00:05:23.950
I hope it makes sense

