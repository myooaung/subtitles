WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.530
Let's talk about how we can send Post Request using less template in order to create a

00:00:05.530 --> 00:00:06.280
resource.

00:00:06.280 --> 00:00:07.080
You know,

00:00:07.080 --> 00:00:09.080
kids were going to be adding a new product.

00:00:09.080 --> 00:00:12.560
So we're going tohave Web service,

00:00:12.560 --> 00:00:14.260
one which will expose the crowd,

00:00:14.260 --> 00:00:14.930
the FBI.

00:00:14.930 --> 00:00:15.700
And of course,

00:00:15.700 --> 00:00:17.390
we're only interested in the creation part,

00:00:17.390 --> 00:00:17.750
though,

00:00:17.750 --> 00:00:21.020
And then we'll have Web service to running,

00:00:21.020 --> 00:00:23.790
which will send the post request to Web service.

00:00:23.790 --> 00:00:24.140
One.

00:00:24.140 --> 00:00:25.350
Using rest template.

00:00:25.350 --> 00:00:27.320
So first of all,

00:00:27.320 --> 00:00:32.780
let us try to understand the boss mattered in Web service one along with a quick demo so

00:00:32.780 --> 00:00:37.070
that will understand the sequence off steps involved in order to send the Post request to

00:00:37.070 --> 00:00:38.050
Web service one.

00:00:38.050 --> 00:00:43.170
We went to pretty much use the same sequence off steps in order to send the Post requests

00:00:43.170 --> 00:00:45.480
from Web service to the Web service.

00:00:45.480 --> 00:00:48.060
One programmatically he's in rest template.

00:00:48.060 --> 00:00:51.130
So here is the post matter.

00:00:51.130 --> 00:00:53.490
Inside the Web service one.

00:00:53.490 --> 00:00:58.390
Just ignore ology just off the medicine here and focus on this matter.

00:00:58.390 --> 00:01:05.030
This matter would receive all the post request that are mapped to this.

00:01:05.030 --> 00:01:11.770
Your and this method is going to accept three Request para meters,

00:01:11.770 --> 00:01:16.250
which will help us populate on the fields off a product.

00:01:16.250 --> 00:01:20.350
I'm using those Request para meters in order to create a product.

00:01:20.350 --> 00:01:27.650
And then finally I'm populating a map with the status which will be responded back toe the

00:01:27.650 --> 00:01:30.050
line to let that line No,

00:01:30.050 --> 00:01:31.610
that the product was added.

00:01:31.610 --> 00:01:37.750
Let's run this application and see how it functions.

00:01:37.750 --> 00:01:41.740
This is going to run in board a d a.

00:01:41.740 --> 00:01:42.100
D.

00:01:42.100 --> 00:01:44.400
Let me go to the postman.

00:01:44.400 --> 00:01:50.800
Let me will send to get request to see on the list off products available.

00:01:50.800 --> 00:01:53.650
Let me now try to introduce a new product.

00:01:53.650 --> 00:02:00.170
Let me open a new tab and send the ball strict rest.

00:02:00.170 --> 00:02:13.650
Let me try to simulate the farm submission with Chris para Meters So it's going to accept

00:02:13.650 --> 00:02:16.290
the following values i D,

00:02:16.290 --> 00:02:20.250
which will uniquely identify a product.

00:02:20.250 --> 00:02:27.160
And then we have name and then finally Price.

00:02:27.160 --> 00:02:32.450
When did you the identified as four name?

00:02:32.450 --> 00:02:39.250
Maybe washing machine price is going to be whatever.

00:02:39.250 --> 00:02:41.280
Let me send the request.

00:02:41.280 --> 00:02:46.150
The product is added.

00:02:46.150 --> 00:02:49.970
Let's make sure that it indeed got added.

00:02:49.970 --> 00:02:51.770
Sure enough,

00:02:51.770 --> 00:02:52.400
it did.

00:02:52.400 --> 00:03:02.720
Now let's go to a web service to and try to follow the exact same steps So here is the

00:03:02.720 --> 00:03:08.200
controller mattered inside web service to we have the request.

00:03:08.200 --> 00:03:15.450
You all This is where the records would be sent to And I'm using a builder class You are a

00:03:15.450 --> 00:03:17.820
confidence builder in order to construct.

00:03:17.820 --> 00:03:18.770
Are you are I?

00:03:18.770 --> 00:03:25.000
You could actually heart got all those because para meters as part of this year world But

00:03:25.000 --> 00:03:26.360
it's not a good practice.

00:03:26.360 --> 00:03:31.900
The better approach is to use a builder glass like this and construct the your on the fly.

00:03:31.900 --> 00:03:36.390
But we will be getting all this battle meters from Well,

00:03:36.390 --> 00:03:38.480
we're reading it from this object.

00:03:38.480 --> 00:03:40.210
So for this method,

00:03:40.210 --> 00:03:40.770
though,

00:03:40.770 --> 00:03:42.210
from the client application,

00:03:42.210 --> 00:03:42.850
which is both,

00:03:42.850 --> 00:03:43.260
man,

00:03:43.260 --> 00:03:48.750
we're going to send a Jason Data which will be on marshaled into product object.

00:03:48.750 --> 00:03:55.190
And then I'm just trying to read its fields like silk and create all those reports

00:03:55.190 --> 00:03:56.180
perimeters.

00:03:56.180 --> 00:03:56.950
So,

00:03:56.950 --> 00:03:58.100
for this purpose,

00:03:58.100 --> 00:03:59.410
as you might have guessed,

00:03:59.410 --> 00:04:03.050
I had to create a Poggio called product.

00:04:03.050 --> 00:04:07.250
Have corporate this poor Joe from the web service One application.

00:04:07.250 --> 00:04:08.080
Well,

00:04:08.080 --> 00:04:13.560
you don't have to copy the exact same Bordeaux as long as you have a Beau Jo that is

00:04:13.560 --> 00:04:18.190
capable off holding all the data that is being received to dis mattered.

00:04:18.190 --> 00:04:21.450
You're good to go in real time projects.

00:04:21.450 --> 00:04:26.140
We would typically referred to the documentation of develop service and try to understand

00:04:26.140 --> 00:04:30.050
what are the expected para meters and what is the written value,

00:04:30.050 --> 00:04:30.490
etcetera.

00:04:30.490 --> 00:04:31.380
And based on that,

00:04:31.380 --> 00:04:32.990
we would create a Beau Jo.

00:04:32.990 --> 00:04:34.100
In fact,

00:04:34.100 --> 00:04:38.600
there are a lot of tools available which will help you create a Bordeaux from the sample

00:04:38.600 --> 00:04:39.650
Jason Response,

00:04:39.650 --> 00:04:40.650
and vice versa.

00:04:40.650 --> 00:04:42.630
He could use one such tools,

00:04:42.630 --> 00:04:43.550
but in our case,

00:04:43.550 --> 00:04:45.560
arson at is pretty simple,

00:04:45.560 --> 00:04:49.120
and we don't have so many fields that we have to worry about it.

00:04:49.120 --> 00:04:55.950
So I just copied the existing Poor Joe from Web service 12 Web service to.

00:04:55.950 --> 00:04:58.330
Additionally,

00:04:58.330 --> 00:05:01.190
if you if your request is having any headers,

00:05:01.190 --> 00:05:08.850
you could use this yesterday beheaders class in order to do had the list off headers.

00:05:08.850 --> 00:05:10.990
In our case,

00:05:10.990 --> 00:05:13.640
we don't have anything at the moment,

00:05:13.640 --> 00:05:14.510
but if you wish,

00:05:14.510 --> 00:05:16.150
you can send headers as well.

00:05:16.150 --> 00:05:20.350
But here is the method post for object,

00:05:20.350 --> 00:05:23.150
which will ultimately send the request,

00:05:23.150 --> 00:05:26.110
and this belongs to the class rest temperate,

00:05:26.110 --> 00:05:28.850
which we had previously dependence injected.

00:05:28.850 --> 00:05:32.490
This going to accept fue para meters,

00:05:32.490 --> 00:05:34.210
the first of which the U.

00:05:34.210 --> 00:05:34.420
R.

00:05:34.420 --> 00:05:34.680
I,

00:05:34.680 --> 00:05:38.450
which we're trying to build in here.

00:05:38.450 --> 00:05:43.590
The second perimeter is so called scdp entity.

00:05:43.590 --> 00:05:44.490
In our case,

00:05:44.490 --> 00:05:45.700
we don't have any request,

00:05:45.700 --> 00:05:46.770
body or headers.

00:05:46.770 --> 00:05:49.620
And so I didn't include We just said this to empty.

00:05:49.620 --> 00:05:51.900
That means head acquis,

00:05:51.900 --> 00:05:54.810
which does not have any body or headers.

00:05:54.810 --> 00:05:57.120
But if you have a the body or headers,

00:05:57.120 --> 00:06:00.460
you could populate the request as to the identity,

00:06:00.460 --> 00:06:02.170
just as we did in here,

00:06:02.170 --> 00:06:03.460
and then send that request.

00:06:03.460 --> 00:06:05.290
And finally,

00:06:05.290 --> 00:06:10.970
the third Param Eter is the type of value or the written value that is expected from the

00:06:10.970 --> 00:06:11.890
Web service.

00:06:11.890 --> 00:06:12.640
In our case,

00:06:12.640 --> 00:06:15.760
it's going to be a map with the results,

00:06:15.760 --> 00:06:22.060
and ultimately I'm just trying to respond back with the same status.

00:06:22.060 --> 00:06:23.970
Alternatively,

00:06:23.970 --> 00:06:30.160
can also use this extreme matter of rest template in order to send the request so you would

00:06:30.160 --> 00:06:33.550
have the your I as the last.

00:06:33.550 --> 00:06:39.680
The Hester DP method that you would like to use to send the request has to do the entity if

00:06:39.680 --> 00:06:40.420
you have any,

00:06:40.420 --> 00:06:42.250
as we last the map,

00:06:42.250 --> 00:06:55.050
let's go do here and try to send the request Web service to is running in boat 80 81.

00:06:55.050 --> 00:06:57.950
So make sure you switch the board.

00:06:57.950 --> 00:07:03.760
I'm going to copy one off these in order to create a new product.

00:07:03.760 --> 00:07:05.150
Because if you remember,

00:07:05.150 --> 00:07:11.050
that's what we're trying to get from this method.

00:07:11.050 --> 00:07:16.670
That method is expecting us to send the body,

00:07:16.670 --> 00:07:22.210
which will be on Marshall on the server side.

00:07:22.210 --> 00:07:25.150
Let me change them at the type to boast.

00:07:25.150 --> 00:07:32.040
Let me introduce a new identify air and change the product.

00:07:32.040 --> 00:07:35.950
Something else maybe I'd like to name this has.

00:07:35.950 --> 00:07:39.190
I'm not sure if I bought it.

00:07:39.190 --> 00:07:39.460
Still,

00:07:39.460 --> 00:07:40.410
under production,

00:07:40.410 --> 00:07:43.940
strain the price to maybe $99.

00:07:43.940 --> 00:07:45.350
It send the request.

00:07:45.350 --> 00:07:47.050
Hopefully,

00:07:47.050 --> 00:07:48.750
this will work.

00:07:48.750 --> 00:07:51.050
If it doesn't,

00:07:51.050 --> 00:07:53.910
we'll find out why it didn't.

00:07:53.910 --> 00:07:58.150
So The problem is we didn't start the application.

00:07:58.150 --> 00:08:08.450
This is going to run in Port 80 81 and let's try to send the request again.

00:08:08.450 --> 00:08:10.300
Okay,

00:08:10.300 --> 00:08:13.900
we have another that say's content type not supported.

00:08:13.900 --> 00:08:15.530
Let's add one header.

00:08:15.530 --> 00:08:18.750
That's safe content type,

00:08:18.750 --> 00:08:25.160
which will let us specify the type of the content that we're trying to send us part of the

00:08:25.160 --> 00:08:25.680
body.

00:08:25.680 --> 00:08:27.400
In this case it's Jason,

00:08:27.400 --> 00:08:36.750
so I'm going to make this as J Son product added,

00:08:36.750 --> 00:08:38.620
And if you go to a website,

00:08:38.620 --> 00:08:40.180
respond and send the request,

00:08:40.180 --> 00:08:42.730
it worked pretty well.

00:08:42.730 --> 00:08:53.170
So that's about how you can send poor street quest from a bab service using rest template.

00:08:53.170 --> 00:08:56.070
I hope it makes sense.

