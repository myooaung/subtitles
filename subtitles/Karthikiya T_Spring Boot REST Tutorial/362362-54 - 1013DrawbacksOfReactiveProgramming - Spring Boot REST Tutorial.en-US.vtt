WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.340
Let's talk about some of the drawbacks off reactive programming specifically in the context

00:00:05.340 --> 00:00:07.160
offspring framework and Web flocks,

00:00:07.160 --> 00:00:10.720
and try to understand when to use the 10 men not to use it.

00:00:10.720 --> 00:00:12.330
First of all,

00:00:12.330 --> 00:00:14.080
the interweb stack needs to be known.

00:00:14.080 --> 00:00:14.710
Blocking.

00:00:14.710 --> 00:00:17.880
I mean coming to micro sources.

00:00:17.880 --> 00:00:22.660
If at least one services not reactive in nature than it might actually impact all the

00:00:22.660 --> 00:00:27.780
downstream nodes are the downstream services that rely on that particular service.

00:00:27.780 --> 00:00:30.060
Or if you don't have a react today,

00:00:30.060 --> 00:00:31.070
the best driver,

00:00:31.070 --> 00:00:34.650
then you're not reaping the benefits off reactor programming.

00:00:34.650 --> 00:00:36.700
So that's one drawback.

00:00:36.700 --> 00:00:38.410
And secondly,

00:00:38.410 --> 00:00:42.900
reactive programming might be an overkill if scalability is not an issue for you.

00:00:42.900 --> 00:00:43.420
I mean,

00:00:43.420 --> 00:00:48.790
if your applications not deployed on cloud in Roman and not using docker continual ization

00:00:48.790 --> 00:00:48.790
,

00:00:48.790 --> 00:00:49.480
etcetera,

00:00:49.480 --> 00:00:52.380
then you may not be needing the react to approach.

00:00:52.380 --> 00:00:53.760
It might be an overkill.

00:00:53.760 --> 00:00:57.330
And compared to traditional embassy libraries,

00:00:57.330 --> 00:01:01.230
the libraries that support react to programming are pretty limited,

00:01:01.230 --> 00:01:07.320
which may also limit the scope off your project and typically react to programming requires

00:01:07.320 --> 00:01:08.710
a steep learning call,

00:01:08.710 --> 00:01:13.650
and it takes a while for teams to get used to the reactor style of programming.

00:01:13.650 --> 00:01:14.590
Well,

00:01:14.590 --> 00:01:17.190
this shouldn't be a drawback if it is me who is teaching,

00:01:17.190 --> 00:01:17.550
though.

00:01:17.550 --> 00:01:19.900
And finally,

00:01:19.900 --> 00:01:25.510
you need to use another library in order to write unit tests well on top off your existing

00:01:25.510 --> 00:01:30.840
Janet libraries here to have some additional libraries in place in order to write Janet's

00:01:30.840 --> 00:01:32.160
for your reactor programming.

00:01:32.160 --> 00:01:36.890
So these are some of the drawbacks based on these factors you can consider,

00:01:36.890 --> 00:01:38.980
but they want to go with reactor approach.

00:01:38.980 --> 00:01:41.680
Our traditional approach hope it makes sense.

