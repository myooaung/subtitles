WEBVTT
1
00:00:05.950 --> 00:00:10.720
Hello everyone and welcome to part three of the Twitter project with sparks streaming.

2
00:00:10.730 --> 00:00:14.990
So now we're going to finish off our project by setting up a Jupiter note book of spark that will connect

3
00:00:14.990 --> 00:00:19.800
to the socket connection created by that tweet read the PI file were created in the previous lecture.

4
00:00:19.900 --> 00:00:25.920
I remember inside the PI file you're gonna have to fill in your credentials for everything to work OK.

5
00:00:25.950 --> 00:00:31.410
Now overall for this lecture I really highly recommend that you actually avoid typing out the instructions

6
00:00:31.410 --> 00:00:36.450
on your own and instead use the provided notebook and the provided notebook is under the sparks streaming

7
00:00:36.450 --> 00:00:40.390
folder it's called Introduction to spark streaming.

8
00:00:40.390 --> 00:00:43.440
Now there are many places where a simple typo can mess everything up.

9
00:00:43.450 --> 00:00:46.850
Or if you run a cell in the wrong order everything can get messed up.

10
00:00:46.860 --> 00:00:51.970
And unfortunately the nature of sequel contex and the sockets almost always require you to restart your

11
00:00:51.970 --> 00:00:53.680
virtual box to get going again.

12
00:00:53.680 --> 00:00:58.680
So that's why I really recommend you just download the notes and follow along the notes and run the

13
00:00:58.680 --> 00:00:59.900
cells as I run them.

14
00:00:59.980 --> 00:01:04.690
In fact I encourage this so much that I won't be personally typing it out for the lecture.

15
00:01:04.810 --> 00:01:06.440
I'm going to explain line by line.

16
00:01:06.490 --> 00:01:12.420
What's already provided for you in the notebooks that come with the Course now pending on how many times

17
00:01:12.420 --> 00:01:14.010
you actually run through this exercise.

18
00:01:14.010 --> 00:01:17.900
The port you assign in tweet read that PI may already be in use.

19
00:01:18.060 --> 00:01:23.610
Meaning if you run through this lecture everything's working and then you you know do control c stop

20
00:01:23.640 --> 00:01:24.860
and you want to run it again.

21
00:01:24.870 --> 00:01:28.780
Sometimes that tweet read that PI may read something like you're already in use.

22
00:01:28.870 --> 00:01:30.510
So I'm gonna go over how to change that port.

23
00:01:30.510 --> 00:01:31.310
It's actually really simple.

24
00:01:31.320 --> 00:01:35.910
You just essentially just changed the integer number for the port to something else but don't go over

25
00:01:35.910 --> 00:01:40.180
that just in case you find yourself with that particular problem of poor already in use.

26
00:01:41.620 --> 00:01:43.140
OK now one quick final note.

27
00:01:43.180 --> 00:01:47.350
In order to use one of the visualization libraries we actually need to install one more library called

28
00:01:47.350 --> 00:01:48.250
panderers.

29
00:01:48.250 --> 00:01:53.980
So what I want you to do is in that virtual box at your terminal just type Pipp 3 install panels just

30
00:01:53.980 --> 00:01:56.670
like we installed Seaborn in that post-Labor earlier.

31
00:01:56.800 --> 00:02:00.790
And then once you install that at the terminal I want you to restart your virtual box boot to machine

32
00:02:01.000 --> 00:02:03.060
before falling along with this lecture.

33
00:02:03.070 --> 00:02:08.560
So right now if you want Pozza you go to your terminal Do pit 3 install panderers and then once that's

34
00:02:08.560 --> 00:02:12.280
ready to go restart your virtual box of Muta machine and then you're ready to fall off.

35
00:02:12.310 --> 00:02:14.890
This particular lecture OK.

36
00:02:15.090 --> 00:02:16.960
So here are the overall steps we're going to take.

37
00:02:17.010 --> 00:02:21.140
We're going to quickly review the tweet read the py file and it will actually change the port on it.

38
00:02:21.240 --> 00:02:23.060
Just to review how you can change the port.

39
00:02:23.190 --> 00:02:28.200
In case you get an error of port already news then you're going to open up the provided notebook file

40
00:02:28.470 --> 00:02:31.500
and you're going to scroll all the way down to the intersection you're not going to run all the cells

41
00:02:31.500 --> 00:02:37.100
in it and then we'll run the PI file and the cells in the correct order as we explain what's happening.

42
00:02:37.100 --> 00:02:43.080
Line by line and in that notebook there's two instances where it says you can run tweet read that pi.

43
00:02:43.140 --> 00:02:46.350
It actually doesn't really matter when you actually run tweet read that pie.

44
00:02:46.440 --> 00:02:50.860
What matters is that you are running it by the time you start your spark stream in S..

45
00:02:50.860 --> 00:02:52.560
And we'll talk about that later on.

46
00:02:54.080 --> 00:02:59.090
And as I mentioned there are many steps that must be done in the exact order for this entire process

47
00:02:59.090 --> 00:02:59.480
to work.

48
00:02:59.480 --> 00:03:03.290
And if you do even a single step out of order you're going to essentially need to restart your virtual

49
00:03:03.290 --> 00:03:07.220
box and start all over again which is why I highly recommend that you take your time with this.

50
00:03:07.220 --> 00:03:11.370
Just watch the video and use the provided notes OK.

51
00:03:11.530 --> 00:03:14.920
So using the provided tweet read that pi an introduction is streaming.

52
00:03:14.990 --> 00:03:19.450
It's going to save you a lot of time and frustration even of myself when I was trying to type this manually.

53
00:03:19.480 --> 00:03:24.050
I would make a simple typo or accidently run a cell in the wrong order a miss a parentheses.

54
00:03:24.070 --> 00:03:29.290
And I kept messing up so really using the provided files is going to save you a ton of time a ton of

55
00:03:29.290 --> 00:03:34.150
frustration and it's going to build enough understanding where you can tackle your own projects when

56
00:03:34.150 --> 00:03:34.680
you want.

57
00:03:34.870 --> 00:03:36.250
OK let's get started.

58
00:03:36.250 --> 00:03:41.720
I'm going to go to my virtual box and remember I just did a fresh restart of this virtual box that's

59
00:03:41.740 --> 00:03:43.330
ready to go.

60
00:03:43.330 --> 00:03:43.560
All right.

61
00:03:43.570 --> 00:03:47.670
Here I am at my virtual box remember I just restarted my virtual box.

62
00:03:47.680 --> 00:03:52.180
And if you kind of skipped the slides for this particular lecture please go back and read them all you

63
00:03:52.180 --> 00:03:56.590
had to actually install Pancho's but hopefully you saw the slides and that those instructions and now

64
00:03:56.650 --> 00:04:01.870
we're going to do is we're going to open up two terminals to come over here and then search your computer

65
00:04:01.870 --> 00:04:02.890
for terminal.

66
00:04:02.890 --> 00:04:04.120
Already have it here.

67
00:04:04.630 --> 00:04:07.030
And then we're going to open one more up.

68
00:04:07.030 --> 00:04:11.800
So one of these will be running our tweet read that PI file and the other one will be running our Jupiter

69
00:04:11.800 --> 00:04:12.800
notebook file.

70
00:04:13.140 --> 00:04:13.610
OK.

71
00:04:13.840 --> 00:04:18.820
So first I want to review that tweet read that PI file explain a little bit more about what it's doing

72
00:04:19.120 --> 00:04:23.110
and then show you how you can change the port in case you ever get an error that says port already in

73
00:04:23.110 --> 00:04:23.950
use.

74
00:04:23.980 --> 00:04:29.530
So my file I saved the under Downloads because we edit it in the Jupiter note book and then I said Save

75
00:04:29.530 --> 00:04:30.880
As we read that pie.

76
00:04:30.940 --> 00:04:32.550
So it's under Downloads for me.

77
00:04:32.560 --> 00:04:34.180
I'm going to double click it.

78
00:04:34.180 --> 00:04:34.490
OK.

79
00:04:34.490 --> 00:04:37.660
And at the bottom the tweet read that pile once you have it open.

80
00:04:37.660 --> 00:04:41.740
You'll notice that this is where we have our port number assigned and our host number assigned.

81
00:04:41.740 --> 00:04:43.230
And then it also says listening on port.

82
00:04:43.240 --> 00:04:44.280
That's just a stream.

83
00:04:44.470 --> 00:04:49.420
But in case you ever run this if you run this more than one time you may start getting air that says

84
00:04:49.420 --> 00:04:51.510
port already in use if you ever get that.

85
00:04:51.520 --> 00:04:52.600
It's no big deal.

86
00:04:52.600 --> 00:04:56.410
All you have to do is change this port number to something else that you know is not in use and you

87
00:04:56.410 --> 00:05:02.350
can just go down one like 1998 and then to make it clear you can always just change a string to no listening

88
00:05:02.530 --> 00:05:02.980
on port.

89
00:05:02.980 --> 00:05:08.140
9 9 9 8 so I'm going to do that and I don't actually need to do it because it just that a restart but

90
00:05:08.260 --> 00:05:13.120
just in case I wanted to walk through that and then just do control us to save or command us and you're

91
00:05:13.120 --> 00:05:13.680
ready to go.

92
00:05:13.720 --> 00:05:15.220
So we're going to close that.

93
00:05:15.520 --> 00:05:19.810
And then in one of these terminals we're going to come back here and get that file ready to go.

94
00:05:19.810 --> 00:05:28.210
So we'll say CD into downloads and then if I do ls it lists my files and I had to read that pie.

95
00:05:28.600 --> 00:05:33.500
So I will say Python 3 then tab autocomplete.

96
00:05:33.600 --> 00:05:35.060
And I'm not going to hit enter yet.

97
00:05:35.100 --> 00:05:40.620
I'm going to have that ready to go and it will tell you later on when to actually run this file and

98
00:05:40.620 --> 00:05:41.680
then add my other terminal.

99
00:05:41.700 --> 00:05:43.550
I'm going to start a Jupiter notebook

100
00:05:46.270 --> 00:05:53.510
so that will open up and here in my up a viewer I've downloaded the introduction to spark streaming

101
00:05:53.510 --> 00:05:54.220
notebook.

102
00:05:54.290 --> 00:05:58.790
You can just go to it in your unzipped file of notes it's under the sparks streaming folder.

103
00:05:58.790 --> 00:06:00.330
Click on that and open that up.

104
00:06:00.470 --> 00:06:06.180
Again I highly recommend that you instead of typing along just actually use this particular file.

105
00:06:07.010 --> 00:06:12.650
So once you have this open scroll down past the actual introduction example that we went through you're

106
00:06:12.650 --> 00:06:17.150
not going to run any of those cells so keep scrolling down until you get to the Twitter example.

107
00:06:17.150 --> 00:06:19.390
And now this is what we're actually going to be using.

108
00:06:19.460 --> 00:06:23.930
So I'm going to zoom in here just a little bit so it's easier for us to see.

109
00:06:23.940 --> 00:06:26.440
OK so here you have the Twitter example ready to go.

110
00:06:26.640 --> 00:06:31.050
And as a quick note remember you need Tiger developer API account ready to go and you can do that with

111
00:06:31.050 --> 00:06:32.830
apps that Twitter the com.

112
00:06:32.880 --> 00:06:36.990
So here you mention you can begin running the tweet read that PI file at the very beginning of this

113
00:06:37.050 --> 00:06:41.070
and make sure to add your own IP address and credential keys that local IP address should work just

114
00:06:41.070 --> 00:06:43.930
fine that one to seven point zero points or 0.1.

115
00:06:43.980 --> 00:06:45.210
And if you want.

116
00:06:45.270 --> 00:06:47.420
You could run the tweet read that PI file right now.

117
00:06:47.550 --> 00:06:49.470
It shouldn't really matter either way.

118
00:06:49.470 --> 00:06:55.080
What really matters is that you run it before you actually initiate the spark streaming start sequence.

119
00:06:55.080 --> 00:06:58.540
So we'll leave that for now since we're already up the notebook.

120
00:06:58.710 --> 00:07:03.420
And if you download the notebook you won't find these fine SPARC lines because they're kind of custom

121
00:07:03.420 --> 00:07:04.150
to you.

122
00:07:04.380 --> 00:07:11.010
So what you need to do is if you run into some virtual box using find Sparke run find spark and then

123
00:07:11.040 --> 00:07:13.760
connect it to whatever spark escapes.

124
00:07:13.770 --> 00:07:15.250
So you've probably been doing that the whole course.

125
00:07:15.270 --> 00:07:17.590
If you've been following along for virtual box.

126
00:07:17.640 --> 00:07:18.390
OK.

127
00:07:18.550 --> 00:07:21.320
Now there's four lines that we need to focus on.

128
00:07:21.660 --> 00:07:26.510
And those are the actual import lines so will say from Paice spark import a spark context.

129
00:07:26.520 --> 00:07:32.180
We've seen that before then from Paice part that streaming in a streaming context then from place part

130
00:07:32.190 --> 00:07:34.440
that sequel in a sequel context.

131
00:07:34.500 --> 00:07:39.660
And then finally we're going to import from Paice parked that sequel that functions import DGSE that's

132
00:07:39.660 --> 00:07:42.690
going to allow us to order things in descending order.

133
00:07:42.690 --> 00:07:43.090
All right.

134
00:07:43.320 --> 00:07:44.600
So that's ready to go.

135
00:07:44.760 --> 00:07:47.690
So I will run this and do all the imports.

136
00:07:47.970 --> 00:07:55.110
And then once that cell is ran well we need to do is say S-E is equal to spark contex Now remember you

137
00:07:55.110 --> 00:07:56.130
can only run this once.

138
00:07:56.140 --> 00:07:59.770
If I try to run this more than one time I'll start getting an error.

139
00:07:59.880 --> 00:08:05.750
So I'm going to run the cell and that's going to create the actual spark context then the next thing

140
00:08:05.750 --> 00:08:11.930
is going to run is the cell right here which is the streaming context and the streaming context takes

141
00:08:11.990 --> 00:08:14.910
in the context that it just created.

142
00:08:15.200 --> 00:08:16.900
And then we have the SSD.

143
00:08:17.480 --> 00:08:23.930
And then what I'm going to do is also assign the spark contex that we created and pass that into a sequel

144
00:08:23.930 --> 00:08:30.260
context that's going to allow me to later on just these simple sequel syntax to actually queery the

145
00:08:30.440 --> 00:08:32.240
sequel context that I just created.

146
00:08:32.240 --> 00:08:33.960
Or I should say the spark context.

147
00:08:34.250 --> 00:08:35.410
So run that as well.

148
00:08:36.590 --> 00:08:40.880
Again basically just converting our spark context to a streaming context in a sequel context that we

149
00:08:40.880 --> 00:08:42.200
can access to later.

150
00:08:42.410 --> 00:08:44.540
And then I have the socket stream.

151
00:08:44.720 --> 00:08:49.750
So the socket stream is where I'm actually going to expect to connect to tweet read up PI.

152
00:08:49.970 --> 00:08:56.090
So this line and this line need to match up with whatever is in tweet read that by the defaults and

153
00:08:56.090 --> 00:08:57.030
tweet read that pi.

154
00:08:57.050 --> 00:09:02.970
Whereas this IP and this particular port number we just change the port number to 9 9 9 8.

155
00:09:03.020 --> 00:09:05.810
So we'll run that as well.

156
00:09:05.850 --> 00:09:10.440
So that's going to connect to that socket and then what we're going to do is just like we did in the

157
00:09:10.440 --> 00:09:14.800
previous simpler example have lines be a socket stream window.

158
00:09:14.970 --> 00:09:21.910
So we're taking them and then all we're going to do is the following We are going to say from collections

159
00:09:22.000 --> 00:09:27.990
import a named tuple and a name tuple is almost like a really quick way to create a class.

160
00:09:28.000 --> 00:09:32.930
Essentially what it is it's a tuple where each element actually is assigned a name.

161
00:09:32.950 --> 00:09:34.040
So it has fields.

162
00:09:34.180 --> 00:09:37.890
And in this case the fields are going to be the tag and the count.

163
00:09:37.900 --> 00:09:42.420
So our main idea is to do a count of the actual hash tags in the tweets.

164
00:09:42.580 --> 00:09:46.600
So for every window that we get we're going to take a hash tag of the tweets themselves.

165
00:09:46.930 --> 00:09:52.510
So we're going to now run this and now we essentially have almost What's like a class sort of twee object

166
00:09:52.870 --> 00:09:56.630
that ends up creating an named tuple with the tweet itself and then the fields.

167
00:09:56.650 --> 00:10:00.540
So we're going to expand this a little bit to see the next line.

168
00:10:00.670 --> 00:10:05.080
Now expanded the next cell a little bit so we can get an idea of what's going on and hopefully a lot

169
00:10:05.080 --> 00:10:09.050
of this will look familiar to you based off our simpler word count example.

170
00:10:09.220 --> 00:10:09.680
OK.

171
00:10:09.910 --> 00:10:12.190
So the very first step is we grab the line.

172
00:10:12.190 --> 00:10:13.370
That's the actual string.

173
00:10:13.390 --> 00:10:19.420
That's one long tweet and we're going to split it on whitespace to actually get a list of all the words

174
00:10:19.660 --> 00:10:20.910
in the tweet.

175
00:10:21.070 --> 00:10:26.300
Then what we're going to do is use that filter and that filter is going to filter out things based on

176
00:10:26.300 --> 00:10:27.450
the condition.

177
00:10:27.460 --> 00:10:33.260
So what we do is for every word in that now list we are going to lowercase it and check if it starts

178
00:10:33.340 --> 00:10:37.640
a hash tag because sensu want to do just count the actual hash tags.

179
00:10:37.870 --> 00:10:43.690
So we'll say word that lower and then the dot starts with is basically just a method you can call off

180
00:10:43.690 --> 00:10:48.570
of any Python string to check if it starts with a particular set of characters.

181
00:10:48.880 --> 00:10:54.490
So then we have that where we ended up doing is we took our single tweet string made it into a list

182
00:10:54.550 --> 00:10:57.130
of all the words including the hash tags words.

183
00:10:57.160 --> 00:10:57.880
Then we filtered it.

184
00:10:57.880 --> 00:11:03.760
So now we have a list of only the hash tag words and then what we're going to do is lowercase that word

185
00:11:04.780 --> 00:11:07.580
and then add a one here with a tuple.

186
00:11:07.660 --> 00:11:12.040
So a lower case cases that word sets it up in a tuple just like we did when we did the simple work count

187
00:11:12.400 --> 00:11:17.030
simply here we're just making sure that it's lowercase and then we're going to do is reduce by key to

188
00:11:17.050 --> 00:11:20.100
actually get a word count here of the hash tags.

189
00:11:20.200 --> 00:11:25.590
Once we've done that well we're going to do is store that into a tweet object to work with later and

190
00:11:25.600 --> 00:11:31.040
remember the object is just named tuple with the tag and the count.

191
00:11:31.210 --> 00:11:37.620
And the reason for that is so we can plot it later on then what we do is for each R D D where we use

192
00:11:37.630 --> 00:11:44.530
the r d d to d f that stores as a data frame which then allows us to sort in descending order by count.

193
00:11:44.530 --> 00:11:49.990
And the reason we do that is because we want to say limit 10 so grab the first 10 that show up and register

194
00:11:49.990 --> 00:11:52.720
that as a temporary table called tweets.

195
00:11:52.720 --> 00:11:59.050
So what that means is every 10 tweets that we read in we're going to create the state of frame which

196
00:11:59.050 --> 00:12:04.420
has a hash tag count and that data frame is going to be registered as a temporary table called tweets

197
00:12:04.420 --> 00:12:09.910
later on we're actually planning this will have a plot that kind of refreshes every 10 seconds to show

198
00:12:09.940 --> 00:12:13.180
the latest top 10 tweets with the hashtags et cetera.

199
00:12:13.420 --> 00:12:20.260
So we're going to run this and then it's now time to run tweet read that pie.

200
00:12:20.260 --> 00:12:23.780
So as I previously mentioned you could have already been running tweet read that pie.

201
00:12:23.800 --> 00:12:28.480
That's not a big deal but you have to make sure you run tweet read that pie before you run this next

202
00:12:28.480 --> 00:12:32.500
cell which actually says the spark streaming contex is ready to start.

203
00:12:32.710 --> 00:12:36.410
So we'll hop over back toward Terminal 3.

204
00:12:36.410 --> 00:12:41.430
Tweet read up-I enter and it says it's listening on port 9 9 9 8.

205
00:12:41.600 --> 00:12:43.060
Perfect so it's ready to go.

206
00:12:43.190 --> 00:12:46.150
And now we're going to do say s c start.

207
00:12:46.550 --> 00:12:50.860
Run that cell and then go ahead and jump back to your terminal.

208
00:12:51.710 --> 00:12:56.820
And you should see tweets starting to roll in based off the hash tag we have.

209
00:12:56.820 --> 00:13:01.570
So here we can see we have play guitar hero 2 on medium etc..

210
00:13:01.710 --> 00:13:03.490
I love old soft rock whatever.

211
00:13:03.500 --> 00:13:07.040
So anything that has guitar in it that's what I'm looking for.

212
00:13:07.800 --> 00:13:12.700
So you want to wait a little bit until you get at least 10 tweets in if you chose a really esoteric

213
00:13:13.180 --> 00:13:17.240
topic you may want to choose something that is definitely in to have a lot of tweets to it.

214
00:13:17.260 --> 00:13:17.810
All right.

215
00:13:17.980 --> 00:13:20.790
So it looks like I have 10 tweets in ready to go.

216
00:13:20.980 --> 00:13:26.070
So hop back over to the Jupiter notebook.

217
00:13:26.080 --> 00:13:29.630
So now in my Jupiter note book I'm going to run this next cell.

218
00:13:29.680 --> 00:13:35.550
And what this next cell does is it does all the imports I need to actually display that plotting mechanism.

219
00:13:35.800 --> 00:13:37.160
So I'll say import time.

220
00:13:37.180 --> 00:13:43.030
And that is basically a counter that I Python import display and that allows me to actually show stuff

221
00:13:43.120 --> 00:13:46.030
in the notebook itself that live in Seaborn.

222
00:13:46.060 --> 00:13:50.170
Those are the visualization libraries that we worked with earlier and then for Jupiter notebooks if

223
00:13:50.170 --> 00:13:53.720
you want to see something a plot that is inside the cell.

224
00:13:53.740 --> 00:13:56.370
You have to have this little magic man map Portland in line.

225
00:13:56.440 --> 00:13:59.500
That's only for Jupiter notebooks however so keep that in mind.

226
00:13:59.510 --> 00:13:59.740
OK.

227
00:13:59.770 --> 00:14:06.250
So we'll run those imports let those roll and then this very next thing.

228
00:14:06.250 --> 00:14:08.700
This is what's actually going to be doing the plotting.

229
00:14:08.920 --> 00:14:11.400
So what this does is it sets count equal to zero.

230
00:14:11.410 --> 00:14:13.420
And it says well count is less than 10.

231
00:14:13.420 --> 00:14:15.610
So it's only going to do this around 10 times.

232
00:14:15.730 --> 00:14:21.160
It's going to sleep for three seconds and then it's going to grab the sequel context that we created

233
00:14:21.160 --> 00:14:24.070
much earlier and then call a sequel off of it.

234
00:14:24.130 --> 00:14:27.250
And what it's going to do is say select the tag and count columns.

235
00:14:27.250 --> 00:14:32.410
Remember that was that needed to be recreated from tweets which if you remember that was that actual

236
00:14:32.440 --> 00:14:34.590
temporary table that we registered.

237
00:14:34.930 --> 00:14:39.490
Then what we're going to do is say take the top 10 tweets and turn them into what's known as a Pandurs

238
00:14:39.490 --> 00:14:40.220
data frame.

239
00:14:40.360 --> 00:14:45.550
So that's a data frame library that's meant for smaller data sets like this one that we've already taken

240
00:14:45.550 --> 00:14:50.290
the top 10 and it's ready to go all the big data stuff the actual counting the reducing by key that

241
00:14:50.290 --> 00:14:55.480
was handled by Sparke But now that we actually have a count of those top ten tweets it's usable for

242
00:14:55.480 --> 00:14:58.500
something like Pandurs and I have other courses on those topics.

243
00:14:58.510 --> 00:15:00.660
You can just message me if you're interested in them.

244
00:15:00.950 --> 00:15:05.210
OK then we're going to do say display that clear output way equals true.

245
00:15:05.380 --> 00:15:10.030
So that is going to do that's going to clear the output in case we really have a plot that way we can

246
00:15:10.030 --> 00:15:15.280
keep refreshing our plot then S and estop BLT that figure that just sets the figure size large enough

247
00:15:15.280 --> 00:15:20.320
so we can see it and then we're essentially going to show a bar plot where the x axis is the counts.

248
00:15:20.320 --> 00:15:23.850
So the actual count of tweets to had that particular hash tag with it.

249
00:15:23.950 --> 00:15:27.790
And then the wife was tag and then data is equal to that top 10 día.

250
00:15:27.950 --> 00:15:31.360
Then we'll show the plot and we'll say count as equal to count plus 1.

251
00:15:31.360 --> 00:15:34.560
So let's run this and see if it works.

252
00:15:34.640 --> 00:15:35.600
And here it is.

253
00:15:35.600 --> 00:15:40.140
So we can see here that the top hashtags are guitar deals.

254
00:15:40.140 --> 00:15:45.990
Field sessions best seller and like and it's showing the mean count and about every three seconds.

255
00:15:46.010 --> 00:15:49.020
It's going to keep adding onto this and keep refreshing.

256
00:15:49.160 --> 00:15:56.000
So you can see here that we kind of almost have a live dashboard of tweets having to do with guitars.

257
00:15:56.030 --> 00:15:59.200
Now you can choose any of those keywords you wanted guitars.

258
00:15:59.210 --> 00:16:03.410
Probably one that's not super interesting because it's just pretty basic stuff.

259
00:16:03.410 --> 00:16:09.230
You'll see things like music piano jazz guitar rock etc. but I hope that you found this exercise pretty

260
00:16:09.230 --> 00:16:15.380
interesting in the fact that now you can do live streaming for extremely large streaming data sets.

261
00:16:15.380 --> 00:16:20.150
Now keep in mind for general purposes if you're going to do your own personal project of Twitter using

262
00:16:20.150 --> 00:16:22.870
Sparke streaming for it might be total overkill.

263
00:16:23.000 --> 00:16:27.560
As I mentioned before that tweet PI library already has its own streaming capabilities so you might

264
00:16:27.560 --> 00:16:29.400
want to explore the documentation there.

265
00:16:29.420 --> 00:16:34.790
This sort of sparks streaming is if when you need kind of to take the entire firehose that's available

266
00:16:34.790 --> 00:16:38.310
for you as a consumer for Twitter and you can actually pay Twitter more.

267
00:16:38.480 --> 00:16:41.840
You can actually pay the money that is if you want more data from them.

268
00:16:41.840 --> 00:16:46.430
So keep in mind using spark streaming like this for a personal project would probably be overkill unless

269
00:16:46.430 --> 00:16:49.990
you're working for a huge huge dataset for streaming purposes.

270
00:16:50.170 --> 00:16:50.710
OK.

271
00:16:50.960 --> 00:16:56.630
So once you're ready to kind of stop this what you can do is scroll down here and just say see that

272
00:16:56.630 --> 00:16:59.760
stop and that will stop your sparks streaming context.

273
00:16:59.780 --> 00:17:05.290
So I'll run that and eventually over in your terminal you should see coming back up here.

274
00:17:06.930 --> 00:17:09.290
That this is now broken so we see broken pipe.

275
00:17:09.300 --> 00:17:10.620
It's no longer running.

276
00:17:10.800 --> 00:17:11.060
OK.

277
00:17:11.070 --> 00:17:16.540
So then if you want this to definitely stop you can just do Control-C and it will stop actually reading

278
00:17:16.550 --> 00:17:19.000
everything in the terminal and that's it.

279
00:17:19.000 --> 00:17:20.170
That was your final project.

280
00:17:20.170 --> 00:17:21.250
I hope you enjoyed it.

281
00:17:21.310 --> 00:17:25.690
Again I really just going along with the notebook that we provided for you.

282
00:17:25.690 --> 00:17:29.710
It's super easy to make a typo or mistake to make this not work.

283
00:17:29.800 --> 00:17:32.590
If you have any questions feel free to post them to the CUNY forums.

284
00:17:32.590 --> 00:17:34.730
Thanks everyone and I hope you enjoyed the course.
