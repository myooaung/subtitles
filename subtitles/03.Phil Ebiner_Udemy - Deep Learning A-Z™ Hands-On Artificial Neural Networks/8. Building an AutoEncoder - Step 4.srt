1
1

00:00:00,130  -->  00:00:02,570
<v Instructor>Hello and welcome to this Python tutorial.</v>
2

2

00:00:02,570  -->  00:00:05,380
So, today, we're going to convert our training set
3

3

00:00:05,380  -->  00:00:08,127
and our test set into an array with users
4

4

00:00:08,127  -->  00:00:10,760
and lines and movies and columns.
5

5

00:00:10,760  -->  00:00:12,810
So first, why do we need to do that?
6

6

00:00:12,810  -->  00:00:14,810
Well, the reason is that, we need to make
7

7

00:00:14,810  -->  00:00:17,720
a specific structure of data that will fit
8

8

00:00:17,720  -->  00:00:20,146
to the structure of the other encoders
9

9

00:00:20,146  -->  00:00:22,800
and the other encoders are like neural networks,
10

10

00:00:22,800  -->  00:00:24,220
where you have some some input notes
11

11

00:00:24,220  -->  00:00:27,010
that are the features and you have some observations
12

12

00:00:27,010  -->  00:00:28,960
going one by one into the network
13

13

00:00:28,960  -->  00:00:30,850
starting with the input notes.
14

14

00:00:30,850  -->  00:00:32,420
And so what we have to do is create
15

15

00:00:32,420  -->  00:00:35,440
a structure that will contain these observations
16

16

00:00:35,440  -->  00:00:37,900
that will go into the network and their different
17

17

00:00:37,900  -->  00:00:40,580
features that are going to be in the input notes.
18

18

00:00:40,580  -->  00:00:42,810
And that's exactly what we're about to do
19

19

00:00:42,810  -->  00:00:44,310
by creating this array with the users and
20

20

00:00:44,310  -->  00:00:46,670
lines in the movies and columns,
21

21

00:00:46,670  -->  00:00:48,760
because we will have the observations and lines
22

22

00:00:48,760  -->  00:00:50,700
and the features and columns.
23

23

00:00:50,700  -->  00:00:52,320
And so basically we're just making the
24

24

00:00:52,320  -->  00:00:55,150
usual structure of data for neural networks
25

25

00:00:55,150  -->  00:00:57,090
or even for machinery in general.
26

26

00:00:57,090  -->  00:00:58,790
That is, with the observations in lines
27

27

00:00:58,790  -->  00:01:00,250
and the features and columns.
28

28

00:01:00,250  -->  00:01:03,120
That was exactly the same for the dataset
29

29

00:01:03,120  -->  00:01:04,670
of our churn modeling problem.
30

30

00:01:04,670  -->  00:01:07,000
Remember we had the observations in lines
31

31

00:01:07,000  -->  00:01:10,100
which were the customers and the features in columns
32

32

00:01:10,100  -->  00:01:12,550
which were the informations of these customers.
33

33

00:01:12,550  -->  00:01:14,340
And that's exactly the structure of data
34

34

00:01:14,340  -->  00:01:16,840
expected by neural network, and that's why
35

35

00:01:16,840  -->  00:01:19,730
we are now converting our data into such a structure.
36

36

00:01:19,730  -->  00:01:21,310
Okay so now that we understand,
37

37

00:01:21,310  -->  00:01:24,730
let's convert our data into such a structure.
38

38

00:01:24,730  -->  00:01:27,330
So, since we're gonna do this for both
39

39

00:01:27,330  -->  00:01:29,040
the training set and the test set,
40

40

00:01:29,040  -->  00:01:32,010
we're gonna create a function that will apply then
41

41

00:01:32,010  -->  00:01:34,700
on the training set and the test set separately.
42

42

00:01:34,700  -->  00:01:36,430
So, let's create this function.
43

43

00:01:36,430  -->  00:01:37,730
To create a function in Python,
44

44

00:01:37,730  -->  00:01:41,150
we need to start with def for definition.
45

45

00:01:41,150  -->  00:01:44,180
And then we need to give a name to the function.
46

46

00:01:44,180  -->  00:01:46,373
And we're gonna call this function convert.
47

47

00:01:48,180  -->  00:01:51,250
Okay, then we need to give some arguments to the function
48

48

00:01:51,250  -->  00:01:53,230
and actually we only need one argument
49

49

00:01:53,230  -->  00:01:56,410
because you know we will apply this function to only a set,
50

50

00:01:56,410  -->  00:01:59,400
which will be the training set first, and then the test set.
51

51

00:01:59,400  -->  00:02:01,400
And so here we only need one argument
52

52

00:02:01,400  -->  00:02:03,800
that we're gonna call data.
53

53

00:02:03,800  -->  00:02:06,400
So that's our argument and then when we apply
54

54

00:02:06,400  -->  00:02:09,180
the convert function to our training set and our test set,
55

55

00:02:09,180  -->  00:02:12,190
we will just need to replace data by training set
56

56

00:02:12,190  -->  00:02:13,520
and then test set.
57

57

00:02:13,520  -->  00:02:16,540
Alright then, colon, that's just by syntax,
58

58

00:02:16,540  -->  00:02:20,130
and then enter to go into the function
59

59

00:02:20,130  -->  00:02:21,830
to give it's definition that is
60

60

00:02:21,830  -->  00:02:24,090
tell the function what we want it to do.
61

61

00:02:24,090  -->  00:02:27,440
Okay, so as you understood, we are about to create
62

62

00:02:27,440  -->  00:02:30,290
an array where the lines are going to be the users
63

63

00:02:30,290  -->  00:02:32,430
and the columns are going to be the movies.
64

64

00:02:32,430  -->  00:02:34,930
So I guess what you're thinking about right now
65

65

00:02:34,930  -->  00:02:37,120
is a two dimensional numpy array.
66

66

00:02:37,120  -->  00:02:39,760
We could do that, however, and that's just
67

67

00:02:39,760  -->  00:02:41,770
because we're gonna use torch afterwards,
68

68

00:02:41,770  -->  00:02:44,510
we won't create a two dimensional numpy array,
69

69

00:02:44,510  -->  00:02:47,050
we will create a list of lists.
70

70

00:02:47,050  -->  00:02:49,540
So, list of lists, what does that mean?
71

71

00:02:49,540  -->  00:02:52,120
That means that we're gonna have several lists.
72

72

00:02:52,120  -->  00:02:56,080
One list for each line, that is one list for each user.
73

73

00:02:56,080  -->  00:02:59,660
And therefore since we have 943 users,
74

74

00:02:59,660  -->  00:03:02,990
that means that we'll have 943 lists.
75

75

00:03:02,990  -->  00:03:04,780
And these will be horizontal lists,
76

76

00:03:04,780  -->  00:03:08,280
so these will correspond to our observations and lines
77

77

00:03:08,280  -->  00:03:11,050
in this special structure that we've just described.
78

78

00:03:11,050  -->  00:03:12,120
So it will go like this.
79

79

00:03:12,120  -->  00:03:14,760
The first list will correspond to the first user,
80

80

00:03:14,760  -->  00:03:18,260
the second list will correspond to the second user, and etc.
81

81

00:03:18,260  -->  00:03:20,820
And then what will we get in each list?
82

82

00:03:20,820  -->  00:03:25,820
Well of course we will get the ratings of the 1,682 movies
83

83

00:03:26,220  -->  00:03:28,800
by the user corresponding to the list.
84

84

00:03:28,800  -->  00:03:31,070
And so we'll get the rating for each of the movie
85

85

00:03:31,070  -->  00:03:33,360
and remember if the user didn't rate the movie,
86

86

00:03:33,360  -->  00:03:35,580
then we'll get a zero for that cell.
87

87

00:03:35,580  -->  00:03:38,280
And that's why the new converted training set and test set
88

88

00:03:38,280  -->  00:03:40,380
will have the same size, because basically
89

89

00:03:40,380  -->  00:03:42,380
for both the training set and the test set,
90

90

00:03:42,380  -->  00:03:45,160
we're considering older users and older movies
91

91

00:03:45,160  -->  00:03:48,760
and we just put a zero when the user didn't rate the movie.
92

92

00:03:48,760  -->  00:03:50,240
Okay so to recap.
93

93

00:03:50,240  -->  00:03:54,770
This whole list of lists will be a list of 943 lists
94

94

00:03:54,770  -->  00:03:59,770
because we have 943 users and each of these 943 lists
95

95

00:03:59,840  -->  00:04:03,300
will be a list of 1,682 elements
96

96

00:04:03,300  -->  00:04:07,400
because we have 1,682 movies.
97

97

00:04:07,400  -->  00:04:10,590
Alright so now, let's create this list of lists.
98

98

00:04:10,590  -->  00:04:14,710
So, we're gonna start by giving a name to this list of lists
99

99

00:04:14,710  -->  00:04:16,440
and we're gonna call it new_data
100

100

00:04:17,888  -->  00:04:19,720
and that will be our final output
101

101

00:04:19,720  -->  00:04:20,900
that the function will return.
102

102

00:04:20,900  -->  00:04:23,380
That is, it's going to be our final array
103

103

00:04:23,380  -->  00:04:26,090
with the users and lines and the movies and columns.
104

104

00:04:26,090  -->  00:04:28,760
And so since new_data is list of lists,
105

105

00:04:28,760  -->  00:04:31,080
we need to initialize it as a list.
106

106

00:04:31,080  -->  00:04:32,760
And how do we do that in Python?
107

107

00:04:32,760  -->  00:04:33,930
Well that's very simple.
108

108

00:04:33,930  -->  00:04:36,310
We need to initialize it this way, with an equal
109

109

00:04:36,310  -->  00:04:37,760
and then brackets.
110

110

00:04:37,760  -->  00:04:40,400
That initializes the list.
111

111

00:04:40,400  -->  00:04:42,050
Okay, next step.
112

112

00:04:42,050  -->  00:04:44,050
Next step is to make a full loop
113

113

00:04:44,050  -->  00:04:47,070
because we want to create a list for each user.
114

114

00:04:47,070  -->  00:04:49,880
The list of all the ratings of the movies by this user,
115

115

00:04:49,880  -->  00:04:51,100
and therefore we need a full loop
116

116

00:04:51,100  -->  00:04:53,560
that will get the ratings for each user.
117

117

00:04:53,560  -->  00:04:56,010
And so here we start with for
118

118

00:04:56,010  -->  00:04:58,210
and now we need to introduce a local variable
119

119

00:04:58,210  -->  00:05:00,270
that will loop over all the users
120

120

00:05:00,270  -->  00:05:02,910
of the data that is the training set or the test set.
121

121

00:05:02,910  -->  00:05:05,220
And so we're gonna call this variable id_users
122

122

00:05:07,808  -->  00:05:10,110
and this will take the values of all the ID's
123

123

00:05:10,110  -->  00:05:12,230
of the users in our database.
124

124

00:05:12,230  -->  00:05:16,610
And then we need to specify a range for these user ID's
125

125

00:05:16,610  -->  00:05:20,370
and that will simply going to be older user ID's
126

126

00:05:20,370  -->  00:05:25,290
from one to the max that is the total number of users,
127

127

00:05:25,290  -->  00:05:27,480
which we got in this variable here
128

128

00:05:27,480  -->  00:05:28,440
and so now you understand
129

129

00:05:28,440  -->  00:05:31,130
why we got to create this variable.
130

130

00:05:31,130  -->  00:05:36,130
So, for id_users going from one up to nb_users,
131

131

00:05:38,440  -->  00:05:40,410
but now be careful, there is a trick.
132

132

00:05:40,410  -->  00:05:43,050
The upper bound in a range is excluded
133

133

00:05:43,050  -->  00:05:46,060
and therefore nb_users will not be included here.
134

134

00:05:46,060  -->  00:05:50,070
This will go from one to the number of users minus one.
135

135

00:05:50,070  -->  00:05:54,910
That is 942 and we want it to go up to 943
136

136

00:05:54,910  -->  00:05:57,400
because we want to consider all the users
137

137

00:05:57,400  -->  00:05:59,140
and therefore what we seem to need to do
138

138

00:05:59,140  -->  00:06:03,343
is to add here plus one so that it goes up to 944
139

139

00:06:04,400  -->  00:06:07,400
but 944 will be excluded and therefore,
140

140

00:06:07,400  -->  00:06:11,250
we will go up to 943, which is what we want.
141

141

00:06:11,250  -->  00:06:15,040
Okay, and now, we need to introduce a colon still
142

142

00:06:15,040  -->  00:06:18,180
because of Python syntax, and we press enter
143

143

00:06:18,180  -->  00:06:19,593
to go into the loop.
144

144

00:06:20,650  -->  00:06:23,360
And so now what are we going to do in this loop?
145

145

00:06:23,360  -->  00:06:24,840
Well right now what we want to do
146

146

00:06:24,840  -->  00:06:29,840
is to create the first list of this new data lists.
147

147

00:06:30,060  -->  00:06:32,060
And what is this first list going to be?
148

148

00:06:32,060  -->  00:06:34,740
Well as you understood, that's going to be the ratings
149

149

00:06:34,740  -->  00:06:39,420
of the first user because id_users here starts at one
150

150

00:06:39,420  -->  00:06:41,540
and so we are starting with the first user
151

151

00:06:41,540  -->  00:06:42,870
and so we are starting to add
152

152

00:06:42,870  -->  00:06:45,190
the list of ratings of the first user.
153

153

00:06:45,190  -->  00:06:47,370
And we're gonna add it in this list here,
154

154

00:06:47,370  -->  00:06:49,050
which is the whole list.
155

155

00:06:49,050  -->  00:06:50,430
Okay so now the question is,
156

156

00:06:50,430  -->  00:06:53,200
how can we create the list of all the ratings
157

157

00:06:53,200  -->  00:06:55,170
of the movies by this first user?
158

158

00:06:55,170  -->  00:06:58,290
Well first, what we'll do is get all the movies' ID's
159

159

00:06:58,290  -->  00:07:02,090
of all the movies that were rated by this first user.
160

160

00:07:02,090  -->  00:07:04,020
And so we're gonna put all these movies' ID's
161

161

00:07:04,020  -->  00:07:06,743
into a variable which we're gonna call id_movies.
162

162

00:07:09,410  -->  00:07:12,520
Alright, and this will contain the movies' ID's
163

163

00:07:12,520  -->  00:07:15,070
that were rated by the first user.
164

164

00:07:15,070  -->  00:07:16,670
So how can we get that now?
165

165

00:07:16,670  -->  00:07:20,070
Well, we need to take our data
166

166

00:07:20,070  -->  00:07:22,370
and you can imagine the data to be the training set
167

167

00:07:22,370  -->  00:07:25,070
because then we will apply convert to the training set
168

168

00:07:25,070  -->  00:07:27,070
and so let's say that data is the training set.
169

169

00:07:27,070  -->  00:07:29,510
From the training set, we want to take
170

170

00:07:29,510  -->  00:07:32,790
first the column that contains all the movie ID's
171

171

00:07:32,790  -->  00:07:36,220
and that's the second column, that is of index one.
172

172

00:07:36,220  -->  00:07:37,660
And so that's the first thing we'll do.
173

173

00:07:37,660  -->  00:07:42,660
We'll get the first index of the training set which is one.
174

174

00:07:42,780  -->  00:07:44,930
And then we'll take all the observations
175

175

00:07:44,930  -->  00:07:47,010
and to do this, we use this colon here
176

176

00:07:47,010  -->  00:07:50,090
and we separate the colon and the one by a comma.
177

177

00:07:50,090  -->  00:07:52,850
So here so far we're just taking the whole column
178

178

00:07:52,850  -->  00:07:55,410
of the movies' ID's in the training set.
179

179

00:07:55,410  -->  00:07:58,170
So, so far, we're taking the whole column here.
180

180

00:07:58,170  -->  00:08:00,700
The whole one with all the users.
181

181

00:08:00,700  -->  00:08:04,260
Okay, but now we just want the movies' ID's
182

182

00:08:04,260  -->  00:08:05,720
of this first user.
183

183

00:08:05,720  -->  00:08:08,180
The first user because we are at the beginning of the loop.
184

184

00:08:08,180  -->  00:08:11,540
So how can we only get the ratings of this first user?
185

185

00:08:11,540  -->  00:08:13,530
While I'm explaining, try to pause on the video
186

186

00:08:13,530  -->  00:08:16,370
and try to guess the next thing I'm going to code.
187

187

00:08:16,370  -->  00:08:19,070
So basically what we want is the movies' ID's
188

188

00:08:19,070  -->  00:08:23,300
going from this one up to this one.
189

189

00:08:23,300  -->  00:08:25,560
That is basically we want all the movies' ID's
190

190

00:08:25,560  -->  00:08:27,820
when the first column equals one.
191

191

00:08:27,820  -->  00:08:31,480
So, what we need to do is make some kind of a syntax
192

192

00:08:31,480  -->  00:08:34,780
that will tell we want the first column of the data
193

193

00:08:34,780  -->  00:08:36,050
that is a training set,
194

194

00:08:36,050  -->  00:08:39,490
such that the first column equals one.
195

195

00:08:39,490  -->  00:08:42,770
And the trick to do this in Python is to add
196

196

00:08:42,770  -->  00:08:46,420
a new condition and we add it in a new pair of brackets
197

197

00:08:46,420  -->  00:08:48,200
and inside this new pair of brackets,
198

198

00:08:48,200  -->  00:08:50,080
we are gonna put the condition.
199

199

00:08:50,080  -->  00:08:53,460
And as we said, the condition is that data
200

200

00:08:53,460  -->  00:08:55,480
that is a training set, well actually,
201

201

00:08:55,480  -->  00:08:59,600
the first column of data that has index zero
202

202

00:08:59,600  -->  00:09:03,040
and we take all the lines again, equals equals
203

203

00:09:03,040  -->  00:09:05,390
and so now as we understood we want one,
204

204

00:09:05,390  -->  00:09:09,200
what's one is id_users because id_users starts as one.
205

205

00:09:09,200  -->  00:09:10,913
And so we put id_users.
206

206

00:09:13,110  -->  00:09:15,780
And so this will take all the movies' ID's
207

207

00:09:15,780  -->  00:09:18,170
of the first user.
208

208

00:09:18,170  -->  00:09:19,040
Okay, perfect.
209

209

00:09:19,040  -->  00:09:21,410
We get our movies' ID's and now we're gonna get
210

210

00:09:21,410  -->  00:09:23,900
the same for the ratings, that is,
211

211

00:09:23,900  -->  00:09:27,420
we're gonna get all the ratings of that same first user.
212

212

00:09:27,420  -->  00:09:29,210
And so this is going to be very simple.
213

213

00:09:29,210  -->  00:09:30,700
Now that we get how it works,
214

214

00:09:30,700  -->  00:09:35,120
we're just gonna take this line here, copy it,
215

215

00:09:35,120  -->  00:09:38,910
then past it below and here instead of id_movies
216

216

00:09:38,910  -->  00:09:43,630
we'll create id_ratings and so here that's the same.
217

217

00:09:43,630  -->  00:09:46,300
We want to take all the ratings of the training set
218

218

00:09:46,300  -->  00:09:48,540
and the ratings in the training set
219

219

00:09:48,540  -->  00:09:51,330
are in the third column, that is index two,
220

220

00:09:51,330  -->  00:09:55,060
so here we need to replace one by two
221

221

00:09:55,060  -->  00:09:58,140
so we are taking all the ratings from the training set
222

222

00:09:58,140  -->  00:10:01,140
such that the first column is equal to one.
223

223

00:10:01,140  -->  00:10:03,390
And so this will get us all the ratings
224

224

00:10:03,390  -->  00:10:05,240
given by this first user.
225

225

00:10:05,240  -->  00:10:07,350
Okay and now we have what we need
226

226

00:10:07,350  -->  00:10:09,820
to create this first list
227

227

00:10:09,820  -->  00:10:12,260
that is a list of the ratings of the first user.
228

228

00:10:12,260  -->  00:10:14,060
But be careful, this is not this one
229

229

00:10:14,060  -->  00:10:15,680
because the one we would like to get
230

230

00:10:15,680  -->  00:10:18,610
is not only the ratings of the movies that the user rated,
231

231

00:10:18,610  -->  00:10:21,710
but also the zeroes when the user didn't rate the movie.
232

232

00:10:21,710  -->  00:10:23,600
So what we exactly want to create right now
233

233

00:10:23,600  -->  00:10:27,610
is this list of 1,682 elements
234

234

00:10:27,610  -->  00:10:28,930
where the elements of this list
235

235

00:10:28,930  -->  00:10:31,760
corresponds to 1,682 movies,
236

236

00:10:31,760  -->  00:10:34,870
and for each of the movie, we get the rating of the movie
237

237

00:10:34,870  -->  00:10:36,460
if the user rated the movie
238

238

00:10:36,460  -->  00:10:39,170
and a zero if the user didn't rate the movie.
239

239

00:10:39,170  -->  00:10:40,860
So that's what we want to create right now,
240

240

00:10:40,860  -->  00:10:44,150
and so far with id_ratings, we only have the ratings
241

241

00:10:44,150  -->  00:10:46,320
of the movies that the user rated.
242

242

00:10:46,320  -->  00:10:47,840
So what do we have to do right now?
243

243

00:10:47,840  -->  00:10:52,840
Well we have to create this new list of 1,682 elements.
244

244

00:10:52,930  -->  00:10:56,530
And we're going to initialize it as a list of zeroes.
245

245

00:10:56,530  -->  00:11:01,530
You know we will initialize it as a list of 1,682 zeroes.
246

246

00:11:01,760  -->  00:11:04,530
And then what we're gonna do is that for the movies
247

247

00:11:04,530  -->  00:11:06,500
that the user rated, we will replace
248

248

00:11:06,500  -->  00:11:09,540
the zero by the rating for that movie.
249

249

00:11:09,540  -->  00:11:11,730
The rating of that movie by the user.
250

250

00:11:11,730  -->  00:11:16,730
So let's do this, let's initialize this list of 1,682 movies
251

251

00:11:17,070  -->  00:11:21,060
and so we're gonna call this list ratings equals
252

252

00:11:21,060  -->  00:11:26,060
and to initialize such a list of 1,682 zeroes,
253

253

00:11:26,640  -->  00:11:30,360
we're gonna use numpy which has a shortcut, np,
254

254

00:11:30,360  -->  00:11:32,410
then dot, and then we're gonna use
255

255

00:11:32,410  -->  00:11:35,750
this very practical function that is called zeroes
256

256

00:11:35,750  -->  00:11:38,720
and parenthesis, and inside this parenthesis,
257

257

00:11:38,720  -->  00:11:40,680
we just need to put the number of zeroes
258

258

00:11:40,680  -->  00:11:42,390
we want to have in that list.
259

259

00:11:42,390  -->  00:11:43,450
And so what is it?
260

260

00:11:43,450  -->  00:11:46,063
That is 1,682 and that is nb_movies.
261

261

00:11:47,970  -->  00:11:50,367
So here we input nb_movies.
262

262

00:11:52,410  -->  00:11:54,710
Here we go, that's taking shape.
263

263

00:11:54,710  -->  00:11:56,850
And so now, what we have to do is replace
264

264

00:11:56,850  -->  00:11:59,450
the zeroes by the ratings for the movies
265

265

00:11:59,450  -->  00:12:00,740
that the user rated.
266

266

00:12:00,740  -->  00:12:02,020
So, how do we do that?
267

267

00:12:02,020  -->  00:12:03,400
Well, there is a trick here.
268

268

00:12:03,400  -->  00:12:05,450
Try to guess what I'm going to code next.
269

269

00:12:05,450  -->  00:12:09,060
Well, first of course we need to take our ratings
270

270

00:12:09,060  -->  00:12:10,410
and now what do we do?
271

271

00:12:10,410  -->  00:12:13,430
So we just need to replace the zeroes by the real ratings.
272

272

00:12:13,430  -->  00:12:14,860
When rating there was.
273

273

00:12:14,860  -->  00:12:17,450
So we're gonna try to access the indexes
274

274

00:12:17,450  -->  00:12:19,380
of the ratings that exist.
275

275

00:12:19,380  -->  00:12:21,770
So, I'm gonna add here some brackets,
276

276

00:12:21,770  -->  00:12:24,840
and inside these brackets, we will get the indexes
277

277

00:12:24,840  -->  00:12:26,890
of the movies that were rated.
278

278

00:12:26,890  -->  00:12:29,080
And so what are these indexes?
279

279

00:12:29,080  -->  00:12:32,410
Well, the good news is that we already have them.
280

280

00:12:32,410  -->  00:12:36,400
Because that's exactly id_movies that we created here.
281

281

00:12:36,400  -->  00:12:39,050
That's why we have to create id_movies here.
282

282

00:12:39,050  -->  00:12:42,560
So this id_movies contains all the indexes of the movies
283

283

00:12:42,560  -->  00:12:45,090
that were rated and so that's exactly what we want.
284

284

00:12:45,090  -->  00:12:48,840
So, I'm going to copy these indexes here
285

285

00:12:48,840  -->  00:12:51,650
and paste them in our ratings.
286

286

00:12:51,650  -->  00:12:54,240
Okay but now there is another trick.
287

287

00:12:54,240  -->  00:12:55,400
What is the trick?
288

288

00:12:55,400  -->  00:12:59,260
The trick is that indexes in Python start at zero,
289

289

00:12:59,260  -->  00:13:02,400
and our movies' ID's start at one.
290

290

00:13:02,400  -->  00:13:03,740
And so how do we fix this?
291

291

00:13:03,740  -->  00:13:05,560
Try to guess what I'm about to add.
292

292

00:13:05,560  -->  00:13:07,420
Well we basically need the movies' ID's
293

293

00:13:07,420  -->  00:13:10,780
to start at the same base as the indexes of the ratings.
294

294

00:13:10,780  -->  00:13:15,400
That is zero, and therefore we need to add here a minus one.
295

295

00:13:15,400  -->  00:13:16,810
That way, for example, let's say,
296

296

00:13:16,810  -->  00:13:20,380
that the first user rated the first movie.
297

297

00:13:20,380  -->  00:13:23,290
The first movie has it's id_movies equal to one.
298

298

00:13:23,290  -->  00:13:25,640
But the first movie will be the first element
299

299

00:13:25,640  -->  00:13:27,530
of this ratings list.
300

300

00:13:27,530  -->  00:13:31,580
And the first element of this ratings list has index zero.
301

301

00:13:31,580  -->  00:13:34,790
And therefore, the first movie that has movie_id one,
302

302

00:13:34,790  -->  00:13:38,360
well to put it in the first position of this ratings list,
303

303

00:13:38,360  -->  00:13:40,740
well we need to subtract one so that we get
304

304

00:13:40,740  -->  00:13:43,410
one minus one, that is zero, and therefore,
305

305

00:13:43,410  -->  00:13:44,570
this first movie will have
306

306

00:13:44,570  -->  00:13:46,660
the index zero in this ratings list
307

307

00:13:46,660  -->  00:13:48,820
and therefore will go in first position
308

308

00:13:48,820  -->  00:13:50,610
and not in second position.
309

309

00:13:50,610  -->  00:13:52,830
If we didn't have id_movies minus one,
310

310

00:13:52,830  -->  00:13:54,940
well, id_movies would be equal to one
311

311

00:13:54,940  -->  00:13:57,720
and therefore, it will go in the second position.
312

312

00:13:57,720  -->  00:13:58,900
And that wouldn't make sense.
313

313

00:13:58,900  -->  00:14:01,840
So, that's a thing we must be very careful in Python,
314

314

00:14:01,840  -->  00:14:04,420
but be relieved, that's just practice,
315

315

00:14:04,420  -->  00:14:06,880
if it is your first steps in Python,
316

316

00:14:06,880  -->  00:14:08,890
this will get very obvious soon.
317

317

00:14:08,890  -->  00:14:12,780
So, id_movies minus one, and then what do we need to do?
318

318

00:14:12,780  -->  00:14:15,550
Well, now that we managed to get
319

319

00:14:15,550  -->  00:14:18,320
the indexes of the movies that were rated
320

320

00:14:18,320  -->  00:14:21,090
in this ratings list of all the movies,
321

321

00:14:21,090  -->  00:14:24,930
well, for these movies, we need to give the real ratings.
322

322

00:14:24,930  -->  00:14:27,500
That is, we need to put the real rating of these movies
323

323

00:14:27,500  -->  00:14:29,100
in this ratings list.
324

324

00:14:29,100  -->  00:14:31,420
And so what we need to do is add an equal
325

325

00:14:31,420  -->  00:14:34,110
and since this corresponds to the ratings
326

326

00:14:34,110  -->  00:14:35,820
of the movies that were rated,
327

327

00:14:35,820  -->  00:14:39,320
then this will be equal to the real ratings,
328

328

00:14:39,320  -->  00:14:41,110
and what are the real ratings?
329

329

00:14:41,110  -->  00:14:44,480
Well, double good news, we also already have them.
330

330

00:14:44,480  -->  00:14:47,070
Because they are in id_ratings here.
331

331

00:14:47,070  -->  00:14:49,070
So here we go, we just need to add
332

332

00:14:49,070  -->  00:14:51,310
the real ratings of the movies that were rated,
333

333

00:14:51,310  -->  00:14:53,270
and that is id_ratings.
334

334

00:14:55,430  -->  00:14:58,060
Alright, perfect, we are almost done.
335

335

00:14:58,060  -->  00:15:00,750
Now we managed to create for each user,
336

336

00:15:00,750  -->  00:15:02,580
the list of all the ratings,
337

337

00:15:02,580  -->  00:15:06,460
including the zeroes for the movies that were not rated.
338

338

00:15:06,460  -->  00:15:07,293
Perfect!
339

339

00:15:07,293  -->  00:15:09,740
And so now we have only one thing to do left.
340

340

00:15:09,740  -->  00:15:13,090
That is to add this list of ratings here,
341

341

00:15:13,090  -->  00:15:14,670
corresponding to one user,
342

342

00:15:14,670  -->  00:15:18,900
to this huge list that will contain all the different lists
343

343

00:15:18,900  -->  00:15:20,470
for all the different users.
344

344

00:15:20,470  -->  00:15:22,100
And therefore what we need to do
345

345

00:15:22,100  -->  00:15:25,033
is to take this whole list new_data, underscore data,
346

346

00:15:26,956  -->  00:15:28,370
and now what we're going to do is take
347

347

00:15:28,370  -->  00:15:32,650
another very practical function that is the append function,
348

348

00:15:32,650  -->  00:15:35,990
and that will append this list of ratings here
349

349

00:15:35,990  -->  00:15:39,410
for one user, for the user of the loop, id_users,
350

350

00:15:39,410  -->  00:15:42,640
to this whole new data list.
351

351

00:15:42,640  -->  00:15:44,240
So, how do we do that?
352

352

00:15:44,240  -->  00:15:46,460
Well, we add a dot here, and then we use
353

353

00:15:46,460  -->  00:15:50,470
the append function and inside the parenthesis,
354

354

00:15:50,470  -->  00:15:53,550
we're gonna put this whole list of ratings
355

355

00:15:53,550  -->  00:15:55,360
for this one particular user.
356

356

00:15:55,360  -->  00:15:57,200
And to make sure this is a list,
357

357

00:15:57,200  -->  00:16:01,130
we need to put ratings into the list function,
358

358

00:16:01,130  -->  00:16:02,990
just to make sure it's a list.
359

359

00:16:02,990  -->  00:16:05,310
Alright, because we really need a list of lists
360

360

00:16:05,310  -->  00:16:07,533
because that's exactly what torch expects.
361

361

00:16:08,810  -->  00:16:09,910
Alright, perfect!
362

362

00:16:09,910  -->  00:16:11,070
And now we're done.
363

363

00:16:11,070  -->  00:16:12,120
This function is over.
364

364

00:16:12,120  -->  00:16:13,630
I hope this was not too hard.
365

365

00:16:13,630  -->  00:16:15,730
We had a lot of mechanism to understand,
366

366

00:16:15,730  -->  00:16:17,370
especially with the indexes,
367

367

00:16:17,370  -->  00:16:19,410
but now it's done, congratulations.
368

368

00:16:19,410  -->  00:16:22,120
Our function is ready and now we're going to apply it
369

369

00:16:22,120  -->  00:16:25,270
to our training set and our test set.
370

370

00:16:25,270  -->  00:16:27,760
But before, of course, we're going to add here
371

371

00:16:27,760  -->  00:16:30,130
the final line to return what we want.
372

372

00:16:30,130  -->  00:16:31,000
But that's very simple.
373

373

00:16:31,000  -->  00:16:33,400
We just need to add return
374

374

00:16:33,400  -->  00:16:35,120
and then you know, what we want to return
375

375

00:16:35,120  -->  00:16:37,570
is the list of all the different lists of ratings,
376

376

00:16:37,570  -->  00:16:41,510
and that is new_data of course.
377

377

00:16:41,510  -->  00:16:44,920
So perfect, now the function is really ready.
378

378

00:16:44,920  -->  00:16:47,090
And so now, we are going to apply this function
379

379

00:16:47,090  -->  00:16:49,530
to the training set and the test set
380

380

00:16:49,530  -->  00:16:51,870
and to do this, there is nothing more simple,
381

381

00:16:51,870  -->  00:16:53,940
we just need to take our training set
382

382

00:16:55,150  -->  00:16:59,060
and then we are going to use the convert function on it,
383

383

00:16:59,060  -->  00:17:00,200
and what do we need to input?
384

384

00:17:00,200  -->  00:17:02,260
Well that's of course the training set.
385

385

00:17:02,260  -->  00:17:04,840
The old version of the training set,
386

386

00:17:04,840  -->  00:17:07,170
that is this version right here.
387

387

00:17:07,170  -->  00:17:08,570
And this version right here,
388

388

00:17:08,570  -->  00:17:11,120
is going to become this new version
389

389

00:17:11,120  -->  00:17:13,200
that is an array with the users and lines
390

390

00:17:13,200  -->  00:17:15,200
and the movies and columns.
391

391

00:17:15,200  -->  00:17:18,200
So here we paste training set
392

392

00:17:18,200  -->  00:17:20,380
and now we're gonna do the same for the test set
393

393

00:17:20,380  -->  00:17:23,980
so I'm copying this line and pasting that here
394

394

00:17:23,980  -->  00:17:27,660
and we're gonna replace training set by test set
395

395

00:17:27,660  -->  00:17:32,090
and training set again by test set.
396

396

00:17:32,090  -->  00:17:33,930
Alright, here we go, let's do this.
397

397

00:17:33,930  -->  00:17:37,080
Let's convert our training set and our test set.
398

398

00:17:37,080  -->  00:17:41,090
So first what I'm gonna do is select the whole function,
399

399

00:17:41,090  -->  00:17:42,710
just to define the function,
400

400

00:17:42,710  -->  00:17:46,630
and so I'm going to execute, here we go.
401

401

00:17:46,630  -->  00:17:49,157
And now let's convert to training set
402

402

00:17:49,157  -->  00:17:50,810
and the test set one by one.
403

403

00:17:50,810  -->  00:17:53,060
So we're gonna start with the training set
404

404

00:17:53,060  -->  00:17:54,750
and just to check what we expect
405

405

00:17:54,750  -->  00:17:56,960
because we're gonna lose the old version
406

406

00:17:56,960  -->  00:17:58,100
of the training set.
407

407

00:17:58,100  -->  00:18:00,230
Well let's check if we will get the right values
408

408

00:18:00,230  -->  00:18:01,063
for the first list.
409

409

00:18:01,063  -->  00:18:02,840
That is, for the first user.
410

410

00:18:02,840  -->  00:18:04,410
Well, as you understood,
411

411

00:18:04,410  -->  00:18:06,990
the first list will contain the list of ratings
412

412

00:18:06,990  -->  00:18:09,760
of the first user, that is this user one here,
413

413

00:18:09,760  -->  00:18:11,720
including the zeroes for the movies
414

414

00:18:11,720  -->  00:18:13,140
that this user didn't rate.
415

415

00:18:13,140  -->  00:18:16,770
So here we can see that since the movies ID's started two,
416

416

00:18:16,770  -->  00:18:19,940
well, that means that the user didn't rate the first movie
417

417

00:18:19,940  -->  00:18:21,330
of movie ID one.
418

418

00:18:21,330  -->  00:18:24,430
And therefore the first element of the first list
419

419

00:18:24,430  -->  00:18:26,870
should be a zero and then the second element
420

420

00:18:26,870  -->  00:18:29,080
will be the rating of the second movie
421

421

00:18:29,080  -->  00:18:31,730
and the rating of the second movie is three.
422

422

00:18:31,730  -->  00:18:35,740
So the second element of the first list should be three.
423

423

00:18:35,740  -->  00:18:37,970
And then the third element of this first list
424

424

00:18:37,970  -->  00:18:40,370
will be the rating of movie number three.
425

425

00:18:40,370  -->  00:18:42,400
Because the user rated the movie number three.
426

426

00:18:42,400  -->  00:18:45,370
And the rating of the movie number three is four.
427

427

00:18:45,370  -->  00:18:48,770
So the third element of this first list should be four.
428

428

00:18:48,770  -->  00:18:52,040
So let's just check that in the first list,
429

429

00:18:52,040  -->  00:18:56,050
the three first elements will be zero, three, and four.
430

430

00:18:56,050  -->  00:18:58,280
And then we'll just trust what happens for the rest.
431

431

00:18:58,280  -->  00:19:02,740
So I'm gonna press okay here and I'm going to select
432

432

00:19:02,740  -->  00:19:04,300
this line and here we go,
433

433

00:19:04,300  -->  00:19:06,200
let's hope that it's going to work.
434

434

00:19:06,200  -->  00:19:08,630
Here we go, okay, so first we don't get an error.
435

435

00:19:08,630  -->  00:19:09,463
That's great.
436

436

00:19:09,463  -->  00:19:14,463
Then as you can see, training set is a list of 943 lists.
437

437

00:19:15,040  -->  00:19:17,660
You're gonna see that these 943 elements
438

438

00:19:17,660  -->  00:19:20,910
are going to be lists, so that's another good sign.
439

439

00:19:20,910  -->  00:19:23,150
And so now let's open this training set.
440

440

00:19:23,150  -->  00:19:27,120
Here it is, and as you can see, this huge list
441

441

00:19:27,120  -->  00:19:30,360
contains 943 horizontal lists.
442

442

00:19:30,360  -->  00:19:33,260
So each of these 943 lists corresponds
443

443

00:19:33,260  -->  00:19:35,180
to each user of our database.
444

444

00:19:35,180  -->  00:19:36,670
So this first list corresponds
445

445

00:19:36,670  -->  00:19:38,660
to the ratings of the first user.
446

446

00:19:38,660  -->  00:19:40,640
And so we check that for the first movie,
447

447

00:19:40,640  -->  00:19:42,480
the second movie, and the third movie,
448

448

00:19:42,480  -->  00:19:47,470
the ratings are as expected, zero, three, and four.
449

449

00:19:47,470  -->  00:19:48,303
Perfect!
450

450

00:19:48,303  -->  00:19:49,136
We did it.
451

451

00:19:49,136  -->  00:19:51,390
Alright, and then that's the same for the other users.
452

452

00:19:51,390  -->  00:19:54,360
For each user, we get the ratings of all the movies
453

453

00:19:54,360  -->  00:19:57,810
of the database, and we get a zero if the movie wasn't rated
454

454

00:19:57,810  -->  00:20:00,770
and the real rating, when the user rated the movie.
455

455

00:20:00,770  -->  00:20:03,630
Okay, great, so that works, and now we're going
456

456

00:20:03,630  -->  00:20:06,080
to do the same for the test set.
457

457

00:20:06,080  -->  00:20:07,580
And so we're gonna trust this.
458

458

00:20:07,580  -->  00:20:11,770
We are going to select this line as well, and execute.
459

459

00:20:11,770  -->  00:20:15,130
And here we go, we have our new version of the test set
460

460

00:20:15,130  -->  00:20:18,430
and it still lists of 943 elements
461

461

00:20:18,430  -->  00:20:22,800
and we get the same thing that is a list of lists
462

462

00:20:22,800  -->  00:20:25,440
with all the ratings inside including the zeroes
463

463

00:20:25,440  -->  00:20:29,070
for the movies that the users of the test set didn't rate.
464

464

00:20:29,070  -->  00:20:31,710
Excellent, so I'm going to close this
465

465

00:20:31,710  -->  00:20:33,370
and that's it for this tutorial.
466

466

00:20:33,370  -->  00:20:36,080
Now the next tutorial is going to be much more simple
467

467

00:20:36,080  -->  00:20:38,380
because basically what we'll do is convert
468

468

00:20:38,380  -->  00:20:41,270
these lists of lists into torch tensors
469

469

00:20:41,270  -->  00:20:42,960
because that's exactly now,
470

470

00:20:42,960  -->  00:20:44,920
that we're starting with torch.
471

471

00:20:44,920  -->  00:20:46,880
So, I'm super excited to start.
472

472

00:20:46,880  -->  00:20:49,520
We will create very soon the architecture of our network
473

473

00:20:49,520  -->  00:20:51,270
and until then, enjoy the learning.
