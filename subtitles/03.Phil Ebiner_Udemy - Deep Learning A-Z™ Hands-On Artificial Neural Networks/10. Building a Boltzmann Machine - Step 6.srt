1
1

00:00:00,330  -->  00:00:02,820
<v Instructor>Hello and welcome to this Python tutorial.</v>
2

2

00:00:02,820  -->  00:00:04,230
All right, so in the previous tutorials,
3

3

00:00:04,230  -->  00:00:06,130
we took care of the data pre-processing phase,
4

4

00:00:06,130  -->  00:00:08,920
the common data pre-processing phase for both,
5

5

00:00:08,920  -->  00:00:11,060
our Boltzmann machines and our RBM coders,
6

6

00:00:11,060  -->  00:00:13,620
because we're starting with the same data set,
7

7

00:00:13,620  -->  00:00:15,460
but then to predict two different things.
8

8

00:00:15,460  -->  00:00:16,630
Now we're going to predict
9

9

00:00:16,630  -->  00:00:19,260
if the users are going to like, yes or no, a movie,
10

10

00:00:19,260  -->  00:00:21,320
and in the next part with the (mumbles)
11

11

00:00:21,320  -->  00:00:23,370
we will predict the exact ratings
12

12

00:00:23,370  -->  00:00:25,560
given by the users to a movie.
13

13

00:00:25,560  -->  00:00:28,620
So, from now, from this tutorial until the end of this part,
14

14

00:00:28,620  -->  00:00:31,980
we will make what is specific to Boltzmann machines.
15

15

00:00:31,980  -->  00:00:33,890
And so, the first thing that we have to do,
16

16

00:00:33,890  -->  00:00:35,980
for what is specific to Boltzmann machines,
17

17

00:00:35,980  -->  00:00:38,120
is to convert the ratings.
18

18

00:00:38,120  -->  00:00:40,430
Because right now, we have ratings from one to five,
19

19

00:00:40,430  -->  00:00:42,410
in our training set and test set.
20

20

00:00:42,410  -->  00:00:45,520
Well, we have to convert these ratings into binary ratings.
21

21

00:00:45,520  -->  00:00:49,510
One, that is liked, or zero, that is not liked.
22

22

00:00:49,510  -->  00:00:51,950
And, so why do we have to convert these ratings?
23

23

00:00:51,950  -->  00:00:53,770
Well, that's, of course, because we want to predict
24

24

00:00:53,770  -->  00:00:55,340
some binary ratings.
25

25

00:00:55,340  -->  00:00:57,280
Zero, if the user didn't like the movie
26

26

00:00:57,280  -->  00:00:59,580
and one, if the user liked the movie.
27

27

00:00:59,580  -->  00:01:02,190
But, why do we also need the inputs
28

28

00:01:02,190  -->  00:01:04,840
to have the binary format zero or one?
29

29

00:01:04,840  -->  00:01:06,170
Well, that's simply because,
30

30

00:01:06,170  -->  00:01:08,730
the RBM will take the input vector,
31

31

00:01:08,730  -->  00:01:10,590
and inside this input vector,
32

32

00:01:10,590  -->  00:01:13,110
it will predict the ratings for the movies
33

33

00:01:13,110  -->  00:01:15,940
that were not originally rated by the user.
34

34

00:01:15,940  -->  00:01:18,740
But since these predicted ratings are computed,
35

35

00:01:18,740  -->  00:01:21,950
originally, from the existing ratings of the input vector,
36

36

00:01:21,950  -->  00:01:24,750
well, then the predicted ratings in the output
37

37

00:01:24,750  -->  00:01:26,410
must have the same format
38

38

00:01:26,410  -->  00:01:28,760
as the existing ratings in the input.
39

39

00:01:28,760  -->  00:01:32,590
Otherwise, things would be inconsistent for the RBM.
40

40

00:01:32,590  -->  00:01:33,423
All right.
41

41

00:01:33,423  -->  00:01:34,810
So, let's convert all these ratings
42

42

00:01:34,810  -->  00:01:37,730
into binary ratings, one or zero.
43

43

00:01:37,730  -->  00:01:39,060
So, we have to do this
44

44

00:01:39,060  -->  00:01:41,680
for both the training set and the test set.
45

45

00:01:41,680  -->  00:01:43,460
So, we're gonna start with the training set.
46

46

00:01:43,460  -->  00:01:45,400
And then, we'll just have to copy, paste
47

47

00:01:45,400  -->  00:01:47,590
and do some Command + Ctrl + Replace
48

48

00:01:47,590  -->  00:01:49,840
to replace everything in one shot.
49

49

00:01:49,840  -->  00:01:51,490
So, let's start with the training set.
50

50

00:01:51,490  -->  00:01:54,240
So, we have to take our training set.
51

51

00:01:54,240  -->  00:01:55,730
And, first, what we're gonna do,
52

52

00:01:55,730  -->  00:01:58,910
is replace all the zeroes in this original training set,
53

53

00:01:58,910  -->  00:02:00,460
by minus one.
54

54

00:02:00,460  -->  00:02:01,293
Why's that?
55

55

00:02:01,293  -->  00:02:03,990
It's because all the zeroes in the original training set,
56

56

00:02:03,990  -->  00:02:07,250
all the ratings that were not, actually, existent,
57

57

00:02:07,250  -->  00:02:08,640
these corresponded to the movies
58

58

00:02:08,640  -->  00:02:11,010
that were not rated by the users.
59

59

00:02:11,010  -->  00:02:14,580
But now, since the ratings are gonna become zero and one,
60

60

00:02:14,580  -->  00:02:17,740
well, the original zeroes, must now have another value.
61

61

00:02:17,740  -->  00:02:21,410
And this new value that they're gonna have, is minus one.
62

62

00:02:21,410  -->  00:02:25,410
Now, minus one will mean that there was not a rating
63

63

00:02:25,410  -->  00:02:28,730
for a specific movie, given by a specific user.
64

64

00:02:28,730  -->  00:02:29,780
So, let's do this.
65

65

00:02:29,780  -->  00:02:32,070
To access to these original ratings
66

66

00:02:32,070  -->  00:02:34,680
that were zero in the original data set,
67

67

00:02:34,680  -->  00:02:36,750
well, we need to add some brackets
68

68

00:02:36,750  -->  00:02:38,980
and inside these brackets, we simply need to add
69

69

00:02:38,980  -->  00:02:42,120
the condition that we want to get these ratings.
70

70

00:02:42,120  -->  00:02:44,070
And so, simply, we need to add
71

71

00:02:44,070  -->  00:02:49,060
training set equals equals zero.
72

72

00:02:49,060  -->  00:02:52,030
You know, this can be interpreted as
73

73

00:02:52,030  -->  00:02:55,090
we want to take older values of the training set,
74

74

00:02:55,090  -->  00:02:57,360
such that, the values of the training set
75

75

00:02:57,360  -->  00:02:58,380
are equal to zero.
76

76

00:02:58,380  -->  00:02:59,890
So, basically, we are taking
77

77

00:02:59,890  -->  00:03:02,410
all the zero values of the training set.
78

78

00:03:02,410  -->  00:03:04,470
And for all these zero values in the training set,
79

79

00:03:04,470  -->  00:03:06,100
these zero ratings,
80

80

00:03:06,100  -->  00:03:07,320
well what do we want to do?
81

81

00:03:07,320  -->  00:03:10,830
We want to replace them by minus one.
82

82

00:03:10,830  -->  00:03:14,610
And so now, all the zero ratings will become minus one.
83

83

00:03:14,610  -->  00:03:16,240
All right, so that's the first thing done.
84

84

00:03:16,240  -->  00:03:18,770
Now, we're gonna do the same for the other ratings,
85

85

00:03:18,770  -->  00:03:20,760
that is, the ratings from one to five.
86

86

00:03:20,760  -->  00:03:22,860
So, I'm going to copy this line,
87

87

00:03:22,860  -->  00:03:25,130
because now, things are going to be very easy.
88

88

00:03:25,130  -->  00:03:26,910
I'm going to paste it below.
89

89

00:03:26,910  -->  00:03:29,090
And now, let's take care of the ratings
90

90

00:03:29,090  -->  00:03:33,190
that we want to convert into zero, that is, not liked.
91

91

00:03:33,190  -->  00:03:34,850
So, it would make sense to say
92

92

00:03:34,850  -->  00:03:37,840
that the movies that are not liked by the users
93

93

00:03:37,840  -->  00:03:41,120
are the movies that were given one star or two stars.
94

94

00:03:41,120  -->  00:03:43,630
You know, if you give one star or two stars out of five,
95

95

00:03:43,630  -->  00:03:46,070
then that means, you rather didn't like the movie.
96

96

00:03:46,070  -->  00:03:47,440
So, that's the idea.
97

97

00:03:47,440  -->  00:03:51,070
Now, unfortunately, the Or doesn't work with Torch.
98

98

00:03:51,070  -->  00:03:52,730
You know, in Python we could have said
99

99

00:03:52,730  -->  00:03:55,760
that training set equals equals one
100

100

00:03:55,760  -->  00:03:58,220
or training set equals equals zero.
101

101

00:03:58,220  -->  00:04:01,350
But, here, remember we are with some PyTorch tensors
102

102

00:04:01,350  -->  00:04:04,160
and the Or operator doesn't work like that for PyTorch.
103

103

00:04:04,160  -->  00:04:07,760
So, what we're gonna do is, just separate the two
104

104

00:04:07,760  -->  00:04:09,770
that is, the ratings that were equal to one
105

105

00:04:09,770  -->  00:04:12,390
and the ratings that were equal to two.
106

106

00:04:12,390  -->  00:04:14,690
And we will both, convert them into zero,
107

107

00:04:14,690  -->  00:04:17,160
because in our new ratings format
108

108

00:04:17,160  -->  00:04:20,590
zero corresponds to the movies that the users didn't like.
109

109

00:04:20,590  -->  00:04:24,370
So, here, we put zero instead of minus one.
110

110

00:04:24,370  -->  00:04:25,790
And now, we're gonna do the same
111

111

00:04:25,790  -->  00:04:29,680
for the ratings that were equal to two,
112

112

00:04:29,680  -->  00:04:31,220
in the original training set.
113

113

00:04:31,220  -->  00:04:32,550
So, two here.
114

114

00:04:32,550  -->  00:04:34,500
So, with these two lines here,
115

115

00:04:34,500  -->  00:04:38,010
well, all the ratings that were equal to one or to two,
116

116

00:04:38,010  -->  00:04:41,450
in the original training set, will now be equal to zero.
117

117

00:04:41,450  -->  00:04:43,870
So, that way, we convert all the ratings of the movies
118

118

00:04:43,870  -->  00:04:46,460
that the users didn't like, into zero.
119

119

00:04:46,460  -->  00:04:48,280
And so now, we simply need to do the same
120

120

00:04:48,280  -->  00:04:51,900
for the movies that the users liked.
121

121

00:04:51,900  -->  00:04:53,280
And again, it makes sense to say
122

122

00:04:53,280  -->  00:04:56,080
that the movies that were rated at least three stars
123

123

00:04:56,080  -->  00:04:57,970
were rather liked by the users.
124

124

00:04:57,970  -->  00:05:00,400
So, three stars, four stars, five stars
125

125

00:05:00,400  -->  00:05:01,720
are gonna become one.
126

126

00:05:01,720  -->  00:05:05,600
And so, how can we access these three, four, five stars?
127

127

00:05:05,600  -->  00:05:08,180
Well, we simply need to replace the double equal here
128

128

00:05:08,180  -->  00:05:13,180
by larger and equals, to include, not two but three.
129

129

00:05:14,410  -->  00:05:15,243
All right.
130

130

00:05:15,243  -->  00:05:16,340
So, that means that all the values
131

131

00:05:16,340  -->  00:05:18,590
in the training set that are larger than three,
132

132

00:05:18,590  -->  00:05:19,600
three included,
133

133

00:05:19,600  -->  00:05:22,490
will get the rating, one.
134

134

00:05:22,490  -->  00:05:26,220
So, three, four, five, will become one, in the training set.
135

135

00:05:26,220  -->  00:05:27,080
And that's it.
136

136

00:05:27,080  -->  00:05:30,720
That will convert all our ratings into training sets,
137

137

00:05:30,720  -->  00:05:33,090
as we should for our RBM.
138

138

00:05:33,090  -->  00:05:36,160
We want the RBM to output the ratings in binary format,
139

139

00:05:36,160  -->  00:05:37,000
zero or one,
140

140

00:05:37,000  -->  00:05:40,010
so the inputs must have the same binary format,
141

141

00:05:40,010  -->  00:05:41,890
zero or one.
142

142

00:05:41,890  -->  00:05:43,030
All right. So, perfect.
143

143

00:05:43,030  -->  00:05:45,670
Now, we have to do the same for the test set.
144

144

00:05:45,670  -->  00:05:48,290
And so, what I'm gonna do, to be very efficient,
145

145

00:05:48,290  -->  00:05:50,850
is copy all this, paste it here
146

146

00:05:50,850  -->  00:05:53,130
and now, we're gonna do everything in one shot.
147

147

00:05:53,130  -->  00:05:55,320
We're gonna take the last four lines,
148

148

00:05:55,320  -->  00:05:58,720
press Command + Ctrl + R to replace.
149

149

00:05:58,720  -->  00:06:00,510
And, so here, we're gonna take,
150

150

00:06:00,510  -->  00:06:02,570
we're gonna remove all this.
151

151

00:06:02,570  -->  00:06:04,280
We're gonna type training set
152

152

00:06:06,040  -->  00:06:10,730
and we're gonna replace by test set.
153

153

00:06:10,730  -->  00:06:13,430
And now, we just need to click several times here.
154

154

00:06:13,430  -->  00:06:14,380
And, as you can see,
155

155

00:06:14,380  -->  00:06:18,680
this replaces all the training sets by the test sets.
156

156

00:06:18,680  -->  00:06:20,270
Perfect.
157

157

00:06:20,270  -->  00:06:22,770
So, we can get rid of this.
158

158

00:06:22,770  -->  00:06:24,700
And now, we have everything ready.
159

159

00:06:24,700  -->  00:06:26,240
All the ratings from one to five
160

160

00:06:26,240  -->  00:06:28,570
will be converted into binary ratings
161

161

00:06:28,570  -->  00:06:31,200
in both the training set and the test set.
162

162

00:06:31,200  -->  00:06:33,090
So, we're getting our inputs ready.
163

163

00:06:33,090  -->  00:06:34,810
So, this is ready to be executed.
164

164

00:06:34,810  -->  00:06:36,750
And so, I'm going to select this
165

165

00:06:36,750  -->  00:06:40,090
and press Command + Ctrl + Enter to execute.
166

166

00:06:40,090  -->  00:06:43,720
And now, our inputs are ready to go into the RBM,
167

167

00:06:43,720  -->  00:06:45,620
so that the RBM can do its magic
168

168

00:06:45,620  -->  00:06:47,910
and returns the ratings of the movies
169

169

00:06:47,910  -->  00:06:51,170
that were not originally rated in the input vector.
170

170

00:06:51,170  -->  00:06:53,100
So, that's Unsupervised Deep Learning,
171

171

00:06:53,100  -->  00:06:55,240
and that's exactly how it works.
172

172

00:06:55,240  -->  00:06:56,490
All right, so now, good news.
173

173

00:06:56,490  -->  00:06:58,950
We can move onto the very exciting step.
174

174

00:06:58,950  -->  00:07:00,850
That is the step where we build
175

175

00:07:00,850  -->  00:07:02,740
the architecture of our neural network.
176

176

00:07:02,740  -->  00:07:04,600
That is, the architecture of the RBM.
177

177

00:07:04,600  -->  00:07:06,070
And so, we're gonna make a class.
178

178

00:07:06,070  -->  00:07:08,330
For those of you who don't know what a class is yet,
179

179

00:07:08,330  -->  00:07:09,163
well, don't worry,
180

180

00:07:09,163  -->  00:07:11,110
this is all going to be very intuitive.
181

181

00:07:11,110  -->  00:07:14,110
A class is just a model of something we want to build,
182

182

00:07:14,110  -->  00:07:17,680
or, you know, some instructions of something we wanna build.
183

183

00:07:17,680  -->  00:07:19,010
So, we will make this class,
184

184

00:07:19,010  -->  00:07:22,290
which will define the architecture of the RBM.
185

185

00:07:22,290  -->  00:07:23,490
And then, there is, simply,
186

186

00:07:23,490  -->  00:07:25,810
we will create an object of this class,
187

187

00:07:25,810  -->  00:07:29,740
and this object will be, nothing else than, the RBM model.
188

188

00:07:29,740  -->  00:07:31,860
So, I can't wait to do this in the next tutorial.
189

189

00:07:31,860  -->  00:07:33,710
And, until then, enjoy Deep Learning.
