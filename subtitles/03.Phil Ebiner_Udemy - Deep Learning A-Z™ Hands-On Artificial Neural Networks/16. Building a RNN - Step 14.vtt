WEBVTT
1
1

00:00:00.000  -->  00:00:02.450
<v Narrator>Hello and welcome to this new tutorial.</v>
2

2

00:00:02.450  -->  00:00:05.720
In the previous tutorial, we took care of gathering
3

3

00:00:05.720  -->  00:00:08.600
the right inputs with the right scaling
4

4

00:00:08.600  -->  00:00:12.681
for our predictions of the January 2017 stock prices.
5

5

00:00:12.681  -->  00:00:17.240
And now, now we're ready to make this special 3D structure
6

6

00:00:17.240  -->  00:00:19.660
expected by the Newell network for the training,
7

7

00:00:19.660  -->  00:00:21.710
but also for the predictions.
8

8

00:00:21.710  -->  00:00:26.480
And so I'm gonna go back up to take what we did here
9

9

00:00:26.480  -->  00:00:29.646
with the training set, I'm getting all this
10

10

00:00:29.646  -->  00:00:32.240
and we will make the proper changes.
11

11

00:00:32.240  -->  00:00:34.640
And then of course we will do this, reshaping.
12

12

00:00:34.640  -->  00:00:37.750
But first, let's make this special structure
13

13

00:00:37.750  -->  00:00:41.036
where we have, in each line, the 60 produced stock prices
14

14

00:00:41.036  -->  00:00:44.100
that we need to predict the next stock prices.
15

15

00:00:44.100  -->  00:00:49.100
So I'm getting back here, new line and pasting this.
16

16

00:00:49.270  -->  00:00:50.880
Alright, so now what do we need to change?
17

17

00:00:50.880  -->  00:00:54.820
Very easy, we want to create this special data set structure
18

18

00:00:54.820  -->  00:00:58.528
for our test set and therefore, I'm gonna remove this.
19

19

00:00:58.528  -->  00:01:00.660
y_train, we don't need it anymore.
20

20

00:01:00.660  -->  00:01:02.870
Here, I'm gonna introduce a new variable
21

21

00:01:02.870  -->  00:01:05.300
which I'm gonna call x_test, alright
22

22

00:01:05.300  -->  00:01:08.280
because this will be the input that we'll need
23

23

00:01:08.280  -->  00:01:09.820
to break the values of the test set
24

24

00:01:09.820  -->  00:01:12.676
so that's why I'm calling it x_test to be consistent with
25

25

00:01:12.676  -->  00:01:16.165
the inputs of the training set which we called x_train.
26

26

00:01:16.165  -->  00:01:19.980
So x_test, we won't need a y_test because this time,
27

27

00:01:19.980  -->  00:01:21.400
we're not doing some training.
28

28

00:01:21.400  -->  00:01:23.920
We're directly doing some predictions, so we don't need
29

29

00:01:23.920  -->  00:01:27.266
a ground truth anymore and so that's why I removed y_train
30

30

00:01:27.266  -->  00:01:31.670
and now, in the loop, we need to make some little changes.
31

31

00:01:31.670  -->  00:01:33.170
First the range.
32

32

00:01:33.170  -->  00:01:35.620
So according to you do we need to change the range here?
33

33

00:01:35.620  -->  00:01:38.320
Well, yes of course. But now the question is do we need
34

34

00:01:38.320  -->  00:01:42.090
to change the lower bound, the upper bound, or both?
35

35

00:01:42.090  -->  00:01:44.570
Well, if we keep what we did here,
36

36

00:01:44.570  -->  00:01:47.170
of course we must not change the lower bound.
37

37

00:01:47.170  -->  00:01:50.054
Because to get the 60 produced time steps, since we're doing
38

38

00:01:50.054  -->  00:01:54.740
i-60 here, well of course I must start at 60.
39

39

00:01:54.740  -->  00:01:57.714
But then, for the upper bound, things are different.
40

40

00:01:57.714  -->  00:02:01.570
Remember this was to get the input of the training set
41

41

00:02:01.570  -->  00:02:03.815
and the training set contains the stock prices
42

42

00:02:03.815  -->  00:02:06.700
of five whole financial years.
43

43

00:02:06.700  -->  00:02:10.758
And therefore that's why we had to go up to 1258,
44

44

00:02:10.758  -->  00:02:14.273
but this time, we need to get our input for the test set
45

45

00:02:14.273  -->  00:02:17.953
and the test set contains only 20 financial days
46

46

00:02:17.953  -->  00:02:20.060
and therefore we only need to go up
47

47

00:02:20.060  -->  00:02:24.821
to 60 plus 20 obviously, which is 80.
48

48

00:02:24.821  -->  00:02:29.821
Alright, so with this we will get the 60 previous inputs
49

49

00:02:29.925  -->  00:02:34.920
for each of the stock prices of January 2017
50

50

00:02:34.920  -->  00:02:37.140
which contains 20 financial days.
51

51

00:02:37.140  -->  00:02:39.780
And that's why I will take 20 values
52

52

00:02:39.780  -->  00:02:42.769
corresponding to these 20 financial days.
53

53

00:02:42.769  -->  00:02:44.780
Alright, so now the range is good,
54

54

00:02:44.780  -->  00:02:47.700
we can move on to the next step which is
55

55

00:02:47.700  -->  00:02:52.700
to append in, not x_train but this time x_test
56

56

00:02:53.060  -->  00:02:55.010
the previous stock prices.
57

57

00:02:55.010  -->  00:02:57.170
And the previous stock prices are indeed taken from
58

58

00:02:57.170  -->  00:03:01.720
the range i-60 to i, but this range is taken not from
59

59

00:03:01.720  -->  00:03:04.420
training set scale of course, it is taken from
60

60

00:03:04.420  -->  00:03:08.650
Guess what? Well our inputs of course.
61

61

00:03:08.650  -->  00:03:11.410
That's why we had to make out inputs before.
62

62

00:03:11.410  -->  00:03:13.900
Perfect, and then of course we keep zero here
63

63

00:03:13.900  -->  00:03:16.450
which corresponds to the open Google stock price
64

64

00:03:16.450  -->  00:03:19.631
and anyway there is only one column in our inputs.
65

65

00:03:19.631  -->  00:03:23.860
And then, this line of code we of course need to remove it.
66

66

00:03:23.860  -->  00:03:25.731
That was for the ground truth.
67

67

00:03:25.731  -->  00:03:28.510
We don't need any ground truth for the predictions.
68

68

00:03:28.510  -->  00:03:31.301
And here finally, in the last line of code,
69

69

00:03:31.301  -->  00:03:33.050
we need to do two things.
70

70

00:03:33.050  -->  00:03:36.460
First remove everything that has to do with y_train
71

71

00:03:36.460  -->  00:03:39.310
because we don't need any ground truth anymore.
72

72

00:03:39.310  -->  00:03:40.749
So y_train is removed.
73

73

00:03:40.749  -->  00:03:42.800
And then the second thing is of course
74

74

00:03:42.800  -->  00:03:46.302
to replace x_train by x_test.
75

75

00:03:46.302  -->  00:03:50.282
There we go, x_train replaced by x_test.
76

76

00:03:50.282  -->  00:03:53.570
And that's it, we have our new structure.
77

77

00:03:53.570  -->  00:03:56.580
Not the 3D structure yet, we'll get to that in a second,
78

78

00:03:56.580  -->  00:03:58.951
but we have the structure where we have
79

79

00:03:58.951  -->  00:04:03.180
in each line of observations, that is for each stock prices
80

80

00:04:03.180  -->  00:04:07.040
of January 2017, we have in 60 columns
81

81

00:04:07.040  -->  00:04:10.510
the 60 previous stock prices that we need
82

82

00:04:10.510  -->  00:04:12.750
to predict the next stock price.
83

83

00:04:12.750  -->  00:04:17.600
Alright, good, so, now, time to get the 3D format,
84

84

00:04:17.600  -->  00:04:20.630
the 3D structure and we're gonna do that efficiently.
85

85

00:04:20.630  -->  00:04:23.510
As usual, we're gonna copy this line
86

86

00:04:24.550  -->  00:04:29.010
There we go and paste it right here.
87

87

00:04:29.010  -->  00:04:32.530
Alright, and now very easy change to make we simply need
88

88

00:04:32.530  -->  00:04:36.341
to replace all the x_trains here by of course x_test.
89

89

00:04:36.341  -->  00:04:39.749
So let's do this, x_train replaced by x_test
90

90

00:04:39.749  -->  00:04:44.749
x_train replaced by x_test, x_train replaced by x_test
91

91

00:04:46.490  -->  00:04:49.800
and eventually, x_train replaced by x_test.
92

92

00:04:49.800  -->  00:04:53.185
Perfect, and nothing else. All good now.
93

93

00:04:53.185  -->  00:04:56.990
Alright, and now I have some incredible news for you.
94

94

00:04:56.990  -->  00:04:59.810
We are ready to make the predictions.
95

95

00:04:59.810  -->  00:05:02.580
We have the right 3D structure of our inputs
96

96

00:05:02.580  -->  00:05:05.980
contained in x_test, that's exactly what is expecting
97

97

00:05:05.980  -->  00:05:08.280
our recurrent neural network regressor
98

98

00:05:08.280  -->  00:05:10.530
and therefore we are ready to apply
99

99

00:05:10.530  -->  00:05:12.312
the predict method from this regressor
100

100

00:05:12.312  -->  00:05:17.312
to get our predicted stock prices of January 2017.
101

101

00:05:17.440  -->  00:05:20.662
So let's do this, time for the real deal now.
102

102

00:05:20.662  -->  00:05:24.015
We are going to take our regressor
103

103

00:05:24.015  -->  00:05:29.015
and from this regressor we apply the predict method
104

104

00:05:29.050  -->  00:05:32.730
to which we need to input, of course, x_test.
105

105

00:05:32.730  -->  00:05:35.260
X_test, that contains our inputs in the right format
106

106

00:05:35.260  -->  00:05:37.871
to predict the stock prices of January 2017.
107

107

00:05:37.871  -->  00:05:41.360
Perfect, but this returns actually something,
108

108

00:05:41.360  -->  00:05:43.893
it returns the predictions, so we're gonna store
109

109

00:05:43.893  -->  00:05:46.540
these predictions in a new variable
110

110

00:05:46.540  -->  00:05:49.150
that we're gonna call, well, to be consistent with
111

111

00:05:49.150  -->  00:05:51.722
the real Google stock price, we're gonna call it
112

112

00:05:51.722  -->  00:05:53.660
predicted Google stock price,
113

113

00:05:53.660  -->  00:05:56.760
we'll have the real Google stock price in real stock price
114

114

00:05:56.760  -->  00:05:58.410
and the predicted Google stock price,
115

115

00:05:58.410  -->  00:06:01.690
in predicted stock price, so there we go, let's add
116

116

00:06:01.690  -->  00:06:05.790
predicted underscore stock underscore price
117

117

00:06:05.790  -->  00:06:08.780
which is equal to what is returned by
118

118

00:06:08.780  -->  00:06:11.510
the predict method taken from our regressor
119

119

00:06:11.510  -->  00:06:15.010
and applied to the right input contained in x_test.
120

120

00:06:15.010  -->  00:06:17.110
Perfect, that gives us the prediction and now,
121

121

00:06:17.110  -->  00:06:20.890
now we have to do one last final little thing.
122

122

00:06:20.890  -->  00:06:22.160
Guess what it is?
123

123

00:06:22.160  -->  00:06:27.160
It is of course to inverse the scaling of our predictions
124

124

00:06:27.220  -->  00:06:30.660
because of course our regressor was trained to predict
125

125

00:06:30.660  -->  00:06:34.260
the scaled values of the stock price, but no worries.
126

126

00:06:34.260  -->  00:06:38.300
To get the original scale of these scaled predicted values
127

127

00:06:38.300  -->  00:06:41.560
we simply need to apply the inverse transform method
128

128

00:06:41.560  -->  00:06:44.460
from our scaling sc object.
129

129

00:06:44.460  -->  00:06:46.591
Alright, so that's the last thing we need to do here
130

130

00:06:46.591  -->  00:06:50.140
and we'll be done with this new step here
131

131

00:06:50.140  -->  00:06:52.970
getting the predicted stock price of 2017.
132

132

00:06:52.970  -->  00:06:57.260
Let's do this, we get our predicted stock price
133

133

00:06:58.320  -->  00:07:01.750
because we're gonna update it with the right scale
134

134

00:07:01.750  -->  00:07:03.770
of our Google stock price values.
135

135

00:07:03.770  -->  00:07:06.372
So, predicted stock price equals
136

136

00:07:06.372  -->  00:07:09.696
and then we take our sc object, our scaling object,
137

137

00:07:09.696  -->  00:07:12.050
dot and that's where we apply
138

138

00:07:12.050  -->  00:07:16.947
the inverse underscore transform method
139

139

00:07:16.947  -->  00:07:19.570
to which we're gonna apply of course
140

140

00:07:19.570  -->  00:07:21.970
the predicted stock price.
141

141

00:07:21.970  -->  00:07:24.185
I'm copying it, I'm tired of typing,
142

142

00:07:24.185  -->  00:07:25.480
(laughs)
143

143

00:07:25.480  -->  00:07:27.072
and pasting it here
144

144

00:07:27.072  -->  00:07:29.600
sc inverse transform predicted stock price.
145

145

00:07:29.600  -->  00:07:33.720
Perfect, now time to execute.
146

146

00:07:33.720  -->  00:07:37.680
So without further ado, let's select all this section
147

147

00:07:37.680  -->  00:07:40.730
and get our final predictions.
148

148

00:07:40.730  -->  00:07:43.100
And in a flashlight, we just got them.
149

149

00:07:43.100  -->  00:07:46.550
Perfect, these are right here in predicted stock price.
150

150

00:07:46.550  -->  00:07:47.900
Let's have a look at them.
151

151

00:07:47.900  -->  00:07:51.590
So these are predictions, this looks right at first sight
152

152

00:07:51.590  -->  00:07:54.100
because this is indeed in the range of
153

153

00:07:54.100  -->  00:07:57.780
the Google stock prices in the months of January 2017.
154

154

00:07:57.780  -->  00:08:01.440
But we cannot realize yet if it follows approximately
155

155

00:08:01.440  -->  00:08:05.292
the trend of the real Google stock price of January 2017.
156

156

00:08:05.292  -->  00:08:09.161
But no worries we'll check that exactly in the next tutorial
157

157

00:08:09.161  -->  00:08:12.952
when visualizing the final results.
158

158

00:08:12.952  -->  00:08:15.070
Until then, enjoy deep learning
