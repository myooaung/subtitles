1
00:00:04,480 --> 00:00:05,910
Hello welcome in this lecture.

2
00:00:05,920 --> 00:00:13,870
We are going to be creating waypoints as you can see here and we are going to be having ways to manipulate

3
00:00:13,990 --> 00:00:16,990
said waypoints and be able to visualize them.

4
00:00:16,990 --> 00:00:23,830
So let's dive in and see how we can visualize waypoints so we're gonna need waypoints which are effectively

5
00:00:23,860 --> 00:00:31,020
just a set of points our transforms around the world so they don't necessarily have to be transforms

6
00:00:31,030 --> 00:00:38,710
that's just an example but they you want a series of vectors you want to say first go to this points

7
00:00:38,740 --> 00:00:42,970
then to this point then to this point then return back to the first points and so on.

8
00:00:42,970 --> 00:00:45,770
So you end up with this loop of points.

9
00:00:45,790 --> 00:00:52,600
Now one easy way to do this in unity is to create a parent object.

10
00:00:52,720 --> 00:00:54,100
So I'm going to create an empty game object.

11
00:00:54,130 --> 00:01:01,150
I'm going to call this one the patrol path and this is going to be the route of our patrol.

12
00:01:01,150 --> 00:01:04,000
Then we can create a new empty sub.

13
00:01:04,000 --> 00:01:08,460
Game Objects and this can be the first waypoint like so.

14
00:01:08,500 --> 00:01:16,540
So we've got this waypoint and we can then take this waypoint and we can duplicate it and we can move

15
00:01:16,540 --> 00:01:17,170
that point.

16
00:01:17,200 --> 00:01:22,090
So what we're ending up with is waypoint here waypoint they're duplicated again and got another waypoint

17
00:01:22,090 --> 00:01:23,380
here.

18
00:01:23,380 --> 00:01:24,330
And this will work.

19
00:01:24,340 --> 00:01:31,630
We can use this in our code to set up a waypoint system but the problem is that it's really hard to

20
00:01:31,630 --> 00:01:32,210
visualize.

21
00:01:32,250 --> 00:01:38,890
When you click on this patrol path you cannot see the waypoints that the character needs to be following.

22
00:01:38,920 --> 00:01:42,160
So good but also not good enough.

23
00:01:42,400 --> 00:01:45,700
So how can we make this a little bit better.

24
00:01:45,700 --> 00:01:49,860
Well with a bit more gizmo visualization like we've already been doing.

25
00:01:50,230 --> 00:01:57,760
So the idea is that you'd have points to visualize each of these different game objects and in between

26
00:01:57,760 --> 00:01:59,810
them in the next lecture that will be dealing with this.

27
00:01:59,830 --> 00:02:05,260
You would draw lines to show you that that's how they're connected because if you've got a group of

28
00:02:05,800 --> 00:02:10,330
waypoints do you go from this one then that one then that one or which order do you do them.

29
00:02:10,330 --> 00:02:15,400
So it's important to be able to see that from the device designer's perspective and you can always add

30
00:02:15,400 --> 00:02:20,590
more waypoints to the path by just adding more empty game object by duplicating these waypoints.

31
00:02:20,590 --> 00:02:28,550
So that is the idea let's start off by creating a new script in control and we're going to create a

32
00:02:28,570 --> 00:02:35,300
C sharp script and this is going to be the patrol path script.

33
00:02:35,350 --> 00:02:37,060
Now let's open it up in Visual Studio.

34
00:02:37,060 --> 00:02:43,000
Code and I'm going to pop it in a namespace song and cut it out.

35
00:02:43,260 --> 00:02:46,270
Create the namespace RPG.

36
00:02:46,290 --> 00:02:51,120
We've already got one for control so just auto complete it and then paste that class back in.

37
00:02:51,210 --> 00:02:53,850
So we do we need start do we need update.

38
00:02:53,850 --> 00:02:54,930
Probably not.

39
00:02:54,930 --> 00:02:56,640
Probably not at the moment.

40
00:02:56,640 --> 00:03:02,360
All we need to be able to do in here is to draw the gizmos for these waypoints.

41
00:03:02,370 --> 00:03:07,490
So we are going to need an on draw gizmos.

42
00:03:07,740 --> 00:03:13,000
And at the moment do we want to do it when it's only when the path is selected.

43
00:03:13,050 --> 00:03:19,260
Well probably not for right now just to make it easier for us to visualize the waypoints that are in

44
00:03:19,260 --> 00:03:22,230
the world and then what do we need to do.

45
00:03:22,830 --> 00:03:25,090
Well there's two possible approaches here.

46
00:03:25,100 --> 00:03:31,680
You could have a script that we put on every single waypoint and each waypoint is responsible for visualizing

47
00:03:31,680 --> 00:03:35,550
itself but that doesn't give you the full picture because it doesn't tell you about the relationships

48
00:03:35,550 --> 00:03:40,800
between the waypoints and we do want to fundamentally know the relationship between the waypoints be

49
00:03:40,800 --> 00:03:45,150
able to progress waypoints know which one is the fault next waypoint and so on so forth.

50
00:03:45,150 --> 00:03:52,020
So having a script on patrol path itself is going to be the easier way in my opinion because then an

51
00:03:52,020 --> 00:03:58,020
enemy can have a reference a patrol path and that automatically gives it the whole set of waypoints

52
00:03:58,050 --> 00:04:00,300
and that's gonna be easier to manage.

53
00:04:00,300 --> 00:04:06,450
So what we're gonna have to do in on draw gizmos is we're going to have to cycle through all the waypoints.

54
00:04:06,450 --> 00:04:11,220
Now I'm going to do this in the typical kind of int for loop.

55
00:04:11,220 --> 00:04:15,510
You may need to use the arrow keys to select a different entry here it might not be the first for you

56
00:04:15,510 --> 00:04:17,870
it's kind of an order of most frequently used.

57
00:04:18,300 --> 00:04:22,200
And if this menu ever disappears for you you can bring it up with controlled space.

58
00:04:22,260 --> 00:04:26,550
There are two for loops as you probably know there is a for each loop which goes over every item in

59
00:04:26,550 --> 00:04:33,610
the collection you can do this for iterating over all of your children in their child game objects.

60
00:04:33,900 --> 00:04:40,110
But I am going to use the integer one because we are going to want to be able to reference the previous

61
00:04:40,110 --> 00:04:43,450
waypoints as well as the current one in order to draw this line.

62
00:04:43,450 --> 00:04:47,990
So I'm thinking ahead to the next lecture so we're going to do this for each loop.

63
00:04:48,000 --> 00:04:49,590
What's the length going to be.

64
00:04:49,590 --> 00:04:56,850
Well we can access the children and everything about children through the transform because the transform

65
00:04:56,850 --> 00:04:59,700
is what manages this parenting hierarchy.

66
00:05:00,030 --> 00:05:05,040
So the transform knows how many children it's got it knows how to access the children and so on and

67
00:05:05,040 --> 00:05:05,930
so forth.

68
00:05:05,940 --> 00:05:11,260
So if I do transform dot I think it's called child count.

69
00:05:11,440 --> 00:05:13,510
That tells us how many children there are.

70
00:05:13,510 --> 00:05:18,670
So now there's full loop is going to go from zero to the child count minus one.

71
00:05:18,850 --> 00:05:23,590
So in our case it's gonna be 0 1 2.

72
00:05:23,590 --> 00:05:25,390
And you can see there even numbered this way.

73
00:05:25,390 --> 00:05:31,180
We've got a waypoint zero waypoint one waypoint to that kind of makes it easier for us automatically

74
00:05:31,180 --> 00:05:37,000
and if we duplicate the waypoint one more time we've got waypoint 3 and the child count will be adjusted

75
00:05:37,990 --> 00:05:39,070
accordingly.

76
00:05:39,130 --> 00:05:46,840
Now if we want to get hold of a child in here I'm not quite going to tell you how to do that but the

77
00:05:46,840 --> 00:05:52,870
hint is that you can do it from a function of transform dot so you can do transform dot and then have

78
00:05:52,870 --> 00:05:58,690
a look through the options there have a look in the unity documentation to see what your options are.

79
00:05:58,690 --> 00:06:02,540
So it's challenge time to draw the waypoint gizmos.

80
00:06:02,740 --> 00:06:10,610
I'd like you to get the child transform and that's what I'm hinting at here how do you get hold of the

81
00:06:10,940 --> 00:06:17,530
zero child the first child so on and so forth then draw a gizmo for each I'll leave that up to you you

82
00:06:17,530 --> 00:06:23,710
can revise your knowledge of gizmos from the previous lecture and as a hint coming so if you want to

83
00:06:23,710 --> 00:06:31,440
try this challenge without the hint pose a video now and here's the hints that transform dot get child

84
00:06:31,560 --> 00:06:37,490
is what you want to get hold of to get hold of a child transform and you can see that there isn't going

85
00:06:37,490 --> 00:06:41,150
to be an argument in here and I'll leave that to you to figure out what to put in that.

86
00:06:41,970 --> 00:06:50,710
Okay so we're going to do gizmos dot draw and this time I'm going to draw a sphere and not a wide sphere

87
00:06:50,740 --> 00:06:56,560
because they're going to be smaller so we're gonna draw a sphere what does that require requires us

88
00:06:56,560 --> 00:07:02,690
to know what the center of the sphere is gonna be and that's gonna be the position of the child transform

89
00:07:02,710 --> 00:07:12,610
so we're gonna transform dot get child as mentioned in the hint and the index is going to be eye from

90
00:07:12,610 --> 00:07:15,270
the for loop so the zero.

91
00:07:15,480 --> 00:07:18,710
First second third child and so on.

92
00:07:18,820 --> 00:07:23,310
Then we need a vector so we're gonna get a position of this.

93
00:07:23,800 --> 00:07:28,750
And then finally we need to know how what the radius of this sphere is going to be.

94
00:07:28,750 --> 00:07:37,650
Now we don't like having magic numbers so I'm going to create a contest float up here which is going

95
00:07:37,650 --> 00:07:42,120
to be the waypoint gizmo radius.

96
00:07:42,210 --> 00:07:50,730
I'm gonna set this to point three f the moments and you could play around with that obviously see what

97
00:07:50,730 --> 00:07:52,470
works for you.

98
00:07:52,480 --> 00:07:56,360
Now let's see whether we've got some gizmos over in the world okay.

99
00:07:56,370 --> 00:08:00,360
I'm seeing things they're a bit transparent because I think they are underground.

100
00:08:00,360 --> 00:08:05,820
So what I'm gonna do is I can pull it up so there above the ground and we can see the gizmos.

101
00:08:05,820 --> 00:08:12,440
That's great but I'm also going to create a prefab for this should I bother with a prefab.

102
00:08:12,440 --> 00:08:13,550
Probably yes.

103
00:08:13,560 --> 00:08:17,920
I think if we were to change this we don't want the same file to necessarily change.

104
00:08:17,940 --> 00:08:20,780
So I'm gonna go over in two.

105
00:08:20,910 --> 00:08:28,710
I think game characters and I can bring the patrol path in here as a prefab and if we have multiple

106
00:08:28,710 --> 00:08:35,770
of these we can just drag in a patrol path over here and it's given us a starting point of a few waypoints

107
00:08:35,790 --> 00:08:37,890
to go for.

108
00:08:38,320 --> 00:08:40,090
That's the first patrol path.

109
00:08:40,090 --> 00:08:49,940
Let's get the second one drag it down to the bottom here and then we are going to we can drag around

110
00:08:49,940 --> 00:08:56,260
these waypoints separately which is going to create an override compared with the prefab parents.

111
00:08:56,270 --> 00:09:01,120
But that's okay and they'll get it we've got ourselves some waypoints.

112
00:09:01,140 --> 00:09:07,420
We've got some visualizations of these waypoints and we'll soon be able to get our enemy to follow them.

113
00:09:07,430 --> 00:09:11,240
But before that I want to complete the visualization by putting these lines in and that's gonna be the

114
00:09:11,240 --> 00:09:12,940
subject of the next lecture.
