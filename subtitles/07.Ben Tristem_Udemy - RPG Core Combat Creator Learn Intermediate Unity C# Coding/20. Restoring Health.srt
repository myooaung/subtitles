1
00:00:04,590 --> 00:00:08,640
Hello and welcome to this lecture where we are going to be civilising the health component it means

2
00:00:08,640 --> 00:00:15,100
if I kill this god in this like lecture and this level rather go over into seem to then go back that

3
00:00:15,120 --> 00:00:17,310
God is still going to be dead.

4
00:00:17,310 --> 00:00:18,810
Fantastic stuff.

5
00:00:18,810 --> 00:00:20,910
Let's dive in and see how it's done.

6
00:00:20,940 --> 00:00:25,260
So this lecture might as well just be a great big challenge because what we're going to do is implement

7
00:00:25,260 --> 00:00:27,060
the ice savable interface.

8
00:00:27,090 --> 00:00:30,360
Now if you do want a bit of help with this then we can follow along.

9
00:00:30,360 --> 00:00:34,650
If you think you can implement the IceSave bill interface for the health component and go ahead and

10
00:00:34,650 --> 00:00:36,010
do that right away.

11
00:00:36,330 --> 00:00:36,570
OK.

12
00:00:36,600 --> 00:00:41,730
So what we're going to do first of all is inherit from the Icesave.

13
00:00:41,740 --> 00:00:47,310
We're obviously not really inheriting from it cause we're gonna inherit from one thing but we are having

14
00:00:47,310 --> 00:00:50,900
it as an interface against our health component.

15
00:00:50,910 --> 00:00:56,730
So I'm going to need to include the using RPG saving namespace and then I'm still got an error here

16
00:00:56,730 --> 00:01:01,770
because it's saying I don't properly implement this interface so I'm gonna go ahead and implement it

17
00:01:01,770 --> 00:01:03,650
get it to implement it for me.

18
00:01:03,730 --> 00:01:04,140
It's great.

19
00:01:04,140 --> 00:01:10,470
Two methods one of which is the capture state which I'm going to stick at the bottom and the other one

20
00:01:10,590 --> 00:01:13,470
is the restore state in here.

21
00:01:13,470 --> 00:01:16,820
So these two methods are what we're going to work with.

22
00:01:16,860 --> 00:01:19,620
And first of all there's the capture state.

23
00:01:19,680 --> 00:01:25,410
What are we going to return out of capture state to capture the state of our health component may a

24
00:01:25,410 --> 00:01:26,310
little challenge for you.

25
00:01:26,300 --> 00:01:30,930
There have a little think what we're going to return is the health points.

26
00:01:30,990 --> 00:01:37,950
So if we return health points is there any problem with that is health points something say realizable

27
00:01:38,800 --> 00:01:39,900
it is a float.

28
00:01:39,900 --> 00:01:45,720
So is the realizable by the C shop built in systems so we can just return health points.

29
00:01:45,720 --> 00:01:50,050
Now the tricky bit is going to be here where we actually want to restore the state.

30
00:01:50,070 --> 00:01:54,440
One thing is we've got to get the Health points out of the state so we might need to do some casting

31
00:01:54,450 --> 00:01:55,410
first of all.

32
00:01:55,530 --> 00:02:02,580
And then second thing is that if we are dead once we restore the state we need to cool add dying code

33
00:02:02,640 --> 00:02:04,720
as if we had died in the level.

34
00:02:04,860 --> 00:02:06,530
So that is a challenge for you.

35
00:02:06,540 --> 00:02:07,170
Two steps.

36
00:02:07,170 --> 00:02:16,050
First of all we want to restore the health points and then possibly die as well.

37
00:02:16,060 --> 00:02:17,490
So that is our challenge.

38
00:02:17,500 --> 00:02:21,460
Two steps for you post a video and have a go okay.

39
00:02:21,490 --> 00:02:25,130
So first thing restoring the health points we want to use a cast here.

40
00:02:25,130 --> 00:02:32,560
So health points equals and then we can do a cast because we know the type should be float of this state

41
00:02:32,750 --> 00:02:35,720
is a higher level abstraction.

42
00:02:35,740 --> 00:02:36,570
It's an object.

43
00:02:36,580 --> 00:02:38,060
So it could be any sorts of thing.

44
00:02:38,080 --> 00:02:42,480
But if we cast it down we can make sure it's back to being a float.

45
00:02:42,550 --> 00:02:45,820
So we should get our health points out here and then possibly we want to die.

46
00:02:45,820 --> 00:02:46,960
When do we want to die.

47
00:02:46,960 --> 00:02:52,960
Well if the health points for whatever reason are less than or equal to zero up above we've got equal

48
00:02:52,960 --> 00:02:53,560
to zero.

49
00:02:53,590 --> 00:02:57,940
But I'm gonna have less than an equal to zero just in case something went wrong in the serialization

50
00:02:57,940 --> 00:02:59,400
we had minus health points.

51
00:02:59,440 --> 00:03:02,490
We just want to kill off the character we've got our die code here.

52
00:03:02,500 --> 00:03:04,990
I'm just gonna go ahead and call that.

53
00:03:05,020 --> 00:03:06,700
So that's pretty much all we have to do.

54
00:03:06,730 --> 00:03:12,070
That's how easy it's gonna be from now on whenever we add a new components with some state that we want

55
00:03:12,070 --> 00:03:12,580
to save.

56
00:03:12,610 --> 00:03:14,560
We just need to implement IceSave bill.

57
00:03:14,590 --> 00:03:21,040
Make sure it has a safe Bill entity on the object that has this component and then we are golden.

58
00:03:21,040 --> 00:03:24,850
So if we give this a go I'm going to go ahead and hit play.

59
00:03:24,850 --> 00:03:26,830
We've got loads of extra guards in the scene now.

60
00:03:26,980 --> 00:03:30,140
I've got a rogue safe Falun Gong delete.

61
00:03:30,370 --> 00:03:35,520
This one's been left over from my prototyping so it's just delete that save file and go and hit play.

62
00:03:35,520 --> 00:03:40,990
Now we shouldn't have any save file at all so I'll go over and we've got lots of extra guards here I'm

63
00:03:40,990 --> 00:03:43,140
just gonna go and pick one off.

64
00:03:43,180 --> 00:03:48,020
Kill him and I want to point out to you see daisies.

65
00:03:48,030 --> 00:03:51,170
I didn't mean to go into their attention maybe I'll kill them off too.

66
00:03:51,420 --> 00:03:57,170
So I wanted to point out to you that the player's health is obviously going down quite low actually.

67
00:03:57,170 --> 00:03:59,850
Hopefully I can kill this guy before I run out of health.

68
00:04:00,090 --> 00:04:00,330
Okay.

69
00:04:00,360 --> 00:04:01,410
Yes I did.

70
00:04:01,410 --> 00:04:07,830
And I've got health points of 40 I'm gonna go over to the next scene to be lowered into our same sandbox

71
00:04:07,830 --> 00:04:08,490
too.

72
00:04:08,520 --> 00:04:12,720
And if I go and have a look at the player his health is still 40 points.

73
00:04:12,720 --> 00:04:16,280
Why is that because they share the unique identifier between the two scenes.

74
00:04:16,620 --> 00:04:22,170
So when we loaded Scene Two We loaded all the health of our character from Scene 1 so he's still down

75
00:04:22,260 --> 00:04:27,600
40 points but if I go back into scene one go over to the bridge you can see that all the guards are

76
00:04:27,600 --> 00:04:29,930
where they were and they're also dead.

77
00:04:30,000 --> 00:04:32,970
Which is perfect because our code has told him to do that.

78
00:04:33,090 --> 00:04:36,890
Fantastic so we've learnt how I say was going to make our life super easy.

79
00:04:36,960 --> 00:04:40,980
And I just want to reassure you that if you start the level and all the state is loaded back in and

80
00:04:40,980 --> 00:04:45,360
that's not what you wanted you can easily get rid of that behavior just by deleting the save file and

81
00:04:45,360 --> 00:04:47,820
it will start from scratch in the next lecture.

82
00:04:47,820 --> 00:04:53,680
We're going to look at how we can do proper reloading of the last scene.

83
00:04:53,700 --> 00:04:59,040
We were in but first I want to show you a another issue that we have.

84
00:04:59,040 --> 00:05:04,860
If I were to go ahead at this point and build my game we are going to get lots of errors.

85
00:05:04,860 --> 00:05:12,090
You can try it out for yourself and the errors will be emanating from our salable entity particularly

86
00:05:12,090 --> 00:05:18,930
where we are using these serialized objects and serialized properties because these came from our unity

87
00:05:19,200 --> 00:05:23,600
editor namespace and they don't exist in the built game.

88
00:05:23,610 --> 00:05:25,810
You can't have those objects around.

89
00:05:25,860 --> 00:05:31,500
So what we have to do is we have to exclude them that exclude the code completely basically remove the

90
00:05:31,500 --> 00:05:31,890
code.

91
00:05:31,890 --> 00:05:40,260
In the case that we're building and we can do this by doing an if Unity Editor unity underscore editor

92
00:05:41,310 --> 00:05:44,640
and this is a C saying if we're in the editor then you can include this code.

93
00:05:44,640 --> 00:05:51,840
Otherwise remove it and then I'm going to do an end if a hash and if so you may not have seen the syntax

94
00:05:51,840 --> 00:05:58,050
before but this syntax basically runs when your code is being compiled and can conditionally remove

95
00:05:58,110 --> 00:05:59,310
entire blocks of code.

96
00:05:59,310 --> 00:06:04,050
So we're removing this update because if it's in the built game we don't need this update to be running

97
00:06:04,230 --> 00:06:05,250
at all.

98
00:06:05,250 --> 00:06:05,640
Okay.

99
00:06:05,640 --> 00:06:07,680
So that's what I wanted to do.

100
00:06:07,680 --> 00:06:11,430
Now hopefully if you go ahead and hit build it should work for you.

101
00:06:11,430 --> 00:06:13,870
You can create whatever builds that you want to.

102
00:06:13,910 --> 00:06:18,780
So I'm gonna go ahead and hit build and pause a video and see whether it is going to successfully build

103
00:06:18,780 --> 00:06:19,160
for me.

104
00:06:20,250 --> 00:06:22,950
And here is what pops up if it has built yes it has.

105
00:06:22,950 --> 00:06:23,670
Fantastic.

106
00:06:23,670 --> 00:06:27,820
I'm just gonna go ahead and hit play in windowed mode and it pops up.

107
00:06:27,830 --> 00:06:35,350
Here's my project loads up loads up in a very random location probably because of my save file which

108
00:06:35,350 --> 00:06:38,100
we're gonna have a look at in the next lecture so I'll see that.
