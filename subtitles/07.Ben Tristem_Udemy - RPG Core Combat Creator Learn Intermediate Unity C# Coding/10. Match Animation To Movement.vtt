WEBVTT
1
00:00:04.210 --> 00:00:04.750
Welcome again.

2
00:00:04.750 --> 00:00:09.040
This is going to be a longer video but very meaningful because we'll have our character running around

3
00:00:09.100 --> 00:00:12.610
in a way that makes sense starting and stopping and spinning on the spot.

4
00:00:12.610 --> 00:00:14.230
So let's jump in and get started.

5
00:00:14.230 --> 00:00:20.080
Let's start by looking our player so click on your player and we can see that if we go to our players

6
00:00:20.140 --> 00:00:23.110
animator we have a animated controller.

7
00:00:23.110 --> 00:00:25.180
We've created this already but I haven't put it in yet.

8
00:00:25.180 --> 00:00:28.970
So let's click on the selector and then add our character.

9
00:00:28.990 --> 00:00:33.940
So that means the animated controller which contains our blend tree that we have here is now attached

10
00:00:33.940 --> 00:00:36.190
to our animator which is attached to our player.

11
00:00:36.190 --> 00:00:39.010
Now for the Avatar we don't need to go to a lot of details for this.

12
00:00:39.010 --> 00:00:45.580
All you need to know at this point is that it's a mapping between the bones in the character that the

13
00:00:45.610 --> 00:00:49.280
whoever the creator of this character was the bones in the arms and stuff.

14
00:00:49.450 --> 00:00:53.710
And what unity is expecting in terms of its animation system.

15
00:00:53.710 --> 00:00:58.600
So for the Avatar we've been provided this already is part of our asset pack and we're going to use

16
00:00:58.600 --> 00:01:01.960
the characters polygon Knights avatar that has been provided.

17
00:01:01.960 --> 00:01:02.230
OK.

18
00:01:02.230 --> 00:01:06.220
So you say you don't need to know a lot about Avatar but just know that we need to have the avatar and

19
00:01:06.220 --> 00:01:10.960
if you're putting the wrong Avatar then whacky things can happen because it's the mapping between the

20
00:01:11.140 --> 00:01:14.440
the animation system and the particular character we're using.

21
00:01:14.440 --> 00:01:18.370
The other thing while here just make sure that apply Root Motion is not checked.

22
00:01:18.370 --> 00:01:19.960
So leave it unchecked.

23
00:01:19.960 --> 00:01:27.070
Basically if we apply Root Motion then the animation system itself will drive where our character goes.

24
00:01:27.070 --> 00:01:31.720
So if the animation says take two steps forward then our character he will take two steps forward.

25
00:01:31.750 --> 00:01:36.550
We're doing it the other way round for the moment where we're saying our nav mesh agent is saying take

26
00:01:36.550 --> 00:01:42.900
two steps forward and then we want our animation to look accurate that is taking two steps forward.

27
00:01:42.910 --> 00:01:45.440
So leave apply Root Motion clicked off.

28
00:01:45.440 --> 00:01:51.760
Now the other thing we'll do while we're here is just rename while clicked on a player and clicked within

29
00:01:51.760 --> 00:01:53.510
our animator window here.

30
00:01:53.560 --> 00:01:56.690
Make sure you clicked on blend free if you can see locomotion.

31
00:01:56.770 --> 00:02:03.010
They need a double click on that to get into the blend free click on blend free click on blend and then

32
00:02:03.190 --> 00:02:05.470
slowly click on it a second time.

33
00:02:05.470 --> 00:02:09.730
We're renaming it if he does right click there's no rename option is one of those wacky ones you have

34
00:02:09.730 --> 00:02:16.990
to click and then do another slow click and we can rename this to forward speed because that essentially

35
00:02:16.990 --> 00:02:22.730
is what we're doing here we're saying how fast are we moving forward if I click play and just move around

36
00:02:22.750 --> 00:02:23.420
a little bit here.

37
00:02:23.530 --> 00:02:26.710
How fast are my moving forward on this.

38
00:02:26.710 --> 00:02:30.850
Which for our character is the z axis z or z axis.

39
00:02:30.860 --> 00:02:32.610
So forward is Z.

40
00:02:32.630 --> 00:02:34.310
That's all the character can do.

41
00:02:34.360 --> 00:02:38.320
I want to show you for a little bit of context some terminology just so I know you're really clear what

42
00:02:38.320 --> 00:02:39.190
we're up to at the moment.

43
00:02:39.220 --> 00:02:44.560
So that will give me using the term velocity and velocity is essentially the rate of change of our position

44
00:02:44.590 --> 00:02:45.610
over time.

45
00:02:45.610 --> 00:02:49.840
Or put another way it's the speed and the direction of something.

46
00:02:49.840 --> 00:02:53.410
So for example a car travelling north at 50 kilometers an hour.

47
00:02:53.500 --> 00:02:59.380
That is its velocity its speed is 50 kilometers out an hour and its velocity is north of 50 kilometers

48
00:02:59.380 --> 00:03:00.210
an hour.

49
00:03:00.370 --> 00:03:05.110
And our nav mesh agent that we've implemented already is thinking in terms of velocity it's saying I've

50
00:03:05.110 --> 00:03:10.870
got a direction that I want to move and a speed with which I want to travel there and our characters

51
00:03:10.870 --> 00:03:12.570
locomotion animations.

52
00:03:12.580 --> 00:03:18.400
So it's idle it's walk and it's run are only interested in the forward speed along the z axis.

53
00:03:18.460 --> 00:03:24.650
You can see as we speed up and slow down it's just changing the the blend of the animation that we've

54
00:03:24.650 --> 00:03:26.350
hooked up already.

55
00:03:26.350 --> 00:03:29.260
And if we look at what's happening at the moment I'm sure you've click play already but let's click

56
00:03:29.260 --> 00:03:35.410
playing to see what's going on when we click play our player just slides around and stays in the idle

57
00:03:35.410 --> 00:03:36.390
state.

58
00:03:36.640 --> 00:03:39.510
What I'll do while I'm here actually just move the camera in a little bit.

59
00:03:39.580 --> 00:03:43.800
So I got to make sure that my character is position at 0 0 0.

60
00:03:43.810 --> 00:03:44.410
Cool.

61
00:03:44.470 --> 00:03:51.310
Make sure that my follow camera is also positioned at 0 0 0 so that I know it's pointing right at the

62
00:03:51.310 --> 00:03:56.960
character if I click on the main camera I can see the characters in the middle bit too far away so I'm

63
00:03:56.960 --> 00:04:02.800
going scroll out where I can see the camera while clicked on the main camera just going to find the

64
00:04:02.860 --> 00:04:10.750
access that will bring it towards the character which I think is the blue square here between the Y

65
00:04:10.780 --> 00:04:15.760
and Z and just bring it on closer into the player so if you're holding that space in the middle it's

66
00:04:15.760 --> 00:04:17.800
moving on two axes at the same time.

67
00:04:17.950 --> 00:04:21.010
That's pretty good nice and close and just a little bit left to right.

68
00:04:21.010 --> 00:04:21.430
Okay.

69
00:04:21.430 --> 00:04:24.880
Now when I click on play it should be somewhat centered and a little bit closer.

70
00:04:25.000 --> 00:04:25.330
Okay.

71
00:04:25.420 --> 00:04:27.980
But we're flying around we're doing this little glide.

72
00:04:28.090 --> 00:04:31.540
So let's talk about how we can make our player actually run.

73
00:04:31.540 --> 00:04:37.600
So our goal here in this instance first of all is to get the global velocity from the nav mesh agents

74
00:04:37.600 --> 00:04:42.030
and then a mesh agent knows how fast our plane needs to be going and where it needs to be going.

75
00:04:42.370 --> 00:04:48.980
Next we need to convert this velocity into a local value relative to the character.

76
00:04:49.000 --> 00:04:53.440
So what I mean by that is the characters are interested in I need to run forward I need to turn left.

77
00:04:53.440 --> 00:04:58.720
I need to turn right and the velocity we're getting from the nav mesh agent isn't giving it to us in

78
00:04:58.720 --> 00:05:05.140
terms of turn left turn right it's giving it to us in terms of you need to head to the x y z coordinates

79
00:05:05.140 --> 00:05:06.120
in this direction.

80
00:05:06.130 --> 00:05:12.580
So we need to convert it into something that the character knows which is going to be the local value

81
00:05:12.640 --> 00:05:18.430
for the character and then we need to set the animators blend value to be equal to our desired forward

82
00:05:18.430 --> 00:05:19.240
speed.

83
00:05:19.240 --> 00:05:23.440
So in other words if we want to run fast we have maximum speed for an hour and so we have a slow speed

84
00:05:23.670 --> 00:05:25.810
and want to give you a little bit of context here as well.

85
00:05:25.810 --> 00:05:31.210
So if you find the animations that we've been given so click on animations unarmed you'll see that we

86
00:05:31.210 --> 00:05:35.230
have the three in their idle run and walk.

87
00:05:35.230 --> 00:05:36.770
I'm just expanding them out here.

88
00:05:36.790 --> 00:05:41.110
The animation itself is the the gray box with the play button on it.

89
00:05:41.170 --> 00:05:43.870
You see when we click on that we get this generic Avatar.

90
00:05:43.870 --> 00:05:44.680
We should.

91
00:05:44.680 --> 00:05:49.990
But the main thing I'm interested in here if you just pop that guy out of the way you can see under

92
00:05:50.050 --> 00:05:57.270
the all the information on a particular piece of animation down the bottom here average velocity 0 0

93
00:05:57.300 --> 00:05:58.070
0.

94
00:05:58.150 --> 00:05:59.640
So that's X Y and Z.

95
00:05:59.680 --> 00:06:05.920
It's saying at idle we're not expecting the player to change the transform from where it is maybe wobbling

96
00:06:05.920 --> 00:06:08.880
a bit on the ground but not actually to move anywhere in the world.

97
00:06:08.940 --> 00:06:15.340
If we click on run you'll see that the average velocity is zero zero and five point six six two.

98
00:06:15.340 --> 00:06:20.220
So this is what the animation is wanting us to do at full run full speed run.

99
00:06:20.260 --> 00:06:27.970
It's expecting us to be moving with a velocity in the z direction of five point six six two and then

100
00:06:27.970 --> 00:06:30.750
for walk it is one point five five eight.

101
00:06:30.760 --> 00:06:34.330
Now something a little bit nifty we can do when we click on our blend tree.

102
00:06:34.420 --> 00:06:38.870
You can see at the moment we've got our walks at 2.5 and our run set to 1.

103
00:06:38.920 --> 00:06:44.740
What I could do in here is manually add in the values that I just found that our animation system thinks

104
00:06:45.040 --> 00:06:51.790
is our walk and thinks is our run or I can click off animate thresholds and compute thresholds where

105
00:06:51.790 --> 00:06:57.370
I compute based on velocity Z when I click that you can see that our threshold is now one point five

106
00:06:57.370 --> 00:07:03.880
five and five point six six exactly as our animations was expecting and told us it was expecting in

107
00:07:03.880 --> 00:07:06.460
terms of those velocities which is really cool.

108
00:07:06.460 --> 00:07:10.990
And that means that as we drag forward I'm going to click on play here as we drag forward when we're

109
00:07:10.990 --> 00:07:12.250
at one point five five.

110
00:07:12.250 --> 00:07:15.760
It's the sweet spot for walking And when we're all the way up to five point six six.

111
00:07:15.790 --> 00:07:18.210
That's where it's expecting to be running.

112
00:07:18.250 --> 00:07:24.520
Now it's going to correspond when we click back over on the player we find the nav mesh agent.

113
00:07:24.520 --> 00:07:26.890
So then ambush agent we've got a speed here.

114
00:07:26.920 --> 00:07:32.860
If the speed is greater than five points six six then the nav mesh agent's going to say move a whole

115
00:07:32.860 --> 00:07:38.830
bunch of speed but the animation says well I was only expecting to go five point six six man so I just

116
00:07:38.830 --> 00:07:39.700
can't keep up with you.

117
00:07:39.850 --> 00:07:45.250
So in here I'm going to put in five point six six as our speed and say that is the maximum speed with

118
00:07:45.250 --> 00:07:49.470
our current configuration that I want my player to be running across here.

119
00:07:49.540 --> 00:07:55.270
And if I want my play to be moving with any more speed than that then I'll need to alter my animation

120
00:07:55.270 --> 00:08:00.220
so speed my animation up or vice versa versus going to have go slower than I need to do something with

121
00:08:00.220 --> 00:08:01.930
my animation which we can do.

122
00:08:02.020 --> 00:08:07.330
But for now we're just going to go for a nice basic five point six x speed based upon the animations

123
00:08:07.330 --> 00:08:08.460
that we've been given.

124
00:08:08.470 --> 00:08:08.700
Okay.

125
00:08:08.710 --> 00:08:11.950
So let's make all this happen let's make our characters animation update.

126
00:08:11.950 --> 00:08:13.500
Just a reminder of what we're doing here.

127
00:08:13.540 --> 00:08:16.480
If you're filling advanced you can take on this as a challenge.

128
00:08:16.480 --> 00:08:19.820
I've got a more simple tuning based challenge for this.

129
00:08:19.930 --> 00:08:20.490
This lecture.

130
00:08:20.500 --> 00:08:23.140
But if you want to take this on if you're feeling advanced then by all means.

131
00:08:23.140 --> 00:08:25.660
This is your challenge to take on otherwise.

132
00:08:25.780 --> 00:08:31.480
Let's go through this together by starting off and opening up our movie script scenario scripts open

133
00:08:31.480 --> 00:08:36.770
up mover and the first thing we need to do is what we need to on update.

134
00:08:36.790 --> 00:08:41.500
We need to be changing the animation of our player so after we've figured out where it is we wish to

135
00:08:41.500 --> 00:08:42.270
move to.

136
00:08:42.280 --> 00:08:50.600
So let's call a method in here we'll create just in a moment we will name it update animator semicolon

137
00:08:51.630 --> 00:08:57.740
and down the very bottom underneath move to cursor we will see if I may line twenty nine.

138
00:08:57.740 --> 00:09:04.580
We will create a private void update and a meter parentheses.

139
00:09:04.580 --> 00:09:05.280
Okay.

140
00:09:05.330 --> 00:09:07.340
And our curly braces.

141
00:09:07.580 --> 00:09:12.170
And then a reminder of what we're trying to achieve we want to first get the global velocity from our

142
00:09:12.170 --> 00:09:13.200
NAV mesh agent.

143
00:09:13.220 --> 00:09:14.270
So how we gonna do that.

144
00:09:14.300 --> 00:09:22.620
Well we're going to create a variable of type vector 3 which we'll call velocity and that will equal

145
00:09:22.620 --> 00:09:29.330
get component component what component do you think it is a little micro challenge for you if you've

146
00:09:29.330 --> 00:09:30.980
been paying attention it should be easy.

147
00:09:31.190 --> 00:09:42.120
It's the nav mesh agent component and then parentheses dot velocity semicolon and then as I mentioned

148
00:09:42.120 --> 00:09:46.380
in my steps next we need to convert this into a local value relative to the character.

149
00:09:46.590 --> 00:09:56.700
So the way that we do that is again creating ourselves a vector 3 we'll call this local velocity and

150
00:09:56.700 --> 00:09:58.560
that will equal a slightly new concept.

151
00:09:58.560 --> 00:10:08.520
I'll show you something here which is transform dot in this transform Di erection and then what are

152
00:10:08.520 --> 00:10:13.830
we going to pass in we're gonna pass in the velocity that we wish to be doing our inverse transform

153
00:10:13.830 --> 00:10:21.590
direction direction on survival the velocity and semicolon Fiona read up more about transform inverse

154
00:10:21.600 --> 00:10:27.420
transform direction basically it's taking from global and converting into local but jumping to the unity

155
00:10:27.420 --> 00:10:30.870
docs I've given you a link against this lecture if you want to know a little bit more about that but

156
00:10:30.870 --> 00:10:36.000
that's pretty much its function in life and just a quick message from Rick from the future I've had

157
00:10:36.000 --> 00:10:38.010
a lot of people ask me why are we doing this.

158
00:10:38.010 --> 00:10:44.820
Why are we converting from global to local one when we're creating our velocity our NAV mesh dot velocity

159
00:10:44.820 --> 00:10:51.720
that we're storing as the velocity variable within this update animator method we are grabbing the global

160
00:10:51.750 --> 00:11:00.060
coordinates so though the global velocity and it might be an X is 273 and Y is 57 and the velocity is

161
00:11:00.060 --> 00:11:05.400
changing at a particular rate that shows us where we are within the world within world space.

162
00:11:05.400 --> 00:11:10.770
And that's not so useful for our animator our animated just wants to know dude am I running forward

163
00:11:10.800 --> 00:11:12.100
or am I not running forward.

164
00:11:12.120 --> 00:11:17.820
So we need to use this mechanism the inverse transform direction allows us to say no matter where you

165
00:11:17.820 --> 00:11:24.380
are in the world let's convert that into a local velocity so that we can say to our animator you're

166
00:11:24.390 --> 00:11:32.790
moving in a forward direction at for example at three units or your currently moving forward at five

167
00:11:32.790 --> 00:11:36.950
units so that we can make it meaningful for our animator.

168
00:11:37.560 --> 00:11:43.110
And when it is in global the global values which is what we get when we're doing our NAV mesh agent

169
00:11:43.110 --> 00:11:46.380
dot velocity is giving us the the global values.

170
00:11:46.440 --> 00:11:48.100
That's not as useful.

171
00:11:48.240 --> 00:11:52.980
We can't use that for from a local point of view to tell our animator what to do.

172
00:11:53.010 --> 00:11:53.260
Okay.

173
00:11:53.280 --> 00:11:56.760
So I just wanted to give you a little bit more flavor on that and let you know why it is that we need

174
00:11:56.760 --> 00:12:00.030
to do that step from global to local.

175
00:12:00.030 --> 00:12:05.490
And now we create ourselves a float called speed that we're going to be using when we update our animator

176
00:12:05.760 --> 00:12:13.160
and that will be equal what are we interested in just the local velocity dot z because all we want to

177
00:12:13.160 --> 00:12:18.370
know is the Z speed how fast I should be moving in a forward direction.

178
00:12:18.470 --> 00:12:23.600
The final step will have a look on my list here set the animators blend value to be equal to our desired

179
00:12:23.600 --> 00:12:24.470
forward speed.

180
00:12:24.470 --> 00:12:29.030
If you remember this is our forward speed that we've created here that's gonna go from zero to five

181
00:12:29.030 --> 00:12:35.770
point six six and the way that we do that is get component and then which component do you think we're

182
00:12:35.770 --> 00:12:36.610
updating in here.

183
00:12:36.610 --> 00:12:47.320
It's the animator parentheses dot will you sit float and in here we're passing in the string reference

184
00:12:47.350 --> 00:12:51.430
and course we're gonna mess up the string reference unless we go over here and copy it.

185
00:12:51.460 --> 00:12:57.880
So go back into unity find forward speed copy that so you get it exactly buttoned up and then paste

186
00:12:57.880 --> 00:12:59.730
that in string references.

187
00:12:59.740 --> 00:13:04.420
Not ideal but sometimes you gotta use them and you want to make sure that you are very careful when

188
00:13:04.420 --> 00:13:12.170
you do comma speed so quick recap we're getting the velocity from the nav mesh agent we're using inverse

189
00:13:12.170 --> 00:13:19.250
transform direction to make that a local velocity so it's meaningful for the character and then we're

190
00:13:19.250 --> 00:13:26.240
creating a variable called speed that we're going to pass into our set float animator in relation to

191
00:13:26.240 --> 00:13:30.320
the forward speed of the animation which is the local velocity dot Z.

192
00:13:31.080 --> 00:13:35.780
Okay save that up head over into unity see if this all works click on planning him as I'm a little bit

193
00:13:35.780 --> 00:13:40.690
of spice here for this big moment of excitement click on play.

194
00:13:42.120 --> 00:13:42.580
Okay.

195
00:13:42.580 --> 00:13:48.850
And as we move the play goes from stopped to moving and you can see we've got some DELIGHTFULLY BAD

196
00:13:49.780 --> 00:13:52.960
motion going on there at the moment which is great but this is working.

197
00:13:52.990 --> 00:13:56.980
You can see down the bottom here the forward speed is going from zero for this run in a straight line

198
00:13:57.170 --> 00:14:00.390
going to zero up to five point six six and then returning back again.

199
00:14:00.430 --> 00:14:02.440
Now turning around is a big problem.

200
00:14:02.440 --> 00:14:07.610
So that is something I'm going to give it to you as a challenge is to go into the player find the nav

201
00:14:07.610 --> 00:14:14.590
mesh agent and your character's movement so that it turns and accelerates in a way that feels good for

202
00:14:14.590 --> 00:14:14.960
you.

203
00:14:14.970 --> 00:14:19.980
So pause the video take on that challenge and I'll see you back here when you done okay.

204
00:14:19.980 --> 00:14:23.820
Making RPG has a lot of tuning and tweaking in it.

205
00:14:23.850 --> 00:14:28.780
So he's just starting that journey very exciting speed we're leaving at five point six six.

206
00:14:28.800 --> 00:14:32.330
The angular speed and acceleration have a relationship to one another.

207
00:14:32.400 --> 00:14:37.320
When I do this in play mode so I can play around with it as we go you can see a lot of the issue here

208
00:14:37.320 --> 00:14:38.700
is how I turn.

209
00:14:38.700 --> 00:14:43.600
I'm not starting to run quick and off it's all looking a little bit messy so my angular speed I going

210
00:14:43.600 --> 00:14:47.680
to see what happens if I increase that to say 1000 okay.

211
00:14:47.700 --> 00:14:51.810
He turns around a lot faster and starts moving a lot quicker that looks better.

212
00:14:52.020 --> 00:14:55.070
Let's see what happens when we crank it up to say 5000.

213
00:14:55.400 --> 00:14:56.990
Okay.

214
00:14:57.050 --> 00:14:57.690
Yep.

215
00:14:57.850 --> 00:15:01.300
That's feeling a bit better didn't seem to make a huge amount of difference.

216
00:15:01.420 --> 00:15:04.450
Acceleration what happens if we drop that down to say 10.

217
00:15:04.500 --> 00:15:10.380
My guess that is the wrong direction because it's the acceleration of turning as as well as acceleration

218
00:15:10.380 --> 00:15:12.990
of running in a new direction.

219
00:15:13.020 --> 00:15:16.780
So I got to pump that back up the other way say 50 OK.

220
00:15:16.790 --> 00:15:18.210
That's a pretty good turn.

221
00:15:18.210 --> 00:15:23.640
He's got a pretty abrupt stop but he's taking a couple of steps the end you save on battling a whole

222
00:15:23.640 --> 00:15:24.840
bunch of enemies.

223
00:15:24.840 --> 00:15:25.740
Click click click.

224
00:15:25.740 --> 00:15:27.370
Attack attack move run.

225
00:15:27.450 --> 00:15:29.960
Let's make sure that it works with the nav mesh agent.

226
00:15:30.180 --> 00:15:34.320
I'm going to click on the navigation button and then you can see when we're doing that.

227
00:15:34.380 --> 00:15:38.940
You can see this nav mesh information with the gizmo make sure you get your gizmos turned on you can

228
00:15:38.940 --> 00:15:44.520
see what part of the navigation wants to go to and this blue line is the nav mesh agents vector that

229
00:15:44.520 --> 00:15:50.680
is saying let's go in this direction and then our character animation is updating to head in that direction.

230
00:15:50.760 --> 00:15:51.880
It's all looking pretty good.

231
00:15:51.990 --> 00:15:54.730
So a reminder again of the values that I had in there.

232
00:15:54.960 --> 00:16:01.650
Back on My player of course I didn't save that but no worries I was remembering and I had 5000 and my

233
00:16:01.650 --> 00:16:07.590
acceleration I had 50 and then I'm going to click on player and click on the overrides button apply

234
00:16:07.590 --> 00:16:09.870
also this applies back to the prefab.

235
00:16:09.870 --> 00:16:11.270
Fantastic.

236
00:16:11.370 --> 00:16:14.400
Awesome work so far and I'll see you in the next lecture.
