WEBVTT
1
00:00:04.270 --> 00:00:04.900
Hello and welcome.

2
00:00:04.900 --> 00:00:11.710
This is a refactor lecture that is going to allow us to put a weapons script directly on equipped weapons

3
00:00:11.740 --> 00:00:18.790
which will allow us eventually to trigger events via the fighter on a particular weapon.

4
00:00:18.790 --> 00:00:20.380
Let's dive in.

5
00:00:20.470 --> 00:00:23.560
So what are the options for having our weapon hit.

6
00:00:23.620 --> 00:00:24.850
Sound effects.

7
00:00:24.850 --> 00:00:26.200
There are a couple I can think of.

8
00:00:26.200 --> 00:00:31.570
First of all we could put an audio source on the player's hand in the player prefab or the character

9
00:00:31.570 --> 00:00:37.960
prefab that would allow us to emanate the audio from somewhere near where the weapon is going to be

10
00:00:37.960 --> 00:00:38.950
equipped.

11
00:00:38.980 --> 00:00:44.710
Now the problem with this is that we would need to swap out the audio clips depending on which weapon

12
00:00:44.770 --> 00:00:46.390
is currently equipped.

13
00:00:46.390 --> 00:00:51.700
Perhaps a better solution would be to put the audio source on the weapon prefab itself then the weapon

14
00:00:51.700 --> 00:00:56.620
prefab can have different audio clips depending on which weapon it is a sword would have sword type

15
00:00:56.620 --> 00:01:01.720
clashes and other weapons a hammer might have a weapon type audio clip.

16
00:01:01.720 --> 00:01:09.040
But the problem with this one is that we currently have no way to call a hit event or any kind of audio

17
00:01:09.040 --> 00:01:15.490
source play from within this weapon prefab because at the moment the weapon prefab is just a dumb game

18
00:01:15.520 --> 00:01:19.010
object instantiation and we've got no way of calling into it.

19
00:01:19.030 --> 00:01:21.220
So let's have a look at how things are currently set up.

20
00:01:21.220 --> 00:01:26.740
We've got a fighter which references a weapon conflict remember multiple fighters might be referencing

21
00:01:26.740 --> 00:01:30.990
this weapon conflict because multiple fighters might have a sword for example.

22
00:01:31.030 --> 00:01:38.080
Now that weapon conflict itself references a and equipped weapon prefab and what happens is that when

23
00:01:38.080 --> 00:01:45.160
we equip a weapon that weapon prefab gets instantiated and attached to a particular character to the

24
00:01:45.160 --> 00:01:46.900
Web the player or the enemy.

25
00:01:46.900 --> 00:01:52.030
And so each character gets their own instance of a prefab but they don't get their own instance of a

26
00:01:52.030 --> 00:01:53.380
weapon Conficker.

27
00:01:53.380 --> 00:01:58.960
So what we'd like to do is have a way for our fighter to communicate with that particular instance of

28
00:01:58.960 --> 00:02:03.610
the weapon so that they can tell it to launch sound effects or maybe particle effects and things like

29
00:02:03.610 --> 00:02:03.790
that.

30
00:02:04.600 --> 00:02:10.630
So the way we're gonna do that is by adding a weapon component onto an equipped prefab and giving the

31
00:02:10.630 --> 00:02:11.890
fighter a link to it.

32
00:02:11.890 --> 00:02:15.550
Now in this light you're going to be adding the weapon component and the next we're going to add the

33
00:02:15.550 --> 00:02:18.430
link from fighter to the weapon.

34
00:02:18.430 --> 00:02:23.470
Now you have those beady eyed among you may have noticed that I've changed the names around here for

35
00:02:23.470 --> 00:02:28.640
this slide rather than we've got weapon is currently the name of Ask critical object.

36
00:02:28.660 --> 00:02:32.340
So we're gonna have to do a little bit of renaming so you can follow me along with this one.

37
00:02:32.350 --> 00:02:39.160
What we're gonna do is open up our weapon scriptural object and we're going to rename that first of

38
00:02:39.160 --> 00:02:41.080
all we're going to rename the file over in unity.

39
00:02:41.080 --> 00:02:48.450
So let's go and find ourselves scripts and then combat and we've got weapon we're going to rename it

40
00:02:48.460 --> 00:02:52.030
to weapon config.

41
00:02:52.090 --> 00:02:57.490
Copy that so we can have exactly the same in other places and then it has been deleted and we'll see.

42
00:02:57.490 --> 00:03:05.260
So make sure you refresh the tab and open up the actual weapon config tab over here and then we can

43
00:03:05.260 --> 00:03:10.910
do a rename in here I'm gonna use F2 to rename weapon to weapon config and it's gonna do it across classes

44
00:03:11.000 --> 00:03:15.550
as you can see that's changed a few tabs it's changed the weapon pick up and it's changed the fighter

45
00:03:15.550 --> 00:03:20.890
tab and I have to make sure I go and save those and if I go back into visual studio I think nothing

46
00:03:20.980 --> 00:03:22.370
Visual Studio into unity.

47
00:03:22.420 --> 00:03:28.060
Nothing's changed if I go and hit play I should still be able to equip things like swords so let's pick

48
00:03:28.060 --> 00:03:29.890
up a sword Yep I can equip that.

49
00:03:30.170 --> 00:03:30.490
Okay.

50
00:03:30.520 --> 00:03:39.180
So the next step is to update that link of equipped prefab is currently pointing to a game object which

51
00:03:39.180 --> 00:03:41.760
is a prefab and we want to make that more specific.

52
00:03:41.790 --> 00:03:50.140
We want to say that any game object that we can equip has to have a weapon script on it a weapon components.

53
00:03:50.160 --> 00:03:52.950
Now this weapon component does not yet exist.

54
00:03:53.070 --> 00:03:57.240
That is going to be your task to go ahead and create a weapon component.

55
00:03:57.240 --> 00:03:59.600
You are going to create the weapon component.

56
00:03:59.610 --> 00:04:04.620
Put it on all the prefabs of the equip prefabs that we are using and re link.

57
00:04:04.620 --> 00:04:09.570
The scripts will object because once you change the component type it is going to have a problem and

58
00:04:09.660 --> 00:04:14.460
need re linking in the scripts all objects of those weapons are the sword the bow.

59
00:04:14.460 --> 00:04:14.810
And so.

60
00:04:15.320 --> 00:04:21.350
So pause the video and have a go at doing this little bit of a refactor.

61
00:04:21.350 --> 00:04:21.800
Welcome back.

62
00:04:21.800 --> 00:04:28.550
So we're gonna add a new script first and foremost and a creator in combats see sharp scripts called

63
00:04:28.730 --> 00:04:38.390
weapon and then we can go over to v s code and look for our weapon so and I want to put it straight

64
00:04:38.390 --> 00:04:47.150
away in a namespace so it's going to be namespace RPG dot combat and it is going to not need the start

65
00:04:47.210 --> 00:04:54.410
an update at this point but later on what we aren't gonna do is gonna have a public void on hit function

66
00:04:54.440 --> 00:05:02.720
in here which is going to allow us to call to the weapon from the fighter when it has been hit and trigger

67
00:05:02.780 --> 00:05:07.860
unity events within the weapon itself that could trigger off audio sources and so on and so forth that

68
00:05:07.880 --> 00:05:12.290
I'm just putting that in for now so you can see how it's going to be used later on.

69
00:05:12.290 --> 00:05:16.680
Now if we go back to our weapon config you can see that link to weapon is successful.

70
00:05:16.730 --> 00:05:22.190
We have got an error further down which is with the instantiate call and now this is because we're instantiating

71
00:05:22.190 --> 00:05:28.160
something of type weapon and the return value should be of weapon from instantiate and instead it is

72
00:05:28.160 --> 00:05:29.510
of type game object.

73
00:05:29.510 --> 00:05:35.030
So let's just change that to weapon which means that now when we're doing weapon name that will be changed

74
00:05:35.030 --> 00:05:39.500
the name of the component we don't want that we want to be changed the name of the game object to keep

75
00:05:39.950 --> 00:05:42.080
the same behavior as we were having before.

76
00:05:42.080 --> 00:05:47.390
If you don't change that over its game object then what you're gonna see is that later on ADD deletion

77
00:05:47.390 --> 00:05:51.770
code is not gonna work properly because we didn't actually rename the game object we retain the component

78
00:05:51.770 --> 00:05:52.190
and so on.

79
00:05:52.190 --> 00:05:57.920
So let's go back over to unity just do final play test here.

80
00:05:57.920 --> 00:05:59.050
Go ahead and hit play.

81
00:05:59.200 --> 00:06:04.370
Go and pick up a sword and the sword hasn't actually picked up.

82
00:06:04.370 --> 00:06:06.540
Reason being that we need to re link stuff.

83
00:06:06.590 --> 00:06:13.340
So let's go and find ask ritual objects and resort weapons resources and we've got first of all the

84
00:06:13.340 --> 00:06:14.200
sword.

85
00:06:14.330 --> 00:06:17.870
So the sword needs to be linked up to the equipped sword.

86
00:06:18.100 --> 00:06:19.550
It's been unlinked.

87
00:06:19.550 --> 00:06:24.020
And the reason it won't let me link it obviously is because they equipped sword does not yet have the

88
00:06:24.050 --> 00:06:27.660
weapon component added to it so let's do that for the equipped sword.

89
00:06:27.680 --> 00:06:34.690
We also need to do that for the equipped bow so I can open up the equipped bow prefab and the weapon

90
00:06:34.690 --> 00:06:41.690
script that to then go back to our resources get our sword and put the equipped sword as the prefab

91
00:06:41.700 --> 00:06:49.490
then it will let us and then do the same thing for our both of our bows the blue and red projectile

92
00:06:49.490 --> 00:06:57.030
bow and we can select them both to edit them at the same time and then drop in the equipped bow as well.

93
00:06:57.050 --> 00:07:02.300
So now if we go ahead and hit play hopefully we have reeling things so we can go and pick up a sword.

94
00:07:02.300 --> 00:07:07.990
Yep we can pick up sword yes we can pick up a bow and it replaces the sword that we were holding success.

95
00:07:08.120 --> 00:07:14.330
We've had a minor refactor that allows us to put scripts on these instances of our weapons.

96
00:07:14.330 --> 00:07:19.190
Now in the next lecture we're going to look at having that link from fighter so that we can actually

97
00:07:19.490 --> 00:07:21.580
call a sound effect see that.
