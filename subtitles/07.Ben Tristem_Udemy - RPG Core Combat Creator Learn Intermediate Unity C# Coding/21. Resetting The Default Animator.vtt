WEBVTT
1
00:00:04.520 --> 00:00:09.770
So we actually have a bug in the spawning of our weapon that we didn't cover in the last lecture because

2
00:00:09.770 --> 00:00:13.320
it's a bit more involved than some of the other little things that we tied it up.

3
00:00:13.340 --> 00:00:19.670
So the problem is around here in this setting of the animator runtime control and let me show you what

4
00:00:19.670 --> 00:00:20.340
it is.

5
00:00:20.420 --> 00:00:29.120
If we go to an existing weapon I'm going to go to the Fireball and just for now remove its animator

6
00:00:29.150 --> 00:00:30.220
override controller.

7
00:00:30.680 --> 00:00:32.240
And you'd think okay this is great.

8
00:00:32.240 --> 00:00:36.690
Now we're going to use the punch animation to launch our fireball and you.

9
00:00:36.710 --> 00:00:38.550
That's basically what we should be doing.

10
00:00:38.570 --> 00:00:43.670
So I pick up my sword first you can see that I have my sword attack.

11
00:00:43.670 --> 00:00:44.720
That's great.

12
00:00:44.720 --> 00:00:50.750
But now look if I pick up the fireball instead I'm actually still using my sword attack and it looks

13
00:00:50.750 --> 00:00:53.840
pretty cool to launch a fireball using the sword attack.

14
00:00:53.870 --> 00:00:59.210
Well that's not what we'd intended we'd intended for it's use the default animation which is the punch.

15
00:00:59.210 --> 00:01:05.710
So what's going wrong here is that the animator override that we have in our weapon is set to No.

16
00:01:05.750 --> 00:01:12.170
And so what it does is instead of setting it to a default value in the animated runtime setting this

17
00:01:12.260 --> 00:01:17.210
runtime animator controlled to a default value it actually doesn't set it at all.

18
00:01:17.230 --> 00:01:22.580
So it's whatever it was set to before which in our case was the last weapon that was equipped.

19
00:01:22.580 --> 00:01:25.020
So that's not really what we want.

20
00:01:25.040 --> 00:01:34.750
In fact this runtime animator controller is just if we go over to AB player it is just this controller

21
00:01:34.750 --> 00:01:35.290
here.

22
00:01:35.290 --> 00:01:39.400
It's the property that is said to be controller in the animator.

23
00:01:39.670 --> 00:01:46.210
So we when we set an override controller we're basically saying hey let's replace that with this fireball

24
00:01:46.360 --> 00:01:47.250
animator override.

25
00:01:47.260 --> 00:01:49.510
You can just do that even in the editor.

26
00:01:49.540 --> 00:01:53.840
I'm just gonna undo that though because we want our default controller to be that.

27
00:01:53.920 --> 00:02:01.390
So how can we go about replacing that when there is for example this fireball animator override controller.

28
00:02:01.390 --> 00:02:06.940
How can we say Okay now we don't have an animator set I don't have an override set.

29
00:02:06.940 --> 00:02:09.880
We want to go back to that default.

30
00:02:09.880 --> 00:02:16.450
Well the trick is in knowing that the the way that the animator overwrite controller inherits from each

31
00:02:16.450 --> 00:02:16.690
other.

32
00:02:16.750 --> 00:02:22.050
So the animator override controller the animators are gonna say this right.

33
00:02:22.060 --> 00:02:29.350
The runtime animator controller is the root class whereas the animator override control if we go and

34
00:02:29.350 --> 00:02:30.540
have a look at that.

35
00:02:30.550 --> 00:02:33.220
You can have a look at the class definition for it.

36
00:02:33.280 --> 00:02:39.460
The animator override controller inherits from the runtime animator controller and it adds a lot of

37
00:02:39.460 --> 00:02:40.410
stuff on top of it.

38
00:02:40.450 --> 00:02:47.030
And one of the properties that it has that the runtime animator controller does not have is this.

39
00:02:47.100 --> 00:02:50.410
It has a property called runtime animator controller.

40
00:02:50.410 --> 00:02:51.460
And what's that.

41
00:02:51.460 --> 00:02:54.930
That is just the property of which animated controller.

42
00:02:54.970 --> 00:02:58.030
This override controller is overriding.

43
00:02:58.030 --> 00:03:05.200
So you can see that we have that on our animator override for example we can do animator override dot

44
00:03:05.500 --> 00:03:12.010
runtime animated controller and that will get us to the basically the parents which is the thing we

45
00:03:12.010 --> 00:03:13.030
want to set here.

46
00:03:13.060 --> 00:03:19.750
So we'd like to basically do this but this is the wrong logic because this is in the case where we have

47
00:03:19.750 --> 00:03:23.140
an animator override controller to reference in the weapon.

48
00:03:23.140 --> 00:03:28.380
We don't have an animator override controller to reference when the animator override is null.

49
00:03:28.420 --> 00:03:29.590
So let's actually have a look.

50
00:03:29.620 --> 00:03:35.530
So in the case where it is now we want to do and else basically else we are going to do this case that

51
00:03:35.530 --> 00:03:44.950
is no and what we want to say is there's two situations basically maybe the previous animator was already

52
00:03:44.950 --> 00:03:49.940
set to the default at runtime animated controller in which case we don't have to do anything.

53
00:03:50.080 --> 00:03:54.240
We'd know that because the type would be the runtime animator controller.

54
00:03:54.310 --> 00:04:00.400
The other situation is that it has already been overridden in which case the type would be the animator

55
00:04:00.490 --> 00:04:01.420
override controller.

56
00:04:01.420 --> 00:04:08.860
How do we find out the type where we can do it by trying to cast our animator runtime override controller.

57
00:04:08.860 --> 00:04:14.260
So let's try that animator runtime ever controller and we're going to try and cast it like this using

58
00:04:14.260 --> 00:04:17.670
the as operator because if this fails it returns no.

59
00:04:17.890 --> 00:04:24.670
And then we're going to do animator tried to cast it to the animator override controller and I'm just

60
00:04:24.670 --> 00:04:29.140
gonna go and store this in a variable I'm going to use the var key word here because we've just said

61
00:04:29.140 --> 00:04:31.650
what type it's gonna be and it's going to make the line really long.

62
00:04:31.690 --> 00:04:42.520
If I don't use the keyword to call this the override controller and basically as I said this will be

63
00:04:42.520 --> 00:04:50.740
no if the thing in here is just the runtime animator controller it is just the root thing the character

64
00:04:50.770 --> 00:04:57.220
animates controller otherwise it will have the value of the runtime animated controller or rather the

65
00:04:57.220 --> 00:05:04.240
animator override controller that is in the runtime animator controller slot so we can use this to say

66
00:05:04.240 --> 00:05:06.460
hang on if the.

67
00:05:06.940 --> 00:05:07.810
This is not null.

68
00:05:07.840 --> 00:05:19.190
So if override controller is not no then we want to go ahead and set the animator runtime animator controller

69
00:05:19.520 --> 00:05:22.510
to what what do we want to set it to.

70
00:05:22.510 --> 00:05:29.650
So remember that the animator override controller has a property that points to its parent.

71
00:05:29.660 --> 00:05:32.220
The character in our case what would that.

72
00:05:32.270 --> 00:05:34.390
How can you use that case.

73
00:05:34.400 --> 00:05:39.890
So the way we're going to use that is to say the animator overwrite and the animated runtime animator

74
00:05:39.890 --> 00:05:46.790
controller is going to be equal to the override controllers runtime animator controller.

75
00:05:46.790 --> 00:05:52.910
Basically we're saying if it's already an override find its parent and put that in the runtime animator

76
00:05:52.910 --> 00:05:54.260
slot instead.

77
00:05:54.260 --> 00:05:55.460
So that should do the trick.

78
00:05:55.460 --> 00:05:59.750
Now I'm just gonna do a little bit of tidying up I don't like this nesting of if statements I'm gonna

79
00:05:59.750 --> 00:06:07.430
put this cast actually just outside of if statements like So and then I'm going to turn this into an

80
00:06:07.460 --> 00:06:15.620
hourglass if like so it just takes away one level of nesting and keeps things a little bit tidier fixed

81
00:06:15.680 --> 00:06:16.650
my indentation.

82
00:06:18.190 --> 00:06:21.380
Okay now let's give that shot let's see if it's going to work now.

83
00:06:21.590 --> 00:06:23.200
I've got to go and pick up the sword.

84
00:06:23.210 --> 00:06:28.700
First of all we know that that switches over the animation to being the sword animation.

85
00:06:28.700 --> 00:06:32.690
Now if I go and pick up the fireball it should switch it back.

86
00:06:32.690 --> 00:06:36.620
It should say hey sword what is your parent's controller.

87
00:06:36.620 --> 00:06:39.570
And let's put that as the runtime override.

88
00:06:39.590 --> 00:06:45.380
Now I'm going to cast and they go we're using the punch animation to fire our fireballs.

89
00:06:45.380 --> 00:06:48.710
So that has fixed the bug hopefully understand a little bit better.

90
00:06:48.710 --> 00:06:54.170
The hierarchy between runtime animates controllers and animator override controllers as well.

91
00:06:54.410 --> 00:06:56.300
And we've got a working system.
