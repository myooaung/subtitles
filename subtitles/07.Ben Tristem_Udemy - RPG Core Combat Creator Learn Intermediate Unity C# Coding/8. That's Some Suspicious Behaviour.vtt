WEBVTT
1
00:00:04.210 --> 00:00:08.200
So I've got this god hot on my tail and I'm just gonna go and lose him.

2
00:00:08.720 --> 00:00:11.440
And what you're going to see here is that he's now being suspicious.

3
00:00:11.450 --> 00:00:16.340
He's not instantly going back to guard the location he's meant to guard but he's hanging around a bit

4
00:00:16.340 --> 00:00:20.180
and wonder scratching his chin like the dumb girl that is going who.

5
00:00:20.240 --> 00:00:22.130
Where did the player go.

6
00:00:22.130 --> 00:00:26.210
And then he goes back to God because he wasn't paid enough to worry about this sort of problem.

7
00:00:26.240 --> 00:00:33.740
So let's dive in and see how we can make our God suspicious what we want to happen is that we would

8
00:00:33.860 --> 00:00:39.890
enter a state of suspicion after we have seen a player.

9
00:00:39.980 --> 00:00:42.140
And how would we do that.

10
00:00:42.140 --> 00:00:44.170
How would we then forget about the player.

11
00:00:44.180 --> 00:00:45.080
How would we know.

12
00:00:45.080 --> 00:00:49.780
Well we need to adjust our guard's memory.

13
00:00:49.790 --> 00:00:56.360
The guard needs to now remember when he last or how long ago he last saw the enemy.

14
00:00:56.360 --> 00:01:03.740
So I'm gonna create a float for that time and it's going to be time since last saw player.

15
00:01:03.770 --> 00:01:09.620
Now we've used these kinds of variables before and we can assume that the time since he last saw the

16
00:01:09.620 --> 00:01:12.830
player initially should be very very high.

17
00:01:12.860 --> 00:01:20.510
So we can again use our math f dot infinity as the starting value for the time since we last saw the

18
00:01:20.510 --> 00:01:21.820
player.

19
00:01:22.520 --> 00:01:25.320
Then what are we going to do.

20
00:01:25.340 --> 00:01:33.680
Well we're going to have to think about how we can enter a state of suspicion now at this stage we might

21
00:01:33.680 --> 00:01:39.320
be tempted to say we've got quite a few states going on here we've got an attacking state a returning

22
00:01:39.380 --> 00:01:45.130
to God or guarding state and now we're gonna have a suspicion state as well.

23
00:01:45.320 --> 00:01:52.580
Often in a lie people use something called a finite state machine and we're not going to be using a

24
00:01:52.580 --> 00:01:57.620
finite state machine a typical finite state machine looks a little bit like this representing the brain

25
00:01:57.620 --> 00:01:58.360
of an enemy.

26
00:01:58.490 --> 00:02:02.950
And you can see there's quite a lot of complexity going on here we can wonder we can attack.

27
00:02:02.960 --> 00:02:04.680
We can evade we can find eight.

28
00:02:04.790 --> 00:02:08.140
Now we aren't at this level of complexity.

29
00:02:08.230 --> 00:02:14.570
We can see here that there are transitions between these states and they are restricted.

30
00:02:14.570 --> 00:02:21.220
You cannot go from attack to find aid state for example in our case.

31
00:02:21.230 --> 00:02:23.920
You can go from any states to any other state.

32
00:02:23.920 --> 00:02:31.730
We don't need to at this stage restrict things so we're going to put an if else in here and just do

33
00:02:31.730 --> 00:02:33.800
it as an if statement within the update.

34
00:02:33.800 --> 00:02:39.860
I think this is the simplest tool to represent the states because we need to do these boolean expressions

35
00:02:39.860 --> 00:02:45.920
to figure out from the State of the world what we should be doing and to introduce any kind of e enum

36
00:02:46.010 --> 00:02:51.560
or switch statement would introduce more complexity because we would have to set another variable that

37
00:02:51.560 --> 00:02:56.030
derived variable from this state whereas in the if statement we can query the state of the world directly

38
00:02:56.030 --> 00:03:00.210
and decide what our action should be and what state we should be in.

39
00:03:00.230 --> 00:03:04.660
So sorry it's not else if else is else if we're going to have an.

40
00:03:04.660 --> 00:03:09.550
Else if condition and we're going to do something on health if in here.

41
00:03:09.620 --> 00:03:15.200
This is going to be our suspicion state and I'm going to leave out to you what the condition should

42
00:03:15.200 --> 00:03:17.620
be and what suspicion state should be.

43
00:03:17.690 --> 00:03:23.420
But before I give that to you as a challenge we need to make sure that the time since we last saw the

44
00:03:23.420 --> 00:03:25.330
play is actually getting updated.

45
00:03:25.340 --> 00:03:30.590
So at the end of updates I'm going to do a as we've done before with these kinds of time is I going

46
00:03:30.590 --> 00:03:39.500
to do a plus equal time dot delta time which will increment this by the amount that the frame took on

47
00:03:39.500 --> 00:03:40.540
every frame.

48
00:03:40.580 --> 00:03:45.370
So we're going to be times the class delta time is going to be increasing if we don't reset it.

49
00:03:45.410 --> 00:03:46.320
When do we reset it.

50
00:03:46.320 --> 00:03:49.540
Well we when we see the player is when we're doing our attack.

51
00:03:49.640 --> 00:03:54.670
So we are going to set it to zero when we're doing the attack in here.

52
00:03:55.160 --> 00:03:55.380
OK.

53
00:03:55.400 --> 00:03:57.080
So that just leaves this suspicion state.

54
00:03:57.080 --> 00:04:01.460
Now I've noticed I put it here in the cascade of if statements.

55
00:04:01.460 --> 00:04:04.500
The reason for this is our first priority is to attack.

56
00:04:04.910 --> 00:04:07.890
If we cannot attack we are going to be suspicious.

57
00:04:08.030 --> 00:04:13.190
And if it is no longer time to be suspicious because the enemy had went away a certain amount of time

58
00:04:13.250 --> 00:04:18.170
ago then we are going to move back to our guard position.

59
00:04:18.170 --> 00:04:20.330
That's the kind of attack reads that's the cascade.

60
00:04:20.330 --> 00:04:21.590
Kind of makes sense.

61
00:04:21.590 --> 00:04:26.390
So you're gonna implement suspicion you're going to create a suspicion condition.

62
00:04:26.390 --> 00:04:32.930
Now think about this because you might have to introduce some configuration parameters and how can we

63
00:04:32.930 --> 00:04:39.400
cancel any other action because bear in mind you might not have just been fighting.

64
00:04:39.420 --> 00:04:45.390
You might have done something else we want to make it as generic as possible hacking cancel any action

65
00:04:45.390 --> 00:04:52.350
that might have been going on for the plan and just wait there suspiciously in idle so put a video and

66
00:04:52.350 --> 00:04:56.720
have a go at this challenge KAYE Welcome back.

67
00:04:56.770 --> 00:05:00.580
So I did allude to the fact we would need a new configuration parameter.

68
00:05:00.580 --> 00:05:08.490
We're going to need a serialize field and it's going to be a float called the suspicion time.

69
00:05:08.500 --> 00:05:15.700
And I'm going to default that to be about three seconds something that sounds reasonable and you can

70
00:05:15.700 --> 00:05:17.950
always change that design can always tweak.

71
00:05:17.950 --> 00:05:25.810
And so what we're gonna do is if the Times since we last saw the player is less than the suspicion time

72
00:05:26.830 --> 00:05:29.820
then we are going to be suspicious.

73
00:05:30.040 --> 00:05:36.370
And what we're going to do when we are suspicious I'm going to actually put that comment in there to

74
00:05:36.370 --> 00:05:38.600
say that that's a suspicion state.

75
00:05:38.600 --> 00:05:42.730
In fact the fact I'm leaving a comment in there kind of makes me think we need to be more explicit with

76
00:05:42.730 --> 00:05:47.680
this comments generally lead to code smell.

77
00:05:47.680 --> 00:05:50.400
We're not making the code itself documents itself.

78
00:05:50.410 --> 00:05:54.490
So for now I'm just going to type in here what I think this should do.

79
00:05:54.490 --> 00:06:05.400
I think they should get hold of the action scheduler and it should cancel the current action like so

80
00:06:05.970 --> 00:06:06.820
nice and simple.

81
00:06:07.550 --> 00:06:07.800
OK.

82
00:06:07.830 --> 00:06:12.930
So now what we want to do is just move these states into separate functions.

83
00:06:12.930 --> 00:06:19.020
So I'm going to take this attack and I'm not going to include the timer because I think it makes sense

84
00:06:19.020 --> 00:06:25.470
for the timer to be visible all at this level in the update to see what's going on we'll know this way.

85
00:06:25.500 --> 00:06:29.970
All an update when it gets reset when we use it at hand when it gets updated.

86
00:06:30.210 --> 00:06:37.330
So the attack I am going to extract into a and attack behavior.

87
00:06:37.440 --> 00:06:43.810
The action scheduler cancel is going to be suspicious behavior.

88
00:06:43.890 --> 00:06:46.800
And this guard is going to be guard behavior.

89
00:06:46.800 --> 00:06:50.130
So now at the top level and update it makes sense if we're dead we don't do anything.

90
00:06:50.610 --> 00:06:54.350
If these conditions are true then we launch the attack behavior.

91
00:06:54.360 --> 00:06:59.700
If the time since we last saw the player is lessened suspicion time reduce suspicion behavior and otherwise

92
00:06:59.760 --> 00:07:03.080
we are going to go back and guard that's our default behavior.

93
00:07:03.150 --> 00:07:04.300
Default fallback.

94
00:07:04.530 --> 00:07:07.500
And we've got the implementation details down here.

95
00:07:07.500 --> 00:07:08.460
So let's try this out.

96
00:07:08.460 --> 00:07:13.540
Let's go over to our guards and see if they're going to be suspicious so he's come towards me.

97
00:07:13.540 --> 00:07:15.380
He loses sight of me.

98
00:07:15.540 --> 00:07:19.770
He goes to his position and waits around and then goes back.

99
00:07:19.770 --> 00:07:26.910
I think that was a very long time to wait so I'm going to tweak it in my enemy prefab that he should

100
00:07:26.910 --> 00:07:29.010
be suspicious for a little bit longer.

101
00:07:29.490 --> 00:07:33.280
So it's suspicion time let's make it five seconds or something.

102
00:07:33.420 --> 00:07:34.410
So I go up to him.

103
00:07:34.410 --> 00:07:39.630
He follows me follows me through the trees might not see me see where he is if he follows me through

104
00:07:39.630 --> 00:07:40.560
the trees.

105
00:07:40.560 --> 00:07:42.480
So I leave him behind.

106
00:07:42.480 --> 00:07:43.110
They go.

107
00:07:43.110 --> 00:07:46.050
He is being suspicious suspicious suspicious.

108
00:07:46.050 --> 00:07:49.280
And then he goes back to guard his point again.

109
00:07:49.290 --> 00:07:55.050
So this is a way that you could learn some guards away from their guard post for a short time but they

110
00:07:55.050 --> 00:07:59.050
will eventually go back there which is the natural thing for them to do.

111
00:07:59.190 --> 00:08:00.660
And I think that's quite cool.

112
00:08:00.690 --> 00:08:09.660
So we've figured out how we can extend the mind of the A.I. so that it has this knowledge of both where

113
00:08:09.660 --> 00:08:14.280
it's meant to be guarding but also the fact that it saw a plan and it saw it some time ago.

114
00:08:14.310 --> 00:08:16.860
So that is cool.

115
00:08:16.860 --> 00:08:22.190
In the next lecture we are going to be focusing instead on waypoints and patrol routes.

116
00:08:22.200 --> 00:08:24.430
So more interesting than guarding behavior.

117
00:08:24.450 --> 00:08:28.760
We're going to get our guard to wander around patrolling the area.

118
00:08:28.770 --> 00:08:29.340
I'll see you there.
