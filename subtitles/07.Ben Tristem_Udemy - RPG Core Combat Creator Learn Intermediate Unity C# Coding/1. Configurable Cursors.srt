1
00:00:04,430 --> 00:00:05,370
Hello and welcome.

2
00:00:05,390 --> 00:00:07,550
In this lecture we're gonna be working with pixel curses.

3
00:00:07,550 --> 00:00:13,010
So here we've got the cursor here which is my movement cursor I hover over God.

4
00:00:13,010 --> 00:00:18,150
You see I've got an attack cursor if I hover over nothingness where I cannot move no attack then I get

5
00:00:18,260 --> 00:00:24,020
nothing cursor that's all gonna be working at and we're going to have these mappings exposed in the

6
00:00:24,020 --> 00:00:31,310
editor so that you can see the types that all of action that happen and what cursor texture they actually

7
00:00:31,310 --> 00:00:32,230
map to.

8
00:00:32,240 --> 00:00:39,130
So let's dive in and see how to implement it so we'd like to create some cursor affordable says for

9
00:00:39,220 --> 00:00:41,170
being able to mouse over objects.

10
00:00:41,170 --> 00:00:44,210
So for example we've got these pickups.

11
00:00:44,380 --> 00:00:46,530
That's how I got pickups over here.

12
00:00:46,540 --> 00:00:48,480
We'll get no afford it so we can pick them up.

13
00:00:48,490 --> 00:00:52,120
God no Faunce that we're gonna attack when we click over there or that we're going to walk over here

14
00:00:52,450 --> 00:00:54,750
or that certain areas are gonna be out of bounds.

15
00:00:54,820 --> 00:00:58,850
All this we'd like to fix with some cursor affords.

16
00:00:58,900 --> 00:01:04,390
And how is this going to look what kind of situations do we need to look out for it with curses.

17
00:01:04,390 --> 00:01:09,400
So first of all I'd like it to be design a configurable so we're gonna have certain types of curses

18
00:01:09,400 --> 00:01:16,120
such as walkable areas and at enemies we want to attack and we want to be able to get the designer to

19
00:01:16,120 --> 00:01:21,930
say OK well when we want to attack want to use this cursor we want to be able to easily add more types.

20
00:01:21,940 --> 00:01:27,940
So as we progress and develop the game we'd like to be able to add in new things like I don't know intractable

21
00:01:28,000 --> 00:01:34,180
objects such as a door that we could open we might want to have dialog boxes and for when we can talk

22
00:01:34,180 --> 00:01:36,190
to employees and so on and so forth.

23
00:01:36,220 --> 00:01:42,550
So we want this to be easily extensible and we want to just have one method for it to be set to set

24
00:01:42,550 --> 00:01:43,310
the cursor.

25
00:01:43,660 --> 00:01:44,980
So what do I mean by that.

26
00:01:44,980 --> 00:01:51,130
Well what I mean is that in interact with combat at the point where we know that we can interact with

27
00:01:51,130 --> 00:01:55,720
combat which is here when we're returning true from interact with combat we'd brush off our knowledge

28
00:01:55,720 --> 00:02:00,400
of this how it works is that every update we check what we can interact with.

29
00:02:00,400 --> 00:02:06,160
We return early if we can interact with something so combat we return early movement we return early

30
00:02:06,970 --> 00:02:08,640
if we can do that.

31
00:02:08,650 --> 00:02:14,140
So what we want to do is with combat we know that we're doing combat because we're returning true at

32
00:02:14,140 --> 00:02:18,100
this point and we know that it hasn't returned before this point.

33
00:02:18,100 --> 00:02:24,910
So what we want to do is set the cursor and I don't want to have different methods so I don't want to

34
00:02:24,910 --> 00:02:31,880
set attack cursor for example I want to go set attack cursor Well I want to do is just have one function

35
00:02:31,900 --> 00:02:39,190
set cursor in here and for it to take an enum to basically say what kind of cursor that's going to allow

36
00:02:39,190 --> 00:02:43,980
us to make it easily extensible we can add to this enum I'm gonna make the enum within the play controller

37
00:02:43,980 --> 00:02:53,260
class for now and I'm going to call it the cursor type and inside this curse type we're gonna have to

38
00:02:53,260 --> 00:02:55,250
start off with just some basic ones.

39
00:02:55,270 --> 00:02:58,220
So we're going to have none as the kind of default.

40
00:02:58,220 --> 00:03:07,860
No no action possible here now we're gonna have movement and then we're going to have combat so these

41
00:03:07,860 --> 00:03:14,290
different curses and what we're going to do is just pass into the set cursor the cursor type in.

42
00:03:14,340 --> 00:03:19,080
So I'm gonna have cursor type dot combat in this case.

43
00:03:19,080 --> 00:03:23,640
Now the other case is we're going to use this fact let's just go ahead and create a default definition

44
00:03:23,640 --> 00:03:29,130
for set cursor so control dot generate the method where has it put my method down here I'm just gonna

45
00:03:29,130 --> 00:03:36,120
move it the low interacts with movement it's going to set the right there and then what I want to do

46
00:03:36,120 --> 00:03:42,930
is call a similar method in just before we return true in interact with movement and it's going to set

47
00:03:42,930 --> 00:03:52,020
the cursor type to movement and now quick little mini quiz where will you put setting the cursor type

48
00:03:52,080 --> 00:03:59,170
to none Well so where I'm gonna put it is it at the end of update if we reach the end of update we know

49
00:03:59,170 --> 00:04:04,210
that we aren't able to interact with combat or movement or any of the other things that we update here

50
00:04:04,210 --> 00:04:05,040
and update.

51
00:04:05,170 --> 00:04:10,820
So the cursor type that needs to come back is going to be none like so.

52
00:04:10,900 --> 00:04:16,930
So the next thing we need is for this to be easily designed configurable and for that we need to understand

53
00:04:16,930 --> 00:04:21,790
a little bit more about how we're going to get these curses to be set.

54
00:04:21,790 --> 00:04:31,160
Now if we go down to asset cursor method the thing we're going to be using is Unity's cursor dot set.

55
00:04:31,200 --> 00:04:32,210
Cursor.

56
00:04:32,340 --> 00:04:39,450
And this takes in a texture to 2D and a vector to hotspot the hotspot is the location within that vector

57
00:04:39,480 --> 00:04:42,900
image which should be active which should be basically the mouse.

58
00:04:42,900 --> 00:04:44,100
And then we have a cursor mode.

59
00:04:44,100 --> 00:04:45,640
We're just gonna be using cursor mode.

60
00:04:45,670 --> 00:04:51,330
Also it really depends on the platform that you're using but auto is probably the best choice unless

61
00:04:51,330 --> 00:04:53,800
you have some specific requirements otherwise.

62
00:04:54,120 --> 00:05:00,180
So to bundle together this configuration for the designer and for our editor we're gonna create a struct

63
00:05:00,240 --> 00:05:02,670
and particularly a C realizable struct.

64
00:05:02,760 --> 00:05:09,240
So it's going to be struct and I'm going to call it a cursor mapping and we'll see why in just a second.

65
00:05:09,250 --> 00:05:17,690
So the first type I'm gonna have in here is going to be the cursor type very much the same as we are

66
00:05:17,690 --> 00:05:19,460
doing with the progression system.

67
00:05:19,460 --> 00:05:23,740
This is going to be a mapping object from the cursor type to that configuration.

68
00:05:23,750 --> 00:05:29,290
So we're gonna have an array of it in just a second so I'll just finish off my type declaration here.

69
00:05:29,350 --> 00:05:35,090
I'm gonna make it public so we can access this external well within our play a class at least.

70
00:05:35,090 --> 00:05:38,300
And then I'm going to have a serialized field here.

71
00:05:38,510 --> 00:05:48,530
So it's going to be serialize field and it's going to be a cursor mapping array called cursor mappings

72
00:05:48,710 --> 00:05:53,150
and we're going to d follow initialize that to know the unity serialization system will take care of

73
00:05:53,150 --> 00:05:53,870
the rest.

74
00:05:53,990 --> 00:06:01,310
And the final piece is we need to do a system dot see realizable on our cursor mapping struct.

75
00:06:01,310 --> 00:06:06,080
Now there's gonna be more stuff going into this struct which you're going to fill out in a second but

76
00:06:06,080 --> 00:06:12,620
for now what I want to do is create an empty method a little private method down here which is going

77
00:06:12,620 --> 00:06:21,050
to return at cursor mapping from that array and we're just gonna call it gets cursor mapping it is going

78
00:06:21,050 --> 00:06:28,980
to take a curse type which I'll call just type and do something with it which is going to be your job.

79
00:06:29,060 --> 00:06:37,430
And over here in the set cursor we can do a cursor mapping get a local variable here called cursor mapping

80
00:06:38,280 --> 00:06:40,760
and we'll just call it the mapping.

81
00:06:40,760 --> 00:06:45,650
We're going to do that by calling get cursor mapping with the argument here which I'm going to rename

82
00:06:45,650 --> 00:06:50,090
to type and pass that in as well.

83
00:06:50,090 --> 00:06:55,970
And then what we can do is use this mapping to pass arguments to set cursor so we can do things like

84
00:06:55,970 --> 00:07:03,200
mapping dot texture and mapping dot hotspot to get what we want there.

85
00:07:03,200 --> 00:07:08,000
And finally the cursor mode as I said we're just going to use auto cursor mode to auto it's an enum

86
00:07:08,390 --> 00:07:09,970
that we can use like so.

87
00:07:09,980 --> 00:07:13,450
So there's a few bits in here to fill out for you folks.

88
00:07:13,490 --> 00:07:17,330
That's gonna be in the challenge in just a second but first I want to show you the asset pack we're

89
00:07:17,330 --> 00:07:18,890
going to be using.

90
00:07:18,890 --> 00:07:25,370
So I'm gonna be using this pixel cursors asset pack by the very awesome folks at Clayman studios.

91
00:07:25,370 --> 00:07:30,770
And if you go ahead and get this it's just free you can go ahead and import into your own project which

92
00:07:30,770 --> 00:07:32,400
is what I'm doing now then.

93
00:07:32,420 --> 00:07:38,420
This is a great start but I also recommend some other great packs by claimant's studio which are not

94
00:07:38,510 --> 00:07:39,350
free.

95
00:07:39,380 --> 00:07:44,570
In fact many of them you can see down in the recommendations here from this pack is stuff like the old

96
00:07:44,570 --> 00:07:47,980
style curses fantasy pack and there's more and more of them.

97
00:07:47,990 --> 00:07:50,630
They all cost just you know a few euros.

98
00:07:50,630 --> 00:07:55,070
It's really not a law if you like the look at the pack do support claim on studio and go and get one

99
00:07:55,070 --> 00:07:56,270
of those pay packs.

100
00:07:56,270 --> 00:07:59,840
They're gonna be very easy to integrate just the same as the pack that we're using.

101
00:07:59,840 --> 00:08:03,280
So the asset pack I just downloaded is in the root of my assets.

102
00:08:03,290 --> 00:08:08,840
I want to put it under asset packs like we do that's our convention so let's go ahead move that across.

103
00:08:09,220 --> 00:08:15,410
Like so and then one more thing we have to do with these curses in order to actually be able to use

104
00:08:15,410 --> 00:08:18,550
them as textured curses for our cursor.

105
00:08:18,570 --> 00:08:26,300
Very circular that you have to go ahead and select these curses and change their texture type from sprite

106
00:08:26,340 --> 00:08:32,540
2D over to the cars of type and that will just make sure there aren't any weird rendering glitches when

107
00:08:32,540 --> 00:08:33,070
you do that.

108
00:08:33,140 --> 00:08:35,500
Do use it as a cursor.

109
00:08:35,550 --> 00:08:39,870
So now it is challenge time for you to complete that get cursor mapping.

110
00:08:39,870 --> 00:08:43,830
So you're going to be adding fields to the struct to support the cursor mapping you're going to add

111
00:08:43,830 --> 00:08:52,090
mappings to the player prefab so editing that serialized field of mappings and then you're going to

112
00:08:52,090 --> 00:08:58,510
be finding the right mapping using something algorithmic maybe like a for loop to return the right sorts

113
00:08:58,510 --> 00:09:03,040
of mapping and setting the cursor so hopefully what you'll end up with is when you play the game you'll

114
00:09:03,040 --> 00:09:09,640
be able to hover over enemies and see at a cursor for attacking when you hover over something else like

115
00:09:09,640 --> 00:09:11,640
the ground you see a cursor for walking.

116
00:09:11,740 --> 00:09:17,230
And when you hover over something that you can't click on you see the non cursor pause video and have

117
00:09:17,230 --> 00:09:19,180
a go at the challenge.

118
00:09:19,180 --> 00:09:19,810
Welcome back.

119
00:09:19,810 --> 00:09:22,750
So let's fill out that last little bit of code.

120
00:09:22,750 --> 00:09:27,310
So in get cursor mapping we're just going to start off with a range based for loop.

121
00:09:27,310 --> 00:09:31,450
So we're going to be going over that sort of for loop the other one for each.

122
00:09:31,450 --> 00:09:32,780
That's the one I want.

123
00:09:32,860 --> 00:09:36,560
That's where I spent my head in C++ land a little bit recently.

124
00:09:36,610 --> 00:09:44,050
So the cursor mappings is an array that we want to iterate over and the type is going to have look for

125
00:09:44,050 --> 00:09:49,510
cursor mappings so I'm just going to call it a mapping and all we want to do with this cursor mapping

126
00:09:49,510 --> 00:09:58,590
is just check mapping dots and then we want to check the type is equal to the type that we got passed

127
00:09:58,590 --> 00:09:59,930
in if so.

128
00:09:59,940 --> 00:10:03,570
Well go ahead and return that mapping because it's the right one.

129
00:10:03,600 --> 00:10:08,310
Obviously it's going to find the first matching one if it doesn't find anything at the moment or we're

130
00:10:08,310 --> 00:10:12,550
going to do is just try and return the first element from this array.

131
00:10:12,570 --> 00:10:18,000
Now obviously in practice you don't want to have this to happen you want your mapping to be complete

132
00:10:18,810 --> 00:10:23,520
and the first element from my array is actually this custom custom mapping array is one I should be

133
00:10:23,520 --> 00:10:24,060
looking at.

134
00:10:24,240 --> 00:10:31,230
So then we want to fill out these two parameters so I can actually auto complete that control dots generate

135
00:10:31,230 --> 00:10:38,250
the variable field in yet in the cursor mapping do the same with hotspot generated and then we can go

136
00:10:38,250 --> 00:10:43,950
ahead and skip over to that using F 12 and we can see that it is create them as internal I actually

137
00:10:43,950 --> 00:10:50,610
want them just as public for simplicity's sake like so and that should allow us to access them and it

138
00:10:50,610 --> 00:10:55,130
will also make them serialize the ball so that unity will show them in the editor.

139
00:10:55,170 --> 00:10:58,320
So let's go over to our character prefab.

140
00:10:58,320 --> 00:11:06,200
I'm gonna go to core player and then I am going to look at my play a prefab down in the cursor mappings

141
00:11:06,210 --> 00:11:10,950
I want to create three cursor mappings the first one is going to be for none the second one is gonna

142
00:11:10,950 --> 00:11:16,030
be for movement the third one is going to be for combat and we can bring in the appropriate curses.

143
00:11:16,050 --> 00:11:24,360
So I like this one for combat which is a little X symbol then for movement I quite like just this basic

144
00:11:24,360 --> 00:11:30,780
blue and then for combat what could you choose you could choose all sorts of things.

145
00:11:30,780 --> 00:11:35,940
I'm gonna go for one which has got a little sword icon obviously make your own choices you might bring

146
00:11:35,940 --> 00:11:41,310
in your own asset packs you might even have some gimp skills or whatever it is a photoshop skills you

147
00:11:41,310 --> 00:11:44,280
might be able to create some of your own icons as well.

148
00:11:44,280 --> 00:11:49,860
So if you go ahead and hit play then you can see that we've got our movement cursor when we're moving

149
00:11:49,860 --> 00:11:55,200
around a hover over the enemy and sure enough I have got an attack cursor and I start attacking when

150
00:11:55,200 --> 00:12:01,480
I hit him we don't have anything for our pickups as of yet because they are not kind of clickable I

151
00:12:01,480 --> 00:12:08,940
type items but if I hover over somewhere where I cannot go then basically off the edge of the world

152
00:12:08,940 --> 00:12:11,970
you can see I get that none icon as well.

153
00:12:11,970 --> 00:12:18,690
So we got our basics in place of mapping curses to the actions that we want in the next lecture we're

154
00:12:18,690 --> 00:12:23,840
going to be looking at how UI can block our cursor and be the first thing we can interact with because

155
00:12:23,850 --> 00:12:29,430
it later on in this game we are going to want to include some UI and that's going to be the way that

156
00:12:29,430 --> 00:12:34,710
we can do it and then we're gonna move on to more generic right testable components so that we can do

157
00:12:35,070 --> 00:12:39,210
actually have a pickup cursor as well so let's dive onwards and upwards.
