1
00:00:04,630 --> 00:00:08,650
Hello and welcome in this lecture we're gonna be learning about an awesome concept called a unity event

2
00:00:08,980 --> 00:00:14,710
which allows us in the unity inspector to hook up functions to certain gameplay events for example to

3
00:00:14,710 --> 00:00:21,670
help script exposes an event called take damage and we're able to hook this up to the spawner to spawn

4
00:00:21,750 --> 00:00:28,870
damaged text and you can see that the result is that if we go ahead and hit someone then they spawn

5
00:00:28,870 --> 00:00:31,600
damage text when they are hit and when they take damage.

6
00:00:31,600 --> 00:00:39,130
Same goes for the player if he gets hit also spawns text let's dive in and see how to use these awesome

7
00:00:39,190 --> 00:00:40,930
events okay.

8
00:00:40,940 --> 00:00:47,930
So at the moment the what we've got is that the damage takes is spawning up dynamically but it is currently

9
00:00:48,050 --> 00:00:48,720
only happening.

10
00:00:48,740 --> 00:00:52,390
We have a look at our damage tech spawn it's only happening on start.

11
00:00:52,460 --> 00:00:57,920
Now that's not the way we wanted to do this so I'm going to go ahead and remove our start function entirely.

12
00:00:57,950 --> 00:01:05,360
We've got a public method called spawn and we want this spawn method to get called with some damage

13
00:01:05,420 --> 00:01:07,790
amount when we actually take damage.

14
00:01:07,790 --> 00:01:09,030
So where does that happen.

15
00:01:09,050 --> 00:01:12,350
What triggers damage what can tell us that we've taken damage.

16
00:01:12,620 --> 00:01:13,850
Little question for you.

17
00:01:13,860 --> 00:01:15,890
Well that is the health component.

18
00:01:15,890 --> 00:01:20,060
So if we go over to our health component and have a look.

19
00:01:20,060 --> 00:01:25,070
Where could this be happening in take damage for example we can see that there is some damage being

20
00:01:25,070 --> 00:01:25,570
taken now.

21
00:01:25,600 --> 00:01:32,240
I want to show you yet another way that we can subscribe to events we've seen how to use delegates to

22
00:01:32,240 --> 00:01:34,000
subscribe to events in code.

23
00:01:34,010 --> 00:01:38,890
Now I want to show you how we can subscribe to events in the Unity Editor.

24
00:01:38,900 --> 00:01:44,300
You may have seen it if you are have used buttons before in the UI that you can click a plus button

25
00:01:44,330 --> 00:01:51,050
and you can say what function I want that button to call when it is clicked and we can do that for ourselves.

26
00:01:51,050 --> 00:01:54,910
The thing that we need to use is called a unity event.

27
00:01:55,040 --> 00:01:59,990
Now unity events will need to include a UI namespace when not gonna use that just yet.

28
00:01:59,990 --> 00:02:06,320
We'll just allow Visual Studio code to do that for us and it is a C ball field and the type is going

29
00:02:06,320 --> 00:02:13,520
to be a unity event and we'll see what it looks like in just a second and then I'm going to do a take.

30
00:02:13,610 --> 00:02:16,850
Damage is going to be the name of the event.

31
00:02:16,880 --> 00:02:20,480
Like so now is complaining at me because I don't have the right namespace.

32
00:02:20,510 --> 00:02:25,350
So unity event we need to be using the unity engine.

33
00:02:25,400 --> 00:02:33,470
Dot events namespace and that will allow us if we go over to the editor and let's open up our character

34
00:02:33,980 --> 00:02:40,550
it's gonna have a look at our character where as a character is the character and you'll notice that

35
00:02:40,550 --> 00:02:46,280
the character has got a health script and under the health script we now have this new section this

36
00:02:46,280 --> 00:02:53,690
take damage section which looks very much like the UI for a button or binding the button callbacks.

37
00:02:53,690 --> 00:02:54,710
So how does this work.

38
00:02:54,710 --> 00:03:00,440
It basically means that with the plus button we can go ahead and drag in any object.

39
00:03:00,440 --> 00:03:05,750
For example I might drag in the character and I can select any function I like so for example I could

40
00:03:05,870 --> 00:03:11,500
on any of these components so I can go and say hey I want to go and set.

41
00:03:11,510 --> 00:03:16,370
I don't know the mover to cancel something like that.

42
00:03:16,400 --> 00:03:21,100
I can go and cancel the mover whenever we take damage and it obviously doesn't make sense.

43
00:03:21,110 --> 00:03:25,280
You can obviously hook this up in a better way but that's just an example.

44
00:03:25,280 --> 00:03:32,300
Now we want and also one more thing is that you can add multiple things so you can have it call a list

45
00:03:32,300 --> 00:03:34,670
of functions each doing something.

46
00:03:34,670 --> 00:03:38,250
So for example we could have it trigger a particle effect.

47
00:03:38,390 --> 00:03:41,550
We could have it then trigger this damaged text.

48
00:03:41,690 --> 00:03:44,370
We could then have it trigger some sound as well.

49
00:03:44,390 --> 00:03:49,620
Basically this is allows you your imagination to run wild.

50
00:03:49,670 --> 00:03:53,660
So where are we going to do the call to take damage.

51
00:03:53,660 --> 00:04:01,130
Remember that with delegates for example the level up in our base stats remember that level up in base

52
00:04:01,130 --> 00:04:07,190
stats is very much like a unity event and we call it just like this.

53
00:04:07,220 --> 00:04:09,050
Just like we would call any function.

54
00:04:09,200 --> 00:04:13,760
Now when it comes to unity events things are a little bit different.

55
00:04:13,820 --> 00:04:21,080
So we want to call our take damage and I'm just now going to call it in start and what we do is we do

56
00:04:21,080 --> 00:04:24,240
take damage dots invoke instead.

57
00:04:24,260 --> 00:04:29,660
And then we call the invoke function and that's going to trigger off all of those functions in the list

58
00:04:29,750 --> 00:04:32,330
on that serialized ball field.

59
00:04:32,330 --> 00:04:37,850
So that brings me to your challenge to trigger the take damage event so call it in the right place or

60
00:04:37,850 --> 00:04:44,810
invoke it in the right place hook up the correct function and your goal is that at the end of this once

61
00:04:44,810 --> 00:04:49,940
you hooked up the right function and hooked up in the right place the damage text should spawn when

62
00:04:50,000 --> 00:04:55,760
you take damage when the particular character that is being hit for example takes damage that puts video

63
00:04:55,760 --> 00:04:58,190
and have a go at the challenge.

64
00:04:58,200 --> 00:04:58,650
Welcome back.

65
00:04:58,650 --> 00:05:02,940
So hopefully that helps you solidify your understanding of the unity event and see that they're very

66
00:05:02,940 --> 00:05:06,460
much the same as the delegates that we have seen in the past.

67
00:05:06,480 --> 00:05:08,700
So going to remove this take damage and vote from start.

68
00:05:08,730 --> 00:05:14,120
That's not where we want it where we want it to happen as I've hinted is intake damage itself.

69
00:05:14,250 --> 00:05:21,720
I'm gonna do after we have updated the health point value I'm going to invoke the take damage notification

70
00:05:21,720 --> 00:05:29,030
at that point but before we do any dying or anything else then we can go over to in fact.

71
00:05:29,040 --> 00:05:33,830
Actually I only want to invoke take damage if we aren't going to die.

72
00:05:33,840 --> 00:05:39,990
So I'm just gonna put an in an else statement in an if else here and that's where I'm going to do the

73
00:05:39,990 --> 00:05:46,680
invoke of take damage so you can go ahead and do the same thing and then we're gonna go over in it to

74
00:05:46,800 --> 00:05:49,980
damage text spawn and no actually we're gonna go over into the inspect.

75
00:05:49,990 --> 00:05:55,140
This is the magic of it is that we can hook up these events in the inspector rather than in code which

76
00:05:55,140 --> 00:06:00,510
allows us immense flexibility and allows the designer an awful lot of flexibility to say I'm gonna add

77
00:06:00,570 --> 00:06:08,080
a new take damage event with the plus icon remove any of the previous ones and I'm gonna drag in as

78
00:06:08,160 --> 00:06:15,180
the object the damage text spawner because we wanted to spawn some new damage text and if you go down

79
00:06:15,250 --> 00:06:21,210
in the list of functions under the damage tech spawner components we can call the spawn function.

80
00:06:21,210 --> 00:06:26,820
Now notice that it takes a number because our spawn function takes a number so we can enter something

81
00:06:26,820 --> 00:06:32,370
we could say something like 13 so that we can distinguish that is actually being called by this particular

82
00:06:32,370 --> 00:06:40,530
piece of hooking up logic and if we go ahead and hit play now well I would expect to see if I go and

83
00:06:40,530 --> 00:06:44,190
bash this guy with a fireball boom he'd get some text above his head.

84
00:06:44,190 --> 00:06:45,480
Let's try that again.

85
00:06:45,480 --> 00:06:45,900
Boom.

86
00:06:45,900 --> 00:06:48,540
Get some text above his head every single time.

87
00:06:48,540 --> 00:06:52,150
And if he hits us we get text above our heads too.

88
00:06:52,200 --> 00:06:57,960
Now one little bug that I want to fix before we move on is if I go and have a look at our player in

89
00:06:57,960 --> 00:07:01,800
the inspector you can see that all the damage texts that were spawned are still there.

90
00:07:01,860 --> 00:07:05,940
If he keeps attacking me they keep spawning and they aren't being destroyed.

91
00:07:06,300 --> 00:07:12,060
Now an easy way to fix this is just to change and add an event into the animation.

92
00:07:12,060 --> 00:07:19,560
So I'm gonna do this by going back to damage takes prefab and opening up the animation tab at the same

93
00:07:19,560 --> 00:07:20,270
time.

94
00:07:20,430 --> 00:07:25,620
And here right at the end of our animation where we want it to destroy we can add an animation event

95
00:07:25,650 --> 00:07:30,860
which is just this little icon here just at the top right of this left pane.

96
00:07:31,020 --> 00:07:38,090
We add that in and we need to select the thing that we want to call a function on such as damage text

97
00:07:38,100 --> 00:07:42,930
we would want to have a destroy function where there are no components here that have a destroy function

98
00:07:42,930 --> 00:07:44,930
that will destroy the whole prefab though.

99
00:07:45,240 --> 00:07:48,980
But fortunately we do have this damage text script that we've already created.

100
00:07:49,020 --> 00:07:54,120
If he is the work around where you in bed your canvas within a game object then you'll need to do things

101
00:07:54,180 --> 00:07:55,140
slightly differently.

102
00:07:55,170 --> 00:08:00,650
At this point just hang on till after this explanation and I'll show you how to do it.

103
00:08:00,720 --> 00:08:05,970
So if we go into a damaged text script what we gonna do is create a function that allows us to destroy

104
00:08:05,970 --> 00:08:12,420
the whole prefab and it's going to have to be public so a public void destroy text and it doesn't have

105
00:08:12,420 --> 00:08:18,510
to take any arguments and all it has to do is call destroy on the game object.

106
00:08:18,510 --> 00:08:25,130
Now just this is just because you can't call things directly on the game object from an animation event.

107
00:08:25,140 --> 00:08:27,810
So this just does the pass through for us.

108
00:08:27,810 --> 00:08:35,640
And now if I have my animation event selected and I select the damaged text object which is the one

109
00:08:35,640 --> 00:08:39,840
that has the correct component make sure you have that one selected first because it need unity needs

110
00:08:39,840 --> 00:08:46,110
to know where it can look for the functions that it can call so you then select the animation event

111
00:08:46,230 --> 00:08:48,560
and go to the function dropdown here.

112
00:08:48,720 --> 00:08:55,890
Then what we can do is scroll down or just start typing the destroy and Vega found meat destroy text

113
00:08:55,920 --> 00:08:57,310
as the only option.

114
00:08:57,390 --> 00:09:03,540
Now if you're using the work around where you have the canvas embedded within a game object to be able

115
00:09:03,540 --> 00:09:08,550
to see your animation text then you need to do things slightly differently because the animation event

116
00:09:08,850 --> 00:09:12,380
cannot call a function that is on a different game object.

117
00:09:12,390 --> 00:09:17,730
So we need to have ADD destroy a script on here and not be able to use our damage script which needs

118
00:09:17,730 --> 00:09:19,900
to stay on the root.

119
00:09:19,920 --> 00:09:26,730
So the way we're gonna do this is to add a new destroyer script and it's going to be generic and what

120
00:09:26,730 --> 00:09:31,620
it's going to do is it's going to have a target linked in the inspector which is going to be the parent

121
00:09:31,650 --> 00:09:32,520
the damaged text.

122
00:09:32,550 --> 00:09:35,780
That's what it's gonna destroy and it will have a destroy target function.

123
00:09:35,880 --> 00:09:38,520
So let's flip over to that script and create it.

124
00:09:38,520 --> 00:09:46,140
So first of all we need serialized field and it's going to be a type game object and it is going to

125
00:09:46,140 --> 00:09:51,440
be the targets to destroy and we'll set it to no.

126
00:09:51,520 --> 00:09:53,560
And then it's going to be public void.

127
00:09:53,590 --> 00:09:57,070
Destroy target takes no arguments.

128
00:09:57,070 --> 00:09:59,890
And just like we've seen it's going to destroy.

129
00:09:59,920 --> 00:10:04,930
But instead of destroying the current game object it's going to destroy the target to destroy.

130
00:10:05,110 --> 00:10:11,050
And then what you can do is you can simply go and hook up that serialized field because we want to destroy

131
00:10:11,080 --> 00:10:12,380
the parent here.

132
00:10:12,400 --> 00:10:16,330
We don't just want to destroy the anything or we're gonna leave the parent prefab around it's not going

133
00:10:16,330 --> 00:10:17,250
to fully clean up.

134
00:10:17,950 --> 00:10:24,430
And then we can hook up at event animation events to the correct destroy target function.

135
00:10:24,430 --> 00:10:32,080
So now let's just check that that's working so I'm going to go ahead and attack the enemy and actually

136
00:10:32,080 --> 00:10:35,740
get him to attack makers easier to find the player in the inspector.

137
00:10:35,740 --> 00:10:39,520
And then what I want to do is pause this before I die.

138
00:10:39,520 --> 00:10:42,870
Go and find under core player damage to export.

139
00:10:42,880 --> 00:10:48,520
You can see the damage take spawner is currently empty because there are no damage texts hovering over

140
00:10:48,520 --> 00:10:49,240
my head.

141
00:10:49,330 --> 00:10:53,590
And if I go ahead and hit play you can see it's creating them and destroying them repeatedly as can

142
00:10:53,590 --> 00:10:57,890
be seen by this arrow which is showing them and hiding them repeatedly.

143
00:10:57,910 --> 00:11:00,130
So that was quite an action packed lecture.

144
00:11:00,130 --> 00:11:07,210
What we have done is we have introduced the concept of a unity event which allows us very much like

145
00:11:07,210 --> 00:11:10,330
a delegate to bind functions to particular events.

146
00:11:10,330 --> 00:11:15,070
But the difference is it allows us to do it in the inspector rather than in code which allows the design

147
00:11:15,080 --> 00:11:21,610
lots of flexibility and we've also made sure that we're clearing up all the damage texts that we spawn.

148
00:11:21,620 --> 00:11:25,880
The next thing we're going to be moving onto in the next couple of lectures is working out how we can

149
00:11:25,880 --> 00:11:29,290
display the correct damage amounts above the head.

150
00:11:29,330 --> 00:11:29,740
See there.
