WEBVTT
1
00:00:04.540 --> 00:00:05.500
Hello and welcome.

2
00:00:05.500 --> 00:00:09.710
Not much different here we're still moving around as we did before.

3
00:00:09.730 --> 00:00:16.600
The only difference is that now on our player as well as our movie script we have also a play a controller

4
00:00:16.600 --> 00:00:18.700
script and that player controller script.

5
00:00:18.720 --> 00:00:22.680
Here's what's responsible for doing the right casting the movie script is what's responsible for doing

6
00:00:22.690 --> 00:00:23.010
movement.

7
00:00:23.010 --> 00:00:24.910
We've separated those two apart.

8
00:00:25.060 --> 00:00:30.550
And I'll tell you about all the great benefits about this is such as getting a movement practically

9
00:00:30.550 --> 00:00:31.090
for free.

10
00:00:31.480 --> 00:00:35.480
So let's dive in and see how to do this.

11
00:00:35.500 --> 00:00:41.200
So the first thing we're going to want to do in this section is the ability to click on an object so

12
00:00:41.200 --> 00:00:46.390
that we can then targeted for our attack move towards it then play attack animation for the first stage

13
00:00:46.390 --> 00:00:51.010
of that is going to be that control step of clicking on the object.

14
00:00:51.010 --> 00:00:55.090
Now I'm going to just get us to visualize this in this lecture because we're not actually going to be

15
00:00:55.090 --> 00:00:59.470
doing anything to do with actually clicking on the object we're going to be doing many refactor.

16
00:00:59.590 --> 00:01:00.880
But I do want to be able to visualize it.

17
00:01:00.910 --> 00:01:06.640
So in the sandbox level I'm going to go and right click in the hierarchy go to 3D object capsule and

18
00:01:06.640 --> 00:01:08.490
create as a little capsule here.

19
00:01:08.500 --> 00:01:11.380
This is going to be the enemy quote unquote.

20
00:01:11.380 --> 00:01:18.010
And I am going to make it a little bit funny because I think this is a bit dull as a normal capsule

21
00:01:18.010 --> 00:01:22.300
I'm going to make it kind of short and squat and I'm going to pop it over on the ground here.

22
00:01:22.300 --> 00:01:28.160
So this is a short and squat enemy and while we're at it let's rename it to enemy rather than capsule

23
00:01:28.360 --> 00:01:30.760
to make our imaginations really flow.

24
00:01:30.760 --> 00:01:32.800
And I'm going to prefab it as well.

25
00:01:32.800 --> 00:01:36.550
Now this is gonna go in the game folder because it is a designer hat type thing.

26
00:01:36.550 --> 00:01:44.290
It is a prefab is create an asset created in unity in the Unity Editor and it's going to go into characters

27
00:01:44.350 --> 00:01:45.790
and I'm going to drag it in there.

28
00:01:45.790 --> 00:01:50.580
So we've got a player we've got an enemy seems to be making sense if we go ahead and hit play.

29
00:01:50.620 --> 00:01:55.150
Let me just illustrate what I'd like to be able to do is hover my mouse over the enemy and click on

30
00:01:55.150 --> 00:01:55.600
it.

31
00:01:55.760 --> 00:02:01.210
And the moment I walk to that location but I would like to walk within range of my attack so stop a

32
00:02:01.210 --> 00:02:04.700
little bit before like this and then stop beating the enemy up.

33
00:02:04.720 --> 00:02:09.660
So how are we going to do that well we're going to need to do some recasting to try and find this component.

34
00:02:09.670 --> 00:02:11.290
But before we start on all that.

35
00:02:11.290 --> 00:02:13.100
Where should that code live.

36
00:02:13.150 --> 00:02:18.730
Because as it currently stands this is a file it was deleted and you should have seen that whoopsie

37
00:02:18.730 --> 00:02:19.890
daisies.

38
00:02:20.170 --> 00:02:24.790
So as it currently stands and rate casting is happening here in the movie script the movie C.S. script

39
00:02:25.420 --> 00:02:34.120
and the point is is that the right place for us to be doing right casting also for the whether we hit

40
00:02:34.120 --> 00:02:37.330
something on combat movements is not the right place to do combat is it.

41
00:02:37.480 --> 00:02:39.490
And this is quite shared logic.

42
00:02:39.490 --> 00:02:42.830
We're going to want to do a lot of this screen point to raise stuff again.

43
00:02:42.910 --> 00:02:47.440
So maybe this all starts to need to be pointed towards being in the same class.

44
00:02:48.130 --> 00:02:54.430
So let's have a think about that how could this work by separating out A CONTROL lab at the moment everything's

45
00:02:54.430 --> 00:02:54.960
in the movie.

46
00:02:54.990 --> 00:03:00.640
But I'm suggesting pulling it out into something for example called a player controller class and that's

47
00:03:00.640 --> 00:03:02.020
going to be dealing with a recasting.

48
00:03:02.050 --> 00:03:07.750
Tell the mover to do the movement and then that's all good.

49
00:03:07.750 --> 00:03:12.460
The benefit of this is that then the play controller can be used to drive things like a combat class

50
00:03:12.520 --> 00:03:20.740
as well separately to move a class and also a great benefit here is that if we have an interface right

51
00:03:20.740 --> 00:03:26.740
for the mover and for combat we can then swap out our player controller with an Enemy Controller and

52
00:03:26.740 --> 00:03:33.580
sharing the exact same movement code the exact same combat code we are able to have A.I. control a character

53
00:03:33.940 --> 00:03:40.900
so we can pretty much use the same code and really reduce our development costs and beyond this you

54
00:03:40.900 --> 00:03:44.530
know you might have other components that are driven by the play controller but not the enemy controllers

55
00:03:44.530 --> 00:03:47.040
such as special actions all of that is possible.

56
00:03:47.050 --> 00:03:49.660
And it's a nice kind of separation of concerns.

57
00:03:49.780 --> 00:03:51.910
So how are we going to do this.

58
00:03:51.910 --> 00:03:54.310
What parts of code do we want.

59
00:03:54.310 --> 00:03:55.270
Which parts don't we want.

60
00:03:55.270 --> 00:03:57.910
What is a good interface to the movement class.

61
00:03:58.450 --> 00:04:03.130
Well I would propose that a good interface to the movement class is something that just enables us to

62
00:04:03.160 --> 00:04:05.840
move to a particular destination.

63
00:04:06.280 --> 00:04:14.290
So if I hover over this the get component nav mesh agent if I select that you'll see a little light

64
00:04:14.290 --> 00:04:21.730
bulb comes up next to my cursor and if I click on that light bulb I can go and hit extract method and

65
00:04:21.730 --> 00:04:33.050
this pulls out a new method and I can rename the method to be something along the lines of move to now

66
00:04:33.110 --> 00:04:35.660
as it stands this is passing in a hit.

67
00:04:35.660 --> 00:04:37.100
I don't think that's quite right.

68
00:04:37.100 --> 00:04:39.290
I don't think we should be moving to a hit.

69
00:04:39.290 --> 00:04:41.300
I think we should be moving to a destination.

70
00:04:41.300 --> 00:04:49.620
So let's just take this hit point out and we're going to pass that in as the argument instead.

71
00:04:49.640 --> 00:04:50.620
So what's a hit point.

72
00:04:50.630 --> 00:04:53.720
If I hover over it it tells me that it is a vector 3.

73
00:04:54.200 --> 00:04:59.530
So that seems to make sense move to vector 3 is going to be about the right level of API.

74
00:04:59.570 --> 00:05:01.940
And that's going to be the destination.

75
00:05:02.000 --> 00:05:07.100
So I'm saying that interface in fact because it's the interface we're going to want to make it public

76
00:05:07.190 --> 00:05:09.080
so it can be called from outside of them.

77
00:05:09.140 --> 00:05:13.480
The class is going to be void it doesn't return I think move to the name.

78
00:05:13.520 --> 00:05:20.330
And the argument is going to be vector 3 because that's the destination is basically the command we're

79
00:05:20.330 --> 00:05:21.230
giving.

80
00:05:21.230 --> 00:05:25.940
And I can go and set the destination of the nav mesh agent from that destination is pretty straightforward

81
00:05:25.950 --> 00:05:27.410
it does a very simple job.

82
00:05:27.410 --> 00:05:33.740
This move to and as you can see we're now calling that in our move to cursor instead.

83
00:05:34.070 --> 00:05:37.980
Also what we don't want to be doing is an update of our mover.

84
00:05:38.000 --> 00:05:42.660
We don't want to be checking our mouse down and doing this move to cursor call here.

85
00:05:42.740 --> 00:05:46.940
So I'm going to comment that now I'm going to do that with a little shortcut for Visual Studio of selecting

86
00:05:46.940 --> 00:05:52.010
that code that I want to comment and then bring control forward slash comments out all those lines on

87
00:05:52.010 --> 00:05:52.300
Mac.

88
00:05:52.300 --> 00:05:53.240
It might be slightly different.

89
00:05:53.240 --> 00:05:56.810
Check out your your guides about shortcuts.

90
00:05:56.810 --> 00:06:00.770
I think you can look at a keyboard shortcut reference from down and help and you will be able to see

91
00:06:00.770 --> 00:06:03.200
what that keyboard shortcut is for you.

92
00:06:03.200 --> 00:06:06.860
So basically yep we have been able to comment at that code.

93
00:06:06.860 --> 00:06:11.780
Now the move is working as we would want it to work with a separated control there.

94
00:06:11.780 --> 00:06:13.910
I'll bet that some extra code in here.

95
00:06:13.910 --> 00:06:18.770
But nothing is currently calling move two and that's going to be your challenge to create something

96
00:06:18.770 --> 00:06:21.090
that does call to move to.

97
00:06:21.210 --> 00:06:23.690
And so we're going to create the player controller class.

98
00:06:23.690 --> 00:06:26.270
It's going to call move to function.

99
00:06:26.270 --> 00:06:28.050
It should work as before.

100
00:06:28.070 --> 00:06:34.220
And bear in mind you should not forget to add your to your player prefab to the player controls should

101
00:06:34.220 --> 00:06:40.820
belong on that root object same as moved to eventually combat will live there too so that it can get

102
00:06:40.820 --> 00:06:46.460
hold of the mover mono behavior and it will be among the behavior itself not just the class money behavior

103
00:06:46.850 --> 00:06:51.980
that will do all the querying for recasting and eventually called the move to function you might just

104
00:06:52.280 --> 00:06:54.620
the moment you don't really need create any new code.

105
00:06:54.770 --> 00:07:00.130
So it's just moving code around pause a video and have a go at this challenge OK.

106
00:07:00.130 --> 00:07:00.820
Welcome back.

107
00:07:00.820 --> 00:07:03.160
So we're going to create a new script to do this.

108
00:07:03.220 --> 00:07:05.900
You can do it from the editor like he used to.

109
00:07:05.900 --> 00:07:09.280
You can go to the editor and create new script and I'm just going to show you that you can do it from

110
00:07:09.280 --> 00:07:10.790
Visual Studio code as well.

111
00:07:11.230 --> 00:07:15.810
So we've got a scripts folder and we've got core we've got movement.

112
00:07:15.940 --> 00:07:21.970
I believe that what we've got here is a new feature it is control and we're going to want to keep things

113
00:07:21.970 --> 00:07:28.540
separate so I'm going to create a new folder here called control under the scripts folder and in that

114
00:07:28.630 --> 00:07:35.100
I can create a new file and I can call it player control.

115
00:07:35.800 --> 00:07:41.290
So yes like so now this is exactly the same as I I had created it in unity.

116
00:07:41.290 --> 00:07:48.100
You'll see that if I go into my asset explorer and go down in the scripts folder you can see there is

117
00:07:48.100 --> 00:07:51.790
a control folder created here and there's a play control see which is currently empty.

118
00:07:51.790 --> 00:07:55.500
So it won't work I can't pop it on a character because it hasn't got the money behavior in it.

119
00:07:55.540 --> 00:07:59.680
So the next step is to write the model behavior kind of boilerplate code.

120
00:07:59.770 --> 00:08:05.620
And fortunately Visual Studio code actually has some way of doing this automatically called the snippet.

121
00:08:05.620 --> 00:08:11.410
So if I start typing mono behavior you can see it's giving me some autocomplete options and if I hit

122
00:08:11.410 --> 00:08:16.480
tab on that it fills out the mono behavior boilerplate automatically for me so I don't even have to

123
00:08:16.480 --> 00:08:21.220
go back to unity if I want to create lots of scripts over here in Visual Studio code and that's cool

124
00:08:21.250 --> 00:08:26.230
because one other thing that's done here is it's noticed the name of the C sharp script and it has put

125
00:08:26.230 --> 00:08:27.210
it as my class name.

126
00:08:27.220 --> 00:08:30.550
So that's a little bit of intelligence going on there as well.

127
00:08:30.670 --> 00:08:33.010
Obviously if you've done it by unity it would have done the same thing.

128
00:08:33.010 --> 00:08:37.360
I just sometimes find it easier when I'm in this context to stay in a visual studio code.

129
00:08:37.420 --> 00:08:39.080
You might find that interesting.

130
00:08:39.140 --> 00:08:39.430
Okay.

131
00:08:39.460 --> 00:08:47.410
So the player controller First things first it's going to have this code the move to cursor code essentially

132
00:08:48.570 --> 00:08:55.100
going to cut that out and I'm going to move it over in to this C shop script.

133
00:08:55.320 --> 00:09:02.280
You'll notice it isn't currently able to call move two because it is doesn't have this method on this

134
00:09:02.400 --> 00:09:03.390
model behavior.

135
00:09:03.390 --> 00:09:10.140
We need to call to and get the move and move them on a behavior so we know how to do that is get components

136
00:09:10.680 --> 00:09:18.050
of type mover like so Dot and I can join those two lines together.

137
00:09:18.210 --> 00:09:23.740
So get component move a dot move to that makes sense it works then it's nothing calling move to cursor.

138
00:09:24.000 --> 00:09:26.540
So there is that code I commented out from updates.

139
00:09:27.450 --> 00:09:32.690
I cut that and we go and create up an update in our play controller.

140
00:09:32.730 --> 00:09:36.990
Again there's a snippet for this if I type update I can tap complete and it creates an update method

141
00:09:36.990 --> 00:09:39.530
for me and I can paste that code in here.

142
00:09:39.540 --> 00:09:40.850
I want to go in on comment.

143
00:09:40.890 --> 00:09:47.280
I think it's exactly the same keyboard shortcut control forward slash on comments the code and yet it's

144
00:09:47.280 --> 00:09:53.160
working because this function is there is checking that the mouse button is down then it is calling

145
00:09:53.190 --> 00:09:54.460
move the cursor.

146
00:09:54.570 --> 00:09:55.640
So that's pretty neat.

147
00:09:55.650 --> 00:09:56.630
Pretty straightforward.

148
00:09:56.640 --> 00:10:01.530
Now you can see that move see sharp script is very very tight indeed.

149
00:10:01.530 --> 00:10:03.870
Does not too much updates the animator.

150
00:10:03.870 --> 00:10:09.120
It is responsible for controlling the nav mesh agent and the player controller is the one responsible

151
00:10:09.120 --> 00:10:10.640
for doing recast and so forth.

152
00:10:10.650 --> 00:10:15.540
And we will be able to use this to expand our rate casting ability to recast two components not just

153
00:10:15.540 --> 00:10:16.200
to the terrain.

154
00:10:16.830 --> 00:10:18.630
So I'm pretty happy with that.

155
00:10:18.630 --> 00:10:24.540
Let's check that it's all working as I said I have to edit the prefab of player now Rick has been doing

156
00:10:24.540 --> 00:10:25.320
that from the scene.

157
00:10:25.320 --> 00:10:31.440
You can also do that in the new prefab Ed that is new in 2000 eighteen point three and you can do this

158
00:10:31.440 --> 00:10:37.520
in one or two ways you can use a little arrow next to any of your prefabs to open the prefab Ed and

159
00:10:37.620 --> 00:10:43.110
edit the asset directly or you can find the prefab in your asset hierarchy.

160
00:10:43.110 --> 00:10:47.580
So in game characters I could open the prefab from here as well by double clicking it but I want to

161
00:10:47.580 --> 00:10:54.090
show you the arrow click on the arrow boom we are in a special scene especially for editing this prefab

162
00:10:54.090 --> 00:10:59.020
if I want to go back to the main scene there's little arrow just next to the player the top of the hierarchy

163
00:10:59.020 --> 00:11:04.050
and that takes me back to the main scene I can do that for any of these prefabs go and edit the prefab

164
00:11:04.050 --> 00:11:04.760
directly.

165
00:11:04.770 --> 00:11:09.630
That means I don't have to apply any changes back because they've already been applied on the prefab

166
00:11:10.320 --> 00:11:14.670
so you can see as is laid out exactly as you'd expect there's a little mini hierarchy in fact there's

167
00:11:14.670 --> 00:11:20.020
another prefab in here I could then edit that prefab as well it's a different prefab that night soldier

168
00:11:20.020 --> 00:11:24.090
is a different prefab we're not gonna be editing that though because it's in the asset pack and we shouldn't

169
00:11:24.090 --> 00:11:28.350
touch things that are in the asset pack so we're just including a prefab within a prefab that's something

170
00:11:28.350 --> 00:11:30.540
new that you can do in two thousand eighteen point three.

171
00:11:30.600 --> 00:11:31.890
Pretty cool I think.

172
00:11:31.890 --> 00:11:37.110
But anyway the point that we're here for is pretty simple we just want to add a script to our player

173
00:11:37.260 --> 00:11:42.750
so I'm gonna go to the root of player where we've got our movie script and NAV mesh agent and add a

174
00:11:42.750 --> 00:11:49.920
new component it's going to be a player controller component and boom let's go ahead and hit play can

175
00:11:49.920 --> 00:11:56.760
hit play from this kind of prefab editing scene or use the scene I was last in and hopefully Yep I can

176
00:11:56.760 --> 00:12:01.560
still navigate and move which means that they are recasting must be working and I move a script communication

177
00:12:01.950 --> 00:12:06.720
is all hunky dory hopefully you didn't struggle too much for that challenge if you struggled a bit that's

178
00:12:06.840 --> 00:12:11.610
absolutely fine and you had to watch the challenge that apps that challenge solution that's absolutely

179
00:12:11.610 --> 00:12:12.410
fine too.

180
00:12:12.540 --> 00:12:17.670
Hopefully you learnt something from what you missed out on that is a great learning as well.

181
00:12:17.670 --> 00:12:18.180
Great stuff.

182
00:12:18.180 --> 00:12:20.120
I'll see you in the next video.
