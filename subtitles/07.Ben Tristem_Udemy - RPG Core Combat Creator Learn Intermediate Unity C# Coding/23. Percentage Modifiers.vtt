WEBVTT
1
00:00:04.400 --> 00:00:05.510
Hello and welcome.

2
00:00:05.510 --> 00:00:10.220
In this lecture we are going to be adding percentage bonuses as well as additive bonuses.

3
00:00:10.220 --> 00:00:15.020
Here in the weapon you in the sword you can see that we've got a weapon damage which is an additive

4
00:00:15.020 --> 00:00:18.000
bonus but also a percentage bonus of 10 percent.

5
00:00:18.050 --> 00:00:22.420
So whatever your base stat was it gets multiplied by 10 percent.

6
00:00:22.420 --> 00:00:25.370
We're gonna see the exact details of that in just a second.

7
00:00:25.370 --> 00:00:26.840
Let's dive in.

8
00:00:26.870 --> 00:00:30.050
So you've often seen percentage modifiers in games.

9
00:00:30.050 --> 00:00:31.160
But how do they work.

10
00:00:31.160 --> 00:00:33.260
And there are lots of different ways for this work.

11
00:00:33.260 --> 00:00:35.480
How do we want them to work in our game.

12
00:00:35.480 --> 00:00:39.110
And what's the importance of order of operations.

13
00:00:39.110 --> 00:00:41.420
This is what I'm aiming to answer with this slide.

14
00:00:41.420 --> 00:00:47.360
So the idea is that you have a base that initially this has going to work in our game at least.

15
00:00:47.510 --> 00:00:51.570
And that base that might be 10 then you get an additive bonus it might be from your weapon you get an

16
00:00:51.570 --> 00:00:55.170
additive bonus of six for example plus six until 10.

17
00:00:55.280 --> 00:00:59.720
You might have another additive bonus maybe from an amulet which gives you plus four to your damage

18
00:00:59.720 --> 00:01:00.540
as well.

19
00:01:00.560 --> 00:01:06.990
So in total after all your additives have been added You have got plus 20 you got 20 damage.

20
00:01:07.130 --> 00:01:09.440
But what about percentages.

21
00:01:09.470 --> 00:01:15.410
So these apply afterwards at least in our game we then say OK so you've got 20 you're going to add eight

22
00:01:15.410 --> 00:01:16.560
percent on top of that.

23
00:01:16.670 --> 00:01:18.200
And then you've got 2 percent.

24
00:01:18.230 --> 00:01:22.910
Now the question here is do we apply these percentages once in time.

25
00:01:22.910 --> 00:01:29.060
So do we say OK what's 8 percent of 20 and add that on and then what's 2 percent of that and add that

26
00:01:29.060 --> 00:01:31.760
on or do we add the percentages first.

27
00:01:31.760 --> 00:01:37.370
Now I think that adding the percentages first makes a lot more sense to game play as you might choose

28
00:01:37.370 --> 00:01:38.450
to do it differently.

29
00:01:38.660 --> 00:01:43.460
But in my case what I'm going to do is add up these percentages to say that we have a total percentage

30
00:01:43.460 --> 00:01:45.260
bonus of 10 percent.

31
00:01:45.260 --> 00:01:50.460
Now that's different to if we had just applied the percentages one after the other.

32
00:01:50.690 --> 00:01:52.660
And then we apply the percentages.

33
00:01:52.670 --> 00:01:57.500
Now if you understand the mass behind this this will be obvious to you first some of it won't be so

34
00:01:57.500 --> 00:01:58.000
obvious.

35
00:01:58.010 --> 00:02:02.390
The important thing to note is the order in which we're doing this first we're adding the percentages

36
00:02:02.390 --> 00:02:05.240
rather than applying the percentages sequentially.

37
00:02:05.240 --> 00:02:13.070
And what this means is that we're adding 10 percent of 20 on top of 20 and that basically means that

38
00:02:13.130 --> 00:02:14.120
it is 2.

39
00:02:14.150 --> 00:02:16.820
So we're adding two on top that's 22.

40
00:02:16.820 --> 00:02:18.800
Now notice that we're adding it on top.

41
00:02:18.800 --> 00:02:23.230
We're not saying take 10 percent of 20 because 10 percent or 20 is just 2.

42
00:02:23.270 --> 00:02:25.670
That would be a really rubbish modifier.

43
00:02:25.670 --> 00:02:30.830
What we're really doing here is we're multiplying it by 110 percent.

44
00:02:30.830 --> 00:02:34.190
If you like we're gonna say give me one hundred and ten percent of your damage.

45
00:02:34.190 --> 00:02:38.600
And that's what it's doing 110 percent of 20 is 22.

46
00:02:38.600 --> 00:02:42.710
So let's replicate this calculation in our get stacked.

47
00:02:42.710 --> 00:02:49.170
So what we're saying is the first thing we do is we do an additive stuff so that's already happening.

48
00:02:49.210 --> 00:02:55.950
Right to make this even clearer what I'm gonna do is I'm going to take this bit where we calculate the

49
00:02:56.250 --> 00:02:59.760
base damage and I'm going to pull that out into a separate method.

50
00:02:59.760 --> 00:03:08.010
So I'm going to extract method call it's what shall we say get base stat like so.

51
00:03:08.010 --> 00:03:14.100
So what we've got is the base stat plus the additive modifiers the sum of all the additive modifiers

52
00:03:14.490 --> 00:03:20.350
and then we want to multiply that by the percentage turned into a fraction.

53
00:03:20.490 --> 00:03:24.130
We temp sensors into a fraction by dividing them by 100.

54
00:03:24.150 --> 00:03:31.020
So we take this value doing the addition first then we do a multiplication by a percentage.

55
00:03:31.080 --> 00:03:40.940
So it's going to be get percentage modifier and it's gonna be for a particular stat again.

56
00:03:40.940 --> 00:03:45.840
But remember that if we get the percentage modify it's going to be something like 10 percent.

57
00:03:45.890 --> 00:03:51.500
And as I said we really want to be multiplying by 110 percent and we want that as a fraction which is

58
00:03:51.560 --> 00:03:53.520
one point one.

59
00:03:53.540 --> 00:03:58.820
So to do that we say one plus all of this percentage stuff.

60
00:03:58.910 --> 00:04:03.910
And what is the percentage stuff is going to have to be divided by 100 in order for it to be a fraction.

61
00:04:03.920 --> 00:04:09.710
So say for example they get percentage modifier came back as 10 we divide that by 100 that gives us

62
00:04:09.740 --> 00:04:10.830
point 1.

63
00:04:10.910 --> 00:04:11.800
We add it to 1.

64
00:04:11.800 --> 00:04:16.730
It gets us one point one so we're multiplying by one point one which is exactly what we'd want multiplied

65
00:04:16.730 --> 00:04:21.170
by one point one times twenty gives us 22 which is exactly what we need.

66
00:04:21.200 --> 00:04:26.450
So we're going to put this in brackets to make sure the addition the plus one happens first because

67
00:04:26.450 --> 00:04:30.680
generally speaking you have your multiplications will happen first.

68
00:04:30.680 --> 00:04:36.860
So we want to make sure they addition to 1 happens first and then we are going to control dots to generate

69
00:04:36.950 --> 00:04:43.940
this method and we're going to just move the get percentage modifier underneath the additive is going

70
00:04:43.940 --> 00:04:46.490
to be your challenge to fill that out.

71
00:04:46.500 --> 00:04:53.120
The next part of the puzzle I want to fill in is adding to our I am modifier provider to now also return

72
00:04:53.120 --> 00:04:54.110
percentage modifiers.

73
00:04:54.110 --> 00:04:58.590
So we're gonna have an eye enumerable again of type floats.

74
00:04:58.660 --> 00:05:05.410
She's gonna give us the percentage modifies this time and it's just going to be get percentage more

75
00:05:05.840 --> 00:05:10.910
years plural and I'm not sure why I didn't go plural with get additive modifier.

76
00:05:10.910 --> 00:05:13.600
Let's go and rename that should be plural too.

77
00:05:13.610 --> 00:05:19.460
So get additive modifiers and get percentage modifiers because it is after all returning a list.

78
00:05:19.460 --> 00:05:25.700
So it's gonna get it for a particular stat and if we want to implement that in fighter we're going to

79
00:05:25.700 --> 00:05:33.050
need to get a percentage modify from somewhere so I'm going to open up the weapons c s script and we're

80
00:05:33.080 --> 00:05:36.370
going to do this let's see we've got damage.

81
00:05:37.010 --> 00:05:42.950
So if in our serialized ball as well as damage I'm going to just duplicate damage and have a weapon

82
00:05:43.400 --> 00:05:51.650
or just kind of call it because it is a weapon percentage bonus like so and we'll start off with zero

83
00:05:51.680 --> 00:05:58.250
by default but we can change that over in a particular weapon for example I'm going to have our sword

84
00:05:58.540 --> 00:06:03.620
be multiplicative damage based on everything else that you've got equipped.

85
00:06:03.800 --> 00:06:05.000
So we've got get damaged.

86
00:06:05.000 --> 00:06:11.450
Go get range gigahertz add another public gets it's gonna be floats and gets and this time it is going

87
00:06:11.450 --> 00:06:15.230
to be percentage bonus.

88
00:06:15.500 --> 00:06:21.480
And that's what we're going to return so return percentage bonus from our serialized fields.

89
00:06:21.590 --> 00:06:27.760
So your challenge is going to be to add a percentage modifier and fill in the blanks.

90
00:06:27.770 --> 00:06:34.130
So you're going to fill out the get percentage modifier that is the sum of all the percentage modifiers

91
00:06:34.400 --> 00:06:40.760
in base stat and you're also going to implement get percentage modify in your fighter the rest of that

92
00:06:40.820 --> 00:06:41.810
interface.

93
00:06:41.810 --> 00:06:45.740
So pause the video and have a go at this challenge.

94
00:06:45.750 --> 00:06:46.440
Welcome back.

95
00:06:46.440 --> 00:06:48.030
So first of all this.

96
00:06:48.030 --> 00:06:49.550
Get percentage modify and base stats.

97
00:06:49.560 --> 00:06:52.040
Let's have a stab at that.

98
00:06:52.140 --> 00:06:58.800
In fact it's gonna look pretty much identical to the get additive modifier except this time we are going

99
00:06:58.800 --> 00:07:04.130
to be calling instead of get additive modify going to call get percentage modifiers instead.

100
00:07:04.470 --> 00:07:07.020
And we're going to be totaling up and then returning.

101
00:07:07.020 --> 00:07:12.020
Notice it is implemented as an int we actually want this total to be afloat.

102
00:07:12.030 --> 00:07:13.470
So that should be fine.

103
00:07:13.470 --> 00:07:13.920
Yep.

104
00:07:13.970 --> 00:07:15.620
Totaling up as a float.

105
00:07:15.750 --> 00:07:18.050
And then let's see infighter.

106
00:07:18.150 --> 00:07:23.040
We need to go ahead and implement also I modify provider.

107
00:07:23.130 --> 00:07:29.460
So let's control dot that implement the interface and scroll on down where we are going to be doing

108
00:07:29.460 --> 00:07:34.770
the get percentage modifiers like so I'm going to be putting it right underneath the implementation

109
00:07:34.770 --> 00:07:40.890
of additive modifiers and in exactly the same way we are going to be checking the if statement of the

110
00:07:40.920 --> 00:07:47.640
damage check that it's damage and then we're going to go from the current weapon to get the percentage

111
00:07:47.640 --> 00:07:50.440
bonus for the current weapon instead.

112
00:07:50.460 --> 00:07:52.110
So that should fill it out nicely.

113
00:07:52.110 --> 00:07:58.680
And finally to test we have to go over to a weapon in my case it's gonna be the sword and we need to

114
00:07:58.680 --> 00:08:03.800
add a percentage bonus so at the moment we've got zero as a percentage bonus.

115
00:08:03.810 --> 00:08:09.810
I'm going to add a nice hefty I don't know let's say a 10 percent bonus here.

116
00:08:10.230 --> 00:08:13.370
So what would I expect my calculation to work out.

117
00:08:13.410 --> 00:08:22.900
As so we've got our weapon damage of 10 initially if my initial level is 1 then my damage is going to

118
00:08:22.900 --> 00:08:23.770
be 8.

119
00:08:23.800 --> 00:08:29.650
So total 18 damage plus our 10 percent bonus which is going to make it fractional damage.

120
00:08:29.650 --> 00:08:32.920
Actually it's going to be about nineteen point eight.

121
00:08:32.920 --> 00:08:41.380
So let's see if that is what is going to work out as I'm gonna go and play go to my sword and go and

122
00:08:41.380 --> 00:08:44.920
hit this enemy and see what damage is being taken.

123
00:08:44.920 --> 00:08:45.170
Yep.

124
00:08:45.220 --> 00:08:46.240
Nineteen point eight.

125
00:08:46.240 --> 00:08:52.810
So you can see that the percentage damage is indeed working and hopefully now if we go and attack somebody

126
00:08:52.810 --> 00:08:58.770
else that actual percentage will have increased because a bass damage has increased as well.

127
00:08:59.080 --> 00:09:04.050
Naturally in this case I got trance but if you try it out for yourself you'd find that it did.

128
00:09:04.110 --> 00:09:11.880
Now the actual reason that I got trounced was because the enemies are getting their modifiers as well

129
00:09:11.910 --> 00:09:12.380
as us.

130
00:09:12.390 --> 00:09:15.810
Now in my case I actually think we don't need that.

131
00:09:15.810 --> 00:09:21.720
The reason that we want modifies is mostly for our player and the enemies it's going to be okay if they

132
00:09:21.720 --> 00:09:22.980
just use their base stat.

133
00:09:22.980 --> 00:09:29.070
It's gonna be easier for you to tweak as your game designer hat on so it's gonna be easier for you to

134
00:09:29.070 --> 00:09:31.500
tweak when you have your game designer hat on.

135
00:09:31.500 --> 00:09:37.800
So what I'm gonna do is go over to base that and I'm going to introduce a new serialized field and in

136
00:09:37.860 --> 00:09:46.290
this particular serialized field it's going to be a boolean that says should use modifiers and basically

137
00:09:46.560 --> 00:09:52.500
by default we shouldn't use modifiers only the player will and they will overwrite that in their prefab.

138
00:09:52.500 --> 00:09:57.870
So what we do is when we do get adaptive modifiers we are going to say hang on a second should we actually

139
00:09:57.870 --> 00:09:59.600
be using modify as a tool.

140
00:09:59.670 --> 00:10:06.420
And if we should not be using modifiers so put an exclamation point unfit then we instantly just return

141
00:10:06.420 --> 00:10:07.110
zero.

142
00:10:07.110 --> 00:10:10.940
There is no modifier for people who don't use modifiers.

143
00:10:11.040 --> 00:10:11.880
Makes sense right.

144
00:10:11.880 --> 00:10:14.510
And we're going to do exactly the same thing in the percentage.

145
00:10:14.520 --> 00:10:15.950
No percentage modifies either.

146
00:10:15.960 --> 00:10:21.990
If you don't use modifiers so then what I'm gonna do is I'm gonna go and find our player pretty fab

147
00:10:22.290 --> 00:10:28.320
over here and open up the player prefab and then scroll on down to the correct component which should

148
00:10:28.320 --> 00:10:31.830
be our base stats and just tick the box should use modifier.

149
00:10:32.250 --> 00:10:37.740
So now what should happen is I shouldn't get so easily trounced because all these folks that have got

150
00:10:37.740 --> 00:10:39.190
weapons won't.

151
00:10:39.240 --> 00:10:44.320
We'll only be doing that base damage they won't be adding the modifier of their weapon on top of things.

152
00:10:44.370 --> 00:10:50.670
So now you can see the damage I did was nineteen point eight I took less damage this time and these

153
00:10:50.730 --> 00:10:55.890
archers shouldn't be doing as much damage as I would with the same weapons because they're just using

154
00:10:55.890 --> 00:11:01.650
their base stats and you can see that the damage the enemy took was 22 so you can see it's really starting

155
00:11:01.650 --> 00:11:08.610
to amount to something the fact that my base damage is going up plus this multiplicative damage from

156
00:11:08.700 --> 00:11:15.990
my sword means that the sword has got some longevity I don't need to go and find a level 2 sword because

157
00:11:16.320 --> 00:11:19.730
the benefit I'm getting from it continues to grow.

158
00:11:19.740 --> 00:11:20.490
Think of it like this.

159
00:11:20.490 --> 00:11:28.890
If my base damage was 10 at level 1 but at level 10 it's 100 then a sword that gave me a bonus of say

160
00:11:28.890 --> 00:11:36.000
5 which was great at Level 1 is suddenly absolutely puny when I'm at level 10 and I've got 100 damage

161
00:11:36.300 --> 00:11:42.690
whereas some a sword gives me 10 percent damage is still just as good at level 10 as it was at level

162
00:11:42.690 --> 00:11:43.170
1.

163
00:11:43.200 --> 00:11:48.150
So you can use this to give your item some items longevity and other line items things that you just

164
00:11:48.150 --> 00:11:49.320
need to discard.

165
00:11:49.380 --> 00:11:54.690
Once you have a bronze sword you don't need that once your level 10 you want a silver sword or whatever.

166
00:11:54.690 --> 00:11:59.230
Something that is actually a decent sword I know and adamantium sword whatever it is.

167
00:11:59.310 --> 00:12:04.410
So we've got lots of tools for game design now and we need to actually go and tweak our progression

168
00:12:04.440 --> 00:12:07.980
so Rick is gonna do a video on that for you in the next lecture.
