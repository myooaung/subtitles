1
00:00:04,560 --> 00:00:05,250
Hello and welcome.

2
00:00:05,250 --> 00:00:09,690
In this lecture we're gonna be looking at importing our savings system module so you will get these

3
00:00:09,690 --> 00:00:14,360
files in your project and we'll look at what those files actually are how it all fits together.

4
00:00:14,370 --> 00:00:18,710
What's the architecture of this saving system and how we're ultimately going to use it.

5
00:00:18,720 --> 00:00:27,140
See you in that so against this lecture you should have the following asset pack the saving module.

6
00:00:27,140 --> 00:00:32,600
Now the idea here is that maybe you need to unzip it but we're going to bring this in and this will

7
00:00:32,600 --> 00:00:35,810
be the saving system that we are going to use.

8
00:00:35,900 --> 00:00:41,470
Now if you bring into unity you will see that it's going to add in to our scripts folder.

9
00:00:41,480 --> 00:00:45,890
Now the reason for this rather than adding it to the asset packages because I want you to take ownership

10
00:00:45,890 --> 00:00:51,320
of this saving system now that means that you might want to add to it but one might want to extend it

11
00:00:51,350 --> 00:00:56,510
but ultimately you only want to do that once you understand it once you've taken the saving system section

12
00:00:56,510 --> 00:00:57,350
itself.

13
00:00:57,350 --> 00:01:03,110
So for now I would urge you to treat it just like an asset pack in the sense that you're not gonna touch

14
00:01:03,110 --> 00:01:03,890
anything in here.

15
00:01:04,010 --> 00:01:09,080
You know open up the files and you don't really need to understand how it works internally.

16
00:01:09,260 --> 00:01:15,270
But we are going to learn how to use it as an API as if it were just a library provided by unity.

17
00:01:15,380 --> 00:01:17,900
Because in my opinion we should have a saving system built in.

18
00:01:17,900 --> 00:01:18,950
It just does not.

19
00:01:18,950 --> 00:01:25,130
So let's go ahead and import these files and then we can talk about what those files are and how it

20
00:01:25,130 --> 00:01:28,100
hangs together as a savings system.

21
00:01:28,100 --> 00:01:32,910
So I'm gonna go down to the saving section and I'm going to have a look.

22
00:01:32,930 --> 00:01:39,320
If I put this in a list view out what we've got here now the most important ones are the saving system

23
00:01:39,320 --> 00:01:45,200
class which is the main one the saver Bill entity and then the Icesave Ebola serialized Bill back to

24
00:01:45,200 --> 00:01:47,740
three will get to at some point and why that's there.

25
00:01:48,050 --> 00:01:53,740
But first of all we'll talk about saving systems and how that fits into the big picture.

26
00:01:53,780 --> 00:01:58,460
Let's start off by talking about how we're going to try and save game objects.

27
00:01:58,700 --> 00:02:05,870
So game objects could be things like your player your enemy the enemy as many enemies in the scene you

28
00:02:05,870 --> 00:02:12,380
ultimately have entities in your scene that you want to save some state about and we have the saving

29
00:02:12,380 --> 00:02:17,320
system which needs to coordinate the saving of these different entities.

30
00:02:17,390 --> 00:02:24,470
Now how we do this and how we note that a particular entity needs to be saved is by putting a special

31
00:02:24,470 --> 00:02:27,230
component on it called a saleable entity.

32
00:02:27,230 --> 00:02:27,770
So they go.

33
00:02:27,770 --> 00:02:32,210
We've already explained two of these classes the saving system is the main class coordinates everything

34
00:02:32,630 --> 00:02:37,820
and the saver Bill entity on the other hand is put on every single every single game object that we

35
00:02:37,820 --> 00:02:40,330
want to have saved.

36
00:02:40,340 --> 00:02:46,160
Now what happens then is the saving system coordinates finds all the salable entities in the scene and

37
00:02:46,160 --> 00:02:51,670
makes sure all the state of those salable entities is properly put into the save file.

38
00:02:51,680 --> 00:02:53,700
When we ask it to be.

39
00:02:53,780 --> 00:02:56,690
So that brings up the question of how do we know.

40
00:02:56,720 --> 00:03:02,050
How do we make the saleable entity and get all the information that it wants to from the different components.

41
00:03:02,090 --> 00:03:06,380
So we might have a movement component a health component that both have information that we want to

42
00:03:06,380 --> 00:03:10,890
store the movement component for example might want to store where you are located.

43
00:03:10,970 --> 00:03:15,290
The health component might want to store how much health you've got your inventory component might want

44
00:03:15,290 --> 00:03:20,270
to keep the items that you've got and the quests might keep hold of the active quests you have on a

45
00:03:20,270 --> 00:03:21,830
particular entity.

46
00:03:21,830 --> 00:03:28,220
Now how do we link these different components up to the same blends tea in a nice easy extensible way.

47
00:03:28,230 --> 00:03:29,940
Well interfaces.

48
00:03:29,960 --> 00:03:33,640
We've used interfaces before for this kind of inversion of dependency.

49
00:03:33,650 --> 00:03:38,220
What happens is that each of these components the movement the health potentially question inventories

50
00:03:38,390 --> 00:03:46,010
later on will inherit from the IceSave bill interface which basically gives the safe balance to a way

51
00:03:46,010 --> 00:03:50,850
of generically querying these kinds of components for their data.

52
00:03:50,870 --> 00:03:55,520
So it can say hey movement system give me some data and the movement system will return for example

53
00:03:55,520 --> 00:04:00,260
its position it can say health system give me some data and it returns protected potentially the current

54
00:04:00,260 --> 00:04:05,710
health and so on and it can get arbitrarily complex using this sort of system.

55
00:04:05,750 --> 00:04:11,260
So that is the MET THE FINAL main component that we have introduced as the IceSave bill.

56
00:04:11,510 --> 00:04:14,240
And we're gonna work these in and integrate them into our project.

57
00:04:14,240 --> 00:04:15,040
Bit by bit.

58
00:04:15,440 --> 00:04:20,720
Now first of all the subject of this lecture is going to just be the architecture but let's have a look

59
00:04:20,720 --> 00:04:24,460
at the main API to our savings system.

60
00:04:24,500 --> 00:04:28,430
So the main API is save and load.

61
00:04:28,460 --> 00:04:34,340
But we'll see load in a second so save which you call on the save system component takes in a string

62
00:04:34,370 --> 00:04:37,940
which identifies the save file you want to save too.

63
00:04:38,090 --> 00:04:44,480
So you save the current scene state not another scene but this particular scene you save that to the

64
00:04:44,480 --> 00:04:50,030
given save file if you give a different save file it'll be a different cipher so loading then you want

65
00:04:50,030 --> 00:04:54,840
to load from the particular save file that you just save too and this time it'll be loading the current

66
00:04:54,840 --> 00:05:01,460
scene state from the given save file not from a different save file it's going to be distinguished by

67
00:05:01,460 --> 00:05:02,510
the save file you give it.

68
00:05:03,170 --> 00:05:07,520
And finally this delete which deletes a save file entirely and obviously that's going to delete all

69
00:05:07,520 --> 00:05:13,400
associated data for this safer not just this data for your current scene but any scene that you might

70
00:05:13,400 --> 00:05:14,140
have.

71
00:05:14,150 --> 00:05:18,080
These are the main API is that we're gonna be dealing with there is some one more function that we're

72
00:05:18,080 --> 00:05:24,140
going to look at towards the end of this little mini set but otherwise this is the overview of that

73
00:05:24,140 --> 00:05:29,360
saving system so if you haven't already go ahead and import the saving system and I'll see you in the

74
00:05:29,360 --> 00:05:35,930
next lecture where we're going to look at how we can wrap that saving system and apply some key bindings

75
00:05:35,930 --> 00:05:37,090
to save and load.

76
00:05:37,100 --> 00:05:37,550
See you there.
