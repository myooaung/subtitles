1
00:00:00,760 --> 00:00:03,890
Hello everyone and welcome to this python tutorial.

2
00:00:04,000 --> 00:00:11,650
In the previous video we downloaded the dataset extracted and created paths to each part of the dataset

3
00:00:13,090 --> 00:00:19,020
and in the next couple of years we are going to be building the model for the project.

4
00:00:19,070 --> 00:00:28,590
The goal of this video is to load a pre train network called Mobile natively to any pre train network

5
00:00:28,620 --> 00:00:35,920
that we decide to use for our project is nothing more but a very big convolution of neural network with

6
00:00:35,940 --> 00:00:37,290
fancy weight.

7
00:00:37,590 --> 00:00:47,040
And since you have worked with CNN before you know that if CNN expect fixed size inputs pre train models

8
00:00:47,160 --> 00:00:49,740
expect the same thing.

9
00:00:49,830 --> 00:00:58,550
So let's defined AMG shape and set it to 128 128 free.

10
00:00:58,560 --> 00:01:05,810
This is going to be the shape of all images in our dataset now that we know that information.

11
00:01:05,800 --> 00:01:14,460
Let's use it to load our mobile laterally to create a variable called Bayes model and set it to T dot

12
00:01:14,480 --> 00:01:17,700
care US DOT applications.

13
00:01:17,720 --> 00:01:22,510
Here you could see various models pre trained ones that we can choose from.

14
00:01:22,730 --> 00:01:28,870
But in this case we are going to choose model letter V to it is pretty small and pretty fast.

15
00:01:29,660 --> 00:01:36,440
The problem with this model is that it doesn't have a dog string so we don't know which arguments if

16
00:01:36,530 --> 00:01:38,720
any it expects.

17
00:01:38,720 --> 00:01:44,870
You could easily google it and find which arguments to provide in this course we are going to mention

18
00:01:45,080 --> 00:01:48,400
just a few most important ones.

19
00:01:48,530 --> 00:01:50,900
The first one is input shape.

20
00:01:50,960 --> 00:01:58,250
Set it to our AMG shape that we have defined the next argument is include top.

21
00:01:58,300 --> 00:02:02,270
It is boolean argument so it could be true or false.

22
00:02:02,530 --> 00:02:08,440
As we learned that the intuition part of this section these networks are trained on image genetic data

23
00:02:08,440 --> 00:02:09,520
set for example.

24
00:02:09,520 --> 00:02:16,230
So its top players including the output layer are designed explicitly for the image and enter data set.

25
00:02:17,040 --> 00:02:23,010
We wondered that top part to be specific for the task that we are trying to solve.

26
00:02:23,280 --> 00:02:31,030
And that's why we are going to create our custom head so you can send this variable to false and the

27
00:02:31,030 --> 00:02:33,040
last argument is weight.

28
00:02:33,190 --> 00:02:37,410
It accepts the name of a data set that the network was trained on.

29
00:02:37,810 --> 00:02:44,410
In our case less right image imagine it execute the cell and now it will download the model and loaded

30
00:02:44,410 --> 00:02:46,130
in our environment.

31
00:02:46,240 --> 00:02:51,640
The last thing that we have for this lesson is to check what the architecture of this network is.

32
00:02:51,990 --> 00:02:52,450
Right.

33
00:02:52,450 --> 00:02:53,870
Model dot summary.

34
00:02:54,070 --> 00:02:57,240
And as you can see these networks are huge.

35
00:02:57,250 --> 00:03:00,910
This one has more than 100 layers inside of it.

36
00:03:02,210 --> 00:03:09,890
Now that we have our pre train and model load it's time to define our custom head for our task if you

37
00:03:09,890 --> 00:03:13,880
have any questions or comments please post them in the comments section.

38
00:03:14,130 --> 00:03:16,100
Otherwise I'll assume the next tutorial.
