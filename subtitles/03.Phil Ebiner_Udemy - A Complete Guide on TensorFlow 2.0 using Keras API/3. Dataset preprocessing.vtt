WEBVTT
1
00:00:00.900 --> 00:00:06.660
Hello everyone and welcome to despite a tutorial in this video we are going to continue where we left

2
00:00:06.660 --> 00:00:08.520
off in the previous one.

3
00:00:08.520 --> 00:00:14.670
The first task that we have to do for distributed training project is to import all dependencies that

4
00:00:14.670 --> 00:00:16.110
we have for this project.

5
00:00:16.110 --> 00:00:23.160
We will need time just to compare how fast it is going to take for distributed model to run the training

6
00:00:23.160 --> 00:00:31.840
process over the non distributed one will use the name PI for image reshaping and other matrix operations.

7
00:00:31.840 --> 00:00:33.670
Then we will need tens of.

8
00:00:33.880 --> 00:00:40.530
As always we are going to use it for building neural networks let us make sure that our tensile flow

9
00:00:40.560 --> 00:00:43.540
is indeed flow 2.0.

10
00:00:43.770 --> 00:00:50.970
If you execute these cell you can track it and indeed it is 2.0.

11
00:00:50.960 --> 00:00:58.940
Point out the main task for this video is to perform data pre processing stage for this example.

12
00:00:58.940 --> 00:01:05.740
We are going to use the famous dataset called amnesty or handwritten digits.

13
00:01:05.770 --> 00:01:09.230
We are going to imported from the tens of low library.

14
00:01:09.450 --> 00:01:17.460
The first thing that we have to do is to write X train comma Y train in brackets followed by comma and

15
00:01:17.460 --> 00:01:20.340
the second part is the output from the function.

16
00:01:20.340 --> 00:01:27.000
But for the test set now we will need to specify from which part of the tensor flow library.

17
00:01:27.100 --> 00:01:38.160
We are going to import the MLS data set so right dear God care us not a data set but amnesty not load

18
00:01:38.170 --> 00:01:41.640
data execute a cell.

19
00:01:41.640 --> 00:01:48.060
It is going to download it and save it to those four variables.

20
00:01:48.080 --> 00:01:52.400
The next step of our data processing is image normalization.

21
00:01:52.550 --> 00:01:57.690
As you already know we performed image normalization in previous projects.

22
00:01:57.860 --> 00:02:05.430
We are going to mainly do that to accelerate training process if we perform the training of neural networks

23
00:02:05.460 --> 00:02:07.030
on the raw images.

24
00:02:07.110 --> 00:02:11.240
That means big solar ranging from zero to two hundred and fifty five.

25
00:02:11.310 --> 00:02:17.110
It is going to take a bit longer to convert to overcome this possibility.

26
00:02:17.190 --> 00:02:25.260
Let us divide both x strain and next test by two hundred and fifty five because of that all pig cells

27
00:02:25.380 --> 00:02:36.090
will range from 0 to 1 Let's start by doing that for X train so right X strain is equal to x strain

28
00:02:36.300 --> 00:02:39.230
divided by two hundred and fifty five.

29
00:02:39.400 --> 00:02:45.220
But I'm using that dot to convert all pixels from integer to float.

30
00:02:45.290 --> 00:02:52.970
It's easier to perform multiplication or operations in terms of flow graph when you have floating numbers.

31
00:02:53.090 --> 00:02:59.600
That's the main reason why I'm converting from integer to floats the next part is to do the same thing

32
00:02:59.600 --> 00:03:12.640
for X test so right x test equal to x test divided by two hundred and fifty five execute a cell and

33
00:03:12.640 --> 00:03:21.370
before we jump into dataset reshaping Let's check what is the shape of X train so right extreme dot

34
00:03:21.970 --> 00:03:23.080
shape.

35
00:03:23.080 --> 00:03:29.130
And as you can see the x train has sixty thousand images where each image is twenty eight by twenty

36
00:03:29.130 --> 00:03:33.950
eight due to the reason of using fully connected networks.

37
00:03:33.950 --> 00:03:39.600
We need to reshape these images to be in vector size and not matrix for.

38
00:03:40.010 --> 00:03:46.270
Let's write X train is equal to x trend or reshape minus one.

39
00:03:46.470 --> 00:03:54.710
We are going to take all images from the dataset all sixty thousand of them and it is the reason why

40
00:03:54.770 --> 00:04:00.690
we are using minus one and now followed by 28 times 28.

41
00:04:00.710 --> 00:04:07.190
It is going to reshape all sixty thousand images to be instead of what twenty eight by twenty eight

42
00:04:07.610 --> 00:04:12.350
to sixty thousand by seven hundred and eighty four.

43
00:04:12.350 --> 00:04:23.060
Let us do the same thing for X test so right x test is equal to x test and to reshape minus 1 28 times

44
00:04:23.060 --> 00:04:24.670
28.

45
00:04:24.680 --> 00:04:26.810
Execute the cell.

46
00:04:26.860 --> 00:04:29.790
Now let's check again the shape of X train.

47
00:04:29.790 --> 00:04:35.430
And as you can see it is now sixty thousand by seven hundred eighty four.

48
00:04:35.460 --> 00:04:37.530
That's what we wanted.

49
00:04:37.560 --> 00:04:44.630
We have our data set prepared for training of any neural network which is fully connected to one in

50
00:04:44.630 --> 00:04:49.340
the next two video we are going to start by defining our non distributed network.

51
00:04:49.340 --> 00:04:53.750
If you have any questions or comments please post them in the comments section.

52
00:04:53.930 --> 00:04:56.000
Otherwise I'll see in the next tutorial.
