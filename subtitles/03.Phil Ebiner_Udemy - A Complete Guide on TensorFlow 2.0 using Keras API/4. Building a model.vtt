WEBVTT
1
00:00:00.210 --> 00:00:08.010
Hello everyone and welcome to despite editorial before we use tens of low light to convert a model for

2
00:00:08.010 --> 00:00:13.420
a mobile device either Android or OS we need to build one.

3
00:00:13.590 --> 00:00:16.690
And in this video we are going to do just that.

4
00:00:16.980 --> 00:00:21.480
As you can see I've already written the whole model for this section.

5
00:00:21.480 --> 00:00:27.510
The reason being is that we are going to use the same architecture from the Section 3 of this course.

6
00:00:27.510 --> 00:00:32.260
So we don't have to rewrite everything from scratch either way.

7
00:00:32.340 --> 00:00:38.870
I'm going to walk you through the whole modeller detector again to remind ourselves the first part of

8
00:00:38.870 --> 00:00:41.900
defining the model is to define one.

9
00:00:42.140 --> 00:00:46.600
And as always we are going to use the sequential part from Caris library again.

10
00:00:46.760 --> 00:00:56.670
So US DOT models dot sequential execute the cell and our model is defined the next part is to build

11
00:00:56.670 --> 00:01:05.390
the architecture of the model the first layer is the dance layer or fully connected one which has 128

12
00:01:05.390 --> 00:01:08.030
units in the activation function.

13
00:01:08.030 --> 00:01:15.930
Here is really as always we need to provide input shape because this is our first layer to the network.

14
00:01:16.000 --> 00:01:23.920
So this network accepts the input that contains 784 numbers and that is exact number that we have in

15
00:01:23.920 --> 00:01:25.740
our data set.

16
00:01:25.750 --> 00:01:32.620
The second part of the architecture is our drop out layer where we define how many units from our first

17
00:01:32.620 --> 00:01:39.780
layer we want to drop to prevent over a fitting as much as possible the last layer here.

18
00:01:39.780 --> 00:01:46.250
And as well as our output layer is dense again because this is our output layer.

19
00:01:46.320 --> 00:01:53.120
It has to have the same number of units as number of classes in our data set and the activation function.

20
00:01:53.120 --> 00:02:01.430
Here is the soft Max execute a cell and by doing that our model is successfully created.

21
00:02:01.470 --> 00:02:07.540
The last thing that we have to do for our model before we can train it is to compile it.

22
00:02:07.650 --> 00:02:14.050
And here we have to choose our last function and our optimizer for our optimizer.

23
00:02:14.120 --> 00:02:21.360
We're going to use Adam and lost function here is going to be spires categorical across entropy and

24
00:02:21.360 --> 00:02:27.600
the last thing that we have to provide is metrics which in this case is going to be sparse categorical

25
00:02:27.660 --> 00:02:35.980
accuracy execute the cell and we have successfully compiled our model in the next video we are going

26
00:02:35.980 --> 00:02:42.310
to train this model and prepare it for our tens of low light library if you have any questions or comments

27
00:02:42.310 --> 00:02:43.070
so far.

28
00:02:43.240 --> 00:02:47.320
Please post them in the comments section otherwise I'll assume the next tutorial.
