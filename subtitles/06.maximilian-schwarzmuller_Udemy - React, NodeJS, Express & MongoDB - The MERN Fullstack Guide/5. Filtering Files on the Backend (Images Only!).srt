1
00:00:02,180 --> 00:00:07,700
The disk storage is important for storing of files correctly but of course we also want to validate

2
00:00:07,700 --> 00:00:10,090
that we don't get a invalid file.

3
00:00:10,220 --> 00:00:13,370
Of course we also have some validation on the front end already.

4
00:00:13,370 --> 00:00:19,460
Because in my image upload component I already have to accept attributes set on the input but you learned

5
00:00:19,460 --> 00:00:25,580
that on the front and everything can be hacked or simply changed by the user with the developer tools

6
00:00:25,580 --> 00:00:26,490
for example.

7
00:00:26,540 --> 00:00:29,410
So we can't rely on front end validation.

8
00:00:29,450 --> 00:00:34,010
We don't do that for our other fields and we shouldn't do it for our files.

9
00:00:34,070 --> 00:00:37,380
So on the back end I will add a file filter here.

10
00:00:37,400 --> 00:00:42,680
This is a function which receives a request object to file and then also a callback which of course

11
00:00:42,680 --> 00:00:45,680
is the same pattern you already saw there.

12
00:00:45,680 --> 00:00:49,300
Now here we have to call this callback.

13
00:00:49,400 --> 00:00:57,530
Even with an error if validation failed as a first argument or with null as a first argument if it succeeded.

14
00:00:57,530 --> 00:01:05,090
So Dan for first of all I will add a constant is valid and then check in my mind type map if I can find

15
00:01:05,090 --> 00:01:06,610
the file MIME type here.

16
00:01:07,760 --> 00:01:14,280
So this year will retrieve PMG j peg or j pick if I have one of these MIME types.

17
00:01:14,450 --> 00:01:19,520
If I have another MIME type it won't find an entry year and day Fred will return on the find.

18
00:01:20,120 --> 00:01:26,990
So now if the double bang operator in front of this we convert undefined or now to false and we convert

19
00:01:27,020 --> 00:01:29,670
one of these findings here to true.

20
00:01:29,720 --> 00:01:32,300
So now we have either true or false.

21
00:01:32,300 --> 00:01:34,090
However not here but here of course.

22
00:01:34,100 --> 00:01:37,370
So now we have either true or false stored and is valid

23
00:01:40,010 --> 00:01:40,810
now next.

24
00:01:40,820 --> 00:01:44,220
We can create our error here and there.

25
00:01:44,240 --> 00:01:52,040
I will basically check if is valid is true and if that's the case I will set this to now because then

26
00:01:52,040 --> 00:01:59,900
we have no error but if is valid is false so if we have some invalid upload then I will set this to

27
00:01:59,900 --> 00:02:05,900
a new error where I say invalid MIME type like this

28
00:02:08,800 --> 00:02:10,470
and then we can forward our error.

29
00:02:10,510 --> 00:02:17,110
And the second argument is a boolean debt basically informs Malta if we accept the file or not and here

30
00:02:17,110 --> 00:02:20,100
I can forward is valid because if that's true we form our true.

31
00:02:20,110 --> 00:02:21,040
We accept the file.

32
00:02:21,070 --> 00:02:22,270
Otherwise we don't.

33
00:02:22,330 --> 00:02:28,390
Though if you pass an error and that is a real error you already deny the file.

34
00:02:28,390 --> 00:02:31,840
So adding a Wrong file should now not be possible.

35
00:02:31,840 --> 00:02:38,260
This is the finished configuration of Malta and with Dad we should be prepared to accept and store files

36
00:02:39,620 --> 00:02:40,240
with this.

37
00:02:40,250 --> 00:02:44,410
We can save it is we are applying this middleware to our sign up route.

38
00:02:44,420 --> 00:02:50,210
Now we need to head back to the front end and of course all the restart our back in server but then

39
00:02:50,210 --> 00:02:56,570
head back to the front end to make sure that we send the right type of data to that back and to that

40
00:02:56,570 --> 00:03:00,620
sign up route and include a file in our HDP request.
