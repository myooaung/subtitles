WEBVTT
1
00:00:02.100 --> 00:00:06.870
So how can we change the logic of our get places by users ideas.

2
00:00:06.990 --> 00:00:11.070
Constant here as I said this is a totally optional approach.

3
00:00:11.160 --> 00:00:15.230
Therefore we don't have to do this here but for demonstration purposes.

4
00:00:15.270 --> 00:00:16.530
I want to show you this.

5
00:00:16.560 --> 00:00:24.070
Now keep in mind that here down there in our deeded place constant we used populate to get access to

6
00:00:24.070 --> 00:00:28.750
the enter content of a document stored in a different collection.

7
00:00:28.780 --> 00:00:34.270
We used to create the property here but with the creative property which contains the idea Mongoose

8
00:00:34.300 --> 00:00:39.850
can simply access the enter content of this document stored in the other collection.

9
00:00:39.850 --> 00:00:43.480
And with that we can then interact with this document as we saw it here.

10
00:00:43.510 --> 00:00:48.010
We were able to change for example the place property.

11
00:00:48.040 --> 00:00:48.750
So that's the idea.

12
00:00:48.760 --> 00:00:56.530
You get access to the enter content of the document stored in a different collection now and will get

13
00:00:56.530 --> 00:00:58.720
placed by user I.D. It's the same logic.

14
00:00:58.720 --> 00:01:05.860
Here we are searching the place for a specific user I.D. so the user I.D. we are providing because we

15
00:01:05.860 --> 00:01:12.640
want to get back to places a specific user has stored but to display all places a user has.

16
00:01:12.670 --> 00:01:16.150
We can also use this populate syntax for that.

17
00:01:16.150 --> 00:01:26.200
Let me maybe comment this out here as I want to rename this variable let's name it maybe user with places

18
00:01:26.290 --> 00:01:36.760
like this and now here we say that user with places is equal not to place not find but to well user

19
00:01:36.940 --> 00:01:39.420
dot find by idea right.

20
00:01:39.430 --> 00:01:45.670
Because here I want to look for a specific what for a specific user I.D. so the user I.D. that we send

21
00:01:45.700 --> 00:01:47.080
as part of our get request.

22
00:01:47.080 --> 00:01:50.590
So up here i.e. not the capital the here though.

23
00:01:50.590 --> 00:01:56.950
So this is the part where we search for a specific user I.D. and with populate we can now get access

24
00:01:57.250 --> 00:02:00.870
to the corresponding places a user has.

25
00:02:00.870 --> 00:02:07.300
And for that we only have to access to places property as part of our populate method here.

26
00:02:07.600 --> 00:02:13.330
And that said actually we can not search for a specific user I.D. and check the corresponding places.

27
00:02:13.750 --> 00:02:16.060
Our error message right here is still fine.

28
00:02:16.060 --> 00:02:19.000
So we can leave this one down here.

29
00:02:19.000 --> 00:02:21.630
We have to change our variable name now though.

30
00:02:21.730 --> 00:02:30.880
So we say whether we cannot find a user with places or whether or not places is length but user with

31
00:02:31.360 --> 00:02:34.960
places dot places length.

32
00:02:35.110 --> 00:02:37.330
So this is also correct here.

33
00:02:37.510 --> 00:02:42.260
The last adjustment we have to make is down here in our response.

34
00:02:42.400 --> 00:02:50.350
Here we now also don't use places thought map but we want to access to user with places dot places.

35
00:02:50.350 --> 00:02:55.470
And with that if we save this we can quickly go to our database again.

36
00:02:56.430 --> 00:03:02.390
And reloaded and here the thing is as we deleted all our places before we should create a new place

37
00:03:02.390 --> 00:03:07.810
maybe for that I grab our user I.D. here and now go to postman.

38
00:03:07.940 --> 00:03:10.190
So let's now quickly create a new place here.

39
00:03:11.610 --> 00:03:24.230
A post request to our well known rallied in the meanwhile so slash API slash places go to the body raw.

40
00:03:24.630 --> 00:03:25.870
Jason I.

41
00:03:26.430 --> 00:03:27.800
And here we can now again.

42
00:03:29.160 --> 00:03:35.160
And through the data title would be the Empire State Building maybe one less time

43
00:03:37.780 --> 00:03:39.020
description

44
00:03:42.130 --> 00:03:46.830
a very nice building.

45
00:03:47.020 --> 00:03:51.070
The address will be added soon.

46
00:03:51.070 --> 00:04:00.410
I just want to copy paste the create your idea first here in our creator so this one and now the address

47
00:04:00.440 --> 00:04:02.230
again from google maps here.

48
00:04:02.900 --> 00:04:08.420
Let's not see if this works by hitting send Yeah.

49
00:04:08.470 --> 00:04:09.210
This looks good.

50
00:04:09.220 --> 00:04:10.380
The place was created.

51
00:04:10.410 --> 00:04:16.840
Let's now add a second placed to show you that this also works of multiple places so maybe the Madison

52
00:04:17.320 --> 00:04:27.010
Square Garden or some for great events and also quickly.

53
00:04:27.010 --> 00:04:28.780
The address here.

54
00:04:28.960 --> 00:04:32.530
So let's also create this place looks fun.

55
00:04:32.710 --> 00:04:37.770
And now we need to create a get request because I want to see whether I can get the places.

56
00:04:37.890 --> 00:04:40.240
So slash API slash places.

57
00:04:40.240 --> 00:04:42.190
But here it is now slash user.

58
00:04:42.190 --> 00:04:45.800
And now we have to enter our user I.D..

59
00:04:45.850 --> 00:04:51.730
Copy that again pasted and Nelson to get request that you can see.

60
00:04:51.730 --> 00:04:57.520
Now we get all the places which are part of our user by using depopulate method.

61
00:04:57.520 --> 00:05:02.950
And just to show you that this works if I would change seven to eight here then we should get an error.

62
00:05:03.790 --> 00:05:07.260
Yep we could not find places for the provided DB with 7.

63
00:05:07.270 --> 00:05:13.090
This is working and if I go back to our database and reloaded

64
00:05:16.570 --> 00:05:23.260
you can of course also see that we have our user and now these two places in the database and that's

65
00:05:23.530 --> 00:05:24.120
it actually.

66
00:05:24.130 --> 00:05:29.740
With that we implemented a lot of core logic in this one with the B and Mongoose module.

67
00:05:29.740 --> 00:05:35.320
Before we summarize what we learned let's quickly have a look at our old code and see if we can clean

68
00:05:35.320 --> 00:05:36.350
it up a bit.
