WEBVTT
1
00:00:02.180 --> 00:00:07.790
So we have to model and the schema so the blueprint for our product how can we use this logic to create

2
00:00:07.850 --> 00:00:09.220
new JavaScript objects.

3
00:00:09.230 --> 00:00:13.340
And Indian to create new documents stored in our database.

4
00:00:13.370 --> 00:00:16.630
Let's get started by creating a new file here first.

5
00:00:16.670 --> 00:00:22.430
A mongoose Che s file because I want to keep both the Mongo J as and the Mongoose code here for you

6
00:00:22.520 --> 00:00:28.610
just as a reference in this Mongoose file will now at the logic to create and get new products.

7
00:00:28.640 --> 00:00:32.440
First start with creating products and we'll use Mongoose for this purpose.

8
00:00:32.480 --> 00:00:41.240
Therefore we have to again import Mongoose 50 require syntax here.

9
00:00:41.240 --> 00:00:44.810
So that's Mongoose but we also want to use our model in here.

10
00:00:44.810 --> 00:00:48.560
Therefore we should also imports for that we create another constant.

11
00:00:48.560 --> 00:00:54.260
And you can name this whatever you want but as refer to our model and as we can use this model to create

12
00:00:54.320 --> 00:00:59.930
a new javascript object based on the blueprint Indian convention is to start with capital letter here.

13
00:00:59.930 --> 00:01:03.980
So the constant product would be equal to again.

14
00:01:04.040 --> 00:01:14.640
You require syntax but now referring to our models folder and here the product file you can omit the

15
00:01:14.670 --> 00:01:16.040
file extension here.

16
00:01:16.380 --> 00:01:20.730
Now to create the product based on this model we create another constant.

17
00:01:21.180 --> 00:01:25.690
Again create product as we had it before in demand would you be part.

18
00:01:26.070 --> 00:01:29.620
This will again be an asynchronous task here.

19
00:01:30.080 --> 00:01:33.110
Quest response and next.

20
00:01:33.120 --> 00:01:38.450
And now in this function we want to use our model to do that.

21
00:01:38.570 --> 00:01:42.740
We need another constant here and this will now be d created product.

22
00:01:42.770 --> 00:01:44.720
So not create product but to create the product.

23
00:01:44.720 --> 00:01:51.230
So the end this should now use our model to create this new javascript object and as it turns out our

24
00:01:51.230 --> 00:01:52.360
product.

25
00:01:52.460 --> 00:01:56.540
So our model that we use in the end can be instantiated as.

26
00:01:56.540 --> 00:02:01.260
Here our model function is a constructor function.

27
00:02:01.280 --> 00:02:12.140
Therefore we can again use new here and refer to our model and here we cannot pass in a javascript object

28
00:02:12.170 --> 00:02:13.510
and interest javascript object.

29
00:02:13.520 --> 00:02:21.000
We can pass in the information required for our model for our product schema in the end.

30
00:02:21.270 --> 00:02:22.230
And what is required.

31
00:02:22.230 --> 00:02:23.460
Well it's again

32
00:02:26.120 --> 00:02:32.210
our name and we get the name from the requests body that we send that inside the body to should be name

33
00:02:32.200 --> 00:02:33.270
proper team.

34
00:02:33.280 --> 00:02:34.640
And same thing for the price.

35
00:02:34.640 --> 00:02:39.960
This is also provided in the request body but here the price.

36
00:02:40.040 --> 00:02:42.220
So this is our create product logic.

37
00:02:42.230 --> 00:02:44.840
We will also use this in our app as fine of course.

38
00:02:44.840 --> 00:02:53.360
Therefore we can also use our export syntax here once again to make sure this works by the way I'm not

39
00:02:53.360 --> 00:02:59.640
using module exports at this stage because technically we only have one export now but we will add D

40
00:02:59.650 --> 00:03:05.930
get products logic soon and I want to be able to easily switch between D Mongo and Mongoose file in

41
00:03:05.990 --> 00:03:09.440
app J.S. therefore I'm using this export syntax.

42
00:03:09.470 --> 00:03:13.900
At this stage what's missing now though is the logic to connect to our database.

43
00:03:13.910 --> 00:03:19.850
Now while Mongoose and of course also to finally store the document the created document in the database.

44
00:03:19.850 --> 00:03:20.800
These are the next steps.

45
00:03:20.810 --> 00:03:21.080
Now.
