WEBVTT
1
00:00:02.430 --> 00:00:08.610
So let's make sure we can update a place for dead when we go to update place.

2
00:00:08.610 --> 00:00:14.400
We want to retrieve that place by I.D. and at the moment this fails because I worked with dummy places

3
00:00:14.490 --> 00:00:21.450
thus far and then there we can't find a place for you locked in user or for the place I.D. in the U

4
00:00:21.450 --> 00:00:23.840
or L which we actually tried to do.

5
00:00:23.940 --> 00:00:24.870
So this won't work.

6
00:00:24.870 --> 00:00:28.250
Instead I want to fetch the place data from the back.

7
00:00:28.250 --> 00:00:33.840
And because that is a common requirement that you have a single page with details about some entity

8
00:00:33.840 --> 00:00:39.440
in your application and you want to fetch the latest data from the back end to display it there.

9
00:00:39.570 --> 00:00:45.270
Now conveniently on the back end we have a route for this this get route where we then trigger get placed

10
00:00:45.270 --> 00:00:46.730
by I.D. in the end.

11
00:00:46.770 --> 00:00:50.820
So now we just need to send a request to this U.R.L. from our front end.

12
00:00:50.880 --> 00:01:01.700
So here I will import use age if you client from shared Hook's age should if you hook and justice before

13
00:01:01.700 --> 00:01:03.170
initialize it here.

14
00:01:03.170 --> 00:01:08.140
So here I can use object D structuring thereafter called H to be client.

15
00:01:08.300 --> 00:01:11.200
And now we already have it is loading state here.

16
00:01:11.210 --> 00:01:12.280
Let's get rid of that.

17
00:01:12.290 --> 00:01:14.200
This is now managed power hook.

18
00:01:14.210 --> 00:01:15.470
So here we have is loading.

19
00:01:15.470 --> 00:01:16.210
We have error.

20
00:01:16.220 --> 00:01:21.050
We have send request and clear error all the things we already worked with.

21
00:01:21.050 --> 00:01:27.710
Now I want to send the request when this page loads to load the latest place data for that we need to

22
00:01:27.710 --> 00:01:33.650
use a fact which is already imported and we will need to use state to manage our loaded place data as

23
00:01:33.650 --> 00:01:43.510
well so we'll add a state here loaded place and set loaded place and manage this with use.

24
00:01:43.510 --> 00:01:56.560
State and initially that's undefined then here instead of using our dummy places I want to use use effect

25
00:01:57.070 --> 00:02:00.550
to send a request and fetch my data.

26
00:02:00.550 --> 00:02:06.280
So here in use in fact I will have sent request as a dependency and I'll also have to place I.D. which

27
00:02:06.280 --> 00:02:11.860
we get from the U R L as a as a dependency and in that function.

28
00:02:12.040 --> 00:02:14.210
I now want to fetch a place here.

29
00:02:14.380 --> 00:02:22.750
So just as before I'll add a fetch place function in here so that I can conveniently use async await

30
00:02:23.200 --> 00:02:30.520
and call fetch place immediately thereafter and in fetch place we can now send the request away to response

31
00:02:30.520 --> 00:02:38.460
and there we got our response data and here of course we need to provide a U R L on that request the

32
00:02:38.460 --> 00:02:45.690
U R L is h to be a local host five thousand slash API slash places and now if you verified this on the

33
00:02:45.760 --> 00:02:48.530
backend slash some place I.D..

34
00:02:49.290 --> 00:02:59.890
So here we simply inject the place idea we got from the U R L this should get us a place of course for

35
00:02:59.890 --> 00:03:05.200
whatever reason this could fail those so let's actually catch any errors we don't need to handle them

36
00:03:05.200 --> 00:03:11.460
here though because we do have error handling built into our custom HBP client hook and therefore here

37
00:03:11.470 --> 00:03:17.740
we just need to worry about the success case if I got my places I can call set loaded place and now

38
00:03:17.740 --> 00:03:23.440
on the back if we have a look at the places controller we see that get placed by I.D. in the end returns

39
00:03:23.440 --> 00:03:27.380
an object with a place key which contains that loaded place.

40
00:03:27.610 --> 00:03:36.460
So here we want to set the loaded place to response data dark place so this will fetch a place now whenever

41
00:03:36.650 --> 00:03:43.280
we fetch a place we always want to update our form data right before we did this year with the identified

42
00:03:43.280 --> 00:03:44.170
place.

43
00:03:44.330 --> 00:03:51.980
Now we can actually grab this set form data call here removed his entire use of fact called down there

44
00:03:52.250 --> 00:03:52.820
and instead.

45
00:03:52.820 --> 00:04:00.740
Not just set the load loaded place but actually set foreign data and here use response data dot place

46
00:04:00.740 --> 00:04:08.180
dot title response data dot place dot description that just means that we should add set form data as

47
00:04:08.180 --> 00:04:14.980
a dependency here now with that we're updating the form correctly we're storing our loaded place now.

48
00:04:14.990 --> 00:04:20.240
Down there we need to check if we got a loaded place because if we don't do that then I want to render

49
00:04:20.270 --> 00:04:26.390
this fallback otherwise if we're loading I'll render this though we can do better now actually we can

50
00:04:26.480 --> 00:04:28.150
use a loading spinner here.

51
00:04:28.190 --> 00:04:34.850
Make sure you add the import at the top and you import loading spinner from shared components UI elements

52
00:04:34.850 --> 00:04:43.030
loading spinner and whilst where they are already we can import error modal from shared components UI

53
00:04:43.030 --> 00:04:47.920
elements error modal as well so that we can also output errors.

54
00:04:47.920 --> 00:04:53.590
So now we got that imported and if we now scroll down we're rendering or loading spinner here if we

55
00:04:53.590 --> 00:05:02.320
are loading and if we're not loading and we got a place then here I want to return react fragment so

56
00:05:02.320 --> 00:05:11.200
that I can also again use my error modal here and render error modal like this forward D.R. which we

57
00:05:11.200 --> 00:05:20.160
get and point on clear at clear error function and of course you could all do justice before check is

58
00:05:20.160 --> 00:05:23.290
loading here and I'll put a loading spinner here if you wanted to.

59
00:05:23.430 --> 00:05:28.070
I just also want to show this alternative of doing this in an extra statement.

60
00:05:28.290 --> 00:05:35.130
Now one extra tweak a i apply here is I want to check if we don't have a loaded place and we're not

61
00:05:35.130 --> 00:05:41.580
having an error or DNA one to show this fallback otherwise we should make it to disk block here.

62
00:05:41.820 --> 00:05:52.520
And if we now save this let's give it a try let's authenticate here log in and now click on edits and

63
00:05:52.520 --> 00:05:55.040
there you saw could not find place.

64
00:05:55.040 --> 00:05:56.720
Briefly before this is loaded.

65
00:05:56.720 --> 00:06:00.980
However the form is definitely not initialized correctly here.

66
00:06:01.220 --> 00:06:06.800
And the reason for seeing could not find a place is that I check is loading too late I should do this

67
00:06:07.010 --> 00:06:12.140
before I check if we're maybe not loading anymore but we got no place in error so I should have this

68
00:06:12.410 --> 00:06:13.310
order here.

69
00:06:13.310 --> 00:06:16.600
But the reason for the form being empty is a different one.

70
00:06:16.700 --> 00:06:21.230
We're simply rendering the form too early and therefore the input gets initialized too early.

71
00:06:21.290 --> 00:06:28.800
Here want to check if we're not loading and we got a loaded place

72
00:06:34.080 --> 00:06:41.180
and only in that case I will render the form with that added If we now safeties and we log in again

73
00:06:43.430 --> 00:06:48.660
go to our place here and added it and we're still not seeing our initial values here.

74
00:06:48.680 --> 00:06:53.960
Now we can fix this by changing our logic here in the form a bit more I'm checking for not loading and

75
00:06:53.960 --> 00:06:55.930
if we have to load a place.

76
00:06:55.970 --> 00:07:01.430
Actually we can also use that loaded place which we know will have the initial data from the back end

77
00:07:01.850 --> 00:07:08.610
to set our initial title here and set this and set this initial validity to true therefore.

78
00:07:08.930 --> 00:07:16.520
And down there we can set this to loaded place start description and setting this to true and that should

79
00:07:16.520 --> 00:07:20.570
do the trick if we now save that we log in real quick again

80
00:07:23.900 --> 00:07:27.500
we go to edit here now it is this initialized correctly.

81
00:07:27.500 --> 00:07:33.770
Now briefly you see the loading spinner there because our data of course arrives super quick here in

82
00:07:33.770 --> 00:07:37.690
this application and then here we have all our data.

83
00:07:37.700 --> 00:07:43.100
Now let's make sure that we don't just load the data we want to add it but that we actually also are

84
00:07:43.100 --> 00:07:50.460
able to change it and then click Update place and stored it on the back and note to store our update

85
00:07:50.580 --> 00:07:51.830
on the back end.

86
00:07:51.960 --> 00:07:57.570
We got a specific route of course in the places routes we got this patch road where we just need to

87
00:07:57.570 --> 00:08:03.660
point at API slash places slash place I.D. and where we then add the title and description to the body

88
00:08:03.660 --> 00:08:05.280
off that request.

89
00:08:05.280 --> 00:08:11.880
So on the front end in update place J.S. in the places pages folder we want to trigger that whenever

90
00:08:11.880 --> 00:08:13.590
we Indians submit this form.

91
00:08:13.680 --> 00:08:19.260
So here this will now be a async function so that I can use async await in there.

92
00:08:19.260 --> 00:08:25.390
And then here we want to send a request we want to send a request to the back end no justice before

93
00:08:25.420 --> 00:08:31.540
I will use back tricks here so that we can easily inject data into the string and we'll point at a local

94
00:08:31.540 --> 00:08:37.050
host five thousand slash API slash places slash the idea of that place.

95
00:08:37.060 --> 00:08:43.090
Which of course is place I.D. the value we already have available here which we're extracting from our

96
00:08:43.090 --> 00:08:45.400
front end route from our front end.

97
00:08:45.400 --> 00:08:46.770
You are El now.

98
00:08:47.170 --> 00:08:48.940
This is not a default request.

99
00:08:48.940 --> 00:08:54.880
So we need to add a second argument where we said patch instead of the default of get I want to add

100
00:08:54.880 --> 00:08:58.170
a body and this has to be stringy fight data.

101
00:08:58.190 --> 00:09:04.930
So Jason data and there we should have our new title which we get from form state inputs titled value

102
00:09:05.290 --> 00:09:11.300
and the new description which is form state inputs description value.

103
00:09:11.740 --> 00:09:19.120
And last but not least let's also add our headers here and there you know we need to add this content

104
00:09:19.150 --> 00:09:21.720
type application.

105
00:09:21.760 --> 00:09:27.100
Jason header for to back and to parse the incoming data correctly.

106
00:09:27.100 --> 00:09:35.590
We can then await this and wrap it in try catch to make sure that we only continue in the success case.

107
00:09:35.590 --> 00:09:40.390
So here I catch any potential errors but I don't do anything with it.

108
00:09:41.520 --> 00:09:44.310
And then here and try I await the response.

109
00:09:44.310 --> 00:09:49.410
I'm not too interested in the response actually because I just want to redirect the user if we have

110
00:09:49.410 --> 00:09:51.480
a success response.

111
00:09:51.480 --> 00:09:56.400
So for that from the react router Dom package we can import to you U.S. history hook which we already

112
00:09:56.400 --> 00:10:03.660
used before and then use it here to create such a history object which then gives us all these functions

113
00:10:03.660 --> 00:10:11.300
to move the user around in the front end navigation and use you and use history here after a waiting

114
00:10:11.780 --> 00:10:13.120
for our response.

115
00:10:13.160 --> 00:10:14.080
Excuse me here.

116
00:10:14.120 --> 00:10:27.070
After waiting for a response call history and then maybe push to slash nothing and it's up to you to

117
00:10:27.070 --> 00:10:34.630
which route you want to redirect actually here it maybe makes more sense to redirect to the overview

118
00:10:34.630 --> 00:10:35.530
of places.

119
00:10:35.590 --> 00:10:42.190
And for Dad we need the user I.D. because we get to that place as per user overview page by encoding

120
00:10:42.190 --> 00:10:48.850
the user I.D. into you are L and to get Dad's user I.D. We need to tap into our context because that

121
00:10:48.850 --> 00:10:56.230
is where we manage our user I.D. of the logged in user and for Dad we all need to import all context

122
00:10:56.230 --> 00:11:07.370
from shared context off context and then here in update place maybe right at the start we can tap into

123
00:11:07.370 --> 00:11:12.980
this context by using used context and pointing it off context.

124
00:11:12.980 --> 00:11:21.260
And now with that we get this off object and when we want to redirect we redirect at slash then the

125
00:11:21.260 --> 00:11:28.100
user I.D. and then slash nothing was it right.

126
00:11:28.100 --> 00:11:34.940
If we check aptly as all places are loaded for user I.D. slash places actually of course.

127
00:11:35.030 --> 00:11:43.280
So slash places at the end with that if we save this this should actually already be all if we go to

128
00:11:43.280 --> 00:11:50.240
our application and we log in real quick and I go to my places and I added this and add exclamation

129
00:11:50.240 --> 00:11:52.330
marks here a great place in Munich.

130
00:11:52.490 --> 00:11:55.690
Definitely worth a visit.

131
00:11:56.150 --> 00:12:00.020
And I click Update place we see the loading spinner and then we are redirect that.

132
00:12:00.020 --> 00:12:04.550
So this definitely works and you see the changes reflected here.

133
00:12:04.550 --> 00:12:09.920
And of course all the reflect that if I reload right then it's still data we are locked out now but

134
00:12:09.920 --> 00:12:11.450
it's still there.

135
00:12:11.450 --> 00:12:13.390
So this worked just fine.

136
00:12:13.850 --> 00:12:17.120
And we are now able to update places as well.

137
00:12:17.270 --> 00:12:20.930
So let's finish this up by now making sure we can all delete places.
