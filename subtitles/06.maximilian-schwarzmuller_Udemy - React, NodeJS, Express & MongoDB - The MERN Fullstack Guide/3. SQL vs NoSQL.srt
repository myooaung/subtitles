1
00:00:02,220 --> 00:00:04,030
So no sequel versus sequel.

2
00:00:04,140 --> 00:00:05,530
What already differences.

3
00:00:05,730 --> 00:00:06,900
And when should you use.

4
00:00:06,930 --> 00:00:07,550
Which one.

5
00:00:07,710 --> 00:00:09,110
So we got no sequel.

6
00:00:09,120 --> 00:00:14,640
We got sequel and examples for no sequel databases would be of course Mongolia B which is what we are

7
00:00:14,640 --> 00:00:20,380
using in this chorus or couch TV and for sequel we could name my sequel or Microsoft sequel.

8
00:00:20,400 --> 00:00:26,920
Just to give you some examples here now no sequel databases do not enforce a strict data schema.

9
00:00:26,970 --> 00:00:29,700
We talked about collections and documents already.

10
00:00:29,760 --> 00:00:35,330
Tables and records in a sequel database and collections can contain documents with different schemas.

11
00:00:35,400 --> 00:00:40,350
So you could have a basic schema for your documents you have but then for newer documents you could

12
00:00:40,350 --> 00:00:44,010
change the schema and add an additional property to it for example.

13
00:00:44,010 --> 00:00:46,730
This is possible with no sequel databases.

14
00:00:46,860 --> 00:00:50,580
And this also makes it very flexible for sequel databases.

15
00:00:50,580 --> 00:00:56,760
We enforce a strict data schema so if you define the tables and the corresponding records well you normally

16
00:00:56,760 --> 00:01:01,730
don't deviate from that structure or deviating from the structure later would be a bit more difficult.

17
00:01:01,740 --> 00:01:06,360
Therefore you should create your data schema and this is what you stick to it in a sequel database for

18
00:01:06,360 --> 00:01:07,620
no sequel databases.

19
00:01:07,620 --> 00:01:12,690
We also have less focus on relations a relation would be something that if you have a document with

20
00:01:12,690 --> 00:01:19,050
the users in the document with the places then the users document could contain the police idea to refer

21
00:01:19,140 --> 00:01:21,540
to displace or to establish a connection.

22
00:01:21,540 --> 00:01:25,650
Now we can also do this in no sequel and we will do it throughout this course.

23
00:01:25,770 --> 00:01:31,920
But generally the core focus of no sequel is again less strict and less focused on two such relations.

24
00:01:31,920 --> 00:01:37,980
Again to make this whole story and clearing data structure a bit more flexible you could say for a sequel.

25
00:01:38,010 --> 00:01:39,960
Well relations are a core feature.

26
00:01:39,960 --> 00:01:45,240
You typically have one table with the users and one table of the corresponding products and then you

27
00:01:45,240 --> 00:01:49,270
need a relation to kind of know which user bought which products.

28
00:01:49,560 --> 00:01:55,530
And to summarize these points so far we can actually say that no sequel works with independent documents

29
00:01:55,530 --> 00:02:00,030
or the documents are not necessarily related to each other for sequel databases.

30
00:02:00,030 --> 00:02:01,530
Well the records are related.

31
00:02:01,530 --> 00:02:05,030
That's again one of the core concepts behind the sequel database.

32
00:02:05,040 --> 00:02:09,840
Actually these are some differences but when should you use which database now.

33
00:02:10,200 --> 00:02:15,120
Well no SQL databases are great for locks orders or some chats or messages.

34
00:02:15,120 --> 00:02:20,220
So generally whenever you have a high frequency of incoming information it should be stored or requested

35
00:02:20,700 --> 00:02:25,830
because nautical databases are really fast and you can create your own queries quite easily.

36
00:02:25,830 --> 00:02:32,220
Therefore these are typical application areas for no SQL databases SQL databases are either used for

37
00:02:32,220 --> 00:02:35,770
shopping cards contracts or generally bigger social networks.

38
00:02:35,790 --> 00:02:40,800
So these kind of applications not talking about these differences and these recommendations.

39
00:02:40,800 --> 00:02:42,970
This is not a hard restriction here.

40
00:02:42,990 --> 00:02:48,270
These are some general guidelines you can follow but you can always deviate from that depending on the

41
00:02:48,260 --> 00:02:50,230
application that you want to build.

42
00:02:50,310 --> 00:02:54,420
It can also happen that you have both types of databases inside your application.

43
00:02:54,480 --> 00:02:58,910
So one specific area of your application in terms of analytical database the other one with a secret

44
00:02:58,910 --> 00:03:02,070
database that's not too unusual actually in this course.

45
00:03:02,070 --> 00:03:07,890
We use Mongo to be as the moon stick is a well quite cool combination of different technologies and

46
00:03:07,890 --> 00:03:10,750
it's a lot of fun working with mom would be a mongoose later.

47
00:03:10,770 --> 00:03:16,840
It allows us to quickly query data and to really interact in a nice and efficient way with the database.

48
00:03:16,840 --> 00:03:20,570
But as I said this is no hard differentiation here but this is a mainstay course.

49
00:03:20,580 --> 00:03:22,800
Therefore we will use Mongo to be here.

50
00:03:22,800 --> 00:03:25,830
So that's the differentiation which we know sequel and sequel.

51
00:03:25,850 --> 00:03:31,020
And before we then set up Hmong you know there was one last thing you have to cover because actually

52
00:03:31,020 --> 00:03:36,210
if you have a front end we could actually directly connect this front and to our database.

53
00:03:36,210 --> 00:03:38,100
Well that would be a really bad idea.

54
00:03:38,130 --> 00:03:39,130
Let me tell you why.
