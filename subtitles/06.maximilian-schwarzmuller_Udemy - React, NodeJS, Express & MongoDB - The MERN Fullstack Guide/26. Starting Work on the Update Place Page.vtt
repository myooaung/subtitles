WEBVTT
1
00:00:02.400 --> 00:00:08.700
Let's continue with our application by adding a new component the update place component updates placed

2
00:00:08.700 --> 00:00:12.240
J.S. in the places pages folder is added therefore.

3
00:00:12.450 --> 00:00:17.070
And then here the idea is to also show a forum where users can enter some data.

4
00:00:17.460 --> 00:00:24.790
But for this application I want users to only be able to update the title or the description of a place.

5
00:00:25.020 --> 00:00:29.370
So let's import react from react here and create update.

6
00:00:29.370 --> 00:00:38.810
Place here as a component like this here and then export update place again.

7
00:00:38.810 --> 00:00:41.000
That is what we did before now.

8
00:00:41.030 --> 00:00:46.460
Update place is a component which of course should be loaded with routing.

9
00:00:46.460 --> 00:00:53.620
So for now I'll just output some dummy content here and go to app j ust to add a root here instead last

10
00:00:53.760 --> 00:00:59.640
page which we planned which we want to reach under slash places slash the idea of the place.

11
00:00:59.760 --> 00:01:07.920
And then here we wanna India end well loaded add update place form so here in our route setup we can

12
00:01:07.920 --> 00:01:17.110
add a new route and the path of that route is slash places slash and then the place idea.

13
00:01:17.290 --> 00:01:23.730
Now one important word here this year and this path here of course are very similar if we would change

14
00:01:23.730 --> 00:01:30.240
the order here and move Dad in front of places new we would have a problem because then every you are

15
00:01:30.450 --> 00:01:37.650
entered that starts with Slash places and then has something after it would reach this route here because

16
00:01:37.650 --> 00:01:44.630
if we had slash places slash knew here knew would be interpreted as a place I.D..

17
00:01:44.820 --> 00:01:51.410
So in order to ensure that we don't cost this route to never be reached we have to render this route

18
00:01:51.410 --> 00:01:57.470
first so that react ruder first checks whether we want to go into this route and only if we make it

19
00:01:57.470 --> 00:01:58.760
past DESC check.

20
00:01:58.760 --> 00:02:01.340
So to say we look for this route.

21
00:02:01.580 --> 00:02:07.430
So the order matters here and then in here I want to render update plays so let's import that let's

22
00:02:07.430 --> 00:02:16.070
import update plays from dot slash Places Pages update place like this and then update place is de component

23
00:02:16.490 --> 00:02:18.930
we render here like that.

24
00:02:19.100 --> 00:02:24.200
So simply as that does renders update place and now with that of course we can go back to update place

25
00:02:24.680 --> 00:02:31.940
later we will then get the idea of the place out of the U R L and fetch information about this place

26
00:02:32.000 --> 00:02:36.770
from a server and initialize our form with that place data.

27
00:02:37.010 --> 00:02:41.870
Now we'll do that initialization part now but of course we can't fetch the place data from a back end

28
00:02:41.870 --> 00:02:48.320
because we have no back and yet so for the moment I'll just get the I.D. from my server and then simply

29
00:02:48.320 --> 00:02:50.280
load my dummy place data.

30
00:02:50.330 --> 00:02:59.000
So here I will import use parents from react router Dom to get that actual place I.D. which is part

31
00:02:59.000 --> 00:03:05.750
of the U.R.L. and we can get this here and store it in a constant name place I.D. by calling use parents

32
00:03:06.080 --> 00:03:14.210
and then there will have a place I.D. field because place I do year because I named this dynamic segment

33
00:03:14.210 --> 00:03:21.290
here place I.D. so we can extract deep concrete value for that segment by that identifier inside of

34
00:03:21.350 --> 00:03:23.060
update place.

35
00:03:23.060 --> 00:03:25.450
Now as I mentioned I didn't want to load one of my dummy places.

36
00:03:25.460 --> 00:03:31.730
So here in user places we have that dummy places array we could export it and simply imported in the

37
00:03:31.730 --> 00:03:37.250
other file or just copy and pasted which is what I will do here outside of the component just added

38
00:03:37.250 --> 00:03:44.420
here and now we want to find a place with the idea that I have a new URL from that array of places.

39
00:03:44.420 --> 00:03:44.990
So here

40
00:03:48.280 --> 00:03:55.720
I'll have my identified place or whoever you want to call it which I get from dummy places by calling

41
00:03:55.720 --> 00:04:02.160
find and there I will go through all places and find the place where the idea is equal to place I.D..

42
00:04:02.350 --> 00:04:03.670
That's my idea here.

43
00:04:04.700 --> 00:04:09.950
Now if we don't find a place for the provided I.D. for the moment I'll just return some things I'll

44
00:04:09.950 --> 00:04:19.020
check if not identified place and return could not find place if well I could not find it maybe wrap

45
00:04:19.020 --> 00:04:25.380
this in a div with a class name of center so that this is nicely centered we'll have better error handling

46
00:04:25.380 --> 00:04:30.900
later once we have a backend and we connect this application to the backend at the moment we don't have

47
00:04:30.900 --> 00:04:37.140
to it's we'll have to stymie fallback so let's assume we found a place though if we did of course I

48
00:04:37.140 --> 00:04:43.710
want to render a form here and I want to render a form which I initialize with values from that place

49
00:04:44.650 --> 00:04:51.490
so here let's return a form element again like this and India render all the inputs we need.

50
00:04:51.490 --> 00:04:59.950
So let's import some inputs again up there I'll import input from and now again go to the shared folder

51
00:04:59.980 --> 00:05:06.160
components form elements input and we'll all need to button from there so we can all import data already

52
00:05:06.700 --> 00:05:15.240
and get the button from the exact same folder in form elements button with those imports added back

53
00:05:15.240 --> 00:05:21.840
to the form in the form I want to render my inputs and d inputs I have.

54
00:05:21.840 --> 00:05:28.140
Here is a title input and then also a description input because these should be the two pieces of information

55
00:05:28.260 --> 00:05:33.420
that should be changeable that should be editable by users after a place was created.

56
00:05:34.340 --> 00:05:38.240
So the elements here for the title is input.

57
00:05:38.240 --> 00:05:50.090
Type is text I want have a normal text input the label will be title and validators will be an array

58
00:05:50.480 --> 00:06:00.410
where I of course now need my validators so for Dad let's import from shared you tell validators and

59
00:06:00.410 --> 00:06:08.030
I want to import validator require here and validator Min length because these again are the two validators

60
00:06:08.030 --> 00:06:09.500
we need here.

61
00:06:09.500 --> 00:06:13.970
So down there here I execute validator require as a function

62
00:06:17.510 --> 00:06:25.520
we can also provide our error text where I say Please enter a valid title and of course on input where

63
00:06:25.520 --> 00:06:28.910
we get the entered value and validity of that value.

64
00:06:28.910 --> 00:06:32.210
Now the function we add here that's something I'll focus on later.

65
00:06:32.210 --> 00:06:38.390
Of course we can use the same function as a new place but then we also have to add use reducer and everything

66
00:06:38.390 --> 00:06:42.050
to update place and that means a lot of code duplication.

67
00:06:42.050 --> 00:06:45.090
So maybe we can find a more elegant way there.

68
00:06:45.140 --> 00:06:51.920
Now one other issue will have here is in this scenario when we're editing a place I actually also want

69
00:06:51.920 --> 00:06:56.770
to set an initial value on the input and that's something we don't currently support.

70
00:06:56.780 --> 00:06:59.490
I want to be able to set my value here too.

71
00:06:59.660 --> 00:07:08.640
Well as I said some initial foreign value so initially to identify it place dot title for example.

72
00:07:08.720 --> 00:07:14.060
So that's all something we'll need to support and therefore we all want to set an initial validity and

73
00:07:14.060 --> 00:07:19.760
in the end set this to true here you could say because of course since we have a title initially it

74
00:07:19.760 --> 00:07:25.780
initially also is valid already so we'll need to tweak our input component a little bit before we do

75
00:07:25.790 --> 00:07:34.920
so though I'll add my description element here which is a text area type is therefore not required label.

76
00:07:35.060 --> 00:07:36.910
Is this group action.

77
00:07:36.920 --> 00:07:44.150
And here I need to mean length validator instead of min length of 5 and say please set a valid description

78
00:07:44.750 --> 00:07:53.380
Min 5 characters and here of course I want to initialize this with D identified place description set

79
00:07:53.380 --> 00:08:00.760
validity to true and we'll have to see what we do with on input so let's still at the button though.

80
00:08:00.860 --> 00:08:07.910
They're the type should be submit it should be disabled if the form is invalid.

81
00:08:07.920 --> 00:08:13.330
So initially it is enabled because initially this form is valid of course because we do have initial

82
00:08:13.330 --> 00:08:17.560
values for title and description but we'll also have to revisit this logic.

83
00:08:18.190 --> 00:08:21.900
And then here I'll say update place.

84
00:08:22.030 --> 00:08:27.520
So as you can tell we have some work to do we need to adjust the input component to be more flexible

85
00:08:27.550 --> 00:08:35.860
and accept initial values and initial validity is and we want to look into reusing some form code maybe

86
00:08:35.890 --> 00:08:40.420
reuse does reduce rents on so that we don't have to duplicate so much code.

87
00:08:41.050 --> 00:08:43.480
So let's focus on the input component though.
