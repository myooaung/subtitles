WEBVTT
1
00:00:02.200 --> 00:00:08.920
So as a next step in our little application which is slowly taking shape here let's work on the places

2
00:00:09.220 --> 00:00:15.880
we are able to view our users and when we click a user I want to view all the places that belong to

3
00:00:15.880 --> 00:00:16.670
that user.

4
00:00:16.720 --> 00:00:18.990
And right now that is just not happening.

5
00:00:19.180 --> 00:00:24.060
I can click the user and I in the end just reload this page over and over again.

6
00:00:24.130 --> 00:00:29.560
The reason for that simply is that we haven't set up any a route here in app J.S. Dad would handle a

7
00:00:29.560 --> 00:00:32.770
case that we want to view the places of a user.

8
00:00:32.770 --> 00:00:39.520
Now for Dad we first of all should create a new page up Places page which is responsible for showing

9
00:00:39.520 --> 00:00:41.110
all the places of a user.

10
00:00:41.110 --> 00:00:47.950
So in the pages folder in the places folder I'll add a user places J as file and in there I want to

11
00:00:47.950 --> 00:00:53.430
have a component which will fetches and renders all the places that belong to a user.

12
00:00:53.440 --> 00:00:59.550
Now the fetching part will only happen later once we also have a back end to connect the app to.

13
00:00:59.650 --> 00:01:03.040
But for now here will also work with some dummy data.

14
00:01:03.040 --> 00:01:11.020
So let's import react from or react here and create our user place as a component as we did multiple

15
00:01:11.020 --> 00:01:12.970
times before in this course.

16
00:01:12.970 --> 00:01:17.130
And of course export this component here like that.

17
00:01:17.440 --> 00:01:21.190
And now I want to return my list of places.

18
00:01:21.340 --> 00:01:26.630
Now that list of places will actually be outsourced in a separate component.

19
00:01:26.650 --> 00:01:27.720
You don't have to do that.

20
00:01:27.730 --> 00:01:33.670
But again I want to keep my page component lean I want to keep every component lean and therefore split

21
00:01:33.700 --> 00:01:36.190
my app into smaller pieces.

22
00:01:36.200 --> 00:01:43.420
For that we can add a place list J.S. file in the components folder in the places folder for example

23
00:01:43.750 --> 00:01:49.540
and add a place list see us as file there so that some styling can all to be added and also maybe add

24
00:01:49.540 --> 00:01:55.120
a place item j s in a place item C as this file so that we can split this up even more.

25
00:01:55.120 --> 00:02:02.350
And just as we did it with the user managed list an item separated from each other so in place list.

26
00:02:02.350 --> 00:02:07.110
J Yes dear I want to import react from react again.

27
00:02:09.380 --> 00:02:16.760
And create my place list component where we will receive some props to configure what we output and

28
00:02:16.760 --> 00:02:24.910
in the end of course I export place list and we can also at the CSA s import to dot slash place list

29
00:02:24.920 --> 00:02:32.060
C as s we can copy all that content into place item because in the end this file here will look very

30
00:02:32.060 --> 00:02:32.860
similar.

31
00:02:32.870 --> 00:02:37.730
Justin we're talking about the place item component and hence we should adjust you see us as import

32
00:02:37.910 --> 00:02:39.830
and also the names down there.

33
00:02:39.860 --> 00:02:42.530
Now back to place list in there.

34
00:02:42.530 --> 00:02:46.380
The idea is surprisingly to output a list of places.

35
00:02:46.520 --> 00:02:53.310
Well at least if we have places so similar to what we did in our users list component and therefore

36
00:02:53.390 --> 00:02:58.670
we might be able to merge some logic but I'm not sure I will leave it separated here although to make

37
00:02:58.670 --> 00:03:04.640
it clearer and easier to follow so similar to that our component though I will first of all check if

38
00:03:04.640 --> 00:03:10.580
my items prop which I expect to get which should be an array of places if the length of that is equal

39
00:03:10.700 --> 00:03:19.640
to zero which means I have no places in that case I want to return a card in the end where I say no

40
00:03:19.640 --> 00:03:26.600
place has found so I'll return a dev here first of all with a class name of place stash list and then

41
00:03:26.600 --> 00:03:33.140
center as a extra class and so two classes added to that div and then I want to add my card.

42
00:03:33.200 --> 00:03:42.410
So import the card component from the shared folder components UI elements card and then in that div

43
00:03:42.470 --> 00:03:52.440
render that card like that and in their add age to tag where I say no place has found maybe create one

44
00:03:53.100 --> 00:04:01.980
and then also below that a button which says a share place or actually that should be a link later which

45
00:04:01.980 --> 00:04:03.840
leads to the new place page.

46
00:04:04.080 --> 00:04:12.120
So I could import the link here from react ruder Dom but actually will soon create a custom button which

47
00:04:12.120 --> 00:04:17.190
can be either a button or a link and therefore for now I'll just leave that button place holder which

48
00:04:17.250 --> 00:04:19.590
for the moment won't do anything.

49
00:04:19.590 --> 00:04:24.180
So that's our fallback if we have no places then we return this content.

50
00:04:24.180 --> 00:04:26.500
Now of course hopefully we do have some places.

51
00:04:26.610 --> 00:04:29.070
So let's all to handle that scenario in that scenario.

52
00:04:29.070 --> 00:04:35.480
I want to render unordered list with a class of place list added to it.

53
00:04:35.790 --> 00:04:38.940
And in there similar to what we had in the users list.

54
00:04:38.940 --> 00:04:45.420
I want to loop where I want to go for all my items and map this array of vanilla javascript objects

55
00:04:45.450 --> 00:04:52.410
which will have there to an array of j x elements so we can output something dynamic here with curly

56
00:04:52.410 --> 00:04:55.190
braces and then props items.

57
00:04:55.200 --> 00:04:57.250
Map is the way to go.

58
00:04:57.360 --> 00:05:03.940
This allows us to go through every place we have and then render a place item for every place.

59
00:05:03.940 --> 00:05:07.590
Now for that let's import the place item component.

60
00:05:07.590 --> 00:05:13.620
Import place item from the sibling place item file which is in the same folder.

61
00:05:13.920 --> 00:05:20.190
And now we can pass data to place item for one we need to set that special key property react requires.

62
00:05:20.190 --> 00:05:24.410
It always requires that when you're rendering sibling items that have the same type.

63
00:05:24.630 --> 00:05:30.390
So put in other words if you are outputting a list of J as X elements then here I want to have a key

64
00:05:30.510 --> 00:05:40.470
of place idea and also an idea which I want to forward also place ideas then I want to forward an image

65
00:05:40.500 --> 00:05:46.050
because every place should have an image so I will for workplace start let's say image you are L of

66
00:05:46.050 --> 00:05:48.770
course it's up to you which data you expect here.

67
00:05:48.780 --> 00:05:53.940
You just have to make sure that when you later create and fetch the data it has to structure.

68
00:05:53.940 --> 00:05:55.660
You are expecting here.

69
00:05:55.710 --> 00:06:00.560
So I am expecting that a place has an image you are L property and an idea.

70
00:06:00.570 --> 00:06:04.860
I also want to have a title on my place so I will forward place thoughts.

71
00:06:04.890 --> 00:06:12.920
Title I always want to have a short description so I will forward place thoughts description and also

72
00:06:12.920 --> 00:06:18.920
an address a human readable address which should be placed dot address.

73
00:06:19.000 --> 00:06:23.340
In addition a place is created by a user and that user has an idea.

74
00:06:23.380 --> 00:06:33.090
So I will forward place dot creator to recreate her I.D. prop and the coordinates are all the required.

75
00:06:33.100 --> 00:06:38.500
We have the address to show the human readable address but I also need the coordinates to showed us

76
00:06:38.530 --> 00:06:47.270
on a map because we're going to render a map as well and there I want to have place start location as

77
00:06:47.270 --> 00:06:53.390
a property on the place that holds these coordinates coordinates will be an object with a left for latitude

78
00:06:53.510 --> 00:07:01.700
and the LNG for longer to property but you'll see this in action later with that we added a bunch of

79
00:07:01.700 --> 00:07:06.600
data we feed into place item for now I think that does the trick.

80
00:07:06.680 --> 00:07:11.460
Now let's work on place item and let's make sure we do something with all the data there.

81
00:07:11.780 --> 00:07:19.520
Now place item will become a bit more complex in the future but for the moment it can be very straightforward.

82
00:07:19.670 --> 00:07:28.460
I want to return a list item here a list item that also gets a class place item and that now somehow

83
00:07:28.460 --> 00:07:32.070
needs to output all the information we get.

84
00:07:32.090 --> 00:07:38.960
For example here I want to output an image for that I'll add a div and dad div will also receive a class

85
00:07:38.960 --> 00:07:48.480
name of place stash item underscore underscore image and in their we can add an image element and set

86
00:07:48.480 --> 00:07:56.810
the source to props dot image because we will past his image prop to place items so we can reference

87
00:07:56.810 --> 00:07:57.530
it there.

88
00:07:57.890 --> 00:08:02.380
All can be said to prop start Tidal.

89
00:08:02.560 --> 00:08:03.710
Now we'll know that Dave.

90
00:08:03.720 --> 00:08:12.720
I'll add another div with a class name of place stash item underscore underscored info and here I won't

91
00:08:12.720 --> 00:08:22.240
have h to tag where I outputs the title and I h free tack where I output the address and then let's

92
00:08:22.240 --> 00:08:28.300
say a paragraph where I outputs D description now by the way I will of course again provide some styling

93
00:08:28.360 --> 00:08:31.530
to use so make sure you got all the class names and so on right.

94
00:08:31.540 --> 00:08:36.820
And you got the same h t mail structure so that the styles work for you of course you can deviate from

95
00:08:36.820 --> 00:08:42.790
my structure and setup but then you'll have to adjust the styles on your own last but the least I'll

96
00:08:42.790 --> 00:08:49.390
add one last diff year to every list item and that is a div that receives C as is class as well.

97
00:08:49.390 --> 00:08:56.560
The place stash item underscore underscore actions class and in a year I want to have buttons that allow

98
00:08:56.560 --> 00:09:05.770
the user to enter act with that place D interaction here should be that you can view the place on a

99
00:09:05.770 --> 00:09:06.400
map.

100
00:09:06.520 --> 00:09:12.670
So that should open up an overlay which shows to place on a map and we will of course add that functionality

101
00:09:12.670 --> 00:09:14.920
for this module.

102
00:09:14.990 --> 00:09:21.560
I want to have a number button which allows us to edit displays later we will make sure that we only

103
00:09:21.560 --> 00:09:22.320
see this button.

104
00:09:22.340 --> 00:09:28.200
If we are the creator of the place for now it will always be shown at the same for a delete button.

105
00:09:28.250 --> 00:09:32.030
Later it will only be shown if you did create the place for the moment.

106
00:09:32.060 --> 00:09:35.480
It's always shown so we get these free but the stare.

107
00:09:35.480 --> 00:09:38.270
Now I want to wrap my my place here.

108
00:09:38.270 --> 00:09:45.560
In the end with the card component so we'll import that card component which we import earlier from

109
00:09:45.560 --> 00:09:53.870
shared components UI elements card and then instead of the list item add the card surrounding all the

110
00:09:53.870 --> 00:09:56.300
devs and to the card itself.

111
00:09:56.300 --> 00:10:01.070
I'll also add a clause placed stash item underscore underscore content.

112
00:10:03.070 --> 00:10:08.590
With that we're we have some code that should output places.

113
00:10:08.590 --> 00:10:14.620
Now it's time for some CSX and Dale for ask before attached to find a place item CSX file which holds

114
00:10:14.740 --> 00:10:15.900
all the CSX code.

115
00:10:15.940 --> 00:10:21.880
You should put into the place item C S S file in your project and you find a place list C as as file

116
00:10:22.090 --> 00:10:27.950
which holds see us as code you should add to your place lists as s file and with that we hopefully have

117
00:10:27.950 --> 00:10:29.610
a setup here that works.

118
00:10:29.630 --> 00:10:36.390
Now back in user places of course we have to use our place list so there I will import.

119
00:10:36.420 --> 00:10:42.450
Place list from going up one level components place list.

120
00:10:42.450 --> 00:10:47.700
And then here return the place list component as a self closing component.

121
00:10:47.700 --> 00:10:54.090
But of course here we have to pass an items on that items prop and that should be an array of the places

122
00:10:54.090 --> 00:10:55.500
we want to display.

123
00:10:55.530 --> 00:11:03.950
For that I will create a dummy array here actually outside of this function which will name dummy places

124
00:11:03.950 --> 00:11:11.190
to make it really clear that this is only a temporary placeholder and in there we can now add some places.

125
00:11:11.350 --> 00:11:12.650
Each place needs an I.D..

126
00:11:12.670 --> 00:11:25.510
Let's say he won a title let's say Empire State Building description one of the most famous skyscrapers

127
00:11:25.600 --> 00:11:28.830
in the world an image.

128
00:11:28.840 --> 00:11:31.320
And there we have to be careful in place list.

129
00:11:31.330 --> 00:11:38.740
I extract image you are L so I'll place should have a property named image you are L so let's name it

130
00:11:38.830 --> 00:11:45.270
image you are L here where I will just pick a image from the web that shows the Empire State Building.

131
00:11:45.430 --> 00:11:53.510
Here we go then the human readable address which I will simply fetch on google maps there I searched

132
00:11:53.510 --> 00:12:00.890
for the Empire State Building and this is then the the address I want to use and for these coordinates

133
00:12:00.920 --> 00:12:08.610
which I also need coordinates I am extracting location actually should be the name I'm extracting location

134
00:12:08.610 --> 00:12:16.110
here so let's name this location and that should be a nested object with a lat and LNG key and both

135
00:12:16.110 --> 00:12:21.820
should be numbers latitude and longitude which is the default measurement system for a coordinates.

136
00:12:21.960 --> 00:12:23.450
You get that from google maps as well.

137
00:12:23.460 --> 00:12:28.340
The thing you're after the at symbol that's the latitude before the comma.

138
00:12:28.530 --> 00:12:31.900
So let's edit here and then after does karma here.

139
00:12:31.920 --> 00:12:38.730
In my case the minus 73 ends on that is the long etude and the minus is part of the long etude.

140
00:12:38.970 --> 00:12:40.660
So let's add that here.

141
00:12:41.310 --> 00:12:43.740
And with that I have my dummy place here.

142
00:12:43.740 --> 00:12:50.670
Now I will actually just duplicated the exact same place but with a different idea and I also forgot

143
00:12:50.700 --> 00:12:56.970
that we need a creator field because we are also extracting the creator I.D. which should be stored

144
00:12:57.000 --> 00:13:03.840
in a creator field and there I will use you one here and for the other place I will use you too and

145
00:13:03.840 --> 00:13:08.670
these will be the ideas of the users who created the places for now as all the other things on this

146
00:13:08.670 --> 00:13:09.390
front end here.

147
00:13:09.420 --> 00:13:13.980
Of course that's just dummy data so we have all of that added.

148
00:13:13.990 --> 00:13:20.060
Now we can feed our dummy places into 2D place list here.

149
00:13:20.110 --> 00:13:21.030
So let's do that.

150
00:13:21.100 --> 00:13:24.080
Just like this and save it.

151
00:13:24.270 --> 00:13:26.040
And now to see whether that works.

152
00:13:26.040 --> 00:13:29.790
We need a way of reaching user places and to reach it.

153
00:13:29.790 --> 00:13:36.960
We need to adjust our roots of course because that is ultimately where we control which pages are loaded

154
00:13:36.960 --> 00:13:38.630
for which you are El.

155
00:13:38.670 --> 00:13:53.190
So here in app yes I will import the user places component from dot slash Places Pages user places and

156
00:13:53.190 --> 00:14:01.380
now add a new route add a new route where the path we're looking for actually has a dynamic segment

157
00:14:02.040 --> 00:14:09.270
you signal that to do you react router by adding a colon and then any identifier of your choice you

158
00:14:09.270 --> 00:14:15.840
I.D. or a user I.D. whatever you want you will later be able to extract the actual value entered into

159
00:14:15.840 --> 00:14:19.800
your URL for this segment in the component which is loaded.

160
00:14:19.800 --> 00:14:25.590
This simply means you don't know the exact value yet it is dynamic here and will be the user I.D. and

161
00:14:25.590 --> 00:14:27.350
of course we will have many users.

162
00:14:27.420 --> 00:14:30.180
So this could be you one you you free.

163
00:14:30.190 --> 00:14:34.170
Well we just want to handle any user idea here.

164
00:14:35.600 --> 00:14:42.980
Now followed by places so that we can reach this route if we enter our domain slash some user I.D. slash

165
00:14:42.980 --> 00:14:44.150
places.

166
00:14:44.330 --> 00:14:49.450
If that's the path we have I want to reach user places here.

167
00:14:49.450 --> 00:14:54.290
This component now lets all the ad exact here as we did it on the other roads to make sure that only

168
00:14:54.290 --> 00:15:00.320
exactly this path loads this route and now we should be able to reach user places.

169
00:15:00.320 --> 00:15:06.290
If we save that and we go back to our application and a click on the user we are going to a page which

170
00:15:06.290 --> 00:15:08.150
has exactly this path.

171
00:15:08.150 --> 00:15:10.830
So if I click here that looks good.

172
00:15:10.850 --> 00:15:13.190
Here are our user places.

173
00:15:13.280 --> 00:15:18.020
Now the buttons don't look awesome yet we can definitely work on those and we will.

174
00:15:18.020 --> 00:15:21.710
But Abbott added that this looks really really neat.

175
00:15:21.710 --> 00:15:23.750
Now you see my places is highlighted here.

176
00:15:23.750 --> 00:15:29.840
This makes sense because at the moment and NAV links I set the link my places leads to to slash you

177
00:15:29.840 --> 00:15:30.680
1 places.

178
00:15:30.680 --> 00:15:36.650
Which is exactly where on the link we're on right now because we clicked on this user who has an idea

179
00:15:36.650 --> 00:15:38.500
of you one and Dale 4.

180
00:15:38.510 --> 00:15:44.030
Well does this is to you or all we have now what we're not doing is we're not making sure that we only

181
00:15:44.030 --> 00:15:46.510
show the places that belong to that user.

182
00:15:46.520 --> 00:15:52.460
This is something we're not doing and that will be the next step in user places.

183
00:15:52.460 --> 00:15:59.180
We want to make sure that we filter out the places that don't have the I.D. of the user we have encoded

184
00:15:59.180 --> 00:16:05.420
in the word L because we only want to see the places of the user with the idea you want not all places.

185
00:16:05.420 --> 00:16:08.060
So this place with the idea of YouTube for the Creator.

186
00:16:08.060 --> 00:16:10.190
We don't want to show that let's fix that.
