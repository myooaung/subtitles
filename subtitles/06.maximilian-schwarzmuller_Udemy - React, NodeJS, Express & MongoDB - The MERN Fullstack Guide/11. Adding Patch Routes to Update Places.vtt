WEBVTT
1
00:00:02.080 --> 00:00:07.480
We got more rockets would you want to add a patch road that allows us to update the place by the end

2
00:00:07.480 --> 00:00:10.330
a delete route that helps us delete a place.

3
00:00:10.360 --> 00:00:11.800
So let's work on those now.

4
00:00:11.890 --> 00:00:15.190
Of course as always feel free to try it on your own first.

5
00:00:15.190 --> 00:00:21.700
There are some things summit h he works at least involved which we haven't used before but in general

6
00:00:21.700 --> 00:00:24.280
you should have everything you need to make this work as well.

7
00:00:24.340 --> 00:00:26.560
So definitely try this on your own first.

8
00:00:26.590 --> 00:00:32.350
Here's a quick pause which you have to pause to video and try it there after will implement this together.

9
00:00:36.010 --> 00:00:37.620
So very successful.

10
00:00:37.690 --> 00:00:39.610
Let's implement this together now.

11
00:00:39.760 --> 00:00:45.290
For that let's go to places roots and register two new roots one for the patch age.

12
00:00:45.310 --> 00:00:52.690
The new method for Slash some place I.D. And by the way this does not clash with this root because this

13
00:00:52.690 --> 00:00:55.050
only is interested in getting requests.

14
00:00:55.060 --> 00:01:00.190
D is only interested in Patch requests so the order does not matter and the fact that they have the

15
00:01:00.190 --> 00:01:02.620
same path does also not matter.

16
00:01:02.620 --> 00:01:06.540
We would have a clash if we had a number get root with the same path here.

17
00:01:06.550 --> 00:01:10.720
This would never be reached but since we have a different method this is no problem.

18
00:01:11.290 --> 00:01:14.560
And then we want to point at some controller function before we add that.

19
00:01:14.560 --> 00:01:19.330
However let me also already register a delete route also for a slash.

20
00:01:19.330 --> 00:01:20.080
Some ideas.

21
00:01:21.170 --> 00:01:30.310
Now in the places controller we can add two new functions update place by I.D. could be one function

22
00:01:30.400 --> 00:01:38.170
where we get our response our request our response and the next function and then delete place and I'll

23
00:01:38.170 --> 00:01:43.210
actually get rid of that by I.D. thing because we have no other way of deleting or updating anyways

24
00:01:44.200 --> 00:01:46.620
so these are my two middleware functions.

25
00:01:46.630 --> 00:01:54.220
Now we need to export them here so export update place and point at the update place function and export

26
00:01:54.250 --> 00:01:57.970
delete place and point at the delete place function.

27
00:01:58.210 --> 00:02:08.010
And now in places routes we can use instead Laci's controller update plays and places controller delete

28
00:02:08.010 --> 00:02:08.670
place.

29
00:02:08.670 --> 00:02:10.310
So we're done in the routing file.

30
00:02:10.320 --> 00:02:15.150
Now we have to work in the controller file now for updating.

31
00:02:15.150 --> 00:02:17.130
There are a couple of things we got to do.

32
00:02:17.130 --> 00:02:22.460
For one it's important to know that for a patch request you also have a request body.

33
00:02:22.710 --> 00:02:27.450
And that's important because since if you want to update certain fields the data for those fields of

34
00:02:27.450 --> 00:02:30.390
course needs to be attached to the request.

35
00:02:30.510 --> 00:02:36.330
So I will copy that extraction here from create place and add it to update place.

36
00:02:36.330 --> 00:02:42.450
However here I only want to allow updating the title and description so I'll only extract that other

37
00:02:42.450 --> 00:02:46.340
data can be sent but will not be considered.

38
00:02:46.380 --> 00:02:52.110
We also need the idea of the place which should be updated and that is encoded into you are ELA.

39
00:02:52.560 --> 00:02:58.290
So here we have a mixture of some data being part of the U.R.L. L and some data being part of the request

40
00:02:58.290 --> 00:03:06.450
body and you typically encode the identifying criteria so the idea in this case into d you are L and

41
00:03:06.450 --> 00:03:10.940
the data with which you then work into the request body.

42
00:03:10.980 --> 00:03:18.510
So now to get that place idea we get it from request parents pit or whatever you'd show us as a segment

43
00:03:18.510 --> 00:03:18.930
here.

44
00:03:18.960 --> 00:03:24.400
Of course if you choose PID here you have to use PID here if you chose a different name in the roots

45
00:03:24.420 --> 00:03:27.320
setup you have to extract your data by that name.

46
00:03:27.320 --> 00:03:39.890
Here so now with that we can search for the place in our dummy places array with the find method and

47
00:03:39.890 --> 00:03:43.540
find the place where the idea is equal to place idea.

48
00:03:43.580 --> 00:03:49.670
And here I'm using the shorter form of that arrow function where if we only have one expression and

49
00:03:49.670 --> 00:03:55.250
we want to return the value of that expression we can't admit to curly braces and the return statement.

50
00:03:55.250 --> 00:03:57.190
And this will then automatically be returned.

51
00:03:57.200 --> 00:04:03.130
So this is the shortest possible form of writing this so here I am identifying a place and now we can

52
00:04:03.130 --> 00:04:04.210
update it.

53
00:04:04.210 --> 00:04:10.720
Now I actually want to update it in a immutable way which means I don't want to start working on the

54
00:04:10.720 --> 00:04:16.870
properties of the place like this because that would immediately change it here in disarray because

55
00:04:16.900 --> 00:04:23.410
objects are reference values in JavaScript in case that doesn't tell you anything attached you find

56
00:04:23.460 --> 00:04:25.520
an extra resource on reference.

57
00:04:25.520 --> 00:04:32.110
Whereas as primitive values in JavaScript now it wouldn't be horrible if we directly added this but

58
00:04:32.110 --> 00:04:38.800
it's all is not a great practice because of saving our data or saving parts of our data would fail thereafter

59
00:04:38.950 --> 00:04:40.120
which is contrary here.

60
00:04:40.120 --> 00:04:45.600
But if we would also store a file or something like that then some data might have changed already.

61
00:04:45.610 --> 00:04:53.770
Whilst our data failed so I actually want to create a copy of that place changed ad copy and only once

62
00:04:53.770 --> 00:04:55.300
that copy is finished.

63
00:04:55.360 --> 00:05:00.790
I want to change and higher place in my array of places with that updated copy.

64
00:05:00.790 --> 00:05:06.250
So they offer to create a copy I'll use the spread operator here and wrap this in curly braces.

65
00:05:06.250 --> 00:05:12.520
This creates a new object and copies all key value pairs of the old object as key value pairs into the

66
00:05:12.520 --> 00:05:13.700
new object.

67
00:05:13.810 --> 00:05:18.040
Then I'm interested in the plays index in the array.

68
00:05:18.040 --> 00:05:21.500
We can get this with dummy places find index.

69
00:05:21.700 --> 00:05:27.120
Same logic as before but this returns us the index of the place instead of the place itself.

70
00:05:28.760 --> 00:05:33.830
And then I want to update my updated place object here.

71
00:05:33.860 --> 00:05:40.700
Set the title to the title I got here and the request body and all those set the description to the

72
00:05:40.700 --> 00:05:43.520
description I got in the request body.

73
00:05:43.520 --> 00:05:46.950
Now you might be wondering why I'm able to change a constant here.

74
00:05:46.970 --> 00:05:54.650
Well again check that attached resource on primitive and reference values and it will become clear basically

75
00:05:54.650 --> 00:05:59.960
the constant stores the address of the object and not the object itself.

76
00:05:59.960 --> 00:06:03.140
So now we got the updated place we got the index of the place.

77
00:06:03.140 --> 00:06:11.270
Now I can set dummy places for the identified index equal to the updated place so I replaced the old

78
00:06:11.300 --> 00:06:18.230
object at that index with the new updated place and then we can send the response status code to 100

79
00:06:18.500 --> 00:06:24.940
not 201 one because we didn't create anything new and there we could add a message if we wanted to.

80
00:06:24.950 --> 00:06:31.430
But here I just want to add the place I want to return the updated place to be precise and this should

81
00:06:31.430 --> 00:06:33.690
be a valid updating middleware.

82
00:06:33.740 --> 00:06:34.550
Let's test it.

83
00:06:34.550 --> 00:06:43.850
Let's save this and go to postmen and there of course we have our places p one place right if we sent

84
00:06:43.850 --> 00:06:44.690
that request.

85
00:06:44.690 --> 00:06:49.580
That gives us the Empire State Building which is never lost when we restart the server because it's

86
00:06:49.580 --> 00:06:51.460
hardcoded in our code up there.

87
00:06:52.500 --> 00:06:59.970
Now let's change something about that place by creating a new request patch request where we target

88
00:07:00.660 --> 00:07:06.490
local host five thousand slash API slash places slash p 1.

89
00:07:06.600 --> 00:07:13.430
That's the idea of the place we want to add it and then on body choose raw juice.

90
00:07:13.440 --> 00:07:24.200
Jason and in their set a titled property because we are expecting title and a description property and

91
00:07:24.200 --> 00:07:25.540
then a value of your choice.

92
00:07:27.530 --> 00:07:36.910
Empire State of Mind and description pretty great song.

93
00:07:37.060 --> 00:07:38.310
Now if you hit send.

94
00:07:38.320 --> 00:07:40.130
Let's see if that works.

95
00:07:40.360 --> 00:07:41.320
Looks pretty good.

96
00:07:41.320 --> 00:07:47.080
I got my updated place back I got a 200 status code and if I now try to find that place here with my

97
00:07:47.080 --> 00:07:50.700
get request I always see the changes reflect that there.

98
00:07:50.770 --> 00:07:56.020
So I successfully changed is now just as with creating data whenever we restart the server.

99
00:07:56.020 --> 00:07:59.180
This will be lost but for the moment this is great.

100
00:07:59.200 --> 00:08:01.480
Now let's all to make sure we can delete a place.
