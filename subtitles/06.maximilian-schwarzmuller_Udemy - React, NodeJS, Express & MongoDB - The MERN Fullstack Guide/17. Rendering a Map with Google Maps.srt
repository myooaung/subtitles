1
00:00:02,250 --> 00:00:08,010
To output Google maps with react or to render a Google Maps driven map and react.

2
00:00:08,010 --> 00:00:13,110
You'll find plenty of packages if you search for a react Google Maps and you could absolutely use one

3
00:00:13,110 --> 00:00:14,390
of these packages.

4
00:00:14,400 --> 00:00:20,730
I will not do that though but instead build my own basic custom map to show you how that would work

5
00:00:20,730 --> 00:00:27,480
behind the scenes because I think that's really interesting to see and to learn now for this in the

6
00:00:27,480 --> 00:00:30,930
shared you ie elements folder here.

7
00:00:30,930 --> 00:00:40,370
Let's add a new map J.S. file and a map C as as file next to it now in the map J as file we build a

8
00:00:40,370 --> 00:00:45,680
regular react component of course by importing react from react.

9
00:00:45,680 --> 00:00:50,060
And then here our map component which receives props.

10
00:00:50,390 --> 00:00:53,600
And then by exporting that map component.

11
00:00:53,600 --> 00:01:00,100
And then of course all the import dots slash map yes as you can probably soon do that asleep.

12
00:01:00,440 --> 00:01:08,840
Now here let's return a death that div will be the the host so to save for our map and that Dave will

13
00:01:08,840 --> 00:01:12,170
receive a class name which should be set dynamically.

14
00:01:12,890 --> 00:01:19,610
So I will again assign a default clause of map but then also offered the possibility of customizing

15
00:01:19,610 --> 00:01:20,360
this.

16
00:01:20,420 --> 00:01:28,140
You don't have to then use this possibility but at least you could I will also set style to props styles

17
00:01:28,170 --> 00:01:33,520
so that you could also directly manipulate the inline styles just adding some extra flexibility here.

18
00:01:33,570 --> 00:01:36,200
No matter if we use it or not.

19
00:01:36,380 --> 00:01:43,550
Now I want to render a map here with Google Maps and for Dad we need to Google Maps SDK so you can search

20
00:01:43,550 --> 00:01:48,340
for Google Maps Javascript SDK and you'll find the official documentation.

21
00:01:48,590 --> 00:01:55,490
Now first of all we need to setup a project here and get a API key we'll all later by the way in the

22
00:01:55,490 --> 00:02:01,160
notorious module do the same because there will need some other service from Google and you can then

23
00:02:01,160 --> 00:02:05,870
later reuse the project you're about to set up here to set up such a project.

24
00:02:05,870 --> 00:02:08,560
You need a Google account and click on get started now.

25
00:02:08,560 --> 00:02:14,490
Also one important word here for Google Maps and to use their tooling and their API eyes and their esta

26
00:02:14,490 --> 00:02:15,170
case.

27
00:02:15,380 --> 00:02:18,000
You need an account with a credit card.

28
00:02:18,140 --> 00:02:23,850
It's generally free to use and you can search for Google Maps pricing to find their pricing information.

29
00:02:23,930 --> 00:02:29,870
You get to 100 dollars of free usage every month which is a lot and which definitely suffices for what

30
00:02:29,870 --> 00:02:31,700
we're doing here in this course.

31
00:02:31,760 --> 00:02:36,890
But if you're using it in a real project of course you should definitely check which prices or which

32
00:02:36,890 --> 00:02:43,860
amount which costs you can expect and you also now need a credit card to continue and render a map.

33
00:02:43,910 --> 00:02:50,960
If you don't have one of course you could look into alternatives like map box or simply render some

34
00:02:50,960 --> 00:02:56,270
dummy div with a background color here so that you can still continue with the course even if you're

35
00:02:56,270 --> 00:02:57,400
not seeing the map.

36
00:02:57,470 --> 00:03:03,830
Unfortunately you need a credit card not my rules but Google's now here in this overlay what you see

37
00:03:03,830 --> 00:03:11,580
on Google's page check maps and also maybe places because we'll need that later when we in the notice

38
00:03:11,600 --> 00:03:18,650
module also need a Google project and unlocked maps functionalities click continue their offer and now

39
00:03:18,650 --> 00:03:21,220
you have to select or create a project there.

40
00:03:21,230 --> 00:03:27,660
I will create a new project which I'll name Merlin but you can pick any name you want here and click

41
00:03:27,660 --> 00:03:33,170
Next notice will take a while and you'll have to confirm that this is the account you want to use for

42
00:03:33,170 --> 00:03:33,950
billing.

43
00:03:33,950 --> 00:03:39,650
As I mentioned what we do in the course here will be possible for free but definitely check the pricing

44
00:03:39,650 --> 00:03:41,970
if you're using it in a real project.

45
00:03:41,960 --> 00:03:47,000
Confirm this year and after while the creation will be done and you should see an overlay with your

46
00:03:47,000 --> 00:03:49,280
API key which you will also need.

47
00:03:49,280 --> 00:03:53,840
If you're not seeing it go to API eyes and then click on maps.

48
00:03:53,840 --> 00:04:01,900
Javascript API credentials and this is the API key here which you will soon need.

49
00:04:01,910 --> 00:04:07,720
Now why do we need it for that search for Google Maps JSA SDK again and go to their docs again where

50
00:04:07,720 --> 00:04:09,220
we've been before.

51
00:04:09,220 --> 00:04:14,020
Here you'll learn how to render a map with Google Maps and here you learn way more than what we will

52
00:04:14,020 --> 00:04:15,010
use in this course.

53
00:04:15,010 --> 00:04:20,260
So if you want to become a Google Maps expert and you want to use it in a lot of different ways in your

54
00:04:20,260 --> 00:04:23,760
next project these docs are the place to go.

55
00:04:23,780 --> 00:04:30,070
Now one thing we need to do is we need to grab this script here and add this to our index H to Mal file

56
00:04:30,380 --> 00:04:34,890
their let's say here at the bottom of body.

57
00:04:35,080 --> 00:04:39,370
But since it has a single defer on it this doesn't do matter so maybe also here in the head.

58
00:04:39,550 --> 00:04:43,790
We entered this script and now here we need to inject our API key.

59
00:04:43,960 --> 00:04:52,470
So this API key I just mentioned copy it and then here replace your API key without the ampersand with

60
00:04:52,470 --> 00:04:58,590
your API key but get rid of that callback in it math thing here so that you just have to script import

61
00:04:58,680 --> 00:05:05,780
ending with your API keep this will import D javascript package that helps you render Google maps with

62
00:05:05,790 --> 00:05:12,240
that let's go back to our map chars file because here we can now use this package which has added to

63
00:05:12,240 --> 00:05:14,950
our application in there.

64
00:05:14,970 --> 00:05:24,570
In this component we create a map with new window dot google dot maps dot map.

65
00:05:24,570 --> 00:05:29,050
This is a constructor function which will now be available on the global Window object in the end.

66
00:05:29,190 --> 00:05:36,030
Thanks to this input we just added here this SDK will be loaded and will add global variables on the

67
00:05:36,030 --> 00:05:40,890
window object the Google variable to be precise which then gives us access to the maps feature and then

68
00:05:40,950 --> 00:05:44,040
ultimately to the map constructor function.

69
00:05:44,070 --> 00:05:47,080
This now needs a pointer at an element.

70
00:05:47,100 --> 00:05:50,390
So in this case at this div where the map should be rendered.

71
00:05:50,520 --> 00:05:54,270
Now to get this pointer in react world will not use.

72
00:05:54,270 --> 00:05:59,880
Document get element by I.D. and assign an I.D. to the div even though did all the work but it will

73
00:05:59,880 --> 00:06:01,650
do it in a more elegant way.

74
00:06:01,890 --> 00:06:09,560
We can import use ref from react this is another hook which we haven't used before.

75
00:06:09,570 --> 00:06:17,040
Use ref can be used to create so-called references which can be one of two things we often use them

76
00:06:17,040 --> 00:06:23,620
to get a reference a pointer at a real Dom node that's one use case a very prominent one.

77
00:06:23,820 --> 00:06:25,830
The average one is actually that with refs.

78
00:06:25,830 --> 00:06:33,060
We could also create variables which survive re render cycles of our components and don't lose their

79
00:06:33,060 --> 00:06:33,630
value.

80
00:06:33,720 --> 00:06:35,100
But that's not what we need here.

81
00:06:35,670 --> 00:06:43,970
So all we do here is we create a map or constant by calling use ref whips concert and then on the dev

82
00:06:43,970 --> 00:06:50,860
here we add a special prop the ref prop which react understands where we point at the map ref and react

83
00:06:50,870 --> 00:06:56,990
does the rest and sets up a a magic connection between this death and this constant so that in this

84
00:06:56,990 --> 00:07:00,600
constant we in the end score a pointer to this death.

85
00:07:00,990 --> 00:07:05,690
And now here to this map constructor we pass map ref though not like this.

86
00:07:05,690 --> 00:07:10,760
In step there we have a current prop which holds this actual pointer which we need.

87
00:07:10,850 --> 00:07:14,830
So now we tally Google maps where it should render the map.

88
00:07:14,960 --> 00:07:20,390
Now the map constructor here takes a second argument which is an object where we can configure that

89
00:07:20,390 --> 00:07:26,070
map specifically we can set a center and assume level.

90
00:07:26,120 --> 00:07:29,400
Now I want to make sure that both can be set from outside.

91
00:07:29,420 --> 00:07:35,870
So here I want to be able to use props center and props soon so that this is really controlled from

92
00:07:35,990 --> 00:07:36,520
outside.

93
00:07:36,530 --> 00:07:42,060
This component and now it would also be nice to render a marker at the center.

94
00:07:42,130 --> 00:07:46,960
And by the way you can learn all that syntax here in the official Google Maps docs in case you're wondering

95
00:07:47,080 --> 00:07:49,120
how I know all of that.

96
00:07:49,150 --> 00:08:00,900
So here to render a marker I is simply call New when no dot google maps dot marker and 2 Marker you

97
00:08:00,900 --> 00:08:08,810
pass an object which has a position key which should be prop start center and as a second argument you

98
00:08:08,810 --> 00:08:14,990
pass on a map key which should point at your map object which you created before.

99
00:08:14,990 --> 00:08:18,350
So here this map constant.

100
00:08:18,380 --> 00:08:21,920
This will create a new marker in the center of our map.

101
00:08:21,920 --> 00:08:26,230
Now with that we have everything in place which we need to render a map.

102
00:08:26,270 --> 00:08:36,840
So let's now go back to the place item and import map from shared components UI elements.

103
00:08:36,880 --> 00:08:42,850
Map like this and render it here instead of age to the map.

104
00:08:42,850 --> 00:08:46,420
Instead we render our map here as a self closing component.

105
00:08:47,270 --> 00:08:54,660
And now on this map we have to provide this center prop which should be props coordinates and assume

106
00:08:54,840 --> 00:08:58,650
prop which I'll set to a level of 16 which should work quite well.

107
00:08:58,650 --> 00:09:02,310
Not important this coordinates prop here right.

108
00:09:02,310 --> 00:09:04,320
This has to have a specific format.

109
00:09:04,380 --> 00:09:10,680
You'll find that in the official box of the Javascript SDK Of course it has to be an object with a let

110
00:09:10,910 --> 00:09:15,120
at the LNG key where both values are numbers.

111
00:09:15,180 --> 00:09:21,120
Now that's exactly what we have in our coordinates prop here because in place list where a set the coordinates

112
00:09:21,210 --> 00:09:24,650
of a place item I refer to placed on location.

113
00:09:24,930 --> 00:09:30,580
And if we have a look at a place there we do have a location property which is exactly an object off

114
00:09:30,580 --> 00:09:32,090
that structure we need.

115
00:09:32,160 --> 00:09:38,070
If you created this in a different way you definitely have to add some step to map it into the value.

116
00:09:38,070 --> 00:09:45,140
Google Maps expects here so into an object with a let and the LNG key and with that let's save this

117
00:09:45,140 --> 00:09:46,090
and let's have a look.

118
00:09:46,100 --> 00:09:50,690
If I click on View and map this crashes.

119
00:09:50,710 --> 00:09:56,960
Now why is that while this is something to do with some react internals.

120
00:09:57,000 --> 00:10:03,360
Let's have a look at the map component again I've rendered a map by using map ref current here.

121
00:10:03,370 --> 00:10:03,850
Right.

122
00:10:03,880 --> 00:10:10,570
And that uses our reference which I said is magically set up with the help of react here to this diff.

123
00:10:10,660 --> 00:10:16,960
Now what's the problem here when this component renders for the first time which will in the end happen

124
00:10:16,960 --> 00:10:22,220
when we render our place item then does is executed from top to bottom.

125
00:10:22,240 --> 00:10:28,390
We initialize our ref but the connection has not yet been established because this part hasn't executed

126
00:10:28,390 --> 00:10:28,670
yet.

127
00:10:28,720 --> 00:10:31,390
And this is where the connection is established.

128
00:10:31,690 --> 00:10:34,870
So we just initialize the ref but there is no connection yet.

129
00:10:35,050 --> 00:10:39,000
And then the very next step I tried to render a map in that place.

130
00:10:39,010 --> 00:10:44,650
But the connection was not established yet so this can't work because Google Maps can't find out where

131
00:10:44,650 --> 00:10:46,120
to render this.

132
00:10:46,270 --> 00:10:48,600
Now thankfully react has got us covered.

133
00:10:48,730 --> 00:10:51,760
We can import a number important took the U.S. a fact took.

134
00:10:52,180 --> 00:10:57,730
I haven't covered it thus far but it's a super important hook and we'll see it a lot throughout this

135
00:10:57,730 --> 00:10:58,490
course.

136
00:10:58,700 --> 00:11:07,360
U.S. effect allows us to register logic a function that should be executed if in certain inputs change.

137
00:11:07,360 --> 00:11:14,330
So for example here we set up use effect and we set up the function that should run and then as a second

138
00:11:14,330 --> 00:11:18,710
argument to use effect an array of dependencies of that function.

139
00:11:18,710 --> 00:11:24,330
And whenever one of the dependencies changes then the function here will be read execute it.

140
00:11:24,620 --> 00:11:30,320
If we specify no dependencies this will only execute once when the component is initially mounted and

141
00:11:30,320 --> 00:11:32,570
loaded and never thereafter.

142
00:11:32,570 --> 00:11:39,920
So now we can move our map creation and market logic into this function we have in use of fact here

143
00:11:42,330 --> 00:11:43,770
now whether it moved in there.

144
00:11:43,860 --> 00:11:50,190
We should also be clear that center and assume in the end our dependencies here.

145
00:11:50,190 --> 00:12:01,550
So we'll use object D structuring again to get these two proper properties out of props center and soon

146
00:12:02,270 --> 00:12:08,300
I do this so that I can add them as dependencies independently here and I don't have to add the entire

147
00:12:08,300 --> 00:12:14,790
props object as a dependency which could change more often than just center and some so here in there

148
00:12:14,800 --> 00:12:22,720
we just refer to center and soon therefore in all these places and now we have a use affect function

149
00:12:22,810 --> 00:12:28,120
which will rerun whenever the center or to assume value which is passed in from outside changes and

150
00:12:28,120 --> 00:12:34,720
again that's just object D structuring a default javascript feature which pulls elements out of props

151
00:12:34,750 --> 00:12:38,020
or which pulls keys and their values out of props.

152
00:12:38,290 --> 00:12:43,830
So out of this props object and stores them in New constants.

153
00:12:43,870 --> 00:12:45,790
Now how does this help us.

154
00:12:45,790 --> 00:12:52,460
Well use effect will run Windows component first is rendered because then center in some changed today

155
00:12:52,510 --> 00:12:53,780
had no value before.

156
00:12:53,800 --> 00:12:58,810
Now they have a value but and that's the important thing about use effect and why it helps us here.

157
00:12:58,810 --> 00:13:07,270
It will run after J as X has been processed and rendered so it will run in the first render cycle but

158
00:13:07,480 --> 00:13:10,510
after the J is X code has been rendered.

159
00:13:10,510 --> 00:13:16,780
And that means disconnection here will have been established by the time this code runs and we take

160
00:13:16,780 --> 00:13:17,710
advantage of this.

161
00:13:17,770 --> 00:13:23,870
If we now save this this reloads and if I now click on View and map this works I'm not seeing the map.

162
00:13:23,880 --> 00:13:27,090
So something is still wrong but generally it works.

163
00:13:27,100 --> 00:13:28,200
We get no error.

164
00:13:28,360 --> 00:13:33,640
So let's now make sure we also see the map though because that of course should be the case.

165
00:13:33,820 --> 00:13:37,990
And the reason why we don't see the map is simply missing Stiles in our map component.

166
00:13:37,990 --> 00:13:41,630
I have that map class here right on the death well in maps.

167
00:13:41,620 --> 00:13:47,620
Yes SB should add some styles here for this map class selector and we should set with to 100 percent

168
00:13:47,860 --> 00:13:53,390
and high to 100 percent so that the map is rendered in the entire container we provide to it.

169
00:13:53,580 --> 00:13:56,650
And if we now safety's here as always should work.

170
00:13:56,650 --> 00:13:57,720
Otherwise reload.

171
00:13:58,060 --> 00:14:05,320
And now you should see that and you get a Google map here which you can scroll and move around and sue

172
00:14:05,320 --> 00:14:08,990
in and out and really use like your normal Google Maps functionality.

173
00:14:09,000 --> 00:14:12,040
You can even switch to satellite mode if you wish to.

174
00:14:12,040 --> 00:14:18,040
So now we're rendering this if you click on View and map in our standalone modal and was that we already

175
00:14:18,040 --> 00:14:24,880
achieved a lot here and we're still far from done we're not able to at place says authenticate is not

176
00:14:24,880 --> 00:14:26,070
working and so on.

177
00:14:26,080 --> 00:14:32,070
So there is a lot of missing work or a lot of missing functionality but we will get there.

178
00:14:32,110 --> 00:14:34,020
This is a great step forward.
