1
00:00:02,240 --> 00:00:03,640
To output our own goals.

2
00:00:03,680 --> 00:00:08,120
I'll add a new component in the components folder and to keep it manageable.

3
00:00:08,150 --> 00:00:11,420
I'll actually create a new sub folder for every component.

4
00:00:11,420 --> 00:00:17,630
This is not a must do but I personally like doing this because then I can quickly find all my components.

5
00:00:17,630 --> 00:00:20,950
Of course you now need to adjust your import here in app shares.

6
00:00:21,110 --> 00:00:23,990
My idea you did it automatically in case that did not happen.

7
00:00:23,990 --> 00:00:28,670
Make sure you adjust your goal list import to reflect that new folder.

8
00:00:28,700 --> 00:00:35,750
Well I added and then it will add a new gold component here in the components folder as well in there.

9
00:00:35,750 --> 00:00:39,180
Add a new gold jazz file and a new goal.

10
00:00:39,270 --> 00:00:40,430
See us as fall.

11
00:00:40,430 --> 00:00:45,830
If you want to apply some styling now in the New Gold J.S. file we first of all need to import react

12
00:00:45,830 --> 00:00:46,700
from react.

13
00:00:46,700 --> 00:00:47,930
You always need to do that.

14
00:00:47,960 --> 00:00:54,770
Otherwise you can't use J as X in that file because keep in mind J as X is translated to react create

15
00:00:54,800 --> 00:01:00,070
element and then here I have my new goal component here.

16
00:01:00,110 --> 00:01:02,750
We could accept proper spot as long as we don't need them.

17
00:01:02,750 --> 00:01:04,310
We don't have to.

18
00:01:04,310 --> 00:01:09,690
And then I export new goal now in app class.

19
00:01:09,760 --> 00:01:13,850
I want to render new goal so I will import new goal.

20
00:01:13,900 --> 00:01:19,620
Again the name here is up to you but it should start with a capital starting character and I import

21
00:01:19,620 --> 00:01:26,860
is from components new goal new goal and then here we can rendered is above our goal list let's say

22
00:01:27,100 --> 00:01:28,290
like that.

23
00:01:28,390 --> 00:01:34,930
Now it wouldn't work because new goal is not yet valid react component because it's a function right

24
00:01:34,930 --> 00:01:40,290
now but it's not a function that works as a react component because it's not doing one crucial thing.

25
00:01:40,540 --> 00:01:48,550
It's not returning to is X so let's return some J is X here and there to keep things simple all at form

26
00:01:49,180 --> 00:01:57,270
and in that form I'll add a input field type text self closing element in regular H2 email.

27
00:01:57,270 --> 00:02:03,810
This doesn't have to be self closing in J is X it does have to be self closing and then a button which

28
00:02:03,810 --> 00:02:04,530
is of type.

29
00:02:04,620 --> 00:02:13,090
Submit where I say at goal a very simple form and if we now save that you should see it here.

30
00:02:13,100 --> 00:02:17,360
Now let's add some styling to make this look a bit prettier.

31
00:02:17,360 --> 00:02:25,130
For that I'll add a class to the form new dash goal and I'll import the new goal C as as file into the

32
00:02:25,130 --> 00:02:27,470
new goal JavaScript file.

33
00:02:27,470 --> 00:02:36,440
And then here on the New Gold Class which is added on the form I'll add a margin of 2 REM in all directions

34
00:02:36,920 --> 00:02:38,420
and text align

35
00:02:41,340 --> 00:02:44,960
center so that this looks a bit nicer.

36
00:02:46,620 --> 00:02:50,130
And now we could also style the input on the button but I don't want to spend too much time on that.

37
00:02:50,220 --> 00:02:53,730
So I will leave it the way it is now right now when you click the button by the way.

38
00:02:53,730 --> 00:02:59,340
This page will reload because right now the default browser functionality will kick in which is that

39
00:02:59,340 --> 00:03:04,320
when a button types submit is clicked in a forum a request is sent to the server that's served this

40
00:03:04,320 --> 00:03:04,880
page.

41
00:03:04,980 --> 00:03:10,380
Note it's not the behavior we want here though because here I don't want to send a request to any server

42
00:03:10,410 --> 00:03:13,230
because we're not doing anything on the server side.

43
00:03:13,230 --> 00:03:18,570
Instead I want a handle that click with JavaScript and that is the first thing I'll do here.

44
00:03:18,570 --> 00:03:23,110
Let's see how we can handle events because thus far we haven't done that.

45
00:03:23,280 --> 00:03:28,050
I want to handle the submit event of this forum here and react makes that simple.

46
00:03:28,140 --> 00:03:35,180
We can add event listeners to any element not just to the forum but to any element by adding on lowercase

47
00:03:35,220 --> 00:03:37,010
on and then the name of the event.

48
00:03:37,020 --> 00:03:42,300
Now not every event is supported on every element but here you've got the default age two male elements

49
00:03:42,300 --> 00:03:42,990
available.

50
00:03:42,990 --> 00:03:50,000
So for example on a forum element you have to submit event on submit on a button you also have on click.

51
00:03:50,070 --> 00:03:56,380
But since it's a button in a forum it's better to handled is on the form itself now what do you pass

52
00:03:56,440 --> 00:04:00,190
as a value to on submit though as a value.

53
00:04:00,190 --> 00:04:06,070
You have to pass a function that should be triggered when this event happens.

54
00:04:06,100 --> 00:04:08,740
So a pointer to a function.

55
00:04:08,740 --> 00:04:13,510
You could do this year with curly braces and then an anonymous inline function.

56
00:04:13,510 --> 00:04:14,950
But I don't like that too much.

57
00:04:14,950 --> 00:04:20,800
Instead I will create a new function here and in JavaScript you can create functions and functions.

58
00:04:20,800 --> 00:04:26,100
So instead of the new goal function which it still is in the end I can create a new function.

59
00:04:26,380 --> 00:04:30,800
I will create my ADD goal handler.

60
00:04:30,890 --> 00:04:32,060
Note the naming is up to you.

61
00:04:32,070 --> 00:04:38,320
But I liked his naming of having handler at the end of my function name.

62
00:04:38,400 --> 00:04:43,150
If it is a function that is triggered upon some event.

63
00:04:43,270 --> 00:04:44,460
So this is a function.

64
00:04:44,460 --> 00:04:49,960
In this case I'll again use an arrow function which is not a must do but I will use only arrow functions

65
00:04:49,960 --> 00:04:52,210
here and on submit.

66
00:04:52,220 --> 00:04:54,710
Now can point at ad goal handler.

67
00:04:54,940 --> 00:04:57,730
Don't execute it here so don't add parentheses.

68
00:04:57,790 --> 00:05:04,330
Instead you just want to point at the function so that the browser and react in a common effort can

69
00:05:04,330 --> 00:05:08,950
execute this function for you when the submit event occurs.

70
00:05:08,950 --> 00:05:16,390
Note This function will get an event object and event parameter passed and automatically by react and

71
00:05:16,400 --> 00:05:23,440
there for example we can call prevent default which prevents the browser default of sending a request

72
00:05:23,440 --> 00:05:28,630
to some backend which it shouldn't do here because we're not handling this on the server side here.

73
00:05:28,930 --> 00:05:35,740
Our server only serves that single index HCM I'll file it does not have any logic to handle any submissions.

74
00:05:35,740 --> 00:05:42,400
Instead I want to handle it here in javascript on the front end in my react application and for the

75
00:05:42,400 --> 00:05:49,900
moment I'll ignore what the user entered here and I will simply instead create a dummy goal and I want

76
00:05:49,900 --> 00:05:58,230
to pass that dummy goal to app J.S. and add it to my core Scholes here so that it then is rendered here.

77
00:05:58,270 --> 00:06:07,970
Now step by step we can create a new dummy goal of course in that article handler by adding a new goal.

78
00:06:07,970 --> 00:06:11,210
Constant here which is a childhood object.

79
00:06:11,240 --> 00:06:15,590
The idea here could be a random number with math random.

80
00:06:15,590 --> 00:06:21,350
This of course is not really a unique idea but it's good enough and I'll convert it to a string.

81
00:06:21,350 --> 00:06:27,020
It's good enough for our demo application here I mean and then the text here later will be the text

82
00:06:27,020 --> 00:06:30,270
user entered here for now just some dummy text.

83
00:06:30,290 --> 00:06:32,510
Mind you go.

84
00:06:32,560 --> 00:06:38,950
So now we have the new goal here and of course we can console lock that to see that everything up to

85
00:06:38,950 --> 00:06:40,450
this point works.

86
00:06:40,450 --> 00:06:43,890
So if we save that we see our form here.

87
00:06:44,030 --> 00:06:49,300
And if I click on Add go the page will not reload but instead we see this dummy goal here and I could

88
00:06:49,300 --> 00:06:55,490
create of course multiple goals but at the moment they're not added to this list to add them to the

89
00:06:55,490 --> 00:06:55,910
list.

90
00:06:55,910 --> 00:07:01,470
We now need to get that goal out of the new goal component to the app component.

91
00:07:01,520 --> 00:07:08,500
Now before we learn we can pass data around the props but that was from app to goal list.

92
00:07:08,540 --> 00:07:12,780
So to a lower level component a component which is included in app.

93
00:07:13,010 --> 00:07:19,460
Now it's the other direction we want to pass data from new goal to the parent component so to the component

94
00:07:19,460 --> 00:07:21,550
which includes the new goal component.

95
00:07:21,560 --> 00:07:22,710
How does this work.
