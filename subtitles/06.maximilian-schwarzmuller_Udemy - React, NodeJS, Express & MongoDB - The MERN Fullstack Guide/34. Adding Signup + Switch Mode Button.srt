1
00:00:02,290 --> 00:00:04,000
So let's implement this switch.

2
00:00:04,000 --> 00:00:11,250
But now and for dead at the bottom of the form below to submit button and actually outside of the forum.

3
00:00:11,360 --> 00:00:18,560
I'll add a new button with an inverse style which I find to look quite nice where I will say switch

4
00:00:18,560 --> 00:00:23,030
to sign up and upon a click here.

5
00:00:23,090 --> 00:00:28,660
I want to execute a switch mode handler function lets say the name is up to you.

6
00:00:28,730 --> 00:00:32,430
We have to add that function to our functional component now.

7
00:00:32,600 --> 00:00:38,480
So here I'll add this new switch mode handler function and the idea there is of course that we do just

8
00:00:38,480 --> 00:00:43,580
what the name implies we switch our mode off that for him to switch a mode.

9
00:00:43,580 --> 00:00:48,830
We need to manage a mode and that has to be a state because when we change it our component has to be

10
00:00:48,830 --> 00:00:52,340
rendered or at least parts of it will need to be updated and react.

11
00:00:52,340 --> 00:00:54,370
We'll figure out which parts that are.

12
00:00:54,620 --> 00:00:59,900
So let's import used state from react to manage some state and then here I'll set it up.

13
00:00:59,930 --> 00:01:07,220
Use state and I'll name this state is log in and set is log in because we even are in logging mode or

14
00:01:07,220 --> 00:01:10,580
not in initially let's say we are in log in mode.

15
00:01:10,580 --> 00:01:17,810
So initially this is true we can also name it is log in mode and set is logging mode to be even clearer

16
00:01:17,930 --> 00:01:21,190
about what we're managing here.

17
00:01:21,230 --> 00:01:29,450
So now in switch mode handler I want our well switched at mode so we'll set is log in mode to what it

18
00:01:29,450 --> 00:01:30,380
was not.

19
00:01:30,410 --> 00:01:37,340
So I will inverted for Dad I'll use the function form here and get my preferred mode and set a new mode

20
00:01:37,340 --> 00:01:38,990
to not preferred mode.

21
00:01:38,990 --> 00:01:44,570
This is this function form of updating the state which we should use if our new state update is based

22
00:01:44,570 --> 00:01:45,860
on the previous state.

23
00:01:45,860 --> 00:01:48,680
And it basically inverts it by adding this exclamation mark.

24
00:01:48,680 --> 00:01:52,450
So if it was true it's now false and the other way around.

25
00:01:52,670 --> 00:01:54,680
Now we can use this log in mode.

26
00:01:54,680 --> 00:01:59,410
This is log in mode constant now which will change.

27
00:01:59,530 --> 00:02:02,530
For example here on the button it shouldn't always say log in.

28
00:02:02,560 --> 00:02:06,830
Instead I want to check if we are in log in mode in which case I say log in.

29
00:02:06,850 --> 00:02:08,520
Otherwise I'd say sign up.

30
00:02:08,680 --> 00:02:11,060
Also here I want to switch to.

31
00:02:11,080 --> 00:02:15,380
Well that depends if I'm in log in mode I want to switch to sign up.

32
00:02:15,490 --> 00:02:20,170
If I'm in sign up mode which is the opposite of logging mode I want to switch to log in.

33
00:02:20,200 --> 00:02:23,480
So we want to output some text dynamically here.

34
00:02:23,530 --> 00:02:29,590
In addition I also want to render a brand new input if we are in sign up mode because then I also need

35
00:02:29,590 --> 00:02:31,520
to fetch the user name.

36
00:02:31,660 --> 00:02:38,440
So here if we're not in logging mode which is to sign up mode therefore I will render a brand new input

37
00:02:38,440 --> 00:02:41,980
here and displace the element is an input.

38
00:02:41,980 --> 00:02:53,460
The I.D. is name the type is text and the label is name or your name whatever you prefer and validators

39
00:02:53,460 --> 00:02:54,090
here.

40
00:02:54,120 --> 00:03:01,350
Well here I will just required us so we'll actually import a new validator validator require and use

41
00:03:01,350 --> 00:03:04,560
dat down there in my validators array 40 name.

42
00:03:04,590 --> 00:03:16,520
So here I'll just execute validate or require the error text here can simply be Please enter a name

43
00:03:17,550 --> 00:03:26,390
and on change of course points at my good old Input handler and every safeties we see this button.

44
00:03:26,400 --> 00:03:32,910
And if I click it I get an error and we get an error because on input is not a function yeah because

45
00:03:32,910 --> 00:03:36,900
it's on input here and not on change.

46
00:03:36,910 --> 00:03:40,850
So now this works and we can switch between these two modes.

47
00:03:41,050 --> 00:03:47,680
But what you'll notice is that our form will not work correctly if I enter email and a password it's

48
00:03:47,680 --> 00:03:51,550
not valid here and also not in log in mode.

49
00:03:51,550 --> 00:03:59,140
So basically my button never unlocks here and that makes sense because what we just did is we added

50
00:03:59,140 --> 00:04:03,800
a new input which sometimes exists and sometimes this does not.

51
00:04:03,970 --> 00:04:09,730
And when we switch to sign up mode in the end this becomes part of the forum.

52
00:04:09,760 --> 00:04:15,880
So if I reload for example in log in mode I can enable the button but now it's all enabled if I switch

53
00:04:15,880 --> 00:04:21,090
to sign up so basically were not correctly considering this new field here.

54
00:04:21,160 --> 00:04:26,800
The validation inside the input works but the form validation is not wired up correctly when we switch

55
00:04:26,800 --> 00:04:27,610
to mode.

56
00:04:27,610 --> 00:04:33,360
So we have to make sure we do that to make sure we do that.

57
00:04:33,500 --> 00:04:40,460
We have to go back to the switch mode handler and deer in the end we want to set our forum data now

58
00:04:40,460 --> 00:04:44,730
not to reflect some initial state in our inputs down there.

59
00:04:44,780 --> 00:04:51,890
Those will initially always be empty but to correctly update our behind the scenes form data when we

60
00:04:51,980 --> 00:04:53,340
switched a mode.

61
00:04:53,570 --> 00:04:59,060
And keep in mind that in our hook when set data is dispatched which happens when we call set form data

62
00:04:59,390 --> 00:05:01,820
we do is at the input in the form validity data.

63
00:05:02,060 --> 00:05:07,250
So we do update the form data whenever we call set form data which makes sense if you have a look at

64
00:05:07,250 --> 00:05:08,710
the name of that function.

65
00:05:08,750 --> 00:05:14,500
So we want to call that whenever we switch to mode to bring it up to date with the available inputs.

66
00:05:14,540 --> 00:05:21,960
So here I'll check if we're not in is log in mode let's say so if we are signing up in which case I

67
00:05:21,960 --> 00:05:27,630
want to call set for him data now set for data is not available right now we need to extracted from

68
00:05:27,630 --> 00:05:33,200
use form as a third element here then we can call set form data here.

69
00:05:33,240 --> 00:05:38,820
Now here in set form data I want to set my form data for the case that we're not in log in mode.

70
00:05:38,820 --> 00:05:47,300
Now keep in mind this year runs before we switched a mode so if you're not in logging mode we are in

71
00:05:47,300 --> 00:05:53,030
sign up mode but since switch mode handler executes and we're in that handler it means we're now switching

72
00:05:53,030 --> 00:06:00,830
to log in mode so to update our formatted correctly we need to drop the name field because we're coming

73
00:06:00,830 --> 00:06:03,890
from sign up mode and we're going back to logging mode.

74
00:06:03,890 --> 00:06:08,850
So the form validity depends on the validity of the email and the password field.

75
00:06:08,870 --> 00:06:10,680
So here I'll check form state inputs.

76
00:06:10,700 --> 00:06:14,260
Email is valid and form state

77
00:06:16,850 --> 00:06:17,630
inputs.

78
00:06:17,660 --> 00:06:23,680
Password is valid if both are valid the future form will be valid because we're switching to logging

79
00:06:23,720 --> 00:06:28,040
mode and there we only have these two fields now here for the inputs.

80
00:06:28,040 --> 00:06:32,860
I simply want to retain the values I have for email and password and drop devalue.

81
00:06:32,870 --> 00:06:38,210
That was stored for name so we can simply said Name two undefined here.

82
00:06:38,210 --> 00:06:47,450
For example to drop it now else in the else branch where we are in log in mode but we are executing

83
00:06:47,450 --> 00:06:51,220
switch mode handler so we are moving to sign up mode.

84
00:06:51,380 --> 00:06:58,850
In this scenario here we want to call set form data and the form will definitely be false.

85
00:06:58,850 --> 00:07:03,590
The validity of the form will definitely be false because we just edit the name and put field and effort

86
00:07:03,590 --> 00:07:05,370
can't be valid.

87
00:07:05,390 --> 00:07:13,280
Now I want to retain my current form state input state here so my current values for email and password

88
00:07:13,460 --> 00:07:17,570
but I want to add a new name field now and forward a name field.

89
00:07:17,600 --> 00:07:23,150
The value initially will be empty and is valid they offer will be false which is the reason why the

90
00:07:23,150 --> 00:07:25,600
overall form validity will be false.

91
00:07:25,940 --> 00:07:32,000
And with that recall set forum data and then all the set is log mode to switch to mode visually and

92
00:07:32,000 --> 00:07:36,920
hence our UI and the behind the scenes form should be updated correctly.

93
00:07:36,920 --> 00:07:42,470
Now one important note in the end of course we are performing multiple state changes here set for and

94
00:07:42,470 --> 00:07:47,450
data will in the end change some state and re rendered a component and set is log and mode will do the

95
00:07:47,450 --> 00:07:49,670
same react as smart.

96
00:07:49,760 --> 00:07:54,620
If you have multiple state changes in the same synchronous code block so in the same function which

97
00:07:54,620 --> 00:08:00,500
execute synchronicity so all the steps executed immediately after each other it will batch them to gather

98
00:08:00,590 --> 00:08:06,620
and perform one single state update and one single rerun or cycle to a wide unnecessary render cycles

99
00:08:07,720 --> 00:08:13,480
was that if we now safeties let's see this let's enter something here some valid e-mail address and

100
00:08:13,480 --> 00:08:18,880
a valid password and switch to sign up you'll see now this button is disabled which makes sense because

101
00:08:18,880 --> 00:08:25,090
we edit the name which is empty go back to log in it's enabled again unless I have something invalid

102
00:08:25,090 --> 00:08:31,110
here which is when it crashes so dad is something we'll need to tweak let's see what's going wrong here.

103
00:08:31,120 --> 00:08:38,840
Cannot read property is valid of undefined in our form hook and yet that makes sense because here when

104
00:08:38,840 --> 00:08:43,840
we switched from sign up mode back to log in I said name to undefined to drop it.

105
00:08:43,880 --> 00:08:49,870
Well that's nice but of course I always have to copy my existing fields otherwise I also lose them.

106
00:08:49,970 --> 00:08:54,730
So we need to copy all the fields and then just overwrite name to be undefined.

107
00:08:54,860 --> 00:08:57,390
Now even with that changed apply though.

108
00:08:57,530 --> 00:09:05,360
If we go back and I switch to sign up enter nothing here and go back to log in you'll see this still

109
00:09:05,360 --> 00:09:09,980
crashes with a similar error and the reason for that is related.

110
00:09:09,980 --> 00:09:12,880
Now I do keep all my old inputs.

111
00:09:12,890 --> 00:09:13,940
Now that's great.

112
00:09:13,940 --> 00:09:20,420
But he's still set name to undefined so the property is technically still part of the form object.

113
00:09:20,420 --> 00:09:27,850
The value of it Justice undefined but since it still is part in the form look in the input change case.

114
00:09:27,860 --> 00:09:34,520
When I go through all my inputs I still of course find this name input as I input the value justice

115
00:09:34,610 --> 00:09:41,960
undefined but the property is still there and therefore I still try to access is valid on the property.

116
00:09:41,960 --> 00:09:47,480
There are various solutions for dead ones illusions that we add one extra if clause here in the for

117
00:09:47,480 --> 00:09:57,410
loop and we check if state inputs 40 given input I.D. if data is true of the or to be precise by adding

118
00:09:57,440 --> 00:10:05,150
exclamation mark here if it is false see which means is it undefined if it is undefined then I continue

119
00:10:05,150 --> 00:10:05,990
here.

120
00:10:05,990 --> 00:10:11,420
Now what does continue do continue basically tells javascript that we don't continue with this iteration

121
00:10:11,420 --> 00:10:14,350
of the for loop and instead we go to the next iteration.

122
00:10:14,360 --> 00:10:16,670
So do the next property in this case.

123
00:10:16,670 --> 00:10:21,440
So we skipped this property if it is undefined because then I don't need to validated and I don't want

124
00:10:21,440 --> 00:10:27,980
to adjust my form validity and if we now safe does and we go back I can switch to sign up and switch

125
00:10:27,980 --> 00:10:33,260
back here and if I now enter something here you see this works just fine.

126
00:10:33,380 --> 00:10:39,260
And if I now go here and her Max that's looking good.

127
00:10:39,260 --> 00:10:43,500
Remove the password here it's invalid switch back enter it back.

128
00:10:43,640 --> 00:10:45,290
So that is looking good.

129
00:10:45,290 --> 00:10:52,400
This looks now like it works and that fixes the issue of us switching modes and changing the form therefore

130
00:10:52,880 --> 00:10:53,750
never click submit.

131
00:10:53,750 --> 00:10:59,300
Here we see email name and password being submitted with the data we entered for go back log in and

132
00:10:59,330 --> 00:11:00,970
click log in.

133
00:11:01,040 --> 00:11:05,060
We see name is undefined which is fine but email and password is there.

134
00:11:05,120 --> 00:11:10,700
So this seems to work and this is how we could implement this with different modes between which we

135
00:11:10,700 --> 00:11:14,910
switch and different form data which we manage for those modes.

136
00:11:14,960 --> 00:11:15,980
Behind the scenes.
