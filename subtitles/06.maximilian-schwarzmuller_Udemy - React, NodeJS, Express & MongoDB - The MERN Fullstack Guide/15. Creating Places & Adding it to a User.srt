1
00:00:02,320 --> 00:00:09,250
To create a new place and to add it to user room we have to go to our places controllers now right here.

2
00:00:09,310 --> 00:00:14,320
First we have to import our user model here because as you want to interact with the user well we kind

3
00:00:14,320 --> 00:00:16,060
of have to establish that connection.

4
00:00:16,120 --> 00:00:27,070
So let's import the user here and this is located in dot dot slash models slash user.

5
00:00:27,070 --> 00:00:29,840
So with that we can use our user schema.

6
00:00:29,860 --> 00:00:36,890
Now we can go down to our create police content right here and this is where we have to change some

7
00:00:36,890 --> 00:00:37,570
things.

8
00:00:37,580 --> 00:00:41,740
One thing that will change is the data type of The Creator a field.

9
00:00:41,750 --> 00:00:43,600
Previously it was a simple string.

10
00:00:43,610 --> 00:00:49,780
Now since we will establish a relation between places and users it'll be a special type which Mongolia

11
00:00:49,900 --> 00:00:50,700
uses to manage.

12
00:00:50,700 --> 00:00:58,100
I.D. wise is the case because we now store a real Mongo DP I.D. in this field not any dummy string anymore

13
00:00:58,550 --> 00:01:01,500
but generally our created place content is fine.

14
00:01:01,610 --> 00:01:07,630
Things changed down here though because instead of immediately saving the place we have to check whether

15
00:01:07,640 --> 00:01:13,400
the user I.D. be provided exists already because only we have a user created with the corresponding

16
00:01:13,400 --> 00:01:13,820
I.D..

17
00:01:14,030 --> 00:01:17,810
We should be allowed to create a new place for that.

18
00:01:17,810 --> 00:01:24,910
I'll create a new variable and name it user and I like and wrap the following code in a try catch block.

19
00:01:24,950 --> 00:01:26,780
It's again the same logic we had before.

20
00:01:26,780 --> 00:01:29,720
So in case we have any general error we should catch this.

21
00:01:29,810 --> 00:01:34,400
Therefore we can actually get started with the catch block here and storage and a constant again.

22
00:01:35,710 --> 00:01:43,920
Which is a new HP error here stating that creating place failed.

23
00:01:43,920 --> 00:01:53,070
Please try again with a 500 error code and I'll return next code here.

24
00:01:53,100 --> 00:01:54,130
So that's what it did before.

25
00:01:54,120 --> 00:01:59,010
So that's just some general error but now the question is what do we actually want to do with our user

26
00:01:59,010 --> 00:01:59,370
here.

27
00:01:59,520 --> 00:02:06,300
Well user should be equal to user dot find by idea creator because what we want to do right here is

28
00:02:06,510 --> 00:02:13,140
we want to access degrade the property of our users and check whether the I.D. we have for our log in

29
00:02:13,140 --> 00:02:15,350
user is already stored in here.

30
00:02:15,570 --> 00:02:18,570
So we want to check if the idea of the user is existing.

31
00:02:18,570 --> 00:02:20,100
That's the code we have right here.

32
00:02:20,100 --> 00:02:24,750
And as we are in an asynchronous task we have to add a weight right here once again.

33
00:02:24,850 --> 00:02:29,730
So we want to check whether the idea of the logged in user is existing already in case we have a general

34
00:02:29,730 --> 00:02:30,480
problem.

35
00:02:30,480 --> 00:02:35,640
We catch it right here but in case our check is successful.

36
00:02:35,640 --> 00:02:40,860
So in case we can check the idea of the creators well then we just wanna make sure that if the user

37
00:02:40,860 --> 00:02:45,890
is not existing so if the user is not in our database.

38
00:02:46,060 --> 00:02:56,670
Well then again we have an error stating that we could not find user 4 provided ideas.

39
00:02:58,960 --> 00:03:01,760
Aero coach would be four or four here.

40
00:03:01,800 --> 00:03:07,830
Don't forget to return the arrow once again to stop our code execution.

41
00:03:07,840 --> 00:03:11,380
We could also console lock the user here if we want to.

42
00:03:11,380 --> 00:03:12,360
That's optional though.

43
00:03:12,370 --> 00:03:16,060
But let's maybe add it here in our code.

44
00:03:16,240 --> 00:03:20,140
But if this user is existing well then we can do two things now.

45
00:03:20,170 --> 00:03:24,520
First we can store or create that new document with our new place.

46
00:03:24,550 --> 00:03:29,920
And second we can add the place added to the corresponding user to do this.

47
00:03:29,920 --> 00:03:34,160
We have to replace this code here or we factor this code here.

48
00:03:34,160 --> 00:03:39,400
The catch lock is fine but here try this is what we have to work on to do that.

49
00:03:39,400 --> 00:03:46,780
We need to be able to kind of execute different or multiple operations which are not directly related

50
00:03:46,780 --> 00:03:47,730
to each other.

51
00:03:47,890 --> 00:03:50,480
And if one of these operations fails.

52
00:03:50,500 --> 00:03:57,940
So if either creating the place fails or if storing the idea of the place in our user documents.

53
00:03:57,950 --> 00:04:03,610
So if one of these operations fails independently from each other then we want to make sure to undo

54
00:04:03,670 --> 00:04:04,680
all operations.

55
00:04:04,690 --> 00:04:09,100
So basically to throw this error without changing anything in the documents so that's important thing

56
00:04:09,100 --> 00:04:10,510
we want to do two things.

57
00:04:10,510 --> 00:04:15,910
And only if both things succeed we want to continue and we want to change our documents to do that.

58
00:04:15,910 --> 00:04:22,120
We need to use transactions and sessions that transactions simply does what I just said the transaction

59
00:04:22,120 --> 00:04:28,780
allows you to perform multiple operations in isolation of each other and to undo these and the transactions

60
00:04:28,900 --> 00:04:32,200
are basically built on so-called sessions.

61
00:04:32,200 --> 00:04:35,950
So to work with these transactions we first have to start a session.

62
00:04:35,950 --> 00:04:42,640
Then we can initiate the transaction and once the transaction is successful the session is finished

63
00:04:42,820 --> 00:04:44,920
and these transactions are committed.

64
00:04:44,980 --> 00:04:51,150
So with that our place is created and De Place ready stored in our users document.

65
00:04:51,190 --> 00:04:52,660
Sounds a bit complicated again.

66
00:04:52,720 --> 00:04:58,420
Let's do it step by step now and you'll see it's actually quite straightforward process what we first

67
00:04:58,420 --> 00:05:05,680
need is a new constant let's call it sash maybe this is basically our current session that starts when

68
00:05:05,680 --> 00:05:11,170
we want to create this new place for that we have to add a weight again we are still in an asynchronous

69
00:05:11,170 --> 00:05:22,160
task here and we have to refer to the start session method Mongoose provides as I said with the session

70
00:05:22,160 --> 00:05:29,960
here we can now also start our transaction so in our current session we want to start the transaction

71
00:05:30,200 --> 00:05:36,530
another method we can use here and with that we can now tell Mongoose what we want to do here what we

72
00:05:36,530 --> 00:05:42,450
want to do here is we want to make sure that our created place should be saved right.

73
00:05:42,470 --> 00:05:50,270
We want to save it in the database and as an argument we have to provide the session property and refer

74
00:05:50,270 --> 00:05:55,520
to our current sessions or a session that is currently running with that we will create a new place

75
00:05:55,520 --> 00:06:02,020
and automatically create the unique idea for our place here and saving.

76
00:06:02,040 --> 00:06:06,160
We learn that already is of course an asynchronous task therefore make sure to add a weight here.

77
00:06:07,380 --> 00:06:08,630
So this was part 1.

78
00:06:08,640 --> 00:06:14,970
Now we store the place and now with the place being created we need to make sure that the place idea

79
00:06:15,270 --> 00:06:18,410
is also added to our user.

80
00:06:18,410 --> 00:06:23,890
For that we can refer to our user here and now say user dot places right.

81
00:06:23,910 --> 00:06:26,240
We want to access our places property.

82
00:06:26,250 --> 00:06:34,140
And here we want to push so to add basically the created place pusher is not the standard push but you

83
00:06:34,140 --> 00:06:41,370
can use on any javascript array by the way instead this is a method used by Mongoose which kind of allows

84
00:06:41,370 --> 00:06:46,670
Mongoose to behind the scene establish the connection between the two models we are referring to here

85
00:06:46,680 --> 00:06:54,360
so to say very important here behind the scenes Mongo DP grabs the created place a d That's an integrated

86
00:06:54,360 --> 00:07:00,570
Mongoose feature here and adds it to the place feed off the user so it only adds the places idea that's

87
00:07:00,570 --> 00:07:06,930
important that the stage moves that we store the place we added the places idea to our user what's missing

88
00:07:06,930 --> 00:07:15,210
now is of course another asynchronous task we have to save our newly updated user now and again this

89
00:07:15,240 --> 00:07:23,180
updated user should again be part of our current session that we are referring to and only once all

90
00:07:23,190 --> 00:07:28,200
these tasks are successful so we could create the place we could at the place D and we could save the

91
00:07:28,200 --> 00:07:37,230
user well then we want to make sure that this session commits the trends action right here another asynchronous

92
00:07:37,230 --> 00:07:44,820
task so don't forget to add a weight and just to make this clear here only at this point the changes

93
00:07:44,820 --> 00:07:50,230
are really saved in the database if anything would have gone wrong in the tasks that are part of the

94
00:07:50,230 --> 00:07:56,060
session and transaction all changes would have been rolled back automatically by Mongo TB and that's

95
00:07:56,070 --> 00:07:56,730
it actually.

96
00:07:56,730 --> 00:08:01,800
With that we use the session and the transaction for all these tasks and only if this is successful

97
00:08:01,950 --> 00:08:08,220
then the place will be created and the user will be updated and just to give you some examples when

98
00:08:08,220 --> 00:08:15,000
this error code could occur either our database server is down or something related to that or database

99
00:08:15,000 --> 00:08:15,870
validation fails.

100
00:08:16,290 --> 00:08:21,580
So these are two cases when things could go wrong here the response can stay the way it is.

101
00:08:21,840 --> 00:08:26,970
There is one important thing we have to know Don because so far when we created a new user or a new

102
00:08:26,970 --> 00:08:32,640
place and we didn't have a collection de collection was created automatically in Mongolia IBM for a

103
00:08:32,640 --> 00:08:34,530
transaction is this different here.

104
00:08:34,530 --> 00:08:36,750
If we don't have an existing collection.

105
00:08:36,750 --> 00:08:38,700
So in our case you want to create a new place.

106
00:08:38,700 --> 00:08:41,240
This means we have to create a police collection.

107
00:08:41,260 --> 00:08:46,740
Remember here police chiefs we have placed this means police says without the capital P It would be

108
00:08:46,740 --> 00:08:48,060
our collection name.

109
00:08:48,060 --> 00:08:54,410
So we have to create this collection manually you know because if you go to our Mongol TB database you

110
00:08:54,410 --> 00:09:01,880
see we have two places database that's a database name but this database only contains one collection.

111
00:09:02,150 --> 00:09:07,130
Therefore we have to hit the plus right here and now add the collection name.

112
00:09:07,130 --> 00:09:13,030
Places like this and press create this make sure our transaction is successful.

113
00:09:13,040 --> 00:09:18,140
As I said this is only required if we don't have the collection created already.

114
00:09:18,140 --> 00:09:23,540
With that let's go back to our code and make sure we save our places controllers our police chiefs and

115
00:09:23,570 --> 00:09:29,030
our user j ust file and of course that our development server is running.

116
00:09:29,270 --> 00:09:36,620
And if we now go to our database to users here we can all first delayed our two existing users

117
00:09:40,360 --> 00:09:45,430
and write their to start this whole thing from scratch.

118
00:09:45,440 --> 00:09:55,500
Now let's go to postman create a new post request here slash users slash sign up to create a new user

119
00:09:55,560 --> 00:10:00,940
we need the body raw data and Jason.

120
00:10:01,130 --> 00:10:11,950
And now we need to provide our name let's say menu here then we have to provide our email which could

121
00:10:11,950 --> 00:10:22,240
be test at test dot com and we need to provide our user password for the newly generated user here let's

122
00:10:22,240 --> 00:10:32,590
use testers again with that if I'll hit send we should see that the user he's created.

123
00:10:32,590 --> 00:10:37,970
We see we have an empty array for the places as this new user doesn't have any places at the moment.

124
00:10:38,110 --> 00:10:39,900
And we see the idea right here.

125
00:10:39,900 --> 00:10:48,160
And if we now go back to our database and reload we can also see that the user was created right there.

126
00:10:48,240 --> 00:10:55,260
Although if the object added here let's copy this I.D. because now we will create a new place and here

127
00:10:55,410 --> 00:11:03,390
as I said before we have to copy and paste this user I.D. to allocate this to a specific user.

128
00:11:03,390 --> 00:11:05,540
This will be changed in the authentication part.

129
00:11:05,550 --> 00:11:07,810
I repeat that don't forget about that.

130
00:11:07,860 --> 00:11:11,700
It's just a dummy solution at this stage of the project.

131
00:11:11,700 --> 00:11:18,900
So back in postmen we have to create another request another post request to localize 5000.

132
00:11:18,990 --> 00:11:24,870
But this time not users but simply places we need.

133
00:11:24,870 --> 00:11:32,320
Again the body and raw and Jason format here and now which properties do we need.

134
00:11:32,500 --> 00:11:40,750
We need the title again and let's stick to the Empire State Building here.

135
00:11:43,100 --> 00:11:47,210
We need a description.

136
00:11:47,210 --> 00:11:51,000
Again a very famous building.

137
00:11:51,100 --> 00:11:55,990
We need to address I'll add it in a few seconds.

138
00:11:55,990 --> 00:12:01,320
Let me first copy paste our Creator idea here.

139
00:12:01,330 --> 00:12:04,250
This one's idea of the user we just created.

140
00:12:04,360 --> 00:12:09,640
And now let me quickly grab the address of the Empire State Building and again using Google Maps for

141
00:12:09,640 --> 00:12:10,210
that.

142
00:12:10,210 --> 00:12:13,490
Here we go create tur by the way.

143
00:12:13,570 --> 00:12:14,790
So missing the a.

144
00:12:15,010 --> 00:12:18,460
Not a properties look fine with that if we had sent.

145
00:12:18,460 --> 00:12:28,310
Now we get back an error and I think I know why to be honest because while we are using Mongoose here

146
00:12:28,400 --> 00:12:31,280
right and up here We didn't import it to our file.

147
00:12:31,280 --> 00:12:33,070
Well this can of course not work.

148
00:12:33,070 --> 00:12:37,120
So let's quickly add Mongoose here save this.

149
00:12:37,130 --> 00:12:42,050
And if you now go back to postmen and again hit send I think this should work.

150
00:12:42,530 --> 00:12:42,980
Yeah.

151
00:12:43,070 --> 00:12:44,210
This looks good.

152
00:12:44,210 --> 00:12:45,910
Now we created this new place.

153
00:12:45,920 --> 00:12:47,600
So this is de Place idea.

154
00:12:47,720 --> 00:12:53,510
And on here we also get back our Creator ideas and if we have a look at Mongolia be once again in our

155
00:12:53,510 --> 00:12:54,730
places collection.

156
00:12:54,890 --> 00:13:01,880
We can also see that the place was created successfully also with the place I did and the creator idea.

157
00:13:02,060 --> 00:13:06,290
And if I remember that a five at the end that's the idea of the place.

158
00:13:06,440 --> 00:13:10,630
And if we check now our users will see we have the area right here.

159
00:13:10,760 --> 00:13:13,250
And if we click onto this area you can see a five.

160
00:13:13,250 --> 00:13:16,850
At the end this is the idea of our place.

161
00:13:16,850 --> 00:13:18,120
So this seems to work fine.

162
00:13:18,140 --> 00:13:24,530
Let's not see what happens if we enter a wrong user I.D. for that we can just change the seven here

163
00:13:24,560 --> 00:13:26,290
to a six for example.

164
00:13:26,330 --> 00:13:31,330
And if we had send we get back could not find user four provided ideas.

165
00:13:31,370 --> 00:13:32,680
So this works fine.

166
00:13:32,690 --> 00:13:34,940
This means we can only create a new place.

167
00:13:34,940 --> 00:13:41,880
Now if the user I.D. is existing and this was exactly the goal of this operation here what is missing

168
00:13:41,880 --> 00:13:44,620
now though is of course the option to also delete the place.

169
00:13:44,660 --> 00:13:47,690
And if we delete the place we kind of have this similar logic.

170
00:13:47,690 --> 00:13:53,510
So we want to delete the actual place and we want to delete the idea of this place in the document off

171
00:13:53,510 --> 00:13:55,100
the corresponding user.

172
00:13:55,100 --> 00:13:56,960
Let's implement this as a next step.
