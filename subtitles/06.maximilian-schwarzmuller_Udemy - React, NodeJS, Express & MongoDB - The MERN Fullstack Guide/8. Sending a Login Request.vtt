WEBVTT
1
00:00:02.230 --> 00:00:03.980
So let's continue our work.

2
00:00:04.090 --> 00:00:06.410
We have our sign up functionality.

3
00:00:06.490 --> 00:00:09.140
Now let's also make sure our users can log in.

4
00:00:09.310 --> 00:00:14.800
Of course keep in mind that at the moment we have no real log in if we check the back end code here

5
00:00:15.220 --> 00:00:22.840
in log in in the end what we do have is just a dummy logging where we check whether that user exists

6
00:00:22.870 --> 00:00:25.920
and whether that password equals to one the database.

7
00:00:26.050 --> 00:00:32.160
But all we send back is just a message which of course is not really anything that would help us logging

8
00:00:32.160 --> 00:00:33.340
a user in for real.

9
00:00:33.370 --> 00:00:39.130
Because besides this message we're not doing anything that would ensure that we differentiate between

10
00:00:39.130 --> 00:00:45.330
logged in users and not locked in users will worry about a real authentication flow later in the course.

11
00:00:45.340 --> 00:00:49.510
For now let's make sure we can at least trigger this dummy round here.

12
00:00:49.510 --> 00:00:56.980
So on the front and code when we are in logging mode I basically want to replicate this functionality

13
00:00:57.130 --> 00:01:03.820
which means we can actually move set is loading out of the F block and always set this no matter which

14
00:01:03.820 --> 00:01:12.220
branch we trigger and then we can wrap this try catch block here and move that into is logging mode

15
00:01:12.400 --> 00:01:17.620
as well so into this first if branch we could all wrap the entire if statement with try catch if we

16
00:01:17.620 --> 00:01:18.560
wanted to.

17
00:01:18.580 --> 00:01:24.600
I will separate it here so that we can differentiate the two different pieces more clearly.

18
00:01:24.620 --> 00:01:29.900
So now we're sending this request and of course now we're sending tests to slash log in here not to

19
00:01:29.900 --> 00:01:31.510
slash sign up.

20
00:01:31.550 --> 00:01:38.670
This is important because slash logging is the route we have here on the back end slash log in.

21
00:01:38.690 --> 00:01:39.770
So this is the request.

22
00:01:39.920 --> 00:01:46.430
It's still a POST request it still contains Jason data and it still contains some attached data.

23
00:01:46.440 --> 00:01:48.810
However no longer a name.

24
00:01:48.860 --> 00:01:55.170
Instead just email and password because what we're a log in mode we only have these two pieces of data.

25
00:01:55.400 --> 00:01:57.050
Then we passed a response.

26
00:01:57.050 --> 00:02:03.170
We check whether we have a 400 or 500 ish error code and otherwise we continue.

27
00:02:03.170 --> 00:02:06.350
Actually we don't need to log the response data anymore.

28
00:02:06.380 --> 00:02:09.660
We certainly do want to lock the user here in here.

29
00:02:09.710 --> 00:02:12.740
If we succeeded though otherwise we showed the error.

30
00:02:12.740 --> 00:02:15.860
I can also remove this console log here by the way.

31
00:02:15.920 --> 00:02:17.840
So generally this looks good.

32
00:02:17.930 --> 00:02:19.460
If we now.

33
00:02:19.550 --> 00:02:20.510
Let's give it a try.

34
00:02:21.080 --> 00:02:25.240
Let's go to authenticate and try logging in with a valid user.

35
00:02:25.250 --> 00:02:32.270
So this is the correct email I used before and my correct password difficulty log in it spins and does

36
00:02:32.270 --> 00:02:33.720
looks good.

37
00:02:33.760 --> 00:02:41.360
Now if we go back here I'll try invalid password now and it spins and I've got invalid credentials could

38
00:02:41.360 --> 00:02:49.370
not log you in if I enter let's say invalid email and a valid or invalid password doesn't matter because

39
00:02:49.370 --> 00:02:50.620
the e-mail doesn't exist.

40
00:02:50.690 --> 00:02:52.020
I also get an error.

41
00:02:52.190 --> 00:02:58.120
So this looks good to me as soon as I answer valid data here I am redirected and I would say we got

42
00:02:58.130 --> 00:03:05.810
log in down therefore we might be able to refactor some code though because we get a lot of code duplication

43
00:03:05.810 --> 00:03:06.310
here.

44
00:03:06.410 --> 00:03:13.580
We're sending our request here and here and all this state management here really is duplicated now

45
00:03:13.730 --> 00:03:14.390
for the moment.

46
00:03:14.390 --> 00:03:20.570
I'll leave it like this because the problem becomes clearer as soon as we also start sending requests

47
00:03:20.600 --> 00:03:23.120
on a different page which I'll do now.

48
00:03:23.120 --> 00:03:29.540
I now also want to send the request here on the user's page because there we need a list of users and

49
00:03:29.540 --> 00:03:33.080
therefore for now it's time to fetch such a list of users their.
