WEBVTT
1
00:00:00.007 --> 00:00:02.003
- [Frank] The Spring Security project

2
00:00:02.003 --> 00:00:04.003
is one of the most powerful abstractions

3
00:00:04.003 --> 00:00:06.007
from the perspective of the developer.

4
00:00:06.007 --> 00:00:10.001
However, it is also one of the most complex,

5
00:00:10.001 --> 00:00:13.000
considering everything that it includes.

6
00:00:13.000 --> 00:00:14.002
Throughout this course,

7
00:00:14.002 --> 00:00:16.004
we will focus on Spring Security,

8
00:00:16.004 --> 00:00:19.002
and the problems it tries to solve,

9
00:00:19.002 --> 00:00:22.004
and the complexities that it abstracts.

10
00:00:22.004 --> 00:00:25.000
In order to fully grasp the power of Spring Security,

11
00:00:25.000 --> 00:00:27.008
we first need to know where it fits in.

12
00:00:27.008 --> 00:00:31.005
Security should be tackled in a layered fashion.

13
00:00:31.005 --> 00:00:33.003
This layered security pattern

14
00:00:33.003 --> 00:00:36.008
provides you distinct focus areas to secure,

15
00:00:36.008 --> 00:00:38.008
monitor, and tune.

16
00:00:38.008 --> 00:00:41.004
Now, I'm not going to go too deep here.

17
00:00:41.004 --> 00:00:45.004
These topics can comprise several courses on their own,

18
00:00:45.004 --> 00:00:48.000
but I do want a conceptual framework so you get

19
00:00:48.000 --> 00:00:51.008
a feel of where Spring Security comes into play.

20
00:00:51.008 --> 00:00:52.006
Most often,

21
00:00:52.006 --> 00:00:56.005
the focus in this layered model starts at the lowest level.

22
00:00:56.005 --> 00:00:58.009
And that is the physical hardware.

23
00:00:58.009 --> 00:01:01.003
Hardware must be physically secured

24
00:01:01.003 --> 00:01:05.008
and uniquely identifiable to other trusted systems.

25
00:01:05.008 --> 00:01:08.006
After you plan to secure the hardware,

26
00:01:08.006 --> 00:01:10.006
you start looking at the network.

27
00:01:10.006 --> 00:01:13.004
Here we deployed Transport Layer Security,

28
00:01:13.004 --> 00:01:17.000
firewalls, network segmentation strategies like VLANs,

29
00:01:17.000 --> 00:01:19.008
and security zones, IDS systems,

30
00:01:19.008 --> 00:01:22.004
and the list goes on and on.

31
00:01:22.004 --> 00:01:24.007
We then moved to the operating systems

32
00:01:24.007 --> 00:01:28.000
where user access controls, patching policies,

33
00:01:28.000 --> 00:01:31.000
and software restrictions provide additional layers

34
00:01:31.000 --> 00:01:35.001
of security for our system as a whole.

35
00:01:35.001 --> 00:01:38.001
And finally, we look at application security.

36
00:01:38.001 --> 00:01:41.007
And this is where we focus on good coding practices,

37
00:01:41.007 --> 00:01:47.006
proper data handling, and application user access controls.

38
00:01:47.006 --> 00:01:50.000
So where does Spring Security fit in?

39
00:01:50.000 --> 00:01:53.005
It's in the application space itself.

40
00:01:53.005 --> 00:01:55.009
Spring Security is a project that provides

41
00:01:55.009 --> 00:01:59.000
amazing abstractions in the J2EE,

42
00:01:59.000 --> 00:02:02.006
now called Jakarta EE application space.

43
00:02:02.006 --> 00:02:05.005
These abstractions helps solve the various issues

44
00:02:05.005 --> 00:02:08.005
of traditional Java Enterprise security,

45
00:02:08.005 --> 00:02:11.002
like portability and vendor lock-in.

46
00:02:11.002 --> 00:02:12.009
By abstracting these topics,

47
00:02:12.009 --> 00:02:14.001
we are providing a clean

48
00:02:14.001 --> 00:02:17.003
and efficient way to provide security services.

49
00:02:17.003 --> 00:02:21.005
Spring Security isn't just for enterprise developers.

50
00:02:21.005 --> 00:02:23.006
It also provides valuable tools

51
00:02:23.006 --> 00:02:27.006
for internet-facing applications running in the JVM.

52
00:02:27.006 --> 00:02:29.009
Obviously, as a Spring project,

53
00:02:29.009 --> 00:02:33.008
it plays very nicely with the Spring framework as a whole,

54
00:02:33.008 --> 00:02:35.009
but that isn't a requirement.

55
00:02:35.009 --> 00:02:36.008
In this course,

56
00:02:36.008 --> 00:02:39.007
we will do all of our work using Spring Boot.

57
00:02:39.007 --> 00:02:41.006
But at no point should you feel

58
00:02:41.006 --> 00:02:44.002
that that either is a requirement.

59
00:02:44.002 --> 00:02:45.008
You can use Spring Security

60
00:02:45.008 --> 00:02:48.009
with traditional Spring-based WAR applications

61
00:02:48.009 --> 00:02:51.009
as well as raw Java applications.

62
00:02:51.009 --> 00:02:54.007
Most of Spring Security is designed to focus

63
00:02:54.007 --> 00:02:57.006
on authentication and authorization.

64
00:02:57.006 --> 00:02:59.005
These are often the most critical needs

65
00:02:59.005 --> 00:03:01.000
at the application level

66
00:03:01.000 --> 00:03:04.005
outside of secure coding practices themselves.

67
00:03:04.005 --> 00:03:08.008
We will focus on these topics exclusively in this course,

68
00:03:08.008 --> 00:03:12.004
but there's a lot of material in these topics themselves.

69
00:03:12.004 --> 00:03:15.008
So buckle up and let's dig into what authentication

70
00:03:15.008 --> 00:03:19.000
and authorization is really about.

