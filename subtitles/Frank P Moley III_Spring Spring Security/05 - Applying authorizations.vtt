WEBVTT
1
00:00:00.006 --> 00:00:01.007
- [Instructor] So at this point,

2
00:00:01.007 --> 00:00:04.000
all we can do is enforce logging in

3
00:00:04.000 --> 00:00:06.002
to see our secured pages,

4
00:00:06.002 --> 00:00:09.007
but we don't have an authorization in place.

5
00:00:09.007 --> 00:00:13.007
So let's change that for our simple web example.

6
00:00:13.007 --> 00:00:15.002
The first thing I want to make sure that you do

7
00:00:15.002 --> 00:00:19.000
is grab the exercise files for the start of this video,

8
00:00:19.000 --> 00:00:20.006
because I've made some changes for you

9
00:00:20.006 --> 00:00:22.008
that I want to talk about real quick.

10
00:00:22.008 --> 00:00:24.000
So in the Pom file,

11
00:00:24.000 --> 00:00:25.005
I brought in a new dependency.

12
00:00:25.005 --> 00:00:29.009
This is Thymeleaf, extras, spring security 5,

13
00:00:29.009 --> 00:00:33.009
and where we're using that is in our detailed customer.

14
00:00:33.009 --> 00:00:38.001
And what I've done is I've added an XML name space of sec

15
00:00:38.001 --> 00:00:41.003
that comes in from extra spring security

16
00:00:41.003 --> 00:00:43.004
and there's a div on the page

17
00:00:43.004 --> 00:00:47.000
that shows the orders for that customer.

18
00:00:47.000 --> 00:00:48.004
Because we are going to make it

19
00:00:48.004 --> 00:00:51.006
so that only admins can see the orders,

20
00:00:51.006 --> 00:00:54.006
I've put this sec authorized hasRole admin

21
00:00:54.006 --> 00:00:56.005
so that we don't even see that section

22
00:00:56.005 --> 00:01:00.006
unless we're an admin user.

23
00:01:00.006 --> 00:01:02.009
Now in our customer controller,

24
00:01:02.009 --> 00:01:05.001
because again, we're not going to show the data,

25
00:01:05.001 --> 00:01:07.002
there's no reason to load it.

26
00:01:07.002 --> 00:01:09.005
So I brought into our get user,

27
00:01:09.005 --> 00:01:12.004
a principle into the method signature

28
00:01:12.004 --> 00:01:15.007
and then I'm doing some information scoping on that.

29
00:01:15.007 --> 00:01:18.006
So if that user principle

30
00:01:18.006 --> 00:01:22.000
is an instance of username password authentication token,

31
00:01:22.000 --> 00:01:24.003
which is what we are using,

32
00:01:24.003 --> 00:01:26.005
I'm now creating an atomic auth,

33
00:01:26.005 --> 00:01:29.006
I'm going through and getting all of the authorities

34
00:01:29.006 --> 00:01:33.006
for that user and then looking for the role of admin.

35
00:01:33.006 --> 00:01:35.003
Again, we're dealing with authorities,

36
00:01:35.003 --> 00:01:37.008
so it's the text that we put in the database

37
00:01:37.008 --> 00:01:41.006
in the authorities table, in this case role admin.

38
00:01:41.006 --> 00:01:45.003
If and only if it's true, I then want to load the orders.

39
00:01:45.003 --> 00:01:48.002
Otherwise I'm going to return an empty list of orders

40
00:01:48.002 --> 00:01:50.000
because there's no reason to go get the data

41
00:01:50.000 --> 00:01:52.000
if they're never going to see it.

42
00:01:52.000 --> 00:01:54.009
I've also restructured our error page a little bit

43
00:01:54.009 --> 00:01:56.008
and I've created a formal controller

44
00:01:56.008 --> 00:01:58.004
which I'll show you next.

45
00:01:58.004 --> 00:02:00.006
But you'll see that I'm going to display the error code

46
00:02:00.006 --> 00:02:02.002
and then a message of text

47
00:02:02.002 --> 00:02:05.005
and that text comes from our web error controller.

48
00:02:05.005 --> 00:02:09.002
And what I've done is I've inspected the request itself

49
00:02:09.002 --> 00:02:12.000
and looked for the status code on that.

50
00:02:12.000 --> 00:02:14.004
So if it's not found, you're going to get one error text,

51
00:02:14.004 --> 00:02:16.002
if you're unauthorized, you'll get another,

52
00:02:16.002 --> 00:02:18.009
and if you're forbidden, you'll get yet another.

53
00:02:18.009 --> 00:02:21.003
Obviously we could go through and list all of them out

54
00:02:21.003 --> 00:02:25.001
so that we have a custom message for every type of scenario

55
00:02:25.001 --> 00:02:27.006
and ultimately I've got sort of a default catch all.

56
00:02:27.006 --> 00:02:29.007
If I can't do any of this,

57
00:02:29.007 --> 00:02:32.003
then we'll just put an unknown error.

58
00:02:32.003 --> 00:02:35.004
So that's all the changes that I've done behind the scenes

59
00:02:35.004 --> 00:02:38.007
so that we can now go and enable our authorization.

60
00:02:38.007 --> 00:02:43.000
So let's do that now, open up our web security config,

61
00:02:43.000 --> 00:02:44.002
and what I want you to do

62
00:02:44.002 --> 00:02:49.008
is I want you to go to the antMatchers section,

63
00:02:49.008 --> 00:02:51.009
and we're going to add two new antMatchers.

64
00:02:51.009 --> 00:02:53.006
So as I said before,

65
00:02:53.006 --> 00:02:57.005
we are going to allow

66
00:02:57.005 --> 00:03:02.005
anyone who's logged in and has a role of users,

67
00:03:02.005 --> 00:03:05.009
we're going to give them access to customers, /customers,

68
00:03:05.009 --> 00:03:07.007
and all pages underneath it

69
00:03:07.007 --> 00:03:11.002
so that way they can see the detailed customer.

70
00:03:11.002 --> 00:03:12.001
So we're going to do this

71
00:03:12.001 --> 00:03:16.001
if they have a role and that role is user.

72
00:03:16.001 --> 00:03:18.004
And again, we're stripping out the role_

73
00:03:18.004 --> 00:03:20.007
and we're going to put an element in to handle that

74
00:03:20.007 --> 00:03:22.009
here in a little bit.

75
00:03:22.009 --> 00:03:27.007
We're then going to do an antMatchers on /orders.

76
00:03:27.007 --> 00:03:34.002
And here we're going to say has role of admin.

77
00:03:34.002 --> 00:03:37.004
And now let's go down here and let's create a bean

78
00:03:37.004 --> 00:03:45.008
and the bean is going to be GrantedAuthoritiesMapper.

79
00:03:45.008 --> 00:03:53.006
So we will create a new, simple authority mapper.

80
00:03:53.006 --> 00:03:55.004
And to that authority mapper,

81
00:03:55.004 --> 00:03:59.000
we are going to set convert to uppercase equal to true.

82
00:03:59.000 --> 00:04:01.001
That way, no matter how it's stored in the database,

83
00:04:01.001 --> 00:04:03.000
we could always use the same case.

84
00:04:03.000 --> 00:04:06.000
You could also convert it all to lower if you wanted to.

85
00:04:06.000 --> 00:04:09.005
I prefer to keep it uppercase, I think it's cleaner.

86
00:04:09.005 --> 00:04:13.005
And now we will return our authorities mapper.

87
00:04:13.005 --> 00:04:14.004
Now we're ready to go.

88
00:04:14.004 --> 00:04:18.007
So let's restart our application

89
00:04:18.007 --> 00:04:23.007
and we're going to jump into a fresh web browser.

90
00:04:23.007 --> 00:04:27.007
So first, let's check with our users.

91
00:04:27.007 --> 00:04:30.003
We'll go to local host 8080.

92
00:04:30.003 --> 00:04:35.000
We will go and log in as user with our password of password.

93
00:04:35.000 --> 00:04:38.006
Great, we got in, we can see all of our customers.

94
00:04:38.006 --> 00:04:42.003
If we click on details, you'll see that we no longer see

95
00:04:42.003 --> 00:04:44.005
the order details for the customer

96
00:04:44.005 --> 00:04:48.000
and if we go to orders, we get to an oops page 403,

97
00:04:48.000 --> 00:04:49.007
you don't have permissions for this page.

98
00:04:49.007 --> 00:04:53.001
That's what we would expect to see for our user.

99
00:04:53.001 --> 00:04:56.007
So let's get a new web browser.

100
00:04:56.007 --> 00:05:02.009
And once again, we'll go back to local host 8080.

101
00:05:02.009 --> 00:05:08.002
This time we'll log in as admin.

102
00:05:08.002 --> 00:05:10.002
So we get all of our customers.

103
00:05:10.002 --> 00:05:14.000
When we click on details, now we see the orders for that

104
00:05:14.000 --> 00:05:17.000
and when we click on orders, we've got access.

105
00:05:17.000 --> 00:05:19.008
So now we've implemented using basic auth,

106
00:05:19.008 --> 00:05:23.006
a database stored username and password combination,

107
00:05:23.006 --> 00:05:25.002
as well as roles.

108
00:05:25.002 --> 00:05:28.008
We've secured our pages behind those roles.

109
00:05:28.008 --> 00:05:30.001
Now, you'll notice

110
00:05:30.001 --> 00:05:32.003
we keep having to pop new web browsers open

111
00:05:32.003 --> 00:05:36.003
and that's because basic auth doesn't allow us to log out.

112
00:05:36.003 --> 00:05:38.004
Our next phase is to go implement

113
00:05:38.004 --> 00:05:42.000
a proper forms based authentication, so that we can do that.

