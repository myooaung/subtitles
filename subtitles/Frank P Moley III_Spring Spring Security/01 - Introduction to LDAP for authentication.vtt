WEBVTT
1
00:00:00.006 --> 00:00:02.002
- [Instructor] One of the most common ways

2
00:00:02.002 --> 00:00:05.000
to authenticate an application in Enterprise

3
00:00:05.000 --> 00:00:07.004
is through the use of LDAP.

4
00:00:07.004 --> 00:00:09.008
So why do enterprises use LDAP

5
00:00:09.008 --> 00:00:12.007
other than Microsoft Active Directory on premises

6
00:00:12.007 --> 00:00:14.002
supports it.

7
00:00:14.002 --> 00:00:17.002
LDAP or Lightweight Directory Access Protocol

8
00:00:17.002 --> 00:00:21.000
is a lightweight user authentication directory structure.

9
00:00:21.000 --> 00:00:24.007
It is built in natively into many operating systems

10
00:00:24.007 --> 00:00:29.002
and of course there's standalone implementations as well.

11
00:00:29.002 --> 00:00:32.003
One of the biggest benefits of LDAP is the fact

12
00:00:32.003 --> 00:00:34.007
that it's interoperable among many different

13
00:00:34.007 --> 00:00:37.006
operating systems and components.

14
00:00:37.006 --> 00:00:40.003
In fact, its services are exported

15
00:00:40.003 --> 00:00:43.007
to many of those components so that they don't natively

16
00:00:43.007 --> 00:00:46.002
have to support authentication,

17
00:00:46.002 --> 00:00:50.005
which in an Enterprise setting is exactly what we want.

18
00:00:50.005 --> 00:00:55.000
Because LDAP is lightweight it's also highly scalable,

19
00:00:55.000 --> 00:00:57.009
which again is another benefit when you're running

20
00:00:57.009 --> 00:01:01.000
a distributed workforce across the globe

21
00:01:01.000 --> 00:01:03.002
and all of those Enterprise systems

22
00:01:03.002 --> 00:01:06.004
need to share the same directory structure.

23
00:01:06.004 --> 00:01:08.003
Now Spring Security LDAP

24
00:01:08.003 --> 00:01:11.004
is not a very hard project to learn.

25
00:01:11.004 --> 00:01:16.008
The base project is spring-security-ldap.

26
00:01:16.008 --> 00:01:21.000
It offers full support for all native LDAP operations

27
00:01:21.000 --> 00:01:23.009
that you would need outside of authentication.

28
00:01:23.009 --> 00:01:26.002
And while we're going to focus primarily

29
00:01:26.002 --> 00:01:28.005
on the authentication routines,

30
00:01:28.005 --> 00:01:31.009
it's good to keep in mind that you have access to LDAP

31
00:01:31.009 --> 00:01:34.004
outside of that use case.

32
00:01:34.004 --> 00:01:37.007
Spring Security also provides adequate support

33
00:01:37.007 --> 00:01:41.009
for password-hashing that most LDAP implementations

34
00:01:41.009 --> 00:01:43.008
also support.

35
00:01:43.008 --> 00:01:46.002
Now, the paradigm that we will use to learn

36
00:01:46.002 --> 00:01:50.007
Spring Security with LDAP is going to be as follows.

37
00:01:50.007 --> 00:01:53.002
It's going to be very similar to what we saw

38
00:01:53.002 --> 00:01:56.003
with basic and forms-based authentication.

39
00:01:56.003 --> 00:01:58.007
LDAP authentication still leverages

40
00:01:58.007 --> 00:02:01.000
the authentication manager builder

41
00:02:01.000 --> 00:02:02.009
that we have been configuring

42
00:02:02.009 --> 00:02:06.005
in our Security configuration class.

43
00:02:06.005 --> 00:02:09.004
Now, I want to talk a little bit about how we're going to use

44
00:02:09.004 --> 00:02:12.001
LDAP in this chapter.

45
00:02:12.001 --> 00:02:14.004
We're going to use an embedded LDAP server

46
00:02:14.004 --> 00:02:18.004
that's part of the Spring dependency management structure.

47
00:02:18.004 --> 00:02:21.004
You don't have to use the embedded LDAP server

48
00:02:21.004 --> 00:02:23.003
if you don't want to.

49
00:02:23.003 --> 00:02:26.007
You can use something like OpenLDAP with Docker

50
00:02:26.007 --> 00:02:31.003
or built into your OS if it's available, like it is on mine.

51
00:02:31.003 --> 00:02:34.002
That's actually how I do most of my LDAP work

52
00:02:34.002 --> 00:02:36.001
when I'm running locally.

53
00:02:36.001 --> 00:02:37.007
But again, in this example

54
00:02:37.007 --> 00:02:39.008
we're going to use the embedded LDAP

55
00:02:39.008 --> 00:02:43.002
'cause it's easier for you and we're not really focused

56
00:02:43.002 --> 00:02:47.008
on LDAP as much as the Security constructs from Spring.

57
00:02:47.008 --> 00:02:49.006
Now you may be asking yourself,

58
00:02:49.006 --> 00:02:52.003
well I've got access to Active Directory,

59
00:02:52.003 --> 00:02:56.003
can I just use it for the purposes of this demo?

60
00:02:56.003 --> 00:02:58.007
The short answer is you can.

61
00:02:58.007 --> 00:03:01.002
It's a little bit different and we're going to talk about

62
00:03:01.002 --> 00:03:03.007
some of those differences later on.

63
00:03:03.007 --> 00:03:06.000
However, it's important to note

64
00:03:06.000 --> 00:03:09.006
that Active Directory is not LDAP,

65
00:03:09.006 --> 00:03:12.005
but it can provide authentication routines

66
00:03:12.005 --> 00:03:14.009
through an LDAP API.

67
00:03:14.009 --> 00:03:18.004
Both of them are based on a directory structure

68
00:03:18.004 --> 00:03:21.007
and it's very similar, but they're not the same.

69
00:03:21.007 --> 00:03:24.007
And we should be really clear on that.

70
00:03:24.007 --> 00:03:28.000
With all that being said, let's jump in.

