WEBVTT
1
00:00:00.006 --> 00:00:01.006
- [Instructor] Before we jump right

2
00:00:01.006 --> 00:00:04.003
into implementing forms-based authentication,

3
00:00:04.003 --> 00:00:05.002
let's take a moment

4
00:00:05.002 --> 00:00:08.009
and discuss why we should do this in a web application.

5
00:00:08.009 --> 00:00:12.002
Let's talk about basic authentication for a moment

6
00:00:12.002 --> 00:00:14.003
including the pros and cons.

7
00:00:14.003 --> 00:00:20.002
So first of all, RFC 2617 defines basic authentication

8
00:00:20.002 --> 00:00:23.006
but there is no specification that does the same

9
00:00:23.006 --> 00:00:26.001
for forms-based authentication.

10
00:00:26.001 --> 00:00:30.001
In fact, there's nothing even close.

11
00:00:30.001 --> 00:00:31.003
One of the biggest issues

12
00:00:31.003 --> 00:00:34.003
with basic auth is actually the inability to log off,

13
00:00:34.003 --> 00:00:38.000
something we've dealt with several times now in this course.

14
00:00:38.000 --> 00:00:41.003
Everything is session based with basic authentication

15
00:00:41.003 --> 00:00:44.003
and as such there's not really a unified way

16
00:00:44.003 --> 00:00:48.003
to handle logging off across all the browsers.

17
00:00:48.003 --> 00:00:51.007
Most of them don't even implement anything.

18
00:00:51.007 --> 00:00:55.005
Now, often you will hear about Base64 encoding

19
00:00:55.005 --> 00:00:58.006
of the username and password as being a security flaw

20
00:00:58.006 --> 00:01:00.001
in the spec.

21
00:01:00.001 --> 00:01:02.005
Now, I want to put some of that to rest.

22
00:01:02.005 --> 00:01:05.004
When you are leveraging TLS communication

23
00:01:05.004 --> 00:01:07.000
between the client and the server,

24
00:01:07.000 --> 00:01:11.000
the Base64 encoded header is encrypted.

25
00:01:11.000 --> 00:01:13.004
So not only is the Base64 encoded,

26
00:01:13.004 --> 00:01:16.001
but then it's encrypted on top of it.

27
00:01:16.001 --> 00:01:20.008
As such, it isn't easy to decode as some may tell you.

28
00:01:20.008 --> 00:01:23.004
There really is no inherent security risk

29
00:01:23.004 --> 00:01:25.003
with using basic auth,

30
00:01:25.003 --> 00:01:29.009
assuming your server is operating with TLS.

31
00:01:29.009 --> 00:01:34.001
Now if you consider the risks of not being able to log out,

32
00:01:34.001 --> 00:01:37.003
that can be considered a security vulnerability

33
00:01:37.003 --> 00:01:42.004
and oftentimes I consider that as a security risk itself.

34
00:01:42.004 --> 00:01:45.007
But the limitations to using basic auth start

35
00:01:45.007 --> 00:01:47.005
to lose its luster quickly

36
00:01:47.005 --> 00:01:50.005
when you're dealing with it on complex systems

37
00:01:50.005 --> 00:01:54.002
even if it isn't inherently insecure.

38
00:01:54.002 --> 00:01:57.003
With basic auth, not only can you not log out,

39
00:01:57.003 --> 00:02:00.008
you also have no ability to modify the login window either.

40
00:02:00.008 --> 00:02:02.005
It's handled by the browser.

41
00:02:02.005 --> 00:02:06.000
And that causes many organizations heartburn.

42
00:02:06.000 --> 00:02:10.000
With form-based authentication, you have complete control.

43
00:02:10.000 --> 00:02:12.009
Since you leverage a standard HTML form

44
00:02:12.009 --> 00:02:15.004
to pass the credentials to the back end,

45
00:02:15.004 --> 00:02:17.009
you can style that form as much or as little

46
00:02:17.009 --> 00:02:20.009
as you and your organization would like.

47
00:02:20.009 --> 00:02:24.003
But keep in mind that you still need to leverage TLS

48
00:02:24.003 --> 00:02:27.006
to secure your credentials on the wire.

49
00:02:27.006 --> 00:02:30.005
This all allows for a much more seamless view

50
00:02:30.005 --> 00:02:33.000
for your login page.

51
00:02:33.000 --> 00:02:36.006
Forms-based authentication can provide support

52
00:02:36.006 --> 00:02:39.008
for remember me options if they are implemented.

53
00:02:39.008 --> 00:02:41.005
And many people like that,

54
00:02:41.005 --> 00:02:44.002
especially in an enterprise setting.

55
00:02:44.002 --> 00:02:48.001
And finally as you might expect, forms-based authentication

56
00:02:48.001 --> 00:02:50.008
allows you to define a logout process

57
00:02:50.008 --> 00:02:55.003
and a page to return to after you're logged out.

58
00:02:55.003 --> 00:02:57.009
So before we progress to the next few steps

59
00:02:57.009 --> 00:03:00.007
of our application, let's evaluate those steps

60
00:03:00.007 --> 00:03:04.001
that we're going to go through before we begin.

61
00:03:04.001 --> 00:03:05.000
So first of all,

62
00:03:05.000 --> 00:03:09.003
we're going to need to create our login form itself.

63
00:03:09.003 --> 00:03:11.009
Then we need to create the login process

64
00:03:11.009 --> 00:03:14.004
and the landing page for all of that.

65
00:03:14.004 --> 00:03:16.009
Then finally we need to configure our system

66
00:03:16.009 --> 00:03:18.007
to not utilize the basic auth,

67
00:03:18.007 --> 00:03:22.002
but instead to leverage forms-based authentication.

68
00:03:22.002 --> 00:03:24.002
We're going to do this over several videos.

69
00:03:24.002 --> 00:03:27.000
So buckle up and let's jump in.

