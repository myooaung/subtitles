WEBVTT
1
00:00:00.007 --> 00:00:02.007
- [Instructor] One of the tangential products that I have

2
00:00:02.007 --> 00:00:06.008
done quite a bit of work with exists in the LDAP realm.

3
00:00:06.008 --> 00:00:09.006
And I wanted to give a brief discussion of it.

4
00:00:09.006 --> 00:00:13.005
The use cases in this area are very enterprise-focused

5
00:00:13.005 --> 00:00:17.005
from my experiences, but there are always different cases

6
00:00:17.005 --> 00:00:20.004
so it's worth learning a bit about them.

7
00:00:20.004 --> 00:00:23.007
So to a casual person in technology, when you hear LDAP,

8
00:00:23.007 --> 00:00:27.004
you may only consider authentication.

9
00:00:27.004 --> 00:00:31.001
While that is an important use case, it isn't the only one.

10
00:00:31.001 --> 00:00:33.006
In fact, there are several valid use cases

11
00:00:33.006 --> 00:00:37.004
that you may encounter where LDAP can be a viable solution.

12
00:00:37.004 --> 00:00:40.000
The project for working with LDAP outside

13
00:00:40.000 --> 00:00:42.008
of the security sense is spring-ldap-core,

14
00:00:42.008 --> 00:00:45.001
which we brought into our application.

15
00:00:45.001 --> 00:00:49.002
And I have professionally used this project a few times

16
00:00:49.002 --> 00:00:53.006
for some really big problems that needed to be solved.

17
00:00:53.006 --> 00:00:56.005
The uses, in fact, were so critical to HR

18
00:00:56.005 --> 00:01:00.002
that I feel it's worth this entire video on the topic

19
00:01:00.002 --> 00:01:02.004
so that you know it exists.

20
00:01:02.004 --> 00:01:06.005
Many of these use cases are not even security focused.

21
00:01:06.005 --> 00:01:08.005
They are simply, in my experience,

22
00:01:08.005 --> 00:01:13.001
employee-related tasks or asset-related tasks.

23
00:01:13.001 --> 00:01:14.008
One of the beautiful aspects of the way

24
00:01:14.008 --> 00:01:17.005
that the Spring team works is the cohesion

25
00:01:17.005 --> 00:01:19.003
of the framework itself

26
00:01:19.003 --> 00:01:22.007
and LDAP operations are no exception.

27
00:01:22.007 --> 00:01:25.009
In Spring Security, we can query LDAP

28
00:01:25.009 --> 00:01:28.006
using the template pattern for LDAP

29
00:01:28.006 --> 00:01:33.008
just like we would for JDBC or Rest or Rabbit or AMQP

30
00:01:33.008 --> 00:01:35.004
or any of the other templates

31
00:01:35.004 --> 00:01:38.002
for the various technologies that exist.

32
00:01:38.002 --> 00:01:41.004
The LDAP template has several key use cases

33
00:01:41.004 --> 00:01:43.001
that you need to know.

34
00:01:43.001 --> 00:01:47.003
The first and most common for many people is search.

35
00:01:47.003 --> 00:01:50.000
There is also support for building distinguished names

36
00:01:50.000 --> 00:01:53.002
in a very simple LDAP name builder,

37
00:01:53.002 --> 00:01:56.005
mostly associated with the JDBC template.

38
00:01:56.005 --> 00:02:00.001
And often you use one to serve the other,

39
00:02:00.001 --> 00:02:03.007
meaning you pull from JDBC to load into LDAP

40
00:02:03.007 --> 00:02:05.001
or or vice versa.

41
00:02:05.001 --> 00:02:08.005
Back to the template support, you also get binding support

42
00:02:08.005 --> 00:02:12.003
which is the creation of nodes and associated with that

43
00:02:12.003 --> 00:02:15.004
you get updates and deletes.

44
00:02:15.004 --> 00:02:19.002
Finally, there is full support for the repository patterns

45
00:02:19.002 --> 00:02:21.008
within LDAP itself.

46
00:02:21.008 --> 00:02:24.005
So we haven't seen any code, and I think that's fine

47
00:02:24.005 --> 00:02:26.009
since it's well documented, but I do want to share

48
00:02:26.009 --> 00:02:30.001
a few real-life use cases that I have worked

49
00:02:30.001 --> 00:02:32.002
or I have consulted on.

50
00:02:32.002 --> 00:02:36.001
One really powerful use is an employee onboarding system

51
00:02:36.001 --> 00:02:39.006
where the user is added to the directory dynamically

52
00:02:39.006 --> 00:02:41.004
based on conditions being met

53
00:02:41.004 --> 00:02:45.001
like signatures being filed and things like that.

54
00:02:45.001 --> 00:02:49.008
Another valid use case is the various HR management systems

55
00:02:49.008 --> 00:02:53.001
especially for those targeting communication.

56
00:02:53.001 --> 00:02:56.000
By leveraging groups that may not be visible

57
00:02:56.000 --> 00:02:57.009
to the entire company,

58
00:02:57.009 --> 00:03:01.003
communication channels or email lists can be generated

59
00:03:01.003 --> 00:03:03.007
while obscuring those from the view

60
00:03:03.007 --> 00:03:06.001
of those not in the group.

61
00:03:06.001 --> 00:03:09.006
It can also be a very useful tool when building HR

62
00:03:09.006 --> 00:03:14.003
or physical security directory tooling or search programs.

63
00:03:14.003 --> 00:03:16.004
I have seen it used for learning systems

64
00:03:16.004 --> 00:03:17.009
for things like weather

65
00:03:17.009 --> 00:03:20.008
and other warnings within an enterprise.

66
00:03:20.008 --> 00:03:23.003
Finally, I think it's important to admit

67
00:03:23.003 --> 00:03:25.003
that there are some other pieces of data

68
00:03:25.003 --> 00:03:28.002
that you can store in LDAP other than users.

69
00:03:28.002 --> 00:03:31.001
And those use cases can get huge wins

70
00:03:31.001 --> 00:03:33.007
when leveraging spring-ldap-core

71
00:03:33.007 --> 00:03:37.000
for managing things like assets.

