WEBVTT
1
00:00:00.006 --> 00:00:03.004
- [Instructor] We just created passwords using plain text

2
00:00:03.004 --> 00:00:05.006
and stored them in the database.

3
00:00:05.006 --> 00:00:09.009
You should never store passwords in plain text.

4
00:00:09.009 --> 00:00:13.007
You should never encrypt your user's passwords either.

5
00:00:13.007 --> 00:00:15.005
You should use a proper,

6
00:00:15.005 --> 00:00:19.001
cryptographically sound one-way hash.

7
00:00:19.001 --> 00:00:24.001
Please note, shell 256 is no longer considered secure

8
00:00:24.001 --> 00:00:27.004
because it can be brute force attacked

9
00:00:27.004 --> 00:00:30.002
by things like high performance GPUs.

10
00:00:30.002 --> 00:00:34.002
There are several valid hash algorithms you can use

11
00:00:34.002 --> 00:00:36.003
and Spring Boot supports them,

12
00:00:36.003 --> 00:00:39.005
but we will use the default one, which is BCrypt.

13
00:00:39.005 --> 00:00:42.006
So let's go ahead and enable that in our system.

14
00:00:42.006 --> 00:00:44.005
All right, I'm going to use the Spring Boot CLI,

15
00:00:44.005 --> 00:00:48.008
which I have on my computer, to hash the passwords for you.

16
00:00:48.008 --> 00:00:52.002
If you want to do this, Spring has documentation online

17
00:00:52.002 --> 00:00:54.009
for installing the Spring CLI,

18
00:00:54.009 --> 00:00:57.001
otherwise, you want to grab these passwords

19
00:00:57.001 --> 00:00:59.005
from the completed exercise files.

20
00:00:59.005 --> 00:01:01.000
They are pretty complex,

21
00:01:01.000 --> 00:01:03.005
and I don't expect you to be able to type them.

22
00:01:03.005 --> 00:01:07.000
So what I'm going to do is I'm going to open up my terminal.

23
00:01:07.000 --> 00:01:10.004
All right, so I'm going to type spring encodepassword,

24
00:01:10.004 --> 00:01:12.009
and the password that I want to encode

25
00:01:12.009 --> 00:01:15.004
is just the word password.

26
00:01:15.004 --> 00:01:18.006
Super secure, but that's okay.

27
00:01:18.006 --> 00:01:19.006
Now I'm going to copy this.

28
00:01:19.006 --> 00:01:21.007
Now you want to be careful if you're copying this

29
00:01:21.007 --> 00:01:24.006
from a terminal that you don't get any extra characters,

30
00:01:24.006 --> 00:01:27.007
so I'm going to make sure I copy just the string.

31
00:01:27.007 --> 00:01:30.009
We're going to go ahead and go to source, main, resources,

32
00:01:30.009 --> 00:01:34.000
and we're going to go to our data.sql file.

33
00:01:34.000 --> 00:01:37.000
And we are going to replace our password

34
00:01:37.000 --> 00:01:39.001
with this BCrypt string.

35
00:01:39.001 --> 00:01:42.004
Now if I were to run this command again,

36
00:01:42.004 --> 00:01:44.003
I would get a different string,

37
00:01:44.003 --> 00:01:47.005
and that's kind of the expectation of BCrypt.

38
00:01:47.005 --> 00:01:49.001
In a real world, you wouldn't want to see

39
00:01:49.001 --> 00:01:52.006
the same hash password twice in your file,

40
00:01:52.006 --> 00:01:54.002
that's kind of a dangerous operation.

41
00:01:54.002 --> 00:01:56.007
For this, it works just fine.

42
00:01:56.007 --> 00:01:58.002
Now there's one more change that we need to make.

43
00:01:58.002 --> 00:02:01.009
We need to go back to our WebSecurityConfig

44
00:02:01.009 --> 00:02:05.003
in source, main, java, BasePackageConfig

45
00:02:05.003 --> 00:02:09.004
and get rid of the NoOpPasswordEncoder.

46
00:02:09.004 --> 00:02:11.009
The default is BCrypt.

47
00:02:11.009 --> 00:02:17.002
So, at this point, we just need to start up our application.

48
00:02:17.002 --> 00:02:19.006
Now let's jump into a web browser,

49
00:02:19.006 --> 00:02:24.006
and let's go to localhost 8080,

50
00:02:24.006 --> 00:02:27.001
click on Customers.

51
00:02:27.001 --> 00:02:31.001
We will start with our user,

52
00:02:31.001 --> 00:02:32.006
password.

53
00:02:32.006 --> 00:02:35.006
We've authenticated, let's kill this window

54
00:02:35.006 --> 00:02:37.009
and create a new one.

55
00:02:37.009 --> 00:02:45.001
And, once again, we will go to localhost 8080,

56
00:02:45.001 --> 00:02:46.008
click on Customers again.

57
00:02:46.008 --> 00:02:50.004
This time we will go with our admin user,

58
00:02:50.004 --> 00:02:52.000
and everything is working great.

59
00:02:52.000 --> 00:02:53.008
So we've now used BCrypt passwords.

60
00:02:53.008 --> 00:02:55.006
which is much better than plain text,

61
00:02:55.006 --> 00:02:57.006
and, again, it is the default,

62
00:02:57.006 --> 00:02:59.005
so this is the behavior that we would've gotten

63
00:02:59.005 --> 00:03:03.000
had we not gone through and done the NoOp.

