WEBVTT
1
00:00:01.904 --> 00:00:05.645
So now that we have sent a number of messages to our JMS destinations,

2
00:00:05.645 --> 00:00:07.447
let's look at how you can consume them.

3
00:00:07.447 --> 00:00:11.498
It is possible to consume a message from a queue or a topic using the

4
00:00:11.498 --> 00:00:14.166
same JmsTemplate that we saw in the previous section.

5
00:00:14.166 --> 00:00:17.712
There are a number of methods that allow you to consume messages,

6
00:00:17.712 --> 00:00:20.438
and these generally fall into four categories,

7
00:00:20.438 --> 00:00:25.093
which are receive, receiveSelected, receiveAndConvert,

8
00:00:25.093 --> 00:00:25.965
and recieveSelectedAndConvert.

9
00:00:25.965 --> 00:00:27.709
All methods are blocking,

10
00:00:27.709 --> 00:00:32.031
in that they will wait for a message to be received

11
00:00:32.031 --> 00:00:33.915
before the thread resumes execution.

12
00:00:33.915 --> 00:00:37.813
The methods with convert in the name will use the MessageConverter to convert

13
00:00:37.813 --> 00:00:40.207
the received message into the required business object.

14
00:00:40.207 --> 00:00:43.352
The receive and receiveSelected methods receive a raw

15
00:00:43.352 --> 00:00:45.525
JMS message for you to work with.

16
00:00:45.525 --> 00:00:48.008
The methods with selected in the name allow you to

17
00:00:48.008 --> 00:00:51.741
provide a messageSelector as a parameter.

18
00:00:51.741 --> 00:00:53.414
As we saw in an earlier module,

19
00:00:53.414 --> 00:00:56.188
one use case of this is to allow for synchronous messaging,

20
00:00:56.188 --> 00:00:59.920
and this is a good example of how to use the JmsTemplate.

21
00:00:59.920 --> 00:01:03.679
In this small example, I'm sending a message to the REQUEST_QUEUE.

22
00:01:03.679 --> 00:01:06.501
I'm using a message post processor to get a reference

23
00:01:06.501 --> 00:01:08.230
to the JMS message object itself.

24
00:01:08.230 --> 00:01:09.996
Once the message has been sent,

25
00:01:09.996 --> 00:01:13.479
I can get the messageID from the message reference,

26
00:01:13.479 --> 00:01:15.624
and then call receiveSelectedAndConvert,

27
00:01:15.624 --> 00:01:19.435
which consumes from the RESPONSE_QUEUE.

28
00:01:19.435 --> 00:01:21.744
It uses a messageSelector based on the CorrelationID,

29
00:01:21.744 --> 00:01:26.068
and then converts the object directly into our business object,

30
00:01:26.068 --> 00:01:27.228
which is of type Response.

31
00:01:27.228 --> 00:01:30.253
There is another process that is responsible for the consumption of

32
00:01:30.253 --> 00:01:33.220
the message and correctly setting the CorrelationID.

33
00:01:33.220 --> 00:01:36.050
We covered this in an earlier module on synchronous messaging,

34
00:01:36.050 --> 00:01:40.710
so if you need a refresher on that, then I suggest you jump back to that section.

35
00:01:40.710 --> 00:01:43.295
Generally, I find this is quite a limited use case though,

36
00:01:43.295 --> 00:01:51.000
I prefer to use a more asynchronous approach, which means using messageListeners and the DefaultMessageListenerContainer.

