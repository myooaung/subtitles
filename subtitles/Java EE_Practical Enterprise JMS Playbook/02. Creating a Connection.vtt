WEBVTT
1
00:00:02.637 --> 00:00:04.100
Now that we have a ConnectionFactory,

2
00:00:04.100 --> 00:00:08.255
we'll be using the standard JMS APIs for any further code we write.

3
00:00:08.255 --> 00:00:13.081
Once you have the ConnectionFactory, the next thing you need is a connection.

4
00:00:13.081 --> 00:00:16.886
There are a number of ways you can obtain one.

5
00:00:16.886 --> 00:00:18.000
First off, a generic connection,

6
00:00:18.000 --> 00:00:21.756
in this method we pass in the ConnectionFactory we have created,

7
00:00:21.756 --> 00:00:24.502
and call createConnection on it,

8
00:00:24.502 --> 00:00:28.162
which returns an instance of a JMS connection interface.

9
00:00:28.162 --> 00:00:30.214
We can also create a method that takes in an instance of a

10
00:00:30.214 --> 00:00:31.863
queueConnectionFactory that we created.

11
00:00:31.863 --> 00:00:36.834
In this case, we will call createQueueConnection on that factory,

12
00:00:36.834 --> 00:00:39.957
and return a queueConnection object.

13
00:00:39.957 --> 00:00:41.451
In a similar way,

14
00:00:41.451 --> 00:00:44.065
we can create a TopicConnection by calling

15
00:00:44.065 --> 00:00:48.351
createTopicConnection on the TopicConnectionFactory.

16
00:00:48.351 --> 00:00:52.329
Like the ConnectionFactories, there are XA versions of all these methods.

17
00:00:52.329 --> 00:00:53.931
First, the generic XAConnection.

18
00:00:53.931 --> 00:00:55.133
To create one,

19
00:00:55.133 --> 00:00:59.781
we have another method that we call that takes in a XAConnectionFactory,

20
00:00:59.781 --> 00:01:02.440
and you call createXAConnection on it.

21
00:01:02.440 --> 00:01:07.342
The approach is similar for the XAQConnection and XATopicConnection.

22
00:01:07.342 --> 00:01:11.172
You pass in the relevant ConnectionFactory,

23
00:01:11.172 --> 00:01:24.000
and call either createXAQConnection, which returns an XAQConnection object, or createXATopicConnection, which returns an XATopicConnection object.

