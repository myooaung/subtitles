WEBVTT

00:02.100 --> 00:07.910
Let's move on with the configuration we get that CSSA area and I actually showed this a bit earlier

00:08.390 --> 00:09.850
in this course already.

00:09.860 --> 00:12.880
You can use it to include global C-s as follows.

00:12.890 --> 00:20.640
So you would simply pass a string here which is the POF that say yes this folder to your main dot CSSA

00:20.710 --> 00:21.800
fall if you had it.

00:21.980 --> 00:27.920
And then this would be included on every single page which is a great way of defining truly global C-s

00:27.920 --> 00:29.040
as styles.

00:29.120 --> 00:36.470
The alternative which we're using is to use a lay out specific styling which is also global for a given

00:36.470 --> 00:37.030
layout.

00:37.130 --> 00:38.420
Choose whichever you need.

00:38.450 --> 00:44.300
And of course feel free to mix both behavior's plugins is something I will come back to in this module

00:44.660 --> 00:46.400
as well as modules.

00:46.400 --> 00:51.530
So I will dive into DS 2 features specifically in specific videos.

00:51.550 --> 00:51.910
No.

00:51.920 --> 00:59.330
Built is a configuration where you can change to build process or where you can change settings about

00:59.330 --> 01:00.660
the built process.

01:00.680 --> 01:04.390
This of course means things like that compilation step off.

01:04.400 --> 01:12.380
Next gen javascript to current gen javascript or minification now a detailed documentation of all the

01:12.380 --> 01:17.720
settings you can set here can also be found in the last lecture of this module.

01:17.720 --> 01:23.240
This is a bit advanced here so you shouldn't really do anything here unless you know what you're doing.

01:23.360 --> 01:27.730
But if you know what you're doing you can redefine you in all the settings to your needs.

01:28.510 --> 01:30.130
Now that's not all.

01:30.130 --> 01:36.380
We get more things we can configure than the things you see here the properties you see here.

01:36.460 --> 01:38.760
So let me dive into some obvious settings.

01:38.770 --> 01:40.210
I will simply add them here.

01:40.330 --> 01:48.190
For example we get depth the depth setting is a Boolean OR takes a boolean and you simply define whether

01:48.190 --> 01:53.770
you're in development mode or not considered to True or False and True means you are in development

01:53.770 --> 01:54.200
mode.

01:54.280 --> 01:59.590
But this will always be overwritten by the next script you are executing in the end.

01:59.590 --> 02:03.430
When you're building your project you have to look at the package that Jason followed.

02:03.490 --> 02:09.640
Here you see all the scripts you can run and you see you got next for development mode and later for

02:09.640 --> 02:15.500
production mode you'll have next build to build it and next start to start the next server.

02:15.550 --> 02:18.030
But more on this in the deployment section.

02:18.070 --> 02:25.330
The important thing is build and start will always set death to false because you are not in development

02:25.330 --> 02:32.960
mode so you really need to set this death property therefore more interesting is D-NV property.

02:33.070 --> 02:38.530
This allows you to set your own environment variables that will be injected into your project.

02:38.530 --> 02:40.070
Now here's the cool thing.

02:40.180 --> 02:46.740
You can simply reference global environment variables from your node environment here and simply forewards

02:46.750 --> 02:49.880
them into your app if you want to put it like this.

02:49.900 --> 02:56.860
You could also set something like a base you are l here for example and set that base your L to our

02:56.860 --> 02:58.730
firebase project.

02:58.750 --> 02:59.770
Now let's have a look.

02:59.770 --> 03:03.770
We're using that your L and the store for example here.

03:03.850 --> 03:10.480
Now we could drapped that base your l of that you are l and simply set it here.

03:10.480 --> 03:17.170
Now it's set as an environment variable and we could even enhanced is to reach out to our default node

03:17.200 --> 03:17.750
environment.

03:17.770 --> 03:25.240
Does this running in and reach are two rows and base your let's say and use that as a preferred value

03:25.360 --> 03:30.220
and only fall back to our hard code of your L if does it's not found now in our case this will not be

03:30.220 --> 03:30.700
found.

03:30.760 --> 03:36.580
But if you're running your next step on a real node server you typically can inject environment variables

03:36.670 --> 03:38.280
into that environment.

03:38.290 --> 03:43.660
You set this up in your hosting provider dashboard for example and if does this now set up if you set

03:43.660 --> 03:49.210
up base your L environment variable are written like this there then disvalue will be taken.

03:49.210 --> 03:56.100
This allows you to set up configuration in your hosting dashboard without having to hardcoded in here.

03:56.350 --> 03:58.400
And we got this fallback value.

03:58.660 --> 04:04.850
Now with this environment variable added here we can use it by simply going to the places where we will

04:04.950 --> 04:07.550
need it like you're in Naxa in it.

04:07.810 --> 04:18.100
And there we now simply X-ists process and base you are l like this this is now available it will be

04:18.100 --> 04:22.120
made available by the next workflow to build workflow.

04:22.120 --> 04:28.760
And therefore this code will be compiled to the code where this string is actually entered.

04:28.870 --> 04:32.110
So we're not shipping this code with the placeholder.

04:32.140 --> 04:39.880
This will be turned into a raw string during compilation but during compilation we can access this string

04:40.120 --> 04:43.190
or this placeholder this environment variable.

04:43.330 --> 04:47.480
We can of course also access it in our files in our pages.

04:47.500 --> 04:57.100
So here in next DOD view in the Id fall I can also replace this base your part here with my process

04:57.160 --> 05:03.900
and base your L variable and the same in the admin section here.

05:03.950 --> 05:09.090
I can also get rid of that and use my base your you're in front of it.

05:09.380 --> 05:12.680
And with that you will see if you reload your app.

05:12.680 --> 05:18.590
Everything still works fine because we're still reaching out to the correct address but actually we're

05:18.590 --> 05:24.440
taking advantage of this global base you are l which of course makes it easier for us to simply switch

05:24.440 --> 05:27.640
to value and it will then be applied application wide.

05:27.830 --> 05:31.690
So environment variables are really useful feature if you want to learn more.

05:31.700 --> 05:34.410
You can also find a link to more information about these.

05:34.520 --> 05:35.840
At the end of this module.
