WEBVTT

00:02.290 --> 00:03.660
We built our first app.

00:03.730 --> 00:09.620
And before we dive deeply into next let me give you a preview on what you can actually build with it.

00:09.640 --> 00:10.680
Now you're going to tell me.

00:10.690 --> 00:11.010
Yeah.

00:11.030 --> 00:15.840
View chase applications with Cirus had rendering you did already say that it's true.

00:16.000 --> 00:16.980
You can build only worse.

00:16.980 --> 00:18.860
Laughs But you get more options.

00:18.880 --> 00:21.550
You can also build a single page application with next.

00:21.550 --> 00:23.150
So no server side rendering.

00:23.230 --> 00:24.550
You can disable that.

00:24.640 --> 00:29.620
It will just give you a normal view single page application and if you're wondering why would I use

00:29.620 --> 00:32.800
next then the next module will tell you.

00:32.800 --> 00:39.370
Because Nax has more than just service IDE rendering this whole folders approach and working with just

00:39.370 --> 00:45.820
view components and folders that really has a lot of benefits and you can build a steadier.

00:45.910 --> 00:49.330
Now what's difference between all these things now where a universe lap.

00:49.330 --> 00:52.410
The first view is dynamically rendered on the server.

00:52.420 --> 00:53.600
As I mentioned earlier.

00:53.950 --> 01:00.840
So after at first load We're back in single page application land and our app is just espie it does

01:00.840 --> 01:06.130
is already great for search engine optimization because we render the pages on the fly.

01:06.130 --> 01:11.890
It also has other benefits like us simply returning the latest version of our application pre-rendered

01:11.920 --> 01:17.640
on a server which might feel faster to the user depending on how long the rendering takes.

01:17.710 --> 01:23.320
You can also build a single page application app starts in the client after the first load.

01:23.320 --> 01:28.290
So it's not pre-rendered anti-Arab always is just a single page application.

01:28.300 --> 01:33.580
The cool thing here is it's like a normal web but with the simplified development noxious gives you

01:34.000 --> 01:38.410
the steady Gabbers maybe to hit and start a champion of knucks development.

01:38.410 --> 01:45.580
You can pre-rendered your views so locally on your machine or on some built server but they're not generated

01:45.640 --> 01:52.430
on the fly but you actually generate a static page with just HVM old javascript and see it as false.

01:52.600 --> 01:56.340
However you pre-rendered debt for all your content.

01:56.530 --> 01:58.230
They are huge advantages.

01:58.330 --> 01:59.450
You have a steady gap.

01:59.500 --> 02:04.390
You don't need a node server for this and you still surf pre-rendered pages.

02:04.390 --> 02:08.400
The downside of course is you always have to retrain them them if you are contemn changes.

02:08.410 --> 02:10.640
But this still is an awesome approach.

02:10.640 --> 02:13.690
And more on that of course at the end of this course.

02:14.020 --> 02:16.860
This is also great for search engine optimization.

02:16.870 --> 02:18.880
It's also worth having a look at.

02:18.980 --> 02:22.120
But again we will take a closer look at the end of discourse.

02:22.120 --> 02:28.090
I just wanted to give you an idea of what you can build with next and that it's not just about server

02:28.090 --> 02:31.730
side rendering though that really is one of its big strengths.
