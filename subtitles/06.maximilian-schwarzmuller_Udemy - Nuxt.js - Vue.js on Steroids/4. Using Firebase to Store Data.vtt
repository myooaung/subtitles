WEBVTT

00:02.120 --> 00:09.320
We add a firebase Let's now use it to store data for Dad we'll revisit the Edmond area and here where

00:09.320 --> 00:14.850
we are able to create a new post Desire's where we want to store data.

00:15.260 --> 00:21.890
We got our admin post form and now it's time to revisit this in the admin section of the components

00:21.890 --> 00:30.200
we got the admin post form component and there you see when we actually submit the form here we call

00:30.260 --> 00:31.150
on say.

00:31.510 --> 00:33.350
And then on safe.

00:33.380 --> 00:36.710
This is where we should do something else than just logging this.

00:36.950 --> 00:45.040
Instead we should emit an event a custom event that allows us to handle the form submission in whichever

00:45.040 --> 00:47.840
component includes the admin posts form component.

00:48.130 --> 00:54.490
So we can just call this dollar sign emit and maybe emit d submit event or whatever you want to call

00:54.490 --> 00:55.320
it.

00:55.320 --> 00:59.180
And here I want to pass this added that post.

00:59.230 --> 01:02.200
So does object which stores all the fields we have.

01:02.560 --> 01:05.080
You can also add validation first if you want.

01:05.080 --> 01:07.570
Now I'll just focus on the submission.

01:07.930 --> 01:08.880
We have submitted.

01:08.890 --> 01:16.060
We can go back to New Post and we can now listen to and submit the cast in the event we just add it.

01:16.270 --> 01:19.520
And here I want to execute on submitted.

01:19.720 --> 01:26.760
So I will add this as a method to year in the methods object on submitted.

01:26.850 --> 01:32.670
And here I will actually receive my foreign data or my post data.

01:32.790 --> 01:40.370
So the data we are submitting here as a second argument in demit call.

01:40.480 --> 01:49.600
Now we can use that data in our new post page here in the onza made a method a one to send the HTP request

01:49.870 --> 01:58.690
to firebase and it turns out that if we send a post request to dis you r l and then some note of our

01:58.690 --> 02:06.220
choice at the end of it to create a new field in that object the database in the end is that it will

02:06.220 --> 02:11.260
then automatically create an entry year without us writing any server side code.

02:11.530 --> 02:15.010
So we need to send Zuch HDP request and forward it.

02:15.130 --> 02:17.140
I want to use a third party library.

02:17.290 --> 02:23.680
So what's the development server temporarily with Control-C and I'll then install this library which

02:23.680 --> 02:32.410
is X-ists I Dudas with NPM install save X-ists access as a javascript package that makes sending Ajax

02:32.410 --> 02:33.560
requests a breeze.

02:33.610 --> 02:39.530
And that's a cool thing which also runs on the server which will become handy later.

02:39.790 --> 02:46.320
With that install We can rerun the double up and server and here in a minute I can now use it for that.

02:46.360 --> 02:51.760
We should first of all imported so import years from axis just like that.

02:51.970 --> 02:58.840
And with that we can already use it and use x yes send a post request by calling the post method and

02:58.840 --> 03:03.940
then entered the you or L we want to send the request to the U r l.

03:03.940 --> 03:07.960
Here is dis you are el.

03:08.100 --> 03:13.270
But then we also need to add a node which we want to store the data in like posts maybe.

03:13.380 --> 03:18.650
And then the special thing about firebase is that you need to add dot Jason at the end.

03:18.660 --> 03:24.640
This is only required because of firebase not because of next X years or anything like that.

03:24.660 --> 03:28.830
The second argument of the post request should be the data you want to send.

03:29.070 --> 03:32.820
And each year that could just be our post data.

03:32.880 --> 03:40.260
Now we can add up then block because years post Mefford returns and a promise where we could Konsole

03:40.290 --> 03:42.030
lock the result

03:44.450 --> 03:48.320
or where we catch any errors we get.

03:48.320 --> 03:50.860
For now we'll just log it.

03:51.620 --> 03:53.530
Let's save this and let's try it out.

03:53.900 --> 03:57.090
Let's go back to our application to the Edmond area.

03:57.350 --> 04:02.480
Now here I got an error because post list is not initialized correctly but I can go to the new post

04:02.720 --> 04:03.890
page.

04:03.890 --> 04:06.060
And now let's enter some data max.

04:06.170 --> 04:08.310
My cool post.

04:08.390 --> 04:10.960
Let's grab the image link.

04:11.000 --> 04:15.780
I'll use the link from before and some post content.

04:15.830 --> 04:21.860
And now if I had save we get something locked to the console which has a 200 status code that looks

04:21.860 --> 04:22.790
good.

04:22.790 --> 04:30.590
And if we go back to our database we see a new node posts because we targeted slash posts to Jason here

04:31.660 --> 04:39.200
and if we expand it we get automatically created ID that was created by firebase to give our new posts

04:39.310 --> 04:40.420
a unique ID.

04:40.550 --> 04:43.030
And here we have the data we entered.

04:43.190 --> 04:45.590
So this is how we can add new posts.

04:45.890 --> 04:47.210
Now that's pretty cool.

04:47.210 --> 04:53.120
Let's also see and that's probably the more interesting part how we can fetch that data in the next

04:53.120 --> 04:53.760
lecture.
