WEBVTT

00:02.070 --> 00:08.810
In the last lecture we had a code to post a new wall post to the back and that's nice but let's now

00:08.810 --> 00:16.010
fetch it the place to fetch all posts of course is to not serve it in an action in our store because

00:16.100 --> 00:21.350
remember this is executed whenever we request this page for the first time.

00:21.350 --> 00:27.550
Now in reality you really want to fetch all posts in one step here.

00:27.680 --> 00:33.330
You might just want to fetch a slice and then read fetch them as users navigate around.

00:33.680 --> 00:38.570
In our app here it's perfectly fine to fetch all the posts because we don't have even close as many

00:38.570 --> 00:41.260
as we would need to refactor this.

00:41.360 --> 00:47.910
So what I will do is I'll get rid of this Ramas I returned so that I have an empty Knocke server in

00:48.000 --> 00:49.220
action.

00:49.550 --> 00:56.750
And now we can return what we need to return the proneness here if we run async code and we will run

00:56.750 --> 01:02.560
async code because I want to send the HTP request we do that with x yes.

01:02.570 --> 01:10.130
So let's import x years from X years into this fall to with that imported.

01:10.540 --> 01:14.520
We can go back to the next server in it and return x years.

01:14.590 --> 01:17.870
Get now because you want to send a get request.

01:17.890 --> 01:24.510
Now I want to get all my posts so we should target this.

01:24.590 --> 01:28.070
You here to be precise.

01:28.180 --> 01:29.790
We'll target this with DOD.

01:29.830 --> 01:31.150
Jason at the end.

01:31.420 --> 01:34.690
This fetches all the elements in that post.

01:34.690 --> 01:35.410
Note.

01:35.470 --> 01:41.320
Keep in mind that this doesn't give us back an array though it gives us back an object where the properties

01:41.350 --> 01:48.010
are these cryptic ID's and the values are again objects with the data we saved so we will need to transform

01:48.010 --> 01:54.400
this can do this and we need to store it in the store anyways by adding a then block and also a catch

01:54.400 --> 01:57.220
block in the catch block.

01:57.230 --> 02:03.350
I simply want to execute context error and for the error to show the error page of something goes wrong

02:03.870 --> 02:12.640
in the then block however we get the data and I want to store that in my state for data I will use view

02:12.640 --> 02:15.390
x context and call the commit method.

02:15.620 --> 02:17.610
Commit set posts.

02:17.750 --> 02:21.650
But again said posts request requires an array.

02:21.650 --> 02:26.230
We're getting back an object though so I need to transform this object to an array.

02:26.230 --> 02:28.700
First we can do this manually.

02:28.940 --> 02:37.110
The Post's array is an empty array here let's say and then we simply loop through all the keys in our

02:37.110 --> 02:41.310
data object which we get back to be precise here.

02:41.520 --> 02:48.170
We get the axial response and the response does have a data field though that will hold the actual data

02:48.180 --> 02:48.780
we get.

02:48.790 --> 02:51.310
Response also has feels like the status code.

02:51.630 --> 02:57.180
So we loop through all the fields in the response data and response data it will just be an object with

02:57.180 --> 02:59.010
a lot of keys like that.

02:59.100 --> 03:06.030
The keys are extracted in that key constant here and we can now simply porch our values to the Post's

03:06.040 --> 03:06.600
array.

03:06.780 --> 03:14.490
So we push wrests data for a given key that will be the right side of the key so to say so the data

03:15.920 --> 03:23.600
we also can store the actual ID by pushing a new object where we used to spread operator to pull out

03:23.690 --> 03:30.590
all the properties we have in that data object were fetching for a given key and then we can add a new

03:30.590 --> 03:34.330
property ID which is just a unique ID.

03:34.340 --> 03:38.330
This can become handy if we later want to edit a post.

03:38.690 --> 03:43.490
Now with that we're pushing that all on the Post's array.

03:43.520 --> 03:48.270
Now we can commit this to our set Post's method.

03:48.830 --> 03:56.180
If we now do this and we save debt we can go back to our application and we can go back to the starting

03:56.180 --> 03:56.870
page.

03:57.720 --> 04:00.960
And here we load my cool post.

04:01.020 --> 04:06.470
Now we got an error regarding the thumbnail in Preview text which makes sense because we're not storing

04:06.470 --> 04:10.440
that yet but the rest works thus far.

04:10.440 --> 04:13.170
Now the thumbnail and preview text arrows.

04:13.170 --> 04:15.950
These are things I want to fix in the next lecture.
