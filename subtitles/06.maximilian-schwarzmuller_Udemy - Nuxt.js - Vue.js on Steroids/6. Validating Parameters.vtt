WEBVTT

00:02.120 --> 00:10.760
Now that we get the basics of navigation and routing in next apps set I want to dive into two other

00:10.760 --> 00:16.880
important concepts that Knox gives you out of the box when it comes to its pages.

00:16.880 --> 00:20.760
The first one is validation.

00:21.080 --> 00:24.710
That also leads us to something very import which will dive in in a second.

00:24.710 --> 00:31.280
Q The difference between pages and normal components which we're not really using right now but there

00:31.280 --> 00:35.010
was one pre-created for this project.

00:35.030 --> 00:42.230
Now the difference is the page of components here are essentially loaded as root pages for given you

00:42.230 --> 00:50.540
are else you would then dump in components re-usable components into any of these pages just as normal

00:50.540 --> 00:53.700
building blocks which are of course still want to use.

00:53.870 --> 01:00.500
Since you don't want to put your entire logic just into these few pages files that would defeat the

01:00.500 --> 01:08.000
main purpose of view which is about creating small reusable components the pages components However

01:08.600 --> 01:12.550
don't just get rendered when you visit a certain you are l.

01:12.580 --> 01:14.980
That's the biggest difference but not the only one.

01:15.170 --> 01:22.700
They also got some special properties in the view object but people do get all the default view object

01:22.700 --> 01:29.120
properties like here in the index that you follow or you see where registering this pre defined logo

01:29.120 --> 01:30.230
component.

01:30.230 --> 01:37.580
Now you also saw in the index that you fall in the Users folder we use to data property or in a component

01:37.580 --> 01:39.810
actually in its method methods form.

01:39.920 --> 01:46.460
We add at the Meffert property and you could use computed you could access the lifecycle looks like

01:46.700 --> 01:54.740
created or mounded you can access all the default value properties you have on you components because

01:54.800 --> 01:59.230
these are normal view components however.

01:59.280 --> 02:07.310
Next James also understands some extra properties in these objects you define as components.

02:07.530 --> 02:10.870
These extra properties will be ignored by the future.

02:10.880 --> 02:13.700
Yes but actually as can do something with them.

02:13.800 --> 02:16.640
For example route validation.

02:16.890 --> 02:23.020
Let's say here in the user's ID route where we have a dynamic parameter.

02:23.130 --> 02:30.210
Let's say you want to validate that parameter so that not anything we enter after slash users leads

02:30.210 --> 02:31.300
to that route.

02:31.550 --> 02:34.980
Maybe our valid IDs are numbers.

02:35.130 --> 02:41.870
So entering slash users slash something cool shouldn't yield that page here.

02:42.300 --> 02:48.750
Let's add the script section to that index dot view component file in the nested route here in the dynamic

02:48.750 --> 02:57.900
route and let's add a special property the valid date property value date actually is a method where

02:57.900 --> 03:03.540
you get some argument let's name it data for now.

03:03.540 --> 03:08.080
Now let's simply console log data and important.

03:08.190 --> 03:09.880
Let's return true for now.

03:09.990 --> 03:12.840
I'll come back to what this does in a second.

03:12.840 --> 03:18.340
Now let's save all files and go back to our application that's open the developer tools.

03:18.620 --> 03:24.470
And let's now enter it for a year and Id That's stick load user.

03:24.630 --> 03:30.850
And now what you see is this is the object that gets printed and of course we load that route.

03:30.870 --> 03:32.840
So validate was executed.

03:32.850 --> 03:34.530
That is one important takeaway.

03:34.680 --> 03:42.270
Otherwise this object wouldn't be printed here because we do print and invalidate validate is a special

03:42.270 --> 03:47.230
Meffert next to us executes before rendering a route.

03:47.520 --> 03:53.940
And as you see this object has information about the route parameters potential query parameters and

03:53.940 --> 04:00.920
a potential US store which we don't have right now let's ignore it but parents allow us to access the

04:00.930 --> 04:04.570
parents which were entered and allows us to validate them.

04:04.710 --> 04:06.370
And that's the whole idea.

04:06.570 --> 04:14.450
So here we can access return data parents ID equals one.

04:14.680 --> 04:23.700
And now this page should only be a loadable if we entered an ID of one and exactly one.

04:23.780 --> 04:29.860
So if we go back and I enter this actually it fails.

04:30.220 --> 04:35.630
Now the reason for this is simple if you enter something into the you or else here it's treated as a

04:35.630 --> 04:36.450
string.

04:36.470 --> 04:39.450
But here I'm old checking for type equality.

04:39.590 --> 04:43.150
So if we simply used two equal signs it should work again.

04:43.250 --> 04:46.050
For reload the page again it works.

04:46.190 --> 04:55.010
If I enter to here as an ID though it fails and we get that 4 or 4 arrow page next gives us.

04:55.010 --> 04:57.830
So that is what's happening here.

04:57.830 --> 05:00.380
We can validate the incoming ID.

05:00.620 --> 05:02.990
And of course we could use some rechecks here.

05:03.110 --> 05:09.080
We could simply check if our entire ID is actually a number.

05:09.140 --> 05:19.100
So we have this Retic index we can test data Perrin's ID and we returned a result of that test which

05:19.100 --> 05:21.550
is true if the ID is a valid number.

05:21.560 --> 05:27.040
So if we save this and we reload we can access ID to ID 22.

05:27.140 --> 05:33.790
But if I enter something so some text which is not a number I get the 404 error page.

05:33.800 --> 05:41.480
This can be really useful and allows you to ensure that only valid dynamic segments reach a given you

05:41.480 --> 05:42.290
are l.

05:42.560 --> 05:49.970
Now there was one important thing about routes and pages which I wanted to inform you about and that

05:49.970 --> 05:53.140
is that you can nest pages into each other.

05:53.180 --> 05:55.620
Let me show you what I mean in the next lecture.
