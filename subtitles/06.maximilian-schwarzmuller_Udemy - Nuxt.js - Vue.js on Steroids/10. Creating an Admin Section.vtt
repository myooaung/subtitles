WEBVTT

00:02.130 --> 00:08.580
I'll was taking shape now I want to work on the admin section will add authentication later in the course.

00:08.640 --> 00:13.890
We can already prepared the folder structure the route structure and the files here.

00:13.980 --> 00:20.160
So let's start by adding an index of useful for cases where we just enter slash admen.

00:20.340 --> 00:25.860
Now any adman's action I want to have a couple of our parts so I'll create some sub folders.

00:26.070 --> 00:35.310
One is for a dynamic parameter so that when we enter admen slash 5 for example we load the post number

00:35.310 --> 00:36.560
five.

00:36.660 --> 00:42.250
I simply want to do this so that we can view and edit it as an administrator.

00:42.270 --> 00:48.510
So here I'll add a new dynamic route with post IDs so that it's clear that this is not the idea of you

00:48.510 --> 00:54.660
locked in admin or anything like that but really just a post ID and here are all the over index that

00:54.660 --> 00:56.970
you file in the folder.

00:56.980 --> 01:02.530
Now besides that next to post ID I wanted to have an off folder.

01:02.620 --> 01:05.250
This folder will also have an index that you follow.

01:05.300 --> 01:11.410
And each year I want to show the sign up or sign in form so that we can create our new administrator

01:11.530 --> 01:16.920
or log in as one and I want to add a third folder to the admin folder.

01:16.930 --> 01:20.060
The new post folder which allows us to do just that.

01:20.200 --> 01:26.780
Load a new post create a new post so to populate all these files and folders.

01:26.920 --> 01:32.210
Let's start with the index that you fall directly in the admin folder.

01:32.380 --> 01:39.130
There I'll add my template and a div where I want to assign a class of admin page so that I can conveniently

01:39.130 --> 01:41.050
style the entire page.

01:41.200 --> 01:43.430
No in there I want to have two sections.

01:43.690 --> 01:52.060
The first section will have new posts as S class and should actually hold some button which says create

01:52.060 --> 01:57.800
posts or something like that and which then simply load the page to create a new post.

01:57.910 --> 02:03.400
Of course we could also use the next link here but I want to route programmatically.

02:03.400 --> 02:07.940
I'll add a second clause with the existing posts.

02:07.990 --> 02:09.070
C as has class.

02:09.080 --> 02:17.080
So a second section I mean with a C as S class and then here all output heading existing posts and below

02:17.110 --> 02:23.620
that I want to output my post list so that I can show my list of posts just as we already do it in other

02:23.620 --> 02:24.190
places.

02:24.290 --> 02:30.000
App with that I'll add my script section here.

02:30.010 --> 02:43.590
There I of course need to import post list so import post list from at component's slash hostes slash

02:43.950 --> 02:49.500
post list and then ask for added to the components property.

02:49.500 --> 02:51.420
In that view object.

02:51.480 --> 02:52.740
So here post lists.

02:52.740 --> 02:55.910
Now we can use that component here in the template.

02:56.430 --> 03:02.730
And of course we need some stylings here because we want to ensure that this page also looks nice and

03:02.740 --> 03:08.730
for that I again prepared some styles which you can simply find attached to this video again.

03:08.730 --> 03:14.510
So here I just added these Frisia as classes which should ensure that this looks OK.

03:14.550 --> 03:15.510
All right.

03:16.800 --> 03:22.630
With that if we save doesn't we go back to our application and click on admen we indeed see our existing

03:22.630 --> 03:23.740
posts here.

03:24.040 --> 03:25.740
So that is looking neat.

03:25.750 --> 03:29.290
Again we get this button but this button isn't doing anything.

03:29.290 --> 03:32.690
It's also not looking beautifully but we can take care about this later.

03:32.830 --> 03:35.120
But again it's not doing anything.

03:35.350 --> 03:42.250
So let's now work on the new host component maybe the new post component should allow us to well create

03:42.250 --> 03:48.040
a new post that should show a form that handles this for dead or create a device which wraps the entire

03:48.040 --> 03:55.310
page admin post page maybe or admin new post page whatever you like.

03:55.320 --> 03:57.950
The class really is the class name is up to you.

03:58.300 --> 04:01.470
And then here I want to have a section with my class.

04:01.570 --> 04:06.400
NEW POST form just in case that you might have multiple sections on the page.

04:06.640 --> 04:09.900
And then there I want to create my for now.

04:09.900 --> 04:17.770
Now that form will of course be created by adding a normal form element and just as we always do it

04:17.770 --> 04:25.300
in the US we won't submit a request for the action attribute here but we want to handle this programmatically

04:25.300 --> 04:33.640
through view so that in the end the request is captured and we can send up behind the scenes HTP request

04:33.640 --> 04:35.100
to do the authentication.

04:35.900 --> 04:44.910
So what this means is that we need to create a couple of inputs here and then have buttons Isay a button

04:44.970 --> 04:51.570
because I want to have a save button if we want to save the post and I want to have a cancel button.

04:51.840 --> 04:59.100
Now regarding the inputs I want to have an input for the content for the title to enter the link to

04:59.100 --> 05:05.850
the thumbnail and also to enter DB all for a name and they don't want to have buttons for as I said

05:05.970 --> 05:08.540
saving and cancelling.

05:08.570 --> 05:15.420
Now I actually will create my own UI components for that because that allows me to conveniently have

05:15.430 --> 05:20.780
pre style input fields and buttons there for the components folder.

05:20.880 --> 05:27.500
I'll create a new UI folder because these components and there will be purely for styling.

05:27.510 --> 05:33.870
Essentially they will wrap default H.T. email components so that we can apply our own default styles

05:34.350 --> 05:37.280
and you can find DS components attached to this video too.

05:37.460 --> 05:39.860
I'll just drag them into the UI folder.

05:40.170 --> 05:47.010
There's the app button component and that again is following the view stalagmites to attach app prefix

05:47.010 --> 05:55.170
to components where we basically set up base components to wrap HVM the elements and use as base components

05:55.170 --> 06:00.030
in our application for basic elements like input elements and so on.

06:00.120 --> 06:06.330
And here we got a button and the button component in our template a normal h him out button where we

06:06.330 --> 06:12.660
pass on any attributes or listeners that we might apply to our own custom component so that we can interact

06:12.660 --> 06:14.350
with our cast and pull components.

06:14.460 --> 06:19.250
Just as with the default button and we just forwarned any attributes we set and so on.

06:19.560 --> 06:25.080
And then we have a couple of default styles set up on the button here so that we can pass this Button's

06:25.080 --> 06:31.970
style property which is a string and which could simply be something like cancel to attach this cancel

06:31.970 --> 06:36.530
see us as class and that is really all in the button just wrapping the button.

06:36.530 --> 06:43.140
Setting up some default styles and allowing us to pick from pre-build styles combinations the app control

06:43.140 --> 06:46.030
input component is a bit more complex.

06:46.110 --> 06:52.320
It's a death with a label that has a slot so that we can enter the label between the opening and closing

06:52.320 --> 06:58.760
tax of our custom component and then it ever renders a normal input.

06:58.890 --> 07:04.310
If we set the control type property to input or it renders a text area.

07:04.320 --> 07:13.590
If we set a text area and then it simply attaches to binding to pass any values we pass to our custom

07:13.590 --> 07:20.140
component onto the wrapped component and that it listens to the default input event and emits it.

07:20.190 --> 07:26.440
So did we basically build our own input control and I covered this in my complete view chess guide.

07:26.520 --> 07:28.790
If you want to learn more about this.

07:28.920 --> 07:33.980
With that I got Ds to custom components and I want to use them in the new host component.

07:33.990 --> 07:40.860
Now there in my forum I want to use all these custom controls and you can find the attached video too.

07:41.040 --> 07:48.330
So I copy that in and here I use my control inputs with the default type of input except for one case

07:48.330 --> 07:50.080
where I set a text area.

07:50.430 --> 07:57.060
I have my labels between the opening and closing text and I have two buttons a cancel button and a normal

07:57.090 --> 07:58.060
save button.

07:58.380 --> 08:02.210
And with that my new host form should look good.

08:02.220 --> 08:07.870
The one thing that will not work is I can't reach it because I haven't connected the button on the index

08:07.870 --> 08:14.670
that you fall in the admin area yet and also all the other methods I try to call here or Vimala which

08:14.670 --> 08:17.100
I tried to bind to edit that post.

08:17.130 --> 08:23.160
That won't work because I prepared to code for you but we haven't added the rest of this component yet

08:23.760 --> 08:30.770
so let's add a script section here and let's now simply add a data method here.

08:31.870 --> 08:38.830
Where we return a new object where we have added that post which should be a javascript object where

08:38.830 --> 08:43.930
we have all these fields where targeting offer tidal thumbnail link and content.

08:44.110 --> 08:48.690
So here I'll add it to your offer is empty at the beginning.

08:48.730 --> 08:51.040
Title is empty at the beginning.

08:51.670 --> 08:55.660
Fun they'll link is empty at the beginning an empty string.

08:55.660 --> 09:01.350
All these are empty strings at the same for content and these are the fields were binding to from our

09:01.360 --> 09:03.500
custom form controls them.

09:03.940 --> 09:08.190
Now I also need two methods on cancell and on safe here.

09:08.200 --> 09:10.540
This however just submits.

09:10.630 --> 09:13.490
So we will have to bind here on our form.

09:13.490 --> 09:19.180
So on the overall form element I want to add the Submit Lisner which is triggered because we're adding

09:19.180 --> 09:22.460
a button of types of matyr in our form.

09:22.510 --> 09:28.240
I actually then want to prevent the default which would be to send the HTP request and I do this by

09:28.240 --> 09:29.920
adding the preven modifier.

09:29.920 --> 09:34.460
A default view feature and it will then call on safe.

09:34.600 --> 09:38.060
Now we just need to pass or at both methods.

09:38.320 --> 09:41.140
So you're in my view component object.

09:41.170 --> 09:48.190
I'll add the methods key and then I will call or will add on save here where I will basically save to

09:48.190 --> 09:54.790
post something I'll add later save the post and then all the have on cancel method.

09:54.790 --> 10:00.440
Here where I want to navigate back essentially.

10:00.610 --> 10:03.480
Now this is my new post component.

10:03.500 --> 10:10.080
Now let's tie them up by going to it when we click on the button in the index that you follow.

10:10.450 --> 10:15.530
And that is actually something we can easily achieve by adding a click listener of here and using the

10:15.560 --> 10:22.990
injected router to normal view router with Dolorosa and router push and then its slash admen slash new

10:23.000 --> 10:30.220
post of course because that is our you are outright admen slash new post index.

10:30.910 --> 10:35.340
So we can now reach that post to go back if we cancel.

10:35.350 --> 10:43.060
I will also use this router in the uncancel method of often you post index that you fall as in all view

10:43.060 --> 10:43.830
components.

10:43.840 --> 10:50.320
We have two axes injected properties with the this keyword on the view component instance and then here

10:50.320 --> 10:54.990
it can also push to just slash admen.

10:55.000 --> 11:02.020
Now what we can do it on save for now is we can send the output out to put this edited post where all

11:02.020 --> 11:04.230
our entered values should be stored.

11:04.600 --> 11:12.700
And with that if we now go back and reload the page and click on Create post we get an error because

11:13.090 --> 11:20.230
our nice components we added which we're using in a new post template haven't been imported yet.

11:20.230 --> 11:22.310
Now that is of course something we should do.

11:22.570 --> 11:32.080
So I'll add imports here to app control input which is the name of one of the components we created

11:32.110 --> 11:35.000
or we imported from apt components.

11:35.020 --> 11:37.990
You are in app control input

11:40.680 --> 11:45.630
and dialler one which I also will add is app button.

11:45.630 --> 11:48.060
So these are the two components I added.

11:48.060 --> 11:53.260
Now we need to add them as local components to this component to this page here.

11:53.370 --> 11:59.320
So I'll add the components key here and then then I'll add app control and put an app button.

11:59.400 --> 12:03.750
And now these elements I'm using here in template should be known.

12:04.050 --> 12:10.620
So now if you reload this or we got a form maybe it's a bit too wide but it'll take care about this.

12:10.890 --> 12:17.310
But what works is we can cancel and go back and we can also enter anything here and click save.

12:17.580 --> 12:22.800
And then just output our object with all these keys here.

12:22.830 --> 12:24.670
So this is working.

12:24.720 --> 12:32.120
Now what I want to do is I want to put this form into its own component though because there is a number

12:32.120 --> 12:34.710
of place where we will also need this.
