WEBVTT

00:02.460 --> 00:07.200
If you worked with your chest for some time you might be aware that you could implement service side

00:07.200 --> 00:09.250
rendering without access.

00:09.360 --> 00:14.040
There is a complete official guide which you can see here which walks you through all the steps you

00:14.040 --> 00:21.660
need to implement to service I render your duets weps and I guess this guide speaks for itself.

00:21.660 --> 00:23.010
Have a look through it.

00:23.010 --> 00:24.500
Does this look easy.

00:24.510 --> 00:26.050
It actually isn't.

00:26.070 --> 00:32.460
I walked through it a couple of times and yes you can get there but it's so much easier with next J.S.

00:32.700 --> 00:38.590
you can't believe it you just create a project which you will see in a second and boom you've got service

00:38.590 --> 00:40.340
at rendering out of the box.

00:40.540 --> 00:43.050
And a lot of other cool features.

00:43.230 --> 00:49.120
So next choice replaces this service and rendering which you could do without it.

00:49.140 --> 00:52.770
That's important you could do it without next but it's easier.

00:52.860 --> 01:00.240
It's highly optimized because a lot of work went into giving you a workflow behind the scenes that does

01:00.240 --> 01:05.360
not just set everything up for suicide rendering but highly optimized all the falls.

01:05.490 --> 01:11.370
You get some optical features like creating a static pre-rendered app something you will learn at the

01:11.370 --> 01:15.740
end of the Chloris when we see how we can deploy our application.

01:15.810 --> 01:20.940
And you got Oracle features like that configuration by folder structure approach.

01:20.940 --> 01:25.430
That is what we use next and not this approach though you could of course do it.

01:25.440 --> 01:30.650
Knox is not reinventing the wheel its just making it better and easier and more fun.
