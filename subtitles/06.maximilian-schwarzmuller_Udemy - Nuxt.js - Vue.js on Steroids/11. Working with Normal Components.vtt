WEBVTT

00:02.130 --> 00:04.800
We had a look at layouts and pages.

00:04.830 --> 00:09.090
Now what about components here again we have dot view files.

00:09.090 --> 00:16.170
So we have three different places where we can see taught view files now components in the components

00:16.170 --> 00:24.210
folder simply are to small re-usable building blocks which will not be rendered as pages but as part

00:24.240 --> 00:25.450
of pages.

00:25.530 --> 00:30.530
So you can use them in your pages or also in your layout an example.

00:30.540 --> 00:37.950
Let me get rid of the logo logo would be let's say a header that you follow there in the template we

00:37.950 --> 00:41.300
could have a header h tim l element.

00:41.460 --> 00:51.090
And here we could now start adding hador things like let's say we add an unordered list with list items

00:51.350 --> 00:57.120
were in the list item we have our next link and that Naks link could go to users here.

00:57.270 --> 01:00.520
So it goes to dot slash users.

01:02.290 --> 01:07.590
And diablerie link maybe the first one goes to just slash home.

01:07.610 --> 01:13.100
Now we could also add some styling here with C-s s and let's add the scope attribute to make sure the

01:13.100 --> 01:15.620
styles only apply to this component.

01:15.620 --> 01:18.830
That's what you typically do for your own components.

01:18.860 --> 01:27.500
We can add a class to that Hetter element here and now in here we could style the header to have with

01:27.500 --> 01:32.510
100 percent height of let's say 60 pixels.

01:32.810 --> 01:36.910
Maybe we use flex blocks in there to distribute the idence evenly.

01:37.870 --> 01:45.220
And we use justify content's center and a line items center to center everything horizontally and vertically

01:45.250 --> 01:47.160
in that flex box.

01:47.200 --> 01:52.170
Now we just need to style our unaware the list Gnab items here.

01:53.080 --> 02:00.610
And I just recognized an error this should be a seperate list item each link should have its own list

02:00.640 --> 02:07.840
item and we could have Nav. items now which are just added so let's add the NAB items class remove the

02:07.840 --> 02:10.930
list styles a set of two Naunton not have bullets.

02:10.930 --> 02:19.640
Remove all padding and margin and all to set the display to flex here to justify contemned could be

02:19.640 --> 02:26.690
space around to add some space within our different list items or line items could be sent here too

02:26.720 --> 02:28.210
for word icles centering.

02:28.250 --> 02:29.830
And that's just using flex box.

02:29.930 --> 02:33.970
I added the link where you can learn more about it at the end of this module.

02:34.430 --> 02:38.330
And finally let's give this a width of let's say 80 percent.

02:38.330 --> 02:44.690
Now we have created a very simple and still not super beautiful but working hetero component and this

02:44.690 --> 02:52.550
is not a cool thing we can use it in our pages so we can go to our main page to index the file and there

02:52.790 --> 02:58.820
we could at our head or a component like this.

02:58.820 --> 03:07.910
Now to use it we need to import it so import header from components header view and add it to components

03:07.910 --> 03:08.470
here.

03:08.600 --> 03:10.040
Header.

03:10.040 --> 03:17.090
Now we should be able to see that when we save that file and we go back to our starting page just localhost

03:17.090 --> 03:18.530
3000.

03:18.530 --> 03:20.640
Now we got our header here.

03:20.990 --> 03:24.290
Now I need to change to the next to fall.

03:24.320 --> 03:29.210
The container here also uses flex blocks and that looks a bit ugly so let's remove the entire style

03:29.210 --> 03:32.720
section in that index file and with that.

03:32.720 --> 03:36.230
Now we got that header at the top and the users link down there.

03:36.230 --> 03:41.750
Now we could make this even clearer by going back and giving the headers some background color so we

03:41.750 --> 03:45.780
could add a background color of some light gray let's say.

03:45.800 --> 03:48.560
And with that it's really clear that we got this letter.

03:48.620 --> 03:51.520
Again not super beautiful but we'll get there.

03:51.530 --> 03:54.110
We'll create a far more beautiful app for it to course.

03:54.110 --> 03:55.360
No worries.

03:55.400 --> 04:00.100
What does work however is we can go to user here and home.

04:00.110 --> 04:08.150
The problem is the header disappears once we enter a different route because we only added to the index

04:08.150 --> 04:09.290
that you fall.

04:09.530 --> 04:17.180
Now we can imported into our faults too and notice the special import poppier Tilda's slash which simply

04:17.180 --> 04:24.020
refers to the root folder so that you don't have to go with dot dot dot dot and have to navigate around

04:24.020 --> 04:31.400
like this so we can copy that import and go to the user's page and also add the import pop into script

04:31.400 --> 04:38.510
section there and also add to component property view understands and registered a header as a component

04:38.510 --> 04:43.600
here too and registering this by the way we're using that NexGen javascript syntax.

04:43.760 --> 04:47.180
Or does this automatically transform to a header header.

04:47.180 --> 04:54.490
So we assign the imported header to a header property which in turn is used as a select or in our template.

04:54.530 --> 04:58.140
So which is it used to our custom HVM l element you could say.

04:58.400 --> 05:05.180
And here we could now add the header like this and this should be components.

05:05.180 --> 05:10.670
Now this will now really look weird if we reload the page because since it's part of that nested route

05:10.790 --> 05:16.820
it actually goes below that input which we have in that userspace here but we could add the component

05:16.820 --> 05:17.350
here too.

05:17.360 --> 05:19.780
We could add the header here instead.

05:19.850 --> 05:26.900
The big approach besides the sub optimal styling which I created like this to save some time is of course

05:26.900 --> 05:31.080
that we have to import that component everywhere we want to use it.

05:31.080 --> 05:34.740
We have to define it as component everywhere we want to use it.

05:34.790 --> 05:37.050
Now there are two solutions to this.

05:37.070 --> 05:38.630
One will be covered later.

05:38.630 --> 05:44.960
When I dive deeper into reusable components the obvious solution here is that we can't just use components

05:44.960 --> 05:45.930
and pages.

05:45.980 --> 05:48.020
Let me remove it from there.

05:48.020 --> 05:56.330
We can also use it in layouts so we can go to the default layout for example and simply edit here add

05:56.420 --> 06:00.490
our header component here and to use it here.

06:00.560 --> 06:04.580
Let's add import go to import here.

06:04.670 --> 06:06.710
Import header from.

06:06.700 --> 06:14.940
And now it's that till the symbol or an at sign both works actually component's header now and sign

06:14.940 --> 06:15.940
in a till the work.

06:15.950 --> 06:17.830
Because these are aliases.

06:17.900 --> 06:18.560
Understood.

06:18.560 --> 06:24.620
Behind the scenes by web PAC which builds the project so this will be replaced with a root folder.

06:24.620 --> 06:31.730
Now I added it with default lay out end of the components property of that view component.

06:31.790 --> 06:37.920
I can then again register header and I can do the same in my users layout.

06:38.000 --> 06:45.470
Your so lets all add a script section here entered the same code and use the header here above.

06:45.590 --> 06:48.670
Users section.

06:48.890 --> 06:54.440
And with that if we go back to the application reload we see the header everywhere because it's now

06:54.440 --> 07:03.770
part of our root layout and that is the important thing in the components folder you create really usable

07:03.800 --> 07:11.810
components normal view components which you plan are using in one or multiple pages or layouts or other

07:11.810 --> 07:12.710
components.

07:12.710 --> 07:18.950
You can also use components and components and then use that component that uses components in a page

07:18.980 --> 07:20.160
for example.

07:20.510 --> 07:29.120
So anything that's not a frame so a layout or rude content of the page that's loaded has to go into

07:29.120 --> 07:34.800
components because you don't want to end up with fat pages where all the logic is in here.

07:34.820 --> 07:38.320
You want to use really usable pages instead.

07:38.900 --> 07:42.460
So that is pages versus layouts versus components.

07:42.500 --> 07:44.170
What about styling now.

07:44.180 --> 07:45.510
Where do you put that.

07:45.560 --> 07:47.630
Because right now the page looks ugly.

07:47.750 --> 07:49.340
So how can we improve this.
