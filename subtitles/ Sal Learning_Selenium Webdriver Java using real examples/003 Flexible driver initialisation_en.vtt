WEBVTT
1
00:00:00.490 --> 00:00:04.990
In this lecture, we take a look at flexible driver initialization.

2
00:00:06.440 --> 00:00:07.970
So what is the current problem?

3
00:00:08.870 --> 00:00:14.180
So we have to write code to nationalize the driver in each and individual class.

4
00:00:15.310 --> 00:00:21.610
If we wanted to switch browser, for example, to use Firefox or Edge, then we'd need to update various

5
00:00:21.610 --> 00:00:22.600
lines of code.

6
00:00:24.150 --> 00:00:27.180
But what happens if we have hundreds of classes to update?

7
00:00:28.920 --> 00:00:33.780
Is it feasible to update each individual class to use the browser of our choosing?

8
00:00:34.530 --> 00:00:35.550
The answer is no.

9
00:00:36.330 --> 00:00:42.810
And if we look at the code example below, it demonstrates just how much code we need within our classes

10
00:00:43.200 --> 00:00:45.620
in order to just use the Chrome browser.

11
00:00:47.890 --> 00:00:50.380
So how can we improve our current design?

12
00:00:51.400 --> 00:00:58.120
We could adopt a similar global very variable solution by store in the browser type, for example Chrome,

13
00:00:58.120 --> 00:01:01.120
Firefox or edge in the properties file.

14
00:01:02.440 --> 00:01:09.340
We can use logic to determine which browser to initialize based on the browser value that is sent to

15
00:01:09.340 --> 00:01:10.390
our test class.

16
00:01:12.070 --> 00:01:14.920
We can do this using f l statements.

17
00:01:16.020 --> 00:01:22.260
For example, I set a browser key and the value of Chrome in the properties file.

18
00:01:24.010 --> 00:01:26.440
Chrome is then sent to the class.

19
00:01:27.990 --> 00:01:34.320
And then the code itself checks to see what browser value has been sent and initialize is the correct

20
00:01:34.320 --> 00:01:36.150
driver based on this value.

21
00:01:38.450 --> 00:01:40.250
So let's implement this improvement.

22
00:01:41.630 --> 00:01:48.110
So in Eclipse I am going to simply copy and paste the two files from the last lecture and I would update

23
00:01:48.110 --> 00:01:50.810
the new versions based on what we're trying to do here.

24
00:01:51.470 --> 00:01:59.060
So I'm going to copy log in Java and call this new 1l0 free underscore, log in and click.

25
00:01:59.060 --> 00:01:59.600
Okay.

26
00:02:00.380 --> 00:02:07.370
And for the Conflict Properties file, I'm going to copy it and paste call in this new one zero free

27
00:02:08.150 --> 00:02:10.130
conflict properties and then click.

28
00:02:10.130 --> 00:02:10.639
Okay.

29
00:02:11.960 --> 00:02:20.190
So I am first going to open up the new config properties file where I have you are l equals the test

30
00:02:20.210 --> 00:02:21.110
or home page.

31
00:02:21.830 --> 00:02:25.040
So I'm going to add a new key value here.

32
00:02:25.670 --> 00:02:31.280
So I'm going to call this browser and it's going to equal chrome.

33
00:02:32.600 --> 00:02:34.430
And then I am going to save this file.

34
00:02:35.500 --> 00:02:36.430
And then close it.

35
00:02:37.670 --> 00:02:43.520
I'm then going to open up the new login Java class where I have the following code.

36
00:02:45.110 --> 00:02:52.340
So this part here is what sets up and initializes the Chrome browser.

37
00:02:53.820 --> 00:03:01.770
So I need a way to flexibly handle this based on the value that I set against the browser key from the

38
00:03:01.770 --> 00:03:03.570
config dot properties file.

39
00:03:04.640 --> 00:03:08.360
So at the moment it only handles the chrome driver.

40
00:03:10.530 --> 00:03:13.530
So the first thing I'm going to do is delete that.

41
00:03:15.250 --> 00:03:23.170
And this part of the code from last lecture handles the imports in of the data from the config dot properties

42
00:03:23.170 --> 00:03:23.620
file.

43
00:03:24.840 --> 00:03:29.280
So I am going to place that higher up in the code, so I'm going to cut it.

44
00:03:30.390 --> 00:03:31.860
And I'm actually going to paste it.

45
00:03:33.040 --> 00:03:33.430
Here.

46
00:03:34.780 --> 00:03:40.720
So this handling of the data from the config policy file will be handled earlier.

47
00:03:41.980 --> 00:03:51.190
This means that I can then use the content from that file to use some logic to initialize the browser

48
00:03:51.190 --> 00:03:52.000
of my choosing.

49
00:03:54.250 --> 00:03:59.470
So the first thing I need to do here is where I have copied and pasted the class.

50
00:03:59.470 --> 00:04:05.380
In the last lecture you'll see that it refers to lecture zero to configure properties.

51
00:04:06.310 --> 00:04:10.900
So I need to change that to zero free to use the new version.

52
00:04:13.650 --> 00:04:21.600
So once that is done and we're importing the data from the config dot properties file, I need to flexibly

53
00:04:21.600 --> 00:04:32.160
or dynamically handle the driver initialization code and I can do this by once again using the prop

54
00:04:32.190 --> 00:04:32.790
object.

55
00:04:33.890 --> 00:04:36.020
So I'm going to use an if statement.

56
00:04:37.150 --> 00:04:40.870
And inside the if statement I'm going to use prop.

57
00:04:42.130 --> 00:04:44.320
Dot get property.

58
00:04:45.680 --> 00:04:51.380
And I'm going to get the property or the value using the key of browser.

59
00:04:55.070 --> 00:04:58.640
And then after that, I am going to use a dot.

60
00:04:59.780 --> 00:05:00.530
Equals.

61
00:05:02.740 --> 00:05:07.450
And I need to provide a value here and I am going to set Chrome.

62
00:05:09.470 --> 00:05:14.390
And outside of that, I am going to add open and close embraces.

63
00:05:15.560 --> 00:05:22.280
So all this if statement is doing is using the object that we've set up here, it's going to go and

64
00:05:22.280 --> 00:05:28.940
get the property of the key of browser and it checks to see if equals Chrome.

65
00:05:30.510 --> 00:05:36.570
If it does, then we need to set the property to use the chrome driver.

66
00:05:38.010 --> 00:05:46.170
So if you remember from our default package early on, we had Chrome Edge and Firefox demos.

67
00:05:47.290 --> 00:05:50.770
So if I open up chrome demo, you'll see.

68
00:05:50.950 --> 00:05:58.900
This is the set property that we use which points to the chrome driver XY file, which is in our resources

69
00:05:58.900 --> 00:05:59.410
folder.

70
00:06:01.130 --> 00:06:02.480
I then use web driver.

71
00:06:02.480 --> 00:06:07.640
Driver equals new chrome driver to initialize the chrome driver object.

72
00:06:08.790 --> 00:06:15.540
So if I was to copy these two lines and go back to the new class and paste it here.

73
00:06:19.050 --> 00:06:22.860
So this will now check to see if the browser key equals Chrome.

74
00:06:23.220 --> 00:06:29.610
And if it does, it will set the system property to use the chrome driver XY file.

75
00:06:31.010 --> 00:06:32.390
And then it sets web driver.

76
00:06:32.390 --> 00:06:35.000
Driver equals new Chrome driver.

77
00:06:36.090 --> 00:06:43.170
But remember, as we've used or set a variable of driver here, we no longer need web driver.

78
00:06:43.410 --> 00:06:47.700
So all we need to do is reference that driver variable to set it.

79
00:06:52.330 --> 00:06:54.820
So that code now will handle Chrome.

80
00:06:56.470 --> 00:07:00.490
So how about if we wanted to handle Firefox?

81
00:07:01.960 --> 00:07:06.190
So what I can do here is use an else if statement.

82
00:07:06.790 --> 00:07:07.150
So if.

83
00:07:07.150 --> 00:07:08.170
I writes else.

84
00:07:08.620 --> 00:07:09.010
If.

85
00:07:11.680 --> 00:07:16.450
And then brackets like so I can quite simply copy.

86
00:07:17.460 --> 00:07:18.330
This code here.

87
00:07:21.460 --> 00:07:23.530
And place it in those brackets.

88
00:07:24.860 --> 00:07:29.000
But instead of chrome I'm going to look for the value of Firefox.

89
00:07:30.900 --> 00:07:33.510
And then I'm going to add open and close embraces.

90
00:07:34.580 --> 00:07:43.970
And like we did for Chrome, if we open up the Firefox demo, you'll see that this set properties refers

91
00:07:43.970 --> 00:07:46.670
to the gecko driver to XY.

92
00:07:47.670 --> 00:07:53.340
And then when we initialize the driver object we use in the Firefox driver.

93
00:07:54.520 --> 00:08:03.370
So again, I am going to copy these two lines and paste it within the LCF braces like so.

94
00:08:04.410 --> 00:08:10.830
And like before we can get rid of web driver and reference the variable set at the top of the class.

95
00:08:15.260 --> 00:08:18.500
So the final thing I can do here is use else.

96
00:08:19.650 --> 00:08:27.040
So how the f l statement works is if it checks for this logic, else it will check for this logic.

97
00:08:27.720 --> 00:08:29.760
Otherwise it will use this logic.

98
00:08:31.580 --> 00:08:35.870
So for the LS parts, all I need to do is have an open and close embrace.

99
00:08:36.770 --> 00:08:40.429
And this is where I need to handle the edge browser.

100
00:08:41.510 --> 00:08:43.250
So if I open up a demo.

101
00:08:44.650 --> 00:08:48.460
You'll see that this one points to the message driver.

102
00:08:49.730 --> 00:08:53.150
And I can quite simply copy these two lines.

103
00:08:54.170 --> 00:08:58.400
Paste it here and again, get rid of the Web driver reference.

104
00:09:03.680 --> 00:09:12.680
So now that I expect to handle the driver initialization based on the convict property value that we

105
00:09:12.680 --> 00:09:13.340
set here.

106
00:09:14.750 --> 00:09:16.970
So I am going to close all these files now.

107
00:09:19.640 --> 00:09:21.410
And demonstrate this to you.

108
00:09:23.460 --> 00:09:28.140
But before I do, there is one error in our code.

109
00:09:28.860 --> 00:09:34.440
And so I'm going to run this file so that you can think to see what the issue is.

110
00:09:35.550 --> 00:09:38.280
So I am going to run the new class.

111
00:09:42.010 --> 00:09:44.140
And you can see that it was skipped.

112
00:09:45.320 --> 00:09:46.400
And there is an error here.

113
00:09:47.910 --> 00:09:51.240
And it's saying no point pointer exception.

114
00:09:52.310 --> 00:09:58.850
And if we look at the code is saying it's occurred on line 27, which is here.

115
00:10:00.360 --> 00:10:02.700
So have a think of why that happened.

116
00:10:06.110 --> 00:10:11.620
So the problem is that where we've handled the initialization of the driver.

117
00:10:12.990 --> 00:10:20.310
We are trying to expand the window before the driver has been initialized.

118
00:10:21.740 --> 00:10:25.880
So what this means is we actually need to move this.

119
00:10:27.310 --> 00:10:31.060
After until the driver has been initialized.

120
00:10:32.800 --> 00:10:39.100
So it's only after the chrome driver, Firefox driver or edge driver has been set.

121
00:10:39.670 --> 00:10:42.400
Can we then expand the browser window?

122
00:10:44.230 --> 00:10:48.310
So if I save this again and try running it one more time.

123
00:10:49.320 --> 00:10:50.430
Let's see what happens.

124
00:10:54.530 --> 00:11:01.190
And you can see this time the Chrome browser has opened and it's gone to the automation test store.

125
00:11:02.380 --> 00:11:04.270
And it's managed to complete the test.

126
00:11:06.860 --> 00:11:10.430
So how about if I change the conflict of properties?

127
00:11:11.410 --> 00:11:16.750
And changed the browser value to Firefox and then saved it.

128
00:11:21.080 --> 00:11:29.140
So now I'd expect this code to execute because the browser key is going to equal Firefox.

129
00:11:30.500 --> 00:11:31.450
So let's give it a try.

130
00:11:38.640 --> 00:11:43.050
And you can see this time the Firefox browser has opened up.

131
00:11:49.290 --> 00:11:52.470
And if I close that and try it one more time.

132
00:11:52.770 --> 00:11:54.150
But this time for edge.

133
00:11:55.500 --> 00:11:56.370
And then save it.

134
00:11:57.540 --> 00:11:59.550
And try one in that class one more time.

135
00:12:00.270 --> 00:12:02.280
Let's see if the edge driver works.

136
00:12:04.140 --> 00:12:06.540
And you can see Edge has opened up.

137
00:12:10.010 --> 00:12:19.790
So this is really a great way of how we can dynamically code the initialization of the browser instance

138
00:12:20.120 --> 00:12:22.730
by use and then if else if statement.

139
00:12:24.150 --> 00:12:29.520
So now we control or we can control what browser to use.

140
00:12:30.030 --> 00:12:35.400
Simply by updating this value in the conflict properties file.

141
00:12:38.000 --> 00:12:39.920
I hope you have found this lecture useful.

142
00:12:40.400 --> 00:12:42.260
And once again, thank you for watching.

