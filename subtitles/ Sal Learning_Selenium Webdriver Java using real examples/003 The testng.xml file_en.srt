1
00:00:00,550 --> 00:00:04,480
In this lecture, we take a look at the test engine XML file.

2
00:00:06,110 --> 00:00:08,720
So what is the test in XML file?

3
00:00:09,620 --> 00:00:12,440
This file is at the heart of test engine.

4
00:00:13,770 --> 00:00:18,600
The This file has many uses, but the main purpose is controlling what should run.

5
00:00:20,060 --> 00:00:25,730
The content relies on XML tags that we use to control what should run its execution.

6
00:00:27,170 --> 00:00:31,250
The content of the file follows a well structured tag hierarchy.

7
00:00:32,509 --> 00:00:37,490
And the test engine example is often placed at the project level of our project.

8
00:00:40,370 --> 00:00:43,160
So where does the test inject Jake Semaphore reside?

9
00:00:44,210 --> 00:00:49,760
In this example, the test in G example has been generated and resides at the project level.

10
00:00:51,240 --> 00:00:58,290
We can in amend the test, inject small file to control what packages or classes or test methods should

11
00:00:58,290 --> 00:00:59,460
run an execution.

12
00:01:01,080 --> 00:01:07,350
This is all done using very simple example codes which are demonstrate later in the following lectures.

13
00:01:09,470 --> 00:01:13,490
So here is an example of the content of a test and XML file.

14
00:01:15,410 --> 00:01:21,320
So you can see that I have sweet tags, which is the name of the suite, and inside it there are test

15
00:01:21,320 --> 00:01:21,860
tags.

16
00:01:22,800 --> 00:01:26,490
And inside that there is class tags with a class listed.

17
00:01:27,360 --> 00:01:33,630
So when I run this test in XML file, it will run this particular class.

18
00:01:37,260 --> 00:01:39,000
So let's look at an example of this.

19
00:01:40,340 --> 00:01:46,100
So in Eclipse, I am going to create two new classes that I'm going to use to demonstrate how we can

20
00:01:46,100 --> 00:01:53,030
use the test in XML file and in the following lectures we'll look at more detail of how we can use the

21
00:01:53,030 --> 00:01:55,130
test in G file for flexibility.

22
00:01:56,250 --> 00:02:02,250
So the first thing I'm going to do is simply copy and paste the lecture from the last one holding this

23
00:02:02,250 --> 00:02:04,320
new one zero free a.

24
00:02:05,730 --> 00:02:10,440
And I'm going to call it test in G, x, eml and then click.

25
00:02:10,440 --> 00:02:10,979
Okay.

26
00:02:12,400 --> 00:02:18,130
And then I'm going to open that class and I'm just going to keep the same structure, but I'm just going

27
00:02:18,130 --> 00:02:20,050
to rename the methods and the output.

28
00:02:20,940 --> 00:02:24,990
So I'm going to call this one method one.

29
00:02:26,500 --> 00:02:27,610
And I'm going to change this.

30
00:02:27,610 --> 00:02:30,730
Hello world from method one.

31
00:02:32,670 --> 00:02:36,420
I'm going to change this one method to.

32
00:02:37,480 --> 00:02:41,380
And it's going to be hello world from method to.

33
00:02:42,760 --> 00:02:44,320
Then on the end to say this class.

34
00:02:45,490 --> 00:02:46,300
And then close it.

35
00:02:47,140 --> 00:02:55,740
Now I am going to copy and paste it and call this sec 1l0 free B and it's got the name of test engine

36
00:02:55,980 --> 00:02:57,520
and all to click.

37
00:02:57,520 --> 00:02:58,030
Okay.

38
00:02:59,640 --> 00:03:01,500
And here I'm just going to change this one.

39
00:03:01,890 --> 00:03:02,820
It's a method free.

40
00:03:03,990 --> 00:03:09,270
And change that to free this one for and change that too for like so.

41
00:03:09,810 --> 00:03:11,730
And then I'm going to say this class to.

42
00:03:14,050 --> 00:03:21,070
So now what I'm going to do is right click on the package and if we go down, we can see we've got a

43
00:03:21,070 --> 00:03:26,020
test n g option and we've got an option to convert to test then G.

44
00:03:27,110 --> 00:03:28,130
So if I click on that.

45
00:03:29,200 --> 00:03:30,370
You'll be shown the following.

46
00:03:31,490 --> 00:03:33,020
And then if I click Finish.

47
00:03:34,490 --> 00:03:37,490
You'll see that testing file has been created.

48
00:03:38,580 --> 00:03:39,780
And if I double click on that.

49
00:03:43,550 --> 00:03:48,710
You'll be presented maybe with a page like this, and if so, you should see a source tab.

50
00:03:49,010 --> 00:03:52,220
And if we click on that, you'll see the actual example.

51
00:03:53,810 --> 00:04:01,220
So if we look at the XML so far, you can see that it references free classes and this particular one

52
00:04:01,460 --> 00:04:03,110
is the one from the last lecture.

53
00:04:04,230 --> 00:04:05,640
So I am going to remove that.

54
00:04:07,070 --> 00:04:10,460
Leave in just the two new classes I've created.

55
00:04:10,940 --> 00:04:13,630
It's 11 zero Friday, and that was every freebie.

56
00:04:14,720 --> 00:04:16,040
And if I save this now.

57
00:04:18,380 --> 00:04:20,269
And enclose this XML file.

58
00:04:21,279 --> 00:04:27,610
If I right click the XML file itself and go to run those tests in G suite, let's see what happens.

59
00:04:32,180 --> 00:04:33,950
So that has now completed.

60
00:04:34,890 --> 00:04:36,930
And if we go to the console.

61
00:04:38,010 --> 00:04:42,030
You'll see that four tests have run and there's four passes.

62
00:04:43,420 --> 00:04:44,380
And if I go up.

63
00:04:45,470 --> 00:04:50,990
If you can see the output, it says Hello World for MiFID free for one and two.

64
00:04:52,580 --> 00:05:01,400
So by using this test SML file, we are able to trigger all the tests that we require in one go.

65
00:05:02,970 --> 00:05:04,590
So if I open up that file again.

66
00:05:05,880 --> 00:05:07,410
And change the ordering of this.

67
00:05:13,810 --> 00:05:22,480
So, Nat, now the ice file or the class runs before the B class if they'll say this now and try running

68
00:05:22,480 --> 00:05:22,930
it again.

69
00:05:24,190 --> 00:05:25,120
Let's see what happens.

70
00:05:28,520 --> 00:05:35,720
And you can see Hello world from method one and two and three and four and those have been run.

71
00:05:37,490 --> 00:05:39,680
But calling in the classes we've just created.

72
00:05:40,630 --> 00:05:43,060
So this test is run followed by this.

73
00:05:44,650 --> 00:05:48,010
And then in the second class, this was number one, followed by this.

74
00:05:49,480 --> 00:05:56,500
So by creating that test testing XML file, we have the ability to run a number of tests in one go.

75
00:05:57,460 --> 00:06:03,600
And in the real world, where you're likely to have, you know, tens or hundreds of test classes,

76
00:06:04,300 --> 00:06:11,170
this gives us the ability now to run tests based on what we are trying to do, for example, in a regression

77
00:06:11,170 --> 00:06:11,650
test.

78
00:06:11,920 --> 00:06:15,550
You may want to run 50 out of 100 test scripts.

79
00:06:16,940 --> 00:06:21,020
And that is now possible by using the test engine XML file.

80
00:06:22,980 --> 00:06:25,050
So that's all I want to cover in this lecture.

81
00:06:25,470 --> 00:06:30,990
And in the next lecture, we'll take a more in-depth look at how we can control what tests are on.

82
00:06:31,650 --> 00:06:32,550
Thank you for watching.

