WEBVTT
1
00:00:00.470 --> 00:00:04.430
In this lecture, we take a look at the eye test list, the interface.

2
00:00:05.930 --> 00:00:08.540
So what is the it's less the interface.

3
00:00:09.470 --> 00:00:14.450
It's an interface we can use to trigger code when a particular event takes place.

4
00:00:15.520 --> 00:00:20.440
For example, I may want my coat to do something if it comes across a failure.

5
00:00:20.860 --> 00:00:22.450
For example, take a screenshot.

6
00:00:24.290 --> 00:00:30.050
The interface has a number of available methods and I provide an example of some of these methods on

7
00:00:30.050 --> 00:00:30.830
the next slide.

8
00:00:32.299 --> 00:00:34.100
We can improvise code for each.

9
00:00:34.160 --> 00:00:37.670
Some or none of these methods, depending on our requirements.

10
00:00:39.610 --> 00:00:43.300
So here is an example of some of the methods and a descriptive meaning.

11
00:00:44.080 --> 00:00:47.170
So there is a method called on test test success.

12
00:00:47.860 --> 00:00:50.800
And this method is called on any test that is successful.

13
00:00:51.970 --> 00:00:57.610
There's a method called on test failure and this method is called an any test has failed and there's

14
00:00:57.610 --> 00:01:01.360
a method name on test script and this method is called on.

15
00:01:01.360 --> 00:01:02.950
Any test has been skipped.

16
00:01:05.310 --> 00:01:08.400
So this is an example of process flow of how it works.

17
00:01:09.680 --> 00:01:11.570
So a test would be executed.

18
00:01:12.080 --> 00:01:15.110
And in this case, I'm using a class called lock in test.

19
00:01:16.600 --> 00:01:19.420
Selenium web driver processes the test.

20
00:01:21.280 --> 00:01:22.990
A test failure occurs.

21
00:01:25.720 --> 00:01:28.420
On Test failure methods event is triggered.

22
00:01:29.320 --> 00:01:33.640
So the on test failure method is triggered from the interface code.

23
00:01:35.930 --> 00:01:37.320
And then log in tests.

24
00:01:37.370 --> 00:01:40.700
Java is connected to the test list the class.

25
00:01:42.150 --> 00:01:49.950
So basically on step free when a test failure occurs, it triggers the method on test failure, and

26
00:01:49.950 --> 00:01:54.660
then we can have code within that method to do something like take a screenshot.

27
00:01:58.740 --> 00:02:03.120
So here is an example of a class that implements on a test list the interface.

28
00:02:04.120 --> 00:02:07.120
So this class implements its listener.

29
00:02:08.410 --> 00:02:10.690
And I have provided a method.

30
00:02:11.670 --> 00:02:18.180
Called On's has failure and this is triggered when a test failure occurs.

31
00:02:18.570 --> 00:02:21.300
In this case, it just prints a message to console.

32
00:02:23.910 --> 00:02:30.180
Connect in a test class to use a class that implements the only test listener interface.

33
00:02:31.350 --> 00:02:34.320
So to set our test class is to use the test list.

34
00:02:34.320 --> 00:02:35.790
The class is easy.

35
00:02:37.290 --> 00:02:41.090
We write our test class the exact same way as we usually do.

36
00:02:42.540 --> 00:02:46.710
However, we need to add a line of code near the top to connect it.

37
00:02:48.990 --> 00:02:56.400
So all we need to write within our test class is at listeners and then provide the name of the class

38
00:02:57.240 --> 00:02:59.130
that implements the interface.

39
00:03:02.800 --> 00:03:04.390
So to give a quick summary.

40
00:03:04.990 --> 00:03:10.540
To use the artist list the interface, we must create a class that implements the test list.

41
00:03:10.540 --> 00:03:11.320
The interface.

42
00:03:13.100 --> 00:03:17.420
We then must have methods and a code to handle the events of interest.

43
00:03:17.690 --> 00:03:19.370
For example, on test failure.

44
00:03:21.160 --> 00:03:27.160
We then need to connect our test class to use the eye test list in the class using the ACT listener's

45
00:03:27.160 --> 00:03:28.000
annotation.

46
00:03:30.070 --> 00:03:36.310
Now, if our test fails, it will trigger the code within the on test failure method from within each

47
00:03:36.310 --> 00:03:36.860
test list.

48
00:03:36.860 --> 00:03:37.540
The class.

49
00:03:39.880 --> 00:03:41.290
Let's see an example of this.

50
00:03:42.830 --> 00:03:47.120
So in this lesson, I am going to be creating two classes.

51
00:03:48.100 --> 00:03:55.870
One class will contain the test code and the other class will contain the code that implements the test

52
00:03:55.870 --> 00:04:00.880
list, the interface, and what code is to trigger when an event occurs.

53
00:04:02.160 --> 00:04:07.830
So the first class, I'm going to simply copy the class from lecture 15 and paste it.

54
00:04:08.810 --> 00:04:18.110
Calling this new one l 17 as we're now in Lecture 17 and I'm going to give it a name of test class like

55
00:04:18.110 --> 00:04:19.820
so and then click okay.

56
00:04:22.210 --> 00:04:31.150
So this simply contains a very simple test where I am failing this particular method using assert or

57
00:04:31.150 --> 00:04:37.750
fail, and this one simply enters a password into the login screen on the store website.

58
00:04:40.010 --> 00:04:45.500
And then going to right click the package and select new class.

59
00:04:46.280 --> 00:04:51.350
And I'm going to call this new class L 17 underscore.

60
00:04:52.600 --> 00:04:56.710
I test listener like so.

61
00:04:57.130 --> 00:04:58.270
And then click finish.

62
00:05:00.020 --> 00:05:02.240
This class would then automatically open.

63
00:05:02.870 --> 00:05:05.090
And so what I need to do next is.

64
00:05:05.090 --> 00:05:05.570
Right.

65
00:05:06.410 --> 00:05:07.240
Implements.

66
00:05:07.790 --> 00:05:09.050
I test.

67
00:05:10.180 --> 00:05:12.040
Listener like so.

68
00:05:13.260 --> 00:05:14.340
After doing that.

69
00:05:14.670 --> 00:05:20.700
And if I hover over that word, you'll see I'm given an option to import it from Test and G.

70
00:05:23.180 --> 00:05:24.680
And that import would then show.

71
00:05:26.320 --> 00:05:34.090
So what I need to now do is use methods that belong to the ETF listener interface, and I can see a

72
00:05:34.090 --> 00:05:41.560
list of methods by clicking on that ISIS listener and then pressing free on my keyboard.

73
00:05:42.590 --> 00:05:47.720
And that will show a list of all the available methods that belong to this interface.

74
00:05:48.110 --> 00:05:53.750
For example, on test starts, on test success and on test failure.

75
00:05:55.700 --> 00:05:59.600
So I'm going to be using the on test failure method.

76
00:06:00.320 --> 00:06:03.500
So I am going to control C and copy that.

77
00:06:04.740 --> 00:06:12.840
And then I am going to paste it within the class like so, but I'm going to remove the photos and instead

78
00:06:12.840 --> 00:06:13.890
use public.

79
00:06:16.300 --> 00:06:20.190
So that is the home test failure method that's ready to use.

80
00:06:20.470 --> 00:06:26.410
And you can see it as a parameter here called result and I'll demonstrate how we can use this parameter

81
00:06:27.010 --> 00:06:28.150
later in the course.

82
00:06:29.550 --> 00:06:33.570
But for now, all I want to do is use system.

83
00:06:34.640 --> 00:06:36.830
Dot out dot prints.

84
00:06:36.830 --> 00:06:37.060
L.

85
00:06:37.070 --> 00:06:37.430
N.

86
00:06:39.380 --> 00:06:45.170
And also want to write here is a simple message saying test has failed.

87
00:06:46.170 --> 00:06:54.420
And this message is from the Why Test listener interface.

88
00:06:55.740 --> 00:06:57.030
A semi-colon at the end.

89
00:06:58.580 --> 00:07:01.790
And now I'm going to simply save this class.

90
00:07:03.960 --> 00:07:05.940
So I'm now going to close that for now.

91
00:07:07.620 --> 00:07:10.470
And I am going to open up the test class.

92
00:07:12.150 --> 00:07:16.650
So here is a method that I'm to into use in a search or fail.

93
00:07:18.380 --> 00:07:26.420
So what I want to do is connect this test class to use the test list the class and the test list in

94
00:07:26.420 --> 00:07:29.990
the class that implements the test list, the interface.

95
00:07:32.330 --> 00:07:33.980
So at the top of the class.

96
00:07:34.190 --> 00:07:39.770
So after the imports, I'm going to add a line using the at.

97
00:07:41.910 --> 00:07:42.600
Listeners.

98
00:07:44.700 --> 00:07:45.690
And in brackets.

99
00:07:46.910 --> 00:07:49.910
And inside these brackets, I'm going to provide the package name.

100
00:07:50.480 --> 00:07:54.100
So section 11 and then the dot.

101
00:07:55.070 --> 00:07:58.460
And then the name of the items list in the class.

102
00:08:00.200 --> 00:08:03.110
And at the end of that, I'm going to write doc class.

103
00:08:04.500 --> 00:08:06.540
And you will see it as an error on the listeners.

104
00:08:06.690 --> 00:08:12.150
And if I hover over it, I'm given the option to import it from Test n g annotations.

105
00:08:14.070 --> 00:08:15.810
And that terror now goes away.

106
00:08:17.070 --> 00:08:20.310
So what I've done here is linked this class.

107
00:08:21.840 --> 00:08:22.350
To.

108
00:08:24.190 --> 00:08:25.780
This particular class here.

109
00:08:27.250 --> 00:08:35.200
And this class here implements the it's this the interface and I've written a method using the on test

110
00:08:35.200 --> 00:08:44.230
failure method which belongs to the test is the interface to trigger this code upon a test failure.

111
00:08:47.080 --> 00:08:50.590
So if I go back to this class now and save it.

112
00:08:54.740 --> 00:08:56.330
And try running this test.

113
00:08:56.900 --> 00:08:58.070
Let's see what happens.

114
00:09:13.090 --> 00:09:14.560
And if I go back to Eclipse.

115
00:09:15.940 --> 00:09:16.750
And scroll up.

116
00:09:17.890 --> 00:09:22.390
You'll see that the code error failure message has been outputted.

117
00:09:23.440 --> 00:09:25.630
But also look what else has been placed here.

118
00:09:27.070 --> 00:09:31.510
Test has failed and this message is from the test this the interface.

119
00:09:33.400 --> 00:09:41.800
So what that has done has proven that when a failure has occurred, this class connects to this class.

120
00:09:42.840 --> 00:09:50.160
And this class implements the test list, the interface where I have used the on test failure method.

121
00:09:51.480 --> 00:09:53.270
And this method gets triggered.

122
00:09:54.770 --> 00:09:56.960
When a test failure occurs.

123
00:09:57.710 --> 00:10:01.190
And that's why this message has been outputted here.

124
00:10:03.630 --> 00:10:09.960
So if I go back to the eye test list the interface by clicking it and then pressing free again.

125
00:10:11.280 --> 00:10:14.370
You'll see that is also on test success.

126
00:10:15.560 --> 00:10:17.090
So if I was to copy this.

127
00:10:18.930 --> 00:10:22.530
And paste this into the it says listener class.

128
00:10:24.410 --> 00:10:27.770
Again change in default to public.

129
00:10:29.190 --> 00:10:36.090
And if I write another message here say in system dots out stock prints out in.

130
00:10:38.000 --> 00:10:44.660
Test has passed from eye test less than art interface.

131
00:10:48.460 --> 00:10:49.420
And saving this.

132
00:10:52.520 --> 00:10:54.830
Now, if I go back to my test class.

133
00:10:56.190 --> 00:10:57.690
This one here passes.

134
00:10:58.500 --> 00:10:59.670
So there's no failure here.

135
00:11:00.850 --> 00:11:02.350
So now I expect.

136
00:11:03.880 --> 00:11:09.760
This method to trigger the onset failure method because it fails.

137
00:11:10.950 --> 00:11:18.330
But I expect this test to trigger the onto test success method because it passes.

138
00:11:19.080 --> 00:11:22.320
So I expect both of these messages to occur in the console.

139
00:11:23.950 --> 00:11:24.790
So let me try it.

140
00:11:36.980 --> 00:11:38.420
And if I go back to Eclipse.

141
00:11:40.210 --> 00:11:41.320
And if I scroll up.

142
00:11:44.920 --> 00:11:45.610
You'll see.

143
00:11:46.730 --> 00:11:48.710
Both messages have appeared.

144
00:11:50.460 --> 00:11:56.610
So this is how we can handle events that occur when we execute our tests.

145
00:11:57.560 --> 00:12:03.140
And we can control what happens by using the oil test list interface.

146
00:12:04.220 --> 00:12:07.880
To do something when a particular event occurs.

147
00:12:09.190 --> 00:12:20.320
So when we come to create in our frameworks, I use on his failure to execute the capture in of a screenshot.

148
00:12:21.550 --> 00:12:29.500
Because I want to record a screenshots of my test when a failure occurs, so I'll have evidence of where

149
00:12:29.500 --> 00:12:30.160
it failed.

150
00:12:32.230 --> 00:12:40.240
So I understand this can be quite confusing, but you'll become more familiar with this as we progress

151
00:12:40.240 --> 00:12:41.140
through the course.

152
00:12:41.770 --> 00:12:48.190
But I hope at least now you have a basic understanding of how we can use the ETF list the interface

153
00:12:48.670 --> 00:12:52.990
to do things when particular events occur during our tests.

154
00:12:54.400 --> 00:12:55.330
Thank you for watching.

