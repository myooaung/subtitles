WEBVTT
1
00:00:01.000 --> 00:00:03.910
In this lecture, we look at locate him by name.

2
00:00:05.140 --> 00:00:08.230
So what is the h html name attribute?

3
00:00:08.950 --> 00:00:11.890
The name attribute specifies a name for the element.

4
00:00:13.350 --> 00:00:14.430
For former elements.

5
00:00:14.610 --> 00:00:18.120
It is also used as a reference when the data is submitted.

6
00:00:19.920 --> 00:00:23.220
We can target an element by using the name value.

7
00:00:25.490 --> 00:00:33.680
If we take a look at the below code snippet we use in driver defined element by dot name and within

8
00:00:33.680 --> 00:00:36.380
the double quotes we provide in the name value.

9
00:00:37.590 --> 00:00:38.910
Let's look at an example.

10
00:00:40.950 --> 00:00:46.890
So I'm going to open up Google Chrome again and I'm going to go to the automation testing decode at

11
00:00:46.890 --> 00:00:47.970
UK website.

12
00:00:49.040 --> 00:00:52.760
And on the home page I'm going to click the Contact US form link.

13
00:00:53.690 --> 00:00:56.270
This should then present the following Contact US form.

14
00:00:57.300 --> 00:01:01.920
I'm then going to press F12 on my keyboard to open up the Chrome developer panel.

15
00:01:02.980 --> 00:01:05.200
I'm then going to select the selector tool.

16
00:01:06.280 --> 00:01:08.860
And then I'm going to click the first name filled.

17
00:01:09.860 --> 00:01:12.950
And if we look at the HTML, you should see it highlighted.

18
00:01:14.110 --> 00:01:20.560
And if we look at the name attributes, we can see that this element has a name value of first underscore

19
00:01:20.560 --> 00:01:21.010
name.

20
00:01:21.610 --> 00:01:24.010
So we can use this in our selenium test.

21
00:01:25.050 --> 00:01:30.960
So I'm going to minimize the browser and I'm going to go back to Eclipse and I'm going to close this

22
00:01:30.960 --> 00:01:32.340
class from last lecture.

23
00:01:33.390 --> 00:01:39.510
But with the class from the last lecture still highlighted, I'm going to press control C in control

24
00:01:39.510 --> 00:01:41.940
V on my keyboard to copy and paste it.

25
00:01:43.540 --> 00:01:46.510
On doing so I need to provide this new class and name.

26
00:01:47.170 --> 00:01:52.900
So by maintaining the naming convention, as explained earlier, I'm going to call this one zero free

27
00:01:52.900 --> 00:01:53.380
for lecture.

28
00:01:53.380 --> 00:01:55.160
Free underscore.

29
00:01:55.720 --> 00:01:59.830
Locate him by name and then click.

30
00:01:59.830 --> 00:02:00.400
Okay.

31
00:02:01.610 --> 00:02:03.270
This one and create the new class.

32
00:02:03.290 --> 00:02:06.950
And if I double click it to open it, you should see the following code.

33
00:02:09.000 --> 00:02:14.490
So there is only minor differences between this code and the code from the previous lecture.

34
00:02:15.270 --> 00:02:20.720
So the first thing is we need to change this, drive a dot, get address to point two, this new contact

35
00:02:20.730 --> 00:02:22.650
us form a web page.

36
00:02:23.070 --> 00:02:28.620
So I'm going to copy that New York URL and I'm going to go back to the class and I'm going to replace

37
00:02:28.620 --> 00:02:29.550
the existing value.

38
00:02:31.180 --> 00:02:31.630
Next.

39
00:02:31.630 --> 00:02:38.050
I need to change the last line of this code because instead of driver find by IP, we can instead use

40
00:02:38.050 --> 00:02:40.120
driver defined by name.

41
00:02:41.330 --> 00:02:46.310
So as we know, the first field has a name value of first underscore name.

42
00:02:46.850 --> 00:02:51.980
So I'm going to highlight that and I'm going to copy it and I'm going to go back to Eclipse.

43
00:02:52.400 --> 00:02:53.810
I'm going to delete this line.

44
00:02:55.510 --> 00:02:57.250
And I'm going to write Driver.

45
00:02:59.720 --> 00:03:00.110
Dot.

46
00:03:00.440 --> 00:03:01.580
Find element.

47
00:03:06.080 --> 00:03:06.410
Thoughts?

48
00:03:06.530 --> 00:03:07.070
Name?

49
00:03:09.470 --> 00:03:12.320
And inside the brackets and within double quotes.

50
00:03:13.320 --> 00:03:15.570
I'm going to place that name value.

51
00:03:16.590 --> 00:03:20.190
And then at the end of this line, I'm going to add a semicolon.

52
00:03:21.880 --> 00:03:25.540
So I need to prove that we are now interacting with the correct elements.

53
00:03:26.020 --> 00:03:29.950
In the last lecture, I did this using the Click Command because it was a button.

54
00:03:30.640 --> 00:03:34.270
But as it is a text field, I'm going to use a command called Dot.

55
00:03:34.420 --> 00:03:40.300
Send keys and send keys allows us to send a text value to an element.

56
00:03:41.020 --> 00:03:44.950
So I'm going to sing saying keys and in brackets and we've been double quotes.

57
00:03:45.220 --> 00:03:50.440
I'm going to provide a string value of ABC D and a semicolon that ended that line.

58
00:03:52.760 --> 00:03:56.300
I'm then going to press control s on my keyboard to save this class.

59
00:03:57.050 --> 00:04:02.930
If we quickly go over the last line of code again, I'm using by a name to search for an element that

60
00:04:02.930 --> 00:04:09.290
has a name value of first underscore name and same keys is a command that we can use to send a string

61
00:04:09.290 --> 00:04:10.640
value to an element.

62
00:04:12.000 --> 00:04:18.120
So I'm going to right click this class select run as and select Java application and let's see what

63
00:04:18.120 --> 00:04:18.630
happens.

64
00:04:20.970 --> 00:04:26.520
So we can see that the string value of ABCD has been sent to that first element.

65
00:04:27.210 --> 00:04:29.250
So we know our code works correctly.

66
00:04:30.920 --> 00:04:35.510
So this is how we can interact with elements using the name attributes.

67
00:04:36.140 --> 00:04:37.070
Thank you for watching.

