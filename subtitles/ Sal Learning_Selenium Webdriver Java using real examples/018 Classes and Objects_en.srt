1
00:00:00,610 --> 00:00:05,740
So in this lecture we take a look at Java classes and objects in more detail.

2
00:00:07,790 --> 00:00:13,010
Classes alongside objects at the heart of object orientated programming.

3
00:00:14,280 --> 00:00:16,110
Think of a cross as a blueprint.

4
00:00:16,710 --> 00:00:19,740
While an object is a real instance of that blueprint.

5
00:00:20,100 --> 00:00:24,960
For example, we might have blueprints that describes the properties of a house.

6
00:00:25,620 --> 00:00:26,970
And this is like a class.

7
00:00:28,180 --> 00:00:34,120
We then might actually build houses based on the blueprint, and each one of these will be a new object.

8
00:00:35,810 --> 00:00:38,090
The class might define the properties of the house.

9
00:00:38,510 --> 00:00:44,720
For example, it will have windows and doors, but each object based on the class might set the number

10
00:00:44,720 --> 00:00:45,800
of windows and doors.

11
00:00:48,290 --> 00:00:50,030
So look at the class on the left.

12
00:00:52,600 --> 00:00:55,210
This is a blueprints for basic house.

13
00:00:56,530 --> 00:00:57,640
There are three fields.

14
00:00:58,420 --> 00:00:59,410
Number of doors.

15
00:00:59,800 --> 00:01:00,880
Number of windows.

16
00:01:01,030 --> 00:01:02,230
A number of bedrooms.

17
00:01:03,400 --> 00:01:06,640
There is a constructor to set the object that attributes.

18
00:01:08,140 --> 00:01:13,030
There are no free methods which simply return the number of doors, windows and bedrooms.

19
00:01:16,100 --> 00:01:21,560
So if we look at this diagram on the left hand side, we have a class called House.

20
00:01:22,740 --> 00:01:26,790
I then create two objects house one and house two.

21
00:01:27,630 --> 00:01:34,260
And if we look at the fields and properties of house one, you'll see that it has two doors, eight

22
00:01:34,260 --> 00:01:36,330
windows and three bedrooms.

23
00:01:37,300 --> 00:01:42,910
Where Object two has free doors, ten windows and four bedrooms.

24
00:01:44,510 --> 00:01:51,890
So although these objects are instances of the class house, the objects themselves can have differing

25
00:01:51,890 --> 00:01:53,270
properties and values.

26
00:01:56,040 --> 00:01:57,750
So let's see an example of this.

27
00:01:59,480 --> 00:02:05,660
So I thought it'd be a good opportunity for us to use a new idea just for this lecture.

28
00:02:06,050 --> 00:02:11,690
And then it's up to you if you wish to use it going forward for some of the Java videos or for some

29
00:02:11,690 --> 00:02:12,650
practice perhaps.

30
00:02:13,520 --> 00:02:16,310
So in Google, I'm going to type bluejay.

31
00:02:17,670 --> 00:02:20,700
And the first option you should be given is to bluejay or talk.

32
00:02:21,760 --> 00:02:25,930
So if I click that link, you'll see that we've got options to download it.

33
00:02:27,300 --> 00:02:33,690
But at the time of recording this video, version five is the latest version, and I do know that there

34
00:02:33,840 --> 00:02:36,900
are a few bugs that are being worked on to be fixed.

35
00:02:37,530 --> 00:02:45,880
So what I recommend to do is click on previous versions or source code and find version 4.22.

36
00:02:46,860 --> 00:02:49,200
And here you have your install options.

37
00:02:50,040 --> 00:02:51,510
So I'm using windows.

38
00:02:51,660 --> 00:02:57,540
So I am going to use the Messiah installer and that will begin the download process.

39
00:02:58,500 --> 00:03:00,840
So I'm going to pause the video here until that's done.

40
00:03:02,400 --> 00:03:04,050
Sinatra has finished downloading.

41
00:03:04,170 --> 00:03:05,520
I'm going to click the installer.

42
00:03:06,450 --> 00:03:08,760
And then it should start the installation process.

43
00:03:09,570 --> 00:03:11,370
So I'm just going to click next.

44
00:03:12,500 --> 00:03:13,250
Next again.

45
00:03:14,770 --> 00:03:15,400
Next.

46
00:03:16,520 --> 00:03:20,420
Leave the default path as the as the value shown.

47
00:03:20,540 --> 00:03:22,250
Click next and then click install.

48
00:03:23,230 --> 00:03:25,270
And this will begin the installation.

49
00:03:26,680 --> 00:03:28,330
So again, I'm just going to pause the video.

50
00:03:29,950 --> 00:03:34,000
And then you should see the following screen that says the installation has completed.

51
00:03:34,540 --> 00:03:38,350
So now I'm going to click Finish and I can close the browser.

52
00:03:39,560 --> 00:03:44,720
So on my desktop, you should say on your desktop you should see a Blue J icon and if we double click

53
00:03:44,720 --> 00:03:47,210
that, it should open up bluejay.

54
00:03:48,880 --> 00:03:52,230
So you can see here there is a house class.

55
00:03:52,270 --> 00:03:58,300
And the reason for this is I've already written this house class for you to save time, taking you through

56
00:03:58,660 --> 00:03:59,710
me writing the code.

57
00:04:00,670 --> 00:04:05,080
So if I double click on this class, you'll see the code that I have written.

58
00:04:06,030 --> 00:04:12,240
So like I showed you in the slides, I've created free private fields of type integer for number of

59
00:04:12,240 --> 00:04:14,850
windows, number of doors, a number of bedrooms.

60
00:04:15,750 --> 00:04:21,600
I've created the constructor and provided free parameters, and it's parameters of windows, doors and

61
00:04:21,600 --> 00:04:22,200
bedrooms.

62
00:04:22,980 --> 00:04:29,850
And then when I create is class and, and set values for for this constructor, it will then place those

63
00:04:29,850 --> 00:04:31,200
values into the fields.

64
00:04:33,540 --> 00:04:38,400
Then below I have free simple methods and these are getter methods.

65
00:04:38,610 --> 00:04:39,660
So it's returning.

66
00:04:39,870 --> 00:04:44,340
Forget windows, the filled number of windows and the same for doors and bedrooms.

67
00:04:45,500 --> 00:04:47,480
So I am going to close this now.

68
00:04:48,260 --> 00:04:55,490
And what I'm going to do is if I right click and click new house, you'll see the constructor is telling

69
00:04:55,490 --> 00:04:57,200
me to provide values.

70
00:04:57,860 --> 00:05:00,650
So a number of windows I am going to write ten.

71
00:05:01,710 --> 00:05:07,530
Number of doors on the right free, a number of bedrooms on the right four and then click.

72
00:05:07,530 --> 00:05:08,070
Okay.

73
00:05:09,260 --> 00:05:12,300
And you'll see on this bottom panel, this is an object panel.

74
00:05:12,920 --> 00:05:18,170
So if I create another object, so for a second house, this one's going to have 12 windows.

75
00:05:18,680 --> 00:05:20,240
It's going to have four doors.

76
00:05:20,780 --> 00:05:22,340
And it's going to have six bedrooms.

77
00:05:22,730 --> 00:05:23,150
And click.

78
00:05:23,150 --> 00:05:23,660
Okay.

79
00:05:25,630 --> 00:05:28,840
So these objects if we double click these.

80
00:05:30,170 --> 00:05:34,310
You'll see that you'll be able to see the values of those fields now.

81
00:05:35,120 --> 00:05:38,270
So the constructor has placed those values.

82
00:05:39,840 --> 00:05:44,040
And is assigned those values to the fields of that particular object.

83
00:05:45,780 --> 00:05:49,800
So if I double click this one as well, and we'd have these side by side.

84
00:05:50,790 --> 00:05:51,000
I try.

85
00:05:51,000 --> 00:05:51,750
Just minimize that.

86
00:05:54,170 --> 00:05:56,660
So look at house one and then look at house two.

87
00:05:58,050 --> 00:06:04,710
So by using the constructor, when I create the object and then assign values to those parameters of

88
00:06:04,710 --> 00:06:13,680
the constructor, and that constructor will then create or it will it will assign the values up, avoid

89
00:06:14,520 --> 00:06:17,010
to the fields of that particular object.

90
00:06:19,980 --> 00:06:24,810
So I hope that's a good visual representation of how objects function.

91
00:06:26,630 --> 00:06:32,990
So if we go back to Blue Jay, this is the class and these are the objects that we create, the object

92
00:06:32,990 --> 00:06:41,150
instances of that class and each object, although they are familiar or a similar in terms of what fields

93
00:06:41,150 --> 00:06:47,660
and what methods they have, the actual values themselves that we assign belong to three object.

94
00:06:49,610 --> 00:06:55,430
So if you ever wanted to use this idea for practice, if you want to create your own class, all you

95
00:06:55,430 --> 00:06:57,920
need to do is click this new class button.

96
00:06:58,970 --> 00:07:00,830
Select the type of class that you want.

97
00:07:00,950 --> 00:07:03,020
So we're mostly going to use class anyway.

98
00:07:03,470 --> 00:07:08,600
And then you need to provide a name such as what should I call it?

99
00:07:08,780 --> 00:07:09,190
Call.

100
00:07:09,470 --> 00:07:11,500
For example, an organic.

101
00:07:11,510 --> 00:07:17,060
Okay, you'll see a class, a car class is being created which if you double click.

102
00:07:18,320 --> 00:07:20,840
You're provided with some default sample code.

103
00:07:21,380 --> 00:07:22,550
You simply delete that.

104
00:07:23,870 --> 00:07:25,220
Then you can write your code here.

105
00:07:26,410 --> 00:07:30,730
Once you've written your code, if you click the compile button, that will then check to see if there's

106
00:07:30,730 --> 00:07:31,930
any syntax errors.

107
00:07:32,800 --> 00:07:37,570
If there isn't any syntax errors, you'll get a label saying no syntax error was found.

108
00:07:38,380 --> 00:07:43,750
And then if you close that panel and right click that class, you'll be able to create an object instance

109
00:07:43,750 --> 00:07:44,050
of it.

110
00:07:45,840 --> 00:07:48,030
So this is a really cool idea.

111
00:07:48,040 --> 00:07:53,430
And you and it used to be used when I was studying computer science at the time, and I'm sure it's

112
00:07:53,430 --> 00:08:00,270
still used today, but it's really good to get a visual representation of how objects and classes interact

113
00:08:00,750 --> 00:08:03,480
and how classes interact with other classes to.

114
00:08:04,620 --> 00:08:06,440
So I hope you found this lecture useful.

115
00:08:06,960 --> 00:08:08,100
And thank you for watching.

