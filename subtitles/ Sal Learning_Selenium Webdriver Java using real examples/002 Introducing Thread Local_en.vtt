WEBVTT
1
00:00:00.540 --> 00:00:07.470
In this lecture, I introduce you to Fred Local and I explain how we can use Fred Local to resolve our

2
00:00:07.470 --> 00:00:08.460
common issues.

3
00:00:10.190 --> 00:00:11.900
So what is Fred Local?

4
00:00:12.900 --> 00:00:19.410
The Java Fred local class enables you to create variables that can only be read and written by the same

5
00:00:19.410 --> 00:00:19.890
friend.

6
00:00:21.480 --> 00:00:23.760
A Fred is a unit of execution.

7
00:00:24.060 --> 00:00:28.290
And so multiple threads can execute the same code at the same time.

8
00:00:30.080 --> 00:00:37.850
So if two friends, for example, tests are executed in the same code and the code has a reference to

9
00:00:37.850 --> 00:00:43.010
the same Fred local variable, the two friends cannot see each other's variables.

10
00:00:44.900 --> 00:00:51.340
This can resolve the static web drive issue where resources are currently being shared, which is confusing

11
00:00:51.350 --> 00:00:52.210
our tests.

12
00:00:54.430 --> 00:00:56.170
So how does Fred local work?

13
00:00:57.070 --> 00:01:00.160
So if we look on the left hand side, we have Fred one.

14
00:01:00.910 --> 00:01:05.890
And in this example, Fred, one is responsible for running the or the complete test.

15
00:01:06.990 --> 00:01:13.590
Fred, one will have a set of variables that can only be accessible by Fred, one such as its own web

16
00:01:13.590 --> 00:01:14.580
driver variable.

17
00:01:16.460 --> 00:01:21.560
Fred, too is responsible for running the ad remove item basket test.

18
00:01:22.400 --> 00:01:29.480
So Fred Tube will have a set of variables they can only be accessible by Fred to it will not be able

19
00:01:29.480 --> 00:01:31.550
to see the Fred one variables.

20
00:01:34.120 --> 00:01:37.540
These friends can then create their own version of the web.

21
00:01:37.570 --> 00:01:37.930
Driver.

22
00:01:37.930 --> 00:01:38.950
Driver variable.

23
00:01:39.950 --> 00:01:46.100
And because each Fred is responsible for managing its own variables, it means our test should no longer

24
00:01:46.100 --> 00:01:47.290
become confused.

25
00:01:49.980 --> 00:01:54.420
So on this slide I provide the most common thread local methods.

26
00:01:55.020 --> 00:01:55.560
So we have.

27
00:01:55.560 --> 00:01:56.850
Get set.

28
00:01:57.120 --> 00:01:58.920
Remove an initial value.

29
00:02:00.150 --> 00:02:06.000
The Get method simply returns the value of the FRED local variable that we're retrieving.

30
00:02:07.170 --> 00:02:11.790
The set method allows us to set a value of a specified variable.

31
00:02:13.200 --> 00:02:19.770
The Remove method removes the current Fred's value for this particular Fred local variable, and the

32
00:02:19.770 --> 00:02:25.860
initial value simply returns the current Fred's initial value for this Fred local variable.

33
00:02:27.340 --> 00:02:32.980
So that can seem quite confusing, but the most common methods that will be using is get and set.

34
00:02:33.790 --> 00:02:40.510
So when we use the Get Fred local method, we simply after the value of a variable that belongs to a

35
00:02:40.510 --> 00:02:41.440
particular Fred.

36
00:02:42.640 --> 00:02:49.210
And when we use a set method, we simply want to set a variable value for the particular Fred that's

37
00:02:49.210 --> 00:02:49.800
in scope.

38
00:02:53.300 --> 00:02:59.600
So now that we have a brief understanding of Fred Local, I'll explain the changes we need to make in

39
00:02:59.600 --> 00:03:00.890
the following lectures.

40
00:03:01.520 --> 00:03:02.450
Thank you for watching.

