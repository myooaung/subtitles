1
00:00:00,610 --> 00:00:02,080
Welcome to the next lecture.

2
00:00:02,620 --> 00:00:08,620
In this lecture, we'll be taking a closer look at the Apache dependency and would also download and

3
00:00:08,620 --> 00:00:11,470
install the dependency into our live project to.

4
00:00:13,030 --> 00:00:20,110
Apache spyware is a popular application programming interface that allows developers to create, modify

5
00:00:20,170 --> 00:00:23,530
and display and message office files using Java.

6
00:00:25,010 --> 00:00:31,090
It is an open source library developed by Apache Software Foundation, allowing developers to interact

7
00:00:31,100 --> 00:00:33,380
and modify Microsoft Office files.

8
00:00:34,760 --> 00:00:42,020
Apache POI comes bundled with classes of methods to convert user input data or file into MSC office

9
00:00:42,020 --> 00:00:42,710
documents.

10
00:00:44,710 --> 00:00:52,390
Apache Po y contains classes of methods to work on only two compound documents of an office.

11
00:00:53,660 --> 00:00:58,850
The only to follow type is primarily associated with Microsoft Office by Microsoft.

12
00:01:00,120 --> 00:01:06,840
Only stands for Objet Lincoln and Embedded, which is the format used for Microsoft Office files.

13
00:01:08,450 --> 00:01:10,190
Two key components from Apache.

14
00:01:10,460 --> 00:01:18,920
Why we are interested in are HSF, which stands for horrible spreadsheet format, which is used to read

15
00:01:18,920 --> 00:01:26,630
and write to excel as formats, which is the old version of Excel and Access as F, which stands for

16
00:01:26,630 --> 00:01:32,630
Excel spreadsheet format, which is used for the more modern dots Excel ASX formats.

17
00:01:35,550 --> 00:01:42,420
So we'll be focusing on the Excel format, which is the new Excel formats released in 2007.

18
00:01:43,140 --> 00:01:47,610
It is the most common type of Excel file and it has over 1 million rows.

19
00:01:48,480 --> 00:01:49,620
So what will be code in?

20
00:01:49,620 --> 00:01:52,090
It will be for the new format of Excel.

21
00:01:52,710 --> 00:01:58,710
So we're not interested in the old Excel format, which is the old version of Excel, which is less

22
00:01:58,710 --> 00:02:00,000
commonly used these days.

23
00:02:02,750 --> 00:02:07,990
So if you wanted to read more about the Apache components, you can do so by visiting the following

24
00:02:08,020 --> 00:02:08,630
neural.

25
00:02:09,780 --> 00:02:12,740
The highlighted row is the component we need to use.

26
00:02:12,780 --> 00:02:23,460
Interact with the dots, excel s x file type taken out of the MAVEN artifact id which is this poi xml.

27
00:02:26,430 --> 00:02:30,900
So we'll be sauce in our dependency from the end the end repository websites.

28
00:02:31,530 --> 00:02:34,830
And the dependency will be downloaded is highlighted on my screen.

29
00:02:35,610 --> 00:02:41,340
So the key thing is, is that there's multiple Apache pure white dependencies, but the one that we're

30
00:02:41,340 --> 00:02:49,440
interested in is the one that's got the ark type by de poi hyphen XML, which is the one we need to

31
00:02:49,440 --> 00:02:52,350
use in the modern day version of Excel spreadsheets.

32
00:02:54,130 --> 00:02:55,870
Celeste installed a dependency.

33
00:02:57,280 --> 00:02:58,090
On my screen.

34
00:02:58,090 --> 00:03:05,470
I have a clips open and you can see I have live project to expand it so I need to go and find the Apache

35
00:03:05,470 --> 00:03:08,590
PWA dependency and add it to my pom file.

36
00:03:09,040 --> 00:03:11,590
And this pom file belongs to my project to.

37
00:03:12,640 --> 00:03:16,990
So I'm going to open up Chrome and I'm going to search for ambient repository.

38
00:03:18,160 --> 00:03:21,580
And then the first result would be to MBM repository dot com.

39
00:03:22,330 --> 00:03:24,040
And here I'm going to search for.

40
00:03:25,100 --> 00:03:26,550
Apache prior.

41
00:03:28,280 --> 00:03:33,230
So you see a number of results here, but it's very important you select the right type.

42
00:03:33,860 --> 00:03:41,510
The one we need is this one here, which is why if an example, if we click this link, you'll see the

43
00:03:41,510 --> 00:03:42,560
latest versions.

44
00:03:43,600 --> 00:03:49,270
So I'm going to use the latest version available is time of recording, which is 5.2.0.

45
00:03:50,980 --> 00:03:53,200
I'm then going to copy the maven dependency.

46
00:03:54,390 --> 00:03:55,140
But they're in control.

47
00:03:55,170 --> 00:03:59,040
See on my keyboard and then I'm going to add it to my pom file.

48
00:04:00,100 --> 00:04:02,510
If I go down, this is the dependency section.

49
00:04:02,930 --> 00:04:08,030
So I'm going to add it at the bottom just before the close in dependencies tag.

50
00:04:08,670 --> 00:04:13,670
If I press control shift in for my keyboard, it will form a code for me.

51
00:04:14,900 --> 00:04:16,350
They're going to save this file.

52
00:04:17,740 --> 00:04:21,730
If you look at the bottom right hand corner, you should see an installation has taken place.

53
00:04:23,850 --> 00:04:25,110
So now it completed.

54
00:04:25,410 --> 00:04:29,670
We have now added the Apache pillar dependency to our project.

55
00:04:30,540 --> 00:04:32,850
So one other thing I've spotted in this poem.

56
00:04:33,120 --> 00:04:38,730
If we scroll right to the top is that because we have copied I have project two from my Project one.

57
00:04:39,330 --> 00:04:42,780
This file is still referring to Projects one in this name.

58
00:04:43,140 --> 00:04:48,960
So I'm going to change that to my project two and also the artifact I.D. I'm going to change the Life

59
00:04:48,960 --> 00:04:51,960
Project two and then going to save this file.

60
00:04:52,890 --> 00:04:54,470
And that's all the updates complete.

61
00:04:55,410 --> 00:04:59,280
So we've now added the Apache pillar to our Life Project two.

62
00:05:00,030 --> 00:05:04,470
And so in the next lecture, we're going to learn about what this test is going to involve.

