1
00:00:00,530 --> 00:00:03,330
In this lecture, we take a look at data provider.

2
00:00:04,580 --> 00:00:05,900
So what is testing?

3
00:00:06,080 --> 00:00:07,070
Data provider.

4
00:00:08,240 --> 00:00:12,950
Data provider allows us to send more than one set of data to our test cases.

5
00:00:14,220 --> 00:00:20,340
For example, say we had free username and password combinations that we wanted to test with the log

6
00:00:20,340 --> 00:00:21,990
in functionality of a website.

7
00:00:23,450 --> 00:00:28,100
You might think we need to run the test individually three times for each test combination.

8
00:00:29,440 --> 00:00:36,490
Luckily test n g provides functionality using the at data provider annotation to send more than one

9
00:00:36,490 --> 00:00:38,350
set of data at execution.

10
00:00:40,640 --> 00:00:45,350
Will be stored in our sets of data in something called a multi dimensional array.

11
00:00:46,710 --> 00:00:51,870
This will be an array that stores object pairs, for example, an email address and password.

12
00:00:53,370 --> 00:00:54,960
And if we look at the below image.

13
00:00:56,380 --> 00:01:02,740
You'll see that this consists of two columns column zero and column one and four rows.

14
00:01:02,740 --> 00:01:04,660
So row zero to row free.

15
00:01:05,960 --> 00:01:14,420
Now IMO zero in column zero I might store my first email address and in row zero column one I might

16
00:01:14,420 --> 00:01:15,920
store my first password.

17
00:01:16,880 --> 00:01:24,140
And in row one column zero, I might store my second email address and in column one, row one, I might

18
00:01:24,140 --> 00:01:25,940
store my second password.

19
00:01:26,990 --> 00:01:29,120
Old men use the row data.

20
00:01:29,630 --> 00:01:35,150
So both column zero and column one, which contains the email address and password.

21
00:01:35,870 --> 00:01:38,240
In my test at test execution.

22
00:01:39,140 --> 00:01:43,460
And then I'll send row one for my second test execution.

23
00:01:45,220 --> 00:01:49,540
So I'd explain this more as I provoke provide an example later on.

24
00:01:49,900 --> 00:01:56,380
But for now, just know that I'll be using multi dimensional arrays to store objects which will contain

25
00:01:56,380 --> 00:01:57,040
values.

26
00:01:59,700 --> 00:02:06,480
So this is a screenshot of some code where I am using a multi dimensional dimensional array.

27
00:02:07,460 --> 00:02:13,010
So don't worry if this appears confusing, as it will become clearer when I demonstrate the use of this.

28
00:02:13,760 --> 00:02:19,550
But the key thing I want you to know from this is look how I've split the data into sets.

29
00:02:20,210 --> 00:02:24,260
So dataset one, dataset two, and dataset three.

30
00:02:25,400 --> 00:02:31,910
The first number in the square brackets refers to the row number, and the second number refers to the

31
00:02:31,910 --> 00:02:32,750
column number.

32
00:02:33,710 --> 00:02:42,500
So in data 0000 column zero I'm still in the value of test that test outcome which is an email address.

33
00:02:43,610 --> 00:02:52,190
And in the second one, so wrote zero column one I'm stored in a password value and those two will make

34
00:02:52,190 --> 00:02:53,690
up my first data set.

35
00:02:54,800 --> 00:03:02,090
And in my second example I'm use in row one column zero and it store in test that test dot com.

36
00:03:03,320 --> 00:03:11,090
And in VO one column one I'm storing my second password and these two will be combined to make up my

37
00:03:11,090 --> 00:03:12,200
data set to.

38
00:03:14,600 --> 00:03:15,110
So.

39
00:03:16,530 --> 00:03:17,700
How does it work?

40
00:03:18,780 --> 00:03:25,020
We need to use the data provider annotation when writing code to set the multidimensional right in our

41
00:03:25,020 --> 00:03:25,950
test class.

42
00:03:27,550 --> 00:03:32,590
We then assign data to particular columns and rows in the multi dimensional array.

43
00:03:34,390 --> 00:03:38,170
The test engine example doesn't require any special tags.

44
00:03:39,540 --> 00:03:45,120
We simply run our tests, and the tests were executed until all data sets are exhausted.

45
00:03:47,250 --> 00:03:48,900
So let's see an example of this.

46
00:03:50,560 --> 00:03:57,730
In this demo, I am going to use the store log in page and I'm going to send free sets of email, address

47
00:03:57,730 --> 00:04:01,840
and password combinations to log in at test execution.

48
00:04:03,120 --> 00:04:08,640
So I'm going to go back to Eclipse and I'm going to simply copy and paste the class from the last lecture.

49
00:04:09,500 --> 00:04:16,700
Calling this new one l 12 and given a name of data provider like so.

50
00:04:18,230 --> 00:04:24,230
And then going to open up this class and most of this class is going to remain the same as the previous.

51
00:04:25,070 --> 00:04:29,030
But the first change I'm going to make is leads in this parameters line.

52
00:04:31,190 --> 00:04:37,370
I'm then going to create a new method which is going to start setting up the multi dimensional array.

53
00:04:38,330 --> 00:04:44,810
So the first thing I'm going to do is use the at data provider annotation.

54
00:04:45,890 --> 00:04:50,580
And if I hover over that, I'm given an option to import it from Test and G.

55
00:04:52,840 --> 00:04:55,660
So the method that I'm going to create is public.

56
00:04:56,960 --> 00:04:58,580
Object with a capital O.

57
00:05:01,100 --> 00:05:03,710
Followed by two pairs of square brackets.

58
00:05:05,240 --> 00:05:09,890
Then I'm going to give the Mefford a name and I'm going to call this Get Theta.

59
00:05:10,940 --> 00:05:12,290
Followed by round brackets.

60
00:05:13,890 --> 00:05:15,840
And in an open and close embrace.

61
00:05:17,280 --> 00:05:20,160
So you can see it as an error underneath the method name.

62
00:05:20,790 --> 00:05:25,350
And this is because I need to add a return statement, which is something I'll do in a moment.

63
00:05:27,090 --> 00:05:31,470
So in the first line of this method, I'm going to write object.

64
00:05:34,220 --> 00:05:36,890
And then two pairs of square brackets.

65
00:05:38,500 --> 00:05:40,470
And I'm going to give it a name of data.

66
00:05:41,500 --> 00:05:42,280
Equals.

67
00:05:43,790 --> 00:05:49,880
New object and again, two pairs of square brackets.

68
00:05:51,180 --> 00:05:53,670
And at the end of that line, I'm going to add a semicolon.

69
00:05:55,110 --> 00:06:01,890
So in this here in these square brackets is where I need to set up the size of the rows and columns.

70
00:06:02,880 --> 00:06:05,250
So I need three rose.

71
00:06:06,250 --> 00:06:07,330
And two columns.

72
00:06:09,060 --> 00:06:11,900
And once I enter that, the error goes away.

73
00:06:14,620 --> 00:06:18,250
So under this I am going to add my first data set.

74
00:06:18,700 --> 00:06:25,000
So I am going to add a comment just so I know, and I'm going to call this data set one.

75
00:06:27,460 --> 00:06:33,910
And to set the date a set of one, I am going to use the data object that I created above.

76
00:06:35,380 --> 00:06:37,810
And two square brackets.

77
00:06:38,900 --> 00:06:42,170
And in his first one, it's going to be ro zero.

78
00:06:43,220 --> 00:06:44,060
Column zero.

79
00:06:46,000 --> 00:06:48,400
And the value that I want to store in this location.

80
00:06:49,480 --> 00:06:57,040
Is an email address and it's going to be test two at a test dot com.

81
00:06:58,200 --> 00:06:59,700
It was semi-colon at the end of it.

82
00:07:01,970 --> 00:07:04,850
In the next line, I am going to use data again.

83
00:07:06,130 --> 00:07:07,270
And square brackets.

84
00:07:08,820 --> 00:07:12,150
But this time it is going to be road zero again.

85
00:07:12,630 --> 00:07:14,220
But this time, column one.

86
00:07:16,200 --> 00:07:20,970
And in this location, I'm going to store my first data set password.

87
00:07:22,070 --> 00:07:23,120
And this is test.

88
00:07:23,270 --> 00:07:25,070
One, two, three, four, five.

89
00:07:26,910 --> 00:07:32,640
So just to let you know, I've actually created a second account on the test store called test to test

90
00:07:32,640 --> 00:07:37,050
dot com and it actually has a password of test one, two, three, four, five.

91
00:07:38,010 --> 00:07:40,530
So I do expect this to be a valid combination.

92
00:07:43,240 --> 00:07:48,730
So I am going to do a couple of carriage returns and now I'm going to start my dataset to.

93
00:07:51,290 --> 00:07:55,580
So rather than writing this out from scratch, I'm just going to copy these two lines.

94
00:07:56,840 --> 00:07:58,130
And I'm going to paste it here.

95
00:07:59,460 --> 00:08:06,570
But instead of row one evo zero, I want it to be row one and the same for the second line.

96
00:08:07,050 --> 00:08:08,850
So row one, column one.

97
00:08:10,350 --> 00:08:16,110
So in this first one I want to store a email address of taste test dot com.

98
00:08:17,380 --> 00:08:19,750
And I want to use a password of test.

99
00:08:19,750 --> 00:08:20,710
One, two, three.

100
00:08:22,210 --> 00:08:23,890
So that's going to be stored in row one.

101
00:08:24,550 --> 00:08:28,900
Column zero is going to be the second email address value.

102
00:08:29,710 --> 00:08:34,480
And in row one column one is the second password.

103
00:08:37,480 --> 00:08:40,450
So once again, I'm now going to copy this.

104
00:08:42,100 --> 00:08:50,680
Here changing is the data set free and instead of row one, column zero, I want to use row to column

105
00:08:50,700 --> 00:08:51,130
zero.

106
00:08:52,560 --> 00:08:57,060
And for the second line, I want to use row to column one.

107
00:08:58,790 --> 00:09:04,670
So this here, I'm going to provide an email address and password that doesn't exist so I can call this

108
00:09:04,670 --> 00:09:09,230
anything I'm just going to call it doesn't exist at test or com.

109
00:09:10,240 --> 00:09:13,810
And I can write a password of exes.

110
00:09:14,860 --> 00:09:21,160
So I don't this will not be a valid email address and password combination, so I expect it to fail

111
00:09:21,160 --> 00:09:21,640
in this one.

112
00:09:23,700 --> 00:09:26,070
So let's have free data set up.

113
00:09:26,670 --> 00:09:30,090
And at the end of this, I'm going to add a return statement.

114
00:09:30,510 --> 00:09:36,570
So I'm going to write a return and I'm going to provide data.

115
00:09:37,700 --> 00:09:38,660
And a semicolon.

116
00:09:39,350 --> 00:09:41,940
So this data refers to this object.

117
00:09:42,380 --> 00:09:45,260
And we've used this object to create datasets.

118
00:09:48,900 --> 00:09:54,900
So the next thing I need to do is I need to amend my test case.

119
00:09:57,160 --> 00:10:01,540
So after that test I am going to add round brackets.

120
00:10:02,470 --> 00:10:06,520
And inside those round brackets I am going to write data.

121
00:10:07,970 --> 00:10:08,630
Provider.

122
00:10:09,710 --> 00:10:16,430
And notes that data is with a lower case D and provider starts with a capitalized P.

123
00:10:18,310 --> 00:10:21,520
And it's going to equal in double quotes.

124
00:10:22,890 --> 00:10:25,200
The method name, which is get data.

125
00:10:29,730 --> 00:10:37,170
So why expect to happen here is where we we provide in an email address password and click any submit

126
00:10:37,170 --> 00:10:38,070
log in button.

127
00:10:38,970 --> 00:10:43,530
I expect this to run free times using the data provider method.

128
00:10:43,530 --> 00:10:47,160
Get data which contains free sets of data.

129
00:10:48,710 --> 00:10:54,470
So I expected to use this on the first attempt, this on the second and this on the third.

130
00:10:56,450 --> 00:11:02,630
So the one thing that I need to do here is that each time I run the test, you try logging in.

131
00:11:03,110 --> 00:11:08,840
I need to then sign out so that the next data can input the next set of data.

132
00:11:09,950 --> 00:11:13,610
So you may remember from the annotations part to lecture.

133
00:11:14,560 --> 00:11:17,530
We actually saw an out in this after method.

134
00:11:18,460 --> 00:11:20,680
And I do that by using this code.

135
00:11:22,060 --> 00:11:23,890
So I'm simply going to copy that.

136
00:11:25,150 --> 00:11:28,000
And I'm going to add that code at the end of this.

137
00:11:29,700 --> 00:11:33,960
So all this does is it's going to lock in using that first data set.

138
00:11:34,890 --> 00:11:42,390
And if it successfully logs in, it wouldn't log out ready for the next set of data and so on.

139
00:11:44,720 --> 00:11:50,060
So I have now completed my code and I am going to save the class.

140
00:11:51,230 --> 00:11:54,290
And at the close, both of those I have open.

141
00:11:55,670 --> 00:11:58,490
So I'm going to run this on the test g file.

142
00:11:59,500 --> 00:12:04,120
So all I need to do here is update the class name to lecture 12.

143
00:12:07,230 --> 00:12:07,800
Data.

144
00:12:09,100 --> 00:12:09,760
Provider.

145
00:12:10,420 --> 00:12:12,910
And so this now points to this class.

146
00:12:14,050 --> 00:12:20,440
So I'm going to save that test in G file and then I am going to run the test to see if this works.

147
00:12:27,980 --> 00:12:31,460
So you can see that test to test dot com was entered.

148
00:12:32,730 --> 00:12:34,500
And then a password of test.

149
00:12:34,500 --> 00:12:35,850
One, two, three, four, five.

150
00:12:38,850 --> 00:12:40,170
And then it sends me in.

151
00:12:41,160 --> 00:12:42,450
And then signs me out.

152
00:12:45,250 --> 00:12:49,090
And then the second set of data is use test that test dot com.

153
00:12:50,570 --> 00:12:51,740
And a password of test.

154
00:12:51,740 --> 00:12:52,700
One, two, three.

155
00:12:55,690 --> 00:12:56,370
So inspired.

156
00:12:58,220 --> 00:12:59,520
And then signs me out.

157
00:13:00,350 --> 00:13:04,730
And on the third attempt it uses doesn't exist that test dot com.

158
00:13:07,620 --> 00:13:09,210
If a password of x is.

159
00:13:10,210 --> 00:13:11,830
And because this doesn't exist.

160
00:13:12,950 --> 00:13:14,990
It says authentication failed.

161
00:13:18,590 --> 00:13:20,420
This one enclose the browser.

162
00:13:22,370 --> 00:13:24,290
And if I return back to Eclipse.

163
00:13:26,450 --> 00:13:28,820
You'll see that it's reported a failure.

164
00:13:29,900 --> 00:13:37,640
And the reason that failed was because data set free did not contain a valid email address and password

165
00:13:37,640 --> 00:13:38,420
combination.

166
00:13:40,850 --> 00:13:42,900
So this is quite confusing.

167
00:13:43,310 --> 00:13:47,180
But hopefully I've explained it in a way where it's kind of broken down.

168
00:13:47,180 --> 00:13:48,920
How we can use data provider.

169
00:13:50,310 --> 00:13:54,240
The key thing is it allows us to send multiple sets of data.

170
00:13:54,720 --> 00:13:57,750
Instead of having to write multiple test cases.

171
00:13:59,400 --> 00:14:01,620
So I hope you found this lecture useful.

172
00:14:02,070 --> 00:14:03,960
And once again, thank you for watching.

