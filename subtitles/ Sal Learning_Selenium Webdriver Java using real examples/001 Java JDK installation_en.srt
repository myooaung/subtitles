1
00:00:00,600 --> 00:00:03,840
So let's start setting up everything we need for this course.

2
00:00:04,260 --> 00:00:06,660
So we're going to look at the Java development kit.

3
00:00:08,160 --> 00:00:11,010
So what is the Java development kit?

4
00:00:12,310 --> 00:00:19,240
The Java development kit, also known as the JDK, is one of three core technology packages used in

5
00:00:19,240 --> 00:00:20,260
Java programming.

6
00:00:21,240 --> 00:00:28,230
The other two are JRA, which stands for Java Runtime Environment and JVM, which stands for Java Virtual

7
00:00:28,230 --> 00:00:28,740
Machine.

8
00:00:30,640 --> 00:00:38,380
The JDK allows developers to create Java programs that could be executed and run by the jury and the

9
00:00:38,380 --> 00:00:39,100
JVM.

10
00:00:40,650 --> 00:00:46,410
The JDK contains everything we need to write and execute Java programs.

11
00:00:48,380 --> 00:00:51,050
So what is the Java runtime environment?

12
00:00:51,950 --> 00:00:56,900
A runtime environment is a piece of software that is designed to run other software.

13
00:00:58,170 --> 00:01:04,530
The JRA contains two Java class libraries, the Java class loader and the Java virtual machine.

14
00:01:05,580 --> 00:01:10,860
The class loader is responsible for correctly loading classes and connecting them with the court.

15
00:01:10,860 --> 00:01:12,180
Java Class Libraries.

16
00:01:14,120 --> 00:01:20,120
The Java virtual machine is responsible for ensuring Java applications have the resources they need

17
00:01:20,120 --> 00:01:23,540
to run and perform well in your device or cloud environment.

18
00:01:25,090 --> 00:01:31,780
The job is mainly a container for those other components and is responsible for orchestrating their

19
00:01:31,780 --> 00:01:32,560
activities.

20
00:01:34,030 --> 00:01:36,430
So what is the Java virtual machine?

21
00:01:37,360 --> 00:01:40,270
The Java virtual machine has two primary functions.

22
00:01:41,200 --> 00:01:47,530
It allows Java programs to run on any device or operating system, and this is known as the write once

23
00:01:47,530 --> 00:01:49,060
run anywhere principle.

24
00:01:49,690 --> 00:01:52,870
The second is to manage and optimize program memory.

25
00:01:53,890 --> 00:01:58,060
In short, the Java virtual machine is how we run our Java programs.

26
00:01:59,190 --> 00:02:05,100
We configure the JVM settings and then rely on it to manage program resources through an execution.

27
00:02:07,510 --> 00:02:14,170
So in a nutshell, JDK is for development purposes where Java is for running the Java programs.

28
00:02:15,200 --> 00:02:21,590
The JDK and Java both contain the Java virtual machine so that we can run our job a program.

29
00:02:22,510 --> 00:02:28,090
The JVM is the heart of Java programming, and it provides platform independence.

30
00:02:29,800 --> 00:02:35,280
JDK is a superset of the Java and contains everything that the Java contains.

31
00:02:35,740 --> 00:02:40,690
Plus tools such as the compilers and debug is necessary for developing applications.

32
00:02:42,830 --> 00:02:46,970
So you may have heard of Open JDK and Oracle JDK.

33
00:02:47,600 --> 00:02:53,150
So Open JDK and Oracle JDK are implementations of the same Java specification.

34
00:02:54,210 --> 00:03:00,360
A key difference between the open JDK and Oracle JDK is the license and release cycle.

35
00:03:01,340 --> 00:03:09,560
Oracle JDK is aimed towards an enterprise audience, whereas open JDK is a free and open source implementation

36
00:03:09,830 --> 00:03:11,870
which is widely supported and used.

37
00:03:13,660 --> 00:03:20,830
In this course, we'll use the open JDK specifically version 11, as it will be identical to the Oracle

38
00:03:20,830 --> 00:03:24,880
JDK for our needs and does not require a commercial license.

39
00:03:26,170 --> 00:03:31,270
If you'd like to read more about the JDK, you can do so using the following link.

40
00:03:38,240 --> 00:03:42,140
So why use open JDK version 11 specifically?

41
00:03:43,090 --> 00:03:49,510
So we are going to use open JDK 11 because it is an open source reference implementation of version

42
00:03:49,510 --> 00:03:52,000
11 of the Java SC platform.

43
00:03:53,020 --> 00:03:58,930
So some tools that we're going to use, such as Jenkins for continuous integration, which is something

44
00:03:58,930 --> 00:04:00,640
we'll go through later in this course.

45
00:04:01,210 --> 00:04:04,420
But it relies on you using a particular version of Java.

46
00:04:05,390 --> 00:04:11,300
So if we look at the Jenkins requirements, you can see highlighted that Java 11 runtime environments

47
00:04:11,300 --> 00:04:17,089
are supported, whereas Java 12, if you look at the bottom, is a not supported version.

48
00:04:17,930 --> 00:04:22,820
So this is why we are using a specific version of Java in this course.

49
00:04:25,110 --> 00:04:27,930
So let's begin the open JDK installation.

50
00:04:31,520 --> 00:04:34,970
So on my desktop, I'm going to open up Google Chrome.

51
00:04:36,080 --> 00:04:38,690
And I am going to search for the following term.

52
00:04:39,830 --> 00:04:41,750
JDK space.

53
00:04:42,230 --> 00:04:43,580
Java space.

54
00:04:43,700 --> 00:04:44,180
Net.

55
00:04:45,670 --> 00:04:48,160
And the following results should be shown here.

56
00:04:48,610 --> 00:04:51,850
And this is a link to JDK dot java dot net.

57
00:04:52,660 --> 00:04:56,320
If I click on this link, each presenter page looks like the following.

58
00:04:57,160 --> 00:05:00,850
So this may be slightly different to you or what you're seen in your screen.

59
00:05:01,120 --> 00:05:04,360
And this is because I recorded this in 2020.

60
00:05:05,670 --> 00:05:10,440
So the important part is he reference implementations and we're going to select version 11.

61
00:05:11,620 --> 00:05:13,390
This should show the following page.

62
00:05:14,290 --> 00:05:19,870
And if we look on the left hand side, you'll see a menu and we're looking for the archive link.

63
00:05:20,350 --> 00:05:24,670
And if we click this, it should present a page like the following.

64
00:05:26,400 --> 00:05:29,220
So these are all the different releases in the archives section.

65
00:05:29,460 --> 00:05:34,410
And if I scroll down, you should see version 11 .0.2.

66
00:05:34,890 --> 00:05:37,920
And this is the version that we're going to be using for this course.

67
00:05:39,100 --> 00:05:42,280
So you can see that there's downloads for Windows, Mac and Linux.

68
00:05:42,970 --> 00:05:49,360
And because I'm using Windows, I am going to click on the zip link, which will begin the download.

69
00:05:50,340 --> 00:05:53,040
So I'm going to pause this video until that completes.

70
00:05:56,060 --> 00:05:57,630
So now it has finished downloading.

71
00:05:57,650 --> 00:06:03,290
If I click on that download, you should be shown a shove in folder option and if I select that, it

72
00:06:03,290 --> 00:06:06,320
will take you to location of where that file has been placed.

73
00:06:07,290 --> 00:06:13,800
So I'm going to move over this window and I'm going to close the browser window, and I'm going to simply

74
00:06:13,800 --> 00:06:16,200
drag that zip file to my desktop.

75
00:06:18,430 --> 00:06:22,240
So I'm going to be downloading quite a bit of content for this course.

76
00:06:22,450 --> 00:06:27,070
So it makes sense to create a new folder, which I'm going to call resources.

77
00:06:28,520 --> 00:06:34,700
And this resources folder is where I'm going to store things such as downloads or when we generate reports.

78
00:06:34,700 --> 00:06:36,470
It can all be found in this folder.

79
00:06:38,200 --> 00:06:41,710
So I am now going to double click on my zip file.

80
00:06:42,800 --> 00:06:50,180
And I'm going to drag the content, which is the JDK into my resources folder and it will unzip it to

81
00:06:50,180 --> 00:06:51,020
that location.

82
00:06:52,510 --> 00:06:56,020
So as this unzipping will take a moment, I'm going to pause the video.

83
00:06:57,150 --> 00:06:59,190
So the unzip in is now complete.

84
00:07:00,060 --> 00:07:05,370
So what I can do is close this and I can now delete the original zip folder.

85
00:07:06,150 --> 00:07:13,230
And if I double click on my resources folder, you'll see the unzipped JDK 11.02 folder.

86
00:07:14,860 --> 00:07:17,350
So this is all we needed to do in this lecture.

87
00:07:17,740 --> 00:07:22,930
In the next lecture will start setting the environment variable to make use of this open JDK.

88
00:07:23,740 --> 00:07:24,700
Thank you for watching.

