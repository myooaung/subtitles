1
00:00:00,430 --> 00:00:06,250
In this lecture, we're going to look at some additional features, specifically periodic test triggers.

2
00:00:07,850 --> 00:00:12,260
So Jenkins allows us to control when our test should trigger automatically.

3
00:00:13,520 --> 00:00:20,990
For example, we can say our tests are run every minute, our day, week and so on as it's highly flexible.

4
00:00:22,460 --> 00:00:27,890
An example where we might need this is when a company may want to run regression tests out of working

5
00:00:27,890 --> 00:00:28,310
hours.

6
00:00:28,610 --> 00:00:29,990
For example, early morning.

7
00:00:31,700 --> 00:00:37,370
Instead of someone being available to trigger the tests at 2 a.m. manually, we can simply set Jenkins

8
00:00:37,370 --> 00:00:38,480
to do this for us.

9
00:00:41,120 --> 00:00:46,850
If we click on a Jenkins job, i.e. job one, we then have the option to set configuration.

10
00:00:48,520 --> 00:00:52,720
Then we need to find the build periodically checkbox which we need to take.

11
00:00:54,670 --> 00:00:56,800
This would reveal the following panel.

12
00:00:57,860 --> 00:01:00,470
So this is where we can set the date or time.

13
00:01:03,740 --> 00:01:08,300
Jenkins uses something called a chronic expression to set the date and time.

14
00:01:09,790 --> 00:01:17,500
A chronic expression is a string comprising of five or six fields separated by white space that represents

15
00:01:17,500 --> 00:01:22,240
a set of times normally as a schedule to execute some routine.

16
00:01:24,100 --> 00:01:31,300
An example of a chronic expression is 30 zero free and a free asterix, which are separated by spaces.

17
00:01:33,230 --> 00:01:37,760
This tells Jenkins to run the build every day of every month of every year.

18
00:01:38,060 --> 00:01:42,800
At the 30th minute of the third hour of the day, using the below set ins.

19
00:01:43,550 --> 00:01:45,860
So 30 represents minutes.

20
00:01:46,310 --> 00:01:48,290
So for every 30 minutes.

21
00:01:49,340 --> 00:01:51,530
The oh three represents the hour.

22
00:01:52,370 --> 00:01:54,020
So this is the hour in the day.

23
00:01:55,680 --> 00:02:01,890
They month which is the first Asterix is the day that we want the test to run.

24
00:02:02,790 --> 00:02:06,240
So in Asterix represents it wants it to be every day.

25
00:02:07,190 --> 00:02:08,990
And it's very similar for month.

26
00:02:09,410 --> 00:02:12,710
So just simply means the month, which can be a value of 1 to 12.

27
00:02:13,770 --> 00:02:21,960
So if I selected Die Mum of one and mum for one, that will mean that on the first day of January,

28
00:02:22,500 --> 00:02:27,330
on the first hour, so free I am at the 30 minute mark.

29
00:02:27,720 --> 00:02:32,400
So at 3:30 a.m. I'd want the test executed.

30
00:02:33,740 --> 00:02:40,290
The final Asterix represents day week, so we can use an additional set in which can be a value of 0

31
00:02:40,290 --> 00:02:43,340
to 7, which represents Monday to Sunday.

32
00:02:45,150 --> 00:02:50,040
So if we wanted to run our tests hourly, we can define the following expression.

33
00:02:51,070 --> 00:02:54,640
So in that first value, we can also provide a height value.

34
00:02:55,360 --> 00:02:58,870
And this stands for to run every hour of every day.

35
00:03:01,280 --> 00:03:04,370
If we wanted to use a specific time.

36
00:03:05,210 --> 00:03:08,270
So for the second value, we could provide the number one.

37
00:03:08,870 --> 00:03:13,520
And this tells Jenkins that we want our test to run every day at one time.

38
00:03:16,020 --> 00:03:19,920
Luckily, Jenkins gives you some hints when entering a chronic expression.

39
00:03:20,900 --> 00:03:27,950
So if we just used five Asterix, as it tells us that we are going to be run in our tests every minute.

40
00:03:28,610 --> 00:03:33,980
So that's every minute of every day of every week of every month throughout the year.

41
00:03:35,920 --> 00:03:41,650
So chronic suppressions can be quite hard to understand at first, but good practice.

42
00:03:41,650 --> 00:03:46,450
And by using these expressions, using the patterns of the find should make some sense of it.

43
00:03:47,600 --> 00:03:48,890
So let's try this out.

44
00:03:50,240 --> 00:03:56,150
So if I go back to Jenkins and if I click on one, I'm going to select Configure.

45
00:03:57,590 --> 00:04:01,790
And if we scroll down we should see build periodically.

46
00:04:02,540 --> 00:04:06,410
If I select that, this is where I can insert a chronic expression.

47
00:04:07,280 --> 00:04:13,490
So I'm going to write asterisks five times, and each asterisks is separated by a space.

48
00:04:17,149 --> 00:04:18,170
And if I click apply.

49
00:04:19,269 --> 00:04:23,860
You'll see that Jenkins also provides a hint saying that we're going to be running every minute.

50
00:04:24,830 --> 00:04:25,970
Psychiatric safe.

51
00:04:27,020 --> 00:04:31,640
And now what I should see is Jenkins triggering my test every minute.

52
00:04:33,140 --> 00:04:37,760
So I'm going to pause this video a might for the first minute and then come back.

53
00:04:40,840 --> 00:04:47,440
So the first minute has been reached and you can see that automatically the job has started executing.

54
00:04:48,280 --> 00:04:51,590
So again, I'm going to pause this video and wait a further minute.

55
00:04:51,610 --> 00:04:57,070
Once has completed and here we have on the next minute, the next test is executed.

56
00:04:57,670 --> 00:05:00,220
So this was representing the test for the second minute.

57
00:05:01,790 --> 00:05:05,180
So this will continue running until we set up a was.

58
00:05:06,380 --> 00:05:10,550
So this is a good way of how we can run our tests automatically.

59
00:05:10,940 --> 00:05:14,090
One set in a very simple set in the configuration.

60
00:05:14,960 --> 00:05:20,000
So this will continue generating my tests every minute until I change that setting.

61
00:05:20,810 --> 00:05:27,440
So rather than this building up, I'm going to go back to configure and I'm going to simply antique

62
00:05:27,440 --> 00:05:29,510
build periodically and save.

63
00:05:30,410 --> 00:05:33,470
This is just to prevent flooding of tests being triggered.

64
00:05:33,830 --> 00:05:36,230
Otherwise, we're going to find a long list of jobs.

65
00:05:37,440 --> 00:05:40,110
So I hope this lecture has been useful to you.

66
00:05:40,530 --> 00:05:41,610
And thank you for watching.

