WEBVTT
1
00:00:11.000 --> 00:00:16.400
In this lecture, we take a look at data with checkboxes and we're going to use a command called is

2
00:00:16.400 --> 00:00:17.030
selected.

3
00:00:18.770 --> 00:00:21.140
So how do we see if the checkbox is ticked?

4
00:00:22.010 --> 00:00:23.180
We can use a command.

5
00:00:23.180 --> 00:00:24.380
The code is selected.

6
00:00:25.620 --> 00:00:29.460
There is selected command text to see if the checkboxes ticked.

7
00:00:30.900 --> 00:00:33.450
We might take an antique for a checkboxes.

8
00:00:33.600 --> 00:00:34.650
Let me test the form.

9
00:00:36.110 --> 00:00:38.540
This command will be useful to confirm.

10
00:00:38.540 --> 00:00:40.040
Our selection is correct.

11
00:00:41.730 --> 00:00:49.770
So an example of how it uses command is driver defined elements by I.D and in first double quotes is

12
00:00:49.790 --> 00:00:54.240
the selector value and at the end of that I use the is selected method.

13
00:00:55.850 --> 00:00:56.960
So let's try this out.

14
00:00:58.990 --> 00:01:04.900
So before I write any code, it's important I explain what we're going to be testing and some problems

15
00:01:04.900 --> 00:01:05.920
that you might face.

16
00:01:06.670 --> 00:01:12.730
So I'm going to open up Chrome and go to the automation test and website and I'm going to click on the

17
00:01:12.730 --> 00:01:15.820
dropdown link, which will take you to the following page.

18
00:01:17.190 --> 00:01:21.300
Now our testing in this lecture is going to be focusing on this checkbox section.

19
00:01:21.930 --> 00:01:25.350
And as you can see, the red value is ticked by default.

20
00:01:26.760 --> 00:01:29.430
Now in selenium web driver.

21
00:01:29.490 --> 00:01:33.720
The is selected method can be problematic because of the HTML.

22
00:01:34.920 --> 00:01:40.260
The user selected method requires invoking an input tag.

23
00:01:41.770 --> 00:01:50.260
So if I was to right click and inspect this page and focus on that tick, you'll see that it's actually

24
00:01:50.260 --> 00:01:52.810
highlighted the label rather than the input.

25
00:01:54.890 --> 00:01:57.350
So if I tried to use the selected method.

26
00:01:58.980 --> 00:02:05.290
On this label, it would output a false value all the time, even though it is ticked.

27
00:02:06.150 --> 00:02:11.190
And the reason for that is the selected method needs to use the input tag instead.

28
00:02:12.960 --> 00:02:14.540
So let me show you an example.

29
00:02:16.060 --> 00:02:23.710
So I'm going to open up a clips and I am going to copy the class and last lecture using Control C and

30
00:02:23.710 --> 00:02:33.220
D and I'm going to changes the lecture form and I'm going to name it check boxes and click, okay?

31
00:02:34.060 --> 00:02:42.760
And I'm going to open up that class and I don't require this song and the Ludus and I need to change

32
00:02:42.760 --> 00:02:43.420
the address.

33
00:02:44.230 --> 00:02:46.810
So I'm going to go directly to the drop down page.

34
00:02:48.160 --> 00:02:51.700
So I'm a copy that address and paste it here.

35
00:02:54.600 --> 00:03:03.060
So if I wanted to use a selected method, I need a way of knowing what the output of that test would

36
00:03:03.060 --> 00:03:03.420
be.

37
00:03:05.100 --> 00:03:11.700
So I need to write the value to console and how we can write values to console in Java is by using the

38
00:03:11.700 --> 00:03:22.920
following system thought out thoughts, print and open and close in brackets and a semicolon at the

39
00:03:22.920 --> 00:03:23.220
end.

40
00:03:24.630 --> 00:03:29.400
Now whatever we put in these in this bracket is what would output in the console.

41
00:03:29.970 --> 00:03:38.070
So if I'll give you an example, if I write a message inside this class.

42
00:03:40.190 --> 00:03:41.270
And then try running it.

43
00:03:44.670 --> 00:03:45.690
Let's see what happens.

44
00:03:47.860 --> 00:03:49.570
So it goes to the drop down page.

45
00:03:50.230 --> 00:03:56.560
But if I close this down and look into it in the clips in the console, you'll see I am a message that's

46
00:03:56.560 --> 00:04:00.160
been printed because it is system out print line command.

47
00:04:01.510 --> 00:04:04.570
Now we can use this to test the is selected method.

48
00:04:05.950 --> 00:04:12.670
So if I was to if I was to remove this for now and if I was to write a test, the use is selected method,

49
00:04:12.970 --> 00:04:24.340
I would want something like drive up top, find element by it selector and I'll come back to that.

50
00:04:26.230 --> 00:04:30.730
Is selected and a semicolon at the end.

51
00:04:31.480 --> 00:04:33.220
So I need to provide a select the hill.

52
00:04:34.360 --> 00:04:35.920
So I'm going to go.

53
00:04:37.080 --> 00:04:40.020
I am going to go to the Ragnarok Velocity panel.

54
00:04:42.160 --> 00:04:47.470
And if I click on that tick, you'll see that they've provided these values.

55
00:04:48.670 --> 00:04:51.850
So let's say I use this value here, the CSF selector.

56
00:04:52.270 --> 00:04:53.170
So if I copy that.

57
00:04:55.170 --> 00:04:57.660
And then go back to eclipse and paste that.

58
00:04:57.900 --> 00:04:58.950
Select the value here.

59
00:05:00.870 --> 00:05:05.220
So I need to find the output of this test.

60
00:05:05.850 --> 00:05:17.870
So how I can do that is if I run system dot else, dot print outlet and open and close in brackets and

61
00:05:17.890 --> 00:05:18.660
semicolon.

62
00:05:20.080 --> 00:05:24.550
If I copy all this line apart from the semicolon.

63
00:05:24.550 --> 00:05:25.510
So the rest of this.

64
00:05:27.690 --> 00:05:31.680
And if I use control x and y keyboard, which is the cuts.

65
00:05:33.130 --> 00:05:34.270
And then paste it here.

66
00:05:36.270 --> 00:05:37.680
You'll see that has been accepted.

67
00:05:38.700 --> 00:05:39.850
So all this is doing.

68
00:05:39.870 --> 00:05:42.300
I mean, if I write it like this, it might be a little bit clearer.

69
00:05:44.700 --> 00:05:49.350
So all I've done is put that line inside the system, fill out the print line brackets.

70
00:05:50.190 --> 00:05:54.930
And what that will do is it will print the result of this test to console.

71
00:05:56.420 --> 00:06:02.670
So if I say this now and try running this class, let's see what happens.

72
00:06:10.010 --> 00:06:17.390
So if I go back to Eclipse, you'll see that the value of for sale, even though is ticked.

73
00:06:18.610 --> 00:06:23.890
And the reason for that is, as explained, is that when we use this selector tool.

74
00:06:25.650 --> 00:06:27.330
It picks up on the label.

75
00:06:28.790 --> 00:06:30.500
It doesn't select the input.

76
00:06:31.540 --> 00:06:33.310
So if I to select their input instead.

77
00:06:35.270 --> 00:06:38.090
You see, I've got the following selectors generated.

78
00:06:39.800 --> 00:06:42.530
So I'm going to use the top one so far.

79
00:06:42.540 --> 00:06:43.090
Copy that.

80
00:06:45.750 --> 00:06:52.470
And now replace that value with the new one and try running this test again.

81
00:06:52.800 --> 00:06:53.910
So fail safe.

82
00:06:55.870 --> 00:06:57.490
Right click run.

83
00:06:58.000 --> 00:06:59.020
Job application.

84
00:06:59.440 --> 00:07:00.640
Let's see what happens now.

85
00:07:03.460 --> 00:07:06.490
If I go back to clips, you'll see it's true.

86
00:07:08.350 --> 00:07:14.560
So the important thing to remember with the selected method is to make sure to focus on the input.

87
00:07:14.870 --> 00:07:15.280
Take.

88
00:07:16.260 --> 00:07:17.190
And you can do that.

89
00:07:18.360 --> 00:07:27.120
By assessing the document object model in HTML, a input tag for a checkbox is usually always paired

90
00:07:27.120 --> 00:07:28.110
with a label tag.

91
00:07:28.770 --> 00:07:34.320
But when we write our tests, we need to focus and make sure that we select the input tag before running

92
00:07:34.320 --> 00:07:35.070
is selected.

93
00:07:36.120 --> 00:07:42.300
So before we bring this lecture to a close, let's try again, but this time with the green checkbox.

94
00:07:43.500 --> 00:07:47.250
So I'm going to use a selector to click on that green checkbox.

95
00:07:48.420 --> 00:07:53.760
But again, if we look at the document object model is highlighted, the label instead of the input

96
00:07:54.720 --> 00:07:56.220
that we need to use the input.

97
00:07:56.760 --> 00:08:02.790
So I'm going to select the input and I'm going to copy the above success.

98
00:08:04.710 --> 00:08:09.570
So if I go back to Eclipse, I am going to quickly write a comment.

99
00:08:09.750 --> 00:08:14.670
So to forward slashes and paste that value and I'm going to copy this line.

100
00:08:16.880 --> 00:08:22.730
And I am going to use that selective value by cutting it and pasting it here.

101
00:08:25.220 --> 00:08:28.460
So this test here is going to take the first checkbox.

102
00:08:29.840 --> 00:08:34.120
And this test here is going to test the second checkbox, which is the green one.

103
00:08:35.110 --> 00:08:38.740
And because this one here is by default, I expect it to return.

104
00:08:38.740 --> 00:08:39.159
True.

105
00:08:40.000 --> 00:08:45.790
And because this one here is unselected by default, I expect it to return false.

106
00:08:47.050 --> 00:08:48.060
So let's give it a try.

107
00:08:58.640 --> 00:09:03.680
So if I minimize this and go back to clips, you'll see true and false.

108
00:09:04.430 --> 00:09:10.100
So this first one return true is expected because it's ticked and the second month returned.

109
00:09:10.100 --> 00:09:11.990
False because it wasn't.

110
00:09:13.910 --> 00:09:16.070
So I hope this lecture was useful to you.

111
00:09:16.190 --> 00:09:21.500
And the key point to remember is when use is selected, method is to use it against the selected.

112
00:09:21.500 --> 00:09:23.210
It focuses on the input tag.

113
00:09:23.990 --> 00:09:24.790
Thanks for watching.

