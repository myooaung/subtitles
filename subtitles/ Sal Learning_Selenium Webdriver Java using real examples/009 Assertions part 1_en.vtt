WEBVTT
1
00:00:00.500 --> 00:00:04.430
In this lecture, we look at how to test results using assertions.

2
00:00:05.600 --> 00:00:07.100
So what is an assertion?

3
00:00:07.850 --> 00:00:13.850
Assertions are used to validate in a test case and helps us understand if a test case has passed or

4
00:00:13.850 --> 00:00:14.390
failed.

5
00:00:15.740 --> 00:00:21.710
The assertion is considered to be met if the actual result of an application matches without the expected

6
00:00:21.710 --> 00:00:22.160
result.

7
00:00:23.600 --> 00:00:27.520
This is a key part of automation testing as we want to verify.

8
00:00:27.520 --> 00:00:30.050
A value returned is what we expected it to be.

9
00:00:31.820 --> 00:00:32.810
Think of it this way.

10
00:00:33.080 --> 00:00:35.660
So this is an example of an assertion passing.

11
00:00:36.230 --> 00:00:42.350
So this person is going to go through the store and is expecting to find free cars in his garage when

12
00:00:42.350 --> 00:00:43.280
he goes through the door.

13
00:00:44.270 --> 00:00:45.830
He finds it as free cars.

14
00:00:46.400 --> 00:00:50.720
And because the cars the number of cars match the numbers he was expecting.

15
00:00:51.340 --> 00:00:52.640
The assertion passes.

16
00:00:55.320 --> 00:00:57.330
In this example, the assertion fails.

17
00:00:57.780 --> 00:01:02.700
So the same person is again going to go through the average store to expect to find free cars.

18
00:01:03.480 --> 00:01:06.150
But when he does, he only finds two.

19
00:01:07.020 --> 00:01:10.110
So the expected result was different to the actual result.

20
00:01:10.440 --> 00:01:12.810
And because of that reason, the assertion failed.

21
00:01:15.530 --> 00:01:17.180
So how an assertion might look.

22
00:01:17.960 --> 00:01:23.780
So look at the blunt code and notice that we are going to the automation test in home page.

23
00:01:24.740 --> 00:01:28.280
We then retrieve the page title using the title method.

24
00:01:29.660 --> 00:01:33.290
We compare the page title with the value that we expected it to be.

25
00:01:34.850 --> 00:01:37.550
If the value matches, then the test will pass.

26
00:01:38.580 --> 00:01:40.920
If they are different, then the test will fail.

27
00:01:43.190 --> 00:01:44.210
So let's try to sell.

28
00:01:45.800 --> 00:01:48.830
So the first thing I'm going to do is walk you through the test.

29
00:01:49.550 --> 00:01:54.440
I'm going to open up Chrome browser and I'm going to go to the automation test in home page.

30
00:01:55.760 --> 00:01:59.330
Now I'm going to right click and go into view page source.

31
00:02:00.200 --> 00:02:02.240
And this will showed how much HTML the page.

32
00:02:03.660 --> 00:02:06.750
Now, if we look, we're going to be looking for title tags.

33
00:02:07.850 --> 00:02:10.370
And this page has a 22 of home page.

34
00:02:11.840 --> 00:02:20.720
So to test that I'm going to run is going to look at this title of this page and I'm going to compare

35
00:02:20.720 --> 00:02:23.750
it to the expected value that I thought it was going to be.

36
00:02:25.490 --> 00:02:29.900
So for now, I'm just going to minimize this and I'm going to open up the clips.

37
00:02:31.460 --> 00:02:38.390
So I'm going to copy and paste the class in the last lecture, and I'm going to give it a name of l09

38
00:02:38.390 --> 00:02:49.040
for Lecture nine and I'm going to call it a certain underscore pt1 and then click, okay.

39
00:02:50.420 --> 00:02:55.610
And I'm going to double click and open that class and I'm going to remove code from the last lecture

40
00:02:55.610 --> 00:02:56.390
that we don't need.

41
00:02:58.950 --> 00:03:02.150
So the first thing I'm going to do is amend the address.

42
00:03:02.160 --> 00:03:03.890
So I want to go to the home page.

43
00:03:03.900 --> 00:03:05.760
So I'm just going to remove this last part.

44
00:03:07.850 --> 00:03:08.420
Like so.

45
00:03:10.650 --> 00:03:16.380
So the next thing I'm going to do is I'm going to create a string variable and I'm going to do this

46
00:03:16.380 --> 00:03:25.650
by writing stream with a capital S, T and G, and I'm going to call the stream page title.

47
00:03:27.060 --> 00:03:29.430
And it's going to equal drive up

48
00:03:32.160 --> 00:03:33.060
starts get.

49
00:03:34.680 --> 00:03:36.810
Title Bikes own.

50
00:03:38.720 --> 00:03:45.050
So all this is going to do is going to go to the automation test in home page and then the driver object

51
00:03:45.050 --> 00:03:50.270
is going to get the title of that page and it's going to store that value in this page title variable.

52
00:03:53.170 --> 00:03:59.240
The next thing I need to do is use an surgeon and I can do this by writing cert.

53
00:04:00.010 --> 00:04:02.980
So with a capital I and then dot.

54
00:04:04.440 --> 00:04:05.910
But you see, we're not do that thought.

55
00:04:06.060 --> 00:04:07.920
I don't get any method suggestions.

56
00:04:08.700 --> 00:04:16.019
And the reason for that is we need to import we need to import J unit into our project.

57
00:04:17.130 --> 00:04:26.010
And to do that, we need to right click our project, go to properties, go to Java, Build Path, click

58
00:04:26.010 --> 00:04:28.940
on libraries and then highlight the class path.

59
00:04:30.180 --> 00:04:33.480
Once you've done that, then click the Add library button.

60
00:04:35.600 --> 00:04:38.330
You wouldn't be given an option of G-Unit.

61
00:04:38.840 --> 00:04:40.880
So highlight J units and click next.

62
00:04:42.460 --> 00:04:45.430
And then you've got to import to the library version.

63
00:04:45.850 --> 00:04:52.180
So I'm going to use J Unit for because this is one I have most experience with and is commonly used.

64
00:04:53.110 --> 00:04:54.340
And then I'm going to click Finish.

65
00:04:55.730 --> 00:05:02.570
So unit four should then appear underneath your class path, then click apply and close and enjoy.

66
00:05:02.570 --> 00:05:04.640
Unit four should be listed under your project.

67
00:05:06.240 --> 00:05:12.660
So now if I go back to assert and press dot you select methods, methods, suggestions.

68
00:05:14.110 --> 00:05:16.690
And the method that I want to use is one called.

69
00:05:18.780 --> 00:05:21.620
Assert equals.

70
00:05:23.960 --> 00:05:26.360
And then I'm going to do it open and close and in bracket.

71
00:05:26.870 --> 00:05:28.400
And it takes two values.

72
00:05:29.360 --> 00:05:39.470
The first one is the expected value, and the second one is the actual value.

73
00:05:42.360 --> 00:05:48.260
So the actual value is going to be the one that the driver object gets and it's going to be store owner

74
00:05:48.270 --> 00:05:49.350
in page title.

75
00:05:50.280 --> 00:05:57.930
So I'm going to copy page title and I'm going to remove the second the second quotes and replace it

76
00:05:57.930 --> 00:05:59.460
of page title like so.

77
00:06:01.180 --> 00:06:07.360
Now the expected value is the value that I expect the page title to be, so I believe it's going to

78
00:06:07.360 --> 00:06:09.460
be home page.

79
00:06:13.000 --> 00:06:18.610
So what this test does, it goes to the home page automation test in the driver objects, gets the title

80
00:06:18.610 --> 00:06:21.280
of the page and stores into the page title variable.

81
00:06:21.880 --> 00:06:27.070
We then run in an assertion where we're expecting that page title to equal this value.

82
00:06:29.590 --> 00:06:30.700
So let's give it a go.

83
00:06:31.540 --> 00:06:35.260
So I'm going to site the class and I'm going to try running it.

84
00:06:43.280 --> 00:06:44.570
So that test is now run.

85
00:06:44.750 --> 00:06:46.250
And if I go back to Eclipse.

86
00:06:47.280 --> 00:06:48.960
You see, there's no out here.

87
00:06:50.920 --> 00:06:54.970
That's because the page title, Equal Home Page.

88
00:06:56.130 --> 00:07:03.570
But if one was to change home page to home page one inside this class and try running it again.

89
00:07:04.910 --> 00:07:05.870
Let's see what happens.

90
00:07:13.670 --> 00:07:15.020
So if I go back to Eclipse.

91
00:07:16.350 --> 00:07:17.310
You see it as an error.

92
00:07:18.900 --> 00:07:25.140
And if you look at this error, it says expected home page one but was home page.

93
00:07:26.850 --> 00:07:31.950
So what they're saying is there's a mismatch between expected value and the actual value.

94
00:07:32.700 --> 00:07:34.890
And for that reason, the test failed.

95
00:07:38.020 --> 00:07:42.910
So before I bring this lecture to a close, let me just go over what Jason is.

96
00:07:44.060 --> 00:07:48.560
J unit is a unit testing framework for Java programming language.

97
00:07:49.310 --> 00:07:53.930
It is useful for Java developers to write and run repeatable tests.

98
00:07:55.030 --> 00:08:02.200
It plays a crucial role in test driven development, and it is an open source framework which is used

99
00:08:02.200 --> 00:08:03.820
for writing and running tests.

100
00:08:05.570 --> 00:08:12.980
J unit provides assertions for test and expected results, and it also provides annotations to identify

101
00:08:12.980 --> 00:08:13.940
test methods.

102
00:08:14.920 --> 00:08:15.250
J.

103
00:08:15.250 --> 00:08:19.870
Unit tests allow you to write code faster, which increases quality.

104
00:08:21.330 --> 00:08:26.820
So we'll be using J Unit for right in and run in some of our tests going forward.

105
00:08:28.110 --> 00:08:29.730
I hope you found this lecture useful.

106
00:08:29.970 --> 00:08:30.990
And thank you for watching.

