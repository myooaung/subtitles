1
00:00:00,390 --> 00:00:05,190
In this lecture, we look at the importance of using a base page class.

2
00:00:06,000 --> 00:00:10,680
So a base page class can be used to store our reusable code.

3
00:00:12,590 --> 00:00:19,850
So the problem we still face is that even though our code flexibility has improved, we still have repetitive

4
00:00:19,850 --> 00:00:22,040
code in our Java classes.

5
00:00:23,320 --> 00:00:29,710
For example, we still have code that initializes the driver in every Java class.

6
00:00:31,330 --> 00:00:36,940
This goes against the dry principle, dry standard for don't repeat yourself.

7
00:00:38,660 --> 00:00:46,670
We need to think of a way to place our common code into a separate location so to our classes can access

8
00:00:46,670 --> 00:00:47,840
it when needed.

9
00:00:49,380 --> 00:00:55,860
This will make our code more maintainable since any changes made to the common code will be inherited

10
00:00:55,860 --> 00:00:57,000
by our classes.

11
00:00:59,010 --> 00:01:01,230
So this is a design overview.

12
00:01:01,980 --> 00:01:08,970
So as you can see, we have a conflict of properties file that contains key and value pairs.

13
00:01:10,110 --> 00:01:14,850
We can use these values by sending them to the base page.

14
00:01:15,900 --> 00:01:19,470
So in the base page we would have public methods.

15
00:01:20,220 --> 00:01:26,430
And in this example, I have a public method called get driver, and this method will initialize the

16
00:01:26,430 --> 00:01:30,600
driver based on the browser value from the DOT Properties file.

17
00:01:31,800 --> 00:01:38,280
We also have another public method called Get your URL and this method will get the URL value from the

18
00:01:38,280 --> 00:01:39,210
properties file.

19
00:01:41,160 --> 00:01:49,800
What we can then do is create our Java classes so our test classes to extend the base page.

20
00:01:51,180 --> 00:01:56,250
So this will mean that we will gain access to the base page public methods.

21
00:01:57,590 --> 00:02:05,120
So we no longer need to initialize the driver in the test classes themselves and the same forgets in

22
00:02:05,120 --> 00:02:05,900
the URL.

23
00:02:07,170 --> 00:02:14,220
Instead, what we can do is simply call the base page public methods to retrieve those values.

24
00:02:16,490 --> 00:02:21,260
By doing this, you can see that our code is simplified.

25
00:02:22,270 --> 00:02:30,490
So this is an example of a log in test and it no longer contains the code to initialize the driver or

26
00:02:30,490 --> 00:02:31,600
to get the URL.

27
00:02:32,880 --> 00:02:41,580
All we simply do is call the methods such as get driver and get you able to get those values for us.

28
00:02:43,090 --> 00:02:51,580
This is all made possible by looking at line seven where we use the extends keyword to extend the base

29
00:02:51,580 --> 00:02:52,150
page.

30
00:02:53,800 --> 00:02:55,870
So let's implement this improvement.

31
00:02:57,720 --> 00:03:03,120
So the first thing I'm going to do is copy and paste the properties file from last lecture.

32
00:03:04,170 --> 00:03:12,510
Calling this new one also for conflict properties and it contains the same key and value pairs.

33
00:03:14,040 --> 00:03:18,510
And then going to right click the package, select new and select class.

34
00:03:19,380 --> 00:03:27,570
And I'm going to call this Class l04, underscore base page and then click Finish.

35
00:03:28,660 --> 00:03:30,820
This wouldn't open up the new class.

36
00:03:30,970 --> 00:03:33,190
And this is going to be our base page.

37
00:03:34,390 --> 00:03:40,000
So I need to add some new fields and then I'll create some public methods.

38
00:03:41,060 --> 00:03:45,590
So the first field I'm going to create is public static.

39
00:03:46,460 --> 00:03:47,900
Web driver.

40
00:03:48,440 --> 00:03:48,950
Driver.

41
00:03:50,690 --> 00:03:53,570
And I'll need to import web driver from selenium.

42
00:03:53,570 --> 00:03:54,140
The org.

43
00:03:56,020 --> 00:03:56,980
So take note.

44
00:03:56,980 --> 00:04:04,660
I've used public and static, so public means that this field will be accessible from other objects

45
00:04:05,050 --> 00:04:07,740
and other classes outside of the base page.

46
00:04:08,890 --> 00:04:15,880
And the static keywords domain objects will share the same web driver driver field.

47
00:04:16,380 --> 00:04:18,370
It will share the same instance.

48
00:04:20,620 --> 00:04:27,040
So don't worry about this too much now, because I'd explain it in more detail in the framework section.

49
00:04:28,500 --> 00:04:35,460
But the next thing is I am going to create my first public method, which is going to be called public

50
00:04:36,360 --> 00:04:37,950
web driver.

51
00:04:38,520 --> 00:04:39,960
Get driver.

52
00:04:40,900 --> 00:04:44,080
In brackets and an open and close embrace.

53
00:04:45,250 --> 00:04:49,360
So get driver will have an error because he's expecting a return statement.

54
00:04:49,990 --> 00:04:51,850
And I'll be handling that in a moment.

55
00:04:52,960 --> 00:04:57,490
But this public method is going to be responsible for initializing the driver.

56
00:04:58,640 --> 00:05:04,130
And we've already done this in our L0 free log in class from last lecture.

57
00:05:05,710 --> 00:05:11,020
So I'm going to copy from this point up two properties prop.

58
00:05:12,380 --> 00:05:13,580
And I'm going to copy that.

59
00:05:14,570 --> 00:05:17,180
And I'm going to paste it inside this method.

60
00:05:18,860 --> 00:05:22,880
So you'll see there's an error here because I need to add a froze declaration.

61
00:05:24,600 --> 00:05:28,290
And there's still an error because it's still expected in a return statement.

62
00:05:29,620 --> 00:05:33,400
So I'm going to add that return statement at the bottom here.

63
00:05:34,340 --> 00:05:37,250
So I'm going to right turn driver.

64
00:05:39,450 --> 00:05:43,020
And this references this field at the top here.

65
00:05:45,460 --> 00:05:50,890
So one other change I need to make is, well, we have copied this this code from the last lecture.

66
00:05:51,400 --> 00:05:52,870
I need to change this here.

67
00:05:53,380 --> 00:05:55,990
The reference, the new conflict or properties file.

68
00:05:56,650 --> 00:06:01,780
So I'm going to change from l0 free to l0 for two point to this file.

69
00:06:03,690 --> 00:06:06,720
So that is the first public method complete.

70
00:06:08,340 --> 00:06:13,110
The next thing I'm going to do is create another public method to get the URL.

71
00:06:14,320 --> 00:06:16,390
So I need to create a new field.

72
00:06:17,080 --> 00:06:19,600
And this field is going to be called private.

73
00:06:21,200 --> 00:06:21,920
String.

74
00:06:22,340 --> 00:06:23,090
You are well.

75
00:06:26,020 --> 00:06:33,010
And outside of the get driver method, I'm going to write public string.

76
00:06:34,000 --> 00:06:35,890
Get u r l.

77
00:06:39,710 --> 00:06:44,810
And what I'm going to write here is u r l equals.

78
00:06:46,410 --> 00:06:49,740
And so this your role is reference in this field here.

79
00:06:51,120 --> 00:06:54,810
So I'm again going to need to use the conflict properties file.

80
00:06:55,850 --> 00:07:00,560
So I am going to copy these lines here from the get driver method.

81
00:07:02,690 --> 00:07:05,420
And I'm going to paste it like so.

82
00:07:07,550 --> 00:07:18,320
So now I'm going to write you URL equals prop dot get property and inside the brackets I'm going to

83
00:07:18,320 --> 00:07:22,760
use double quotes and I'm going to get the key of you.

84
00:07:22,760 --> 00:07:23,270
R l.

85
00:07:26,190 --> 00:07:30,480
You'll see that there's an error here, because I need to add a pharaoh's declaration again.

86
00:07:33,030 --> 00:07:40,410
And the final thing I need to do is add the return statement which will return u r l like so.

87
00:07:42,070 --> 00:07:44,650
And you'll see that all errors will now go away.

88
00:07:46,170 --> 00:07:52,710
So to run through this quickly again in this method, I again need to access the key and values from

89
00:07:52,710 --> 00:07:54,480
the conflict properties file.

90
00:07:55,200 --> 00:07:58,500
So if we use these lines here to gain access.

91
00:07:59,760 --> 00:08:01,780
And then reference in the film.

92
00:08:01,860 --> 00:08:08,190
You are well at the top of this class and it's going to equal prop which is this object.

93
00:08:08,550 --> 00:08:09,660
Don't get property.

94
00:08:10,050 --> 00:08:12,330
You are well and you are well.

95
00:08:12,780 --> 00:08:14,100
Is this key here?

96
00:08:15,100 --> 00:08:17,000
This thing and retrieve this value.

97
00:08:18,610 --> 00:08:24,220
Is then going to return that value to the URL filled which is referenced here.

98
00:08:26,370 --> 00:08:34,200
So I have now created two public methods in my base page and I am now going to save this class.

99
00:08:35,620 --> 00:08:37,299
And I'm going to close these other ones.

100
00:08:38,900 --> 00:08:48,920
And I am going to copy the l0 free log in class from last lecture and paste it in this new one.

101
00:08:48,920 --> 00:08:51,140
l04 Log in.

102
00:08:52,550 --> 00:08:56,150
Lincoln to open it, and you'll see it contains the following.

103
00:08:58,090 --> 00:09:02,710
So now I am going to get rid of all the code in the before suite.

104
00:09:05,380 --> 00:09:07,840
So I'm going to delete it like so.

105
00:09:08,680 --> 00:09:11,920
And I'm also going to delete Web driver driver.

106
00:09:14,400 --> 00:09:16,320
So you'll see that there's errors here.

107
00:09:17,380 --> 00:09:22,030
So the first thing I need to do in this class is extends.

108
00:09:24,410 --> 00:09:28,460
l04 underscore base page.

109
00:09:29,660 --> 00:09:33,140
So this class will now extend the base page.

110
00:09:33,830 --> 00:09:38,510
And by doing so, you can see that the driver is no longer ever been.

111
00:09:39,410 --> 00:09:44,150
And the reason for that is, is because issues in this driver filled.

112
00:09:46,760 --> 00:09:51,020
So if I try run in this test, let's see what happens.

113
00:09:58,790 --> 00:10:03,260
And you can see that the testers average straight away.

114
00:10:03,920 --> 00:10:08,030
And if we go up, we can see no points to exception.

115
00:10:10,180 --> 00:10:17,770
So the reason for that is I need to call the public methods from the base page to initialize the driver

116
00:10:18,220 --> 00:10:19,570
and to get the URL.

117
00:10:20,740 --> 00:10:22,210
So I'm going to do this.

118
00:10:23,680 --> 00:10:24,730
At this point here.

119
00:10:25,890 --> 00:10:27,600
So I'm going to write Driver.

120
00:10:29,320 --> 00:10:35,320
Equals get driver if brackets at the end and a semicolon.

121
00:10:36,880 --> 00:10:41,290
And you can see there's an error there because I need to add a froze declaration.

122
00:10:43,870 --> 00:10:50,800
So the next thing I'm going to do is again use driver, but this time I'm going to use dot get.

123
00:10:53,480 --> 00:11:00,890
And inside those brackets, I'm going to get you as well, which is the name of the other public method

124
00:11:00,890 --> 00:11:02,030
from the base page.

125
00:11:04,080 --> 00:11:06,150
So now if I save this class.

126
00:11:07,260 --> 00:11:10,820
And try running also for login again.

127
00:11:11,810 --> 00:11:12,750
See what happens.

128
00:11:16,990 --> 00:11:22,690
And you can see Chrome has opened and it ran the test successfully.

129
00:11:26,400 --> 00:11:29,070
So let's try creating another class.

130
00:11:29,520 --> 00:11:34,080
So I'm going to simply copy and paste the URL reserve for log in class.

131
00:11:34,740 --> 00:11:35,660
Keep in the name.

132
00:11:35,730 --> 00:11:37,470
Also for log in to.

133
00:11:39,320 --> 00:11:41,570
So this second class will be identical.

134
00:11:41,990 --> 00:11:44,210
It again extends the base page.

135
00:11:45,450 --> 00:11:50,700
I'm then going to close these classes and I'm going to open up test in G the example.

136
00:11:51,830 --> 00:11:56,480
And I am first going to change this to reference the first logging class.

137
00:11:56,870 --> 00:11:58,280
So therefore log in.

138
00:11:59,550 --> 00:12:02,340
And then I'm going to copy and paste this line below.

139
00:12:03,620 --> 00:12:05,600
And changes to log in to.

140
00:12:06,880 --> 00:12:08,560
I'm then going to save this file.

141
00:12:10,460 --> 00:12:14,780
And I'm going to right click and run it as a test in G Suite.

142
00:12:17,850 --> 00:12:20,550
So you can see that the first test has run.

143
00:12:22,420 --> 00:12:27,030
It then opens up a second browser window and it runs the second test.

144
00:12:28,240 --> 00:12:32,290
And if I go back to Eclipse, you'll see that two tests have run.

145
00:12:34,140 --> 00:12:40,800
So this proves that our test classes can share the resources from the base page.

146
00:12:41,990 --> 00:12:50,090
So as long as those classes extends the base page, it will be able to access the public fields and

147
00:12:50,090 --> 00:12:51,680
code public methods.

148
00:12:53,990 --> 00:12:59,960
So the one final thing that I'd like to do here is create one more method which will be responsible

149
00:12:59,960 --> 00:13:01,520
for taking screenshots.

150
00:13:02,870 --> 00:13:09,620
So if you remember back to Section nine, we actually covered this in the Ellsberg Force Screenshot

151
00:13:09,620 --> 00:13:10,160
lecture.

152
00:13:11,830 --> 00:13:14,890
And this method here is what takes screenshots.

153
00:13:16,130 --> 00:13:22,850
We then use a second method to retrieve the timestamp that we use in the screenshot file name.

154
00:13:24,140 --> 00:13:26,780
So I'm going to copy both of these methods.

155
00:13:28,030 --> 00:13:31,870
And I'm going to paste it near the end of my bass page class.

156
00:13:33,450 --> 00:13:35,720
And then going to close the other class.

157
00:13:36,810 --> 00:13:42,060
And inside this space page class, I'm actually going to remove the static keyword.

158
00:13:43,490 --> 00:13:45,560
Because this is no longer required.

159
00:13:47,610 --> 00:13:54,930
So in my base page now I had the get driver method which initialize the driver, get your URL which

160
00:13:54,930 --> 00:13:56,010
gets the URL.

161
00:13:56,670 --> 00:14:04,590
And now I have take snapshot which takes a screenshot and timestamp which generates the timestamp which

162
00:14:04,590 --> 00:14:06,120
we use in the file name.

163
00:14:07,950 --> 00:14:16,130
So now I am going to save this base page and I'm going to open up l0 for login from section 12.

164
00:14:17,350 --> 00:14:20,500
And I'm going to amend this class to take a screenshot.

165
00:14:21,660 --> 00:14:23,670
So I'm going to make some room here.

166
00:14:25,350 --> 00:14:29,820
And all I'm going to do is use this method name.

167
00:14:31,580 --> 00:14:32,840
So I'm going to paste it here.

168
00:14:33,590 --> 00:14:38,300
And then in brackets, I need to provide a web driver instance.

169
00:14:38,870 --> 00:14:40,490
So I'm going to write driver.

170
00:14:42,410 --> 00:14:49,010
So if I go back to the method, you'll see that this method requires a parameter of web driver.

171
00:14:50,160 --> 00:14:56,430
So that's why I'm pass in dry over here is pass in the driver instance to this method.

172
00:14:58,440 --> 00:15:00,240
So now if I save this.

173
00:15:01,910 --> 00:15:02,960
And try running it.

174
00:15:05,150 --> 00:15:06,020
See what happens.

175
00:15:12,020 --> 00:15:13,640
So far return to eclipse.

176
00:15:14,270 --> 00:15:16,100
It says the test has passed.

177
00:15:17,190 --> 00:15:23,100
And if I go back to my base page and look at this method, you'll see that these screenshots are being

178
00:15:23,100 --> 00:15:24,960
stored at this location.

179
00:15:26,780 --> 00:15:34,400
So if I minimize this and go to my desktop and then go to my resources folder and open up this screenshots

180
00:15:34,400 --> 00:15:35,120
folder here.

181
00:15:36,350 --> 00:15:37,940
You'll see that there's a screenshot.

182
00:15:39,730 --> 00:15:43,120
And that is a screenshot from that particular test.

183
00:15:44,940 --> 00:15:52,980
So what we've done there is we've simply called a public method from the base page and passed the driver

184
00:15:52,980 --> 00:15:57,150
instance in order to take this screenshot.

185
00:15:58,360 --> 00:16:08,440
And this method calls this timestamp method to generate the time stamp which we used in the file name.

186
00:16:10,850 --> 00:16:17,480
So I apologize for this lecture being quite long, but I hope you found the concept of a base page useful.

187
00:16:17,930 --> 00:16:22,910
It's an important topic to understand, and I hope that I'm given a clear explanation.

