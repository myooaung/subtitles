WEBVTT
1
00:00:00.630 --> 00:00:04.440
In this lecture, we look at how to handle accordions with selenium.

2
00:00:06.060 --> 00:00:07.560
So what are accordions?

3
00:00:08.400 --> 00:00:13.890
An accordion is a graphical control element comprising a vertical stack list of items.

4
00:00:15.360 --> 00:00:20.610
It's a technique often used to organize and make use of limited space on a web page.

5
00:00:22.110 --> 00:00:27.360
The user often has control to expand, to retract the accordion, to show a hypertext.

6
00:00:29.930 --> 00:00:31.670
So how to handle accordions?

7
00:00:32.540 --> 00:00:33.170
Simple.

8
00:00:33.710 --> 00:00:38.720
We can often just use a double click command to reveal or retract the accordion embedded text.

9
00:00:39.470 --> 00:00:41.630
So an example of this is used in driver.

10
00:00:41.840 --> 00:00:47.240
They'll find element by CSF selector and simply using the dot click command.

11
00:00:49.160 --> 00:00:54.740
There is no need for a special approach and we may have to account for performance.

12
00:00:54.740 --> 00:01:00.950
For example, if we try an open and close tabs multiple times in quick succession, then it could cause

13
00:01:00.950 --> 00:01:02.180
unexpected behavior.

14
00:01:03.620 --> 00:01:08.060
We can resolve this by using whites, which is explained in the next section of this course.

15
00:01:09.660 --> 00:01:12.540
But for now, let's get some practice and try it out.

16
00:01:14.270 --> 00:01:17.180
So the first thing I'm going to do is walk you through the test.

17
00:01:17.930 --> 00:01:23.540
So I'm going to open Chrome and go to automation test and website and I'm going to click on the accordion

18
00:01:23.540 --> 00:01:23.990
button.

19
00:01:25.800 --> 00:01:33.330
So we've briefly seen this page in the past, and all I'm going to do in this lecture is open and close

20
00:01:33.930 --> 00:01:37.170
the tabs, and I'm going to do that number of times.

21
00:01:38.400 --> 00:01:44.940
So you're not going to see much new content in this particular lecture in terms of finding a selector.

22
00:01:45.660 --> 00:01:50.070
But I will introduce you to a concept by using for loops to be able to do this.

23
00:01:51.990 --> 00:01:58.020
So I'm going to minimize this Web page now, and I'm going to open up a clips and I'm going to copy

24
00:01:58.020 --> 00:02:05.250
and paste the class in the last lecture, and I'm going to call this L 12, lecture 12 and I'm going

25
00:02:05.250 --> 00:02:09.180
to call it accordion and then click.

26
00:02:09.180 --> 00:02:09.660
Okay.

27
00:02:11.260 --> 00:02:17.020
I'm going to double click that class and I'm going to remove all the content from the last lecture that

28
00:02:17.020 --> 00:02:17.710
we don't need.

29
00:02:18.400 --> 00:02:23.350
And the reason why it is more content here than what was in the last video is because I've gone through

30
00:02:23.350 --> 00:02:29.290
and added comments to explain what the code does so that when you refer to the code, you have an understanding

31
00:02:29.770 --> 00:02:30.610
of what we were doing.

32
00:02:32.710 --> 00:02:36.310
So I'm going to remove all the codes up to the driver.

33
00:02:36.310 --> 00:02:42.360
They'll get method and I think I've deleted one too many closed brackets.

34
00:02:42.370 --> 00:02:43.420
I'm just going to add another one.

35
00:02:44.980 --> 00:02:45.280
Right.

36
00:02:45.280 --> 00:02:48.100
So the first thing I need to do is update the URL.

37
00:02:48.730 --> 00:02:54.160
So I'm going to go to the web page and I'm just going to copy and paste it.

38
00:02:56.130 --> 00:02:56.730
Like so.

39
00:02:59.450 --> 00:03:07.460
So the most basic form that we're going to use here is to simply go to the Web page, quickly inspect.

40
00:03:08.550 --> 00:03:09.750
And only get a selector.

41
00:03:10.530 --> 00:03:14.130
And I'm going to click on this first accordion tab.

42
00:03:15.850 --> 00:03:22.640
And if I go over to runner ups velocity, I am just going to get the first.

43
00:03:22.670 --> 00:03:22.960
Yes.

44
00:03:23.080 --> 00:03:23.650
Select the.

45
00:03:26.830 --> 00:03:38.740
And what I'm going to write is driver dot find element via CSA selector and I provide that value and

46
00:03:38.740 --> 00:03:42.400
I'm going to click it like so.

47
00:03:44.890 --> 00:03:47.560
So this will come to this web page and it will click it.

48
00:03:48.730 --> 00:03:51.460
And then what I want to do is then click it again.

49
00:03:53.460 --> 00:03:56.220
And it's going to be the same selector.

50
00:03:56.940 --> 00:04:03.300
So all I need to do is to repeat that code again, like so.

51
00:04:05.060 --> 00:04:07.310
So if I try running this just to show you.

52
00:04:15.680 --> 00:04:17.540
So you say open and close the accordion.

53
00:04:17.540 --> 00:04:18.230
First tab.

54
00:04:20.000 --> 00:04:26.600
So I'm going to close this page and I'm going to open up the Web page, but this time I'm going to focus

55
00:04:26.600 --> 00:04:27.380
on the second one.

56
00:04:29.360 --> 00:04:34.820
And I'm going to take that selector and I'm going to write something similar to the one above.

57
00:04:35.030 --> 00:04:36.260
Drive the phone, buy it,

58
00:04:39.530 --> 00:04:43.670
set a selector, provide that value, dot click.

59
00:04:46.130 --> 00:04:48.050
And I'm also going to repeat that line.

60
00:04:50.030 --> 00:04:55.310
So and then I'm just going to do the same for the last one.

61
00:04:57.780 --> 00:04:59.310
So I am going to copy that.

62
00:05:00.390 --> 00:05:07.680
I'm going to drive up a fine line of client service, a selector and copy that last value, double click.

63
00:05:08.910 --> 00:05:10.920
And again, I'm going to just repeat that.

64
00:05:13.980 --> 00:05:21.720
So now if I run this test, so if I save it and run it, we should see all three of them open and close

65
00:05:22.050 --> 00:05:22.830
after each other.

66
00:05:25.390 --> 00:05:26.650
So that happened really quickly.

67
00:05:28.270 --> 00:05:34.180
But I'm going to show you a new way of we see how we repeated ourself here.

68
00:05:34.900 --> 00:05:38.710
I'm going to show you a new way of how we can do something similar.

69
00:05:39.080 --> 00:05:39.850
In a afforded.

70
00:05:41.510 --> 00:05:44.930
So I'm going to write it for an in brackets.

71
00:05:46.220 --> 00:05:49.600
INT I equal zero.

72
00:05:51.380 --> 00:05:52.160
Semicolon.

73
00:05:53.390 --> 00:06:03.800
There is less than ten semicolon on a plus plus and an outside that I'm going to have opening and close

74
00:06:03.800 --> 00:06:04.520
in brackets.

75
00:06:05.970 --> 00:06:11.490
So if I was to take this first line and copy it here.

76
00:06:12.270 --> 00:06:15.030
And meanwhile, common comments out these lines.

77
00:06:20.510 --> 00:06:23.270
So let's see what happens when I run this.

78
00:06:34.880 --> 00:06:37.010
So you can see that code is run in.

79
00:06:38.720 --> 00:06:40.220
And it ran a number of times.

80
00:06:42.520 --> 00:06:45.970
And the reason for that is using a for loop.

81
00:06:46.630 --> 00:06:52.960
What is doing is, is signing an integer variable called AIA and it's assigning a value of zero.

82
00:06:54.190 --> 00:06:56.410
And then what is doing is checking a condition.

83
00:06:56.590 --> 00:06:57.790
So if I.

84
00:06:58.650 --> 00:07:08.760
Is less than the number ten an increment that value by one, and it keeps on going into a loop until

85
00:07:09.450 --> 00:07:11.330
this condition is no longer true.

86
00:07:12.150 --> 00:07:16.650
So when it is ten, it's no longer less than ten.

87
00:07:17.100 --> 00:07:19.380
And so this code inside my run.

88
00:07:22.390 --> 00:07:25.840
So let's see if I try to add this line to the forehead

89
00:07:28.810 --> 00:07:33.220
and if I do the same for one of the other lines, the other taps as well.

90
00:07:34.330 --> 00:07:38.860
And if I save it, let's try running it and see what happens.

91
00:07:49.990 --> 00:07:57.370
And you can see by simply having a follow up, I was able to repeat the pressing of those accordion

92
00:07:57.370 --> 00:08:02.770
tabs a number of times, and so that's avoided the need to write repetitive code.

93
00:08:05.230 --> 00:08:10.690
But the key thing with working with accordions is that we only need to use the dot click command because

94
00:08:10.690 --> 00:08:15.430
all we're doing as a user is simply clicking it to expand and attract it.

95
00:08:17.520 --> 00:08:22.800
So I hope that was quite useful for you just to see a follow loop and to see the simplicity of accordions.

96
00:08:23.490 --> 00:08:26.130
And I look forward to speaking to you in the next lecture.

