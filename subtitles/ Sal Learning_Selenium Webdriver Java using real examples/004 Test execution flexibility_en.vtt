WEBVTT
1
00:00:01.060 --> 00:00:07.000
In this lecture, we explore the flexibility that we have within the test engine small file.

2
00:00:08.240 --> 00:00:16.490
So we have total control test and G provides extreme flexibility in controlling what packages, classes

3
00:00:16.490 --> 00:00:17.950
and test methods should run.

4
00:00:19.360 --> 00:00:23.260
Much of this control is handled by the test engine XML file.

5
00:00:24.580 --> 00:00:28.350
And we can use XML tags to control what should execute.

6
00:00:28.360 --> 00:00:29.560
Let me trigger a test.

7
00:00:30.940 --> 00:00:37.990
For example, we can set our tests in smell so they only triggers particular packages or classes or

8
00:00:37.990 --> 00:00:40.720
test methods all down to our choosing.

9
00:00:43.040 --> 00:00:50.840
So if we look at this visual example, I have configured the test engine XML file to only run the test

10
00:00:50.840 --> 00:00:51.980
within package one.

11
00:00:52.940 --> 00:00:58.850
And in package one there were ten Java classes and each class contains five test methods.

12
00:00:59.720 --> 00:01:06.740
So in this example, all ten Java classes will run, and so will all five tests in each of those classes.

13
00:01:08.620 --> 00:01:09.820
An example too.

14
00:01:10.210 --> 00:01:16.900
I have configured the test engine simple so that it focuses on run in the classes within package two.

15
00:01:18.010 --> 00:01:23.620
So the two classes will run from the package two and the methods within those classes would execute

16
00:01:23.620 --> 00:01:24.100
also.

17
00:01:26.660 --> 00:01:28.070
So let's look at our options.

18
00:01:29.870 --> 00:01:33.650
So I'm going to be making changes to the tests in a XML file.

19
00:01:35.240 --> 00:01:42.050
So if you ever wanted to refer back to a previous lecture to see what the test and simple file contained

20
00:01:42.050 --> 00:01:49.070
at the time, then you'll be able to do this by downloading the XML version, which I have uploaded

21
00:01:49.070 --> 00:01:51.440
to each particular lecture on Udemy.

22
00:01:53.460 --> 00:01:57.780
So what I'm going to do in this lecture is create a new class.

23
00:01:58.590 --> 00:02:00.480
So I'm going to copy and zero free.

24
00:02:01.380 --> 00:02:05.940
And I'm going to create this call, this 1l0 for a test.

25
00:02:06.250 --> 00:02:07.230
Now smell.

26
00:02:08.780 --> 00:02:16.520
And inside this one, I'm going to call this method episode five and change that to five and this to

27
00:02:16.520 --> 00:02:17.060
six.

28
00:02:18.180 --> 00:02:22.530
And that's a six like so and I'm going to save it and close out class.

29
00:02:23.480 --> 00:02:25.250
And then I'm going to do the same.

30
00:02:25.580 --> 00:02:28.430
So copy and paste that lecturing that class again.

31
00:02:29.650 --> 00:02:33.100
Cleanness also for B tests inject smell to.

32
00:02:35.320 --> 00:02:37.180
And I'm going to change this to seven.

33
00:02:38.080 --> 00:02:38.860
Mr. Seven.

34
00:02:39.990 --> 00:02:42.870
An estate an estate to.

35
00:02:44.400 --> 00:02:45.230
Then I'm going to save it.

36
00:02:47.570 --> 00:02:52.460
So now I have two new classes and also have the two classes from the previous lecture.

37
00:02:53.300 --> 00:02:57.740
So now I am going to open up the test inject smell, which currently contains the following.

38
00:02:58.950 --> 00:03:04.680
So if I wanted to add those two new classes in my test, I can quite simply copy.

39
00:03:06.560 --> 00:03:08.600
And paste like so.

40
00:03:10.160 --> 00:03:11.810
But change in the 9 to 4.

41
00:03:13.190 --> 00:03:14.360
And change an actor for.

42
00:03:14.930 --> 00:03:17.210
So that name now references this.

43
00:03:18.220 --> 00:03:20.650
And this name now references this.

44
00:03:21.660 --> 00:03:22.980
Suffice to say this.

45
00:03:23.580 --> 00:03:24.690
And now run the tests.

46
00:03:24.690 --> 00:03:25.530
Inject, smell.

47
00:03:26.670 --> 00:03:27.600
Let's see what happens.

48
00:03:29.370 --> 00:03:32.910
And you can see eight has now been run and there was eight passes.

49
00:03:33.540 --> 00:03:39.000
And if you look at the output, you can see that all of those methods within all four of those classes

50
00:03:39.600 --> 00:03:40.350
have now run.

51
00:03:42.820 --> 00:03:50.500
So if I wanted to just run everything inside the Section 11 package, I can do this by simply removing

52
00:03:51.100 --> 00:03:52.450
the classes tags.

53
00:03:54.200 --> 00:03:55.070
And here we've been.

54
00:03:55.070 --> 00:03:56.000
The test tags.

55
00:03:56.420 --> 00:03:57.320
I'm going to write.

56
00:04:02.100 --> 00:04:02.820
Packages.

57
00:04:06.350 --> 00:04:09.410
And inside that I am going to write package.

58
00:04:12.360 --> 00:04:12.930
Name.

59
00:04:14.480 --> 00:04:15.140
Equals.

60
00:04:16.670 --> 00:04:17.510
Double quotes.

61
00:04:18.170 --> 00:04:23.000
And I am going to provide the package name to section 11.

62
00:04:24.910 --> 00:04:25.960
In an outsider, though.

63
00:04:25.960 --> 00:04:26.830
Double quotes.

64
00:04:27.130 --> 00:04:33.040
I'm going to use a forward slash and a closing tag.

65
00:04:34.110 --> 00:04:35.550
So now if I save this.

66
00:04:37.530 --> 00:04:39.150
And if I clear the console.

67
00:04:40.840 --> 00:04:43.450
Let's see what happens when I run the test in small.

68
00:04:46.530 --> 00:04:51.510
So you can see this time there has been ten tests run and it's ten passes.

69
00:04:52.320 --> 00:04:53.460
And if I scroll up.

70
00:04:54.470 --> 00:04:58.430
You'll see that there's two references to Hello World and then our methods.

71
00:04:59.630 --> 00:05:06.140
So by writing this example, I've run every single class within that package.

72
00:05:08.320 --> 00:05:11.710
So this is useful when we want to run all tests.

73
00:05:12.010 --> 00:05:18.840
Say we had a package for regression tests and we wanted to run every single class within that package.

74
00:05:20.260 --> 00:05:27.070
So in this lecture, we've seen how we can run or amend the test, inject smell to be selective in what

75
00:05:27.070 --> 00:05:31.960
classes to run, and also how to run all classes that belong to a package.

76
00:05:33.050 --> 00:05:39.320
In the next upcoming lectures, I even show you how we can run particular methods that belongs to a

77
00:05:39.320 --> 00:05:43.010
class using the include and exclude keywords.

78
00:05:43.910 --> 00:05:46.130
So that's all I wanted to show in this lecture.

79
00:05:46.580 --> 00:05:47.780
Let's move on to the next.

