1
00:00:00,360 --> 00:00:04,650
In this lecture, we take a look at parameter rise in global variables.

2
00:00:06,210 --> 00:00:08,070
So what are we trying to achieve?

3
00:00:09,070 --> 00:00:15,940
We're trying to achieve a way to say global variables in an external location so that they are easy

4
00:00:15,940 --> 00:00:16,750
to update.

5
00:00:18,160 --> 00:00:23,920
Our test would then retrieve these global variables so they inherit any changes to the values.

6
00:00:25,400 --> 00:00:30,500
This will prevent the need to update individual test cases, meaning easy maintenance.

7
00:00:32,630 --> 00:00:35,210
So let's take a look at the design overview.

8
00:00:36,210 --> 00:00:42,210
So first I'm going to create a properties file and I'm going to call this conflict properties.

9
00:00:43,050 --> 00:00:47,310
And inside that file it will contain a key and value pair.

10
00:00:48,320 --> 00:00:55,370
So if we look at the one highlighted in red, the key is u, r, l and the value is w.

11
00:00:55,370 --> 00:00:57,920
WW dot website dot com.

12
00:00:59,800 --> 00:01:05,200
I'm then going to amend our classes to observe this conflict of properties file.

13
00:01:07,210 --> 00:01:16,000
Anent amend the methods within those classes to make use of the key and value pairs from the conflict

14
00:01:16,000 --> 00:01:16,960
properties file.

15
00:01:18,430 --> 00:01:25,480
So if we look on the right hand side I'm using driver dot gets but instead of coding in a hard coded

16
00:01:25,480 --> 00:01:30,700
value to a website, I'm passed in the key from the properties file.

17
00:01:32,040 --> 00:01:35,190
And so what I expect to happen is that the value.

18
00:01:35,710 --> 00:01:42,720
W WW dot website dot com is passed to the parameter in the method from the properties file.

19
00:01:45,370 --> 00:01:51,640
So two steps required to make this improvement is to create a properties file in our project.

20
00:01:53,150 --> 00:01:56,750
I men need to create key and value pairs in the properties file.

21
00:01:56,990 --> 00:01:59,690
For example, u r l equals a website.

22
00:02:01,640 --> 00:02:07,400
I then need to amend our Java classes to make use of properties and file input stream.

23
00:02:08,419 --> 00:02:14,360
So this is how we can pass the data from the properties file into our classes.

24
00:02:16,050 --> 00:02:22,620
Then I need to amend our methods so that we can receive and use the value from the properties file.

25
00:02:23,770 --> 00:02:29,920
We can then change the URL in the DOT properties file to observe the method to see how it inherits the

26
00:02:29,920 --> 00:02:30,490
change.

27
00:02:33,030 --> 00:02:34,860
So let's implement this improvement.

28
00:02:36,250 --> 00:02:41,080
So the first thing I'm going to do in Eclipse is create a new package for Section 12.

29
00:02:41,710 --> 00:02:46,540
So I'm going to right click the source folder, click new, and then click package.

30
00:02:47,350 --> 00:02:51,160
And I'm going to give it a name of section 12 and then click Finish.

31
00:02:52,290 --> 00:02:58,590
I'm then going to right click that package, click new and then click class, and I'm going to give

32
00:02:58,590 --> 00:03:05,370
this class a name of l02 as this is the second lecture in Section 12 underscore.

33
00:03:07,170 --> 00:03:10,050
Log in and then click Finish.

34
00:03:11,170 --> 00:03:12,880
And that class will now open.

35
00:03:14,220 --> 00:03:23,340
So what I need to do in this class is to set the set up code, to initiate the driver, to open up the

36
00:03:23,340 --> 00:03:25,590
Chrome browser and expand the browser.

37
00:03:26,550 --> 00:03:35,730
And also a simple test which will use the automation test or home page to select the log in link and

38
00:03:35,730 --> 00:03:39,280
enter an email address and passwords and then try logging in.

39
00:03:40,560 --> 00:03:46,560
So as we've done this before and instead of writing this manually, which will take some time and you

40
00:03:46,560 --> 00:03:53,820
would've seen it, I'm going to expand Section 11 and I'm going to simply open up the Lecture nine annotation

41
00:03:53,820 --> 00:03:57,240
Part two class, which contains the following.

42
00:03:59,160 --> 00:04:07,110
So I'm going to take the reform effort code, the before suite code and the web driver driver line.

43
00:04:07,680 --> 00:04:11,010
And on my keyboard, I'm going to use Control C to copy it.

44
00:04:12,400 --> 00:04:18,490
And then I'm going to go back to my log in the Java class and I'm going to paste it in between the braces

45
00:04:18,850 --> 00:04:19,570
like so.

46
00:04:21,529 --> 00:04:27,970
So the only difference I need to make here is that instead of before method, I'm going to change this

47
00:04:27,980 --> 00:04:29,990
to at test.

48
00:04:30,870 --> 00:04:34,860
And I'm going to need to import the test annotation from Test and G.

49
00:04:37,490 --> 00:04:44,150
So very quickly the before sweet handles the set up of the browser and the test itself goes to the test

50
00:04:44,150 --> 00:04:49,490
store home page, clicks on the log in link and into an email address and password and then clicks on

51
00:04:49,490 --> 00:04:50,480
the sign in button.

52
00:04:52,280 --> 00:04:58,760
So what I want to do here is, well, I'm using driver Duquette and hardcoded an address.

53
00:04:59,480 --> 00:05:05,480
I instead want to use a properties config file to pass that value.

54
00:05:07,490 --> 00:05:13,280
So before I do that, I am going to minimize Section 11 so we don't get confused.

55
00:05:14,150 --> 00:05:16,570
And I'm also going to close the lecture.

56
00:05:16,580 --> 00:05:19,850
No annotations, part two from Section 11.

57
00:05:20,940 --> 00:05:23,790
So now I only have the new cross open.

58
00:05:24,970 --> 00:05:28,150
And I am going to cut this line here.

59
00:05:30,160 --> 00:05:35,290
And I'm going to handle that instead in the before sweet annotation code.

60
00:05:37,520 --> 00:05:44,390
So the next thing I need to do is to create eight properties, a conflict properties file.

61
00:05:45,450 --> 00:05:52,470
And I can do that by right click in the Section 12 package, click in New and then click in other.

62
00:05:54,460 --> 00:06:02,560
And you'll be given a number of folders here and you need to find general and expand it and then select

63
00:06:02,560 --> 00:06:03,040
file.

64
00:06:04,330 --> 00:06:05,470
And then click next.

65
00:06:06,880 --> 00:06:11,710
So with the new package highlighted, we need to provide a file name.

66
00:06:12,310 --> 00:06:14,590
So I'm going to call this l02.

67
00:06:16,620 --> 00:06:18,450
Com fake dot.

68
00:06:19,740 --> 00:06:20,490
Properties.

69
00:06:21,450 --> 00:06:22,500
And then click Finish.

70
00:06:24,450 --> 00:06:29,280
And that file would then be listed under the package and will be open on screen.

71
00:06:30,510 --> 00:06:34,530
So here I need to provide a key and a value pair.

72
00:06:35,540 --> 00:06:38,750
So I am going to provide the value of all the key of you.

73
00:06:38,870 --> 00:06:47,810
Well, and it's going to equal a value of the URL, which I am going to get from the test store home

74
00:06:47,810 --> 00:06:48,200
page.

75
00:06:49,750 --> 00:06:51,490
So I'm going to copy that address.

76
00:06:53,210 --> 00:06:55,280
And I am going to paste it like so.

77
00:06:56,520 --> 00:07:04,140
So euro, which is the key, equals the address to the test or home page, which is the value.

78
00:07:05,810 --> 00:07:07,700
I'm then going to save this file.

79
00:07:09,130 --> 00:07:11,110
And I'm going to go back to my class.

80
00:07:12,850 --> 00:07:20,770
So now I need to make my class use the conflict of properties file to pass the value using the key.

81
00:07:22,100 --> 00:07:25,040
So to do this I am above the driver.

82
00:07:25,050 --> 00:07:32,630
Don't get method again to make some space here and I am going to use a class called properties.

83
00:07:33,410 --> 00:07:42,530
So we have a capital P properties and I'm going to provide an object name of prop equals new.

84
00:07:44,700 --> 00:07:45,390
Properties.

85
00:07:47,840 --> 00:07:49,610
With brackets and a semicolon.

86
00:07:50,950 --> 00:07:52,960
And you will see it as an error on the properties.

87
00:07:53,500 --> 00:07:58,180
And if I hover over it, I'm given the option to import it from java or util.

88
00:08:00,260 --> 00:08:02,000
And that terror will now go away.

89
00:08:03,170 --> 00:08:10,190
So the properties class represents a persistent set of properties that we can store a load from a stream.

90
00:08:11,760 --> 00:08:17,100
So the next thing I need to do is use another class called file input stream.

91
00:08:18,330 --> 00:08:27,000
So the following stream makes it possible to read the contents of a file as a stream of bias in Java.

92
00:08:28,130 --> 00:08:32,659
That we can then use with the prop or the properties object.

93
00:08:33,559 --> 00:08:41,750
So I'm going to write file input stream and I'm going to give an object name of data.

94
00:08:42,750 --> 00:08:45,390
Equals new file.

95
00:08:46,770 --> 00:08:47,430
Input.

96
00:08:48,750 --> 00:08:49,350
Stream.

97
00:08:51,090 --> 00:08:53,070
And in brackets it was semicolon.

98
00:08:54,670 --> 00:09:00,370
So if I hover over follow input stream, I'm given an option to import this from Java IO.

99
00:09:02,500 --> 00:09:07,450
And if I hover over new follow input stream, you'll see that I need to add an argument.

100
00:09:08,580 --> 00:09:16,500
So what I'm going to do here is add double quotes and I need to provide the location of this conflict

101
00:09:16,530 --> 00:09:17,570
properties file.

102
00:09:18,680 --> 00:09:24,170
So if I right click it and go to properties, you'll see I'm given a location here.

103
00:09:25,510 --> 00:09:30,700
And if I hover over that and highlights it and in control C to copy it.

104
00:09:32,020 --> 00:09:34,660
I can then paste it within these double quotes.

105
00:09:36,510 --> 00:09:41,910
And then if I hover over the red line again, you'll see that I need to add a froze declaration.

106
00:09:43,310 --> 00:09:45,920
And once I do that, he ever goes away.

107
00:09:47,280 --> 00:09:56,730
So this file input screen object requires a parameter value which simply contains the location of this

108
00:09:56,730 --> 00:09:58,460
conflict properties file.

109
00:10:00,890 --> 00:10:04,670
The next thing I need to do is use the prop object.

110
00:10:05,090 --> 00:10:06,350
So the properties object.

111
00:10:08,920 --> 00:10:14,260
And if I do a full stop here, you'll see that I'm given access to a number of methods.

112
00:10:15,040 --> 00:10:18,670
And what we need to use is a method called load.

113
00:10:19,360 --> 00:10:22,570
And you can see load expects an input stream.

114
00:10:24,250 --> 00:10:32,410
So if I select that, you'll see that in practice it's already provided the data object, which is the

115
00:10:32,410 --> 00:10:34,320
full input stream object.

116
00:10:35,680 --> 00:10:40,750
And if I hover over this red line, you'll see that I just need to add another free declaration.

117
00:10:42,760 --> 00:10:44,470
And that era will now go away.

118
00:10:45,560 --> 00:10:48,020
So we are loading the data.

119
00:10:48,200 --> 00:10:53,980
So the file input stream object into the prop properties object.

120
00:10:56,650 --> 00:11:05,590
So the next thing I need to do now is use the key and value pair from the conflict properties file.

121
00:11:06,580 --> 00:11:14,200
So I'm going to remove this double quote value and the double quotes itself in driver dot get.

122
00:11:15,500 --> 00:11:19,130
And instead I'm going to use the object.

123
00:11:20,380 --> 00:11:21,760
And on use full stop.

124
00:11:22,480 --> 00:11:23,770
Get property.

125
00:11:24,770 --> 00:11:27,500
And expect a string of a key.

126
00:11:29,230 --> 00:11:36,130
So here I am going to use double quotes and I'm going to provide the key from the config.

127
00:11:36,130 --> 00:11:39,670
The properties file I'm interested in, which is u.

128
00:11:39,730 --> 00:11:40,450
R l.

129
00:11:42,340 --> 00:11:49,690
And so this year oral matches the key you're oral from the conflict properties file.

130
00:11:51,470 --> 00:12:00,050
So why expect to happen here is that the driver don't get method will now go retrieve the value of this

131
00:12:00,050 --> 00:12:03,170
key from the convict properties file.

132
00:12:03,890 --> 00:12:09,630
So I expect it to use this and pass that value to the driver.

133
00:12:09,650 --> 00:12:10,910
Don't get method.

134
00:12:12,600 --> 00:12:14,040
So if I say this now.

135
00:12:15,800 --> 00:12:16,700
And try running it.

136
00:12:17,480 --> 00:12:18,560
Let's see what happens.

137
00:12:20,020 --> 00:12:22,930
So I'm going to right click zero to log in.

138
00:12:23,530 --> 00:12:27,310
But Java run as a test in G test.

139
00:12:32,050 --> 00:12:35,380
And you can see it's gone to the test or home page.

140
00:12:37,660 --> 00:12:47,530
So one that has proven is that we were able to create a conflict properties file and set a key and value

141
00:12:47,530 --> 00:12:47,890
pair.

142
00:12:49,240 --> 00:12:56,800
And in our class itself, we was able to access the key and values from that file.

143
00:12:57,400 --> 00:13:04,840
And we've used it in our test and in our case we've passed the value to our driver docket method.

144
00:13:06,210 --> 00:13:13,980
So what this means is that going forward, when we have a number of classes instead of hard code in

145
00:13:13,980 --> 00:13:17,250
utero, we can instead pass the value.

146
00:13:18,780 --> 00:13:21,120
So why or when would this be useful?

147
00:13:22,410 --> 00:13:29,520
So imagine if you're working for a company and they have a number of different environments, such as

148
00:13:29,520 --> 00:13:32,730
a 81 and a 82 system.

149
00:13:34,380 --> 00:13:38,280
That you are well will be different for each of those systems.

150
00:13:39,270 --> 00:13:46,080
So if you've hardcoded your values in your classes, it would mean you'd have to go through every single

151
00:13:46,080 --> 00:13:48,960
class to update the driver or get method.

152
00:13:50,300 --> 00:13:56,660
But by using this method, all we need to do is simply update the value.

153
00:13:58,400 --> 00:14:06,080
And then that value will be passed to all our classes if we use the prop, not get properties and then

154
00:14:06,080 --> 00:14:06,450
pass.

155
00:14:06,470 --> 00:14:07,490
You are okay.

156
00:14:09,200 --> 00:14:11,570
So that is why we do this.

157
00:14:12,290 --> 00:14:18,590
It's for maintainability and for our code to be flexible and configurable.

158
00:14:20,570 --> 00:14:22,400
So I hope you've enjoyed this lecture.

159
00:14:22,790 --> 00:14:24,770
And once again, thank you for watching.

