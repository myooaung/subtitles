WEBVTT
1
00:00:00.970 --> 00:00:03.930
In this lecture, we take a look at implicit lies.

2
00:00:05.740 --> 00:00:08.410
So the blurry diagram is a process flow.

3
00:00:09.130 --> 00:00:13.990
And the reason I'm showing this to you is to try and explain how an implicit white works.

4
00:00:15.070 --> 00:00:19.780
So if we look at the beginning, the first step is that we set a time out.

5
00:00:20.380 --> 00:00:21.400
So a duration.

6
00:00:21.640 --> 00:00:23.950
And in this case I've used 10 seconds.

7
00:00:25.120 --> 00:00:28.630
Then on the next step, the Tex execution starts.

8
00:00:29.550 --> 00:00:33.420
The page begins to load and then a test looks for the elements.

9
00:00:34.800 --> 00:00:38.670
It then checks to see if the elements is found and if it is found.

10
00:00:38.730 --> 00:00:39.960
The test proceeds.

11
00:00:40.830 --> 00:00:45.750
If the element is not found, then it checks to see if the 10 seconds is up.

12
00:00:46.860 --> 00:00:51.450
If it's not up, then then the test will look for the elements again and again.

13
00:00:51.450 --> 00:00:53.310
It will check to see if the element is found.

14
00:00:54.290 --> 00:01:00.380
If it's not found again and the 10 seconds is up, then the test will follow an error.

15
00:01:01.280 --> 00:01:04.069
So in this case it might be no such element exception.

16
00:01:04.190 --> 00:01:05.450
And then the test ends.

17
00:01:08.090 --> 00:01:14.780
So implicit ways an implicit white is to tell web driver to poll to dom for certain amounts of time

18
00:01:14.870 --> 00:01:19.400
when trying to find an element or elements if they are not immediately available.

19
00:01:20.550 --> 00:01:25.020
The low code is only set once in a test script, so it's global.

20
00:01:26.070 --> 00:01:31.810
If the test comes across an element that has it noted, then it will wait up to 10 seconds before throwing

21
00:01:31.830 --> 00:01:32.220
an error.

22
00:01:33.430 --> 00:01:40.630
And the code to use implicit weights is driver don't manage the timeouts though implicitly white and

23
00:01:40.630 --> 00:01:45.850
then as parameters we set the duration before that before to test from an error.

24
00:01:48.300 --> 00:01:48.900
So let's see.

25
00:01:48.900 --> 00:01:49.500
In action.

26
00:01:51.590 --> 00:01:56.180
So like our lectures, the first thing I'm going to do is walk you through the test.

27
00:01:56.990 --> 00:02:02.360
So I'm opening Chrome and going to automation testing and I'm going to click on the loader link.

28
00:02:03.080 --> 00:02:05.570
Now take note of my two small amendments.

29
00:02:05.570 --> 00:02:10.430
It is loaded link where a button will now appear after 5 seconds to.

30
00:02:13.560 --> 00:02:19.620
And as you can see, there is now a click me button and if pressed it would show a paragraph.

31
00:02:21.010 --> 00:02:26.800
So what we're going to do is we're going to go to this Loder Page and we're going to try and click on

32
00:02:26.800 --> 00:02:31.000
this click Me button even before the load has finished loading.

33
00:02:32.890 --> 00:02:40.690
So what I would expect to happen is that the test without and without an implicit white would try and

34
00:02:40.690 --> 00:02:42.220
click this bottom whites away.

35
00:02:43.110 --> 00:02:47.310
But because the button is invisible, I'd expect the test to fail.

36
00:02:48.530 --> 00:02:55.400
Then when I retry this test using an implicit white, I'm going to set a timer of 10 seconds and that

37
00:02:55.400 --> 00:02:59.660
would be sufficient time for this element to load properly, which I expected.

38
00:02:59.660 --> 00:03:03.080
So then be able to identify the spots in an impressive.

39
00:03:05.520 --> 00:03:07.740
So I'm going to go back to Eclipse.

40
00:03:08.370 --> 00:03:15.330
And because we're in a new section now, I'm going to right click the source folder and click new and

41
00:03:15.330 --> 00:03:16.230
then click package.

42
00:03:16.860 --> 00:03:22.620
And I'm going to call this package section zero six and then click Finish.

43
00:03:24.960 --> 00:03:33.240
So I'm going to if we go back to our default package and let's just get this Chrome demo and control

44
00:03:33.240 --> 00:03:34.080
C for copy.

45
00:03:35.280 --> 00:03:39.570
And then if you highlight the Section six package and do control B for paste.

46
00:03:41.340 --> 00:03:48.390
It would impress that class it met for you and they simply just saves what's in that code that we usually

47
00:03:49.260 --> 00:03:49.920
come across.

48
00:03:51.810 --> 00:03:52.260
So.

49
00:03:53.440 --> 00:04:00.040
First thing I'm going to do with this class is right click and click on refactor and then click rename.

50
00:04:00.730 --> 00:04:03.850
And what this allows you to do is rename the class.

51
00:04:05.170 --> 00:04:06.850
So I'm going to call this.

52
00:04:10.330 --> 00:04:11.240
S zero.

53
00:04:11.590 --> 00:04:13.960
So l01.

54
00:04:14.530 --> 00:04:15.550
So zero free.

55
00:04:15.550 --> 00:04:19.060
Because this is the third lecture in section six.

56
00:04:19.720 --> 00:04:32.290
Even though this is the first lecture with code in underscore implicit white and click finish and click

57
00:04:32.290 --> 00:04:38.590
finish again and you'll see that a class has now been renamed and also the class inside the code is

58
00:04:38.590 --> 00:04:39.700
also being renamed.

59
00:04:42.620 --> 00:04:47.840
So the first thing I'm going to do is update this get method with you out of this website

60
00:04:50.450 --> 00:04:52.730
and I'm going to paste it like so.

61
00:04:54.680 --> 00:04:59.990
The next step once we're on this page, is to try and click this button.

62
00:05:00.770 --> 00:05:03.020
So I'm going to right click and inspect it.

63
00:05:04.400 --> 00:05:06.860
And I'm going to open up runner ups velocity.

64
00:05:08.080 --> 00:05:11.380
And I'm just going to grab that first since I select them.

65
00:05:12.660 --> 00:05:22.440
And I'm going to write driver the fun element by as a selector provide that value and then got click

66
00:05:22.500 --> 00:05:23.100
like so.

67
00:05:25.020 --> 00:05:30.900
So this first test I'm going to do without whites being present to see if it fails.

68
00:05:31.440 --> 00:05:32.850
So I'm going to say this class.

69
00:05:34.810 --> 00:05:36.850
And I'm going to right click and run it.

70
00:05:38.010 --> 00:05:38.940
To see what happens.

71
00:05:43.620 --> 00:05:47.010
So I expect it's what he tried to identify that box and click it.

72
00:05:48.140 --> 00:05:51.410
So far, though, back to Eclipse, you'll see it as an error.

73
00:05:52.710 --> 00:05:53.580
And if we go up.

74
00:05:55.190 --> 00:05:59.090
The reason for the free IRA is the elements is not intractable.

75
00:06:01.310 --> 00:06:05.330
So we need to use an implicit white to resolve this issue.

76
00:06:06.170 --> 00:06:09.830
And how we do that is I write it under the drive.

77
00:06:09.980 --> 00:06:11.610
Manage maximize window line.

78
00:06:12.630 --> 00:06:16.070
Not write driver dot.

79
00:06:18.230 --> 00:06:18.890
Manage.

80
00:06:20.780 --> 00:06:21.190
Dot.

81
00:06:22.040 --> 00:06:24.410
Times dot.

82
00:06:25.340 --> 00:06:26.570
Implicitly white.

83
00:06:27.290 --> 00:06:29.060
And then it takes two parameters.

84
00:06:29.750 --> 00:06:32.450
So the first parameter is the amount of time.

85
00:06:32.960 --> 00:06:34.920
So I'm going to use 10 seconds.

86
00:06:34.940 --> 00:06:35.960
So I'm going to write ten.

87
00:06:37.520 --> 00:06:48.320
And the second parameter we use time unit dot and then we select the type of time that number is going

88
00:06:48.320 --> 00:06:48.920
to be.

89
00:06:48.950 --> 00:06:50.810
So it's going to be seconds in this case.

90
00:06:52.500 --> 00:06:59.430
And then a semicolon at the end of it and you'll see that there's also an import here has been added

91
00:06:59.430 --> 00:07:00.450
for the time unit.

92
00:07:02.340 --> 00:07:08.730
So now I'm going to save this class and then try running it again to see if it resolves the issue.

93
00:07:13.260 --> 00:07:17.310
So we can see Daisy loaded the page and the loader is loading.

94
00:07:18.540 --> 00:07:23.890
And then the button has appeared and you may notice that the paragraph is now displayed.

95
00:07:24.210 --> 00:07:27.450
So that implies the button was found and they get clicked.

96
00:07:28.400 --> 00:07:32.390
And if we go back to Eclipse, you'll see that there is no error there.

97
00:07:34.350 --> 00:07:39.930
So we have been able to resolve this problem by simply using an implicit white.

98
00:07:41.220 --> 00:07:45.870
And the key thing to remember about implicit white is that it's global.

99
00:07:46.440 --> 00:07:53.400
So this line would only have to be set once in a class, and it would be applicable for every test or

100
00:07:53.400 --> 00:07:56.970
every interaction you're trying to do within the class itself.

101
00:07:59.190 --> 00:08:01.560
So I hope you found this lecture useful.

102
00:08:01.860 --> 00:08:04.730
And in the next one will be looking at explicit weights.

