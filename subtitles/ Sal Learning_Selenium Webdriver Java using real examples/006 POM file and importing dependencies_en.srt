1
00:00:00,490 --> 00:00:06,220
In this lecture, we take a look at the poem file and we learn how we can import dependencies.

2
00:00:07,960 --> 00:00:14,430
So notice how upon a Maven project being created, a poem file is automatically generated.

3
00:00:15,550 --> 00:00:22,330
We can now add to this pom file using dependencies found from a website called MVM a repository.

4
00:00:23,820 --> 00:00:28,860
All we have to do is add a dependency sample and perform a project update.

5
00:00:30,120 --> 00:00:37,620
So remember from earlier in this course when I downloaded the Selenium Java and the test in G jar files,

6
00:00:38,340 --> 00:00:42,070
I then imported those into my project in Eclipse.

7
00:00:42,990 --> 00:00:51,690
But now all we need to do is use the website MBM repository to find test n g in selenium java and it

8
00:00:51,690 --> 00:00:56,940
will provide us with a example that we can use by placing into our POM file.

9
00:00:57,660 --> 00:01:01,860
A maven will take care of fetch in those jar files for us.

10
00:01:03,980 --> 00:01:06,920
So this is an example of a pom file.

11
00:01:07,430 --> 00:01:10,310
So this is what the default pong file looks like.

12
00:01:11,090 --> 00:01:16,610
And you can notice on 910 and 917, there's dependencies.

13
00:01:16,610 --> 00:01:17,270
Tag cell.

14
00:01:18,240 --> 00:01:22,500
And on 911 and 916, there was a dependency.

15
00:01:23,440 --> 00:01:27,910
And the default dependency that comes with a POM file is j unit.

16
00:01:29,260 --> 00:01:34,870
So we can remove J unit if we don't require it or we can add more dependencies.

17
00:01:35,380 --> 00:01:37,890
Based on the technology we intend to use.

18
00:01:40,420 --> 00:01:45,040
So I intend to use Selenium, Java and Test Engine Maven project.

19
00:01:46,440 --> 00:01:50,730
We need to source the dependencies from M.V. and repository become.

20
00:01:52,120 --> 00:01:59,110
We simply search for selenium, java and test then g and decide on the version that we want to use.

21
00:02:00,460 --> 00:02:05,950
We are then shown the MAVEN dependency XML, which we can simply copy to our clipboard.

22
00:02:07,420 --> 00:02:11,410
We can then add the dependency, the pace in it into our POM file.

23
00:02:13,130 --> 00:02:14,630
So let's start doing this.

24
00:02:16,700 --> 00:02:22,250
So before I go and download the dependencies, let's first prepare our project.

25
00:02:23,000 --> 00:02:30,230
So I'm going to be using the MAVEN Project from this point onwards and you'll see that there is twofold

26
00:02:30,230 --> 00:02:34,070
is here source main Java and source test Java.

27
00:02:35,000 --> 00:02:40,670
So we are going to place our test classes under the source test Java folder.

28
00:02:41,420 --> 00:02:44,780
And if I expand it, you'll see there's a default package here.

29
00:02:45,290 --> 00:02:50,780
And if I expand that, there is also a default Java class called APA test.

30
00:02:51,950 --> 00:02:57,650
So I am going to right click that package, select a new and select class.

31
00:02:58,600 --> 00:03:02,370
And I'm going to call this Class l06.

32
00:03:03,460 --> 00:03:07,120
Underscore home and then click Finish.

33
00:03:09,260 --> 00:03:16,870
So if I open up that class now, I'm going to prove to you that I don't have Selenium Java installed.

34
00:03:17,950 --> 00:03:19,270
So if I used.

35
00:03:20,320 --> 00:03:20,740
Webb.

36
00:03:21,790 --> 00:03:25,450
Driver, driver and try.

37
00:03:26,400 --> 00:03:27,780
Imported wave driver.

38
00:03:28,530 --> 00:03:30,860
You'll see that I've got no options imported.

39
00:03:31,620 --> 00:03:35,850
So that's because we don't have Selenium Java installed into this project.

40
00:03:37,140 --> 00:03:46,440
So what I'm going to do now is open up Chrome and I'm going to try the N repository and then click Enter.

41
00:03:47,680 --> 00:03:51,220
And the first result should be to end the repository become.

42
00:03:53,320 --> 00:03:56,960
So at the top, I'm going to search for Selenium Java.

43
00:03:57,730 --> 00:04:02,680
And if I search, you'll see as a result from org dot selenium.

44
00:04:02,680 --> 00:04:04,330
HQ dot selenium.

45
00:04:05,460 --> 00:04:09,060
So I'm going to select that, which would take me to the following page.

46
00:04:10,340 --> 00:04:13,190
So this is the Selenium Java dependency.

47
00:04:13,850 --> 00:04:18,200
And you can see here there's a number of different versions that we can use.

48
00:04:19,670 --> 00:04:27,080
So at the time of recording this, Selenium four is in an alpha and beta state, so there is no official

49
00:04:27,080 --> 00:04:28,010
release yet.

50
00:04:28,790 --> 00:04:36,260
But the last stable release is a version 3.141.59.

51
00:04:37,310 --> 00:04:44,660
So I am going to select that version and it takes me to the following page and you can see at the bottom

52
00:04:44,660 --> 00:04:48,830
here is a maven tag and there is some example provided.

53
00:04:49,910 --> 00:04:54,620
So I am going to copy this using control C on my keyboard.

54
00:04:55,490 --> 00:04:59,480
And if I go back to eclipse and open up my PNG file.

55
00:05:01,430 --> 00:05:07,300
You'll see currently in the dependencies tags is a default dependency of j unit.

56
00:05:08,430 --> 00:05:14,640
So I'm now going to paste that selenium Java dependency underneath like so.

57
00:05:15,890 --> 00:05:18,290
And a little tip which is useful in eclipse.

58
00:05:18,770 --> 00:05:22,340
If you hold control, shift an F on your keyboard.

59
00:05:22,940 --> 00:05:24,890
It reformat your code for you.

60
00:05:26,340 --> 00:05:30,390
So now I have the selenium java dependency in my pom file.

61
00:05:31,380 --> 00:05:36,390
And when I save this file, take notes at the bottom right hand corner of my screen.

62
00:05:39,790 --> 00:05:44,440
So you can see that Maven is build in my project with that dependency.

63
00:05:45,530 --> 00:05:47,570
And now if I close this pom file.

64
00:05:48,680 --> 00:05:52,250
And if I save this Java class.

65
00:05:54,450 --> 00:05:55,890
And hover over Web driver.

66
00:05:56,490 --> 00:06:02,910
You'll see that currently I don't have an option to import it, but if I close that class and reopen

67
00:06:02,910 --> 00:06:03,060
it.

68
00:06:04,260 --> 00:06:09,510
You'll see this time I've got an option to import web driver from selenium.

69
00:06:11,500 --> 00:06:20,980
So that proves that I'm able to download dependencies by simply updating my POM file using the dependency

70
00:06:20,980 --> 00:06:24,550
code that I have retrieved from my VM repository.

71
00:06:25,750 --> 00:06:28,290
So I'm going to do the same for Test n g.

72
00:06:30,650 --> 00:06:33,980
And the first result is from org dot test nj.

73
00:06:34,280 --> 00:06:35,150
And if I click it.

74
00:06:36,160 --> 00:06:37,990
You'll see there's a number of versions.

75
00:06:38,320 --> 00:06:40,360
So I'm going to use the latest version.

76
00:06:40,540 --> 00:06:42,460
7.4.0.

77
00:06:44,200 --> 00:06:47,200
And again, I'm going to take the Maven example.

78
00:06:48,520 --> 00:06:54,460
And copy it and I'm going to paste it below the Selenium Java like so.

79
00:06:57,480 --> 00:07:05,190
So now I am going to save this POM file and again it will download the dependency for me and now test

80
00:07:05,200 --> 00:07:07,920
energy will be within this project.

81
00:07:09,470 --> 00:07:11,120
So if I save this for now.

82
00:07:12,750 --> 00:07:15,780
And if I created a new method.

83
00:07:16,050 --> 00:07:17,490
So I'm going to call one public.

84
00:07:18,630 --> 00:07:19,170
Void.

85
00:07:20,350 --> 00:07:21,580
Test and G.

86
00:07:25,210 --> 00:07:26,860
And now if I use assert.

87
00:07:28,880 --> 00:07:34,190
You'll see that there is a class the test n g daughters present.

88
00:07:35,490 --> 00:07:42,570
There's also the one for J unit, and that's because the POM file also contains J unit dependency.

89
00:07:43,380 --> 00:07:49,050
And since I'm not going to be using my units, I'm actually going to delete that and then save it.

90
00:07:51,250 --> 00:07:57,520
So the purpose of this lecture was to show you how we can source dependencies and how we can place them

91
00:07:57,520 --> 00:08:02,500
into our project by inserting the dependency in our POM file.

92
00:08:03,470 --> 00:08:11,840
And then if we save the POM file and if we save the class, women are able to access those technologies

93
00:08:11,840 --> 00:08:12,920
that we've downloaded.

94
00:08:14,370 --> 00:08:20,610
So if you ever do come across a problem where you believe your project's not updated, you also have

95
00:08:20,610 --> 00:08:24,630
the option to go to project and use the clean function.

96
00:08:25,440 --> 00:08:32,850
So what this would do is that it would rebuild your project and it will redownload dependencies for

97
00:08:32,850 --> 00:08:33,059
you.

98
00:08:34,200 --> 00:08:36,690
So I hope you found this lecture useful.

99
00:08:37,169 --> 00:08:38,390
And thank you for watching.

