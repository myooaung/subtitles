WEBVTT
1
00:00:00.540 --> 00:00:03.210
In this lecture, we take a look at Wild Oats.

2
00:00:04.400 --> 00:00:05.960
So what's our while loops?

3
00:00:06.620 --> 00:00:10.910
A one loop is a programming language conditional iterative statement.

4
00:00:12.040 --> 00:00:18.280
This means the code will loop continuously while checking for a certain condition and will execute the

5
00:00:18.280 --> 00:00:21.340
code within the loop as long as those conditions are met.

6
00:00:22.790 --> 00:00:29.330
For example, imagine you have five roses in your hand, and every time you pass a person in the street,

7
00:00:29.660 --> 00:00:30.770
you hand them a rose.

8
00:00:31.960 --> 00:00:34.990
When you run out of roses, you stop handing them out.

9
00:00:36.360 --> 00:00:40.140
This is, in a way, a conditional, iterative statement.

10
00:00:40.680 --> 00:00:44.970
You continue to hand out roses as long as they are roses to hand out.

11
00:00:47.460 --> 00:00:48.780
So let's see an example.

12
00:00:50.400 --> 00:00:55.890
So in Eclipse, I'm going to simply copy and paste the class in the last lecture hall in this one L

13
00:00:55.890 --> 00:01:00.610
12 for lecture 12 and I'm going to give it a name of while late.

14
00:01:01.960 --> 00:01:02.560
Like so.

15
00:01:03.980 --> 00:01:08.880
Then I'm going to open up the class and simply remove the code from the last lecture.

16
00:01:10.840 --> 00:01:15.940
So the first thing I'm going to do is I'm going to create an INT variable and I'm going to call this

17
00:01:15.940 --> 00:01:21.400
int variable rose count and it's going to equal the value of five.

18
00:01:22.950 --> 00:01:30.360
I'm then going to write a while loop, so I'm going to use while and then in brackets I'm going to declare

19
00:01:30.360 --> 00:01:31.490
the variable name.

20
00:01:31.500 --> 00:01:33.480
So rows count.

21
00:01:35.380 --> 00:01:36.670
And I'm going to use a condition.

22
00:01:36.830 --> 00:01:38.020
So this means not.

23
00:01:39.210 --> 00:01:41.220
Equal zero.

24
00:01:43.320 --> 00:01:45.810
And then I'm going to create some braces like so.

25
00:01:47.080 --> 00:01:51.800
So what is is doing is is he is getting the value of his count, which is currently five.

26
00:01:52.450 --> 00:01:58.510
And he's checking to see this is a condition which means not equal to the value of zero.

27
00:01:59.170 --> 00:02:03.640
So if it doesn't equal the value zero, then run the code inside these braces.

28
00:02:04.920 --> 00:02:08.100
So inside the braces, I'm going through my system.

29
00:02:08.970 --> 00:02:13.010
Thoughts out, thoughts, print, end and in brackets.

30
00:02:13.020 --> 00:02:14.000
I'm going to write.

31
00:02:14.490 --> 00:02:15.780
There are.

32
00:02:17.850 --> 00:02:21.120
Then I'm going to include the variable rose counts in this.

33
00:02:25.360 --> 00:02:26.830
Roses remain in.

34
00:02:31.020 --> 00:02:33.900
So you haven't seen me doing this training here.

35
00:02:33.930 --> 00:02:38.370
Within the system, the prince out but also in is is creating.

36
00:02:38.400 --> 00:02:39.350
This is a string.

37
00:02:39.360 --> 00:02:41.610
So there are there's going to output.

38
00:02:41.610 --> 00:02:43.530
There are takes in the console.

39
00:02:44.110 --> 00:02:48.060
Then by using the plus symbols, I'm able to include the variable.

40
00:02:49.070 --> 00:02:50.210
So I'm using Rose Councilor.

41
00:02:50.210 --> 00:02:54.470
It's going to pass the value of Rose Count each time is System.out.println.

42
00:02:55.340 --> 00:03:00.500
And then the second plus sign then allows me to add another string value in now.

43
00:03:00.890 --> 00:03:01.790
So it's going to print out.

44
00:03:01.790 --> 00:03:06.200
There are five roses remaining and it's going to run again and again and again.

45
00:03:06.440 --> 00:03:08.090
But I expect this to decrease.

46
00:03:09.290 --> 00:03:17.450
So after that line, I am going to do rose count, minus, minus and a semicolon.

47
00:03:18.500 --> 00:03:21.680
So this is the opposite of what we used in the for loop.

48
00:03:22.100 --> 00:03:26.060
So in the loop, if you remember I used A-plus plus two increment.

49
00:03:26.660 --> 00:03:29.810
I'm using rose count minus minus the decrement.

50
00:03:30.740 --> 00:03:36.050
So what this means is each time this code runs, it's going to take one away from this value.

51
00:03:38.280 --> 00:03:44.640
So hopefully that makes sense and I expect this wisely to stop executing only when this.

52
00:03:45.880 --> 00:03:46.870
Equals zero.

53
00:03:47.470 --> 00:03:50.140
So if rows count doesn't equal zero.

54
00:03:51.650 --> 00:03:53.180
They don't expect this code to run.

55
00:03:53.790 --> 00:03:58.160
If Rose Count does equal zero, then this condition is no longer true.

56
00:03:58.730 --> 00:04:00.980
And so I expect it to stop executing.

57
00:04:02.290 --> 00:04:04.570
So let me save this and try running it.

58
00:04:08.850 --> 00:04:11.360
And you can see that on the first line.

59
00:04:11.370 --> 00:04:12.930
It started with five roses.

60
00:04:14.160 --> 00:04:20.670
And then what happened was this line here subtracted one away from this value, and then it ran a next

61
00:04:20.670 --> 00:04:21.060
time.

62
00:04:21.540 --> 00:04:27.930
Hence why four roses were remaining and it continued until there was only one rows remain.

63
00:04:29.120 --> 00:04:33.320
And then once there was one rose of remaining, it tried to subtract him.

64
00:04:33.320 --> 00:04:35.570
One more change in this two zero.

65
00:04:36.680 --> 00:04:41.600
And because this condition is no longer met, this code did didn't execute.

66
00:04:44.200 --> 00:04:46.160
So I hope that made sense here.

67
00:04:46.180 --> 00:04:53.020
It's a little bit to take in, but hopefully you gathered the main parts of what I was trying to explain.

68
00:04:54.410 --> 00:04:56.330
So thank you again for watching.

69
00:04:56.330 --> 00:04:58.400
And I will speak to you in the next lecture.

