1
00:00:00,860 --> 00:00:07,310
Now that we've created our paid object classes, we're in a position to start constructing our tests.

2
00:00:08,240 --> 00:00:15,830
So the first test is going to be called or the complete test, and this can replicate a user go into

3
00:00:15,830 --> 00:00:17,600
the automation test in website.

4
00:00:18,630 --> 00:00:24,930
Scrolling down to find the test or link, and when they click it, they'll be brought to the test store

5
00:00:24,960 --> 00:00:25,710
home page.

6
00:00:26,700 --> 00:00:29,340
This user is then going to select item one.

7
00:00:30,240 --> 00:00:33,600
They're going to change the quantity or so the size to medium.

8
00:00:34,440 --> 00:00:36,450
They're going to change the quantity to two.

9
00:00:37,110 --> 00:00:39,480
And then they're going to add the item to CART.

10
00:00:40,880 --> 00:00:42,770
This wouldn't even bring up the funding panel.

11
00:00:43,790 --> 00:00:45,230
The user would then select.

12
00:00:45,230 --> 00:00:46,370
Proceed to check out.

13
00:00:47,880 --> 00:00:49,440
On the shopping cart page.

14
00:00:49,620 --> 00:00:52,020
They're going to select, have a promo code.

15
00:00:53,100 --> 00:00:56,790
And they're going to enter promo code of 20 off.

16
00:00:57,630 --> 00:01:02,610
And when they added, it would deduct 20% from the total price.

17
00:01:03,710 --> 00:01:06,320
They then select the proceed to checkout button.

18
00:01:07,370 --> 00:01:10,190
And they'll be taken to the personal information page.

19
00:01:11,290 --> 00:01:19,300
Don't enter dummy data here and then click continue to be taken to the address page without enter dummy

20
00:01:19,300 --> 00:01:20,590
address information.

21
00:01:21,370 --> 00:01:25,390
Then then proceed to the shipping method page and select shipping method.

22
00:01:26,110 --> 00:01:32,050
By finally going to the payment page and selecting the payment method where the order will be placed.

23
00:01:33,230 --> 00:01:36,260
So this is replicating an end to end test.

24
00:01:36,620 --> 00:01:41,510
That's a user will do if they were to buy an item from the test or website.

25
00:01:43,890 --> 00:01:49,470
So to begin, we are going to create a new class for this or the complete test.

26
00:01:50,070 --> 00:01:55,530
And as it's a test, we're going to create this under the source test Java folder.

27
00:01:56,960 --> 00:02:03,800
Here we have a default package called automation testing, and I'm going to simply reuse this package

28
00:02:04,040 --> 00:02:07,790
by right click in selected new and select in class.

29
00:02:09,810 --> 00:02:18,260
I'm going to give this class a name of order, complete test, and I'm going to click Finish, which

30
00:02:18,300 --> 00:02:19,530
will open up the class.

31
00:02:20,970 --> 00:02:25,800
So the first thing I'm going to do in this class is use the extensions keyword.

32
00:02:27,290 --> 00:02:30,230
And it's going to extend the base age.

33
00:02:31,610 --> 00:02:38,000
If a hover over a base page, I'm given an option to import it and that import would be listed here.

34
00:02:39,300 --> 00:02:42,630
You'll now see that there's an error and the other complete test.

35
00:02:43,140 --> 00:02:47,340
And if I hover over that, it says that we require a constructor.

36
00:02:48,490 --> 00:02:52,450
If I add that constructor, that then adds the following code.

37
00:02:54,120 --> 00:03:02,760
So remember we extended the base page and if I open up the base page, this base page contains a constructor

38
00:03:03,480 --> 00:03:08,010
and this constructor gives us access to this conflict of properties file.

39
00:03:10,070 --> 00:03:17,450
So that's why we need to add this construct the hill and that's why it uses the super keyword which

40
00:03:17,450 --> 00:03:22,700
calls the constructor from the extended page, which is the base page.

41
00:03:24,830 --> 00:03:28,460
The next thing we need to do is use test n g annotations.

42
00:03:29,390 --> 00:03:32,780
So I'm going to use at before test.

43
00:03:33,410 --> 00:03:35,720
So this will run before the test.

44
00:03:37,050 --> 00:03:42,480
And underneath that annotation, I'm going to create a new method and I'm going to call it public.

45
00:03:44,530 --> 00:03:45,070
Void.

46
00:03:46,500 --> 00:03:51,300
Set up with brackets and an open and close embrace.

47
00:03:52,340 --> 00:03:56,810
So if I hover over before test, you'll see I'm given an option to import it.

48
00:03:57,710 --> 00:03:59,390
And that error then goes away.

49
00:04:00,460 --> 00:04:04,090
So this setup method is going to be responsible for two things.

50
00:04:04,720 --> 00:04:12,400
It's going to nationalize the driver object, and it's also going to get the URL from the conflict properties

51
00:04:12,400 --> 00:04:12,850
file.

52
00:04:14,280 --> 00:04:23,220
So I'm going to write driver equals get driver with brackets and a semicolon.

53
00:04:25,140 --> 00:04:31,260
And if I hover over, get driver over, I need to add a declaration and that ever then goes away.

54
00:04:32,600 --> 00:04:34,880
So where is this driver coming from?

55
00:04:36,380 --> 00:04:43,310
So where we extending the base page, you'll see that we have a public static web driver field called

56
00:04:43,310 --> 00:04:43,880
driver.

57
00:04:44,810 --> 00:04:47,270
So we have a flow into this driver filled.

58
00:04:48,590 --> 00:04:54,350
We then use in get driver, which is a method inside that base page.

59
00:04:55,040 --> 00:05:01,910
And this method is responsible for initializing the driver object and expanding the window and exit

60
00:05:01,910 --> 00:05:04,340
onsets in an implicit way of 10 seconds.

61
00:05:06,520 --> 00:05:14,920
The next thing that we need to do in this test class is use driver to get an inside that gets inside

62
00:05:14,920 --> 00:05:15,790
the brackets.

63
00:05:16,330 --> 00:05:19,030
We pass in a method name of get URL.

64
00:05:20,050 --> 00:05:24,760
And this, again, is a method that belongs to the base page.

65
00:05:25,600 --> 00:05:28,990
And this method simply goes to the conflict up properties file.

66
00:05:29,650 --> 00:05:37,090
It looks for the key URL and it retrieves the value, which is the automation test in website address.

67
00:05:40,020 --> 00:05:44,010
So that is our set up and before test completes.

68
00:05:45,270 --> 00:05:50,130
The next one that we're going to use is after test.

69
00:05:51,070 --> 00:05:55,000
And I'm going to give this new method a name of public void.

70
00:05:56,260 --> 00:05:57,340
Tear down.

71
00:06:00,240 --> 00:06:08,250
Sadistic tear down method is going to be responsible for simply closing the browser and set in the driver

72
00:06:08,250 --> 00:06:09,630
field back to No.

73
00:06:10,850 --> 00:06:13,990
So I'm going to import off the test from test n g.

74
00:06:15,180 --> 00:06:21,390
And here I'm going to simply write Driver Dot Close, which will close the browser session.

75
00:06:22,290 --> 00:06:27,210
And then I'm going to write Driver Equals No.

76
00:06:28,260 --> 00:06:32,250
So remember, this will only be called after we've finished with the test.

77
00:06:33,120 --> 00:06:40,380
So driver equals now is simply set in this field here back to a no value.

78
00:06:43,800 --> 00:06:51,360
The next film we're going to do is use one more test in G annotation, and this is at test.

79
00:06:52,750 --> 00:06:58,360
So this method here is going to be the method that contains the contents of our actual test.

80
00:06:59,360 --> 00:07:00,260
So I'm going to run.

81
00:07:00,260 --> 00:07:05,300
It's public void and I'm going to give this method a name.

82
00:07:06,490 --> 00:07:10,060
And I'm going to call it end to end.

83
00:07:12,670 --> 00:07:14,020
Test like so.

84
00:07:15,740 --> 00:07:19,010
And then brackets and an open and close embrace.

85
00:07:20,570 --> 00:07:24,010
So I need to hover over test imported from test and G.

86
00:07:25,040 --> 00:07:26,690
And that era then goes away.

87
00:07:28,510 --> 00:07:35,170
So the first thing that I'm going to do in this test method is to use the home page, page object.

88
00:07:36,190 --> 00:07:40,960
So remember this home page page object refers to.

89
00:07:42,950 --> 00:07:45,050
The Automation Test in home page.

90
00:07:46,010 --> 00:07:51,880
And this is where we have a number of locators for various elements on this page.

91
00:07:53,500 --> 00:08:02,590
So to use this home page class, I'm going to write home page and I'm going to give this object.

92
00:08:02,590 --> 00:08:11,650
The name of home equals new home page and in brackets, followed by a semicolon.

93
00:08:12,970 --> 00:08:19,360
So if I hover over a home page, you'll see that I'm given an option to import home page from the page

94
00:08:19,360 --> 00:08:20,800
objects package.

95
00:08:21,820 --> 00:08:22,750
In doing so.

96
00:08:24,220 --> 00:08:27,040
You'll see the home page has been imported here.

97
00:08:28,490 --> 00:08:30,230
And that terror has now gone away.

98
00:08:31,280 --> 00:08:34,760
But there's also another error after the new homepage line.

99
00:08:35,570 --> 00:08:39,320
And if I hover over it, it says I need to add an argument.

100
00:08:40,570 --> 00:08:42,400
So if I go to the home page.

101
00:08:42,400 --> 00:08:43,480
Page objects.

102
00:08:44,080 --> 00:08:46,360
Remember, we've written a constructor here.

103
00:08:47,400 --> 00:08:51,300
And this construct those expect in a driver object to be passed.

104
00:08:52,440 --> 00:08:58,350
So this is why we need to provide the driver instance in these brackets.

105
00:08:59,730 --> 00:09:07,620
So this is now pass in his object, this driver instance and this driver object has been initialized

106
00:09:08,130 --> 00:09:10,680
in a before test setup method.

107
00:09:11,460 --> 00:09:13,470
And the driver also gets the neural.

108
00:09:14,940 --> 00:09:20,670
But this driver, which only comes from the public static Web driver from the base page.

109
00:09:22,070 --> 00:09:24,050
So by passing it to this object.

110
00:09:25,000 --> 00:09:31,840
This object now would know that we're dealing with this driver instance four, which we can use to interact

111
00:09:31,840 --> 00:09:33,580
with elements from the home page.

112
00:09:35,280 --> 00:09:38,670
So the next thing I'm going to do is use at home object.

113
00:09:39,760 --> 00:09:43,870
And I am going to use a method from that home.

114
00:09:43,990 --> 00:09:44,650
Page.

115
00:09:45,460 --> 00:09:45,850
Page.

116
00:09:45,850 --> 00:09:46,900
Object class.

117
00:09:48,330 --> 00:09:51,570
So I'm going to write thoughts get.

118
00:09:53,770 --> 00:09:55,690
Test store link.

119
00:09:58,050 --> 00:10:04,740
So this test or link is referring to a method that belongs to the home page page object class.

120
00:10:06,130 --> 00:10:07,300
And if we go down.

121
00:10:08,410 --> 00:10:09,550
We'll find that method.

122
00:10:12,020 --> 00:10:13,280
Which is listed here.

123
00:10:14,600 --> 00:10:17,720
Get test or link and is return in.

124
00:10:18,770 --> 00:10:26,600
Driver don't find element and it's providing a overpass in a field name, test or link if we scroll

125
00:10:26,600 --> 00:10:26,840
up.

126
00:10:27,920 --> 00:10:33,290
We will see that text or link is listed here and it contains the following locator.

127
00:10:34,810 --> 00:10:38,830
So this locator is a locator for this link here.

128
00:10:39,910 --> 00:10:41,770
So all we're saying in our test.

129
00:10:43,330 --> 00:10:52,800
Is to use the home object and it's going to use the get test or link which gets a locator for that test

130
00:10:52,810 --> 00:10:54,280
or link from the home page.

131
00:10:55,120 --> 00:10:57,220
And we want to carry out an action against it.

132
00:10:58,030 --> 00:11:02,290
So I'm going to use dots and I'm going to use the click function.

133
00:11:05,120 --> 00:11:09,290
So what he simply says or what it means, it's the go to this home page.

134
00:11:10,350 --> 00:11:13,200
Find this test for elements and then click it.

135
00:11:14,720 --> 00:11:18,140
And it should then bring us to the test or home page.

136
00:11:21,230 --> 00:11:32,360
So the next thing I need to do is use another page object and I'm going to use the shop home page class.

137
00:11:33,560 --> 00:11:41,090
And I'm going to give the name object name of shop home equals new shop.

138
00:11:43,090 --> 00:11:44,050
Home page.

139
00:11:48,250 --> 00:11:50,350
And at the end of that line, a semicolon.

140
00:11:51,560 --> 00:11:54,590
So again, I need to import shop home page.

141
00:11:55,990 --> 00:11:59,050
Which is this page object class.

142
00:12:00,040 --> 00:12:00,680
And again.

143
00:12:00,700 --> 00:12:02,620
Equals new shop home page.

144
00:12:02,620 --> 00:12:12,070
There's an error because again I need to provide the driver object because in shop home page and with

145
00:12:12,070 --> 00:12:18,820
all our other page object classes, we have a constructor that is expecting a driver to be passed to

146
00:12:18,820 --> 00:12:18,970
it.

147
00:12:24,300 --> 00:12:31,320
So now that I've created the shop home object, I could then use methods from the shop home page class.

148
00:12:32,310 --> 00:12:38,160
So if I go back to my browser, I want to click Products one.

149
00:12:40,190 --> 00:12:43,910
So all I'm going to use is the shop home object.

150
00:12:45,050 --> 00:12:51,410
And I'm going to use a method, some use dots, and then I'm going to call the method name, which is

151
00:12:51,410 --> 00:12:53,780
get prod one.

152
00:12:55,430 --> 00:12:59,150
Once I locate that product one, I then want to click it.

153
00:13:00,110 --> 00:13:06,140
By doing so, I expect this product to be clicked and to be taken to the following page.

154
00:13:09,740 --> 00:13:13,670
So hopefully you can see the concept that I'm following here.

155
00:13:15,030 --> 00:13:22,350
I'm using the page objects to interact with each individual page, and I'm able to interact with those

156
00:13:22,350 --> 00:13:27,150
elements by using methods that belongs to that page object class.

157
00:13:28,630 --> 00:13:34,750
So I'm going to stop this lecture at this point and we'll continue building our test in the next lecture.

