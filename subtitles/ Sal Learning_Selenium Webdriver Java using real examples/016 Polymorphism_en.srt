1
00:00:00,510 --> 00:00:03,690
So this time, let's take a look at the concept of polymorphism.

2
00:00:04,320 --> 00:00:10,290
So I'm going to copy and paste the class in the last lecture calling this L15 for lecture 15.

3
00:00:11,250 --> 00:00:13,130
And give it in the name of Polly.

4
00:00:15,780 --> 00:00:18,150
More polymorphism like so and click.

5
00:00:18,240 --> 00:00:18,740
Okay.

6
00:00:21,050 --> 00:00:21,260
Right.

7
00:00:21,350 --> 00:00:23,330
So I am going to delete.

8
00:00:24,580 --> 00:00:28,750
All this content from the last lecture and also clear out the main method like so.

9
00:00:31,490 --> 00:00:37,250
So the first thing I'm going to do outside of the last race is create a new class, and I'm going to

10
00:00:37,250 --> 00:00:38,210
call this class.

11
00:00:41,070 --> 00:00:41,520
Animal.

12
00:00:45,340 --> 00:00:46,870
And open and close embraces.

13
00:00:48,060 --> 00:00:51,840
And inside this, I am going to have a very simple.

14
00:00:52,990 --> 00:00:54,940
Method called public void.

15
00:00:56,170 --> 00:00:57,520
Make sound.

16
00:01:00,420 --> 00:01:02,520
And this is simply going to you system.

17
00:01:03,810 --> 00:01:06,540
Dot out Prince Helen.

18
00:01:08,140 --> 00:01:13,840
And inside those double quotes, it's going to make you sound like a sheep.

19
00:01:16,680 --> 00:01:24,420
So outside of this class, I am going to create another class and it's going to be called doc and it's

20
00:01:24,420 --> 00:01:25,470
going to extend.

21
00:01:26,470 --> 00:01:27,580
The animal class.

22
00:01:29,620 --> 00:01:31,160
In open and close embraces.

23
00:01:32,880 --> 00:01:39,120
So this is going to have a method similar to animal called make sound.

24
00:01:41,690 --> 00:01:46,070
And this time, sir, if I just copy this and paste it here.

25
00:01:49,120 --> 00:01:52,750
This class as it's a dog is going to make a sound of woof.

26
00:01:55,880 --> 00:01:59,240
And then below this, if I just copy this class and create another one.

27
00:02:00,320 --> 00:02:02,360
And I'm going to change the class name to Cat.

28
00:02:03,150 --> 00:02:05,190
Again, extends the animal class.

29
00:02:06,770 --> 00:02:10,850
But the sound this class makes is meow like so.

30
00:02:13,170 --> 00:02:19,650
So have free classes, an animal class, a dog class which extends animal and a cat that extends animal.

31
00:02:20,130 --> 00:02:27,900
An all free have to make sound method for each implementation that makes a different sound based on

32
00:02:27,900 --> 00:02:28,710
the animal type.

33
00:02:30,760 --> 00:02:34,240
So in the main method, I am going to do the following.

34
00:02:35,770 --> 00:02:37,350
So I am going to riot.

35
00:02:39,590 --> 00:02:40,160
Animal.

36
00:02:41,260 --> 00:02:44,200
Benji equals new.

37
00:02:45,650 --> 00:02:46,190
Animal.

38
00:02:47,560 --> 00:02:48,220
Like so.

39
00:02:49,480 --> 00:02:51,340
And then I going to use Benji.

40
00:02:54,290 --> 00:02:56,090
And use the make sound method.

41
00:02:59,350 --> 00:03:01,150
I'm then going to reuse Benji.

42
00:03:02,690 --> 00:03:08,300
But this time I'm going to change it to equal a new instance of the dog class.

43
00:03:10,450 --> 00:03:11,680
And then again on the news.

44
00:03:11,680 --> 00:03:14,050
Benji does not make sound.

45
00:03:16,220 --> 00:03:23,660
Then finally, I'm going to use Benji again, this time to equal a new cat instant.

46
00:03:25,860 --> 00:03:26,960
And I'm going to use Benjy.

47
00:03:27,000 --> 00:03:28,020
Don't make sound.

48
00:03:31,150 --> 00:03:35,980
So let me first save this class and then let me just talk you through what I've done here.

49
00:03:37,340 --> 00:03:39,560
So I've created a new object called Benji.

50
00:03:39,980 --> 00:03:45,200
And this is an object which is based on an instance of the animal class.

51
00:03:46,240 --> 00:03:51,310
I then used the Benji animal object to call the make sound method.

52
00:03:53,910 --> 00:04:03,270
I then reassign the Benji object to be an instance of the dog class and then I use the dog object to

53
00:04:03,270 --> 00:04:04,560
again make sound.

54
00:04:06,410 --> 00:04:07,910
And now I do the same for Kat.

55
00:04:08,030 --> 00:04:13,970
So I reassign it as a cat object, and then I'll call the Mike Sound method on the cat object.

56
00:04:15,490 --> 00:04:19,300
So let me output let me run this class and see what the output is.

57
00:04:21,550 --> 00:04:26,500
And you can see that free outputs have been placed by wolf meow.

58
00:04:28,430 --> 00:04:37,130
So the key thing to remember here is that we have reassigned the object to be of a different type of

59
00:04:37,340 --> 00:04:39,530
object based on another type of class.

60
00:04:40,720 --> 00:04:48,550
So Benji was originally an animal object, but then I reassigned it to be a dog object and then called

61
00:04:48,550 --> 00:04:51,010
the makes our method and the same for the cat.

62
00:04:51,700 --> 00:04:59,530
But each time it did so every time are called make sound is outputs a value that corresponds to the

63
00:04:59,830 --> 00:05:01,600
individual class itself.

64
00:05:03,890 --> 00:05:08,840
So you got to remember here that polymorphism means many forms.

65
00:05:11,470 --> 00:05:17,080
And it occurs when we have many classes that are related to each other by inheritance.

66
00:05:18,340 --> 00:05:25,720
Polymorphism uses those methods to perform different tasks, and this allows us to perform a single

67
00:05:25,720 --> 00:05:27,490
action in different ways.

68
00:05:28,960 --> 00:05:36,490
So what we're doing here by using Benji don't make sound when Benji is a dog object is that we're calling

69
00:05:36,700 --> 00:05:39,160
the makes our method in the animal class.

70
00:05:40,090 --> 00:05:42,760
But it outputs a value.

71
00:05:43,420 --> 00:05:50,110
So outputs worth which belongs to the dog class itself.

72
00:05:51,860 --> 00:05:56,720
So the dog and cat classes had their own instance of Mike Sound.

73
00:05:58,270 --> 00:06:05,710
But because we're using make sound here, the output or the value that's produced by the make it sound

74
00:06:05,710 --> 00:06:12,490
animal class method corresponds the value corresponds to the individual classes themselves.

75
00:06:14,140 --> 00:06:20,380
So the dog and the cat classes had their own implementations of make sound.

76
00:06:21,270 --> 00:06:23,370
But when we called those objects.

77
00:06:24,370 --> 00:06:31,660
We actually call in the method make sound that belongs to the animal class and the output is what corresponds

78
00:06:31,660 --> 00:06:39,760
to those subclasses, dog and cat, because their own instance of make sound holds different values.

79
00:06:41,950 --> 00:06:46,420
So this is polymorphism and like inheritance.

80
00:06:46,420 --> 00:06:49,060
They are quite tricky subjects to cover.

81
00:06:50,380 --> 00:06:57,640
But all I want you to take away from this lecture is to know that polymorphism means many forms, and

82
00:06:57,640 --> 00:07:02,230
it occurs when we have many classes that are related to each other by inheritance.

83
00:07:03,370 --> 00:07:12,310
The purpose of polymorphism is code reusability so we can reuse attributes and methods of an existing

84
00:07:12,310 --> 00:07:12,820
class.

85
00:07:13,030 --> 00:07:22,090
When you create a new class and that we have access to the animal class in this case because we use

86
00:07:22,090 --> 00:07:23,560
the extends keyword.

87
00:07:25,950 --> 00:07:31,800
So I hope that at least makes some sense and I'm not expecting you to understand is completely if this

88
00:07:31,800 --> 00:07:33,630
concept is completely new to you.

89
00:07:34,680 --> 00:07:43,140
But what I will say is that it is polymorphism like inheritance or key principles of object orientated

90
00:07:43,140 --> 00:07:43,860
programming.

91
00:07:44,100 --> 00:07:44,940
And in Java.

92
00:07:46,440 --> 00:07:49,530
So we'll see more of this later on in this course.

93
00:07:50,160 --> 00:07:54,630
But for now, I hope at least it's giving you a basic understanding of polymorphism.

