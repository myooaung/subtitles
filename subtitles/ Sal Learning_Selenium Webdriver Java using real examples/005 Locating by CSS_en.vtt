WEBVTT
1
00:00:01.310 --> 00:00:04.250
In this lecture, we take a look at locates in Boise.

2
00:00:04.260 --> 00:00:04.880
Assess.

3
00:00:06.350 --> 00:00:07.820
So what is cc?

4
00:00:08.570 --> 00:00:12.140
CC stands for cascading style sheets.

5
00:00:13.930 --> 00:00:18.700
It is used to describe how hates him or elements should be displayed on screen.

6
00:00:19.670 --> 00:00:25.730
It is used extensively across the web and can be used to control the appearance of elements across multiple

7
00:00:25.730 --> 00:00:26.570
web pages.

8
00:00:27.770 --> 00:00:31.130
We can use RSS to select elements of our chosen.

9
00:00:32.990 --> 00:00:36.170
This includes the property markers seen earlier.

10
00:00:38.000 --> 00:00:44.960
So if we look at the below code snippet, I'm using driver defined elements by CSF selector and then

11
00:00:44.960 --> 00:00:48.980
in the brackets and double quotes, I'm providing access value.

12
00:00:49.520 --> 00:00:55.490
In this case it's dot action star text and that DOT employs a class name.

13
00:00:56.390 --> 00:00:57.820
So let's look at an example.

14
00:00:59.110 --> 00:01:05.770
So as you are aware, the main purpose of this course is to teach you automation test in using Selenium

15
00:01:05.770 --> 00:01:06.400
web driver.

16
00:01:08.120 --> 00:01:16.160
But CCS plays a major part in how we can select certain elements, and we could then use those elements

17
00:01:16.160 --> 00:01:17.330
during in our tests.

18
00:01:19.030 --> 00:01:25.060
So it's important that you have at least a basic understanding of costs in order to get the most out

19
00:01:25.060 --> 00:01:25.900
of this course.

20
00:01:26.770 --> 00:01:33.340
And before I move on to showing you how we can select elements using CSR, I thought it was important

21
00:01:33.340 --> 00:01:35.380
to at least cover the basics.

22
00:01:36.280 --> 00:01:42.580
So I'm going to open up Chrome and I'm going to simply type in CCS and do a search.

23
00:01:43.330 --> 00:01:47.170
And the first result should be two w free schools dot com.

24
00:01:47.890 --> 00:01:51.640
And if I select this, it should take you to the following websites.

25
00:01:53.190 --> 00:01:57.600
So I'm interested in CSC syntax and cursor selectors.

26
00:01:58.410 --> 00:02:04.500
If I select syntax, you should see the following page and I'm interested in this section here.

27
00:02:06.240 --> 00:02:11.610
So when used in siesta style elements, we use the following syntax.

28
00:02:12.150 --> 00:02:16.110
We provide the select type and then we set a declaration.

29
00:02:16.530 --> 00:02:19.410
So in this case we set in the colour to be blue.

30
00:02:20.890 --> 00:02:26.230
So what this means is that for all one elements, we're applying some styling.

31
00:02:27.570 --> 00:02:33.360
So if we take this page for an example, let's pretend that this is a height one element.

32
00:02:34.640 --> 00:02:40.520
If I write the below syntax H1 brackets color colon blue.

33
00:02:41.920 --> 00:02:42.880
Semicolon.

34
00:02:43.150 --> 00:02:44.260
Font size.

35
00:02:44.260 --> 00:02:44.800
Colon.

36
00:02:44.800 --> 00:02:46.450
12 semicolon.

37
00:02:47.380 --> 00:02:54.100
This means to set the H1 color to blue and the font size to 12 pixels.

38
00:02:55.480 --> 00:03:05.110
So that's how CCIS can be used to apply a particular styling to a set of selectors or a single selector.

39
00:03:07.520 --> 00:03:12.770
Next I'm going to select this selectors link, which will take me to the following page.

40
00:03:14.590 --> 00:03:15.180
See here.

41
00:03:15.250 --> 00:03:19.060
What we're doing is learning about CSA selectors and it's states.

42
00:03:19.150 --> 00:03:23.620
A CSA selector selects the similar elements you want to style.

43
00:03:24.810 --> 00:03:30.630
But of course, in automation testing, we don't want to style the elements, but we want to interact

44
00:03:30.630 --> 00:03:31.410
with the elements.

45
00:03:32.040 --> 00:03:35.010
So that's why we're still going to be using CSA selectors.

46
00:03:36.500 --> 00:03:43.820
If we carry on reading it states that CSA selectors are used to find or select the similar elements

47
00:03:43.820 --> 00:03:44.750
you want to style.

48
00:03:45.920 --> 00:03:52.340
So again, let's ignore this want to style and instead let's use wants to interact in terms of automation

49
00:03:52.340 --> 00:03:52.850
testing.

50
00:03:54.890 --> 00:03:59.870
If we carry on reading, it says we can divide CSA selectors into five categories.

51
00:04:00.560 --> 00:04:06.680
So simple selectors such as by name, idea or class, which we've seen examples for.

52
00:04:07.610 --> 00:04:10.370
Combination selectors or Combinator selectors.

53
00:04:10.730 --> 00:04:14.090
So selecting elements based on a specific relationship between them.

54
00:04:15.170 --> 00:04:22.580
Persuade tho class selectors so selected elements based on a certain state persuader elements, selectors

55
00:04:23.120 --> 00:04:30.290
so select and style a part of an element or attribute selectors to select elements based on a particular

56
00:04:30.290 --> 00:04:30.940
attributes.

57
00:04:31.040 --> 00:04:32.030
HP value.

58
00:04:33.880 --> 00:04:40.960
So realistically, we're mainly going to be using the top two most and so we can see how we can use

59
00:04:40.960 --> 00:04:42.160
this as selectors.

60
00:04:42.430 --> 00:04:44.680
Any examples I'm going to show you later.

61
00:04:46.250 --> 00:04:51.530
But the key thing is, is to learn about how we can select elements used in CSIS.

62
00:04:53.390 --> 00:05:01.820
So if I scroll down on this menu here, you'll also see a link to CSIS selectors under the CSIS References

63
00:05:01.820 --> 00:05:02.330
section.

64
00:05:03.580 --> 00:05:06.730
If I click that link, it will take you to the following page.

65
00:05:08.480 --> 00:05:13.400
So this is a reference guide of how we can use RSS selectors.

66
00:05:14.790 --> 00:05:22.650
So in this case, if we look at the element example, an example is selecting the P tag and this will

67
00:05:22.650 --> 00:05:24.600
select all P elements.

68
00:05:26.250 --> 00:05:31.020
In the example below is provided an example of an element and a class.

69
00:05:31.770 --> 00:05:34.380
So P is the element dots.

70
00:05:34.680 --> 00:05:36.630
Intro is the class.

71
00:05:37.260 --> 00:05:41.160
And this will select LP elements with a class of intro.

72
00:05:42.740 --> 00:05:49.790
So what this means is it's a way of how we can use CSIS to select elements and we want to be able to

73
00:05:49.790 --> 00:05:57.200
select elements in our tests because we might want to do something such as enter text into a textbox

74
00:05:57.860 --> 00:05:59.150
or select the button.

75
00:06:00.630 --> 00:06:05.550
So understanding how we can use these selectors is a key part.

76
00:06:05.550 --> 00:06:06.810
Automation testing.

77
00:06:08.150 --> 00:06:14.800
And you'll find an automation test in CSA selectors is one of the most common ways to interact with

78
00:06:14.810 --> 00:06:15.410
elements.

79
00:06:16.070 --> 00:06:19.520
The other being exposed selectors which will cover later.

80
00:06:21.260 --> 00:06:29.500
So this is a basic understanding of CSA selectors and I highly recommend you go to this w free schools

81
00:06:29.630 --> 00:06:35.420
dot com website to at least spend some time learning about CSR selectors.

82
00:06:35.750 --> 00:06:37.670
If you're not confident on that already.

83
00:06:39.120 --> 00:06:42.420
But for now, I believe that's enough for us to continue.

84
00:06:43.070 --> 00:06:46.170
So let's look at an example of use in CSA selectors.

85
00:06:48.420 --> 00:06:51.180
So now let's take a look at an actual example.

86
00:06:51.780 --> 00:06:56.820
I'm going to open up Chrome and I'm going to go to the automation test in home page.

87
00:06:57.750 --> 00:07:04.170
I'm then going to click the button's link and then on this page I'm going to press F12 to open up the

88
00:07:04.170 --> 00:07:05.340
chrome develop at all.

89
00:07:06.240 --> 00:07:09.300
I'm then going to get to select it all and focus on bottom one.

90
00:07:09.810 --> 00:07:12.630
And we can see the HTML is now highlighted.

91
00:07:14.460 --> 00:07:21.720
So as we've seen previously, this person has an idea of baeten underscore one and we can use this I.D.

92
00:07:21.720 --> 00:07:28.230
by either using the buy I.D., select try type or by using by CSX select a type.

93
00:07:29.300 --> 00:07:32.920
In CSIS, an IED is represented by a hash.

94
00:07:33.860 --> 00:07:39.200
And if we look at the bottom right hand corner here, you can see button hash between underscore one,

95
00:07:39.620 --> 00:07:42.280
which is representing an element and then the unit date.

96
00:07:44.540 --> 00:07:50.210
So back in Eclipse, I'm going to highlight the class from the last lecture and I'm going to press control

97
00:07:50.210 --> 00:07:52.670
C and Control V to copy and paste it.

98
00:07:53.480 --> 00:08:00.500
And I'm going to call this new lecture l05 for lecture five I'm going to call it locates him by CSC

99
00:08:00.860 --> 00:08:01.940
and then click okay.

100
00:08:03.600 --> 00:08:06.030
And then going to double click that class to open it.

101
00:08:06.660 --> 00:08:09.450
And so I'm going to make some changes to this new class.

102
00:08:10.110 --> 00:08:12.420
The first thing I'm going to do is update the driver.

103
00:08:12.420 --> 00:08:18.780
They'll get method to use this web link, which takes me directly to the Buttons page, so I'm going

104
00:08:18.780 --> 00:08:20.400
to replace this existing value.

105
00:08:22.150 --> 00:08:26.860
I'm then going to delete the bottom line of this class, and I'm going to rewrite it for what we're

106
00:08:26.860 --> 00:08:27.730
trying to do here.

107
00:08:29.110 --> 00:08:34.720
So I am going to use a unique I.D. for the first button.

108
00:08:35.440 --> 00:08:39.610
So I'm going to write driver dot find element by.

109
00:08:40.650 --> 00:08:43.020
Dot CSA selector.

110
00:08:44.260 --> 00:08:47.830
And in brackets and double quotes, I'm going to provide a value.

111
00:08:48.790 --> 00:08:51.670
So I want you to think about what I'm going to provide here.

112
00:08:52.180 --> 00:08:55.600
So I'm using a CSA selector, so what can I use?

113
00:08:57.010 --> 00:08:58.340
So I have an idea.

114
00:09:00.170 --> 00:09:05.870
So if I copy this idea and then paste it in the double quotes, then at the end of the line, because

115
00:09:05.870 --> 00:09:07.820
it's a button, I want to click it.

116
00:09:08.300 --> 00:09:10.130
So I'm going to write a dot click.

117
00:09:13.180 --> 00:09:18.430
So I'm then going to say the class began to file and save and then I'm going to right click and run

118
00:09:18.430 --> 00:09:20.020
the class to see what happens.

119
00:09:21.410 --> 00:09:23.210
So what do you think is going to happen here?

120
00:09:24.410 --> 00:09:27.410
The browser has opened and it's gone to the Buttons page.

121
00:09:28.590 --> 00:09:29.640
But it hasn't clicked.

122
00:09:29.640 --> 00:09:30.390
Bottom one.

123
00:09:31.660 --> 00:09:35.950
And if we go back to Eclipse and look at a console, we can see it as an error here.

124
00:09:36.730 --> 00:09:41.170
And it states no such element is unable to locate the element.

125
00:09:42.340 --> 00:09:43.840
Why do you think that is?

126
00:09:46.100 --> 00:09:54.080
The reason is because we use in CSA selector, we need to tell sitting and web driver that we're providing

127
00:09:54.080 --> 00:09:55.340
an I.D. value.

128
00:09:55.700 --> 00:09:59.540
And to do that insists we need to provide the hash character.

129
00:10:00.410 --> 00:10:08.270
So this hash character is known in CSA as an I.D. so the value that follows a hash is the I.D. value.

130
00:10:08.870 --> 00:10:12.680
If used to do a dot as shown, now we indicate a class name.

131
00:10:14.270 --> 00:10:19.430
So I'm going to change this back to hash as this is an idea value that we provide in.

132
00:10:21.260 --> 00:10:24.950
So I'm going to save the class and try running it to see what happens.

133
00:10:30.650 --> 00:10:35.510
So we can see this time a alert has appeared saying we have clicked by one.

134
00:10:36.940 --> 00:10:37.920
So that's proven.

135
00:10:37.930 --> 00:10:44.380
That was able to click the button by using the I.D., but also by using the CCS selector.

136
00:10:45.440 --> 00:10:51.290
And if we look at the HTML, we can see that this element is also at button elements within an I.D.

137
00:10:52.040 --> 00:11:00.620
So another way we can write this using CCS or valid CCS is by placing the element type at the front

138
00:11:00.620 --> 00:11:01.430
of that value.

139
00:11:02.120 --> 00:11:08.510
So the element an in hash which indicates an I.D. of B10 underscore one.

140
00:11:10.500 --> 00:11:13.830
So if I was to save this and try run in the class again.

141
00:11:14.880 --> 00:11:15.930
Let's see what happens.

142
00:11:19.510 --> 00:11:26.770
And we can see that dealer appeared again proven that that value also worked to select parts of one

143
00:11:27.340 --> 00:11:31.660
and that was by providing the element and then the idea value, which is valid.

144
00:11:31.810 --> 00:11:32.070
Yes.

145
00:11:32.090 --> 00:11:32.500
Yes.

146
00:11:34.970 --> 00:11:40.100
So that is a high level overview of CSF selectors in Selenium Web Driver.

147
00:11:41.340 --> 00:11:48.810
The Seer says select the method allows us to avoid excess value in order to focus on a particular element

148
00:11:48.990 --> 00:11:50.910
that we may want to interact with.

149
00:11:52.630 --> 00:12:00.460
So I highly recommend you to go to the W Free Schools website to read up about selectors as understanding.

150
00:12:00.460 --> 00:12:04.000
CSA selectors will be highly beneficial for this course.

151
00:12:04.810 --> 00:12:06.340
But otherwise, don't worry.

152
00:12:06.700 --> 00:12:13.180
We'll be using CSA selectors extensively throughout this course and by the end you'll be very confident

153
00:12:13.180 --> 00:12:14.260
and familiar with them.

154
00:12:15.180 --> 00:12:16.170
Thank you for watching.

