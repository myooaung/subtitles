1
00:00:00,510 --> 00:00:04,710
In this lecture, we look at the importance of using a good naming convention.

2
00:00:06,320 --> 00:00:07,730
So consistent names.

3
00:00:08,270 --> 00:00:14,270
Imagine you had ten test classes but only want to run methods that are aimed at testing a tablet like

4
00:00:14,270 --> 00:00:14,840
an iPad.

5
00:00:16,020 --> 00:00:22,170
You can very easily do this by using testing groups and we cover groups later in this course.

6
00:00:22,680 --> 00:00:25,710
But you could also use a consistent method name to.

7
00:00:27,110 --> 00:00:33,260
For example, look at the below Java method names and you'll see some of these start with tablets.

8
00:00:33,650 --> 00:00:38,030
Others start with desktop and the remaining ones start with the word mobile.

9
00:00:40,690 --> 00:00:46,630
If we want to run just the tablet related methods, then we can do that by simply amending our test

10
00:00:46,630 --> 00:00:47,950
in XAML file.

11
00:00:49,990 --> 00:00:54,580
We can use the include takes to run methods that have a particular value in the name.

12
00:00:56,480 --> 00:01:02,240
For example, if we look at the below code, you'll see to I've used a method tags and then inside the

13
00:01:02,240 --> 00:01:10,490
Memphis tags I've used the include the take and I've provided the name of equals tablet dot Asterix

14
00:01:11,360 --> 00:01:14,090
and that Asterix employs a wild card.

15
00:01:14,690 --> 00:01:19,730
So it will look for anything that has tablet and if in after in the name.

16
00:01:22,820 --> 00:01:27,410
When we run this code, I need the methods that have tablets in the name will execute.

17
00:01:29,190 --> 00:01:34,710
The Asterix acts as a wildcard character, meaning anything following the tablet were then will run.

18
00:01:36,110 --> 00:01:41,420
This is useful because it gives us flexibility in being selective in the tests we choose to run.

19
00:01:43,310 --> 00:01:44,930
So let's look at an example of this.

20
00:01:46,850 --> 00:01:52,760
So in Eclipse I am going to copy the last class that I have available and paste it.

21
00:01:53,730 --> 00:02:01,700
And I'm going to call this new 1l06 because we in lecture six and I'm going to give it a name of home

22
00:02:01,770 --> 00:02:03,210
page like.

23
00:02:03,210 --> 00:02:04,980
So I'm going to click.

24
00:02:04,980 --> 00:02:05,490
Okay.

25
00:02:06,730 --> 00:02:08,560
I'm going to double click top in that class.

26
00:02:09,610 --> 00:02:14,920
And what I'm going to do here is I'm just going to rename these methods.

27
00:02:16,000 --> 00:02:20,440
So the first one I am going to call desk top.

28
00:02:22,700 --> 00:02:23,510
Underscore.

29
00:02:24,260 --> 00:02:24,800
Log in.

30
00:02:27,300 --> 00:02:32,850
And the second one I am going to call desk top and the school.

31
00:02:33,990 --> 00:02:35,070
Adds item.

32
00:02:37,140 --> 00:02:42,930
And this third one I am going to call tablet underscore log in.

33
00:02:44,550 --> 00:02:47,160
And I am going to create two more methods.

34
00:02:50,660 --> 00:02:52,430
And I am going to call this one here.

35
00:02:53,760 --> 00:02:56,490
Tablet add item.

36
00:02:57,590 --> 00:03:05,540
And I'm going to call this one here mobile, the score log in and I am just going to change the name

37
00:03:05,540 --> 00:03:08,380
of the system out message for each one of these.

38
00:03:08,390 --> 00:03:11,810
So I'm going to say this is desktop login.

39
00:03:14,370 --> 00:03:16,830
This one here is going to be desk top.

40
00:03:18,020 --> 00:03:19,250
Add item.

41
00:03:22,550 --> 00:03:24,380
Tablet login.

42
00:03:27,050 --> 00:03:27,770
Tablet.

43
00:03:28,990 --> 00:03:30,070
Adds item.

44
00:03:31,160 --> 00:03:34,670
And the final one, mobile.

45
00:03:35,960 --> 00:03:36,470
Log in.

46
00:03:36,650 --> 00:03:37,340
Like so.

47
00:03:38,820 --> 00:03:40,920
So I am now going to save this class.

48
00:03:42,030 --> 00:03:45,120
And I'm going to open up the testing XML file.

49
00:03:47,010 --> 00:03:52,280
So what I'm going to do here is update the class name.

50
00:03:53,130 --> 00:03:57,000
So currently it's looking at section 11, which is the package name.

51
00:03:57,880 --> 00:03:59,770
Dot an in the class name.

52
00:04:00,760 --> 00:04:03,760
So I am going to Minister l06.

53
00:04:05,410 --> 00:04:06,200
Underscore.

54
00:04:06,490 --> 00:04:08,860
Home page like so.

55
00:04:10,280 --> 00:04:14,240
And instead of exclude, I am going to change it to include.

56
00:04:15,110 --> 00:04:16,610
And the name I'm going to give.

57
00:04:18,329 --> 00:04:19,740
His desk top.

58
00:04:21,170 --> 00:04:23,420
Dot Asterix like so.

59
00:04:24,990 --> 00:04:28,800
Now, if I save this and try running it, let's see what happens.

60
00:04:34,580 --> 00:04:35,750
If that's the console.

61
00:04:36,170 --> 00:04:44,270
You'll see that two tests have run and if I go up, you'll see the output is desktop ad item and desktop

62
00:04:44,270 --> 00:04:44,830
log in.

63
00:04:46,390 --> 00:04:50,740
So if I go back to class, it has run this method.

64
00:04:51,930 --> 00:04:59,550
And this method and the reason it's done so is because this has desktop in the name where these ones

65
00:04:59,550 --> 00:05:01,320
do not start with the name desktop.

66
00:05:03,770 --> 00:05:07,070
So if I was to go back and change that to mobile.

67
00:05:09,690 --> 00:05:12,360
And then save and try running it again.

68
00:05:16,050 --> 00:05:18,210
You'll see there's only one test that has run.

69
00:05:19,170 --> 00:05:21,120
And that is mobile login.

70
00:05:22,410 --> 00:05:26,400
And that's because this method is the only one that starts with mobile.

71
00:05:28,170 --> 00:05:34,620
So this is why it makes sense to think about the method names that were provided, because if we wanted

72
00:05:34,620 --> 00:05:40,740
to, we could edit our tests in G file to use the wild card feature to be selective on what methods

73
00:05:40,740 --> 00:05:41,190
to run.

74
00:05:42,130 --> 00:05:43,180
Thank you for watching.

