1
00:00:00,600 --> 00:00:03,270
So we're now ready to try and run our test.

2
00:00:03,719 --> 00:00:05,790
So I'm going to do this in two ways.

3
00:00:06,450 --> 00:00:10,260
I'm going to run our tests sequentially like we've done previously.

4
00:00:10,740 --> 00:00:13,860
And then I'm going to try running it in parallel execution.

5
00:00:14,790 --> 00:00:21,120
So I'm going to open up my test, injects small file, and from when I attempted it last time, I already

6
00:00:21,120 --> 00:00:23,610
had the parallel execution code here.

7
00:00:24,450 --> 00:00:28,620
So I'm going to cut this and I'm going to add a comment.

8
00:00:32,570 --> 00:00:34,400
And just pace that line like so.

9
00:00:34,580 --> 00:00:35,900
Just so I can store it.

10
00:00:35,900 --> 00:00:37,280
So I can copy it after.

11
00:00:38,240 --> 00:00:44,420
So in his first attempt, I'm not going to use parallel execution just to make sure our tests still

12
00:00:44,420 --> 00:00:47,150
run in the usual mode that we've used previously.

13
00:00:48,200 --> 00:00:54,980
So I am going to save the test, inject simple file, and I'm then going to right click it, run as

14
00:00:55,310 --> 00:00:58,070
test suite and to see what happens.

15
00:01:49,460 --> 00:01:54,800
So our tests seem to run fine, even though we've made various changes to our framework.

16
00:01:55,520 --> 00:02:00,380
You can see from the results two tests have run one pass and one failure.

17
00:02:00,950 --> 00:02:07,640
And that failure was expected because in our tests the expected total value didn't match the true value.

18
00:02:08,949 --> 00:02:11,440
So now that works in the standard way.

19
00:02:11,800 --> 00:02:13,900
Let's try it with parallel execution.

20
00:02:14,680 --> 00:02:21,460
So I'm going to open up the test, inject small file, and I'm going to cut the parallel equals tests

21
00:02:21,730 --> 00:02:27,760
and thread count equals two and I'm going to pass that into my sweet take like.

22
00:02:27,760 --> 00:02:33,820
So I'm then going to save this test, inject some old file and try running it again.

23
00:02:34,720 --> 00:02:39,160
So when I run this, take note of the two browsers open up at the same time.

24
00:02:44,790 --> 00:02:52,860
So notice how to browse have opened and if I flick fruity so you can see that tests are processing at

25
00:02:52,860 --> 00:02:53,670
the same time.

26
00:02:55,430 --> 00:03:02,660
So this proves that with Fred local and the changes we've made to our framework that we can now run

27
00:03:02,780 --> 00:03:06,200
more than one test at the same time without issue.

28
00:03:07,660 --> 00:03:11,950
So once this test completes, let's take a look at the results in eclipse.

29
00:03:14,990 --> 00:03:21,440
And you can see that the suite again ran two tests, one pass and one failure as expected.

30
00:03:22,550 --> 00:03:29,060
So that proves the changes we've made to our framework has made it parallel execution compatible.

31
00:03:29,690 --> 00:03:33,650
This is a big advantage to speeding up running tests.

32
00:03:34,370 --> 00:03:35,720
Thank you for watching.

