WEBVTT
1
00:00:01.380 --> 00:00:08.310
So the next effort that began to create is going to be responsible for calling the flush method.

2
00:00:09.120 --> 00:00:15.600
And as we remember from the previous lectures, the flush command is what you name generates the actual

3
00:00:15.600 --> 00:00:16.170
report.

4
00:00:17.460 --> 00:00:22.230
So it needs to be run after all the reports and tests of completed running.

5
00:00:23.740 --> 00:00:25.510
So I'm going to call this method.

6
00:00:28.920 --> 00:00:29.550
Public.

7
00:00:31.610 --> 00:00:33.590
Static void.

8
00:00:35.550 --> 00:00:40.350
Flash report, an open and close embrace.

9
00:00:42.130 --> 00:00:44.830
I'm just going to make some more room here so you can see.

10
00:00:46.260 --> 00:00:52.170
And inside this method I am going to use the extent report filled, which is this one.

11
00:00:55.550 --> 00:00:56.630
And I'm going to add a dot.

12
00:00:58.260 --> 00:01:02.820
And you'll see that there is a method there that belongs to the extent reports class called flush.

13
00:01:03.800 --> 00:01:06.260
And as you can see in the description it right.

14
00:01:06.290 --> 00:01:10.340
Tests information from the start it reporter to the output view.

15
00:01:13.570 --> 00:01:15.760
And asked that method now complete.

16
00:01:19.300 --> 00:01:27.680
So this next method is going to get the test and it's going to be using Fred local.

17
00:01:27.700 --> 00:01:32.950
So I'm going I'm going to be using the synchronized keyword as explained in a previous lecture.

18
00:01:34.270 --> 00:01:37.060
So I'm going to write public.

19
00:01:39.130 --> 00:01:39.640
Think.

20
00:01:41.260 --> 00:01:42.310
Transport is right.

21
00:01:42.550 --> 00:01:43.360
Reenergized.

22
00:01:46.500 --> 00:01:47.250
Static.

23
00:01:49.050 --> 00:01:52.110
Extent test.

24
00:01:53.240 --> 00:01:54.440
And I want to call this method.

25
00:01:54.440 --> 00:01:59.750
Get test round brackets and open and close embrace.

26
00:02:01.760 --> 00:02:03.530
And I am going to return.

27
00:02:06.730 --> 00:02:08.080
Extend test.

28
00:02:08.440 --> 00:02:10.870
So this is this field here.

29
00:02:14.410 --> 00:02:14.790
Dot.

30
00:02:15.380 --> 00:02:21.550
Get and get is a Fred local method which we've seen previously.

31
00:02:23.330 --> 00:02:24.280
The semi-colon.

32
00:02:30.250 --> 00:02:34.630
The next method is going to be responsible for creating the test.

33
00:02:35.560 --> 00:02:37.420
So again, I'm going to write public.

34
00:02:39.790 --> 00:02:40.780
Synchronized.

35
00:02:43.630 --> 00:02:44.380
Static.

36
00:02:46.240 --> 00:02:48.250
Extent test.

37
00:02:49.240 --> 00:02:52.720
And I'm going to call this method crate test.

38
00:02:53.790 --> 00:03:02.400
And it's going to take two parameters a string, which I'm going to call name followed by comma string.

39
00:03:03.990 --> 00:03:08.220
Description at the end of that, an open and close embrace.

40
00:03:10.370 --> 00:03:11.480
Inside this method.

41
00:03:11.690 --> 00:03:18.710
I am going to Riot's extent test and call it test equals.

42
00:03:20.090 --> 00:03:21.890
And I am going to use.

43
00:03:22.970 --> 00:03:24.770
This extent report filled.

44
00:03:29.710 --> 00:03:32.110
Dot create test.

45
00:03:36.490 --> 00:03:40.780
And I'm going to provide the parameters I've defined above.

46
00:03:41.200 --> 00:03:47.740
So name followed by the comma and description like so.

47
00:03:48.810 --> 00:03:51.120
And then a semicolon at the end of that.

48
00:03:53.790 --> 00:03:54.630
Below that line.

49
00:03:54.960 --> 00:03:58.680
I'm going to write extend test.

50
00:04:00.940 --> 00:04:01.980
Dot said.

51
00:04:02.110 --> 00:04:04.060
Which is another Fred local method.

52
00:04:05.640 --> 00:04:10.410
So it sets the current Fred's copy of this Fred local variable to a specified value.

53
00:04:12.500 --> 00:04:16.550
And inside that it's pass in this test here.

54
00:04:19.480 --> 00:04:22.029
Then all I need to write is return.

55
00:04:23.590 --> 00:04:25.150
Get test.

56
00:04:26.410 --> 00:04:27.010
Like so.

57
00:04:29.520 --> 00:04:31.380
So hopefully that makes sense.

58
00:04:31.650 --> 00:04:38.370
So again, I'm using synchronized static keywords and I'm calling a method on creating a method called

59
00:04:38.370 --> 00:04:41.850
create test, which takes two parameters, which are both strings.

60
00:04:42.890 --> 00:04:44.840
And then create an extent test.

61
00:04:44.850 --> 00:04:52.070
So an object name here equals extent report, which is a field that we've defined above and I'm calling

62
00:04:52.070 --> 00:04:54.170
a method of a create test.

63
00:04:55.070 --> 00:05:04.580
So this create test is a, a method which returns an extent test object and I'm passed into arguments

64
00:05:04.580 --> 00:05:06.500
which is name and description to it.

65
00:05:08.720 --> 00:05:10.850
I'm then call in extend test.

66
00:05:11.910 --> 00:05:13.110
Which is this field here.

67
00:05:14.370 --> 00:05:22.080
And because we use Fred local, we need to set the value of that Fred by using the set method name and

68
00:05:22.080 --> 00:05:25.980
I'm pass in this test I've created the test from.

69
00:05:27.230 --> 00:05:29.510
And then simply return in get test.

70
00:05:32.200 --> 00:05:33.910
So the next method that I need.

71
00:05:35.470 --> 00:05:37.000
All to do with the login.

72
00:05:38.630 --> 00:05:40.700
So I'm going to Riot's public.

73
00:05:43.890 --> 00:05:44.880
Synchronized.

74
00:05:49.030 --> 00:05:51.610
Static void.

75
00:05:53.020 --> 00:05:55.090
And I'm going to call this one log.

76
00:05:56.780 --> 00:06:03.680
And it's going to have a parameter of message, an open and close embrace.

77
00:06:04.580 --> 00:06:06.530
And inside this method, I'm going to riot.

78
00:06:07.460 --> 00:06:09.110
Get test.

79
00:06:11.180 --> 00:06:12.830
Dot info.

80
00:06:14.580 --> 00:06:20.430
And I'm going to simply pass the message parameter of a semicolon at the end.

81
00:06:22.270 --> 00:06:27.430
So if I highlight this test, you'll see that it's referring to this method here.

82
00:06:28.570 --> 00:06:32.110
And this method is return in the extent test.

83
00:06:32.110 --> 00:06:35.050
Don't get to get the fret information.

84
00:06:37.900 --> 00:06:42.070
So I can now use this method log within my tests.

85
00:06:42.790 --> 00:06:48.640
So this is going to be responsible for reporting information such as the tests that started.

86
00:06:50.810 --> 00:06:54.830
I'm then going to simply copy and paste that method.

87
00:06:55.820 --> 00:06:58.400
And I'm just going to make some minor changes for the next one.

88
00:06:59.210 --> 00:07:00.890
And I'm going to call this one pass.

89
00:07:02.120 --> 00:07:07.820
And again, it's going to have a parameter of string message and it's going to have a is going to again

90
00:07:07.820 --> 00:07:09.290
called get test method.

91
00:07:10.550 --> 00:07:15.080
But instead of dot info, I'm going to call dot pass.

92
00:07:17.340 --> 00:07:19.260
So this is log in a POS event.

93
00:07:20.690 --> 00:07:23.090
And again, I'm just passing that parameter.

94
00:07:24.660 --> 00:07:28.560
I'm going to copy this one more time and paste it here.

95
00:07:30.150 --> 00:07:32.940
And for this one, I'm going to call it fail.

96
00:07:33.950 --> 00:07:42.380
And instead of get test pass, it's going to be get test dots fail and again is passing that message.

97
00:07:44.070 --> 00:07:49.830
So these are the free logger methods that we need for which we can then use in our test classes.

98
00:07:51.350 --> 00:07:58.550
So all I need to do now is create one more method, and that method is going to be responsible for retrieving

99
00:07:58.550 --> 00:07:59.870
the screenshot image.

100
00:08:00.860 --> 00:08:02.230
So I'm going to write.

101
00:08:05.350 --> 00:08:05.950
Public.

102
00:08:07.850 --> 00:08:08.810
Synchronized.

103
00:08:11.370 --> 00:08:12.150
Static.

104
00:08:13.610 --> 00:08:14.180
Void.

105
00:08:15.930 --> 00:08:17.820
Attach image.

106
00:08:19.210 --> 00:08:22.870
In round brackets, an open and close embrace.

107
00:08:24.440 --> 00:08:33.950
And inside this method I may again going to use get test method dot and you can see if I start type

108
00:08:33.950 --> 00:08:34.460
in ADD.

109
00:08:35.150 --> 00:08:39.080
I've got methods here for add screen capture from path.

110
00:08:40.950 --> 00:08:45.780
So I am going to use this one which is add screen capture from path, string path.

111
00:08:47.180 --> 00:08:51.170
And you see that would automatically populate extent report prefix.

112
00:08:51.950 --> 00:08:56.300
But I'm going to delete that and add a semicolon at the end.

113
00:08:58.230 --> 00:09:03.060
So what I need to do is provide a path where the screenshots are stored.

114
00:09:04.000 --> 00:09:05.770
And if I open up my base page.

115
00:09:06.830 --> 00:09:14.240
And scroll down, you'll see that this method here take snapshot is responsible for taking the screenshots

116
00:09:15.020 --> 00:09:23.450
and then it then stores or creates a file and stores in a destination file using this directory path

117
00:09:23.450 --> 00:09:23.750
here.

118
00:09:25.880 --> 00:09:27.260
So I've got an issue here.

119
00:09:28.350 --> 00:09:33.930
So I need my report to find the location or where the screenshots are captured.

120
00:09:34.960 --> 00:09:39.370
But when I'm creating my screenshots, I'm using dynamic fields here.

121
00:09:40.150 --> 00:09:45.340
So the timestamp, for example, is going to be different based on when that screenshot is taken.

122
00:09:46.360 --> 00:09:56.560
So I need to somehow think of a way to use the or this method or values from this field in order to

123
00:09:56.560 --> 00:09:57.130
use it.

124
00:09:57.350 --> 00:09:57.940
My extent.

125
00:09:57.940 --> 00:09:59.680
Report attached image.

126
00:10:01.580 --> 00:10:05.630
So this is where we need to make some changes to our base page class.

127
00:10:06.020 --> 00:10:13.340
We need to think of a way where we can pass the screenshot path to assistant manager, so I don't need

128
00:10:13.340 --> 00:10:19.190
to somehow retrieve the destination file path taken into account is dynamic.

129
00:10:20.290 --> 00:10:22.660
And I plan to do this in the folly of white.

130
00:10:24.930 --> 00:10:34.080
So in my base page, I'm going to create a new field and I'm going to call it public static string.

131
00:10:35.190 --> 00:10:36.840
And I'm going to give it a name of.

132
00:10:39.550 --> 00:10:41.920
Screen shot.

133
00:10:43.240 --> 00:10:44.260
Destination.

134
00:10:48.110 --> 00:10:50.780
Path of a semicolon at the end.

135
00:10:52.740 --> 00:10:55.860
So this string is going to store the.

136
00:10:57.470 --> 00:11:00.260
Destination file path name.

137
00:11:01.130 --> 00:11:05.060
So this is going to contain a directory, just the name of the screenshot.

138
00:11:06.810 --> 00:11:08.550
So in order to use this filled.

139
00:11:09.690 --> 00:11:12.960
I need to make some changes to my take snapshot method.

140
00:11:16.400 --> 00:11:16.700
So.

141
00:11:16.700 --> 00:11:19.530
Well, I'm using foil dressed foil instead.

142
00:11:19.550 --> 00:11:20.900
I'm going to change foil.

143
00:11:22.080 --> 00:11:22.800
To shrink.

144
00:11:24.060 --> 00:11:25.290
And that's going to throw an ever.

145
00:11:26.670 --> 00:11:28.530
So instead of a new file.

146
00:11:29.400 --> 00:11:30.450
If I move that.

147
00:11:33.960 --> 00:11:39.990
And remove the open round bracket like so and remove this close in round bracket at the end.

148
00:11:41.260 --> 00:11:42.670
You'll see that will be accepted.

149
00:11:44.210 --> 00:11:50.730
And so what I'm then going to do after this line is I am now going to use that new filled screenshot

150
00:11:50.730 --> 00:11:51.830
destination path.

151
00:11:54.840 --> 00:11:56.220
And it's going to equal.

152
00:11:57.400 --> 00:11:58.300
Test file.

153
00:11:59.840 --> 00:12:01.330
We have a semicolon at the end.

154
00:12:02.860 --> 00:12:03.880
Underneath this.

155
00:12:04.090 --> 00:12:11.470
I'm then going to use a try catch statement and try a catch statement is what's actually going to copy

156
00:12:11.920 --> 00:12:14.290
the file to a destination path.

157
00:12:15.510 --> 00:12:16.970
So I'm going to try.

158
00:12:18.600 --> 00:12:19.620
Open embrace.

159
00:12:21.510 --> 00:12:22.050
File.

160
00:12:24.130 --> 00:12:24.850
Utils.

161
00:12:26.250 --> 00:12:27.420
Got a copy.

162
00:12:28.590 --> 00:12:29.100
File.

163
00:12:31.260 --> 00:12:33.810
And here I'm going to pass source file.

164
00:12:35.100 --> 00:12:35.970
Which is this here?

165
00:12:37.450 --> 00:12:40.600
And in his second argument, I'm going to write new.

166
00:12:42.640 --> 00:12:43.180
File.

167
00:12:45.820 --> 00:12:49.110
And then in brackets, I'm going to pass this test file.

168
00:12:51.600 --> 00:12:51.960
Like.

169
00:12:51.960 --> 00:12:54.420
So it was semicolon at the end.

170
00:12:56.480 --> 00:12:59.510
And you say I actually need another close in bracket like so.

171
00:13:02.280 --> 00:13:05.970
Then after the close embrace, I'm going to add catch.

172
00:13:08.080 --> 00:13:09.910
And then in brackets I'm going to write.

173
00:13:09.950 --> 00:13:11.020
I own.

174
00:13:12.100 --> 00:13:16.690
E ception e like so.

175
00:13:17.950 --> 00:13:19.800
In another open and close embrace.

176
00:13:21.010 --> 00:13:28.480
And then I'm going to write e dot print stack trace and that will simply, if this fails, the catch

177
00:13:28.480 --> 00:13:31.600
will be triggered, which will simply print out and ever trace.

178
00:13:35.740 --> 00:13:40.990
So I no longer need this line here as we're dealing with this in this section here.

179
00:13:42.560 --> 00:13:45.050
But I need to return something.

180
00:13:45.860 --> 00:13:48.710
So, as you can see, this method is currently avoided.

181
00:13:49.490 --> 00:13:56.060
So I am going to change this from public void to public static string like so.

182
00:13:57.550 --> 00:14:02.950
And at the end here, this will now allow me to return a string for which I am going to return.

183
00:14:05.240 --> 00:14:07.130
This value here, which is name.

184
00:14:09.830 --> 00:14:11.260
If I had a semicolon.

185
00:14:13.000 --> 00:14:15.430
You'll see that those errors now go away.

186
00:14:16.800 --> 00:14:20.610
But you'll see that there is an error on the timestamp because I need to change.

187
00:14:20.640 --> 00:14:25.050
It's a static which will simply amend this method here like so.

188
00:14:27.370 --> 00:14:34.600
So now that I've amended this take snapshot, I can now use this field as is.

189
00:14:34.600 --> 00:14:39.880
Field will contain the path of the screenshot because I have used it here.

190
00:14:41.500 --> 00:14:46.840
So what I'm going to do is I'm going to create one more method in this space page, and I'm going to

191
00:14:46.840 --> 00:14:49.210
do so underneath this timestamp method.

192
00:14:50.140 --> 00:14:51.490
And I'm going to write the following.

193
00:14:53.980 --> 00:14:57.400
Public static string.

194
00:14:59.110 --> 00:15:03.590
And I'm going to call it get the screen shot.

195
00:15:04.540 --> 00:15:10.480
Destination path, an open and close embrace.

196
00:15:11.170 --> 00:15:12.340
And it's going to return.

197
00:15:13.090 --> 00:15:15.280
And it's going to return this field here.

198
00:15:18.710 --> 00:15:20.540
With a semicolon at the end.

199
00:15:22.070 --> 00:15:23.960
So now if I save this space page.

200
00:15:25.600 --> 00:15:27.940
And now we turn, to my extent, manager class.

201
00:15:29.070 --> 00:15:30.240
In these brackets here.

202
00:15:31.170 --> 00:15:33.630
I'm now going to pass this new method.

203
00:15:36.840 --> 00:15:37.470
Like so.

204
00:15:38.630 --> 00:15:39.890
And you see there's an error here.

205
00:15:40.790 --> 00:15:46.190
And the reason for that is I need to add round brackets and that error will now go away.

206
00:15:48.260 --> 00:15:55.280
So when this method is called, it's going to attach the image to the reports, and it does so by its

207
00:15:55.280 --> 00:15:59.900
haste by calling the get test method and then add screenshot capture from.

208
00:16:00.770 --> 00:16:08.120
So this is a extend test method and then it's looking for a destination of where it's going to attach

209
00:16:08.120 --> 00:16:08.870
the image from.

210
00:16:10.190 --> 00:16:15.620
So by amending the base page, I've now changed the Take Snapshots method.

211
00:16:16.560 --> 00:16:23.940
But using a new filter I've created called screenshot destination path and is equal in the value of

212
00:16:23.940 --> 00:16:30.870
this file and that this file contains a path to where the screenshots is created.

213
00:16:30.870 --> 00:16:32.010
And the screenshot name.

214
00:16:34.260 --> 00:16:42.090
I then created a method called String Get Screenshot Destination Path, which simply returns this field

215
00:16:42.090 --> 00:16:46.830
here and this field at that point will contain the value of this file.

216
00:16:48.510 --> 00:16:55.740
So now an extent manager when it tries to attach a report is going to add the screenshot from by using

217
00:16:55.740 --> 00:17:03.930
this method and this method is this method here which contains or returns the value of this field defined

218
00:17:03.930 --> 00:17:04.319
above.

219
00:17:06.319 --> 00:17:10.700
So apologies if this is confusing, but hopefully it's making sense to you.

220
00:17:11.900 --> 00:17:17.690
So all I'm trying to do is retrieve the image in my extant report when this method is called.

221
00:17:19.589 --> 00:17:25.109
So now that I've done that, I'm simply going to say this and you'll see that there's no errors and

222
00:17:25.109 --> 00:17:25.980
it's been saved.

223
00:17:26.700 --> 00:17:30.150
And that is how extent manager class now completes.

224
00:17:31.450 --> 00:17:34.690
In the next lecture, I'll begin amending our listeners.

