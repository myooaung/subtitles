1
00:00:00,560 --> 00:00:04,070
In this lecture, we'll be creating the objects class.

2
00:00:05,620 --> 00:00:12,790
So two steps ahead are we are going to create an objects class that will store the objects related to

3
00:00:12,790 --> 00:00:13,780
the test store.

4
00:00:14,110 --> 00:00:15,160
Log in page.

5
00:00:16,540 --> 00:00:22,510
We wouldn't create this under a new package stored under the source main Java folder.

6
00:00:24,290 --> 00:00:29,850
We will be creating new fields of methods within the objects class where the fields restore the locate

7
00:00:29,850 --> 00:00:32,460
to value and the methods will return.

8
00:00:32,509 --> 00:00:35,630
Locate a value by accessing those fields.

9
00:00:37,850 --> 00:00:45,350
So this is a screenshot of the log in page and those pointed out all the elements that we are interested

10
00:00:45,350 --> 00:00:45,590
in.

11
00:00:47,780 --> 00:00:49,100
So let's try to sell.

12
00:00:50,460 --> 00:00:56,940
So on my screen I have a clips open and I'm going to be using the MAVEN project for this work.

13
00:00:58,100 --> 00:01:04,160
So the first thing I need to do is to create a new package which is going to store our page objects.

14
00:01:05,090 --> 00:01:11,540
So I'm going to do this in the source main Java folder, and if I expand it, you'll see there's an

15
00:01:11,540 --> 00:01:14,300
existing package that we've used previously.

16
00:01:15,380 --> 00:01:21,170
So I'm going to right click that source main Java folder, select new and then select package.

17
00:01:22,040 --> 00:01:24,830
And I'm going to call this new package page.

18
00:01:26,780 --> 00:01:28,490
Objects like so.

19
00:01:29,840 --> 00:01:35,870
I'm then going to right click that package, select new and then select class, and I'm going to call

20
00:01:35,870 --> 00:01:36,660
this class.

21
00:01:37,490 --> 00:01:42,530
Test store, log in page and then click finish.

22
00:01:43,900 --> 00:01:45,370
That class will then open.

23
00:01:46,910 --> 00:01:52,130
So the first thing I'm going to do in this class is initialize the web driver variable.

24
00:01:52,580 --> 00:01:57,110
So I'm going to write Web driver driver like.

25
00:01:57,110 --> 00:02:01,340
So I'm then going to create a constructor.

26
00:02:01,970 --> 00:02:10,340
To do this, I'm going to use public test store login page and in brackets.

27
00:02:10,520 --> 00:02:15,110
And inside those brackets, I'm going to use Web driver driver.

28
00:02:16,300 --> 00:02:19,660
And then outside that, I'm going to have an open and close embrace.

29
00:02:20,930 --> 00:02:23,510
So I need to import web driver from selenium.

30
00:02:24,900 --> 00:02:26,640
And those errors will now go away.

31
00:02:27,830 --> 00:02:34,760
Inside this constructor, I am going to use this dot driver equals driver.

32
00:02:36,650 --> 00:02:41,900
So I'll explain what this constructor does when I demonstrate the running of the test.

33
00:02:42,620 --> 00:02:49,250
In brief, all I'm doing here is providing a web driver driver parameter which will get initialized

34
00:02:49,430 --> 00:02:56,840
at the time I run the test and then that value unknown updates this with the value that's provided.

35
00:02:59,340 --> 00:03:06,780
So the next thing I'm going to do is use some new code, which you have kind of seen before in the past.

36
00:03:07,530 --> 00:03:15,780
So remember previously when we use use in driver find element by and then using something like CSS selector.

37
00:03:16,940 --> 00:03:20,050
Well, now, what's I'll be using is by.

38
00:03:21,090 --> 00:03:23,910
And I'm going to provide a variable name such as email.

39
00:03:25,470 --> 00:03:27,870
Equals bi dots.

40
00:03:28,860 --> 00:03:30,090
CSF selector.

41
00:03:31,550 --> 00:03:34,100
And I'm just going to provide empty quotes for now.

42
00:03:35,600 --> 00:03:38,120
So this is similar to what we've seen in the past.

43
00:03:38,730 --> 00:03:45,980
We're expecting a locator value here and that locator value will be stored in its variable called email.

44
00:03:47,830 --> 00:03:52,690
So I'm going to do the same by simply copying this line.

45
00:03:54,620 --> 00:03:59,780
Two more times, but for the second time, I'm going to call the variable password.

46
00:04:00,950 --> 00:04:07,580
And in the third example, I'm going to call it log in button like so.

47
00:04:10,240 --> 00:04:16,930
So what I need to do now is find the locators for these three variables from the log in page of the

48
00:04:16,930 --> 00:04:17,529
test store.

49
00:04:18,620 --> 00:04:20,209
So I'm going to open up Chrome.

50
00:04:21,190 --> 00:04:24,070
I'm going to go to the automation testing website.

51
00:04:25,220 --> 00:04:27,050
And I'm going to click on the test or button.

52
00:04:28,260 --> 00:04:32,940
And then I'm going to click sign in, which is the page that will be focusing on.

53
00:04:34,360 --> 00:04:39,550
So I am going to right click the email input field and inspect.

54
00:04:41,320 --> 00:04:47,620
And if I open up random ops velocity, you'll see that I'm provided with access locator.

55
00:04:48,860 --> 00:04:50,570
So I'm going to simply copy that.

56
00:04:51,470 --> 00:04:55,610
Go over to eclipse and paste that value like so.

57
00:04:56,610 --> 00:05:01,830
So now this email variable now stores a reference to this locator.

58
00:05:03,600 --> 00:05:05,760
So I'm going to do the same for the password.

59
00:05:06,840 --> 00:05:08,490
So I'm going to get to select at all.

60
00:05:09,420 --> 00:05:15,360
Click on the password input field and take this top CSA selector.

61
00:05:16,290 --> 00:05:17,490
And I'm going to place that.

62
00:05:17,760 --> 00:05:18,060
Yeah.

63
00:05:19,790 --> 00:05:22,970
And then finally, I need to get one for the in button.

64
00:05:24,350 --> 00:05:25,340
Or a sign in button.

65
00:05:26,550 --> 00:05:28,230
And I am going to simply copy that.

66
00:05:29,760 --> 00:05:31,620
And paste it like so.

67
00:05:33,210 --> 00:05:37,560
So now we have free variables that point to three different locators.

68
00:05:39,200 --> 00:05:46,380
So the next thing that I'll be doing is I'll be creating some methods and these methods will be returning.

69
00:05:47,040 --> 00:05:53,810
I, for example, drive a dot, find elements, and instead of providing the locator values in these

70
00:05:53,810 --> 00:05:56,600
methods, they're going to reference these variables.

71
00:05:58,160 --> 00:06:04,010
So the first one is going to be public web element.

72
00:06:06,100 --> 00:06:07,420
Get email.

73
00:06:10,210 --> 00:06:14,860
And in open and close embraces and I need to import web element from selenium.

74
00:06:17,970 --> 00:06:21,090
And getting more is expected in a written statement.

75
00:06:22,220 --> 00:06:24,590
So I'll be right in return.

76
00:06:25,940 --> 00:06:27,500
Driver thoughts?

77
00:06:28,580 --> 00:06:29,840
Find elements.

78
00:06:31,390 --> 00:06:35,650
And as you can see, email has already been populated for me.

79
00:06:35,890 --> 00:06:37,770
So all I require is a semicolon.

80
00:06:39,200 --> 00:06:41,380
So this is return driver.

81
00:06:41,390 --> 00:06:49,850
They'll find element and it's going to use this variable here which stores the value by access selector

82
00:06:50,390 --> 00:06:52,070
and improvised locator value.

83
00:06:54,470 --> 00:07:03,140
So I am going to create two more say public web elements get password.

84
00:07:05,960 --> 00:07:08,260
And this is going to return driver.

85
00:07:08,480 --> 00:07:09,760
They'll find elements.

86
00:07:10,760 --> 00:07:14,210
But this time I'm going to be passing the password variable.

87
00:07:17,490 --> 00:07:22,260
And in the final one, public web element.

88
00:07:23,650 --> 00:07:25,780
Get the log in button.

89
00:07:28,270 --> 00:07:30,320
And it's going to return driver.

90
00:07:30,340 --> 00:07:31,510
They'll find elements.

91
00:07:32,230 --> 00:07:34,480
And it's going to provide the log in button variable.

92
00:07:36,610 --> 00:07:38,830
So that is our class complete.

93
00:07:39,730 --> 00:07:47,230
So the main things to take away from this is that we're storing the locator values in this class and

94
00:07:47,230 --> 00:07:52,090
we assign them to an A to a variable such as email, password or log in button.

95
00:07:53,320 --> 00:08:00,190
So what we'll be doing is that's where we'll be creating a test class will be cool in these methods

96
00:08:00,190 --> 00:08:06,730
such as get email, get password and get login button to be able to access those locators.

97
00:08:08,230 --> 00:08:09,790
I hope you found this interesting.

98
00:08:10,090 --> 00:08:11,800
And once again, thank you for watching.

