WEBVTT
1
00:00:00.640 --> 00:00:05.620
In this lecture, we take a look at locating elements by the R&D attributes.

2
00:00:07.290 --> 00:00:10.170
So what is h html i the attribute.

3
00:00:11.330 --> 00:00:16.790
The attribute is used to specify a unique height the four heights hml element.

4
00:00:18.740 --> 00:00:22.430
The value must be unique within HTML documents.

5
00:00:23.650 --> 00:00:29.260
If you're familiar with web design, chances are you know how ideas and classes are used.

6
00:00:30.460 --> 00:00:36.070
Since he I.D. is unique, it means we can easily use it to find a specific element.

7
00:00:38.140 --> 00:00:45.370
So if we look at the below code snippet we use in driver defined elements by D and then in brackets

8
00:00:45.370 --> 00:00:47.950
and double quotes, we're providing an ID value.

9
00:00:49.840 --> 00:00:51.280
So let's look at an example.

10
00:00:53.190 --> 00:01:00.120
So before I provide an example, it's important to explain how I intend to keep our code organized during

11
00:01:00.120 --> 00:01:00.870
this course.

12
00:01:02.140 --> 00:01:04.209
So if I open up eclipse.

13
00:01:05.640 --> 00:01:11.040
You'll see that the classes we've created to date have been created under this default package.

14
00:01:12.650 --> 00:01:18.590
So now that we're in Section four of this course, it makes sense to create new classes from this section

15
00:01:18.890 --> 00:01:20.570
under a separate package.

16
00:01:21.610 --> 00:01:29.080
So I intend to create a new package by right click in the source folder selected new and in in package.

17
00:01:30.010 --> 00:01:34.720
And I'm going to then give this package a name of section zero four.

18
00:01:35.500 --> 00:01:39.250
And if I click finish, that new package gets created.

19
00:01:40.420 --> 00:01:46.420
So any classes that I create during this section will be created under this new package.

20
00:01:46.960 --> 00:01:49.060
This will keep our code organized.

21
00:01:51.950 --> 00:01:53.510
So now back to the example.

22
00:01:54.230 --> 00:02:02.510
So if I open up Google Chrome and go to the automation test and website by going to WW DOT Automation

23
00:02:02.510 --> 00:02:03.980
Test in the code at UK.

24
00:02:05.640 --> 00:02:06.900
On the left hand menu.

25
00:02:07.080 --> 00:02:09.150
I'm then going to select the buttons link.

26
00:02:09.830 --> 00:02:15.690
This will take me to the Buttons page, so I'm going to be interacting with this button one.

27
00:02:17.100 --> 00:02:23.190
So as we're using Google Chrome, you have access to developer tools which can be accessed by pressing

28
00:02:23.190 --> 00:02:24.680
F12 on your keyboard.

29
00:02:25.760 --> 00:02:29.630
By doing so, it will load up a panel similar to what shown.

30
00:02:31.060 --> 00:02:33.790
So this is always useful to focus on each element.

31
00:02:34.270 --> 00:02:36.190
So if I select this selector tool here.

32
00:02:37.170 --> 00:02:38.760
And then select bottom one.

33
00:02:40.020 --> 00:02:43.890
You'll see that the HTML has been highlighted for that particular element.

34
00:02:45.120 --> 00:02:48.480
And we can see there has an ID of equals.

35
00:02:48.480 --> 00:02:51.330
Baeten underscore one.

36
00:02:52.490 --> 00:02:57.710
And this is a unique city for which we can use when we write our selenium test.

37
00:02:59.800 --> 00:03:04.210
So if I go back now to eclipse, I minimize in the browser.

38
00:03:08.040 --> 00:03:13.650
So under the new package, Section zero four, I'm going to right click select new and select class

39
00:03:13.650 --> 00:03:14.850
that creates a new class.

40
00:03:16.070 --> 00:03:20.480
So I'm going to be using a specific naming convention from this point onwards.

41
00:03:21.140 --> 00:03:27.740
So as we're in Section four and this is lecture two in Section four, I'm going to use the name of L

42
00:03:28.550 --> 00:03:31.400
zero to underscore.

43
00:03:33.400 --> 00:03:34.270
Locating.

44
00:03:38.220 --> 00:03:38.520
I'd.

45
00:03:39.910 --> 00:03:40.920
And then click Finish.

46
00:03:41.880 --> 00:03:43.560
And this will create a new class.

47
00:03:44.550 --> 00:03:47.880
So we're going to use a similar naming convention from this point onwards.

48
00:03:49.100 --> 00:03:54.590
So rather than me creating the will, I'm also going to open up Chrome demo and I'm going to copy the

49
00:03:54.590 --> 00:03:56.540
setup code that we've used previously.

50
00:03:57.260 --> 00:04:01.670
So I'm going to copy from the public static void main all the way to the bottom.

51
00:04:02.390 --> 00:04:03.500
And I'm going to copy that.

52
00:04:04.740 --> 00:04:10.350
And in my new class, I'm going to highlight the last brackets and I am going to paste that code.

53
00:04:11.590 --> 00:04:14.680
That is now set up code in our new class.

54
00:04:17.970 --> 00:04:23.490
So the next thing I need to do is update this driver documents address, which is currently going through

55
00:04:23.490 --> 00:04:25.470
the automation test in home page.

56
00:04:26.340 --> 00:04:32.220
So I'm going to open up the browser and instead I'm going to instruct my test to go straight to the

57
00:04:32.220 --> 00:04:33.180
buttons page.

58
00:04:33.690 --> 00:04:40.170
So I'm going to copy the arrival and I'm going to go back to Eclipse, where I'm going to then highlight

59
00:04:40.170 --> 00:04:46.170
the existing address and replace it won't paste in the new address, which would take me directly to

60
00:04:46.170 --> 00:04:47.180
the Buttons page.

61
00:04:49.350 --> 00:04:55.830
And then need to find a unique I.D. to interact with but someone and we know that but someone has an

62
00:04:55.830 --> 00:04:58.080
I.D. or Beaton underscore one.

63
00:04:58.890 --> 00:05:04.260
So I'm going to double click to copy it and I'm going to go back to Eclipse and I'm going to write.

64
00:05:05.300 --> 00:05:08.960
Driver dots find element.

65
00:05:09.560 --> 00:05:10.580
So without the s.

66
00:05:11.780 --> 00:05:14.460
And then in the brackets, I'm going to write, boy.

67
00:05:14.900 --> 00:05:16.490
So b y.

68
00:05:18.030 --> 00:05:18.510
Dot.

69
00:05:20.750 --> 00:05:21.350
My day.

70
00:05:23.880 --> 00:05:30.030
And then in the next sets of brackets and in double quotes, I'm going to place on the value of beats

71
00:05:30.170 --> 00:05:31.200
and underscore one.

72
00:05:32.420 --> 00:05:35.330
And at the end of that line, I'm going to add a semicolon.

73
00:05:36.620 --> 00:05:38.040
So that line will be accepted.

74
00:05:38.870 --> 00:05:42.650
But the problem is, I need to prove to you I can interact with the elements.

75
00:05:43.100 --> 00:05:44.660
So I need a way to click it.

76
00:05:45.500 --> 00:05:48.050
So what I'm going to show you is an additional command.

77
00:05:48.860 --> 00:05:52.070
So instead of a semicolon, I'm going to write a dot click.

78
00:05:52.880 --> 00:05:55.910
And this will instruct selenium to click that element.

79
00:05:59.800 --> 00:06:01.120
So that's our code now.

80
00:06:01.120 --> 00:06:01.780
Complete.

81
00:06:02.800 --> 00:06:09.490
So I'm going to press control s on my keyboard to save this class and then I'm going to attempt to run

82
00:06:09.490 --> 00:06:16.690
in it by right click in the class, going to run as in select in Java application and let's see what

83
00:06:16.690 --> 00:06:17.230
happens.

84
00:06:19.620 --> 00:06:24.870
So we can see that the test went to the Buttons page and it then clicked button one.

85
00:06:25.260 --> 00:06:29.160
As this is proven by the alert, which says you click the first button.

86
00:06:30.090 --> 00:06:35.250
So this is how we was able to interact with an element using the unity attribute.

87
00:06:38.320 --> 00:06:40.450
So the code to do this was fairly simple.

88
00:06:41.140 --> 00:06:47.590
All we need to remember is that when we use driver defined element by three, then we need to pass an

89
00:06:47.590 --> 00:06:48.460
ID value.

90
00:06:49.210 --> 00:06:50.200
Thank you for watching.

