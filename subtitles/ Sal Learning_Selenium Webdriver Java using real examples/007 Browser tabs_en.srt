1
00:00:00,620 --> 00:00:05,060
In this lecture, we take a look at browser tabs and learn how to handle them.

2
00:00:06,360 --> 00:00:08,070
So what is a browser type?

3
00:00:08,970 --> 00:00:12,450
Browsers allow you to have more than one window open at a time.

4
00:00:13,560 --> 00:00:19,320
For example, a one time you might be looking up something on a search engine while on the other you

5
00:00:19,320 --> 00:00:20,880
might have a news website open.

6
00:00:22,570 --> 00:00:28,120
If we want to interact with another tab using Selenium web driver, then we need to instruct the driver

7
00:00:28,120 --> 00:00:29,860
to switch to the window.

8
00:00:32,970 --> 00:00:36,340
Driver don't get wind windows, handles, returns.

9
00:00:36,360 --> 00:00:38,310
All windows tabs handles.

10
00:00:38,430 --> 00:00:41,430
Launched and opened by the same driver instance.

11
00:00:43,050 --> 00:00:49,800
The return data type is a string value and we can store all the values returned from the driver, get

12
00:00:49,800 --> 00:00:55,470
windows handles into a collection that we can then use to iterate and switch to the tab.

13
00:00:57,370 --> 00:00:58,230
Let's try it out.

14
00:00:59,850 --> 00:01:04,739
So before we begin writing code, let me first walk you through the test.

15
00:01:05,430 --> 00:01:11,190
So I'm going to click on the browser's tabs button on your automation test and website, and it will

16
00:01:11,190 --> 00:01:12,600
take you to this page.

17
00:01:13,320 --> 00:01:18,630
Here you see an open button, and if I click it, it opens up a new tab.

18
00:01:19,580 --> 00:01:23,240
And if I go back and click it again, it opens up another one.

19
00:01:24,940 --> 00:01:32,590
So what I want to do in this test is go to this Web page, click on this open tab button, and I want

20
00:01:32,590 --> 00:01:35,860
to click it free times to open up free additional tabs.

21
00:01:36,850 --> 00:01:42,610
And then once I do that, I want to switch to each of these tabs.

22
00:01:44,780 --> 00:01:48,470
Once I've done that, I then want to return to the browser.

23
00:01:48,570 --> 00:01:49,280
MindTap.

24
00:01:51,320 --> 00:01:58,220
So I'm going to go go to Eclipse and I'm going to copy and paste the class in the last lecture hall

25
00:01:58,220 --> 00:02:00,920
in this new 107 for lecture seven.

26
00:02:01,910 --> 00:02:05,090
And I'm going to give it the name of browser tabs like so.

27
00:02:07,520 --> 00:02:13,420
I'm then going to open up that class and I'm going to delete all the codes up to the driver.

28
00:02:13,430 --> 00:02:14,360
Don't get method.

29
00:02:16,630 --> 00:02:20,890
So the first thing I need to do is get the address for this Web page.

30
00:02:21,220 --> 00:02:22,210
So I'm going to copy it.

31
00:02:23,320 --> 00:02:26,290
And paste it in the get method like so.

32
00:02:29,510 --> 00:02:37,160
So the first thing I'm going to do here is I'm going to use a four loop to press that browser tab or

33
00:02:37,160 --> 00:02:39,470
the open tabs button three times.

34
00:02:40,280 --> 00:02:42,680
So I'm going to do this by using a four.

35
00:02:44,450 --> 00:02:47,960
INT I equals zero.

36
00:02:48,970 --> 00:02:53,870
Semicolon I is less than free semicolon.

37
00:02:54,420 --> 00:02:57,560
I plus plus an an.

38
00:02:57,560 --> 00:02:59,780
I'm going to use open and close in braces.

39
00:03:01,510 --> 00:03:08,110
A name gun to use driver dog find element by x path.

40
00:03:08,530 --> 00:03:11,800
So just use an x path this time just to change up a little bit.

41
00:03:12,250 --> 00:03:13,990
So I could have used a CSA selector.

42
00:03:15,160 --> 00:03:20,440
So I'm going to leave empty quotes in that bracket for now, and I need to click on that button.

43
00:03:20,740 --> 00:03:22,540
So I'm going to use the Click Command.

44
00:03:23,770 --> 00:03:25,780
So I'm going to go back to that Web page.

45
00:03:26,200 --> 00:03:28,210
Right click on the button to inspect it.

46
00:03:29,280 --> 00:03:34,380
And then I'm going to up Open Runner X Velocity and I'm going to use X Path this time.

47
00:03:35,500 --> 00:03:36,970
So I could copy all this.

48
00:03:37,720 --> 00:03:39,760
But I do not believe that's all necessary.

49
00:03:40,210 --> 00:03:41,890
So I'm going to edit the x path.

50
00:03:42,870 --> 00:03:45,000
And I'm going to move everything.

51
00:03:47,190 --> 00:03:49,200
Up to the input element.

52
00:03:51,150 --> 00:03:53,280
So I'm going to add another forward slash.

53
00:03:55,340 --> 00:03:59,450
And it's going to be looking for an input where the value equals open tab.

54
00:04:00,050 --> 00:04:05,000
And as this is a button, so it's an input and it's got the value of open tab within it.

55
00:04:06,370 --> 00:04:08,290
So I'm going to copy the X path.

56
00:04:09,730 --> 00:04:12,250
Go back to clips and paste that value here.

57
00:04:13,980 --> 00:04:16,050
And just to confirm that path works.

58
00:04:16,529 --> 00:04:21,540
If I were to press enter here, you'll see it's only found one match and it's highlighted the bottom.

59
00:04:24,240 --> 00:04:27,870
So I'm going to say this class for now just to see what happens.

60
00:04:34,940 --> 00:04:38,870
And you can see that it's opened up three additional tabs.

61
00:04:39,560 --> 00:04:42,770
So it's gone to this web page and presses button free times.

62
00:04:46,500 --> 00:04:53,280
So the next thing that I'm going to do is I am going to use a Java connection and I'm going to use an

63
00:04:53,280 --> 00:04:54,330
ArrayList this time.

64
00:04:55,450 --> 00:05:00,580
So we've covered ArrayList, ArrayList in the Java section, so I'm not going to spend time explaining

65
00:05:00,580 --> 00:05:00,820
it.

66
00:05:01,600 --> 00:05:07,480
But he's is just one of the most common type of collections that that people use in Java.

67
00:05:08,350 --> 00:05:14,260
So I'm going to write a write list and it's going to store values of strings.

68
00:05:16,140 --> 00:05:22,530
And I'm going to give this ArrayList the name of Windows Handles.

69
00:05:25,540 --> 00:05:32,230
And it's going to equal a new array list storing strings.

70
00:05:33,780 --> 00:05:36,480
And brackets and a semicolon.

71
00:05:38,090 --> 00:05:43,400
So inside that bracket, I'm going to use the driver instance dot.

72
00:05:44,950 --> 00:05:50,050
And I'm going to use a method called get windows handles with an at the and.

73
00:05:51,680 --> 00:05:52,310
Like so.

74
00:05:53,310 --> 00:05:55,650
And you can see ArrayList has got an error underneath it.

75
00:05:56,160 --> 00:06:00,540
And if I hover over it, I've got the option to import it from Java util.

76
00:06:02,090 --> 00:06:03,320
And then he ever goes away.

77
00:06:05,210 --> 00:06:08,840
So all this is doing is it's creating a new ArrayList object.

78
00:06:09,850 --> 00:06:13,000
And is going to store by using the driver instance.

79
00:06:13,690 --> 00:06:15,910
It's going to get the windows handles.

80
00:06:16,510 --> 00:06:22,930
And Windows handles is a unique I.D. for every open browser window.

81
00:06:24,070 --> 00:06:31,150
Each one of these has a unique Windows handles I.D. and the Windows handle is a string value.

82
00:06:35,920 --> 00:06:42,670
So the next thing that I'm going to do is I am going to print out the total number of items stored in

83
00:06:42,670 --> 00:06:43,390
that collection.

84
00:06:45,020 --> 00:06:50,900
And I'm going to do this by simply using system dots out dot prints and.

85
00:06:53,600 --> 00:06:58,340
And I'm going to use some double quotes to output some text.

86
00:06:58,640 --> 00:07:05,510
So I'm going to write there are space and outside the quotes I'm going to use the plus sign.

87
00:07:06,890 --> 00:07:10,570
And I'm going to use Windows and those.

88
00:07:15,300 --> 00:07:16,590
Dot Soyuz.

89
00:07:19,660 --> 00:07:23,560
And then I'm going to use another plus symbol and I'm gonna output some more text.

90
00:07:25,070 --> 00:07:26,660
Tabs open.

91
00:07:32,470 --> 00:07:34,480
So any system.out.println.

92
00:07:34,540 --> 00:07:35,740
This is just simple.

93
00:07:35,910 --> 00:07:39,700
A text I'm outputting, so it's just going to explain what the value is.

94
00:07:40,420 --> 00:07:43,690
But is this here where an actual value is being retrieved?

95
00:07:44,840 --> 00:07:52,220
And all it's doing is is going to win those handles and it's checking to see how many values are stored

96
00:07:52,220 --> 00:07:53,870
within that collection.

97
00:07:55,720 --> 00:07:57,670
So if I save this now and try running it.

98
00:07:59,890 --> 00:08:00,850
Let's see what happens.

99
00:08:08,080 --> 00:08:09,280
If I go back to Eclipse.

100
00:08:11,140 --> 00:08:14,230
You'll see that it says there are four tabs open.

101
00:08:16,070 --> 00:08:22,730
So this driver they'll get windows handles has retrieved the I.D. for each open window and stored it

102
00:08:22,730 --> 00:08:24,680
in the Windows Handles collection.

103
00:08:29,240 --> 00:08:34,610
So the next thing I'm going to do is I'm going to use a for each loop.

104
00:08:36,090 --> 00:08:39,270
So I'm going to do this just below here.

105
00:08:40,169 --> 00:08:41,400
I'm going to use for.

106
00:08:43,470 --> 00:08:45,930
And it's going to be the time string.

107
00:08:47,290 --> 00:08:49,150
I'm going to call this item.

108
00:08:50,260 --> 00:08:51,160
We have a colon.

109
00:08:52,560 --> 00:08:54,210
Windows and doors.

110
00:08:55,960 --> 00:08:57,550
In an opening and close embraces.

111
00:08:59,120 --> 00:09:00,580
So this is a for each loop.

112
00:09:00,590 --> 00:09:05,150
And as you know, we need to specify the data type that's been iterated through.

113
00:09:06,680 --> 00:09:12,140
This value here can be anything, but we still is is looking through the collection.

114
00:09:12,830 --> 00:09:13,940
So this is the same name.

115
00:09:15,570 --> 00:09:21,000
So this is going to go through each individual value within that collection.

116
00:09:21,950 --> 00:09:27,320
And for each one of those iterations is going to execute the code within the loop.

117
00:09:29,160 --> 00:09:33,720
So in here I'm going to write driver dot switch to.

118
00:09:35,180 --> 00:09:36,230
Dot window.

119
00:09:38,260 --> 00:09:40,540
And I am going to simply pass item.

120
00:09:42,400 --> 00:09:46,360
So each time this code runs, it's going to pass that value.

121
00:09:46,930 --> 00:09:47,260
Yeah.

122
00:09:49,740 --> 00:09:51,840
So let me try running this code.

123
00:09:52,440 --> 00:09:55,500
But before I do, I'm going to slow down the test a little bit.

124
00:09:55,530 --> 00:09:58,050
So I'm going to use a red dot sleep.

125
00:09:59,370 --> 00:10:02,160
And let's do it for one and a half seconds.

126
00:10:04,060 --> 00:10:04,900
And I'm going to save it.

127
00:10:07,160 --> 00:10:08,780
And I'm going to run the test.

128
00:10:20,800 --> 00:10:27,400
So you can see that the driver has switched focus to each open browser window.

129
00:10:29,730 --> 00:10:33,840
And it was able to do that because we're storing the windows.

130
00:10:33,840 --> 00:10:36,450
Handles are open into a collection.

131
00:10:37,580 --> 00:10:44,630
And then we use an A for each loop to go through each value in that collection, to go and click each

132
00:10:44,630 --> 00:10:48,540
one of those windows handles by passing the already.

133
00:10:48,590 --> 00:10:52,040
Each time it goes through or executes the for each loop.

134
00:10:53,770 --> 00:10:59,320
So the final thing I need to do here is to switch back to the main tab.

135
00:11:01,210 --> 00:11:04,630
And I can do this outside of the for each loop.

136
00:11:05,790 --> 00:11:09,150
So once the for each loop has finished executing.

137
00:11:09,210 --> 00:11:12,120
So it's gone through all the values in the collection.

138
00:11:12,930 --> 00:11:15,060
It will then execute the following code.

139
00:11:15,990 --> 00:11:22,650
So I'm going to write driver dot switch to dot window.

140
00:11:24,060 --> 00:11:26,820
And you can see that it takes a string parameter.

141
00:11:27,950 --> 00:11:36,300
So what I'm going to do in these brackets is pass the collection's name, the windows and doors, and

142
00:11:36,300 --> 00:11:40,880
then if I use a dot, I can use an ArrayList method called Get.

143
00:11:42,020 --> 00:11:44,810
And it takes an INT as an index value.

144
00:11:46,360 --> 00:11:49,300
So I'm going to pass the index value of zero.

145
00:11:50,850 --> 00:11:55,350
Because if we think about it, the ArrayList is storing.

146
00:11:56,720 --> 00:11:59,810
All of the open windows IDs.

147
00:12:00,850 --> 00:12:09,460
And in the first value within that array list is going to be the main window tab, which is index value

148
00:12:09,460 --> 00:12:10,030
of zero.

149
00:12:11,510 --> 00:12:17,780
So if I pass the index value of zero here, I expect the focus to switch back to the main tab.

150
00:12:19,430 --> 00:12:20,870
So I'm going to say this.

151
00:12:21,920 --> 00:12:23,120
And I'm going to try running it.

152
00:12:25,030 --> 00:12:32,170
Actually before I do, let me just add a Fred dot sleep just again to slow it down so we can see it

153
00:12:32,170 --> 00:12:32,590
working.

154
00:12:34,180 --> 00:12:35,200
So I'm going to save.

155
00:12:36,150 --> 00:12:36,660
I'm run.

156
00:12:39,120 --> 00:12:40,110
And let's see what happens.

157
00:12:49,120 --> 00:12:50,170
It's a switch in fruit.

158
00:12:50,200 --> 00:12:51,130
Each of the tabs.

159
00:12:54,300 --> 00:12:56,520
And then it goes back to the main tab.

160
00:13:00,190 --> 00:13:03,070
So that is pretty much browse the tabs.

161
00:13:04,310 --> 00:13:05,990
And I hope you found this useful.

162
00:13:06,920 --> 00:13:14,870
So the main thing you need to remember about browser tabs is that the Windows Handles method will retrieve

163
00:13:14,870 --> 00:13:17,630
unique string IDs for each window.

164
00:13:18,910 --> 00:13:20,860
And then we can switch to.

165
00:13:22,470 --> 00:13:23,850
Those window shades.

166
00:13:25,280 --> 00:13:27,740
And then we can interact with that particular tab.

167
00:13:28,460 --> 00:13:31,820
And then when we're finished, we can switch back to the main tab.

168
00:13:33,500 --> 00:13:36,560
So thank you for watching and I'll speak to you in the next lecture.

