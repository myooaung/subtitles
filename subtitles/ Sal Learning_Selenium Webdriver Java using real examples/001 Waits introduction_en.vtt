WEBVTT
1
00:00:00.510 --> 00:00:02.730
Welcome to the next section of this course.

2
00:00:03.600 --> 00:00:09.060
In this section, we take a look at selenium web driver weights and understand what they're about,

3
00:00:09.330 --> 00:00:11.790
why we use them, and why they are useful.

4
00:00:13.460 --> 00:00:15.290
So what is the purpose of waste?

5
00:00:16.010 --> 00:00:23.420
So most web applications today are built using JavaScript or EAX, which stands for asynchronous JavaScript.

6
00:00:23.450 --> 00:00:24.290
An example.

7
00:00:25.710 --> 00:00:31.320
When a page is loaded by the browser, the elements which you want to interact with may load at different

8
00:00:31.320 --> 00:00:31.920
times.

9
00:00:33.310 --> 00:00:39.370
If we try and locate an element that has yet to load, we may receive a elements not visible exception

10
00:00:39.370 --> 00:00:40.240
error message.

11
00:00:41.720 --> 00:00:48.560
Selenium weights allows us to wait until a certain time or condition is met before checking to see if

12
00:00:48.560 --> 00:00:49.760
the elements is present.

13
00:00:51.650 --> 00:00:55.790
So in this flowchart, I demonstrate how a way it operates.

14
00:00:56.270 --> 00:01:03.020
So if we start at a starting point, a test script executes and instructs the browser to go to URL.

15
00:01:04.200 --> 00:01:05.610
The page begins to load.

16
00:01:06.180 --> 00:01:10.590
And in this particular case, we're looking for a button with an idea of parts of one.

17
00:01:12.020 --> 00:01:14.420
It then checks to see if a white is present.

18
00:01:15.260 --> 00:01:18.920
If it's not present, then it checks to see if the elements is present.

19
00:01:20.040 --> 00:01:24.360
If the element isn't present, then it throws an element of not visible perception.

20
00:01:25.470 --> 00:01:29.040
If the elements is present, then it will interact with the elements.

21
00:01:30.180 --> 00:01:33.950
But if we go back to this point here, is that a white presence?

22
00:01:34.290 --> 00:01:38.520
If there is, then it checks to see if the elements has loaded.

23
00:01:39.270 --> 00:01:41.400
If it hasn't, then Texas.

24
00:01:41.400 --> 00:01:43.380
See if the weight has expired.

25
00:01:44.600 --> 00:01:51.800
If the wait hasn't expired, then tries to see if the elements has loaded and this cycle will continue

26
00:01:52.190 --> 00:01:53.930
until the weight has expired.

27
00:01:55.070 --> 00:02:01.370
If the weight has expired and it hasn't been able to find the elements, it would then throw elements

28
00:02:01.370 --> 00:02:02.630
not visible exception.

29
00:02:04.060 --> 00:02:07.870
If the elements had loaded it would then interact with the element.

30
00:02:09.509 --> 00:02:15.420
So basically a wait is useful for elements which take a while to load.

31
00:02:16.230 --> 00:02:22.950
So if you think if there was a load, a page on a web page and that loader took a few seconds to load.

32
00:02:23.950 --> 00:02:30.940
If we execute our tests without a wait present, our test might try to interact with an element before

33
00:02:30.940 --> 00:02:31.810
the page is finished.

34
00:02:31.810 --> 00:02:32.200
Loaded.

35
00:02:33.600 --> 00:02:34.410
We've wait.

36
00:02:34.530 --> 00:02:39.120
We can wait until the elements, his presence before we try and interact with it.

37
00:02:41.560 --> 00:02:48.130
So to conclude, whites allow our tests to wait until an element is loaded before interacting with it.

38
00:02:49.750 --> 00:02:54.750
There are different types of weights available, and I would explain these in the upcoming lectures.

39
00:02:56.400 --> 00:02:59.910
He will likely use some weights far more than others.

40
00:03:00.750 --> 00:03:03.480
And the reason for that will come apparent in the future.

41
00:03:03.480 --> 00:03:04.020
Lectures.

42
00:03:04.830 --> 00:03:05.700
Thank you for watching.

