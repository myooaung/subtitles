WEBVTT
1
00:00:00.570 --> 00:00:03.090
So let's begin creating our test class.

2
00:00:03.990 --> 00:00:10.050
So instead of starting from scratch, able to set up code, I'm going to simply copy and paste this

3
00:00:10.050 --> 00:00:14.540
existing add remove item basket test by using control.

4
00:00:14.580 --> 00:00:18.960
See in control the on my keyboard and I'm going to call this new class.

5
00:00:21.020 --> 00:00:21.500
Shop.

6
00:00:22.880 --> 00:00:25.280
Log in, test and then click.

7
00:00:25.280 --> 00:00:25.790
Okay.

8
00:00:27.550 --> 00:00:31.590
If I double click to open that class, it will contain the following code.

9
00:00:34.290 --> 00:00:36.780
So a lot of this will be relevant.

10
00:00:37.260 --> 00:00:43.980
So if you remember, my starting point is going to be the automation tests in home page and then I'm

11
00:00:43.980 --> 00:00:48.150
going to click on the test link, which will take me to this page here.

12
00:00:48.870 --> 00:00:51.330
So we've done this before in our previous tests.

13
00:00:52.490 --> 00:01:00.200
So I don't need to change this section because this takes us to the homepage and it keeps the test store

14
00:01:00.200 --> 00:01:04.010
link, which will then take us to the test or home page.

15
00:01:05.230 --> 00:01:08.050
So I need to change from this point here.

16
00:01:09.110 --> 00:01:12.290
So from this point, I am going to remove this.

17
00:01:14.220 --> 00:01:15.840
And delete it like so.

18
00:01:19.360 --> 00:01:21.370
So it takes us to the home page.

19
00:01:21.700 --> 00:01:24.580
Clicks on the test store link we send.

20
00:01:24.910 --> 00:01:27.010
Takes us to the test or home page.

21
00:01:28.480 --> 00:01:33.730
So from this point here, I'll be on this page and I need to click on.

22
00:01:35.580 --> 00:01:44.340
Is sign in button and as we've amended our page object class last lecture, it means I can create shop

23
00:01:44.760 --> 00:01:52.200
home thoughts gets and if we look down we'll see get log in button.

24
00:01:53.580 --> 00:01:55.260
And I want to click it.

25
00:01:59.620 --> 00:02:03.430
This would then take us to this log in page.

26
00:02:04.060 --> 00:02:08.680
So this is where we continue to use the Excel data to fill in these two fields.

27
00:02:11.210 --> 00:02:15.650
So I am going to write the code and I'm going to explain what it does.

28
00:02:16.960 --> 00:02:23.980
The first thing we need to do is access this credentials workbook, and we can do that by using a similar

29
00:02:23.980 --> 00:02:29.560
method to when we was accessing the Conflict Properties file.

30
00:02:30.750 --> 00:02:32.280
So what we can riot is.

31
00:02:36.260 --> 00:02:37.400
While input stream.

32
00:02:40.120 --> 00:02:41.890
I'm going to call this work book.

33
00:02:42.370 --> 00:02:44.920
Location equals new.

34
00:02:47.390 --> 00:02:49.490
Oil input stream.

35
00:02:52.630 --> 00:02:58.090
Then inside the brackets, I need to provide the path to access and locate this file.

36
00:02:59.360 --> 00:03:03.500
So you may remember that we can do this by using the system.

37
00:03:05.610 --> 00:03:06.420
They'll get.

38
00:03:09.420 --> 00:03:10.170
Property.

39
00:03:13.520 --> 00:03:18.260
And in here we can use user that the air.

40
00:03:19.750 --> 00:03:23.740
You may remember that this is the starting point of our project.

41
00:03:24.790 --> 00:03:30.670
And so from this point, we can then add the rest of the path to locate the Credentials Workbook.

42
00:03:32.770 --> 00:03:37.570
So outside that first set of brackets, I'm going to use a plus symbol.

43
00:03:39.230 --> 00:03:43.310
And now if I right click this credentials workbook and go to properties.

44
00:03:45.170 --> 00:03:47.240
I am going to take from this point.

45
00:03:50.880 --> 00:03:51.450
From now.

46
00:03:54.130 --> 00:03:57.590
I'm going to paste it in double quotes like so.

47
00:04:00.220 --> 00:04:01.690
The semi-colon at the end.

48
00:04:02.990 --> 00:04:06.740
On doing so, though I've noticed that we only have four wood slashes here.

49
00:04:07.410 --> 00:04:13.340
You may remember in Java that we need to use axe slashes and use double back slashes.

50
00:04:13.970 --> 00:04:15.350
So I'm going to replace them.

51
00:04:20.209 --> 00:04:23.680
If the carriage return here, this will make it easier for you to read.

52
00:04:29.160 --> 00:04:34.320
So we've used system don't get property use user directory, which will be the starting point of this

53
00:04:34.320 --> 00:04:38.460
project plus the path source test.

54
00:04:39.790 --> 00:04:41.410
Source main java.

55
00:04:42.360 --> 00:04:43.590
And then resources.

56
00:04:44.460 --> 00:04:48.720
And that's where the credentials to excel file resides.

57
00:04:50.010 --> 00:04:54.510
So I'm going to now imports for input stream from Java IO.

58
00:04:55.730 --> 00:04:57.370
And that everything goes away.

59
00:04:59.590 --> 00:05:07.420
So now that we have access to the workbook, we need to use Apache Po y classes in order to access the

60
00:05:07.420 --> 00:05:13.510
actual workbook itself and then the data within the workbook which will be stored on the worksheet.

61
00:05:14.380 --> 00:05:16.390
To do this, I'm going to use the following.

62
00:05:17.320 --> 00:05:19.270
Ex s s s.

63
00:05:20.500 --> 00:05:20.950
Work.

64
00:05:22.190 --> 00:05:22.640
Book.

65
00:05:25.350 --> 00:05:29.700
And I'm going to call this object work book equals new.

66
00:05:31.110 --> 00:05:33.780
X s s f workbook.

67
00:05:35.110 --> 00:05:41.080
And the parameter that we need to provide here is the location of where the workbook is stored.

68
00:05:41.560 --> 00:05:43.690
So I'm going to simply pass this here.

69
00:05:45.150 --> 00:05:47.910
And at the end of that line, I'm just going to say the semicolon.

70
00:05:48.990 --> 00:05:51.080
So I need to import this class.

71
00:05:51.300 --> 00:05:53.850
And you can see I've got an option from Apache Point.

72
00:05:54.940 --> 00:05:56.080
And never goes away.

73
00:05:58.120 --> 00:06:02.110
We now need to use another class to access the sheets within the workbook.

74
00:06:02.650 --> 00:06:10.660
To do this, I'm going to use x ss s sheets and I'm going to call this sheet.

75
00:06:11.810 --> 00:06:16.430
Equals Workbook, which has been defined in the line above.

76
00:06:17.240 --> 00:06:21.620
And at this point, if I import Excel sheet from Apache Wire.

77
00:06:23.600 --> 00:06:31.070
And off the workbook book if I press dots type gets you can see I've got a method here to get sheets.

78
00:06:31.820 --> 00:06:33.500
So there's two different options here.

79
00:06:34.460 --> 00:06:37.970
I'm going to use the one that takes an integer parameter.

80
00:06:38.450 --> 00:06:39.380
So the second one.

81
00:06:41.100 --> 00:06:45.620
If I select that, it then provides or acquires an integer index.

82
00:06:46.580 --> 00:06:51.080
So this index is going to reference a sheet based in the workbook itself.

83
00:06:52.470 --> 00:06:54.600
So if I open up his credentials workbook.

84
00:06:55.610 --> 00:06:56.030
Sheets.

85
00:06:56.030 --> 00:06:57.800
One will be an index zero.

86
00:06:58.840 --> 00:07:02.110
She too will be an index one and so on.

87
00:07:02.920 --> 00:07:07.240
So our data is in sheet one, so I need to use index zero.

88
00:07:08.230 --> 00:07:12.880
So I'm going to leave that at zero and add the semicolon at the end of that line.

89
00:07:15.960 --> 00:07:20.640
So now we need to begin accessing the actual data within this sheet.

90
00:07:21.570 --> 00:07:28.650
Before I do that, I'm just going to import something into Eclipse to make it easier to understand how

91
00:07:28.650 --> 00:07:30.230
we can access the data.

92
00:07:35.970 --> 00:07:41.940
So this is a visual representation of the workbook that I have open.

93
00:07:43.160 --> 00:07:48.950
But the difference is, is that I have added bio references and sell references.

94
00:07:50.880 --> 00:07:58.350
So on ground zero in the worksheets, we have a column for email address which will be at cell zero

95
00:07:58.860 --> 00:08:02.940
and password, which will be a cell 100.

96
00:08:03.000 --> 00:08:07.020
Cell zero contains the email address title row zero.

97
00:08:07.260 --> 00:08:10.380
Cell one contains the password title.

98
00:08:11.950 --> 00:08:14.770
In Rogue One in Cell zero.

99
00:08:15.280 --> 00:08:22.710
It contains the first email address and in row one cell one, it contains the first password.

100
00:08:23.920 --> 00:08:29.320
This continues and we can access data based on the road and the cell number.

101
00:08:33.340 --> 00:08:36.700
So underneath this, I'm going to start accessing the data.

102
00:08:38.270 --> 00:08:42.740
So I'm going to use the Apache Highwire Go interface.

103
00:08:43.860 --> 00:08:45.090
So all I need to do.

104
00:08:46.130 --> 00:08:47.420
It's the right road.

105
00:08:48.410 --> 00:08:49.790
And I'm going to call it a row.

106
00:08:49.910 --> 00:08:51.800
One equals.

107
00:08:52.990 --> 00:08:53.570
Cheat.

108
00:08:54.160 --> 00:08:56.820
Don't get bored of it.

109
00:08:58.480 --> 00:09:02.080
And I'm going to use this method which takes an integer parameter.

110
00:09:05.820 --> 00:09:09.270
So you can see that it's referencing voter zero.

111
00:09:10.590 --> 00:09:12.150
I'm going to change that in a second.

112
00:09:12.240 --> 00:09:17.070
First, I'm going to add a semicolon and I'm going to import row from Apache Point.

113
00:09:18.790 --> 00:09:24.640
So the data that we need is on row one because Row Zero contains the column headers.

114
00:09:25.650 --> 00:09:28.260
So I need to use this data within this road.

115
00:09:28.710 --> 00:09:34.440
So I'm going to change the index value from 0 to 1 because roads work in a similar way.

116
00:09:35.070 --> 00:09:36.840
This is index road zero.

117
00:09:37.560 --> 00:09:39.420
This is index one.

118
00:09:43.800 --> 00:09:44.880
Underneath this.

119
00:09:44.880 --> 00:09:50.190
I'm then going to use cell and I'm going to call this cell cell.

120
00:09:51.730 --> 00:09:53.470
0101.

121
00:09:54.750 --> 00:09:57.450
And C zero for sale zero.

122
00:09:58.420 --> 00:10:01.300
And I'm then going to import sell from Apache Wire.

123
00:10:04.570 --> 00:10:08.590
And then this is going to equal row one.

124
00:10:10.050 --> 00:10:17.250
But to get sell and sell a get sell method takes an integer index value or sell an undervalued.

125
00:10:18.270 --> 00:10:21.180
And I'm going to leave it as Gisele zero.

126
00:10:23.420 --> 00:10:28.490
So this get sell or zero is going to reference its first sell here.

127
00:10:30.080 --> 00:10:35.320
So this is Rose 001 and this is cell zero.

128
00:10:35.980 --> 00:10:36.490
Cells.

129
00:10:36.490 --> 00:10:38.170
Ones cells, too.

130
00:10:38.530 --> 00:10:38.980
So one.

131
00:10:40.080 --> 00:10:43.680
So Row one, cell zero contains his email address.

132
00:10:47.190 --> 00:10:51.060
Underneath this, I'm going to retrieve the password for row one.

133
00:10:52.550 --> 00:11:05.810
So I'm going to riot sell sell our 1c101 cell one equals grow one dot get sell.

134
00:11:06.770 --> 00:11:11.000
This time I'm going to change 0 to 1 semicolon.

135
00:11:11.980 --> 00:11:12.460
So row.

136
00:11:12.460 --> 00:11:18.130
One cell, one row, one cell, one which contains the password.

137
00:11:22.030 --> 00:11:25.570
I now need to convert these values to strings.

138
00:11:26.230 --> 00:11:28.660
So I'm going to create two new string variables.

139
00:11:29.960 --> 00:11:30.500
String.

140
00:11:32.220 --> 00:11:34.890
Email vote one equals.

141
00:11:36.550 --> 00:11:38.590
And then I'm just going to pass this variable.

142
00:11:40.310 --> 00:11:43.970
At the end of that two string semicolon.

143
00:11:45.680 --> 00:11:47.240
And I'm going to create another one.

144
00:11:50.230 --> 00:11:50.920
Password.

145
00:11:51.730 --> 00:11:53.560
Rogue one equals.

146
00:11:54.400 --> 00:11:55.630
And I'm going to pass this.

147
00:11:56.730 --> 00:12:05.810
Not to string the these two variables will contain the values being retrieved by these lines that converts

148
00:12:05.820 --> 00:12:06.990
into string values.

149
00:12:07.410 --> 00:12:09.690
And then we can use these in our test.

150
00:12:11.560 --> 00:12:18.000
So before I begin doing that, I'm going to prove to you that we're now able to access that worksheets

151
00:12:18.010 --> 00:12:20.650
and retrieve those values from those cells.

152
00:12:21.370 --> 00:12:27.440
And I'm going to do this using system dots out of principle.

153
00:12:27.450 --> 00:12:27.820
When.

154
00:12:33.250 --> 00:12:38.560
And I'm going to simply pass this variable like so I'm going to copy that line.

155
00:12:41.390 --> 00:12:42.590
And place Israel.

156
00:12:42.920 --> 00:12:43.280
So.

157
00:12:44.550 --> 00:12:49.440
Now I'm going to save this class and try running it to see what happens.

158
00:13:01.440 --> 00:13:02.850
And if we look in the console.

159
00:13:04.020 --> 00:13:09.600
We can see that the values from the workbook from Row one have been retrieved.

160
00:13:10.140 --> 00:13:11.640
The test one test.

161
00:13:11.640 --> 00:13:14.280
That test dot com refers to this value here.

162
00:13:15.320 --> 00:13:20.700
And test one two free is the password from bro, one cell, one sun.

163
00:13:21.680 --> 00:13:25.130
So we've successfully proven that we can access the data.

164
00:13:25.980 --> 00:13:30.210
In the next lecture, we'll start using the Excel data within our tests.

