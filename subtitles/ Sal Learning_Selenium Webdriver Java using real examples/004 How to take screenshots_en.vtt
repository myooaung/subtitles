WEBVTT
1
00:00:00.640 --> 00:00:05.740
In this lecture, we're going to learn how we can take screenshots in Selenium Web driver.

2
00:00:07.130 --> 00:00:09.020
So why are screenshots useful?

3
00:00:09.800 --> 00:00:11.840
Screenshots act as evidence.

4
00:00:12.530 --> 00:00:14.360
They can help debug problems.

5
00:00:15.350 --> 00:00:20.900
If we have a test that fails, then we'd want to see the visual evidence as to why it failed.

6
00:00:22.100 --> 00:00:27.380
Screenshots are important from a report in perspective as they give context behind the failure.

7
00:00:29.480 --> 00:00:34.010
We can give screenshot files a specific name to prevent file overwrite.

8
00:00:36.490 --> 00:00:37.990
So some things we need to know.

9
00:00:38.620 --> 00:00:41.080
We are going to create a couple of methods.

10
00:00:42.110 --> 00:00:42.540
One.

11
00:00:42.680 --> 00:00:49.370
To contain the screenshot code and a second to generate screenshot file name using date and time.

12
00:00:50.890 --> 00:00:57.310
We are going to need to import an external jar called Apache Commons IO, which is simply a library

13
00:00:57.310 --> 00:01:00.700
of utilities to assist with developing IO functionality.

14
00:01:02.520 --> 00:01:08.940
This will allow us to write a file to a folder on our local machine, e.g. when we take a screenshot

15
00:01:08.940 --> 00:01:10.350
and save the file locally.

16
00:01:12.200 --> 00:01:13.640
So let's look at an example.

17
00:01:15.090 --> 00:01:20.640
So the first thing I'm going to do is download the Apache Commons audio jar.

18
00:01:21.120 --> 00:01:25.080
So I am going to open up Chrome and using a search engine.

19
00:01:25.290 --> 00:01:32.550
I'm going to type in Apache Commons IOU Jar and search.

20
00:01:33.300 --> 00:01:38.160
And the first one that should return is to the Commons to Apache dot org website.

21
00:01:39.030 --> 00:01:42.960
And if we click this, we've got the options to download the binaries.

22
00:01:43.980 --> 00:01:51.240
So I am going to download version 2.8.0 bin zip, which will start the download process.

23
00:01:52.330 --> 00:01:57.730
And then once that finishes, if I click on that folder, you'll see that there is a folder here with

24
00:01:57.730 --> 00:01:59.800
a number of your files inside it.

25
00:02:00.950 --> 00:02:04.310
So I am going to control C to copy this.

26
00:02:05.180 --> 00:02:11.600
And if we go back to our desktop, we had the resources folder and I am just going to paste that folder

27
00:02:11.600 --> 00:02:12.530
here like so.

28
00:02:14.330 --> 00:02:20.630
So the next step that would have to do is to import this jar file into our project in Eclipse.

29
00:02:21.470 --> 00:02:23.060
So once that completes.

30
00:02:24.080 --> 00:02:31.580
I'm then going to open up the clips and I'm going to right click the intro folder, go to properties.

31
00:02:32.600 --> 00:02:34.190
Go to Java build path.

32
00:02:35.340 --> 00:02:36.240
Go to the library.

33
00:02:36.240 --> 00:02:36.660
Sad.

34
00:02:38.180 --> 00:02:44.600
And then what I'm going to do here is select the class path and then add external jobs.

35
00:02:46.330 --> 00:02:52.720
And then going to go to the resources folder on the desktop and click on the Commons I o folder and

36
00:02:52.720 --> 00:02:58.720
then import all these jars like so and then click apply and Close.

37
00:03:00.140 --> 00:03:04.190
So we've now imported the relevant GI that we need for this lesson.

38
00:03:05.340 --> 00:03:11.400
So the next thing I'm going to do is then copy and paste the class from the last lecture call in this

39
00:03:11.400 --> 00:03:20.280
1l044 lecture four and given a name of screen shot and then click okay.

40
00:03:21.820 --> 00:03:29.980
I'm gonna open up that glass and I'm going to delete everything up to the driver got manage maximize

41
00:03:29.980 --> 00:03:30.280
line.

42
00:03:32.610 --> 00:03:36.420
So as mentioned in the slides, I'm going to create two methods.

43
00:03:36.870 --> 00:03:43.200
The first method is going to be responsible for creating the screenshot file, and it's going to be

44
00:03:43.200 --> 00:03:45.570
responsible for taking the actual screenshots.

45
00:03:46.200 --> 00:03:52.740
And the second method is going to be used to generate the file name based on the date and time.

46
00:03:53.870 --> 00:04:01.880
So outside these brackets, I'm going to create my first method and I'm going to call this public static

47
00:04:02.210 --> 00:04:02.720
void.

48
00:04:04.830 --> 00:04:11.400
Take snap shots and in brackets and in the open and close embrace.

49
00:04:12.480 --> 00:04:17.310
So inside of these brackets, I'm going to provide a parameter.

50
00:04:17.550 --> 00:04:21.990
So it's going to be Web driver and I'm going to call it Web driver.

51
00:04:23.590 --> 00:04:29.350
So what this means is when we call this method, we need to provide a Web driver instance.

52
00:04:30.340 --> 00:04:33.370
At the time of when we called this method in our code.

53
00:04:34.890 --> 00:04:37.050
So I would explain in more detail in a moment.

54
00:04:37.080 --> 00:04:38.700
But for now, let's just follow along.

55
00:04:39.780 --> 00:04:44.760
So in the next line I am going to use file and this is a Java class.

56
00:04:45.820 --> 00:04:51.070
And I'm going to give it a name of source file equals.

57
00:04:52.480 --> 00:04:54.400
And I need to use two brackets.

58
00:04:56.230 --> 00:04:56.980
Takes.

59
00:04:58.350 --> 00:04:59.760
Screen shots.

60
00:05:01.440 --> 00:05:06.360
And outside of the first bracket, I am going to provide that Webb driver.

61
00:05:07.600 --> 00:05:09.490
From the method parameters.

62
00:05:10.710 --> 00:05:14.250
And in outside of those brackets, I'm going to use Dot.

63
00:05:18.120 --> 00:05:19.800
Get screen.

64
00:05:21.600 --> 00:05:22.170
Shot.

65
00:05:23.710 --> 00:05:24.220
I was.

66
00:05:27.390 --> 00:05:29.490
And then a semicolon at the end of this line.

67
00:05:29.670 --> 00:05:33.480
But in these brackets, I'm going to add outputs.

68
00:05:35.240 --> 00:05:35.690
Tie it.

69
00:05:36.280 --> 00:05:37.850
Dot file.

70
00:05:40.060 --> 00:05:43.600
So you can see that there's errors on the file and take screenshot.

71
00:05:43.870 --> 00:05:51.010
So if I hover over file, you see I've got an option to import it and I want the one from Java IO.

72
00:05:52.650 --> 00:05:54.060
So I am going to click that.

73
00:05:56.740 --> 00:05:58.610
And you can see there's also an error here.

74
00:05:59.380 --> 00:06:00.850
And I've got an option to import.

75
00:06:00.880 --> 00:06:02.530
Take screenshot from selenium.

76
00:06:04.260 --> 00:06:05.850
In doing so, you should see.

77
00:06:05.850 --> 00:06:06.020
No.

78
00:06:06.210 --> 00:06:06.900
No errors.

79
00:06:10.050 --> 00:06:19.260
So next line of code is going to instruct our test to move the image file to a new destination.

80
00:06:19.890 --> 00:06:22.230
So I am going to use file.

81
00:06:24.510 --> 00:06:25.980
Test file.

82
00:06:26.310 --> 00:06:27.600
So destination file.

83
00:06:29.390 --> 00:06:30.530
Equals new.

84
00:06:32.070 --> 00:06:32.580
File.

85
00:06:35.310 --> 00:06:36.090
Brackets.

86
00:06:37.120 --> 00:06:39.090
We have double quotes inside.

87
00:06:40.920 --> 00:06:43.950
And then I am going to use a semicolon at the end.

88
00:06:45.030 --> 00:06:50.490
So I need to provide a location where I want to store the screenshot file.

89
00:06:51.330 --> 00:06:54.210
So I'm going to do this in my resources folder.

90
00:06:54.900 --> 00:06:56.310
I'm going to right click.

91
00:06:57.280 --> 00:07:01.240
Let's create a new folder and I'm going to call this one screenshots.

92
00:07:02.560 --> 00:07:04.120
And if I double click that folder.

93
00:07:05.070 --> 00:07:06.120
And take the path.

94
00:07:07.460 --> 00:07:09.200
Do control C to copy that.

95
00:07:10.300 --> 00:07:13.270
And I'm going to paste it within the double quotes.

96
00:07:15.070 --> 00:07:19.120
So the first thing I need to do after this is I also need to provide.

97
00:07:20.720 --> 00:07:21.380
Two more.

98
00:07:23.190 --> 00:07:31.740
Backslash is because once it's in the screenshot folder, it needs to create a a new file within that

99
00:07:31.740 --> 00:07:32.160
folder.

100
00:07:33.460 --> 00:07:37.840
And I'm going to add dots, P and G for now.

101
00:07:42.380 --> 00:07:44.150
So let's leave that.

102
00:07:44.180 --> 00:07:46.690
I'll come back to this because I am going to change it.

103
00:07:46.700 --> 00:07:48.500
And then you see date and time.

104
00:07:50.390 --> 00:07:55.970
So after this, I'm now going to copy the file to the destination location.

105
00:07:56.630 --> 00:07:58.550
And I can do this by using file.

106
00:08:00.970 --> 00:08:01.690
Utils.

107
00:08:02.850 --> 00:08:03.760
Dot copy.

108
00:08:04.140 --> 00:08:04.500
So.

109
00:08:07.300 --> 00:08:07.870
File.

110
00:08:08.500 --> 00:08:09.190
Mike So.

111
00:08:11.580 --> 00:08:18.240
And this is going to be from the source location, which is this to the destination foul location,

112
00:08:18.240 --> 00:08:18.990
which is this.

113
00:08:19.940 --> 00:08:21.140
But you can see it as an error.

114
00:08:21.590 --> 00:08:25.580
And if I hover over file utils, I need to add a frog declaration.

115
00:08:28.750 --> 00:08:30.460
And that era should then go away.

116
00:08:33.370 --> 00:08:36.700
So I am going to test using this method.

117
00:08:37.610 --> 00:08:40.940
And for me to do that, I need to call this method.

118
00:08:41.210 --> 00:08:42.860
When I triggered a test.

119
00:08:43.880 --> 00:08:45.470
So I'm going to write here.

120
00:08:45.860 --> 00:08:49.370
I'm going to call the name of that method to take a snapshot.

121
00:08:50.880 --> 00:08:56.880
And in inside brackets I am going to pass the driver instance.

122
00:08:58.950 --> 00:08:59.700
Like so.

123
00:09:01.790 --> 00:09:03.800
So I need to add another froze declaration.

124
00:09:04.990 --> 00:09:06.730
And then that should be accepted.

125
00:09:08.520 --> 00:09:14.040
So what I expect this test to do is go to the so we're going to the test store.

126
00:09:14.250 --> 00:09:16.110
So I'm just going to update that as well.

127
00:09:17.100 --> 00:09:19.110
So the automation test in home page.

128
00:09:21.210 --> 00:09:22.530
And I'm going to paste that here.

129
00:09:24.370 --> 00:09:33.400
So I expect this test to open up the browser, go to automation test in home page, then call the take

130
00:09:33.400 --> 00:09:35.470
snapshot method, which is this one.

131
00:09:36.620 --> 00:09:43.940
And what I expect it to then do is to take a screenshot of that web page and then store it in a source

132
00:09:43.940 --> 00:09:44.930
phone location.

133
00:09:46.220 --> 00:09:51.140
Then I create a destination for our location, which is my resources folder.

134
00:09:52.060 --> 00:09:57.850
And then all I'm doing here is copying the source file to the destination folder.

135
00:09:59.570 --> 00:10:04.250
So I am going to say this, though, and try running it to see what happens.

136
00:10:14.100 --> 00:10:15.480
And if I go back to Eclipse.

137
00:10:16.480 --> 00:10:18.100
You'll see there's no error reported.

138
00:10:18.640 --> 00:10:25.480
And if I go to my resources folder or so the resources and in screenshots folder, you'll see that there

139
00:10:25.480 --> 00:10:26.890
is now a screenshot there.

140
00:10:28.110 --> 00:10:29.130
And if I double click it.

141
00:10:31.020 --> 00:10:33.090
It's of the Automation Home page.

142
00:10:34.150 --> 00:10:39.370
So we have just taken a screenshot based on the instruction we've written in our code.

143
00:10:41.340 --> 00:10:46.950
So the only problem we have is if I minimize this image, you'll see that the file hasn't got.

144
00:10:46.950 --> 00:10:51.180
A name is simply called Dot Peg, which is the file extension.

145
00:10:51.990 --> 00:10:54.150
And the reason for that is in eclipse.

146
00:10:54.510 --> 00:10:56.400
I've used a stop and J.

147
00:10:57.360 --> 00:11:03.000
So if I called it one, for example, and inside this class and tried one and again.

148
00:11:06.290 --> 00:11:09.740
I see what gets placed into that screenshots folder.

149
00:11:12.180 --> 00:11:14.730
You can see a new one has been created called one.

150
00:11:15.910 --> 00:11:20.680
But the issue we have is that at the moment its name is static.

151
00:11:21.430 --> 00:11:22.900
It's never going to change.

152
00:11:23.320 --> 00:11:30.010
So if I run this test again, it's going to create a new screenshot called one, which will replace

153
00:11:30.010 --> 00:11:31.000
the existing one.

154
00:11:32.140 --> 00:11:38.860
And this is an issue because when we take screenshots, usually we want to retain previous screenshots

155
00:11:38.860 --> 00:11:40.660
and we don't want them to replace each other.

156
00:11:42.430 --> 00:11:47.350
So to get around this issue, we need to create a foil name as dynamic.

157
00:11:47.920 --> 00:11:52.390
And I plan to do this by using date and time in the file name.

158
00:11:54.080 --> 00:11:56.990
So this is where the second method comes into play.

159
00:11:57.980 --> 00:12:06.710
So I am going to go down a couple of lines and I'm going to create a new method called public static.

160
00:12:07.830 --> 00:12:11.910
String time stamp.

161
00:12:14.280 --> 00:12:17.070
We've brackets and an open and close embrace.

162
00:12:23.290 --> 00:12:25.960
So because we use string, we need to return a value.

163
00:12:26.960 --> 00:12:28.550
So I am going to use return.

164
00:12:30.640 --> 00:12:31.150
New.

165
00:12:32.700 --> 00:12:35.280
And I am going to use Java's simple.

166
00:12:36.850 --> 00:12:38.620
Date format.

167
00:12:40.220 --> 00:12:41.180
And in brackets.

168
00:12:41.660 --> 00:12:46.430
This is where we need to write the format of the dates that we want to use.

169
00:12:47.000 --> 00:12:50.270
So y y y y implies the year.

170
00:12:52.720 --> 00:12:55.420
M m in capitals for the mumps.

171
00:12:57.760 --> 00:12:59.350
The day for the day.

172
00:13:01.390 --> 00:13:07.480
And then I'm going to place a space in between that and I'm going to use hate hate for hours.

173
00:13:08.490 --> 00:13:09.000
That.

174
00:13:10.940 --> 00:13:11.560
Mm.

175
00:13:11.570 --> 00:13:12.350
4 minutes.

176
00:13:13.460 --> 00:13:15.920
Dash SS 4 seconds.

177
00:13:17.550 --> 00:13:22.650
An an outside that age brackets on left click dot format.

178
00:13:24.770 --> 00:13:26.420
And in brackets new.

179
00:13:28.060 --> 00:13:33.640
Tight and open and close in brackets and a semicolon at the end of that line.

180
00:13:35.320 --> 00:13:38.230
So you can see it as an error under simple date format.

181
00:13:38.830 --> 00:13:44.530
And if I hover over it, you'll see I've got an option to import it from Java dot text.

182
00:13:46.290 --> 00:13:48.030
So I am going to click that.

183
00:13:50.190 --> 00:13:52.140
And also there is an error on the dates.

184
00:13:52.980 --> 00:13:57.150
And you can see I've got an option to import bait from java dot util.

185
00:13:57.390 --> 00:13:59.880
Make sure to select the java util one.

186
00:14:02.520 --> 00:14:11.970
So this method now will create or generate a date and time as a string, and then we can use that string

187
00:14:12.690 --> 00:14:14.070
within our file name.

188
00:14:15.710 --> 00:14:27.530
So now instead of using one, I'm going to delete that and I'm going to add a set of double quotes and

189
00:14:27.530 --> 00:14:28.820
I'm going to use the plus symbol.

190
00:14:29.420 --> 00:14:35.630
This is to insert, you know, as we've seen before, we can insert variables and other such things

191
00:14:35.630 --> 00:14:37.220
within a string.

192
00:14:38.620 --> 00:14:41.050
And then I'm going to call this method here.

193
00:14:41.800 --> 00:14:46.360
So I'm going to copy it with the brackets after that plus symbol.

194
00:14:48.910 --> 00:14:52.120
And then I am going to add another plus.

195
00:14:53.290 --> 00:14:56.260
And then add a single double quote.

196
00:14:57.270 --> 00:14:58.470
And that gets accepted.

197
00:14:59.800 --> 00:15:01.240
So now what happens is.

198
00:15:02.180 --> 00:15:08.630
When we are using the destination file, it's going to find that resources screenshots folder.

199
00:15:09.290 --> 00:15:16.970
We, instead of using one dot PNG is now going to call this method and this method is going to generate

200
00:15:17.180 --> 00:15:21.680
a date and time stamp and then pass it back to the file name.

201
00:15:22.520 --> 00:15:26.630
And then we're going to add dot PNG at the end to make it a PNG file.

202
00:15:28.330 --> 00:15:30.310
So let me now save this.

203
00:15:31.820 --> 00:15:32.720
And try running it.

204
00:15:33.830 --> 00:15:34.820
See what happens.

205
00:15:40.370 --> 00:15:48.050
And if I go back to the screenshot folder, you can see that I have now been provided a file name with

206
00:15:48.050 --> 00:15:50.030
a date and a timestamp.

207
00:15:51.280 --> 00:15:54.010
So this means if I run this one more time.

208
00:16:02.610 --> 00:16:07.650
You'll see that the new file has been written, which hasn't overwritten the previous one.

209
00:16:08.190 --> 00:16:12.450
And the reason for that is the time in seconds is later.

210
00:16:13.550 --> 00:16:14.450
Then the one before.

211
00:16:15.230 --> 00:16:21.170
So this is a way of how we can generate screenshots without replacing the other ones.

212
00:16:23.680 --> 00:16:25.660
So the code is actually fairly simple.

213
00:16:26.200 --> 00:16:32.440
It can be difficult to understand at first, but all we're doing is creating a source file using the

214
00:16:32.440 --> 00:16:37.420
types that screenshot from selenium and pass in the web drive instance.

215
00:16:38.230 --> 00:16:42.010
And then we're using the get screenshot as method to output a file.

216
00:16:43.100 --> 00:16:49.670
We then create a destination file, which is a path to a location we want to store the screenshot in.

217
00:16:50.910 --> 00:16:52.710
And here we use in timestamp.

218
00:16:52.860 --> 00:16:59.610
We've been the file name to generate a unique date and time file name, which we use as part of the

219
00:16:59.610 --> 00:17:01.320
file name when it's generated.

220
00:17:02.360 --> 00:17:07.849
Then we simply use file utils to copy the source file to the destination file.

221
00:17:08.890 --> 00:17:14.020
And we call the tape screenshot method bypass in the driver instance.

222
00:17:15.349 --> 00:17:22.010
And that driver instance is then passed to this parameter when we call this method.

223
00:17:23.819 --> 00:17:26.250
So I hope you found this lecture useful.

224
00:17:26.940 --> 00:17:32.250
And if you're still unsure or have some questions on this code, do not worry.

225
00:17:32.880 --> 00:17:37.290
We cover screenshots again as we create frameworks in this course.

226
00:17:37.710 --> 00:17:45.240
But for now, at least understand how we can take screenshots and how we can create dynamic file names.

227
00:17:46.050 --> 00:17:47.130
Thank you for watching.

