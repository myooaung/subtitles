WEBVTT
1
00:00:00.860 --> 00:00:03.890
In this lecture, we take a second look at surgeons.

2
00:00:04.670 --> 00:00:08.930
So before we begin writing code, let me first explain the test to you.

3
00:00:09.960 --> 00:00:16.830
So I'm going to open up Chrome and go to automation test in the code at UK and this time I'm going to

4
00:00:16.830 --> 00:00:21.060
click on the test link which would take you to the following page.

5
00:00:22.380 --> 00:00:30.720
So this test is going to click on the first product you scan to add the product of of quantity of one

6
00:00:30.900 --> 00:00:31.680
to the cards.

7
00:00:34.350 --> 00:00:38.010
And then what it's going to do is going to check the amount total.

8
00:00:40.170 --> 00:00:47.910
So I know the product cost $19.12 plus shipping of $7 gets added to the total is 2612.

9
00:00:48.810 --> 00:00:55.050
And so what I'm going to do is write a test using an assertion to make sure that this total amount is

10
00:00:55.050 --> 00:00:55.650
that value.

11
00:00:57.820 --> 00:00:58.690
So I am.

12
00:00:59.230 --> 00:01:05.170
Before I begin this test, I'm just going to remove this from the car and I'm going to minimize the

13
00:01:05.170 --> 00:01:05.830
web page.

14
00:01:06.910 --> 00:01:13.270
So I'm going to open up clips and I'm going to copy and paste from the class from the last lecture.

15
00:01:14.110 --> 00:01:15.100
And it's new class.

16
00:01:15.100 --> 00:01:23.980
I'm going to call LSM for Lecture ten Assertion Part two and then click, okay, I'm going to double

17
00:01:23.980 --> 00:01:27.640
click it and then I'm going to remove all the code from the last lecture.

18
00:01:27.640 --> 00:01:29.620
We don't need to add the driver.

19
00:01:29.620 --> 00:01:30.970
They'll get method.

20
00:01:32.620 --> 00:01:40.870
So the first thing I'm going to do is if I go back to automation testing is I'm going to inspect the

21
00:01:40.870 --> 00:01:41.410
page.

22
00:01:43.000 --> 00:01:46.900
Open up the runner UPS Velocity panel and then with the selector tool.

23
00:01:47.440 --> 00:01:54.490
So if I expand the menu first and then get to selected, so I'm going to find a selector for the test.

24
00:01:54.520 --> 00:01:55.240
All right.

25
00:01:55.270 --> 00:01:56.170
So by clicking it.

26
00:01:58.430 --> 00:02:02.450
And I'm going to use this time and then again to use link text.

27
00:02:03.770 --> 00:02:05.030
So I'm going to write

28
00:02:08.180 --> 00:02:19.730
driver, find elements via link text and then in the quotes I'm going to place the text and I'll have

29
00:02:19.730 --> 00:02:21.560
a semicolon at the end of that line.

30
00:02:23.510 --> 00:02:28.040
So once he's done that, it will take us to this page here.

31
00:02:29.800 --> 00:02:31.720
So I want to click on the first product.

32
00:02:32.140 --> 00:02:34.180
So again, I'm going to get a selected tool.

33
00:02:35.560 --> 00:02:37.000
And click on that first image.

34
00:02:37.720 --> 00:02:41.350
And I am just going to use a the first CSS selector.

35
00:02:42.220 --> 00:02:53.050
So I'm going to copy it and I'm going to write driver dot fun elements but CSF selector and then just

36
00:02:53.050 --> 00:02:59.830
place the value on the right dots click because we need to click the image in order to go to the product

37
00:02:59.830 --> 00:03:00.310
page.

38
00:03:03.690 --> 00:03:06.180
So if I click it, it would take me to this page.

39
00:03:06.960 --> 00:03:09.770
And on this page I don't want to change the size of quantity.

40
00:03:09.780 --> 00:03:11.070
I just want to add to CART.

41
00:03:11.610 --> 00:03:20.010
So again, I'm going to get the selector and click Add to Cart and I'm going to take the first CSA selector

42
00:03:21.270 --> 00:03:25.440
and simply write driver thoughts, find elements,

43
00:03:28.380 --> 00:03:32.730
but CSA selector and then pacer value.

44
00:03:32.970 --> 00:03:36.600
And again I want to click it like so.

45
00:03:39.230 --> 00:03:41.780
So once I've added the license to the car.

46
00:03:43.100 --> 00:03:44.660
It would then display this page.

47
00:03:45.890 --> 00:03:47.870
So I need to get that total amount.

48
00:03:48.560 --> 00:03:53.390
So I'm going to get the selected tool and I'm going to hover over it and click it.

49
00:03:54.020 --> 00:03:56.090
And you see that I'm again providing selectors.

50
00:03:56.990 --> 00:04:06.940
So I'm going to take that first selector and I'm simply going to write Driver Dot Fun elements by CSA

51
00:04:06.950 --> 00:04:09.350
selector pacer value.

52
00:04:09.860 --> 00:04:17.660
But this time I'm going to use a method of DOT that text and a semicolon.

53
00:04:19.399 --> 00:04:26.210
So what this law is going to do is it's going to find this element and it's going to get the text of

54
00:04:26.210 --> 00:04:26.360
it.

55
00:04:28.710 --> 00:04:31.020
So we can use that text in an assertion.

56
00:04:33.040 --> 00:04:39.820
So before I test this, I need to surround this line in a system out or print line so that I can see

57
00:04:39.820 --> 00:04:41.440
the value output in the console.

58
00:04:42.280 --> 00:04:52.180
So I'm going to simply write system dots out the print now and open and close in brackets in a semicolon

59
00:04:52.780 --> 00:04:53.620
and on this line.

60
00:04:54.040 --> 00:05:01.150
So without the semicolon, I'm going to simply cut and paste it inside the brackets.

61
00:05:03.070 --> 00:05:05.110
So let's try running this test.

62
00:05:05.740 --> 00:05:06.700
I'm going to save it.

63
00:05:07.900 --> 00:05:11.410
And then right click run as Java application.

64
00:05:19.990 --> 00:05:22.180
So the test hasn't gone to the test store.

65
00:05:23.340 --> 00:05:24.270
Let's look one.

66
00:05:25.950 --> 00:05:28.560
So if I go back to Eclipse, you'll see it as an error here.

67
00:05:29.490 --> 00:05:30.600
And if I look at the EVA.

68
00:05:33.890 --> 00:05:34.790
We should see.

69
00:05:35.270 --> 00:05:36.830
So here's the useful part.

70
00:05:37.220 --> 00:05:38.990
Unable to locate element.

71
00:05:39.140 --> 00:05:40.370
And if I go across.

72
00:05:42.140 --> 00:05:44.300
It says Hummingbird T-shirt.

73
00:05:45.860 --> 00:05:51.920
So if I look at my code here, this is where where you struct in the code to click on that particular

74
00:05:51.920 --> 00:05:52.550
selector.

75
00:05:54.570 --> 00:05:56.310
So why hasn't it found the element?

76
00:05:58.740 --> 00:06:03.360
The reason why is because when I find the link takes test store.

77
00:06:04.320 --> 00:06:05.250
I'm not clicking it.

78
00:06:06.120 --> 00:06:11.940
So all this doing is going to the home page and it's located this element.

79
00:06:12.450 --> 00:06:16.170
But because I haven't used the Click Command hasn't actually clicked it.

80
00:06:17.490 --> 00:06:25.260
So I'm going to amend this code, but swiping dots click like, so get rid of one of those semicolons

81
00:06:26.070 --> 00:06:28.050
and then I'm going to try running the test again.

82
00:06:28.980 --> 00:06:36.480
So I'm going to go to file safe right click run as the drive replication if it progresses further.

83
00:06:39.600 --> 00:06:40.860
So it's gone to the test on.

84
00:06:43.500 --> 00:06:49.680
Add to CART and it's gone to the cart over.

85
00:06:51.060 --> 00:06:55.080
So if I go back to my coat, you'll see, though, there's another error.

86
00:06:56.390 --> 00:06:57.980
So let's take a look to see what's happened.

87
00:06:57.980 --> 00:06:58.430
This sun.

88
00:07:00.490 --> 00:07:03.550
So again, it says, unable to locate elements.

89
00:07:05.760 --> 00:07:07.350
Products how to value.

90
00:07:09.150 --> 00:07:18.660
Now the reason this happened is that the code is executed so fast they try and find the selector before

91
00:07:18.660 --> 00:07:19.740
the page was loaded.

92
00:07:21.210 --> 00:07:27.000
So we're going to talk about how we deal with this problem when we get to the white section of this

93
00:07:27.000 --> 00:07:27.480
course.

94
00:07:28.050 --> 00:07:36.660
But for now, I'm just going to, as a friend, the sleep of 2 seconds just to slow the test down.

95
00:07:37.680 --> 00:07:39.540
So, again, let's try that once more.

96
00:07:52.770 --> 00:07:57.810
And if I go back to Eclipse, you'll see that it's now outputted the value.

97
00:07:59.410 --> 00:08:05.170
So this line here correctly finds the total and then it gets the text for the element.

98
00:08:06.960 --> 00:08:10.170
So now that we know that works, we can use that in an assertion.

99
00:08:11.100 --> 00:08:14.430
So I am going to get rid of the system, pull out the print line.

100
00:08:16.800 --> 00:08:27.590
Like so and this time I'm going to use an assertion so assert with a capital I thought assert equals

101
00:08:28.910 --> 00:08:30.920
and I am going to just pick this one here.

102
00:08:31.190 --> 00:08:33.200
So this physical object has the premises.

103
00:08:34.840 --> 00:08:38.380
And in the first one is going to be the expected value.

104
00:08:38.830 --> 00:08:43.150
So I expect this to be dollar 2612.

105
00:08:45.290 --> 00:08:49.340
And the actual value is going to be this line here.

106
00:08:50.600 --> 00:08:56.450
So instead of copying all this into the second parameter, I'm going to store it in a variable.

107
00:08:56.720 --> 00:09:02.360
So I'm going to create a string variable called total equals.

108
00:09:03.230 --> 00:09:05.390
That line of text, that line of code.

109
00:09:06.020 --> 00:09:10.580
So that's going to get the text of that element and place it and store it in its total variable.

110
00:09:11.660 --> 00:09:16.460
So I'm going to copy that variable control C and I'm just going to simply paste it.

111
00:09:17.900 --> 00:09:20.360
After the comma within the brackets.

112
00:09:21.950 --> 00:09:25.430
So let's try Monday's test one more time.

113
00:09:25.820 --> 00:09:26.960
So I do file.

114
00:09:27.960 --> 00:09:32.250
Save and run it as a Java application.

115
00:09:32.840 --> 00:09:33.870
Let's see what happens.

116
00:09:41.440 --> 00:09:45.130
So if I go back to Eclipse, you'll see there's no ever there.

117
00:09:46.950 --> 00:09:56.010
So to confirm that if I change that to $26.11 and if I say this test and run it again.

118
00:09:58.940 --> 00:10:00.530
Let's see if it correctly fails.

119
00:10:11.350 --> 00:10:16.480
And you can see in the console the expected $26.11.

120
00:10:17.530 --> 00:10:21.640
But the value that was retrieved was $26.12.

121
00:10:22.300 --> 00:10:24.580
And for that reason, the test failed.

122
00:10:27.910 --> 00:10:34.060
So I hope this second example has been useful to you, as will be used in assertions later in this course.

123
00:10:35.260 --> 00:10:36.220
Thank you for watching.

