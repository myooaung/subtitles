1
00:00:00,590 --> 00:00:03,140
In this lecture, we continue with part two.

2
00:00:04,010 --> 00:00:10,790
So before I start writing code, let's first look at the main methods of the JavaScript executable in

3
00:00:10,790 --> 00:00:11,300
detail.

4
00:00:12,430 --> 00:00:16,630
So the JavaScript execute interface provides two main methods.

5
00:00:17,110 --> 00:00:22,060
These are execute script and execute async script.

6
00:00:23,080 --> 00:00:29,200
The main difference between these are that scripts executed with async must explicitly signal they are

7
00:00:29,200 --> 00:00:31,330
finished by invoking to provide a callback.

8
00:00:32,600 --> 00:00:38,090
This callback is always injected into the executed function as a lost argument.

9
00:00:39,020 --> 00:00:45,830
So don't worry if this doesn't make sense in nearly all cases will be used in the execute script method.

10
00:00:47,680 --> 00:00:54,190
So using the JavaScript executable, the below code is usually used where making use of the JavaScript

11
00:00:54,190 --> 00:01:00,640
execute interface, we are referencing the interface and assigning a driver instance to it.

12
00:01:02,210 --> 00:01:04,700
We then use the execute script method.

13
00:01:04,910 --> 00:01:07,910
You need to provide a script and an optional argument.

14
00:01:09,270 --> 00:01:16,710
So here I'm simply using the JavaScript execute to create an object name and it's going to equal JavaScript

15
00:01:16,710 --> 00:01:23,400
execute and the Java instance, I then use that object to execute a script and this is where I provide

16
00:01:23,400 --> 00:01:24,990
the script in the parameters.

17
00:01:27,060 --> 00:01:28,050
So let's try this out.

18
00:01:29,070 --> 00:01:33,780
So before I begin writing code, let me first show you what I'm trying to do here.

19
00:01:34,260 --> 00:01:38,490
So I'm going to the Automation System website and I'm going to use a contact dust form.

20
00:01:39,420 --> 00:01:42,420
So I am going to provide values each of these fields.

21
00:01:43,170 --> 00:01:47,460
Then I'm going to click the submit button that using JavaScript.

22
00:01:48,900 --> 00:01:50,640
So I'm going to go back to Eclipse.

23
00:01:51,120 --> 00:01:56,070
And for those of you who have downloaded the code from the last lecture, you can just copy this one.

24
00:01:56,670 --> 00:01:59,160
Otherwise, just copy the browser tabs class.

25
00:01:59,970 --> 00:02:08,430
So I'm going to copy and paste that cool in this new 111 JavaScript executable part two and then click.

26
00:02:08,430 --> 00:02:08,880
Okay.

27
00:02:10,660 --> 00:02:14,620
I'm then going to open that class and delete everything up to the driver.

28
00:02:14,650 --> 00:02:15,610
They'll get method.

29
00:02:16,780 --> 00:02:21,130
So the first thing I'm going to do is get the address for the contact that contact us form.

30
00:02:22,170 --> 00:02:25,500
To replace the current one in the get method like so.

31
00:02:27,800 --> 00:02:33,480
The next thing, what I'm going to do is get locaters for these four techs fields.

32
00:02:34,400 --> 00:02:37,190
So you've seen me do this a number of times in the past.

33
00:02:37,670 --> 00:02:43,670
So to save you some time, I've simply written this already for you, and I'm just going to copy it

34
00:02:43,670 --> 00:02:44,570
into my project.

35
00:02:46,270 --> 00:02:52,630
So the first one is simply for the first time field men, the last name, field, email, address and

36
00:02:52,630 --> 00:02:54,310
name for the comment text area.

37
00:02:55,060 --> 00:03:01,150
And I'm passing the value with James to the first name Smith for the last name James at test dot com

38
00:03:01,150 --> 00:03:02,140
for the email address.

39
00:03:02,560 --> 00:03:04,150
And this is a sample comment.

40
00:03:05,190 --> 00:03:12,720
So the first thing I need to do here and I import this is import the boy from selenium and those errors

41
00:03:12,720 --> 00:03:13,260
go away.

42
00:03:14,430 --> 00:03:15,870
So if I say this class.

43
00:03:16,970 --> 00:03:17,780
And try running it.

44
00:03:19,280 --> 00:03:20,180
Let's see what happens.

45
00:03:24,270 --> 00:03:26,850
So you can see those fields have been populated.

46
00:03:29,140 --> 00:03:31,840
So what I'm going to do now is.

47
00:03:33,150 --> 00:03:40,290
Go down a couple lines and I am going to use something called a web element and I can use the web elements

48
00:03:40,290 --> 00:03:41,280
by using web.

49
00:03:43,570 --> 00:03:44,130
Element.

50
00:03:44,890 --> 00:03:48,190
I'm going to give this web element a name and call it submit.

51
00:03:49,900 --> 00:03:57,520
Equals driver find element by CSF selector and double quotes.

52
00:03:59,660 --> 00:04:05,180
So this web element has to be imported from selenium and that area will go away.

53
00:04:06,170 --> 00:04:12,530
But what I can do here is by using a web element, it creates a variable or an object which will store

54
00:04:12,860 --> 00:04:14,840
a locator to an element.

55
00:04:17,209 --> 00:04:25,070
So I am going to go back to the contact us form and I am going to right click and submit the inspect

56
00:04:25,070 --> 00:04:32,600
the submit button and I'm going to go to run the box velocity and I am going to get the second CC selector

57
00:04:33,020 --> 00:04:34,640
for that submit button and copy it.

58
00:04:36,010 --> 00:04:38,320
And then going to paste it in those double quotes.

59
00:04:39,620 --> 00:04:43,010
So this submit variable will now store.

60
00:04:44,200 --> 00:04:49,000
A reference to the selector to click on the submit button.

61
00:04:50,140 --> 00:04:52,480
So what I could actually do is write.

62
00:04:52,480 --> 00:04:54,210
Submit thoughts.

63
00:04:54,790 --> 00:04:55,180
Click.

64
00:04:56,970 --> 00:04:59,580
And you can see that that's accepted.

65
00:05:00,530 --> 00:05:06,560
Because this variable submit stores the locator for that submit button.

66
00:05:07,130 --> 00:05:11,750
So I can just reuse that variable and then add the click command at the end of it.

67
00:05:13,490 --> 00:05:14,870
So let me just show you that work.

68
00:05:14,870 --> 00:05:15,020
Working.

69
00:05:23,020 --> 00:05:24,940
So you can see the summit bottom was clicked.

70
00:05:26,180 --> 00:05:33,110
But I want to use JavaScript, so I'm going to delete this and I am going to write the following.

71
00:05:34,120 --> 00:05:36,340
I'm going to write Java script.

72
00:05:37,440 --> 00:05:38,340
Execute her.

73
00:05:39,610 --> 00:05:44,680
And I'm going to give a object name of J.S. equals in brackets.

74
00:05:45,460 --> 00:05:50,200
Java script executable and outside those brackets.

75
00:05:50,440 --> 00:05:53,650
I'm going to pass a driver instance with a semicolon at the end.

76
00:05:55,730 --> 00:06:03,890
So this is a object of JavaScript executable, and I've called it J.S. and it simply equals the JavaScript

77
00:06:03,890 --> 00:06:05,270
executes in brackets.

78
00:06:05,780 --> 00:06:09,230
And then I pass a driver instance, which is this instance here.

79
00:06:11,210 --> 00:06:14,240
So the next thing I'm going to do is write.

80
00:06:14,540 --> 00:06:23,480
J.S. So I'm using that Java, execute our JavaScript, execute object, dot, execute script.

81
00:06:24,710 --> 00:06:29,600
And you can see it takes a it takes two arguments, a string and an object.

82
00:06:30,500 --> 00:06:33,620
So I'm just going to leave double quotes for the first parameter.

83
00:06:34,640 --> 00:06:39,380
But for the second one, I am now going to pass that submit object.

84
00:06:40,710 --> 00:06:40,980
Mike.

85
00:06:40,980 --> 00:06:41,370
So.

86
00:06:42,750 --> 00:06:46,500
And at the end of that line, I'm going to write a semicolon.

87
00:06:47,790 --> 00:06:49,860
So I need to provide a value here.

88
00:06:51,050 --> 00:06:54,860
And how I can do this is by writing arguments.

89
00:06:55,880 --> 00:06:56,960
Square brackets.

90
00:06:57,260 --> 00:06:57,860
Zero.

91
00:06:59,190 --> 00:07:01,590
And then use the command click.

92
00:07:04,340 --> 00:07:05,540
The brackets at the end.

93
00:07:07,340 --> 00:07:13,220
So I'm going to explain arguments in a moment, but just take note that this is JavaScript I'm using

94
00:07:13,220 --> 00:07:13,430
here.

95
00:07:14,830 --> 00:07:17,450
And I am passed in as a second argument.

96
00:07:17,950 --> 00:07:23,410
The object name which contains the selector for the submit button.

97
00:07:25,290 --> 00:07:26,460
So if I save this.

98
00:07:27,810 --> 00:07:28,620
And try running it.

99
00:07:29,780 --> 00:07:30,830
Let's see what happens.

100
00:07:37,110 --> 00:07:43,650
And you can see that submit button was also selected, but this time I use JavaScript.

101
00:07:46,240 --> 00:07:47,890
So say I wanted to.

102
00:07:48,960 --> 00:07:56,220
First fill in this form and then click the reset button first before submitting to submit selected to

103
00:07:56,220 --> 00:07:57,090
Submit Button.

104
00:07:58,060 --> 00:08:02,380
So how would I do that using JavaScript or how would I do that?

105
00:08:02,800 --> 00:08:04,960
Using the execute script command.

106
00:08:06,420 --> 00:08:09,780
So what I can do is I can create a novel web element.

107
00:08:13,640 --> 00:08:17,030
And I'm going to call this one reset equals.

108
00:08:18,260 --> 00:08:24,530
Driver the fine element by CSF selector and in double quotes.

109
00:08:25,040 --> 00:08:26,690
I'm going to go back to that Web page.

110
00:08:27,830 --> 00:08:32,270
Focus on the reset button and then copy this CSA selector.

111
00:08:33,570 --> 00:08:36,210
And I'm going to paste it in the double quotes like so.

112
00:08:37,429 --> 00:08:45,140
So now I have two web elements Objects Submit, which contains the selected to the submit button and

113
00:08:45,140 --> 00:08:49,130
reset, which contains a selector for the reset button.

114
00:08:50,360 --> 00:08:54,740
So how can I use both of these in the execute script command?

115
00:08:56,140 --> 00:08:58,900
So what I can write is a comma.

116
00:09:00,110 --> 00:09:00,980
Arguments.

117
00:09:02,140 --> 00:09:08,110
But this time in square brackets, I'm going to write one dot click like so.

118
00:09:10,030 --> 00:09:18,400
And in the second arguments under the comment comma and I'm going to pass the reset whereby elements

119
00:09:18,400 --> 00:09:19,060
like so.

120
00:09:20,840 --> 00:09:23,360
So these arguments are like a list.

121
00:09:24,290 --> 00:09:29,330
So argument zero, which is the submit I want it to click.

122
00:09:30,050 --> 00:09:33,500
Then argument one which is the next argument?

123
00:09:33,770 --> 00:09:34,850
I want to click it.

124
00:09:36,420 --> 00:09:41,580
But at the moment I'm thinking the submit button before I'm clicking the reset button.

125
00:09:42,580 --> 00:09:44,920
So I am going to swap those two around.

126
00:09:45,980 --> 00:09:52,550
So I'm going to first select the reset button and then I'm going to select the submit button.

127
00:09:53,030 --> 00:09:55,850
So the reset button is now argument zero.

128
00:09:57,240 --> 00:09:59,610
And the summit button is argument one.

129
00:10:01,340 --> 00:10:02,870
So I am going to save this.

130
00:10:03,680 --> 00:10:07,220
And I want you to watch very carefully because it happens really quick.

131
00:10:07,910 --> 00:10:15,560
But notice that the form gets filled in and then the reset button is selected and the form entries are

132
00:10:15,560 --> 00:10:19,180
deleted before the submit button has been selected.

133
00:10:28,380 --> 00:10:30,120
So that happened really fast.

134
00:10:30,600 --> 00:10:35,790
But notice that I've been taken to an error page and it says All fields are required.

135
00:10:37,670 --> 00:10:42,830
So what this proves is that those text fields were empty.

136
00:10:43,490 --> 00:10:45,620
Before to submit button was selected.

137
00:10:47,350 --> 00:10:48,700
So let's see it one more time.

138
00:10:56,590 --> 00:11:01,990
So did you see that the reset button was selected and those fields were cleared before submit button

139
00:11:02,110 --> 00:11:02,820
was triggered?

140
00:11:04,130 --> 00:11:08,510
So that proves that I was able to send two JavaScript commands.

141
00:11:09,580 --> 00:11:11,410
By using the execute script.

142
00:11:13,490 --> 00:11:16,100
So that was quite difficult to explain.

143
00:11:16,400 --> 00:11:19,160
And we've seen quite a few, you know, new concepts here.

144
00:11:20,180 --> 00:11:26,450
But I hope you understood how we can use JavaScript within our Selenium web driver tests.

145
00:11:27,630 --> 00:11:29,670
So really the code is quite simple.

146
00:11:30,450 --> 00:11:37,230
All we need to do is use the JavaScript, execute to interface and create an object which equals JavaScript

147
00:11:37,230 --> 00:11:40,560
executable and then pass in the driver instance.

148
00:11:41,430 --> 00:11:50,730
We then use that JS object and we use the execute script command and pass a command in the first double

149
00:11:50,730 --> 00:11:51,300
quotes.

150
00:11:51,480 --> 00:11:54,510
So the first argument and then we use a comma.

151
00:11:55,560 --> 00:12:03,300
To pass the actual argument or the object which contains the locator for the element we want to interact

152
00:12:03,300 --> 00:12:03,630
with.

153
00:12:04,690 --> 00:12:11,620
And in this case, I've passed two separate arguments or two separate commands and passed two separate

154
00:12:12,760 --> 00:12:14,740
elements to interact with.

155
00:12:16,820 --> 00:12:19,250
So I hope you found this lecture useful.

156
00:12:19,730 --> 00:12:21,620
And once again, thank you for watching.

