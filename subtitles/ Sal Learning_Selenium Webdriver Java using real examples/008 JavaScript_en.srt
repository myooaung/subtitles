1
00:00:00,930 --> 00:00:03,660
In this lecture, we take a look at JavaScript.

2
00:00:06,270 --> 00:00:07,800
So what is JavaScript?

3
00:00:08,820 --> 00:00:14,850
JavaScript is a programming language that allows you to implement complex features on web pages.

4
00:00:16,350 --> 00:00:18,960
Think about the number of websites you have visited.

5
00:00:19,170 --> 00:00:23,580
There has dynamic content, for example, interactive maps.

6
00:00:24,800 --> 00:00:27,980
Content is displayed and changes after the page is loaded.

7
00:00:29,430 --> 00:00:33,000
Messages appear after an event such as form validation.

8
00:00:34,500 --> 00:00:36,000
Various other scenarios.

9
00:00:37,280 --> 00:00:41,210
And it's very likely that JavaScript is used to make the page come to life.

10
00:00:43,780 --> 00:00:46,270
So what are the advantages of JavaScript?

11
00:00:47,250 --> 00:00:53,970
So for one speed, JavaScript tends to be very fast because it's often run immediately within the client's

12
00:00:53,970 --> 00:00:54,450
browser.

13
00:00:55,720 --> 00:00:56,560
Simplicity.

14
00:00:57,160 --> 00:01:00,880
JavaScript syntax was inspired by Java and is easy to learn.

15
00:01:02,250 --> 00:01:03,210
Popularity.

16
00:01:03,690 --> 00:01:10,110
JavaScript can be found across the web and with the introduction of Node.js, it's increasingly used

17
00:01:10,110 --> 00:01:10,950
on the back end.

18
00:01:12,410 --> 00:01:19,640
Server load JavaScript is processed client side and so it reduces the demand on servers.

19
00:01:21,630 --> 00:01:22,890
Which interfaces.

20
00:01:23,550 --> 00:01:30,120
JavaScript can be used to create features like drag and drop and components such as sliders, all of

21
00:01:30,120 --> 00:01:34,050
which greatly enhance the user interface and experience of a site.

22
00:01:35,910 --> 00:01:38,820
So what are some of the disadvantages of JavaScript?

23
00:01:39,870 --> 00:01:47,550
So one copy client side security JavaScript code is executed on the client side, so bugs and oversights

24
00:01:47,550 --> 00:01:50,400
can sometimes be exploited for malicious purposes.

25
00:01:51,520 --> 00:01:55,540
Because of this, some people choose to disable JavaScript completely.

26
00:01:56,890 --> 00:02:01,690
But it's very rare to come across a website that has has JavaScript disabled.

27
00:02:04,310 --> 00:02:05,390
Browser support.

28
00:02:05,990 --> 00:02:11,620
So even though server side scripts always produce the same results, it can be different between browsers

29
00:02:12,170 --> 00:02:15,230
and they may interpret JavaScript code differently.

30
00:02:17,040 --> 00:02:20,370
However, this has greatly improved as JavaScript has evolved.

31
00:02:23,580 --> 00:02:25,850
So on this slide we take a look at IAX.

32
00:02:26,640 --> 00:02:29,700
So it stands for asynchronous JavaScript.

33
00:02:29,700 --> 00:02:30,480
An example.

34
00:02:31,770 --> 00:02:36,990
It makes it possible to read data from a web server after the page is loaded.

35
00:02:38,220 --> 00:02:43,430
This makes it possible to update a website without needing to reload the whole page.

36
00:02:45,110 --> 00:02:48,560
The sending and receiving of data is performed in the background.

37
00:02:49,600 --> 00:02:52,990
An AI plays a key role in making Web pages dynamic.

38
00:02:56,460 --> 00:02:59,490
S.M. h ttp request object.

39
00:03:00,390 --> 00:03:07,860
So the small CTP request object, also known as x, h r are used to interact with servers.

40
00:03:09,220 --> 00:03:14,470
You can retrieve data from a URL without having to do a full page refresh.

41
00:03:16,090 --> 00:03:22,000
This enables a web page to update just parts of a page without disrupting what the user is doing.

42
00:03:24,420 --> 00:03:29,400
The XML CTP request is used heavily in Nyack's programming.

43
00:03:31,510 --> 00:03:34,810
So in this slide, we take a look at Nlex process flow.

44
00:03:36,030 --> 00:03:41,610
So if an event occurs in a web page, the page is loaded and a button is clicked, for example.

45
00:03:42,790 --> 00:03:45,730
An ex hate object is created by JavaScript.

46
00:03:47,350 --> 00:03:50,530
The ex h r object sends a request to a web server.

47
00:03:51,840 --> 00:03:53,700
The server processes the request.

48
00:03:55,050 --> 00:03:57,960
The server passes back a response to the Web page.

49
00:03:59,450 --> 00:04:01,370
The responses read by JavaScript.

50
00:04:03,120 --> 00:04:05,550
And the page gets updated by JavaScript.

51
00:04:08,810 --> 00:04:13,100
So if we look at this Web page, it just gives some contents of the protest flow.

52
00:04:13,910 --> 00:04:19,220
So at the start, a button is clicked on a web page at point to H.

53
00:04:19,220 --> 00:04:24,380
HTML request is sent to the server using XML hasty http request object.

54
00:04:25,560 --> 00:04:26,490
At point free.

55
00:04:26,760 --> 00:04:33,240
The server process processes the response and sends a response back at point four.

56
00:04:33,520 --> 00:04:40,830
Response is sent back to the browser and at point five JavaScript processes to return data and updates

57
00:04:40,830 --> 00:04:41,940
to web page content.

58
00:04:43,890 --> 00:04:50,310
So I hope this was a good introduction to JavaScript and in the next couple of lectures we'll go over

59
00:04:50,310 --> 00:04:52,020
how we can use JavaScript.

60
00:04:52,020 --> 00:04:53,340
We've been Selenium tests.

61
00:04:54,090 --> 00:04:54,840
Thanks for watching.

