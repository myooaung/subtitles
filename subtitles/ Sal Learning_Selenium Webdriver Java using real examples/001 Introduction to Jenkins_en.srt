1
00:00:00,300 --> 00:00:02,550
Welcome to the next section of this course.

2
00:00:03,210 --> 00:00:06,960
In this section, we're going to focus on something called Jenkins.

3
00:00:07,500 --> 00:00:10,500
And this video is going to give you an overview of Jenkins.

4
00:00:10,800 --> 00:00:14,100
And in the future videos, I'm going to show you how to install it.

5
00:00:14,400 --> 00:00:16,020
Set it up and use it.

6
00:00:17,590 --> 00:00:18,970
So what is Jenkins?

7
00:00:19,750 --> 00:00:23,620
Jenkins is an open source continuous integration server.

8
00:00:24,840 --> 00:00:31,560
It is capable of orchestrating a chain of events to help to achieve a continuous integration process.

9
00:00:33,030 --> 00:00:40,590
For example, we can show you our tests run at a particular time, such as on a daily, weekly, monthly

10
00:00:40,620 --> 00:00:42,060
or even yearly basis.

11
00:00:43,550 --> 00:00:49,670
Jenkins handles the time and intriguing of tests for us, meaning the automates when our tests are to

12
00:00:49,670 --> 00:00:50,390
execute.

13
00:00:52,840 --> 00:00:56,320
Jenkins is open source and it's entirely written in Java.

14
00:00:57,540 --> 00:01:03,750
It's a widely used application with around 300,000 installations and is growing daily.

15
00:01:05,180 --> 00:01:10,820
It is a server based application and requires a web server such as Apache Tomcat.

16
00:01:12,490 --> 00:01:18,040
Jenkins became so popular because it can monitor repeated tasks during development.

17
00:01:19,330 --> 00:01:25,600
For example, if your team is developing the project, then Jenkins can continuously test your project

18
00:01:25,600 --> 00:01:28,690
builds and show you errors that may have arisen.

19
00:01:30,720 --> 00:01:36,570
Jenkins is not only used by automation testers, but can be used for various development activities

20
00:01:36,900 --> 00:01:39,600
such as building, testing and deployment.

21
00:01:40,890 --> 00:01:43,020
So what is continuous integration?

22
00:01:44,220 --> 00:01:50,450
During continuous integration and after code commit, the software is built and tested immediately.

23
00:01:51,840 --> 00:01:54,120
In a large project with many developers.

24
00:01:54,660 --> 00:01:57,300
Committees are made several times each day.

25
00:01:58,780 --> 00:02:01,900
With each commit, the code is built and then tested.

26
00:02:03,320 --> 00:02:06,950
If the test passes, then the build is tested for deployment.

27
00:02:08,300 --> 00:02:12,080
If deployment is successful, then the code is pushed to production.

28
00:02:13,780 --> 00:02:21,640
This commit build test and deployment is a continuous process, hence the name continuous integration,

29
00:02:22,090 --> 00:02:24,430
also known as continuous deployment.

30
00:02:26,660 --> 00:02:33,080
So on this slide, I provide you with the basic process flow of how we can use the Jenkins tool.

31
00:02:34,440 --> 00:02:41,070
So imagine that we have installed Jenkins and we configured it to run all our tests at 2 a.m. every

32
00:02:41,070 --> 00:02:41,460
morning.

33
00:02:43,300 --> 00:02:47,050
When 2 a.m. is reached, the tested and executed.

34
00:02:48,350 --> 00:02:53,930
And once those tests are complete, it would then generate a report which we can then review.

35
00:02:55,530 --> 00:03:01,320
So this is a basic process flow of how we can use Jenkins in our framework.

36
00:03:04,170 --> 00:03:10,800
In this slide, I've highlighted the key job requirements in order to be able to use Jenkins.

37
00:03:11,970 --> 00:03:17,670
So the first red rectangle highlights the version of Java that is supported.

38
00:03:18,600 --> 00:03:24,430
So as you can see, Java eight is supported by 3264 bits.

39
00:03:25,140 --> 00:03:26,820
And also Java 11.

40
00:03:28,630 --> 00:03:33,460
If you look at the second rectangle, you'll see two versions of Java that are not supported.

41
00:03:34,000 --> 00:03:36,310
So this is anything older than Java eight.

42
00:03:37,090 --> 00:03:40,900
Java nine and ten are not supported and leverage Java 12.

43
00:03:42,010 --> 00:03:45,250
So in our framework we actually use in Java 11.

44
00:03:45,760 --> 00:03:47,350
So we're okay to proceed.

45
00:03:50,060 --> 00:03:53,780
So that is a very basic overview of Jenkins.

46
00:03:54,890 --> 00:04:01,600
So the key thing to remember is that Jenkins is a tool that we can use to schedule our jobs to run at

47
00:04:01,610 --> 00:04:03,320
a specific date or time.

48
00:04:04,900 --> 00:04:10,900
So if you'd like to read more about Jenkins, then you can do so at the official website which is found

49
00:04:10,900 --> 00:04:14,590
that w WW dot jenkins dot io.

50
00:04:15,810 --> 00:04:18,990
In the next few lectures will start downloading and installing.

51
00:04:18,990 --> 00:04:23,640
JENKINS And by the end of this section, you'll be very familiar of this tool.

