WEBVTT
1
00:00:00.520 --> 00:00:03.310
In this lecture, we take a look at flu lives.

2
00:00:05.440 --> 00:00:10.270
So the below process flow tries to explain how fluid might work.

3
00:00:11.080 --> 00:00:17.740
So if we start here, when we create fluent whites, we need to set two settings a timeout, which is

4
00:00:17.740 --> 00:00:23.050
the maximum timeout before the test will fail, and a polling frequency.

5
00:00:23.260 --> 00:00:29.710
And that polling frequency instructs the fluent white to check for the elements every p seconds.

6
00:00:30.220 --> 00:00:36.220
So if we set polling to 100 milliseconds, for example, the Flume light will check to see if that element

7
00:00:36.220 --> 00:00:37.810
or condition has been met.

8
00:00:38.380 --> 00:00:39.880
Every hundred milliseconds.

9
00:00:41.710 --> 00:00:46.210
Then we would execute the test and then the browser would navigate to the URL.

10
00:00:46.870 --> 00:00:50.020
The page would begin to load and the test searches for the element.

11
00:00:51.400 --> 00:00:53.680
So then it checks to see if the element is found.

12
00:00:54.100 --> 00:01:01.630
And if it's not found, it checks to see if the maximum time has been exceeded and if it has from element

13
00:01:01.630 --> 00:01:02.830
not without exception.

14
00:01:03.910 --> 00:01:09.280
But if the max time out hasn't exceeded, then it would check again every piece seconds based on what

15
00:01:09.280 --> 00:01:15.490
we've set for the polling setting, and it will keep checking on that frequency until the element is

16
00:01:15.490 --> 00:01:18.190
either found or the time out has exceeded.

17
00:01:20.060 --> 00:01:24.440
If the element is found, then the text text execution will continue.

18
00:01:28.100 --> 00:01:31.520
On this slide, we take a look at a quick code example.

19
00:01:32.420 --> 00:01:34.280
So if we look at the code below.

20
00:01:35.060 --> 00:01:38.090
First off, take note of line two, two, four.

21
00:01:39.680 --> 00:01:47.160
So two primary parameters are set and this is with timeouts and polling every week.

22
00:01:47.240 --> 00:01:53.990
Timeout has been set to 30 seconds, meaning the whites will wait to a maximum of 30 seconds before

23
00:01:53.990 --> 00:01:54.830
throwing an error.

24
00:01:56.990 --> 00:02:04.100
Polling every has been set to 5 seconds, meaning the whites will check at a frequency of every 5 seconds

25
00:02:04.640 --> 00:02:08.539
until the condition is met or the timer time has breached.

26
00:02:10.430 --> 00:02:17.570
A third parameter ignoring has been set where the web driver will ignore this error if returned before

27
00:02:17.570 --> 00:02:18.140
the timer.

28
00:02:18.150 --> 00:02:19.190
Time is breached.

29
00:02:21.370 --> 00:02:27.070
If the condition is not met by the time out time, then the element not visible exception is from an.

30
00:02:29.260 --> 00:02:33.220
So an important thing to take note of this code is ignoring parameter.

31
00:02:34.660 --> 00:02:40.860
So what this means is the taste or the whites will not throw a no such elements exception.

32
00:02:42.050 --> 00:02:47.300
And the reason for that is site element loaded in 20 seconds.

33
00:02:48.490 --> 00:02:55.270
Now this whites will first check at the 5/2 points and it probably won't find the elements.

34
00:02:56.350 --> 00:03:00.070
So if this ignoring line was not there, it would have failed.

35
00:03:00.070 --> 00:03:02.530
The test would have been no such elements exception.

36
00:03:03.680 --> 00:03:08.660
But because we've place this line here, this white will ignore that terror.

37
00:03:10.690 --> 00:03:15.670
So I can appreciate this can be quite confusing at first, but it should make sense when you see an

38
00:03:15.670 --> 00:03:16.330
example.

39
00:03:17.290 --> 00:03:17.920
So let's see.

40
00:03:17.920 --> 00:03:19.290
A fluent white in action.

41
00:03:22.010 --> 00:03:26.810
So the first thing I'm going to do is walk you through the test and I'm going to go to the automation

42
00:03:26.810 --> 00:03:27.830
test and website.

43
00:03:28.670 --> 00:03:32.960
And if I scroll down, you might notice that I've added a new page here.

44
00:03:34.110 --> 00:03:40.980
And the reason for that is on the original Loder Page, those are familiar with HTML and CCS.

45
00:03:41.520 --> 00:03:47.730
I used an overlay on that page which made it quite difficult to demonstrate the use of fluent ways.

46
00:03:48.690 --> 00:03:52.680
So what I've decided was to create a new page called Loader two.

47
00:03:54.030 --> 00:04:01.110
And on this page here, after 8 seconds, a new P elements is created in the DOM, which creates a new

48
00:04:01.110 --> 00:04:02.730
paragraph like so.

49
00:04:04.020 --> 00:04:07.200
And this paragraph here appears after the 8 seconds.

50
00:04:08.430 --> 00:04:16.980
So if I inspect the page and refresh refresh his page, take a look at the document object model on

51
00:04:16.980 --> 00:04:20.100
the right hand side and you'll see that P element is created.

52
00:04:22.450 --> 00:04:23.140
Like so.

53
00:04:24.920 --> 00:04:32.210
So in this test I am going to use this P element and I'm going to extract the text of that element.

54
00:04:32.690 --> 00:04:36.530
After fruit, whites has waited for that element to appear on the page.

55
00:04:38.260 --> 00:04:45.010
So I'm going to minimize this for now and open up the clips, and I'm simply going to copy and paste

56
00:04:45.010 --> 00:04:52.420
the class in the last lecture, and I'm going to call this new class l0 file for lecture five, and

57
00:04:52.420 --> 00:04:57.070
I'm going to give it a name of fluent lights and click, okay.

58
00:04:59.140 --> 00:05:03.990
Now for double click that class, I'm simply going to remove the code from the last lecture.

59
00:05:04.000 --> 00:05:06.280
We don't need up to the driver.

60
00:05:06.280 --> 00:05:07.120
Don't get on.

61
00:05:08.700 --> 00:05:13.590
So the first step I'm going to do is going to get the address of the loader to page.

62
00:05:14.070 --> 00:05:17.970
I'm going to copy it and I'm going to simply paste it in the drivers.

63
00:05:17.970 --> 00:05:18.750
They'll get method.

64
00:05:21.910 --> 00:05:22.570
Like so.

65
00:05:24.760 --> 00:05:29.140
So now I'm going to start writing the code that we need to use fluent white.

66
00:05:30.160 --> 00:05:33.760
So I'm going to briefly explain it as I write the code.

67
00:05:34.510 --> 00:05:41.920
So the first thing I need to do is use an interface called white, and inside some points in brackets

68
00:05:41.920 --> 00:05:43.000
we define the type.

69
00:05:43.810 --> 00:05:47.100
So this is going to be web driver like.

70
00:05:47.110 --> 00:05:54.010
So next I need to define a object name and I'm going to call it fluent.

71
00:05:55.950 --> 00:06:01.350
And it's going to equal new fluent whites.

72
00:06:02.550 --> 00:06:10.110
And again, I'm going to define the type in 20 brackets, a Web driver, and then I'm going to open

73
00:06:10.110 --> 00:06:11.340
and close brackets.

74
00:06:11.340 --> 00:06:14.640
And inside that, I'm going to provide the driver instance.

75
00:06:16.690 --> 00:06:19.920
So there is no semicolon at the end of this line.

76
00:06:19.930 --> 00:06:25.060
And the reason for that is because we need to define some settings which I'm going to do on the next

77
00:06:25.060 --> 00:06:25.390
line.

78
00:06:26.340 --> 00:06:32.280
So before we continue, you can see that there's errors on the way to flow mines and if a hover over

79
00:06:32.280 --> 00:06:39.450
it, I'm given the option to import it from selenium and the same flow might import flume right from

80
00:06:39.450 --> 00:06:40.020
selenium.

81
00:06:41.260 --> 00:06:43.470
Once I've done that, those errors go away.

82
00:06:44.640 --> 00:06:47.370
So on this line, I'm going to write thoughts.

83
00:06:48.620 --> 00:06:54.110
And I'm going to write with time out like so.

84
00:06:55.040 --> 00:07:03.110
And this is the maximum time out time that the white the whites will wait until it error if it can't

85
00:07:03.110 --> 00:07:05.690
find a the element we're looking for.

86
00:07:06.680 --> 00:07:12.110
So inside the brackets I'm going to write duration dot.

87
00:07:13.510 --> 00:07:15.460
Of seconds.

88
00:07:17.540 --> 00:07:25.340
And then in these other brackets here, I'm going to set a value of ten, which stands for 10 seconds.

89
00:07:26.630 --> 00:07:32.460
So this means the maximum timeout, 10 seconds for this white on the next line.

90
00:07:32.720 --> 00:07:34.790
I mean, I'm again, going to write thoughts.

91
00:07:35.770 --> 00:07:38.830
And I'm going to start typing polling every.

92
00:07:40.010 --> 00:07:46.940
And again, I'm going to use duration lots of seconds and I'm going to set it to one.

93
00:07:47.960 --> 00:07:53.930
So pole in every is the frequency or how often the white is going to check to see if the element itself.

94
00:07:55.810 --> 00:08:01.060
And on the next line, I'm going to write Dots Ignoring.

95
00:08:02.700 --> 00:08:10.320
And inside these brackets I'm going to write no such elements exception

96
00:08:13.590 --> 00:08:15.900
dots class like so.

97
00:08:18.480 --> 00:08:20.550
Now you'll see that this has got an error underneath it.

98
00:08:20.940 --> 00:08:22.020
And if I hover over it.

99
00:08:22.970 --> 00:08:30.530
I need to import the no such element exception, but make sure to select the selenium one and that error

100
00:08:30.530 --> 00:08:31.400
should go away.

101
00:08:32.870 --> 00:08:35.600
So at the end of this line, I need to add a semicolon.

102
00:08:37.500 --> 00:08:40.409
And you should see that everything looks fine with no errors now.

103
00:08:41.900 --> 00:08:52.810
So if the next part of code, I'm going to write web elements and I'm going to give this a name of para

104
00:08:52.810 --> 00:08:57.290
for paragraph equals fluent.

105
00:08:58.400 --> 00:09:03.530
So I'm using the fluent object dots until which is a method.

106
00:09:04.430 --> 00:09:06.080
And in that method, I'm going to write.

107
00:09:06.080 --> 00:09:08.570
So inside the brackets, I'm going to write a new

108
00:09:11.240 --> 00:09:11.840
function.

109
00:09:13.500 --> 00:09:15.780
I've taught Web driver.

110
00:09:18.210 --> 00:09:19.140
And then a coma.

111
00:09:20.840 --> 00:09:30.350
Web elements and outside that pointy bracket, I'm going to add another opening and closing bracket.

112
00:09:32.620 --> 00:09:34.900
So at this point, here is my code.

113
00:09:35.080 --> 00:09:42.730
So just before the last close in bracket, I'm going to add a price and I'm going to press enter to

114
00:09:43.030 --> 00:09:44.020
creates a new line.

115
00:09:45.250 --> 00:09:48.250
So before I continue if I hover over web element.

116
00:09:49.650 --> 00:09:50.010
You'll see.

117
00:09:50.010 --> 00:09:52.620
I'm given an option to import it from selenium.

118
00:09:54.680 --> 00:09:56.900
And if I hover over function.

119
00:09:58.290 --> 00:10:03.480
The one that we need to use here is the one from java dot util function.

120
00:10:04.290 --> 00:10:08.130
So make sure to select the java util one for the function.

121
00:10:09.930 --> 00:10:16.710
And when you do so, those errors now go away and we're left with this error which will go away once

122
00:10:16.710 --> 00:10:18.270
we finish writing the code.

123
00:10:19.770 --> 00:10:22.980
So the next thing that I'm going to write here is.

124
00:10:24.590 --> 00:10:29.450
Public Web element.

125
00:10:31.630 --> 00:10:33.970
And I'm going to use a ply.

126
00:10:35.880 --> 00:10:45.150
And in those brackets here, I'm going through a Web driver driver, and then I'm going to at the end

127
00:10:45.150 --> 00:10:48.390
of that line number, brace and enter.

128
00:10:49.660 --> 00:10:52.510
And inside this line, I'm going to right return.

129
00:10:54.790 --> 00:11:05.410
Driver thought fun elements fire CSF selector and this is what will provide the value.

130
00:11:06.400 --> 00:11:09.850
And at the end of that line I need to simply add a semicolon.

131
00:11:12.100 --> 00:11:14.200
And you'll see there's an error here as well.

132
00:11:14.200 --> 00:11:16.930
And that's because we need to add a semicolon here to.

133
00:11:18.340 --> 00:11:24.910
So in this in this instance, for these double quotes, we need to provide the selector for the paragraph.

134
00:11:25.660 --> 00:11:33.070
So if I go back to the web page and simply using the select select at all, inspect that line and go

135
00:11:33.070 --> 00:11:34.330
to run box philosophy.

136
00:11:36.460 --> 00:11:42.940
I'm simply going to take that second selector, which is used in the idea of that paragraph, and it's

137
00:11:42.940 --> 00:11:44.030
got an idea of the piers.

138
00:11:44.860 --> 00:11:45.790
So if a copy that.

139
00:11:47.000 --> 00:11:49.160
And play set like so.

140
00:11:50.750 --> 00:11:53.020
So this is now got into fine element.

141
00:11:54.020 --> 00:12:00.980
So what I want to do as part of this test is to output the text of that paragraph into console.

142
00:12:02.260 --> 00:12:12.610
So outside this line here on the next line, I'm going to use system dots out, dots print out when

143
00:12:14.080 --> 00:12:17.020
open and close in brackets and a semicolon at the end.

144
00:12:18.260 --> 00:12:29.060
And inside these brackets I'm going to write para darts, get text like.

145
00:12:29.060 --> 00:12:32.030
So you should see that there's no errors anywhere.

146
00:12:33.560 --> 00:12:37.460
So I'm now going to save this class and try running it.

147
00:12:38.790 --> 00:12:40.260
So I'm going to right click and run.

148
00:12:40.950 --> 00:12:42.120
Let's see what happens.

149
00:12:45.280 --> 00:12:51.690
So it's gone to the Web page and now the Flume White is check in every second until it finds that element.

150
00:12:53.560 --> 00:12:55.060
And now that element has appeared.

151
00:12:56.260 --> 00:13:02.980
If I go back to Eclipse, you'll see the text of that element has now been placed into the console.

152
00:13:05.170 --> 00:13:09.280
So before we bring this lecture to a close, let's try something.

153
00:13:10.000 --> 00:13:16.360
I'm going to change the maximum timeout so that we've time out from 10 seconds to five.

154
00:13:17.410 --> 00:13:23.320
And if I save this class again and try running it, let's see what happens this time.

155
00:13:25.390 --> 00:13:27.190
So it's gone to the loaded two page.

156
00:13:28.440 --> 00:13:31.140
And we're going to wait until that paragraph displays.

157
00:13:34.180 --> 00:13:35.890
And now if I go back to Eclipse.

158
00:13:37.130 --> 00:13:38.540
You'll see that there's an error here.

159
00:13:39.290 --> 00:13:40.190
And if I go up.

160
00:13:41.060 --> 00:13:43.310
U.S. Unable to locate element.

161
00:13:44.720 --> 00:13:49.910
So the reason for that is, well, I've changed that with time out from 10 seconds to five.

162
00:13:50.990 --> 00:13:52.670
It's not sufficient time.

163
00:13:54.120 --> 00:14:00.060
To whites for the element to display on the page because the element only appears after 8 seconds.

164
00:14:00.900 --> 00:14:05.970
But the whites has EVERITT Because we've set a maximum timeout of 5 seconds.

165
00:14:08.520 --> 00:14:14.250
So I hope this letter has been useful to you, and I can understand that this is quite a bit of code

166
00:14:14.250 --> 00:14:15.030
to take in.

167
00:14:16.050 --> 00:14:22.500
But the code that I've written here is pretty standard for any flu white that is used in Java.

168
00:14:23.340 --> 00:14:29.220
And if you look at examples on the Internet, you'll see that usually they are written in a very similar

169
00:14:29.220 --> 00:14:29.640
manner.

170
00:14:30.840 --> 00:14:36.900
The key things I want you to take away from this lecture is that when we use of room lights, we need

171
00:14:36.900 --> 00:14:38.670
to set the settings.

172
00:14:40.710 --> 00:14:46.230
And when it goes and looks for an element, it does so using a polling frequency.

173
00:14:48.270 --> 00:14:53.430
Another thing to note as well is that fluent wives are quite uncommon.

174
00:14:53.820 --> 00:14:57.780
The most common type of white that I usually use is an explicit white.

175
00:14:58.440 --> 00:15:03.840
But this lecture is just to demonstrate how we would use fluent whites if we ever needed to.

176
00:15:04.800 --> 00:15:05.820
Thank you for watching.

