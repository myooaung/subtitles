1
00:00:00,460 --> 00:00:03,670
In this lecture, we take a look at Java lists.

2
00:00:05,040 --> 00:00:06,270
So what is a list?

3
00:00:07,360 --> 00:00:13,900
A list is a collection of elements in a sequence where each element is an object and elements are accessed

4
00:00:13,900 --> 00:00:15,280
by the index position.

5
00:00:17,060 --> 00:00:24,320
ArrayList implements the list interface, which also means ArrayList is a subtype of the list interface.

6
00:00:25,930 --> 00:00:31,480
The primary difference between list and ArrayList is that list is an interface and the ArrayList is

7
00:00:31,480 --> 00:00:32,110
a class.

8
00:00:32,950 --> 00:00:40,150
So if we look at a diagram, the array list class actually implements the list interface in Java and

9
00:00:40,150 --> 00:00:43,690
the list interface itself actually extends collection.

10
00:00:46,520 --> 00:00:48,570
So let's look at the below code again.

11
00:00:48,590 --> 00:00:52,340
So this code is pretty much similar to the one in the last lecture.

12
00:00:53,380 --> 00:01:00,820
But a key difference here is is I've imported Java due to that list and where I had before ArrayList

13
00:01:00,820 --> 00:01:02,020
string animals.

14
00:01:02,380 --> 00:01:04,629
I've replaced it with the list interface.

15
00:01:04,870 --> 00:01:12,790
So list string animals and it equals a new ArrayList string, which is valid because ArrayList is a

16
00:01:12,790 --> 00:01:14,890
subclass of the list interface.

17
00:01:18,410 --> 00:01:20,210
So why are less useful?

18
00:01:21,390 --> 00:01:27,480
We can store web elements, objects in a list which which can be useful when we write Selenium code.

19
00:01:29,100 --> 00:01:36,180
So if we look at the below code, I've actually created eight objects called Foo, which is a type list

20
00:01:36,510 --> 00:01:38,160
and it's going to store web elements.

21
00:01:39,860 --> 00:01:44,960
Then I use the driver, find the elements and the elements has an asset and meaning.

22
00:01:44,960 --> 00:01:51,740
I may expect them more than one value and I'm use them by see, assess selector and provide in a class

23
00:01:51,740 --> 00:01:52,940
of red icons.

24
00:01:54,180 --> 00:02:02,130
So if there was a number of elements, say five elements with the eye, with the cross of red icons

25
00:02:02,130 --> 00:02:10,830
on a web page, I would then expect the list object called FU to store a list of each one of those web

26
00:02:10,830 --> 00:02:11,400
elements.

27
00:02:13,590 --> 00:02:15,360
So let's go and see an example.

28
00:02:17,260 --> 00:02:23,560
So in this demonstration, I am going to just show you how we can change ArrayList to list by using

29
00:02:23,560 --> 00:02:25,180
the code from the previous lecture.

30
00:02:26,020 --> 00:02:33,190
But later in the course I will show you how we should use the list interface to store various web elements

31
00:02:33,190 --> 00:02:39,310
when we're dealing with more than one element that has a similar attribute, such as the same class.

32
00:02:40,300 --> 00:02:44,530
So for now, all I'm going to do is copy and paste the class in the last lecture.

33
00:02:45,600 --> 00:02:46,860
And rename this one.

34
00:02:47,100 --> 00:02:51,330
L 19 for lecture 19 and I'm going to call it list.

35
00:02:52,740 --> 00:02:54,300
I mean, going to double click and open it.

36
00:02:55,950 --> 00:02:58,140
So here I abuse ArrayList.

37
00:02:58,650 --> 00:03:00,960
So if I changes the list like so.

38
00:03:02,150 --> 00:03:06,050
Onion have to import it and I'm going to select the Java util one.

39
00:03:07,990 --> 00:03:10,570
And in doing so, if I now save this.

40
00:03:12,040 --> 00:03:14,470
You'll see that this is a valid change.

41
00:03:15,820 --> 00:03:21,220
And the code operates as we would expect and similar to what we did with the very list.

42
00:03:22,580 --> 00:03:30,470
So this is just proven that we can use the list interface to equal ArrayList because ArrayList is a

43
00:03:30,470 --> 00:03:33,620
subclass of the list interface.

44
00:03:35,260 --> 00:03:40,780
So this lecture is fairly simple, but the important thing to remember is that will be used in lists

45
00:03:40,960 --> 00:03:43,750
to store web elements later in this course.

