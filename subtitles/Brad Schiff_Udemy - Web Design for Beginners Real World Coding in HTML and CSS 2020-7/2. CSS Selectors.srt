1

00:00:00,330  -->  00:00:05,760
In this lesson we will learn a bit more about C Ss selectors.

2

00:00:05,880  -->  00:00:11,010
Now there are many different types of selectors but the big three that we will cover in this lesson

3

00:00:11,070  -->  00:00:20,040
are type selectors descendant selectors and class selectors.

4

00:00:20,040  -->  00:00:22,990
Let's begin with type selectors.

5

00:00:23,040  -->  00:00:27,690
So here is the example page from our previous lesson and you'll remember that this is the CSSA that

6

00:00:27,690  -->  00:00:28,450
we wrote.

7

00:00:28,800  -->  00:00:36,030
So it turns out you are actually already familiar with type selectors a type selector is simply the

8

00:00:36,030  -->  00:00:41,700
name of an element and it targets every element of that type on the page.

9

00:00:41,700  -->  00:00:48,090
So for example when we created this rule the rule that makes all paragraph green this selector of P

10

00:00:48,300  -->  00:00:50,790
is targeting every element on the page.

11

00:00:50,800  -->  00:00:55,590
It's targeting this paragraph this paragraph and this paragraph.

12

00:00:55,800  -->  00:00:57,320
That's a type selector.

13

00:00:57,540  -->  00:01:00,520
It's the most basic type of selector that there is.

14

00:01:00,780  -->  00:01:06,460
Let's move on to descendant selectors descendant selectors.

15

00:01:06,540  -->  00:01:13,560
Let us tap into the power of the Russians stacking a model that H DML follows the way that elements

16

00:01:13,560  -->  00:01:16,020
nest inside other elements.

17

00:01:16,020  -->  00:01:21,750
So for example what if we only wanted to select or we only wanted the style paragraph elements that

18

00:01:21,750  -->  00:01:27,270
are descendants or in other words that live inside the hetter element.

19

00:01:27,270  -->  00:01:33,420
So if we only wanted to select this paragraph and we only wanted it to be green we could adjust the

20

00:01:33,420  -->  00:01:38,850
selector for this rule to simply say header p.

21

00:01:38,900  -->  00:01:44,190
So if I save and refresh You can see that now only this paragraph element is green.

22

00:01:44,190  -->  00:01:47,700
So let's review how this descendant selector is working.

23

00:01:47,850  -->  00:01:49,140
We start with Hetter.

24

00:01:49,140  -->  00:01:55,360
So the web browser selects this header element then we include a space and P.

25

00:01:55,560  -->  00:02:01,870
So the web browser then looks inside this element for any and all paragraph elements.

26

00:02:01,950  -->  00:02:06,530
Now we can drill like this as many layers deep as we need to.

27

00:02:06,540  -->  00:02:10,680
So let's imagine that we want the word slogan to be blue.

28

00:02:11,040  -->  00:02:18,150
If the word slogan was wrapped in a span tag we could create a new rule in our CSSA file.

29

00:02:18,150  -->  00:02:20,580
So first let's drill into the header element.

30

00:02:20,790  -->  00:02:26,270
Then let's drill into the paragraph element and then we'll finally select the span element.

31

00:02:26,580  -->  00:02:27,710
Color blue.

32

00:02:27,980  -->  00:02:31,370
So if I save and refresh I can see that that word is blue.

33

00:02:31,770  -->  00:02:37,320
So in a sense you can think of the descendant selector almost like a type selector but with a family

34

00:02:37,320  -->  00:02:44,250
tree twist you can include names of ancestor elements until you finally drilled down to the particular

35

00:02:44,280  -->  00:02:46,700
element that you want to style.

36

00:02:46,710  -->  00:02:50,900
So we've seen type selectors we've seen descendant selectors.

37

00:02:50,910  -->  00:02:54,870
Now let's take a look at class selectors.

38

00:02:55,350  -->  00:02:59,090
Now in order to make this example clear I'm going to edit the H DML bit.

39

00:02:59,220  -->  00:03:04,940
Let's imagine that instead of only having one main body paragraph we had at least three.

40

00:03:05,100  -->  00:03:06,950
So copy and paste.

41

00:03:07,050  -->  00:03:13,080
So we now have three paragraphs in the body section and let's imagine that for some reason we want this

42

00:03:13,080  -->  00:03:17,160
second paragraph the middle paragraph to have a yellow background.

43

00:03:17,190  -->  00:03:18,790
So how would we achieve that.

44

00:03:19,020  -->  00:03:25,050
Well we can't use a type selector or a descendant selector because in terms of the HTML. There's nothing

45

00:03:25,050  -->  00:03:27,440
unique about this second paragraph.

46

00:03:27,480  -->  00:03:32,120
There's no way to distinguish it between the first or third paragraph.

47

00:03:32,130  -->  00:03:39,240
So what we can do to target this middle paragraph is give it a class so in the HMO on that element we

48

00:03:39,240  -->  00:03:44,130
can add an attribute named class and then we can give it any name that we'd like.

49

00:03:44,130  -->  00:03:52,380
So I will call this class name highlight this class name is our key to selecting only this paragraph

50

00:03:52,380  -->  00:03:53,190
element.

51

00:03:53,520  -->  00:03:57,930
So in our CSSA we'll create a new rule that uses a class selector.

52

00:03:58,290  -->  00:04:03,380
So in order to target a class you simply type a period and then the name of the class.

53

00:04:03,390  -->  00:04:09,340
So highlight and then we can style it just like we would any other rule.

54

00:04:09,720  -->  00:04:12,910
Background color yellow.

55

00:04:13,010  -->  00:04:18,910
So if we save and refresh we can see that only the second paragraph has received that styling.

56

00:04:18,910  -->  00:04:25,320
Another great thing about creating a class is that we now have this truly reusable block of code so

57

00:04:25,320  -->  00:04:30,390
we can reuse this class anywhere in our h DML that we see fit.

58

00:04:30,390  -->  00:04:33,840
So let's imagine there was a second sentence in the footer.

59

00:04:33,870  -->  00:04:37,990
Let's add that really quickly and let's imagine that second sentence read.

60

00:04:38,070  -->  00:04:40,950
All rights reserved.

61

00:04:41,970  -->  00:04:49,800
If we wanted this new sentence to have a yellow background all we need to do is give it a class of highlight

62

00:04:51,630  -->  00:04:57,580
so we can immediately see how useful it is to create classes that can be re-used.

63

00:04:57,690  -->  00:04:59,360
Are different pages.

64

00:04:59,400  -->  00:05:02,050
Now let's take things one step further.

65

00:05:02,220  -->  00:05:08,130
Let's imagine that we decide if a paragraph or an element has a class of highlight and it's in the main

66

00:05:08,130  -->  00:05:09,420
area of the page.

67

00:05:09,570  -->  00:05:11,160
We want to have a yellow background.

68

00:05:11,340  -->  00:05:16,740
But if a paragraph is in the footer element and has a class of highlight we instead want it to have

69

00:05:16,800  -->  00:05:24,700
a light grey background where we can achieve just that by using a mix of descendant selectors in-class

70

00:05:24,870  -->  00:05:25,960
selectors.

71

00:05:26,130  -->  00:05:34,050
So we'll begin by selecting the footer element and then we'll dig into it and look for any element that

72

00:05:34,050  -->  00:05:42,720
has a class of highlight and then we'll give it a background color of light grey.

73

00:05:43,620  -->  00:05:49,950
So here we can see that we have one class receiving two different styles because of the power of descendant

74

00:05:49,950  -->  00:05:50,970
selectors.

75

00:05:51,090  -->  00:05:57,630
So depending on where that element lives we can stifle the same class differently that's going to conclude

76

00:05:57,630  -->  00:06:03,840
this lesson to review we learned about type selectors which select all elements of a specific type.

77

00:06:03,830  -->  00:06:10,740
On the page we learned about descendant selectors which let us follow a path of ancestry to select a

78

00:06:10,740  -->  00:06:12,280
more particular element.

79

00:06:12,600  -->  00:06:19,080
And finally we learned about class selectors which let us create reusable bits of code that we can apply

80

00:06:19,080  -->  00:06:20,990
to any element.

81

00:06:21,000  -->  00:06:27,840
Now there are far more than just three different types of CSSA selectors but there's no sense in trying

82

00:06:27,840  -->  00:06:32,530
to memorize all of the different ways to select elements in one sitting.

83

00:06:32,580  -->  00:06:39,120
We will learn about new selector methods as they become necessary but for the time being just these

84

00:06:39,120  -->  00:06:46,320
three types will get us quite far in our next lesson we will learn what the word cascade is implying

85

00:06:46,560  -->  00:06:49,300
in the phrase cascading style sheets.

86

00:06:49,360  -->  00:06:50,790
I'll see you in the next lesson
