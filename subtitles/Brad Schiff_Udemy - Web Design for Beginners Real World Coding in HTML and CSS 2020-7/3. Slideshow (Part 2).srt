1

00:00:00,540  -->  00:00:06,360
Next let's add the pagination dots that indicate which slide you are currently viewing we head over

2

00:00:06,360  -->  00:00:08,220
to our HTML.

3

00:00:08,220  -->  00:00:15,480
We can simply create a new element within our cycle slideshow div that has a class of cycle hyphen pager

4

00:00:16,230  -->  00:00:19,600
and the cycle 2 script will take care of all the heavy lifting.

5

00:00:19,830  -->  00:00:27,810
So if I save and refresh we can now see three dots which represent the three slides if there were four

6

00:00:27,810  -->  00:00:32,060
slides in our slideshow then cycle 2 would output four dots.

7

00:00:32,100  -->  00:00:39,000
Let's begin by positioning this pager element to sit at the top of our slide show horizontally centered

8

00:00:39,000  -->  00:00:39,630
.

9

00:00:39,990  -->  00:00:43,150
So to do that it's head over to our style sheet.

10

00:00:43,210  -->  00:00:47,830
So create a new four cycle pager.

11

00:00:48,270  -->  00:00:55,830
I'm going to use position absolute I want to sit down about 20 pixels from the top and I will be sure

12

00:00:55,830  -->  00:01:02,070
to assign it a large z index value so that it is not overlapped by the slides themselves.

13

00:01:02,070  -->  00:01:04,430
So if we refresh there it is.

14

00:01:04,440  -->  00:01:11,500
But remember I also wanted it to be horizontally centered so to achieve that I will make the cycle pager

15

00:01:11,520  -->  00:01:21,150
element use the full available width and then I will tell it to use text align center much better.

16

00:01:21,150  -->  00:01:24,230
Now let's focus on styling the dots themselves.

17

00:01:24,330  -->  00:01:31,380
So if I right click on the dots and click inspect element you can see that there is a span for each

18

00:01:31,380  -->  00:01:32,210
dot.

19

00:01:32,220  -->  00:01:39,210
Now we didn't add the spans for each dot we simply created the empty cycle page element and cycle to

20

00:01:39,240  -->  00:01:46,200
it dynamically inserting a span to represent each slide and we can see that cycle to also as a class

21

00:01:46,260  -->  00:01:53,700
of cycle pager active to the door that represents the currently displayed slide.

22

00:01:53,700  -->  00:01:57,180
Now we are interested in customizing the appearance of these dots.

23

00:01:57,360  -->  00:02:00,750
So let's see what's actually in each one of these spans.

24

00:02:00,750  -->  00:02:02,070
So it's a bullet.

25

00:02:02,070  -->  00:02:03,600
I don't want the bullet to display.

26

00:02:03,600  -->  00:02:12,060
So I'll show you a neat way to completely customize this in R C SS was created rule for site quoll pager

27

00:02:12,790  -->  00:02:13,920
Spain.

28

00:02:14,040  -->  00:02:16,270
So we're styling each one of the dots.

29

00:02:16,320  -->  00:02:19,680
Now I don't want that actual bullet character to display.

30

00:02:19,680  -->  00:02:25,120
So I'm going to use text indent negative nine thousand pixels.

31

00:02:25,880  -->  00:02:31,210
Let's make sure that each dot or each span element is using inline block.

32

00:02:31,380  -->  00:02:34,180
Let's make them a 10 pixel circle.

33

00:02:34,440  -->  00:02:41,430
So with 10 pixels height 10 pixels and if we want to be a circle we simply set the border radius to

34

00:02:41,430  -->  00:02:43,440
50 percent by default.

35

00:02:43,440  -->  00:02:45,150
Let's make the dots white.

36

00:02:45,180  -->  00:02:51,620
So background color white Let's add a bit of spacing horizontally between the dots.

37

00:02:51,630  -->  00:02:55,980
So margin we use shorthand so 0 in 4.

38

00:02:55,980  -->  00:03:00,330
So vertically we don't want to add any margin but horizontally so that means on the left and the right

39

00:03:00,330  -->  00:03:06,990
size word for pixels lets out a property of cursor pointer so that they look like links when we hover

40

00:03:06,990  -->  00:03:10,900
over them and let's see even refresh and see how things look.

41

00:03:11,250  -->  00:03:12,870
So there are the dots.

42

00:03:12,900  -->  00:03:18,330
However they aren't lighting up to display which one is the currently active slide.

43

00:03:18,330  -->  00:03:26,570
So if we inspect them again you can see that the exact name of that class is cycle pager active.

44

00:03:26,610  -->  00:03:36,370
So let's just create a special class or a special rule cycle pager site called pager active.

45

00:03:36,570  -->  00:03:42,720
So if an element has that class instead of using white background we want to use a background of black

46

00:03:42,720  -->  00:03:45,670
.

47

00:03:45,670  -->  00:03:49,860
So now we can see that the first slide is displaying so the first dot is lit up.

48

00:03:50,250  -->  00:03:55,730
And now the second and if we advance through these rapidly now the third.

49

00:03:55,740  -->  00:03:58,800
So our work with the pagination is complete.

50

00:03:58,860  -->  00:04:04,390
Now I promised earlier in the lesson that we would set up a call to action button in the text area.

51

00:04:04,410  -->  00:04:09,330
So let's do that very quickly over in our HTML for our first slide.

52

00:04:09,330  -->  00:04:09,870
Here it is.

53

00:04:09,870  -->  00:04:15,420
The slide at the end of this paragraph element let's add a link

54

00:04:18,710  -->  00:04:21,550
that says call to action.

55

00:04:21,600  -->  00:04:28,460
You could insert any text that you would like but let's give this element a class of button.

56

00:04:28,550  -->  00:04:30,630
Again you could choose any class name you like.

57

00:04:30,630  -->  00:04:32,220
This is just what I'm choosing.

58

00:04:32,220  -->  00:04:39,490
So then in our CSSA create a comment stay organized button a style.

59

00:04:40,410  -->  00:04:43,440
So now we can create a style that looks like a button.

60

00:04:43,680  -->  00:04:45,960
So I like to begin with a bit of padding.

61

00:04:46,650  -->  00:04:50,040
Six pixels vertically 10 pixels horizontally.

62

00:04:50,400  -->  00:04:51,950
Let's give it rounded edges.

63

00:04:51,990  -->  00:05:01,610
So border radius 5 pixels lets make the font bold make it use all capitals text transform uppercase

64

00:05:01,620  -->  00:05:02,280
.

65

00:05:02,790  -->  00:05:09,740
Let's give it a blue background background color and I'm going to paste in a hexadecimal code for blue

66

00:05:10,900  -->  00:05:13,780
lets make the text white.

67

00:05:14,220  -->  00:05:22,500
So if we save and refresh there is our call to action button lets make the font a bit smaller so font

68

00:05:22,500  -->  00:05:24,870
size 84 percent.

69

00:05:24,870  -->  00:05:27,030
And lets also add a bit of margin left.

70

00:05:27,030  -->  00:05:30,490
So its not super close to the standard text.

71

00:05:30,530  -->  00:05:31,210
Whoops.

72

00:05:31,350  -->  00:05:35,120
Margin left 10 pixels much better.

73

00:05:35,220  -->  00:05:37,260
Let's add a quick hover style.

74

00:05:37,260  -->  00:05:45,850
So when someone hovers over the call to action button it changes button a hover.

75

00:05:45,990  -->  00:05:50,250
So let's switch the background color and text color when someone hovers over it.

76

00:05:50,250  -->  00:05:57,050
So the background color will be white and the text color will be the blue value.

77

00:05:57,780  -->  00:05:58,980
Excellent.

78

00:05:58,980  -->  00:06:05,000
Now one quick feature that we should change about Cycle 2 is that if someone is hovering over the text

79

00:06:05,000  -->  00:06:10,410
area or actually anywhere on a slide it shouldnt auto advance to the next slide because that can be

80

00:06:10,410  -->  00:06:11,610
very frustrating.

81

00:06:11,610  -->  00:06:17,370
Imagine a user was just about to click this call to action button and then the slideshow auto advanced

82

00:06:17,430  -->  00:06:19,040
and they could no longer click it.

83

00:06:19,050  -->  00:06:26,520
So all we need to do to fix that is head over to our HTML. Our cycle slideshow did the parent do we

84

00:06:26,520  -->  00:06:36,610
can add an additional data attribute of data cycle pause on hover and provided a value of true.

85

00:06:36,630  -->  00:06:37,780
Its that simple.

86

00:06:38,140  -->  00:06:41,110
So Cycle 2 is incredibly flexible.

87

00:06:41,340  -->  00:06:45,780
So now we can see that because I'm hovering over the slide and I'm getting ready to click on the call

88

00:06:45,780  -->  00:06:50,410
to action button cycle 2 will never automatically advance to the next slide.

89

00:06:50,700  -->  00:06:57,750
But as soon as I move my mouse off of the slideshow and wait a few seconds cycle to nose to advance

90

00:06:57,750  -->  00:06:58,560
again.

91

00:06:59,070  -->  00:07:04,080
Now the final feature of Cycle 2 that I want to highlight in this lesson is that it plays along very

92

00:07:04,080  -->  00:07:06,730
nicely with responsive layouts.

93

00:07:06,840  -->  00:07:11,950
Some slides show scripts lock you into a certain with their height but not cycle too.

94

00:07:12,180  -->  00:07:19,440
So for example if I make the browser window smaller to resemble perhaps a smartphone factor we can see

95

00:07:19,440  -->  00:07:26,190
that obviously our textarea takes up too much space but the slideshow itself still functions just like

96

00:07:26,190  -->  00:07:27,490
we would expect.

97

00:07:27,600  -->  00:07:31,650
So we can make this fully responsive quite easily on a smartphone.

98

00:07:31,650  -->  00:07:37,980
I think all we need to change is that the text area instead of overlapping the image should simply sit

99

00:07:37,980  -->  00:07:39,500
below the image.

100

00:07:39,750  -->  00:07:46,560
So to do that I'm just going to head over to our style sheet find the slide text selector.

101

00:07:46,620  -->  00:07:47,480
Here it is.

102

00:07:47,530  -->  00:07:57,780
It's create a really quick media query media screen and Max with 767 pixels so actually anything that's

103

00:07:57,780  -->  00:08:00,260
smaller than a tablet.

104

00:08:01,800  -->  00:08:07,380
Slide text should no longer use position absolute just use position static.

105

00:08:07,380  -->  00:08:15,060
So standard positioning and instead of having a semi transparent background just use solid black.

106

00:08:15,060  -->  00:08:20,760
So if we refresh that looks a lot better for the smartphone form factor.

107

00:08:21,240  -->  00:08:27,270
But if someone's using a larger device they still receive the classic overlay styling that we set up

108

00:08:28,710  -->  00:08:30,990
and that's going to conclude this lesson.

109

00:08:31,170  -->  00:08:35,100
Hopefully you've noticed that cycle 2 is incredibly flexible.

110

00:08:35,100  -->  00:08:40,760
Now you can extrapolate what we've learned today to create any type of slideshow you can imagine.

111

00:08:40,770  -->  00:08:47,190
So this is an example of how we can leverage javascript without writing javascript so we can let a solution

112

00:08:47,190  -->  00:08:53,730
like cycle to handle the on the fly manipulation of the page and then leverage our own.

113

00:08:53,730  -->  00:08:58,770
Each TMLC has the skills to fully customize things.

114

00:08:58,770  -->  00:09:04,020
I encourage you to experiment and create your own unique layout and styles for a slide show and I will

115

00:09:04,020  -->  00:09:06,070
see you in the next lesson.
