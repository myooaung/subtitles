WEBVTT
1

00:00:00.390  -->  00:00:06.500
In this lesson we will learn about the CSSA property named transition.

2

00:00:06.570  -->  00:00:12.990
This property allows us to animate or transitions smoothly between two different values.

3

00:00:12.990  -->  00:00:15.770
Now this is a bit difficult to describe in words.

4

00:00:15.810  -->  00:00:20.060
So let's see it in action in front of you is an example page.

5

00:00:20.100  -->  00:00:23.750
And I want you to focus on these links in the header.

6

00:00:23.760  -->  00:00:29.430
Notice that when I hover over a particular link it lights up with a white background and the color of

7

00:00:29.430  -->  00:00:31.470
the text changes to blue.

8

00:00:31.470  -->  00:00:36.080
Now the CSSA code used to create that hover effect is nothing new.

9

00:00:36.270  -->  00:00:40.780
We've reviewed the hover pseudo selector in an earlier lesson.

10

00:00:41.040  -->  00:00:47.310
So we're simply styling the links and then we're using this pseudo selector to say once one of the links

11

00:00:47.310  -->  00:00:53.490
has hovered over apply these unique styles so we're swapping out the background color and the color

12

00:00:53.490  -->  00:00:55.530
of the text.

13

00:00:55.560  -->  00:01:01.620
However the transition between the non-covered state and the hover state is very abrupt.

14

00:01:01.800  -->  00:01:07.260
So the links immediately within one millisecond go from one style to the other.

15

00:01:07.260  -->  00:01:13.140
Now what if we wanted to alter this behavior so that the transition between the two style States took

16

00:01:13.200  -->  00:01:15.930
a full two seconds to complete.

17

00:01:15.930  -->  00:01:22.440
So that way the human eye could see all of the intermediate states and color gradations between white

18

00:01:22.530  -->  00:01:23.670
and dark blue.

19

00:01:24.000  -->  00:01:27.490
Well this is where the transition property comes into play.

20

00:01:27.810  -->  00:01:35.990
So in our style sheet within the room for the links I will add a new property named transition property

21

00:01:35.990  -->  00:01:36.740
.

22

00:01:36.840  -->  00:01:42.870
This is where we can specify which properties the web browser should keep an eye on and watch for changes

23

00:01:42.870  -->  00:01:43.290
.

24

00:01:43.290  -->  00:01:48.500
So let's begin with the color of the text color.

25

00:01:48.540  -->  00:01:54.010
Next I will add an additional property named transition duration.

26

00:01:54.060  -->  00:01:58.380
This is where we can specify how long the transition should take.

27

00:01:58.380  -->  00:02:07.920
So I will say two seconds to s to a file save and refresh we can see that the background changes immediately

28

00:02:08.220  -->  00:02:16.210
but the color of the text takes two seconds to transition from white to dark blue.

29

00:02:17.550  -->  00:02:24.210
And if we also wanted the background color to take two seconds to transition in our transition property

30

00:02:24.600  -->  00:02:29.560
after color we can include a comma and then spell out background color.

31

00:02:29.650  -->  00:02:36.420
So if we save and refresh you can see now both properties use the full two seconds to transition very

32

00:02:36.420  -->  00:02:39.240
smoothly between the two states.

33

00:02:39.690  -->  00:02:42.620
And here's a quick tip that can save you a bit of typing.

34

00:02:42.930  -->  00:02:47.230
If you want all of the properties to transition you don't need to spell them out.

35

00:02:47.250  -->  00:02:51.630
You can simply type all the all keyword is very useful.

36

00:02:51.630  -->  00:02:57.090
I find myself using it most of the time but I did want you to be aware that you do have the flexibility

37

00:02:57.120  -->  00:03:00.630
to specify specific properties if need be.

38

00:03:00.900  -->  00:03:05.390
So we've learned how to transition smoothly between two values.

39

00:03:05.610  -->  00:03:10.330
But let's be honest fading between two different colors is not that exciting.

40

00:03:10.440  -->  00:03:13.480
So let's try something a bit more adventurous.

41

00:03:13.560  -->  00:03:19.320
Now if I scroll down the example page bit you'll see this image with a caption positioned over it that

42

00:03:19.320  -->  00:03:21.510
has a transparent black background.

43

00:03:21.510  -->  00:03:25.190
We learned how to create this effect in an earlier lesson in the course.

44

00:03:25.380  -->  00:03:27.290
But that was a few lessons ago.

45

00:03:27.450  -->  00:03:30.350
We now have a few more tricks up our sleeve.

46

00:03:30.360  -->  00:03:36.780
Let's imagine that we want the caption area the black box to be hidden by default and we don't want

47

00:03:36.780  -->  00:03:43.030
it to display until we hover over the image and we don't want it to abruptly appear.

48

00:03:43.080  -->  00:03:48.060
We want to gradually fade or transition or animate the caption into view.

49

00:03:48.150  -->  00:03:55.650
Now in our age TNL the caption area for the image has a class of banner description so I will search

50

00:03:55.650  -->  00:03:57.680
for that in my style sheet.

51

00:03:57.840  -->  00:04:04.950
Here is the corresponding rule and the first thing that I'm going to do is hide the content by default

52

00:04:04.950  -->  00:04:05.460
.

53

00:04:05.460  -->  00:04:07.560
Now there are many ways to achieve that.

54

00:04:07.620  -->  00:04:12.970
I'm going to use the method where I push the content down and then on hover.

55

00:04:13.020  -->  00:04:15.420
I'll pull the content back into view.

56

00:04:15.990  -->  00:04:21.590
So let's use the transform property and use the translate.

57

00:04:21.610  -->  00:04:23.040
Why function.

58

00:04:23.040  -->  00:04:26.070
So we want to push the content down so it's out of view.

59

00:04:26.670  -->  00:04:30.720
Now instead of trying to count how many pixels down we want to push it.

60

00:04:30.810  -->  00:04:37.980
If we use a value of 100 percent it will use the height of the content itself and move down that much

61

00:04:37.980  -->  00:04:38.310
.

62

00:04:38.310  -->  00:04:45.480
So for example if I save and refresh we see that the caption box has been pushed down the perfect amount

63

00:04:45.490  -->  00:04:45.740
.

64

00:04:45.990  -->  00:04:51.670
Now clearly the caption box is still visible and we want it to be hidden initially.

65

00:04:51.780  -->  00:04:58.860
Now to hide this caption we can rely on our h TMLC structure so we know that this is the caption content

66

00:04:59.010  -->  00:05:04.720
has a class of banner description and it lives within the div with a class of image banner.

67

00:05:04.740  -->  00:05:07.050
So this is the elements parent.

68

00:05:07.050  -->  00:05:13.410
Now in our stylesheet we can target that parent element and say that any child content that has been

69

00:05:13.410  -->  00:05:18.690
pushed out of this parent's boundaries should be hidden.

70

00:05:18.710  -->  00:05:19.980
So with overflow.

71

00:05:19.970  -->  00:05:24.790
Hidden in place if we refresh we can see the caption is now Kadin.

72

00:05:25.130  -->  00:05:30.710
So we are now free to attempt to transition or animate the caption into view when we hover over the

73

00:05:30.710  -->  00:05:31.420
image.

74

00:05:31.700  -->  00:05:40.670
So I'm going to create a new rule any time we hover over the parent image banner live we want to apply

75

00:05:41.030  -->  00:05:45.230
new styles to the banner description or caption box.

76

00:05:45.230  -->  00:05:50.940
So initially we used transform translate y to push the content out of view.

77

00:05:51.310  -->  00:05:58.440
We can simply copy and paste that into this new selector and say that instead of being pushed down.

78

00:05:58.730  -->  00:06:01.990
Use a value of zero or just sit where you normally would.

79

00:06:02.330  -->  00:06:08.450
So this line of code will make the caption content visible while we are hovering over any part of the

80

00:06:08.450  -->  00:06:09.490
image.

81

00:06:09.500  -->  00:06:15.890
However this is a lesson about the transition property so we don't want to abruptly transition between

82

00:06:15.890  -->  00:06:19.940
completely hidden two completely visible in one millisecond.

83

00:06:19.940  -->  00:06:26.600
We know that the translate y function positions content and if we can see all of the intermediate steps

84

00:06:26.600  -->  00:06:31.220
and transitions between these two values we have the beginnings of an animation.

85

00:06:31.490  -->  00:06:38.060
So within the rule for our Baner description element Let's include a property of transition property

86

00:06:38.070  -->  00:06:38.670
.

87

00:06:38.990  -->  00:06:42.470
All transition duration.

88

00:06:42.530  -->  00:06:44.500
One second.

89

00:06:44.540  -->  00:06:52.820
Now if we save and refresh and hover over the image it slides or animates into view and it is silky

90

00:06:52.820  -->  00:06:53.920
smooth.

91

00:06:53.960  -->  00:07:00.170
Next let's take things a step further and not only have the caption contents slide into view but fade

92

00:07:00.170  -->  00:07:03.020
into view from a transparency perspective.

93

00:07:03.020  -->  00:07:10.310
So within the original rule we can set the opacity to zero and then within our hover rule can set the

94

00:07:10.310  -->  00:07:17.330
opacity to want and because we set transition property to all the browser will look for any and all

95

00:07:17.330  -->  00:07:18.840
changes on hover.

96

00:07:18.890  -->  00:07:26.540
So if we save and refresh we see that the opacity of the caption content is also being transitioned

97

00:07:26.540  -->  00:07:26.810
.

98

00:07:26.810  -->  00:07:32.420
So now we have a very need sliding and fading effect taking place.

99

00:07:32.930  -->  00:07:34.740
So the caption box is complete.

100

00:07:34.850  -->  00:07:38.120
Let's talk for a moment about the image itself.

101

00:07:38.540  -->  00:07:45.200
Let's imagine we wanted the image itself to pan or zoomin when it is being hovered over we can achieve

102

00:07:45.200  -->  00:07:47.030
this effect very easily.

103

00:07:47.150  -->  00:07:52.150
So within our stylesheet here is the rule that targets the image element.

104

00:07:52.600  -->  00:07:59.300
Lets simply create a hover rule so when we hover over the image banner element we want to target the

105

00:07:59.330  -->  00:08:00.350
image.

106

00:08:00.620  -->  00:08:10.100
Now to create a zooming or painting effect we can say transformed scale one point five and let's be

107

00:08:10.100  -->  00:08:14.480
sure to add the transition property to the image element.

108

00:08:14.990  -->  00:08:21.340
Transition property all transition duration.

109

00:08:21.560  -->  00:08:22.980
1 second.

110

00:08:23.000  -->  00:08:25.170
Now I have to let you in on a bit of a secret.

111

00:08:25.220  -->  00:08:27.690
We don't need to type this out as two properties.

112

00:08:27.770  -->  00:08:35.230
The shorthand is simply transition all one second so that saves us a bit of code.

113

00:08:35.240  -->  00:08:44.740
So with that in place if we refresh we can see that when we hover over the image it then uses a scale

114

00:08:44.780  -->  00:08:47.340
using the transform property of 1.5.

115

00:08:47.570  -->  00:08:50.210
And because we set the parent element to overflow.

116

00:08:50.210  -->  00:08:55.700
Hidden the image doesn't spill out of the container when it zooms in.

117

00:08:55.730  -->  00:09:00.950
Obviously we have the transition property to thank for the animation effect so we get to see all of

118

00:09:00.950  -->  00:09:05.710
the intermediate steps between a scale of 1 and 1.5.

119

00:09:05.750  -->  00:09:08.200
Spread out over 1 second.

120

00:09:08.210  -->  00:09:15.890
Now if we wanted a very gradual or slow effect we can increase the transition to 3 seconds.

121

00:09:18.740  -->  00:09:25.070
So anything is possible and hopefully this encourages you to experiment with transition effects on your

122

00:09:25.070  -->  00:09:25.530
own.

123

00:09:25.700  -->  00:09:31.760
Now let's try one last final experiment very quickly before the lesson ends at the bottom of the sample

124

00:09:31.760  -->  00:09:32.150
page.

125

00:09:32.150  -->  00:09:34.600
We can see a circle element.

126

00:09:34.640  -->  00:09:41.390
Lets work together to create an effect so that when we hover over the circle it rotates 360 degrees

127

00:09:41.390  -->  00:09:42.050
.

128

00:09:42.050  -->  00:09:44.650
This element has a class of box B.

129

00:09:44.660  -->  00:09:47.140
So I will search for that in the style sheet.

130

00:09:47.150  -->  00:09:48.240
Here it is.

131

00:09:48.500  -->  00:09:53.600
Let's create a hover based rule for the element box B hover.

132

00:09:53.960  -->  00:10:02.300
So when the element is hovered we want to use the transform property and rotate the content 360 degrees

133

00:10:03.410  -->  00:10:04.880
we save and refresh.

134

00:10:04.880  -->  00:10:11.570
We see nothing happens because without an animation or transition we don't see the 360 degree change

135

00:10:11.570  -->  00:10:12.810
it's a full rotation.

136

00:10:13.130  -->  00:10:22.630
So if we set the transition to all one second we can actually watch the circle rotate.

137

00:10:22.640  -->  00:10:29.570
Now this circle example is an excellent opportunity to introduce you to one more property transition

138

00:10:30.620  -->  00:10:33.070
timing function.

139

00:10:33.320  -->  00:10:37.690
This controls the acceleration in d acceleration of the transition.

140

00:10:37.940  -->  00:10:45.370
So if I set this to linear you'll notice that the animation plays at a steady speed.

141

00:10:45.680  -->  00:10:55.190
But if I provide a different value ease in you can see that the animation begins slowly and then finishes

142

00:10:55.190  -->  00:10:56.460
fast.

143

00:10:56.630  -->  00:11:04.300
Or if I provide a value of ease out it starts fast and ends slowly.

144

00:11:04.370  -->  00:11:10.230
You can also try ease in out and it will start slowly.

145

00:11:10.640  -->  00:11:12.980
Perform fast and then end slowly.

146

00:11:13.010  -->  00:11:15.470
Now if we don't include this line at all.

147

00:11:15.470  -->  00:11:22.880
Most web browsers by default will use a function named IIS which is similar to ease it out except that

148

00:11:22.880  -->  00:11:25.640
it starts slightly faster than it ends.

149

00:11:25.640  -->  00:11:30.560
Now we technically do not need to include an entirely separate property.

150

00:11:30.560  -->  00:11:37.400
We can simply add a keyword of the timing function at the end of our transition line.

151

00:11:37.400  -->  00:11:42.980
So this is the standard shorthand syntax for the transition property you specify which properties you

152

00:11:42.980  -->  00:11:44.280
want to transition.

153

00:11:44.480  -->  00:11:50.000
How long the transition should take and the method you would like to use for the acceleration and the

154

00:11:50.000  -->  00:11:56.210
acceleration of the transition and that will bring this lesson to a close to review.

155

00:11:56.210  -->  00:12:02.780
We learned that the transition property can be used to smoothly and seamlessly see all of the intermediate

156

00:12:02.780  -->  00:12:05.260
steps between two different values.

157

00:12:05.300  -->  00:12:11.450
Now in this lesson we used the hover pseudo selector to create situations where elements were receiving

158

00:12:11.450  -->  00:12:13.120
different values.

159

00:12:13.190  -->  00:12:19.520
The transition property can be used for much more than hover effects but for the time being we are working

160

00:12:19.520  -->  00:12:22.960
under the assumption that you do not know javascript at this point.

161

00:12:23.210  -->  00:12:29.500
So the hover scenario is your best bet to experiment and learn about the transition properly.

162

00:12:29.510  -->  00:12:35.090
I encourage you to have a bit of fun and create your own unique transition effects because in our next

163

00:12:35.090  -->  00:12:41.630
lesson we're going to take things a step further by comparing and contrasting CSSA transitions with

164

00:12:41.720  -->  00:12:45.070
actual C S S animations.

165

00:12:45.110  -->  00:12:46.570
It should be a lot of fun.

166

00:12:46.730  -->  00:12:49.130
I will see you in the next lesson.

167

00:12:49.130  -->  00:12:53.450
Just a quick heads up that if you have a spare moment or two I would really appreciate it if you could

168

00:12:53.450  -->  00:12:56.230
go and rate and review this course.

169

00:12:56.240  -->  00:12:58.790
I hope you're enjoying the course and finding it helpful.

170

00:12:58.880  -->  00:13:04.880
But even if you're not above all else an honest review is the best review and I would love for prospective

171

00:13:04.880  -->  00:13:08.370
students to be able to see honest impressions of the course.
