WEBVTT
1

00:00:00.510  -->  00:00:07.950
In this lesson we will learn about structural elements structural elements are designed to contain or

2

00:00:07.950  -->  00:00:14.550
Howze other elements and their entire purpose is to give additional semantic meaning or organization

3

00:00:14.880  -->  00:00:21.360
to our DML pages in order to learn about the different structural elements that are at your disposal

4

00:00:21.360  -->  00:00:21.470
.

5

00:00:21.480  -->  00:00:27.270
We are going to complete an exercise together in front of you is an example page that I have set up

6

00:00:27.270  -->  00:00:28.410
for this lesson.

7

00:00:28.530  -->  00:00:33.510
And currently it does not use even a single structural element.

8

00:00:33.510  -->  00:00:41.070
So our goal is to review this page together and wrap structural elements around the existing content

9

00:00:41.460  -->  00:00:44.360
in order to create more well-structured code.

10

00:00:44.610  -->  00:00:47.690
Let's begin with a bird's eye view of the page.

11

00:00:47.700  -->  00:00:54.300
This seems like the header of the page because it includes the largest heading and then a slogan can

12

00:00:54.300  -->  00:00:56.480
see that this is an article.

13

00:00:56.520  -->  00:01:02.280
It's got the date bit of text and then a bit of meta data telling us which category the article was

14

00:01:02.280  -->  00:01:02.910
posted in.

15

00:01:02.910  -->  00:01:05.240
And that it doesn't have any comments.

16

00:01:05.310  -->  00:01:07.410
This looks like another article.

17

00:01:07.620  -->  00:01:10.980
This looks like a side bar which many web sites include.

18

00:01:10.980  -->  00:01:14.940
It's simply a place that houses relevant content to the Web site as a whole.

19

00:01:15.180  -->  00:01:20.400
And this looks like the Web site's footer area now that we've identified the main building blocks of

20

00:01:20.400  -->  00:01:21.360
the page.

21

00:01:21.390  -->  00:01:22.890
Let's jump to the fun part.

22

00:01:22.980  -->  00:01:28.710
Let's head over to our text editor and begin wrapping structural elements around the content.

23

00:01:28.710  -->  00:01:35.520
The first two structural elements that I want to introduce you to are named header and footer.

24

00:01:35.700  -->  00:01:40.910
So if we look at the web page again we had said that this seemed to be the header of the Web site.

25

00:01:41.460  -->  00:01:44.420
And this bit of text and here appeared to be the footer.

26

00:01:44.670  -->  00:01:56.130
So with that in mind in our text editor let's wrap these two elements inside a header element and indent

27

00:01:56.130  -->  00:02:01.230
them just to stay organized and then let's scroll to the bottom and this is the bit of text that we

28

00:02:01.230  -->  00:02:04.940
identified as the website's footer.

29

00:02:05.100  -->  00:02:06.840
So there's an element named for

30

00:02:09.720  -->  00:02:16.110
the next structural element that I would like to introduce you to is named article for look at our Web

31

00:02:16.110  -->  00:02:16.470
page.

32

00:02:16.470  -->  00:02:22.990
We had mentioned that this looked like one article and this looked like a second article.

33

00:02:23.010  -->  00:02:28.650
Now the elements name is a bit self-explanatory article so we can use this when we have an article or

34

00:02:28.650  -->  00:02:33.120
a blog post or any other bit of content that can stand on its own.

35

00:02:33.420  -->  00:02:34.500
That's cohesive.

36

00:02:34.620  -->  00:02:37.860
Even without any of the other content on the web page.

37

00:02:38.160  -->  00:02:45.270
So in our code let's find the first article and wrap it in the article element.

38

00:02:45.540  -->  00:02:46.710
So here is all the code.

39

00:02:46.710  -->  00:02:49.780
So our start tag will be here.

40

00:02:50.490  -->  00:02:52.920
Our end tag will be here.

41

00:02:53.100  -->  00:02:57.580
And then let's go ahead and indent this content to our first article is complete.

42

00:02:57.600  -->  00:03:01.420
Let's go ahead and wrap the article element around the second article.

43

00:03:01.650  -->  00:03:12.480
So it begins here and it ends here so the Start Tag article the end tag article and then let's indent

44

00:03:12.480  -->  00:03:14.500
the content.

45

00:03:14.610  -->  00:03:20.460
Now that we've created article elements I'd like to revisit the header and footer structural elements

46

00:03:21.240  -->  00:03:24.360
when we use the header element earlier in the lesson.

47

00:03:24.450  -->  00:03:31.320
We did so to signify that this bit of content was the header of the entire document or website.

48

00:03:31.680  -->  00:03:34.940
And there should only be one top level header.

49

00:03:35.040  -->  00:03:41.050
However we can also use the header element for sections of content or in our articles.

50

00:03:41.130  -->  00:03:48.200
So for example within this article we can designate the title and the date as a header.

51

00:03:48.270  -->  00:03:55.050
So in our code here is our first article we can wrap the name of the article and the date of the article

52

00:03:55.050  -->  00:03:55.340
.

53

00:03:55.560  -->  00:03:58.200
Inside another Ketterer element

54

00:04:02.460  -->  00:04:08.310
the same can be said for the footer element to remember that we initially use the footer element for

55

00:04:08.310  -->  00:04:13.830
the footer of the entire document or website down here at the bottom of the page and there should only

56

00:04:13.830  -->  00:04:15.990
be one top level footer.

57

00:04:16.260  -->  00:04:22.920
But again within bits of content within our article we can designate this metadata area as the footer

58

00:04:22.980  -->  00:04:24.700
of the entire article.

59

00:04:24.720  -->  00:04:28.630
So within our text editor or find that bit of text here it is.

60

00:04:28.860  -->  00:04:30.720
Now wrap it in footer

61

00:04:33.720  -->  00:04:37.650
Very quickly let's do the same for our second article.

62

00:04:38.070  -->  00:04:42.740
Let's wrap the header inside a header in the footer inside of footer element.

63

00:04:43.020  -->  00:04:44.550
So the second article starts here

64

00:04:48.060  -->  00:04:53.280
this content is the header and this content is the footer

65

00:04:58.990  -->  00:04:59.680
to review.

66

00:04:59.700  -->  00:05:02.790
So far we've learned three structural elements.

67

00:05:02.790  -->  00:05:04.630
Number one header.

68

00:05:04.890  -->  00:05:12.430
Number two footer and number three article the fourth and final structural element that we will learn

69

00:05:12.450  -->  00:05:21.270
in this lesson is named A side the side the element is used for a section of the page which is related

70

00:05:21.270  -->  00:05:26.670
to the content surrounding it but should be viewed as separate from that content.

71

00:05:26.670  -->  00:05:34.110
So for example in our second article there is a glossary section and this glossary is a great example

72

00:05:34.140  -->  00:05:37.280
of a place where we can use the A side element.

73

00:05:37.470  -->  00:05:42.660
So the glossary is where we can define terms that are used in this article which means it's definitely

74

00:05:42.660  -->  00:05:47.950
related to the article but it's not exactly part of the articles body content.

75

00:05:48.000  -->  00:05:49.230
It's an aside.

76

00:05:49.260  -->  00:05:52.830
So in our code we can find that second article

77

00:05:55.770  -->  00:06:04.680
and identify where that glossary text sits and wrap it in an inside element.

78

00:06:04.680  -->  00:06:08.630
Now you are free to have multiple asides on a page.

79

00:06:08.770  -->  00:06:10.410
If we look at our page in the browser.

80

00:06:10.410  -->  00:06:16.480
I think we'll note that this sidebar area is also a good candidate for the A-side element.

81

00:06:16.980  -->  00:06:19.950
So let's find that bit of content in our text editor.

82

00:06:20.190  -->  00:06:21.150
Here it is.

83

00:06:21.150  -->  00:06:24.480
And we'll wrap that in and a side element as well

84

00:06:28.500  -->  00:06:30.390
when using the aside element.

85

00:06:30.420  -->  00:06:35.550
It's important to remember the Russians stacking all analogy and it's important to pay attention to

86

00:06:35.550  -->  00:06:35.990
elements.

87

00:06:35.980  -->  00:06:37.200
Direct parent.

88

00:06:37.410  -->  00:06:43.170
So for example when using the side for the sidebar we should make sure that this content is related

89

00:06:43.350  -->  00:06:44.870
to its direct parent.

90

00:06:45.240  -->  00:06:49.520
Now the sidebar is direct parent is the body element itself.

91

00:06:49.530  -->  00:06:55.440
So that means whatever content goes inside the sidebar should be relevant or in some way related to

92

00:06:55.440  -->  00:07:04.540
the entire page itself whereas our glossary its direct parent was the article.

93

00:07:05.940  -->  00:07:10.090
So it only needs to be related in some way to the content of the article.

94

00:07:10.320  -->  00:07:15.450
With that rule in mind and with our asides now in place our page is complete.

95

00:07:15.540  -->  00:07:21.300
Our goal was to add structural elements to give additional organization and semantic meaning to our

96

00:07:21.300  -->  00:07:23.160
page to review.

97

00:07:23.160  -->  00:07:31.620
We learned about four new elements header footer article and decide we're well on our way to writing

98

00:07:31.620  -->  00:07:33.300
more organized code.

99

00:07:33.300  -->  00:07:34.720
I'll see you in the next lesson
