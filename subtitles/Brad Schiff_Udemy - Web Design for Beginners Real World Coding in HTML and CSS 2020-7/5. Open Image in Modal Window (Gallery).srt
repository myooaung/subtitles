1

00:00:00,480  -->  00:00:07,290
In this lesson we will continue to leverage javascript without writing javascript to be more specific

2

00:00:07,290  -->  00:00:07,350
.

3

00:00:07,380  -->  00:00:12,030
We will create a photo gallery that uses a modal window.

4

00:00:12,090  -->  00:00:16,580
Let's dive straight into a demo of our finished product.

5

00:00:16,620  -->  00:00:21,320
So here we see a photo gallery and let's imagine that I'm interested in the bear photo.

6

00:00:21,480  -->  00:00:26,500
If I click on the bear you can see that the rest of the page is blacked out.

7

00:00:26,670  -->  00:00:33,300
And the bear is front and center in design we typically call this a modal window or just a motile for

8

00:00:33,300  -->  00:00:39,950
short means that we are taking the user's attention away from the main application or our main web site

9

00:00:40,470  -->  00:00:42,750
and we're presenting them with a new window.

10

00:00:42,930  -->  00:00:47,260
So let's say I'm done admiring the hi rez photo of the bear.

11

00:00:47,310  -->  00:00:53,910
Users can return to the main page by clicking anywhere in the blacked out area or if I open it again

12

00:00:53,910  -->  00:01:01,390
you can see there is an X that user can click the particular modal solution that I'm using also features

13

00:01:01,390  -->  00:01:01,410
.

14

00:01:01,410  -->  00:01:03,320
Forward and back arrows.

15

00:01:03,360  -->  00:01:08,970
So it's very easy to cycle through the gallery and you can even use the arrows on your keyboard to go

16

00:01:08,970  -->  00:01:10,630
left and right.

17

00:01:10,890  -->  00:01:16,560
We also see text in the bottom left corner of the modal window which reads image 6 out of 8.

18

00:01:16,740  -->  00:01:20,340
And if we go back to the bear we can see that some images even have captions.

19

00:01:20,400  -->  00:01:24,710
This is a large bear.

20

00:01:25,380  -->  00:01:28,630
This is a caption for the strawberry photo.

21

00:01:28,650  -->  00:01:31,940
Now that's enough staring at a finished product.

22

00:01:32,040  -->  00:01:34,390
I'm going to hop over to a different tab.

23

00:01:35,010  -->  00:01:41,100
Now in this tab there is no modal functionality in place we can see that the photos are not aligned

24

00:01:41,100  -->  00:01:43,020
in a perfect grid.

25

00:01:43,020  -->  00:01:47,420
This barebones page has nothing more than basic HDMI out and CSX.

26

00:01:47,430  -->  00:01:52,920
So this is the page that we are going to work on together to recreate the photo gallery grid layout

27

00:01:53,000  -->  00:01:57,060
in the modal window javascript functionality should be a lot of fun.

28

00:01:57,060  -->  00:01:58,680
Let's get started.

29

00:01:58,770  -->  00:02:01,390
Currently from an HD a male perspective.

30

00:02:01,410  -->  00:02:07,020
Our page is nothing more than eight instances of the image element.

31

00:02:07,110  -->  00:02:11,520
Now very quickly let's review our recipe for creating this gallery.

32

00:02:11,520  -->  00:02:12,970
There are two ingredients.

33

00:02:13,170  -->  00:02:18,180
Number one is a bit of custom HTL and CSSA which we can write on our own.

34

00:02:18,210  -->  00:02:19,290
No problem.

35

00:02:19,470  -->  00:02:25,980
And number two is a pre-existing javascript solution named lightbox which is created by the talented

36

00:02:26,070  -->  00:02:27,750
low cash to car.

37

00:02:27,780  -->  00:02:33,390
So let's begin with the first ingredient the custom h t m l and CSS and in particular let's start with

38

00:02:33,390  -->  00:02:34,590
the HMO.

39

00:02:34,860  -->  00:02:39,650
So currently these thumbnail images are just that they're an image they're not a link.

40

00:02:39,690  -->  00:02:42,410
So we want something to happen when we click on one.

41

00:02:42,780  -->  00:02:50,370
So to turn a thumbnail image into a link we simply wrap the image element within the element A for anchor

42

00:02:51,060  -->  00:02:56,900
within the opening a tag we will use the 8 ref attribute to control what we're pointing to.

43

00:02:57,180  -->  00:03:03,920
So we want each thumbnail image to link to the high resolution uncropped version of that image.

44

00:03:04,110  -->  00:03:07,320
So for example in my website folder Here's the web page.

45

00:03:07,340  -->  00:03:09,260
Here's the images folder.

46

00:03:09,660  -->  00:03:16,290
We see that there are two strawberry images strawberry dash thumb and just strawberry obviously the

47

00:03:16,290  -->  00:03:19,240
thumbnail is the one that's named dasht thumb.

48

00:03:19,320  -->  00:03:21,660
Let me open these two images for you.

49

00:03:21,660  -->  00:03:22,920
So here's the thumbnail.

50

00:03:22,920  -->  00:03:26,660
And here is the high resolution version that we want to link to.

51

00:03:26,670  -->  00:03:32,500
So back to the HTL now we've wrapped the element around strawberry thumb.

52

00:03:32,520  -->  00:03:36,710
So now in the Atropos attribute we enter the name of the image we want to linked to.

53

00:03:36,750  -->  00:03:41,890
So it lives in the images folder and its name is simply strawberry d.j pig.

54

00:03:42,150  -->  00:03:46,310
So if I save and refresh we can see that now and I hover over strawberry.

55

00:03:46,320  -->  00:03:47,070
It's a link.

56

00:03:47,070  -->  00:03:50,760
And if I click it it takes us to the high rez version.

57

00:03:50,760  -->  00:03:53,220
Now clearly this is not a modal window.

58

00:03:53,220  -->  00:03:56,160
We have not even plugged in our javascript solution yet.

59

00:03:56,400  -->  00:04:02,240
Our web page is simply linking us to a new page or in this case to a new image so you can see that the

60

00:04:02,240  -->  00:04:06,310
you are Albar changed to point towards the high rez strawberry file.

61

00:04:06,540  -->  00:04:10,740
So we would have to now click our web browser back button to get back to our Web page.

62

00:04:10,890  -->  00:04:17,550
But that's OK because that means that even without Javascript the user experience here makes sense.

63

00:04:17,550  -->  00:04:20,640
Users can click on the thumbnail to see the high rez version.

64

00:04:20,790  -->  00:04:23,330
We want javascript to be the polish.

65

00:04:23,490  -->  00:04:28,760
The extra shine on top of a Web site we don't want our Web site to be completely broken.

66

00:04:28,800  -->  00:04:32,070
If javascript is not enabled in someone's device.

67

00:04:32,070  -->  00:04:34,170
So currently we are in great shape.

68

00:04:34,260  -->  00:04:38,760
Now we just need to go through the rest of the images and set up links like we did for the strawberry

69

00:04:38,760  -->  00:04:39,730
image.

70

00:04:39,800  -->  00:04:44,150
Now I'm not going to waste your time and have you watch me do that for all 8 images.

71

00:04:44,220  -->  00:04:48,360
But we will repeat ourselves at least once more just in the name of practice.

72

00:04:48,510  -->  00:04:51,810
So let's work on the doc image in my images folder.

73

00:04:51,810  -->  00:04:53,950
Here is the thumbnail doc thumb.

74

00:04:53,980  -->  00:04:56,390
Here is the high rez file doc.

75

00:04:56,490  -->  00:05:00,570
So here they are you can see that this thumbnails much smaller than the full copy.

76

00:05:00,570  -->  00:05:07,040
So in our HMO We just want to wrap this doc thumbnail inside an element.

77

00:05:07,070  -->  00:05:10,130
Here is the closing tag in the opening tag.

78

00:05:10,120  -->  00:05:15,630
Let's add the ATRA of attribute and point towards the high rez copy of the doc so it lives in the images

79

00:05:15,630  -->  00:05:19,420
folder instead of doc thumb its name is simply Dawk.

80

00:05:19,920  -->  00:05:21,530
So I'll save refresh.

81

00:05:21,530  -->  00:05:26,400
Now we can click on Doc there's the high risk copy I mean click on back.

82

00:05:26,410  -->  00:05:31,280
All right now because I do not want you to die of boredom I will pause the video and come back when

83

00:05:31,280  -->  00:05:33,800
the remaining six images are linked up.

84

00:05:33,800  -->  00:05:34,580
Welcome back.

85

00:05:34,610  -->  00:05:39,560
So now all of the images are wrapped in links pointing towards their high resolution counterpart.

86

00:05:39,800  -->  00:05:41,960
I'm not going to worry about CSSA for the moment.

87

00:05:41,960  -->  00:05:45,050
So currently the images are not aligned in a perfect grid.

88

00:05:45,050  -->  00:05:47,630
We can circle back to that in just a couple of moments.

89

00:05:47,840  -->  00:05:49,840
But for now let's get down to the fun part.

90

00:05:49,850  -->  00:05:51,110
The Javascript.

91

00:05:51,110  -->  00:05:56,490
Or in other words the modal window behavior we are going to use the javascript solution named the light

92

00:05:56,490  -->  00:05:57,460
box.

93

00:05:57,620  -->  00:06:01,760
So you can perform a web search for light box it's by location to car.

94

00:06:01,760  -->  00:06:04,580
I've downloaded the zip file for light box.

95

00:06:04,610  -->  00:06:05,430
Here it is.

96

00:06:05,450  -->  00:06:11,660
Now I'm going to extract the zip so the zip created a folder named lightbox and within that folder we're

97

00:06:11,660  -->  00:06:13,780
going to drill down to the javascript folder.

98

00:06:13,970  -->  00:06:18,660
And here's the file that I'm looking for light box Dot meant yes.

99

00:06:18,860  -->  00:06:23,030
So I want to copy this file into my web site folder.

100

00:06:23,030  -->  00:06:24,560
So back in our Web site folder.

101

00:06:24,770  -->  00:06:27,330
Let's move up and out of the images folder.

102

00:06:27,450  -->  00:06:28,320
Here's our Web page.

103

00:06:28,340  -->  00:06:31,120
And let's move in to the js folder.

104

00:06:31,140  -->  00:06:33,620
So currently the only file in here is Jquery.

105

00:06:33,620  -->  00:06:40,340
So I'm going to move this new light box dot minJs file to live within our jazz folder.

106

00:06:40,490  -->  00:06:45,170
And now we need to include this file in the head section of our Web page.

107

00:06:45,170  -->  00:06:52,210
So over in our HTL I already have Jayco are included in the head section from a previous lesson.

108

00:06:52,250  -->  00:06:54,010
You most likely will as well.

109

00:06:54,110  -->  00:07:00,710
So we can simply duplicate that line in the new line change the file that we're looking for to light

110

00:07:00,740  -->  00:07:02,140
box.

111

00:07:02,230  -->  00:07:06,330
Jay is excellent but we are not done moving files around yet.

112

00:07:06,350  -->  00:07:14,270
So in the folder that the Lightbox zip created there is also a CSSA folder and we are interested in

113

00:07:14,270  -->  00:07:16,520
the Lightbox Scott CSSA file.

114

00:07:16,610  -->  00:07:21,400
So I want to move that into our web sites CSSA folder.

115

00:07:21,410  -->  00:07:22,270
So let's move.

116

00:07:22,270  -->  00:07:24,860
Lightbox Yes that's perfect.

117

00:07:24,860  -->  00:07:29,240
Now let's reference this in the head section of our HTL now.

118

00:07:29,240  -->  00:07:31,770
So I will duplicate the line that we already have.

119

00:07:31,770  -->  00:07:33,760
It's calling in our style sheet.

120

00:07:33,980  -->  00:07:39,490
And then just change the name that the browser looking for lightbox does CSS.

121

00:07:39,620  -->  00:07:46,370
Now with the Lightbox javascript and CSSA files in place we are one incredibly easy step away from having

122

00:07:46,370  -->  00:07:47,750
modal behaviour.

123

00:07:47,870  -->  00:07:50,740
So let's scroll down to our thumbnails.

124

00:07:50,780  -->  00:07:52,310
Let's start with the strawberry image.

125

00:07:52,340  -->  00:08:01,100
So on the A element I'm going to add a new attribute named Data light box and you can provide a value

126

00:08:01,160  -->  00:08:02,300
of anything that you would like.

127

00:08:02,300  -->  00:08:07,320
So I will use Galerie you could use gallery one gallery too.

128

00:08:07,670  -->  00:08:10,040
You could use any word that you would like.

129

00:08:10,040  -->  00:08:17,330
So again I will use gallery now when I save and refresh if I click on the strawberry image you can see

130

00:08:17,330  -->  00:08:19,240
that it opens in a modal.

131

00:08:19,250  -->  00:08:22,870
Now very quickly let's analyze what the javascript is doing.

132

00:08:23,030  -->  00:08:30,290
So the script actively searches the page for any links that have an attribute of data lightbox and when

133

00:08:30,290  -->  00:08:36,680
it finds those elements it hijacks the click or tap event instead of sending this to a new page to visit

134

00:08:36,680  -->  00:08:38,240
this link or this image.

135

00:08:38,300  -->  00:08:41,960
It dynamically pulls in the image in a modal window.

136

00:08:42,170  -->  00:08:48,090
So this means we need to add the data box attribute to all of our thumbnail links.

137

00:08:48,320  -->  00:08:51,610
So I will copy and paste.

138

00:08:51,770  -->  00:08:58,040
Now I will point out that the value we assign to data lightbox controls which images are grouped together

139

00:08:58,040  -->  00:08:58,490
.

140

00:08:58,520  -->  00:09:03,680
So for example because our first two links both use the phrase gallery.

141

00:09:03,740  -->  00:09:08,350
When I click on the strawberry we see this note that says image 1 of 2.

142

00:09:08,480  -->  00:09:12,430
So if I click the right arrow on my keyboard image to have two.

143

00:09:12,790  -->  00:09:17,660
However in our second link we provided a different value for data light box.

144

00:09:17,660  -->  00:09:23,470
If we said image 2 or any other phrase the images will not be considered a group.

145

00:09:23,480  -->  00:09:28,880
So now the right arrow on my keyboard does not do anything and we do not see the text telling us one

146

00:09:28,880  -->  00:09:29,410
of two.

147

00:09:29,420  -->  00:09:30,710
So on and so forth.

148

00:09:30,740  -->  00:09:35,090
Now we want all of our images to be grouped together in a single series so we want to make sure that

149

00:09:35,150  -->  00:09:40,790
all of our links use data like box with the value of gallery so behind the scenes I will add that to

150

00:09:40,790  -->  00:09:42,020
all of our links.

151

00:09:42,020  -->  00:09:42,830
Welcome back.

152

00:09:42,830  -->  00:09:48,110
So with that attribute and value in place on all of our links if I click on one of our images you can

153

00:09:48,110  -->  00:09:49,190
see the text that reads.

154

00:09:49,220  -->  00:09:54,730
Image one of 8 and the arrows on my keyboard can be used to cycle through all 8 images.

155

00:09:54,740  -->  00:10:00,260
However if we think back to the beginning of this lesson when I first showed the finished product you

156

00:10:00,260  -->  00:10:02,140
will remember that there are supposed to be.

157

00:10:02,140  -->  00:10:06,320
Forward and back arrows and also an X to close the modal.

158

00:10:06,320  -->  00:10:07,340
Now all we need to do.

159

00:10:07,340  -->  00:10:12,560
For those to be in place is head over to the folder that the light box zip created.

160

00:10:12,710  -->  00:10:20,080
Look inside the EMG folder and copy over these four great images into our images folder.

161

00:10:22,330  -->  00:10:29,530
Now it's important to point out that the Lightbox CSSA file is looking for these images in an EMG folder

162

00:10:29,530  -->  00:10:29,740
.

163

00:10:29,890  -->  00:10:34,570
But in our demo we've named our images folder images not just I m g.

164

00:10:34,730  -->  00:10:42,100
So to fix this all we need to do in our text editor is open the Lightbox dot CSSA file and on the third

165

00:10:42,110  -->  00:10:47,380
line of code we can already see an example of what we need to adjust instead of EMG this should read

166

00:10:47,380  -->  00:10:48,190
images.

167

00:10:48,380  -->  00:10:51,910
So I'm going to perform a find and replace on Mac.

168

00:10:51,910  -->  00:10:57,220
This is usually accomplished by holding the command key and simultaneously pressing f if you're on Windows

169

00:10:57,460  -->  00:11:01,460
you can hold down the control key and simultaneously press F.

170

00:11:02,140  -->  00:11:11,630
So I want to find all instances of dot dot image and I want to replace it with dot dot images.

171

00:11:11,750  -->  00:11:15,240
I will then click replace all save.

172

00:11:15,310  -->  00:11:23,330
And now if we refresh and see the x is in place and if I cycle through the images we can see both the

173

00:11:23,320  -->  00:11:26,650
forward and back arrows are in place.

174

00:11:26,750  -->  00:11:32,120
Now there was one final lightbox attribute that I want to run by you before we work on customizing the

175

00:11:32,120  -->  00:11:34,860
thumbnail grid with our own CSX.

176

00:11:34,960  -->  00:11:39,400
So very quickly let's talk about how to add a caption for these images.

177

00:11:39,400  -->  00:11:44,280
So let's imagine that we want to add a caption for the strawberry photo in our HTL.

178

00:11:44,270  -->  00:11:53,650
Now we can simply add an additional attribute to the link element Deda title and we can pass it any

179

00:11:53,650  -->  00:11:55,300
value we would like.

180

00:11:55,300  -->  00:11:58,720
This is a strawberry.

181

00:11:58,900  -->  00:12:02,880
So now when we open the model there is the caption for that image.

182

00:12:02,890  -->  00:12:04,100
It's that simple.

183

00:12:04,150  -->  00:12:10,000
So the modal window aspect of our gallery is complete before we close out this lesson.

184

00:12:10,030  -->  00:12:15,010
Let's write a bit of CSSA to fine tune the grid of thumbnails.

185

00:12:15,040  -->  00:12:19,540
So for example Let's hop back over to the finished product that we saw in the beginning of this lesson

186

00:12:19,540  -->  00:12:20,040
.

187

00:12:20,240  -->  00:12:22,420
You can see they're spaced out just right.

188

00:12:22,420  -->  00:12:28,220
And when we hover over one the rest of the thumbnails are dimmed and shrunk a bit and the one that we're

189

00:12:28,210  -->  00:12:31,600
hovering over is rotated in there's a shadow.

190

00:12:31,660  -->  00:12:35,590
Now some could say that this looks cheesy or gimmicky.

191

00:12:35,600  -->  00:12:40,750
I might even be one of the people that says that but I think this is a fun exercise to practice writing

192

00:12:40,750  -->  00:12:41,680
CSS.

193

00:12:41,840  -->  00:12:48,760
So let's hop back over to our tab that we're working on together and implement a bit of custom CSS.

194

00:12:49,060  -->  00:12:56,440
The first thing that I will do is head over to the HTL mill and wrap all of our thumbnails in a div

195

00:12:56,440  -->  00:13:00,030
that has a class of thumbnails.

196

00:13:00,280  -->  00:13:07,630
So this way I have a unique class to target in our CSA is now in our style sheet create a bit of space

197

00:13:08,300  -->  00:13:15,850
create a comment some nail styles and we're off to the races now before we write any CSSA Let's give

198

00:13:15,860  -->  00:13:17,230
ourselves a goal.

199

00:13:17,600  -->  00:13:20,780
I want there to be four thumbnails per row.

200

00:13:21,160  -->  00:13:28,600
So in my style sheet I will create a rule that targets any element or link that lives inside the thumbnails

201

00:13:28,650  -->  00:13:37,970
Div I will float them to the left and give them a width of 25 percent because 25 times 4 is 100 percent

202

00:13:37,960  -->  00:13:38,020
.

203

00:13:38,020  -->  00:13:42,090
So we will fit four on a row so that save here.

204

00:13:42,400  -->  00:13:45,450
And because we used floats Let's go clear our floats.

205

00:13:45,500  -->  00:13:51,880
So I'm going to add a class of group to the parent thumbnails element to this way it will clear the

206

00:13:51,880  -->  00:13:53,810
floats of its children.

207

00:13:53,870  -->  00:13:59,800
So if we refresh in the browser we see that the images are perfectly resized and repositioned to fit

208

00:13:59,800  -->  00:14:01,690
for Parow.

209

00:14:01,690  -->  00:14:06,910
Now if you're following along in order for your images to be able to resize dynamically you'll need

210

00:14:06,910  -->  00:14:11,770
to make sure that your style sheet includes a bit of code for images.

211

00:14:12,460  -->  00:14:17,680
So towards the top of my style sheet I have a rule that selects all images and gives them a max width

212

00:14:17,750  -->  00:14:21,070
of 100 percent without code similar to this.

213

00:14:21,080  -->  00:14:24,570
Your images will not be able to resize on the fly.

214

00:14:25,000  -->  00:14:31,060
So with that public service announcement out of the way now let's focus on creating margin horizontally

215

00:14:31,120  -->  00:14:33,790
between the thumbnails.

216

00:14:33,810  -->  00:14:39,040
Now what may be a bit counterintuitive but I actually prefer to use padding instead of margin.

217

00:14:39,400  -->  00:14:43,420
So padding right with say 15 pixels now on its own.

218

00:14:43,420  -->  00:14:50,990
This will break the layout because 25 percent plus 15 pixels will result in more than 100 percent of

219

00:14:50,980  -->  00:14:52,470
the available width.

220

00:14:52,610  -->  00:15:01,960
But we can simply say box sizing border box and other 15 pixels will be subtracted from the 25 percent

221

00:15:01,960  -->  00:15:02,820
with.

222

00:15:02,950  -->  00:15:06,700
So that once again it will equal a perfect 100 percent.

223

00:15:07,450  -->  00:15:14,830
And because we do not want there to be 15 pixels of padding right on the last column we can simply apply

224

00:15:14,920  -->  00:15:24,820
a negative margin to the thumbnails container element margin right negative 15 pixels perfect.

225

00:15:24,830  -->  00:15:29,650
Now let's also fine tune the vertical margin between the rows of images.

226

00:15:29,980  -->  00:15:37,810
Let's begin by zeroing out this default spacing which is present because images are inline elements

227

00:15:37,820  -->  00:15:38,900
by default.

228

00:15:39,110  -->  00:15:42,780
So this means they can be affected by things like font size and line height.

229

00:15:43,030  -->  00:15:48,010
To counteract this we can simply make them block level elements.

230

00:15:48,430  -->  00:15:50,450
So now we see the vertical spacing is gone.

231

00:15:50,470  -->  00:15:55,180
And now we can provide a very specific vertical margin.

232

00:15:55,660  -->  00:16:02,260
So on our elements I would simply say margin bottom 15 pixels.

233

00:16:02,260  -->  00:16:06,510
So now we have consistent spacing horizontally and vertically.

234

00:16:06,550  -->  00:16:11,860
Now all that remains is to add a fun hover effect for individual images.

235

00:16:11,870  -->  00:16:14,750
Let's hop over to our CSX.

236

00:16:14,760  -->  00:16:20,430
I will create a new rule thumbnails image hover.

237

00:16:20,500  -->  00:16:25,320
So when an image is hovered over let's rotate it a tiny bit clockwise.

238

00:16:25,340  -->  00:16:29,920
And let's also give it a shadow transform.

239

00:16:30,640  -->  00:16:36,100
Rotate 2 degrees give it a shadow box shadow.

240

00:16:36,590  -->  00:16:41,990
I want the shadow to be visible on all four edges so I won't move horizontally of vertically but I will

241

00:16:41,980  -->  00:16:50,190
control the spread to be 7 pixels and I will use a light black or a transparent black value.

242

00:16:50,190  -->  00:16:53,950
So it's save see what that looks like.

243

00:16:53,950  -->  00:16:55,360
I like it.

244

00:16:55,370  -->  00:17:00,670
Now let's imagine that when we hover over one image we want all of the other images to fade out and

245

00:17:00,670  -->  00:17:01,930
shrink a bit.

246

00:17:02,370  -->  00:17:08,230
So to do that all we need to do is create a different rule and our style sheet select the thumbnails

247

00:17:08,230  -->  00:17:16,390
parent div and say when it is hovered over select all images to lower their opacity.

248

00:17:16,390  -->  00:17:21,510
And lets also reduce their scales or transform scale.

249

00:17:21,530  -->  00:17:28,880
Let's try 92 percent point nine to now in our hover rule for the image that is actually being hovered

250

00:17:28,880  -->  00:17:30,340
over.

251

00:17:30,460  -->  00:17:34,880
Be sure to set it scale to native or default 1.

252

00:17:35,510  -->  00:17:38,680
Let's also set its opacity to 1.

253

00:17:38,710  -->  00:17:49,000
So now when we hover over one them now all of the others sit back a bit and let the Hubbard image steal

254

00:17:49,010  -->  00:17:50,140
the show.

255

00:17:50,140  -->  00:17:57,260
Now I would prefer that the rotation and the change in size happened smoothly instead of all at once

256

00:17:57,320  -->  00:17:59,160
in one millisecond.

257

00:17:59,260  -->  00:18:01,170
So to make the transition smooth.

258

00:18:01,210  -->  00:18:08,740
All we need to do is target this baseline rule for the thumbnail images add a new declaration transition

259

00:18:08,740  -->  00:18:09,310
.

260

00:18:09,320  -->  00:18:15,160
All properties should take 200 milliseconds and to make it extra smooth.

261

00:18:15,160  -->  00:18:25,060
Let's use the ease in out timing function much better and that will bring this lesson on creating a

262

00:18:25,070  -->  00:18:28,280
photo gallery with a modal window to a close.

263

00:18:28,610  -->  00:18:33,150
As always you can find a zip file of the finished product in the related files.

264

00:18:33,150  -->  00:18:37,520
For this lecture I encourage you to experiment with your own photo galleries.

265

00:18:37,510  -->  00:18:40,380
Have fun and I will see you in the next lesson.
