1

00:00:00,780  -->  00:00:08,790
In this lesson we will learn about the CSSA box model or in other words we will learn that every element

2

00:00:08,850  -->  00:00:13,030
on a web page is essentially a rectangle or a box.

3

00:00:13,290  -->  00:00:19,200
And the CSSA box model will let us understand that becoming a web designer really means learning how

4

00:00:19,200  -->  00:00:24,150
to manipulate and decorate boxes in any way that you can imagine.

5

00:00:24,150  -->  00:00:25,750
So let's get started.

6

00:00:26,000  -->  00:00:32,420
Here's an example page that I've created for this lesson and we can see that it reads box a the HVM

7

00:00:32,590  -->  00:00:36,900
of this page is nothing more than a div with a class of box.

8

00:00:37,170  -->  00:00:43,650
So our goal for this lesson is to write bits of CSSA code to begin to understand the way their boxes

9

00:00:43,650  -->  00:00:47,580
are formed to begin to understand the box model.

10

00:00:47,610  -->  00:00:50,590
So the first thing we'll do is target that class.

11

00:00:50,730  -->  00:01:00,050
So a period box A and the first task is to give it a background color background color light gray.

12

00:01:00,300  -->  00:01:02,600
So this is something that we've seen in earlier lessons.

13

00:01:02,670  -->  00:01:04,190
There's nothing amazing about this.

14

00:01:04,200  -->  00:01:07,150
We've given the box a background color.

15

00:01:07,380  -->  00:01:10,520
The next property might begin to explain the box model.

16

00:01:10,530  -->  00:01:23,220
However padding 30 pixels so you can see that the content of the box this text box A and our HMO here

17

00:01:23,760  -->  00:01:30,120
now sits 30 pixels from the top of the box where we can see the background color begins and it sits

18

00:01:30,120  -->  00:01:33,770
30 pixels from the left of where the content begins.

19

00:01:34,050  -->  00:01:41,640
Next let's give our box a border in our CSX border.

20

00:01:41,700  -->  00:01:45,030
The first thing we do is decide how thick we want the border to be.

21

00:01:45,030  -->  00:01:50,700
So let's say we want to be three pixels that we want it to be a solid straight line.

22

00:01:51,030  -->  00:01:53,550
And we want it to be black.

23

00:01:53,790  -->  00:01:57,110
So if we refresh we can see that the box now has a border.

24

00:01:57,450  -->  00:02:02,760
No in order to continue learning about boxes I think it would be helpful if we had more than one box

25

00:02:02,790  -->  00:02:04,170
on the page.

26

00:02:04,170  -->  00:02:05,590
So in our HMO.

27

00:02:05,610  -->  00:02:14,820
Let's create a second div and give it a class of box B and we include the text box B within the div

28

00:02:14,820  -->  00:02:15,420
.

29

00:02:15,420  -->  00:02:19,140
So if we refresh we can see that it has not received any styling yet.

30

00:02:19,140  -->  00:02:20,550
So let's give it a bit of styling

31

00:02:23,070  -->  00:02:27,270
box be background color orange.

32

00:02:27,370  -->  00:02:30,500
So if we save and refresh we can see that that's in place.

33

00:02:30,570  -->  00:02:35,280
Now let's imagine that we want to create space between these two boxes.

34

00:02:35,310  -->  00:02:40,050
So currently we can see that they're pressed up against each other without any sort of space or margin

35

00:02:40,060  -->  00:02:40,320
.

36

00:02:40,680  -->  00:02:46,980
So that word that I just used margin is how we create space between these two boxes.

37

00:02:47,010  -->  00:02:54,780
So let's target box a within this rule and we'll say margin bottom 20 pixels.

38

00:02:54,840  -->  00:03:01,890
So if we save and refresh we can see that box 8 is now pushing down so that there's 20 pixels of margin

39

00:03:01,920  -->  00:03:06,040
or space between it and the next box.

40

00:03:06,120  -->  00:03:13,590
Now that we've seen padding border and Margene inaction you understand the basics are the fundamentals

41

00:03:13,680  -->  00:03:15,060
of the box model.

42

00:03:15,150  -->  00:03:22,020
So a box is nothing more than an area that takes up space on the web page to create space within the

43

00:03:22,110  -->  00:03:23,880
inside of that box.

44

00:03:23,880  -->  00:03:29,550
We use padding to draw an outline around the outer edge of that box.

45

00:03:29,550  -->  00:03:35,690
We use border and then to push or create space around the outside of the box.

46

00:03:35,700  -->  00:03:37,810
We use margin.

47

00:03:38,550  -->  00:03:44,190
Now that you're familiar with the basics of the box model let's take things a step further and learn

48

00:03:44,190  -->  00:03:48,200
how to control the width and height of boxes.

49

00:03:48,220  -->  00:03:57,870
So in our CSS Let's imagine that we want the box a gray box to have a width of 200 pixels and a height

50

00:03:57,990  -->  00:04:01,180
of a hundred and fifty pixels.

51

00:04:01,200  -->  00:04:07,140
So if I save and refresh we can see that we have fine grained control over the dimensions the width

52

00:04:07,140  -->  00:04:09,070
and height of the box.

53

00:04:09,090  -->  00:04:15,990
So if we wanted this box to be a little bit wider you could increase its with from 200 to 250 pixels

54

00:04:15,990  -->  00:04:16,350
.

55

00:04:16,350  -->  00:04:23,250
And if we were fresh we see that it grows a little bit in with now the width and height properties become

56

00:04:23,250  -->  00:04:29,280
especially interesting when we begin to understand how they pair and relate to the padding margin and

57

00:04:29,280  -->  00:04:30,530
border properties.

58

00:04:30,690  -->  00:04:38,310
So for example let's add identical width and height values to our second box box B to a face saving

59

00:04:38,310  -->  00:04:44,550
refresh we can see that even though we gave it identical with height values it's not the same size and

60

00:04:44,550  -->  00:04:46,850
shape as box A.

61

00:04:46,890  -->  00:04:52,020
This is because we added padding and border to box A.

62

00:04:52,140  -->  00:04:58,260
But you will notice that we did not add those properties to box B and padding and border are calculated

63

00:04:58,440  -->  00:05:01,830
when the browser determines the final dimensions of an element.

64

00:05:01,830  -->  00:05:09,420
So this box is not actually only 250 pixels wide it's also adding 30 pixels of padding on the left side

65

00:05:09,540  -->  00:05:14,280
30 pixels of padding on the right side and then it's adding three pixels of border on each side.

66

00:05:14,580  -->  00:05:16,150
So let's give ourselves a goal.

67

00:05:16,290  -->  00:05:23,340
Let's imagine that we want to adjust the box B's with value so that in the browser it appears to have

68

00:05:23,340  -->  00:05:26,360
an identical with as box A.

69

00:05:26,370  -->  00:05:29,080
So in order to do that we'll need to do a bit of arithmetic.

70

00:05:29,430  -->  00:05:36,990
So 250 plus 30 pixels of padding on the left brings us up to 80 plus 30 pixels of padding on the right

71

00:05:36,990  -->  00:05:37,030
.

72

00:05:37,050  -->  00:05:41,160
Brings us up to 310 plus three pixels of border on the left.

73

00:05:41,160  -->  00:05:42,560
Brings us up to 313.

74

00:05:42,560  -->  00:05:46,910
And then another three pixels of border on the right brings us up to 316.

75

00:05:46,920  -->  00:05:52,760
So now if we save and refresh we can see that the boxes are identical in width.

76

00:05:52,790  -->  00:05:59,010
However front end web developers have more important things to do than crunching numbers just to determine

77

00:05:59,010  -->  00:06:00,780
the size of a box.

78

00:06:00,780  -->  00:06:05,670
So while it's important that you're aware of the way that padding and border affect the true size of

79

00:06:05,670  -->  00:06:10,890
an element you have a luxury of being a web developer in the modern era.

80

00:06:10,920  -->  00:06:17,310
Now in the last several years there's a property that's arised that will make our lives very easy so

81

00:06:17,310  -->  00:06:22,960
that property is box sizing boarder box.

82

00:06:23,040  -->  00:06:27,460
So if I save and refresh watch what happens to box a.

83

00:06:28,170  -->  00:06:29,290
It shrinks.

84

00:06:29,460  -->  00:06:35,790
And now it quite literally is two hundred and fifty pixels wide.

85

00:06:36,180  -->  00:06:42,020
So now on our box B we don't need to worry about the weird arithmetic of adding this plus padding Plus

86

00:06:42,030  -->  00:06:46,870
border we can put this back to 250 pixels wide.

87

00:06:47,220  -->  00:06:54,750
And because we used box sizing border box on the element that has padding and border the web browser

88

00:06:54,750  -->  00:07:02,390
knows how to calculate the size of box A so that it actually is 250 pixels wide.

89

00:07:02,400  -->  00:07:07,910
Now when I mentioned that box sizing border box is a luxury of the modern era.

90

00:07:07,920  -->  00:07:14,250
All that means is that if someone is coming to your website and they're using a very outdated web browser

91

00:07:14,580  -->  00:07:21,920
a web browser that hasn't been updated since 2008 or very early 2009 this property will not work.

92

00:07:21,990  -->  00:07:27,750
And in that case their web browser will resort to using padding and border when calculating the overall

93

00:07:27,750  -->  00:07:29,020
with value.

94

00:07:29,020  -->  00:07:33,270
However this is not a lesson on cross-browser compatibility.

95

00:07:33,270  -->  00:07:36,850
This is a lesson on the CSSA box model.

96

00:07:36,990  -->  00:07:43,560
Now in later lessons in the course we will discuss how to handle site visitors that are using disgustingly

97

00:07:43,560  -->  00:07:45,160
outdated web browsers.

98

00:07:45,300  -->  00:07:48,560
But this is neither the time nor the place for that discussion.

99

00:07:48,720  -->  00:07:52,210
For the time being I want you to stay focused on the box model.

100

00:07:52,230  -->  00:08:00,300
So I want you to reflect on padding border margin and the way that we can create and manipulate boxes

101

00:08:00,810  -->  00:08:06,900
because in our next lesson we are going to learn how to create a basic page layout with CSX.

102

00:08:06,930  -->  00:08:11,520
In other words we will learn how to create a web page that actually looks like a typical web page with

103

00:08:11,520  -->  00:08:15,020
different columns sitting next to each other side by side.

104

00:08:15,240  -->  00:08:16,990
And I think it's going to be a lot of fun.

105

00:08:17,070  -->  00:08:19,340
So I will see you in the next lesson.
