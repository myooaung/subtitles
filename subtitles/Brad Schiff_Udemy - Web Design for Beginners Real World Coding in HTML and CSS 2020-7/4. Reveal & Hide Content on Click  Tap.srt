1

00:00:00,390  -->  00:00:07,920
In this lesson we will learn how to create buttons which users can tap or click to reveal or hide certain

2

00:00:07,920  -->  00:00:09,480
sections of content.

3

00:00:09,690  -->  00:00:13,000
So let's jump straight to a visual example of this.

4

00:00:13,020  -->  00:00:14,860
Let's look at the finished product.

5

00:00:15,110  -->  00:00:21,240
So here is an example page and if I resize the browser to a word that resembles a smartphone you can

6

00:00:21,240  -->  00:00:27,840
see that the navigation is gone and there's a menu link that we can click and we tap to click that the

7

00:00:27,840  -->  00:00:29,970
menu is then revealed.

8

00:00:30,480  -->  00:00:36,510
This is a great way to conserve precious screen real estate on smaller devices.

9

00:00:36,510  -->  00:00:41,270
Mobile navigation menus are probably the most prominent example of this functionality.

10

00:00:41,270  -->  00:00:44,930
You've probably seen many web sites that use this strategy.

11

00:00:45,300  -->  00:00:49,050
Let's take a look at another example.

12

00:00:49,080  -->  00:00:54,630
So on a laptop or a large tablet or a traditional computer we scroll down a bit we see there's a bit

13

00:00:54,630  -->  00:00:55,300
of text.

14

00:00:55,320  -->  00:00:59,710
So this section reads important text and this area reads full text.

15

00:00:59,730  -->  00:01:02,400
So maybe this text isn't super important.

16

00:01:02,520  -->  00:01:09,960
Now if we resize our browser down to a smartphone size you can see that the full text is gone.

17

00:01:09,990  -->  00:01:15,180
So perhaps we decided that it wasn't important enough to show initially on a smartphone but you can

18

00:01:15,180  -->  00:01:19,200
see that we have this link here that reads read full text.

19

00:01:19,320  -->  00:01:23,990
Now this link was not present at the desktop or laptop size.

20

00:01:24,150  -->  00:01:25,710
So you'll see there is no link.

21

00:01:26,160  -->  00:01:31,280
But again the smartphone size if we click this link it reveals the full text.

22

00:01:31,320  -->  00:01:35,640
And then you can see that it's phrasing changes to hide full text.

23

00:01:35,670  -->  00:01:39,850
So if we click it again the extra text is hidden.

24

00:01:40,230  -->  00:01:44,550
So that was a quick demo of the reveal and hide functionality.

25

00:01:44,550  -->  00:01:47,730
But looking at a finished product isn't very educational.

26

00:01:47,850  -->  00:01:52,950
So now let's hop over to a tab that doesn't have any of this functionality.

27

00:01:53,160  -->  00:01:56,300
And let's work together to create this behavior.

28

00:01:56,430  -->  00:02:02,280
So our recipe for creating the reveal and hide functionality has two ingredients.

29

00:02:02,340  -->  00:02:08,020
First ingredient is a bit of custom HVM and CSX which we can write without a problem.

30

00:02:08,310  -->  00:02:14,070
And the second ingredient is a javascript solution that we're going to plug into our page named declarative

31

00:02:14,070  -->  00:02:15,230
toggle.

32

00:02:15,390  -->  00:02:22,260
In this scenario javascript will handle the click or tap events and it will also add and remove the

33

00:02:22,260  -->  00:02:25,860
right classes at the right moment to the right elements.

34

00:02:25,860  -->  00:02:27,250
So let's get started.

35

00:02:27,570  -->  00:02:33,040
Let's begin by adding the declarative toggle javascript file to our Web page.

36

00:02:33,060  -->  00:02:35,750
So here is the javascript file declarative toggle.

37

00:02:35,880  -->  00:02:41,640
You can find this in the description for this lesson or in the downloadable zip for the lecture.

38

00:02:41,640  -->  00:02:45,330
So I'm going to move this file to live with the other web site files.

39

00:02:45,360  -->  00:02:46,880
So here is my web site folder.

40

00:02:47,130  -->  00:02:48,610
Here is the javascript folder.

41

00:02:48,630  -->  00:02:53,130
So I'm going to move declarative toggle to live within the jazz folder.

42

00:02:53,130  -->  00:03:00,330
Next let's actually include this file in the head section of our HMO to I'm just going to copy and paste

43

00:03:00,690  -->  00:03:05,130
one of the existing script lines and all we need to change is the name of the file.

44

00:03:05,220  -->  00:03:11,530
So our file still lives in the jazz folder and its name is declarative toggled that J.

45

00:03:11,550  -->  00:03:12,420
Yes.

46

00:03:12,570  -->  00:03:13,140
Excellent.

47

00:03:13,140  -->  00:03:19,530
So with this one line of code we have leveraged javascript and now all we need to worry about is the

48

00:03:19,590  -->  00:03:22,300
H DML and C Ss.

49

00:03:22,620  -->  00:03:28,470
So let's give ourselves a goal let's imagine that we want to hide the navigation and include a link

50

00:03:28,500  -->  00:03:30,480
in the header that reads menu.

51

00:03:30,480  -->  00:03:35,370
Now let's begin by adding this behavior to all devices and screen sizes.

52

00:03:35,460  -->  00:03:40,890
And then once we have everything functioning properly we can make it responsive by feeding the behavior

53

00:03:40,920  -->  00:03:43,390
only to smaller devices.

54

00:03:43,410  -->  00:03:48,130
So let's begin by heading to our HMO and adding the menu button.

55

00:03:48,180  -->  00:03:53,980
So I will create a span within the span I will include the word menu.

56

00:03:54,300  -->  00:04:01,080
Now the declarative toggle script is actively searching for elements on the page that have a data attribute

57

00:04:01,170  -->  00:04:02,660
of data.

58

00:04:02,910  -->  00:04:05,310
Toggle target.

59

00:04:05,640  -->  00:04:11,960
Now this attribute is where we specify what should be revealed when we click on this element.

60

00:04:12,300  -->  00:04:16,080
So this attribute accepts CSSA selectors.

61

00:04:16,350  -->  00:04:23,940
So for example when we click on the menu element we want to reveal this nav element and navigation and

62

00:04:23,940  -->  00:04:26,340
that element has a class of site nav.

63

00:04:26,340  -->  00:04:32,100
So within this data attribute we can simply give it a value of DOT to represent a class and then site

64

00:04:32,100  -->  00:04:33,150
now.

65

00:04:33,750  -->  00:04:42,390
And finally as far as the H team is concerned we also want to add a class of toggle button to any declarative

66

00:04:42,390  -->  00:04:44,250
toggle buttons that we create.

67

00:04:44,730  -->  00:04:46,260
So that's it for the for HTML.

68

00:04:46,260  -->  00:04:55,560
Now let's hop over to our C Ss create a new comment to stay organized reveal and hides styles.

69

00:04:55,760  -->  00:05:01,580
Now are javascript solution of declarative toggle has a hands off approach meaning it lets CSSA do a

70

00:05:01,580  -->  00:05:03,140
lot of the heavy lifting.

71

00:05:03,140  -->  00:05:06,400
The talk with declarative script utilizes four classes.

72

00:05:06,530  -->  00:05:14,090
They are toggle button toggle button visible toggle target hidden and toggle target expanded to very

73

00:05:14,090  -->  00:05:14,760
quickly.

74

00:05:14,870  -->  00:05:23,540
By default we want toggle buttons to be hidden so display none if the javascript file is loaded successfully

75

00:05:23,540  -->  00:05:23,560
.

76

00:05:23,570  -->  00:05:26,270
It will add a class of toggle button visible.

77

00:05:26,270  -->  00:05:29,800
So then we want them to be display Block.

78

00:05:29,930  -->  00:05:37,100
Next up toggle target hidden to our script will automatically add this class to elements that we want

79

00:05:37,100  -->  00:05:38,270
to reveal.

80

00:05:38,330  -->  00:05:42,260
So we want them to initially be hidden so display none.

81

00:05:42,260  -->  00:05:49,910
And finally when we click on the button our script adds this class toggled target expanded to the target

82

00:05:49,910  -->  00:05:50,310
element.

83

00:05:50,360  -->  00:05:53,920
So we want it to be display block or visible.

84

00:05:53,960  -->  00:06:01,220
So with this VSS in place if I save and refresh you can see the navigation is hidden.

85

00:06:01,220  -->  00:06:06,110
We click on menu it's revealed and if we click menu again it's hidden.

86

00:06:06,110  -->  00:06:10,250
Now let's take a look at how easy it is to make this behavior responsive.

87

00:06:10,280  -->  00:06:16,660
So let's imagine that we only want this hide and reveal functionality for small screens.

88

00:06:16,760  -->  00:06:22,430
All we need to do is head over to our CSSA and of these four new rules that we created.

89

00:06:22,430  -->  00:06:28,940
The bottom three need to simply be wrapped in a media query so I will cut these into my clipboard and

90

00:06:28,940  -->  00:06:34,430
let's create a media query so media screen and max width.

91

00:06:34,670  -->  00:06:42,490
So I'm going to say anything smaller than a tablet and then I'm simply going to paste in the ss.

92

00:06:42,530  -->  00:06:50,000
So now if I save and refresh we can see at the desktop level the traditional navigation is in place

93

00:06:50,000  -->  00:06:50,020
.

94

00:06:50,030  -->  00:06:55,350
But if we shrink the browser down to a phone here's the menu.

95

00:06:56,270  -->  00:07:00,650
We can talk to the navigation we can hide the navigation again and even if we make our browser large

96

00:07:00,650  -->  00:07:04,940
again it reverts back to the standard navigation.

97

00:07:04,970  -->  00:07:07,060
Now we all know that practice makes perfect.

98

00:07:07,070  -->  00:07:12,610
So let's try this functionality again on the full text example that we saw earlier.

99

00:07:12,920  -->  00:07:17,770
So let's head over to our mail.

100

00:07:18,890  -->  00:07:21,410
Here is the full text area.

101

00:07:21,410  -->  00:07:27,470
So the first thing I'm going to do is wrap this content in a div so that we have some way of grasping

102

00:07:27,470  -->  00:07:28,340
it.

103

00:07:28,640  -->  00:07:30,270
So I'll cut this to my clipboard.

104

00:07:30,360  -->  00:07:35,420
It's create a div named full text and then I'll paste the content back in.

105

00:07:35,420  -->  00:07:41,450
Next let's add the read more button at the end of the important text paragraph.

106

00:07:41,450  -->  00:07:42,240
So here.

107

00:07:42,790  -->  00:07:53,000
So create a span now that will give it an attribute of data toggle target and we want to target this

108

00:07:53,120  -->  00:07:54,470
full text div.

109

00:07:54,560  -->  00:07:56,040
So a class of full text.

110

00:07:56,090  -->  00:08:02,180
So Dot full text now within the span lets have it read.

111

00:08:02,180  -->  00:08:05,990
Read the full text.

112

00:08:06,020  -->  00:08:11,370
Let's also be sure to give the span a class of toggle button.

113

00:08:12,230  -->  00:08:17,930
So if we save and refresh you can see that at the desktop level the link is not visible in the full

114

00:08:17,930  -->  00:08:19,590
text is visible.

115

00:08:20,030  -->  00:08:26,060
But if we make our browser window smaller the full text is not displayed but we see this option which

116

00:08:26,060  -->  00:08:30,820
reads read the full text and if I click on that there is the full text.

117

00:08:30,830  -->  00:08:32,380
So now let's make a few edits.

118

00:08:32,570  -->  00:08:37,110
Let's style this span so that it actually looks like a link or a button.

119

00:08:37,190  -->  00:08:41,810
So let's jump over to our C Ss and give that span a unique class.

120

00:08:41,870  -->  00:08:43,830
So it already has a class of toggle button.

121

00:08:43,940  -->  00:08:47,290
Let's give it a second class of read more.

122

00:08:47,330  -->  00:08:53,490
So now if we hop over to our CSX we can create a special style for Read more.

123

00:08:53,690  -->  00:09:00,560
So let's give it an underlined text decoration underline and let's make the color blue and we can even

124

00:09:00,560  -->  00:09:02,050
provide a hover style.

125

00:09:02,060  -->  00:09:03,390
So read more.

126

00:09:04,160  -->  00:09:08,000
Let's remove the text decoration or remove the underlined text decoration.

127

00:09:08,000  -->  00:09:09,490
None.

128

00:09:09,530  -->  00:09:11,510
So now if we refresh.

129

00:09:11,780  -->  00:09:15,250
It actually looks like something that we would want to click or tap.

130

00:09:15,260  -->  00:09:20,270
Now I want to show you one final feature of declarative toggle so you will notice that when we click

131

00:09:20,270  -->  00:09:22,480
on this it shows the full text.

132

00:09:22,490  -->  00:09:27,920
But if we were to click on it again it hides the text so perhaps it would make sense that once it's

133

00:09:27,920  -->  00:09:31,290
been clicked or tapped once this text should change.

134

00:09:31,310  -->  00:09:37,700
So instead of saying read the full text it should say hide the full text so we can implement that very

135

00:09:37,700  -->  00:09:42,390
easily over in our HTL mail on this spand button.

136

00:09:42,530  -->  00:09:50,600
We can provide an additional data attribute named Data toggle text and this is where we can provide

137

00:09:50,600  -->  00:09:56,000
that alternative text that reads hide the full text.

138

00:09:56,160  -->  00:10:04,280
So if we save and refresh we tap this once content is displayed we can see the text changes to hide

139

00:10:04,280  -->  00:10:10,250
the full text so the description of the button changes depending on what action it's actually performing

140

00:10:10,250  -->  00:10:11,360
.

141

00:10:11,360  -->  00:10:15,770
Now before we close out this lesson let's give ourselves one additional goal.

142

00:10:15,800  -->  00:10:22,490
Let's imagine that we only want the hide and reveal functionality in the navigation for small screens

143

00:10:22,490  -->  00:10:22,910
.

144

00:10:23,090  -->  00:10:30,350
But what if we want the hide and real functionality on this full text even on larger screens.

145

00:10:30,350  -->  00:10:36,370
Now when we originally structured our CSSA for the declarative toggle classes we placed them in immediate

146

00:10:36,370  -->  00:10:42,560
media query which means unless a device is smaller than this breakpoint the device will more or less

147

00:10:42,560  -->  00:10:45,350
just ignore our javascript solution.

148

00:10:45,350  -->  00:10:52,000
So what if we want larger devices by default to ignore our javascript solution but in certain circumstances

149

00:10:52,010  -->  00:10:58,490
so perhaps if the elements live within the main column then we do want larger devices to play along

150

00:10:58,510  -->  00:10:58,710
.

151

00:10:58,970  -->  00:11:05,480
All we need to do is copy the styles that live within the media query and paste them so that there is

152

00:11:05,480  -->  00:11:12,800
a copy outside of the media query and then add on an additional class to these selectors to make them

153

00:11:12,860  -->  00:11:14,460
a descendant selector.

154

00:11:14,780  -->  00:11:22,760
So for example this main column of our website has a class of main area so we can create descendant

155

00:11:22,760  -->  00:11:31,160
selectors and say only if these elements live within the main column.

156

00:11:31,280  -->  00:11:35,190
Do we want large screens to play along with our javascript solution.

157

00:11:35,660  -->  00:11:43,160
So now if I save and refresh it can see that we still have the traditional desktop navigation but down

158

00:11:43,160  -->  00:11:50,200
here the full text is hidden and we can show and hide it at will.

159

00:11:50,360  -->  00:11:52,920
That's going to bring this lesson to a close.

160

00:11:52,940  -->  00:11:58,800
I hope that you can find interesting uses for this functionality in your pages and your web sites.

161

00:11:58,820  -->  00:12:03,950
Perhaps you can get creative and adjust the media query break point and create all sorts of neat responsive

162

00:12:03,950  -->  00:12:07,300
layouts with interesting bits of content to toggle.

163

00:12:07,340  -->  00:12:12,560
So like always I encourage you to experiment and have fun and I will see you in the next lesson
