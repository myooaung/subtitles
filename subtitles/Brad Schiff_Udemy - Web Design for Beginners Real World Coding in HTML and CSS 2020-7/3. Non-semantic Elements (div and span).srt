1

00:00:00,390  -->  00:00:08,100
In this lesson we will learn about two elements which add absolutely zero semantic meaning to our code

2

00:00:08,400  -->  00:00:14,340
yet are still incredibly valuable for adding bits of additional structure to our pages here and there

3

00:00:14,340  -->  00:00:14,830
.

4

00:00:14,850  -->  00:00:19,650
These elements names are div and span.

5

00:00:19,650  -->  00:00:27,150
First let's discuss the div element in earlier lessons we learned about elements named header footer

6

00:00:27,270  -->  00:00:30,810
article and these elements are all intuitively named.

7

00:00:30,810  -->  00:00:37,080
They have very specific job and purpose and they are used to break up the page into meaningful chunks

8

00:00:37,080  -->  00:00:37,650
.

9

00:00:37,650  -->  00:00:43,750
The div element is similar to these elements in that it is used to divide up the page into chunks.

10

00:00:43,770  -->  00:00:49,560
However it has no semantic meaning it's not used only for headers it's not used only for footers it's

11

00:00:49,560  -->  00:00:51,160
not used only for articles.

12

00:00:51,330  -->  00:00:53,480
It's a very general purpose.

13

00:00:53,490  -->  00:00:55,230
One size fits all.

14

00:00:55,260  -->  00:00:58,650
Use it whenever you see fit type of element.

15

00:00:58,650  -->  00:01:01,560
When there is no semantic element that will do the job.

16

00:01:01,650  -->  00:01:04,370
We use the development as a fallback.

17

00:01:04,530  -->  00:01:11,250
It's name div stands for division so it's really a one size fits all way to create a section or division

18

00:01:11,250  -->  00:01:13,620
of content within your page.

19

00:01:13,620  -->  00:01:18,540
The reason that we as web developers want our pages to be made up of so many different sections and

20

00:01:18,540  -->  00:01:24,440
subsections is because it makes styling the pages with CSSA much easier.

21

00:01:24,450  -->  00:01:31,590
Now we have not covered CSSA yet in this course but we know that CSSA is how we add style and layout

22

00:01:31,800  -->  00:01:35,250
and presentational preferences to our pages.

23

00:01:35,310  -->  00:01:41,460
So let me show you a quick example of when I would use a development in this example page that we've

24

00:01:41,460  -->  00:01:43,300
seen in previous lessons.

25

00:01:43,590  -->  00:01:50,940
So here is the first article and we remember that this section is in the header element and this section

26

00:01:50,940  -->  00:01:56,860
is in the footer element but the actual content is not in a subsection.

27

00:01:56,910  -->  00:02:01,780
So let's hop over to the code really quickly that's creating this content.

28

00:02:01,780  -->  00:02:04,030
Here is where the article element begins.

29

00:02:04,030  -->  00:02:05,130
Here is the header.

30

00:02:05,250  -->  00:02:08,760
Here's the footer and here's the actual meat and potato content.

31

00:02:08,760  -->  00:02:14,070
Now even though we have not learned CSSA yet so we have not learned how to add style or layout to our

32

00:02:14,070  -->  00:02:14,880
pages.

33

00:02:14,910  -->  00:02:20,550
You can imagine that a web developer might want to style the actual body content of the article differently

34

00:02:20,730  -->  00:02:26,230
so perhaps that means adding a background color or adding extra space around it.

35

00:02:26,250  -->  00:02:28,810
So this is where the development comes into play.

36

00:02:28,830  -->  00:02:35,890
We can wrap this body content of the article in a div element so there's the Start Tag.

37

00:02:35,900  -->  00:02:40,220
Here is the end tag and then we can give the div a class.

38

00:02:40,230  -->  00:02:46,530
We use the class attribute and then we provide a name so I could name this anything that I'd like as

39

00:02:46,530  -->  00:02:53,010
long as I don't include a space in the name so I'll name this date for this division article body.

40

00:02:53,010  -->  00:02:55,910
No this has absolutely no semantic value.

41

00:02:55,920  -->  00:03:01,770
We just invented this class named article body and in a perfect world we wouldn't have to use this in

42

00:03:01,770  -->  00:03:06,540
a perfect world there would be an element named article body but there isn't.

43

00:03:06,540  -->  00:03:13,410
So instead we used the div element when there is not a dedicated element to do the job or when we need

44

00:03:13,410  -->  00:03:18,990
an additional container or hook or element for styling and layout purposes.

45

00:03:19,110  -->  00:03:20,550
So we've covered div..

46

00:03:20,550  -->  00:03:23,310
Now let's discuss Spanne.

47

00:03:23,790  -->  00:03:30,720
If the development is a non semantic version of header footer and article these block level elements

48

00:03:30,720  -->  00:03:38,770
that we can use to chunk up the page then span is a non semantic version of strong or e m.

49

00:03:38,850  -->  00:03:41,730
So for example what if we wanted the word ipsum.

50

00:03:41,730  -->  00:03:43,300
Here it is in the text editor.

51

00:03:43,320  -->  00:03:44,550
Here it is in the browser.

52

00:03:44,670  -->  00:03:49,740
What if we wanted this word within a paragraph to be styled a certain way.

53

00:03:50,100  -->  00:03:55,680
Let's imagine that if some was the name of our company and for marketing or branding reasons we needed

54

00:03:55,680  -->  00:04:00,990
it to be a particular color so we needed a way to differentiate it from the rest of the text in the

55

00:04:00,990  -->  00:04:02,040
paragraph.

56

00:04:02,040  -->  00:04:10,350
We've seen examples of inline elements in the past so we've seen strong but this carries semantic weight

57

00:04:10,350  -->  00:04:11,040
with it.

58

00:04:11,040  -->  00:04:17,970
This implies that this word has strong importance so we don't want to use this element because we don't

59

00:04:17,970  -->  00:04:19,410
want that semantic meaning.

60

00:04:19,440  -->  00:04:26,010
We're only coloring or styling this word for marketing reasons or branding reasons which means the end

61

00:04:26,010  -->  00:04:30,840
tag which stands for adding emphasis also doesn't seem like the right tag.

62

00:04:30,990  -->  00:04:35,950
We don't want to emphasize the word we simply want to target it so we can style it differently.

63

00:04:36,240  -->  00:04:40,420
So that's where the span element comes into play.

64

00:04:40,470  -->  00:04:45,720
It has no semantic meaning it's not implying anything about this word.

65

00:04:45,810  -->  00:04:52,140
Then we can simply add a class to the element named brand color or any other name that we want to make

66

00:04:52,140  -->  00:04:59,340
up and then we can target this word with SS at a later date and we can apply any styles that we would

67

00:04:59,340  -->  00:05:03,750
need to add and that will conclude this lesson to review.

68

00:05:03,750  -->  00:05:07,230
We learned about two elements div and Spain.

69

00:05:07,260  -->  00:05:08,950
One is a block level element.

70

00:05:08,970  -->  00:05:14,590
The other is an inline element and neither of them carry any semantic meaning for the moment.

71

00:05:14,610  -->  00:05:19,770
You don't need to worry too much about these elements but I want them to be on your radar because eventually

72

00:05:19,770  -->  00:05:25,590
down the road when you begin learning C Ss these elements will become important.

73

00:05:25,590  -->  00:05:27,200
I'll see you in the next lesson
