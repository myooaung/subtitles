WEBVTT
1

00:00:00.390  -->  00:00:08.250
In this lesson we will learn about CSSA sprites now instead of trying to explain what a CSSA Sprite

2

00:00:08.250  -->  00:00:09.760
is with only words.

3

00:00:09.810  -->  00:00:16.040
Let's jump straight into a visual demonstration in front of you is an example page.

4

00:00:16.050  -->  00:00:21.230
And we see three new icons or buttons when we hover over one of the buttons.

5

00:00:21.240  -->  00:00:23.980
It lights up with a unique color.

6

00:00:24.030  -->  00:00:30.450
So this first icon is a house and it represents the home of the website or app.

7

00:00:30.450  -->  00:00:36.750
This second icon is supposed to be a user or person which would represent a profile page.

8

00:00:36.870  -->  00:00:42.640
And this third icon is supposed to be a gear with represents a Settings screen.

9

00:00:42.960  -->  00:00:46.980
Now these icons were hand-drawn in about two minutes by yours truly.

10

00:00:46.980  -->  00:00:48.950
So feel free to mock them.

11

00:00:49.080  -->  00:00:51.800
They are for educational purposes only.

12

00:00:51.900  -->  00:00:58.430
But what's important is that this menu of icons is an example of CSSA sprites.

13

00:00:58.470  -->  00:01:00.210
So what does that phrase mean.

14

00:01:00.240  -->  00:01:01.960
Why are these sprites.

15

00:01:01.980  -->  00:01:03.900
What is a sprite.

16

00:01:03.900  -->  00:01:08.760
It's all related to the way that the image files for these icons are stored.

17

00:01:08.770  -->  00:01:12.670
So on my desktop there is a PMG Geographic file named sprites.

18

00:01:12.690  -->  00:01:18.960
And when I double click it it pops up and you can see that this is the graphic file that contains all

19

00:01:18.960  -->  00:01:20.440
of the icons.

20

00:01:20.610  -->  00:01:28.020
The phrase sprites simply means that we're storing all of the icons in one image file instead of having

21

00:01:28.200  -->  00:01:32.460
six different image files for the six different graphic States.

22

00:01:32.820  -->  00:01:35.790
You may be wondering why in the world would we do this.

23

00:01:35.790  -->  00:01:40.650
Why wouldn't we just include six different image files for the six different icons.

24

00:01:40.650  -->  00:01:42.780
The answer is speed.

25

00:01:42.810  -->  00:01:49.470
Page load times every time you visit a Web site your web browser has to connect to a certain server

26

00:01:49.500  -->  00:01:53.680
and download all of the files associated with the Web site.

27

00:01:53.730  -->  00:02:00.410
So there are graphic files CSSA files javascript files and for each file your browser has to make in

28

00:02:00.420  -->  00:02:03.780
HTP request which takes time.

29

00:02:03.780  -->  00:02:11.580
So by using CSSA sprites we're reducing the number of HTP requests which means we're reducing the time

30

00:02:11.580  -->  00:02:16.440
it takes to load our web pages and in the modern era speed is everything.

31

00:02:16.440  -->  00:02:17.790
Users don't want to wait.

32

00:02:17.910  -->  00:02:22.000
So if there's something we can do to make our pages faster we should do it.

33

00:02:22.020  -->  00:02:24.930
So at this point we know what a sprite is.

34

00:02:24.930  -->  00:02:27.850
We know why we use sprites.

35

00:02:27.870  -->  00:02:29.940
The only thing we're missing is the how.

36

00:02:30.060  -->  00:02:32.650
How do we create sprites.

37

00:02:32.670  -->  00:02:37.200
I'm going to hop over to another tab and we can see that there are no icons.

38

00:02:37.200  -->  00:02:39.270
There is just a menu of links.

39

00:02:39.270  -->  00:02:41.790
Home profile and settings.

40

00:02:41.790  -->  00:02:48.330
So for the remainder of this lesson we are going to work together to rewrite the code to turn this text

41

00:02:48.330  -->  00:02:54.290
based menu into an icon based menu that uses CSSA sprites.

42

00:02:54.530  -->  00:02:56.010
Let's get started.

43

00:02:56.040  -->  00:03:03.670
I will begin by moving the sprites dot P.N. Geographic file to live within the same folder as our Web

44

00:03:03.670  -->  00:03:04.350
site.

45

00:03:04.660  -->  00:03:06.360
Here is indexed page here.

46

00:03:06.450  -->  00:03:14.010
We have an images folder to stay organized so I'm going to drag the sprites file into the images folder

47

00:03:14.580  -->  00:03:15.830
with that in place.

48

00:03:15.840  -->  00:03:23.730
Let's review the HTL mail that is currently creating this text based menu nothing more than a nav element

49

00:03:24.330  -->  00:03:30.660
using an unordered list in the list item structure and we see that the parent Gnab element has a class

50

00:03:30.750  -->  00:03:32.530
of UI menu.

51

00:03:32.640  -->  00:03:39.360
So over in our CSSA file I've included a bit of basic code that you should be familiar with.

52

00:03:39.360  -->  00:03:42.950
All we're doing is floating the list items to the left.

53

00:03:42.990  -->  00:03:48.480
We are removing the default bullets that list items receive and we've added a bit of margin right so

54

00:03:48.480  -->  00:03:52.190
that there is space between the three links.

55

00:03:52.200  -->  00:03:59.290
So let's write a bit of new CSSA code that targets the actual anchor or elements.

56

00:04:00.720  -->  00:04:03.510
UI menu a.

57

00:04:03.810  -->  00:04:12.840
So we want the links to be block level so display block and now we can specify a width and height.

58

00:04:12.840  -->  00:04:20.580
Now I created these graphics myself so I know that each icon is 50 pixels wide by 50 pixels tall so

59

00:04:20.580  -->  00:04:26.820
I will give the link elements a width of 50 pixels a height of 50 pixels.

60

00:04:27.270  -->  00:04:31.260
And here is the beginning of the heart and soul of CSSA sprites.

61

00:04:31.260  -->  00:04:38.010
It's all centered around a background image so I will point the browser towards this pink file that

62

00:04:38.010  -->  00:04:39.470
we keep referencing.

63

00:04:39.930  -->  00:04:47.220
Background image you are l go into the images folder and grab the sprites stop PLG file.

64

00:04:47.220  -->  00:04:51.870
So if I save and refresh we see two problems.

65

00:04:51.930  -->  00:04:56.770
Number one we have both text and icons which looks awful.

66

00:04:56.880  -->  00:05:01.000
And number two all three links are using the home icon.

67

00:05:01.230  -->  00:05:03.830
So first let's fix the text issue.

68

00:05:03.840  -->  00:05:06.080
We want to hide the text.

69

00:05:06.270  -->  00:05:14.640
You will add a new declaration text indent negative nine thousand nine hundred ninety nine pixels so

70

00:05:14.640  -->  00:05:15.990
that hides the text.

71

00:05:15.990  -->  00:05:20.570
So now the only problem is all three links are using the home icon.

72

00:05:21.000  -->  00:05:27.840
So we need to send different CSSA instructions to each link to have it show the appropriate part of

73

00:05:27.840  -->  00:05:33.000
our graphic file so we need a way to distinguish between the three links.

74

00:05:33.000  -->  00:05:39.410
So in our TNL code I'm going to add unique classes to each list item.

75

00:05:39.570  -->  00:05:42.860
So the first will have a class of UI home.

76

00:05:43.090  -->  00:05:46.910
I'll give the second a class of UI profile.

77

00:05:47.250  -->  00:05:51.190
And the third a class of UI settings.

78

00:05:51.510  -->  00:05:57.220
Now we can write CSSA that targets or selects these unique class names.

79

00:05:57.240  -->  00:06:01.800
Now the whole link is already showing the correct part of the background image.

80

00:06:01.830  -->  00:06:12.180
So let's work on the UI profiled class in our CSSA file create a new rule UI profile and select the

81

00:06:12.270  -->  00:06:15.420
A or linked element within that.

82

00:06:15.660  -->  00:06:20.020
So we're going to use the background position property.

83

00:06:20.310  -->  00:06:25.020
Now if we look at our graphic file we are interested in displaying this portion of it.

84

00:06:25.040  -->  00:06:28.020
This 50 by 50 pixel Square.

85

00:06:28.050  -->  00:06:34.830
So in order to display this portion we can use the background position property and specify that we

86

00:06:34.830  -->  00:06:38.430
want to move down 50 pixels from the top.

87

00:06:38.430  -->  00:06:45.110
Now in an earlier lesson we learned about keywords like top left or bottom right.

88

00:06:45.330  -->  00:06:48.840
But we can also specify two numerical values.

89

00:06:48.930  -->  00:06:54.780
So the first controls the horizontal position and the second value controls the vertical.

90

00:06:54.780  -->  00:06:58.350
Now we know that we want to move 50 pixels down vertically.

91

00:06:58.350  -->  00:07:05.160
If I include a positive value of 50 pixels the web browser will push the background image down so we

92

00:07:05.160  -->  00:07:10.110
will actually see this 50 pixels Square or in other words we'll see nothing.

93

00:07:10.110  -->  00:07:17.010
Now I can illustrate this by making sure that I add the background repeat no repeat property to the

94

00:07:17.000  -->  00:07:19.200
universal link rule.

95

00:07:19.200  -->  00:07:23.300
So if I save and refresh we see that the second link is now empty.

96

00:07:23.340  -->  00:07:26.420
So obviously we don't want to move 50 pixels in this direction.

97

00:07:26.430  -->  00:07:33.480
We want to move 50 pixels in this direction so I can simply make this a negative value negative 50 pixels

98

00:07:33.480  -->  00:07:34.460
vertically.

99

00:07:34.700  -->  00:07:37.770
If we were fresh you can see we're in business.

100

00:07:38.040  -->  00:07:44.660
Next let's create the styles for the third link which is supposed to be the settings gear will create

101

00:07:44.670  -->  00:07:48.650
a new rule UI settings.

102

00:07:49.010  -->  00:07:53.240
Select the element background position.

103

00:07:53.610  -->  00:08:01.090
So now we know that we want to move down a hundred pixels from the top to select this area.

104

00:08:01.760  -->  00:08:07.010
So a background position will be 0 and negative 100 pixels.

105

00:08:07.050  -->  00:08:08.190
There you have it.

106

00:08:08.400  -->  00:08:12.120
Next lets work towards adding the hover effects.

107

00:08:12.460  -->  00:08:18.470
So in our graphic file we can see that to the right of each icon is the version that uses unique colors

108

00:08:19.080  -->  00:08:23.740
and we want that version to display when we hover over one of the particular icons.

109

00:08:23.940  -->  00:08:33.420
So let's begin by writing the CSSA for the home hover icon or create a new rule UI home select the element

110

00:08:33.440  -->  00:08:33.700
.

111

00:08:33.890  -->  00:08:44.940
Use a pseudo selector of hover background position negative 50 pixels horizontal and zero pixels vertically

112

00:08:44.940  -->  00:08:45.850
.

113

00:08:45.960  -->  00:08:51.510
If we refresh and hover over the home icon we see the hunter effect.

114

00:08:51.750  -->  00:08:56.660
Next let's apply that same logic to the profile and settings icons.

115

00:08:56.940  -->  00:09:01.850
So I'm going to adjust this code to sit on a single line just to stay organized.

116

00:09:02.490  -->  00:09:10.440
I can simply copy this line for the profile style paste it and on the duplicate add a pseudo selector

117

00:09:10.500  -->  00:09:11.540
of hover.

118

00:09:12.030  -->  00:09:17.100
And because we copied and pasted this line the vertical positioning is already correct for the profile

119

00:09:17.100  -->  00:09:17.760
icon.

120

00:09:17.940  -->  00:09:21.100
We just need to adjust the horizontal positioning.

121

00:09:21.540  -->  00:09:26.600
Or in other words this style is already selecting this portion of the background image.

122

00:09:26.750  -->  00:09:34.890
So let's simply push it's horizontal positioning 50 pixels to the right so I'll adjust this first value

123

00:09:35.100  -->  00:09:37.890
to negative 50 pixels.

124

00:09:37.880  -->  00:09:44.580
So if I save and refresh and hover over the user or profile icon we see that the hover effect is in

125

00:09:44.580  -->  00:09:45.600
place.

126

00:09:45.650  -->  00:09:51.720
And finally let's create the hover effect rule for the settings icon.

127

00:09:51.720  -->  00:09:54.290
So let's modify this to sit on a single line.

128

00:09:54.510  -->  00:09:58.700
Let's duplicate it via copy and paste adjust the duplicate.

129

00:09:58.710  -->  00:10:04.670
To use the hover pseudo selector on the element and adjust the horizontal positioning of the background

130

00:10:04.740  -->  00:10:07.370
to negative 50 pixels.

131

00:10:07.400  -->  00:10:14.400
If we save and refresh the gear is also using the hover effect which means our CSSA sprites menu is

132

00:10:14.390  -->  00:10:15.470
now complete.

133

00:10:15.780  -->  00:10:17.330
That will bring this lesson to a close.

134

00:10:17.340  -->  00:10:19.860
But first here's a quick review.

135

00:10:19.910  -->  00:10:27.090
We use sprites for small icon based graphics on our web pages because by combining these graphics into

136

00:10:27.090  -->  00:10:30.100
one file it makes our pages load faster.

137

00:10:30.380  -->  00:10:36.660
We learned that the CSSA recipe for sprites is nothing more than assigning a background image and then

138

00:10:36.650  -->  00:10:40.530
using a bit of trickery with the background position property.

139

00:10:40.530  -->  00:10:45.810
So this way we can display different portions of the image for different elements on the page.

140

00:10:46.050  -->  00:10:51.540
And finally I want to talk a bit about the actual graphic file that we saw referenced throughout the

141

00:10:51.540  -->  00:10:52.740
lesson.

142

00:10:52.740  -->  00:10:58.980
I used Photoshop to combine and align the icons perfectly in a 50 pixel grid.

143

00:10:59.040  -->  00:11:03.510
If you don't have access to Adobe Photoshop that's not a problem.

144

00:11:03.600  -->  00:11:11.510
You can use the image editing software named gimp it's freely available for all major platforms and

145

00:11:11.580  -->  00:11:14.800
obviously you do not need to use a 50 pixel grid.

146

00:11:14.900  -->  00:11:20.900
However you want to align your different icons so that you can easily write CSSA to display the correct

147

00:11:20.930  -->  00:11:22.870
portions is fine.

148

00:11:23.280  -->  00:11:28.650
If you need to include icons in your web pages I encourage you to experiment with the sprites method

149

00:11:28.640  -->  00:11:29.290
.

150

00:11:29.340  -->  00:11:32.310
Have fun and I will see you in the next lesson.
