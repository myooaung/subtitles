WEBVTT
1

00:00:00.390  -->  00:00:08.070
In this lesson we will learn how to add an audio file to a web page in front of you is a simple example

2

00:00:08.070  -->  00:00:12.780
page that we've used in previous lessons in the course and you can see that for this lesson we've added

3

00:00:12.780  -->  00:00:19.650
a subheading of music and then a paragraph that reads I play a ukulele and have included a sample recording

4

00:00:19.650  -->  00:00:20.790
on this page.

5

00:00:21.030  -->  00:00:26.610
So our goal for this lesson is to include an audio file right below this text.

6

00:00:26.610  -->  00:00:30.550
We'll play a clip of the ukulele on my desktop.

7

00:00:30.570  -->  00:00:33.540
I have an audio file named ukulele.

8

00:00:33.590  -->  00:00:40.000
MP3 so our goal is to write the necessary code to include that file in our web page.

9

00:00:40.230  -->  00:00:46.830
Let's begin by adding a bit of code underneath this paragraph the code to include audio is very intuitive

10

00:00:46.830  -->  00:00:47.160
.

11

00:00:47.160  -->  00:00:52.530
It's simply audio next within this audio element.

12

00:00:52.560  -->  00:01:00.120
You create another element named source and we'll give this element an attribute of SIRC for source

13

00:01:00.130  -->  00:01:00.190
.

14

00:01:00.210  -->  00:01:06.180
And then we have to include a string that tells the web browser where to point to locate the file.

15

00:01:06.210  -->  00:01:09.790
So let's make sure that we have that audio file in the correct directory.

16

00:01:09.810  -->  00:01:16.030
I'm going to move that ukulele MP3 file into the same folder as our HMO file.

17

00:01:16.080  -->  00:01:20.100
Now within this directory I'll create a folder named audio.

18

00:01:20.280  -->  00:01:24.630
Now let's move the ukulele MP3 file into the audio folder.

19

00:01:24.630  -->  00:01:29.900
So our HMO code for source we'll say audio forward slash.

20

00:01:29.940  -->  00:01:35.040
So this will look inside the audio folder and then we simply type the name of the file so it's Ukulele

21

00:01:36.170  -->  00:01:36.880
.

22

00:01:37.020  -->  00:01:44.360
MP3 we need to include another attribute for this source element and its name is type.

23

00:01:44.430  -->  00:01:48.300
This is where we let the Web Browser know what type of file this is.

24

00:01:48.300  -->  00:01:52.700
So our value is simply audio slash MPEG.

25

00:01:52.740  -->  00:01:59.700
Finally let's add an attribute name of controls to this parent audio element to make sure that all browsers

26

00:01:59.760  -->  00:02:02.760
add controls like pause and play in volume.

27

00:02:02.760  -->  00:02:08.300
Now if we click save and then reload our web browser we can see that here is an audio player.

28

00:02:08.880  -->  00:02:16.280
If I click the play button you can hear ukulele playing.

29

00:02:17.040  -->  00:02:22.290
Now in some ways we've completed our goal we've added an audio clip to a webpage.

30

00:02:22.410  -->  00:02:28.350
However this may work in the most recent version of Mozilla Firefox the web browser that I'm using.

31

00:02:28.470  -->  00:02:33.070
But we need to make sure that this works across all browsers and devices.

32

00:02:33.090  -->  00:02:36.450
So there's a few extra steps we need to take.

33

00:02:36.450  -->  00:02:41.590
Most modern web browsers and devices can play MP3 files.

34

00:02:41.700  -->  00:02:50.970
However certain browsers and devices require a dot ogg file dot O G G on my desktop I have an ukulele

35

00:02:51.020  -->  00:02:52.800
dot Oh file.

36

00:02:52.800  -->  00:02:56.760
Now this is the same exact audio clip as the MP3 file.

37

00:02:56.820  -->  00:03:03.750
It's simply been saved in a different format so let's go ahead and move this file into the audio folder

38

00:03:03.780  -->  00:03:08.310
to sit next to the ukulele MP3 file.

39

00:03:08.550  -->  00:03:17.400
Now in our HTML will create another source element and for the SIRC attribute will say look inside the

40

00:03:17.400  -->  00:03:25.950
audio folder and then pull in the ukulele dot org file and the type attribute for this will have a value

41

00:03:25.950  -->  00:03:27.590
of audio Shlash.

42

00:03:27.660  -->  00:03:28.760
Aw og.

43

00:03:28.890  -->  00:03:35.820
This means that our audio element now has two source elements and web browsers will know to choose the

44

00:03:35.820  -->  00:03:37.510
one that they support.

45

00:03:37.530  -->  00:03:40.480
So if they support MP3 files it'll grab this one.

46

00:03:40.610  -->  00:03:44.780
If the browser supports all good playback it will use this source.

47

00:03:45.060  -->  00:03:51.900
So we have all of our bases covered for modern web browsers and devices but let's include a bit of extra

48

00:03:51.900  -->  00:03:59.190
code to make sure that even old or outdated web browsers can still hear our audio file even though older

49

00:03:59.190  -->  00:04:02.410
web browsers don't support the audio element.

50

00:04:02.460  -->  00:04:09.300
They do support fallback content which means we can include content within the audio element and if

51

00:04:09.300  -->  00:04:14.520
a web browser is too old to be able to load one of these files at all it will still display our fallback

52

00:04:14.520  -->  00:04:17.930
content so we can begin typing that fallback content.

53

00:04:17.940  -->  00:04:19.310
I'm going to create a link.

54

00:04:19.530  -->  00:04:23.100
We remember that the code to create a link or an anchor is simply a.

55

00:04:23.460  -->  00:04:31.330
Now the text that we want users to click on is to go Laili audio recording.

56

00:04:31.440  -->  00:04:38.250
Now on this element we want to give it an attribute of href and this is where we point to the file audio

57

00:04:38.280  -->  00:04:44.990
and we'll use the MP3 file because it's the most common format ukulele MP3.

58

00:04:45.000  -->  00:04:50.630
So with this code in place newer web browsers will still see a player that they can click on.

59

00:04:50.650  -->  00:04:54.900
However let's pretend that I was using an outdated web browser.

60

00:04:54.900  -->  00:05:01.510
I would see simply this link as fallback content so it would look like this.

61

00:05:01.650  -->  00:05:08.670
Users would still see a link that they can click on which plays the audio file.

62

00:05:08.670  -->  00:05:13.860
This means that even though older web browsers may not be able to play the file natively on our Web

63

00:05:13.860  -->  00:05:20.940
page if we simply create a hyperlink to the MP3 file then most browsers no matter how old they are should

64

00:05:20.940  -->  00:05:24.690
be able to play or load the clip in one way or another.

65

00:05:24.750  -->  00:05:31.230
So to review to include an audio file on a web page we use the audio element for newer browsers.

66

00:05:31.230  -->  00:05:35.790
We can include different source elements that point towards our file and they will include a native

67

00:05:35.790  -->  00:05:41.400
player directly on the page for all their web browsers we can include a fallback that simply links to

68

00:05:41.400  -->  00:05:44.090
the file in our next lesson.

69

00:05:44.100  -->  00:05:47.970
We will learn how to add a video file to a web page
