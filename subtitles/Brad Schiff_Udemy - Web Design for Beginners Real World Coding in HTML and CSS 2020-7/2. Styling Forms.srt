1

00:00:00,630  -->  00:00:08,190
In this lesson we will learn how to use C S S to add styling to our HTL forms.

2

00:00:08,550  -->  00:00:09,600
Let's dive right in.

3

00:00:09,600  -->  00:00:12,150
By looking at the finished product.

4

00:00:12,300  -->  00:00:18,240
So on this example page we can see that here is a form we learned in the H TMLC section of this course

5

00:00:18,300  -->  00:00:22,500
that forms are how we can receive input from users.

6

00:00:22,500  -->  00:00:28,890
So for example a visitor of the Web site could click here to enter their email address test that test

7

00:00:28,890  -->  00:00:30,100
dot com.

8

00:00:30,120  -->  00:00:32,480
This field receives their password.

9

00:00:32,550  -->  00:00:37,120
Perhaps they want to choose what screen they are initially presented with when they log in.

10

00:00:37,380  -->  00:00:40,310
And then this button submits their input.

11

00:00:40,320  -->  00:00:44,280
Now we are not going to actually submit the form data in this lesson.

12

00:00:44,280  -->  00:00:49,940
This is not a course on HP or Ruby on Rails or server side javascript.

13

00:00:49,980  -->  00:00:57,720
This is of course an HMO and C Ss So this lesson is simply about making forms look pretty.

14

00:00:57,720  -->  00:01:03,300
Now we've been looking at an example of a form that is styled and we all know that looking at a finished

15

00:01:03,300  -->  00:01:07,080
product isn't great educational but I wanted this to be on the same page.

16

00:01:07,080  -->  00:01:13,170
So now let's switch over to the tab that we will be working on together and let out a collective sigh

17

00:01:13,170  -->  00:01:20,230
of disappointment that this sorry state of affairs is how web browsers render forms by default.

18

00:01:20,550  -->  00:01:23,090
I think most people will agree that hands down.

19

00:01:23,100  -->  00:01:29,270
This is pretty year and feels easier to use than this but that's OK.

20

00:01:29,340  -->  00:01:31,100
That's why web designers exist.

21

00:01:31,110  -->  00:01:37,290
It's our job to whip this form into shape so that it looks like something people will actually want

22

00:01:37,290  -->  00:01:38,720
to interact with.

23

00:01:38,970  -->  00:01:43,410
And that's exactly what we're going to do in this lesson we're going to write all of the CSSA code together

24

00:01:43,430  -->  00:01:43,600
.

25

00:01:43,770  -->  00:01:45,000
Let's get started.

26

00:01:45,360  -->  00:01:45,900
All right.

27

00:01:45,900  -->  00:01:52,640
I want to begin by making this field and this field take up the full available with or in other words

28

00:01:52,650  -->  00:01:55,430
I want each field to sit on its own row.

29

00:01:55,710  -->  00:02:01,390
Now before we write the CSSA to select this element let's take a quick look at our age TNL.

30

00:02:01,830  -->  00:02:06,430
So that first field uses a type of e-mail.

31

00:02:06,450  -->  00:02:13,000
So now let's try to select this element in our CSA as a create a new comment to stay organized form

32

00:02:13,000  -->  00:02:17,610
styles so we can see that that element is an input.

33

00:02:17,700  -->  00:02:24,300
So I'll begin with a type selector input but we don't want to select all inputs on the page because

34

00:02:24,300  -->  00:02:28,080
for example this checkbox is an input.

35

00:02:28,410  -->  00:02:30,830
So we need to make our selector a bit more specific.

36

00:02:30,840  -->  00:02:39,120
We only want to select inputs that use a type of email and now we can string together declarations and

37

00:02:39,120  -->  00:02:40,290
create our styles.

38

00:02:40,290  -->  00:02:46,920
So I want it to take up the full available with 100 percent to keep things as predictable as possible

39

00:02:46,920  -->  00:02:46,950
.

40

00:02:46,950  -->  00:02:54,090
I will also set display a block and because we set a whit of 100 percent I also want to set box sizing

41

00:02:54,120  -->  00:02:55,650
to use border box.

42

00:02:55,650  -->  00:03:03,880
So this way we can specify horizontal padding without our field becoming wider than 100 percent.

43

00:03:03,960  -->  00:03:09,970
So Box sizing border box simply changes the way the browser calculates overall width values.

44

00:03:10,200  -->  00:03:15,550
So this code will play together very nicely and very quickly let's also set a baseline height.

45

00:03:15,750  -->  00:03:19,370
Let's try 40 pixels.

46

00:03:19,380  -->  00:03:20,550
We are making progress.

47

00:03:20,550  -->  00:03:23,010
This field now sits on its own row.

48

00:03:23,010  -->  00:03:28,490
Next let's make sure that the styles that we just wrote also get applied to the password field.

49

00:03:28,650  -->  00:03:31,650
So all we need to do is adjust our selector for this rule.

50

00:03:31,660  -->  00:03:34,260
I'm going to copy this at a comma.

51

00:03:34,380  -->  00:03:40,170
Paste the code back in and change email to password.

52

00:03:40,170  -->  00:03:44,980
Now for this particular form those are the only types of inputs that I will need to select.

53

00:03:45,150  -->  00:03:51,090
But in most projects you will probably want to be sure to also include input types of text number and

54

00:03:51,090  -->  00:03:57,300
tell for telephone the alternative to using these attribute type selectors would be to simply create

55

00:03:57,330  -->  00:03:59,230
a reusable class.

56

00:03:59,370  -->  00:04:05,120
For example something like standard field and then adding that class to every input that you wanted

57

00:04:05,120  -->  00:04:05,960
to style.

58

00:04:06,150  -->  00:04:12,620
However these attribute type selectors allow us to not dirty up our HMO with unnecessary classes.

59

00:04:12,660  -->  00:04:15,270
So this is my preferred way of doing things.

60

00:04:15,390  -->  00:04:19,740
Next let's style the actual form parent element itself.

61

00:04:19,770  -->  00:04:22,900
So let's give it a background color and a bit of padding.

62

00:04:23,670  -->  00:04:27,730
So in our CSSA we want to select the parent form element.

63

00:04:27,840  -->  00:04:33,280
Let's give it a background color of E.C which is a light gray.

64

00:04:33,660  -->  00:04:39,030
Let's give it 30 pixels vertical padding and 40 pixels horizontal padding.

65

00:04:39,750  -->  00:04:40,680
Excellent.

66

00:04:40,680  -->  00:04:47,820
Next let's hide these labels for the email and password fields because we are using the placeholder

67

00:04:47,820  -->  00:04:49,580
attribute on those two fields.

68

00:04:49,590  -->  00:04:53,100
We can see that before we even enter any text in the field.

69

00:04:53,100  -->  00:04:58,330
We are given a hint by the placeholder text so I know that I'm supposed to enter my email in this field

70

00:04:58,340  -->  00:04:58,540
.

71

00:04:59,750  -->  00:05:03,190
Which makes the traditional label element a bit redundant.

72

00:05:03,470  -->  00:05:08,590
However we do not want to simply go into our age T.M. out and delete the label element.

73

00:05:08,780  -->  00:05:14,110
We want it here for accessibility reasons and for fallback reasons and all sorts of reasons.

74

00:05:14,120  -->  00:05:17,740
So what we're going to do instead is add a class to it.

75

00:05:17,840  -->  00:05:22,740
I will use a name of hidden label you could use any class name that you would like.

76

00:05:22,740  -->  00:05:28,980
Now let's construct a class or a rule in R C Ss for that name hidden label.

77

00:05:29,000  -->  00:05:34,760
Now you want to be careful you don't want to simply say display none because certain screen reading

78

00:05:34,760  -->  00:05:40,460
software will interpret display none as oh I will just ignore this content completely.

79

00:05:40,460  -->  00:05:41,450
So we don't want this.

80

00:05:41,450  -->  00:05:48,830
Instead we can use position absolute to pull the element out of the natural flow of the page and then

81

00:05:48,830  -->  00:05:58,790
set its height to zero with zero set its overflow to hidden and even set its visibility to hidden.

82

00:05:58,950  -->  00:06:05,480
So this way the label is hidden visually for most traditional browsers and devices but screen reading

83

00:06:05,480  -->  00:06:11,440
devices will still be able to access the label and successfully associate it with this field.

84

00:06:11,480  -->  00:06:12,390
So we're in good shape.

85

00:06:12,410  -->  00:06:16,030
Now we just need to add that class to the password field.

86

00:06:16,040  -->  00:06:18,520
So here is the label for the password field.

87

00:06:18,950  -->  00:06:24,680
Let's give it a class of hidden label.

88

00:06:24,680  -->  00:06:25,490
Excellent.

89

00:06:25,490  -->  00:06:26,510
Now let's resume.

90

00:06:26,510  -->  00:06:28,770
Fine tuning these two fields.

91

00:06:28,910  -->  00:06:34,220
If we look closely we can see that these fields are using a different font family than the rest of our

92

00:06:34,220  -->  00:06:34,930
page.

93

00:06:35,060  -->  00:06:36,950
And this raises an important point.

94

00:06:36,980  -->  00:06:44,150
The font that we set on our h TNL or body element that we expect to trickle down to the entire page

95

00:06:44,480  -->  00:06:50,980
does not get trickled down to form elements so we need to specifically set that too.

96

00:06:51,040  -->  00:06:57,720
In this room where we are selecting the inputs we need to re specify the font that we want to use of

97

00:06:57,720  -->  00:07:05,480
font family I'm using to home with a fallback to the system sans serif and lets also set the size to

98

00:07:05,480  -->  00:07:09,980
be normal so font size 100 percent perfect.

99

00:07:09,980  -->  00:07:16,890
Now let's create a bit of vertical space between these two fields so we can apply margin bottom.

100

00:07:16,940  -->  00:07:19,670
Try 15 pixels.

101

00:07:19,670  -->  00:07:20,140
Great.

102

00:07:20,150  -->  00:07:28,010
Now let's override the browser default border that is getting applied to these fields border one pixel

103

00:07:28,040  -->  00:07:29,000
solid.

104

00:07:29,270  -->  00:07:34,030
I always use a light gray CD.

105

00:07:34,250  -->  00:07:37,180
It is a subtle border but it's there if you look closely.

106

00:07:37,250  -->  00:07:42,860
Something to keep in mind is that we need to give users visual feedback letting them know which field

107

00:07:42,860  -->  00:07:44,670
they are currently working with.

108

00:07:44,750  -->  00:07:50,460
So lets you CSSA to add a green border around the field that is currently being used.

109

00:07:50,690  -->  00:07:53,100
And lets also add an inline shadow.

110

00:07:53,330  -->  00:07:59,090
We will need to create a new rule but I'm going to use these selectors as a baseline so I'm going to

111

00:07:59,090  -->  00:08:00,050
copy.

112

00:08:00,440  -->  00:08:01,570
Let's create a new rule.

113

00:08:01,610  -->  00:08:04,030
Paste those in.

114

00:08:04,130  -->  00:08:10,100
Now we've already selected these inputs in their default state but now we want to select them in their

115

00:08:10,310  -->  00:08:16,280
focussed state so only when the users currently focusing on one of these inputs.

116

00:08:16,430  -->  00:08:23,100
Do we want these new styles that we're going to write in just a second to be applied.

117

00:08:23,100  -->  00:08:31,250
All right so we want to change the border to use a green color paste that in and we also wanted to add

118

00:08:31,340  -->  00:08:35,520
an inline shadow so we can use the box Shatto property.

119

00:08:35,660  -->  00:08:38,080
Include the inset keyword.

120

00:08:38,120  -->  00:08:44,150
I want the shadow to be fairly small and subtle so two pixels horizontal and vertical offset the two

121

00:08:44,150  -->  00:08:45,610
pixel blur.

122

00:08:46,310  -->  00:08:49,840
Let's use a very transparent black value.

123

00:08:50,240  -->  00:08:55,850
So by default our fields will look like this but when the user clicks or tabs to one you can see the

124

00:08:55,850  -->  00:09:03,300
green border and the subtle shadow next let's style the sign in button.

125

00:09:03,650  -->  00:09:09,140
We will circle back around to styling this select box in just a moment but for now let's give the sign

126

00:09:09,140  -->  00:09:10,820
in button some attention.

127

00:09:10,820  -->  00:09:16,300
So in our HMO we can see that the sign in button has a type of submit.

128

00:09:16,340  -->  00:09:23,500
So in our CSSA let's create a new rule input with a type of submit.

129

00:09:23,510  -->  00:09:26,280
So that's how we can select the sign in button.

130

00:09:26,750  -->  00:09:32,750
Let's begin by making the button take up the full available with so some of these styles will be similar

131

00:09:32,750  -->  00:09:36,090
to what we've already written for the first two fields.

132

00:09:36,350  -->  00:09:41,800
But the exact combination isn't identical so it does warrant a new rule.

133

00:09:41,870  -->  00:09:44,050
So with 100 percent let's go ahead and set.

134

00:09:44,060  -->  00:09:46,390
Display to block use.

135

00:09:46,570  -->  00:09:49,080
Box sizing border box.

136

00:09:49,310  -->  00:09:53,970
Let's use a green background color paste in hexadecimal color code.

137

00:09:54,110  -->  00:09:55,360
Let's make that text.

138

00:09:55,370  -->  00:09:57,160
Use a color of white.

139

00:09:57,380  -->  00:09:59,650
So let's see how that looks so far.

140

00:10:00,170  -->  00:10:05,480
So immediately see that I want to add a bit of vertical padding and also let's add a custom border color

141

00:10:07,130  -->  00:10:09,820
padding 10 pixels vertically.

142

00:10:11,430  -->  00:10:18,960
Border one pixel solid and I'll use a slightly darker green I think it would look nice if the button

143

00:10:18,960  -->  00:10:21,060
had slightly rounded corners.

144

00:10:21,060  -->  00:10:22,100
So let's try.

145

00:10:22,100  -->  00:10:25,390
Border radius 3 pixels.

146

00:10:26,190  -->  00:10:27,960
It's subtle but I like it.

147

00:10:28,140  -->  00:10:33,570
Also we see again that the font for the button is not using the default font that we've set for the

148

00:10:33,570  -->  00:10:34,220
page.

149

00:10:34,350  -->  00:10:41,340
So let's go adjust this rule that we set up earlier where we added font family in font size to all these

150

00:10:41,340  -->  00:10:43,350
different types of selectors.

151

00:10:43,380  -->  00:10:51,900
Let's actually cut those two lines and create a completely universal type selector for simply all inputs

152

00:10:51,900  -->  00:10:52,590
.

153

00:10:52,590  -->  00:10:58,500
So that way these styles will be applied to all of these types of inputs and inputs that have a type

154

00:10:59,400  -->  00:11:03,240
of submit much better.

155

00:11:03,240  -->  00:11:10,030
Next let's add a bit of margin bottom to this button and also create hover or focus styles for it.

156

00:11:10,470  -->  00:11:14,710
Let's try Marjan bottom 10 pixels.

157

00:11:14,940  -->  00:11:21,810
And also when someone hovers over the submit button or gives it focus by cycling to it with the tab

158

00:11:21,810  -->  00:11:24,540
button on their keyboard we want to style it differently.

159

00:11:24,690  -->  00:11:29,570
So input type submit when it's hovered.

160

00:11:29,610  -->  00:11:37,320
And also when it has defocus we want to style it differently so I'm just going to paste in rules because

161

00:11:37,320  -->  00:11:39,960
I don't want this video to become too long.

162

00:11:40,650  -->  00:11:47,010
So now when we hover over the button you can see that it changes or if we start here and then use your

163

00:11:47,010  -->  00:11:53,790
keyboard to tab you can see the styles change as well and all that I pasted in there was simply a new

164

00:11:53,790  -->  00:11:56,030
border color and a new background color.

165

00:11:56,070  -->  00:11:57,600
So not rocket science.

166

00:11:57,600  -->  00:12:02,850
Now let's circle back to the dreaded select element.

167

00:12:02,880  -->  00:12:09,030
The reason I used the word dreaded in this case is because we don't always have complete 100 percent

168

00:12:09,030  -->  00:12:13,110
control over how the select element is styled.

169

00:12:13,500  -->  00:12:15,750
But let's begin by giving it our best shot.

170

00:12:15,750  -->  00:12:26,400
So in our CSSA let's tack on the select element at the end of our baseline styles for inputs.

171

00:12:26,400  -->  00:12:27,360
Not bad.

172

00:12:27,390  -->  00:12:36,300
Let's also be sure to include select in this rule that applies baseline font settings even better.

173

00:12:36,420  -->  00:12:41,430
Now it seems that the select element is playing along quite nicely and you might be wondering why I

174

00:12:41,430  -->  00:12:42,920
used the word dreaded.

175

00:12:43,260  -->  00:12:47,670
Well we've only seen this page rendered in Mozilla Firefox as what we're currently viewing.

176

00:12:47,880  -->  00:12:51,540
Let me pull this page up in Google Chrome.

177

00:12:51,540  -->  00:12:58,700
So now we can see that the select element has rounded corners and even if we specifically select the

178

00:12:58,710  -->  00:13:10,350
select element and say web ticket border radius zero and simply border radius zero Chrome will still

179

00:13:10,350  -->  00:13:12,380
not remove the rounded corners.

180

00:13:12,540  -->  00:13:15,950
And this is where things begin to get a bit crazy.

181

00:13:15,960  -->  00:13:20,670
So at this point if you were completely determined to remove these darned rounded corners and Google

182

00:13:20,700  -->  00:13:26,310
Chrome you could go perform a web search for How do I remove rounded corners and chrome on the select

183

00:13:26,310  -->  00:13:27,120
element.

184

00:13:27,120  -->  00:13:33,870
And you might discover that you can use a property named Web Kit appearance and provided a value of

185

00:13:33,870  -->  00:13:37,420
None and we can see that that did the trick.

186

00:13:37,860  -->  00:13:43,110
But I would encourage you to stop and look in the mirror and ask yourself what are you doing.

187

00:13:43,110  -->  00:13:45,870
Do you really want to open this can of worms.

188

00:13:46,080  -->  00:13:52,500
Do you really want to try and override the default behavior of every operating system and web browser

189

00:13:52,500  -->  00:14:00,120
combination on the planet meaning certain form elements like the select element for example will appear

190

00:14:00,120  -->  00:14:04,900
differently on Chrome for Windows than they may on Chrome for Mac.

191

00:14:05,260  -->  00:14:12,450
And we also have opera Internet Explorer Chrome for Android a whole slew of other mobile browsers and

192

00:14:12,480  -->  00:14:14,450
other mobile operating systems.

193

00:14:14,460  -->  00:14:19,080
So every combo is going to have slightly different looking form inputs.

194

00:14:19,260  -->  00:14:24,810
Some of them have their own proprietary properties that you will need to override and it can get very

195

00:14:24,810  -->  00:14:28,740
messy and very time consuming very quickly.

196

00:14:28,950  -->  00:14:34,350
Now for certain projects you don't need to worry so much about the appearance of your forms.

197

00:14:34,580  -->  00:14:40,380
However certain projects have corporate agendas or corporate branding requirements and you will need

198

00:14:40,380  -->  00:14:44,840
to heavily focus on the appearance of forms in the description for this lecture.

199

00:14:44,840  -->  00:14:51,960
You will find links to popular pre-existing CSSA bundles that you can copy and paste into your project

200

00:14:52,380  -->  00:14:57,450
which will take care of a lot of the cross-browser heavy lifting work for you.

201

00:14:57,450  -->  00:15:03,010
Having said that let's end this lecture with a few final customisations which we can make quite easily

202

00:15:03,020  -->  00:15:03,310
.

203

00:15:03,720  -->  00:15:09,090
So in Firefox you will remember that when we click on one of these fields it lights up with a green

204

00:15:09,090  -->  00:15:12,140
border and we created that style manually.

205

00:15:12,150  -->  00:15:17,760
However over in Google Chrome when we click on a field and this happens in other browsers as well we

206

00:15:17,760  -->  00:15:23,840
can see a blue outline or a blue glow and you will often want to remove this.

207

00:15:23,940  -->  00:15:33,480
So to do that all we need to do in the room for our baseline inputs simply add a declaration outline

208

00:15:34,400  -->  00:15:35,520
none.

209

00:15:35,560  -->  00:15:41,790
So now in Crome the email and password fields do not have the outline neither does the select but the

210

00:15:41,790  -->  00:15:43,490
submit button still does.

211

00:15:43,650  -->  00:15:49,980
So be sure to include outline none there as well.

212

00:15:50,010  -->  00:15:50,940
Perfect.

213

00:15:51,360  -->  00:15:57,900
And finally let's imagine that we want to adjust the text that reads stay signed in to be smaller and

214

00:15:57,900  -->  00:16:00,180
perhaps use a gray color.

215

00:16:00,210  -->  00:16:09,420
Now in our HTL now we can see that that text lives in a span that has a class of checkbox text and I

216

00:16:09,420  -->  00:16:14,820
want to take this opportunity to remind you that you can use whatever markup you need to within your

217

00:16:14,820  -->  00:16:15,690
form.

218

00:16:15,690  -->  00:16:21,630
Now obviously you should try to keep your age TNL as clean and as semantic as possible but if you need

219

00:16:21,630  -->  00:16:26,150
a bit of extra style here in there feel free to use the span element.

220

00:16:26,370  -->  00:16:31,440
And even though we didn't cover it in this lesson if you needed to create different columns within your

221

00:16:31,440  -->  00:16:39,960
form Feel free to use divs to back to our specific example you want to target this text.

222

00:16:40,140  -->  00:16:49,280
So let's just create a new rule check box text font size 85 percent color.

223

00:16:49,530  -->  00:16:54,150
Let's try a medium gray that looks a lot better.

224

00:16:54,660  -->  00:16:58,790
And that will bring this lesson on styling forms to close.

225

00:16:58,950  -->  00:17:04,440
Again if you need a bit more horsepower in wrangling in some of those cross-browser differences be sure

226

00:17:04,440  -->  00:17:07,000
to check out the description for this lesson.

227

00:17:07,110  -->  00:17:12,530
I will include links to popular CSSA bundles that you can plug into your projects.

228

00:17:12,600  -->  00:17:19,450
I encourage you to experiment with your own form designs have fun and I will see you in the next lesson

229

00:17:19,460  -->  00:17:19,720
.
