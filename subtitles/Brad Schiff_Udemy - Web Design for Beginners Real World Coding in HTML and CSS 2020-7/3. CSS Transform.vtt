WEBVTT
1

00:00:00.360  -->  00:00:08.280
In this lesson we will learn about the CSA as property named transform the transform property is aptly

2

00:00:08.280  -->  00:00:08.910
named.

3

00:00:08.910  -->  00:00:15.090
It lets us transform and manipulate the appearance of elements in unique ways.

4

00:00:15.090  -->  00:00:20.310
Throughout this lesson we will learn how to transform elements in four primary ways.

5

00:00:20.310  -->  00:00:23.520
Number one we can rotate elements.

6

00:00:23.520  -->  00:00:28.050
Number two we can change the scale or size of elements.

7

00:00:28.050  -->  00:00:30.890
Number three we can skew an element.

8

00:00:31.110  -->  00:00:37.410
So that means taking a rectangle and making it become a parallelogram and number four we can change

9

00:00:37.410  -->  00:00:39.440
the positioning of element.

10

00:00:39.750  -->  00:00:41.360
Let's begin with number 1.

11

00:00:41.490  -->  00:00:42.760
Rotti.

12

00:00:42.810  -->  00:00:47.940
Here we are in the web browser and we are viewing an example page that I've set up.

13

00:00:47.940  -->  00:00:49.850
We can see there are two boxes.

14

00:00:49.890  -->  00:00:50.670
This one is titled.

15

00:00:50.670  -->  00:00:51.650
Example A.

16

00:00:51.720  -->  00:00:52.500
And this one reads.

17

00:00:52.500  -->  00:00:53.820
Example B.

18

00:00:53.910  -->  00:00:59.490
Now in this lesson we are going to use the transform property to manipulate the appearance of this first

19

00:00:59.490  -->  00:01:00.110
box.

20

00:01:00.120  -->  00:01:00.780
The one that reads.

21

00:01:00.780  -->  00:01:01.780
Example.

22

00:01:02.190  -->  00:01:03.640
In our stylesheet.

23

00:01:03.840  -->  00:01:10.150
Here's the rule for the example a box so we can begin adding new declarations here to affect the box

24

00:01:10.650  -->  00:01:14.100
and our first goal will be to rotate the element.

25

00:01:14.430  -->  00:01:20.170
So inertia SS or create a new declaration that begins with transform.

26

00:01:20.180  -->  00:01:24.760
Now we wanted to rotate the box so I will use the rotate function.

27

00:01:25.020  -->  00:01:29.390
And let's see if we want to rotate it 25 degrees.

28

00:01:30.120  -->  00:01:37.620
We save and refresh we can see the boxes rotated the rotate function will rotate the content in a clockwise

29

00:01:37.620  -->  00:01:38.580
fashion.

30

00:01:38.580  -->  00:01:46.470
So if we increase this from 25 degrees to 90 degrees you can see the content has been rotated clockwise

31

00:01:46.800  -->  00:01:49.150
a clean 90 degrees.

32

00:01:49.170  -->  00:01:56.510
Now obviously there are 360 degrees in a full rotation so everything is relative to that figure.

33

00:01:56.580  -->  00:02:03.470
So if we placed a value of 360 within the function it will appear as if nothing is changed.

34

00:02:03.480  -->  00:02:07.380
But really the image has rotated fully and is right back where it would start.

35

00:02:07.380  -->  00:02:10.870
Originally the function can also receive negative values.

36

00:02:10.920  -->  00:02:15.000
So for example if we say 15 degrees it rotates clockwise.

37

00:02:15.270  -->  00:02:22.550
But if we say naked of 15 degrees it will rotate counterclockwise 15 degrees.

38

00:02:22.590  -->  00:02:23.760
I think you get the point.

39

00:02:23.910  -->  00:02:25.850
So that is the rotate function.

40

00:02:25.890  -->  00:02:27.200
In a nutshell.

41

00:02:27.390  -->  00:02:34.640
Moving on let's discuss transforms ability to adjust the scale or size of elements.

42

00:02:34.740  -->  00:02:39.870
So just for the time being if we remove this line of code and refresh we can see our content is back

43

00:02:39.870  -->  00:02:40.920
to normal.

44

00:02:40.920  -->  00:02:48.330
Now let's see we want to adjust the size or scale transform can use the scaled function and the value

45

00:02:48.330  -->  00:02:51.380
that we it does not need a unit of measurement.

46

00:02:51.450  -->  00:02:55.230
So we're not going to enter a number and then P X for pixels.

47

00:02:55.260  -->  00:02:56.990
We're entering a multiplier.

48

00:02:57.090  -->  00:03:00.210
So if I say 1.3.

49

00:03:01.350  -->  00:03:07.580
The content grows by a scale that is 1.3 times larger than the original content.

50

00:03:07.590  -->  00:03:13.060
So for example to double the size of the content we can say scale 2.

51

00:03:13.410  -->  00:03:19.780
Or to cut the content in half in terms of size we could say point five.

52

00:03:19.800  -->  00:03:27.000
Now the scale function is an excellent segue into a very important side note and that is that the amount

53

00:03:27.000  -->  00:03:34.170
of space that an element occupied within the natural flow of the page prior to the transformation is

54

00:03:34.170  -->  00:03:39.240
the exact same amount that it will occupy after the transformation.

55

00:03:39.240  -->  00:03:46.500
So for example if we remove this transform scale line you can see that the example a box reverts back

56

00:03:46.500  -->  00:03:49.100
to its normal natural state.

57

00:03:49.350  -->  00:03:56.230
And because the box has a bottom margin of 30 pixels This is where the example B box sits.

58

00:03:56.610  -->  00:04:05.280
But if we increase the size of the example a box using transform scale to 1.5.

59

00:04:05.280  -->  00:04:09.790
Notice that the example B box does not move down to accommodate the signs.

60

00:04:09.790  -->  00:04:11.330
Change the example.

61

00:04:11.340  -->  00:04:18.270
A box is simply overlapping the example B box as far as the rest of the page is concerned.

62

00:04:18.450  -->  00:04:22.030
The example a box is still only this large.

63

00:04:22.380  -->  00:04:28.830
So when we use the transform property we are quite literally only manipulating that particular element

64

00:04:29.250  -->  00:04:35.670
independently of the rest of the page with that important side note taken care of let's move on from

65

00:04:35.670  -->  00:04:42.490
scale and begin to discuss skew skew allows us to tilt an element.

66

00:04:42.570  -->  00:04:46.660
So you can imagine a rectangle becoming a parallelogram.

67

00:04:46.710  -->  00:04:52.930
So in our code let's remove the scale line so our content is back to its natural state.

68

00:04:53.220  -->  00:05:00.760
And let's attempt to skew the content transform skew x.

69

00:05:00.950  -->  00:05:07.000
So we're going to skew it horizontally and let's say 15 degrees.

70

00:05:07.740  -->  00:05:15.540
If we wanted a more exaggerated effect we could increase it to 25 degrees and if we wanted to skew it

71

00:05:15.570  -->  00:05:18.510
in the other direction we could provide a negative value

72

00:05:21.360  -->  00:05:23.920
so that's skewing an element horizontally.

73

00:05:24.060  -->  00:05:33.300
We used skew X if we wanted to skew it vertically we can say skew Y and if we wanted to skew an element

74

00:05:33.360  -->  00:05:44.940
both horizontally and vertically can simply include a space skew x 15 degrees and that is skew in a

75

00:05:44.940  -->  00:05:46.140
nutshell.

76

00:05:46.140  -->  00:05:54.810
Now we saw how easy it was to include both skew Y and skew X within a single transform declaration.

77

00:05:54.810  -->  00:05:57.400
And this segues nicely into a new topic.

78

00:05:57.450  -->  00:06:03.000
This is the exact syntax we can use to combine the different transform functions that we've learned

79

00:06:03.000  -->  00:06:03.610
about.

80

00:06:03.840  -->  00:06:10.050
So let's remove this line completely for just a moment and let's imagine that we want to both rotate

81

00:06:10.440  -->  00:06:14.150
example and increase its scale.

82

00:06:14.200  -->  00:06:27.180
So in a single transform declaration we can say rotate 20 degrees space scale 1.5.

83

00:06:27.180  -->  00:06:28.860
So this is quite powerful.

84

00:06:28.860  -->  00:06:35.370
You can use your imagination to concoct different recipes which use different combinations of the transform

85

00:06:35.370  -->  00:06:36.530
functions.

86

00:06:36.840  -->  00:06:40.740
So back to the lesson overview we've learned about rotate.

87

00:06:40.740  -->  00:06:42.280
We've covered scale.

88

00:06:42.420  -->  00:06:44.910
We've seen skew in action.

89

00:06:45.150  -->  00:06:50.960
The final topic is using the transform property to control the positioning of content.

90

00:06:51.090  -->  00:06:59.100
The first component of adjusting the positioning of content comes in the form of a property named transform

91

00:06:59.580  -->  00:07:01.020
origin.

92

00:07:01.020  -->  00:07:06.240
Now before we delve into this new property let's first simplify our transform example.

93

00:07:06.250  -->  00:07:08.890
I'm going to remove the Rotti.

94

00:07:09.780  -->  00:07:15.970
So the only effect that's taking place on the example a box is that we've multiplied the scale by 1.5

95

00:07:17.040  -->  00:07:23.220
and you'll notice that it appears as if the content has expanded in all four directions or in other

96

00:07:23.220  -->  00:07:29.730
words it's as if it's used as original center as its frame of reference or pivot point or transform

97

00:07:29.730  -->  00:07:30.750
origin.

98

00:07:30.750  -->  00:07:37.710
So what if instead we wanted the content to use its original top left corner and grow out only in this

99

00:07:37.710  -->  00:07:38.910
direction.

100

00:07:39.030  -->  00:07:42.350
That is where the transform origin property comes into play.

101

00:07:42.690  -->  00:07:47.950
So if we're looking for the top left corner to be our pivot point you can say 00.

102

00:07:49.140  -->  00:07:58.230
Let's review the syntax that we just used these two values represent the horizontal and vertical positioning

103

00:07:58.320  -->  00:08:05.700
of our point of origin or pivot point for the transform in a way you can think of these as the longitude

104

00:08:05.700  -->  00:08:08.980
and latitude for point of origin.

105

00:08:09.030  -->  00:08:15.020
So we used 0 0 to specify the top left corner of the original content.

106

00:08:15.360  -->  00:08:21.180
By default the browser will use 50 percent 50 percent.

107

00:08:21.540  -->  00:08:22.830
So this should look familiar.

108

00:08:22.830  -->  00:08:26.600
That is the exact way that the browser will position the transform.

109

00:08:26.640  -->  00:08:30.200
If we have no code at all for the point of origin.

110

00:08:30.300  -->  00:08:32.490
Now just to make sure that this system is clear.

111

00:08:32.670  -->  00:08:37.560
Let's imagine that we wanted the point of origin or the pivot point to be the top right corner of the

112

00:08:37.560  -->  00:08:39.070
original content.

113

00:08:39.120  -->  00:08:46.500
So we wanted the content to grow in this direction so horizontally we would want to travel the full

114

00:08:46.500  -->  00:08:51.590
distance 100 percent and vertically we wouldn't need to travel at all.

115

00:08:51.610  -->  00:08:54.190
We would just stay at the very top.

116

00:08:55.380  -->  00:08:56.290
Excellent.

117

00:08:56.700  -->  00:09:03.800
So transform origin is the first transform related way of controlling the positioning of content.

118

00:09:04.020  -->  00:09:06.170
Let's move on to the second component.

119

00:09:06.210  -->  00:09:08.020
It's a bit simpler to understand.

120

00:09:08.190  -->  00:09:13.090
So I'm going to remove both of these lines of code so we're starting back from square one.

121

00:09:13.590  -->  00:09:20.910
Let's imagine that we wanted this example a box to sit 20 pixels lower on the page than it does naturally

122

00:09:21.660  -->  00:09:24.770
but we don't want the rest of the page to react accordingly.

123

00:09:24.840  -->  00:09:28.920
So we don't want example B to also be pushed down 20 pixels.

124

00:09:29.040  -->  00:09:35.310
We want to affect this example a box independently from the rest of the page.

125

00:09:35.490  -->  00:09:42.840
We can use the transform property and use a function named translate y.

126

00:09:43.020  -->  00:09:49.800
So I will provide this function with a value of 20 pixels and we can see that our box moved down 20

127

00:09:49.800  -->  00:09:53.040
pixels and the rest of the page did not react.

128

00:09:53.040  -->  00:10:00.530
So even if we increase this value to 50 pixels it will simply overlap the content below it.

129

00:10:00.600  -->  00:10:03.990
The content below it will not adapt and be pushed down as well.

130

00:10:04.050  -->  00:10:10.710
So that was an example of translate why it allows us to move down the y access so vertically if we wanted

131

00:10:10.710  -->  00:10:16.850
to move to the right we can use a function named translate x.

132

00:10:16.940  -->  00:10:22.760
So if I specify 100 pixels can see we've moved to the right 100 pixels.

133

00:10:22.800  -->  00:10:29.490
Now in instances where you want to move both vertically and horizontally we can combine these into a

134

00:10:29.490  -->  00:10:31.350
single function simply named.

135

00:10:31.350  -->  00:10:39.020
Translate will provide the horizontal value first and the vertical value second.

136

00:10:39.030  -->  00:10:40.810
And we have the exact same effect.

137

00:10:41.160  -->  00:10:44.640
Notice that we did include a comma after the first value.

138

00:10:44.640  -->  00:10:46.830
So that is the translate function.

139

00:10:46.830  -->  00:10:47.960
In a nutshell.

140

00:10:48.000  -->  00:10:54.660
Now you may be scratching your head and wondering why would we use transform translate when we can simply

141

00:10:54.660  -->  00:11:04.920
say position relative and then use the top and left properties to create the exact same effect.

142

00:11:04.980  -->  00:11:09.930
That is an excellent question and there's no way for me to answer it without revealing what we're going

143

00:11:09.930  -->  00:11:12.350
to be covering in our next lesson.

144

00:11:12.360  -->  00:11:18.510
It makes sense to use position relative in tandem with top left or bottom right properties for layout

145

00:11:18.510  -->  00:11:19.790
purposes.

146

00:11:19.800  -->  00:11:25.410
Now as we will learn in our next lesson it makes sense to use transform translate when we are trying

147

00:11:25.410  -->  00:11:31.880
to animate or transition content from one position to another in a smooth fashion.

148

00:11:32.160  -->  00:11:34.070
Yes you heard that correctly.

149

00:11:34.140  -->  00:11:38.770
We can use SS to animate our content for the time being.

150

00:11:38.790  -->  00:11:44.640
Just know that the translate function is hardware accelerated which means when it comes time in the

151

00:11:44.640  -->  00:11:51.180
next lesson to animate content from one position to the next the animation will be silky smooth if we

152

00:11:51.180  -->  00:11:52.340
use translate.

153

00:11:52.650  -->  00:11:58.300
Whereas it might be a bit jittery if we tried to animate the top or left property.

154

00:11:58.350  -->  00:12:03.480
Now in the context of this lesson we're getting way ahead of ourselves and I don't want you to get confused

155

00:12:03.480  -->  00:12:05.970
worrying about animations.

156

00:12:05.970  -->  00:12:10.350
I simply wanted you to understand why the translate function is useful.

157

00:12:10.620  -->  00:12:14.100
So to close out this particular lesson Here's a quick review.

158

00:12:14.340  -->  00:12:21.060
We learned that we can use the transform property to manipulate content and we reviewed rotate scale

159

00:12:21.420  -->  00:12:28.470
skew translate and we also learned how to have fine grained control of the transformation using the

160

00:12:28.470  -->  00:12:30.920
transform origin property.

161

00:12:30.960  -->  00:12:35.880
I encourage you to experiment with the properties and functions that we just reviewed because in our

162

00:12:35.880  -->  00:12:41.210
next lesson we are going to get our first look at animating content.

163

00:12:41.370  -->  00:12:46.370
We are going to learn about transitioning smoothly from one value to another.

164

00:12:46.380  -->  00:12:47.620
It's going to be a lot of fun.

165

00:12:47.640  -->  00:12:49.540
I will see you in the next lesson.
