1

00:00:00,450  -->  00:00:09,160
In this lesson we will learn how to create full with backgrounds with fixed width interior content.

2

00:00:09,450  -->  00:00:12,130
It's difficult to explain this effect with words.

3

00:00:12,150  -->  00:00:18,090
So let's hop straight into a visual demonstration in front of you is the example lay out that we've

4

00:00:18,090  -->  00:00:24,180
seen throughout the course and it features an overall container element with a white background that

5

00:00:24,180  -->  00:00:27,270
all of our other content sits within.

6

00:00:27,270  -->  00:00:34,050
Now I want you to contrast that with this lay out in this new example lay out we can see that the header

7

00:00:34,050  -->  00:00:39,040
section has a green background and it's not being confined by any other element.

8

00:00:39,120  -->  00:00:46,140
It's using up the full browser window width and even if I make my browser window larger we see that

9

00:00:46,140  -->  00:00:54,210
the content itself doesn't use more space but the backgrounds of the sections fill the entire browser

10

00:00:54,210  -->  00:00:55,750
window with.

11

00:00:55,770  -->  00:01:02,430
So this is what I was describing earlier when I said full width backgrounds with fixed width interior

12

00:01:02,430  -->  00:01:03,700
content.

13

00:01:03,930  -->  00:01:09,950
This is a common layout technique that many of the world's most popular Web sites make use of.

14

00:01:09,960  -->  00:01:15,450
So in this lesson we will be revisiting this old example lay out that you are familiar with and will

15

00:01:15,450  -->  00:01:21,610
be adjusting the code so that it looks more like this layout which uses full width backgrounds.

16

00:01:21,810  -->  00:01:23,300
Let's get started.

17

00:01:23,880  -->  00:01:28,920
Our first step is to edit the H TNL for our page.

18

00:01:28,920  -->  00:01:34,980
We can see that we have a div with the class of container that is housing all of the content on the

19

00:01:34,980  -->  00:01:41,010
page and that's what's giving the page the white background that's horizontally centered within the

20

00:01:41,010  -->  00:01:41,970
browser window.

21

00:01:42,180  -->  00:01:46,460
So I'm simply going to delete that div there is the end tag.

22

00:01:46,880  -->  00:01:48,310
There's the Start Tag.

23

00:01:48,510  -->  00:01:53,640
And we can adjust the indentation of this content just to stay organized.

24

00:01:53,700  -->  00:01:59,890
So now that we've removed that overall parent element we can see that the background color of our room

25

00:02:00,130  -->  00:02:02,930
HVM element is shining through.

26

00:02:02,940  -->  00:02:07,710
So in our C Ss we were assigned a background color to our overall page.

27

00:02:07,710  -->  00:02:12,090
So now we need to assign background colors to each individual section.

28

00:02:12,090  -->  00:02:19,590
So if we want our main content area to have a white background I can simply find that in the CSX background

29

00:02:19,590  -->  00:02:26,130
color solid white and let's imagine that we want our Hetter to use a darker background color with white

30

00:02:26,190  -->  00:02:27,150
text.

31

00:02:27,420  -->  00:02:30,060
We can make that adjustment very quickly.

32

00:02:30,270  -->  00:02:32,300
Header background color.

33

00:02:32,370  -->  00:02:36,940
Paste in hexadecimal color code for a darker green.

34

00:02:37,050  -->  00:02:40,500
Let's change the color of the text to be white.

35

00:02:40,560  -->  00:02:45,180
We also need to adjust the color of the links in the header.

36

00:02:45,170  -->  00:02:49,660
Here is the rule that targets the links or change the color to white.

37

00:02:50,370  -->  00:02:56,260
And I can see a five or 10 pixel margin around all four edges of the page.

38

00:02:56,340  -->  00:03:03,390
So to remove that we can simply target the body element of our page and be sure to remove any margin

39

00:03:03,420  -->  00:03:05,160
or padding.

40

00:03:06,300  -->  00:03:07,840
Excellent.

41

00:03:07,890  -->  00:03:11,500
So we now have full with background sections.

42

00:03:11,580  -->  00:03:19,200
The header uses dark green the content area uses white and if I make my browser window larger you can

43

00:03:19,200  -->  00:03:23,410
see that they continue to use the full space of the web browser.

44

00:03:23,740  -->  00:03:30,240
However this is very bad for readability because we can see that the content itself is also trying to

45

00:03:30,240  -->  00:03:36,930
use the full window width and the human eye only wants to read so many words per line before it becomes

46

00:03:36,930  -->  00:03:37,890
fatigued.

47

00:03:37,890  -->  00:03:41,820
So we need a way to have fixed width interior content.

48

00:03:41,850  -->  00:03:47,360
Now you will remember earlier in the lesson we removed the overall parent container div.

49

00:03:47,610  -->  00:03:51,980
Well now we can add container divs for each individual section.

50

00:03:52,110  -->  00:04:00,690
So for example in the header in our HTML we can cut all of the content that lives within the header

51

00:04:00,690  -->  00:04:00,930
.

52

00:04:00,930  -->  00:04:04,770
Remember this Hetter element is what's creating the dark green background.

53

00:04:04,920  -->  00:04:10,660
And within this element we can create a div for the class of container and then I'll paste back in all

54

00:04:10,680  -->  00:04:11,820
the content.

55

00:04:11,820  -->  00:04:15,990
Now let's just see SS for a class of container.

56

00:04:15,990  -->  00:04:20,790
The only properties that we will need are a maximum with.

57

00:04:21,090  -->  00:04:23,720
I will use 940 pixels.

58

00:04:23,880  -->  00:04:27,600
We want it to be horizontally centered so we can say margin.

59

00:04:27,600  -->  00:04:28,750
0 auto.

60

00:04:29,100  -->  00:04:35,040
And if I save and refresh we can see that the header element now has a fixed width for the interior

61

00:04:35,040  -->  00:04:35,830
content.

62

00:04:36,120  -->  00:04:42,520
So if we review our h DML structure the hetter element is what's creating the green background color

63

00:04:42,930  -->  00:04:45,670
and we have not assigned any sort of with that element.

64

00:04:45,690  -->  00:04:52,350
So it uses the full window with then with in the header element we wrapped it into your div with the

65

00:04:52,350  -->  00:04:53,730
class of container.

66

00:04:53,880  -->  00:05:01,110
And that directly houses all of our content and the container element is what has a width and is margin

67

00:05:01,110  -->  00:05:03,270
auto to be horizontally centered.

68

00:05:03,270  -->  00:05:10,020
So now we can apply that same container class inside our main content area that has a white background

69

00:05:10,020  -->  00:05:10,390
.

70

00:05:10,410  -->  00:05:15,370
So in our HVM now we see here is the content area div..

71

00:05:15,570  -->  00:05:22,740
So I'm going to cut and paste all of its contents creating a new div with a class of container and then

72

00:05:22,740  -->  00:05:24,710
paste back in the content.

73

00:05:25,350  -->  00:05:31,780
So content area has a direct child of container and that will reuse this same rule.

74

00:05:31,810  -->  00:05:36,900
So if I refresh our content area also has the same interior wit

75

00:05:39,690  -->  00:05:46,380
and now no matter how large someone makes their browser window our background areas will fill up the

76

00:05:46,380  -->  00:05:52,930
entire window and our actual content will have a nice clean uniform margin.

77

00:05:53,490  -->  00:05:55,850
That's really all there is to this technique.

78

00:05:55,860  -->  00:05:59,800
It's a very simple concept but it helps to see it put into action.

79

00:05:59,820  -->  00:06:03,790
Now before we close out this lesson I want to bring up a bit of a side note.

80

00:06:03,900  -->  00:06:10,890
The reason that I used Macs with instead of simply width on our container element is to make sure that

81

00:06:10,980  -->  00:06:13,800
smaller screens also work well with their layout.

82

00:06:14,010  -->  00:06:23,340
So for example if I make my web browser smaller than 940 pixels wide we can see that it does not force

83

00:06:23,340  -->  00:06:27,340
horizontal scroll bars but instead the layout adapts.

84

00:06:27,360  -->  00:06:31,640
However there's no spacing on the left and right sides of our layout.

85

00:06:31,980  -->  00:06:40,740
So to fix that in our container element we can simply say padding left 40 pixels tatting right 40 pixels

86

00:06:40,790  -->  00:06:40,980
.

87

00:06:41,140  -->  00:06:47,820
So even if a screen or browser window is smaller than the max with we've set there will still be a nice

88

00:06:47,820  -->  00:06:49,820
margin on the left and right.

89

00:06:50,880  -->  00:06:52,990
That's going to conclude this lesson.

90

00:06:53,040  -->  00:06:57,840
We are now one step closer to creating beautiful flexible layouts.

91

00:06:57,840  -->  00:06:59,890
I will see you in the next lesson.
