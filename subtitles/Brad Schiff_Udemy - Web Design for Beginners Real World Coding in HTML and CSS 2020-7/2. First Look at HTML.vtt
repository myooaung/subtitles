WEBVTT
1

00:00:00.390  -->  00:00:08.990
We've established dot HTML is the language that web pages are written in our next step is to S.H. Tim

2

00:00:09.000  -->  00:00:10.710
out in action.

3

00:00:10.710  -->  00:00:16.100
So in this lesson we'll be creating the world's simplest web page together.

4

00:00:16.170  -->  00:00:20.970
We don't need any special software to begin creating web pages.

5

00:00:20.970  -->  00:00:25.180
Now in the next lesson I will encourage you to roll up your sleeves and follow along.

6

00:00:25.200  -->  00:00:29.990
But for this first lesson I want you to sit back relax and simply watch.

7

00:00:30.090  -->  00:00:35.670
I want you to pay attention to how simple M L is in front of you is a text editor.

8

00:00:35.790  -->  00:00:40.950
I will explain in detail in future lessons what a text editor is and it will help me find the right

9

00:00:40.950  -->  00:00:44.000
text editor for your preferences and for your platform.

10

00:00:44.130  -->  00:00:51.870
But for now just think of a text editor as a place where we can type Cape and then the only other program

11

00:00:51.870  -->  00:00:54.630
currently running on my computer is a web browser.

12

00:00:54.870  -->  00:01:00.750
I'm using Mozilla Firefox but you might want to use Google Chrome or Internet Explorer or Safari or

13

00:01:00.750  -->  00:01:02.100
any other web browser.

14

00:01:02.370  -->  00:01:07.200
Now what we're going to do in this first lesson is write a bit of code in our text editor and then we're

15

00:01:07.200  -->  00:01:10.580
going to view that code through the eyes of our web browser.

16

00:01:10.830  -->  00:01:13.810
Back in the text editor will begin writing code.

17

00:01:13.830  -->  00:01:20.370
Let's imagine our first goal is to add an important heading to the page and we want that important heading

18

00:01:20.370  -->  00:01:24.150
to read Hello world.

19

00:01:24.150  -->  00:01:30.420
Now that we've included the code for a heading let's save this text as a file just like we would with

20

00:01:30.420  -->  00:01:32.330
a word processing program.

21

00:01:32.370  -->  00:01:37.290
So if you initiate the save prompt from File Save You can then choose where you would like to save the

22

00:01:37.290  -->  00:01:38.130
file.

23

00:01:38.130  -->  00:01:44.220
I'm going to save it in a learn HVM folder that I've created and then I'm going to name the file index

24

00:01:44.220  -->  00:01:45.520
.

25

00:01:45.540  -->  00:01:50.600
Now we can see here is a folder on my desktop and here is the file that we just created.

26

00:01:50.640  -->  00:01:53.450
I want to open this file in my web browser.

27

00:01:53.460  -->  00:01:57.570
So in Firefox for you it might be Chrome or Internet Explorer or Safari.

28

00:01:57.630  -->  00:02:04.570
So I'm going to do is find the file that we just created and drag it on top of my web browser.

29

00:02:04.650  -->  00:02:09.690
The first thing that we notice is that this looks different than what we typed in our text editor in

30

00:02:09.690  -->  00:02:10.610
our text editor.

31

00:02:10.620  -->  00:02:14.950
We typed less than symbol H-1 greater than symbol.

32

00:02:15.030  -->  00:02:16.110
Hello world.

33

00:02:16.350  -->  00:02:20.570
And then less than symbol forward slash H-1 greater than symbol.

34

00:02:20.880  -->  00:02:22.850
But in our web browser We simply see.

35

00:02:22.920  -->  00:02:24.540
Hello world.

36

00:02:24.540  -->  00:02:29.030
This is because HMO is not designed for humans to read.

37

00:02:29.070  -->  00:02:34.770
It's designed for web browsers to receive and then render a web page and then humans can read the web

38

00:02:34.770  -->  00:02:36.420
page that it outputs.

39

00:02:36.420  -->  00:02:44.520
So for example all this code did is create a heading level one or H-1 element HMO pages are made up

40

00:02:44.580  -->  00:02:46.000
of different elements.

41

00:02:46.110  -->  00:02:51.430
So for example what if we wanted to tell the web browser to output a slightly less important heading

42

00:02:53.000  -->  00:03:01.340
H-2 and we can include any text that we'd like so we can say hello world again.

43

00:03:01.650  -->  00:03:06.890
So if I save and then click refresh in Firefox we can see the new text.

44

00:03:07.260  -->  00:03:15.540
Next let's create a bit of standard text or paragraph text between these two headings P for paragraph

45

00:03:15.540  -->  00:03:16.190
.

46

00:03:16.200  -->  00:03:23.500
This is a paragraph that contains only one sentence.

47

00:03:23.850  -->  00:03:27.760
So let's review the syntax that we're using to create elements.

48

00:03:27.900  -->  00:03:35.130
I like to say that writing HMO is like making sandwiches so you can see that this is the start tag and

49

00:03:35.130  -->  00:03:37.190
it's essentially a piece of bread.

50

00:03:37.230  -->  00:03:38.980
This is the end tag.

51

00:03:39.140  -->  00:03:40.540
And it's another piece of bread.

52

00:03:40.680  -->  00:03:45.300
So that leaves the peanut butter and jelly or the meat or whatever we want to include in the sandwich

53

00:03:45.390  -->  00:03:47.300
in between the two slices of bread.

54

00:03:47.610  -->  00:03:50.940
So let's review the syntax for the bread slices.

55

00:03:50.940  -->  00:03:53.100
This is the less than symbol.

56

00:03:53.400  -->  00:03:55.940
This is the code for the element that we wish to create.

57

00:03:55.950  -->  00:04:02.190
In this case it was p for paragraph and then this is the greater than symbol and then the ending piece

58

00:04:02.190  -->  00:04:02.750
of bread.

59

00:04:02.760  -->  00:04:09.230
The closing tag uses a forward slash right before the code for the element.

60

00:04:09.240  -->  00:04:14.040
So if I save and then go to our Web browser and click the refresh button you can see that we now have

61

00:04:14.040  -->  00:04:17.850
a piece of standard paragraph text between the two headings.

62

00:04:17.850  -->  00:04:23.670
If you recall from earlier I mentioned that our goal was to create the world's simplest web page and

63

00:04:23.670  -->  00:04:25.250
I think we have achieved that.

64

00:04:25.410  -->  00:04:29.400
So we have a heading bit of standard text and then a smaller heading.

65

00:04:29.460  -->  00:04:32.550
Let's review what we've learned in this lesson.

66

00:04:32.550  -->  00:04:39.450
We've learned that we simply type code into a text editor and then save that file as an H DML file that

67

00:04:39.450  -->  00:04:43.620
our web browser can then load and that's what creates a web page.

68

00:04:43.620  -->  00:04:50.580
We learned how to create an element an element is simply a start tag a bit of content and then a closing

69

00:04:50.580  -->  00:04:51.690
tag.

70

00:04:51.750  -->  00:04:58.920
We learned that there are different element types at our disposal that we can use to give semantic meaning

71

00:04:59.160  -->  00:05:00.980
to our page's content.

72

00:05:01.080  -->  00:05:08.850
In this first lesson we only saw three different element types in action heading level 1 paragraph and

73

00:05:08.850  -->  00:05:10.320
heading level 2.

74

00:05:10.350  -->  00:05:15.030
Now obviously there's a lot more to the web than headers and paragraphs.

75

00:05:15.030  -->  00:05:20.610
We will learn about all of the different HVM elements throughout this course but there's no sense in

76

00:05:20.610  -->  00:05:23.690
trying to memorize all of them in the first lesson.

77

00:05:23.700  -->  00:05:30.790
The key concept for this lesson is that HTL is a language used to describe content.

78

00:05:30.870  -->  00:05:36.330
We give different types of content their own different and semantically chosen labels.

79

00:05:36.360  -->  00:05:43.220
Now before we go any further it is important to note that h t m l is not for adding style to pages.

80

00:05:43.230  -->  00:05:46.880
This means that we should not use HTML to control the color of text.

81

00:05:46.980  -->  00:05:53.370
The size of text we should not use H-G MLT assigned background colors or background images or padding

82

00:05:53.460  -->  00:05:58.960
or margin or borders or anything else that is a matter of design preference.

83

00:05:59.130  -->  00:06:01.420
HMO is for content.

84

00:06:01.440  -->  00:06:07.620
It's how we describe our content and give it semantic meaning if you want to add style to a page that's

85

00:06:07.620  -->  00:06:14.750
what cascading style sheets or CSSA is for now we will learn CSSA inside and out.

86

00:06:14.790  -->  00:06:21.600
In the second half of this course the first half of the Course is about understanding what each DML

87

00:06:21.600  -->  00:06:25.350
has to offer or in other words during the first half of the course.

88

00:06:25.350  -->  00:06:33.210
The pages we create will look incredibly basic and once we have a rock solid understanding of HMO or

89

00:06:33.270  -->  00:06:39.360
other words halfway through the course we will begin learning CSS in order to add the design to web

90

00:06:39.360  -->  00:06:40.250
design.

91

00:06:40.330  -->  00:06:46.200
So currently Let's stay focused only on each DML in our next lesson.

92

00:06:46.230  -->  00:06:50.120
I'll encourage you to roll up your sleeves and get some hands on experience.

93

00:06:50.180  -->  00:06:52.510
You will basically be doing what we just did in this lesson.

94

00:06:52.530  -->  00:06:54.470
I'll show you how to set up a text editor.

95

00:06:54.510  -->  00:06:59.580
Make sure that you understand how to save the file correctly so that it saves with an HTML extension

96

00:06:59.970  -->  00:07:04.680
and then will learn how to load it in your web browser so you can begin experimenting writing HMO code

97

00:07:04.890  -->  00:07:06.860
just like I did in this lesson.

98

00:07:06.870  -->  00:07:09.650
I think that'll be a lot of fun so I'll see you in the next lesson.
