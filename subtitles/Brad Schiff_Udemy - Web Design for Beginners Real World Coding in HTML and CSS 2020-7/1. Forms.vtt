WEBVTT
1

00:00:00.500  -->  00:00:05.620
In this lesson we will learn about h TMLC forms.

2

00:00:05.670  -->  00:00:11.160
Forms are used to receive user input and then pass that data along to a server.

3

00:00:11.160  -->  00:00:15.510
Forms are typically one of the more interactive parts of a web page.

4

00:00:15.510  -->  00:00:21.360
So for example if you visit a new Web site the Web site may encourage you to create an account and when

5

00:00:21.360  -->  00:00:26.250
you create that account you will likely have to fill out a form and that will include things perhaps

6

00:00:26.250  -->  00:00:32.340
like your first name or your last name or any other fields where you have to either input text or make

7

00:00:32.340  -->  00:00:38.100
a choice between different options and there is usually some sort of Submit button that finalizes your

8

00:00:38.100  -->  00:00:41.530
input and send the data off to a server somewhere.

9

00:00:41.550  -->  00:00:47.640
Now the entire concept of submitting and processing that data at a server level is completely outside

10

00:00:47.640  -->  00:00:49.250
the scope of this course.

11

00:00:49.240  -->  00:00:56.190
However learning how to create the front facing or front end or user experience side of the forms is

12

00:00:56.190  -->  00:00:59.480
completely within the scope of this course.

13

00:00:59.700  -->  00:01:06.810
So in this lesson we will review the HTML codes required to create a basic form where users can enter

14

00:01:06.810  -->  00:01:09.030
different data into different fields.

15

00:01:09.030  -->  00:01:11.120
And we're going to start from scratch.

16

00:01:11.130  -->  00:01:13.660
So we were right all of the code together.

17

00:01:13.830  -->  00:01:14.990
Let's get started.

18

00:01:15.150  -->  00:01:21.240
Here we are in a text editor with a new blank page we can see the body element is completely empty.

19

00:01:21.300  -->  00:01:26.060
So if I view this page in a web browser it is a perfectly empty page.

20

00:01:26.430  -->  00:01:32.490
So let's begin creating form the first element is very intuitively named form.

21

00:01:32.700  -->  00:01:37.900
And within this element is where we include additional code to construct the actual form.

22

00:01:37.920  -->  00:01:44.280
So the first thing that we will do is create a very basic text input field the element that we will

23

00:01:44.280  -->  00:01:45.090
use to achieve.

24

00:01:45.090  -->  00:01:52.380
This is simply named input and it has an attribute named type and then we can include a value with this

25

00:01:52.380  -->  00:01:56.490
attribute to specify what type of input this is.

26

00:01:56.700  -->  00:01:59.980
So we will start with the most basic text.

27

00:02:00.060  -->  00:02:05.200
So if I save and refresh in my web browser we can see that we now have an input field.

28

00:02:05.370  -->  00:02:09.660
So if I click on this I can then begin typing on my keyboard.

29

00:02:09.660  -->  00:02:13.500
However it's probably not a good idea to begin typing anything.

30

00:02:13.500  -->  00:02:19.740
If this field isn't labeled so our users have no idea what is supposed to be entered into this field

31

00:02:19.740  -->  00:02:20.090
.

32

00:02:20.250  -->  00:02:26.620
So we as HTL authors need to label our inputs or label our fields.

33

00:02:26.790  -->  00:02:30.720
So there's an element named label which can do just that.

34

00:02:30.990  -->  00:02:38.730
Let's imagine that we as the authors of this form want our first Input to receive user's first name

35

00:02:39.580  -->  00:02:45.480
what within the label element we can simply type first name colon and we need to go one step further

36

00:02:45.480  -->  00:02:45.650
.

37

00:02:45.720  -->  00:02:50.500
We need a way to associate this label with this input.

38

00:02:50.640  -->  00:02:56.700
So visually if I save and refresh we can see that in the web browser the label is sitting next to the

39

00:02:56.700  -->  00:03:02.200
input but we need a way from a code perspective to associate the label with the input.

40

00:03:02.430  -->  00:03:08.520
I should be able to click on the label and the web browser should automatically move my cursor to the

41

00:03:08.520  -->  00:03:09.640
field.

42

00:03:10.080  -->  00:03:16.680
So to achieve that we can give the label element an attribute of four.

43

00:03:17.250  -->  00:03:23.370
Now the value of this we will type first name.

44

00:03:23.370  -->  00:03:25.290
Now this is a string that I just invented.

45

00:03:25.290  -->  00:03:33.020
It could have been anything but we need to apply this same name as an ID for the input.

46

00:03:33.210  -->  00:03:41.510
So for example on the input element I will add an attribute of ID and the value will be first name.

47

00:03:41.530  -->  00:03:47.050
It will be the same exact string as we entered in the four attribute for the label.

48

00:03:47.220  -->  00:03:55.860
So now that these are matching face saving refresh in my web browser and if I click or tap on the label

49

00:03:55.860  -->  00:04:01.710
for the field my web browser knows to associate the label with the input and it automatically moves

50

00:04:01.710  -->  00:04:06.060
my cursor into the field so I can begin typing.

51

00:04:06.060  -->  00:04:07.340
Practice makes perfect.

52

00:04:07.350  -->  00:04:09.700
So let's create a second field.

53

00:04:09.810  -->  00:04:16.050
So that means a second input label pair for last name.

54

00:04:16.050  -->  00:04:19.690
In our code we'll create a new input.

55

00:04:19.710  -->  00:04:30.000
It will also be of the text type and we will create a label to be associated with this input last name

56

00:04:30.000  -->  00:04:30.670
.

57

00:04:30.910  -->  00:04:35.590
Now we want to be sure to give this label element the four attributes.

58

00:04:36.000  -->  00:04:40.350
Again this is a text string and we can invent anything we want as long as it doesn't have spaces in

59

00:04:40.350  -->  00:04:40.980
it.

60

00:04:40.980  -->  00:04:47.340
So I will type last name with a capital and for name and then we want to include this matching string

61

00:04:47.430  -->  00:04:53.010
on the input element in the id attribute last name.

62

00:04:53.150  -->  00:04:57.610
If I save and refresh you can see we have a second field here last name.

63

00:04:57.750  -->  00:05:03.670
And if I click on the label it automatically moves the cursor so we can begin typing in the field.

64

00:05:04.230  -->  00:05:09.360
Now that we have successfully created to label input pairs I want to point something out.

65

00:05:09.420  -->  00:05:14.620
While it's true that we do always want an input to have a label associated with it.

66

00:05:14.670  -->  00:05:16.920
There is more than one way to achieve that.

67

00:05:16.920  -->  00:05:23.400
So the first method that we saw is to use the 4 and Id attributes and to give them a matching name.

68

00:05:23.430  -->  00:05:31.770
However an alternative way to associate the input with the label is to simply move the input to sit

69

00:05:31.880  -->  00:05:34.140
within the label element.

70

00:05:34.460  -->  00:05:38.390
So you can rely on your team structure to associate the two elements.

71

00:05:38.400  -->  00:05:44.460
So if I save and refresh and click on the first name label you can see that we still have the behavior

72

00:05:44.460  -->  00:05:47.300
that moves our typing cursor into the field.

73

00:05:47.310  -->  00:05:55.170
However even though nesting the input inside the label works in most web browsers it still is not well-suited

74

00:05:55.200  -->  00:05:57.870
for every screen reading device out there.

75

00:05:57.990  -->  00:06:04.800
So that means in terms of keeping our forms as accessible as possible I still strongly recommend that

76

00:06:04.800  -->  00:06:10.260
you use the for an ID attributes to create your label input pairs.

77

00:06:10.260  -->  00:06:15.930
Having said that I did want you to be aware of this label input nesting method.

78

00:06:15.930  -->  00:06:23.070
Moving on let's add a submit button to the form that users can click or tap on to indicate that they

79

00:06:23.070  -->  00:06:24.990
have finished filling out the form.

80

00:06:25.140  -->  00:06:31.590
Down here we will create an input and we will give it a type of submit.

81

00:06:31.600  -->  00:06:38.730
We will also add an attribute of value and this is where we can control what the button should say so

82

00:06:38.790  -->  00:06:44.230
we could have this say submit or go or save.

83

00:06:44.520  -->  00:06:46.280
Let's just start with submit.

84

00:06:46.290  -->  00:06:52.620
So if I save and refresh we can see that there is a button that users can click or tap when they have

85

00:06:52.620  -->  00:06:55.020
completed filling out the form.

86

00:06:55.050  -->  00:07:00.660
Now speaking of submitting the form we mentioned earlier in the lesson that it's outside the scope of

87

00:07:00.660  -->  00:07:05.420
this course to do any of the processing of the data like saving it to a database.

88

00:07:05.580  -->  00:07:13.110
That would require a programming language which HTML is not so h DML simply constructs the user experience

89

00:07:13.140  -->  00:07:14.260
the user interface.

90

00:07:14.280  -->  00:07:15.370
The front end.

91

00:07:15.630  -->  00:07:23.010
However there is one final attribute that we need to add to each of our inputs to make the form accessible

92

00:07:23.010  -->  00:07:27.540
to programming languages so they can actually do something useful with the data and what we need to

93

00:07:27.540  -->  00:07:32.550
do is add an attribute of name to each of our inputs.

94

00:07:32.550  -->  00:07:39.140
So this is the input for the first name field so I will give this a name of first name.

95

00:07:39.150  -->  00:07:44.550
You really don't want to include spaces in the name so I'm going to have this all one word and just

96

00:07:44.550  -->  00:07:48.820
capitalize and name and our input for last name.

97

00:07:48.940  -->  00:07:49.890
We will do the same thing.

98

00:07:49.890  -->  00:07:55.980
We will give it an attribute of name and then the value we will say is the last name.

99

00:07:55.980  -->  00:07:59.810
We do not need to add a name attribute to our submit button.

100

00:07:59.880  -->  00:08:05.430
We only need to add the name attribute to input fields where users are making a choice or entering text

101

00:08:06.120  -->  00:08:08.590
with our name attribute in place.

102

00:08:08.610  -->  00:08:11.340
Our first basic form is complete.

103

00:08:11.340  -->  00:08:18.160
In our next lesson we will learn that there is much more to forms than simple text input types.

104

00:08:18.180  -->  00:08:19.460
See you in the next lesson
