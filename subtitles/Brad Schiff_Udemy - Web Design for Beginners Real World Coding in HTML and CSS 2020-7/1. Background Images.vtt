WEBVTT
1

00:00:00.420  -->  00:00:04.700
In this lesson we will learn about background images.

2

00:00:05.040  -->  00:00:11.550
You are already familiar with the background color property and the background image property is very

3

00:00:11.550  -->  00:00:14.770
similar except instead of using a solid color.

4

00:00:14.790  -->  00:00:19.530
It allows us to import an image file to be used as a background.

5

00:00:19.670  -->  00:00:26.310
Now in the H TMLC section of the course we learned about the I MGM element which lets us add an image

6

00:00:26.310  -->  00:00:28.980
to the content of the page.

7

00:00:28.990  -->  00:00:35.880
However when we want to add imagery to our pages for stylistic reasons where the image isn't exactly

8

00:00:35.880  -->  00:00:43.770
content in and of itself we can use CSSA to apply background images to different elements.

9

00:00:43.770  -->  00:00:47.040
Now I think this will make more sense as soon as we hop into an example.

10

00:00:47.040  -->  00:00:49.180
So let's get started.

11

00:00:49.170  -->  00:00:50.700
Here's an example page.

12

00:00:50.730  -->  00:00:57.180
And let's imagine that I want to add a background image that sits at the top of this overall white container

13

00:00:57.180  -->  00:01:01.090
element in the folder where our website file lives.

14

00:01:01.110  -->  00:01:07.920
We can see that I have a folder named images and within that folder I have a file named color tile and

15

00:01:07.920  -->  00:01:13.770
if I zoom in or blow the file up you can see that it's nothing more than a Green Square and a yellow

16

00:01:13.770  -->  00:01:15.450
square.

17

00:01:15.450  -->  00:01:22.620
Now if we want to apply this image as a background for this overall white container I will simply find

18

00:01:22.710  -->  00:01:25.580
the container element rule in my style sheet.

19

00:01:25.590  -->  00:01:26.910
Here it is.

20

00:01:26.910  -->  00:01:36.570
And I will add a new property background image you Arel and this is where we point the web browser to

21

00:01:36.600  -->  00:01:38.220
the image file.

22

00:01:38.220  -->  00:01:40.380
Now the could that we write needs to be relative.

23

00:01:40.380  -->  00:01:41.750
From the CSSA file.

24

00:01:41.880  -->  00:01:46.160
So for example the CSSA file lives within the CSSA folder.

25

00:01:46.170  -->  00:01:53.710
So first we need to go up a folder dot dot slash that will bring this outside of the CSSA folder.

26

00:01:53.910  -->  00:01:56.350
Then we want to go inside the images folder.

27

00:01:56.370  -->  00:01:58.160
So images slash.

28

00:01:58.440  -->  00:02:00.750
And then we simply type the name of the file.

29

00:02:00.810  -->  00:02:10.130
So color tile doc PFG And if we save and refresh we can see that this looks terrible.

30

00:02:10.290  -->  00:02:16.740
Now by default background images will repeat or tile both horizontally and vertically in an attempt

31

00:02:16.950  -->  00:02:22.040
to fill up the entire element that you applied the background image to.

32

00:02:22.080  -->  00:02:23.810
Now like I said this looks terrible.

33

00:02:23.820  -->  00:02:28.260
So let's stop the browser from repeating or tiling the image.

34

00:02:28.410  -->  00:02:35.900
We will add a new property named background repeat and we will provide it a value of no hyphen.

35

00:02:35.910  -->  00:02:37.320
Repeat.

36

00:02:38.310  -->  00:02:39.310
Much better.

37

00:02:39.630  -->  00:02:46.140
However I did actually want the image to tile or repeat horizontally just not vertically.

38

00:02:46.410  -->  00:02:50.490
So to achieve that instead of no repeat you can specify.

39

00:02:50.490  -->  00:02:51.920
Repeat x.

40

00:02:52.050  -->  00:02:58.640
So this will tile the image along the x axis or horizontally perfect.

41

00:02:58.830  -->  00:03:03.430
And if we wanted to tile the image only vertically we could see a repeat y.

42

00:03:03.450  -->  00:03:04.980
However that's not what we want.

43

00:03:04.980  -->  00:03:07.190
That's not the way I'd design the image to work.

44

00:03:07.350  -->  00:03:09.450
So repeat x.

45

00:03:09.720  -->  00:03:15.720
So this is the visual effect that I was looking for a horizontal strip of alternating green and yellow

46

00:03:15.720  -->  00:03:24.990
blocks and by leveraging the repeat x property I was able to create the effect with a very small image

47

00:03:24.990  -->  00:03:25.540
.

48

00:03:25.620  -->  00:03:31.890
My web site visitors will be able to download this graphic file very quickly and then their web browser

49

00:03:31.890  -->  00:03:36.950
will do the heavy lifting of repeating it to fill the available space.

50

00:03:36.960  -->  00:03:43.410
Moving on next let's add a bit of top padding to the container element to counteract the space that

51

00:03:43.410  -->  00:03:50.750
this background image is now taking up padding top 15 pixels.

52

00:03:50.760  -->  00:03:54.380
Let's get back to learning more about background image properties.

53

00:03:54.480  -->  00:04:02.320
So let's imagine that we want to add a new image of this flower to the hetter area of our website.

54

00:04:02.580  -->  00:04:07.500
So first let's highlight the header so that we are on the same page and that we understand which area

55

00:04:07.530  -->  00:04:11.790
I'm discussing background color gray.

56

00:04:12.180  -->  00:04:15.130
So I'm referring to the space that is currently Gray.

57

00:04:15.270  -->  00:04:22.620
Actually let's remove the right side padding of the overall container element container turning right

58

00:04:22.620  -->  00:04:22.660
.

59

00:04:22.660  -->  00:04:27.380
Let's just remove this so that the left sits flush against the right edge.

60

00:04:27.390  -->  00:04:34.170
So let's imagine that we want to add that flower image to be a background for this gray area.

61

00:04:34.170  -->  00:04:39.940
So very quickly I will move that flower file to sit inside the images folder.

62

00:04:41.460  -->  00:04:44.450
And let's hop over to our CSS.

63

00:04:44.500  -->  00:04:48.500
Here is the header element that we want to add a background to.

64

00:04:49.380  -->  00:04:54.180
So I removed the background color property that was just to illustrate which section of the page was

65

00:04:54.180  -->  00:04:55.380
referring to.

66

00:04:55.380  -->  00:05:01.280
So we will save background image you RL parentheses.

67

00:05:01.410  -->  00:05:07.220
We want to go up a folder so that we're out of the CSSA folder then we want to dig into the images folder

68

00:05:07.920  -->  00:05:10.520
and the file name is floured J pig

69

00:05:15.240  -->  00:05:18.520
I see several adjustments that we should make.

70

00:05:18.540  -->  00:05:23.990
The first is that I want the background image to sit flush with the right side of our layout.

71

00:05:24.390  -->  00:05:27.260
So this extra white space should not be here.

72

00:05:27.360  -->  00:05:33.870
Now the background image file is only about this wide and by default background images will try and

73

00:05:33.870  -->  00:05:38.700
will line themselves with the left hand side of the element that they're being applied to.

74

00:05:38.940  -->  00:05:41.980
But we want it to align itself with the right side of the header.

75

00:05:42.300  -->  00:05:50.040
Now there is a CSSA property named background position which will let us customize its position.

76

00:05:50.040  -->  00:05:52.390
This property accepts two values.

77

00:05:52.500  -->  00:05:58.050
The first control is the horizontal position and the second value controls the vertical position so

78

00:05:58.050  -->  00:06:01.370
horizontally we want the image to align itself to the right.

79

00:06:01.560  -->  00:06:03.700
Now vertically is a bit trickier.

80

00:06:03.900  -->  00:06:06.260
So here is the photo or the image file.

81

00:06:06.450  -->  00:06:11.060
I'm interested in displaying the vertical center portion of the image.

82

00:06:11.190  -->  00:06:15.720
So if we look at our layout we can see that the header isn't very tall so we're only going to be able

83

00:06:15.720  -->  00:06:18.140
to fit a portion of the image.

84

00:06:18.190  -->  00:06:21.960
Now I'm not too worried about the top and I'm not too worried about the bottom.

85

00:06:21.990  -->  00:06:27.640
So for the vertical property I will include the keyword center.

86

00:06:28.020  -->  00:06:34.410
So if I save and refresh we can see the background image is positioning itself aligned to the right

87

00:06:34.620  -->  00:06:35.340
and vertically.

88

00:06:35.350  -->  00:06:39.230
We're seeing the sweet spot the vertical center of the image.

89

00:06:39.480  -->  00:06:44.580
The next adjustment that I will make is to tell the background to not repeat or tile so we can fix this

90

00:06:44.580  -->  00:06:46.900
on the left side.

91

00:06:47.310  -->  00:06:50.330
Background repeat no repeat.

92

00:06:50.880  -->  00:06:51.810
Excellent.

93

00:06:51.810  -->  00:06:58.650
Now the reason I chose an image that is much taller than the space that it's being applied to is because

94

00:06:58.650  -->  00:07:01.500
we never know how tall the head will grow to be.

95

00:07:01.500  -->  00:07:07.710
So for example what if we adjusted the navigation links so that they take up more space.

96

00:07:07.740  -->  00:07:15.780
So for example what if instead of 10 pixels of vertical padding they had 25 pixels of vertical padding

97

00:07:16.890  -->  00:07:22.640
so we can see that now more of our flower background image is able to shine through and be visible.

98

00:07:22.650  -->  00:07:26.580
So the key point here is that our layout doesn't break or look silly.

99

00:07:26.580  -->  00:07:32.490
If things grow a bit vertically typically in web design you don't want to micromanage the height of

100

00:07:32.490  -->  00:07:33.190
your content.

101

00:07:33.210  -->  00:07:38.610
You want to let it breathe and determine its own height by its own font sizes and padding and margin

102

00:07:38.610  -->  00:07:39.350
.

103

00:07:39.750  -->  00:07:44.760
And by providing an image that's a bit taller than the area we need we can sure that our layout does

104

00:07:44.760  -->  00:07:50.490
not break now very quickly let's fix these links that they don't have a ridiculous amount of vertical

105

00:07:50.490  -->  00:07:51.660
padding.

106

00:07:52.260  -->  00:07:58.320
And let's also give them a white background so that they stand out against the background image background

107

00:07:58.320  -->  00:08:01.400
color Triple F for white.

108

00:08:01.920  -->  00:08:04.740
So far we've learned about three new properties.

109

00:08:04.740  -->  00:08:10.700
Background image background repeat and background position.

110

00:08:10.710  -->  00:08:14.270
Now I want to introduce you to background size.

111

00:08:14.460  -->  00:08:20.760
So for example we can see this area a little bit down the page that reads birds are great and it has

112

00:08:20.760  -->  00:08:24.690
a beige or light brown background for the outer box.

113

00:08:24.690  -->  00:08:31.460
Let's imagine that we want to add this photograph of a bird to replace the beige background color.

114

00:08:31.830  -->  00:08:35.430
Clearly this photograph is much too large.

115

00:08:35.730  -->  00:08:40.710
Here's the actual size to fit in that beige box perfectly.

116

00:08:40.920  -->  00:08:44.440
But the background size property can save the day.

117

00:08:44.700  -->  00:08:48.700
So let's begin by adding that bird image to our images folder.

118

00:08:49.430  -->  00:08:51.050
Bird that J pig.

119

00:08:51.570  -->  00:08:59.460
And let's add that to this beige outer box to inner H.T. and now you can see that that is nothing more

120

00:08:59.460  -->  00:09:02.340
than a div with a class of birds.

121

00:09:02.340  -->  00:09:03.880
Here's the rule in our CSS.

122

00:09:03.900  -->  00:09:07.670
We can see this is where it's getting that beige background color.

123

00:09:08.580  -->  00:09:14.360
So I'm just going to create a new rule or excuse me a new decoration background image.

124

00:09:14.370  -->  00:09:21.300
Practice makes perfect so we're practicing our image syntax jump out of the folder that the CSSA file

125

00:09:21.300  -->  00:09:24.110
is and then jump into the images folder.

126

00:09:24.540  -->  00:09:28.830
The file name is bird J pig.

127

00:09:29.640  -->  00:09:32.660
If we refresh we can see there is the bird's head.

128

00:09:32.670  -->  00:09:35.740
So clearly the image is not the correct size.

129

00:09:36.180  -->  00:09:38.520
Let's at least try to position the image.

130

00:09:38.670  -->  00:09:47.040
So background position horizontally we will center the image and vertically will center the image.

131

00:09:47.820  -->  00:09:52.570
So at least now we're seeing the center of the image but it's still too large.

132

00:09:52.620  -->  00:09:57.420
So this is where the background size property comes into play.

133

00:09:57.690  -->  00:10:01.260
We have the option to specify a width and height value.

134

00:10:01.320  -->  00:10:07.190
So we could say the image should be 200 pixels wide and 120 pixels tall.

135

00:10:07.310  -->  00:10:11.520
Now obviously if that was the case we'd want to make sure that the background image does not repeat

136

00:10:13.860  -->  00:10:19.720
now clearly 200 pixels wide by a hundred and twenty pixels tall is not the correct dimensions.

137

00:10:19.740  -->  00:10:22.860
We want the image to use all of the available space.

138

00:10:22.860  -->  00:10:28.080
Now instead of worrying about trying to find those perfect pixel values to plug in we can simply race

139

00:10:28.080  -->  00:10:34.410
this and use a key word of cover and the web browser will do all the heavy lifting for us.

140

00:10:34.410  -->  00:10:40.980
It will automatically resize the background image to cover or fill the element that the background image

141

00:10:40.980  -->  00:10:42.230
is being applied to.

142

00:10:42.480  -->  00:10:47.820
Now this may not seem like that big of a feature at the moment but believe me when we start dealing

143

00:10:47.820  -->  00:10:53.010
with flexible layouts and responsive web design later on in the course we will learn that the ability

144

00:10:53.010  -->  00:10:57.190
to automatically resize background images is a lifesaver.

145

00:10:57.210  -->  00:11:02.760
Now before we move on to the next topic in this lesson I want to review a way that we can make our code

146

00:11:02.760  -->  00:11:04.200
much cleaner.

147

00:11:04.200  -->  00:11:10.440
So with the exception of background size we can combine all of these other background properties into

148

00:11:10.440  -->  00:11:11.890
one line of code.

149

00:11:12.090  -->  00:11:20.700
So lets race these lines and start a new line that simply reads background and we will supply all of

150

00:11:20.700  -->  00:11:22.840
the values on this one line of code.

151

00:11:23.040  -->  00:11:27.900
So the first thing we'll do is provide the solid background color fallback which was that beige color

152

00:11:27.900  -->  00:11:28.380
.

153

00:11:28.440  -->  00:11:34.620
Next we'll point the browser to the location of the image file so it will pop out in the CSSA folder

154

00:11:34.620  -->  00:11:39.460
then jump into the images folder file name was Berdahl big.

155

00:11:39.480  -->  00:11:45.360
Next we want to include the way that the image should be positioned so we were using center center and

156

00:11:45.360  -->  00:11:48.680
then we can specify how the image should be repeated or tiled.

157

00:11:48.750  -->  00:11:53.820
So we'll say no repeat if we save and refresh literally nothing changes.

158

00:11:53.850  -->  00:12:01.020
This is just a more efficient way of specifying all of these properties combining multiple properties

159

00:12:01.020  -->  00:12:05.080
into one line of code is referred to as CSSA shorthand.

160

00:12:05.370  -->  00:12:10.530
Now you will become familiar with this syntax over time but while you're just starting out if you'd

161

00:12:10.530  -->  00:12:17.280
prefer to use each value in property on it's own line that's absolutely OK now that you're familiar

162

00:12:17.280  -->  00:12:21.060
with the basics of background images and even shorthand.

163

00:12:21.090  -->  00:12:28.320
I want to cover one final advance topic before we end this lesson and that is adding multiple images

164

00:12:28.470  -->  00:12:30.150
to one element.

165

00:12:30.510  -->  00:12:36.870
So for example our first task in this lesson was to add the green and yellow stripes to the top of our

166

00:12:36.870  -->  00:12:38.670
container element.

167

00:12:38.670  -->  00:12:43.950
What if we also wanted to add the green and yellow stripes at the very bottom of our container element

168

00:12:43.960  -->  00:12:44.430
.

169

00:12:44.880  -->  00:12:49.420
Let's pop over to our C Ss to find the room for our container element.

170

00:12:49.560  -->  00:12:50.570
Here it is.

171

00:12:50.730  -->  00:12:55.360
I will begin by reducing all of these lines into one line using shorthand.

172

00:12:55.440  -->  00:13:02.250
So we'll say background we'll have a fallback color of white and point the browser to the image file

173

00:13:02.490  -->  00:13:06.550
images color tile dot TNG.

174

00:13:06.870  -->  00:13:10.010
We want it to be aligned in the left top corner.

175

00:13:10.350  -->  00:13:13.260
And we wanted to repeat on the x axis.

176

00:13:13.290  -->  00:13:19.500
Now our goal is to leave these properties intact so that our background at the top stays in place.

177

00:13:19.500  -->  00:13:24.540
But we want to add code so that the green and yellow tiles are also at the bottom.

178

00:13:24.630  -->  00:13:31.000
Now we can add multiple backgrounds to a single background property by using the comma.

179

00:13:32.280  -->  00:13:37.650
So now I can create another background where my cursor is that will get layered on top of the original

180

00:13:37.650  -->  00:13:46.080
background so will point the browser to the color tile or say that we want it to be positioned in the

181

00:13:46.080  -->  00:13:48.070
left bottom corner.

182

00:13:48.450  -->  00:13:54.410
And again we want to repeat along the x axis if we refresh we can see that we now have the background

183

00:13:54.450  -->  00:14:00.810
at the bottom of the element and we also retain the background at the top of our element the ability

184

00:14:00.810  -->  00:14:05.940
to add multiple background images to a single element is incredibly powerful.

185

00:14:05.940  -->  00:14:11.910
Here are a few notes you can create as many different layers as you would like by simply adding a comma

186

00:14:11.970  -->  00:14:17.880
after one layer whichever layer comes first will be closest to the top of the stack.

187

00:14:17.940  -->  00:14:23.770
Meaning whichever layer you include last will get overlapped by the preceding layers.

188

00:14:23.850  -->  00:14:29.580
Also whenever we use background images we should always provide a solid background color so that even

189

00:14:29.580  -->  00:14:34.650
if the image file fails to load at least visitors will see a correct color.

190

00:14:34.650  -->  00:14:38.580
Now you want to make sure that when you're including multiple background images for a single element

191

00:14:39.240  -->  00:14:45.930
that you include the background color in the final or last layer and that will bring this lesson to

192

00:14:45.930  -->  00:14:46.840
a close.

193

00:14:46.890  -->  00:14:48.360
We covered quite a bit of material.

194

00:14:48.360  -->  00:14:49.910
So here's a quick review.

195

00:14:50.070  -->  00:14:52.180
We learned the following new properties.

196

00:14:52.260  -->  00:15:00.450
Background image background ropy background position background size and we also learned how to add

197

00:15:00.450  -->  00:15:03.750
multiple background images to a single element.

198

00:15:03.750  -->  00:15:09.900
I encourage you to experiment with these new properties using your own images to create beautiful designs

199

00:15:09.910  -->  00:15:10.160
.

200

00:15:10.380  -->  00:15:12.270
I will see you in the next lesson
