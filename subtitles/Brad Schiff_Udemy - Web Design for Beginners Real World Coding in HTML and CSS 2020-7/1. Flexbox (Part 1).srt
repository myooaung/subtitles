1
00:00:00,300 --> 00:00:01,260
Bonjour à tous.

2
00:00:01,680 --> 00:00:09,660
Dans cette leçon, nous allons apprendre ce qu'est la boîte de Fleck, quels problèmes la boîte de Fleck résout, et

3
00:00:09,660 --> 00:00:16,650
plus important encore, nous allons étudier cinq ou six exemples réels de la façon d'utiliser réellement la boîte

4
00:00:16,650 --> 00:00:17,670
de Fleck.

5
00:00:18,330 --> 00:00:21,450
Commençons par l'exemple le plus simple possible.

6
00:00:22,620 --> 00:00:26,790
Nous voyons donc ici un formulaire avec deux lignes ou deux champs.

7
00:00:27,180 --> 00:00:33,210
Et imaginons que nous voulons ajuster les choses afin que les éléments d'entrée réels ne soient pas aussi étroits.

8
00:00:33,720 --> 00:00:38,910
Imaginons que nous voulons que les éléments d'entrée utilisent tout l'espace horizontal restant disponible.

9
00:00:39,300 --> 00:00:47,100
Donc, pour y parvenir, votre premier instinct pourrait être d'utiliser CSX et d'attribuer une valeur de largeur aux éléments d'entrée.

10
00:00:47,430 --> 00:00:49,770
Mais c'est un exercice futile.

11
00:00:50,010 --> 00:00:55,710
Il n'y a pas de valeur de largeur dans tout l'univers qui fera l'affaire ici car le libellé de chaque

12
00:00:55,710 --> 00:00:57,240
ligne est d'une largeur différente.

13
00:00:57,630 --> 00:00:57,900
Droite.

14
00:00:57,930 --> 00:01:05,310
Donc, comme l'étiquette de nom est plus étroite que l'étiquette de couleur préférée, cela signifie que le champ de saisie de la

15
00:01:05,400 --> 00:01:11,490
première ligne devrait être un peu plus large que cette entrée afin de remplir l'espace restant dans une

16
00:01:11,490 --> 00:01:12,030
rangée.

17
00:01:12,750 --> 00:01:19,020
Nous sommes donc dans une sorte de cornichon, mais c'est là que la boîte flexible peut sauver la journée, car avec la boîte flexible, nous

18
00:01:19,020 --> 00:01:22,380
n'avons pas besoin d'attribuer de valeurs de largeur à quoi que ce soit.

19
00:01:22,800 --> 00:01:26,370
Jetons donc un œil à l'odeur HDMI qui compose ce formulaire.

20
00:01:28,400 --> 00:01:29,090
C'est ici.

21
00:01:29,810 --> 00:01:32,510
Ainsi, chaque ligne est enveloppée dans une div de conteneur.

22
00:01:32,650 --> 00:01:34,720
Il a une classe de forme.

23
00:01:34,790 --> 00:01:35,410
Rangée.

24
00:01:35,810 --> 00:01:40,280
Et puis dans chaque div de conteneur, nous voyons une étiquette et une paire d'entrée.

25
00:01:40,910 --> 00:01:47,780
Maintenant, si nous voulons commencer à utiliser la boîte flexible, notre première étape consiste à ajuster le CSF de nos éléments de conteneur.

26
00:01:48,170 --> 00:01:50,960
Donc, dans ce cas, les divs avec une classe de ligne de formulaire.

27
00:01:51,710 --> 00:01:56,510
Donc, dans mon fichier CSF, voici une règle qui cible ces divisions de conteneur.

28
00:01:56,900 --> 00:01:59,390
Actuellement, je donne juste un peu de rembourrage à cette classe.

29
00:01:59,510 --> 00:02:06,680
Mais si nous voulons utiliser la boîte flexible, nous disons simplement que le conteneur mérite d'être flexible d'affichage.

30
00:02:07,250 --> 00:02:13,340
Maintenant, avec cette ligne en place, elle ouvre la porte à de nouvelles façons de dimensionner les éléments enfants qui vivent

31
00:02:13,370 --> 00:02:14,510
dans ce conteneur.

32
00:02:15,020 --> 00:02:21,140
Donc, si nous voulons que l'élément d'entrée fléchisse ou grandisse et remplisse l'espace restant disponible dans

33
00:02:21,530 --> 00:02:24,890
une rangée, nous pouvons simplement dire flex one.

34
00:02:25,430 --> 00:02:29,840
Maintenant, je vais expliquer comment cette syntaxe fonctionne et ce qu'elle signifie réellement dans un instant.

35
00:02:29,870 --> 00:02:35,180
Mais pour l'instant, si nous enregistrons ceci et rafraîchissons, nous voyons que cela a fait l'affaire.

36
00:02:36,050 --> 00:02:36,460
D'accord.

37
00:02:36,470 --> 00:02:42,440
Maintenant, afin de mieux comprendre cette syntaxe que nous avons utilisée ici, nous allons en fait passer à

38
00:02:42,440 --> 00:02:43,490
un nouvel exemple.

39
00:02:49,080 --> 00:02:49,440
D'accord.

40
00:02:49,480 --> 00:02:51,910
Je viens donc d'ajouter cette nouvelle section à la page.

41
00:02:52,270 --> 00:02:55,120
Ce ne sont que quelques titres, paragraphes et dibs.

42
00:02:55,480 --> 00:02:57,060
Voici donc le First d'Hiv.

43
00:02:57,790 --> 00:02:59,050
Voici le Second d'Hiv.

44
00:02:59,170 --> 00:03:00,790
Et voici le Troisième d'Hiv.

45
00:03:01,300 --> 00:03:02,920
Voilà donc ce que je commence avec.

46
00:03:02,950 --> 00:03:08,980
Mais dans un autre onglet, permettez-moi de vous montrer le produit fini dans lequel nous allons transformer cela.

47
00:03:10,590 --> 00:03:11,910
C'est donc une disposition en trois colonnes.

48
00:03:11,970 --> 00:03:12,210
Droite.

49
00:03:12,240 --> 00:03:13,920
Nous avons notre colonne principale.

50
00:03:14,400 --> 00:03:16,860
Nous avons la barre latérale un et la barre latérale deux.

51
00:03:17,280 --> 00:03:20,280
Et nous allons utiliser la boîte flexible pour réaliser cette disposition.

52
00:03:20,700 --> 00:03:22,870
Permettez-moi de revenir à notre travail en cours.

53
00:03:22,890 --> 00:03:23,430
Languette.

54
00:03:24,510 --> 00:03:28,680
Et commençons par jeter un œil au H. T. l'odeur qui crée cette section.

55
00:03:30,030 --> 00:03:36,180
Il a donc un conteneur global ou un plat de rappeur qui a une classe de disposition de colonne, puis imbriqué dans cette

56
00:03:36,180 --> 00:03:36,710
div.

57
00:03:36,780 --> 00:03:42,390
Nous voyons une colonne principale Div quatre et avons fait pour la barre latérale un et une div pour la barre latérale deux.

58
00:03:43,020 --> 00:03:49,500
Maintenant, si nous voulons utiliser la boîte flexible, la première étape consiste à cibler le conteneur ou l'élément parent avec

59
00:03:49,500 --> 00:03:50,520
notre CSX.

60
00:03:50,910 --> 00:03:54,660
Dans ce cas, c'est le div global qui a une classe de disposition de colonne.

61
00:03:54,930 --> 00:04:01,080
Je vais donc passer à mon CSX et voici une règle qui cible cette classe de disposition de colonne.

62
00:04:01,140 --> 00:04:09,540
Commençons donc par le dire à B, afficher flex et sans même écrire d'autre code.

63
00:04:09,630 --> 00:04:16,650
Il suffit de mettre cette ligne en place sur l'élément conteneur qui fera asseoir nos trois div côte à côte.

64
00:04:17,280 --> 00:04:21,540
Maintenant, actuellement, notre colonne principale est un peu plus large que chacune des barres latérales.

65
00:04:21,870 --> 00:04:26,760
Et si vous vous demandez pourquoi le navigateur Web a fait cela par défaut, c'est simplement parce que la colonne

66
00:04:26,760 --> 00:04:29,250
principale contient plus de contenu ou plus de texte.

67
00:04:29,640 --> 00:04:33,000
Il a plus de contenu du navigateur, lui donne plus d'espace pour respirer.

68
00:04:33,510 --> 00:04:39,390
Mais juste pour un exercice rapide, imaginons que nous voulons que nos trois divisions ou trois colonnes soient

69
00:04:39,390 --> 00:04:41,100
toutes parfaitement égales en largeur.

70
00:04:41,370 --> 00:04:41,530
Droite.

71
00:04:41,550 --> 00:04:44,370
Imaginons donc que nous voulons trois colonnes de largeur égale.

72
00:04:44,820 --> 00:04:50,900
Donc, pour que cela se produise dans notre CSX, voici les règles de la colonne principale et des barres latérales.

73
00:04:51,240 --> 00:04:54,120
Donc, tout ce que nous ferions si nous voulons qu'ils soient tous de même largeur.

74
00:04:54,150 --> 00:04:56,070
Nous pourrions simplement dire flex one.

75
00:04:56,820 --> 00:05:00,990
Et puis je vais juste copier et coller ceci dans ces deux règles.

76
00:05:01,710 --> 00:05:02,730
Et si j'économise.

77
00:05:03,910 --> 00:05:07,330
On voit que les trois colonnes sont désormais parfaitement égales en largeur.

78
00:05:08,020 --> 00:05:12,310
Cela peut donc nous donner un aperçu de ce que signifie réellement celui de Fleck.

79
00:05:12,670 --> 00:05:16,650
Nous pouvons considérer cette valeur comme notre référence, à droite.

80
00:05:16,690 --> 00:05:22,510
Donc, si nous voulons qu'un élément ait la même taille que ses frères et sœurs, nous disons flex one.

81
00:05:22,930 --> 00:05:23,290
D'accord.

82
00:05:23,320 --> 00:05:27,760
Maintenant, donnons-nous un autre exemple de tâche pour mieux comprendre la syntaxe.

83
00:05:28,120 --> 00:05:34,480
Imaginons donc que nous voulons que notre colonne principale soit deux fois plus large que l'une des barres latérales.

84
00:05:34,890 --> 00:05:39,250
Donc, dans notre CSF, nous dirions la colonne principale au lieu d'avoir un flex d'un.

85
00:05:39,640 --> 00:05:41,290
Nous dirions flex deux.

86
00:05:41,800 --> 00:05:46,170
Donc, si je sauvegarde cela, la colonne principale est maintenant deux fois plus large que la barre latérale.

87
00:05:46,270 --> 00:05:51,780
Et si nous voulions plutôt que notre colonne principale soit trois fois plus large que les barres latérales?

88
00:05:52,540 --> 00:05:57,850
Évidemment, au lieu de Flex deux, nous dirions flex trois parce que trois est trois fois plus grand qu'un.

89
00:05:58,210 --> 00:06:00,140
Donc, on est toujours notre référence.

90
00:06:00,670 --> 00:06:05,970
C'est la valeur par défaut si nous voulons que l'espace soit divisé également entre les éléments enfants.

91
00:06:06,250 --> 00:06:09,640
Et puis nous pouvons utiliser des nombres plus ou moins grands par rapport à un.

92
00:06:09,970 --> 00:06:17,230
Donc, si nous disons trois ici et rafraîchissons, la colonne principale est maintenant exactement trois fois plus large que l'une des

93
00:06:17,230 --> 00:06:18,100
barres latérales.

94
00:06:18,700 --> 00:06:23,530
Maintenant, certains d'entre vous crient peut-être à l'écran en ce moment et se demandent pourquoi dans

95
00:06:23,530 --> 00:06:30,460
le premier exemple, avec nos champs de formulaire, pourquoi la valeur de flex one a-t-elle fait que les éléments d'entrée utilisent tout l'espace

96
00:06:30,460 --> 00:06:31,060
restant?

97
00:06:31,390 --> 00:06:31,570
Droite.

98
00:06:31,600 --> 00:06:36,460
Vous vous demandez peut-être si une valeur de un est la ligne de base et que l'espace est réparti uniformément.

99
00:06:37,000 --> 00:06:43,660
Et s'il y a deux éléments dans chaque rangée ici, pourquoi n'en a-t-il pas fléchi un, faire que l'entrée occupe seulement la moitié de

100
00:06:43,720 --> 00:06:44,830
la largeur disponible?

101
00:06:45,280 --> 00:06:51,630
Eh bien, la clé du premier exemple est que nous n'avons pas du tout dit aux éléments d'étiquette de fléchir, non?

102
00:06:51,670 --> 00:06:53,830
Nous n'avons pas donné à ces éléments une valeur flexible.

103
00:06:54,160 --> 00:06:57,130
Maintenant, si nous donnions aux éléments d'étiquette une valeur flexible.

104
00:06:57,190 --> 00:07:00,820
Donc, si je vais dans mon défilement CSX, voici la règle.

105
00:07:00,820 --> 00:07:02,260
Il cible les éléments d'étiquette.

106
00:07:02,350 --> 00:07:06,820
Si nous donnions à cela une valeur de flex one et j'économisais.

107
00:07:07,910 --> 00:07:13,250
Alors, oui, l'espace est réparti uniformément et nous en voyons la moitié et la moitié.

108
00:07:13,790 --> 00:07:19,310
Mais la beauté de la boîte de Fleck est que nous n'avons pas à dire à tous les éléments enfants de fléchir.

109
00:07:19,610 --> 00:07:26,200
Et en ne donnant pas la valeur flex à l'élément label, il peut simplement conserver sa taille automatique naturelle.

110
00:07:27,450 --> 00:07:34,250
Et l'entrée indiquera qu'il semble que je suis le seul élément enfant à jouer au jeu flexible, donc je vais

111
00:07:34,280 --> 00:07:36,440
continuer et occuper tout l'espace disponible.

112
00:07:36,800 --> 00:07:37,250
D'accord.

113
00:07:37,310 --> 00:07:40,210
Maintenant, revenons à nos trois exemples de mise en page.

114
00:07:41,000 --> 00:07:46,070
Vous vous en souviendrez donc dans mon autre onglet qui montre le produit fini de ce que nous voulons construire.

115
00:07:46,520 --> 00:07:48,800
Dans cet exemple, la colonne principale est au milieu.

116
00:07:49,160 --> 00:07:52,340
Ou en d'autres termes, la barre latérale 1 est la première colonne.

117
00:07:52,670 --> 00:07:58,970
Maintenant, si je reviens à notre onglet Travail en cours, si nous voulons que la colonne latérale d'une colonne vienne en

118
00:07:59,270 --> 00:08:05,330
premier, notre instinct initial pourrait être de passer à notre huile HDMI et de couper-coller et de réorganiser les divisions de

119
00:08:05,330 --> 00:08:05,870
colonne.

120
00:08:06,470 --> 00:08:11,480
Mais avec Flex Box, nous n'avons pas besoin de le faire, car pour des raisons d'optimisation des moteurs de recherche,

121
00:08:11,480 --> 00:08:15,350
nous souhaitons peut-être que la colonne principale apparaisse en premier dans notre code HDMI.

122
00:08:15,740 --> 00:08:20,570
Maintenant, heureusement, la boîte de Fleck permet de contrôler très facilement la commande de notre contenu.

123
00:08:20,930 --> 00:08:26,180
Je vais donc laisser mon H t Amelle tranquille et simplement sauter dans notre CSX.

124
00:08:26,450 --> 00:08:31,100
Et si nous voulons que la première barre latérale vienne en premier, nous pouvons simplement dire commander un.

125
00:08:31,550 --> 00:08:33,920
Et puis nous voulons que notre colonne principale vienne ensuite.

126
00:08:33,980 --> 00:08:37,430
Donc, quatre colonnes principales, nous pouvons dire l'ordre deux.

127
00:08:38,090 --> 00:08:42,140
Et nous voulons que notre barre latérale deux soit la dernière afin que nous puissions dire l'ordre trois.

128
00:08:42,770 --> 00:08:46,490
Donc, si nous enregistrons cela et rafraîchissons, cela a fait l'affaire.

129
00:08:47,030 --> 00:08:47,420
D'accord.

130
00:08:47,450 --> 00:08:52,280
Maintenant, vous vous demandez peut-être comment nous pouvons ajouter des marges entre nos colonnes.

131
00:08:52,670 --> 00:08:56,570
Eh bien, pour répondre à cela, nous allons en fait sauter dans un nouvel exemple.

132
00:09:02,040 --> 00:09:02,430
D'accord.

133
00:09:02,470 --> 00:09:07,750
Donc, si je fais défiler la page, vous pouvez voir que je viens d'ajouter cette nouvelle section qui a trois fonctionnalités.

134
00:09:08,200 --> 00:09:09,880
Voilà donc ce que je commence avec.

135
00:09:09,970 --> 00:09:15,220
Mais si je passe à mon autre onglet, nous pouvons voir le produit fini de ce que nous allons

136
00:09:15,220 --> 00:09:15,850
transformer en.

137
00:09:18,980 --> 00:09:20,600
Donc, des trucs assez basiques, non?

138
00:09:20,630 --> 00:09:24,200
Nous voulons une disposition en trois colonnes pour les cases bleues, vertes et violettes.

139
00:09:24,560 --> 00:09:26,930
Nous voulons que les trois colonnes soient de largeur égale.

140
00:09:26,990 --> 00:09:31,250
Mais cette fois, nous voulons ajouter des marges entre les colonnes.

141
00:09:31,910 --> 00:09:35,090
Nous pouvons réaliser cette mise en page avec flex box très facilement.

142
00:09:35,360 --> 00:09:38,360
Je vais donc revenir à l'onglet Travail en cours.

143
00:09:39,050 --> 00:09:43,220
Et commençons par jeter un œil à la démo H de cette section.

144
00:09:44,120 --> 00:09:50,090
Nous avons donc un conteneur global ou un élément parent avec une classe de conteneur d'appels sortants, puis imbriqués dans

145
00:09:50,090 --> 00:09:50,840
cette div.

146
00:09:50,870 --> 00:09:55,550
Nous avons les trois divisions d'appel et elles ont chacune une classe d'appel.

147
00:09:55,940 --> 00:09:57,560
Donc, à ce stade, vous connaissez l'exercice.

148
00:09:57,620 --> 00:10:05,210
Si nous voulons utiliser la boîte flexible, nous donnerons à l'élément parent ou conteneur une valeur CSX de flex d'affichage.

149
00:10:05,510 --> 00:10:07,700
Passons donc à notre CSX.

150
00:10:07,940 --> 00:10:10,580
Voici la règle qui sélectionne l'élément parent ou conteneur.

151
00:10:10,670 --> 00:10:13,600
Alors affichez flex.

152
00:10:14,000 --> 00:10:14,450
D'accord.

153
00:10:14,540 --> 00:10:17,960
Et puis voici la règle selon laquelle sélectionner les trois éléments enfants.

154
00:10:18,260 --> 00:10:22,640
Donc, si nous voulons qu'ils soient tous de largeur égale, nous pouvons simplement dire flex one.

155
00:10:25,650 --> 00:10:30,240
Très bien, maintenant nous allons ajouter des marges entre ces colonnes, comme je l'ai promis dans un instant.

156
00:10:30,660 --> 00:10:35,850
Mais d'abord, maintenant que nos colonnes ont des couleurs de fond comme celle-ci, cela attire notre attention

157
00:10:35,850 --> 00:10:40,920
sur l'une des plus grandes forces des boîtes flexibles, à savoir les colonnes de hauteur égale.

158
00:10:41,310 --> 00:10:45,750
Notez donc que la boîte bleue a plus de contenu que les boîtes vertes ou violettes.

159
00:10:46,080 --> 00:10:50,640
Et pourtant, les cases vertes et violettes ont la même hauteur exacte que la case bleue.

160
00:10:51,030 --> 00:10:56,490
Maintenant, si vous avez déjà essayé de créer une disposition de colonnes avec des flottants, vous savez que des colonnes de hauteur égale comme

161
00:10:56,490 --> 00:10:58,060
celle-ci peuvent être difficiles à configurer.

162
00:10:58,470 --> 00:11:01,980
Mais avec flex box, nous obtenons des colonnes de hauteur égale par défaut.

163
00:11:02,460 --> 00:11:03,540
Maintenant, c'est vraiment sympa.

164
00:11:03,570 --> 00:11:07,620
Mais imaginons pour une raison quelconque que vous ne vouliez pas de colonnes de hauteur égale.

165
00:11:07,950 --> 00:11:12,600
Ainsi, par exemple, si vous vouliez que la boîte verte se rétracte à sa hauteur réelle

166
00:11:12,600 --> 00:11:19,560
et la boîte violette également, ce que vous pourriez faire, c'est aller dans votre CSX et sur la règle qui cible votre conteneur ou élément

167
00:11:19,590 --> 00:11:20,130
parent.

168
00:11:20,370 --> 00:11:27,780
Vous pouvez ajouter une nouvelle propriété qui indique un élément de campagne et lui donner une valeur de début de tiret flexible.

169
00:11:29,490 --> 00:11:33,300
Alors remarquez maintenant que les cases vertes et violettes utilisent leur hauteur naturelle.

170
00:11:33,690 --> 00:11:36,540
Notez maintenant que les trois colonnes commencent en haut.

171
00:11:36,660 --> 00:11:40,260
Mais si nous changeons cela en flex et.

172
00:11:42,230 --> 00:11:47,180
Maintenant, les trois colonnes avec une ligne, donc le bord inférieur est pair et si nous voulions que

173
00:11:47,180 --> 00:11:51,890
les trois colonnes soient centrées verticalement, vous pouvez simplement changer cela en un centre d'éléments de ligne.

174
00:11:53,390 --> 00:11:53,700
D'ACCORD.

175
00:11:53,780 --> 00:11:56,420
Ce sont donc quelques options que nous offre la boîte flexible.

176
00:11:56,480 --> 00:11:59,630
Par défaut, il est configuré pour s'étirer.

177
00:12:01,160 --> 00:12:04,840
Et c'est ce qui nous donne les colonnes construites en hauteur égale par défaut.

178
00:12:05,420 --> 00:12:07,370
Mais parce que stretch est la valeur par défaut.

179
00:12:07,400 --> 00:12:10,550
Nous n'avons même pas besoin d'inclure cette ligne si c'est ce que nous voulons.

180
00:12:11,360 --> 00:12:13,250
OK, avec cette tangente à l'écart.

181
00:12:13,280 --> 00:12:17,030
Maintenant, ajoutons enfin les marges entre nos colonnes.

182
00:12:17,480 --> 00:12:23,420
Maintenant, lorsque nous voulons ajouter des marges, ce pourrait être notre premier instinct de passer à notre CSX, de trouver la

183
00:12:23,420 --> 00:12:27,400
règle pour les éléments enfants ou les colonnes et de simplement dire marge.

184
00:12:27,410 --> 00:12:27,830
Droite.

185
00:12:28,460 --> 00:12:29,600
40 pixels.

186
00:12:31,190 --> 00:12:31,460
D'ACCORD.

187
00:12:31,520 --> 00:12:35,030
Et cela crée en effet des marges entre les colonnes.

188
00:12:35,420 --> 00:12:40,490
Mais notez que cela nous laisse un écart maladroit à droite de la dernière colonne.

189
00:12:40,880 --> 00:12:43,800
Pour contourner cela, nous pourrions cibler la dernière colonne.

190
00:12:44,300 --> 00:12:48,860
On pourrait donc dire, appelez Colin, dernier enfant.

191
00:12:49,340 --> 00:12:50,540
Et puis dites juste marge.

192
00:12:50,540 --> 00:12:51,560
À droite, zéro.

193
00:12:52,760 --> 00:12:56,780
Et quand je rafraîchis, nous voyons que cela fonctionne très bien.

194
00:12:56,960 --> 00:13:00,020
Mais pour le moment, je vais supprimer cela.

195
00:13:00,590 --> 00:13:01,370
Et la marge.

196
00:13:01,370 --> 00:13:01,610
Droite.

197
00:13:01,610 --> 00:13:02,660
Propriété aussi.

198
00:13:03,140 --> 00:13:08,900
Nous sommes donc de retour à ne plus avoir de marges, car je veux vous montrer une autre façon d'ajouter des marges.

199
00:13:09,230 --> 00:13:12,500
Je veux vous montrer une façon de ressentir plus de flex box ish.

200
00:13:13,040 --> 00:13:17,810
Maintenant, rappelez-vous plus tôt dans la vidéo quand j'ai dit que la bonne chose à propos de Flex Box est

201
00:13:17,810 --> 00:13:20,300
que nous n'avons pas à attribuer de valeurs de largeur?

202
00:13:20,600 --> 00:13:24,860
Eh bien, nous n'avons pas à le faire, mais cela ne signifie pas que nous ne pouvons pas attribuer de valeurs de largeur.

203
00:13:24,940 --> 00:13:26,030
Inflige la boîte.

204
00:13:26,240 --> 00:13:27,020
Alors regardez ça.

205
00:13:27,080 --> 00:13:31,610
Retour dans notre CSX dans la règle qui cible nos enfants ou éléments de colonne.

206
00:13:31,970 --> 00:13:34,860
Débarrassons-nous de cette ligne flexible.

207
00:13:35,210 --> 00:13:40,610
Et à la place, que se passe-t-il si nous donnons manuellement à chaque colonne une largeur de 30%?

208
00:13:41,150 --> 00:13:41,390
Droite.

209
00:13:41,410 --> 00:13:45,380
Donc, s'il y a trois colonnes, trois fois 30 correspond à 90%.

210
00:13:45,710 --> 00:13:49,160
Nos colonnes occuperont donc 90% de la largeur disponible.

211
00:13:49,430 --> 00:13:53,930
Et les 10% restants peuvent être répartis entre les colonnes sous forme de marges.

212
00:13:54,260 --> 00:13:56,240
Maintenant, juste une astuce CSX générale.

213
00:13:56,270 --> 00:14:03,170
Chaque fois que vous attribuez à la fois une largeur et une valeur de remplissage à un élément, nous souhaitons généralement inclure

214
00:14:03,170 --> 00:14:09,290
également une zone de bordure de dimensionnement de boîte afin que nos calculs restent aussi simples que possible.

215
00:14:09,680 --> 00:14:15,740
Donc, si j'enregistre cela et que je rafraîchis, nous voyons que nos trois colonnes occupent seulement environ 90% de

216
00:14:15,740 --> 00:14:16,760
la largeur disponible.

217
00:14:17,120 --> 00:14:23,270
Et ce que nous voulons faire maintenant, c'est répartir uniformément les 10% restants entre les colonnes en tant

218
00:14:23,270 --> 00:14:24,050
que marges.

219
00:14:24,580 --> 00:14:26,360
La boîte de Fleck rend cela très facile.

220
00:14:26,390 --> 00:14:32,600
Nous ciblons donc uniquement l'élément parent ou conteneur et nous disons simplement le contenu cinq.

221
00:14:33,320 --> 00:14:39,350
Et par défaut, cela a une valeur de début de Fleck et qui alignera le contenu à gauche.

222
00:14:39,770 --> 00:14:44,990
Donc, si nous changeons cela en flex et cela alignerait le contenu vers la droite.

223
00:14:45,050 --> 00:14:49,790
Alors maintenant les écarts à gauche, on pourrait aussi dire justifier le centre de contenu.

224
00:14:50,980 --> 00:14:57,820
Mais dans ce cas, la valeur que nous recherchons est nommée espace entre les tirets.

225
00:15:01,260 --> 00:15:01,740
Parfait.

226
00:15:01,770 --> 00:15:08,100
Donc, cela répartit uniformément l'espace restant entre les articles et cela nous donne de belles marges.

227
00:15:08,440 --> 00:15:11,550
Maintenant, si nous revenons à notre CSX, voici un autre petit conseil.

228
00:15:11,760 --> 00:15:18,060
Bien que nous puissions techniquement utiliser la propriété width ici pour les colonnes, ce n'est pas vraiment la

229
00:15:18,060 --> 00:15:20,580
façon officielle de faire les choses.

230
00:15:20,850 --> 00:15:27,270
Donc, au lieu de la propriété width, si nous voulons être corrects ici et garder les choses

231
00:15:27,390 --> 00:15:31,340
entièrement flexibles, nous dirions que la flexibilité est de 30%.

232
00:15:31,860 --> 00:15:35,580
C'est la façon dont la boîte flexible spécifie une taille particulière.

233
00:15:36,000 --> 00:15:39,740
Donc, si je sauvegarde cela, nous voyons que notre mise en page fonctionne toujours de la même manière.

234
00:15:45,210 --> 00:15:49,800
Ainsi, cette disposition à trois colonnes fonctionne bien pour les écrans de bureau ou portables plus grands.

235
00:15:50,070 --> 00:15:53,610
Mais qu'en est-il des petites tablettes pour smartphones?

236
00:15:53,700 --> 00:15:58,860
Vous remarquerez donc qu'à mesure que mon écran devient de plus en plus petit, la disposition à trois colonnes semble de pire

237
00:15:58,860 --> 00:15:59,400
en pire.

238
00:16:00,710 --> 00:16:00,920
Droite.

239
00:16:00,950 --> 00:16:02,150
C'est donc inacceptable.

240
00:16:02,210 --> 00:16:04,280
Donc, sur un écran qui est si petit.

241
00:16:04,490 --> 00:16:06,230
Nous ne voulons pas de plusieurs colonnes, non?

242
00:16:06,290 --> 00:16:09,290
Nous voulons donc que la boîte bleue utilise toute la largeur disponible.

243
00:16:09,800 --> 00:16:15,080
Et puis nous voulons que la boîte verte s'empile en dessous et utilise les piles de la boîte pleine largeur et violette en

244
00:16:15,080 --> 00:16:15,320
dessous.

245
00:16:15,800 --> 00:16:16,160
D'accord.

246
00:16:16,190 --> 00:16:21,350
Alors, comment utiliserions-nous les requêtes multimédias et les points d'arrêt pour ajuster la disposition de notre boîte flexible?

247
00:16:21,740 --> 00:16:23,660
Eh bien, la bonne nouvelle est que c'est vraiment simple.

248
00:16:23,690 --> 00:16:29,990
Donc, si vous avez déjà utilisé des float pour créer des mises en page réactives, vous savez que la microgestion de la

249
00:16:29,990 --> 00:16:35,450
propriété float, de la propriété width et des propriétés de marge pour différentes tailles d'écran peut être pénible.

250
00:16:35,750 --> 00:16:42,950
Mais parce que nous n'avons pas utilisé la valeur de largeur, nous avons utilisé la base flexible et nous n'avons en fait pas spécifié

251
00:16:42,950 --> 00:16:45,950
de marges horizontales, ni n'avons dû flotter nos colonnes.

252
00:16:46,190 --> 00:16:51,710
Vraiment, tout ce que nous devons faire pour que cela soit réactif est de configurer les choses afin que les petits

253
00:16:51,710 --> 00:16:56,450
écrans ne reçoivent pas la flexibilité d'affichage et ne justifient pas les lignes de contenu sur l'élément parent.

254
00:16:56,780 --> 00:16:57,300
Alors vérifiez-le.

255
00:16:57,320 --> 00:16:58,160
Voici ce que je ferais.

256
00:16:58,460 --> 00:17:00,440
Je voudrais simplement couper ces deux lignes.

257
00:17:00,680 --> 00:17:04,340
Les lignes liées à la boîte flexible sont appliquées à l'élément parent ou conteneur.

258
00:17:04,520 --> 00:17:06,140
Je vais les couper dans mon presse-papiers.

259
00:17:07,260 --> 00:17:08,460
OK, sauvons ça.

260
00:17:08,700 --> 00:17:14,460
Alors maintenant, remarquez, c'est la disposition que nous voulons pour les petits écrans, mais sur les écrans plus grands, nous ne voulons pas

261
00:17:14,460 --> 00:17:14,880
cela.

262
00:17:14,910 --> 00:17:17,580
Nous voulons que nos trois colonnes soient de nouveau en place.

263
00:17:17,880 --> 00:17:20,700
Donc, dans notre CSF, créons une nouvelle requête média.

264
00:17:20,850 --> 00:17:28,380
Ainsi, les supports de symboles, disons des écrans d'au moins neuf cents pixels ou plus.

265
00:17:29,490 --> 00:17:29,710
D'accord.

266
00:17:29,730 --> 00:17:34,140
Maintenant, dans cette requête multimédia, nous ciblerons la classe parent ou conteneur.

267
00:17:34,170 --> 00:17:39,900
C'était donc le conteneur des appels externes, puis nous pouvons simplement le coller dans notre presse-papiers.

268
00:17:41,360 --> 00:17:41,560
Droite.

269
00:17:41,630 --> 00:17:46,910
Par conséquent, seuls les écrans qui sont aussi larges ou plus grands devraient recevoir les propriétés basées sur la boîte de Fleck.

270
00:17:47,210 --> 00:17:48,350
Gardons donc cela.

271
00:17:49,430 --> 00:17:50,360
Nous reprenons nos activités.

272
00:17:50,450 --> 00:17:52,880
Et si quelqu'un vient sur notre site sur un petit écran.

273
00:17:54,550 --> 00:17:56,800
Ils reçoivent une belle disposition sur une seule colonne.
