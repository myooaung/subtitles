1
1

00:00:00,000  -->  00:00:02,601
(upbeat electronic melody)
2

2

00:00:02,601  -->  00:00:05,310
(typing)
3

3

00:00:05,310  -->  00:00:06,440
<v Sarah Ettritch>What is a tree?</v>
4

4

00:00:06,440  -->  00:00:09,690
Well, a tree is a hierarchical data structure.
5

5

00:00:09,690  -->  00:00:12,620
So here is a visual representation of a tree
6

6

00:00:12,620  -->  00:00:15,320
and we're gonna go over some basic terminology
7

7

00:00:15,320  -->  00:00:16,740
in this video.
8

8

00:00:16,740  -->  00:00:20,270
Every circle in this tree, is called a node
9

9

00:00:20,270  -->  00:00:25,270
and so, this is a node, this is a node, this is a node.
10

10

00:00:25,270  -->  00:00:29,370
Nodes can have children and so we'll see here that the node
11

11

00:00:29,370  -->  00:00:33,400
with the value 15 has three children, 22, 4 and 17.
12

12

00:00:35,310  -->  00:00:40,310
Now, each node can have one and only one parent
13

13

00:00:41,640  -->  00:00:46,640
and so 22's parent is 15, 18's parent is 4,
14

14

00:00:47,190  -->  00:00:50,660
you'll notice that no nodes have two incoming arrows,
15

15

00:00:50,660  -->  00:00:55,200
we can't have 4 pointing to 9, and 22 pointing to 9
16

16

00:00:55,200  -->  00:00:56,540
because that would mean that 9
17

17

00:00:56,540  -->  00:01:00,000
has more than one parent and that's not allowed.
18

18

00:01:00,000  -->  00:01:04,640
So in a tree, every node has one and only one parent.
19

19

00:01:04,640  -->  00:01:08,510
Now, there's a special node in every tree called the root
20

20

00:01:08,510  -->  00:01:12,560
and the root of this tree is the node that has value 15.
21

21

00:01:12,560  -->  00:01:17,050
The root node does not have a parent and every tree
22

22

00:01:17,050  -->  00:01:20,950
can have one and only one root node.
23

23

00:01:20,950  -->  00:01:24,530
And so in this tree, as I said, the root node is 15.
24

24

00:01:24,530  -->  00:01:28,320
And this is how trees are usually visually represented.
25

25

00:01:28,320  -->  00:01:30,210
Now you might be looking at this and wondering
26

26

00:01:30,210  -->  00:01:32,430
about the practical applications.
27

27

00:01:32,430  -->  00:01:36,600
Well, trees are ideal when things can contain other things
28

28

00:01:36,600  -->  00:01:39,900
or when things can descend from other things.
29

29

00:01:39,900  -->  00:01:44,470
So for example here 22 is a descendant of 15, right,
30

30

00:01:44,470  -->  00:01:46,920
because 15 is a parent of 22.
31

31

00:01:46,920  -->  00:01:51,180
19 descends from 22 because 22 is the parent of 19.
32

32

00:01:51,180  -->  00:01:54,350
So when you have a situation where items can contain
33

33

00:01:54,350  -->  00:01:59,250
other items or there's a hierarchical relationship
34

34

00:01:59,250  -->  00:02:02,040
such that items can descend from other items,
35

35

00:02:02,040  -->  00:02:04,730
trees are a good data structure to use.
36

36

00:02:04,730  -->  00:02:08,390
And a couple of examples would be the Java class hierarchy,
37

37

00:02:08,390  -->  00:02:10,550
that's a tree because a class
38

38

00:02:10,550  -->  00:02:13,160
can extend only one other class,
39

39

00:02:13,160  -->  00:02:16,440
meaning that each class can have only one parent.
40

40

00:02:16,440  -->  00:02:20,560
But you can have multiple classes extending the same class,
41

41

00:02:20,560  -->  00:02:22,910
so a class can have many children,
42

42

00:02:22,910  -->  00:02:24,710
'cause when it comes to trees,
43

43

00:02:24,710  -->  00:02:27,000
you can have as many children as you want.
44

44

00:02:27,000  -->  00:02:28,840
You can only have one parent but you can
45

45

00:02:28,840  -->  00:02:30,390
have as many children as you want
46

46

00:02:30,390  -->  00:02:33,120
so if you wanted the node 4
47

47

00:02:33,120  -->  00:02:36,130
to have 50 children, that's allowed.
48

48

00:02:36,130  -->  00:02:38,290
And getting back to the Java class hierarchy,
49

49

00:02:38,290  -->  00:02:42,260
it only has on root and can you guess what the root is?
50

50

00:02:42,260  -->  00:02:43,880
Well, it's the Object class, right,
51

51

00:02:43,880  -->  00:02:46,440
because every class in the JDK
52

52

00:02:46,440  -->  00:02:48,350
ultimately descends from Object.
53

53

00:02:48,350  -->  00:02:51,790
Now another application of trees would be the file system
54

54

00:02:51,790  -->  00:02:53,090
on your hard drive.
55

55

00:02:53,090  -->  00:02:56,110
Every folder can have children and those children
56

56

00:02:56,110  -->  00:02:58,570
would be folders or files.
57

57

00:02:58,570  -->  00:03:02,480
A folder or a file can only belong to one folder,
58

58

00:03:02,480  -->  00:03:04,060
so it can only have one parent
59

59

00:03:04,060  -->  00:03:05,970
and if you're wondering about the root
60

60

00:03:05,970  -->  00:03:09,100
well the file system could have multiple roots
61

61

00:03:09,100  -->  00:03:11,320
in the sense that it can have multiple drives
62

62

00:03:11,320  -->  00:03:15,490
but each drive is a tree and so the root of the C drive
63

63

00:03:15,490  -->  00:03:19,590
would be the C directory, the topmost directory.
64

64

00:03:19,590  -->  00:03:22,000
So as I just said, in a tree
65

65

00:03:22,000  -->  00:03:24,490
every item in the tree is a node,
66

66

00:03:24,490  -->  00:03:26,560
the node at the top of the tree is the root,
67

67

00:03:26,560  -->  00:03:29,500
and every tree has one and only one root,
68

68

00:03:29,500  -->  00:03:33,670
every non-root node has one and only one parent.
69

69

00:03:33,670  -->  00:03:35,950
A leaf node has no children,
70

70

00:03:35,950  -->  00:03:38,950
so if we go back up to our tree here,
71

71

00:03:38,950  -->  00:03:43,950
19, 9, 18, 3, 11 and 0 are all leaf nodes
72

72

00:03:45,280  -->  00:03:47,220
because they don't have any children.
73

73

00:03:47,220  -->  00:03:50,560
And if you have a tree with only one node in it,
74

74

00:03:50,560  -->  00:03:53,410
it's called a singleton tree and of course in that case,
75

75

00:03:53,410  -->  00:03:55,370
the only node would be the root
76

76

00:03:55,370  -->  00:03:57,870
because every tree has to have a root.
77

77

00:03:57,870  -->  00:03:59,940
And so, here's our root node.
78

78

00:03:59,940  -->  00:04:03,130
In this tree, 0 is a leaf, it has no children.
79

79

00:04:03,130  -->  00:04:06,737
The same is true of 11, 14, 18, 7, 25 and 19,
80

80

00:04:09,900  -->  00:04:12,400
and each of these arrows is called an edge.
81

81

00:04:12,400  -->  00:04:15,270
And so, there's an edge going from 15 to 22,
82

82

00:04:15,270  -->  00:04:18,090
there's an edge going from 15 to 4,
83

83

00:04:18,090  -->  00:04:22,160
and the arrow always points from the parent to the child.
84

84

00:04:22,160  -->  00:04:24,520
Now a few more terms, every tree
85

85

00:04:24,520  -->  00:04:27,090
consists of one or more subtrees
86

86

00:04:27,930  -->  00:04:30,950
and for subtrees you can start at any given node,
87

87

00:04:30,950  -->  00:04:33,270
so let's say we start at node 17.
88

88

00:04:33,270  -->  00:04:38,270
Node 17's subtree consists of 17, 11 and 0.
89

89

00:04:38,960  -->  00:04:42,830
So a subtree is if you start at any given node,
90

90

00:04:42,830  -->  00:04:45,750
it's the node and all of its descendants.
91

91

00:04:45,750  -->  00:04:48,380
And so, if we wanted to start at node 4,
92

92

00:04:48,380  -->  00:04:52,460
the subtree for node 4 would be this entire thing,
93

93

00:04:52,460  -->  00:04:57,460
it would be 4, 9, 18, and 3, 25, 7, and 14
94

94

00:04:58,500  -->  00:05:01,380
because if you follow the edges from 4
95

95

00:05:01,380  -->  00:05:03,760
you can get to all of those nodes.
96

96

00:05:03,760  -->  00:05:06,600
And so a subtree consist of a node,
97

97

00:05:06,600  -->  00:05:08,290
you can start at any node in the tree,
98

98

00:05:08,290  -->  00:05:10,430
and all of its descendants,
99

99

00:05:10,430  -->  00:05:12,740
and the descendants are all the nodes
100

100

00:05:12,740  -->  00:05:15,650
you can get to by following the edges.
101

101

00:05:15,650  -->  00:05:18,280
Downward, 'cause we're talking about descendants.
102

102

00:05:18,280  -->  00:05:21,030
And so, if we start at 4 we can't get to 22
103

103

00:05:21,030  -->  00:05:23,560
'cause we have to go up to our parent,
104

104

00:05:23,560  -->  00:05:24,980
and when it comes to subtrees,
105

105

00:05:24,980  -->  00:05:27,030
when you start at a given node
106

106

00:05:27,030  -->  00:05:29,920
you're only interested in all of the descendants.
107

107

00:05:29,920  -->  00:05:32,340
And so, to figure out a subtree of a node,
108

108

00:05:32,340  -->  00:05:34,760
you start at the node and you include
109

109

00:05:34,760  -->  00:05:39,310
all of the nodes that you can get to through the edges.
110

110

00:05:39,310  -->  00:05:42,240
For 17, that would be 17, 11, and 0.
111

111

00:05:42,240  -->  00:05:45,260
And of course for 15, it would be the entire tree.
112

112

00:05:45,260  -->  00:05:48,630
Now the subtree for 9, if we wanna start there
113

113

00:05:48,630  -->  00:05:52,540
is 9, 25, and 7, so it's the subtree here.
114

114

00:05:52,540  -->  00:05:55,780
A path is the sequence of nodes required to go
115

115

00:05:55,780  -->  00:05:58,360
from one node to another, for example,
116

116

00:05:58,360  -->  00:06:03,360
the path between nodes 4 and 25 are 4, 9, and 25.
117

117

00:06:04,480  -->  00:06:09,480
So the path from the root to node 14 is 15, 4, 3, and 14.
118

118

00:06:12,290  -->  00:06:14,910
Now, one important characteristic of trees
119

119

00:06:14,910  -->  00:06:18,000
is that you can't have cyclic paths.
120

120

00:06:18,000  -->  00:06:21,020
And so, we can't have a path that crosses
121

121

00:06:21,020  -->  00:06:23,020
a node more than once.
122

122

00:06:23,020  -->  00:06:24,330
And so, we couldn't have a path
123

123

00:06:24,330  -->  00:06:29,330
that would go 15, 4, 9, 18, 4, and off somewhere else.
124

124

00:06:30,230  -->  00:06:33,500
So you're not allowed to have cycles in your paths,
125

125

00:06:33,500  -->  00:06:36,540
that's a defining characteristic of a tree.
126

126

00:06:36,540  -->  00:06:39,540
A root path is the path going in the other direction,
127

127

00:06:39,540  -->  00:06:41,630
it's how to get from a node to the root.
128

128

00:06:41,630  -->  00:06:45,820
So the root path for 3 would be 3, 4, and 15.
129

129

00:06:45,820  -->  00:06:49,390
Now, the depth of a node is the number of edges
130

130

00:06:49,390  -->  00:06:51,700
from the node to the root.
131

131

00:06:51,700  -->  00:06:53,980
And so, the root will always have a depth of zero
132

132

00:06:53,980  -->  00:06:56,820
because there are no edges on the path
133

133

00:06:56,820  -->  00:06:58,920
from the root to the root, obviously.
134

134

00:06:58,920  -->  00:07:01,840
If we look at 14, that would have a depth of three
135

135

00:07:01,840  -->  00:07:06,840
because as we just said the path is 14, 3, 4, and 15,
136

136

00:07:07,560  -->  00:07:11,760
and so there are three edges in the path from 14 to the root
137

137

00:07:11,760  -->  00:07:14,170
and so 14 has a depth of three.
138

138

00:07:14,170  -->  00:07:16,900
18 would have a depth of two,
139

139

00:07:16,900  -->  00:07:18,880
so the depth for 18 would be two,
140

140

00:07:18,880  -->  00:07:22,240
we have to go through two edges to get to 18.
141

141

00:07:22,240  -->  00:07:25,520
The height of a node is the number of edges
142

142

00:07:25,520  -->  00:07:29,710
on the longest path from the node to a leaf.
143

143

00:07:29,710  -->  00:07:32,330
And so if we look at 4 here,
144

144

00:07:32,330  -->  00:07:34,960
we'll see that the height of 4 is two.
145

145

00:07:34,960  -->  00:07:39,670
It can get to 18 in one edge, that's not the longest path
146

146

00:07:39,670  -->  00:07:44,670
because it takes two edges to get to 25, and 7, and 14.
147

147

00:07:45,400  -->  00:07:47,320
And so, the height of 4 is two
148

148

00:07:47,320  -->  00:07:50,940
because the number of edges on the longest path
149

149

00:07:50,940  -->  00:07:53,270
from the node to a leaf is two.
150

150

00:07:53,270  -->  00:07:55,670
So the height of 4 is two.
151

151

00:07:55,670  -->  00:07:58,320
Now, leaf nodes will have a height of zero, right,
152

152

00:07:58,320  -->  00:08:02,110
because if the height of a node is the number of edges
153

153

00:08:02,110  -->  00:08:04,830
on the longest path from the node to a leaf,
154

154

00:08:04,830  -->  00:08:07,580
well, leaf nodes we're already there.
155

155

00:08:07,580  -->  00:08:09,040
The number of edges on the path
156

156

00:08:09,040  -->  00:08:12,880
to get from a leaf node to a leaf node is zero.
157

157

00:08:12,880  -->  00:08:15,620
And so, leaf nodes always have a height of zero.
158

158

00:08:15,620  -->  00:08:19,170
Now, the height of a tree is the height of its root node.
159

159

00:08:19,170  -->  00:08:21,740
In this tree, the longest path
160

160

00:08:21,740  -->  00:08:24,280
from the root to a leaf is three
161

161

00:08:24,280  -->  00:08:28,650
because it's these leaves down here that take three edges
162

162

00:08:28,650  -->  00:08:32,080
and so the height of the root is three,
163

163

00:08:32,080  -->  00:08:34,370
and that means the height of the tree is three
164

164

00:08:34,370  -->  00:08:37,020
because in this tree the largest height
165

165

00:08:37,020  -->  00:08:40,910
will be the longest path from the root to a leaf node.
166

166

00:08:40,910  -->  00:08:44,420
So once again, the depth of a node is the number of edges
167

167

00:08:44,420  -->  00:08:47,140
from the node to the tree's root node,
168

168

00:08:47,140  -->  00:08:48,850
so when we're figuring out depth,
169

169

00:08:48,850  -->  00:08:52,350
we start at the node and we work up to the root
170

170

00:08:52,350  -->  00:08:54,250
and we say how many edges does it take me
171

171

00:08:54,250  -->  00:08:56,160
to get up to the root, that's the depth.
172

172

00:08:56,160  -->  00:08:57,610
But when we're talking about height,
173

173

00:08:57,610  -->  00:08:58,970
we're going the other way.
174

174

00:08:58,970  -->  00:09:03,290
We're looking at what's the longest path from the node,
175

175

00:09:03,290  -->  00:09:04,900
and it doesn't have to be the root,
176

176

00:09:04,900  -->  00:09:06,060
down to a leaf.
177

177

00:09:06,060  -->  00:09:07,550
And so, when we're talking about depth
178

178

00:09:07,550  -->  00:09:09,780
we calculate that by moving up the tree
179

179

00:09:09,780  -->  00:09:12,040
and counting the number of edges to the root.
180

180

00:09:12,040  -->  00:09:15,250
And when we're talking about height we start at the node,
181

181

00:09:15,250  -->  00:09:17,520
so if we're trying to figure out the height for node 22
182

182

00:09:17,520  -->  00:09:20,340
we start there and say what's the longest path to a leaf,
183

183

00:09:20,340  -->  00:09:22,460
well there's only one leaf, and we figured that out
184

184

00:09:22,460  -->  00:09:24,800
by counting the number of edges, is one.
185

185

00:09:24,800  -->  00:09:27,520
And so, 22 has a height of one.
186

186

00:09:27,520  -->  00:09:31,650
Now you'll notice, its sibling 4, has a height of two.
187

187

00:09:31,650  -->  00:09:33,990
And so, nodes that are on the same level
188

188

00:09:33,990  -->  00:09:36,030
don't necessarily have the same height.
189

189

00:09:36,030  -->  00:09:38,880
And the height of the root is the height of the entire tree
190

190

00:09:38,880  -->  00:09:42,200
because obviously, the longest path from the root
191

191

00:09:42,200  -->  00:09:45,260
to a leaf node is going to be the height of the root,
192

192

00:09:45,260  -->  00:09:47,110
and that's going to be the height of the tree.
193

193

00:09:47,110  -->  00:09:49,470
Now, a level of a tree contains
194

194

00:09:49,470  -->  00:09:51,490
all the nodes that are at the same depth.
195

195

00:09:51,490  -->  00:09:53,460
So, the root is at level zero
196

196

00:09:53,460  -->  00:09:55,289
'cause it has a depth of zero.
197

197

00:09:55,289  -->  00:09:58,580
22, 4, and 17, are at level one
198

198

00:09:58,580  -->  00:10:01,220
because they have a depth of one.
199

199

00:10:01,220  -->  00:10:04,020
All the nodes along here are at level two,
200

200

00:10:04,020  -->  00:10:09,020
so 19, 9, 18, 3, 11, and 0, are all at level two,
201

201

00:10:09,530  -->  00:10:11,760
'cause they have a depth of two,
202

202

00:10:11,760  -->  00:10:14,570
we have to travel along two edges to get to them.
203

203

00:10:14,570  -->  00:10:16,600
And these three leaf nodes at the bottom
204

204

00:10:16,600  -->  00:10:18,000
are at at a depth of three
205

205

00:10:18,000  -->  00:10:21,060
because we have to travel along three edges to get to them
206

206

00:10:21,060  -->  00:10:22,630
and so they're at level three.
207

207

00:10:22,630  -->  00:10:24,560
So the root's at level zero,
208

208

00:10:24,560  -->  00:10:27,010
its immediate children are at level one,
209

209

00:10:27,010  -->  00:10:29,620
the grandchildren of the root are at level two,
210

210

00:10:29,620  -->  00:10:32,840
and the great-grandchildren of the root are at level three.
211

211

00:10:32,840  -->  00:10:36,040
So, we've talked about how the children are descendants,
212

212

00:10:36,040  -->  00:10:39,410
of course, nodes also have ancestors,
213

213

00:10:39,410  -->  00:10:42,020
so one of the ancestors of 4,
214

214

00:10:42,020  -->  00:10:44,550
well the only ancestor of 4 is 15.
215

215

00:10:44,550  -->  00:10:48,300
We say that a node is an ancestor of another node
216

216

00:10:48,300  -->  00:10:50,540
if it's in the node's path, which makes sense.
217

217

00:10:50,540  -->  00:10:54,530
So 3 has two ancestors, 4 and 15
218

218

00:10:54,530  -->  00:10:58,060
because we have to pass through 15 and 4 to get to 3.
219

219

00:10:58,060  -->  00:11:01,220
So a node can have multiple ancestors and basically,
220

220

00:11:01,220  -->  00:11:04,480
its ancestors are all the nodes on the path
221

221

00:11:04,480  -->  00:11:06,600
from the root to that node.
222

222

00:11:06,600  -->  00:11:09,610
And so now that we've looked at general trees,
223

223

00:11:09,610  -->  00:11:12,800
we're gonna move on and look at binary search trees.
224

224

00:11:12,800  -->  00:11:14,780
And so, let's move on to the next video.
225

225

00:11:14,780  -->  00:11:15,730
I'll see you there.
