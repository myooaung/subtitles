1
00:00:01,020 --> 00:00:02,760
Now let's look at break statement.

2
00:00:03,450 --> 00:00:06,030
We have already seen it's used with switch statements.

3
00:00:06,570 --> 00:00:10,080
Now let's see how it can be used with loops like far and while.

4
00:00:11,950 --> 00:00:16,720
A Brecht statement is used to exit immediately and closing switch or a loop.

5
00:00:16,720 --> 00:00:19,210
Like for or while or while.

6
00:00:19,950 --> 00:00:23,760
So any statements immediately following the break statement are not executed.

7
00:00:24,240 --> 00:00:26,820
Let's look at a few examples where break is used.

8
00:00:28,380 --> 00:00:31,320
Here is a simple four loop template with a break statement.

9
00:00:32,509 --> 00:00:38,210
In this case, the break statement would simply exit the FA loop and the control would continue with

10
00:00:38,210 --> 00:00:39,970
the statement following the furlough.

11
00:00:40,950 --> 00:00:42,100
Not that this would happen.

12
00:00:42,120 --> 00:00:45,690
Even if the envelope did not complete all of its iterations.

13
00:00:46,230 --> 00:00:50,490
So once you hit a break statement, any subsequent iterations would be skipped.

14
00:00:52,150 --> 00:00:57,520
Here's another follow up containing an EFF statement and the break is inside the EFF statement.

15
00:00:59,070 --> 00:01:02,400
Even in this case, Brick would simply exit the envelope.

16
00:01:03,060 --> 00:01:07,590
So it is not exiting the if statement, but still the enclosed first statement.

17
00:01:08,310 --> 00:01:12,120
Now, this is how typically you would see brake statements being used.

18
00:01:12,540 --> 00:01:18,180
That is, you would have a four or a while loop and then there would be some if statement nested inside

19
00:01:18,180 --> 00:01:18,600
it.

20
00:01:19,170 --> 00:01:24,780
And when the if condition becomes true in one of the iterations, then you would break out of the loop

21
00:01:24,780 --> 00:01:27,780
without having to complete the rest of the iterations.

22
00:01:28,560 --> 00:01:31,830
So that kind of flow is dictated by the business logic.

23
00:01:32,760 --> 00:01:34,650
But in case of switch, it is different.

24
00:01:34,680 --> 00:01:40,470
We use it at the end of a case block so that the control would exit the entire switch statement itself.

25
00:01:41,190 --> 00:01:45,750
Otherwise, we know that subsequent case blocks would be executed until it breaks and content.

26
00:01:47,220 --> 00:01:48,840
And here's a nested loop.

27
00:01:49,290 --> 00:01:54,090
We mentioned that break would exit immediately and closing switch or a loop statement.

28
00:01:55,080 --> 00:02:00,960
So in this case, the brake would exit the inner far loop and then the control would continue with the

29
00:02:00,960 --> 00:02:03,090
statement following the inner loop.

30
00:02:05,110 --> 00:02:08,259
Here we have a switch statement nested inside for loop.

31
00:02:09,460 --> 00:02:13,300
So going by the definition, the break would exit the switch statement.

32
00:02:14,230 --> 00:02:18,190
So brake will always exit the innermost switch or a loop statement.

33
00:02:19,030 --> 00:02:24,340
Just note that in all of these examples we may as well use wild loops instead of furloughs.

34
00:02:24,850 --> 00:02:30,090
So with a while loop, the break statement would break out of the loop without rechecking the while

35
00:02:30,100 --> 00:02:30,790
condition.

36
00:02:31,600 --> 00:02:37,900
So a brief statement basically exits the end closing loop abruptly, regardless of whether it is a for

37
00:02:37,900 --> 00:02:40,360
loop or a while loop or a do y loop.

38
00:02:42,180 --> 00:02:45,930
Here is an invalid example where brake is inside an if statement.

39
00:02:46,380 --> 00:02:48,900
That is there is no enclosing switch or a loop.

40
00:02:49,560 --> 00:02:53,610
So a brake statement needs to be within a switch or a loop statement.

41
00:02:53,970 --> 00:02:57,270
Otherwise we get a compiler error as in this particular example.

42
00:02:58,980 --> 00:03:04,570
We saw that in case of nested statements, brake always exits the immediately and closing switch or

43
00:03:04,570 --> 00:03:05,100
a loop.

44
00:03:05,730 --> 00:03:10,980
How about if you want to exit from one of the outer switch or a loop instead of the immediately and

45
00:03:10,980 --> 00:03:11,670
closing one?

46
00:03:12,270 --> 00:03:14,100
For this we can use a labeled break.

47
00:03:16,280 --> 00:03:20,780
For this, we need to first label the block of code from which we want to exit using a break.

48
00:03:21,670 --> 00:03:25,600
This block of code could be the order for statement in case of nested for loop.

49
00:03:26,720 --> 00:03:33,350
A label here is simply any valid Java identifier and it needs to be followed by a column which is in

50
00:03:33,350 --> 00:03:35,210
turn followed by a block statement.

51
00:03:36,110 --> 00:03:38,030
No block statement is a new term here.

52
00:03:38,120 --> 00:03:41,030
We discussed about the three different statement types.

53
00:03:41,240 --> 00:03:43,430
But block statement was not part of it.

54
00:03:43,910 --> 00:03:46,280
So let's take a few moments to discuss about it.

55
00:03:48,250 --> 00:03:51,340
A blog statement is sometimes simply referred to as a block.

56
00:03:52,030 --> 00:03:58,000
It is basically a statement and it contains zero or more statements and closed in curly braces.

57
00:03:58,750 --> 00:04:04,660
Some programming languages refer to such a block as a compound statement, as it typically would contain

58
00:04:04,660 --> 00:04:06,040
at least two statements.

59
00:04:07,070 --> 00:04:11,450
Any controlled flow statement with braces is a block statement here.

60
00:04:11,450 --> 00:04:16,519
In this statement, we say that there are two blocks, the block and the block.

61
00:04:17,060 --> 00:04:20,839
Another example would be an initial riser, which will be discussed later.

62
00:04:21,839 --> 00:04:28,650
The statement in a blog are executed sequentially and a block can be nested to that is it can have other

63
00:04:28,650 --> 00:04:31,800
blocks inside it just like the nested for loops.

64
00:04:32,430 --> 00:04:35,310
So basically we can label any block statement.

65
00:04:37,240 --> 00:04:43,120
So once we have labeled a block statement, in order to break out of it, we use a labeled break where

66
00:04:43,120 --> 00:04:45,910
the keyword break is followed by the label name.

67
00:04:46,570 --> 00:04:51,640
Now here in our example, we can see that a block statement can be an if statement too.

68
00:04:52,300 --> 00:04:53,470
And what does that mean?

69
00:04:53,890 --> 00:04:57,610
It means that a label break can be used with an F statement.

70
00:04:59,260 --> 00:05:03,130
That is, you can do something like this where there is no enclose switch or a loop.

71
00:05:04,360 --> 00:05:07,360
But as I mentioned earlier, this is not possible.

72
00:05:07,720 --> 00:05:14,170
So an unlabeled brick cannot be used with an F statement, but a label brick can be used.

73
00:05:15,790 --> 00:05:17,920
Let's not do a short demo of label break.

74
00:05:18,460 --> 00:05:20,650
We will write a new method called Label Break.

75
00:05:20,680 --> 00:05:22,210
In our basic demo class.

76
00:05:22,780 --> 00:05:24,700
So let's hop on to our editor now.

77
00:05:27,010 --> 00:05:28,950
Look, here is the label break method.

78
00:05:28,960 --> 00:05:31,180
So let's just go ahead and fill up this method.

79
00:05:31,750 --> 00:05:36,730
Here we are declaring a variable called NUM, which is initialized to zero and we are printing its value.

80
00:05:37,150 --> 00:05:42,880
So now let's just go ahead and add a for loop, a nested loop, and within the nested loop we'll be

81
00:05:42,880 --> 00:05:43,990
incrementing num.

82
00:05:44,020 --> 00:05:49,240
And finally, its value will be printed and we will be mainly testing the labeled break.

83
00:05:49,750 --> 00:05:52,150
So let's just go ahead and put a nested four.

84
00:05:52,720 --> 00:05:54,190
So here is the outer for.

85
00:06:00,660 --> 00:06:03,180
So Ultra is iterating for ten times.

86
00:06:03,660 --> 00:06:05,360
Let's have a new variable J.

87
00:06:07,040 --> 00:06:10,760
Let's make it iterate for ten times to.

88
00:06:13,250 --> 00:06:16,100
Now let's increment num here.

89
00:06:16,940 --> 00:06:23,480
So now Numb will get incremented 100 times because the inner loop is going to iterate for a total of

90
00:06:23,480 --> 00:06:24,320
100 times.

91
00:06:24,590 --> 00:06:28,730
For each outer iteration, it's going to iterate ten times.

92
00:06:29,090 --> 00:06:31,070
So now let's put a condition here.

93
00:06:33,150 --> 00:06:39,420
Say A equals five and J equals five.

94
00:06:42,010 --> 00:06:42,670
In this case.

95
00:06:42,670 --> 00:06:43,840
Let's break.

96
00:06:45,620 --> 00:06:47,060
Let's put braces to.

97
00:06:49,420 --> 00:06:52,420
So in this case, the break would break out of the loop.

98
00:06:52,510 --> 00:06:54,790
But let's break out of the outer furlough.

99
00:06:54,850 --> 00:06:56,010
So let's label it here.

100
00:06:56,020 --> 00:06:57,580
Let's call it as outermost.

101
00:06:58,300 --> 00:06:59,430
So that's the label.

102
00:06:59,440 --> 00:07:01,360
And let's break out of the.

103
00:07:03,470 --> 00:07:06,320
Outermost four OC.

104
00:07:07,040 --> 00:07:15,410
So in this case, since we are saying that IE is equal to five and j equal to five, this number get

105
00:07:15,410 --> 00:07:21,770
incremented to 55 and that's when it would break because here we are saying I equal to five.

106
00:07:22,250 --> 00:07:30,290
So for all the previous values from 0 to 4, which is total of five, for all of those five iterations,

107
00:07:30,290 --> 00:07:34,190
the inner for loop is going to iterate ten times, so it's going to be 50.

108
00:07:34,700 --> 00:07:41,900
And then when I is equal to five, J is going to iterate for five times and when it reaches, when it

109
00:07:41,900 --> 00:07:48,710
hits five, it's going to go into this if statement and the break statement would get executed.

110
00:07:48,950 --> 00:07:52,220
So it would be another five times during the last iteration.

111
00:07:52,730 --> 00:07:58,160
After that, it's going to break out of the outer loop and the value of 55 would get printed.

112
00:07:58,790 --> 00:08:01,010
So let's just go ahead and compile and run this.

113
00:08:04,240 --> 00:08:06,040
As you can see, it's printing 55.

114
00:08:06,460 --> 00:08:08,950
So that's the label break statement.

115
00:08:09,280 --> 00:08:10,180
It's going to play.

116
00:08:10,510 --> 00:08:12,510
We are going to break out of the outer furlough.

117
00:08:12,940 --> 00:08:17,860
So just go ahead and you can find this, the updated basics demo program in the resources section and

118
00:08:17,860 --> 00:08:20,560
you can download and you can you can also test it.

119
00:08:20,770 --> 00:08:21,610
Test it out.

120
00:08:22,060 --> 00:08:24,490
So let's just head back to the slides now.

121
00:08:26,610 --> 00:08:29,490
Now here is an invalid example of a label break.

122
00:08:30,030 --> 00:08:35,820
Here label one is used with a nested first statement and it also includes a valid labeled break.

123
00:08:36,720 --> 00:08:39,720
Now Label two is also used within a state first statement.

124
00:08:40,200 --> 00:08:45,060
However, the contained label break is referencing label one and not label two.

125
00:08:45,540 --> 00:08:48,300
So this is invalid and it generates a compiler error.

126
00:08:49,070 --> 00:08:54,230
So the label used with a break statement must be the label of the block in which the break statement

127
00:08:54,230 --> 00:08:54,890
appears.

128
00:08:55,490 --> 00:08:57,740
So we cannot have such cross references.

129
00:08:58,600 --> 00:08:59,860
So that's about it.

130
00:08:59,890 --> 00:09:05,650
So a break statement is used to break out of the immediately and closing switch or a loop statement.

131
00:09:06,370 --> 00:09:11,230
If you have to break out of a switch or loop, which is not immediately enclosing, then you can make

132
00:09:11,230 --> 00:09:12,640
use of labeled break.

133
00:09:13,270 --> 00:09:15,400
So that's about it with the break statement.

134
00:09:15,430 --> 00:09:16,120
Thank you.

