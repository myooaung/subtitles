WEBVTT
1
00:00:02.210 --> 00:00:03.130
Hi there.

2
00:00:03.140 --> 00:00:04.400
This is Lou.

3
00:00:04.400 --> 00:00:05.360
And welcome back.

4
00:00:05.990 --> 00:00:12.080
In the last lecture we discussed about database designing, we are the normalization process.

5
00:00:12.800 --> 00:00:19.250
We started off with the book data, which was in a normalized form, and then we gradually refined the

6
00:00:19.250 --> 00:00:27.110
schema, taking it through the different normal forms until all the relations were in BCN form where

7
00:00:27.110 --> 00:00:30.230
there was zero redundancy in each of the tables.

8
00:00:31.080 --> 00:00:36.690
So as we were moving through the different normal forms, we were decomposing the tables into smaller

9
00:00:36.690 --> 00:00:37.320
tables.

10
00:00:37.890 --> 00:00:40.060
So that was with the book data.

11
00:00:40.080 --> 00:00:46.320
But in our course project, we also have other types of bookmarks like movies, web links, and we also

12
00:00:46.320 --> 00:00:47.610
have the users.

13
00:00:48.270 --> 00:00:52.110
So let's go ahead and see how the entire design looks like.

14
00:00:53.100 --> 00:00:58.380
So we'll be using my skill workbench and I hope that you have already installed it.

15
00:00:58.920 --> 00:01:01.470
So let me just go into start here.

16
00:01:01.500 --> 00:01:02.790
All programs.

17
00:01:03.670 --> 00:01:05.170
And my skull.

18
00:01:05.830 --> 00:01:10.900
So it has both my skill server and my skill workbench here.

19
00:01:10.930 --> 00:01:12.010
Let me just click that.

20
00:01:13.510 --> 00:01:13.630
Okay.

21
00:01:13.770 --> 00:01:18.480
So this is the screen that we have now here at the left.

22
00:01:18.480 --> 00:01:19.950
There is the file here.

23
00:01:20.640 --> 00:01:23.580
So I think you cannot see it here, but it's there.

24
00:01:23.730 --> 00:01:25.140
So just click on that.

25
00:01:25.140 --> 00:01:31.680
And beneath that in the submenu, you will see new model and there is also open model.

26
00:01:31.770 --> 00:01:35.070
I have already created the model for for our project.

27
00:01:35.070 --> 00:01:36.300
So let's just look at that.

28
00:01:36.300 --> 00:01:39.030
Let me open it and then I'll explain a few more things.

29
00:01:39.210 --> 00:01:40.620
So this is the model.

30
00:01:42.500 --> 00:01:42.740
Okay.

31
00:01:42.740 --> 00:01:45.440
So this is how the model looks like.

32
00:01:45.920 --> 00:01:50.630
So this is the design of the our database for our project.

33
00:01:51.230 --> 00:01:54.010
So I did not manually create any of these.

34
00:01:54.020 --> 00:02:01.430
So what I have done is I have created all the tables in a test database and then I have reverse engineered

35
00:02:01.430 --> 00:02:02.930
it using this tool.

36
00:02:03.530 --> 00:02:06.410
And with that, I was able to create this design.

37
00:02:06.410 --> 00:02:10.340
So the design was actually created from the actual database itself.

38
00:02:10.669 --> 00:02:16.970
Normally what we would do is we would create the design first and then we would do a forward engineering

39
00:02:16.970 --> 00:02:18.950
in order to create the database.

40
00:02:19.490 --> 00:02:22.220
I will also be showing you how how to do that.

41
00:02:22.430 --> 00:02:25.130
So but this one was reverse engineered.

42
00:02:25.130 --> 00:02:29.810
So there is this thing called us reverse engineer here and database here.

43
00:02:29.990 --> 00:02:31.850
So that's how I have done it.

44
00:02:32.330 --> 00:02:33.830
So this is what we have.

45
00:02:33.860 --> 00:02:42.560
And it is referred to as e r diagram where E stands for enhanced entity relationship diagram.

46
00:02:43.580 --> 00:02:48.500
And this part we have already seen the book publisher, book author and author.

47
00:02:48.710 --> 00:02:56.150
So it's called an enhanced entity relationship where entity would refer to these entities and R means

48
00:02:56.150 --> 00:03:00.050
the relationships between the entities and entity is simply a table.

49
00:03:01.170 --> 00:03:04.020
So this is what we have and we have seen this already.

50
00:03:04.410 --> 00:03:10.110
So here we have these books, data, the publisher, book, author, author.

51
00:03:10.500 --> 00:03:17.160
And similarly, if I scroll down, we can see the data for movies, the tables for movies.

52
00:03:17.160 --> 00:03:23.280
So you have the movie and you have the director movie has directors and and they are connected.

53
00:03:23.280 --> 00:03:30.090
We are movie underscore director and we also movie also has actors and it is connected via the movie.

54
00:03:30.090 --> 00:03:36.930
And actors are connected using movie underscore actor table, just like in the case of book and authors.

55
00:03:37.860 --> 00:03:41.910
So here these are all the relationships between the tables.

56
00:03:42.300 --> 00:03:46.680
And then so apart from books and movies, we know that we also have web link.

57
00:03:46.680 --> 00:03:51.060
So this is the web link and we also have users, right?

58
00:03:51.060 --> 00:03:54.690
Users who are going to bookmark these different types of bookmarks.

59
00:03:55.380 --> 00:04:02.220
So you have the user table here at the center and a user can bookmark these different types of bookmarks

60
00:04:02.220 --> 00:04:04.170
like the book web link and movie.

61
00:04:04.470 --> 00:04:07.770
So for that, we have separate tables here.

62
00:04:07.770 --> 00:04:15.480
This particular table captures the relationship between user and book and book, so it captures information

63
00:04:15.480 --> 00:04:18.630
about the users who have bookmarked some books.

64
00:04:18.720 --> 00:04:23.640
Similarly, for web between user and web link, we have user underscore web link and between user and

65
00:04:23.640 --> 00:04:25.800
movie, we have user underscore movie.

66
00:04:26.610 --> 00:04:27.060
Now.

67
00:04:27.060 --> 00:04:28.140
Let's go here.

68
00:04:28.680 --> 00:04:36.690
So here, between book and publisher, this is a many to one relationship because a publisher here can

69
00:04:36.690 --> 00:04:38.190
publish multiple books.

70
00:04:38.190 --> 00:04:42.450
So if you look at it from this way, from book to publisher, it is many to one.

71
00:04:42.450 --> 00:04:49.860
And from publisher to book, it is one to many because a single publisher can publish multiple books.

72
00:04:50.400 --> 00:04:50.880
Right.

73
00:04:51.090 --> 00:04:59.340
So that's why you have these two types here indicating that it is on the one side and in the one too

74
00:04:59.340 --> 00:04:59.700
many.

75
00:04:59.850 --> 00:05:05.670
This is the mini site, which means a single publisher can publish multiple books.

76
00:05:06.210 --> 00:05:12.720
So there's many side is indicated via this triangle here, the one side using the two types here.

77
00:05:13.140 --> 00:05:14.270
Now book an author.

78
00:05:14.280 --> 00:05:20.880
We know that it's a many to many relationship because a single book can be authored by multiple authors

79
00:05:21.150 --> 00:05:25.170
and a single author can also write multiple books.

80
00:05:25.440 --> 00:05:27.240
So that's a many to many.

81
00:05:27.510 --> 00:05:33.540
And we mentioned that in order to capture that, we need to create an intermediate table.

82
00:05:33.540 --> 00:05:38.970
It's a relationship table and it's called US Book Author, and it captures the relationship between

83
00:05:38.970 --> 00:05:40.290
books and authors.

84
00:05:40.710 --> 00:05:41.250
Right.

85
00:05:41.700 --> 00:05:43.560
And so that's what it is.

86
00:05:44.250 --> 00:05:50.880
So similarly here also we have a movie, can have multiple directors, but typically we have one director.

87
00:05:51.030 --> 00:05:55.100
Sometimes it's possible to switch once again, many, too many relationship.

88
00:05:55.110 --> 00:05:59.700
And here also it's a many to many relationship between movie and actors.

89
00:06:01.630 --> 00:06:03.790
So that's that.

90
00:06:04.240 --> 00:06:07.300
Now, here, let's look at this table on one.

91
00:06:07.300 --> 00:06:10.300
One more relationship type was 1 to 1.

92
00:06:10.300 --> 00:06:11.890
So we'll get back to that.

93
00:06:12.370 --> 00:06:14.980
And we have already discussed it in the previous lecture.

94
00:06:14.980 --> 00:06:17.500
So here we have all the different columns here.

95
00:06:17.740 --> 00:06:26.350
And as you can see, ID is the primary key and it is indicated using the key icon here and here in our

96
00:06:26.350 --> 00:06:29.770
database, we have primary keys in all of the tables.

97
00:06:29.770 --> 00:06:35.110
And so you can see the key icons with the primary keys in each of the tables.

98
00:06:35.770 --> 00:06:38.920
And we have the columns and also the column data types.

99
00:06:39.710 --> 00:06:39.870
Okay.

100
00:06:40.060 --> 00:06:40.990
So that's with that.

101
00:06:41.470 --> 00:06:43.150
So this is what we have.

102
00:06:44.550 --> 00:06:47.010
So here we.

103
00:06:48.190 --> 00:06:48.580
Here.

104
00:06:48.580 --> 00:06:49.390
We know that.

105
00:06:50.270 --> 00:06:53.990
User underscore ID is a foreign key, right.

106
00:06:54.080 --> 00:06:57.470
And it is referencing the ID field and the user table.

107
00:06:57.470 --> 00:07:03.380
Similarly, book underscore ID is also a foreign key and it references the ID field in the book.

108
00:07:03.380 --> 00:07:06.590
So that goes with all of the different tables here.

109
00:07:06.590 --> 00:07:10.730
Publisher underscore ID is here and publisher underscore ID is actually here.

110
00:07:10.730 --> 00:07:16.370
So this is the foreign key and it is referencing the ID in the publisher field once again.

111
00:07:16.370 --> 00:07:21.950
And here in book, underscore author book underscore ID and author underscore ID are foreign keys,

112
00:07:21.980 --> 00:07:25.850
referencing the primary keys and the two corresponding tables.

113
00:07:27.970 --> 00:07:29.380
Here is a user table.

114
00:07:30.390 --> 00:07:35.400
Now sometimes we can also have 1 to 1 relationship and we also discuss that.

115
00:07:35.670 --> 00:07:43.680
So in terms of 1 to 1 relationship, let's say, for example, this user table has an image and image

116
00:07:43.680 --> 00:07:47.820
usually takes a lot of bytes and it has a special data type too.

117
00:07:48.060 --> 00:07:54.270
So if this table is being queried many, many times for the for the image data, then it may be better

118
00:07:54.270 --> 00:07:59.580
to store that image in for for a user and a separate table.

119
00:07:59.970 --> 00:08:06.120
So we can have a separate table called user underscore image and we can just have the ID and the image

120
00:08:06.120 --> 00:08:06.570
there.

121
00:08:06.570 --> 00:08:11.070
And this table will just be like that will be the way it is right now.

122
00:08:11.340 --> 00:08:17.490
And but there will be a 1 to 1 correspondence between this ID and that and the ID in that table.

123
00:08:17.880 --> 00:08:27.520
So that's one reason why we would have 1 to 1 relationship, but then sometimes we might have like 50

124
00:08:27.520 --> 00:08:30.030
to 100 columns in this particular table.

125
00:08:30.090 --> 00:08:32.880
But here we also have email and password.

126
00:08:33.090 --> 00:08:39.570
And when whenever we are logging in into a system, we need to validate the email and password.

127
00:08:39.570 --> 00:08:41.549
And that's a very common activity.

128
00:08:41.850 --> 00:08:48.750
So if you have like 50 or 100 other columns within this table and if you have millions of rows, then

129
00:08:48.750 --> 00:08:54.610
just to perform that kind of a validation, it might be expensive to use this table.

130
00:08:54.630 --> 00:09:01.410
So in that sense, in that case, we may maintain two tables, one with ID, email and password, and

131
00:09:01.410 --> 00:09:05.610
the other one with ID and all the rest of the fields.

132
00:09:05.610 --> 00:09:10.050
So that way we have, you know, that the table would be smaller.

133
00:09:10.290 --> 00:09:14.070
And so performance wise, it would be better.

134
00:09:14.950 --> 00:09:20.800
So that's just another example of why we might want to have a 1 to 1 relationship.

135
00:09:21.790 --> 00:09:23.830
So that's about it here.

136
00:09:23.860 --> 00:09:27.790
So normally this is how this is the database design.

137
00:09:27.790 --> 00:09:33.460
And generally we will create this kind of a design and then after that we will create the database.

138
00:09:33.550 --> 00:09:40.660
Some teams actually do not use a tool like this, but they just create all of the design in an in a

139
00:09:40.660 --> 00:09:43.290
chat, in a chat, using pen.

140
00:09:43.300 --> 00:09:48.590
And then after that, they would go ahead and create the database using a SQL queries.

141
00:09:48.610 --> 00:09:50.290
The tables are everything else.

142
00:09:50.560 --> 00:09:56.050
So in the next lecture, actually, we will we will be creating the database using proper SQL queries.

143
00:09:56.050 --> 00:10:00.730
So we'll create the database and all of the tables and will populate them with the data and everything

144
00:10:00.730 --> 00:10:02.350
will be done with queries.

145
00:10:02.350 --> 00:10:06.040
And so we will see how that will be done in the next lecture.

146
00:10:06.970 --> 00:10:13.360
But having a design such as this one is very, very good and very important, so that with a single

147
00:10:13.360 --> 00:10:18.100
glance we know how the table looks like and it is especially useful for new hires.

148
00:10:18.100 --> 00:10:23.920
So if there are any new hires in your team and if you have, let's say, hundreds or even thousands

149
00:10:23.920 --> 00:10:25.990
of tables, which is not very uncommon.

150
00:10:26.140 --> 00:10:31.030
So in that case, if there is a new hire, then somebody in the team would have to sit with the new

151
00:10:31.060 --> 00:10:37.880
hire and show them all the different tables that are there in the database and also how they are related.

152
00:10:37.900 --> 00:10:43.180
So doing it by showing them in the database itself is a very cumbersome process.

153
00:10:43.180 --> 00:10:44.830
It will be very difficult to follow.

154
00:10:44.860 --> 00:10:47.320
It could overwhelm the new hires.

155
00:10:47.530 --> 00:10:54.100
So instead, if we if you show them this kind of an interface, this kind of a design, then it will

156
00:10:54.100 --> 00:10:58.330
be much more easier for them to grasp the the design itself.

157
00:10:58.360 --> 00:10:58.900
Right.

158
00:10:59.680 --> 00:11:01.270
So that is what it is.

159
00:11:01.270 --> 00:11:04.660
So it's very useful to design using a tool.

160
00:11:04.810 --> 00:11:12.310
So we are done with this part and now let's go ahead and create a small model and then we will actually

161
00:11:12.310 --> 00:11:13.840
do a forward engineering.

162
00:11:14.050 --> 00:11:17.680
So let me just close this, close this.

163
00:11:17.710 --> 00:11:19.780
So let me just go here.

164
00:11:19.810 --> 00:11:21.700
This is this file menu.

165
00:11:21.970 --> 00:11:27.700
So earlier I clicked on the open model because the model was saved and I just opened the save model.

166
00:11:27.730 --> 00:11:29.710
Let me just say new model here.

167
00:11:30.040 --> 00:11:35.020
So this is the new model and this is the schema, which is nothing but the database.

168
00:11:35.020 --> 00:11:36.460
So let me just rename it.

169
00:11:38.400 --> 00:11:42.900
So let me rename it to our course name JID Underscore.

170
00:11:43.530 --> 00:11:51.330
So let's call it test here and here is some UTF, some other text data would be stored in UTF format,

171
00:11:51.330 --> 00:11:53.040
but let's not worry about it now.

172
00:11:53.040 --> 00:11:56.550
We need to create a diagram, so let's create a diagram here.

173
00:11:57.090 --> 00:11:58.260
Let me double click on that.

174
00:11:58.260 --> 00:12:03.000
So this is the diagram and this is the table here in the left, here in the left pane.

175
00:12:03.570 --> 00:12:06.180
So here we have this vertical pane.

176
00:12:06.180 --> 00:12:07.950
So let me click on this.

177
00:12:07.950 --> 00:12:09.510
It says, Place a new table.

178
00:12:09.780 --> 00:12:12.420
I clicked it once and then I'm going to click it here.

179
00:12:12.570 --> 00:12:13.830
Now I'm going to.

180
00:12:13.860 --> 00:12:15.780
So we are going to create the tables.

181
00:12:16.260 --> 00:12:20.130
So we are just creating the diagram here, the model.

182
00:12:20.370 --> 00:12:21.780
So let me double click it.

183
00:12:22.200 --> 00:12:24.810
So let's just create a couple of tables.

184
00:12:24.960 --> 00:12:26.580
Let's call it book here.

185
00:12:27.600 --> 00:12:28.260
And.

186
00:12:29.640 --> 00:12:36.270
I have double flip that ID and so let me change this to big and I can change it here.

187
00:12:37.710 --> 00:12:37.910
Okay.

188
00:12:37.950 --> 00:12:38.760
So that's the end.

189
00:12:38.760 --> 00:12:40.260
And it's also primary key.

190
00:12:40.950 --> 00:12:43.530
Now, the book also has title.

191
00:12:44.670 --> 00:12:45.080
Okay.

192
00:12:45.090 --> 00:12:49.770
And this is off type watcher or worker in some.

193
00:12:49.800 --> 00:12:53.730
Some people call it a worker and some others pronounce it as wah cha.

194
00:12:54.060 --> 00:12:55.590
So either way is fine.

195
00:12:55.980 --> 00:12:59.460
So let's leave the Title 45 for now.

196
00:12:59.490 --> 00:13:03.740
Now, let's also create a publisher, underscore ID.

197
00:13:03.750 --> 00:13:05.880
So we will be creating a publisher table to.

198
00:13:07.920 --> 00:13:13.260
So that's the publisher underscore ID, but publisher underscore ID is a foreign will be a foreign key

199
00:13:13.590 --> 00:13:17.040
so and it will be referencing the ID field and publisher table.

200
00:13:17.040 --> 00:13:18.890
So the type would be end here.

201
00:13:19.200 --> 00:13:20.030
Big end.

202
00:13:22.220 --> 00:13:22.380
Okay.

203
00:13:22.520 --> 00:13:24.080
So that's what that.

204
00:13:26.820 --> 00:13:30.500
Now let's go ahead and create another table called Publisher.

205
00:13:30.510 --> 00:13:31.860
So let me click here.

206
00:13:36.290 --> 00:13:37.030
On the column.

207
00:13:37.030 --> 00:13:39.460
Let's keep it as ID the primary key.

208
00:13:43.480 --> 00:13:45.760
And then let's create a name here.

209
00:13:47.760 --> 00:13:49.260
So let's just leave it like that.

210
00:13:50.220 --> 00:13:52.030
So we have created two tables.

211
00:13:52.050 --> 00:13:53.370
Now let's create.

212
00:13:54.340 --> 00:13:55.840
The relationship between them.

213
00:13:55.840 --> 00:13:59.380
So one way we can do it is by this one by clicking here.

214
00:13:59.770 --> 00:14:01.300
So let me click here.

215
00:14:01.600 --> 00:14:04.850
So it says pick one or more columns for the foreign key.

216
00:14:04.870 --> 00:14:06.220
So this is the foreign key.

217
00:14:06.250 --> 00:14:07.330
I have done that.

218
00:14:07.570 --> 00:14:09.770
Next it says, Pick the reference column.

219
00:14:09.790 --> 00:14:11.320
The reference column is here.

220
00:14:11.590 --> 00:14:13.740
And that's how we have the relationship.

221
00:14:13.750 --> 00:14:16.300
So a publisher now can publish multiple books.

222
00:14:16.810 --> 00:14:18.010
Now, let's go ahead.

223
00:14:18.010 --> 00:14:23.280
And so this is all there within this tool, within the workbench tool, which is separate.

224
00:14:23.290 --> 00:14:26.530
So it's just the graphical user interface.

225
00:14:26.620 --> 00:14:30.690
And it can act as a client to our my SQL instance.

226
00:14:30.700 --> 00:14:34.090
So let me just say forward engineer here.

227
00:14:36.240 --> 00:14:40.170
So the here are the shows where the server instance is.

228
00:14:40.170 --> 00:14:42.500
So this is where the server instance is.

229
00:14:42.510 --> 00:14:47.970
So it is a local host, which means the local machine and it can also be represented using the IP.

230
00:14:47.970 --> 00:14:54.000
120 7.0.0.1 and it is on port 3306.

231
00:14:54.570 --> 00:15:00.780
So this was all done when you were installing my SQL instance, the server instance, make it next to

232
00:15:00.810 --> 00:15:04.020
me, click next and it's asking for the root password.

233
00:15:04.020 --> 00:15:09.900
So it is root in my case and it says there are two objects since there are two tables that need to be

234
00:15:09.900 --> 00:15:10.620
created.

235
00:15:10.620 --> 00:15:12.330
So we are hitting next.

236
00:15:12.600 --> 00:15:19.230
Now here are the SQL queries that are going to be executed in the in the My SQL Server instance.

237
00:15:19.440 --> 00:15:25.770
So this particular command here, the statement here, it says create JID, underscore test, create

238
00:15:25.770 --> 00:15:34.110
this database effect if it is not existing and it says the default character set for here is UTF eight

239
00:15:34.620 --> 00:15:35.280
now and then.

240
00:15:35.280 --> 00:15:37.590
It is also creating the two other tables.

241
00:15:38.640 --> 00:15:41.400
And this one is the publisher and this one is the book.

242
00:15:41.670 --> 00:15:46.650
And let's not worry about the statements itself, because in the next lecture, we are going to look

243
00:15:46.650 --> 00:15:47.190
at them.

244
00:15:47.430 --> 00:15:51.360
But still, you can see that there is the ID and the name and the ID is the primary key.

245
00:15:52.230 --> 00:15:53.940
And here also we have this.

246
00:15:53.940 --> 00:16:01.080
And then there is the foreign key here, which is a publisher ID and it is going to reference the the

247
00:16:01.080 --> 00:16:02.400
ID in the publisher.

248
00:16:03.150 --> 00:16:07.320
So I think you can understand it, but we will still look at the queries in the next lecture.

249
00:16:07.740 --> 00:16:09.930
So let me just click on next here.

250
00:16:10.560 --> 00:16:12.990
So asking for the password one more time.

251
00:16:14.680 --> 00:16:15.640
Then we close it.

252
00:16:15.640 --> 00:16:18.450
So the following task will now be executed.

253
00:16:18.460 --> 00:16:20.230
So this is connect to database.

254
00:16:21.230 --> 00:16:22.990
And followed Engineer finished.

255
00:16:23.000 --> 00:16:24.050
So that's it.

256
00:16:24.050 --> 00:16:25.310
It's already created.

257
00:16:26.460 --> 00:16:27.780
You just open?

258
00:16:31.430 --> 00:16:40.700
Minus girl command line client password is a root and there is this command call show data basis.

259
00:16:41.470 --> 00:16:43.160
So this is a command line utility.

260
00:16:43.180 --> 00:16:45.030
It is also going to connect to the server.

261
00:16:45.040 --> 00:16:46.510
It has already connected, in fact.

262
00:16:46.960 --> 00:16:50.650
So here it is, the JID underscore test.

263
00:16:51.130 --> 00:16:56.080
Now I can just say use JID underscore test.

264
00:16:59.230 --> 00:17:00.370
Short tables.

265
00:17:00.730 --> 00:17:02.050
Here are the two tables.

266
00:17:02.320 --> 00:17:04.540
So that's how you would create the model.

267
00:17:04.540 --> 00:17:10.869
And you can actually build your database, create your database right from the workbench itself.

268
00:17:11.560 --> 00:17:18.550
So later at the end of the chapter, I might include some resources, some pointers also for or to some

269
00:17:18.550 --> 00:17:22.750
videos which may provide more in-depth information about Workbench.

270
00:17:22.780 --> 00:17:25.829
I'll try to find some videos, look out for that.

271
00:17:25.839 --> 00:17:26.900
So that's about it.

272
00:17:26.920 --> 00:17:27.490
Thank you.

273
00:17:27.490 --> 00:17:33.970
And I hope you enjoyed learning about the workbench and also looking at the database design itself.

274
00:17:34.300 --> 00:17:34.990
Thank you.

275
00:17:34.990 --> 00:17:36.790
And see you in the next lecture.

