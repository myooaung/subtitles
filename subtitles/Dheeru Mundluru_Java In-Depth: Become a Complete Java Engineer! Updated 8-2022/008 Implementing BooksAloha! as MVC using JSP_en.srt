1
00:00:02,070 --> 00:00:03,020
Hi there.

2
00:00:03,030 --> 00:00:05,160
This is De La Rue and welcome back.

3
00:00:05,610 --> 00:00:12,060
Earlier we implemented the Books Aloha Project and as part of the project we implemented this servlet

4
00:00:12,060 --> 00:00:13,380
called My Books.

5
00:00:13,830 --> 00:00:20,670
And we said one of the limitations of the servlet is that we have the HTML content embedded within the

6
00:00:20,670 --> 00:00:22,650
servlet, which is a Java file.

7
00:00:23,400 --> 00:00:29,550
And we said this is a problem because frontend developers have to work with this Java file in order

8
00:00:29,550 --> 00:00:31,710
to create this HTML content.

9
00:00:32,310 --> 00:00:38,550
Moreover, in future they have to once again work on this file in order to make any changes in the HTML

10
00:00:38,550 --> 00:00:39,120
content.

11
00:00:39,930 --> 00:00:47,730
And now frontend developers are typically not programmers, so they are frontend developers who know

12
00:00:47,730 --> 00:00:50,550
how to create beautiful HTML pages.

13
00:00:51,210 --> 00:00:59,670
So it's not right to expect them to work with a Java file and work with all of these Java code and this

14
00:00:59,850 --> 00:01:01,320
concatenation symbols.

15
00:01:01,470 --> 00:01:05,250
So it's very cumbersome for them in order to work with this file.

16
00:01:05,700 --> 00:01:13,860
So we said that was a problem and we can fix it using the MVC design pattern where we have a separate

17
00:01:13,860 --> 00:01:18,210
view technology, for instance, JSP can act as a view.

18
00:01:18,570 --> 00:01:25,200
So what we would do is we would take all of this HTML content and we would push it into a JSP file.

19
00:01:25,920 --> 00:01:33,840
So we know that an MVC M stands for Model V for Vue and C for controller and controller would be the

20
00:01:33,840 --> 00:01:42,090
servlet itself and Vue would be the JSP file, or it can be other Vue technologies to like faceplates

21
00:01:42,630 --> 00:01:49,650
and model would be the actual business logic like the manager classes, the classes and the database

22
00:01:49,650 --> 00:01:50,180
itself.

23
00:01:50,190 --> 00:01:52,740
So together that would act as the model.

24
00:01:52,770 --> 00:01:54,720
So that's the business logic.

25
00:01:55,050 --> 00:02:01,170
And the main advantage of MVC is to separate out the presentation from the business logic.

26
00:02:01,440 --> 00:02:04,110
The presentation would be part of the JSP file.

27
00:02:04,680 --> 00:02:07,320
So in this demo, that's what we are going to do.

28
00:02:07,350 --> 00:02:14,250
We are going to improve this particular design and we will make it an MVC design pattern.

29
00:02:14,550 --> 00:02:16,710
We will change it into an MVC design pattern.

30
00:02:16,980 --> 00:02:20,670
And in the process we will also look at the JSP.

31
00:02:21,000 --> 00:02:28,560
So JSP has tags, JSP tags, and we are going to get a high level overview of JSP and that should be

32
00:02:28,560 --> 00:02:29,320
really good.

33
00:02:29,340 --> 00:02:36,750
And once you are done with the course, you can further explore about JSP or other more recent technologies,

34
00:02:36,750 --> 00:02:38,260
and you can learn them.

35
00:02:38,280 --> 00:02:45,390
But this should give you a good, nice foundation about MVC using JSP as the Vue technology.

36
00:02:45,900 --> 00:02:54,780
Now we already know that model would be manager classes and also classes and some entities and also

37
00:02:54,780 --> 00:02:55,590
the database.

38
00:02:55,800 --> 00:03:03,030
But for this extension, we are not going to use any any database, but our application has two books.

39
00:03:03,030 --> 00:03:07,680
So what we need to do is we need to create two book instances.

40
00:03:07,680 --> 00:03:15,270
So there will be an entity called Book Ock and we would create two instances of that entity and we will

41
00:03:15,270 --> 00:03:17,790
instantiate them with some state.

42
00:03:18,090 --> 00:03:23,970
The state is nothing but the data that we have seen in the application and we will have a manager class

43
00:03:23,970 --> 00:03:25,950
in order to create those instances.

44
00:03:26,370 --> 00:03:31,280
So I have already created the model, the manager class as well as the entity.

45
00:03:31,290 --> 00:03:36,990
So we are just going to look at that in the interest of time because I want to focus more on JSP.

46
00:03:37,020 --> 00:03:40,010
And so that should be really, really helpful.

47
00:03:40,020 --> 00:03:42,270
So let's go ahead and do that.

48
00:03:42,510 --> 00:03:50,400
So here I have created two new packages called com Semantic Square Books, Aloha entities, and another

49
00:03:50,400 --> 00:03:52,170
one is books aloha managers.

50
00:03:52,530 --> 00:03:57,490
And we already had the controllers package which had this servlet.

51
00:03:57,510 --> 00:04:06,630
So let's look at entities here and we have this class called as Java and all it has is these three fields

52
00:04:06,660 --> 00:04:08,730
image URL, author and rating.

53
00:04:09,180 --> 00:04:15,930
So if you recall in the application, we were displaying two book instances and each of them had an

54
00:04:15,930 --> 00:04:19,170
image which is represented by an image URL.

55
00:04:19,320 --> 00:04:24,210
And we also had the details about the author as well as the rating of the book.

56
00:04:24,510 --> 00:04:31,560
So we just have that information here that is represented using these private fields and we have the

57
00:04:31,560 --> 00:04:34,020
corresponding getters and setters for these fields.

58
00:04:34,170 --> 00:04:38,770
So that's the entity and you can look at it in the resources section.

59
00:04:38,790 --> 00:04:41,250
The next is the books manager class.

60
00:04:41,880 --> 00:04:47,010
And Books Manager class is also implemented as a singleton.

61
00:04:47,040 --> 00:04:52,070
Now, if you recall from our project, all our managers were singletons.

62
00:04:52,080 --> 00:04:56,030
And the way we have done it is we have this object reference.

63
00:04:56,040 --> 00:05:01,590
This is the book Bookman Books Manager instance, and it is a static field.

64
00:05:01,800 --> 00:05:04,160
And here we are instantiating it.

65
00:05:04,170 --> 00:05:11,220
And the constructor is a private constructor and we get this instance via the Get Instance method,

66
00:05:11,220 --> 00:05:12,940
which is a static public method.

67
00:05:12,960 --> 00:05:18,930
That is how we would get hold of this books manager instance, which is a single instance.

68
00:05:19,440 --> 00:05:24,870
And the only other method that we have is this method called us, get my books.

69
00:05:24,870 --> 00:05:26,580
So that's the business logic.

70
00:05:27,060 --> 00:05:34,110
So you can think that there is some database from which the manager would retrieve those two instances

71
00:05:34,110 --> 00:05:37,290
of the books and would return those instances.

72
00:05:37,380 --> 00:05:39,150
So since we do not have the database.

73
00:05:39,330 --> 00:05:41,850
So we are creating that to book instances.

74
00:05:41,850 --> 00:05:43,470
We are quoting the data here.

75
00:05:43,470 --> 00:05:49,500
So this is the first book and we are setting the image URL, the author and the rating for this book.

76
00:05:49,500 --> 00:05:55,800
And then we have the second book here and both the books are added into an ArrayList, which is defined

77
00:05:55,800 --> 00:05:56,450
at the top.

78
00:05:56,460 --> 00:06:02,910
It's called As My Books, and this is the reference type and it is an ArrayList and it is and we are

79
00:06:02,910 --> 00:06:04,800
returning this order list.

80
00:06:05,040 --> 00:06:08,490
But in this method, that's all it is.

81
00:06:08,550 --> 00:06:13,920
And let's go ahead and change this code in order to use.

82
00:06:14,690 --> 00:06:18,920
The model and also to forward it to the GSP.

83
00:06:19,830 --> 00:06:24,560
So I have commented that code here and then I have this template code here.

84
00:06:24,570 --> 00:06:26,850
So it's just a do get method once again.

85
00:06:28,060 --> 00:06:30,010
So there are two steps here.

86
00:06:30,040 --> 00:06:36,520
One is we need to get the data from the model and then we need to forward it to view which is nothing

87
00:06:36,520 --> 00:06:37,810
but the JSP.

88
00:06:38,260 --> 00:06:45,310
So in this particular demo we are going to look at create the JSP file to, but the JSP tags that we

89
00:06:45,310 --> 00:06:48,100
are going to use are some legacy tags.

90
00:06:48,490 --> 00:06:52,210
So it is recommended not to use those tags.

91
00:06:52,420 --> 00:06:59,560
But still I want to show those tags because you may run into some legacy code which uses those tags

92
00:06:59,560 --> 00:07:01,630
and in that case it would be very helpful.

93
00:07:01,810 --> 00:07:04,960
But in the next lecture we will change that.

94
00:07:04,960 --> 00:07:10,600
We will use something called a GST tags, which is an extension of the JSP specification.

95
00:07:10,780 --> 00:07:18,220
And there we will replace the legacy tags with better GSP tags and those tax would lead to more cleaner

96
00:07:18,220 --> 00:07:18,610
code.

97
00:07:18,970 --> 00:07:20,230
So that is in the next lecture.

98
00:07:20,230 --> 00:07:21,430
Let's not worry about it.

99
00:07:21,460 --> 00:07:25,360
Now, the goal here is to fetch the data from the model.

100
00:07:25,480 --> 00:07:27,100
So for that, let's first.

101
00:07:27,880 --> 00:07:28,900
Say books.

102
00:07:35,360 --> 00:07:35,480
Okay.

103
00:07:35,510 --> 00:07:38,750
So let's get the data and it returns.

104
00:07:44,450 --> 00:07:45,660
We need to import them.

105
00:07:45,680 --> 00:07:46,630
Control shift.

106
00:07:46,640 --> 00:07:47,150
Oh.

107
00:07:50,310 --> 00:07:50,780
Said.

108
00:07:51,970 --> 00:07:55,990
So the next thing is this data has to be passed to The View.

109
00:07:56,140 --> 00:07:59,740
And the thing that we do here is we use this request object.

110
00:08:02,040 --> 00:08:04,380
And it has a method called set attribute.

111
00:08:05,280 --> 00:08:07,140
It takes a name and a value.

112
00:08:08,890 --> 00:08:10,450
Name would be a string here.

113
00:08:10,450 --> 00:08:13,420
So let's call it as my books and.

114
00:08:15,220 --> 00:08:22,420
The value would be this object reference, which is an array list of the two books and here books.

115
00:08:22,480 --> 00:08:25,840
Java also has this two string method here.

116
00:08:25,840 --> 00:08:30,790
I have created this two string method because I just want to have a print statement here.

117
00:08:32,480 --> 00:08:37,669
So that we can look at the output in the console, also the Web servers console.

118
00:08:37,940 --> 00:08:40,820
So let me just say my books.

119
00:08:41,750 --> 00:08:43,789
So this is the request object.

120
00:08:43,789 --> 00:08:50,240
And within the request object, we are storing this data that we are getting from the from the model.

121
00:08:50,750 --> 00:08:54,680
So the next step is to forwarded to the JSP.

122
00:08:55,010 --> 00:08:59,180
And for that we use something called as request dispatcher.

123
00:08:59,210 --> 00:09:00,740
Let me just write the code fast.

124
00:09:00,740 --> 00:09:03,170
So once again, we use the request object.

125
00:09:04,680 --> 00:09:09,210
And there is a method called get request.

126
00:09:09,330 --> 00:09:11,130
DISPATCHER Here it is.

127
00:09:12,010 --> 00:09:13,780
And it accepts a string.

128
00:09:14,290 --> 00:09:17,770
And we will name our JSP as my bookstore.

129
00:09:17,770 --> 00:09:18,550
JSP.

130
00:09:19,690 --> 00:09:24,330
So the servlet is also my box and this JSP is also my bookstore.

131
00:09:24,430 --> 00:09:29,590
JSP And it returns something called request.

132
00:09:29,590 --> 00:09:33,160
DISPATCHER Like you expect.

133
00:09:34,140 --> 00:09:36,180
And let's call it as dispatcher.

134
00:09:36,720 --> 00:09:37,920
We need to import that.

135
00:09:38,850 --> 00:09:41,940
Now, the next thing is we should we would say.

136
00:09:43,390 --> 00:09:46,210
DISPATCHER Dot forward.

137
00:09:47,240 --> 00:09:52,520
And we would pass the request itself and the response.

138
00:09:52,970 --> 00:09:59,260
So request and response are the method parameters and we are simply forwarding it here.

139
00:09:59,270 --> 00:10:07,090
So request dispatcher is it's just a mechanism for forwarding control from one component to another.

140
00:10:07,100 --> 00:10:11,450
And one of the components is the servlet and the destination component is the JSP.

141
00:10:11,570 --> 00:10:15,950
So we are forwarding the control from the servlet to the JSP.

142
00:10:16,910 --> 00:10:21,170
So here we are invoking the get request dispatcher and this is how it is done.

143
00:10:21,200 --> 00:10:23,870
It has to be invoked on the request object.

144
00:10:23,870 --> 00:10:25,280
So just keep that in mind.

145
00:10:25,280 --> 00:10:32,120
And we are further invoking the forward method here on the returned dispatcher and we are passing the

146
00:10:32,120 --> 00:10:37,130
same request on response to it so that the JSP can make use of it.

147
00:10:39,520 --> 00:10:46,270
The next goal is to create the GSP file and move everything that we see here into the GSP file.

148
00:10:46,570 --> 00:10:48,070
So we are done with this.

149
00:10:49,120 --> 00:10:49,710
That's here.

150
00:10:49,720 --> 00:10:50,500
Let me put this.

151
00:10:50,500 --> 00:10:51,280
Let me call it.

152
00:10:52,770 --> 00:10:54,030
With the sublet part.

153
00:10:54,300 --> 00:10:57,350
So in order to create the JSP, let's go here.

154
00:10:57,360 --> 00:11:00,570
Books right click say new.

155
00:11:01,700 --> 00:11:04,340
Here you can select the JSP file.

156
00:11:06,490 --> 00:11:07,720
My books.

157
00:11:08,920 --> 00:11:10,150
It's called my books.

158
00:11:11,850 --> 00:11:13,890
And it also creates some template code.

159
00:11:13,920 --> 00:11:14,670
Here it is.

160
00:11:15,420 --> 00:11:22,050
Now, here, right at the beginning, we have this thing called a page directive, which is a JSP tag.

161
00:11:22,680 --> 00:11:25,200
So it already has some attributes here.

162
00:11:25,380 --> 00:11:30,540
So one of the things that we need to add here is something called as an input attribute.

163
00:11:31,860 --> 00:11:38,140
So we need that because we are going to use the book instance as well as the ArrayList here.

164
00:11:38,160 --> 00:11:39,540
So let me just put it.

165
00:11:39,540 --> 00:11:42,300
It should be clear pretty soon import.

166
00:11:45,060 --> 00:11:48,780
And let me go back to the servlet and import.

167
00:11:49,660 --> 00:11:54,130
This book because we need to access it here.

168
00:11:56,630 --> 00:12:01,430
So we are importing it and a comma because we also need the collection.

169
00:12:02,350 --> 00:12:03,610
So let me go back.

170
00:12:04,150 --> 00:12:04,810
This one.

171
00:12:04,810 --> 00:12:07,090
Let's take this collection.

172
00:12:12,240 --> 00:12:12,810
That's it.

173
00:12:13,470 --> 00:12:18,900
Now, the next thing I would do is I would go into this, my bookstore, HTML, and we have all of this

174
00:12:18,900 --> 00:12:19,620
content.

175
00:12:19,860 --> 00:12:22,080
So let me just copy all of this.

176
00:12:23,290 --> 00:12:27,460
Go into my bookstore JSP and replace this with this.

177
00:12:28,970 --> 00:12:30,710
Och, that's the thing.

178
00:12:30,830 --> 00:12:34,140
And here we already looked at this file.

179
00:12:34,160 --> 00:12:36,620
So we have within the body.

180
00:12:36,620 --> 00:12:38,360
The body has the main content.

181
00:12:39,560 --> 00:12:42,280
And here, let me call it as books.

182
00:12:42,870 --> 00:12:43,730
Aloha.

183
00:12:45,130 --> 00:12:46,150
And this is the body.

184
00:12:46,150 --> 00:12:52,180
Body actually has the main content and this is the this is the header where we were displaying the the

185
00:12:52,180 --> 00:12:53,530
name of the application.

186
00:12:53,740 --> 00:12:55,810
And here we have to break tags.

187
00:12:55,810 --> 00:12:58,660
Each break tag would insert an empty line.

188
00:12:58,930 --> 00:13:06,010
And then we had this table here, if you recall, right, we had the table and each row was displaying

189
00:13:06,280 --> 00:13:07,210
each of the box.

190
00:13:07,540 --> 00:13:15,310
But here all of this data would come from the would come from the modal which we are forwarding from

191
00:13:15,310 --> 00:13:16,240
the servlet.

192
00:13:16,240 --> 00:13:16,840
Right.

193
00:13:18,260 --> 00:13:19,730
It's getting forwarded here.

194
00:13:19,910 --> 00:13:25,510
So we need to use that data so we cannot we don't need this hard coded data anymore.

195
00:13:25,520 --> 00:13:29,600
So let me go ahead and first remove this second book.

196
00:13:30,500 --> 00:13:30,750
Okay.

197
00:13:30,770 --> 00:13:31,940
We don't need this.

198
00:13:32,800 --> 00:13:36,580
And we need to use a further loop here.

199
00:13:36,580 --> 00:13:37,960
We will use a for loop.

200
00:13:38,710 --> 00:13:45,070
And we are going to create these two roles and we will fill up these details here.

201
00:13:45,280 --> 00:13:48,820
So for this, we use something called a triplet.

202
00:13:49,350 --> 00:13:52,090
Triplet is a GSP GSP tag.

203
00:13:52,420 --> 00:13:55,480
So it starts like this.

204
00:13:57,400 --> 00:14:00,910
So we need that ArrayList, which has the data.

205
00:14:01,630 --> 00:14:05,170
So if you recall it as collection of book.

206
00:14:05,840 --> 00:14:08,050
Once again, let's call it as my books.

207
00:14:09,310 --> 00:14:11,140
And we will set a request.

208
00:14:12,490 --> 00:14:14,050
Dot get.

209
00:14:14,980 --> 00:14:15,930
Attribute.

210
00:14:16,630 --> 00:14:24,220
Here we were setting the attribute here so we would just use the method, get attribute in order to

211
00:14:24,250 --> 00:14:25,150
get the books.

212
00:14:25,150 --> 00:14:28,120
So for this we will just use the string.

213
00:14:28,870 --> 00:14:30,070
So it's like a map.

214
00:14:30,070 --> 00:14:32,860
Think of it as a map, as a hash map, something like that.

215
00:14:34,830 --> 00:14:35,910
And this is a key.

216
00:14:39,760 --> 00:14:39,980
Okay.

217
00:14:40,060 --> 00:14:40,660
That's it.

218
00:14:40,780 --> 00:14:43,420
But get attribute returns an object.

219
00:14:43,540 --> 00:14:46,060
So we need to change it to.

220
00:14:50,290 --> 00:14:50,770
That's it.

221
00:14:51,070 --> 00:14:53,080
Next, we need to use a furlough.

222
00:15:09,580 --> 00:15:11,950
And we need an ending tag here.

223
00:15:12,520 --> 00:15:13,930
So this is a script.

224
00:15:14,230 --> 00:15:15,460
This is called as a script lit.

225
00:15:15,460 --> 00:15:19,370
And within the script lit we can use the regular Java code.

226
00:15:19,390 --> 00:15:24,590
So we have the regular Java code here and it is being used in this script.

227
00:15:25,060 --> 00:15:31,600
So we need a script here so that we can get the, the list and we have the we can we have the first

228
00:15:31,600 --> 00:15:32,290
statement.

229
00:15:32,290 --> 00:15:35,650
But to end the first statement, we need another script here.

230
00:15:37,270 --> 00:15:38,740
Now for this.

231
00:15:39,870 --> 00:15:41,880
Here is the list.

232
00:15:42,180 --> 00:15:44,130
And here we will say.

233
00:15:45,680 --> 00:15:47,810
Let's call this a GSP expression tag.

234
00:15:47,810 --> 00:15:49,070
So you will have.

235
00:15:50,000 --> 00:15:54,440
This arrow symbol and the percentage followed by equals two.

236
00:15:54,680 --> 00:15:57,880
So here we the equal two symbol, is not there in a script.

237
00:15:58,130 --> 00:16:00,620
And this is called a GSP expression tag.

238
00:16:00,740 --> 00:16:03,230
And here we will just say book.

239
00:16:04,970 --> 00:16:06,500
Dot get.

240
00:16:07,500 --> 00:16:09,810
Image URL.

241
00:16:10,110 --> 00:16:15,090
So we are accessing the get image URL method and the book class.

242
00:16:15,090 --> 00:16:22,470
So if you see here we had this thing get image URL, it's a getter and we will also use the to other

243
00:16:22,470 --> 00:16:25,140
getters, get author and get rating.

244
00:16:26,250 --> 00:16:33,630
So that's for the image URL and it will copy the so get image URL will return the URL and that URL will

245
00:16:33,630 --> 00:16:37,500
be copied here and there shouldn't be any semicolon here.

246
00:16:37,500 --> 00:16:41,990
So it would be and this is an expression, so it's called a JSP expression.

247
00:16:42,000 --> 00:16:45,330
Now let's take this and let's do the same thing here.

248
00:16:59,830 --> 00:17:00,460
That's it.

249
00:17:00,760 --> 00:17:06,250
And so the loop would iterate twice because we have two books and it would display the values.

250
00:17:06,250 --> 00:17:10,920
So let me go ahead and let me create the VAR file.

251
00:17:10,930 --> 00:17:13,089
So we looked at three tags here.

252
00:17:13,089 --> 00:17:19,270
So one is the page directive here and it helps us to import the book as well as the collection classes.

253
00:17:19,270 --> 00:17:25,750
Collection is an interface and then we use this triplet in order to have this Java code and in order

254
00:17:25,750 --> 00:17:32,380
to print the value, we are using this GSP expression and we are accessing this method here.

255
00:17:34,060 --> 00:17:34,630
And that's it.

256
00:17:34,630 --> 00:17:38,290
And we are doing the same for author as well as the rating.

257
00:17:38,290 --> 00:17:42,460
So those are the three JSP tags and we can also have some comment.

258
00:17:44,340 --> 00:17:47,010
This is how you would put a comment and JSP.

259
00:17:47,820 --> 00:17:49,740
So let's just say displaying.

260
00:17:51,030 --> 00:17:53,760
Books that suggest comment.

261
00:17:53,850 --> 00:17:58,230
And there is one other thing called JSP Declaration, but let's not get into that.

262
00:17:58,230 --> 00:18:04,920
So these are some legacy tags and let's go ahead and export.

263
00:18:06,210 --> 00:18:06,300
Okay.

264
00:18:06,360 --> 00:18:07,340
We are done with that.

265
00:18:07,350 --> 00:18:08,670
So our file.

266
00:18:13,090 --> 00:18:14,260
It's quoted in books.

267
00:18:15,980 --> 00:18:16,730
Aloha.

268
00:18:22,740 --> 00:18:23,610
And here it is.

269
00:18:23,610 --> 00:18:25,070
Books all over that war.

270
00:18:25,650 --> 00:18:28,440
So let me just say I'll see.

271
00:18:30,970 --> 00:18:34,030
And here in my seat, I have TomKat.

272
00:18:34,060 --> 00:18:35,680
Within that, we have Web apps.

273
00:18:35,680 --> 00:18:38,770
So within the Web apps folder and just copying it.

274
00:18:39,190 --> 00:18:41,020
And let me go back to my bin.

275
00:18:42,450 --> 00:18:44,610
Let me start the Tomcat.

276
00:18:49,950 --> 00:18:51,480
Let's go back to Web apps.

277
00:18:55,170 --> 00:18:57,150
So bookseller has is unpacked now.

278
00:18:58,150 --> 00:19:00,580
So here, let's say.

279
00:19:01,530 --> 00:19:03,930
Local host and books.

280
00:19:03,930 --> 00:19:06,150
Aloha slash my books.

281
00:19:07,980 --> 00:19:08,550
There you go.

282
00:19:08,550 --> 00:19:13,620
So we have the content which is being fetched from the JSP file.

283
00:19:14,610 --> 00:19:16,560
So that's about it.

284
00:19:17,070 --> 00:19:23,580
And as of today, as of today, the latest version of JSP is JSP 2.3.

285
00:19:23,940 --> 00:19:27,480
Now, I want to give some background also on JSP.

286
00:19:27,810 --> 00:19:34,110
So JSP is we have seen the JSP, but it actually converts into a servlet.

287
00:19:34,440 --> 00:19:41,370
So what happens is so we had this request, we made this request to the controller and the controller

288
00:19:41,370 --> 00:19:47,220
has fetched the data from the model and it has given the data, it has forwarded the data to the JSP.

289
00:19:47,400 --> 00:19:55,320
So on the very first axis, what the container does, this container takes the JSP file and it converts

290
00:19:55,320 --> 00:19:59,520
it into a servlet and then it compiles that servlet.

291
00:19:59,520 --> 00:20:04,470
So when it converts, when it translates into servlet, so it would be a Java file.

292
00:20:05,040 --> 00:20:06,360
So that's the first step.

293
00:20:06,360 --> 00:20:13,140
And after doing that, it compiles that Java file, that servlet, and that's it, and thereafter it

294
00:20:13,140 --> 00:20:13,830
uses that.

295
00:20:13,980 --> 00:20:22,230
So it may happen either during the first access or some of the vendors like Tomcat do also provide an

296
00:20:22,230 --> 00:20:28,230
option to pre compile the JSP files, that is, to convert them into servlet and also to compile them.

297
00:20:28,440 --> 00:20:36,720
So essentially a JSP file is a servlet and if you're interested, you can also look at that file here.

298
00:20:36,990 --> 00:20:42,840
So if you go into the root directory of Tomcat, so we have this folder called Work.

299
00:20:43,320 --> 00:20:45,660
So we have web apps, bin and all other folders.

300
00:20:45,660 --> 00:20:54,090
So there is this work, double click that Catalina local host and books aloha is our project or G Apache

301
00:20:54,090 --> 00:20:56,700
JSP and this is the file.

302
00:20:57,090 --> 00:20:58,500
So this is our servlet.

303
00:20:58,500 --> 00:21:00,480
It has this thing called my books.

304
00:21:00,480 --> 00:21:08,160
My books was the name of the JSP file and then it appended this underscore and JSP to create the servlet.

305
00:21:08,160 --> 00:21:12,570
So this is a Java file and then that's servlet has been compiled.

306
00:21:13,080 --> 00:21:18,240
So the container, it's the cool thing here is the container is doing all of that, all of this, it

307
00:21:18,240 --> 00:21:23,610
is translating into the servlet and then further it is compiling it also.

308
00:21:24,000 --> 00:21:25,680
So let me just open this.

309
00:21:28,070 --> 00:21:29,390
This is how it looks.

310
00:21:30,440 --> 00:21:30,890
Okay.

311
00:21:33,640 --> 00:21:38,350
I'm not going to get into the details of this so you can learn about it later.

312
00:21:40,390 --> 00:21:48,490
So one of the problems here as in this JSP, as I said, that these are legacy code and you are not

313
00:21:48,490 --> 00:21:50,260
recommended to use them anymore.

314
00:21:50,350 --> 00:21:54,700
And the reason for that is so we have already enhanced the design.

315
00:21:54,700 --> 00:21:56,590
We have this MVC design pattern.

316
00:21:56,620 --> 00:22:00,550
But as you can see, we have we still have some Java code here.

317
00:22:00,820 --> 00:22:07,810
So a frontend developer who is not a Java programmer still has to deal with some Java code and that

318
00:22:07,810 --> 00:22:08,590
is not good.

319
00:22:08,710 --> 00:22:10,680
So we want to avoid that.

320
00:22:10,690 --> 00:22:16,990
And you can also see all of these triplet tags and then we have a couple more here.

321
00:22:17,380 --> 00:22:18,600
So that is not good.

322
00:22:18,610 --> 00:22:21,730
So the frontend developers should not be dealing with that.

323
00:22:21,820 --> 00:22:27,730
And that's where GSD comes into play and that's the subject of the next lecture.

324
00:22:27,730 --> 00:22:30,430
And we will just take a very quick look at JSTOR.

325
00:22:30,940 --> 00:22:34,150
So that's about it for now and thank you and happy coding.

