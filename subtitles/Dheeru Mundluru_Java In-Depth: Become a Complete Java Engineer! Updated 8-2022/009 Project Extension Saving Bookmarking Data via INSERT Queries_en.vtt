WEBVTT
1
00:00:02.180 --> 00:00:02.969
Hi there.

2
00:00:02.990 --> 00:00:04.970
This is De La Rue and welcome back.

3
00:00:05.270 --> 00:00:11.690
So in the last lecture, we have seen how we can programmatically read data from the database.

4
00:00:12.080 --> 00:00:15.260
So we have loaded all the data needed from the database.

5
00:00:15.260 --> 00:00:20.000
And now we will see how we can programmatically write data to the database.

6
00:00:20.420 --> 00:00:26.210
Now, in order to do that, what we are going to do as we are going to look at the bookmarking process

7
00:00:26.210 --> 00:00:26.820
itself.

8
00:00:26.840 --> 00:00:32.630
In the previous lecture we have commented this code out the START method and the START method actually

9
00:00:32.630 --> 00:00:34.660
initiates the bookmarking process.

10
00:00:34.670 --> 00:00:41.330
So this start is invoking this is in the launch Java, it's invoking the start method and here we are

11
00:00:41.360 --> 00:00:47.180
iterating through each of the users and we are simulating the bookmarking process for each of the user

12
00:00:47.480 --> 00:00:50.150
and view as a class you may recall.

13
00:00:50.150 --> 00:00:52.010
And it corresponds to the UI.

14
00:00:52.040 --> 00:00:57.620
Since we don't have the UI, we are just use making use of this Java class and there is this method

15
00:00:57.620 --> 00:01:03.440
called Browse which has been appropriately named and the browser will take just the two parameters user

16
00:01:03.440 --> 00:01:05.600
as well as all of the bookmarks.

17
00:01:05.600 --> 00:01:08.150
So it's a list of list of bookmarks.

18
00:01:08.150 --> 00:01:15.500
So the internal list would be a list of a particular bookmark type like a list of book, list of books

19
00:01:15.500 --> 00:01:16.820
or list of movies.

20
00:01:16.820 --> 00:01:19.070
So one element would be list of books.

21
00:01:19.070 --> 00:01:22.430
Another element would be list of movies, and the third one would be list of web links.

22
00:01:22.850 --> 00:01:24.830
So it's a list of list of items.

23
00:01:25.040 --> 00:01:28.820
Now here we are iterating through this particular data structure.

24
00:01:28.820 --> 00:01:35.000
So in each iteration, we are we are going to look at a particular item, a particular type of item,

25
00:01:35.000 --> 00:01:37.820
like a list of books or a list of movies.

26
00:01:38.030 --> 00:01:44.210
So and then we are iterating through that particular list of that particular type of bookmark.

27
00:01:44.240 --> 00:01:47.630
So in one of the iterations it could be a list of books.

28
00:01:47.870 --> 00:01:52.400
So here that's what we are doing and we are getting a bookmark decision.

29
00:01:52.400 --> 00:01:54.950
So we are using randomization process.

30
00:01:54.950 --> 00:01:57.530
If you click on this, you can see that it's a random process.

31
00:01:57.650 --> 00:02:06.140
So we are not really asking the user for a particular decision whether he or she wants to bookmark or

32
00:02:06.140 --> 00:02:06.500
not.

33
00:02:06.500 --> 00:02:08.449
But we are just using randomization process.

34
00:02:08.449 --> 00:02:14.030
You may recall that and once if this particular method returns a true, then we are.

35
00:02:14.300 --> 00:02:20.330
It means that the user is interested and bookmarking that particular item and we are notifying the back

36
00:02:20.330 --> 00:02:20.630
end.

37
00:02:20.630 --> 00:02:25.850
So this is like the UI and we are passing that information to the back end.

38
00:02:25.850 --> 00:02:28.010
So in the back end we have the controller.

39
00:02:28.010 --> 00:02:36.890
So if if you recall, we were, we discussed about the MVC design pattern and we have written our code

40
00:02:36.890 --> 00:02:39.890
in the same pattern using the same pattern.

41
00:02:39.890 --> 00:02:42.170
So we have the controller there in the back end.

42
00:02:42.170 --> 00:02:48.620
So this is the first place in the back end where in the, on the server side where the request would

43
00:02:48.620 --> 00:02:49.490
be received.

44
00:02:49.490 --> 00:02:56.270
So we are invoking this method called save user bookmark and we are passing the user information as

45
00:02:56.270 --> 00:02:59.420
well as the bookmark information that the user is interested in.

46
00:02:59.420 --> 00:02:59.780
Bookmark.

47
00:03:00.230 --> 00:03:00.710
Right.

48
00:03:00.710 --> 00:03:01.910
And if you click that.

49
00:03:03.110 --> 00:03:04.640
So this would be like a controller.

50
00:03:04.640 --> 00:03:06.120
So it says servlet.

51
00:03:06.140 --> 00:03:14.420
It would be a servlet in a real Java application, and this controller would invoke a method in the

52
00:03:14.420 --> 00:03:14.930
manager.

53
00:03:14.930 --> 00:03:20.620
So we have the bookmark managers and the manager would in turn invoke the DAO layer, right.

54
00:03:20.630 --> 00:03:23.000
So it would be controller to manager manager to.

55
00:03:23.450 --> 00:03:27.650
So it is going to invoke a similarly named method called save user bookmark.

56
00:03:28.850 --> 00:03:30.410
And this is how it looks.

57
00:03:30.410 --> 00:03:31.920
So I did not change anything.

58
00:03:31.940 --> 00:03:37.850
So here we are creating an instance of this class called this user bookmark, which maintains the relationship

59
00:03:37.850 --> 00:03:40.010
between a user and a bookmark.

60
00:03:40.430 --> 00:03:43.520
It means that this particular user has bookmark.

61
00:03:43.520 --> 00:03:49.400
This particular bookmark and this bookmark could be any of the three types of bookmarks book, movie,

62
00:03:49.400 --> 00:03:50.810
or a web link.

63
00:03:51.260 --> 00:03:53.810
And we also have some old code here.

64
00:03:53.820 --> 00:03:55.070
Let's just remove it.

65
00:03:58.560 --> 00:04:00.720
And finally, we are invoking the Dowler.

66
00:04:00.720 --> 00:04:07.760
And Dowler is is what actually interacts with the database right in our code.

67
00:04:07.770 --> 00:04:12.060
We are just simply storing it in a data structure by invoking this ad method.

68
00:04:12.090 --> 00:04:14.940
Now we are going to replace this and we are going to.

69
00:04:15.540 --> 00:04:16.510
Sorry for that.

70
00:04:16.529 --> 00:04:18.959
We are going to add some code here.

71
00:04:20.079 --> 00:04:21.519
We went right to the database.

72
00:04:21.790 --> 00:04:23.650
So this is a user bookmark.

73
00:04:24.070 --> 00:04:30.160
But in the database, let's just maintain three different tables called user underscore book, user

74
00:04:30.160 --> 00:04:36.700
underscore movie and user underscore web link to capture the user bookmarking actions.

75
00:04:37.390 --> 00:04:41.380
So that's what we are going to do and we still have to create those tables.

76
00:04:41.380 --> 00:04:48.640
So I have already created the tables here, user underscore book and it would have three columns ID,

77
00:04:48.670 --> 00:04:50.890
user underscore ID and book underscore ID.

78
00:04:51.220 --> 00:04:53.560
And so this is a user underscore book.

79
00:04:53.560 --> 00:04:58.710
So it would keep track of all the books that have been bookmarked by the different users.

80
00:04:58.720 --> 00:05:03.760
That's why you have user underscore ID and book underscore ID and user underscore ID would reference

81
00:05:03.760 --> 00:05:08.710
the ID and the user table and book underscore ID would reference the ID in the book table.

82
00:05:09.760 --> 00:05:15.820
And similarly, you have user underscore movie and user underscore web link and user underscore movie

83
00:05:15.820 --> 00:05:21.130
that the foreign keys are user underscore ID and movie underscore ID, which is referencing the ID in

84
00:05:21.130 --> 00:05:24.510
movie and similarly in user underscore web link.

85
00:05:24.520 --> 00:05:30.280
So once again, you have the user underscore ID and a weblink underscore ID and weblink underscore ID

86
00:05:30.280 --> 00:05:32.400
would reference the ID in the weblink.

87
00:05:32.410 --> 00:05:37.000
So let's go ahead and just execute these three different queries.

88
00:05:38.700 --> 00:05:40.110
I'm already here.

89
00:05:41.500 --> 00:05:42.000
That's it.

90
00:05:42.050 --> 00:05:44.450
So all three tables have been created.

91
00:05:45.230 --> 00:05:48.140
Now, let's go back into our code here.

92
00:05:49.310 --> 00:05:49.670
Now.

93
00:05:49.670 --> 00:05:51.770
So this is no longer needed.

94
00:05:51.860 --> 00:05:58.700
So we need to create, right, our new code to insert all of the data in the user bookmark.

95
00:05:59.060 --> 00:06:00.500
So here.

96
00:06:02.550 --> 00:06:03.030
It's this.

97
00:06:03.030 --> 00:06:04.200
Copy this code.

98
00:06:04.680 --> 00:06:10.350
We need to get a connection to the database, and we need to execute the statements.

99
00:06:10.620 --> 00:06:17.250
Now, here, just note that here we are using the same connection object when we are accessing when

100
00:06:17.250 --> 00:06:18.460
we are retrieving the data.

101
00:06:18.570 --> 00:06:19.770
In each of these methods.

102
00:06:20.010 --> 00:06:24.210
So just remember that and both connection, object and statement.

103
00:06:24.210 --> 00:06:31.080
Both of them have closed methods and since we are using a try with resource's syntax so the closed methods

104
00:06:31.080 --> 00:06:32.610
would be automatically invoked.

105
00:06:34.570 --> 00:06:35.620
Go back to.

106
00:06:39.060 --> 00:06:39.690
Bookmark.

107
00:06:39.700 --> 00:06:41.850
Doyle, let me just put this.

108
00:06:42.450 --> 00:06:44.220
Let me remove these four statements.

109
00:06:46.180 --> 00:06:46.450
Right.

110
00:06:46.450 --> 00:06:47.800
So this is what we have.

111
00:06:49.400 --> 00:06:51.500
So we discussed that already.

112
00:06:51.890 --> 00:06:52.730
Now.

113
00:06:53.660 --> 00:06:55.850
Let's try three different methods here.

114
00:06:55.880 --> 00:06:59.300
Let's just say so we have this user bookmark.

115
00:06:59.660 --> 00:07:00.950
Let's say user.

116
00:07:01.850 --> 00:07:04.200
Bookmark dot.

117
00:07:05.720 --> 00:07:07.040
Get bookmark.

118
00:07:07.870 --> 00:07:15.430
Now, if it is an instance of a book, this particular book is an instance of book.

119
00:07:15.670 --> 00:07:23.620
Let's invoke a method called Save User Book and let's pass this user bookmark.

120
00:07:25.610 --> 00:07:28.940
Which has the information about the user as well as the bookmark.

121
00:07:29.390 --> 00:07:32.840
And let's also pass this statement object.

122
00:07:33.860 --> 00:07:36.110
And let's do the same.

123
00:07:40.520 --> 00:07:41.930
This would be us.

124
00:07:42.110 --> 00:07:44.960
And let's make this movie.

125
00:07:45.960 --> 00:07:49.950
In which case let's invoke a method called user movie.

126
00:07:49.980 --> 00:07:52.680
And in this case, let's invoke a method called user.

127
00:07:54.010 --> 00:07:54.820
Weblink.

128
00:07:55.810 --> 00:07:58.480
And we don't need this because it's an l slope.

129
00:07:58.780 --> 00:07:59.680
Let's remove that.

130
00:08:00.160 --> 00:08:01.580
So this is what we have.

131
00:08:01.600 --> 00:08:03.220
So let me just add this.

132
00:08:03.810 --> 00:08:04.390
Create.

133
00:08:05.170 --> 00:08:06.610
Create a private method.

134
00:08:07.240 --> 00:08:08.140
Here it is.

135
00:08:08.620 --> 00:08:11.150
So now we need to build our query.

136
00:08:11.170 --> 00:08:14.650
So let's say string query.

137
00:08:16.770 --> 00:08:19.590
So we created the user underscore book table.

138
00:08:19.620 --> 00:08:24.360
So for inserting we know that it would be insert into.

139
00:08:26.620 --> 00:08:28.090
User underscore Burke.

140
00:08:29.190 --> 00:08:31.290
And we need to put the user.

141
00:08:32.400 --> 00:08:33.919
Underscore ID.

142
00:08:34.289 --> 00:08:34.960
Come on.

143
00:08:35.100 --> 00:08:40.500
So if you you're here, you can see that the user underscore has user underscore ID and book underscore

144
00:08:40.500 --> 00:08:44.710
ID and the ID field is auto increment, so it will be automatically created.

145
00:08:44.730 --> 00:08:49.860
So we just need to add the user ID underscore and book underscore ID and we can do it from the user

146
00:08:49.860 --> 00:08:51.330
bookmark instance there.

147
00:08:51.990 --> 00:08:58.380
And the second is, so it's just like the insert query which we created earlier in one of the earlier

148
00:08:58.380 --> 00:08:58.800
lectures.

149
00:08:58.800 --> 00:09:05.370
It's just that we are constructing a similar kind of insert statement and we are passing it to our database.

150
00:09:05.370 --> 00:09:06.420
We are the statement.

151
00:09:06.420 --> 00:09:08.310
We we are the statement object.

152
00:09:09.870 --> 00:09:11.070
So values.

153
00:09:11.910 --> 00:09:16.470
Speech concatenation and we need to give the.

154
00:09:18.190 --> 00:09:19.660
User underscore ID.

155
00:09:19.690 --> 00:09:21.130
So that would be.

156
00:09:22.660 --> 00:09:23.260
This.

157
00:09:24.770 --> 00:09:28.910
Get user dot get ID.

158
00:09:31.070 --> 00:09:36.950
CUOMO So the next value would be the underscore ID, so we would say user bookmark.

159
00:09:37.520 --> 00:09:40.880
Just remember that it has both user as well as book.

160
00:09:40.880 --> 00:09:42.290
So let's say get.

161
00:09:43.240 --> 00:09:44.140
Bookmark.

162
00:09:45.040 --> 00:09:49.230
Don't get ID and that's it.

163
00:09:49.240 --> 00:09:50.980
We just have to close it here.

164
00:09:54.640 --> 00:09:57.670
Now we just say statement dot.

165
00:09:58.430 --> 00:09:59.500
It's a cute.

166
00:10:00.700 --> 00:10:01.330
Update.

167
00:10:01.330 --> 00:10:05.800
So if you recall in data store here we had.

168
00:10:07.990 --> 00:10:09.320
Execute query.

169
00:10:09.340 --> 00:10:13.900
So if you are if you are executing a select query, you would use execute query.

170
00:10:13.960 --> 00:10:20.560
But if you are going to insert or update or delete or if you're using one of those statements or even

171
00:10:20.560 --> 00:10:26.380
if you're creating a table which is from the programmatically, which is very, very rare, even for

172
00:10:26.380 --> 00:10:28.960
that you would you would use an execute update.

173
00:10:29.170 --> 00:10:31.540
So this is a different method and statement object.

174
00:10:31.930 --> 00:10:39.340
And here it says that executes the given statement, which may be an insert update or delete or even

175
00:10:39.340 --> 00:10:41.380
an SQL statement that returns nothing.

176
00:10:41.650 --> 00:10:44.770
So this method would it would return an end.

177
00:10:45.950 --> 00:10:46.310
Okay.

178
00:10:47.090 --> 00:10:49.910
So it would return the number of rows that have been updated.

179
00:10:49.910 --> 00:10:54.370
So if we insert a single row, it would it would return a value of one executable.

180
00:10:54.380 --> 00:11:03.770
It would return a value of one or it says or zero zero would be when we execute like a create statement.

181
00:11:04.190 --> 00:11:06.710
So anyway, so this is, that's what it is.

182
00:11:06.710 --> 00:11:08.270
So let's do that.

183
00:11:11.840 --> 00:11:15.590
This is going through an obscure exception they say throws.

184
00:11:16.950 --> 00:11:17.580
That's it.

185
00:11:17.670 --> 00:11:19.680
Now you just have two more methods.

186
00:11:25.030 --> 00:11:26.800
For this also it would be.

187
00:11:28.040 --> 00:11:29.710
The same kind of query.

188
00:11:29.720 --> 00:11:31.070
So let me copy it.

189
00:11:33.370 --> 00:11:35.530
So this would be user underscore.

190
00:11:37.020 --> 00:11:40.380
Movie and this would be movie underscore.

191
00:11:41.420 --> 00:11:42.190
Heidi.

192
00:11:42.710 --> 00:11:45.680
And this would also throw exception.

193
00:11:47.300 --> 00:11:47.900
And.

194
00:11:49.720 --> 00:11:50.260
That's it.

195
00:11:50.260 --> 00:11:56.870
So that's what the movie did is still the same and for movie underscore ID it's just to get bookmarked

196
00:11:56.920 --> 00:11:58.730
on dot get bookmarked, get it.

197
00:11:59.140 --> 00:12:00.370
There is no change there.

198
00:12:01.000 --> 00:12:02.830
And this is the Web link.

199
00:12:04.050 --> 00:12:05.190
Create method.

200
00:12:07.970 --> 00:12:09.200
Just copy this.

201
00:12:12.740 --> 00:12:13.940
What draws.

202
00:12:15.150 --> 00:12:16.260
And this would be.

203
00:12:22.500 --> 00:12:23.130
That's it.

204
00:12:24.280 --> 00:12:27.280
So we have all the three methods in place.

205
00:12:28.780 --> 00:12:29.740
You save it.

206
00:12:31.680 --> 00:12:32.490
And.

207
00:12:33.270 --> 00:12:34.740
In the view method.

208
00:12:34.890 --> 00:12:37.680
So this is the code that is being used.

209
00:12:38.010 --> 00:12:43.480
There is also this code for marking as kid friendly and mark and sharing the bookmark.

210
00:12:43.500 --> 00:12:49.090
So I commented that code for now because it also requires some some database changes.

211
00:12:49.110 --> 00:12:50.900
So we are just going to look at this.

212
00:12:50.910 --> 00:12:55.140
So let's go ahead and launch and let me run this.

213
00:12:56.990 --> 00:12:57.440
Okay.

214
00:12:57.440 --> 00:13:00.200
So let me let's look at the database.

215
00:13:06.650 --> 00:13:11.690
So as you can see, the user bookmarks table has been populated.

216
00:13:11.690 --> 00:13:18.320
So this word captured the all of the actions, which means that this user has bookmarked this particular

217
00:13:18.320 --> 00:13:20.990
ID book with this particular ID.

218
00:13:21.020 --> 00:13:27.020
So if we can join the tables, we can easily see what what has been bookmarked.

219
00:13:27.020 --> 00:13:33.710
But you can see that the bookmarking process has happened successfully for that table.

220
00:13:33.710 --> 00:13:35.570
And you also see that.

221
00:13:37.950 --> 00:13:39.110
Four more years, too.

222
00:13:39.380 --> 00:13:40.330
So that's about it.

223
00:13:40.340 --> 00:13:43.880
That's how you would insert data in a programmatic way.

224
00:13:43.880 --> 00:13:46.610
And we have we could refactor our code.

225
00:13:46.880 --> 00:13:51.230
And in the next lecture we will also look at the update queries.

226
00:13:51.230 --> 00:13:55.220
We would have a new type of query called update, which would modify the data.

227
00:13:55.370 --> 00:13:57.110
And for that we will be.

228
00:13:58.340 --> 00:14:01.570
Uncomment this and we will make some changes in the database.

229
00:14:01.580 --> 00:14:02.640
So that's about it.

230
00:14:02.660 --> 00:14:04.100
Thank you and happy coding.

