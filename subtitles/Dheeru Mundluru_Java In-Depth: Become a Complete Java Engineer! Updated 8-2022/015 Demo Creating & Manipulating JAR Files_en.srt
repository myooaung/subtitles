1
00:00:02,080 --> 00:00:02,969
Hi there.

2
00:00:02,980 --> 00:00:04,180
This is Lou.

3
00:00:04,180 --> 00:00:05,180
And welcome back.

4
00:00:05,200 --> 00:00:10,540
Let's now go ahead and create a jar file and also manipulate the jar file.

5
00:00:10,990 --> 00:00:15,010
So we'll be using all the commands that we have seen in the previous lecture.

6
00:00:15,130 --> 00:00:22,090
But before doing that, let's go ahead and see how a jar can be created from within our ID, because

7
00:00:22,090 --> 00:00:24,990
ID is something that we use all the time.

8
00:00:25,000 --> 00:00:30,220
So we need to first see how we can create a jar from within our ID.

9
00:00:30,250 --> 00:00:33,640
And that's the most convenient way to create a jar file.

10
00:00:33,970 --> 00:00:35,250
So let's do that.

11
00:00:35,260 --> 00:00:42,820
So here we have the eclipse and we have the trillion web project and trillion web has all of these different

12
00:00:42,820 --> 00:00:45,410
packages which has the Java files.

13
00:00:45,430 --> 00:00:52,000
So let's go ahead and create a jar file that would include just this package called util, which has

14
00:00:52,000 --> 00:00:53,710
some utility files.

15
00:00:54,070 --> 00:00:56,950
So we would create something like a utility jar.

16
00:00:57,010 --> 00:01:02,680
And these utility files are very much reusable and they can be used across projects.

17
00:01:02,890 --> 00:01:08,860
Or if you have some partner companies, you can actually give them the utility jar and they can add

18
00:01:08,860 --> 00:01:13,180
it to their build path and start using these files by importing them.

19
00:01:13,810 --> 00:01:19,600
So for this, all we need to do is we have to right click here on the package or we can also right click

20
00:01:19,600 --> 00:01:20,080
here.

21
00:01:20,080 --> 00:01:22,390
So let me do it from here.

22
00:01:22,390 --> 00:01:27,520
And then later we'll come back and right click from here and create a jar from here.

23
00:01:27,520 --> 00:01:29,020
First, let me show it from here.

24
00:01:29,020 --> 00:01:35,230
So let me right click here and just click on export and click on export here.

25
00:01:35,590 --> 00:01:37,680
And this would open this window.

26
00:01:37,690 --> 00:01:45,130
So, so if it is like this, just expand the Java node here, click on the Jar Jar file or just type

27
00:01:45,130 --> 00:01:49,990
jar here and it will show you just the just the jar entries.

28
00:01:50,080 --> 00:01:52,900
So click on Jar File here, click on next.

29
00:01:53,200 --> 00:01:55,560
Over here you need to select.

30
00:01:55,570 --> 00:01:58,740
So this is the project which we selected because we right.

31
00:01:58,750 --> 00:01:59,590
Clicked on that.

32
00:02:00,070 --> 00:02:08,380
So let me just deselect them and this also we do not need and within the source we just need the last

33
00:02:08,380 --> 00:02:08,919
one.

34
00:02:09,280 --> 00:02:11,950
So let's select all of them.

35
00:02:16,630 --> 00:02:16,870
Okay.

36
00:02:16,960 --> 00:02:18,930
So the last one is the util.

37
00:02:18,940 --> 00:02:19,810
So that's good.

38
00:02:20,230 --> 00:02:23,710
And we are saying export generated classifiers.

39
00:02:23,710 --> 00:02:26,500
So let's just select only class files.

40
00:02:26,500 --> 00:02:29,920
So only class files would be included in the final job.

41
00:02:30,250 --> 00:02:35,200
Now, if you also want the source files to be included, then you need to select this particular option

42
00:02:35,350 --> 00:02:36,730
Java source file.

43
00:02:37,060 --> 00:02:40,510
But typically jobs would include just the class files.

44
00:02:40,510 --> 00:02:42,580
So let's just select only this.

45
00:02:43,000 --> 00:02:49,300
And here you need to select the destination, the name of the jar file and also the destination.

46
00:02:49,450 --> 00:02:56,350
So I have this destination and let's keep the name as util hyphen 1.0 like version one.

47
00:02:56,980 --> 00:02:59,470
And here this is already selected.

48
00:02:59,620 --> 00:03:04,840
It says compress the contents of the jar file so the jar would be in compressed format.

49
00:03:05,560 --> 00:03:07,570
So let's say next.

50
00:03:07,840 --> 00:03:11,350
And just leave these options as these.

51
00:03:12,450 --> 00:03:15,570
And that said, you can leave everything as us.

52
00:03:15,600 --> 00:03:17,700
So let me just go ahead and click finish.

53
00:03:18,030 --> 00:03:25,680
So it's created and my destination and this is the one you tell hyphen 1.0.

54
00:03:26,340 --> 00:03:30,630
And as you can see, it has around 3.97 kilobytes.

55
00:03:30,870 --> 00:03:35,130
Now, let me show you the file size on.

56
00:03:36,610 --> 00:03:38,860
Here if you go into.

57
00:03:40,710 --> 00:03:42,330
It is around 6.23.

58
00:03:42,630 --> 00:03:49,050
So roughly around two, two point something has been saved because it was compressed.

59
00:03:50,320 --> 00:03:52,690
This is what we have.

60
00:03:52,720 --> 00:03:57,850
So now let's go ahead and view the contents of this.

61
00:03:57,850 --> 00:03:58,690
So.

62
00:03:58,780 --> 00:04:03,160
So we have to go into this directory called semantics.

63
00:04:03,430 --> 00:04:04,990
Semantics squared slash jar.

64
00:04:04,990 --> 00:04:05,910
In my case.

65
00:04:05,920 --> 00:04:07,870
In your case, it can be different.

66
00:04:08,230 --> 00:04:10,420
So here it is, I'm there.

67
00:04:10,420 --> 00:04:13,150
So I just want to view this.

68
00:04:13,150 --> 00:04:15,850
So we would use the jar tool for that.

69
00:04:16,450 --> 00:04:22,089
So Jar tool comes with VDC, so let me show you that.

70
00:04:22,089 --> 00:04:23,650
So here I am.

71
00:04:23,650 --> 00:04:30,340
So this is an C program files, Java, JDK 12, which is one of the latest versions.

72
00:04:30,340 --> 00:04:36,610
If you have an older version, you can open that and within your JDK click on pen and within then you

73
00:04:36,610 --> 00:04:41,140
can see that if you scroll down, you can see that there is the jar dot xy.

74
00:04:41,410 --> 00:04:43,750
So this is the one that we are going to use.

75
00:04:43,750 --> 00:04:50,020
So your path should include JDK and we know that how to do that, how to set the path environment variable.

76
00:04:50,020 --> 00:04:52,840
So just go ahead and.

77
00:04:54,540 --> 00:04:58,350
Open your command prompt and go into the directory where we have that.

78
00:04:58,500 --> 00:05:01,250
So let's just go ahead and say jar.

79
00:05:01,260 --> 00:05:07,300
And you may recall that to view the contents, you would say PT stands for table of contents.

80
00:05:07,320 --> 00:05:12,960
F and you tell hyphen 1.0. jar.

81
00:05:14,570 --> 00:05:15,170
That it is.

82
00:05:15,170 --> 00:05:19,550
So it is showing all the three class files that we have.

83
00:05:19,550 --> 00:05:27,230
And these this is the directory structure and there is also something called meta inf slash manifest.

84
00:05:28,730 --> 00:05:30,620
So we are done with this particular command.

85
00:05:30,620 --> 00:05:34,820
Now let's go ahead and extract this file and see what it contains.

86
00:05:35,510 --> 00:05:46,520
So for that you would say jar and if you recall for extract it is ex f util hyphen one dot jar and we

87
00:05:46,520 --> 00:05:47,900
want to extract that.

88
00:05:47,900 --> 00:05:51,110
So you'll see meta hyphen and f.

89
00:05:52,700 --> 00:05:54,970
Manifest Dot mf.

90
00:05:57,310 --> 00:05:57,660
Okay.

91
00:05:57,700 --> 00:05:58,480
There you go.

92
00:05:58,510 --> 00:06:02,080
So a copy of that has been made here.

93
00:06:02,470 --> 00:06:07,600
So the the manifest file is still there and in the jar file.

94
00:06:07,990 --> 00:06:12,290
So it has made a copy of that and it is copied into the current directory.

95
00:06:12,310 --> 00:06:14,470
So let's click on Matter Enough.

96
00:06:14,470 --> 00:06:16,310
And this is the manifest file.

97
00:06:16,330 --> 00:06:18,940
That's how you would extract any files.

98
00:06:18,940 --> 00:06:25,960
So here we extracted manifest, but you can also extract any dot class file or any Dot's Java file that

99
00:06:25,960 --> 00:06:27,920
you might want to extract.

100
00:06:27,940 --> 00:06:30,070
So let me just open this thing.

101
00:06:30,340 --> 00:06:32,200
So we are done with one more command.

102
00:06:33,310 --> 00:06:34,670
So this is what we have.

103
00:06:34,690 --> 00:06:37,150
And all it has is this information.

104
00:06:37,480 --> 00:06:45,010
So manifest file is nothing but a file that contains the meta information about the jar file.

105
00:06:45,460 --> 00:06:48,250
It just has the meta information of the jar file.

106
00:06:48,430 --> 00:06:51,400
So it has entries such as this.

107
00:06:51,580 --> 00:06:55,380
So this is an entry and it has a name and a value.

108
00:06:55,390 --> 00:06:58,210
It says manifest hyphen version and thus.

109
00:06:58,600 --> 00:07:01,690
And we can also add within the manifest file.

110
00:07:01,690 --> 00:07:04,090
You can also add more entries.

111
00:07:04,510 --> 00:07:09,670
Now, for instance, there is something called main class entry.

112
00:07:09,850 --> 00:07:10,960
Now a jar file.

113
00:07:10,960 --> 00:07:13,870
You cannot execute a jar file directly.

114
00:07:13,870 --> 00:07:22,720
But let's say if you also want to execute a jar file, and by that I mean we can have a class within

115
00:07:22,720 --> 00:07:28,270
this jar and the particular class would have a main method.

116
00:07:28,450 --> 00:07:32,850
And if that is the case, we can actually execute the jar file.

117
00:07:32,860 --> 00:07:36,010
But for that we need to set some meta information.

118
00:07:36,010 --> 00:07:43,120
We need to add something called as a meta class or a main class, and we need to specify what that particular

119
00:07:43,120 --> 00:07:44,050
file is.

120
00:07:44,440 --> 00:07:51,670
So if you if your manifest file has that information, then we can actually execute the jar file using

121
00:07:51,670 --> 00:07:56,080
our Java interpreter, just like the way we execute any Java class.

122
00:07:56,770 --> 00:07:58,900
So let's also do that.

123
00:07:58,900 --> 00:08:04,570
And with that we can actually look at the third command, which is the the final command, which is

124
00:08:04,570 --> 00:08:05,320
the update.

125
00:08:05,320 --> 00:08:09,580
And after that we will look at the create command, the create from the command line.

126
00:08:09,910 --> 00:08:12,310
So let me execute first.

127
00:08:12,430 --> 00:08:14,470
Let me just first execute this.

128
00:08:14,470 --> 00:08:21,160
So it would be java hyphen jar util hyphen 1.0. job.

129
00:08:21,850 --> 00:08:25,240
So if you do this, it's just a regular Java command.

130
00:08:25,420 --> 00:08:28,090
So it says no main manifest attribute.

131
00:08:28,090 --> 00:08:30,070
So we need to add something for that.

132
00:08:30,730 --> 00:08:31,690
So I'll say.

133
00:08:32,530 --> 00:08:36,370
Main hyphen plus column.

134
00:08:37,770 --> 00:08:42,270
So we need to specify the name now among these three classes here.

135
00:08:42,870 --> 00:08:46,200
The string util java has a.

136
00:08:47,350 --> 00:08:48,160
Main method.

137
00:08:48,520 --> 00:08:50,320
So let's add this.

138
00:08:51,230 --> 00:08:52,670
Particular class.

139
00:08:52,670 --> 00:08:55,190
So we'll say you take this.

140
00:08:56,710 --> 00:08:57,640
Here.

141
00:08:57,670 --> 00:08:58,870
Let's add it.

142
00:09:00,030 --> 00:09:02,370
Let's say strong you.

143
00:09:03,300 --> 00:09:04,320
Let me say that.

144
00:09:04,770 --> 00:09:08,730
So this one is just this file which we just extracted.

145
00:09:08,730 --> 00:09:10,050
So it is with ten.

146
00:09:10,710 --> 00:09:14,100
This is the file and you can actually rename it to it doesn't matter.

147
00:09:14,100 --> 00:09:17,820
So it is a file that is separate from what we have in the jar file.

148
00:09:17,850 --> 00:09:18,230
Right.

149
00:09:18,240 --> 00:09:19,710
We just made a copy of it.

150
00:09:20,250 --> 00:09:22,080
So it's not the exact same file.

151
00:09:22,080 --> 00:09:24,450
So that file is still there in that jar.

152
00:09:25,050 --> 00:09:26,880
So we edited this one.

153
00:09:27,180 --> 00:09:32,670
We did not edit the one in the jar file, so we just edited the one which we extracted.

154
00:09:33,120 --> 00:09:40,860
Now let's do an update and when we do the update, the one in the jar gets updated and let's see how

155
00:09:40,860 --> 00:09:42,630
that will, how that is possible.

156
00:09:43,320 --> 00:09:49,470
So here, let's just say jar for update.

157
00:09:49,470 --> 00:09:58,530
It is you and you'll have the usual F and after f, let's add M, which means that we want to use the

158
00:09:58,530 --> 00:10:06,270
manifest file which we just edited and we want to use that information and add it to the jar file and

159
00:10:06,270 --> 00:10:07,760
we actually do not even need this.

160
00:10:07,770 --> 00:10:10,030
It's okay if we have it, but we do not need.

161
00:10:10,050 --> 00:10:13,490
But you need to ensure that there is this empty line here.

162
00:10:13,500 --> 00:10:14,720
That is a requirement.

163
00:10:14,730 --> 00:10:17,580
If that's not there, then this will not work.

164
00:10:18,300 --> 00:10:29,430
So let me go back here, you f m first thing is you need to have the one dot jar and meta enough.

165
00:10:29,430 --> 00:10:33,840
So this is the one which we just edited and like I said, it can be anything.

166
00:10:33,840 --> 00:10:37,110
You could even rename it to something else.

167
00:10:37,110 --> 00:10:38,220
It doesn't matter.

168
00:10:39,750 --> 00:10:42,880
So we are just going to add it and that's it.

169
00:10:42,900 --> 00:10:47,430
So now the one inside the jar also got edited.

170
00:10:47,460 --> 00:10:49,560
Now let's run this command.

171
00:10:50,130 --> 00:10:55,230
So it is jar space, hyphen jar, hyphen the jar file.

172
00:10:55,260 --> 00:11:01,230
Now, if you run it, you can see it as printing something, because we have a print statement within

173
00:11:01,230 --> 00:11:06,000
the main method here and it prints something and encoded password of this thing.

174
00:11:06,660 --> 00:11:07,820
So that's not important.

175
00:11:07,830 --> 00:11:12,480
But we were able to execute the jar from the command, from the command line.

176
00:11:12,480 --> 00:11:13,800
So that's what we could do.

177
00:11:14,190 --> 00:11:16,140
Now let's extract once again.

178
00:11:17,980 --> 00:11:18,260
Okay.

179
00:11:18,310 --> 00:11:21,550
So we just extracted that manifest file.

180
00:11:21,640 --> 00:11:28,170
And so it has overwritten the manifest file which we extracted earlier.

181
00:11:28,180 --> 00:11:30,700
And as you can see, it has this three information.

182
00:11:30,910 --> 00:11:36,220
So, so it has these three name value pairs manifest version created by.

183
00:11:36,220 --> 00:11:40,480
So I'm using 1.8 here in this case 1.8 VDC.

184
00:11:40,600 --> 00:11:45,700
So that's what is there in my Java underscore home and the main class.

185
00:11:45,940 --> 00:11:47,620
So this is the main class.

186
00:11:47,620 --> 00:11:52,150
So this is the exact content that is within the manifest file.

187
00:11:53,110 --> 00:11:55,270
So that is how you can do it.

188
00:11:56,130 --> 00:12:03,450
And now here, instead of doing it this way, you can also there is also another way to add this main

189
00:12:03,450 --> 00:12:03,860
class.

190
00:12:03,870 --> 00:12:10,170
So let me quickly show you that also from the command line, there is another there is a different way

191
00:12:10,170 --> 00:12:11,250
to add that.

192
00:12:11,250 --> 00:12:17,580
But without editing this manifest file, we can also specify this particular class name on the command

193
00:12:17,580 --> 00:12:18,540
line itself.

194
00:12:18,540 --> 00:12:21,870
So for to show that, let me go back.

195
00:12:22,200 --> 00:12:24,330
Let me actually delete this one.

196
00:12:25,740 --> 00:12:27,630
Okay, so let's recreate it.

197
00:12:27,630 --> 00:12:29,970
But this time let's create it from here.

198
00:12:29,970 --> 00:12:33,990
So earlier where I clicked on your web, this time let's just right click here.

199
00:12:34,620 --> 00:12:37,980
This is easy export and jar file.

200
00:12:39,420 --> 00:12:45,990
So everything is same and the say next, next finish.

201
00:12:46,470 --> 00:12:47,520
Now it is there.

202
00:12:48,880 --> 00:12:50,340
It would have created that.

203
00:12:50,350 --> 00:12:57,940
So this time what we will do is we will just say we don't need this anymore because we want to specify

204
00:12:57,940 --> 00:12:58,960
the file here.

205
00:13:00,470 --> 00:13:09,980
Might would be you f earlier it was m so this time it will be e and you would have util jar which is

206
00:13:09,980 --> 00:13:12,620
the file name and you would enter the.

207
00:13:14,490 --> 00:13:16,440
Actual name of the class.

208
00:13:16,440 --> 00:13:18,210
So we have the package name here.

209
00:13:18,210 --> 00:13:21,810
We just need to edit string util.

210
00:13:22,020 --> 00:13:29,670
So this will add that attribute and the main class attribute in the in the manifest file in the jar

211
00:13:29,670 --> 00:13:30,150
file.

212
00:13:30,630 --> 00:13:31,260
It's done.

213
00:13:31,260 --> 00:13:38,010
So let me just execute this once again and you can see that it is done so we can also do it.

214
00:13:38,010 --> 00:13:42,630
And this way you can directly specify or you can edit an existing file there.

215
00:13:43,540 --> 00:13:53,170
Now let me just show how to create this jar and also specify the string you tell from with an eclipse.

216
00:13:53,170 --> 00:13:55,710
So let me just delete this one more time.

217
00:13:55,720 --> 00:13:59,470
You did this so, so very quick.

218
00:13:59,980 --> 00:14:05,080
So just right click here and once on the package, say export.

219
00:14:05,680 --> 00:14:09,850
Everything else is going to be just the same jar file next.

220
00:14:09,850 --> 00:14:11,650
So we still have the util one.

221
00:14:12,440 --> 00:14:13,970
And next.

222
00:14:13,970 --> 00:14:15,800
Here, next.

223
00:14:15,830 --> 00:14:18,380
Now, here we can see that there is this main class.

224
00:14:18,410 --> 00:14:20,030
Now click on Browse.

225
00:14:21,460 --> 00:14:21,880
Here.

226
00:14:21,880 --> 00:14:27,910
It shows this thing within this package we have the string util class and this is the only class which

227
00:14:27,910 --> 00:14:29,350
had the main method.

228
00:14:29,350 --> 00:14:35,020
So it is showing only that otherwise it would have shown any other files to within this package.

229
00:14:35,350 --> 00:14:36,040
So head.

230
00:14:36,070 --> 00:14:42,130
Okay, so we are selecting string string util as the main class and hit finish.

231
00:14:42,460 --> 00:14:46,330
Now the manifest file will also have the main class entry now.

232
00:14:46,510 --> 00:14:51,070
So if we go back it would have created the jar here.

233
00:14:51,490 --> 00:14:52,360
So just.

234
00:14:54,040 --> 00:14:55,660
Go back and say.

235
00:14:56,620 --> 00:14:57,430
Execute.

236
00:14:57,430 --> 00:15:04,030
And that tells us that main class entry is there in the manifest file.

237
00:15:04,840 --> 00:15:06,280
Just make sure.

238
00:15:06,320 --> 00:15:08,020
I just want to reiterate one more time.

239
00:15:08,020 --> 00:15:13,450
So if we are editing the manifest file, you should ensure that there is at least one one here.

240
00:15:13,450 --> 00:15:16,150
One line is left here at the end.

241
00:15:16,420 --> 00:15:18,010
Otherwise it will not work.

242
00:15:18,020 --> 00:15:20,440
You need to have at least one new line entry here.

243
00:15:20,830 --> 00:15:21,580
So that's it.

244
00:15:21,580 --> 00:15:27,870
And here, within this folder, I also have this file called Helloworld class.

245
00:15:28,390 --> 00:15:32,770
If we want to add that, then all we need to do is we have to just say.

246
00:15:33,840 --> 00:15:46,140
You f we just use UDF command and we need to specify hello world dot class and we just need to remove

247
00:15:46,530 --> 00:15:48,570
this one because there is no manifest file.

248
00:15:48,570 --> 00:15:52,110
We are just updating this particular file so we are adding this to that.

249
00:15:52,110 --> 00:15:53,550
So if you set.

250
00:15:54,370 --> 00:15:55,540
It got added.

251
00:15:55,750 --> 00:16:01,960
So if you say Java TX, so it will show you.

252
00:16:03,620 --> 00:16:05,570
The Hello world class over here.

253
00:16:05,990 --> 00:16:06,950
So that's that.

254
00:16:06,950 --> 00:16:11,690
So we are done with all of the commands and we just need to look at the sea of command.

255
00:16:11,840 --> 00:16:14,330
So for that, let me open.

256
00:16:15,900 --> 00:16:16,350
I mean, go.

257
00:16:16,350 --> 00:16:19,110
Here we are inside Jared.

258
00:16:19,140 --> 00:16:22,200
And Jared is the workspace of my lips.

259
00:16:22,230 --> 00:16:24,890
And within that, we have Trello Web project.

260
00:16:24,900 --> 00:16:25,980
So let me click that.

261
00:16:26,010 --> 00:16:28,720
So within your web, we have source and build.

262
00:16:28,740 --> 00:16:31,320
So build is where we have all the class files.

263
00:16:31,320 --> 00:16:34,080
So click on build and we can build.

264
00:16:34,080 --> 00:16:41,670
We have classes and here is where we have the entire package, like the com semantic square Trello and

265
00:16:41,670 --> 00:16:42,540
all of these.

266
00:16:42,720 --> 00:16:47,430
But essentially in this path we will see only class files.

267
00:16:48,300 --> 00:16:52,000
So we can also create a jar for this one.

268
00:16:52,020 --> 00:16:53,220
So let me.

269
00:16:53,340 --> 00:17:01,260
So let's go into this particular folder directory called classes did three little web build classes.

270
00:17:01,500 --> 00:17:03,180
So we are here.

271
00:17:03,180 --> 00:17:04,319
So let me open.

272
00:17:05,829 --> 00:17:06,250
This one.

273
00:17:06,250 --> 00:17:07,630
So I'm inside that.

274
00:17:08,410 --> 00:17:13,900
And here, let's create a jar for this entire com folder.

275
00:17:14,170 --> 00:17:22,960
So it would be jar C for create F and we'll just say com dot jar and all.

276
00:17:23,230 --> 00:17:24,550
So this is the asterisk.

277
00:17:24,760 --> 00:17:30,960
So this would just create a jar and it is about 45 kilobytes.

278
00:17:30,970 --> 00:17:36,340
But if you look at this column folder, it is almost double the size.

279
00:17:36,340 --> 00:17:40,720
It has around 85 kilobytes, so it is reduced by half.

280
00:17:41,120 --> 00:17:48,700
And there are also options for specifying that we want to create this jar in an uncompressed format.

281
00:17:48,700 --> 00:17:52,420
We can also do that, but typically we would want it in compressed format.

282
00:17:52,600 --> 00:17:54,820
So that's why you would see this option.

283
00:17:54,820 --> 00:18:00,430
So in the resources section, I'll try to include a document which will give you more options, information

284
00:18:00,430 --> 00:18:05,440
about other options that can be used and perhaps some other resources also.

285
00:18:05,440 --> 00:18:09,970
So do look out for any documents in the resources section.

286
00:18:10,330 --> 00:18:15,880
Now, instead of asterisk, you can also you can also specify individual file names.

287
00:18:15,880 --> 00:18:22,210
For instance, you can say C, F, and let's say you want to just include util.

288
00:18:22,210 --> 00:18:33,700
So you will say util hyphen 1.1. jar and now you can specify semantic square slash.

289
00:18:34,450 --> 00:18:35,740
Me go back here.

290
00:18:35,860 --> 00:18:38,380
Does this thrill you and you tell.

291
00:18:41,290 --> 00:18:44,260
So you're just specifying only the directory now.

292
00:18:45,560 --> 00:18:49,850
So if you go back into classes, you can see that it created this.

293
00:18:51,310 --> 00:18:52,710
So this is just a directory.

294
00:18:52,720 --> 00:18:57,040
Now, if you want to create if you want to include just one class.

295
00:18:57,370 --> 00:19:02,110
So you can also say and it's a string you tell.

296
00:19:04,060 --> 00:19:09,340
Dot class, and if you want yet another class, then you would just put a space there and you would

297
00:19:09,340 --> 00:19:11,140
include the next one.

298
00:19:11,140 --> 00:19:12,730
So you can say something like this.

299
00:19:20,950 --> 00:19:23,260
They just changed to hyphen two.

300
00:19:24,350 --> 00:19:24,890
So.

301
00:19:25,220 --> 00:19:27,020
So it has created this one.

302
00:19:27,380 --> 00:19:29,600
So it will have only two files.

303
00:19:29,930 --> 00:19:32,390
So that's the sea of command.

304
00:19:33,550 --> 00:19:39,970
One other thing is I also mentioned about this thing that a var file is also a jar file.

305
00:19:40,810 --> 00:19:43,480
So I also have this var file here.

306
00:19:43,570 --> 00:19:48,250
So let me just wait for the box dot var which we created earlier.

307
00:19:50,040 --> 00:19:50,310
Okay.

308
00:19:50,370 --> 00:19:53,280
So Waterfall is also a jar file, as we said.

309
00:19:53,280 --> 00:19:55,770
So we should be able to use the jar command.

310
00:19:56,040 --> 00:19:57,720
So here it is.

311
00:19:57,720 --> 00:19:58,680
So this is jar.

312
00:19:59,190 --> 00:20:01,620
So let me just change it to.

313
00:20:04,020 --> 00:20:05,070
Dot Bar.

314
00:20:06,470 --> 00:20:07,410
Sorry it is.

315
00:20:07,460 --> 00:20:07,790
Books.

316
00:20:07,910 --> 00:20:09,110
Low hardcover.

317
00:20:12,090 --> 00:20:12,720
There you go.

318
00:20:12,760 --> 00:20:16,800
Now you can see the entire layout of this thing.

319
00:20:16,890 --> 00:20:19,870
So as you can see, the web in the folder is there.

320
00:20:19,890 --> 00:20:21,600
Then the web XML is there.

321
00:20:21,600 --> 00:20:26,280
And within the banner there is the lib folder which has the jar files.

322
00:20:26,520 --> 00:20:29,730
So what would have also the jar files?

323
00:20:30,390 --> 00:20:31,410
That's the thing.

324
00:20:31,620 --> 00:20:37,440
And with this command, like earlier, I showed you how to update.

325
00:20:38,430 --> 00:20:40,260
Using the manifest file.

326
00:20:40,470 --> 00:20:48,120
Just keep in mind that if we change this, if we make it u, m, f, instead of u f m, then this also

327
00:20:48,120 --> 00:20:49,170
has to be changed.

328
00:20:49,740 --> 00:20:56,630
If M comes before F, then the manifest file name has to come before the jar file name.

329
00:20:56,820 --> 00:20:58,560
So just wanted to mention that.

330
00:20:58,710 --> 00:21:00,130
So that's about it.

331
00:21:00,150 --> 00:21:05,220
You now know how to create jar files and how to manipulate it.

332
00:21:05,580 --> 00:21:11,850
So in future, if you create some reusable components, you know how to create jar files and those jar

333
00:21:11,850 --> 00:21:14,550
files can be used across projects.

334
00:21:15,300 --> 00:21:16,500
That's about it.

335
00:21:16,530 --> 00:21:19,410
Thank you and happy coding.

