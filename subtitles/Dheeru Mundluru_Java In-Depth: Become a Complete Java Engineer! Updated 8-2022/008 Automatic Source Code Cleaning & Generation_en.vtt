WEBVTT
1
00:00:02.080 --> 00:00:03.030
Hello there.

2
00:00:03.040 --> 00:00:04.200
This is the Manila Room.

3
00:00:04.240 --> 00:00:05.110
And welcome back.

4
00:00:05.560 --> 00:00:11.620
So we looked at a few important shortcuts for efficiently exploring our source code.

5
00:00:11.950 --> 00:00:17.200
Now let's go ahead and look at a few more shortcuts, which will help us in being more productive.

6
00:00:17.710 --> 00:00:19.960
And these shortcuts fall into two categories.

7
00:00:20.110 --> 00:00:27.100
And the first set of shortcuts will help us in keeping our source code organized and well formatted.

8
00:00:27.670 --> 00:00:32.770
And the second shortcuts will help us end automatically generating source code.

9
00:00:33.100 --> 00:00:39.340
And these shortcuts are really good and I just love the shortcuts and hopefully you will also like them.

10
00:00:39.760 --> 00:00:44.470
So let's go ahead and look at the shortcuts for organizing and formatting our source code.

11
00:00:44.860 --> 00:00:48.400
So the first shortcut is related to import statements.

12
00:00:48.880 --> 00:00:52.090
So here we are in the basics demo class and the main method.

13
00:00:52.120 --> 00:00:58.120
Let's say we want to create an instance of this class called ArrayList, which is from the Java package,

14
00:00:58.690 --> 00:00:59.680
let's say list one.

15
00:01:01.300 --> 00:01:06.070
So it is giving us compilation error because we need to add the import statement.

16
00:01:06.310 --> 00:01:12.430
So what we can do is we can just hover over here and it will give us this pop up with some suggestions

17
00:01:12.430 --> 00:01:13.840
like the quick fixes.

18
00:01:14.170 --> 00:01:17.550
So it says we can import ArrayList, which is what we want to do.

19
00:01:17.560 --> 00:01:21.940
So just click on that and the ArrayList import statement is here.

20
00:01:22.600 --> 00:01:23.560
How cool is that?

21
00:01:24.580 --> 00:01:25.310
So that's good.

22
00:01:25.330 --> 00:01:26.560
Now let's.

23
00:01:27.890 --> 00:01:31.550
Create another instance of another class from the same package.

24
00:01:31.580 --> 00:01:33.110
It's a link list.

25
00:01:33.920 --> 00:01:36.560
So obviously it will give us compilation error.

26
00:01:36.830 --> 00:01:41.720
But instead of hovering and selecting it, what we will do is we will use a shortcut.

27
00:01:41.720 --> 00:01:46.610
It is control shift or stands for organized organizing.

28
00:01:46.790 --> 00:01:51.800
So the import statement is once again added here from the same package.

29
00:01:51.830 --> 00:01:54.500
Now let's add one more object.

30
00:01:54.500 --> 00:01:56.330
But this time it is data object.

31
00:01:57.420 --> 00:01:59.630
And say control shift or.

32
00:02:00.300 --> 00:02:03.000
And it is giving some recommendations here.

33
00:02:03.270 --> 00:02:07.940
It says organize imports because the class is in multiple packages.

34
00:02:07.950 --> 00:02:09.720
So let's select this first one.

35
00:02:11.160 --> 00:02:14.250
And you will see that date as imported.

36
00:02:15.390 --> 00:02:19.920
And also, you can see that they're all arranged in alphabetical order.

37
00:02:20.430 --> 00:02:21.420
So that's nice.

38
00:02:21.750 --> 00:02:26.910
Now, let's say we don't need these statements anymore, so we just delete them.

39
00:02:27.420 --> 00:02:33.510
But the import statements are still here, and we have some compiler warnings too, because we are not

40
00:02:33.510 --> 00:02:34.260
using them.

41
00:02:34.740 --> 00:02:42.750
So once again, just say control shift and all of those import statements will go away.

42
00:02:42.780 --> 00:02:46.470
They are completely harmless, but we don't want those import statements here.

43
00:02:46.830 --> 00:02:54.180
So control shift or is allowing us to add import statements and also remove unused import statements

44
00:02:54.990 --> 00:02:57.110
and they also have one more purpose.

45
00:02:57.120 --> 00:03:04.110
So I created this new class called Less Demo and it is added in this new package called Semantics where

46
00:03:04.110 --> 00:03:04.950
collections.

47
00:03:05.190 --> 00:03:09.060
And later on we will create you will be creating this less demo.

48
00:03:09.360 --> 00:03:13.230
So I will be removing this package once I'm done with this lecture.

49
00:03:14.100 --> 00:03:18.240
So let's get more has some of these import statements.

50
00:03:18.240 --> 00:03:20.820
So let me reorganize them.

51
00:03:21.000 --> 00:03:22.140
Reshuffle them.

52
00:03:22.170 --> 00:03:26.700
And this one is the basics demo class from the basics package.

53
00:03:26.700 --> 00:03:27.570
So our.

54
00:03:28.470 --> 00:03:30.150
Very own basics class.

55
00:03:31.340 --> 00:03:34.930
So they are all reorganized and they are not properly formatted.

56
00:03:34.940 --> 00:03:42.290
So once again, if you say control shift or so, they are all in their original positions.

57
00:03:42.290 --> 00:03:45.020
So you can see that they're all ordered nicely.

58
00:03:45.020 --> 00:03:50.320
And these Java API import statements come before our own import statement.

59
00:03:50.330 --> 00:03:52.640
So that's what Control Shift is doing.

60
00:03:52.640 --> 00:04:00.140
So it is reorganizing our organizing our import statements so it will help us add import statements,

61
00:04:00.140 --> 00:04:05.840
remove unused import statements and also organize them if they are not sorted in proper order.

62
00:04:06.380 --> 00:04:08.390
So that's what the import statements.

63
00:04:09.350 --> 00:04:09.620
Now.

64
00:04:09.620 --> 00:04:10.960
The next one is really cool.

65
00:04:10.970 --> 00:04:12.020
I just love this.

66
00:04:12.050 --> 00:04:16.820
So back in the Basics demo class and let's scroll here.

67
00:04:16.880 --> 00:04:18.980
So we have this labeled continue.

68
00:04:19.490 --> 00:04:24.620
Let's say I'm drunk and I once I'm drunk, maybe.

69
00:04:25.570 --> 00:04:28.750
I'm not quoting in the right with the right frame of mind.

70
00:04:28.750 --> 00:04:30.070
And this is what we have.

71
00:04:30.340 --> 00:04:32.440
So you should never code when you are drunk.

72
00:04:33.100 --> 00:04:36.860
So here, what we can do is to format it nicely.

73
00:04:36.880 --> 00:04:45.340
All you will say is control shift f where F stands for formatting and it will nicely format our code

74
00:04:46.000 --> 00:04:48.670
no matter how you write this particular class.

75
00:04:48.680 --> 00:04:52.750
If you hit control shift f it will nicely format your code.

76
00:04:52.750 --> 00:04:54.370
So it's a beautiful shortcut.

77
00:04:55.000 --> 00:05:02.860
Next as let's say we want to move all of this block of code by one tap to words, right?

78
00:05:02.860 --> 00:05:07.180
So you all you will do is just select this and hit tab here.

79
00:05:07.180 --> 00:05:12.060
So you might have seen this in other editors also, if you want one more tab, one more.

80
00:05:12.070 --> 00:05:17.910
Now, if you want to move it back in the left side, if you want to shift it left side, you will say

81
00:05:17.920 --> 00:05:19.090
shift tab.

82
00:05:19.720 --> 00:05:22.270
For the right side, it's tab for the left side.

83
00:05:22.300 --> 00:05:23.920
Shift tab it is.

84
00:05:24.910 --> 00:05:25.840
So that's good.

85
00:05:26.290 --> 00:05:32.410
Now next is if you want to comment this code, comment this entire block of code, and if you want each

86
00:05:32.410 --> 00:05:38.050
line to have that single line command, so you will select all of this and just say control forward

87
00:05:38.050 --> 00:05:38.620
slash.

88
00:05:39.100 --> 00:05:44.980
So it's all for it's all commented out now and if you want to uncomment it, you will use the same shortcut

89
00:05:44.980 --> 00:05:47.530
once again, which is control for word slash.

90
00:05:48.160 --> 00:05:55.720
Now if you want to add block code so you'll select this and you will say control, shift forward slash

91
00:05:55.720 --> 00:06:00.010
instead of control forward slash, it's control shift forward slash.

92
00:06:01.000 --> 00:06:07.270
Now if you want to uncomment it, instead of using the exact same thing, we will say control, shift

93
00:06:07.270 --> 00:06:08.410
backslash.

94
00:06:09.280 --> 00:06:11.470
So now let us uncomment it out.

95
00:06:11.590 --> 00:06:17.680
So for single line comments it is control slash forward slash for both commenting as well as on commenting

96
00:06:17.680 --> 00:06:24.250
for block it is control shift forward slash for commenting for on commenting it is control shift backward

97
00:06:24.250 --> 00:06:24.790
slash.

98
00:06:25.150 --> 00:06:27.520
But this thing is messed up for some reason.

99
00:06:27.760 --> 00:06:33.400
But we have our friend control shift f and it will format it in the right way.

100
00:06:34.430 --> 00:06:36.920
So this is like professional looking code now.

101
00:06:37.950 --> 00:06:43.680
Now if you want to increase the font size, I have shown it in one of the earlier lectures that you

102
00:06:43.680 --> 00:06:49.980
can go into windows and window and preferences and appearance and so on.

103
00:06:49.980 --> 00:06:58.950
But a short way in which you can increase the font as just hit control a control equal to so it increases

104
00:06:58.950 --> 00:06:59.430
the font.

105
00:06:59.430 --> 00:07:01.050
So that's like zooming in.

106
00:07:01.530 --> 00:07:02.640
One more zoom in.

107
00:07:02.940 --> 00:07:04.230
So it increases the font.

108
00:07:04.320 --> 00:07:07.560
Now, if you want to zoom out, just say control hyphen.

109
00:07:08.880 --> 00:07:09.990
If we want to adjust the font.

110
00:07:09.990 --> 00:07:11.490
Furthermore, control hyphen.

111
00:07:11.490 --> 00:07:16.770
So that's zoom in and zoom out control equal to four, zoom in, control hyphen for zoom out.

112
00:07:17.190 --> 00:07:19.780
So we are done with that formatting and organizing.

113
00:07:19.800 --> 00:07:23.190
Now let's automatically generate some statements for this.

114
00:07:23.190 --> 00:07:30.720
Let's open our student test class so we'll set control of the student test, which is here.

115
00:07:31.290 --> 00:07:33.710
So we are creating a bunch of student statements here.

116
00:07:33.720 --> 00:07:35.320
Students one to student three.

117
00:07:35.340 --> 00:07:38.150
Now let's say we want to create a new student object.

118
00:07:38.160 --> 00:07:42.030
You will just say new and say control space.

119
00:07:42.930 --> 00:07:49.090
And we will be using this control space for a few more for creating some more statements.

120
00:07:49.110 --> 00:07:50.790
So it has created the statement.

121
00:07:50.790 --> 00:07:52.200
It's a template statement.

122
00:07:52.200 --> 00:07:55.650
And you will just you will replace this type with student.

123
00:07:55.650 --> 00:08:00.420
And as you are typing, it has got changed on this side also, which is really cool.

124
00:08:00.810 --> 00:08:07.290
And name here is just let's say student four So that's how you can generate the statement.

125
00:08:07.680 --> 00:08:11.790
Now let's say we want to print the names of the first three students.

126
00:08:11.790 --> 00:08:14.550
So obviously we need for each statement for that.

127
00:08:14.850 --> 00:08:20.670
So but let's first add those three students into an array called List.

128
00:08:26.190 --> 00:08:33.780
So those are three student objects and you will just save for each and simply control space and click

129
00:08:33.780 --> 00:08:34.470
on that.

130
00:08:34.740 --> 00:08:40.470
And it has even inferred the name of this particular list.

131
00:08:40.470 --> 00:08:44.580
So it assumed that we want to iterate through this list.

132
00:08:44.580 --> 00:08:45.870
So which is really cool.

133
00:08:45.900 --> 00:08:49.800
Now in order to print, you'll just assess out control space.

134
00:08:49.800 --> 00:08:51.390
I think we use this earlier.

135
00:08:52.050 --> 00:08:56.520
Now let's go ahead and print the name so it will be Student Dot.

136
00:08:56.520 --> 00:09:02.240
But once you press dot, it also shows us all the members and the student class.

137
00:09:02.250 --> 00:09:03.510
How cool is that?

138
00:09:03.720 --> 00:09:10.590
So these are all the variables, but they have to be non private because private variables will not

139
00:09:10.590 --> 00:09:12.450
be seen outside of the class.

140
00:09:13.200 --> 00:09:18.120
And there is also the object profile method and you can ignore the rest of the methods because they

141
00:09:18.120 --> 00:09:21.630
are related to superclass concept, which we haven't yet discussed.

142
00:09:21.630 --> 00:09:23.760
So just let's click on this name here.

143
00:09:24.750 --> 00:09:25.650
So that's it.

144
00:09:26.280 --> 00:09:28.560
So controlled space is what we are using.

145
00:09:28.650 --> 00:09:33.930
Now, let's say we want to add a method in the student class from here itself.

146
00:09:34.680 --> 00:09:36.630
Let me just show you how that can be done.

147
00:09:36.630 --> 00:09:37.820
So you will go here.

148
00:09:37.830 --> 00:09:45.150
Student Let's say the new method is called get say gender, which is not yet there, and it should return

149
00:09:45.150 --> 00:09:47.160
the gender of the student object.

150
00:09:47.880 --> 00:09:48.750
So it's not there.

151
00:09:48.750 --> 00:09:52.640
But if you hover over this because we have the compilation error.

152
00:09:52.650 --> 00:09:58.350
So as a quick fix, Eclipse is saying that you can create this method, get gender in type.

153
00:09:58.350 --> 00:10:01.610
Student type is nothing but a class here.

154
00:10:01.620 --> 00:10:06.930
So when we click in the student class, it opens the student class and it created this method called

155
00:10:06.930 --> 00:10:07.800
get gender.

156
00:10:08.160 --> 00:10:11.730
So it just returns a string because gender is string.

157
00:10:13.410 --> 00:10:17.880
So if we scroll up, we can see that gender is here.

158
00:10:18.210 --> 00:10:21.480
So that's how a method can be automatically created.

159
00:10:22.380 --> 00:10:23.700
Now, let me just run this.

160
00:10:24.550 --> 00:10:28.930
So you can see that it is printing both the name as well as the gender of each student.

161
00:10:29.710 --> 00:10:39.910
So similarly, you can also add such template codes for switch for and main method also.

162
00:10:40.510 --> 00:10:42.550
And you will just say control space.

163
00:10:43.060 --> 00:10:45.070
So you can just explore them.

164
00:10:45.550 --> 00:10:48.160
Maybe you can also Google and find out four.

165
00:10:48.520 --> 00:10:52.420
Find out what other constructs that you can automatically generate.

166
00:10:52.450 --> 00:10:58.960
Now, if you want to automatically create a method here, also, there is also a shortcut for that.

167
00:10:59.350 --> 00:11:03.610
Let's say we call it let's just we want a public method.

168
00:11:03.610 --> 00:11:09.850
Just say public underscore method and say control space and that's it.

169
00:11:09.850 --> 00:11:14.380
It will create a template and you can change the return type on the name.

170
00:11:14.380 --> 00:11:18.220
Let's say get name here so you can change it that way.

171
00:11:18.760 --> 00:11:22.540
So that's that you can also create methods in this way.

172
00:11:22.690 --> 00:11:24.880
So let me just remove all of this.

173
00:11:27.490 --> 00:11:29.080
To get back to the original state.

174
00:11:29.110 --> 00:11:31.150
Now, I just want to share one last thing.

175
00:11:31.920 --> 00:11:36.780
So within this basics class, let me just add this new class called course.

176
00:11:40.340 --> 00:11:42.530
And let's add to private methods.

177
00:11:47.340 --> 00:11:54.630
So if you create an object, of course we cannot set the ID and name right because they are private

178
00:11:54.630 --> 00:12:01.080
to the class so we can add setter methods and a setter method will generally also have an accompanying

179
00:12:01.080 --> 00:12:01.950
getter method.

180
00:12:01.950 --> 00:12:05.820
So using a set method we can initialize the state.

181
00:12:05.940 --> 00:12:08.880
So if you hover over here, it gives us a suggestion.

182
00:12:08.880 --> 00:12:11.580
So it says create getter and setter for ID.

183
00:12:12.670 --> 00:12:14.160
You can just hit okay.

184
00:12:14.170 --> 00:12:17.800
And it has created the get I.D. and set ID.

185
00:12:17.830 --> 00:12:19.690
Same goes for name also.

186
00:12:19.720 --> 00:12:23.020
We are getting a warning because it is not being used.

187
00:12:23.020 --> 00:12:27.670
So just say create getter and setter and it says where do you want to insert it?

188
00:12:27.670 --> 00:12:29.550
Insert it after set ID.

189
00:12:29.560 --> 00:12:35.980
So if you do that after set ID, we have a get name, method get name which just returns the name and

190
00:12:35.980 --> 00:12:39.910
set name using which we can set the name of this variable.

191
00:12:40.970 --> 00:12:49.460
Now, another way to create them, as in one shot is going to source here and say generate getters and

192
00:12:49.460 --> 00:12:57.230
setters and the two fields are shown just say select all and hit generate and the four methods are created

193
00:12:57.260 --> 00:12:59.420
automatically and that's really cool.

194
00:12:59.660 --> 00:13:01.790
So getters and setters are very common.

195
00:13:01.790 --> 00:13:04.220
It's a common concept, but let's see how.

196
00:13:04.220 --> 00:13:10.610
Let me also show you how we can create a constructor automatically, which takes two parameters ID and

197
00:13:10.610 --> 00:13:12.470
name and initializes them.

198
00:13:12.470 --> 00:13:20.090
So just go into source and here you will see this thing called generate constructor using fields.

199
00:13:20.090 --> 00:13:27.320
So just click on that and just select both of these fields, make sure that they are selected insertion

200
00:13:27.320 --> 00:13:29.720
point let's say after ID field.

201
00:13:30.680 --> 00:13:35.600
Or let's say after name field and say generate.

202
00:13:35.900 --> 00:13:43.070
So after name field, the course has been automatically created with the two parameters and the ID and

203
00:13:43.100 --> 00:13:44.690
name are being initialized here.

204
00:13:44.840 --> 00:13:47.770
So you can ignore this particular statement for now.

205
00:13:47.780 --> 00:13:51.020
So that's how you can automatically create constructors.

206
00:13:51.020 --> 00:13:52.520
We don't have to type in.

207
00:13:52.790 --> 00:13:53.990
That's really cool.

208
00:13:54.920 --> 00:13:56.330
So I hope you like that.

209
00:13:56.330 --> 00:14:00.830
And I really like the control shift f for for formatting.

210
00:14:01.100 --> 00:14:03.950
So I hope you also liked what you have seen here.

211
00:14:04.130 --> 00:14:05.720
So that's about it.

212
00:14:05.750 --> 00:14:06.470
Thank you.

213
00:14:06.470 --> 00:14:09.320
And I will see you in the next lecture.

