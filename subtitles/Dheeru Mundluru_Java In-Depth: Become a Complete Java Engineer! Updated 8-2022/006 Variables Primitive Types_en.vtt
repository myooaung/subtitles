WEBVTT
1
00:00:01.980 --> 00:00:02.830
Hello there.

2
00:00:02.850 --> 00:00:04.110
This is the Manila Room.

3
00:00:04.320 --> 00:00:06.600
Let's now look at primitive variable types.

4
00:00:08.060 --> 00:00:12.810
All, the Jawa is an object oriented programming language for performance reasons.

5
00:00:12.830 --> 00:00:16.400
Java defines eight primitive data types for variables.

6
00:00:17.650 --> 00:00:18.580
And here they are.

7
00:00:18.820 --> 00:00:25.990
The primitive data types are emphasized in right here and they include Boolean byte, short and long,

8
00:00:25.990 --> 00:00:29.680
float, double and car except for boolean.

9
00:00:29.710 --> 00:00:32.650
The rest of the data types are numeric data types.

10
00:00:33.100 --> 00:00:39.880
Even car, which can be used to represent an alphabet is a numeric type as it is internally represented

11
00:00:39.880 --> 00:00:41.620
as an unsigned integer.

12
00:00:42.340 --> 00:00:46.690
So car is also a numeric data type in Java and you should always keep that in mind.

13
00:00:47.520 --> 00:00:54.630
Now you might also wonder why Java designers defined four different data types just to represent integers.

14
00:00:54.870 --> 00:00:56.850
Why not use just one of them?

15
00:00:57.740 --> 00:01:02.720
Recall that a variable is like a container and the container will have certain size.

16
00:01:03.320 --> 00:01:08.870
If you have only a single large container for integers, then it resource constraint devices.

17
00:01:08.900 --> 00:01:11.840
It could result in a lot of wastage of memory.

18
00:01:12.350 --> 00:01:14.990
That is to represent even a small number.

19
00:01:15.020 --> 00:01:17.540
We would be using the same large container.

20
00:01:18.050 --> 00:01:20.270
That is more number of bits are used.

21
00:01:21.400 --> 00:01:27.280
Similarly, if you have only a single small container for integers, then it may be difficult to represent

22
00:01:27.280 --> 00:01:28.480
large numbers.

23
00:01:28.750 --> 00:01:32.320
That is, numbers that are too big to fit into the container.

24
00:01:32.980 --> 00:01:38.110
So for this reason, Java defined different containers, each with a different size.

25
00:01:38.470 --> 00:01:44.260
That is the data types byte, short int and long have different sizes as we will soon see.

26
00:01:44.590 --> 00:01:46.690
But they all represent integers.

27
00:01:47.470 --> 00:01:52.870
That is, the programmer can choose the best data type as per his or her needs.

28
00:01:53.640 --> 00:01:56.460
So these are the eight different primitive data types.

29
00:01:56.490 --> 00:01:58.950
Next, we will explore them in detail.

30
00:01:59.130 --> 00:01:59.850
Thank you.

