1
00:00:02,120 --> 00:00:03,040
Hello there.

2
00:00:03,050 --> 00:00:04,170
This is Lou.

3
00:00:04,190 --> 00:00:05,090
And welcome back.

4
00:00:05,720 --> 00:00:12,170
You may recall that when we first defined this parameter as constructor, I mentioned that we are going

5
00:00:12,170 --> 00:00:17,720
to come back and change these constructor parameter names and it's time to do that.

6
00:00:18,230 --> 00:00:24,050
It is a bit odd to have these sort of names like new ID, new name, new gender and so on.

7
00:00:24,590 --> 00:00:30,260
It is actually a bit challenging to come up with these names because these names had to be different

8
00:00:30,260 --> 00:00:37,490
from these instance variable names as these variables are being used to initialize the instance variables,

9
00:00:37,730 --> 00:00:38,260
right?

10
00:00:38,270 --> 00:00:41,390
The values that these variables hold will be assigned here.

11
00:00:41,570 --> 00:00:47,630
So we had to come up with some names that are different from the instance, variable names, and so

12
00:00:47,630 --> 00:00:48,800
it's a bit challenging.

13
00:00:48,920 --> 00:00:55,910
So these are odd looking names, but in reality we can use the same names as these instance variable

14
00:00:55,910 --> 00:00:56,420
names.

15
00:00:56,990 --> 00:01:00,730
So let's go ahead and do that and let's see what happens.

16
00:01:00,740 --> 00:01:04,160
And in the process we will learn about a new keyword.

17
00:01:04,910 --> 00:01:06,230
So let's do that.

18
00:01:06,230 --> 00:01:09,800
Let's do that first here in the second constructor.

19
00:01:10,340 --> 00:01:12,200
So it would be I'd.

20
00:01:13,230 --> 00:01:14,100
Name.

21
00:01:23,620 --> 00:01:25,570
And this one is international.

22
00:01:25,570 --> 00:01:28,390
So it did not have that keyword new.

23
00:01:29,590 --> 00:01:34,660
And we need to change these also because we no longer have those variable names.

24
00:01:43,940 --> 00:01:45,140
And International.

25
00:01:46,000 --> 00:01:46,290
Right.

26
00:01:46,290 --> 00:01:48,630
So the names have been changed.

27
00:01:49,230 --> 00:01:52,920
Now, in the main method, we are creating these student objects.

28
00:01:53,280 --> 00:01:57,390
And let me also add some new statements here.

29
00:02:04,270 --> 00:02:09,520
Then we put a new line here just so that we can distinguish this statement.

30
00:02:09,880 --> 00:02:16,210
And here, let's just print the name of each of the student objects.

31
00:02:16,780 --> 00:02:18,490
So let's call this.

32
00:02:23,770 --> 00:02:29,200
Name of student one So this would be student one.

33
00:02:30,470 --> 00:02:31,550
Dot name.

34
00:02:33,040 --> 00:02:35,200
Actually let me copy this one here.

35
00:02:36,180 --> 00:02:38,110
You replaced this.

36
00:02:39,190 --> 00:02:42,460
Just so that it'll be easy to change student to.

37
00:02:55,010 --> 00:02:55,480
Okay.

38
00:02:55,940 --> 00:02:56,330
That's it.

39
00:02:56,330 --> 00:02:58,820
So let's go ahead and compile and run this.

40
00:03:03,430 --> 00:03:03,970
Okay.

41
00:03:03,970 --> 00:03:06,310
So here you can see that.

42
00:03:07,650 --> 00:03:09,090
Within the constructor.

43
00:03:09,090 --> 00:03:12,330
It is printing the name John, Raj and Anita.

44
00:03:12,750 --> 00:03:20,820
But here with the new statements that we just added, it is still printing now, so it is not printing

45
00:03:20,820 --> 00:03:22,260
the state information.

46
00:03:22,830 --> 00:03:24,690
So what is happening here?

47
00:03:25,320 --> 00:03:30,780
So here both these ID variables are referencing this ID.

48
00:03:31,020 --> 00:03:36,720
So this particular ID is not referencing the instance variable ID.

49
00:03:37,470 --> 00:03:42,060
So because of that, all of these variables are not getting initialized.

50
00:03:42,570 --> 00:03:47,520
And so here it is printing the default value of name, which is none.

51
00:03:48,500 --> 00:03:55,430
So the reason for that is because here this these variables here these are local variables.

52
00:03:55,430 --> 00:04:00,530
And these local variables have the same name as the instance variables.

53
00:04:01,160 --> 00:04:08,270
Recall that when we consider a method, these method parameters are also local variables.

54
00:04:08,300 --> 00:04:15,380
Similarly with constructors also the constructor parameters are also considered as local variables of

55
00:04:15,380 --> 00:04:16,850
that particular constructor.

56
00:04:17,690 --> 00:04:22,730
And this is also a local variable, but the constructor parameters are also local variables.

57
00:04:23,000 --> 00:04:27,380
So next ID is a local variable which is declared within the constructor.

58
00:04:27,500 --> 00:04:30,380
But the constructor parameters are also local variables.

59
00:04:30,950 --> 00:04:37,100
Now here what is happening is we are using the same names as the instance variable names.

60
00:04:37,490 --> 00:04:44,660
So if local variable names have the same names as the instance variable names, then we say that those

61
00:04:44,660 --> 00:04:51,800
local variables are hiding or shadowing the instance variables, or they can be static variables to.

62
00:04:51,800 --> 00:04:55,910
But generally you will see them hiding the instance variables.

63
00:04:56,390 --> 00:05:03,350
So when we say that they are hiding the instance variables, what it means is if we use that variable

64
00:05:03,350 --> 00:05:10,910
name within the constructor, then it would reference the local variable rather than the instance variable

65
00:05:10,910 --> 00:05:13,670
or the static variable declared at the class level.

66
00:05:15,050 --> 00:05:19,640
So these variables are hiding this or shadowing these variables.

67
00:05:20,240 --> 00:05:27,410
So that's the reason why the use of these variables are referencing local variables.

68
00:05:28,070 --> 00:05:31,250
So how can we access the instance variable?

69
00:05:31,730 --> 00:05:38,150
And for that we used something called this reference because it is a reference.

70
00:05:38,600 --> 00:05:45,650
We can use the dot operator here and with that this ID variable will be initialized.

71
00:05:46,370 --> 00:05:50,540
Now notice that I'm calling it as this reference.

72
00:05:50,690 --> 00:05:52,850
Here we have this invocation.

73
00:05:52,850 --> 00:05:57,260
So that is something different because we are invoking an overloaded constructor.

74
00:05:57,290 --> 00:06:03,050
But this one is this reference and I'm calling it as a reference.

75
00:06:03,200 --> 00:06:06,470
So the question would be, what is it referencing?

76
00:06:07,100 --> 00:06:09,590
It is referencing the current object.

77
00:06:10,040 --> 00:06:13,370
Now we know about object reference, right?

78
00:06:13,400 --> 00:06:15,770
Here we have three object references.

79
00:06:15,770 --> 00:06:18,080
Student one, student two and student three.

80
00:06:18,590 --> 00:06:23,020
Student one, for example, is referencing the student object, right?

81
00:06:23,060 --> 00:06:27,080
So this is an object reference and it is referencing the student object.

82
00:06:27,530 --> 00:06:31,550
And within the object, let's say within the student object.

83
00:06:31,640 --> 00:06:38,060
If we want to reference that particular object itself, the current object itself, then we would use

84
00:06:38,360 --> 00:06:39,500
this reference.

85
00:06:39,980 --> 00:06:48,080
So for instance, within the student object, if we consider the constructor code or any of the instance

86
00:06:48,080 --> 00:06:52,760
methods, right, we can also access instance methods via the object reference.

87
00:06:52,760 --> 00:06:57,920
Student one Earlier we used to have the compute method, so that was an instance method.

88
00:06:58,130 --> 00:07:04,520
So if you are inside such an instance method, so if that instance method is executing, then within

89
00:07:04,520 --> 00:07:11,750
that instance method you can reference that particular object, the current object using the this reference

90
00:07:11,840 --> 00:07:13,670
or inside a constructor.

91
00:07:14,210 --> 00:07:16,720
So that is what this reference is.

92
00:07:16,730 --> 00:07:22,520
So what we need to do is we have to use this here, so let's do that.

93
00:07:24,110 --> 00:07:29,510
So earlier the same local variable was getting initialized with itself.

94
00:07:29,510 --> 00:07:31,370
So which is sort of meaningless.

95
00:07:36,240 --> 00:07:43,020
And we don't have to do that for tuition fees because tuition fees is not hidden by any of the variables.

96
00:07:43,320 --> 00:07:48,190
So tuition fees is is not hidden and hence it can be accessed directly.

97
00:07:48,210 --> 00:07:55,620
It is also an also an instance variable and international fees is also an internet is also an instance

98
00:07:55,620 --> 00:07:56,220
variable.

99
00:07:56,220 --> 00:08:01,770
But both these variables are not hidden by any of these local variables and hence they can be accessed

100
00:08:01,770 --> 00:08:02,400
directly.

101
00:08:07,240 --> 00:08:07,400
Okay.

102
00:08:07,510 --> 00:08:08,410
Now, here.

103
00:08:08,410 --> 00:08:11,530
We can leave them as it is, or we can add.

104
00:08:12,220 --> 00:08:13,930
We can also access them this way.

105
00:08:13,960 --> 00:08:16,420
Otherwise, it's just going to access the local variables.

106
00:08:16,420 --> 00:08:19,540
So for next ID, it's just a local variable.

107
00:08:19,540 --> 00:08:22,930
So you cannot use this reference here because it is declared here.

108
00:08:29,410 --> 00:08:31,390
So for tuition fees, we don't need that.

109
00:08:31,630 --> 00:08:36,700
And this can be used to access a static variable to student count as a static variable.

110
00:08:36,730 --> 00:08:38,380
But you don't do that.

111
00:08:38,590 --> 00:08:43,150
Normally you would just use it only to access hidden variables.

112
00:08:44,620 --> 00:08:44,850
That's it.

113
00:08:44,920 --> 00:08:48,880
Now let's just go ahead and compile and execute it.

114
00:08:52,770 --> 00:08:57,630
As you can see now, it is printing the names John, Roger and Anita.

115
00:08:58,110 --> 00:09:02,310
So the instance variables got initialized this way, this time.

116
00:09:02,730 --> 00:09:05,130
So that's what this reference is.

117
00:09:05,130 --> 00:09:12,090
So this reference, you will use it to access any hidden variables, hidden or shadowed variables.

118
00:09:12,390 --> 00:09:18,060
Shadow is another term that is used and it can be used to access static variables to.

119
00:09:18,060 --> 00:09:19,680
But that is very uncommon.

120
00:09:19,680 --> 00:09:21,450
Or you may never even do that.

121
00:09:21,450 --> 00:09:28,530
So typically it is used to access only hidden instance variables and you can also use it because it's

122
00:09:28,530 --> 00:09:29,490
just a reference.

123
00:09:29,490 --> 00:09:35,670
You can also use it to access instance methods also, but once again you wouldn't do that.

124
00:09:36,000 --> 00:09:39,870
So typically you can directly access the instance methods.

125
00:09:39,870 --> 00:09:43,980
There is no reason why you need to use this because they are not hidden.

126
00:09:44,580 --> 00:09:51,660
So it is only used useful for accessing hidden variables and those variables that are not hidden like

127
00:09:51,660 --> 00:09:57,950
tuition fees, you can access them directly and these variables typically you will see them being exe

128
00:09:57,960 --> 00:10:03,240
being used here in constructors, but you can also use them in methods also.

129
00:10:03,240 --> 00:10:07,050
So let's just define one method called.

130
00:10:08,720 --> 00:10:09,800
Update profile.

131
00:10:09,800 --> 00:10:15,860
You may recall from the very first lecture we mentioned about this method, having this method in the

132
00:10:15,860 --> 00:10:16,580
student class.

133
00:10:16,580 --> 00:10:18,590
So we are introducing it now.

134
00:10:18,950 --> 00:10:23,570
So we will say a string name and we want to update the name.

135
00:10:25,080 --> 00:10:29,670
So will just say this dot name equals to the name.

136
00:10:29,670 --> 00:10:34,800
So this is a method and let's just return a default of true.

137
00:10:37,240 --> 00:10:41,330
So what we will do is we will just change this to Joanne.

138
00:10:41,950 --> 00:10:45,640
Let's assume that the user has entered a wrong name.

139
00:10:46,350 --> 00:10:47,830
And we need to correct it.

140
00:10:47,850 --> 00:10:49,950
So here we will say.

141
00:10:49,950 --> 00:10:52,980
Student one dot.

142
00:10:55,420 --> 00:10:56,590
Update profile.

143
00:10:57,670 --> 00:11:05,470
So Student has realized that he has entered his name incorrectly, so he comes here and updates it from

144
00:11:05,470 --> 00:11:12,430
the update screen and somehow this particular statement gets executed and we will just print it.

145
00:11:17,450 --> 00:11:18,830
I think we don't need this.

146
00:11:20,290 --> 00:11:21,250
And here.

147
00:11:22,560 --> 00:11:23,490
Let's say.

148
00:11:25,980 --> 00:11:28,860
Updated name of student one.

149
00:11:29,990 --> 00:11:30,590
Okay.

150
00:11:31,160 --> 00:11:32,720
And here it has to print.

151
00:11:33,520 --> 00:11:35,170
So here it will print Joanne.

152
00:11:35,170 --> 00:11:37,090
And here it will print John.

153
00:11:37,360 --> 00:11:38,230
So.

154
00:11:43,440 --> 00:11:49,860
So initially it printed Joanne and now once it got updated, it printed the correct student name, which

155
00:11:49,860 --> 00:11:50,610
is John.

156
00:11:51,930 --> 00:11:54,390
And the next thing is this.

157
00:11:55,580 --> 00:12:03,170
This is actually an instance variable and it is allowing us to access instance variables and also instance

158
00:12:03,170 --> 00:12:03,770
methods.

159
00:12:03,860 --> 00:12:07,910
So this cannot be used within a static method.

160
00:12:08,090 --> 00:12:11,690
So in this class we have this static method called main.

161
00:12:11,720 --> 00:12:13,700
We can also have other static methods.

162
00:12:13,940 --> 00:12:21,800
But within the static method, we cannot use this reference because from static method we cannot access

163
00:12:21,800 --> 00:12:23,040
any instance stuff.

164
00:12:23,060 --> 00:12:25,320
And this is an instance variable.

165
00:12:25,850 --> 00:12:31,280
It's a, it's a reference instance variable, which is an object reference, but a reference to the

166
00:12:31,280 --> 00:12:32,270
current object.

167
00:12:32,660 --> 00:12:33,950
So we cannot use that.

168
00:12:33,950 --> 00:12:40,430
So if we compile this, you can, we can see the output, the error message.

169
00:12:40,970 --> 00:12:44,030
So it says non static variable this.

170
00:12:44,030 --> 00:12:46,550
So non static means instance variable.

171
00:12:46,550 --> 00:12:50,150
This cannot be referenced from a static context.

172
00:12:50,150 --> 00:12:53,750
So it highlights the error that we cannot use it.

173
00:12:53,780 --> 00:12:57,410
So it calls the static method as a static context.

174
00:12:57,710 --> 00:12:59,180
So we cannot do this.

175
00:12:59,180 --> 00:13:00,950
So it's, it has to be.

176
00:13:01,580 --> 00:13:02,390
Student one.

177
00:13:03,920 --> 00:13:04,820
So that's it.

178
00:13:04,820 --> 00:13:09,560
And just keep in mind that this and this are different.

179
00:13:09,560 --> 00:13:17,630
This is an invocation statement and we are invoking an overloaded constructor and this is a reference

180
00:13:17,630 --> 00:13:21,650
variable object reference, but a reference to the current object.

181
00:13:21,740 --> 00:13:23,630
So these are two different things.

182
00:13:23,630 --> 00:13:29,360
And since it is an object reference, we are able to use the DOT operator and since this is an invocation

183
00:13:29,360 --> 00:13:31,970
statement, we are invoking a constructor.

184
00:13:32,270 --> 00:13:35,300
Let's also change this for here.

185
00:13:35,300 --> 00:13:37,940
Also, let me just copy all of these.

186
00:13:39,100 --> 00:13:45,120
And replace this, that it's much more simpler.

187
00:13:45,130 --> 00:13:48,610
And let's go ahead and change these also.

188
00:13:49,150 --> 00:13:51,070
So that's the last update.

189
00:13:55,260 --> 00:13:56,850
So with each.

190
00:13:59,390 --> 00:14:00,110
Enhancement.

191
00:14:00,110 --> 00:14:02,780
We are simplifying our code.

192
00:14:04,120 --> 00:14:04,540
Right.

193
00:14:04,910 --> 00:14:06,040
That said so.

194
00:14:07,210 --> 00:14:08,620
Now let's compile.

195
00:14:10,030 --> 00:14:12,190
Let's ensure everything is running fine.

196
00:14:14,040 --> 00:14:14,180
Okay.

197
00:14:14,310 --> 00:14:15,900
So everything is perfect.

198
00:14:16,230 --> 00:14:17,430
So that's all there is.

199
00:14:17,430 --> 00:14:25,740
So we have learned about this reference here and it is helping us to initialize the state and it is

200
00:14:25,740 --> 00:14:28,200
useful for accessing hidden variables.

201
00:14:28,780 --> 00:14:34,140
Alright, thank you and I hope you enjoyed learning about this reference and I will see you in the next

202
00:14:34,140 --> 00:14:34,770
lecture.

