1
00:00:01,130 --> 00:00:08,550
Not let's look at the list duffus Listen to this is useful when sequence markers that is preserving

2
00:00:08,700 --> 00:00:15,810
the order of the elements inserted is a requirement and this interface models a resizable linearity

3
00:00:15,810 --> 00:00:16,280
.

4
00:00:16,530 --> 00:00:24,990
That is It Is Like A not A but as a resizable and it is just like the IRS and it can also contain duplicates

5
00:00:24,990 --> 00:00:26,830
.

6
00:00:27,000 --> 00:00:28,950
And here is the declaration awfullest interface.

7
00:00:29,040 --> 00:00:32,240
And we know that it extends the collection interface.

8
00:00:32,280 --> 00:00:37,200
So in addition to methods that it is headed toward that collection it also adds several new methods

9
00:00:37,250 --> 00:00:38,130
.

10
00:00:38,650 --> 00:00:45,150
Unhidden the category of methods that the list interface specifies that positional search duration Andrena

11
00:00:45,150 --> 00:00:46,160
view.

12
00:00:46,200 --> 00:00:52,830
Let's see what we how in each of these gettig it is since this preserves the position of inserted elements

13
00:00:53,040 --> 00:00:55,490
we have some positions specific methods.

14
00:00:55,740 --> 00:01:02,210
That is all the methods how index number as a parameter have mattered right and so on an element it

15
00:01:02,220 --> 00:01:08,850
to specified in next segment that would insert an element at a specified index and also returns the

16
00:01:08,850 --> 00:01:12,120
element previously stored at that index.

17
00:01:12,140 --> 00:01:15,510
I'd meant that absenting amended the specified index.

18
00:01:15,960 --> 00:01:19,730
The next hour that X an element to the end of the list.

19
00:01:19,890 --> 00:01:22,510
So index number is implicit here.

20
00:01:22,990 --> 00:01:26,090
The moment that results in it amended to specify the next.

21
00:01:26,100 --> 00:01:32,910
And finally I on the matter are all the elements in the input collection starting at the specified location

22
00:01:33,000 --> 00:01:41,100
in the current list next to search operations under our diplomats here Husserl and so just the list

23
00:01:41,100 --> 00:01:46,980
for the specified element under the index of the first appearance of the element.

24
00:01:47,490 --> 00:01:51,480
It would be then a minus one if the list does not contain the element.

25
00:01:51,570 --> 00:01:58,080
Similarly second method returns the index of the last occurrence of the specified element or minus one

26
00:01:58,140 --> 00:02:03,920
if element is not Farner next iteration related methods.

27
00:02:03,930 --> 00:02:10,259
Now if you recall when discussant collection interface V before you discussed the iterative method which

28
00:02:10,320 --> 00:02:16,890
said returns on instance off iterator interface have these lists or did it and methods are also similar

29
00:02:16,890 --> 00:02:23,500
to the method under it and an instance off list Tritter which is actually some interface off it did

30
00:02:23,500 --> 00:02:27,030
it that interface since it's a sub interface or for that matter.

31
00:02:27,030 --> 00:02:34,550
It provides a few more specialized methods and look at these methods when discussing atlast next as

32
00:02:34,560 --> 00:02:37,500
range view on how only a single operation here.

33
00:02:37,950 --> 00:02:44,310
The simplest method here returns a popular view of the list which is in the specified range that is

34
00:02:44,310 --> 00:02:50,010
it written or list that is a subset of the current list and this subset is in between the specified

35
00:02:50,010 --> 00:02:51,540
indices from index.

36
00:02:51,540 --> 00:02:58,380
On doing this here doing that excludes you that is element or that index is not written.

37
00:02:58,500 --> 00:03:05,260
In other words only elements in between the indices from Index index minus 1 are included in the return

38
00:03:05,260 --> 00:03:07,150
list.

39
00:03:07,350 --> 00:03:10,700
Also the return list is bagged by the original list.

40
00:03:10,710 --> 00:03:16,920
What it means is any change is made in the return list then be reflected in the origin or list and vice

41
00:03:16,920 --> 00:03:17,830
versa.

42
00:03:18,330 --> 00:03:23,540
So if you add any element in the return list then that element gets added in the original list also

43
00:03:23,550 --> 00:03:24,020
.

44
00:03:24,540 --> 00:03:27,620
We will look at this in a word them off orderless.

45
00:03:27,720 --> 00:03:29,430
So that's what the list interface.

46
00:03:29,640 --> 00:03:30,030
Thank you

