WEBVTT
1
00:00:02.160 --> 00:00:03.030
Hi there.

2
00:00:03.060 --> 00:00:04.160
This is De La Rue.

3
00:00:04.170 --> 00:00:05.130
And welcome back.

4
00:00:05.160 --> 00:00:07.610
Let's now do something really exciting.

5
00:00:07.620 --> 00:00:10.920
Let's go ahead and deploy a web application.

6
00:00:11.190 --> 00:00:16.900
So in this lecture, we are going to deploy a web application and this demo has two parts.

7
00:00:16.920 --> 00:00:23.220
In the first part, we will deploy a web application which will have just a static HTML page.

8
00:00:23.400 --> 00:00:30.210
And then in the second part, we will enhance that same web application to also include a servlet,

9
00:00:30.210 --> 00:00:34.410
and we will redeploy it in the Tomcat Web server.

10
00:00:34.860 --> 00:00:39.000
Tomcat is a sublet container, but we are also going to use it as a web server.

11
00:00:39.030 --> 00:00:40.380
So let's do that.

12
00:00:40.380 --> 00:00:42.690
So first thing is, we have to.

13
00:00:44.840 --> 00:00:45.590
Create.

14
00:00:45.830 --> 00:00:49.380
Lets create a new workspace for our eclipse.

15
00:00:49.400 --> 00:00:57.810
So let me create a new folder and let me name it as let's name our web application as books.

16
00:00:57.830 --> 00:00:58.670
Aloha.

17
00:00:59.460 --> 00:01:05.670
If you are not familiar with the term aloha, it's a Hawaiian word for saying hello or goodbye.

18
00:01:05.700 --> 00:01:08.520
So our web application name is Books.

19
00:01:08.530 --> 00:01:09.080
Aloha.

20
00:01:09.090 --> 00:01:10.560
So that's the workspace.

21
00:01:10.860 --> 00:01:12.690
So this is in my C Drive.

22
00:01:13.750 --> 00:01:21.700
So let me go into Eclipse Mars and older version of Eclipse and let me open it.

23
00:01:23.810 --> 00:01:26.810
So let me browse and let me select.

24
00:01:28.230 --> 00:01:33.150
The new folder workspace, which we just created books.

25
00:01:33.150 --> 00:01:33.990
Aloha.

26
00:01:37.130 --> 00:01:41.570
Keep in mind the eclipse that we installed is Java eclipse.

27
00:01:43.700 --> 00:01:43.970
Okay.

28
00:01:43.970 --> 00:01:45.950
So this is the screen that we have.

29
00:01:49.200 --> 00:01:50.280
Let me close these.

30
00:01:52.970 --> 00:01:53.170
Okay.

31
00:01:53.210 --> 00:01:54.770
So this is the screen.

32
00:01:55.190 --> 00:01:56.840
Now here.

33
00:01:59.630 --> 00:02:05.330
In the file, go into new and click on Dynamic Web Project.

34
00:02:07.540 --> 00:02:09.669
Let's just name it as box.

35
00:02:10.810 --> 00:02:15.340
So essentially we will create a page which displays a list of books.

36
00:02:16.400 --> 00:02:16.710
Okay.

37
00:02:16.850 --> 00:02:18.500
Let me click on next.

38
00:02:21.030 --> 00:02:26.610
Next, you can select this one generate web XML deployment descriptor.

39
00:02:26.700 --> 00:02:28.500
I will show you that file later.

40
00:02:28.620 --> 00:02:29.850
So finish.

41
00:02:32.010 --> 00:02:33.070
And there you go.

42
00:02:33.090 --> 00:02:36.690
It has created this package, this project called Books.

43
00:02:36.720 --> 00:02:40.320
Now here under Web content.

44
00:02:40.920 --> 00:02:43.350
Let me right click on that.

45
00:02:43.410 --> 00:02:44.640
Go into new.

46
00:02:45.300 --> 00:02:47.880
Let's create a HTML file.

47
00:02:49.140 --> 00:02:49.250
Okay.

48
00:02:49.350 --> 00:02:51.000
Let's name it as.

49
00:02:53.820 --> 00:03:00.180
My books dot html say next and you can leave this thing.

50
00:03:00.390 --> 00:03:01.360
HTML five.

51
00:03:01.380 --> 00:03:02.610
So this is a template.

52
00:03:02.610 --> 00:03:04.320
So it will create some template code.

53
00:03:04.860 --> 00:03:05.910
Here it is.

54
00:03:06.060 --> 00:03:08.370
So it has some HTML tags.

55
00:03:08.760 --> 00:03:11.550
Now, let me just go ahead.

56
00:03:11.760 --> 00:03:15.630
Let me increase the font size to preferences.

57
00:03:21.450 --> 00:03:22.980
Appearance, color and fonts.

58
00:03:22.980 --> 00:03:23.850
Basic.

59
00:03:29.900 --> 00:03:31.400
So did a 16 year.

60
00:03:33.890 --> 00:03:34.650
This is good.

61
00:03:34.670 --> 00:03:36.470
So let me just copy the file.

62
00:03:36.470 --> 00:03:37.790
I have the file here.

63
00:03:41.390 --> 00:03:42.890
So this is the file.

64
00:03:42.920 --> 00:03:47.300
So earlier we discussed a little bit about the HTML tags.

65
00:03:47.690 --> 00:03:54.590
So here also we have all of these HTML tags and you can follow some good course and you can learn more

66
00:03:54.590 --> 00:03:55.700
about HTML.

67
00:03:55.850 --> 00:03:59.180
But we did go over some of the tags here.

68
00:03:59.180 --> 00:04:02.210
So this is essentially going to display two books.

69
00:04:02.330 --> 00:04:09.350
So here we have the HTML tag and there is the HTML tag here and it also ends with an HTML tag.

70
00:04:09.560 --> 00:04:15.590
Similarly, there is this header tag, header tag ends here and which has this title tag.

71
00:04:16.010 --> 00:04:24.530
And then the body, this is the body of the HTML and the body tag also ends right before the HTML tag.

72
00:04:24.650 --> 00:04:29.300
And within the body we have this table here.

73
00:04:29.330 --> 00:04:31.370
So this is where we are displaying it.

74
00:04:32.350 --> 00:04:38.260
And this div tag is used for displaying the name of the application.

75
00:04:38.260 --> 00:04:42.730
So it will be clear when we when we show it, when we see in the browser.

76
00:04:43.840 --> 00:04:48.370
And here we have the table tag and table tag will have multiple rows.

77
00:04:49.000 --> 00:04:50.380
So there are only two books.

78
00:04:50.380 --> 00:04:52.570
So we are using two rows here.

79
00:04:52.780 --> 00:04:57.580
So this is for the first book here and we'll look at that and this is for the second book.

80
00:04:57.640 --> 00:05:00.670
Now for the first book, I'm showing an image.

81
00:05:00.670 --> 00:05:05.830
And for the image I'm just using some an image from the from the web.

82
00:05:06.580 --> 00:05:07.750
This is an image.

83
00:05:07.870 --> 00:05:10.780
This URL points to the book image.

84
00:05:11.690 --> 00:05:12.580
And then we are.

85
00:05:12.590 --> 00:05:14.360
So this is inside a TD here.

86
00:05:14.360 --> 00:05:18.470
So this is one row and within this row we have two TD tags here.

87
00:05:18.890 --> 00:05:21.500
TD That's the first one and this is the second one.

88
00:05:21.500 --> 00:05:28.010
And in the second one we are displaying the author name and also the rating of that particular book.

89
00:05:28.550 --> 00:05:30.020
Let's say in our website.

90
00:05:30.740 --> 00:05:32.060
So that's the thing.

91
00:05:32.060 --> 00:05:37.130
And then we have a second row here, which is which comes in between the two books.

92
00:05:37.400 --> 00:05:40.400
So it's like just creates an empty space here.

93
00:05:41.450 --> 00:05:43.360
And this is it.

94
00:05:43.370 --> 00:05:44.720
And this is the second book.

95
00:05:45.290 --> 00:05:49.760
And for the author name, we are using this font here.

96
00:05:49.760 --> 00:05:53.450
It's kind of an orange color and the same thing here.

97
00:05:54.110 --> 00:05:59.630
So this is how you would specify it, but HTML is something that you would have to learn separately.

98
00:05:59.660 --> 00:06:01.310
So this is what we have.

99
00:06:02.540 --> 00:06:10.070
Now what we are going to do is let's go back to this books here, the books project, and let me right

100
00:06:10.070 --> 00:06:12.200
click it, right click on that.

101
00:06:12.530 --> 00:06:18.140
And let's say here, export export, var file.

102
00:06:18.920 --> 00:06:20.060
Let's click on that.

103
00:06:20.970 --> 00:06:22.290
For destination.

104
00:06:23.400 --> 00:06:24.450
Let me have something.

105
00:06:24.450 --> 00:06:25.830
One location for that.

106
00:06:25.860 --> 00:06:28.680
Let me call it as books.

107
00:06:29.860 --> 00:06:30.700
Aloha.

108
00:06:30.730 --> 00:06:33.760
So it would create something called as a var file.

109
00:06:33.760 --> 00:06:41.260
And the var file is just a compressed file format and it is used for distributing the web applications.

110
00:06:41.470 --> 00:06:43.390
It would have some fixed format.

111
00:06:43.390 --> 00:06:47.710
The VAR file would have a fixed format, the fixed structure within itself.

112
00:06:48.130 --> 00:06:56.350
And it is used for distributing Java applications, Java EE Web applications, so which would include

113
00:06:56.350 --> 00:06:57.930
subnets and JSP and so on.

114
00:06:57.940 --> 00:06:59.320
So let me click on that.

115
00:07:00.280 --> 00:07:01.540
And let me say.

116
00:07:01.930 --> 00:07:03.360
Override existing file.

117
00:07:03.370 --> 00:07:05.100
Let's go finish.

118
00:07:05.140 --> 00:07:07.180
So let me go back now.

119
00:07:09.490 --> 00:07:10.870
So it is here.

120
00:07:10.870 --> 00:07:12.220
So let's copy that.

121
00:07:13.540 --> 00:07:16.660
Let me go here into Tomcat and Bin.

122
00:07:16.660 --> 00:07:19.510
My Tomcat is already running here, so we are God.

123
00:07:19.990 --> 00:07:22.120
If it is not running, you can start it too.

124
00:07:22.150 --> 00:07:26.050
So let's go into web apps and let me copy it here.

125
00:07:26.050 --> 00:07:32.950
And this var file will get unpacked within ten or 15 seconds and it gets unpacked because the server

126
00:07:32.950 --> 00:07:34.060
is already on.

127
00:07:34.450 --> 00:07:39.880
You see it got unpacked here, but if it if the server is not on, then you have to copy it here.

128
00:07:39.880 --> 00:07:43.180
Go into the bin directory and start the tomcat.

129
00:07:43.840 --> 00:07:45.360
Now this is what we have.

130
00:07:45.370 --> 00:07:52.720
So it created this thing here and it has a specific structure whereby enough and within web enough,

131
00:07:52.720 --> 00:07:54.250
you have this web dot XML.

132
00:07:54.250 --> 00:07:55.510
We will look at that later.

133
00:07:56.440 --> 00:07:58.750
We will explore this structure a little bit later.

134
00:07:58.750 --> 00:08:01.660
So my box is copied here, the HTML file.

135
00:08:01.900 --> 00:08:03.290
So it's all there.

136
00:08:03.310 --> 00:08:05.410
Now, let's go ahead and.

137
00:08:08.120 --> 00:08:12.590
So this is the you are a localhost column at 88, let's say.

138
00:08:14.620 --> 00:08:14.910
Books.

139
00:08:14.920 --> 00:08:20.710
Aloha slash my books dot html.

140
00:08:22.020 --> 00:08:22.500
That's it.

141
00:08:22.500 --> 00:08:24.000
So you can see that.

142
00:08:25.510 --> 00:08:26.720
The both the books here.

143
00:08:26.740 --> 00:08:27.820
So there are two books.

144
00:08:27.820 --> 00:08:31.740
So this is the first book and this is the second book.

145
00:08:31.750 --> 00:08:36.640
So the first book, this is the author name and this is the rating and this is the title of the book

146
00:08:37.360 --> 00:08:38.710
and this is the image.

147
00:08:39.309 --> 00:08:43.750
And for this image, a new history type request would be sent in order to get the image.

148
00:08:44.140 --> 00:08:48.220
So to get the HTML page itself, there is a request being generated.

149
00:08:48.220 --> 00:08:51.400
But then to get these two images, two separate requests would be sent.

150
00:08:51.790 --> 00:08:54.580
So that's the static HTML content.

151
00:08:55.030 --> 00:08:57.100
So that's the first part of the demo.

152
00:08:57.130 --> 00:09:02.920
Now one other thing I want to tell you is so this file is my books dot HTML.

153
00:09:03.040 --> 00:09:06.940
Now if I remove this so it gives you this error.

154
00:09:07.870 --> 00:09:16.030
But if there was a file called indexed HTML over here in this particular location, then that would

155
00:09:16.030 --> 00:09:16.360
show.

156
00:09:16.360 --> 00:09:22.390
So what we can do is let's go ahead and here let's rename this to.

157
00:09:23.230 --> 00:09:24.160
Index.

158
00:09:25.750 --> 00:09:28.390
So now if we go back.

159
00:09:29.240 --> 00:09:30.980
So this this was in the.

160
00:09:32.190 --> 00:09:36.510
In our Web Apps directory in Books Aloha, which is our web application.

161
00:09:36.510 --> 00:09:42.300
So I just renamed that file name from my books to index.

162
00:09:42.810 --> 00:09:46.440
Now if we hit enter, you see that it shows that.

163
00:09:46.440 --> 00:09:50.940
So if you do not specify anything, it will try to search for index dot html.

164
00:09:51.570 --> 00:09:52.230
So that's it.

165
00:09:52.260 --> 00:10:00.230
Now let's head over to Eclipse and let's start the second the second part of the demo.

166
00:10:00.240 --> 00:10:09.810
So for that end within my box here, let me right click on this and let me say new and let me create

167
00:10:09.810 --> 00:10:16.620
a servlet so you can see servlet here and let's call it as the package.

168
00:10:16.620 --> 00:10:18.240
Let's create a package name.

169
00:10:20.320 --> 00:10:21.730
So this is my company name.

170
00:10:21.730 --> 00:10:23.110
And the project is.

171
00:10:24.740 --> 00:10:25.350
Books.

172
00:10:25.370 --> 00:10:26.150
Aloha.

173
00:10:26.480 --> 00:10:31.460
And typically sublets are controllers in the MVC framework.

174
00:10:31.460 --> 00:10:34.700
So let's do that and class name.

175
00:10:35.030 --> 00:10:38.000
Let me have it as my books.

176
00:10:38.510 --> 00:10:45.020
So let's just hit next and just next.

177
00:10:45.810 --> 00:10:47.970
And you have some defaults here.

178
00:10:48.930 --> 00:10:49.920
Let's do that.

179
00:10:51.090 --> 00:10:52.800
So my books is created.

180
00:10:52.800 --> 00:10:55.800
So if you go into Java resources here.

181
00:10:56.730 --> 00:11:03.240
You have sauce and you have this package which we just created and of which we have my books dot Java.

182
00:11:03.480 --> 00:11:10.650
So all of your Java files will be created here, whereas the HTML files are not, theirs will be created

183
00:11:10.650 --> 00:11:11.940
under web content.

184
00:11:12.270 --> 00:11:16.710
Now we can see that there are some compilation errors here.

185
00:11:17.370 --> 00:11:19.970
Now, the thing is, let me comment this.

186
00:11:19.980 --> 00:11:21.530
I'll uncomment it later.

187
00:11:21.540 --> 00:11:23.250
So http servlet.

188
00:11:23.250 --> 00:11:27.060
So this is a servlet and it is extending type servlet.

189
00:11:27.630 --> 00:11:30.480
So which is part of the servlet specification?

190
00:11:30.900 --> 00:11:33.720
It's a class that comes with the servlet package.

191
00:11:33.850 --> 00:11:36.960
Now that servlet library is not visible.

192
00:11:37.260 --> 00:11:40.500
Now we have the Tomcat installed separately.

193
00:11:40.530 --> 00:11:43.890
We can also add the Tomcat to eclipse.

194
00:11:43.890 --> 00:11:47.640
And if we do that, we can start the server from within Eclipse.

195
00:11:47.670 --> 00:11:49.560
Maybe later I will show you that.

196
00:11:50.070 --> 00:11:57.030
It's a very simple thing to do, but if we do that, then Eclipse will will use the the servlet library

197
00:11:57.030 --> 00:12:00.930
which is within the lib folder in the Tomcat.

198
00:12:00.930 --> 00:12:07.110
So I have shown you in the earlier lecture where the lib folder was and it had a jar file for servlet,

199
00:12:07.110 --> 00:12:08.610
so that would be used.

200
00:12:08.640 --> 00:12:12.980
Now in our case we can add that manually to eclipse.

201
00:12:12.990 --> 00:12:14.790
So what we can do is.

202
00:12:15.600 --> 00:12:18.420
Let me right click go into properties.

203
00:12:22.100 --> 00:12:26.210
Into Java build path libraries and external jars.

204
00:12:26.330 --> 00:12:28.970
So let me go ahead and select.

205
00:12:31.180 --> 00:12:36.340
Going to tomcat here into lib folder and let me select.

206
00:12:37.190 --> 00:12:38.360
Servlet API.

207
00:12:38.390 --> 00:12:45.770
So this is the one if you select it and if you apply and if you say, okay, you see that the compiler

208
00:12:45.770 --> 00:12:46.880
error has gone.

209
00:12:47.810 --> 00:12:48.740
So that said.

210
00:12:48.740 --> 00:12:51.290
So here there are few methods.

211
00:12:51.290 --> 00:12:58.550
So this is a constructor and so this is it also added these methods called do get and do post.

212
00:12:58.550 --> 00:13:07.550
So this is some template code and do get and do post are two methods and http servlet later I will talk

213
00:13:07.550 --> 00:13:09.020
about has to be servlet.

214
00:13:09.560 --> 00:13:15.320
So do get corresponds to the get request that we get from the browser.

215
00:13:15.740 --> 00:13:20.840
So you may recall that in the earlier lecture, one of the earlier lectures we said that there is this

216
00:13:20.840 --> 00:13:25.700
HTTP method and which could be get or post or put or delete.

217
00:13:25.700 --> 00:13:26.990
So if it is good.

218
00:13:26.990 --> 00:13:29.960
So that would correspond to this particular method.

219
00:13:29.960 --> 00:13:32.120
And later I will explain everything.

220
00:13:32.750 --> 00:13:35.150
But for now, let's go ahead and.

221
00:13:37.600 --> 00:13:38.770
Fill this meter.

222
00:13:39.040 --> 00:13:44.440
So we are assuming that we are going to get a get request and that that request would be forwarded to

223
00:13:44.440 --> 00:13:46.670
this particular file.

224
00:13:46.690 --> 00:13:54.870
So now what we are doing going to do here is we have earlier we deployed the HTML file as a static page.

225
00:13:54.880 --> 00:13:59.650
Now we will generate all of that content from within this servlet.

226
00:14:00.100 --> 00:14:04.180
So the servlet is going to generate that page in a dynamic way.

227
00:14:04.360 --> 00:14:09.730
So this method do get or even do post has these two parameters.

228
00:14:09.730 --> 00:14:15.790
One is a request which corresponds to the request that we get from the browser, and one is the response,

229
00:14:15.790 --> 00:14:18.400
the response which we are going to generate now.

230
00:14:18.400 --> 00:14:20.680
So the servlet is going to generate the response.

231
00:14:22.040 --> 00:14:23.630
So here first thing is.

232
00:14:25.040 --> 00:14:26.030
Can you expand us?

233
00:14:26.030 --> 00:14:27.430
So we have the response.

234
00:14:27.440 --> 00:14:35.060
So let's say first thing is let's we need to set a header called response dot set content type.

235
00:14:35.060 --> 00:14:37.400
Here it is set content type.

236
00:14:37.400 --> 00:14:43.470
You may recall that there was one header called content type, let's say text slash.

237
00:14:44.560 --> 00:14:55.630
HTML now to generate the response we call a method called get writer here on the response itself, and

238
00:14:55.630 --> 00:14:59.110
it would return an instance of print.

239
00:15:00.140 --> 00:15:03.800
Writer, which is from the write I Will package.

240
00:15:04.040 --> 00:15:05.930
So let's call it as a writer.

241
00:15:07.050 --> 00:15:09.690
It is important control shift or.

242
00:15:11.310 --> 00:15:14.460
And here we'll say Writer Dot.

243
00:15:16.320 --> 00:15:24.690
Trent Allen can select this and we can have our HTML that we had in that static HTML file.

244
00:15:24.690 --> 00:15:28.440
So you will say HTML something like this.

245
00:15:30.680 --> 00:15:31.430
Sorry.

246
00:15:32.120 --> 00:15:34.250
So you can also have an ending tag.

247
00:15:36.700 --> 00:15:37.420
Here.

248
00:15:37.930 --> 00:15:40.860
Now, there is a lot of HTML in that file.

249
00:15:40.870 --> 00:15:44.800
So we can what we can do is I'm going to copy the entire thing here.

250
00:15:44.800 --> 00:15:46.150
So I have it here.

251
00:15:46.360 --> 00:15:48.700
Let me say control A, control C.

252
00:15:50.480 --> 00:15:50.590
Okay.

253
00:15:50.630 --> 00:15:51.550
Let me copy it.

254
00:15:51.560 --> 00:15:52.460
Here.

255
00:15:52.490 --> 00:15:53.120
That's it.

256
00:15:53.510 --> 00:15:55.280
So we have this.

257
00:15:58.890 --> 00:16:02.550
Actually I named it as LB, so let me rename this to out here.

258
00:16:04.060 --> 00:16:05.230
Instead of a writer.

259
00:16:05.230 --> 00:16:06.430
Let's call it us out.

260
00:16:09.650 --> 00:16:10.030
Okay.

261
00:16:10.040 --> 00:16:10.680
That's about it.

262
00:16:10.700 --> 00:16:13.400
So what we have here is the entire.

263
00:16:14.490 --> 00:16:18.200
Text, the HTML text that we have seen in that file.

264
00:16:18.210 --> 00:16:20.160
So let me actually delete this.

265
00:16:20.880 --> 00:16:21.550
This is good.

266
00:16:21.570 --> 00:16:23.510
So we have the all of this.

267
00:16:23.520 --> 00:16:27.480
So you can see that there is the hash tag, everything that we have seen there.

268
00:16:27.750 --> 00:16:29.490
We have we have it here.

269
00:16:29.490 --> 00:16:36.630
So we have a single println statement which is starting from the head tag and we are concatenating all

270
00:16:36.630 --> 00:16:38.910
the different lines in the HTML file.

271
00:16:38.940 --> 00:16:47.130
We are concatenating them and some of the tags have attributes we call these as attributes, and the

272
00:16:47.130 --> 00:16:49.620
attribute values are also in double quotes.

273
00:16:49.710 --> 00:16:54.560
But then here also, when we are appending, when we are concatenating, we are using double codes.

274
00:16:54.570 --> 00:16:56.580
So there would be a clash there.

275
00:16:56.580 --> 00:17:02.880
So that's why we have to use a skip this double discourse using using a backslash.

276
00:17:03.570 --> 00:17:08.700
So all of this code will be available in the resources section, so you can take a look at it closely.

277
00:17:09.000 --> 00:17:10.470
So this is what we have.

278
00:17:11.369 --> 00:17:13.560
And now this is a servlet.

279
00:17:13.589 --> 00:17:17.160
Now we need to tell the container that this is a sublet.

280
00:17:17.190 --> 00:17:18.300
We need to deploy it.

281
00:17:18.300 --> 00:17:20.950
So container needs to note that this is a sublet.

282
00:17:20.970 --> 00:17:27.960
And for that, what we do is one thing that we can do is we have to go into this Web INF directory.

283
00:17:29.220 --> 00:17:30.720
And within the web, enough.

284
00:17:30.720 --> 00:17:34.980
I said that we have this web XML file which has been created.

285
00:17:34.980 --> 00:17:36.780
Let me click on source here.

286
00:17:36.840 --> 00:17:38.100
So it will show the source.

287
00:17:38.100 --> 00:17:42.660
So here we can specify all the different subnets that we have.

288
00:17:43.260 --> 00:17:44.130
So let me.

289
00:17:46.480 --> 00:17:52.000
I already have some code here, so in the interest of time, I'm just going to copy that code.

290
00:17:55.940 --> 00:17:57.500
So this is what we have.

291
00:17:57.530 --> 00:18:00.270
So this is the sublet.

292
00:18:00.290 --> 00:18:09.590
So this this this particular XML code tells the container that we have a servlet now in the browser

293
00:18:09.590 --> 00:18:16.040
when we are going to well after deploying in the browser, we are going to access this particular servlet

294
00:18:16.040 --> 00:18:21.140
using this particular URL so that that's called as a URL pattern.

295
00:18:21.140 --> 00:18:22.460
So there are two elements here.

296
00:18:22.490 --> 00:18:24.020
One of them is called servlet.

297
00:18:24.050 --> 00:18:26.120
Other one is called a servlet mapping.

298
00:18:26.270 --> 00:18:29.410
Now within servlet mapping, we have the URL pattern.

299
00:18:29.420 --> 00:18:35.720
So we are going to in the browser, once it is deployed in the browser, we will look for this particular

300
00:18:35.720 --> 00:18:38.930
resource, which is nothing but a server which would be a servlet.

301
00:18:39.080 --> 00:18:47.330
Now, when the when the Tomcat, when it receives this, it looks it knows that it looks at this particular

302
00:18:47.330 --> 00:18:48.560
file, for instance.

303
00:18:48.560 --> 00:18:54.830
So it knows that the client is looking for this URL for some resource at this URL.

304
00:18:54.920 --> 00:18:57.410
And here it says a servlet name.

305
00:18:57.680 --> 00:19:00.110
So this is like an like a key.

306
00:19:00.380 --> 00:19:07.400
And over here, also within this particular element, we have the same servlet name here.

307
00:19:08.090 --> 00:19:15.350
And this servlet name corresponds to a maps to this particular servlet class, which we have created

308
00:19:15.350 --> 00:19:17.950
earlier, which we have created here.

309
00:19:17.960 --> 00:19:22.040
So it's just the name of the entire path, path to that class.

310
00:19:22.040 --> 00:19:24.830
So this is the entire package name which we created.

311
00:19:25.100 --> 00:19:26.300
So that's what it is.

312
00:19:26.300 --> 00:19:31.940
So the client, the browser does not know anything about this particular resource.

313
00:19:31.940 --> 00:19:34.340
The client only uses this resource.

314
00:19:34.340 --> 00:19:41.330
Maybe it's a link on the on one of the web pages or the user will enter that in the address bar, but

315
00:19:41.720 --> 00:19:45.140
the user is going to just enter the URL.

316
00:19:45.260 --> 00:19:49.340
But that URL, the location corresponds to some servlet here.

317
00:19:50.200 --> 00:19:51.250
So that's it.

318
00:19:51.250 --> 00:19:56.650
And Servlet is does not have a main method, although it is a Java file, it does not have a main method.

319
00:19:57.400 --> 00:20:02.380
So there are some other methods which the container uses to use a servlet.

320
00:20:02.890 --> 00:20:04.720
But let's not worry about that now.

321
00:20:04.720 --> 00:20:09.670
Let's go ahead and recreate the VAR file.

322
00:20:09.670 --> 00:20:10.660
So here it is.

323
00:20:10.660 --> 00:20:11.260
We are.

324
00:20:13.920 --> 00:20:14.760
And destination.

325
00:20:14.760 --> 00:20:17.070
Let's have the same destination once again.

326
00:20:25.660 --> 00:20:27.370
We can overwrite the old one.

327
00:20:38.300 --> 00:20:43.550
Because let me copy that and go back here into Web apps.

328
00:20:43.940 --> 00:20:46.700
Let me let me just delete the old one.

329
00:20:46.700 --> 00:20:48.700
So our server is still on.

330
00:20:48.710 --> 00:20:49.520
It's still.

331
00:20:50.340 --> 00:20:50.600
On.

332
00:20:50.670 --> 00:20:57.630
So let me just delete them and let me copy it here because the server is on, it's going to redeploy

333
00:20:57.630 --> 00:20:57.980
it.

334
00:20:57.990 --> 00:21:01.710
So it's going to unpack and redeploy this.

335
00:21:02.510 --> 00:21:04.120
Or here it got created.

336
00:21:04.130 --> 00:21:11.450
So this is the book's aloha and this was the my books and written by and f we have the web XML which

337
00:21:11.450 --> 00:21:12.610
we also edited.

338
00:21:12.620 --> 00:21:15.020
So everything has got unpacked.

339
00:21:15.140 --> 00:21:16.490
The file got unpacked.

340
00:21:16.520 --> 00:21:24.580
Now if you go into classes under web INF, so you will see the Java classes here within the classes.

341
00:21:24.590 --> 00:21:30.980
So we have our com semantic square books, aloha controllers and this is our servlet.

342
00:21:32.480 --> 00:21:35.180
Now let's go back to the browser.

343
00:21:35.480 --> 00:21:36.380
So we have books.

344
00:21:36.380 --> 00:21:37.130
Aloha.

345
00:21:37.130 --> 00:21:38.240
And we said.

346
00:21:39.170 --> 00:21:40.310
The link.

347
00:21:40.310 --> 00:21:43.100
Here was my books.

348
00:21:43.370 --> 00:21:45.100
It was my books here.

349
00:21:45.110 --> 00:21:48.710
So let's just put my books.

350
00:21:50.550 --> 00:21:51.020
That's it.

351
00:21:51.030 --> 00:21:58.260
So you have the same content and all of this content is coming from our servlet, so that's what it

352
00:21:58.260 --> 00:21:58.770
is.

353
00:21:59.100 --> 00:22:05.190
Now another thing that can be done is here in the My Books dot Java.

354
00:22:05.760 --> 00:22:08.520
So we also have this thing, here it is.

355
00:22:08.520 --> 00:22:13.680
We also have this annotation right about the definition here.

356
00:22:13.680 --> 00:22:18.960
So we can also do this if you do this, if you uncomment it.

357
00:22:21.230 --> 00:22:23.360
I need to import this.

358
00:22:24.160 --> 00:22:26.140
Thing, this particular package.

359
00:22:26.350 --> 00:22:29.920
We do not need to do this, so we do not have to.

360
00:22:30.460 --> 00:22:32.440
So you can just comment it out.

361
00:22:36.420 --> 00:22:37.560
The Web XML.

362
00:22:37.560 --> 00:22:45.450
And if we just have that annotation, the Tomcat server will automatically know that this is a servlet

363
00:22:45.450 --> 00:22:46.560
and it will load it.

364
00:22:46.830 --> 00:22:48.030
It will use the servlet.

365
00:22:48.300 --> 00:22:50.430
So this is much more easier actually.

366
00:22:50.430 --> 00:22:52.830
We don't have to write all of that in XML.

367
00:22:52.830 --> 00:22:57.450
But if you have this and if you also have this, then this gets a precedence.

368
00:22:57.780 --> 00:22:58.830
Just keep that in mind.

369
00:22:58.830 --> 00:23:02.490
For instance, here also we have this thing called my books.

370
00:23:02.490 --> 00:23:07.050
So you can redeploy once again on your site and you can see that it will still work.

371
00:23:07.050 --> 00:23:14.640
But if this was my books and this was my books too, then this is what will be taken as the URL pattern

372
00:23:14.640 --> 00:23:16.290
for the servlet.

373
00:23:16.990 --> 00:23:18.240
I hope that is clear.

374
00:23:19.090 --> 00:23:19.330
Okay.

375
00:23:19.330 --> 00:23:20.910
Now, let me stop it here.

376
00:23:20.920 --> 00:23:23.440
I think the lecture has been long enough.

377
00:23:23.560 --> 00:23:29.230
I actually wanted to explain a little bit about the HTTP servlet, but I think let me just stop it right

378
00:23:29.230 --> 00:23:32.470
there and I can talk about it in the next lecture.

379
00:23:32.920 --> 00:23:35.770
Also, let me just stop the server here.

380
00:23:38.650 --> 00:23:39.510
Inside the bin.

381
00:23:39.520 --> 00:23:43.810
Just click on shut down batch and the server would be stopped.

382
00:23:44.020 --> 00:23:45.250
So that's about it.

383
00:23:45.280 --> 00:23:52.510
Thank you and I hope you enjoyed learning about sublets and thank you and happy coding and all of the

384
00:23:52.510 --> 00:23:54.700
code will be available in the resources section.

