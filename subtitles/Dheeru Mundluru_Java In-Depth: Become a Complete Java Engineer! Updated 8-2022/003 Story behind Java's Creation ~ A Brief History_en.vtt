WEBVTT
1
00:00:02.060 --> 00:00:03.050
Hi there.

2
00:00:03.080 --> 00:00:04.370
This is the model room.

3
00:00:04.730 --> 00:00:10.070
Before moving on, let's now spend some time understanding how Java came into existence.

4
00:00:10.610 --> 00:00:17.150
Compared to languages like C and C++, Java has some unique features and there's a certain motivation

5
00:00:17.150 --> 00:00:19.640
behind creating Java with those features.

6
00:00:20.150 --> 00:00:25.970
So understanding the motivation will help us better appreciate the features that Java offers.

7
00:00:26.390 --> 00:00:29.990
So let's go ahead and learn the story behind Java's creation.

8
00:00:31.790 --> 00:00:37.700
You must have heard of Sun Microsystems, which was a well-known Silicon Valley based company which

9
00:00:37.700 --> 00:00:40.100
got acquired by Oracle in 2010.

10
00:00:41.720 --> 00:00:49.490
In 1991, having been in business for almost a decade selling Unix based computers, Sun wanted to see

11
00:00:49.490 --> 00:00:51.830
what the next wave in computing was.

12
00:00:53.010 --> 00:00:58.260
So they're assembled a small team to brainstorm on this and they name the team as the green team.

13
00:01:00.080 --> 00:01:06.740
The Green team's initial conclusion was that a network of heterogeneous consumer devices communicating

14
00:01:06.740 --> 00:01:09.440
with each other could be one significant trend.

15
00:01:10.950 --> 00:01:17.670
And these devices are small, they are reliable, distributed, real time embedded systems.

16
00:01:18.830 --> 00:01:24.470
And based on this initial conclusion, they decided to build a prototype as part of a new project called

17
00:01:24.470 --> 00:01:25.700
The Green Project.

18
00:01:26.060 --> 00:01:28.970
So it is a green team working on the Green Project.

19
00:01:30.650 --> 00:01:37.400
The vision for this project was to build an interactive wireless handheld device, which would communicate

20
00:01:37.400 --> 00:01:41.030
with home entertainment devices like TV and VCR.

21
00:01:41.060 --> 00:01:42.950
As we see here in this illustration.

22
00:01:43.700 --> 00:01:48.680
And the software that the green team develops would be installed on all of these devices.

23
00:01:49.510 --> 00:01:55.990
And the technology was expected to help in doing stuff like playing a certain TV channel or recording

24
00:01:55.990 --> 00:02:00.730
a particular favorite program, which is common these days, but not in early nineties.

25
00:02:01.330 --> 00:02:06.940
In fact, you can see that there's a VCR in this illustration as there were no DVDs back in early nineties.

26
00:02:08.600 --> 00:02:14.030
However, realizing this vision was pretty challenging as it had some unique goals.

27
00:02:14.030 --> 00:02:15.710
And let's see what those goals are.

28
00:02:17.280 --> 00:02:23.640
First goal is that the software should consume less memory as the target consumer devices are embedded

29
00:02:23.640 --> 00:02:26.730
devices which have limited resources like memory.

30
00:02:28.240 --> 00:02:28.600
Next.

31
00:02:28.600 --> 00:02:35.050
The technology should allow these devices to communicate with each other and also pass around any software

32
00:02:35.050 --> 00:02:35.710
programs.

33
00:02:36.070 --> 00:02:41.410
And this leads to the third and one of the most important goals, which is platform independence.

34
00:02:42.740 --> 00:02:48.050
So when these software programs are delivered from one device to another, they should run on the target

35
00:02:48.050 --> 00:02:50.090
device without any issues.

36
00:02:50.600 --> 00:02:55.580
That is, the hardware and operating system of the target device should not cause any issues.

37
00:02:55.790 --> 00:02:58.310
And that's basically platform independence.

38
00:03:00.290 --> 00:03:05.720
Similarly, when software programs are delivered to the target devices, they should not cause any harm

39
00:03:05.720 --> 00:03:06.770
to those devices.

40
00:03:07.100 --> 00:03:08.720
So security is critical.

41
00:03:10.380 --> 00:03:15.810
Finally, the software should support Multithreading so that the devices can perform multiple activities

42
00:03:15.810 --> 00:03:16.710
at the same time.

43
00:03:17.370 --> 00:03:23.490
For instance, if a program is being downloaded from another consumer device, then the current device

44
00:03:23.490 --> 00:03:28.020
might want to perform some other activity while the program is being downloaded.

45
00:03:29.930 --> 00:03:36.320
Initially C++ was considered for this project, but it was rejected as it did not meet some of the project

46
00:03:36.320 --> 00:03:40.280
goals which we just discussed, and platform independence was one of them.

47
00:03:40.760 --> 00:03:44.150
So that team decided to create a brand new technology.

48
00:03:45.630 --> 00:03:52.350
Then one of the team members, James Gosling, created an entirely new language and named it as Oak

49
00:03:52.590 --> 00:03:58.530
after the tree outside his office, of course, later renamed to Java due to trademark issues.

50
00:03:58.950 --> 00:04:02.190
So Gosling is regarded as the father of Java.

51
00:04:03.970 --> 00:04:10.420
Soon the Green team came up with a working demo on the interactive handheld device, was called as Star

52
00:04:10.420 --> 00:04:10.870
seven.

53
00:04:11.650 --> 00:04:18.220
And it's interesting to note that this was way back in 92 and Star seven already had a touch screen

54
00:04:18.220 --> 00:04:21.220
with features similar to today's smartphones.

55
00:04:21.610 --> 00:04:28.150
Just Google for Gosling Star seven and you should be able to find an old video of James Gosling demonstrating

56
00:04:28.150 --> 00:04:28.900
Star seven.

57
00:04:29.050 --> 00:04:31.060
It is definitely worth watching.

58
00:04:32.750 --> 00:04:39.200
Some targeted the cable TV industry to sell this product, but the technology was far too advanced for

59
00:04:39.200 --> 00:04:42.170
them, and hence the project did not meet success.

60
00:04:43.570 --> 00:04:51.910
But Sanson soon that the newly popular World Wide Web was exactly identical to the Green Project that

61
00:04:51.910 --> 00:04:56.740
is a network of heterogeneous systems communicating with each other as shown in this illustration.

62
00:04:57.340 --> 00:05:03.040
As you can see, we have Windows clients talking to Linux servers and similarly Linux clients talking

63
00:05:03.040 --> 00:05:04.240
to Windows servers.

64
00:05:06.040 --> 00:05:07.810
Before Java came into existence.

65
00:05:07.810 --> 00:05:15.550
In turn, it involved moving around only static HTML content on Sun believed that by integrating Java

66
00:05:15.580 --> 00:05:18.400
they can make web pages more interactive.

67
00:05:20.020 --> 00:05:27.490
So Sun developed a browser called Hot Java and they showcased it at the Sun World Conference in 1995.

68
00:05:28.900 --> 00:05:36.850
And the browser allowed Java programs called applets to be embedded in HTML pages, and this would allow

69
00:05:36.850 --> 00:05:39.040
web applications to be interactive.

70
00:05:40.570 --> 00:05:46.330
But for this to work, the client's browser should install Java, and the way it would work is that

71
00:05:46.480 --> 00:05:53.890
an HTML page would include HTML tags corresponding to applets, and the applets would actually reside

72
00:05:53.890 --> 00:05:58.360
on some remote server and web browser processes, a HTML page.

73
00:05:58.600 --> 00:06:04.540
And when it encounters these applet related tags, it will then download the corresponding applets from

74
00:06:04.540 --> 00:06:09.340
the remote server and then execute them as it already has Java installed.

75
00:06:11.320 --> 00:06:18.270
Knowledge html content same applet can run on heterogeneous client platforms that is platform independence.

76
00:06:18.280 --> 00:06:21.280
Capability of HTML pages is still supported.

77
00:06:21.730 --> 00:06:27.520
That is, the applet might be on a Linux server and the client's browser might be on a Windows machine,

78
00:06:28.060 --> 00:06:34.210
but the downloaded applet from the Linux server would execute without any issues within the client's

79
00:06:34.210 --> 00:06:36.130
browser on the Windows machine.

80
00:06:37.590 --> 00:06:43.950
At the same conference, Netscape also announced that their popular Netscape Navigator browser would

81
00:06:43.950 --> 00:06:45.330
include Java support.

82
00:06:45.900 --> 00:06:52.530
And with that, the entire tech industry was very excited about the Java technology as this integration

83
00:06:52.530 --> 00:06:55.140
could be very big for the future of Internet.

84
00:06:56.600 --> 00:07:00.890
And soon the first version of Java was released in January of 1996.

85
00:07:01.490 --> 00:07:03.440
So that's a brief history of Java.

86
00:07:03.830 --> 00:07:11.120
Always keep in mind that Java was mainly designed to work in a networked environment consisting of heterogeneous

87
00:07:11.120 --> 00:07:12.440
consumer devices.

88
00:07:13.070 --> 00:07:18.560
The environment had some unique goals and that led to the development of Java, though it could not

89
00:07:18.560 --> 00:07:20.690
be adopted in the cable TV industry.

90
00:07:20.840 --> 00:07:27.170
It eventually found its success with the World Wide Web, and especially it soon evolved as a popular

91
00:07:27.170 --> 00:07:30.500
language for developing large scale web applications.

92
00:07:30.500 --> 00:07:34.520
Standard on desktop applications and mobile applications.

93
00:07:34.550 --> 00:07:35.270
Thank you.

