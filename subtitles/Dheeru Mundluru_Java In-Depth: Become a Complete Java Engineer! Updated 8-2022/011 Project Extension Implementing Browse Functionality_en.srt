1
00:00:02,080 --> 00:00:02,890
Hi there.

2
00:00:02,890 --> 00:00:04,810
This is Andrew and welcome back.

3
00:00:04,990 --> 00:00:10,900
Let's not get started with the project and let's implement the first feature, which is the Browse page,

4
00:00:10,900 --> 00:00:16,000
which displays all the books that are not yet bookmarked by the user.

5
00:00:16,510 --> 00:00:17,650
So let's do that.

6
00:00:17,650 --> 00:00:24,400
But before doing that, I just want to import the books allow project into this workspace.

7
00:00:24,730 --> 00:00:32,259
Now if you recall, the books allow project was created in a separate workspace and all our code and

8
00:00:32,259 --> 00:00:36,300
this course has been under another workspace called JID.

9
00:00:36,730 --> 00:00:39,130
So we now have two different workspaces.

10
00:00:39,130 --> 00:00:43,780
And within the JID workspace we had these two projects, Demo and Trello.

11
00:00:44,260 --> 00:00:48,250
So I think it would be nice if we also import that project.

12
00:00:48,250 --> 00:00:54,940
Books allows other workspace and it had a project called Books and it would be nice to import that project

13
00:00:54,940 --> 00:00:56,260
into this workspace.

14
00:00:56,260 --> 00:01:02,560
That way we will have all of our code within this course under one workspace, which is the JID.

15
00:01:03,100 --> 00:01:04,569
So let's go ahead and do that.

16
00:01:04,569 --> 00:01:05,349
It's very simple.

17
00:01:05,349 --> 00:01:06,610
Just click on file.

18
00:01:07,540 --> 00:01:09,250
And click on import.

19
00:01:09,730 --> 00:01:15,460
And here at the top, you have general and existing projects into workspace.

20
00:01:16,090 --> 00:01:18,940
So let's click select that and next.

21
00:01:19,270 --> 00:01:21,010
Select root directory.

22
00:01:21,040 --> 00:01:22,030
Browse.

23
00:01:23,090 --> 00:01:26,330
Click on c drive in my on my machine.

24
00:01:27,130 --> 00:01:27,670
And books.

25
00:01:27,680 --> 00:01:30,400
Aloha is here and within books.

26
00:01:30,400 --> 00:01:31,030
Aloha Books.

27
00:01:31,040 --> 00:01:33,040
Aloha is the workspace.

28
00:01:33,040 --> 00:01:35,530
Within that we have the books project.

29
00:01:36,220 --> 00:01:37,720
So let's click.

30
00:01:37,720 --> 00:01:43,810
Okay, select that and click okay and just say finish and that's it.

31
00:01:43,810 --> 00:01:49,510
So we have the books project now within this workspace, which is Jared.

32
00:01:50,170 --> 00:01:51,550
So we are done with that part.

33
00:01:51,550 --> 00:01:54,160
We have all our code under Jared now.

34
00:01:55,150 --> 00:01:56,410
Now first thing.

35
00:01:56,410 --> 00:01:59,830
So let's get started with our implementation, our extension.

36
00:02:00,130 --> 00:02:07,960
The first thing that I want to do is add a new field called image underscore URL in the books table.

37
00:02:07,990 --> 00:02:14,590
Now if you recall in the books along our project, we were displaying a couple of books and each book

38
00:02:14,590 --> 00:02:21,430
also had an image and that image is coming from some URL within our Trello project.

39
00:02:21,430 --> 00:02:27,670
So far we did not have any such image URL attribute in the database, but I think it will be nice to

40
00:02:27,670 --> 00:02:28,450
show images.

41
00:02:28,450 --> 00:02:30,010
It will be much more inspiring.

42
00:02:30,010 --> 00:02:35,830
So let's go ahead and add an image URL field within the book table.

43
00:02:35,980 --> 00:02:38,200
So let me open the database now.

44
00:02:38,200 --> 00:02:40,240
I'm going to start.

45
00:02:41,480 --> 00:02:44,150
And all programs here.

46
00:02:44,150 --> 00:02:45,640
You'll see my SQL.

47
00:02:45,650 --> 00:02:46,610
Click on that.

48
00:02:47,650 --> 00:02:53,800
I click on my SQL Server and there is the command line utility open that.

49
00:02:55,390 --> 00:03:03,850
Password is root for me and we need to use our database which is guide underscore Trello.

50
00:03:06,290 --> 00:03:07,610
So the database is changed.

51
00:03:07,640 --> 00:03:09,680
Let's see all the tables that we have.

52
00:03:13,040 --> 00:03:17,600
So these are all the tables that we have created in the three year project.

53
00:03:17,930 --> 00:03:20,480
And one of them is book.

54
00:03:20,780 --> 00:03:23,720
So let's say the SC.

55
00:03:24,910 --> 00:03:29,230
Book and I have already added this field here.

56
00:03:29,230 --> 00:03:31,450
And it is a type one car.

57
00:03:32,110 --> 00:03:32,830
That's it.

58
00:03:33,430 --> 00:03:35,380
Let me show you the queries for that.

59
00:03:36,280 --> 00:03:41,410
So in order to add the new column, we use an alter, a SQL query.

60
00:03:41,410 --> 00:03:48,190
So it is added to table book add column image underscore URL and this is the data type and we want this

61
00:03:48,190 --> 00:03:51,370
column to be added after the title column.

62
00:03:51,640 --> 00:03:58,180
So that's why if you see here after title, we have image URL and then we want to update the rows.

63
00:03:58,180 --> 00:04:06,040
Also there are five rows and this is the ID, so there are five books and for each of them we are setting

64
00:04:06,040 --> 00:04:07,330
a different image.

65
00:04:07,840 --> 00:04:11,200
So this file will be provided in the resources section.

66
00:04:11,200 --> 00:04:16,930
So you can take this file and you can run these queries in your my SQL instance.

67
00:04:17,589 --> 00:04:21,370
Now I'm going to provide all the code in the resources section.

68
00:04:21,579 --> 00:04:27,940
And if you are if there are any issues, I might add the extension text regardless of whether it is

69
00:04:27,940 --> 00:04:30,610
a JSP file or whether it is a Java file.

70
00:04:30,640 --> 00:04:37,150
So if I have any trouble uploading the files with those extensions, I will put a dot extension.

71
00:04:37,150 --> 00:04:41,170
And with that, there shouldn't be any problem in uploading into the resources section.

72
00:04:41,410 --> 00:04:46,810
So when you download it, you just need to convert them back into either Java file or the JSP file.

73
00:04:46,810 --> 00:04:48,910
You need to remove that dot extension.

74
00:04:49,390 --> 00:04:50,680
So that's something.

75
00:04:51,340 --> 00:04:52,300
Let's go back.

76
00:04:52,300 --> 00:04:54,910
So we have added this image underscore URL.

77
00:04:55,120 --> 00:05:01,810
Now let's create a new project for we have the three you, but we will create a new dynamic project.

78
00:05:01,810 --> 00:05:09,520
So go into file because we are dealing with a web application, say dynamic web project.

79
00:05:09,610 --> 00:05:11,800
Let's name it as three year web.

80
00:05:14,680 --> 00:05:15,940
See you next.

81
00:05:17,160 --> 00:05:22,470
Next, let's also select this one Web XML deployment descriptor.

82
00:05:23,130 --> 00:05:23,410
That's it.

83
00:05:23,520 --> 00:05:28,530
So that's generated and we have all the required layout.

84
00:05:29,530 --> 00:05:31,660
And here are the Java resources.

85
00:05:32,740 --> 00:05:35,920
Now we need to import our trillion.

86
00:05:35,950 --> 00:05:39,650
So the trill you had just the Java code.

87
00:05:39,670 --> 00:05:44,470
Now since we are web enabling it, we created a new dynamic web project.

88
00:05:44,470 --> 00:05:46,240
But we need to copy all of this.

89
00:05:46,240 --> 00:05:55,140
So select all of them and just copy, see, say control C and select this Z under Java resources.

90
00:05:55,150 --> 00:05:56,320
Sorry, not here.

91
00:05:57,040 --> 00:05:59,890
Here Java resources and we have source.

92
00:06:00,640 --> 00:06:03,370
Now right click on this and just say paste.

93
00:06:05,540 --> 00:06:08,320
Now, if you'll see, we have.

94
00:06:13,610 --> 00:06:15,530
All of those packages are imported.

95
00:06:15,980 --> 00:06:18,290
So that's that easy.

96
00:06:19,800 --> 00:06:22,110
Now there is some compilation errors here.

97
00:06:22,140 --> 00:06:23,160
Let me open this.

98
00:06:25,190 --> 00:06:29,300
So that's because we need to import certain jar files.

99
00:06:29,300 --> 00:06:32,450
We are using a third party jar file, so we need to import them.

100
00:06:32,750 --> 00:06:38,870
So for that, let me click on little web and right click on properties.

101
00:06:41,820 --> 00:06:49,740
Going to Java Belt path because we need to add those jars here, add external jars and my jars are here

102
00:06:49,740 --> 00:06:51,890
and one of the folders on the desk.

103
00:06:51,900 --> 00:06:58,530
So one of them is Commons here lang and the other one is minus Q all connected because we need to connect

104
00:06:58,530 --> 00:07:02,040
to the database and this is the version that I was using.

105
00:07:02,490 --> 00:07:06,810
Just say open and we are done with that piece, say apply.

106
00:07:08,640 --> 00:07:11,820
And you can see that there are no compilation errors.

107
00:07:11,850 --> 00:07:16,640
Now this has to go into the VAR file that we finally create.

108
00:07:16,650 --> 00:07:20,430
So go into deployment assembly, say ADD.

109
00:07:21,580 --> 00:07:26,500
And click on Java Build Path entries and see next.

110
00:07:26,800 --> 00:07:29,320
And these are the two ones which we want to.

111
00:07:32,160 --> 00:07:38,440
Push into the dot into the var file, say, apply and OC.

112
00:07:41,140 --> 00:07:46,000
So if you're going to libraries here, we can see the two files that we just added.

113
00:07:46,120 --> 00:07:47,350
So that's that.

114
00:07:48,710 --> 00:07:51,200
So the first thing that we need to do is.

115
00:07:52,240 --> 00:07:53,820
For this extension.

116
00:07:53,830 --> 00:07:57,910
So we already created all our controllers.

117
00:07:57,910 --> 00:08:04,600
So here we have our code and the controllers are here under comm semantics where three LEO controllers

118
00:08:04,600 --> 00:08:09,040
click on this one and we have only one controller called bookmark controller.

119
00:08:09,040 --> 00:08:12,190
So this we will convert into a servlet.

120
00:08:13,570 --> 00:08:14,980
So we will go here.

121
00:08:16,000 --> 00:08:19,690
And here, let's comment out this code.

122
00:08:19,720 --> 00:08:27,550
This code right here at the top and this one tail here we are creating a single instance.

123
00:08:27,580 --> 00:08:33,049
Now, we don't need this code because now we are using the Tomcat container.

124
00:08:33,070 --> 00:08:36,890
Tomcat container will create a singleton instance of the servlet.

125
00:08:36,909 --> 00:08:38,520
We know that, right?

126
00:08:38,530 --> 00:08:40,770
It creates a single instance of the servlet.

127
00:08:40,780 --> 00:08:42,760
So that's what Tomcat does.

128
00:08:42,760 --> 00:08:44,169
So we don't need this.

129
00:08:44,169 --> 00:08:46,080
So earlier we were manually doing this.

130
00:08:46,090 --> 00:08:47,320
We have written this code.

131
00:08:47,470 --> 00:08:51,430
So since Tomcat is going to do that for us, we don't need this.

132
00:08:51,550 --> 00:08:53,710
Now let's say extents.

133
00:08:55,650 --> 00:08:58,110
HTTP servlet.

134
00:08:58,410 --> 00:09:00,060
So we need to put that.

135
00:09:00,480 --> 00:09:04,230
Then let me open the books here.

136
00:09:04,350 --> 00:09:06,450
Let's copy some code.

137
00:09:09,540 --> 00:09:09,780
Here.

138
00:09:09,780 --> 00:09:12,360
Also, we had a controller called my books.

139
00:09:12,630 --> 00:09:14,940
Let's copy this annotation here.

140
00:09:17,020 --> 00:09:17,520
Right.

141
00:09:17,850 --> 00:09:20,520
Let me copy it here.

142
00:09:22,540 --> 00:09:25,510
And let's call this as bookmark.

143
00:09:27,930 --> 00:09:31,770
Instead of calling it as my books, we will call it as bookmark.

144
00:09:31,800 --> 00:09:35,220
And let's also copy some more code.

145
00:09:35,220 --> 00:09:37,620
Let's add the default constructor.

146
00:09:37,770 --> 00:09:39,510
So let's copy this.

147
00:09:44,290 --> 00:09:47,950
The name has to be bookmarked controller, so let's replace that.

148
00:09:48,850 --> 00:09:55,120
So the container will create an instance of this and will initialize it by calling the init method.

149
00:09:56,280 --> 00:09:56,850
All right.

150
00:09:58,150 --> 00:09:59,710
And there is the do get method.

151
00:09:59,710 --> 00:10:01,870
Let me just copy all of this here.

152
00:10:02,820 --> 00:10:09,540
And that's all we need from this because it do get is going to overwrite the do get in the.

153
00:10:11,170 --> 00:10:12,760
In the HTTP servlet.

154
00:10:12,970 --> 00:10:15,340
So we don't need any of this.

155
00:10:16,710 --> 00:10:19,410
So let me remove that say control.

156
00:10:19,420 --> 00:10:26,550
S Now we have compilation errors and that's because we need the servlet API jar file.

157
00:10:26,550 --> 00:10:27,600
So we need to import that.

158
00:10:27,600 --> 00:10:31,830
Also once again, let's click on your web, right click.

159
00:10:32,800 --> 00:10:39,700
Properties go into Java build path here, add external jars.

160
00:10:40,610 --> 00:10:41,960
And the.

161
00:10:43,320 --> 00:10:44,430
Rafael is not here.

162
00:10:44,430 --> 00:10:45,060
It's.

163
00:10:48,520 --> 00:10:48,940
For me.

164
00:10:48,940 --> 00:10:49,600
It's here.

165
00:10:49,630 --> 00:10:51,760
Going to in Tomcat.

166
00:10:51,760 --> 00:10:57,850
Going to lib and within lib I have the servlet API open.

167
00:10:58,800 --> 00:10:59,580
Apply.

168
00:11:00,630 --> 00:11:03,870
And going to deployment assembly ad.

169
00:11:04,770 --> 00:11:08,190
Java Belle Path entries next.

170
00:11:10,120 --> 00:11:11,980
Pushed us into libraries.

171
00:11:12,620 --> 00:11:15,760
Apply OC and.

172
00:11:20,030 --> 00:11:23,210
All these, they just got automatically imported.

173
00:11:24,720 --> 00:11:26,280
Control shift or.

174
00:11:28,750 --> 00:11:29,180
That's it.

175
00:11:29,200 --> 00:11:35,290
So we have imported all the files and we don't have any other issues here.

176
00:11:35,470 --> 00:11:40,390
So this is the the controller, which is which has been converted into servlet.

177
00:11:41,740 --> 00:11:44,050
Now let's go into our.

178
00:11:50,540 --> 00:11:55,610
Let's not worry about this because we have commented out some code in bookmarked controller, so that's

179
00:11:55,610 --> 00:11:58,210
why it is showing some error in view Java.

180
00:11:58,220 --> 00:12:05,750
But let's not worry if Java is not important for us, so let's just lose that and close it.

181
00:12:07,650 --> 00:12:13,370
And so we added the image underscore URL and the in the book table.

182
00:12:13,380 --> 00:12:20,230
So we all we also have within entities we have this package called entities we have the Java.

183
00:12:20,490 --> 00:12:22,230
So here we need to.

184
00:12:23,820 --> 00:12:27,040
Art a field called image URL.

185
00:12:27,060 --> 00:12:28,680
So let me add that.

186
00:12:28,710 --> 00:12:29,730
Let me put it here.

187
00:12:34,770 --> 00:12:37,170
In database it is image underscore URL.

188
00:12:37,170 --> 00:12:41,550
But here this is the convention that we use and let's put a getter and setter.

189
00:12:45,180 --> 00:12:47,980
All right, so we have got to run setters.

190
00:12:48,000 --> 00:12:49,920
So that's what the book class.

191
00:12:49,950 --> 00:12:53,070
Now, let's go back to our bookmark controller.

192
00:12:54,610 --> 00:12:59,080
And let's go ahead and fetch the books from the database.

193
00:12:59,110 --> 00:13:06,380
And we need to fetch all those books which are not yet bookmarked by a particular user.

194
00:13:06,400 --> 00:13:10,950
So in this case, what we will do, what we will do is we will use one user.

195
00:13:10,960 --> 00:13:13,420
There are a bunch of users, five users.

196
00:13:13,900 --> 00:13:26,200
Let me run this query select star from user, put a slash here and a G so that it will display the results

197
00:13:26,200 --> 00:13:28,060
in this way in rows.

198
00:13:28,060 --> 00:13:34,750
So each user is displayed in this way if you put a slash g so this is first row, this is second row.

199
00:13:34,780 --> 00:13:38,850
Let's pick this final user user for semantic square dot com.

200
00:13:39,310 --> 00:13:41,500
It belongs to my account, Drew.

201
00:13:41,680 --> 00:13:42,970
So let's do that.

202
00:13:42,970 --> 00:13:45,850
So the ID for that is five, so we will use that.

203
00:13:45,850 --> 00:13:52,690
So we are going to hardcore the ID here and show the results, which is nothing but the books that are

204
00:13:52,690 --> 00:13:56,170
not yet bookmarked by this particular user.

205
00:13:56,170 --> 00:14:00,070
And later, we will generalize it when we have the log in functionality.

206
00:14:00,070 --> 00:14:00,550
All right.

207
00:14:01,480 --> 00:14:09,070
So let's go here and let's write a method called get books and we can write it in bookmark manager in

208
00:14:09,070 --> 00:14:10,560
the DAO it goes in the DAO.

209
00:14:10,570 --> 00:14:13,900
But first we have to invoke the manager layer.

210
00:14:16,630 --> 00:14:22,480
Dot get instance it will return an instance of that bookmark manager is also a single turn.

211
00:14:22,810 --> 00:14:24,760
And let's say we'll call it us books.

212
00:14:24,790 --> 00:14:27,700
Get books and we will have two fields.

213
00:14:28,680 --> 00:14:35,310
One will take a Boolean value boolean and we will see why that's the case and the other one will take

214
00:14:35,310 --> 00:14:35,970
the ID.

215
00:14:36,000 --> 00:14:38,220
So the ID user ID is five.

216
00:14:38,220 --> 00:14:42,390
So let's do that and let's auto create this.

217
00:14:44,850 --> 00:14:45,300
Okay.

218
00:14:45,420 --> 00:14:48,600
And it should written a collection of.

219
00:14:51,970 --> 00:14:57,880
Books, but bookmark is a super type of book, so we will have it as a collection.

220
00:14:59,190 --> 00:15:06,930
Control of core, and the set written now of instance is already here.

221
00:15:07,020 --> 00:15:10,050
There is a bookmarked instance which is already created.

222
00:15:10,290 --> 00:15:11,490
So we need to.

223
00:15:12,690 --> 00:15:15,450
Call a method with the same name.

224
00:15:16,990 --> 00:15:18,340
Let's make this long.

225
00:15:19,220 --> 00:15:20,870
Because it is long.

226
00:15:21,350 --> 00:15:24,410
Let's call it ID and let's rename this to.

227
00:15:25,900 --> 00:15:28,370
If he had the code here.

228
00:15:30,960 --> 00:15:32,750
Let's call it as is marked.

229
00:15:36,590 --> 00:15:39,560
He's bookmarked and let's just pass the same values.

230
00:15:41,410 --> 00:15:41,980
Okay.

231
00:15:42,280 --> 00:15:44,380
Now this method is not there.

232
00:15:44,470 --> 00:15:48,070
So let's create that using the automatic feature.

233
00:15:49,070 --> 00:15:49,760
This is it.

234
00:15:49,940 --> 00:15:52,490
And let me just go ahead and copy this code.

235
00:15:52,490 --> 00:15:57,680
That is some code and it is very easy to follow.

236
00:15:58,220 --> 00:16:00,500
So let me just copy this whole thing.

237
00:16:01,810 --> 00:16:03,340
And we will look at the code.

238
00:16:04,820 --> 00:16:05,330
Okay.

239
00:16:05,480 --> 00:16:06,350
Here it is.

240
00:16:11,220 --> 00:16:11,740
Okay.

241
00:16:11,760 --> 00:16:13,320
Now this code.

242
00:16:15,660 --> 00:16:16,470
Is.

243
00:16:17,560 --> 00:16:25,780
If you're going to data store, which we will not be needing anymore because we have the layer.

244
00:16:25,870 --> 00:16:30,430
So here for the books there is this.

245
00:16:31,440 --> 00:16:32,820
Method called load books.

246
00:16:32,820 --> 00:16:36,120
So we are just using most of this code from here.

247
00:16:36,300 --> 00:16:43,770
So it is selecting the books and it is adding it to some list here in this case.

248
00:16:44,370 --> 00:16:51,240
And we are getting all of the individual values from each row and we have this code.

249
00:16:51,240 --> 00:16:53,550
So I just copied this code.

250
00:16:54,000 --> 00:16:55,080
That's what I did.

251
00:16:55,440 --> 00:16:59,700
And here in bookmark, that's what we are doing now.

252
00:16:59,700 --> 00:17:03,720
But here the you may recall this particular piece of code.

253
00:17:03,720 --> 00:17:08,250
So in order to connect to the database, we need the driver, the ABC driver.

254
00:17:08,250 --> 00:17:16,050
So this is what is going to load the driver and it would be registered with the ABC API with a class

255
00:17:16,050 --> 00:17:17,339
called driver manager.

256
00:17:17,760 --> 00:17:19,650
And so that's the point.

257
00:17:19,650 --> 00:17:21,480
Without that this will not work.

258
00:17:21,480 --> 00:17:28,020
So we need that code and we have seen it in the in the database section and we need this connection

259
00:17:28,020 --> 00:17:33,420
and this is the URL to the to connect to the database we are using this guide underscore Trello and

260
00:17:33,420 --> 00:17:39,900
this is the username and password and we have, we have the statement called Connect Create Statement

261
00:17:39,900 --> 00:17:45,420
and this is a private resources statement and this is the query that we are going to use.

262
00:17:46,110 --> 00:17:49,680
There is the spot part we will look at it in the next lecture.

263
00:17:49,710 --> 00:17:53,070
Now is bookmarked is false.

264
00:17:53,070 --> 00:17:56,970
We are passing false in the controller here write false.

265
00:17:57,090 --> 00:18:04,140
It means that is bookmarked is false, which means we need those books that are not yet bookmarked and

266
00:18:04,140 --> 00:18:06,360
we are also passing the ID five.

267
00:18:06,390 --> 00:18:14,400
So we want to get all the books that are not yet bookmarked by this particular user with the ID file.

268
00:18:14,880 --> 00:18:15,540
That's it.

269
00:18:15,630 --> 00:18:19,260
And so for that, we have this nested query.

270
00:18:19,260 --> 00:18:24,210
So this is a select query, but it is a nested query because there is also another query right here.

271
00:18:24,690 --> 00:18:32,250
So this one will fetch all the books that this particular user has.

272
00:18:33,780 --> 00:18:36,420
This particular user has already bookmarked.

273
00:18:36,420 --> 00:18:43,020
So this we are saying we are joining two tables user and user underscore book and we are saying that

274
00:18:43,350 --> 00:18:51,200
get me all the books by this user where we are saying you don't ID user has this name as this alias

275
00:18:51,210 --> 00:18:51,680
you.

276
00:18:51,690 --> 00:18:56,520
So we are saying where you ID is equal to user ID, user ID is what is passed.

277
00:18:59,870 --> 00:19:00,620
Here.

278
00:19:02,910 --> 00:19:04,470
Let's call it as user ID.

279
00:19:05,820 --> 00:19:06,870
Here in this case.

280
00:19:08,980 --> 00:19:09,370
Okay.

281
00:19:09,910 --> 00:19:10,660
And.

282
00:19:17,830 --> 00:19:19,120
That's what we are saying here.

283
00:19:21,610 --> 00:19:21,950
Okay.

284
00:19:22,030 --> 00:19:26,010
So this will give us all the books that this particular user has bookmarked.

285
00:19:26,020 --> 00:19:33,580
So we are saying you get all the book ideas from user, comma, user underscore book, user underscore

286
00:19:33,580 --> 00:19:38,380
book has the association between the users and the books that they have saved.

287
00:19:38,380 --> 00:19:45,520
And we are saying that we need the books that this particular user has bookmarked has saved, and the

288
00:19:45,520 --> 00:19:52,570
join condition is you ID, which is the user ID and user underscore book also has user underscore ID.

289
00:19:52,570 --> 00:19:54,580
So that's what it is and you can look at it later.

290
00:19:54,580 --> 00:20:02,530
So this is essentially giving us all the book IDs that this particular user has already saved, but

291
00:20:02,530 --> 00:20:05,470
we need all the books that are not saved.

292
00:20:05,470 --> 00:20:11,560
So for that, we have this outer query which is getting all the books, and there are a bunch of tables

293
00:20:11,560 --> 00:20:17,500
that we are using in order to get all of the information, like author book, underscore, author,

294
00:20:17,890 --> 00:20:22,420
book, underscore, author has the relationship between book and author.

295
00:20:23,260 --> 00:20:24,250
And we're.

296
00:20:25,760 --> 00:20:34,580
And we want to ensure that the books so we have certain books and those ideas should not be in this.

297
00:20:34,880 --> 00:20:37,970
So we are removing all of these IDs.

298
00:20:38,270 --> 00:20:40,430
We are removing all of these IDs.

299
00:20:40,430 --> 00:20:47,810
So we are first getting all the IDs, all the books saved by this user, and we are removing them from

300
00:20:48,020 --> 00:20:50,630
all of the books that we have in the system.

301
00:20:50,810 --> 00:20:55,850
So that way we get only those books which are not yet saved by the user.

302
00:20:56,480 --> 00:20:57,440
And that's it.

303
00:20:57,440 --> 00:21:01,070
And here we have results said let me say control shift or.

304
00:21:02,230 --> 00:21:03,160
And it's compiling.

305
00:21:03,160 --> 00:21:03,850
Fine.

306
00:21:05,370 --> 00:21:06,400
And we are getting ID.

307
00:21:06,450 --> 00:21:09,030
Title publication here for the publisher.

308
00:21:09,030 --> 00:21:15,360
I have commented it out because in datastore we in that particular query we were also getting publisher

309
00:21:15,360 --> 00:21:22,740
details, but we don't have to display publisher details here, at least for this particular web page.

310
00:21:23,490 --> 00:21:24,560
And that's it.

311
00:21:24,570 --> 00:21:26,670
And here we are.

312
00:21:28,750 --> 00:21:30,730
Creating an instance of book.

313
00:21:32,080 --> 00:21:32,470
Okay.

314
00:21:32,470 --> 00:21:35,590
So first thing here is we are we created also.

315
00:21:36,640 --> 00:21:37,240
This thing.

316
00:21:37,240 --> 00:21:41,590
This is the result which will hold the all the books.

317
00:21:41,950 --> 00:21:43,270
So it's an ArrayList.

318
00:21:45,510 --> 00:21:47,400
You can take a look at the code later.

319
00:21:47,640 --> 00:21:50,450
But each row is being iterated here.

320
00:21:50,460 --> 00:21:57,960
We know that the Y loop and we are creating a book instance by calling this method called create book,

321
00:21:57,990 --> 00:22:01,380
which we have already written in the bookmark manager.

322
00:22:01,390 --> 00:22:03,630
But since we have.

323
00:22:04,640 --> 00:22:08,060
Introduced a new field called image URL here.

324
00:22:09,390 --> 00:22:15,120
But the create book does not have a URL yet, so we need to add that method parameter image URL is a

325
00:22:15,120 --> 00:22:17,280
new field that we added.

326
00:22:17,310 --> 00:22:22,620
And similarly, even in the query also here, I added the image underscore URL.

327
00:22:22,620 --> 00:22:28,860
So this was missing in the data store class as image underscore URL is something which we added in this

328
00:22:28,860 --> 00:22:29,460
lecture.

329
00:22:29,880 --> 00:22:31,530
So let's go here.

330
00:22:32,470 --> 00:22:33,690
And to create book.

331
00:22:34,240 --> 00:22:35,830
So we are passing a new field.

332
00:22:36,160 --> 00:22:37,780
And the third field was.

333
00:22:38,990 --> 00:22:39,740
String.

334
00:22:40,990 --> 00:22:42,130
Image your order.

335
00:22:42,160 --> 00:22:42,790
That's it.

336
00:22:42,850 --> 00:22:44,950
And we need to set it in the book.

337
00:22:45,010 --> 00:22:50,410
In the book, we already added a field for this set.

338
00:22:51,340 --> 00:22:52,020
Image URL.

339
00:22:52,090 --> 00:22:52,890
Here it is.

340
00:22:52,900 --> 00:22:53,860
And that's it.

341
00:22:58,020 --> 00:22:58,240
So.

342
00:23:06,330 --> 00:23:07,740
So let's take this.

343
00:23:10,010 --> 00:23:13,250
And bookmark manager as this.

344
00:23:14,750 --> 00:23:15,110
Okay.

345
00:23:15,110 --> 00:23:17,840
And go back into bookmark controller.

346
00:23:19,010 --> 00:23:24,440
And here we'll say this and let's call the variable as.

347
00:23:25,480 --> 00:23:26,230
List.

348
00:23:31,630 --> 00:23:36,790
And we need to pass it to the GSP file, which we are going to implement.

349
00:23:36,820 --> 00:23:40,510
So let's say request dot set attribute.

350
00:23:45,110 --> 00:23:46,370
Let's call it as list.

351
00:23:49,250 --> 00:23:50,750
Get request dispatcher.

352
00:23:52,840 --> 00:23:54,100
And let's pass.

353
00:23:55,200 --> 00:23:56,730
Browse Dot JSP.

354
00:23:58,640 --> 00:23:58,860
Okay.

355
00:23:58,940 --> 00:24:03,000
So we are getting a request dispatcher for this and we need to forward it to this.

356
00:24:03,020 --> 00:24:05,090
So we'll just say forward.

357
00:24:11,740 --> 00:24:12,550
Response.

358
00:24:13,000 --> 00:24:14,410
So this is what we have.

359
00:24:14,410 --> 00:24:20,110
So we are fetching the books from the our model and we are forwarding it to The View.

360
00:24:20,140 --> 00:24:24,240
Now let's go ahead and create this file called Browser JSP.

361
00:24:24,430 --> 00:24:26,800
So let's just click on your web.

362
00:24:27,630 --> 00:24:32,580
And right click new say JSP file.

363
00:24:33,240 --> 00:24:35,610
Call it as browse.

364
00:24:37,400 --> 00:24:41,240
And hit next and let it create a default.

365
00:24:41,540 --> 00:24:44,630
And I have already created this file, so let's go here.

366
00:24:44,630 --> 00:24:45,920
Browse JSP.

367
00:24:45,950 --> 00:24:49,310
It's very similar to the file that we have created and.

368
00:24:50,710 --> 00:24:52,060
The Books Aloha Project.

369
00:24:52,060 --> 00:24:53,590
I just used that code.

370
00:24:54,850 --> 00:24:56,410
It just has few additional fields.

371
00:24:56,410 --> 00:24:57,040
That's it.

372
00:24:57,310 --> 00:25:02,740
So let's go back and see control a control V set.

373
00:25:02,950 --> 00:25:04,750
Let's look at what we have here.

374
00:25:04,750 --> 00:25:06,130
So everything else is same.

375
00:25:06,130 --> 00:25:07,660
I just changed the name from books.

376
00:25:07,660 --> 00:25:11,740
Hello to tell you in the title and body.

377
00:25:11,770 --> 00:25:13,390
Here it is just the same.

378
00:25:14,440 --> 00:25:17,530
We just need to import one other file for GSD.

379
00:25:18,100 --> 00:25:21,310
So here we are iterating through all the books.

380
00:25:21,310 --> 00:25:23,200
So books is the.

381
00:25:25,460 --> 00:25:29,840
The attribute that we are setting here, box here and.

382
00:25:30,740 --> 00:25:32,960
All we are doing is we are iterating through them.

383
00:25:32,960 --> 00:25:34,720
We are displaying the image IRL.

384
00:25:34,730 --> 00:25:40,070
If you recall, we were displaying image URL and books, aloha to and for authors.

385
00:25:40,070 --> 00:25:43,820
There can be multiple authors, but let's just display only one of them.

386
00:25:43,820 --> 00:25:45,410
So authors is an array.

387
00:25:46,100 --> 00:25:48,860
So let me go back to Java.

388
00:25:48,860 --> 00:25:54,260
So as you can see, authors is array, but let's display only the first author, so that should be fine.

389
00:25:54,470 --> 00:26:02,420
And I introduced a new field here called publication rating is already there as on rating and we have

390
00:26:02,420 --> 00:26:04,880
a field called book publication here.

391
00:26:04,880 --> 00:26:11,900
So this is a new field that we are showing in the UI and then we have this anchor tag for sale.

392
00:26:11,930 --> 00:26:13,760
If you recall, there was a save link.

393
00:26:14,330 --> 00:26:16,370
So we have this for now.

394
00:26:16,370 --> 00:26:17,450
The URL is empty.

395
00:26:17,450 --> 00:26:19,130
We will fill it in the next lecture.

396
00:26:19,700 --> 00:26:20,540
So that's it.

397
00:26:20,540 --> 00:26:24,110
And this style tags will are about the style.

398
00:26:24,110 --> 00:26:28,670
It will tell us what the font size should be and what the color should be.

399
00:26:29,810 --> 00:26:32,300
And we are saying the font weight has to be bold.

400
00:26:33,820 --> 00:26:35,950
And which means that it will be in bold.

401
00:26:36,310 --> 00:26:37,090
And that's it.

402
00:26:37,090 --> 00:26:39,640
So these are some style tags that we are using.

403
00:26:39,640 --> 00:26:43,720
It's a style tag and any of the HTML tags can have that.

404
00:26:43,900 --> 00:26:45,400
So that's about it.

405
00:26:45,430 --> 00:26:50,910
So this is also done and all we need to do is just import GST.

406
00:26:51,190 --> 00:26:56,410
So once again, let's go back into three little web and go into properties.

407
00:26:58,620 --> 00:26:59,910
Going to build part.

408
00:27:01,750 --> 00:27:03,370
Our external czars.

409
00:27:04,360 --> 00:27:05,350
So here.

410
00:27:05,350 --> 00:27:06,580
I need to go.

411
00:27:15,770 --> 00:27:16,400
GSD.

412
00:27:16,430 --> 00:27:17,150
This is it.

413
00:27:18,620 --> 00:27:19,090
Hi.

414
00:27:20,130 --> 00:27:24,060
Going to deployment assembly ad.

415
00:27:25,200 --> 00:27:25,620
Joel.

416
00:27:25,650 --> 00:27:29,390
Build batteries and add this new one.

417
00:27:29,400 --> 00:27:32,880
Finish, apply and go.

418
00:27:37,000 --> 00:27:37,350
Okay.

419
00:27:37,360 --> 00:27:37,900
That's it.

420
00:27:38,750 --> 00:27:40,520
So now let's create the var file.

421
00:27:40,520 --> 00:27:43,700
So remember right click on this export.

422
00:27:45,600 --> 00:27:46,560
Rafael.

423
00:27:47,810 --> 00:27:48,980
Live Oak.

424
00:27:50,560 --> 00:27:52,240
And then we go into.

425
00:27:56,790 --> 00:27:58,670
I hope you can directly create in web apps.

426
00:27:58,680 --> 00:28:04,170
Let's try that through your website where save finish.

427
00:28:10,700 --> 00:28:11,360
That's.

428
00:28:12,590 --> 00:28:13,100
Leo Webb.

429
00:28:13,100 --> 00:28:18,710
So through Leo Webb was created here and it unpacked and it created a new web application because my

430
00:28:18,710 --> 00:28:20,000
server is already running.

431
00:28:20,000 --> 00:28:21,140
So let me go back.

432
00:28:21,320 --> 00:28:24,710
So let me call this as Leo.

433
00:28:24,710 --> 00:28:29,780
Web slash bookmark was the URL pattern.

434
00:28:32,660 --> 00:28:33,240
That's it.

435
00:28:33,260 --> 00:28:37,960
So it shows all the books that are not yet saved by this user.

436
00:28:37,970 --> 00:28:40,490
So that's the first feature.

437
00:28:40,490 --> 00:28:47,540
And next we will also implement the bookmarking functionality as well as the My Books link, which will

438
00:28:47,540 --> 00:28:50,030
show all the books that are saved by this user.

439
00:28:50,660 --> 00:28:52,580
So that way we'll see in the next lecture.

440
00:28:52,940 --> 00:28:55,070
Thank you and happy coding.

