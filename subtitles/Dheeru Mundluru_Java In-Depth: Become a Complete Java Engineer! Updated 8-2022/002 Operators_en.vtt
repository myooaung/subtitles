WEBVTT
1
00:00:02.100 --> 00:00:03.100
Hi there.

2
00:00:03.120 --> 00:00:04.280
This is De de La Rue.

3
00:00:04.290 --> 00:00:05.220
And welcome back.

4
00:00:05.280 --> 00:00:07.410
Let's begin by looking at operators.

5
00:00:07.470 --> 00:00:13.800
In this lecture, we will look at an operator in a generic sense, and we will just look at what type

6
00:00:13.800 --> 00:00:19.680
or categories of operators Java supports and we will explore them furthermore, in subsequent lectures

7
00:00:19.680 --> 00:00:21.720
where we will get into all of the details.

8
00:00:23.090 --> 00:00:24.740
So what is an operator?

9
00:00:24.770 --> 00:00:31.880
An operator is simply a symbol which performs an operation on its operations and produces a result.

10
00:00:33.200 --> 00:00:38.620
For example, in this expression plus is an operator, while X and Y are its options.

11
00:00:38.900 --> 00:00:43.500
So the plus operator is performing an additional operation on its appearance.

12
00:00:43.520 --> 00:00:47.630
And the result of this addition is the output of this expression.

13
00:00:49.230 --> 00:00:53.400
Andela supports several types of operators and you can see them here.

14
00:00:53.610 --> 00:00:59.970
We already discussed assignment operator while introducing variables and it simply assigns the value

15
00:00:59.970 --> 00:01:02.190
on its right to the variable on its left.

16
00:01:02.340 --> 00:01:05.489
And there is nothing more to discuss about assignment operator.

17
00:01:06.330 --> 00:01:12.630
And the instance of operator will be discussed later after introducing object oriented concepts like

18
00:01:12.630 --> 00:01:14.280
inheritance and polymorphism.

19
00:01:14.880 --> 00:01:19.420
And rest of the operators will be discussed in detail in this section.

20
00:01:19.440 --> 00:01:21.030
In the follow up lectures.

21
00:01:22.970 --> 00:01:28.490
Not that an operator can operate on one or two or three opponents.

22
00:01:29.510 --> 00:01:34.070
If it operates on only one operand, then it is called as a unity operator.

23
00:01:35.510 --> 00:01:39.500
In certain types of unity operations, a prefix notation is used.

24
00:01:39.830 --> 00:01:46.100
That is, the operator appears before the operand and hence it is called as a prefix notation.

25
00:01:46.490 --> 00:01:53.840
For example, here we have a unit minus operator where the minus operator appears before the variable

26
00:01:53.840 --> 00:01:57.170
X to change the sign of the apparent x.

27
00:01:59.030 --> 00:02:04.160
And there are also urinary operations where the operator appears after the operator.

28
00:02:04.460 --> 00:02:06.740
That is a post fix notation.

29
00:02:07.430 --> 00:02:13.730
And here is an example and it is called as a post increment operator where X is incremented by one,

30
00:02:14.390 --> 00:02:16.850
two plus symbols form the operator here.

31
00:02:18.590 --> 00:02:23.630
And if the operator operates on two operands, then it is called as binary operator.

32
00:02:24.470 --> 00:02:29.340
And with binary operator, the operator appears in between the two options.

33
00:02:29.360 --> 00:02:31.700
That is an in fixed notation is used.

34
00:02:33.240 --> 00:02:38.160
And if the operator operates on three options, then it is called as ternary operator.

35
00:02:38.160 --> 00:02:39.960
As ternary implies three.

36
00:02:40.680 --> 00:02:48.390
Well, union binary operators can be represented by different kinds of symbols like plus minus and percent

37
00:02:48.390 --> 00:02:49.110
and so on.

38
00:02:49.440 --> 00:02:54.780
A ternary operator always uses only two symbols a question mark and a column.

39
00:02:56.560 --> 00:02:59.470
And here is the generic notation along with an example.

40
00:02:59.800 --> 00:03:06.580
It is also an in fixed notation, just like binary operators as the operator appears in between the

41
00:03:06.580 --> 00:03:07.240
operates.

42
00:03:07.810 --> 00:03:12.940
Here, the first symbol of the operator would be the question mark, while the second symbol is a column.

43
00:03:13.330 --> 00:03:16.420
So there are two symbols that make up the ternary operator.

44
00:03:16.990 --> 00:03:24.370
And in this example, x greater than three is the first operand, while the variable x and zero are

45
00:03:24.370 --> 00:03:26.740
the second and third options respectively.

46
00:03:27.560 --> 00:03:31.010
Pier X greater than three is a condition which is being tested.

47
00:03:31.010 --> 00:03:38.570
And if this test succeeds, that is X is greater than three, then the expression returns X, which

48
00:03:38.570 --> 00:03:39.620
is the second operand.

49
00:03:39.770 --> 00:03:47.900
Otherwise it returns zero, which is the third option greater than here is a comparison operator and

50
00:03:47.900 --> 00:03:50.570
we will look at it in one of the subsequent lectures.

51
00:03:51.390 --> 00:03:58.020
And we will discuss ternary operator while discussing control flow statements as it can be used as an

52
00:03:58.020 --> 00:04:01.020
alternative to one of the control flow statements.

53
00:04:01.740 --> 00:04:04.350
So that's an introduction to operators.

54
00:04:04.500 --> 00:04:08.190
Next, we will look at each of the operator types in detail.

55
00:04:08.400 --> 00:04:09.120
Thank you.

