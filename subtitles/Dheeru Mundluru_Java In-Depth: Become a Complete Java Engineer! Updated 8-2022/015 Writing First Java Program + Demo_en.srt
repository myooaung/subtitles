1
00:00:02,090 --> 00:00:03,020
Hi there.

2
00:00:03,050 --> 00:00:03,620
This is Dana.

3
00:00:04,190 --> 00:00:05,150
And welcome back.

4
00:00:05,240 --> 00:00:08,390
Let's now go ahead and write our first Java program.

5
00:00:09,930 --> 00:00:14,340
But before doing that, let's take a quick look at the structure of a Java program.

6
00:00:14,730 --> 00:00:17,670
Java programs consist of classes.

7
00:00:18,180 --> 00:00:24,600
That is when you write a Java program, you write at least one class, and from a class we can create

8
00:00:24,600 --> 00:00:26,130
one or more objects.

9
00:00:26,580 --> 00:00:30,930
And an object is a central concept, an object oriented programming.

10
00:00:31,320 --> 00:00:35,460
And we will look at object and object oriented programming in the next chapter.

11
00:00:35,490 --> 00:00:39,030
For now, let's just look at what constitutes a class.

12
00:00:39,450 --> 00:00:46,650
What we see here are the elements or the program constructs in a class, and we have variable declarations,

13
00:00:46,650 --> 00:00:50,040
constructors, methods, and nested classes.

14
00:00:50,460 --> 00:00:56,400
Variables, constructors and methods will be introduced in the next chapter, while nested classes will

15
00:00:56,400 --> 00:00:59,070
be introduced towards the later part of the course.

16
00:01:00,820 --> 00:01:01,540
Typically.

17
00:01:01,540 --> 00:01:07,750
Hello, World Program is the first program that is written when we are learning a new programming language.

18
00:01:07,840 --> 00:01:09,730
And so let's also do the same.

19
00:01:09,970 --> 00:01:15,610
That is, we will write a class called Hello World, and this class will have a single method which

20
00:01:15,610 --> 00:01:17,140
prints the text Hello World.

21
00:01:17,770 --> 00:01:20,260
And let's look at the steps we are going to follow for this.

22
00:01:21,650 --> 00:01:23,660
We will first create this directory structure.

23
00:01:23,930 --> 00:01:30,290
Java In-Depth here is the root directory and it contains other subdirectories ending with the directory

24
00:01:30,290 --> 00:01:31,520
called basics.

25
00:01:32,300 --> 00:01:36,050
The Helloworld program we will write will go into this basics directory.

26
00:01:36,780 --> 00:01:42,450
On many of the Java programs we write in this course will be stored somewhere within this Java Indep

27
00:01:42,450 --> 00:01:43,170
directory.

28
00:01:43,770 --> 00:01:48,150
For now, let's not worry about this directory structure and it will be clear very soon.

29
00:01:50,130 --> 00:01:51,040
Next we will write.

30
00:01:51,060 --> 00:01:57,570
Hello world of Java in a text editor and you can use any editor like Notepad and I'm going to use notepad

31
00:01:57,570 --> 00:02:03,960
plus plus on my Windows machine and on other operating systems, you're free to use any editor of your

32
00:02:03,960 --> 00:02:05,310
choice on Mac.

33
00:02:05,310 --> 00:02:11,610
You can probably use text, edit and on Linux probably g edit and it is up to you.

34
00:02:13,240 --> 00:02:20,950
Note that we will use text editor for only the first 20% or so of the course and later we will switch

35
00:02:20,950 --> 00:02:28,030
over to Eclipse, which is an idea and it stands for Integrated Development Environment.

36
00:02:28,210 --> 00:02:35,470
That is it is an environment where a lot of development tools are integrated so that we can program

37
00:02:35,470 --> 00:02:36,310
effectively.

38
00:02:36,670 --> 00:02:42,580
And Eclipse is used by millions of professional developers and it is much more productive to program

39
00:02:42,580 --> 00:02:46,450
using an ID rather than using regular text editors.

40
00:02:47,020 --> 00:02:53,650
And the reason we are initially using a regular text editor is because at least for those of you who

41
00:02:53,650 --> 00:03:00,190
are completely new to programming, I think it's important to actually compile and execute the programs

42
00:03:00,190 --> 00:03:01,690
from the command line.

43
00:03:02,350 --> 00:03:09,820
Now, if we use an ID like Eclipse compilation happens automatically and there are also many details

44
00:03:09,820 --> 00:03:11,230
and ID hides.

45
00:03:11,680 --> 00:03:18,070
So if you start off with something like Eclipse, you may never know how things work behind the scenes.

46
00:03:18,550 --> 00:03:24,610
So we will use a regular text editor initially for the first 20% of the course and then we will switch

47
00:03:24,610 --> 00:03:25,990
over to Eclipse.

48
00:03:26,440 --> 00:03:32,950
Now when we do the switch, you will also see how easy and productive it is to program using Eclipse.

49
00:03:33,870 --> 00:03:39,780
And there's also a very solid eclipse tutorial that comes later and it will teach you on how you can

50
00:03:39,780 --> 00:03:41,940
use Eclipse at a professional level.

51
00:03:42,300 --> 00:03:48,150
It's a very nice tutorial, but if you're familiar with Eclipse, you can also use it right from this

52
00:03:48,150 --> 00:03:49,140
lecture itself.

53
00:03:49,770 --> 00:03:57,720
Moreover, as with the text editors, you are free to use other IDs like IntelliJ or NetBeans, so it

54
00:03:57,720 --> 00:03:59,490
need not be only Eclipse.

55
00:04:00,440 --> 00:04:03,830
Now, once we write our program, we will compile and run it.

56
00:04:05,120 --> 00:04:11,720
And just note that all the demos in this course will be shown on Windows Machine, but you shouldn't

57
00:04:11,720 --> 00:04:18,260
face any problem if you're using a different platform to as the process is just the same regardless

58
00:04:18,260 --> 00:04:19,670
of the operating system.

59
00:04:20,440 --> 00:04:22,750
So now let's go ahead and follow these steps.

60
00:04:25,210 --> 00:04:25,390
Okay.

61
00:04:25,450 --> 00:04:29,620
So the first step is to create this directory structure which we have seen earlier.

62
00:04:29,740 --> 00:04:31,240
So we need to create this.

63
00:04:31,240 --> 00:04:37,240
And many of you might be familiar with creating directory structures, but some of you may not be familiar.

64
00:04:37,240 --> 00:04:40,660
And so I thought I would also show you how to create directories.

65
00:04:40,930 --> 00:04:45,280
So I'll show it to you on Windows and on Mac and Linux.

66
00:04:45,280 --> 00:04:49,000
It is similar to Mac, so I'm not going to show it to you on Linux.

67
00:04:49,240 --> 00:04:56,800
So on Windows we have this command mkdir space, the directory structure and it would create the directory

68
00:04:56,800 --> 00:04:58,120
structure in the C drive.

69
00:04:58,240 --> 00:04:59,770
So let me just copy this.

70
00:05:00,910 --> 00:05:03,850
And pasted in my command prompt.

71
00:05:04,480 --> 00:05:07,030
So here I am and my home directory.

72
00:05:08,480 --> 00:05:12,290
And with that we would the directory structure would have got created.

73
00:05:12,320 --> 00:05:16,190
Now if we want to move into that directory, we can use this command.

74
00:05:16,400 --> 00:05:23,690
So it is Sid which stands for change directory space and the same path that we have here, the same

75
00:05:23,690 --> 00:05:24,740
directory structure.

76
00:05:28,620 --> 00:05:29,550
And there you go.

77
00:05:29,550 --> 00:05:31,380
So we are inside basics now.

78
00:05:31,650 --> 00:05:37,290
So next we will write our Java program, save it into this basics directory, and then we will compile

79
00:05:37,290 --> 00:05:40,320
and execute it from this same directory.

80
00:05:40,950 --> 00:05:44,340
And these commands will also be available in the resources section.

81
00:05:44,340 --> 00:05:45,800
So you can also find it there.

82
00:05:45,810 --> 00:05:48,880
So let's now switch over to Mac.

83
00:05:48,900 --> 00:05:50,180
So this is the path.

84
00:05:50,190 --> 00:05:51,810
It's also almost very similar.

85
00:05:52,350 --> 00:05:56,700
So in Mac and Linux we use forward slash, whereas in Windows we use backward slash.

86
00:05:57,180 --> 00:05:58,400
So let's go here.

87
00:05:58,410 --> 00:06:02,490
So here, this is my Mac machine and I'm in the home directory right now.

88
00:06:03,430 --> 00:06:05,020
So let me just paste it.

89
00:06:08,280 --> 00:06:08,730
That's it.

90
00:06:08,760 --> 00:06:10,830
The directory structure must have got created.

91
00:06:11,190 --> 00:06:12,960
So let's move into that.

92
00:06:17,150 --> 00:06:17,440
Okay.

93
00:06:17,480 --> 00:06:19,850
So we are now inside basics.

94
00:06:21,860 --> 00:06:22,600
Here it is.

95
00:06:22,610 --> 00:06:25,070
So this is the directory structure.

96
00:06:25,190 --> 00:06:30,830
So I'm not going to show the Hello World Program creating the Hello World Program on the Mac machine.

97
00:06:30,830 --> 00:06:34,910
So I'm only going to demonstrate on Windows, but it's exactly the same.

98
00:06:34,910 --> 00:06:40,730
So you would write it in the same way as I'm showing and save the file in the basics directory and then

99
00:06:40,730 --> 00:06:47,330
you will execute the same commands for compiling an execute and executing it and it's going to be exactly

100
00:06:47,350 --> 00:06:47,870
same.

101
00:06:47,870 --> 00:06:48,650
So that's it.

102
00:06:48,650 --> 00:06:57,860
And this you see, this is the admin, my home directory and you can go here from here if you're going

103
00:06:57,860 --> 00:07:00,320
to go and if you say go to folder.

104
00:07:01,720 --> 00:07:03,970
And here it is user slash admin.

105
00:07:03,970 --> 00:07:06,250
In my case my name is admin here.

106
00:07:06,250 --> 00:07:12,280
So if you had go then you're you'll be in this directory and here java in depth is there and you can

107
00:07:12,280 --> 00:07:13,090
always.

108
00:07:14,070 --> 00:07:15,810
Going to the subdirectories.

109
00:07:16,900 --> 00:07:21,220
And your basics will be saved in this directory.

110
00:07:21,460 --> 00:07:25,180
The program will be saved in the basics directory and to.

111
00:07:26,300 --> 00:07:31,100
You can go into applications to find text added is here.

112
00:07:31,880 --> 00:07:36,920
You can use it as your editor or you can also use any other editor, which it's up to you.

113
00:07:37,130 --> 00:07:38,810
So that's about it.

114
00:07:39,380 --> 00:07:42,260
Now let's go ahead and write the Hello World Program.

115
00:07:44,690 --> 00:07:49,590
Every class begins with the key word class, which is a reserved keyword in Java.

116
00:07:49,610 --> 00:07:51,410
So let's just insert that.

117
00:07:52,300 --> 00:07:52,900
Glass.

118
00:07:53,620 --> 00:07:57,550
And the key word is followed by the name of the class, which is Helloworld.

119
00:07:58,410 --> 00:07:59,250
In our case.

120
00:07:59,610 --> 00:08:03,900
And every class has a beginning brace and an ending brace.

121
00:08:04,260 --> 00:08:05,790
So this is what we have.

122
00:08:06,390 --> 00:08:09,930
So this is the class declaration here, class and Helloworld.

123
00:08:10,590 --> 00:08:13,980
And within our class, let's have just one method.

124
00:08:14,220 --> 00:08:15,780
And it's called the main method.

125
00:08:23,290 --> 00:08:24,790
So here is the main method.

126
00:08:24,790 --> 00:08:29,980
And the main method also has a beginning and an ending breast, just like the class.

127
00:08:30,340 --> 00:08:36,460
So this is the name of the method which is main, and this is a method parameter and we will look at

128
00:08:36,460 --> 00:08:37,030
that later.

129
00:08:37,030 --> 00:08:43,120
But it's just an array of strings and this will be discussed later in the chapter and string strings

130
00:08:43,120 --> 00:08:45,010
will be covered in a separate chapter.

131
00:08:45,790 --> 00:08:48,040
And this is the method output.

132
00:08:48,490 --> 00:08:49,900
In this case it's called as void.

133
00:08:49,900 --> 00:08:51,910
And let's not worry about that for now.

134
00:08:52,180 --> 00:08:58,210
So it has both input and output and public and static are both of them are called as modifiers public

135
00:08:58,210 --> 00:09:00,100
is called as an access modifiers.

136
00:09:00,430 --> 00:09:02,110
But let's also not worry about that.

137
00:09:02,110 --> 00:09:05,560
There are other access modifiers too, and we will discuss all of that later.

138
00:09:05,680 --> 00:09:10,330
And static is just a type of method and we will discuss that also later.

139
00:09:10,630 --> 00:09:15,850
And let's just have one single statement within this class and it's going to print the string.

140
00:09:15,850 --> 00:09:16,360
Hello.

141
00:09:18,910 --> 00:09:19,810
Print, Helen.

142
00:09:20,710 --> 00:09:21,520
Double quotes.

143
00:09:24,930 --> 00:09:27,450
And every statement ends with this semicolon.

144
00:09:28,470 --> 00:09:30,000
That's how it is in Java.

145
00:09:30,360 --> 00:09:32,720
So this is our Hello World Program.

146
00:09:32,730 --> 00:09:36,210
Let's just go ahead and save it as hello world dot Java.

147
00:09:41,530 --> 00:09:44,890
Since we already created Java and directory structure.

148
00:09:44,890 --> 00:09:46,060
So let's just go there.

149
00:09:47,320 --> 00:09:48,030
Source.

150
00:09:48,080 --> 00:09:50,920
Com Symantec Square Basics.

151
00:09:53,880 --> 00:09:55,440
Extension is dark java.

152
00:09:56,950 --> 00:09:57,580
And that's it.

153
00:09:57,580 --> 00:10:00,970
So that's the Hello World Program and it has a single method main.

154
00:10:01,720 --> 00:10:05,350
Now let's just go ahead and compile and run this.

155
00:10:05,830 --> 00:10:10,030
So let's just go into the command prompt, which is the DOS prompt seemed.

156
00:10:10,890 --> 00:10:12,240
But let's.

157
00:10:13,760 --> 00:10:14,800
The restructure.

158
00:10:14,810 --> 00:10:16,280
Let's go into that directory.

159
00:10:22,720 --> 00:10:26,050
So for to compile, we use the Java command.

160
00:10:27,880 --> 00:10:30,160
And here is the Java file.

161
00:10:30,970 --> 00:10:33,360
So when we compile it, it's compiled.

162
00:10:33,370 --> 00:10:34,600
So let's just.

163
00:10:35,580 --> 00:10:38,040
So here we are in the basics directory.

164
00:10:38,040 --> 00:10:44,100
So we have this hello java and the class file has been generated and this class file has the byte codes,

165
00:10:44,100 --> 00:10:45,240
the our byte codes.

166
00:10:45,450 --> 00:10:52,290
And so this is a Windows machine and we know that this class file can be executed on any platform,

167
00:10:52,620 --> 00:10:55,830
whether it is Linux or Mac, it can be executed.

168
00:10:55,830 --> 00:10:59,880
And that's the advantage we have in Java, which is the platform independence.

169
00:11:00,300 --> 00:11:02,520
So let's just go ahead and execute it for that.

170
00:11:02,520 --> 00:11:04,230
We use the Java interpreter.

171
00:11:06,180 --> 00:11:08,010
Hello world.

172
00:11:08,100 --> 00:11:09,390
So it is nothing bad.

173
00:11:09,420 --> 00:11:10,770
Hello, world class.

174
00:11:11,220 --> 00:11:12,630
So when we do this.

175
00:11:13,800 --> 00:11:15,690
It's going to print the message.

176
00:11:16,260 --> 00:11:20,550
So we compiled and we ran our first program.

177
00:11:21,770 --> 00:11:23,450
So let's just go back here.

178
00:11:23,990 --> 00:11:29,960
Now, this file, the class name is Helloworld and the file name was also Helloworld Java.

179
00:11:30,590 --> 00:11:34,730
And it need not be same, at least in this particular context.

180
00:11:34,730 --> 00:11:35,810
It need not be same.

181
00:11:35,810 --> 00:11:39,320
So if you want, we can just change this to Helloworld one.

182
00:11:39,320 --> 00:11:40,170
So which is the class?

183
00:11:40,550 --> 00:11:42,590
The name of the class is Helloworld one.

184
00:11:42,860 --> 00:11:44,540
The file name is Helloworld.

185
00:11:44,540 --> 00:11:47,150
So now let's just go ahead and compile this.

186
00:11:48,580 --> 00:11:55,510
Let's just call it as the file name is still Helloworld, so let's just compile it so it compiled fine.

187
00:11:55,900 --> 00:11:59,530
Now if you look at the disk, so we see that.

188
00:11:59,950 --> 00:12:05,040
So this is the hello world of Java and this was previously created.

189
00:12:05,050 --> 00:12:05,830
Hello world class.

190
00:12:05,830 --> 00:12:07,060
We don't need that anymore.

191
00:12:08,700 --> 00:12:11,760
So hello, world one a new class file got created.

192
00:12:12,000 --> 00:12:13,080
So this was the.

193
00:12:13,290 --> 00:12:15,150
The file with the new name.

194
00:12:16,120 --> 00:12:21,180
So this is just to show you that it need not be the same, but you shouldn't do that.

195
00:12:21,190 --> 00:12:24,250
Typically, we always have the same name.

196
00:12:24,460 --> 00:12:26,440
The file name and class name are the same.

197
00:12:26,440 --> 00:12:29,110
So let's just change it back to Helloworld.

198
00:12:29,350 --> 00:12:35,830
Actually, let me put it as level one, but generally we also have the modifier public here.

199
00:12:36,430 --> 00:12:43,870
Typically we do that, but if you do that, then the compiler requires that both the file name and the

200
00:12:43,870 --> 00:12:45,490
class name are same.

201
00:12:46,030 --> 00:12:48,700
So in this case, let me just compile.

202
00:12:48,700 --> 00:12:50,080
Let me just say hello world.

203
00:12:50,840 --> 00:12:51,840
And there you go.

204
00:12:51,860 --> 00:12:53,860
It says it gives another message.

205
00:12:53,870 --> 00:12:55,190
It says Class Hello World.

206
00:12:55,190 --> 00:13:01,610
One is public and it should be declared in a file named Hello World one dot Java right now the name

207
00:13:01,610 --> 00:13:03,290
is Hello all that Java.

208
00:13:03,740 --> 00:13:09,890
So if you have the public modifier, which is generally the case, then both of them have to be same.

209
00:13:10,280 --> 00:13:15,770
So just keep that in mind and typically you will have the public modifier most of the time.

210
00:13:16,160 --> 00:13:17,330
So just keep that in mind.

211
00:13:17,330 --> 00:13:19,160
So always try to have the same name.

212
00:13:19,340 --> 00:13:25,520
Now you can also have more than one class within this particular file, but normally you wouldn't do

213
00:13:25,520 --> 00:13:26,000
that.

214
00:13:26,180 --> 00:13:29,510
But let's just go ahead and create a new class here.

215
00:13:32,350 --> 00:13:32,930
Call me.

216
00:13:32,950 --> 00:13:34,330
Let's just call it as good goodbye.

217
00:13:36,240 --> 00:13:37,230
And it's also.

218
00:13:38,530 --> 00:13:39,670
Print the message.

219
00:13:39,700 --> 00:13:40,390
Goodbye.

220
00:13:41,680 --> 00:13:42,130
So both.

221
00:13:42,280 --> 00:13:43,400
So there are two classes here.

222
00:13:43,420 --> 00:13:44,320
Hello and goodbye.

223
00:13:44,320 --> 00:13:48,430
And both of them have a main method, and both of them are printing something.

224
00:13:48,700 --> 00:13:52,660
So let's just go ahead and compile the file.

225
00:13:52,930 --> 00:13:54,010
Hello, world.

226
00:13:54,460 --> 00:13:56,200
Let me just delete this.

227
00:13:56,240 --> 00:13:57,280
Hello, everyone.

228
00:14:01,030 --> 00:14:02,020
Its compiler.

229
00:14:03,020 --> 00:14:05,600
Now you can see that it will create two class files.

230
00:14:05,610 --> 00:14:07,190
Hello and goodbye.

231
00:14:07,670 --> 00:14:14,810
So the compiler is going to scan this particular file and create separate class files for both of them.

232
00:14:15,410 --> 00:14:20,090
But generally, you will never have more than a class in a single file.

233
00:14:20,330 --> 00:14:26,420
There is something called nested classes where within this class you can have nested classes.

234
00:14:26,420 --> 00:14:30,050
You can have other classes nested within this class so that we will see later.

235
00:14:30,170 --> 00:14:35,890
But normally you wouldn't have a class external externally, like the way we see here.

236
00:14:35,900 --> 00:14:38,800
That's something that you wouldn't do normally.

237
00:14:38,810 --> 00:14:43,190
Probably if you want to do some quick prototyping on, if you want to have multiple classes, you might

238
00:14:43,190 --> 00:14:44,870
do that, but generally you would.

239
00:14:44,870 --> 00:14:45,730
You will not do this.

240
00:14:46,070 --> 00:14:47,480
So let me just delete that.

241
00:14:47,870 --> 00:14:53,870
So just it's just to let you know that you can have more than a class in a single file, but you shouldn't

242
00:14:53,870 --> 00:14:54,770
be doing that.

243
00:14:55,130 --> 00:15:01,130
So now let's switch back to our slides and discuss a little bit more about the main method.

244
00:15:01,460 --> 00:15:07,700
Now, if you want to run a class from the command line, you need to have a main method in that class.

245
00:15:07,700 --> 00:15:11,030
And let's discuss a little bit more about the main method.

246
00:15:13,290 --> 00:15:16,410
Main method is where your program starts learning.

247
00:15:17,620 --> 00:15:20,410
That is on executing Java space helloworld.

248
00:15:21,380 --> 00:15:27,650
Jong-fast lauds the white coats that are associated with hello world class into the memory and then

249
00:15:27,650 --> 00:15:29,510
it invokes its main method.

250
00:15:30,970 --> 00:15:34,690
On main method must be declared as public, static and void.

251
00:15:35,320 --> 00:15:38,410
Public keyword is required for JVM to invoke it.

252
00:15:38,980 --> 00:15:42,550
Otherwise, program will compile but not executed.

253
00:15:44,380 --> 00:15:50,380
And from the main method, we typically invoke other classes that constitute the software, and those

254
00:15:50,380 --> 00:15:53,290
other classes need not have a main method.

255
00:15:53,830 --> 00:15:59,770
So it's just the class which is being executed from the command line must have a main method.

256
00:16:00,860 --> 00:16:03,830
UN program ends when the main method ends.

257
00:16:04,430 --> 00:16:05,610
So that's about it.

258
00:16:05,630 --> 00:16:09,500
We just wrote our first program and then compile and executed it.

259
00:16:10,040 --> 00:16:13,640
Do write the same program on your end and compile and execute it.

260
00:16:13,820 --> 00:16:15,410
Thank you and happy coding.

