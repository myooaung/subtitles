1
00:00:02,260 --> 00:00:03,200
Hi there.

2
00:00:03,220 --> 00:00:04,410
This is De La Rue.

3
00:00:04,420 --> 00:00:05,470
And welcome back.

4
00:00:05,650 --> 00:00:08,800
Let's now look at the concept of jar files.

5
00:00:09,100 --> 00:00:14,470
It's a very simple concept, and we have already used a few jar files in this course.

6
00:00:14,800 --> 00:00:19,150
For instance, we used a jar to connect to the Mayan database.

7
00:00:19,630 --> 00:00:24,970
Similarly, we used a jar for using the servlet API that is to create.

8
00:00:24,970 --> 00:00:26,380
So let's end JSP.

9
00:00:27,100 --> 00:00:32,439
Similarly, we have used a jar for creating unit tests using JAR Unit.

10
00:00:32,800 --> 00:00:35,290
So we used a jar unit jar for that.

11
00:00:35,710 --> 00:00:40,360
So a jar file essentially provides us with certain functionality.

12
00:00:41,170 --> 00:00:45,460
Now let's go ahead and get a better understanding of JAR files.

13
00:00:46,240 --> 00:00:55,360
Job files have an extension of dot jar and jar is simply a shorthand for Java archive, which means

14
00:00:55,360 --> 00:00:58,600
it is an archive of some Java files.

15
00:00:59,050 --> 00:01:02,650
And typically these files would be just Java classes.

16
00:01:02,770 --> 00:01:10,960
But you can also have any associated resources like images or videos or text files, or even the actual

17
00:01:10,960 --> 00:01:11,950
source code too.

18
00:01:12,400 --> 00:01:14,830
So you can also have Java files.

19
00:01:14,920 --> 00:01:18,430
But typically it would be just Java classes.

20
00:01:19,380 --> 00:01:28,260
So JAR is typically just a collection of Java classes which together represent a Java library.

21
00:01:28,770 --> 00:01:36,690
So a jar is essentially a Java library and on the internet there are tens of thousands of open source

22
00:01:36,690 --> 00:01:44,460
Java libraries providing different kinds of functionality, which also makes Java one of the most popular

23
00:01:44,460 --> 00:01:45,690
languages out there.

24
00:01:46,350 --> 00:01:52,410
If you need some specific functionality, then it is very likely you have a Java library for that and

25
00:01:52,410 --> 00:01:55,290
all you need to do is just Google for it.

26
00:01:56,130 --> 00:02:02,700
The functionality could be as simple as parsing an XML document or a CSV document to functionality for

27
00:02:02,700 --> 00:02:09,900
manipulating the code Java API classes like the String Class Apache Common Slang Library, for instance,

28
00:02:09,900 --> 00:02:17,040
is a library that provides a class for manipulating the string class in certain ways, which is not

29
00:02:17,040 --> 00:02:19,920
possible with just the string class itself.

30
00:02:20,130 --> 00:02:22,980
So it provides certain extra methods.

31
00:02:23,610 --> 00:02:30,450
And you also have libraries that are highly sophisticated for performing machine learning tasks or fast

32
00:02:30,450 --> 00:02:32,460
searching of documents.

33
00:02:32,910 --> 00:02:38,490
So all those advanced algorithms are also encapsulated within the libraries.

34
00:02:40,160 --> 00:02:48,950
So JAR is just a deployment format of a Java library and we will soon see what it contains and to use

35
00:02:48,950 --> 00:02:50,600
a particular jar file.

36
00:02:50,630 --> 00:02:58,160
All we need to do is place it on the class path and if you're using an ID like eclipse we just add it

37
00:02:58,160 --> 00:03:01,300
to the build path and we know how to do that.

38
00:03:01,310 --> 00:03:03,860
And with that you'll be able to use the functionality.

39
00:03:05,240 --> 00:03:09,860
And also just to recall, we also looked at the VAR files earlier.

40
00:03:09,890 --> 00:03:13,160
VAR stands for Web Application Archive.

41
00:03:14,120 --> 00:03:15,620
On similar to Jha.

42
00:03:15,620 --> 00:03:22,280
It is also specific to Java and is the deployment format for Java EE Web applications.

43
00:03:22,790 --> 00:03:30,350
So Java is the deployment format for Java libraries, while WAAS is the deployment format for Java EE

44
00:03:30,350 --> 00:03:31,400
Web applications.

45
00:03:31,820 --> 00:03:40,430
And it can include Java files like the MySQL jar or servlet API jar and it can also include other resources

46
00:03:40,430 --> 00:03:44,690
like servlet, JSP, HTML files and regular Java files.

47
00:03:44,690 --> 00:03:48,560
As we have seen, it is in fact a jar file.

48
00:03:48,980 --> 00:03:50,870
A bar is in fact a jar file.

49
00:03:51,050 --> 00:03:58,370
But as it represents a web application, it has its own internal layout like the web and a folder,

50
00:03:58,520 --> 00:04:07,670
the web XML file or the lib folder within the web in a folder which includes the jars needed by the

51
00:04:07,670 --> 00:04:08,660
web application.

52
00:04:09,380 --> 00:04:15,740
So if you look at the books Aloha Project and if you look at the expanded form, you will be able to

53
00:04:15,740 --> 00:04:19,130
see that there is a live folder within the web by enough folder.

54
00:04:21,029 --> 00:04:24,270
And now let's look at a few core benefits of JAR files.

55
00:04:24,660 --> 00:04:32,190
A JAR file is typically in compressed format and is based on the familiar zip file format.

56
00:04:32,760 --> 00:04:36,390
As it is compressed, it helps with efficient storage.

57
00:04:37,290 --> 00:04:44,700
And since it is based on zip file format, it can be unzipped using something like WinZip or any similar

58
00:04:44,700 --> 00:04:45,930
archive manager.

59
00:04:47,490 --> 00:04:49,620
And this is just for your information.

60
00:04:49,650 --> 00:04:56,430
Within the Java API, we have these packages for manipulating jar files and zip files.

61
00:04:56,790 --> 00:05:04,320
And as Java is based on zip format, many of the classes in the java util jar extend the classes from

62
00:05:04,350 --> 00:05:06,870
java dot zip package.

63
00:05:07,760 --> 00:05:11,600
And we will not look at these packages for now as they are not commonly used.

64
00:05:12,020 --> 00:05:18,890
Typically you would use the jar tool that comes with JDK in order to manipulate jar files from the command

65
00:05:18,890 --> 00:05:19,250
line.

66
00:05:19,670 --> 00:05:25,860
And soon we will look at that and we will also see how jars can be created from within Eclipse.

67
00:05:25,880 --> 00:05:29,870
That is very convenient and that is what we would be doing most of the time.

68
00:05:31,360 --> 00:05:38,980
Now since JOD is compressed and is also bundled as a single file, it can be downloaded very efficiently

69
00:05:38,980 --> 00:05:41,260
within a single HTTP connection.

70
00:05:41,650 --> 00:05:45,640
Otherwise each resource would require a separate connection.

71
00:05:46,460 --> 00:05:51,050
Now, you may have heard of Maven, which is a project management tool.

72
00:05:51,410 --> 00:05:58,700
And one of the benefits of Maven is that you can specify what libraries your project uses in an XML

73
00:05:58,700 --> 00:05:59,210
file.

74
00:05:59,570 --> 00:06:05,540
And MAVEN would automatically download the corresponding jars of those libraries.

75
00:06:05,900 --> 00:06:07,710
So each of those libraries is a jar.

76
00:06:07,730 --> 00:06:10,010
And Maven would automatically download them.

77
00:06:10,310 --> 00:06:17,630
So if your project requires, say, 50 jars, then they can all be downloaded very efficiently just

78
00:06:17,630 --> 00:06:19,880
because of the format of jar file.

79
00:06:20,480 --> 00:06:27,830
So if you use Maven, you do not have to explicitly add jars to the belt, but Maven will download them.

80
00:06:29,490 --> 00:06:34,070
Another nice benefit is security, and this is not something we generally do.

81
00:06:34,080 --> 00:06:42,660
But if needed, the jar contents can be digitally signed so that the receiver can recognize the signature

82
00:06:42,660 --> 00:06:45,870
and can grant any necessary security privileges.

83
00:06:46,230 --> 00:06:48,710
So that's just for your information too.

84
00:06:48,720 --> 00:06:50,940
And it is an advanced concept.

85
00:06:51,150 --> 00:06:54,330
So we are not going to look at look at it for now.

86
00:06:54,690 --> 00:06:57,000
So these are a few core benefits.

87
00:06:58,700 --> 00:07:03,700
And in the next lecture we will see a demo of creating a jar and also manipulating it.

88
00:07:03,710 --> 00:07:10,130
But here are some common basic jar file operations, and you would use the JAR tool that comes with

89
00:07:10,140 --> 00:07:10,730
JDK.

90
00:07:11,300 --> 00:07:15,770
Now here, the first operation creates a compressed jar file.

91
00:07:16,250 --> 00:07:24,470
You would just say jar space, cf space, the jar file name followed by the files to be archived.

92
00:07:25,100 --> 00:07:33,590
The option C and CF stands for create and here asterisk for file names denotes that we want to archive

93
00:07:33,590 --> 00:07:35,720
everything in the current directory.

94
00:07:36,050 --> 00:07:38,060
You could instead have a dot to.

95
00:07:38,830 --> 00:07:45,790
Instead of asterisk, you can also specify one or more individual file or directory names, and those

96
00:07:45,790 --> 00:07:47,950
names would be separated by space.

97
00:07:48,940 --> 00:07:52,150
Second operation is for viewing the contents of a jar.

98
00:07:52,810 --> 00:07:55,690
The option implies table of contents.

99
00:07:56,530 --> 00:08:02,650
Third operation is for extracting the files contained in a jar, and the option X implies that.

100
00:08:03,450 --> 00:08:03,860
Here.

101
00:08:03,870 --> 00:08:05,940
All files in the jar are extracted.

102
00:08:06,090 --> 00:08:11,760
But if you want to extract individual files, then we need to list the file names at the end of the

103
00:08:11,760 --> 00:08:12,360
command.

104
00:08:13,570 --> 00:08:22,240
Finally, to update an existing jar file, you would use the option u in this example bar class in the

105
00:08:22,240 --> 00:08:25,750
current directory would be added to foo jar.

106
00:08:26,410 --> 00:08:29,440
So there is a food jar and we are just adding this class to that.

107
00:08:29,860 --> 00:08:36,190
So those are the basic operations and you may never even use them to that is it could happen that you

108
00:08:36,190 --> 00:08:42,640
would only use jar files in your career, in which case you would just add them to your belt path or

109
00:08:42,640 --> 00:08:43,390
the class pop.

110
00:08:44,230 --> 00:08:50,250
Next, we will actually try out these commands and we will also see how a jar can be created from within

111
00:08:50,260 --> 00:08:50,950
eclipse.

112
00:08:51,190 --> 00:08:51,910
Thank you.

