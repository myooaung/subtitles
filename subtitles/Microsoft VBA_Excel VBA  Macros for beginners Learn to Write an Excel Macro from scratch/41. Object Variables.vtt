WEBVTT
ï»¿1
00:00:00.000 --> 00:00:00.230
Hey,

2
00:00:00.230 --> 00:00:00.590
guys,

3
00:00:00.590 --> 00:00:01.520
welcome back.

4
00:00:01.520 --> 00:00:03.200
So in this video,

5
00:00:03.200 --> 00:00:07.440
we're going to discuss a different type of variables,

6
00:00:07.440 --> 00:00:12.350
and this type of variables is called object variables.

7
00:00:12.350 --> 00:00:17.000
So object variables are a different type of variables.

8
00:00:17.000 --> 00:00:25.080
And the differ from normal variables that we've discussed on the lost couple videos in the

9
00:00:25.080 --> 00:00:29.630
fact that they do not hold values or text,

10
00:00:29.630 --> 00:00:32.650
but the actually hold objects.

11
00:00:32.650 --> 00:00:34.440
And by objects,

12
00:00:34.440 --> 00:00:40.870
I mean a workbook or worksheet or a chart or a ranger.

13
00:00:40.870 --> 00:00:41.900
Some cells.

14
00:00:41.900 --> 00:00:42.460
Okay,

15
00:00:42.460 --> 00:00:44.650
so all these are objects,

16
00:00:44.650 --> 00:00:52.740
and the two main advantages of using object variables is that number one,

17
00:00:52.740 --> 00:00:55.480
they make you type less code,

18
00:00:55.480 --> 00:00:58.060
and number two,

19
00:00:58.060 --> 00:01:01.610
they can make your code run slightly faster,

20
00:01:01.610 --> 00:01:05.660
although the second advantage does not happen often.

21
00:01:05.660 --> 00:01:12.670
But it does happen also when you create object variables and because they hold objects,

22
00:01:12.670 --> 00:01:19.770
then the object variable will possess all the methods and properties off that particular

23
00:01:19.770 --> 00:01:21.570
object that it holds.

24
00:01:21.570 --> 00:01:22.740
So,

25
00:01:22.740 --> 00:01:23.610
for example,

26
00:01:23.610 --> 00:01:26.960
if an object variable holds a range,

27
00:01:26.960 --> 00:01:32.950
then it will have all the methods on properties of a range that we've discussed on previous

28
00:01:32.950 --> 00:01:33.600
videos.

29
00:01:33.600 --> 00:01:35.390
If it holds a worksheet,

30
00:01:35.390 --> 00:01:41.750
then they will have all the methods and properties over a worksheet and so on and so forth

31
00:01:41.750 --> 00:01:41.750
.

32
00:01:41.750 --> 00:01:45.160
So to create an object variable,

33
00:01:45.160 --> 00:01:46.650
you just write dim.

34
00:01:46.650 --> 00:01:52.230
And then let's say I want to create an object variable off the type of a range so it's type

35
00:01:52.230 --> 00:01:53.770
is gonna be a range object.

36
00:01:53.770 --> 00:01:56.120
So I'm gonna write them my range.

37
00:01:56.120 --> 00:01:59.180
That's the name of the object variable as range,

38
00:01:59.180 --> 00:01:59.940
for example.

39
00:01:59.940 --> 00:02:01.380
And now,

40
00:02:01.380 --> 00:02:07.150
after creating the object variable and as we did with normal variables as well,

41
00:02:07.150 --> 00:02:10.730
you need to assign an object to that object variable,

42
00:02:10.730 --> 00:02:11.080
right,

43
00:02:11.080 --> 00:02:14.670
Because that's what we did with normal valuables when we created them.

44
00:02:14.670 --> 00:02:16.650
We assigned values to them.

45
00:02:16.650 --> 00:02:17.160
But now,

46
00:02:17.160 --> 00:02:18.700
instead of assigning values,

47
00:02:18.700 --> 00:02:22.510
we're gonna assign objects to these object variables.

48
00:02:22.510 --> 00:02:28.620
So let's say I want to assign this stable here because my object is a range.

49
00:02:28.620 --> 00:02:29.710
That's the type of it.

50
00:02:29.710 --> 00:02:35.700
I'm going to assign the range of this stabler that I've got here on the left from a one to

51
00:02:35.700 --> 00:02:40.210
C 16 to that range object should to do that.

52
00:02:40.210 --> 00:02:41.830
I'm going to write set.

53
00:02:41.830 --> 00:02:52.140
You gotta right set my reins equals worksheets data the reins a one to C 16.

54
00:02:52.140 --> 00:03:00.390
So I'm actually gonna assign the range a one to C 16 in the worksheet called data to the

55
00:03:00.390 --> 00:03:04.270
object variable that is called my range.

56
00:03:04.270 --> 00:03:08.100
And now I've given it some sort of a nickname.

57
00:03:08.100 --> 00:03:17.060
So now I can actually refer to that range as my range instead of referring to it as

58
00:03:17.060 --> 00:03:22.320
worksheets state at that range a one to C six or even range a one to C six if I've got the

59
00:03:22.320 --> 00:03:24.110
worksheet data selected.

60
00:03:24.110 --> 00:03:30.250
So this actually makes it easier for me to do stuff with that range,

61
00:03:30.250 --> 00:03:30.520
right?

62
00:03:30.520 --> 00:03:36.930
Because they can just write my range dot And then Excel has recognized that this is a range

63
00:03:36.930 --> 00:03:40.990
object and it has the methods and properties of a range object.

64
00:03:40.990 --> 00:03:43.760
So I can write my range dot fund,

65
00:03:43.760 --> 00:03:44.540
for example.

66
00:03:44.540 --> 00:03:49.500
So you can see here is starting to have the methods and properties of a range object dot

67
00:03:49.500 --> 00:03:52.890
color equals V B read,

68
00:03:52.890 --> 00:03:53.750
for example.

69
00:03:53.750 --> 00:03:55.990
So if I run this code,

70
00:03:55.990 --> 00:03:59.590
the the Ranges fund is gonna turn to read,

71
00:03:59.590 --> 00:04:00.690
as you can see here.

72
00:04:00.690 --> 00:04:06.910
So you could see here that using object variables makes me type less code because now I've

73
00:04:06.910 --> 00:04:11.650
given this object a nickname I could just refer to it as my range,

74
00:04:11.650 --> 00:04:19.140
as opposed to referring to it with the worship that it's in and then referring to the range

75
00:04:19.140 --> 00:04:19.140
.

76
00:04:19.140 --> 00:04:25.800
So now you could see that using object variables makes me type less code because I can just

77
00:04:25.800 --> 00:04:31.860
deal with that reigns by just typing my range instead of typing this whole code.

78
00:04:31.860 --> 00:04:33.980
So that makes it easier for me.

79
00:04:33.980 --> 00:04:37.670
There is a type of objects as well.

80
00:04:37.670 --> 00:04:38.250
That is school,

81
00:04:38.250 --> 00:04:39.400
just object.

82
00:04:39.400 --> 00:04:45.610
And this object type is actually just a generic object,

83
00:04:45.610 --> 00:04:52.840
and it can work with any type of objects so it can work if you're trying to set my range

84
00:04:52.840 --> 00:04:58.590
equals two a worksheet or if you're trying to set equal to a range,

85
00:04:58.590 --> 00:05:02.150
so basically whatever variable used with it,

86
00:05:02.150 --> 00:05:04.450
you can assign any type of object to it.

87
00:05:04.450 --> 00:05:05.350
However,

88
00:05:05.350 --> 00:05:11.580
this is rarely used because this normally used when you don't know the type of object,

89
00:05:11.580 --> 00:05:13.600
is going to be assigned to your object variable.

90
00:05:13.600 --> 00:05:15.690
But this rarely happens,

91
00:05:15.690 --> 00:05:17.340
so you will often no,

92
00:05:17.340 --> 00:05:24.170
actually the type of object that you're gonna try to assign to your object variable.

93
00:05:24.170 --> 00:05:31.470
So you normally see people using the my Ranges range or dim my workbook as workbook and so

94
00:05:31.470 --> 00:05:32.200
on and so forth.

95
00:05:32.200 --> 00:05:33.280
Okay,

96
00:05:33.280 --> 00:05:33.550
guys.

97
00:05:33.550 --> 00:05:37.940
So to illustrate the advantage of using object variables further,

98
00:05:37.940 --> 00:05:40.240
I've got here a simple procedure.

99
00:05:40.240 --> 00:05:46.110
And what it's going to do is that it's gonna copy this stable from the data sheet to the

100
00:05:46.110 --> 00:05:47.570
report sheet here.

101
00:05:47.570 --> 00:05:49.700
So if we run this code,

102
00:05:49.700 --> 00:05:52.590
you can see here that the table has been copied.

103
00:05:52.590 --> 00:05:54.090
However,

104
00:05:54.090 --> 00:06:00.040
I can actually reduce the amount of code the I type if I declare some object variables.

105
00:06:00.040 --> 00:06:05.410
So if I dim data as HD as worksheet,

106
00:06:05.410 --> 00:06:06.200
for example,

107
00:06:06.200 --> 00:06:18.920
and then set data sht to be equal to worksheets data and also dim RPT sheet as worksheet

108
00:06:18.920 --> 00:06:24.990
and set RPT sheet to be equal to worksheets report,

109
00:06:24.990 --> 00:06:32.950
I can now replace every instance of worksheets data with just data as HD.

110
00:06:32.950 --> 00:06:37.010
So if I just copy DTs HD here on just Aiken,

111
00:06:37.010 --> 00:06:44.800
just replace that and also every instance of worksheets report with RPT sheet so I can just

112
00:06:44.800 --> 00:06:45.940
do that as well.

113
00:06:45.940 --> 00:06:46.920
And if I run,

114
00:06:46.920 --> 00:06:50.550
the macro is still going to run and do the same thing.

115
00:06:50.550 --> 00:06:51.780
So you can see here.

116
00:06:51.780 --> 00:06:53.420
I've saved myself year.

117
00:06:53.420 --> 00:06:58.640
Sumco Typing on this also can make my code run faster.

118
00:06:58.640 --> 00:07:06.700
And imagine if you've got mawr lines of code that reference the data sheet and report cheat

119
00:07:06.700 --> 00:07:06.700
.

120
00:07:06.700 --> 00:07:13.760
It would be much easier to just refer to them as the days H d and R P t s h d rather than

121
00:07:13.760 --> 00:07:14.330
worksheets,

122
00:07:14.330 --> 00:07:16.580
data and worksheets report.

123
00:07:16.580 --> 00:07:19.250
So this does save you time.

124
00:07:19.250 --> 00:07:22.840
Another thing that I actually faced at work is,

125
00:07:22.840 --> 00:07:23.510
for example,

126
00:07:23.510 --> 00:07:28.490
if I have a worksheet that has a weird name that is hard to memorize,

127
00:07:28.490 --> 00:07:29.990
So it would have ah,

128
00:07:29.990 --> 00:07:32.860
bunch of letters and a bunch of numbers.

129
00:07:32.860 --> 00:07:35.300
So this name is hard to memorize,

130
00:07:35.300 --> 00:07:37.600
so actually it is easier.

131
00:07:37.600 --> 00:07:42.940
And I'm just writing that as a comment so as not to get an error from xlv B A.

132
00:07:42.940 --> 00:07:47.640
You'd right dim X as worksheet,

133
00:07:47.640 --> 00:07:48.550
for example,

134
00:07:48.550 --> 00:07:53.710
and then set X to be equal to worksheets.

135
00:07:53.710 --> 00:07:55.150
This weird name.

136
00:07:55.150 --> 00:08:02.970
So it's easier to do that than have to memorize this kind of name when you type it in your

137
00:08:02.970 --> 00:08:04.960
code over and over again.

138
00:08:04.960 --> 00:08:06.340
So when you do that,

139
00:08:06.340 --> 00:08:12.480
you can just refer to this worksheet with this weird name as just X,

140
00:08:12.480 --> 00:08:15.010
so that is much simpler.

141
00:08:15.010 --> 00:08:15.890
Okay,

142
00:08:15.890 --> 00:08:16.740
so ah,

143
00:08:16.740 --> 00:08:17.170
that's it,

144
00:08:17.170 --> 00:08:17.470
guys,

145
00:08:17.470 --> 00:08:18.660
for object variables.

146
00:08:18.660 --> 00:08:20.190
You're gonna see me.

147
00:08:20.190 --> 00:08:23.960
Use them a lot in our code in the upcoming listens.

148
00:08:23.960 --> 00:08:27.650
Thank you very much watching this video and I'll see on the next one.

