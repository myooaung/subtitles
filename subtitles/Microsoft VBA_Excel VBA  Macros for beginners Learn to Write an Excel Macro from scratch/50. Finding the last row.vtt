WEBVTT
ï»¿1
00:00:00.000 --> 00:00:00.980
in this video,

2
00:00:00.980 --> 00:00:08.000
we're going to speak about how you confined the last row on your data set using xlv B A.

3
00:00:08.000 --> 00:00:13.490
So finding the last row on your data set using a cell Viva is very important because if

4
00:00:13.490 --> 00:00:19.060
you're dealing with a data set like this using VB a code and let's say you're Coppinger

5
00:00:19.060 --> 00:00:19.650
data,

6
00:00:19.650 --> 00:00:25.100
you need to make sure that your coat converter min what the last row for the data is,

7
00:00:25.100 --> 00:00:28.600
regardless of how many rows the data has.

8
00:00:28.600 --> 00:00:29.340
So if,

9
00:00:29.340 --> 00:00:30.430
for example,

10
00:00:30.430 --> 00:00:35.860
the next time you run the macron the status set instead of having 18 rose,

11
00:00:35.860 --> 00:00:36.980
it would have ah,

12
00:00:36.980 --> 00:00:37.850
30 rose,

13
00:00:37.850 --> 00:00:38.650
for example,

14
00:00:38.650 --> 00:00:44.030
You need to make sure that you have code that can determine each time how many rows there

15
00:00:44.030 --> 00:00:49.910
are on your data set size to only select the rose that contain the data set.

16
00:00:49.910 --> 00:00:53.350
And you wouldn't say like extra rows that are actually blank.

17
00:00:53.350 --> 00:00:53.990
Okay,

18
00:00:53.990 --> 00:00:58.850
so this is something that is very important to know when you're going to use it on nearly

19
00:00:58.850 --> 00:01:03.650
every time you write a macro that deals with a data set.

20
00:01:03.650 --> 00:01:05.000
Okay,

21
00:01:05.000 --> 00:01:09.560
so finding your last row actually involves three steps.

22
00:01:09.560 --> 00:01:13.830
The first step is actually starting at the last row in excel.

23
00:01:13.830 --> 00:01:14.870
So actually,

24
00:01:14.870 --> 00:01:18.900
we can get to the last room in excel by pressing control and down.

25
00:01:18.900 --> 00:01:21.260
But this does not happen on the cold on the macro.

26
00:01:21.260 --> 00:01:23.710
The micro just starts at the last row.

27
00:01:23.710 --> 00:01:24.100
Okay,

28
00:01:24.100 --> 00:01:26.350
so this is the starting point of your macro,

29
00:01:26.350 --> 00:01:35.150
and then XlV be a axity jumps up until it hits the last row on your data set,

30
00:01:35.150 --> 00:01:37.100
and you can jump up actually,

31
00:01:37.100 --> 00:01:38.820
by pressing control and up,

32
00:01:38.820 --> 00:01:40.310
and this is actually what the code does.

33
00:01:40.310 --> 00:01:43.290
So it starts in the last row and the code,

34
00:01:43.290 --> 00:01:49.440
you can think of it as present controlling up that it hits the last row on your data set,

35
00:01:49.440 --> 00:01:50.860
which here in our case,

36
00:01:50.860 --> 00:01:52.550
is gonna be row number 18.

37
00:01:52.550 --> 00:01:55.620
And then the third step is asking,

38
00:01:55.620 --> 00:01:58.100
what row A my on.

39
00:01:58.100 --> 00:01:58.690
Okay,

40
00:01:58.690 --> 00:02:00.300
so this is actually the third step.

41
00:02:00.300 --> 00:02:00.750
What?

42
00:02:00.750 --> 00:02:01.640
Row on my on.

43
00:02:01.640 --> 00:02:02.870
And of course,

44
00:02:02.870 --> 00:02:07.730
thes three steps actually happen in just one line of code.

45
00:02:07.730 --> 00:02:08.160
Okay,

46
00:02:08.160 --> 00:02:10.660
but this is how you can understand it.

47
00:02:10.660 --> 00:02:12.240
Just go to the last row,

48
00:02:12.240 --> 00:02:15.850
jump up until you hit the last year on my data set,

49
00:02:15.850 --> 00:02:19.780
and then ask the question Which row?

50
00:02:19.780 --> 00:02:20.590
On my on.

51
00:02:20.590 --> 00:02:22.310
Okay,

52
00:02:22.310 --> 00:02:24.940
so I've opened the visual basic editor here.

53
00:02:24.940 --> 00:02:26.440
And basically,

54
00:02:26.440 --> 00:02:30.290
in order to determine the last throw on your data set,

55
00:02:30.290 --> 00:02:34.830
you need to create a variable because this variable is going to contain the row number for

56
00:02:34.830 --> 00:02:35.670
the last row.

57
00:02:35.670 --> 00:02:38.980
And the road number is gonna be basically an integer,

58
00:02:38.980 --> 00:02:39.270
right.

59
00:02:39.270 --> 00:02:40.250
It's just a number,

60
00:02:40.250 --> 00:02:41.880
and it cannot be a distant all.

61
00:02:41.880 --> 00:02:47.110
So I'm assigning to it the integer data type and also the single data type could work

62
00:02:47.110 --> 00:02:51.330
because the single data step could work with both integers and decimals as well.

63
00:02:51.330 --> 00:02:58.650
And if your data set contains more than 32,000 grows than this indigent data type will not

64
00:02:58.650 --> 00:02:59.310
be enough.

65
00:02:59.310 --> 00:02:59.630
Right?

66
00:02:59.630 --> 00:03:01.000
So you need to go higher.

67
00:03:01.000 --> 00:03:01.670
Go single,

68
00:03:01.670 --> 00:03:02.880
go double whatever.

69
00:03:02.880 --> 00:03:04.050
So the last roll,

70
00:03:04.050 --> 00:03:04.440
actually,

71
00:03:04.440 --> 00:03:11.230
you're going to determine it using the statement cells rose dot counts and then comma one

72
00:03:11.230 --> 00:03:14.750
and then end excell up dot ro.

73
00:03:14.750 --> 00:03:15.220
Okay,

74
00:03:15.220 --> 00:03:19.150
so let's analyze that statement and see what it does.

75
00:03:19.150 --> 00:03:20.240
Basically,

76
00:03:20.240 --> 00:03:24.150
I'm using the cells collection object to go to a cell.

77
00:03:24.150 --> 00:03:26.530
This sells address,

78
00:03:26.530 --> 00:03:29.070
the road number is gonna be froze.

79
00:03:29.070 --> 00:03:29.680
The account,

80
00:03:29.680 --> 00:03:33.950
which is actually the number of rows in my Excel workbook,

81
00:03:33.950 --> 00:03:40.750
and we're writing it as rose dot counts instead of writing one million something because

82
00:03:40.750 --> 00:03:41.490
first of all,

83
00:03:41.490 --> 00:03:46.240
it's easier to write this way because you don't have to memorize the number.

84
00:03:46.240 --> 00:03:54.120
And the second thing is that if you're using Excel 2003 XL 2003 only had 65,000 rows.

85
00:03:54.120 --> 00:04:00.890
So this ensures that you select the last row on your worksheet regardless of the number of

86
00:04:00.890 --> 00:04:01.240
rows,

87
00:04:01.240 --> 00:04:06.060
because you're actually using the count property for the Rose Collection object to

88
00:04:06.060 --> 00:04:07.590
determine the number of rows.

89
00:04:07.590 --> 00:04:12.550
And then this is the column number for the cell that we're going to start from,

90
00:04:12.550 --> 00:04:14.090
and the call number here is one.

91
00:04:14.090 --> 00:04:18.860
And it could be anything because this will depend on your data set.

92
00:04:18.860 --> 00:04:19.850
In our case here,

93
00:04:19.850 --> 00:04:26.430
I'm actually gonna assume that the name column is the one that always has values because

94
00:04:26.430 --> 00:04:32.470
the column that you base your last row on should be the column that always has values like

95
00:04:32.470 --> 00:04:32.470
,

96
00:04:32.470 --> 00:04:33.350
for example,

97
00:04:33.350 --> 00:04:34.690
the employee I d.

98
00:04:34.690 --> 00:04:39.370
And simply couldn't not have a name on the record or the date of birth.

99
00:04:39.370 --> 00:04:43.000
But he can always have an i D if that's how your company works.

100
00:04:43.000 --> 00:04:43.700
For example,

101
00:04:43.700 --> 00:04:45.510
here there will always be a name,

102
00:04:45.510 --> 00:04:46.090
for example,

103
00:04:46.090 --> 00:04:47.040
in the State of Set.

104
00:04:47.040 --> 00:04:51.950
But there could be a row where there's no date or there's no items sold or so,

105
00:04:51.950 --> 00:04:54.760
but this data set can always contain the names.

106
00:04:54.760 --> 00:05:02.060
So you need to make sure to base your row counting on the column that you suspect that it

107
00:05:02.060 --> 00:05:06.660
will always have data OK or that you think that you will always have data in it.

108
00:05:06.660 --> 00:05:07.970
So this is the first step.

109
00:05:07.970 --> 00:05:13.700
I'm starting on the lost row in Excel and then that end excel up.

110
00:05:13.700 --> 00:05:16.720
This is basically pressing control and up.

111
00:05:16.720 --> 00:05:17.370
OK,

112
00:05:17.370 --> 00:05:21.350
so this is the second step that I'm doing.

113
00:05:21.350 --> 00:05:25.330
So the first step is starting of the lost cell in Excel.

114
00:05:25.330 --> 00:05:28.220
Second step here is pressing,

115
00:05:28.220 --> 00:05:29.380
controlling up.

116
00:05:29.380 --> 00:05:30.690
And when I do that,

117
00:05:30.690 --> 00:05:33.250
I'm hitting the last row on my data set.

118
00:05:33.250 --> 00:05:39.580
So the third step is asking for the row number with the dot Rowe property,

119
00:05:39.580 --> 00:05:47.200
so cells rose dot count comma one dot end excel up some on the lust row in excel,

120
00:05:47.200 --> 00:05:47.860
pressing,

121
00:05:47.860 --> 00:05:48.890
controlling up.

122
00:05:48.890 --> 00:05:52.550
And then I'm hitting his cell and Then I'm asking for the Rowe property,

123
00:05:52.550 --> 00:05:58.100
which will give me the road number for that particular cell,

124
00:05:58.100 --> 00:05:59.550
which in our case,

125
00:05:59.550 --> 00:06:00.650
should be 18.

126
00:06:00.650 --> 00:06:06.810
So if we step through this cold step by step using F eight on our keyboard,

127
00:06:06.810 --> 00:06:09.200
when we execute this line of code,

128
00:06:09.200 --> 00:06:12.370
you could CRL r is equal to 18.

129
00:06:12.370 --> 00:06:18.640
And that means the our last row is row number 18 which is correct if let's say we have

130
00:06:18.640 --> 00:06:21.010
added any rose to this data set.

131
00:06:21.010 --> 00:06:24.780
So now we've got a one extra row and were run this code again.

132
00:06:24.780 --> 00:06:29.240
So it's running against by step as well you can see are the l.

133
00:06:29.240 --> 00:06:30.640
Ours has become 19.

134
00:06:30.640 --> 00:06:35.840
So that means that when you put this line of code in your code,

135
00:06:35.840 --> 00:06:41.870
this will dynamically determine what the last row on your data set is.

136
00:06:41.870 --> 00:06:47.550
So if your data set expands so number of rows increases or trinkets,

137
00:06:47.550 --> 00:06:49.010
number of rows decreases.

138
00:06:49.010 --> 00:06:56.970
You always make sure that your micro will be able to determine how many rows your data set

139
00:06:56.970 --> 00:06:56.970
.

140
00:06:56.970 --> 00:06:57.790
Haas.

141
00:06:57.790 --> 00:07:02.510
That is actually a very important thing to learn in VB,

142
00:07:02.510 --> 00:07:08.000
and you need to actually memorize this statement just Aziz you memories your name.

143
00:07:08.000 --> 00:07:08.280
Okay?

144
00:07:08.280 --> 00:07:11.420
This is a very important statement that you're gonna use.

145
00:07:11.420 --> 00:07:11.680
Ah,

146
00:07:11.680 --> 00:07:12.190
lot.

147
00:07:12.190 --> 00:07:17.980
There is another way that you can determine what the last row is,

148
00:07:17.980 --> 00:07:19.660
although it's not recommended.

149
00:07:19.660 --> 00:07:20.400
Well,

150
00:07:20.400 --> 00:07:21.800
just explain it for you.

151
00:07:21.800 --> 00:07:22.540
Basically,

152
00:07:22.540 --> 00:07:24.810
you can start at any cell in your data set.

153
00:07:24.810 --> 00:07:26.870
And if you press control and down,

154
00:07:26.870 --> 00:07:33.610
let's see what happens when you press control and down you actually end up on the lost None

155
00:07:33.610 --> 00:07:35.430
blank cell.

156
00:07:35.430 --> 00:07:36.050
OK?

157
00:07:36.050 --> 00:07:39.750
It's not going to be essentially the cell in the last row,

158
00:07:39.750 --> 00:07:42.250
because if there is a blank cell in the middle,

159
00:07:42.250 --> 00:07:44.060
you're gonna end up on it.

160
00:07:44.060 --> 00:07:46.250
So this is why I'm not recommending it.

161
00:07:46.250 --> 00:07:46.830
For example,

162
00:07:46.830 --> 00:07:52.300
if you insert a row here and this row is blank and if I press controlling down,

163
00:07:52.300 --> 00:07:53.230
you can see here.

164
00:07:53.230 --> 00:07:56.650
I've stopped actually at the Lost None blank row.

165
00:07:56.650 --> 00:07:58.680
But there is a road here.

166
00:07:58.680 --> 00:07:59.230
There's bling,

167
00:07:59.230 --> 00:08:01.690
and this is not my last throw s.

168
00:08:01.690 --> 00:08:04.610
So this is why this way is not recommended.

169
00:08:04.610 --> 00:08:10.290
Because if you press control and down and write the code this way and this way is actually

170
00:08:10.290 --> 00:08:14.960
sells one comma winner could be any selling your data set dot and excel down and end.

171
00:08:14.960 --> 00:08:19.040
Excel Down means press control and down and then ask for the row number.

172
00:08:19.040 --> 00:08:20.380
If there's a blank cell,

173
00:08:20.380 --> 00:08:22.550
you're not going to reach your loss throw,

174
00:08:22.550 --> 00:08:28.850
and you could end up with having the last row to be incorrect.

175
00:08:28.850 --> 00:08:34.440
This is why you're not going to see the second way that we've explained here being used

176
00:08:34.440 --> 00:08:34.990
often,

177
00:08:34.990 --> 00:08:40.790
and you're actually going to see the first way of doing it being used more often.

178
00:08:40.790 --> 00:08:47.670
Saros dot count comma one dot end Excel up Doc Rowe So Ah,

179
00:08:47.670 --> 00:08:48.150
that's it,

180
00:08:48.150 --> 00:08:48.520
guys,

181
00:08:48.520 --> 00:08:51.070
for finding the last row in excel.

182
00:08:51.070 --> 00:08:51.600
Viva!

183
00:08:51.600 --> 00:08:54.250
It's a very important thing to understand,

184
00:08:54.250 --> 00:08:56.810
Thank you very much watching this video,

185
00:08:56.810 --> 00:08:58.670
and I'll see you on the next one.

