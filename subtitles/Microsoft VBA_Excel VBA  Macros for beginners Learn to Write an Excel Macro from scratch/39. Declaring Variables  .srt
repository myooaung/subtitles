1
00:00:00,000 --> 00:00:00,430
Hey,

2
00:00:00,430 --> 00:00:00,760
guys,

3
00:00:00,760 --> 00:00:01,440
welcome back.

4
00:00:01,440 --> 00:00:02,550
So in this video,

5
00:00:02,550 --> 00:00:05,540
we're gonna learn how to declare variables,

6
00:00:05,540 --> 00:00:10,290
and we're gonna have a demonstration off the different variable data types.

7
00:00:10,290 --> 00:00:11,710
So basically,

8
00:00:11,710 --> 00:00:13,630
in order to declare a variable,

9
00:00:13,630 --> 00:00:15,890
you just right the word dim.

10
00:00:15,890 --> 00:00:19,740
And then let's say I wanna name my variable my var,

11
00:00:19,740 --> 00:00:20,630
for example,

12
00:00:20,630 --> 00:00:28,020
And then you write as and then you're gonna have here a menu pop up so you can start typing

13
00:00:28,020 --> 00:00:30,750
the type of the variable.

14
00:00:30,750 --> 00:00:35,570
This menu pops up a sport of the intelligence or the auto complete feature in Excel.

15
00:00:35,570 --> 00:00:36,080
Viva.

16
00:00:36,080 --> 00:00:40,190
So let's say I'm going to declare my variable as a bite,

17
00:00:40,190 --> 00:00:41,410
for example,

18
00:00:41,410 --> 00:00:43,330
So it's gonna be the bite data type,

19
00:00:43,330 --> 00:00:46,180
and you could see here that as a type bite,

20
00:00:46,180 --> 00:00:51,600
it started to get selected from this intelligence menu.

21
00:00:51,600 --> 00:00:54,950
So then you compress stab on your keyboard,

22
00:00:54,950 --> 00:00:56,500
the top key on your keyboard,

23
00:00:56,500 --> 00:00:59,660
and you can see here that excel,

24
00:00:59,660 --> 00:01:07,350
even adjust the casing so as to make the word dim have the D as a upper case as an

25
00:01:07,350 --> 00:01:10,650
uppercase letter and the word bite as well.

26
00:01:10,650 --> 00:01:11,370
So now,

27
00:01:11,370 --> 00:01:11,870
actually,

28
00:01:11,870 --> 00:01:19,320
we have reserved an amount of space in the computers Ram or the computer's memory for a

29
00:01:19,320 --> 00:01:21,750
variable called Molly Var.

30
00:01:21,750 --> 00:01:22,730
Okay,

31
00:01:22,730 --> 00:01:31,810
so we have told the computer that we want to reserve on amount of memory for this variable

32
00:01:31,810 --> 00:01:38,290
and because it's type is going to be a bite than it's gonna take only one bites in memory.

33
00:01:38,290 --> 00:01:45,420
So now what we need to do is to actually populate the variable that is called my var.

34
00:01:45,420 --> 00:01:48,270
With the value it is now ready to receive a value.

35
00:01:48,270 --> 00:01:50,660
So in order to give it a value,

36
00:01:50,660 --> 00:01:55,480
you can just write my var and then equals and then give it a value.

37
00:01:55,480 --> 00:02:02,620
So you need to actually give it a value between zero and 255 because this is the allowable

38
00:02:02,620 --> 00:02:03,200
range.

39
00:02:03,200 --> 00:02:10,110
So let's say I give it a value of zero now if I run my macro step by step.

40
00:02:10,110 --> 00:02:14,070
So I'm gonna press F eight on my keyboard to run it step by step,

41
00:02:14,070 --> 00:02:18,600
and you can see here that the value of my var is equal to zero.

42
00:02:18,600 --> 00:02:20,730
After this step is executed,

43
00:02:20,730 --> 00:02:26,580
the value of money of our is equal to zero because this is the value off put in it.

44
00:02:26,580 --> 00:02:34,350
You can see here this balloon appearing when I hover over it and note as well that if you

45
00:02:34,350 --> 00:02:38,520
give the my var a value that is outside the allowable range.

46
00:02:38,520 --> 00:02:44,150
So to say I'm going to give it 256 because it's type is a bite.

47
00:02:44,150 --> 00:02:49,690
And you can see here that the allowable ranges between 0 to 255 and the number must be an

48
00:02:49,690 --> 00:02:50,380
integer.

49
00:02:50,380 --> 00:02:52,840
Then you're gonna actually get an error.

50
00:02:52,840 --> 00:02:54,550
So if we run this macro,

51
00:02:54,550 --> 00:02:57,650
we're going to get an error is called the Overflow Error,

52
00:02:57,650 --> 00:03:06,120
and it indicates that you have given the variable e value that is outside it's allowable

53
00:03:06,120 --> 00:03:07,050
range.

54
00:03:07,050 --> 00:03:14,860
So you need to make sure that your variable receives a value that is within its allowable

55
00:03:14,860 --> 00:03:17,760
range at all points in your procedure.

56
00:03:17,760 --> 00:03:20,780
Now I want to also create another variable.

57
00:03:20,780 --> 00:03:23,040
I'm gonna call it Molly of r two,

58
00:03:23,040 --> 00:03:25,620
and I'm going to make it as bullion,

59
00:03:25,620 --> 00:03:26,500
for example,

60
00:03:26,500 --> 00:03:28,950
and you could see her as a start typing Boolean.

61
00:03:28,950 --> 00:03:34,050
It starts to appear on the intelligence feature or the auto complete feature here.

62
00:03:34,050 --> 00:03:35,610
When I press tab here,

63
00:03:35,610 --> 00:03:43,170
you can see her that Excel has completed the sentence and one more advantage off declaring

64
00:03:43,170 --> 00:03:50,870
your variables is that usually excel will use the intelligence feature to try and predict

65
00:03:50,870 --> 00:03:53,120
which variable you're trying to type.

66
00:03:53,120 --> 00:03:53,810
However,

67
00:03:53,810 --> 00:03:55,640
sometimes it does not work.

68
00:03:55,640 --> 00:03:58,610
So if I try to take my var normally,

69
00:03:58,610 --> 00:04:02,150
Excel should give me some suggestions.

70
00:04:02,150 --> 00:04:04,260
But if it doesn't work,

71
00:04:04,260 --> 00:04:07,250
you compress control and space on your keyboard,

72
00:04:07,250 --> 00:04:12,490
and you can see here that I'm getting some suggestions and I'm getting actually the first

73
00:04:12,490 --> 00:04:14,080
to suggestions are correct.

74
00:04:14,080 --> 00:04:19,800
So it's suggesting that I want to type my varro my var to so actually on your computer.

75
00:04:19,800 --> 00:04:22,350
It could work without pressing control and space.

76
00:04:22,350 --> 00:04:24,280
But if it doesn't work,

77
00:04:24,280 --> 00:04:27,570
just press control in space and you're going to get some suggestions.

78
00:04:27,570 --> 00:04:32,400
This is one MAWR advantage off declaring variables.

79
00:04:32,400 --> 00:04:36,390
So because it's a bullion when I press equals X,

80
00:04:36,390 --> 00:04:40,940
l will predict that I'm either gonna put a value of true or false.

81
00:04:40,940 --> 00:04:44,700
There is no other value because brilliant only accepts true or full.

82
00:04:44,700 --> 00:04:49,750
So it's going to give me suggestions here in case of the bullion because it can easily

83
00:04:49,750 --> 00:04:52,080
predict the values it's either two or falls.

84
00:04:52,080 --> 00:04:53,250
There is no other option.

85
00:04:53,250 --> 00:04:55,490
So if I select true,

86
00:04:55,490 --> 00:04:56,270
for example,

87
00:04:56,270 --> 00:04:58,280
and I press tab on my keyboard.

88
00:04:58,280 --> 00:04:59,020
Now,

89
00:04:59,020 --> 00:05:00,510
if I run this macro,

90
00:05:00,510 --> 00:05:02,180
consider mal ivories.

91
00:05:02,180 --> 00:05:06,320
255 have replaced its value so as not to get an error.

92
00:05:06,320 --> 00:05:10,340
And my var two is equal to true.

93
00:05:10,340 --> 00:05:10,600
Now,

94
00:05:10,600 --> 00:05:12,670
when I run this line of code on,

95
00:05:12,670 --> 00:05:16,960
I'm running it step by step using the F eight key on my keyboard.

96
00:05:16,960 --> 00:05:19,230
Now,

97
00:05:19,230 --> 00:05:19,850
of course,

98
00:05:19,850 --> 00:05:26,120
if you give the my var to variable a value other than true or fools,

99
00:05:26,120 --> 00:05:28,800
you are going to get an error as well.

100
00:05:28,800 --> 00:05:29,800
Okay,

101
00:05:29,800 --> 00:05:30,090
guys.

102
00:05:30,090 --> 00:05:34,850
So I've actually declared another variable called my date,

103
00:05:34,850 --> 00:05:41,290
and its type is gonna be a date because I want to show you how to write dates in XlV.

104
00:05:41,290 --> 00:05:43,590
Be a now we could,

105
00:05:43,590 --> 00:05:44,630
right?

106
00:05:44,630 --> 00:05:50,540
My date is equal to now in order to right dates and xlv A.

107
00:05:50,540 --> 00:05:52,450
There are several ways to do that.

108
00:05:52,450 --> 00:05:57,220
One way is to press the pound key on your keyboard,

109
00:05:57,220 --> 00:06:02,120
which is by pressing shift and three and then you write the date.

110
00:06:02,120 --> 00:06:05,500
But it needs to be in the American format.

111
00:06:05,500 --> 00:06:07,650
So if we want all right.

112
00:06:07,650 --> 00:06:09,350
The fifth of June,

113
00:06:09,350 --> 00:06:10,030
for example,

114
00:06:10,030 --> 00:06:10,540
is gonna be,

115
00:06:10,540 --> 00:06:15,390
06 slash o fire 2016 for example.

116
00:06:15,390 --> 00:06:23,360
And then we close with another pound sign and I'm actually going to write that in Cell E

117
00:06:23,360 --> 00:06:23,690
too.

118
00:06:23,690 --> 00:06:25,650
So I'm gonna write this state and Celie too.

119
00:06:25,650 --> 00:06:28,170
So if you run this macro,

120
00:06:28,170 --> 00:06:34,890
you can see here that the date husband written this is the fifth of June and actually it

121
00:06:34,890 --> 00:06:41,310
appears here in the international or British format because my computer is formatted this

122
00:06:41,310 --> 00:06:41,640
way.

123
00:06:41,640 --> 00:06:46,030
My computer is formatted according to the international system,

124
00:06:46,030 --> 00:06:48,690
not the US system.

125
00:06:48,690 --> 00:06:51,280
So even though I have written it using the U.

126
00:06:51,280 --> 00:06:52,050
S system,

127
00:06:52,050 --> 00:06:55,120
it's appeared it on my excel as the international system.

128
00:06:55,120 --> 00:06:57,820
Because this is how my computer is formatted.

129
00:06:57,820 --> 00:07:00,050
If your computer is formatted as the U.

130
00:07:00,050 --> 00:07:01,830
S system is going to appear as the U.

131
00:07:01,830 --> 00:07:02,190
S.

132
00:07:02,190 --> 00:07:02,950
System,

133
00:07:02,950 --> 00:07:05,620
so that is one way off.

134
00:07:05,620 --> 00:07:13,010
Writing dates another way is to use the dates value function and the date value function

135
00:07:13,010 --> 00:07:16,920
accepts the date as a string or as a text,

136
00:07:16,920 --> 00:07:22,010
so you need to put it between double quotes and you can just type the date as a text and it

137
00:07:22,010 --> 00:07:23,100
can accept actually,

138
00:07:23,100 --> 00:07:24,980
the date in several ways.

139
00:07:24,980 --> 00:07:25,400
So,

140
00:07:25,400 --> 00:07:26,110
for example,

141
00:07:26,110 --> 00:07:31,650
12 of Gen 12 John 2016 this one is gonna work.

142
00:07:31,650 --> 00:07:35,200
And 12 Jan Comma 2016.

143
00:07:35,200 --> 00:07:39,370
This one is gonna work as well gives you the same result.

144
00:07:39,370 --> 00:07:40,350
Okay,

145
00:07:40,350 --> 00:07:46,800
so it can recognize several ways of writing the date as a text.

146
00:07:46,800 --> 00:07:48,750
And even if I right here,

147
00:07:48,750 --> 00:07:51,600
like the international format,

148
00:07:51,600 --> 00:07:57,410
So 12 01 2016 is going to recognize it as well,

149
00:07:57,410 --> 00:07:59,780
and it's gonna put it correctly in the cell.

150
00:07:59,780 --> 00:08:00,670
However,

151
00:08:00,670 --> 00:08:03,160
the way for writing dates,

152
00:08:03,160 --> 00:08:08,660
the I would recommend the most is actually the date serial function,

153
00:08:08,660 --> 00:08:13,660
because this avoids any confusion on how to write dates.

154
00:08:13,660 --> 00:08:17,160
Because sometimes if the computer is formatted in the U.

155
00:08:17,160 --> 00:08:17,330
S.

156
00:08:17,330 --> 00:08:20,190
System and you writing the date in the international system,

157
00:08:20,190 --> 00:08:21,430
or vice versa,

158
00:08:21,430 --> 00:08:23,690
this could cause issues.

159
00:08:23,690 --> 00:08:24,580
However,

160
00:08:24,580 --> 00:08:30,740
the date serial function is actually the best way of writing dates in XlV b A.

161
00:08:30,740 --> 00:08:37,250
And I would recommend you use that whenever you can try to stick to that one all the time

162
00:08:37,250 --> 00:08:43,450
because it simply takes three inputs the year on the month and the day as integers.

163
00:08:43,450 --> 00:08:45,890
So you put the year for example,

164
00:08:45,890 --> 00:08:47,650
2016 comma.

165
00:08:47,650 --> 00:08:54,600
The month is gonna be January 01 And then today the 12 of January,

166
00:08:54,600 --> 00:08:55,350
for example,

167
00:08:55,350 --> 00:08:59,180
let's actually delete this one first.

168
00:08:59,180 --> 00:09:02,000
Go back to the visual Basic Editor.

169
00:09:02,000 --> 00:09:03,260
If you run that,

170
00:09:03,260 --> 00:09:05,760
you will have your date type correctly.

171
00:09:05,760 --> 00:09:15,590
So my recommendation always stick to the date serial function for typing dates in xlv.

172
00:09:15,590 --> 00:09:16,090
B A.

173
00:09:16,090 --> 00:09:16,770
Now,

174
00:09:16,770 --> 00:09:17,740
in this lesson,

175
00:09:17,740 --> 00:09:23,570
we're not gonna try every data type because some data types,

176
00:09:23,570 --> 00:09:24,770
for example,

177
00:09:24,770 --> 00:09:27,780
the long and the single on the double are just gonna work normally,

178
00:09:27,780 --> 00:09:32,200
as long as you give them values within their ranges.

179
00:09:32,200 --> 00:09:32,930
Okay,

180
00:09:32,930 --> 00:09:38,030
so we're trying to discuss the data types that could potentially cause you issues,

181
00:09:38,030 --> 00:09:40,730
and that could be a bit tricky.

182
00:09:40,730 --> 00:09:41,350
Okay,

183
00:09:41,350 --> 00:09:47,370
so I've also declared another variable called my string here as a string and then we can

184
00:09:47,370 --> 00:09:52,340
actually take My string is equal to Joe,

185
00:09:52,340 --> 00:09:53,380
for example.

186
00:09:53,380 --> 00:09:58,440
So now the variable my string is gonna be equal to Joe and weaken Display that in a message

187
00:09:58,440 --> 00:09:59,980
box message box.

188
00:09:59,980 --> 00:10:00,950
My string.

189
00:10:00,950 --> 00:10:02,860
So if you run this macro here,

190
00:10:02,860 --> 00:10:03,880
we're gonna have a message.

191
00:10:03,880 --> 00:10:04,410
Boxes.

192
00:10:04,410 --> 00:10:04,860
Well,

193
00:10:04,860 --> 00:10:09,880
pop up with my string and actually know Did the message box function,

194
00:10:09,880 --> 00:10:13,200
and we'll speak about in detail later on in the course.

195
00:10:13,200 --> 00:10:13,890
But it does,

196
00:10:13,890 --> 00:10:15,610
except the string data type.

197
00:10:15,610 --> 00:10:20,920
So you need to make sure that you're putting a string in the message box,

198
00:10:20,920 --> 00:10:22,380
and it can actually,

199
00:10:22,380 --> 00:10:23,840
if you're displaying the number,

200
00:10:23,840 --> 00:10:28,120
it will automatically convert it to a string data type.

201
00:10:28,120 --> 00:10:30,450
So if the number is an integer data type,

202
00:10:30,450 --> 00:10:31,280
for example,

203
00:10:31,280 --> 00:10:37,560
in most of the cases it will do an automatic conversion and converted automatically to a

204
00:10:37,560 --> 00:10:38,800
string data type.

205
00:10:38,800 --> 00:10:41,280
So the problems do not arise often.

206
00:10:41,280 --> 00:10:44,880
But you just need to know that it should accept a string.

207
00:10:44,880 --> 00:10:48,980
But we're gonna discuss it later on in detail as well.

208
00:10:48,980 --> 00:10:49,570
Now,

209
00:10:49,570 --> 00:10:55,250
the string variable that we have just declared here is actually a variable length,

210
00:10:55,250 --> 00:11:01,030
so that means it can accept pretty much any length for the string.

211
00:11:01,030 --> 00:11:04,000
So 0 to 2 billion characters.

212
00:11:04,000 --> 00:11:04,580
It's a lot,

213
00:11:04,580 --> 00:11:06,120
so pretty much any length.

214
00:11:06,120 --> 00:11:08,260
If you needed to be limited,

215
00:11:08,260 --> 00:11:09,590
you just Stipe a star.

216
00:11:09,590 --> 00:11:10,180
And then,

217
00:11:10,180 --> 00:11:10,770
for example,

218
00:11:10,770 --> 00:11:13,380
I'm gonna make it limited to two characters.

219
00:11:13,380 --> 00:11:14,610
If you run that,

220
00:11:14,610 --> 00:11:15,940
you're not going to get an error.

221
00:11:15,940 --> 00:11:20,540
You just gonna have the E for Joe shaved off Okay,

222
00:11:20,540 --> 00:11:24,910
so it's gonna be J and O only because it will only allow two characters.

223
00:11:24,910 --> 00:11:28,690
But for all practical purposes,

224
00:11:28,690 --> 00:11:33,930
you're usually not going to see people declare the string variable as a limited string.

225
00:11:33,930 --> 00:11:35,760
It's gonna be just a variable strings.

226
00:11:35,760 --> 00:11:40,460
So you're not going to see this store and then the number for practical purposes,

227
00:11:40,460 --> 00:11:44,240
you're very rarely going to see that people are not going to do that.

228
00:11:44,240 --> 00:11:46,980
Usually when you see a string variable declared,

229
00:11:46,980 --> 00:11:51,230
it's just gonna be a variable string which is just dim the name of the variable,

230
00:11:51,230 --> 00:11:53,450
my string as string on that seat.

231
00:11:53,450 --> 00:11:57,950
Now I've created another procedure here called variant data.

232
00:11:57,950 --> 00:12:03,980
Time to explain the variant data type and the very in data type is simply just a jack of

233
00:12:03,980 --> 00:12:04,830
all trades.

234
00:12:04,830 --> 00:12:09,470
It can accept values of any type.

235
00:12:09,470 --> 00:12:10,090
Okay,

236
00:12:10,090 --> 00:12:16,490
so the very indeed a type you can declare a variable as a very berating dim my var,

237
00:12:16,490 --> 00:12:17,190
for example,

238
00:12:17,190 --> 00:12:19,050
as variant.

239
00:12:19,050 --> 00:12:21,210
So this declares as a variant.

240
00:12:21,210 --> 00:12:23,950
And also if you don't write it at all and just write,

241
00:12:23,950 --> 00:12:27,100
my var is equal to Jack,

242
00:12:27,100 --> 00:12:27,950
for example.

243
00:12:27,950 --> 00:12:28,610
Okay,

244
00:12:28,610 --> 00:12:31,860
so this is a taste and then message box.

245
00:12:31,860 --> 00:12:32,750
My var.

246
00:12:32,750 --> 00:12:34,210
This also works,

247
00:12:34,210 --> 00:12:35,690
and if you run that macro,

248
00:12:35,690 --> 00:12:38,820
we can see here Jack appears in the message box.

249
00:12:38,820 --> 00:12:46,490
So because my var was not declared here at all XlV B A will just assume it's a varying data

250
00:12:46,490 --> 00:12:46,830
type.

251
00:12:46,830 --> 00:12:48,420
It will just give it a very in data time.

252
00:12:48,420 --> 00:12:53,840
So the very in data type happens when you either declare a variable as a variant and give

253
00:12:53,840 --> 00:12:54,550
it a value,

254
00:12:54,550 --> 00:12:57,870
and it can take any value or not declare it at all.

255
00:12:57,870 --> 00:12:59,450
If you don't declare it at all,

256
00:12:59,450 --> 00:13:05,260
it will also be given the variant data type and the very indeed a type can,

257
00:13:05,260 --> 00:13:06,050
of course,

258
00:13:06,050 --> 00:13:08,020
except other types of values,

259
00:13:08,020 --> 00:13:09,530
so it can accept texts.

260
00:13:09,530 --> 00:13:09,910
Here,

261
00:13:09,910 --> 00:13:12,280
as we've seen it can also accept dates.

262
00:13:12,280 --> 00:13:14,580
It can accept anything you can accept.

263
00:13:14,580 --> 00:13:17,700
Bullion values can accept basically anything.

264
00:13:17,700 --> 00:13:19,760
It's just the jack of old traits,

265
00:13:19,760 --> 00:13:21,990
and as you could see her as well,

266
00:13:21,990 --> 00:13:24,740
we've written the variable without needing to declare it,

267
00:13:24,740 --> 00:13:26,350
and the macro worked fine.

268
00:13:26,350 --> 00:13:28,210
But despite that,

269
00:13:28,210 --> 00:13:35,460
it is actually a best practice to declare the variables that you're going to use and

270
00:13:35,460 --> 00:13:40,290
declare them with the appropriate data types and not to declare them always vary in,

271
00:13:40,290 --> 00:13:40,920
for example,

272
00:13:40,920 --> 00:13:47,150
so give them appropriate data types in order to maker macro as efficient as possible.

273
00:13:47,150 --> 00:13:50,410
This does not make a difference on Small Micro's,

274
00:13:50,410 --> 00:13:55,920
but it does make a difference on Big Mac Rose with loss of calculations and loss of stuff

275
00:13:55,920 --> 00:13:56,550
to be done.

276
00:13:56,550 --> 00:13:57,500
Okay,

277
00:13:57,500 --> 00:13:58,770
so this was it,

278
00:13:58,770 --> 00:14:00,620
guys for declaring variables.

279
00:14:00,620 --> 00:14:02,780
Thank you very much watching this video,

280
00:14:02,780 --> 00:14:04,950
and I'll see you on the next one.

