WEBVTT
ï»¿1
00:00:00.000 --> 00:00:03.400
prince in this video,

2
00:00:03.400 --> 00:00:09.560
we're going to discuss a voter data types off your python or variable later types inward.

3
00:00:09.560 --> 00:00:10.150
Pipe on,

4
00:00:10.150 --> 00:00:12.530
See before going toe.

5
00:00:12.530 --> 00:00:14.850
Start about this concert.

6
00:00:14.850 --> 00:00:15.950
You know,

7
00:00:15.950 --> 00:00:16.750
already variable,

8
00:00:16.750 --> 00:00:17.530
right?

9
00:00:17.530 --> 00:00:22.290
Simply you are taking some extra closer to any number and you are saying that this is a

10
00:00:22.290 --> 00:00:22.760
variable.

11
00:00:22.760 --> 00:00:24.710
I can also take some other variable.

12
00:00:24.710 --> 00:00:25.230
Like why?

13
00:00:25.230 --> 00:00:26.850
Because of some 4.8,

14
00:00:26.850 --> 00:00:28.470
right,

15
00:00:28.470 --> 00:00:35.140
or let's say some 30 close to some three place some four j But in itself j out taking I I

16
00:00:35.140 --> 00:00:35.510
mean,

17
00:00:35.510 --> 00:00:40.660
we help the variables right on in,

18
00:00:40.660 --> 00:00:41.650
first available.

19
00:00:41.650 --> 00:00:43.340
I have Anyway,

20
00:00:43.340 --> 00:00:44.480
in all these three variables,

21
00:00:44.480 --> 00:00:45.360
your number only.

22
00:00:45.360 --> 00:00:46.970
But strictly speaking,

23
00:00:46.970 --> 00:00:48.130
X is in danger.

24
00:00:48.130 --> 00:00:54.670
Why is there some floor that is a complex That means based on which type off that I was

25
00:00:54.670 --> 00:00:56.300
touring into your variable?

26
00:00:56.300 --> 00:00:57.380
Based on that,

27
00:00:57.380 --> 00:01:02.000
we have data types are variable data types on One more thing,

28
00:01:02.000 --> 00:01:02.390
guys.

29
00:01:02.390 --> 00:01:03.080
You know,

30
00:01:03.080 --> 00:01:06.240
whenever if you assign something like any variable equals toe,

31
00:01:06.240 --> 00:01:07.010
any value,

32
00:01:07.010 --> 00:01:07.870
right,

33
00:01:07.870 --> 00:01:10.100
so you're pipeline is going toe.

34
00:01:10.100 --> 00:01:16.040
Take some ram memory on in that you're storing your value called four on whatever the

35
00:01:16.040 --> 00:01:19.350
address is there for this memory that is represented with the ex.

36
00:01:19.350 --> 00:01:20.570
No,

37
00:01:20.570 --> 00:01:24.180
if you want to take the value off ecstatically simply or techniques.

38
00:01:24.180 --> 00:01:27.050
But if you want to find the what is the address off your ex?

39
00:01:27.050 --> 00:01:28.370
So for that,

40
00:01:28.370 --> 00:01:29.680
there is a small syntax.

41
00:01:29.680 --> 00:01:30.700
Let me open that.

42
00:01:30.700 --> 00:01:31.750
Let me show you that.

43
00:01:31.750 --> 00:01:34.730
Let me enter into my piper.

44
00:01:34.730 --> 00:01:36.450
You can use this from anywhere.

45
00:01:36.450 --> 00:01:37.260
I mean,

46
00:01:37.260 --> 00:01:45.480
from both By don script our program or panel off your piper idea effects will do the memory

47
00:01:45.480 --> 00:01:46.710
location off your variable.

48
00:01:46.710 --> 00:01:47.410
Okay,

49
00:01:47.410 --> 00:01:48.570
lets this point is very,

50
00:01:48.570 --> 00:01:50.270
very important for your online exams.

51
00:01:50.270 --> 00:01:55.650
Just make a note idea Affects will do the your variable memory location.

52
00:01:55.650 --> 00:01:57.770
But if you want to get variable value,

53
00:01:57.770 --> 00:01:58.280
definitely are.

54
00:01:58.280 --> 00:01:59.250
Take wearable itself.

55
00:01:59.250 --> 00:01:59.920
Right?

56
00:01:59.920 --> 00:02:00.550
See,

57
00:02:00.550 --> 00:02:03.670
study X equals to fight.

58
00:02:03.670 --> 00:02:05.080
I cannot take print.

59
00:02:05.080 --> 00:02:05.470
Exe.

60
00:02:05.470 --> 00:02:06.850
I can get value affects.

61
00:02:06.850 --> 00:02:11.340
But if I want to get them any idea memory location off your ex.

62
00:02:11.340 --> 00:02:14.110
I have to take in this way So otherwise.

63
00:02:14.110 --> 00:02:15.340
Aiken store idea,

64
00:02:15.340 --> 00:02:17.790
fix or address off X equals two idea fix.

65
00:02:17.790 --> 00:02:19.480
I mean,

66
00:02:19.480 --> 00:02:23.080
I am defending one new variable called idee X On into that,

67
00:02:23.080 --> 00:02:24.520
I assign idea if it's,

68
00:02:24.520 --> 00:02:26.050
I can do it in this way also.

69
00:02:26.050 --> 00:02:27.700
Okay,

70
00:02:27.700 --> 00:02:28.270
that's fine.

71
00:02:28.270 --> 00:02:28.590
No,

72
00:02:28.590 --> 00:02:30.350
let's come back to your discussion.

73
00:02:30.350 --> 00:02:36.460
Data types like first thing is very value in Piketon has a greater type.

74
00:02:36.460 --> 00:02:42.630
It may be in digital float or complex are some string or some 1,000,000,000 But we are

75
00:02:42.630 --> 00:02:48.480
different data types in your pipe on I Monday's whatever the point we have here,

76
00:02:48.480 --> 00:02:48.870
right,

77
00:02:48.870 --> 00:02:51.550
that may or may not be understand by you as off?

78
00:02:51.550 --> 00:02:51.780
No,

79
00:02:51.780 --> 00:02:56.100
Because you if you're familiar with some oops concepts off any other programming language,

80
00:02:56.100 --> 00:02:57.850
then you can easily understand the second point.

81
00:02:57.850 --> 00:02:58.970
If you don't know,

82
00:02:58.970 --> 00:03:00.340
just forget about second point.

83
00:03:00.340 --> 00:03:03.350
We will discuss it while working with groups in your pipe bomb.

84
00:03:03.350 --> 00:03:05.410
So that is,

85
00:03:05.410 --> 00:03:07.930
since everything is an object in python.

86
00:03:07.930 --> 00:03:10.260
So whatever you are creating,

87
00:03:10.260 --> 00:03:11.080
what are your writing?

88
00:03:11.080 --> 00:03:11.310
No,

89
00:03:11.310 --> 00:03:13.550
that is like an object in your python programming.

90
00:03:13.550 --> 00:03:16.210
So later types or actually,

91
00:03:16.210 --> 00:03:18.050
classes on variables,

92
00:03:18.050 --> 00:03:19.230
right?

93
00:03:19.230 --> 00:03:24.540
Your relatives are actually court how classes on variables on they are like instances off

94
00:03:24.540 --> 00:03:25.450
the classes.

95
00:03:25.450 --> 00:03:28.150
That's fine.

96
00:03:28.150 --> 00:03:34.400
So based on which type of data you are storing into your variable based on that we have

97
00:03:34.400 --> 00:03:35.950
different types of data types,

98
00:03:35.950 --> 00:03:36.650
right?

99
00:03:36.650 --> 00:03:39.540
Then we hold various.

100
00:03:39.540 --> 00:03:41.850
But I'm going with as off no basic data types.

101
00:03:41.850 --> 00:03:44.530
They are like numbers in numbers.

102
00:03:44.530 --> 00:03:48.670
See how in digital ETA float on complex strings.

103
00:03:48.670 --> 00:03:50.150
1,000,000,000.

104
00:03:50.150 --> 00:03:51.350
Okay,

105
00:03:51.350 --> 00:03:54.430
let me weapon or script under,

106
00:03:54.430 --> 00:03:55.150
I will write.

107
00:03:55.150 --> 00:03:58.640
So I opened my sublime texts.

108
00:03:58.640 --> 00:04:02.650
Let me given name for my by transcript.

109
00:04:02.650 --> 00:04:03.650
Like,

110
00:04:03.650 --> 00:04:05.870
just click on control.

111
00:04:05.870 --> 00:04:07.060
It's just press control.

112
00:04:07.060 --> 00:04:13.730
This So we are working with our Let me take a desk toe there.

113
00:04:13.730 --> 00:04:16.090
We have one Fuller called Python scripts.

114
00:04:16.090 --> 00:04:16.790
Let me clear.

115
00:04:16.790 --> 00:04:17.400
Here,

116
00:04:17.400 --> 00:04:23.850
working with date are types.

117
00:04:23.850 --> 00:04:25.480
Not the way.

118
00:04:25.480 --> 00:04:26.250
Right.

119
00:04:26.250 --> 00:04:27.790
Fine.

120
00:04:27.790 --> 00:04:31.950
So the first thing I am writing X equals to some number three.

121
00:04:31.950 --> 00:04:33.020
Okay.

122
00:04:33.020 --> 00:04:36.950
Why he caused to some number four or six and very close to some number.

123
00:04:36.950 --> 00:04:37.900
Ah,

124
00:04:37.900 --> 00:04:42.650
three place some four day four I like.

125
00:04:42.650 --> 00:04:50.350
Then let me print first your variable x and then let me print your variable.

126
00:04:50.350 --> 00:04:50.710
Why?

127
00:04:50.710 --> 00:04:53.450
And let me bring You are available.

128
00:04:53.450 --> 00:04:55.350
Is it right?

129
00:04:55.350 --> 00:04:56.060
Saving time,

130
00:04:56.060 --> 00:04:56.460
Danny.

131
00:04:56.460 --> 00:04:58.280
So to run just to press control,

132
00:04:58.280 --> 00:05:00.490
be so you're getting your old data us,

133
00:05:00.490 --> 00:05:00.750
right?

134
00:05:00.750 --> 00:05:03.270
So as if you actually here.

135
00:05:03.270 --> 00:05:04.600
I defined my variables.

136
00:05:04.600 --> 00:05:05.980
Three variables in three lines.

137
00:05:05.980 --> 00:05:09.400
Of course I can also defined in this way in a single.

138
00:05:09.400 --> 00:05:09.910
And if you want,

139
00:05:09.910 --> 00:05:11.190
defend multiple variables,

140
00:05:11.190 --> 00:05:12.850
you can also go in this way.

141
00:05:12.850 --> 00:05:15.330
This is also valid one just after the output.

142
00:05:15.330 --> 00:05:16.240
They're getting same onboard,

143
00:05:16.240 --> 00:05:16.410
right?

144
00:05:16.410 --> 00:05:18.850
Fine.

145
00:05:18.850 --> 00:05:20.250
No.

146
00:05:20.250 --> 00:05:26.210
And even if you want to display your all variables with one single prince statement simply

147
00:05:26.210 --> 00:05:26.210
,

148
00:05:26.210 --> 00:05:27.930
you can write X comer.

149
00:05:27.930 --> 00:05:28.890
Why calmer?

150
00:05:28.890 --> 00:05:31.250
There is also valid one.

151
00:05:31.250 --> 00:05:32.450
Okay,

152
00:05:32.450 --> 00:05:33.680
no,

153
00:05:33.680 --> 00:05:35.550
let me run this and see the output.

154
00:05:35.550 --> 00:05:40.150
You're getting same or put right.

155
00:05:40.150 --> 00:05:43.690
But in this single any or getting so how to bring in multiple and we will see it,

156
00:05:43.690 --> 00:05:45.050
right?

157
00:05:45.050 --> 00:05:46.190
Okay,

158
00:05:46.190 --> 00:05:46.590
fine.

159
00:05:46.590 --> 00:05:53.770
So just for clarity just I'm maintaining exit closed toe on.

160
00:05:53.770 --> 00:05:57.150
Why cause toe on very close to one Then I am printing separately.

161
00:05:57.150 --> 00:05:57.510
Print.

162
00:05:57.510 --> 00:06:00.590
Exe then print.

163
00:06:00.590 --> 00:06:11.650
Why brings that fine at the same time?

164
00:06:11.650 --> 00:06:19.100
Know what I'm doing is I'm also printing X comma Taipa fix so I can print with the paper

165
00:06:19.100 --> 00:06:24.330
fix right and see the output off your X value X type semi.

166
00:06:24.330 --> 00:06:26.410
Why comma pipe off.

167
00:06:26.410 --> 00:06:26.650
Wait.

168
00:06:26.650 --> 00:06:29.390
And they're already we know this.

169
00:06:29.390 --> 00:06:33.970
What is the type right of the Lord?

170
00:06:33.970 --> 00:06:35.950
Put your getting in digital photo and complex.

171
00:06:35.950 --> 00:06:36.750
So anyway,

172
00:06:36.750 --> 00:06:40.290
for stuff all these three variables are number their type specifically exes,

173
00:06:40.290 --> 00:06:41.470
Indigent wise.

174
00:06:41.470 --> 00:06:43.450
Float under these complex.

175
00:06:43.450 --> 00:06:45.880
So this is one data types oppose.

176
00:06:45.880 --> 00:06:47.860
Right now.

177
00:06:47.860 --> 00:06:48.520
Let me come in.

178
00:06:48.520 --> 00:06:55.130
This your second data type as strings string thing is nothing.

179
00:06:55.130 --> 00:06:56.700
My group off characters,

180
00:06:56.700 --> 00:06:58.150
maybe single character.

181
00:06:58.150 --> 00:06:58.610
Also,

182
00:06:58.610 --> 00:07:07.360
let's say I'm taking a variable name That is my name or language name,

183
00:07:07.360 --> 00:07:08.630
right?

184
00:07:08.630 --> 00:07:13.740
You can take any variable Simply convey Kelley calls to also just suitable variable name.

185
00:07:13.740 --> 00:07:18.320
I'm selecting language name because toe fight on scripting.

186
00:07:18.320 --> 00:07:19.690
So,

187
00:07:19.690 --> 00:07:19.970
guys,

188
00:07:19.970 --> 00:07:23.350
if you abs or whatever you're writing on right side of your equal symbol,

189
00:07:23.350 --> 00:07:25.500
that is a string If it is a string,

190
00:07:25.500 --> 00:07:32.090
you have to mention that spring inside off quotations same as your print through print your

191
00:07:32.090 --> 00:07:36.570
printing some string Know if it is a stream you hard right inside of your conditions on

192
00:07:36.570 --> 00:07:39.330
that quotations maybe single quotation or double quotation.

193
00:07:39.330 --> 00:07:43.550
Let me force to work with single condition and see the output.

194
00:07:43.550 --> 00:07:46.140
But I can also define like,

195
00:07:46.140 --> 00:07:46.520
you know,

196
00:07:46.520 --> 00:07:48.050
single quotations as well.

197
00:07:48.050 --> 00:07:51.190
That's it,

198
00:07:51.190 --> 00:07:53.990
right.

199
00:07:53.990 --> 00:07:55.980
And let me do one thing.

200
00:07:55.980 --> 00:08:04.840
I am taking my name because to not in the so print mining,

201
00:08:04.840 --> 00:08:07.950
right,

202
00:08:07.950 --> 00:08:10.250
so if he observed Gold Line,

203
00:08:10.250 --> 00:08:11.890
You are defining a string.

204
00:08:11.890 --> 00:08:13.890
If it is a string actually hard,

205
00:08:13.890 --> 00:08:15.150
right inside of quotations,

206
00:08:15.150 --> 00:08:18.150
it may be single or double or even maybe trouble courts also.

207
00:08:18.150 --> 00:08:19.640
But I was off.

208
00:08:19.640 --> 00:08:19.890
No,

209
00:08:19.890 --> 00:08:22.770
I'm going to work with single and double for timing.

210
00:08:22.770 --> 00:08:27.030
You just remember only these two way off our defining your strings will discuss with the

211
00:08:27.030 --> 00:08:28.550
trouble court somewhere else.

212
00:08:28.550 --> 00:08:30.950
Find naive.

213
00:08:30.950 --> 00:08:32.680
You absorb my name,

214
00:08:32.680 --> 00:08:34.050
it goes to string I'm writing.

215
00:08:34.050 --> 00:08:36.480
But this thing I'm not writing inclination.

216
00:08:36.480 --> 00:08:38.400
And if you run this see,

217
00:08:38.400 --> 00:08:39.350
that would all you're getting.

218
00:08:39.350 --> 00:08:41.720
You're getting another call.

219
00:08:41.720 --> 00:08:44.690
Name Narendra is not define in case.

220
00:08:44.690 --> 00:08:46.250
If it is already variable,

221
00:08:46.250 --> 00:08:51.720
then this value will be assigned to this like let me explain with example Suppose X equals

222
00:08:51.720 --> 00:08:54.710
two uo how and why cause to X.

223
00:08:54.710 --> 00:08:55.450
If I write,

224
00:08:55.450 --> 00:08:58.510
X is already defined externalities there too.

225
00:08:58.510 --> 00:09:00.890
Now that value are assigned away and in this case,

226
00:09:00.890 --> 00:09:01.650
this correct.

227
00:09:01.650 --> 00:09:06.540
But in our program know where we are Defending variable called Narendra.

228
00:09:06.540 --> 00:09:09.170
That's why it is giving name Maren.

229
00:09:09.170 --> 00:09:10.050
Raise not define.

230
00:09:10.050 --> 00:09:12.320
But actually our intention is not in the race,

231
00:09:12.320 --> 00:09:19.270
not a variable like not in razor data that's why Hide right inside off your quotations Now

232
00:09:19.270 --> 00:09:23.710
it will work perfectly not to Right on.

233
00:09:23.710 --> 00:09:25.270
If you want to know the type off,

234
00:09:25.270 --> 00:09:32.050
you are variable Always you can print pipe off your variable name so that you will get you

235
00:09:32.050 --> 00:09:36.150
are variable type which type off that I used touring the your variable That is a string

236
00:09:36.150 --> 00:09:40.050
right?

237
00:09:40.050 --> 00:09:43.430
Then the next one is you.

238
00:09:43.430 --> 00:09:45.450
How brilliant data types.

239
00:09:45.450 --> 00:09:47.170
So that is in your strings.

240
00:09:47.170 --> 00:09:47.400
You know,

241
00:09:47.400 --> 00:09:54.240
Let me take simply my name it go to some X Also know yet I am read declaring my variable

242
00:09:54.240 --> 00:09:55.860
name as X.

243
00:09:55.860 --> 00:09:57.640
Now see that could final output Yes,

244
00:09:57.640 --> 00:09:59.800
you are getting I mean,

245
00:09:59.800 --> 00:10:03.190
you can also take single character as you are String.

246
00:10:03.190 --> 00:10:04.210
No problem.

247
00:10:04.210 --> 00:10:05.190
See,

248
00:10:05.190 --> 00:10:08.750
that would put you're getting classle String X is also a string.

249
00:10:08.750 --> 00:10:11.220
Okay,

250
00:10:11.220 --> 00:10:11.910
this is fine.

251
00:10:11.910 --> 00:10:13.820
Now let me come into multiple lines.

252
00:10:13.820 --> 00:10:15.130
I'm commending.

253
00:10:15.130 --> 00:10:16.890
So you know what is the purpose of common?

254
00:10:16.890 --> 00:10:19.720
I mean double courts to comment multiple lines,

255
00:10:19.720 --> 00:10:20.050
right?

256
00:10:20.050 --> 00:10:20.830
No,

257
00:10:20.830 --> 00:10:21.960
if I run this program,

258
00:10:21.960 --> 00:10:26.450
nor put because all lines are commentator Fine,

259
00:10:26.450 --> 00:10:28.000
No,

260
00:10:28.000 --> 00:10:28.650
observe that.

261
00:10:28.650 --> 00:10:34.290
I'm going to take something called my value.

262
00:10:34.290 --> 00:10:42.450
It was to prove right So that's you know who is not art available here.

263
00:10:42.450 --> 00:10:45.700
And suppose if you feel you either string,

264
00:10:45.700 --> 00:10:47.050
you should write in quotations.

265
00:10:47.050 --> 00:10:50.320
And in case if Bruce is not present,

266
00:10:50.320 --> 00:10:51.450
then what will happen?

267
00:10:51.450 --> 00:10:55.270
You will get on a If true is not a variable.

268
00:10:55.270 --> 00:11:04.280
You will get another but except through one false let me take my new value equals two false

269
00:11:04.280 --> 00:11:09.490
Let me run this on set up or you're not getting in our boat at the same time you're not

270
00:11:09.490 --> 00:11:10.750
getting any real as well.

271
00:11:10.750 --> 00:11:18.350
But if I take my one more value equals two small it it's true.

272
00:11:18.350 --> 00:11:21.250
And if I run there to see that would what you're getting,

273
00:11:21.250 --> 00:11:23.250
who is not defined?

274
00:11:23.250 --> 00:11:25.220
Small letter t crew is not defined.

275
00:11:25.220 --> 00:11:27.220
Same a cattle peers or more different,

276
00:11:27.220 --> 00:11:27.500
right?

277
00:11:27.500 --> 00:11:29.550
But you're not getting every year,

278
00:11:29.550 --> 00:11:32.920
but you're getting era while defending in this way.

279
00:11:32.920 --> 00:11:40.800
That means actually Onley coupled a true on only a couple of false these two or for your

280
00:11:40.800 --> 00:11:42.570
bullion right.

281
00:11:42.570 --> 00:11:43.850
Let me print the work.

282
00:11:43.850 --> 00:11:46.180
My name.

283
00:11:46.180 --> 00:11:46.630
Sorry,

284
00:11:46.630 --> 00:11:48.950
my value on then.

285
00:11:48.950 --> 00:11:49.840
Type off.

286
00:11:49.840 --> 00:11:51.250
You are my value.

287
00:11:51.250 --> 00:12:00.860
I see the output You're getting like a bullion not only for that spring my new value.

288
00:12:00.860 --> 00:12:01.800
Come on,

289
00:12:01.800 --> 00:12:04.250
type off my new value.

290
00:12:04.250 --> 00:12:04.990
See,

291
00:12:04.990 --> 00:12:07.050
that would put what are we in?

292
00:12:07.050 --> 00:12:08.630
So actually,

293
00:12:08.630 --> 00:12:10.340
but nobody feel right in the best way.

294
00:12:10.340 --> 00:12:13.720
You will feel that truly the string on false is also a string.

295
00:12:13.720 --> 00:12:17.280
But if you don't write quotations only for these two words guys,

296
00:12:17.280 --> 00:12:20.170
Not for any other words only for cattle.

297
00:12:20.170 --> 00:12:20.890
True on,

298
00:12:20.890 --> 00:12:22.420
only for capital falls.

299
00:12:22.420 --> 00:12:26.020
If we don't write quotations than they will,

300
00:12:26.020 --> 00:12:30.150
actors like a bullion data tights by mistake.

301
00:12:30.150 --> 00:12:31.650
If you write quotations for true,

302
00:12:31.650 --> 00:12:35.420
if you write anything inside of a condition that is always a string,

303
00:12:35.420 --> 00:12:40.460
even though if it is capital through because you return inside off conditions now that data

304
00:12:40.460 --> 00:12:44.050
will be considered as a string of the output you're getting as a string.

305
00:12:44.050 --> 00:12:47.030
Right?

306
00:12:47.030 --> 00:12:53.330
So hard to remember at this point accepted these Prue under false remaining all strings.

307
00:12:53.330 --> 00:12:54.450
He are too right.

308
00:12:54.450 --> 00:12:56.150
Quotations.

309
00:12:56.150 --> 00:12:58.450
Then Only that is a values.

310
00:12:58.450 --> 00:12:59.750
It's index.

311
00:12:59.750 --> 00:13:04.070
Even if you want to take Prue as a string.

312
00:13:04.070 --> 00:13:04.330
Yes,

313
00:13:04.330 --> 00:13:07.050
you can take it by mentioning inside of quotations.

314
00:13:07.050 --> 00:13:08.170
Right.

315
00:13:08.170 --> 00:13:12.540
So these these are the data types basically types in your pipe.

316
00:13:12.540 --> 00:13:20.550
I so already we know that the next thing is typecasting or Pipkin wash in.

317
00:13:20.550 --> 00:13:25.700
So simply converting one data type to another Is it possible?

318
00:13:25.700 --> 00:13:26.100
Yes,

319
00:13:26.100 --> 00:13:26.850
it is possible.

320
00:13:26.850 --> 00:13:33.160
Let me show you one example See as off.

321
00:13:33.160 --> 00:13:33.380
No,

322
00:13:33.380 --> 00:13:44.750
let me take are very simple example so that it will be clear I'm taking X equals some

323
00:13:44.750 --> 00:13:47.080
number 56 right?

324
00:13:47.080 --> 00:13:51.250
And then I am printing your ex Then each of type off X.

325
00:13:51.250 --> 00:13:56.050
I've got output first indigent No,

326
00:13:56.050 --> 00:13:56.960
I'm taking way.

327
00:13:56.960 --> 00:13:57.430
Why?

328
00:13:57.430 --> 00:14:02.550
Because to string off ux Then I'm printing.

329
00:14:02.550 --> 00:14:07.790
Why come a type off your weight so whatever the way you are No,

330
00:14:07.790 --> 00:14:10.980
that way How you are creating from Yes,

331
00:14:10.980 --> 00:14:11.980
I'm creating way.

332
00:14:11.980 --> 00:14:18.450
But while assigning x valued away I'm converting the number into a string No seed output?

333
00:14:18.450 --> 00:14:20.040
Yes.

334
00:14:20.040 --> 00:14:27.320
Now you are 56 is a string that means waiver living a string but X values in teacher Right

335
00:14:27.320 --> 00:14:28.250
Simba,

336
00:14:28.250 --> 00:14:30.590
let me take X equals toe.

337
00:14:30.590 --> 00:14:39.950
So what sums 30 cause toe bullion bullion off your ex and let me print He was hurt as well

338
00:14:39.950 --> 00:14:48.710
as staples it see the output through your getting William affects some value.

339
00:14:48.710 --> 00:14:50.200
Is there that value?

340
00:14:50.200 --> 00:14:50.590
Ficken What?

341
00:14:50.590 --> 00:14:51.230
Windows there.

342
00:14:51.230 --> 00:14:54.050
I'm in bullion that will be it proved.

343
00:14:54.050 --> 00:14:58.660
Let me take Peco's to some Jiro by on first,

344
00:14:58.660 --> 00:14:59.960
let me print your P,

345
00:14:59.960 --> 00:15:04.050
then type off B So I want to print the P as well as type off key.

346
00:15:04.050 --> 00:15:06.110
So after the last of printed statement,

347
00:15:06.110 --> 00:15:13.250
that is a in Asia know what I'm doing is that would take some Q equals two bullion off beak

348
00:15:13.250 --> 00:15:13.250
.

349
00:15:13.250 --> 00:15:16.110
Now let me print in the next line.

350
00:15:16.110 --> 00:15:19.200
Que comma type off You are cute.

351
00:15:19.200 --> 00:15:24.470
It is a false like Okay,

352
00:15:24.470 --> 00:15:25.750
how you're getting true or false,

353
00:15:25.750 --> 00:15:26.520
I will explain you.

354
00:15:26.520 --> 00:15:31.630
But before that you are committing one data type to another data type string indigent to

355
00:15:31.630 --> 00:15:33.890
string right or string to bullion.

356
00:15:33.890 --> 00:15:34.750
Also you can convert.

357
00:15:34.750 --> 00:15:36.450
Okay,

358
00:15:36.450 --> 00:15:37.260
No,

359
00:15:37.260 --> 00:15:45.480
let me do the helping words to convert wonder typo Other type So that is in your data types

360
00:15:45.480 --> 00:15:52.700
in your number there may be how in digital float and then complex on the strings string

361
00:15:52.700 --> 00:15:54.740
under them 1,000,000,000 billion.

362
00:15:54.740 --> 00:16:00.340
So these are the helping words took on word from wondered I put another data type right?

363
00:16:00.340 --> 00:16:04.440
Let's say now I can easily explain from Colonel gays.

364
00:16:04.440 --> 00:16:07.050
Let me right next week was 24.6.

365
00:16:07.050 --> 00:16:08.010
Now am printing?

366
00:16:08.010 --> 00:16:08.700
Definitely.

367
00:16:08.700 --> 00:16:09.280
Indeed.

368
00:16:09.280 --> 00:16:09.970
It affects.

369
00:16:09.970 --> 00:16:13.870
That is floor fraction.

370
00:16:13.870 --> 00:16:14.690
What will be removed,

371
00:16:14.690 --> 00:16:16.350
right?

372
00:16:16.350 --> 00:16:17.340
No,

373
00:16:17.340 --> 00:16:17.970
I have it.

374
00:16:17.970 --> 00:16:18.790
Ah,

375
00:16:18.790 --> 00:16:19.870
let's say my name.

376
00:16:19.870 --> 00:16:21.750
It goes to some fight on.

377
00:16:21.750 --> 00:16:22.920
No.

378
00:16:22.920 --> 00:16:25.510
You know what is the type off your name?

379
00:16:25.510 --> 00:16:27.510
Right?

380
00:16:27.510 --> 00:16:32.270
I'm printing your name as well s type off your mean string,

381
00:16:32.270 --> 00:16:32.550
right?

382
00:16:32.550 --> 00:16:33.720
No,

383
00:16:33.720 --> 00:16:36.650
I'm trying to convert that string into invasion.

384
00:16:36.650 --> 00:16:41.260
So can I can work simply indigent off your variable.

385
00:16:41.260 --> 00:16:48.700
It is giving any in valued usual for individual with the best 10 because see,

386
00:16:48.700 --> 00:16:53.650
guys number four if you right inside of conditions that will convert as a string.

387
00:16:53.650 --> 00:17:00.070
But if you remove quotations for pie tone because this is the whole for bits,

388
00:17:00.070 --> 00:17:00.540
right?

389
00:17:00.540 --> 00:17:05.370
All for birds you cannot convert into number but number You can convert into strings So

390
00:17:05.370 --> 00:17:05.830
these are very,

391
00:17:05.830 --> 00:17:17.980
very important point for sitting any data by can be gun work in two billion fasting.

392
00:17:17.980 --> 00:17:20.780
There is always true with the help off.

393
00:17:20.780 --> 00:17:22.370
Simply bullion off.

394
00:17:22.370 --> 00:17:29.720
Any data type is maybe true or false.

395
00:17:29.720 --> 00:17:35.880
So when it will become true or when it will become false so bullion off the empty is always

396
00:17:35.880 --> 00:17:39.260
false.

397
00:17:39.260 --> 00:17:43.850
Okay,

398
00:17:43.850 --> 00:17:51.000
on bullion off non empty data is always true.

399
00:17:51.000 --> 00:17:53.480
Let me do the examples.

400
00:17:53.480 --> 00:17:55.160
What is empty and what is non empty?

401
00:17:55.160 --> 00:17:56.550
Gentle?

402
00:17:56.550 --> 00:17:57.760
Nothing right?

403
00:17:57.760 --> 00:17:59.450
Judo is nothing.

404
00:17:59.450 --> 00:18:02.220
So let me show you on your tunnel.

405
00:18:02.220 --> 00:18:06.720
William off Jiro is always false.

406
00:18:06.720 --> 00:18:09.850
Let's say I am defending a string which is empty.

407
00:18:09.850 --> 00:18:11.030
See immediately.

408
00:18:11.030 --> 00:18:12.830
I started enclosed with quotations.

409
00:18:12.830 --> 00:18:15.260
That is a that is an empty string.

410
00:18:15.260 --> 00:18:19.050
And I'm trying to convert that string into bullion.

411
00:18:19.050 --> 00:18:22.350
False night Guys,

412
00:18:22.350 --> 00:18:24.000
there is one more dirt I call none.

413
00:18:24.000 --> 00:18:28.790
Nothing so bullion off non is also false.

414
00:18:28.790 --> 00:18:30.740
And where you going?

415
00:18:30.740 --> 00:18:31.140
Forward.

416
00:18:31.140 --> 00:18:33.710
We will see something like this as off.

417
00:18:33.710 --> 00:18:34.040
No,

418
00:18:34.040 --> 00:18:34.900
don't worry.

419
00:18:34.900 --> 00:18:35.640
Just absolutely.

420
00:18:35.640 --> 00:18:36.450
This is also empty.

421
00:18:36.450 --> 00:18:40.150
I'm I'm not writing anything inside off your curly braces.

422
00:18:40.150 --> 00:18:40.550
Right?

423
00:18:40.550 --> 00:18:44.350
So you are Brace.

424
00:18:44.350 --> 00:18:47.550
Okay.

425
00:18:47.550 --> 00:18:49.490
So what is that?

426
00:18:49.490 --> 00:18:50.050
We will see.

427
00:18:50.050 --> 00:18:52.100
No for empty.

428
00:18:52.100 --> 00:18:53.230
I'm giving example.

429
00:18:53.230 --> 00:19:00.160
William Naufragio bullion off?

430
00:19:00.160 --> 00:19:01.540
None.

431
00:19:01.540 --> 00:19:02.370
None is also another.

432
00:19:02.370 --> 00:19:02.770
Their lights.

433
00:19:02.770 --> 00:19:03.160
Nothing.

434
00:19:03.160 --> 00:19:10.760
William off some list of this is empty list and William off.

435
00:19:10.760 --> 00:19:12.260
Ah,

436
00:19:12.260 --> 00:19:13.050
let me Right.

437
00:19:13.050 --> 00:19:16.760
Empty couple and then bullion off.

438
00:19:16.760 --> 00:19:18.580
Empty dick Study.

439
00:19:18.580 --> 00:19:20.340
So what is the dictionary?

440
00:19:20.340 --> 00:19:20.830
Topple list.

441
00:19:20.830 --> 00:19:21.350
We will see.

442
00:19:21.350 --> 00:19:23.040
So these are all results.

443
00:19:23.040 --> 00:19:29.580
Guys will always you or put us a false remaining combinations if something is there and if

444
00:19:29.580 --> 00:19:30.730
you can put that in the bullion,

445
00:19:30.730 --> 00:19:33.870
it will do proof so that these are very,

446
00:19:33.870 --> 00:19:35.300
very important in your real time.

447
00:19:35.300 --> 00:19:39.590
While writing our skips will come to know how much importance is there with conversion off

448
00:19:39.590 --> 00:19:40.610
any dyinto 1,000,000,000.

449
00:19:40.610 --> 00:19:42.350
Okay,

450
00:19:42.350 --> 00:19:43.860
No one more point,

451
00:19:43.860 --> 00:19:54.140
you would remember any data type can be converted into a string,

452
00:19:54.140 --> 00:19:59.350
but everyone is not always true.

453
00:19:59.350 --> 00:20:05.110
The reason is number can be converted into string,

454
00:20:05.110 --> 00:20:08.550
like on a string,

455
00:20:08.550 --> 00:20:10.450
which consists off all the bits.

456
00:20:10.450 --> 00:20:13.570
That's thing you cannot convert into number,

457
00:20:13.570 --> 00:20:15.050
Let's say,

458
00:20:15.050 --> 00:20:16.710
Actually,

459
00:20:16.710 --> 00:20:21.200
Costa Derek Lam writing a string called 34 fight now 345 string.

460
00:20:21.200 --> 00:20:25.790
So what is the use off writing your number as a string mean?

461
00:20:25.790 --> 00:20:28.850
Sometimes you know you are going to take a worse chance in this way.

462
00:20:28.850 --> 00:20:33.160
What's funny is always the string guys you have to take as a string.

463
00:20:33.160 --> 00:20:36.610
If you're going to work with in your real time with any wash in,

464
00:20:36.610 --> 00:20:38.550
please be careful.

465
00:20:38.550 --> 00:20:46.110
I don't define your Russian always as a string uneven while walking while writing your pipe

466
00:20:46.110 --> 00:20:46.660
landscape.

467
00:20:46.660 --> 00:20:52.900
Right to get some washing off some partners offer you'll get as a string only that's right

468
00:20:52.900 --> 00:20:52.900
.

469
00:20:52.900 --> 00:20:53.770
But I do,

470
00:20:53.770 --> 00:20:54.070
right?

471
00:20:54.070 --> 00:20:56.420
They were washing as a string,

472
00:20:56.420 --> 00:20:57.970
right?

473
00:20:57.970 --> 00:20:58.550
That's fine.

474
00:20:58.550 --> 00:20:58.800
No,

475
00:20:58.800 --> 00:20:59.260
see that?

476
00:20:59.260 --> 00:21:06.370
What will happen if I define any number inside of quotations right now?

477
00:21:06.370 --> 00:21:09.770
Do you have a number called to not wander through that final number systems?

478
00:21:09.770 --> 00:21:10.160
No,

479
00:21:10.160 --> 00:21:12.000
you have something like this,

480
00:21:12.000 --> 00:21:14.750
but you don't know multiple dots in your number systems.

481
00:21:14.750 --> 00:21:20.930
That's why you cannot convert whatever they x you're having us off now into you.

482
00:21:20.930 --> 00:21:28.400
What support If I take Could one not flat for is not a base 10 number system.

483
00:21:28.400 --> 00:21:29.680
It is something else.

484
00:21:29.680 --> 00:21:33.090
That's why that you cannot convert Indian number.

485
00:21:33.090 --> 00:21:37.800
But if I take X equals to some 45 these a number.

486
00:21:37.800 --> 00:21:42.570
But you represented that as a string because you heard it on the inside of quotations.

487
00:21:42.570 --> 00:21:47.580
But I can convert that into Indonesia badly by reading in digital fix because 45 is there

488
00:21:47.580 --> 00:21:48.110
in your you know,

489
00:21:48.110 --> 00:21:48.370
even,

490
00:21:48.370 --> 00:21:48.560
you know,

491
00:21:48.560 --> 00:21:49.550
number systems also.

492
00:21:49.550 --> 00:21:59.990
That's why you can convert that in do in de jour like so these that kiss for this meaning I

493
00:21:59.990 --> 00:22:00.390
mean,

494
00:22:00.390 --> 00:22:03.460
any generate can be converted into string.

495
00:22:03.460 --> 00:22:05.050
But reverse is not always true.

496
00:22:05.050 --> 00:22:09.910
Sometimes it is true whenever If that string is a valid number system,

497
00:22:09.910 --> 00:22:12.160
they are night.

498
00:22:12.160 --> 00:22:14.500
Okay,

499
00:22:14.500 --> 00:22:14.850
guys.

500
00:22:14.850 --> 00:22:19.530
So there's the way how you can convert from Wondered AIPO other type on the his called

501
00:22:19.530 --> 00:22:21.110
typecasting or type conversion.

502
00:22:21.110 --> 00:22:21.990
Okay.

503
00:22:21.990 --> 00:22:22.640
Okay,

504
00:22:22.640 --> 00:22:22.960
guys,

505
00:22:22.960 --> 00:22:24.450
Thank you for watching this with you.

