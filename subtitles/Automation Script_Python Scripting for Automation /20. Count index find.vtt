WEBVTT
ï»¿1
00:00:00.000 --> 00:00:03.110
friends here.

2
00:00:03.110 --> 00:00:08.210
We're going to see three more different operations on your given string.

3
00:00:08.210 --> 00:00:12.050
They are like Count index and find operations.

4
00:00:12.050 --> 00:00:13.270
See?

5
00:00:13.270 --> 00:00:13.900
No,

6
00:00:13.900 --> 00:00:14.930
you can easily understand.

7
00:00:14.930 --> 00:00:15.260
Condo.

8
00:00:15.260 --> 00:00:16.820
Operation County is nothing.

9
00:00:16.820 --> 00:00:17.780
But just so you know what,

10
00:00:17.780 --> 00:00:21.090
you're having some string in that given string apart little character.

11
00:00:21.090 --> 00:00:24.850
How many times it is appearing in a given string?

12
00:00:24.850 --> 00:00:26.380
Father,

13
00:00:26.380 --> 00:00:27.650
you're using Kondo operation.

14
00:00:27.650 --> 00:00:30.810
Let me open my terminal here also.

15
00:00:30.810 --> 00:00:32.150
I mean by potential.

16
00:00:32.150 --> 00:00:33.310
Quite uncommon.

17
00:00:33.310 --> 00:00:33.650
Lane.

18
00:00:33.650 --> 00:00:38.300
Let's say X equals to fight on is easy on.

19
00:00:38.300 --> 00:00:42.290
It is popular.

20
00:00:42.290 --> 00:00:46.620
Languish tex dot cone.

21
00:00:46.620 --> 00:00:47.630
Right,

22
00:00:47.630 --> 00:00:48.820
I'm going to count.

23
00:00:48.820 --> 00:00:49.620
How many times?

24
00:00:49.620 --> 00:00:50.880
Letter word.

25
00:00:50.880 --> 00:00:54.430
Easy is there or I'm going to count.

26
00:00:54.430 --> 00:00:56.050
Only butler character Noble.

27
00:00:56.050 --> 00:00:56.650
You can check it.

28
00:00:56.650 --> 00:00:59.110
Right.

29
00:00:59.110 --> 00:01:01.240
Oregon chickpea Oregon.

30
00:01:01.240 --> 00:01:03.340
Check Leterrier.

31
00:01:03.340 --> 00:01:05.060
Right.

32
00:01:05.060 --> 00:01:06.900
You can check Butler character,

33
00:01:06.900 --> 00:01:09.950
or some would also let's say I'm going to check.

34
00:01:09.950 --> 00:01:11.850
Ah,

35
00:01:11.850 --> 00:01:13.470
easy.

36
00:01:13.470 --> 00:01:14.260
And every easy.

37
00:01:14.260 --> 00:01:14.730
What is that?

38
00:01:14.730 --> 00:01:15.450
Only one time.

39
00:01:15.450 --> 00:01:17.970
So how many times that butler,

40
00:01:17.970 --> 00:01:21.840
word or character is appearing in a given string to come to that?

41
00:01:21.840 --> 00:01:23.150
You're using count operation,

42
00:01:23.150 --> 00:01:24.550
right?

43
00:01:24.550 --> 00:01:26.730
No eggs off.

44
00:01:26.730 --> 00:01:27.780
Index.

45
00:01:27.780 --> 00:01:29.550
This is the next operation.

46
00:01:29.550 --> 00:01:32.520
Let's say I want to find the index off.

47
00:01:32.520 --> 00:01:37.260
Letter P the very first letter peas.

48
00:01:37.260 --> 00:01:38.540
They're very force to character.

49
00:01:38.540 --> 00:01:39.150
P is there.

50
00:01:39.150 --> 00:01:41.910
We know what number If you're saying string in this way,

51
00:01:41.910 --> 00:01:47.300
we help us to nexus as well as 19 X is if it comes with a pause to let trapeze or Jiro.

52
00:01:47.300 --> 00:01:49.660
But at the same time,

53
00:01:49.660 --> 00:01:52.200
some very Hopi here and here.

54
00:01:52.200 --> 00:01:54.230
But you are index,

55
00:01:54.230 --> 00:01:55.650
will you by default.

56
00:01:55.650 --> 00:01:56.840
Whatever the index operation,

57
00:01:56.840 --> 00:02:02.230
you haven't given string that we look from left to right on the very first.

58
00:02:02.230 --> 00:02:04.000
Wherever you are getting p,

59
00:02:04.000 --> 00:02:04.640
that index,

60
00:02:04.640 --> 00:02:05.160
it will do.

61
00:02:05.160 --> 00:02:09.590
But in case if you want to look from particular position,

62
00:02:09.590 --> 00:02:12.150
I want to look from index one.

63
00:02:12.150 --> 00:02:14.590
That means you are skipping index zero.

64
00:02:14.590 --> 00:02:16.230
You're not searching from index zero.

65
00:02:16.230 --> 00:02:18.770
You're starting from the next one to last.

66
00:02:18.770 --> 00:02:19.300
Yes,

67
00:02:19.300 --> 00:02:19.970
from where?

68
00:02:19.970 --> 00:02:20.910
2050

69
00:02:20.910 --> 00:02:22.110
How now?

70
00:02:22.110 --> 00:02:23.230
Injured off 25th.

71
00:02:23.230 --> 00:02:25.120
I'm looking from contest six,

72
00:02:25.120 --> 00:02:26.290
then 27.

73
00:02:26.290 --> 00:02:26.510
Easy.

74
00:02:26.510 --> 00:02:29.760
How one more p later Offer that.

75
00:02:29.760 --> 00:02:30.640
Do how anything?

76
00:02:30.640 --> 00:02:32.650
Let's say I am searching from 28.

77
00:02:32.650 --> 00:02:37.970
You don't have that string that given after the 28th Index.

78
00:02:37.970 --> 00:02:39.290
That's where I'm getting an error,

79
00:02:39.290 --> 00:02:40.960
right?

80
00:02:40.960 --> 00:02:42.110
Not only that,

81
00:02:42.110 --> 00:02:42.950
you can check with,

82
00:02:42.950 --> 00:02:44.650
like ease,

83
00:02:44.650 --> 00:02:49.300
so let me check with from starting?

84
00:02:49.300 --> 00:02:49.710
Yes.

85
00:02:49.710 --> 00:02:53.350
Somewhere in seventh index is what is starting.

86
00:02:53.350 --> 00:02:56.050
I indexes seven.

87
00:02:56.050 --> 00:02:59.860
But if it tried to look after some Butler Index,

88
00:02:59.860 --> 00:03:03.190
I want to look from 23 after 23 Index.

89
00:03:03.190 --> 00:03:05.220
You don't know he's word that's really giving an error.

90
00:03:05.220 --> 00:03:06.070
That's why.

91
00:03:06.070 --> 00:03:06.650
You know,

92
00:03:06.650 --> 00:03:12.670
if Butler thing is there any given string you can go on such with the index to get the

93
00:03:12.670 --> 00:03:14.360
index value off your given string.

94
00:03:14.360 --> 00:03:15.680
But anyway,

95
00:03:15.680 --> 00:03:17.600
index operation is sometimes,

96
00:03:17.600 --> 00:03:17.870
you know,

97
00:03:17.870 --> 00:03:19.550
it is giving bad result in this week,

98
00:03:19.550 --> 00:03:22.300
right?

99
00:03:22.300 --> 00:03:23.560
So what I can do?

100
00:03:23.560 --> 00:03:24.800
Is he x Sadat?

101
00:03:24.800 --> 00:03:26.320
Find some.

102
00:03:26.320 --> 00:03:36.800
What I'm doing is or let's say on a single character be I want to look from secondly legs.

103
00:03:36.800 --> 00:03:37.200
Yes.

104
00:03:37.200 --> 00:03:38.410
Somewhere 25th.

105
00:03:38.410 --> 00:03:40.730
I want to look from Candace ext.

106
00:03:40.730 --> 00:03:41.190
Index.

107
00:03:41.190 --> 00:03:41.470
Yes,

108
00:03:41.470 --> 00:03:42.450
somewhere 27.

109
00:03:42.450 --> 00:03:44.190
I mean pillories there.

110
00:03:44.190 --> 00:03:46.860
Conjurer equation 25th Operation 27.

111
00:03:46.860 --> 00:03:47.520
Situation.

112
00:03:47.520 --> 00:03:49.250
I want to look from 28.

113
00:03:49.250 --> 00:03:51.670
You're getting minus one means no.

114
00:03:51.670 --> 00:03:54.240
After 28 you don't have any p letter.

115
00:03:54.240 --> 00:03:55.150
Any given string?

116
00:03:55.150 --> 00:03:57.340
See comfort to index.

117
00:03:57.340 --> 00:03:57.920
Right.

118
00:03:57.920 --> 00:04:00.450
You can simply forget a border index operation.

119
00:04:00.450 --> 00:04:02.260
Just better to remember.

120
00:04:02.260 --> 00:04:03.590
Only find operation.

121
00:04:03.590 --> 00:04:05.400
Of course you have both the things,

122
00:04:05.400 --> 00:04:06.700
but it's Barretto.

123
00:04:06.700 --> 00:04:07.690
You remember,

124
00:04:07.690 --> 00:04:11.850
Find Operation Toe find index off your particular spring or a character.

125
00:04:11.850 --> 00:04:14.350
So how find is going to work?

126
00:04:14.350 --> 00:04:18.780
If that but little character or what is there,

127
00:04:18.780 --> 00:04:20.100
it will do the next off that,

128
00:04:20.100 --> 00:04:25.650
or it will do minus one if it is if it is not their support.

129
00:04:25.650 --> 00:04:31.290
After 28 index from 28 index off to last You don't have any P letter B character and given

130
00:04:31.290 --> 00:04:31.580
string.

131
00:04:31.580 --> 00:04:32.750
That's what is giving minus one.

132
00:04:32.750 --> 00:04:39.140
Now you've dis reserved these minus one than you can say that this Butler string that this

133
00:04:39.140 --> 00:04:43.950
Butler character is not present from 28th to Last Index are some songs.

134
00:04:43.950 --> 00:04:44.850
So in next to last,

135
00:04:44.850 --> 00:04:45.990
let's say,

136
00:04:45.990 --> 00:04:47.230
in entire string,

137
00:04:47.230 --> 00:04:51.350
I'm looking for letter calls ERT or string character called said,

138
00:04:51.350 --> 00:04:55.620
You don't have that any given string because you're string is like X.

139
00:04:55.620 --> 00:04:57.810
You don't have anywhere desert in this string.

140
00:04:57.810 --> 00:05:02.750
That's why ex dot final give minus one right?

141
00:05:02.750 --> 00:05:05.710
So this find is very,

142
00:05:05.710 --> 00:05:09.350
very helpful in your real time engine off cone,

143
00:05:09.350 --> 00:05:10.450
Of course,

144
00:05:10.450 --> 00:05:11.530
county is also useful,

145
00:05:11.530 --> 00:05:13.170
but find is very,

146
00:05:13.170 --> 00:05:13.850
very useful.

147
00:05:13.850 --> 00:05:15.120
Let's say simply,

148
00:05:15.120 --> 00:05:15.320
you,

149
00:05:15.320 --> 00:05:16.050
me one.

150
00:05:16.050 --> 00:05:17.280
For example.

151
00:05:17.280 --> 00:05:20.450
I'm trying to find job abortion through my pie transcript.

152
00:05:20.450 --> 00:05:22.050
Right.

153
00:05:22.050 --> 00:05:26.670
So you got somewhat put some something like Java abortion,

154
00:05:26.670 --> 00:05:27.700
someone 0.6.

155
00:05:27.700 --> 00:05:28.450
Something like that,

156
00:05:28.450 --> 00:05:29.370
Right?

157
00:05:29.370 --> 00:05:30.850
1st 1 I will Louise,

158
00:05:30.850 --> 00:05:33.840
your job awash in variable.

159
00:05:33.840 --> 00:05:34.160
Don't.

160
00:05:34.160 --> 00:05:34.750
Fine.

161
00:05:34.750 --> 00:05:35.560
First of all,

162
00:05:35.560 --> 00:05:37.810
I will check whether job is there are not any given string.

163
00:05:37.810 --> 00:05:38.550
If it is there,

164
00:05:38.550 --> 00:05:41.020
I will get some non zero value.

165
00:05:41.020 --> 00:05:42.240
I mean ah,

166
00:05:42.240 --> 00:05:43.450
pause to index value.

167
00:05:43.450 --> 00:05:45.430
Then I can say that Yes,

168
00:05:45.430 --> 00:05:46.120
successfully.

169
00:05:46.120 --> 00:05:49.970
IPhone The job on some java washing is there in a variable called iava washing.

170
00:05:49.970 --> 00:05:55.000
Let's say I got in output.

171
00:05:55.000 --> 00:06:02.180
Like while finding my job Abortion error while finding no,

172
00:06:02.180 --> 00:06:06.350
If I try to look Java in the Java worsens variable you don't have.

173
00:06:06.350 --> 00:06:11.280
That means you are unable to find your job washing with help off your logic somewhere

174
00:06:11.280 --> 00:06:12.050
something wrong,

175
00:06:12.050 --> 00:06:14.090
Right.

176
00:06:14.090 --> 00:06:16.130
So to take some decision,

177
00:06:16.130 --> 00:06:18.050
this value will be helpful.

178
00:06:18.050 --> 00:06:19.090
Okay,

179
00:06:19.090 --> 00:06:20.300
so just remember,

180
00:06:20.300 --> 00:06:24.250
guys hardly use fine and now it is going to work while writing our scripts.

181
00:06:24.250 --> 00:06:28.750
We will use this so that it will be clear or to use find operation.

182
00:06:28.750 --> 00:06:29.650
Okay,

183
00:06:29.650 --> 00:06:31.440
so they say is very,

184
00:06:31.440 --> 00:06:33.150
very important in your real time.

185
00:06:33.150 --> 00:06:35.830
Okay.

186
00:06:35.830 --> 00:06:36.180
Yes.

187
00:06:36.180 --> 00:06:37.670
Thank you for watching this video

