1
00:00:00,000 --> 00:00:05,150
friends here we're discussing about of functions with the variable and the arguments.

2
00:00:05,150 --> 00:00:09,050
So what is mean by variable length arguments?

3
00:00:09,050 --> 00:00:09,860
See,

4
00:00:09,860 --> 00:00:12,300
we know that whenever we define your function,

5
00:00:12,300 --> 00:00:12,850
right,

6
00:00:12,850 --> 00:00:17,010
so it may take either one argument or two arguments or three.

7
00:00:17,010 --> 00:00:19,360
And based on that were passing.

8
00:00:19,360 --> 00:00:23,050
Let let me open a simple script for that.

9
00:00:23,050 --> 00:00:27,650
Suppose if I defined a function display.

10
00:00:27,650 --> 00:00:32,570
So I want to define a function just to find out the type off your pastor.

11
00:00:32,570 --> 00:00:33,210
Variable.

12
00:00:33,210 --> 00:00:38,670
Not so right now I'm calling.

13
00:00:38,670 --> 00:00:41,490
Suppose it's working.

14
00:00:41,490 --> 00:00:44,240
So how many arguments your function is taking?

15
00:00:44,240 --> 00:00:45,350
Only one argument,

16
00:00:45,350 --> 00:00:46,250
right?

17
00:00:46,250 --> 00:00:50,840
In case if I pass two arguments,

18
00:00:50,840 --> 00:00:54,880
it won't accept because it is taking only one argument.

19
00:00:54,880 --> 00:00:57,550
But we're passing to right?

20
00:00:57,550 --> 00:01:00,470
So even though if you passed to argument,

21
00:01:00,470 --> 00:01:03,680
suppose if you're function is ready to accept,

22
00:01:03,680 --> 00:01:07,170
then that is called a variable lent argument.

23
00:01:07,170 --> 00:01:10,990
Function means number off arguments.

24
00:01:10,990 --> 00:01:12,840
What are the arguments?

25
00:01:12,840 --> 00:01:13,750
Your passing right,

26
00:01:13,750 --> 00:01:19,650
The number off arguments If they very then that is called variable length arguments for

27
00:01:19,650 --> 00:01:20,650
your functions.

28
00:01:20,650 --> 00:01:23,210
Generally it won't accept right?

29
00:01:23,210 --> 00:01:25,870
See if I pass for come away now.

30
00:01:25,870 --> 00:01:27,650
Two variables were passing.

31
00:01:27,650 --> 00:01:28,250
No,

32
00:01:28,250 --> 00:01:29,910
you're function is not ready to accept that.

33
00:01:29,910 --> 00:01:32,150
Right?

34
00:01:32,150 --> 00:01:35,850
But we have a small Syntex for your function.

35
00:01:35,850 --> 00:01:40,130
Will define such that it has to ready toe.

36
00:01:40,130 --> 00:01:42,050
Take any number of arguments,

37
00:01:42,050 --> 00:01:42,920
right?

38
00:01:42,920 --> 00:01:43,960
Let me define it.

39
00:01:43,960 --> 00:01:44,250
No,

40
00:01:44,250 --> 00:01:51,120
someone's display start data generally.

41
00:01:51,120 --> 00:01:52,490
If you google it,

42
00:01:52,490 --> 00:01:57,050
you can see the syntax is e R G arguments start arguments.

43
00:01:57,050 --> 00:01:59,190
So that is not a standard variable.

44
00:01:59,190 --> 00:02:03,570
You can take any variable because their arguments But what the value were writing here

45
00:02:03,570 --> 00:02:04,560
They're generally arguments,

46
00:02:04,560 --> 00:02:04,770
right?

47
00:02:04,770 --> 00:02:06,100
That's why they're taking DRG.

48
00:02:06,100 --> 00:02:07,410
Not only that,

49
00:02:07,410 --> 00:02:10,570
you can take simply data also right,

50
00:02:10,570 --> 00:02:12,340
Then first,

51
00:02:12,340 --> 00:02:14,120
let me print what you are getting.

52
00:02:14,120 --> 00:02:16,950
If you take variable and arguments,

53
00:02:16,950 --> 00:02:22,400
what is what type of reader you are getting whenever if you pass your data to your display

54
00:02:22,400 --> 00:02:22,970
function.

55
00:02:22,970 --> 00:02:26,650
So to know that I am printing simply What data?

56
00:02:26,650 --> 00:02:27,230
No.

57
00:02:27,230 --> 00:02:28,550
Let me call your function.

58
00:02:28,550 --> 00:02:33,610
I'm calling without any data without passing any arguments,

59
00:02:33,610 --> 00:02:34,620
Joe,

60
00:02:34,620 --> 00:02:35,030
arguments.

61
00:02:35,030 --> 00:02:35,900
I'm passing now.

62
00:02:35,900 --> 00:02:38,990
Your function is ready to accept on after the data.

63
00:02:38,990 --> 00:02:39,240
What?

64
00:02:39,240 --> 00:02:43,670
You're passing couple empty couple Now,

65
00:02:43,670 --> 00:02:45,850
let me call it with one argument.

66
00:02:45,850 --> 00:02:47,550
Yes,

67
00:02:47,550 --> 00:02:50,250
Again is ready to accept one argument as a couple?

68
00:02:50,250 --> 00:02:51,280
No.

69
00:02:51,280 --> 00:02:54,250
Let me quality to it some number off values?

70
00:02:54,250 --> 00:02:55,330
Yes.

71
00:02:55,330 --> 00:02:55,610
Again,

72
00:02:55,610 --> 00:02:56,570
it is ready to accept.

73
00:02:56,570 --> 00:02:57,450
That means see,

74
00:02:57,450 --> 00:02:59,500
number of arguments are very right.

75
00:02:59,500 --> 00:03:03,800
This is nothing bird variable length arguments even though if we change number off

76
00:03:03,800 --> 00:03:10,670
arguments even though if you pass number off arguments each time different number off

77
00:03:10,670 --> 00:03:11,400
arguments,

78
00:03:11,400 --> 00:03:13,450
your function is ready to accept that,

79
00:03:13,450 --> 00:03:14,270
right?

80
00:03:14,270 --> 00:03:18,900
Not to accept that nothing is that simply write star generalised,

81
00:03:18,900 --> 00:03:20,150
arming Jiro are more.

82
00:03:20,150 --> 00:03:23,610
You can pass Jiro arguments for more number off arguments.

83
00:03:23,610 --> 00:03:28,690
Jiro one or two or three or for any number of arguments you can pass to your function

84
00:03:28,690 --> 00:03:34,950
whenever if you define your barometers has start some variable.

85
00:03:34,950 --> 00:03:49,600
Not only data days generally are that's a no let me comment are Let me comment these two

86
00:03:49,600 --> 00:03:50,350
functions.

87
00:03:50,350 --> 00:03:52,550
I mean four to light and 50 line.

88
00:03:52,550 --> 00:03:55,510
See,

89
00:03:55,510 --> 00:03:57,700
we know if it is a couple right,

90
00:03:57,700 --> 00:04:02,620
we can take one by one argument from that one by one value from that using loop for Luke

91
00:04:02,620 --> 00:04:04,450
for each in your art.

92
00:04:04,450 --> 00:04:06,500
Let's be clear,

93
00:04:06,500 --> 00:04:08,010
argues not a fixer variable.

94
00:04:08,010 --> 00:04:08,890
You can take anything.

95
00:04:08,890 --> 00:04:11,210
The only thing whatever that data you are passing,

96
00:04:11,210 --> 00:04:12,110
whatever the arguments,

97
00:04:12,110 --> 00:04:16,650
you are passing all arguments stored into this variable as a couple.

98
00:04:16,650 --> 00:04:17,900
If it is a couple,

99
00:04:17,900 --> 00:04:19,650
I can take one day one value from there.

100
00:04:19,650 --> 00:04:20,690
Right?

101
00:04:20,690 --> 00:04:21,750
That's what I'm doing here.

102
00:04:21,750 --> 00:04:23,630
Now let me turn.

103
00:04:23,630 --> 00:04:27,580
You can see the results right now.

104
00:04:27,580 --> 00:04:28,900
Just 40 were understanding.

105
00:04:28,900 --> 00:04:34,260
Just I'm calling once again with the different values display function.

106
00:04:34,260 --> 00:04:36,410
Let me take simply high on,

107
00:04:36,410 --> 00:04:41,050
then support some $4 6 whatever it may be data see that it's working.

108
00:04:41,050 --> 00:04:45,300
So whether you're passing the arguments are two arguments Now your function is ready to

109
00:04:45,300 --> 00:04:45,950
accept,

110
00:04:45,950 --> 00:04:47,040
right?

111
00:04:47,040 --> 00:04:51,550
So there's nothing but simply variable length arguments in your functions.

112
00:04:51,550 --> 00:04:52,650
Okay.

113
00:04:52,650 --> 00:04:53,810
Okay,

114
00:04:53,810 --> 00:04:54,110
guys,

115
00:04:54,110 --> 00:04:55,590
thank you for watching this video.

