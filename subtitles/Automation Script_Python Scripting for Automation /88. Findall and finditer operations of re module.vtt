WEBVTT
ï»¿1
00:00:00.000 --> 00:00:04.350
friends here Our concept please find all and find little operations off remodel.

2
00:00:04.350 --> 00:00:09.950
So let me explain this are with the simple stripped Let me open my editor.

3
00:00:09.950 --> 00:00:12.950
So here,

4
00:00:12.950 --> 00:00:21.260
let me import Audie More deal first how given some script name Now let me take my string us

5
00:00:21.260 --> 00:00:36.040
Suppose on this is a pipe on on We are having bite onto and fight on three washings right

6
00:00:36.040 --> 00:00:41.810
onto and fight on three questions No,

7
00:00:41.810 --> 00:00:43.350
let me take my patroness.

8
00:00:43.350 --> 00:00:44.840
So actually,

9
00:00:44.840 --> 00:00:48.650
when you're going to take pattern based on your requirement suppose my requirement designed

10
00:00:48.650 --> 00:00:54.220
to find out either fight on our python two or by country See,

11
00:00:54.220 --> 00:01:04.070
how can I by dawn So if you are a strictly looking for python word or fight on to fight on

12
00:01:04.070 --> 00:01:08.250
three words then you had to take slash b Then fight on.

13
00:01:08.250 --> 00:01:14.750
So our requirement despite on our to our three that's why in square backers just right to

14
00:01:14.750 --> 00:01:20.050
on three then you are question mark question What means once Orteman,

15
00:01:20.050 --> 00:01:23.190
then slash B That's it.

16
00:01:23.190 --> 00:01:24.690
No,

17
00:01:24.690 --> 00:01:30.050
it is going to represent three words Spite on fight on corn by country among these three,

18
00:01:30.050 --> 00:01:31.810
right?

19
00:01:31.810 --> 00:01:35.180
If you go with suppose already not match.

20
00:01:35.180 --> 00:01:35.960
You know what is?

21
00:01:35.960 --> 00:01:36.660
The use is off,

22
00:01:36.660 --> 00:01:36.890
Ari.

23
00:01:36.890 --> 00:01:37.550
Don't match.

24
00:01:37.550 --> 00:01:39.870
So are you.

25
00:01:39.870 --> 00:01:41.350
Don't match my pattern.

26
00:01:41.350 --> 00:01:48.060
Then your string See the result what you're getting,

27
00:01:48.060 --> 00:01:48.940
you're getting none.

28
00:01:48.940 --> 00:01:54.920
The reason is match will always look our very first Any given string for your given pattern

29
00:01:54.920 --> 00:01:54.920
.

30
00:01:54.920 --> 00:01:58.810
We don't have any fight on our fight on two on or fight on three at very first.

31
00:01:58.810 --> 00:02:01.480
That's why Matt is not able to find that now.

32
00:02:01.480 --> 00:02:02.750
If I go into such,

33
00:02:02.750 --> 00:02:07.900
then you're going to get information about fight on because the very first anyway,

34
00:02:07.900 --> 00:02:13.000
you know that such is going to look for you were given pattern in a given string from left

35
00:02:13.000 --> 00:02:13.440
to right.

36
00:02:13.440 --> 00:02:14.890
Why going from left to right,

37
00:02:14.890 --> 00:02:16.350
we have somewhere python.

38
00:02:16.350 --> 00:02:20.570
So among these three patrons fight on fight on board by country.

39
00:02:20.570 --> 00:02:22.810
Here you got You're such a good fight on.

40
00:02:22.810 --> 00:02:23.750
That's what is giving that.

41
00:02:23.750 --> 00:02:26.020
But my requirement days,

42
00:02:26.020 --> 00:02:30.220
I need to find all the imagines for your pattern.

43
00:02:30.220 --> 00:02:32.250
Which are there any given string,

44
00:02:32.250 --> 00:02:34.690
right.

45
00:02:34.690 --> 00:02:38.850
So any given string by Tony's their bite onto is there and fight on three is also there.

46
00:02:38.850 --> 00:02:49.050
I want to find all these three then our operations are your final operations.

47
00:02:49.050 --> 00:02:54.360
Let me bring with corridor Find all you're pattern.

48
00:02:54.360 --> 00:02:56.500
Your pardon made a present one.

49
00:02:56.500 --> 00:02:57.150
Ah,

50
00:02:57.150 --> 00:02:58.420
string or multiple things.

51
00:02:58.420 --> 00:02:58.750
Right?

52
00:02:58.750 --> 00:03:02.470
So that I'm looking in a given string Now See,

53
00:03:02.470 --> 00:03:06.350
that is a You're getting all the matches for your given pattern,

54
00:03:06.350 --> 00:03:09.200
I suppose if I take the way X No,

55
00:03:09.200 --> 00:03:14.350
you don't know any match ings for your pattern given string You're getting an empty list.

56
00:03:14.350 --> 00:03:15.720
Be clear.

57
00:03:15.720 --> 00:03:17.660
Final will always do a list.

58
00:03:17.660 --> 00:03:18.720
If there is a match,

59
00:03:18.720 --> 00:03:20.010
it will give the list off values.

60
00:03:20.010 --> 00:03:22.750
If there is no match it will you empty list?

61
00:03:22.750 --> 00:03:24.160
No.

62
00:03:24.160 --> 00:03:26.230
By using final operation directly,

63
00:03:26.230 --> 00:03:31.970
you can tell that how many matching Sar Therefore you're given pattern given string simply

64
00:03:31.970 --> 00:03:38.720
by a playing a lengthy function off on your final See the result If there is no match

65
00:03:38.720 --> 00:03:45.780
Indirectly you Jiro because we know that for least we cannot play length function on from

66
00:03:45.780 --> 00:03:48.350
that we can find out how many matching czar there that's it.

67
00:03:48.350 --> 00:03:54.620
So that is the use off Your final are basically finally is useful just to understand RDX

68
00:03:54.620 --> 00:03:55.380
operations.

69
00:03:55.380 --> 00:04:00.980
But if you go with your find all we have a small drawback,

70
00:04:00.980 --> 00:04:01.710
of course,

71
00:04:01.710 --> 00:04:04.890
that it looking able to find Ah,

72
00:04:04.890 --> 00:04:10.950
how many matching sar therefore given for your given pattern in a given string.

73
00:04:10.950 --> 00:04:13.850
But yeah,

74
00:04:13.850 --> 00:04:17.840
let me take this Has beware beach win.

75
00:04:17.840 --> 00:04:18.140
Yeah,

76
00:04:18.140 --> 00:04:18.800
I don't see that,

77
00:04:18.800 --> 00:04:24.740
but that that disadvantages it is not giving any information about you are matching.

78
00:04:24.740 --> 00:04:25.370
I mean,

79
00:04:25.370 --> 00:04:30.350
what is the starting index off this matching What is the inning Lex off this matching so?

80
00:04:30.350 --> 00:04:35.480
But what if you want to look all the matching Xeni given string for your given pattern And

81
00:04:35.480 --> 00:04:40.490
if you want to see at the same time the starting index or ending index off you're matching

82
00:04:40.490 --> 00:04:40.490
,

83
00:04:40.490 --> 00:04:42.950
then you have to go with the finding your operation.

84
00:04:42.950 --> 00:04:44.130
Let me print.

85
00:04:44.130 --> 00:04:47.390
Forced the information for you are Find the dirt,

86
00:04:47.390 --> 00:04:49.260
my partner.

87
00:04:49.260 --> 00:04:53.620
Earn my string first up without Woodward,

88
00:04:53.620 --> 00:04:57.650
you are getting Let me come into your remaining reinstatements.

89
00:04:57.650 --> 00:05:05.380
See the airport you're getting Call a bull iterated object something Some information is

90
00:05:05.380 --> 00:05:06.350
there just after that.

91
00:05:06.350 --> 00:05:15.800
Now I'm writing be Wait some Let's it be way the x ph win Now we don't have any matching

92
00:05:15.800 --> 00:05:20.710
for your given pattern because it is not bite on the way Extra situation for this related

93
00:05:20.710 --> 00:05:21.090
words.

94
00:05:21.090 --> 00:05:22.850
We don't have anything in our given strings.

95
00:05:22.850 --> 00:05:25.600
No you for you Look in this way.

96
00:05:25.600 --> 00:05:25.770
See?

97
00:05:25.770 --> 00:05:27.110
There is a body or getting still.

98
00:05:27.110 --> 00:05:28.450
You're getting some objects.

99
00:05:28.450 --> 00:05:30.500
So first of all,

100
00:05:30.500 --> 00:05:31.120
find little.

101
00:05:31.120 --> 00:05:32.830
Will you always some object?

102
00:05:32.830 --> 00:05:34.380
Whether there is a match or not?

103
00:05:34.380 --> 00:05:35.700
Whenever If you don't find little,

104
00:05:35.700 --> 00:05:38.750
it will you first Some object you need to remember at this point.

105
00:05:38.750 --> 00:05:42.720
Then see that I am using for Lou for this.

106
00:05:42.720 --> 00:05:48.510
For each object in this part.

107
00:05:48.510 --> 00:05:48.950
Run.

108
00:05:48.950 --> 00:05:52.510
I mean in this operation let me print each object.

109
00:05:52.510 --> 00:05:53.650
Now see the result.

110
00:05:53.650 --> 00:05:57.830
You're not getting anything because first of all,

111
00:05:57.830 --> 00:06:02.810
whenever if you didn't find it operation it will do some object Whether there is a match or

112
00:06:02.810 --> 00:06:03.590
not secondary.

113
00:06:03.590 --> 00:06:05.180
If there is a match,

114
00:06:05.180 --> 00:06:07.610
this look will repeat If there is no match,

115
00:06:07.610 --> 00:06:08.550
you're not getting anything.

116
00:06:08.550 --> 00:06:10.150
Be clear.

117
00:06:10.150 --> 00:06:15.850
Seeing you are match and starts operation you're using if condition If your object is

118
00:06:15.850 --> 00:06:16.340
present,

119
00:06:16.340 --> 00:06:17.360
then what is the match?

120
00:06:17.360 --> 00:06:19.250
What is the starting in export is the ailing index.

121
00:06:19.250 --> 00:06:24.240
But if you go with finding up in order to use if condition because first of all,

122
00:06:24.240 --> 00:06:27.250
financial for multiple imagines nightly used for Luke.

123
00:06:27.250 --> 00:06:28.740
If there is a match,

124
00:06:28.740 --> 00:06:31.510
then look will repeat if there is at least one match.

125
00:06:31.510 --> 00:06:32.470
Well Ooh,

126
00:06:32.470 --> 00:06:33.330
you're noble.

127
00:06:33.330 --> 00:06:34.450
Repeat at least one time.

128
00:06:34.450 --> 00:06:36.460
If there are no matches,

129
00:06:36.460 --> 00:06:40.350
then you will keep your Lupo won't repeat for at least one time.

130
00:06:40.350 --> 00:06:46.190
Right now I see that I am making know my pattern as P way th way.

131
00:06:46.190 --> 00:06:46.960
No.

132
00:06:46.960 --> 00:06:47.600
See the output.

133
00:06:47.600 --> 00:06:49.050
You're getting three objects.

134
00:06:49.050 --> 00:06:51.640
Suppose I'm get taking.

135
00:06:51.640 --> 00:06:52.120
I'm taking.

136
00:06:52.120 --> 00:06:54.750
My partner has only fight on to be clear,

137
00:06:54.750 --> 00:06:57.010
bite onto our fight on to you know,

138
00:06:57.010 --> 00:06:57.650
see the result.

139
00:06:57.650 --> 00:07:00.650
Your loop is reporting only one time and is giving the object.

140
00:07:00.650 --> 00:07:02.290
Right.

141
00:07:02.290 --> 00:07:05.800
So be clear now how?

142
00:07:05.800 --> 00:07:08.850
Given my partner despite on in square backers to three.

143
00:07:08.850 --> 00:07:09.630
Then question Mark.

144
00:07:09.630 --> 00:07:09.850
No.

145
00:07:09.850 --> 00:07:10.450
See the results.

146
00:07:10.450 --> 00:07:12.750
Three objects it is giving.

147
00:07:12.750 --> 00:07:18.870
So find later will consist off the number off objects based on how many matches are there

148
00:07:18.870 --> 00:07:19.810
for your pattern.

149
00:07:19.810 --> 00:07:24.200
Any given strength on when ever refuse for Lou for that traitor?

150
00:07:24.200 --> 00:07:29.040
It will do the different objects for each match right now.

151
00:07:29.040 --> 00:07:30.620
See the no Aiken directly.

152
00:07:30.620 --> 00:07:31.060
Right?

153
00:07:31.060 --> 00:07:32.100
What is the match?

154
00:07:32.100 --> 00:07:33.950
Let me rate some message.

155
00:07:33.950 --> 00:07:37.650
The match these.

156
00:07:37.650 --> 00:07:41.650
So here I will print the match.

157
00:07:41.650 --> 00:07:44.010
What is your watch?

158
00:07:44.010 --> 00:07:45.450
Are not group,

159
00:07:45.450 --> 00:07:46.660
right?

160
00:07:46.660 --> 00:07:56.560
See that study so that then I want to find What is the starting index for each and every

161
00:07:56.560 --> 00:07:57.150
object.

162
00:07:57.150 --> 00:08:00.050
So starting index,

163
00:08:00.050 --> 00:08:06.050
you're each object dot Start if you remember from the war,

164
00:08:06.050 --> 00:08:10.050
imagine such operation then What is the Indian index?

165
00:08:10.050 --> 00:08:13.190
Be clear and many indexes.

166
00:08:13.190 --> 00:08:17.250
Nothing but Iwas in object like me.

167
00:08:17.250 --> 00:08:19.550
Right you are Object,

168
00:08:19.550 --> 00:08:22.150
Dorothy end minus one.

169
00:08:22.150 --> 00:08:23.780
Be clear.

170
00:08:23.780 --> 00:08:24.950
Don't forget about that.

171
00:08:24.950 --> 00:08:29.170
That's a right.

172
00:08:29.170 --> 00:08:29.660
So,

173
00:08:29.660 --> 00:08:29.860
guys,

174
00:08:29.860 --> 00:08:31.330
this is the uses off finally time.

175
00:08:31.330 --> 00:08:34.260
So in most of the cases,

176
00:08:34.260 --> 00:08:38.250
in your real time you're going to walk away to suction match operations.

177
00:08:38.250 --> 00:08:42.120
But he had to know the ah functional.

178
00:08:42.120 --> 00:08:44.960
They are working operation off your find all and financial as well.

179
00:08:44.960 --> 00:08:47.360
Sometimes you may use business requirement you'll use,

180
00:08:47.360 --> 00:08:48.610
but based on my experience,

181
00:08:48.610 --> 00:08:51.750
I'm telling that most of the cases will use such a match.

182
00:08:51.750 --> 00:08:54.150
Okay.

183
00:08:54.150 --> 00:08:55.310
Okay,

184
00:08:55.310 --> 00:08:55.570
guys,

185
00:08:55.570 --> 00:08:57.150
thank you for watching this video.

