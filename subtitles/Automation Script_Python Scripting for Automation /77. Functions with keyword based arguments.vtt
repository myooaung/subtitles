WEBVTT
ï»¿1
00:00:00.000 --> 00:00:01.590
friends here.

2
00:00:01.590 --> 00:00:05.620
We're going to discuss about functions with the keyword based arguments.

3
00:00:05.620 --> 00:00:07.600
What is it for?

4
00:00:07.600 --> 00:00:08.810
To get clarity on this.

5
00:00:08.810 --> 00:00:09.100
First,

6
00:00:09.100 --> 00:00:11.640
let me define one simple function.

7
00:00:11.640 --> 00:00:15.440
So I'm taking a script name called Functions.

8
00:00:15.440 --> 00:00:17.450
With the cured based arguments.

9
00:00:17.450 --> 00:00:18.760
Right now,

10
00:00:18.760 --> 00:00:20.450
let me define simply a function,

11
00:00:20.450 --> 00:00:21.490
any function.

12
00:00:21.490 --> 00:00:23.250
Let me take display.

13
00:00:23.250 --> 00:00:27.200
You come a big then here I'm displaying.

14
00:00:27.200 --> 00:00:28.350
Only you have a look.

15
00:00:28.350 --> 00:00:29.960
After that,

16
00:00:29.960 --> 00:00:30.930
you closed toe.

17
00:00:30.930 --> 00:00:32.670
Just simply I want this play value.

18
00:00:32.670 --> 00:00:33.000
That's it.

19
00:00:33.000 --> 00:00:34.030
I'm not displaying.

20
00:00:34.030 --> 00:00:38.750
Be why you will come to know Because I need to see the order try.

21
00:00:38.750 --> 00:00:40.350
I'm lending only a variable value.

22
00:00:40.350 --> 00:00:42.800
Now I'm calling this display.

23
00:00:42.800 --> 00:00:44.290
Bypassing three comma four.

24
00:00:44.290 --> 00:00:44.910
Yes,

25
00:00:44.910 --> 00:00:45.180
it will.

26
00:00:45.180 --> 00:00:47.050
Work ever leaves three you're getting.

27
00:00:47.050 --> 00:00:53.950
But if I call the same function with four comma three now you're getting your value us for

28
00:00:53.950 --> 00:00:54.980
No.

29
00:00:54.980 --> 00:01:01.000
My intention is even though if we change the this positions right,

30
00:01:01.000 --> 00:01:02.420
I want to get your value as three.

31
00:01:02.420 --> 00:01:05.770
Only I should not get a values for No.

32
00:01:05.770 --> 00:01:06.530
In that case,

33
00:01:06.530 --> 00:01:07.820
we have a simple option.

34
00:01:07.820 --> 00:01:08.590
That is nothing.

35
00:01:08.590 --> 00:01:09.790
Is there first?

36
00:01:09.790 --> 00:01:10.080
Abdul,

37
00:01:10.080 --> 00:01:12.860
your defined function display a comma Be Is there no year?

38
00:01:12.860 --> 00:01:13.090
Yeah,

39
00:01:13.090 --> 00:01:18.600
and we are called positional arguments right now by using these variables.

40
00:01:18.600 --> 00:01:20.510
Now what I'm doing is same variables,

41
00:01:20.510 --> 00:01:21.230
only hard to take.

42
00:01:21.230 --> 00:01:21.910
Yeah,

43
00:01:21.910 --> 00:01:22.540
cost three.

44
00:01:22.540 --> 00:01:25.210
I'm taking on because before I'm taking now,

45
00:01:25.210 --> 00:01:25.850
see the result.

46
00:01:25.850 --> 00:01:27.750
Not only like that,

47
00:01:27.750 --> 00:01:32.030
you can also defend first to be close to four and then you cost three.

48
00:01:32.030 --> 00:01:35.850
I even life we change order.

49
00:01:35.850 --> 00:01:37.950
Why you calling your function?

50
00:01:37.950 --> 00:01:39.780
If we change the order of your arguments,

51
00:01:39.780 --> 00:01:41.360
usually you're getting us three only.

52
00:01:41.360 --> 00:01:41.740
Right?

53
00:01:41.740 --> 00:01:42.740
So nothing is there.

54
00:01:42.740 --> 00:01:43.910
Apparently were mentioning.

55
00:01:43.910 --> 00:01:44.270
Actually,

56
00:01:44.270 --> 00:01:45.320
you know what number?

57
00:01:45.320 --> 00:01:46.330
If I call in this way,

58
00:01:46.330 --> 00:01:51.640
what will happen three will be assigned to year for will be assigned to be but ourselves in

59
00:01:51.640 --> 00:01:52.630
giraffe fight on.

60
00:01:52.630 --> 00:01:58.400
We are only assigning a Khowst three and because to four this year and be must be from here

61
00:01:58.400 --> 00:01:58.400
.

62
00:01:58.400 --> 00:02:02.300
Whatever you are taking arguments in your defined function saying variables you have to

63
00:02:02.300 --> 00:02:04.890
take you not no,

64
00:02:04.890 --> 00:02:07.780
we only mentioning be take before any a Khowst three.

65
00:02:07.780 --> 00:02:09.110
Now we are not mapping.

66
00:02:09.110 --> 00:02:10.600
Your pattern is not mapping directly.

67
00:02:10.600 --> 00:02:15.500
We itself like our signing because 2 400 year Costa three.

68
00:02:15.500 --> 00:02:15.890
That's it.

69
00:02:15.890 --> 00:02:21.350
There is also one of the way to pass your arguments to your called function from your

70
00:02:21.350 --> 00:02:22.250
calling place.

71
00:02:22.250 --> 00:02:23.750
Right.

72
00:02:23.750 --> 00:02:27.280
So this is not that much important while working with your scripts.

73
00:02:27.280 --> 00:02:28.570
But if it required,

74
00:02:28.570 --> 00:02:29.250
we will use it.

75
00:02:29.250 --> 00:02:36.470
But it is important for your injury purpose how we can pass arguments to your call function

76
00:02:36.470 --> 00:02:38.350
based on keywords.

77
00:02:38.350 --> 00:02:41.250
This is the simple way you can explain.

78
00:02:41.250 --> 00:02:42.720
Okay.

79
00:02:42.720 --> 00:02:43.220
Okay,

80
00:02:43.220 --> 00:02:43.550
guys,

81
00:02:43.550 --> 00:02:44.910
thank you for watching this video.

