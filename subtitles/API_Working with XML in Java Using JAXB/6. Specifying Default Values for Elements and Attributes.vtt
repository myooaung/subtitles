WEBVTT
1
00:00:02.050 --> 00:00:03.495
In XML schema,

2
00:00:03.495 --> 00:00:08.794
it's possible to define a default value for elements and attributes.

3
00:00:08.794 --> 00:00:10.285
Like in the previous clip,

4
00:00:10.285 --> 00:00:15.301
let's take a look at how to specify this on the JAXB annotations and

5
00:00:15.301 --> 00:00:18.858
what it means for marshalling and unmarshalling.

6
00:00:18.858 --> 00:00:25.851
The example for this clip is ps-jaxb-16-defaultvalue.

7
00:00:25.851 --> 00:00:29.380
Please open it in your IDE.

8
00:00:29.380 --> 00:00:33.189
Let's look at class Customer for this example.

9
00:00:33.189 --> 00:00:36.506
Suppose that we would want to set a default value for the

10
00:00:36.506 --> 00:00:39.070
Loyalty field so that if it's not set,

11
00:00:39.070 --> 00:00:41.518
the lowest loyalty setting will be selected,

12
00:00:41.518 --> 00:00:42.980
which is BRONZE.

13
00:00:42.980 --> 00:00:47.154
We can specify that using the default value

14
00:00:47.154 --> 00:00:50.967
attribute of the XmlElement annotation.

15
00:00:50.967 --> 00:00:52.398
In XML schema,

16
00:00:52.398 --> 00:00:56.601
it's possible to define default values for attributes in

17
00:00:56.601 --> 00:00:59.305
exactly the same way as for elements,

18
00:00:59.305 --> 00:01:03.910
by adding a default attribute to the access attribute declaration.

19
00:01:03.910 --> 00:01:11.228
But for some reason, this is missing from the JAXB XmlAttribute annotation.

20
00:01:11.228 --> 00:01:17.813
It does not have a default value attribute just like the XmlElement annotation.

21
00:01:17.813 --> 00:01:21.728
This seems to be a missing feature in JAXB.

22
00:01:21.728 --> 00:01:25.301
There are ways to have a default value for attributes,

23
00:01:25.301 --> 00:01:30.222
but let's first look at what the default value attribute on the

24
00:01:30.222 --> 00:01:33.693
XmlElement annotation means for marshalling and unmarshalling.

25
00:01:33.693 --> 00:01:39.047
Just like with the required attribute that we saw in the previous clip,

26
00:01:39.047 --> 00:01:44.741
it works in a slightly different way than what you might expect intuitively.

27
00:01:44.741 --> 00:01:47.500
First, let's take a look at marshalling.

28
00:01:47.500 --> 00:01:53.812
Let's go to the createPurchaseOrder method in class MarshalExample and comment

29
00:01:53.812 --> 00:01:58.682
out the line where we set the loyalty value of the customer.

30
00:01:58.682 --> 00:02:03.493
What do you think we would see in the XML when we run this example?

31
00:02:03.493 --> 00:02:05.665
It's not strange if you would think that.

32
00:02:05.665 --> 00:02:10.372
Since we didn't set the loyalty, JAXB would take the default value,

33
00:02:10.372 --> 00:02:14.200
and we would see BRONZE in the XML.

34
00:02:14.200 --> 00:02:16.097
But that's not what happens.

35
00:02:16.097 --> 00:02:17.614
If you run this,

36
00:02:17.614 --> 00:02:23.787
you'll see that the loyalty element is completely missing from the XML.

37
00:02:23.787 --> 00:02:27.057
For marshalling, the default value attribute is ignored,

38
00:02:27.057 --> 00:02:32.033
just like the required attribute, as we saw in the previous clip.

39
00:02:32.033 --> 00:02:38.303
It's counterintuitive, but the reason for why it works like this is as follows.

40
00:02:38.303 --> 00:02:43.913
First, according to JAXB, when a field is null during marshalling,

41
00:02:43.913 --> 00:02:50.000
it means that the corresponding element will be omitted from the XML entirely.

42
00:02:50.000 --> 00:02:53.742
That's how JAXB interprets null values.

43
00:02:53.742 --> 00:02:59.298
Null means no value, which also means no XML element.

44
00:02:59.298 --> 00:03:02.783
Second, according to the XML Schema standard,

45
00:03:02.783 --> 00:03:06.168
when an element is missing from the XML,

46
00:03:06.168 --> 00:03:12.557
then the default value that's specified in the XSD does not apply.

47
00:03:12.557 --> 00:03:14.926
The default value only applies,

48
00:03:14.926 --> 00:03:19.117
according to the XML schema standard if the element

49
00:03:19.117 --> 00:03:22.264
is present but empty in the XML.

50
00:03:22.264 --> 00:03:27.610
So the behavior that you see is a combination of these two things.

51
00:03:27.610 --> 00:03:31.879
Null means no value, which means no XML element,

52
00:03:31.879 --> 00:03:36.651
and no XML element means that the default value does not apply,

53
00:03:36.651 --> 00:03:41.745
so there will be no element with the default value in the XML.

54
00:03:41.745 --> 00:03:42.971
With this in mind,

55
00:03:42.971 --> 00:03:46.358
you should also be able to understand what happens with

56
00:03:46.358 --> 00:03:49.494
the default value during unmarshalling.

57
00:03:49.494 --> 00:03:56.718
Class UnmarshalExample unmarshals the XML in the file purchaseOrder.

58
00:03:56.718 --> 00:03:57.521
xml.

59
00:03:57.521 --> 00:04:00.670
Let's first see what happens when, in that XML,

60
00:04:00.670 --> 00:04:05.307
we leave out the loyalty element from the customer element.

61
00:04:05.307 --> 00:04:07.209
When you run the example,

62
00:04:07.209 --> 00:04:12.412
you'll see that the loyalty value is null and not the default value BRONZE.

63
00:04:12.412 --> 00:04:19.079
If you think about what I said about the rule from the XML Schema specification,

64
00:04:19.079 --> 00:04:20.635
this makes sense.

65
00:04:20.635 --> 00:04:25.757
According to XML Schema, when the element is missing in XML,

66
00:04:25.757 --> 00:04:29.043
it means that the default value does not apply,

67
00:04:29.043 --> 00:04:31.930
and that's exactly what we see here.

68
00:04:31.930 --> 00:04:36.815
Now let's put an empty loyalty element in the XML and

69
00:04:36.815 --> 00:04:38.858
run the unmarshalling example again.

70
00:04:38.858 --> 00:04:43.984
This time, you see that the default value has been applied,

71
00:04:43.984 --> 00:04:46.124
so BRONZE gets printed.

72
00:04:46.124 --> 00:04:48.082
To summarize the behavior,

73
00:04:48.082 --> 00:04:54.168
the default value on the XmlElement annotation has no effect for marshalling,

74
00:04:54.168 --> 00:05:00.594
and for unmarshalling it is only applied if the element is present in XML,

75
00:05:00.594 --> 00:05:02.284
but has no value.

76
00:05:02.284 --> 00:05:06.988
It is not applied if the element is missing in XML.

77
00:05:06.988 --> 00:05:07.300
Finally,

78
00:05:07.300 --> 00:05:12.128
I want to give you a tip for default values that works in a less

79
00:05:12.128 --> 00:05:15.368
surprising way and that works for attributes,

80
00:05:15.368 --> 00:05:17.683
as well as for elements.

81
00:05:17.683 --> 00:05:20.094
Instead of, or in addition to,

82
00:05:20.094 --> 00:05:23.012
specifying a value using the default value

83
00:05:23.012 --> 00:05:25.548
attribute of the XmlElement annotation,

84
00:05:25.548 --> 00:05:30.548
you can just initialize the field with the desired default value.

85
00:05:30.548 --> 00:05:31.397
For example,

86
00:05:31.397 --> 00:05:36.239
I can set loyalty to BRONZE so that the field will have that

87
00:05:36.239 --> 00:05:41.893
value instead of null when I don't set it explicitly in the

88
00:05:41.893 --> 00:05:42.912
createPurchaseOrder method.

89
00:05:42.912 --> 00:05:45.657
This will also work for unmarshalling.

90
00:05:45.657 --> 00:05:49.900
When JAXB creates a new customer object during unmarshalling,

91
00:05:49.900 --> 00:06:00.000
the field is of course initialized to BRONZE even if there is no loyalty element in the XML at all.

