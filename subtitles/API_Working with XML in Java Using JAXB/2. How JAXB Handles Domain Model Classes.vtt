WEBVTT
1
00:00:01.795 --> 00:00:05.613
Before we look at the annotations and what you can do with them,

2
00:00:05.613 --> 00:00:09.415
it's important to understand how JAXB looks at the domain

3
00:00:09.415 --> 00:00:13.058
model classes and what the basic principles are for

4
00:00:13.058 --> 00:00:16.946
mapping classes and fields to XML.

5
00:00:16.946 --> 00:00:18.982
When you are working with JAXB,

6
00:00:18.982 --> 00:00:23.340
you are working with two representations of your domain model.

7
00:00:23.340 --> 00:00:29.426
You have a Java representation, and you have an XML schema representation.

8
00:00:29.426 --> 00:00:34.011
The purpose of JAXB is to translate between these two.

9
00:00:34.011 --> 00:00:34.341
First,

10
00:00:34.341 --> 00:00:39.091
let's look at JAXB looks at the Java domain model and then at how

11
00:00:39.091 --> 00:00:42.751
this corresponds to the XML schema domain model.

12
00:00:42.751 --> 00:00:47.774
The domain model in Java consists of a number of classes.

13
00:00:47.774 --> 00:00:50.398
Each class contains a set of fields.

14
00:00:50.398 --> 00:00:54.764
Each field has a name and a type which determines what

15
00:00:54.764 --> 00:00:57.954
kind of data the field can contain.

16
00:00:57.954 --> 00:01:01.528
The type can either be a simple value type or a type

17
00:01:01.528 --> 00:01:03.343
with a more complex structure,

18
00:01:03.343 --> 00:01:08.406
such as a class which contains its own set of fields.

19
00:01:08.406 --> 00:01:13.166
Examples of value types are the Java primitive types or,

20
00:01:13.166 --> 00:01:14.941
for example, class java.

21
00:01:14.941 --> 00:01:15.352
lang.

22
00:01:15.352 --> 00:01:16.998
String or class Java.

23
00:01:16.998 --> 00:01:17.409
util.

24
00:01:17.409 --> 00:01:22.562
Date, which are really just wrappers for a single value.

25
00:01:22.562 --> 00:01:27.383
Another way to look at Java domain model classes is

26
00:01:27.383 --> 00:01:29.311
from the JavaBeans perspective.

27
00:01:29.311 --> 00:01:31.728
If you are not brand new to Java,

28
00:01:31.728 --> 00:01:35.636
the idea of JavaBeans will be familiar to you because it's

29
00:01:35.636 --> 00:01:39.023
used for many purposes by various APIs, libraries,

30
00:01:39.023 --> 00:01:39.930
and frameworks.

31
00:01:39.930 --> 00:01:45.857
A JavaBean is a class that has public getter and setter methods

32
00:01:45.857 --> 00:01:49.878
that conform to the JavaBeans naming conventions.

33
00:01:49.878 --> 00:01:55.335
The getter and setter methods define the properties of the JavaBean.

34
00:01:55.335 --> 00:02:00.332
For example, if a class has a getStreet and setStreet method,

35
00:02:00.332 --> 00:02:05.533
then the class is set to have a property named street.

36
00:02:05.533 --> 00:02:10.521
JAXB can look at the domain model classes in different ways.

37
00:02:10.521 --> 00:02:13.057
It can look directly at the fields of your class,

38
00:02:13.057 --> 00:02:16.139
or it can look at your class from the JavaBeans

39
00:02:16.139 --> 00:02:18.731
perspective where it looks at the properties,

40
00:02:18.731 --> 00:02:23.302
which means that it will look for getter and setter methods.

41
00:02:23.302 --> 00:02:24.634
Later in this module,

42
00:02:24.634 --> 00:02:29.840
you will learn how you can tell JAXB to work directly with the fields

43
00:02:29.840 --> 00:02:34.059
or to treat the domain model classes as JavaBeans.

44
00:02:34.059 --> 00:02:34.825
For now,

45
00:02:34.825 --> 00:02:37.888
it's important that you understand that the word

46
00:02:37.888 --> 00:02:40.306
property refers to a JavaBeans property,

47
00:02:40.306 --> 00:02:44.886
which is accessed through a getter and a setter method.

48
00:02:44.886 --> 00:02:48.396
Some of the annotations that we'll take a look at can be

49
00:02:48.396 --> 00:02:51.912
placed either on a field or on a property.

50
00:02:51.912 --> 00:02:57.454
Putting an annotation on a property means that you put it on the getter

51
00:02:57.454 --> 00:03:00.863
or setter method instead of on the underlying field.

52
00:03:00.863 --> 00:03:06.021
Now let's look at the domain model from the XML schema perspective.

53
00:03:06.021 --> 00:03:07.109
In XML schema,

54
00:03:07.109 --> 00:03:11.462
the domain model consists of element and attribute declarations and the

55
00:03:11.462 --> 00:03:15.812
definitions of a set of simple and complex types.

56
00:03:15.812 --> 00:03:21.197
Remember that in Java, there are two kinds of types: value types,

57
00:03:21.197 --> 00:03:25.010
which represent a single value, and class types,

58
00:03:25.010 --> 00:03:27.870
which have a more complex structure.

59
00:03:27.870 --> 00:03:31.564
These two kinds of types correspond naturally to XML

60
00:03:31.564 --> 00:03:37.969
schema simple and complex types, and that is indeed how JAXB maps them.

61
00:03:37.969 --> 00:03:41.861
This means that for fields and properties that have a value type,

62
00:03:41.861 --> 00:03:45.005
you will get an XML element of a simple type,

63
00:03:45.005 --> 00:03:50.532
which is an XML element with text content that represents the value.

64
00:03:50.532 --> 00:03:53.546
You saw this in the output of the marshalling

65
00:03:53.546 --> 00:03:56.788
example of the previous module where, for example,

66
00:03:56.788 --> 00:04:01.038
the string fields of class Address appeared in the

67
00:04:01.038 --> 00:04:03.801
XML as elements with text content.

68
00:04:03.801 --> 00:04:07.547
For fields and properties that have a class type,

69
00:04:07.547 --> 00:04:11.735
you get an XML element with child elements for its fields.

70
00:04:11.735 --> 00:04:17.025
Examples of this are the purchaseOrder element and the customer element.

71
00:04:17.025 --> 00:04:23.734
To summarize, JAXB can look at the domain model classes in two ways.

72
00:04:23.734 --> 00:04:26.792
It either looks directly at the fields in each class,

73
00:04:26.792 --> 00:04:29.465
or it looks at the JavaBeans properties,

74
00:04:29.465 --> 00:04:34.299
which means that it works with getter and setter methods.

75
00:04:34.299 --> 00:04:36.948
Fields and properties have a type.

76
00:04:36.948 --> 00:04:42.154
There are two kinds of types: value types and class types.

77
00:04:42.154 --> 00:04:45.734
Value types naturally map to XML schema.

78
00:04:45.734 --> 00:04:58.000
Simple types and class types map to complex types. With this in mind, let's now take a look at the various JAXB annotations.

