1
00:00:02,110 --> 00:00:07,351
Here we are again at the end of another module of this JAXB course.

2
00:00:07,351 --> 00:00:12,967
In this module, you've learned about a bunch of useful, more advanced topics.

3
00:00:12,967 --> 00:00:14,893
First, we've looked at validation.

4
00:00:14,893 --> 00:00:20,080
You've seen how you can load a schema using the XML validation API,

5
00:00:20,080 --> 00:00:25,879
and how you can set this schema on the marshaller and unmarshaller to

6
00:00:25,879 --> 00:00:28,564
enable validation during marshalling and unmarshalling.

7
00:00:28,564 --> 00:00:33,459
You've also seen how you can set a ValidationEventHandler to

8
00:00:33,459 --> 00:00:37,446
handle validation warnings and errors.

9
00:00:37,446 --> 00:00:38,139
After that,

10
00:00:38,139 --> 00:00:42,775
you've learned how you can use the validation API to validate JAXB

11
00:00:42,775 --> 00:00:47,462
objects in memory by using a JAXBSource object.

12
00:00:47,462 --> 00:00:47,937
Next,

13
00:00:47,937 --> 00:00:53,167
you've learned how types derived by extension in an XSD map

14
00:00:53,167 --> 00:00:57,308
to a superclass with subclasses in Java,

15
00:00:57,308 --> 00:01:01,773
and you've learned about the XmlSeeAlso annotation.

16
00:01:01,773 --> 00:01:06,616
Then you've learned how JAXB handles xs:any declarations in an

17
00:01:06,616 --> 00:01:11,943
XSD and how elements that are outside of the schema are either

18
00:01:11,943 --> 00:01:17,344
unmarshalled into DOM element objects or to JAXB objects from a

19
00:01:17,344 --> 00:01:18,833
different domain model.

20
00:01:18,833 --> 00:01:22,556
Finally, you've learned about class binder.

21
00:01:22,556 --> 00:01:27,656
This allows you to map a DOM tree to JAXB objects while maintaining

22
00:01:27,656 --> 00:01:32,226
a link back to the nodes in the DOM tree so that it can be updated

23
00:01:32,226 --> 00:01:34,980
with changes made to the JAXB objects.

24
00:01:34,980 --> 00:01:38,828
As you've also learned, if you want to do this,

25
00:01:38,828 --> 00:01:43,295
and it's important to maintain the structure of the original XML document,

26
00:01:43,295 --> 00:01:48,813
it's better to use EclipseLink MOXy because the default implementation

27
00:01:48,813 --> 00:01:53,983
of JAXB unfortunately does not do this correctly.

28
00:01:53,983 --> 00:01:57,263
There are still a few bits that are missing.

29
00:01:57,263 --> 00:01:59,190
In real-world Java development projects,

30
00:01:59,190 --> 00:02:06,092
you'll be using a build and dependency management tool like Maven or Gradle.

31
00:02:06,092 --> 00:02:14,000
In the next module, you'll learn how you can use the JAXB tools from Maven or Gradle.

