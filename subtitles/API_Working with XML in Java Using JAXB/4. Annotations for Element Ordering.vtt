WEBVTT
1
00:00:01.853 --> 00:00:05.391
One of the things we notice in the marshalling example of the

2
00:00:05.391 --> 00:00:10.364
previous module is that the order of the elements in the XML

3
00:00:10.364 --> 00:00:12.915
is not always what we expected.

4
00:00:12.915 --> 00:00:18.211
We saw that the customer element in the XML was before the items element in

5
00:00:18.211 --> 00:00:21.703
the purchaseOrder element even though in the source code of

6
00:00:21.703 --> 00:00:27.066
classPurchaseOrder the items field was before the customer field.

7
00:00:27.066 --> 00:00:30.178
Also, the fields inside the customer element,

8
00:00:30.178 --> 00:00:33.317
the address elements and the items elements,

9
00:00:33.317 --> 00:00:36.489
seem to be in the wrong order.

10
00:00:36.489 --> 00:00:39.951
This happens because if you don't specify the order in which

11
00:00:39.951 --> 00:00:43.142
you want elements to appear in the XML,

12
00:00:43.142 --> 00:00:48.146
the order is undefined and not necessarily the same as the order

13
00:00:48.146 --> 00:00:51.808
in which the fields appear in the source code.

14
00:00:51.808 --> 00:00:57.589
There are two annotations that we can use to specify in which order we want

15
00:00:57.589 --> 00:01:02.016
JAXB to process the fields and properties of a class.

16
00:01:02.016 --> 00:01:09.691
The example to look at for this subject is ps-jaxb-05-anno-order.

17
00:01:09.691 --> 00:01:16.447
Let's open this example in the IDE to see how we can use these annotations.

18
00:01:16.447 --> 00:01:19.560
The first annotation is XmlAccessorOrder.

19
00:01:19.560 --> 00:01:24.217
Just like the XmlAccessorType annotation that we saw earlier,

20
00:01:24.217 --> 00:01:30.458
you can put this annotation either on a class or on a package.

21
00:01:30.458 --> 00:01:35.512
If you put it on a package, it applies to all classes in the package.

22
00:01:35.512 --> 00:01:36.258
Unfortunately,

23
00:01:36.258 --> 00:01:42.251
the XmlAccessorOrder annotation is not very useful because the

24
00:01:42.251 --> 00:01:45.700
amount of control it gives you is very limited.

25
00:01:45.700 --> 00:01:50.330
The only two options that you can choose are to have the elements sorted

26
00:01:50.330 --> 00:01:55.386
alphabetically or to use the default UNDEFINED order.

27
00:01:55.386 --> 00:01:56.471
For example,

28
00:01:56.471 --> 00:02:02.369
I can put an XmlAccessorOrder annotation on class Item with the

29
00:02:02.369 --> 00:02:05.413
option to sort the elements alphabetically.

30
00:02:05.413 --> 00:02:07.429
If I then run the application,

31
00:02:07.429 --> 00:02:13.583
I see that the fields in each items element are indeed in alphabetical order.

32
00:02:13.583 --> 00:02:19.497
The other annotation that we can use is the XmlType annotation.

33
00:02:19.497 --> 00:02:26.048
This annotation can only be used on classes and enums, not on packages.

34
00:02:26.048 --> 00:02:29.000
Using the propOrder attribute of this annotation,

35
00:02:29.000 --> 00:02:34.229
you can specify precisely in what order the elements should appear.

36
00:02:34.229 --> 00:02:36.163
Let's use this, for example,

37
00:02:36.163 --> 00:02:40.912
on the customer class to specify that we first want the name,

38
00:02:40.912 --> 00:02:45.103
then the loyalty, and then the shippingAddress and billingAddress elements.

39
00:02:45.103 --> 00:02:50.460
Run the program, and you'll see the elements in the expected order.

40
00:02:50.460 --> 00:02:55.983
Note that if you use the XmlType annotation with the propOrder attribute,

41
00:02:55.983 --> 00:03:00.207
you are required to specify the names of each of

42
00:03:00.207 --> 00:03:02.174
the mapped fields or properties.

43
00:03:02.174 --> 00:03:05.964
If you forget one, you'll get an error message.

44
00:03:05.964 --> 00:03:06.445
Fortunately,

45
00:03:06.445 --> 00:03:10.767
the error messages that the JAXB reference implementation produces

46
00:03:10.767 --> 00:03:15.012
when you do something wrong are very user friendly.

47
00:03:15.012 --> 00:03:18.396
For example, if I spell the name of a property wrong,

48
00:03:18.396 --> 00:03:24.512
it will tell me exactly what's wrong, and it even tries to guess what I meant.

49
00:03:24.512 --> 00:03:33.000
So if you get an error message, read it carefully, and you'll quickly be able to find out what the problem is.

