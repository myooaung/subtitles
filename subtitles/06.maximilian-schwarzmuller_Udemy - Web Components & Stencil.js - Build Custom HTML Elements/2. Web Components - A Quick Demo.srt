1
00:00:02,370 --> 00:00:09,200
So what are web components? Web components really are just your own custom

2
00:00:09,310 --> 00:00:17,160
HTML elements, HTML elements that are not built into the browser but that are created by you as

3
00:00:17,160 --> 00:00:22,050
a developer or by some other developer and you are now using them in your project

4
00:00:22,410 --> 00:00:27,790
and what could be easier to dive into them than to just use such a custom web component?

5
00:00:27,900 --> 00:00:29,030
So let's have a quick look.

6
00:00:29,850 --> 00:00:34,660
Here I have a simple index.html file and I opened it in Visual Studio Code,

7
00:00:34,690 --> 00:00:35,140
the IDE

8
00:00:35,220 --> 00:00:36,440
I'm using in this course,

9
00:00:36,570 --> 00:00:40,790
you can open this in your normal system text editor, that really does not matter,

10
00:00:40,830 --> 00:00:43,660
it's a normal HTML5 skeleton we have here,

11
00:00:43,770 --> 00:00:47,570
you'll find this exact file attached to this video in case you want to start with that too

12
00:00:47,640 --> 00:00:50,240
but there is nothing special about this file.

13
00:00:50,430 --> 00:00:57,160
Now in that file, let's say we're creating an application where we want to show a modal, so that info

14
00:00:57,180 --> 00:01:01,690
box pop over overlay thing you see on many pages.

15
00:01:01,710 --> 00:01:03,880
Now obviously we can create one from scratch,

16
00:01:04,050 --> 00:01:09,270
we can add a div here, add some styling to the div and then write some Javascript to conditionally

17
00:01:09,270 --> 00:01:14,280
show and hide that div and also add another div that can act as a backdrop,

18
00:01:14,280 --> 00:01:20,400
so this gray area behind the modal that blocks access to the rest of the page, we can write all of that

19
00:01:21,120 --> 00:01:27,980
but we can also create our own web component for that or use a web component someone else created

20
00:01:28,020 --> 00:01:32,710
and here I created one for you and you also find that attached to this video.

21
00:01:32,760 --> 00:01:37,920
There you will find this modal.js file which you can just download and drag and drop into the same

22
00:01:37,920 --> 00:01:38,690
folder

23
00:01:38,780 --> 00:01:42,530
as the HTML file you created or you downloaded.

24
00:01:42,600 --> 00:01:44,370
Now you can go through this file,

25
00:01:44,400 --> 00:01:51,570
in the end here we create or I created a so-called web component, a custom HTML element and we will

26
00:01:51,570 --> 00:01:53,360
do this together in this course,

27
00:01:53,400 --> 00:01:59,340
this is taken directly from the course, we will build this component later in the course. So I won't go

28
00:01:59,340 --> 00:02:00,210
through that right now,

29
00:02:00,210 --> 00:02:02,360
there's a lot of stuff in there we don't know yet

30
00:02:02,410 --> 00:02:08,460
and this video is not about understanding all of that, this video is about seeing what custom elements do

31
00:02:08,490 --> 00:02:11,290
or what such custom web components do.

32
00:02:11,340 --> 00:02:15,710
This web component in the modal here is in the end registered as a custom element

33
00:02:15,860 --> 00:02:17,360
with the uc-modal tag,

34
00:02:17,400 --> 00:02:19,610
that is what I can tell you right now about this code,

35
00:02:19,620 --> 00:02:26,090
this creates a new HTML tag that we can use in any file that imports this modal.js file,

36
00:02:26,280 --> 00:02:32,700
so let's do that. Let's add a script import here in the head section so that it gets loaded early

37
00:02:32,920 --> 00:02:37,150
and let's point at that modal.js file and for that, it needs to be in the same folder here

38
00:02:37,290 --> 00:02:44,430
as I just mentioned. Now with that imported, we can use the uc-modal element as if it were a normal

39
00:02:44,460 --> 00:02:45,730
HTML element

40
00:02:45,840 --> 00:02:48,300
and of course this is not a built-in element,

41
00:02:48,300 --> 00:02:54,580
normally using this tag would do absolutely nothing because the browser doesn't recognize that

42
00:02:54,990 --> 00:02:59,270
but it now does as my Javascript file registers a custom element

43
00:02:59,310 --> 00:03:00,490
under this tag.

44
00:03:00,810 --> 00:03:06,120
Now this modal happens to work in a way where we need to pass in some information between the opening

45
00:03:06,120 --> 00:03:07,390
and closing tag,

46
00:03:07,500 --> 00:03:15,300
for example a h1 tag, the modal title where we set the title of the modal and there, we use a feature called

47
00:03:15,300 --> 00:03:21,510
slots which you learn in detail throughout the course which tells that web component where to position that

48
00:03:21,510 --> 00:03:23,690
content inside of the component.

49
00:03:23,940 --> 00:03:29,650
So here I can say slot equals title because this is one of the reserved slots I have in this component

50
00:03:30,120 --> 00:03:35,180
and now we also need some content that is shown below the title and there I'll add a paragraph,

51
00:03:35,190 --> 00:03:39,720
this is our first web component.

52
00:03:40,720 --> 00:03:47,320
With this added, if we now double click this index.html file,

53
00:03:47,480 --> 00:03:51,580
you will not see anything because the modal isn't opened right now.

54
00:03:52,040 --> 00:03:57,870
You can open it by adding a special attribute to this uc-modal tag

55
00:03:57,980 --> 00:04:00,000
and that is all logic we added or

56
00:04:00,060 --> 00:04:04,020
we will add in this modal.js files so that is why this will work,

57
00:04:04,070 --> 00:04:09,150
you can add the opened attribute, make sure to spell it right. After you did this,

58
00:04:09,230 --> 00:04:09,980
if you reload,

59
00:04:10,010 --> 00:04:15,370
hey here is a modal and you can even close that by clicking one of the buttons or clicking the backdrop

60
00:04:15,470 --> 00:04:17,770
and you'll see we have a nice animation there too

61
00:04:17,810 --> 00:04:21,190
and this again is all stuff we will build throughout this course.

62
00:04:21,260 --> 00:04:24,860
Now of course we can also open this programmatically if we wanted to,

63
00:04:24,860 --> 00:04:29,300
so instead of hard coding opened in there, we could add other scripts,

64
00:04:29,360 --> 00:04:34,490
so another Javascript code which is not related to the web component which could be our normal application

65
00:04:34,490 --> 00:04:41,120
code for this web app we're creating and there, the cool thing is we can interact with our own custom

66
00:04:41,120 --> 00:04:41,540
elements,

67
00:04:41,570 --> 00:04:48,320
just as with native HTML elements. So here I'm getting access to my modal and I'll store this in a constant

68
00:04:48,380 --> 00:04:49,350
named modal,

69
00:04:49,460 --> 00:04:53,480
by the way I will have a Javascript refresher where I explain what const is

70
00:04:53,480 --> 00:04:59,570
in case you don't know that and now I can use the normal DOM operations like document query selector to

71
00:04:59,570 --> 00:05:02,190
get access to an element with a CSS selector and

72
00:05:02,270 --> 00:05:09,830
here I will use uc-modal, my own tag as a selector. And with that, let's say we add a timeout here and

73
00:05:09,830 --> 00:05:16,580
after three seconds, I want to open the modal. For that, I'll add an anonymous function here, an arrow function

74
00:05:16,580 --> 00:05:22,060
in this case and there, I can access my modal and call an open method and this open method also

75
00:05:22,070 --> 00:05:24,930
exists because I added the logic for this method

76
00:05:24,950 --> 00:05:29,050
in this web component and we will do this together later in the course.

77
00:05:29,060 --> 00:05:35,680
So now with that if we reload, there is nothing there but after three seconds, you will see that modal

78
00:05:35,690 --> 00:05:39,030
opening and you can still close it with the buttons and so on.

79
00:05:39,050 --> 00:05:43,410
So this is how a web component works and what a web component is,

80
00:05:43,460 --> 00:05:48,020
it is your own HTML element which you can configure in the way you want.

81
00:05:48,020 --> 00:05:54,860
Behind the scenes, such a web component also just uses native elements like divs or header as you can

82
00:05:54,860 --> 00:06:00,650
see and we will learn all of that step by step in the course but we can group that together, add additional

83
00:06:00,650 --> 00:06:04,570
logic, like here the open method, the opened attribute and so on,

84
00:06:04,790 --> 00:06:12,350
add special styling and add for example an animation and hide that all under an HTML tag that we

85
00:06:12,350 --> 00:06:16,800
can dump into any project which imports this web component.

86
00:06:16,940 --> 00:06:18,670
That is what web components are

87
00:06:18,680 --> 00:06:21,140
in a nutshell and that is what makes them awesome

88
00:06:21,230 --> 00:06:27,200
but now let's have a closer look at what makes up the web components specification and why we might

89
00:06:27,200 --> 00:06:27,940
want to use them.
