1
00:00:02,550 --> 00:00:07,050
So now that we learned more about attributes and how we can listen to changes,

2
00:00:07,050 --> 00:00:12,020
let me come back to our general logic here in the web component.

3
00:00:12,180 --> 00:00:15,090
For one, I noticed we still have a little redundant code in there,

4
00:00:15,090 --> 00:00:17,400
here where I append this tooltipIcon,

5
00:00:17,430 --> 00:00:19,060
to my shadow root,

6
00:00:19,230 --> 00:00:20,960
this is simply not required anymore,

7
00:00:21,000 --> 00:00:22,330
we have it here in the template.

8
00:00:22,350 --> 00:00:24,660
So it is rendered by default, 

9
00:00:24,690 --> 00:00:28,370
so I can remove that and well, still have it there

10
00:00:28,860 --> 00:00:34,050
but this was not the main part I wanted to focus on. Instead what we also can do,

11
00:00:34,590 --> 00:00:36,990
we can clean up our event listeners

12
00:00:36,990 --> 00:00:37,820
we got here.

13
00:00:38,040 --> 00:00:42,420
Right now, we add these events listeners but we never clean them up.

14
00:00:42,490 --> 00:00:45,680
Now it's always a good idea to clean up your stuff

15
00:00:45,780 --> 00:00:51,390
when this component should ever be removed from the DOM and I can show you how it can be removed in

16
00:00:51,390 --> 00:00:52,780
a second.

17
00:00:52,890 --> 00:00:56,890
And for this, we have another lifecycle hook you learned about earlier,

18
00:00:57,090 --> 00:01:05,540
we got the disconnectedCallback and this will be executed when the element is removed from the DOM.

19
00:01:05,700 --> 00:01:10,430
Now let me simply output disconnected here for now

20
00:01:10,450 --> 00:01:15,910
before we add any other logic and let's go back to our page and reload

21
00:01:16,210 --> 00:01:21,140
and of course, we again could have some Javascript code which simply selects this element and removes

22
00:01:21,140 --> 00:01:26,260
it, just as we by the way also remove our tooltipContainer here.

23
00:01:26,350 --> 00:01:29,420
You can remove any node with remove child,

24
00:01:29,470 --> 00:01:30,860
you just have to select the parent 

25
00:01:30,850 --> 00:01:32,380
of it and then get rid of it.

26
00:01:32,380 --> 00:01:38,320
So we could get access to the paragraph and remove this child from it or here to simulate it in even easier

27
00:01:38,320 --> 00:01:45,640
way, in the dev tools I can simply select it and hit the delete or backspace key and it's gone

28
00:01:45,790 --> 00:01:51,280
and in the console, we see disconnected because this gets executed when this component gets removed from the

29
00:01:51,280 --> 00:01:52,170
DOM

30
00:01:52,480 --> 00:01:54,410
and of course for every component separately.

31
00:01:54,610 --> 00:01:58,150
So that second tooltip, if I remove that, we see disconnected again,

32
00:01:58,180 --> 00:02:05,230
now it was called twice or printed twice because it was printed for the two separate elements because they

33
00:02:05,230 --> 00:02:09,170
are treated totally independent from each other. Now the disconnectedCallback

34
00:02:09,170 --> 00:02:11,220
is a great place for cleanup work,

35
00:02:11,350 --> 00:02:19,000
cancel any HTTP requests you might be doing, maybe send a log message to your own statistics server or

36
00:02:19,120 --> 00:02:24,140
in our case, clean up the event listeners, the mouseenter and mouseleave listeners.

37
00:02:24,250 --> 00:02:30,430
Now we can clean up these listeners by first of all storing the tooltipIcon reference here, not in

38
00:02:30,430 --> 00:02:37,420
a constant because constants like variables are only accessible in the scope, so in the function in this

39
00:02:37,420 --> 00:02:42,880
case, in the method where you define them, I want to access it from down there though so I have to turn

40
00:02:42,880 --> 00:02:44,740
it into a class property

41
00:02:44,950 --> 00:02:51,700
and we do that by simply storing it in one. And for that, simply to make it clear that we have such a class

42
00:02:51,700 --> 00:02:59,680
property, I'll define one here _tooltipIcon to make sure it is seen as a private property

43
00:02:59,740 --> 00:03:00,860
of this class.

44
00:03:01,000 --> 00:03:05,540
It's uninitialized here and we wouldn't have to define it here first by the way,

45
00:03:05,620 --> 00:03:11,350
I just want to have a definition here so that when you look at this component, we quickly see the properties

46
00:03:11,350 --> 00:03:14,100
we're using but with it defined,

47
00:03:14,320 --> 00:03:23,670
I can now use it and I can use it down there and store my span in the tooltipIcon property we just

48
00:03:23,670 --> 00:03:26,110
initialized and replace all tooltipIcon

49
00:03:26,130 --> 00:03:33,460
references here with references to my tooltipIcon property, class property and now we can go to

50
00:03:33,460 --> 00:03:41,270
the disconnectedCallback and there, I can add remove listener, remove event listener, call this method and

51
00:03:41,270 --> 00:03:44,530
I want to remove my mouseenter listener, so

52
00:03:44,560 --> 00:03:52,190
let's add this here and the way remove event listener works is that we then also have to define the method

53
00:03:52,190 --> 00:03:53,280
which was connected.

54
00:03:53,450 --> 00:04:02,630
So for mouseenter, this was showTooltip like this, so we want to remove that and we want to do the

55
00:04:02,630 --> 00:04:04,750
same for mouseleave and hide tooltip. 

56
00:04:04,880 --> 00:04:11,810
So I will just duplicate this, mouseleave, this hide tooltip.

57
00:04:12,020 --> 00:04:19,770
And with that if I save all that and I go back and reload, if I select my component and remove it,

58
00:04:19,940 --> 00:04:21,350
well we don't see anything here 

59
00:04:21,440 --> 00:04:23,940
but now we do our cleanup work,

60
00:04:23,960 --> 00:04:28,970
we take advantage of the disconnectedCallback to clean up our event listeners here. Always a

61
00:04:28,970 --> 00:04:29,770
good idea

62
00:04:29,810 --> 00:04:36,660
but again you could do any cleanup work or any work in general you have in that method

63
00:04:36,670 --> 00:04:38,360
here, in that lifecycle look.
