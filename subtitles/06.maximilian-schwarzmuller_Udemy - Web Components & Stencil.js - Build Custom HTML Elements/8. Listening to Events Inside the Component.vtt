WEBVTT
1
00:00:02.310 --> 00:00:08.940
We're making progress and we're now able to render some text through our web component.

2
00:00:09.120 --> 00:00:11.990
Now still a lot of the logic is missing,

3
00:00:12.060 --> 00:00:17.400
for example when we hover over this, we get no event listeners that would do anything but we're getting

4
00:00:17.400 --> 00:00:19.050
there step by step.

5
00:00:19.440 --> 00:00:26.580
Let's now add such event listeners to see how we can quickly add more logic to this component which

6
00:00:26.580 --> 00:00:31.940
we then can easily reuse by reusing our custom selector, our custom.html

7
00:00:31.950 --> 00:00:39.840
tag. We want to listen to when we hover over that tooltip icon and then we want to show a

8
00:00:39.890 --> 00:00:43.290
tooltip. For this,

9
00:00:43.360 --> 00:00:47.400
I will simply add an event listener.

10
00:00:47.400 --> 00:00:53.520
This is a normal DOM element and therefore we can call an event listener and we can listen to the built-in

11
00:00:53.520 --> 00:01:00.960
mouseenter event which is fired when the mouseenters this span in this case because I'm attaching

12
00:01:00.960 --> 00:01:03.670
it to that tooltip icon span.

13
00:01:03.780 --> 00:01:10.740
Then I want to execute a function and for this, I will create a new method which is simply a function

14
00:01:10.740 --> 00:01:14.610
inside of a class and I will add this to this class.

15
00:01:14.640 --> 00:01:17.240
Now I will name this method

16
00:01:18.740 --> 00:01:20.670
showToolTip.

17
00:01:20.700 --> 00:01:27.650
Now I'm starting with an underscore here, not because it's required but this is really a convention indicating

18
00:01:27.950 --> 00:01:29.000
that this is a method

19
00:01:29.000 --> 00:01:32.870
I only want a call from inside that class.

20
00:01:33.140 --> 00:01:40.010
Now Javascript is a programming language that doesn't know the concept of private and public properties

21
00:01:40.100 --> 00:01:45.120
and methods and therefore even if you name it like this, you can call it from outside

22
00:01:45.130 --> 00:01:49.500
too. By the way if you're wondering what I mean with from outside,

23
00:01:49.730 --> 00:01:56.930
well since this is now a normal HTML element, you can of course also select it with the document query selector

24
00:01:57.170 --> 00:02:03.020
and then you can access its properties and call its methods, just like you can do it on any other HTML

25
00:02:03.310 --> 00:02:04.400
element.

26
00:02:04.530 --> 00:02:09.170
So with an underscore in front of this name though, I'm indicating that this is a method

27
00:02:09.230 --> 00:02:11.040
you should not call.

28
00:02:11.150 --> 00:02:12.250
You can still do it

29
00:02:12.260 --> 00:02:13.560
and we can't stop that

30
00:02:13.640 --> 00:02:18.800
but at least we're clear regarding our intention of how this component should be used

31
00:02:19.010 --> 00:02:26.270
and if other developers are then using it or we are using it sometime in the future after we don't exactly

32
00:02:26.270 --> 00:02:28.880
remember how we created it, then we know

33
00:02:28.960 --> 00:02:35.060
ok this is a method which should only get called internally which we don't have to care about when we

34
00:02:35.180 --> 00:02:41.570
work with our component from outside. So this showTooltip method is what I want to call,

35
00:02:41.570 --> 00:02:49.730
so here I will call this showTooltip and important, I don't add parentheses because I don't want to

36
00:02:49.820 --> 00:02:51.660
execute this method here,

37
00:02:51.770 --> 00:02:58.910
I only save the pointer to this method and set this up as my event listener so that when the mouseenter

38
00:02:58.910 --> 00:03:04.850
event occurs, then the browser can automatically execute showTooltip.

39
00:03:04.970 --> 00:03:14.450
Now inside of showTooltip, I then want to create a tooltip element which I can display. For this, I'll create

40
00:03:14.460 --> 00:03:22.640
a new constant and I'll name it tooltipContainer and with document create element, I'll create a

41
00:03:22.640 --> 00:03:28.620
new element of type div, again using one of the built-in HTML elements.

42
00:03:28.880 --> 00:03:33.150
If you have multiple custom elements, you can of course also create those

43
00:03:33.200 --> 00:03:40.430
but here, I will build an element that only uses primitive, so only uses built-in elements. So I

44
00:03:40.430 --> 00:03:49.400
create a div here and in that tooltipContainer, I can then set a text content of this is the tooltip text

45
00:03:49.940 --> 00:03:54.510
which we'll make more generic and settable by the user later

46
00:03:54.990 --> 00:04:01.140
and now of course it's all about attaching this container to the DOM and showing it there.

47
00:04:01.640 --> 00:04:10.640
So for that again, I will access this, this referring to the tooltip element and now there's just one thing

48
00:04:10.640 --> 00:04:11.920
to watch out for,

49
00:04:12.080 --> 00:04:16.180
due to the way the this keyword works in javascript,

50
00:04:16.220 --> 00:04:20.920
more about that if you can find in an article in a video attached to this lecture,

51
00:04:20.960 --> 00:04:30.470
we need to call bind this here when we point at showTooltip. This ensures that the this keyword inside

52
00:04:30.470 --> 00:04:38.030
of showTooltip always refers to this class. Now here I can append this child,

53
00:04:38.040 --> 00:04:41.900
I can append my tooltipContainer,

54
00:04:42.060 --> 00:04:46.260
the styling will be awful but it should work.

55
00:04:46.260 --> 00:04:52.640
If we now save that and we reload the browser, if I now hover over this questionmark,

56
00:04:52.860 --> 00:04:55.930
indeed we see this is the tooltip text.

57
00:04:56.130 --> 00:05:02.310
Now it's not getting removed when I hover away though, you see that when I leave with the mouse, it's

58
00:05:02.310 --> 00:05:07.790
still there and if I hover over it again, it adds more and more of these texts and

59
00:05:07.800 --> 00:05:12.230
that makes a lot of sense because we never remove that

60
00:05:12.270 --> 00:05:18.370
when we leave with the mouse. So I will duplicate my event listener up there

61
00:05:18.550 --> 00:05:26.290
and besides mouseenter, I will also add mouseleave here and I will add a new private method,

62
00:05:26.460 --> 00:05:32.060
hideTooltip which should in the end remove this tooltipContainer.

63
00:05:32.130 --> 00:05:38.460
Now to access the tooltipContainer which I create in showTooltip and which therefore is not accessible from inside

64
00:05:38.460 --> 00:05:39.730
hideTooltip,

65
00:05:39.980 --> 00:05:47.400
I'll turn this from a constant in showTooltip into a property of the whole class. For this in the

66
00:05:47.400 --> 00:05:51.380
constructor which is a great place for basic initializations,

67
00:05:51.420 --> 00:05:58.560
I'll add a new property by using the this keyword and then dot and then the name of the property and a

68
00:05:58.560 --> 00:06:06.430
property is basically just like a class-wide available variable and I will name that underscore to

69
00:06:06.590 --> 00:06:07.090
also mark

70
00:06:07.100 --> 00:06:14.870
that is only used from inside the class, _tooltipContainer. And I will not set an initial value,

71
00:06:15.010 --> 00:06:17.520
so it's basically undefined initially

72
00:06:18.100 --> 00:06:26.950
but then here in showTooltip, I will store this created div, not in this constant but in this

73
00:06:27.010 --> 00:06:33.100
_tooltipContainer and that of course means that the places where I used tooltipContainer like this also

74
00:06:33.210 --> 00:06:37.420
now have to become this _tooltipContainer.

75
00:06:37.420 --> 00:06:45.170
The advantage of this approach is that the newly created div is now stored in a class property and unlike

76
00:06:45.170 --> 00:06:51.700
the constant, this property is not just accessible from inside this method but from all the methods in

77
00:06:51.700 --> 00:06:52.740
a class.

78
00:06:52.750 --> 00:07:00.800
So now in hideTooltip, I can also access this tooltipContainer and remove that Node and for that,

79
00:07:00.820 --> 00:07:08.350
I will actually access this remove child and I will remove that tooltipContainer

80
00:07:08.350 --> 00:07:09.940
child.

81
00:07:10.060 --> 00:07:14.810
Now when we leave this with the mouse, if we don't hover over the questionmark anymore,

82
00:07:15.010 --> 00:07:18.430
this tooltipContainer which was added should be removed.

83
00:07:18.440 --> 00:07:25.030
However, of course that also means that I now also need to hook hideTooltip up as a method that should be executed

84
00:07:25.120 --> 00:07:25.680
for mouseleave.

85
00:07:25.690 --> 00:07:30.430
Now with that, if I save that and we reload this page,

86
00:07:30.430 --> 00:07:34.290
now when I hover over to questionmark, the tooltip still gets added

87
00:07:34.510 --> 00:07:41.290
but if I now leave with the mouse, it's gone and now we have a tooltip that only shows up whilst we hover

88
00:07:41.290 --> 00:07:42.960
over the questionmark.

89
00:07:43.090 --> 00:07:49.700
Now obviously, styling is missing and the questionmark is still positioned incorrectly but this is

90
00:07:49.750 --> 00:07:56.680
another great step forward and we can already see some custom logic doing its job in our web component

91
00:07:57.100 --> 00:08:03.490
because you must never forget that this whole hovering logic and so on all happens inside of our web

92
00:08:03.490 --> 00:08:10.630
component and that already means that if we copy that and we add another tooltip, so another instance

93
00:08:10.630 --> 00:08:14.530
of this element somewhere else,

94
00:08:14.550 --> 00:08:17.240
here we go.

95
00:08:17.560 --> 00:08:26.020
Then there, we'll also have this questionmark over which we can hover, so we can easily reuse this functionality

96
00:08:26.020 --> 00:08:26.970
already.

97
00:08:26.980 --> 00:08:34.420
Of course it would be nice if we had more styling, more flexibility regarding our tooltip text and so

98
00:08:34.420 --> 00:08:35.140
on.

99
00:08:35.140 --> 00:08:37.900
So let's work on that tooltip text next

100
00:08:38.140 --> 00:08:44.430
because having this generic dummy text here, this is the tooltip text does not make a lot of sense.

101
00:08:44.440 --> 00:08:48.070
The text here should be settable from outside instead.

102
00:08:48.090 --> 00:08:50.500
So let's take care about that in the next lecture.
