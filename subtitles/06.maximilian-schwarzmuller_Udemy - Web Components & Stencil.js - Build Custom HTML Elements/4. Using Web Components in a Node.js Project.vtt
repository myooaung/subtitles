WEBVTT
1
00:00:02.430 --> 00:00:05.500
Now this basic use case also works with NodeJS,

2
00:00:05.520 --> 00:00:11.100
there we're rendering this view on the server and therefore, we got a real web server up and running

3
00:00:11.100 --> 00:00:13.810
which we would deploy onto a real server

4
00:00:14.250 --> 00:00:23.940
and now there, of course we can also add, let's say a public folder in which we have a scripts folder

5
00:00:24.330 --> 00:00:31.110
and I will just move all my content into this scripts folder. I'll copy that or I'll move that uc-components

6
00:00:31.110 --> 00:00:36.270
folder from the basic project into that scripts folder in the public folder in the Node project, copy

7
00:00:36.270 --> 00:00:37.290
it in there

8
00:00:37.560 --> 00:00:38.510
and now to serve that

9
00:00:38.520 --> 00:00:44.250
in app.js, I just need to make sure that we actually serve that public folder statically with

10
00:00:44.310 --> 00:00:49.690
app use express static and then it's the public folder. 

11
00:00:49.720 --> 00:00:55.950
Again this is just some NodeJS logic so that we can import from that public folder and then in my view here,

12
00:00:56.370 --> 00:01:09.150
I also add a script tag and the source here is public scripts uc-components and then, it's my

13
00:01:10.370 --> 00:01:11.650
this file name here.

14
00:01:11.660 --> 00:01:16.600
So let's copy that file name.js

15
00:01:16.640 --> 00:01:18.030
at the end

16
00:01:18.260 --> 00:01:24.100
and now let's try it here too. Let's add the uc-stock-price and now we can run this project a

17
00:01:24.100 --> 00:01:24.650
bit different,

18
00:01:24.680 --> 00:01:28.120
we need to start that Node server there, by the way,

19
00:01:28.280 --> 00:01:32.960
we should not start with public here, just with scripts because it automatically assumes you are in the public

20
00:01:32.960 --> 00:01:35.010
folder because we're statically serving that

21
00:01:35.300 --> 00:01:41.450
but now we need to run that server by navigating into that Node folder and then running npm start.

22
00:01:41.480 --> 00:01:47.870
However before this works, we actually need to run npm install to install all dependencies on this project

23
00:01:48.440 --> 00:01:53.240
and then we can run npm start and this will start up the Node server here,

24
00:01:53.270 --> 00:02:01.890
you can find that on http://www.localhost:3000 and there again, we have our component being loaded and working.

25
00:02:01.900 --> 00:02:08.440
So this is also copied into but now into a Node project where the views are generated on the server.
