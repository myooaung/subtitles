1
00:00:02,400 --> 00:00:04,800
So with the styling cleaned up a little bit,

2
00:00:04,890 --> 00:00:11,390
let's come back to some key functionalities we can add inside of our web components and there's one

3
00:00:11,400 --> 00:00:13,930
thing which we haven't done at all thus far.

4
00:00:14,250 --> 00:00:21,420
Thus far, the text for our tooltip always was set statically, which means we assigned it through this attribute

5
00:00:21,420 --> 00:00:25,500
here but there was no way of changing that at runtime.

6
00:00:25,500 --> 00:00:27,840
Now I do want to change it

7
00:00:27,990 --> 00:00:31,490
and for that I of course need some logic that allows me to change it,

8
00:00:31,590 --> 00:00:37,320
I'll simply do it in the developer tools for now because there, you have to keep in mind that I can of

9
00:00:37,320 --> 00:00:43,710
course click into that text here, double click on it and I can set this to some new text but if I do

10
00:00:43,710 --> 00:00:50,460
so and I hover over this, we still see the old text because changes to attributes are not picked up

11
00:00:50,520 --> 00:00:52,070
inside of the web component.

12
00:00:52,380 --> 00:00:58,380
And I want to highlight here that when I change this manually in the developer tools, this is no different

13
00:00:58,620 --> 00:01:04,260
to this being changed through some Javascript code for example and that of course would be the more realistic

14
00:01:04,260 --> 00:01:10,450
use case for your application where you for example listen to some user input and the text entered by

15
00:01:10,450 --> 00:01:13,660
the user should end up here in the attribute

16
00:01:13,800 --> 00:01:18,750
and I'm just not doing that because it requires some extra boilerplate code that has nothing to do with

17
00:01:18,750 --> 00:01:19,720
web components,

18
00:01:19,770 --> 00:01:24,950
so we'll just do that through manual editing here in the developer tools.

19
00:01:24,990 --> 00:01:28,020
The problem is that right now, our changes don't get picked up

20
00:01:28,170 --> 00:01:31,950
and that is what I want to change. For changing this,

21
00:01:31,950 --> 00:01:34,430
I'll have to go back to my tooltip.js file

22
00:01:43,650 --> 00:01:48,510
and there, I can add a new lifecycle hook which I did mention earlier in this course.

23
00:01:48,630 --> 00:01:54,750
Do you remember which one that was that was? It was the attributeChangeCallback,

24
00:01:54,950 --> 00:02:01,790
this executes when an observed attribute is updated and that observed part is going to become important

25
00:02:01,790 --> 00:02:02,430
by the way.

26
00:02:03,320 --> 00:02:11,820
So let's add it here, let's add the attributeChangedCallback method here and this method actually

27
00:02:11,820 --> 00:02:18,090
receives three arguments, the name of the attribute which changed, the old value of that attribute and

28
00:02:18,090 --> 00:02:24,850
now, the new value. Now in there, for now to keep it simple, let's simply output this. So I'll console log

29
00:02:24,850 --> 00:02:29,320
the name, the old value and the new value

30
00:02:29,340 --> 00:02:35,130
and if I do that, the expectation would be that when I reload this page and I come in here and change

31
00:02:35,130 --> 00:02:43,100
that text to something new, if we then go to our console, we see an output there but this is actually empty

32
00:02:43,160 --> 00:02:49,180
and the reason for that is that on the slide, I deliberately wrote observed attributes trigger this.

33
00:02:49,190 --> 00:02:53,010
Now we're not observing any attributes right now,

34
00:02:53,300 --> 00:02:55,570
this is simply a performance optimization

35
00:02:55,570 --> 00:02:58,010
Javascript forces us to implement.

36
00:02:58,010 --> 00:03:04,370
It does not by default watch all the attributes of this element because there might be a lot of elements

37
00:03:04,370 --> 00:03:07,930
which can change which you don't care about in your component.

38
00:03:07,940 --> 00:03:11,290
Let's say you are changing a class which you only use in the light DOM,

39
00:03:11,820 --> 00:03:14,880
you're not interested in that class inside of the component then,

40
00:03:14,960 --> 00:03:17,270
so why would you watch for changes?

41
00:03:17,450 --> 00:03:22,070
Or maybe you are interested in the class inside of the component but only because you use it in the

42
00:03:22,070 --> 00:03:23,090
styles here.

43
00:03:23,090 --> 00:03:25,110
Well that will be picked up automatically then

44
00:03:25,220 --> 00:03:30,750
but if you don't want to run any logic in Javascript, there is no need to trigger this.

45
00:03:30,830 --> 00:03:37,400
So to get something into this callback or to trigger this callback for a specific attribute,

46
00:03:37,400 --> 00:03:43,010
you have to tell Javascript that you're watching it and you do inform Javascript that you do care about

47
00:03:43,010 --> 00:03:48,810
a certain attribute by adding a special property to your class here.

48
00:03:49,280 --> 00:03:57,260
You do this by adding the static keyword, static simply means that it is a property or in this case, it

49
00:03:57,260 --> 00:04:04,580
will be a getter function that can be called from outside without creating this class or an object

50
00:04:04,580 --> 00:04:08,810
based on that class first, you don't have to care about that though because you will not be creating

51
00:04:08,810 --> 00:04:09,560
it,

52
00:04:09,740 --> 00:04:15,050
then you add the get keyword which simply means this is now a function that will return you a value

53
00:04:15,140 --> 00:04:22,060
but you can't reassign a value to the property of this class which is hidden behind that getter

54
00:04:22,190 --> 00:04:28,710
and then the name has to be observedAttributes and this is now written as a normal function or a method

55
00:04:28,710 --> 00:04:29,470
here.

56
00:04:29,490 --> 00:04:34,250
Now again, it might look a bit strange if you never heard about getters and setters and if you're

57
00:04:34,250 --> 00:04:40,430
brand new to object oriented programming in general, the idea here is that this is like a property of

58
00:04:40,430 --> 00:04:41,350
this class,

59
00:04:41,390 --> 00:04:48,810
so like something we initialized with this in here but it's not, it is accessible from outside

60
00:04:48,860 --> 00:04:51,980
and more importantly, it's not settable from outside,

61
00:04:52,010 --> 00:04:53,970
you can only get the value here,

62
00:04:54,020 --> 00:05:01,340
so this is like a locked down property. And in there, you return an array with all the attribute names

63
00:05:01,580 --> 00:05:04,040
you want to listen to changes.

64
00:05:04,040 --> 00:05:11,960
So here, I simply add text and I add text here as a string because I have my text attribute here.

65
00:05:12,290 --> 00:05:19,290
I could of course also add class if I wanted to listen to changes to the class attribute or which ever

66
00:05:19,340 --> 00:05:20,890
other attributes you might have

67
00:05:21,090 --> 00:05:24,670
but you should only add here what you really care about.

68
00:05:25,200 --> 00:05:32,250
And now with this added, I can save this and go back to my application and if I reload now and edit this text

69
00:05:32,250 --> 00:05:41,610
again to something new and I go to the console, now we see output here, we actually see two because when

70
00:05:41,610 --> 00:05:47,850
I first clicked into it and deleted the content, it registered this as a change too. This is the change we

71
00:05:47,850 --> 00:05:53,820
just applied and there, we see the name of the attribute because remember, I am simply logging the name

72
00:05:53,970 --> 00:05:56,490
and then the old value and then the new value,

73
00:05:56,490 --> 00:06:01,980
so here we see the name of the attribute that changed, that was the text attribute. We see the old value,

74
00:06:02,020 --> 00:06:06,020
that was this text and we see the new value which I entered, this one.

75
00:06:06,180 --> 00:06:12,030
And now with that, we finally have a way of adjusting the code or the text we see here when we hover over

76
00:06:12,030 --> 00:06:14,280
this and we'll do that in the next lecture.
