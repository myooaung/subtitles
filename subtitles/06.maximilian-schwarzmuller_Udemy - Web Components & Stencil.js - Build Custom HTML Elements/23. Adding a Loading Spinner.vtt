WEBVTT
1
00:00:02.440 --> 00:00:06.400
Now being able to conditionally add data to the host element,

2
00:00:06.400 --> 00:00:10.850
so classes, styles to the host element is super helpful.

3
00:00:11.440 --> 00:00:17.470
Let me style something different or work on a different user experience related thing and that is that

4
00:00:17.470 --> 00:00:23.680
when we fetch something here. I want to show a spinner until we're really done fetching, until we really

5
00:00:23.680 --> 00:00:30.990
have a response from the API or show some text like loading..., anything like that

6
00:00:31.150 --> 00:00:35.540
and for this, I need a new state in this component

7
00:00:36.620 --> 00:00:39.930
which allows me to control whether we are currently loading or not.

8
00:00:40.220 --> 00:00:46.000
So loading by default let's say is false but it should in this case here always be true

9
00:00:46.310 --> 00:00:51.770
whenever I fetch data out from the API because this simply takes like half a second, one second maybe,

10
00:00:51.770 --> 00:00:55.720
maybe longer, depends on the internet connection and the API

11
00:00:55.720 --> 00:01:02.460
of course. So I'll set loading to true right at the start of this method and I'll set it to false

12
00:01:02.570 --> 00:01:06.220
whenever we're done here because then we're not loading anymore

13
00:01:06.260 --> 00:01:07.910
and also when we have an error

14
00:01:07.970 --> 00:01:10.750
because even if we have an error, we're done loading right.

15
00:01:10.760 --> 00:01:11.450
We have an error

16
00:01:11.480 --> 00:01:13.480
but we're not loading anymore.

17
00:01:13.580 --> 00:01:19.680
So now that we know whether we are loading, we can use that information to show different outputs.

18
00:01:19.700 --> 00:01:25.450
For example we could disable the button when we're loading, so that we can't send a new request immediately.

19
00:01:25.580 --> 00:01:35.910
So I will disable it either when the input is invalid or when this loading is true.

20
00:01:35.920 --> 00:01:43.590
Additionally here, I want to output loading... or some animated spinner if you want to as long

21
00:01:43.590 --> 00:01:44.830
as we are loading.

22
00:01:45.000 --> 00:01:49.470
Now I will go with the animated spinner and for that, you can simply google for animated CSS 

23
00:01:49.480 --> 00:01:51.380
spinner, you should find loading.io

24
00:01:51.400 --> 00:01:55.830
where you find a broad variety of spinners you can use

25
00:01:56.070 --> 00:01:57.910
and I will go with this spinner,

26
00:01:57.930 --> 00:02:02.110
simply click on it and then you see all the CSS styles you will need,

27
00:02:02.190 --> 00:02:10.920
you can just copy these and the HTML code that is required for that spinner.

28
00:02:11.010 --> 00:02:15.510
So let's move over in the stock price again and there, I will add

29
00:02:15.540 --> 00:02:18.330
all the CSS code at the bottom

30
00:02:18.510 --> 00:02:24.250
and then I will wrap that HTML code for that spinner and render that whenever I want to show the spinner,

31
00:02:24.250 --> 00:02:24.610
right

32
00:02:24.630 --> 00:02:28.710
and it has the right class so that this styling has some effect.

33
00:02:29.540 --> 00:02:33.960
So in stock price, data content should be a spinner if we are loading,

34
00:02:34.130 --> 00:02:40.570
so here if this loading, this is what I check ultimately. I don't care about the other conditions,

35
00:02:40.580 --> 00:02:45.590
if I'm loading, then my content will be this div sup here,

36
00:02:45.590 --> 00:02:50.860
right, so this content which the spinner needs. You can always tweak this, change this, I will go with that set

37
00:02:50.860 --> 00:02:54.990
up, don't want to spend too much time on the CSS and the spinner thing

38
00:02:55.130 --> 00:02:57.150
but now this is my data content

39
00:02:57.260 --> 00:03:04.220
if we are loading and to see that, I just need to style this a little bit. By default it's white,

40
00:03:04.220 --> 00:03:11.670
now let's reuse our purple color here maybe, in all the places where we previously used white so that

41
00:03:11.670 --> 00:03:16.060
we can see something there on that spinner.

42
00:03:17.520 --> 00:03:19.230
So let's give this a try,

43
00:03:19.590 --> 00:03:20.880
let's go back,

44
00:03:21.180 --> 00:03:22.190
here's our spinner

45
00:03:24.560 --> 00:03:28.190
and if I enter something here, you'll see there the spinner is

46
00:03:28.430 --> 00:03:30.560
and once it's done, it goes away

47
00:03:30.560 --> 00:03:33.700
and if I search for something valid, I can also spin it,

48
00:03:33.720 --> 00:03:35.210
here is a valid value. 

49
00:03:35.480 --> 00:03:37.220
So now we have that spinner in place

50
00:03:37.310 --> 00:03:44.030
and this is nice but what if we also want a spinner in the stock finder because there, we are hitting

51
00:03:44.030 --> 00:03:45.800
the API too, right?

52
00:03:45.800 --> 00:03:51.490
So how can we actually share and reuse code, maybe with another component?
