WEBVTT
1
00:00:00.050 --> 00:00:02.000
- [Instructor] The Mediator pattern is another one

2
00:00:02.000 --> 00:00:04.020
of these patterns that we see used in a couple places

3
00:00:04.020 --> 00:00:06.040
in the Spring Framework, but we don't use

4
00:00:06.040 --> 00:00:08.070
that often when we write code.

5
00:00:08.070 --> 00:00:11.010
In the Spring Framework, the single most important

6
00:00:11.010 --> 00:00:13.020
place that we see the Mediator pattern used is

7
00:00:13.020 --> 00:00:15.090
in the DispatcherServlet and the way

8
00:00:15.090 --> 00:00:18.060
that it operates in Spring MVC.

9
00:00:18.060 --> 00:00:20.000
Now, often it can also be used

10
00:00:20.000 --> 00:00:23.020
when setting the state of various components at once,

11
00:00:23.020 --> 00:00:24.060
and that's another time that we see

12
00:00:24.060 --> 00:00:26.040
that used throughout the Framework

13
00:00:26.040 --> 00:00:28.020
because when they have to do this,

14
00:00:28.020 --> 00:00:31.000
these are all hidden kind of underneath the covers.

15
00:00:31.000 --> 00:00:34.010
So how does this pattern actually work?

16
00:00:34.010 --> 00:00:36.070
So, the Mediator provides encapsulation

17
00:00:36.070 --> 00:00:39.010
on object behavior.

18
00:00:39.010 --> 00:00:42.020
Communication channels flow through the Mediator,

19
00:00:42.020 --> 00:00:45.000
who then, in turn, allow its mediated classes

20
00:00:45.000 --> 00:00:46.080
to do work.

21
00:00:46.080 --> 00:00:49.070
Mediated classes do not communicate with each other

22
00:00:49.070 --> 00:00:52.020
and that's really the key of this pattern.

23
00:00:52.020 --> 00:00:55.040
They only communicate with the Mediator.

24
00:00:55.040 --> 00:00:57.040
And the Mediator classes themselves

25
00:00:57.040 --> 00:01:01.010
can register or unregister as needed.

26
00:01:01.010 --> 00:01:02.070
So why would we want to go about

27
00:01:02.070 --> 00:01:05.070
using the Mediator pattern?

28
00:01:05.070 --> 00:01:07.020
One of the biggest uses is we want to

29
00:01:07.020 --> 00:01:10.070
reduce the exponential growth that occurs

30
00:01:10.070 --> 00:01:13.050
when you have interobject communication.

31
00:01:13.050 --> 00:01:15.040
When you have two objects that talk to each other,

32
00:01:15.040 --> 00:01:17.050
you have one communication path.

33
00:01:17.050 --> 00:01:19.070
When you have three, that jumps.

34
00:01:19.070 --> 00:01:22.000
When you have five, that jumps even more.

35
00:01:22.000 --> 00:01:24.060
And we get this exponential growth curve

36
00:01:24.060 --> 00:01:26.090
as more and more objects have to communicate

37
00:01:26.090 --> 00:01:27.080
with each other.

38
00:01:27.080 --> 00:01:29.060
This is one of the key points

39
00:01:29.060 --> 00:01:33.000
of using a Mediator pattern.

40
00:01:33.000 --> 00:01:35.080
Once again we see this tight coupling come up.

41
00:01:35.080 --> 00:01:37.090
And using the Mediator pattern allows us

42
00:01:37.090 --> 00:01:41.060
to reduce the tight coupling between these objects

43
00:01:41.060 --> 00:01:43.040
that interact.

44
00:01:43.040 --> 00:01:47.010
And finally, it makes interaction flows between objects

45
00:01:47.010 --> 00:01:49.000
more resistant to changes,

46
00:01:49.000 --> 00:01:52.070
because as an object, I only know about the Mediator

47
00:01:52.070 --> 00:01:55.020
as a mediated object, and not the other objects

48
00:01:55.020 --> 00:01:56.090
that I need to communicate with.

49
00:01:56.090 --> 00:01:58.050
I allow the Mediator to do

50
00:01:58.050 --> 00:02:01.080
that communication on my behalf.

51
00:02:01.080 --> 00:02:03.050
So if you wanted to use a Mediator

52
00:02:03.050 --> 00:02:05.050
how would you go about doing it?

53
00:02:05.050 --> 00:02:06.090
First and foremost, you have

54
00:02:06.090 --> 00:02:09.080
to create the mediated interface.

55
00:02:09.080 --> 00:02:13.060
Then you have to create a Mediator interface

56
00:02:13.060 --> 00:02:15.090
with the method to register the mediated,

57
00:02:15.090 --> 00:02:18.060
as well as unregister the mediated,

58
00:02:18.060 --> 00:02:20.070
and then any structured commands that you need

59
00:02:20.070 --> 00:02:24.030
to support through this Mediator flow.

60
00:02:24.030 --> 00:02:26.080
Then you're going to create concrete implementations

61
00:02:26.080 --> 00:02:29.010
of each as needed.

62
00:02:29.010 --> 00:02:31.080
And finally, in these structured commands

63
00:02:31.080 --> 00:02:34.000
you're going to mediate the behavior to all

64
00:02:34.000 --> 00:02:37.020
of the mediated objects, as appropriate.

65
00:02:37.020 --> 00:02:39.060
You're going to allow those objects to take the message

66
00:02:39.060 --> 00:02:41.000
and do what they want with it.

67
00:02:41.000 --> 00:02:43.010
You're just mediating the calls.

68
00:02:43.010 --> 00:02:45.000
You receive a call in, you send it

69
00:02:45.000 --> 00:02:46.090
to every object you mediate.

70
00:02:46.090 --> 00:02:49.020
This is how we would go about doing this.

71
00:02:49.020 --> 00:02:51.090
And these are very special use cases

72
00:02:51.090 --> 00:02:53.070
in these behavior patterns.

73
00:02:53.070 --> 00:02:55.060
And it's good to know about them.

74
00:02:55.060 --> 00:02:57.040
We don't actually see them that often

75
00:02:57.040 --> 00:02:59.030
when we're implementing them, until you get

76
00:02:59.030 --> 00:03:01.090
into really complex systems programming.

77
00:03:01.090 --> 00:03:04.040
The Mediator is really, really useful

78
00:03:04.040 --> 00:03:05.090
when you have lots of things you've got

79
00:03:05.090 --> 00:03:07.070
to talk to at one time,

80
00:03:07.070 --> 00:03:09.010
and you want to prevent them

81
00:03:09.010 --> 00:03:11.000
from talking to each other

82
00:03:11.000 --> 00:03:12.050
And that's why we would choose it.

83
00:03:12.050 --> 00:03:15.000
And this is sort of the basic strategy.

