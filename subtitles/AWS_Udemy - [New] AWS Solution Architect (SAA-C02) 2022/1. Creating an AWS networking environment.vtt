WEBVTT
1
00:00:00.030 --> 00:00:00.690
Welcome back.

2
00:00:00.750 --> 00:00:06.360
In this lesson, we are going to look to creating and it's working environment and we will understand

3
00:00:06.360 --> 00:00:13.980
the architecture need of the cafe and we will see how we can connect multiple networking environment

4
00:00:13.980 --> 00:00:18.090
to the Internet and how we can secure our network.

5
00:00:18.090 --> 00:00:23.580
We will learn how to design a network in each of us and build a VPC with subnets.

6
00:00:23.580 --> 00:00:30.510
And you will also learn how to connect in instances in your public and private subnet to the Internet.

7
00:00:30.660 --> 00:00:33.660
The cafe business has been steadily increasing.

8
00:00:33.780 --> 00:00:41.280
Sophia and Nicole have become friends with a few of the cafe regulars who are A.W. as consultants,

9
00:00:41.280 --> 00:00:45.540
and they have started to discuss the cafe current architecture.

10
00:00:45.540 --> 00:00:54.480
Olivia, one of the regulars and an Ideal Solutions architect, identified a need for the cafe's online

11
00:00:54.480 --> 00:00:55.620
business to scale.

12
00:00:55.650 --> 00:01:03.060
Scaling would require additional services to run the online ordering application, but the current subnets

13
00:01:03.060 --> 00:01:07.680
size is too small and cannot support this growth.

14
00:01:07.860 --> 00:01:14.640
Therefore, they will need to recreate some aspects of the network that the application runs in.

15
00:01:14.640 --> 00:01:20.280
On further review of the cafe's architecture, Olivia also noticed a vulnerability.

16
00:01:20.310 --> 00:01:25.590
The support that used to administer the application server is accessible to the Internet.

17
00:01:25.710 --> 00:01:31.470
Sophia explained that she and Nicole must be able to manage and maintain the server.

18
00:01:31.470 --> 00:01:39.720
Olivia advises them to set up a bastion house to reduce public access to the server and to make it more

19
00:01:39.810 --> 00:01:40.290
secure.

20
00:01:40.320 --> 00:01:45.750
In this lesson, we will understand how to create the best in host and we will use it to access our

21
00:01:45.750 --> 00:01:49.770
private EC2 instances in our private subnet.

22
00:01:49.830 --> 00:01:53.430
Now let us look to creating an easy networking environment.

23
00:01:53.520 --> 00:02:00.670
Amazon VPC property in a logically isolated section of the A.W. as a cloud where you can lunch, ideally

24
00:02:00.690 --> 00:02:08.400
as three sources in a virtual network that you define Amazon VPC gives you control over your virtual

25
00:02:08.400 --> 00:02:09.630
networking resources.

26
00:02:09.630 --> 00:02:16.470
You can select your own IP address range, create subnets and configure for our tables and network gateways.

27
00:02:16.470 --> 00:02:25.230
You can use both IPV four and IPV six in your VPC for securing access to resources and application.

28
00:02:25.410 --> 00:02:29.370
You can also customize the network configuration for your VPC.

29
00:02:29.370 --> 00:02:34.290
For example, you can create a public subnet for Europe servers that can access the public Internet.

30
00:02:34.530 --> 00:02:41.550
You can place your back in systems such as databases or application servers in a private subnet with

31
00:02:41.550 --> 00:02:43.410
no public internet access.

32
00:02:43.410 --> 00:02:50.910
You can use multiple layers of security to help control access to Amazon EC2 instances in each subnet.

33
00:02:50.970 --> 00:02:58.680
These security layers include security groups and network access control list, which we will understand

34
00:02:58.680 --> 00:03:02.130
in more details in this particular lesson.

35
00:03:02.400 --> 00:03:07.440
AVC Normally is associated with a single region.

36
00:03:07.470 --> 00:03:11.700
This means that the BBC cannot span multiple regions.

37
00:03:11.700 --> 00:03:19.860
However, ABC expands multiple availability zone in a single region so it can host supported resources

38
00:03:20.100 --> 00:03:23.910
from any availability zone within the same region.

39
00:03:23.910 --> 00:03:31.020
When you create of ABC, you provide a set of private IP addresses that you want in instances in your

40
00:03:31.020 --> 00:03:32.490
VPC to use.

41
00:03:32.490 --> 00:03:40.710
You specify this set of addresses as a I the roadblock, or I can ask this entire domain routing.

42
00:03:40.740 --> 00:03:50.040
So for example, if you given the IP address ten 0.0.0 slash 16, this is the primary IP Arab block

43
00:03:50.040 --> 00:03:51.150
of your VPC.

44
00:03:51.150 --> 00:03:59.220
This means you can assign a block size of slash of 28, which is the smallest two block size in Amazon

45
00:03:59.220 --> 00:04:03.210
VCs and the largest one is slash 16.

46
00:04:03.240 --> 00:04:11.250
Also Amazon VPC support AB four and IPV six and has different C IDR block size limits for each all VB

47
00:04:11.250 --> 00:04:15.990
CS and subnets must have an IP before see, idea or block.

48
00:04:15.990 --> 00:04:21.420
You can change this IP after the creation of your VPC.

49
00:04:21.420 --> 00:04:29.460
Amazon VPC can operate in a dual stack and your resources can communicate over IP before or IPV six

50
00:04:29.460 --> 00:04:33.360
or even using both IP protocols.

51
00:04:33.630 --> 00:04:40.650
The IPV for and IPV six addresses are independent of each other, so you must configure routing and

52
00:04:40.650 --> 00:04:49.440
security in your VPC separately for IPV four and IPV six, you can divide the ABC into one or more subnet.

53
00:04:49.440 --> 00:04:57.950
A subnet is a logical segment or a portion of your VPC IP address range where you can allocate a group

54
00:04:57.960 --> 00:04:58.860
of resources.

55
00:04:59.010 --> 00:04:59.670
And it is.

56
00:04:59.760 --> 00:05:05.680
Important to remember that a subnet are not isolation boundaries around your application.

57
00:05:05.730 --> 00:05:12.640
Instead, they are containers for routing policies which you will learn about in the next section.

58
00:05:12.660 --> 00:05:19.590
When you create a subnets, you specify AC, IP or a block of the subnet, which is a subnet of the

59
00:05:19.590 --> 00:05:20.310
VPC.

60
00:05:20.310 --> 00:05:21.720
See the other block?

61
00:05:21.930 --> 00:05:25.860
Now remember a subnet c IDR block cannot overlap.

62
00:05:25.950 --> 00:05:30.820
Each subnet must reside entirely within one availability zone.

63
00:05:30.840 --> 00:05:35.670
So each subnet should be associated with a single availability zone.

64
00:05:35.670 --> 00:05:39.780
No, the same ability zone can have one or more subnet.

65
00:05:40.050 --> 00:05:45.420
You can optionally add subnets in a local zone when you create a subnet in a local zone.

66
00:05:45.480 --> 00:05:52.950
The VPC is also extended to the local zone because VPC subnets on a map to a specific ability zone.

67
00:05:53.190 --> 00:06:00.930
Sovereignty placement is one way to ensure that your Amazon Echo instances are distributed across multiple

68
00:06:00.930 --> 00:06:09.300
location or they are multi azeez deployed AWB Reserve, the first four IP addresses and the last IP

69
00:06:09.300 --> 00:06:10.780
addresses in each subnets.

70
00:06:10.800 --> 00:06:11.730
The idea are block.

71
00:06:12.150 --> 00:06:22.650
So for example, in a subnet with AC, they are a block in the 0.0.0 slash 24 eight was reserved five

72
00:06:22.650 --> 00:06:23.910
IP addresses.

73
00:06:23.910 --> 00:06:28.260
The first one, which is the standard 02020, which is the network address.

74
00:06:28.260 --> 00:06:35.070
And we know this from the classical networking in a local area network that we always need to preserve

75
00:06:35.070 --> 00:06:43.140
the broadcast address, which is ten 0.0.255 and then its work address, which is standard 0.0.0.

76
00:06:43.140 --> 00:06:50.100
Now we need to also reserve the ten 0.0.1, which is the first IP in the subnet.

77
00:06:50.370 --> 00:06:57.540
And this is for local routing, which is the destination you configure when all these C2 in the same

78
00:06:57.540 --> 00:07:00.750
VPC in different subnets, they want to communicate.

79
00:07:01.050 --> 00:07:09.600
Also, we reserved ten 0202 to the DNS because every time you create an easy to inside the subnet,

80
00:07:09.600 --> 00:07:12.960
it will get a public DNS and private DNS.

81
00:07:13.200 --> 00:07:17.160
So we need a domain name system operate in that VPC.

82
00:07:17.310 --> 00:07:24.120
And the last one is ten 0.0.3, which you use normally for future use.

83
00:07:24.180 --> 00:07:29.730
When you configure any computer network, you need to consider the universal networking design.

84
00:07:29.730 --> 00:07:36.240
The principal create one subnet availability zone for each group of hosts that have a unique routing

85
00:07:36.240 --> 00:07:43.380
requirement or 80, or maybe classify them based on the services that you have, for example, frontend,

86
00:07:43.380 --> 00:07:44.580
backend and so on.

87
00:07:44.640 --> 00:07:51.270
Divide your VPC network range evenly across all availability zone in a single region.

88
00:07:51.300 --> 00:08:00.040
Do not allocate all network addresses at once and maybe create a size for your VPC that can accommodate

89
00:08:00.060 --> 00:08:03.180
a significant growth for the future.

90
00:08:03.240 --> 00:08:08.880
Ensure that your VPC need to arrange does not overlap with your organization.

91
00:08:08.880 --> 00:08:15.630
Other private network address is specifically when you have a hybrid cloud and you have an on a premises

92
00:08:15.630 --> 00:08:21.240
datacenter where you have some of the private IP is used and they want to communicate with resources

93
00:08:21.240 --> 00:08:21.960
in the cloud.

94
00:08:22.020 --> 00:08:27.780
When you design and create your networking, there are a limited number of use cases where a single

95
00:08:27.780 --> 00:08:30.120
VPC might be appropriate.

96
00:08:30.480 --> 00:08:36.000
For example, when you have a small single applications managed by a small team, when you are looking

97
00:08:36.000 --> 00:08:43.590
for high performance computing or a single VPC environment that has lower latency than one is spread

98
00:08:43.590 --> 00:08:45.390
across multiple VPC.

99
00:08:45.600 --> 00:08:52.920
When you are dealing with identity management impediment, a single VPC might provide best practices

100
00:08:53.010 --> 00:08:54.510
for most use cases.

101
00:08:54.510 --> 00:08:56.880
A multi VPC environment is required.

102
00:08:56.880 --> 00:09:02.760
You can create a multi VPC that within the same region or in different regions, and you can also create

103
00:09:02.760 --> 00:09:11.040
multiple BBC IDs in the same EWR account or in a different account in the multi VPC pattern.

104
00:09:11.040 --> 00:09:18.630
It's more suited when you have a single team or organization that maintains full control over the provisioning

105
00:09:18.630 --> 00:09:23.700
and the management of all resources in each application environment.

106
00:09:23.850 --> 00:09:29.190
For example, you have a team looking for production, a team looking for testing and a team looking

107
00:09:29.190 --> 00:09:29.730
for them.

108
00:09:29.790 --> 00:09:38.070
You can also create multiple VPC is in the same address account or in a different multiple accounts.

109
00:09:38.100 --> 00:09:45.780
Now this is normally referred to as the multiple account veterans, which are more suited for enterprise,

110
00:09:45.780 --> 00:09:49.620
customer or organization that they have multiple team split.

111
00:09:50.160 --> 00:09:55.770
You know, you consider an enterprise, a global company where they have, for example, a team in Ireland,

112
00:09:55.980 --> 00:09:58.740
a team in India and a team in the United States.

113
00:09:58.740 --> 00:09:58.950
And.

114
00:09:59.080 --> 00:10:05.740
Each of those teams, any kind of central control over their networking resources, and they want to

115
00:10:05.740 --> 00:10:11.830
have the full access as well with no limitation in their access.

116
00:10:11.950 --> 00:10:19.270
Be aware that Amazon BBC codes is five, BBC is per region and this is normally an exam in question.

117
00:10:19.330 --> 00:10:23.920
Now how we can connect your area of US networking environment to the Internet?

118
00:10:24.070 --> 00:10:30.220
The first services that you need is the Internet gateway, which can allow you a communication between

119
00:10:30.220 --> 00:10:34.010
the resources in your VPC and in the internet.

120
00:10:34.030 --> 00:10:40.120
Internet gateways are horizontally ski redundant and highly available by default.

121
00:10:40.210 --> 00:10:47.380
They provide you with a target that you can use in your routing table, and once you connect a subject

122
00:10:47.410 --> 00:10:53.500
to that target in that table, that subnet will be considered as a public subnet.

123
00:10:53.620 --> 00:10:59.560
When you use an out table, you can associate it with a subnet that you want to connect to the Internet.

124
00:10:59.560 --> 00:11:02.720
And our table normally contains a set of rules.

125
00:11:02.740 --> 00:11:05.560
All these rules are called routes.

126
00:11:05.650 --> 00:11:13.390
Each trout are basically used to control how the network traffic should be routed between your subnet

127
00:11:13.390 --> 00:11:16.090
and that targets in general.

128
00:11:16.360 --> 00:11:24.580
The main road table is created by the creation of the BBC wizard and it's only contains a single local

129
00:11:24.580 --> 00:11:30.820
route which can enable the communication between all your resources inside your VPC.

130
00:11:30.820 --> 00:11:33.550
You cannot modify the local route at our table.

131
00:11:33.760 --> 00:11:34.860
This is another example.

132
00:11:34.910 --> 00:11:40.630
Question When you launch an instance in the VPC, the look around automatically covers that instance.

133
00:11:40.630 --> 00:11:41.920
You don't need to add.

134
00:11:42.160 --> 00:11:44.170
Then you add distance to our table.

135
00:11:44.170 --> 00:11:50.080
You can create additional custom route tables for your VPC and we will see later on you might create

136
00:11:50.080 --> 00:11:57.280
multiple tables for each of these own to guarantee multi easy deployment and high level of availability.

137
00:11:57.280 --> 00:12:04.390
Each subnet in your VPC must be associated with at our table, which controls that outing of the subnet.

138
00:12:04.510 --> 00:12:11.950
If you don't explicitly associate a subnet with a particular table, the subnet is implicitly associated

139
00:12:12.130 --> 00:12:18.520
with and uses them in our table, a subject that can be associated with only one table at a time.

140
00:12:18.520 --> 00:12:22.180
But you can associate multiple subnets with the same table.

141
00:12:22.180 --> 00:12:28.720
You can create your custom tables for each subnet to enable granular routing for a destination.

142
00:12:28.900 --> 00:12:35.620
And as I said, a multi AC deployment where you want the round table to use multi internet gateways

143
00:12:35.620 --> 00:12:39.840
in each of these zone to send non-local traffic through the internet.

144
00:12:39.850 --> 00:12:48.580
Gateway, you must add, are out with a destination 000060 and the target of the traffic will be the

145
00:12:48.580 --> 00:12:50.970
Internet Gateway IED.

146
00:12:50.980 --> 00:12:57.880
You must also make sure that your instances have either public IP or elastic IP address and inactive

147
00:12:57.940 --> 00:13:05.320
IP address is a static and a public IPV four address that is designed for dynamic cloud computing.

148
00:13:05.320 --> 00:13:11.530
You can associate that the elastic IP address with any instance or elastic network interface for any

149
00:13:11.530 --> 00:13:13.330
VPC in your account.

150
00:13:13.330 --> 00:13:19.870
With an elastic IP address, you can mask the failure of an instance by rapidly remapping the addresses

151
00:13:20.020 --> 00:13:22.190
to another instances in your privacy.

152
00:13:22.210 --> 00:13:29.320
Associating the elastic IP address with the network interface has an advantage over associating it directly

153
00:13:29.320 --> 00:13:30.520
with the instances.

154
00:13:30.520 --> 00:13:36.520
You can move all of the attributes of the network interface from one instance to another in a single

155
00:13:36.530 --> 00:13:36.850
step.

156
00:13:36.850 --> 00:13:44.550
To connect your private resources that resides in a private subnet, you need to use any work addresses,

157
00:13:44.560 --> 00:13:51.550
translation or net gateway, and as Gateway enables instances in a private subnet to connect to the

158
00:13:51.550 --> 00:13:59.350
Internet or to other EWR services, it will also prevent any user from the Internet to access those

159
00:13:59.420 --> 00:14:02.950
private resources in your private subnet directly.

160
00:14:03.070 --> 00:14:09.340
To create an art gateway, you must specify a public subnet because the gateway has two interfaces one

161
00:14:09.340 --> 00:14:15.070
interface in the public subnet, and the other interface will be placed on the private subnet.

162
00:14:15.190 --> 00:14:20.320
You must also specify an elastic IP address to associate it within that gateway.

163
00:14:20.320 --> 00:14:23.890
Once you create that gateway, you must update that out table.

164
00:14:23.890 --> 00:14:31.510
Specifically, what we normally refer to as your private allowed table to associate that traffic with

165
00:14:31.510 --> 00:14:33.310
a target message.

166
00:14:33.370 --> 00:14:43.000
We are ready for any IP like 0.0.0.0 in instances in your private subnet can communicate with the internet

167
00:14:43.000 --> 00:14:46.060
once you have figured that out there.

168
00:14:46.120 --> 00:14:52.750
But this is where you give you an outbound connection from your private resources in the private subnet

169
00:14:52.750 --> 00:14:53.860
to the internet.

170
00:14:53.860 --> 00:14:58.960
But it won't and no any user in the internet to have an inbound communication they.

171
00:14:59.300 --> 00:15:00.470
With your private subnet.

172
00:15:00.590 --> 00:15:05.960
However, the resources that you have in a public subnet will be able to communicate with you with a

173
00:15:05.960 --> 00:15:10.340
private resources in your private subnet using the target local.

174
00:15:10.400 --> 00:15:17.390
Try to think whether we should place the in instances in those layers in a public or private subnet.

175
00:15:17.450 --> 00:15:22.910
If you look to datastore instances, you must likely put them in a private subnet to add an extra layer

176
00:15:22.910 --> 00:15:24.800
of security for batch processing.

177
00:15:24.800 --> 00:15:30.830
In instances, they are also more suited for private subnet back in instances also for private subnet

178
00:15:30.830 --> 00:15:32.660
and application instances.

179
00:15:32.900 --> 00:15:37.330
Most likely they will be used in public or private subnet depending on your set.

180
00:15:37.340 --> 00:15:43.190
If you have a application running behind a load balancer, then you must put them in private to understand

181
00:15:43.190 --> 00:15:44.220
the best in host.

182
00:15:44.240 --> 00:15:51.890
Consider this scenario you want to have an access to the EC2 instances that the resides in the private

183
00:15:51.890 --> 00:15:53.870
subnet in order to achieve that.

184
00:15:53.900 --> 00:15:58.910
You can create a bastion host and you please the machine host in a public subnet.

185
00:15:59.030 --> 00:16:05.450
So if you want to allow a connection from an extended network or from your PC to those Linux instances

186
00:16:05.450 --> 00:16:12.920
in a private subnet of your VPC via a secure shell or access it, you can use our Bastion host to mitigate

187
00:16:12.920 --> 00:16:19.400
the risk of allowing these extending a search connection to the instances in the private subnet.

188
00:16:19.410 --> 00:16:25.910
Amazon host typically runs on an easy too in a sense in a public subnet of your VPC.

189
00:16:26.000 --> 00:16:32.690
As you can see in this example, the Linux instances in the private subnet are in a security group that

190
00:16:32.690 --> 00:16:40.080
allows such access from the security group attached to the version host placed on the public subnet.

191
00:16:40.100 --> 00:16:47.120
In this case, Bash and host users connect to the bash in hall so they can connect to the Linux instances.

192
00:16:47.150 --> 00:16:51.890
Though you can adopt this architecture to meet your own requirements.

193
00:16:51.920 --> 00:16:58.550
The bash and host should be the only source of associated traffic to your instances.

194
00:16:58.580 --> 00:17:05.210
Now let us look how we can create a virtual private cloud in Amazon VPC.
