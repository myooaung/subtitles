1
00:00:00,060 --> 00:00:06,990
So how you will keep your fleet updated when you have an entire massive large infrastructure, how you

2
00:00:06,990 --> 00:00:15,030
can use and utilize the cloud formation in order to keep those updated resources matching your requirements

3
00:00:15,030 --> 00:00:16,080
and your business.

4
00:00:16,080 --> 00:00:18,950
Well, there is a few other services that can help us.

5
00:00:18,960 --> 00:00:24,820
Even if you use an infrastructure service, even if you use an infrastructure as a service tool like

6
00:00:24,850 --> 00:00:30,810
either risk defamation to create and maintain your resources, it will be very helpful to have another

7
00:00:30,810 --> 00:00:37,230
tool that you can use, for example, to address the ongoing needs of the configuration management of

8
00:00:37,230 --> 00:00:37,880
your company.

9
00:00:37,920 --> 00:00:43,920
These needs can happen both after the infrastructure, our provision or after that infrastructure is

10
00:00:43,920 --> 00:00:50,760
up and running, either because Systems Manager is a service that addresses this challenge in the system.

11
00:00:50,760 --> 00:00:57,060
Manager is a management service, is designed to be highly focused on automation, enable the configuration

12
00:00:57,060 --> 00:01:01,020
and management or system that run on a premises or in will.

13
00:01:01,530 --> 00:01:07,140
The systems manager enables you to identify the instances that you want to manage and then define the

14
00:01:07,140 --> 00:01:09,180
management task that you want to perform.

15
00:01:09,180 --> 00:01:15,570
In those instances, assistant manager is available at no cost and it can manage both your Amazon easy

16
00:01:15,570 --> 00:01:22,350
to and on your premises resources few task that you can accomplish using the systems manager, collecting

17
00:01:22,350 --> 00:01:28,320
a software inventory, applying operating system patches, creating systems image, configuring Microsoft

18
00:01:28,320 --> 00:01:30,150
Windows operating systems.

19
00:01:30,150 --> 00:01:36,000
So in the system manager, you can use it to update, manage and configure a fleet of AC two instance.

20
00:01:36,000 --> 00:01:43,770
And there is multiple commands that you can do via the system manager agent in an AC two or even if

21
00:01:43,770 --> 00:01:51,180
you have it installed on a premises server or a virtual machine, that systems manager agent guides

22
00:01:51,180 --> 00:01:54,810
is being installed by default in most Microsoft Windows servers.

23
00:01:54,860 --> 00:02:00,780
Am I and Linux am I in the U.S. like Ubuntu and Amazon Linux?

24
00:02:00,780 --> 00:02:04,530
You must manually install it in the agent in another.

25
00:02:04,530 --> 00:02:10,560
Easy to understand if you are using another scale or different operating system, a cloud formation

26
00:02:10,560 --> 00:02:17,400
works very well with defining of your cloud resources and integrate fully integrate with the system

27
00:02:17,400 --> 00:02:23,010
manager for automating within the guest operating system, another service that you can use and normally

28
00:02:23,010 --> 00:02:24,390
they ask about it in the exam.

29
00:02:24,390 --> 00:02:29,220
It is the ops works, it is a service for configuration manager.

30
00:02:29,220 --> 00:02:35,580
You can use it to automate how easy to instances are configured to deploy and manage is different versions

31
00:02:35,580 --> 00:02:42,490
of ops work and you need to understand the functionality of each one for the ideally as ops works for

32
00:02:42,810 --> 00:02:48,830
automate Jeff is a deployment software is a very famous deployment software in computer science guide.

33
00:02:48,840 --> 00:02:50,580
So you need to integrate.

34
00:02:50,580 --> 00:02:55,520
If you have an existing Jeff in your infrastructure, you can fully integrate with Upwork.

35
00:02:55,590 --> 00:02:58,290
So it's fully managed the automate server.

36
00:02:58,290 --> 00:03:05,520
We provide workflow automation for continuous deployment and automated testing for compliance and security.

37
00:03:05,520 --> 00:03:12,670
The second version of ops work come with Puppet, which is another large enterprise deployments area,

38
00:03:12,680 --> 00:03:15,090
but it is widely used in the industry.

39
00:03:15,090 --> 00:03:22,500
So Ops work for Puppet Enterprise provide us with managed puppet enterprise, server and slew of automation

40
00:03:22,500 --> 00:03:28,770
tools that provide workflow automation for orchestration, automated provisioning and visualization

41
00:03:28,770 --> 00:03:30,540
for traceability.

42
00:03:30,540 --> 00:03:36,180
You can define configurations for your server in a format that you can maintain and version like application

43
00:03:36,180 --> 00:03:36,780
source code.

44
00:03:36,780 --> 00:03:43,740
The last one is called Atelier as Upwork's Stacks, which is a configuration management service that

45
00:03:43,740 --> 00:03:47,910
helps you configure and operate the application of all kinds and sizes.

46
00:03:47,910 --> 00:03:53,190
By using Jeff, you can define the application's architecture and the specification of each component,

47
00:03:53,580 --> 00:03:59,790
including package, installation, software configuration and resources such as is storage.

48
00:03:59,790 --> 00:04:04,620
So in this example, we demonstrate how a basic application might be managed using it.

49
00:04:04,630 --> 00:04:09,780
We are also working stack and the fundamental unit of creation in almost all of the stack application

50
00:04:09,780 --> 00:04:10,890
is a stack.

51
00:04:10,890 --> 00:04:16,110
After the stack is created, you can add multiple layers to that a stack and you can build it out as

52
00:04:16,110 --> 00:04:19,770
a set of interacting layers of related functionality.

53
00:04:19,770 --> 00:04:25,470
In this example, we have a group of application servers, runs in an application server layer, and

54
00:04:25,470 --> 00:04:31,830
the application run behind an elastic load balancing which can be defined using a load balancing layer.

55
00:04:31,830 --> 00:04:38,910
So these include a front in the back end with the support of a relational database system which is also

56
00:04:38,910 --> 00:04:41,460
can be defined in the database.

57
00:04:41,970 --> 00:04:48,540
Out of this layer you can refer to multiple chef recipes if you are going to deploy and use Upwork in

58
00:04:48,540 --> 00:04:51,160
an enterprise and the production environment.

59
00:04:51,210 --> 00:04:58,830
Last thing is the ops work also work with cloud formation so you can use the two technology and they

60
00:04:58,830 --> 00:04:59,970
complement each other.

61
00:05:00,150 --> 00:05:05,640
You can use a cloud formation template to create the resources of your infrastructure, including VPC,

62
00:05:05,730 --> 00:05:06,390
for example.

63
00:05:06,390 --> 00:05:11,880
And you could then use another SQL formation template to create the UPS work that that will be deployed

64
00:05:11,880 --> 00:05:12,740
in that BBC.

65
00:05:12,750 --> 00:05:17,780
So both in the rest of the formation, the stacks are created in your account and you can use the ops

66
00:05:17,790 --> 00:05:23,310
work to manage the application in section five of the dimension of your infrastructure.

67
00:05:23,310 --> 00:05:27,150
We are going to look through that beanstalk and we have discussed Beanstalk before.

68
00:05:27,150 --> 00:05:31,500
So just to quickly to review it, you can manage the infrastructure around application deployment,

69
00:05:31,500 --> 00:05:37,770
which is a difficult task, it will be a time consuming and you might have a lack of consistency.

70
00:05:37,770 --> 00:05:41,580
Elastic Beanstalk is another idea as compute service option.

71
00:05:41,580 --> 00:05:47,160
It is a platform as a service offering the facilities for that quickly augment the scaling and management

72
00:05:47,160 --> 00:05:48,600
of your web application.

73
00:05:48,930 --> 00:05:54,660
It supports multiple languages like Java dot net, BHP, not just Python Ruby.

74
00:05:54,660 --> 00:05:56,070
Go and look.

75
00:05:56,070 --> 00:06:01,470
All you need to do is to upload your code to the Elastic Beanstalk and it will be deployed automatically

76
00:06:01,470 --> 00:06:09,030
using one of those web servers, Apache Engine, X Passenger Homer and the alias, the infamous Microsoft

77
00:06:09,030 --> 00:06:09,900
Web server.

78
00:06:09,900 --> 00:06:13,710
In this example here, we can choose two types of embodiment.

79
00:06:13,710 --> 00:06:19,440
When you work with Elastic Beanstalk, we can have a single instance which enables you to launch a single

80
00:06:19,440 --> 00:06:23,880
easy to an instance, and it does not include load balancing or automatic scaling.

81
00:06:23,880 --> 00:06:30,180
The other option is, as you can see in this example here, you can launch multiple easy to in instances

82
00:06:30,180 --> 00:06:34,860
and this is will come with load balancing and ultimate scaling and you can refer back to the elastic

83
00:06:34,860 --> 00:06:40,020
means or configuration page in order to monitor the scalability and the availability of your application

84
00:06:40,020 --> 00:06:45,870
and to tweak to tweak it as well by defining the minimum, the maximum and the desired capacity of your

85
00:06:45,870 --> 00:06:46,620
auto scaling.

86
00:06:47,070 --> 00:06:52,470
It's very important to choose the right automation solution that suits your infrastructure needs.

87
00:06:52,470 --> 00:06:58,920
So there is multiple services that are discussed in this module that can help you to achieve high level

88
00:06:58,920 --> 00:07:03,480
of automation and flexibility in running your infrastructure as a code.

89
00:07:03,480 --> 00:07:08,820
So make sure to review the Elastic Beanstalk, which is an easy to use application service for building

90
00:07:08,820 --> 00:07:15,600
web applications along after work, which enable you to integrate current deployment and integration

91
00:07:15,600 --> 00:07:21,180
services like Jeff and Puppet, both Elastic Beanstalk and Observer provide the higher level of service

92
00:07:21,180 --> 00:07:25,680
than authoring and maintaining your address confirmation template to create the stack.

93
00:07:25,800 --> 00:07:31,380
Remember as well, you can use TerraForm as a third party tool which is fully integrated with Adobe

94
00:07:31,680 --> 00:07:32,400
Services.
