1
00:00:00,120 --> 00:00:00,600
All right.

2
00:00:00,750 --> 00:00:03,660
In this section, we are going to look to multiple accounts.

3
00:00:03,690 --> 00:00:06,990
There is two architecture pattern when you're using a WAC.

4
00:00:07,020 --> 00:00:14,850
There is the multi VPC pattern in a single account and there is the multi account where a VPC in each

5
00:00:14,850 --> 00:00:17,410
account will be related.

6
00:00:17,550 --> 00:00:23,070
You can use a WAC to support different teams and departments in your organization and you can choose

7
00:00:23,070 --> 00:00:31,770
between those two partnering to isolate and separate the resources that each team uses in the multiple

8
00:00:31,770 --> 00:00:36,840
virtual private cloud or the multi VPC account in a single AWG account.

9
00:00:37,170 --> 00:00:46,140
You have a centralized control and management with a minimum overhead where you could choose to use

10
00:00:46,140 --> 00:00:47,520
a single Adobe account.

11
00:00:47,520 --> 00:00:53,850
And normally we use them when we have a small organization where we tend to create multiple accounts

12
00:00:53,850 --> 00:00:55,560
for these organization.

13
00:00:57,220 --> 00:01:04,960
Now the second pattern, when you have a customer, they want to use their separate accounts and you

14
00:01:04,960 --> 00:01:12,820
will have an account for div and production and each they usually associated with their own consolidated

15
00:01:12,820 --> 00:01:13,300
billing.

16
00:01:14,330 --> 00:01:22,520
This multi account powertrain enables them to separate different type of resources and provide them

17
00:01:22,520 --> 00:01:24,200
with some security benefits.

18
00:01:25,010 --> 00:01:30,950
If your business maintains separate environments for production dev and test, you could configure three

19
00:01:31,020 --> 00:01:34,910
AWG accounts and have one account for each environment.

20
00:01:35,330 --> 00:01:42,740
If you have multiple autonomous departments, you could also create a separate account for each organization.

21
00:01:44,210 --> 00:01:52,990
So using the multiple accounts is more efficient a strategy than creating a single WAC account for common

22
00:01:53,060 --> 00:01:54,140
project resources.

23
00:01:54,920 --> 00:02:00,830
So those common resources might include domain name system, Microsoft Active Directory Content Management

24
00:02:00,830 --> 00:02:01,340
System.

25
00:02:01,670 --> 00:02:06,350
You could also separate accounts for the autonomous subprojects or departments.

26
00:02:06,470 --> 00:02:14,000
This strategy enables you to assign permissions and policies under each department or project account

27
00:02:14,300 --> 00:02:19,250
and grant access to resources across all accounts.

28
00:02:20,300 --> 00:02:23,570
There is a few challenges for managing multiple accounts.

29
00:02:24,020 --> 00:02:29,210
You must determine how to effectively manage security across all your accounts.

30
00:02:29,570 --> 00:02:36,050
And if you replicate the policies that you define across all accounts to ensure consistency, it could

31
00:02:36,140 --> 00:02:40,450
involve custom automation or manual effort or both.

32
00:02:41,030 --> 00:02:47,900
You might be consistently asked to create more accounts which take time to manually create these accounts.

33
00:02:47,930 --> 00:02:54,470
It's also might be difficult to track all the accounts and the purpose of each account.

34
00:02:54,770 --> 00:03:05,810
It can also be very challenging to check and track the costs of each account in a large, big enterprise

35
00:03:05,810 --> 00:03:06,710
organisation.

36
00:03:08,050 --> 00:03:15,460
So you might also want to achieve that kind of centralized control, which is needed to ensure consistency.

37
00:03:16,240 --> 00:03:23,350
FWC offers a service that is designed to address these management challenges, and this service is called

38
00:03:23,350 --> 00:03:24,790
Italy's organization.

39
00:03:25,990 --> 00:03:32,610
This organization is an entity that you create to consolidate its central view, manage all your A.W.

40
00:03:32,610 --> 00:03:39,210
s account and you can determine the functionality of an organisation is through the feature of that

41
00:03:39,210 --> 00:03:44,520
sit by you and you can enable them to access a specific service.

42
00:03:44,520 --> 00:03:49,520
You can manage the money policies for multiple accounts and you can do service to create the groups

43
00:03:49,540 --> 00:03:50,130
of accounts.

44
00:03:50,400 --> 00:03:57,060
And then you can attach policies to a group so that the correct policies are applied across the accounts.

45
00:03:58,480 --> 00:04:04,270
You could use the organization API to create new accounts and to add accounts to group.

46
00:04:05,020 --> 00:04:10,710
Those policies that you attached to the group are automatically applied to the new account.

47
00:04:10,750 --> 00:04:16,480
You can also set up a single payment method for all the accounts in your organization.

48
00:04:16,690 --> 00:04:20,320
And this happens guys using the alias organization.

49
00:04:21,160 --> 00:04:28,180
With Consolidated Billing, you can see a combined view of charges that are incurred by all your accounts,

50
00:04:28,180 --> 00:04:31,630
and you can manage the use of the services at the API level.

51
00:04:32,080 --> 00:04:38,560
You can apply a policy to a group of accounts that will only allow IAM users in those accounts to read

52
00:04:38,680 --> 00:04:41,080
data from S3 bucket.

53
00:04:41,650 --> 00:04:44,320
So here's an example of either organization.

54
00:04:44,320 --> 00:04:49,420
So we can see that we have multiple accounts each account.

55
00:04:49,420 --> 00:04:57,710
They have an access to a specific service so we can create an organizational unit for the internal I.T,

56
00:04:57,760 --> 00:05:01,240
for the engineering, for the dev and for production.

57
00:05:01,960 --> 00:05:10,450
Each organizational unit can be assigned to an account, a specific member or user or a group account.

58
00:05:10,960 --> 00:05:19,090
And now you can define a service control policy that will apply a specific permission restrictions to

59
00:05:19,090 --> 00:05:21,700
specific member accounts.

60
00:05:23,360 --> 00:05:31,520
Then you attach that service control policy to the root or the organizational unit or a specific account.

61
00:05:31,760 --> 00:05:38,060
So pay attention, guys, that the service control policy is going to be attached or it could be attached

62
00:05:38,300 --> 00:05:42,200
to a root or organizational unit or a specific account.

63
00:05:42,290 --> 00:05:45,600
There is a few characteristics for the service control policy.

64
00:05:45,620 --> 00:05:53,060
It will enable you to control which services are accessible to IAM, user or the group of user.

65
00:05:53,600 --> 00:05:59,360
If you have a specific policy that you want to apply across multiple accounts, it will be much easier

66
00:05:59,360 --> 00:06:06,290
to define those policy inside of this control policy and then replicate those permission settings into

67
00:06:06,290 --> 00:06:08,780
IAM policy documents in each account.

68
00:06:09,680 --> 00:06:12,110
The Service control policy should be used with.

69
00:06:12,110 --> 00:06:17,690
I am policies that are defined in each individual account and you can think of the service control policy

70
00:06:17,690 --> 00:06:24,260
as providing general boundaries on the services engine repair automation that users should be allowed

71
00:06:24,260 --> 00:06:26,090
or denied access to.

72
00:06:27,290 --> 00:06:35,120
Then you can use I am policies to set more examples of access that are specific to each individual.

73
00:06:36,040 --> 00:06:42,490
You can also through the service control policy that a block or deny access to a certain services.

74
00:06:42,730 --> 00:06:48,910
And you can also define a service control policy that allow access to asset services.

75
00:06:49,330 --> 00:06:55,510
You might decide to create a service control policy that enforces that tagging of resources.

76
00:06:55,840 --> 00:07:03,790
By doing so, your tagging strategy for access, control or cost allocation can remain effective when

77
00:07:03,790 --> 00:07:08,260
in your resources are created in your account.

78
00:07:09,140 --> 00:07:15,920
And this is will take us to the challenge lap controlling individuals account access by using IM.

79
00:07:17,100 --> 00:07:23,940
So after speaking with Matthew about the cafe's infrastructure, Sophia realized that she must address

80
00:07:23,940 --> 00:07:29,850
some basic security concerns about the way that the cafe staff has been using the AWB accounts.

81
00:07:29,880 --> 00:07:34,260
The cafe is now large enough for the team members who build, maintain or access.

82
00:07:34,260 --> 00:07:42,300
Applications on AWB are specialising into roles such as developer or database administrator.

83
00:07:43,170 --> 00:07:48,750
They haven't made an effort to clearly defined what level of access each user should have based on their

84
00:07:48,750 --> 00:07:51,240
roles and responsibilities.

85
00:07:51,810 --> 00:07:55,530
So what are the tasks that we want to do in this lab?

86
00:07:56,190 --> 00:08:00,120
First, we want to configure an image group with policies and IM user.

87
00:08:00,420 --> 00:08:05,130
We want to look in as Nicole and testing the access of that user.

88
00:08:05,370 --> 00:08:12,360
Then we will configure an IM for database administrator user access and they want to log in as a database

89
00:08:12,360 --> 00:08:18,000
administrator and resolving the database connectivity issues if there is any.

90
00:08:18,950 --> 00:08:24,860
We will also use the I Am policy simulator for debugging, creating and troubleshooting a custom.

91
00:08:24,860 --> 00:08:28,820
I am policy with the aid of the visual editor.

92
00:08:29,630 --> 00:08:34,030
The final product of this lab is going to look like this.

93
00:08:34,040 --> 00:08:34,880
You will have.

94
00:08:36,100 --> 00:08:40,840
An App developers group and Adobe Admin a group.

95
00:08:40,850 --> 00:08:48,130
We want to make sure that both user Olivia and Nicole they have a proper access using the proper IAM

96
00:08:48,130 --> 00:08:48,700
policy.

97
00:08:48,700 --> 00:08:53,830
And don't forget the cafe rule which needs to be attached to the AC two instance.

98
00:08:54,070 --> 00:08:57,610
So you will use the cloud nine with easy to, in a sense, as a dev machine.

99
00:08:58,610 --> 00:09:05,450
Then you only create a production machine out of this first easy in this sense, and then you will share

100
00:09:05,450 --> 00:09:14,270
it with another user to see if they will be having the proper access to the ADRs where the media DB

101
00:09:14,600 --> 00:09:16,250
is currently running.

102
00:09:17,830 --> 00:09:25,540
This lab should take you about 80 minutes by this we finished module eight, and in this module there

103
00:09:25,540 --> 00:09:27,700
is a few things you need to pay attention to.

104
00:09:27,910 --> 00:09:33,190
We want to explain the purpose of the identity and access management users, groups and roles, the

105
00:09:33,190 --> 00:09:36,040
difference between roles and users.

106
00:09:36,850 --> 00:09:43,180
You should have the ability to describe how to allow user federation within an architecture to increase

107
00:09:43,180 --> 00:09:43,960
security.

108
00:09:44,470 --> 00:09:52,120
You want to recognise how in the organization service control policies increase security within an architecture

109
00:09:52,510 --> 00:09:54,820
in a large organisation.

110
00:09:55,090 --> 00:10:01,480
And we want to describe how to manage multiple this account and how we can configure and users.
