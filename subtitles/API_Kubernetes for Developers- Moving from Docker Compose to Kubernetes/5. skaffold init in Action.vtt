WEBVTT
1
00:00:01.040 --> 00:00:02.690
[Autogenerated] scaffolds a lot of fun once you get

2
00:00:02.690 --> 00:00:04.170
used to some of the key command.

3
00:00:04.170 --> 00:00:07.440
So let's take a look at Scaffold in Action.

4
00:00:07.440 --> 00:00:07.600
Now,

5
00:00:07.600 --> 00:00:09.450
The project we're gonna use in this particular

6
00:00:09.450 --> 00:00:11.280
demonstration is one you've already seen.

7
00:00:11.280 --> 00:00:13.260
But here's where you can get to the GitHub.

8
00:00:13.260 --> 00:00:17.350
Repo GitHub dot com slash Dan Wallen Angular dash

9
00:00:17.350 --> 00:00:21.140
jump start So let's jump on in here.

10
00:00:21.140 --> 00:00:24.240
So coming on into the Angular jumpstart project,

11
00:00:24.240 --> 00:00:27.520
this project again has two main components to it.

12
00:00:27.520 --> 00:00:32.140
We have a Node.js server and we have an Angular application.

13
00:00:32.140 --> 00:00:34.690
Now there's two different containers than that need to be run,

14
00:00:34.690 --> 00:00:37.770
which isn't super complex, but it's good for this demonstration.

15
00:00:37.770 --> 00:00:38.270
Plus,

16
00:00:38.270 --> 00:00:41.290
I'm gonna show you some other benefits of scaffold and some tricks

17
00:00:41.290 --> 00:00:45.470
you need to know in cases where maybe your images take a little bit

18
00:00:45.470 --> 00:00:48.540
longer to build than you wanna wait for.

19
00:00:48.540 --> 00:00:51.470
So the first thing is, when you come into the read me,

20
00:00:51.470 --> 00:00:52.740
you'll see I have that here.

21
00:00:52.740 --> 00:00:56.180
There's a section on running with Scaffold and I provide

22
00:00:56.180 --> 00:00:58.060
some information about how to get started.

23
00:00:58.060 --> 00:01:01.950
So, for example, if you already had your kubernetes manifest files,

24
00:01:01.950 --> 00:01:05.970
I showed the dash case which and then I'm also showing how we can reference

25
00:01:05.970 --> 00:01:10.340
the two Docker files that we're gonna need to work with now,

26
00:01:10.340 --> 00:01:11.170
coming on down.

27
00:01:11.170 --> 00:01:14.750
I also show how we can use the dash dash composed file with

28
00:01:14.750 --> 00:01:19.080
the Docker Compose YAML file path along with the artifacts

29
00:01:19.080 --> 00:01:21.340
for the Docker files as well.

30
00:01:21.340 --> 00:01:24.500
This would be used again if you want to convert your Docker Compose

31
00:01:24.500 --> 00:01:29.020
services into Kubernetes manifest files and that uses that composed

32
00:01:29.020 --> 00:01:31.640
tool that we talked about earlier.

33
00:01:31.640 --> 00:01:34.080
So let's go ahead and get started by showing how to

34
00:01:34.080 --> 00:01:35.510
use this and kind of what it does.

35
00:01:35.510 --> 00:01:40.510
So I'm gonna run these exact commands and I already have my Docker Compose file.

36
00:01:40.510 --> 00:01:42.860
You'll see it here as a quick review.

37
00:01:42.860 --> 00:01:47.540
It has an engine x service, and if we scroll on down, it has a node services.

38
00:01:47.540 --> 00:01:47.910
Well,

39
00:01:47.910 --> 00:01:51.630
that's going to serve as the back end API that Angular or

40
00:01:51.630 --> 00:01:53.860
react or whatever it was would call into.

41
00:01:53.860 --> 00:01:57.040
But in this case, it's an Angular application.

42
00:01:57.040 --> 00:01:59.770
So the first thing I'm gonna do is let's go ahead and grab our

43
00:01:59.770 --> 00:02:02.140
scaffold in it and give it a composed file.

44
00:02:02.140 --> 00:02:04.240
Now, I'm gonna add one more switch on here,

45
00:02:04.240 --> 00:02:06.910
which we didn't talk about but you might use it.

46
00:02:06.910 --> 00:02:08.440
Dash href.

47
00:02:08.440 --> 00:02:12.940
And this is the name of these scaffold dot YAML file.

48
00:02:12.940 --> 00:02:15.820
Now you'll notice that already have a scaffold.

49
00:02:15.820 --> 00:02:17.560
IT YAML file in the project.

50
00:02:17.560 --> 00:02:18.570
You'll see it right here.

51
00:02:18.570 --> 00:02:22.310
And we'll look at that coming up, but I'm gonna go ahead and make another one.

52
00:02:22.310 --> 00:02:28.000
Let's just call this one scaffold test .NET XAML and we'll go

53
00:02:28.000 --> 00:02:31.040
ahead and enter this first part of the command.

54
00:02:31.040 --> 00:02:32.600
Now for the second one.

55
00:02:32.600 --> 00:02:36.540
We'll go ahead and input are artifact.

56
00:02:36.540 --> 00:02:40.120
But I'm gonna change this to a more production type

57
00:02:40.120 --> 00:02:42.640
image that has a multi stage build.

58
00:02:42.640 --> 00:02:44.850
And then I'll explain why we're going to also look at

59
00:02:44.850 --> 00:02:47.030
this Dev version of the Docker file.

60
00:02:47.030 --> 00:02:49.340
So let's go ahead and enter that.

61
00:02:49.340 --> 00:02:54.340
And then finally, we have our last one, which is our no Docker file.

62
00:02:54.340 --> 00:02:54.770
That one.

63
00:02:54.770 --> 00:02:59.140
We're gonna leave as is, and we'll go ahead and enter that one.

64
00:02:59.140 --> 00:03:03.500
And now what it will do is actually generate are manifest files for kubernetes.

65
00:03:03.500 --> 00:03:06.260
You can see those over here and then it's gonna say,

66
00:03:06.260 --> 00:03:12.350
All right, Well, do you want this Yamil to become your YAML file scaffold test?

67
00:03:12.350 --> 00:03:16.720
.NET XAML I'll say yes in this case.

68
00:03:16.720 --> 00:03:21.440
Now, I'm probably gonna delete what they generate because I already have these.

69
00:03:21.440 --> 00:03:30.340
We'll go ahead and delete these files, and we'll delete this last one here.

70
00:03:30.340 --> 00:03:30.910
All right.

71
00:03:30.910 --> 00:03:33.830
And now what we're gonna do is let's take a look at the

72
00:03:33.830 --> 00:03:37.540
scaffolding file that generates scaffold test.

73
00:03:37.540 --> 00:03:38.900
So the first thing is notice.

74
00:03:38.900 --> 00:03:43.640
We have an image we're gonna need to build internet Angular jumpstart,

75
00:03:43.640 --> 00:03:47.030
and then those that has a context of dot Docker.

76
00:03:47.030 --> 00:03:50.140
Okay, well, that works, because if we come on up,

77
00:03:50.140 --> 00:03:52.180
you notice that the top I have a docker,

78
00:03:52.180 --> 00:03:56.170
and then I have these Docker files Now, this context,

79
00:03:56.170 --> 00:03:58.950
though, becomes what it watches for source code changes.

80
00:03:58.950 --> 00:04:03.060
So what I'm gonna do is change that to just dot and then up here,

81
00:04:03.060 --> 00:04:06.240
say dot Docker slash to change that one.

82
00:04:06.240 --> 00:04:09.480
I'm gonna do the same thing here that we wanna watch four

83
00:04:09.480 --> 00:04:14.310
files here and then we'll do Docker now,

84
00:04:14.310 --> 00:04:18.700
because this particular project has our Angular code and at

85
00:04:18.700 --> 00:04:20.300
the very bottom here we have a server.

86
00:04:20.300 --> 00:04:22.330
JsRender are Node.js code,

87
00:04:22.330 --> 00:04:27.560
and that's all in the same folder than any code change will trigger the image

88
00:04:27.560 --> 00:04:30.450
to be rebuilt but I'm gonna show you a few tricks here.

89
00:04:30.450 --> 00:04:31.740
That we can do.

90
00:04:31.740 --> 00:04:35.030
So the next thing we're gonna do is now that we have that I'm

91
00:04:35.030 --> 00:04:40.110
gonna change this as well to the actual manifest location and

92
00:04:40.110 --> 00:04:41.160
you're gonna notice up top.

93
00:04:41.160 --> 00:04:43.440
I have a k A s.

94
00:04:43.440 --> 00:04:45.150
Now, rather than typing that,

95
00:04:45.150 --> 00:04:47.500
I'm gonna come into the one already have for you and

96
00:04:47.500 --> 00:04:51.640
just copy in the manifest here.

97
00:04:51.640 --> 00:04:53.700
And what this will do is say, Alright,

98
00:04:53.700 --> 00:04:56.540
instead of going to the files it generated,

99
00:04:56.540 --> 00:04:59.920
go ahead and go to the .NET CSS folder and grab.

100
00:04:59.920 --> 00:05:07.000
Although XAML files Okay, so now that we've seen the scaffolding Nick cmdlet, take a look at a few other commands.

