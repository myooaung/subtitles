WEBVTT
1
00:00:00.940 --> 00:00:02.660
[Autogenerated] Now let's take a look at how we can use the

2
00:00:02.660 --> 00:00:06.380
composed tool that we saw earlier to convert this project code

3
00:00:06.380 --> 00:00:10.400
with Dan Docker services from Docker Compose services to the

4
00:00:10.400 --> 00:00:13.540
different kubernetes resource files.

5
00:00:13.540 --> 00:00:15.320
So coming back into the project,

6
00:00:15.320 --> 00:00:18.310
the first thing I need to do is set to environment variables.

7
00:00:18.310 --> 00:00:21.640
And we did this earlier, so I'm gonna go through this pretty quickly.

8
00:00:21.640 --> 00:00:23.670
But Docker Compose needs these.

9
00:00:23.670 --> 00:00:25.710
If we scroll down just a little bit,

10
00:00:25.710 --> 00:00:29.540
you'll see these environment variables are embedded into our are XAML.

11
00:00:29.540 --> 00:00:31.040
So I got to set those.

12
00:00:31.040 --> 00:00:33.390
Now we're gonna be in PowerShell in this example,

13
00:00:33.390 --> 00:00:35.740
so we're gonna use that technique again.

14
00:00:35.740 --> 00:00:37.250
But if you're on Mac or Linux,

15
00:00:37.250 --> 00:00:44.240
you could just do the export that you see so we'll do the PowerShell way.

16
00:00:44.240 --> 00:00:44.940
All right?

17
00:00:44.940 --> 00:00:49.840
And now that those are set we can, go ahead and run the composed cmdlet.

18
00:00:49.840 --> 00:00:51.140
So before we do that,

19
00:00:51.140 --> 00:00:55.040
let's review the services again that we have that are going to be converted.

20
00:00:55.040 --> 00:00:58.180
So we have moving on down and engine X,

21
00:00:58.180 --> 00:01:06.340
we have knowed and we have mongo and red is you'll see red is right there.

22
00:01:06.340 --> 00:01:09.610
So the first thing is, let's make sure that composes installed.

23
00:01:09.610 --> 00:01:10.700
We saw that earlier.

24
00:01:10.700 --> 00:01:14.050
It's very easy to get installed on Mac, Linux or Windows,

25
00:01:14.050 --> 00:01:18.340
so I'm just gonna hit, compose center and looks good.

26
00:01:18.340 --> 00:01:20.350
We want to run the convert command.

27
00:01:20.350 --> 00:01:25.060
So let's do composed, convert dash H and review the flags.

28
00:01:25.060 --> 00:01:29.080
So we need cache F If we had an alternate composed file names such as

29
00:01:29.080 --> 00:01:33.010
Docker Compose Prod or some other name that you're using in this case,

30
00:01:33.010 --> 00:01:36.840
I don't technically need it, but I'm gonna go ahead and add it.

31
00:01:36.840 --> 00:01:39.370
And then if we move on up, we'll have dash Oh,

32
00:01:39.370 --> 00:01:41.800
for where we want to write the output.

33
00:01:41.800 --> 00:01:42.430
And then, of course,

34
00:01:42.430 --> 00:01:44.820
we talked about some others you can do standard out you

35
00:01:44.820 --> 00:01:48.740
confined volume types and all kinds of fun.

36
00:01:48.740 --> 00:01:52.440
So we'll go ahead and do compose, convert.

37
00:01:52.440 --> 00:01:55.450
And then I'm gonna do dash just to show it we can do

38
00:01:55.450 --> 00:02:00.930
Docker Compose XAML and then dash Oh, where do we wanna put it?

39
00:02:00.930 --> 00:02:04.220
So I'm gonna say we want to go to a local folder and I called it output.

40
00:02:04.220 --> 00:02:06.440
You'll notice this is currently empty,

41
00:02:06.440 --> 00:02:10.480
but that's where we're gonna dump the XAML output and that's it.

42
00:02:10.480 --> 00:02:11.200
So we can hit.

43
00:02:11.200 --> 00:02:13.590
Enter let it do its work,

44
00:02:13.590 --> 00:02:18.440
and then we're going to compare a few of these to show you what it generates.

45
00:02:18.440 --> 00:02:22.840
All right, so let's close these,

46
00:02:22.840 --> 00:02:25.880
and we're gonna come on into our output folder here and

47
00:02:25.880 --> 00:02:28.210
you'll notice it generated quite a bit for us.

48
00:02:28.210 --> 00:02:30.140
Big time saver.

49
00:02:30.140 --> 00:02:33.340
So let's go into the engine next deployment,

50
00:02:33.340 --> 00:02:36.030
and then I'm gonna go into the final version,

51
00:02:36.030 --> 00:02:41.440
and I'm gonna drag that over and we'll compare the side by side.

52
00:02:41.440 --> 00:02:44.240
All right, let's look at what was changed here.

53
00:02:44.240 --> 00:02:48.140
So first off, you'll notice Starting right at the top.

54
00:02:48.140 --> 00:02:51.510
We have our metadata and our annotations,

55
00:02:51.510 --> 00:02:55.870
and I didn't need those, so I took pretty much all that out right there.

56
00:02:55.870 --> 00:02:57.720
You'll see off to the right.

57
00:02:57.720 --> 00:03:02.410
I also simplify the labels, and I just haven't app in genetics.

58
00:03:02.410 --> 00:03:03.010
Of course,

59
00:03:03.010 --> 00:03:06.130
this name right here would be whatever your company naming

60
00:03:06.130 --> 00:03:09.340
scheme might be for your different deployment,

61
00:03:09.340 --> 00:03:10.760
you might have a specific rule.

62
00:03:10.760 --> 00:03:14.840
You have to follow, for example, but now you can easily change that.

63
00:03:14.840 --> 00:03:16.230
Now, moving on down,

64
00:03:16.230 --> 00:03:19.430
you'll notice that I also simplify the match labels here

65
00:03:19.430 --> 00:03:21.430
instead of Iowa composed services again.

66
00:03:21.430 --> 00:03:23.440
I just did app, _____ NICs.

67
00:03:23.440 --> 00:03:27.050
And then if we move on down to our spec, you could see right above it.

68
00:03:27.050 --> 00:03:28.130
We have our template app.

69
00:03:28.130 --> 00:03:28.860
VPNs Next.

70
00:03:28.860 --> 00:03:31.440
Now they have quite a bit more.

71
00:03:31.440 --> 00:03:34.540
They have metadata and in their labels.

72
00:03:34.540 --> 00:03:34.880
You'll see.

73
00:03:34.880 --> 00:03:37.140
I just changed this one here,

74
00:03:37.140 --> 00:03:41.640
and I got rid of the label I wasn't using right up above,

75
00:03:41.640 --> 00:03:42.380
moving on down.

76
00:03:42.380 --> 00:03:42.870
Further.

77
00:03:42.870 --> 00:03:45.090
You'll notice the container comparison here.

78
00:03:45.090 --> 00:03:47.840
If we kind of line these up best we can.

79
00:03:47.840 --> 00:03:49.120
The image is the same.

80
00:03:49.120 --> 00:03:50.220
The ports are the same.

81
00:03:50.220 --> 00:03:53.400
Everything that's pretty critical is the same now.

82
00:03:53.400 --> 00:03:54.980
I could certainly enhance this,

83
00:03:54.980 --> 00:03:58.650
though we might add resource limits such as our memory

84
00:03:58.650 --> 00:04:01.740
Max and CPU Max and things like that.

85
00:04:01.740 --> 00:04:04.860
I change the image pol policy to, if not present.

86
00:04:04.860 --> 00:04:08.700
You may or may not need that, and other than that,

87
00:04:08.700 --> 00:04:10.760
I stripped out the other things you'll see over here.

88
00:04:10.760 --> 00:04:15.140
The volumes and all the service account name the restart policy.

89
00:04:15.140 --> 00:04:21.240
But those maybe things you need really depends on your set up.

90
00:04:21.240 --> 00:04:26.040
Now let's go back in and let's do the same thing now for note,

91
00:04:26.040 --> 00:04:29.630
so we'll add that one and then we'll compare it to our no deployment.

92
00:04:29.630 --> 00:04:33.140
That's the final one.

93
00:04:33.140 --> 00:04:35.680
And it's gonna be the same exact story.

94
00:04:35.680 --> 00:04:38.010
Except in this case, there's gonna be a slight tweak.

95
00:04:38.010 --> 00:04:38.140
Now,

96
00:04:38.140 --> 00:04:43.370
the first thing is you notice I have a config map because this particular

97
00:04:43.370 --> 00:04:45.810
environment variable That would be said in this case,

98
00:04:45.810 --> 00:04:49.340
nodemon er score environment to production.

99
00:04:49.340 --> 00:04:54.440
It's only used by this particular deployment, so I chose to put it in this file.

100
00:04:54.440 --> 00:04:56.660
You may want it in a separate file.

101
00:04:56.660 --> 00:04:58.540
That's what they did.

102
00:04:58.540 --> 00:05:03.160
Now I also stripped out all the metadata again and I simplified the label.

103
00:05:03.160 --> 00:05:08.240
You'll see iOS compose service versus just app Note.

104
00:05:08.240 --> 00:05:10.550
Aside from that, if we come on in,

105
00:05:10.550 --> 00:05:14.260
you'll notice I stripped out here the metadata again in my match.

106
00:05:14.260 --> 00:05:17.840
Labels and selector simplified that.

107
00:05:17.840 --> 00:05:21.020
But this part here that references a config map key.

108
00:05:21.020 --> 00:05:22.870
Ref, this is actually very,

109
00:05:22.870 --> 00:05:28.540
very similar is just that I put my config map at the top of the file.

110
00:05:28.540 --> 00:05:31.660
So you see, I'm referencing the name nodemon Vyron mint.

111
00:05:31.660 --> 00:05:35.520
If we scroll on up, you'll see my name is no dash environment.

112
00:05:35.520 --> 00:05:38.940
So that matches that one and that gets us to this.

113
00:05:38.940 --> 00:05:44.140
So if we scroll back to the top again notice there's no config map in here.

114
00:05:44.140 --> 00:05:48.170
Instead, what they did is they added it separately.

115
00:05:48.170 --> 00:05:51.840
Notice this app production environment here,

116
00:05:51.840 --> 00:05:54.570
and this is what they added annual notice.

117
00:05:54.570 --> 00:05:56.540
It's pretty close to what I did.

118
00:05:56.540 --> 00:05:58.540
They have their data in a different position,

119
00:05:58.540 --> 00:06:01.550
but really it's the same thing and there's no reason I

120
00:06:01.550 --> 00:06:03.740
couldn't have kept what they did.

121
00:06:03.740 --> 00:06:05.840
I chose to kind of simplify it,

122
00:06:05.840 --> 00:06:08.920
but that's something that it automatically converted,

123
00:06:08.920 --> 00:06:10.090
which is super nice.

124
00:06:10.090 --> 00:06:11.230
It even did the config.

125
00:06:11.230 --> 00:06:15.040
Maps for us made that nice and easy to work with.

126
00:06:15.040 --> 00:06:18.470
Now we could keep going into all the others that are in the final,

127
00:06:18.470 --> 00:06:21.140
but they're all pretty much the same story.

128
00:06:21.140 --> 00:06:23.040
These services, I just simplified.

129
00:06:23.040 --> 00:06:26.930
I remove some of the metadata and other than that we could

130
00:06:26.930 --> 00:06:30.070
now come on in and run the final version.

131
00:06:30.070 --> 00:06:37.460
If we wanted by just doing a kubectl apply cache F and then I'd go to K

132
00:06:37.460 --> 00:06:40.700
s and that would run that that would get it going.

133
00:06:40.700 --> 00:06:43.190
And you've already seen the apps, so I won't run it again.

134
00:06:43.190 --> 00:06:48.840
Then when we're done, we could delete that and that will clean it up.

135
00:06:48.840 --> 00:06:53.080
So that was the process for using composed to generate the

136
00:06:53.080 --> 00:06:57.140
Yamil that you see up here in the K s folder.

137
00:06:57.140 --> 00:07:05.000
And it really simplifies that process of moving from Docker Compose into our kubernetes resource files.

