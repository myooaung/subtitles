1
00:00:01,040 --> 00:00:01,810
[Autogenerated] All right, well,

2
00:00:01,810 --> 00:00:04,480
now let's switch our focus to using composed convert,

3
00:00:04,480 --> 00:00:07,140
and let's see it in action.

4
00:00:07,140 --> 00:00:11,020
So I'm gonna use the same demonstration app that I showed in earlier module.

5
00:00:11,020 --> 00:00:16,490
You can get to it here on GitHub, and it already has a Docker Compose YAML file.

6
00:00:16,490 --> 00:00:19,120
It also already has some kubernetes files as well.

7
00:00:19,120 --> 00:00:21,030
In fact, if you just want to get it up and running,

8
00:00:21,030 --> 00:00:22,840
you could check out the README.

9
00:00:22,840 --> 00:00:27,230
But I'm gonna start from scratch and convert that Docker Compose file

10
00:00:27,230 --> 00:00:31,940
into kubernetes XAML files using the composed tool.

11
00:00:31,940 --> 00:00:34,910
So as a quick review from the previous module,

12
00:00:34,910 --> 00:00:37,110
the Docker Compose file is right here.

13
00:00:37,110 --> 00:00:38,240
You'll see.

14
00:00:38,240 --> 00:00:41,040
And this has two main things inside of it.

15
00:00:41,040 --> 00:00:43,190
It has an engine ex container,

16
00:00:43,190 --> 00:00:47,840
and this will be used to serve up a front end JavaScript type application.

17
00:00:47,840 --> 00:00:54,550
And then that calls into a back end API, which is note and then optionally.

18
00:00:54,550 --> 00:00:57,420
If you're on Linux or Mac, you can uncommon at this.

19
00:00:57,420 --> 00:01:01,010
See advisor, that's a container monitoring type tool.

20
00:01:01,010 --> 00:01:02,270
And you could run that as well.

21
00:01:02,270 --> 00:01:04,840
But I'm just gonna run the top two,

22
00:01:04,840 --> 00:01:09,040
and what we're gonna do is convert this over these to services to

23
00:01:09,040 --> 00:01:12,740
our Kubernetes services and deployment files.

24
00:01:12,740 --> 00:01:17,640
So the first thing I'm gonna do is make a directory in here.

25
00:01:17,640 --> 00:01:20,560
You'll see I already have one called .NET V8 s,

26
00:01:20,560 --> 00:01:23,780
and that's where the existing Kubernetes files are.

27
00:01:23,780 --> 00:01:28,440
But let's say we wanted to start from scratch and work with this.

28
00:01:28,440 --> 00:01:33,340
So I'm gonna come on in and we'll just click on new folder.

29
00:01:33,340 --> 00:01:34,600
We'll give this a name.

30
00:01:34,600 --> 00:01:36,320
I'm just going to call it output.

31
00:01:36,320 --> 00:01:38,740
But you can name it, whatever you want.

32
00:01:38,740 --> 00:01:42,990
And then we're gonna go ahead and from the root of this project,

33
00:01:42,990 --> 00:01:45,140
you'll see I'm already in that.

34
00:01:45,140 --> 00:01:47,780
I'm gonna go ahead and run the composed command and

35
00:01:47,780 --> 00:01:50,410
show you what it generates by default.

36
00:01:50,410 --> 00:01:54,040
Now, if I just do this, if I do compose,

37
00:01:54,040 --> 00:02:00,320
convert and just hit inner, it's gonna add files at the root of this directory.

38
00:02:00,320 --> 00:02:06,000
So let me go ahead and do that and you'll notice it gives me the output.

39
00:02:06,000 --> 00:02:09,240
And then if we go to source control here,

40
00:02:09,240 --> 00:02:13,420
you'll see that all these got to added So we have a network policy

41
00:02:13,420 --> 00:02:16,630
of deployment of service and then that's for Engine X and then one

42
00:02:16,630 --> 00:02:20,020
for note as well now that's great.

43
00:02:20,020 --> 00:02:21,120
That's working.

44
00:02:21,120 --> 00:02:25,040
But that's not what I want because it's not in my folder.

45
00:02:25,040 --> 00:02:31,820
So let me go ahead and undo that and let's go back now and let's do it again.

46
00:02:31,820 --> 00:02:35,740
But this time we're gonna use the dash O or dash Dash out,

47
00:02:35,740 --> 00:02:39,090
and that will allow us to say where we want the output

48
00:02:39,090 --> 00:02:41,350
to be written as a quick review.

49
00:02:41,350 --> 00:02:45,500
If we do compose, convert, Dash H we can,

50
00:02:45,500 --> 00:02:49,740
get all the different command line flags you could see here.

51
00:02:49,740 --> 00:02:54,340
And if we come up top, you'll notice I can do like helm charts we talked about.

52
00:02:54,340 --> 00:02:57,850
We could control what type of controller gets generated.

53
00:02:57,850 --> 00:02:59,270
Deployment is the default,

54
00:02:59,270 --> 00:03:02,940
but you could also do Damon sets or replication controllers.

55
00:03:02,940 --> 00:03:04,750
Do I want JSON data?

56
00:03:04,750 --> 00:03:07,140
There's the Dachau or out.

57
00:03:07,140 --> 00:03:09,340
Do I just want to do standard out?

58
00:03:09,340 --> 00:03:12,340
It really depends on what you want to do.

59
00:03:12,340 --> 00:03:14,490
In fact, let's do a standard out real quick.

60
00:03:14,490 --> 00:03:18,880
We'll go back up to compose, convert and let's do dash,

61
00:03:18,880 --> 00:03:23,070
dash STD out and there we go,

62
00:03:23,070 --> 00:03:26,980
so you'll notice it just kind of dumps that to the standard out in this case,

63
00:03:26,980 --> 00:03:29,440
happens to be my console and now you can kind of scroll

64
00:03:29,440 --> 00:03:33,140
through and see what is going to generate.

65
00:03:33,140 --> 00:03:34,610
Now what I'm gonna do, though,

66
00:03:34,610 --> 00:03:39,340
is we're gonna write it to this output folder that you saw.

67
00:03:39,340 --> 00:03:41,410
So instead of doing that, we're gonna say Dash,

68
00:03:41,410 --> 00:03:44,340
dash out or Dachau would work as well.

69
00:03:44,340 --> 00:03:48,760
Then I'm gonna say output or you might even be more official and say dot,

70
00:03:48,760 --> 00:03:51,140
slash output.

71
00:03:51,140 --> 00:03:51,990
We'll go ahead and hit.

72
00:03:51,990 --> 00:03:55,040
Enter and there we do.

73
00:03:55,040 --> 00:03:59,540
Now you'll notice that all of these were not written to the output folder.

74
00:03:59,540 --> 00:04:03,460
Okay, so let's go take a look at that folder here and there we go.

75
00:04:03,460 --> 00:04:08,240
We have all those and we'll take a closer look a little bit later here.

76
00:04:08,240 --> 00:04:14,320
Now, if I didn't want a folder instead, I wanted to write these just to a file.

77
00:04:14,320 --> 00:04:16,640
Then we could do the same thing.

78
00:04:16,640 --> 00:04:18,310
But I could put the name of the file.

79
00:04:18,310 --> 00:04:19,930
Let's just say we want to call it out.

80
00:04:19,930 --> 00:04:23,440
Put .NET XAML.

81
00:04:23,440 --> 00:04:25,440
So now, instead of going to a folder,

82
00:04:25,440 --> 00:04:28,170
it'll pipe that output to this particular file,

83
00:04:28,170 --> 00:04:29,090
which works out really well.

84
00:04:29,090 --> 00:04:31,090
If you like that again, I like to have.

85
00:04:31,090 --> 00:04:36,140
The separate resource is like you see here, but everybody is different.

86
00:04:36,140 --> 00:04:38,220
So let's come on down and there we do.

87
00:04:38,220 --> 00:04:43,420
There's an output .NET XAML Let's go ahead and open that and it's

88
00:04:43,420 --> 00:04:49,940
basically going to stack all of these together.

89
00:04:49,940 --> 00:04:54,190
All right, now to review one that I do find myself using a fair amount.

90
00:04:54,190 --> 00:04:56,450
Let's go ahead and we'll clean this up here.

91
00:04:56,450 --> 00:05:01,740
Delete that, and we'll leave our output for now.

92
00:05:01,740 --> 00:05:06,940
What happens when you have a Docker Compose file that's named differently?

93
00:05:06,940 --> 00:05:10,440
Well, that's where we could do dash F or dash cache file.

94
00:05:10,440 --> 00:05:13,180
You might have done this before because it's not knew you

95
00:05:13,180 --> 00:05:15,620
could do this with Docker Compose as well,

96
00:05:15,620 --> 00:05:19,000
because when you do a Docker Compose build or up or down,

97
00:05:19,000 --> 00:05:20,720
or whatever it may be,

98
00:05:20,720 --> 00:05:23,260
sometimes your file might be named different from the default.

99
00:05:23,260 --> 00:05:25,240
So you have to tell it, of course.

100
00:05:25,240 --> 00:05:27,990
So we do the same thing here we could say composed,

101
00:05:27,990 --> 00:05:31,720
convert, dash F or dash cache file.

102
00:05:31,720 --> 00:05:37,090
And then maybe it was Docker Compose dot staging.

103
00:05:37,090 --> 00:05:41,110
Let's just say got to XAML and maybe we have multiple.

104
00:05:41,110 --> 00:05:44,240
We could just do another dash F if we had multiple Well,

105
00:05:44,240 --> 00:05:47,250
now this will are because I don't have that file,

106
00:05:47,250 --> 00:05:50,340
so you'll see un able to load the YAML file.

107
00:05:50,340 --> 00:05:53,680
But that's what you would do if you had a separate type of file.

108
00:05:53,680 --> 00:05:57,110
That's not following the default naming convention now.

109
00:05:57,110 --> 00:05:59,840
What's so great about all of this, obviously,

110
00:05:59,840 --> 00:06:02,960
is that now we have a really good starting point.

111
00:06:02,960 --> 00:06:05,500
It may not be exactly what you want.

112
00:06:05,500 --> 00:06:09,340
In fact, I can almost guarantee it won't be exactly what you want,

113
00:06:09,340 --> 00:06:11,810
but it gives you a great starting point.

114
00:06:11,810 --> 00:06:16,150
Now you can go in to lead the stuff you don't want, tweak the stuff you need.

115
00:06:16,150 --> 00:06:19,440
It's a lot better than starting from scratch.

116
00:06:19,440 --> 00:06:23,040
So to wrap up any time you want to do this conversion

117
00:06:23,040 --> 00:06:25,060
to remember what you need to do, remember,

118
00:06:25,060 --> 00:06:29,170
there's the Dash H and that will give me all these

119
00:06:29,170 --> 00:06:31,940
different flags that we can work with.

120
00:06:31,940 --> 00:06:37,140
And I didn't show everyone that we covered earlier like replicas or volumes.

121
00:06:37,140 --> 00:06:40,940
But those are options you'll see down here.

122
00:06:40,940 --> 00:06:47,000
So now that we've seen this in action, let's take a closer look at these XAML. It generates

