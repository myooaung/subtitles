WEBVTT
ï»¿1
00:00:00.000 --> 00:00:16.670
XML is a markup language which is used to contain information in a deliberately neutral

2
00:00:16.670 --> 00:00:17.350
fashion.

3
00:00:17.350 --> 00:00:24.210
It's extremely versatile and it could be used as a container for any information which can

4
00:00:24.210 --> 00:00:26.150
be represented as text.

5
00:00:26.150 --> 00:00:33.960
This neutrality allows XML to enable communication between systems and environments which

6
00:00:33.960 --> 00:00:36.050
have little or nothing in common.

7
00:00:36.050 --> 00:00:38.640
For example,

8
00:00:38.640 --> 00:00:43.450
let's say we have four systems that need to talk to each other and exchange data.

9
00:00:43.450 --> 00:00:47.070
If they send data directly to each other,

10
00:00:47.070 --> 00:00:50.650
they're unlikely to be discrepancies and errors.

11
00:00:50.650 --> 00:00:57.260
Whereas if all the systems are XML aware by he's in XML,

12
00:00:57.260 --> 00:01:01.750
they're all on the same page and they know that when they exchange data,

13
00:01:01.750 --> 00:01:05.950
they're going to get controllable and predictable results.

14
00:01:05.950 --> 00:01:09.050
It's important to point out,

15
00:01:09.050 --> 00:01:09.750
however,

16
00:01:09.750 --> 00:01:16.250
that the phrase using XML doesn't employ that there is only one version of XML.

17
00:01:16.250 --> 00:01:19.690
XML doesn't have a fixed,

18
00:01:19.690 --> 00:01:20.940
preset vocabulary,

19
00:01:20.940 --> 00:01:22.550
which everyone has to use.

20
00:01:22.550 --> 00:01:29.020
It allows developers to define the names of the elements on the rules governing the data

21
00:01:29.020 --> 00:01:31.350
contained within these different elements.

22
00:01:31.350 --> 00:01:35.050
So in our example,

23
00:01:35.050 --> 00:01:40.350
the four systems in question wouldn't just be used in except Mount to exchange data.

24
00:01:40.350 --> 00:01:47.870
There would be using a specific XML vocabulary with a known set of elements and a known set

25
00:01:47.870 --> 00:01:53.850
of rules as to how content has to be these crime within the XML documents that they

26
00:01:53.850 --> 00:01:55.750
exchange between each other.

27
00:01:55.750 --> 00:02:04.200
Another common scenario is where organisations have toe output their corporate data in lots

28
00:02:04.200 --> 00:02:05.650
of different media.

29
00:02:05.650 --> 00:02:11.070
Rather than setting up a separate workflow for each medium in which they want to output

30
00:02:11.070 --> 00:02:11.750
data.

31
00:02:11.750 --> 00:02:20.140
They can use XML as the definitive version off their data and then Macon set up work flows

32
00:02:20.140 --> 00:02:22.750
from XML to the different media.

33
00:02:22.750 --> 00:02:32.250
So XML toe print XML to e book XML to pdf XML to the World Wide Web and so forth.

34
00:02:32.250 --> 00:02:39.960
An XML document is essentially a text document and it can be opened in any text editor.

35
00:02:39.960 --> 00:02:43.220
So let's go into the 02 folders,

36
00:02:43.220 --> 00:02:43.420
you know,

37
00:02:43.420 --> 00:02:51.370
to XML Essentials and then 01 what is XML and just open up the file called basic dot XML

38
00:02:51.370 --> 00:02:55.740
and the key things to note our festival that it's human readable.

39
00:02:55.740 --> 00:02:58.480
We can see the data itself.

40
00:02:58.480 --> 00:03:00.300
Seven see people's names,

41
00:03:00.300 --> 00:03:06.380
people skills and we can deduce the function of each of the pieces of data.

42
00:03:06.380 --> 00:03:08.130
Looking at the names of the tags,

43
00:03:08.130 --> 00:03:10.250
which surround each piece of data.

44
00:03:10.250 --> 00:03:15.510
We can also see that the document has a hierarchical structure.

45
00:03:15.510 --> 00:03:18.690
This is emphasized by the editor.

46
00:03:18.690 --> 00:03:25.290
So here in brackets you'll notice that we have collapsible arrows next to allow those

47
00:03:25.290 --> 00:03:25.700
elements,

48
00:03:25.700 --> 00:03:27.550
which contains other elements,

49
00:03:27.550 --> 00:03:33.070
so we can see that there are essentially three levels at the top level,

50
00:03:33.070 --> 00:03:34.250
we have staff.

51
00:03:34.250 --> 00:03:39.450
Levi collapsed are you'll see that the entire document is collapsed.

52
00:03:39.450 --> 00:03:41.480
Then,

53
00:03:41.480 --> 00:03:42.720
within the staff element,

54
00:03:42.720 --> 00:03:45.350
we have a series of staff member elements,

55
00:03:45.350 --> 00:03:46.530
and again,

56
00:03:46.530 --> 00:03:52.010
each of these congee collapsed and expanded within each staff member element.

57
00:03:52.010 --> 00:03:53.240
We have first name,

58
00:03:53.240 --> 00:03:55.550
last name skills and photo,

59
00:03:55.550 --> 00:03:58.010
and then inside each of these,

60
00:03:58.010 --> 00:03:59.950
we have the actual data.

61
00:03:59.950 --> 00:04:03.650
That's an overview of what XML is all about.

62
00:04:03.650 --> 00:04:05.200
In the next video,

63
00:04:05.200 --> 00:04:09.570
we'll move on to talk in more detail about the structure of XML documents.

