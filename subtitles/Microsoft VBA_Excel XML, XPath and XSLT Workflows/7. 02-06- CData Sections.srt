1
00:00:00,000 --> 00:00:11,700
In the last video,

2
00:00:11,700 --> 00:00:17,830
we discuss the use of entity references to enable you to use illegal characters within the

3
00:00:17,830 --> 00:00:24,190
content of your XML documents where you want to make frequent use of these characters

4
00:00:24,190 --> 00:00:25,850
Within an XML document,

5
00:00:25,850 --> 00:00:32,450
the XML specification offers another approach called a C data section.

6
00:00:32,450 --> 00:00:36,950
See data stands for character data,

7
00:00:36,950 --> 00:00:44,380
and what it does is to enable you to create an entire section in which you can use illegal

8
00:00:44,380 --> 00:00:46,840
characters as many times as you wish.

9
00:00:46,840 --> 00:00:54,730
All sections within your XML document normally treated his PC data or past character data.

10
00:00:54,730 --> 00:00:57,750
And when rent by an XML passer,

11
00:00:57,750 --> 00:01:02,870
illegal characters can only be used within XML marker.

12
00:01:02,870 --> 00:01:07,550
Your data cannot contain any illegal characters.

13
00:01:07,550 --> 00:01:10,450
But by using C data sections,

14
00:01:10,450 --> 00:01:16,800
you're telling the XML Parsa that this particular section contains character data only.

15
00:01:16,800 --> 00:01:19,610
There is no markup within this section.

16
00:01:19,610 --> 00:01:21,130
Once the pass,

17
00:01:21,130 --> 00:01:26,790
it knows that it will automatically converted legal characters to the corresponding

18
00:01:26,790 --> 00:01:27,770
entities.

19
00:01:27,770 --> 00:01:35,250
This is the syntax that's used to demarcate a C data section.

20
00:01:35,250 --> 00:01:39,450
The open intact consists of a left angle bracket,

21
00:01:39,450 --> 00:01:43,160
followed by an exclamation mark and square brackets.

22
00:01:43,160 --> 00:01:45,130
On the key word see data,

23
00:01:45,130 --> 00:01:49,950
another case and then it ends with another opening square bracket.

24
00:01:49,950 --> 00:01:53,050
When to terminate a C data section,

25
00:01:53,050 --> 00:02:01,150
you simply close the two square brackets and then close the open in angle bracket with a

26
00:02:01,150 --> 00:02:07,450
corresponding close in angle bracket between the opening and closing tags.

27
00:02:07,450 --> 00:02:10,650
You can then have whatever characters you like.

28
00:02:10,650 --> 00:02:12,750
So in this example,

29
00:02:12,750 --> 00:02:19,080
we've got the Hello World XML document that we created a few videos back and because it's

30
00:02:19,080 --> 00:02:21,350
nested inside a C data section,

31
00:02:21,350 --> 00:02:27,330
all the legal characters which normally wouldn't be allowed Ah,

32
00:02:27,330 --> 00:02:27,500
um,

33
00:02:27,500 --> 00:02:37,140
is it so Let's get some practice on Working with C data sections in zero to XML Essentials

34
00:02:37,140 --> 00:02:37,140
.

35
00:02:37,140 --> 00:02:39,700
Let's open up six C data sections.

36
00:02:39,700 --> 00:02:44,760
Are we going to stay with the same tutorial theme that we saw in the last video?

37
00:02:44,760 --> 00:02:47,040
So if you open up tutorial that J.

38
00:02:47,040 --> 00:02:47,640
Peg,

39
00:02:47,640 --> 00:02:52,020
this is the XML structure,

40
00:02:52,020 --> 00:02:53,650
but we're working inside.

41
00:02:53,650 --> 00:02:56,350
They have Tutorial is a ruse element,

42
00:02:56,350 --> 00:02:58,990
and the child elements are author,

43
00:02:58,990 --> 00:03:00,350
title and topic.

44
00:03:00,350 --> 00:03:02,380
Then inside the topic element,

45
00:03:02,380 --> 00:03:04,950
we have a title which is the first child,

46
00:03:04,950 --> 00:03:08,550
followed by as many parent elements as we want.

47
00:03:08,550 --> 00:03:12,620
But this time we want to submit a tutorial on excess.

48
00:03:12,620 --> 00:03:23,250
Lt So let's open up tutorial dot txt So we've got a tutorial fragment which is you can see

49
00:03:23,250 --> 00:03:26,750
includes an XML document.

50
00:03:26,750 --> 00:03:27,700
This is,

51
00:03:27,700 --> 00:03:28,230
in fact,

52
00:03:28,230 --> 00:03:30,790
a very short excess lt style sheet.

53
00:03:30,790 --> 00:03:36,750
So rather than convert in all of these illegal characters into entity references,

54
00:03:36,750 --> 00:03:42,250
what we can do is to demarcate the section as a C data section.

55
00:03:42,250 --> 00:03:45,450
So let's create our XML document.

56
00:03:45,450 --> 00:03:49,850
That's open up tutorial dot xml.

57
00:03:49,850 --> 00:03:52,060
This time,

58
00:03:52,060 --> 00:03:57,530
I've created a skeleton off the document for you since we've already practice creating this

59
00:03:57,530 --> 00:03:58,310
structure.

60
00:03:58,310 --> 00:04:02,550
So let's just copy in First of all,

61
00:04:02,550 --> 00:04:08,850
the title element Control V,

62
00:04:08,850 --> 00:04:21,950
the author now the topic title.

63
00:04:21,950 --> 00:04:25,250
So here we have two illegal characters.

64
00:04:25,250 --> 00:04:29,750
It's manually changed them into entity references.

65
00:04:29,750 --> 00:04:34,950
So we have ampersand lt for less than semi Coolum.

66
00:04:34,950 --> 00:04:41,450
And then here come percent GT for greater than semi cola.

67
00:04:41,450 --> 00:04:45,450
Then we can copy that across.

68
00:04:45,450 --> 00:04:57,520
And now we have two paragraphs.

69
00:04:57,520 --> 00:05:22,310
No problems here and finally we have our code which we want to embed inside a C data

70
00:05:22,310 --> 00:05:22,950
section.

71
00:05:22,950 --> 00:05:34,890
So the syntax is left angle bracket,

72
00:05:34,890 --> 00:05:38,090
exclamation mark open square brackets.

73
00:05:38,090 --> 00:05:45,750
See data in upper case square brackets once more that I'll use control V to paste.

74
00:05:45,750 --> 00:05:51,030
Now I need to close square brackets twice because I've opened square brackets twice and

75
00:05:51,030 --> 00:05:53,360
then put the right angle bracket to finish.

76
00:05:53,360 --> 00:05:56,830
So there's my see data section,

77
00:05:56,830 --> 00:05:58,240
and if all is well,

78
00:05:58,240 --> 00:06:00,250
I should have a valid XML file.

79
00:06:00,250 --> 00:06:04,570
So let's go across to code Beautify Dog.

80
00:06:04,570 --> 00:06:05,300
We've got the U.

81
00:06:05,300 --> 00:06:06,600
R L in the tractor,

82
00:06:06,600 --> 00:06:07,240
too,

83
00:06:07,240 --> 00:06:13,950
so just copy that you're l and paste it into your browser.

84
00:06:13,950 --> 00:06:34,650
Let's grab our code on controlled vita paste in our code and validates.

85
00:06:34,650 --> 00:06:37,810
And as you can see,

86
00:06:37,810 --> 00:06:39,400
we have pilot XML.

