WEBVTT
ï»¿1
00:00:00.000 --> 00:00:11.250
in this video,

2
00:00:11.250 --> 00:00:15.300
look at another key element that you use in xsl style treats.

3
00:00:15.300 --> 00:00:23.000
Xsl Copy off That's going to fold the number three Let's carry on Working on branches Don't

4
00:00:23.000 --> 00:00:23.850
xsl.

5
00:00:23.850 --> 00:00:25.960
So this is a Sfar,

6
00:00:25.960 --> 00:00:27.750
as we got within the last video.

7
00:00:27.750 --> 00:00:29.470
We have a root element,

8
00:00:29.470 --> 00:00:30.450
cool people,

9
00:00:30.450 --> 00:00:36.450
and then we have a repeated element called person currently with nothing inside it.

10
00:00:36.450 --> 00:00:44.720
The xsl copia of element is used whenever you want to transfer content from the Input XML

11
00:00:44.720 --> 00:00:50.650
document to the output exactly as it is without any modification.

12
00:00:50.650 --> 00:00:58.100
If we go into the XML document when we talk,

13
00:00:58.100 --> 00:01:01.650
get stuff member head or branch manager elements,

14
00:01:01.650 --> 00:01:06.650
we want to copy the child elements without making any modification.

15
00:01:06.650 --> 00:01:07.870
However,

16
00:01:07.870 --> 00:01:11.720
there are a couple of exceptions for a start we don't want.

17
00:01:11.720 --> 00:01:18.200
The photo element on the second issue is that we can't copy the staff.

18
00:01:18.200 --> 00:01:22.850
I d as is because we scroll down,

19
00:01:22.850 --> 00:01:28.580
we'll see that there are examples of star fight is that begin with zero,

20
00:01:28.580 --> 00:01:31.850
so you want to import them into excel.

21
00:01:31.850 --> 00:01:36.060
Zero would simply disappear if there's a scheme,

22
00:01:36.060 --> 00:01:38.250
a document that's attached to the XML,

23
00:01:38.250 --> 00:01:42.790
which specifies that this element is Text Excel,

24
00:01:42.790 --> 00:01:48.380
but always respect that will therefore retain the leading zero when you're doing the

25
00:01:48.380 --> 00:01:52.510
transformation because you're not normally used in a schemer document,

26
00:01:52.510 --> 00:01:57.850
it's up to your xsl style sheet to find a solution to this problem.

27
00:01:57.850 --> 00:01:59.660
So for that reason,

28
00:01:59.660 --> 00:02:02.740
we don't want to use XSL copy on to coffee.

29
00:02:02.740 --> 00:02:03.680
The staff I d.

30
00:02:03.680 --> 00:02:10.110
As is because we'll need to modify it slightly so that Excel will be forced to retain the

31
00:02:10.110 --> 00:02:11.050
lead in zero.

32
00:02:11.050 --> 00:02:14.760
So these are the elements which we do want to copy,

33
00:02:14.760 --> 00:02:16.610
as is last name,

34
00:02:16.610 --> 00:02:17.250
first name,

35
00:02:17.250 --> 00:02:18.820
middle initial start date,

36
00:02:18.820 --> 00:02:25.150
gender and profile so he could use the XSL copy off statement six times.

37
00:02:25.150 --> 00:02:32.010
But it would be far more efficient and far more useful practice if we say we want all the

38
00:02:32.010 --> 00:02:37.430
elements with the exception off staff I D and photo.

39
00:02:37.430 --> 00:02:41.180
Let's go back to our style sheets.

40
00:02:41.180 --> 00:02:46.110
So the name of the element is xsl copiapo,

41
00:02:46.110 --> 00:02:53.500
and then you use the select a tribute to specify what you want to copy.

42
00:02:53.500 --> 00:03:01.150
So will lead an expanse location step,

43
00:03:01.150 --> 00:03:07.440
and our starting point will be the context that's been set by the template because

44
00:03:07.440 --> 00:03:12.450
everything we say is taking place in the context of this particular template,

45
00:03:12.450 --> 00:03:14.050
as opposed to this one.

46
00:03:14.050 --> 00:03:20.170
So the context says we will either be inside a branch manager,

47
00:03:20.170 --> 00:03:22.750
head or staff member element.

48
00:03:22.750 --> 00:03:28.250
So whatever experts statement we put starts from that context.

49
00:03:28.250 --> 00:03:29.110
Um,

50
00:03:29.110 --> 00:03:31.950
all we're interested in is the child elements.

51
00:03:31.950 --> 00:03:34.680
And there's a special operator for saying this,

52
00:03:34.680 --> 00:03:36.550
which is asterisk.

53
00:03:36.550 --> 00:03:40.750
So asterisk means all child elements.

54
00:03:40.750 --> 00:03:42.200
And of course,

55
00:03:42.200 --> 00:03:47.430
it's a shortcut for Child Cove on cola.

56
00:03:47.430 --> 00:03:52.440
If you remember from the previous section because child is the default access,

57
00:03:52.440 --> 00:03:54.050
there's no need to write it.

58
00:03:54.050 --> 00:04:01.320
So we left it like this would get a little child elements,

59
00:04:01.320 --> 00:04:04.250
including photo and staff i d.

60
00:04:04.250 --> 00:04:06.960
What we now need to say is,

61
00:04:06.960 --> 00:04:12.160
Can we exclude those two elements and leave all the others intact?

62
00:04:12.160 --> 00:04:14.530
So this is a job for a predicate,

63
00:04:14.530 --> 00:04:15.420
which,

64
00:04:15.420 --> 00:04:15.920
if you remember,

65
00:04:15.920 --> 00:04:21.650
goes inside square brackets on what weaken goes to test the name of the element.

66
00:04:21.650 --> 00:04:29.200
And there's a function which will do just that called name so name and then inside the

67
00:04:29.200 --> 00:04:30.190
parentheses.

68
00:04:30.190 --> 00:04:32.650
We specify what we're testing the name off,

69
00:04:32.650 --> 00:04:38.860
and this time the context isn't taken from the template because we're inside a predicated.

70
00:04:38.860 --> 00:04:42.650
The context is taken from what precedes the predicated.

71
00:04:42.650 --> 00:04:44.560
So what precedes the critic?

72
00:04:44.560 --> 00:04:47.550
It in this case will be one of the child elements,

73
00:04:47.550 --> 00:04:49.750
whichever one is currently being processed,

74
00:04:49.750 --> 00:04:53.250
so we simply want the name off that element.

75
00:04:53.250 --> 00:04:54.650
So in other words,

76
00:04:54.650 --> 00:04:58.470
we want an access which will keep us exactly where we are.

77
00:04:58.470 --> 00:05:02.560
We don't want to go down to the child level up to the parent level.

78
00:05:02.560 --> 00:05:04.120
We just want to stay put.

79
00:05:04.120 --> 00:05:07.350
And there's a special access for that called self.

80
00:05:07.350 --> 00:05:13.030
So this is the longhand self Polanco along and again.

81
00:05:13.030 --> 00:05:14.620
This is one that you'll never see,

82
00:05:14.620 --> 00:05:17.450
because the convenient short cut is simply adopt.

83
00:05:17.450 --> 00:05:19.110
In this case,

84
00:05:19.110 --> 00:05:23.750
the DOT simply means we want the name of the element that's currently being processed.

85
00:05:23.750 --> 00:05:27.090
Said We now want to say not people,

86
00:05:27.090 --> 00:05:27.650
too.

87
00:05:27.650 --> 00:05:30.180
Single quotes,

88
00:05:30.180 --> 00:05:33.970
stuff underscore i d.

89
00:05:33.970 --> 00:05:34.680
Close,

90
00:05:34.680 --> 00:05:35.010
single,

91
00:05:35.010 --> 00:05:42.520
close and name not equal to single quotes.

92
00:05:42.520 --> 00:05:45.230
Photo close,

93
00:05:45.230 --> 00:05:46.180
single close.

94
00:05:46.180 --> 00:05:53.250
So this is a much more elegant way of saying we want all of the child elements with the

95
00:05:53.250 --> 00:06:00.620
exception of the child element will staff i d on the child element called photo and as I've

96
00:06:00.620 --> 00:06:00.830
said,

97
00:06:00.830 --> 00:06:05.450
the alternative would be simply to have six XSL copy off statements.

98
00:06:05.450 --> 00:06:10.400
XSL copy off Select equals first name selected last name,

99
00:06:10.400 --> 00:06:10.950
etcetera.

100
00:06:10.950 --> 00:06:17.650
So now our person elements will have six elements inside them,

101
00:06:17.650 --> 00:06:23.390
and these elements will be completely unmodified.

102
00:06:23.390 --> 00:06:29.150
They'll just be exactly as they are with the original element names.

103
00:06:29.150 --> 00:06:38.200
So let's say about Changes Mitt across to Excel and just verify that this all works,

104
00:06:38.200 --> 00:06:39.750
said file Open.

105
00:06:39.750 --> 00:06:45.050
We're going to fold it three and Bronte's,

106
00:06:45.050 --> 00:06:48.730
which contains a style sheet link.

107
00:06:48.730 --> 00:06:50.950
So he responses that xsl.

108
00:06:50.950 --> 00:06:51.790
Yeah,

109
00:06:51.790 --> 00:06:55.150
the usual warning messages.

110
00:06:55.150 --> 00:07:04.250
So here the sixth Child Elements with the original names.

111
00:07:04.250 --> 00:07:05.320
As he concede.

112
00:07:05.320 --> 00:07:07.750
There's no staff I D and the photo.

113
00:07:07.750 --> 00:07:12.830
And if you go across the developer and have a look at the XML man,

114
00:07:12.830 --> 00:07:18.850
we have people as the root I m in person as the repeating element.

115
00:07:18.850 --> 00:07:20.930
So so far,

116
00:07:20.930 --> 00:07:21.650
so good.

117
00:07:21.650 --> 00:07:23.190
In the next video,

118
00:07:23.190 --> 00:07:27.910
we'll move on to look at how you could modify the content of an element so that in the

119
00:07:27.910 --> 00:07:33.610
output document the contents of the element different to the contents that you had in the

120
00:07:33.610 --> 00:07:35.300
original input document

