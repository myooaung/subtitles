WEBVTT
ï»¿1
00:00:00.000 --> 00:00:16.370
in the last video we used excels Web service function to retrieve information from the Web

2
00:00:16.370 --> 00:00:21.590
service and the information that we retrieved was exactly the information that we wanted.

3
00:00:21.590 --> 00:00:24.050
This is not normally the case.

4
00:00:24.050 --> 00:00:28.750
What's normally returned by the Web service is a complete XML document,

5
00:00:28.750 --> 00:00:33.880
and you then need to navigate your way through this XML document to find the data that you

6
00:00:33.880 --> 00:00:34.750
actually want.

7
00:00:34.750 --> 00:00:41.020
The function that enables you to do this is filter XML,

8
00:00:41.020 --> 00:00:43.050
and it takes two parameters.

9
00:00:43.050 --> 00:00:46.340
The first is the XML that you want to work with,

10
00:00:46.340 --> 00:00:50.270
and this is normally supplied by using the Web service function.

11
00:00:50.270 --> 00:00:55.550
The second parameter filled XML is an expert statement.

12
00:00:55.550 --> 00:01:00.800
So what is expert expert is an XML technology,

13
00:01:00.800 --> 00:01:07.630
which is used to retrieve information from within an example structure in the expanse.

14
00:01:07.630 --> 00:01:13.370
Statements used with filled XML are what unknown is location steps,

15
00:01:13.370 --> 00:01:20.290
So a typical experts statement will consist of one or more location steps separated by the

16
00:01:20.290 --> 00:01:21.750
forward slash character.

17
00:01:21.750 --> 00:01:28.170
The use of location steps in experts is very similar to working with a directory structure

18
00:01:28.170 --> 00:01:34.870
he started on the C drive and you going to fold a one inside folder one you find folder to

19
00:01:34.870 --> 00:01:36.050
and so forth.

20
00:01:36.050 --> 00:01:38.460
So in this illustration,

21
00:01:38.460 --> 00:01:39.950
we're working with the branches.

22
00:01:39.950 --> 00:01:46.750
But XML structure that we saw before and we use in three locations steps the first take

23
00:01:46.750 --> 00:01:47.950
sister branches,

24
00:01:47.950 --> 00:01:49.530
which is the root element.

25
00:01:49.530 --> 00:01:53.230
The second takes us to the child element of branches,

26
00:01:53.230 --> 00:01:54.250
which is branch,

27
00:01:54.250 --> 00:01:58.340
and the third takes us to a child of the branch element,

28
00:01:58.340 --> 00:02:00.150
which is branch manager.

29
00:02:00.150 --> 00:02:06.780
There are three parts to a location step statement festival.

30
00:02:06.780 --> 00:02:09.750
You specify the access that you want to travel along,

31
00:02:09.750 --> 00:02:13.860
and there are quite a few to choose from the default.

32
00:02:13.860 --> 00:02:15.350
Is the child access.

33
00:02:15.350 --> 00:02:16.500
In other words,

34
00:02:16.500 --> 00:02:20.950
you start with a parent and you look inside for one of the child elements.

35
00:02:20.950 --> 00:02:25.150
The second component is called a no test,

36
00:02:25.150 --> 00:02:29.840
and this allows you to specify the node or nodes that you want to retrieve.

37
00:02:29.840 --> 00:02:32.310
Traveling along the specified access.

38
00:02:32.310 --> 00:02:36.150
The third part of a location step is optional.

39
00:02:36.150 --> 00:02:38.040
It's called a predicate,

40
00:02:38.040 --> 00:02:43.580
and it allows you to filter out any knows that you don't need A from the note seven you've

41
00:02:43.580 --> 00:02:52.040
retrieved by traveling along a given access and looking for a particular set of nos so it

42
00:02:52.040 --> 00:02:53.330
returns while branches.

43
00:02:53.330 --> 00:02:54.250
Example.

44
00:02:54.250 --> 00:02:56.200
We have three locations.

45
00:02:56.200 --> 00:02:56.800
Steps,

46
00:02:56.800 --> 00:02:57.680
branches,

47
00:02:57.680 --> 00:02:58.220
branch,

48
00:02:58.220 --> 00:03:02.350
branch manager in locations.

49
00:03:02.350 --> 00:03:03.270
Step one.

50
00:03:03.270 --> 00:03:10.080
We travel along the child access to get to the branches element in location.

51
00:03:10.080 --> 00:03:10.980
Step two,

52
00:03:10.980 --> 00:03:13.530
we again travel along the child axes,

53
00:03:13.530 --> 00:03:19.330
and this time our no test is branch and then in location,

54
00:03:19.330 --> 00:03:24.270
Step three were again traveling along the child access and this time the no test,

55
00:03:24.270 --> 00:03:25.450
its branch manager.

56
00:03:25.450 --> 00:03:27.120
And,

57
00:03:27.120 --> 00:03:27.600
of course,

58
00:03:27.600 --> 00:03:29.910
in none of the three location steps,

59
00:03:29.910 --> 00:03:31.730
do we use a predicate?

60
00:03:31.730 --> 00:03:32.370
As I said,

61
00:03:32.370 --> 00:03:34.430
the predicated is optional on.

62
00:03:34.430 --> 00:03:36.490
We will encounter its use later.

63
00:03:36.490 --> 00:03:40.250
So just to recap,

64
00:03:40.250 --> 00:03:44.950
location steps are separated by the forward slash character.

65
00:03:44.950 --> 00:03:47.480
Whenever you see a location step,

66
00:03:47.480 --> 00:03:50.550
which appears to consist purely of a no test,

67
00:03:50.550 --> 00:03:55.650
this means that the child access is being used because it's the default.

68
00:03:55.650 --> 00:04:02.680
You don't actually need to specify the child access you could if you wanted to,

69
00:04:02.680 --> 00:04:08.980
and this is how it would be written child fathered by two Coghlan's branches child branch

70
00:04:08.980 --> 00:04:10.610
child branch manager.

71
00:04:10.610 --> 00:04:12.320
But of course,

72
00:04:12.320 --> 00:04:13.650
because it could be omitted,

73
00:04:13.650 --> 00:04:18.930
everyone admits it so it's just written branches branch branch manager.

74
00:04:18.930 --> 00:04:26.470
So that's a quick overview off X Path location steps in the next video,

75
00:04:26.470 --> 00:04:32.970
we'll look at the use of expert statements in conjunction with the Filter XML function and

76
00:04:32.970 --> 00:04:34.300
then in the next section,

77
00:04:34.300 --> 00:04:37.290
when we discussed the use of xsl style sheets,

78
00:04:37.290 --> 00:04:42.610
will see how expert is used to enable you to home in on the various parts of an XML

79
00:04:42.610 --> 00:04:45.850
structure as you're performing transformations.

