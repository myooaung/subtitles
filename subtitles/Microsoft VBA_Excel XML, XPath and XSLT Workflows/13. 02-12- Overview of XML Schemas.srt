1
00:00:00,000 --> 00:00:15,750
in this video we'll move on to look at the second method of validating XML data which is to

2
00:00:15,750 --> 00:00:22,560
use a schema definition document XML schema of far more powerful in D TDs.

3
00:00:22,560 --> 00:00:25,750
And this could become a very complex topic.

4
00:00:25,750 --> 00:00:32,900
So we'll be doing is simply having a very brief look at some of the key aspect off a schema

5
00:00:32,900 --> 00:00:33,650
document.

6
00:00:33,650 --> 00:00:37,550
This is what the skeleton of a schema document looks like.

7
00:00:37,550 --> 00:00:40,780
XML schema documents are always external.

8
00:00:40,780 --> 00:00:42,820
Unlike de TDs,

9
00:00:42,820 --> 00:00:47,850
there isn't an option to embed the definition within the XML file itself.

10
00:00:47,850 --> 00:00:50,640
And unlike De TDs,

11
00:00:50,640 --> 00:00:55,250
XML schema documents don't have a special definition language.

12
00:00:55,250 --> 00:00:59,550
An XML schema document consists of standard XML.

13
00:00:59,550 --> 00:01:04,100
This is the skeleton of any XML schema document.

14
00:01:04,100 --> 00:01:06,350
Like all XML documents,

15
00:01:06,350 --> 00:01:09,230
there has to be a root element on that route.

16
00:01:09,230 --> 00:01:16,760
Element is schema to avoid possible conflicts with any other XML vocabularies,

17
00:01:16,760 --> 00:01:19,650
XML schemers use the name space.

18
00:01:19,650 --> 00:01:27,740
So here we have a name space definition which points to the XML schema definition and

19
00:01:27,740 --> 00:01:36,170
specifies in this case that we use in the prefix X s And then whenever we use any elements

20
00:01:36,170 --> 00:01:38,290
within the scheme of vocabulary,

21
00:01:38,290 --> 00:01:41,650
we prefix the elements with excess colon.

22
00:01:41,650 --> 00:01:43,360
So as you can see,

23
00:01:43,360 --> 00:01:46,900
excess cool on schemer is the root element.

24
00:01:46,900 --> 00:01:50,850
And then we'll have a series of definitions within that route element,

25
00:01:50,850 --> 00:01:54,350
all using the same prefix excess.

26
00:01:54,350 --> 00:02:01,850
The Lincoln XML document to an external schemer document the attribute.

27
00:02:01,850 --> 00:02:07,610
No name space schema location is used to specify a location off.

28
00:02:07,610 --> 00:02:13,350
That document on this attribute is added to the route element.

29
00:02:13,350 --> 00:02:14,460
However,

30
00:02:14,460 --> 00:02:18,650
the attributes itself is within a given name space.

31
00:02:18,650 --> 00:02:22,220
Hence it's preceded with another name.

32
00:02:22,220 --> 00:02:23,380
Space definition.

33
00:02:23,380 --> 00:02:29,710
So here is pointing to the schemer instance definition on we specifying that we're going to

34
00:02:29,710 --> 00:02:35,450
use the prefix excess I once we've made that name Space Declaration.

35
00:02:35,450 --> 00:02:37,720
Then we can say excess.

36
00:02:37,720 --> 00:02:44,020
I know names based scheme a location equals and specify the location of the scheme a

37
00:02:44,020 --> 00:02:47,120
document then within the rules element,

38
00:02:47,120 --> 00:02:49,150
we have our XML content,

39
00:02:49,150 --> 00:02:55,750
and that content now has to it here to the rules laid out in our scheme.

40
00:02:55,750 --> 00:02:59,650
A document in this case root dot access D.

41
00:02:59,650 --> 00:03:05,950
So if we apply this principle to the staff document that we've seen a few times in these

42
00:03:05,950 --> 00:03:06,650
videos,

43
00:03:06,650 --> 00:03:09,350
the root element is called staff.

44
00:03:09,350 --> 00:03:17,110
So it's here that we insert our excess I know names based scheme a location attribute on.

45
00:03:17,110 --> 00:03:23,240
We specify that staffed on Excess D is the external schemer document to be used for

46
00:03:23,240 --> 00:03:25,350
validating this XML document.

47
00:03:25,350 --> 00:03:29,710
So here we have a diagram of our simple staff.

48
00:03:29,710 --> 00:03:31,540
Example on.

49
00:03:31,540 --> 00:03:37,350
Let's look at some of the key aspect off a schema definition for this document.

50
00:03:37,350 --> 00:03:38,540
First of all,

51
00:03:38,540 --> 00:03:40,730
the distinction between complex times,

52
00:03:40,730 --> 00:03:44,650
Andi simple types within a schemer document.

53
00:03:44,650 --> 00:03:50,780
Any element that contains other elements is defined as a complex time.

54
00:03:50,780 --> 00:03:52,480
So in our staff,

55
00:03:52,480 --> 00:03:56,800
document staff contains one or more staff member elements.

56
00:03:56,800 --> 00:03:57,410
Hence,

57
00:03:57,410 --> 00:04:03,380
it's a complex type and staff member contains four child elements,

58
00:04:03,380 --> 00:04:05,550
so it's also a complex time.

59
00:04:05,550 --> 00:04:07,700
In addition,

60
00:04:07,700 --> 00:04:09,680
the photo element,

61
00:04:09,680 --> 00:04:10,030
which,

62
00:04:10,030 --> 00:04:10,640
if you remember,

63
00:04:10,640 --> 00:04:18,890
contains no text but has an attributes is its child is also treated in a schemer document

64
00:04:18,890 --> 00:04:21,550
as a complex type rather than a simple type.

65
00:04:21,550 --> 00:04:30,120
So simple times are either elements that contain text or data or attributes,

66
00:04:30,120 --> 00:04:35,070
which by definition always contain a valued on.

67
00:04:35,070 --> 00:04:37,040
The other aspect off schema definition,

68
00:04:37,040 --> 00:04:38,320
which will have a look at,

69
00:04:38,320 --> 00:04:40,450
is the use of indicators.

70
00:04:40,450 --> 00:04:42,660
So now stuff example.

71
00:04:42,660 --> 00:04:49,250
We look at the use of an occurrence indicator to specify that the staff member element can

72
00:04:49,250 --> 00:04:51,890
occur one or more times.

73
00:04:51,890 --> 00:04:57,490
And we'll also look at the use of an order indicator to specify the order in which the

74
00:04:57,490 --> 00:05:01,450
child elements of the staff member element must occur.

75
00:05:01,450 --> 00:05:08,140
So now training folder in zero to XML Essentials.

76
00:05:08,140 --> 00:05:17,800
Let's open up some folder 12 and let's begin by opening up the XML stop the next time L and

77
00:05:17,800 --> 00:05:20,350
in our route element that's the stuff.

78
00:05:20,350 --> 00:05:26,440
We can see the use off the no name space schema location attributes on.

79
00:05:26,440 --> 00:05:29,350
The value of that attribute is staffed on XSD,

80
00:05:29,350 --> 00:05:31,540
which implies that we have a scheme,

81
00:05:31,540 --> 00:05:37,250
a document called Stuff that access T in the same folder as the current XML document.

82
00:05:37,250 --> 00:05:41,650
And now let's switch across to that document.

83
00:05:41,650 --> 00:05:45,540
And as you can see,

84
00:05:45,540 --> 00:05:51,850
we have a regular XML document which has a root element called schemer.

85
00:05:51,850 --> 00:05:56,750
When that element is in the schema definition name space which,

86
00:05:56,750 --> 00:05:58,750
according to the name Space Declaration,

87
00:05:58,750 --> 00:06:01,810
is using the prefix X s.

88
00:06:01,810 --> 00:06:08,200
Hence the schema element uses that prefix excess colon schemer as a postage,

89
00:06:08,200 --> 00:06:08,950
A schemer.

90
00:06:08,950 --> 00:06:16,050
Now let's look at our complex Andi simple types so we'll start with complex types.

91
00:06:16,050 --> 00:06:20,200
And if you remember there two occasions when you have to use complex types,

92
00:06:20,200 --> 00:06:24,600
the first is for those elements that contain child elements.

93
00:06:24,600 --> 00:06:26,680
So we start with staff,

94
00:06:26,680 --> 00:06:31,650
the root element and inside it we have a complex time definition,

95
00:06:31,650 --> 00:06:38,920
and inside that we can see the use or order indicator and in this case,

96
00:06:38,920 --> 00:06:40,780
the order indicators sequence.

97
00:06:40,780 --> 00:06:44,470
It doesn't really matter because there is only one child element,

98
00:06:44,470 --> 00:06:46,350
so it's a sequence of one element,

99
00:06:46,350 --> 00:06:47,050
basically.

100
00:06:47,050 --> 00:06:51,340
Then we use excess elements to define bad element on.

101
00:06:51,340 --> 00:06:54,160
We've also got on a currents indicator.

102
00:06:54,160 --> 00:06:55,480
Max occurs,

103
00:06:55,480 --> 00:06:56,780
equaled unbounded,

104
00:06:56,780 --> 00:07:02,620
which means that we can have a Zeman any occurrences off the star pepper element within

105
00:07:02,620 --> 00:07:06,360
staff as we want and you can see that we've got a Mexico's.

106
00:07:06,360 --> 00:07:07,350
We haven't got a minute.

107
00:07:07,350 --> 00:07:09,350
CA's by default,

108
00:07:09,350 --> 00:07:11,480
the minimum occurrences one.

109
00:07:11,480 --> 00:07:13,510
So simply by omitting it,

110
00:07:13,510 --> 00:07:17,510
we're saying that the staff member element can occur as many times as we want,

111
00:07:17,510 --> 00:07:19,780
but it must occur at least once,

112
00:07:19,780 --> 00:07:20,930
which is the default.

113
00:07:20,930 --> 00:07:27,890
So the use of ref implies that we have a definition all staff member on here.

114
00:07:27,890 --> 00:07:30,470
It is so xsl elements,

115
00:07:30,470 --> 00:07:34,540
staff member on because it contains child elements.

116
00:07:34,540 --> 00:07:36,750
We don't have excess complex type.

117
00:07:36,750 --> 00:07:44,210
And again we have the use of the order indicator sequence implying that the four child

118
00:07:44,210 --> 00:07:47,150
elements have to occur in the specified order.

119
00:07:47,150 --> 00:07:51,650
So that's how complex type one.

120
00:07:51,650 --> 00:07:54,300
Before we move on to simple types,

121
00:07:54,300 --> 00:07:56,450
let's find complex type two.

122
00:07:56,450 --> 00:08:03,240
So if you remember the second occasion when you need to use the complex time definition is

123
00:08:03,240 --> 00:08:07,530
where you have an element that has attributes at its child on,

124
00:08:07,530 --> 00:08:09,290
that's the case with the photo element.

125
00:08:09,290 --> 00:08:10,690
There are no child elements,

126
00:08:10,690 --> 00:08:12,430
but there is an attribute.

127
00:08:12,430 --> 00:08:15,050
So excess element photo.

128
00:08:15,050 --> 00:08:17,580
Then we've got a complex type definition,

129
00:08:17,580 --> 00:08:18,900
no elements,

130
00:08:18,900 --> 00:08:23,770
and then inside it we have the definition of our attributes,

131
00:08:23,770 --> 00:08:28,340
which takes us onto the definition off simple types.

132
00:08:28,340 --> 00:08:32,750
So you concede it on attribute is a simple time,

133
00:08:32,750 --> 00:08:35,950
and to define and attributes as a simple type,

134
00:08:35,950 --> 00:08:42,030
we simply specify its name and the data type and for an attribute.

135
00:08:42,030 --> 00:08:48,090
We then specify that its use is obligatory by specifying use equals required,

136
00:08:48,090 --> 00:08:52,950
and we've got the same definition here for the department.

137
00:08:52,950 --> 00:08:57,790
The type of string on the use is required then,

138
00:08:57,790 --> 00:08:58,910
at the top.

139
00:08:58,910 --> 00:09:02,140
We have the definition of our element.

140
00:09:02,140 --> 00:09:03,260
Simple types,

141
00:09:03,260 --> 00:09:04,990
excess element,

142
00:09:04,990 --> 00:09:09,650
they medical skills type equals excess string.

143
00:09:09,650 --> 00:09:15,350
So all three of our symbol types have string as the data time,

144
00:09:15,350 --> 00:09:21,160
and one of the great strength of schema definitions is that it allows very robust type

145
00:09:21,160 --> 00:09:22,210
definitions.

146
00:09:22,210 --> 00:09:28,210
And it also allows you to specify your own custom data types.

147
00:09:28,210 --> 00:09:31,490
So that sound very brief.

148
00:09:31,490 --> 00:09:33,090
Look at schema documents.

149
00:09:33,090 --> 00:09:40,360
And also that's the end of our very brief look at the way that XML works in the next

150
00:09:40,360 --> 00:09:46,250
section will move on to look at how Excel handles XML documents and XML data.

