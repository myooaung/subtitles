1
00:00:00,000 --> 00:00:14,150
an XML document is essentially a hierarchical tree structure,

2
00:00:14,150 --> 00:00:16,710
consistent and what are normally referred to.

3
00:00:16,710 --> 00:00:17,860
As knows,

4
00:00:17,860 --> 00:00:23,900
each node is of a particular type and perhaps the most important type.

5
00:00:23,900 --> 00:00:30,150
Certainly the most frequently encountered within the tree structure is the element load

6
00:00:30,150 --> 00:00:34,120
elements have to may functions.

7
00:00:34,120 --> 00:00:41,250
The first is to define the structure of the XML document by containing other knows,

8
00:00:41,250 --> 00:00:43,250
in this example,

9
00:00:43,250 --> 00:00:44,850
the root element.

10
00:00:44,850 --> 00:00:46,850
It's called tools,

11
00:00:46,850 --> 00:00:48,820
and within this route element,

12
00:00:48,820 --> 00:00:50,450
we have the tour element,

13
00:00:50,450 --> 00:00:56,750
and this would typically be a repeated element inside each tour element.

14
00:00:56,750 --> 00:00:58,160
In turn,

15
00:00:58,160 --> 00:00:59,340
we have name,

16
00:00:59,340 --> 00:01:02,350
destination region on price,

17
00:01:02,350 --> 00:01:08,350
and it's inside these child nodes that we find the actual text,

18
00:01:08,350 --> 00:01:11,550
the main content that the XML document.

19
00:01:11,550 --> 00:01:15,650
This is the logical structure of the XML document.

20
00:01:15,650 --> 00:01:23,140
Let's now look at how that structure would be written in our training folder were working

21
00:01:23,140 --> 00:01:24,550
in zero to Excel.

22
00:01:24,550 --> 00:01:30,050
Many Central's Let's now go into sub folder three elements.

23
00:01:30,050 --> 00:01:35,150
If you'd like to have a go it creating the XML document for yourself.

24
00:01:35,150 --> 00:01:38,060
Double click on the file call tools don't J.

25
00:01:38,060 --> 00:01:38,640
Peg.

26
00:01:38,640 --> 00:01:45,250
I just use that as a guide and then see if you can actually create this from scratch.

27
00:01:45,250 --> 00:01:47,210
If you'd like to do that,

28
00:01:47,210 --> 00:01:48,720
just pause the video on,

29
00:01:48,720 --> 00:01:52,270
then go ahead and have a go of lice.

30
00:01:52,270 --> 00:01:53,750
Let's do it together.

31
00:01:53,750 --> 00:01:58,350
It's just double take on tools that XML,

32
00:01:58,350 --> 00:02:00,590
which is just a blank file.

33
00:02:00,590 --> 00:02:04,850
Let's begin by putting in the XML declaration.

34
00:02:04,850 --> 00:02:07,860
Okay,

35
00:02:07,860 --> 00:02:10,470
Okay.

36
00:02:10,470 --> 00:02:23,180
When creating an XML document,

37
00:02:23,180 --> 00:02:29,450
it's normal toe work in the same hierarchical fashion as we can see in this diagram.

38
00:02:29,450 --> 00:02:32,850
So we start by creating the root element,

39
00:02:32,850 --> 00:02:35,370
which is we've said it's called tools.

40
00:02:35,370 --> 00:02:37,220
XML is case sensitive,

41
00:02:37,220 --> 00:02:39,850
so it will work into a specification.

42
00:02:39,850 --> 00:02:42,150
We need to take that into account,

43
00:02:42,150 --> 00:02:47,060
say most editors.

44
00:02:47,060 --> 00:02:51,440
If you create the opening tag as soon as you finished it,

45
00:02:51,440 --> 00:02:54,550
the closing tag has created for you automatically,

46
00:02:54,550 --> 00:02:57,670
and here we can just press enter twice.

47
00:02:57,670 --> 00:03:04,700
Press the up arrow to position the cursor between the opening and closing tax of the root

48
00:03:04,700 --> 00:03:05,350
element.

49
00:03:05,350 --> 00:03:06,600
A bad press,

50
00:03:06,600 --> 00:03:08,550
the tab key to in dent,

51
00:03:08,550 --> 00:03:14,050
indicating that what we're about to create is an element inside tools,

52
00:03:14,050 --> 00:03:17,220
and this is done purely for readability.

53
00:03:17,220 --> 00:03:24,550
It makes absolutely no difference how much mind space you put into an XML document and next

54
00:03:24,550 --> 00:03:37,870
we need the tool element and again we'll create a blind line moved back up and tabbing to

55
00:03:37,870 --> 00:03:39,680
indicate a child element.

56
00:03:39,680 --> 00:03:43,750
Then we have name,

57
00:03:43,750 --> 00:03:44,790
Destination,

58
00:03:44,790 --> 00:03:46,350
region and Price.

59
00:03:46,350 --> 00:04:05,820
I've just pressing the end key to get to the end of the line each time.

60
00:04:05,820 --> 00:04:13,250
And finally we have our text.

61
00:04:13,250 --> 00:04:17,340
Five day guided tour,

62
00:04:17,340 --> 00:04:18,650
San Diego,

63
00:04:18,650 --> 00:04:26,750
South America 2595 Okay,

64
00:04:26,750 --> 00:04:46,050
and let's say we now want to create another tour element.

65
00:04:46,050 --> 00:04:48,430
Obviously we do the logical thing,

66
00:04:48,430 --> 00:04:51,350
which is to copy this entire structure,

67
00:04:51,350 --> 00:04:59,350
paste it and make the necessary changes.

68
00:04:59,350 --> 00:05:07,750
Let's say we have another five day guided tour to Caracas again in South America,

69
00:05:07,750 --> 00:05:10,050
but slightly Chiba.

70
00:05:10,050 --> 00:05:19,150
So things to note elements can either contain child elements.

71
00:05:19,150 --> 00:05:20,710
All the actual text,

72
00:05:20,710 --> 00:05:28,480
your content of an XML document elements and normally written by placing an open intact

73
00:05:28,480 --> 00:05:35,300
among the start of the element content and the closing tag to indicate where the content

74
00:05:35,300 --> 00:05:36,450
actually ends.

75
00:05:36,450 --> 00:05:45,690
Any text or any elements place between the opening tag on the closing tag are the contents

76
00:05:45,690 --> 00:05:47,750
or Children off that element.

77
00:05:47,750 --> 00:05:56,350
Elements then are perhaps the most important no type within an XML document.

78
00:05:56,350 --> 00:05:57,970
In the next video,

79
00:05:57,970 --> 00:06:02,750
we'll move on to look at what is probably the second most important after abuse

