1
00:00:00,000 --> 00:00:13,140
D T D stands for document type definition,

2
00:00:13,140 --> 00:00:17,000
and it's the first method of validating in XML document.

3
00:00:17,000 --> 00:00:19,550
The declarations,

4
00:00:19,550 --> 00:00:23,380
which specifying what's legal within the XML document,

5
00:00:23,380 --> 00:00:24,830
constitute the D t.

6
00:00:24,830 --> 00:00:32,750
D of these declarations they I ever be made internally within the XML document or in a

7
00:00:32,750 --> 00:00:38,850
separate external document when using an internal ET de.

8
00:00:38,850 --> 00:00:45,440
The optional standalone argument has to be included in the XML Declaration and this has to

9
00:00:45,440 --> 00:00:46,650
be sent to Yes,

10
00:00:46,650 --> 00:00:48,910
the D T.

11
00:00:48,910 --> 00:00:53,600
D is then placed in the prologue of the XML document above the root element,

12
00:00:53,600 --> 00:01:00,410
and it consists off less than an exclamation mark on the key word doc type in uppercase,

13
00:01:00,410 --> 00:01:03,450
followed by the name of the root element.

14
00:01:03,450 --> 00:01:06,660
Then we have open square brackets,

15
00:01:06,660 --> 00:01:13,280
the various declarations specifying the nature of elements in the nature of attributes,

16
00:01:13,280 --> 00:01:13,950
etcetera.

17
00:01:13,950 --> 00:01:23,430
And then we finish off close square brackets and a greater than sign in the case of an

18
00:01:23,430 --> 00:01:24,250
external D.

19
00:01:24,250 --> 00:01:24,470
T.

20
00:01:24,470 --> 00:01:27,650
D stand alone is set to know,

21
00:01:27,650 --> 00:01:35,380
and all we need to place in the prologue of the XML document is a dark time statement which

22
00:01:35,380 --> 00:01:37,450
contains the keyword system,

23
00:01:37,450 --> 00:01:43,670
and then the doc type statement is usually just one line less than exclamation mark.

24
00:01:43,670 --> 00:01:45,350
Don't type as before,

25
00:01:45,350 --> 00:01:47,360
the name of the root element.

26
00:01:47,360 --> 00:01:48,250
As before,

27
00:01:48,250 --> 00:01:55,880
then all we need to do is to reference the external D T D file that's usually done using

28
00:01:55,880 --> 00:01:57,250
the keyword system,

29
00:01:57,250 --> 00:01:59,750
followed by the name of the file.

30
00:01:59,750 --> 00:02:01,600
So in this example,

31
00:02:01,600 --> 00:02:07,880
we're assuming that we have a file called my D t d dot de TV in the same folder as the

32
00:02:07,880 --> 00:02:09,150
exile document.

33
00:02:09,150 --> 00:02:12,980
Inside the external DTV,

34
00:02:12,980 --> 00:02:15,750
we would have an XML declaration.

35
00:02:15,750 --> 00:02:17,990
XML version equals one,

36
00:02:17,990 --> 00:02:18,750
etcetera.

37
00:02:18,750 --> 00:02:22,350
And then we would have the D T D declarations.

38
00:02:22,350 --> 00:02:25,220
And these take a special torment.

39
00:02:25,220 --> 00:02:27,610
They're not regular XML statements.

40
00:02:27,610 --> 00:02:36,560
The two key elements in these declarations use the keyword element to define the nature of

41
00:02:36,560 --> 00:02:40,400
elements within the XML document on at least,

42
00:02:40,400 --> 00:02:42,380
which is short for attribute list.

43
00:02:42,380 --> 00:02:44,850
As the name employees,

44
00:02:44,850 --> 00:02:48,520
the syntax enables you to define the nature of ALS,

45
00:02:48,520 --> 00:02:51,050
the attributes for a particular element.

46
00:02:51,050 --> 00:02:59,900
Let's take a look at an example that boasts an internal and external d t d In zero.

47
00:02:59,900 --> 00:03:01,490
It's a maximal essentials.

48
00:03:01,490 --> 00:03:07,810
Let's open up 11 overview of D TDs and let's start by looking at this stand alone document

49
00:03:07,810 --> 00:03:08,680
that has a d t.

50
00:03:08,680 --> 00:03:12,250
D embedded in the prologue of the external document.

51
00:03:12,250 --> 00:03:14,950
That's a stuff stand alone.

52
00:03:14,950 --> 00:03:19,050
So here we can see on line one.

53
00:03:19,050 --> 00:03:21,370
We have standard early cause,

54
00:03:21,370 --> 00:03:22,050
Yes.

55
00:03:22,050 --> 00:03:28,450
And then he is the start of the dark time declaration.

56
00:03:28,450 --> 00:03:30,750
He was a dark time,

57
00:03:30,750 --> 00:03:33,540
followed by the name of the root element,

58
00:03:33,540 --> 00:03:36,560
which this XML document is stuff.

59
00:03:36,560 --> 00:03:46,830
Then we start with the definition off the ruse element staff and in parentheses.

60
00:03:46,830 --> 00:03:48,350
After the word stuff,

61
00:03:48,350 --> 00:03:52,050
we have the Children of the storm element,

62
00:03:52,050 --> 00:03:53,700
and in this case,

63
00:03:53,700 --> 00:03:56,290
there is only one child called staff member.

64
00:03:56,290 --> 00:04:02,750
On the plus sign after start member indicates that we can have an unlimited number of these

65
00:04:02,750 --> 00:04:03,850
child elements.

66
00:04:03,850 --> 00:04:13,220
Then we've got a definition off the staff member with his Children and there no plus lines

67
00:04:13,220 --> 00:04:14,350
next to any of them.

68
00:04:14,350 --> 00:04:22,680
But what this syntax does indicate is that these Children are required and they have to

69
00:04:22,680 --> 00:04:26,250
occur in the order listed in that definition.

70
00:04:26,250 --> 00:04:28,120
Next,

71
00:04:28,120 --> 00:04:32,150
we have the attribute department all staff member.

72
00:04:32,150 --> 00:04:34,670
And even though there's only one attributes,

73
00:04:34,670 --> 00:04:36,850
we still use the keyword at list.

74
00:04:36,850 --> 00:04:44,390
If we wanted to add a second attribute to department We could simply split this statement

75
00:04:44,390 --> 00:04:50,790
onto several lines so we could insert return here and then just having the readability.

76
00:04:50,790 --> 00:04:54,850
I would have the closing angle bracket here,

77
00:04:54,850 --> 00:05:01,350
and then we would just put the details off our second attribute.

78
00:05:01,350 --> 00:05:05,400
So let's create an attribute called Status.

79
00:05:05,400 --> 00:05:12,200
Character Data is the most popular data time,

80
00:05:12,200 --> 00:05:19,800
but another is to have a Siris of options and then placed inside parentheses and separated

81
00:05:19,800 --> 00:05:21,350
by the Piper character.

82
00:05:21,350 --> 00:05:24,520
So let's say that the let's say,

83
00:05:24,520 --> 00:05:25,510
for example,

84
00:05:25,510 --> 00:05:36,890
that we have full time claim home time and again,

85
00:05:36,890 --> 00:05:38,490
let's make this required.

86
00:05:38,490 --> 00:05:43,800
So by doing this,

87
00:05:43,800 --> 00:05:51,450
we have now invalidated this XML document because none of these people has that attribute.

88
00:05:51,450 --> 00:05:55,540
So I'm just gonna have to go inside the staff member,

89
00:05:55,540 --> 00:06:03,770
and it's a status equals and in quotes put either full time or part time.

90
00:06:03,770 --> 00:06:06,500
So I'm just gonna copy that on,

91
00:06:06,500 --> 00:06:07,950
paste it in for everyone.

92
00:06:07,950 --> 00:06:17,670
That's everyone on.

93
00:06:17,670 --> 00:06:19,320
Let's just leave them all this full time.

94
00:06:19,320 --> 00:06:20,050
That's fine.

95
00:06:20,050 --> 00:06:23,220
Moving back to our declarations,

96
00:06:23,220 --> 00:06:29,340
we then move on to the elements that actually contain data so you can see the convention,

97
00:06:29,340 --> 00:06:36,150
an element that contains child elements as those child elements listed inside parentheses.

98
00:06:36,150 --> 00:06:38,260
By contrast,

99
00:06:38,260 --> 00:06:44,700
elements that contain data simply have the name of the element and then inside parentheses

100
00:06:44,700 --> 00:06:44,700
.

101
00:06:44,700 --> 00:06:46,250
We specify the data type,

102
00:06:46,250 --> 00:06:50,750
which is normally PC data past character data.

103
00:06:50,750 --> 00:06:53,730
And then we have the photo element,

104
00:06:53,730 --> 00:06:56,370
which is followed by the keyword empty,

105
00:06:56,370 --> 00:07:00,380
indicating that it can't contain text in the way that first name,

106
00:07:00,380 --> 00:07:06,050
last name and skills Can They have PC data as their data time?

107
00:07:06,050 --> 00:07:08,470
And finally,

108
00:07:08,470 --> 00:07:14,050
we have the attributes definition for the H ref attributes of photo.

109
00:07:14,050 --> 00:07:20,390
So we have at least photo the name of the element that contains the attribute a treff,

110
00:07:20,390 --> 00:07:22,190
the name of the attributes itself,

111
00:07:22,190 --> 00:07:24,350
character data,

112
00:07:24,350 --> 00:07:29,490
the data type on required indicating that it can't be admitted.

113
00:07:29,490 --> 00:07:35,900
So hopefully that just gives you a flavour of what a dock type definition looks like on

114
00:07:35,900 --> 00:07:38,750
this is how it's embedded within an XML document.

115
00:07:38,750 --> 00:07:42,650
Let's just compare that with exactly the same thing,

116
00:07:42,650 --> 00:07:44,480
but externally.

117
00:07:44,480 --> 00:07:46,760
So if we open up staff that d t.

118
00:07:46,760 --> 00:07:47,260
D.

119
00:07:47,260 --> 00:07:52,950
We have the same definitions apart from the changes that I just made,

120
00:07:52,950 --> 00:07:56,510
but that's all we have here.

121
00:07:56,510 --> 00:07:57,080
We specify.

122
00:07:57,080 --> 00:07:58,350
It's an XML document,

123
00:07:58,350 --> 00:08:03,650
and then all we have is the element and Atmos definitions that we saw before.

124
00:08:03,650 --> 00:08:06,230
So to make this current,

125
00:08:06,230 --> 00:08:17,430
I'm just gonna go into stand alone and just copy the new version off these definitions and

126
00:08:17,430 --> 00:08:19,650
then just replace the originals.

127
00:08:19,650 --> 00:08:24,850
It's close and safe.

128
00:08:24,850 --> 00:08:36,530
That's finished by a very fine that the document that we have is valid as defined by our

129
00:08:36,530 --> 00:08:37,950
dog time definition.

130
00:08:37,950 --> 00:08:51,550
So we'll copy everything and let's just across route browser Visit xml validation dot com

131
00:08:51,550 --> 00:09:04,850
and we just paste in our code and from value dates.

132
00:09:04,850 --> 00:09:11,150
No Harris have been found.

133
00:09:11,150 --> 00:09:18,740
Let's just go back to the XML document and introduce an error.

134
00:09:18,740 --> 00:09:25,950
So now at least we added this extra attributes called status and it's required.

135
00:09:25,950 --> 00:09:30,930
So we release the status for any of these stuff.

136
00:09:30,930 --> 00:09:36,650
Remember elements we have now invalidated our rules.

137
00:09:36,650 --> 00:09:39,150
So when we click on Vanya late this time,

138
00:09:39,150 --> 00:09:45,550
you can see that we have an era.

139
00:09:45,550 --> 00:09:53,700
The attributes status is required that must be specified for the element Time start member

