1
00:00:00,000 --> 00:00:14,580
An XML document consists of two principal parts.

2
00:00:14,580 --> 00:00:17,750
The prologue and the root element.

3
00:00:17,750 --> 00:00:23,550
The prologue is optional that the root element is compulsory.

4
00:00:23,550 --> 00:00:29,450
The product contains information about the XML document as a whole.

5
00:00:29,450 --> 00:00:35,250
The root element contains all of the content off the XML document.

6
00:00:35,250 --> 00:00:38,600
Let's take an example,

7
00:00:38,600 --> 00:00:45,650
have created the simplest possible XML document in zero to XML Essentials.

8
00:00:45,650 --> 00:00:49,420
Open up number two structure of an XML document,

9
00:00:49,420 --> 00:00:52,830
and inside it you'll find a file called Hello well,

10
00:00:52,830 --> 00:00:56,580
that XML open that in your editor.

11
00:00:56,580 --> 00:01:02,200
Let's go ahead and create our file to create a valid XML file.

12
00:01:02,200 --> 00:01:07,450
The only content we need to place in the file is the root element.

13
00:01:07,450 --> 00:01:12,780
The name of the root element can be anything you like in XML.

14
00:01:12,780 --> 00:01:18,480
It's entirely up to you to define the names off the elements within your external structure

15
00:01:18,480 --> 00:01:18,480
.

16
00:01:18,480 --> 00:01:20,620
But for simplicity,

17
00:01:20,620 --> 00:01:24,890
let's call it route to write an element.

18
00:01:24,890 --> 00:01:26,240
We put an opening tag,

19
00:01:26,240 --> 00:01:29,100
which consists of the left and bracket,

20
00:01:29,100 --> 00:01:33,070
the name of the element on the right angle bracket.

21
00:01:33,070 --> 00:01:35,850
And in the case of most editors,

22
00:01:35,850 --> 00:01:42,470
the closing tag will automatically be inserted for you anything between the opening and

23
00:01:42,470 --> 00:01:46,330
closing tanks is regarded as the content off.

24
00:01:46,330 --> 00:01:50,150
The element on that content could be very varied,

25
00:01:50,150 --> 00:01:54,550
and we'll discuss the various types of content in the rest of this chapter,

26
00:01:54,550 --> 00:02:00,210
and you'll notice that there's a distinction between the way that the opening tank is

27
00:02:00,210 --> 00:02:02,810
written on the closing tag.

28
00:02:02,810 --> 00:02:08,840
The left angle bracket of the closing tag is followed by a forward slash.

29
00:02:08,840 --> 00:02:12,540
So in our super simple example,

30
00:02:12,540 --> 00:02:18,440
let's just put Hello World and that,

31
00:02:18,440 --> 00:02:19,540
believe it or not,

32
00:02:19,540 --> 00:02:22,550
is now a valid XML file.

33
00:02:22,550 --> 00:02:25,650
To put it to the test,

34
00:02:25,650 --> 00:02:30,950
you can either use the XML validator built into your editor.

35
00:02:30,950 --> 00:02:34,630
Or if your editor doesn't have an XML validator,

36
00:02:34,630 --> 00:02:36,290
you'll find the U.

37
00:02:36,290 --> 00:02:38,070
R L in this file.

38
00:02:38,070 --> 00:02:39,550
External validation,

39
00:02:39,550 --> 00:02:46,250
which you can just copy and paste into your browser.

40
00:02:46,250 --> 00:03:05,490
And then we can just paste it into this box control.

41
00:03:05,490 --> 00:03:07,650
Be and click on validate,

42
00:03:07,650 --> 00:03:12,750
and you can see we have landed XML.

43
00:03:12,750 --> 00:03:19,240
Let's just go back to the editor and let's add in the optional prologue.

44
00:03:19,240 --> 00:03:25,150
The only compulsory element within a prologue is the XML declaration,

45
00:03:25,150 --> 00:03:31,470
and it looks like this left and bracket question Mark XML,

46
00:03:31,470 --> 00:03:34,440
and then the only thing we have to specify is the version,

47
00:03:34,440 --> 00:03:38,930
which is one point north,

48
00:03:38,930 --> 00:03:42,660
and we can then optionally specify the encoding,

49
00:03:42,660 --> 00:03:49,750
which for English is utf eight.

50
00:03:49,750 --> 00:03:55,490
And then we close the declaration with question mark on a right angle bracket.

51
00:03:55,490 --> 00:03:57,820
And let's just check that out.

52
00:03:57,820 --> 00:03:59,970
XML file is still valid.

53
00:03:59,970 --> 00:04:09,580
Control me to paste on Valley Days,

54
00:04:09,580 --> 00:04:11,980
and as you can see,

55
00:04:11,980 --> 00:04:13,600
we still have valid X amount.

56
00:04:13,600 --> 00:04:20,610
So that's a quick look at put in the bare bones,

57
00:04:20,610 --> 00:04:24,350
the two essential elements into an XML file.

58
00:04:24,350 --> 00:04:27,170
In our simple example,

59
00:04:27,170 --> 00:04:30,350
we put text straight into the root element.

60
00:04:30,350 --> 00:04:32,650
This is fairly unusual.

61
00:04:32,650 --> 00:04:37,800
What typically you'll have a hierarchy off child elements within the root elements,

62
00:04:37,800 --> 00:04:43,150
and you have to drill down several levels deep before you find the actual textual content.

63
00:04:43,150 --> 00:04:46,080
As you can see from this diagram,

64
00:04:46,080 --> 00:04:50,530
there are a number of different types of objects that could be placed both inside the

65
00:04:50,530 --> 00:04:53,050
prologue and in the root element,

66
00:04:53,050 --> 00:04:58,050
and we'll be discussing these various objects throughout the rest of the chapter.

67
00:04:58,050 --> 00:05:00,040
In the next video,

68
00:05:00,040 --> 00:05:03,950
we'll take a closer look at what is perhaps the most important of these objects.

69
00:05:03,950 --> 00:05:06,050
The XML element

