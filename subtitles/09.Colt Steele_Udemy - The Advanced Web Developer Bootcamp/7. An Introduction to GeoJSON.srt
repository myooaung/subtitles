1
00:00:00,330 --> 00:00:05,910
Welcome back in this section we'll learn about two of the more advanced types of visualizations that

2
00:00:05,910 --> 00:00:13,680
you can build with the three maps and forced direct and graphs these visualizations can be really cool

3
00:00:13,680 --> 00:00:14,530
to look at.

4
00:00:14,850 --> 00:00:19,770
But before we jump in and start building it's important to understand some of the underlying concepts

5
00:00:19,790 --> 00:00:20,400
first.

6
00:00:21,360 --> 00:00:23,550
Here are our goals for this section.

7
00:00:23,800 --> 00:00:29,410
In this video we'll introduce an encoding standard for geographic data Collegio Jaison and we'll see

8
00:00:29,410 --> 00:00:35,440
how to use DOJ start with the three in the next video we'll learn about an extension of Geogia song

9
00:00:35,440 --> 00:00:38,700
called Toppo Jason and compare and contrast the two.

10
00:00:39,100 --> 00:00:43,830
We'll also see how to convert between typologies sun and patho elements.

11
00:00:43,890 --> 00:00:49,770
After that we'll build off of what we've learned and create a map visualization with the three.

12
00:00:50,010 --> 00:00:53,890
Then we'll switch gears and talk about the basics of force directed graphs.

13
00:00:54,150 --> 00:00:59,970
We'll begin by talking about the building blocks for these visualizations nodes and links will also

14
00:00:59,970 --> 00:01:06,350
describe what a force simulation is and how it works and explore different types of forces you can simulate.

15
00:01:06,420 --> 00:01:11,330
Finally we'll apply what we've learned about force directed graphs to a real data set.

16
00:01:11,370 --> 00:01:17,010
Let's get started by learning about creating maps with E3 to give you an idea of where we're headed.

17
00:01:17,010 --> 00:01:20,130
Let me quickly demo what will be building later on in this section.

18
00:01:20,880 --> 00:01:24,980
Here I have a map of the world with countries filled in based on their population.

19
00:01:25,500 --> 00:01:30,590
As you can see countries with high populations like China and India have a deep purple color.

20
00:01:30,870 --> 00:01:34,410
While countries with smaller populations have a lighter shade.

21
00:01:34,410 --> 00:01:39,870
I've also got a drop down here so that I can adjust the heat map based on other statistics like population

22
00:01:39,870 --> 00:01:48,590
density median age and fertility rate.

23
00:01:48,620 --> 00:01:53,470
If we look into the elements tab we can see that each country is just a patho element in the squeegie

24
00:01:54,010 --> 00:01:59,260
that the attributes can get quite complicated but at least these are SVGA elements we've seen before.

25
00:02:00,160 --> 00:02:03,180
If you're concerned that you'll have to write all of these commands yourself.

26
00:02:03,220 --> 00:02:07,360
Don't worry D-3 takes care of most of this work for us.

27
00:02:07,360 --> 00:02:10,390
The approach will be similar to what we saw with pie charts.

28
00:02:10,390 --> 00:02:15,190
Remember that when we wanted to build a pie chart we used D-3 helper methods to translate our data into

29
00:02:15,190 --> 00:02:18,320
valid strings for the D attribute of our paths.

30
00:02:19,030 --> 00:02:20,430
The same will be true here.

31
00:02:21,700 --> 00:02:26,510
But if our output is a string of commands for the path element what should our input be.

32
00:02:26,770 --> 00:02:29,080
Here's where G.O. Jaison enters the picture.

33
00:02:30,180 --> 00:02:34,780
G.O. Jaison is a standardized way to encode geographic information.

34
00:02:34,780 --> 00:02:35,990
It's based on Jason.

35
00:02:36,100 --> 00:02:40,790
So if you look at the DOJ file the syntax should look pretty familiar.

36
00:02:40,840 --> 00:02:43,400
We won't get into the DOJ suspect here.

37
00:02:43,420 --> 00:02:48,010
You can check out the resources for this video if you want to learn more about it for now.

38
00:02:48,130 --> 00:02:53,950
All you need to know is that a Jason object has a features property whose value is an array of objects

39
00:02:53,950 --> 00:02:58,750
that encode data about shapes Let's take a look and a simple example.

40
00:02:59,160 --> 00:03:04,090
Here's a link to the code we'll be looking at for the rest of this video.

41
00:03:04,130 --> 00:03:10,100
Here I have a DOJ file just three features each feature has co-ordinate information inside of the geometry

42
00:03:10,820 --> 00:03:13,930
and a bit of color information inside of the properties.

43
00:03:14,390 --> 00:03:18,740
The properties key is a helpful place to store information that isn't related to the geometry of the

44
00:03:18,740 --> 00:03:19,220
shape.

45
00:03:21,290 --> 00:03:25,600
Let's use D-3 to convert this DOJ data into valid patho elements.

46
00:03:25,820 --> 00:03:32,330
Since this is adjacent file I can use D-3 that Jason to make a request and get this data into my javascript.

47
00:03:32,520 --> 00:03:34,170
If there's an error I'll throw it.

48
00:03:34,180 --> 00:03:42,760
Otherwise old Oakham method called the 3. jeel pass and store the result in a variable called Pass.

49
00:03:42,800 --> 00:03:46,500
We saw this pattern with pie charts and the idea is similar here.

50
00:03:46,670 --> 00:03:52,250
D-3 got jeel path returns a function that will transform G.O. Jason data into a path command strings

51
00:03:52,820 --> 00:03:57,140
similar to D-3 I got histogram and D-3 dark.

52
00:03:57,230 --> 00:04:01,330
You can change methods on to jail as to enhance the path function it returns.

53
00:04:01,700 --> 00:04:03,840
But for now we'll stick with the defaults.

54
00:04:04,190 --> 00:04:08,930
Once I have my path function let me put a debugger in the code and hop into the console to see what

55
00:04:08,930 --> 00:04:10,070
this function can do.

56
00:04:11,190 --> 00:04:16,250
If I pass this function one of the features from my data set you can see that it converts the coordinates

57
00:04:16,250 --> 00:04:19,320
into a valid path command cool.

58
00:04:19,590 --> 00:04:24,840
Based on this example I can now get all of my shapes from the DOJ files to show up on the page using

59
00:04:24,840 --> 00:04:28,120
the same D-3 enter pattern we've seen so many times before.

60
00:04:28,990 --> 00:04:33,900
First of fixin SVGA width and height then select the SPG set.

61
00:04:33,910 --> 00:04:40,420
It's with an height create some Enter nodes by joining with my features array enter and append paths

62
00:04:41,820 --> 00:04:42,910
as we just saw.

63
00:04:43,140 --> 00:04:48,120
I can pass each object in my features array into the path function to get the proper d attribute.

64
00:04:48,390 --> 00:04:53,340
And lastly I'll Cetaphil based on the color stored in the properties object for each piece of data.

65
00:04:54,540 --> 00:04:55,700
There we go.

66
00:04:55,770 --> 00:05:01,830
Here are all the shapes coded in my GEORGIS on file this covers the basics of how to translate between

67
00:05:01,830 --> 00:05:05,750
G.O. Jaison and patho elements using E-3 in the next video.

68
00:05:05,760 --> 00:05:08,820
We'll talk about another Toppo Jason.

69
00:05:08,940 --> 00:05:09,920
I'll see you there.
