WEBVTT
1
00:00:01.080 --> 00:00:02.450
Now let's talk about forms.

2
00:00:02.460 --> 00:00:08.490
Forms are a little strange at first and react but once you get used to it I think it all makes sense.

3
00:00:08.490 --> 00:00:13.680
Our objectives are to describe a controlled component versus an uncontrolled component.

4
00:00:13.680 --> 00:00:19.500
We'll see more about that soon and Hendel submit using on submit.

5
00:00:19.500 --> 00:00:23.940
First of all an uncontrolled component is one that re-act doesn't have control over.

6
00:00:23.970 --> 00:00:29.130
So this example we have an input component and you'll notice that if you put an input right now and

7
00:00:29.130 --> 00:00:36.180
your reaction opponent you can pipe inside of that component just fine and react has no idea what you're

8
00:00:36.180 --> 00:00:37.030
typing.

9
00:00:37.050 --> 00:00:39.450
The state is controlled by the browser.

10
00:00:39.480 --> 00:00:41.160
It's not controlled by react.

11
00:00:41.250 --> 00:00:41.490
Right.

12
00:00:41.490 --> 00:00:46.740
So that's an uncontrolled component because re-act is not involved in the rendering process.

13
00:00:46.860 --> 00:00:52.100
And the state of what's inside of that input box.

14
00:00:52.190 --> 00:00:56.990
So here's an example of a controlled component and react in this input tag.

15
00:00:56.990 --> 00:01:02.930
We've got a value and that value is set equal to this that state that input text notes component is

16
00:01:02.930 --> 00:01:03.710
controlled.

17
00:01:03.830 --> 00:01:08.800
But the problem is that we don't have anything changing this that state that put text.

18
00:01:08.810 --> 00:01:14.440
So even though re-act now knows what to be rendered inside that input box you can no longer type anything.

19
00:01:14.450 --> 00:01:19.790
So this is a very useful component right now because it will always just be whatever input text currently

20
00:01:19.790 --> 00:01:20.150
is.

21
00:01:20.150 --> 00:01:22.510
It can never change.

22
00:01:22.850 --> 00:01:26.150
Now in this example we have a component that can be controlled.

23
00:01:26.180 --> 00:01:32.470
So first of all this value is again that this data input text and we also have an onchange event.

24
00:01:32.480 --> 00:01:38.810
Now this onchange event will be invoked any time you type a single key inside that input.

25
00:01:38.810 --> 00:01:42.650
So if I type A in my input on change will be invoked.

26
00:01:42.770 --> 00:01:44.880
This dot set state will then be invoked.

27
00:01:45.030 --> 00:01:52.180
The text will be equal to whatever that event E which is just just like a browser event whatever that

28
00:01:52.180 --> 00:01:53.960
target value is.

29
00:01:53.960 --> 00:02:00.380
So that's whatever text is currently inside the input and after set stay is called of course render

30
00:02:00.380 --> 00:02:05.930
gets called again and then when rendered gets called again we'll have this data input text with our

31
00:02:05.930 --> 00:02:07.670
new letter A.

32
00:02:08.020 --> 00:02:11.630
And then if I type B the same thing would happen and then C and so forth.

33
00:02:11.630 --> 00:02:17.110
As I type each key set state always gets called render gets called again and then react.

34
00:02:17.120 --> 00:02:22.520
Always knows the exact state of that input any time.

35
00:02:22.540 --> 00:02:24.920
Lastly we should talk about how to submit a form.

36
00:02:24.940 --> 00:02:30.410
So assuming I have a form like this the input would work exactly the same way we'd have a value.

37
00:02:30.430 --> 00:02:38.780
This does state that input text and onchange if you wrap that in a form you want to handle the on submit

38
00:02:38.900 --> 00:02:44.760
event and then on submit you'll get the event just like down here in on change.

39
00:02:45.380 --> 00:02:49.140
And the first thing you always want to do with the summit event is prevent default.

40
00:02:49.160 --> 00:02:55.280
This is just standard for the browser because if you don't prevent default it will submit any request

41
00:02:55.280 --> 00:02:59.320
to the server and the whole page will refresh and you'll lose all your state.

42
00:02:59.480 --> 00:03:02.880
So you don't want the browser default behavior that's why you first prevent default.

43
00:03:02.990 --> 00:03:05.100
The next thing we'll do is update our data array.

44
00:03:05.360 --> 00:03:09.680
So assuming I have something like this that state that data which keeps track of all the inputs that

45
00:03:09.680 --> 00:03:13.910
I've submitted I'll just add that state to the end.

46
00:03:13.910 --> 00:03:19.670
So now remember since this starts data input text is being updated constantly every time you press a

47
00:03:19.670 --> 00:03:24.660
key the value of input text will be whatever it is when the user submits it.

48
00:03:24.690 --> 00:03:30.500
Right so this does state that input text will be equal to the value that's over here.

49
00:03:31.080 --> 00:03:32.330
So now we have that new array.

50
00:03:32.330 --> 00:03:35.360
The last thing to do is just update the state.

51
00:03:35.600 --> 00:03:41.420
So I'm updating the data here and I'm also updating the input text to be empty again so that when I

52
00:03:41.420 --> 00:03:43.310
submit my form will be cleared out.

53
00:03:45.330 --> 00:03:50.310
One last common mistake I want to point out is that when people first use forms they often make the

54
00:03:50.310 --> 00:03:57.500
mistake of not using an on submit event but instead adding a submit button and putting the the.

55
00:03:57.570 --> 00:04:00.700
Sort of like a summit event in the unclick.

56
00:04:00.720 --> 00:04:04.980
So the problem with that is that there's a lot of behaviors in the browser that don't get covered by

57
00:04:04.980 --> 00:04:06.560
this click event.

58
00:04:06.570 --> 00:04:12.030
So really if you want to capture a form being submitted you should always use an on submit event not

59
00:04:12.030 --> 00:04:15.070
an On Click event in the submit button.

60
00:04:15.150 --> 00:04:15.990
That's all for forms.

61
00:04:15.990 --> 00:04:17.210
That's the basics.

62
00:04:17.220 --> 00:04:20.430
So next up we'll work on a quick exercise to help solidify this.
