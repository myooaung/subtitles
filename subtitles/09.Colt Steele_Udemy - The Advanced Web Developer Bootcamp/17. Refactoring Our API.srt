1
00:00:00,110 --> 00:00:00,560
OK.

2
00:00:00,720 --> 00:00:02,240
So we have a working API.

3
00:00:02,490 --> 00:00:08,400
All we have left to do now is clean things up a bit and we're going to refactor our routes file by moving

4
00:00:08,400 --> 00:00:14,190
all the logic inside the route handlers into a separate helper so that our routes themselves will be

5
00:00:14,190 --> 00:00:15,280
really really simple.

6
00:00:15,360 --> 00:00:19,890
We'll have just routed out get and then that will be mapped to a function to call.

7
00:00:19,910 --> 00:00:20,930
Will be a single line.

8
00:00:21,120 --> 00:00:22,090
Nice Inkley.

9
00:00:22,170 --> 00:00:28,890
So we'll start by making a helper's function or excuse me helper's folder and inside of that we'll just

10
00:00:28,890 --> 00:00:33,650
make a new file and we'll just call it to Dewes that.

11
00:00:33,720 --> 00:00:34,900
Yes.

12
00:00:35,040 --> 00:00:36,070
So in here.

13
00:00:36,090 --> 00:00:37,570
Let's start with the first one.

14
00:00:37,680 --> 00:00:39,500
Let's do it here.

15
00:00:39,510 --> 00:00:45,810
So our index route that retrieves all tattoos I'm going to copy the entire function call back there.

16
00:00:46,140 --> 00:00:50,170
And this won't work just yet but we'll get there when open up to do.

17
00:00:50,280 --> 00:00:55,140
Yes and I'm going to say exports dot and then give this a name.

18
00:00:55,140 --> 00:01:02,710
So let's just call this get to do as equals this whole function just like that.

19
00:01:03,470 --> 00:01:11,930
And there's a problem because I don't have DB defined so I need to first require DBI and to do that

20
00:01:11,930 --> 00:01:13,320
from this directory.

21
00:01:13,400 --> 00:01:20,060
If you look where we are to get to the models I need to do dot dot slash models.

22
00:01:20,060 --> 00:01:20,570
OK.

23
00:01:20,990 --> 00:01:22,640
So now we should be good to go here.

24
00:01:22,700 --> 00:01:24,940
Or we have experts that get to do.

25
00:01:25,250 --> 00:01:31,960
And the last thing we need to do is actually add that to our experts a model that experts equals experts.

26
00:01:32,220 --> 00:01:32,710
OK.

27
00:01:32,780 --> 00:01:34,950
So basically we're just adding them to an object.

28
00:01:35,060 --> 00:01:38,710
So will have all of them available instead of our routes appear.

29
00:01:38,810 --> 00:01:44,250
So I'm going to move over the first two so I'm going to take the second one as well.

30
00:01:44,300 --> 00:01:45,810
This is our create.

31
00:01:46,040 --> 00:01:48,870
So I'm going to go and just call it exports.

32
00:01:49,370 --> 00:01:52,110
Create to do that.

33
00:01:52,450 --> 00:01:53,310
Perfect.

34
00:01:53,690 --> 00:01:55,370
And I'm going to go back here.

35
00:01:55,430 --> 00:01:58,590
Now I have these two that have the exact same route.

36
00:01:58,910 --> 00:02:01,620
You are at at least the different request verb.

37
00:02:01,820 --> 00:02:04,330
And I can combine them in a pretty cool way.

38
00:02:04,460 --> 00:02:07,370
So I'm going to delete this and change it to router.

39
00:02:07,430 --> 00:02:10,530
Route slash.

40
00:02:10,920 --> 00:02:21,610
And then I'm going to chain on the get and the post and I'm going to require helpers so I'm going to

41
00:02:21,610 --> 00:02:30,880
make a new variable and it is going to call it helper's equals required and path is dot dot slash helper's

42
00:02:30,970 --> 00:02:32,670
slash to do this.

43
00:02:33,250 --> 00:02:38,250
So this helper's variable will have create to do as a function and get to do.

44
00:02:38,570 --> 00:02:40,140
And so I want to map those.

45
00:02:40,210 --> 00:02:42,760
So don't get too slash.

46
00:02:43,090 --> 00:02:48,700
All I want to do is call helper's get to deuce and post.

47
00:02:48,700 --> 00:02:57,410
I just want to do helpers that create to do it spell it correctly and notice how much cleaner this is.

48
00:02:57,410 --> 00:02:58,900
So we still have the same logic.

49
00:02:58,910 --> 00:03:05,360
It just moved to a helper so that our routes are very explicit and very simple when you request slash

50
00:03:05,480 --> 00:03:09,820
which in actuality remember is slash API slash to use as a get.

51
00:03:09,860 --> 00:03:11,960
We're just going to get to these as opposed.

52
00:03:11,960 --> 00:03:13,680
We're going to create it to do.

53
00:03:13,970 --> 00:03:14,300
OK.

54
00:03:14,360 --> 00:03:16,280
So we can do the same thing here.

55
00:03:16,610 --> 00:03:18,020
I'll fast forward through some of this.

56
00:03:21,870 --> 00:03:22,670
I'll call this one.

57
00:03:22,670 --> 00:03:34,370
Get to Cingular and the next one I'll go and do our update so a copy that no call this exports update

58
00:03:34,690 --> 00:03:36,130
to do.

59
00:03:36,330 --> 00:03:37,000
Perfect.

60
00:03:37,020 --> 00:03:39,630
And then we have one more which is do we do

61
00:03:42,520 --> 00:03:43,950
so I'll come back here.

62
00:03:44,130 --> 00:03:47,830
Exports dot delete to do equals that.

63
00:03:48,270 --> 00:03:48,510
OK.

64
00:03:48,510 --> 00:03:54,580
So we move them all to a helper and now I have these three that I can combine in the same way.

65
00:03:54,750 --> 00:03:56,890
So I'm going to do a router route.

66
00:03:58,090 --> 00:04:01,640
The path they all have in common to do ID.

67
00:04:01,960 --> 00:04:10,180
And then we have our get and when we get request this path we're going to want to call get to do it

68
00:04:10,180 --> 00:04:11,230
instead of her helpers.

69
00:04:11,260 --> 00:04:17,510
Don't forget that helpers don't get to do make sure.

70
00:04:17,860 --> 00:04:29,610
Perfect then we'll come down and do adopt put it just helpers that update to do and then delete which

71
00:04:29,630 --> 00:04:36,140
is helper's that they call it removed to do now delete to do perfect.

72
00:04:36,450 --> 00:04:41,460
And we can get rid of this and look at how clean this is now.

73
00:04:41,800 --> 00:04:46,020
So all we've done is move our logic into a helper's file.

74
00:04:46,300 --> 00:04:50,800
And now our routes are really explicit that we're there grouped together first of all so all the routes

75
00:04:50,800 --> 00:04:53,430
to slash API slash to do's are here.

76
00:04:53,590 --> 00:04:58,090
All the app all the routes to slash API slash to use slash to do id or group tier.

77
00:04:58,090 --> 00:05:02,620
It's very easy to see how things are working and to debug if there's problems.

78
00:05:02,620 --> 00:05:06,350
So let's actually do that now let's make sure there aren't any problems.

79
00:05:06,510 --> 00:05:07,580
It looks good.

80
00:05:07,840 --> 00:05:08,800
Let's test it out.

81
00:05:10,670 --> 00:05:15,110
So we can get all of our traduce I can get a single to do as well.

82
00:05:15,290 --> 00:05:22,240
And then in postman Let's try creating a new to do so post and underbody include a name.

83
00:05:22,370 --> 00:05:28,550
And this one is going to be Joash pet hippo that looks good.

84
00:05:28,550 --> 00:05:34,950
Let's take this I.D. and let's try updating this one.

85
00:05:35,010 --> 00:05:40,700
So that's going to be a put request and we'll update the completed to be true.

86
00:05:40,980 --> 00:05:46,640
Right now TNT it's false get changed to true.

87
00:05:46,660 --> 00:05:48,550
Finally we have our delete.

88
00:05:48,550 --> 00:05:54,680
So if I just rerun or get requests you can see at the bottom we have washpot hippo let's delete it.

89
00:05:54,700 --> 00:05:55,520
We did it.

90
00:05:55,710 --> 00:06:00,090
So delete request says we they did it.

91
00:06:00,240 --> 00:06:02,780
Let's go back to our Get request to view all of them.

92
00:06:03,030 --> 00:06:04,420
And poor thing is gone.

93
00:06:04,440 --> 00:06:05,570
We watched her hippo.

94
00:06:05,820 --> 00:06:06,300
OK.

95
00:06:06,390 --> 00:06:08,420
So we have a completed API now.

96
00:06:08,460 --> 00:06:14,640
It's kind of a lot to set up the logic itself isn't terribly complex but it is a lot of files to make

97
00:06:14,640 --> 00:06:16,910
things nice and clean and modular.

98
00:06:17,070 --> 00:06:21,400
And this is I've said this a couple times but this is just for a single model to do.

99
00:06:21,510 --> 00:06:27,300
So as we incorporate other models other functionality things grow pretty quickly but we have a nice

100
00:06:27,300 --> 00:06:29,230
structure that allows that to happen.

101
00:06:29,250 --> 00:06:33,250
We have our models directory so if we add users we just need a user's model.

102
00:06:33,780 --> 00:06:37,050
If we want helpers for users we just add a user's helper file.

103
00:06:37,050 --> 00:06:38,290
Same thing for routes.

104
00:06:38,370 --> 00:06:41,650
So things are kind of set up for success as we grow.

105
00:06:41,780 --> 00:06:42,990
So that's it for this section.

106
00:06:43,020 --> 00:06:44,860
We have a working JS on API.

107
00:06:45,180 --> 00:06:48,760
Now what we're going to do is build an app using this API.

108
00:06:48,840 --> 00:06:55,530
So we're going to build a single page app using AJAX using Jey query to send requests from the front

109
00:06:55,530 --> 00:07:01,770
end to this API to retrieve all the tatoos to create a new one to delete one to update one and so on.

110
00:07:01,950 --> 00:07:06,960
So we're going to do that actually inside our own application which is kind of weird but that's how

111
00:07:07,110 --> 00:07:08,570
single page apps work these days.

112
00:07:08,640 --> 00:07:14,280
You have a back end API and then you're back and also serves up a nice page that has javascript on the

113
00:07:14,280 --> 00:07:17,440
front end that requests your own API and consumes it.

114
00:07:17,460 --> 00:07:18,880
So that's what we're going to do next.

115
00:07:19,010 --> 00:07:19,300
OK.

116
00:07:19,350 --> 00:07:21,500
Hopefully you made it through that unscathed.

117
00:07:21,510 --> 00:07:27,090
I know it's a little bit difficult and tedious and we didn't really have exercises but it's really just

118
00:07:27,090 --> 00:07:32,200
about making sure we have what we need to get to the Riak section and build a full stack re-act app.
