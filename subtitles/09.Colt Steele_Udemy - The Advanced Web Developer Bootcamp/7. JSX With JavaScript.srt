1
00:00:01,380 --> 00:00:02,160
Welcome back.

2
00:00:02,160 --> 00:00:07,290
So in our last video we made our first component with GSX and now we're going to look into GSX a bit

3
00:00:07,290 --> 00:00:09,540
more and see what it can do.

4
00:00:09,540 --> 00:00:14,810
Our objectives are to first write javascript inside of the GSX.

5
00:00:15,030 --> 00:00:20,150
Secondly to use a style attribute in Gas-X so you can actually have some styling now in our component.

6
00:00:20,580 --> 00:00:24,000
And lastly to add a class name attribute to GSX.

7
00:00:24,000 --> 00:00:27,960
Now let's go look at some code.

8
00:00:27,960 --> 00:00:31,880
Our goal now is to add some styling to this component that we used in the last video.

9
00:00:32,100 --> 00:00:37,650
So remember we've got a re-act component called Pet that returns a div and inside of that we've got

10
00:00:37,650 --> 00:00:39,660
moxie and our image.

11
00:00:39,660 --> 00:00:43,210
So this is jazz sex that we're going to add some styling to.

12
00:00:43,380 --> 00:00:46,200
Right now the component looks like this when rendered.

13
00:00:46,200 --> 00:00:51,130
So it's just a picture of Moxey and then the name Moxey let's make it look a little nicer.

14
00:00:51,480 --> 00:00:57,180
So first of all we're going to include this CSSA file with some classes.

15
00:00:57,180 --> 00:01:05,550
And the one thing that will take effect right away is this ID app which is used right here by this dev

16
00:01:05,760 --> 00:01:13,170
ID app is going to get some styling to use fluxbox will display flex give a flex direction row and justify

17
00:01:13,170 --> 00:01:14,230
content center.

18
00:01:14,250 --> 00:01:19,820
So let's see how that looks when we add the SS.

19
00:01:20,090 --> 00:01:22,580
So here I've added the link for my CSSA.

20
00:01:22,580 --> 00:01:24,380
I call that first component that saves us

21
00:01:28,960 --> 00:01:34,890
and you can see that we've centered the image in the H-2 but not much else has changed.

22
00:01:34,990 --> 00:01:38,010
So let's add some styling to make this look a little nicer.

23
00:01:38,020 --> 00:01:41,730
Specifically we're going to make the font here different and a little bigger.

24
00:01:41,770 --> 00:01:43,950
We're going to give this a border and a background color

25
00:01:47,450 --> 00:01:50,410
there already some classes that we can use in the CSSA file.

26
00:01:50,410 --> 00:01:51,690
So let's take a look.

27
00:01:54,190 --> 00:02:01,830
In here we've got a card class and the card will give background and some layout properties to the div

28
00:02:02,250 --> 00:02:04,150
inside of our component.

29
00:02:04,170 --> 00:02:09,030
Again I'm not going to go over every line but some of the highlights here that again we're using Fluxbox

30
00:02:09,390 --> 00:02:11,750
so that everything inside is a column.

31
00:02:12,000 --> 00:02:15,780
We're going to justify content center line item center.

32
00:02:15,780 --> 00:02:18,440
And we're also going to give a new front to the card.

33
00:02:18,440 --> 00:02:20,440
How do we actually use that in our component.

34
00:02:20,700 --> 00:02:25,170
Well let's go back to the GSX.

35
00:02:25,530 --> 00:02:33,470
You may assume that we could just say class equals card here and for most attributes in GSX that's true.

36
00:02:33,600 --> 00:02:36,070
But the problem here is that we're using Babbel.

37
00:02:36,180 --> 00:02:42,170
And remember babbel compiles from GSX into standard Javascript.

38
00:02:42,300 --> 00:02:47,760
And the problem there is that Babel doesn't know the difference between an aged CML class here and a

39
00:02:47,760 --> 00:02:49,200
javascript class.

40
00:02:49,440 --> 00:02:55,320
So in order for this to work any reserved keyword in javascript we have to name it differently.

41
00:02:55,530 --> 00:02:57,350
If it's inside the GSX.

42
00:02:57,420 --> 00:03:01,820
So if I don't want to use a javascript class here I need to name it class name.

43
00:03:02,520 --> 00:03:05,320
Let's take a look at the Web site and see what it looks like now.

44
00:03:08,410 --> 00:03:13,480
Now our card styling is being applied to our component so it looks like class name works.

45
00:03:13,500 --> 00:03:15,920
Let's see what else we can add.

46
00:03:16,190 --> 00:03:22,910
Now if we take a look at our CSSA will see that we also have this name class and that gives some styling

47
00:03:22,910 --> 00:03:24,660
to the title Moxey.

48
00:03:24,740 --> 00:03:26,590
So let's add that in as well.

49
00:03:28,600 --> 00:03:36,150
I'll give this H2 a class name equal to name and then take a look at what that looks like.

50
00:03:39,440 --> 00:03:42,860
And now you can see names applied there as well.

51
00:03:43,970 --> 00:03:44,600
So that's great.

52
00:03:44,600 --> 00:03:50,180
We've added some classes but let's also look at how we can add styles programmatically through javascript

53
00:03:52,180 --> 00:03:53,320
in order to add some styles.

54
00:03:53,320 --> 00:03:55,720
I'm going to create a little more content that we can style.

55
00:03:55,870 --> 00:03:58,790
So I'm going to give Moxey some hobbies.

56
00:03:58,810 --> 00:04:07,370
Let's make an H5 for hobbies and then underneath that all lists her hobbies.

57
00:04:07,540 --> 00:04:14,970
So Moxi likes to first of all sleep.

58
00:04:15,670 --> 00:04:18,130
And second of all to eat

59
00:04:25,580 --> 00:04:30,330
so see that content.

60
00:04:30,460 --> 00:04:34,760
OK so you've got hobbies and sleep eat down here but it doesn't look too great.

61
00:04:34,770 --> 00:04:42,810
So let's add some inline styles before I get started I should mention that if you're coming from a different

62
00:04:42,810 --> 00:04:49,800
framework or just a shemale you probably even told the inline styles are basically the worst thing ever.

63
00:04:49,890 --> 00:04:55,140
But in react they're actually not so bad because the way you build the component everything is bundled

64
00:04:55,140 --> 00:04:56,200
up as one.

65
00:04:56,370 --> 00:05:02,460
So your classes your component code and your inline styles are all in the same place.

66
00:05:02,610 --> 00:05:08,010
So you don't have the same confusion in an HMO when you might have a class doing one thing in mind style

67
00:05:08,010 --> 00:05:10,280
doing the other and it's very difficult to debug.

68
00:05:10,470 --> 00:05:16,000
So keep that in mind as you code inline styles in reactor actually not a bad thing.

69
00:05:20,030 --> 00:05:20,340
Right.

70
00:05:20,360 --> 00:05:21,920
How do we add styles.

71
00:05:21,920 --> 00:05:27,440
Well first of all in reacts we can add a style using javascript.

72
00:05:27,440 --> 00:05:32,900
So we're going to give it a javascript object that represents our CSSA.

73
00:05:32,960 --> 00:05:35,270
I'll just do it first and then explain.

74
00:05:35,270 --> 00:05:47,860
So first of all let's make a lifestyle and I'll set it equal to font size of 1.5 E-M and then I'll use

75
00:05:47,860 --> 00:05:57,540
that in my eyes.

76
00:05:57,680 --> 00:06:01,800
And as you can see our allies are now larger because of that font size that we added.

77
00:06:01,800 --> 00:06:10,180
So how's that working well first of all a style always takes an object which represents our CSSA.

78
00:06:10,470 --> 00:06:14,580
But this isn't CSSA this is a javascript object.

79
00:06:14,580 --> 00:06:20,160
So normally in CSSA I'd write something like Fonte dash size but this is an object and we want to keep

80
00:06:20,160 --> 00:06:24,170
with javascript standards we're going to use camel case instead.

81
00:06:24,180 --> 00:06:31,620
Also notice that is a javascript object so we can't just use 1.5 E-M by itself that wouldn't compile

82
00:06:31,620 --> 00:06:32,970
in Javascript.

83
00:06:32,970 --> 00:06:40,590
So we have to always remember or to quote any strings that we use here like 1.5 cm or so I want to make

84
00:06:40,590 --> 00:06:43,260
it 40 pixels or anything else.

85
00:06:43,260 --> 00:06:46,980
It would be in quotes whereas CSSA it wouldn't be.

86
00:06:47,400 --> 00:06:49,240
I'll change that back.

87
00:06:50,140 --> 00:06:50,810
OK.

88
00:06:51,120 --> 00:06:57,810
So that's how we have to format our style objects of what's going on down here inside the GSX.

89
00:06:57,900 --> 00:07:00,960
Why do we have another set of curly brackets in GSX.

90
00:07:00,960 --> 00:07:05,820
Anytime you include curly brackets you're saying I want to evaluate javascript here.

91
00:07:06,180 --> 00:07:12,090
So when you include style it accepts and objects and this lifestyle is an object.

92
00:07:12,540 --> 00:07:19,610
But in order to evaluate that object we put inside of curly braces again.

93
00:07:20,430 --> 00:07:24,870
So using curly braces to evaluate Javascript isn't just limited to styles.

94
00:07:24,870 --> 00:07:32,340
Anywhere inside of GSX we can use it to to evaluate some javascript code and have it be part of part

95
00:07:32,340 --> 00:07:33,730
of our GSX.

96
00:07:33,780 --> 00:07:38,790
So here I'm going to evaluate some javascript to say five plus five.

97
00:07:39,360 --> 00:07:46,000
And also maybe I'll say green plus blue

98
00:07:48,930 --> 00:07:53,490
and I expect these two things to be evaluated and rendered as part of my CML.

99
00:07:53,550 --> 00:07:54,920
So let's take a look.

100
00:08:00,010 --> 00:08:02,190
As you can see I've got 10 green blue.

101
00:08:02,190 --> 00:08:04,330
Now as part of the DOM.

102
00:08:04,600 --> 00:08:10,360
So this is a pretty powerful tool being able to evaluate javascript inside of our GSX and we'll see

103
00:08:10,360 --> 00:08:13,630
it being used a bunch as we go.

104
00:08:13,630 --> 00:08:24,670
Let's finish this off by getting rid of this here and adding some styles to our title.

105
00:08:24,770 --> 00:08:30,180
I could create an object up here separately but I could also write my object right in mine.

106
00:08:30,350 --> 00:08:34,330
Remember the first curly braces are saying evaluate Javascript.

107
00:08:34,430 --> 00:08:39,310
And the second set of curly braces are creating an object which defines my styles.

108
00:08:39,320 --> 00:08:43,540
So I'm going to make the font size here 14:00.

109
00:08:44,300 --> 00:08:53,510
I'm going to give it a margin of let's say 2 x to get rid of that default margin and then let's take

110
00:08:53,510 --> 00:08:55,250
a look and see what it looks like.

111
00:08:58,080 --> 00:08:59,040
All right there you go.

112
00:08:59,260 --> 00:09:04,040
So that's our finished Moxey component or pet component.

113
00:09:04,210 --> 00:09:07,720
It's got plenty of styling and I think it looks much better than before.

114
00:09:07,720 --> 00:09:12,570
So next up we'll do a little exercise to help solidify some of these concepts we just learned.
