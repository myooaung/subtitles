WEBVTT
1
00:00:00.270 --> 00:00:01.080
Welcome back.

2
00:00:01.230 --> 00:00:05.540
In this video we're going to discuss in different ways in which we can test our code.

3
00:00:05.760 --> 00:00:11.150
The first method we're going to be discussing is one called test driven development or TDD.

4
00:00:11.250 --> 00:00:17.230
The idea with TDD is that you actually write your test before you write your application code.

5
00:00:17.250 --> 00:00:21.930
This is a stark contrast to other testing methodologies which involve writing code and then testing

6
00:00:21.930 --> 00:00:24.130
it with test driven development.

7
00:00:24.150 --> 00:00:26.190
We follow a pattern called Red Green.

8
00:00:26.200 --> 00:00:32.190
Refactor what this means is that we develop products by starting with the tests we first write the tests

9
00:00:32.190 --> 00:00:33.020
for our code.

10
00:00:33.240 --> 00:00:37.960
Since we don't have any code yet these tests should fail after we see the tests fail.

11
00:00:37.980 --> 00:00:40.930
We write the code necessary to pass the tests.

12
00:00:40.980 --> 00:00:43.210
We then refactor our code as needed.

13
00:00:43.380 --> 00:00:48.210
As long as the tests are still passing we can be reasonably confident that we aren't introducing new

14
00:00:48.210 --> 00:00:53.090
bugs into our program as our applications grow larger and we add more features.

15
00:00:53.190 --> 00:00:57.840
We will still have a solid suite of tests which ensure that we are not adding additional bugs to our

16
00:00:57.840 --> 00:00:58.600
application.

17
00:00:59.450 --> 00:01:02.560
Test driven development is not something that is universally accepted.

18
00:01:02.660 --> 00:01:08.270
But it is a popular testing methodology and proponents of TDD will admit that even though the development

19
00:01:08.270 --> 00:01:13.610
process may be a bit longer with writing tests first the code written is much more likely to be bug

20
00:01:13.610 --> 00:01:16.260
free and maintainable as the code base grows.

21
00:01:16.940 --> 00:01:21.470
If you take a look at the jazzmen website one of the first things you'll see is that it is a behavior

22
00:01:21.500 --> 00:01:27.650
driven javascript framework jazzmen even describes itself as a BTD framework.

23
00:01:27.770 --> 00:01:35.180
So what's the idea of behavior driven development or BDD TDD is actually a subset of TDD.

24
00:01:35.180 --> 00:01:37.710
The two ideas are not mutually exclusive.

25
00:01:37.790 --> 00:01:43.010
You can have behavior driven development without test driven development and vice versa.

26
00:01:43.040 --> 00:01:49.190
The idea behind behavior driven development or BDD is that when writing tests we describe the behavior

27
00:01:49.190 --> 00:01:53.210
of our functionality and not just what we expect the result to be.

28
00:01:53.210 --> 00:01:59.060
When you use functions like describe it the first parameter to each of these is a string for how we

29
00:01:59.060 --> 00:02:02.360
want to describe the behavior of what we are testing.

30
00:02:02.360 --> 00:02:07.910
BDD involves being verbose with our style and describing the behavior of our functionality.

31
00:02:07.910 --> 00:02:13.100
This is helpful when testing the design of some software instead of just testing or describing the expected

32
00:02:13.160 --> 00:02:13.940
output.

33
00:02:13.970 --> 00:02:19.070
We can be much more descriptive in our tests in the next video we'll talk about some other forms of

34
00:02:19.070 --> 00:02:21.990
testing and recap everything we've learned so far.

35
00:02:22.010 --> 00:02:22.410
See the.
