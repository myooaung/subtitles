WEBVTT
1
00:00:00.240 --> 00:00:05.640
Get in this video or trying to get the delete functionality and the first thing we need to do is actually

2
00:00:05.640 --> 00:00:09.250
add a little X to click and each one of these.

3
00:00:09.330 --> 00:00:11.280
So we all have to style it at all.

4
00:00:11.490 --> 00:00:16.530
All that we need to add is a single little span with the letter X inside of it.

5
00:00:16.530 --> 00:00:22.560
So when we insert the scroll down to where we're creating the to do right here after we add the to do

6
00:00:22.560 --> 00:00:30.630
that name we're going to add in a span with the letter X and then close that span just like that.

7
00:00:31.020 --> 00:00:32.130
And let's take a look.

8
00:00:32.320 --> 00:00:38.220
And now as I hover you will see that we have this nice little red X and that only appears I'm playing

9
00:00:38.220 --> 00:00:39.100
with the opacity.

10
00:00:39.120 --> 00:00:40.760
So if you're curious how that works.

11
00:00:40.970 --> 00:00:47.230
If you scroll down can see that by default span instead of an ally is set to have opacity zero.

12
00:00:47.430 --> 00:00:54.540
But when we hover actually appear when we hover over the task we set the capacity to 1.

13
00:00:54.630 --> 00:01:00.350
So I can hover over anywhere in that task and we can see the x and then there's a slight hover effect.

14
00:01:00.360 --> 00:01:04.950
I don't even know if it's noticeable in the video but the X gets slightly redder when we're actually

15
00:01:04.950 --> 00:01:05.890
on top of it.

16
00:01:06.940 --> 00:01:07.470
OK.

17
00:01:07.760 --> 00:01:14.810
So what we want to do is now listen for a click on that X and then remove the corresponding to do.

18
00:01:15.350 --> 00:01:17.240
So let's go up here into our app.

19
00:01:17.270 --> 00:01:18.190
Yes.

20
00:01:18.200 --> 00:01:20.810
Just like before I'm going to add my event listener here.

21
00:01:20.960 --> 00:01:31.520
This time we're looking for spand so any span not spam and any time we click on one we're going to run

22
00:01:32.730 --> 00:01:36.630
a single little function but just to counter that log correct.

23
00:01:37.200 --> 00:01:41.630
So we'll save and let's open up our console.

24
00:01:42.290 --> 00:01:47.550
So I click over here nothing happens and if I click on the span nothing happens either.

25
00:01:47.660 --> 00:01:49.730
So what's going on.

26
00:01:49.730 --> 00:01:53.210
And the answer here has to do with event delegation.

27
00:01:53.660 --> 00:02:00.440
So when our code is running here we scroll up when we're adding this quick listener to all span's.

28
00:02:00.440 --> 00:02:04.730
This is happening at the very beginning when the page loads.

29
00:02:04.900 --> 00:02:08.260
So there's no guarantee that any span's are actually there.

30
00:02:08.440 --> 00:02:14.410
So we can actually illustrate what's happening better if I add in a new ally here that will load at

31
00:02:14.410 --> 00:02:15.720
the very beginning.

32
00:02:15.760 --> 00:02:25.190
So I'll just say this is starter text and then I'll add in a span and that's Bennell does have an X

33
00:02:27.110 --> 00:02:30.740
and I'll give it a class equals task just to make it look the same.

34
00:02:30.740 --> 00:02:32.870
So this one starts off here.

35
00:02:32.960 --> 00:02:35.870
This is not generated from javascript that is there.

36
00:02:35.960 --> 00:02:40.850
And I click that span and it works but none of the other spans do.

37
00:02:40.850 --> 00:02:43.330
And that's because they're not there when the page loads.

38
00:02:43.340 --> 00:02:49.490
So what we need to do we need to work with Jay Querini javascript here and instead of listening for

39
00:02:49.490 --> 00:02:56.060
clicks on the span or any span we want to attach a listener to something that is on the page at the

40
00:02:56.060 --> 00:02:57.470
time it loads.

41
00:02:57.830 --> 00:03:05.030
So those spans are inside of a well into an ally instead of a UL and that you is there when the page

42
00:03:05.030 --> 00:03:05.730
loads.

43
00:03:06.020 --> 00:03:12.350
So we're going to attach a listener to the list class equal list but there's some magic.

44
00:03:12.380 --> 00:03:18.710
So it started off with the up list on quick which anywhere we click on the list is going to trigger

45
00:03:18.710 --> 00:03:20.790
that whether it's a span or not.

46
00:03:21.140 --> 00:03:28.710
But if we add in a second after quick second string and we specify only on span's.

47
00:03:28.760 --> 00:03:32.500
So what this will do is add the listener itself to the list.

48
00:03:32.930 --> 00:03:34.520
But we're listening for clicks.

49
00:03:34.520 --> 00:03:38.300
In particular on a span inside that list.

50
00:03:38.630 --> 00:03:41.780
So we're routing it in something that is there when the page loads.

51
00:03:41.780 --> 00:03:49.730
Now if I refresh first one works and so do the other ones it's hard to see but just look at that number

52
00:03:49.730 --> 00:03:50.360
increasing.

53
00:03:50.360 --> 00:03:51.990
When I click on that x.

54
00:03:52.130 --> 00:03:57.740
So this is a common problem when we're working with single page apps and Jay query or whatever javascript

55
00:03:57.740 --> 00:04:03.670
we're using we need to make sure that all listeners are applying even to dynamically generated code.

56
00:04:03.680 --> 00:04:08.570
So when I insert something new here does that span work.

57
00:04:08.570 --> 00:04:09.670
And the answer is yes.

58
00:04:09.850 --> 00:04:15.690
And that's only because we're adding the click listener to the well itself.

59
00:04:16.150 --> 00:04:20.770
OK so now we have that we've got her button there and it's listening for it to click on it.

60
00:04:20.770 --> 00:04:24.530
So now what we have the quick we know what it's been clicked on.

61
00:04:24.580 --> 00:04:29.990
So when I click on this X I want to remove this to do so.

62
00:04:30.040 --> 00:04:31.500
There's two things involved in that.

63
00:04:31.510 --> 00:04:38.140
One is sending the delete request and that's a little trickier because we actually need to know exactly

64
00:04:38.140 --> 00:04:42.970
where we're sending the request to because we need the I.D. of this to do and right now we don't have

65
00:04:42.970 --> 00:04:44.300
access to that.

66
00:04:44.350 --> 00:04:45.490
We're not adding it anywhere.

67
00:04:45.490 --> 00:04:50.600
We're not keeping track of it all that we're doing is adding some text to the page.

68
00:04:50.890 --> 00:04:52.570
No IDs to be found.

69
00:04:52.570 --> 00:04:53.400
The other thing to do.

70
00:04:53.410 --> 00:04:56.960
It's a little easier is just removing it from the door to do that.

71
00:04:57.010 --> 00:05:02.370
All we need to do is say OK the spend that was quite find its parent element which is the whole ally

72
00:05:02.590 --> 00:05:04.320
and remove that whole thing.

73
00:05:04.630 --> 00:05:11.440
So to identify the span that was correct we can just do a dollar sign this parent will give us an ally

74
00:05:12.580 --> 00:05:13.800
remove.

75
00:05:14.710 --> 00:05:18.470
And if we take a look now it's working perfectly.

76
00:05:18.910 --> 00:05:20.560
But of course they're fresh of the page.

77
00:05:20.560 --> 00:05:26.530
These will all be there because we're not deleting them in any way aside from just visually on the page

78
00:05:26.530 --> 00:05:30.110
on the front and we're not actually sending the request to delete them.

79
00:05:30.130 --> 00:05:34.720
So what we need to do we'll be sending a delete request so it's going to be a dollar sign.

80
00:05:34.750 --> 00:05:42.010
Ajax There's no shortcut method for doing it and we're going to have method delete.

81
00:05:42.490 --> 00:05:45.130
But then the real important thing is where do we send it to.

82
00:05:45.130 --> 00:05:45.970
What's that you are.

83
00:05:46.130 --> 00:05:46.810
And that you are.

84
00:05:46.880 --> 00:05:51.130
It's going to be slash API slash to Dewes slash.

85
00:05:51.130 --> 00:05:52.890
How do we get the ID.

86
00:05:53.170 --> 00:05:59.440
And the answer is that when we actually insert each one of these to use down here we're going to store

87
00:05:59.680 --> 00:06:05.770
our to do Id long Mongo thing we're going to store it instead of Jey queries data.

88
00:06:06.220 --> 00:06:11.080
So what we could do is actually add it into our allies somewhere or we could hide it.

89
00:06:11.080 --> 00:06:17.470
So you can do a data attribute if you've never seen that something like data ID and set that equal to

90
00:06:17.710 --> 00:06:19.750
whatever the what is it to do.

91
00:06:19.780 --> 00:06:21.710
Underscore ID.

92
00:06:22.450 --> 00:06:23.560
We can use that.

93
00:06:23.980 --> 00:06:29.830
But Jay query has an easier way actually where I can just add whatever data I want to any Jey query

94
00:06:29.830 --> 00:06:30.520
element.

95
00:06:30.520 --> 00:06:36.910
So let me show you going to do new to do that data which is the method and give an attribute name.

96
00:06:36.970 --> 00:06:38.640
So a key and then a value.

97
00:06:38.650 --> 00:06:44.010
Now I'm just going to call this ID and the value of ID.

98
00:06:44.110 --> 00:06:46.860
Maybe I'll just set it to be one.

99
00:06:47.290 --> 00:06:49.930
So all of these are going to have an idea of one.

100
00:06:49.930 --> 00:06:56.170
Every time it is created and we won't see anything to make that clear there's nothing here there's nothing

101
00:06:56.170 --> 00:07:04.360
in our age HMO to show that they have this data I.D. It's not showing up anywhere because what's happening

102
00:07:04.360 --> 00:07:08.470
is that J queries actually just holding that in memory it's just keeping track of that.

103
00:07:08.490 --> 00:07:13.300
But this new to do here has a data ID of one.

104
00:07:13.300 --> 00:07:16.250
So what we can do is actually retrieve that I.D. later.

105
00:07:16.300 --> 00:07:22.540
So when we click on the span instead of removing it when it comes to all of this out for a moment we're

106
00:07:22.540 --> 00:07:31.930
just going to access this parent which gives us the lie that new to do that data I.D. and I'm going

107
00:07:31.930 --> 00:07:33.810
to print that whole thing out.

108
00:07:35.960 --> 00:07:39.420
So this is going to first find the span that was quick.

109
00:07:39.440 --> 00:07:41.110
That's what dollars and this is.

110
00:07:41.120 --> 00:07:47.630
Then find the parent which is an ally and then try and find a value for the ID attribute that we store

111
00:07:47.840 --> 00:07:50.340
earlier which right now they're all equal to one.

112
00:07:50.570 --> 00:07:51.960
Let's check what happens.

113
00:07:52.000 --> 00:07:53.320
Look at my con..

114
00:07:53.590 --> 00:07:57.000
Right click on a span and it tells me one.

115
00:07:57.290 --> 00:08:00.550
So the next step is to actually store the Real I.D..

116
00:08:00.690 --> 00:08:02.210
So we'll scroll down.

117
00:08:02.210 --> 00:08:02.960
Where are you.

118
00:08:02.960 --> 00:08:03.950
Here we are.

119
00:08:04.010 --> 00:08:12.200
And new data I.D. instead of one is going to be to do dot underscore I.D. And remember that's how Mungo's

120
00:08:12.200 --> 00:08:12.910
stores it.

121
00:08:12.960 --> 00:08:15.700
If you're looking postman this is what we're working with.

122
00:08:15.930 --> 00:08:20.490
So we're storing this underscore ID for each one of these.

123
00:08:20.540 --> 00:08:23.850
They have a unique ID and restoring that using dot data.

124
00:08:23.850 --> 00:08:26.000
So now let's refresh the page.

125
00:08:26.000 --> 00:08:27.390
I click on any of these spans.

126
00:08:27.390 --> 00:08:30.940
Aside from the first one because this first one is a starter.

127
00:08:31.050 --> 00:08:32.630
Well delete that in just a moment.

128
00:08:33.030 --> 00:08:38.360
You can see I'm getting a unique ID and they look all the same but look towards the end and they are

129
00:08:38.370 --> 00:08:41.200
different technique for each one.

130
00:08:41.210 --> 00:08:48.230
So now we just need to take that extract it back out add it to the you know send it delete request there.

131
00:08:48.360 --> 00:08:52.410
Before I forget I remove the starter code that we had here.

132
00:08:52.470 --> 00:08:54.560
So we don't have anything in this list.

133
00:08:54.810 --> 00:08:57.290
So we were fresh now and we don't see that one up top.

134
00:08:57.530 --> 00:08:58.180
OK.

135
00:08:58.620 --> 00:08:59.780
So these are these are working.

136
00:08:59.790 --> 00:09:02.130
Let's now send the correct request.

137
00:09:02.610 --> 00:09:06.270
So over here when we're Where are we.

138
00:09:06.270 --> 00:09:06.990
Here we go.

139
00:09:07.230 --> 00:09:10.660
When we're confident logging the I.D. We don't need to do that anymore.

140
00:09:10.770 --> 00:09:16.950
Let's just save that to a variable and we'll call this variable clicked ID.

141
00:09:16.960 --> 00:09:19.260
How about that.

142
00:09:19.260 --> 00:09:20.350
Just like that.

143
00:09:20.430 --> 00:09:27.090
So it equals whatever Spanoulis correct parent which is now lie that data ID and then we're going to

144
00:09:27.090 --> 00:09:31.570
send the age request which has a method of delete.

145
00:09:31.680 --> 00:09:35.460
And are euro needs to be Sachi API slash to do.

146
00:09:35.790 --> 00:09:38.860
And then we can do it here we could just add plus sign.

147
00:09:39.060 --> 00:09:40.730
But I like to keep this clean.

148
00:09:40.800 --> 00:09:45.070
So I'm going to make a new variable called Delete.

149
00:09:45.190 --> 00:09:52.180
You are well it's going to be equal to that plus clicked ID.

150
00:09:52.260 --> 00:09:57.600
So we're just combining this sort of taking that long Id we're adding it to slash API slash to do to

151
00:09:57.600 --> 00:10:04.370
constructs that you are ill and then we're sending our delete request to that you URL.

152
00:10:04.620 --> 00:10:05.030
And that's it.

153
00:10:05.030 --> 00:10:06.460
We don't need to send a payload.

154
00:10:06.510 --> 00:10:14.610
There's no data that goes along with it and then we'll add in then and nothing should be returned back.

155
00:10:14.610 --> 00:10:15.830
Actually that's not true.

156
00:10:15.840 --> 00:10:22.170
We are responding with a message so we can just let's just call it data and we can start by constantly

157
00:10:22.200 --> 00:10:26.400
logging data and just see if it worked.

158
00:10:26.400 --> 00:10:33.250
So when I refresh the page and I click on one of these Let's do this last one the jibberish.

159
00:10:34.260 --> 00:10:36.480
We get our message coming back from the server.

160
00:10:36.490 --> 00:10:44.220
We deleted it and if we actually look here we can see in our debug mode to do out remove is run with

161
00:10:44.220 --> 00:10:45.240
this ID.

162
00:10:45.810 --> 00:10:50.880
And if I refresh the entire page here it's still here because we're not removing it.

163
00:10:50.950 --> 00:10:56.310
Now for fresh it's not there because when the page loads this is all that it finds when it does it's

164
00:10:56.310 --> 00:10:59.190
get Jason because that's all there is.

165
00:10:59.190 --> 00:11:03.600
So the last thing to do is to remove it to do itself which you've already done or we've seen how to

166
00:11:03.600 --> 00:11:06.950
do which is using this top parent out remove.

167
00:11:06.960 --> 00:11:10.350
But before I do that I'm actually going to extract this code out.

168
00:11:12.170 --> 00:11:14.440
And see what we need as we go.

169
00:11:14.640 --> 00:11:19.520
And I'm just going to have a function that's called just like it did for the other ones create to do

170
00:11:19.820 --> 00:11:20.530
had to do.

171
00:11:20.660 --> 00:11:24.540
I'm going to call this one remove to do and then remove to do.

172
00:11:24.760 --> 00:11:28.150
I'm going to pass in this parent.

173
00:11:28.190 --> 00:11:33.020
So the entire parent itself the entire To do we don't really care about the span itself anymore.

174
00:11:33.290 --> 00:11:39.200
Remove to do which isn't defined it's going to take in the entire To do so then down here scroll to

175
00:11:39.200 --> 00:11:49.250
the bottom well define function removed to do when to paste all this in here and we're going to start

176
00:11:49.250 --> 00:11:51.070
off by refactoring so quickly.

177
00:11:51.110 --> 00:11:53.870
ID is no longer this step parent.

178
00:11:53.870 --> 00:12:01.370
It's just to do data ID because we're passing this stuff parent in under the name to do and or delete

179
00:12:01.370 --> 00:12:02.920
you or else the same.

180
00:12:03.050 --> 00:12:03.990
We're not going to do this stuff.

181
00:12:04.010 --> 00:12:07.190
Parents remove me and do this properly.

182
00:12:07.500 --> 00:12:15.660
So then function data so when it works we're going to take to do that remove Pittsboro.

183
00:12:16.070 --> 00:12:20.660
So to do so we're passing in the entire ally.

184
00:12:21.470 --> 00:12:24.410
If it works that delete requests we will remove it.

185
00:12:24.410 --> 00:12:25.370
Let's test it out.

186
00:12:26.790 --> 00:12:27.990
Any council errors.

187
00:12:27.990 --> 00:12:28.930
Looks good.

188
00:12:29.310 --> 00:12:35.490
So to remove one of these Bruce hiders looks like it worked to removed from our page to refresh the

189
00:12:35.490 --> 00:12:36.990
page it's gone.

190
00:12:36.990 --> 00:12:39.270
You can see that delete come in here.

191
00:12:39.270 --> 00:12:40.450
Perfect.

192
00:12:40.470 --> 00:12:43.610
So let's also get rid of both of these by Cheese's.

193
00:12:43.650 --> 00:12:45.650
Finally it can clean up my list.

194
00:12:46.140 --> 00:12:48.080
So that's all working perfectly.

195
00:12:48.230 --> 00:12:52.010
You know we could add in our catch of course which we don't have.

196
00:12:52.260 --> 00:12:54.740
Always good but not really the focus of this.

197
00:12:54.750 --> 00:12:59.430
But we'll just cancel that log an error which is pretty annoying from a user's point of view.

198
00:12:59.700 --> 00:13:02.790
They won't see anything unless they're tech savvy and look in the council.

199
00:13:03.000 --> 00:13:05.390
But yeah it's all we care about for now.

200
00:13:05.890 --> 00:13:06.140
OK.

201
00:13:06.150 --> 00:13:08.070
So to reiterate how this works.

202
00:13:08.190 --> 00:13:09.630
The real trick there is two things.

203
00:13:09.630 --> 00:13:15.150
One was making sure that we're listening for clicks on something that exists on the page at the beginning.

204
00:13:15.720 --> 00:13:21.900
And within that we're looking for spans which are dynamically added and then the second thing is that

205
00:13:21.900 --> 00:13:27.770
we actually need to keep track of the IDs with each to do item.

206
00:13:27.780 --> 00:13:30.930
So this is kind of a common problem with single page apps.

207
00:13:31.010 --> 00:13:32.970
You have all this data from your database.

208
00:13:33.000 --> 00:13:34.770
How do you keep it in sync.

209
00:13:34.830 --> 00:13:36.170
Where do you store it.

210
00:13:36.180 --> 00:13:39.590
So this is just a view this is just the front end it's what the user sees.

211
00:13:39.780 --> 00:13:46.110
But should we put every little piece of data along with it and just hide it or do we create a javascript

212
00:13:46.110 --> 00:13:47.040
object to model it.

213
00:13:47.040 --> 00:13:50.520
Do we create a framework which is why frameworks like re-act exist.

214
00:13:50.580 --> 00:13:52.260
They help you keep your data in sync.

215
00:13:52.350 --> 00:13:56.460
If something changes in one place it can change in another place.

216
00:13:56.460 --> 00:14:02.820
So all that's to say we are using j queries dot data method to store a little piece of data.

217
00:14:02.850 --> 00:14:08.970
The ID for each wannabee's when we click on the corresponding x it goes to the parent finds that Id

218
00:14:08.990 --> 00:14:11.300
sent to the request using that ID.

219
00:14:11.370 --> 00:14:13.960
If it works then it's finally removed.

220
00:14:14.310 --> 00:14:21.660
Let's make sure it works on newly created ones so things we create after the page loads looks good no

221
00:14:21.660 --> 00:14:22.540
consulars.

222
00:14:22.660 --> 00:14:27.580
So that's delete the last thing we need to work on is getting our update to work so I can toggle on

223
00:14:27.580 --> 00:14:29.570
and off the completion status.
