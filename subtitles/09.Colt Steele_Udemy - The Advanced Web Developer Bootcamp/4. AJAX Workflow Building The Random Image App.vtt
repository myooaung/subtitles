WEBVTT
1
00:00:00.240 --> 00:00:01.030
Welcome back.

2
00:00:01.290 --> 00:00:06.690
So we've seen her make a single request using an X H.R. but that really isn't Ajax.

3
00:00:06.690 --> 00:00:11.580
Remember that Ajax is the confluence of making a request however you do it.

4
00:00:11.580 --> 00:00:17.730
SH In our case plus manipulating the dom in some way to make a seamless experience for your user.

5
00:00:18.000 --> 00:00:22.200
Basically we're doing part of the equation we're making the request but we're not doing anything with

6
00:00:22.200 --> 00:00:23.150
the data.

7
00:00:23.430 --> 00:00:28.280
So we're going to go through and make a very simple silly app today but it will do.

8
00:00:28.530 --> 00:00:30.870
I have it open here or in the starter code.

9
00:00:30.870 --> 00:00:37.560
It doesn't work just yet but we have a button we click this button and it will replace this image with

10
00:00:37.590 --> 00:00:40.010
a new random dog image.

11
00:00:40.020 --> 00:00:41.600
I'm sorry for any cat lovers.

12
00:00:41.820 --> 00:00:43.170
I couldn't find a cat epeat.

13
00:00:43.260 --> 00:00:44.090
Actually that's a lie.

14
00:00:44.100 --> 00:00:47.670
I didn't look for a cat API but I don't think one exists.

15
00:00:47.700 --> 00:00:49.130
So we're using dogs.

16
00:00:49.200 --> 00:00:51.150
This is what the API looks like by the way.

17
00:00:51.360 --> 00:00:56.180
So every time we request it notice this you know it changes.

18
00:00:56.190 --> 00:01:00.110
It gives us a random one might be hard to see that small but it does change.

19
00:01:00.120 --> 00:01:02.030
So we're going to take this you RL.

20
00:01:02.490 --> 00:01:05.890
Well first when you click this button we want it to trigger a request.

21
00:01:05.910 --> 00:01:08.630
That request goes off comes back.

22
00:01:08.790 --> 00:01:16.090
Then we take this you know and we update show you here this image what part do we update.

23
00:01:16.140 --> 00:01:17.600
We update the source.

24
00:01:17.670 --> 00:01:23.040
So it has a source already that I've given it just a standard kind of starter image but we'll be changing

25
00:01:23.040 --> 00:01:24.510
this as we go.

26
00:01:24.870 --> 00:01:26.530
So that's really the Ajax flow.

27
00:01:26.670 --> 00:01:33.090
Something happens to initiate a request then that request goes off comes back and then you do something

28
00:01:33.090 --> 00:01:36.950
with the data to manipulate the Dom to show that change.

29
00:01:36.960 --> 00:01:41.740
So in the case of Gmail what is actually initiating those requests.

30
00:01:41.850 --> 00:01:48.420
Well what actually happens or what used to happen is that it was on a timer and every let's say 30 seconds

31
00:01:48.420 --> 00:01:53.420
or a minute a request would be made to Google server to say hey does cold have any new e-mails.

32
00:01:53.550 --> 00:01:59.820
If he does give them to us then they come back and then in our javascript those new emails are appended

33
00:01:59.820 --> 00:02:01.020
to the page.

34
00:02:01.100 --> 00:02:04.110
The Dahmus manipulated in the same way we're going to do here.

35
00:02:04.170 --> 00:02:08.390
But rather than an image that we're adding they're adding whatever aged him markup.

36
00:02:08.510 --> 00:02:14.280
Email needs or in the case of Pinterest like we saw earlier scrolling down to the bottom triggers the

37
00:02:14.340 --> 00:02:15.930
request the request is made.

38
00:02:15.930 --> 00:02:19.010
Data comes back and then new pens are appended.

39
00:02:19.050 --> 00:02:20.550
So we're starting simple.

40
00:02:20.550 --> 00:02:21.560
We have a button here.

41
00:02:21.870 --> 00:02:26.130
And the first thing that we should do is just get code to run when we click the button.

42
00:02:26.340 --> 00:02:29.690
So that's simple but start by selecting the button.

43
00:02:29.970 --> 00:02:32.290
I should point out our markup.

44
00:02:32.370 --> 00:02:33.790
Very very simple.

45
00:02:33.870 --> 00:02:40.560
I just have a container instead of that and H-1 that we're not manipulating an image tag that we will

46
00:02:40.560 --> 00:02:43.770
be updating and a button that we care about.

47
00:02:43.960 --> 00:02:51.020
It has an ID code and we just want to be able to capture those clicks trigger the request then the C

48
00:02:51.020 --> 00:02:58.650
S S is very simple actually use fluxbox as you can see to center things here horizontally but really

49
00:02:58.650 --> 00:02:59.610
doesn't matter.

50
00:02:59.610 --> 00:03:03.320
So I'm going to hide that focus on our.

51
00:03:03.340 --> 00:03:05.850
No I didn't just hide it in unheated

52
00:03:10.520 --> 00:03:12.560
and Ormoc javascript a little bigger.

53
00:03:12.910 --> 00:03:13.600
OK.

54
00:03:14.140 --> 00:03:15.810
So we're going to select the button.

55
00:03:16.060 --> 00:03:23.230
I'll call it between and I'll use queery selector document dot query selector.

56
00:03:23.230 --> 00:03:27.010
The ID is PTEN and save.

57
00:03:27.280 --> 00:03:32.140
Then we'll do a BT and add event listener click

58
00:03:35.250 --> 00:03:41.040
give it a function here and let's just do an alert clicked just to make sure everything is hooked up

59
00:03:41.040 --> 00:03:41.720
correctly.

60
00:03:41.880 --> 00:03:49.520
So when I click that button we should get an alert that says clicked and it works OK.

61
00:03:49.830 --> 00:03:56.750
So rather than just alerting us we want to actually make the request.

62
00:03:57.090 --> 00:04:00.980
So we'll start with listen for clicks.

63
00:04:01.230 --> 00:04:03.380
Make the request when the click happens.

64
00:04:03.450 --> 00:04:04.880
This is all of our fun.

65
00:04:04.890 --> 00:04:05.920
Exige our code.

66
00:04:06.090 --> 00:04:11.080
So we'll make a new request for X H.R. equals x.

67
00:04:11.170 --> 00:04:17.590
Oh all caps h caps lowercase TTP request with Capitol R.

68
00:04:18.690 --> 00:04:20.070
Let's figure out that u r l.

69
00:04:20.130 --> 00:04:21.890
So I have that here.

70
00:04:24.080 --> 00:04:26.850
D'Agde CEO slash API slash.

71
00:04:27.020 --> 00:04:28.130
Image slash random.

72
00:04:28.130 --> 00:04:29.900
Also include that as a link.

73
00:04:29.900 --> 00:04:33.170
Come back just pasted in to start.

74
00:04:33.260 --> 00:04:35.980
We're going to want to do our ex-aide char.

75
00:04:36.170 --> 00:04:41.630
Open the first parameter is get string.

76
00:04:41.660 --> 00:04:46.010
The second one is the string if you are up then we have our ex-aide chart.

77
00:04:46.100 --> 00:04:49.150
Send OK.

78
00:04:49.370 --> 00:04:54.040
So we're getting there now we need to actually do something with the data.

79
00:04:54.140 --> 00:04:58.650
And that's where we have to do our on ready state change one code.

80
00:04:58.730 --> 00:05:08.450
So Exige are done right on ready state change equals function.

81
00:05:09.290 --> 00:05:13.140
And in here we'll add in our if basically check if it's done.

82
00:05:13.250 --> 00:05:21.660
So if ex-aide Charcot ready state always confusing to that state is capitalized here but not here.

83
00:05:22.010 --> 00:05:25.720
But no most events are all events are uncapitalized.

84
00:05:25.730 --> 00:05:31.310
It does make sense but it can be confusing if it equals four.

85
00:05:31.440 --> 00:05:33.640
And let's just do our status code as well.

86
00:05:33.930 --> 00:05:38.400
And ex-aide chart status equals the cost 200.

87
00:05:38.430 --> 00:05:40.480
Let's just do the log.

88
00:05:41.070 --> 00:05:44.590
Ex-aide Charcot response text.

89
00:05:45.060 --> 00:05:46.550
Ok that's a mouthful there.

90
00:05:46.560 --> 00:05:54.120
But make a new request when a click happens we send it to this you are Alice get request then more checking

91
00:05:54.170 --> 00:05:56.340
and the time that the ready state changes.

92
00:05:56.400 --> 00:05:57.510
Is it equal to 4.

93
00:05:57.540 --> 00:06:00.410
Meaning that it's done and is the status code 200.

94
00:06:00.420 --> 00:06:02.360
Meaning that it worked successfully.

95
00:06:02.420 --> 00:06:02.820
Status.

96
00:06:02.830 --> 00:06:03.460
OK.

97
00:06:03.640 --> 00:06:08.460
If that's true both of those conditions then just print out the response text and we won't see anything

98
00:06:08.460 --> 00:06:09.120
here.

99
00:06:09.300 --> 00:06:10.860
We're just making the request.

100
00:06:11.160 --> 00:06:12.220
Let's see.

101
00:06:12.750 --> 00:06:18.210
I'm getting an error message saying that I need to add the new keyword which is true wherever creating

102
00:06:18.210 --> 00:06:23.190
the requests I need to say new XM out keep request.

103
00:06:23.490 --> 00:06:30.430
OK so now when I click the button I go to my console can see I get some data.

104
00:06:30.450 --> 00:06:32.750
Now this is different than the get hub API.

105
00:06:32.970 --> 00:06:35.780
Remember that the GET HOME API just sent me a thing a text.

106
00:06:35.850 --> 00:06:38.470
It wasn't structured as Jaison or X-amount.

107
00:06:38.670 --> 00:06:41.560
But this is structured as Jaison.

108
00:06:41.820 --> 00:06:49.200
So if I want to get let me go to the go to the actual source of it I just want the message I don't care

109
00:06:49.200 --> 00:06:49.860
about status.

110
00:06:49.860 --> 00:06:55.950
I want the message and the corresponding u r l so that I can get that image to do that.

111
00:06:55.950 --> 00:06:59.090
You'd think I could just say Dot message

112
00:07:01.580 --> 00:07:06.030
because it looks like javascript object message would get me that.

113
00:07:06.430 --> 00:07:12.190
But if I try and click the button I just get undefined every time.

114
00:07:13.290 --> 00:07:14.320
Three times a night.

115
00:07:14.370 --> 00:07:19.070
So it's still going and getting the data to be clear but don't message doesn't exist.

116
00:07:19.290 --> 00:07:22.120
And that's because it's not a javascript object.

117
00:07:22.140 --> 00:07:23.640
This can be confusing.

118
00:07:23.640 --> 00:07:26.680
It's Jason but it's still all a string.

119
00:07:27.030 --> 00:07:31.200
What I need to do is convert it to a javascript object from that string.

120
00:07:31.230 --> 00:07:32.960
So it actually looks like this.

121
00:07:33.120 --> 00:07:34.770
If I just copied it.

122
00:07:35.100 --> 00:07:44.290
If this is the data we're getting back that looks like an object but put it on quotes like this.

123
00:07:44.520 --> 00:07:50.720
And that's what it looks like and I can't do Dunton message on a string like I could on an object.

124
00:07:50.730 --> 00:07:54.820
So we need to turn it into Jaison and the way we do that is very simple.

125
00:07:54.870 --> 00:08:00.180
There's a method called Jaison dot parse just like that.

126
00:08:00.210 --> 00:08:07.560
So I want to give it ex-aide Charcot response text tell it to parse that and save the result as a variable

127
00:08:07.620 --> 00:08:09.100
we'll call it far.

128
00:08:09.120 --> 00:08:15.510
Data equals Jason parse Exige our response text then we'll count the log data.

129
00:08:17.260 --> 00:08:23.170
So it should actually give us the exact same thing but you'll notice a slight difference may refresh.

130
00:08:23.170 --> 00:08:26.960
Click the button corrects my.

131
00:08:27.640 --> 00:08:28.360
Do a better click.

132
00:08:28.360 --> 00:08:29.950
There we go.

133
00:08:29.950 --> 00:08:34.930
Notice that this time instead of just being text it's an interactive object.

134
00:08:34.930 --> 00:08:39.600
That's how we know it's actually an object says that rather than just being a string.

135
00:08:39.610 --> 00:08:47.980
So now we can say Dot message OK save one last time.

136
00:08:48.000 --> 00:08:52.060
Now I click and I'm just getting that you are all perfect.

137
00:08:52.290 --> 00:08:54.240
So we've now dialed it in.

138
00:08:54.360 --> 00:08:55.440
We're making the request.

139
00:08:55.440 --> 00:08:57.870
When should happen when the button is correct.

140
00:08:57.930 --> 00:08:59.130
We're getting the data back.

141
00:08:59.130 --> 00:09:00.340
Converting it to Jason.

142
00:09:00.450 --> 00:09:02.390
We're taking the message part.

143
00:09:02.400 --> 00:09:03.710
That's all we care about.

144
00:09:04.070 --> 00:09:05.100
And we're saving it too.

145
00:09:05.190 --> 00:09:07.920
We're not saving it to a variable just yet so let's do that now.

146
00:09:07.970 --> 00:09:11.670
Var you are all equals.

147
00:09:11.790 --> 00:09:12.470
There you go.

148
00:09:12.600 --> 00:09:15.030
Message.

149
00:09:15.290 --> 00:09:21.350
So this will just have you are variable and all we want to do now is update the image tag so that it's

150
00:09:21.350 --> 00:09:26.450
dot source SIRC is equal to you.

151
00:09:27.200 --> 00:09:30.080
So we need to select the image and I'll do that up top.

152
00:09:30.080 --> 00:09:35.230
Var I m g equals document that queries selector.

153
00:09:35.640 --> 00:09:36.730
Do I give it an ID.

154
00:09:36.800 --> 00:09:45.020
Yes Id calls photo kind of a dumb name but will go with it so that selects the image and then down here

155
00:09:45.860 --> 00:09:52.940
once the request is done and go to 200 once we have that you or all of the random dog you are well dog

156
00:09:52.940 --> 00:10:01.650
photo you are l we just do image dot SIRC equals this new you know image being the image we selected

157
00:10:03.390 --> 00:10:04.820
So let's see.

158
00:10:04.820 --> 00:10:07.960
It's a moment of truth to make this a bit bigger.

159
00:10:09.470 --> 00:10:10.930
Start off with that.

160
00:10:10.980 --> 00:10:14.550
I click and it works.

161
00:10:14.720 --> 00:10:15.790
Nice cute dog.

162
00:10:16.780 --> 00:10:17.700
There's another one.

163
00:10:18.620 --> 00:10:19.980
And I love it.

164
00:10:20.010 --> 00:10:25.200
I nice little husky maybe that looks like a Palm ski Pomeranian husky.

165
00:10:25.220 --> 00:10:26.380
Who knows.

166
00:10:26.390 --> 00:10:29.000
So what's happening again just to sum this all up.

167
00:10:29.000 --> 00:10:34.550
This is kind of the traditional Ajax workflow something triggers an event that event then sends off

168
00:10:34.670 --> 00:10:39.260
a request somewhere then the data comes back once it's back.

169
00:10:39.260 --> 00:10:45.080
We parsed the data we get what we want kind of prune it all the excess away and then we update the dom

170
00:10:45.080 --> 00:10:45.930
in some way.

171
00:10:46.070 --> 00:10:50.410
And that same workflow is used all over the place in single page applications.

172
00:10:50.570 --> 00:10:55.580
So I want to show you that I Pinterest open and I don't just want to show you what you see as a user.

173
00:10:55.580 --> 00:10:57.540
I want to show you what's happening underneath.

174
00:10:57.560 --> 00:11:03.970
So if we open the console here I'm going to go to network and there's actually an exit chart tab.

175
00:11:04.100 --> 00:11:05.800
You may or may not have seen before.

176
00:11:06.050 --> 00:11:10.830
So as I scroll over here watch what happens on the left or on the right.

177
00:11:10.880 --> 00:11:13.300
So I hit the bottom and it needs to load more data.

178
00:11:14.310 --> 00:11:17.830
It makes a new X H.R. request.

179
00:11:17.880 --> 00:11:18.860
Here comes another one.

180
00:11:19.080 --> 00:11:20.590
You can see each one of these is it.

181
00:11:20.670 --> 00:11:21.800
It's a request.

182
00:11:21.960 --> 00:11:26.140
And each one has status code 200.

183
00:11:26.150 --> 00:11:31.130
So every time I'm doing that it's firing off an event that says OK go make a request get more data and

184
00:11:31.130 --> 00:11:35.330
you can actually dive more into what the data looks like over here what's coming back.

185
00:11:35.330 --> 00:11:39.570
You can see how long it takes how large the payload is.

186
00:11:39.800 --> 00:11:42.010
You can learn a lot about them.

187
00:11:42.140 --> 00:11:44.260
You can see that you are well and all that stuff.

188
00:11:44.630 --> 00:11:49.260
So one more time it's kind of fun to see these requests that we're creating.

189
00:11:49.760 --> 00:11:55.370
So it's working the exact same way it's just much more complex data that's coming back rather than our

190
00:11:56.000 --> 00:11:57.120
little dog button.

191
00:11:57.170 --> 00:12:02.810
But it's the same idea triggering an event request that sense data comes back page is updated.

192
00:12:02.810 --> 00:12:06.060
Cool you get one more to the oh that's perfect.

193
00:12:06.080 --> 00:12:09.120
Leave it off on high a little Chowchow.

194
00:12:09.140 --> 00:12:09.700
All right.

195
00:12:09.830 --> 00:12:10.690
Hopefully those kind of fun.
