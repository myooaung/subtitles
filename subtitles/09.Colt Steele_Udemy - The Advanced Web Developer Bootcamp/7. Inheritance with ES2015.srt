1
00:00:00,850 --> 00:00:01,700
Welcome back.

2
00:00:01,900 --> 00:00:07,780
In this video we'll discuss how to pass methods and properties from one class to another in object oriented

3
00:00:07,780 --> 00:00:08,710
programming.

4
00:00:08,710 --> 00:00:11,030
This process is called inheritance.

5
00:00:11,290 --> 00:00:16,690
Before we look at 2015 let's first see how inheritance is done in S-5.

6
00:00:16,990 --> 00:00:21,300
In the example below I have two constructors person and student.

7
00:00:21,610 --> 00:00:27,520
I would like to say hello method on the person prototype to be accessible from objects created by the

8
00:00:27,520 --> 00:00:30,430
student constructor in S-5.

9
00:00:30,430 --> 00:00:35,620
This process can be accomplished in a few different ways but the most common way is to set the prototype

10
00:00:35,620 --> 00:00:42,990
property of one function to be a new object with a dunder Prato property of another constructor functions

11
00:00:43,000 --> 00:00:44,300
prototype.

12
00:00:44,400 --> 00:00:50,200
This is done by setting the prototype property of the constructor to be an object created from another

13
00:00:50,200 --> 00:00:57,830
prototype property and resetting the constructor property on the constructor function in 2015.

14
00:00:57,940 --> 00:01:01,000
This can be done through the extends keyword.

15
00:01:01,000 --> 00:01:07,310
If one class extends another it will have all the methods that that class which it extends from has.

16
00:01:07,330 --> 00:01:10,670
This is how we can implement inheritance in 2015.

17
00:01:10,990 --> 00:01:12,630
Let's see what that looks like.

18
00:01:12,970 --> 00:01:17,870
Here we simply add the extends keyword on the Student class and everything works.

19
00:01:18,190 --> 00:01:23,290
Let's look at this code in the Crome Council and we can see that student that prototype that say hello

20
00:01:23,320 --> 00:01:29,750
exists and that student prototype constructor triple equal student returns true.

21
00:01:30,200 --> 00:01:35,170
The subtraction can be helpful because it reduces the amount of code we need to write but it's essential

22
00:01:35,170 --> 00:01:40,150
that you understand what is happening here under the hood in the next video will introduce one more

23
00:01:40,150 --> 00:01:45,690
reserve keyword in 2015 to help us remove duplication in our constructor functions.

24
00:01:45,690 --> 00:01:46,310
See you there.
