WEBVTT
1
00:00:01.280 --> 00:00:07.010
Welcome back I hope you had fun refactoring this game to use D-3 in this video.

2
00:00:07.010 --> 00:00:12.530
I'll briefly review my approach to refactoring this code before I get started in the app.

3
00:00:12.540 --> 00:00:17.380
Yes let me first load D-3 from a script tag in my index that age TNL.

4
00:00:17.540 --> 00:00:21.560
Otherwise I won't get very far with this retractor OK.

5
00:00:21.620 --> 00:00:23.800
Let's hop into the javascript file.

6
00:00:23.810 --> 00:00:29.060
There's not really a D-3 pattern weights of the dom content to load so we can leave the first line as

7
00:00:29.080 --> 00:00:35.120
is the first opportunity for refactoring is right here where we're grabbing the start button by its

8
00:00:35.120 --> 00:00:40.050
ID in general whenever you see document that get element by ID.

9
00:00:40.190 --> 00:00:43.680
That's an opportunity to use a D-3 selection instead.

10
00:00:44.090 --> 00:00:49.280
So let's use D-3 not select to grab this button by its ID from here.

11
00:00:49.280 --> 00:00:54.390
We can also directly attach the event listener for clicks inside of the callback.

12
00:00:54.400 --> 00:00:58.040
We have a couple more references to document that get element by ID.

13
00:00:58.450 --> 00:01:02.820
So let's do what we did before and replace them with D-3 selections.

14
00:01:04.100 --> 00:01:09.960
Now the callback itself looks good but the Tongo classes function could use some refactoring.

15
00:01:09.970 --> 00:01:15.820
Here we see that Tuggle classes uses the class list property but if we're using the three selections

16
00:01:16.060 --> 00:01:20.850
we'll have to use the class method to implement the same functionality.

17
00:01:20.880 --> 00:01:25.710
Let me replace the element argument with the word selection to make it clearer that I'm working with

18
00:01:25.710 --> 00:01:32.340
a D-3 selection this refactor is a little tricky because D-3 doesn't have a simple toggle method.

19
00:01:32.400 --> 00:01:35.880
Instead we'll have to use the class method twice.

20
00:01:35.880 --> 00:01:42.180
First we can use it as a getter to see whether the class name index is present on the selection.

21
00:01:42.420 --> 00:01:49.050
Then we'll need to use classed as a setter and flipped the logical value of the variable We just declared.

22
00:01:49.050 --> 00:01:54.840
In other words if classes set is true then the classes set on the element and we should remove it.

23
00:01:55.660 --> 00:02:00.410
Otherwise classes set is false and we should add the class to the IL.

24
00:02:00.820 --> 00:02:02.900
Either way the class will be toggled.

25
00:02:03.310 --> 00:02:06.850
Great let's keep going inside of start game.

26
00:02:06.850 --> 00:02:10.020
We have another get element by ID that we can remove.

27
00:02:10.390 --> 00:02:14.020
If we make the wordlist variable store a D-3 selection instead.

28
00:02:14.140 --> 00:02:20.170
Then we can also replace the vanilla javascript code right here by just taking our selection using the

29
00:02:20.170 --> 00:02:28.290
append method to append a new ally and then using the text method to set the inner text before we move

30
00:02:28.290 --> 00:02:29.530
on from this function.

31
00:02:29.640 --> 00:02:35.460
Let's also remove this reference to add event listener since our wordlist is now a D-3 selection.

32
00:02:35.580 --> 00:02:42.310
We can simply use the on method get random values and shuffle don't involve the dom at all.

33
00:02:42.510 --> 00:02:46.230
So the next place we can refactor isn't set guest count.

34
00:02:46.260 --> 00:02:53.100
Once again we can use D-3 got select instead of get element by ID here and once we have a D-3 selection

35
00:02:53.340 --> 00:02:58.310
we can use method chaining to set the entire text.

36
00:02:58.380 --> 00:03:01.590
The last function we need to update is update game.

37
00:03:01.640 --> 00:03:03.780
There is a fair amount of work to do here.

38
00:03:04.230 --> 00:03:07.630
First of all update game uses the event object pretty heavily.

39
00:03:07.800 --> 00:03:14.640
But remember in D-3 we only access the event object to be a D-3 dot event so we can remove the argument

40
00:03:14.640 --> 00:03:16.220
from the function.

41
00:03:16.280 --> 00:03:22.990
Also it will be convenient to turn the event target into a D-3 selection so that we can use D-3 methods.

42
00:03:23.570 --> 00:03:29.210
So the first thing I'll do is grab the event target and wrap it in the 3. select.

43
00:03:29.210 --> 00:03:31.330
This makes the if statement on the next line.

44
00:03:31.330 --> 00:03:32.630
A little trick.

45
00:03:32.640 --> 00:03:37.970
D-3 selections don't have a tag name properties so I'll have to take our target variable all node on

46
00:03:37.970 --> 00:03:43.420
it to expose the underlying HVM element and then access the tag name.

47
00:03:43.470 --> 00:03:46.020
The second expression is a little more straightforward.

48
00:03:46.080 --> 00:03:49.530
We can just use the class method.

49
00:03:49.540 --> 00:03:50.860
Let's keep going.

50
00:03:50.860 --> 00:03:56.770
There are a couple of references to inner text and classless down here below we can once again use the

51
00:03:56.770 --> 00:04:00.100
theories class and text methods to retractor these lines.

52
00:04:08.490 --> 00:04:11.060
Lastly we come to this if statement.

53
00:04:11.190 --> 00:04:16.960
We already refactor interval classes to accept D-3 selections so we need to replace a couple more documents

54
00:04:16.960 --> 00:04:19.170
that get element by IDs.

55
00:04:20.810 --> 00:04:26.150
It might seem like we're done but there's one more small refactor we can make Remember that we can use

56
00:04:26.210 --> 00:04:32.760
on Andy 3 to remove event listeners as well as add them so we can refactor these lines involving remove

57
00:04:32.760 --> 00:04:34.210
the event listener.

58
00:04:34.220 --> 00:04:36.690
The keyword this refers to the wordless.

59
00:04:36.710 --> 00:04:44.360
So if we turn this element into a D-3 selection we can then use on and pass and no for the second argument.

60
00:04:44.360 --> 00:04:47.530
This will remove the event handler for Clix.

61
00:04:47.600 --> 00:04:50.260
Great I hope you found this helpful.

62
00:04:50.300 --> 00:04:55.670
Try this code out for yourself to make sure the game still works when you're ready.

63
00:04:55.700 --> 00:04:56.990
I'll meet you in the next video.
