1
00:00:00,630 --> 00:00:01,500
Welcome back.

2
00:00:01,500 --> 00:00:06,290
In this video we're going to be going over a few more methods that yes 2015 gives us.

3
00:00:06,510 --> 00:00:12,870
Let's start with find which can be used on race find accepts a callback function and inside of a callback

4
00:00:12,870 --> 00:00:17,380
function we can return a condition if that condition returns true.

5
00:00:17,430 --> 00:00:20,080
The first item found to us is return.

6
00:00:20,460 --> 00:00:21,830
That might sound a bit confusing.

7
00:00:21,840 --> 00:00:23,410
So let's see how it works.

8
00:00:23,730 --> 00:00:29,700
Here we have an array of objects and would like to find an object with the name property of Tim using

9
00:00:29,700 --> 00:00:35,870
sign or return to us that object or if we cannot find it it returns undefined.

10
00:00:35,970 --> 00:00:41,130
Find is a very useful way of searching through an array and returning a value without having to use

11
00:00:41,130 --> 00:00:47,730
a form the same way that we can use find to return a value we can use find index to return the index

12
00:00:47,790 --> 00:00:55,300
at which a found value is that if that value is not found find index returns negative 1 Another useful

13
00:00:55,300 --> 00:01:00,290
method that yes 2015 gives us the includes method which works on strings.

14
00:01:00,700 --> 00:01:05,920
Let's imagine that we want to see if a string includes the character X. We could use a for loop to iterate

15
00:01:05,950 --> 00:01:11,170
over all the values in the string and see if we get the right character or we could use the index of

16
00:01:11,170 --> 00:01:17,980
method which returns the index at which a character exists in a string index will always return negative

17
00:01:17,980 --> 00:01:21,610
1 if the value we are looking for is not inside the string.

18
00:01:21,880 --> 00:01:25,690
So we commonly write conditional logic that looks like the code right here.

19
00:01:25,990 --> 00:01:31,150
Instead we can use includes which returns true or false if the value passed to it is included in the

20
00:01:31,150 --> 00:01:31,860
string.

21
00:01:32,230 --> 00:01:38,050
It's a more concise way of using index of or a for loop and is very useful with conditional logic.

22
00:01:38,050 --> 00:01:43,060
The last method we're going to be looking at is a static method on the number constructor called number

23
00:01:43,090 --> 00:01:44,510
that is finite.

24
00:01:44,710 --> 00:01:50,890
Unfortunately checking to see if a number is not a number can be a bit tricky since type of Not A number

25
00:01:50,950 --> 00:01:52,330
is actually number.

26
00:01:52,720 --> 00:01:54,360
We can't really use the type of check.

27
00:01:54,370 --> 00:01:57,430
So we have to use that is not a number function.

28
00:01:57,430 --> 00:02:02,680
If we want to see something is a number and is not not a number we have to change even more conditional

29
00:02:02,680 --> 00:02:05,010
logic together and it gets a little messy.

30
00:02:05,410 --> 00:02:10,810
Thankfully we can use number and it is finite to help us out since anything that is not a number will

31
00:02:10,810 --> 00:02:17,020
return false and not a number is not finite we can refactor our code to use this helpful method.

32
00:02:17,380 --> 00:02:22,870
If you also want to see if a number is only an integer there exists a number that is integer method

33
00:02:23,170 --> 00:02:24,810
which can be helpful as well.

34
00:02:25,270 --> 00:02:28,880
Before we practice with these methods let's review what we've seen so far.

35
00:02:29,200 --> 00:02:34,650
The map data structure is useful when creating key value pairs and the keys are not strings.

36
00:02:34,810 --> 00:02:42,010
Sets are useful for creating unique data sets and do not require key value pairs as 20:15 promise constructor

37
00:02:42,070 --> 00:02:46,990
allows for creating promises and resolving an array of promises with promise not all.

38
00:02:47,110 --> 00:02:51,820
We also saw the generators are valuable when creating functions or methods that can pause and resume

39
00:02:51,880 --> 00:02:52,910
at any time.

40
00:02:53,290 --> 00:02:59,800
Finally we saw that 2015 provides a few useful methods for converting arrays like objects into arrays

41
00:03:00,460 --> 00:03:06,420
making shallow copies of objects and handling issues with not a number and type of number.

42
00:03:06,420 --> 00:03:12,330
Now let's practice a bit with these East 20:15 methods and afterwards we'll discuss Yes 2016 and move

43
00:03:12,330 --> 00:03:15,420
toward some of the cutting edge features to the javascript language.

44
00:03:15,420 --> 00:03:16,540
See you in the next video.
