1
00:00:00,810 --> 00:00:06,260
Welcome back in the previous video we saw how to create promises using the promise constructor.

2
00:00:06,420 --> 00:00:10,970
And we saw that we can chain promises together using that in this video.

3
00:00:10,980 --> 00:00:16,890
We're going to discuss a method on the promise constructor called promised dot all promised not all

4
00:00:16,920 --> 00:00:23,430
accepts an array of promises and resolves all of them or is rejected once a single one of the promises

5
00:00:23,460 --> 00:00:24,780
has been rejected.

6
00:00:24,870 --> 00:00:27,300
We call this a fail fast behavior.

7
00:00:27,630 --> 00:00:33,240
If all of the past in promises fulfilled promise that all is resolved with an array of the values from

8
00:00:33,240 --> 00:00:39,570
the past and promises in the same order as they were cast in the promised ball promised that all does

9
00:00:39,570 --> 00:00:44,760
not guarantee that these promises will resolve sequentially that it will return an array of resolve

10
00:00:44,760 --> 00:00:50,510
promises in the same order that you pass them in to the function you may have seen something like this

11
00:00:50,510 --> 00:00:53,160
with dollar signs out when Jake Querrey or.

12
00:00:53,180 --> 00:00:58,880
Q And it's important to note that the promises don't resolve sequentially but promised not all waits

13
00:00:58,880 --> 00:01:00,400
for them to resolve.

14
00:01:00,410 --> 00:01:02,400
Now let's see what it looks like.

15
00:01:02,450 --> 00:01:07,940
Let's make a function called Get movie which returns a promise to us and not invoke the function a few

16
00:01:07,940 --> 00:01:09,070
times.

17
00:01:09,110 --> 00:01:12,800
Remember the value of these variables is a pending promise.

18
00:01:12,860 --> 00:01:15,110
It has not been rejected or resolved.

19
00:01:15,140 --> 00:01:18,040
There is simply a promise for some future.

20
00:01:18,520 --> 00:01:23,540
Now instead of changing all of these promises together with a van and another dot then another dot then

21
00:01:23,960 --> 00:01:28,390
we can simply place them all inside of a promised not all invocation.

22
00:01:28,430 --> 00:01:34,100
Here we see all of the promises being passed in as an array and then resolved as an array of objects

23
00:01:34,220 --> 00:01:39,770
which we can iterate over and print out the year for each one promise that all is easily one of the

24
00:01:39,770 --> 00:01:43,660
most common methods you'll be using with the E.S. 20:15 promise constructor.

25
00:01:43,700 --> 00:01:46,380
So it's essential that you get some practice with it.

26
00:01:46,630 --> 00:01:50,680
Now that you've seen how to work with promises it's your turn to practice a bit.

27
00:01:50,680 --> 00:01:53,280
Good luck on these exercises and I'll see you in the next video.
