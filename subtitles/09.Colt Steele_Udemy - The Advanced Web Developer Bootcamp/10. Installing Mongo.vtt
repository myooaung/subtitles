WEBVTT
1
00:00:00.310 --> 00:00:04.990
Okay so moving on we're now going to tackle our database part of our API.

2
00:00:05.130 --> 00:00:09.540
A really important part is that we need to be storing our to do somewhere and retrieving them and updating

3
00:00:09.540 --> 00:00:10.390
them blah blah blah.

4
00:00:10.410 --> 00:00:12.290
All in the database itself.

5
00:00:12.450 --> 00:00:16.070
So we could use postscripts we could use my as well.

6
00:00:16.260 --> 00:00:21.270
We're going to use Mongo though and the main reason for that is that it's a really popular combination

7
00:00:21.330 --> 00:00:27.090
with Express and node as well as with react but also because there's a really nice library called mongoose

8
00:00:27.450 --> 00:00:32.220
that we're going to use that will make our life a lot easier as well to help connect our node and express

9
00:00:32.520 --> 00:00:36.330
to the Mongo database and talk communicate between the two.

10
00:00:36.450 --> 00:00:43.200
But before we go anywhere we have to install Mongo which even on cloud nine which makes installing things

11
00:00:43.200 --> 00:00:44.480
generally much easier.

12
00:00:44.520 --> 00:00:45.900
It's still kind of a pain.

13
00:00:46.290 --> 00:00:49.490
So what I've done is written down all the commands.

14
00:00:49.530 --> 00:00:51.660
There's five different commands that we need.

15
00:00:51.660 --> 00:00:53.630
Step by step to install Mongo.

16
00:00:54.030 --> 00:00:59.580
And I've also included these as a resource with this video so I recommend you copy and paste because

17
00:00:59.580 --> 00:01:01.380
some of them like this line.

18
00:01:01.380 --> 00:01:03.950
I wouldn't recommend that you type this out yourself.

19
00:01:03.960 --> 00:01:08.300
I cannot remember it for the life of me which is why I have it written here so I can reference it.

20
00:01:08.310 --> 00:01:14.340
So what we're going to do is basically stop our server down here and actually I'm going to open up a

21
00:01:14.340 --> 00:01:17.750
new not a file a new terminal.

22
00:01:17.830 --> 00:01:18.980
There we go.

23
00:01:19.490 --> 00:01:23.270
And in this terminal I'm just going to run this pseudo apps get.

24
00:01:23.310 --> 00:01:29.870
Which is going to go fetch the Mongo D-B code might take a moment and if it does we'll fast forward.

25
00:01:29.970 --> 00:01:32.310
And that took about 30 seconds for me.

26
00:01:32.310 --> 00:01:37.790
The next thing I'm going to do is the simplest command which is to make a new directory called data.

27
00:01:37.860 --> 00:01:43.590
It doesn't have to be called data but it does need to match whatever you specify the database path as

28
00:01:43.830 --> 00:01:44.610
here.

29
00:01:44.850 --> 00:01:47.800
Data is the standard name so I would recommend doing that.

30
00:01:47.850 --> 00:01:53.310
So that just makes us a new folder called data where our files are Mongo files will be saved.

31
00:01:53.310 --> 00:01:56.090
The next command will come back to you in just a second.

32
00:01:56.100 --> 00:01:58.020
This is to install mongoose.

33
00:01:58.020 --> 00:02:00.290
You could do it now but I'm going to wait.

34
00:02:00.290 --> 00:02:05.430
When you come down here and copy this monster of a line paste that in.

35
00:02:05.430 --> 00:02:11.010
And remember this needs to match whatever the path is to your data folder or whatever you ended up calling

36
00:02:11.010 --> 00:02:11.670
it.

37
00:02:12.060 --> 00:02:17.430
And finally my favorite chmod Shimada command.

38
00:02:18.150 --> 00:02:25.440
And so what we need to do I actually add this down here is execute Man-God which is our Mangu daemon

39
00:02:25.890 --> 00:02:31.680
which is basically the background process that handles everything for us because Mongo starts up a server

40
00:02:31.830 --> 00:02:33.800
that we need to connect to.

41
00:02:33.810 --> 00:02:40.430
So if we run this make sure in that same directory where you started we should see this server startup.

42
00:02:40.440 --> 00:02:42.290
This is our database server.

43
00:02:42.750 --> 00:02:43.640
This is mangu.

44
00:02:43.830 --> 00:02:45.340
So leave this tab.

45
00:02:45.420 --> 00:02:48.240
It's my recommendation always leave it open.

46
00:02:48.510 --> 00:02:52.620
It's not a problem if you close it but just make sure if you have problems connected to Mongo that you

47
00:02:52.620 --> 00:02:55.470
restart the process.

48
00:02:56.100 --> 00:03:04.140
And we can also connect to that server using the Mongo Seelye and you should you know we can type help.

49
00:03:04.320 --> 00:03:07.480
We're not going to really go through very much you could do show DVRs.

50
00:03:07.530 --> 00:03:08.470
We'll leave it at that.

51
00:03:08.790 --> 00:03:13.670
But once we actually add our database and get some data going we will be able to inspect it here.

52
00:03:13.820 --> 00:03:14.840
But we're not going to do that for now.

53
00:03:14.850 --> 00:03:17.470
So we can exit out that perfect.

54
00:03:17.760 --> 00:03:21.970
So you should have Mongo installed if you follow those commands and you're using cloud 9.

55
00:03:22.110 --> 00:03:28.000
I will warn you if you're just doing it on a PC or a Mac it can be a real headache sometimes.

56
00:03:28.020 --> 00:03:29.730
So I recommend you do this if you get stuck.

57
00:03:29.730 --> 00:03:35.250
Don't waste too much energy don't prevent yourself from getting to the re-act content just because Mongo

58
00:03:35.250 --> 00:03:41.810
being frustrating and the last thing we'll do is run NPM install mongoose dash dash save and all that

59
00:03:41.820 --> 00:03:42.570
that will do.

60
00:03:42.690 --> 00:03:44.960
I guess we could put the dash dash safe before Mongar.

61
00:03:44.970 --> 00:03:50.970
It doesn't actually matter what this will do is install mongoose which is our library package that will

62
00:03:50.970 --> 00:03:54.810
connect Mongo which has nothing to do with Node 2.

63
00:03:54.810 --> 00:04:02.100
Our express node application so it acts as sort of a connector pipe to make things easier so that we

64
00:04:02.100 --> 00:04:06.430
can use promises we can use javascript syntax to interact with mangu.

65
00:04:06.600 --> 00:04:12.510
So I'm going to run that in our make sure you're in the same folder as the to do's API so it will save

66
00:04:12.510 --> 00:04:13.390
it into our package.

67
00:04:13.410 --> 00:04:19.830
Jason might take a moment but once it finishes we'll have a new addition here mongers so our app now

68
00:04:19.830 --> 00:04:22.510
has two dependencies Express and mongers.

69
00:04:22.710 --> 00:04:28.080
So in the next video we're going to use mongoose to connect our express app to our Mangu database get

70
00:04:28.080 --> 00:04:30.530
some data going back and forth get the two talking.

71
00:04:30.780 --> 00:04:31.570
And then from there.

72
00:04:31.620 --> 00:04:36.720
We'll define our next couple of routes that have to do with tatoos and we'll be well on our way to building

73
00:04:36.720 --> 00:04:37.260
an API.
