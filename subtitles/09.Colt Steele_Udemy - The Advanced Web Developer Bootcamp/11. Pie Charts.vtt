WEBVTT
1
00:00:01.310 --> 00:00:07.280
Welcome back in the previous videos we saw how to use someone D-3 is built in functionality to make

2
00:00:07.280 --> 00:00:08.610
histograms.

3
00:00:08.810 --> 00:00:12.110
In this video we'll take a similar approach with pie charts.

4
00:00:13.500 --> 00:00:19.760
Pie charts are a valuable way to visualize data when you care about a part in relation to a whole.

5
00:00:19.950 --> 00:00:25.950
You may recall that you can draw any circular arc with the SPG path element which is what we need in

6
00:00:25.950 --> 00:00:27.540
order to draw a pie chart.

7
00:00:27.900 --> 00:00:33.010
However while the path element is a powerful drawing tool it's also not the most intuitive.

8
00:00:33.330 --> 00:00:40.200
Fortunately just as D-3 has a histogram method it also has a PI method to help transform data for visualization

9
00:00:40.260 --> 00:00:41.300
as a pie chart.

10
00:00:42.650 --> 00:00:44.060
Let's look at an example.

11
00:00:45.080 --> 00:00:45.950
As usual.

12
00:00:46.010 --> 00:00:52.290
Here are some links to the starter code will be working with here I've got the same set of data we use

13
00:00:52.290 --> 00:00:54.900
for the histogram in the previous videos.

14
00:00:54.900 --> 00:00:58.890
The only difference is that now I have counted the data tidy each region.

15
00:00:59.010 --> 00:01:03.590
I'd like to use this data to display a pie chart for birth data by year.

16
00:01:03.600 --> 00:01:05.670
I've already put some code into my apt.

17
00:01:05.710 --> 00:01:11.230
Yes much of it should look similar to what we had for the histogram visualization.

18
00:01:11.370 --> 00:01:17.790
I'm finding the first year in my data set picks and bounds on my SPG and filtering out any data that

19
00:01:17.790 --> 00:01:20.640
isn't from the first year in my set.

20
00:01:20.680 --> 00:01:26.040
Let me start by iterating through my data and generating a list of all the Continent codes.

21
00:01:26.170 --> 00:01:31.170
I could do this using a reduce or even by inspection since there aren't many continents.

22
00:01:31.270 --> 00:01:35.290
But for now I'll just write a quick for loop inside of the loop.

23
00:01:35.290 --> 00:01:38.970
I'll use index of to check whether I've seen a continent or not.

24
00:01:38.980 --> 00:01:42.350
If not I'll push it into my array.

25
00:01:42.550 --> 00:01:46.750
Great now I'd also like to associate each continent a color.

26
00:01:47.020 --> 00:01:51.300
I could use an object but this time around I'll use a D-3 scale to get the job done.

27
00:01:52.410 --> 00:01:57.690
The scale I'll use this time is called the ordinal scale which basically maps a discrete set of points

28
00:01:57.690 --> 00:02:03.260
in the domain to a discrete set of points in the range.

29
00:02:03.290 --> 00:02:07.400
In this case my domain is the continent's array for the range.

30
00:02:07.430 --> 00:02:11.560
I need an array of colors I could pick some colors out on my own.

31
00:02:11.660 --> 00:02:17.270
But D-3 also comes with a few different color schemes that are designed to work with ordinal scales.

32
00:02:18.100 --> 00:02:24.650
You can see a list of schemes in the D-3 documentation for scales for now since I know there aren't

33
00:02:24.650 --> 00:02:30.520
many continents I'll use in category 10 which gives me an array of 10 colors.

34
00:02:30.530 --> 00:02:36.960
Since there are fewer than 10 continents the extra colors simply won't get used by the scale.

35
00:02:36.960 --> 00:02:41.890
Let's take a quick look here are my continence.

36
00:02:41.910 --> 00:02:49.410
Here are my colors and as you can see the scale maps my first continent to my first color my second

37
00:02:49.410 --> 00:02:52.110
continent to my second color and so on.

38
00:02:53.220 --> 00:02:53.870
Cool.

39
00:02:54.180 --> 00:02:57.390
Before we dig into the D-3 help our methods for pie charts.

40
00:02:57.390 --> 00:02:59.770
I'd like to do one more bit of setup.

41
00:03:00.000 --> 00:03:05.010
Typically pie charts are built inside of a group element which is transformed to wherever you want the

42
00:03:05.010 --> 00:03:07.300
center of the pie chart to be.

43
00:03:07.380 --> 00:03:12.660
If you don't do this the center of the pie chart will be the origin of the SPG which means you'll only

44
00:03:12.660 --> 00:03:17.340
be able to see one quarter of it.

45
00:03:17.350 --> 00:03:24.760
So first I'll select the Viji set it's within height then append to group transform it to the center

46
00:03:24.760 --> 00:03:29.880
of the SPG and give it a class of chart so that I can easily select it later.

47
00:03:30.980 --> 00:03:33.790
Now we're ready to learn about some new D-3 methods.

48
00:03:34.890 --> 00:03:40.140
Like the histogram method we saw in the previous video there are a couple of help her methods we can

49
00:03:40.140 --> 00:03:43.870
use to streamline the process of creating our pie chart.

50
00:03:43.890 --> 00:03:50.100
The main difficulty lies in the fact that as we've seen patho elements in SVGA are complicated so we

51
00:03:50.100 --> 00:03:55.590
need a way to translate between our original set of data and a string that we can pass into the attribute

52
00:03:55.650 --> 00:04:00.950
of a path element D-3 facilitates this transition with the help of two methods.

53
00:04:01.230 --> 00:04:09.400
The first is D-3 dot PI D-3 But pi is similar to d histogram in that it returns a function which takes

54
00:04:09.400 --> 00:04:16.000
in a set of data and transforms that data into a format that's more useful for drawing the graph also

55
00:04:16.000 --> 00:04:17.510
like the 3. got histogram.

56
00:04:17.510 --> 00:04:22.960
The theory that pi has a value method that allows you to specify the value you're interested in visualize

57
00:04:24.480 --> 00:04:30.160
like before we want to specify the birth's property and pass in the data for 1967

58
00:04:32.600 --> 00:04:34.870
to understand what D-3 is doing.

59
00:04:34.880 --> 00:04:38.780
Let's take a look at the value arcs as you can see.

60
00:04:38.840 --> 00:04:45.960
I've got an array with four objects one for each arc in the pie chart each object has information about

61
00:04:45.960 --> 00:04:52.580
the arc data points back to the data objects from our original birth data array that is bound to this

62
00:04:52.580 --> 00:04:53.710
particular arc.

63
00:04:54.680 --> 00:04:57.370
And angle is the angle where the arc should stop.

64
00:04:58.220 --> 00:05:01.390
Index keeps track of the sort order of the arcs.

65
00:05:01.400 --> 00:05:03.760
The default ordering is by value.

66
00:05:03.770 --> 00:05:08.560
The larger the value the lower the index will talk about the padding.

67
00:05:08.690 --> 00:05:13.440
In the next video starting is the angle where the arc should start.

68
00:05:14.760 --> 00:05:17.230
Value is a value being graphed.

69
00:05:17.520 --> 00:05:24.790
In this case the value is coming from the fact that you've reported that many births in 1967.

70
00:05:24.790 --> 00:05:30.870
Note that the angles are always measured in radians which go from zero to two times Pi or around six

71
00:05:30.870 --> 00:05:40.490
point to eight to PI Raney's is equivalent to 360 degrees both represent a full rotation.

72
00:05:40.560 --> 00:05:45.770
In this example we see that the first two arcs should take up most of the area.

73
00:05:46.000 --> 00:05:53.010
The last arc may not even be visible since its start and end angles are so close together as you can

74
00:05:53.010 --> 00:05:59.210
see D-3 takes care of the work of translating our data into angle values that we can use to draw a chart.

75
00:05:59.730 --> 00:06:01.360
But we're not quite there yet.

76
00:06:01.380 --> 00:06:08.040
How do we get from these objects to a string that we can pass in as the D attribute to a path element.

77
00:06:08.070 --> 00:06:10.620
Once again D-3 has got our backs.

78
00:06:10.620 --> 00:06:18.060
It also comes with the arc method that translates these javascript objects into valid S.A.G. path commands.

79
00:06:18.060 --> 00:06:19.440
Here's a quick example.

80
00:06:19.780 --> 00:06:27.420
If I pass in an object within a radius of zero an outer radius of 100 a start angle of 0 and angle of

81
00:06:27.450 --> 00:06:28.610
pi radians.

82
00:06:28.800 --> 00:06:34.070
Here's the string the D-3 arc will return to me as you can see.

83
00:06:34.080 --> 00:06:38.530
This is a valid string which I could pass in as the D attribute to some path.

84
00:06:38.550 --> 00:06:46.470
It we can also use special methods on D-3 dark to set defaults for some of these object properties.

85
00:06:46.490 --> 00:06:51.440
This can be helpful if for example you know that the inner and outer ready I will be the same for every

86
00:06:51.440 --> 00:06:52.350
arc.

87
00:06:52.520 --> 00:06:58.490
For instance here's how you can set a fixed inner and outer radius for D-3 arc based on the width of

88
00:06:58.490 --> 00:07:01.180
the SPG.

89
00:07:01.180 --> 00:07:04.400
Note that if you set the radius to zero you'll get a circle.

90
00:07:04.630 --> 00:07:09.190
If you set it to some positive value you'll get an annulus or a donut shape.

91
00:07:09.190 --> 00:07:10.090
I love donuts.

92
00:07:10.090 --> 00:07:14.080
So I've got a positive in a radius.

93
00:07:14.200 --> 00:07:15.520
We're almost there.

94
00:07:15.520 --> 00:07:20.710
Now we need to use D-3 data method to bind our arcs to SVGA elements.

95
00:07:20.890 --> 00:07:23.430
I've already created a group with a class chart.

96
00:07:23.650 --> 00:07:29.560
So first I'll select this group and then I'll create an empty selection by selecting all elements with

97
00:07:29.560 --> 00:07:33.170
a class of arke after joining with my.

98
00:07:33.220 --> 00:07:39.220
I'll hop into the enter selection and for each arc I'll append a path with a class of arke I'll set

99
00:07:39.220 --> 00:07:48.030
the field based on the continent give each arc a stroke color of black and lastly I'll set the D attribute

100
00:07:48.090 --> 00:07:51.730
on the path by simply passing in my path function.

101
00:07:51.840 --> 00:07:57.330
Remember that since path is a function it will be invoked once for each object in Arc's array and to

102
00:07:57.330 --> 00:07:59.220
overturn a valid path command.

103
00:08:00.280 --> 00:08:04.120
Now when we refresh the page we can see our graph.

104
00:08:04.200 --> 00:08:09.440
We still don't have the range input working and there are some other enhancements we can make as well.

105
00:08:09.750 --> 00:08:12.480
But this seems like a good place to pause.

106
00:08:12.510 --> 00:08:15.930
We'll tackle these other features in the next video.

107
00:08:15.960 --> 00:08:17.030
I'll see you there.
