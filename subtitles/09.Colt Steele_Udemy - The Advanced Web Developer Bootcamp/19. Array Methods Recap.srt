1
00:00:01,080 --> 00:00:01,930
Welcome back.

2
00:00:02,130 --> 00:00:05,190
In this video we're going to recap what we've learned so far.

3
00:00:05,460 --> 00:00:07,110
We've seen quite a few Array methods.

4
00:00:07,140 --> 00:00:12,660
So let's go over each one and how they're used for each iterate through an array and runs a callback

5
00:00:12,660 --> 00:00:17,440
function on every value in the array for each always returns undefined.

6
00:00:18,540 --> 00:00:23,940
Map iterates through an array and runs a callback function on every value in the array and adds the

7
00:00:23,940 --> 00:00:27,310
return value of the callback to a new array.

8
00:00:27,450 --> 00:00:33,020
Gnab always returns a new array of the same one as the array that it was called the filter iterates

9
00:00:33,030 --> 00:00:38,220
through an array and runs a callback function on every value in the array at the callback function with

10
00:00:38,220 --> 00:00:43,260
that value passed to it returns true that value was added to the new array.

11
00:00:43,260 --> 00:00:48,870
Remember the callback function to filter will always be evaluated to a boolean filter needs to know

12
00:00:48,870 --> 00:00:51,810
whether or not to add the value to the new array.

13
00:00:52,170 --> 00:00:56,690
Some iterates through an array and runs a callback function on each value in the array.

14
00:00:56,860 --> 00:01:01,980
If the callback function for at least one value returns True some returns true.

15
00:01:01,980 --> 00:01:06,120
Remember the callback function to sum will always be evaluated to a boolean.

16
00:01:06,120 --> 00:01:12,170
Since some needs to know whether to return true or not every iterates through an array and runs a callback

17
00:01:12,170 --> 00:01:14,120
function on each value in the array.

18
00:01:14,420 --> 00:01:19,660
If the callback function for every single value returns true every returns true.

19
00:01:19,940 --> 00:01:21,600
Once again the callback function.

20
00:01:21,620 --> 00:01:28,580
Every will always be evaluated to a boolean since every need to know whether to return true or not reduce

21
00:01:28,640 --> 00:01:33,710
iterates through an array and accumulates a value which starts as the first value in the array or is

22
00:01:33,710 --> 00:01:35,030
an optional second parameter.

23
00:01:35,030 --> 00:01:41,870
To reduce the callback to reduce except for parameters and accumulator next value index and the array

24
00:01:42,530 --> 00:01:47,120
whatever is returned to the callback function of reduce becomes the value of the accumulator in the

25
00:01:47,120 --> 00:01:48,310
next iteration.

26
00:01:48,630 --> 00:01:52,880
Be sure to practice with these exercises as well as some additional materials we have for you to work

27
00:01:52,940 --> 00:02:00,140
on understanding how to use for each map filter some Every anti-abuse is essential for reading code

28
00:02:00,170 --> 00:02:01,830
and reading more complex code.

29
00:02:02,060 --> 00:02:06,200
You'll see many of these methods quite a bit when you learn about libraries and frameworks like Riak

30
00:02:06,260 --> 00:02:08,190
D3 angular and more.

31
00:02:08,310 --> 00:02:11,170
As always if you have any questions be sure to reach out to us.

32
00:02:11,180 --> 00:02:14,050
We'll be here to help see you in the next section.
