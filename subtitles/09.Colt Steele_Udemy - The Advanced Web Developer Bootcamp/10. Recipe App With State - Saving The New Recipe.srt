1
00:00:00,630 --> 00:00:03,170
In the last video we got our form working.

2
00:00:03,240 --> 00:00:06,450
So now let's figure out how to hook it up to the rest of our app.

3
00:00:10,610 --> 00:00:14,210
Let's start with just saving the data in the form.

4
00:00:14,690 --> 00:00:19,350
And this gets into an area that we haven't touched yet.

5
00:00:19,820 --> 00:00:26,330
So I've got this data inside my form and I want it to be saved in a different component.

6
00:00:26,330 --> 00:00:34,160
So if I open up the recipe app over here this is the component that has the state which needs to be

7
00:00:34,160 --> 00:00:36,310
updated.

8
00:00:36,320 --> 00:00:40,310
Now remember that state can only live in one place.

9
00:00:40,520 --> 00:00:48,720
So the recipe app is the component that needs to change the state but the recipe input is the one that

10
00:00:48,720 --> 00:00:50,960
knows when the event happens.

11
00:00:51,060 --> 00:00:54,470
It controls the form so it knows when the Submit happens.

12
00:00:54,480 --> 00:01:01,020
So the solution to this problem is for the recipe app to pass in a callback function to the recipe input

13
00:01:01,080 --> 00:01:05,400
as a prop and the callback function will do the State Update.

14
00:01:05,580 --> 00:01:12,140
So recipe input itself won't know anything about what happens when the user clicks save.

15
00:01:12,210 --> 00:01:15,600
It just knows it needs to call a callback function.

16
00:01:15,600 --> 00:01:17,130
So let's set that up.

17
00:01:17,250 --> 00:01:26,960
First of all I'll just give the recipe and put a default Propp and I'll call it on save.

18
00:01:26,980 --> 00:01:33,980
Now how should this recipe input use on Save well down here in our form.

19
00:01:34,030 --> 00:01:40,110
We need to have a method for an submit that calls the unsafe callback.

20
00:01:40,750 --> 00:01:42,530
I'll call this function handle Samit

21
00:01:47,170 --> 00:01:54,190
handle Smit's only job is to first prevent the default behavior so that prevent default and then to

22
00:01:54,430 --> 00:01:57,380
invoke the unsaved callback.

23
00:01:57,430 --> 00:01:58,720
And one last thing it should do.

24
00:01:58,720 --> 00:02:03,190
It should clear out our form so that there's no more data inside the form.

25
00:02:03,190 --> 00:02:06,870
So let's let's see that first.

26
00:02:06,950 --> 00:02:09,670
I'll put the handle submit method in the constructor and bind it

27
00:02:19,330 --> 00:02:20,640
next I'll implement the method

28
00:02:28,600 --> 00:02:35,860
and the first thing I want to do is prevent default.

29
00:02:36,090 --> 00:02:41,700
Next we want to use our own Save method and we want to invoke on Save With all the values that the form

30
00:02:41,700 --> 00:02:42,770
currently has.

31
00:02:53,400 --> 00:02:58,390
So I'm invoking on save and I'm passing into it a copy of all the values in St.

32
00:03:01,810 --> 00:03:07,270
Now the last thing I want to do is clear out our form after submit so that there's no more data in the

33
00:03:07,270 --> 00:03:10,310
form for the next time you want to create a new recipe.

34
00:03:22,800 --> 00:03:23,060
All right.

35
00:03:23,070 --> 00:03:24,920
That should be our handle Samit method.

36
00:03:24,990 --> 00:03:28,280
Now the next step would be to hook it up into the recipe app.

37
00:03:28,650 --> 00:03:39,590
So when the recipe app mounts the recipe input it should pass in an unsafe callback.

38
00:03:39,620 --> 00:03:43,200
My first step is to implement a handle save inside this recipe.

39
00:03:47,870 --> 00:03:53,630
And remember Handels save gets an object which represents a single recipe.

40
00:03:58,250 --> 00:04:01,010
Now what should handle save in the recipe app do.

41
00:04:01,310 --> 00:04:05,060
Well it should update its state.

42
00:04:05,060 --> 00:04:13,090
One quick thing I have noticed so I started these ideas out at 1 2 and 3 were computer scientists here

43
00:04:13,100 --> 00:04:18,620
so it started out at zero.

44
00:04:19,190 --> 00:04:21,270
In that way our next recipe idea is correct.

45
00:04:21,270 --> 00:04:24,990
It should be 3 after the ID 2.

46
00:04:26,490 --> 00:04:32,850
Ok I mentioned that little fix because now we're going to call that state and add a new recipe into

47
00:04:32,850 --> 00:04:33,860
our recipe array.

48
00:04:34,110 --> 00:04:40,780
And we're also going to update this recipe next recipe ID after we use it to create the new recipe.

49
00:04:40,800 --> 00:04:45,430
So let's see all that in this function.

50
00:04:45,430 --> 00:04:50,610
I'll use set state with an updated method because my next version of state will depend on my previous

51
00:04:50,610 --> 00:04:51,150
version.

52
00:04:51,170 --> 00:05:10,590
It'll depend on the value of this next recipe ID.

53
00:05:10,750 --> 00:05:13,130
So there we have our new recipe.

54
00:05:13,210 --> 00:05:19,840
It will consist of all the values that were passed in from that on save invocation and then the ID that

55
00:05:20,020 --> 00:05:24,990
I am getting from this state up next recipe ID.

56
00:05:25,000 --> 00:05:31,180
Now let's return our new version of state and we want to update the next recipe to be incremented by

57
00:05:31,180 --> 00:05:47,100
1 and then also modify the recipe array to include our new recipe.

58
00:05:47,360 --> 00:05:51,270
Now the last thing we need to do is pass this method in.

59
00:05:51,350 --> 00:05:55,790
Well there's actually two things we need do we need to put this method inside of our constructor and

60
00:05:55,790 --> 00:06:00,790
bind it to this.

61
00:06:01,010 --> 00:06:09,520
And now we need to pass this into a recipe and put component as a prop.

62
00:06:09,520 --> 00:06:13,300
Now let's check out the app and see if we can save a recipe.

63
00:06:16,850 --> 00:06:18,290
OK I'm just putting in dummy data

64
00:06:21,020 --> 00:06:22,190
and we got a new recipe.

65
00:06:22,280 --> 00:06:23,470
So it looks like it worked.

66
00:06:23,480 --> 00:06:25,630
That's great.

67
00:06:25,790 --> 00:06:27,120
Let's send the video there.

68
00:06:27,260 --> 00:06:29,930
Next work on hiding and showing the recipe input form.
