WEBVTT
1
00:00:00.410 --> 00:00:00.780
All right.

2
00:00:00.780 --> 00:00:01.800
Welcome back.

3
00:00:01.800 --> 00:00:08.100
So this section is all about AJAX now age Ajax is something that I personally love and my own developer

4
00:00:08.100 --> 00:00:15.030
life to build apps with but more importantly as a teacher I find it really fun and just enjoyable to

5
00:00:15.030 --> 00:00:21.060
teach and that's mainly because I'm not being cheesy here when I say this but it opens up a whole new

6
00:00:21.060 --> 00:00:25.320
world of possibilities of things you can do with your applications.

7
00:00:25.320 --> 00:00:31.740
You can suddenly make way better cleaner smoother more interesting experiences for your users and we'll

8
00:00:31.740 --> 00:00:34.530
see why in just a sec but let's start with the basics.

9
00:00:34.650 --> 00:00:41.400
So as we already covered it stands for Asynchronous JavaScript and X-amount AJAX which in today's landscape

10
00:00:41.520 --> 00:00:43.700
is actually not the best name.

11
00:00:43.710 --> 00:00:45.190
We'll talk more about why.

12
00:00:45.450 --> 00:00:47.210
But it really has to do with this last part.

13
00:00:47.220 --> 00:00:52.180
The ex Ajax doesn't really sound as good ending with any other letter.

14
00:00:52.290 --> 00:00:58.020
But nowadays X-amount is just not as popular as it used to be and has been replaced or usurped depending

15
00:00:58.020 --> 00:01:02.920
on how you look at it with another data format called Jaison which will cover in the next video.

16
00:01:03.120 --> 00:01:09.300
But for now let's focus on Asynchronous JavaScript that's really the key and something else that's not

17
00:01:09.300 --> 00:01:09.920
as important.

18
00:01:09.990 --> 00:01:15.210
So let's keep going and we'll start by actually talking about what AJAX is not because there's a lot

19
00:01:15.210 --> 00:01:16.870
of misconceptions about this.

20
00:01:16.890 --> 00:01:20.680
A lot of people think that Ajax is a library which is not.

21
00:01:20.850 --> 00:01:22.350
It's not a library.

22
00:01:22.350 --> 00:01:25.960
It's not a framework and it's not a technology.

23
00:01:26.070 --> 00:01:27.700
It's none of these things.

24
00:01:27.720 --> 00:01:30.410
In fact it's much much simpler than any of it.

25
00:01:30.420 --> 00:01:32.380
It's not a tool someone created.

26
00:01:32.430 --> 00:01:33.540
Nobody owns it.

27
00:01:33.570 --> 00:01:35.270
Nobody developed it.

28
00:01:35.970 --> 00:01:43.590
All that Ajax is is an approach to web development a concept a way of building web sites and that's

29
00:01:43.590 --> 00:01:44.880
really it.

30
00:01:44.880 --> 00:01:51.540
So this revolution that Ajax was just comes down to a different way of structuring apps using existing

31
00:01:51.540 --> 00:01:52.880
tools and technologies.

32
00:01:52.890 --> 00:01:55.120
So just putting them together in a different way.

33
00:01:55.470 --> 00:02:03.090
So as this slide shows around the year 2005 a little bit earlier potentially there were tools that we

34
00:02:03.090 --> 00:02:08.030
use today things like HDMI all javascript was getting much more popular.

35
00:02:08.030 --> 00:02:10.890
C S the domm.

36
00:02:10.890 --> 00:02:12.640
And then this other thing called XM.

37
00:02:12.690 --> 00:02:15.650
HTP requests which we'll be spending more time on.

38
00:02:15.750 --> 00:02:22.110
But this is a tool or an API that allows you to make requests make HTP requests request it's kind of

39
00:02:22.110 --> 00:02:25.560
a mouthful from the browser using javascript.

40
00:02:25.560 --> 00:02:33.360
So these five things HVM LCS s javascript Plus the DOM API and an API that gave you the ability to make

41
00:02:33.360 --> 00:02:39.020
requests from your browser combined are what formed Ajax and it wasn't one person.

42
00:02:39.090 --> 00:02:43.050
There wasn't an aha moment at least that we can pinpoint in history.

43
00:02:43.050 --> 00:02:49.680
But over time what happened is that a couple of kind of cutting edge developers and companies Google

44
00:02:49.670 --> 00:02:56.520
us on the first ones kind of had a moment of saying OK wait a second all these pieces are here for us

45
00:02:56.520 --> 00:03:03.450
to put them together to make applications that can update that can change content dynamically without

46
00:03:03.450 --> 00:03:05.690
the page refreshing.

47
00:03:05.700 --> 00:03:07.220
So this is what it boils down to.

48
00:03:07.230 --> 00:03:12.420
AJAX is just taking existing technologies and just putting them together in a different way.

49
00:03:12.600 --> 00:03:17.080
If you're interested in this sort of thing this is a blog post written by a developer named Jesse James.

50
00:03:17.080 --> 00:03:18.970
GARRETT back in 2005.

51
00:03:19.200 --> 00:03:22.860
And this is the first documented instance of the term Ajax.

52
00:03:22.890 --> 00:03:24.890
He is the guy who coined the term.

53
00:03:25.200 --> 00:03:27.950
Now he's not the first person to use AJAX in a web app.

54
00:03:27.960 --> 00:03:30.900
He is just identifying a trend and naming it.

55
00:03:30.990 --> 00:03:36.030
But this is sort of like the genesis of that word and where everything kind of exploded from here after

56
00:03:36.030 --> 00:03:37.100
he wrote this post.

57
00:03:37.110 --> 00:03:38.580
I definitely recommend reading it.

58
00:03:38.580 --> 00:03:41.340
Things have changed a bit but really not much.

59
00:03:41.420 --> 00:03:42.990
The key concepts are the same.

60
00:03:43.020 --> 00:03:48.210
There are some great diagrams to talk about you know the traditional web app flow versus the Ajax model

61
00:03:48.350 --> 00:03:50.720
and the flow basically summed up.

62
00:03:50.730 --> 00:03:56.340
See this is interrupted here on Ajax not interrupted at all because there's this additional layer of

63
00:03:56.340 --> 00:04:00.430
javascript that's doing the back and forth for us sort of the middleman.

64
00:04:01.230 --> 00:04:06.360
Furthermore Furthermore I really just say that there are some nice updates down here.

65
00:04:06.390 --> 00:04:09.450
Some Q and A's but it's just kind of a cool thing to see.

66
00:04:09.450 --> 00:04:10.810
Nice little time capsule.

67
00:04:10.860 --> 00:04:16.510
And it also talks about some of the first apps to use AJAX or to use javascript client side request.

68
00:04:16.560 --> 00:04:18.730
To their advantage things like Gmail.

69
00:04:18.760 --> 00:04:24.190
I never after a fresh Jamail to get new items or new new emails or Google Maps.

70
00:04:24.230 --> 00:04:26.850
How you can load more if the map just by scrolling over.

71
00:04:26.850 --> 00:04:30.490
Those are kind of revolutionary and are some of the first apps to use AJAX.

72
00:04:30.600 --> 00:04:32.430
Even before it had a name.

73
00:04:32.430 --> 00:04:34.130
So definitely check this out.

74
00:04:34.170 --> 00:04:40.500
So what it boils down to is that with Ajax Web sites can send and request information or data from a

75
00:04:40.500 --> 00:04:46.550
server in the background should highlight that in the background without disturbing the current page.

76
00:04:46.560 --> 00:04:51.990
So that's very different and I'll show you an example in a moment of how web apps used to work and some

77
00:04:51.990 --> 00:04:53.310
of them still work this way.

78
00:04:53.310 --> 00:05:00.950
But the difference is very stark and that led to today's single page apps that term single page application

79
00:05:00.950 --> 00:05:07.570
very popular kind of buzzword D as well as frameworks that help you manage single page applications.

80
00:05:07.640 --> 00:05:11.240
Things like angular or MBRD or even react.

81
00:05:11.240 --> 00:05:13.650
So all of this stems from Ajax.

82
00:05:14.070 --> 00:05:16.160
OK so here's a little illustration.

83
00:05:16.640 --> 00:05:19.500
If you use Pinterest this might be familiar to you.

84
00:05:19.580 --> 00:05:21.610
If you don't this is Pinterest.

85
00:05:21.770 --> 00:05:27.920
Now you can see what it looks like and what's happening here is that as I scroll down the screen new

86
00:05:27.920 --> 00:05:29.230
items are loading.

87
00:05:30.020 --> 00:05:33.130
Right so I don't have to click a button to take me to the next page.

88
00:05:33.170 --> 00:05:34.970
The page never refreshes.

89
00:05:35.120 --> 00:05:37.410
I never change the page that I'm on.

90
00:05:37.640 --> 00:05:40.360
This infinite scroll which is not just limited to Pinterest.

91
00:05:40.360 --> 00:05:43.550
It's kind of a common feature on sites like tumbler.

92
00:05:43.820 --> 00:05:45.250
Plenty of other sites out there.

93
00:05:45.440 --> 00:05:52.790
As I keep scrolling down new content is loaded dynamically into the page using AJAX mainly using javascript

94
00:05:53.150 --> 00:05:57.710
which is going to get data with in the background that disturbing the page and then once it's back it's

95
00:05:57.770 --> 00:06:00.890
adding into the page relatively seamlessly.

96
00:06:00.890 --> 00:06:05.500
So that's done with Ajax and compare that to the experience of using Reddit.

97
00:06:05.570 --> 00:06:11.720
One of my personal favorite sites I probably spend way too much time on as I scroll down and want more

98
00:06:11.720 --> 00:06:12.100
content.

99
00:06:12.110 --> 00:06:15.240
I click the next button and notice what happens.

100
00:06:15.260 --> 00:06:19.570
It might be hard to see in this little video but it refreshes the entire page.

101
00:06:19.580 --> 00:06:21.290
It starts me over at the top.

102
00:06:21.340 --> 00:06:25.880
There's an entire request that's made from the browser not through javascript.

103
00:06:25.880 --> 00:06:28.790
Basically starting the whole process over.

104
00:06:29.060 --> 00:06:30.970
So this is not using AJAX.

105
00:06:30.980 --> 00:06:32.870
This is kind of the old fashioned way.

106
00:06:33.080 --> 00:06:35.510
So not Ajax.

107
00:06:35.510 --> 00:06:37.760
So here's really what's happening with Pinterest.

108
00:06:37.760 --> 00:06:39.610
Just as a single example.

109
00:06:39.680 --> 00:06:45.120
So I hit the bottom of the page and that triggers an event.

110
00:06:45.170 --> 00:06:47.240
Javascript says while the user scrolled to the bottom.

111
00:06:47.240 --> 00:06:48.720
Go go go.

112
00:06:48.740 --> 00:06:50.840
Send a request to a server.

113
00:06:50.900 --> 00:06:56.020
It's probably some Pinterest or definitely is Pinterest own internal server they have set up for this.

114
00:06:56.210 --> 00:06:59.390
Send a request for a server and get more content.

115
00:06:59.920 --> 00:07:03.740
So then that sends a request to the server and this is the key part.

116
00:07:04.010 --> 00:07:06.490
This is what's different in the past.

117
00:07:06.530 --> 00:07:07.820
This would be a page refresh.

118
00:07:07.820 --> 00:07:13.010
This would be a separate request from your browser but with Ajax the ability to make a request through

119
00:07:13.010 --> 00:07:17.430
javascript It just happens on the background while you're on this page.

120
00:07:17.810 --> 00:07:19.670
So it happens servers like.

121
00:07:19.680 --> 00:07:22.280
OK here you go here's the new content.

122
00:07:22.280 --> 00:07:25.470
It sends it back and then with my javascript.

123
00:07:25.520 --> 00:07:28.380
Once I have that data back I was waiting for it.

124
00:07:28.520 --> 00:07:36.300
The Javascript was waiting once it get it back then it inserts it into the page with some edge to him.

125
00:07:36.350 --> 00:07:42.260
So it's not just inserting plain data but it makes image tags and whatever these are paragraph tags

126
00:07:42.260 --> 00:07:46.040
and link tags or tags and it just appends them to the page.

127
00:07:46.040 --> 00:07:46.960
In this case.

128
00:07:47.150 --> 00:07:49.480
So that's a really common workflow.

129
00:07:49.520 --> 00:07:50.280
Get some data.

130
00:07:50.330 --> 00:07:56.150
Some event triggers some some request that request goes off through javascript gets data it comes back

131
00:07:56.420 --> 00:07:59.840
and then gets added to the page.

132
00:08:00.060 --> 00:08:02.580
So here's the entire workforce again.

133
00:08:02.650 --> 00:08:08.590
What really it boils down to is this sending that request to the server and getting more content.

134
00:08:08.590 --> 00:08:13.920
That's the key part of all of this and it's what we'll spend a lot of time on in this section.

135
00:08:13.960 --> 00:08:15.760
How do we make those requests.

136
00:08:15.760 --> 00:08:17.010
There's a couple of different ways.

137
00:08:17.110 --> 00:08:20.520
So we'll talk about the XM HTP request.

138
00:08:20.830 --> 00:08:26.290
Then let's talk about something else called the fecche API which is sort of the newer approach but it's

139
00:08:26.290 --> 00:08:29.050
not quite implemented across all the browsers yet.

140
00:08:29.080 --> 00:08:31.390
And then we'll talk about third party libraries.

141
00:08:31.390 --> 00:08:36.430
So additional things that aren't native to the browsers like Jay query or X-post that you can include

142
00:08:36.430 --> 00:08:38.050
yourself in use.

143
00:08:38.290 --> 00:08:42.640
So we're going to talk about a couple of different ways all these ways here if making requests and along

144
00:08:42.640 --> 00:08:48.400
the way we'll build a couple of demonstrations in an app that illustrate how Ajax works and of the flow

145
00:08:48.400 --> 00:08:50.230
of putting those moving pieces together.

146
00:08:50.460 --> 00:08:50.750
OK.

147
00:08:50.770 --> 00:08:53.630
So that is a quick intro to what AJAX is.

148
00:08:53.640 --> 00:09:00.040
Remember it's the confluence of these technologies that allow us to make seamless web apps where data

149
00:09:00.040 --> 00:09:06.160
is being moved back and forth in the background and the page is updated dynamically without the user

150
00:09:06.370 --> 00:09:08.380
having to refresh the page.

151
00:09:08.380 --> 00:09:08.900
All right.
