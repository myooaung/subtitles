WEBVTT
1
00:00:00.290 --> 00:00:04.540
OK so this is the solution for you to building this little Bitcoin widget.

2
00:00:05.190 --> 00:00:07.890
So I started code and minimize the success.

3
00:00:08.010 --> 00:00:09.210
You don't really care about that.

4
00:00:09.350 --> 00:00:11.220
Make the font a bit larger.

5
00:00:11.220 --> 00:00:16.160
And the first thing we'll do is just capture our button like we've been doing.

6
00:00:16.590 --> 00:00:25.540
Well I had our little event listener and will do an alert make sure that works OK.

7
00:00:25.620 --> 00:00:26.380
All right.

8
00:00:26.610 --> 00:00:30.590
So the next important step is to actually make that request.

9
00:00:30.810 --> 00:00:40.400
So to make that request we'll do our Exige our new XM out HTP request just like that.

10
00:00:40.500 --> 00:00:42.680
Then we'll also do the bottom.

11
00:00:42.900 --> 00:00:51.300
We'll start off with our S.H. are dot open which is a GET request and there you go I remember are you

12
00:00:51.300 --> 00:00:52.190
or else right here.

13
00:00:52.260 --> 00:00:56.070
I'm going to copy that over and we could just paste it like that.

14
00:00:56.070 --> 00:01:04.220
I prefer to do this just stylistically doesn't make a difference though me makes it more space.

15
00:01:04.290 --> 00:01:04.820
OK.

16
00:01:05.430 --> 00:01:06.570
So we're going to pass.

17
00:01:06.560 --> 00:01:08.900
You are Ellen just like that.

18
00:01:08.940 --> 00:01:14.550
Then we also want ex-aide charts and so that will actually send our request off every time you click

19
00:01:14.550 --> 00:01:15.220
the button.

20
00:01:15.270 --> 00:01:16.700
We're just not doing anything.

21
00:01:16.710 --> 00:01:25.410
So now where we need to add that lovely and by lovely I mean ugly bit of code on ready state change

22
00:01:29.430 --> 00:01:39.310
and in here we're at our IF statement if Exige are dot and we'll start off with ready state equals equals

23
00:01:39.310 --> 00:01:45.800
four and ex-aide chart status equals equals 200.

24
00:01:46.570 --> 00:01:50.640
Let's just do a concert log in here.

25
00:01:50.740 --> 00:01:55.910
Let's just put the exit chart response text see if we're getting anything back.

26
00:01:56.070 --> 00:01:56.750
OK.

27
00:01:57.010 --> 00:01:59.140
Open up the con..

28
00:01:59.140 --> 00:02:04.490
Let me move this over to the side make it a bit larger.

29
00:02:04.670 --> 00:02:05.410
OK.

30
00:02:05.900 --> 00:02:09.560
Clear that out and click refresh data.

31
00:02:09.580 --> 00:02:10.110
Awesome.

32
00:02:10.250 --> 00:02:11.490
We're getting our data.

33
00:02:11.810 --> 00:02:20.240
So now what we have to do is figure out what we care about and what we care about is our data BPI and

34
00:02:20.240 --> 00:02:23.810
we'll go with Pound's right not DBP.

35
00:02:23.840 --> 00:02:29.020
And then most importantly rate but before we can do that we have to parse our data.

36
00:02:29.150 --> 00:02:34.160
So we're going to close the console again and in here rather than just consider logging.

37
00:02:34.160 --> 00:02:44.210
We need to do a Jaison parse ex-aide char response text and we can say that to a variable let's just

38
00:02:44.210 --> 00:02:47.310
call it our data just like that.

39
00:02:48.580 --> 00:03:02.080
And let's do a data dot and remember it's BPI dot GBP BPI dot G B P And they we all started there and

40
00:03:02.080 --> 00:03:03.350
just see if we print that out

41
00:03:07.590 --> 00:03:11.020
save open up the council refresh.

42
00:03:11.250 --> 00:03:12.060
All right.

43
00:03:12.060 --> 00:03:14.250
First you can see that it's no longer a string.

44
00:03:14.280 --> 00:03:15.780
We've parsed it.

45
00:03:15.780 --> 00:03:20.410
We get this nice color coded thing all we want now is dot right.

46
00:03:21.240 --> 00:03:27.870
So just add that in there we go Dot rate save and we're getting the price.

47
00:03:28.140 --> 00:03:30.540
That's what we want to close the council down.

48
00:03:30.900 --> 00:03:37.020
And the next thing we want to do is actually update this span right here or the price goes so in there

49
00:03:37.800 --> 00:03:39.020
we want to update that.

50
00:03:39.120 --> 00:03:41.300
So first we need to select that.

51
00:03:41.420 --> 00:03:50.960
So we'll do a VAR and we'll just call it price display maybe price display equals documents that's where

52
00:03:51.080 --> 00:03:56.470
you select her or get element by id price.

53
00:03:56.460 --> 00:03:58.850
Cool just like that.

54
00:03:58.860 --> 00:04:02.590
Now down here all we need to do is manipulate it first.

55
00:04:02.610 --> 00:04:11.550
Let's actually take this and save it to a variable var price equals that just an intermediate step to

56
00:04:11.550 --> 00:04:13.090
make it a little more legible.

57
00:04:13.260 --> 00:04:23.880
And then we'll take our price display dot inner text equals price just like that.

58
00:04:23.890 --> 00:04:25.900
So let's see if it works.

59
00:04:26.410 --> 00:04:27.710
Looks good.

60
00:04:27.910 --> 00:04:32.250
Of course we can't tell what currency we're working with right now which is pounds.

61
00:04:32.440 --> 00:04:39.060
So we could add that in as well just like this space and then GBP.

62
00:04:39.460 --> 00:04:41.050
Take a look now.

63
00:04:41.380 --> 00:04:42.960
All right let's wait a moment.

64
00:04:42.960 --> 00:04:43.870
Make sure it works.

65
00:04:43.900 --> 00:04:45.300
If the price changes.

66
00:04:45.760 --> 00:04:46.540
Awesome.

67
00:04:46.990 --> 00:04:48.870
All right so that's pretty much it.

68
00:04:48.880 --> 00:04:51.820
You know there are a couple of things we could do to streamline this.

69
00:04:51.820 --> 00:04:54.100
You don't have to have an intermediate variable.

70
00:04:54.100 --> 00:04:59.980
The other thing that I would mention you know it would be nice to not hard code in pounds here in pounds

71
00:04:59.980 --> 00:05:00.520
here.

72
00:05:00.610 --> 00:05:08.860
So we could make a new variable appear called currency and set it to let's say U.S. dollars this time.

73
00:05:08.860 --> 00:05:13.870
And then down here rather than doing GBP I can do

74
00:05:16.360 --> 00:05:23.740
currency has a variable rate and then rather than just putting pounds here as a string I can do plus

75
00:05:24.070 --> 00:05:27.550
a space plus currency.

76
00:05:27.600 --> 00:05:35.800
So that will just take us dollars and substituted here and here and now get the U.S. dollar price.

77
00:05:35.800 --> 00:05:43.870
And the reason that's nice is that I can very easily change this to be euros and get the euro price

78
00:05:44.110 --> 00:05:45.310
or pound.

79
00:05:45.820 --> 00:05:49.600
So that's a small change I would make it makes it easier to adapt.

80
00:05:49.600 --> 00:05:56.170
Also if you did want to add those radio buttons or checkbox for the user to select what currency you

81
00:05:56.170 --> 00:06:01.960
use all those who need to do is change the currency value change to that string.

82
00:06:01.960 --> 00:06:05.470
Lastly if you do want to make this a little bit better you could handle errors.

83
00:06:05.500 --> 00:06:08.390
If the API was down you know something went wrong.

84
00:06:08.500 --> 00:06:09.890
Right now we're not doing that.

85
00:06:10.240 --> 00:06:16.440
And finally when we were fresh this there's nothing at the beginning.

86
00:06:16.660 --> 00:06:23.950
So you could basically just use window mode if you wanted to or something like that to run this code

87
00:06:23.950 --> 00:06:25.540
and make the request and update it.

88
00:06:25.540 --> 00:06:29.810
You might want to extract all this to a separate function rather than having duplicated code.

89
00:06:30.190 --> 00:06:32.230
But all you need to do is make this work.

90
00:06:32.350 --> 00:06:34.820
And that works.

91
00:06:35.470 --> 00:06:36.090
Oh right.

92
00:06:36.100 --> 00:06:36.820
We're done.
