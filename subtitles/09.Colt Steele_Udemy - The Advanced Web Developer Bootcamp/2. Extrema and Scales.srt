1
00:00:00,420 --> 00:00:06,480
Welcome to the next section now that you understand the basics of D-3 and SPG it's time to learn about

2
00:00:06,480 --> 00:00:08,440
some more intermediate topics.

3
00:00:08,460 --> 00:00:13,670
Here are some of the things we'll be learning about in this section in this video.

4
00:00:13,750 --> 00:00:19,290
Learn how to use D-3 to calculate extreme values of data sets and to scale data.

5
00:00:19,380 --> 00:00:26,310
These calculations will definitely ease the process of building visualizations with SPG in the next

6
00:00:26,310 --> 00:00:27,000
video.

7
00:00:27,060 --> 00:00:30,960
We'll use what we've learned to build our first scatterplot and D-3.

8
00:00:31,140 --> 00:00:36,870
After that we'll improve the readability of our graphs by learning how to add axes grid lines labels

9
00:00:36,960 --> 00:00:41,830
and titles to them in the final set of videos for this section.

10
00:00:41,870 --> 00:00:47,160
We'll learn about some D-3 helper's that will make building histograms and pie charts much more straightforward

11
00:00:49,240 --> 00:00:49,780
now.

12
00:00:49,840 --> 00:00:52,890
Let's focus on extreme values and scales.

13
00:00:53,020 --> 00:00:58,060
When we left off last time we built a bar chart to visualize births around the world by month and by

14
00:00:58,060 --> 00:00:58,560
year.

15
00:00:59,570 --> 00:01:03,630
There were a few issues that came up when building this visualization.

16
00:01:03,650 --> 00:01:07,940
For one we had to inspect our dataset to find the first and last years.

17
00:01:08,240 --> 00:01:13,990
We also had to manually identify the largest value in our dataset based on that largest value.

18
00:01:14,000 --> 00:01:18,950
We also had to do some arithmetic in order to make sure that all of our rectangles always fit inside

19
00:01:18,950 --> 00:01:20,790
of the SVGA.

20
00:01:20,870 --> 00:01:25,350
Fortunately D3 comes with methods to help us with these common tasks.

21
00:01:25,400 --> 00:01:27,370
If you want to pick up where we left off.

22
00:01:27,410 --> 00:01:29,670
Here are some links to the existing code.

23
00:01:29,750 --> 00:01:32,330
I'll be modifying the app japes we had from before.

24
00:01:32,390 --> 00:01:40,070
Directly in my text editor the first helper method will look at is D-3 dot max which takes in an array

25
00:01:40,100 --> 00:01:43,370
and returns the largest value in the array.

26
00:01:43,370 --> 00:01:48,860
You can also pass in an optional callback specifying how you want to associate a value to elements in

27
00:01:48,860 --> 00:01:49,910
the array.

28
00:01:49,910 --> 00:01:55,070
This can be extremely helpful if you have an array of objects and want to find the max based on a particular

29
00:01:55,070 --> 00:01:55,570
key.

30
00:01:56,670 --> 00:02:03,060
Similarly there's a D-3 dustmen function which finds the smallest value instead of the largest.

31
00:02:03,060 --> 00:02:04,770
Here are a few examples.

32
00:02:04,860 --> 00:02:09,430
If I just pass an array of numbers and 3 that Max I'll get the max.

33
00:02:09,460 --> 00:02:13,990
Unsurprisingly something similar happens if I use the three men in this case.

34
00:02:14,010 --> 00:02:18,540
I'll get the smallest value instead of the largest.

35
00:02:18,540 --> 00:02:23,520
Now lets suppose I have an array of people objects where each person has a name and an age.

36
00:02:23,670 --> 00:02:30,150
If I want to find the largest age in my data set I can use D-3 dot Max and pass in a callback then grabs

37
00:02:30,180 --> 00:02:32,130
each person's age.

38
00:02:32,280 --> 00:02:39,510
I can do something similar if I want to find the shortest name in the dataset using D-3 Gutmann.

39
00:02:39,580 --> 00:02:45,880
Let's apply these functions to refactor some of our previous code we can use D-3 Max to find the maximum

40
00:02:45,880 --> 00:02:51,430
value in our data set rather than trying to eyeball it by looking through all of the values.

41
00:02:51,430 --> 00:02:56,960
We can also refactor our many year and next year variables to use these D-3 helper functions.

42
00:02:58,690 --> 00:03:02,440
Once we know the maximum number of births we can base our scale on it.

43
00:03:02,830 --> 00:03:07,700
Once again D-3 comes with a helper function to assist in creating the scale.

44
00:03:07,710 --> 00:03:12,480
There are a number of different scales you can use for your data but the most common one is D-3 dot

45
00:03:12,480 --> 00:03:19,260
scale linear given a domain and a range scale linear returns a function that maps values in the domain

46
00:03:19,440 --> 00:03:24,610
to values in the range before applying this function to our visualization.

47
00:03:24,780 --> 00:03:26,520
Let's look at an example.

48
00:03:26,580 --> 00:03:33,690
Suppose I want to map values one interval say from 1 to 17 to values in another interval say from minus

49
00:03:33,690 --> 00:03:35,030
4 to 52.

50
00:03:35,370 --> 00:03:39,080
With some algebra I could write a function that would not all use on the first line.

51
00:03:39,130 --> 00:03:40,570
Values on the second line.

52
00:03:41,410 --> 00:03:44,950
But this is precisely what D-3 scale does.

53
00:03:44,980 --> 00:03:47,410
Here's the syntax for the domain.

54
00:03:47,440 --> 00:03:54,220
I'll pass on the array one comma 17 for the range I'll pass and the other interval negative for comma

55
00:03:54,220 --> 00:03:55,570
52.

56
00:03:55,700 --> 00:03:56,330
Cool.

57
00:03:56,730 --> 00:04:03,340
This scale will now map values in the domain to values in the range for example scale of 1 returns minus

58
00:04:03,340 --> 00:04:11,080
4 scale of 17 returns 52 and every value in between 1 and 17 gets mapped to its appropriate value in

59
00:04:11,080 --> 00:04:12,620
the range.

60
00:04:12,740 --> 00:04:18,270
We can use scale in here to create a scale mapping our data values to our SPG dimensions.

61
00:04:18,270 --> 00:04:19,560
Here's what that looks like.

62
00:04:21,160 --> 00:04:25,710
There's one small change we've made to the scale here compared to our previous example.

63
00:04:25,750 --> 00:04:30,640
Note that we've mapped to 0 to the SPG height and Max birth's to zero.

64
00:04:30,670 --> 00:04:36,460
This has the effect of flipping the y axis in this way y scale of zero gets mapped to the bottom of

65
00:04:36,460 --> 00:04:37,980
the SPG.

66
00:04:37,990 --> 00:04:44,050
This makes reasoning about coordinates a bit easier since after scaling y values increases you go up

67
00:04:44,440 --> 00:04:45,940
not down.

68
00:04:45,940 --> 00:04:51,720
Now that we've created our scale let's use it to modify our data so that the bars all fit in our SVGA

69
00:04:52,800 --> 00:04:55,420
we no longer need to hard code in our scaling factor.

70
00:04:55,560 --> 00:05:01,830
D-3 does this for us all we need to do is set the Y attribute for each rectangle equal to the scaled

71
00:05:01,830 --> 00:05:03,030
y value.

72
00:05:03,420 --> 00:05:10,560
Then we can set the height attribute equal to the SVGA height minus the scaled y value.

73
00:05:10,590 --> 00:05:13,700
This code is much more flexible than what we had before.

74
00:05:13,710 --> 00:05:16,350
It doesn't depend on the specific set of data points.

75
00:05:16,530 --> 00:05:21,840
And if we decide to add or remove data from the data set later on we won't need to modify this code.

76
00:05:23,110 --> 00:05:23,560
That's it.

77
00:05:23,560 --> 00:05:29,930
On extreme scales for now in the next video we'll see how to make a basic scatterplot using D-3.

78
00:05:29,950 --> 00:05:31,230
I'll see you there.
