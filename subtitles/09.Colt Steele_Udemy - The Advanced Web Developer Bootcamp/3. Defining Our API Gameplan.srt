1
00:00:00,270 --> 00:00:00,680
All right.

2
00:00:00,680 --> 00:00:05,030
So before we dive into the code itself let's take a moment to talk about our game plan.

3
00:00:05,040 --> 00:00:10,350
Let's outline what we're going to build and we'll start off by talking about the structure of our data

4
00:00:10,500 --> 00:00:12,000
and our database.

5
00:00:12,000 --> 00:00:16,800
So we're making a simple simple app and there's three things that we really care about.

6
00:00:16,800 --> 00:00:19,750
For each to do we have a name.

7
00:00:19,830 --> 00:00:23,730
So that's the text the whatever walk the dog by milk.

8
00:00:23,730 --> 00:00:24,730
Bake a cake.

9
00:00:24,840 --> 00:00:28,950
We have completed which is going to be a simple true or false.

10
00:00:29,130 --> 00:00:33,390
And then we have a created date which are not really using but it's good to add into their.

11
00:00:33,420 --> 00:00:35,360
It's a common thing you want in an API.

12
00:00:35,550 --> 00:00:38,230
So a created date which is a date itself.

13
00:00:38,420 --> 00:00:40,500
So a string of bullion and a date.

14
00:00:40,920 --> 00:00:46,740
So I have a bunch of to do's in our database then the endpoints that we want for RJC on API that we

15
00:00:46,740 --> 00:00:49,710
could request with Ajax requests.

16
00:00:50,100 --> 00:00:51,280
Are these five.

17
00:00:51,630 --> 00:00:58,770
So the first point is slash API slash to do is actually GET request and that will just list all of our

18
00:00:58,850 --> 00:00:59,610
to do.

19
00:00:59,790 --> 00:01:09,230
So if I come over here and I go to that URL you'll see we get a list of all of our dues as Jason.

20
00:01:09,660 --> 00:01:17,310
So we have the name created date be completed as well as an ID which is generated by Mongo when we insert

21
00:01:17,310 --> 00:01:18,240
into the database.

22
00:01:18,390 --> 00:01:24,930
So we'll get to that then we have the create a new to do route which is a post request sent to slash

23
00:01:24,930 --> 00:01:26,540
API slash to Dewes.

24
00:01:26,610 --> 00:01:28,960
So I won't send one of those just yet.

25
00:01:29,190 --> 00:01:36,300
But when we hit enter here it's sending a post request to that you know where she can view in our network

26
00:01:36,300 --> 00:01:37,130
tab.

27
00:01:37,290 --> 00:01:38,240
One more.

28
00:01:38,490 --> 00:01:39,630
There it is.

29
00:01:39,630 --> 00:01:45,460
If we look at this it is a post sent to slash API slash to deuce.

30
00:01:45,900 --> 00:01:50,490
So I won't go through every single one and actually make the request but then we need a way to view

31
00:01:50,580 --> 00:01:54,910
an individual to do which we're not actually using inside of our application.

32
00:01:55,110 --> 00:02:02,520
But it's a traditional route to have in an API and then we have the update to do route which is API

33
00:02:02,520 --> 00:02:09,780
slash to do and then the idea of the to do that we're going to update and add to put request in the

34
00:02:09,780 --> 00:02:16,800
same you or L as a delete request will delete that particular to do that we're specifying in the row.

35
00:02:17,100 --> 00:02:19,330
So these are the five routes we're going to build.

36
00:02:19,330 --> 00:02:25,170
And remember the three fields we want for each to do so without further ado let's get going.

37
00:02:25,410 --> 00:02:32,280
And first we have the very best part and by very best I mean very absolute worst which is installing

38
00:02:32,280 --> 00:02:34,940
everything so that we can get going with our code.

39
00:02:34,980 --> 00:02:37,260
So next video we're going to install a bunch of stuff.

40
00:02:37,260 --> 00:02:38,900
It's going to be mediocre.
