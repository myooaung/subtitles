WEBVTT
1
00:00:00.210 --> 00:00:03.450
So when we look at our page we saw that message form is not defined.

2
00:00:03.600 --> 00:00:05.270
Well we use make that component.

3
00:00:05.520 --> 00:00:13.960
So we're going to import message form from last containers slash message for

4
00:00:17.630 --> 00:00:22.510
and this message forum is going to need to be a container because we're going to need to know some information

5
00:00:22.750 --> 00:00:24.190
from the state.

6
00:00:24.310 --> 00:00:26.390
Specifically any error messages.

7
00:00:26.760 --> 00:00:28.760
So let's make sure we get back from containers.

8
00:00:28.880 --> 00:00:35.420
Slash Messers containers slashed message for now we don't have this yet so let's go make a new file.

9
00:00:36.320 --> 00:00:39.390
We'll call that message form dodginess.

10
00:00:39.740 --> 00:00:42.970
And inside of our message form we're going to need to do a couple of things.

11
00:00:43.190 --> 00:00:48.180
We're going to import react and the structural component from react.

12
00:00:48.470 --> 00:00:52.440
We're then going to import connect from Riyadh redux.

13
00:00:52.470 --> 00:00:59.030
So the glue between reactant redux and we're going to need some kind of action creator that's going

14
00:00:59.030 --> 00:01:00.890
to be run when this one gets submitted.

15
00:01:00.890 --> 00:01:03.290
So we're going to go back to our messages actions.

16
00:01:03.650 --> 00:01:09.800
And right now we only have the ability to get or fetch messages was going to an action creator to create

17
00:01:09.800 --> 00:01:10.290
messages.

18
00:01:10.300 --> 00:01:12.080
We'll call that post new message.

19
00:01:12.080 --> 00:01:15.200
It's going to take in some kind of text and it's going to be a thug.

20
00:01:15.410 --> 00:01:21.600
So once again we're going to dispatch and we're also going be able to get the redux the as the second

21
00:01:21.600 --> 00:01:23.030
parameter.

22
00:01:23.110 --> 00:01:26.950
So you'll see in a second why we want to do that but we're going to want to get the current user's ID

23
00:01:27.300 --> 00:01:34.610
so a variable or with the structure current user from GETS THE This will give us the redux the specifically

24
00:01:34.610 --> 00:01:35.710
the current user.

25
00:01:35.810 --> 00:01:42.450
And then we'll make a variable called ID which is the result of current user user data ID.

26
00:01:42.550 --> 00:01:50.050
So we need this ID because when we make our call we're going to make a post request to slash API slash

27
00:01:50.050 --> 00:01:53.490
users slash the correct user ID.

28
00:01:53.740 --> 00:01:58.180
And that's where we're going to get it from our redux the flash messages and we'll pass in that text

29
00:01:58.620 --> 00:02:00.930
an object with a key and value of text.

30
00:02:01.110 --> 00:02:05.630
No one has done all of our function What's the response.

31
00:02:06.140 --> 00:02:11.850
Here we'll just return an object make sure we have our syntax correctly.

32
00:02:11.880 --> 00:02:12.850
And that looks better.

33
00:02:12.870 --> 00:02:14.080
And if this fails.

34
00:02:14.270 --> 00:02:16.340
Well the catch with some kind of error.

35
00:02:17.590 --> 00:02:28.140
And we'll send our function to dispatch that error message.

36
00:02:28.140 --> 00:02:30.990
Let's also make sure that we import an error that looks good.

37
00:02:31.110 --> 00:02:35.490
So when we post we're really going to return an object and that doesn't matter too much.

38
00:02:38.400 --> 00:02:41.080
So what happens when we actually post any message.

39
00:02:41.400 --> 00:02:44.540
Well we're going to make a request to our API.

40
00:02:45.000 --> 00:02:47.290
We're going to add that message to the database.

41
00:02:47.550 --> 00:02:52.740
We're going to reload the message list and then load messages is going to run again and it's going to

42
00:02:52.740 --> 00:02:54.650
get the newest message.

43
00:02:54.660 --> 00:02:59.980
So we think about our producer we don't really need to worry about adding a new message because messages

44
00:02:59.980 --> 00:03:01.730
is going to do that for us.

45
00:03:01.740 --> 00:03:04.850
We'll see what that looks like when we finish building our message for.

46
00:03:05.250 --> 00:03:09.470
So instead of the form I'm going to import that post-New message function that we need.

47
00:03:09.870 --> 00:03:16.510
And that's from Dr. I-Slash store slash actions slash messages.

48
00:03:17.520 --> 00:03:19.330
And this is going to be a component.

49
00:03:19.590 --> 00:03:27.490
So we're going to extend component LME constructor with crop's we'll call super on prop's and here on

50
00:03:27.610 --> 00:03:30.530
a little bit a default state for a message.

51
00:03:30.580 --> 00:03:32.860
So we're just going to write a little bit of next year.

52
00:03:32.890 --> 00:03:34.250
And we want to control that input.

53
00:03:34.270 --> 00:03:36.110
So we'll start with some defaults.

54
00:03:36.550 --> 00:03:41.130
We also want to make sure that we have a function to handle that new message.

55
00:03:41.140 --> 00:03:46.660
So this is what's going to be run on the pharmacy minute or get access the event object and inside of

56
00:03:46.660 --> 00:03:52.480
here we'll start by preventing the default and then we'll come back to this in a little bit.

57
00:03:55.340 --> 00:03:57.630
Let's first build the GSX for that form.

58
00:03:58.070 --> 00:04:03.260
So if it's a container we want to make sure that we match the two props and pass in some kind of state

59
00:04:03.260 --> 00:04:08.480
if we need it which in this case we do want the state which is going to be for any errors and it's in

60
00:04:08.480 --> 00:04:09.800
the current state of hers.

61
00:04:09.890 --> 00:04:16.390
So are there any errors here we'll be able to display that information easily to the user.

62
00:04:16.500 --> 00:04:27.280
What else do we need to make sure that we export the default of connect with map stage props as well

63
00:04:27.310 --> 00:04:33.790
as post-New message on map dispatch to props and rub all that together and then invoke our message form

64
00:04:33.790 --> 00:04:36.570
component.

65
00:04:36.660 --> 00:04:40.030
So some GSX inside of our render.

66
00:04:40.100 --> 00:04:45.560
So instead of render we're going to return and Bloodstar with a foreign

67
00:04:50.020 --> 00:04:53.820
So inside of our form we want to make sure that the action doesn't matter too much.

68
00:04:53.840 --> 00:05:00.080
All we really want is an on submit handler that will run this that handle new message

69
00:05:03.300 --> 00:05:04.290
inside of this form.

70
00:05:04.290 --> 00:05:11.410
We're going to want to say if there is any error then what's good display.

71
00:05:13.040 --> 00:05:17.590
That specific error message and we can do that inside of a div.

72
00:05:19.080 --> 00:05:24.890
Make sure we get the syntax correct and we'll get this div a class name of a word color danger.

73
00:05:24.990 --> 00:05:37.770
Pretty standard bootstrap style and here and here will specify whatever props Dom errors is.

74
00:05:37.810 --> 00:05:41.670
Also make sure that class name is spelled correctly and that looks a little bit better.

75
00:05:42.850 --> 00:05:48.090
If we don't have any errors let's just go make an input that have a text.

76
00:05:48.470 --> 00:05:55.910
We'll give that a class name form controls so we get that full with will give that a value message.

77
00:05:55.970 --> 00:06:03.280
You want to show that back in the case of any errors somebody from our state as well that will be just

78
00:06:03.290 --> 00:06:04.720
outstate that message.

79
00:06:05.050 --> 00:06:08.500
Let's also add a quick onchange so we can control this component.

80
00:06:09.270 --> 00:06:15.590
I want a function that just calls the source state with a message and our target de-value we're being

81
00:06:15.600 --> 00:06:18.310
a little bit lazy here because we only have one single component.

82
00:06:18.600 --> 00:06:23.860
But if we had more than one input here we'd ideally like to have a more generic handle change function.

83
00:06:23.970 --> 00:06:27.780
So instead of this button we'll get the same type of submit.

84
00:06:28.020 --> 00:06:30.960
Also get this a class name.

85
00:06:31.110 --> 00:06:37.200
Is that a little bit of bootstrap tilings all get this class name between NPD and success and let's

86
00:06:37.200 --> 00:06:38.450
give this a pull right.

87
00:06:38.910 --> 00:06:41.760
Which I believe will float to the right but that might just be bootstrap 3.

88
00:06:41.790 --> 00:06:43.770
So we'll see in a second if that's correct.

89
00:06:47.020 --> 00:06:51.880
And inside of this button we'll just add the text and my message.

90
00:06:51.940 --> 00:06:57.700
Let's go to each of us and head over to the browser and it looks like with authors does not contain

91
00:06:57.700 --> 00:06:58.900
an export with off.

92
00:06:59.080 --> 00:07:03.250
So it looks like we might accidentally not be importing this correctly.

93
00:07:03.640 --> 00:07:07.160
So instead of a mangy ass looks like we're destructuring this when we shouldn't.

94
00:07:08.560 --> 00:07:10.180
And what's going to see this.

95
00:07:10.390 --> 00:07:12.220
And let's go to first page message.

96
00:07:12.220 --> 00:07:14.200
Same exact hair that we had before.

97
00:07:14.200 --> 00:07:16.770
Looks like we just made the same exact mistake.

98
00:07:17.110 --> 00:07:20.270
So we don't want to disrupt your license or the default export.

99
00:07:20.860 --> 00:07:25.700
Now we're getting it can't resolve store actions message.

100
00:07:26.130 --> 00:07:31.690
So it looks like message form is looking for store actions and that should be messages not message.

101
00:07:31.710 --> 00:07:32.910
So maybe you spot that one.

102
00:07:32.970 --> 00:07:33.420
If so.

103
00:07:33.420 --> 00:07:33.960
Awesome.

104
00:07:34.260 --> 00:07:35.770
So it's good on the message right here.

105
00:07:35.850 --> 00:07:37.410
And we only give too much.

106
00:07:37.410 --> 00:07:40.200
So how come we're not getting anything particularly in the console.

107
00:07:40.200 --> 00:07:42.120
We're seeing a whole bunch of errors.

108
00:07:42.480 --> 00:07:45.250
So object is not a valid as a reac child.

109
00:07:45.400 --> 00:07:49.680
So this usually happens when you accidently render something that's an object or an array.

110
00:07:50.010 --> 00:07:54.020
So we really just want to point out the message here and not just the entire errors object.

111
00:07:54.060 --> 00:07:54.760
So let's see that.

112
00:07:54.770 --> 00:07:55.850
And that looks better.

113
00:07:56.160 --> 00:07:59.650
So let's add a message of this is so fun.

114
00:08:00.300 --> 00:08:01.140
And the other message.

115
00:08:01.140 --> 00:08:06.450
Nothing happens and that's because we need to make sure and actually finish off building our hands on

116
00:08:06.450 --> 00:08:07.600
the message function.

117
00:08:07.890 --> 00:08:13.110
So here we'll call this not Propst that post-New message will pass in this that state the message whatever

118
00:08:13.110 --> 00:08:15.060
the user typed in in that form.

119
00:08:15.060 --> 00:08:19.770
So these are post-New message function to make an API call to go right to the database with that new

120
00:08:19.770 --> 00:08:23.110
message.

121
00:08:23.370 --> 00:08:28.710
So let's make sure after we posted your message we redirect back we want to make sure that we said this

122
00:08:28.710 --> 00:08:31.060
the other message to be an empty string.

123
00:08:33.340 --> 00:08:35.860
And finally let's use the react rather.

124
00:08:36.100 --> 00:08:40.660
Let's go back to the ragout with that message time line.

125
00:08:41.140 --> 00:08:43.370
So we'll add a new message saying This is awesome.

126
00:08:43.720 --> 00:08:45.420
And there it is.

127
00:08:45.520 --> 00:08:46.610
That looks good.

128
00:08:46.760 --> 00:08:48.000
Let's add another message.

129
00:08:48.070 --> 00:08:48.860
You can say how to.

130
00:08:48.870 --> 00:08:54.070
Now it looks like we're successfully adding a message me to fix up this dialing a little bit but we're

131
00:08:54.070 --> 00:08:57.200
just playing these the ways that we want in the next election.

132
00:08:57.310 --> 00:09:01.240
We'll talk about deleting some of these messages and then we'll get to silence even more.
