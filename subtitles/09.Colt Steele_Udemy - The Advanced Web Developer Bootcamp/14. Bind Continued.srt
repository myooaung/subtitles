1
00:00:01,010 --> 00:00:04,630
Now let's see what happens when we bring the key word this back into the mix.

2
00:00:04,790 --> 00:00:07,980
Here's where things get fun in the first code block.

3
00:00:08,030 --> 00:00:13,910
We have a method called Say hi which is a function that calls a set time out and counseled out logs

4
00:00:13,970 --> 00:00:19,070
the string high concatenated with the value of the first name property on the keyword.

5
00:00:19,070 --> 00:00:22,160
This before we see what the code returns.

6
00:00:22,190 --> 00:00:25,890
Pause the video and think about what the key word this refers to.

7
00:00:25,940 --> 00:00:28,470
Go back to the first two rules is the key word.

8
00:00:28,480 --> 00:00:33,970
This in the global context is the key word this inside of a declared object.

9
00:00:34,040 --> 00:00:38,740
You might be thinking it's clearly inside of a declared object and you are right.

10
00:00:38,810 --> 00:00:43,050
However since the set time out is called at a later point in time.

11
00:00:43,280 --> 00:00:43,820
The keyword.

12
00:00:43,820 --> 00:00:46,530
This does not refer to the parent object.

13
00:00:46,670 --> 00:00:49,280
It actually refers to the global object.

14
00:00:49,280 --> 00:00:52,490
This is very tricky and trips up lots of beginners.

15
00:00:52,490 --> 00:00:56,150
So let's walk through it again since the set time out is called.

16
00:00:56,150 --> 00:00:57,830
At a later point in time.

17
00:00:57,920 --> 00:01:03,170
The object that it is attached to is actually the window just like we said before.

18
00:01:03,290 --> 00:01:06,140
So Time Out is a method on the window object.

19
00:01:06,440 --> 00:01:12,590
Remember that time out accepts a callback function and every function gets its own value of the key

20
00:01:12,590 --> 00:01:13,000
word.

21
00:01:13,000 --> 00:01:20,480
This even though it's defined inside of the cold object which it is declared the context in which the

22
00:01:20,480 --> 00:01:26,060
callback function does set time out is executed is actually a global context.

23
00:01:26,060 --> 00:01:30,390
So how can we solve this problem since we're losing the correct context of the key word.

24
00:01:30,380 --> 00:01:34,570
This we should explicitly set what we want the key word this to refer to.

25
00:01:34,700 --> 00:01:36,790
We can do that using call and apply.

26
00:01:37,040 --> 00:01:42,410
But since we want to invoke the function at a later point in time we don't want to use either of those.

27
00:01:42,440 --> 00:01:47,780
Remember the call and apply invoke a function right away and doing that would defeat the purpose of

28
00:01:47,780 --> 00:01:52,100
a set time out which is for executing a function at a later point in time.

29
00:01:52,160 --> 00:01:58,250
So that leaves us with bind in the second code block we can solve our problem by passing in as the first

30
00:01:58,250 --> 00:02:00,400
parameter to the bind method.

31
00:02:00,420 --> 00:02:01,510
The value that we want.

32
00:02:01,510 --> 00:02:07,520
The key word this to refer to you may be totally confused as to why we pass in the keyword this as the

33
00:02:07,520 --> 00:02:08,700
first parameter.

34
00:02:09,050 --> 00:02:14,620
Let's take a step back and see inside of the code object in the say high method.

35
00:02:14,750 --> 00:02:19,460
The value of the keyword this refers to the cold object instead of the keyword.

36
00:02:19,460 --> 00:02:25,340
This you can ask in the variable called to the bind method and you will get the same result.

37
00:02:25,670 --> 00:02:30,740
But if we were to change the name of our variable to Ellie our entire function would break.

38
00:02:30,740 --> 00:02:34,600
So you're more commonly see code that uses the keyword this.

39
00:02:34,790 --> 00:02:40,970
To recap we saw that the bind method returns a function definition unlike call and apply and it's useful

40
00:02:41,000 --> 00:02:46,370
for setting the value of the keyword this when we do not know what all the values of the arguments will

41
00:02:46,370 --> 00:02:50,060
be or when we are working with asynchronous code.

42
00:02:50,060 --> 00:02:51,260
One final note.

43
00:02:51,380 --> 00:02:53,800
The material we're covering here is quite advanced.

44
00:02:53,990 --> 00:02:58,100
But if you're looking to become a professional javascript developer these are the kinds of questions

45
00:02:58,100 --> 00:03:03,020
that you get asked about in interviews and this is the kind of code you see when working in production

46
00:03:03,020 --> 00:03:08,660
code bases as well as with larger and more complex frameworks like angular and react.

47
00:03:08,660 --> 00:03:11,500
If you're still quite tripped up with this example that's OK.

48
00:03:11,720 --> 00:03:16,130
Try to walk through each line of code and make sure you take the examples to see what's going on.

49
00:03:16,430 --> 00:03:18,610
As always feel free to ask us questions.

50
00:03:18,620 --> 00:03:20,110
We're here to help you learn.

51
00:03:20,180 --> 00:03:21,570
See you in the next video.
