WEBVTT
1
00:00:00.960 --> 00:00:01.890
Welcome back.

2
00:00:01.890 --> 00:00:08.170
In this quick video we're going to introduce a very friendly new feature to 2015 called template strings.

3
00:00:08.220 --> 00:00:12.990
You may have used this in other languages with a different syntax and it's sometimes known as string

4
00:00:12.990 --> 00:00:14.180
interpellation.

5
00:00:14.230 --> 00:00:15.710
Here's how it works.

6
00:00:15.750 --> 00:00:19.140
It's often quite tedious to concatenate values with strings.

7
00:00:19.320 --> 00:00:20.640
Let's see an example.

8
00:00:20.730 --> 00:00:25.980
I'm going to make a variable called first name and assign it to the string Ellie on another variable

9
00:00:25.980 --> 00:00:29.170
last name and assign it to the string Shoppach.

10
00:00:29.220 --> 00:00:34.170
Now if I want to make a new variable called greeting which is the result of the string hello.

11
00:00:34.350 --> 00:00:39.750
And the first name variable and the last name variable I have to use the plus operator and worry about

12
00:00:39.750 --> 00:00:40.580
spacing.

13
00:00:40.830 --> 00:00:43.110
It's a bit tedious and easy to mess up.

14
00:00:43.510 --> 00:00:47.050
Thankfully in 2015 we have an easier way to do that.

15
00:00:47.310 --> 00:00:51.470
And that's through the use of template strings to start with a template string.

16
00:00:51.570 --> 00:00:57.290
We can use a single Bacchic and evaluate any variables using a dollar sign.

17
00:00:57.510 --> 00:01:03.900
And then the variable inside of curly braces might look a bit strange at first but it makes life much

18
00:01:03.930 --> 00:01:05.220
easier.

19
00:01:05.220 --> 00:01:11.310
Another useful feature of template strings is that it allows us to easily write multi-line strings instead

20
00:01:11.310 --> 00:01:14.550
of having to use the newline character at the end of each line.

21
00:01:14.580 --> 00:01:19.770
We can just use of tactic to start a multi-line string and then close it with a back deck.

22
00:01:19.800 --> 00:01:22.250
There we go in the next video.

23
00:01:22.260 --> 00:01:26.190
We'll examine how to write aero functions to reduce the amount of code we need to write.

24
00:01:26.310 --> 00:01:26.790
See that.
