1
00:00:01,230 --> 00:00:06,660
Let's talk about refs now this is a feature I don't use super often so keep that in mind as we talk

2
00:00:06,660 --> 00:00:07,210
about it.

3
00:00:08,400 --> 00:00:11,770
So the objective will be to first define a ref and reacts.

4
00:00:12,090 --> 00:00:19,970
And secondly to use a ref on an uncontrolled input component so a ref is a direct reference to a dom

5
00:00:20,000 --> 00:00:20,670
element.

6
00:00:20,990 --> 00:00:26,450
And if you think about that all the things that we've done so far have not directly referenced the don't

7
00:00:26,960 --> 00:00:31,900
we just provide state to react and then react decides what to do with the Don.

8
00:00:32,210 --> 00:00:36,070
So refs are kind of breaking the model that reactor's created.

9
00:00:38,610 --> 00:00:42,360
And straight from the Facebook docs here some use cases for refs.

10
00:00:42,540 --> 00:00:50,040
You can manage focused text selection or media play that with refs trigger imperative animations.

11
00:00:51,200 --> 00:00:56,810
And integrating with third party Dom libraries that's a good one for something like D-3 if you wanted

12
00:00:56,810 --> 00:01:07,050
to make a re-act component that controls some D-3 visualization then it would make sense to use ref.

13
00:01:07,230 --> 00:01:13,220
And this point I want to say do not use refs when you can do the same thing in re-act without it.

14
00:01:14,080 --> 00:01:18,940
Refs should be considered your last option when you're thinking about how to solve a problem.

15
00:01:19,030 --> 00:01:22,930
Most of the problems that you encounter will probably not need refs.

16
00:01:23,230 --> 00:01:24,480
So keep that in mind.

17
00:01:24,520 --> 00:01:28,120
I would definitely search around if you're trying to solve some problem the only way you can think of

18
00:01:28,120 --> 00:01:30,920
solving it is with a ref.

19
00:01:30,970 --> 00:01:36,550
So here's an example of using a ref on our form rather than having a controlled input like we've seen

20
00:01:36,550 --> 00:01:37,330
before.

21
00:01:37,330 --> 00:01:42,880
We'll leave the input uncontrolled So the browser is the one that manages all the state and re-act is

22
00:01:42,880 --> 00:01:45,540
not aware of what's happening to the input.

23
00:01:46,150 --> 00:01:50,000
But you'll notice inside that input We've also added a ref equals.

24
00:01:50,310 --> 00:01:54,810
And this callback function that you get has access to that Dom element.

25
00:01:54,880 --> 00:02:01,600
And what I'm doing inside of that callback is I'm adding a Vistar input text equals that input.

26
00:02:01,600 --> 00:02:09,670
So I'm saving a reference to that Dom element into my component and then appear in the.

27
00:02:09,870 --> 00:02:12,810
We can then get access to that value inside the input.

28
00:02:12,810 --> 00:02:20,760
This is just a normal Dom element with that value in order to update state or anything else you want

29
00:02:20,760 --> 00:02:22,720
to do with that content.

30
00:02:22,720 --> 00:02:25,490
Again this is a pattern that I wouldn't recommend using.

31
00:02:25,570 --> 00:02:32,080
I'd prefer to use the controlled component pattern but this is just an example of what a ref is and

32
00:02:32,500 --> 00:02:34,050
what you are able to do with it.

33
00:02:34,940 --> 00:02:36,690
That's all I'm going to say about refs.

34
00:02:36,830 --> 00:02:41,190
If you're curious to read more I would suggest reading up in the Facebook docs on rafts.

35
00:02:41,450 --> 00:02:44,130
They have a good example in there that you can follow along with.

36
00:02:44,270 --> 00:02:48,080
Next let's improve our recipe app from the last section to include state.
