WEBVTT
1
00:00:00.330 --> 00:00:01.970
Get moving on to our Put rope.

2
00:00:02.130 --> 00:00:07.740
This is how we would update it to do let's say when you check off a do you click on it you're actually

3
00:00:07.740 --> 00:00:13.740
sending a request in our to do app it's generating AJAX call sending a request to then change the status

4
00:00:13.740 --> 00:00:16.830
or the completed from true to false or false to true.

5
00:00:17.190 --> 00:00:23.250
So it's the same path slash API slash dues slash than the PATH variable of that to do ID.

6
00:00:23.490 --> 00:00:28.760
But it's a put request so let's hop over here and define our router.

7
00:00:28.770 --> 00:00:31.050
Put.

8
00:00:31.160 --> 00:00:37.740
And then the path is slash colon to do Id add in our same request and response.

9
00:00:37.850 --> 00:00:44.490
Is actually started off with the rest of the send update route and save that.

10
00:00:44.710 --> 00:00:50.530
So to send a put request when I need to use postman again or I could use AJAX but I can't just go to

11
00:00:50.530 --> 00:00:51.360
it in my browser.

12
00:00:51.520 --> 00:00:51.880
OK.

13
00:00:51.910 --> 00:00:57.020
So I'm in postman and I'm just going to take one ID because I need some ID.

14
00:00:57.520 --> 00:01:02.440
Even though Actually truth be told right now because we're not actually updating anything I could just

15
00:01:02.440 --> 00:01:07.610
put jibberish like this after slash to do's and send it as a put.

16
00:01:07.720 --> 00:01:09.540
And that still triggers our route.

17
00:01:09.790 --> 00:01:15.640
As you can see here I get update REPP so it doesn't matter if I actually have a real ID afterward or

18
00:01:15.640 --> 00:01:16.180
not.

19
00:01:16.180 --> 00:01:17.450
It's treating it the same.

20
00:01:17.530 --> 00:01:21.300
But that's going to end now because we're now going to actually update something.

21
00:01:21.550 --> 00:01:23.010
So how are we going to do this.

22
00:01:23.020 --> 00:01:30.970
So the magic that we need is DVD not to do and there's a find one and update.

23
00:01:30.970 --> 00:01:35.870
So it used to be that you had to go find something based off of this idea and then update it.

24
00:01:35.910 --> 00:01:41.470
Mongoose now has find one and update and the first thing we need to pass in is an object which tells

25
00:01:41.470 --> 00:01:42.940
it how to find it.

26
00:01:42.940 --> 00:01:45.520
So we're finding it based off of underscore ID.

27
00:01:45.700 --> 00:01:51.340
And that's going to be request harams dot to do Id So using this.

28
00:01:51.370 --> 00:01:56.710
So whatever we send in that request will probably or it will look something like this one of those Mangu

29
00:01:56.890 --> 00:01:58.090
automatic IDs.

30
00:01:58.360 --> 00:01:59.400
So we're going to find it.

31
00:01:59.590 --> 00:02:01.990
But then we have the part where we actually update it.

32
00:02:01.990 --> 00:02:05.050
So after the object how are we going to update it.

33
00:02:05.050 --> 00:02:11.910
So this would look like I don't know a name is a walk dog but we're not going to hard code that in.

34
00:02:12.070 --> 00:02:18.840
We're going to use whatever's in the request body and then we'll add our dog then and here.

35
00:02:18.850 --> 00:02:28.350
I'm just going to put to do for now and we're going to read Jaison to do and then same with our catch.

36
00:02:28.640 --> 00:02:29.170
OK.

37
00:02:29.420 --> 00:02:32.500
So we should we get to go to restart the server.

38
00:02:32.650 --> 00:02:33.770
Let's go to postman.

39
00:02:34.070 --> 00:02:39.790
And I want to clear all my requests and I'm going to start by just requesting slash API slash to do's

40
00:02:40.130 --> 00:02:44.380
so I can just see what we have right now as it get.

41
00:02:44.560 --> 00:02:46.970
So I have a couple of duplicates.

42
00:02:46.990 --> 00:02:49.270
Let's take this one by bread.

43
00:02:49.390 --> 00:02:51.700
So I'm going to try and update it.

44
00:02:51.700 --> 00:02:55.640
So instead of buy bread it's going to say buy croissant.

45
00:02:55.660 --> 00:02:57.660
So here's my path.

46
00:02:57.730 --> 00:03:03.570
I need that I.D. and I need to send it as a put request and I need to give it data.

47
00:03:04.030 --> 00:03:15.060
So in body we don't care about mood can delete that but let's change the name to buy croissants and

48
00:03:15.060 --> 00:03:19.110
I send it and notice when I get back.

49
00:03:19.220 --> 00:03:21.010
It says Name is by Bread.

50
00:03:21.290 --> 00:03:22.600
Let's verify if that's true.

51
00:03:22.610 --> 00:03:24.850
Let's run our get request again from earlier.

52
00:03:25.740 --> 00:03:28.030
And you can see it actually says buy croissant.

53
00:03:28.320 --> 00:03:32.800
So it did update in the database but it responded with the old version.

54
00:03:32.880 --> 00:03:35.520
And that's just how this mongoose method works.

55
00:03:35.520 --> 00:03:40.580
It responds with by default at least the old data before of us updated.

56
00:03:40.650 --> 00:03:45.500
We can change that if we also pass in an option that says new.

57
00:03:45.720 --> 00:03:46.630
True.

58
00:03:47.160 --> 00:03:48.200
So true.

59
00:03:48.260 --> 00:03:49.500
It's just in the docs.

60
00:03:49.710 --> 00:03:55.620
What it will do is instead of sending or responding with the old version it will give you the updated

61
00:03:55.620 --> 00:03:56.180
version.

62
00:03:56.340 --> 00:03:57.780
So here to do.

63
00:03:57.870 --> 00:04:00.050
Is now going to be the new to do.

64
00:04:00.390 --> 00:04:07.650
So if we restart now go back to postman and I say I send the same request but this time instead of name

65
00:04:07.800 --> 00:04:12.580
by Cruzan let's say bake croissant.

66
00:04:12.700 --> 00:04:14.170
I don't know why I'm doing these caps.

67
00:04:14.320 --> 00:04:15.450
So I said that.

68
00:04:15.610 --> 00:04:19.970
Now you can see it's updated and I'm getting a new version that is updated.

69
00:04:20.200 --> 00:04:20.860
OK.

70
00:04:20.860 --> 00:04:23.460
So that's a wrap for the update route.

71
00:04:23.500 --> 00:04:26.700
All we have left now is to delete and then we'll refactor.
