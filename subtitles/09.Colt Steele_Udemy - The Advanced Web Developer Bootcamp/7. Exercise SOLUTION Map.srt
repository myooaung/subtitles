1
00:00:00,330 --> 00:00:01,320
Welcome back.

2
00:00:01,620 --> 00:00:05,520
In this video we're going to be going over solutions to the math exercises.

3
00:00:05,760 --> 00:00:08,990
The first function we need to implement is the double values function.

4
00:00:09,300 --> 00:00:14,550
So we're going to map over the array passed to the function and inside of that callback function return

5
00:00:14,640 --> 00:00:16,920
each value multiplied by two.

6
00:00:16,980 --> 00:00:20,890
We can store the result of this callback in a variable and then return it.

7
00:00:21,090 --> 00:00:26,160
Or we can just return the result of this function entirely to keep our code more concise.

8
00:00:26,160 --> 00:00:31,500
We'll just return the result of map directly for the next function Zao TIMES INDEX.

9
00:00:31,590 --> 00:00:37,070
We need to map over the array and return a new array with each value multiplied by the index it's at.

10
00:00:37,260 --> 00:00:42,180
So I'll return the result of mapping over this array and then inside of the callback function I'll accept

11
00:00:42,180 --> 00:00:45,950
the value and index and return the product of those two numbers.

12
00:00:46,140 --> 00:00:47,950
Break for the next function.

13
00:00:47,970 --> 00:00:48,940
Extract key.

14
00:00:49,020 --> 00:00:53,910
We need to iterate over an array of objects and return a new array of just a specific key.

15
00:00:54,150 --> 00:00:59,420
So our map over the array and then return each object at that specific key that I'm looking for.

16
00:00:59,670 --> 00:01:05,100
Notice here that we're using bracket notation to access a key instead of that notation because we need

17
00:01:05,100 --> 00:01:11,940
javascript to evaluate that variable and not look for a key with the name of key for the last function.

18
00:01:11,970 --> 00:01:16,920
We need to iterate over an array of objects and return a new array of the first and last properties

19
00:01:16,950 --> 00:01:23,070
concatenated together so our map over the array and return the first property on each object plus an

20
00:01:23,070 --> 00:01:27,260
empty string for whitespace and then the last property on the value object.

21
00:01:27,360 --> 00:01:28,260
Great.

22
00:01:28,560 --> 00:01:33,770
In the next video we'll take a look at another method filter for returning arrays of the same or smaller.

23
00:01:33,780 --> 00:01:34,960
Let's see if there.
