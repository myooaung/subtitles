WEBVTT
1
00:00:00.240 --> 00:00:02.860
So we left off with pretty good looking.

2
00:00:03.030 --> 00:00:09.030
And now it's time to add some information over here and that's going to be a component that we're going

3
00:00:09.030 --> 00:00:13.290
to call homepage before we have this component.

4
00:00:13.290 --> 00:00:16.160
We want to start thinking about our Wrath's.

5
00:00:16.370 --> 00:00:17.780
So where are those routes going to live.

6
00:00:18.060 --> 00:00:24.800
Well let's go make a new container we'll call this mean that Jesus and mintage yes is going to be responsible

7
00:00:25.160 --> 00:00:28.450
for our routing logic so inside.

8
00:00:28.590 --> 00:00:29.230
Yes.

9
00:00:29.260 --> 00:00:30.340
What are we gonna start doing here.

10
00:00:30.340 --> 00:00:36.950
Well once again we'll import re-act from re-act and this is going to be a statelets functional components

11
00:00:36.950 --> 00:00:42.970
so we don't need a structure component but it's also going to include some information from the store.

12
00:00:43.160 --> 00:00:45.150
So we're going to place it as a container as well.

13
00:00:45.440 --> 00:00:47.160
Let's import some things from re-act Robert.

14
00:00:47.330 --> 00:00:52.900
Will you switch route with router and redirect.

15
00:00:53.030 --> 00:00:57.380
We're gonna need all these to make sure that we're correctly passing prompts down to our components

16
00:00:57.380 --> 00:00:59.090
that can use the Riak router.

17
00:00:59.270 --> 00:01:05.600
And so that we can specify the current route that we're on as well as redirect when we need to.

18
00:01:05.610 --> 00:01:07.890
So what else are we going to need here nothing for now.

19
00:01:08.400 --> 00:01:10.120
We're going to bring in a lot more later.

20
00:01:10.620 --> 00:01:14.460
We're going to make a component called me and we're just going to get some props.

21
00:01:14.460 --> 00:01:23.300
It's going to then run a function is going to return a component so will do is simply just return a

22
00:01:23.300 --> 00:01:24.210
class of catena

23
00:01:27.250 --> 00:01:31.330
and inside of this class of container we're going to place our switch component.

24
00:01:31.700 --> 00:01:35.860
So which component is going to allow us to have multiple routes and if we want to add four or four logic

25
00:01:35.860 --> 00:01:39.580
we can easily do that inside us which we're going to have our first route.

26
00:01:40.120 --> 00:01:49.700
And this is simply going to be your route and exact path to slash what this means because that will

27
00:01:49.700 --> 00:01:57.480
only trigger when we're at that where slash and when we go here we want to make sure that we render

28
00:01:57.480 --> 00:02:00.650
a certain component What's the component that we want to render.

29
00:02:00.720 --> 00:02:03.080
It's going to be called home page.

30
00:02:03.420 --> 00:02:09.300
But before we just render that component we want to actually run a function and pass some props to that

31
00:02:09.300 --> 00:02:10.680
component.

32
00:02:11.370 --> 00:02:14.910
So we're going to pass along some props to the home page component.

33
00:02:15.030 --> 00:02:18.720
We haven't made this component yet so we're going to get some errors if we run this but let's first

34
00:02:18.850 --> 00:02:20.590
pass in all those props to your home page.

35
00:02:20.590 --> 00:02:23.640
This is going to be helpful so at the home page can route as well.

36
00:02:24.990 --> 00:02:27.150
So also make sure that our syntax is correct.

37
00:02:27.280 --> 00:02:29.740
Let's make sure that we close the rock component as well.

38
00:02:29.740 --> 00:02:31.090
The syntax is a little bit tricky.

39
00:02:31.090 --> 00:02:36.940
We're rendering a function which renders the home page component and we want to pass along any props

40
00:02:36.970 --> 00:02:39.560
from Riak router as well.

41
00:02:39.580 --> 00:02:42.460
So what prompts are we also going to get aside from re-act router props.

42
00:02:42.730 --> 00:02:45.260
Well let's explore it a default with router.

43
00:02:46.410 --> 00:02:52.500
This will allow us to actually get those props from the router to our component these components will

44
00:02:52.500 --> 00:02:56.000
be able to use the history object to redirect which we'll see and load it later.

45
00:02:56.780 --> 00:03:01.640
So let's export a default with router and before we do that with router lets make sure that we connect

46
00:03:01.640 --> 00:03:03.530
to the App Store as well.

47
00:03:03.800 --> 00:03:09.490
So we're going to import connect from re-act redux.

48
00:03:09.640 --> 00:03:11.150
What are we going to do inside of there.

49
00:03:11.410 --> 00:03:12.290
Well let's make sure.

50
00:03:12.310 --> 00:03:13.390
What are we going to do down here.

51
00:03:13.420 --> 00:03:18.490
Let's also make sure we have a mandate to props that's going to accept some kind of state and return

52
00:03:18.490 --> 00:03:24.110
an object and keys that we place here will be placed onto props.

53
00:03:24.220 --> 00:03:27.020
So let's go get information around the current user.

54
00:03:27.040 --> 00:03:31.510
So in prop's We'll have the current user which refers to everything on that current user in this day

55
00:03:31.930 --> 00:03:33.940
what are we going to be using this current user.

56
00:03:34.000 --> 00:03:41.590
We will in a little bit because a home page will either display a landing page or the timeline of messages.

57
00:03:41.650 --> 00:03:45.130
So we're going to need some safe from the current user to help determine that we're setting this up

58
00:03:45.130 --> 00:03:46.060
as a placeholder.

59
00:03:46.060 --> 00:03:49.750
We're going to use this in a little bit but it's important to think about so that if we're placing this

60
00:03:49.750 --> 00:03:53.400
component inside of our containers folder we actually do connect it to the redux.

61
00:03:53.680 --> 00:03:55.260
We find that we don't need that state.

62
00:03:55.300 --> 00:04:00.320
We can always move it to our components folder so we're going export default with router.

63
00:04:00.530 --> 00:04:05.450
We're then going to wrap this with the connect function and inside we're going to see the props and

64
00:04:05.450 --> 00:04:10.760
we don't have anything in that dispatched profiteroles that that is now and then was passed in our main

65
00:04:10.760 --> 00:04:17.680
component so we'll call our main component once we connected with the redux store.

66
00:04:17.980 --> 00:04:20.050
So now we're using a component called home page that we don't have.

67
00:04:20.050 --> 00:04:26.450
So let's go make sure we import one page from well this component isn't going to have too much redux

68
00:04:26.470 --> 00:04:27.660
the.

69
00:04:27.870 --> 00:04:29.840
So it doesn't need to connect to our next store.

70
00:04:29.880 --> 00:04:37.640
So it's going to be our first component that I-Slash components slash homepage our home page is simply

71
00:04:38.000 --> 00:04:41.860
a picture of the server that will say sign out or sign in.

72
00:04:42.290 --> 00:04:47.210
And now we want to make sure that when we go to the flash we go to the Ruga we render the whole page

73
00:04:47.210 --> 00:04:47.770
complete.

74
00:04:47.960 --> 00:04:49.540
I'm working on it in the next section.
