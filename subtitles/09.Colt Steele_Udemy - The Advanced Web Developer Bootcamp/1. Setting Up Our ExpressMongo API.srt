1
00:00:00,210 --> 00:00:00,570
All right.

2
00:00:00,570 --> 00:00:01,390
Welcome back.

3
00:00:01,390 --> 00:00:06,810
So next up we're going to focus on building a complete application using react on the front end with

4
00:00:06,900 --> 00:00:10,130
a node slash express slash Mungo Back-End.

5
00:00:10,320 --> 00:00:15,070
So a full stack app or starting simple just our classic to do list.

6
00:00:15,090 --> 00:00:17,430
I know it's not the most exciting thing ever.

7
00:00:17,430 --> 00:00:21,240
However earlier in the course we already built a To Do List API.

8
00:00:21,480 --> 00:00:26,490
So the first thing I want to say is that if you don't know how to build an API with Express and Mongo

9
00:00:26,490 --> 00:00:32,910
and Noad are ready then go check out sections 13 and 14 of course if you want to build the full stack

10
00:00:32,980 --> 00:00:34,230
reactor application.

11
00:00:34,350 --> 00:00:39,390
Now if you don't care about the API and you just want to focus on the re-act side of things that's fine.

12
00:00:39,390 --> 00:00:43,970
I have a repository that you can clone get it on your computer and just get it up and running.

13
00:00:44,010 --> 00:00:45,510
And that's what we're going to do in this video.

14
00:00:45,570 --> 00:00:50,040
But before we get there let's just talk about conceptually how are Apple work.

15
00:00:50,040 --> 00:00:52,820
So our app is actually going to be two different applications.

16
00:00:52,860 --> 00:00:54,870
We're going to have a re-act application.

17
00:00:54,930 --> 00:01:00,330
We're going to run create re-act up they'll make us a new server new app for our front end then we're

18
00:01:00,330 --> 00:01:04,570
going to have the node API the back end which if you haven't built it yet.

19
00:01:04,590 --> 00:01:09,230
And Section 13:14 you're just going to clone it and we'll have that running its own servers.

20
00:01:09,240 --> 00:01:14,970
So two separate servers talking to another as well as the Mago DP server which we don't really have

21
00:01:14,970 --> 00:01:17,710
to do much with because their API takes care of that at this point.

22
00:01:17,790 --> 00:01:22,740
But it's good to know that our re-act front end is in communication with the node API which is in communication

23
00:01:22,740 --> 00:01:24,110
with the Monga database.

24
00:01:24,180 --> 00:01:24,710
OK.

25
00:01:24,840 --> 00:01:30,320
So the first thing we'll do is hop over to cloud 9 I'm in our workspace here.

26
00:01:30,330 --> 00:01:33,430
I'm going to make a new directory where I'm just going to put everything.

27
00:01:34,140 --> 00:01:35,780
So let's make a new directory.

28
00:01:35,790 --> 00:01:45,510
I'm just going to call it full stack to do app CD and into that and now I'm going to clone my existing

29
00:01:45,690 --> 00:01:47,060
to do list API.

30
00:01:47,130 --> 00:01:49,000
I already have it here this is where I built it.

31
00:01:49,140 --> 00:01:54,920
But I also want to leave this here so that students who are in Section 13 and 14 aren't super confused.

32
00:01:55,020 --> 00:01:59,270
So I'm going to keep that there and just clone it into this full stack to do app.

33
00:01:59,280 --> 00:02:00,720
All right so here's the API.

34
00:02:00,780 --> 00:02:01,580
On get home.

35
00:02:01,770 --> 00:02:05,690
So we're just going to copy this you Arel and go over back to cloud 9.

36
00:02:05,910 --> 00:02:10,640
And I'm just going to run get clone and clone my API.

37
00:02:10,890 --> 00:02:16,440
I should mention that if you built the API in Section 14 and you don't want to clone it again you want

38
00:02:16,440 --> 00:02:17,630
to use your own version.

39
00:02:17,700 --> 00:02:18,890
That's totally fine.

40
00:02:18,930 --> 00:02:21,180
Just don't do what I'm doing right now.

41
00:02:21,240 --> 00:02:26,290
And then in the next video once we run create re-act app you're connected to your existing API.

42
00:02:26,550 --> 00:02:28,680
Otherwise go ahead and run clone.

43
00:02:28,680 --> 00:02:32,990
It will take a moment and we end up with this two API folder.

44
00:02:33,180 --> 00:02:37,830
So this contains your API server and in the next video we're going to run create re-act up and we'll

45
00:02:37,830 --> 00:02:43,260
have a second folder inside of this full stack to do app and that will be our front end server that's

46
00:02:43,260 --> 00:02:45,180
going to communicate with our back and server.

47
00:02:45,270 --> 00:02:45,520
OK.

48
00:02:45,540 --> 00:02:48,470
So let's make sure we can get it running.

49
00:02:48,660 --> 00:02:54,300
This will likely be review but just in case we're going to run NPM install in that directory might take

50
00:02:54,300 --> 00:03:01,640
a moment to go grab all the dependencies things like mongoose and express and all of their various dependencies.

51
00:03:01,730 --> 00:03:03,250
OK there we go.

52
00:03:03,300 --> 00:03:07,410
Now if we try and run it right away depending on what you've been doing in your workspace or on your

53
00:03:07,410 --> 00:03:09,380
computer we might get an error.

54
00:03:09,450 --> 00:03:13,290
And that's because we depend on having the Mongo database running.

55
00:03:13,470 --> 00:03:18,570
And we may not have that running at the moment so I'm going to deliberately encounter that error.

56
00:03:18,570 --> 00:03:24,800
So if I try and start it with node indexed Yes that's the name the name of the main file in our app.

57
00:03:25,050 --> 00:03:27,000
You'll see we get a problem here.

58
00:03:27,000 --> 00:03:34,230
It tries to start it up but then it says in this mongoose file there's an error unhandled error it says

59
00:03:34,470 --> 00:03:36,000
first connection.

60
00:03:36,090 --> 00:03:38,640
Connection refused to Mungo's server.

61
00:03:38,640 --> 00:03:41,790
And that happens when our Mungo's server isn't running.

62
00:03:42,030 --> 00:03:47,640
So I'm going to go ahead and open up a new terminal just says either review.

63
00:03:47,850 --> 00:03:52,800
If you already have Mongo installed or if you don't have it installed I recommend that you check out

64
00:03:52,800 --> 00:03:58,680
Section 13 where I talk about how to install it so that video already exists in Section 13.

65
00:03:58,740 --> 00:04:02,620
You'll see how to install mongoose and once it's installed we just need to start it up.

66
00:04:02,760 --> 00:04:04,440
So I have this Man-God.

67
00:04:04,560 --> 00:04:05,880
I'm going to run mangu.

68
00:04:05,880 --> 00:04:07,330
D whatever.

69
00:04:07,800 --> 00:04:08,690
There you go.

70
00:04:09,270 --> 00:04:10,680
And it starts up a server.

71
00:04:10,680 --> 00:04:11,540
This is our database.

72
00:04:11,550 --> 00:04:14,370
It's listening now waiting for requests to come in.

73
00:04:14,400 --> 00:04:19,760
So now we won't get a connection refused error so this time if I try.

74
00:04:19,950 --> 00:04:20,320
Nope.

75
00:04:20,340 --> 00:04:21,790
Not NPM install again.

76
00:04:22,080 --> 00:04:25,650
If I try Knode indexed.

77
00:04:25,740 --> 00:04:30,650
Yes we don't get that connection refused error anymore.

78
00:04:30,750 --> 00:04:36,600
Everything is looking good and if I actually visit my application right now I'll close these down and

79
00:04:36,600 --> 00:04:40,290
just reopen it show preview preview running application.

80
00:04:40,350 --> 00:04:41,570
I don't like it over here.

81
00:04:41,610 --> 00:04:46,730
Personally I'll open a new tab and I have some existing things in the database.

82
00:04:46,890 --> 00:04:49,270
You may not if you just clone this.

83
00:04:49,560 --> 00:04:52,050
So go ahead and we can add a couple of things in.

84
00:04:52,050 --> 00:04:58,600
Just to end this video so let's do walk the dogs OK.

85
00:04:58,770 --> 00:05:02,560
So as long as we have some data in there that's all that really matters in case we're totally lost.

86
00:05:02,560 --> 00:05:06,520
I definitely recommend you check out Section 13 14 where we build the API.

87
00:05:06,840 --> 00:05:09,290
If you don't want to do that you need to clone it.

88
00:05:09,540 --> 00:05:12,430
But then you also need to make sure you have Mongo deeply installed.

89
00:05:12,450 --> 00:05:18,030
And so for that you're going to at least need to check out part of Section 4 or Section 13 where I discuss

90
00:05:18,030 --> 00:05:19,310
it anyway.

91
00:05:19,410 --> 00:05:20,520
We get Mongols running.

92
00:05:20,520 --> 00:05:23,890
We get this back and server running and now we're just going to leave it going.

93
00:05:24,210 --> 00:05:26,000
And we're basically not going to touch it.

94
00:05:26,280 --> 00:05:30,750
There's one small change we do need to make to get it to play nicely with 3.x but otherwise we're not

95
00:05:30,750 --> 00:05:32,060
changing anything.

96
00:05:32,100 --> 00:05:35,910
We're going to leave it running and we're going to focus on the front end server or re-act app that's

97
00:05:35,910 --> 00:05:37,120
going to talk to this.

98
00:05:37,200 --> 00:05:40,630
And before I let you go the last thing I'll cover are the API endpoints.

99
00:05:40,740 --> 00:05:44,370
So if you didn't go through Section 13 14 and now I'm saying that a lot.

100
00:05:44,370 --> 00:05:46,160
This is how our API works.

101
00:05:46,170 --> 00:05:48,180
So there are four main endpoints.

102
00:05:48,270 --> 00:05:54,100
They all start with the slash API slash to do's and there's the four main crud functionality.

103
00:05:54,150 --> 00:05:56,160
So things like retrieving all to do.

104
00:05:56,370 --> 00:05:59,970
So that's what we're going to start with we're going to retrieve all Tutu's in the database when our

105
00:05:59,970 --> 00:06:01,350
react app loads.

106
00:06:01,530 --> 00:06:03,960
Then we have a create app or create route.

107
00:06:03,960 --> 00:06:09,390
So if we send a post request to slash API slash to deuse along with some to data it will be inserted

108
00:06:09,390 --> 00:06:10,520
into the database.

109
00:06:10,530 --> 00:06:16,770
We can also delete and update particular to use using an ID in that path.

110
00:06:16,770 --> 00:06:17,660
So we'll get to those.

111
00:06:17,760 --> 00:06:21,050
We're going to have all four features implemented in our re-act up.

112
00:06:21,150 --> 00:06:24,400
But I recommend that you explore this a bit play around with the API.

113
00:06:24,410 --> 00:06:29,260
If you didn't go through second and 14 you could do things like this.

114
00:06:29,410 --> 00:06:33,080
Let's go look at our API slash API slash to use.

115
00:06:33,240 --> 00:06:33,950
Here we go.

116
00:06:34,070 --> 00:06:36,090
And I should point out there's an existing front end.

117
00:06:36,240 --> 00:06:37,280
You can see it here.

118
00:06:37,380 --> 00:06:39,350
This part is not the API.

119
00:06:39,420 --> 00:06:44,490
This is what we built in Section 14 a single page but it doesn't use react.

120
00:06:44,490 --> 00:06:48,100
So again our endpoints all start with Flash API slushed to do it.

121
00:06:48,240 --> 00:06:54,030
So we'll be making requests to this you are all to this point and we're basically going to ignore this

122
00:06:54,030 --> 00:06:58,170
part of the app and we're going to build our own new front it using react.

123
00:06:58,230 --> 00:06:59,690
Okay that's enough.

124
00:06:59,700 --> 00:07:02,120
We've got our app running at our back and running at least.

125
00:07:02,130 --> 00:07:04,040
Now let's focus on creating the re-act.
