WEBVTT
1
00:00:00.540 --> 00:00:05.250
Her rate it's time to start working on our front end of the application before we do that.

2
00:00:05.250 --> 00:00:07.640
I'm just going to quickly get repository.

3
00:00:07.800 --> 00:00:11.350
I'm going to add and commit all the changes that we've made so far.

4
00:00:11.550 --> 00:00:15.770
This is mostly just for section and then I go through so that we can have good stopping points.

5
00:00:15.780 --> 00:00:21.830
And so I can easily share this code with you for each section so you can just call this initial what

6
00:00:21.830 --> 00:00:26.950
we're going to do now is go into our client folder and if you look there's nothing here.

7
00:00:27.380 --> 00:00:32.930
We're actually going to do is instead of working in this client folder we're going to remove it because

8
00:00:32.930 --> 00:00:37.940
we're going to use create react and create re-act app is going to make a folder for us.

9
00:00:37.940 --> 00:00:40.050
So we'll call that order client.

10
00:00:40.100 --> 00:00:45.300
This is going to make a new folder for us called the warbler client great looks like we've created a

11
00:00:45.330 --> 00:00:47.930
folder with CD into Wadler Klein.

12
00:00:48.530 --> 00:00:53.430
And here I'll make sure to add some instructions as well to get you up and running with Creevey at that.

13
00:00:53.430 --> 00:00:55.060
So what do we want to do right now.

14
00:00:55.290 --> 00:00:58.540
Let's go take a look at all this code and Visual Studio code.

15
00:00:58.770 --> 00:01:01.610
And let's go to our package HAISONG here.

16
00:01:01.650 --> 00:01:05.560
We're going to place our dependencies for our application in our package.

17
00:01:05.550 --> 00:01:07.860
Jason there's one more here that we really want to add.

18
00:01:08.100 --> 00:01:16.310
And that's going to be a proxy and what we're going to do is proxy HDTV colon slash slash Bigelow's

19
00:01:16.470 --> 00:01:17.500
1881.

20
00:01:17.880 --> 00:01:19.280
This is simply going to make our life easier.

21
00:01:19.290 --> 00:01:21.220
We start making progress.

22
00:01:21.330 --> 00:01:27.660
What it will do is use localhost 881 as the default packet only but as an Heroku things will be a bit

23
00:01:27.660 --> 00:01:28.480
different.

24
00:01:28.830 --> 00:01:33.390
We're going to make our life easier when dealing with Ajax requests and the same origin policy that

25
00:01:33.390 --> 00:01:34.560
we spoke about earlier.

26
00:01:34.830 --> 00:01:37.510
So it's got to the terminal and install some important dependencies.

27
00:01:37.590 --> 00:01:41.070
We're going to need CEOs to make our Ajax requests.

28
00:01:41.070 --> 00:01:44.560
We could use fecche if we want but I find actually a little bit easier to work with.

29
00:01:44.580 --> 00:01:49.080
We're going to also install a module called double-CD code to decode the middle part of those tokens

30
00:01:49.080 --> 00:01:55.400
or the payload Renault-Nissan moment in time hours and the moment.

31
00:01:56.580 --> 00:02:01.420
So that can create components from re-act moment is going to be used again in our timeline to display

32
00:02:01.420 --> 00:02:03.450
a nice time helper's.

33
00:02:03.620 --> 00:02:10.700
We're also going Apria redux re-act router Dom and we want to make sure we use redux as well and redux

34
00:02:10.780 --> 00:02:13.290
and to manage asynchronous requests.

35
00:02:13.370 --> 00:02:18.650
These are all our essential dependencies and if we miss one that's OK we'll go through each one as we

36
00:02:18.650 --> 00:02:19.690
see them in action.

37
00:02:21.300 --> 00:02:25.710
Now that that's finished let's go back to Visual Studio code and then start making an important folder

38
00:02:25.710 --> 00:02:27.260
structure for this application.

39
00:02:27.600 --> 00:02:31.660
Our goal is really to build something that scales as our application scales.

40
00:02:31.680 --> 00:02:39.180
So inside of our SIRC folder we're going to create a couple of folders on a folder for my components.

41
00:02:39.280 --> 00:02:41.520
These are going to be really components.

42
00:02:41.630 --> 00:02:44.080
Then we get another folder for containers.

43
00:02:44.520 --> 00:02:49.880
And these are also components but ones that are connected to our redux the we're then going to make

44
00:02:49.880 --> 00:02:54.670
a folder for higher order components we call these Hock's.

45
00:02:54.890 --> 00:02:59.230
We'll explain what hacks are in quite a bit of detail later on when we deal with authentication.

46
00:03:00.500 --> 00:03:03.110
Let's also make a folder for images.

47
00:03:03.350 --> 00:03:04.500
We're going to add a couple of those.

48
00:03:04.610 --> 00:03:11.430
And I'll make a folder for services you may be wondering what services are inside of services.

49
00:03:11.430 --> 00:03:15.470
We're going to place logic that relates to communicating with our API.

50
00:03:15.870 --> 00:03:19.860
We're going to build a very generic function the losses to communicate with our API with a tremendous

51
00:03:19.860 --> 00:03:21.130
amount of flexibility.

52
00:03:21.180 --> 00:03:23.030
We'll see that know a little bit.

53
00:03:23.040 --> 00:03:24.990
Finally let's make one more folder.

54
00:03:24.990 --> 00:03:27.010
This is going to be for our store.

55
00:03:27.160 --> 00:03:33.440
We're going to place all of our redux related logic actions reducers action creators and so on.

56
00:03:33.780 --> 00:03:35.000
Let's look at a couple of files.

57
00:03:35.040 --> 00:03:39.840
We don't need that after the SS Let's leave that test files.

58
00:03:39.840 --> 00:03:44.440
Well we don't need that and let's good to that logo e.g..

59
00:03:44.860 --> 00:03:49.000
So really just doing a little bit of cleanup to make sure our application works the way we want it to

60
00:03:49.460 --> 00:03:53.650
and we're going to move this Abdur as component into containers.

61
00:03:57.530 --> 00:04:00.610
And maybe wondering why or actually as is going to be side of our containers.

62
00:04:00.800 --> 00:04:05.750
Well this is going to be the component that connects to the redux or using that special provider component

63
00:04:05.840 --> 00:04:07.950
that will import in a little bit.

64
00:04:07.970 --> 00:04:11.940
We're also going to make sure that our index that has is there that looks good and our index at DSS

65
00:04:11.990 --> 00:04:12.590
is here.

66
00:04:12.620 --> 00:04:16.790
We'll add a little bit of the s s later but for now this is the basic folder structure that we want

67
00:04:18.230 --> 00:04:19.630
inside of our store.

68
00:04:19.790 --> 00:04:22.400
We're going to need to start adding some pretty essential files.

69
00:04:23.220 --> 00:04:33.450
So let's add a fuller for producers will also have a folder for our actions and we're going to make

70
00:04:33.460 --> 00:04:39.780
one file as well for action types these will just be some constants that will import into other files

71
00:04:40.580 --> 00:04:41.460
inside of our store.

72
00:04:41.460 --> 00:04:46.970
We're also going have a file called indexed digests this file is going to be important for configuring

73
00:04:46.990 --> 00:04:47.680
the store.

74
00:04:47.750 --> 00:04:50.600
So we have actions we have reducers of our action types.

75
00:04:50.650 --> 00:04:56.180
We're going to do in the next section is start from here and set up our redux or think about some actions

76
00:04:56.180 --> 00:04:59.960
and reducers that we need before we start focusing on the components and the visuals.

77
00:05:00.080 --> 00:05:03.460
Let's make sure we set up our state and connect to our backed.
