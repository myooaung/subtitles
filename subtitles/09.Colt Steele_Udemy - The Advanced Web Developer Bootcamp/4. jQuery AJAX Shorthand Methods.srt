1
00:00:00,150 --> 00:00:00,590
All right.

2
00:00:00,630 --> 00:00:03,810
So we've seen how the base dollar signs that Ajax method works.

3
00:00:03,930 --> 00:00:09,650
We're now going to focus on three shorthand methods which allow us to make common types request easier.

4
00:00:10,050 --> 00:00:13,030
So those three are get post and get Jaison.

5
00:00:13,380 --> 00:00:17,020
So I have a code Penick created and it has three buttons in it.

6
00:00:17,460 --> 00:00:19,830
One that has an idea of button.

7
00:00:19,840 --> 00:00:20,850
Another post button.

8
00:00:20,880 --> 00:00:23,040
And the third get Jason button.

9
00:00:23,040 --> 00:00:27,790
So as we click each one I want to fire a respective Jay query method.

10
00:00:27,790 --> 00:00:31,670
So in this case the get method to send the GET request.

11
00:00:32,010 --> 00:00:34,810
So the Duxford J queried don't get any time.

12
00:00:34,830 --> 00:00:40,440
By the way if you see query don't get it's the same as dollar sign at dollar sign it's just a shorter

13
00:00:40,470 --> 00:00:45,310
alias for it to find these Darcs it's under Ajax shorthand method.

14
00:00:45,510 --> 00:00:49,090
And then Jay querido get is the one we're focusing on.

15
00:00:49,140 --> 00:00:54,990
So if you look at the syntax the first thing you'll see is repasts in you are l that's the only mandatory

16
00:00:54,990 --> 00:00:56,090
thing to pass in.

17
00:00:56,250 --> 00:01:01,170
And then we can optionally provide data and a couple other things.

18
00:01:01,170 --> 00:01:07,080
If we look at an example further down scroll to the bottom this is it to send a simple get request to

19
00:01:07,080 --> 00:01:08,010
a row.

20
00:01:08,400 --> 00:01:10,720
This won't do anything with the results that are returned.

21
00:01:10,830 --> 00:01:12,370
But this is how we send it.

22
00:01:12,390 --> 00:01:17,710
Now if we want to do something afterwards this is where we come in with our DOT done and or fail if

23
00:01:17,710 --> 00:01:18,980
we want to handle errors.

24
00:01:19,200 --> 00:01:23,270
So I'm going to make a get request to have API you IRL.

25
00:01:23,670 --> 00:01:26,640
So it's just a matter of dollar sign get.

26
00:01:26,760 --> 00:01:28,130
And then the are.

27
00:01:28,470 --> 00:01:30,080
So that's the euro I'm going to use.

28
00:01:30,090 --> 00:01:36,180
Feel free to use any other you are l that will allow a valid get request and then we'll just add are

29
00:01:36,440 --> 00:01:42,180
done and all we'll do is print the data.

30
00:01:42,180 --> 00:01:48,660
So inside this quick handler forget button I click it is fires dollar signs get which behind the scenes

31
00:01:48,930 --> 00:01:50,910
is doing the same thing as a dollar sign.

32
00:01:50,940 --> 00:01:55,380
Ajax or we set method to get.

33
00:01:55,380 --> 00:01:58,850
And then you Arel to this you are real here.

34
00:01:58,850 --> 00:02:00,250
So it's a shortcut.

35
00:02:00,850 --> 00:02:01,150
OK.

36
00:02:01,170 --> 00:02:02,340
Let's make sure it works.

37
00:02:02,400 --> 00:02:04,670
Save quick get.

38
00:02:04,930 --> 00:02:05,550
And there we go.

39
00:02:05,550 --> 00:02:06,750
We get our data back.

40
00:02:06,750 --> 00:02:13,090
Remember the way that this works I didn't specify this Jason but it inferred that it made a guess.

41
00:02:13,230 --> 00:02:19,340
If you want to be explicit You can see if we can provide data type but we actually specify it as a string.

42
00:02:19,590 --> 00:02:26,210
So no longer as an object with key value pairs we just pass in Jason cool so we can also add in our

43
00:02:26,430 --> 00:02:27,120
fail.

44
00:02:27,150 --> 00:02:28,110
We wanted to.

45
00:02:28,160 --> 00:02:30,050
I want to do this for all of them.

46
00:02:30,390 --> 00:02:32,870
Let's just to fail.

47
00:02:33,360 --> 00:02:38,400
Cancel that log error for now that's it.

48
00:02:38,400 --> 00:02:41,010
So dollars and I get again it's just shorthand.

49
00:02:41,010 --> 00:02:43,860
So you don't have to write that entire AJAX call.

50
00:02:43,860 --> 00:02:49,890
Next up we have post which works in the exact same way except it sends a post request.

51
00:02:49,890 --> 00:02:56,410
So when I click the post button nothing happens right now but I'd like to do is send a signed up post.

52
00:02:56,550 --> 00:02:57,930
We specify a URL.

53
00:02:58,170 --> 00:03:04,610
So I'm just going to put any you all that probably won't except a post request I'll just do it.

54
00:03:04,680 --> 00:03:08,810
Cats are cool and so are dogs.

55
00:03:08,860 --> 00:03:10,170
Dot com.

56
00:03:10,440 --> 00:03:17,090
And after that we'll do our dun function data.

57
00:03:17,100 --> 00:03:18,240
We're not going to get anything back.

58
00:03:18,240 --> 00:03:23,440
Most likely that log.

59
00:03:24,000 --> 00:03:26,100
And then we'll also have our fail

60
00:03:29,280 --> 00:03:30,840
and end here.

61
00:03:31,880 --> 00:03:34,860
We're just going to cancel that log error.

62
00:03:35,680 --> 00:03:39,500
Ok so all we care about is that this is actually sending a post request.

63
00:03:39,530 --> 00:03:45,860
So I'm going to open up my console here click Post get an error for a 4 triggers our error.

64
00:03:45,860 --> 00:03:53,240
But if we go to our network tab can see it attempts to send to get more information a post request.

65
00:03:53,240 --> 00:03:57,920
And if you look at the docs if you want to provide data that is the second parameter.

66
00:03:57,980 --> 00:04:04,320
So after the you are l we can option the optional specify some data to send as you can see here.

67
00:04:05,190 --> 00:04:09,930
So let me show you that we can do it this way or we can make a variable.

68
00:04:09,930 --> 00:04:10,500
I'll do that.

69
00:04:10,500 --> 00:04:23,370
So our data equals make it an object and I'll just say name is Charlie and I don't know city is Florance

70
00:04:23,520 --> 00:04:24,680
like that.

71
00:04:24,930 --> 00:04:28,610
And then I can just pass in that data object.

72
00:04:28,990 --> 00:04:37,030
Now if we look and inspect this go to our network tab ex-aide jars center post scroll way down we can

73
00:04:37,030 --> 00:04:39,110
see our data is in here as well.

74
00:04:39,190 --> 00:04:43,670
It's equivalent to go back to the docs doing this up here.

75
00:04:43,690 --> 00:04:49,690
Where would you dollar sign that Ajax type post or method is post then providing the URL and then providing

76
00:04:49,690 --> 00:04:50,590
the data.

77
00:04:51,100 --> 00:04:54,690
But instead we can do it with a much shorter syntax.

78
00:04:54,790 --> 00:04:56,850
Then finally get Jaison.

79
00:04:57,100 --> 00:05:02,450
So get Jaison is a nice shortcut that automatically send to get requests to the euro.

80
00:05:02,590 --> 00:05:07,870
But then also parses it as Jaison it doesn't have to make an intelligent guess because by using get

81
00:05:07,870 --> 00:05:12,340
Jaison we're specifying this is 100 percent based on that you're getting.

82
00:05:12,340 --> 00:05:17,440
We don't have to specify the data type it just knows because we're using get Jason and it parses it

83
00:05:17,440 --> 00:05:18,250
for us.

84
00:05:18,250 --> 00:05:25,690
So it's equivalent to this specifying the euro and the data type as well as the method or type as gets

85
00:05:25,870 --> 00:05:26,680
which is the default.

86
00:05:26,680 --> 00:05:29,400
So they don't put it here but it's the same thing.

87
00:05:29,830 --> 00:05:39,070
So let me show you that we can use the same API you are here and I have this get Jason button when we

88
00:05:39,070 --> 00:05:39,640
click it.

89
00:05:39,820 --> 00:05:40,390
I'm going to do.

90
00:05:40,390 --> 00:05:45,910
Dollar Signs get Jason and pass it in RL and that's it.

91
00:05:45,910 --> 00:05:47,880
Done and fail.

92
00:05:48,010 --> 00:05:55,810
So for Don I'll just do the same to that log that data for fail.

93
00:05:55,810 --> 00:05:57,310
I'll just cancel that log.

94
00:05:57,310 --> 00:05:57,940
There's a problem

95
00:06:01,070 --> 00:06:02,150
perfect.

96
00:06:03,240 --> 00:06:05,040
So nice and easy syntax.

97
00:06:05,050 --> 00:06:07,120
Make sure it works quick get Jason.

98
00:06:07,160 --> 00:06:07,890
And there we go.

99
00:06:08,050 --> 00:06:13,090
I get my API data already parsed back as Jaison so very simple.

100
00:06:13,090 --> 00:06:18,580
We don't have to write out the entire dot Ajax or dollar sign but Ajax and specify all those different

101
00:06:18,610 --> 00:06:20,590
parameters or options.

102
00:06:20,590 --> 00:06:22,120
So three shortcut methods.

103
00:06:22,240 --> 00:06:27,130
But as I told you earlier they are all in the source code and you can see them here.

104
00:06:27,340 --> 00:06:32,210
If we scroll down I'm on let's see what is this page.

105
00:06:32,270 --> 00:06:40,510
Jay query source Ajax slash or slash Ajax dodgiest scroll way down there where they actually make this

106
00:06:40,510 --> 00:06:41,890
method just kind of interesting.

107
00:06:42,190 --> 00:06:49,480
So they make them get imposts together so they have this array for each string get and post make a method

108
00:06:49,510 --> 00:06:55,000
called whatever the string is so make a method call get and make a method called post and all that it

109
00:06:55,000 --> 00:07:04,390
does is call J querido Ajax and it sets you around to the Euro type to be the method which is get and

110
00:07:04,390 --> 00:07:10,670
post so as you can see it defines these automatically or procedurally using this each.

111
00:07:10,890 --> 00:07:16,990
So then we end up with get in a post method and then further up we have get Jaison and although that

112
00:07:16,990 --> 00:07:18,230
does is it returned J.

113
00:07:18,240 --> 00:07:19,690
Query does get.

114
00:07:19,960 --> 00:07:22,610
And it specifies that the data type is Jason.

115
00:07:22,810 --> 00:07:30,190
So Jason is built on top of get and get and post are built on top of the base Ajax base.

116
00:07:30,190 --> 00:07:33,900
Ajax is built on top of the base SH are all right.

117
00:07:33,910 --> 00:07:35,040
So that wraps that up.

118
00:07:35,230 --> 00:07:37,740
Hopefully you feel OK but using these methods.

119
00:07:37,750 --> 00:07:40,510
Personally I use JS on all the time.

120
00:07:40,630 --> 00:07:42,810
It's probably the most commonly used for them.

121
00:07:42,850 --> 00:07:47,140
Just because it's the simplest and the most common use case but it's good to know that these others

122
00:07:47,170 --> 00:07:47,720
exist.
