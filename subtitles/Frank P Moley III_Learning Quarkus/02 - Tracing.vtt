WEBVTT
1
00:00:00.007 --> 00:00:02.007
- [Instructor] In a microservices architecture,

2
00:00:02.007 --> 00:00:06.001
especially in a containerized infrastructure,

3
00:00:06.001 --> 00:00:08.007
tracing service calls through a web service stack

4
00:00:08.007 --> 00:00:12.008
is critical to being able to maintain operational integrity

5
00:00:12.008 --> 00:00:16.007
of a system as call volume increases.

6
00:00:16.007 --> 00:00:20.003
Let's take a look at tracing in Quarkus.

7
00:00:20.003 --> 00:00:23.003
Now, for this one, we need to actually start Jaeger

8
00:00:23.003 --> 00:00:26.004
and Jaeger is a system that handles tracing.

9
00:00:26.004 --> 00:00:28.002
It's an open source tool.

10
00:00:28.002 --> 00:00:31.001
And once again, I have provided you a script for this

11
00:00:31.001 --> 00:00:34.007
in the bin directory of the exercise files.

12
00:00:34.007 --> 00:00:40.000
So we are going to start_jaeger.

13
00:00:40.000 --> 00:00:41.008
Now, if you don't have Docker and you don't want to run it,

14
00:00:41.008 --> 00:00:43.008
of course, you can run Jaeger locally

15
00:00:43.008 --> 00:00:47.002
but I provided the Docker script for a Linux system

16
00:00:47.002 --> 00:00:50.002
that you can use if you're able to.

17
00:00:50.002 --> 00:00:52.005
So now let's jump into the IDE

18
00:00:52.005 --> 00:00:55.005
and we're going to once again go to the room-service

19
00:00:55.005 --> 00:00:58.003
and then the pom file

20
00:00:58.003 --> 00:01:04.003
and we are going to add another dependency

21
00:01:04.003 --> 00:01:12.001
from smallrye-opentracing.

22
00:01:12.001 --> 00:01:14.004
And this one comes from io.quarkus.

23
00:01:14.004 --> 00:01:19.004
We'll allow Maven to do its thing.

24
00:01:19.004 --> 00:01:20.003
And while it's running,

25
00:01:20.003 --> 00:01:24.004
I'm going to open up src, main, resources,

26
00:01:24.004 --> 00:01:27.007
application.properties.

27
00:01:27.007 --> 00:01:31.001
And we need to provide a few values here.

28
00:01:31.001 --> 00:01:34.008
So quarkus.jaeger.service-name

29
00:01:34.008 --> 00:01:39.005
and the service-name that we are going to use is roomservice.

30
00:01:39.005 --> 00:01:46.004
And quarkus.jaeger.sampler-type

31
00:01:46.004 --> 00:01:57.001
and we're going to do a constant sampler

32
00:01:57.001 --> 00:02:00.002
and the sampler-param that we're going to use is one.

33
00:02:00.002 --> 00:02:06.001
So we want it to constantly run.

34
00:02:06.001 --> 00:02:07.004
Now, the last thing that we need to do

35
00:02:07.004 --> 00:02:12.006
is we're going to put this into our console messages.

36
00:02:12.006 --> 00:02:15.001
And you'll see what this looks like.

37
00:02:15.001 --> 00:02:16.008
So bear with me a minute here

38
00:02:16.008 --> 00:02:18.007
as we we type all of this out.

39
00:02:18.007 --> 00:02:33.006
So %d{HH:nn:ss| %-5p traceId

40
00:02:33.006 --> 00:02:42.008
equals %X{traceId,

41
00:02:42.008 --> 00:02:51.007
parentId equals %X{parentId

42
00:02:51.007 --> 00:02:55.002
and this parentId is how you get into nested calls.

43
00:02:55.002 --> 00:02:58.009
But we're not going to deal with that in this example.

44
00:02:58.009 --> 00:03:03.000
The next element is the spanId

45
00:03:03.000 --> 00:03:07.005
equals %X{spanId

46
00:03:07.005 --> 00:03:11.003
and again, that's used for distributed calls.

47
00:03:11.003 --> 00:03:18.005
Comma sampled equals %X

48
00:03:18.005 --> 00:03:27.009
{sampled space bracket

49
00:03:27.009 --> 00:03:32.008
%c{2.

50
00:03:32.008 --> 00:03:36.003
Close all that out.

51
00:03:36.003 --> 00:03:43.004
Space parentheses %t

52
00:03:43.004 --> 00:03:48.004
space %s%e

53
00:03:48.004 --> 00:03:50.002
and %n.

54
00:03:50.002 --> 00:03:52.000
And this is pretty common and this comes straight

55
00:03:52.000 --> 00:03:52.008
from the guide.

56
00:03:52.008 --> 00:03:55.008
This is a standard output that comes from the guide

57
00:03:55.008 --> 00:03:57.007
that you can use.

58
00:03:57.007 --> 00:04:00.002
So now we need to actually go add a log message

59
00:04:00.002 --> 00:04:01.006
so we can see it.

60
00:04:01.006 --> 00:04:08.001
So we're going to go into the RoomResource.

61
00:04:08.001 --> 00:04:16.003
And we are going to add a Logger

62
00:04:16.003 --> 00:04:23.002
of type private final static

63
00:04:23.002 --> 00:04:31.007
.getLogger RoomResource.class.

64
00:04:31.007 --> 00:04:46.002
And I'm simply going to put a LOG.info message.

65
00:04:46.002 --> 00:04:47.006
So that's all there is to it.

66
00:04:47.006 --> 00:04:50.000
Ideally would add this to every method

67
00:04:50.000 --> 00:04:52.005
and all of our call stack but that's okay.

68
00:04:52.005 --> 00:04:55.003
For right now, this serves its purpose.

69
00:04:55.003 --> 00:04:58.001
We will run our room-service.

70
00:04:58.001 --> 00:04:59.005
Okay, the first thing I want you to notice

71
00:04:59.005 --> 00:05:03.002
is now our log messages have traceId, parentId,

72
00:05:03.002 --> 00:05:06.001
spanId included in them.

73
00:05:06.001 --> 00:05:09.005
So let's make a couple web service calls.

74
00:05:09.005 --> 00:05:12.006
We'll simply go to our browser.

75
00:05:12.006 --> 00:05:17.008
Go to localhost:8080/rooms

76
00:05:17.008 --> 00:05:21.006
and let's hit that a couple times.

77
00:05:21.006 --> 00:05:25.004
Now, we'll jump back to our console

78
00:05:25.004 --> 00:05:29.001
and you'll see that we've gotten traceIds and spanIds.

79
00:05:29.001 --> 00:05:31.004
Obviously we don't have a parentId

80
00:05:31.004 --> 00:05:34.001
because we're calling this as the first service.

81
00:05:34.001 --> 00:05:35.000
If we had a chain,

82
00:05:35.000 --> 00:05:37.000
we would see those.

83
00:05:37.000 --> 00:05:38.008
But what's really cool about this

84
00:05:38.008 --> 00:05:40.004
is we're running Jaeger,

85
00:05:40.004 --> 00:05:45.007
so let's jump back to our web browser.

86
00:05:45.007 --> 00:05:54.003
And let's go to localhost:16686

87
00:05:54.003 --> 00:05:56.007
and this is the Jaeger dashboard.

88
00:05:56.007 --> 00:05:58.005
So we can open up our service

89
00:05:58.005 --> 00:06:02.005
and you'll see that the roomservice is listed.

90
00:06:02.005 --> 00:06:05.000
And we can find all of the traces.

91
00:06:05.000 --> 00:06:06.004
And I made three calls,

92
00:06:06.004 --> 00:06:08.003
so we add three traces.

93
00:06:08.003 --> 00:06:10.003
And as we open them up,

94
00:06:10.003 --> 00:06:12.004
you'll see that we can get details

95
00:06:12.004 --> 00:06:14.008
of the individual calls

96
00:06:14.008 --> 00:06:17.000
and this is where Jaeger really gets powerful

97
00:06:17.000 --> 00:06:19.008
for debugging an operational system

98
00:06:19.008 --> 00:06:21.004
where you need to see the call stack

99
00:06:21.004 --> 00:06:25.000
and how all of your traces relate to each other.

