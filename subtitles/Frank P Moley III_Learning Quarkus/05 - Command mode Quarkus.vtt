WEBVTT
1
00:00:00.006 --> 00:00:01.006
- [Instructor] One of the easiest ways

2
00:00:01.006 --> 00:00:03.006
to build an application using Quarkus

3
00:00:03.006 --> 00:00:05.008
is through the Command Line.

4
00:00:05.008 --> 00:00:08.001
This is not a throwaway prospect either

5
00:00:08.001 --> 00:00:10.009
Command Line applications are used for things

6
00:00:10.009 --> 00:00:15.003
like batching, cron operations in real world applications.

7
00:00:15.003 --> 00:00:17.004
In fact, I write more cron operations

8
00:00:17.004 --> 00:00:20.001
than anything else on a standard week.

9
00:00:20.001 --> 00:00:21.002
So let's talk a little bit about

10
00:00:21.002 --> 00:00:24.002
what a Command Mode application is.

11
00:00:24.002 --> 00:00:27.000
So essentially, you get all of the power of Quarkus,

12
00:00:27.000 --> 00:00:31.002
and all of its CDI and everything else that comes with it.

13
00:00:31.002 --> 00:00:34.002
All of this comes at the Command Line.

14
00:00:34.002 --> 00:00:37.000
Now, again, this is great for cron applications

15
00:00:37.000 --> 00:00:40.007
or batch jobs, especially in a Kubernetes environment,

16
00:00:40.007 --> 00:00:44.008
where those batch jobs run and run in their own container.

17
00:00:44.008 --> 00:00:47.004
Again, it works very, very well with Kubernetes.

18
00:00:47.004 --> 00:00:50.008
If you're already doing Java based applications,

19
00:00:50.008 --> 00:00:52.008
because again, you're getting the power of Quarkus,

20
00:00:52.008 --> 00:00:55.003
which includes smaller memory footprint,

21
00:00:55.003 --> 00:00:59.002
faster startup time, all was in a Kubernetes job.

22
00:00:59.002 --> 00:01:01.009
And of course, you can control the return value,

23
00:01:01.009 --> 00:01:03.008
which is very critical so that you know

24
00:01:03.008 --> 00:01:06.004
if your job succeeded or failed.

25
00:01:06.004 --> 00:01:09.003
So why would you use a Command Mode application

26
00:01:09.003 --> 00:01:12.000
versus Bash or Python.

27
00:01:12.000 --> 00:01:15.000
And really, it comes down to having the power of Java

28
00:01:15.000 --> 00:01:17.008
and the power of Quarkus together,

29
00:01:17.008 --> 00:01:20.000
giving you all of the common abstractions

30
00:01:20.000 --> 00:01:21.008
that come with Quarkus.

31
00:01:21.008 --> 00:01:24.004
And all of the resiliency that comes with Java.

32
00:01:24.004 --> 00:01:27.006
And you then also get the ability to write to databases,

33
00:01:27.006 --> 00:01:30.000
write to cues, call services,

34
00:01:30.000 --> 00:01:33.001
some of which becomes much more complicated with tools

35
00:01:33.001 --> 00:01:36.003
like Bash, or you have to bring out another language

36
00:01:36.003 --> 00:01:39.000
like Python, if you're already a Java shop,

37
00:01:39.000 --> 00:01:40.008
writing Quarkus applications,

38
00:01:40.008 --> 00:01:42.007
using Command Mode for Batch jobs

39
00:01:42.007 --> 00:01:45.001
really does make a lot of sense.

40
00:01:45.001 --> 00:01:47.007
So let's take a look at what this looks like.

41
00:01:47.007 --> 00:01:49.001
Okay, so the first thing we're going to do is

42
00:01:49.001 --> 00:01:51.003
we're going to actually create a new application.

43
00:01:51.003 --> 00:01:54.008
Now, I am going to use the built in function of my IV.

44
00:01:54.008 --> 00:01:57.003
If you don't have a plugin to do this,

45
00:01:57.003 --> 00:01:59.005
you can do it from the web's guide,

46
00:01:59.005 --> 00:02:02.003
and create it or you can run that plugin

47
00:02:02.003 --> 00:02:05.004
and actually generate it either way works just fine.

48
00:02:05.004 --> 00:02:08.000
But I think you'll find that if you have a modern idea,

49
00:02:08.000 --> 00:02:10.005
like Eclipse, or IntelliJ,

50
00:02:10.005 --> 00:02:12.007
using the plugin really works well.

51
00:02:12.007 --> 00:02:15.008
So I'm going to go and use the Quarkus plugin.

52
00:02:15.008 --> 00:02:17.006
And I'm going to give my item

53
00:02:17.006 --> 00:02:23.001
a Group of com.frankmoley.lil.lq,

54
00:02:23.001 --> 00:02:28.001
and this will be command app.

55
00:02:28.001 --> 00:02:33.004
Now, for this example, we need no web products at all,

56
00:02:33.004 --> 00:02:34.009
we only need Quarkus.

57
00:02:34.009 --> 00:02:37.000
So we're not going to bring in any web,

58
00:02:37.000 --> 00:02:40.009
no data, no messaging, nothing, just raw Quarkus.

59
00:02:40.009 --> 00:02:43.004
And we don't really even need YAML.

60
00:02:43.004 --> 00:02:46.001
Although if we were deploying this to Kubernetes,

61
00:02:46.001 --> 00:02:48.002
it might make sense to have YAML.

62
00:02:48.002 --> 00:02:51.007
But for now, we're just going to leave it as is

63
00:02:51.007 --> 00:02:56.008
go ahead and allow this to be built.

64
00:02:56.008 --> 00:03:01.001
Alright, so now in source, main, Java,

65
00:03:01.001 --> 00:03:03.001
you'll see we get an example resource,

66
00:03:03.001 --> 00:03:05.004
and that's just from the plugin,

67
00:03:05.004 --> 00:03:06.002
I'm going to go ahead and delete

68
00:03:06.002 --> 00:03:09.007
that example resource because we don't need it.

69
00:03:09.007 --> 00:03:15.005
And I'm going to delete the tests that come with it.

70
00:03:15.005 --> 00:03:18.004
And now in the lq folder,

71
00:03:18.004 --> 00:03:23.005
I'm going to create a new class.

72
00:03:23.005 --> 00:03:34.004
So you need to add Maven framework support here.

73
00:03:34.004 --> 00:03:35.009
Alright, so the class that we are going

74
00:03:35.009 --> 00:03:41.001
to call is command runner.

75
00:03:41.001 --> 00:03:43.003
That command runner is going to be annotated

76
00:03:43.003 --> 00:03:46.005
with @QuarkusMain.

77
00:03:46.005 --> 00:03:52.000
And to make this easy, we will implement

78
00:03:52.000 --> 00:03:54.008
QuarkusApplication.

79
00:03:54.008 --> 00:03:57.000
Now what you'll see here is this tells me immediately

80
00:03:57.000 --> 00:03:58.008
that I need a method.

81
00:03:58.008 --> 00:04:05.007
And the method that I need to have is the run method.

82
00:04:05.007 --> 00:04:08.009
So this is going to be the entry point to my application,

83
00:04:08.009 --> 00:04:11.006
is it because I have implemented QuarkusApplication,

84
00:04:11.006 --> 00:04:14.004
it's going to run this run method,

85
00:04:14.004 --> 00:04:17.002
and you'll see that I get the arguments as well,

86
00:04:17.002 --> 00:04:20.006
that are passed via the command line.

87
00:04:20.006 --> 00:04:26.006
Now, I am simply going to do System.out.printline.

88
00:04:26.006 --> 00:04:31.008
And we will print out Hello Students.

89
00:04:31.008 --> 00:04:35.008
And then we will return zero because it is a success.

90
00:04:35.008 --> 00:04:42.001
So let us run our command app.

91
00:04:42.001 --> 00:04:46.005
And you will see that our application exited with code zero

92
00:04:46.005 --> 00:04:47.007
and a couple lines up you'll see

93
00:04:47.007 --> 00:04:49.006
that it printed Hello Students.

94
00:04:49.006 --> 00:04:51.002
That really is all there is

95
00:04:51.002 --> 00:04:53.007
to running a Bash job with Quarkus.

96
00:04:53.007 --> 00:04:55.002
Now obviously we're going to add to this

97
00:04:55.002 --> 00:04:57.001
and put a little bit more power behind it,

98
00:04:57.001 --> 00:04:59.008
other than just printing to the command line

99
00:04:59.008 --> 00:05:01.000
but that's all there is

100
00:05:01.000 --> 00:05:03.002
we now have the full power of Quarkus

101
00:05:03.002 --> 00:05:05.003
with just a few simple commands.

102
00:05:05.003 --> 00:05:07.009
We can do a lot of stuff with this cron job,

103
00:05:07.009 --> 00:05:09.001
which as you might imagine,

104
00:05:09.001 --> 00:05:13.000
makes it very valuable in a production system.

