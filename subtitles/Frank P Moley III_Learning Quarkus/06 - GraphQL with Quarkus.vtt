WEBVTT
1
00:00:00.007 --> 00:00:02.008
- [Instructor] GraphQL is a very popular way

2
00:00:02.008 --> 00:00:07.002
of exposing data to a UI in modern web applications.

3
00:00:07.002 --> 00:00:08.001
Now, a lot of times

4
00:00:08.001 --> 00:00:11.002
we write GraphQL services using JavaScript,

5
00:00:11.002 --> 00:00:12.008
but if you want to do it in Java,

6
00:00:12.008 --> 00:00:14.006
Quarkus has built-in support

7
00:00:14.006 --> 00:00:17.007
for building a GraphQL-based service.

8
00:00:17.007 --> 00:00:20.003
So, let's take a look at how.

9
00:00:20.003 --> 00:00:23.008
All right, we're going to create one last time,

10
00:00:23.008 --> 00:00:27.000
for this course, a new module.

11
00:00:27.000 --> 00:00:30.008
I'll use my ID plugin.

12
00:00:30.008 --> 00:00:35.008
(keys clacking)

13
00:00:35.008 --> 00:00:42.009
We're going to call this one room-service-graphQL.

14
00:00:42.009 --> 00:00:44.009
Go ahead and select Next.

15
00:00:44.009 --> 00:00:49.005
So, now, in web, so a couple options for GraphQL.

16
00:00:49.005 --> 00:00:52.006
And the one that we are going to choose,

17
00:00:52.006 --> 00:00:56.003
is the SmallRye GraphQL end point.

18
00:00:56.003 --> 00:00:59.002
We also need to go ahead and do our database once again

19
00:00:59.002 --> 00:01:05.000
and I'm going to use the DataStax Apache Cassandra client.

20
00:01:05.000 --> 00:01:08.005
And we'll go ahead and generate that up.

21
00:01:08.005 --> 00:01:11.004
All right, let's do some copy, paste again.

22
00:01:11.004 --> 00:01:14.007
So source main Java,

23
00:01:14.007 --> 00:01:30.006
I want to bring over the room and the roomService.

24
00:01:30.006 --> 00:01:35.001
And I'm also going to get rid of the example resource

25
00:01:35.001 --> 00:01:42.004
by renaming it to RoomResource.

26
00:01:42.004 --> 00:01:47.006
All right so, now let's come back up here to our Resources

27
00:01:47.006 --> 00:01:55.008
and let's bring over the Cassandra specific resources.

28
00:01:55.008 --> 00:01:59.000
All right so, we're done with our room service.

29
00:01:59.000 --> 00:02:02.008
So, now, let's go to this RoomResource class.

30
00:02:02.008 --> 00:02:04.004
(keys clacking)

31
00:02:04.004 --> 00:02:10.008
We're going to get rid of a lot of this stuff.

32
00:02:10.008 --> 00:02:16.001
Including all of the

33
00:02:16.001 --> 00:02:17.007
rest data.

34
00:02:17.007 --> 00:02:23.009
We're going to annotate this with GraphQLApi.

35
00:02:23.009 --> 00:02:25.007
We will inject.

36
00:02:25.007 --> 00:02:35.002
(keys clacking)

37
00:02:35.002 --> 00:02:40.001
Our roomService.

38
00:02:40.001 --> 00:02:43.008
Now, we're going to create Query

39
00:02:43.008 --> 00:02:49.004
and that query will simply be called allRooms.

40
00:02:49.004 --> 00:02:52.007
And we'll go ahead and give it a description.

41
00:02:52.007 --> 00:02:55.006
The description that we will give it is,

42
00:02:55.006 --> 00:03:02.009
"Gets all rooms for the hotel."

43
00:03:02.009 --> 00:03:08.000
public list "room",

44
00:03:08.000 --> 00:03:13.000
getAllRooms.

45
00:03:13.000 --> 00:03:20.003
Let's do imports and spell those correctly.

46
00:03:20.003 --> 00:03:22.003
And once again, we will do a return

47
00:03:22.003 --> 00:03:26.001
on the roomService that getAllRooms.

48
00:03:26.001 --> 00:03:27.002
That's all there is to it.

49
00:03:27.002 --> 00:03:36.003
Let's start up our roomService graphQL application.

50
00:03:36.003 --> 00:03:37.005
All right, now that that's up,

51
00:03:37.005 --> 00:03:39.004
we're going to go to a web browser,

52
00:03:39.004 --> 00:03:42.002
and in a web browser, the first thing that I want to do,

53
00:03:42.002 --> 00:03:53.004
is I want to go to local host:8080/graphQL/schema.graphQL

54
00:03:53.004 --> 00:03:55.005
and you'll see that we get the full schema

55
00:03:55.005 --> 00:03:58.000
for our GraphQL service.

56
00:03:58.000 --> 00:04:02.007
That's great, but there's actually a better way to do this.

57
00:04:02.007 --> 00:04:06.006
Because GraphQL itself,

58
00:04:06.006 --> 00:04:12.002
ships with a sort of playground.

59
00:04:12.002 --> 00:04:15.004
And while it's not the true playground that comes

60
00:04:15.004 --> 00:04:18.008
with GraphQL, it's extremely similar

61
00:04:18.008 --> 00:04:21.004
and it'll do everything that you need it to do.

62
00:04:21.004 --> 00:04:23.005
So let's get rid of all of this noise here

63
00:04:23.005 --> 00:04:27.001
for a minute and let's build a GraphQL query.

64
00:04:27.001 --> 00:04:31.007
So the query that we're going to call is allRooms.

65
00:04:31.007 --> 00:04:35.007
And to start with let's set roomNnumber,

66
00:04:35.007 --> 00:04:39.006
and bedInfo and name.

67
00:04:39.006 --> 00:04:42.004
And we'll execute that and indeed we get all

68
00:04:42.004 --> 00:04:45.001
of our rooms as data coming out of our service.

69
00:04:45.001 --> 00:04:48.000
Now, the reason people like GraphQL,

70
00:04:48.000 --> 00:04:51.000
one of the reasons, is you could take in, dynamically say,

71
00:04:51.000 --> 00:04:55.004
"Well, I don't need name," and now it doesn't return it.

72
00:04:55.004 --> 00:04:58.003
Now this is just the basics here.

73
00:04:58.003 --> 00:05:00.006
This is not in any way, shape or form going

74
00:05:00.006 --> 00:05:02.007
into the depth of GraphQL,

75
00:05:02.007 --> 00:05:05.007
but the doc for the GraphQL implementation,

76
00:05:05.007 --> 00:05:09.001
has a lot more detail including how to do mutations

77
00:05:09.001 --> 00:05:12.003
in GraphQL as well as expanding the APIs,

78
00:05:12.003 --> 00:05:14.008
so you can link resources together

79
00:05:14.008 --> 00:05:19.000
and query multiple resources out of the GraphQL API.

