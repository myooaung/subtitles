WEBVTT
1
00:00:00.007 --> 00:00:02.001
- [Instructor] Of course any discussion

2
00:00:02.001 --> 00:00:03.009
about Microservice Framework

3
00:00:03.009 --> 00:00:06.007
wouldn't be complete without talking about REST,

4
00:00:06.007 --> 00:00:10.004
the de facto communication standard for web services,

5
00:00:10.004 --> 00:00:13.001
especially within microservices.

6
00:00:13.001 --> 00:00:16.002
Now, because Quarkus implements MicroProfile,

7
00:00:16.002 --> 00:00:18.009
JAX-RS is the REST interface.

8
00:00:18.009 --> 00:00:22.005
JAX-RS itself is a well-documented interface.

9
00:00:22.005 --> 00:00:24.007
So we we'll just talk about some of the basics.

10
00:00:24.007 --> 00:00:26.001
You can get a lot more depth

11
00:00:26.001 --> 00:00:28.008
by reading through all that documentation.

12
00:00:28.008 --> 00:00:30.009
Now, classes that should respond

13
00:00:30.009 --> 00:00:33.001
to web requests are annotated

14
00:00:33.001 --> 00:00:35.006
with an @Path annotation,

15
00:00:35.006 --> 00:00:37.005
which takes the value.

16
00:00:37.005 --> 00:00:41.006
And that value is the actual path off of the context route.

17
00:00:41.006 --> 00:00:43.004
So you don't need to put in the whole context route.

18
00:00:43.004 --> 00:00:44.004
It's just everything

19
00:00:44.004 --> 00:00:48.005
after that point is what you put in the path statement.

20
00:00:48.005 --> 00:00:51.008
Now, methods within those classes are directly annotated

21
00:00:51.008 --> 00:00:55.000
with the HTTP verb that they listened to.

22
00:00:55.000 --> 00:00:57.002
And that's really where all the traffic is going.

23
00:00:57.002 --> 00:00:59.004
So the class points that in the direction

24
00:00:59.004 --> 00:01:01.005
and then the method takes over.

25
00:01:01.005 --> 00:01:04.002
Now you can annotate methods with @Path

26
00:01:04.002 --> 00:01:05.001
if you would like to

27
00:01:05.001 --> 00:01:06.008
and sometimes you need to

28
00:01:06.008 --> 00:01:08.008
but those are all based on an additive

29
00:01:08.008 --> 00:01:10.007
of anything annotated on the class

30
00:01:10.007 --> 00:01:12.006
and then the context route.

31
00:01:12.006 --> 00:01:14.000
Now, content type

32
00:01:14.000 --> 00:01:16.009
and accept headers are handled with produces

33
00:01:16.009 --> 00:01:21.002
and consumes annotations on the methods themselves.

34
00:01:21.002 --> 00:01:23.008
These annotations take enumerations

35
00:01:23.008 --> 00:01:27.002
for the various viable media types.

36
00:01:27.002 --> 00:01:28.003
Query parameters

37
00:01:28.003 --> 00:01:31.005
which are used for optional values for the request

38
00:01:31.005 --> 00:01:35.000
and are handled with the @QueryParam annotation

39
00:01:35.000 --> 00:01:38.002
in the method signature itself

40
00:01:38.002 --> 00:01:42.001
and path parameters themselves are resolved in two parts.

41
00:01:42.001 --> 00:01:45.004
First, the path will contain a variable wrapped

42
00:01:45.004 --> 00:01:47.002
in curly braces.

43
00:01:47.002 --> 00:01:49.005
Then in the method signature

44
00:01:49.005 --> 00:01:54.005
the variable is annotated with an @PathParam annotation.

45
00:01:54.005 --> 00:01:56.006
Now I just want to walk through an example flow

46
00:01:56.006 --> 00:01:59.001
of what a web request will look like

47
00:01:59.001 --> 00:02:01.003
in a Quarkus based application.

48
00:02:01.003 --> 00:02:03.003
So we're going to start with our network represented

49
00:02:03.003 --> 00:02:04.002
by the cloud

50
00:02:04.002 --> 00:02:06.009
and our Quarkus based container exposed

51
00:02:06.009 --> 00:02:09.003
via its servlet container.

52
00:02:09.003 --> 00:02:11.006
Now, the request comes into the servlet

53
00:02:11.006 --> 00:02:14.001
from the network itself

54
00:02:14.001 --> 00:02:16.001
and all of Quarkas is going to do

55
00:02:16.001 --> 00:02:18.004
is take that request and map it.

56
00:02:18.004 --> 00:02:21.009
And it's going to map it specifically

57
00:02:21.009 --> 00:02:24.003
to the class and then the method

58
00:02:24.003 --> 00:02:27.008
within that class that is going to accept that traffic.

59
00:02:27.008 --> 00:02:29.000
And that again is based

60
00:02:29.000 --> 00:02:31.006
on the verb annotated on that method.

61
00:02:31.006 --> 00:02:35.004
Now the method will perform whatever operations it needs to

62
00:02:35.004 --> 00:02:38.008
and return the response to the color

63
00:02:38.008 --> 00:02:40.008
again via the servlet container

64
00:02:40.008 --> 00:02:42.003
and the Quarkus framework.

65
00:02:42.003 --> 00:02:45.000
And you don't have to get involved with that.

66
00:02:45.000 --> 00:02:47.001
So you'll notice I didn't say anything here

67
00:02:47.001 --> 00:02:49.007
about JSON Marshalling and Unmarshalling

68
00:02:49.007 --> 00:02:52.004
or XML or any technology like that.

69
00:02:52.004 --> 00:02:53.005
And that's because Quarkus

70
00:02:53.005 --> 00:02:55.002
handles that all for you

71
00:02:55.002 --> 00:02:58.006
and specifically JSON out of the box.

72
00:02:58.006 --> 00:02:59.007
So what happens is,

73
00:02:59.007 --> 00:03:03.000
is when the web request comes in with JSON

74
00:03:03.000 --> 00:03:07.000
it gets unmarshalled into Java objects

75
00:03:07.000 --> 00:03:09.008
and those Java objects then are passed

76
00:03:09.008 --> 00:03:11.009
into the method itself.

77
00:03:11.009 --> 00:03:15.005
Then they get marshalled back into JSON

78
00:03:15.005 --> 00:03:18.007
and sent back out after the response comes through.

79
00:03:18.007 --> 00:03:21.008
And again, the framework handles all of that for you.

80
00:03:21.008 --> 00:03:23.003
This is a super high level

81
00:03:23.003 --> 00:03:26.000
and simplistic view of what's going on.

82
00:03:26.000 --> 00:03:28.003
And there's a lot more to unpack

83
00:03:28.003 --> 00:03:32.002
both within this diagram and within JAX-RS itself

84
00:03:32.002 --> 00:03:34.007
but that's beyond the scope of this course.

85
00:03:34.007 --> 00:03:36.008
We're focusing on the basics

86
00:03:36.008 --> 00:03:38.009
but those guides I pointed to earlier

87
00:03:38.009 --> 00:03:42.007
in the course can be very helpful in digging deeper

88
00:03:42.007 --> 00:03:45.003
into what you can do with Quarkus

89
00:03:45.003 --> 00:03:48.000
and RESTful web services.

