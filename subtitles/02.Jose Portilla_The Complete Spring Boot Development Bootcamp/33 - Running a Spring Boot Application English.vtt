WEBVTT

00:00.630 --> 00:03.390
There are many ways to run a spring boot application.

00:05.620 --> 00:10.300
In this lesson, you will learn to run a spring boot app using MAVEN commands and the run button.

00:11.260 --> 00:14.950
The first question you have to ask yourself is Where does the runtime start?

00:15.190 --> 00:21.520
The entry point of your Spring Boot app is in the application Java file when you run your application.

00:21.610 --> 00:27.130
The runtime starts here and it's the spring boot application annotation that instruments the launch

00:27.130 --> 00:28.660
of a Spring Boot app.

00:31.360 --> 00:34.240
Let's go through the first two MAVEN Command Spring Boot Run.

00:34.270 --> 00:37.720
This command compiles and runs a spring boot application.

00:40.510 --> 00:46.780
When it compiles your code, the compiled classes are going to go to the target folder and then it will

00:46.780 --> 00:48.340
run your compiled code.

00:50.650 --> 00:53.380
Your project should come with a maven wrapper.

00:53.530 --> 00:56.860
We can use the maven wrapper to run Maven commands.

00:59.010 --> 01:05.670
What I'm going to do is open up a new terminal by going to view tool Windows Terminal.

01:06.300 --> 01:12.420
So right now our terminal points to the hello spraying folder and inside hello spraying.

01:12.420 --> 01:14.850
We can access the maven wrapper like so.

01:19.560 --> 01:25.110
If you're using a mac like myself, your maven command must follow a dot slash.

01:35.190 --> 01:42.060
So now from the maven rapper, we can say maven spring boot run.

01:45.450 --> 01:48.900
As you can see, it compiles your code into the target folder.

01:48.930 --> 01:52.410
This is the compiled version of our Spring Java file.

01:53.290 --> 01:55.300
And then it runs your compiled code.

01:56.910 --> 02:02.820
Now a close equivalent to the spring boot run command would be to just press the run button.

02:17.930 --> 02:22.920
Now you might think to yourself, Forget writing Maven commands, I'm just going to use the run button.

02:22.940 --> 02:23.990
Not so fast.

02:23.990 --> 02:26.600
I recommend running your code using this command.

02:27.170 --> 02:29.420
Maven Clean Spring Boot Run.

02:30.140 --> 02:36.410
The way this works is before starting the build, clean will remove compiled classes from the previous

02:36.410 --> 02:37.040
build.

02:37.190 --> 02:42.800
The ensuing goal as before will compile your code into the target folder and then the run the compiled

02:42.800 --> 02:43.370
code.

02:51.810 --> 02:57.390
I can use the up key to access previous terminal commands to our spring boots run command.

02:57.390 --> 02:59.490
We will add a goal of clean.

03:00.810 --> 03:05.130
And if you focus on the target folder as I run this command.

03:12.350 --> 03:18.590
You'll notice that it removes the previously compiled code and then the ensuing goal will recompile

03:18.590 --> 03:19.900
your code into target.

03:19.910 --> 03:20.630
Beautiful.

03:22.850 --> 03:27.560
Now the reason why I like to use Maven clean spring which run is because every now and then it's good

03:27.560 --> 03:28.740
to start from scratch.

03:28.760 --> 03:33.890
Sometimes I would get random bugs that were just solved by running from a fresh build.

03:34.780 --> 03:37.930
So to recap, you learned three different ways to run a spring boot up.

03:37.930 --> 03:41.020
Maven Spring Boot Run compiles your code into target and runs it.

03:43.140 --> 03:45.330
The run button is a close equivalent.

03:46.720 --> 03:50.590
Clean will remove compiled classes from the previous build.

03:51.860 --> 03:55.670
And then Spring Boot to run will compile your code into target and run it.

03:56.670 --> 04:00.750
Throughout this course, you'll notice I'll be using Maven Clean Spring Boot Run.
