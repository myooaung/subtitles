WEBVTT

00:00.490 --> 00:04.810
MVC is a design that lets you build flexible applications that scale.

00:07.740 --> 00:11.430
Spring Boot Web applications follow the model view controller design.

00:13.900 --> 00:18.160
So in this lesson you will understand the model of you controller design.

00:20.740 --> 00:23.200
The view is what the user sees.

00:25.750 --> 00:29.650
When a user makes a request, the server sends back HTML.

00:35.960 --> 00:38.760
That HTML populates the user's web page.

00:38.780 --> 00:40.190
This is the view.

00:43.510 --> 00:46.330
The model is data needed by the view.

00:47.700 --> 00:49.170
The view is a skeleton.

00:49.200 --> 00:54.420
The view needs data to become meaningful, and the data that populates the grade table in this case

00:54.420 --> 00:55.380
is the model.

01:00.200 --> 01:03.140
The controller essentially glues the model and view together.

01:03.140 --> 01:05.690
It manages the model and presents the view.

01:07.850 --> 01:09.770
The model represents the data.

01:11.270 --> 01:14.600
The view represents the visual elements of a web page.

01:16.330 --> 01:19.010
And the controller allows them to interact.

01:19.030 --> 01:21.340
It takes the data and it sends it to the view.

01:23.640 --> 01:28.290
So to paint a full picture, the controller handles every Web request.

01:30.590 --> 01:35.120
When a user makes a request, the controller maps the request to a handler method.

01:35.270 --> 01:39.530
The handler method in this case called get grades, fetches data.

01:42.240 --> 01:44.430
It stores the data inside the model.

01:49.390 --> 01:54.100
The View is a template that represents the visual element of a web page alone.

01:54.130 --> 01:58.180
The view is meaningless, so the controller sends the model to the view.

02:01.050 --> 02:03.810
The model populates the view with meaningful data.

02:07.150 --> 02:10.420
And finally, the handler method returns the updated view.

02:14.610 --> 02:19.110
So to recap, spring boot applications follow the model of controller design.

02:20.790 --> 02:23.070
The view is what the user sees.

02:24.430 --> 02:26.920
The muddle is data needed by the view.

02:27.890 --> 02:33.380
And the controller responds to requests by managing the model and presenting the view.
