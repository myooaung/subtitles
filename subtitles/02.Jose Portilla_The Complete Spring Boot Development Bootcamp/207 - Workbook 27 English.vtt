WEBVTT

00:00.240 --> 00:01.920
Welcome to Workbook 2.7.

00:01.920 --> 00:04.350
I already went ahead and launched the Starter Project.

00:04.380 --> 00:06.810
Task one is inside the Handler method.

00:06.810 --> 00:09.330
Before we return the leaf template.

00:09.330 --> 00:11.910
Add our name as a model attribute.

00:11.910 --> 00:20.010
So we'll say model dot add attribute and a name key will map to our name.

00:21.980 --> 00:28.100
Second step is to create a paragraph element with a bold font weight that displays our name.

00:28.370 --> 00:34.040
So right here we can create a paragraph element.

00:35.830 --> 00:42.790
And the text that our paragraph element will display will be based on a type of expression, a variable

00:42.790 --> 00:46.270
expression, to be more specific, that grabs our name.

00:46.600 --> 00:52.270
And we want to give this paragraph tag a certain style of bold.

00:54.290 --> 00:54.920
Copy that.

00:54.920 --> 00:55.550
Over.

00:56.510 --> 00:57.620
Simple enough.

00:58.480 --> 01:05.590
And Task three is to create an unordered list with five list items so that each list item will display

01:05.590 --> 01:07.240
the name inside the model.

01:07.420 --> 01:14.260
If you go to our HTML cheat sheet, we'll look for unordered list.

01:15.850 --> 01:24.460
Here we go and unordered list is specified by UL and list items are specified by ally.

01:24.490 --> 01:28.870
So here we can create an unordered list.

01:31.640 --> 01:34.700
That contains many list items.

01:39.460 --> 01:40.270
All right.

01:45.440 --> 01:47.930
Going back to Workbook 2.7.

01:48.830 --> 01:51.860
And each list item is going to display our name.

01:51.920 --> 01:57.290
So each list item will display text that is based on a timely expression.

01:57.290 --> 02:03.020
And the text that it will display will be the name that we grab through a variable expression.

02:04.130 --> 02:05.210
All right.

02:11.640 --> 02:12.600
Let's run our code.

02:20.390 --> 02:22.220
Go to local host 8080.

02:25.360 --> 02:26.710
We're looking good so far.

02:29.220 --> 02:37.470
Next step is we need to apply a utility method such that each list item displays one more letter than

02:37.470 --> 02:38.490
the previous.

02:38.820 --> 02:47.820
So we'll go to our life repo and we'll find a utility method that can return a substring by operating

02:47.820 --> 02:50.760
on our string model attribute name.

02:51.150 --> 02:57.270
And I'm familiar enough with Java to know that this method is going to be called substring.

02:57.300 --> 03:03.360
Here we see the method in the first parameter we can pass in our model attribute.

03:03.570 --> 03:11.340
Then it's going to return a string that starts at a particular index and ends at a particular index.

03:11.760 --> 03:15.720
All right, so back into our workbook.

03:17.390 --> 03:18.800
Followed by a pound sign.

03:18.800 --> 03:21.830
Where are we going to grab this utility method from?

03:21.830 --> 03:25.640
This utility method belongs to the strings class.

03:25.640 --> 03:27.580
So we'll say strings.

03:27.590 --> 03:33.590
The utility method that we want to use is called substring, dot substring.

03:33.800 --> 03:38.570
The first thing you have to pass in is your model attribute name.

03:39.110 --> 03:43.550
The second thing you have to pass in is the start index.

03:43.550 --> 03:51.380
So we're going to start with the character at Index zero are in this case and the stop index, if this

03:51.380 --> 03:55.760
is just like the substring java expression should be exclusive.

03:55.760 --> 04:00.980
So if we say 0 to 1, it's only going to grab the character at index zero.

04:01.610 --> 04:02.690
All right, you know what?

04:02.690 --> 04:04.820
Let's just copy this over instead.

04:07.010 --> 04:13.350
And now this method will return a substring that starts at index zero and ends at index two.

04:13.370 --> 04:20.360
So it's going to grab our A and once we get to index to why it's not going to grab that because the

04:20.360 --> 04:22.500
stop index is exclusive.

04:22.520 --> 04:27.560
So we'll say 0102030405.

04:27.710 --> 04:35.270
And that should be enough because the letter end would be at index four and then index five is where

04:35.270 --> 04:35.960
it stops.

04:35.960 --> 04:37.970
So we should be good.

04:38.750 --> 04:40.040
I'll refresh.

04:40.980 --> 04:42.480
And we get the results.

04:44.700 --> 04:46.560
That's it for Workbook 2.7.

04:46.570 --> 04:48.210
I'll see you in the next one.
