WEBVTT

00:00.120 --> 00:02.670
Welcome to another breakpoint session.

00:02.670 --> 00:09.600
And this one, we're going to trace the runtime and see how our custom constraint annotation is validating

00:09.600 --> 00:10.620
the score field.

00:10.620 --> 00:14.340
So the first thing we're going to do is apply some breakpoints.

00:14.340 --> 00:17.670
I will apply them all over our handler method.

00:18.030 --> 00:22.590
I will apply breakpoints inside of as valid.

00:24.320 --> 00:32.660
I'm going to apply breakpoints here as well inside of our constructor, our setters.

00:36.150 --> 00:39.180
And now we're ready to run the application and debug mode.

00:49.660 --> 00:50.380
All right.

00:50.380 --> 00:51.490
Our Tomcat server.

00:51.490 --> 00:53.080
I started on Port 88.

00:53.200 --> 00:54.310
Let's go there.

00:55.360 --> 00:58.600
And for now, I'll disable the breakpoints.

00:58.600 --> 01:00.820
We don't need to trace the runtime right now.

01:02.710 --> 01:03.850
Press continue.

01:05.800 --> 01:07.450
All right, I reform has loaded.

01:07.450 --> 01:09.550
I'll re-enable the breakpoints.

01:09.970 --> 01:13.840
Now I will submit a valid name, a valid subject.

01:13.840 --> 01:17.260
The only focus is to submit an invalid score.

01:17.380 --> 01:20.110
So let's say our plus, we'll submit that.

01:21.020 --> 01:24.710
And as always, submit form receives the request.

01:24.710 --> 01:28.730
First thing it does is it creates a new grade object.

01:30.100 --> 01:30.910
Um.

01:32.300 --> 01:38.690
And as always, spring is smart enough to use your sweaters to populate every field in this object where

01:38.690 --> 01:40.970
the values from the post request.

01:49.940 --> 01:50.420
All right.

01:50.420 --> 01:56.390
And after updating our grade object with values from the post request, the validation process starts.

01:57.500 --> 02:03.560
And here you can see that spring boot is leveraging our is valid function in order to check if the score

02:03.560 --> 02:06.500
value of this grade object is valid.

02:08.820 --> 02:12.270
So this for loop is going to run and it will never return.

02:12.270 --> 02:18.060
True, because our value is not equal to any of the scores inside of the scores list.

02:19.050 --> 02:21.150
It's not a valid letter grade.

02:22.150 --> 02:28.000
So this function is eventually going to return false when is valid returns false.

02:28.180 --> 02:31.150
That means the score field is invalid.

02:32.810 --> 02:37.190
So binding result carries the result of this validation.

02:37.190 --> 02:38.600
There is one error.

02:41.140 --> 02:43.810
The error applies to the field score.

02:43.840 --> 02:50.170
The rejected value was R plus and the default message is that the score must be a letter grade.

02:51.350 --> 02:58.460
So right as we return the form template file, MIF is able to access all of this data and here we're

02:58.460 --> 03:04.220
accessing the error that's associated with the score of the grade object.

03:04.220 --> 03:06.560
And it's going to display this error message.

03:06.560 --> 03:08.660
Score must be a letter grade.

03:08.660 --> 03:10.550
So if I press continue.

03:11.720 --> 03:13.280
It does just that.
