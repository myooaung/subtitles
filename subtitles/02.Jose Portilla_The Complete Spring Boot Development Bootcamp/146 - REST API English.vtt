WEBVTT

00:00.270 --> 00:04.230
Rest is a set of guidelines that are used to develop APIs.

00:04.680 --> 00:08.730
An API mediates the interaction of a consumer and a system.

00:09.690 --> 00:14.400
A rest API is just an API that conforms to a set of guidelines.

00:15.860 --> 00:18.650
In this lesson, you will learn about rest APIs.

00:19.930 --> 00:22.450
Let's start with a very broad definition of an API.

00:22.480 --> 00:26.440
It is simply a mediator between a consumer and a system.

00:29.260 --> 00:32.160
Imagine that you have a consumer that needs content.

00:32.170 --> 00:38.800
The API, what it's going to do is read the consumer's request and if it's valid, it acts as a mediator

00:38.800 --> 00:43.870
by grabbing content from another system and then it produces a response.

00:49.310 --> 00:50.030
No arrests.

00:50.060 --> 00:54.200
API is an API that conforms to a set of guidelines.

00:56.130 --> 00:59.790
First of all, arrest the revolves around the concept of resources.

00:59.910 --> 01:03.870
A resource usually implies a piece of data that you can name.

01:04.020 --> 01:08.280
Examples include employees, contacts, movies or products.

01:12.510 --> 01:12.900
Here.

01:12.900 --> 01:18.090
A database stores a bunch of contacts, and each contact is considered a resource.

01:22.740 --> 01:26.760
Now, if a consumer wants to access a resource, they need to specify a.

01:26.760 --> 01:27.090
U.

01:27.090 --> 01:27.320
R.

01:27.330 --> 01:27.900
I.

01:28.590 --> 01:29.460
The Urry.

01:29.490 --> 01:34.350
The Uniform Resource Identifier identifies the location of a resource.

01:35.460 --> 01:40.240
The following Yuri identifies the location of the contact resource.

01:40.260 --> 01:41.490
John Snow.

01:49.430 --> 01:57.380
Also a rest API should define operations that can manipulate resources, get to retrieve a resource

01:57.380 --> 02:02.840
post, creates a resource, put updates a resource and delete.

02:02.840 --> 02:04.310
Deletes a resource.

02:05.500 --> 02:09.610
If a user wants to delete a resource, they need to make a delete request.

02:10.820 --> 02:14.120
The Urry identifies the resource to be deleted.

02:14.840 --> 02:18.810
The API defines an operation that is capable of deleting the resource.

02:18.830 --> 02:24.020
It can use the information provided by the URI to delete the resource in question.

02:27.030 --> 02:30.870
The resource is most often represented using JSON.

02:34.590 --> 02:38.370
If a user wants to access a resource, they will make a get request.

02:39.030 --> 02:42.420
The URI identifies the resource to be accessed.

02:43.020 --> 02:47.070
The API defines an operation that is capable of accessing the resource.

02:47.370 --> 02:52.590
It can use the information provided by the URI to access the resource in question.

02:53.760 --> 02:58.650
And it's going to serialize the data into JSON before sending it back.

03:02.810 --> 03:06.920
JSON represents the data in the form of key value pairs.

03:09.330 --> 03:12.150
A collection is a grouping of resources.

03:12.180 --> 03:18.600
If the user wants to access all of the contacts, they would specify a Yuri and point that requests

03:18.600 --> 03:19.860
all of the contacts.

03:19.890 --> 03:26.010
The API would define an operation that is capable of accessing a collection of contacts, and what it's

03:26.010 --> 03:30.150
going to do is send back the collection in JSON format once again.

03:34.070 --> 03:40.310
When it comes to collections, the JSON starts with a square bracket such that each contact is limited

03:40.310 --> 03:41.420
by a comma.

03:41.900 --> 03:42.470
Perfect.

03:42.470 --> 03:44.960
Let's start putting all of this into practice.
