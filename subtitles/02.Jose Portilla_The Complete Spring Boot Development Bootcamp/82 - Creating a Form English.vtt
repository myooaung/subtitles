WEBVTT

00:00.090 --> 00:05.430
No application is complete unless we have some kind of form that allows the user to enter data.

00:05.460 --> 00:08.790
So in this lesson, we'll go through the process of creating a form.

00:08.820 --> 00:12.180
Step one is to bind the form to an object.

00:13.590 --> 00:20.880
So as always, you've got your HTML template form that HTML and you're going to need a handler method

00:20.880 --> 00:24.350
that returns the form view when a user makes a get request.

00:24.360 --> 00:28.170
But before we do that, we need to add some data to the model.

00:28.170 --> 00:31.830
Namely, we're going to add an empty grade object to the model.

00:31.830 --> 00:39.720
And what we're going to do is bind this entire object to our form using the leaf attribute object.

00:42.960 --> 00:49.710
And once we perform this bind, then we can bind each form input to a field in the model object.

00:52.990 --> 00:59.380
So now every single input can use a selection expression and bind to a field in the model object.

00:59.410 --> 01:02.470
The name input will bind to the name field.

01:03.130 --> 01:10.030
The score input will bind to the score field and the subject input will bind to the subject field.

01:10.390 --> 01:13.960
And after we've done all that, we can return the form view.

01:20.600 --> 01:22.220
As we return the form view.

01:22.250 --> 01:25.760
Each input is going to be attached to a field.

01:25.850 --> 01:30.020
This is going to be very important as we submit our form.

01:32.830 --> 01:40.390
When a user makes a get request on an empty path, what we want to do is map that request to a handler

01:40.390 --> 01:42.190
method called grade form.

01:42.640 --> 01:49.480
Every handler method can access the model, and when a request is made on this path, what we're going

01:49.480 --> 01:53.440
to do is return defined leaf template form.

01:54.480 --> 02:01.290
Now, before we return the form for you, what we need to do is bind this entire form to a model object.

02:01.500 --> 02:06.390
So back here we're going to say model dot add attribute.

02:07.560 --> 02:12.750
You're going to add a great attribute that maps to an empty grade object.

02:14.620 --> 02:15.580
All right.

02:15.970 --> 02:18.220
And back inside a form that XHTML.

02:18.220 --> 02:25.060
I can bind this entire form to an object by using the leaf attribute object.

02:27.790 --> 02:31.030
And we're going to bind it to the model object grade.

02:31.750 --> 02:36.400
The variable expression retrieves the grade object that's in our model.

02:36.910 --> 02:42.730
And this time leaf attribute is going to bind the object that results from this expression to this entire

02:42.730 --> 02:43.330
form.

02:45.290 --> 02:49.490
The life attribute field binds a form element to an object.

02:49.520 --> 02:53.690
This is going to be very important as we submit our form.

02:56.880 --> 03:04.020
Because the entire form is bound to this object, then each input can use a selection expression.

03:04.050 --> 03:08.400
Finally, field is equal to a selection expression.

03:08.880 --> 03:11.580
This one is going to bind to the name field.

03:12.930 --> 03:15.690
This one will bind to the score field.

03:17.260 --> 03:20.650
And this one is going to bind to the subject field.

03:22.280 --> 03:22.830
Okay.

03:23.750 --> 03:27.020
Now I'm actually going to run this in debug mode.

03:30.520 --> 03:37.150
I'll have to go over here, press run and debug, and I will add some breakpoints to our getters.

03:45.340 --> 03:46.220
Not the setter.

03:46.240 --> 03:47.170
The getters.

03:48.710 --> 03:51.590
Now I'm going to make a request to local host 1880.

03:54.190 --> 03:56.440
Here the getter gets to name executes.

03:56.470 --> 04:03.010
Your getters are being used to pre populate each input with a field from the model object.

04:03.010 --> 04:07.090
So here we're using the getter get name to return the name value.

04:10.490 --> 04:12.410
Then we're using the get or get score.

04:14.600 --> 04:22.010
Then we're using the getter get subject and because every single field in this great object is null,

04:22.040 --> 04:25.670
it follows that every single input is going to start off as empty.

04:29.860 --> 04:32.260
Well, right now, if I were to do the same thing.

04:33.320 --> 04:35.330
And pass in a populated grade object.

04:35.330 --> 04:36.620
So we'll say new grade.

04:41.420 --> 04:44.330
Well, we'll just pass in the following grade.

04:53.460 --> 04:54.180
Okay.

04:55.350 --> 04:57.450
We'll go back to local host 8080.

05:02.160 --> 05:04.380
Oh, I stop the runtime.

05:04.380 --> 05:07.020
I'm just going to rerun this using Maven clean spring boot run.

05:07.020 --> 05:08.060
I got my point across.

05:08.070 --> 05:09.570
No more need for breakpoints.

05:22.790 --> 05:26.450
And now each form input is pre-populated with field values.

05:26.450 --> 05:33.740
So because the entire form is bound to an object and each input is bound to a field in the object,

05:33.740 --> 05:38.150
then it follows that each input is going to be pre-populated with a value.

05:41.060 --> 05:44.000
Every single input is attached to a field.

05:44.000 --> 05:47.900
And this is going to be very important when we submit our form.
