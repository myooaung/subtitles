WEBVTT

00:00.090 --> 00:03.690
The selection expression is perfect when you're working with objects.

00:06.770 --> 00:09.410
Vanlife offers many types of expressions.

00:09.440 --> 00:13.460
A variable expression executes on a model attributes in some way.

00:14.800 --> 00:19.480
A selection, Expresion selects a field from a previously bound object.

00:22.430 --> 00:25.460
In this lesson, you will use a selection expression.

00:27.570 --> 00:30.030
The variable expression returns an object.

00:30.060 --> 00:35.550
Finally, if object binds the resulting object to an HTML element.

00:38.280 --> 00:44.190
Previously we had three variable expressions, but instead of doing that, we can bind the entire table

00:44.190 --> 00:52.260
a row to an object so we can say find leaf object and set it equal to a variable expression.

00:54.970 --> 01:01.420
And this variable expression is going to grab the grade object that was passed into the model.

01:02.580 --> 01:04.020
So we'll say grade.

01:07.140 --> 01:13.390
Finally, if object is going to bind the grade that the variable expression returns to the entire table

01:13.430 --> 01:14.010
row.

01:16.530 --> 01:19.800
Which brings us to the topic of selection expressions.

01:20.100 --> 01:24.330
A selection expression selects a field from the previously bound object.

01:25.410 --> 01:31.620
The beauty of this setup is that now underlying HTML elements can use a selection expression.

01:31.980 --> 01:39.120
We can set file MIF text equal to a selection expression, which is simply an asterisk followed by two

01:39.120 --> 01:40.440
curly brackets.

01:40.440 --> 01:48.060
And a selection expression, as the name suggests, allows you to directly select a field from the previously

01:48.060 --> 01:49.210
bound object.

01:49.230 --> 01:52.830
So here we can select the name field from the grade object.

01:52.980 --> 01:55.440
Here we can select the subject fields.

01:55.770 --> 01:58.350
And here we can select the score field.

01:58.530 --> 02:05.310
So we're binding this entire row to a model object, and then we're filling each cell with a text value

02:05.310 --> 02:09.410
that selects the field of the previously bound object.

02:09.420 --> 02:10.920
So if we run the app.

02:12.150 --> 02:13.800
Everything works accordingly.

02:14.640 --> 02:17.160
If I happen to misspell one of the fields.

02:19.740 --> 02:26.010
I'm going to get an error in that it's unable to pass the HTML template and you can probably assume

02:26.010 --> 02:27.450
what that error is.

02:32.250 --> 02:38.460
So to recap a selection, Expresion selects a field from a previously bound object.

02:39.430 --> 02:46.750
Finally, if object binds the entire row to an object from the model and each cell employs a selection

02:46.750 --> 02:51.430
expression, thus selecting a field from the previously bound object.

02:51.640 --> 02:54.310
So now you've encountered two types of expressions.

02:54.340 --> 03:00.280
A variable expression executes on a model attribute in some way, and a selection expression selects

03:00.280 --> 03:03.420
a field from a previously bound object.

03:03.430 --> 03:06.490
There are more, and you will learn about them as we go along.
