WEBVTT

00:00.620 --> 00:03.590
This video will cover the solution for your first challenge.

00:03.620 --> 00:07.010
Task one was to create a new project with the following attributes.

00:07.010 --> 00:08.890
So we'll do just that.

00:08.900 --> 00:11.690
I will open up the command palette with command shift.

00:11.690 --> 00:17.780
P If you're using Windows Press Control Shift P, I will create a Maven project.

00:17.960 --> 00:22.250
The stable version as of this recording is 2.7.0.

00:25.630 --> 00:27.280
The language will be Java.

00:27.700 --> 00:31.900
The group ID is going to be called Come Learn the part.

00:32.620 --> 00:36.490
The artifact ID, I believe, was set to be painting.

00:37.180 --> 00:41.470
The packaging type will be the familiar jar for the Java version.

00:41.470 --> 00:44.050
Choose one that matches the one you have installed.

00:44.050 --> 00:45.730
I'm using Java 11.

00:46.600 --> 00:53.920
And the dependencies we're going to use in this project are Spring Boot Web as well as spraying boot

00:53.920 --> 00:54.940
def tools.

00:56.180 --> 01:02.120
I will select the following dependencies and I will generate this project inside of my desktop.

01:05.450 --> 01:06.530
Then open it.

01:07.340 --> 01:07.910
All right.

01:07.910 --> 01:09.710
Let's go over to task number two.

01:11.190 --> 01:12.880
Which we've already done, it seems.

01:12.900 --> 01:16.620
Task number three Inside of your Spring Boot Resources.

01:16.620 --> 01:22.200
Inside the starter folder, there are two paintings that we need to drag into our current project.

01:22.200 --> 01:27.900
So I'll go to my spring boot resources into the Spring Boot Challenge starter.

01:27.960 --> 01:29.730
I will copy the following.

01:32.690 --> 01:39.170
What I'll do is I'll go inside of resources, create an images folder inside of static.

01:40.140 --> 01:43.220
Then I will reveal in Finder if you're using windows.

01:43.680 --> 01:45.950
I believe it's called the file explorer.

01:45.960 --> 01:48.090
Anyways, reveal it and finder.

01:52.160 --> 01:52.710
Okay.

01:52.730 --> 01:57.800
Then I will drag these images from the starter to my images folder.

02:00.920 --> 02:01.910
There you have it.

02:03.280 --> 02:09.940
Task number four was using the HTML cheat sheet to create a header element to images and give each painting

02:09.940 --> 02:11.420
a width of 200.

02:11.440 --> 02:16.870
So I'll go to my cheat sheet and you can create headers using the elements.

02:16.870 --> 02:17.530
h12.

02:17.530 --> 02:18.520
H six.

02:18.640 --> 02:20.020
We'll go back.

02:20.440 --> 02:20.950
You know what?

02:20.950 --> 02:23.770
Let's put this on a different tab.

02:27.810 --> 02:29.700
We'll go back and create a header.

02:32.160 --> 02:40.800
Well, first thing we're got to do is create an index of HTML file and put in the boilerplate HTML that's

02:40.800 --> 02:44.380
used to create a template, remove all of this junk.

02:44.400 --> 02:47.070
We're not going to be writing any scripts.

02:47.100 --> 02:53.040
The only thing I'll keep here is the title of the document, which I'm going to call what should we

02:53.040 --> 02:53.460
call it?

02:53.460 --> 02:54.450
A painting.

02:55.590 --> 02:57.450
And now, here, create a header.

02:58.910 --> 03:05.750
Now it says Da Vinci artwork, two image elements, one that displays the Mona Lisa, one that displays

03:05.750 --> 03:07.060
the Salvator mundi.

03:07.070 --> 03:13.910
To create an image element, you can use the following tag that displays an image.

03:13.910 --> 03:20.420
It requires a source that specifies the path to that image, and the path starts from the static folder.

03:20.420 --> 03:24.890
And you can also provide an alternative text description if the image doesn't show.

03:24.890 --> 03:31.280
So I'll copy this element right onto my HTML body.

03:31.280 --> 03:32.480
The source.

03:33.400 --> 03:36.640
Who's path is going to start at static?

03:37.270 --> 03:39.280
We'll say slash images.

03:40.490 --> 03:42.560
Slash Mona Lisa.

03:44.510 --> 03:50.540
And in case the image doesn't show, we will provide an alternative text description of Mona Lisa.

03:51.500 --> 03:52.160
Okay.

03:53.390 --> 03:55.460
We need to create another image.

03:57.550 --> 04:01.780
Same path, but the image is called Salvator Mundi.

04:05.510 --> 04:10.430
And the alternative description will be salvator mundi.

04:11.470 --> 04:14.200
And then give each painting a width of 200.

04:14.410 --> 04:17.050
We'll say width is equal to 200.

04:19.080 --> 04:19.260
Okay.

04:19.440 --> 04:20.730
Spin up a new terminal.

04:33.220 --> 04:34.560
Local host, 80, 80.

04:34.570 --> 04:36.070
And we're looking good so far.

04:37.910 --> 04:42.440
Task five is using the cheat sheet place, each painting in a block level container.

04:42.590 --> 04:47.260
A block level container is one that takes up the entire width of the document.

04:47.270 --> 04:53.060
And here you can see that div is a block level container that groups HTML elements.

04:53.060 --> 04:57.470
So we're going to wrap each image inside of a div.

04:59.740 --> 05:03.340
It is just a container that takes up the entire width.

05:08.210 --> 05:08.840
Okay.

05:11.570 --> 05:12.470
Refresh.

05:14.230 --> 05:15.490
Looking good.

05:21.430 --> 05:27.130
Task six using the HTML cheat sheet display the following text under each image.

05:27.190 --> 05:33.520
If you want to display text, you would need to use a paragraph element and conveniently paragraph elements

05:33.520 --> 05:37.510
are blocked level, which means that they're going to take up the whole width, which is exactly what

05:37.510 --> 05:38.820
we need for this task.

05:38.830 --> 05:40.960
So back here we'll say.

05:41.910 --> 05:44.130
Well, create a paragraph tag.

05:45.950 --> 05:48.020
Here, I'll paste the following text.

05:52.800 --> 05:55.020
Then create another paragraph tag.

05:55.770 --> 05:57.360
Displaying this text.

06:05.030 --> 06:05.810
Refresh.

06:06.640 --> 06:07.420
Great.

06:09.640 --> 06:15.220
Task number seven is using the cheat sheet, placed the text inside of an inline element.

06:15.460 --> 06:17.830
One such element is the spin.

06:17.860 --> 06:22.180
The spin is an inline container that wraps around what's inside of it.

06:22.600 --> 06:26.050
So here we can display the text inside of a spin.

06:40.150 --> 06:42.540
And Spen does not take up the entire width.

06:42.550 --> 06:45.340
It wraps around the content inside of it.

06:45.850 --> 06:46.330
All right.

06:46.330 --> 06:47.680
That is all for this challenge.

06:47.710 --> 06:50.790
Now, the focus of this course will be setting up the back end.

06:50.800 --> 06:56.730
We don't really care about setting up HTML because that falls within the realm of a front end developer.

06:56.740 --> 07:01.780
But it does help to be just a little bit familiar with HTML because we're going to be working our way

07:01.780 --> 07:02.410
around it.

07:02.410 --> 07:07.360
So I hope this challenge was a good opportunity for you to get familiar with the cheat sheets.

07:07.540 --> 07:08.200
All right.

07:08.200 --> 07:09.670
I will see you in the next section.

07:09.670 --> 07:11.020
Model view controller.
