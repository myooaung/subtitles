1
00:00:01,170 --> 00:00:03,340
Okay, so here's our gradebook controller,

2
00:00:03,340 --> 00:00:05,710
and we're going to write a test here for this method,

3
00:00:05,710 --> 00:00:06,689
get students.

4
00:00:06,689 --> 00:00:08,980
So that's the request mapping,

5
00:00:08,980 --> 00:00:11,780
value of slash, request method of get.

6
00:00:11,780 --> 00:00:14,463
And it simply returns a list of college students.

7
00:00:18,470 --> 00:00:20,823
I'll move into my gradebook controller test,

8
00:00:21,880 --> 00:00:23,673
and I'll add in a new test.

9
00:00:42,320 --> 00:00:46,083
I'll make use of my MockMvc and I'll perform a get request.

10
00:00:56,621 --> 00:00:58,954
So get request to the slash.

11
00:01:00,010 --> 00:01:03,990
And now I want to verify the status code that is successful

12
00:01:03,990 --> 00:01:06,973
so, and expect status is okay.

13
00:01:09,270 --> 00:01:11,843
And then I also want to verify the content type.

14
00:01:15,750 --> 00:01:17,200
And I want to make sure the content type

15
00:01:17,200 --> 00:01:19,013
is application/JSON.

16
00:01:20,220 --> 00:01:22,620
Now let's go ahead and run this test real quick.

17
00:01:25,700 --> 00:01:26,810
And that looks really good.

18
00:01:26,810 --> 00:01:28,650
So the test passed and we're okay.

19
00:01:28,650 --> 00:01:30,680
So, just kind of covering the basics.

20
00:01:30,680 --> 00:01:31,600
Let's drill down a bit

21
00:01:31,600 --> 00:01:34,363
and let's verify the JSON response body.

22
00:01:35,780 --> 00:01:38,900
So add this new line of code here and expect,

23
00:01:38,900 --> 00:01:42,560
I make use a JSON path, and I reference the root element

24
00:01:42,560 --> 00:01:43,810
which is the dollar sign.

25
00:01:51,569 --> 00:01:53,373
Then I give, hasSize of one.

26
00:01:53,373 --> 00:01:57,100
So verify the JSON array size is one.

27
00:01:57,100 --> 00:01:58,700
Let's go ahead and run this one.

28
00:02:05,286 --> 00:02:06,850
And that's all green there.

29
00:02:06,850 --> 00:02:07,683
So that looks good.

30
00:02:07,683 --> 00:02:08,515
So that test passed.

31
00:02:08,515 --> 00:02:10,060
So we're in good shape.

32
00:02:10,060 --> 00:02:13,120
So currently we only have one student in the database.

33
00:02:13,120 --> 00:02:15,670
Let's go ahead and add another student to the database.

34
00:02:15,670 --> 00:02:17,210
And then we'll kind of check out the size.

35
00:02:17,210 --> 00:02:18,860
The size should be different now.

36
00:02:23,530 --> 00:02:25,280
And what I'll do here is in my test,

37
00:02:25,280 --> 00:02:27,260
is I'll make use of the entity manager

38
00:02:27,260 --> 00:02:30,950
and I'll add a student directly using that entity manager.

39
00:02:30,950 --> 00:02:32,930
So first off let me just set some values here

40
00:02:32,930 --> 00:02:33,853
for the student.

41
00:02:54,400 --> 00:02:56,040
And now I'll use that entity manager,

42
00:02:56,040 --> 00:02:57,810
our JPA entity manager,

43
00:02:57,810 --> 00:03:00,013
and I'll actually save this to the database.

44
00:03:07,194 --> 00:03:09,050
Now, when we run our test again,

45
00:03:09,050 --> 00:03:12,650
it should fail because now we have two students

46
00:03:12,650 --> 00:03:14,210
in the database.

47
00:03:14,210 --> 00:03:15,730
And yep, sure enough it fails.

48
00:03:15,730 --> 00:03:19,180
So notice here we have this assertion error

49
00:03:19,180 --> 00:03:23,250
for JSON path, expected a collection with size of one,

50
00:03:23,250 --> 00:03:25,530
but the collection size was two.

51
00:03:25,530 --> 00:03:27,900
Because we have two students in the database.

52
00:03:27,900 --> 00:03:28,733
No problem.

53
00:03:28,733 --> 00:03:30,400
We can easily fix this right now,

54
00:03:30,400 --> 00:03:31,233
but at least we know

55
00:03:31,233 --> 00:03:33,640
that it's actually checking the size of the array

56
00:03:33,640 --> 00:03:35,470
that's being returned.

57
00:03:35,470 --> 00:03:37,573
So here I'll simply say size of two,

58
00:03:38,740 --> 00:03:40,513
and then I run my test again,

59
00:03:42,940 --> 00:03:44,370
and excellent.

60
00:03:44,370 --> 00:03:46,400
All green, this test passed.

61
00:03:46,400 --> 00:03:47,590
Why aren't you going to use more examples

62
00:03:47,590 --> 00:03:48,560
in some of the following videos,

63
00:03:48,560 --> 00:03:50,700
but at least we have kind of the basics in place here

64
00:03:50,700 --> 00:03:52,570
for testing a REST API.

65
00:03:52,570 --> 00:03:53,920
So this looks really good.

66
00:03:53,920 --> 00:03:54,753
I'm happy.

