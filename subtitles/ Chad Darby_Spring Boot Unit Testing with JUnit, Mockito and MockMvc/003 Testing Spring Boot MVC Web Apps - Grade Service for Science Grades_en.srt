1
00:00:01,130 --> 00:00:02,900
Alrighty so, we're making some really, really

2
00:00:02,900 --> 00:00:04,680
good progress here, so let's go ahead

3
00:00:04,680 --> 00:00:07,403
and do a similar process for science grades.

4
00:00:10,800 --> 00:00:13,920
And as usual, we start with the test first.

5
00:00:13,920 --> 00:00:16,930
So we'll simply enhance this existing test where we did it

6
00:00:16,930 --> 00:00:19,170
for math grades and we'll do a similar thing here

7
00:00:19,170 --> 00:00:20,463
for science grades.

8
00:00:30,870 --> 00:00:32,450
So everything here is almost the same

9
00:00:32,450 --> 00:00:34,300
except for the grade type is science.

10
00:00:38,660 --> 00:00:40,833
We'll also get all the science grades,

11
00:00:43,780 --> 00:00:45,303
using our science grades DAO.

12
00:00:55,440 --> 00:00:57,980
And then finally, we'll verify the grades accordingly

13
00:00:57,980 --> 00:00:59,720
for these science grades.

14
00:00:59,720 --> 00:01:01,420
Again, just using the same approach that we use

15
00:01:01,420 --> 00:01:02,723
for math grades.

16
00:01:09,510 --> 00:01:11,750
At the moment, the science grade DAO is red.

17
00:01:11,750 --> 00:01:13,650
So that means we need to create a DAO.

18
00:01:16,110 --> 00:01:18,743
So we'll create this DAO in our repository.

19
00:01:24,840 --> 00:01:26,840
And the name here is science grades DAO.

20
00:01:35,570 --> 00:01:38,323
Alrighty so here's our interface for our science grades DAO,

21
00:01:40,290 --> 00:01:41,973
extends credit repository,

22
00:01:47,650 --> 00:01:50,270
and we give the entity type of science grade

23
00:01:50,270 --> 00:01:52,523
and we give the primary key of integer.

24
00:01:53,780 --> 00:01:54,740
You're getting used to all this now

25
00:01:54,740 --> 00:01:57,950
this is a similar process to what we did earlier,

26
00:01:57,950 --> 00:02:00,150
and we'll also add our custom finder method.

27
00:02:13,820 --> 00:02:15,740
All righty here so this looks pretty good,

28
00:02:15,740 --> 00:02:17,440
So now that we have our science grade DAO

29
00:02:17,440 --> 00:02:20,510
that should resolve this issue almost,

30
00:02:20,510 --> 00:02:24,863
we still need to inject it or auto wire into our test class.

31
00:02:51,280 --> 00:02:52,197
All right, this looks good,

32
00:02:52,197 --> 00:02:55,447
we have our science grade DAO in place.

33
00:02:56,418 --> 00:02:57,635
And then if we scroll down, we see that

34
00:02:57,635 --> 00:03:02,600
that resolves the syntax error that we had earlier.

35
00:03:02,600 --> 00:03:04,553
Now we can go ahead and run our test.

36
00:03:09,210 --> 00:03:11,670
And we see that the test fails and that's expected, right?

37
00:03:11,670 --> 00:03:13,680
Cause we're doing this whole test driven development.

38
00:03:13,680 --> 00:03:14,830
We have a little bit of work to do

39
00:03:14,830 --> 00:03:16,530
in that student and grade service.

40
00:03:22,810 --> 00:03:25,330
We basically need to update the code here to handle

41
00:03:25,330 --> 00:03:26,880
for the type of science grades.

42
00:03:45,370 --> 00:03:47,960
At the moment here I have simply return true

43
00:03:51,230 --> 00:03:53,630
and then scrolling up top I need to auto wire,

44
00:03:53,630 --> 00:03:54,753
the science grade.

45
00:04:12,120 --> 00:04:14,870
And I also need to auto wire in the science grades DAO.

46
00:04:23,825 --> 00:04:27,500
All righty so this looks pretty good so far.

47
00:04:27,500 --> 00:04:29,590
Scrolling back down, and then I can go ahead

48
00:04:29,590 --> 00:04:31,850
and add the appropriate code here for setting

49
00:04:31,850 --> 00:04:35,050
that science grade, the ID, the grade, student ID

50
00:04:35,050 --> 00:04:37,890
and then performing a save very similar

51
00:04:37,890 --> 00:04:39,340
to what I did for math grade.

52
00:04:56,852 --> 00:05:00,000
All righty so this coding here looks pretty good.

53
00:05:00,000 --> 00:05:01,310
Let's go ahead and swing back over

54
00:05:01,310 --> 00:05:03,223
to our test and let's run it again.

55
00:05:12,380 --> 00:05:15,700
And we have success, Oh yeah, this is great.

56
00:05:15,700 --> 00:05:19,010
So now looking at the console, we see that we have an insert

57
00:05:19,010 --> 00:05:22,460
into math grade and also an insert into science grade.

58
00:05:22,460 --> 00:05:24,870
So greate, so we're actually inserting

59
00:05:24,870 --> 00:05:27,490
that data into the database I like it.

60
00:05:27,490 --> 00:05:30,060
And we also have the verifications in our test to verify

61
00:05:30,060 --> 00:05:33,480
that those grades were actually added so good job.

62
00:05:33,480 --> 00:05:34,313
I like it.

