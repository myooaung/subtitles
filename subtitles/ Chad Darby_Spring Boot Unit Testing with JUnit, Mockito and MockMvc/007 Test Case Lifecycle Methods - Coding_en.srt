1
00:00:01,560 --> 00:00:02,620
All right, so let's get started

2
00:00:02,620 --> 00:00:04,883
with some of our test lifecycle methods.

3
00:00:10,140 --> 00:00:12,110
And let's move into our demo utiles test

4
00:00:12,110 --> 00:00:13,020
and I'll simply add

5
00:00:13,020 --> 00:00:15,000
some print line statements for diagnostics

6
00:00:15,000 --> 00:00:17,900
because we'll use this later when we actually run our test.

7
00:00:19,612 --> 00:00:21,650
I'll add a print line here for our method test,

8
00:00:21,650 --> 00:00:23,203
equals and not equals.

9
00:00:30,410 --> 00:00:32,340
And I'll also do a similar thing here

10
00:00:32,340 --> 00:00:33,993
for test null and not null.

11
00:00:45,064 --> 00:00:46,210
Then I'll run the test real quick

12
00:00:46,210 --> 00:00:47,853
just so I can see the output.

13
00:00:51,100 --> 00:00:53,953
Great, so our diagnostics are working out just fine.

14
00:00:58,270 --> 00:01:00,170
And now I'll add the Before Each.

15
00:01:00,170 --> 00:01:02,610
In this method, I'll use it as common setup code

16
00:01:02,610 --> 00:01:04,083
for creating objects.

17
00:01:08,470 --> 00:01:11,930
The first thing I'll do is I'll define demo utils

18
00:01:11,930 --> 00:01:13,800
as a field in this class

19
00:01:21,860 --> 00:01:23,050
and then I'll delete the line

20
00:01:23,050 --> 00:01:25,240
where I actually construct a new instance of it,

21
00:01:25,240 --> 00:01:27,090
inside of the method.

22
00:01:27,090 --> 00:01:28,323
I'll delete this.

23
00:01:33,120 --> 00:01:36,130
And I'll move down and I'll do a similar delete

24
00:01:36,130 --> 00:01:38,483
in the test null and not null method.

25
00:01:44,250 --> 00:01:47,413
And now I'll add this method here, Before Each.

26
00:01:55,820 --> 00:01:57,380
I'll construct the object here,

27
00:01:57,380 --> 00:02:00,450
demo utils equals new demo utils.

28
00:02:00,450 --> 00:02:03,200
I'll add this print line statement here as a diagnostic

29
00:02:20,730 --> 00:02:23,873
and I'll annotate this method accordingly, Before Each.

30
00:02:26,350 --> 00:02:27,330
So in this method here,

31
00:02:27,330 --> 00:02:29,753
we create the object before each test.

32
00:02:33,130 --> 00:02:34,230
I'll run this unit test

33
00:02:34,230 --> 00:02:36,330
just to see what happens in the background

34
00:02:43,560 --> 00:02:45,110
and I'll see that, okay, great,

35
00:02:45,110 --> 00:02:49,440
this Before Each executed twice because we have two tests.

36
00:02:49,440 --> 00:02:52,930
So before the test of null and not null

37
00:02:52,930 --> 00:02:56,283
and also before the test of equals and not equals.

38
00:02:57,890 --> 00:02:59,020
Okay, this looks good.

39
00:02:59,020 --> 00:03:00,573
It's working as desired.

40
00:03:04,720 --> 00:03:06,760
Now let's go ahead and add support

41
00:03:06,760 --> 00:03:09,183
for the After Each annotation.

42
00:03:22,030 --> 00:03:23,840
I make use of After Each,

43
00:03:23,840 --> 00:03:26,240
this will basically run after each test

44
00:03:27,260 --> 00:03:29,640
and there's not much to tear down in this example

45
00:03:29,640 --> 00:03:30,980
because it's pretty simple.

46
00:03:30,980 --> 00:03:32,950
Normally you would clean up some resources

47
00:03:32,950 --> 00:03:34,500
or clean up test data.

48
00:03:34,500 --> 00:03:35,710
But in this example,

49
00:03:35,710 --> 00:03:37,630
I'm simply just going to do a system out print line

50
00:03:37,630 --> 00:03:40,630
just as a diagnostic, just so that I know that it's running.

51
00:03:45,690 --> 00:03:47,253
And now we run this test.

52
00:03:56,096 --> 00:03:59,630
And we'll see Before Each running test

53
00:03:59,630 --> 00:04:01,790
running After Each, good.

54
00:04:01,790 --> 00:04:03,010
And a similar thing here,

55
00:04:03,010 --> 00:04:05,650
Before Each running test After Each.

56
00:04:05,650 --> 00:04:08,020
Great, so this matches up with the execution diagram

57
00:04:08,020 --> 00:04:09,223
that we saw earlier.

58
00:04:20,180 --> 00:04:21,012
Now what I'd like to do

59
00:04:21,012 --> 00:04:23,420
is make use of Before All and After All

60
00:04:23,420 --> 00:04:26,260
as one time set up and tear down.

61
00:04:26,260 --> 00:04:29,580
So remember, Before All runs before all of the tests

62
00:04:29,580 --> 00:04:32,280
and After All runs after all of the tests

63
00:04:32,280 --> 00:04:34,063
and they run only once.

64
00:04:38,940 --> 00:04:41,873
Let's go ahead and set up a method here for Before All.

65
00:04:57,330 --> 00:04:59,280
This method here was executed only once

66
00:04:59,280 --> 00:05:01,220
before all test methods,

67
00:05:01,220 --> 00:05:03,233
that's the annotation Before All.

68
00:05:25,520 --> 00:05:28,033
And then we'll do a similar thing for After All.

69
00:05:36,670 --> 00:05:39,913
And this will be executed only once after all test methods.

70
00:05:57,410 --> 00:05:59,200
And then also remember, by default,

71
00:05:59,200 --> 00:06:00,773
the methods must be static.

72
00:06:06,330 --> 00:06:08,140
Now, if I go ahead and run this test

73
00:06:18,490 --> 00:06:22,400
and then we'll see Before All at the beginning

74
00:06:22,400 --> 00:06:24,430
then we have each one of the Before Each running

75
00:06:24,430 --> 00:06:25,543
and After Each.

76
00:06:26,460 --> 00:06:28,250
Before Each running after each

77
00:06:28,250 --> 00:06:30,930
and then finally at the end, After All.

78
00:06:30,930 --> 00:06:32,840
And this matches with the execution sequence

79
00:06:32,840 --> 00:06:34,160
that we saw earlier.

80
00:06:34,160 --> 00:06:36,653
So this all looks really good, so, good job.

