1
00:00:01,150 --> 00:00:02,290
All righty, so let's go ahead

2
00:00:02,290 --> 00:00:03,123
and get started.

3
00:00:03,123 --> 00:00:03,956
So here we'll cover

4
00:00:03,956 --> 00:00:06,003
Code Coverage and Test Reports with Maven.

5
00:00:09,610 --> 00:00:11,860
And before we get started I want to go ahead

6
00:00:11,860 --> 00:00:13,030
and just do some housekeeping.

7
00:00:13,030 --> 00:00:15,080
I want to delete some of the previous folders

8
00:00:15,080 --> 00:00:16,079
that were out there.

9
00:00:18,960 --> 00:00:21,650
So when we ran these reports inside of IntelliJ,

10
00:00:21,650 --> 00:00:22,730
we had some folders.

11
00:00:22,730 --> 00:00:24,020
I want to go ahead and delete those now.

12
00:00:24,020 --> 00:00:26,820
So let's go ahead and delete the coverage-report folder.

13
00:00:32,870 --> 00:00:35,460
And also delete the unit-test-results folder

14
00:00:35,460 --> 00:00:37,400
because those are the folders that were created

15
00:00:37,400 --> 00:00:40,913
when we ran all those reports from within IntelliJ.

16
00:00:49,400 --> 00:00:50,810
Okay great, because we don't need those

17
00:00:50,810 --> 00:00:52,710
because we're running everything

18
00:00:52,710 --> 00:00:54,163
from the Maven command line.

19
00:01:06,455 --> 00:01:07,288
All right, so let's go ahead

20
00:01:07,288 --> 00:01:08,770
and use things from command line.

21
00:01:08,770 --> 00:01:10,390
Now, if you're using IntelliJ,

22
00:01:10,390 --> 00:01:12,600
you can actually make use of the terminal

23
00:01:12,600 --> 00:01:14,530
that's built into IntelliJ.

24
00:01:14,530 --> 00:01:17,143
So you can make use of this option if you'd like.

25
00:01:25,700 --> 00:01:28,080
So here, I'll simply just make use of the command line

26
00:01:28,080 --> 00:01:29,800
that's available with my operating system.

27
00:01:29,800 --> 00:01:31,030
So if you're using Mac or Linux,

28
00:01:31,030 --> 00:01:33,270
you can simply open up a terminal window.

29
00:01:33,270 --> 00:01:34,590
If you're using Microsoft Windows,

30
00:01:34,590 --> 00:01:36,420
you can simply open up a command prompt window.

31
00:01:36,420 --> 00:01:39,470
So, the main idea here is make it to the command line

32
00:01:39,470 --> 00:01:41,620
and then we'll run our Maven commands here.

33
00:01:43,160 --> 00:01:44,440
And just as a checkpoint, I'll make sure

34
00:01:44,440 --> 00:01:45,920
that I have Maven installed here.

35
00:01:45,920 --> 00:01:47,450
So just do a Maven dash version.

36
00:01:47,450 --> 00:01:49,960
It'll give you the Maven version number.

37
00:01:49,960 --> 00:01:51,430
You don't need the exact same version

38
00:01:51,430 --> 00:01:53,700
that I have here as long as you're using Maven 3.6

39
00:01:53,700 --> 00:01:55,453
or higher, then you're okay.

40
00:01:59,330 --> 00:02:01,450
So now we want to do is simply move to the directory

41
00:02:01,450 --> 00:02:03,350
where we have our source code project.

42
00:02:03,350 --> 00:02:06,440
So we'll move over to the spring-boot-unit-testing-main

43
00:02:06,440 --> 00:02:09,493
slash 1.0-starting-project.

44
00:02:15,900 --> 00:02:17,950
All right, So I'm in the spring-boot-unit-testing-main

45
00:02:17,950 --> 00:02:18,863
directory.

46
00:02:25,230 --> 00:02:28,563
And then I move into the 1.0-starting-project directory.

47
00:02:32,250 --> 00:02:33,190
And there we go, so we should

48
00:02:33,190 --> 00:02:37,630
simply see a pom.xml source and target directory.

49
00:02:37,630 --> 00:02:38,930
So again, as a checkpoint,

50
00:02:38,930 --> 00:02:41,270
make sure you're in the correct directory here

51
00:02:41,270 --> 00:02:42,843
for this part of the video.

52
00:02:47,620 --> 00:02:48,950
All right, so now what I want to do is simply

53
00:02:48,950 --> 00:02:50,900
just run the Maven test.

54
00:02:50,900 --> 00:02:52,650
So I'll just do a Maven clean test.

55
00:02:53,750 --> 00:02:55,150
It'll go through the process

56
00:02:59,640 --> 00:03:04,640
and notice here at the end it says for test run zero.

57
00:03:04,740 --> 00:03:06,960
So no tests were found.

58
00:03:06,960 --> 00:03:08,290
So remember, by default

59
00:03:08,290 --> 00:03:11,860
Maven will not find JUnit 5 test classes.

60
00:03:11,860 --> 00:03:14,030
We need to do some additional configuration

61
00:03:14,030 --> 00:03:15,183
to make this happen.

62
00:03:18,980 --> 00:03:21,260
So let's swing back over into our IDE

63
00:03:21,260 --> 00:03:24,120
and let's simply open up our pom.xml file.

64
00:03:24,120 --> 00:03:26,913
We'll add support for the Maven Surefire Plugin.

65
00:03:34,420 --> 00:03:36,400
And so right after my dependency section

66
00:03:36,400 --> 00:03:38,290
I'll add a new build section.

67
00:03:38,290 --> 00:03:40,420
So we're adding some custom functionality

68
00:03:40,420 --> 00:03:42,513
to the Maven build process.

69
00:03:52,590 --> 00:03:53,890
And I'll set up plugins

70
00:03:53,890 --> 00:03:56,003
and I'll define the Maven Surefire Plugin.

71
00:04:17,290 --> 00:04:20,620
So for the group ID, we'll have org apache maven plugins.

72
00:04:20,620 --> 00:04:22,830
I'll go ahead and fix the artifact ID.

73
00:04:22,830 --> 00:04:26,233
It should say maven surefire plugin.

74
00:04:33,940 --> 00:04:35,680
And then I'll give the appropriate version

75
00:04:35,680 --> 00:04:37,463
to use for the Surefire Plugin.

76
00:04:56,230 --> 00:04:57,470
Okay great, so let's move back over

77
00:04:57,470 --> 00:05:00,080
to our terminal window and let's run our test again.

78
00:05:00,080 --> 00:05:01,693
See if it can find the test now.

79
00:05:10,130 --> 00:05:11,210
And then we're taking a look

80
00:05:11,210 --> 00:05:12,790
at the test results and success.

81
00:05:12,790 --> 00:05:14,290
Great. So it found the test.

82
00:05:14,290 --> 00:05:17,110
It ran those 10 test and everything worked out fine.

83
00:05:17,110 --> 00:05:17,943
So this is really good.

84
00:05:17,943 --> 00:05:20,160
So we've made the configuration on Maven,

85
00:05:20,160 --> 00:05:22,580
we've added support for the Maven Surefire Plugin.

86
00:05:22,580 --> 00:05:26,600
So now, we can access or run those JUnit 5 tests.

87
00:05:26,600 --> 00:05:27,433
Good job.

