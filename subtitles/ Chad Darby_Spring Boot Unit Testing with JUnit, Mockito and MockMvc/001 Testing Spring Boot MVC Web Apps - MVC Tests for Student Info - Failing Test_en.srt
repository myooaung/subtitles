1
00:00:01,060 --> 00:00:02,769
In this video we'll cover MVC Tests

2
00:00:02,769 --> 00:00:04,763
for Student Information.

3
00:00:07,689 --> 00:00:09,900
We'd like to have MVC tests for student information

4
00:00:09,900 --> 00:00:11,760
to cover these cases.

5
00:00:11,760 --> 00:00:13,340
If we have a valid student ID,

6
00:00:13,340 --> 00:00:15,900
we'd like to return the view name, 'studentInformation',

7
00:00:15,900 --> 00:00:17,680
or make use of Thymeleaf templates,

8
00:00:17,680 --> 00:00:20,723
and this will map over to studentinformation.HTML.

9
00:00:21,790 --> 00:00:23,398
If we have an invalid student ID,

10
00:00:23,398 --> 00:00:25,670
then we'd like to return the view name of, 'error',

11
00:00:25,670 --> 00:00:27,780
and this will map over to our Thymeleaf template,

12
00:00:27,780 --> 00:00:28,913
error.HTML.

13
00:00:33,200 --> 00:00:35,140
And now, we have some basic functionality

14
00:00:35,140 --> 00:00:36,911
in place right now for student information,

15
00:00:36,911 --> 00:00:39,443
we can view this in our Gradebook Controller.

16
00:00:42,200 --> 00:00:43,970
Down near the bottom of our Gradebook Controller,

17
00:00:43,970 --> 00:00:44,803
we have this method here,

18
00:00:44,803 --> 00:00:47,630
'studentInformation', basically reads information

19
00:00:47,630 --> 00:00:49,370
and simply returns student information.

20
00:00:49,370 --> 00:00:51,090
But at the moment, it doesn't really populate any data,

21
00:00:51,090 --> 00:00:55,577
any attributes, it's kind of just blank right now.

22
00:00:55,577 --> 00:00:58,280
Now to test this, we'd like to write a failing test first.

23
00:00:58,280 --> 00:01:00,180
So if we pass in a valid student ID,

24
00:01:00,180 --> 00:01:01,630
we should get 'studentInformation'.

25
00:01:01,630 --> 00:01:04,269
If we pass in an invalid student ID, we should get 'error'.

26
00:01:04,269 --> 00:01:06,148
So let's go ahead and write our failing test,

27
00:01:06,148 --> 00:01:08,993
and then we'll go back and enhance our code accordingly.

28
00:01:21,860 --> 00:01:24,210
This is the first test of our valid student ID.

29
00:01:38,389 --> 00:01:39,222
And our tests here,

30
00:01:39,222 --> 00:01:41,550
the first thing we want to do is 'assertTrue',

31
00:01:41,550 --> 00:01:44,360
so we want to make sure that the student exists.

32
00:01:44,360 --> 00:01:46,067
So we're doing a 'findById' of one.

33
00:01:51,790 --> 00:01:54,620
And then we actually perform the HTTP request.

34
00:01:54,620 --> 00:01:58,310
So we do a 'GET' on that student information slash ID,

35
00:01:58,310 --> 00:01:59,973
or pass in an ID of one.

36
00:02:02,210 --> 00:02:03,460
And you've seen this code before.

37
00:02:03,460 --> 00:02:05,643
We're simply making an HTTP request.

38
00:02:32,850 --> 00:02:35,503
And then we'll retrieve the 'ModelAndView'.

39
00:02:42,620 --> 00:02:45,237
And now we'll assert the view name to make sure that

40
00:02:45,237 --> 00:02:48,510
we have the view name of 'studentInformation',

41
00:02:48,510 --> 00:02:50,763
because we passed in a valid student ID.

42
00:02:53,670 --> 00:02:55,670
Alrighty, so this code looks pretty good.

43
00:02:55,670 --> 00:02:57,220
Now let's go ahead and write a test

44
00:02:57,220 --> 00:02:59,583
for the case of an invalid student ID.

45
00:03:20,300 --> 00:03:22,250
And the first thing we want to do is 'assertFalse',

46
00:03:22,250 --> 00:03:24,990
so we want to make sure that the student does not exist.

47
00:03:24,990 --> 00:03:27,130
So we're doing a 'findById' of zero,

48
00:03:27,130 --> 00:03:29,453
so zero's an invalid student ID.

49
00:03:36,180 --> 00:03:39,573
And we'll perform a similar HTP request, like we did above.

50
00:03:54,560 --> 00:03:57,363
We pass in the invalid student ID of zero.

51
00:04:13,360 --> 00:04:15,413
Next, we get the 'ModelAndView',

52
00:04:21,290 --> 00:04:22,990
and then we assert the view name.

53
00:04:22,990 --> 00:04:25,328
So in this case with an invalid student ID,

54
00:04:25,328 --> 00:04:27,627
the view name should be 'error'.

55
00:04:34,860 --> 00:04:37,527
Let's go ahead and run our test.

56
00:04:45,740 --> 00:04:48,520
One of our tests will fail, student information

57
00:04:48,520 --> 00:04:49,570
for the error.

58
00:04:49,570 --> 00:04:51,819
Here, we gave an invalid student ID,

59
00:04:51,819 --> 00:04:54,660
but it returned 'studentInformation'.

60
00:04:54,660 --> 00:04:57,490
We expected it to return 'error', but at the moment

61
00:04:57,490 --> 00:05:00,750
our code doesn't really check for invalid student ID's

62
00:05:00,750 --> 00:05:02,390
for student information.

63
00:05:02,390 --> 00:05:03,223
This is fine.

64
00:05:03,223 --> 00:05:05,450
Failing tests first, we'll go and modify our code

65
00:05:05,450 --> 00:05:08,010
to make it work, and then we'll come back and test again.

66
00:05:08,010 --> 00:05:09,810
We'll cover that portion in the next video.

67
00:05:09,810 --> 00:05:10,910
So I'll see you there.

