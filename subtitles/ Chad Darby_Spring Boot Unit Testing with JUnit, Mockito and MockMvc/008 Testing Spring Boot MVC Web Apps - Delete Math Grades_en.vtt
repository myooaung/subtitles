WEBVTT
1
00:00:01.120 --> 00:00:03.670
In this video, we're going to cover deleting grades.

2
00:00:07.240 --> 00:00:09.150
Currently the app does not delete grades.

3
00:00:09.150 --> 00:00:10.420
And we're going to apply TDD

4
00:00:10.420 --> 00:00:12.450
to implement this new functionality.

5
00:00:12.450 --> 00:00:13.283
What we'll do is

6
00:00:13.283 --> 00:00:15.260
we'll focus on the backend coding for now,

7
00:00:15.260 --> 00:00:17.150
and then we'll come back to the UI front end

8
00:00:17.150 --> 00:00:18.103
a little bit later.

9
00:00:19.560 --> 00:00:22.047
All right. So let's go ahead and swing over to our IDE.

10
00:00:25.752 --> 00:00:26.940
And I like to add my work here

11
00:00:26.940 --> 00:00:28.993
in this student grade service test.

12
00:00:30.280 --> 00:00:32.490
Let me zoom in for a bit.

13
00:00:32.490 --> 00:00:34.293
And I'll add this new test method.

14
00:00:42.880 --> 00:00:45.033
I'll name the method delete grade service,

15
00:00:47.700 --> 00:00:49.360
and I'll simply go through an attempt

16
00:00:49.360 --> 00:00:50.743
to delete a given grade.

17
00:00:53.140 --> 00:00:54.453
I have assert equals one,

18
00:00:54.453 --> 00:00:56.403
student grade service delete.

19
00:01:00.120 --> 00:01:02.963
I pass in the grade id and the grade type.

20
00:01:05.590 --> 00:01:06.490
If this is successful,

21
00:01:06.490 --> 00:01:09.070
it should return the student id after the delete.

22
00:01:09.070 --> 00:01:10.560
So the expected of one,

23
00:01:10.560 --> 00:01:12.560
that's the actual student id.

24
00:01:12.560 --> 00:01:15.850
When we say student service dot delete grade one, math,

25
00:01:15.850 --> 00:01:18.170
that's the actual grade id.

26
00:01:18.170 --> 00:01:19.470
So two different ids here.

27
00:01:23.870 --> 00:01:24.703
All righty.

28
00:01:24.703 --> 00:01:25.610
So it says that it can't resolve

29
00:01:25.610 --> 00:01:27.560
the method delete grade in student and grade service.

30
00:01:27.560 --> 00:01:29.240
That means we need to add this method.

31
00:01:29.240 --> 00:01:30.590
So moving to our service,

32
00:01:30.590 --> 00:01:32.023
student and grade service.

33
00:01:39.200 --> 00:01:40.180
And let's move down here.

34
00:01:40.180 --> 00:01:41.830
And let's create this new method.

35
00:01:53.340 --> 00:01:54.910
The method signature, delete grade,

36
00:01:54.910 --> 00:01:57.980
and id, string grade type.

37
00:01:57.980 --> 00:02:00.100
So the id coming in is the actual grade id.

38
00:02:00.100 --> 00:02:02.010
And we'll return the student id

39
00:02:02.010 --> 00:02:03.670
once we perform a delete.

40
00:02:03.670 --> 00:02:04.560
At the moment right now,

41
00:02:04.560 --> 00:02:06.740
just simply say student id equals zero,

42
00:02:06.740 --> 00:02:08.630
and then return student id.

43
00:02:08.630 --> 00:02:10.020
Again, failing test, right?

44
00:02:10.020 --> 00:02:11.200
Nothing's going to really work,

45
00:02:11.200 --> 00:02:13.600
but at least we have things stubbed out for now.

46
00:02:19.540 --> 00:02:21.190
Let's go ahead and run this test.

47
00:02:26.640 --> 00:02:28.493
And of course we expect this to fail.

48
00:02:30.430 --> 00:02:32.560
We expected a one, but the actual zero.

49
00:02:32.560 --> 00:02:33.750
Okay. We totally understand that

50
00:02:33.750 --> 00:02:36.183
because we simply just have this stubbed out for now.

51
00:02:41.030 --> 00:02:42.180
Let's go ahead and move in here

52
00:02:42.180 --> 00:02:44.110
and actually write the code and delete grade.

53
00:02:44.110 --> 00:02:46.540
So if the grade type equals math,

54
00:02:46.540 --> 00:02:49.783
then we'll actually retrieve the grade using the DAO.

55
00:03:06.400 --> 00:03:09.610
I'll use this math grade DAO dot find by id.

56
00:03:09.610 --> 00:03:11.053
Use that grade id.

57
00:03:17.030 --> 00:03:18.350
If that grade is not present,

58
00:03:18.350 --> 00:03:20.970
meaning that it was not found,

59
00:03:20.970 --> 00:03:23.740
then we return student id,

60
00:03:23.740 --> 00:03:26.150
basically the student id of zero

61
00:03:26.150 --> 00:03:27.753
because we didn't find it.

62
00:03:30.490 --> 00:03:35.490
Next, we'll say student id equals grade dot get student id.

63
00:03:35.760 --> 00:03:38.380
So we actually get the actual student id

64
00:03:38.380 --> 00:03:40.210
for that given grade.

65
00:03:40.210 --> 00:03:42.020
Next, we actually delete the grade by saying

66
00:03:42.020 --> 00:03:44.159
math grade DAO dot delete by id.

67
00:03:44.159 --> 00:03:45.633
Pass in that id.

68
00:03:46.910 --> 00:03:49.160
And then finally we return student id.

69
00:03:49.160 --> 00:03:50.320
So that's the whole idea.

70
00:03:50.320 --> 00:03:51.830
We've deleted the grade.

71
00:03:51.830 --> 00:03:54.683
We simply returned the student id for that given grade.

72
00:03:57.340 --> 00:03:58.360
Now let's swing back over here,

73
00:03:58.360 --> 00:03:59.833
and lets run our test.

74
00:04:05.920 --> 00:04:06.960
And excellent.

75
00:04:06.960 --> 00:04:08.400
This test passes.

76
00:04:08.400 --> 00:04:09.233
So I'm happy.

77
00:04:09.233 --> 00:04:11.323
This part works out just fine for us.

78
00:04:12.540 --> 00:04:13.900
Now this covers math grades.

79
00:04:13.900 --> 00:04:15.310
In the next video, we'll go through

80
00:04:15.310 --> 00:04:18.279
an (indistinct) coding here for history and science grades.

81
00:04:18.279 --> 00:04:20.503
So I'll see you in the next video.

