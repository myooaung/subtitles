1
00:00:01,240 --> 00:00:02,969
Okay. In this video, we're going to add the

2
00:00:02,969 --> 00:00:04,880
Maven Surefire Report Plugin to

3
00:00:04,880 --> 00:00:07,833
generate HTML unit test reports.

4
00:00:10,170 --> 00:00:11,820
So let's move in here in our pom.xml.

5
00:00:11,820 --> 00:00:12,653
Let's go ahead

6
00:00:12,653 --> 00:00:16,079
and copy this existing plugin section and paste it.

7
00:00:16,079 --> 00:00:19,180
We'll make some small modifications to it.

8
00:00:19,180 --> 00:00:21,860
So we have everything here looks about, right.

9
00:00:21,860 --> 00:00:24,120
Instead of the Maven Surefire Plugin.

10
00:00:24,120 --> 00:00:27,303
We're going to say the Maven Surefire Report Plugin.

11
00:00:30,100 --> 00:00:31,700
And that's really the only modification that

12
00:00:31,700 --> 00:00:32,533
we need to make there.

13
00:00:32,533 --> 00:00:34,290
So you can keep the same version and everything,

14
00:00:34,290 --> 00:00:36,913
just Maven SureFire Report Plugin.

15
00:00:43,610 --> 00:00:45,920
And we also need to do some configuration here

16
00:00:45,920 --> 00:00:48,453
for the actual execution of this plugin.

17
00:00:56,190 --> 00:00:57,980
So during Maven's test phase,

18
00:00:57,980 --> 00:00:59,650
we want to execute the plugin goal

19
00:00:59,650 --> 00:01:02,680
maven-surefire-report-plugin:report.

20
00:01:02,680 --> 00:01:05,760
So I'll set this up here in this part of the file.

21
00:01:05,760 --> 00:01:07,973
So an execution I give the phase of test,

22
00:01:14,900 --> 00:01:17,380
and then I tell it which goal to execute

23
00:01:17,380 --> 00:01:19,433
during this given phase.

24
00:01:27,930 --> 00:01:31,020
So again, this configuration says during Maven's test phase,

25
00:01:31,020 --> 00:01:32,320
execute the plugin goal

26
00:01:32,320 --> 00:01:35,680
maven-surefire-report-plugin:report.

27
00:01:35,680 --> 00:01:37,930
And that's how we configure this accordingly.

28
00:01:38,910 --> 00:01:41,810
And we're simply just adding some custom build functionality

29
00:01:41,810 --> 00:01:43,543
during the Maven process.

30
00:01:46,570 --> 00:01:47,950
Okay. So let's go ahead and test this out.

31
00:01:47,950 --> 00:01:51,040
Let's swing back over to our terminal window here.

32
00:01:51,040 --> 00:01:52,510
And then I'll do a Maven clean test.

33
00:01:52,510 --> 00:01:54,420
So this will run the test and executes the

34
00:01:54,420 --> 00:01:58,020
Surefire Report Plugin that'll generate the HTML reports.

35
00:01:58,020 --> 00:01:59,340
And this is based on the configuration

36
00:01:59,340 --> 00:02:01,943
that we just set up on that pom.xml file.

37
00:02:07,000 --> 00:02:08,509
So to go ahead and do its work

38
00:02:08,509 --> 00:02:10,410
and we have a build success at the end.

39
00:02:10,410 --> 00:02:11,360
Okay. That's great.

40
00:02:11,360 --> 00:02:12,193
I like it.

41
00:02:14,950 --> 00:02:16,570
And then we need to do one other command here

42
00:02:16,570 --> 00:02:19,520
to give us access to some of the CSS resources.

43
00:02:19,520 --> 00:02:21,010
So here I'll say Maven site

44
00:02:23,940 --> 00:02:27,273
dash degenerate reports equals false.

45
00:02:30,580 --> 00:02:31,413
The Maven site,

46
00:02:31,413 --> 00:02:34,440
that'll add the web site resources for images, CSS

47
00:02:34,440 --> 00:02:35,363
and so on.

48
00:02:36,340 --> 00:02:38,240
And then the dash degenerate reports equals

49
00:02:38,240 --> 00:02:39,073
false basically says,

50
00:02:39,073 --> 00:02:42,690
"Hey, don't overwrite the existing HTML reports",

51
00:02:42,690 --> 00:02:45,140
because we did that in the previous step already.

52
00:02:47,830 --> 00:02:50,000
And this is really just a workaround that we need to do

53
00:02:50,000 --> 00:02:52,773
in order to get access to those images and CSS.

54
00:02:53,890 --> 00:02:55,190
Okay. So that's complete.

55
00:02:55,190 --> 00:02:56,023
So that's awesome.

56
00:02:56,023 --> 00:02:57,490
We're in good shape here.

57
00:02:57,490 --> 00:02:59,630
Now let's swing back over to our file system

58
00:02:59,630 --> 00:03:01,230
and take a look at these new files.

59
00:03:01,230 --> 00:03:03,050
So let's move into our project directory,

60
00:03:03,050 --> 00:03:05,090
spring-boot-unit-testing-main.

61
00:03:05,090 --> 00:03:06,690
I'll open up this directory here,

62
00:03:06,690 --> 00:03:08,483
1.00-starting-project.

63
00:03:09,890 --> 00:03:12,305
And then I want to move into this directory here,

64
00:03:12,305 --> 00:03:14,480
target/site/surefire-report dot HTML

65
00:03:16,572 --> 00:03:17,672
It's under target/site

66
00:03:23,522 --> 00:03:25,232
surefire-report dot HTML

67
00:03:25,232 --> 00:03:26,130
That's step files.

68
00:03:26,130 --> 00:03:28,323
Let's go ahead and open this up on our web browser.

69
00:03:31,650 --> 00:03:32,720
Okay. This looks great.

70
00:03:32,720 --> 00:03:36,160
So this is an HTML report of our unit test results.

71
00:03:36,160 --> 00:03:37,980
So it'll tell you how many tests passed,

72
00:03:37,980 --> 00:03:40,941
if any failed, the actual package list

73
00:03:40,941 --> 00:03:43,090
and some actual details on the test cases

74
00:03:43,090 --> 00:03:45,130
as far as each test case that ran

75
00:03:45,130 --> 00:03:46,280
and the result of that.

76
00:03:47,290 --> 00:03:48,123
This looks really good.

77
00:03:48,123 --> 00:03:49,680
I'm happy with this so far.

78
00:03:49,680 --> 00:03:50,830
And again, the nice thing about it,

79
00:03:50,830 --> 00:03:51,740
the reason we're doing all this is

80
00:03:51,740 --> 00:03:55,210
that now we can view these reports outside of the IDE.

81
00:03:55,210 --> 00:03:58,120
There's no need for us to run IntelliJ or any other IDE.

82
00:03:58,120 --> 00:03:59,490
We can run this independently

83
00:03:59,490 --> 00:04:01,510
of those tools from the command line.

84
00:04:01,510 --> 00:04:04,100
This is very useful in the Devop's process

85
00:04:04,100 --> 00:04:05,480
if you're doing continuous integration,

86
00:04:05,480 --> 00:04:06,720
continuous deployment.

87
00:04:06,720 --> 00:04:07,640
This given document,

88
00:04:07,640 --> 00:04:10,080
you can share with your management team, QA team.

89
00:04:10,080 --> 00:04:10,913
So on.

