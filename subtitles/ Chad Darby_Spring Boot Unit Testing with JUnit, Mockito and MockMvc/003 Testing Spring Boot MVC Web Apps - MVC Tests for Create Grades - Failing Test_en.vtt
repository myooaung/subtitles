WEBVTT
1
00:00:01.210 --> 00:00:04.713
In this video we'll create grades with the MVC Controller.

2
00:00:07.910 --> 00:00:09.140
Currently the application

3
00:00:09.140 --> 00:00:12.640
doesn't support creating new grades via the MVC Controller.

4
00:00:12.640 --> 00:00:14.524
We only have it on the backend service.

5
00:00:14.524 --> 00:00:15.357
What we'll do

6
00:00:15.357 --> 00:00:17.253
is we'll add support to the MVC Controller

7
00:00:17.253 --> 00:00:21.083
and we'll apply TDD to add support for this functionality.

8
00:00:22.846 --> 00:00:24.860
All right, so let's swing into our IDE

9
00:00:26.257 --> 00:00:27.980
and let's zoom in here

10
00:00:27.980 --> 00:00:31.353
and I'll add this new test for creating grades.

11
00:00:44.640 --> 00:00:47.390
And this first test will be for creating a valid grade.

12
00:00:52.890 --> 00:00:53.860
The first thing I want to do

13
00:00:53.860 --> 00:00:57.083
is assert that the student ID of one exists.

14
00:01:06.606 --> 00:01:08.780
And then I like to get the student information

15
00:01:08.780 --> 00:01:10.253
for that student ID.

16
00:01:19.568 --> 00:01:21.890
I'll make use of my student service

17
00:01:21.890 --> 00:01:23.810
but notice here that student service is red

18
00:01:23.810 --> 00:01:26.133
we need to inject that service into our test.

19
00:01:28.000 --> 00:01:29.850
So let me scroll up here for a second

20
00:01:40.611 --> 00:01:44.444
and I'll inject the student and grade service.

21
00:01:50.983 --> 00:01:53.900
All righty, that coding looks good.

22
00:01:55.470 --> 00:01:56.430
Now, if we move back down

23
00:01:56.430 --> 00:01:59.590
that should take care of that one error.

24
00:01:59.590 --> 00:02:01.140
All right. So we're good there.

25
00:02:02.482 --> 00:02:04.060
And now what I'd like to do

26
00:02:04.060 --> 00:02:05.830
is retrieve the grades for this student.

27
00:02:05.830 --> 00:02:07.160
I like to retrieve the math grade

28
00:02:07.160 --> 00:02:09.710
and sure that we only have one grade at the moment.

29
00:02:26.160 --> 00:02:28.250
Next, I'll perform an HTTP request.

30
00:02:28.250 --> 00:02:30.920
I'll make a post/grades

31
00:02:30.920 --> 00:02:32.510
and I'll send over three parameters.

32
00:02:32.510 --> 00:02:35.733
I'll send over the grade, the grade type and the student ID.

33
00:04:03.990 --> 00:04:05.870
All righty, this code looks pretty good

34
00:04:05.870 --> 00:04:07.283
for sending over the post.

35
00:04:09.570 --> 00:04:11.660
Next I'll retrieve the model and view

36
00:04:22.602 --> 00:04:26.769
and then I'll go through and assert the view name.

37
00:04:28.885 --> 00:04:31.993
Make sure that the view name is student information.

38
00:04:35.081 --> 00:04:38.740
And then I'll retrieve the student information again

39
00:04:38.740 --> 00:04:40.793
using the student ID of one.

40
00:04:42.470 --> 00:04:45.808
And at this point we should have two grades for math.

41
00:04:45.808 --> 00:04:47.670
So I'll make use of this assert here.

42
00:04:47.670 --> 00:04:52.670
Assert equals two student.get grades, get math results.size.

43
00:04:53.604 --> 00:04:54.990
And this will let us know that,

44
00:04:54.990 --> 00:04:56.680
hey, we did add a new grade

45
00:04:56.680 --> 00:04:58.890
because we started off with just one grade.

46
00:04:58.890 --> 00:05:00.650
We went through the process of adding a grade

47
00:05:00.650 --> 00:05:03.893
or creating a grade, and now we should have two grades.

48
00:05:07.518 --> 00:05:08.960
And gimme one second here,

49
00:05:08.960 --> 00:05:11.770
I'll fix this issue here with perform.

50
00:05:11.770 --> 00:05:13.100
We have an unhandled exception.

51
00:05:13.100 --> 00:05:16.100
We'll simply just add the exception to the method signature.

52
00:05:17.831 --> 00:05:20.433
Excellent. So this coding here looks pretty good.

53
00:05:22.113 --> 00:05:24.700
Now let's go ahead and run this test.

54
00:05:24.700 --> 00:05:26.960
And as a heads up, right, this is a failing test.

55
00:05:26.960 --> 00:05:28.023
It's going to fail.

56
00:05:32.836 --> 00:05:35.490
And we see that it fails here with 404

57
00:05:35.490 --> 00:05:37.160
and that's because we haven't implemented

58
00:05:37.160 --> 00:05:38.120
the post method yet

59
00:05:38.120 --> 00:05:39.270
but no worries right?

60
00:05:39.270 --> 00:05:40.103
Failing test first,

61
00:05:40.103 --> 00:05:41.060
in the next video

62
00:05:41.060 --> 00:05:43.240
we'll go ahead and write the code to make this test pass.

63
00:05:43.240 --> 00:05:44.520
We'll go from red to green.

64
00:05:44.520 --> 00:05:47.673
Alrighty, I'll see you in the next video, yo yo.

