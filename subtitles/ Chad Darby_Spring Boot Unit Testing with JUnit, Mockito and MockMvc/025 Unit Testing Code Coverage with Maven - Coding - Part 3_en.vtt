WEBVTT
1
00:00:01.130 --> 00:00:01.963
Okay, great.

2
00:00:01.963 --> 00:00:04.300
We're able to generate reports, but there's one other thing

3
00:00:04.300 --> 00:00:06.910
we need to talk about regarding test failure.

4
00:00:06.910 --> 00:00:09.363
Let's swing over here and chat about it real quick.

5
00:00:10.880 --> 00:00:13.110
So remember in the previous slides I said

6
00:00:13.110 --> 00:00:15.330
by default, the Maven Surefire plugin

7
00:00:15.330 --> 00:00:19.690
will not generate reports if tests fail.

8
00:00:19.690 --> 00:00:21.870
However, there may be scenarios where I'd like

9
00:00:21.870 --> 00:00:25.690
to get the report in the event of a success or failure.

10
00:00:25.690 --> 00:00:28.610
Okay, so to generate reports if tests pass or fail,

11
00:00:28.610 --> 00:00:31.170
we need to add one additional configuration

12
00:00:31.170 --> 00:00:32.470
and so on our pom.xml file,

13
00:00:32.470 --> 00:00:35.410
we need to add this section here of "testFailureIgnore"

14
00:00:35.410 --> 00:00:37.210
and set the value to true.

15
00:00:37.210 --> 00:00:39.310
Okay, let's go ahead and swing into our pom.xml

16
00:00:39.310 --> 00:00:40.360
and make that update.

17
00:00:45.950 --> 00:00:48.080
All right, so before we make that configuration,

18
00:00:48.080 --> 00:00:50.090
let's actually go in and break our codes

19
00:00:50.090 --> 00:00:52.810
so we actually have a failing test, and then we can use that

20
00:00:52.810 --> 00:00:55.300
for kind of verifying that we can get a report

21
00:00:55.300 --> 00:00:56.493
with the failing test.

22
00:01:02.090 --> 00:01:03.660
So let's move back into our project.

23
00:01:03.660 --> 00:01:05.473
Let's open up our "DemoUtilsTest"

24
00:01:07.260 --> 00:01:10.880
and we have some test cases in place already

25
00:01:10.880 --> 00:01:15.710
and I'd like to have this testMultiply fail.

26
00:01:15.710 --> 00:01:16.543
So let's go ahead

27
00:01:16.543 --> 00:01:20.180
and let's modify our source code for that multiply method.

28
00:01:20.180 --> 00:01:22.710
So I'll open up DemoUtils.java

29
00:01:26.950 --> 00:01:29.183
and I'll move to this multiply method.

30
00:01:30.180 --> 00:01:32.890
And again, we'll just kind of break it on purpose.

31
00:01:32.890 --> 00:01:37.130
So it's A times B times B times B, I don't know

32
00:01:37.130 --> 00:01:39.490
just doing something on purpose here,

33
00:01:39.490 --> 00:01:41.840
making sure that we send back the wrong result.

34
00:01:43.900 --> 00:01:47.030
And with this in place or anything similar to this

35
00:01:47.030 --> 00:01:50.450
this test should fail when we actually run it.

36
00:01:50.450 --> 00:01:52.620
So I'll just run it real quick in the IDE

37
00:01:56.040 --> 00:01:58.710
and yes, so we do have that one test that's failing

38
00:01:58.710 --> 00:02:01.550
and that's on the actual multiply test.

39
00:02:01.550 --> 00:02:02.383
Okay, great.

40
00:02:02.383 --> 00:02:03.260
So we did break it

41
00:02:05.180 --> 00:02:06.808
it's broken as desired.

42
00:02:06.808 --> 00:02:07.730
(laughs)

43
00:02:07.730 --> 00:02:08.590
Pretty funny.

44
00:02:08.590 --> 00:02:12.080
Now let's swing back into our Terminal window

45
00:02:12.080 --> 00:02:13.640
and then

46
00:02:13.640 --> 00:02:17.803
let's go ahead and run our Maven test.

47
00:02:19.590 --> 00:02:20.913
So do a clean test.

48
00:02:24.630 --> 00:02:27.580
So the test failed here at the command line, which is good.

49
00:02:28.870 --> 00:02:31.070
Now let's move back into our browser

50
00:02:31.070 --> 00:02:33.410
and let's reload our report.

51
00:02:33.410 --> 00:02:35.700
And nothing's found because by default

52
00:02:35.700 --> 00:02:38.920
Maven Surefire plugin does not generate reports

53
00:02:38.920 --> 00:02:40.050
if tests fail.

54
00:02:40.050 --> 00:02:41.370
So that's why you kind of get this file

55
00:02:41.370 --> 00:02:43.250
not found or 404 issue.

56
00:02:43.250 --> 00:02:44.083
Okay.

57
00:02:44.083 --> 00:02:46.360
So what we'd like to do is configure this project

58
00:02:46.360 --> 00:02:48.490
where it'll still generate the report

59
00:02:48.490 --> 00:02:51.003
regardless if tests passed or failed.

60
00:02:52.560 --> 00:02:54.430
So let's move back into our pom.xml

61
00:02:54.430 --> 00:02:57.173
and let's make this one small configuration update.

62
00:03:00.790 --> 00:03:02.430
So let's move up to the section here

63
00:03:02.430 --> 00:03:05.920
for our Maven Surefire plugin.

64
00:03:05.920 --> 00:03:08.113
And then we'll add a new configuration.

65
00:03:16.410 --> 00:03:19.160
And for this item here, "testFailureIgnore"

66
00:03:19.160 --> 00:03:21.070
we're going to set that value to true.

67
00:03:21.070 --> 00:03:23.410
So basically this means generate reports

68
00:03:23.410 --> 00:03:25.793
if test pass or fail.

69
00:03:38.380 --> 00:03:41.310
And let's swing back here into our Terminal window

70
00:03:41.310 --> 00:03:43.163
let's run our test one more time.

71
00:03:51.370 --> 00:03:52.230
Okay, that part works.

72
00:03:52.230 --> 00:03:54.030
That's where our Maven site come in.

73
00:03:57.580 --> 00:03:59.063
Excellent, that's fine.

74
00:04:03.190 --> 00:04:05.400
Let's come over here and reload this test report

75
00:04:05.400 --> 00:04:08.500
on our browser and success!

76
00:04:08.500 --> 00:04:11.360
Note, test failures are now reported, okay?

77
00:04:11.360 --> 00:04:15.010
And we actually do have a report, even in event of failures.

78
00:04:15.010 --> 00:04:16.800
It says how many tests that were ran,

79
00:04:16.800 --> 00:04:19.079
how many failures that we had

80
00:04:19.079 --> 00:04:22.220
and then they'll even give us details

81
00:04:22.220 --> 00:04:24.280
on each one of the test case.

82
00:04:24.280 --> 00:04:25.113
And it'll tell us,

83
00:04:25.113 --> 00:04:28.567
"Hey, that testMultiply test case failed."

84
00:04:29.480 --> 00:04:30.450
Then we can select that link

85
00:04:30.450 --> 00:04:32.370
and kind of drill down and get more details on it.

86
00:04:32.370 --> 00:04:33.203
So this is excellent.

87
00:04:33.203 --> 00:04:35.270
So we're able to get unit test reports

88
00:04:35.270 --> 00:04:36.840
even in event of the failure.

89
00:04:36.840 --> 00:04:38.670
And we saw that additional configuration

90
00:04:38.670 --> 00:04:39.700
that we needed for that.

91
00:04:39.700 --> 00:04:41.030
This looks really good.

92
00:04:41.030 --> 00:04:41.863
I like it.

