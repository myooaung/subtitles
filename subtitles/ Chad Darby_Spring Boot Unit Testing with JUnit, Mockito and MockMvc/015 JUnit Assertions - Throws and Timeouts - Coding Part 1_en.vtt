WEBVTT
1
00:00:01.315 --> 00:00:03.070
In this video we'll write some test cases

2
00:00:03.070 --> 00:00:04.863
for the Assert for Throws.

3
00:00:10.720 --> 00:00:13.713
Let's go ahead and move over into our class DemoUtils,

4
00:00:15.500 --> 00:00:18.300
and let's take a look at the code that we're going to test.

5
00:00:26.220 --> 00:00:29.920
We'll move down here to this method, throwException,

6
00:00:29.920 --> 00:00:32.640
and we want to verify that this method throws an exception

7
00:00:32.640 --> 00:00:34.543
for values less than zero.

8
00:00:38.680 --> 00:00:41.010
All righty, go ahead and move back over to our test class

9
00:00:41.010 --> 00:00:42.760
and let's create a new test method.

10
00:01:11.330 --> 00:01:13.783
And then in my coding here I'll say assertThrows.

11
00:01:15.510 --> 00:01:19.573
I give the actual Exception.class that I'm checking for.

12
00:01:24.300 --> 00:01:26.423
And then I set up my Lambda expression.

13
00:01:32.170 --> 00:01:33.620
And inside of the curly braces here,

14
00:01:33.620 --> 00:01:35.173
we make that method call.

15
00:01:37.360 --> 00:01:39.610
So we'll call that, demoUtils.throwException.

16
00:01:43.290 --> 00:01:44.733
I pass in a value.

17
00:01:46.460 --> 00:01:48.620
And so if I pass in a value less than zero

18
00:01:48.620 --> 00:01:52.003
or a negative value, then this should throw that exception.

19
00:01:59.680 --> 00:02:02.430
And then I'll do a similar thing here for DoesNotThrow.

20
00:02:12.060 --> 00:02:13.777
So for DoesNotThrow,

21
00:02:15.280 --> 00:02:18.313
all I have to do is give the actual Lambda expression.

22
00:02:25.710 --> 00:02:28.150
And then I give demoUtils.throwException,

23
00:02:28.150 --> 00:02:30.160
I'll pass in negative one.

24
00:02:30.160 --> 00:02:32.530
I'm actually trying to break it on purpose.

25
00:02:32.530 --> 00:02:35.590
I should actually pass in a positive number,

26
00:02:35.590 --> 00:02:37.010
but I'll pass in negative one

27
00:02:37.010 --> 00:02:38.880
because I want to see the test fail

28
00:02:38.880 --> 00:02:41.683
and I'll fix it and then see it run successfully.

29
00:02:56.549 --> 00:03:00.590
So running the test and I see that this fails.

30
00:03:00.590 --> 00:03:04.320
Over here it says should not throw an exception,

31
00:03:04.320 --> 00:03:06.113
unexpected exception thrown.

32
00:03:07.130 --> 00:03:09.810
The values should be greater than or equal to zero.

33
00:03:09.810 --> 00:03:11.490
All right, that's fine.

34
00:03:11.490 --> 00:03:13.280
I knew that was going to happen.

35
00:03:13.280 --> 00:03:14.950
And I'll go ahead and give it a positive number.

36
00:03:14.950 --> 00:03:16.800
So I'll give it the number of five

37
00:03:16.800 --> 00:03:19.793
and then run the test again, and check the results.

38
00:03:31.010 --> 00:03:32.460
And there we go (indistinct).

39
00:03:33.950 --> 00:03:36.000
So Throws and DoesNotThrow.

40
00:03:36.000 --> 00:03:36.833
Great.

41
00:03:37.860 --> 00:03:39.710
All right, so this looks pretty good.

