1
00:00:01,040 --> 00:00:01,890
Let's move back into

2
00:00:01,890 --> 00:00:04,423
our StudentAndGradeServiceTest.

3
00:00:06,170 --> 00:00:07,130
And what we'll do is we'll start

4
00:00:07,130 --> 00:00:08,923
off by creating a New Package.

5
00:00:09,980 --> 00:00:11,880
And this is a Package for the Service.

6
00:00:21,530 --> 00:00:23,710
And then I'll create a New Class here for the Service.

7
00:00:23,710 --> 00:00:26,510
So New Class and the name

8
00:00:26,510 --> 00:00:29,630
of this class will be called StudentAndGradeService.

9
00:00:37,520 --> 00:00:39,510
Zoom out for a second.

10
00:00:39,510 --> 00:00:40,360
Up top, we'll make use

11
00:00:40,360 --> 00:00:42,950
of the Service Annotation and Transactional,

12
00:00:42,950 --> 00:00:45,570
because we'll allow Spring to manage the Transactions

13
00:00:45,570 --> 00:00:46,983
for us in the background.

14
00:00:54,470 --> 00:00:57,363
And now we need to define that method, createstudent.

15
00:01:09,230 --> 00:01:10,670
It takes in three parameters for,

16
00:01:10,670 --> 00:01:12,713
the first name, last name and email.

17
00:01:16,790 --> 00:01:17,623
And then we'll go ahead

18
00:01:17,623 --> 00:01:19,770
and create a new instance of the CollegeStudent.

19
00:01:31,300 --> 00:01:33,900
I'll set the ID to zero since this is a New Student.

20
00:01:39,910 --> 00:01:42,220
And then I'll call StudentDao.save

21
00:01:42,220 --> 00:01:43,713
and I pass in the Student.

22
00:01:45,040 --> 00:01:47,100
But now we have a small problem here

23
00:01:47,100 --> 00:01:50,530
because we really haven't defined the Dao yet.

24
00:01:50,530 --> 00:01:52,663
So, we need to go ahead and do that now.

25
00:01:54,280 --> 00:01:57,030
And I'll put the Daos in a Package called, repository.

26
00:01:57,030 --> 00:01:58,540
So I'll create a New Package

27
00:02:01,500 --> 00:02:03,513
and the Package name is, repository.

28
00:02:09,458 --> 00:02:11,933
And then inside of this repository Package,

29
00:02:11,933 --> 00:02:15,200
I'll create a new Interface for the StudentDao.

30
00:02:15,200 --> 00:02:17,280
So new, I choose, Java class.

31
00:02:17,280 --> 00:02:19,010
Be sure to choose, Interface here.

32
00:02:19,010 --> 00:02:20,930
Okay, make sure Interface is selected

33
00:02:20,930 --> 00:02:22,787
because we're using Spring Data JPA.

34
00:02:27,021 --> 00:02:30,390
The name of the Interface is called StudentDao.

35
00:02:35,910 --> 00:02:39,053
Now in this, Dao I give the Annotation here for, repository.

36
00:02:42,410 --> 00:02:47,410
And this given StudentDao is going to extend, CrudRepository.

37
00:02:54,010 --> 00:02:56,610
Remember with the CrudRepository in Spring Data JPA

38
00:02:56,610 --> 00:02:59,940
you get the Crud methods for free, automatically.

39
00:02:59,940 --> 00:03:02,430
No need to explicitly declare them.

40
00:03:02,430 --> 00:03:05,023
So, the Entity Type, comma Primary Key Type.

41
00:03:10,470 --> 00:03:13,680
Now, if we switch back over to our StudentAndGradeService

42
00:03:13,680 --> 00:03:15,807
we have our StudentDao, that's okay

43
00:03:15,807 --> 00:03:18,290
but we haven't declared it as a Field yet.

44
00:03:18,290 --> 00:03:21,283
So I need to go ahead and Autowire, the StudentDao.

45
00:03:33,240 --> 00:03:35,890
Excellent, I have the StudentDao Autowired.

46
00:03:35,890 --> 00:03:36,780
Now we can move down here

47
00:03:36,780 --> 00:03:39,030
to the StudentDao.save and there's still a problem.

48
00:03:39,030 --> 00:03:40,490
Hmm, what's up?

49
00:03:40,490 --> 00:03:41,840
Inferred Type S.

50
00:03:41,840 --> 00:03:43,253
Oh gosh, typo.

51
00:03:44,470 --> 00:03:46,680
So that the Entity Type is not Collection.

52
00:03:46,680 --> 00:03:49,010
The Entity Type is CollegeStudent.

53
00:03:49,010 --> 00:03:50,740
Okay, so we get the Entity Type comma

54
00:03:50,740 --> 00:03:53,720
the Primary Key CollegeStudent comma Integer.

55
00:03:53,720 --> 00:03:55,283
Okay whoo, that was close.

56
00:03:58,750 --> 00:04:00,823
Do some minor cleanup here on this file.

57
00:04:05,550 --> 00:04:06,670
All right, so that takes care

58
00:04:06,670 --> 00:04:08,280
of it there in the StudentAndGradeService.

59
00:04:08,280 --> 00:04:10,523
So that's A-okay, we're good to go.

60
00:04:13,050 --> 00:04:15,310
Now, moving back over to our Test.

61
00:04:15,310 --> 00:04:16,790
Okay, so right now we're in our Test Class

62
00:04:16,790 --> 00:04:18,180
and the method createStudentService

63
00:04:19,630 --> 00:04:21,300
and we need to Autowire

64
00:04:21,300 --> 00:04:23,760
in the StudentService inside of this Test.

65
00:04:23,760 --> 00:04:25,200
Okay, so inside of our Test

66
00:04:25,200 --> 00:04:26,743
we need to Autowire the StudentService.

67
00:04:37,743 --> 00:04:39,860
Excellent, so this solves that one issue

68
00:04:39,860 --> 00:04:41,180
that we have with the StudentService.

69
00:04:41,180 --> 00:04:42,460
So this looks pretty good.

70
00:04:42,460 --> 00:04:43,670
We still have some more work to do

71
00:04:43,670 --> 00:04:46,013
but at least we're at a nice little checkpoint.

