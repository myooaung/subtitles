1
00:00:01,490 --> 00:00:03,040
So let's go ahead and move in here

2
00:00:03,040 --> 00:00:05,493
and we'll start off by opening up our project.

3
00:00:14,870 --> 00:00:17,380
So let's move to our main directory here,

4
00:00:17,380 --> 00:00:19,533
spring boot unit testing main.

5
00:00:22,810 --> 00:00:24,040
And inside of this directory

6
00:00:24,040 --> 00:00:27,803
let's open up the 2.20 starting project.

7
00:00:39,050 --> 00:00:39,910
Okay, excellent.

8
00:00:39,910 --> 00:00:40,743
This is great.

9
00:00:40,743 --> 00:00:42,993
So we're in the 2.20 starting project.

10
00:00:46,110 --> 00:00:47,300
Let's take a quick look

11
00:00:47,300 --> 00:00:49,650
at our application architecture here.

12
00:00:49,650 --> 00:00:51,780
So what we'll do is we'll have this main application,

13
00:00:51,780 --> 00:00:54,890
we'll have a service and we'll have a DAO and so.

14
00:00:54,890 --> 00:00:56,430
The service will have a dependency

15
00:00:56,430 --> 00:01:01,010
on the DAO and we'll actually mark the DAO in our example.

16
00:01:01,010 --> 00:01:01,910
So here's our DAO,

17
00:01:02,920 --> 00:01:07,190
application DAO just a very simple class

18
00:01:07,190 --> 00:01:09,150
that has three methods.

19
00:01:09,150 --> 00:01:12,320
Add grade results, find grade point average

20
00:01:12,320 --> 00:01:13,770
and at the bottom check null.

21
00:01:14,780 --> 00:01:15,613
That's it.

22
00:01:19,360 --> 00:01:21,450
And then for our application service

23
00:01:21,450 --> 00:01:22,600
we'll open this one up.

24
00:01:27,170 --> 00:01:30,340
So application service has a dependency

25
00:01:30,340 --> 00:01:33,550
on application DAO so note the auto wired here

26
00:01:35,160 --> 00:01:36,910
and then it also has three methods

27
00:01:36,910 --> 00:01:39,773
and we simply delegate those calls off to the given DAO.

28
00:01:41,470 --> 00:01:43,240
So there's methods here for add grade results,

29
00:01:43,240 --> 00:01:44,900
find grade point average and check null.

30
00:01:44,900 --> 00:01:46,800
Again simply delegating it to the DAO.

31
00:01:49,990 --> 00:01:52,203
And then here's our main application.

32
00:01:55,980 --> 00:02:00,210
And in our main application we have some new entries here

33
00:02:00,210 --> 00:02:04,050
for this setup, can expand the window here.

34
00:02:04,050 --> 00:02:08,169
So we have a new entry here for the application service

35
00:02:08,169 --> 00:02:10,759
and a new entry for the application DAO.

36
00:02:10,759 --> 00:02:13,640
So we're simply using the app bean annotation

37
00:02:13,640 --> 00:02:15,533
to manually create those beans.

38
00:02:17,740 --> 00:02:19,070
And we could have used other techniques

39
00:02:19,070 --> 00:02:20,980
for creating the beans but this is kind of the code

40
00:02:20,980 --> 00:02:23,083
that the previous employee created for us.

41
00:02:26,770 --> 00:02:27,603
All right, let's go ahead

42
00:02:27,603 --> 00:02:29,653
and take a look at our pom.xml.

43
00:02:42,280 --> 00:02:44,130
And we can see in our pom.xml

44
00:02:44,130 --> 00:02:47,403
we have the spring boot starter for test.

45
00:02:49,590 --> 00:02:51,320
And since we have that starter for test,

46
00:02:51,320 --> 00:02:52,797
we have built in support from mockito

47
00:02:52,797 --> 00:02:54,790
and we can verify that looking

48
00:02:54,790 --> 00:02:58,240
at our Maven panel and looking at our dependencies

49
00:02:58,240 --> 00:03:01,583
and looking for the section under spring boot starter test.

50
00:03:06,620 --> 00:03:09,410
And then we can see there is support there for mockito.

51
00:03:09,410 --> 00:03:11,960
So again, spring boot starter test has built

52
00:03:11,960 --> 00:03:13,750
in support for mockito.

53
00:03:20,980 --> 00:03:22,350
And so if you're not using an IDE

54
00:03:22,350 --> 00:03:24,820
you can also verify this at the command line

55
00:03:24,820 --> 00:03:27,853
simply your project directory type Maven dependency tree.

56
00:03:35,840 --> 00:03:36,870
And just looking through the results,

57
00:03:36,870 --> 00:03:39,570
we can see that there's built in support from mockito.

58
00:03:40,790 --> 00:03:42,590
Okay, so this all looks pretty good.

