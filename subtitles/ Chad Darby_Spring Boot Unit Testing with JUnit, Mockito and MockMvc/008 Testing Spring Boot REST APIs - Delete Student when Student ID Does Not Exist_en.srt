1
00:00:01,340 --> 00:00:03,590
Now let's cover one more test case.

2
00:00:03,590 --> 00:00:06,550
Let's delete a student id that doesn't exist.

3
00:00:06,550 --> 00:00:10,420
In this test, it should return a status code of 400

4
00:00:10,420 --> 00:00:12,540
or in the 4xx series

5
00:00:12,540 --> 00:00:14,703
because that given student was not found.

6
00:00:20,031 --> 00:00:21,500
Alrighty, in our GradebookControllerTest,

7
00:00:21,500 --> 00:00:23,450
let's go ahead and write this new test.

8
00:00:25,980 --> 00:00:27,943
It's the test for deleting a student.

9
00:00:47,510 --> 00:00:49,480
And first, I just want to give a student id

10
00:00:49,480 --> 00:00:50,950
that doesn't exist,

11
00:00:50,950 --> 00:00:52,650
so student id of zero.

12
00:00:52,650 --> 00:00:53,620
I'm going to assertFalse,

13
00:00:53,620 --> 00:00:55,730
make sure that this student id is not present,

14
00:00:55,730 --> 00:00:58,593
so we know that this is a invalid student id.

15
00:01:03,230 --> 00:01:05,470
And now I'll go ahead and perform my delete request

16
00:01:05,470 --> 00:01:06,870
for that student id of zero.

17
00:01:15,920 --> 00:01:17,660
We're passing in that student id of zero.

18
00:01:17,660 --> 00:01:18,853
That does not exist.

19
00:01:22,210 --> 00:01:25,760
And here we're going to expect the status code

20
00:01:25,760 --> 00:01:27,423
is a 4xxClientError.

21
00:01:28,770 --> 00:01:32,020
So something in the 400 series of a ClientError.

22
00:01:32,020 --> 00:01:33,760
Also, in this case, our REST API

23
00:01:33,760 --> 00:01:36,870
will actually return a JSON error message

24
00:01:36,870 --> 00:01:39,000
and so we can actually inspect this error message

25
00:01:39,000 --> 00:01:40,433
and get some details on it.

26
00:01:42,210 --> 00:01:44,190
So it'll have the status, the error message

27
00:01:44,190 --> 00:01:45,413
and even a timestamp.

28
00:01:53,260 --> 00:01:55,740
And I have this piece here of checking the status.

29
00:01:55,740 --> 00:01:57,550
We're making use of this method is

30
00:01:57,550 --> 00:01:59,320
but it comes up red right now.

31
00:01:59,320 --> 00:02:02,310
What we need to do is move up to our import section

32
00:02:02,310 --> 00:02:04,210
and add the following import.

33
00:02:04,210 --> 00:02:08,169
We need to add import static org.hamcrest.Matches.is.

34
00:02:08,169 --> 00:02:10,350
And so go ahead and pause the video for now.

35
00:02:10,350 --> 00:02:12,850
Scroll to the top and add this and then come back.

36
00:02:17,070 --> 00:02:18,553
Alrighty, so once that's taken care of,

37
00:02:18,553 --> 00:02:20,023
then that should go away.

38
00:02:22,960 --> 00:02:25,300
Now, we're actually going to access the contents

39
00:02:25,300 --> 00:02:26,750
of that error message that's returned

40
00:02:26,750 --> 00:02:28,420
by our REST API.

41
00:02:28,420 --> 00:02:30,120
Here we see that we have these three fields,

42
00:02:30,120 --> 00:02:32,110
status, message and timeStamp.

43
00:02:32,110 --> 00:02:33,800
I want to check the status field,

44
00:02:33,800 --> 00:02:37,060
so I use the $.status, all right?

45
00:02:37,060 --> 00:02:40,140
And then I compare that to the value of 404

46
00:02:40,140 --> 00:02:42,520
because hey, this person was not found.

47
00:02:42,520 --> 00:02:46,190
And then also, we can do a similar thing here for message.

48
00:02:46,190 --> 00:02:47,310
So let's just scroll down here

49
00:02:47,310 --> 00:02:49,490
and write some additional code here for checking the message

50
00:02:49,490 --> 00:02:50,993
of that response.

51
00:02:59,450 --> 00:03:00,840
And again, this is the error message

52
00:03:00,840 --> 00:03:02,880
that's coming back from our REST API

53
00:03:02,880 --> 00:03:05,430
when we try and delete a student who doesn't exist.

54
00:03:06,860 --> 00:03:07,930
So to access the message,

55
00:03:07,930 --> 00:03:10,530
we use the $.message, is

56
00:03:10,530 --> 00:03:11,650
and then we can give the string

57
00:03:11,650 --> 00:03:13,850
that we're trying to match on.

58
00:03:13,850 --> 00:03:15,870
So the $.message matches

59
00:03:15,870 --> 00:03:17,720
with the actual JSON response there.

60
00:03:17,720 --> 00:03:20,570
Again, making use of all this cooler stuff with jsonPath.

61
00:03:22,820 --> 00:03:23,840
Okay, this looks pretty good.

62
00:03:23,840 --> 00:03:25,490
Let's go ahead and run this test.

63
00:03:33,930 --> 00:03:35,620
This test passed. Awesome.

64
00:03:35,620 --> 00:03:37,040
We covered the test case of trying

65
00:03:37,040 --> 00:03:39,560
to delete a student ID that doesn't exist.

66
00:03:39,560 --> 00:03:40,393
Good job.

