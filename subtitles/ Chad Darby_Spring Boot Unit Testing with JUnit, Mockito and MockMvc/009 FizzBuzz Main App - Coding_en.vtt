WEBVTT
1
00:00:00.640 --> 00:00:03.530
Wait, wait, we are not done.

2
00:00:03.530 --> 00:00:05.620
If you remember with the problem statement, it said

3
00:00:05.620 --> 00:00:08.580
write a program to print the first 100 FizzBuzz numbers

4
00:00:08.580 --> 00:00:10.550
start at one and end at 100.

5
00:00:10.550 --> 00:00:12.940
At this point, we've written a lot of unit tests.

6
00:00:12.940 --> 00:00:14.580
We've done all the TDD.

7
00:00:14.580 --> 00:00:17.330
But we still didn't write a main application to

8
00:00:17.330 --> 00:00:20.740
print the FizzBuzz numbers one to 100.

9
00:00:20.740 --> 00:00:21.730
And the boss says

10
00:00:21.730 --> 00:00:25.173
Hey, We need a main app and we need it ASAP.

11
00:00:27.850 --> 00:00:29.923
So let's get to it ASAP.

12
00:00:31.290 --> 00:00:32.500
Now, before I go there

13
00:00:32.500 --> 00:00:34.863
I'll make sure that all of my tests still pass.

14
00:00:37.520 --> 00:00:39.664
Okay. So I have the warm fuzzy now, like, okay, great.

15
00:00:39.664 --> 00:00:41.770
Everything's good on my end.

16
00:00:41.770 --> 00:00:43.886
let me simply just write a little main app to

17
00:00:43.886 --> 00:00:45.893
demonstrate all of this stuff.

18
00:00:50.070 --> 00:00:52.830
I'm moving to source main Java under TDD.

19
00:00:52.830 --> 00:00:54.110
I'll create a new class

20
00:00:57.520 --> 00:00:59.523
and I'll call this the main app.

21
00:01:10.030 --> 00:01:11.260
And in this main app,

22
00:01:11.260 --> 00:01:12.900
I'll simply set up a main method

23
00:01:19.190 --> 00:01:21.773
and I'll do the for loop from one to 100.

24
00:01:32.800 --> 00:01:36.663
And I simply print out the results.

25
00:01:38.150 --> 00:01:40.027
here I'll print out, I+, and then

26
00:01:44.170 --> 00:01:49.003
then I'll make use of FizzBuzz dot compute pass an I.

27
00:01:55.060 --> 00:01:56.633
and that's in place.

28
00:01:58.680 --> 00:02:01.010
Now I simply run this main application

29
00:02:07.570 --> 00:02:09.289
and I get the results

30
00:02:09.289 --> 00:02:11.870
but it's not exactly per the spec.

31
00:02:11.870 --> 00:02:13.910
They really don't want the initial value.

32
00:02:13.910 --> 00:02:16.360
They simply want the FizzBuzz number.

33
00:02:16.360 --> 00:02:19.040
So let me kind of comment out

34
00:02:19.040 --> 00:02:22.300
what I had here for line number nine.

35
00:02:22.300 --> 00:02:24.840
and just print the result of the FizzBuzz compute.

36
00:02:24.840 --> 00:02:26.440
So just get rid of the string concatenation

37
00:02:26.440 --> 00:02:29.293
and just simply print FizzBuzz dot compute I.

38
00:02:37.930 --> 00:02:41.923
And then we get the results as requested.

39
00:02:44.850 --> 00:02:47.640
And kind of going back to that problem statement.

40
00:02:47.640 --> 00:02:49.910
Now we're printing out the values from one, the 100.

41
00:02:49.910 --> 00:02:51.750
Okay. And you have all your FizzBuzz numbers.

42
00:02:51.750 --> 00:02:53.430
So there you go.

43
00:02:53.430 --> 00:02:55.233
All right so fun stuff

44
00:02:55.233 --> 00:02:56.900
So again, we kind of pulled everything together

45
00:02:56.900 --> 00:02:59.770
with the whole TDD and we wrapped it up at the end.

46
00:02:59.770 --> 00:03:00.610
This is awesome.

47
00:03:00.610 --> 00:03:01.443
I'm happy.

