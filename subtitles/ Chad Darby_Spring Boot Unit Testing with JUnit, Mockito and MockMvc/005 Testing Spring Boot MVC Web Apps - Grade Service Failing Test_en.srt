1
00:00:01,359 --> 00:00:03,240
All righty, so we're moving right along.

2
00:00:03,240 --> 00:00:05,500
There are some other cases that I want to check for.

3
00:00:05,500 --> 00:00:08,900
So I want to check for the failure to create a grade.

4
00:00:08,900 --> 00:00:11,260
This can happen if we have an invalid grade,

5
00:00:11,260 --> 00:00:14,320
so outside the range of 0-100,

6
00:00:14,320 --> 00:00:17,100
also if they pass in an invalid student ID

7
00:00:17,100 --> 00:00:19,330
or if they pass an invalid subject.

8
00:00:19,330 --> 00:00:21,870
For these cases we should return false,

9
00:00:21,870 --> 00:00:23,863
a failure to actually create a grade.

10
00:00:25,390 --> 00:00:27,020
Now let's go ahead and swing into our IDE

11
00:00:27,020 --> 00:00:28,820
and let's write some tests for this.

12
00:00:42,731 --> 00:00:45,350
This test will be create grade service returns false.

13
00:00:45,350 --> 00:00:47,420
So this is the case where we couldn't create a grade

14
00:00:47,420 --> 00:00:49,520
because it didn't pass some of our checks.

15
00:01:00,010 --> 00:01:02,470
Here, I'll say assert false student service create

16
00:01:02,470 --> 00:01:04,930
grade of 105.

17
00:01:04,930 --> 00:01:06,770
All right, so that means it's outside of our range

18
00:01:06,770 --> 00:01:08,750
so that it should return false,

19
00:01:08,750 --> 00:01:10,903
outside of the range of zero to a hundred.

20
00:01:21,139 --> 00:01:22,750
We'll also do another example here

21
00:01:22,750 --> 00:01:26,610
assert false student service create grade of negative five.

22
00:01:26,610 --> 00:01:28,220
Again, that's below zero.

23
00:01:28,220 --> 00:01:30,670
Doesn't work for us, so that should return false.

24
00:01:42,800 --> 00:01:45,670
And let's also do a student service create grade.

25
00:01:45,670 --> 00:01:47,620
We give a regular grade of 80.5

26
00:01:47,620 --> 00:01:50,220
but we give an invalid student ID of two

27
00:01:50,220 --> 00:01:51,760
cuz we don't have a student ID of two,

28
00:01:51,760 --> 00:01:54,973
we only have a student ID of one based on our sample data.

29
00:02:07,510 --> 00:02:09,000
And then finally here I'll say

30
00:02:09,000 --> 00:02:11,810
assert false student service create grade

31
00:02:11,810 --> 00:02:14,780
80.5 student ID of one.

32
00:02:14,780 --> 00:02:18,420
And here I'm going to give an invalid subject, literature.

33
00:02:18,420 --> 00:02:20,200
We only have math, science and history,

34
00:02:20,200 --> 00:02:21,530
we don't have literature,

35
00:02:21,530 --> 00:02:23,623
so that should return false also.

36
00:02:27,560 --> 00:02:29,080
All right, let's go ahead and run this test

37
00:02:29,080 --> 00:02:30,530
and see what our results are.

38
00:02:35,480 --> 00:02:38,360
And excellent, so this test passed just fine for us.

39
00:02:38,360 --> 00:02:40,970
So we know that we have coding in place to handle

40
00:02:40,970 --> 00:02:42,550
for these different edge cases.

41
00:02:42,550 --> 00:02:43,870
So this looks really good.

42
00:02:43,870 --> 00:02:44,703
I like it.

