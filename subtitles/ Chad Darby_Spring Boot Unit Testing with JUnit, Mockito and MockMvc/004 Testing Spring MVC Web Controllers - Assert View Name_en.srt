1
00:00:00,584 --> 00:00:03,060
Okay, so let's pick up where we left off.

2
00:00:03,060 --> 00:00:03,920
So we should be,

3
00:00:03,920 --> 00:00:06,363
in the Grade book Controller test at the moment.

4
00:00:09,760 --> 00:00:11,500
And let's zoom in here for a second.

5
00:00:11,500 --> 00:00:14,453
So let's go ahead and write some web related testing.

6
00:00:19,340 --> 00:00:21,313
I'll make use of this MVC result.

7
00:00:24,400 --> 00:00:25,770
And I'll use my mock MVC

8
00:00:27,500 --> 00:00:30,493
and I'll perform a web request.

9
00:00:31,930 --> 00:00:33,640
So I make use of those,

10
00:00:33,640 --> 00:00:36,613
mock MVC request builder.

11
00:00:39,500 --> 00:00:41,133
And I'll make a Get request,

12
00:00:42,260 --> 00:00:44,100
to slash some colonist

13
00:00:44,100 --> 00:00:44,933
slash

14
00:00:44,933 --> 00:00:46,520
on that

15
00:00:46,520 --> 00:00:49,010
Grade book Controller that I have.

16
00:00:49,010 --> 00:00:51,533
And then I expect the status to be okay.

17
00:00:54,870 --> 00:00:56,033
And then I return.

18
00:01:01,490 --> 00:01:02,390
So effectively here,

19
00:01:02,390 --> 00:01:04,010
I'm performing a web request

20
00:01:04,010 --> 00:01:05,853
and I'm setting the expectations.

21
00:01:10,390 --> 00:01:11,740
And remember in our controller,

22
00:01:11,740 --> 00:01:13,990
we have the request mapping for slash

23
00:01:13,990 --> 00:01:16,540
so that I'll call the Grade book controller.

24
00:01:16,540 --> 00:01:18,453
And returns the view name of index.

25
00:01:26,350 --> 00:01:27,980
Now, with this MVC result

26
00:01:27,980 --> 00:01:30,200
I can actually get the results here.

27
00:01:30,200 --> 00:01:32,163
I can actually get the model and view.

28
00:01:43,310 --> 00:01:44,670
Sorry retrieve the model and view

29
00:01:44,670 --> 00:01:45,720
from the MVC result,

30
00:01:45,720 --> 00:01:47,573
get model and view.

31
00:01:48,910 --> 00:01:50,780
And now that I have the model and view

32
00:01:50,780 --> 00:01:52,650
then I can perform some asserts.

33
00:01:52,650 --> 00:01:54,960
And now that I have the model and view

34
00:01:55,910 --> 00:01:57,840
and I'll simply assert the view name

35
00:02:04,070 --> 00:02:05,410
so I pass in the model and view.

36
00:02:05,410 --> 00:02:08,032
And then I assert the view name of index.

37
00:02:09,660 --> 00:02:11,400
And remember in our,

38
00:02:11,400 --> 00:02:13,100
Grade book Controller it returns

39
00:02:13,100 --> 00:02:14,933
the view name of index.

40
00:02:20,350 --> 00:02:22,243
Get rid of some extra blank lines.

41
00:02:24,270 --> 00:02:25,103
All right.

42
00:02:25,103 --> 00:02:25,936
So this code looks pretty good.

43
00:02:25,936 --> 00:02:27,933
Let's go ahead and run the test.

44
00:02:33,770 --> 00:02:35,400
And this test runs successfully.

45
00:02:35,400 --> 00:02:36,310
So the test passed.

46
00:02:36,310 --> 00:02:38,020
So we actually made a call.

47
00:02:38,020 --> 00:02:39,530
The given controller,

48
00:02:39,530 --> 00:02:40,680
we got the model and view.

49
00:02:40,680 --> 00:02:41,860
We did an assert,

50
00:02:41,860 --> 00:02:43,500
and the view name was index.

51
00:02:43,500 --> 00:02:45,310
So we're actually making a call,

52
00:02:45,310 --> 00:02:48,214
to that controller using Springs mocking support.

53
00:02:48,214 --> 00:02:49,700
This is great.

54
00:02:49,700 --> 00:02:50,533
I like it.

