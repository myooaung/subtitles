1
00:00:01,210 --> 00:00:02,320
All right, so in step 4,

2
00:00:02,320 --> 00:00:04,963
we're going to generate the code coverage reports.

3
00:00:06,780 --> 00:00:08,200
And what we'll do is we'll make use

4
00:00:08,200 --> 00:00:12,140
of this free code coverage library called JaCoCo.

5
00:00:12,140 --> 00:00:14,370
So, JaCoCo provides a Maven plugin

6
00:00:14,370 --> 00:00:16,620
to generate code coverage reports.

7
00:00:16,620 --> 00:00:18,020
And it'll give you a report similar

8
00:00:18,020 --> 00:00:19,760
to what we show here on the screen.

9
00:00:19,760 --> 00:00:21,540
So it'll give the actual Element,

10
00:00:21,540 --> 00:00:24,310
Missed Instructions, Missed Branches, Coverage,

11
00:00:24,310 --> 00:00:25,773
Percentages and so on.

12
00:00:26,690 --> 00:00:28,610
You can get more information about JaCoCo

13
00:00:28,610 --> 00:00:31,500
at this website here, jacoco.org.

14
00:00:31,500 --> 00:00:33,690
And then you're probably wondering

15
00:00:33,690 --> 00:00:35,430
what's up with the name JaCoCo.

16
00:00:35,430 --> 00:00:37,510
I mean, how did they come up with that?

17
00:00:37,510 --> 00:00:42,510
Well, it stands for Java Code Coverage, JaCoCo.

18
00:00:44,470 --> 00:00:45,303
All right.

19
00:00:45,303 --> 00:00:46,720
Anyway, that's the name there.

20
00:00:50,110 --> 00:00:52,440
So now, how do we make use of JaCoCo?

21
00:00:52,440 --> 00:00:54,720
Well, in our pom.xml file,

22
00:00:54,720 --> 00:00:56,550
we'll make use of this plugin,

23
00:00:56,550 --> 00:00:58,030
jacoco maven plugin

24
00:00:59,130 --> 00:01:01,800
and then we have this execution section.

25
00:01:01,800 --> 00:01:05,170
So the first item here is that we prepare the JaCoCo agent.

26
00:01:05,170 --> 00:01:08,530
This goal is bound by default to Mavens initialize phase.

27
00:01:08,530 --> 00:01:10,060
This does some initialization work

28
00:01:10,060 --> 00:01:11,920
in the background for JaCoCo.

29
00:01:11,920 --> 00:01:14,060
And for the next execution entry,

30
00:01:14,060 --> 00:01:15,690
during Maven's test phase,

31
00:01:15,690 --> 00:01:17,780
we want to execute the plugin goal,

32
00:01:17,780 --> 00:01:21,100
jacoco-maven-plugin:report.

33
00:01:21,100 --> 00:01:23,340
All right so, during the testing phase,

34
00:01:23,340 --> 00:01:25,313
let's execute the goal, report.

35
00:01:28,780 --> 00:01:30,000
Now we can test this out

36
00:01:30,000 --> 00:01:31,970
as for as generating our code coverage reports.

37
00:01:31,970 --> 00:01:34,583
So at our command line, we say mvn clean test.

38
00:01:36,190 --> 00:01:38,310
And so remember JaCoCo report generation

39
00:01:38,310 --> 00:01:39,780
is attached to the test phase

40
00:01:39,780 --> 00:01:42,070
so the reports are automatically generated

41
00:01:42,070 --> 00:01:43,803
when the unit tests are executed.

42
00:01:45,520 --> 00:01:48,290
And we can kind of follow along with the output here.

43
00:01:48,290 --> 00:01:50,513
So the mvn clean plugin,

44
00:01:51,770 --> 00:01:53,890
then we prepare the JaCoCo agent,

45
00:01:53,890 --> 00:01:56,200
we run our test and we run the report

46
00:01:56,200 --> 00:01:58,680
using the JaCoCo Maven plugin.

47
00:01:58,680 --> 00:02:00,573
And finally we have build success.

48
00:02:03,090 --> 00:02:06,360
So then we can actually view these code coverage reports.

49
00:02:06,360 --> 00:02:07,420
They're in this directory here,

50
00:02:07,420 --> 00:02:10,389
target site jacoco index html.

51
00:02:10,389 --> 00:02:12,500
We can open it up and we see our report here.

52
00:02:12,500 --> 00:02:15,140
As for as the code coverage, we can go ahead and drill down

53
00:02:15,140 --> 00:02:17,070
into some of the links and we can get a list

54
00:02:17,070 --> 00:02:18,880
of all the methods in the given class,

55
00:02:18,880 --> 00:02:21,043
which ones are covered and which one isn't.

56
00:02:24,500 --> 00:02:25,610
This is all really good stuff.

57
00:02:25,610 --> 00:02:28,080
So I showed you how you can make use of unit test reports

58
00:02:28,080 --> 00:02:29,690
from the command line with Maven

59
00:02:29,690 --> 00:02:33,070
and also code coverage from the command line using Maven.

60
00:02:33,070 --> 00:02:34,950
And if you'd like to get more information

61
00:02:34,950 --> 00:02:36,780
about the Maven plugins here,

62
00:02:36,780 --> 00:02:39,340
you can visit the link that I have here on the slide.

63
00:02:39,340 --> 00:02:41,370
And if you'd like to get more information about JaCoCo,

64
00:02:41,370 --> 00:02:44,520
you can use the link that I have here on the slide also.

65
00:02:44,520 --> 00:02:45,810
Alrighty. Really good stuff.

66
00:02:45,810 --> 00:02:46,643
I'm excited.

