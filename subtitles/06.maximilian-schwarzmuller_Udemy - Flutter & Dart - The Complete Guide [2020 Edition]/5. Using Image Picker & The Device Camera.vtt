WEBVTT
1
00:00:02.480 --> 00:00:06.290
So how do we open the device camera?

2
00:00:07.180 --> 00:00:16.030
The good thing is, if you remember the first section of this module, Flutter actually uses Dart and

3
00:00:16.030 --> 00:00:18.060
it runs on an engine

4
00:00:18.070 --> 00:00:25.150
so to say, which gives you direct access to the system, to the operating system you're running on. So you

5
00:00:25.150 --> 00:00:32.760
can directly tap into such native device features, Flutter gives you a direct bridge to these features

6
00:00:32.890 --> 00:00:39.940
and later in the module by the way, I'll also show you how you can actually write your own native Swift

7
00:00:39.970 --> 00:00:47.260
or Java code for iOS or for Android and connect that to your Flutter code and you'll see how easy

8
00:00:47.260 --> 00:00:52.680
that is because Flutter has all the features it needs to talk to the underlying platform,

9
00:00:52.720 --> 00:00:57.560
so iOS or Android, it has all the features it needs to talk to that platform built-in.

10
00:00:57.760 --> 00:01:03.880
So therefore talking to iOS or to Android to open a camera is really simple,

11
00:01:03.880 --> 00:01:10.300
still you would have to write some Java or Swift code to really then tell Android or iOS to open

12
00:01:10.300 --> 00:01:11.290
a camera

13
00:01:11.620 --> 00:01:15.770
and of course that's not something we want to do here because chances are, you don't know Swift,

14
00:01:15.780 --> 00:01:22.720
you don't know Java and the good thing is for all the common interactions you want to have with your

15
00:01:22.960 --> 00:01:23.620
device,

16
00:01:23.620 --> 00:01:30.210
so things like working with maps or working with the camera, you got packages which you can install that

17
00:01:30.220 --> 00:01:36.670
take all the heavy lifting away from you and just give you a couple of Dart methods you can call to

18
00:01:36.820 --> 00:01:39.760
open a camera, to open maps and so on.

19
00:01:39.910 --> 00:01:45.790
There are official packages managed by the Flutter team and tons of unofficial ones managed by the community

20
00:01:46.440 --> 00:01:49.780
and if you search for image_picker here on pub.dev,

21
00:01:49.770 --> 00:01:56.150
you'll find a couple of plugins that help you with selecting images and definitely feel free to

22
00:01:56.150 --> 00:02:00.710
explore them all, the one I'll use is the image picker plugin here.

23
00:02:00.710 --> 00:02:07.160
This is a great plugin which makes it very easy to work with the device camera, select an image or take

24
00:02:07.160 --> 00:02:09.300
an image and then work with that image.

25
00:02:09.500 --> 00:02:14.960
It has detailed installation docs here and as always, the installation starts by going to the installing

26
00:02:14.960 --> 00:02:18.350
tab here and copying that dependency,

27
00:02:18.360 --> 00:02:24.290
and then simply go into your pubspec.yaml file here and there,

28
00:02:24.440 --> 00:02:31.490
add it and then save it and as always, it fetches this automatically, if it doesn't, run Flutter packages get

29
00:02:31.660 --> 00:02:35.490
in the terminal after navigating into this project here.

30
00:02:35.510 --> 00:02:40.820
So with that added here, we can start using this package to open the camera.

31
00:02:40.820 --> 00:02:48.630
So here in image_input.dart, you now can import a package with package: and it's the image picker

32
00:02:48.690 --> 00:02:56.670
package and there, the image_picker.dart file. With that added, you can go down here to this function which

33
00:02:56.670 --> 00:03:00.200
is triggered when this FlatButton is pressed and there,

34
00:03:00.210 --> 00:03:04.970
I now want to start taking my image. Now since we have a bit more code in there,

35
00:03:04.970 --> 00:03:09.380
I'll actually use a named method here, a named function, so that

36
00:03:09.390 --> 00:03:14.820
this is a bit nicer to read, our code is a bit more structured and I'll name it

37
00:03:17.950 --> 00:03:25.850
take picture and I'll come back to the type this returns in a second and in here, I'll use image picker and

38
00:03:25.850 --> 00:03:27.740
we don't instantiate this,

39
00:03:27.800 --> 00:03:32.510
instead you use this as a class which provides a couple of static methods and

40
00:03:32.660 --> 00:03:38.510
if you click on it, you see it has static methods in there like the pick image method and you already

41
00:03:38.510 --> 00:03:44.480
see this that this will return a future. So you can call pick image here to open the camera and take an

42
00:03:44.480 --> 00:03:45.200
image

43
00:03:45.230 --> 00:03:50.630
and this returns a future because of course that will take a while to finish, at least until the user

44
00:03:50.630 --> 00:03:53.890
pressed the camera button and confirmed the image.

45
00:03:53.990 --> 00:03:57.500
So here, we'll get back a future and therefore I want to use async await

46
00:03:57.650 --> 00:03:59.810
and therefore here, we'll return a future,

47
00:03:59.810 --> 00:04:02.750
here however a future which won't yield anything

48
00:04:02.930 --> 00:04:09.710
but here I of course want to await for this image to be taken and then we'll have the image file as

49
00:04:09.710 --> 00:04:11.070
a response here and

50
00:04:11.120 --> 00:04:13.190
that should be final.

51
00:04:13.370 --> 00:04:20.950
So in the end, after the image took and confirmed the image, we'll have an image file here. Now pick image

52
00:04:20.980 --> 00:04:22.590
needs to be configured,

53
00:04:22.660 --> 00:04:27.730
you need to provide the source argument and define what your source for the image should be because

54
00:04:27.730 --> 00:04:34.870
there are two sources and you can use the image source enum for that which is provided by the image picker

55
00:04:34.900 --> 00:04:38.290
package and there, you have the camera or the gallery.

56
00:04:38.290 --> 00:04:43.300
Now I want to use the camera but of course, you could also use the gallery instead to let the user

57
00:04:43.330 --> 00:04:49.870
take an image from there and another argument you can define is the max height or max width and I'll

58
00:04:49.870 --> 00:04:54.960
restrict the image or automatically crop it to a max width of 600

59
00:04:55.060 --> 00:05:01.570
so that our image isn't too big because of course modern phones really have high resolution cameras and

60
00:05:01.570 --> 00:05:03.690
you therefore shoot large images

61
00:05:03.700 --> 00:05:06.270
and for this app, we don't need such a large image,

62
00:05:06.340 --> 00:05:11.710
so to save some space on the device and also speed up our app, you should of course ensure that you only

63
00:05:11.710 --> 00:05:18.700
take images in a size that you really need and don't take high resolution images if your app doesn't

64
00:05:18.700 --> 00:05:19.400
need them,

65
00:05:19.480 --> 00:05:21.760
if it does of course, do so.

66
00:05:21.760 --> 00:05:26.590
So here, that will now configure the image I want to take, it will take the image and thereafter, it will

67
00:05:26.590 --> 00:05:29.800
store it here in image file.

68
00:05:29.800 --> 00:05:33.820
Now let's hook up the take picture method here to this button,

69
00:05:34.030 --> 00:05:39.580
so point at take picture, without parentheses, don't want to execute this method when the code gets passed

70
00:05:39.610 --> 00:05:45.310
but instead when the user presses the button and with all of that, we're almost there

71
00:05:45.370 --> 00:05:52.300
but one super important thing is missing. Often, when working with native device features like the camera

72
00:05:52.330 --> 00:05:59.290
or with the user location, you need to ask for permission before you use these features and therefore

73
00:05:59.290 --> 00:06:04.960
you need to add some extra setup and you see that also in the package here in the README file and

74
00:06:04.960 --> 00:06:11.770
basically, whenever you're working with a package that leverages some native device feature which needs

75
00:06:11.770 --> 00:06:12.640
permissions,

76
00:06:12.700 --> 00:06:15.130
the official documentation should tell you about that.

77
00:06:15.370 --> 00:06:21.580
So the official docs here for the plugins you are using are always worth having a look at because they

78
00:06:21.580 --> 00:06:25.760
tell you what you need to configure for this package to work correctly.

79
00:06:25.840 --> 00:06:31.050
Of course, you should not just check the README for packages that use native device features,

80
00:06:31.120 --> 00:06:36.550
you should actually read the README for all packages you're using but especially for packages that

81
00:06:36.550 --> 00:06:38.170
use native device features,

82
00:06:38.170 --> 00:06:41.710
you should have a look so that you don't miss any setup.

83
00:06:41.710 --> 00:06:47.200
And here we get extra hints on how to configure this for iOS and for Android and for Android, as you

84
00:06:47.200 --> 00:06:49.020
see we need no extra config

85
00:06:49.120 --> 00:06:57.160
but for iOS, we do. There, we need to edit the info.plist file in the iOS runner folder.

86
00:06:57.160 --> 00:07:03.070
Now if you're on Windows or Linux, you won't have an OS folder because you can't build iOS apps there

87
00:07:03.070 --> 00:07:08.560
but if you are on macOS, make sure you go to the iOS folder in your Flutter project and there, to the

88
00:07:08.560 --> 00:07:16.030
runner folder and then to info.plist. info.plist is a configuration file for the iOS app where you

89
00:07:16.030 --> 00:07:22.420
set up things like the version number of the app but also some permissions you need and the text

90
00:07:22.420 --> 00:07:28.090
you want to show in the permission prompts which iOS automatically shows to the user when the user

91
00:07:28.090 --> 00:07:31.550
is about to use the camera, use the location,

92
00:07:31.600 --> 00:07:32.400
anything like that.

93
00:07:33.130 --> 00:07:36.430
So here you see three keys which you should add,

94
00:07:36.520 --> 00:07:38.060
so just copy that name

95
00:07:38.140 --> 00:07:48.920
and then in here, you can pick any place, maybe here above that key UI storyboard

96
00:07:48.920 --> 00:07:49.260
name,

97
00:07:49.340 --> 00:07:55.340
so right next to such a key entry, not between key and string or a key or whatever because these entries

98
00:07:55.340 --> 00:07:58.680
always belong together, you have a key and then that's the value for the key,

99
00:07:58.760 --> 00:08:07.530
so don't enter your new entry between such a key-value pair but instead, add a new key here with these

100
00:08:07.740 --> 00:08:10.640
opening and closing elements here, key

101
00:08:10.650 --> 00:08:19.020
and then again key with a forward slash between the angled brackets and then enter that key which you

102
00:08:19.020 --> 00:08:20.860
got from the official docs

103
00:08:21.030 --> 00:08:26.610
and now the value here is a string because you enter some text which is displayed to the user when he

104
00:08:26.610 --> 00:08:31.800
basically is about to use a feature that needs that permission.

105
00:08:31.800 --> 00:08:36.030
So here, this would be the permission you need when you want to use the gallery,

106
00:08:36.030 --> 00:08:37.640
we're actually not using that

107
00:08:37.640 --> 00:08:42.750
so we technically don't need this but in case you want to use the gallery, add this permission,

108
00:08:42.750 --> 00:08:44.640
that's why I'm showing it here.

109
00:08:44.670 --> 00:08:51.780
So here you can display any text that gets the user to confirm this or give you the permission,

110
00:08:51.810 --> 00:08:59.430
so we need to take a picture, maybe you provide a more meaningful text than that but I think you're getting

111
00:08:59.430 --> 00:09:00.760
the idea here.

112
00:09:00.840 --> 00:09:06.500
So another permission which we need to add for our app here certainly is the camera usage description,

113
00:09:06.510 --> 00:09:10.710
you need that when you want to use the camera and I'll show the same text here,

114
00:09:10.740 --> 00:09:16.360
you could enter a different text of course and then here, the microphone usage, you only need that

115
00:09:16.380 --> 00:09:20.460
if you want to take a video where you also record the audio,

116
00:09:20.460 --> 00:09:22.320
we're definitely not doing that here

117
00:09:22.350 --> 00:09:24.290
so we don't need to set this up.

118
00:09:24.420 --> 00:09:30.510
So this here, the camera key, that's the important one for us, if you want to use the gallery, you also

119
00:09:30.510 --> 00:09:37.130
need that and if you want to record videos, you also should ask for permission to record the audio. With

120
00:09:37.140 --> 00:09:43.680
that, we're all set for iOS, as the official docs state, we don't need a special setup for Android,

121
00:09:43.680 --> 00:09:46.430
so with that, we should now be able to press that button.

122
00:09:46.470 --> 00:09:51.170
Let's do a full refresh and then let's see whether that works.

123
00:09:51.250 --> 00:09:58.830
Let's go here to the add place screen, click take picture and I'm actually getting an error here,

124
00:10:01.160 --> 00:10:05.490
no implementation found for method pick image on channel plugins.

125
00:10:05.490 --> 00:10:11.720
Now this should be a problem that can be solved by closing our process and fully rebuilding or restarting

126
00:10:11.720 --> 00:10:12.130
the app

127
00:10:13.240 --> 00:10:19.870
simply because we added a plugin that taps into native device functionalities that can sometimes lead

128
00:10:19.870 --> 00:10:26.530
to problems, so let's do a full restart here and now let's go back to that add place screen, click take

129
00:10:26.530 --> 00:10:27.810
picture again

130
00:10:28.030 --> 00:10:30.370
and now this opens up the camera here.

131
00:10:30.370 --> 00:10:33.190
Now the first time you launch this, you get this info screen here,

132
00:10:33.310 --> 00:10:39.660
so I'll simply go back in that case here, leave the camera and let's press it again,

133
00:10:39.660 --> 00:10:40.980
camera opens up again

134
00:10:41.040 --> 00:10:42.540
and now here we can take a picture

135
00:10:43.760 --> 00:10:48.010
and confirm this with the check mark if we're happy. This closes the camera

136
00:10:48.020 --> 00:10:51.140
and now we got a handle to that image,

137
00:10:51.140 --> 00:10:56.270
it's now stored in that variable but of course now we need to do something with that variable to save

138
00:10:56.270 --> 00:10:59.090
it on our local device in the file system there.
