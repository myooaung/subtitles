WEBVTT
1
00:00:02.410 --> 00:00:08.020
Our application at the moment has one problem, when I open that modal sheet and I try to enter something

2
00:00:08.020 --> 00:00:08.820
here,

3
00:00:08.890 --> 00:00:13.470
you'll see that this gets cleared, the title gets cleared as soon as I click into the amount and

4
00:00:13.540 --> 00:00:19.180
if I click into the title now, the amount gets cleared, so something's wrong here.

5
00:00:19.180 --> 00:00:23.860
By the way of course our amount is also a bit overlapped by the keyboard if we enter something into

6
00:00:23.860 --> 00:00:29.360
the title and that's something we'll fix later. Also if you would rotate the device into landscape,

7
00:00:29.410 --> 00:00:32.460
you wouldn't really be able to work with that but let's take care about this later

8
00:00:32.500 --> 00:00:38.050
once you learned how to build more responsive user interfaces. For the moment, let's fix that issue of our

9
00:00:38.050 --> 00:00:39.150
data getting lost

10
00:00:39.160 --> 00:00:43.690
when we click into the other fields. The fix is simple,

11
00:00:43.900 --> 00:00:49.660
you need to change new transaction, so this widget which renders these inputs, from a stateless into

12
00:00:49.660 --> 00:00:55.360
a stateful widget. Even though we're not calling set state in here, that internally changes something

13
00:00:55.360 --> 00:01:01.400
for Flutter because the state object in the end is treated differently than a widget object,

14
00:01:01.450 --> 00:01:07.480
it's basically maintained and not rebuilt as often easily and therefore you should convert new transaction

15
00:01:07.480 --> 00:01:13.720
here to a stateful widget and thanks to this refactoring syntax, that all is done automatically and

16
00:01:13.720 --> 00:01:21.930
now if you reload your application with that saved, if you now open that again,

17
00:01:21.940 --> 00:01:28.300
now here we can enter something and now the data is kept and we can add this and see our new transaction

18
00:01:28.300 --> 00:01:31.030
here which is of course pretty convenient.

19
00:01:31.030 --> 00:01:34.930
Now internally here in new transaction, there is now also one important change,

20
00:01:34.960 --> 00:01:40.540
we still get add transaction as an argument here and that's inside of our widget, right?

21
00:01:40.560 --> 00:01:46.180
Add transaction is a property in our widget, not in the state object but in the widget and it needs to

22
00:01:46.180 --> 00:01:51.520
be there because we need to define it or we need to accept it on the constructor of the widget, not

23
00:01:51.520 --> 00:01:56.260
on the constructor of the state because the state is constructed here with the help of create state

24
00:01:56.590 --> 00:02:01.570
and that's inside of the widget. So to receive something, some data in the widget from outside which

25
00:02:01.570 --> 00:02:07.030
is the case here, we receive a pointer at the add new transaction function,

26
00:02:07.030 --> 00:02:11.650
we need to accept it on the constructor of the widget. The problem is that I want to use this function

27
00:02:11.650 --> 00:02:15.110
from inside the state object thereafter and not inside my widget

28
00:02:15.190 --> 00:02:21.310
and these are two different classes technically. Thankfully, Flutter establishes a connection and gives

29
00:02:21.310 --> 00:02:24.720
us a special property inside of our state class,

30
00:02:24.820 --> 00:02:32.470
it gives us this widget property and this refactoring step automatically added it. With widget., you

31
00:02:32.470 --> 00:02:39.460
can access the properties and methods of your widget class inside of your state class.

32
00:02:39.640 --> 00:02:46.480
So with widget.addTx, I can access the addTx property, which is this function reference I get even

33
00:02:46.480 --> 00:02:52.510
though I'm technically in a different class. That's important, widget, that is a special property we haven't

34
00:02:52.510 --> 00:02:53.250
seen before,

35
00:02:53.290 --> 00:02:59.320
it has to be named widget and it's only available in your state classes and gives you access to the

36
00:02:59.320 --> 00:03:00.580
connected widget

37
00:03:00.580 --> 00:03:04.440
and with that, we now also fixed that issue of the bottom sheet

38
00:03:04.450 --> 00:03:07.580
clearing our inputs when we type in there.

39
00:03:07.600 --> 00:03:15.460
Now one other thing we can do is that when we enter a new transaction here, that we actually also close

40
00:03:15.550 --> 00:03:20.740
the bottom sheet as soon as we confirm it and that we don't have to close it manually and doing that

41
00:03:20.740 --> 00:03:22.560
is pretty straightforward.

42
00:03:22.770 --> 00:03:33.360
Here in submit data after calling addTx, you can call navigator of context pop.

43
00:03:33.400 --> 00:03:34.780
Now that's something we haven't seen before,

44
00:03:34.780 --> 00:03:39.490
the navigator is always something I'll have a way closer look at in the navigation section of this

45
00:03:39.490 --> 00:03:40.000
course,

46
00:03:40.000 --> 00:03:44.190
it's built into Flutter and you can do a lot of awesome stuff. Here,

47
00:03:44.200 --> 00:03:51.250
we simply use its pop method to basically close the topmost screen that is displayed and that is that

48
00:03:51.250 --> 00:03:51.850
modal sheet

49
00:03:51.850 --> 00:03:57.790
if it's opened. So that closes that modal sheet by popping it off and more on that and what it does in

50
00:03:57.790 --> 00:04:04.840
detail in a later section. Of context here is required to get access to the right navigator or to give

51
00:04:04.840 --> 00:04:11.590
the navigator some metadata and context here, just like widget, is a special property which is available

52
00:04:11.920 --> 00:04:18.610
class wide in your state class here. Even though you never defined a property named context, it's made

53
00:04:18.610 --> 00:04:20.770
available because we extend state.

54
00:04:20.770 --> 00:04:22.180
So it's basically like widget,

55
00:04:22.180 --> 00:04:26.950
it's a special property that is available and that in this case gives you access to the context of your

56
00:04:26.950 --> 00:04:31.160
widget. Widget gives you access to the class itself, to its properties and so on,

57
00:04:31.270 --> 00:04:36.370
context gives you access to the context related to your widget. More on all of that later,

58
00:04:36.370 --> 00:04:43.420
with that however, we now added the functionality that we can automatically

59
00:04:43.420 --> 00:04:45.820
close our bottom modal sheet

60
00:04:45.820 --> 00:04:47.170
once we're done.

61
00:04:47.170 --> 00:04:54.630
So if I now add my new shoes here, which let's say costs 99.99, now you'll see that also closes

62
00:04:54.630 --> 00:04:55.970
the modal sheet.

63
00:04:56.020 --> 00:05:01.150
With that, let's continue with our app and let's again turn our heads towards styling.
