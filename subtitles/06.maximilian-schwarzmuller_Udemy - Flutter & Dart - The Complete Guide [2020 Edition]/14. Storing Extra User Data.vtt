WEBVTT
1
00:00:02.490 --> 00:00:08.430
Und um den Benutzernamen wiederherzustellen, müssen wir etwas tun, nachdem der Benutzer hier erstellt wurde, da dies wichtig

2
00:00:08.430 --> 00:00:11.820
ist, um einen Benutzer mit E-Mail und Passwort zu erstellen.

3
00:00:11.820 --> 00:00:18.750
Wir können diese Daten wirklich nur speichern, aber sobald wir einen Benutzer erstellt haben,

4
00:00:18.750 --> 00:00:28.950
können wir natürlich auf die Fire Store-Datenbank zugreifen und dort zusätzliche Benutzerdaten speichern, wenn Sie möchten, damit wir einfach oft hierher gehen können.

5
00:00:29.100 --> 00:00:35.310
Wenn die Al-Anweisung aber immer noch im try-Block enthalten ist, weil die Dekodierung, die ich ausführen möchte, nur ausgeführt werden

6
00:00:35.340 --> 00:00:37.190
sollte, wenn dies erfolgreich war.

7
00:00:37.200 --> 00:00:38.760
Nicht wenn wir einen Fehler hatten.

8
00:00:38.760 --> 00:00:50.000
Also hier im Try-Block werde ich jetzt einen Fire Store verwenden, nicht Firebase Off, sondern Fire Store. Damit kann ich Paket

9
00:00:50.120 --> 00:01:00.840
Cloud Brände importieren. Das Wort Cloud Fire Store Punkt Dart das Paket, das ich Ihnen bereits vor einigen Minuten gezeigt

10
00:01:00.840 --> 00:01:13.350
habe, und dann nach dem Anmelden oder nach der Anmeldung möchte ich die Fire Store Dot-Instanz verwenden, um zusätzliche Benutzerdaten zu speichern, und

11
00:01:13.920 --> 00:01:20.820
zwar nicht nach dem Anmelden oder Anmelden, sondern erst nach dem Anmelden.

12
00:01:20.880 --> 00:01:22.620
Verschieben wir dies also in den else-Block.

13
00:01:22.620 --> 00:01:29.920
Dies sollte nur ausgeführt werden, wenn wir uns angemeldet haben und nicht, wenn wir uns angemeldet haben. Daher können wir hier die Sammlung aufrufen,

14
00:01:29.920 --> 00:01:32.980
um auf eine Sammlung und die Sammlung der Benutzer zuzugreifen.

15
00:01:32.980 --> 00:01:36.740
Diese Sammlung existiert noch nicht, wird aber im laufenden Betrieb erstellt.

16
00:01:36.760 --> 00:01:42.570
Wir müssen es also nicht im Voraus erstellen und können dann auf ein bestimmtes Dokument abzielen.

17
00:01:42.730 --> 00:01:47.920
Und ich möchte ein Dokument erstellen, das das I verwendet. D. D. meines Benutzers als Idee.

18
00:01:48.100 --> 00:01:54.720
Normalerweise, wenn Sie ein Dokument mit der Methode add ein neues I hinzufügen. D. D. wird dynamisch generiert.

19
00:01:54.760 --> 00:01:56.010
Das will ich hier nicht.

20
00:01:56.020 --> 00:02:03.160
Ich möchte eine vorhandene Idee verwenden. Ich möchte meinen vorhandenen Benutzer I verwenden. D. D. da ich. D. D. in der Sammlung dieses Benutzers.

21
00:02:03.160 --> 00:02:07.720
Und Sie können dies tun, indem Sie die Dokumentmethode verwenden und dann das I übergeben. D. D. Sie möchten als Argument für

22
00:02:07.720 --> 00:02:09.200
diese Methode verwenden.

23
00:02:09.430 --> 00:02:14.840
Und hier ist das Autor Angriff Punkt Benutzer Punkt Sie I. D ..

24
00:02:15.010 --> 00:02:22.600
Dieses Angriffsobjekt des Autors hier hat also ein Benutzerobjekt, das dann eine Benutzeroberfläche I hat. D. D. Feld, das

25
00:02:22.600 --> 00:02:30.480
dieser Benutzer ist I. D. D. Das wurde von Firebase für den Benutzer generiert. In diesem Dokument

26
00:02:30.600 --> 00:02:33.270
können wir dann Set-Daten aufrufen, um zusätzliche Daten für dieses Dokument zu speichern.

27
00:02:33.270 --> 00:02:35.340
Dies ist nur die Kennung des Dokuments.

28
00:02:35.340 --> 00:02:37.220
Hier kommen die zusätzlichen Daten.

29
00:02:37.380 --> 00:02:43.620
Wie bereits erwähnt, sind die zusätzlichen Daten, die Sie in einem Dokument gespeichert haben, hier eine Karte und flattern,

30
00:02:43.620 --> 00:02:45.620
und Sie können beliebige Schlüsselwertpaare haben.

31
00:02:45.630 --> 00:02:49.860
Also alles am Benutzernamen Schlüssel und der Wert ist Benutzername.

32
00:02:49.860 --> 00:02:57.410
Also der hier in diesem Argument gespeicherte Wert und ich werde die E-Mail auch wieder speichern, nur um sie dort

33
00:02:57.420 --> 00:02:59.760
auch in diesem Dokument zu haben.

34
00:02:59.760 --> 00:03:05.820
Und damit fügen wir der Sammlung neuer Benutzer einen neuen Benutzer hinzu, wenn wir einen neuen Benutzer anmelden.

35
00:03:05.850 --> 00:03:10.010
Deshalb haben wir hier einfach als zusätzliche Benutzerdaten selbst verwaltet.

36
00:03:10.350 --> 00:03:19.410
Jetzt, da die gesetzten Daten eine Zukunft zurückgeben, können wir auch dieses Jahr darauf warten, zum Beispiel einen Ladeindikator zu löschen, wenn

37
00:03:19.410 --> 00:03:27.150
wir einen hatten, oder zu tun, was auch immer Sie tun möchten, wenn wir damit fertig sind, bevor wir

38
00:03:27.150 --> 00:03:34.410
einen Ladeindikator verwalten. Lassen Sie mich jedoch die Sicherheit und löschen Sie diesen Benutzer tatsächlich dieses Benutzerkonto hier,

39
00:03:34.410 --> 00:03:40.910
nur damit ich diese E-Mail-Adresse wiederverwenden kann, und dann klicke ich hier erneut auf Anmelden.

40
00:03:40.930 --> 00:03:43.860
Wenn wir diesen Benutzer aktualisieren, wird er neu erstellt.

41
00:03:43.960 --> 00:03:52.050
Aber jetzt, wenn wir zur Datenbank gehen, sehen wir hier und dort eine neue Benutzersammlung und dann sehen wir ein Dokument mit

42
00:03:52.080 --> 00:03:55.070
diesem I. D. D. Und dort haben wir die E-Mail und den Benutzernamen.

43
00:03:55.080 --> 00:04:03.270
Das sind also zusätzliche Daten, die gespeichert wurden, und jetzt, nur um diesen Authentifizierungsprozess abzuschließen, wäre es meiner

44
00:04:03.660 --> 00:04:10.290
Meinung nach ein bisschen schöner, wenn diese Anmeldeschaltfläche durch einen Ladespinner ersetzt würde oder vielleicht

45
00:04:10.290 --> 00:04:16.380
beide Schaltflächen durch einen Ladespinner ersetzt würden Während wir auf ein Ergebnis

46
00:04:16.380 --> 00:04:24.390
warten und eine solche Funktionalität einfach hinzufügen können, indem wir zum Off-Screen gehen, haben wir hier ein Widget

47
00:04:24.390 --> 00:04:34.650
mit vollem Status, sodass wir hier in der Statusleiste außerhalb des Bildschirms einen Status verwalten können. Das Laden kann anfänglich falsch sein und

48
00:04:34.650 --> 00:04:41.700
Wir möchten dies auf true setzen, wenn wir uns anmelden oder wenn wir uns anmelden.

49
00:04:41.700 --> 00:04:51.620
Also werde ich hier zu Beginn der Probesperre bleiben und set wird gleich true geladen und das Laden sollte

50
00:04:51.620 --> 00:04:54.010
auf Stürze zurückgesetzt werden.

51
00:04:54.140 --> 00:04:55.850
Wenn wir einen Fehler haben.

52
00:04:56.750 --> 00:05:02.650
Hier am Ende beider Catch-Blöcke rufe ich set state auf und set wird zurück auf FALSE geladen.

53
00:05:02.690 --> 00:05:07.290
Lassen Sie uns dies also in die gesamte Bearbeitung hier einschließen und es sollte auch auf false gesetzt werden.

54
00:05:07.310 --> 00:05:13.700
Hier im Erfolgsfall, dass wir diese zusätzlichen Benutzerdaten tatsächlich hinzugefügt haben, aber wir müssen dies hier

55
00:05:13.700 --> 00:05:20.860
nicht tun, da wir den Benutzer bald sowieso woanders navigieren werden, so dass wir das hier nicht tun müssen.

56
00:05:20.910 --> 00:05:27.950
Jetzt müssen wir natürlich den Ladezustand nutzen, um das Formular zu deaktivieren.

57
00:05:27.980 --> 00:05:33.820
Ich werde tatsächlich passieren, wird geladen und aus dem Formular einfügen, das wir jetzt akzeptieren müssen.

58
00:05:34.020 --> 00:05:40.090
Also füge ich hier in Off-Form eine zweite Eigenschaft hinzu, die ich hier bekommen möchte.

59
00:05:40.350 --> 00:05:51.110
Boolean wird geladen, was durch den Konstruktor wie folgt festgelegt wird, und dann können wir in unserem Widget-Baum, der hier gerendert wird,

60
00:05:51.110 --> 00:05:58.830
die Race-Schaltfläche auf dem Flug und die Flap-Schaltfläche durch eine Ladeanzeige ersetzen, an der Dad

61
00:05:58.920 --> 00:06:07.620
überprüfen kann, ob das Widget geladen wird ist wahr und wenn das der Fall ist, werde ich

62
00:06:07.620 --> 00:06:13.120
eine kreisförmige Fortschrittsanzeige rendern und der Rennknopf sollte entfernt werden.

63
00:06:13.130 --> 00:06:19.100
Wenn das Widget nicht geladen wird, sollte diese Schaltfläche angezeigt und daher entfernt werden.

64
00:06:19.100 --> 00:06:23.240
Wenn wir laden und ich hier die gleiche Logik auf den flachen Knopf anwende.

65
00:06:23.300 --> 00:06:28.700
Die beiden Schaltflächen werden also nur angezeigt, wenn wir nicht laden, wenn wir laden. Stattdessen wurde

66
00:06:28.700 --> 00:06:30.470
eine kreisförmige Fortschrittsanzeige angezeigt.

67
00:06:30.470 --> 00:06:33.350
Wenn ich dies speichere, klicken Sie auf Anmelden. Sie sehen den Ladespinner.

68
00:06:33.410 --> 00:06:38.000
Und dann bekomme ich hier eine Fehlermeldung, weil ich bereits seine E-Mail-Adresse verwendet habe, aber Sie sehen, dass der

69
00:06:38.060 --> 00:06:38.680
Ladespinner funktioniert.

70
00:06:38.990 --> 00:06:39.930
Das ist großartig.

71
00:06:41.730 --> 00:06:47.890
Damit haben wir die zusätzlichen Daten gespeichert.

72
00:06:48.090 --> 00:06:52.540
Stellen wir nun sicher, dass der Benutzer tatsächlich zum Chat-Bildschirm wechselt.

73
00:06:52.650 --> 00:06:54.450
Wenn wir authentifiziert sind.
