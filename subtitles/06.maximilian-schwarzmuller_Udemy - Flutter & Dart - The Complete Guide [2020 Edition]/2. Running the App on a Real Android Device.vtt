WEBVTT
1
00:00:02.280 --> 00:00:09.710
Thus far, we only tested our application on an Android emulator and that is generally fine of course,

2
00:00:09.720 --> 00:00:16.440
Android is one of the major platforms you typically develop for but of course, you might also want to

3
00:00:16.440 --> 00:00:19.550
test your app on an iOS simulator

4
00:00:19.590 --> 00:00:27.540
if you are developing on a macOS system because you can only build iOS apps on macOS systems unfortunately

5
00:00:28.140 --> 00:00:34.800
or maybe you don't want to test your application on an emulator only but also on a real device and we'll

6
00:00:34.800 --> 00:00:42.180
have a look at all these other use cases or these other ways of running our application over the next

7
00:00:42.180 --> 00:00:43.170
minutes.

8
00:00:43.200 --> 00:00:49.530
So here's the Android emulator and I created it with the help of the AVD manager

9
00:00:49.530 --> 00:00:55.590
as I showed earlier in the course, start it through Android Studio, you can open that AVD manager and

10
00:00:55.590 --> 00:00:57.300
spin up your emulator there,

11
00:00:57.330 --> 00:00:59.430
so that is what we already did.

12
00:00:59.430 --> 00:01:06.570
How could we now launch this app on a real Android device though? For that, you first of all need to prepare

13
00:01:06.570 --> 00:01:07.820
your Android device and

14
00:01:07.840 --> 00:01:14.520
that means that you need to open your settings on your device and there, choose these developer options.

15
00:01:14.550 --> 00:01:17.490
However, you might not have that option in your menu,

16
00:01:17.490 --> 00:01:24.090
in this case, go to about phone and there, tap on that build number seven times.

17
00:01:24.090 --> 00:01:31.580
Now that might look strange but this actually gives you this developer options menu item here,

18
00:01:31.580 --> 00:01:34.730
so tap on that build number here seven times,

19
00:01:34.730 --> 00:01:37.610
I already activated it, so that's why I get this message

20
00:01:37.970 --> 00:01:41.000
and once you did this, you should have the developer options here.

21
00:01:41.000 --> 00:01:46.370
Now there, generally make sure that it's turned on and then there's one specific option you need to

22
00:01:46.430 --> 00:01:49.530
enable and that is USB debugging.

23
00:01:49.640 --> 00:01:53.610
Make sure that USB debugging is switched on,

24
00:01:53.610 --> 00:01:59.620
thereafter connect your device, your Android device with a USB cable to the machine you're working on,

25
00:01:59.660 --> 00:02:04.790
so you you're developing this Flutter app on and now you should be able to boot that Flutter app onto

26
00:02:04.790 --> 00:02:06.230
that device.

27
00:02:06.230 --> 00:02:11.540
Now here actually in this Flutter app which I have here, I now can choose my device in the bottom right

28
00:02:11.540 --> 00:02:13.820
corner, here in Visual Studio Code,

29
00:02:13.820 --> 00:02:20.660
I now have the choice whether I want to use the emulator or my device here and in Android Studio, you would

30
00:02:20.660 --> 00:02:27.250
also have an option of choosing where to boot it. If you're not sure how you can choose that,

31
00:02:27.320 --> 00:02:33.590
you can always simply quit the emulator so that you only have the connected device as the only device

32
00:02:33.590 --> 00:02:39.950
on which the app could be installed and run and then, the Flutter run command or running it with the

33
00:02:39.950 --> 00:02:43.810
debug command here should automatically pick the connected device.

34
00:02:43.820 --> 00:02:49.610
So here, I selected the connected device in the dropdown menu and with that, I can run the app

35
00:02:49.670 --> 00:02:51.530
as I always run it,

36
00:02:51.530 --> 00:02:57.680
so either with the Flutter run command or in Visual Studio Code, here with debug, start without debugging

37
00:02:57.770 --> 00:02:58.960
or in debugging mode

38
00:02:58.970 --> 00:03:05.000
but I will go without debugging since this is a bit faster and now the app will be built as it was before

39
00:03:05.420 --> 00:03:10.940
and it will then be shipped onto the real device and will be installed and launched there so that you

40
00:03:10.940 --> 00:03:11.940
can test it there.

41
00:03:12.150 --> 00:03:14.100
Now let's wait for that to finish.

42
00:03:14.210 --> 00:03:20.330
So here's the app running on my real device, on my real connected Android device and of course there,

43
00:03:20.360 --> 00:03:24.560
I can interact with it just as I could in the emulator, which is good,

44
00:03:24.560 --> 00:03:26.640
you should see the same result here.

45
00:03:26.810 --> 00:03:33.710
Now when developing an app, testing it on real devices is really crucial and something you absolutely

46
00:03:33.710 --> 00:03:41.720
have to do because whilst the emulators are really good and really emulate real devices, it's just

47
00:03:41.720 --> 00:03:42.740
a simulation,

48
00:03:42.770 --> 00:03:44.940
nothing can replace a real device.

49
00:03:45.050 --> 00:03:51.200
So testing on a real device and if possible, on different real devices is something you should do as

50
00:03:51.200 --> 00:03:53.630
part of every app development process.
