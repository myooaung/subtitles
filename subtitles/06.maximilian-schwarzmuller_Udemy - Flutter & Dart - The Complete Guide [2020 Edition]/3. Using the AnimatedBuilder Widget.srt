1
00:00:02,560 --> 00:00:08,980
So instead of manually managing our animation here with the listener, I still want to get rid of the controller

2
00:00:08,980 --> 00:00:13,480
by the way but instead of manually managing the listener and calling set state and therefore running

3
00:00:13,480 --> 00:00:22,060
the full build method here of that widget, of that auth card here for every change, we can fall back to

4
00:00:22,060 --> 00:00:24,310
a built-in widget.

5
00:00:24,310 --> 00:00:29,800
In the end, it's the container here which we want to change for every change in our animation or

6
00:00:29,800 --> 00:00:33,060
for every frame on our screen so to say.

7
00:00:33,070 --> 00:00:38,380
So here we can use another widget that's built into Flutter and that's the animated builder.

8
00:00:38,380 --> 00:00:41,770
Now you know these builder widgets by now, we have the future builder

9
00:00:41,840 --> 00:00:43,450
and we had other builders as well.

10
00:00:43,450 --> 00:00:50,440
The idea always is that Flutter executes something for you and then rebuilds a part of the user interface,

11
00:00:50,440 --> 00:00:55,660
a part of this widget tree when that something is done or when that something changes instead of the

12
00:00:55,660 --> 00:00:56,940
entire widget tree

13
00:00:57,100 --> 00:01:01,750
and here indeed, you give the animated builder and animation and that here would be our height animation

14
00:01:01,750 --> 00:01:07,720
of course and you give it a builder function to decide what to re-render whenever that changes,

15
00:01:07,720 --> 00:01:16,000
so in this case for every frame. In that builder here, you get build context and then also a child

16
00:01:16,010 --> 00:01:21,160
widget and then you re-render a part of your tree.

17
00:01:21,220 --> 00:01:27,130
In my case here I want to re-render that container and now something interesting will also happen

18
00:01:27,130 --> 00:01:28,660
in a second.

19
00:01:28,660 --> 00:01:34,720
I'll add this container in here and please note that I only cut the container until the child key here

20
00:01:35,320 --> 00:01:40,000
because to the animated builder, you can also pass a child argument,

21
00:01:40,000 --> 00:01:46,930
so besides animation and builder, you can pass in a child argument and that can be and a part of that

22
00:01:46,930 --> 00:01:52,270
widget tree which should be nested into that widget tree you are rebuilding with builder which then

23
00:01:52,270 --> 00:01:54,070
actually won't be rebuilt

24
00:01:54,070 --> 00:01:56,550
and I covered this pattern earlier in the course already.

25
00:01:56,860 --> 00:02:01,630
So for example at the moment, our form here and everything that's in the form,

26
00:02:01,660 --> 00:02:03,210
so let me grab all of that,

27
00:02:03,370 --> 00:02:07,580
that does not change when we animate the container.

28
00:02:07,810 --> 00:02:14,590
So I want to pass this as an argument to child here on my animated builder like this

29
00:02:18,620 --> 00:02:23,680
and then this is made available on this child

30
00:02:23,680 --> 00:02:30,520
argument here which you could also name just ch to avoid confusion which is passed into that builder

31
00:02:30,550 --> 00:02:36,000
function, passed automatically, so that's this static child I defined here and this is what I'll now set

32
00:02:36,010 --> 00:02:39,990
up here as a child of the container which I animate.

33
00:02:40,180 --> 00:02:46,450
So the thing inside of the thing which I animate will not be re-rendered on every frame and that's

34
00:02:46,450 --> 00:02:52,600
of course far more efficient than re-rendering the entire widget tree, even if only the container changes.

35
00:02:53,870 --> 00:02:54,730
Now in the container,

36
00:02:54,730 --> 00:03:01,280
I still use height animation value height to change my height because that hasn't changed and I just

37
00:03:01,280 --> 00:03:05,320
need to get rid of one extra

38
00:03:05,320 --> 00:03:11,080
closing parentheses down there and now we should have the same effect as before but without manually

39
00:03:11,080 --> 00:03:17,260
setting up a listener to the animation and behind the scenes also in a more efficient way because everything

40
00:03:17,260 --> 00:03:18,490
inside of that container,

41
00:03:18,490 --> 00:03:24,190
so the text form fields and the buttons and so on will not re-render for every frame, will not be rebuilt

42
00:03:24,190 --> 00:03:28,280
for every frame but instead, only the container,

43
00:03:28,420 --> 00:03:33,460
so the height therefore will change on every frame and that's more efficient than re-rendering everything

44
00:03:33,730 --> 00:03:40,780
and we don't have to manually set up a listener for our animation. So animated builder is already a very

45
00:03:40,780 --> 00:03:47,740
useful built-in widget Flutter ships with that helps us with efficiently controlling animations on a part

46
00:03:47,830 --> 00:03:48,810
of our screen.
