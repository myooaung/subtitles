1
00:00:02,180 --> 00:00:03,080
Das ist schön.

2
00:00:03,080 --> 00:00:05,660
Natürlich fehlen Funktionen.

3
00:00:05,660 --> 00:00:11,300
Zum Beispiel haben wir keinen Bild-Upload. Wir zeigen das Bild des Absenders oder den Benutzernamen des Absenders

4
00:00:11,300 --> 00:00:13,680
hier neben unseren Nachrichten nicht an.

5
00:00:13,910 --> 00:00:21,620
Aber bevor wir uns mit all dem befassen, wollen wir tatsächlich sehen, ob dies funktioniert und ob CU-Geräte zu Simulatoren

6
00:00:21,620 --> 00:00:30,170
für alle toten Läufer auf ISIS hier miteinander sprechen können. Alle stoppen diesen Prozess hier und führen ihn auf Android einmal vollständig

7
00:00:30,170 --> 00:00:37,130
aus, so dass dies neu ist Die Version ist auf Android installiert, sodass ich beim nächsten Beenden

8
00:00:37,130 --> 00:00:40,250
immer noch auf dem Gerät starten kann.

9
00:00:40,250 --> 00:00:47,170
Sonst hätte ich einen älteren Zustand der App gestartet, den ich natürlich nicht will.

10
00:00:47,180 --> 00:00:49,640
Jetzt kann ich uns mit diesem Rennen wieder töten.

11
00:00:49,640 --> 00:00:58,650
Aber jetzt kann ich es für die App-Schublade starten und in diesen späteren Zustand gelangen. Jetzt werde ich es starten.

12
00:00:58,650 --> 00:01:07,090
Ich sollte es jetzt starten. Ich werde diese Statusleiste im Visual Studio-Code aufrufen und hier auf meinen Emulator klicken

13
00:01:07,090 --> 00:01:10,120
dort und starten Sie den Iaw-Simulator.

14
00:01:10,120 --> 00:01:20,520
Alternativ können Sie einfach über X-Code starten, sodass dieser IOW-Emulator jetzt hochfährt.

15
00:01:20,660 --> 00:01:26,030
Und mit diesem Boot laufen alle flacher, da es dort unten ausgewählt ist.

16
00:01:26,060 --> 00:01:28,890
Wenn ich die Flatter-App starte, läuft sie auf diesem Gerät.

17
00:01:28,920 --> 00:01:32,410
Jetzt wird die App für ISIS erstellt und dort gestartet.

18
00:01:33,260 --> 00:01:38,150
Und da dies das erste Mal ist, dass ich es ausführe, werden auch alle Pakete, die ich zur App hinzugefügt

19
00:01:38,180 --> 00:01:41,210
habe, beim ersten Setup usw. ausgeführt, sodass dies etwas länger dauern kann.

20
00:01:42,050 --> 00:01:49,760
Und was Sie hier möglicherweise beobachten, ist, dass es im Grunde stecken bleibt und diesen seltsamen Fehler zeigt, der die

21
00:01:49,760 --> 00:01:55,700
Standard-Firebase-App zuerst über den Aufrufstapel konfiguriert, wenn Sie dies erhalten. Sie können diesen Startvorgang unter

22
00:01:55,700 --> 00:02:01,970
ISIS einfach abbrechen und einfach sicherstellen, dass Sie dieses Projekt öffnen den ISIS-Ordner dort durch X-Code

23
00:02:02,690 --> 00:02:11,790
und dann hier auf Runner klicken, mit der rechten Maustaste darauf klicken und Werbedateien für Runner auswählen und jetzt hier diese Google Service Info

24
00:02:11,790 --> 00:02:18,840
P-Listendatei erneut auswählen, die wir zuvor heruntergeladen und in diesem Ordner gespeichert haben. Klicken Sie auf Hinzufügen und

25
00:02:18,930 --> 00:02:21,700
über X hinzufügen Code wie dieser.

26
00:02:21,780 --> 00:02:26,060
Es befindet sich immer noch am selben Ort, aber dies macht X-Code darauf aufmerksam.

27
00:02:26,090 --> 00:02:32,380
Sobald Sie dies getan haben, können Sie versuchen, diese App erneut auszuführen.

28
00:02:32,380 --> 00:02:38,260
Gehen Sie also erneut zum Laufen und stellen Sie sicher, dass Sie das iPhone oder den von Ihnen verwendeten Simulator auswählen und die

29
00:02:38,260 --> 00:02:39,240
Flatter-App erneut starten.

30
00:02:39,250 --> 00:02:42,640
Und jetzt sollte es diesmal funktionieren.

31
00:02:42,700 --> 00:02:46,290
Also lasst uns noch einmal warten.

32
00:02:46,300 --> 00:02:53,080
Jetzt starte ich diese App hier und erstelle hier ein neues Konto. Test to at

33
00:02:53,080 --> 00:03:01,450
test dot com mit einem anderen Benutzernamen und meinem Passwort. Ich klicke auf Anmelden, um diesen Benutzer zu erstellen.

34
00:03:01,450 --> 00:03:03,570
Jetzt sehe ich hier, dass alle Nachrichten nicht von mir sind.

35
00:03:03,580 --> 00:03:04,720
Das macht Sinn.

36
00:03:04,820 --> 00:03:10,740
Und wenn ich hier eine Nachricht sende, ist dies ein Test des anderen.

37
00:03:10,960 --> 00:03:22,140
Der Weise und Benutzer, wenn ich diese Nachricht hier sende, sehen Sie sie hier oben und hier oben links.

38
00:03:22,140 --> 00:03:29,660
Das funktioniert jetzt also von diesem Benutzer, andererseits wird es natürlich auch auf dem richtigen Gerät angezeigt.

39
00:03:29,720 --> 00:03:35,570
Aber hier wird angezeigt, als ob es nicht von diesem Benutzer stammt, weil ich nicht an zwei verschiedenen

40
00:03:35,570 --> 00:03:37,700
Benutzern auf diesen beiden Geräten arbeite.

41
00:03:38,120 --> 00:03:39,800
Das ist ziemlich erstaunlich.

42
00:03:39,800 --> 00:03:46,880
Dies funktioniert ziemlich gut und wir können sehen, dass die App auf beiden Geräten funktioniert und dass wir chatten können.

43
00:03:46,880 --> 00:03:52,130
Jetzt ist natürlich die andere Funktionalität wie Abmelden und so weiter, obwohl es immer noch funktionieren

44
00:03:52,130 --> 00:03:52,480
sollte.

45
00:03:52,490 --> 00:03:55,390
Lassen Sie es uns der Vollständigkeit halber ganz schnell testen.

46
00:03:55,400 --> 00:03:57,350
Ja sieht gut aus für mich.

47
00:03:57,350 --> 00:04:04,160
Wir haben also diese grundlegende Chat-Funktionalität, aber im Moment ist es schwer zu sagen, von wem eine

48
00:04:04,160 --> 00:04:11,810
Nachricht kommt. Es wäre besser, wenn wir auch den Benutzernamen zumindest des Benutzers sehen könnten, der eine Nachricht geschrieben hat, vielleicht

49
00:04:11,960 --> 00:04:19,150
wie ein fetter Titel über dem tatsächliche Nachricht, die uns sagt, wer der Benutzer ist, der diese Nachricht geschrieben hat.

50
00:04:19,190 --> 00:04:21,140
Hier werden wir als nächstes hinzufügen.
