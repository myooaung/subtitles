1
00:00:02,300 --> 00:00:05,710
Quindi abbiamo aggiunto questa immagine alla convalida e mostriamo un errore.

2
00:00:05,740 --> 00:00:10,780
Se non abbiamo un'immagine, aggiungiamo già anche il pacchetto di archiviazione firebase.

3
00:00:10,790 --> 00:00:17,400
Quindi ora assicuriamoci di poter anche caricare un'immagine per quella parte posteriore e via per lui.

4
00:00:17,400 --> 00:00:23,240
Raccogliamo quel file di immagine dell'utente e lo convalidiamo qui.

5
00:00:23,250 --> 00:00:29,130
E se superiamo questa convalida e tutto è valido, vogliamo assicurarci di fornire effettivamente quel

6
00:00:29,160 --> 00:00:32,310
file di immagine anche fuori dallo schermo.

7
00:00:32,430 --> 00:00:37,740
Perché nello schermo spento inviamo tutti quei dati a Firebase e caricare l'immagine ora sarà semplicemente un

8
00:00:37,740 --> 00:00:38,840
passo in più.

9
00:00:38,850 --> 00:00:40,910
Dovremmo esibirci qui.

10
00:00:40,960 --> 00:00:47,230
Ovviamente non possiamo passare all'immagine Kuti fuori dallo schermo così come passiamo gli altri dati qui quando chiamiamo quella

11
00:00:47,230 --> 00:00:53,340
funzione di invio che otteniamo dallo schermo esterno oltre a passare la password e il nome utente dell'utente.

12
00:00:53,410 --> 00:00:59,470
Possiamo anche passare il nostro file immagine dell'utente e questo potrebbe essere nullo se eseguiamo l'accesso, ma possiamo semplicemente

13
00:00:59,470 --> 00:01:04,380
assicurarci che non ci preoccupiamo del file fuori dallo schermo nel caso di accesso.

14
00:01:04,390 --> 00:01:09,250
Ora ovviamente questo attualmente non soddisfa o non si adatta alla nostra firma di funzione.

15
00:01:09,340 --> 00:01:15,640
Dovremmo chiarire qui quando definiamo che invii di nuovo che dopo il nome utente ci aspettiamo

16
00:01:16,010 --> 00:01:18,610
di ottenere un file di immagine.

17
00:01:18,610 --> 00:01:22,260
Ma ora dobbiamo anche regolare come nello schermo fuori ovviamente caro.

18
00:01:22,330 --> 00:01:27,210
Dobbiamo anche aggiungere questo invio solo per il metodo qui.

19
00:01:27,280 --> 00:01:38,310
Dovremmo aspettarci che un file immagine e un file come hai appreso siano ovviamente importati dal dardo Io in questo modo.

20
00:01:38,320 --> 00:01:43,250
Quindi ora otteniamo questo file di immagine e sì, potrebbe essere nullo nel registro, ma non ci interessa.

21
00:01:43,270 --> 00:01:49,390
Non avremmo comunque subito danni lì, ma con quello fornito qui dovrebbe essere disponibile se ci stiamo iscrivendo

22
00:01:49,390 --> 00:01:55,030
e quindi qui nel processo di registrazione ora vogliamo caricare l'immagine e voglio caricare l'immagine prima

23
00:01:55,030 --> 00:02:01,990
di scrivere tutto ciò dati extra per la nostra raccolta di utenti perché un percorso per l'immagine caricata dovrebbe anche

24
00:02:02,170 --> 00:02:06,860
essere qualcosa che tutti noi avremo diritto alla raccolta dell'utente in futuro.

25
00:02:06,970 --> 00:02:14,200
Pertanto, desideriamo avviare o eseguire il caricamento dell'immagine qui prima di scrivere i nostri dati utente extra

26
00:02:14,200 --> 00:02:15,670
nella raccolta dell'utente.

27
00:02:15,670 --> 00:02:24,820
Ora per questo abbiamo bisogno di questo pacchetto extra il pacchetto di archiviazione firebase e da lì al file dardo di archiviazione

28
00:02:24,970 --> 00:02:30,870
di Firebase e quel pacchetto di archiviazione di base può ora essere utilizzato qui.

29
00:02:31,030 --> 00:02:37,360
Usiamo l'archiviazione Firebase e di nuovo qui abbiamo una proprietà di istanza proprio come l'abbiamo su fire store

30
00:02:37,360 --> 00:02:38,610
e firebase off.

31
00:02:38,740 --> 00:02:44,020
E questo ci dà accesso a questa unica istanza globale di archiviazione firebase

32
00:02:44,020 --> 00:02:54,260
che viene riconfigurata con il token e con tutto e lì ora possiamo chiamare ref wrath ci dà accesso al nostro bucket di archiviazione cloud

33
00:02:54,260 --> 00:02:59,630
di route e per comprendere appieno questo, diamo un'occhiata al Firebase Cloud Storage

34
00:02:59,630 --> 00:03:04,900
nella console Web Firebase prima abbiamo dato un'occhiata all'autenticazione e al database.

35
00:03:05,000 --> 00:03:10,370
Ora lavoreremo con l'archiviazione, quindi facciamo clic sull'archiviazione per vedere come appare.

36
00:03:10,370 --> 00:03:15,800
Ora come sempre qui puoi saperne di più su di esso attraverso i documenti e così via, ma possiamo semplicemente fare

37
00:03:15,800 --> 00:03:16,860
clic su per iniziare.

38
00:03:17,060 --> 00:03:23,480
E prima di tutto, proprio come con il database firebase, così come con Fire Store, dobbiamo impostare alcune regole e possiamo semplicemente

39
00:03:24,040 --> 00:03:25,820
fare clic il prossimo anno.

40
00:03:25,820 --> 00:03:30,680
Queste saranno le regole predefinite e per noi andranno bene e fare clic su Fatto in seguito.

41
00:03:30,680 --> 00:03:36,400
E questo fa qualcosa che si chiama creare un bucket nella memoria firebase.

42
00:03:36,440 --> 00:03:42,470
Puoi caricare qualsiasi tipo di file non solo immagini e questi file saranno organizzati in cosiddetti bucket e

43
00:03:42,770 --> 00:03:46,010
il tuo progetto Firebase viene fornito con un bucket.

44
00:03:46,010 --> 00:03:52,520
Ora in quel bucket puoi avere alcune cartelle e così via, ma dovrai avere un bucket principale e questo bucket principale

45
00:03:52,520 --> 00:03:56,260
è ciò a cui si riferirà ref se lo chiami così.

46
00:03:56,300 --> 00:03:59,030
Fondamentalmente indicherà il bucket di Root

47
00:04:01,760 --> 00:04:04,540
ora che qui puoi archiviare i tuoi file.

48
00:04:04,550 --> 00:04:09,700
Puoi anche caricare manualmente puoi creare una cartella qui come puoi vedere e puoi fare più cose.

49
00:04:09,710 --> 00:04:15,260
Puoi anche aggiungere un nuovo bucket ma ciò ti costerebbe denaro extra, quindi non consiglierei

50
00:04:15,530 --> 00:04:21,950
di farlo qui soprattutto perché puoi creare sottocartelle un bucket dovrebbe andare bene per molti tipi di progetti.

51
00:04:22,010 --> 00:04:27,890
Ora, proprio come il tuo database, anche il tuo spazio di archiviazione può essere protetto con le regole e

52
00:04:27,920 --> 00:04:33,770
le regole generalmente funzionano in modo simile a quello del negozio di fuoco dove puoi immergerti nei dock

53
00:04:33,800 --> 00:04:40,340
per imparare tutto su di loro, ma puoi vedere che è praticamente lo stesso qui tuttavia non operiamo su raccolte e

54
00:04:40,670 --> 00:04:44,630
documenti ma invece sui nostri secchi e qui abbiamo solo un secchio.

55
00:04:44,630 --> 00:04:50,360
Ma potresti avere più di uno e poi i nostri pop nei secchi così le nostre cartelle e file.

56
00:04:50,360 --> 00:04:55,880
Ma oltre a ciò le regole sono molto simili e qui ad esempio stiamo dicendo che l'accesso

57
00:04:56,060 --> 00:05:00,380
in lettura e scrittura a qualsiasi file è concesso se si è autenticati.

58
00:05:00,470 --> 00:05:05,530
Quindi so che le richieste autenticate che non provengono dagli utenti registrati vengono negate.

59
00:05:05,540 --> 00:05:11,630
E questo è ovviamente fantastico perché non vogliamo che nessuno carichi file o guardi i nostri file solo gli

60
00:05:11,630 --> 00:05:14,580
utenti autenticati dovrebbero essere in grado di farlo.

61
00:05:14,840 --> 00:05:16,500
E farò un ulteriore passo avanti.

62
00:05:16,580 --> 00:05:24,460
Non garantirò il giusto accesso qui, ma creerò solo l'accesso in modo che l'eliminazione e la modifica dei file non sia effettivamente possibile

63
00:05:24,460 --> 00:05:30,340
per nessuno perché in questa app diciamo che vogliamo consentire agli utenti di caricare file e visualizzare

64
00:05:30,340 --> 00:05:34,710
immagini ma non vogliamo che siano in grado di eliminare i file.

65
00:05:34,750 --> 00:05:40,030
Possiamo sempre farlo manualmente qui dalla console se vogliamo ripulire lo spazio di archiviazione ma gli utenti non saranno in

66
00:05:40,030 --> 00:05:41,870
grado di farlo in questa app.

67
00:05:41,950 --> 00:05:47,230
Ma ovviamente puoi avere un controllo molto granulare e puoi trovare sintonizzato sulle tue esigenze e sulle

68
00:05:47,230 --> 00:05:48,300
tue esigenze applicative.

69
00:05:48,340 --> 00:05:52,120
Con l'aiuto della scatola ufficiale se hai bisogno di una configurazione diversa.

70
00:05:52,270 --> 00:05:58,260
Quindi, tuttavia, il caricamento e la visualizzazione dei file devono essere abilitati per gli utenti autenticati.

71
00:05:58,270 --> 00:06:00,960
E ora torniamo al nostro codice con rif.

72
00:06:00,970 --> 00:06:07,880
Abbiamo avuto accesso a questa tasca radice e sul ref ora possiamo chiamare Child child semplicemente ci consente di

73
00:06:07,880 --> 00:06:15,040
impostare un nuovo percorso e che ci consente di controllare dove vogliamo archiviare un file o da dove vogliamo leggere

74
00:06:15,040 --> 00:06:17,920
un file e qui sarebbe una stringa.

75
00:06:17,920 --> 00:06:21,550
Indicherò un pop di immagini dell'utente.

76
00:06:21,910 --> 00:06:26,260
No, questo non esiste ancora, ma dovrebbe quindi creare automaticamente tale percorso.

77
00:06:26,260 --> 00:06:32,300
In questo modo verrà creata una cartella di immagini utente alla fine in cui l'immagine dovrebbe essere memorizzata.

78
00:06:32,560 --> 00:06:39,400
E per questo farò un'altra telefonata perché quest'anno dovrebbe essere la cartella in cui è memorizzata

79
00:06:39,400 --> 00:06:40,000
l'immagine.

80
00:06:40,000 --> 00:06:42,800
Ora dobbiamo dare un nome all'immagine.

81
00:06:42,880 --> 00:06:50,800
Quindi qui se poi lo memorizzo come immagine P e G, creerebbe i pin immagine che hai archiviato in quella cartella.

82
00:06:50,800 --> 00:06:55,990
Ora, ovviamente, non voglio codificare il nome dell'immagine qui, perché altrimenti ci imbatteremo rapidamente in scontri

83
00:06:55,990 --> 00:06:59,800
di nomi in cui abbiamo più immagini con lo stesso nome.

84
00:06:59,800 --> 00:07:02,110
Invece voglio un nome univoco per immagine.

85
00:07:02,110 --> 00:07:05,980
E ovviamente tutto ciò che voglio per semplificare la mappatura di questa immagine a un utente.

86
00:07:05,980 --> 00:07:09,640
Quindi possiamo semplicemente usare l'utente I. D. come un nome di immagine.

87
00:07:09,640 --> 00:07:12,310
Ora abbiamo questa idea da tutti i risultati qui.

88
00:07:12,310 --> 00:07:20,650
Lì abbiamo quel campo utente con l'interfaccia utente I. D. campo e io I. D. è solo una stringa

89
00:07:20,650 --> 00:07:27,130
e tutto ciò che dobbiamo fare ora è aggiungere l'estensione del file e che dovrebbe essere Che pack perché per

90
00:07:27,130 --> 00:07:31,910
impostazione predefinita le immagini scattate con la fotocamera del dispositivo saranno di tipo Che pack.

91
00:07:31,930 --> 00:07:39,040
Quindi, ciò che fa ora è che imposta un puntatore su questo percorso nel nostro archivio, ma in questo momento ovviamente

92
00:07:39,040 --> 00:07:40,530
questo percorso non esiste.

93
00:07:40,540 --> 00:07:44,720
Abbiamo bisogno di avvolgere quella cartella e non abbiamo ancora quel file lì.

94
00:07:44,830 --> 00:07:47,140
E questo da solo non avvia il caricamento.

95
00:07:47,140 --> 00:07:54,740
Invece questo restituisce un cosiddetto riferimento di archiviazione che è un puntatore in un determinato percorso in modo che possiamo archiviare dove

96
00:07:54,750 --> 00:08:02,670
si trova in una costante ref e ora avviare il caricamento effettivo su quel percorso che ora abbiamo configurato chiamando il file

97
00:08:02,670 --> 00:08:11,280
ref put e questo farà ciò che implica il nome metterà un file in quel percorso e utilizzerà quest'ultimo segmento del percorso come nome del

98
00:08:11,280 --> 00:08:18,720
file, in questo caso l'utente I. D. con Che pack alla

99
00:08:18,720 --> 00:08:20,210
fine.

100
00:08:20,220 --> 00:08:27,660
Ora l'argomento che dobbiamo fornire per mettere il file è il file che vogliamo mettere loro e questa è ovviamente

101
00:08:28,200 --> 00:08:30,060
questa immagine che stiamo

102
00:08:34,100 --> 00:08:36,690
arrivando qui, quindi passerò semplicemente l'immagine qui.

103
00:08:36,710 --> 00:08:42,980
Ora puoi anche fornire un secondo argomento, ovvero i metadati di archiviazione che potresti impostare dove, ad esempio,

104
00:08:42,980 --> 00:08:49,040
puoi aggiungere metadati personalizzati per impostare la lingua del file, ma al momento non voglio farlo.

105
00:08:49,040 --> 00:08:51,370
Invece voglio solo caricare il file in questo modo.

106
00:08:51,440 --> 00:08:53,780
E ovviamente mettere un file richiede un po 'più di tempo.

107
00:08:53,900 --> 00:08:57,060
Ecco perché questo restituisce un'attività di caricamento della memoria.

108
00:08:57,080 --> 00:09:02,670
Questo non è lo stesso di un futuro ma fondamentalmente ha la stessa idea.

109
00:09:02,780 --> 00:09:11,980
Purtroppo non possiamo aspettarlo perché non è un futuro, ma possiamo effettivamente utilizzare la proprietà on complete su di

110
00:09:11,980 --> 00:09:16,420
esso che ci darà un futuro e possiamo aspettarlo.

111
00:09:16,420 --> 00:09:22,870
Ora l'attività stessa senza il completamento ha anche più possiamo controllare se è attualmente in corso se

112
00:09:22,870 --> 00:09:23,840
viene annullata.

113
00:09:23,890 --> 00:09:29,950
Siamo in grado di ascoltare vari eventi emessi che, ad esempio, ci consentono di monitorare l'avanzamento del caricamento.

114
00:09:30,040 --> 00:09:36,340
Ma qui mi interessa solo il completamento generale ed è per questo che ascolterò questo in un futuro

115
00:09:37,720 --> 00:09:39,270
completo finirà con questo.

116
00:09:39,420 --> 00:09:43,470
Prima di fare qualsiasi altra cosa salviamolo e vediamo se funziona.

117
00:09:43,500 --> 00:09:46,380
Quindi creiamo un nuovo account con test per esso.

118
00:09:46,380 --> 00:09:47,640
Prova dot

119
00:09:50,430 --> 00:09:53,120
com forse un po 'di password e

120
00:09:58,970 --> 00:10:08,480
con un'immagine ovviamente come questa e facciamo clic su registrati fruste forniscono un nome utente valido facciamo clic su registrati e continuiamo.

121
00:10:08,640 --> 00:10:11,160
Non vedo un errore qui quindi sembra buono.

122
00:10:11,370 --> 00:10:17,370
E ora ricarichiamo la nostra vista di archiviazione Firebase qui nella console Web e non dovresti vedere una

123
00:10:17,370 --> 00:10:19,490
cartella di immagini utente lì dentro.

124
00:10:19,530 --> 00:10:26,270
Questo file Che Peck e se fai clic su di esso dovresti anche vedere un'anteprima qui sulla destra e

125
00:10:26,270 --> 00:10:30,230
questo è il file che abbiamo appena caricato dal nostro dispositivo.

126
00:10:30,230 --> 00:10:35,420
Ed è fantastico perché questa ora è l'immagine dell'utente che abbiamo appena scelto.

127
00:10:35,420 --> 00:10:41,870
Quindi il caricamento dei file funziona, ma ovviamente ora vogliamo fare di più, vogliamo assicurarci di ottenere anche un link

128
00:10:41,870 --> 00:10:49,040
a questa immagine che possiamo usare per caricarlo, ad esempio nella nostra schermata di chat per mostrare la nostra immagine accanto a

129
00:10:49,040 --> 00:10:50,240
ogni messaggio .

130
00:10:50,750 --> 00:10:52,790
Quindi è quello su cui voglio lavorare dopo.
