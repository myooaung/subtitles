WEBVTT
1
00:00:02.290 --> 00:00:08.950
Now with all of that out of the way, it's time to add icons and a splash screen to the application. Splash

2
00:00:08.950 --> 00:00:09.430
screen

3
00:00:09.430 --> 00:00:12.910
is that loading screen users see whilst the app is booting up.

4
00:00:12.910 --> 00:00:18.280
For this, we can use a package, at least for the icons because normally adding such icons would be pretty

5
00:00:18.280 --> 00:00:18.930
cumbersome,

6
00:00:18.940 --> 00:00:23.920
you would have to manually add icons for different screen sizes and that's pretty annoying.

7
00:00:23.920 --> 00:00:29.800
With this package, you only need to provide one base icon and it will automatically create and configure

8
00:00:29.800 --> 00:00:35.530
icons for all kinds of different devices and even Android versions because for Android, there are different

9
00:00:35.530 --> 00:00:39.620
kinds of icons you can create based on the version your users are running.

10
00:00:39.820 --> 00:00:45.190
So search for flutter_launcher_icons and you should find this entry on pub.dev and then under

11
00:00:45.190 --> 00:00:46.090
the installing tab,

12
00:00:46.090 --> 00:00:51.550
we learned how to install that, in the README tab, you can learn all about the usage and configuration

13
00:00:51.880 --> 00:00:58.420
but let's simply use it. Go to your pubspec.yaml file and there, add it to the dev dependencies.

14
00:00:58.420 --> 00:01:01.630
Thus far, we always added packages to dependencies,

15
00:01:01.630 --> 00:01:05.260
these are packages which our app really uses during runtime,

16
00:01:05.260 --> 00:01:09.220
this is a package on the other hand which we only used during development time

17
00:01:09.280 --> 00:01:13.810
when we create these icons. It should not be part of our final app bundle,

18
00:01:13.930 --> 00:01:19.000
it should not be mixed into our app code so to say and that's why we have this dev dependencies key

19
00:01:19.210 --> 00:01:24.040
which defines dependencies we only need during development and which should not be included in the final

20
00:01:24.040 --> 00:01:24.990
app.

21
00:01:25.000 --> 00:01:29.200
So with that added here, now and that's something you learned in the official docs,

22
00:01:29.350 --> 00:01:36.070
you can set up a configuration in your pubspec.yaml file for this package. Add it on the same level

23
00:01:36.070 --> 00:01:42.160
as dev dependencies, so not as a dependency but on the same level and name it Flutter_ICONS

24
00:01:42.220 --> 00:01:50.780
like that. Then add a new entry, indent it by one level, so by two whitespaces and here, set Android to

25
00:01:50.780 --> 00:01:57.470
true and iOS to true, that simply tells this package to create both Android and iOS icons.

26
00:01:57.500 --> 00:02:02.790
Next, you need to set an image path to your base icon and right now you of course don't have a base icon,

27
00:02:02.810 --> 00:02:04.250
so let's change that.

28
00:02:04.550 --> 00:02:14.500
For that you can add a new folder, for example dev_assets if you want to, like this and then

29
00:02:14.500 --> 00:02:17.890
drag two files which you find attached to this video in the

30
00:02:17.890 --> 00:02:20.350
icon zip file into this folder,

31
00:02:20.350 --> 00:02:26.230
the places.png and the places-adaptive.png files. Drag them into the dev_assets folder and

32
00:02:26.230 --> 00:02:28.840
then go back into the pubspec.yaml file

33
00:02:29.020 --> 00:02:35.950
and now here under image path, you add a string with double quotes and point at dev_assets/ and then

34
00:02:35.950 --> 00:02:43.120
places.png and also add an adaptive icon background

35
00:02:43.150 --> 00:02:45.540
now, that will be a background color,

36
00:02:45.550 --> 00:02:50.830
adaptive icons are special Android icons which are used in newer versions of Android which give you these

37
00:02:50.890 --> 00:02:57.370
rounded app icons and there, you define a background that could be a color which you defined with

38
00:02:57.370 --> 00:02:57.820
#191919

39
00:02:57.820 --> 00:03:07.740
using a hex code, like this and also give it a foreground and that's your icon, the icon image,

40
00:03:08.460 --> 00:03:14.030
so foreground and then that's also a string pointing at dev_assets/places-adaptive.

41
00:03:14.040 --> 00:03:15.910
With that,

42
00:03:15.930 --> 00:03:20.900
this package will automatically generate you different Android icons for different Android versions

43
00:03:21.000 --> 00:03:26.130
so that whichever version your users are using, they are having a nice icon for your app,

44
00:03:26.160 --> 00:03:32.240
it will also generate icons for iOS of course. Now with that on the package

45
00:03:32.240 --> 00:03:36.270
README, in the package README, you learned which command to run to generate these icons,

46
00:03:36.290 --> 00:03:37.340
it's this command.

47
00:03:37.520 --> 00:03:39.100
We don't need that extra flag,

48
00:03:39.110 --> 00:03:43.940
you would only need that if you set up this configuration in a separate file and not in the pubspec.yaml

49
00:03:43.940 --> 00:03:45.850
file which we haven't.

50
00:03:45.890 --> 00:03:50.780
So let's simply copy that command and then go into the terminal here, in your project folder,

51
00:03:50.810 --> 00:03:57.290
copy it in, it's flutter pub run flutter_launcher_icons:main and this will

52
00:03:57.290 --> 00:04:02.840
now generate these icons based on the base icons we copied in here and automatically configure your

53
00:04:02.840 --> 00:04:06.350
Android and iOS project to use these icons.

54
00:04:06.380 --> 00:04:13.370
Now these are the icons, in the Android folder for example you'll find that res folder here and in there,

55
00:04:13.370 --> 00:04:18.680
a bunch of new drawable folders have been added, these hold your different icon versions,

56
00:04:18.680 --> 00:04:21.380
you shouldn't change these files directly.

57
00:04:21.440 --> 00:04:24.320
Now let's work on the launch screen as well

58
00:04:24.440 --> 00:04:30.230
and for Android, you do that in the res folder in that main folder in Android app src main res

59
00:04:30.740 --> 00:04:33.020
and there in the drawable folder like this,

60
00:04:33.020 --> 00:04:36.210
there you have the launch_background.xml file.

61
00:04:36.350 --> 00:04:41.010
This is the file where you configure what users see when your app is booting up.

62
00:04:41.210 --> 00:04:46.310
You can configure this in all kinds of ways and you can simply google for Android splash screen to find

63
00:04:46.310 --> 00:04:49.310
tons of tutorials on how you may configure this.

64
00:04:49.310 --> 00:04:51.710
Here, I'll simply comment out this entry here,

65
00:04:51.710 --> 00:04:59.900
this item entry to add an image on the splash screen and there I'll point at drawable, not bitmap but

66
00:04:59.900 --> 00:05:04.350
drawable and then splash icon

67
00:05:04.730 --> 00:05:09.620
and this is pointing at an image which we currently don't have though. Attached however, you'll find a

68
00:05:09.620 --> 00:05:15.630
splash zip file in which you'll find a bunch of drawable folders which are named like the drawable

69
00:05:15.630 --> 00:05:21.740
folders you have here and you can simply drag the splash-icon.png file you find in

70
00:05:21.740 --> 00:05:24.300
my drawable folders into your drawable folders,

71
00:05:24.350 --> 00:05:30.840
so the one from the drawable.hdpi folder, drag it into your Hdpi folder and so on.

72
00:05:30.920 --> 00:05:38.590
So let me quickly do that for all the attached icons and once you did that, I also scroll down and go

73
00:05:38.590 --> 00:05:44.950
to the values folder and there to colors.xml and make sure you add such a new entry there, a new entry

74
00:05:45.010 --> 00:05:51.880
with the color key where the name is splash and the value is #191919. It's the same color as for

75
00:05:51.880 --> 00:05:52.420
this one,

76
00:05:52.540 --> 00:05:58.030
I'm simply managing this as two separate colors, so that we could change them independently.

77
00:05:58.030 --> 00:06:03.870
This color is a color I'll refer to as a background color on the launch background here

78
00:06:03.910 --> 00:06:10.390
by removing this item up there and adding a new item with an opening and a closing tag like this and

79
00:06:10.520 --> 00:06:11.290
in between,

80
00:06:11.290 --> 00:06:17.290
add a color item which is self closing by adding a slash, a forward slash in front of the closing

81
00:06:17.530 --> 00:06:18.710
angled bracket

82
00:06:19.000 --> 00:06:27.310
and there you should add android:color and set it equal to @color/splash, like this.

83
00:06:27.340 --> 00:06:30.880
This should create a nice looking splash screen for Android.

84
00:06:30.880 --> 00:06:32.930
We also have all the icons setup,

85
00:06:32.980 --> 00:06:40.100
let's now test this on Android and for this, I'll launch the app on an emulator and there, we should see our

86
00:06:40.100 --> 00:06:40.870
splash screen

87
00:06:40.880 --> 00:06:45.440
and of course the icon and the app name we set up.

88
00:06:45.530 --> 00:06:50.810
Now here's the splash screen while the app is booting up and during development, this boot up process always

89
00:06:50.810 --> 00:06:56.630
takes a bit longer then once you build the app for production, so for your users that will be faster.

90
00:06:56.630 --> 00:06:59.100
Now let's close that app here

91
00:06:59.320 --> 00:07:02.230
and if you open up the app drawer, you now also should see your app

92
00:07:02.230 --> 00:07:07.740
icon here and great places as a title, so that's working as it should.

93
00:07:08.660 --> 00:07:09.200
That's great,

94
00:07:09.200 --> 00:07:14.950
let's now do the same for iOS. the icons have been added by the package,

95
00:07:14.950 --> 00:07:21.010
let's now add a splash screen, again through Xcode by opening up our project through the runner.xcworkspace

96
00:07:21.010 --> 00:07:30.400
file and there, go to the Assets.xcassets file here in that project folder view and you'll find the launch

97
00:07:30.700 --> 00:07:39.570
image entry there. Now simply drag the splash icon which you find attached in the iOS, in the splash iOS zip

98
00:07:39.570 --> 00:07:43.500
file into the three slots you see here,

99
00:07:43.500 --> 00:07:48.420
same icon in all three slots, you could provide three different icons with different sizes for different

100
00:07:48.510 --> 00:07:49.380
device sizes,

101
00:07:49.470 --> 00:07:51.420
you can manually shrink that if you want,

102
00:07:51.420 --> 00:07:57.480
I'll use the same icon and then go to launch screen storyboard here and this is the launch screen

103
00:07:57.480 --> 00:07:58.350
your app will have.

104
00:07:58.380 --> 00:08:03.120
Again if you want a smaller icon, you need to shrink the image assets you're using in here.

105
00:08:04.030 --> 00:08:07.660
Now in launch screen storyboard, you can also click on the white area here,

106
00:08:07.810 --> 00:08:13.390
so that view is selected here on the left and then go to the attribute inspector here on the right with

107
00:08:13.390 --> 00:08:17.230
this icon and you can now choose a background color

108
00:08:17.260 --> 00:08:24.920
and here I want to use 191919 to have the same color as I have as a background on the icon

109
00:08:25.010 --> 00:08:28.570
so that this is my iOS launch screen.

110
00:08:29.500 --> 00:08:33.450
Now let's run this and for that, I connected my real iPhone again.

111
00:08:33.450 --> 00:08:39.580
So let me press the play button and if this fails here, simply go back to your project and in the

112
00:08:39.580 --> 00:08:41.920
terminal here, run Flutter build

113
00:08:42.110 --> 00:08:48.450
iOS to build your iOS version. Once this process is finished,

114
00:08:48.450 --> 00:08:51.700
try running this again and this time it should succeed

115
00:08:51.780 --> 00:08:58.620
and now here's my icon coming up, the great places text is also there as you can see and now if I launch 

116
00:08:58.620 --> 00:09:00.980
the app, we also see our launch screen here.

117
00:09:01.110 --> 00:09:05.130
So this is now the app running on my iOS device with the configuration we set up.
