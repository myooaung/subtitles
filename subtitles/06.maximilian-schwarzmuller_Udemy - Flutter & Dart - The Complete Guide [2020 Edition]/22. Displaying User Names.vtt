WEBVTT
1
00:00:02.260 --> 00:00:03.770
Es ist also Benutzerzeit.

2
00:00:03.820 --> 00:00:10.780
Und dafür können wir in der Nachrichtenblase sicherstellen, dass wir neben der Ausgabe der Hauptnachricht alle den Benutzernamen des

3
00:00:10.840 --> 00:00:13.910
Benutzers ausgeben, der die Nachricht geschrieben hat.

4
00:00:15.300 --> 00:00:21.950
Dafür werde ich hier tatsächlich Text in eine Spalte einschließen, da ich jetzt einen Zahlentext darüber haben möchte.

5
00:00:22.500 --> 00:00:32.830
Fügen wir also diesen Text hinzu und dies sollte nun der Benutzername sein. Daher erwarte ich hier eine neue Eigenschaft, eine Zeichenfolge, die der

6
00:00:33.130 --> 00:00:36.810
Benutzername ist und die auch übergeben werden sollte.

7
00:00:36.820 --> 00:00:45.830
Cue die Nachrichtenblase als Argument, so dass dieser Benutzername hier ausgegeben werden sollte und wir hier auch einen Textstil festlegen

8
00:00:45.830 --> 00:00:56.140
können. Lassen Sie uns zunächst einfach die Schriftart so einstellen, dass sie hier auf die Schriftgewichtung wartet. Punkt fett, so sehr einfacher Stil,

9
00:00:56.140 --> 00:01:00.760
der den Benutzer anzeigen soll Name über dem Haupttext.

10
00:01:00.760 --> 00:01:05.500
Das Problem ist nun, dass wir diesen Benutzernamen derzeit nicht in Nachrichten erhalten.

11
00:01:05.500 --> 00:01:11.470
Hier leiten wir den Text weiter und prüfen, ob wir es sind oder nicht, aber wir leiten den Benutzernamen

12
00:01:11.470 --> 00:01:16.530
nicht weiter, da wir nicht den Benutzernamen des Benutzers haben, der eine Nachricht erstellt hat.

13
00:01:16.570 --> 00:01:22.600
Das einzige, was wir für eine bestimmte Nachricht auf Feuerbasis haben, ist das I. D. D. des Benutzers.

14
00:01:22.800 --> 00:01:27.540
Wir haben den Dummy I. D. D. und wir bekommen das echte Ich. D. D. jetzt eigentlich um keine probleme zu vermeiden.

15
00:01:27.540 --> 00:01:34.560
Löschen wir alle Dokumente mit diesem Dummy-Benutzer I. D. D. Löschen Sie diese drei Dokumente so

16
00:01:34.560 --> 00:01:39.250
schnell, dass sie nur Dokumente enthalten, die nur Nachrichten von echten Benutzern enthalten.

17
00:01:39.300 --> 00:01:41.460
Das ist also der zweite.

18
00:01:41.460 --> 00:01:45.230
Und hier ist noch der dritte.

19
00:01:45.360 --> 00:01:50.580
Wir müssen nur Benutzer I. D. D. hier nicht die Benutzernamen und natürlich möchte ich hier den echten Benutzernamen ausgeben

20
00:01:50.580 --> 00:01:51.740
und nicht das I. D ..

21
00:01:52.080 --> 00:01:57.120
Dies hier in der Chat-App zu haben, wäre wahrscheinlich nicht so nützlich.

22
00:01:57.140 --> 00:02:02.400
Jetzt können wir natürlich das I. verwenden. D. D. um den dazugehörigen Benutzernamen zu erhalten.

23
00:02:02.420 --> 00:02:06.320
Dies können wir sicherlich tun.

24
00:02:06.320 --> 00:02:16.450
Und dafür können wir den Benutzer I weiterleiten. D. D. hier zur Nachrichtenblase als zweites Argument und in der Nachrichtenblase wurde dieser

25
00:02:16.450 --> 00:02:21.310
Name in Benutzer I geändert. D. D. um klar zu machen, dass wir den Benutzernamen tatsächlich

26
00:02:21.310 --> 00:02:22.110
nicht richtig verstehen.

27
00:02:22.150 --> 00:02:27.770
Im Moment aber der Benutzer I. D. D. Jetzt haben wir also den Benutzer I. D. D. hier und in der Nachrichtenblase,

28
00:02:27.770 --> 00:02:31.890
die wir jetzt verwenden könnten, ist Benutzer I. D. D. um den tatsächlichen Benutzernamen abzurufen.

29
00:02:32.120 --> 00:02:38.960
Wir könnten sagen, dass wir diesen Text hier einschließen, wo wir den Benutzernamen mit einem

30
00:02:41.300 --> 00:02:49.010
Stream Builder ausgeben möchten, und dann die Benutzersammlung erreichen und nach dem Dokument mit dieser Idee suchen.

31
00:02:49.080 --> 00:02:54.780
Jetzt mache ich das, aber ich werde den Stream Builder hier tatsächlich durch den zukünftigen Builder ersetzen,

32
00:02:54.780 --> 00:02:59.630
da ich keinen laufenden Stream einrichten möchte, sondern nur diesen Benutzernamen einmal abrufen möchte.

33
00:02:59.700 --> 00:03:02.090
Es ist nicht erforderlich, einen Lebenshörer einzurichten.

34
00:03:02.100 --> 00:03:07.710
Es wird sich nicht ändern, da wir hier nicht einmal die Funktionalität haben, unseren Benutzernamen zu ändern.

35
00:03:07.710 --> 00:03:14.850
Die Zukunft hier ist, dass wir uns an den Fire Store wenden. Für Dad müssen Sie

36
00:03:14.860 --> 00:03:23.140
den Import zum Cloud Fire Store hinzufügen, damit wir die Fire Store-Punktinstanz erreichen und dann die Benutzersammlung für einen bestimmten

37
00:03:23.410 --> 00:03:26.490
Benutzer I erreichen. D ..

38
00:03:27.130 --> 00:03:33.850
In dieser Sammlung verwende ich jetzt Dokument, um auf ein bestimmtes Dokument zu zeigen, und ich möchte auf das Dokument zeigen,

39
00:03:33.850 --> 00:03:35.670
mit dem Sie bereit waren.

40
00:03:35.680 --> 00:03:41.360
Denken Sie daran, dass wir in Firebase eine Benutzersammlung haben und Dokumente, in denen diese

41
00:03:41.360 --> 00:03:48.970
Namen oder das I. D. D. in der Tat sind unsere Benutzer I. D. D. Wir können also nach

42
00:03:48.970 --> 00:03:55.750
einem solchen Dokument suchen, und ein Dokument für sich allein gibt uns noch keine Zukunft, aber wir können get on this

43
00:03:56.080 --> 00:04:03.500
anrufen und get wird einfach die Daten aus diesem Dokument abrufen und dies durch eine Zukunft tun, die wir jetzt haben Unser Builder, in

44
00:04:03.710 --> 00:04:08.470
dem wir unseren Daten-Snapshot hier haben, und dieser Snapshot enthält schließlich Daten über diesen Benutzer.

45
00:04:08.700 --> 00:04:12.060
Hier können wir natürlich den Snapshot-Verbindungsstatus überprüfen.

46
00:04:12.340 --> 00:04:14.530
Und wenn wir noch warten.

47
00:04:14.530 --> 00:04:21.010
Wenn also unser Verbindungsstatus wartet, könnten wir einen Dummy-Text zurückgeben, in dem wir sagen, dass wir so

48
00:04:21.010 --> 00:04:22.000
etwas laden.

49
00:04:22.270 --> 00:04:27.960
Und sobald wir die tatsächlichen Daten hier haben, geben wir Snapshot-Punktdaten aus.

50
00:04:28.270 --> 00:04:30.210
Und das gibt uns Zugang zu diesem Dokument.

51
00:04:30.280 --> 00:04:32.890
Und da ist das Feld für den Benutzernamen, das uns interessiert.

52
00:04:32.890 --> 00:04:34.970
Also Schnappschusspunktdaten.

53
00:04:35.140 --> 00:04:37.990
Und dann ist dies eine Karte, auf der wir auf diesen Benutzernamen zugreifen.

54
00:04:39.310 --> 00:04:43.300
Wenn wir dies tun und speichern, sehen wir hier tatsächlich den Benutzernamen.

55
00:04:43.300 --> 00:04:50.940
Stellen wir jetzt sicher, dass wir alle den Text lesen können, wenn er sich auf dem Axon-Farbhintergrund befindet. Für Dad setze

56
00:04:50.960 --> 00:05:01.340
ich die Farbe des Benutzernamens auf dieselbe Farbe, fragte einen Nachrichtentext wie diesen und jetzt ist er lesbar und jetzt vielleicht auch Damit eine Ausrichtung sichergestellt ist, dass

57
00:05:03.060 --> 00:05:10.170
sie nicht so zentriert ist, wie es derzeit scheint, können wir dies auf der Säule mit der Ausrichtung über

58
00:05:12.390 --> 00:05:17.580
die Querachse steuern. Die Ausrichtung sollte tatsächlich davon abhängen, ob sie von uns stammt

59
00:05:17.580 --> 00:05:20.850
oder nicht, wenn sie von uns stammt Recht.

60
00:05:20.880 --> 00:05:25.470
Also Ausrichtung und wenn es vom anderen Benutzer ist, sollte es auf der linken Seite sein.

61
00:05:25.500 --> 00:05:32.140
Beginnen Sie also mit der Ausrichtung. Hier auf der Querachsenausrichtung der Spalte können wir überprüfen, ob wir es sind. Wenn

62
00:05:32.140 --> 00:05:38.830
wir es sind, setze ich das Ende der Kreuz-X-Ausrichtung, um es nach rechts zu verschieben. Andernfalls beginnt die Kreuz-X-Ausrichtung, um

63
00:05:38.830 --> 00:05:42.250
sie nach links zu verschieben das speichern wir jetzt.

64
00:05:42.470 --> 00:05:43.740
Das sieht ziemlich gut aus.

65
00:05:43.910 --> 00:05:46.790
Jetzt sollte der Text auch nach rechts ausgerichtet sein.

66
00:05:46.880 --> 00:05:53.800
So können wir im Nachrichtentext Textausrichtung hinzufügen und auch prüfen, ob ich es bin und ob ich fertig bin.

67
00:05:53.800 --> 00:06:02.600
Schreiben Sie hier eine Zeile, um eine ansonsten zu beendende Zeile zu beenden, und jetzt sollte auch der Nachrichtentext selbst korrekt

68
00:06:02.600 --> 00:06:05.620
ausgerichtet sein, damit das gut ist.

69
00:06:05.620 --> 00:06:08.810
Jetzt sehen wir den Benutzernamen, lehnen ihn jedoch ab, was einen Fehler aufweist.

70
00:06:08.860 --> 00:06:13.370
Übrigens sehen Sie es links nicht, weil dies nicht mit unserem Entwicklungsserver verbunden ist.

71
00:06:13.380 --> 00:06:18.610
Hat dieser alte Schnappschuss der App, die hier noch läuft, aber Ansatz hat, hier einen Fehler.

72
00:06:18.880 --> 00:06:26.720
Und wissen Sie, welche Etage die Etage ist, auf der ich diesen Benutzernamen hier in der Nachrichtenblase abrufe? Ich rufe

73
00:06:26.720 --> 00:06:34.460
ihn mit meinem zukünftigen Builder ab, den ich hier hier hatte, und das bedeutet, dass für jede neue Nachrichtenblase

74
00:06:34.460 --> 00:06:39.860
das ist Beim Rendern greife ich nach Firebase und hole diese Daten.

75
00:06:39.860 --> 00:06:41.300
Das kann gut oder schlecht sein.

76
00:06:41.420 --> 00:06:45.100
Dies kann API ziemlich viel hämmern.

77
00:06:45.140 --> 00:06:50.090
Die gute Nachricht ist nun, dass dies keine Liste ist, sondern nur den Benutzernamen für die Nachrichten

78
00:06:50.090 --> 00:06:51.950
abrufen sollte, die tatsächlich gerendert werden.

79
00:06:51.950 --> 00:06:56.230
Außerdem wurden bei Bränden Daten lokal zwischengespeichert.

80
00:06:56.270 --> 00:07:00.290
Es wird hier also wahrscheinlich nicht eine Million Anfragen geben.

81
00:07:00.290 --> 00:07:04.730
Stattdessen wurden Cache-Daten angezeigt und nicht zu viele Anforderungen gesendet.

82
00:07:04.730 --> 00:07:07.520
Trotzdem möchten Sie das hier vielleicht nicht.

83
00:07:07.610 --> 00:07:15.080
Vielleicht möchten Sie nicht für jede gerenderte Nachrichtenblase eine neue Anfrage senden, daher könnten wir argumentieren,

84
00:07:15.080 --> 00:07:21.710
dass wir dies nicht hier abrufen möchten, sondern stattdessen, wenn wir eine Nachricht erstellen.

85
00:07:21.770 --> 00:07:27.920
Wenn wir hier eine neue Nachricht und ein neues Nachrichten-Widget erstellen, möchten wir den Benutzernamen neben

86
00:07:27.920 --> 00:07:33.240
dem Benutzer I speichern. D. D. Damit wir hier bereits den Benutzernamen haben und ihn nicht erneut abrufen müssen.

87
00:07:33.320 --> 00:07:39.230
Dies würde bedeuten, dass wir sie nur einmal abrufen müssen, wenn wir diese Nachricht senden, anstatt jedes Mal,

88
00:07:39.230 --> 00:07:45.140
wenn wir eine Nachricht rendern, und dann könnten wir sie sogar vereinfachen. Theoretisch könnten wir sie auch einmal

89
00:07:45.140 --> 00:07:51.320
abrufen, wenn unsere Anwendung gestartet und dann als gespeichert wird in einem App-weiten Zustand oder irgendwo anders, wo immer Sie

90
00:07:51.320 --> 00:07:51.760
wollen.

91
00:07:51.770 --> 00:07:57.410
Sie können dies also wirklich einiges optimieren, wenn Sie hier möchten.

92
00:07:57.420 --> 00:08:00.050
Ich werde es abrufen, wenn wir eine neue Nachricht erstellen.

93
00:08:00.170 --> 00:08:11.410
Dafür erhalten alle meine Benutzerdaten, indem sie auf eine Fire Store-Instanz warten und dann mit meinem Benutzer I auf die

94
00:08:11.470 --> 00:08:20.040
Benutzersammlung für das Dokument zugreifen. D. D. Hier, was ich von dem Benutzer bekomme, den ich

95
00:08:20.040 --> 00:08:24.890
abgerufen habe, und dann bekomme ich das gleiche, was ich hier in der Nachrichtenblase getan habe.

96
00:08:24.960 --> 00:08:31.250
Es ist die gleiche Zukunft, aber jetzt bekomme ich dieses Jahr für den Benutzer, der eine Nachricht sendet, und

97
00:08:31.250 --> 00:08:39.050
alle von mir aufgelösten Benutzerdaten, auf die ich warten werde. Ich kann diesen Benutzernamen erhalten, da dies das Benutzerdokument in der Sammlung des

98
00:08:39.080 --> 00:08:40.370
Benutzers ist .

99
00:08:40.430 --> 00:08:46.580
Und jetzt wird der Benutzername auch in jeder neuen Nachricht gespeichert, die wir im Fire Store speichern.

100
00:08:46.610 --> 00:08:53.570
Das heißt, wenn wir alle Nachrichten hier im Nachrichten-Widget mit dem Stream Builder abrufen, enthalten

101
00:08:53.570 --> 00:08:59.810
diese Nachrichten bereits die Benutzernamen, die abgerufen werden, da sie Teil der Nachrichten

102
00:08:59.810 --> 00:09:01.290
selbst sind.

103
00:09:01.310 --> 00:09:08.850
Das bedeutet, dass wir jetzt den Benutzernamen hier einfach an unsere Nachrichtenblase weiterleiten können, da wir hier ein solches

104
00:09:08.850 --> 00:09:11.780
Benutzernamenfeld hinzufügen, wenn wir eine Nachricht senden.

105
00:09:12.090 --> 00:09:20.430
Und deshalb ist in der Nachrichtenblase, die ich umbenennen kann, auch hier wieder der Benutzername und wir können davon ausgehen, dass

106
00:09:20.430 --> 00:09:23.010
dies bereits der endgültige Benutzername ist.

107
00:09:23.040 --> 00:09:29.490
Jetzt in der Nachrichtenblase können wir diesen zukünftigen Builder hier loswerden und all das

108
00:09:32.280 --> 00:09:34.350
loswerden. Stattdessen haben wir

109
00:09:39.780 --> 00:09:46.020
unseren Text hier einfach so und wir haben keinen Snapshot-Daten-Benutzernamen, aber wir verwenden

110
00:09:46.020 --> 00:09:50.570
die User-Name-Eigenschaft was wir jetzt in der Nachrichtenblase haben.

111
00:09:50.580 --> 00:09:55.590
Jetzt funktioniert dies natürlich nicht mit unseren vorhandenen Nachrichten, weshalb hier eine Fehlermeldung angezeigt wird,

112
00:09:55.590 --> 00:10:00.440
da alle vorhandenen Chat-Nachrichten nicht das Feld für den Benutzernamen enthalten, das alles ist.

113
00:10:00.450 --> 00:10:05.700
Löschen stellt keine Chat-Sammlung ein, damit sie neu erstellt wird.

114
00:10:05.940 --> 00:10:16.950
Lassen Sie uns die App jetzt neu starten und jetzt den Nachrichtentest senden und auch einen hier senden. Natürlich wird vom linken Gerät immer noch eine

115
00:10:16.950 --> 00:10:21.720
Fehlermeldung angezeigt, da hier eine alte Version der App ausgeführt wird.

116
00:10:21.720 --> 00:10:25.470
Das funktioniert also und hängt noch nicht mit dem Benutzernamen zusammen.

117
00:10:25.470 --> 00:10:27.260
Daher werde ich dies

118
00:10:34.440 --> 00:10:40.920
hier in der Chat-Sammlung für das Dokument, für das kein Benutzernamenfeld erforderlich ist, schnell manuell ausführen.

119
00:10:40.920 --> 00:10:48.870
Ich werde dieses Feld vorerst manuell hinzufügen, um diesen Fehler zu beheben, und dies auf Maximilian setzen, zum

120
00:10:49.830 --> 00:10:57.720
Beispiel die App neu laden. Sie werden sehen, dass dies jetzt korrekt funktioniert, damit es funktioniert.

121
00:10:57.720 --> 00:11:01.380
Wir werden bald auch eine neuere Version der App auf Android ausführen.

122
00:11:01.410 --> 00:11:06.780
Und damit sollten wir eine relativ effiziente Möglichkeit haben, den Benutzernamen zu speichern und abzurufen und

123
00:11:06.780 --> 00:11:07.830
den Benutzernamen anzuzeigen.

124
00:11:07.830 --> 00:11:12.330
Jetzt später zeigen wir auch ein Bild des Benutzers, aber im Moment ist dies gut genug.

125
00:11:12.330 --> 00:11:20.860
Dies ist in Ordnung, so dass wir mit all dem, was wir über die fertige Chat-Funktionalität haben, Nachrichten senden und

126
00:11:20.890 --> 00:11:22.620
Nachrichten empfangen können.

127
00:11:22.630 --> 00:11:25.880
Diese Liste wird aktualisiert, sobald eine neue Nachricht angezeigt wird.

128
00:11:25.900 --> 00:11:28.180
Wir haben unsere Authentifizierung eingerichtet.

129
00:11:28.300 --> 00:11:34.270
Ich würde sagen, es ist jetzt an der Zeit, mit dem Hochladen von Bildern mit dem Firebase-Cloud-Speicher fortzufahren.
