1
00:00:02,370 --> 00:00:05,770
Jetzt ist es Zeit, dies zu beenden, da wir die Funktion in Betrieb genommen haben.

2
00:00:05,770 --> 00:00:12,280
Stellen wir sicher, dass wir tatsächlich das Firebase-Administratorpaket verwenden, das wir in unserer Funktion zum Senden

3
00:00:12,340 --> 00:00:14,050
einer Push-Benachrichtigung verwenden können.

4
00:00:14,410 --> 00:00:21,820
Dazu müssen wir es zuerst importieren und im Chavez-Skript fügen wir eine Konstante hinzu, sodass eine Variable mit keinem

5
00:00:21,850 --> 00:00:24,310
Namen Ihrer Wahl geändert werden kann.

6
00:00:24,310 --> 00:00:34,160
Und dann müssen wir in diesem Fall Firebase-Administrator importieren, also wiederhole ich hier den Paketnamen, den Sie alle hier im

7
00:00:34,160 --> 00:00:37,280
Paket definiert haben, nicht Jason File.

8
00:00:37,280 --> 00:00:43,280
Dies ist am Ende ein Paket, das uns Administrationsrechte in unserer Funktion gibt, und wir

9
00:00:43,280 --> 00:00:47,960
benötigen diese, um eine Nachricht zu senden oder Push-Benachrichtigungen zu senden.

10
00:00:47,960 --> 00:00:51,350
Jetzt können Sie Push-Benachrichtigungen auf verschiedene Arten senden.

11
00:00:51,350 --> 00:01:00,040
Mithilfe des Firebase-Messaging-Objekts, mit dem wir Berechtigungen abgerufen und unsere Handler konfiguriert haben, können Sie einzelne

12
00:01:00,060 --> 00:01:05,550
Geräte zum Beispiel für Papa und Ihren Schmeichlercode auswählen.

13
00:01:05,700 --> 00:01:07,770
Sie können ein D-Geräte-Token

14
00:01:10,370 --> 00:01:12,230
mit get-Token erhalten.

15
00:01:12,230 --> 00:01:17,660
Dies ist ein Token, das Sie an einen Server senden müssten, um es in einer Datenbank zu speichern.

16
00:01:17,660 --> 00:01:19,740
Und jeder, der dieses Zeichen hat.

17
00:01:19,760 --> 00:01:25,660
Wenn dies in Ihrer Service-Site-Datenbank gespeichert ist, können Sie dieses Token verwenden, um eine Benachrichtigung an diese zu senden.

18
00:01:26,240 --> 00:01:34,220
Sie können also mithilfe dieser Gerätetoken Benachrichtigungen an bestimmte Geräte senden, um dieses Token abzurufen und damit Nachrichten an

19
00:01:34,220 --> 00:01:40,310
bestimmte Geräte zu senden. Dies kann beispielsweise hilfreich sein, wenn zwei Personen miteinander chatten,

20
00:01:40,310 --> 00:01:46,040
und Sie würden das Gerätetoken speichern Von jedem Teilnehmer in Ihrer Datenbank und

21
00:01:46,490 --> 00:01:53,450
wenn ein Teilnehmer a eine Nachricht an Teilnehmer B sendet, nehmen Sie den Token von Teilnehmer

22
00:01:53,480 --> 00:01:56,800
B und senden ihm eine Push-Benachrichtigung.

23
00:01:56,810 --> 00:02:03,660
Das ist also eine Option, aber Sie können hier auch etwas anderes mit dem Firebase-Paket tun, mit

24
00:02:03,660 --> 00:02:06,020
dem Firebase-basierten Messaging-Paket und Flattern.

25
00:02:06,020 --> 00:02:13,700
Sie können auch ein Thema abonnieren, und das Thema Schulden ist einfach eine Zeichenfolgenkennung und kann beliebig

26
00:02:13,700 --> 00:02:16,040
sein, z. B. Chat.

27
00:02:16,490 --> 00:02:18,370
Und das wird tun, was der Name andeutet.

28
00:02:18,380 --> 00:02:21,090
Dies wird ein solches Thema abonnieren.

29
00:02:21,140 --> 00:02:28,550
Und jetzt erreichen alle an ein solches Thema gesendeten Benachrichtigungen dieses Gerät, und Sie können Themen auch mit

30
00:02:28,550 --> 00:02:30,840
dem Firebase-Edmond-SDK als Ziel festlegen.

31
00:02:31,040 --> 00:02:36,420
Also werde ich dieses Thema hier zum Chat-Thema hier abonnieren.

32
00:02:36,440 --> 00:02:42,800
Und damit sollten wir alle Push-Benachrichtigungen erhalten, die auf diesem Gerät an dieses Thema gesendet werden.

33
00:02:42,800 --> 00:02:44,930
Zurück in unserem Index J ist also der Herbst.

34
00:02:44,930 --> 00:02:52,640
In dieser Cloud-Funktion möchten wir eine neue Benachrichtigung zu diesem Thema senden. Dazu rufen wir admin auf, das ist

35
00:02:52,760 --> 00:03:00,960
unser Admin- und SDK-Objekt, und dann deren Nachrichten, die Sie als Funktion ausführen, und dann lieber Sende, und Sie erhalten eine

36
00:03:01,350 --> 00:03:08,730
Sendung zum Thema Funktionieren Sie hier eine Methode zum Senden an ein Thema, die Sie verwenden können.

37
00:03:08,730 --> 00:03:16,060
Und dies tut genau das, was der Name impliziert, dass eine Nachricht an ein bestimmtes Thema gesendet wird. Geben Sie hier also

38
00:03:16,090 --> 00:03:20,470
zuerst Ihre Themen-ID ein, die natürlich dieselbe sein sollte wie in der Flatter-App.

39
00:03:20,470 --> 00:03:25,510
Also hier wird Chat verwendet und dann ist das zweite Argument Ihre Nutzlast.

40
00:03:25,510 --> 00:03:31,600
Grundsätzlich sollten die Daten, die Sie senden möchten, ein Javascript-Objekt sein, das Sie mit solchen geschweiften Klammern

41
00:03:31,600 --> 00:03:37,450
erstellen. Dort können Sie auswählen, ob es sich um eine Datennachricht oder eine Benachrichtigung handelt.

42
00:03:37,450 --> 00:03:40,670
Jetzt habe ich bereits erwähnt, dass die Benachrichtigung das ist, was wir hier wollen.

43
00:03:40,690 --> 00:03:47,260
Also wähle ich Benachrichtigung und das selbst verwendet das Objekt als Wert, sodass Sie eine Benachrichtigung und dann einen Doppelpunkt

44
00:03:47,260 --> 00:03:50,680
haben und dann den Wert für diese Benachrichtigung zuweisen.

45
00:03:50,680 --> 00:03:59,230
Das Objekt, das diese Benachrichtigung beschreibt, und dort können wir einen Titel hinzufügen, und ich möchte den Namen

46
00:03:59,290 --> 00:04:06,870
des Benutzers, der die Nachricht sendet, als Titel verwenden, damit ich auf Snapshot-Daten zugreifen kann.

47
00:04:07,540 --> 00:04:15,000
Und dann haben wir in unserem Protokoll gesehen, dass ich auf die Benutzernamenfelder zugreifen kann, um diesen Benutzernamen zu erhalten, damit

48
00:04:15,000 --> 00:04:23,370
ich hier als meinen Titel auf den Benutzernamen zugreifen kann und wir auch einen Text einrichten können, der die Hauptnachricht ist und Dies sollte

49
00:04:23,370 --> 00:04:26,370
die Nachricht sein, die dem Benutzer gesendet wird.

50
00:04:26,370 --> 00:04:33,500
Also hier werde ich den Text verwenden, also hier ist es jetzt Snapshot-Datentext, also sollte dies

51
00:04:36,160 --> 00:04:37,880
meine Benachrichtigung sein.

52
00:04:37,960 --> 00:04:44,080
Es gibt noch mehr, die Sie einstellen können, und Sie können wie immer die offiziellen Dokumente lesen, um alles darüber

53
00:04:44,080 --> 00:04:44,870
zu erfahren.

54
00:04:44,920 --> 00:04:52,420
Ich werde einfach die Klickaktion hier einstellen und dies auf diesen Brief und die Benachrichtigungssache setzen, die wir

55
00:04:52,420 --> 00:04:54,230
auch früher einrichten mussten.

56
00:04:54,250 --> 00:05:02,850
Also diese Flatterbenachrichtigung klickt hier auf eine Kennung als Zeichenfolge, damit eine Nachricht gesendet wird.

57
00:05:02,920 --> 00:05:09,430
Und dies gibt ein Versprechen zurück und das macht diesen gesamten Prozess zum idealen Rückgabewert unserer Funktion.

58
00:05:09,460 --> 00:05:15,460
Dadurch wird sichergestellt, dass die Funktion so lange ausgeführt wird, bis für diese Meldung eine

59
00:05:15,460 --> 00:05:17,110
Benachrichtigung geplant wurde.

60
00:05:17,110 --> 00:05:24,910
Wenn wir jetzt Sicherheitsvorkehrungen treffen, können wir unsere Firebase-Funktion mit Firebase Deploy erneut bereitstellen und die laufende Flatter-App beenden und

61
00:05:24,910 --> 00:05:30,850
diese Flatter-App neu starten, nachdem wir sichergestellt haben, dass wir das Chat-Thema abonnieren, um

62
00:05:30,850 --> 00:05:38,650
zu sehen, wo das alles funktioniert So wie es für Dad sein sollte, starte ich die App nicht nur hier

63
00:05:38,650 --> 00:05:44,950
auf Android, sondern stoppe sie auch wieder und wähle jetzt wieder mein echtes iPhone-Gerät aus.

64
00:05:44,950 --> 00:05:50,980
Damit sie alle die neueste Version auf diesem Gerät ausführen und dort auch die App starten können.

65
00:05:51,120 --> 00:05:52,710
Und hier läuft die App.

66
00:05:52,710 --> 00:05:58,550
Ich werde bereits gefragt, ob ich Push-Benachrichtigungen zulassen möchte, damit ich dies in diesem Jahr bestätigen kann. Hier

67
00:05:59,780 --> 00:06:02,090
ist also die App, die läuft.

68
00:06:02,800 --> 00:06:08,970
Und jetzt, da beide Apps aktiv sind, überprüfen wir Webber, ob alles für sie funktioniert.

69
00:06:08,980 --> 00:06:14,020
Ich werde die Android-App in den Hintergrund stellen und die Nachricht

70
00:06:17,730 --> 00:06:25,790
von meinem IOW-Gerät senden und prüfen, ob dies eine Push-Benachrichtigung unter Android auslöst. Dies geschieht nicht in der

71
00:06:25,790 --> 00:06:28,380
Firebase-Cloud-Funktionskonsole. Wir sehen hier, warum.

72
00:06:28,670 --> 00:06:30,610
Weil die People Firebase App nicht existiert.

73
00:06:30,610 --> 00:06:34,900
Stellen Sie sicher, dass Sie die Initialisierungs-App aufrufen, bevor Sie die Firebase-Dienste verwenden.

74
00:06:35,390 --> 00:06:42,140
Kleiner Fehler von meiner Seite hier im Index J. S. Bevor wir das Admin-SDK verwenden, sollten wir

75
00:06:42,170 --> 00:06:43,880
die Initialisierungs-App einfach so aufrufen.

76
00:06:43,880 --> 00:06:46,520
Das ist eine winzige zusätzliche Linie, die einen großen Unterschied macht.

77
00:06:46,520 --> 00:06:50,940
Sie sollten es hinzufügen und danach einfach erneut mit Firebase bereitstellen.

78
00:06:50,960 --> 00:06:56,420
Jetzt müssen Sie Ihre Flatter-Apps nicht mehr neu erstellen. Dies hat nichts damit zu tun.

79
00:06:56,450 --> 00:07:02,660
Sie müssen nur diese Zeile zur Cloud-Funktion hinzufügen und erneut bereitstellen. Sobald der Bereitstellungsprozess abgeschlossen ist, testen

80
00:07:02,690 --> 00:07:06,340
wir dies erneut, damit die Funktion erneut bereitgestellt wird.

81
00:07:06,340 --> 00:07:09,750
Wenn ich also wieder hier bin, versuchen wir es

82
00:07:12,650 --> 00:07:16,080
mit einem anderen Test und senden ihn. Jetzt sieht

83
00:07:19,920 --> 00:07:21,840
es viel besser aus.

84
00:07:21,840 --> 00:07:28,030
Hier siehst du Maximilian und testest das nie, wenn ich darauf klicke, werde ich natürlich zum Chat mit ihnen gebracht.

85
00:07:28,050 --> 00:07:29,020
Das ist großartig.

86
00:07:29,040 --> 00:07:37,010
Versuchen wir jetzt die andere Richtung, in die ich hier auf dem iPhone zu einer Nummern-App

87
00:07:37,460 --> 00:07:46,110
wechsle, damit die Haupt-App wieder im Hintergrund ausgeführt wird. Jetzt sende ich hier die Benachrichtigung oder Nachricht von

88
00:07:46,350 --> 00:07:49,770
Android und lass uns sehen, ob

89
00:07:53,140 --> 00:07:57,520
wir Diese Nachricht wird hier auf dem iPhone angezeigt.

90
00:07:57,530 --> 00:07:58,550
Hier ist es.

91
00:07:58,550 --> 00:08:01,220
Hier sehen wir also den Absender und die Nachricht.

92
00:08:03,430 --> 00:08:08,480
Und natürlich wird hier auch die App wieder geöffnet, wenn ich dies erweitere und darauf tippe.

93
00:08:08,500 --> 00:08:15,700
Dies funktioniert sowohl auf dem ISIS, wie Sie sehen können, als auch auf der Funktionsweise von Push-Benachrichtigungen durch Data

94
00:08:15,700 --> 00:08:22,420
und wie Sie sie sowohl manuell über die Cloud-Messaging-Konsole hier im Web als auch programmgesteuert über serverseitigen

95
00:08:22,720 --> 00:08:24,310
Code auslösen können.

96
00:08:24,490 --> 00:08:30,310
Zum Beispiel hier mit dem Firebase-Cloud-Funktionscode und besonders wenn Sie alle anderen Firebase-Dienste

97
00:08:30,310 --> 00:08:37,120
verwenden, sehen Sie, dass sie sich gut ineinander integrieren lassen, dass sie sehr einfach zu verbinden sind

98
00:08:37,120 --> 00:08:43,480
und dass Sie mit wenig Aufwand erstaunliche Apps erstellen können Aufwand und nicht so viel Code.
