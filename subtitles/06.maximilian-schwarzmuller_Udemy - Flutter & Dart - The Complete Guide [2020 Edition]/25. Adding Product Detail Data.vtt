WEBVTT
1
00:00:02.240 --> 00:00:07.640
Our application is taking shape and we're heavily using the provider package and the provider pattern,

2
00:00:07.730 --> 00:00:14.690
which is normal in bigger or anything but very trivial applications because managing our state like

3
00:00:14.690 --> 00:00:19.490
this is so much easier and more convenient than doing it in the main.dart file and passing data around

4
00:00:19.490 --> 00:00:23.480
manually which is very error prone and cumbersome.

5
00:00:23.480 --> 00:00:25.820
Now in this app, there are a couple of missing pieces,

6
00:00:25.910 --> 00:00:28.280
order now doesn't do anything,

7
00:00:28.280 --> 00:00:31.040
if we go to a detail page, we also only see the title,

8
00:00:31.040 --> 00:00:33.270
we see no content here.

9
00:00:33.560 --> 00:00:35.260
So these are the things I want to work on,

10
00:00:35.270 --> 00:00:39.530
I want to make sure that when we go to the detail page, we see some details about this element

11
00:00:39.530 --> 00:00:45.110
we selected and on the cart page if I click order now, I actually want to place this order and store

12
00:00:45.110 --> 00:00:47.660
it as an order somewhere.

13
00:00:47.680 --> 00:00:52.450
Now let's start with the detail page, which is pretty boring compared to what we did before because now

14
00:00:52.450 --> 00:00:55.140
we'll not really work with provider,

15
00:00:55.180 --> 00:01:01.150
we already are fetching our product here by its ID and there is little else I need to do

16
00:01:01.150 --> 00:01:07.150
but of course, we'll have to add a couple of widgets here to output more information about our selected

17
00:01:07.150 --> 00:01:07.810
product.

18
00:01:08.140 --> 00:01:12.390
So let's add a body to the scaffold here in the product detail screen and in there

19
00:01:12.390 --> 00:01:16.080
as always, it's up to you how you want to style this and what you want to show,

20
00:01:16.150 --> 00:01:21.850
I'll add a container here with a height of 300 in which I want to output the image of that

21
00:01:21.850 --> 00:01:28.540
product we selected. So the child of that container is simply a network image with image.network

22
00:01:29.230 --> 00:01:34.930
and the information, we get that from the loaded product, that's where we get our URL from,

23
00:01:34.960 --> 00:01:42.380
so LoadedProduct.imageUrl is what I use here and on that network image, I also set the fit

24
00:01:42.620 --> 00:01:50.200
to BoxFit.cover to fit that image nicely into the container. With that if we save this and we go

25
00:01:50.200 --> 00:01:52.020
to the detail page,

26
00:01:52.030 --> 00:01:53.470
here's our image.

27
00:01:53.770 --> 00:02:00.190
Now the container should also take the full width, so I'll set the width to double infinity and now that

28
00:02:00.200 --> 00:02:02.030
is what I get.

29
00:02:02.060 --> 00:02:10.700
Now below that container here, I also want to output the description, so the details about this product and

30
00:02:10.700 --> 00:02:12.060
the price.

31
00:02:12.220 --> 00:02:20.510
So therefore this container should actually go into a column and actually that column should go into

32
00:02:20.510 --> 00:02:27.000
a SingleChildScrollView, so that it is scrollable in case the space does not suffice

33
00:02:27.020 --> 00:02:34.800
on our page and now below the container, in that list of widgets we pass to column, I'll have a

34
00:02:34.800 --> 00:02:44.190
SizedBox with a height of 10 to add some spacing here and then I want to have a text which holds the price

35
00:02:44.220 --> 00:02:45.900
of that element.

36
00:02:45.900 --> 00:02:52.280
So here, I want to have my loaded or actually with a dollar sign in front of it

37
00:02:55.420 --> 00:03:04.300
and then some string interpolation, my loaded product.price like this and give this a little bit of styling

38
00:03:04.780 --> 00:03:11.360
by creating a text style here on-the-fly and of course, you could set up a general title theme for that

39
00:03:11.360 --> 00:03:20.720
if you wanted to. I'll just give this a color of Colors.grey and a font size of 20 let's say

40
00:03:23.720 --> 00:03:31.620
and below that text here, I want to have my description. So I'll add a SizedBox here as well with a height

41
00:03:31.680 --> 00:03:35.850
of 10 and below that SizedBox,

42
00:03:38.810 --> 00:03:48.650
I'll add a text widget which outputs my loaded product.description and where I set text align to

43
00:03:48.650 --> 00:03:57.720
TextAlign.center. I also want to make sure that soft wrap is set to true, so that this wraps into new

44
00:03:57.720 --> 00:04:06.750
lines if there is no more space and I'll wrap it into a container which has a width of double infinity

45
00:04:06.750 --> 00:04:14.370
to take as much space as we have on the screen but with some extra padding where I have 

46
00:04:15.640 --> 00:04:22.340
EdgeInsets.symmetric and only assign horizontal padding of let's say 10. And with all of that, this is what I

47
00:04:22.340 --> 00:04:30.570
have here, obviously not too fancy, you can obviously change this, fine tune this, add different colors,

48
00:04:30.570 --> 00:04:35.970
whatever you need, it's not really the focus of this module obviously since we focus on state management

49
00:04:35.970 --> 00:04:42.680
here but nonetheless, a nice detail page here where we can view more information about the product before

50
00:04:42.680 --> 00:04:46.500
we then favorite it or put it into our cart here, like this.
