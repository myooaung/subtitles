WEBVTT
1
00:00:02.270 --> 00:00:06.620
Stellen wir sicher, dass wir Push-Benachrichtigungen an eine Android-Anwendung senden können.

2
00:00:06.790 --> 00:00:12.050
Und für Dad haben wir alle Schritte, die hier in dieser offiziellen Dokumentation dieses Pakets

3
00:00:12.050 --> 00:00:18.500
erforderlich sind, und es lohnt sich, diese Dokumentation zu befolgen, falls sich ein kleiner Schritt geändert hat, seit ich dieses

4
00:00:18.500 --> 00:00:19.650
Video aufgenommen habe.

5
00:00:19.700 --> 00:00:26.240
Das erste Ziel ist es also, ein Android-Projekt in der Firebase-Konsole zu erstellen und dieses Projekt im Wesentlichen mit

6
00:00:26.240 --> 00:00:28.340
Ihrer flacheren App zu verknüpfen.

7
00:00:28.340 --> 00:00:31.500
Das haben wir jetzt schon ganz am Anfang dieses Moduls gemacht.

8
00:00:31.610 --> 00:00:37.310
Wenn Sie also gerade wegen der Push-Benachrichtigungen hierher gekommen sind, gehen Sie zumindest zum Anfang des Moduls

9
00:00:37.610 --> 00:00:44.540
zurück und lesen Sie die Schritte zum Einrichten des Firebase-SDK, um zu sehen, wie Sie Firebase mit einem flacheren Projekt verknüpfen.

10
00:00:44.540 --> 00:00:46.760
Wir sind also schon mit Schritt eines Tages fertig.

11
00:00:47.150 --> 00:00:49.910
Wir haben auch Teile der nächsten Schritte abgeschlossen.

12
00:00:49.940 --> 00:00:53.210
Aber lassen Sie uns überprüfen, ob dort alles richtig eingerichtet ist.

13
00:00:53.210 --> 00:00:58.670
Zum Beispiel sollten wir in unserer Android-Build-Real-Datei diese beiden Abhängigkeiten haben.

14
00:00:58.670 --> 00:00:59.420
Also lass uns dorthin gehen.

15
00:00:59.450 --> 00:01:05.560
Gehen wir zum Android-Ordner und dann zur Build-Great-Datei. Stellen Sie dort sicher, dass Sie

16
00:01:05.570 --> 00:01:13.940
die Abhängigkeit von Google-Diensten haben, die wir haben, und stellen Sie sicher, dass auch die Tools dort eine größere Abhängigkeit

17
00:01:13.940 --> 00:01:14.630
aufbauen.

18
00:01:14.630 --> 00:01:17.230
Und das habe ich auch dort und du solltest beides haben.

19
00:01:17.240 --> 00:01:20.610
Aber als nächstes nochmal überprüft.

20
00:01:20.690 --> 00:01:26.120
Stellen Sie sicher, dass Sie dieses Plug-In hier in Ihrer Android-App-Build-Graded-Datei anwenden.

21
00:01:26.150 --> 00:01:32.090
Im App-Ordner befindet sich also eine weitere abgestufte abgestufte Datei. Stellen Sie dort

22
00:01:32.090 --> 00:01:37.130
sicher, dass Sie am Ende der Datei diese Zeile haben.

23
00:01:37.180 --> 00:01:40.000
Jetzt habe ich es nicht unten, sondern hier oben.

24
00:01:40.000 --> 00:01:44.280
Um Probleme zu vermeiden, möchte ich das einfach an den unteren Rand dieser Datei verschieben.

25
00:01:44.320 --> 00:01:46.720
Aber damit sollten wir auch hier in Ordnung sein.

26
00:01:48.040 --> 00:01:56.260
Damit sind wir mit der Grundeinstellung fertig und falls Sie sich fragen, wann dieser ID-Schritt zwischen unserer

27
00:01:56.260 --> 00:01:59.420
App und dem Push-Benachrichtigungsserver stattfinden wird.

28
00:01:59.440 --> 00:02:05.710
Nun, das ist mit diesen Schritten passiert, mit denen wir unser Firebase-Projekt mit unserem Android-Flatterprojekt

29
00:02:05.710 --> 00:02:12.700
verknüpft haben. Diese Identifikation stellt sicher, dass nur Entwickler außerhalb der App, die Zugriff auf die

30
00:02:12.700 --> 00:02:17.520
App und Ihr Firebase-Projekt haben, berechtigt sind, Push-Benachrichtigungen zu senden.

31
00:02:17.530 --> 00:02:20.860
Das ist also dieser ID-Schritt für Android.

32
00:02:21.070 --> 00:02:24.850
Jetzt auch ein wichtiger Hinweis zum Testen von Push-Benachrichtigungen.

33
00:02:24.850 --> 00:02:28.690
Sie benötigen ein Gerät, auf dem Google Play Services installiert ist.

34
00:02:28.690 --> 00:02:36.940
Sie sollten also sicherstellen, dass dies auf Ihrem realen Gerät, aber auch auf Ihrem Emulator der Fall ist, und um

35
00:02:36.950 --> 00:02:43.740
zu überprüfen, ob Sie auf Ihrem Emulator Android Studio aufrufen können, und sie öffnen einfach, dass ein

36
00:02:46.750 --> 00:02:56.000
BD-Manager und hier sicherstellen, dass der Emulator Sie ' Das Laufen hat diesen Ort oder dieses Symbol, mit dem es dir gut gehen

37
00:02:57.180 --> 00:03:00.850
sollte. Damit sind wir mit all dem fertig.

38
00:03:00.860 --> 00:03:06.770
Es gibt jedoch einen optionalen, aber empfohlenen Schritt, den wir alle hier ausführen werden. Dieser Schritt stellt

39
00:03:06.770 --> 00:03:13.700
sicher, dass die App geöffnet wird und wir darauf zugreifen können, wenn wir später eine Push-Benachrichtigung erhalten und darauf tippen,

40
00:03:13.700 --> 00:03:18.710
wenn unsere App nicht geöffnet ist Behandeln Sie diese Benachrichtigung innerhalb der App.

41
00:03:18.710 --> 00:03:24.740
Wenn Sie Schritt 4 überspringen, können Sie Benachrichtigungen erhalten, aber Sie können nicht darauf tippen und

42
00:03:24.740 --> 00:03:28.640
dann basierend auf der Benachrichtigung etwas in Ihrer App tun.

43
00:03:28.670 --> 00:03:36.410
Um dies zu tun, stellen Sie sicher, dass Sie diesen Absichtsfilter in das

44
00:03:36.530 --> 00:03:46.250
Aktivitäts-Tag Ihrer Android-App-Stores einfügen und eine Excel-Datei für das Android-Manifest erstellen. Gehen wir also zum Haupt-Android-Manifest

45
00:03:46.670 --> 00:03:48.070
der Android-App-Quelle.

46
00:03:48.320 --> 00:03:53.320
Und da ist dieser Aktivitätsknoten und wir haben hier bereits einen von 10 Filtern.

47
00:03:53.360 --> 00:04:00.500
Stellen Sie sicher, dass Sie auch diesen anderen Absichtsfilter hinzufügen, den Sie gerade aus dem Artikel kopiert haben, in dem ich gerade war.

48
00:04:00.560 --> 00:04:05.380
Dadurch wird sichergestellt, dass eingehende Nachrichten durch Tippen auf sie verarbeitet werden können.

49
00:04:05.480 --> 00:04:12.920
Und bis dahin tun Sie etwas in Ihrer App, sodass dies hier hinzugefügt werden sollte.

50
00:04:13.050 --> 00:04:15.280
Und damit bist du fertig.

51
00:04:15.300 --> 00:04:18.540
Jetzt ist dieser Teil der Back-Round-Nachrichten etwas anderes.

52
00:04:18.540 --> 00:04:24.360
Nicht im Zusammenhang mit den Push-Benachrichtigungen, die wir verarbeiten werden, und daher können wir alle Schritte

53
00:04:24.480 --> 00:04:25.910
dieser Hintergrundnachrichten überspringen.

54
00:04:25.950 --> 00:04:29.220
Wenn Sie dies in Ihrer App benötigen, können Sie dies natürlich tun.

55
00:04:29.250 --> 00:04:31.580
Aber auch hier brauchen wir das nicht.

56
00:04:31.680 --> 00:04:34.820
Wir sind also mit dem Android-Setup fertig.

57
00:04:34.920 --> 00:04:41.370
Bevor wir uns nun mit dem ISIS-Setup befassen, prüfen wir, ob es tatsächlich funktioniert, und können daher zum Senden

58
00:04:41.370 --> 00:04:43.200
von Nachrichten nach unten scrollen.

59
00:04:43.200 --> 00:04:48.390
Wir werden später daran arbeiten, Nachrichten zu empfangen und zu bearbeiten. Lassen Sie uns jetzt zum Senden

60
00:04:48.390 --> 00:04:51.110
von Nachrichten scrollen und die dortigen Schritte ausführen.

61
00:04:51.210 --> 00:04:55.920
Und zum Glück können wir eine Dummy-Nachricht aus der Firebase-Konsole senden.

62
00:04:55.980 --> 00:05:00.630
Hier in Ihrem Firebase-Projekt, das Sie zu Beginn des Moduls erstellt haben und in

63
00:05:00.630 --> 00:05:07.200
dem wir die Datenbank und alles haben, was wir zum Cloud-Messaging nach unten scrollen können. Wenn Sie auf Cloud-Messaging klicken,

64
00:05:09.570 --> 00:05:12.700
können Sie auf Ihre erste Nachricht senden klicken.

65
00:05:12.730 --> 00:05:18.460
Jetzt können Sie hier einen Titel wie test eingeben und ein Teil des Textes funktioniert.

66
00:05:18.490 --> 00:05:23.680
Sie können ein Bild einfügen, aber wir werden dies hier nicht tun und einen Namen, den

67
00:05:23.680 --> 00:05:28.080
wir auch hier nicht tun werden, und stattdessen können wir nächstes Jahr auswählen.

68
00:05:28.100 --> 00:05:36.960
Jetzt müssen wir ein Ziel angeben und hier werden wir einen Benutzer als App ansprechen und dann

69
00:05:36.960 --> 00:05:41.160
unsere Android-App hier auswählen und auf Weiter klicken.

70
00:05:41.330 --> 00:05:43.150
Stellen Sie sicher, dass Sie es jetzt senden.

71
00:05:43.160 --> 00:05:44.320
Sie können es auch planen.

72
00:05:44.350 --> 00:05:45.770
Aber ich möchte es jetzt

73
00:05:48.660 --> 00:05:55.650
senden, wir können diesen Schritt hier überspringen und jetzt im letzten Schritt gibt es eine Sache, die wir einstellen können, die wir hier auch in

74
00:05:55.650 --> 00:05:57.060
der offiziellen Box sehen.

75
00:05:57.230 --> 00:06:03.640
Wir möchten ein Klick-Aktionsfeld unter benutzerdefinierten Daten festlegen, die in diesem Jahr festgelegt werden sollen.

76
00:06:03.650 --> 00:06:06.040
Diese Kennung dient zum Klicken auf Aktion.

77
00:06:06.080 --> 00:06:13.430
Das ist es, was später mit diesem Absichtsfilter verbunden wird, damit Android im Grunde genommen die Verbindung zwischen nur

78
00:06:13.430 --> 00:06:19.920
Benachrichtigung und unserer App herstellen und dies für den Moment innerhalb der App erledigen kann.

79
00:06:19.930 --> 00:06:22.700
Ich werde aber eine Nachricht ohne das senden.

80
00:06:22.960 --> 00:06:33.010
Klicken Sie hier auf "Überprüfen" und veröffentlichen Sie dann nur einen zusätzlichen Hinweis zur Cloud-Messaging-Konsole, die wir

81
00:06:33.010 --> 00:06:34.810
hier sehen.

82
00:06:34.810 --> 00:06:37.090
Dies dient nicht nur zum Testen.

83
00:06:37.090 --> 00:06:44.290
Dies ist tatsächlich ein Tool, das Sie verwenden können, wenn Sie Push-Benachrichtigungen an die Benutzer Ihrer Anwendung

84
00:06:44.290 --> 00:06:45.520
senden möchten.

85
00:06:45.760 --> 00:06:50.880
Zum Beispiel für das Marketing oder um wichtige Informationen mit ihnen zu teilen.

86
00:06:50.890 --> 00:06:57.770
Dies ist also Ihr Kanal für Ihre Benutzer, um Push-Benachrichtigungen an sie zu senden.

87
00:06:57.790 --> 00:07:04.000
Jetzt können Sie dies natürlich auch automatisieren, um beispielsweise eine Push-Benachrichtigung zu senden, wenn

88
00:07:04.000 --> 00:07:11.060
ein Benutzer eine neue Chat-Nachricht sendet. Dies tun wir jedoch später im Kurs, wenn Sie einen

89
00:07:11.060 --> 00:07:18.070
Test wünschen oder ein Szenario erstellen möchten, in dem Sie als App arbeiten Eigentümer und

90
00:07:18.400 --> 00:07:26.170
Entwickler möchten Push-Benachrichtigungen an Ihre Benutzer senden. Dieses Cloud-Messaging-Tool hier. Diese Cloud-Messaging-Konsole hier in diesem Fire-Projekt ist das

91
00:07:26.170 --> 00:07:30.310
Tool, mit dem Sie diese Nachrichten senden können.

92
00:07:30.320 --> 00:07:37.100
Jetzt wird hier auf Ihrem Emulator möglicherweise keine Benachrichtigung angezeigt, aber hier sollte ein Fehler

93
00:07:37.490 --> 00:07:41.380
angezeigt werden, während die Nachrichtendienstabsicht nicht gefunden wird.

94
00:07:41.420 --> 00:07:46.970
Lassen Sie uns also in diesem Jahr jeden laufenden Prozess beenden und Ihre App neu starten, da wir ein neues

95
00:07:47.030 --> 00:07:51.430
Paket hinzugefügt und sogar etwas in der Android-Konfiguration geändert haben und Sie Ihre App dort unbedingt

96
00:07:51.440 --> 00:07:52.450
neu starten sollten.

97
00:07:52.580 --> 00:07:58.460
Stellen Sie also sicher, dass Sie Ihre Anwendung neu starten, die Sie neu erstellen und neu starten. Ich sollte

98
00:07:58.460 --> 00:08:04.790
sagen, und wenn dies abgeschlossen ist, gehen wir zurück und hier in Ihrer vorherigen Nachricht können Sie auf diese freien

99
00:08:04.790 --> 00:08:11.270
Punkte klicken. Klicken Sie auf doppelte Benachrichtigung, um sie einfach erneut zu senden. Klicken Sie auf Überprüfen und veröffentlichen Sie, und

100
00:08:14.460 --> 00:08:16.810
jetzt sehen Sie hier eine andere Nachricht.

101
00:08:16.980 --> 00:08:19.830
Fatal konnte keinen Rückruf finden.

102
00:08:20.130 --> 00:08:21.630
Das ist also keine andere Botschaft.

103
00:08:21.630 --> 00:08:29.270
Und dies beweist am Ende, dass auf unserem Gerät etwas passiert zu sein scheint. Bitte beachten Sie, dass dies der Fall

104
00:08:29.270 --> 00:08:32.440
ist, wenn die App im Vordergrund geöffnet ist.

105
00:08:32.480 --> 00:08:38.630
Nun wollen wir sehen, was passiert, wenn wir diese Anwendung mit

106
00:08:38.630 --> 00:08:47.270
dem Task-Manager beenden und daher natürlich auch dieser laufende Prozess hier abgeschlossen wird. Wir duplizieren diese

107
00:08:47.270 --> 00:08:56.000
erneute doppelte Überprüfung und veröffentlichen sie. Jetzt sehen Sie, dass hier Ihre Push-Benachrichtigung auf diesem Gerät eintrifft.

108
00:08:56.170 --> 00:08:59.250
Sie haben es jetzt hier mit Ihrem App-Symbol hier.

109
00:08:59.260 --> 00:09:03.110
Und das ist nur das Flattern, das ich kann, weil es das Standard-App-Symbol ist.

110
00:09:03.130 --> 00:09:07.690
Wenn wir jetzt darauf tippen, werden wir zu unserer Anwendung weitergeleitet, damit dies funktioniert.

111
00:09:07.750 --> 00:09:12.640
Aber im Moment wird es nicht möglich sein, die Benachrichtigung zu bearbeiten, da es hier nicht möglich ist,

112
00:09:12.790 --> 00:09:13.900
etwas damit zu tun.

113
00:09:13.900 --> 00:09:15.180
Das ist also der fehlende Teil.

114
00:09:15.190 --> 00:09:16.990
Darum kümmern wir uns als nächstes.

115
00:09:16.990 --> 00:09:22.780
Und natürlich stellen wir dann auch sicher, dass wir Benachrichtigungen verarbeiten, wenn wir sie erhalten,

116
00:09:22.780 --> 00:09:29.170
während die App ausgeführt wird, da wir dort zuvor diesen schwerwiegenden Rückruffehler nicht gefunden haben, aber das

117
00:09:29.290 --> 00:09:33.010
Senden von Nachrichten an Android funktioniert jetzt im Allgemeinen.

118
00:09:33.010 --> 00:09:39.010
Bevor wir nun alle verbleibenden Schritte integrieren und Code für die Verarbeitung von Nachrichten einrichten, stellen wir

119
00:09:39.010 --> 00:09:42.010
sicher, dass wir auch alles für Iowa einrichten.
