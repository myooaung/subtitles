WEBVTT
1
00:00:02.190 --> 00:00:07.430
So let's work on the cart screen now to which you can navigate. For this, in the screens folder,

2
00:00:07.440 --> 00:00:12.680
let's add a new cart_screen.dart file or whatever you want to name it

3
00:00:12.680 --> 00:00:20.440
and in there, I'll add a stateless widget, cart screen and simply import, as always, material.dart

4
00:00:20.450 --> 00:00:24.610
from the Flutter package. Now as always,

5
00:00:25.310 --> 00:00:32.500
it's totally up to you how you build that screen and what you want to show there and so on. On my cart summary

6
00:00:32.510 --> 00:00:33.250
screen here,

7
00:00:33.260 --> 00:00:39.080
in the end I want to show a little box that shows us the total amount and allows us to order all the

8
00:00:39.080 --> 00:00:45.530
items in the cart and below that, I want to have a list of cart items where we can also swipe the icons

9
00:00:45.680 --> 00:00:48.030
to dismiss and delete them.

10
00:00:48.080 --> 00:00:54.170
So since this will make up the entire screen, let's add scaffold here as a root widget in this stateless

11
00:00:54.170 --> 00:00:56.600
widget here, in our own widget

12
00:00:56.600 --> 00:01:03.070
and of course let's add an appBar here where I say your cart, should be on the title though,

13
00:01:03.110 --> 00:01:08.880
so here on the title of this appBar, I'll add a text widget where I say your cart,

14
00:01:08.870 --> 00:01:10.190
anything like that

15
00:01:10.190 --> 00:01:16.870
and of course, then we'll have a body in here which shows the content of our cart. Now

16
00:01:16.880 --> 00:01:22.410
as I said, I want to have a box with a summary of the cart and then below that, all cart items.

17
00:01:22.410 --> 00:01:30.660
So since there are two items, two elements above each other, we'll need a column for sure like this and

18
00:01:31.200 --> 00:01:37.080
column takes children as you learned and the first child here will be a cart and I'll take the built-in

19
00:01:37.080 --> 00:01:43.380
in cart widget to have some nice built-in styling out of the box, add a little bit of margin around it

20
00:01:43.380 --> 00:01:49.120
with the margin argument on cart and I'll use EdgeInsets.all 15

21
00:01:49.140 --> 00:01:54.390
maybe, you can of course play around with that value to find the value that best suits your needs and

22
00:01:54.390 --> 00:02:03.180
the child here of my cart will now be a row because I'll have a couple of pieces of

23
00:02:03.180 --> 00:02:05.100
information next to each other.

24
00:02:05.100 --> 00:02:10.590
Actually the direct child will be a padding because I want to have some padding in the cart with

25
00:02:10.890 --> 00:02:14.470
EdgeInsets.all 8 maybe

26
00:02:14.490 --> 00:02:24.950
and then here, I'll have a child which now is my row of elements. So a row of items inside of my cart

27
00:02:25.070 --> 00:02:26.790
surrounded by some padding

28
00:02:27.050 --> 00:02:34.550
and now in that row, I essentially want to have a text widget where I say total because I am showing

29
00:02:34.550 --> 00:02:42.830
the total here and I'll add a little bit of style there and give this a text style object

30
00:02:42.830 --> 00:02:54.970
therefore, where I want to set the font size to 20 and of course, that should be inside of the text widget,

31
00:02:55.660 --> 00:02:56.910
like this.

32
00:02:57.040 --> 00:03:04.480
So give this a font size of 20 maybe and next to the text, I want to have a SizedBox with a width of 10 to add

33
00:03:04.480 --> 00:03:10.510
some spacing because now next to that, I'll add a widget which we haven't used before,

34
00:03:10.530 --> 00:03:17.130
the chip widget which is also a little a little bit like our badge, our label, an element with rounded

35
00:03:17.130 --> 00:03:20.490
corners which you can use to display information.

36
00:03:20.490 --> 00:03:25.710
The chip takes a label and that is a widget or that requires a widget and I'll use a text widget here

37
00:03:25.800 --> 00:03:28.550
where I want to show my sum, my total

38
00:03:28.560 --> 00:03:36.170
sum of the items I have in the cart. For that of course, we need to calculate the cart total and as before,

39
00:03:36.260 --> 00:03:41.510
it's always a good idea to not do something like this in your widgets but move such logic into your

40
00:03:41.510 --> 00:03:43.470
models, into your classes.

41
00:03:43.490 --> 00:03:51.460
So here, I'll move it into the cart class with a new getter. There I'll return a double with a getter, double

42
00:03:51.520 --> 00:03:55.570
get total amount or whatever you want to name it

43
00:03:55.570 --> 00:04:04.210
and here I want to return the total of all my cart items. Now for that to return my total here, I'll create

44
00:04:04.210 --> 00:04:13.210
a new helper variable, total, which is 0.0 initially and then here, I want to go through all

45
00:04:13.210 --> 00:04:19.540
the elements in my cart, so on my items_items with forEach, I can execute a function on every

46
00:04:19.540 --> 00:04:26.560
entry in that map and it will receive that entry as an argument, to be precise it will receive the key

47
00:04:26.600 --> 00:04:28.730
and then the value for that entry,

48
00:04:28.730 --> 00:04:31.160
so my cart item

49
00:04:31.160 --> 00:04:40.530
so to say and then in that function, I can do something. So it runs this function for every item in my

50
00:04:40.530 --> 00:04:44.430
map and this is a map of cart items in the end.

51
00:04:44.430 --> 00:04:51.530
So here, I can then take my existing total which I initialize with zero and simply add something to it

52
00:04:51.540 --> 00:04:56.640
with this plus equal shortcut which adds something to the value and then stores the new value back in

53
00:04:56.640 --> 00:05:03.540
that variable. So I add something to that value and that something is cartItem.price times

54
00:05:03.630 --> 00:05:05.430
cartItem.quantity.

55
00:05:05.430 --> 00:05:10.980
So I go through all my cart items and then I calculate the total by multiplying all the quantities with

56
00:05:10.980 --> 00:05:14.480
the prices and then that total is what I return here.

57
00:05:14.550 --> 00:05:21.190
So that's my total amount and in the cart screen, I need that total amount. Therefore in the cart screen,

58
00:05:21.430 --> 00:05:29.050
I need to listen to changes in my cart and I'll do this here with provider of because I'm fine with

59
00:05:29.050 --> 00:05:35.080
rebuilding everything when something in a cart changes, theoretically the appBar of course doesn't

60
00:05:35.080 --> 00:05:40.540
need to rebuild if something in a cart changes, it doesn't really hurt though, you could of course just

61
00:05:40.540 --> 00:05:45.820
wrap the parts that really are affected but to save some lines of code and because it doesn't have a

62
00:05:45.820 --> 00:05:52.450
huge impact here, I'll just set up a general listener here directly at the beginning of build and there,

63
00:05:52.510 --> 00:05:58.930
I reach out to my cart with provider for which you need to import the provider package and you will also

64
00:05:58.930 --> 00:06:04.620
need to import your cart model, your cart class.

65
00:06:04.620 --> 00:06:12.410
So with provider of for the type cart of context. This gives me access to the cart and with that access,

66
00:06:12.420 --> 00:06:13.770
I also setup my listener,

67
00:06:13.770 --> 00:06:18.660
I'm fine with listening to changes here, I want to rebuild when something changes,

68
00:06:18.660 --> 00:06:25.280
so here I can then access cart total amount and convert this to a string

69
00:06:25.690 --> 00:06:30.670
but actually that won't be required here because what I actually pass here to the text widget is a string

70
00:06:30.670 --> 00:06:37.150
with some string interpolation where I access between my curly braces cart total amount, to string is then

71
00:06:37.150 --> 00:06:40.490
called automatically and in front of that, I want to show the dollar sign.

72
00:06:40.630 --> 00:06:44.270
So to use it as a dollar sign, we need to escape with a backslash

73
00:06:44.410 --> 00:06:46.320
and then here, this shows the dollar sign

74
00:06:46.330 --> 00:06:50.470
and this here sets up string interpolation where it outputs the total amount.

75
00:06:53.670 --> 00:07:00.290
Now that chip in which I'm outputting this can also be configured to get some background color and there,

76
00:07:00.300 --> 00:07:02.650
I want to use my primary theme color,

77
00:07:02.670 --> 00:07:09.010
so with theme of context primary color, I do set up this background color

78
00:07:09.140 --> 00:07:12.790
and with that, we already have something that would be interesting to view.

79
00:07:12.920 --> 00:07:20.000
So to reach that cart screen, we need to be able to go there and I want to route there with a named route,

80
00:07:20.030 --> 00:07:26.090
so I'll add a static const, routeName here at the top of the cart screen class, at the top of our widget 

81
00:07:26.090 --> 00:07:28.910
here and give this a name of /cart,

82
00:07:28.910 --> 00:07:30.850
that name is of course totally up to you

83
00:07:30.890 --> 00:07:36.620
as you learned in the navigation module and in main.dart, we can now register this. Here in the routes

84
00:07:36.620 --> 00:07:37.580
table,

85
00:07:37.580 --> 00:07:46.970
we add our cart screen and for that, you need to add an import here from ./screens/cart_screen.dart,

86
00:07:46.990 --> 00:07:54.290
then down there, you can refer to CartScreen.routeName as your key and then in that builder method

87
00:07:54.320 --> 00:08:02.620
which Flutter calls for you, you create a new cart screen object. So now with the cart screen registered,

88
00:08:02.650 --> 00:08:07.940
we can go there from inside our ProductsOverview when we tap this cart button.

89
00:08:08.020 --> 00:08:16.940
So here in this method here, I want to use navigator of context and then use pushNamed to go to the

90
00:08:16.940 --> 00:08:23.220
cart screen. So there, I refer to cart screen

91
00:08:23.300 --> 00:08:26.210
and for that, you need to import that screen here,

92
00:08:26.390 --> 00:08:34.750
so add an import pointing at ./cart_screen.dart and with that import added here, down there

93
00:08:34.750 --> 00:08:41.870
where I create the route, I refer to CartScreen.routeName and push that named route. Let's give this

94
00:08:41.870 --> 00:08:42.480
a try,

95
00:08:42.480 --> 00:08:45.730
let's click on the cart and I'm taken to the cart,

96
00:08:45.750 --> 00:08:50.150
you see we have nothing in the cart and hence a total value of 0.

97
00:08:50.150 --> 00:08:57.660
If I now add this item by clicking on the cart button twice, I have 119.98 here which

98
00:08:57.660 --> 00:09:04.110
makes sense if we have a look at our products because what I chose is the trousers and the trousers

99
00:09:04.110 --> 00:09:06.230
have a price of 59.99,

100
00:09:06.240 --> 00:09:12.390
I clicked on the cart icon twice so I added two of them and hence, the total here makes sense, it's two

101
00:09:12.450 --> 00:09:13.700
trousers.

102
00:09:13.770 --> 00:09:14.770
So that works,

103
00:09:14.820 --> 00:09:19.260
now what would be nice here is a change colour of the text.

104
00:09:19.260 --> 00:09:27.740
So in the cart screen here, in our chip on that text here, I can add a style, a text style here and give

105
00:09:27.740 --> 00:09:36.290
this a different color and there I want to reach out to the theme and take my primary text theme and there,

106
00:09:36.350 --> 00:09:43.930
my title color. So only the color which would normally be assigned to title text elements that have the

107
00:09:43.930 --> 00:09:50.980
primary text theme and that by default then uses white as a contrast color to the dark purple background.

108
00:09:52.530 --> 00:09:54.680
It would also be nice to have some spaceBetween

109
00:09:54.780 --> 00:10:00.000
and that's very easy to do as you learned of course. On the row here which holds the different items where

110
00:10:00.000 --> 00:10:06.690
I want to have spaceBetween, we can set a main axis alignment of MainAxisAlignment.spaceBetween

111
00:10:06.950 --> 00:10:15.630
and what this ensures is that it adds spaceBetween total and that chip here. That chip alone is

112
00:10:15.630 --> 00:10:17.940
pretty boring however, next to the chip,

113
00:10:17.940 --> 00:10:21.810
I also want to have a button that allows us to place the order.

114
00:10:21.810 --> 00:10:31.150
So next to the chip, I'll add a FlatButton where the child is a text widget, where I say order now, something

115
00:10:31.150 --> 00:10:39.270
like that, all caps maybe and onPressed, I'll not do anything for the moment because we have no functionality

116
00:10:39.270 --> 00:10:42.520
to place orders yet.

117
00:10:42.730 --> 00:10:48.370
I'll give it a text color though, which I get from my theme and there, I simply want to use the primary

118
00:10:48.370 --> 00:10:58.980
color. So this adds a FlatButton which we now also see here, the order now button. Now thanks to spaceBetween

119
00:10:58.980 --> 00:10:59.480
by the way,

120
00:10:59.490 --> 00:11:04.980
we don't really need that sizedBox with the width here though because we can simply distribute the

121
00:11:04.980 --> 00:11:05.900
space like that

122
00:11:06.810 --> 00:11:11.580
and if you want to make sure that both the chip and the order now button are pushed all the way to the

123
00:11:11.580 --> 00:11:11.980
right

124
00:11:12.030 --> 00:11:14.290
but this total is pushed all the way to the left,

125
00:11:14.420 --> 00:11:18.250
there's a special widget you can add between the text and the chip and

126
00:11:18.250 --> 00:11:23.000
that's the spacer widget which is built into Flutter

127
00:11:23.160 --> 00:11:28.380
and if you add that, that basically takes up all the available space and reserves it for itself and therefore,

128
00:11:28.380 --> 00:11:30.840
we get this look we have here.

129
00:11:31.050 --> 00:11:32.790
So now we have the summary card,

130
00:11:32.790 --> 00:11:35.520
let's next display the cart items below that though.
