1
00:00:02,830 --> 00:00:09,160
Now for this approach of adding tabs, we of course wouldn't have needed a stateful widget here though,

2
00:00:09,250 --> 00:00:14,980
a stateless widget would have done the trick because we're not managing any state. That will change when

3
00:00:14,980 --> 00:00:19,470
we add tabs at the bottom because that simply works a bit different.

4
00:00:19,480 --> 00:00:20,200
Why?

5
00:00:20,320 --> 00:00:25,080
Well simply because the Flutter team wants it to work like this.

6
00:00:25,360 --> 00:00:30,370
There, you won't use the default tab controller, instead

7
00:00:30,790 --> 00:00:37,890
now we'll remove the default tab controller here and therefore return the scaffold in the TabsScreen,

8
00:00:37,900 --> 00:00:38,800
that's where I am,

9
00:00:38,800 --> 00:00:41,050
return the scaffold here,

10
00:00:41,050 --> 00:00:44,300
remove the redundant parentheses, the closing parentheses

11
00:00:44,500 --> 00:00:50,530
and now on that scaffold if you want to have tabs at the bottom, you don't add them here on the appBar,

12
00:00:50,620 --> 00:00:57,430
so you get rid of that bottom argument here on the appBar where you added the TabBar, that's removed

13
00:00:58,120 --> 00:01:03,100
and you also don't have a TabBar view as your body.

14
00:01:03,850 --> 00:01:06,690
Let's ignore the body for now, I'll come back to that,

15
00:01:06,780 --> 00:01:10,310
instead you will add a bottom navigation bar,

16
00:01:10,330 --> 00:01:13,200
that's what a TabBar at the bottom is called

17
00:01:13,660 --> 00:01:22,330
and for that, you have the bottom navigation bar widget which you can add, like this.

18
00:01:22,430 --> 00:01:27,590
It's also built into Flutter and it adds a navigation bar at the bottom as the name suggests.

19
00:01:27,590 --> 00:01:33,840
Now this navigation bar needs some configuration to look good and to work correctly,

20
00:01:33,920 --> 00:01:43,310
for example you can set the background color of the bottom navigation bar and here, I'll use my primary

21
00:01:43,310 --> 00:01:44,330
color for that,

22
00:01:44,690 --> 00:01:46,970
so primary color like this.

23
00:01:48,130 --> 00:01:56,180
Now of course, you also want to add your items here and items now are the tabs.

24
00:01:56,630 --> 00:02:03,800
So items now are bottom navigation bar items and whilst the name sounds strange, that in the end is just

25
00:02:03,860 --> 00:02:05,420
a tab.

26
00:02:05,420 --> 00:02:11,180
Now just as the tabs we had before, you typically have an icon there which takes an icon widget which

27
00:02:11,180 --> 00:02:14,260
then uses the icons collection here

28
00:02:14,270 --> 00:02:21,500
so to say to select an icon and here I will use category and you assign a title which now is a widget

29
00:02:21,560 --> 00:02:27,530
and not plaintext but typically here you use a text widget of course to set the text you want to display

30
00:02:27,530 --> 00:02:28,770
on that tab

31
00:02:28,860 --> 00:02:32,010
and here I'll have categories.

32
00:02:32,200 --> 00:02:36,160
Now of course, we'll not just have one navigation bar item but two,

33
00:02:36,190 --> 00:02:38,140
so let's add a second one and there,

34
00:02:38,140 --> 00:02:45,030
I'll use the star icon and say favorites as a text.

35
00:02:45,040 --> 00:02:49,220
Now we have two bottom navigation bar items in our bottom navigation bar

36
00:02:49,390 --> 00:02:50,630
and now comes the part

37
00:02:50,650 --> 00:02:58,420
that is the biggest difference compared to the tabs we added at the top below our appBar. For

38
00:02:58,420 --> 00:02:59,920
the bottom navigation bar,

39
00:02:59,950 --> 00:03:05,650
you manually have to control what the user selected and which content you want to display.

40
00:03:05,710 --> 00:03:13,780
So for that on the bottom navigation bar itself, you register an onTap listener and that is triggered whenever

41
00:03:13,780 --> 00:03:19,290
an item is selected. Now onTap should execute a method

42
00:03:19,350 --> 00:03:21,180
and I'll add a new method here,

43
00:03:21,180 --> 00:03:26,580
of course you could always use an anonymous function if you wanted to but I'll use a method here which

44
00:03:26,580 --> 00:03:32,370
doesn't return anything which I'll name select page, _selectPage because we're in a private

45
00:03:32,490 --> 00:03:41,220
class here and select page here will receive the index automatically that's passed into this method

46
00:03:41,250 --> 00:03:51,060
by Flutter, of the tab that was selected. So we now bind _selectPage to onTap and that tells

47
00:03:51,060 --> 00:03:55,130
Flutter that select page should be executed when a tab is selected

48
00:03:55,260 --> 00:04:01,200
and as I just said, Flutter will then automatically give you the index of the selected tab, so that you know

49
00:04:01,200 --> 00:04:08,880
if it was the first or the second or the third or whatever you have tab. Now you know what was selected

50
00:04:08,910 --> 00:04:17,320
but now you need to control what's displayed and for that, you should manage your own list of widgets

51
00:04:17,350 --> 00:04:20,650
which you want to render. So for that,

52
00:04:20,650 --> 00:04:29,500
I'll add a new property, a list of widgets up there and I'll name that pages, _pages, you can name

53
00:04:29,500 --> 00:04:31,030
this whatever you want and in there,

54
00:04:31,030 --> 00:04:35,650
I want to have the two, in my case in this app here, two widgets which should be shown

55
00:04:35,800 --> 00:04:39,270
and that's of course the categories screen which I want to create here

56
00:04:39,400 --> 00:04:43,360
and that's of course the favoritesScreen which I want to create

57
00:04:43,570 --> 00:04:48,480
and I just noticed that the import for the favoritesScreen is not in the format I wanted,

58
00:04:48,490 --> 00:04:51,080
so let me quickly fix that,

59
00:04:51,130 --> 00:04:52,150
okay.

60
00:04:52,540 --> 00:04:56,640
So now we have that pages list here with the two pages I want to have

61
00:04:56,890 --> 00:05:02,880
and we can set this to a final list of course because I'm not going to change that

62
00:05:03,040 --> 00:05:09,100
and now one other piece of information is which page was selected because this is basically giving us

63
00:05:09,100 --> 00:05:10,500
the data we want to use

64
00:05:10,660 --> 00:05:13,040
but we also need to know which data to use.

65
00:05:13,060 --> 00:05:18,340
So I'll add another property, not a final one though, an integer which is selected

66
00:05:18,340 --> 00:05:23,010
page index which is 0 initially let's say

67
00:05:23,070 --> 00:05:27,360
and here in _selectPage, in this method, I call set state

68
00:05:27,420 --> 00:05:32,760
and now here that's why we need a stateful widget because we will manually switch that index and we

69
00:05:32,760 --> 00:05:37,740
want to update what's shown on the screen whenever that happens because we want to switch the widget

70
00:05:37,800 --> 00:05:38,990
that is displayed.

71
00:05:39,210 --> 00:05:40,290
So here in set state,

72
00:05:40,320 --> 00:05:44,760
I'll set selected page index equal to the index I'm getting as an argument here,

73
00:05:44,760 --> 00:05:48,300
so equal to the index of the tab that was clicked.

74
00:05:48,300 --> 00:05:54,330
So with that we can now use the pages and the selected page index here to display a content in our

75
00:05:54,330 --> 00:05:55,270
body

76
00:05:55,860 --> 00:05:58,380
because in the body we can now use pages

77
00:05:58,530 --> 00:06:09,160
and that's a list and there we simply access the selected page index like that. And remember, pages

78
00:06:09,160 --> 00:06:13,230
is simply a list of widgets, instantiated widgets.

79
00:06:13,680 --> 00:06:14,490
So we do

80
00:06:17,680 --> 00:06:23,650
output our widget here then in the body depending on which tab was selected.

81
00:06:23,650 --> 00:06:32,620
Let's give it a try and let's restart this application and now we see one tab here, if I click on it,

82
00:06:32,620 --> 00:06:39,070
indeed we go to the favorites and if I click on the left here, indeed I also see that other tab here,

83
00:06:39,070 --> 00:06:42,130
it's just having the same color as the background.

84
00:06:42,130 --> 00:06:46,750
So we'll have to do some styling but in general, it works,

85
00:06:46,750 --> 00:06:51,350
in general we can switch between our tabs here at the bottom.

86
00:06:51,490 --> 00:06:53,530
So let's now work on the styling,

87
00:06:53,680 --> 00:06:58,840
so on that bottom navigation bar, we set the background color for the overall bar.

88
00:06:58,900 --> 00:07:01,270
You can also set the unselected

89
00:07:04,060 --> 00:07:16,320
item color and set that to colors white for example. If you do that and you restart the application, you

90
00:07:16,320 --> 00:07:22,440
indeed see that now favorites is at least a bit easier to see but still, one problem we have is that

91
00:07:22,440 --> 00:07:28,200
when I select it, somehow it's not treated as selected, the other one does not get visible and the

92
00:07:28,200 --> 00:07:31,290
selected item would be nice to see anyways.

93
00:07:31,470 --> 00:07:37,830
So back in our configuration, we can of course also add a color to the selected item with selected item

94
00:07:37,830 --> 00:07:46,260
color and there I want to use my accent color, that setup in the theme. If I save this, now categories

95
00:07:46,260 --> 00:07:52,420
is a bit more visible because now we have that yellow look.

96
00:07:52,760 --> 00:07:58,320
Now still it would be nice if favorites would actually be marked as active when I click on it though

97
00:07:58,650 --> 00:08:04,320
and for that, you need to pass some additional information to the bottom navigation bar. Since you managed

98
00:08:04,320 --> 00:08:07,560
the selection manually, you manage the tabs manually,

99
00:08:07,560 --> 00:08:14,130
you need to feed that information which tab is selected back into the bottom navigation bar and that's

100
00:08:14,130 --> 00:08:16,250
done by setting the current index.

101
00:08:16,260 --> 00:08:20,080
This tells the bottom navigation bar which tab is actually selected.

102
00:08:20,640 --> 00:08:25,530
So here, I set this equal to selected page index of course

103
00:08:25,560 --> 00:08:31,110
and now with that, we can actually switch here and we do see changes

104
00:08:31,110 --> 00:08:36,270
and you see you get a nice little effect here automatically where the font size also increases when

105
00:08:36,270 --> 00:08:42,360
you select an item. You can of course also control that effect here with selected font size and

106
00:08:42,360 --> 00:08:50,090
with and unselected font size, set these two equal and you will see no change in font size. One other

107
00:08:50,090 --> 00:08:57,960
effect you can add to these tabs here is you can set the type of that bottom navigation bar and you

108
00:08:57,960 --> 00:09:06,840
can set this to bottom navigation bar type shifting. If you set that to shifting, you see the style changed

109
00:09:07,320 --> 00:09:10,460
and now we have a nice animation here though.

110
00:09:10,500 --> 00:09:15,900
Now when you have a shifting bottom bar, you simply need to style a couple of other arguments or with

111
00:09:15,900 --> 00:09:22,380
the help of a couple of other arguments to get the same look we had before. When using type shifting,

112
00:09:22,620 --> 00:09:30,060
then you actually need to style your bar items on the bottom navigation bar item itself by giving that a

113
00:09:30,060 --> 00:09:38,500
background color which now could be your primary color here and of course do that on both bottom navigation

114
00:09:38,500 --> 00:09:44,670
bar items and with that, they have their background color back because now every item needs to be styled

115
00:09:44,670 --> 00:09:50,480
separately and with that, you can also use this shifting set up where you have no labels on the

116
00:09:50,480 --> 00:09:53,490
unselected item and only see them on the selected items

117
00:09:53,490 --> 00:09:55,650
here with that little effect.

118
00:09:55,650 --> 00:09:57,200
Now it depends on what you prefer,

119
00:09:57,210 --> 00:09:59,130
I'll not use shifting here,

120
00:09:59,190 --> 00:10:04,860
instead I'll either reset it to fixed but that's the default so I'll just comment that out and therefore

121
00:10:04,860 --> 00:10:06,340
just go with

122
00:10:06,420 --> 00:10:12,990
the static approach here where we have these tabs and that's the other way of adding tabs. Here

123
00:10:12,990 --> 00:10:14,990
we control the indexes on our own,

124
00:10:15,030 --> 00:10:21,360
what's the same as with the tabs in the appBar however is that the content we display here is essentially

125
00:10:21,360 --> 00:10:23,590
now just an embedded widget

126
00:10:23,760 --> 00:10:30,180
I still call these widgets, the favoritesScreen and the CategoriesScreen, screens because they control

127
00:10:30,180 --> 00:10:35,670
the majority of the screen, the main content but they don't control the entire screen anymore,

128
00:10:35,670 --> 00:10:42,660
for example the appBar and the TabBar of course importantly is now controlled by our TabsScreen.

129
00:10:42,660 --> 00:10:46,340
Now if you navigate here, of course you still have the same behavior as before though

130
00:10:46,380 --> 00:10:51,720
but on that overview screen, you now have the tabs. To finish this off,

131
00:10:51,720 --> 00:10:58,500
let's make sure we also change the title up there though depending on which tab was selected. You can

132
00:10:58,500 --> 00:11:06,030
do that here in the TabsScreen by simply tweaking our pages list a little bit. Instead of just storing

133
00:11:06,030 --> 00:11:06,960
a list of widgets,

134
00:11:06,960 --> 00:11:15,120
why don't we store a list of maps here where we have string keys and then we have dynamic values, which

135
00:11:15,120 --> 00:11:21,420
means we don't know the exact type or object values which also basically means we don't know which kind

136
00:11:21,420 --> 00:11:22,360
of object

137
00:11:22,620 --> 00:11:29,720
and therefore now here, we have maps where we have a page key that holds our widget but where we also

138
00:11:29,730 --> 00:11:35,490
have a title key which holds the title we want to show in the appBar and that could be categories here

139
00:11:35,970 --> 00:11:44,070
and for the other widget, we also have page of course but then here, we have title and there, we could

140
00:11:44,070 --> 00:11:48,750
say your favorites and close that of course as well.

141
00:11:48,750 --> 00:11:52,290
And now with that, we have our list of maps up there

142
00:11:52,470 --> 00:11:59,400
and when we now select a page here in the body, we of course don't output the pages, selected page index

143
00:11:59,400 --> 00:12:05,790
because that would be a map but instead on that map, we access the page key because the page key is in

144
00:12:05,790 --> 00:12:06,630
our map

145
00:12:06,630 --> 00:12:08,730
what holds the widget

146
00:12:08,730 --> 00:12:15,780
and we now can also use the title here in our appBar title. Instead of having hardcoded meals here,

147
00:12:16,230 --> 00:12:24,120
we can use the pages property, access the selected page index and then there, the title key which holds

148
00:12:24,150 --> 00:12:26,210
our string title.

149
00:12:26,310 --> 00:12:35,280
And with that if we save this and this restarts, we now have a setup where if you watch title at the

150
00:12:35,280 --> 00:12:35,810
top,

151
00:12:35,880 --> 00:12:39,040
this title changes as I switch the tabs.

152
00:12:39,060 --> 00:12:44,400
So this is how you could also update the title dynamically and of course, you can store any data you

153
00:12:44,410 --> 00:12:45,630
want in this map.

154
00:12:45,630 --> 00:12:51,820
So if you also would want to add some action buttons dynamically to the appBar, you could add an actions

155
00:12:51,920 --> 00:12:57,840
key here which holds your list of widgets which are all the flat buttons or whatever you have you

156
00:12:57,840 --> 00:13:03,870
want to add as action widgets in the appBar. So you can really add whatever you want here and then

157
00:13:03,880 --> 00:13:09,990
therefore load the data and use the data down there that you need to load and use based on the selected

158
00:13:09,990 --> 00:13:10,560
tab.
