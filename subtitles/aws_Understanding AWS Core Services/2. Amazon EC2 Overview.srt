1
00:00:01,040 --> 00:00:03,600
So, next we're going to talk about Amazon EC2.

2
00:00:03,600 --> 00:00:08,200
And Amazon EC2 is one of the fundamental core services of

3
00:00:08,200 --> 00:00:12,960
AWS. And AWS defines it as a Web service that provides

4
00:00:12,960 --> 00:00:15,280
resizable compute capacity in the cloud,

5
00:00:15,280 --> 00:00:19,340
and it's designed to make web‑scale computing easier for developers.

6
00:00:19,340 --> 00:00:21,250
So, before we get too deep into EC2,

7
00:00:21,250 --> 00:00:25,840
let's look at some sample use cases where we could choose to use EC2.

8
00:00:25,840 --> 00:00:30,130
Let's say, for example, that we want to host a web application in the cloud.

9
00:00:30,130 --> 00:00:33,380
We could choose to spin‑up an EC2 instance,

10
00:00:33,380 --> 00:00:36,620
and then on that instance, we could install a Web server,

11
00:00:36,620 --> 00:00:37,830
and then on that web server,

12
00:00:37,830 --> 00:00:40,960
we could go in and put the files for our web application.

13
00:00:40,960 --> 00:00:44,140
So, in that case, EC2 would totally meet that need.

14
00:00:44,140 --> 00:00:47,580
But we also could do things like batch processing of data.

15
00:00:47,580 --> 00:00:51,090
So if your organization produces maybe a 1,000,000 rows of point

16
00:00:51,090 --> 00:00:54,140
of sale data each day and you want to pull that in and do some

17
00:00:54,140 --> 00:00:58,440
preprocessing before you analyze it, you could use an EC2 server for that.

18
00:00:58,440 --> 00:01:01,060
You could also use it to just be an API server,

19
00:01:01,060 --> 00:01:05,050
where you take web services and launch them in the cloud and let other

20
00:01:05,050 --> 00:01:08,030
applications access them. Or you could do something like,

21
00:01:08,030 --> 00:01:10,150
even having a desktop in the cloud.

22
00:01:10,150 --> 00:01:14,100
So if you want to launch a windows instance on Amazon EC2 and then be

23
00:01:14,100 --> 00:01:16,160
able to connect to that through remote desktop,

24
00:01:16,160 --> 00:01:19,490
all of those things are possible utilizing Amazon EC2.

25
00:01:19,490 --> 00:01:21,110
Now next,

26
00:01:21,110 --> 00:01:25,010
we're going to talk about the core concepts that we need to know before

27
00:01:25,010 --> 00:01:28,850
we're able to launch an EC2 instance in the cloud.

28
00:01:28,850 --> 00:01:31,710
First, we need to understand instance types,

29
00:01:31,710 --> 00:01:35,370
and then we need to understand root device type.

30
00:01:35,370 --> 00:01:37,900
Next, we're going to look at the Amazon Machine Image,

31
00:01:37,900 --> 00:01:38,920
or AMI,

32
00:01:38,920 --> 00:01:42,320
and then we're going to look at the different purchase options for EC2

33
00:01:42,320 --> 00:01:46,360
instances. But let's start off by looking at instance types.

34
00:01:46,360 --> 00:01:46,490
So,

35
00:01:46,490 --> 00:01:51,140
an EC2 instance type defines the processor memory and storage that are

36
00:01:51,140 --> 00:01:55,540
available to any servers that are launched with that instance type,

37
00:01:55,540 --> 00:01:57,630
and you can't change this without downtime.

38
00:01:57,630 --> 00:02:01,320
So, if you've launched an EC2 instance, which is your virtual server,

39
00:02:01,320 --> 00:02:03,100
and it has a certain amount of memory,

40
00:02:03,100 --> 00:02:06,570
based on the instance type that you chose when you launched it,

41
00:02:06,570 --> 00:02:08,530
you can't simply go to that server and say,

42
00:02:08,530 --> 00:02:10,310
I want to put a new instance type in.

43
00:02:10,310 --> 00:02:10,500
So,

44
00:02:10,500 --> 00:02:12,630
we do want to make sure that we make good choices on

45
00:02:12,630 --> 00:02:15,040
instance types when we launch them.

46
00:02:15,040 --> 00:02:18,390
Now, we have instance types across several different categories,

47
00:02:18,390 --> 00:02:20,390
including general purpose.

48
00:02:20,390 --> 00:02:23,010
So, for most workloads that you're going to put in the cloud,

49
00:02:23,010 --> 00:02:27,410
general purpose will probably work fine for you, but we also have compute,

50
00:02:27,410 --> 00:02:29,990
memory and storage, optimize instance types.

51
00:02:29,990 --> 00:02:32,340
And again, that's three separate categories there.

52
00:02:32,340 --> 00:02:33,370
So, for example,

53
00:02:33,370 --> 00:02:37,640
if we wanted to launch an in‑memory database on our EC2 instance,

54
00:02:37,640 --> 00:02:41,540
we might choose a memory optimize instance type.

55
00:02:41,540 --> 00:02:43,830
But we also have accelerated computing,

56
00:02:43,830 --> 00:02:47,060
and these are for specialized use cases, for example,

57
00:02:47,060 --> 00:02:50,360
machine learning, because in this case, with those instance types,

58
00:02:50,360 --> 00:02:53,280
you could get access to a GPU, for example,

59
00:02:53,280 --> 00:02:55,310
which could be very important for the different

60
00:02:55,310 --> 00:02:57,110
machine learning work that you're doing.

61
00:02:57,110 --> 00:02:57,240
Now,

62
00:02:57,240 --> 00:03:00,950
pricing is based on the instance type. So if you choose

63
00:03:00,950 --> 00:03:03,460
something that has more resources available to it,

64
00:03:03,460 --> 00:03:06,610
and it's a specialized type, it will cost more than

65
00:03:06,610 --> 00:03:09,240
just using a general purpose instance.

66
00:03:09,240 --> 00:03:13,100
But some instance types also have unique capabilities, so

67
00:03:13,100 --> 00:03:16,500
some families of instance types have access to things like

68
00:03:16,500 --> 00:03:20,590
specialized storage, or GPUs, as we mentioned earlier.

69
00:03:20,590 --> 00:03:24,770
So next, we're going to look at some sample EC2 instance type pricing.

70
00:03:24,770 --> 00:03:26,520
Now, I need to make a couple of caveats here.

71
00:03:26,520 --> 00:03:29,850
One is, is that EC2 pricing changes over time,

72
00:03:29,850 --> 00:03:34,260
so these numbers might not be accurate in the future, but in addition to that,

73
00:03:34,260 --> 00:03:37,040
the prices can also change from region to region.

74
00:03:37,040 --> 00:03:39,410
So let's just use these prices I'm showing here,

75
00:03:39,410 --> 00:03:42,930
even though I pulled them from us‑east‑1, let's just use them to help us

76
00:03:42,930 --> 00:03:46,710
understand relatively what different instance types cost.

77
00:03:46,710 --> 00:03:48,810
So I'm going to start off here with a couple of

78
00:03:48,810 --> 00:03:51,400
different general purpose instance types.

79
00:03:51,400 --> 00:03:56,020
You can see here that we have a t3.medium and an m5.large.

80
00:03:56,020 --> 00:03:56,140
Well,

81
00:03:56,140 --> 00:03:58,800
we can see that the m5.large has twice as many vCPUs

82
00:03:58,800 --> 00:04:02,430
and four times as much memory, and in this case,

83
00:04:02,430 --> 00:04:05,740
it's just a little over twice as much per hour,

84
00:04:05,740 --> 00:04:09,440
in this case, coming out to be just a little bit under 10 cents per hour.

85
00:04:09,440 --> 00:04:15,680
Now, here is an example of a compute optimized instance type, a c5d.24xlarge.

86
00:04:15,680 --> 00:04:19,050
We can see here that we have a dramatic jump in all three

87
00:04:19,050 --> 00:04:22,480
categories, vCPUs, memory, and pricing, with this coming

88
00:04:22,480 --> 00:04:25,480
out to be about $4.60 per hour.

89
00:04:25,480 --> 00:04:28,280
But then we have a p3.16xlarge.

90
00:04:28,280 --> 00:04:31,480
Now, this is a very specialized instance type that comes from the

91
00:04:31,480 --> 00:04:35,150
accelerated computing category because this gives us access to some

92
00:04:35,150 --> 00:04:39,240
of the industry leading GPUs for things like our machine learning

93
00:04:39,240 --> 00:04:40,750
workflows. And in this case,

94
00:04:40,750 --> 00:04:44,440
this one comes out to be about $25 per hour, So, even though

95
00:04:44,440 --> 00:04:47,190
it looks here, like it has less vCPUs,

96
00:04:47,190 --> 00:04:50,530
this factors into some of those special capabilities that are

97
00:04:50,530 --> 00:04:53,940
included within the P3 instance type family.

98
00:04:53,940 --> 00:04:58,640
And then, we have a storage optimized instance type, an i3.16xlarge,

99
00:04:58,640 --> 00:05:03,030
which again has 64 vCPUs and a lot of memory,

100
00:05:03,030 --> 00:05:05,410
and it comes out to be about $5 per hour,

101
00:05:05,410 --> 00:05:08,230
but it has some special access to storage capabilities

102
00:05:08,230 --> 00:05:11,080
that the other instance types don't have.

103
00:05:11,080 --> 00:05:13,480
Now next, let's move away from instance types,

104
00:05:13,480 --> 00:05:16,640
and let's take a look at the root device type.

105
00:05:16,640 --> 00:05:20,540
There really are two different root device types that you need to know when

106
00:05:20,540 --> 00:05:24,740
working with EC2. The first is what we call the instant store,

107
00:05:24,740 --> 00:05:26,370
which is ephemeral storage,

108
00:05:26,370 --> 00:05:29,290
and it is actually physically attached to the host that

109
00:05:29,290 --> 00:05:30,790
the virtual server is running on.

110
00:05:30,790 --> 00:05:31,890
So that's one type.

111
00:05:31,890 --> 00:05:35,140
And the next type is Elastic Block Store, or EBS,

112
00:05:35,140 --> 00:05:38,240
which is persistent storage that exists separately from the host

113
00:05:38,240 --> 00:05:40,580
that the virtual server is running on. Now,

114
00:05:40,580 --> 00:05:42,050
when EC2 initially launched,

115
00:05:42,050 --> 00:05:45,550
we just had instance store, but now that we have EBS,

116
00:05:45,550 --> 00:05:48,700
I'll go ahead and tell you that for most work you're going to do

117
00:05:48,700 --> 00:05:52,090
on EC2, you want to use Elastic Block Store,

118
00:05:52,090 --> 00:05:55,240
which is EBS, unless you have a specific reason not to.

119
00:05:55,240 --> 00:05:57,860
It provides a lot of capabilities that will help you, but

120
00:05:57,860 --> 00:06:00,490
one of the key differences is the difference between the

121
00:06:00,490 --> 00:06:03,040
words ephemeral and persistent.

122
00:06:03,040 --> 00:06:04,660
So with an instant store,

123
00:06:04,660 --> 00:06:09,130
if you spin‑up your EC2 server and you actually completely shut it

124
00:06:09,130 --> 00:06:13,520
down, then the data on that instant store will go away.

125
00:06:13,520 --> 00:06:16,390
However, EBS data will be persistent,

126
00:06:16,390 --> 00:06:19,720
and we can even go in and take snapshots of it and copy it and

127
00:06:19,720 --> 00:06:22,210
launch new EC2 instances with EBS volume.

128
00:06:22,210 --> 00:06:23,740
There's a lot that we can do,

129
00:06:23,740 --> 00:06:26,380
and we'll cover that more, later within this course,

130
00:06:26,380 --> 00:06:29,530
when we talk about the different storage services that are available on

131
00:06:29,530 --> 00:06:33,670
AWS. But just know here, that instant store is ephemeral,

132
00:06:33,670 --> 00:06:35,390
meaning that if you shut down the server,

133
00:06:35,390 --> 00:06:38,780
that data will go away, and EBS data is persistent,

134
00:06:38,780 --> 00:06:40,500
meaning that if you shut down the server,

135
00:06:40,500 --> 00:06:42,240
that data is still there.

136
00:06:42,240 --> 00:06:42,400
Now,

137
00:06:42,400 --> 00:06:46,630
let's look next at Amazon Machine Images, or AMIs. Now, I should

138
00:06:46,630 --> 00:06:49,650
probably also mention here, that there is fierce debate amongst

139
00:06:49,650 --> 00:06:53,500
the AWS community on whether or not this is pronounced A‑M‑I or

140
00:06:53,500 --> 00:06:54,920
Amy, but in this case,

141
00:06:54,920 --> 00:06:58,420
you'll hear me refer to it as an A‑M‑I. But just know if you hear somebody

142
00:06:58,420 --> 00:07:02,340
else refer to it as an Amy, that's what they're referring to.

143
00:07:02,340 --> 00:07:07,100
Now, an AMI is a template for an EC2 instance that includes configuration,

144
00:07:07,100 --> 00:07:09,260
the operating system, and the data that actually

145
00:07:09,260 --> 00:07:12,140
would go on that specific instance.

146
00:07:12,140 --> 00:07:15,710
And AWS provides many different AMIs that you can

147
00:07:15,710 --> 00:07:20,960
leverage, and when we go through, actually using EC2, later within this module,

148
00:07:20,960 --> 00:07:24,000
you'll see that there are several provided by AWS that are

149
00:07:24,000 --> 00:07:27,980
relatively easy to spin‑up a new instance from. But AMIs can

150
00:07:27,980 --> 00:07:30,330
also be shared across accounts.

151
00:07:30,330 --> 00:07:33,100
So if your organization has a specific version of,

152
00:07:33,100 --> 00:07:36,690
let's say, Ubuntu Linux that you want to modify in a certain way for

153
00:07:36,690 --> 00:07:41,130
security purposes and you want to have it be just exactly the specific way

154
00:07:41,130 --> 00:07:44,450
and you want it to have one extra drive that's attached where you store

155
00:07:44,450 --> 00:07:48,210
other pieces of data, those are all examples of configurations that you can

156
00:07:48,210 --> 00:07:50,740
make within an Amazon Machine Image.

157
00:07:50,740 --> 00:07:53,960
And as I mentioned, you can create your own custom AMIs,

158
00:07:53,960 --> 00:07:58,010
and there also is a marketplace for commercial AMIs.

159
00:07:58,010 --> 00:08:00,160
So if you want to use AWS Marketplace,

160
00:08:00,160 --> 00:08:06,000
you can go and explore the different AMIs that are provided from commercial vendors.

