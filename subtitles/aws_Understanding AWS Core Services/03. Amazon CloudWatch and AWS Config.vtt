WEBVTT
1
00:00:01.040 --> 00:00:01.760
So next,

2
00:00:01.760 --> 00:00:05.430
we're going to look at two services, Amazon CloudWatch and AWS

3
00:00:05.430 --> 00:00:08.330
Config, that help you manage your infrastructure.

4
00:00:08.330 --> 00:00:11.330
But let's quickly take a step back and look at all of the services

5
00:00:11.330 --> 00:00:14.100
that enable you to manage your infrastructure.

6
00:00:14.100 --> 00:00:17.480
And the first of these that we have is Amazon CloudWatch,

7
00:00:17.480 --> 00:00:21.440
and this provides metrics, logs, and alarms for your infrastructure.

8
00:00:21.440 --> 00:00:23.870
Then, we have AWS Config,

9
00:00:23.870 --> 00:00:26.730
and this continually evaluates your infrastructure

10
00:00:26.730 --> 00:00:29.260
against a predefined set of rules.

11
00:00:29.260 --> 00:00:32.300
Now we'll be covering both of these within this clip. And

12
00:00:32.300 --> 00:00:35.300
the next option is AWS Systems Manager,

13
00:00:35.300 --> 00:00:38.720
and it provides operational data and automation across your infrastructure,

14
00:00:38.720 --> 00:00:41.140
and we'll be covering that within the next clip.

15
00:00:41.140 --> 00:00:45.740
Now, these are not the only services that help you manage infrastructure on AWS,

16
00:00:45.740 --> 00:00:47.950
but these are the ones that you will need to know for

17
00:00:47.950 --> 00:00:50.640
your Certified Cloud Practitioner exam.

18
00:00:50.640 --> 00:00:53.640
Now let's first look at Amazon CloudWatch.

19
00:00:53.640 --> 00:00:56.960
So it is a monitoring and management service,

20
00:00:56.960 --> 00:00:59.880
and there are several different facets to CloudWatch. So it

21
00:00:59.880 --> 00:01:03.270
collects logs, so for example if you have log messages coming

22
00:01:03.270 --> 00:01:07.440
from your custom applications, this can actually collect those logs.

23
00:01:07.440 --> 00:01:08.810
It also gets metrics.

24
00:01:08.810 --> 00:01:11.730
So you could have metrics being the number of users that

25
00:01:11.730 --> 00:01:13.590
are visiting one of your load balancers,

26
00:01:13.590 --> 00:01:14.840
for example.

27
00:01:14.840 --> 00:01:18.620
Or you can even get events that are coming from most AWS services,

28
00:01:18.620 --> 00:01:21.740
and it truly is a firstâ€‘class citizen in AWS,

29
00:01:21.740 --> 00:01:25.740
which means that most services integrate with CloudWatch by default.

30
00:01:25.740 --> 00:01:30.590
But one of the powerful features is that it enables alarms based on metrics.

31
00:01:30.590 --> 00:01:32.580
So most all of the clients that I work with,

32
00:01:32.580 --> 00:01:36.860
we go in and set alarms so that if something is down or not performing as it

33
00:01:36.860 --> 00:01:40.660
should, CloudWatch lets you know as opposed to you having to go and find

34
00:01:40.660 --> 00:01:45.100
that out yourself or have your customers tell you. So next, it provides

35
00:01:45.100 --> 00:01:47.880
visualization capabilities for metrics.

36
00:01:47.880 --> 00:01:50.950
So if you want to have a chart that shows a metric over time,

37
00:01:50.950 --> 00:01:53.560
that's part of what is included with CloudWatch,

38
00:01:53.560 --> 00:01:54.670
and because of that,

39
00:01:54.670 --> 00:01:58.960
you can create custom dashboards based on the metrics that it collects.

40
00:01:58.960 --> 00:02:03.040
So here's a sample dashboard where you can see some of this in use.

41
00:02:03.040 --> 00:02:05.390
You can see here that it's tracking things like CPU

42
00:02:05.390 --> 00:02:09.910
utilization on some EC2 servers and network traffic and EBS

43
00:02:09.910 --> 00:02:12.190
activity for Elastic Block Store.

44
00:02:12.190 --> 00:02:15.450
And so this is just an example of some of the types of data

45
00:02:15.450 --> 00:02:18.640
that you can put into a custom dashboard.

46
00:02:18.640 --> 00:02:23.240
But next, let's talk about another service, and that's AWS Config.

47
00:02:23.240 --> 00:02:27.860
So, AWS Config continually monitors and records your resource configuration,

48
00:02:27.860 --> 00:02:30.240
and it uses this so that you can evaluate that

49
00:02:30.240 --> 00:02:32.850
against the desired configuration.

50
00:02:32.850 --> 00:02:34.520
So let's look at how that works.

51
00:02:34.520 --> 00:02:38.410
So here within AWS Config, first of all is it does provide a level

52
00:02:38.410 --> 00:02:42.040
of configuration history for your infrastructure,

53
00:02:42.040 --> 00:02:44.600
and it's also going to take a look at a set of rules.

54
00:02:44.600 --> 00:02:48.780
Now, these rules, there are many that are included within AWS Config.

55
00:02:48.780 --> 00:02:51.730
In addition, you can also customize the rules that are there,

56
00:02:51.730 --> 00:02:55.720
or you can even create completely new ones. Next, it includes

57
00:02:55.720 --> 00:02:58.390
conformance packs for compliance standards,

58
00:02:58.390 --> 00:03:00.400
including things like PCI DSS.

59
00:03:00.400 --> 00:03:04.120
Now that is a standard that if you're going to be accepting payment information,

60
00:03:04.120 --> 00:03:07.220
you need to be able to meet this criteria, and to do that,

61
00:03:07.220 --> 00:03:11.620
you can follow the rules that are already in place within AWS Config to be

62
00:03:11.620 --> 00:03:14.910
sure that the infrastructure that you have is compliant. Now,

63
00:03:14.910 --> 00:03:19.080
Config can also work within an AWS organization to look at all

64
00:03:19.080 --> 00:03:22.050
of your regions, as well as all of the separate accounts that

65
00:03:22.050 --> 00:03:25.040
you have. And one of the great things about it is that it also

66
00:03:25.040 --> 00:03:26.740
provides remediation steps.

67
00:03:26.740 --> 00:03:34.000
So if your infrastructure doesn't meet some of these standards, it will give you insight on how you can fix that.

