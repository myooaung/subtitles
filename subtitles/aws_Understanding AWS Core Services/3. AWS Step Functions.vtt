WEBVTT
1
00:00:01.040 --> 00:00:05.260
So now, we're going to talk about AWS Step Functions.

2
00:00:05.260 --> 00:00:08.740
And here's a few things that you need to know about AWS Step Functions.

3
00:00:08.740 --> 00:00:09.940
First of all,

4
00:00:09.940 --> 00:00:16.400
it enables orchestration of workflows through a fully managed service, and it

5
00:00:16.400 --> 00:00:20.260
does this in a way that supports serverless architectures.

6
00:00:20.260 --> 00:00:23.490
So this is one of the services that really enables this serverless

7
00:00:23.490 --> 00:00:26.580
mindset where you're trying to limit the amount of actual

8
00:00:26.580 --> 00:00:29.990
infrastructure that you have to own and maintain. Now it also can

9
00:00:29.990 --> 00:00:31.800
support very complex workflows,

10
00:00:31.800 --> 00:00:34.790
including error handling, and we'll see in a minute how you

11
00:00:34.790 --> 00:00:37.640
define those workflows within the service.

12
00:00:37.640 --> 00:00:40.410
Now you're charged per state transition,

13
00:00:40.410 --> 00:00:45.370
along with any of the other AWS services that you leverage. Now in this case,

14
00:00:45.370 --> 00:00:47.790
that might sound strange to you, but here's what that means.

15
00:00:47.790 --> 00:00:50.290
If you have four steps in your workflow,

16
00:00:50.290 --> 00:00:54.140
you're going to be charged for each transition from one step to another.

17
00:00:54.140 --> 00:00:56.300
And then if that's running on a service like Lambda,

18
00:00:56.300 --> 00:01:00.240
you'll be charged the normal rates for the Lambda services that you're using.

19
00:01:00.240 --> 00:01:04.740
Now, workflows are defined using something called Amazon States Language. And

20
00:01:04.740 --> 00:01:07.860
you don't need to know how to write States Language at all, but I want to give

21
00:01:07.860 --> 00:01:10.760
you an example of how some of this would be defined.

22
00:01:10.760 --> 00:01:10.950
Now,

23
00:01:10.950 --> 00:01:14.520
let's say here that we wanted to get user signups and we

24
00:01:14.520 --> 00:01:16.940
wanted to do some things simultaneously.

25
00:01:16.940 --> 00:01:20.740
After we get the signup, we want to insert the data into our CRM,

26
00:01:20.740 --> 00:01:23.120
and then we also want to send them a welcome email.

27
00:01:23.120 --> 00:01:25.340
And then when we get done with that welcome email,

28
00:01:25.340 --> 00:01:28.140
we want to schedule a call with one of our sales people.

29
00:01:28.140 --> 00:01:30.730
Now, once all of that's done, we want to wait a week,

30
00:01:30.730 --> 00:01:34.060
and then we want to send another follow up email to see how they're doing.

31
00:01:34.060 --> 00:01:37.200
This is an example of what you can accomplish utilizing a

32
00:01:37.200 --> 00:01:41.270
Step Function on AWS. And you see a very small portion of

33
00:01:41.270 --> 00:01:43.390
how that's defined on the left.

34
00:01:43.390 --> 00:01:47.670
This is using a format called JSON to define the Amazon States Language,

35
00:01:47.670 --> 00:01:52.240
and this is what allows us to define the different steps within the workflow.

36
00:01:52.240 --> 00:01:53.080
Now as I mentioned,

37
00:01:53.080 --> 00:01:56.670
it does have a lot of integrations in to other AWS

38
00:01:56.670 --> 00:02:01.290
services. So we have, for example, compute services like integrating with Lambda,

39
00:02:01.290 --> 00:02:05.550
for example. It also can integrate with database services like DynamoDB,

40
00:02:05.550 --> 00:02:08.970
which we'll talk more about later within this course. It also

41
00:02:08.970 --> 00:02:12.230
can integrate in with the messaging services, meaning SQS and

42
00:02:12.230 --> 00:02:14.540
SNS that we have just talked about.

43
00:02:14.540 --> 00:02:15.050
Also,

44
00:02:15.050 --> 00:02:19.390
data processing services, and even machine learning services. So

45
00:02:19.390 --> 00:02:22.860
this is a powerful tool that you can use to build out very complex

46
00:02:22.860 --> 00:02:31.000
workflows and have Amazon manage the state for you of the different steps within that workflow.

