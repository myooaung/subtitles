WEBVTT
1
00:00:01.040 --> 00:00:04.600
Now another core service on AWS is the Amazon

2
00:00:04.600 --> 00:00:07.430
Relational Database Service, or RDS.

3
00:00:07.430 --> 00:00:10.540
And this takes a Platform as a Service approach to running

4
00:00:10.540 --> 00:00:13.130
databases that we can leverage within our applications that

5
00:00:13.130 --> 00:00:14.940
are running on the platform.

6
00:00:14.940 --> 00:00:17.320
So at a high level within RDS, first of all,

7
00:00:17.320 --> 00:00:19.410
it's important to note that it is a fully managed

8
00:00:19.410 --> 00:00:22.160
service for relational databases,

9
00:00:22.160 --> 00:00:24.700
and it does handle core things like provisioning and

10
00:00:24.700 --> 00:00:28.320
patching, backup and recovery of your database.

11
00:00:28.320 --> 00:00:30.400
These are all things that if you had to do it yourself,

12
00:00:30.400 --> 00:00:33.540
it would take a fair amount of time to implement this. And then to handle it at

13
00:00:33.540 --> 00:00:36.980
scale, it would take a fair amount of automation to integrate it in, and you

14
00:00:36.980 --> 00:00:39.740
get this by default when leveraging the service.

15
00:00:39.740 --> 00:00:42.680
Now one of the great things about RDS is that it does support

16
00:00:42.680 --> 00:00:45.900
deployments across multiple availability zones,

17
00:00:45.900 --> 00:00:50.300
and it also supports read replicas for some of the platforms.

18
00:00:50.300 --> 00:00:53.080
That means you can actually scale out your databases.

19
00:00:53.080 --> 00:00:54.970
This can help you scale more efficiently within the

20
00:00:54.970 --> 00:00:57.690
applications that are leveraging this database.

21
00:00:57.690 --> 00:01:00.740
Now it's important to note that when you launch an RDS instance,

22
00:01:00.740 --> 00:01:05.480
it does launch into a VPC, or virtual private cloud.

23
00:01:05.480 --> 00:01:08.910
Now we talked previously about EBS and different volume types,

24
00:01:08.910 --> 00:01:13.550
and here within RDS, we have two different volume types that are available to us.

25
00:01:13.550 --> 00:01:16.300
First of all, we have General Purpose SSDs,

26
00:01:16.300 --> 00:01:20.240
and then we have Provisioned IOPS SSD drives.

27
00:01:20.240 --> 00:01:22.110
Now let's talk about the different platforms that

28
00:01:22.110 --> 00:01:24.740
are supported within Amazon RDS.

29
00:01:24.740 --> 00:01:27.040
First of all, we have MySQL.

30
00:01:27.040 --> 00:01:36.140
In addition, we have Postgres, MariaDB, Oracle, SQL Server, and Amazon Aurora.

31
00:01:36.140 --> 00:01:40.350
Now Amazon Aurora is an option that was actually created in the beginning to

32
00:01:40.350 --> 00:01:46.370
work on RDS. And it is a MySQL and Postgres compatible relational database

33
00:01:46.370 --> 00:01:48.640
that was built from the beginning for the cloud.

34
00:01:48.640 --> 00:01:51.270
And it combines performance and availability of traditional

35
00:01:51.270 --> 00:01:54.250
enterprise databases with the simplicity and cost

36
00:01:54.250 --> 00:01:57.340
effectiveness of open source databases.

37
00:01:57.340 --> 00:01:57.630
Now,

38
00:01:57.630 --> 00:02:00.870
you might be wondering if you have a database that's running within

39
00:02:00.870 --> 00:02:04.060
your own datacenter and you want to figure out how to get your data

40
00:02:04.060 --> 00:02:07.440
into a service like RDS, how would you do that?

41
00:02:07.440 --> 00:02:10.540
Well, AWS helps you solve that problem too.

42
00:02:10.540 --> 00:02:14.780
So we have the Amazon Database Migration Service, or DMS.

43
00:02:14.780 --> 00:02:17.430
And what this enables you to do is to move your data

44
00:02:17.430 --> 00:02:20.840
into AWS from your existing databases.

45
00:02:20.840 --> 00:02:25.640
And it supports both a oneâ€‘time and a continual migration of your data.

46
00:02:25.640 --> 00:02:28.230
And the great thing is, is it does support out of the box,

47
00:02:28.230 --> 00:02:38.000
many both commercial and open source databases, and in this case you only pay for the compute that you leverage in the migration process.

