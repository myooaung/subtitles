WEBVTT
1
00:00:05.600 --> 00:00:12.140
In this video we'll look at C++ is relational operators in addition to the quality operators.

2
00:00:12.190 --> 00:00:16.780
C++ also has several other relational comparison operators.

3
00:00:16.780 --> 00:00:23.530
These are greater than greater than or equal to less than and less than or equal to and in C plus plus

4
00:00:23.530 --> 00:00:29.350
20 they'll be a really neat three way comparison operator this operator compares to expressions and

5
00:00:29.350 --> 00:00:34.750
evaluates to zero if they're equal less than zero if the left hand side is greater than the right hand

6
00:00:34.750 --> 00:00:36.920
side and greater than zero.

7
00:00:37.030 --> 00:00:42.580
If the right hand side is greater than the left hand side like the equality operators these operators

8
00:00:42.580 --> 00:00:45.570
are very intuitive easy to use and understand.

9
00:00:45.970 --> 00:00:48.890
Let's see a few examples in code like.

10
00:00:49.420 --> 00:00:50.380
I mean code like.

11
00:00:50.410 --> 00:00:56.680
I'm in the Section 8 workspace and this is the relational operators project in this project.

12
00:00:56.680 --> 00:01:01.420
I'm just using some really simple examples to test some of these relational operators.

13
00:01:01.690 --> 00:01:05.030
As you can see I've got two numbers declared number one and number two.

14
00:01:05.050 --> 00:01:10.210
This is where I'm going to read some miniatures into and I'm asking the user to enter into your separated

15
00:01:10.210 --> 00:01:13.630
by space and I'm reading those two integers from the user.

16
00:01:14.110 --> 00:01:20.110
Then what I'm doing in this output statement right here is supposed a user entered 10 and 20 here I'm

17
00:01:20.110 --> 00:01:27.550
just saying 10 greater than I'm just explicitly printing out that greater than sine 20 and that I'm

18
00:01:27.550 --> 00:01:32.100
evaluating whether one is greater than two and that's going to say true or false.

19
00:01:32.470 --> 00:01:37.000
So it's going to do that for all four operators greater than greater than or equal to less than less

20
00:01:37.000 --> 00:01:37.990
than or equal to.

21
00:01:38.170 --> 00:01:43.200
And then we could try out a couple of examples with this with this program so let's let's run it.

22
00:01:45.340 --> 00:01:46.630
And the center two integers.

23
00:01:46.630 --> 00:01:50.110
OK so let's enter 10 and 20.

24
00:01:50.110 --> 00:01:56.950
So you could see here 10 greater than 20 is faults 10 greater than or equal to 20 as faults 10 less

25
00:01:56.950 --> 00:02:01.410
than 20 is true and 10 less than or equal to 20 is also true.

26
00:02:01.780 --> 00:02:04.700
OK so now let's let's try some other ones.

27
00:02:04.700 --> 00:02:09.050
Couple of other test cases here let's try 20 and 20.

28
00:02:09.250 --> 00:02:15.520
In this case you can see that 20 is graded 20 is not greater than 20 20 is is greater than or equal

29
00:02:15.520 --> 00:02:20.050
to 20 20 is not less than 20 and 20 is less equal to 20.

30
00:02:20.050 --> 00:02:21.700
Just again just what I would expect.

31
00:02:21.700 --> 00:02:23.410
So real simple example.

32
00:02:23.520 --> 00:02:29.470
What I do now is I'll comment out those output statements that we just did here and I'll declare a couple

33
00:02:29.470 --> 00:02:34.810
of constants here and I'll uncomment this piece of code and I'll walk you through it.

34
00:02:34.810 --> 00:02:41.290
So in this case I'm declaring two constants lower and upper to be 10 and 20 and I'm asking the user

35
00:02:41.290 --> 00:02:43.760
to enter an integer that's greater than lower.

36
00:02:43.930 --> 00:02:49.300
So in this case I'm asking them to enter an integer that's greater than 10 and those is constant so

37
00:02:49.300 --> 00:02:52.390
you can modify them here and and play around with this program yourself.

38
00:02:52.540 --> 00:02:55.190
So in this case enter an integer that's greater than 10.

39
00:02:55.240 --> 00:03:01.090
I'm reading that integer into the one that I'm comparing to see if that number is greater than the lower

40
00:03:01.090 --> 00:03:04.150
limit which is 10 in this case that I'm doing the same thing.

41
00:03:04.210 --> 00:03:07.600
I'm saying enter an integer That's less than or equal to the upper limit.

42
00:03:07.630 --> 00:03:09.220
So let's run this.

43
00:03:09.520 --> 00:03:15.480
And first thing you'll see is says and I mean get rid of that.

44
00:03:19.440 --> 00:03:26.100
Let me read a statement at the beginning here and if we try that again here we go.

45
00:03:26.120 --> 00:03:27.750
So an inch or two that's greater than 10.

46
00:03:27.750 --> 00:03:30.870
So let's pick 12 and it says 12.

47
00:03:30.870 --> 00:03:32.910
Greater than 10 is true.

48
00:03:32.910 --> 00:03:34.130
That's what we expect.

49
00:03:34.200 --> 00:03:37.310
Now it says entrant integer That's less than or equal to 20.

50
00:03:37.330 --> 00:03:39.050
That's put in 12.

51
00:03:39.480 --> 00:03:40.790
And it says 12.

52
00:03:40.980 --> 00:03:42.790
Less than or equal to 20 is true.

53
00:03:43.640 --> 00:03:46.380
OK so let's run this one more time with the different test case.

54
00:03:46.620 --> 00:03:51.570
So enter an integer that's greater than 10 that's put in 8 this time.

55
00:03:51.840 --> 00:03:54.250
And it says a greater than 10 is false.

56
00:03:54.270 --> 00:03:56.710
Obviously I didn't do what I was told to do.

57
00:03:56.940 --> 00:04:03.630
And here and here an integer That's less than or equal to 20 that's put in 25 and we can say 25 is less

58
00:04:03.630 --> 00:04:07.240
than or equal to 20 is also false OK.

59
00:04:07.270 --> 00:04:11.230
You can see where we're going with these operators once we get to control flow statements you'll have

60
00:04:11.230 --> 00:04:15.870
all this knowledge under your belt and you'll really be able to read some really powerful programs that

61
00:04:15.870 --> 00:04:17.060
solve problems.
