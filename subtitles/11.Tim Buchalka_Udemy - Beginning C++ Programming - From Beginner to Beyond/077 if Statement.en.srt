1
00:00:05,890 --> 00:00:11,380
In this video we'll learn about the C plus plus if statement the statement is the most basic of the

2
00:00:11,380 --> 00:00:16,050
C plus plus selection statements and his syntax couldn't be any simpler.

3
00:00:16,060 --> 00:00:22,060
We start with the keyword and this is followed with the control expression in parentheses the control

4
00:00:22,060 --> 00:00:25,460
expression must evaluate to a boolean true false value.

5
00:00:27,760 --> 00:00:31,570
If the value of the expression is true then the statement is executed.

6
00:00:31,720 --> 00:00:33,560
Otherwise the statement is skipped.

7
00:00:34,740 --> 00:00:37,220
Note that the statement is indented.

8
00:00:37,280 --> 00:00:42,330
Indented our code in the main function but the station is a very important element of style that we

9
00:00:42,330 --> 00:00:47,880
need to start getting used to right away by indenting the statement it makes it easier for someone reading

10
00:00:47,880 --> 00:00:51,830
the code to see that the statement is part of the if statement.

11
00:00:51,870 --> 00:00:57,520
Remember indentation style is just for us human programmers to help us see the structure of the code.

12
00:00:57,570 --> 00:01:03,410
The compiler doesn't care where you place the statement so you can see how simple the statement is.

13
00:01:03,630 --> 00:01:06,540
But see conceptually what's going on in the if statement.

14
00:01:09,220 --> 00:01:10,850
Suppose we have this code.

15
00:01:11,020 --> 00:01:18,610
If Nahm is greater than 10 incremented by one the expression numb greater than 10 will be evaluated

16
00:01:18,610 --> 00:01:22,710
to True or false if it's true then none will be incremented.

17
00:01:22,840 --> 00:01:26,130
If it's false no increment will take place.

18
00:01:26,230 --> 00:01:30,030
The flowchart on the right shows visually what the flow of control looks like.

19
00:01:30,400 --> 00:01:32,590
Let's see some simple examples of if statements

20
00:01:35,520 --> 00:01:40,120
in the first statement were checking if selection is equal to the character A.

21
00:01:40,560 --> 00:01:43,760
If it is then we execute the output statement.

22
00:01:44,010 --> 00:01:49,700
If it is false we skip the output statement in the second example we're checking if number is greater

23
00:01:49,700 --> 00:01:55,350
than 10 if it is we execute the PUT statement in the last example.

24
00:01:55,350 --> 00:01:59,270
We're using the and logical operator in the control expression.

25
00:01:59,370 --> 00:02:05,630
In this case we check to see if health is less than 100 and player healed is true.

26
00:02:05,970 --> 00:02:10,520
If both these expressions are true then the entire control expression is true.

27
00:02:10,740 --> 00:02:13,070
And we set the player's health to 100.

28
00:02:13,200 --> 00:02:16,540
Otherwise we skip the statement.

29
00:02:16,650 --> 00:02:21,590
But if you want to execute more than one statement if the condition is true well that's were block statements

30
00:02:21,590 --> 00:02:27,200
come in a block statement is a sequence of statements inside a block which is made up of opening and

31
00:02:27,200 --> 00:02:28,860
closing curly brackets.

32
00:02:29,650 --> 00:02:31,300
Notice the code on the left.

33
00:02:31,300 --> 00:02:35,220
The two statements in the body of the if statement are inside curly braces.

34
00:02:35,680 --> 00:02:41,380
If numb is greater than 10 then the block statement is executed which means that the increment and the

35
00:02:41,380 --> 00:02:44,170
output statements are both executed.

36
00:02:44,170 --> 00:02:49,520
The diagram on the right shows a visual representation of the control flow let's talk a little more

37
00:02:49,520 --> 00:02:51,490
about blocks.

38
00:02:51,830 --> 00:02:53,960
We've actually already seen a block statement.

39
00:02:54,140 --> 00:02:59,390
Remember the main function we've been using in all our programs so far it has an open curly at the beginning

40
00:02:59,390 --> 00:03:01,030
and a close curly at the end.

41
00:03:01,040 --> 00:03:06,440
This is a block statement and we had sequences of statements in the block statement block statements

42
00:03:06,440 --> 00:03:08,250
introduce a new level of scope.

43
00:03:08,330 --> 00:03:11,540
We'll talk about scope as we go through examples in this course.

44
00:03:11,540 --> 00:03:16,880
But just like we declared variables in the main block we can declare variables in any block even in

45
00:03:16,880 --> 00:03:22,670
a block that's inside an if statement variables that we declare in a block are only visible to statements

46
00:03:22,670 --> 00:03:24,370
that are also in the same block.

47
00:03:24,650 --> 00:03:29,720
This lets us modularize our code so we have better control of who sees what which makes writing and

48
00:03:29,720 --> 00:03:31,300
debugging our code easier.

49
00:03:31,640 --> 00:03:34,990
Let's head over to the idea and we'll see some if statements in action.

50
00:03:36,180 --> 00:03:42,810
OK so I mean the code like Id I'm in the section 9 workspace in the if statement project.

51
00:03:42,810 --> 00:03:48,480
And what I want to do here is I want to create a simple program that will create four different if statements.

52
00:03:48,480 --> 00:03:49,870
Let me show you what we'll do.

53
00:03:50,000 --> 00:03:54,810
Let's say we've got a number line here and there's a minimum of 10 and the max is 100.

54
00:03:54,810 --> 00:04:01,440
Let's say here what I want to do is I want to ask to use an integer and I want to be able to check that

55
00:04:01,440 --> 00:04:04,470
the integer is greater than or equal to 10.

56
00:04:04,620 --> 00:04:10,170
So that will be one of the statements I want to make sure that the integer The entered is less than

57
00:04:11,100 --> 00:04:12,440
or equal to 100.

58
00:04:12,480 --> 00:04:13,830
That would be the second one.

59
00:04:13,980 --> 00:04:18,750
The third if statement I want to write is I want to be sure that that integer they enter is within that

60
00:04:18,750 --> 00:04:19,190
bounds.

61
00:04:19,190 --> 00:04:23,660
So between 10 and 100 including 10 and 100 that will be the third one.

62
00:04:23,790 --> 00:04:25,620
And then the fourth statement will right as well.

63
00:04:25,620 --> 00:04:27,330
Check that boundary condition.

64
00:04:27,330 --> 00:04:31,050
So we want to know whether it's actually equal to 10 or equal to 100.

65
00:04:31,050 --> 00:04:35,400
So those are the four statements we're right and we'll we'll talk a little bit about if statements as

66
00:04:35,400 --> 00:04:36,040
we go.

67
00:04:36,180 --> 00:04:42,060
So first thing I want to do is I want to create some variables I need an integer I'll just call it numb

68
00:04:42,600 --> 00:04:43,920
and all initialize it to zero.

69
00:04:43,920 --> 00:04:49,830
This is where I'm going to read the integer from the user into then I need to model those boundaries

70
00:04:49,830 --> 00:04:51,740
so I'll use constants for that.

71
00:04:51,810 --> 00:04:59,670
I'll just say min and max will set me into 10 and we'll set max to 100.

72
00:05:00,340 --> 00:05:03,190
OK so that represents those boundaries.

73
00:05:03,240 --> 00:05:14,310
So the first thing I'll do is I'll ask the user to enter a number between minimax

74
00:05:20,720 --> 00:05:21,890
OK.

75
00:05:22,210 --> 00:05:23,180
Simple as that.

76
00:05:23,440 --> 00:05:29,050
And let me put a little Pullan here so they can see what they're doing and then what we're do is we'll

77
00:05:29,050 --> 00:05:29,980
read that into.

78
00:05:29,990 --> 00:05:35,710
No that's the only input we're going to be able to get in this program just a simple integer we'll get

79
00:05:35,710 --> 00:05:38,350
it from the user and try a number between min and max.

80
00:05:38,350 --> 00:05:40,830
Let's test that make sure we didn't make any mistakes.

81
00:05:41,840 --> 00:05:44,110
Enter number between 10 and 100.

82
00:05:44,120 --> 00:05:45,110
Exactly.

83
00:05:45,470 --> 00:05:50,870
And I'm entering 10 I'm doing nothing right now with it and I need to get rid of that little extra space

84
00:05:50,870 --> 00:05:51,750
that I had there.

85
00:05:52,010 --> 00:05:55,760
OK so now let's write our first if statement will be number one here.

86
00:05:55,940 --> 00:06:02,540
So I'm simply going to say if the number that the user entered is greater than or equal to 10 which

87
00:06:02,540 --> 00:06:11,040
in this case is min then all I really want to say is as my output statement I'm going to say nothing

88
00:06:13,120 --> 00:06:16,980
else is greater than men.

89
00:06:20,420 --> 00:06:22,880
That's it.

90
00:06:22,880 --> 00:06:23,180
All right.

91
00:06:23,180 --> 00:06:26,030
So let's test that out.

92
00:06:26,140 --> 00:06:30,920
So when I am going to type something greater than 10 now I want to type in 20 that if statement should

93
00:06:30,920 --> 00:06:33,140
fire and I get 20 is greater than 10.

94
00:06:33,140 --> 00:06:33,890
Perfect.

95
00:06:33,890 --> 00:06:41,390
Now if I type something in that is not greater than 10 let's say five I should see no output which is

96
00:06:41,390 --> 00:06:45,200
exactly what happens because that statement will be skipped.

97
00:06:45,200 --> 00:06:50,790
Now suppose that I want to display something else I want to execute more than just that one statement.

98
00:06:50,810 --> 00:06:52,490
This is where you need a block.

99
00:06:52,580 --> 00:06:58,310
So I'll create a Cur-Lee here and I'll put a Cur-Lee down here below the if that establishes a block.

100
00:06:58,310 --> 00:07:02,680
Notice that I'm indenting I'm not writing on my code or flush on the left.

101
00:07:02,780 --> 00:07:06,110
If you indent it's much easier to see the structure of the code.

102
00:07:06,200 --> 00:07:10,910
And as you in debt further and further and you mess things one within the other the structure of the

103
00:07:10,910 --> 00:07:13,700
code really jumps out at you and it's very easy to follow.

104
00:07:14,030 --> 00:07:20,090
So in this case I want to do a statement right up here since we're going to write four if statements

105
00:07:20,090 --> 00:07:24,980
I'm going to say this to a slash and to give me a new line at the beginning and I'm just going to put

106
00:07:24,980 --> 00:07:33,860
some dashes and then must say if statement 1 Put some more dashes here and you'll see why I'm doing

107
00:07:33,860 --> 00:07:35,930
that in a little bit.

108
00:07:37,300 --> 00:07:38,130
OK.

109
00:07:38,510 --> 00:07:42,310
So if we run that now we should see both of those lines display.

110
00:07:42,350 --> 00:07:44,100
So I'll enter something greater than 10.

111
00:07:44,210 --> 00:07:49,910
I put in there 30 and those are both my lines my if statement one line as well as the 30 is greater

112
00:07:49,910 --> 00:07:50,540
than 10.

113
00:07:50,540 --> 00:07:55,460
So again really simple anytime you want to execute more than one line of code or more than one statement

114
00:07:55,760 --> 00:07:57,830
you need to wrap them up in a block.

115
00:07:57,830 --> 00:08:02,660
Now suppose that I also want to display how far away that is from men.

116
00:08:02,690 --> 00:08:05,810
And what's the difference between the number that I entered and men.

117
00:08:05,960 --> 00:08:07,410
Well I could just subtract right.

118
00:08:07,410 --> 00:08:08,320
It's pretty simple.

119
00:08:08,330 --> 00:08:10,890
So we could create an integer here and I'll just call it.

120
00:08:11,070 --> 00:08:16,360
Mean create a little space here.

121
00:08:16,820 --> 00:08:22,970
OK I'll call I have an integer and I just call it for the difference and I'll initialize that to the

122
00:08:22,970 --> 00:08:28,370
number the user typed in minus the mean right because I know it's greater than men so that's going to

123
00:08:28,370 --> 00:08:29,970
be positive.

124
00:08:30,200 --> 00:08:42,080
And then I'll just say see out the number you entered is and use diff here the difference amount and

125
00:08:42,080 --> 00:08:47,850
I know it's greater and greater than men.

126
00:08:49,610 --> 00:08:51,200
That's it.

127
00:08:51,200 --> 00:08:54,570
Now it's really important to understand a couple of things here.

128
00:08:54,590 --> 00:08:56,750
One is this variable.

129
00:08:56,750 --> 00:09:00,040
I'm declaring that variable diff inside the block.

130
00:09:00,050 --> 00:09:01,190
You can see the block right here.

131
00:09:01,190 --> 00:09:04,370
There's one Cur-Lee there's the other curly.

132
00:09:04,430 --> 00:09:10,730
So what that means is that that variable div is only available to the statements after I've declared

133
00:09:10,730 --> 00:09:14,960
it inside the block basically So it's only this block that's it.

134
00:09:14,960 --> 00:09:17,010
Nothing else can see that variable.

135
00:09:17,030 --> 00:09:21,650
This is a good thing if that gets a really scary value in there and it's really out of whack.

136
00:09:21,650 --> 00:09:25,620
Well then the only place it could have changed that is this block so I know exactly where to look.

137
00:09:25,820 --> 00:09:26,480
OK.

138
00:09:26,480 --> 00:09:35,140
So let me clear a little bit of that and what I'll do now is let's run this and see if this is correct.

139
00:09:35,270 --> 00:09:39,600
So I'm going to enter a number between 10 and 20 and 100 and say I want to enter 50.

140
00:09:39,620 --> 00:09:42,920
I know that that is greater than 10 and I know that it's 40 away from 10.

141
00:09:42,920 --> 00:09:44,490
So that's what I'm expecting.

142
00:09:44,780 --> 00:09:49,830
And there's my IF statement 150 is greater than 10 and 50 is 40 greater than 10.

143
00:09:50,000 --> 00:09:50,800
Perfect.

144
00:09:50,840 --> 00:09:56,060
If I again type something and like five I'll get no output which is perfect.

145
00:09:56,060 --> 00:09:57,640
That's exactly where I want to be.

146
00:09:57,650 --> 00:10:00,570
So that takes care of that first statement.

147
00:10:00,590 --> 00:10:01,130
Now that's right.

148
00:10:01,130 --> 00:10:05,990
The second IF statement this one we're going to check to see if the number is less than or equal to

149
00:10:05,990 --> 00:10:06,820
Max.

150
00:10:06,830 --> 00:10:12,440
Right so it's the same idea I'm just going to say if the number is less than or equal to the max That's

151
00:10:12,440 --> 00:10:13,860
the upper bound.

152
00:10:14,270 --> 00:10:18,170
Then I want to display this out statement me just copy and paste that

153
00:10:21,320 --> 00:10:24,590
and I'll just change this to a so my IF statement 2.

154
00:10:25,430 --> 00:10:34,400
And over here I want to say that my name is less than in this case.

155
00:10:34,410 --> 00:10:41,840
I should be less than or equal to that I should fix that appear because I know that it's greater than

156
00:10:42,680 --> 00:10:43,790
or equal to.

157
00:10:44,000 --> 00:10:45,920
Since that's what I'm doing in my condition

158
00:10:54,740 --> 00:10:57,370
fix that quick trigger that should do it.

159
00:10:57,600 --> 00:11:01,670
In this case it's less than or equal to max

160
00:11:06,580 --> 00:11:09,760
OK and that's the difference here as well.

161
00:11:09,760 --> 00:11:12,700
Now here if I say if I just do something like diff

162
00:11:15,520 --> 00:11:21,010
is equal to max minus numb which is the calculation I want to do.

163
00:11:21,010 --> 00:11:25,030
But when I compiled this you're going to get an error is going to say diff was not declared in this

164
00:11:25,030 --> 00:11:30,020
scope because this is gone now if was declared in this block that block is finished.

165
00:11:30,020 --> 00:11:31,810
The diff isn't even visible anymore.

166
00:11:31,810 --> 00:11:42,120
So I need to create another if diff So if I just say and if and I'll just initialize it to max minus.

167
00:11:42,770 --> 00:11:44,680
Similar to what I did above.

168
00:11:44,680 --> 00:11:50,050
This creates a new copy of that integer div that's only visible to this block here.

169
00:11:50,140 --> 00:11:55,720
Now sure I could have just created that diff way appear like I did with and it would be visible to everybody

170
00:11:55,720 --> 00:11:59,320
but it's wanted to show you how the scope rules work.

171
00:11:59,350 --> 00:12:09,930
OK so there's my def number to say see out the number you entered is gif amount.

172
00:12:10,120 --> 00:12:11,620
In this case less than

173
00:12:15,880 --> 00:12:16,510
max

174
00:12:20,670 --> 00:12:22,170
and I'll finish that off.

175
00:12:22,260 --> 00:12:22,550
OK.

176
00:12:22,560 --> 00:12:25,860
So let's run this testis out.

177
00:12:25,920 --> 00:12:26,150
All right.

178
00:12:26,160 --> 00:12:30,550
So let's type a number like 80.

179
00:12:30,550 --> 00:12:36,120
We we expect both those if statements to fire right because 80 is greater than 10 and it's also less

180
00:12:36,120 --> 00:12:37,950
than 100 less than or equal to 100.

181
00:12:38,100 --> 00:12:42,560
So there we go both if statements fire 80 is greater than or equal to 10.

182
00:12:42,580 --> 00:12:47,790
80 is 70 greater than 10 that are here we're saying 80 is less than or equal to 100 and it's 20 less

183
00:12:47,790 --> 00:12:48,400
than 100.

184
00:12:48,510 --> 00:12:50,520
So both those if statements fire.

185
00:12:50,520 --> 00:12:53,380
But let's test this with other numbers here.

186
00:12:53,400 --> 00:12:56,100
So let's say I type in 150.

187
00:12:56,430 --> 00:13:01,180
In this case only if statement 1 fires because 150 is greater than or equal to 10.

188
00:13:01,290 --> 00:13:04,460
But it's not less than or equal to 100.

189
00:13:04,650 --> 00:13:05,270
OK.

190
00:13:05,370 --> 00:13:13,180
Same thing if I type in let's say five on the if statement two fires now.

191
00:13:13,860 --> 00:13:15,900
OK so hopefully that makes sense.

192
00:13:15,900 --> 00:13:21,120
So now the third statement we want to write is the one that's right here it's going to check to make

193
00:13:21,120 --> 00:13:23,300
sure that is within the bounds.

194
00:13:23,400 --> 00:13:23,770
OK.

195
00:13:23,910 --> 00:13:31,050
So in this case what we'll say is we'll say if the number the user entered is greater than or equal

196
00:13:31,050 --> 00:13:39,750
to the men and the number the user entered is less than or equal to the max.

197
00:13:39,750 --> 00:13:45,570
Remember you've got to do this here with numb you've got to write that word and you can't just say less

198
00:13:45,570 --> 00:13:50,950
and we go to Max you've got to say numb Let's go to Max again I'll have my block statement here.

199
00:13:50,950 --> 00:13:57,690
Notice that when I type that beginning curly coat light finishes it off with the curly and let's copy

200
00:13:57,690 --> 00:14:04,110
this guy right here and we'll say that this is if statement 3.

201
00:14:04,620 --> 00:14:09,430
And in this case would just say something Vecsey out number

202
00:14:13,320 --> 00:14:15,910
is in range let's say.

203
00:14:17,010 --> 00:14:20,440
OK so we know that it's within that range.

204
00:14:21,140 --> 00:14:23,820
There's no difference here to take care of we could draw differences.

205
00:14:23,820 --> 00:14:25,140
But let's just do that.

206
00:14:25,140 --> 00:14:31,620
What's interesting here is that statement 3 will only execute when statements want to execute right

207
00:14:31,630 --> 00:14:34,300
because we're in range we're greater than 10 in less than 100.

208
00:14:34,320 --> 00:14:36,360
So let's write that down as well.

209
00:14:36,360 --> 00:14:37,100
We'll say see

210
00:14:40,590 --> 00:14:51,480
this means statements 1 and 2 must also be true or must also display in this case that just say display

211
00:14:55,290 --> 00:14:58,700
hopefully that makes sense because you can see what's going on here.

212
00:14:58,940 --> 00:15:06,140
If I entered a number that's in range somewhere in here then obviously this is going to be true and

213
00:15:06,140 --> 00:15:07,300
this is going to be true.

214
00:15:07,310 --> 00:15:14,360
So we'll have all three of those statements displaying a case that will run this and test it one number

215
00:15:14,810 --> 00:15:19,010
in the middle and put in 50 notice all three if statements fire.

216
00:15:19,010 --> 00:15:26,930
Which is exactly what we'd expect if we type in a number that's greater than 100 on the if statement

217
00:15:26,930 --> 00:15:27,970
one fires.

218
00:15:28,310 --> 00:15:33,710
And if we enter a number that's less than 10 only if statement 2 fires.

219
00:15:34,080 --> 00:15:38,830
OK so now the last one we'll do is watch a check to see if it's right on those boundary conditions.

220
00:15:38,870 --> 00:15:48,560
So we'll say if the number the user entered is equal to the men or the number the user entered is equal

221
00:15:48,560 --> 00:15:50,360
to the max.

222
00:15:50,360 --> 00:15:52,550
Notice how you have to have that or in there.

223
00:15:52,640 --> 00:15:55,360
And would not work because it's never going to be equal to both.

224
00:15:55,520 --> 00:16:01,370
So in this case we just care if it's equal to one or the other in which case we'll output statement

225
00:16:01,370 --> 00:16:01,850
for

226
00:16:07,370 --> 00:16:11,690
change at to for real quick and I'll leave this code available for you guys to play with afterward and

227
00:16:11,690 --> 00:16:13,100
mess around with all you like.

228
00:16:13,340 --> 00:16:21,900
And then what will say is see out Gnome is right on the boundary.

229
00:16:26,800 --> 00:16:31,600
And what's need about this one is that if this one fires in all four statements supposed to be fiery.

230
00:16:31,640 --> 00:16:32,690
So again I'll say

231
00:16:42,130 --> 00:16:44,880
that all for display.

232
00:16:44,910 --> 00:16:47,090
It will give this a quick test.

233
00:16:49,430 --> 00:16:52,450
OK so let's do one of the boundary conditions 10.

234
00:16:52,490 --> 00:16:52,930
There you go.

235
00:16:52,940 --> 00:16:59,150
All four if statements fire because 10 obviously were in the range were on the boundary were greater

236
00:16:59,150 --> 00:17:01,920
than one side and were less than the other so we're good here.

237
00:17:02,030 --> 00:17:09,380
And again if I just type a five on the second IF statement fires so you can see some of the logic.

238
00:17:09,390 --> 00:17:12,670
Now what's important to understand here let me just clear the screen real quick.

239
00:17:12,770 --> 00:17:15,890
What's important to understand here is a couple of things.

240
00:17:15,890 --> 00:17:18,410
One is these are independent if statements.

241
00:17:18,410 --> 00:17:20,000
There are no elses in here.

242
00:17:20,000 --> 00:17:22,100
We'll talk about Elsa's in the next video.

243
00:17:22,220 --> 00:17:27,890
So this statement will execute so that condition is checked if this condition is true.

244
00:17:27,950 --> 00:17:29,560
We execute this code.

245
00:17:29,630 --> 00:17:32,370
Then we come here and we check this condition.

246
00:17:32,420 --> 00:17:37,840
So we're basically checking the condition for all four of those if statements.

247
00:17:38,270 --> 00:17:38,730
OK.

248
00:17:38,840 --> 00:17:41,390
So hopefully that gives you some insight into if statements.

249
00:17:41,390 --> 00:17:42,820
They're pretty straightforward.

250
00:17:42,830 --> 00:17:48,050
Remember this condition we have in here could be anything we could use relational operators like we're

251
00:17:48,050 --> 00:17:49,070
doing here.

252
00:17:49,070 --> 00:17:52,740
We can use equality operators like we're doing down here.

253
00:17:52,880 --> 00:17:54,690
We're comparing nomine men.

254
00:17:54,800 --> 00:17:59,600
We could use logical operators like we doing right here and we can use all kinds of combinations of

255
00:17:59,600 --> 00:18:00,700
these things as well.

256
00:18:00,940 --> 00:18:01,380
OK.

257
00:18:01,460 --> 00:18:07,550
So that finishes up off this video in the next video what we'll do is we'll talk about the if else statement.
