WEBVTT
1
00:00:05.310 --> 00:00:12.230
As we step through our code in the debugger you see an identifier named this in the debugger pane.

2
00:00:12.270 --> 00:00:16.680
This is a reserved keyword that contains the address of the current object.

3
00:00:16.680 --> 00:00:21.420
So it's a pointer to the object that's currently being used by the class member methods.

4
00:00:21.420 --> 00:00:27.270
The this keyword can only be used within the scope of the class in many other object oriented programming

5
00:00:27.270 --> 00:00:28.060
languages.

6
00:00:28.170 --> 00:00:35.830
We use the word self instead of this but in C++ we use the keyword this all member access is done via

7
00:00:35.880 --> 00:00:37.410
this pointer.

8
00:00:37.510 --> 00:00:44.100
However C++ allows you to use member names directly and behind the scenes it's actually using this pointer.

9
00:00:44.110 --> 00:00:48.140
This can be used by the programmer and in many cases we must use it.

10
00:00:48.280 --> 00:00:51.530
We can use it to explicitly access data members and methods.

11
00:00:51.670 --> 00:00:55.500
We can also use it to determine if two objects are the same.

12
00:00:55.550 --> 00:01:00.340
We use this in the next section when we overload the assignment operator to determine if we're assigning

13
00:01:00.340 --> 00:01:02.110
to ourselves.

14
00:01:02.300 --> 00:01:07.850
Of course since this points to the current object if you dereference it you'll follow the pointer and

15
00:01:07.850 --> 00:01:09.930
work with the current object.

16
00:01:11.460 --> 00:01:15.960
Here's an example of one way to write a set balance method for an Account class.

17
00:01:15.960 --> 00:01:20.880
Notice that the name of the parameter is BHL and the code in the body of the method is balanced equals

18
00:01:20.970 --> 00:01:26.410
BHL which assigns the value of the parameter be able to the class data member balance.

19
00:01:26.530 --> 00:01:31.320
Well you don't have to write this aero balance but that's exactly what the compiler is doing for us

20
00:01:31.320 --> 00:01:32.370
behind the scenes.

21
00:01:34.050 --> 00:01:37.010
Now suppose that the name of the parameter was balance.

22
00:01:37.050 --> 00:01:42.360
Now in the method body the assignment statement balance equals balance would use the parameter balance

23
00:01:42.360 --> 00:01:46.320
for both of those identifiers instead of the data member balance.

24
00:01:46.320 --> 00:01:48.570
That's because with scope rules.

25
00:01:48.680 --> 00:01:51.580
Now this statement would not accomplish what we wanted to do.

26
00:01:51.720 --> 00:01:58.410
So in order to refer to the data member balance we need to explicitly use this arrow ballots.

27
00:01:58.980 --> 00:02:04.200
Finally suppose we have a compare balance method in the account class that compares the balance of one

28
00:02:04.200 --> 00:02:05.780
object with another.

29
00:02:05.880 --> 00:02:11.940
We could check to see if we're comparing the same objects by comparing this and the address of other.

30
00:02:12.120 --> 00:02:15.150
If they're the same then we're dealing with the same object.

31
00:02:15.480 --> 00:02:20.150
In this example it wouldn't make much difference in our code since we're simply comparing balances.

32
00:02:20.280 --> 00:02:26.280
But if our compare logic is involved or computationally expensive then a quick check to see if the objects

33
00:02:26.280 --> 00:02:28.400
are the same could help performance.

34
00:02:28.590 --> 00:02:32.610
We'll use the this pointer again in the operator overloading section of the course.
