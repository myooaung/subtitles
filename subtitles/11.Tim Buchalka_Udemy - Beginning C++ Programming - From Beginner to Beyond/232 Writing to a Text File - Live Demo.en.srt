1
00:00:05,580 --> 00:00:09,990
This video or write some code that will allow us to create some files and create some files a couple

2
00:00:09,990 --> 00:00:14,910
of different ways first will create a real simple find just write a string to it and then what we'll

3
00:00:14,910 --> 00:00:20,860
do is we'll read a couple of copy file utilities just like we did in the slides.

4
00:00:20,870 --> 00:00:27,500
OK so I mean the section 19 workspace in the right file project and I've got nothing going on here except

5
00:00:27,500 --> 00:00:31,350
these includes them including IO stream stream and string.

6
00:00:31,610 --> 00:00:32,450
Let's get started.

7
00:00:32,450 --> 00:00:39,170
First thing we need to do is create an O.F. stream object so we'll call it stood O F stream and we'll

8
00:00:39,170 --> 00:00:40,640
call it out file.

9
00:00:40,790 --> 00:00:47,030
It's it's going to be an output file and we'll initialize it to slash again I'm in code like.

10
00:00:47,030 --> 00:00:48,230
That's why I'm doing this.

11
00:00:48,230 --> 00:00:53,120
And I'll name the file output text.

12
00:00:53,700 --> 00:00:54,050
OK.

13
00:00:54,090 --> 00:00:57,300
Now we'll check to see that it was open correctly.

14
00:00:57,390 --> 00:01:03,600
So if not out file then what we're going to say is just get out of here write some error.

15
00:01:04,290 --> 00:01:14,970
So will provide an error saying error creating file because it is an output file it will return something

16
00:01:14,970 --> 00:01:22,180
other than zero you get rid of that extra quote right here and we'll return one.

17
00:01:23,100 --> 00:01:23,610
That's it.

18
00:01:23,610 --> 00:01:29,610
So if we get now to this line 13 with our file has been created in this case remember if the file does

19
00:01:29,610 --> 00:01:32,080
not exist it's going to be created.

20
00:01:32,100 --> 00:01:35,630
Right now it does not exist so it will be created if it does exist.

21
00:01:35,640 --> 00:01:36,690
It will be truncated.

22
00:01:36,720 --> 00:01:38,690
OK so we'll lose whatever was in there before.

23
00:01:38,850 --> 00:01:46,380
So let's create a string variable we'll just call it line and we'll ask the user we can call it the

24
00:01:46,680 --> 00:01:48,210
variable name anything we want.

25
00:01:48,470 --> 00:01:52,790
Unless the user to enter something to write to the file

26
00:01:55,920 --> 00:02:01,440
and we'll simply read it from We'll use getline to read it because we want to read more than just one

27
00:02:01,440 --> 00:02:01,730
word.

28
00:02:01,730 --> 00:02:09,710
So we'll say Get line from CNH into line.

29
00:02:09,880 --> 00:02:14,130
Remember again we're using string objects here we're not using C-style strings.

30
00:02:14,930 --> 00:02:15,340
That's it.

31
00:02:15,430 --> 00:02:24,650
So what do we do now we say file and we insert that line into that file and we'll give it a new line

32
00:02:24,650 --> 00:02:25,550
as well.

33
00:02:25,550 --> 00:02:29,940
Number and line will flush out the buffer and then we're done here we'll just close the file

34
00:02:32,670 --> 00:02:34,030
that's it pretty easy.

35
00:02:34,140 --> 00:02:36,690
Now if we run this let's do that

36
00:02:39,490 --> 00:02:47,660
into something direct to the file I'm going to say Hello there file I'll press enter programs done I'll

37
00:02:47,680 --> 00:02:48,910
exit this.

38
00:02:48,940 --> 00:02:53,740
Now there is nothing that shows up here by default some of the ids will show that file when it's created

39
00:02:54,310 --> 00:02:55,180
code like doesn't.

40
00:02:55,190 --> 00:03:01,570
So what you can do is you can select the project right click and say open containing folder that will

41
00:03:01,570 --> 00:03:08,010
open it up and explore or in Finder for on a Mac and I just drag that over here and you can see that's

42
00:03:08,050 --> 00:03:12,730
right here we just created the file name remember the mean drags down just a little bit file name was

43
00:03:12,790 --> 00:03:16,340
output DXi there's output that text here right here.

44
00:03:16,630 --> 00:03:18,580
And you can see the contents of it right over here.

45
00:03:18,580 --> 00:03:21,310
Hello there file OK.

46
00:03:21,320 --> 00:03:28,180
Now let me move this out of the way and let's run this again and if we run it again I'll just say my

47
00:03:28,180 --> 00:03:32,480
name is Frank and Precentor.

48
00:03:32,740 --> 00:03:35,610
And now if we look at the file again I'll drag this back over.

49
00:03:35,620 --> 00:03:40,940
You can see that what was there before was erased because we're opening the file and truncation mode

50
00:03:40,950 --> 00:03:42,890
so it gets rid of whatever was there.

51
00:03:43,120 --> 00:03:44,190
That's the default.

52
00:03:44,320 --> 00:03:49,180
Now if we want to add something to the file we can simply open it in a pen Moat's we can put up another

53
00:03:49,180 --> 00:04:00,430
flag here just say we'll say stood IO s of Penda mode or AP and we run this again now we say this should

54
00:04:00,940 --> 00:04:03,470
be another line.

55
00:04:03,700 --> 00:04:08,090
So we'll take a look at the file now and you can see my name is Frank.

56
00:04:08,140 --> 00:04:12,940
And now I put this should be another line as you can see that it's actually appending to the existing

57
00:04:12,940 --> 00:04:13,510
file.

58
00:04:13,540 --> 00:04:14,110
So that's it.

59
00:04:14,140 --> 00:04:18,720
That's pretty straightforward and really that's the basics of output to textfiles.

60
00:04:18,970 --> 00:04:23,530
We have the power of all those stream manipulators which really gives us a lot of power and to how we

61
00:04:23,530 --> 00:04:25,090
format the output files.

62
00:04:25,340 --> 00:04:29,640
Ok so what I want to do now is I want to switch to another project.

63
00:04:29,650 --> 00:04:31,180
It's going to be the copy file.

64
00:04:31,180 --> 00:04:35,210
Underscore one project so I'll switch to that and I'll be right back.

65
00:04:36,130 --> 00:04:41,400
OK so I'm in the section 19 workspace and I've opened up now the copy file underscore one project.

66
00:04:41,680 --> 00:04:47,080
And in this project what we've got is this poem we've got Shakespeare sign it again and we want to do

67
00:04:47,080 --> 00:04:49,200
is we just want to copy it to another file.

68
00:04:49,240 --> 00:04:53,260
So what we can do is I've already written the code and it's really really straightforward it's just

69
00:04:53,260 --> 00:04:54,730
like it was in the slides.

70
00:04:54,760 --> 00:04:59,920
What we can do is we can start here and you can see we've got our includes that we need and we've got

71
00:04:59,920 --> 00:05:05,770
an input file stream called infile which is my poem and then I've got an output file stream called out

72
00:05:05,800 --> 00:05:12,220
file which is my poem underscore out XTi that's the file we want to create but it's going to be a copy

73
00:05:12,220 --> 00:05:15,620
of the poem DXi file.

74
00:05:15,670 --> 00:05:20,290
So again we're basically following the recipe we're instantiating those objects we're making sure that

75
00:05:20,650 --> 00:05:26,140
our file streams are open and ready to read and write and then we've got our our logic and our logic

76
00:05:26,140 --> 00:05:28,270
is really on there just a couple of lines of code.

77
00:05:28,270 --> 00:05:32,040
We've got a line that we want to read file the file input into.

78
00:05:32,260 --> 00:05:38,830
And there's my loop I'm using getline to read a line from in file and when I get that line all I'm going

79
00:05:38,830 --> 00:05:40,300
to do is write it out file.

80
00:05:40,390 --> 00:05:41,260
That's it.

81
00:05:41,260 --> 00:05:45,700
At the end we're going to display a little message that says file copied and we're going to close both

82
00:05:45,700 --> 00:05:46,290
files.

83
00:05:46,480 --> 00:05:51,000
So if we run this it'll save file copy.

84
00:05:51,010 --> 00:05:51,610
That's it.

85
00:05:51,620 --> 00:05:58,480
You can see how quickly this runs and will open up that project the containing folder and we should

86
00:05:58,480 --> 00:06:01,850
see a poem underscore out there it is right here.

87
00:06:01,990 --> 00:06:07,960
That was just created one big and if I select it you can see that the poem is over here.

88
00:06:08,020 --> 00:06:12,220
This is the original poem and this is the copied poem so it's exactly the same.

89
00:06:12,370 --> 00:06:14,680
So it's really easy to copy one file to another.

90
00:06:14,680 --> 00:06:20,830
In this case we used formatted input and output because we're using getline and we're using the insertion

91
00:06:20,830 --> 00:06:23,500
operator with line to write it to the file.

92
00:06:23,500 --> 00:06:24,220
That's it.

93
00:06:24,220 --> 00:06:30,840
Now if we go over to copy file underscore to project you open that up.

94
00:06:31,420 --> 00:06:35,260
It's exactly the same thing the only difference here is that we're using get and put.

95
00:06:35,260 --> 00:06:40,630
So we're using an formatted input output and you could see that the code is exactly the same except

96
00:06:40,690 --> 00:06:45,670
the while loop and the variable declaration right there that's the only difference is we're doing it

97
00:06:45,700 --> 00:06:47,150
one character at a time.

98
00:06:47,170 --> 00:06:53,380
So while we get a character from a file we output that character to outfought that's it.

99
00:06:53,380 --> 00:06:55,300
So let's run this also like that.

100
00:06:55,330 --> 00:06:57,530
Make sure that that project is selected.

101
00:06:57,940 --> 00:07:06,640
Run this it's done and I'll open up that project in the taining folder and right here you'll see poem

102
00:07:06,640 --> 00:07:10,710
dot out and it's right over here you can see it right there.

103
00:07:12,740 --> 00:07:13,910
So that's it for this video.

104
00:07:13,910 --> 00:07:20,150
Here you see a few examples of creating files appending to files and copying files using unformatted

105
00:07:20,150 --> 00:07:21,110
and formatted.

106
00:07:21,890 --> 00:07:26,420
Next is a challenge and then the challenge what we're going to do is we're going to take Shakespeare's

107
00:07:26,420 --> 00:07:30,750
Romeo and Juliet and add line numbers to it and create a new file.

108
00:07:30,770 --> 00:07:31,560
I'll see you there.
