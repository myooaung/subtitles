WEBVTT
1
00:00:05.480 --> 00:00:12.310
In this video I'd like to go over the basics of using the code lights ideas to bugger all the ideas

2
00:00:12.310 --> 00:00:16.640
have some sort of debugger built in and they all work more or less the same.

3
00:00:16.660 --> 00:00:20.440
There are some differences between them but they all have points they all have watches and they all

4
00:00:20.440 --> 00:00:24.800
that you see are local variables which is really all we're interested in right now.

5
00:00:24.850 --> 00:00:29.470
So I'm in the section 12 workspace and I've got a project called debugger that's got some source code

6
00:00:29.470 --> 00:00:30.740
that I want to debug.

7
00:00:31.030 --> 00:00:33.130
So what do I do.

8
00:00:33.130 --> 00:00:37.440
Well the first thing you want to do is rather than build We're going to do debug.

9
00:00:37.440 --> 00:00:40.070
So we're going to press 5 but we're not going to do that quite yet.

10
00:00:40.090 --> 00:00:46.690
I want to set up this environment first because right now I'm on a single monitor system and it's much

11
00:00:46.690 --> 00:00:51.160
nicer to work obviously with a dual monitor system so you can you have your console in one area and

12
00:00:51.160 --> 00:00:52.370
the debugger on the other.

13
00:00:52.480 --> 00:00:57.610
But on a single monitor system you need to make a make some room here.

14
00:00:57.610 --> 00:01:01.470
So what I'm going to do is I'm going to grab this and just move it over here.

15
00:01:01.480 --> 00:01:03.420
It fills up half the screen.

16
00:01:04.560 --> 00:01:06.910
Move it over here so it fills up half the screen.

17
00:01:06.920 --> 00:01:12.430
Ok then when I debug I want the console window over here on the right but I don't really want it to

18
00:01:12.430 --> 00:01:13.470
take up half the screen.

19
00:01:13.480 --> 00:01:18.040
I don't need it to take up half this means I'm just going to have this guy over to about there and that

20
00:01:18.040 --> 00:01:23.550
should allow me to see all of the icons that we can use up top to control the debugger.

21
00:01:23.550 --> 00:01:27.400
And again this is just a personal preference you can do this whatever you like.

22
00:01:27.400 --> 00:01:28.730
That works for you.

23
00:01:28.780 --> 00:01:33.970
The next thing we need to do is we need to set a breakpoint you need to set a breakpoint for the debugger.

24
00:01:33.970 --> 00:01:35.630
Now I'm going to do that right in main.

25
00:01:35.740 --> 00:01:41.260
If you look right next to line 16 here not in this little gray gutter area right here where the arrow

26
00:01:41.260 --> 00:01:46.600
is but right to the left of that you can click right in there and you see that little red stop sign

27
00:01:46.600 --> 00:01:48.690
comes up that's a break point.

28
00:01:49.060 --> 00:01:53.500
What's going to happen is the debuggers is going to kick in and it's going to start executing your code

29
00:01:53.500 --> 00:01:56.370
then it's going to stop at that break point.

30
00:01:56.410 --> 00:02:01.300
From there you can go line by line you can go into functions you can look at watches you can do all

31
00:02:01.300 --> 00:02:03.050
kinds of stuff which is pretty cool.

32
00:02:03.160 --> 00:02:03.610
Right.

33
00:02:03.640 --> 00:02:05.130
So that's where we're at now.

34
00:02:05.140 --> 00:02:09.040
Now you also notice up here in perspective there's a debug way out.

35
00:02:09.040 --> 00:02:13.600
This is the layout that will automatically kick in when you start the debugger.

36
00:02:13.600 --> 00:02:18.490
So it may look different on your end and from then on what you're going to see on my end but it's totally

37
00:02:18.490 --> 00:02:19.640
customizable.

38
00:02:19.780 --> 00:02:23.830
You can do whatever you like close windows open windows and when you're done just get a perspective

39
00:02:24.130 --> 00:02:24.600
save.

40
00:02:24.610 --> 00:02:27.400
Currently out as de-bug lay out again.

41
00:02:27.400 --> 00:02:30.390
So next time you run it'll be in that perspective.

42
00:02:30.400 --> 00:02:32.210
All right so let's debug.

43
00:02:32.380 --> 00:02:38.500
We're going to come up to the debugger and start continue debug or you can press F5 make sure you've

44
00:02:38.500 --> 00:02:40.350
got a breakpoint set before you do this.

45
00:02:40.350 --> 00:02:42.730
Otherwise you're not going to see much.

46
00:02:42.760 --> 00:02:46.470
So we're going to go to the debugger and start it build and debug.

47
00:02:46.500 --> 00:02:49.240
Now go see the console know what I'm going to do with the console.

48
00:02:49.230 --> 00:02:52.210
Just move it over to the right so it fills up the rest of that space.

49
00:02:52.210 --> 00:02:53.390
There you go.

50
00:02:53.410 --> 00:02:56.760
So all the output I'm going to see over here on the right.

51
00:02:57.460 --> 00:03:01.660
You'll notice down here that I've got an output view and I've got a debugger view.

52
00:03:01.990 --> 00:03:03.740
I really don't care about this output.

53
00:03:03.790 --> 00:03:07.060
I just want to look at my debugger view so you can close this site if you like.

54
00:03:07.060 --> 00:03:12.360
You can just click that X right there and I've got only the debugger view.

55
00:03:12.550 --> 00:03:15.190
Now in the debugger view there's a lot of stuff in here.

56
00:03:15.190 --> 00:03:20.440
All we're really interested in at this level right now are your local variables and any watches you

57
00:03:20.440 --> 00:03:20.890
might want.

58
00:03:20.890 --> 00:03:24.070
And I'll talk about watches in a second.

59
00:03:24.150 --> 00:03:24.500
Cool.

60
00:03:24.550 --> 00:03:24.880
OK.

61
00:03:24.880 --> 00:03:28.460
So you can see here my local variables x and y.

62
00:03:28.600 --> 00:03:35.390
If you look at main you'll see I you'll see X and go see y x and y right here on line 22.

63
00:03:35.620 --> 00:03:39.940
You also see that little break point right there the red is a little green arrow and there I'm not sure

64
00:03:39.940 --> 00:03:43.450
if you'll be able to see it on the video but you will be able to see it in a minute when I start walking

65
00:03:43.450 --> 00:03:44.470
through the code.

66
00:03:44.720 --> 00:03:48.810
Basically that's the line that's about to execute.

67
00:03:48.940 --> 00:03:54.930
You'll notice right now x and J have garbage in the mess because line 16 hasn't executed yet.

68
00:03:55.570 --> 00:03:56.070
OK.

69
00:03:56.170 --> 00:03:59.020
So the debug icons appear.

70
00:03:59.020 --> 00:04:00.980
You can see them you can show the current line.

71
00:04:01.030 --> 00:04:04.330
You can step in which is what we're going to use to go into a function.

72
00:04:04.780 --> 00:04:06.930
Or you could just go to the next line.

73
00:04:07.030 --> 00:04:08.180
Don't worry about step out.

74
00:04:08.180 --> 00:04:12.190
These are the two main ones we're going to step in next.

75
00:04:12.280 --> 00:04:18.060
And if you want to stop your debugging session you can press that little stop button right here.

76
00:04:18.790 --> 00:04:19.060
OK.

77
00:04:19.060 --> 00:04:20.690
So let's do this.

78
00:04:20.720 --> 00:04:24.770
And again how you you may want to close your out your workspace view here.

79
00:04:24.790 --> 00:04:26.610
If you don't have a space on your monitor.

80
00:04:26.710 --> 00:04:28.860
But I've got plenty of space here.

81
00:04:29.140 --> 00:04:32.690
So let's start let's click on this button right here next.

82
00:04:32.710 --> 00:04:39.250
And you've got there is your debugger you can also put next you can press F 10 whatever it is on a Mac.

83
00:04:39.250 --> 00:04:43.360
I'm not sure but you can toggle breakpoints you've got a lot of different options here but I'm going

84
00:04:43.360 --> 00:04:47.420
to use these icons for now because it's easier to see what I'm doing.

85
00:04:47.440 --> 00:04:49.360
All right so we're here on line 16.

86
00:04:49.360 --> 00:04:52.340
Let's press that button right here next.

87
00:04:52.540 --> 00:04:56.160
Now when I do that you'll notice that little green arrow will go to the next line.

88
00:04:56.200 --> 00:04:57.730
That means that this line executes.

89
00:04:57.730 --> 00:05:00.660
And we should see down here change to five.

90
00:05:00.790 --> 00:05:01.300
OK.

91
00:05:01.350 --> 00:05:02.860
So I want to do that.

92
00:05:03.460 --> 00:05:08.000
See the green arrow is now on line 17 That's the instruction that looks next.

93
00:05:08.050 --> 00:05:10.580
And also notice that I is now five.

94
00:05:10.930 --> 00:05:11.570
OK.

95
00:05:11.830 --> 00:05:16.540
Sometimes you have to refresh this view down here especially when you're working with pointers if you

96
00:05:16.540 --> 00:05:22.410
need to do that you just click that little button right here and it refreshes that view.

97
00:05:23.080 --> 00:05:29.470
OK so now we're in this code while I is greater than zero we know I is five right.

98
00:05:29.470 --> 00:05:31.080
Sometimes it's pretty handy.

99
00:05:31.120 --> 00:05:39.890
You can just kind of select I right there and press control and you can see eyes five it pops up in

100
00:05:39.890 --> 00:05:42.050
this little tooltip right here.

101
00:05:42.170 --> 00:05:46.580
Right now if I look at x x is garbage because I haven't gotten to that line yet so that can be pretty

102
00:05:46.580 --> 00:05:50.530
handy sometimes but most of that information you'll be able to see here.

103
00:05:50.530 --> 00:05:50.880
OK.

104
00:05:50.930 --> 00:05:53.800
So that's my locals supposed I want to do a watch.

105
00:05:53.810 --> 00:06:01.610
I want to watch i greater than zero so I can come over here and I can select the plus sign and type

106
00:06:01.610 --> 00:06:06.330
the entire expression I greater than zero and press OK.

107
00:06:06.590 --> 00:06:07.670
You can see it's a boolean.

108
00:06:07.670 --> 00:06:10.630
And right now it's true because five is greater than zero.

109
00:06:10.760 --> 00:06:12.170
She could switch between these two.

110
00:06:12.170 --> 00:06:15.670
You can obviously pull this pain out and have it on a dual monitor system.

111
00:06:15.830 --> 00:06:18.240
But right now let's just keep going.

112
00:06:18.680 --> 00:06:25.790
So now i's five and we'll keep clicking on the next you can see I'm in the body of the loop now.

113
00:06:25.790 --> 00:06:30.800
Now we have an output statement so we 65 display out here on the console.

114
00:06:31.130 --> 00:06:33.330
And then you can see the five just display.

115
00:06:33.530 --> 00:06:34.450
Now we're going to detriment.

116
00:06:34.460 --> 00:06:34.930
I see.

117
00:06:34.940 --> 00:06:41.250
I should go down to four down here in my local variables for you and there it is four.

118
00:06:41.420 --> 00:06:43.370
And I'm just in the keep looping through here.

119
00:06:43.850 --> 00:06:47.260
All I'm doing is pressing next week to see my code executing.

120
00:06:47.300 --> 00:06:51.890
It's very similar to what I was doing with my pencil and marker on the screen.

121
00:06:51.890 --> 00:06:53.510
But here you can see it actually happening.

122
00:06:53.510 --> 00:06:54.580
Happening live.

123
00:06:54.830 --> 00:06:58.110
So at this point now becomes zero.

124
00:06:58.250 --> 00:07:01.530
The loop will fail and I'm out of it.

125
00:07:01.760 --> 00:07:03.770
Now I'm executing line 22.

126
00:07:03.890 --> 00:07:09.130
When I when I clicked Next those two variables x and y will be initialized right down here.

127
00:07:09.260 --> 00:07:13.680
So click next and you can see that there are 100 and 200.

128
00:07:13.700 --> 00:07:15.380
Exactly what I expected.

129
00:07:15.530 --> 00:07:20.570
Not execute lines 23 and 24 so we should display X and Y to the console.

130
00:07:20.810 --> 00:07:23.380
There's X there is y.

131
00:07:23.990 --> 00:07:25.450
Ok so far so good.

132
00:07:25.520 --> 00:07:29.960
Now I'm calling the swap function that we wrote in this section and I pass it in the address of X and

133
00:07:29.960 --> 00:07:31.150
the address of Y.

134
00:07:31.460 --> 00:07:35.190
If you just click next here and I'll just skip that and go right next to the next slide.

135
00:07:35.190 --> 00:07:38.630
Well actually it'll call the function but I want to go into that function.

136
00:07:38.690 --> 00:07:41.480
So you want to click this one right here called step in.

137
00:07:41.480 --> 00:07:47.570
So when I select that now I go into the functions I'm starting to execute that function you can see

138
00:07:47.570 --> 00:07:50.230
the green arrow right here on line 9.

139
00:07:50.570 --> 00:07:54.680
And you can see a and b will a and b are pointers and they've already been set.

140
00:07:54.680 --> 00:07:56.030
You could see them right here.

141
00:07:56.040 --> 00:08:01.760
There's a there's be those are the two addresses and you can see their type integer pointers.

142
00:08:01.850 --> 00:08:03.430
Temp is just a regular int.

143
00:08:03.650 --> 00:08:09.930
So if I expand day it tells me what is pointing to which is a 100 expand B.

144
00:08:09.950 --> 00:08:11.730
B is pointing to 200.

145
00:08:12.420 --> 00:08:16.860
OK so now let's walk through the swopped the first line says take what is pointing to.

146
00:08:16.940 --> 00:08:21.370
You know what he's pointing to right here 100 and assign it to temp.

147
00:08:21.500 --> 00:08:23.510
So right now temp has garbage.

148
00:08:23.600 --> 00:08:25.940
So let's do that we'll click next.

149
00:08:26.450 --> 00:08:29.110
And now you see temp has a 100 in it.

150
00:08:29.240 --> 00:08:34.660
Then we're taking what B is pointing to which is 200 and putting it into where it was pointing.

151
00:08:34.670 --> 00:08:37.330
So now I'll go next.

152
00:08:37.370 --> 00:08:39.290
You see right here you see how it didn't refresh.

153
00:08:39.290 --> 00:08:42.740
It doesn't do that with pointers sometimes that's when you have to click this little refreshed style

154
00:08:42.740 --> 00:08:47.110
right there and then just re expand them and you could see that it did do that now.

155
00:08:47.630 --> 00:08:54.740
We'll do the next and refresh one more time and you can see that they've been swapped which is pretty

156
00:08:54.740 --> 00:08:57.160
cool at this point I click next.

157
00:08:57.170 --> 00:08:58.850
This function is done.

158
00:08:58.850 --> 00:09:01.560
Notice that my local variables now are AB in temp.

159
00:09:01.580 --> 00:09:03.320
That's because I mean this function right here.

160
00:09:03.320 --> 00:09:05.390
Those are the local variables.

161
00:09:05.600 --> 00:09:07.540
My watch doesn't apply anymore.

162
00:09:07.640 --> 00:09:08.150
Right.

163
00:09:08.150 --> 00:09:09.420
It's in the main.

164
00:09:09.530 --> 00:09:12.000
So here I'll click Next again.

165
00:09:12.290 --> 00:09:14.160
Now I'm back in Maine.

166
00:09:14.180 --> 00:09:19.550
I'm right here on line 28 and I'm going to display X and Y again.

167
00:09:20.050 --> 00:09:23.090
There's x 200 there's y one hundred.

168
00:09:23.090 --> 00:09:25.660
And our program is done.

169
00:09:25.670 --> 00:09:26.170
OK.

170
00:09:26.330 --> 00:09:28.280
So there's a lot of options that you can do.

171
00:09:28.280 --> 00:09:30.490
You can learn to play with the debugger.

172
00:09:30.530 --> 00:09:37.460
There's really debuggers are awesome the best advice I could give you with a debugger is that they are

173
00:09:37.520 --> 00:09:42.090
they're called debuggers for a purpose because they really help you debug your code.

174
00:09:42.110 --> 00:09:48.080
I wouldn't suggest that you start using a debugger as so much of a learning aid at this moment.

175
00:09:48.080 --> 00:09:52.490
I think it's better just to do it with paper and pencil at the beginning because the debugger itself

176
00:09:52.490 --> 00:09:53.850
has a bit of a learning curve.

177
00:09:53.990 --> 00:09:59.030
So you're learning C++ and you're learning the ID and now you're learning a debugger all at the same

178
00:09:59.030 --> 00:10:03.680
time but in the context of what I just did here it's very very useful.

179
00:10:03.680 --> 00:10:08.790
Suppose you have a bug in your code and the bug was that you know it was greater than or equal to zero

180
00:10:08.810 --> 00:10:13.330
or you had a less than there and maybe you didn't see it when you're looking at your code.

181
00:10:13.430 --> 00:10:16.060
Well when you run it through the debugger bam you'll see the error.

182
00:10:16.070 --> 00:10:17.480
You can fix it right away.

183
00:10:18.290 --> 00:10:20.720
OK so feel free to use the debugger.

184
00:10:20.720 --> 00:10:24.850
Feel free to use the debugger in the challenge exercise for this section.

185
00:10:24.890 --> 00:10:26.230
It might come in handy.
