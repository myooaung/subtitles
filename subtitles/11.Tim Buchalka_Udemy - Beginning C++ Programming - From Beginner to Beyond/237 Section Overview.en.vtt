WEBVTT
1
00:00:05.500 --> 00:00:11.350
Welcome to the standard template library section of the course in this section of the Course will learn

2
00:00:11.350 --> 00:00:16.940
about the C++ standard template library or as T.L. for short.

3
00:00:16.940 --> 00:00:23.050
The FCO provides a rich set of containers iterators and algorithms that we can use with just about any

4
00:00:23.050 --> 00:00:24.960
type of data we wish.

5
00:00:25.060 --> 00:00:31.180
We've already worked with one of the SBL workhorses the vector First we'll see what the ACL is all about

6
00:00:31.390 --> 00:00:36.610
and then we'll learn a little bit about generic or metaprogramming which is what the ACL uses to allow

7
00:00:36.610 --> 00:00:40.610
us to use its components on just about any type of data.

8
00:00:40.780 --> 00:00:47.650
We'll see how C++ can use preprocessor macros function templates and class templates to achieve generic

9
00:00:47.650 --> 00:00:48.610
programming.

10
00:00:48.670 --> 00:00:53.150
We'll also learn what generic programming is and why it's so powerful.

11
00:00:53.250 --> 00:00:59.220
Then we'll look at the types of containers iterators and algorithms provided by the SBL and we'll look

12
00:00:59.220 --> 00:01:07.440
at each of the main containers such as Array vector deck list set map stacks queues and priority his

13
00:01:08.410 --> 00:01:12.850
Finally we'll learn about some of the commonly used algorithms in the SPL.

14
00:01:12.850 --> 00:01:18.340
The cool thing about the ACL is that once you learn how to use one container one iterator and one algorithm

15
00:01:18.580 --> 00:01:20.600
then the rest follows the same pattern.

16
00:01:20.860 --> 00:01:22.630
So they become easy to learn.

17
00:01:22.720 --> 00:01:27.460
There will also be several challenges in this section that will allow you to solve more problems using

18
00:01:27.460 --> 00:01:31.110
the ACL containers iterators algorithms.

19
00:01:31.120 --> 00:01:36.550
Most beginning See post post courses don't cover the ACL but I think it's important to cover it since

20
00:01:36.550 --> 00:01:39.790
it's used very often in C++ programming.

21
00:01:39.790 --> 00:01:40.170
Great.

22
00:01:40.170 --> 00:01:42.190
So let's see what the ACL is all about.
