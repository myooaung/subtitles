1
00:00:05,490 --> 00:00:10,080
In this video we'll go over C++ is arithmetic operators.

2
00:00:10,080 --> 00:00:16,350
These are exactly the ones you expect the plus symbol means addition the minus symbol means subtraction.

3
00:00:16,380 --> 00:00:18,510
The asterisk is multiplication.

4
00:00:18,510 --> 00:00:25,190
The forward slashes division and the percent symbol is the modulo operator or the remainder of division.

5
00:00:25,260 --> 00:00:29,290
You may not be familiar with this operator but that's ok we'll cover toward the end of the video.

6
00:00:29,460 --> 00:00:33,540
The plus minus multiplication and division operators are overloaded.

7
00:00:33,540 --> 00:00:35,960
What that means is they'll work with different types.

8
00:00:36,090 --> 00:00:41,950
So we can add two integers we can add two floats we can add two doubles by simply using the plus symbol.

9
00:00:42,030 --> 00:00:45,390
The same is true for subtraction multiplication division.

10
00:00:45,420 --> 00:00:48,050
The modular operator only works with integers.

11
00:00:48,060 --> 00:00:50,400
And again I'll show you an example of that a little bit.

12
00:00:50,400 --> 00:00:56,070
So let's try a few examples here and the code down here you can see that I've declared two integers.

13
00:00:56,070 --> 00:01:00,590
Number one and number two and I've assigned 200 and 100 to them respectively.

14
00:01:00,840 --> 00:01:04,890
Again these are integers you could do this with doubles or floats or anything you'd like but I'm just

15
00:01:04,890 --> 00:01:06,310
going to use integers here.

16
00:01:06,450 --> 00:01:10,890
You can see that this first line is first output statement right here.

17
00:01:11,130 --> 00:01:15,080
Let's walk through that really quickly so we're clear as to what's going on here.

18
00:01:15,090 --> 00:01:17,340
Remember we've got expressions here.

19
00:01:17,340 --> 00:01:18,900
So number one is an expression.

20
00:01:18,900 --> 00:01:25,340
Number two is an expression and that addition expression is evaluated to the sum of number one and number

21
00:01:25,350 --> 00:01:25,810
two.

22
00:01:25,950 --> 00:01:31,120
So in this case number one is two hundred So this will be replaced with 200.

23
00:01:31,350 --> 00:01:31,620
No.

24
00:01:31,630 --> 00:01:33,160
2 is 100.

25
00:01:33,190 --> 00:01:38,200
And this will be replaced with 100 and then number one post them 2 will be added together.

26
00:01:38,200 --> 00:01:42,550
That's why the plus is there and this will give us 300 OK.

27
00:01:42,630 --> 00:01:47,980
Now these guys are inside quotes so their string literals and all will be printed out as is.

28
00:01:48,270 --> 00:01:51,290
So what we expect here is 200 plus 100 equals 300.

29
00:01:51,290 --> 00:01:55,960
And of course we've got the new line or the line at the end.

30
00:01:55,980 --> 00:01:56,330
All right.

31
00:01:56,340 --> 00:02:00,490
So let's run this and see if we get what we expect.

32
00:02:01,450 --> 00:02:03,130
And exactly that's what happens.

33
00:02:03,130 --> 00:02:05,260
200 plus 100 equals 300.

34
00:02:05,460 --> 00:02:14,500
OK so let me comment that line out and what we could do is rather than do that calculation right in

35
00:02:14,500 --> 00:02:19,590
line right here we could simply do the calculation and assign it to a variable.

36
00:02:19,660 --> 00:02:28,040
In this case let's create a variable called result and will initialize it to zero and all we're saying

37
00:02:28,040 --> 00:02:34,580
is add no one and number two that will give us 300 and assign that result to the result variable.

38
00:02:34,850 --> 00:02:37,980
OK so we're going to add 200 plus 100.

39
00:02:38,000 --> 00:02:44,330
That gives us 300 and we're storing 300 into result and then rather than do the calculation here as

40
00:02:44,330 --> 00:02:46,350
we did we're just going to print that result.

41
00:02:46,700 --> 00:02:47,630
It's as easy as that.

42
00:02:47,780 --> 00:02:53,710
So when I run this now I should have the same exact output 200 plus 100 equals 300.

43
00:02:54,290 --> 00:02:59,780
So now let me comment out some of these and we'll walk through these real quick and I'll do it right

44
00:02:59,780 --> 00:03:01,450
up to their.

45
00:03:01,630 --> 00:03:04,150
So this next one here on line 29.

46
00:03:04,210 --> 00:03:07,470
I'm simply subtracting number one minus number two.

47
00:03:07,490 --> 00:03:11,130
Storing the difference in result and then I'm outputting result.

48
00:03:11,140 --> 00:03:17,910
So here we would expect 200 minus 100 we'd expect 100 on 9:32 that were multiplying the two.

49
00:03:18,160 --> 00:03:20,340
This is different from algebra.

50
00:03:20,350 --> 00:03:26,860
Did you have to have that multiplication symbol that asterisk you can't just say someone to or something

51
00:03:26,860 --> 00:03:31,390
like that you would do in algebra you just put the two things together you can't use a dot like you

52
00:03:31,390 --> 00:03:36,850
could in algebra as well it's got to be the multiplication operator which is the asterisk.

53
00:03:36,850 --> 00:03:41,650
So we're going to multiply number one and number two that it is 20000 which we store in result and we're

54
00:03:41,650 --> 00:03:42,900
displaying that.

55
00:03:43,090 --> 00:03:44,670
And then the third one would be.

56
00:03:44,830 --> 00:03:50,130
Result is number 1 divided by number two that's on my 35.

57
00:03:50,130 --> 00:03:54,820
And we're going to store that quotient in two result.

58
00:03:54,820 --> 00:03:57,760
There we would expect 200 divided by 100 gives us two.

59
00:03:57,760 --> 00:03:58,770
OK so let's run.

60
00:03:58,780 --> 00:04:02,710
We've got right here and see what our results are.

61
00:04:02,710 --> 00:04:11,350
So we've got 200 plus 100 like we did before 300 200 minus 100 is 100 200 times 100 is 20000 and 200

62
00:04:11,350 --> 00:04:12,870
divided by a hundred is two.

63
00:04:13,030 --> 00:04:13,240
OK.

64
00:04:13,240 --> 00:04:19,030
So this is exactly like you would expect is really really simple math works just like you expect it

65
00:04:19,030 --> 00:04:19,890
to.

66
00:04:19,960 --> 00:04:23,510
Now something you may not expect is this result right here on thirty.

67
00:04:23,520 --> 00:04:26,030
I'm going to uncomment this.

68
00:04:26,770 --> 00:04:32,580
And in this case what I'm doing is I'm dividing number two by Number one day remember.

69
00:04:32,590 --> 00:04:33,960
Number two is 100.

70
00:04:34,090 --> 00:04:35,800
And number one is 200.

71
00:04:35,800 --> 00:04:40,470
So what's happening here is I'm dividing 100 divided by 200.

72
00:04:40,510 --> 00:04:42,590
You would expect 0.5.

73
00:04:42,640 --> 00:04:43,910
That's not what you get.

74
00:04:44,020 --> 00:04:45,780
We're doing integer division.

75
00:04:45,790 --> 00:04:46,270
OK.

76
00:04:46,390 --> 00:04:51,520
So there are no digits after the decimal point we're working with whole numbers only.

77
00:04:51,520 --> 00:04:59,070
So in this case what happens is 100 gets divided by 200.

78
00:04:59,250 --> 00:05:03,110
And the result if this if these were doubles would be 0.5.

79
00:05:03,270 --> 00:05:06,480
But we're working with integers so this piece is just chopped right off.

80
00:05:06,600 --> 00:05:07,990
So we end up with a 0.

81
00:05:08,300 --> 00:05:08,820
OK.

82
00:05:08,910 --> 00:05:10,010
So let's run this

83
00:05:13,320 --> 00:05:16,490
and you can see here 100 divided by 200 is 0.

84
00:05:16,530 --> 00:05:21,000
You've got to be really careful when you're doing division with whole numbers or integers because this

85
00:05:21,000 --> 00:05:23,870
is the behavior if you need to 0.5.

86
00:05:23,870 --> 00:05:27,870
You want to be really really precise then you need to use doubles not integers.

87
00:05:27,870 --> 00:05:30,420
And I'll show you an example using doubles in the second.

88
00:05:30,960 --> 00:05:38,180
Now let's look at the modulo operator or the remainder of operator in this case right here.

89
00:05:38,520 --> 00:05:43,390
I'm saying number one mod number two again what's number one.

90
00:05:43,410 --> 00:05:44,390
It's 200.

91
00:05:44,520 --> 00:05:46,370
What's up to 100.

92
00:05:46,410 --> 00:05:48,660
So 200 divided by.

93
00:05:48,670 --> 00:05:50,190
Let me write that out real clear.

94
00:05:50,190 --> 00:05:52,000
So it's not confusing at all.

95
00:05:52,020 --> 00:05:53,490
So we're going to say 200

96
00:05:55,920 --> 00:05:59,250
divided by 100.

97
00:05:59,250 --> 00:06:03,170
The result of this is to wear the remainder of 0.

98
00:06:03,480 --> 00:06:05,830
That's the modulo operator.

99
00:06:05,910 --> 00:06:10,050
It's only interested in the remainder so in this case it'll print out a zero.

100
00:06:10,380 --> 00:06:12,790
The next line I'll uncomment that out in a second.

101
00:06:12,790 --> 00:06:17,020
With the next slide we're going to say right here number one.

102
00:06:17,040 --> 00:06:23,060
We clear that draw that line a little nicer than here we're saying number one mod number two.

103
00:06:23,160 --> 00:06:26,420
So we're saying 10 maade 3.

104
00:06:26,430 --> 00:06:28,080
Remember this only works with integers.

105
00:06:28,260 --> 00:06:32,810
So the result here of the division will be three with a remainder of 1.

106
00:06:32,850 --> 00:06:35,640
Number three times three is nine and you get the 1 remainder.

107
00:06:35,640 --> 00:06:37,890
That's the result of the modulo operator.

108
00:06:37,920 --> 00:06:39,740
It's a pretty handy operator.

109
00:06:39,810 --> 00:06:43,610
So let me clear this and I'll uncomment these few lines of code right here.

110
00:06:45,170 --> 00:06:46,180
And we'll run this

111
00:06:49,990 --> 00:06:51,620
and let's take a look at the result.

112
00:06:51,730 --> 00:06:55,270
So here we go 200 maade 100 is zero right.

113
00:06:55,270 --> 00:06:58,420
That's the remainder because we get to with the remainder of zero.

114
00:06:58,490 --> 00:07:04,810
And in this case 10 MMOG 3 is one because we get to three with the remainder of 1 when we divide by

115
00:07:04,810 --> 00:07:05,640
3.

116
00:07:05,650 --> 00:07:08,290
This can be a really really handy operator to use.

117
00:07:08,410 --> 00:07:13,010
And in the challenge exercise you're going to have to use a tool to solve the problem.

118
00:07:13,030 --> 00:07:18,430
Couple more things just like you can with up with any programming language and doing any kind of math

119
00:07:18,460 --> 00:07:22,770
we can add and divide and subtract and we can do everything in line.

120
00:07:22,780 --> 00:07:28,480
It's important to understand that the precedence or the order in which this stuff happens is the same

121
00:07:28,480 --> 00:07:35,840
precedence you probably learned in grade school here in the U.S. we learned Pember the US that was the

122
00:07:35,840 --> 00:07:41,450
acronym we use which meant parentheses first then exponents then multiplication and division and then

123
00:07:41,450 --> 00:07:43,100
addition and subtraction.

124
00:07:43,100 --> 00:07:47,510
You may have learned something else if you're from a different country but that's what we learned here.

125
00:07:47,510 --> 00:07:53,120
So what this means is that multiplication and division happened before dition and subtraction right.

126
00:07:53,120 --> 00:07:59,240
So in this case what's going to happen is no one is going to be multiplied by 10 and then we're going

127
00:07:59,240 --> 00:08:01,370
to add them to that result.

128
00:08:01,730 --> 00:08:02,540
Right.

129
00:08:02,540 --> 00:08:09,320
If you want something else if you want to add the 10 and the number two first then you need to use parentheses

130
00:08:09,890 --> 00:08:12,020
around there like that.

131
00:08:12,020 --> 00:08:13,100
It's as simple as that.

132
00:08:13,130 --> 00:08:16,610
And it's again it's something that we're all used to by now.

133
00:08:16,610 --> 00:08:23,300
Let me clear this and then I'll do this last example with the division comment.

134
00:08:23,300 --> 00:08:25,380
These two lines out.

135
00:08:26,480 --> 00:08:31,220
So in this case I'm outputting 5 divided by 10.

136
00:08:31,220 --> 00:08:37,790
Remember this is using integer division so 5 divided by 10 is zero not 0.5.

137
00:08:37,910 --> 00:08:44,060
In this case five point zero divided by ten point zero is zero point five because we're using doubles

138
00:08:44,060 --> 00:08:49,940
here in a couple of videos from now we're going to do a video where we're mixing types will be multiplying

139
00:08:49,940 --> 00:08:53,800
and dividing integers and doubles all together on the same expression.

140
00:08:53,870 --> 00:09:00,470
In that case we can use cast's to tell the compiler hey you know what I really want this to be a double

141
00:09:00,470 --> 00:09:03,400
instead of an integer even though it looks like an integer there.

142
00:09:03,410 --> 00:09:10,320
So we'll get to that in a minute and let me run this thing one more time and you could see the last

143
00:09:10,320 --> 00:09:13,030
two results right down here.

144
00:09:13,050 --> 00:09:20,220
Five divided by 10 is zero and five point zero divided by ten point zero is 0.5.

145
00:09:20,230 --> 00:09:23,080
OK so now let's solve a real problem.

146
00:09:23,080 --> 00:09:26,210
Let's convert euros to us dollars.

147
00:09:26,410 --> 00:09:32,340
And I've created a project in the section 8 workspace called euros.

148
00:09:32,350 --> 00:09:36,610
This project that I worked on right here is called arithmetic operators so you can refer to that if

149
00:09:36,610 --> 00:09:41,420
you like but I've created a project called euros and that's when we'll get to next.

150
00:09:41,920 --> 00:09:46,820
OK so I've opened up the main C-p file in the Euros project.

151
00:09:46,900 --> 00:09:51,620
Right now there's really not much in here I'm just printing a newline at the end to separate that little

152
00:09:51,640 --> 00:09:54,310
time message that is displayed at the end.

153
00:09:54,490 --> 00:09:56,220
And there's no real code here.

154
00:09:56,220 --> 00:09:57,650
We're going to write the code from scratch.

155
00:09:57,790 --> 00:10:02,890
So we want to do is we want to convert euros to us dollar so obviously we need some sort of conversion

156
00:10:02,890 --> 00:10:03,790
factor.

157
00:10:04,030 --> 00:10:10,760
I just went on Google now and I saw that you have 1.1 nine dollars per euro.

158
00:10:10,900 --> 00:10:17,090
OK so one euro is 1.1 nine dollars so we need to use that value somewhere.

159
00:10:17,090 --> 00:10:21,380
Now that's going to be a constant So let's define that is a constant we can do it right here.

160
00:10:21,460 --> 00:10:27,220
We could say Konst we want it to be a double right because it's not an inchers 1.1 9 and we'll give

161
00:10:27,220 --> 00:10:38,730
it a name we'll call it US dollars per euro currency you are able will initialize that to 1.1 9.

162
00:10:38,860 --> 00:10:40,500
And don't forget the semi-colon.

163
00:10:40,660 --> 00:10:45,750
So now we've declared that constant US dollars per euro to be 1.1 9.

164
00:10:45,820 --> 00:10:49,300
It's not going to change even accidentally.

165
00:10:49,300 --> 00:10:50,480
Now what do we need to do.

166
00:10:50,560 --> 00:11:00,700
What we need to output a message to the user will say seek out will say welcome to the EU are two USD

167
00:11:00,700 --> 00:11:08,670
converter or something like that and we'll put it in line at the end.

168
00:11:08,740 --> 00:11:12,320
We need to ask the user to enter the value in euros right.

169
00:11:12,320 --> 00:11:13,210
And that's the whole idea.

170
00:11:13,210 --> 00:11:17,800
So seek out will say enter the value

171
00:11:21,190 --> 00:11:26,470
in euros and we'll do something like that.

172
00:11:26,590 --> 00:11:31,540
We won't put a new line there because we want to use or to type something and right next to it.

173
00:11:32,170 --> 00:11:33,050
What do we do next.

174
00:11:33,070 --> 00:11:39,370
Well we need to do a few things we need remember most of these programs are input processing and then

175
00:11:39,430 --> 00:11:45,550
output we need input we need to read in from in the number of euros that they want to convert.

176
00:11:45,580 --> 00:11:46,010
Right.

177
00:11:46,030 --> 00:11:51,870
So we need to have something like in into euros.

178
00:11:52,510 --> 00:11:56,030
So we need to define that variable right here.

179
00:11:56,290 --> 00:11:56,440
Right.

180
00:11:56,500 --> 00:11:57,860
So let's do that right in here.

181
00:11:57,880 --> 00:12:05,950
We'll say double we'll call it euros that's a good name and we'll initialize it to zero point zero.

182
00:12:05,980 --> 00:12:10,150
That way we know we've got to zero value in there.

183
00:12:10,300 --> 00:12:12,250
We know we're going to convert this to dollars right.

184
00:12:12,260 --> 00:12:15,100
So we may as well create our dollars variable as well.

185
00:12:15,100 --> 00:12:20,510
So we can say double and we can call it dollars.

186
00:12:21,310 --> 00:12:24,090
And again zero point zero.

187
00:12:25,840 --> 00:12:28,390
Perfect Now we're red in the Euros.

188
00:12:28,390 --> 00:12:31,510
We need to convert the Euros to dollars.

189
00:12:31,510 --> 00:12:32,250
How do we do that.

190
00:12:32,260 --> 00:12:34,490
We just use a real simple multiplication.

191
00:12:34,570 --> 00:12:44,200
We can say that the number of dollars is equal to again the number of euros times the constant we have

192
00:12:45,250 --> 00:12:51,490
dollars per euro and now all we need is that final output statement let me scroll up just a little bit

193
00:12:51,710 --> 00:12:57,970
and we'll say something like see out and we'll say the Euros whatever whatever they entered

194
00:13:00,880 --> 00:13:04,600
is equivalent to we'll actually say euros that will be nice.

195
00:13:04,600 --> 00:13:05,940
They can read it better.

196
00:13:06,010 --> 00:13:14,050
Is that enough to put another insertion operator here.

197
00:13:14,260 --> 00:13:19,290
Type in dollars whatever they whatever the conversion was and then we'll just type the string.

198
00:13:19,300 --> 00:13:25,180
So nice and readable that will put a new line at the end within line.

199
00:13:25,450 --> 00:13:27,690
And that should be it.

200
00:13:27,700 --> 00:13:30,140
Let's run this as if we have any errors.

201
00:13:30,160 --> 00:13:34,810
We'll test it to make sure we don't have any errors and we'll debug it if we do have any errors.

202
00:13:34,810 --> 00:13:35,080
All right.

203
00:13:35,080 --> 00:13:39,230
So I'm going to save in a minute press and trial at five to run.

204
00:13:39,240 --> 00:13:41,560
There is no compiler error so that's great.

205
00:13:41,560 --> 00:13:43,120
So enter the value in euros.

206
00:13:43,120 --> 00:13:45,250
Well let's type in one euro right.

207
00:13:45,250 --> 00:13:51,660
If we type in one euro we expect back 1.1 nine dollars that would be a real simple and good test case.

208
00:13:51,860 --> 00:13:57,330
One we get one euro is equivalent to 1.1 nine dollars.

209
00:13:57,400 --> 00:13:58,020
Good.

210
00:13:58,450 --> 00:13:59,440
Let's try another one.

211
00:14:02,260 --> 00:14:04,360
It's run.

212
00:14:04,360 --> 00:14:09,680
How about 120 three point five euros.

213
00:14:10,270 --> 00:14:13,000
We get back one forty six point nine six five dollars.

214
00:14:13,000 --> 00:14:18,130
Don't worry about the precision and the dollars and cents will we'll learn how to format output a little

215
00:14:18,130 --> 00:14:18,930
bit later.

216
00:14:19,000 --> 00:14:19,930
That's it.

217
00:14:19,930 --> 00:14:21,970
That's the program really really simple.

218
00:14:21,970 --> 00:14:25,610
You can see what we're doing here is where you were using the things that we've learned right.

219
00:14:25,630 --> 00:14:30,590
We're using RCN we're using our sea out we've got a constant defined right here.

220
00:14:30,610 --> 00:14:36,790
We've got some variables that we need here and we're initializing them to zero and we're doing our calculation

221
00:14:36,790 --> 00:14:40,980
here using one of the earth Medich operators the multiplication symbol.

222
00:14:41,020 --> 00:14:45,060
I encourage you to write one of these programs on your own right.

223
00:14:45,340 --> 00:14:50,590
I don't know a something to something converter Fahrenheit to Celsius kilometers to Miles yards two

224
00:14:50,590 --> 00:14:52,630
inches meters to centimeters.

225
00:14:52,660 --> 00:14:52,900
Right.

226
00:14:52,900 --> 00:14:55,580
One of these programs just like that that will give you a good practice.
