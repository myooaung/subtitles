1
00:00:05,420 --> 00:00:09,560
In this video we'll go over some examples of reading text files.

2
00:00:09,850 --> 00:00:13,270
So I'm in the section 19 workspace and I'm in the read file.

3
00:00:13,270 --> 00:00:15,090
Underscore one project.

4
00:00:15,490 --> 00:00:16,840
And right now I've got nothing in here.

5
00:00:16,840 --> 00:00:21,910
The only thing I've done is I've included IO stream and I've included extreme we obviously need to include

6
00:00:21,940 --> 00:00:23,820
lifestream to work with files.

7
00:00:24,190 --> 00:00:28,720
That's all I've got here is my project you can see it's open and the file that I'm going to read is

8
00:00:28,720 --> 00:00:29,640
not there yet.

9
00:00:29,680 --> 00:00:31,610
I wanted to show you how to create it first.

10
00:00:31,600 --> 00:00:36,070
And we want to do is let's write the code to open the file then it will obviously fail because the file

11
00:00:36,070 --> 00:00:37,120
is not there.

12
00:00:37,270 --> 00:00:39,200
And then we'll put the file in there and will read it.

13
00:00:39,330 --> 00:00:39,630
OK.

14
00:00:39,640 --> 00:00:46,030
So first thing we need to do is we need to create an input file stream and we'll just call it in file

15
00:00:46,030 --> 00:00:51,280
just like we've done in the slides and I'll initialize it on the next line up open it on the next line.

16
00:00:51,280 --> 00:00:58,030
That way you can see that kind of syntax so we'll say in file open and here we give it a file name.

17
00:00:58,030 --> 00:01:00,990
Now this is the part that's pretty operating system specific.

18
00:01:01,000 --> 00:01:05,220
It's specific if you're in Windows.

19
00:01:05,260 --> 00:01:07,680
You might be tempted to do this kind of thing.

20
00:01:07,880 --> 00:01:16,780
See colon backslash and then some directory and then some other directory may be followed by some test

21
00:01:16,960 --> 00:01:18,720
text or something like that right.

22
00:01:18,940 --> 00:01:22,320
That's the way that Windows filenames look.

23
00:01:22,330 --> 00:01:28,240
The problem with this is you remember that it's that character literal that starts with a slash that

24
00:01:28,240 --> 00:01:31,450
won't work because that right there becomes a character.

25
00:01:31,480 --> 00:01:35,620
So we want to do if you do it this way you want to use two slashes don't forget.

26
00:01:35,620 --> 00:01:37,540
That's really really important.

27
00:01:37,660 --> 00:01:41,050
You would want to use two slashes everywhere if you're on Windows.

28
00:01:41,080 --> 00:01:47,620
Now if you're on Mac or Unix or some other operating system then you really don't do that you kind of

29
00:01:47,620 --> 00:01:53,180
just know slash forward slash forward slash directory names to the file.

30
00:01:53,230 --> 00:01:58,330
Now the good thing about this is even if you're on Windows you can still use this slash and behind the

31
00:01:58,330 --> 00:02:01,900
scenes it will be mapped to the proper ones so that's what I would recommend you do.

32
00:02:02,230 --> 00:02:07,630
I would not recommend that you do anything like Seacole energy Colin does that really really ties your

33
00:02:07,630 --> 00:02:09,420
code to your computer.

34
00:02:09,610 --> 00:02:17,500
So for example if you trying to open a file in C colon slash Frank slash test and then someone else

35
00:02:17,500 --> 00:02:21,190
tries to run this program unless they've got a frank directory.

36
00:02:21,190 --> 00:02:23,470
It's not going to work that file won't be there.

37
00:02:23,470 --> 00:02:26,610
So the best thing to do is just to do something like that.

38
00:02:26,740 --> 00:02:30,730
That way to look in the current directory no matter what computer system you're on.

39
00:02:30,850 --> 00:02:34,180
Now this is where the ID issues come in and I'll talk about that a little bit.

40
00:02:34,180 --> 00:02:39,300
For now let me just leave that just like that I want to open a file called test data.

41
00:02:39,520 --> 00:02:43,680
It doesn't exist yet here as you can see but worry about that a little bit.

42
00:02:43,720 --> 00:02:45,560
So we're trying to open that here.

43
00:02:45,640 --> 00:02:48,370
The next thing we need to do is we need to see if it was open.

44
00:02:48,370 --> 00:02:52,510
So let's say if not infile.

45
00:02:53,060 --> 00:03:00,660
And remember here we could say we could have said if not in file is open like that.

46
00:03:01,240 --> 00:03:02,400
Either one will work.

47
00:03:02,410 --> 00:03:05,320
This is the style I like and that's the one I've been using a long time.

48
00:03:05,320 --> 00:03:06,260
I'll keep you in it.

49
00:03:06,280 --> 00:03:10,430
So if not infile that means we could not open this.

50
00:03:10,470 --> 00:03:12,580
OK so in this case we're just going to say stood.

51
00:03:12,620 --> 00:03:13,550
See air.

52
00:03:13,710 --> 00:03:16,200
We're going to display an error message that says

53
00:03:19,840 --> 00:03:26,120
open a file it's just something real simple like that.

54
00:03:26,710 --> 00:03:27,910
What do we do here.

55
00:03:27,940 --> 00:03:28,740
I want to get out of here.

56
00:03:28,750 --> 00:03:29,890
I've got nothing else to do.

57
00:03:29,890 --> 00:03:31,680
I need this file to run my program.

58
00:03:31,780 --> 00:03:33,290
So I've got a couple of options.

59
00:03:33,370 --> 00:03:39,010
I can say return anything other than 0 0 means the program completed successfully I could return I want

60
00:03:39,010 --> 00:03:40,780
I could return a negative one.

61
00:03:40,780 --> 00:03:43,570
It really depends on what number you're looking for.

62
00:03:43,570 --> 00:03:45,340
That means I couldn't find a file.

63
00:03:45,490 --> 00:03:47,830
So we could I'm just going to say return one.

64
00:03:47,830 --> 00:03:50,090
Sometimes you'll see code that looks like this.

65
00:03:50,110 --> 00:03:54,950
It says Exit 1 or more properly stood exit.

66
00:03:55,450 --> 00:04:01,150
And in this case that calls a function named X it that closes up certain things and you know destroys

67
00:04:01,330 --> 00:04:02,580
static variables and things.

68
00:04:02,590 --> 00:04:05,510
But right now I'm just going to simply return one.

69
00:04:05,560 --> 00:04:08,680
If I were having some sort of problem opening the file.

70
00:04:08,710 --> 00:04:12,150
Now if I get beyond this piece right here I've got the file.

71
00:04:12,190 --> 00:04:16,010
It's good to go so I'm just going to say stood out.

72
00:04:16,690 --> 00:04:19,270
File is going to go.

73
00:04:19,270 --> 00:04:23,250
I'm ready to read from it.

74
00:04:23,710 --> 00:04:24,290
That's it.

75
00:04:24,400 --> 00:04:25,480
That's the program.

76
00:04:25,480 --> 00:04:26,830
This will fail when I run it.

77
00:04:26,830 --> 00:04:28,530
So let's try it.

78
00:04:28,570 --> 00:04:30,070
I'm going to build and run.

79
00:04:30,370 --> 00:04:32,230
And it says problem opening file.

80
00:04:32,290 --> 00:04:32,860
How come.

81
00:04:32,860 --> 00:04:34,390
Because the file is not there.

82
00:04:34,780 --> 00:04:36,940
OK so let's create the file.

83
00:04:36,940 --> 00:04:41,770
What I'll do is I'll come in here into my project and I'm going to click on the source directory.

84
00:04:41,770 --> 00:04:47,050
This is what I would recommend that you do whatever files you create create them in the same directory

85
00:04:47,050 --> 00:04:49,140
where your data files are.

86
00:04:49,420 --> 00:04:53,070
OK so in this case I'm going to put it right where my main CGP file is.

87
00:04:53,090 --> 00:04:57,220
When I right click on that source folder and I'm going to select Add new file.

88
00:04:57,250 --> 00:05:02,950
You could also do it from up here add new file and then I'm going to select any file and just give it

89
00:05:02,950 --> 00:05:06,100
a name and I'm going to give it this name right here test that TXI.

90
00:05:06,410 --> 00:05:09,800
So I'm going to say test dot the x t.

91
00:05:10,410 --> 00:05:12,050
I'm going to press enter.

92
00:05:12,320 --> 00:05:15,550
And now you can see that test the ex-chief file right here.

93
00:05:15,840 --> 00:05:19,230
And I can type some data into there and I will in a moment.

94
00:05:19,290 --> 00:05:20,500
So now I've got the file.

95
00:05:20,550 --> 00:05:23,610
So now let's run it still problem.

96
00:05:23,650 --> 00:05:24,300
Opening file.

97
00:05:24,300 --> 00:05:25,140
How come.

98
00:05:25,440 --> 00:05:27,660
Well this is where the ideas are all different.

99
00:05:27,660 --> 00:05:32,640
If I open this file up this project right here I'm on the right click on it and I'm going to say open

100
00:05:32,640 --> 00:05:37,320
the containing folder just so I can open it up and explore here and look at it and move it over from

101
00:05:37,320 --> 00:05:39,050
my other monitor.

102
00:05:39,540 --> 00:05:45,520
You can see that here's my C++ source file right here my C.P. file right there.

103
00:05:45,900 --> 00:05:49,490
And here is that test he actually followed just created right.

104
00:05:49,560 --> 00:05:51,770
But the executor is not here.

105
00:05:52,080 --> 00:05:54,290
The file is not here.

106
00:05:54,300 --> 00:05:56,200
It's in de-bug.

107
00:05:56,970 --> 00:05:58,550
It's right here.

108
00:05:58,590 --> 00:06:01,160
That's my ex he filed the application.

109
00:06:01,590 --> 00:06:07,480
So when it runs it's looking for that THC file in here and it's not finding it.

110
00:06:07,620 --> 00:06:13,900
That's why with code like we have to do something like this dot dot slash.

111
00:06:13,980 --> 00:06:19,370
So in other words I'm in Debug I need to go one level above one directory above me.

112
00:06:19,410 --> 00:06:24,180
Now if I try to run this file is good to go found.

113
00:06:24,480 --> 00:06:26,390
Usually this is what you want to do.

114
00:06:26,400 --> 00:06:28,640
Most ideas will work this way.

115
00:06:28,710 --> 00:06:35,160
Code like does not I believe code blocks and Visual Studio will all work if you just type in the file

116
00:06:35,160 --> 00:06:36,210
and just like that.

117
00:06:36,330 --> 00:06:40,920
And then what you do is when you create your file you create it where your CPV file is and it'll find

118
00:06:40,920 --> 00:06:45,590
it depending on what you're using you're just going to have to play around with it and to get it.

119
00:06:45,620 --> 00:06:47,140
It opens it means you're good to go.

120
00:06:47,250 --> 00:06:48,040
OK.

121
00:06:48,570 --> 00:06:52,240
Next code if you're using X code we'll talk about that in the video.

122
00:06:52,260 --> 00:06:58,190
The x is x code is a little bit little bit different Sea-Lion it'll just a regular test that.

123
00:06:58,190 --> 00:06:59,370
He will also work.

124
00:06:59,770 --> 00:07:00,070
OK.

125
00:07:00,090 --> 00:07:01,010
So that's it.

126
00:07:01,170 --> 00:07:04,080
So now we've got a file we're able to open it so that's perfect.

127
00:07:04,080 --> 00:07:04,880
That's the first step.

128
00:07:04,880 --> 00:07:05,340
Right.

129
00:07:05,340 --> 00:07:06,830
We can't open it we can't read it.

130
00:07:06,990 --> 00:07:10,170
So I'm going to get rid of this file is good to go statement.

131
00:07:10,170 --> 00:07:12,990
I really don't want to say that again because I've got it.

132
00:07:12,990 --> 00:07:16,830
Now what I want to do is I just want to read some information from that file.

133
00:07:16,860 --> 00:07:18,470
So let's put something in there.

134
00:07:18,540 --> 00:07:21,260
I'm going to go into t test he t.

135
00:07:21,410 --> 00:07:23,060
And it's just a text file.

136
00:07:23,050 --> 00:07:25,650
Someone to say hello.

137
00:07:26,640 --> 00:07:27,220
That's it.

138
00:07:27,220 --> 00:07:33,840
And I just saved it just now and I want to go back to main CPV and I'll create these variables up here

139
00:07:33,840 --> 00:07:35,620
just sort of they're all in one place.

140
00:07:35,700 --> 00:07:42,240
So let's create a stud string and let's just call it line and it's just any variable name will do.

141
00:07:42,420 --> 00:07:49,540
And down here what I want to do is remember when we had C and we would say C in into mine.

142
00:07:49,950 --> 00:07:55,350
Well it's the same thing except we're not reading from CN we're reading from infile.

143
00:07:55,440 --> 00:08:01,860
So what that will do is it'll read one string it is going remember of the way the extraction operator

144
00:08:01,860 --> 00:08:07,470
works he'll stop at a space or at end of file at a stop as soon as it sees some white space.

145
00:08:07,470 --> 00:08:12,240
Now we should have that string in line and we could just simply display it

146
00:08:16,320 --> 00:08:17,440
right to the consul.

147
00:08:17,520 --> 00:08:20,140
OK so let me go through this again before I run it.

148
00:08:20,200 --> 00:08:21,500
I'm opening the file.

149
00:08:21,510 --> 00:08:23,570
I'm testing to be sure that it's open.

150
00:08:23,680 --> 00:08:27,290
If it's not open I'm displaying problem opening file and I'm out of here.

151
00:08:27,420 --> 00:08:30,450
Otherwise I'm reading from the file into line.

152
00:08:30,450 --> 00:08:34,160
Line is a string and then I'm displaying whatever I just read.

153
00:08:34,320 --> 00:08:37,410
Remember the file contains hello So that's what I should see.

154
00:08:38,030 --> 00:08:38,320
Right.

155
00:08:38,360 --> 00:08:43,390
So let's give it a run there's Hello.

156
00:08:43,450 --> 00:08:46,470
So that came from that textfile.

157
00:08:46,580 --> 00:08:51,300
OK so now what we'll do is let's read a couple of other things in here so I'm going to have an aunt

158
00:08:52,050 --> 00:08:57,820
we'll call it numb and we'll have a double and let's just call it total just like we did in the slides.

159
00:08:58,050 --> 00:09:03,810
So now what we'll do is we'll modify that file here so that it's got a string in it did a double it's

160
00:09:03,810 --> 00:09:05,170
already got a string.

161
00:09:05,250 --> 00:09:08,430
So we'll give it an int and let's give it a double

162
00:09:11,360 --> 00:09:11,940
three.

163
00:09:12,200 --> 00:09:13,920
Two hundred point three forty five.

164
00:09:13,930 --> 00:09:16,480
So that's my father's got a string and then did a double.

165
00:09:16,630 --> 00:09:22,570
OK so now we'll come down here and what we'll do is we can read the string and we could do this in separate

166
00:09:22,570 --> 00:09:22,890
lines.

167
00:09:22,890 --> 00:09:25,990
We could just do it all in one I'm just going to do it all in one to save a little time.

168
00:09:25,990 --> 00:09:32,860
Someone to read the string that I'm going to read the integer and then I'm going to read the total and

169
00:09:32,860 --> 00:09:39,070
what I'm going to do here is I'm going to display the line I'll just display them in three lines.

170
00:09:39,070 --> 00:09:40,050
Copy that one.

171
00:09:40,180 --> 00:09:44,530
So here we're displaying the line here we're displaying the number.

172
00:09:44,830 --> 00:09:48,650
And then finally we'll be displaying the total down here.

173
00:09:50,940 --> 00:09:51,290
OK.

174
00:09:51,300 --> 00:09:56,900
So all we've done now is rather than just read Hello we're reading Hello the integer and the double.

175
00:09:57,150 --> 00:10:00,750
And when I run this I should get three pieces of information displaying.

176
00:10:00,960 --> 00:10:01,730
There they are.

177
00:10:01,800 --> 00:10:02,260
Hello.

178
00:10:02,280 --> 00:10:05,600
One hundred and two hundred point three four five.

179
00:10:05,610 --> 00:10:06,330
Pretty cool.

180
00:10:06,540 --> 00:10:09,410
And if we modify this file to look like this

181
00:10:13,620 --> 00:10:14,570
this will still work.

182
00:10:14,580 --> 00:10:18,930
Right because we're using that extraction operator and it's going to stop right here when it sees a

183
00:10:18,930 --> 00:10:22,090
white space in X and a stop right here when it sees a white space.

184
00:10:22,110 --> 00:10:25,870
So we were pretty flexible as far as the format of this file.

185
00:10:25,890 --> 00:10:32,920
So if I run this again you can see I still got those numbers right there OK so that takes care of that

186
00:10:32,920 --> 00:10:37,890
example and what I'll do next is we're going to read file to and will do exactly the same thing.

187
00:10:37,920 --> 00:10:41,170
It will create more data here and we'll read these insightful.

188
00:10:41,230 --> 00:10:43,190
OK so I'll be right back to do that.

189
00:10:43,300 --> 00:10:46,720
And actually before we go to the next example I forgot to close the file.

190
00:10:46,720 --> 00:10:50,900
So I wanted to be sure that you know that we need to close this file so I'm just going to do in file

191
00:10:51,130 --> 00:10:51,810
close.

192
00:10:51,890 --> 00:10:53,730
OK that's very very important.

193
00:10:53,740 --> 00:10:57,500
I got carried away with showing you how to read I forget the simple things to close the file.

194
00:10:57,580 --> 00:10:59,380
So make sure you close the file at the end.

195
00:11:00,550 --> 00:11:06,720
OK so I've switched over to Section 19 workspace read file underscore to project.

196
00:11:07,090 --> 00:11:07,330
OK.

197
00:11:07,330 --> 00:11:12,910
So what we want to do now is rather than just read those three data items we want to continuously read

198
00:11:12,910 --> 00:11:16,690
three data items and show you what I did to the test file.

199
00:11:16,690 --> 00:11:23,200
Now we've got Frank 100 and a double Larry an integer and a double M-O an integer and a double and so

200
00:11:23,200 --> 00:11:23,500
forth.

201
00:11:23,500 --> 00:11:28,340
So what I want to do is rather than just read the one line I want to read as many lines as there there.

202
00:11:28,600 --> 00:11:32,270
So we need to do this in some sort of loop right so we're going to use a while loop.

203
00:11:32,500 --> 00:11:35,920
And let me go back to my main and I'll show you what's happening here.

204
00:11:35,950 --> 00:11:41,770
Everything else is exactly the same I have included IO manip here just because I want to display those

205
00:11:41,770 --> 00:11:46,310
guys out at the end and a little bit of a formatted column that where you can see it a little better.

206
00:11:46,330 --> 00:11:49,820
So I'm just displaying line numb and total a little bit formatted.

207
00:11:49,900 --> 00:11:52,940
So here I've opened the file and I've checked that it's open.

208
00:11:53,050 --> 00:11:57,510
I'm assuming it's open right here otherwise I can't get here because the return one would kick me out.

209
00:11:57,520 --> 00:11:58,540
So what do I want to do.

210
00:11:58,540 --> 00:12:00,840
Well I want to have some sort of while loop here.

211
00:12:01,000 --> 00:12:13,540
I want to loop while not infile dot and of file e o f and that's a function that will return true if

212
00:12:13,540 --> 00:12:16,570
it's end of file or no not true if it's not the end of file.

213
00:12:16,570 --> 00:12:20,670
And what I want to do in there is basically display this.

214
00:12:20,670 --> 00:12:22,420
But first I want to read the input.

215
00:12:22,420 --> 00:12:23,060
Right.

216
00:12:23,080 --> 00:12:31,280
So again I'm reading from infile And first I'm reading the line actually should be name right but would

217
00:12:31,320 --> 00:12:37,520
just keep the name line the nom which is the INT and the total and that should do it.

218
00:12:37,690 --> 00:12:43,990
So again while we're not at the end of the file we're reading three items displaying them looping back

219
00:12:43,990 --> 00:12:46,660
up reading another three items displaying them and so forth.

220
00:12:46,670 --> 00:12:49,480
They were done this time I remember to close the file.

221
00:12:49,600 --> 00:12:52,690
OK so let's run this.

222
00:12:52,870 --> 00:12:53,650
And when it runs.

223
00:12:53,650 --> 00:12:58,540
That's the information you get you get Frank Larry Moe Curly and you get the integers and the doubles

224
00:12:58,540 --> 00:13:05,050
here nicely formatted because I'm using the set w manipulator so we can do that with end of file but

225
00:13:05,050 --> 00:13:09,760
we can also do that by putting that extra this statement right here read inside the while.

226
00:13:09,850 --> 00:13:15,700
So what we can do is we can refactor this a little bit and what we'll do is we'll put this statement

227
00:13:15,700 --> 00:13:20,740
right in there and just move it up here just like that.

228
00:13:21,450 --> 00:13:21,980
All right.

229
00:13:22,050 --> 00:13:26,530
So now this is a little different and we have to wrap your head around this a little bit.

230
00:13:26,730 --> 00:13:29,850
So there's my infile and I'm reading those three items.

231
00:13:29,850 --> 00:13:35,580
If I hit and defile if anything fails if I've got illegal data anything this will fail in the while

232
00:13:35,580 --> 00:13:39,240
loop will fail and I'm out of here if I'm able to read all those three items.

233
00:13:39,240 --> 00:13:43,470
Remember this is using formatted input because I'm using those extraction operators.

234
00:13:43,590 --> 00:13:46,420
So that's it you will read them and then I'll display them.

235
00:13:46,440 --> 00:13:50,210
So if I run this I should get exactly the same output as before.

236
00:13:50,340 --> 00:13:54,050
And there it is ok cool.

237
00:13:54,100 --> 00:13:58,630
So now in the next video this will get a little bit long so I cut it off here and the next video what

238
00:13:58,630 --> 00:14:00,790
would you lose we'll read one of Shakespeare's poems.

239
00:14:00,790 --> 00:14:02,880
Line by line display it out to the consul.
