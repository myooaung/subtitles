1
00:00:05,470 --> 00:00:06,350
This video.

2
00:00:06,360 --> 00:00:06,850
All right.

3
00:00:06,850 --> 00:00:08,950
Our very first program.

4
00:00:09,070 --> 00:00:13,360
So what we want to do is we want to create a project so again I'm in this section for workspace and

5
00:00:13,360 --> 00:00:20,230
I'm going to right click on there and say new new project I'm going to select my default template again

6
00:00:20,890 --> 00:00:23,670
and it's going to call this first program.

7
00:00:25,650 --> 00:00:29,990
And I select next and finish.

8
00:00:30,490 --> 00:00:35,080
Now I noticed that project 1 is the active project so I want to be sure that first program is the active

9
00:00:35,080 --> 00:00:40,240
project so I can just double click on it and I can open up that C++ file.

10
00:00:40,240 --> 00:00:41,110
That's it.

11
00:00:41,110 --> 00:00:43,980
So this is a source code for the first program.

12
00:00:43,990 --> 00:00:48,430
Now what I want to do is I want to be racists and I want you to really just type it in that way you

13
00:00:48,430 --> 00:00:52,660
get used to typing these things in at the beginning and that's probably the best way to do it.

14
00:00:52,670 --> 00:00:54,000
Just to follow along.

15
00:00:54,010 --> 00:00:55,620
So let me tell you what this program is about.

16
00:00:55,750 --> 00:01:01,900
This program is going to ask the user to enter their favorite number a number between 1 and 100 and

17
00:01:01,900 --> 00:01:03,370
then it's going to display.

18
00:01:03,850 --> 00:01:04,720
Wow that's amazing.

19
00:01:04,720 --> 00:01:06,070
That's my favorite number two.

20
00:01:06,340 --> 00:01:06,950
That's it.

21
00:01:07,150 --> 00:01:07,610
OK.

22
00:01:07,720 --> 00:01:13,960
So let's start first thing we need to do is we need to do pound include of IO stream.

23
00:01:13,960 --> 00:01:15,990
Now as I type I going to press.

24
00:01:16,060 --> 00:01:18,100
Oh then when I press S.

25
00:01:18,280 --> 00:01:22,930
You could see that the code completion is helping me out is trying to figure out what I want and it's

26
00:01:22,930 --> 00:01:26,500
giving me a guess as to what I want and I want those dreams.

27
00:01:26,500 --> 00:01:29,710
I'm just going to select it and close it.

28
00:01:29,710 --> 00:01:32,300
There is no semi-colon here on this statement.

29
00:01:32,470 --> 00:01:37,110
These pounde directives and will talk more about what these preprocessor directives are.

30
00:01:37,300 --> 00:01:38,520
In Section 5.

31
00:01:38,770 --> 00:01:40,700
But they don't take semi-colons at the end.

32
00:01:40,900 --> 00:01:44,170
So I'm going to press enter in that we want to create our main function.

33
00:01:44,170 --> 00:01:46,950
Remember the main function is the main entry point.

34
00:01:46,960 --> 00:01:49,510
This is the place where execution begins.

35
00:01:49,510 --> 00:01:57,100
So we're going to say int main left Purab right Pirenne and then we're going to put a left curly and

36
00:01:57,100 --> 00:02:00,840
the ID will terminate that left curly with the right Curly.

37
00:02:00,970 --> 00:02:02,730
We'll talk more about style as we go.

38
00:02:02,730 --> 00:02:06,580
But some programmers like to line up their braces like this.

39
00:02:06,580 --> 00:02:08,680
Others like to line them up like that.

40
00:02:08,740 --> 00:02:09,820
Right now it doesn't matter.

41
00:02:09,850 --> 00:02:11,430
Just line them up like this.

42
00:02:11,440 --> 00:02:11,790
All right.

43
00:02:11,800 --> 00:02:17,410
So what do we need to do we need to prompt the user to enter their favorite number.

44
00:02:17,410 --> 00:02:18,530
So how do I do that.

45
00:02:18,670 --> 00:02:20,610
I do that with a C statement.

46
00:02:20,770 --> 00:02:30,580
So I'm going to say s t d to Colon's then C out and we'll do the insertion operator which inserts something

47
00:02:30,580 --> 00:02:35,560
into that stream remember C out is typically tied to your consul your terminal.

48
00:02:35,650 --> 00:02:50,670
So the user can type things in and we're going to display enter your favorite number between let's say

49
00:02:50,810 --> 00:02:55,990
100 and I'll just put a colon there.

50
00:02:56,010 --> 00:03:00,030
Now you'll notice that you've got a quote mark and then a terminating quote mark.

51
00:03:00,030 --> 00:03:01,720
This is called a string.

52
00:03:01,740 --> 00:03:04,160
This is called the string literal.

53
00:03:04,170 --> 00:03:08,000
This will be displayed exactly as is.

54
00:03:08,010 --> 00:03:09,440
Now this is a statement.

55
00:03:09,480 --> 00:03:18,990
So all statements and the semi-colon remember main returns an integer and that integer is zero.

56
00:03:18,990 --> 00:03:23,930
If everything is good so I'm going to return 0.

57
00:03:24,270 --> 00:03:28,530
Right so if I run this program now it's all of it's going to say is enter your favorite number between

58
00:03:28,530 --> 00:03:32,280
1 to 100 that say it's not going to grab the number from anywhere.

59
00:03:32,280 --> 00:03:34,380
It's not going to display anything else.

60
00:03:34,380 --> 00:03:38,570
We need to somehow read what the user types in on the keyboard.

61
00:03:38,880 --> 00:03:45,420
So just like C out writes to the console C in reads from the console.

62
00:03:45,420 --> 00:03:52,500
So we're going to do here is we're going to say as t d c m and now we're going to use the extraction

63
00:03:52,500 --> 00:03:57,420
operator because we're able to extract information and it's the same as the insertion operator except

64
00:03:57,420 --> 00:03:59,160
going the other way.

65
00:03:59,310 --> 00:04:04,270
But now what we're saying is we want to grab whatever the user types in and we want to store it somewhere.

66
00:04:04,440 --> 00:04:06,120
Where do we store that.

67
00:04:06,180 --> 00:04:07,830
Well this is where variables come in.

68
00:04:07,890 --> 00:04:11,440
And what do a lot of talking about variables in section 6.

69
00:04:11,520 --> 00:04:15,780
I'll talk about how do you declare them how you initialize them the rules for naming them and so forth

70
00:04:16,080 --> 00:04:19,380
but declaring variables is very strict for so let's do that here.

71
00:04:19,670 --> 00:04:24,640
What we do is we tell the compiler remember the compiler is really dumb it's not guessing.

72
00:04:24,930 --> 00:04:27,170
It does exactly what we tell it to do.

73
00:04:27,510 --> 00:04:31,980
So what I'm going to do is I'm going to tell it that I want a variable name and that name is called

74
00:04:31,980 --> 00:04:32,760
favorite number.

75
00:04:32,760 --> 00:04:35,380
That's where I want you to store what the user typed in.

76
00:04:35,730 --> 00:04:39,160
And you also have to tell it what kind of data that is.

77
00:04:39,180 --> 00:04:42,450
Is it a string is it some big huge structure.

78
00:04:42,460 --> 00:04:45,330
No in this case it's just a whole number and integer.

79
00:04:45,360 --> 00:04:54,090
So we're going to say int space favorite underscore number semi-colon.

80
00:04:54,270 --> 00:04:54,810
That's it.

81
00:04:54,840 --> 00:04:56,690
That's a variable declaration.

82
00:04:56,790 --> 00:05:04,080
You've just told the compiler that this variable name right here favorite number is an integer.

83
00:05:04,080 --> 00:05:09,790
Now I can read information into that so I can say as T.T. to Colon's.

84
00:05:09,990 --> 00:05:12,300
And again yesterday We'll explain later on.

85
00:05:12,300 --> 00:05:18,380
It's a namespace but we definitely need it here as TDC in into favorite number.

86
00:05:18,390 --> 00:05:23,820
Now again I'm going to type f a V and the code completion we'll try to figure out what I want.

87
00:05:23,820 --> 00:05:29,320
So it's going to use favorite number record Precentor semi-colon on the end.

88
00:05:29,970 --> 00:05:33,660
So notice what we've done so far we've included IO stream.

89
00:05:33,660 --> 00:05:38,410
Why did we include IO stream because we need the input output libraries.

90
00:05:38,580 --> 00:05:40,770
We can't do IO without it.

91
00:05:40,770 --> 00:05:47,190
So we're including it now the compiler understands about input and output it understands C out and C

92
00:05:47,190 --> 00:05:51,420
in they are defined in here great.

93
00:05:51,450 --> 00:05:54,390
So I'm out putting end to your favorite number between 1 and 100.

94
00:05:54,390 --> 00:05:59,250
Now the user is going to type something at the keyboard and whatever they type we're going to store

95
00:05:59,250 --> 00:06:00,930
it into favorite number.

96
00:06:00,930 --> 00:06:12,270
This guy right there right now we just need to say see out and I can say something like amazing

97
00:06:15,120 --> 00:06:16,790
That's my favorite number two.

98
00:06:22,320 --> 00:06:25,570
Here we can do and line.

99
00:06:25,680 --> 00:06:28,990
So we flush the buffers and print out to the next line.

100
00:06:29,100 --> 00:06:29,790
That's it.

101
00:06:29,790 --> 00:06:31,850
So let's go through this again one more time.

102
00:06:31,920 --> 00:06:33,540
We've got a main function.

103
00:06:33,540 --> 00:06:34,590
This is the entry point.

104
00:06:34,590 --> 00:06:36,470
This is where execution begins.

105
00:06:36,750 --> 00:06:39,900
All C++ programs must have a main function.

106
00:06:40,100 --> 00:06:44,300
All C++ programs must only have exactly one main function.

107
00:06:44,730 --> 00:06:48,290
So when the program begins to execute this is where it starts.

108
00:06:48,390 --> 00:06:53,320
Here I've defined a variable called favorite number and it's an integer.

109
00:06:53,320 --> 00:06:55,050
It can only hold whole numbers.

110
00:06:55,290 --> 00:07:00,960
I'm outputting to the console and to your favorite number between 1 and 100 the user is not going to

111
00:07:01,140 --> 00:07:06,390
put something into the console number and I'm going to read it and store it into that location into

112
00:07:06,390 --> 00:07:11,910
that variable into that box then I'm going to say seek out.

113
00:07:11,970 --> 00:07:18,060
Amazing That's my favorite number two and I'm just going to print and line at the end of flesh out the

114
00:07:18,060 --> 00:07:21,480
buffers and move the cursor over to the next line.

115
00:07:21,480 --> 00:07:23,730
Finally I return 0.

116
00:07:23,730 --> 00:07:25,170
Everything's good.

117
00:07:25,170 --> 00:07:28,540
Now next thing to do is to build this program.

118
00:07:28,580 --> 00:07:30,150
Programs are not going to run by itself.

119
00:07:30,150 --> 00:07:31,280
We need to compile it.

120
00:07:31,290 --> 00:07:34,150
We need to link it and then we need to execute it.

121
00:07:34,260 --> 00:07:38,810
That whole process of compiling and linking is called building.

122
00:07:38,820 --> 00:07:45,540
Now you'll notice that when you right click on that source file right here made CPV you see it says

123
00:07:45,540 --> 00:07:47,490
compile.

124
00:07:48,000 --> 00:07:55,390
Now if I press that it's going to compile our program and you can see here zero errors zero warnings.

125
00:07:55,390 --> 00:07:58,930
We'll talk about what happens if you get errors and warnings a little bit later.

126
00:07:58,930 --> 00:08:04,170
Also notice that we're using the C++ 14 standard which is what we want to use.

127
00:08:04,660 --> 00:08:11,090
That's what we did when we set up that default template if you recall what we need to do next is to

128
00:08:11,090 --> 00:08:14,960
build the project by compiling and linking.

129
00:08:14,990 --> 00:08:22,070
That's going to create the eaks file on Windows or the executive files on the Linux and Mac and we'll

130
00:08:22,070 --> 00:08:23,100
do that in the next video.
