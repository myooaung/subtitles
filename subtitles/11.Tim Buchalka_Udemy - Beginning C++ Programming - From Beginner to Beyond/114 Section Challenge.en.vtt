WEBVTT
1
00:00:05.500 --> 00:00:06.090
All right.

2
00:00:06.100 --> 00:00:11.410
Congratulations for making it through this section we cover a lot of material in the section.

3
00:00:11.410 --> 00:00:15.810
Hopefully you have a pretty good grasp of C plus plus functions and how they work.

4
00:00:15.940 --> 00:00:17.650
Now you're ready for a challenge.

5
00:00:17.680 --> 00:00:19.210
This challenge won't be easy.

6
00:00:19.210 --> 00:00:24.100
Remember the challenge from Section 9 in that challenge we had a vector of integers and we wrote a menu

7
00:00:24.100 --> 00:00:29.140
driven system that allowed the user to display the numbers add a number to the list calculate the mean

8
00:00:29.140 --> 00:00:31.030
the smallest and the largest.

9
00:00:31.120 --> 00:00:35.410
That challenge was all about applying what you learned up to that point in the course and let you use

10
00:00:35.410 --> 00:00:38.540
control flow statements like loops and if statements.

11
00:00:38.830 --> 00:00:43.690
Well for this challenge we're going to solve that problem all over again except this time our solution

12
00:00:43.690 --> 00:00:46.540
will be modularized in terms of functions.

13
00:00:46.660 --> 00:00:50.460
You can start with your solution and refactor it so that it uses functions.

14
00:00:50.470 --> 00:00:55.670
Or you can start with my solution which is included in the challenge project in workspace 11.

15
00:00:55.720 --> 00:00:57.540
Or you could start this challenge from scratch.

16
00:00:57.540 --> 00:00:59.350
It's really up to you.

17
00:00:59.380 --> 00:01:02.020
Let me give you a few hints and tips for this challenge.

18
00:01:02.020 --> 00:01:03.960
Remember this is not an easy challenge.

19
00:01:03.970 --> 00:01:07.570
If you get frustrated take a break come back to it later.

20
00:01:07.570 --> 00:01:09.040
Here are a few hints.

21
00:01:09.040 --> 00:01:13.390
Create functions for each of the major functions in the program.

22
00:01:13.390 --> 00:01:15.220
Keep the functions small.

23
00:01:15.220 --> 00:01:17.740
Remember that boss worker analogy.

24
00:01:18.070 --> 00:01:23.380
Keep the vector declaration in the main function and pass the vector object to any function that requires

25
00:01:23.380 --> 00:01:24.540
it.

26
00:01:24.550 --> 00:01:29.770
Don't be tempted to move that vector object outside the main and make it a global variable that would

27
00:01:29.770 --> 00:01:33.340
really defeat the whole purpose of this exercise.

28
00:01:33.340 --> 00:01:36.160
Now you can start by defining a function that displays the menu.

29
00:01:36.160 --> 00:01:41.350
That's a real simple function call it display menu and all it is is a bunch of output statements and

30
00:01:41.350 --> 00:01:44.890
then you can call that function whenever you need to display the menu.

31
00:01:44.890 --> 00:01:50.400
You can then define a function that reads the selection from the user and returns it in upper case.

32
00:01:50.470 --> 00:01:55.900
That one we don't have to deal with checking lower case and upper case selections then create functions

33
00:01:55.900 --> 00:02:01.750
for each menu option and then finally create functions that display the list of numbers function that

34
00:02:01.750 --> 00:02:06.070
calculates the mean a function that looks for the smallest and the largest and so forth.

35
00:02:06.100 --> 00:02:09.410
Take it one function at a time and take your time.

36
00:02:09.580 --> 00:02:12.450
Again if you get frustrated take a break.

37
00:02:12.460 --> 00:02:15.790
Finally don't forget to use function prototypes.

38
00:02:15.790 --> 00:02:16.750
Use them.

39
00:02:16.750 --> 00:02:19.580
Let the compiler help you every step of the way.

40
00:02:19.630 --> 00:02:20.570
All right good luck.

41
00:02:20.650 --> 00:02:22.860
I know you can do it when you're finished.

42
00:02:22.860 --> 00:02:25.060
Compare it to my solution which is in the next video.
