WEBVTT
1
00:00:05.500 --> 00:00:08.740
Welcome back I hope you were able to solve the challenge.

2
00:00:08.740 --> 00:00:11.230
Let's go over together and I'll give you my solution to it.

3
00:00:11.260 --> 00:00:16.150
This is a pretty simple challenge but it's important that you get it because we have to be able to compile

4
00:00:16.150 --> 00:00:18.670
build link and run.

5
00:00:18.670 --> 00:00:21.940
Obviously we don't want any compiler errors we don't want any compiler warnings.

6
00:00:22.090 --> 00:00:23.140
So let's start here.

7
00:00:23.320 --> 00:00:28.000
What I've done is I've created a challenge solution project based on the template and here's my main

8
00:00:28.000 --> 00:00:29.970
CPPCC just a simple hello world.

9
00:00:30.070 --> 00:00:32.130
So this is the one I'm going to modify.

10
00:00:32.140 --> 00:00:32.460
All right.

11
00:00:32.470 --> 00:00:37.360
So let me change a little bit of this and to get rid of that statement right here and we'll totally

12
00:00:37.360 --> 00:00:38.200
start from scratch.

13
00:00:38.200 --> 00:00:41.590
I remember we need to include the IO stream library.

14
00:00:41.590 --> 00:00:43.810
This is how we do input and output.

15
00:00:43.900 --> 00:00:46.600
This is how we do our scenes in RC outs.

16
00:00:46.600 --> 00:00:53.170
So first thing I want to do is I want to prompt the user I want to say as TDD to call INS and see out

17
00:00:55.570 --> 00:01:00.730
and there is my insertion operator I'm just going to simply say enter your favorite number

18
00:01:04.160 --> 00:01:15.400
between let's say 100 and we'll put a call in there and a semi-colon on the end that will prompt the

19
00:01:15.400 --> 00:01:16.570
user.

20
00:01:16.810 --> 00:01:19.330
Now we want to be able to read that number from the user.

21
00:01:19.330 --> 00:01:22.910
Remember when we read something we need to store it somewhere.

22
00:01:22.960 --> 00:01:25.020
So we need to store that in a variable.

23
00:01:25.030 --> 00:01:28.240
In this case it's going to be a whole number so we're going to use an integer so I'm just going to say

24
00:01:28.330 --> 00:01:30.560
it.

25
00:01:30.610 --> 00:01:34.100
Favorite number just like we did with that first program we run.

26
00:01:34.600 --> 00:01:36.220
So that's my favorite number.

27
00:01:36.220 --> 00:01:36.820
Perfect.

28
00:01:36.820 --> 00:01:43.270
Now I can read into that variable so I can say as t d from CN.

29
00:01:43.690 --> 00:01:50.860
I want to extract some you see the operator going the other way into favorite number.

30
00:01:50.990 --> 00:01:56.120
OK so at this point I've prompted the user they've typed in a number I've read that number and I store

31
00:01:56.120 --> 00:02:00.020
that number in this favorite number variable right here.

32
00:02:00.020 --> 00:02:05.120
Last thing to do is to print out those two statements so for someone to say seek out

33
00:02:09.400 --> 00:02:11.760
and I'll say amazing.

34
00:02:13.410 --> 00:02:15.170
That's my favorite number two.

35
00:02:22.780 --> 00:02:28.210
And we'll print a new line here so we can go to the next line let's say and.

36
00:02:28.500 --> 00:02:33.960
Followed by a semi-colon and this is the only difference now between this program and the one that we

37
00:02:33.960 --> 00:02:35.070
were previously.

38
00:02:35.070 --> 00:02:39.480
We want to be able to display the number say no really whatever you entered was.

39
00:02:39.600 --> 00:02:40.850
Where is my favorite number.

40
00:02:40.860 --> 00:02:46.230
So in this case let's do that again with us today and we'll do again see out and we're going to right

41
00:02:46.230 --> 00:02:51.580
to that stream and I'll say no really

42
00:02:54.890 --> 00:02:59.760
and I put a comma here followed by a space because we want this to be spaced out nicely and I'll show

43
00:02:59.770 --> 00:03:02.460
you what the problems may be if you don't do that in a second.

44
00:03:02.810 --> 00:03:07.120
And at this point we're going to insert our favorite number right in here.

45
00:03:08.620 --> 00:03:13.090
And we'll do another insertion operator remember we can stream all these things together we do as many

46
00:03:13.090 --> 00:03:18.170
as we want and we'll say space is my favorite number

47
00:03:24.340 --> 00:03:31.290
and we'll finish it off with the new line.

48
00:03:32.260 --> 00:03:33.650
Let's try that.

49
00:03:33.670 --> 00:03:40.030
We're up to build run and build the next hit.

50
00:03:40.160 --> 00:03:45.640
We get a clean compile and it's running into your favorite number between 1 and 100 and say it's 10.

51
00:03:46.160 --> 00:03:46.670
Amazing.

52
00:03:46.670 --> 00:03:48.170
That's my favorite number too.

53
00:03:48.380 --> 00:03:49.110
No really.

54
00:03:49.160 --> 00:03:50.390
10 is my favorite number.

55
00:03:50.390 --> 00:03:50.750
Perfect.

56
00:03:50.750 --> 00:03:52.940
That's exactly what we wanted to solve.

57
00:03:52.940 --> 00:03:57.690
Now the reason that I put in these little spaces here is because I say I don't put that space in there

58
00:03:58.060 --> 00:04:03.200
and I don't put the space in here just like that.

59
00:04:03.230 --> 00:04:04.260
Now let's run this again.

60
00:04:04.260 --> 00:04:07.090
Now you can see that the output is not going to look right.

61
00:04:09.260 --> 00:04:13.280
So in this case say it's attempt in 25 and you could see amazing.

62
00:04:13.280 --> 00:04:14.840
That's my favorite number two that's fine.

63
00:04:14.840 --> 00:04:15.370
But now look.

64
00:04:15.380 --> 00:04:17.840
No really common 25.

65
00:04:17.840 --> 00:04:23.540
No space between 25 and the little eye for the lowercase I for is my favorite number so you can see

66
00:04:23.540 --> 00:04:25.690
that the output doesn't really look very nice.

67
00:04:25.700 --> 00:04:27.550
So all we're doing is just formatting it.

68
00:04:27.560 --> 00:04:32.180
We'll talk more about writing to streams and using manipulators so that we can really get more fine

69
00:04:32.180 --> 00:04:34.870
grained control of what we want this to look like.

70
00:04:34.910 --> 00:04:43.700
But for now we could just put spaces right in here and we'll try that again build and run.

71
00:04:43.870 --> 00:04:48.370
My favorite number is 10 though really 10 is my favorite number.

72
00:04:48.370 --> 00:04:48.850
Perfect.

73
00:04:48.850 --> 00:04:50.140
So that's it.

74
00:04:50.290 --> 00:04:53.300
And that's that's the solution to this challenge.

75
00:04:53.410 --> 00:04:58.210
So I said it's a pretty simple challenge but there's a lot of pieces here that come together in the

76
00:04:58.210 --> 00:05:03.040
next few sections We'll talk about the structure of the C++ program as well as variables.

77
00:05:03.040 --> 00:05:07.420
We'll talk a lot about variables how we declare them how we define them how we initialize them and how

78
00:05:07.420 --> 00:05:08.130
we use them.

79
00:05:08.140 --> 00:05:09.480
But you got a taste of it here.
