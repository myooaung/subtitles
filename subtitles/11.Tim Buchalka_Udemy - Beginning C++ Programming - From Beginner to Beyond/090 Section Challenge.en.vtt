WEBVTT
1
00:00:05.750 --> 00:00:08.720
OK so welcome to the section 9 challenge.

2
00:00:08.720 --> 00:00:12.780
This challenge puts together just about everything we've learned to solve a problem.

3
00:00:13.120 --> 00:00:19.010
I mean the section on workspace under the challenge project there is also a challenge solution project

4
00:00:19.040 --> 00:00:22.310
which includes my solution which I'll cover in the video right after this one.

5
00:00:22.310 --> 00:00:26.780
Let's talk about the challenge and then I'll give you a demo of the running solution.

6
00:00:26.780 --> 00:00:31.310
This challenge is about using a collection or a list of integers and allowing the user to select a few

7
00:00:31.310 --> 00:00:33.010
options from the menu.

8
00:00:33.020 --> 00:00:34.670
So here's the menu.

9
00:00:34.820 --> 00:00:38.060
PHM S L Q Are the selections.

10
00:00:38.060 --> 00:00:41.280
If the user presses P you print the elements of the list.

11
00:00:41.390 --> 00:00:46.910
If they press a you add a number to the list which you ask them for if they press and you display the

12
00:00:46.910 --> 00:00:48.830
mean of the numbers in the list.

13
00:00:48.830 --> 00:00:54.520
SNL the smallest number of the largest number and of course if they press Q You quit now.

14
00:00:54.530 --> 00:00:57.320
Anything else you should tell them invalid valid choice and so forth.

15
00:00:57.320 --> 00:00:57.600
OK.

16
00:00:57.620 --> 00:01:02.030
Just like we've been doing so let's go over a little bit more of the detail here.

17
00:01:02.060 --> 00:01:07.330
We're only accepting valid choices from the user both uppercase and lowercase selections should be allowed.

18
00:01:07.700 --> 00:01:12.620
And if they enter an illegal choice you should say unknown selection Please try again and then redisplay

19
00:01:12.620 --> 00:01:13.380
that menu.

20
00:01:13.580 --> 00:01:14.130
OK.

21
00:01:14.360 --> 00:01:19.700
If the user enters a upper or lower case P we display all the elements of the list.

22
00:01:19.700 --> 00:01:24.410
Remember this is a list of integers if the list is empty you should just display two square brackets

23
00:01:24.410 --> 00:01:26.170
and then say the list is empty.

24
00:01:26.420 --> 00:01:30.800
If the list is not empty then all the list elements all the integers in that list should be displayed

25
00:01:30.830 --> 00:01:33.490
inside square brackets separated by spaces.

26
00:01:33.590 --> 00:01:40.670
So in this case the list has the integers 1 2 3 4 and 5 and this is how I will display them if the user

27
00:01:40.670 --> 00:01:46.190
enters an upper case or lower case a then prompt them for a number to add to the list in which case

28
00:01:46.190 --> 00:01:50.490
you had it and then you display whatever number they entered added.

29
00:01:50.880 --> 00:01:51.140
OK.

30
00:01:51.140 --> 00:01:53.350
It's OK to have duplicate entries in the list.

31
00:01:53.630 --> 00:02:00.290
And the last couple are pretty straightforward if they press em up or lower case you basically iterate

32
00:02:00.290 --> 00:02:05.960
through that list and calculate the average of ballista the mean of the list and display that if the

33
00:02:05.960 --> 00:02:06.760
list is empty.

34
00:02:06.800 --> 00:02:13.100
Obviously you can't calculate the means you simply display unable to calculate the mean no data for

35
00:02:13.240 --> 00:02:13.750
s.

36
00:02:13.760 --> 00:02:19.370
Again upper or lower case you basically iterate through the list and find the smallest integer in that

37
00:02:19.370 --> 00:02:20.120
list.

38
00:02:20.120 --> 00:02:22.120
And that's what you display back to the user.

39
00:02:22.400 --> 00:02:27.370
So in this case if the list contains two four or five one will display the smallest number is 1.

40
00:02:27.620 --> 00:02:32.030
If the list is empty you should display unable to determine the smallest number because obviously the

41
00:02:32.030 --> 00:02:32.920
list is empty.

42
00:02:32.990 --> 00:02:36.880
L works the same way except you're looking for the largest element in the list.

43
00:02:37.040 --> 00:02:42.030
When they press Q You say goodbye and the program terminates.

44
00:02:42.130 --> 00:02:45.790
So that's the challenge before you begin.

45
00:02:45.790 --> 00:02:49.750
Write out the steps you need to take and decide what order you should do them in.

46
00:02:49.750 --> 00:02:54.000
Think about the loops you know you need loops you know you'll get if statements or switch statements.

47
00:02:54.010 --> 00:03:00.770
Think about what the best way to do this is start small build little pieces test as little pieces and

48
00:03:00.770 --> 00:03:02.740
then add as you go and test as you go.

49
00:03:02.750 --> 00:03:03.740
One big hint.

50
00:03:03.740 --> 00:03:05.860
Use a vector and don't use an array here.

51
00:03:05.900 --> 00:03:09.500
Use a vector should be pretty obvious because we want this to grow dynamically.

52
00:03:09.500 --> 00:03:14.870
Couple more things you could add functionality once you finished this basic challenge to search for

53
00:03:14.870 --> 00:03:18.330
a number in the list and if it's found how many times that are to occur.

54
00:03:18.560 --> 00:03:20.330
Maybe it's not in the list.

55
00:03:20.330 --> 00:03:24.530
The Vector class has a clear method that you can call to clear out the list.

56
00:03:24.530 --> 00:03:28.230
So maybe you want to know have an option for the use with delete everything in the list.

57
00:03:28.730 --> 00:03:34.850
Maybe you want to not allow duplicate entries so if I press to enter the number 5 let me enter it if

58
00:03:34.850 --> 00:03:39.560
I want to enter to Gangle say sorry it's already in the list so come up with your own ideas.

59
00:03:39.560 --> 00:03:41.680
It's really all about learning and practice.

60
00:03:41.690 --> 00:03:45.270
OK so let me give you a sample run of this.

61
00:03:45.510 --> 00:03:46.480
So here's the menu.

62
00:03:46.620 --> 00:03:53.080
As you can see this print and M is mean as is smallest is largest and Q is quick.

63
00:03:53.460 --> 00:03:54.870
Let's do the obvious one first.

64
00:03:54.870 --> 00:03:56.760
This press Q Were out.

65
00:03:56.760 --> 00:03:57.670
It says good bye.

66
00:03:57.690 --> 00:03:58.890
Our program is over.

67
00:03:58.890 --> 00:03:59.340
OK.

68
00:03:59.460 --> 00:04:03.260
So let me run it again and let's print the numbers in the list.

69
00:04:03.300 --> 00:04:09.900
Right now the list is empty so if I press P and again them it could be uppercase or lowercase you get

70
00:04:09.900 --> 00:04:12.990
the two square brackets and the list is empty.

71
00:04:12.990 --> 00:04:20.450
Now I want to add a number of press a Maceo I want to add the number 10 to the list 10 is added.

72
00:04:21.010 --> 00:04:25.140
And let's say I want to add another number so I'll press a again and I want to add negative 10 this

73
00:04:25.140 --> 00:04:26.660
time.

74
00:04:26.760 --> 00:04:29.880
So we've added negative 10 felony to print the numbers again.

75
00:04:29.940 --> 00:04:31.230
Crespi.

76
00:04:31.650 --> 00:04:33.720
And there's my list 10 and negative 10.

77
00:04:33.990 --> 00:04:35.460
I'll add a couple of more.

78
00:04:35.880 --> 00:04:43.370
So let's add a hundred and let's add five hundred and we'll display the list again with a P.

79
00:04:43.920 --> 00:04:48.060
And now we've got 10 negative 10 100 and 500 just like what we thought.

80
00:04:48.120 --> 00:04:51.050
Display the mean of the numbers were press M.

81
00:04:51.270 --> 00:04:53.230
In this case the mean is 150.

82
00:04:53.370 --> 00:04:58.590
Let's add another number let's add three and do the mean again.

83
00:04:59.070 --> 00:05:03.870
Notice it's 120 point six of the means should be a double not an integer.

84
00:05:03.870 --> 00:05:06.320
Finally we'll do them we print the list again.

85
00:05:06.360 --> 00:05:09.740
We've got 10 negative 10 100 503.

86
00:05:09.750 --> 00:05:12.780
The small This should be negative 10 and the largest should be 500.

87
00:05:12.780 --> 00:05:14.670
So let's test that out press.

88
00:05:14.670 --> 00:05:21.560
As for the smallest the smallest number is minus 10 and I'll press l for the largest the largest number

89
00:05:21.560 --> 00:05:23.730
is 500 exactly what we expect.

90
00:05:24.090 --> 00:05:31.170
And of course if the user types in one unknown selection Please try again or if they press Oh if they

91
00:05:31.170 --> 00:05:38.340
press anything that's not one of these letters we tell them unknown selection redisplay the menu and

92
00:05:38.400 --> 00:05:39.860
grab the input from them again.

93
00:05:40.880 --> 00:05:41.990
Prosecutor.

94
00:05:42.680 --> 00:05:43.090
That's it.

95
00:05:43.100 --> 00:05:44.170
That's the challenge.

96
00:05:44.240 --> 00:05:48.370
As I said this can be a tricky little challenge to do because you've got a lot of things going on.

97
00:05:48.370 --> 00:05:53.840
You've got loops and loops within loops and if statements and maybe switch statements and maybe do loops

98
00:05:53.840 --> 00:05:56.980
maybe while loops it's really up to you to decide how to solve it.

99
00:05:57.110 --> 00:05:58.440
Give it a shot.

100
00:05:58.550 --> 00:06:01.550
Don't be discouraged if it takes you more than a few attempts to get it.

101
00:06:01.550 --> 00:06:03.190
That's pretty normal.

102
00:06:03.200 --> 00:06:07.490
See you in the next video we'll go from my solution to it or at least one solution to it.

103
00:06:07.490 --> 00:06:08.380
All right good luck.
