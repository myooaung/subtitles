WEBVTT
1
00:00:05.490 --> 00:00:11.730
Welcome to the fourth and final challenge of Section 19 I mean the section 19 workspace in the challenge

2
00:00:11.760 --> 00:00:13.390
underscore for Project.

3
00:00:13.440 --> 00:00:18.620
We also have a challenge underscore for underscore solution project which contains a solution.

4
00:00:18.630 --> 00:00:20.830
This challenge is pretty easy but it's kind of fun.

5
00:00:21.030 --> 00:00:26.640
The idea is that we have the Romeo and Juliet play that we've used before and what we want to do is

6
00:00:26.640 --> 00:00:31.650
we want to read that in add line numbers to it and then write it out to a new file.

7
00:00:31.800 --> 00:00:35.580
So we're not going to modify the original file We're going to create a copy of the original file that

8
00:00:35.580 --> 00:00:37.120
has line numbers on it.

9
00:00:37.290 --> 00:00:42.660
OK so it's really nice really easy to do and it gets a little bit of experience writing more files.

10
00:00:42.780 --> 00:00:45.300
Let me run this for you.

11
00:00:45.690 --> 00:00:48.390
I'm going to run the solution and it shows no output.

12
00:00:48.390 --> 00:00:49.620
It just says copy complete.

13
00:00:49.620 --> 00:00:51.240
Because there's not much to show.

14
00:00:51.360 --> 00:00:56.100
But let's open up the inclosing folder here so we can see what's created.

15
00:00:56.100 --> 00:00:59.200
Now here you can see the original Romeo and Juliet.

16
00:00:59.250 --> 00:01:01.340
There's no line numbers here on the left.

17
00:01:01.530 --> 00:01:05.940
And this is the file that's created right here Romeo Juliet underscore out you can name that anything

18
00:01:05.940 --> 00:01:12.960
you like and you can see that that has line numbers now nice and formatted and you can see them all

19
00:01:12.960 --> 00:01:14.100
lining up right on the side.

20
00:01:14.100 --> 00:01:17.490
There are a lot of line numbers in this file.

21
00:01:17.620 --> 00:01:19.790
About 0 0 0 and something I believe.

22
00:01:19.830 --> 00:01:23.470
Now there's one thing I don't like about this solution is the me scroll.

23
00:01:23.470 --> 00:01:29.010
There you see the solution gives line numbers to all these empty lines.

24
00:01:29.010 --> 00:01:29.880
I guess that's OK.

25
00:01:29.910 --> 00:01:31.920
All depends on what you want to buy number.

26
00:01:31.920 --> 00:01:35.130
So I'm doing it two ways I'm doing it like this.

27
00:01:35.340 --> 00:01:41.190
And then I'll show you another way in a second which gives only line numbers to lines that actually

28
00:01:41.190 --> 00:01:42.120
have text.

29
00:01:42.210 --> 00:01:42.690
OK.

30
00:01:42.870 --> 00:01:44.750
So let me run that solution in a second.

31
00:01:44.750 --> 00:01:46.370
I'll show that one to you.

32
00:01:47.060 --> 00:01:52.160
OK so we're going to run this other version and this copy is complete and then we'll take a look at

33
00:01:52.160 --> 00:01:53.120
what it looks like.

34
00:01:54.880 --> 00:01:59.680
And right here Romeo and Juliet underscore out and you can see it looks exactly like the previous one

35
00:01:59.680 --> 00:02:02.380
except that blank lines aren't numbered.

36
00:02:02.560 --> 00:02:06.130
So you could see that we're skipping those blank lines we're still displaying them like they were in

37
00:02:06.130 --> 00:02:08.620
the original file but we're not numbering them.

38
00:02:08.890 --> 00:02:11.330
And I think it looks a little easier to read this way.

39
00:02:11.350 --> 00:02:18.010
I mean I don't know whether line numbers are put into scripts like this or not but different option.

40
00:02:18.010 --> 00:02:20.900
It gives you two different solutions and you can experiment with that.

41
00:02:21.070 --> 00:02:24.970
I'll show you both solutions when we do the solution project in a little bit.

42
00:02:24.970 --> 00:02:25.930
So that's it.

43
00:02:25.930 --> 00:02:26.770
Have fun.

44
00:02:26.980 --> 00:02:28.300
OK so that's it for this video.

45
00:02:28.300 --> 00:02:29.320
See you in the solution.
