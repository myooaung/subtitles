WEBVTT
1
00:00:05.490 --> 00:00:09.790
In this video we'll learn what variables are from a conceptual perspective.

2
00:00:09.830 --> 00:00:14.260
This will allow you to better understand how to use variables in your programs.

3
00:00:14.360 --> 00:00:18.920
I'm assuming in this course that everyone is familiar with the basic architecture of a typical computer

4
00:00:18.920 --> 00:00:26.540
system that is memory a CPQ and a bus that allows the movement of data between the CPQ in memory random

5
00:00:26.540 --> 00:00:32.690
access memory or RAM is a contiguous block of storage used by the computer to store information.

6
00:00:32.690 --> 00:00:36.770
This information can include computer instructions as well as data.

7
00:00:37.250 --> 00:00:43.430
RAM can be thought of as having memory cells where each cell has an associated location.

8
00:00:43.430 --> 00:00:48.800
If we had to program using the specific memory locations it wouldn't be a lot of fun and we'd likely

9
00:00:48.800 --> 00:00:51.080
have a lot of programmer errors.

10
00:00:51.080 --> 00:00:58.700
Imagine saying something like move 21:2 memory location 1002 in many very low level languages.

11
00:00:58.700 --> 00:01:00.480
This is sometimes what we do.

12
00:01:00.740 --> 00:01:06.640
However most programming languages allow you to associate a name with a memory location.

13
00:01:06.650 --> 00:01:10.070
Let's see the same example using a variable.

14
00:01:10.290 --> 00:01:17.370
In this example you can see that the memory location 1002 has been associated with the name age in computing

15
00:01:17.370 --> 00:01:21.210
This is called the binding and we can move 21 to age.

16
00:01:21.210 --> 00:01:27.060
This allows us not to have to worry about what exact memory location age is associated with.

17
00:01:27.060 --> 00:01:31.980
If we run the program again age will likely be associated with a different memory address and that's

18
00:01:31.980 --> 00:01:34.620
ok since we never knew about it in the first place.

19
00:01:34.620 --> 00:01:36.810
Our code will still work.

20
00:01:36.810 --> 00:01:42.720
Also thinking of names that makes sense to us makes writing and reading programs much easier.

21
00:01:42.750 --> 00:01:45.580
That's the basic idea behind names and variables.

22
00:01:45.660 --> 00:01:47.760
Of course since age is a variable.

23
00:01:47.760 --> 00:01:50.080
That means that its contents can vary.

24
00:01:50.160 --> 00:01:56.870
So if we turn 22 years old we can change the value of age from 21 to 22.

25
00:01:56.900 --> 00:02:01.660
So to recap a variable is an abstraction for a memory location.

26
00:02:01.730 --> 00:02:08.060
We use abstractions all the time in programming to make it easier for us to deal with complexity variables

27
00:02:08.060 --> 00:02:11.280
allow us to use a meaningful name to represent a value.

28
00:02:11.720 --> 00:02:16.490
It's important to understand that variables have two main properties first or type.

29
00:02:16.520 --> 00:02:22.820
The compiler needs to know what types of values are legal to store in age in the first code snippet

30
00:02:22.830 --> 00:02:28.410
on the left which tell the compiler to store Twenty-One in age but we never told the compiler what is

31
00:02:28.410 --> 00:02:30.180
valid to store an age.

32
00:02:30.210 --> 00:02:35.820
This will produce a compiler error telling us that age has been declared in the code snippet on the

33
00:02:35.820 --> 00:02:36.450
right.

34
00:02:36.450 --> 00:02:38.910
We first declare age to be an integer.

35
00:02:38.910 --> 00:02:42.660
Now the compiler knows that only integers are allowed to be stored in h.

36
00:02:42.660 --> 00:02:46.680
This is called static typing because the compiler is enforcing these rules.

37
00:02:46.800 --> 00:02:50.370
When the program is compiled rather than when the program is executing.

38
00:02:50.520 --> 00:02:58.740
So remember variables must be declared before you use them in C++ their value or contents may change

39
00:02:58.800 --> 00:03:05.180
as the program executes the next video will learn how to declare and initialize variables so they're

40
00:03:05.190 --> 00:03:06.780
ready to use in our programs.

41
00:03:06.780 --> 00:03:07.690
Let's go there next.
