1
00:00:05,320 --> 00:00:13,990
It this video will go over the steps necessary to create build and run a C++ program on Ubuntu Linux

2
00:00:14,410 --> 00:00:16,890
using only a text editor and the command line.

3
00:00:17,050 --> 00:00:21,320
So in this video we won't be using any integrated development environment.

4
00:00:21,430 --> 00:00:27,760
First of all I've created a folder on my desktop called C-p projects and in that folder I've created

5
00:00:27,760 --> 00:00:29,930
another folder called Project 1.

6
00:00:29,980 --> 00:00:33,280
This is where we're going to store our C++ program.

7
00:00:33,490 --> 00:00:36,350
In this case it's just going to be a man a real simple test.

8
00:00:36,370 --> 00:00:41,260
So I'd like to close this up and the first thing we need to do is we need some sort of editor to type

9
00:00:41,260 --> 00:00:43,810
in our program now on Linux.

10
00:00:43,810 --> 00:00:45,270
We've got it.

11
00:00:45,350 --> 00:00:50,560
I could just come to search my computer and type g at it and we can use that text editor which is a

12
00:00:50,560 --> 00:00:52,720
fine text editor it's real simple.

13
00:00:52,780 --> 00:00:55,130
It's comes with your installation.

14
00:00:55,180 --> 00:01:02,710
There are many other text editors and programmer text editors that you can use like brackets Adam and

15
00:01:02,770 --> 00:01:06,800
many others but this one is already here so you may as well use it and it works just fine.

16
00:01:07,110 --> 00:01:12,880
I've gone ahead and gone to Edit Preferences and I just turned on line numbers and you can set all kinds

17
00:01:12,880 --> 00:01:14,140
of different settings that you like.

18
00:01:14,140 --> 00:01:16,530
I made the font also a little bigger so you could see it.

19
00:01:16,720 --> 00:01:19,490
So it may look a little different when you start yours.

20
00:01:19,570 --> 00:01:22,620
So the first thing we want to do is we want to write this C++ program.

21
00:01:22,630 --> 00:01:24,280
So let's do include

22
00:01:27,210 --> 00:01:29,390
IO streams just like we've done before.

23
00:01:32,140 --> 00:01:36,170
I'll leave a space a little say into main two parentheses.

24
00:01:36,370 --> 00:01:42,370
The open curly and are close to Curly while I'm at it.

25
00:01:42,460 --> 00:01:49,930
And now we'll just say we could just press tab will say as t d to Colon's C out the insertion operator

26
00:01:49,930 --> 00:01:54,280
which is to less than signs bright together with no spaces.

27
00:01:54,320 --> 00:02:05,830
Now I'll say hello who buntu command line will close the string.

28
00:02:06,040 --> 00:02:10,090
We'll put another insertion operator and let's put a new line at the end that we have our cursor will

29
00:02:10,090 --> 00:02:15,820
go to the next line when we do the output and that's e and d l followed by a semi-colon and then we

30
00:02:15,820 --> 00:02:16,410
return 0.

31
00:02:16,410 --> 00:02:18,700
Just like we always do.

32
00:02:19,480 --> 00:02:20,180
That's it.

33
00:02:20,230 --> 00:02:22,060
That's our C++ program.

34
00:02:22,210 --> 00:02:29,320
Now it's important that we save this with the DOT extension and not a t xt the extension the C++ compiler

35
00:02:29,320 --> 00:02:33,230
does not like to seek extensions and you're going to get all kinds of weird errors.

36
00:02:33,550 --> 00:02:41,250
OK so let's do that let's go to File Save As we'll find where we want to say that we want to save toward

37
00:02:41,260 --> 00:02:44,230
desktop projects.

38
00:02:44,350 --> 00:02:51,570
Project 1 that's where we would like to save it and I'll give it to name as main Dotsie Peepy.

39
00:02:51,610 --> 00:02:57,280
Now you'll notice a couple of things when I named the file C.P the editor's smart realizes that this

40
00:02:57,280 --> 00:03:00,080
is not a regular text file to see post-box text file.

41
00:03:00,130 --> 00:03:03,690
So I'll save it and notice what happened here.

42
00:03:03,880 --> 00:03:07,220
Notice the color coding it knows C++.

43
00:03:07,240 --> 00:03:11,590
Again it's not an integrated development environment so it doesn't have a lot of hooks to the compiler

44
00:03:11,590 --> 00:03:18,100
and so forth but you can see that now it's really helping me because I can see that my string is terminated.

45
00:03:18,100 --> 00:03:23,860
For example if I get rid of that guy then that's black and it shouldn't be black it should be a magenta

46
00:03:23,860 --> 00:03:25,480
color.

47
00:03:25,570 --> 00:03:29,320
So again I'm going to press control as to save that file.

48
00:03:29,320 --> 00:03:31,840
Now we'd like to compile and run it.

49
00:03:31,840 --> 00:03:38,570
So in order to do that we need to open up a terminal so I come up back up here and say terminal and

50
00:03:38,650 --> 00:03:44,650
that will open up a terminal which I'll pull down just right by here so we can run them together.

51
00:03:44,660 --> 00:03:50,510
Now one of the things that you'll notice is that if you do a PWT which prints your working directory

52
00:03:50,990 --> 00:03:51,690
I'm in home.

53
00:03:51,710 --> 00:03:55,580
Frank I don't want to be at home Frank I want to be in this directory right up here that you can see

54
00:03:55,580 --> 00:03:59,170
desktop C-p project's Project 1.

55
00:03:59,330 --> 00:04:04,550
So I need to change into that directory and could use a CD command to change directories.

56
00:04:04,730 --> 00:04:11,500
So I want to go to my desktop and you can press tab for completion auto completion and press enter.

57
00:04:11,750 --> 00:04:20,480
Then I want to press that I want to type CD see projects and then finally Project 1 and you can do this

58
00:04:20,480 --> 00:04:21,590
all in one line if you like.

59
00:04:21,590 --> 00:04:23,400
I just did it in three steps.

60
00:04:23,540 --> 00:04:27,440
So now I'm in the correct directory if I want to know what's in that directory or I could just type

61
00:04:27,470 --> 00:04:29,880
LS which gives me a list of the directory.

62
00:04:30,040 --> 00:04:33,190
And you could see that my main file is there.

63
00:04:33,470 --> 00:04:35,380
That's the one that I want to compile.

64
00:04:35,750 --> 00:04:39,530
So let me make this thing a little bit wider so you can see what I'm typing here.

65
00:04:39,770 --> 00:04:44,480
So the first thing I want to do is I want to execute the compiler so I want to say G plus plus that

66
00:04:44,480 --> 00:04:45,700
calls the compiler.

67
00:04:45,890 --> 00:04:50,360
That's the new C++ compiler and I want to set some options.

68
00:04:50,360 --> 00:04:55,340
These are the same options that we would set with the ID here we're just going to set them as switches

69
00:04:55,340 --> 00:04:56,380
right at the command line.

70
00:04:56,630 --> 00:05:07,640
So when I say capital W A L L that turns on all warnings then I want to say dash s t d equals C plus

71
00:05:07,670 --> 00:05:13,850
plus 14 that's going to use the for the 2014 C post-Bush standard which is the latest one that's out

72
00:05:13,850 --> 00:05:14,350
there.

73
00:05:15,630 --> 00:05:18,050
Now we supply what do you want to compile.

74
00:05:18,060 --> 00:05:22,530
I want to compile the main but c file main Dotsie P.P..

75
00:05:22,650 --> 00:05:23,250
That's it.

76
00:05:23,370 --> 00:05:26,750
So it's going to execute the compiler turn on all warnings.

77
00:05:26,760 --> 00:05:32,430
Use the latest standard and compile that one file made C.P Precentor.

78
00:05:32,550 --> 00:05:36,540
I got back no messages which is good as they say no news is good news.

79
00:05:36,600 --> 00:05:39,730
If you have errors it'll tell you if you don't it will be nice and quiet.

80
00:05:40,140 --> 00:05:43,910
At this point I'll do it again to see what's in our directory.

81
00:05:43,950 --> 00:05:47,350
You can see that it's created a file called a dot out.

82
00:05:47,880 --> 00:05:51,660
That's the common normal file executable file that's created.

83
00:05:51,660 --> 00:05:56,520
What you don't say hey create Mainer create some other name to run it.

84
00:05:56,520 --> 00:06:04,260
You just type dot slash dot out and there you go it says hello to command line exactly what we typed

85
00:06:04,260 --> 00:06:06,630
up here in our program.

86
00:06:06,630 --> 00:06:12,690
If you don't want the 8. out and you want your own executive will then you could type that in and show

87
00:06:12,690 --> 00:06:13,350
you how to do that.

88
00:06:13,350 --> 00:06:17,090
What I'm doing now is I'm pressing the up arrow and the down arrow.

89
00:06:17,080 --> 00:06:20,380
You can go through what you've typed in that what you want to type it all in again.

90
00:06:20,610 --> 00:06:27,060
So you want to go back to the statement where you compiled just type a dash lowercase O and the name

91
00:06:27,060 --> 00:06:28,620
of the file that you want to create.

92
00:06:28,620 --> 00:06:33,420
So in this case this is the same man that will be my executive will Precentor.

93
00:06:34,080 --> 00:06:35,480
I'll do ls again.

94
00:06:35,490 --> 00:06:42,690
Now you can see that there's a main file right there and I can outrun man and I get the same output.

95
00:06:43,560 --> 00:06:43,880
OK.

96
00:06:43,890 --> 00:06:47,400
Simple as that it really is very straightforward.

97
00:06:47,400 --> 00:06:49,370
Now what are the things that you have to keep in mind.

98
00:06:49,410 --> 00:06:53,160
Since this is not an idea you've got two things going on here separately right.

99
00:06:53,160 --> 00:06:57,290
You've got your editors here and your command line tool here.

100
00:06:57,390 --> 00:06:59,050
They're not really sync together.

101
00:06:59,100 --> 00:07:00,890
You're the one that's sinking them together.

102
00:07:00,930 --> 00:07:09,130
So if I remove the semi-colon from my text editor and I compile again I expect an error right.

103
00:07:09,510 --> 00:07:10,380
I didn't get an error.

104
00:07:10,410 --> 00:07:13,730
The reason I didn't get the air was because I never saved the file.

105
00:07:13,770 --> 00:07:20,460
You have to be sure to save the file and then compile the ID sort of handle that magically behind the

106
00:07:20,460 --> 00:07:25,260
scenes they realize that you've made a change so it's going to compile the latest changes you made.

107
00:07:25,260 --> 00:07:27,040
This is different since sort out in sync.

108
00:07:27,090 --> 00:07:33,040
So you want to be sure that you can come up here and save file save or control S..

109
00:07:33,090 --> 00:07:35,900
Now I've saved it now a compile.

110
00:07:35,940 --> 00:07:37,350
Now I see the error.

111
00:07:37,580 --> 00:07:42,750
So you could see the errors it's expecting a semi-colon would check and replace.

112
00:07:42,750 --> 00:07:47,580
If I get rid of this quote mark and control some saving again.

113
00:07:47,650 --> 00:07:49,710
Now I run over to get a different error.

114
00:07:49,710 --> 00:07:56,820
Something about a terminating quote character is missing so I can put that back in control S and save

115
00:07:57,000 --> 00:08:00,390
and compile again and we can run main.

116
00:08:00,390 --> 00:08:01,790
One more time.

117
00:08:02,220 --> 00:08:03,360
That's it.

118
00:08:03,360 --> 00:08:04,000
So that's it.

119
00:08:04,020 --> 00:08:04,920
It's pretty straightforward.

120
00:08:04,920 --> 00:08:09,570
These are the steps necessary when you have a plain text editor and the command line.

121
00:08:09,990 --> 00:08:14,670
If you cannot install an ID for some reason maybe you've got minimal hardware requirements you just

122
00:08:14,670 --> 00:08:18,150
don't like IDS or you find them too confusing.

123
00:08:18,180 --> 00:08:22,920
Don't let that stop you from learning C plus plus you could still use a simple text editor like this

124
00:08:23,520 --> 00:08:26,180
and a command line tool and you could see the command.

125
00:08:26,220 --> 00:08:28,480
You could see the command right there.

126
00:08:28,500 --> 00:08:30,310
It's really really straightforward.

127
00:08:30,420 --> 00:08:35,570
If you've got multiple C++ files which we will later on in the course you just type them all in here.

128
00:08:35,570 --> 00:08:38,830
File one that C.P. file to the DPP and so forth.

129
00:08:38,930 --> 00:08:42,240
It will compile everything linked everything and run it for you.

130
00:08:42,240 --> 00:08:46,440
It many times you are if you're a consultant and you're working out there you'll show up at a place

131
00:08:46,470 --> 00:08:49,650
and there's no idea you you're working as a consultant.

132
00:08:49,650 --> 00:08:53,150
All you need is an editor and a command line in your business.

133
00:08:53,160 --> 00:08:55,280
OK so that wraps up this video.
