WEBVTT
1
00:00:05.660 --> 00:00:09.500
Hello welcome back to the challenge to solution for a Section 20.

2
00:00:09.500 --> 00:00:15.540
So I'm in the Section 20 workspace and am and the challenge underscored to underscore solution project.

3
00:00:15.740 --> 00:00:21.110
And when I'd like to do is just go over my solution this is a really really straightforward program.

4
00:00:21.260 --> 00:00:27.020
If you're not used to thinking abstractly with as T.L. containers and iterators and so forth then it

5
00:00:27.020 --> 00:00:32.320
becomes much more difficult once you really take advantage of using the power of the ACL and makes it

6
00:00:32.330 --> 00:00:33.680
much much easier.

7
00:00:33.680 --> 00:00:35.630
So here's what I've got going on here.

8
00:00:35.840 --> 00:00:40.070
I've got my song class which we've already talked about and it's very straightforward I talked about

9
00:00:40.070 --> 00:00:44.090
them in the previous video and I'm going to scroll down to the methods that we're going to implement.

10
00:00:44.090 --> 00:00:50.030
So here is the display menu which I gave you and here's that very first method you had to implement.

11
00:00:50.030 --> 00:00:51.200
Play the current song.

12
00:00:51.350 --> 00:00:53.480
So I'm being passed in a song object.

13
00:00:53.480 --> 00:00:53.960
What do I do.

14
00:00:53.960 --> 00:01:01.790
I just say playing and I display the song Simple as that the song class overloads my stream insertion

15
00:01:01.790 --> 00:01:02.370
operator.

16
00:01:02.390 --> 00:01:08.680
So it becomes basically a one liner the next one is displaying the actual playlist.

17
00:01:08.690 --> 00:01:10.830
And again really straightforward What am I getting.

18
00:01:10.840 --> 00:01:17.350
I'm getting the playlist which is a list of song objects and I'm also getting the current song is I

19
00:01:17.350 --> 00:01:21.100
want to display both of them that we I have all the information I need in the display.

20
00:01:22.160 --> 00:01:26.740
All I'm doing is arrange base for loop over the playlist.

21
00:01:26.960 --> 00:01:31.060
I'm grabbing the song that's there and display it just like we did here.

22
00:01:31.400 --> 00:01:33.660
So we're using the overloaded insertion operator.

23
00:01:33.680 --> 00:01:36.520
That's going to display all the songs in the playlist in the loop.

24
00:01:36.770 --> 00:01:41.050
And then I'm just going to say the current song that's playing is current song.

25
00:01:41.180 --> 00:01:44.980
This code is the same as this code I could have called this function from there.

26
00:01:45.080 --> 00:01:46.470
Either way is fine.

27
00:01:46.990 --> 00:01:50.550
And now let's look at the main That's the real workhorse.

28
00:01:50.570 --> 00:02:00.380
You can see that I am defining playlist right here and is of course his main initialized to these six

29
00:02:00.380 --> 00:02:03.250
songs you could choose any songs you like.

30
00:02:03.290 --> 00:02:05.350
This right here is so important.

31
00:02:05.420 --> 00:02:10.640
If you forget to do this you can run into issues that's why I gave you that one line and decode current

32
00:02:10.640 --> 00:02:17.140
song is an iterator to a song in a good list and I'm setting it to the beginning so in other words I'm

33
00:02:17.160 --> 00:02:24.410
always starting right at that first song up there and then I'm displaying the playlist What am I passing

34
00:02:24.410 --> 00:02:30.050
in and passing in the playlist and I'm passing in the song Remember current song as an iterator so I

35
00:02:30.050 --> 00:02:36.200
need to dereference that iterator to get to the song that it's pointing to him to be double safe and

36
00:02:36.200 --> 00:02:41.420
to use defensive programming you always want to make sure that that is actually pointing to the list

37
00:02:41.420 --> 00:02:42.800
and not off the list.

38
00:02:43.010 --> 00:02:47.240
But in this case I'm sure I'm not off the list anywhere in this program so I'm not doing it.

39
00:02:47.240 --> 00:02:52.580
But defensive programming probably will be a good idea to check to make sure that iterator is not pointing

40
00:02:52.580 --> 00:02:54.150
off the list.

41
00:02:54.260 --> 00:03:00.720
OK so now we're in the loop and we've got a character variable that's where I'm going to read the user

42
00:03:00.720 --> 00:03:03.950
selection into displaying the menu.

43
00:03:03.950 --> 00:03:07.420
I'm reading this selection I'm making the selection uppercase.

44
00:03:07.430 --> 00:03:14.120
That way I don't have to use or is here in my IF statements and if the selection is f that means we're

45
00:03:14.120 --> 00:03:18.520
playing the first song I'm just displaying this little message right here.

46
00:03:18.530 --> 00:03:25.610
Just playing for a song and I'm setting the iterator current song equals play list not begin.

47
00:03:25.610 --> 00:03:27.690
That's the first element in the list.

48
00:03:27.710 --> 00:03:29.040
The first song.

49
00:03:29.270 --> 00:03:30.180
That's it.

50
00:03:30.320 --> 00:03:36.470
And I'm calling play current song and I'm dereferencing that iterator passing the song in that'll display

51
00:03:36.580 --> 00:03:41.480
that that song is playing and these little messages here I've got one here and I've got one here you

52
00:03:41.480 --> 00:03:45.740
don't really don't need those but I just put them in that we you know explicitly see these functions

53
00:03:46.070 --> 00:03:47.460
working.

54
00:03:47.570 --> 00:03:48.950
So let's look at next.

55
00:03:48.950 --> 00:03:50.700
I'll scroll up just a bit.

56
00:03:51.200 --> 00:03:54.080
So here we're going to play the next song.

57
00:03:54.080 --> 00:03:55.120
What do I do.

58
00:03:55.130 --> 00:03:57.290
Increment the iterator.

59
00:03:57.380 --> 00:04:01.540
Now it's possible that I was on the last song and now I'm off the list.

60
00:04:01.640 --> 00:04:04.200
So I really need to be I need to check here.

61
00:04:04.220 --> 00:04:09.370
So if the current song is equal to playlists and that means I'm off the list right.

62
00:04:09.500 --> 00:04:10.700
I just press next.

63
00:04:10.700 --> 00:04:12.330
And I was on the last song.

64
00:04:12.380 --> 00:04:17.810
So what I need to do here is rap to the start of the play list and then set my iterator to the beginning

65
00:04:18.980 --> 00:04:22.720
and then we price press conference on if I'm not at the end that I was somewhere at the beginning or

66
00:04:22.730 --> 00:04:24.390
in the middle it's not a big deal.

67
00:04:24.470 --> 00:04:25.020
That's it.

68
00:04:25.070 --> 00:04:27.350
That's the logic right here.

69
00:04:27.350 --> 00:04:30.070
For previous It's very similar.

70
00:04:30.260 --> 00:04:35.900
So I'm displaying playing previous song and I'm checking to see if the current song is equal to the

71
00:04:35.900 --> 00:04:36.970
first song.

72
00:04:37.190 --> 00:04:38.450
Then I need to wrap around.

73
00:04:38.450 --> 00:04:38.740
Right.

74
00:04:38.750 --> 00:04:42.020
So in this case I need to set the current song to the end.

75
00:04:42.050 --> 00:04:43.430
I notice what happens here.

76
00:04:43.450 --> 00:04:48.200
Remember here's my list and this is the end of the list right.

77
00:04:48.200 --> 00:04:50.970
This is just a placeholder there's no song in there.

78
00:04:51.140 --> 00:04:55.820
So I want to set it to there because in the next line I want to decremented and bring it right back

79
00:04:55.820 --> 00:04:57.230
to here.

80
00:04:57.230 --> 00:05:00.880
So that way I don't have to duplicate code all over the place.

81
00:05:01.160 --> 00:05:05.540
So that's it a decrement the song and I call play current song with the song and now it's going to be

82
00:05:05.540 --> 00:05:09.490
playing the last song if I was at the beginning of the list.

83
00:05:09.560 --> 00:05:15.710
Otherwise it's just going to play the previous one the edition right here we're adding songs.

84
00:05:15.710 --> 00:05:20.690
I've got some variables I've got my name my artists which are strings in the rating I've got this line

85
00:05:20.690 --> 00:05:23.630
of code were provided in your description.

86
00:05:23.630 --> 00:05:29.030
This is clears out anything that's in standard in or C in case you've got garbage characters in there

87
00:05:29.030 --> 00:05:34.730
are extra returns from processing this is just a good practice to get into whenever you really need

88
00:05:34.730 --> 00:05:36.070
to just clear out stuff.

89
00:05:36.110 --> 00:05:41.600
I don't want anything in there so I'm just clearing everything out and then I'm adding and playing a

90
00:05:41.600 --> 00:05:46.190
new song I'm displaying that message and I'm asking the user to enter the name of the song The Artist

91
00:05:46.250 --> 00:05:47.900
and the rating.

92
00:05:48.020 --> 00:05:55.420
And once I have that I'm creating a new song based on that information and I'm inserting using playlists

93
00:05:55.680 --> 00:06:00.880
insert and current song rember that's my iterator so inserting it before that.

94
00:06:00.890 --> 00:06:03.320
That's the behavior I could use in place here as well.

95
00:06:03.350 --> 00:06:04.410
Whatever you like.

96
00:06:04.580 --> 00:06:11.480
Now what happened was remember he was my iterator which was current song it's pointing here and I just

97
00:06:11.480 --> 00:06:15.970
inserted that song here so I need to detriment that operator to play it.

98
00:06:16.070 --> 00:06:20.660
So right here is where I'm doing that on the decrementing the iterator right here and I'm playing the

99
00:06:20.660 --> 00:06:23.000
song just inserted.

100
00:06:23.060 --> 00:06:27.910
All right now the last couple is just real simple here list.

101
00:06:27.920 --> 00:06:32.320
I'm just calling display playlists and I'm passing in the playlist in the current song.

102
00:06:32.330 --> 00:06:33.560
Q I'm kidding.

103
00:06:33.560 --> 00:06:36.850
Anything else is only legal choice.

104
00:06:36.850 --> 00:06:38.620
That's it you can see it's really straightforward right.

105
00:06:38.680 --> 00:06:42.190
I've got no looping variables I'm not worried about keeping track of stuff.

106
00:06:42.190 --> 00:06:49.460
The only thing I'm keeping track of is I've got my list here and all I'm doing is I've got that current

107
00:06:49.460 --> 00:06:51.920
song that's the only thing that really concerns me.

108
00:06:51.920 --> 00:06:57.620
I've got that current song iterator and all I'm doing is moving that guy back and forth along the list.

109
00:06:57.620 --> 00:06:58.790
Really really simple.

110
00:06:58.790 --> 00:07:03.920
It never invalidates because when I'm inserting something I'm inserting something before it.

111
00:07:03.920 --> 00:07:05.950
So all I need to do is just move it back.

112
00:07:06.440 --> 00:07:08.250
So I'm never going to invalidate that.

113
00:07:08.270 --> 00:07:12.620
And the way that the code is written it's never going to go off the list so that's why I'm not checking

114
00:07:12.620 --> 00:07:13.530
to make sure it's gone.

115
00:07:13.550 --> 00:07:16.490
It's in the list but I certainly could.

116
00:07:16.490 --> 00:07:17.900
All right I hope you had fun with this.

117
00:07:17.900 --> 00:07:19.760
I hope you've extended it as well.

118
00:07:19.970 --> 00:07:21.890
If you have your solution you think it's really cool.

119
00:07:21.890 --> 00:07:24.860
Posted in the Q&amp;A and we'll comment on it.

120
00:07:24.860 --> 00:07:26.440
All right I'll see you in the next video.

121
00:07:26.510 --> 00:07:28.910
Well we're going to start talking about sets.
