WEBVTT
1
00:00:01.140 --> 00:00:05.320
There's a lot of interesting data that happens over time, for example,

2
00:00:05.320 --> 00:00:08.200
stock prices, clickstream activity,

3
00:00:08.200 --> 00:00:12.620
computer metrics like CPU usage, and data gathered by IoT

4
00:00:12.620 --> 00:00:15.740
devices such as temperature or motion.

5
00:00:15.740 --> 00:00:19.020
Many organizations will collect time series data from

6
00:00:19.020 --> 00:00:22.860
multiple sources in order to monitor operations and gain

7
00:00:22.860 --> 00:00:25.620
insights into how services are used.

8
00:00:25.620 --> 00:00:29.080
This type of data can have multiple measurements per second,

9
00:00:29.080 --> 00:00:31.640
resulting in a very high volume of data.

10
00:00:31.640 --> 00:00:36.310
Trying to use a relational database to manage and analyze time series data

11
00:00:36.310 --> 00:00:41.440
often results in slow performance and high costs over time.

12
00:00:41.440 --> 00:00:46.970
Amazon Timestream is a managed serverless time series database.

13
00:00:46.970 --> 00:00:50.030
It can automatically scale to handle trillions of events per

14
00:00:50.030 --> 00:00:54.970
day up to 1000 times faster and for as little as 1/10 of the

15
00:00:54.970 --> 00:00:57.450
cost of relational databases.

16
00:00:57.450 --> 00:01:02.140
Each data point has a timestamp and one or more attributes like price,

17
00:01:02.140 --> 00:01:05.000
temperature or percentage utilization.

18
00:01:05.000 --> 00:01:07.780
The schema is dynamically created based on the

19
00:01:07.780 --> 00:01:10.840
attributes of incoming time series data,

20
00:01:10.840 --> 00:01:14.210
so you don't have to worry about migrating database tables if the

21
00:01:14.210 --> 00:01:16.970
data you collect adds additional attributes.

22
00:01:16.970 --> 00:01:22.500
Encryption is built in. Timestream also manages your data lifecycle,

23
00:01:22.500 --> 00:01:25.730
keeping more recent data in memory while shifting

24
00:01:25.730 --> 00:01:28.740
older data to less expensive storage.

25
00:01:28.740 --> 00:01:33.160
This helps manage the cost of keeping historical data for analytics.

26
00:01:33.160 --> 00:01:37.430
The query engine lets you access recent and historical data together

27
00:01:37.430 --> 00:01:41.750
using SQL and built‑in time series analytics functions.

28
00:01:41.750 --> 00:01:45.560
Timestream is easy to integrate with other services, so you

29
00:01:45.560 --> 00:01:49.080
can build dashboards or perform additional analytics by

30
00:01:49.080 --> 00:01:52.540
feeding the data into other services.

31
00:01:52.540 --> 00:01:58.140
Way to go! You've just finished a tour of the AWS database services.

32
00:01:58.140 --> 00:02:01.070
You started out seeing the importance of using the right

33
00:02:01.070 --> 00:02:04.670
database for the type of data you'll be working with and

34
00:02:04.670 --> 00:02:06.940
the access patterns you expect.

35
00:02:06.940 --> 00:02:12.380
You then saw Amazon RDS where you can utilize a variety of managed relational

36
00:02:12.380 --> 00:02:16.340
database engines with less effort than doing it all yourself.

37
00:02:16.340 --> 00:02:18.590
Next, you saw Amazon Aurora,

38
00:02:18.590 --> 00:02:22.410
the relational database engine that leverages performance and cost

39
00:02:22.410 --> 00:02:26.600
optimizations for the cloud, followed by ElastiCache,

40
00:02:26.600 --> 00:02:30.540
the caching service you can use to boost database performance.

41
00:02:30.540 --> 00:02:33.400
You learned about DynamoDB and how it can scale to

42
00:02:33.400 --> 00:02:35.980
handle very large transaction loads,

43
00:02:35.980 --> 00:02:40.150
along with Keyspaces and DocumentDB if you're looking to move

44
00:02:40.150 --> 00:02:44.910
Cassandra or MongoDB workloads to the cloud. You saw how Redshift

45
00:02:44.910 --> 00:02:49.200
enables data warehousing in the cloud, and Neptune is available if

46
00:02:49.200 --> 00:02:51.340
you need a graph database.

47
00:02:51.340 --> 00:02:55.740
Finally, you learned how QLDB can help you create an immutable,

48
00:02:55.740 --> 00:03:00.620
verifiable system of record and how Timestream can increase performance

49
00:03:00.620 --> 00:03:04.940
and lower costs for working with your time series data.

50
00:03:04.940 --> 00:03:08.790
The rest of this course will go into more detail on the five domains

51
00:03:08.790 --> 00:03:12.450
of what you need to know as a database specialist.

52
00:03:12.450 --> 00:03:17.890
Individual courses on specific database engines and services will dive into

53
00:03:17.890 --> 00:03:22.740
how to do it in each particular database type or service.

54
00:03:22.740 --> 00:03:30.000
Join me in the next module where we'll start out with designing workload‑specific databases.

