1
00:00:00,000 --> 00:00:03,260
All right,

2
00:00:03,260 --> 00:00:05,690
let's look at the exit status.

3
00:00:05,690 --> 00:00:07,730
What are the exits?

4
00:00:07,730 --> 00:00:15,330
Status Every time a command is ran in a shell are in love would say,

5
00:00:15,330 --> 00:00:16,470
Let's go one step back in.

6
00:00:16,470 --> 00:00:17,050
And Lennox,

7
00:00:17,050 --> 00:00:20,690
it always has a status associated with it.

8
00:00:20,690 --> 00:00:22,050
If it is successful,

9
00:00:22,050 --> 00:00:24,750
it will always give us status of zero.

10
00:00:24,750 --> 00:00:26,950
And there are,

11
00:00:26,950 --> 00:00:27,720
um,

12
00:00:27,720 --> 00:00:33,070
statuses from all the way from 0 to 2 55 Every status of the different meaning.

13
00:00:33,070 --> 00:00:41,200
These are the actual Our codes are the numbers that developers associate it with a

14
00:00:41,200 --> 00:00:42,090
different meanings.

15
00:00:42,090 --> 00:00:45,470
So every developers or every application have a different meaning.

16
00:00:45,470 --> 00:00:46,390
But for us,

17
00:00:46,390 --> 00:00:50,510
we only gonna focus on a very few statuses.

18
00:00:50,510 --> 00:00:53,780
And that is number 10 which is yes or no.

19
00:00:53,780 --> 00:00:59,470
If this is a command that we ran previously is successful or not,

20
00:00:59,470 --> 00:01:00,500
if it is not,

21
00:01:00,500 --> 00:01:04,470
then it will give a message one x status one,

22
00:01:04,470 --> 00:01:07,150
which is known as a minor problem.

23
00:01:07,150 --> 00:01:09,140
Or number two.

24
00:01:09,140 --> 00:01:12,870
It's a serious trouble or everything else,

25
00:01:12,870 --> 00:01:18,550
which is exit status from 3 to 255 everything else.

26
00:01:18,550 --> 00:01:21,300
So why do we need actually actually exist?

27
00:01:21,300 --> 00:01:22,600
Status in our scripting?

28
00:01:22,600 --> 00:01:23,470
Good question.

29
00:01:23,470 --> 00:01:23,950
Well,

30
00:01:23,950 --> 00:01:24,710
uneven.

31
00:01:24,710 --> 00:01:28,980
We have to do a lot of comparisons in our shell scripting.

32
00:01:28,980 --> 00:01:32,740
Following this lessons and in comparison,

33
00:01:32,740 --> 00:01:37,160
you need to know if your command rant if it did ran and it was successful,

34
00:01:37,160 --> 00:01:38,780
then do this.

35
00:01:38,780 --> 00:01:39,930
Otherwise,

36
00:01:39,930 --> 00:01:41,000
don't do that.

37
00:01:41,000 --> 00:01:43,650
As we learned that there are statements,

38
00:01:43,650 --> 00:01:43,900
Chris,

39
00:01:43,900 --> 00:01:49,760
if else while statements every every one of those scripts or statements do need some kind

40
00:01:49,760 --> 00:01:53,150
of status before proceed to the next,

41
00:01:53,150 --> 00:01:54,050
uh,

42
00:01:54,050 --> 00:01:54,850
execution.

43
00:01:54,850 --> 00:01:58,950
So me show you real quick by logging into my Lennox machine.

44
00:01:58,950 --> 00:02:00,680
Um,

45
00:02:00,680 --> 00:02:06,100
I am logged in as myself and I am in my home directory.

46
00:02:06,100 --> 00:02:10,150
So now let's see if I run a command ls minus l.

47
00:02:10,150 --> 00:02:12,500
And it runs successfully,

48
00:02:12,500 --> 00:02:12,740
right?

49
00:02:12,740 --> 00:02:15,250
It gave me everything that I was looking for,

50
00:02:15,250 --> 00:02:18,320
but a I want to know,

51
00:02:18,320 --> 00:02:18,960
actually,

52
00:02:18,960 --> 00:02:21,360
the status off my proceeding command,

53
00:02:21,360 --> 00:02:27,370
I would do echo dollar sign.

54
00:02:27,370 --> 00:02:28,650
And then the question mark,

55
00:02:28,650 --> 00:02:36,460
this is telling the shell or the bash that what was a command that ran previously read and

56
00:02:36,460 --> 00:02:38,450
tell me whether that command was successful or not.

57
00:02:38,450 --> 00:02:41,350
If I get a zero return,

58
00:02:41,350 --> 00:02:42,890
there you go.

59
00:02:42,890 --> 00:02:48,660
It means it did run right because I wanted to get a listing off all my Derek Tree files and

60
00:02:48,660 --> 00:02:52,850
directories in District Tree and I did give me and that's why I have zero.

61
00:02:52,850 --> 00:02:54,500
Let's take another command.

62
00:02:54,500 --> 00:02:56,070
That's a advantage to wish directory.

63
00:02:56,070 --> 00:02:56,430
I'm in.

64
00:02:56,430 --> 00:02:57,610
I'm in home.

65
00:02:57,610 --> 00:02:59,590
I have solved directory Perfect Iran.

66
00:02:59,590 --> 00:03:03,870
And if I do echo dollar question mark again,

67
00:03:03,870 --> 00:03:07,150
it will give me zero again that it was successful.

68
00:03:07,150 --> 00:03:09,280
What if I run a command?

69
00:03:09,280 --> 00:03:09,620
That's it.

70
00:03:09,620 --> 00:03:12,250
P W D D right This command,

71
00:03:12,250 --> 00:03:13,690
there is no such command.

72
00:03:13,690 --> 00:03:19,100
So if I run that it says bash commands found similar command is PWD.

73
00:03:19,100 --> 00:03:20,180
Give me a recommendation.

74
00:03:20,180 --> 00:03:21,690
But anyway,

75
00:03:21,690 --> 00:03:23,520
the command was not successful.

76
00:03:23,520 --> 00:03:27,350
So now if I asked the shell whether the last command was successful or not,

77
00:03:27,350 --> 00:03:31,250
I will run the same command echo dollars question more.

78
00:03:31,250 --> 00:03:38,340
And it has giving me error code 1 27 which is different from zero.

79
00:03:38,340 --> 00:03:38,480
So,

80
00:03:38,480 --> 00:03:39,250
as I said,

81
00:03:39,250 --> 00:03:44,250
anything from 0 to 2 55 is not,

82
00:03:44,250 --> 00:03:47,330
uh is this Eric owes,

83
00:03:47,330 --> 00:03:50,900
But anything above zero is all our coats.

84
00:03:50,900 --> 00:03:53,150
Anything that is zero is successful.

85
00:03:53,150 --> 00:03:54,650
Now when we run,

86
00:03:54,650 --> 00:03:56,800
when we create a script.

87
00:03:56,800 --> 00:04:00,740
So let's say I go into I create a script,

88
00:04:00,740 --> 00:04:01,580
I call it,

89
00:04:01,580 --> 00:04:03,850
um test,

90
00:04:03,850 --> 00:04:04,950
um,

91
00:04:04,950 --> 00:04:06,130
code.

92
00:04:06,130 --> 00:04:06,750
Just that.

93
00:04:06,750 --> 00:04:10,650
And I will.

94
00:04:10,650 --> 00:04:14,910
Right?

95
00:04:14,910 --> 00:04:18,150
I will declare my show.

96
00:04:18,150 --> 00:04:26,050
And now I will not define all those stuff that I know you already know.

97
00:04:26,050 --> 00:04:27,640
Since this is a very small,

98
00:04:27,640 --> 00:04:28,530
um,

99
00:04:28,530 --> 00:04:28,950
script,

100
00:04:28,950 --> 00:04:30,050
I'll just do echo.

101
00:04:30,050 --> 00:04:30,950
Hello.

102
00:04:30,950 --> 00:04:38,750
And then I will ask if the command was successful and I will save it.

103
00:04:38,750 --> 00:04:42,050
Test code.

104
00:04:42,050 --> 00:04:45,550
Now when I run that,

105
00:04:45,550 --> 00:04:47,720
you'll see I'm getting the hello.

106
00:04:47,720 --> 00:04:49,920
And but that I'm getting zero.

107
00:04:49,920 --> 00:04:51,150
It means it was successful.

108
00:04:51,150 --> 00:04:54,670
Same thing if I wanted to do something else.

109
00:04:54,670 --> 00:05:00,190
Let's say if I go back to test code and this time I will do instead of echo all just

110
00:05:00,190 --> 00:05:01,150
replaced of it.

111
00:05:01,150 --> 00:05:02,030
Kiki.

112
00:05:02,030 --> 00:05:04,160
So there is no such commanders.

113
00:05:04,160 --> 00:05:04,580
Icky.

114
00:05:04,580 --> 00:05:05,170
So anyway,

115
00:05:05,170 --> 00:05:06,900
let's see what the error message comes up.

116
00:05:06,900 --> 00:05:09,020
Now I'll run again,

117
00:05:09,020 --> 00:05:12,350
and now it's giving me the seamer Massive that it was not successful.

118
00:05:12,350 --> 00:05:12,890
Ah,

119
00:05:12,890 --> 00:05:13,340
same way.

120
00:05:13,340 --> 00:05:15,850
If I try ls minus l l l l.

121
00:05:15,850 --> 00:05:18,040
And it does exist,

122
00:05:18,040 --> 00:05:18,650
actually,

123
00:05:18,650 --> 00:05:21,150
let's say ls minus z.

124
00:05:21,150 --> 00:05:22,970
There is so many options.

125
00:05:22,970 --> 00:05:23,370
Right?

126
00:05:23,370 --> 00:05:27,250
Um ls um tax tax tax tax peak.

127
00:05:27,250 --> 00:05:28,090
Okay,

128
00:05:28,090 --> 00:05:28,640
so there you go.

129
00:05:28,640 --> 00:05:30,440
See unrecognized options.

130
00:05:30,440 --> 00:05:36,210
So now let's see what the area code is the area code is two C.

131
00:05:36,210 --> 00:05:36,880
It's a different.

132
00:05:36,880 --> 00:05:38,050
And that is,

133
00:05:38,050 --> 00:05:38,990
um,

134
00:05:38,990 --> 00:05:42,850
about error code that shows serious trouble.

135
00:05:42,850 --> 00:05:48,850
So this is about you have not defined the option successful.

136
00:05:48,850 --> 00:05:49,380
Now,

137
00:05:49,380 --> 00:05:51,550
let's run another script really quick.

138
00:05:51,550 --> 00:05:53,870
I'm gonna create that script,

139
00:05:53,870 --> 00:05:54,670
I'll call it.

140
00:05:54,670 --> 00:05:55,150
Um,

141
00:05:55,150 --> 00:05:57,650
we I exit code,

142
00:05:57,650 --> 00:06:01,950
um exit code script.

143
00:06:01,950 --> 00:06:07,150
And I was defined the show.

144
00:06:07,150 --> 00:06:12,650
And this time I wanted to make sure I run ls minus l'Homme.

145
00:06:12,650 --> 00:06:16,150
I have solved last check.

146
00:06:16,150 --> 00:06:18,200
This is the command are trying to do.

147
00:06:18,200 --> 00:06:21,200
So what is going to do is is going to do ls minus l.

148
00:06:21,200 --> 00:06:22,710
And it's gonna ah,

149
00:06:22,710 --> 00:06:23,170
Onley,

150
00:06:23,170 --> 00:06:26,950
find out if home IVs all and there is a file named check exists.

151
00:06:26,950 --> 00:06:28,110
Okay,

152
00:06:28,110 --> 00:06:30,720
so now I have to define the statement.

153
00:06:30,720 --> 00:06:38,040
If dollar question mark,

154
00:06:38,040 --> 00:06:43,350
which is command that I ran equal to zero,

155
00:06:43,350 --> 00:06:46,850
which means if the command ran successfully,

156
00:06:46,850 --> 00:06:54,650
then do what an echo file exist else.

157
00:06:54,650 --> 00:07:09,650
Echo file does not exist and feet and let's run it and give executed permission.

158
00:07:09,650 --> 00:07:16,670
Now let's run the script and it will say cannot access home.

159
00:07:16,670 --> 00:07:17,280
I absolve.

160
00:07:17,280 --> 00:07:17,590
Check.

161
00:07:17,590 --> 00:07:19,150
No such file and directory.

162
00:07:19,150 --> 00:07:21,070
Then it stays off Course file.

163
00:07:21,070 --> 00:07:24,150
Does not exist because the Eriko does not match.

164
00:07:24,150 --> 00:07:25,090
Ah,

165
00:07:25,090 --> 00:07:25,610
zero.

166
00:07:25,610 --> 00:07:30,290
So if I create a file check in my home directory So I'm in home directory.

167
00:07:30,290 --> 00:07:34,340
I'm just gonna do touch and check The file is there,

168
00:07:34,340 --> 00:07:34,730
right?

169
00:07:34,730 --> 00:07:36,150
So just verify it.

170
00:07:36,150 --> 00:07:37,260
Check.

171
00:07:37,260 --> 00:07:37,960
And it is,

172
00:07:37,960 --> 00:07:38,180
dear.

173
00:07:38,180 --> 00:07:38,460
Right.

174
00:07:38,460 --> 00:07:46,580
So now when I run that script again that I just created and it did give me that file with

175
00:07:46,580 --> 00:07:47,900
my LS minus l command.

176
00:07:47,900 --> 00:07:51,550
And it's his file exist.

177
00:07:51,550 --> 00:07:53,730
So that's why it is.

178
00:07:53,730 --> 00:07:57,460
That's that's why we the exit status importance is there.

179
00:07:57,460 --> 00:07:59,720
So this way you could actually,

180
00:07:59,720 --> 00:08:00,450
um,

181
00:08:00,450 --> 00:08:04,490
associate each code with some kind of meaning.

182
00:08:04,490 --> 00:08:10,970
So developers like C plus plus or jars other developers like object oriented based

183
00:08:10,970 --> 00:08:14,250
programmers or people who write operating systems.

184
00:08:14,250 --> 00:08:19,070
They are the ones age happily used these codes because thes codes make a lot of difference

185
00:08:19,070 --> 00:08:19,070
.

186
00:08:19,070 --> 00:08:20,500
But in our,

187
00:08:20,500 --> 00:08:21,290
um,

188
00:08:21,290 --> 00:08:22,280
class are,

189
00:08:22,280 --> 00:08:23,170
in our lessons,

190
00:08:23,170 --> 00:08:25,260
going from this point on,

191
00:08:25,260 --> 00:08:29,230
mostly going to you zero to make sure figures exist or not.

192
00:08:29,230 --> 00:08:35,350
And that's why most of the time the system administrator engineers use in the every day

193
00:08:35,350 --> 00:08:36,330
Lennox,

194
00:08:36,330 --> 00:08:36,760
um,

195
00:08:36,760 --> 00:08:43,700
scripting languages to try it out and see how you could create different scripts with Eric

196
00:08:43,700 --> 00:08:46,050
codes and what their code gives you

