WEBVTT
ï»¿1
00:00:00.000 --> 00:00:01.940
four Loop scripts.

2
00:00:01.940 --> 00:00:06.700
Another advanced level of scripting you are keep getting better.

3
00:00:06.700 --> 00:00:08.690
My friends keep getting better.

4
00:00:08.690 --> 00:00:13.820
The next script that you're gonna run is for loop scripts for loops.

5
00:00:13.820 --> 00:00:18.960
What they do is keeps running until a specified number off variable.

6
00:00:18.960 --> 00:00:20.610
For example,

7
00:00:20.610 --> 00:00:22.350
if a variable is defined,

8
00:00:22.350 --> 00:00:23.000
10

9
00:00:23.000 --> 00:00:28.740
Then run the script 10 times or variable is green,

10
00:00:28.740 --> 00:00:29.320
blue,

11
00:00:29.320 --> 00:00:29.740
red.

12
00:00:29.740 --> 00:00:32.550
Then run the script three times for each color,

13
00:00:32.550 --> 00:00:38.240
so it actually simply fires your tasks.

14
00:00:38.240 --> 00:00:39.870
If you want to,

15
00:00:39.870 --> 00:00:40.450
for example,

16
00:00:40.450 --> 00:00:45.050
create file files or 10 files,

17
00:00:45.050 --> 00:00:48.100
then you don't have to run the command again and again again.

18
00:00:48.100 --> 00:00:51.250
Full four loops will do it for you.

19
00:00:51.250 --> 00:00:55.350
We'll go back into our Lennox machine.

20
00:00:55.350 --> 00:00:58.500
I will try a couple of scripts,

21
00:00:58.500 --> 00:01:05.450
four loops and then you could try on your own and you will become profession were running

22
00:01:05.450 --> 00:01:08.050
these little little time tie scripts.

23
00:01:08.050 --> 00:01:11.510
So which dirty we are in?

24
00:01:11.510 --> 00:01:15.930
We are in our home directory.

25
00:01:15.930 --> 00:01:16.600
Always.

26
00:01:16.600 --> 00:01:21.050
Home is not just home but entire home directory.

27
00:01:21.050 --> 00:01:25.200
And the dirty that we are in is my script.

28
00:01:25.200 --> 00:01:28.850
So in my scripts we're going to create a new script.

29
00:01:28.850 --> 00:01:30.660
We're gonna call it this time.

30
00:01:30.660 --> 00:01:33.510
ABC do V I A b c.

31
00:01:33.510 --> 00:01:42.900
And the first thing you know already by now is that you define the shell script that you're

32
00:01:42.900 --> 00:01:45.250
going to run this script in,

33
00:01:45.250 --> 00:01:46.700
or the shell environment.

34
00:01:46.700 --> 00:01:49.820
I would say that you're gonna run the script in and again with.

35
00:01:49.820 --> 00:01:55.570
I have already written few script for you to go over this training,

36
00:01:55.570 --> 00:01:58.680
and I'm gonna go into our first group,

37
00:01:58.680 --> 00:02:01.290
which is a simple for loop output.

38
00:02:01.290 --> 00:02:03.350
I'm gonna copy the script,

39
00:02:03.350 --> 00:02:05.750
and I'm gonna just simply paste it.

40
00:02:05.750 --> 00:02:10.270
This already has a defined shell,

41
00:02:10.270 --> 00:02:11.780
so I'm gonna delete that line.

42
00:02:11.780 --> 00:02:20.740
So what is it doing for I in 12345 Do so I hair is a variable,

43
00:02:20.740 --> 00:02:23.600
which is telling that this container,

44
00:02:23.600 --> 00:02:24.720
which is the container name,

45
00:02:24.720 --> 00:02:25.240
is I.

46
00:02:25.240 --> 00:02:30.720
It holds the numbers 12345 And then what is asking you to do?

47
00:02:30.720 --> 00:02:36.260
The script is gonna do echo welcome variable one times variable.

48
00:02:36.260 --> 00:02:37.500
Two times wearable.

49
00:02:37.500 --> 00:02:39.960
Three very before variable five times.

50
00:02:39.960 --> 00:02:41.480
And then once it's done,

51
00:02:41.480 --> 00:02:42.650
it is done.

52
00:02:42.650 --> 00:02:49.790
So that's why we have to define done at the end for the four loop to finish doing what is

53
00:02:49.790 --> 00:02:50.190
doing.

54
00:02:50.190 --> 00:02:55.470
So I'm just going to save the file once the files saved again,

55
00:02:55.470 --> 00:02:57.850
you have to give execute permission.

56
00:02:57.850 --> 00:03:00.010
The permission is given.

57
00:03:00.010 --> 00:03:01.270
That's verified.

58
00:03:01.270 --> 00:03:01.850
Yes,

59
00:03:01.850 --> 00:03:03.730
the ABC filed is there.

60
00:03:03.730 --> 00:03:05.460
Let's see what's inside of it.

61
00:03:05.460 --> 00:03:07.010
Inside,

62
00:03:07.010 --> 00:03:09.150
If it is exactly has the same thing.

63
00:03:09.150 --> 00:03:10.350
Let's run the script,

64
00:03:10.350 --> 00:03:13.330
ABC and their ego.

65
00:03:13.330 --> 00:03:14.420
It's doing welcome.

66
00:03:14.420 --> 00:03:15.180
One times,

67
00:03:15.180 --> 00:03:15.890
two times,

68
00:03:15.890 --> 00:03:16.440
three times,

69
00:03:16.440 --> 00:03:17.920
four times and five times.

70
00:03:17.920 --> 00:03:18.940
So basically,

71
00:03:18.940 --> 00:03:23.230
if you have a repetitive task and on trust me,

72
00:03:23.230 --> 00:03:28.120
you're gonna be working in a corporate environment where you would have to do so many

73
00:03:28.120 --> 00:03:29.270
repetitive tasks.

74
00:03:29.270 --> 00:03:34.910
And this loops script is gonna become so handy for you that you will be creating scripts

75
00:03:34.910 --> 00:03:37.750
for every repetitive task that you will be doing every day.

76
00:03:37.750 --> 00:03:39.270
So this is,

77
00:03:39.270 --> 00:03:39.570
um,

78
00:03:39.570 --> 00:03:40.420
uh,

79
00:03:40.420 --> 00:03:42.250
putting five times.

80
00:03:42.250 --> 00:03:44.160
Let's look at the second script.

81
00:03:44.160 --> 00:03:45.400
So the second script,

82
00:03:45.400 --> 00:03:46.080
what is doing?

83
00:03:46.080 --> 00:03:49.890
It's basically doing the same thing.

84
00:03:49.890 --> 00:03:52.800
But this time it will just output the names.

85
00:03:52.800 --> 00:04:00.770
And I'm gonna make this X y Z as the name of the file.

86
00:04:00.770 --> 00:04:06.560
And it has always starts with the shell.

87
00:04:06.560 --> 00:04:08.500
That shell name has been bash,

88
00:04:08.500 --> 00:04:16.640
and now this time you're gonna put in some comment and we're gonna say this script will

89
00:04:16.640 --> 00:04:21.130
output Oh,

90
00:04:21.130 --> 00:04:31.820
put Imron with different actions because it will say See Imron,

91
00:04:31.820 --> 00:04:33.500
eat cm Ron Ron,

92
00:04:33.500 --> 00:04:39.310
see Iran jump and see Imron play So this is what this group is gonna do.

93
00:04:39.310 --> 00:04:42.130
So that's why I have put it in just a comment.

94
00:04:42.130 --> 00:04:43.980
You could put more comment Mint.

95
00:04:43.980 --> 00:04:44.400
See,

96
00:04:44.400 --> 00:04:51.350
the script is created by Imron absolute.

97
00:04:51.350 --> 00:04:53.190
And if you want put a date,

98
00:04:53.190 --> 00:04:58.050
you can Medals kept that up and the script starts right here.

99
00:04:58.050 --> 00:04:59.450
It's telling you,

100
00:04:59.450 --> 00:05:09.870
for I in again I is a variable in Is you putting inside of your variable and variable is

101
00:05:09.870 --> 00:05:11.150
just like a container.

102
00:05:11.150 --> 00:05:13.560
It's telling you put,

103
00:05:13.560 --> 00:05:14.350
eat,

104
00:05:14.350 --> 00:05:14.950
jump,

105
00:05:14.950 --> 00:05:16.270
run,

106
00:05:16.270 --> 00:05:24.130
play inside of a container called I Once it has all these three or so four words inside of

107
00:05:24.130 --> 00:05:24.820
the container,

108
00:05:24.820 --> 00:05:27.960
I then do what we're doing.

109
00:05:27.960 --> 00:05:29.180
We're echoing.

110
00:05:29.180 --> 00:05:32.150
See Imron Dollar I.

111
00:05:32.150 --> 00:05:38.930
The variable is already always be displayed with the dollar and the name of the variable.

112
00:05:38.930 --> 00:05:40.690
So it's telling it,

113
00:05:40.690 --> 00:05:42.530
dollar eye And then,

114
00:05:42.530 --> 00:05:48.890
once I once the script is gonna display every little every word in the container,

115
00:05:48.890 --> 00:05:51.080
then it's gonna be done.

116
00:05:51.080 --> 00:05:53.060
Once done,

117
00:05:53.060 --> 00:05:54.620
the script is created.

118
00:05:54.620 --> 00:05:59.970
Script has done its job and we will verify it.

119
00:05:59.970 --> 00:06:10.930
The Scriptures here Next thing you know by now is to change the permission on X y z.

120
00:06:10.930 --> 00:06:16.900
So it will have execute herbal permission and executed permission.

121
00:06:16.900 --> 00:06:17.970
Once again,

122
00:06:17.970 --> 00:06:21.620
I am reiterating again and again.

123
00:06:21.620 --> 00:06:25.290
If you cannot run the script is because you do not have execute permission.

124
00:06:25.290 --> 00:06:28.520
So we do have executed excusable permission.

125
00:06:28.520 --> 00:06:29.170
Awesome!

126
00:06:29.170 --> 00:06:29.760
Perfect.

127
00:06:29.760 --> 00:06:34.780
Let's run it X y z Oh,

128
00:06:34.780 --> 00:06:38.950
it say's bash X y z no such file or directory.

129
00:06:38.950 --> 00:06:40.270
Why is that?

130
00:06:40.270 --> 00:06:51.600
Of course we have put c it Z actually x y z So let's run it and they go see him.

131
00:06:51.600 --> 00:06:51.920
Ron,

132
00:06:51.920 --> 00:06:52.260
Eat,

133
00:06:52.260 --> 00:06:53.970
See and run Run!

134
00:06:53.970 --> 00:06:56.850
See and Ron jump cm Ron play.

135
00:06:56.850 --> 00:07:02.350
So again it is doing a repetitive tasks for you.

136
00:07:02.350 --> 00:07:11.110
So this four loop is a very strong statement in a scripting environment that the lets you

137
00:07:11.110 --> 00:07:19.130
run repetitive tack again and again so you don't have to do it yourself and spend time all

138
00:07:19.130 --> 00:07:21.750
day and creating those little tedious task.

139
00:07:21.750 --> 00:07:29.080
I want you to write other scripts that I have inside of this file.

140
00:07:29.080 --> 00:07:32.530
This file is again in your handouts.

141
00:07:32.530 --> 00:07:33.140
Um,

142
00:07:33.140 --> 00:07:35.410
I want you to download this handout.

143
00:07:35.410 --> 00:07:40.450
Create these little scripts again and run it and see what they do.

144
00:07:40.450 --> 00:07:42.950
It will be a great exercise for you.

