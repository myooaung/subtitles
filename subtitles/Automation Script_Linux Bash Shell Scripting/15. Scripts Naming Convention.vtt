WEBVTT
ï»¿1
00:00:00.000 --> 00:00:02.210
Okay.

2
00:00:02.210 --> 00:00:03.770
Script naming convention.

3
00:00:03.770 --> 00:00:07.250
What are the names that we should use when he created first?

4
00:00:07.250 --> 00:00:08.540
First of all,

5
00:00:08.540 --> 00:00:12.290
I will tell you that every time you need to create scripts in your links environment,

6
00:00:12.290 --> 00:00:13.650
always created directory,

7
00:00:13.650 --> 00:00:16.030
call it scripts or my scripts.

8
00:00:16.030 --> 00:00:21.530
Or if it's a project based scripts type of like http directory or,

9
00:00:21.530 --> 00:00:21.950
um,

10
00:00:21.950 --> 00:00:23.730
payroll directory,

11
00:00:23.730 --> 00:00:25.470
where you're going to create your scripts.

12
00:00:25.470 --> 00:00:27.800
Directive structure is very important,

13
00:00:27.800 --> 00:00:32.150
so you don't you don't create scripts all over the place.

14
00:00:32.150 --> 00:00:35.130
So follow the standard creep creature directory,

15
00:00:35.130 --> 00:00:39.100
which ever folder Just you picked that you want to create your directory in.

16
00:00:39.100 --> 00:00:39.850
That is fine,

17
00:00:39.850 --> 00:00:41.550
then script name.

18
00:00:41.550 --> 00:00:50.650
The script name should identify the function if you are going to get into a job or if your

19
00:00:50.650 --> 00:00:55.390
job functionality is revolves around creating a lot of scripts,

20
00:00:55.390 --> 00:00:59.850
doing a lot of automation than it's best that you name it,

21
00:00:59.850 --> 00:01:04.110
that matches its purpose if you wanna.

22
00:01:04.110 --> 00:01:08.070
If your script is going to check the date,

23
00:01:08.070 --> 00:01:08.940
um,

24
00:01:08.940 --> 00:01:13.950
checked today's date and you are naming it X Y Z.

25
00:01:13.950 --> 00:01:16.150
Then again,

26
00:01:16.150 --> 00:01:19.000
a few months from the day you create,

27
00:01:19.000 --> 00:01:21.350
you're gonna forget what X Y Z is for,

28
00:01:21.350 --> 00:01:24.910
so it is good that you name it like date or something.

29
00:01:24.910 --> 00:01:27.250
My date script or something like that.

30
00:01:27.250 --> 00:01:36.470
And the script should end with a shell if you are using bash so that I would say right the

31
00:01:36.470 --> 00:01:42.080
name off the name of the script Followed by dot B a s h.

32
00:01:42.080 --> 00:01:42.480
Now,

33
00:01:42.480 --> 00:01:46.000
this rule this rule should only be used,

34
00:01:46.000 --> 00:01:53.550
which I usually follow This rule when I am creating multiple shell scripts.

35
00:01:53.550 --> 00:01:57.240
Meaning if you were creating shell script in corn shell,

36
00:01:57.240 --> 00:01:58.310
seashell,

37
00:01:58.310 --> 00:02:00.830
pearl or bash,

38
00:02:00.830 --> 00:02:06.970
then you you need to have the extension at the end images dot s h dot corn shell.

39
00:02:06.970 --> 00:02:11.650
So these are the few three basic standards that you should have.

40
00:02:11.650 --> 00:02:17.830
Let me log into my linens machine and I will show you exactly what I wanted to cover here.

41
00:02:17.830 --> 00:02:23.430
So if you going to your the next machine and you log into your home directory,

42
00:02:23.430 --> 00:02:28.490
let's say my home directory is slash home slash i absolve in my home Director.

43
00:02:28.490 --> 00:02:29.850
You notice I have Ah,

44
00:02:29.850 --> 00:02:30.940
Derek,

45
00:02:30.940 --> 00:02:31.950
you call script.

46
00:02:31.950 --> 00:02:33.930
So this is what I mean.

47
00:02:33.930 --> 00:02:35.600
So every time you create a script,

48
00:02:35.600 --> 00:02:38.660
you need to create a directory first.

49
00:02:38.660 --> 00:02:41.870
So this way you go into your script directory.

50
00:02:41.870 --> 00:02:42.510
So they say,

51
00:02:42.510 --> 00:02:42.760
You know,

52
00:02:42.760 --> 00:02:46.780
you don't have to scroll through on and find out where your scripts are.

53
00:02:46.780 --> 00:02:48.370
So in my home directory,

54
00:02:48.370 --> 00:02:50.750
you'll see I have a very few files in directory,

55
00:02:50.750 --> 00:02:53.570
so it's very easy for me to find out because it's a test environment.

56
00:02:53.570 --> 00:02:57.440
But maybe you're working in an environment where you create thousands of directories.

57
00:02:57.440 --> 00:02:59.980
So that's why it's important to create a doctor.

58
00:02:59.980 --> 00:03:02.470
Call a script once you create this cryptic tree,

59
00:03:02.470 --> 00:03:05.730
then you could just go in and you'll see right here in my home directory,

60
00:03:05.730 --> 00:03:08.350
I have a script called X y Z Dash script.

61
00:03:08.350 --> 00:03:09.350
No,

62
00:03:09.350 --> 00:03:11.750
as I mentioned X Y Z desk grip,

63
00:03:11.750 --> 00:03:14.530
it's not a really good name.

64
00:03:14.530 --> 00:03:17.750
You cannot tell what exactly it does.

65
00:03:17.750 --> 00:03:19.870
So if I run the script,

66
00:03:19.870 --> 00:03:23.450
you'll see it actually spits out Hello,

67
00:03:23.450 --> 00:03:25.240
World on the screen.

68
00:03:25.240 --> 00:03:26.620
So that's exactly what it does.

69
00:03:26.620 --> 00:03:35.050
If I wanted to associated that script with the named and I should do is X Y Z scrip.

70
00:03:35.050 --> 00:03:39.680
Move It move is a command to change a name off a file.

71
00:03:39.680 --> 00:03:41.090
I'm sure you know that,

72
00:03:41.090 --> 00:03:42.610
and I will say,

73
00:03:42.610 --> 00:03:43.250
um,

74
00:03:43.250 --> 00:03:48.360
hello world or W or O complete name.

75
00:03:48.360 --> 00:03:48.950
That's fine.

76
00:03:48.950 --> 00:03:56.150
And I will run that command and you'll see now my script name has changed to hello world.

77
00:03:56.150 --> 00:03:56.770
Now,

78
00:03:56.770 --> 00:04:00.050
if I am using multiple shells,

79
00:04:00.050 --> 00:04:06.690
then I should label it as move Hello world dot So hello,

80
00:04:06.690 --> 00:04:09.830
world Dodd B A s h This way.

81
00:04:09.830 --> 00:04:14.860
If I'm creating multiple script and corn shell or C shell,

82
00:04:14.860 --> 00:04:18.040
then I would know that this script was created in Bash.

83
00:04:18.040 --> 00:04:21.870
So this is basically very quick lesson I want to cover.

84
00:04:21.870 --> 00:04:24.300
Remember that this is the standard that you follow.

85
00:04:24.300 --> 00:04:24.880
Also,

86
00:04:24.880 --> 00:04:30.410
if you are doing that type of work in your environment and that you decided to leave your

87
00:04:30.410 --> 00:04:37.490
job and move on to another career and then the person who's gonna come and replace you that

88
00:04:37.490 --> 00:04:42.810
person I'm telling you is gonna be so happy or even your manager is gonna be so happy that

89
00:04:42.810 --> 00:04:47.850
you are so organized that all the script that you created while you stayed with the company

90
00:04:47.850 --> 00:04:50.350
are all organized and where to find them

