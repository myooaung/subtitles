WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.770
Now we know what hooks we have available to us during the transition.

00:00:04.770 --> 00:00:07.635
We can now add them to our application.

00:00:07.635 --> 00:00:11.460
I'm going to use them to add some instructions to our app.

00:00:11.460 --> 00:00:16.170
These instructions will simply tell the user to edit the section on the left,

00:00:16.170 --> 00:00:20.310
and the changes will then appear on the card on the right-hand side.

00:00:20.310 --> 00:00:23.879
To do this, I'm going to go over to the App.vue,

00:00:23.879 --> 00:00:28.065
and then at the end to hook to the components transition.

00:00:28.065 --> 00:00:32.280
On the opening tag, I'm going to add these onto their own line,

00:00:32.280 --> 00:00:35.925
just so it's more readable, and then at the bottom,

00:00:35.925 --> 00:00:41.295
we're going to use @ Enter equals Enter.

00:00:41.295 --> 00:00:46.925
Here I'm using the @ symbol as a short hand for v on to call the Enter hook,

00:00:46.925 --> 00:00:49.910
then add in the method name of Enter.

00:00:49.910 --> 00:00:52.085
We can create this method soon.

00:00:52.085 --> 00:00:55.690
But first let's add our instruction, we want to display.

00:00:55.690 --> 00:00:58.350
I'm going to do this just about the transition,

00:00:58.350 --> 00:01:00.315
but below the nav header.

00:01:00.315 --> 00:01:03.005
I'm going to create a div to begin with,

00:01:03.005 --> 00:01:07.410
and this is going to be the surrounding section for our instructions.

00:01:07.910 --> 00:01:16.275
Let's create a div, and also the closing tag.

00:01:16.275 --> 00:01:20.980
Here I'm going to give you some ID of instructions,

00:01:22.490 --> 00:01:26.765
and then some classes to make it look a little bit nicer.

00:01:26.765 --> 00:01:32.190
Text center and also italic.

00:01:32.680 --> 00:01:37.400
Within this div, I'm going to create a new bootstrap div with the class of

00:01:37.400 --> 00:01:44.760
row, just like that.

00:01:44.760 --> 00:01:48.395
Then inside here I'm going to create two new sections.

00:01:48.395 --> 00:01:50.970
This is going to divide the page into,

00:01:50.970 --> 00:01:53.469
so it's going to be two, six column sections.

00:01:53.469 --> 00:01:55.360
The left-hand side will have some texts,

00:01:55.360 --> 00:01:58.570
to say make some changes in the editor area below.

00:01:58.570 --> 00:02:00.520
The right-hand side will then tell

00:02:00.520 --> 00:02:04.880
the user that the changes will appear below, on the right-hand side.

00:02:04.880 --> 00:02:07.840
Let's add another div.

00:02:11.660 --> 00:02:13.845
In fact, let it cluster this.

00:02:13.845 --> 00:02:17.670
Class or bootstraps col-sm-6,

00:02:17.670 --> 00:02:21.310
so it's half the width of the page.

00:02:21.560 --> 00:02:26.350
Then we'll add some p tags to add some text,

00:02:26.750 --> 00:02:30.070
and then nested inside here I'm going to add the m

00:02:30.070 --> 00:02:34.085
tags to add some emphasis onto the text.

00:02:34.085 --> 00:02:36.870
I'm going to begin with HTML entity.

00:02:36.870 --> 00:02:41.864
The ampersand, larr, then semicolon,

00:02:41.864 --> 00:02:44.475
and this is for the left arrow.

00:02:44.475 --> 00:02:50.235
We save that. We can see the left arrow is appearing on the side.

00:02:50.235 --> 00:02:59.050
Then I go ahead and add the text of make changes in the Edit Code Area below.

00:03:02.810 --> 00:03:06.765
Save that and let's see how this is looking.

00:03:06.765 --> 00:03:12.435
Great, that's exactly what we wanted of the text above the edit area.

00:03:12.435 --> 00:03:16.985
Now we'll copy this div and do the same for the output area.

00:03:16.985 --> 00:03:23.215
Copy this six column section and then paste in just below.

00:03:23.215 --> 00:03:26.895
Established need to change the text,

00:03:26.895 --> 00:03:37.275
and this time it's going to be under will show on the card, just like that.

00:03:37.275 --> 00:03:41.950
Then we need the HTML entity this time of the right arrow.

00:03:41.950 --> 00:03:46.780
The ampersand rarr semicolon.

00:03:48.830 --> 00:03:51.780
Great, so that's exactly what we wanted.

00:03:51.780 --> 00:03:54.425
We now have some instructions to the user.

00:03:54.425 --> 00:03:57.860
Now we can go ahead and setup the Enter method.

00:03:57.860 --> 00:04:01.955
We added the Enter method's name just above,

00:04:01.955 --> 00:04:05.285
sorry, just below on the transition of Enter.

00:04:05.285 --> 00:04:10.145
Now let's go down to the view instance and create a new method.

00:04:10.145 --> 00:04:15.270
Let's just do this just below the data.

00:04:16.340 --> 00:04:20.050
Let's add our methods into here,

00:04:21.950 --> 00:04:25.600
so number one is called Enter.

00:04:25.910 --> 00:04:29.470
If you create it in the usual way,

00:04:30.290 --> 00:04:33.980
and as with all events we've looked at previously,

00:04:33.980 --> 00:04:36.725
we do have some data pass to this method,

00:04:36.725 --> 00:04:40.110
which you pass into the premises of the function.

00:04:40.110 --> 00:04:43.910
I'm going to call this L, as the data passed to it is

00:04:43.910 --> 00:04:47.995
the element we are transitioning, so that makes sense.

00:04:47.995 --> 00:04:51.540
We can see this with a console log.

00:04:51.790 --> 00:04:56.405
Let's quickly add a console log into here and then output

00:04:56.405 --> 00:05:01.730
the value of L, I forgot to inspect.

00:05:01.730 --> 00:05:04.650
Then go to the console.

00:05:05.780 --> 00:05:10.200
We'll see this in action if we switch between the components.

00:05:11.110 --> 00:05:15.625
There we go. Now we see the elements which is being passed to it.

00:05:15.625 --> 00:05:19.265
This can be used at any JavaScript which we like.

00:05:19.265 --> 00:05:24.245
I'm going to use it to set the display type of the instructions to be none.

00:05:24.245 --> 00:05:28.190
This means instructions will initially show when the app is loaded,

00:05:28.190 --> 00:05:33.505
but then they'll be removed using JavaScript when we switch between components.

00:05:33.505 --> 00:05:38.660
Let's remove this console log and replace it with JavaScript.

00:05:38.660 --> 00:05:43.290
Document dot get element by ID.

00:05:44.450 --> 00:05:49.330
The ID we want to grab is this instruction section,

00:05:49.330 --> 00:05:53.030
which we give an ID of instructions just here.

00:05:53.030 --> 00:05:57.985
Now we can grab it and place it inside the brackets there.

00:05:57.985 --> 00:06:01.145
Then to remove it, we can set the style,

00:06:01.145 --> 00:06:05.550
though display to be equal to non.

00:06:09.170 --> 00:06:13.040
Of course, we can also use any of the hooks we looked at in

00:06:13.040 --> 00:06:17.165
the last video two if we need to. Let's save that.

00:06:17.165 --> 00:06:18.910
Now if we go over to the output,

00:06:18.910 --> 00:06:21.020
we can see the instructions still there.

00:06:21.020 --> 00:06:24.395
But if we switch to different components,

00:06:24.395 --> 00:06:26.345
we see that it's now removed.

00:06:26.345 --> 00:06:31.060
The instructions are only there when the user first visits the site.

00:06:31.060 --> 00:06:36.210
Of course, we can also use any other hooks we looked at too in the last video.

00:06:36.210 --> 00:06:38.825
There is one important thing to remember though,

00:06:38.825 --> 00:06:41.315
when using both Enter and Leave hooks.

00:06:41.315 --> 00:06:43.615
When using JavaScript only,

00:06:43.615 --> 00:06:48.195
rather than mixing JavaScript hooks along with CSS transitions,

00:06:48.195 --> 00:06:51.160
we have to add a second argument.

00:06:51.160 --> 00:06:54.755
The second argument is the done callback.

00:06:54.755 --> 00:07:03.040
We pass this into the parentheses of our method next to L. Separated by comma,

00:07:03.040 --> 00:07:06.470
we're going to add done as a second argument.

00:07:06.470 --> 00:07:11.320
Then we call it as a function at the end of our JavaScript code.

00:07:11.320 --> 00:07:13.825
Just at the end of this method,

00:07:13.825 --> 00:07:17.720
we can add done to call the function.

00:07:17.870 --> 00:07:20.415
This will then call it as a function,

00:07:20.415 --> 00:07:22.080
at the end of our code.

00:07:22.080 --> 00:07:26.214
CSS transitions have things such as time durations,

00:07:26.214 --> 00:07:29.570
the signal end of a transition or animation.

00:07:29.570 --> 00:07:32.980
When using JavaScript, we need to add done to the end of

00:07:32.980 --> 00:07:37.760
the code to tell Vue.js when the transition has actually finished.

00:07:37.760 --> 00:07:41.260
When we use this in combination with CSS,

00:07:41.260 --> 00:07:46.720
the done call back is optional when using hooks over that Enter and Leave,

00:07:46.720 --> 00:07:48.965
only L is required.

00:07:48.965 --> 00:07:51.970
Finally, it's considered good practice to tell

00:07:51.970 --> 00:07:56.185
Vue.js if we're only using JavaScript on a transition,

00:07:56.185 --> 00:08:00.665
rather than using both JavaScript and CSS, both together.

00:08:00.665 --> 00:08:05.580
This is how Vue.js can skip the CSS detection stage.

00:08:05.580 --> 00:08:09.805
We can do this by adding another attributes to the transition.

00:08:09.805 --> 00:08:13.220
Let's go back up to the transition opening tag,

00:08:13.220 --> 00:08:18.385
and just after the @ Enter and want to do a v-bind.

00:08:18.385 --> 00:08:25.260
CSS equals false. This of course,

00:08:25.260 --> 00:08:31.819
is not for our usecase because we also mixed the JavaScript hook with the fade CSS,

00:08:31.819 --> 00:08:34.755
so we can go ahead and remove this line.

00:08:34.755 --> 00:08:37.960
But it is useful to be aware of,

00:08:37.960 --> 00:08:40.515
and you may need it in the future.

00:08:40.515 --> 00:08:43.520
This is how we can use JavaScript hooks.

00:08:43.520 --> 00:08:49.410
In the next video, we'll look at how we can mix both transitions and animations.
