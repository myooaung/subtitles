WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.440 --> 00:00:02.955
Our app is now coming well.

00:00:02.955 --> 00:00:06.270
When we add a name to the input box and hit "Submit",

00:00:06.270 --> 00:00:10.060
the name is added to the attending div down at the bottom.

00:00:10.160 --> 00:00:15.240
As you can see there we still have the text saying no names added yet.

00:00:15.240 --> 00:00:18.195
We now want to look at conditional rendering.

00:00:18.195 --> 00:00:22.015
Conditional rendering is not as complicated as it may sound.

00:00:22.015 --> 00:00:25.400
It simply will render some content depending on

00:00:25.400 --> 00:00:29.760
the circumstances just like a normal JavaScript if-else statements,

00:00:29.760 --> 00:00:32.050
if you're familiar with these.

00:00:32.470 --> 00:00:37.160
In our case, if there are names inside the guest name array,

00:00:37.160 --> 00:00:39.270
we want to display them at the bottom.

00:00:39.270 --> 00:00:41.660
If there are no names inside the array,

00:00:41.660 --> 00:00:46.250
we only want to show the text saying no names added yet.

00:00:46.250 --> 00:00:50.670
We can add this inside the index.html page.

00:00:50.670 --> 00:00:55.105
If we locate the div with the class of card block,

00:00:55.105 --> 00:00:58.640
inside of our div with the class of card block,

00:00:58.640 --> 00:01:00.980
we have two divs inside there.

00:01:00.980 --> 00:01:03.350
The first is where we want to loop through

00:01:03.350 --> 00:01:06.875
the names and display them inside of the div tags.

00:01:06.875 --> 00:01:09.755
I'm going to add a if-statement to this div.

00:01:09.755 --> 00:01:15.480
Vue just makes it really easy for us to do with the v-if directive.

00:01:17.450 --> 00:01:20.045
Once you add this as an attribute,

00:01:20.045 --> 00:01:25.890
we then want to check if the length of the guest name array is greater than zero.

00:01:27.950 --> 00:01:30.945
If there are any names inside the array,

00:01:30.945 --> 00:01:35.170
the condition becomes true and the div is then rendered to the screen.

00:01:35.170 --> 00:01:40.115
Otherwise, if the array is empty then the condition is false.

00:01:40.115 --> 00:01:44.630
The following div will be rendered if we add a v-else statement.

00:01:44.630 --> 00:01:48.040
So let's add v-else to the following div.

00:01:48.040 --> 00:01:54.470
For the v-else to work it must immediately follow the elements with the v-if directive.

00:01:54.470 --> 00:01:57.935
If for example, there was another div in-between these two,

00:01:57.935 --> 00:02:00.790
the else statement would not work.

00:02:00.790 --> 00:02:06.540
Give that a save and head over to the browser and give that a refresh.

00:02:07.010 --> 00:02:11.040
Now we'll see the statement saying no names added yet.

00:02:11.040 --> 00:02:15.170
Then if we go up to our input box and add a name,

00:02:15.170 --> 00:02:18.860
we see the name is added and also the text is removed.

00:02:18.860 --> 00:02:24.770
Such are working good and I want to add a normal JavaScript if statement

00:02:24.770 --> 00:02:30.785
to our form submitted method and the reason for this is if we go over to our form,

00:02:30.785 --> 00:02:32.420
and we enter a name,

00:02:32.420 --> 00:02:34.325
we can see added to the list.

00:02:34.325 --> 00:02:38.480
So that's fine. However, if we just go to the input and press

00:02:38.480 --> 00:02:44.545
enter without a name we can still see that something is added to the array.

00:02:44.545 --> 00:02:47.480
Other than this, if-statement will make sure that

00:02:47.480 --> 00:02:50.870
name must be entered before it's pushed to the array.

00:02:50.870 --> 00:02:56.910
We can do this over in the form submitted method in the app.js file.

00:02:57.050 --> 00:03:01.400
Inside the function body we'll construct the existing code with

00:03:01.400 --> 00:03:07.070
an if-statements and the condition we want to check is if this.newNameText.

00:03:07.070 --> 00:03:17.095
Length is greater than zero or if some characters have been entered,

00:03:17.095 --> 00:03:20.720
then we want to go ahead and push this to the array.

00:03:25.940 --> 00:03:29.160
Let's give that a saved and test that in the browser.

00:03:29.160 --> 00:03:32.665
If we hit "Enter" on the form input,

00:03:32.665 --> 00:03:35.980
we see that no new name has been added to the array.

00:03:35.980 --> 00:03:39.650
Let's just add a new name and test that's working okay.

00:03:39.650 --> 00:03:43.110
There we go so all the p is fine.

00:03:43.110 --> 00:03:46.570
The last thing I want to do in this video is to display how many guests

00:03:46.570 --> 00:03:51.230
are attending or how many names we have inside the array.

00:03:52.620 --> 00:03:56.505
You can see if you just look up above the names,

00:03:56.505 --> 00:04:01.805
we can see there's a div with the class of card header with an attending section.

00:04:01.805 --> 00:04:06.095
Inside of the brackets I'm going to add the double curly braces,

00:04:06.095 --> 00:04:09.860
and then find out how many names is inside the guest name array.

00:04:09.860 --> 00:04:16.310
We simply type guestName.Length and this will output how many items are inside the array.

00:04:16.310 --> 00:04:21.370
Let's save that and add some names to the array and see if this works.

00:04:21.370 --> 00:04:25.955
Great. So we see that increasing by one with each name.

00:04:25.955 --> 00:04:28.610
Now this works because dot length is

00:04:28.610 --> 00:04:31.160
just a JavaScript property and we can

00:04:31.160 --> 00:04:34.520
add any JavaScript we want inside of these double braces.

00:04:34.520 --> 00:04:38.965
We're not just limited to outputting data from our Vue instance.

00:04:38.965 --> 00:04:45.235
For example, if we add 8 plus 10 also inside the double braces,

00:04:45.235 --> 00:04:50.990
and then go over to our app we can see that 10 is added to each number.

00:04:51.280 --> 00:04:55.770
So we'll just remove that because it's not needed for our app.

00:04:57.050 --> 00:05:01.340
Hopefully you can now see that we can now mix Vue data and

00:05:01.340 --> 00:05:04.700
also Vanilla JavaScript and we'll look at this more later on in

00:05:04.700 --> 00:05:09.200
the course but for now this is how conditional rendering or if-else statements

00:05:09.200 --> 00:05:14.700
work in Vue JS and you can now really see how simple it is to work with them.
