WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.440 --> 00:00:03.420
Now we've looked at two-way data binding.

00:00:03.420 --> 00:00:05.880
I want to now move on to capturing

00:00:05.880 --> 00:00:11.115
the value entered into the input fields and then push it to an array.

00:00:11.115 --> 00:00:15.510
This array will hold all the names entered into the input field

00:00:15.510 --> 00:00:20.445
and then we can list all of these names inside of the attendance section below.

00:00:20.445 --> 00:00:26.400
We want to go to the app.js and create our empty array.

00:00:26.400 --> 00:00:30.240
I'm going to add a new data property called guest

00:00:30.240 --> 00:00:35.250
name and initially we're going to set this to an empty array.

00:00:35.570 --> 00:00:40.930
Now this is created over in index.html.

00:00:41.570 --> 00:00:46.475
Now we need to create an event handler to push the names to this array.

00:00:46.475 --> 00:00:49.205
Once the submit button has been pressed,

00:00:49.205 --> 00:00:55.250
in vue.js, we use the V on Directive to listen to DOM events.

00:00:55.250 --> 00:00:59.480
These DOM events and not specific to view.js.

00:00:59.480 --> 00:01:03.485
We can use any of the DOM events normally available to us,

00:01:03.485 --> 00:01:05.930
such as onClick, keyup,

00:01:05.930 --> 00:01:08.495
keydown, and many, many more.

00:01:08.495 --> 00:01:12.695
Again, just like in the last video where we use V-model,

00:01:12.695 --> 00:01:16.580
this directive also has the v dash prefix.

00:01:16.580 --> 00:01:20.990
Next we locate our form elements and then as an attribute,

00:01:20.990 --> 00:01:23.545
we can add our V on Directive.

00:01:23.545 --> 00:01:25.415
First we add V on,

00:01:25.415 --> 00:01:30.155
and then after the colon we add the name of the event handler we want to trigger.

00:01:30.155 --> 00:01:35.340
In our case, we're going to listen for the submit event and

00:01:35.340 --> 00:01:41.170
then we add the name of the method which we want to run once the form has been submitted.

00:01:41.960 --> 00:01:44.315
After the name of the events,

00:01:44.315 --> 00:01:45.605
in our case of myths,

00:01:45.605 --> 00:01:48.200
we can also add event modifiers.

00:01:48.200 --> 00:01:51.995
A common event modifier is to prevent the defaults.

00:01:51.995 --> 00:01:55.760
If you use JavaScript for working with inputs and forms of all,

00:01:55.760 --> 00:01:59.860
you may have already used event dot prevent default.

00:01:59.860 --> 00:02:02.615
This stops the default behavior,

00:02:02.615 --> 00:02:06.155
which for the submit button is to refresh the page.

00:02:06.155 --> 00:02:10.880
Few just makes this really easy for us to address behavior to our event

00:02:10.880 --> 00:02:17.230
handlers simply by adding it after the event handler name just like this.

00:02:17.360 --> 00:02:23.020
Prevent the default we'll stop our data from being lost when the page is refreshed.

00:02:23.020 --> 00:02:25.820
This also over event modifiers too,

00:02:25.820 --> 00:02:28.235
which we'll cover later on in this course.

00:02:28.235 --> 00:02:32.000
For now we've added form submitted as the name of our method,

00:02:32.000 --> 00:02:35.690
but not yet created it inside of our view instance.

00:02:35.690 --> 00:02:39.575
Let's do this now over in the app dot js.

00:02:39.575 --> 00:02:44.720
Just like when we added the data property objects inside of the view instance,

00:02:44.720 --> 00:02:48.115
we can also use the reserved methods keyword.

00:02:48.115 --> 00:02:51.060
Methods also takes in an object,

00:02:51.060 --> 00:02:54.020
so we'll open up a set of curly braces.

00:02:54.020 --> 00:02:58.280
Inside here we can add our first method of forms submitted.

00:02:58.280 --> 00:03:02.335
This method is triggered each time the form is submitted.

00:03:02.335 --> 00:03:05.510
Form submitted is a function and inside

00:03:05.510 --> 00:03:08.705
this function we can begin by adding a console log,

00:03:08.705 --> 00:03:10.780
just to check this is working okay.

00:03:10.780 --> 00:03:15.740
We want to log to the console the value of new name text,

00:03:15.740 --> 00:03:18.475
which is linked to the input field.

00:03:18.475 --> 00:03:24.365
This keyword allows us to access all the properties inside of the view instance.

00:03:24.365 --> 00:03:26.810
To access the new name text property,

00:03:26.810 --> 00:03:29.975
we use this dot new name text.

00:03:29.975 --> 00:03:33.055
We've seen this a lot throughout the course.

00:03:33.055 --> 00:03:39.300
Now we'll go back over to the app and then go inside the console.

00:03:39.300 --> 00:03:42.290
We can type a name inside of the input field,

00:03:42.290 --> 00:03:46.170
and we should see the value appearing inside the console.

00:03:46.250 --> 00:03:49.595
Now we know this method is being triggered okay.

00:03:49.595 --> 00:03:55.720
We can now finish our method by pushing the new name value to the guest name array.

00:03:55.720 --> 00:03:58.695
Let's first remove the console log,

00:03:58.695 --> 00:04:02.780
and in the place of this we can select this dot guest name,

00:04:02.780 --> 00:04:05.345
which is the name of our array.

00:04:05.345 --> 00:04:07.130
Because this is an array,

00:04:07.130 --> 00:04:09.660
we can use the push method.

00:04:10.100 --> 00:04:12.270
Then inside the brackets,

00:04:12.270 --> 00:04:15.580
we'll tell vue.js, What we want to push onto the array.

00:04:15.580 --> 00:04:19.735
In our case, we want to push the value of the input fields,

00:04:19.735 --> 00:04:21.640
so we can select our word at this,

00:04:21.640 --> 00:04:24.230
dot new name text.

00:04:24.920 --> 00:04:27.295
Then to finish off this method,

00:04:27.295 --> 00:04:31.540
the last thing I want to do is once a name is being added to the array,

00:04:31.540 --> 00:04:34.765
we want to just clear the input field by setting

00:04:34.765 --> 00:04:42.910
this dot new name text to once again set to an empty string.

00:04:43.640 --> 00:04:47.185
To see the values which are inside of the array,

00:04:47.185 --> 00:04:49.465
we can use texts interpolation again,

00:04:49.465 --> 00:04:56.630
or the double curly braces syntax to output this inside the index.html.

00:04:56.630 --> 00:04:59.390
If we look for the level four heading,

00:04:59.390 --> 00:05:03.010
which has the text of no names added yet,

00:05:03.010 --> 00:05:08.750
we can use the curly brace syntax to output the guest name array.

00:05:11.810 --> 00:05:17.040
Now let's save that and we head over to Chrome and refresh the browser.

00:05:17.040 --> 00:05:22.130
We can now add names to the input field and now we've hit submit.

00:05:22.610 --> 00:05:27.890
This should now be pushed to the array and then outputed to the screen.

00:05:27.890 --> 00:05:31.805
We have the new names now added to the array, which is great.

00:05:31.805 --> 00:05:35.120
The names are just displaying as they are inside of the array,

00:05:35.120 --> 00:05:37.550
so at the moment it doesn't look very good.

00:05:37.550 --> 00:05:40.400
But not to worry, we'll fix this in the next video.

00:05:40.400 --> 00:05:44.370
We'll take a look at list rendering with For loops.
