WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.110 --> 00:00:03.470
We have our card sections completed now,

00:00:03.470 --> 00:00:07.860
and we can switch between the different views by clicking on the menu links.

00:00:07.860 --> 00:00:11.910
Now it's time to create the text input components.

00:00:11.910 --> 00:00:16.050
These components will be our first reusable components.

00:00:16.050 --> 00:00:22.560
So we can create them once and then use a multiple times in the app, as you can see here.

00:00:22.560 --> 00:00:25.860
The components itself is pretty simple.

00:00:25.860 --> 00:00:29.700
It basically consists of a text area inputs.

00:00:29.700 --> 00:00:36.685
It uses two-way data binding with V-model to update a data property when a user types.

00:00:36.685 --> 00:00:42.205
This data property is animated to the parent component's foolish to venues.

00:00:42.205 --> 00:00:45.810
When we get to the text, I'll put component.

00:00:46.130 --> 00:00:49.490
Everything we do for this component we already

00:00:49.490 --> 00:00:52.460
know and we've covered so far in this course.

00:00:52.460 --> 00:00:58.470
Let's begin by creating the components called text inputs.view.

00:00:58.780 --> 00:01:02.455
If you go over to the count section.

00:01:02.455 --> 00:01:06.410
We can add our new components inside here.

00:01:06.410 --> 00:01:13.320
So text input, with the.view extension.

00:01:13.520 --> 00:01:17.589
Then we need to add our usual templates.

00:01:17.750 --> 00:01:23.850
So add these at the top with the opening and closing tags.

00:01:27.140 --> 00:01:32.080
You can also add our script tags below,

00:01:34.580 --> 00:01:37.870
and we use these very soon.

00:01:39.720 --> 00:01:44.065
We don't need the style tags in this particular components.

00:01:44.065 --> 00:01:48.170
As the Bootstrap classes will take care of all styling photos.

00:01:48.170 --> 00:01:50.475
Our template you straightforward.

00:01:50.475 --> 00:01:54.300
All you need to do is add some Bootstrap divs for layout,

00:01:54.300 --> 00:01:57.275
a heading, and then a text area.

00:01:57.275 --> 00:02:00.175
So let's begin by creating our first div,

00:02:00.175 --> 00:02:05.300
which is going to have the class of row.

00:02:08.480 --> 00:02:10.560
Then inside this row,

00:02:10.560 --> 00:02:13.485
we going to add our 12-column grid.

00:02:13.485 --> 00:02:17.850
So add a nested div inside of there,

00:02:18.010 --> 00:02:22.795
and then we can add some further Bootstrap classes of coal,

00:02:22.795 --> 00:02:27.970
SM 12 to make it the full width of the page,

00:02:28.550 --> 00:02:33.370
and then inside here we can add our container for the text area.

00:02:33.370 --> 00:02:38.660
So let's add a Bootstrap div with the class of form group.

00:02:42.590 --> 00:02:46.120
This will just give you some nice style in.

00:02:46.940 --> 00:02:49.030
At the top of this component,

00:02:49.030 --> 00:02:51.505
we want to add a h for heading,

00:02:51.505 --> 00:02:56.990
and this is going to add the text of edit text.

00:03:00.470 --> 00:03:03.690
This is how we use, can clearly see that this is

00:03:03.690 --> 00:03:07.610
the edit area while the needs type in some text,

00:03:07.650 --> 00:03:11.330
and then we can add our text area.

00:03:13.620 --> 00:03:18.730
So I'm just going to remove the name and the ID replace

00:03:18.730 --> 00:03:23.870
this with a Bootstrap class of form control.

00:03:25.220 --> 00:03:30.624
So columns are going to make this a little bit bigger and make this 50 columns,

00:03:30.624 --> 00:03:33.980
and we only need four rows.

00:03:37.280 --> 00:03:41.049
I'm then going to add a placeholder,

00:03:43.760 --> 00:03:48.165
and the text we going to add is just, adds text here.

00:03:48.165 --> 00:03:51.769
Just to give the user some instructions.

00:03:53.970 --> 00:03:59.800
We then need a data property to store the text inputted from the user.

00:03:59.800 --> 00:04:04.480
So we can then emit it to the parent components this data,

00:04:04.480 --> 00:04:09.290
we'll use two-way data binding to be updated from this text area.

00:04:09.290 --> 00:04:11.220
Down in our script,

00:04:11.220 --> 00:04:13.905
we can create our objects.

00:04:13.905 --> 00:04:24.270
Export defaults, and let's create our data property in the usual way,

00:04:27.710 --> 00:04:34.440
and I'm going to return the data property of text box inputs.

00:04:35.660 --> 00:04:39.590
Initially I'm going to set this to an empty string.

00:04:39.590 --> 00:04:43.320
Since no text being added inside here yet.

00:04:43.540 --> 00:04:48.365
Now have these text box inputs as a data property.

00:04:48.365 --> 00:04:54.185
We can add it to our text area using the model to bind it.

00:04:54.185 --> 00:04:59.930
So just after the placeholder attribute we want to add this on a new line.

00:04:59.930 --> 00:05:06.830
So V model, and this is going to be text box input.

00:05:09.360 --> 00:05:12.820
So now we'll have the two-way data binding setup.

00:05:12.820 --> 00:05:17.680
We can now emit the value of this text area to the parents.

00:05:17.680 --> 00:05:23.660
This can be achieved by adding a method which is called On Each Keyboard Events.

00:05:25.370 --> 00:05:27.595
Still within this text area,

00:05:27.595 --> 00:05:33.460
I'm going to add an event listener to trigger a new method called Text Changed.

00:05:33.460 --> 00:05:36.280
Each time a key has been released.

00:05:36.280 --> 00:05:42.450
So then we add the @ symbol and then the events of key-up.

00:05:42.450 --> 00:05:44.935
So each time a key is being released,

00:05:44.935 --> 00:05:48.380
we can trigger an event called text changed.

00:05:50.330 --> 00:05:56.865
Then we can create our method below to trigger the custom emit events.

00:05:56.865 --> 00:05:59.740
So down inside the script,

00:05:59.740 --> 00:06:03.280
underneath the data objects add a comma,

00:06:03.280 --> 00:06:05.840
and then we can add our methods.

00:06:09.200 --> 00:06:12.940
This method of course needs to be the same in,

00:06:12.940 --> 00:06:16.250
what we have here of text changed,

00:06:20.270 --> 00:06:24.830
and then inside the function body we want to emit this data.

00:06:24.830 --> 00:06:28.680
So this.$ sign emits.

00:06:28.680 --> 00:06:33.559
Then remember from before, we need to pass in two arguments.

00:06:33.559 --> 00:06:36.455
The first one is a string value,

00:06:36.455 --> 00:06:39.635
and this is the name of our events.

00:06:39.635 --> 00:06:44.910
I'm going to call this display text changed.

00:06:45.110 --> 00:06:48.620
You can use a different name if you prefer.

00:06:48.620 --> 00:06:52.390
Well, I think this name describes what we do in fine,

00:06:52.390 --> 00:06:57.185
and then the second parameter is the value which you want to send.

00:06:57.185 --> 00:07:02.970
So this starts text box input, which we have here.

00:07:03.190 --> 00:07:06.995
So at the end as the second argument.

00:07:06.995 --> 00:07:12.110
So now we have the custom events called display text changed.

00:07:12.110 --> 00:07:15.830
We can add the component to the conference dot

00:07:15.830 --> 00:07:20.735
v file as a child components and listen for the event.

00:07:20.735 --> 00:07:24.410
But we'll go back over to the slides as we can see here.

00:07:24.410 --> 00:07:27.950
We use the same component three times.

00:07:27.950 --> 00:07:30.365
If we open up the card fronts,

00:07:30.365 --> 00:07:36.980
the view file, we can add these components inside of here.

00:07:36.980 --> 00:07:42.005
First, we need to import the components inside of the script.

00:07:42.005 --> 00:07:43.910
So just like we've done before,

00:07:43.910 --> 00:07:52.980
we can impulse the text input components and then add the file path which is dot slash.

00:07:53.620 --> 00:07:58.310
This one is just going to be text inputs.

00:07:58.310 --> 00:08:03.970
So this is because text input is in the same folder as card fronts.

00:08:03.970 --> 00:08:10.225
We don't need to go into the card or components folder because we're already there.

00:08:10.225 --> 00:08:14.600
Then we need to create our components, dates property.

00:08:14.600 --> 00:08:21.120
So export, default, then add our components.

00:08:24.310 --> 00:08:27.770
So I'm going to add a CC prefix,

00:08:27.770 --> 00:08:30.005
which stands for creative cards.

00:08:30.005 --> 00:08:33.155
This is to make sure the name is a little less generic,

00:08:33.155 --> 00:08:35.825
more tailored to our app.

00:08:35.825 --> 00:08:39.390
So CC text inputs,

00:08:41.660 --> 00:08:45.820
which is alias for text input.

00:08:46.790 --> 00:08:53.345
The CC may also avoid any naming conflicts with any view JS Plugins or libraries,

00:08:53.345 --> 00:08:56.300
which we could add to in the future.

00:08:56.300 --> 00:09:00.260
So let's save that and then move up to the template section.

00:09:00.260 --> 00:09:02.915
Then inside of the edit area,

00:09:02.915 --> 00:09:04.955
we're going to add our components.

00:09:04.955 --> 00:09:09.030
So CC text input.

00:09:16.820 --> 00:09:20.870
Then if you make sure your development server is up and running,

00:09:20.870 --> 00:09:25.970
save, and then go over and go to the front.

00:09:25.970 --> 00:09:31.620
We should now see that the text area component is now added to our app.

00:09:31.910 --> 00:09:34.910
We'll leave this video there and we'll come back and

00:09:34.910 --> 00:09:39.030
continue with these text inputs in the next video.
