WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:03.440 --> 00:00:08.745
In the last video, began to look at the single file view templates.

00:00:08.745 --> 00:00:11.910
Now I want to take a look at the way scripts work,

00:00:11.910 --> 00:00:16.920
particularly using the data property which you've already used during this course.

00:00:16.920 --> 00:00:20.670
First, let's make sure our new app is running.

00:00:20.670 --> 00:00:23.520
If your server is to run, great,

00:00:23.520 --> 00:00:25.170
you can just head over to your browser,

00:00:25.170 --> 00:00:27.990
and see the app running like this.

00:00:27.990 --> 00:00:31.890
If you come back after a break and the serve is not running,

00:00:31.890 --> 00:00:34.890
we need to restart the development server.

00:00:34.890 --> 00:00:41.850
Go over to Visual Studio Code and then go to the integrated terminal.

00:00:41.850 --> 00:00:44.160
If using the standard terminal,

00:00:44.160 --> 00:00:49.100
is not using their one inside of Visual Studio or your text editor.

00:00:49.100 --> 00:00:53.920
You may need to use Cd to change into the current directory,

00:00:53.920 --> 00:00:58.035
and run mpm, run dev from there.

00:00:58.035 --> 00:01:02.420
Inside the terminal, my development server is still running.

00:01:02.420 --> 00:01:05.885
I'm launch closes term, we have control and then c,

00:01:05.885 --> 00:01:09.810
and then we're taken back to the project directory.

00:01:10.000 --> 00:01:17.280
To get to the front and again, we need to run mpm run dev, and then hit enter.

00:01:18.340 --> 00:01:21.799
Then once you get the browser reopening,

00:01:21.799 --> 00:01:25.715
if the server is running fine but doesn't open in the browser,

00:01:25.715 --> 00:01:28.655
you can open up by typing localhost :

00:01:28.655 --> 00:01:33.750
8080 inside the browser there, and then it should run.

00:01:34.460 --> 00:01:37.940
The homepage you see is made up of the logo,

00:01:37.940 --> 00:01:42.590
the essential links, and also the ecosystem links.

00:01:42.590 --> 00:01:49.115
We can see these if you go over to the project and then open up the app.vue file.

00:01:49.115 --> 00:01:53.285
Always code should be contained inside of the template tags,

00:01:53.285 --> 00:01:54.920
which is the top section,

00:01:54.920 --> 00:02:01.115
so that we have the image link up the very top.

00:02:01.115 --> 00:02:07.540
We then have the ecosystem heading followed by the links which we've seen before.

00:02:07.580 --> 00:02:10.560
This is all just normal html,

00:02:10.560 --> 00:02:15.110
and you can even mix in view data just like we've previously done.

00:02:15.110 --> 00:02:19.685
In the script below, if we go to our view instance,

00:02:19.685 --> 00:02:22.685
we have the message data property,

00:02:22.685 --> 00:02:26.570
which says, welcome to your vue.js app.

00:02:26.570 --> 00:02:29.420
We can see if we go over to the browser,

00:02:29.420 --> 00:02:32.610
we don't have these displaying on the page.

00:02:33.080 --> 00:02:36.755
We can easily add this into our template.

00:02:36.755 --> 00:02:39.665
I'm going to add this just about the top,

00:02:39.665 --> 00:02:42.515
just by open up the double curly braces.

00:02:42.515 --> 00:02:49.620
Then we can add the message dates property into there, and save that.

00:02:49.620 --> 00:02:52.540
Then now if we go over to the browser,

00:02:52.540 --> 00:02:57.550
we can see it says welcome to your vue. Js app.

00:02:57.590 --> 00:03:01.895
You may have noticed that we didn't need to do a page refresh this time.

00:03:01.895 --> 00:03:04.115
This is the hot reloading,

00:03:04.115 --> 00:03:06.880
which is provided by web pack.

00:03:06.880 --> 00:03:11.680
If we go to the package.js on file,

00:03:11.810 --> 00:03:15.345
when we run the mpm run def.

00:03:15.345 --> 00:03:19.830
We can see that also runs the dash hot command,

00:03:19.830 --> 00:03:25.145
and this is where the hot reloading is coming from. Back over in the app.

00:03:25.145 --> 00:03:29.270
vue, if we only have a small app,

00:03:29.270 --> 00:03:34.015
we can create our whole application inside of this single template.

00:03:34.015 --> 00:03:39.155
We will be breaking this app into smaller components in the next section.

00:03:39.155 --> 00:03:42.595
To make things more self-contained and manageable,

00:03:42.595 --> 00:03:45.665
you'll know is the inside of our script tags,

00:03:45.665 --> 00:03:51.245
our view instance looks a little different from what we've used in the last projects.

00:03:51.245 --> 00:03:53.915
We can still include all the same methods,

00:03:53.915 --> 00:03:57.635
computed properties, and watches, for example.

00:03:57.635 --> 00:04:02.075
However, the data property works a little differently.

00:04:02.075 --> 00:04:07.295
The scripts and also even the style section is not required to run.

00:04:07.295 --> 00:04:12.600
We can even delete it and then refresh the browser.

00:04:12.600 --> 00:04:15.225
You can see that the absolute runs,

00:04:15.225 --> 00:04:19.130
but without the message data displaying, of course.

00:04:19.130 --> 00:04:23.435
Let's add it back in and we can take a look at the differences.

00:04:23.435 --> 00:04:27.480
First of all, we need to create our script tags.

00:04:29.180 --> 00:04:33.499
The first thing we need to do is to do an export,

00:04:33.499 --> 00:04:41.245
default, and then surroundings in the code raises.

00:04:41.245 --> 00:04:44.990
This is part of the ES6 module system.

00:04:44.990 --> 00:04:48.260
Exporting the module basically means it will now be

00:04:48.260 --> 00:04:52.735
available to use as an import, inside of files.

00:04:52.735 --> 00:04:57.435
We can see this import inside of the main js.

00:04:57.435 --> 00:05:03.310
The app.vue file is imported by specifying a file path,

00:05:03.310 --> 00:05:05.215
and also given the file name,

00:05:05.215 --> 00:05:07.640
in this case of app.

00:05:07.960 --> 00:05:11.780
We will export all the modules or components during

00:05:11.780 --> 00:05:14.995
this project and import them where required,

00:05:14.995 --> 00:05:17.885
so you get lots of practice of doing this.

00:05:17.885 --> 00:05:21.045
Let's go back over to the app.vue.

00:05:21.045 --> 00:05:25.395
Now if we try to add our message property back in,

00:05:25.395 --> 00:05:27.590
if we try to add our data,

00:05:27.590 --> 00:05:29.960
just like we did in the last video,

00:05:29.960 --> 00:05:33.220
by creating our data objects,

00:05:33.770 --> 00:05:37.950
and then set the message equal to a string,

00:05:40.060 --> 00:05:43.010
I'll just add welcome to that.

00:05:43.010 --> 00:05:47.880
If we save this and go over to the browser, let's take a look.

00:05:48.080 --> 00:05:53.450
We don't have the message property of welcome displayed on the screen.

00:05:53.450 --> 00:06:01.755
Let's open up the developer tools and then go into the console. We have some errors.

00:06:01.755 --> 00:06:06.275
First we see that the data option needs to be a function.

00:06:06.275 --> 00:06:09.320
Then this also causes the second warning

00:06:09.320 --> 00:06:13.030
telling us that the message property is not defined.

00:06:13.030 --> 00:06:15.110
To fix this, we need to include

00:06:15.110 --> 00:06:19.920
the data property as a function which then returns some data.

00:06:20.060 --> 00:06:26.940
To do this, return the data property into a function just like this.

00:06:27.410 --> 00:06:29.570
Then just inside of that,

00:06:29.570 --> 00:06:32.190
we need to return some data.

00:06:32.770 --> 00:06:37.835
Open up the double curly braces and then inside this return statement,

00:06:37.835 --> 00:06:45.735
we can add our data property, just like that.

00:06:45.735 --> 00:06:49.460
Now if we save this and go over to the browser,

00:06:49.460 --> 00:06:52.025
we now lose the error messages,

00:06:52.025 --> 00:06:56.100
which is great, and we now have the welcome message displayed.

00:06:56.170 --> 00:06:58.970
There is a good reason why we need to return

00:06:58.970 --> 00:07:02.870
the data inside of a function, when using components.

00:07:02.870 --> 00:07:07.070
This is because components are meant to be reusable.

00:07:07.070 --> 00:07:12.200
If you have more than one component sharing the exact same data property,

00:07:12.200 --> 00:07:16.705
all components will I need to share the same value of the data,

00:07:16.705 --> 00:07:21.135
they will also all be updated together, when there is a change.

00:07:21.135 --> 00:07:27.445
Adding data as a function allows all components to keep their own internal states.

00:07:27.445 --> 00:07:33.800
Using our example, we could have multiple components which all need a message property,

00:07:33.800 --> 00:07:38.689
but using a function, the message can now be different for each component.

00:07:38.689 --> 00:07:42.770
This allows components to share a common template which

00:07:42.770 --> 00:07:47.520
still keep track of its own data or internal states if required.
