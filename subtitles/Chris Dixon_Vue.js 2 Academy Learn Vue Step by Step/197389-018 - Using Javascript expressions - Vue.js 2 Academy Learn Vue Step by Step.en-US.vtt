WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.040 --> 00:00:03.750
Inside of our app, we have displayed

00:00:03.750 --> 00:00:07.950
some interactive data by adding dates properties into our view instance.

00:00:07.950 --> 00:00:11.790
Then I'll put in them using the double curly braces.

00:00:11.790 --> 00:00:13.695
When using these curly braces,

00:00:13.695 --> 00:00:15.990
we can do more than just add the name of

00:00:15.990 --> 00:00:20.400
the date property which you want to display inside of our templates.

00:00:20.400 --> 00:00:24.860
We can actually make use of JavaScript expressions or

00:00:24.860 --> 00:00:29.275
even combine our view data with regular JavaScript.

00:00:29.275 --> 00:00:35.735
First, let's go over to our app.js and add some names into our guest name array.

00:00:35.735 --> 00:00:37.730
Just to initially display,

00:00:37.730 --> 00:00:40.435
you can use any names that you want.

00:00:40.435 --> 00:00:46.320
I'm going to add the names of James, Chris, and Sam.

00:00:47.600 --> 00:00:50.120
If you're using different names,

00:00:50.120 --> 00:00:52.085
make sure these names and mixed up.

00:00:52.085 --> 00:00:53.945
They're not in alphabetical order.

00:00:53.945 --> 00:00:57.590
We'll see why soon. Save that.

00:00:57.590 --> 00:00:59.165
If we go over to the browser,

00:00:59.165 --> 00:01:02.490
we can see these names are initially added.

00:01:02.660 --> 00:01:07.160
Now let's go over to our index page and take a look at how we can use

00:01:07.160 --> 00:01:11.790
JavaScript expressions inside of our double curly braces.

00:01:13.160 --> 00:01:17.850
Currently inside the full loop we're outputting the name.

00:01:17.850 --> 00:01:20.345
We can combine this with JavaScript,

00:01:20.345 --> 00:01:22.460
such as using two lowercase.

00:01:22.460 --> 00:01:29.249
This will make sure that any capsule as inside of the name is changed to lowercase.

00:01:29.900 --> 00:01:33.470
Let's take a look at this inside the browser.

00:01:33.470 --> 00:01:38.619
Now we can see that the first letter of each name is now lowercase.

00:01:38.619 --> 00:01:43.809
This is a mixture of using vue.js and regular JavaScript.

00:01:43.809 --> 00:01:48.860
We can also go even further and add a string until the end of this.

00:01:48.860 --> 00:01:51.305
Name dot two lowercase,

00:01:51.305 --> 00:01:57.165
then plus a string of is awesome. Give that a go.

00:01:57.165 --> 00:01:59.715
Then over in Chrome, let's refresh.

00:01:59.715 --> 00:02:03.515
Now we've got the string added onto the end of the name.

00:02:03.515 --> 00:02:06.395
There is a limitation, however,

00:02:06.395 --> 00:02:10.835
that we can only use a single JavaScript expression.

00:02:10.835 --> 00:02:16.445
We can't use things like a if-else statement inside of here.

00:02:16.445 --> 00:02:21.950
It's also not the way to go if we're using the same code over and over again.

00:02:21.950 --> 00:02:25.580
Restricting the amount of JavaScript we can use inside

00:02:25.580 --> 00:02:28.879
of our templates makes our code more manageable.

00:02:28.879 --> 00:02:33.815
As then we need to move all complex logic inside of the view instance.

00:02:33.815 --> 00:02:36.289
This makes our code more reusable.

00:02:36.289 --> 00:02:40.915
We can reuse it in different areas of our app when needed.

00:02:40.915 --> 00:02:46.135
We will look at how to handle more complex conditions in the next section.

00:02:46.135 --> 00:02:49.775
But this is useful for performing simple tasks.

00:02:49.775 --> 00:02:53.539
We also have access to the full power of JavaScript's,

00:02:53.539 --> 00:02:56.885
even when not using vue.js data.

00:02:56.885 --> 00:03:00.260
Add small curly braces just below.

00:03:00.260 --> 00:03:03.895
For example, we can add a math calculation.

00:03:03.895 --> 00:03:06.720
Five divided by two.

00:03:06.720 --> 00:03:09.670
Let's see it on the screen.

00:03:11.450 --> 00:03:14.160
Okay, and also blow this,

00:03:14.160 --> 00:03:16.150
if we go back to the index page,

00:03:16.150 --> 00:03:19.330
we can add a math dot random for example.

00:03:19.330 --> 00:03:26.490
Math dot random between the curly braces and then save.

00:03:26.490 --> 00:03:30.770
Now we can also see the random number on the screen too,

00:03:31.320 --> 00:03:36.970
well, not just restricted to output and this JavaScript using double curly braces.

00:03:36.970 --> 00:03:41.500
You can also use it anywhere we have access to our view instance.

00:03:41.500 --> 00:03:49.340
For example, we can also use it inside our V HTML directive within the quotations.

00:03:49.340 --> 00:03:52.950
Let's go up to the V HTML directive.

00:03:52.950 --> 00:03:55.130
Then inside the quotations,

00:03:55.130 --> 00:04:01.455
we can add math dot random and save that.

00:04:01.455 --> 00:04:04.860
Now if we refresh the page and check,

00:04:05.350 --> 00:04:09.420
we see a random number now on screen.

00:04:10.030 --> 00:04:15.330
I'm just going to quickly changes back to name and save that.

00:04:15.330 --> 00:04:21.210
This is how we can use the full power of JavaScript inside of our view templates.
