WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.200 --> 00:00:02.700
In our guest list app, currently,

00:00:02.700 --> 00:00:08.310
we only use one Vue js instance to control the whole of our application.

00:00:08.310 --> 00:00:11.265
This is fine and small up like this one.

00:00:11.265 --> 00:00:13.170
But in large apps,

00:00:13.170 --> 00:00:15.510
we may find it more convenient to split

00:00:15.510 --> 00:00:20.495
certain functionality or certain data into multiple instances.

00:00:20.495 --> 00:00:24.395
Using multiple instances is perfectly fine to do,

00:00:24.395 --> 00:00:27.125
may even make sense in some cases,

00:00:27.125 --> 00:00:30.685
where we want the code to be contained into sections.

00:00:30.685 --> 00:00:32.895
We do this just as before.

00:00:32.895 --> 00:00:37.790
We create a new Vue instance and also a new HTML section,

00:00:37.790 --> 00:00:41.045
such as the div to bind to our data.

00:00:41.045 --> 00:00:43.250
Let's get started with this now.

00:00:43.250 --> 00:00:47.160
If we go over to the index.html,

00:00:47.920 --> 00:00:54.660
we currently have the first view instance linked to this div with the id of app.

00:00:55.060 --> 00:00:57.695
The first thing I want to do is to cut

00:00:57.695 --> 00:01:03.160
the opening container div and then move this to the top.

00:01:03.510 --> 00:01:09.295
This is so it contains our existing content and also the new navigation div,

00:01:09.295 --> 00:01:11.315
which now I'm going to add.

00:01:11.315 --> 00:01:18.880
Let's create a new div with an id of navigation.

00:01:22.880 --> 00:01:30.075
This id will link to our Vue instance using the el property and we'll create this soon.

00:01:30.075 --> 00:01:33.190
Then I'm going to cut the first row from

00:01:33.190 --> 00:01:41.810
our app and then paste this inside of the navigation section that we just create.

00:01:44.060 --> 00:01:46.850
Now, we've got this new navigation section.

00:01:46.850 --> 00:01:48.020
I'm going to go over to

00:01:48.020 --> 00:01:55.630
app.js and we can create a new Vue instance just below the last one.

00:01:56.630 --> 00:02:00.090
If you go to the bottom, we can now type "New

00:02:00.090 --> 00:02:07.320
View," and then again just enter the object inside of the parentheses.

00:02:08.050 --> 00:02:10.130
The first property again,

00:02:10.130 --> 00:02:12.570
we need to add is el.

00:02:13.420 --> 00:02:16.100
This is an ID of navigation.

00:02:16.100 --> 00:02:18.690
Let's add this in at the top.

00:02:20.450 --> 00:02:24.310
Then we can add our data objects.

00:02:24.680 --> 00:02:28.255
We're going to add some reactive data into here,

00:02:28.255 --> 00:02:30.560
such as the app name.

00:02:31.570 --> 00:02:35.785
I'm going to set the app name to be equal to guest list,

00:02:35.785 --> 00:02:38.350
which is what we currently have.

00:02:38.350 --> 00:02:41.740
Then if we go back over to our navigation div,

00:02:41.740 --> 00:02:49.550
we can then use a double curly braces to replace the guest list text with our app name.

00:02:51.020 --> 00:02:53.800
Save that and if we test this in the browser,

00:02:53.800 --> 00:02:55.450
we shouldn't see any difference.

00:02:55.450 --> 00:02:58.040
which means it's all working okay.

00:02:59.060 --> 00:03:02.280
There is one drawback to doing this however,

00:03:02.280 --> 00:03:08.565
the data contained in each Vue instance is separated from each other.

00:03:08.565 --> 00:03:11.950
This means we can only use this keyword to

00:03:11.950 --> 00:03:16.325
access data inside of the view instance it is used in.

00:03:16.325 --> 00:03:23.710
If go back to the first Vue instance and then add a console log.

00:03:24.330 --> 00:03:27.730
I'm going to add this inside of the form submitted

00:03:27.730 --> 00:03:33.640
method and I want to log this.app name.

00:03:34.220 --> 00:03:40.400
Remember the app name is a data property from our second instance.

00:03:40.400 --> 00:03:43.180
Let's save this and see what happens.

00:03:43.180 --> 00:03:45.610
If we go over to the browser,

00:03:45.610 --> 00:03:47.395
open up the console,

00:03:47.395 --> 00:03:50.570
and click on the "Form Submit" button,

00:03:51.080 --> 00:03:58.255
we get a red warning message saying the property of app styles is not defined.

00:03:58.255 --> 00:04:01.560
This is because of the same problem.

00:04:01.560 --> 00:04:07.195
The app styles object is a data property inside of the first instance.

00:04:07.195 --> 00:04:10.490
Here, we also trying to access this inside of the

00:04:10.490 --> 00:04:17.550
index.html within the section control by the second instance of navigation.

00:04:17.750 --> 00:04:20.730
We know now how to bind styles.

00:04:20.730 --> 00:04:26.010
Let's move back the styles into the stylesheet so can access a everywhere.

00:04:26.010 --> 00:04:32.280
We can go over to the Vue instance and delete the app styles object.

00:04:36.920 --> 00:04:40.140
Now, these are deleted. We can go back over to the

00:04:40.140 --> 00:04:46.380
app.css and then re-introduced the margin top of 25 pixels.

00:04:46.380 --> 00:04:49.000
This margin is added to all the rows,

00:04:49.000 --> 00:04:54.060
so use the row as the selector and then add in

00:04:54.060 --> 00:05:02.080
the margin top of 25 pixels, and then save that.

00:05:02.810 --> 00:05:07.235
Then if we go back over to the index.html page,

00:05:07.235 --> 00:05:13.400
we can delete the app styles style property in all the locations.

00:05:13.400 --> 00:05:19.920
That's the first one and then a second one.

00:05:20.860 --> 00:05:25.250
Then finally, let's remove the third and final one.

00:05:27.320 --> 00:05:32.155
Then we can also remove the console log from the method.

00:05:32.155 --> 00:05:35.530
Let's go back over to the app.js and down to

00:05:35.530 --> 00:05:39.590
the forms submitted method and then remove this.

00:05:40.940 --> 00:05:46.600
Now, if we save this and go back over to the browser and refresh,

00:05:46.600 --> 00:05:49.745
we should see that everything is working fine again.

00:05:49.745 --> 00:05:53.830
Splitting up sections into multiple Vue instances

00:05:53.830 --> 00:05:57.310
is perfectly fine to do and it's also practical if

00:05:57.310 --> 00:06:00.290
the code contained in each instance is not

00:06:00.290 --> 00:06:05.005
related or there is no reason to require data from other instances.

00:06:05.005 --> 00:06:10.355
There is waste accesses data from over instances with other methods.

00:06:10.355 --> 00:06:12.920
But we'll cover this later in this section.

00:06:12.920 --> 00:06:16.520
We'll continue next by adding some navigation links to

00:06:16.520 --> 00:06:22.950
our new instance and also using these links to see how we can loop through objects.
