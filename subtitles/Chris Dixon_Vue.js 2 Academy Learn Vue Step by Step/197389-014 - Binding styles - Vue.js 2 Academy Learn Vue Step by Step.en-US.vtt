WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.860 --> 00:00:07.575
Now we know how to use the v-bind directive to bind vue.js with HTML attributes.

00:00:07.575 --> 00:00:12.765
Now let's look at how to use the same directive that the style attributes.

00:00:12.765 --> 00:00:17.400
No, we can't pass in a double curly braces or the interpolation,

00:00:17.400 --> 00:00:19.560
which you pointed out in the last video.

00:00:19.560 --> 00:00:23.235
However, this time we can use the single curly braces.

00:00:23.235 --> 00:00:27.150
This is because we're passing in a style objects

00:00:27.150 --> 00:00:31.590
and objects inside a JavaScript that's surrounded by curly braces.

00:00:31.590 --> 00:00:35.850
Just like our data object inside the view instance.

00:00:35.850 --> 00:00:38.535
If you've used react. JS before,

00:00:38.535 --> 00:00:41.910
this way of an inline styles will look familiar to you.

00:00:41.910 --> 00:00:46.305
So if we go over to our CSS file for the row,

00:00:46.305 --> 00:00:50.010
and then click the margin top of 25 pixels.

00:00:50.010 --> 00:00:55.515
When I want to take this outside the CSS and place it into our HTML.

00:00:55.515 --> 00:00:57.465
So in the index page,

00:00:57.465 --> 00:01:00.060
if we locate the div with the class of row,

00:01:00.060 --> 00:01:03.975
which is just above the level one heading of guest list.

00:01:03.975 --> 00:01:07.200
I'm going to bind style attributes to

00:01:07.200 --> 00:01:11.745
this row and then also set the value inside an object,

00:01:11.745 --> 00:01:14.040
and then paste in margin top.

00:01:14.040 --> 00:01:16.830
It will just copy it from the CSS.

00:01:16.830 --> 00:01:20.775
So let's save that and give us a go and see what happens.

00:01:20.775 --> 00:01:23.025
So if we refresh the browser,

00:01:23.025 --> 00:01:25.095
we can see there's a blank page.

00:01:25.095 --> 00:01:27.585
So this doesn't appear to be working.

00:01:27.585 --> 00:01:33.150
If we right-click and go to inspect to open up the dev tools,

00:01:33.150 --> 00:01:37.890
we can see inside the "Console" that there's a red error message.

00:01:37.890 --> 00:01:41.235
So we get this error because this is JavaScripts,

00:01:41.235 --> 00:01:47.730
In between the braces and we need to name the CSS properties using camel case.

00:01:47.730 --> 00:01:50.595
This means that the first word is lowercase,

00:01:50.595 --> 00:01:55.125
and then each following word begins with a capital letter like this.

00:01:55.125 --> 00:01:57.270
So margin is lower case,

00:01:57.270 --> 00:02:04.785
followed by top with a T. Then also note that the value of 25 pixels is a string.

00:02:04.785 --> 00:02:11.950
So we can wrap this inside our quotations and remove the semicolon.

00:02:11.990 --> 00:02:14.535
Let's see how this is looking now.

00:02:14.535 --> 00:02:17.650
So save and then go over to the browser.

00:02:17.650 --> 00:02:21.530
So everything looks as it should, which is great.

00:02:21.530 --> 00:02:25.235
There's also another way of adding styles to our app.

00:02:25.235 --> 00:02:30.910
We can also declare our styling inside of the view instance as a data property.

00:02:30.910 --> 00:02:32.970
So back over in the app.

00:02:32.970 --> 00:02:38.415
j s, underneath the form submitted class that we created in the last video.

00:02:38.415 --> 00:02:43.210
I'm going to add a new date property called "appStyles".

00:02:43.940 --> 00:02:47.730
This is going to be set to an object.

00:02:47.730 --> 00:02:52.320
Then inside this object I'm going to add the same class of margin top,

00:02:52.320 --> 00:02:57.220
again using the camel case and set to 25 pixels.

00:02:57.500 --> 00:02:59.550
Now as we mentioned,

00:02:59.550 --> 00:03:05.475
we cannot inject this reactive data into our HTML with the double curly braces.

00:03:05.475 --> 00:03:09.410
We could not use double curly braces at all with any attributes.

00:03:09.410 --> 00:03:12.035
This includes the style attributes.

00:03:12.035 --> 00:03:14.645
So instead, over in the HTML,

00:03:14.645 --> 00:03:18.415
we can include it inside the quotations.

00:03:18.415 --> 00:03:24.990
We'll remove the existing object and add our new app styles inside of there.

00:03:25.510 --> 00:03:31.000
This HTML references a data inside of our app styles object.

00:03:31.000 --> 00:03:36.205
Of course we can also add more styles inside these objects if we want to.

00:03:36.205 --> 00:03:40.130
Or you can use this object multiple times within our app.

00:03:40.130 --> 00:03:45.490
This particular style applies to all of our free div's with the class of row.

00:03:45.490 --> 00:03:50.630
So let's reuse this on all of our free div's to get the correct styling.

00:03:51.200 --> 00:03:54.765
So I'm going to copy the style property.

00:03:54.765 --> 00:03:58.360
I paste it in the second row.

00:03:58.880 --> 00:04:05.295
Then do the same for the third row. So let's test that.

00:04:05.295 --> 00:04:08.500
Hit save and then go over to the browser.

00:04:09.620 --> 00:04:13.360
We can see the app looks back to normal.

00:04:13.460 --> 00:04:15.480
So just to double check,

00:04:15.480 --> 00:04:16.905
this is all working okay.

00:04:16.905 --> 00:04:23.670
I'm going to go over to the appStyles object once again and add a color of red.

00:04:26.570 --> 00:04:33.270
As you can see, any changes you make to the style object is changed throughout the app.

00:04:33.490 --> 00:04:38.065
So this is a few different ways of adding CSS to our app.

00:04:38.065 --> 00:04:41.540
We'll also use this again in the next project.

00:04:41.540 --> 00:04:43.680
But for now, we'll move on to the next video.

00:04:43.680 --> 00:04:46.800
We will take look at shorthand syntax.
