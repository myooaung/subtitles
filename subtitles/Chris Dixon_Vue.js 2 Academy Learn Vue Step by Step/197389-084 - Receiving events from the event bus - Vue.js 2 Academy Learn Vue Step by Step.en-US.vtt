WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.490
We've now sent data to

00:00:02.490 --> 00:00:08.265
the central event bus using a dollar sign emits to send these custom events.

00:00:08.265 --> 00:00:12.435
Now, we'll begin by creating the final components of this project,

00:00:12.435 --> 00:00:16.170
which will be the progress section inside the header.

00:00:16.170 --> 00:00:19.305
This component will also use the event bus,

00:00:19.305 --> 00:00:24.840
but this time it will listen for the event and use the data passed to it.

00:00:24.840 --> 00:00:28.680
As always we begin by creating the component file.

00:00:28.680 --> 00:00:32.700
I'm going to call this file the CardProgress.vue.

00:00:32.700 --> 00:00:40.180
So within the card folder I'm going to add a new file of CardProgress.vue.

00:00:44.660 --> 00:00:49.070
So within here we can create our usual templates.

00:00:52.500 --> 00:00:55.520
I will script tags,

00:00:56.630 --> 00:01:00.100
and then finally I will style tags.

00:01:05.690 --> 00:01:14.155
Within the script I'm going create a empty export default for all view instance,

00:01:14.155 --> 00:01:16.400
which we'll come back to you soon.

00:01:16.400 --> 00:01:20.410
This component will be nested inside the header component.

00:01:20.410 --> 00:01:25.490
So we need to register this inside the header.vue file.

00:01:25.490 --> 00:01:32.150
So let's go through this file and we can begin by importing this new CardProgress file.

00:01:32.150 --> 00:01:40.880
So at the top of the scripts I'm going to add our import of CardProgress.

00:01:42.260 --> 00:01:45.540
So the file path is./,

00:01:45.540 --> 00:01:48.670
this is also within the card folder.

00:01:52.310 --> 00:02:00.775
So CardProgress.vue, and then within our instance we can register our components.

00:02:00.775 --> 00:02:05.800
So just underneath the watcher I'm going to add a,

00:02:05.800 --> 00:02:08.360
and then add our components.

00:02:13.490 --> 00:02:16.930
So the only component we need to add is this file.

00:02:16.930 --> 00:02:20.780
So I'm going to call my ccCardProgress.

00:02:28.250 --> 00:02:32.160
So now with all the file imported and registered,

00:02:32.160 --> 00:02:35.890
we can now go ahead and add this to our templates.

00:02:35.890 --> 00:02:39.775
Just underneath the unordered lists for the nav links,

00:02:39.775 --> 00:02:42.620
we're going to add a horizontal line,

00:02:42.750 --> 00:02:48.170
and then below this at, the ccCardProgress.

00:02:51.130 --> 00:02:56.190
So as always, this needs a opening and the closing tag.

00:03:00.610 --> 00:03:03.080
So it is now imported,

00:03:03.080 --> 00:03:05.360
registered and a template.

00:03:05.360 --> 00:03:09.335
We can now go back out to the cardprogress.vue file,

00:03:09.335 --> 00:03:11.800
and begin to add our templates.

00:03:11.800 --> 00:03:14.945
I'm going to begin with a surrounding div,

00:03:14.945 --> 00:03:18.320
which is going to be the div for our row.

00:03:18.320 --> 00:03:23.370
So we can add bootstrap classes of row inside here.

00:03:23.690 --> 00:03:31.080
Then a second div, and this div is going to contain our class of col-sm-12.

00:03:33.460 --> 00:03:37.980
So this is a full width components.

00:03:38.710 --> 00:03:42.709
So the contents of this template will be pretty straightforward.

00:03:42.709 --> 00:03:45.500
All we're going to do is add a progress bar,

00:03:45.500 --> 00:03:47.705
and also complete the text,

00:03:47.705 --> 00:03:50.435
which says how many sections have been ticked,

00:03:50.435 --> 00:03:53.755
so for example, 104 and 204.

00:03:53.755 --> 00:03:57.555
So let's add this text first with the P tags.

00:03:57.555 --> 00:04:01.740
Within here we are going to add the texts of completed.

00:04:02.590 --> 00:04:07.680
So by default it will be zero or four.

00:04:08.030 --> 00:04:10.670
The serial will be dynamic.

00:04:10.670 --> 00:04:15.115
This needs to be increased every time the user clicks on the checkbox.

00:04:15.115 --> 00:04:16.800
So to make this dynamic.

00:04:16.800 --> 00:04:22.510
We can add these span tags before and after the zero,

00:04:23.450 --> 00:04:27.510
and then so we can change the contents between these tags,

00:04:27.510 --> 00:04:32.050
I'm going to add an Id of counter.

00:04:34.460 --> 00:04:39.935
This is just so we can access it with JavaScript later on in this video.

00:04:39.935 --> 00:04:42.890
This component will access the event bus.

00:04:42.890 --> 00:04:46.585
So we need to import this inside of the scripts.

00:04:46.585 --> 00:04:50.160
So down on the top of the script tags,

00:04:50.160 --> 00:04:53.860
we're going to import the event bus.

00:04:54.490 --> 00:04:59.585
I'm going to do this with the ES6 syntax which we looked at previously.

00:04:59.585 --> 00:05:07.210
So this will import the single member of the event bus from the main.js file.

00:05:07.210 --> 00:05:09.960
So to access this main.js file,

00:05:09.960 --> 00:05:19.950
the path is../,../, the main.js.

00:05:19.950 --> 00:05:22.730
So if you remember from early on in this course,

00:05:22.730 --> 00:05:25.630
we looked at the view life cycle hooks.

00:05:25.630 --> 00:05:28.545
One of those hooks was the created hook,

00:05:28.545 --> 00:05:31.865
and we can use this created hook to run a function.

00:05:31.865 --> 00:05:34.990
Each of the component is created.

00:05:34.990 --> 00:05:39.260
Inside this hook we can listen for a custom events on

00:05:39.260 --> 00:05:45.615
the view instance with the dollar sign on method. So let's add this now.

00:05:45.615 --> 00:05:48.375
Back down to the export default,

00:05:48.375 --> 00:05:51.340
we can add the created hook.

00:05:55.610 --> 00:06:04.405
Within this created hook we can access the event bus and then use a dollar sign on,

00:06:04.405 --> 00:06:08.720
instance method to listen for a custom events.

00:06:08.720 --> 00:06:13.650
The event we want to listen for is mark as completed.

00:06:17.120 --> 00:06:21.200
So this mark as completed event is the one which is being

00:06:21.200 --> 00:06:25.660
passed to the event bus from our section completed file.

00:06:25.660 --> 00:06:32.540
So we just here, so each time the user clicks on the checkbox,

00:06:32.540 --> 00:06:35.725
which is Boolean value of true or false,

00:06:35.725 --> 00:06:38.520
this is then emitted to the event bus,

00:06:38.520 --> 00:06:42.700
and then we'll have access to this with the card progress file.

00:06:42.700 --> 00:06:45.755
So anytime there's a change to this event,

00:06:45.755 --> 00:06:48.750
this will then trigger a function.

00:06:50.860 --> 00:06:55.639
This function takes in the event data between the parentheses.

00:06:55.639 --> 00:06:58.235
So I'm going to call this data,

00:06:58.235 --> 00:07:02.960
and we can then use this data inside of our function body.

00:07:02.960 --> 00:07:05.705
So as we just mentioned before,

00:07:05.705 --> 00:07:11.405
the value being passed to the event bus is a checkbox value of true or false.

00:07:11.405 --> 00:07:15.470
This means that this data being post to us just here,

00:07:15.470 --> 00:07:17.410
will be either true or false.

00:07:17.410 --> 00:07:22.610
So can add a if statement to check if the data is true.

00:07:22.610 --> 00:07:27.410
If it is, we want to increment the counter by one each time.

00:07:27.410 --> 00:07:32.550
So we can access the counter with the Id of counter,

00:07:32.870 --> 00:07:37.335
which is the span tag surrounded in zero.

00:07:37.335 --> 00:07:43.290
So we can access this with documents.getElementsById.

00:07:43.290 --> 00:07:51.700
The Id of course is counter.

00:07:52.790 --> 00:07:55.485
So now we've selected this counter.

00:07:55.485 --> 00:07:57.650
We want to access the inner text.

00:07:57.650 --> 00:08:01.590
So we want to increase zero by one each time.

00:08:01.940 --> 00:08:08.580
We can easily do this with dot in a text, plus plus.

00:08:08.960 --> 00:08:13.310
So if the data inside here is true,

00:08:13.310 --> 00:08:16.840
the count will be increased by one each time.

00:08:16.840 --> 00:08:20.895
So let's give that a save and check this out in the browser.

00:08:20.895 --> 00:08:23.370
So go over to the browser,

00:08:23.370 --> 00:08:27.275
and then if we select mark section as completed,

00:08:27.275 --> 00:08:30.955
we now see that we have the value of one or four.

00:08:30.955 --> 00:08:37.240
To go to a second section and take a now say two or four,

00:08:38.650 --> 00:08:45.480
and then free, and then finally four to four.

00:08:46.850 --> 00:08:50.585
So we can see if you keep clicking on the check box,

00:08:50.585 --> 00:08:52.930
the value keeps going up and up.

00:08:52.930 --> 00:08:56.240
We then need to make sure if the user uncheck the box,

00:08:56.240 --> 00:08:59.570
that the value is reduced by one also.

00:08:59.570 --> 00:09:03.350
So we can easily do this inside an else statements.

00:09:03.350 --> 00:09:05.625
So just after the if statement,

00:09:05.625 --> 00:09:07.890
we can also add else,

00:09:08.480 --> 00:09:11.175
and then I'm just going to copy

00:09:11.175 --> 00:09:18.120
this.getElementById based in where also are we going to select the counter.

00:09:18.120 --> 00:09:23.025
But this time, we're going to decrement by one on each click,

00:09:23.025 --> 00:09:26.915
so save that, and now if we go over and refresh,

00:09:26.915 --> 00:09:29.210
let's start with the front.

00:09:29.210 --> 00:09:32.480
So now we see one, the insight left,

00:09:32.480 --> 00:09:35.600
now we see two, and then click on again,

00:09:35.600 --> 00:09:38.570
and now it reduces back down to one.

00:09:38.570 --> 00:09:41.110
Let's just try this with one more component,

00:09:41.110 --> 00:09:43.510
so two, and then back to one.

00:09:43.510 --> 00:09:45.920
So that all seems to work in fine.

00:09:45.920 --> 00:09:50.015
So the final thing to do is now increase and decrease

00:09:50.015 --> 00:09:54.500
the progress bar to give the user a visual indication.

00:09:54.500 --> 00:09:59.645
So already have mostly setup with the if-else statements.

00:09:59.645 --> 00:10:01.670
So inside the if-statements,

00:10:01.670 --> 00:10:06.710
I'm going to again paste in this documents.getElementById.

00:10:06.710 --> 00:10:10.235
But this time we want to select the progress bar.

00:10:10.235 --> 00:10:16.290
So let's add the progress bar just underneath this completed section.

00:10:17.030 --> 00:10:20.340
So let's begin with 0 percent.

00:10:20.340 --> 00:10:25.320
So the value is initially set to zero,

00:10:25.330 --> 00:10:30.750
and then we want the maximum value to be equal to 100.

00:10:31.490 --> 00:10:36.955
Then so we can increase this value each time we're going to add an Id of

00:10:36.955 --> 00:10:42.620
CardProgress, so save that.

00:10:42.620 --> 00:10:49.605
Now we can use this CardProgress Id inside the document.getElementById.

00:10:49.605 --> 00:10:51.970
So instead of selecting the counter,

00:10:51.970 --> 00:10:54.950
we'll paste in the cardProgress.

00:10:55.320 --> 00:10:58.930
But this time we want to increase the value.

00:10:58.930 --> 00:11:03.520
So that value to be increased by 25 each time.

00:11:03.520 --> 00:11:05.830
This is because it's a percentage,

00:11:05.830 --> 00:11:07.505
we have four sections.

00:11:07.505 --> 00:11:09.020
So each time it's clicked,

00:11:09.020 --> 00:11:11.705
it will go up by 25 percent,

00:11:11.705 --> 00:11:15.180
so plus equals 25.

00:11:15.760 --> 00:11:18.830
So I'm going to copy this,

00:11:18.830 --> 00:11:22.105
and paste this inside the else-statements.

00:11:22.105 --> 00:11:28.690
But this time, change the plus to a negative and then save that.

00:11:28.880 --> 00:11:32.435
Then let's go to the browser and give us a go.

00:11:32.435 --> 00:11:35.570
So let's try clicking on one of the sections.

00:11:35.570 --> 00:11:37.715
So mark is as completed,

00:11:37.715 --> 00:11:41.140
and now we see the progress bar is increasing.

00:11:41.140 --> 00:11:44.880
That's trying to move that, and it also goes down too.

00:11:44.880 --> 00:11:50.460
Let's try one more section okay good.

00:11:50.460 --> 00:11:52.020
So that all looks in place,

00:11:52.020 --> 00:11:56.150
so as well as the completed text increasing and going down,

00:11:56.150 --> 00:11:59.965
we also see the value of the progress bar change too.

00:11:59.965 --> 00:12:03.425
One last thing to do to finish off this components

00:12:03.425 --> 00:12:07.205
is to make the progress bar the full width of the page.

00:12:07.205 --> 00:12:13.680
This can be done with some simple CSS over in the CardProgress.vue file.

00:12:14.780 --> 00:12:18.650
So let's go down to the style tags and make this scoped.

00:12:18.650 --> 00:12:22.070
So the styles would only apply to this section.

00:12:22.070 --> 00:12:29.250
We want to target the progress bar and then set the width to be equal to 100 percent.

00:12:30.760 --> 00:12:35.720
So let's see how this looks now if we refresh the browser, okay good.

00:12:35.720 --> 00:12:40.165
We see the progress bar spans the full width of the container.

00:12:40.165 --> 00:12:42.270
So let's test this,

00:12:42.270 --> 00:12:45.030
so let's click on the checkbox.

00:12:45.030 --> 00:12:50.640
Let's try a second one, it all looks good,

00:12:50.640 --> 00:12:55.800
and a third one, okay good.

00:12:55.800 --> 00:12:58.355
This is all working now, so congratulations.

00:12:58.355 --> 00:13:04.320
You've now successfully used the event bus for non parent-child communication.
