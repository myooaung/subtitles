WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.560 --> 00:00:05.040
When passing data to child components via props,

00:00:05.040 --> 00:00:10.470
sometimes you want to make sure we send in the correct type of data to be used.

00:00:10.470 --> 00:00:12.900
For example, if the child components expects

00:00:12.900 --> 00:00:16.710
a number to pass to it or instead receives a string,

00:00:16.710 --> 00:00:18.720
then this can cause problems.

00:00:18.720 --> 00:00:24.570
Using prop validation is a way to set the requirements for the prop to be received.

00:00:24.570 --> 00:00:31.260
If the validation fails and VGS will send out a console error during development.

00:00:31.260 --> 00:00:39.180
First we're going to go over to the card front v file and add a new prompt to pass

00:00:39.180 --> 00:00:42.770
down to the text output components probably

00:00:42.770 --> 00:00:47.030
used to set the height of the tax containers on the card.

00:00:47.030 --> 00:00:50.435
Latent cause we'll do the same with the image display.

00:00:50.435 --> 00:00:53.555
We can rearrange the heights of the components,

00:00:53.555 --> 00:00:55.330
to fit the card correctly.

00:00:55.330 --> 00:01:00.875
We need to and this probe inside of the CC text output components.

00:01:00.875 --> 00:01:11.110
I'm going to call this prop the container heights and set this to a value of 130.

00:01:12.290 --> 00:01:17.275
So this value of 130 will be used as a CSS property.

00:01:17.275 --> 00:01:19.790
Let's do the same for the second,

00:01:19.790 --> 00:01:27.240
third component, copy this and then paste it in twice.

00:01:27.620 --> 00:01:32.300
Then once this is done over in the text output.file,

00:01:32.300 --> 00:01:35.110
we can add the proper name to the array.

00:01:35.110 --> 00:01:38.390
We already have our props setup.

00:01:38.390 --> 00:01:42.965
We can separate them with a comma and also add our second prop,

00:01:42.965 --> 00:01:50.115
container height at props to the array,

00:01:50.115 --> 00:01:51.630
like this works fine.

00:01:51.630 --> 00:01:55.010
But we want to add some validations tele component.

00:01:55.010 --> 00:01:58.530
What type of data we expect to receive?

00:01:58.840 --> 00:02:03.215
To do this when it's sad props to be an object.

00:02:03.215 --> 00:02:07.580
We can set the dates type we want to receive inside of an array.

00:02:07.580 --> 00:02:10.130
Note more than one data type can be used,

00:02:10.130 --> 00:02:12.365
such as a string number,

00:02:12.365 --> 00:02:15.020
Boolean function, an object,

00:02:15.020 --> 00:02:16.330
or even an array.

00:02:16.330 --> 00:02:19.440
So let's add in our prop of display text.

00:02:19.440 --> 00:02:22.080
Let's add this back in.

00:02:22.080 --> 00:02:25.385
Add this is a type of string to the array.

00:02:25.385 --> 00:02:31.130
We can test this validation by passing a new motorway and see what happens.

00:02:31.130 --> 00:02:33.455
Over in the card front,

00:02:33.455 --> 00:02:37.080
instead of sending the text box value worn,

00:02:37.080 --> 00:02:42.085
going send a string value. Let's say 12.

00:02:42.085 --> 00:02:44.200
Now if you open up the console,

00:02:44.200 --> 00:02:46.970
we can see that there is an error.

00:02:50.940 --> 00:02:54.730
It says expected string book got a number.

00:02:54.730 --> 00:02:57.860
So that means validation is working.

00:02:58.530 --> 00:03:03.545
So now let's change this back to text box volume.

00:03:03.545 --> 00:03:06.990
This is how we can add basic data validation.

00:03:06.990 --> 00:03:09.135
There is also more things we can do,

00:03:09.135 --> 00:03:10.680
separated by a comma.

00:03:10.680 --> 00:03:14.960
Let's now add the second prop of container height.

00:03:22.310 --> 00:03:26.225
Because this will have more than one type of validation,

00:03:26.225 --> 00:03:33.960
we need to set this to be a object and then add this as a type of number.

00:03:37.180 --> 00:03:42.210
We can also declare if we want this prop to be required.

00:03:43.780 --> 00:03:48.450
This is a Boolean value which I'm going to set to true.

00:03:48.460 --> 00:03:55.580
This tells VGS this prop mostly presence otherwise will receive a console warning.

00:03:55.580 --> 00:04:02.050
We can test by removing any container high prop from the parents of cartoons,

00:04:02.050 --> 00:04:05.350
and then head over to the console.

00:04:06.290 --> 00:04:12.785
Inside here we get the warning message saying missing required prop of container height.

00:04:12.785 --> 00:04:16.810
Now let's add this back in and then save.

00:04:16.810 --> 00:04:19.920
So back over in our prompts in the text output.

00:04:19.920 --> 00:04:25.170
Also, we can add a default value if no value is passed.

00:04:25.450 --> 00:04:29.570
Obviously this would not make sense to be added with required,

00:04:29.570 --> 00:04:34.080
sludge replace required with default,

00:04:34.090 --> 00:04:37.885
and want to sell it to a value of 200,

00:04:37.885 --> 00:04:44.464
which of course is a number.So now if no prop is passed through a component,

00:04:44.464 --> 00:04:48.095
the default value of 200 will be used instead.

00:04:48.095 --> 00:04:52.970
Now we have this validated data being passed as validated prop.

00:04:52.970 --> 00:04:59.760
We use in the next video to set a container heights by adding it to style object.
