WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.010
Along with transitions, we also have the options to add animations to.

00:00:05.010 --> 00:00:10.065
Animations allow us to gradually change from one style to another.

00:00:10.065 --> 00:00:14.265
We could gradually change an element from one color to another.

00:00:14.265 --> 00:00:20.095
For this example, I'm going to add a scale effect to the remove image button.

00:00:20.095 --> 00:00:22.845
This means a button will begin small,

00:00:22.845 --> 00:00:27.030
and then grow to full size when the mouse hovers over it.

00:00:27.030 --> 00:00:30.165
Then when the mouse leaves the button will then shrink outer view.

00:00:30.165 --> 00:00:34.095
We can begin in the same way by using the transition mapper.

00:00:34.095 --> 00:00:37.800
Go over to the ImageOutput.vue file.

00:00:37.800 --> 00:00:41.845
Then if we look for the button to remove the image,

00:00:41.845 --> 00:00:48.480
which is just here, I'm going to change the name of the transition to be scale.

00:00:49.330 --> 00:00:54.095
For the animation, we need to set up the at keyframes rule.

00:00:54.095 --> 00:00:58.430
We need set up keyframes to control the steps of the CSS animation.

00:00:58.430 --> 00:01:05.100
To begin, let's set up the keyframes for scaling in and then scaling out.

00:01:05.100 --> 00:01:07.815
Down in the CSS,

00:01:07.815 --> 00:01:10.185
right at the bottom of the page,

00:01:10.185 --> 00:01:17.050
just blow this image selector then the at keyframes.

00:01:17.750 --> 00:01:21.730
I'm going to create one for scale in,

00:01:21.920 --> 00:01:32.640
and then a second one for scale out, just like that.

00:01:32.640 --> 00:01:34.470
This is standard CSS,

00:01:34.470 --> 00:01:36.480
it's not Vue specific.

00:01:36.480 --> 00:01:39.560
Then we need to stop the steps of the animation.

00:01:39.560 --> 00:01:40.970
To keep things simple,

00:01:40.970 --> 00:01:44.270
I'm just going to add a beginning and an end stage.

00:01:44.270 --> 00:01:50.755
If we wanted to, we could even add more stages at different percentages during animation.

00:01:50.755 --> 00:01:53.010
Let's start with zero percent,

00:01:53.010 --> 00:01:55.240
which is the start.

00:01:56.930 --> 00:02:01.959
At zero percent, I'm going to set a transform.

00:02:02.150 --> 00:02:08.950
I am going to transform the scale to initially begin at zero,

00:02:09.980 --> 00:02:15.260
and then underneath here we're going to set the 100 percent rule.

00:02:15.260 --> 00:02:22.765
This is again going to be a transform of scale,

00:02:22.765 --> 00:02:25.790
but this time it's going to be one.

00:02:26.050 --> 00:02:30.550
This sets up the frames when the animation is scaling in.

00:02:30.550 --> 00:02:34.915
At zero percent scale is zero, so it comes here.

00:02:34.915 --> 00:02:37.520
Then at the end of the transformation,

00:02:37.520 --> 00:02:40.265
the scale is then taken up to one,

00:02:40.265 --> 00:02:42.560
which will make it full size.

00:02:42.560 --> 00:02:46.070
I'm also going to do the same for scale out by

00:02:46.070 --> 00:02:49.600
copying these two lines of code and pasting them in.

00:02:49.600 --> 00:02:51.470
But because we're scaling out,

00:02:51.470 --> 00:02:53.765
we want to do the opposite.

00:02:53.765 --> 00:02:57.560
At zero percent, this time we want the scale to be

00:02:57.560 --> 00:03:02.305
one so it's fully visible on the screen at full size.

00:03:02.305 --> 00:03:05.850
Then at the end of it at 100 percent we want is

00:03:05.850 --> 00:03:09.270
to be shrunk right back down so we can see it.

00:03:09.270 --> 00:03:15.510
We'll set the scale to be zero when we're just adding the zero on 100 percent stages.

00:03:15.510 --> 00:03:22.040
We can also change this to be called to and from rather than zero on 100 percent.

00:03:22.040 --> 00:03:25.380
If one works fine, now we have

00:03:25.380 --> 00:03:28.775
the keyframes setups control of how we want the animation to work.

00:03:28.775 --> 00:03:33.805
We can add these to the CSS rules just like we've done before.

00:03:33.805 --> 00:03:38.925
Above the keyframes I'm going to add the CSS rules.

00:03:38.925 --> 00:03:43.010
Remember because we call this animation scale,

00:03:43.010 --> 00:03:48.120
I'm going to add the scale class of enter active.

00:03:49.300 --> 00:03:53.690
Here we're going to set the animation that we want to use.

00:03:53.690 --> 00:03:58.200
The animation is scale in keyframe section,

00:03:59.420 --> 00:04:02.010
and then we set the duration.

00:04:02.010 --> 00:04:06.195
I want this to happen over 0.5 seconds.

00:04:06.195 --> 00:04:10.275
Then below we can do the leave active phase.

00:04:10.275 --> 00:04:14.170
So scale leave active.

00:04:15.200 --> 00:04:18.805
This again takes in a animation.

00:04:18.805 --> 00:04:21.460
This time because we're leaving the animation,

00:04:21.460 --> 00:04:24.295
we want to use the scale out section.

00:04:24.295 --> 00:04:27.830
The animation is scaled out.

00:04:28.770 --> 00:04:34.255
I'm going to keep this over 0.5 seconds for the duration.

00:04:34.255 --> 00:04:38.290
Remember the enter active and leave active classes,

00:04:38.290 --> 00:04:41.640
cover the full enter and leaving phase.

00:04:41.640 --> 00:04:45.305
Here is an ideal place to add our animation to,

00:04:45.305 --> 00:04:48.670
along with the timescale for its take.

00:04:48.670 --> 00:04:52.890
Let's give that save and then go over to the browser.

00:04:53.740 --> 00:04:56.960
If we go to the image output,

00:04:56.960 --> 00:04:59.060
we can see when we hover over

00:04:59.060 --> 00:05:02.825
the section that the button that was rounded with the transition,

00:05:02.825 --> 00:05:08.090
now scales from zero right through to a 100 percent of the size,

00:05:08.090 --> 00:05:09.950
over half a second.

00:05:09.950 --> 00:05:12.815
Once we have these keyframes set up,

00:05:12.815 --> 00:05:17.960
adding an animation is a lot like the transitions which we looked at in the last video.

00:05:17.960 --> 00:05:21.080
We still have access to the CSS classes,

00:05:21.080 --> 00:05:24.450
such as v leave and v enter to.

00:05:24.450 --> 00:05:25.970
But through the reminder,

00:05:25.970 --> 00:05:27.305
if using v enter,

00:05:27.305 --> 00:05:32.135
this is not immediately removed after the element is inserted.

00:05:32.135 --> 00:05:36.230
Instead, this happens with the animation end events.

00:05:36.230 --> 00:05:38.720
The root transition elements has

00:05:38.720 --> 00:05:44.405
both a transition end and also an animation end event listener attached,

00:05:44.405 --> 00:05:48.515
so Vue JS knows when the transition has ended.

00:05:48.515 --> 00:05:52.520
This is a small difference to be aware of when using animations.

00:05:52.520 --> 00:05:56.910
Next we'll move on to adding transitions to components.
