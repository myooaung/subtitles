WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.080 --> 00:00:04.725
So far, we've only used a single slot elements.

00:00:04.725 --> 00:00:09.705
This single slot as it is will be used to receive the entire contents section,

00:00:09.705 --> 00:00:11.950
which we pass to it.

00:00:12.680 --> 00:00:16.635
Such as all the section between the footer here.

00:00:16.635 --> 00:00:21.780
As a side note, if there was no slot element presence.

00:00:21.780 --> 00:00:30.720
If we comment it out or move the slot section and save it up,

00:00:30.720 --> 00:00:33.520
if we go over to the browser,

00:00:33.830 --> 00:00:37.485
we see the all the content which is being passed to it.

00:00:37.485 --> 00:00:42.070
Next inside the parent components is discarded.

00:00:42.080 --> 00:00:46.760
Let's just undo this slot section and add those back in.

00:00:46.760 --> 00:00:51.710
Rather than just using a single slot to accept the full contents.

00:00:51.710 --> 00:00:57.685
We could also use one or more slot elements with a special name attributes.

00:00:57.685 --> 00:01:03.610
Inside the footer.vue, we can add a name attribute to our slot.

00:01:04.540 --> 00:01:06.800
This is the name of our choice,

00:01:06.800 --> 00:01:09.270
someone's name, this app name.

00:01:11.110 --> 00:01:15.530
Now we can go over to the parent components and match it's name with

00:01:15.530 --> 00:01:20.190
the content we want to pass to it using the slot attribute.

00:01:20.530 --> 00:01:22.610
The app name section,

00:01:22.610 --> 00:01:24.835
which is up at the top here.

00:01:24.835 --> 00:01:29.125
I'm going to add an attributes inside the opening piece.

00:01:29.125 --> 00:01:32.870
At the slot attributes and will come matches to

00:01:32.870 --> 00:01:38.730
the output slot with the name which you just gave it all "app-name."

00:01:40.630 --> 00:01:45.605
Let's see how this looks. Now down at the bottom,

00:01:45.605 --> 00:01:48.470
only the app name is displayed inside

00:01:48.470 --> 00:01:52.975
the footer because we've only distributed this content.

00:01:52.975 --> 00:02:00.670
I am going to add the copyright symbol just before a dynamic data,

00:02:01.400 --> 00:02:05.385
so and sign copy and the semicolon,

00:02:05.385 --> 00:02:09.295
and then we'll see the copyright symbol back on the screen.

00:02:09.295 --> 00:02:12.800
As you can see, the rest of the elements disappear.

00:02:12.800 --> 00:02:15.410
We no longer have the enough links.

00:02:15.410 --> 00:02:17.420
To get the rest of this to display,

00:02:17.420 --> 00:02:19.325
we have a few options.

00:02:19.325 --> 00:02:22.910
First, we can continue to add more slots.

00:02:22.910 --> 00:02:28.260
Also with the name attributes, like we've done here.

00:02:29.320 --> 00:02:32.120
Or we can catch all the rest of

00:02:32.120 --> 00:02:37.055
the own name content and distribute it to invert slot element,

00:02:37.055 --> 00:02:39.905
this time with no name attribute.

00:02:39.905 --> 00:02:43.620
If you remove the footer text.

00:02:45.440 --> 00:02:50.810
I'm bringing this up there, and we can also add a second slot element,

00:02:52.470 --> 00:02:54.850
just like were previously done,

00:02:54.850 --> 00:02:57.560
but with no name attributes,

00:02:57.560 --> 00:02:59.980
and now if we go to the browser,

00:02:59.980 --> 00:03:03.110
we should see the rest of the footer content appear.

00:03:03.110 --> 00:03:04.780
Now we have our text,

00:03:04.780 --> 00:03:06.160
which is the name slots.

00:03:06.160 --> 00:03:08.230
Then all the additional content,

00:03:08.230 --> 00:03:10.075
which is the navigation links,

00:03:10.075 --> 00:03:15.095
is now rendered through our unnamed slot elements.

00:03:15.095 --> 00:03:19.600
This is a simple case of distributing content with slots.

00:03:19.600 --> 00:03:22.630
If our footer had allow more HTML code,

00:03:22.630 --> 00:03:25.960
uses slots to place content exactly where we wanted,

00:03:25.960 --> 00:03:28.790
is really useful tool to have.
