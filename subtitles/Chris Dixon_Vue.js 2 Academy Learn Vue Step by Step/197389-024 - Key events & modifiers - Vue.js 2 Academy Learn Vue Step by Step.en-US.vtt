WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.560 --> 00:00:04.050
Earlier in the course, we looked at event handlers,

00:00:04.050 --> 00:00:06.465
using the V on Directive,

00:00:06.465 --> 00:00:12.610
we then change V on to a shorter syntax by using the @ symbol.

00:00:13.130 --> 00:00:16.545
This triggered the form submitted method,

00:00:16.545 --> 00:00:19.680
when the submit event was detected.

00:00:19.680 --> 00:00:24.495
We also mentioned that we're not limited to using just submit.

00:00:24.495 --> 00:00:28.935
We do also have access to the full range of HTML events,

00:00:28.935 --> 00:00:31.530
such as on-click, on-change,

00:00:31.530 --> 00:00:33.810
and on-mode to name a few.

00:00:33.810 --> 00:00:36.635
A long way to trigger events,

00:00:36.635 --> 00:00:39.219
we can also use the V on Directive,

00:00:39.219 --> 00:00:45.215
the shorthand @ symbol to do something when a keyboard key is pressed.

00:00:45.215 --> 00:00:47.675
Inside of our inputs,

00:00:47.675 --> 00:00:51.920
I'm going to add a keyboard event to our name input.

00:00:51.920 --> 00:00:56.390
We can use standard keyboard events, such as key-down.

00:00:56.390 --> 00:00:58.775
In this example, I'm going to use key-up,

00:00:58.775 --> 00:01:02.430
followed by the key code we want to watch for.

00:01:03.680 --> 00:01:06.465
Once the key number 32,

00:01:06.465 --> 00:01:07.900
which is the space bar,

00:01:07.900 --> 00:01:12.600
is released, we trigger a method called key pressed.

00:01:14.510 --> 00:01:19.725
We have not yet setup the key pressed method, so let's do that now.

00:01:19.725 --> 00:01:22.575
Head over to the Up.js,

00:01:22.575 --> 00:01:25.065
and then let's add a new method.

00:01:25.065 --> 00:01:28.920
This method of course is called key pressed.

00:01:29.180 --> 00:01:33.365
All it want us to do is to add a console log,

00:01:33.365 --> 00:01:35.315
and inside this console log,

00:01:35.315 --> 00:01:39.540
we just go to print the text of key pressed.

00:01:41.930 --> 00:01:48.720
This will simply log to the console key pressed once the space key is being released.

00:01:48.820 --> 00:01:53.940
So let's save this and open this up inside of the console.

00:01:56.110 --> 00:02:00.440
If we press the space bar inside of the name input field,

00:02:00.440 --> 00:02:03.515
we can see our key events have been detected.

00:02:03.515 --> 00:02:05.030
So for this example,

00:02:05.030 --> 00:02:07.070
we use key number 32,

00:02:07.070 --> 00:02:08.800
which is the space bar.

00:02:08.800 --> 00:02:14.450
We can Google JavaScript key codes for a full list of numbers for all keys if we want to.

00:02:14.450 --> 00:02:20.520
However, Vue.js too also provide us with some aliases for common keys.

00:02:20.520 --> 00:02:26.289
We can replace key number 32 with the word space,

00:02:27.560 --> 00:02:31.750
and then give us a try if we refresh.

00:02:33.500 --> 00:02:35.690
This works just the same,

00:02:35.690 --> 00:02:39.300
but it's more readable and easier to remember.

00:02:39.650 --> 00:02:45.185
Vue.js also allows us to use enter, tab, delete,

00:02:45.185 --> 00:02:51.820
escape, up-down, and also left and rights in the place of any of the key codes.

00:02:51.820 --> 00:02:53.730
Let's just try one more.

00:02:53.730 --> 00:02:57.180
We can change space to the escape key,

00:03:00.050 --> 00:03:03.970
so say that and press the escape key,

00:03:05.000 --> 00:03:08.040
and it works just as before.

00:03:08.040 --> 00:03:11.855
This is how we can use keys to trigger events,

00:03:11.855 --> 00:03:13.805
and how we can use key modifiers,

00:03:13.805 --> 00:03:17.280
or aliases in our Vue projects.
