WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.290 --> 00:00:04.950
In the last video, we mentioned adding transitions to a list,

00:00:04.950 --> 00:00:07.905
such as how we do here with the v for loop,

00:00:07.905 --> 00:00:10.005
works a little differently.

00:00:10.005 --> 00:00:15.285
Let's begin by moving the transition to surround only v for loop.

00:00:15.285 --> 00:00:19.660
Let's cut the opening transition tag.

00:00:20.480 --> 00:00:25.185
Then I'm going to add this just after the v if statements,

00:00:25.185 --> 00:00:33.270
by starting there and then the closing transition tag but also cut this out,

00:00:33.270 --> 00:00:37.250
and then paste this just after the block for the for loop.

00:00:37.250 --> 00:00:45.875
[inaudible] and let's open this up inside the browser and refresh. Let's try this out.

00:00:45.875 --> 00:00:48.625
Let's start by adding some names.

00:00:48.625 --> 00:00:51.880
Let's add a second one.

00:00:52.340 --> 00:00:58.240
We can see that only the first name which we added has appeared on the Guest List.

00:00:58.240 --> 00:00:59.895
This looks a little strange.

00:00:59.895 --> 00:01:02.900
Let's open up the console and see what's going on.

00:01:02.900 --> 00:01:05.970
Right-click and go to Inspect.

00:01:06.280 --> 00:01:09.935
Let's refresh and open up the console,

00:01:09.935 --> 00:01:12.970
so let's add a name and answer.

00:01:12.970 --> 00:01:15.870
You can see there's no error there.

00:01:15.870 --> 00:01:19.035
Let's try adding a second name.

00:01:19.035 --> 00:01:21.690
Now we see a red error.

00:01:21.690 --> 00:01:23.420
Opinions are the console.

00:01:23.420 --> 00:01:31.355
Let's open this up. The error message gives us a clue on how we can fix this.

00:01:31.355 --> 00:01:35.600
He says the transition can only be used on a single elements.

00:01:35.600 --> 00:01:40.280
We need to use transition group for lists. Let's give it a go.

00:01:40.280 --> 00:01:44.700
Let's change the transition to be transition group.

00:01:48.620 --> 00:01:52.030
Let's try to scan in the browser.

00:01:52.130 --> 00:01:56.980
The first one appears, and then the second one also appears,

00:01:56.980 --> 00:02:01.165
and we don't see any error messages inside the console.

00:02:01.165 --> 00:02:04.970
There is a difference when using transition group.

00:02:04.970 --> 00:02:09.920
It will render a surrounding span element to our list.

00:02:09.920 --> 00:02:15.750
We can see this if we open up the dev tools again and inspect the name elements.

00:02:15.750 --> 00:02:18.860
Click on the Inspector,

00:02:18.860 --> 00:02:26.060
and then go over the name elements. Select any one of these.

00:02:26.060 --> 00:02:27.620
The first one is fine.

00:02:27.620 --> 00:02:30.050
Let's make a little bit more space.

00:02:30.050 --> 00:02:34.175
Now if we look at the code inside the dev tools,

00:02:34.175 --> 00:02:36.050
these are three names of A, B,

00:02:36.050 --> 00:02:37.810
C, which you just added,

00:02:37.810 --> 00:02:39.710
and also have the span ta,

00:02:39.710 --> 00:02:42.435
which is surrounding all these three names.

00:02:42.435 --> 00:02:46.895
We know we didn't put this into the code because we can't see it here.

00:02:46.895 --> 00:02:50.015
When using the normal transition elements,

00:02:50.015 --> 00:02:51.980
this does not render an element.

00:02:51.980 --> 00:02:55.510
We do need to be aware of this when using transition group.

00:02:55.510 --> 00:02:59.585
We do though have control over which element it does use.

00:02:59.585 --> 00:03:03.690
We're not restricted to only using neat span elements.

00:03:03.760 --> 00:03:08.270
The element type can be changed by adding a tag attributes,

00:03:08.270 --> 00:03:12.235
and this is done inside the opening transition group tag.

00:03:12.235 --> 00:03:16.175
Just after the name, I'm also going to add the tag elements.

00:03:16.175 --> 00:03:19.100
Let's add a p tag for example.

00:03:19.100 --> 00:03:22.585
This will change the span to be a p elements.

00:03:22.585 --> 00:03:26.520
Back open adapt tools. Let's give this a go.

00:03:26.520 --> 00:03:31.960
Let's refresh, and then we need to add a name.

00:03:32.420 --> 00:03:34.920
Let's add name into there,

00:03:34.920 --> 00:03:39.250
click the 'Inspector' and select our name.

00:03:40.730 --> 00:03:43.330
There I've name just there Chris,

00:03:43.330 --> 00:03:46.700
and now have a surrounding p tag rather than the span.

00:03:46.700 --> 00:03:49.535
I'm going to remove this tag attribute as span,

00:03:49.535 --> 00:03:52.010
is not messing up our CSS or layout,

00:03:52.010 --> 00:03:53.975
so it's okay to leave in there.

00:03:53.975 --> 00:03:58.405
I just wanted to show you how to do this in case you run into any problems.

00:03:58.405 --> 00:04:03.320
The last thing you may have already spotted is the first time we add to the list,

00:04:03.320 --> 00:04:06.240
the name is not animated.

00:04:06.620 --> 00:04:09.285
Let's just close the dev tools.

00:04:09.285 --> 00:04:11.085
Let's add our first name,

00:04:11.085 --> 00:04:16.009
and you can see it jumps straight in without any smooth animations.

00:04:16.009 --> 00:04:19.085
This problem lies within our if condition.

00:04:19.085 --> 00:04:27.575
The transition only applies if the names right is greater than zero rather than equal to.

00:04:27.575 --> 00:04:32.105
To fix this, we can refactor our code and make it known work,

00:04:32.105 --> 00:04:33.845
but more compact to.

00:04:33.845 --> 00:04:39.065
First let's copy this full opening div with if condition,

00:04:39.065 --> 00:04:41.400
then I want to delete it.

00:04:42.050 --> 00:04:45.760
Also removing the closing div.

00:04:46.040 --> 00:04:48.420
Now this else section,

00:04:48.420 --> 00:04:53.465
we want to remove this and paste in the if statements that we just copied from before.

00:04:53.465 --> 00:04:54.870
We don't need the key anymore,

00:04:54.870 --> 00:04:56.490
so we can remove this.

00:04:56.490 --> 00:05:01.825
All I want to do is to replace the greater than symbol with the equals.

00:05:01.825 --> 00:05:07.915
This will make the no names added text still appear when the Names array is zero.

00:05:07.915 --> 00:05:12.065
Then anything else will include the names in the div above.

00:05:12.065 --> 00:05:15.740
Now hopefully we can save this and should now work.

00:05:15.740 --> 00:05:19.250
Give it a refresh, and let's see this in action.

00:05:19.250 --> 00:05:22.925
Add a first name, and now we can see the transition,

00:05:22.925 --> 00:05:26.310
our second name, and so on.

00:05:26.310 --> 00:05:28.245
This is all working fine.

00:05:28.245 --> 00:05:29.960
If we go back to the start,

00:05:29.960 --> 00:05:35.420
we can see our no names text is still added when there is no names inside the array,

00:05:35.420 --> 00:05:41.880
then it's replaced by any names which will add with animations, all my working.
