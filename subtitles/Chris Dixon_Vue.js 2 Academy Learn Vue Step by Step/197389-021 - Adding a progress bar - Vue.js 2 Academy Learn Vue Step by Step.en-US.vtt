WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.220 --> 00:00:06.030
In this video, we're going to add a progress bar to our application.

00:00:06.030 --> 00:00:12.300
We also going to restrict the number of names we can add to our events on the guest list.

00:00:12.300 --> 00:00:18.810
This progress bar will then increase as a percentage as the guest name array fills up.

00:00:18.810 --> 00:00:24.120
This will give us a chance to get more practice by adding reactive data to our app,

00:00:24.120 --> 00:00:28.470
and also bind in style attributes which we covered in the last section.

00:00:28.470 --> 00:00:31.170
Let's begin by removing the green color,

00:00:31.170 --> 00:00:37.455
when the form is submitted as we will now have a visual indication with the progress bar.

00:00:37.455 --> 00:00:40.420
Over in the index.html,

00:00:40.420 --> 00:00:44.930
let's remove the binding classes that were added in the last section.

00:00:44.930 --> 00:00:54.070
Select remove formSubmitClass from all the locations.

00:00:55.880 --> 00:01:01.640
Also let's remove this from the data object in app.js.

00:01:01.640 --> 00:01:06.090
Let's go over and remove this from the data object.

00:01:08.560 --> 00:01:14.880
Then further down let's remove the formSubmitClass reference from our method.

00:01:16.090 --> 00:01:21.660
Then finally, we don't need the submitted styles over in app.css,

00:01:21.660 --> 00:01:24.340
you can also remove them too.

00:01:28.940 --> 00:01:32.190
Now that's taken care of we can go back over to

00:01:32.190 --> 00:01:36.690
the Index page and we can start to add our progress bar.

00:01:37.040 --> 00:01:41.005
I'm going to add this near the bottom of the page.

00:01:41.005 --> 00:01:43.415
If we look for the attending text,

00:01:43.415 --> 00:01:46.280
which displays how many names are on the list.

00:01:46.280 --> 00:01:53.280
Just below that, I'm going to add a break tag and then add a HTML5 progress bar.

00:01:55.460 --> 00:01:58.965
Which comes to be a plain progress bar for now.

00:01:58.965 --> 00:02:02.740
We can save and just check that's appearing on the screen.

00:02:03.950 --> 00:02:06.740
Great, we want this progress bar to

00:02:06.740 --> 00:02:10.010
increase every time a name is added to the guest list.

00:02:10.010 --> 00:02:13.360
To do that we need to work out a percentage.

00:02:13.360 --> 00:02:20.195
Over in the app.js I'm going to add two new data properties to the data objects.

00:02:20.195 --> 00:02:21.830
The first one is going to be

00:02:21.830 --> 00:02:26.980
the event capacity so you can set how many names you want as a maximum.

00:02:26.980 --> 00:02:31.970
I'm going to say, event capacity to initially be 25.

00:02:31.970 --> 00:02:37.740
Then just below that, I'm also going to set the eventCapacityPercentage.

00:02:40.180 --> 00:02:44.030
This is just going to be set as zero initially.

00:02:44.030 --> 00:02:48.740
We use this to work out how full the event is as a percentage.

00:02:48.740 --> 00:02:54.035
We're going to calculate this inside of the form submitted method.

00:02:54.035 --> 00:02:59.150
If we scroll down to this method and then just below this.newNameText.

00:02:59.150 --> 00:03:02.990
We're going to set this.eventCapacityPercentage,

00:03:02.990 --> 00:03:05.890
and we going to calculate the percentage here.

00:03:05.890 --> 00:03:11.590
This is going to be equal to this.guestName.length.

00:03:13.490 --> 00:03:20.670
The number of names on the guest list divided by this.eventCapacity,

00:03:21.400 --> 00:03:26.575
we'll divide that by 100 to turn it into a percentage.

00:03:26.575 --> 00:03:35.930
Now we have the percentage as a value between zero and 100.

00:03:35.930 --> 00:03:38.390
We can take our knowledge of binding styles from

00:03:38.390 --> 00:03:43.180
the last section and use it set the width of the progress bar.

00:03:43.180 --> 00:03:48.870
Let's go back over to the progress bar and then add a style attribute.

00:03:49.930 --> 00:03:55.265
Again, we know we need to use the colon because this is dynamic data.

00:03:55.265 --> 00:04:00.655
We're going to start the styles inside the braces as an object.

00:04:00.655 --> 00:04:04.610
The only style we need to add is the width.

00:04:04.610 --> 00:04:11.880
The width is going to be set to the eventCapacityPercentage that we just created before.

00:04:14.810 --> 00:04:19.310
Of course this will go up as the capacity changes.

00:04:19.310 --> 00:04:22.370
Then on to the end we're going to add a string,

00:04:22.370 --> 00:04:25.260
which is just the percentage symbol.

00:04:26.500 --> 00:04:30.395
All we're doing here is setting the CSS width property,

00:04:30.395 --> 00:04:36.450
by making the percentage value reactive rather than just hand coding in a set number.

00:04:36.450 --> 00:04:38.510
Let's save that and with this in place,

00:04:38.510 --> 00:04:42.060
let's go over to the browser and test its working.

00:04:42.060 --> 00:04:48.330
We can add some names and often the progress bar increases with each one.

00:04:49.160 --> 00:04:51.170
Great. It starts increasing,

00:04:51.170 --> 00:04:53.910
so it all appears to be working fine.

00:04:54.950 --> 00:04:58.070
At the moment we've got the attending text which

00:04:58.070 --> 00:05:01.370
shows how many people are currently coming to the events.

00:05:01.370 --> 00:05:03.500
I want to now also adds

00:05:03.500 --> 00:05:08.800
the capacity so we can see how many people are also allowed to attend.

00:05:08.800 --> 00:05:12.740
We already have all the data we need to complete this,

00:05:12.740 --> 00:05:16.790
back in the Index page next to the attending text.

00:05:16.790 --> 00:05:21.930
We already have the guestName.length being outputted.

00:05:22.250 --> 00:05:29.330
After this I'm going to add a forward slash and then simply output the eventCapacity.

00:05:34.490 --> 00:05:40.475
Now when we go to the app, we should see one of 25 and two of 25,

00:05:40.475 --> 00:05:44.370
and this is increasing every time we add a new name.

00:05:44.870 --> 00:05:50.150
This is working and also the progress bar seems to work in final.

00:05:50.150 --> 00:05:52.300
But there is one problem.

00:05:52.300 --> 00:05:56.480
We can still go over the total number of names we set,

00:05:56.480 --> 00:05:58.655
we can go over 25.

00:05:58.655 --> 00:06:02.240
This causes a progress bar to go off the screen and

00:06:02.240 --> 00:06:07.045
also the number in the attending section to keep going over the maximum allowed.

00:06:07.045 --> 00:06:11.680
Just add lots more names and get up to the maximum.

00:06:11.680 --> 00:06:16.470
We can see that we can clearly go over that.

00:06:16.470 --> 00:06:19.430
This can be easily fixed by adding another combination to

00:06:19.430 --> 00:06:23.135
test inside of our form submitted method.

00:06:23.135 --> 00:06:26.905
Back over in the app.js.

00:06:26.905 --> 00:06:32.460
We know we already have an [inaudible] statement check if there is a name entered.

00:06:32.460 --> 00:06:36.110
We can also just add a second check to determine if

00:06:36.110 --> 00:06:40.930
the eventCapacityPercentage is less than 100 percent.

00:06:40.930 --> 00:06:44.880
If it doesn't want to continue to add names.

00:06:44.880 --> 00:06:49.395
After this.newNameText.length is greater than zero,

00:06:49.395 --> 00:06:55.510
this.eventCapacityPercentage is less than 100.

00:06:58.250 --> 00:07:01.840
If the capacity is less than 100 percent,

00:07:01.840 --> 00:07:04.790
we can still continue to add names to the array.

00:07:04.790 --> 00:07:10.099
If the percentage is over 100 or equal to 100,

00:07:10.099 --> 00:07:13.680
then no new names will be pushed to the array.

00:07:14.600 --> 00:07:19.775
Let's give this a go if we go back over to the app and then refresh,

00:07:19.775 --> 00:07:23.375
we can still add names to the guest list, no problem.

00:07:23.375 --> 00:07:25.925
Once we get to 25,

00:07:25.925 --> 00:07:29.430
we should see that no new names can be added.

00:07:32.300 --> 00:07:38.435
There we go, we now hit the capacity and no new names are being accepted onto the array.

00:07:38.435 --> 00:07:41.120
Now let's move on to take a look at how we can handle

00:07:41.120 --> 00:07:45.539
more complex logic by using computed properties.
