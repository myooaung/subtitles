1
00:00:02,540 --> 00:00:05,810
Real quick, let me be specific about the config factor.

2
00:00:06,010 --> 00:00:07,969
Of the 12 factors, one of them is config.

3
00:00:08,169 --> 00:00:10,700
It's actually one of the ones that I consider the most important

4
00:00:11,090 --> 00:00:14,299
because if it's not done right when you start deploying

5
00:00:14,499 --> 00:00:15,500
your applications,

6
00:00:15,700 --> 00:00:18,619
and considering all the different values that you have for

7
00:00:18,819 --> 00:00:21,739
each environment, it will be hard work later to get these

8
00:00:21,939 --> 00:00:24,469
things updated and make sure that they don't break when you deploy them,

9
00:00:24,669 --> 00:00:27,560
and whatnot. What I've seen over the years is different

10
00:00:27,800 --> 00:00:31,280
combinations of things where people possibly put hard values

11
00:00:31,520 --> 00:00:34,789
to things in code. Some things they put into different config files

12
00:00:34,989 --> 00:00:36,349
that are maybe not obvious

13
00:00:36,549 --> 00:00:37,788
or hidden in subdirectories somewhere.

14
00:00:38,330 --> 00:00:39,500
They're not well documented.

15
00:00:39,830 --> 00:00:42,829
So, my goal is that whenever I'm developing

16
00:00:43,029 --> 00:00:45,109
an app, that anything that I can,

17
00:00:45,309 --> 00:00:48,122
for that Node app, it's going to pick up an environment variable,

18
00:00:48,322 --> 00:00:49,190
if that's set,

19
00:00:49,580 --> 00:00:52,879
to override it. Now, it might have a default that in case there isn't any environment

20
00:00:53,079 --> 00:00:54,260
variable, it will set something.

21
00:00:54,470 --> 00:00:55,969
Maybe it'll do a console log

22
00:00:56,169 --> 00:00:58,969
or some other logging so that it's knowing that it

23
00:00:59,169 --> 00:01:00,680
doesn't have a value so you can see that.

24
00:01:00,980 --> 00:01:04,009
But, really what I want is that whatever I'm putting into

25
00:01:04,209 --> 00:01:07,279
my app, that it's going to search for environment

26
00:01:07,479 --> 00:01:10,429
variables, and all those environment variables are defined in

27
00:01:10,629 --> 00:01:12,409
the Dockerfile. Now, you're also going to deal

28
00:01:12,609 --> 00:01:13,880
with Docker Compose files,

29
00:01:14,080 --> 00:01:16,849
and you can even have Docker Compose use a .env file,

30
00:01:17,049 --> 00:01:18,350
if you're familiar with that standard.

31
00:01:18,590 --> 00:01:20,539
You can set them inside your shell

32
00:01:20,739 --> 00:01:21,686
or so many other ways

33
00:01:21,950 --> 00:01:25,219
when you read through the Docker documentation on how you can change

34
00:01:25,419 --> 00:01:26,570
and set environment variables.

35
00:01:26,960 --> 00:01:29,690
Now, these are always things that you're setting on container start.

36
00:01:29,890 --> 00:01:33,049
You can't change environment variables in the middle of a container

37
00:01:33,249 --> 00:01:34,699
running, and quite frankly,

38
00:01:34,899 --> 00:01:37,028
most apps wouldn't pick up a change even if it did.

39
00:01:37,970 --> 00:01:39,770
This doesn't replace secrets.

40
00:01:39,970 --> 00:01:41,180
If you're familiar with Swarm

41
00:01:41,380 --> 00:01:42,980
and Kubernetes, they have secrets

42
00:01:43,180 --> 00:01:44,720
and configs, or config maps.

43
00:01:45,020 --> 00:01:46,820
Those are for changing entire files

44
00:01:47,020 --> 00:01:48,270
or for storing secrets.

45
00:01:48,770 --> 00:01:51,859
The environment variables shouldn't be used to replace those

46
00:01:52,059 --> 00:01:53,120
things necessarily. But,

47
00:01:53,320 --> 00:01:56,149
this is things like host names of your database that

48
00:01:56,349 --> 00:01:57,460
need to go into the Node app,

49
00:01:57,660 --> 00:02:00,270
or remote API DNS names.

50
00:02:00,530 --> 00:02:02,530
Or, maybe just the username,

51
00:02:02,730 --> 00:02:05,060
or the database name, that you need to use in your databases.

52
00:02:05,260 --> 00:02:08,509
Stuff like that. Ideally you can use secrets through

53
00:02:08,710 --> 00:02:12,110
secret files and maybe use environment variables as a backup method.

54
00:02:12,320 --> 00:02:14,900
We'll be talking about those in this course as well.

55
00:02:15,100 --> 00:02:17,540
But, right here, if you have a complicated app,

56
00:02:17,740 --> 00:02:19,249
you may be frustrated

57
00:02:19,449 --> 00:02:22,520
with just sort of the setting of all of these different environment variables

58
00:02:22,760 --> 00:02:24,568
and how you have to deal with those in the Dockerfile

59
00:02:24,920 --> 00:02:26,359
and the Compose file, possibly,

60
00:02:26,559 --> 00:02:27,620
if you're trying to overwrite them.

61
00:02:27,920 --> 00:02:30,080
Then also tracking them in your app.

62
00:02:30,290 --> 00:02:31,729
So if you're dealing with legacy apps,

63
00:02:31,929 --> 00:02:33,800
you might consider a tool that is

64
00:02:36,110 --> 00:02:37,670
envsubst or environment substitute.

65
00:02:37,870 --> 00:02:41,119
That's really what it does is it pulls out environment variables

66
00:02:41,319 --> 00:02:43,490
from, and file you give it,

67
00:02:43,690 --> 00:02:46,340
and then it dumps those into a template.

68
00:02:46,540 --> 00:02:50,030
So, maybe you would have a different file in your configuration,

69
00:02:50,230 --> 00:02:51,589
and then this would go through

70
00:02:51,789 --> 00:02:54,050
and change every one of those environment variables in your app

71
00:02:54,290 --> 00:02:56,520
with whatever you set when you started

72
00:02:56,720 --> 00:02:59,980
Docker. This is a tool that you'll use in an upcoming assignment.

73
00:03:00,180 --> 00:03:02,960
Usually in Node, we don't see it that much because

74
00:03:03,350 --> 00:03:06,559
it's a more modern development framework so

75
00:03:06,759 --> 00:03:09,740
we tend not to have such bad habits that we maybe

76
00:03:09,940 --> 00:03:12,919
did with decades old programs where we kept all

77
00:03:13,119 --> 00:03:15,890
sorts of hard coded settings and environment variables all throughout the app

78
00:03:16,100 --> 00:03:18,110
that we needed to worry about changing on the fly.

79
00:03:18,440 --> 00:03:21,560
Usually in Node, we have them all either in a single

80
00:03:21,760 --> 00:03:23,090
JSON or YAML file,

81
00:03:23,300 --> 00:03:25,770
or we're setting them in the app

82
00:03:25,970 --> 00:03:29,000
but the app itself is looking for environment variables to change those.

83
00:03:29,200 --> 00:03:31,060
If all this isn't obvious to you,

84
00:03:31,260 --> 00:03:33,830
or something that you're definitely well versed in,

85
00:03:34,070 --> 00:03:37,189
then please go check out the 12-factor website for

86
00:03:37,389 --> 00:03:38,870
the config page. It's not that long,

87
00:03:39,080 --> 00:03:42,109
but it will give you a sense of why you

88
00:03:42,309 --> 00:03:43,370
need to care about this.

89
00:03:43,570 --> 00:03:46,129
In case you're confused, what is considered config

90
00:03:46,329 --> 00:03:48,020
and what is considered in your app.

91
00:03:48,220 --> 00:03:51,350
The short answer to that is that anything that would change based

92
00:03:51,550 --> 00:03:52,820
on either a test environment,

93
00:03:53,020 --> 00:03:54,050
or a production environment,

94
00:03:54,320 --> 00:03:57,320
or a dev environment, anything that might change in those three different

95
00:03:57,560 --> 00:04:00,649
environments, is a config setting that you need

96
00:04:00,849 --> 00:04:03,740
to pull out of your apps so that it's not hard coded in there.

