1
00:00:02,760 --> 00:00:04,391
Now that you've got the basics of multi-stage,

2
00:00:05,070 --> 00:00:08,220
there's lots of other ways to create flexibility

3
00:00:08,420 --> 00:00:10,980
in your Docker images that will benefit Node apps.

4
00:00:11,730 --> 00:00:13,440
In most situations, you're going to end up

5
00:00:13,640 --> 00:00:15,000
with some sort of testing infrastructure.

6
00:00:15,200 --> 00:00:18,089
Hopefully, you get that automated at some point that's building your

7
00:00:18,289 --> 00:00:21,119
images and testing them every time you're committing on specific

8
00:00:21,319 --> 00:00:22,650
branches, or even all branches,

9
00:00:22,850 --> 00:00:25,230
of your Git. In this case,

10
00:00:25,430 --> 00:00:28,410
you could build a separate stage just for testing

11
00:00:28,610 --> 00:00:31,001
that your CI infrastructure will run.

12
00:00:31,890 --> 00:00:33,690
It maybe runs npm test,

13
00:00:33,930 --> 00:00:35,340
or something else in addition.

14
00:00:35,640 --> 00:00:38,639
But you can allow a specific stage that's there in the

15
00:00:38,839 --> 00:00:40,100
middle somewhere of the image,

16
00:00:40,350 --> 00:00:41,610
maybe after production

17
00:00:41,810 --> 00:00:42,870
and before development,

18
00:00:43,080 --> 00:00:44,320
depending on how you want to set it up.

19
00:00:44,520 --> 00:00:46,440
And then you call that specific stage

20
00:00:46,740 --> 00:00:49,949
with a Docker build command inside your CE giving

21
00:00:50,149 --> 00:00:53,219
you a way to test before you build the final production

22
00:00:53,419 --> 00:00:56,249
image. We're definitely gonna make this more complicated

23
00:00:56,449 --> 00:00:58,590
as we go along to add more features.

24
00:00:58,790 --> 00:01:01,530
In this case, we could also do an npm install of

25
00:01:02,080 --> 00:01:04,328
development to make sure that our development tools like nodemon,

26
00:01:05,099 --> 00:01:06,258
or gulp, or bower,

27
00:01:06,630 --> 00:01:10,230
or something else that you need inside development only,

28
00:01:10,560 --> 00:01:13,320
you can put that inside the development stage

29
00:01:13,560 --> 00:01:15,770
and have npm run it a second time.

30
00:01:15,970 --> 00:01:18,839
So you would think of having an npm install in the production

31
00:01:19,039 --> 00:01:21,809
image, and that would normally install only your default

32
00:01:22,009 --> 00:01:23,970
packages. And then for your dev packages,

33
00:01:24,180 --> 00:01:27,600
you could specify only development in the second stage,

34
00:01:27,960 --> 00:01:30,060
and we'll do that later on this course.

35
00:01:30,570 --> 00:01:33,029
Also, another trick of multi-stage is because,

36
00:01:33,229 --> 00:01:34,319
by default Docker,

37
00:01:34,519 --> 00:01:36,750
when you build without specifying a target,

38
00:01:36,960 --> 00:01:38,430
it will build all these stages.

39
00:01:38,790 --> 00:01:41,970
So, one of the goals I usually have is to not repeat things.

40
00:01:42,210 --> 00:01:45,030
I try to only have my copy command for my code,

41
00:01:45,420 --> 00:01:47,430
copy in once during development

42
00:01:47,630 --> 00:01:49,650
and not copy in multiple stages

43
00:01:49,850 --> 00:01:52,679
or in a very early stage because if you're going

44
00:01:52,879 --> 00:01:55,590
to rebuild your image to update your code

45
00:01:55,790 --> 00:01:58,739
on your local dev machine, you really don't want that to happen a

46
00:01:58,939 --> 00:02:00,809
lot or repetitive times over

47
00:02:01,009 --> 00:02:03,919
and over. You really just want it to happen as low

48
00:02:04,119 --> 00:02:06,929
as possible in the file. Like the same rules we have for every

49
00:02:07,129 --> 00:02:10,019
Dockerfile. The good news here is we're definitely

50
00:02:10,219 --> 00:02:13,019
going to be adding more multi-stage features as we build out

51
00:02:13,219 --> 00:02:14,909
this Dockerfile for various uses,

52
00:02:15,109 --> 00:02:17,190
like local dev and production specifically.

53
00:02:17,430 --> 00:02:19,139
So, you'll see this Dockerfile get bigger

54
00:02:19,339 --> 00:02:21,760
and bigger as we add more features to it.

