1
00:00:02,540 --> 00:00:04,090
The rest of this section is on Docker Compose.

2
00:00:04,610 --> 00:00:07,305
But, I want to make sure you have the latest tools that

3
00:00:07,310 --> 00:00:08,690
you're going to need for this course.

4
00:00:08,750 --> 00:00:10,730
That's not very many tools, really.

5
00:00:11,330 --> 00:00:13,731
You're probably already using Node.js locally, so

6
00:00:14,420 --> 00:00:15,800
I won't talk too much about that.

7
00:00:15,830 --> 00:00:18,110
You're just going to use whatever Node version you prefer.

8
00:00:18,200 --> 00:00:20,749
A lot of this course is using Node in a container, so we'll

9
00:00:20,750 --> 00:00:21,840
worry about that later.

10
00:00:22,280 --> 00:00:23,690
Let's focus on the Docker tools.

11
00:00:23,960 --> 00:00:26,330
The two tools you'll need will be Docker, the engine in

12
00:00:26,331 --> 00:00:29,000
command line that we all think of as Docker

13
00:00:29,360 --> 00:00:31,957
itself. And then, Docker Compose, the separate binary

14
00:00:32,570 --> 00:00:34,070
that you'll use throughout this course.

15
00:00:34,580 --> 00:00:37,120
If you're on Mac or Windows 10, you'll

16
00:00:37,580 --> 00:00:39,049
be using Docker Desktop hopefully.

17
00:00:39,050 --> 00:00:40,460
That's the preferred option.

18
00:00:40,490 --> 00:00:42,709
It's the thing that Docker spends all their time on

19
00:00:42,710 --> 00:00:45,229
nowadays, and they keep adding features and improving

20
00:00:45,230 --> 00:00:48,230
performance. If you're on an older version of Windows,

21
00:00:48,260 --> 00:00:51,135
or Windows 10 Home, none of those have Hyper-V.

22
00:00:51,500 --> 00:00:53,851
That's what's required in order to use Docker Desktop.

23
00:00:53,852 --> 00:00:56,411
So, on those versions, you'll look up Docker

24
00:00:57,080 --> 00:01:00,160
Toolbox. I recommend you get that from the

25
00:01:00,170 --> 00:01:02,930
GitHub download link that I provide in the resources,

26
00:01:03,200 --> 00:01:05,629
not from Docker's documentation, because that one can be a

27
00:01:05,630 --> 00:01:08,150
little bit old. You definitely want the latest releases.

28
00:01:08,530 --> 00:01:09,720
We'll get to versions in a minute.

29
00:01:10,340 --> 00:01:12,741
Docker Toolbox will work with all the stuff here.

30
00:01:13,130 --> 00:01:15,250
It just won't have all the latest and greatest Docker

31
00:01:15,530 --> 00:01:17,000
features that Desktop might have.

32
00:01:18,260 --> 00:01:21,073
If you're on a Linux distribution for your main desktop,

33
00:01:21,500 --> 00:01:23,495
or if you're interested in installing on a server,

34
00:01:24,620 --> 00:01:26,180
then you're going to just use your package manager.

35
00:01:26,230 --> 00:01:28,778
But be careful, because the defaults in almost every

36
00:01:28,880 --> 00:01:31,428
package manager I've seen are going to give you old,

37
00:01:31,890 --> 00:01:34,878
or outdated, or even wrong Docker binaries.

38
00:01:35,450 --> 00:01:37,752
So, you're going to want to go to docs.docker.com,

39
00:01:38,510 --> 00:01:41,149
look up your distribution that you're currently using, and

40
00:01:41,150 --> 00:01:43,760
install via their preferred format.

41
00:01:43,800 --> 00:01:46,189
That'll make sure that you have the latest packages, from

42
00:01:46,190 --> 00:01:48,950
the latest repositories, of all those tools.

43
00:01:50,390 --> 00:01:52,369
Now, let's cover Docker Compose real quick, because it's

44
00:01:52,370 --> 00:01:54,357
technically a separate binary, written in Python, versus

45
00:01:54,358 --> 00:01:56,083
Docker, which is written in Go.

46
00:01:57,110 --> 00:02:00,170
Docker Compose comes with Docker Desktop and the Toolbox.

47
00:02:00,650 --> 00:02:02,719
But, if you're on Linux, you're going to need to download

48
00:02:02,720 --> 00:02:05,720
it separately. You can go and download it from GitHub, but

49
00:02:05,750 --> 00:02:08,030
I don't recommend doing that. I think it's actually better

50
00:02:08,240 --> 00:02:09,857
to use pip, the python installer.

51
00:02:10,220 --> 00:02:12,523
So, use pip install docker-compose, like I show

52
00:02:13,220 --> 00:02:15,670
here. That will ensure you get the latest version.

53
00:02:15,792 --> 00:02:18,290
You can also use that to update it later on.

54
00:02:18,860 --> 00:02:21,457
Lastly, let's just make sure that you have the latest

55
00:02:22,070 --> 00:02:24,560
version. So, run these two commands from your command line.

56
00:02:24,890 --> 00:02:27,290
Get your Docker version for the client and the engine.

57
00:02:27,470 --> 00:02:28,470
That's the two parts of Docker.

58
00:02:29,150 --> 00:02:30,770
And then the Docker Compose version.

59
00:02:31,100 --> 00:02:33,590
These are the versions that I built this course for.

60
00:02:34,280 --> 00:02:37,010
These are the latest versions as of the end of 2018, back

61
00:02:38,360 --> 00:02:39,950
when I started planning this stuff.

62
00:02:40,190 --> 00:02:42,739
Those are the versions that have all the new features that

63
00:02:42,740 --> 00:02:44,150
you will use throughout this course.

64
00:02:44,420 --> 00:02:47,300
It's more important that you have the latest Docker Engine.

65
00:02:47,810 --> 00:02:50,439
But, Docker Compose is getting updated, as well, for a lot

66
00:02:50,440 --> 00:02:52,669
of the new features that you'll learn in this course.

67
00:02:52,670 --> 00:02:55,610
So, I would say just do the best you can to get the latest.

68
00:02:56,000 --> 00:02:58,842
Anything newer than mine will be fine because Docker works

69
00:02:58,910 --> 00:03:00,710
really hard on backwards compatibility.

70
00:03:00,980 --> 00:03:03,626
So, I rarely see an issue with newer versions breaking

71
00:03:04,190 --> 00:03:05,480
anything in my courses.

72
00:03:05,690 --> 00:03:07,846
So, just get the latest stuff, and let's get

73
00:03:08,720 --> 00:03:09,432
into Docker Compose.

