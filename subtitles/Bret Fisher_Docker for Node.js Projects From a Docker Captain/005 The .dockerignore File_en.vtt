WEBVTT
1
00:00:02.510 --> 00:00:05.360
Next up, let's talk about a file that I haven't mentioned yet.

2
00:00:05.560 --> 00:00:07.152
It's not technically a part of the Dockerfile

3
00:00:07.360 --> 00:00:08.450
or the Compose file.

4
00:00:08.780 --> 00:00:11.130
It's the .dockerignore file.

5
00:00:11.330 --> 00:00:13.075
This is very much like the .gitignore

6
00:00:14.420 --> 00:00:15.980
file, if you're familiar with that,

7
00:00:16.219 --> 00:00:19.490
which is designed to prevent any

8
00:00:19.690 --> 00:00:22.234
unnecessary files that you don't want inside the git.

9
00:00:22.434 --> 00:00:23.210
But in this case, with .dockerignore,

10
00:00:24.230 --> 00:00:27.530
you guessed it, it won't be put into the build.

11
00:00:27.770 --> 00:00:30.739
So, it keeps things out of our images that

12
00:00:30.939 --> 00:00:31.880
we don't want in them.

13
00:00:32.119 --> 00:00:33.892
First up in this list is the .gitfolder.

14
00:00:35.210 --> 00:00:37.690
If you're using git, or any other svn

15
00:00:38.240 --> 00:00:41.120
product, you definitely don't want those files

16
00:00:41.480 --> 00:00:44.599
in your image. There's no reason for them to be there in almost all

17
00:00:44.799 --> 00:00:46.940
cases. As your app grows

18
00:00:47.140 --> 00:00:48.650
and has a longer history,

19
00:00:48.850 --> 00:00:50.270
it's going to get huge

20
00:00:50.480 --> 00:00:52.795
and you could potentially be using hundreds of MG

21
00:00:53.120 --> 00:00:56.239
or more unnecessarily in your image that you just don't

22
00:00:56.439 --> 00:00:58.190
need. Next is the node modules.

23
00:00:58.390 --> 00:01:00.980
We don't want to copy those node modules from the host.

24
00:01:01.180 --> 00:01:02.720
We want to build those in the image.

25
00:01:02.990 --> 00:01:05.959
This will save us the step of having those in there so that we

26
00:01:06.159 --> 00:01:07.496
don't have them accidentally.

27
00:01:07.970 --> 00:01:10.939
Then any other files like node debug that you might accidently get in

28
00:01:11.139 --> 00:01:11.980
there in your logs.

29
00:01:12.386 --> 00:01:15.019
Lastly I always put in the Docker Compose

30
00:01:15.219 --> 00:01:18.170
with an asterisk just in case I have multiple Docker Composes because I don't

31
00:01:18.470 --> 00:01:19.810
really need that in there.

32
00:01:20.010 --> 00:01:22.370
In terms of security,

33
00:01:23.390 --> 00:01:26.860
if I potentially...if someone were to hack into my app somehow

34
00:01:27.060 --> 00:01:28.190
and to get the files out of it,

35
00:01:28.460 --> 00:01:29.839
if they were to see that file,

36
00:01:30.039 --> 00:01:31.399
there probably shouldn't be any secrets

37
00:01:31.599 --> 00:01:32.560
or anything sensitive in there.

38
00:01:32.870 --> 00:01:35.869
But, it's definitely going to give them the exact design of how

39
00:01:36.069 --> 00:01:38.539
my entire multi-level app works,

40
00:01:38.739 --> 00:01:39.949
right. If I have an in-tier app

41
00:01:40.149 --> 00:01:43.220
with micro services and I've got dozens of containers

42
00:01:43.550 --> 00:01:44.810
looking at that Compose file,

43
00:01:45.440 --> 00:01:48.559
if it was a secret, which it maybe should be in some cases

44
00:01:48.759 --> 00:01:49.580
with private code,

45
00:01:50.270 --> 00:01:52.669
that's going to describe all the environment variables,

46
00:01:52.869 --> 00:01:54.289
and all the different parts of my app,

47
00:01:54.489 --> 00:01:57.499
and what they're all called. That could give a lot information

48
00:01:57.699 --> 00:01:59.330
that I maybe don't want in my image.

49
00:01:59.750 --> 00:02:02.779
What's interesting here is to flip it on its

50
00:02:02.979 --> 00:02:05.989
head a little bit, you don't need the Dockerfile to be copied

51
00:02:06.189 --> 00:02:07.400
into the image. But,

52
00:02:07.600 --> 00:02:09.080
I tend to like to include it.

53
00:02:09.500 --> 00:02:12.769
I don't feel like the Dockerfile itself is necessarily

54
00:02:12.969 --> 00:02:15.620
too risky in terms of the security to put there,

55
00:02:15.820 --> 00:02:18.799
because it's really just describing the app that if someone were to hack

56
00:02:18.999 --> 00:02:21.080
into it, they've already got that app.

57
00:02:21.280 --> 00:02:22.550
They've already got all the information in that app.

58
00:02:22.750 --> 00:02:25.070
So, just seeing the Dockerfile for that app is no big deal.

59
00:02:25.270 --> 00:02:27.522
Of course, if this is open source you're creating,

60
00:02:27.750 --> 00:02:30.920
it's freely available, so I like to have it in there

61
00:02:31.130 --> 00:02:32.720
because that way,

62
00:02:32.960 --> 00:02:35.330
when I'm looking at a specific container running,

63
00:02:35.840 --> 00:02:38.839
I can easily see the Dockerfile itself just

64
00:02:39.039 --> 00:02:41.840
by doing a simple docker exec cat

65
00:02:42.040 --> 00:02:44.690
on that file and see exactly how that was built.

66
00:02:44.990 --> 00:02:46.279
It's a little bit easier,

67
00:02:46.479 --> 00:02:49.310
I find, to read than if you use docker history,

68
00:02:49.580 --> 00:02:51.170
which will essentially do the same thing.

69
00:02:51.410 --> 00:02:54.350
But, I find that just catting out this single file

70
00:02:54.560 --> 00:02:56.150
is a lot easier for me to read.

71
00:02:56.350 --> 00:02:59.420
I like to say that as my own little standard of

72
00:02:59.810 --> 00:03:01.840
showing exactly when this one was built.

73
00:03:02.040 --> 00:03:04.970
That way, for each image commit

74
00:03:05.210 --> 00:03:06.710
that you're making over time,

75
00:03:06.910 --> 00:03:09.949
the Dockerfile for when that one was built is right in

76
00:03:10.149 --> 00:03:12.620
there, and I can easily compare two images

77
00:03:12.890 --> 00:03:15.979
with that file without having to worry about trying to mess

78
00:03:16.179 --> 00:03:17.030
with the docker history command.

79
00:03:17.440 --> 00:03:19.159
The other one there is optional as you may

80
00:03:19.359 --> 00:03:21.266
or may not want to include the readme.

81
00:03:22.070 --> 00:03:24.859
Some people, they really don't want to include any documentation,

82
00:03:25.059 --> 00:03:26.840
to just make their image as small as possible.

83
00:03:27.170 --> 00:03:30.710
I'm a little more practical on that in thinking

84
00:03:30.940 --> 00:03:33.949
if I've got such space concerns that markdown files

85
00:03:34.149 --> 00:03:35.749
are really going to put me over some sort of limits,

86
00:03:35.949 --> 00:03:37.130
then I've got bigger problems.

87
00:03:37.400 --> 00:03:40.519
I would rather have the readme in there just in case someone

88
00:03:40.719 --> 00:03:42.693
gets the image and wants to dig around in it,

89
00:03:42.893 --> 00:03:43.970
especially if it's open source,

90
00:03:44.240 --> 00:03:46.519
and they want to see what the image is doing,

91
00:03:46.719 --> 00:03:48.289
and they maybe don't have access to the source code

92
00:03:48.489 --> 00:03:51.320
or the repo. So, the readme is in there as a little helpful

93
00:03:51.520 --> 00:03:54.499
tip, right. So, I tend to include those in my image

94
00:03:54.699 --> 00:03:57.620
which means I will not put them in my dockerignore file.

95
00:03:58.280 --> 00:04:01.130
We'll be using this file that you're going to be creating,

96
00:04:01.330 --> 00:04:03.140
as well as the previous few lectures,

97
00:04:03.410 --> 00:04:06.649
in our assignment coming up next about migrating

98
00:04:06.849 --> 00:04:07.490
a traditional app.

