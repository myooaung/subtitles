WEBVTT
1
00:00:04.070 --> 00:00:05.900
Thank you so much for taking this course.

2
00:00:06.260 --> 00:00:08.900
It's designed for a wide audience but here are some basics.

3
00:00:09.200 --> 00:00:12.010
You definitely need to be someone who has Node.js

4
00:00:12.710 --> 00:00:15.503
basics and fundamentals in hand, because I'm not teaching

5
00:00:15.710 --> 00:00:18.601
you Node.js. You will definitely learn some things that are

6
00:00:18.710 --> 00:00:20.761
applicable to Docker and containers with Node.js.

7
00:00:21.260 --> 00:00:24.049
But, this course isn't designed to teach you a programming

8
00:00:24.050 --> 00:00:26.745
language. It's assuming that you know Node.js enough to

9
00:00:27.110 --> 00:00:28.880
write simple apps at least.

10
00:00:29.390 --> 00:00:31.617
The other thing is, you need to know the basics of Docker.

11
00:00:32.210 --> 00:00:35.101
If you haven't checked out my Docker Mastery course, that's

12
00:00:35.390 --> 00:00:37.159
where you learn those basics. You learn the core

13
00:00:37.160 --> 00:00:39.904
fundamentals of the command line, how to make images and

14
00:00:40.190 --> 00:00:42.469
all that stuff. You're going to need, definitely, those

15
00:00:42.470 --> 00:00:44.209
skills before you start this course.

16
00:00:44.210 --> 00:00:46.010
So, go check those out, if you haven't already.

17
00:00:46.430 --> 00:00:49.223
Once you've got those basics, this is a course for anyone

18
00:00:49.880 --> 00:00:52.100
on the Node.js path, whether you're someone who's

19
00:00:52.340 --> 00:00:53.728
relatively new to both Node and Docker.

20
00:00:54.440 --> 00:00:57.282
Or, maybe you've been using Node and Docker for quite some

21
00:00:57.440 --> 00:00:59.629
time now, but you want to make sure you're getting the most

22
00:00:59.630 --> 00:01:02.750
out of it. I have been using Docker and Node since the

23
00:01:02.810 --> 00:01:04.843
early days of Docker and the early days of Node.

24
00:01:05.269 --> 00:01:08.062
For years and years now, I have used both these products,

25
00:01:08.120 --> 00:01:10.729
and I'm a big fan of both. So, I'm excited that we finally

26
00:01:10.730 --> 00:01:13.520
have the best course, I think, on the Internet,

27
00:01:13.730 --> 00:01:16.523
for learning how to get the best out of Node and the best

28
00:01:16.700 --> 00:01:17.810
out of Docker together.

29
00:01:18.140 --> 00:01:20.209
With this course, we're going to start out with some

30
00:01:20.210 --> 00:01:20.899
review.

31
00:01:20.900 --> 00:01:23.311
You're going to have a section on Docker Compose

32
00:01:24.230 --> 00:01:25.572
basics, sort of as a review.

33
00:01:25.730 --> 00:01:28.572
If you haven't really learned Docker Compose yet, it'll be

34
00:01:28.790 --> 00:01:30.469
helpful for you to have that. If you've already learned

35
00:01:30.470 --> 00:01:33.361
Docker Compose, it's a quick review of what you're going to

36
00:01:33.380 --> 00:01:35.500
need to know to get going forward in this course.

37
00:01:35.980 --> 00:01:37.940
Then after that, we're going to jump into the Dockerfile

38
00:01:38.180 --> 00:01:41.060
and focus on getting the best, basic core

39
00:01:41.390 --> 00:01:44.149
Dockerfile you can so we can build on that throughout the

40
00:01:44.150 --> 00:01:46.351
course. You're going to see that throughout this course,

41
00:01:46.352 --> 00:01:48.998
how we're going to iterate and make things better, and

42
00:01:49.010 --> 00:01:52.370
better, and better as we go, learning on different

43
00:01:52.430 --> 00:01:54.410
techniques that you learned in the past sections.

44
00:01:54.710 --> 00:01:56.779
So, you can definitely jump around in all these different

45
00:01:56.780 --> 00:01:58.170
sections if you want.

46
00:01:58.460 --> 00:02:01.155
But, it's designed that you kind of take in order so in

47
00:02:01.370 --> 00:02:03.499
case you skip ahead and you check something later in the

48
00:02:03.500 --> 00:02:05.899
course and it doesn't quite make sense, or some things I

49
00:02:05.900 --> 00:02:08.689
mention, check back earlier in the course to make sure that

50
00:02:08.690 --> 00:02:11.140
you didn't miss some of those key videos to relate

51
00:02:11.720 --> 00:02:12.720
to that later video.

52
00:02:13.010 --> 00:02:15.406
Once you've got those basics down of the Docker Compose,

53
00:02:16.100 --> 00:02:18.770
and the Dockerfile and the Docker image,

54
00:02:19.100 --> 00:02:21.403
then you're going to focus on some nuances that

55
00:02:22.070 --> 00:02:24.814
you maybe might not completely understand, and I'm going

56
00:02:25.130 --> 00:02:26.130
to clear it all up for you.

57
00:02:26.420 --> 00:02:29.150
One of those is understanding how Docker and Linux,

58
00:02:29.420 --> 00:02:30.982
in general, control the Node process.

59
00:02:30.983 --> 00:02:34.400
How Docker changes that to make sure that you know

60
00:02:34.640 --> 00:02:36.889
what different options there are for starting up and

61
00:02:36.890 --> 00:02:39.649
shutting down Node, and what the right ways to do it are,

62
00:02:39.650 --> 00:02:41.000
in different scenarios.

63
00:02:41.330 --> 00:02:44.059
Then, you're going to jump into some neat, advanced, newer

64
00:02:44.060 --> 00:02:46.608
features. Some that are brand new as of these videos

65
00:02:47.300 --> 00:02:49.750
coming out, around making that Dockerfile the most

66
00:02:50.210 --> 00:02:52.669
efficient and flexible possible, using things called

67
00:02:52.670 --> 00:02:55.159
BuildKit, and Multistage and a whole bunch of other stuff

68
00:02:55.160 --> 00:02:56.160
you'll learn.

69
00:02:56.500 --> 00:02:59.440
Then, in the next section, I'll jump back a little bit and

70
00:02:59.650 --> 00:03:02.980
talk more about distributed computing and cloud

71
00:03:03.010 --> 00:03:06.001
design. Because that's really the core principles of Docker

72
00:03:06.630 --> 00:03:08.500
is to use something called Twelve-Factor design.

73
00:03:08.710 --> 00:03:11.229
We want to make sure that our Node apps are doing that in

74
00:03:11.230 --> 00:03:13.631
our containers, and how we might migrate old apps

75
00:03:14.350 --> 00:03:16.900
into this new way of doing things in a container.

76
00:03:17.530 --> 00:03:20.029
After that, you're going to have a great section on

77
00:03:20.410 --> 00:03:22.749
Compose. It's one of the most exciting for me to make in

78
00:03:22.750 --> 00:03:25.329
this course, because it's taking all the sweet little

79
00:03:25.330 --> 00:03:28.120
features of Compose that not everyone knows about,

80
00:03:28.300 --> 00:03:30.639
and combining them all together to get you a really

81
00:03:30.640 --> 00:03:33.820
efficient local development and test setup

82
00:03:34.000 --> 00:03:35.760
with using Docker Compose command line and the Docker

83
00:03:36.010 --> 00:03:37.390
Compose YAML file.

84
00:03:38.140 --> 00:03:40.599
I'm pretty sure that most of you are going to learn at

85
00:03:40.600 --> 00:03:42.550
least a few things in that section.

86
00:03:42.880 --> 00:03:44.200
It's got a lot to it.

87
00:03:44.440 --> 00:03:47.331
I hope you stick with that one and learn everything because

88
00:03:47.380 --> 00:03:49.928
you'll be using those skill sets for the rest of the

89
00:03:50.350 --> 00:03:52.540
time that you'll be using Docker in your career.

90
00:03:52.990 --> 00:03:55.059
Later on in the course, after that, we're going to start

91
00:03:55.060 --> 00:03:56.628
focusing on production concerns.

92
00:03:57.040 --> 00:03:59.931
Now that you've built this ultimate developer setup, you've

93
00:04:00.130 --> 00:04:02.619
concerned yourself with some of the testing things you need

94
00:04:02.620 --> 00:04:05.350
to worry about. Now we're going to focus on production.

95
00:04:05.839 --> 00:04:08.534
The first there is to worry about the image and to make

96
00:04:08.890 --> 00:04:11.438
sure we have added all the production type things we

97
00:04:11.650 --> 00:04:13.904
concern ourselves with into the images or into

98
00:04:14.620 --> 00:04:15.880
the Dockerfiles themselves.

99
00:04:16.360 --> 00:04:18.173
Then, we'll jump into deploying those

100
00:04:19.420 --> 00:04:21.310
containers and running them in production.

101
00:04:22.000 --> 00:04:23.984
Whether you're going to run those on someone else's setup,

102
00:04:24.370 --> 00:04:26.410
or you're going to build your own servers and run them.

103
00:04:26.710 --> 00:04:28.689
Whether you're going to use Docker Engine, or maybe

104
00:04:28.690 --> 00:04:31.385
something fancier like orchestration with Kubernetes or

105
00:04:31.390 --> 00:04:33.310
Swarm, I've got you covered.

106
00:04:33.520 --> 00:04:35.919
We're going to cover some of the generalities of the things

107
00:04:35.920 --> 00:04:38.020
you need to worry about. Specifically, when it comes to

108
00:04:38.100 --> 00:04:39.864
HTTP connections and web apps, which

109
00:04:41.080 --> 00:04:43.748
Node is great at. We'll focus on connection handling,

110
00:04:44.740 --> 00:04:47.680
whether it's the start, the beginning, the middle,

111
00:04:47.950 --> 00:04:50.694
the end of all those different connections, I've got you

112
00:04:50.920 --> 00:04:53.740
covered on that. I even give you some sample files

113
00:04:54.010 --> 00:04:56.289
on different orchestrators and ways you can go about

114
00:04:56.290 --> 00:04:58.240
deploying your Node.js containers.

115
00:04:58.600 --> 00:05:01.180
Again, I'm excited that you're taking this course.

116
00:05:01.420 --> 00:05:04.115
I put a lot of love into this thing because I love both

117
00:05:04.240 --> 00:05:05.240
Docker and Node.js.

118
00:05:05.870 --> 00:05:07.694
As I've said, I've been using both for years.

119
00:05:08.080 --> 00:05:10.330
I really wanted to take everything that I've learned from

120
00:05:10.390 --> 00:05:11.390
others,

121
00:05:11.440 --> 00:05:13.950
because you all teach me the same thing in my open source

122
00:05:13.960 --> 00:05:16.410
on GitHub at conferences and community events that

123
00:05:16.960 --> 00:05:19.270
I have been going to for years and years now.

124
00:05:19.510 --> 00:05:21.677
I'm always learning how to make these things better.

125
00:05:22.090 --> 00:05:24.429
I've taken everything I could think of and thrown it into

126
00:05:24.430 --> 00:05:27.190
this course, which is why it's got so many videos.

127
00:05:27.460 --> 00:05:30.339
I'm really excited for you that you're going to be learning

128
00:05:30.340 --> 00:05:33.159
all this stuff too. I'll look forward to seeing you either

129
00:05:33.160 --> 00:05:35.283
in the Slack Chat, or in the Q & A,

130
00:05:36.160 --> 00:05:38.757
or sending me a Tweet with your completed certificate

131
00:05:39.400 --> 00:05:40.510
that you finished this course.

132
00:05:40.900 --> 00:05:42.850
Any of the ways you want to communicate with me is great.

133
00:05:42.880 --> 00:05:44.800
I love to get feedback, good or bad.

134
00:05:44.890 --> 00:05:47.620
I hope after you finish this course, you take a look at my

135
00:05:47.650 --> 00:05:50.840
other courses and give me ideas for courses that you need.

136
00:05:50.860 --> 00:05:53.470
Because, that's what I'm doing here is making more and more

137
00:05:53.740 --> 00:05:55.810
DevOps type learning here.

138
00:05:56.030 --> 00:05:58.329
I'm looking forward to your ideas on what you're ready for

139
00:05:58.330 --> 00:05:58.750
next.

