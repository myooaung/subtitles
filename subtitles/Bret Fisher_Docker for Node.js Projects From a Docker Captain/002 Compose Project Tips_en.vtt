WEBVTT
1
00:00:02.710 --> 00:00:04.719
You should have already done some of the basics with

2
00:00:04.720 --> 00:00:06.909
Compose and you know your way around that command line

3
00:00:06.910 --> 00:00:09.605
tool. But, there's some things I want to make sure that

4
00:00:09.790 --> 00:00:11.456
we've got down and specifically in

5
00:00:12.760 --> 00:00:15.760
the file itself, the Compose YAML, before we jump into

6
00:00:15.820 --> 00:00:17.620
specifics around your environment.

7
00:00:17.650 --> 00:00:20.440
Throughout this course, you've learned proper

8
00:00:20.650 --> 00:00:23.527
Node Dockerfiles, proper project

9
00:00:23.720 --> 00:00:26.650
setup and a few other things like Compose basics.

10
00:00:27.010 --> 00:00:29.800
Now what we're getting into is your day-to-day development

11
00:00:29.860 --> 00:00:31.440
setup in Compose YAML.

12
00:00:32.049 --> 00:00:34.499
For this, you're going to go into the compose tips

13
00:00:34.840 --> 00:00:37.120
directory, and there's a good and bad file there.

14
00:00:37.600 --> 00:00:40.197
I'm not going to read line for line the help I put in

15
00:00:40.630 --> 00:00:42.549
there, but I want to jump around a little bit and show you

16
00:00:42.550 --> 00:00:44.657
some big ticket items that I see a lot with

17
00:00:45.610 --> 00:00:46.670
people getting confused.

18
00:00:46.870 --> 00:00:50.390
This includes my clients, my students in other courses.

19
00:00:50.410 --> 00:00:53.203
This includes blogs on the Internet that get it wrong, or

20
00:00:53.410 --> 00:00:56.220
at least not as good as it could be for your local setup.

21
00:00:56.440 --> 00:00:58.090
I want you to have the best setup.

22
00:00:58.210 --> 00:01:00.282
Let's get to some of those specifics.

23
00:01:00.640 --> 00:01:02.980
Obviously here, we're using Docker Compose for local dev.

24
00:01:03.010 --> 00:01:04.956
That's the ideal setup for Docker Compose.

25
00:01:05.319 --> 00:01:07.475
It was meant for local development workflow.

26
00:01:07.665 --> 00:01:10.213
When I say developer, I mean anyone who needs to run

27
00:01:10.450 --> 00:01:13.480
containers to do things. You might just be Web

28
00:01:13.930 --> 00:01:16.239
Admin that's not really doing a lot of development, but you

29
00:01:16.240 --> 00:01:18.053
need to run some Node apps, and maybe

30
00:01:19.600 --> 00:01:21.159
do some stuff and sample test stuff.

31
00:01:21.160 --> 00:01:23.409
Or maybe you're a DBA and you need the Node frontend and

32
00:01:23.410 --> 00:01:25.179
you're going to be doing the backend DBA stuff.

33
00:01:25.180 --> 00:01:27.080
Whatever. It just really means you're running Compose.

34
00:01:27.940 --> 00:01:30.219
The interesting thing here is that the industry, and even

35
00:01:30.220 --> 00:01:32.439
Docker in some of its documentation, has gotten a little

36
00:01:32.440 --> 00:01:34.930
confused around the versions of our Compose file.

37
00:01:35.290 --> 00:01:37.899
That's the first line in your Compose file defines the

38
00:01:37.900 --> 00:01:40.350
version. There's three versions, 1, 2 and 3 and we

39
00:01:40.900 --> 00:01:43.810
started out back in the day when Compose was created with

40
00:01:43.870 --> 00:01:46.060
Version 1 and there really wasn't any version listed.

41
00:01:46.090 --> 00:01:48.932
Then we got eventually to Version 2, and that gave us cool

42
00:01:48.970 --> 00:01:51.250
things like networks and volumes, and stuff like that.

43
00:01:51.570 --> 00:01:54.461
And then Version 3 came out a few years ago that was really

44
00:01:54.580 --> 00:01:56.862
about clustering and orchestration.

45
00:01:57.430 --> 00:02:00.321
I think some of us have gotten confused around what Version

46
00:02:00.490 --> 00:02:03.310
2 and Version 3 are and why they're different.

47
00:02:03.670 --> 00:02:06.580
Just to be clear here, Version 2 is not

48
00:02:06.640 --> 00:02:09.910
outdated. It has not been replaced by Version 3.

49
00:02:10.180 --> 00:02:12.679
Think of it as almost like a fork in the road where

50
00:02:13.150 --> 00:02:15.737
Version 2 is really optimized for Docker Compose

51
00:02:16.210 --> 00:02:18.846
command line local use on your machine.

52
00:02:19.210 --> 00:02:20.925
Version 3 is good for compatibility

53
00:02:22.870 --> 00:02:26.200
between local Docker Compose and something like Swarm

54
00:02:26.230 --> 00:02:29.440
or Kubernetes. If you're not using these files with

55
00:02:29.680 --> 00:02:32.081
specifically an orchestrator, then there's really

56
00:02:32.770 --> 00:02:34.050
no advantage to Version 3.

57
00:02:34.060 --> 00:02:36.461
Version 3 has stuff in it around deployments, and

58
00:02:37.210 --> 00:02:39.611
high availability, and rolling updates, and stuff

59
00:02:40.330 --> 00:02:43.089
like that. But, all those features that you would need for

60
00:02:43.090 --> 00:02:45.740
local Docker Compose use are in Version 2.

61
00:02:46.300 --> 00:02:49.089
In fact, Version 2 has a few features that we don't get in

62
00:02:49.090 --> 00:02:51.785
Version 3 because they didn't make sense or didn't work

63
00:02:51.940 --> 00:02:54.820
well in a multi-server cluster environment.

64
00:02:55.480 --> 00:02:57.819
I'm working with the Docker team now to help improve that

65
00:02:57.820 --> 00:03:00.670
documentation, but there's lots of places to figure out,

66
00:03:00.700 --> 00:03:02.380
and how to say it, and what to say.

67
00:03:02.680 --> 00:03:04.030
So, that's not quite up to date.

68
00:03:04.120 --> 00:03:06.668
You're getting this before the documentation is even

69
00:03:07.030 --> 00:03:10.014
updated. My recommendation: stick with Version 2 if

70
00:03:10.360 --> 00:03:12.640
you're focused on local Docker Compose environments.

71
00:03:12.970 --> 00:03:15.519
If you're not yet using Swarm or Kubernetes  and you're not

72
00:03:15.520 --> 00:03:18.790
using Compose files or Stack files

73
00:03:19.120 --> 00:03:21.815
in those scenarios, then the only version you should be

74
00:03:21.820 --> 00:03:24.489
using is Version 2. There's no benefit to Version 3 for

75
00:03:24.490 --> 00:03:27.283
that. If we look over here on the Docker website, you see

76
00:03:27.610 --> 00:03:29.739
that they've broken out the documentation into the

77
00:03:29.740 --> 00:03:30.867
different the versions.

78
00:03:31.150 --> 00:03:32.676
Version 3 tends to be the default.

79
00:03:32.677 --> 00:03:34.660
It's the one I go to all the time.

80
00:03:35.020 --> 00:03:37.715
But, when I'm focused exclusively on local development,

81
00:03:38.350 --> 00:03:40.869
and I don't intend for that Compose file to ever be used

82
00:03:40.870 --> 00:03:43.712
for Swarm or some production setup, then I will just click

83
00:03:43.870 --> 00:03:44.870
on the Version 2.

84
00:03:45.130 --> 00:03:47.825
That way, I am focused on the features that I just need

85
00:03:48.100 --> 00:03:50.697
locally. I don't get to see the deploy features there

86
00:03:51.280 --> 00:03:52.990
because those are really about Version 3.

87
00:03:53.320 --> 00:03:55.779
Then I get a couple of things there that are exclusive to

88
00:03:55.780 --> 00:03:58.622
Version 2, including the depends on, which a lot of people

89
00:03:58.820 --> 00:04:01.990
on the Internet complain about, saying that depends on

90
00:04:02.290 --> 00:04:04.599
isn't in Version 3 and they really wish it was there, and

91
00:04:04.600 --> 00:04:05.630
it was very handy.

92
00:04:05.920 --> 00:04:08.664
Well, it doesn't really make sense to have depends on in

93
00:04:08.890 --> 00:04:10.997
a multi-server cluster setup because things

94
00:04:11.980 --> 00:04:15.160
running on one machine can't necessarily, or easily,

95
00:04:15.340 --> 00:04:17.290
depend on something on a different server,

96
00:04:17.760 --> 00:04:20.504
right. In distributed computing, really the problem with

97
00:04:20.529 --> 00:04:22.899
your app, that we'll talk about later in this section, is

98
00:04:22.900 --> 00:04:26.050
that your app needs to be able to do retries and expect

99
00:04:26.080 --> 00:04:28.030
outages of other things it has to talk to.

100
00:04:28.340 --> 00:04:30.489
Any time you have two parts of an application running

101
00:04:30.490 --> 00:04:33.136
separately, they need to have something to do when the

102
00:04:33.220 --> 00:04:35.915
connection fails. Either they retry, or they just crash

103
00:04:36.340 --> 00:04:37.390
and let Docker handle it.

104
00:04:37.660 --> 00:04:38.860
Anyway, we'll get to all that later.

105
00:04:38.950 --> 00:04:41.350
The cool thing is in Version 2, we get some features with

106
00:04:41.440 --> 00:04:44.170
depends on that we don't get in Version 3.

107
00:04:45.200 --> 00:04:47.060
There's other features in Version 2 as well.

108
00:04:47.210 --> 00:04:48.629
You can control more hardware.

109
00:04:48.630 --> 00:04:50.884
You can do devices and things in the YAML file

110
00:04:51.650 --> 00:04:54.019
that you can't do in Version 3 because they just don't work

111
00:04:54.020 --> 00:04:56.570
in Swarm or Kubernetes the way that you wish they would.

112
00:04:56.930 --> 00:04:58.670
They're just in Version 2 for now.

113
00:04:58.880 --> 00:05:01.609
This is why I stick with Version 2 when I'm just focusing

114
00:05:01.610 --> 00:05:02.610
on local stuff.

115
00:05:03.450 --> 00:05:06.341
Of course, if you can't tell, I may sound like I know a lot

116
00:05:06.360 --> 00:05:09.029
about the Compose file and the Compose command line, but

117
00:05:09.030 --> 00:05:11.431
really, that's me using it every day and studying

118
00:05:12.480 --> 00:05:14.550
these pages. The Compose file page.

119
00:05:14.880 --> 00:05:17.624
The Compose command line page, and I've referenced those

120
00:05:18.000 --> 00:05:19.230
here as well.

121
00:05:19.350 --> 00:05:20.640
There's a lot to it.

122
00:05:20.910 --> 00:05:22.080
I live there every day.

123
00:05:22.320 --> 00:05:25.162
If you're going to be using Compose as your main way to do

124
00:05:25.200 --> 00:05:28.042
Docker base development, then I expect that you would have

125
00:05:28.110 --> 00:05:30.040
those on your browser most days as well.

126
00:05:30.330 --> 00:05:33.060
Even after years of use, I still reference them constantly.

127
00:05:33.656 --> 00:05:36.840
If you jump into those files in the Compose tips area,

128
00:05:37.020 --> 00:05:38.370
you'll see the good and the bad YAML.

129
00:05:38.640 --> 00:05:40.845
In that directory, I'm in the good file right

130
00:05:41.670 --> 00:05:43.979
now. I'm not necessarily going to read all these to you

131
00:05:43.980 --> 00:05:46.259
because I encourage you to go through these and study these

132
00:05:46.260 --> 00:05:49.340
yourselves. I'm marking in this particular good

133
00:05:49.350 --> 00:05:50.624
YAML what's good about it.

134
00:05:50.862 --> 00:05:52.560
It's sticking to the 2 version.

135
00:05:52.950 --> 00:05:55.278
It's using depends on, which is good

136
00:05:56.220 --> 00:05:58.379
in Version 2. We'll talk a little bit later about how you

137
00:05:58.380 --> 00:06:00.719
can actually use healthchecks to get more out of your

138
00:06:00.720 --> 00:06:03.683
depends on. As we scroll down, there's a couple of other

139
00:06:03.756 --> 00:06:06.240
things good for using named volumes.

140
00:06:06.450 --> 00:06:08.909
Named volumes will mean that your databases will stick

141
00:06:08.910 --> 00:06:11.750
around after you do a docker compose down for the day, and

142
00:06:12.040 --> 00:06:13.680
maybe go home after you've cleaned up.

143
00:06:14.130 --> 00:06:16.739
Those named volumes will stick around as long as you name

144
00:06:16.740 --> 00:06:17.740
them in the Compose file.

145
00:06:18.170 --> 00:06:20.900
There's more don'ts here than we have dos.

146
00:06:21.540 --> 00:06:24.149
I see a lot of things that people shouldn't do, so it's

147
00:06:24.150 --> 00:06:25.679
kind of easier for me to just list those.

148
00:06:25.680 --> 00:06:27.907
In fact, the don'ts file that you can take a look at in

149
00:06:27.908 --> 00:06:30.290
YAML is bigger than the dos.

150
00:06:30.810 --> 00:06:33.484
There's a lot of things I see people do that are Legacy

151
00:06:34.050 --> 00:06:35.962
or just not necessary anymore.

152
00:06:36.390 --> 00:06:38.850
Or, they're maybe setting defaults that they don't need to

153
00:06:38.910 --> 00:06:41.189
set, and that's just an unnecessary step that they've got

154
00:06:41.190 --> 00:06:42.190
to go through.

155
00:06:42.480 --> 00:06:45.210
Two big, unnecessary ones there that I see people using are

156
00:06:45.240 --> 00:06:47.730
aliases and container name.

157
00:06:48.000 --> 00:06:51.450
Now aliases are used to have the service

158
00:06:51.710 --> 00:06:52.920
named as something else.

159
00:06:52.980 --> 00:06:55.577
So, if you called it, in this case my example is, the

160
00:06:55.980 --> 00:06:58.015
service is called myghost and then they made an alias of

161
00:06:58.016 --> 00:07:00.560
ghost. That way the DNS works as ghost

162
00:07:01.030 --> 00:07:03.420
on the network. Just make your service ghost.

163
00:07:03.430 --> 00:07:05.550
Don't necessarily make them separate.

164
00:07:05.580 --> 00:07:08.339
Really, you should name your services what you plan to use

165
00:07:08.340 --> 00:07:11.160
in the DNS for cross container communications

166
00:07:11.430 --> 00:07:12.630
using that friendly name.

167
00:07:13.140 --> 00:07:15.933
Using the alias here, to me, only adds complexity because

168
00:07:16.020 --> 00:07:18.749
now it seems like I'm supposed to use the alias name when

169
00:07:18.750 --> 00:07:21.179
I'm talking to this app from other containers and not the

170
00:07:21.180 --> 00:07:23.370
service name, even though the service name works fine.

171
00:07:23.580 --> 00:07:25.619
I don't know. I just don't recommend using it unless you

172
00:07:25.620 --> 00:07:27.659
really have a good reason and you know why you need that

173
00:07:27.660 --> 00:07:29.040
additional name on the network.

174
00:07:29.880 --> 00:07:32.399
A couple other examples of Legacy features that people

175
00:07:32.400 --> 00:07:35.193
still keep putting in that they don't need are expose and

176
00:07:35.250 --> 00:07:38.160
links. Expose was for taking ports

177
00:07:38.250 --> 00:07:40.830
inside your container and exposing those, or making them

178
00:07:40.890 --> 00:07:43.920
open, on the container network to

179
00:07:43.950 --> 00:07:46.349
other containers. This isn't the same as publishing a port

180
00:07:46.350 --> 00:07:48.990
to outside your machine using the public IP.

181
00:07:49.140 --> 00:07:50.640
This is just inside the container network.

182
00:07:51.060 --> 00:07:53.412
Well, years ago Docker made the change where all

183
00:07:54.300 --> 00:07:56.750
containers on the same network were exposed to all

184
00:07:57.450 --> 00:08:00.145
the other containers. If you wanted to prohibit certain

185
00:08:00.510 --> 00:08:02.909
containers from seeing each other, then you just wouldn't

186
00:08:02.910 --> 00:08:04.290
put them on the same virtual network.

187
00:08:04.320 --> 00:08:07.024
You'd create multiple virtual networks in Docker

188
00:08:07.440 --> 00:08:09.959
and then assign the correct containers to the correct

189
00:08:09.960 --> 00:08:12.749
networks. Once we have that ability, we didn't necessarily

190
00:08:12.750 --> 00:08:14.808
need to control and limit through firewall

191
00:08:16.050 --> 00:08:17.310
settings inside those networks.

192
00:08:17.563 --> 00:08:20.220
If you're using other drivers, there's Weave drivers,

193
00:08:20.430 --> 00:08:22.229
things like that, that are a little more advanced than what

194
00:08:22.230 --> 00:08:23.510
I want to go through this course.

195
00:08:24.000 --> 00:08:26.069
Those kind of network drivers might have extra

196
00:08:26.070 --> 00:08:28.109
functionality in them, but the ones out-of-the-box tend to

197
00:08:28.110 --> 00:08:30.240
work just fine for most people's local development.

198
00:08:30.660 --> 00:08:33.058
You don't need the expose for that because everything's

199
00:08:33.058 --> 00:08:35.129
already exposed inside that network.

200
00:08:35.640 --> 00:08:36.780
The other one there is links.

201
00:08:36.900 --> 00:08:39.750
Links were used a little bit with expose back in the day

202
00:08:39.990 --> 00:08:42.881
where links were how you told two different containers that

203
00:08:42.929 --> 00:08:45.449
they were able to talk to each other, and assigning them

204
00:08:45.450 --> 00:08:47.879
names so they could find each other. Well, that's not

205
00:08:47.880 --> 00:08:50.189
needed anymore because now that we have these custom

206
00:08:50.190 --> 00:08:52.493
networks that Compose creates by default, those

207
00:08:53.220 --> 00:08:56.460
networks assign the service names as DNS entries

208
00:08:56.640 --> 00:08:58.860
for every single service on the network.

209
00:08:59.220 --> 00:09:02.040
We no longer need the links to manually set up connections

210
00:09:02.070 --> 00:09:03.540
because they're already all there.

211
00:09:03.810 --> 00:09:06.180
All ports are open and all of them are in DNS.

212
00:09:06.930 --> 00:09:10.050
Lastly here I will say, let's not

213
00:09:10.110 --> 00:09:11.400
set defaults.

214
00:09:11.880 --> 00:09:14.330
Sometimes that's okay if you've got a good reason.

215
00:09:14.340 --> 00:09:16.212
Maybe there's a default that you sometimes need to change,

216
00:09:16.213 --> 00:09:18.929
so you leave the default in place, and then occasionally

217
00:09:18.930 --> 00:09:20.380
change it to something that's not default.

218
00:09:20.670 --> 00:09:22.560
But, I see a lot of people setting defaults.

219
00:09:22.740 --> 00:09:25.529
So, let's go to the bad YAML file here and I'll just show

220
00:09:25.530 --> 00:09:26.530
you an example.

221
00:09:27.000 --> 00:09:29.399
You'll see that I have some of the examples of the bad

222
00:09:29.400 --> 00:09:31.080
stuff that I've talked about earlier.

223
00:09:31.380 --> 00:09:32.380
You'll scroll down.

224
00:09:33.160 --> 00:09:35.489
You see the bad example of the expose port, which you just

225
00:09:35.490 --> 00:09:36.490
don't need anymore.

226
00:09:37.110 --> 00:09:40.020
Here's a good example is in this particular

227
00:09:40.280 --> 00:09:41.039
YAML file,

228
00:09:41.040 --> 00:09:44.060
I have one database and one web server running the

229
00:09:44.070 --> 00:09:45.282
ghost Node.js app.

230
00:09:45.660 --> 00:09:48.179
Here, I'm setting the network on both of them to the ghost

231
00:09:48.180 --> 00:09:50.939
network. I'm setting that in the webapp, and I'm setting it

232
00:09:50.940 --> 00:09:52.710
in the database as well down here.

233
00:09:53.040 --> 00:09:55.919
Then at the very bottom, I have the ghost network, and it's

234
00:09:55.920 --> 00:09:57.854
using the default driver of bridge.

235
00:09:58.230 --> 00:09:59.790
Well, that's all default.

236
00:09:59.970 --> 00:10:02.730
In fact, out-of-the-box, when you run docker compose up, a

237
00:10:02.760 --> 00:10:04.310
network is automatically created.

238
00:10:04.460 --> 00:10:07.150
It's using the default driver, which is bridge.

239
00:10:07.430 --> 00:10:08.900
That all just happens out-of-the-box.

240
00:10:09.140 --> 00:10:11.345
There's no reason to add that stuff in unless

241
00:10:12.230 --> 00:10:14.640
you need a more advanced setup of networking.

242
00:10:14.690 --> 00:10:17.385
Maybe you need multiple services and different networks

243
00:10:17.960 --> 00:10:20.059
for maybe a frontend network and a backend network.

244
00:10:20.060 --> 00:10:21.060
That makes sense.

245
00:10:21.470 --> 00:10:23.779
I see a lot of people setting up these and even in this

246
00:10:23.780 --> 00:10:25.789
case, showing the driver local for volume

247
00:10:26.840 --> 00:10:29.480
drivers which isn't necessary because that's the default.

248
00:10:30.080 --> 00:10:32.209
I always try to keep my Compose files as simple as

249
00:10:32.210 --> 00:10:33.925
possible. Those defaults are there.

250
00:10:34.310 --> 00:10:37.610
We should trust that they won't be changing any time soon.

251
00:10:38.000 --> 00:10:39.372
I would rather have 50 lines

252
00:10:41.120 --> 00:10:44.150
of a Compose file, with the defaults just assumed,

253
00:10:44.390 --> 00:10:47.300
than 150 lines with all the defaults set.

254
00:10:47.390 --> 00:10:50.630
If you went through an entire Compose config

255
00:10:50.660 --> 00:10:53.209
and set every single thing to default, you would have

256
00:10:53.210 --> 00:10:55.880
hundreds of lines of Compose file that wouldn't mean

257
00:10:55.910 --> 00:10:57.220
anything they wouldn't do anything.

