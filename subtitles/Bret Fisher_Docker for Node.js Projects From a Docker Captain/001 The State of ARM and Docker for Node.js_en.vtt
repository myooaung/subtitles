WEBVTT
1
00:00:02.590 --> 00:00:07.810
You may not realize it, but your Node apps are great on ARM processors.

2
00:00:07.810 --> 00:00:13.140
If you're running Docker Desktop, you can already support ARM right now.

3
00:00:13.180 --> 00:00:15.490
In fact, it wouldn't take much for you to just do that.

4
00:00:15.490 --> 00:00:21.370
In this next couple of lectures, I want to show you some of the basics of ARM, and how Docker treats ARM,

5
00:00:21.400 --> 00:00:25.750
and talk about some current events, and hopefully get you interested in this platform.

6
00:00:25.750 --> 00:00:31.720
If you're someone who's already understanding of ARM, then this will help you understand how Docker is

7
00:00:31.810 --> 00:00:35.680
the easiest way, I think, to develop and deal with ARM right now.

8
00:00:36.310 --> 00:00:41.530
In case you're not familiar with ARM, it's a processor that is incompatible with Intel.

9
00:00:41.530 --> 00:00:46.120
We all use servers today. All the machines you're probably using, unless you're focused on Internet

10
00:00:46.120 --> 00:00:48.010
of things or embedded devices,

11
00:00:48.040 --> 00:00:50.370
those are going to be all Intel-compatible chips.

12
00:00:50.410 --> 00:00:56.410
We'll just call it x86. So, those x86 chips are what we're used to, and that's how our code is compiled

13
00:00:56.410 --> 00:00:56.850
and run.

14
00:00:57.190 --> 00:01:05.110
But ARM is an alternative processor that is not compatible with x86 that you might consider, especially

15
00:01:05.110 --> 00:01:12.310
if you're thinking of things like Raspberry Pis, or embedded devices, small little things that are power

16
00:01:12.370 --> 00:01:12.970
efficient.

17
00:01:12.970 --> 00:01:16.290
That's really where ARM makes it's claim for being so focused.

18
00:01:16.300 --> 00:01:21.010
In the last couple of years, we started to see more interest in the server market as well.

19
00:01:21.010 --> 00:01:27.880
In 2018, Amazon was sort of the biggest cloud provider to come out and say, we have ARM servers. 

20
00:01:27.880 --> 00:01:34.190
They have something called the A1 instances that you can now get that are running this ARM-based infrastructure.

21
00:01:34.210 --> 00:01:38.980
It's basically a different CPU on the motherboard. One of the hardest parts about

22
00:01:39.010 --> 00:01:41.300
ARM is developing for it.

23
00:01:41.440 --> 00:01:47.290
Typically, when you develop for an architecture, you need to be on that CPU when you're developing,

24
00:01:47.320 --> 00:01:51.700
so you can test and edit the code, and run it right there on that machine.

25
00:01:51.700 --> 00:01:55.630
That would mean in the past. that you would maybe have a Raspberry Pi sitting by, and you'd actually

26
00:01:55.630 --> 00:02:00.550
physically plug into it, or maybe you'd SSH into a machine and develop on it there, and all those

27
00:02:00.550 --> 00:02:02.800
ideas just don't sound great.

28
00:02:02.800 --> 00:02:06.430
The nice thing is is Docker out-of-the-box supports this, and we'll talk about that in a minute.

29
00:02:06.760 --> 00:02:13.300
Because the news that happened just today, as I'm recording this video, was that Docker announced a partnership

30
00:02:13.300 --> 00:02:22.150
with ARM to ensure that the process of developing ARM- based solutions, and then getting those into whatever

31
00:02:22.150 --> 00:02:25.620
the devices are, whether it's production in the cloud, or on embedded devices,

32
00:02:25.780 --> 00:02:31.000
that Docker is going to help ARM smooth all that out using Docker containers. I think that's perfect because

33
00:02:31.060 --> 00:02:38.440
it's a great example of how Docker and the container idea, and using images and storing those in repositories,

34
00:02:38.440 --> 00:02:43.370
that we use common protocols like HTTPs to move those images around.

35
00:02:43.510 --> 00:02:48.610
That all makes sense in an ARM world because when you think of a bunch of devices, whether those are

36
00:02:48.610 --> 00:02:55.810
windmills in the middle of a forest. Or those are water sensors in the middle of a city. I mean, all the

37
00:02:55.810 --> 00:03:00.340
things that you would think are embedded devices that might be running ARM, those are going to need app

38
00:03:00.340 --> 00:03:04.750
updates just like cloud servers. Those are some of the hardest things, traditionally, to update and

39
00:03:04.750 --> 00:03:06.920
I think Docker can really make that great.

40
00:03:06.970 --> 00:03:13.390
In fact, last year at Dockercon, we got a great example of how NASA is using Docker on rockets

41
00:03:13.390 --> 00:03:17.740
they're throwing out into space to hit meteors that might accidentally hit the Earth.

42
00:03:17.740 --> 00:03:20.430
It's a pretty cool program. You should probably look that up on YouTube.

43
00:03:20.680 --> 00:03:24.060
We don't know what the details of this partnership really mean, long term.

44
00:03:24.160 --> 00:03:29.800
We can assume that it's going to make Docker easier and better for Docker on ARM, and let's just look

45
00:03:29.800 --> 00:03:31.300
at what we can do now.

46
00:03:31.330 --> 00:03:37.690
First thing up is that Docker Desktop, on Mac and Windows, works automatically with ARM out-of-the-box.

47
00:03:37.690 --> 00:03:45.010
You can run ARM-based containers on those machines with just a few, little command changes or Dockerfile

48
00:03:45.010 --> 00:03:51.100
changes. It turns out that Node is already great on ARM. Since the beginning, Node was focused

49
00:03:51.100 --> 00:03:55.110
on ARM because the V8 engine that Node bases itself off of,

50
00:03:55.180 --> 00:04:01.810
that's the Chrome Engine, in the Chrome browser, that JavaScript Engine was designed to work on ARM so

51
00:04:01.810 --> 00:04:04.960
that they could run on mobile phones, for the Android phones.

52
00:04:05.020 --> 00:04:10.960
So, this whole thing kind of is coming together as Node being a great way to support multi architecture

53
00:04:10.960 --> 00:04:12.460
solutions.

54
00:04:12.460 --> 00:04:17.769
I'm just going make the claim that right now, Docker is the easiest way to develop and deploy on ARM

55
00:04:17.769 --> 00:04:18.339
solutions.

