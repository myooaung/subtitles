WEBVTT
1
00:00:02.570 --> 00:00:04.900
All right. In the last lecture, we just talked about base images.

2
00:00:05.100 --> 00:00:06.920
We mentioned a few things about Alpine,

3
00:00:07.120 --> 00:00:10.070
but I wanted to focus this quick lecture just

4
00:00:10.270 --> 00:00:13.369
on the decision around whether to go Alpine,

5
00:00:13.568 --> 00:00:14.779
or whether to stick with Debian,

6
00:00:14.979 --> 00:00:16.340
or whether to consider something else.

7
00:00:16.700 --> 00:00:20.090
What factors you may need to consider

8
00:00:20.390 --> 00:00:21.770
when you're choosing this base image,

9
00:00:21.970 --> 00:00:23.450
especially if you're in an enterprise.

10
00:00:24.140 --> 00:00:26.563
Just as a reminder, Alpine is a security-focused,

11
00:00:27.380 --> 00:00:29.860
minimal small image,

12
00:00:30.170 --> 00:00:31.549
and it has advantages,

13
00:00:31.749 --> 00:00:33.139
right. It's 5MB in size,

14
00:00:33.339 --> 00:00:35.059
which is much smaller, in comparison,

15
00:00:35.259 --> 00:00:36.680
to the others. But,

16
00:00:36.950 --> 00:00:37.846
it has very little out-of-the-box,

17
00:00:38.450 --> 00:00:41.480
and it's meant just for the minimal

18
00:00:41.680 --> 00:00:44.719
situation, right, which ideally means there's less potential

19
00:00:44.919 --> 00:00:47.210
risk because there's less things that might have vulnerabilities in them.

20
00:00:47.600 --> 00:00:48.410
Here's the thing.

21
00:00:49.100 --> 00:00:51.440
Debian, the default image in node,

22
00:00:51.640 --> 00:00:53.960
you know, and all official images default to Debian.

23
00:00:54.590 --> 00:00:55.760
It's now down to like 100MB.

24
00:00:56.150 --> 00:00:59.119
If you just compare the base image sizes before

25
00:00:59.319 --> 00:01:01.130
that node images are applied.

26
00:01:01.530 --> 00:01:04.250
You know, Debian is around 100MB right now.

27
00:01:04.450 --> 00:01:05.888
Ubuntu is around 85MB,

28
00:01:06.560 --> 00:01:08.929
I think. Now, these are much smaller than they used to be.

29
00:01:09.129 --> 00:01:11.746
Years ago, I remember Ubuntu being 150 to 200MB.

30
00:01:12.350 --> 00:01:14.719
So, they have continued to make those images leaner

31
00:01:14.919 --> 00:01:17.210
and leaner. Which means that Alpine,

32
00:01:17.450 --> 00:01:20.540
which may be previously was used just for the sheer sake

33
00:01:20.740 --> 00:01:22.010
of space size,

34
00:01:22.210 --> 00:01:23.500
doesn't really matter anymore.

35
00:01:23.700 --> 00:01:26.269
I mean, how many of us really have to concern ourselves

36
00:01:26.469 --> 00:01:28.280
with an extra 100MB on a server?

37
00:01:28.480 --> 00:01:28.680
Now,

38
00:01:28.880 --> 00:01:30.230
if you're dealing with IoT

39
00:01:30.430 --> 00:01:33.049
or edge devices where maybe they're like Raspberry Pi's

40
00:01:33.249 --> 00:01:34.250
with SD cards in them,

41
00:01:34.610 --> 00:01:36.770
maybe 100MB here and there really matters.

42
00:01:37.040 --> 00:01:38.930
But usually on my production servers,

43
00:01:39.380 --> 00:01:40.939
if they're in the cloud, they've got 10

44
00:01:41.139 --> 00:01:42.123
and 20GB space out-of-the-box.

45
00:01:43.130 --> 00:01:45.800
Even if I have multiple versions of Node running,

46
00:01:46.220 --> 00:01:49.190
I'm really only talking about what the default images like Debian,

47
00:01:49.390 --> 00:01:51.730
for example, I would maybe have 300

48
00:01:51.930 --> 00:01:54.530
or 400MB max of space used.

49
00:01:54.800 --> 00:01:57.372
If I had 3 or 4 different Node versions all running concurrently,

50
00:01:57.572 --> 00:02:00.680
and those Node versions maybe have different Debian

51
00:02:01.100 --> 00:02:04.200
underneath them so they can't reuse the same base image layers,

52
00:02:04.400 --> 00:02:07.070
right. When you consider about your production deployments,

53
00:02:07.820 --> 00:02:09.020
not a huge factor, right.

54
00:02:09.220 --> 00:02:11.239
I mean obviously, Alpine is still an advantage here,

55
00:02:11.439 --> 00:02:13.219
but I don't look at my service

56
00:02:13.419 --> 00:02:16.219
and think, man I really need to go redesign all my images to save

57
00:02:16.419 --> 00:02:17.569
myself 200 or 300MB on a server,

58
00:02:17.769 --> 00:02:20.840
right. Alpine is not without its own issues.

59
00:02:21.040 --> 00:02:23.150
It's a great, secure option,

60
00:02:23.350 --> 00:02:25.009
but it is not infallible,

61
00:02:25.209 --> 00:02:27.769
right. It does have its own security vulnerabilities,

62
00:02:27.969 --> 00:02:29.990
just like all open source and all software.

63
00:02:30.320 --> 00:02:33.350
It is also something that is different than the default,

64
00:02:33.550 --> 00:02:35.240
so that means there will be some exceptions.

65
00:02:35.510 --> 00:02:36.879
In 2018, I know that nodemon,

66
00:02:37.370 --> 00:02:38.990
in particular, had an issue

67
00:02:39.320 --> 00:02:42.520
with proper restarting of Node on just Alpine

68
00:02:42.720 --> 00:02:45.680
base images. So, it was a very specific problem that went on for

69
00:02:45.920 --> 00:02:48.242
maybe weeks or months around nodemon.

70
00:02:49.134 --> 00:02:52.099
There are cases where Alpine

71
00:02:52.299 --> 00:02:53.180
could be a disadvantage.

72
00:02:53.720 --> 00:02:56.749
The last, little thing about Alpine that I want to mention that was actually brought

73
00:02:56.949 --> 00:02:58.219
to my attention a few months ago

74
00:02:58.419 --> 00:03:01.189
with a blog article that I will link to in the

75
00:03:01.389 --> 00:03:04.579
resources, is that those of us that are security

76
00:03:04.779 --> 00:03:07.474
focused in production are using something called a CVE scanner,

77
00:03:08.000 --> 00:03:09.980
or a common vulnerability scanner,

78
00:03:10.370 --> 00:03:13.389
in our images when we're maybe doing CI automation

79
00:03:13.589 --> 00:03:14.570
where we're building our images.

80
00:03:14.990 --> 00:03:17.959
There is a YouTube link in the resources of this

81
00:03:18.159 --> 00:03:21.500
lecture where I talk a little bit more about that on YouTube.

82
00:03:21.700 --> 00:03:24.140
Go check that out if you're interested in image scanning.

83
00:03:24.590 --> 00:03:26.260
That's not necessarily the focus of this course,

84
00:03:26.460 --> 00:03:29.240
but I do want to bring to your attention that

85
00:03:29.660 --> 00:03:32.959
the current Alpine base images don't

86
00:03:33.159 --> 00:03:34.810
work well with those scanners.

87
00:03:35.240 --> 00:03:38.539
It's due to an issue with the fact that basically

88
00:03:38.739 --> 00:03:41.629
Alpine doesn't link a translation

89
00:03:41.829 --> 00:03:44.400
database of sorts where all of its files talk correctly

90
00:03:44.750 --> 00:03:47.180
to the engines that scan for vulnerabilities.

91
00:03:47.380 --> 00:03:49.150
Anyway, go check out that YouTube video on that.

92
00:03:49.350 --> 00:03:52.309
It's very interesting because it turns out that other ones,

93
00:03:52.509 --> 00:03:53.330
like Debian, Ubuntu, CentOS,

94
00:03:55.220 --> 00:03:56.509
they work much better

95
00:03:56.709 --> 00:03:59.659
with these vulnerability scanners than Alpine even though

96
00:03:59.859 --> 00:04:02.332
Alpine is a more secure focused

97
00:04:03.590 --> 00:04:04.670
Linux. And you know,

98
00:04:04.970 --> 00:04:08.210
Alpine is great. I'm not really throwing shade on Alpine in particular,

99
00:04:08.510 --> 00:04:10.010
but it is something you should concern yourself

100
00:04:10.210 --> 00:04:13.380
with if you're making a decision thinking that Alpine is better

101
00:04:13.580 --> 00:04:14.720
in security for all things.

102
00:04:15.050 --> 00:04:16.640
This may change, however,

103
00:04:16.839 --> 00:04:20.028
if Alpine updates their feature set to include this translation

104
00:04:20.228 --> 00:04:21.319
database and work better

105
00:04:21.519 --> 00:04:21.896
with the scanners.

106
00:04:22.820 --> 00:04:24.410
I'm sure that's going to happen at some point.

107
00:04:24.610 --> 00:04:27.140
It just may be something farther down their road map.

108
00:04:27.340 --> 00:04:30.320
So, check in with Alpine to see how it does

109
00:04:30.520 --> 00:04:31.430
with these scanners

110
00:04:32.390 --> 00:04:33.620
somewhere after this video is recorded.

111
00:04:33.820 --> 00:04:36.739
This video is recorded early 2019 so things could

112
00:04:36.939 --> 00:04:38.329
change, right. On occasion,

113
00:04:38.529 --> 00:04:41.390
though, I do get questions from my students around

114
00:04:41.590 --> 00:04:41.866
what about CentOS,

115
00:04:42.730 --> 00:04:45.620
right. Because there is no CentOS version

116
00:04:45.820 --> 00:04:49.460
of the node images from the official repository.

117
00:04:49.730 --> 00:04:52.670
How would you go about if your company needed

118
00:04:52.870 --> 00:04:54.980
an enterprise focused Linux like Ubuntu,

119
00:04:55.180 --> 00:04:55.380
or CentOS,

120
00:04:56.720 --> 00:04:58.550
or something else. Red Hat for example.

121
00:04:58.880 --> 00:05:00.750
So, that's a common thing.

122
00:05:01.430 --> 00:05:04.309
Like I said in the last lecture, we don't all need to be going this route

123
00:05:04.509 --> 00:05:07.579
or building out custom bespoke images from

124
00:05:07.779 --> 00:05:09.160
our own base layers.

125
00:05:09.470 --> 00:05:12.140
But, it turns out that you don't have to build node directly.

126
00:05:12.340 --> 00:05:13.610
You could just download

127
00:05:13.810 --> 00:05:16.610
and have the node binaries on

128
00:05:16.810 --> 00:05:18.900
any base image, whether it's Ubuntu

129
00:05:19.100 --> 00:05:21.050
or CentOS or something else.

130
00:05:21.360 --> 00:05:22.700
It's not that hard to do. So,

131
00:05:23.030 --> 00:05:26.195
let's take a look at how quickly we can do that in an assignment

132
00:05:26.395 --> 00:05:26.990
coming up next.

