WEBVTT
1
00:00:04.460 --> 00:00:07.400
Now we're getting to some more fun, advanced stuff.

2
00:00:07.640 --> 00:00:10.188
In this section, we're going to focus on some recent

3
00:00:10.280 --> 00:00:12.080
features in the last few years of Docker.

4
00:00:12.320 --> 00:00:14.435
Specifically multistage builds and BuildKit.

5
00:00:14.436 --> 00:00:16.396
Two exciting things that can make it way

6
00:00:17.450 --> 00:00:19.214
easier, more flexible, faster, and a

7
00:00:20.420 --> 00:00:22.271
whole bunch of other stuff, all inside your Docker Node

8
00:00:22.760 --> 00:00:25.309
images. As a part of this, you're going to be doing an

9
00:00:25.310 --> 00:00:28.331
assignment to build a multistage Dockerfile,

10
00:00:28.610 --> 00:00:30.799
which is a pretty cool thing once you understand how to do

11
00:00:30.800 --> 00:00:33.495
it. How do we do that specifically in Node for the most

12
00:00:33.950 --> 00:00:35.763
efficient way possible to make images

13
00:00:37.010 --> 00:00:39.705
that are flexible enough for production and dev, all in

14
00:00:39.980 --> 00:00:40.980
the same Dockerfile.

15
00:00:41.540 --> 00:00:44.137
But, that's not all. I'm throwing in some extra stuff

16
00:00:44.510 --> 00:00:47.480
in here around BuildKit, which is brand new

17
00:00:47.510 --> 00:00:50.510
to the Docker ecosystem, and now a full feature

18
00:00:50.540 --> 00:00:52.190
coming out-of-the-boxthe Docker Engine.

19
00:00:52.360 --> 00:00:54.499
That's going to allow you to do some really neat things,

20
00:00:54.500 --> 00:00:57.195
like throw in your SSH keys during build so you can get

21
00:00:57.470 --> 00:00:58.730
private repos.

22
00:00:59.090 --> 00:01:01.820
Then you could also throw in a caching feature so that your

23
00:01:01.830 --> 00:01:04.250
npm installs cache between builds.

