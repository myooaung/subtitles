WEBVTT
1
00:00:02.700 --> 00:00:09.030
If you're new to the concept of Multi-Architecture with Docker, or as we say Multi-Arch, that situation

2
00:00:09.030 --> 00:00:11.690
is getting better every year. In fact in 2017,

3
00:00:11.700 --> 00:00:17.700
if you go back to Docker's blog, they announce more and more advancements in the Multi-Arch solutions.

4
00:00:17.700 --> 00:00:22.830
There's something called the manifest file that you can now look in the Docker commands. The manifest

5
00:00:22.830 --> 00:00:30.240
file is essentially allowing you to have multiple images, one for each architecture of the same code,

6
00:00:30.960 --> 00:00:34.080
built under the same repo in your registry.

7
00:00:34.410 --> 00:00:41.070
On Docker Hub, for example, if you go to the Node repo, there's technically Multi-Arch support there.

8
00:00:41.100 --> 00:00:48.090
Which means if you did a docker run node on a Windows machine, running Windows containers, or on a Mainframe,

9
00:00:48.420 --> 00:00:55.470
or on a ARM device, you don't necessarily have to specify that unique from image

10
00:00:55.470 --> 00:01:01.380
if you're wanting to run an image that has Multiple-Architecture support. That's pretty cool because

11
00:01:01.380 --> 00:01:06.390
ideally, what Docker's goal here is, is that no matter what system you're on, no matter the architecture,

12
00:01:06.660 --> 00:01:10.200
the Docker commands are the same. The Dockerfiles are the same.

13
00:01:10.230 --> 00:01:14.190
There's this additional file called the manifest file that describes the different architectures that

14
00:01:14.190 --> 00:01:20.230
are supported. Early in 2019, while Docker has just announced the ARM deal,

15
00:01:20.250 --> 00:01:24.000
what they're really talking about here is that they're going to work to smooth a lot of this out, to

16
00:01:24.000 --> 00:01:29.280
make these Multi-Architectures situations easier for us, so that we don't have to specify those manual

17
00:01:29.280 --> 00:01:35.570
from image. And we don't have to specify manual build stuff in case we want to add Multi-Arch support.

18
00:01:35.850 --> 00:01:40.500
In talking to Docker, I can tell you that in the future, what will happen is we'll be able to do docker

19
00:01:40.500 --> 00:01:46.230
build and use the new BuildKit feature sets, and extra functionality there, to do Multi-Architecture

20
00:01:46.230 --> 00:01:49.140
building, all in one shot, in one command.

21
00:01:49.200 --> 00:01:54.090
So, that'll be pretty nice. Today, we can actually support storing these different images, for

22
00:01:54.090 --> 00:01:58.260
different architectures, of the same code, in the same repo.

23
00:01:58.290 --> 00:02:03.390
That's possible, but it's not as intuitive as it needs to be for us to get wider support. So, I know that

24
00:02:03.390 --> 00:02:07.980
that's going to get improved. I haven't talked to anyone about this yet, but I'm hoping that we'll

25
00:02:07.980 --> 00:02:12.110
get easier ways to tell what architecture is running in our images.

26
00:02:12.150 --> 00:02:17.340
If you start playing with this stuff, you realize that one of the little issues is you can't have multiple

27
00:02:17.340 --> 00:02:20.830
images, with the same name, that are different architectures, on your local machine.

28
00:02:20.880 --> 00:02:26.860
If you do a docker pull Ubuntu, then you're going to get the default image for your platform.

29
00:02:27.030 --> 00:02:32.160
Now, we have something called --platform that's
showing up in a lot of the commands that allows

30
00:02:32.160 --> 00:02:39.680
us to pull, or run, or do things with images that aren't our default local architecture. That means

31
00:02:39.680 --> 00:02:47.820
you could do something like docker pull --platform Linux/arm64 Ubuntu and pull down

32
00:02:47.970 --> 00:02:53.280
the Ubuntu image for ARM on your local machine, even though you're not running on ARM. Then it would

33
00:02:53.280 --> 00:02:59.090
just be called Ubuntu and every time you ran docker run Ubuntu, it would run that ARM image.

34
00:02:59.130 --> 00:03:03.620
So, that's pretty cool, but it's also confusing, because it's not easy for you to see that in the interface.

35
00:03:03.620 --> 00:03:08.300
I hope a lot of that helps. If you're interested in more of this Multi-Arch stuff,

36
00:03:08.370 --> 00:03:13.860
there's a lot you can learn. I've given you a lot of links in these last few videos. In this video,

37
00:03:14.010 --> 00:03:19.380
there's a link to DockerCon, talking about all the Multi-Arch things. In the previous few lectures,

38
00:03:19.470 --> 00:03:22.750
there's links to other YouTube videos, specifically on ARM.

39
00:03:22.830 --> 00:03:28.170
So, definitely check out those resources and videos on YouTube for more information about this exciting

40
00:03:28.170 --> 00:03:30.000
time of Multi-Arch and Docker.

