WEBVTT
1
00:00:02.560 --> 00:00:05.410
You've now finished yet another section

2
00:00:05.530 --> 00:00:08.191
on getting Node.js and Docker

3
00:00:08.500 --> 00:00:11.380
to be the sweet, little thing that they are together.

4
00:00:11.620 --> 00:00:15.040
Now, we're going to do the assignment for this section.

5
00:00:15.220 --> 00:00:18.111
This section was a really important one, like all the other

6
00:00:18.220 --> 00:00:20.768
ones, but it's really focused on quality production,

7
00:00:21.370 --> 00:00:23.771
which is what matters the most, once you get your nice,

8
00:00:23.772 --> 00:00:25.510
little development environment set up locally.

9
00:00:26.050 --> 00:00:29.380
The assignment here is going to be rather large

10
00:00:29.620 --> 00:00:32.109
because we're taking into account all the stuff from this

11
00:00:32.110 --> 00:00:34.413
section, and we've got a bonus assignment along

12
00:00:35.140 --> 00:00:36.140
with this one.

13
00:00:36.700 --> 00:00:37.892
We're going to start in the ultimate-node-dockerfile

14
00:00:39.460 --> 00:00:41.020
directory of the course repo.

15
00:00:41.770 --> 00:00:44.800
You'll recognize this sample app because

16
00:00:44.830 --> 00:00:47.280
it's the result app from the dog versus cat voting

17
00:00:47.860 --> 00:00:49.937
app that you used in the Docker Compose

18
00:00:51.190 --> 00:00:53.499
awesome assignment earlier where you were creating the

19
00:00:53.500 --> 00:00:54.912
awesome Docker Compose file, right.

20
00:00:55.180 --> 00:00:57.089
So, now you're going to do it in reverse, and you're going

21
00:00:57.090 --> 00:00:59.500
to be creating the Dockerfile for that

22
00:01:00.070 --> 00:01:01.990
rather than focusing on the Docker Compose file.

23
00:01:02.590 --> 00:01:05.169
I've made the Docker Compose file a little friendly for you

24
00:01:05.170 --> 00:01:07.719
just to get you started because that's not really the focus

25
00:01:07.720 --> 00:01:10.269
of this assignment. Of course, you can always play around

26
00:01:10.270 --> 00:01:12.125
with it, but it's essentially going to be the same Compose

27
00:01:12.510 --> 00:01:13.780
file that you had before.

28
00:01:14.140 --> 00:01:16.900
I've simplified it a little bit to focus you on the

29
00:01:17.320 --> 00:01:19.659
Dockerfile itself. Because that's really what I want to

30
00:01:19.660 --> 00:01:22.524
drive home with you on practicing this, a

31
00:01:23.320 --> 00:01:25.476
Dockerfile and making it the full experience

32
00:01:26.590 --> 00:01:29.285
for production, development, and test, all in one, that

33
00:01:29.710 --> 00:01:31.010
you've learned throughout this section.

34
00:01:31.694 --> 00:01:34.330
When I say make a production-grade Dockerfile,

35
00:01:34.930 --> 00:01:37.030
I don't mean just make the Dockerfile for production.

36
00:01:37.330 --> 00:01:39.927
I mean that that Dockerfile has taken everything into

37
00:01:40.330 --> 00:01:43.780
account, which means dev, test, and production.

38
00:01:44.100 --> 00:01:46.630
You're going to be doing a lot of things here including

39
00:01:46.660 --> 00:01:49.750
adding multiple stages, focusing on

40
00:01:49.810 --> 00:01:52.309
making sure you don't repeat yourself with multiple

41
00:01:52.330 --> 00:01:55.060
commands and different stages that do the same thing.

42
00:01:55.390 --> 00:01:58.210
Making sure that dev dependencies are only in development.

43
00:01:58.390 --> 00:02:00.460
Making sure the production image is lean.

44
00:02:00.820 --> 00:02:02.410
Adding the testing stuff.

45
00:02:02.890 --> 00:02:05.536
There's so much to it that I've given you another readme

46
00:02:05.890 --> 00:02:08.710
markdown in that directory that we're going to step through

47
00:02:08.740 --> 00:02:10.240
now and just talk about a little bit.

48
00:02:11.700 --> 00:02:14.787
We're in the ultimate-node-dockerfile directory.

49
00:02:15.540 --> 00:02:17.112
I want to focus on the readme.

50
00:02:17.670 --> 00:02:20.550
You're familiar with the app from the previous assignments,

51
00:02:20.790 --> 00:02:23.219
and you'll even be a little familiar with the top of this

52
00:02:23.220 --> 00:02:24.840
readme, which is the same idea.

53
00:02:25.170 --> 00:02:27.963
You're the Node.js developer, in a project with multiple,

54
00:02:28.380 --> 00:02:30.732
different apps, all related, and someone's given

55
00:02:31.440 --> 00:02:34.184
you the Docker Compose file filled out, and they've also

56
00:02:34.350 --> 00:02:35.956
given you the basic Dockerfile.

57
00:02:36.840 --> 00:02:39.780
You're going to take that Dockerfile and turn it in to

58
00:02:39.810 --> 00:02:42.407
all the fanciness, and all of the optimizations, that

59
00:02:42.840 --> 00:02:45.479
you've learned throughout this section and throughout this

60
00:02:45.480 --> 00:02:47.587
course. I've given you a list of the things

61
00:02:48.630 --> 00:02:51.270
that this Dockerfile should include and do.

62
00:02:51.870 --> 00:02:55.170
They're a little bit in order of this section, so

63
00:02:55.230 --> 00:02:58.072
if you need to go back to videos, if you work from the top

64
00:02:58.320 --> 00:03:01.015
down, they'll generally be in order of how this section

65
00:03:01.290 --> 00:03:03.348
flowed. If you scroll down, the next thing

66
00:03:04.320 --> 00:03:06.730
you'll notice is a bonus section. That's new.

67
00:03:06.750 --> 00:03:09.780
I have not given a bonus section before necessarily

68
00:03:09.840 --> 00:03:12.510
in an assignment. You could always have done extra stuff,

69
00:03:12.810 --> 00:03:16.380
but there's so much opportunity here for practicing.

70
00:03:16.560 --> 00:03:18.360
I'm really all about the practice.

71
00:03:18.500 --> 00:03:21.195
Once you get done with this assignment, if you have the

72
00:03:21.240 --> 00:03:23.610
time, consider doing the bonus material.

73
00:03:23.670 --> 00:03:27.090
The next video will be the assignment

74
00:03:27.120 --> 00:03:29.950
answer, just like normal, as I walk through the assignment.

75
00:03:30.000 --> 00:03:32.303
But, there's a second video after that and that

76
00:03:33.090 --> 00:03:35.910
lecture video will be just for the bonus stuff.

77
00:03:36.240 --> 00:03:38.489
So, if you don't have the time, or maybe you want to skip

78
00:03:38.490 --> 00:03:40.640
it, you can skip the bonus lecture.

79
00:03:40.890 --> 00:03:44.160
But, I'm all about practicing things over and over again

80
00:03:44.190 --> 00:03:46.439
because we don't all just learn everything the first time

81
00:03:46.440 --> 00:03:49.440
we do it. We often need to do it multiple times, at least,

82
00:03:49.830 --> 00:03:51.780
in order to get better at remembering it.

83
00:03:52.910 --> 00:03:55.654
A lot of the bonus stuff is taken from previous sections

84
00:03:56.030 --> 00:03:57.030
in the course.

85
00:03:57.440 --> 00:04:00.320
So, it's going to cause your memory to have to go back

86
00:04:00.710 --> 00:04:03.680
a few videos, possibly even dozens of videos back, to the

87
00:04:03.740 --> 00:04:06.190
earlier sections of the course, to talk about Dockerfile

88
00:04:06.680 --> 00:04:09.470
best practices, to talk about multistage,

89
00:04:09.680 --> 00:04:11.989
talk about BuildKit, and all the other things that you

90
00:04:11.990 --> 00:04:13.360
learned earlier on in the course.

91
00:04:13.370 --> 00:04:16.760
Because you can implement that stuff here to make

92
00:04:16.850 --> 00:04:19.160
this experience, and this Dockerfile, better.

93
00:04:19.791 --> 00:04:23.060
Finally, I've given you some outcomes here just for

94
00:04:23.120 --> 00:04:25.549
the main section, not so much for the bonus section, but

95
00:04:25.550 --> 00:04:27.706
for the main assignment, I've given you some

96
00:04:28.520 --> 00:04:31.400
ways to verify that your assignment

97
00:04:31.490 --> 00:04:33.500
worked, and it did what you expect.

98
00:04:33.920 --> 00:04:36.664
Not all the things you do in the assignment are going to

99
00:04:36.740 --> 00:04:38.390
always be immediately obvious.

100
00:04:38.660 --> 00:04:40.560
Sometimes things won't go right.

101
00:04:40.850 --> 00:04:43.700
Usually, if you can run your tests,

102
00:04:43.850 --> 00:04:46.760
and you can run it and play with it in the actual browser,

103
00:04:47.270 --> 00:04:50.029
usually simple apps like this, you'll know whether or not

104
00:04:50.030 --> 00:04:51.030
you did it right.

105
00:04:51.350 --> 00:04:54.290
Another few things you'll do there include validating

106
00:04:54.320 --> 00:04:57.211
the image sizes, because you'll expect that your production

107
00:04:57.560 --> 00:05:00.415
image is smaller than your development images,

108
00:05:00.680 --> 00:05:02.983
or your test images, which have all those extra

109
00:05:03.020 --> 00:05:04.020
dependencies in them.

110
00:05:04.310 --> 00:05:06.379
I've thrown a few other things in there that you can run as

111
00:05:06.380 --> 00:05:08.732
well. Include functional tests and ensuring that

112
00:05:09.410 --> 00:05:12.109
you don't include things like the test files themselves in

113
00:05:12.110 --> 00:05:14.854
your production images, which we didn't necessarily show

114
00:05:14.900 --> 00:05:16.610
exactly how to do in this section.

115
00:05:16.880 --> 00:05:18.110
But, I bet you can figure it out.

116
00:05:18.650 --> 00:05:21.860
As always, I hope you'll try this

117
00:05:22.040 --> 00:05:24.020
assignment for a little bit on your own.

118
00:05:24.170 --> 00:05:26.749
It's ok if it takes you multiple tries and a significant

119
00:05:26.750 --> 00:05:29.240
amount of time, meaning more than a few minutes.

120
00:05:29.450 --> 00:05:31.519
It might even take you an hour or two, and that's totally

121
00:05:31.520 --> 00:05:33.970
fine. The most important part is your learning how

122
00:05:34.820 --> 00:05:36.260
these things can be created.

123
00:05:36.380 --> 00:05:39.019
Because it's not just a boilerplate standard thing every

124
00:05:39.020 --> 00:05:40.610
time. Sometimes you've got to get creative.

125
00:05:40.790 --> 00:05:43.459
Got to try different methods to get things to work properly

126
00:05:43.460 --> 00:05:46.155
together. And most importantly, I hope you have fun and

127
00:05:46.340 --> 00:05:47.510
I'll see you in the assignment answer.

