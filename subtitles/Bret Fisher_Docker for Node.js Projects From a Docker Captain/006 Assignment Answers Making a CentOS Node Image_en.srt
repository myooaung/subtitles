1
00:00:02,710 --> 00:00:05,770
This lecture is me doing the assignment just like

2
00:00:05,920 --> 00:00:08,517
you should have done it, and I'll be sort of starting

3
00:00:09,010 --> 00:00:11,590
fresh. I've actually not even thought about this from a

4
00:00:12,190 --> 00:00:14,619
practice perspective or exactly how every line is going to

5
00:00:14,620 --> 00:00:16,678
go. So, I'm going to talk out loud as I do

6
00:00:17,740 --> 00:00:20,349
the assignment. Hopefully, if you either had stumbling

7
00:00:20,350 --> 00:00:22,869
blocks, or if you just wanted to watch this for bonus, you

8
00:00:22,870 --> 00:00:25,075
can maybe get some tips or information out of

9
00:00:25,900 --> 00:00:28,625
it on how I'm thinking about making this Dockerfile.

10
00:00:28,840 --> 00:00:31,056
Because Dockerfiles, Compose files, all these things,

11
00:00:31,057 --> 00:00:33,115
they're never going to be 100% exactly the

12
00:00:34,000 --> 00:00:35,830
same between one person and the next person.

13
00:00:36,070 --> 00:00:38,830
There's always a little bit of art involved, and

14
00:00:39,430 --> 00:00:41,080
hopefully you'll learn something from this.

15
00:00:41,860 --> 00:00:43,620
The assignment was to start with CentOS.

16
00:00:44,120 --> 00:00:46,678
So, the first thing I've got to do is create a Dockerfile

17
00:00:47,470 --> 00:00:50,458
and go get it on Docker Hub,

18
00:00:50,620 --> 00:00:53,500
or at least learn which tag I need to use on

19
00:00:53,800 --> 00:00:54,800
Docker Hub.

20
00:00:55,510 --> 00:00:59,030
Over on Hub, I can probably just go there and search,

21
00:00:59,260 --> 00:01:00,260
but

22
00:01:03,480 --> 00:01:05,489
I'm pretty sure I could just type it in from memory but

23
00:01:05,519 --> 00:01:07,530
just for you, like I would look for the official.

24
00:01:07,990 --> 00:01:10,800
This is marked official image over here on the right.

25
00:01:10,890 --> 00:01:12,560
So, that's definitely the one I want.

26
00:01:13,470 --> 00:01:16,170
Then I go through all the tags.

27
00:01:16,260 --> 00:01:18,719
I could click on the tags but really I just want the

28
00:01:18,720 --> 00:01:21,056
latest. I'm probably going to stick with that, right.

29
00:01:21,750 --> 00:01:23,759
So, CentOS 7 in production-like settings,

30
00:01:25,080 --> 00:01:27,690
you would definitely set this to a specific

31
00:01:28,350 --> 00:01:31,241
image tag, exactly the one you want, and you would manually

32
00:01:31,350 --> 00:01:33,929
increment that. Because usually in production settings, you

33
00:01:33,930 --> 00:01:36,509
want to control every version update of anything including

34
00:01:36,510 --> 00:01:39,780
your from image. So, I never recommend using from in

35
00:01:39,790 --> 00:01:40,790
production.

36
00:01:41,550 --> 00:01:44,430
All right. We've got this here, so I can just type in

37
00:01:45,350 --> 00:01:46,350
CentOS 7, right.

38
00:01:49,440 --> 00:01:50,440
From

39
00:01:52,710 --> 00:01:53,710
CentOS 7.

40
00:01:54,700 --> 00:01:57,760
You'll notice if you're using VS code

41
00:01:57,790 --> 00:02:00,820
and you have the Docker plugin like I have down here,

42
00:02:01,600 --> 00:02:03,850
you'll get this extra functionality where it will go and

43
00:02:03,851 --> 00:02:06,693
search Docker Hub for you as you type from name so you can

44
00:02:06,790 --> 00:02:08,380
see that I have several to choose from.

45
00:02:09,070 --> 00:02:11,470
I'm just going to stick with CentOS 7.

46
00:02:12,720 --> 00:02:14,410
This is where the sort of tricky part is.

47
00:02:14,430 --> 00:02:17,790
I know I need to set an environment variable and

48
00:02:17,850 --> 00:02:19,222
that it needs to be the Node

49
00:02:21,090 --> 00:02:22,330
version I'm going to use.

50
00:02:22,350 --> 00:02:23,350
I could just call it node version,

51
00:02:27,090 --> 00:02:28,805
right. In this case, I just want to

52
00:02:30,060 --> 00:02:31,060
do 10 for now.

53
00:02:32,205 --> 00:02:34,409
I know that it needs be 10 something, but I'm basically

54
00:02:34,410 --> 00:02:37,260
going to go look at Docker Hub and

55
00:02:37,650 --> 00:02:40,198
get more information from how the Node repo does it.

56
00:02:40,350 --> 00:02:42,423
So, I can go to the top here, search for Node,

57
00:02:44,640 --> 00:02:45,870
official image for Node.

58
00:02:45,910 --> 00:02:47,790
Yep. All right. Click on that one.

59
00:02:48,950 --> 00:02:51,960
I know we need to use Node 10 so I

60
00:02:51,980 --> 00:02:52,980
want to use

61
00:02:57,630 --> 00:02:59,340
the default 10 repo.

62
00:03:00,030 --> 00:03:02,610
So really, sometimes what I do is I just, you know,

63
00:03:03,150 --> 00:03:05,790
control f on Windows, command f on Mac.

64
00:03:07,530 --> 00:03:10,230
I just want to search the page for

65
00:03:17,810 --> 00:03:20,390
10. It looks like .15 is the latest.

66
00:03:21,260 --> 00:03:22,338
And Stretch is...now I

67
00:03:24,260 --> 00:03:26,280
just happen to know this about Debian releases.

68
00:03:26,700 --> 00:03:28,469
Stretch is a little newer than Jessie.

69
00:03:28,470 --> 00:03:30,920
It's the release after Jessie in terms of versions

70
00:03:31,860 --> 00:03:35,310
of Debian. So, Stretch is probably the most current.

71
00:03:35,880 --> 00:03:37,693
I can also just search for 10, right.

72
00:03:38,640 --> 00:03:41,041
Because you can see down here this one is...so if

73
00:03:41,610 --> 00:03:43,670
I did node:10, it would be this one.

74
00:03:43,680 --> 00:03:46,359
So, these are all sort of aliases, or extra tags, for the

75
00:03:46,360 --> 00:03:49,650
same one, right. So, let's go in here, and

76
00:03:50,070 --> 00:03:51,540
I'm going to dig through

77
00:03:53,470 --> 00:03:54,909
exactly what this thing is doing.

78
00:03:54,910 --> 00:03:56,920
And see they have sort of the same thing.

79
00:03:56,950 --> 00:03:58,567
Environment Node Version 10.15.1.

80
00:03:59,096 --> 00:04:02,380
This is a best practice I always recommend around

81
00:04:02,470 --> 00:04:05,214
if you have versions of things that you need to download

82
00:04:05,530 --> 00:04:08,229
and install, or any apt packages, or yum packages, or apk

83
00:04:09,070 --> 00:04:10,070
packages on Alpine.

84
00:04:10,720 --> 00:04:13,389
I really prefer to have their versions hard coded and then

85
00:04:13,390 --> 00:04:15,400
I have those versions as environment variables at the top.

86
00:04:15,490 --> 00:04:18,009
The biggest reason there is anyone who is going to edit

87
00:04:18,010 --> 00:04:20,529
this Dockerfile in the future is going to want to

88
00:04:21,430 --> 00:04:24,281
know what versions or possibly change versions of things.

89
00:04:25,210 --> 00:04:27,669
At first, it might seem logical to keep the versions of

90
00:04:27,670 --> 00:04:29,890
things near where you are installing them.

91
00:04:30,310 --> 00:04:33,005
But, really I think it's best practice to put all those

92
00:04:33,160 --> 00:04:35,590
versions in environment variables that you want to change

93
00:04:35,680 --> 00:04:37,327
at the top because if you end up with 100 lines in your

94
00:04:37,870 --> 00:04:40,390
Dockerfile, it'll be confusing as to where you need to go

95
00:04:40,410 --> 00:04:41,769
and you have to scroll through everything.

96
00:04:41,770 --> 00:04:43,620
So, I like to keep them all at the top.

97
00:04:43,630 --> 00:04:45,850
So, I'm just going to copy that and jump over here.

98
00:04:46,350 --> 00:04:49,070
Back this out and do the same thing.

99
00:04:50,170 --> 00:04:52,816
A third doing. The idea here is that I'm keeping it as

100
00:04:52,890 --> 00:04:55,980
close as possible to the official Node

101
00:04:56,010 --> 00:04:57,340
repo as I can.

102
00:04:57,360 --> 00:05:00,630
That way, anyone in the future who wants to mess with this

103
00:05:00,660 --> 00:05:03,239
or take over for me, maybe I leave the company or the

104
00:05:03,240 --> 00:05:06,340
project, and it'll make sense to them because they

105
00:05:06,360 --> 00:05:08,770
can just go look at it online.

106
00:05:08,790 --> 00:05:11,310
In fact, I might even say here,

107
00:05:12,740 --> 00:05:14,920
you know a comment. Always love the comments.

108
00:05:14,980 --> 00:05:17,920
Node install taken

109
00:05:17,980 --> 00:05:19,450
from official

110
00:05:21,360 --> 00:05:22,738
Node image Dockerfile.

111
00:05:27,320 --> 00:05:28,850
All right. So that way, they know where to look.

112
00:05:29,000 --> 00:05:31,850
I could even make a link to the exact one I'm using.

113
00:05:32,360 --> 00:05:33,879
Here, it looks like...it's just

114
00:05:35,450 --> 00:05:37,830
happening..having read this before in many Dockerfiles,

115
00:05:38,030 --> 00:05:40,039
because a lot of the standard open source

116
00:05:41,180 --> 00:05:43,189
official images are very similar in the way they install

117
00:05:43,190 --> 00:05:46,370
things. This is all setting architectures which

118
00:05:46,400 --> 00:05:49,095
we only care about one in this, you know, in most cases

119
00:05:49,640 --> 00:05:50,640
you're really only caring about x64.

120
00:05:51,500 --> 00:05:54,320
That's the most popular by far.

121
00:05:54,890 --> 00:05:56,340
So we may not need to set that.

122
00:05:56,720 --> 00:05:59,170
And that's dealing with keys, so that we have keys

123
00:06:00,110 --> 00:06:02,240
to download packages that we might need.

124
00:06:02,720 --> 00:06:05,072
Essentially, it's downloading a tarball,

125
00:06:05,780 --> 00:06:06,780
if you can see here.

126
00:06:08,140 --> 00:06:11,290
Downloading a tarball of the Node

127
00:06:11,770 --> 00:06:13,422
binary that needs to be installed.

128
00:06:13,540 --> 00:06:16,059
You can see that it's using the Node version environment

129
00:06:16,060 --> 00:06:18,429
variable here so that if you ever change that environment

130
00:06:18,430 --> 00:06:21,070
variable, then it will pull the new version and we won't

131
00:06:21,071 --> 00:06:23,353
have to go changing the code inside this run command.

132
00:06:24,700 --> 00:06:27,011
You can see here that it's doing a GPG

133
00:06:27,790 --> 00:06:30,609
to validate. It's actually doing a little bit of validation

134
00:06:30,610 --> 00:06:32,920
here to make sure that the package that you meant to

135
00:06:32,980 --> 00:06:35,469
download is the right one and that there wasn't any sort of

136
00:06:35,470 --> 00:06:38,110
security man-in-the-middle attacks or anything.

137
00:06:38,680 --> 00:06:41,890
It also...so yeah, it does the SHA right here.

138
00:06:42,380 --> 00:06:45,017
Then you can actually see that it removes the tarball

139
00:06:45,340 --> 00:06:46,512
once it's untarred it.

140
00:06:47,110 --> 00:06:50,200
So, it's actually taken at the tar command and

141
00:06:50,260 --> 00:06:51,315
pulling out the binaries.

142
00:06:51,930 --> 00:06:54,129
Then it deletes and cleans up the extra tarball that you

143
00:06:54,130 --> 00:06:57,130
don't need. Then it makes a link

144
00:06:57,490 --> 00:07:00,381
for Node so that you can actually type the node command and

145
00:07:00,580 --> 00:07:02,094
that will technically install Node.js.

146
00:07:02,350 --> 00:07:04,310
In certain...or certain distributions of

147
00:07:05,320 --> 00:07:07,427
Linux, the node command that you install is

148
00:07:08,290 --> 00:07:09,711
not actually Node by default.

149
00:07:10,840 --> 00:07:13,584
It's a Node.js because of...there's another package that

150
00:07:13,870 --> 00:07:16,419
already uses the word node. So, in this case it's at the

151
00:07:16,420 --> 00:07:17,810
very end it's making that, right.

152
00:07:18,950 --> 00:07:21,841
You can see down here, if we even go farther, it looks like

153
00:07:21,990 --> 00:07:24,620
they're setting yarn version, installing Yarn.

154
00:07:24,840 --> 00:07:27,740
If you needed Yarn, you could definitely do this, too.

155
00:07:28,050 --> 00:07:30,509
We're not going to do that in this case because npm still

156
00:07:30,510 --> 00:07:32,666
comes with the default node that's installed

157
00:07:33,540 --> 00:07:36,120
here. So, all I'm going to do is

158
00:07:36,540 --> 00:07:39,570
to keep it easy, I'm going to just copy this

159
00:07:39,630 --> 00:07:40,820
and try this first.

160
00:07:41,100 --> 00:07:42,300
See if it works.

161
00:07:49,340 --> 00:07:52,310
Right. So, I'm just copying in all of that stuff.

162
00:07:52,670 --> 00:07:53,895
Because I'm on CentOS and

163
00:07:55,640 --> 00:07:58,640
I'm not on Debian, it's

164
00:07:58,700 --> 00:08:01,395
probably not going to work out-of-the-gate because this

165
00:08:01,760 --> 00:08:03,818
is all designed for apt get and the Debian

166
00:08:05,030 --> 00:08:07,579
architecture of where files are and what packages are

167
00:08:07,580 --> 00:08:09,687
installed by default. So, this may not work

168
00:08:10,250 --> 00:08:13,250
out-of-the-gate. We may have to do some googling to

169
00:08:13,280 --> 00:08:14,600
figure out what's going on here.

170
00:08:14,793 --> 00:08:17,060
Of course, you can see up here that they're smart.

171
00:08:17,090 --> 00:08:19,190
They're actually adding the Node user,

172
00:08:20,090 --> 00:08:22,344
setting up that Node user so that later on, it

173
00:08:23,060 --> 00:08:24,710
can run Node as least privilege.

174
00:08:24,800 --> 00:08:27,020
So, ideally we can do that, too.

175
00:08:27,710 --> 00:08:29,930
We can maybe just copy that right out.

176
00:08:40,020 --> 00:08:41,030
Save that. And then just do a docker build.

177
00:08:43,419 --> 00:08:44,419
And we'll call this centos-node.

178
00:09:02,360 --> 00:09:04,240
Okay. So, we got our first error.

179
00:09:04,610 --> 00:09:06,920
That's one of the tricky things about

180
00:09:07,970 --> 00:09:11,040
doing this kind of setup where you take and copy and

181
00:09:11,200 --> 00:09:12,700
paste stuff. You're not exactly sure.

182
00:09:12,890 --> 00:09:14,801
Maybe, see where it says here D package

183
00:09:15,980 --> 00:09:19,070
not found. So in that case,

184
00:09:20,070 --> 00:09:22,589
that is because, I just happen to know this, but you

185
00:09:22,590 --> 00:09:24,359
probably look at this on on the Internet, you would find

186
00:09:24,360 --> 00:09:27,300
that that's because Debian package, that's

187
00:09:27,330 --> 00:09:29,999
essentially what this little utility is, and that's not

188
00:09:30,000 --> 00:09:31,470
going to be on a CentOS platform.

189
00:09:31,830 --> 00:09:33,330
There is going to be a different command for that.

190
00:09:33,690 --> 00:09:36,390
So, one of the things I could do is I could

191
00:09:36,930 --> 00:09:39,900
either just do random Internet searches, or I could

192
00:09:39,930 --> 00:09:42,510
also look at the

193
00:09:43,260 --> 00:09:45,122
CentOS packages and maybe see how some

194
00:09:46,380 --> 00:09:49,139
of them, you know, maybe if I can find something based on

195
00:09:49,140 --> 00:09:51,920
CentOS, I could find out how they do it.

196
00:09:52,350 --> 00:09:55,560
What commands they're using and maybe get some hints

197
00:09:55,710 --> 00:09:57,870
on that, especially if I'm not familiar with these base

198
00:09:57,900 --> 00:09:58,900
images.

199
00:09:59,250 --> 00:10:00,920
I could look in here, and you can see that the CentOS

200
00:10:01,440 --> 00:10:03,719
images, themselves, are very, very minimal so they,

201
00:10:03,720 --> 00:10:04,860
themselves, will not help you.

202
00:10:05,160 --> 00:10:07,769
You're going to have to probably search around Hub or just

203
00:10:07,770 --> 00:10:10,860
search around the Internet for, you know,

204
00:10:10,890 --> 00:10:13,585
in my case I might just search CentOS, then look around

205
00:10:14,280 --> 00:10:15,770
for people that are doing stuff with CentOS,

206
00:10:16,560 --> 00:10:19,040
and that they have...if they've got a lot of downloads and

207
00:10:19,050 --> 00:10:21,647
that means to me that they're probably better thought

208
00:10:22,200 --> 00:10:24,060
out, better supported.

209
00:10:24,330 --> 00:10:25,950
This is from Pivotal which is a popular IT company,

210
00:10:27,700 --> 00:10:29,030
so they definitely provide

211
00:10:30,990 --> 00:10:33,729
developer and project management software so they're going

212
00:10:33,730 --> 00:10:36,370
to make good images. Maybe I'll go look at theirs.

213
00:10:37,260 --> 00:10:39,480
Of course, you know, this one doesn't have a

214
00:10:40,500 --> 00:10:42,390
Dockerfile so that kind of stinks.

215
00:10:42,450 --> 00:10:44,240
Actually, well maybe there's one here.

216
00:10:46,360 --> 00:10:47,760
Yeah, that doesn't work.

217
00:10:48,900 --> 00:10:51,644
So, you get the sense. I'm going to fast forward this so

218
00:10:51,810 --> 00:10:54,179
that you don't spend ten minutes watching me search the

219
00:10:54,180 --> 00:10:56,839
Internet. But, imagine that this is what you have to learn,

220
00:10:56,840 --> 00:10:59,633
right. You have to figure out what that command means and

221
00:10:59,700 --> 00:11:01,090
you're troubleshooting that error.

222
00:11:01,890 --> 00:11:04,049
The other thing I will normally do is once I start getting

223
00:11:04,050 --> 00:11:06,696
these errors in these sort of installations, I will go

224
00:11:07,080 --> 00:11:10,200
back into my file, and you'll notice how all of this here

225
00:11:10,230 --> 00:11:12,840
is all one, huge run command. So, that can be problematic

226
00:11:13,170 --> 00:11:16,470
because if, at the very end, in the very last line,

227
00:11:16,590 --> 00:11:19,285
that's what errors out, then this whole run command has

228
00:11:19,650 --> 00:11:21,030
to be run each time.

229
00:11:21,420 --> 00:11:24,450
And that kind of stinks. So, I might do something

230
00:11:24,480 --> 00:11:25,705
like, you know every time

231
00:11:27,510 --> 00:11:29,490
there's two ampersands,

232
00:11:31,210 --> 00:11:32,330
I might do this.

233
00:11:32,800 --> 00:11:34,400
Well, not for this command. That's a bad example.

234
00:11:34,430 --> 00:11:35,430
Sorry.

235
00:11:35,990 --> 00:11:37,450
Because set, you want to keep in there.

236
00:11:37,460 --> 00:11:40,640
So, when it gets down to here,

237
00:11:44,650 --> 00:11:47,740
then maybe, you know, you can see there's a do done loop.

238
00:11:47,770 --> 00:11:51,130
So maybe I don't want to break up that bash loop there.

239
00:11:51,340 --> 00:11:53,012
So, again that requires you know a little bit about bash

240
00:11:53,710 --> 00:11:56,380
and that it's doing a for each loop down there.

241
00:11:56,980 --> 00:11:59,649
So, when I get down to these commands, maybe what I want to

242
00:11:59,650 --> 00:12:02,890
do is I take out the little

243
00:12:03,090 --> 00:12:06,280
ampersands, and then I take out the

244
00:12:07,700 --> 00:12:10,190
backslash, and then I could do a run here.

245
00:12:10,430 --> 00:12:12,635
And what this does is this basically provides

246
00:12:13,880 --> 00:12:16,940
a new layer. This isn't efficient for in terms of

247
00:12:17,300 --> 00:12:18,476
long term, you know size

248
00:12:20,480 --> 00:12:22,699
and space in the image, but for troubleshooting and getting

249
00:12:22,700 --> 00:12:24,350
your images working, you can do that.

250
00:12:24,370 --> 00:12:26,120
Sometimes, I will do this for each line.

251
00:12:26,150 --> 00:12:28,698
So, I would go to the end of this line, take out the

252
00:12:28,910 --> 00:12:31,760
backslash, go to the next line,

253
00:12:34,140 --> 00:12:36,270
and take out those, and then do the run thing here.

254
00:12:36,450 --> 00:12:38,819
So that way, when each one of these is successful, if it

255
00:12:38,820 --> 00:12:41,550
errors out on the next one, at least I don't have to run

256
00:12:41,640 --> 00:12:43,500
the image layer above it, right.

257
00:12:43,720 --> 00:12:46,366
It gets me a little bit faster and the troubleshooting

258
00:12:46,740 --> 00:12:49,030
gets me through the problems that I'm having.

259
00:12:49,070 --> 00:12:51,912
You know maybe I error out in the GPG, or the grep, or the

260
00:12:51,930 --> 00:12:54,659
tar because maybe those aren't installed in CentOS, and I

261
00:12:54,660 --> 00:12:56,550
have to go find those utilities and install them.

262
00:12:57,060 --> 00:12:58,060
So, yes.

263
00:12:58,740 --> 00:13:01,533
That could be helpful if you're trying to figure this one

264
00:13:01,590 --> 00:13:02,590
out.

265
00:13:03,030 --> 00:13:05,921
But, the problem that we're having right out-of-the-gate is

266
00:13:05,970 --> 00:13:08,812
that it's saying the D package, which you can see here, is

267
00:13:09,000 --> 00:13:10,862
not available and it's trying to print

268
00:13:12,090 --> 00:13:15,150
out the architecture for Debian,

269
00:13:15,180 --> 00:13:16,230
and we don't have that.

270
00:13:16,470 --> 00:13:19,410
So, what we're going to do is in my case,

271
00:13:20,010 --> 00:13:22,139
I'm going to take all of this out because we know our

272
00:13:22,140 --> 00:13:24,912
architecture and I don't...so

273
00:13:25,460 --> 00:13:28,140
x86 is the little x86 right here.

274
00:13:28,590 --> 00:13:31,169
And if you kind of read through this, what it looks like

275
00:13:31,170 --> 00:13:33,230
it's doing is it's setting environment variables based on

276
00:13:33,240 --> 00:13:34,240
my architecture.

277
00:13:34,800 --> 00:13:36,839
If you think about it for a minute, or even if you just

278
00:13:36,840 --> 00:13:39,780
search those three letters in this file,

279
00:13:40,110 --> 00:13:43,430
you'll realize that those are used down here,

280
00:13:44,530 --> 00:13:46,390
right, in that same run command.

281
00:13:46,780 --> 00:13:49,345
That way it pulls down the correct architecture tarball

282
00:13:49,840 --> 00:13:53,020
for Node for your particular

283
00:13:53,290 --> 00:13:55,887
setup. But since this course is all based on standard

284
00:13:56,440 --> 00:13:57,714
x86, we don't need to pull

285
00:13:59,440 --> 00:14:02,590
the architecture. In fact, I could do a

286
00:14:03,160 --> 00:14:04,510
search and replace,

287
00:14:07,890 --> 00:14:10,810
and for every time I see dollar sign

288
00:14:10,870 --> 00:14:13,875
arch, let's just replace it with x64.

289
00:14:20,930 --> 00:14:23,760
All right. And then, up here at the top,

290
00:14:25,910 --> 00:14:26,910
I can delete all of

291
00:14:29,060 --> 00:14:30,060
this.

292
00:14:36,340 --> 00:14:38,649
I'm just going to get rid of this comment just because we

293
00:14:38,650 --> 00:14:40,989
don't really need the comment since we're pulling from

294
00:14:40,990 --> 00:14:41,990
official.

295
00:14:42,590 --> 00:14:43,900
And then I'll clean this up.

296
00:14:43,910 --> 00:14:46,115
So, it's going to first run that set and then

297
00:14:46,910 --> 00:14:50,030
it's going to basically, for each one of these keys,

298
00:14:50,120 --> 00:14:53,660
add them in to

299
00:14:53,690 --> 00:14:55,660
the key server, and then...which

300
00:14:56,960 --> 00:14:58,429
this may all error out because we may not have those

301
00:14:58,430 --> 00:14:59,750
utilities and we'll have to go find them.

302
00:15:00,050 --> 00:15:02,451
This is going to run cURLs, which may also not be

303
00:15:02,690 --> 00:15:05,000
installed, but at least our

304
00:15:06,410 --> 00:15:08,360
first problem is hopefully solved.

305
00:15:08,990 --> 00:15:09,990
Let's go back.

306
00:15:12,530 --> 00:15:13,530
Try it again. Just hit the up arrow.

307
00:15:21,180 --> 00:15:23,679
All right. So, it looks like the keys all correctly

308
00:15:23,970 --> 00:15:26,530
happened because we went to the next step, where I did the

309
00:15:26,670 --> 00:15:29,250
run cURL and look at that.

310
00:15:29,280 --> 00:15:32,250
So it looks like cURL was already in the image.

311
00:15:32,310 --> 00:15:35,370
The GPG utility that's needed to validate

312
00:15:35,620 --> 00:15:38,439
to basically put the keys are in there to...what's

313
00:15:40,350 --> 00:15:42,029
the next step. You can see each one of these steps.

314
00:15:42,030 --> 00:15:43,230
Step six was finished

315
00:15:45,270 --> 00:15:47,130
and there we go.The last step.

316
00:15:47,190 --> 00:15:49,110
So, a couple of things we can do.

317
00:15:49,130 --> 00:15:52,140
First, I need to pull back

318
00:15:52,170 --> 00:15:53,400
out these runs.

319
00:15:53,550 --> 00:15:55,050
Put back in,

320
00:15:56,540 --> 00:15:58,210
in order make this more efficient, right.

321
00:15:58,610 --> 00:16:00,190
I want to make this thing as small as possible.

322
00:16:17,200 --> 00:16:19,993
All right. Then down at the bottom, we need to change our

323
00:16:20,140 --> 00:16:22,880
cmd just like they do on the official repo.

324
00:16:23,940 --> 00:16:26,050
When we go back up and go to the Node.

325
00:16:30,610 --> 00:16:32,260
If we go to the official Node repo.

326
00:16:32,390 --> 00:16:34,570
Go back down to the 10 release,

327
00:16:42,100 --> 00:16:44,680
and it just changes cmd to Node

328
00:16:45,400 --> 00:16:47,780
by default. So, we need to do that as well.

329
00:16:49,550 --> 00:16:51,500
Then one more build.

330
00:16:52,010 --> 00:16:53,010
See if this works.

331
00:16:56,060 --> 00:16:59,130
And yeah, and you know things are red sometimes in

332
00:16:59,580 --> 00:17:02,000
docker build, but it doesn't necessarily mean that there's

333
00:17:02,010 --> 00:17:04,619
an error. If it completes, then chances are,

334
00:17:05,098 --> 00:17:07,559
you know, if any command line utility were to error out, it

335
00:17:07,560 --> 00:17:09,449
will usually stop the docker build.

336
00:17:09,480 --> 00:17:11,419
So, we know we've got something going on here.

337
00:17:11,460 --> 00:17:13,648
So, now that I have this image, I can just do a real quick

338
00:17:13,650 --> 00:17:14,906
test, right. I could do a docker...docker

339
00:17:16,810 --> 00:17:19,657
run centos

340
00:17:20,490 --> 00:17:23,650
node and I could just type

341
00:17:30,310 --> 00:17:32,920
node version. There we go. So, cool.

342
00:17:32,980 --> 00:17:35,469
That's what we wanted and it worked the first time.

343
00:17:35,470 --> 00:17:37,899
I was very lucky. Didn't have to do a bunch of googling and

344
00:17:37,900 --> 00:17:40,448
Internet searching. So, that's how I would have came

345
00:17:40,930 --> 00:17:42,830
about it. It's not too fancy.

346
00:17:42,850 --> 00:17:46,030
If I zoom out, I've only got 35 lines and almost

347
00:17:46,090 --> 00:17:49,150
all of them, except for that first part talking about

348
00:17:49,180 --> 00:17:51,520
architecture from Debian,

349
00:17:52,390 --> 00:17:54,249
is pulled out, and then of course we changed the

350
00:17:54,250 --> 00:17:55,790
environment variable down here to x64.

351
00:17:57,280 --> 00:17:59,080
That's all I had to really do.

352
00:17:59,950 --> 00:18:00,950
So great.

353
00:18:01,770 --> 00:18:02,910
Hopefully yours was that easy.

354
00:18:03,290 --> 00:18:04,110
See you in the next lecture.

