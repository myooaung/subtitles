WEBVTT
1
00:00:00.005 --> 00:00:02.006
- [Instructor] Let's now do a quick demo for the binders.

2
00:00:02.006 --> 00:00:05.000
We are going to pick the date of birth field

3
00:00:05.000 --> 00:00:06.009
on our registration form,

4
00:00:06.009 --> 00:00:10.003
and change its data type from String to date.

5
00:00:10.003 --> 00:00:11.009
Let's come back to the IDE.

6
00:00:11.009 --> 00:00:15.009
That's the user bean, and I'm going to change this data type

7
00:00:15.009 --> 00:00:18.005
from string to date which comes

8
00:00:18.005 --> 00:00:20.002
from the java.util package.

9
00:00:20.002 --> 00:00:22.001
And if I do that, then I'll have to also change it

10
00:00:22.001 --> 00:00:25.001
in the data centers on lines 88 and 92,

11
00:00:25.001 --> 00:00:27.004
so I'm going to do that quickly.

12
00:00:27.004 --> 00:00:30.009
Also, let's go to the register GSP,

13
00:00:30.009 --> 00:00:33.009
and let's make sure that the form:errors tag

14
00:00:33.009 --> 00:00:38.000
is now available on the date of birth feed.

15
00:00:38.000 --> 00:00:44.002
So I'm just going to do this.

16
00:00:44.002 --> 00:00:49.009
And now, let's just run this field and check what happens.

17
00:00:49.009 --> 00:00:51.003
But before that, I have to stop this field,

18
00:00:51.003 --> 00:00:55.001
because I have put the wrong path for the field,

19
00:00:55.001 --> 00:00:57.006
so copy this, and let's make sure that

20
00:00:57.006 --> 00:01:00.005
the correct attribute is put up there.

21
00:01:00.005 --> 00:01:03.003
Okay, let's run the bill now.

22
00:01:03.003 --> 00:01:07.009
And let's go ahead and run our application.

23
00:01:07.009 --> 00:01:14.003
So http, localhost, home.

24
00:01:14.003 --> 00:01:16.000
Say login.

25
00:01:16.000 --> 00:01:17.008
Go to register.

26
00:01:17.008 --> 00:01:27.004
Let's put some junk data.

27
00:01:27.004 --> 00:01:30.004
Select the value for the activity.

28
00:01:30.004 --> 00:01:35.001
Put in some date of birth.

29
00:01:35.001 --> 00:01:36.003
And submit this.

30
00:01:36.003 --> 00:01:38.003
And there you go, you have a problem

31
00:01:38.003 --> 00:01:39.008
on the date of birth field now.

32
00:01:39.008 --> 00:01:43.000
It says that it failed to convert property value

33
00:01:43.000 --> 00:01:45.002
of type java.line.string

34
00:01:45.002 --> 00:01:47.008
to the required type java.util.date.

35
00:01:47.008 --> 00:01:50.001
Now, that's exactly what we were trying to talk about

36
00:01:50.001 --> 00:01:54.002
when @ModelAttribute alone is used for data binding.

37
00:01:54.002 --> 00:01:56.005
So now, in order to solve this problem,

38
00:01:56.005 --> 00:02:00.008
we want to convert the string data type to a date data type.

39
00:02:00.008 --> 00:02:03.000
We are going to use the conceptor finders.

40
00:02:03.000 --> 00:02:04.001
So let's fix this problem.

41
00:02:04.001 --> 00:02:06.000
Let's go back to the IDE.

42
00:02:06.000 --> 00:02:09.007
Let's come in registration controller

43
00:02:09.007 --> 00:02:15.003
and annotate using initbinder.

44
00:02:15.003 --> 00:02:17.000
This will, of course, take a method.

45
00:02:17.000 --> 00:02:17.008
What is that method?

46
00:02:17.008 --> 00:02:20.005
It's public void.

47
00:02:20.005 --> 00:02:26.004
And let's just call that initbinder.

48
00:02:26.004 --> 00:02:31.007
And this will take an instance of webdatabinder,

49
00:02:31.007 --> 00:02:35.000
on which you are going to register the property editors

50
00:02:35.000 --> 00:02:36.006
for this conversion to happen.

51
00:02:36.006 --> 00:02:37.005
So how do we do that?

52
00:02:37.005 --> 00:02:39.004
Let's go inside online 28.

53
00:02:39.004 --> 00:02:43.009
I'm going to say binder.registercustomeditor.

54
00:02:43.009 --> 00:02:45.006
So the host of property editors

55
00:02:45.006 --> 00:02:47.008
that is available in Spring MBC,

56
00:02:47.008 --> 00:02:49.005
if you want to use any of them,

57
00:02:49.005 --> 00:02:52.007
then you call this method of registercustomeditor.

58
00:02:52.007 --> 00:02:53.007
And what will it want?

59
00:02:53.007 --> 00:02:55.006
The first argument is the data type

60
00:02:55.006 --> 00:02:58.009
that you want the string value converted to.

61
00:02:58.009 --> 00:03:02.007
In our case, it is java.util, so that's date.class.

62
00:03:02.007 --> 00:03:05.009
Secondly, it will demand the name of the field

63
00:03:05.009 --> 00:03:09.006
that you want to use this conversion on.

64
00:03:09.006 --> 00:03:13.001
And lastly, it is going to demand the...

65
00:03:13.001 --> 00:03:16.000
Custom date editor object.

66
00:03:16.000 --> 00:03:18.006
So if you see, this custom date editor,

67
00:03:18.006 --> 00:03:20.009
this currency editor, custom Boolean editor,

68
00:03:20.009 --> 00:03:22.004
custom collection editor,

69
00:03:22.004 --> 00:03:24.001
so there's a host of those property editors

70
00:03:24.001 --> 00:03:27.008
that is available for you inside the Spring framework.

71
00:03:27.008 --> 00:03:29.008
That comes from org.springframework

72
00:03:29.008 --> 00:03:31.008
beans.propertyeditors package.

73
00:03:31.008 --> 00:03:33.005
So you can use any one of those

74
00:03:33.005 --> 00:03:35.000
and get your conversions done.

75
00:03:35.000 --> 00:03:36.001
So I'm going to do the custom

76
00:03:36.001 --> 00:03:38.009
date editor constructor invocation,

77
00:03:38.009 --> 00:03:42.005
and that is going to demand a date format.

78
00:03:42.005 --> 00:03:47.008
And that date format will look like

79
00:03:47.008 --> 00:03:50.005
yyyy...

80
00:03:50.005 --> 00:03:51.009
mm...

81
00:03:51.009 --> 00:03:53.001
dd.

82
00:03:53.001 --> 00:03:58.004
And let's say that this date field accepts empty values.

83
00:03:58.004 --> 00:04:03.002
So I'm just going to eliminate line 27 because that's blank.

84
00:04:03.002 --> 00:04:09.000
Push this goal to line 27 and eliminate line 28, too.

85
00:04:09.000 --> 00:04:10.001
So that's all we need.

86
00:04:10.001 --> 00:04:13.003
We have invoked the custom data return,

87
00:04:13.003 --> 00:04:16.005
and we have provided the date format.

88
00:04:16.005 --> 00:04:18.004
And now it should convert that string value

89
00:04:18.004 --> 00:04:20.000
to your date object.

90
00:04:20.000 --> 00:04:22.004
Additionally, let's also come inside

91
00:04:22.004 --> 00:04:25.006
the controller method on line 31, register user,

92
00:04:25.006 --> 00:04:28.004
and just after the first sysout, let us put a sysout,

93
00:04:28.004 --> 00:04:31.000
which will print the date of birth.

94
00:04:31.000 --> 00:04:34.008
So I'm just going to say user.getDateOFBirth.

95
00:04:34.008 --> 00:04:37.004
And let's run this bit,

96
00:04:37.004 --> 00:04:39.002
and let's see if everything works well now.

97
00:04:39.002 --> 00:04:47.003
So let's open the browser window.

98
00:04:47.003 --> 00:04:51.007
Let's go to the homepage, log in, register new user,

99
00:04:51.007 --> 00:04:54.005
let's say I'm going to enter Tom Hardy's data.

100
00:04:54.005 --> 00:04:56.008
So I'm going to say...

101
00:04:56.008 --> 00:05:00.005
Tom Hardy, and...

102
00:05:00.005 --> 00:05:02.000
let's say "play a sport."

103
00:05:02.000 --> 00:05:04.002
And I don't know his date of birth,

104
00:05:04.002 --> 00:05:06.004
but I can enter some kind of date of birth,

105
00:05:06.004 --> 00:05:13.009
so let's say 03/23/1985, maybe, and say submit.

106
00:05:13.009 --> 00:05:15.007
So now the user has been registered successfully.

107
00:05:15.007 --> 00:05:17.004
Let's go to the IDE.

108
00:05:17.004 --> 00:05:20.002
So that was the date that we have now got,

109
00:05:20.002 --> 00:05:21.008
after the conversion.

110
00:05:21.008 --> 00:05:25.000
So if you see, line number 33 sysout

111
00:05:25.000 --> 00:05:26.006
is the one that you're looking at right now,

112
00:05:26.006 --> 00:05:28.001
highlighted on the console.

113
00:05:28.001 --> 00:05:30.002
That's 23 March, 1985.

114
00:05:30.002 --> 00:05:34.003
So now that is the date object that you have

115
00:05:34.003 --> 00:05:37.000
with you for further processing.

116
00:05:37.000 --> 00:05:38.005
So if you look in the database,

117
00:05:38.005 --> 00:05:40.003
let's quickly go to this,

118
00:05:40.003 --> 00:05:42.007
and the data will be stored like that.

119
00:05:42.007 --> 00:05:46.002
Of course, you need to amend the data type of this column

120
00:05:46.002 --> 00:05:49.006
so that you can store a value like that

121
00:05:49.006 --> 00:05:53.000
for your further persistence to the database.

122
00:05:53.000 --> 00:05:57.007
So that's how you use an inbuilt custom editor.

123
00:05:57.007 --> 00:06:00.003
We have used for date, you can use for other data types too.

124
00:06:00.003 --> 00:06:02.007
And also, you can write your own editors.

125
00:06:02.007 --> 00:06:05.005
You have to implement the property editor interface

126
00:06:05.005 --> 00:06:07.000
and provide the necessary logic

127
00:06:07.000 --> 00:06:10.006
and register it like this, and you should be good.

128
00:06:10.006 --> 00:06:12.008
Just another small point here.

129
00:06:12.008 --> 00:06:15.001
On line 27, when we registered the custom editor,

130
00:06:15.001 --> 00:06:18.004
we chose a simple date format like that.

131
00:06:18.004 --> 00:06:21.002
However, the format that was displayed on the HTML

132
00:06:21.002 --> 00:06:22.006
was a little different.

133
00:06:22.006 --> 00:06:25.001
Now, that format may be picked up by your browser,

134
00:06:25.001 --> 00:06:26.009
and that will definitely depend on the region

135
00:06:26.009 --> 00:06:28.005
where you're trying to run this demo.

136
00:06:28.005 --> 00:06:30.006
So just make sure that you understand that point,

137
00:06:30.006 --> 00:06:32.007
that whatever the format is on the HTML,

138
00:06:32.007 --> 00:06:34.006
we want it formatted to this date,

139
00:06:34.006 --> 00:06:36.007
and then you can save it to your database.

140
00:06:36.007 --> 00:06:38.003
We have to be very careful with

141
00:06:38.003 --> 00:06:40.000
the date formats in a web application.

142
00:06:40.000 --> 00:06:43.000
So just noting that for you so that you remember it.

