WEBVTT
1
00:00:00.005 --> 00:00:02.003
- [Instructor] Now let us modify the same controller

2
00:00:02.003 --> 00:00:04.007
that we used before and use another annotation

3
00:00:04.007 --> 00:00:06.003
called @RestController.

4
00:00:06.003 --> 00:00:08.002
So let's head back with the IDE

5
00:00:08.002 --> 00:00:12.001
and instead of saying @Controller on line 14

6
00:00:12.001 --> 00:00:15.005
let's put up @RestController here.

7
00:00:15.005 --> 00:00:18.003
And let's also get rid of lines 22 to 30

8
00:00:18.003 --> 00:00:20.006
because that is not what we want as a part of

9
00:00:20.006 --> 00:00:23.005
the RESTful service method that we want to write.

10
00:00:23.005 --> 00:00:24.009
So what is RestController?

11
00:00:24.009 --> 00:00:26.007
This is an annotation which will combine both

12
00:00:26.007 --> 00:00:30.005
the @Controller annotation at line 15

13
00:00:30.005 --> 00:00:33.006
and @Response annotation on line 23.

14
00:00:33.006 --> 00:00:35.009
So RestController was introduced by Spring

15
00:00:35.009 --> 00:00:38.002
so that whatever classes that you write

16
00:00:38.002 --> 00:00:40.002
annotated with this one will signify

17
00:00:40.002 --> 00:00:42.005
that it is a RESTful service class.

18
00:00:42.005 --> 00:00:44.000
It gives you the full power

19
00:00:44.000 --> 00:00:46.008
to use all features of RESTful services.

20
00:00:46.008 --> 00:00:48.009
This was done so that you do not have to

21
00:00:48.009 --> 00:00:53.003
annotate every method with this @response annotation.

22
00:00:53.003 --> 00:00:54.008
The next thing that we're going to do here is

23
00:00:54.008 --> 00:00:57.005
we're going to use ResponseEntity.

24
00:00:57.005 --> 00:00:59.009
Now ResponseEntity is an object which is used

25
00:00:59.009 --> 00:01:03.001
to send information back to the client.

26
00:01:03.001 --> 00:01:04.004
Why is this required?

27
00:01:04.004 --> 00:01:06.000
Why can't we just return a list of products?

28
00:01:06.000 --> 00:01:08.008
We can but let's understand why.

29
00:01:08.008 --> 00:01:10.007
Let's say you have an incoming request,

30
00:01:10.007 --> 00:01:13.008
and that request is for a RESTful service URL,

31
00:01:13.008 --> 00:01:17.001
which is trying to get a product with ID number 25.

32
00:01:17.001 --> 00:01:21.002
That ID 25 is passed in the form of a path variable.

33
00:01:21.002 --> 00:01:22.009
We are going to look at path variables

34
00:01:22.009 --> 00:01:25.006
in the subsequent demos, do not worry about that now.

35
00:01:25.006 --> 00:01:26.006
Just understand that right now,

36
00:01:26.006 --> 00:01:29.008
we're just calling this for product number 25.

37
00:01:29.008 --> 00:01:32.003
The moment the request reached the service,

38
00:01:32.003 --> 00:01:33.006
or the server side,

39
00:01:33.006 --> 00:01:37.008
unfortunately that product number 25 did not exist.

40
00:01:37.008 --> 00:01:42.001
Now, the entire response can come back to the client

41
00:01:42.001 --> 00:01:43.003
in this fashion.

42
00:01:43.003 --> 00:01:47.003
You can have the status of the entire request as 200

43
00:01:47.003 --> 00:01:50.003
stating that okay the request got completed successfully

44
00:01:50.003 --> 00:01:52.004
but the body turned out to be empty

45
00:01:52.004 --> 00:01:55.003
because that product never existed on the server side.

46
00:01:55.003 --> 00:01:59.007
Now this is a little misleading information to the client.

47
00:01:59.007 --> 00:02:01.009
It is always better to tell the client

48
00:02:01.009 --> 00:02:06.000
the fact that the product number 25 does not exist,

49
00:02:06.000 --> 00:02:09.003
which means the status code could be 404

50
00:02:09.003 --> 00:02:13.001
which is resource not found instead of 200.

51
00:02:13.001 --> 00:02:15.000
So this kind of specific information

52
00:02:15.000 --> 00:02:19.007
where you want to state the status of the request correctly

53
00:02:19.007 --> 00:02:22.009
that's when you use ResponseEntity.

54
00:02:22.009 --> 00:02:25.006
Further do this, now we are going to couple it

55
00:02:25.006 --> 00:02:29.000
with request param annotation which is going to help us

56
00:02:29.000 --> 00:02:33.002
pass parameters and extract them in the controller.

57
00:02:33.002 --> 00:02:36.004
We have already used @Request param for an MVC controller.

58
00:02:36.004 --> 00:02:39.004
Nothing changes, everything is still the same there.

59
00:02:39.004 --> 00:02:41.004
So let's go back to the IDE

60
00:02:41.004 --> 00:02:43.000
and write another method here now

61
00:02:43.000 --> 00:02:46.006
which defines a get mapping like this.

62
00:02:46.006 --> 00:02:48.001
I'm going to keep the URL same.

63
00:02:48.001 --> 00:02:50.009
I'm just going to copy that from line number 22

64
00:02:50.009 --> 00:02:54.000
and paste it on line 32.

65
00:02:54.000 --> 00:02:56.005
And we will follow this with a method

66
00:02:56.005 --> 00:02:58.007
which is this time going to have

67
00:02:58.007 --> 00:03:01.007
a return type of ResponseEntity

68
00:03:01.007 --> 00:03:09.004
and we're going to say getProductsByRequestParam().

69
00:03:09.004 --> 00:03:12.008
Now this is just a name that I have provided

70
00:03:12.008 --> 00:03:15.001
so that you understand that we're writing a method

71
00:03:15.001 --> 00:03:18.006
which is going to accept a request parameter

72
00:03:18.006 --> 00:03:19.006
as simple as that.

73
00:03:19.006 --> 00:03:21.009
Now in order to access the request parameter

74
00:03:21.009 --> 00:03:23.001
we already know what to do.

75
00:03:23.001 --> 00:03:27.006
We have to annotate this with @RequestParam

76
00:03:27.006 --> 00:03:29.009
and let's say the name of that RequestParam is

77
00:03:29.009 --> 00:03:35.006
going to be name and let's map it to a string variable.

78
00:03:35.006 --> 00:03:38.008
After that, let's just follow the same thing.

79
00:03:38.008 --> 00:03:43.007
Let's have a list of products which we will retrieve

80
00:03:43.007 --> 00:03:46.005
from the product repository but this time

81
00:03:46.005 --> 00:03:49.000
since we have the RequestParam as name

82
00:03:49.000 --> 00:03:51.006
we are going to have a custom method called

83
00:03:51.006 --> 00:03:55.001
and pass in that parameter to retrieve the products.

84
00:03:55.001 --> 00:04:00.008
And now, after this we say return new ResponseEntity()

85
00:04:00.008 --> 00:04:04.005
and this time we pass in two things,

86
00:04:04.005 --> 00:04:13.000
the data and the HttpStatus which is this dot OK.

87
00:04:13.000 --> 00:04:16.000
So what we did is we have taken into consideration

88
00:04:16.000 --> 00:04:17.008
both the data that we want to return

89
00:04:17.008 --> 00:04:21.004
in the response of the body and the state,

90
00:04:21.004 --> 00:04:23.003
so if everything goes OK yes,

91
00:04:23.003 --> 00:04:27.000
we have an OK state getting back to the client.

