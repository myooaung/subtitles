WEBVTT
1
00:00:00.005 --> 00:00:01.004
- [Instructor] Now, let's create

2
00:00:01.004 --> 00:00:04.008
a Spring MVC project with Spring Boot.

3
00:00:04.008 --> 00:00:06.006
Spring Boot is one of the projects

4
00:00:06.006 --> 00:00:08.000
under the Spring framework

5
00:00:08.000 --> 00:00:09.008
which allows you to create faster

6
00:00:09.008 --> 00:00:11.006
production grade applications.

7
00:00:11.006 --> 00:00:14.006
It automatically does a lot of configuration for you

8
00:00:14.006 --> 00:00:17.006
without you explicitly having the need to do it.

9
00:00:17.006 --> 00:00:20.004
So with minimal fuss it will create an application

10
00:00:20.004 --> 00:00:23.003
which is up and running for your development process.

11
00:00:23.003 --> 00:00:24.009
So we're going to adopt Spring Boot

12
00:00:24.009 --> 00:00:28.003
in order to create our hplus application.

13
00:00:28.003 --> 00:00:29.004
I have a slide in front of me.

14
00:00:29.004 --> 00:00:31.006
Let's go through the steps one by one.

15
00:00:31.006 --> 00:00:34.002
The first is we have to generate a Maven project

16
00:00:34.002 --> 00:00:35.008
with Spring Initializr.

17
00:00:35.008 --> 00:00:39.000
Now Spring offers a very good website of Spring Initializr.

18
00:00:39.000 --> 00:00:42.002
I'm going to google that.

19
00:00:42.002 --> 00:00:44.000
You can reach this link and see that

20
00:00:44.000 --> 00:00:46.006
it gives you a utility to generate a project.

21
00:00:46.006 --> 00:00:48.008
You can generate a Maven or Gradle project,

22
00:00:48.008 --> 00:00:50.007
choose the language of your choice,

23
00:00:50.007 --> 00:00:54.003
chose the Boot version, configure all of the options

24
00:00:54.003 --> 00:00:56.006
and even define the pom dependencies

25
00:00:56.006 --> 00:00:59.000
that you want as a part of this application.

26
00:00:59.000 --> 00:01:01.007
So it'll generate that basic boiler plate code for you

27
00:01:01.007 --> 00:01:04.000
and then you're just to get started.

28
00:01:04.000 --> 00:01:07.001
So let's configure a project using this utility.

29
00:01:07.001 --> 00:01:09.003
So we're going to go with Maven project,

30
00:01:09.003 --> 00:01:11.000
the language is Java.

31
00:01:11.000 --> 00:01:14.002
We'll use Spring Boot 2.1.8 version

32
00:01:14.002 --> 00:01:18.008
which will include Spring MVC 5.X version

33
00:01:18.008 --> 00:01:21.009
that we have based our course on.

34
00:01:21.009 --> 00:01:23.007
Next, we have to define a group.

35
00:01:23.007 --> 00:01:27.008
Let's define a group there.

36
00:01:27.008 --> 00:01:32.002
The artifact, let's call it hplusapp.

37
00:01:32.002 --> 00:01:34.009
Let's look at the other options that we can configure.

38
00:01:34.009 --> 00:01:38.003
Hplusapp is the name and then there's a description.

39
00:01:38.003 --> 00:01:39.007
You can rewrite that as is.

40
00:01:39.007 --> 00:01:41.005
I'm not too happy with the package name

41
00:01:41.005 --> 00:01:43.001
so I'm going to reconfigure that.

42
00:01:43.001 --> 00:01:49.003
Let's say com.test.hplus.

43
00:01:49.003 --> 00:01:51.003
Okay, in this project we are going to work with JSP

44
00:01:51.003 --> 00:01:52.005
so we need a web archive,

45
00:01:52.005 --> 00:01:54.002
so I'm going to choose that option.

46
00:01:54.002 --> 00:01:57.002
We will stick to Java version 1.8

47
00:01:57.002 --> 00:01:59.004
and now let's define the dependencies

48
00:01:59.004 --> 00:02:02.005
that will get injected in the pom.xml for this project.

49
00:02:02.005 --> 00:02:05.009
Firstly, if we want to work with Spring MVC

50
00:02:05.009 --> 00:02:10.002
then the dependency that we're looking at is the Spring Web,

51
00:02:10.002 --> 00:02:12.004
which will include all the APIs

52
00:02:12.004 --> 00:02:15.009
that we want to work with Spring MVC space.

53
00:02:15.009 --> 00:02:18.000
Let's add that.

54
00:02:18.000 --> 00:02:19.005
Additionally, our application is also

55
00:02:19.005 --> 00:02:21.003
going to converse with a database.

56
00:02:21.003 --> 00:02:24.002
We have chosen MySQL DB Server.

57
00:02:24.002 --> 00:02:27.001
Now, in order to do that we need the connector jar for it

58
00:02:27.001 --> 00:02:29.006
so I'm going to inject that dependency.

59
00:02:29.006 --> 00:02:31.008
Also, we need to write the transaction code

60
00:02:31.008 --> 00:02:34.007
against the database and I am going to go ahead

61
00:02:34.007 --> 00:02:37.006
with Spring Java Persistence API integration

62
00:02:37.006 --> 00:02:39.006
that's already available as another project.

63
00:02:39.006 --> 00:02:41.007
It's fantastic to work with Spring JPA;

64
00:02:41.007 --> 00:02:43.004
however, if you're not too happy with it

65
00:02:43.004 --> 00:02:47.001
you can opt for JDBC or maybe Hibernate

66
00:02:47.001 --> 00:02:50.008
or any other underlying database transaction API

67
00:02:50.008 --> 00:02:52.003
that you are comfortable with.

68
00:02:52.003 --> 00:02:56.005
So let's go with JPA for this hplus application.

69
00:02:56.005 --> 00:02:58.008
So once we do that, let's generate the project

70
00:02:58.008 --> 00:03:02.002
and it will download a zip onto your downloads folder.

71
00:03:02.002 --> 00:03:08.001
Let's go ahead extract that.

72
00:03:08.001 --> 00:03:10.004
So there we have our hplus app,

73
00:03:10.004 --> 00:03:14.008
let's copy that and put it under your ideaProjects.

74
00:03:14.008 --> 00:03:18.006
And then, let's go to the IDE and open that project

75
00:03:18.006 --> 00:03:21.006
so I'll say file, open

76
00:03:21.006 --> 00:03:25.002
and then I'll select the project and say OK.

77
00:03:25.002 --> 00:03:26.009
Open this in a new window

78
00:03:26.009 --> 00:03:30.009
and we have a project building up in the IDE.

79
00:03:30.009 --> 00:03:32.005
So if you expand this,

80
00:03:32.005 --> 00:03:34.009
let's quickly inspect the folder structure.

81
00:03:34.009 --> 00:03:38.006
You have a src folder inside which you have main, java.

82
00:03:38.006 --> 00:03:41.002
So java is the place where the package has been created.

83
00:03:41.002 --> 00:03:43.008
All your source code will reside in this

84
00:03:43.008 --> 00:03:46.009
and your resources further has two folders,

85
00:03:46.009 --> 00:03:49.001
static and templates.

86
00:03:49.001 --> 00:03:50.009
Static folder is a place where you'll place

87
00:03:50.009 --> 00:03:53.006
all your CSS and images.

88
00:03:53.006 --> 00:03:56.002
Templates is the place where you could possibly put

89
00:03:56.002 --> 00:04:00.001
your HTML files had you been working with Thymeleaf

90
00:04:00.001 --> 00:04:01.009
as a view technology.

91
00:04:01.009 --> 00:04:04.002
However, we are working with JSPs

92
00:04:04.002 --> 00:04:06.009
so we don't really have to work with this folder.

93
00:04:06.009 --> 00:04:09.006
Application.properties is a file

94
00:04:09.006 --> 00:04:12.003
that will help you define key value pairs

95
00:04:12.003 --> 00:04:14.003
to do any kind of configuration related

96
00:04:14.003 --> 00:04:17.007
to the database or the servlet specific parameters

97
00:04:17.007 --> 00:04:20.007
or maybe error pages for you application, etc.

98
00:04:20.007 --> 00:04:24.001
We are going to use this in successive parts of the course.

99
00:04:24.001 --> 00:04:28.003
And then, let's look at the pom.xml.

100
00:04:28.003 --> 00:04:30.001
So when you create a Spring Boot project,

101
00:04:30.001 --> 00:04:33.002
it will provide with a Spring Boot start up parent

102
00:04:33.002 --> 00:04:36.000
and then it'll have all the default values

103
00:04:36.000 --> 00:04:38.004
that we configured when generating the project.

104
00:04:38.004 --> 00:04:41.000
We know that we're working with Java version 1.8

105
00:04:41.000 --> 00:04:42.005
so that's defined there

106
00:04:42.005 --> 00:04:44.009
and then when we look at the dependencies

107
00:04:44.009 --> 00:04:48.004
you have one which is going to help us work with Spring JPA

108
00:04:48.004 --> 00:04:50.003
another which is going to help us

109
00:04:50.003 --> 00:04:53.009
work with the Spring MVC APIs

110
00:04:53.009 --> 00:04:57.001
and then this is the one for the mysql-connector-jar

111
00:04:57.001 --> 00:04:58.008
and Spring Boot has a way

112
00:04:58.008 --> 00:05:01.009
to work with embedded servlet containers,

113
00:05:01.009 --> 00:05:04.006
so those dependencies have been injected right there.

114
00:05:04.006 --> 00:05:08.001
We also have a Spring Boot starter test

115
00:05:08.001 --> 00:05:10.008
so we can test out any code that we want.

116
00:05:10.008 --> 00:05:13.000
Now, let's go to the next step.

