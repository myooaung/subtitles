WEBVTT
1
00:00:00.005 --> 00:00:02.008
- [Instructor] Let's get started with a demo for convertors.

2
00:00:02.008 --> 00:00:05.000
We are going to write a custom convertor reset.

3
00:00:05.000 --> 00:00:06.009
So let's go through the steps one by one.

4
00:00:06.009 --> 00:00:10.003
First is, let's define an enum for gender.

5
00:00:10.003 --> 00:00:13.003
So we are at our IDE now, and under the beans folder,

6
00:00:13.003 --> 00:00:18.001
let's create a Java class for gender.

7
00:00:18.001 --> 00:00:21.004
And I'm going to change the style to enum and start a class.

8
00:00:21.004 --> 00:00:23.005
So what options could this have?

9
00:00:23.005 --> 00:00:26.008
Male, female, and other.

10
00:00:26.008 --> 00:00:31.003
I have to make sure that I separate that by commas.

11
00:00:31.003 --> 00:00:34.009
The next step will be to define a custom convertor class

12
00:00:34.009 --> 00:00:38.001
which implements convertor interface.

13
00:00:38.001 --> 00:00:39.006
We are at our IDE again.

14
00:00:39.006 --> 00:00:41.005
I'm first going to create a separate package

15
00:00:41.005 --> 00:00:45.002
for convertors under com dot test dot hplus.

16
00:00:45.002 --> 00:00:47.007
So let's right-click and create a package,

17
00:00:47.007 --> 00:00:51.003
specifically to accommodate all convertors.

18
00:00:51.003 --> 00:00:53.005
And inside that, we will write a class,

19
00:00:53.005 --> 00:01:00.003
which is, let's say, string to enum convertor.

20
00:01:00.003 --> 00:01:04.003
And this one is going to implement the convertor interface,

21
00:01:04.003 --> 00:01:07.001
which comes from org dot spring framework

22
00:01:07.001 --> 00:01:09.003
dot core dot convert package.

23
00:01:09.003 --> 00:01:12.006
And this will allow us to transform values

24
00:01:12.006 --> 00:01:17.001
from string to a gender type.

25
00:01:17.001 --> 00:01:20.005
So let's define that in gender's syntax.

26
00:01:20.005 --> 00:01:25.001
Then, let's add the unimplemented methods.

27
00:01:25.001 --> 00:01:27.006
There's just one method that we need to override,

28
00:01:27.006 --> 00:01:29.004
implement, essentially, in this.

29
00:01:29.004 --> 00:01:30.007
That's convert.

30
00:01:30.007 --> 00:01:33.002
It gives you a string value which you're going

31
00:01:33.002 --> 00:01:37.001
to convert to a gender type of value.

32
00:01:37.001 --> 00:01:39.006
The next step will be to add the conversion logic.

33
00:01:39.006 --> 00:01:41.004
So we are going to basically provide

34
00:01:41.004 --> 00:01:43.007
a very simple conversion logic here.

35
00:01:43.007 --> 00:01:44.009
What we do is we'll say

36
00:01:44.009 --> 00:01:48.007
if the incoming string value is going to be equal

37
00:01:48.007 --> 00:01:50.002
to this, male.

38
00:01:50.002 --> 00:01:51.005
So this is the value that you select

39
00:01:51.005 --> 00:01:54.004
from the HTML dropdown on your register form.

40
00:01:54.004 --> 00:01:56.000
So if that value is this,

41
00:01:56.000 --> 00:02:01.004
then you simply return the gender option of male.

42
00:02:01.004 --> 00:02:06.000
If not, then you can compare that value to female,

43
00:02:06.000 --> 00:02:07.002
because that may be the next value

44
00:02:07.002 --> 00:02:10.008
that is probably selected.

45
00:02:10.008 --> 00:02:15.009
In that case, you just return gender dot female.

46
00:02:15.009 --> 00:02:18.002
And the last value, for that,

47
00:02:18.002 --> 00:02:23.002
you just go ahead and return gender dot other.

48
00:02:23.002 --> 00:02:24.000
Simple?

49
00:02:24.000 --> 00:02:25.002
So this is simple logic.

50
00:02:25.002 --> 00:02:28.001
Map the HTML dropdown element value

51
00:02:28.001 --> 00:02:33.005
to a corresponding gender type value, which is a enum.

52
00:02:33.005 --> 00:02:36.004
The next step, we'll need to register the convertor

53
00:02:36.004 --> 00:02:37.009
in the configuration.

54
00:02:37.009 --> 00:02:39.009
Since this is a custom convertor,

55
00:02:39.009 --> 00:02:41.008
we will have to make Spring aware

56
00:02:41.008 --> 00:02:44.002
that we are going to use it in our application.

57
00:02:44.002 --> 00:02:46.004
So let's come to application config,

58
00:02:46.004 --> 00:02:49.005
and in this, we can overwrite a method

59
00:02:49.005 --> 00:02:51.002
called add formatters.

60
00:02:51.002 --> 00:02:52.001
There you go.

61
00:02:52.001 --> 00:02:54.000
Individual assist you need it for it.

62
00:02:54.000 --> 00:02:56.009
It comes with a formatter registry parameter.

63
00:02:56.009 --> 00:02:59.008
This is going to help us to register the convertor class

64
00:02:59.008 --> 00:03:01.003
that we wrote a minute ago.

65
00:03:01.003 --> 00:03:02.002
So let's go ahead and do that.

66
00:03:02.002 --> 00:03:05.006
Let's add registry dot add convertors.

67
00:03:05.006 --> 00:03:07.000
That's the API call.

68
00:03:07.000 --> 00:03:09.001
And you just have to instantiate your string

69
00:03:09.001 --> 00:03:10.002
to enum convertor.

70
00:03:10.002 --> 00:03:11.008
That is it.

71
00:03:11.008 --> 00:03:14.004
Also remember that in the user class,

72
00:03:14.004 --> 00:03:17.007
the gender is right now of the data right string.

73
00:03:17.007 --> 00:03:19.008
So this is something that we have to change,

74
00:03:19.008 --> 00:03:21.008
because we want to convert the string gender

75
00:03:21.008 --> 00:03:25.003
from the form to a gender by gender on the Java site.

76
00:03:25.003 --> 00:03:26.007
So this, I'm going to change now

77
00:03:26.007 --> 00:03:29.004
to the gender data byte.

78
00:03:29.004 --> 00:03:30.009
However, if we change it here,

79
00:03:30.009 --> 00:03:35.003
remember that we have to definitely change getter setters.

80
00:03:35.003 --> 00:03:38.007
So let's amend that.

81
00:03:38.007 --> 00:03:41.001
Now the next thing is test and run the application.

82
00:03:41.001 --> 00:03:44.001
But there's one small tweak here that we need to do.

83
00:03:44.001 --> 00:03:46.006
When we have the string value converted

84
00:03:46.006 --> 00:03:47.008
to the gender value,

85
00:03:47.008 --> 00:03:51.001
and then when that entire registration data is persisted

86
00:03:51.001 --> 00:03:53.007
to the database, by default,

87
00:03:53.007 --> 00:03:59.004
Spring JPA is going to save the ordinal of the enum.

88
00:03:59.004 --> 00:04:02.006
What I mean to say is this enum has three values,

89
00:04:02.006 --> 00:04:05.001
and each of them is presented by an ordinal.

90
00:04:05.001 --> 00:04:07.001
Zero, one, two, et cetera.

91
00:04:07.001 --> 00:04:08.009
Now, we don't want an ordinal number

92
00:04:08.009 --> 00:04:10.002
to be stored in the database.

93
00:04:10.002 --> 00:04:12.007
Of course, if you wish to store the number,

94
00:04:12.007 --> 00:04:14.001
you're free to do that.

95
00:04:14.001 --> 00:04:16.001
But we, right now, do not want that.

96
00:04:16.001 --> 00:04:20.000
Instead, we want that this string in uppercase,

97
00:04:20.000 --> 00:04:23.002
male, female, other, either of those we just selected,

98
00:04:23.002 --> 00:04:25.004
that exactly gets saved to the database.

99
00:04:25.004 --> 00:04:27.000
In order to do that tree, you have to go

100
00:04:27.000 --> 00:04:33.001
to your user view, and on top of your gender variable,

101
00:04:33.001 --> 00:04:36.000
there is one annotation called at enumerated,

102
00:04:36.000 --> 00:04:38.008
which is available in the Java extra persistence package.

103
00:04:38.008 --> 00:04:41.005
To this, you have to provide an argument,

104
00:04:41.005 --> 00:04:43.004
which is enum type.

105
00:04:43.004 --> 00:04:45.004
So you see it as an enum type dot string,

106
00:04:45.004 --> 00:04:47.008
and there is an enum type dot ordinal.

107
00:04:47.008 --> 00:04:50.000
So by default, there's an enum type ordinal,

108
00:04:50.000 --> 00:04:52.002
which would be saved, but we do not want that.

109
00:04:52.002 --> 00:04:55.005
Instead, we want enum type string to persisted.

110
00:04:55.005 --> 00:04:57.006
So that's the small tweak that you need to do.

111
00:04:57.006 --> 00:04:59.003
So once we are done, the last step is

112
00:04:59.003 --> 00:05:01.001
to build and run the application.

113
00:05:01.001 --> 00:05:04.005
So let's go ahead and run this build.

114
00:05:04.005 --> 00:05:06.008
So now, let's open our browser.

115
00:05:06.008 --> 00:05:11.007
Let's go to the homepage first.

116
00:05:11.007 --> 00:05:16.000
Log in, click on register, and let's enter all the data.

117
00:05:16.000 --> 00:05:19.003
I am going to say Monica Geller.

118
00:05:19.003 --> 00:05:21.000
Password according to the regular expression

119
00:05:21.000 --> 00:05:23.008
that we have put so that it passes the validation.

120
00:05:23.008 --> 00:05:27.000
Enter the first name, the last name.

121
00:05:27.000 --> 00:05:29.006
Monica Geller would want to play a sport, I'm sure.

122
00:05:29.006 --> 00:05:35.004
So 12, let's say 20 December, 1998 whatever.

123
00:05:35.004 --> 00:05:37.005
And let's select female.

124
00:05:37.005 --> 00:05:40.001
So once we select this data, let's submit.

125
00:05:40.001 --> 00:05:41.007
Yeah, and the data was saved successfully.

126
00:05:41.007 --> 00:05:45.009
Now let's go to the database and run a select query,

127
00:05:45.009 --> 00:05:48.001
and if you see, now the gender

128
00:05:48.001 --> 00:05:51.003
that is stored is the enum string.

129
00:05:51.003 --> 00:05:53.008
Before this, when we were storing values to the application,

130
00:05:53.008 --> 00:05:55.002
they were stored like this.

131
00:05:55.002 --> 00:05:57.006
It was the HTML dropdown element values,

132
00:05:57.006 --> 00:06:00.006
which was stored as they were on the HTML form.

133
00:06:00.006 --> 00:06:03.002
But now, we converted into this gender value,

134
00:06:03.002 --> 00:06:06.004
and that's how you see it was listed in the database.

135
00:06:06.004 --> 00:06:10.002
So that is how you run a simple convertors demo.

136
00:06:10.002 --> 00:06:11.005
Let's do a small thing here.

137
00:06:11.005 --> 00:06:13.005
You're just going to correct all the links,

138
00:06:13.005 --> 00:06:15.001
the hyperlinks that we have,

139
00:06:15.001 --> 00:06:17.008
to the correct URL pattern of the controllers.

140
00:06:17.008 --> 00:06:20.000
So on the index JSP, we have already done

141
00:06:20.000 --> 00:06:22.004
with the login and the search orders.

142
00:06:22.004 --> 00:06:23.009
They have been mapped properly.

143
00:06:23.009 --> 00:06:25.009
Let's just make sure that the rest of them are

144
00:06:25.009 --> 00:06:27.007
also mapped properly.

145
00:06:27.007 --> 00:06:30.008
So, home is going to point to home.

146
00:06:30.008 --> 00:06:33.006
Let's go over to the next JSP, login JSP, and find out

147
00:06:33.006 --> 00:06:36.001
if all the menu links have been mapped correctly.

148
00:06:36.001 --> 00:06:37.002
No, they are not.

149
00:06:37.002 --> 00:06:38.002
So I'm going to do that.

150
00:06:38.002 --> 00:06:39.006
Home.

151
00:06:39.006 --> 00:06:46.007
This will be go to search, of course with the forward slash.

152
00:06:46.007 --> 00:06:49.009
And we have not coded this yet, so let this be as is.

153
00:06:49.009 --> 00:06:52.005
Next the register JSP.

154
00:06:52.005 --> 00:06:54.001
Let's also check the links.

155
00:06:54.001 --> 00:06:56.008
So all of these URL patterns, as you already know,

156
00:06:56.008 --> 00:06:58.007
we have already defined the home controller,

157
00:06:58.007 --> 00:07:03.002
but we did not attach them to the URL nav bar on the page.

158
00:07:03.002 --> 00:07:04.009
So I'm just doing that right now.

159
00:07:04.009 --> 00:07:11.009
Home, again, this will be go to search,

160
00:07:11.009 --> 00:07:13.006
and this will be login.

161
00:07:13.006 --> 00:07:16.000
And then let's look at search.

162
00:07:16.000 --> 00:07:19.002
Okay, so we have to have home here,

163
00:07:19.002 --> 00:07:25.003
then here we have go to login.

164
00:07:25.003 --> 00:07:30.006
This will be slash go to search.

165
00:07:30.006 --> 00:07:32.009
And this is something that we've not coded yet.

166
00:07:32.009 --> 00:07:33.007
All right.

167
00:07:33.007 --> 00:07:36.002
So we have corrected the links on all the pages

168
00:07:36.002 --> 00:07:37.008
so that we can navigate essentially

169
00:07:37.008 --> 00:07:40.000
from any page to anywhere.

