WEBVTT
1
00:00:00.005 --> 00:00:01.006
- [Instructor] Next step is to add

2
00:00:01.006 --> 00:00:03.007
the @ModelAttribute annotation

3
00:00:03.007 --> 00:00:05.009
for method argument and the login.jsp.

4
00:00:05.009 --> 00:00:08.005
Now we already know this ModelAttribute annotation,

5
00:00:08.005 --> 00:00:09.004
and it essentially means

6
00:00:09.004 --> 00:00:12.005
that we have to first create a Java bean for the login form.

7
00:00:12.005 --> 00:00:14.002
So let's go to IDE.

8
00:00:14.002 --> 00:00:15.007
Let's go under the beans,

9
00:00:15.007 --> 00:00:20.007
and here I'll create a class which is called Login,

10
00:00:20.007 --> 00:00:24.008
and this will have just two variables,

11
00:00:24.008 --> 00:00:32.005
one is the username, and the other is the password.

12
00:00:32.005 --> 00:00:39.002
Let's also generate the getters and setters.

13
00:00:39.002 --> 00:00:42.005
And now let's attach the ModelAttribute to the method.

14
00:00:42.005 --> 00:00:43.008
So in the method signature

15
00:00:43.008 --> 00:00:46.006
of LoginController on line number 10,

16
00:00:46.006 --> 00:00:49.009
I'm going to add the ModelAttribute like that.

17
00:00:49.009 --> 00:00:52.009
Let's give it a name, let's say login,

18
00:00:52.009 --> 00:00:57.002
and this should get bound to the Login bean

19
00:00:57.002 --> 00:01:01.007
that we just defined inside the beans folder.

20
00:01:01.007 --> 00:01:03.006
Not only that, we have to make sure

21
00:01:03.006 --> 00:01:05.005
that this is bound to the JSP as well.

22
00:01:05.005 --> 00:01:07.003
So let's go to login.jsp,

23
00:01:07.003 --> 00:01:10.008
and under your form on line 36,

24
00:01:10.008 --> 00:01:17.006
I'm going to add the modelAttribute which is login.

25
00:01:17.006 --> 00:01:20.007
Next is we have to add @ModelAttribute

26
00:01:20.007 --> 00:01:22.007
for the default login values.

27
00:01:22.007 --> 00:01:24.005
So we have discussed this point before as well,

28
00:01:24.005 --> 00:01:27.000
whenever you're trying to render a JSP,

29
00:01:27.000 --> 00:01:30.008
and if this modelAttribute is attached to somewhere on it,

30
00:01:30.008 --> 00:01:33.001
then it will need a default value

31
00:01:33.001 --> 00:01:36.004
for the properties of this bean that you're binding it for.

32
00:01:36.004 --> 00:01:39.005
So under the HomeController,

33
00:01:39.005 --> 00:01:42.000
let's add a ModelAttribute the way we have added

34
00:01:42.000 --> 00:01:45.007
for the User and the GenderItems before.

35
00:01:45.007 --> 00:01:50.001
So I'm just going to copy this, lines 38 and 39,

36
00:01:50.001 --> 00:01:53.009
come down on 48, paste them,

37
00:01:53.009 --> 00:01:55.006
and let's change these variables.

38
00:01:55.006 --> 00:01:57.000
So this will be login

39
00:01:57.000 --> 00:01:59.003
because the name of the ModelAttribute is login for us.

40
00:01:59.003 --> 00:02:00.005
And what is it returning?

41
00:02:00.005 --> 00:02:02.006
It is returning the Login bean.

42
00:02:02.006 --> 00:02:08.006
So let's do that change.

43
00:02:08.006 --> 00:02:13.008
Let's change this name, let's say getDefaultLogin.

44
00:02:13.008 --> 00:02:18.001
So we have added the DefaultLogin object to ensure

45
00:02:18.001 --> 00:02:21.007
that when the login.jsp gets displayed for the first time

46
00:02:21.007 --> 00:02:23.006
it definitely gets something to render,

47
00:02:23.006 --> 00:02:26.001
even if it is empty values.

48
00:02:26.001 --> 00:02:28.009
Next step will be to add the data with code

49
00:02:28.009 --> 00:02:31.008
for selecting user from the database

50
00:02:31.008 --> 00:02:34.006
and autowire it to the controller.

51
00:02:34.006 --> 00:02:38.006
So we have to simulate the scenario of exception handling.

52
00:02:38.006 --> 00:02:39.008
Let's come back to the IDE

53
00:02:39.008 --> 00:02:41.005
and understand how we're going to do it.

54
00:02:41.005 --> 00:02:42.008
In this LoginController

55
00:02:42.008 --> 00:02:44.006
we are going to receive this Login bean

56
00:02:44.006 --> 00:02:47.007
on line 12 after the form gets submitted.

57
00:02:47.007 --> 00:02:50.000
We're going to extract the username from this

58
00:02:50.000 --> 00:02:52.001
and we're going to check against the database

59
00:02:52.001 --> 00:02:54.005
whether this username exists,

60
00:02:54.005 --> 00:02:57.004
and for that I have to add a method

61
00:02:57.004 --> 00:03:01.004
inside the UserRepository for transacting against database.

62
00:03:01.004 --> 00:03:04.003
So let's go to the repository class for User

63
00:03:04.003 --> 00:03:09.000
and this is going to be a custom method.

64
00:03:09.000 --> 00:03:10.004
Let me explain why.

65
00:03:10.004 --> 00:03:13.003
Let's go to LoginController,

66
00:03:13.003 --> 00:03:19.000
and let's say you autowire the repository class

67
00:03:19.000 --> 00:03:20.007
which is the private User,

68
00:03:20.007 --> 00:03:22.008
we have done this before in one of our videos already.

69
00:03:22.008 --> 00:03:24.009
So this is not new to us now.

70
00:03:24.009 --> 00:03:27.007
So once you do this let's come back to Controller method,

71
00:03:27.007 --> 00:03:30.008
and if you see, on the repository,

72
00:03:30.008 --> 00:03:33.000
the basic raw methods that are available

73
00:03:33.000 --> 00:03:36.009
are findAll, findAllById, findById,

74
00:03:36.009 --> 00:03:38.008
now that is the autoincremented ID

75
00:03:38.008 --> 00:03:40.006
that is present in our table.

76
00:03:40.006 --> 00:03:44.008
But we want to find a user on the basis of the username

77
00:03:44.008 --> 00:03:47.006
that is passed from out HTML form.

78
00:03:47.006 --> 00:03:50.001
So for that we will have to provide a custom method.

79
00:03:50.001 --> 00:03:52.008
So that's what we're going to add in the UserRepository.

80
00:03:52.008 --> 00:03:54.008
So let's hold on with this line for now,

81
00:03:54.008 --> 00:03:56.001
let's not do this now.

82
00:03:56.001 --> 00:03:58.006
First add a method in UserRepository.

83
00:03:58.006 --> 00:04:03.003
So let's come down here, and let's say this will be public,

84
00:04:03.003 --> 00:04:07.001
it should return a login,

85
00:04:07.001 --> 00:04:09.005
no, let's say it returns a User object itself that's fine,

86
00:04:09.005 --> 00:04:11.000
because it's a User table.

87
00:04:11.000 --> 00:04:13.002
And what are we going to do here?

88
00:04:13.002 --> 00:04:17.009
We'll say maybe searchByName, just to make it simple,

89
00:04:17.009 --> 00:04:22.000
and this has to be definitely given a Param annotation

90
00:04:22.000 --> 00:04:24.001
so that it picks the Param from the query

91
00:04:24.001 --> 00:04:25.004
that we are going to write.

92
00:04:25.004 --> 00:04:28.008
Let's import this, and this will be,

93
00:04:28.008 --> 00:04:30.009
let's say the name of the parameter is name

94
00:04:30.009 --> 00:04:35.009
which is bound to the method parameter by the same name,

95
00:04:35.009 --> 00:04:39.003
or let's maybe call username to keep it clear.

96
00:04:39.003 --> 00:04:42.003
Once that's done, on line 11 I'm going to write the query

97
00:04:42.003 --> 00:04:45.005
to retrieve the User object by the username,

98
00:04:45.005 --> 00:04:47.001
and that will look something like this.

99
00:04:47.001 --> 00:04:51.004
We'll say select u, the entire User object,

100
00:04:51.004 --> 00:04:56.001
from the User table, with an alias u,

101
00:04:56.001 --> 00:05:01.002
where u.username is equal to,

102
00:05:01.002 --> 00:05:03.000
and then you pass your parameter.

103
00:05:03.000 --> 00:05:06.001
The name of the parameter that we chose on line 13 is name,

104
00:05:06.001 --> 00:05:08.004
so I'm just going to embed that parameter here,

105
00:05:08.004 --> 00:05:10.003
and that should work fine for us.

106
00:05:10.003 --> 00:05:13.006
So this is going to return us the User object.

107
00:05:13.006 --> 00:05:15.008
Now we can go back to LoginController,

108
00:05:15.008 --> 00:05:19.004
and we have already autowired the UserRepository on line 14,

109
00:05:19.004 --> 00:05:21.004
so let's just come to the Controller method

110
00:05:21.004 --> 00:05:26.007
down here on line 18, and say Repository dot,

111
00:05:26.007 --> 00:05:29.004
and that will be SearchByName, that's what we added,

112
00:05:29.004 --> 00:05:31.003
and we can fetch the username

113
00:05:31.003 --> 00:05:33.008
from the Login bean on line 17.

114
00:05:33.008 --> 00:05:37.008
So just say login.getUsername,

115
00:05:37.008 --> 00:05:39.005
and the return of this is a User object.

116
00:05:39.005 --> 00:05:43.008
Let's collect that into a user variable.

117
00:05:43.008 --> 00:05:46.000
So we are done adding a method in the UserRepository,

118
00:05:46.000 --> 00:05:49.000
and we have autowired it to our Controller.

119
00:05:49.000 --> 00:05:51.000
Next steps in the next video.

