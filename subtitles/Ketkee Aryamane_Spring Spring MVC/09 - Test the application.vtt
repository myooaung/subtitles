WEBVTT
1
00:00:00.005 --> 00:00:02.004
- [Instructor] The few last steps that we have to do is

2
00:00:02.004 --> 00:00:03.002
we have to make sure that

3
00:00:03.002 --> 00:00:05.004
the action mapping on register.jsp form

4
00:00:05.004 --> 00:00:08.004
is mapped correctly with a registration controller.

5
00:00:08.004 --> 00:00:09.008
So let's go to IDE.

6
00:00:09.008 --> 00:00:12.004
Pick that URL pattern.

7
00:00:12.004 --> 00:00:14.006
Go to register.jsp

8
00:00:14.006 --> 00:00:17.005
and make sure that we have embedded that

9
00:00:17.005 --> 00:00:21.004
in the action attribute, registeruser.

10
00:00:21.004 --> 00:00:23.002
And what's the next step?

11
00:00:23.002 --> 00:00:26.002
Next is to add the UserRepository class.

12
00:00:26.002 --> 00:00:29.006
So the way we added a database interaction class

13
00:00:29.006 --> 00:00:33.008
for the products, we're going to add one more for user.

14
00:00:33.008 --> 00:00:35.003
So under the repository package,

15
00:00:35.003 --> 00:00:42.004
I'm going to say New, Java class, UserRepository.

16
00:00:42.004 --> 00:00:46.001
Make sure that you annotate that with @Repository,

17
00:00:46.001 --> 00:00:49.008
and let this be an interface

18
00:00:49.008 --> 00:00:54.009
which extends CrudRepository.

19
00:00:54.009 --> 00:00:57.001
The object that we are trying to deal with

20
00:00:57.001 --> 00:01:02.007
is the User object and the primary key is an Integer.

21
00:01:02.007 --> 00:01:05.007
So as I've said before that the CrudRepository on line eight

22
00:01:05.007 --> 00:01:07.004
that we have extended is going to provide us

23
00:01:07.004 --> 00:01:09.005
with all the basic Crud methods,

24
00:01:09.005 --> 00:01:12.002
so you really don't need to do any implementation.

25
00:01:12.002 --> 00:01:16.001
Just a recap, in the last use case that we implemented,

26
00:01:16.001 --> 00:01:18.003
we had implemented a custom query.

27
00:01:18.003 --> 00:01:20.000
That's why we had to write a method.

28
00:01:20.000 --> 00:01:21.008
Now we don't need that here.

29
00:01:21.008 --> 00:01:23.005
The insert or the save method

30
00:01:23.005 --> 00:01:26.000
is already a part of CrudRepository,

31
00:01:26.000 --> 00:01:28.006
available at your disposal.

32
00:01:28.006 --> 00:01:31.000
Then we have to modify the RegistrationController

33
00:01:31.000 --> 00:01:34.006
to autowire UserRepository and invoke the insert method.

34
00:01:34.006 --> 00:01:37.003
So let's go to the RegistrationController

35
00:01:37.003 --> 00:01:39.009
and inside that we're going to autowire it

36
00:01:39.009 --> 00:01:42.007
the way we did it for the search use case.

37
00:01:42.007 --> 00:01:48.002
Say private UserRepository.

38
00:01:48.002 --> 00:01:50.001
Right, and let's come inside

39
00:01:50.001 --> 00:01:53.002
the registerUser method on line 18,

40
00:01:53.002 --> 00:01:56.003
and call the userRepository.save.

41
00:01:56.003 --> 00:01:58.003
So you see those methods are already available to you

42
00:01:58.003 --> 00:02:01.003
as a part of the implementation of Spring Data and JPA.

43
00:02:01.003 --> 00:02:02.005
And you just have to make sure

44
00:02:02.005 --> 00:02:04.004
that you pass your user argument,

45
00:02:04.004 --> 00:02:06.008
and you will be done.

46
00:02:06.008 --> 00:02:08.005
Just so that we are clear,

47
00:02:08.005 --> 00:02:10.000
this is an entity user,

48
00:02:10.000 --> 00:02:13.007
and there is a corresponding table user in the database.

49
00:02:13.007 --> 00:02:15.000
That's the one.

50
00:02:15.000 --> 00:02:16.005
All these fields are mapped

51
00:02:16.005 --> 00:02:20.006
to the respective columns here in the table.

52
00:02:20.006 --> 00:02:22.004
So whatever we have defined here,

53
00:02:22.004 --> 00:02:23.009
all of them are present there.

54
00:02:23.009 --> 00:02:25.008
And, of course, on line 10

55
00:02:25.008 --> 00:02:29.000
we are annotating the id attribute

56
00:02:29.000 --> 00:02:33.002
with the id annotation so it is identified as a primary key.

57
00:02:33.002 --> 00:02:35.001
So once we invoke the insert method,

58
00:02:35.001 --> 00:02:37.005
we are supposed to build and run the application,

59
00:02:37.005 --> 00:02:40.008
but there are quite a few changes that we need to make.

60
00:02:40.008 --> 00:02:45.004
Very minor changes, so let's make sure that line 19 is cut,

61
00:02:45.004 --> 00:02:49.002
and is the first statement inside the method.

62
00:02:49.002 --> 00:02:53.006
That's one. Also, let's attach a Model attribute here

63
00:02:53.006 --> 00:02:55.001
as a method parameter.

64
00:02:55.001 --> 00:02:56.004
And why do we need that?

65
00:02:56.004 --> 00:03:03.001
We need that because we want to save a message to the UI,

66
00:03:03.001 --> 00:03:07.008
which is confirming that data was saved.

67
00:03:07.008 --> 00:03:14.008
And that message is, "User was registered successfully."

68
00:03:14.008 --> 00:03:15.008
There we go.

69
00:03:15.008 --> 00:03:19.000
So this is an information message for the login page

70
00:03:19.000 --> 00:03:21.001
saying that the user got registered successfully

71
00:03:21.001 --> 00:03:24.005
once the RegistrationController finished its job.

72
00:03:24.005 --> 00:03:26.000
And that's what we're trying to do here.

73
00:03:26.000 --> 00:03:28.009
Once we do that, we just have to go back to the login page.

74
00:03:28.009 --> 00:03:30.008
So let's come back to login,

75
00:03:30.008 --> 00:03:34.007
and just about the section of the login form,

76
00:03:34.007 --> 00:03:37.003
on line 32, I'm going to access

77
00:03:37.003 --> 00:03:41.006
that dataSaved attribute that I added to Model.

78
00:03:41.006 --> 00:03:43.007
So let's attach a class here.

79
00:03:43.007 --> 00:03:47.002
This is a CSS class which is available in your style.css.

80
00:03:47.002 --> 00:03:51.001
And let's access that attribute

81
00:03:51.001 --> 00:03:54.004
using the Spring Expression Language,

82
00:03:54.004 --> 00:03:56.007
and close the span tag.

83
00:03:56.007 --> 00:03:57.007
So if it finds a value

84
00:03:57.007 --> 00:03:59.006
in the dataSaved in the Model attribute,

85
00:03:59.006 --> 00:04:01.004
it is going to display that message to us

86
00:04:01.004 --> 00:04:04.007
saying that the user got registered successfully.

87
00:04:04.007 --> 00:04:07.003
So we have the registration form ready.

88
00:04:07.003 --> 00:04:09.000
We have the login link ready.

89
00:04:09.000 --> 00:04:10.002
Everything is fine.

90
00:04:10.002 --> 00:04:12.008
Let's just try running this,

91
00:04:12.008 --> 00:04:17.001
and then we will test out the application.

92
00:04:17.001 --> 00:04:18.008
Okay, so it is started well.

93
00:04:18.008 --> 00:04:22.008
Let's go and open the URL.

94
00:04:22.008 --> 00:04:25.007
So now we're first going to go to login, right?

95
00:04:25.007 --> 00:04:27.008
So we have reached the login page.

96
00:04:27.008 --> 00:04:30.002
And that's the link to register a new user.

97
00:04:30.002 --> 00:04:32.008
So I'm just going to click there.

98
00:04:32.008 --> 00:04:35.004
Okay, so I think I have made a mistake.

99
00:04:35.004 --> 00:04:39.001
It tells me that WEB-INF/jsp/register.jsp,

100
00:04:39.001 --> 00:04:40.009
there's a problem at line number so, so, so,

101
00:04:40.009 --> 00:04:43.003
and it says that form:radiobutton must be empty,

102
00:04:43.003 --> 00:04:44.005
but it is not.

103
00:04:44.005 --> 00:04:46.003
Okay, now that we've got this error page,

104
00:04:46.003 --> 00:04:47.007
let me just quickly tell you

105
00:04:47.007 --> 00:04:51.002
this is the default Whitelabel Error Page

106
00:04:51.002 --> 00:04:54.004
that Spring Boot actually publishes for you.

107
00:04:54.004 --> 00:04:56.000
And this is something that we're going

108
00:04:56.000 --> 00:04:59.000
to override in the successive parts of this course,

109
00:04:59.000 --> 00:05:00.006
so it's good that this exception has come up

110
00:05:00.006 --> 00:05:03.002
because we got to see the Whitelabel Error Page.

111
00:05:03.002 --> 00:05:04.006
So now we're going to fix that error.

112
00:05:04.006 --> 00:05:06.006
Let's go to the IDE.

113
00:05:06.006 --> 00:05:09.004
Go to register.jsp, and let's see

114
00:05:09.004 --> 00:05:11.004
where the form:radiobutton is empty.

115
00:05:11.004 --> 00:05:12.006
Yes, that's right.

116
00:05:12.006 --> 00:05:15.007
So we need to close this tag appropriately,

117
00:05:15.007 --> 00:05:19.002
otherwise it is going to complain.

118
00:05:19.002 --> 00:05:23.005
Okay, let's stop, and let's run the build again.

119
00:05:23.005 --> 00:05:25.003
Okay, so let's go from the beginning.

120
00:05:25.003 --> 00:05:28.003
I'm just going to access home first, again,

121
00:05:28.003 --> 00:05:31.002
so that we have seen the flow consistently.

122
00:05:31.002 --> 00:05:34.001
Let's go to login, and then let's go to register user,

123
00:05:34.001 --> 00:05:35.002
and there we go.

124
00:05:35.002 --> 00:05:38.008
Now we have our registration form ready out there.

125
00:05:38.008 --> 00:05:41.008
So I'm just going to go ahead and enter some values.

126
00:05:41.008 --> 00:05:49.001
Let's say, johndoe.

127
00:05:49.001 --> 00:05:51.004
Definitely play a sport.

128
00:05:51.004 --> 00:05:54.000
You can put in any,

129
00:05:54.000 --> 00:05:55.006
and then say, Submit.

130
00:05:55.006 --> 00:05:59.009
And you see that the user was registered successfully.

131
00:05:59.009 --> 00:06:01.006
So if you go back to your database,

132
00:06:01.006 --> 00:06:04.007
and run your user SELECT query,

133
00:06:04.007 --> 00:06:06.007
you should be able to see the new field

134
00:06:06.007 --> 00:06:08.008
that has now got added as a part.

135
00:06:08.008 --> 00:06:12.009
The first two users was something that was already added

136
00:06:12.009 --> 00:06:14.003
using the database script,

137
00:06:14.003 --> 00:06:17.001
so that's the new record that got inserted

138
00:06:17.001 --> 00:06:20.000
using our h+ application.

139
00:06:20.000 --> 00:06:21.001
So that's what we have done.

140
00:06:21.001 --> 00:06:23.004
We have used @Model attribute annotation

141
00:06:23.004 --> 00:06:25.003
everywhere for this use case,

142
00:06:25.003 --> 00:06:27.003
and it's one of the most crucial annotations

143
00:06:27.003 --> 00:06:29.002
that we have in Spring MVC

144
00:06:29.002 --> 00:06:31.000
which allows you to do data binding,

145
00:06:31.000 --> 00:06:34.002
and it is so easy to work with your pages

146
00:06:34.002 --> 00:06:37.000
for any kind of assistance in your application.

