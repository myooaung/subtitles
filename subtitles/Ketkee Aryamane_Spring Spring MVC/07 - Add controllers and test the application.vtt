WEBVTT
1
00:00:00.005 --> 00:00:02.001
- [Instructor] Now that we have all the necessary

2
00:00:02.001 --> 00:00:03.006
configuration in place,

3
00:00:03.006 --> 00:00:07.003
let's go ahead and add a basic HomeController class.

4
00:00:07.003 --> 00:00:10.005
So on the IDE, right-click again on com.test,

5
00:00:10.005 --> 00:00:14.007
create a class, and let's say HomeController,

6
00:00:14.007 --> 00:00:16.006
that's the name.

7
00:00:16.006 --> 00:00:19.003
Now this is the first controller that we're writing

8
00:00:19.003 --> 00:00:21.004
as a part of the Spring MVC project.

9
00:00:21.004 --> 00:00:23.009
Now in order to designate this as controller,

10
00:00:23.009 --> 00:00:26.004
we will have to annotate it appropriately.

11
00:00:26.004 --> 00:00:29.007
The annotation for that is Controller.

12
00:00:29.007 --> 00:00:31.002
So Spring MVC will then know

13
00:00:31.002 --> 00:00:33.006
that this is a controller component.

14
00:00:33.006 --> 00:00:35.008
Now this controller component is supposed to be

15
00:00:35.008 --> 00:00:37.007
intercepting some HTTP request,

16
00:00:37.007 --> 00:00:41.008
and that request should have a unique URL pattern

17
00:00:41.008 --> 00:00:44.009
which is going to be unique to the HomeController.

18
00:00:44.009 --> 00:00:47.008
Now that URL pattern can be defined with another annotation,

19
00:00:47.008 --> 00:00:50.008
which is called GetMapping.

20
00:00:50.008 --> 00:00:54.002
So for this GetMapping, you can just specify an argument

21
00:00:54.002 --> 00:00:58.003
with the help of brackets, and say /home.

22
00:00:58.003 --> 00:01:02.001
Now for this /home pattern, we're supposed to write a method

23
00:01:02.001 --> 00:01:03.006
because that's the logic that the controller

24
00:01:03.006 --> 00:01:04.009
is going to execute.

25
00:01:04.009 --> 00:01:06.002
How does that look?

26
00:01:06.002 --> 00:01:12.001
Public, let it return a String, and let's say goHome,

27
00:01:12.001 --> 00:01:13.004
and what do we do inside this,

28
00:01:13.004 --> 00:01:15.006
let's first put a very simple Sys-out

29
00:01:15.006 --> 00:01:20.002
saying that we are in HomeController,

30
00:01:20.002 --> 00:01:23.004
and then we just return a String value.

31
00:01:23.004 --> 00:01:26.003
That String value will be index.

32
00:01:26.003 --> 00:01:27.007
So what we're trying to do here is

33
00:01:27.007 --> 00:01:29.007
on line 12 you're returning index,

34
00:01:29.007 --> 00:01:31.007
which is the name of the view.

35
00:01:31.007 --> 00:01:33.003
You've discussed in the architecture before

36
00:01:33.003 --> 00:01:35.005
that the controller will decide the name of the view

37
00:01:35.005 --> 00:01:37.001
that we're supposed to go to.

38
00:01:37.001 --> 00:01:39.006
So that is the view that we're trying to map there.

39
00:01:39.006 --> 00:01:42.007
Now the DispatcherServlet is going to pick this view name,

40
00:01:42.007 --> 00:01:44.008
and work with the ViewResolver,

41
00:01:44.008 --> 00:01:48.004
and then resolve that to the index JSP template,

42
00:01:48.004 --> 00:01:52.001
and carry that as a response to the browser.

43
00:01:52.001 --> 00:01:54.008
So once we are done adding the basic HomeController class,

44
00:01:54.008 --> 00:01:57.001
let's now build and run the application.

45
00:01:57.001 --> 00:01:58.005
How are you going to do that?

46
00:01:58.005 --> 00:02:00.000
On your right side of the IDE,

47
00:02:00.000 --> 00:02:01.009
there's a Maven tab.

48
00:02:01.009 --> 00:02:03.008
I'm just going to open that,

49
00:02:03.008 --> 00:02:07.008
expand it, and on the lifecycle select clean

50
00:02:07.008 --> 00:02:10.002
and install as the dockets.

51
00:02:10.002 --> 00:02:12.005
Clean and install is basically going to help you

52
00:02:12.005 --> 00:02:15.000
create a war file for this project.

53
00:02:15.000 --> 00:02:16.008
That's what we want to have

54
00:02:16.008 --> 00:02:18.008
so that we can run it on Tomcat.

55
00:02:18.008 --> 00:02:20.004
Once we have the war ready,

56
00:02:20.004 --> 00:02:25.004
you can just go to tomcat7 under the plugins,

57
00:02:25.004 --> 00:02:28.006
and select an option of tomcat run-war.

58
00:02:28.006 --> 00:02:30.007
So that's going to help us run the war.

59
00:02:30.007 --> 00:02:35.009
So clean, install, and tomcat run-war.

60
00:02:35.009 --> 00:02:38.005
Those are the three targets that we want to

61
00:02:38.005 --> 00:02:40.009
basically run for executing the build.

62
00:02:40.009 --> 00:02:44.004
So let's go ahead and do that.

63
00:02:44.004 --> 00:02:45.006
So let this build happen.

64
00:02:45.006 --> 00:02:47.000
It is going to create a war

65
00:02:47.000 --> 00:02:48.004
and make it ready for you,

66
00:02:48.004 --> 00:02:50.000
and then the plugin is going to run the war.

67
00:02:50.000 --> 00:02:51.008
So you can see the progress

68
00:02:51.008 --> 00:02:54.005
in the tab down there on the IDE.

69
00:02:54.005 --> 00:02:55.004
There we go.

70
00:02:55.004 --> 00:02:57.004
If you see, it has already given us a Sys-out

71
00:02:57.004 --> 00:02:59.008
saying that it's initializing the Servlet MVC.

72
00:02:59.008 --> 00:03:02.001
So this is that bootstrapping of DispatcherServlet

73
00:03:02.001 --> 00:03:03.003
that has happened for us.

74
00:03:03.003 --> 00:03:05.002
It's completed the initialization.

75
00:03:05.002 --> 00:03:06.004
Everything is ready.

76
00:03:06.004 --> 00:03:07.007
Now let's open a browser

77
00:03:07.007 --> 00:03:10.009
and access the URL pattern of HomeController

78
00:03:10.009 --> 00:03:12.005
to check out the application.

79
00:03:12.005 --> 00:03:15.009
So let's go to an Incognito window

80
00:03:15.009 --> 00:03:19.001
and requests are going to be processed with

81
00:03:19.001 --> 00:03:21.005
the 8080 port, so let's first do that,

82
00:03:21.005 --> 00:03:24.002
and then let's pick up the application name.

83
00:03:24.002 --> 00:03:26.009
The application name is available in the form XML.

84
00:03:26.009 --> 00:03:31.000
If you go right up, let's choose this, copy,

85
00:03:31.000 --> 00:03:33.004
come back to Chrome,

86
00:03:33.004 --> 00:03:35.001
give the name of the application,

87
00:03:35.001 --> 00:03:37.007
and then the URL pattern

88
00:03:37.007 --> 00:03:39.007
that you've defined in HomeController

89
00:03:39.007 --> 00:03:42.000
is /home on line number nine.

90
00:03:42.000 --> 00:03:44.003
So let's go to the browser,

91
00:03:44.003 --> 00:03:48.005
say /home, and then

92
00:03:48.005 --> 00:03:51.006
we have the application index JSP opened up.

93
00:03:51.006 --> 00:03:54.004
So that is what our application is going to look like.

94
00:03:54.004 --> 00:03:59.002
And we have rendered everything with Spring MVC project.

95
00:03:59.002 --> 00:04:00.004
So to summarize quickly,

96
00:04:00.004 --> 00:04:03.000
the Spring MVC Maven project that we created

97
00:04:03.000 --> 00:04:06.003
takes a simple AnnotationConfigWebApplicationContext object

98
00:04:06.003 --> 00:04:09.003
and makes sure that it registers the Spring configuration

99
00:04:09.003 --> 00:04:11.007
that we're going to do as a part of this application.

100
00:04:11.007 --> 00:04:13.001
After that, we went ahead

101
00:04:13.001 --> 00:04:15.004
and bootstrapped the DispatcherServlet

102
00:04:15.004 --> 00:04:18.002
using ServletRegistration dot Dynamic interface,

103
00:04:18.002 --> 00:04:20.008
and we've made sure that we've tied up that context

104
00:04:20.008 --> 00:04:22.004
to the DispatcherServlet.

105
00:04:22.004 --> 00:04:24.007
So this is all weaved in together

106
00:04:24.007 --> 00:04:26.005
to make sure that now your application

107
00:04:26.005 --> 00:04:28.006
can start serving your requests,

108
00:04:28.006 --> 00:04:32.000
and DispatcherServlet is going to do the job for you.

109
00:04:32.000 --> 00:04:35.001
Additionally, further, if you want to make any kind

110
00:04:35.001 --> 00:04:37.009
of other configuration for this particular servlet,

111
00:04:37.009 --> 00:04:40.006
you can do that right here in this class.

112
00:04:40.006 --> 00:04:42.009
However, any configuration that you need

113
00:04:42.009 --> 00:04:44.008
for Spring-related features

114
00:04:44.008 --> 00:04:47.002
can be put up inside ApplicationConfig

115
00:04:47.002 --> 00:04:49.002
that will be picked up by the context.

116
00:04:49.002 --> 00:04:52.008
So that is how Spring MVC can work with Maven only.

117
00:04:52.008 --> 00:04:54.006
In the next video, we are now going to create

118
00:04:54.006 --> 00:04:59.000
a Spring project for MVC using Spring Boot.

