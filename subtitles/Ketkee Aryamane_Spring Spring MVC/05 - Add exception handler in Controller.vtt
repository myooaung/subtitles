WEBVTT
1
00:00:00.005 --> 00:00:02.007
- [Instructor] The next step is to add the spring form tags

2
00:00:02.007 --> 00:00:04.001
for the login page.

3
00:00:04.001 --> 00:00:05.009
Let's go back to the IDE.

4
00:00:05.009 --> 00:00:08.004
You already have the form tag library declaration done

5
00:00:08.004 --> 00:00:10.002
before on the register page.

6
00:00:10.002 --> 00:00:11.004
So we're going to pick it up from there.

7
00:00:11.004 --> 00:00:12.008
Let's go to register.jsp.

8
00:00:12.008 --> 00:00:16.005
If you go right at the top on line number two,

9
00:00:16.005 --> 00:00:18.005
just going to take that line, copy,

10
00:00:18.005 --> 00:00:21.004
go to login JSP, right at the top again,

11
00:00:21.004 --> 00:00:23.003
and paste that.

12
00:00:23.003 --> 00:00:26.002
So we have the form tag library of spring I will label now,

13
00:00:26.002 --> 00:00:28.005
and we can convert our login form

14
00:00:28.005 --> 00:00:32.005
for using the spring's form tag library tags.

15
00:00:32.005 --> 00:00:34.005
So let's do that transformation quickly.

16
00:00:34.005 --> 00:00:36.006
This will be form:form.

17
00:00:36.006 --> 00:00:38.004
Those two attributes can be the same.

18
00:00:38.004 --> 00:00:41.009
This will change to form input,

19
00:00:41.009 --> 00:00:44.005
and instead of name we should be

20
00:00:44.005 --> 00:00:46.004
attaching the path attribute.

21
00:00:46.004 --> 00:00:48.001
Similarly, this one

22
00:00:48.001 --> 00:00:50.009
for the password will change the same way

23
00:00:50.009 --> 00:00:53.005
and this will become path.

24
00:00:53.005 --> 00:00:57.001
At the end, let's close the form tag properly.

25
00:00:57.001 --> 00:00:58.000
So there we go.

26
00:00:58.000 --> 00:01:01.003
We've transformed the basic input HTML elements

27
00:01:01.003 --> 00:01:05.000
with the spring tag libraries, form elements.

28
00:01:05.000 --> 00:01:05.009
The next one is:

29
00:01:05.009 --> 00:01:07.008
Add a custom exception class in hplus

30
00:01:07.008 --> 00:01:09.002
for runtime exceptions.

31
00:01:09.002 --> 00:01:10.007
Yes, so we're doing exception handling.

32
00:01:10.007 --> 00:01:13.000
We're going to write our own custom exception class.

33
00:01:13.000 --> 00:01:15.004
Let's go to the IDE,

34
00:01:15.004 --> 00:01:19.000
and under com.test.hplus, let's make another package

35
00:01:19.000 --> 00:01:23.006
for your exception classes.

36
00:01:23.006 --> 00:01:25.006
And let's create a class here.

37
00:01:25.006 --> 00:01:31.000
Let's call it ApplicationException.

38
00:01:31.000 --> 00:01:35.009
And this will extend RuntimeException,

39
00:01:35.009 --> 00:01:38.007
and we can write a small constructor here

40
00:01:38.007 --> 00:01:42.006
which is going to take a message,

41
00:01:42.006 --> 00:01:46.006
which is the error message.

42
00:01:46.006 --> 00:01:50.001
And it's just going to give a call to the super constructor,

43
00:01:50.001 --> 00:01:51.005
with that message.

44
00:01:51.005 --> 00:01:53.001
So this is the core Java basics

45
00:01:53.001 --> 00:01:54.009
of writing a custom exception class,

46
00:01:54.009 --> 00:01:56.009
and making sure that the message is attached to it

47
00:01:56.009 --> 00:01:58.003
so that it goes out the hierarchy

48
00:01:58.003 --> 00:02:00.008
and you get the message wherever you want to use it.

49
00:02:00.008 --> 00:02:03.007
So the custom exception class is now ready with us.

50
00:02:03.007 --> 00:02:04.005
That's good.

51
00:02:04.005 --> 00:02:06.000
Now let's go to the next one.

52
00:02:06.000 --> 00:02:11.003
Use @ExceptionHandler for a method in LoginController.java

53
00:02:11.003 --> 00:02:13.001
and simulate the exception.

54
00:02:13.001 --> 00:02:14.005
So just to quickly give you

55
00:02:14.005 --> 00:02:16.006
what we're trying to do here is,

56
00:02:16.006 --> 00:02:18.001
let's go to IDE.

57
00:02:18.001 --> 00:02:20.002
In our previous video we added a method

58
00:02:20.002 --> 00:02:24.002
to find out if the user exists in our database.

59
00:02:24.002 --> 00:02:27.001
So now in the login controller once the form gets submitted,

60
00:02:27.001 --> 00:02:29.007
we're going to invoke that searchByName method.

61
00:02:29.007 --> 00:02:32.001
It'll be good if we find a user;

62
00:02:32.001 --> 00:02:34.008
however, if we don't,

63
00:02:34.008 --> 00:02:37.005
then we are going to throw an exception.

64
00:02:37.005 --> 00:02:41.004
That exception will be the one that we just created

65
00:02:41.004 --> 00:02:43.007
and when that exception is thrown,

66
00:02:43.007 --> 00:02:47.002
how is it handle, is what is a part of this demo.

67
00:02:47.002 --> 00:02:48.002
So let's do that.

68
00:02:48.002 --> 00:02:51.005
Let's go to LoginController and let's write a method here

69
00:02:51.005 --> 00:02:54.003
for exception handling only.

70
00:02:54.003 --> 00:02:55.009
And how will that look like?

71
00:02:55.009 --> 00:03:00.002
It will look like public String

72
00:03:00.002 --> 00:03:06.003
and you can just say handleException.

73
00:03:06.003 --> 00:03:07.006
And what will this do?

74
00:03:07.006 --> 00:03:09.009
Just put a small sys out saying,

75
00:03:09.009 --> 00:03:14.009
"in exception handler",

76
00:03:14.009 --> 00:03:16.005
let's spell everything right.

77
00:03:16.005 --> 00:03:22.004
Okay, "in exception handler of Login Controller"

78
00:03:22.004 --> 00:03:23.002
Perfect.

79
00:03:23.002 --> 00:03:24.003
And, what are we going to do?

80
00:03:24.003 --> 00:03:29.003
We're just going to return that error view name.

81
00:03:29.003 --> 00:03:32.000
So we already have a JSP template

82
00:03:32.000 --> 00:03:33.006
by this name under our JSP folder.

83
00:03:33.006 --> 00:03:34.007
That's already done.

84
00:03:34.007 --> 00:03:37.004
We have also disabled the whitelable error page provided

85
00:03:37.004 --> 00:03:39.002
by Spring Boot, so that's also done.

86
00:03:39.002 --> 00:03:42.000
So whenever an exception occurs in LoginController,

87
00:03:42.000 --> 00:03:44.007
we're going to say that please go to this method

88
00:03:44.007 --> 00:03:48.004
and go back to error page, trying to display something.

89
00:03:48.004 --> 00:03:49.007
Right? Now,

90
00:03:49.007 --> 00:03:52.002
it's not so simple to just write a method,

91
00:03:52.002 --> 00:03:55.004
we also have to remember to annotate it

92
00:03:55.004 --> 00:03:58.002
with this annotation, which is ExceptionHandler.

93
00:03:58.002 --> 00:04:01.006
That's the crucial part of this method.

94
00:04:01.006 --> 00:04:03.007
And then, what is the last thing?

95
00:04:03.007 --> 00:04:05.008
We have to simulate the exception. That's right.

96
00:04:05.008 --> 00:04:08.005
So let's come back to the IDE

97
00:04:08.005 --> 00:04:11.005
and on line 20 inside the main login method

98
00:04:11.005 --> 00:04:14.005
of our controller, we're going to say if

99
00:04:14.005 --> 00:04:18.002
user was not found, so let's say if userwasnull,

100
00:04:18.002 --> 00:04:23.003
then we will throw a new ApplicationException

101
00:04:23.003 --> 00:04:29.007
and embeds a message saying "user not found".

102
00:04:29.007 --> 00:04:32.009
Okay, now once that's done, understand one thing:

103
00:04:32.009 --> 00:04:36.007
This exception when it gets thrown, from line 23,

104
00:04:36.007 --> 00:04:39.001
it should come under this method.

105
00:04:39.001 --> 00:04:41.004
Yes it will, because we annotated this

106
00:04:41.004 --> 00:04:43.000
with that exception handler.

107
00:04:43.000 --> 00:04:44.009
But there's another thing that we have to do.

108
00:04:44.009 --> 00:04:47.008
We have to tell that this method is supposed

109
00:04:47.008 --> 00:04:51.007
to be handling exceptions of this type.

110
00:04:51.007 --> 00:04:54.004
So that can be specified by an argument

111
00:04:54.004 --> 00:04:57.004
to the @ExceptionHandler annotation.

112
00:04:57.004 --> 00:04:58.004
How is that done?

113
00:04:58.004 --> 00:04:59.006
We just have to make sure

114
00:04:59.006 --> 00:05:02.002
that you embed the name of the class.

115
00:05:02.002 --> 00:05:03.004
That's all.

116
00:05:03.004 --> 00:05:05.002
So now what we've said is:

117
00:05:05.002 --> 00:05:07.009
Once this ApplicationException is thrown,

118
00:05:07.009 --> 00:05:11.002
it will quickly come inside the handleException method,

119
00:05:11.002 --> 00:05:14.006
because you're asking it to handle that ApplicationException

120
00:05:14.006 --> 00:05:16.004
by annotating like this.

121
00:05:16.004 --> 00:05:17.008
So it'll execute this

122
00:05:17.008 --> 00:05:20.006
and then it'll go back to our error page.

123
00:05:20.006 --> 00:05:22.004
Okay, so now the last step will be

124
00:05:22.004 --> 00:05:25.004
to build and run the application.

125
00:05:25.004 --> 00:05:29.005
So let's make a build of this.

126
00:05:29.005 --> 00:05:30.009
Okay, it has started well.

127
00:05:30.009 --> 00:05:32.007
Let's see if the flow works well now.

128
00:05:32.007 --> 00:05:37.000
So, let's go to home.

129
00:05:37.000 --> 00:05:38.009
Come to login.

130
00:05:38.009 --> 00:05:40.008
I'm going to try adding credentials here

131
00:05:40.008 --> 00:05:44.004
which do not exist in the database.

132
00:05:44.004 --> 00:05:46.004
Some kind of credentials.

133
00:05:46.004 --> 00:05:47.006
So when you say that,

134
00:05:47.006 --> 00:05:49.008
there we go, now we have come to an error page.

135
00:05:49.008 --> 00:05:51.006
And it says that okay, "the dementors have attacked,

136
00:05:51.006 --> 00:05:53.006
"and Professor McGonagall is attending to it".

137
00:05:53.006 --> 00:05:55.007
So this is our error page.

138
00:05:55.007 --> 00:05:57.008
So what happened is that the exception occurred.

139
00:05:57.008 --> 00:06:00.001
It went to our ExceptionHandler.

140
00:06:00.001 --> 00:06:02.004
Let's go back to IDE and inspect that.

141
00:06:02.004 --> 00:06:03.009
The exception occurred here,

142
00:06:03.009 --> 00:06:05.003
then it went here.

143
00:06:05.003 --> 00:06:06.003
How do we confirm that?

144
00:06:06.003 --> 00:06:09.000
We did get the sys out printed on the console.

145
00:06:09.000 --> 00:06:11.008
And then, it just went back to our error page.

146
00:06:11.008 --> 00:06:14.006
So, all of the exceptions can be handled

147
00:06:14.006 --> 00:06:16.007
in the same mannering or application

148
00:06:16.007 --> 00:06:19.003
and that's how you do a graceful exit

149
00:06:19.003 --> 00:06:22.000
so that you have a proper error message

150
00:06:22.000 --> 00:06:23.007
displayed to the user,

151
00:06:23.007 --> 00:06:26.000
so that it ends up providing an intuitive expedient

152
00:06:26.000 --> 00:06:28.000
for your customers.

