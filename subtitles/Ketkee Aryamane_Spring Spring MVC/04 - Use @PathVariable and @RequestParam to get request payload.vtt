WEBVTT
1
00:00:00.005 --> 00:00:02.002
- [Instructor] Let us now write another method,

2
00:00:02.002 --> 00:00:05.004
which will accommodate the PathVariable annotation.

3
00:00:05.004 --> 00:00:08.000
So let's go back to the IDE.

4
00:00:08.000 --> 00:00:10.009
Let's come down on line 37.

5
00:00:10.009 --> 00:00:17.004
Mention GetMapping and let's say hplus

6
00:00:17.004 --> 00:00:20.003
rest products.

7
00:00:20.003 --> 00:00:26.000
But this time, this URL will also have a PathVariable,

8
00:00:26.000 --> 00:00:28.003
and that is mentioned with the help of curly braces,

9
00:00:28.003 --> 00:00:30.003
so I'm just going to say id.

10
00:00:30.003 --> 00:00:32.000
And let's follow that with a method.

11
00:00:32.000 --> 00:00:35.006
That method will look very similar to the earlier one,

12
00:00:35.006 --> 00:00:38.006
it will return a ResponseEntity,

13
00:00:38.006 --> 00:00:41.005
but this time I'm just going to label it differently,

14
00:00:41.005 --> 00:00:47.001
getProductsByPathVariable.

15
00:00:47.001 --> 00:00:50.001
And this time, the method argument that we have

16
00:00:50.001 --> 00:00:54.001
will be annotated with the PathVariable annotation.

17
00:00:54.001 --> 00:00:57.002
And let's make sure that this is also id.

18
00:00:57.002 --> 00:01:00.004
So this name that you have provided here, and here,

19
00:01:00.004 --> 00:01:02.003
should be exactly the same.

20
00:01:02.003 --> 00:01:07.001
And let's say this maps to a String variable, again.

21
00:01:07.001 --> 00:01:08.009
Okay, there's one small change that we have to do.

22
00:01:08.009 --> 00:01:12.004
Instead of id, we are just going to use the name parameter,

23
00:01:12.004 --> 00:01:14.006
so I'm just going to quickly change that respectively

24
00:01:14.006 --> 00:01:16.005
in all places.

25
00:01:16.005 --> 00:01:21.000
And let that map to Sting name.

26
00:01:21.000 --> 00:01:23.007
And the rest of the stuff is exactly the same.

27
00:01:23.007 --> 00:01:26.007
I'm just going to copy lines 33 and 34.

28
00:01:26.007 --> 00:01:29.004
And come down and paste them here.

29
00:01:29.004 --> 00:01:31.002
So what we have essentially done is

30
00:01:31.002 --> 00:01:32.009
we have written two methods.

31
00:01:32.009 --> 00:01:34.003
Both of them get mappings.

32
00:01:34.003 --> 00:01:35.009
The URL patterns are a little different

33
00:01:35.009 --> 00:01:37.007
because this one takes a PathVariable

34
00:01:37.007 --> 00:01:39.006
and this one takes a RequestParam.

35
00:01:39.006 --> 00:01:42.004
So in order to bind that incoming request parameter

36
00:01:42.004 --> 00:01:45.009
to your method, we have @RequestParam annotation,

37
00:01:45.009 --> 00:01:48.008
and to bind the incoming PathVariable to our method,

38
00:01:48.008 --> 00:01:51.007
we have @PathVariable annotation.

39
00:01:51.007 --> 00:01:54.009
So, we are ready, now let's just go and build this,

40
00:01:54.009 --> 00:02:00.000
and test the services out using Postman tool.

41
00:02:00.000 --> 00:02:01.009
So now let's go ahead to Postman,

42
00:02:01.009 --> 00:02:04.006
and we are just going to modify this get request

43
00:02:04.006 --> 00:02:07.002
and add a query param this time.

44
00:02:07.002 --> 00:02:11.000
And, if you go back to the IDE, just to make sure,

45
00:02:11.000 --> 00:02:13.008
the name of the request parameter is name.

46
00:02:13.008 --> 00:02:19.002
So, let's go back, say question mark name equal to water.

47
00:02:19.002 --> 00:02:24.001
So if you hit this request, you should get products only

48
00:02:24.001 --> 00:02:27.008
which have water in them, so this is calling the like query

49
00:02:27.008 --> 00:02:31.009
in our repository class, and retrieving you those products.

50
00:02:31.009 --> 00:02:33.001
If you look here, on Postman,

51
00:02:33.001 --> 00:02:35.003
you can see the status, 200, the time it takes

52
00:02:35.003 --> 00:02:37.004
to complete the request, et cetera.

53
00:02:37.004 --> 00:02:39.000
Now let's test out the other method,

54
00:02:39.000 --> 00:02:41.000
which is taking the PathVariable.

55
00:02:41.000 --> 00:02:43.000
So slight modification will be required

56
00:02:43.000 --> 00:02:44.005
in the request that you hit.

57
00:02:44.005 --> 00:02:48.002
Instead of this query param, let's eliminate that,

58
00:02:48.002 --> 00:02:51.006
and let's say slash water, like that.

59
00:02:51.006 --> 00:02:54.002
So that will become, now, the PathVariable

60
00:02:54.002 --> 00:02:56.004
that you're sending to the request.

61
00:02:56.004 --> 00:03:00.000
So let's hit send, and the result is more or less the same.

62
00:03:00.000 --> 00:03:01.001
Let me just change this parameter

63
00:03:01.001 --> 00:03:03.002
so that we get a different result sect.

64
00:03:03.002 --> 00:03:06.007
Let's say chocolate.

65
00:03:06.007 --> 00:03:07.006
There we go.

66
00:03:07.006 --> 00:03:10.005
So we have the respective results retrieved

67
00:03:10.005 --> 00:03:13.008
with a status 200, all of it is okay.

68
00:03:13.008 --> 00:03:16.009
So what we have done is we have built a rest controller,

69
00:03:16.009 --> 00:03:19.002
and it is always good to have the return type

70
00:03:19.002 --> 00:03:21.008
as ResponseEntity, which can accommodate both.

71
00:03:21.008 --> 00:03:25.002
The HttpStatus code, and the data.

72
00:03:25.002 --> 00:03:28.000
And this HttpStatus is basically borrowed from the

73
00:03:28.000 --> 00:03:30.005
org springframework http package,

74
00:03:30.005 --> 00:03:33.005
which gives you a list of designated HTTP codes

75
00:03:33.005 --> 00:03:37.006
that you can map as a part of your ResponseEntity object.

76
00:03:37.006 --> 00:03:39.007
In the next video, we also find out

77
00:03:39.007 --> 00:03:41.007
how do you send those error codes.

78
00:03:41.007 --> 00:03:44.001
So if, let's say, the results was not found,

79
00:03:44.001 --> 00:03:48.002
then how do you incorporate 404 as the status code?

80
00:03:48.002 --> 00:03:49.006
We have a different use case for it,

81
00:03:49.006 --> 00:03:51.000
coming up in the next video.

