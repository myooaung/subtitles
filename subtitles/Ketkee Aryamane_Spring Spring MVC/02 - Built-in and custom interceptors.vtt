WEBVTT
1
00:00:00.005 --> 00:00:02.003
- [Narrator] So let's look at Interceptors in Spring MVC

2
00:00:02.003 --> 00:00:03.003
we see how they look like.

3
00:00:03.003 --> 00:00:07.002
They're Implementations of the HandlerInterceptorAdapter

4
00:00:07.002 --> 00:00:09.005
and they have three methods.

5
00:00:09.005 --> 00:00:13.001
PreHandle, postHandle and afterCompletion.

6
00:00:13.001 --> 00:00:16.004
So as each of the name suggests preHandle is the one

7
00:00:16.004 --> 00:00:18.008
that will be invoked as a part of a pre-processing

8
00:00:18.008 --> 00:00:22.004
of the requests, that is before your controller is called.

9
00:00:22.004 --> 00:00:25.002
PostHandle will be called as a part of post processing

10
00:00:25.002 --> 00:00:27.007
which is after the controller execution is completed

11
00:00:27.007 --> 00:00:31.001
and the control comes back to the interceptor.

12
00:00:31.001 --> 00:00:33.005
After completion method on the other hand,

13
00:00:33.005 --> 00:00:36.001
will be called when the response is already committed

14
00:00:36.001 --> 00:00:37.001
to the client,

15
00:00:37.001 --> 00:00:40.004
which means when you have your GSP rendered on the browser,

16
00:00:40.004 --> 00:00:43.007
that's the point where afterCompletion will get called.

17
00:00:43.007 --> 00:00:46.002
Now, there's a host of built-in interceptors

18
00:00:46.002 --> 00:00:48.003
that Spring MVC has for you,

19
00:00:48.003 --> 00:00:50.003
they're couple of them that I've listed on the slide because

20
00:00:50.003 --> 00:00:53.003
we're going to use each one of them to successively do

21
00:00:53.003 --> 00:00:55.005
a demo in rest of the videos.

22
00:00:55.005 --> 00:00:58.008
ThemeChangeInterceptor and LocaleChangeInterceptor

23
00:00:58.008 --> 00:01:02.004
are used to intercept the value of theme and local,

24
00:01:02.004 --> 00:01:04.000
local is a language.

25
00:01:04.000 --> 00:01:07.007
So these values can be intercepted for every request

26
00:01:07.007 --> 00:01:09.009
using either of these interceptors.

27
00:01:09.009 --> 00:01:11.006
Of course, if you're not happy with the range

28
00:01:11.006 --> 00:01:13.005
of interceptors that Spring MVC provides,

29
00:01:13.005 --> 00:01:16.005
you can always write your custom interceptor

30
00:01:16.005 --> 00:01:20.006
which should extend HandlerInterceptorAdapter class.

31
00:01:20.006 --> 00:01:21.008
So once you extend that class,

32
00:01:21.008 --> 00:01:25.001
you will have to provide a logic for preHandle, postHandle

33
00:01:25.001 --> 00:01:28.001
and afterCompletion if necessary.

34
00:01:28.001 --> 00:01:31.000
Now, we are going to do a demo for interceptors.

35
00:01:31.000 --> 00:01:34.002
This is going to be quite a big demo and it is going to involve

36
00:01:34.002 --> 00:01:35.005
a lot of steps.

37
00:01:35.005 --> 00:01:38.007
So let's see the flow first and then we will get

38
00:01:38.007 --> 00:01:40.001
to the steps.

39
00:01:40.001 --> 00:01:42.007
So when you go on home page and you click on login,

40
00:01:42.007 --> 00:01:45.008
we know that login jsp is displayed in HPlus.

41
00:01:45.008 --> 00:01:49.004
Once you submit the login form, you have a login controller

42
00:01:49.004 --> 00:01:51.008
which will capture that login data for us.

43
00:01:51.008 --> 00:01:54.002
We have already established these components before

44
00:01:54.002 --> 00:01:57.003
in HPlus application in our previous demos.

45
00:01:57.003 --> 00:01:59.006
Once that happens now we are going

46
00:01:59.006 --> 00:02:01.004
to establish another controller

47
00:02:01.004 --> 00:02:03.006
which is called profile controller.

48
00:02:03.006 --> 00:02:05.008
This controller will be responsible to retrieve

49
00:02:05.008 --> 00:02:08.009
any user information from the session

50
00:02:08.009 --> 00:02:12.005
or from the database if you want and then display that

51
00:02:12.005 --> 00:02:15.005
to a profile jsp.

52
00:02:15.005 --> 00:02:18.002
So this is the basic flow that you're going to set up

53
00:02:18.002 --> 00:02:21.007
and since we of course are trying to deal with interceptors.

54
00:02:21.007 --> 00:02:24.009
That's the one that you would write logging interceptor.

55
00:02:24.009 --> 00:02:26.008
It's a custom Interceptor that we are going to code

56
00:02:26.008 --> 00:02:29.008
for this HPlus application and that interceptor is going

57
00:02:29.008 --> 00:02:32.007
to work between these flows.

58
00:02:32.007 --> 00:02:34.008
So it is going to work when your login controller

59
00:02:34.008 --> 00:02:37.003
gets called or it is going to work when the request

60
00:02:37.003 --> 00:02:40.000
to your profile controller is made.

61
00:02:40.000 --> 00:02:42.001
So this is going to be quite a big demo,

62
00:02:42.001 --> 00:02:45.000
will just look at it patiently step by step.

