WEBVTT
1
00:00:00.005 --> 00:00:02.001
- [Instructor] This module is going to talk about

2
00:00:02.001 --> 00:00:05.002
exception handling in the Spring MVC Framework.

3
00:00:05.002 --> 00:00:07.004
Now, before looking at that, let's just go through

4
00:00:07.004 --> 00:00:09.003
a few special bean types.

5
00:00:09.003 --> 00:00:10.008
Some of them we've already known before,

6
00:00:10.008 --> 00:00:12.008
and some of them are new.

7
00:00:12.008 --> 00:00:14.006
The first one is HandlerMapping.

8
00:00:14.006 --> 00:00:15.008
We have seen this as a part of

9
00:00:15.008 --> 00:00:17.009
the Spring MVC architecture before.

10
00:00:17.009 --> 00:00:20.005
This is used to map the incoming request

11
00:00:20.005 --> 00:00:23.001
to a specific handler, which is a controller.

12
00:00:23.001 --> 00:00:26.001
It may also include pre- and post-processing components

13
00:00:26.001 --> 00:00:30.004
like filters, or they are called interceptors in Spring MVC.

14
00:00:30.004 --> 00:00:32.001
Now we haven't looked at interceptors yet,

15
00:00:32.001 --> 00:00:35.000
but we will at a later part in this course.

16
00:00:35.000 --> 00:00:39.001
HandlerAdapter is supposed to help the DispatcherServlet

17
00:00:39.001 --> 00:00:41.009
to invoke the handler, and this is regardless

18
00:00:41.009 --> 00:00:44.004
of how the handler will be invoked.

19
00:00:44.004 --> 00:00:46.004
For example, sometimes the handlers are resolved

20
00:00:46.004 --> 00:00:49.001
by a annotations, sometimes by XML,

21
00:00:49.001 --> 00:00:50.008
so all of these details are

22
00:00:50.008 --> 00:00:51.008
hidden from the DispatcherServlet,

23
00:00:51.008 --> 00:00:55.007
and HandlerAdapter will just help DispatcerServlet

24
00:00:55.007 --> 00:00:57.006
to invoke the handler.

25
00:00:57.006 --> 00:01:00.006
Next is HandlerExceptionResolver.

26
00:01:00.006 --> 00:01:03.001
Now this is a bean type which is supposed to manage

27
00:01:03.001 --> 00:01:07.000
the strategy of exception handling for your application.

28
00:01:07.000 --> 00:01:09.004
We are going to see this in a little further detail

29
00:01:09.004 --> 00:01:11.006
in the upcoming videos.

30
00:01:11.006 --> 00:01:13.009
ViewResolver, now this is also something

31
00:01:13.009 --> 00:01:15.002
that we've seen before.

32
00:01:15.002 --> 00:01:17.004
It helps us resolve views.

33
00:01:17.004 --> 00:01:19.007
We have been working with JavaServer Pages,

34
00:01:19.007 --> 00:01:21.002
but as I have already said before,

35
00:01:21.002 --> 00:01:23.000
Spring MVC can help you integrate

36
00:01:23.000 --> 00:01:24.006
with any other view technologies,

37
00:01:24.006 --> 00:01:28.003
templating languages like Velocity, FreeMarker, et cetera.

38
00:01:28.003 --> 00:01:31.000
And we have already used InternalResourceViewResolver

39
00:01:31.000 --> 00:01:34.005
so that we configure the paths from which the JSP templates

40
00:01:34.005 --> 00:01:36.003
are supposed to be picked up from.

41
00:01:36.003 --> 00:01:40.005
Similarly, we can resolve views either by an XML file,

42
00:01:40.005 --> 00:01:43.000
or even by the properties file.

43
00:01:43.000 --> 00:01:46.003
We have a demo for this lined up in the next module.

44
00:01:46.003 --> 00:01:50.006
LocaleResolver, now this one will help us with localization

45
00:01:50.006 --> 00:01:52.009
and internationalization support.

46
00:01:52.009 --> 00:01:56.008
L10n and i18n, and they have been written that way

47
00:01:56.008 --> 00:02:00.003
because there are 10 letters between L and N,

48
00:02:00.003 --> 00:02:03.003
and 18 letters between I and N in the words

49
00:02:03.003 --> 00:02:06.003
localization and internationalization respectively.

50
00:02:06.003 --> 00:02:08.002
So often you have this requirement

51
00:02:08.002 --> 00:02:09.009
that you have to expose your website

52
00:02:09.009 --> 00:02:11.006
in a number of different languages.

53
00:02:11.006 --> 00:02:13.009
So LocaleResolver is going to come to your rescue,

54
00:02:13.009 --> 00:02:16.006
help you pick up the locale according to the region,

55
00:02:16.006 --> 00:02:20.002
and display internationalized views for your application.

56
00:02:20.002 --> 00:02:22.007
If you recall, in our Validations Demo

57
00:02:22.007 --> 00:02:25.004
we had already localized error messages

58
00:02:25.004 --> 00:02:28.000
in validation messages to our properties file

59
00:02:28.000 --> 00:02:30.006
so that they can be picked up from a central place

60
00:02:30.006 --> 00:02:33.006
rather than duplicating it across JavaBeans.

61
00:02:33.006 --> 00:02:36.000
That's localization, and internationalization

62
00:02:36.000 --> 00:02:37.005
is of course the concept of

63
00:02:37.005 --> 00:02:40.001
having different locales across different regions.

64
00:02:40.001 --> 00:02:43.001
So LocaleResolver is there to help you.

65
00:02:43.001 --> 00:02:45.005
Lastly, ThemeResolver.

66
00:02:45.005 --> 00:02:47.008
Now today, when you have an application,

67
00:02:47.008 --> 00:02:50.008
it could be displayed in a different look and feel.

68
00:02:50.008 --> 00:02:52.008
For example, you have the dark mode

69
00:02:52.008 --> 00:02:55.001
that is enabled across so many devices today.

70
00:02:55.001 --> 00:02:57.005
It's a very common thing, and you will need to provide

71
00:02:57.005 --> 00:02:59.002
support for that in your web application

72
00:02:59.002 --> 00:03:00.007
at some point in time.

73
00:03:00.007 --> 00:03:03.005
So if you want to stylize a different look and feel

74
00:03:03.005 --> 00:03:07.002
for different clients, then you can use ThemeResolver.

75
00:03:07.002 --> 00:03:09.004
So it will help you resolve your themes

76
00:03:09.004 --> 00:03:12.000
and provide a different look and feel to your users.

