WEBVTT
1
00:00:00.005 --> 00:00:01.005
- In the previous video,

2
00:00:01.005 --> 00:00:04.001
we established the entire login flow

3
00:00:04.001 --> 00:00:07.008
and we also did an exception handling for that login flow.

4
00:00:07.008 --> 00:00:11.002
Now, when we did the exception handling, if you remember,

5
00:00:11.002 --> 00:00:13.000
we were in the LoginController,

6
00:00:13.000 --> 00:00:14.006
we tried to throw something from there

7
00:00:14.006 --> 00:00:16.000
and the exception handler

8
00:00:16.000 --> 00:00:19.000
was written in the LoginController itself.

9
00:00:19.000 --> 00:00:21.002
However, sometimes you may have a requirement

10
00:00:21.002 --> 00:00:23.007
to apply this exception handler

11
00:00:23.007 --> 00:00:27.009
to all exceptions that occur in any of your controllers.

12
00:00:27.009 --> 00:00:29.008
So what I'm trying to tell you here is

13
00:00:29.008 --> 00:00:33.001
that we may need to set up a global exception handler

14
00:00:33.001 --> 00:00:35.004
for the entire application.

15
00:00:35.004 --> 00:00:37.007
So no matter which controller throws exceptions,

16
00:00:37.007 --> 00:00:39.000
you need to make sure

17
00:00:39.000 --> 00:00:42.007
that the same kind of exception handling mechanism applies.

18
00:00:42.007 --> 00:00:45.000
So that's the demo that we're now going to do.

19
00:00:45.000 --> 00:00:47.000
Let's see the slide for the steps.

20
00:00:47.000 --> 00:00:50.000
You first add a class for the exception handler.

21
00:00:50.000 --> 00:00:52.000
So this is the global exception handler

22
00:00:52.000 --> 00:00:53.003
that we are adding now.

23
00:00:53.003 --> 00:00:55.003
So let's go back to the IDE

24
00:00:55.003 --> 00:00:56.005
and in the exceptions,

25
00:00:56.005 --> 00:00:58.005
let's create a class

26
00:00:58.005 --> 00:01:04.000
and let's say ApplicationExceptionHandler.

27
00:01:04.000 --> 00:01:05.007
Right, because this is for all the exceptions that

28
00:01:05.007 --> 00:01:08.000
will occur in your controllers.

29
00:01:08.000 --> 00:01:09.002
Let's do that.

30
00:01:09.002 --> 00:01:10.007
And once it is done,

31
00:01:10.007 --> 00:01:15.000
you're going to use this annotation of @ControllerAdvice

32
00:01:15.000 --> 00:01:16.007
on the class level.

33
00:01:16.007 --> 00:01:18.000
Let's first annotate that

34
00:01:18.000 --> 00:01:20.006
and then we'll see what that is going to do for us.

35
00:01:20.006 --> 00:01:21.006
This one.

36
00:01:21.006 --> 00:01:27.008
It comes from the org.springframework.web.bind package.

37
00:01:27.008 --> 00:01:30.001
So what this is going to do is

38
00:01:30.001 --> 00:01:35.006
it is going to apply this advice of exception handling

39
00:01:35.006 --> 00:01:39.002
to all the controllers of your application.

40
00:01:39.002 --> 00:01:41.006
That's why it is called controller advice.

41
00:01:41.006 --> 00:01:43.000
And what does it advise here,

42
00:01:43.000 --> 00:01:45.007
the advice is here is exception handling.

43
00:01:45.007 --> 00:01:47.009
So advice is a term that is drawn

44
00:01:47.009 --> 00:01:51.004
from the Spring aspect oriented programming module

45
00:01:51.004 --> 00:01:53.008
and it essentially means a piece of code,

46
00:01:53.008 --> 00:01:55.000
a piece of functionality.

47
00:01:55.000 --> 00:01:55.009
In this case,

48
00:01:55.009 --> 00:01:58.000
the piece of functionality is exception handling

49
00:01:58.000 --> 00:02:00.008
that we want to apply for all the controllers.

50
00:02:00.008 --> 00:02:04.001
Hence, the annotation on line number five.

51
00:02:04.001 --> 00:02:06.007
Now, all we have to do next is

52
00:02:06.007 --> 00:02:08.001
we have to make sure we

53
00:02:08.001 --> 00:02:10.000
write a method for exception handling.

54
00:02:10.000 --> 00:02:11.001
So I'm not going to write it again,

55
00:02:11.001 --> 00:02:12.009
we've already written the LoginController.

56
00:02:12.009 --> 00:02:14.005
Let's just go there.

57
00:02:14.005 --> 00:02:16.007
Copy this.

58
00:02:16.007 --> 00:02:22.005
Come back to ApplicationExceptionHandler and paste it.

59
00:02:22.005 --> 00:02:23.003
But this time,

60
00:02:23.003 --> 00:02:24.005
I'm just going to the sys out

61
00:02:24.005 --> 00:02:26.006
so that we know which one we're called.

62
00:02:26.006 --> 00:02:29.007
So it says "in exception handler of login controller"

63
00:02:29.007 --> 00:02:33.002
so instead of that, I'm just going to say,

64
00:02:33.002 --> 00:02:36.005
"In global exception handler"

65
00:02:36.005 --> 00:02:38.007
so what we try to do here essentially is

66
00:02:38.007 --> 00:02:41.006
that we wrote a global exception handler,

67
00:02:41.006 --> 00:02:45.003
which is now going to apply to all controllers

68
00:02:45.003 --> 00:02:47.007
and to exhibit this demo for the moment,

69
00:02:47.007 --> 00:02:50.000
we are just going to make sure that we command this out

70
00:02:50.000 --> 00:02:51.003
from the login controller,

71
00:02:51.003 --> 00:02:54.000
because we have to make sure that

72
00:02:54.000 --> 00:02:56.009
it is picked up from the ApplicationExceptionHandler.

73
00:02:56.009 --> 00:02:57.008
So let's go to LoginController

74
00:02:57.008 --> 00:03:00.000
and comnand this piece of code.

75
00:03:00.000 --> 00:03:02.009
Lines 28-32.

76
00:03:02.009 --> 00:03:03.009
Let's command this out

77
00:03:03.009 --> 00:03:07.008
so that the global exception handler comes into play.

78
00:03:07.008 --> 00:03:08.009
So we have written a method,

79
00:03:08.009 --> 00:03:10.008
annotated the exception handler annotation

80
00:03:10.008 --> 00:03:13.008
to handle exceptions in the global exception handler,

81
00:03:13.008 --> 00:03:15.002
simulate the exception,

82
00:03:15.002 --> 00:03:16.002
build and run.

83
00:03:16.002 --> 00:03:18.003
So the exception has already been simulated for us

84
00:03:18.003 --> 00:03:20.004
in the LoginController on line 33.

85
00:03:20.004 --> 00:03:22.007
We are still throwing the application exception

86
00:03:22.007 --> 00:03:24.004
so in this case now,

87
00:03:24.004 --> 00:03:26.008
the application exception gets thrown

88
00:03:26.008 --> 00:03:30.001
and the responsibility of handling the exception

89
00:03:30.001 --> 00:03:33.004
will be transferred to the global exception handler.

90
00:03:33.004 --> 00:03:34.008
So let's quickly build this

91
00:03:34.008 --> 00:03:38.000
and see that for ourselves.

92
00:03:38.000 --> 00:03:40.006
So let's open the browser, again.

93
00:03:40.006 --> 00:03:44.001
Let's to home.

94
00:03:44.001 --> 00:03:45.007
Let's go to login.

95
00:03:45.007 --> 00:03:47.003
And again, we're going to enter something

96
00:03:47.003 --> 00:03:49.008
which does not exist.

97
00:03:49.008 --> 00:03:51.006
Yeah, so you still get the error page.

98
00:03:51.006 --> 00:03:54.003
Let's go back and see what happened in the IDE.

99
00:03:54.003 --> 00:03:55.003
You see?

100
00:03:55.003 --> 00:03:57.000
So now we get sys out from the

101
00:03:57.000 --> 00:03:59.005
global exception handler class that we have written.

102
00:03:59.005 --> 00:04:03.004
So that's how you can apply the same exception handler

103
00:04:03.004 --> 00:04:05.008
to all exceptions across the controllers

104
00:04:05.008 --> 00:04:08.003
of your Spring MVC application.

105
00:04:08.003 --> 00:04:09.008
Another thing to note here is,

106
00:04:09.008 --> 00:04:12.006
let's say we had not commanded this out.

107
00:04:12.006 --> 00:04:14.008
Let's say this was enabled.

108
00:04:14.008 --> 00:04:16.001
So now there are two exception handlers.

109
00:04:16.001 --> 00:04:18.003
One is in the specific controller

110
00:04:18.003 --> 00:04:22.002
and one which is in the global exception handler controller.

111
00:04:22.002 --> 00:04:24.005
Which one do you think is going to apply?

112
00:04:24.005 --> 00:04:27.008
Well, the one that is specific to the controller

113
00:04:27.008 --> 00:04:29.005
is going to come into picture.

114
00:04:29.005 --> 00:04:32.000
So even if you have this exception handler

115
00:04:32.000 --> 00:04:33.006
defined at both the places,

116
00:04:33.006 --> 00:04:36.008
this is the one that is definitely going to execute.

117
00:04:36.008 --> 00:04:37.008
It'll take into consideration

118
00:04:37.008 --> 00:04:41.006
the specific handler from the controller class.

119
00:04:41.006 --> 00:04:43.005
So this is how you can handle exceptions.

120
00:04:43.005 --> 00:04:44.009
Please understand we picked up the

121
00:04:44.009 --> 00:04:48.003
exception handler exception resolver implementation

122
00:04:48.003 --> 00:04:50.008
and then we have done the exception handling

123
00:04:50.008 --> 00:04:52.000
for our hplus application.

