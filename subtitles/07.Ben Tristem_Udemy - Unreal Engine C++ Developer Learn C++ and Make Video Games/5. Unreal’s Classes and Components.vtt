WEBVTT
1
00:00:04.050 --> 00:00:06.390
Hello everybody and welcome in this lecture.

2
00:00:06.390 --> 00:00:11.670
We're going to have a closer look at classes and also delve into components again.

3
00:00:11.790 --> 00:00:15.860
So we're going to be introducing the idea of inheritance.

4
00:00:15.900 --> 00:00:21.220
We're going to explore the class viewer to see the depth of unrealized class system.

5
00:00:21.240 --> 00:00:27.210
We're going to explore using the class viewer to see the depth of unrealized class system.

6
00:00:27.210 --> 00:00:32.520
It is quite bewildering quite how much there is in there and you'll see that in a few moments.

7
00:00:32.550 --> 00:00:41.250
So inheritance is for is a relationship so you might say a Ford is a car whereas a component might be

8
00:00:41.250 --> 00:00:42.540
a driver.

9
00:00:42.630 --> 00:00:44.990
So a car has a driver.

10
00:00:45.030 --> 00:00:49.550
Those are a very brief example or dive into more details now.

11
00:00:49.560 --> 00:00:51.930
So classes and inheritance.

12
00:00:51.930 --> 00:00:57.040
So a character in Unreal is a pawn and a pawn is an actor.

13
00:00:57.090 --> 00:01:03.930
And this inheritance all of the features that an actor has a pawn will have by default and anything

14
00:01:03.930 --> 00:01:10.050
that a pawn has by default a character will also inherits in this type of inheritance is incredibly

15
00:01:10.050 --> 00:01:16.290
powerful and a real life example of this would simply be that a dog is a mammal and a mammal is a type

16
00:01:16.290 --> 00:01:19.350
of animal or we could use the car analogy as well.

17
00:01:19.350 --> 00:01:26.650
Now on real makes extensive use of inheritance and of course with great power comes great responsibility.

18
00:01:26.670 --> 00:01:34.240
So it is a powerful tool if used properly however it can be inflexible and hard to refactor later on.

19
00:01:34.290 --> 00:01:38.190
So let's have another look at components before we dive into unreal.

20
00:01:38.270 --> 00:01:42.660
So components are great for sharing common behavioral features.

21
00:01:42.660 --> 00:01:47.910
Now sometimes they're necessary mesh collision audio.

22
00:01:47.910 --> 00:01:54.780
They can only be components on our actors in our scene and actors of course can have custom components.

23
00:01:54.780 --> 00:02:01.170
Remember in the bull cow game we had the bull cow cartridge that was a custom component that we had

24
00:02:01.170 --> 00:02:01.890
made.

25
00:02:02.040 --> 00:02:10.730
And now let's create a world position component our very first component made an unreal OK so we're

26
00:02:10.740 --> 00:02:12.060
over an unreal.

27
00:02:12.060 --> 00:02:18.030
And the first thing I want to do is go up to a window and then go down to developer tools and have a

28
00:02:18.030 --> 00:02:19.620
look at the class viewer.

29
00:02:19.830 --> 00:02:23.130
And this is the extent No not quite.

30
00:02:23.130 --> 00:02:27.270
This is part of the extent of unreal class system.

31
00:02:27.390 --> 00:02:31.620
If we actually go to filters at the top here we can turn off actors only.

32
00:02:31.620 --> 00:02:39.150
And we see quite well let's 2800 I'm not going to scroll down that so this is a really in-depth class

33
00:02:39.150 --> 00:02:45.930
system and all of that inheritance will work within this class system so let's have a look back at actors

34
00:02:45.990 --> 00:02:46.920
only.

35
00:02:46.920 --> 00:02:50.890
And a reminder that an actor is anything we can place in our scene.

36
00:02:50.940 --> 00:02:55.800
Let's have a look at actor and then we were talking about a porn before and wow if we hover over it

37
00:02:55.800 --> 00:02:58.700
gives us a lot of detail as well.

38
00:02:58.710 --> 00:03:01.320
Now if we scroll down here we can find porn.

39
00:03:01.320 --> 00:03:07.380
We can also search at the top here if we need more data and we can see the the hierarchy here we've

40
00:03:07.380 --> 00:03:10.020
got an actor than a porn and a character.

41
00:03:10.200 --> 00:03:16.500
And these will inherit everything above them in this hierarchy which is incredibly useful.

42
00:03:16.500 --> 00:03:22.220
Let's close down the class sphere for the moment and I'll leave you to explore that in your own time

43
00:03:22.230 --> 00:03:27.990
there's lots to look at and it helps give you an idea of how unreal is structured and what inherits

44
00:03:27.990 --> 00:03:31.090
what from each actor okay.

45
00:03:31.090 --> 00:03:37.410
The next thing we need to do is create a custom component now a component needs to exist on something

46
00:03:37.420 --> 00:03:40.060
it can't really exist in isolation.

47
00:03:40.060 --> 00:03:46.360
So let's go ahead and create a new object in our scene so let's go to our basic mesh objects that we

48
00:03:46.360 --> 00:03:49.000
can drag in and drag across a sphere.

49
00:03:49.000 --> 00:03:52.890
For instance we could also click on any of the other actors in our scene.

50
00:03:52.900 --> 00:03:57.820
But I think it's useful to have something that we can move around and check later on that when we're

51
00:03:57.820 --> 00:04:00.700
reporting its position we get that accurate.

52
00:04:01.480 --> 00:04:08.740
So let's go ahead and add a component and a new C++ component when we go ahead and do this.

53
00:04:08.770 --> 00:04:14.380
We will have a series of options and we want to create an active component is a reusable component that

54
00:04:14.380 --> 00:04:18.640
can be added to an actor says Go ahead click next.

55
00:04:18.640 --> 00:04:22.290
Now this is where we get a chance to give it a name.

56
00:04:22.300 --> 00:04:24.610
Now I'm going to call it world position

57
00:04:27.900 --> 00:04:30.700
and of course you could name it something else if you wanted to.

58
00:04:30.720 --> 00:04:36.960
Now unreal is naming convention with classes will actually show value at the beginning of World position

59
00:04:36.990 --> 00:04:39.150
but we don't have to add it here.

60
00:04:39.450 --> 00:04:42.240
Then we can go ahead and click Create class.

61
00:04:42.270 --> 00:04:47.100
Now what will be happening in the background here and it may take a few moments on your computer is

62
00:04:47.100 --> 00:04:53.640
a lot of boilerplate code is being set up and then what we should see opening up is our world position

63
00:04:53.640 --> 00:04:58.050
with a header file and our implementation file as well.

64
00:04:58.080 --> 00:04:59.730
Here we go and it's opening up.

65
00:04:59.760 --> 00:05:06.060
So we have the world position the H and the world position dot c p p and looking at this we can see

66
00:05:06.060 --> 00:05:07.040
some similarities.

67
00:05:07.050 --> 00:05:10.110
We've had a look at this type of thing before.

68
00:05:10.110 --> 00:05:12.710
Let's have a look at the head of file first.

69
00:05:12.760 --> 00:05:18.900
There's an awful lot here that we're going to glance over on the initial pass so don't worry about not

70
00:05:18.900 --> 00:05:21.510
taking everything in at this point.

71
00:05:21.510 --> 00:05:23.460
So first of all let's start from the very top.

72
00:05:23.460 --> 00:05:27.610
Fill out your copyright notice in the description page of the project settings.

73
00:05:27.630 --> 00:05:28.740
Well let's go ahead and do that.

74
00:05:28.740 --> 00:05:36.000
Now it won't affect what we've already done but it will affect anything in the future so if we go to

75
00:05:36.000 --> 00:05:41.040
the edit menu project settings and then we have.

76
00:05:41.040 --> 00:05:41.910
Would you look at that.

77
00:05:41.910 --> 00:05:43.800
Fill out your copyright notice.

78
00:05:43.800 --> 00:05:47.600
So this is where you can put in anything that you want to.

79
00:05:47.650 --> 00:05:48.890
I can go copyrights.

80
00:05:49.050 --> 00:05:53.880
Michael bridge is 2019 or whatever it happens to be.

81
00:05:53.880 --> 00:05:57.060
And of course this is important if you want to protect your work.

82
00:05:57.100 --> 00:06:01.490
And of course you can fill in some of these other details here as well if you wanted to.

83
00:06:01.500 --> 00:06:07.270
I'm just going to come out of the project settings and have a look back at our header file let's carry

84
00:06:07.270 --> 00:06:08.520
on down we've got our pride.

85
00:06:08.520 --> 00:06:12.800
My wants is not going to continually bring in these header files beneath.

86
00:06:12.970 --> 00:06:18.400
It's important here that this include world position not generated to H.

87
00:06:18.400 --> 00:06:25.120
This generated file must be at the bottom of this list of includes if it it's not you may have an error

88
00:06:25.480 --> 00:06:30.640
thrown out plates are wrong then going down we've got our class and there's a lot of boiler plate down

89
00:06:30.640 --> 00:06:35.380
here that we're not going to dive into at the moment but we can see here that our world position our

90
00:06:35.380 --> 00:06:41.560
new class that we've created is inheriting from the you at component then we have a look under here

91
00:06:41.590 --> 00:06:48.600
we've got our basic setup our constructor and then underneath we have a begin play function and a tick

92
00:06:48.640 --> 00:06:50.190
component function.

93
00:06:50.190 --> 00:06:56.300
Okay so let's go over and have a look at our implementation and let's make this a bit narrower as well.

94
00:06:56.320 --> 00:06:56.560
Okay.

95
00:06:57.070 --> 00:07:00.100
So first of all we include our header file.

96
00:07:00.130 --> 00:07:01.480
Absolutely fine standard stuff.

97
00:07:01.480 --> 00:07:08.110
Then we construct our world position and we've got this little bits in here we'll dive back to that

98
00:07:08.170 --> 00:07:11.170
in a moment and then we have big game play.

99
00:07:11.590 --> 00:07:12.580
So what's happening here.

100
00:07:12.610 --> 00:07:19.180
Well when the game is initialized when we press play whatever code is here will be run.

101
00:07:19.270 --> 00:07:25.240
But what's at this super begin play mean it means that everything further up the hierarchy has to be

102
00:07:25.240 --> 00:07:33.020
run first and then we can get to running the code we've put here on line 23.

103
00:07:33.030 --> 00:07:36.090
Now what about line 33 what's this tick.

104
00:07:36.100 --> 00:07:37.070
Components.

105
00:07:37.090 --> 00:07:41.630
Well if we have a look at the top here this component is set to be initialized when the game starts

106
00:07:41.640 --> 00:07:42.540
which is fine.

107
00:07:42.540 --> 00:07:43.500
That makes sense.

108
00:07:43.500 --> 00:07:45.720
And then to be ticked every frame.

109
00:07:45.720 --> 00:07:54.750
So any code that we put here on line 33 or indeed anything after Super tick component that will be run

110
00:07:54.930 --> 00:07:57.660
every frame of the game.

111
00:07:57.660 --> 00:08:03.390
And of course back up here where this is true if we change that's a false that it would mean that this

112
00:08:03.390 --> 00:08:10.680
instance of the component would not be updating every frame and would be great not only for optimization

113
00:08:10.710 --> 00:08:15.530
but also just not wasting resources in general Okay brilliant.

114
00:08:15.530 --> 00:08:22.550
So we now have a custom component it doesn't do much at the moment but we've got one and now I've got

115
00:08:22.580 --> 00:08:24.950
a small challenge for you.

116
00:08:25.200 --> 00:08:30.900
I would like you to go ahead and create another actor in your scene perhaps a different shape a cylinder

117
00:08:30.930 --> 00:08:40.120
or a cube and add to it your newly made component pulls over the year now and give that a go Okay everybody

118
00:08:40.120 --> 00:08:40.710
Welcome back.

119
00:08:40.720 --> 00:08:46.440
Let's go ahead now create another actor in our scene and add our new component to so it's okay.

120
00:08:46.450 --> 00:08:47.430
So pretty straightforward.

121
00:08:47.440 --> 00:08:51.820
This one I'm going to drag a cube over into the scene and drag it up here.

122
00:08:51.820 --> 00:08:58.120
And if we go to add component we can search for it or indeed we can scroll down to custom and there

123
00:08:58.120 --> 00:08:59.650
is a world position.

124
00:09:00.130 --> 00:09:00.840
Excellent.

125
00:09:00.850 --> 00:09:06.250
So now both of these have the world position component on them and we can see that just here in the

126
00:09:06.250 --> 00:09:08.080
details tab.

127
00:09:08.170 --> 00:09:09.040
Excellent.

128
00:09:09.040 --> 00:09:10.950
How did you guys get on.

129
00:09:10.990 --> 00:09:15.790
I'm looking forward to getting that well positioned actually doing something and I'll see you will in

130
00:09:15.790 --> 00:09:16.630
the next lecture.
