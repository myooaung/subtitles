1
00:00:04,300 --> 00:00:06,270
Hello everybody and welcome back.

2
00:00:06,280 --> 00:00:09,730
In this lecture we're going to dive straight into a challenge we've covered.

3
00:00:09,730 --> 00:00:16,390
If statements before and being able to evaluate one thing against another so I think we've got all the

4
00:00:16,390 --> 00:00:19,900
core skills we need in order to complete this challenge.

5
00:00:19,900 --> 00:00:25,060
So I'd like you to write all of the code that you do in the on input function.

6
00:00:25,060 --> 00:00:31,030
Now this will be changing around later on especially as we discuss some of the issues that writing everything

7
00:00:31,030 --> 00:00:32,530
in this function will cause.

8
00:00:32,920 --> 00:00:38,610
However it will work as far as we're concerned for what we want to achieve.

9
00:00:38,710 --> 00:00:41,570
If you do have some introductory things you want to change.

10
00:00:41,620 --> 00:00:44,340
By all means leave in the game start function.

11
00:00:44,350 --> 00:00:50,290
Now after you've written your code and run it successfully What do you think about having all of our

12
00:00:50,290 --> 00:00:51,150
code here.

13
00:00:51,160 --> 00:00:53,650
Can you foresee any issues.

14
00:00:53,770 --> 00:00:55,200
Think about it carefully.

15
00:00:55,210 --> 00:00:59,200
One of the issue you may notice is that it doesn't follow our flowchart.

16
00:00:59,200 --> 00:01:04,240
We need to do something slightly different we need to put some of the code in different places in order

17
00:01:04,240 --> 00:01:07,440
for it to run the same as the flowchart we've created.

18
00:01:07,450 --> 00:01:11,830
So that's one of the problems that we'll need to fix and it will raise some of the others as we actually

19
00:01:11,830 --> 00:01:14,940
go through the code once we've got it in front of us.

20
00:01:14,980 --> 00:01:21,760
Now write code that evaluates whether the input is equal to the hidden word.

21
00:01:21,760 --> 00:01:26,770
And in order to do that I suggest you use an if this is true.

22
00:01:26,830 --> 00:01:33,370
Do this else do that in order to check and evaluate the inputs.

23
00:01:33,400 --> 00:01:38,350
So go ahead pause a video now if this takes 10 15 minutes or so to run through.

24
00:01:38,350 --> 00:01:40,480
Especially if you're new to it don't worry.

25
00:01:40,480 --> 00:01:41,950
That's perfectly normal.

26
00:01:42,040 --> 00:01:50,170
And then we'll run through the code itself when UNbacked supporters video now and give us a go okay.

27
00:01:50,180 --> 00:01:51,670
Everybody welcome back.

28
00:01:51,680 --> 00:01:56,250
Let's go ahead now and write code that evaluates the inputs and the hidden word.

29
00:01:57,050 --> 00:02:00,290
Okay so this is our code as it stands at the moment.

30
00:02:00,290 --> 00:02:05,960
And I will run through some of the issues that we may come across as we actually start typing the code

31
00:02:05,990 --> 00:02:06,710
as well.

32
00:02:06,740 --> 00:02:11,440
So we're working with in the on input function that's fine.

33
00:02:11,450 --> 00:02:14,440
Remember the code runs as it's seen.

34
00:02:14,450 --> 00:02:18,250
So clearing the screen is the first thing we want to do.

35
00:02:18,250 --> 00:02:20,620
If we put all our code above that.

36
00:02:20,840 --> 00:02:26,390
It may be on there for a split second or a nanosecond but we won't see what we've types of clear screens

37
00:02:26,390 --> 00:02:33,660
going to have to be at the top then we're going to have to declare and initialize the hidden word.

38
00:02:33,680 --> 00:02:34,790
That's fine.

39
00:02:34,790 --> 00:02:38,890
The next thing we need to do is perhaps give.

40
00:02:39,230 --> 00:02:46,120
Well if we give instructions at this point what happens and we think about sets and we give instructions.

41
00:02:46,150 --> 00:02:49,990
It's too late because this is after the users press enter.

42
00:02:49,990 --> 00:02:57,280
So if we asked the question please guess the four letter word and we put it down here.

43
00:02:57,370 --> 00:02:58,410
We would have a problem.

44
00:02:58,420 --> 00:03:00,600
It would appear straight away.

45
00:03:00,700 --> 00:03:03,970
So I'm immediately going to put that at the very top here.

46
00:03:03,970 --> 00:03:10,650
So this is one final instruction where begin play happens Press any key to continue.

47
00:03:10,650 --> 00:03:16,460
Well actually we're going to guess the four letter word we'll hard code this in for the moment.

48
00:03:16,530 --> 00:03:19,980
So we guess the four letter word.

49
00:03:19,980 --> 00:03:28,080
Now the problem with this is that we've hard coded the number of characters it is if you want to change

50
00:03:28,080 --> 00:03:33,840
that we've got to remember to go back to that point in our code and change that number so I'm going

51
00:03:33,840 --> 00:03:40,230
to make a comment here and I would suggest that you make comments as you go along as well that we've

52
00:03:40,230 --> 00:03:42,270
got ourselves a magic number.

53
00:03:42,900 --> 00:03:48,420
It's going to be a pain in the backside to remember remove won't do it.

54
00:03:48,420 --> 00:03:51,720
At the moment though sit down here we don't need this print line.

55
00:03:51,720 --> 00:03:54,680
We don't need our code parroting back to us.

56
00:03:54,810 --> 00:03:56,640
So we need an if statement.

57
00:03:56,760 --> 00:04:00,910
And fortunately if I just press tap it asks for the condition.

58
00:04:01,020 --> 00:04:04,710
So we're really evaluating the inputs and the hidden word.

59
00:04:04,710 --> 00:04:12,720
So if the input itself is exactly the same as the hidden word and we can do this type of evaluation

60
00:04:12,720 --> 00:04:18,440
because they're both strings so we can assess them like that's the next thing we need to do.

61
00:04:18,450 --> 00:04:20,940
I can press tab to go down to our code block.

62
00:04:21,150 --> 00:04:24,780
So if that is true we've won the game.

63
00:04:24,780 --> 00:04:31,200
So at this point in time I can print out a line and of course I've still got it stored up there and

64
00:04:31,380 --> 00:04:32,170
typing.

65
00:04:32,190 --> 00:04:33,010
You have one.

66
00:04:33,240 --> 00:04:37,070
It's as simple as that exclamation mark.

67
00:04:37,080 --> 00:04:40,980
Now I'm going to copy that again because I'm going to use that with my else.

68
00:04:41,160 --> 00:04:42,800
So else press tab.

69
00:04:42,810 --> 00:04:44,280
We've got the code there.

70
00:04:44,310 --> 00:04:48,450
We're going to print out and change the one for a lost.

71
00:04:48,450 --> 00:04:55,320
So let's run through our code and what we expect it to do and perhaps highlight a few more issues as

72
00:04:55,320 --> 00:04:56,070
we go through.

73
00:04:57,240 --> 00:05:05,430
So first of all it would be great at the moment if the hidden word was declared at begin play.

74
00:05:05,430 --> 00:05:12,680
But the problem with it being declared and initialized in begin play is that it has scope only with

75
00:05:12,680 --> 00:05:14,340
him begin play.

76
00:05:14,340 --> 00:05:16,840
So on impact has no idea what hidden word is.

77
00:05:16,830 --> 00:05:23,430
So we need to elevate it up and we'll talk about elevating it up and not now making it global but making

78
00:05:23,430 --> 00:05:29,800
it what's called an instance variable also referred to as a member variable in an upcoming lecture.

79
00:05:29,850 --> 00:05:34,680
But for the moment for this one shot it's absolutely fine.

80
00:05:34,680 --> 00:05:41,490
The other issue with this is if we had more than one life the hidden word is being set every time it's

81
00:05:41,490 --> 00:05:42,800
asking for input.

82
00:05:42,930 --> 00:05:48,090
And that's another reason for the hidden word being outside of this function.

83
00:05:48,090 --> 00:05:49,350
So let's make a comment that

84
00:05:54,040 --> 00:05:58,360
and we'll talk about where we're moving it to later on.

85
00:05:58,360 --> 00:06:05,980
So if the inputs is exactly the same as the hidden word then you've won if it isn't.

86
00:06:06,060 --> 00:06:09,070
You have lost let's see if this works.

87
00:06:09,080 --> 00:06:16,440
So we're gonna save our work and then open up bull cows once it's open remember to press compile.

88
00:06:16,440 --> 00:06:19,470
I know so many of you because I used to do it as well.

89
00:06:19,470 --> 00:06:25,710
When you save your code you forget to hit compile and then wonder why it doesn't work says compile complete

90
00:06:25,740 --> 00:06:31,650
remember that if it does say compile complete in you play and it still does the previous thing.

91
00:06:31,770 --> 00:06:36,990
Then you may have to press compile again I've seen that a couple of times but I know it's worked because

92
00:06:36,990 --> 00:06:40,800
I've only just added guess the four letter words I know that's there.

93
00:06:40,800 --> 00:06:42,360
Perhaps too many exclamation marks.

94
00:06:42,390 --> 00:06:44,000
So let's guess how.

95
00:06:44,000 --> 00:06:47,160
Well simply typing Kake you have one.

96
00:06:47,280 --> 00:06:53,880
If we type in anything else it will say you have lost including if we type in nothing because it's on

97
00:06:53,970 --> 00:06:54,990
inputs.

98
00:06:55,140 --> 00:07:02,210
So that's another question that we're evaluating inputs just based upon when someone presses return.

99
00:07:02,250 --> 00:07:06,540
So unless it's the right one then we won't have one.

100
00:07:06,540 --> 00:07:06,960
Perfect.

101
00:07:06,990 --> 00:07:13,290
So we've got everything working that it's not ideal at the moment because we need to rearrange our code

102
00:07:13,290 --> 00:07:15,320
so it works a bit more logically.

103
00:07:15,360 --> 00:07:21,360
It certainly isn't following our flow chart but we have let's just have a quick look at that before

104
00:07:21,360 --> 00:07:23,440
we finish up okay.

105
00:07:23,450 --> 00:07:27,880
So according to this flow chart we were to print a welcome message.

106
00:07:27,980 --> 00:07:32,420
Then we set our hidden word and then we ask for a guess.

107
00:07:32,420 --> 00:07:36,710
Well at the moment we're asking for a guess before we set the hidden word.

108
00:07:36,710 --> 00:07:43,920
Now that wouldn't be ideal because later on we'll be setting the hidden word and assessing its length.

109
00:07:44,660 --> 00:07:49,210
And when we assess its length we won't be able to ask for a guess of the x.

110
00:07:49,220 --> 00:07:53,240
No word because we won't have had the information yet.

111
00:07:53,240 --> 00:07:55,720
Anyway we're now on this bit here really.

112
00:07:55,730 --> 00:07:57,460
We're waiting for inputs.

113
00:07:57,560 --> 00:08:01,310
So both a hidden word and asking well asking for a guess is above.

114
00:08:01,310 --> 00:08:02,120
That's fine.

115
00:08:02,120 --> 00:08:07,100
The hidden word is being coded beneath here which makes no sense in the long run because it's being

116
00:08:07,100 --> 00:08:15,340
reset every time we run this code which means if we had multiple guesses the hidden word might be changing

117
00:08:15,430 --> 00:08:22,240
every single time and then at the bottom we have our if statement is it correct yes or no.

118
00:08:22,250 --> 00:08:23,480
And that's pretty straightforward.

119
00:08:23,480 --> 00:08:25,000
So that it's absolutely fine.

120
00:08:25,130 --> 00:08:28,310
But there's something in the middle here that we need to rearrange.

121
00:08:28,340 --> 00:08:34,460
And it basically hinges about the hidden word and how we store that and how we access that.

122
00:08:34,490 --> 00:08:39,140
So remember to share your thoughts and concerns what issues could you foresee.

123
00:08:39,140 --> 00:08:45,800
It's always important to evaluate your own code assess it against your flow chart that you've made and

124
00:08:45,800 --> 00:08:52,130
think logically through your code and try and catch any potential issues nice and early like we're starting

125
00:08:52,130 --> 00:08:56,950
to do now and we'll get to fixing these things in the next lecture.
