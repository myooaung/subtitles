1
00:00:04,430 --> 00:00:09,260
Hello and welcome in this lecture, we're going to be getting a line of sight to our player from the

2
00:00:09,260 --> 00:00:16,690
enemy so that we are able as the player to hide behind obstacles and not have that enemy followers not

3
00:00:16,690 --> 00:00:17,060
have it.

4
00:00:17,090 --> 00:00:22,580
Keep aiming at us until we pop back out and are visible to them.

5
00:00:22,580 --> 00:00:25,730
So you can see here of hidden behind a corner and he can't find me.

6
00:00:26,030 --> 00:00:29,210
Let's dive in and see how this can be done using unrolls tools.

7
00:00:30,610 --> 00:00:36,550
So it's not ideal that this enemy A.I. concurrently follower's round corners, no matter how far we

8
00:00:36,550 --> 00:00:40,700
go, how no matter how much we hide behind pillars, it's still going to find us.

9
00:00:40,700 --> 00:00:43,270
It's still going to come and keep aiming at us.

10
00:00:43,600 --> 00:00:44,520
We want to correct that.

11
00:00:44,980 --> 00:00:48,580
And we're going to do this by checking the line of sight from the enemy to the player.

12
00:00:48,790 --> 00:00:51,460
Now, as many things here in Unreal.

13
00:00:51,790 --> 00:00:54,440
There is already a function for this in the controller.

14
00:00:54,590 --> 00:00:55,040
Dot h.

15
00:00:55,150 --> 00:00:57,100
Called line of sight.

16
00:00:57,490 --> 00:01:01,300
And if you go in search of that, you can find that there's a function that returns a boolean.

17
00:01:01,630 --> 00:01:03,670
So telling us whether or not we have line of sight.

18
00:01:03,730 --> 00:01:08,370
And then it takes the actor that we should try to check for line of sight to.

19
00:01:08,730 --> 00:01:14,650
And it automatically takes into account things like the eye position of the pawn in question.

20
00:01:15,100 --> 00:01:17,640
All this sort stuff is already coded into one real's recall.

21
00:01:18,070 --> 00:01:20,290
So it should be fairly straightforward.

22
00:01:20,320 --> 00:01:26,590
If we go over to our A.I. controller, DOT, CBP, what we basically want to do is change things up

23
00:01:26,650 --> 00:01:32,410
in tech so that we, first of all do an F line of sight.

24
00:01:33,500 --> 00:01:42,830
Then what we want to do if we've got line of sight, is we want to move to and we want to set focus.

25
00:01:43,490 --> 00:01:48,930
However, if we do not so in the ELT's, what we want to do is clear focus.

26
00:01:49,010 --> 00:01:57,440
Remember, we saw that function before and we want to do the let's see, the stop movement, basically.

27
00:01:58,760 --> 00:02:01,280
And that's another function that exists that we haven't seen yet.

28
00:02:01,820 --> 00:02:08,210
So what I'm gonna do here is I can challenge you to implement the whole of this yourself if you feel

29
00:02:08,210 --> 00:02:08,810
confident.

30
00:02:09,320 --> 00:02:13,640
Otherwise, this ELT's is the more complex bit that we haven't seen before.

31
00:02:14,060 --> 00:02:16,250
Because the other two we've already done to move to acto.

32
00:02:16,250 --> 00:02:17,560
We've already done our set focus.

33
00:02:17,600 --> 00:02:18,500
We've done that before.

34
00:02:18,510 --> 00:02:23,450
And there's just this if line of sight, which we have just seen, is pretty straightforward.

35
00:02:23,480 --> 00:02:24,320
You could implement that.

36
00:02:24,590 --> 00:02:25,570
But how about this ELT's?

37
00:02:25,640 --> 00:02:29,060
Let's give a go at implementing the just the ELT's clause.

38
00:02:29,090 --> 00:02:32,930
It's not going to comp. because you obviously need an if before and else.

39
00:02:33,320 --> 00:02:35,630
But let's go and just write out the ELT's clause.

40
00:02:36,320 --> 00:02:41,990
So the first thing clearing focus, basically, we're saying stop trying to track the player because

41
00:02:41,990 --> 00:02:43,070
you can't see the player.

42
00:02:43,130 --> 00:02:46,860
You shouldn't be giving off the impression that you know where the player is, even though they are

43
00:02:46,860 --> 00:02:50,870
high off with the can because it can access the player's location and so on and so forth.

44
00:02:51,170 --> 00:02:56,000
But we need to give the illusion that the Alaya only knows as much as it can see.

45
00:02:56,600 --> 00:02:59,570
So what we're going to do is we're going to call to clear focus.

46
00:02:59,660 --> 00:03:04,880
And if we go over to the controller Deitsch and have a look at clear focus, you can see that it takes

47
00:03:04,910 --> 00:03:12,590
in the priority that we need to clear now a reminder that these priorities are basically different levels

48
00:03:12,590 --> 00:03:13,490
of focus.

49
00:03:13,790 --> 00:03:20,660
So we have typically default movements and gameplay gameplay being the highest priority thing.

50
00:03:21,050 --> 00:03:24,260
And what we set by default is gameplay priority.

51
00:03:24,290 --> 00:03:29,960
So what we want to do is clear the gameplay priority, which means that if we have focus based on movement,

52
00:03:29,960 --> 00:03:38,000
for example, if our A.I. then wants to move back to its guard point, then that focus will not be cleared

53
00:03:38,060 --> 00:03:40,880
and it will be off moving back to its guarding point.

54
00:03:41,570 --> 00:03:43,430
So that's the way focus works.

55
00:03:43,460 --> 00:03:45,650
That's the way the priority system works there.

56
00:03:45,650 --> 00:03:51,220
So what we just want to do is copy this EAA focused priority Kolon Keylong gameplay.

57
00:03:51,740 --> 00:03:55,250
And that is the priority that we're wanting to clear on this line here.

58
00:03:55,700 --> 00:03:58,030
And then the other thing is to stop the movement.

59
00:03:58,040 --> 00:04:02,930
So we want to go over to the ALA controlled at H again and have a look at the stop movement.

60
00:04:03,410 --> 00:04:09,500
And here, sure enough, there is a simple no arguments function called stop movement, which allows

61
00:04:09,500 --> 00:04:11,510
us to do just that.

62
00:04:12,080 --> 00:04:12,590
So they go.

63
00:04:12,950 --> 00:04:15,840
That is basically the ELT's statement written.

64
00:04:16,160 --> 00:04:23,120
So now it just reminds a remains a challenge for you to implement the F portion with the F line of sight

65
00:04:23,150 --> 00:04:25,040
and the move to and set focus.

66
00:04:25,400 --> 00:04:31,220
And you basically want to remove this code here and it's going to comment it out and sort out where

67
00:04:31,220 --> 00:04:32,990
you want that to be.

68
00:04:33,020 --> 00:04:34,400
So pause video, no challenge.

69
00:04:34,400 --> 00:04:34,940
Slide here.

70
00:04:35,330 --> 00:04:38,000
Just go and implement these three lines for yourself.

71
00:04:39,280 --> 00:04:40,270
Okay, welcome back.

72
00:04:40,300 --> 00:04:42,080
So let's start with that.

73
00:04:42,220 --> 00:04:51,640
If so, if open brackets, line of sight to and then we want to do a line of sight to the actor, which

74
00:04:51,640 --> 00:04:54,370
is the play a porn that we want to get access to.

75
00:04:54,370 --> 00:05:00,900
So let's just uncommented that play a porn here and it's mucked up an indentation a little.

76
00:05:00,910 --> 00:05:01,960
Let's fix that.

77
00:05:02,710 --> 00:05:04,870
And then we want our brackets.

78
00:05:04,990 --> 00:05:10,270
Curly brackets here and we want to do a move to actor.

79
00:05:10,330 --> 00:05:14,260
Well, fact we can just copy and uncommented and move to actor here.

80
00:05:15,430 --> 00:05:18,400
And we want to uncommented it.

81
00:05:18,430 --> 00:05:18,670
Yes.

82
00:05:18,700 --> 00:05:19,090
There we go.

83
00:05:19,180 --> 00:05:22,330
And the focus, we can move that as well.

84
00:05:22,690 --> 00:05:23,420
Now the focus.

85
00:05:23,440 --> 00:05:26,050
It doesn't matter whether you do it before or after.

86
00:05:26,110 --> 00:05:30,460
Move to actor because we'll move to actor does set a focus.

87
00:05:30,820 --> 00:05:34,640
It sets a lower priority, the movement focus rather than the game play focus.

88
00:05:34,640 --> 00:05:38,740
So it doesn't matter which order we do those two operations in.

89
00:05:39,220 --> 00:05:44,020
And then finally, we can remove this commented out line where we are getting the play a pawn in Biggin

90
00:05:44,020 --> 00:05:48,190
play because we no longer need it and everything's in tech now.

91
00:05:48,220 --> 00:05:49,300
So we could remove begin play.

92
00:05:49,310 --> 00:05:53,860
I'm going to leave it around in case we need it later on just to save me the hassle of adding it back

93
00:05:53,860 --> 00:05:54,130
in.

94
00:05:54,280 --> 00:05:58,250
Let's head over to unravel and compile and when that's done, let's play.

95
00:05:58,270 --> 00:06:03,340
So let's see if we can hide from this act or I'm going to try and move around the corners reasonably

96
00:06:03,340 --> 00:06:04,180
quickly.

97
00:06:04,810 --> 00:06:07,930
This is a little bit tricky because they can move just as fast as you can.

98
00:06:07,960 --> 00:06:10,390
But if you get round a corner like that, they go.

99
00:06:10,420 --> 00:06:11,560
He's lost sight of me.

100
00:06:11,590 --> 00:06:13,120
He's stopped trying to chase me.

101
00:06:13,540 --> 00:06:16,510
I can just peek around the corner and see that as I'm moving.

102
00:06:16,540 --> 00:06:19,930
He's not changing his aiming because we've cleared the focus.

103
00:06:20,320 --> 00:06:22,150
Can peek around the corner from the other side.

104
00:06:22,750 --> 00:06:24,520
See Pache Rand over here.

105
00:06:24,670 --> 00:06:25,070
They go.

106
00:06:25,090 --> 00:06:27,640
You can see he's still aiming at the last location where I was.

107
00:06:27,930 --> 00:06:34,030
But if I should pop up in to sight, then he carries on aiming and moves within the acceptance radius.

108
00:06:34,540 --> 00:06:38,890
Talking of which, I want that acceptance radius to be configurable by the designer.

109
00:06:38,920 --> 00:06:40,900
So let's move it into where you property.

110
00:06:41,360 --> 00:06:45,160
I'm going to create a private section here with a new property.

111
00:06:46,450 --> 00:06:56,290
Which is gonna be an edit anyway, and we want that to be a float called acceptance radius and give

112
00:06:56,290 --> 00:06:58,400
it the default value of 200.

113
00:06:59,350 --> 00:07:04,350
And then this acceptance radius, we can go ahead and use in our move to act.

114
00:07:04,780 --> 00:07:08,890
And if you compile, that's gonna give you exactly the same behavior, except now that you can change

115
00:07:08,890 --> 00:07:11,710
that in the way I control a blueprint.

116
00:07:12,190 --> 00:07:13,300
So that's it for this lecture.

117
00:07:13,330 --> 00:07:18,880
We have discovered that line of sight function, allowing us to check whether the A.I. can or cannot

118
00:07:18,880 --> 00:07:25,180
see something which implements this basic hiding functionality so the A.I. doesn't follow us when it

119
00:07:25,180 --> 00:07:25,990
can't see us.

120
00:07:26,470 --> 00:07:26,840
Next lecture.

121
00:07:26,860 --> 00:07:33,070
We're gonna take things up a notch from these custom programmed A.I. and use behavior.

122
00:07:33,070 --> 00:07:38,830
Trees are really powerful tool in unreal to make our eyes adjust that much cooler.
