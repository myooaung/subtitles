WEBVTT
1
00:00:04.300 --> 00:00:06.370
Hello everybody and welcome back.

2
00:00:06.370 --> 00:00:10.270
Welcome to using the drawer debug line.

3
00:00:10.330 --> 00:00:14.380
So we're going to learn in this lecture how to add some vectors together.

4
00:00:14.440 --> 00:00:17.370
We're going to calculate our line trace and point.

5
00:00:17.620 --> 00:00:23.440
So we're going to project a line from our character out into the world and that will be it will have

6
00:00:23.440 --> 00:00:26.320
a certain length that'll be how far we can reach.

7
00:00:26.410 --> 00:00:31.680
We'll be using debug functions for visualization and unreal so we can actually see what's going on.

8
00:00:31.810 --> 00:00:38.110
And we will be specifically using draw debug line to visualize the vectors themselves and to give you

9
00:00:38.110 --> 00:00:39.340
an idea of what we're going for.

10
00:00:40.350 --> 00:00:40.680
Okay.

11
00:00:40.690 --> 00:00:44.790
So over in real if I go ahead and press play you'll notice there's a red square in the scene okay.

12
00:00:44.800 --> 00:00:48.190
So let's move this forward points it's at the cone.

13
00:00:48.190 --> 00:00:52.270
Now if we ejects ourselves and look at what's going on.

14
00:00:52.270 --> 00:00:52.770
Look at that.

15
00:00:52.780 --> 00:00:56.530
There's this red line coming out of our body.

16
00:00:56.530 --> 00:00:59.690
The thing that we possess in the scene also.

17
00:00:59.830 --> 00:01:05.140
So this red line here basically visualizes our grabber how far we can reach.

18
00:01:05.230 --> 00:01:05.500
Okay.

19
00:01:05.530 --> 00:01:10.820
So in order to draw our line trace in the world we're going to need to know the star points of it.

20
00:01:10.900 --> 00:01:12.940
And of course the end point.

21
00:01:12.940 --> 00:01:18.640
So we're going to need to know a little something about vectors so upcoming is can should be a short

22
00:01:18.850 --> 00:01:21.480
primer on adding them together.

23
00:01:21.580 --> 00:01:28.060
So if we have some vector A represented by an arrow like this this would be like our player viewpoint

24
00:01:28.060 --> 00:01:34.630
location and we add to it some other vector like the laser beam or the trace LINE COMING OUT OF OUR

25
00:01:34.630 --> 00:01:39.580
EYES THEN A plus B is that vector there.

26
00:01:39.730 --> 00:01:42.510
You simply add the tale of one to the head of the other.

27
00:01:42.520 --> 00:01:48.240
So the results of those overall two journeys is the a possibly the green line at the bottom.

28
00:01:48.280 --> 00:01:48.550
Okay.

29
00:01:48.550 --> 00:01:52.810
So how does that apply to what we're doing in our real.

30
00:01:52.840 --> 00:01:56.980
So we are wanting to calculate line trace and so what do we have.

31
00:01:57.010 --> 00:02:02.620
Well we have the player viewpoint location and those are just three numbers that tell us where the player

32
00:02:02.650 --> 00:02:07.760
is in the world relative to the origin of the world 0 0 0.

33
00:02:07.780 --> 00:02:13.050
So we're already dealing with this play of viewpoint location it's what we're currently logging out.

34
00:02:13.060 --> 00:02:17.470
The other thing that we've also got hold of is the player viewpoint rotation.

35
00:02:17.470 --> 00:02:23.200
However we're going to have to do something different with it but that is stored as a rotation at the

36
00:02:23.200 --> 00:02:24.790
moment an F rotator.

37
00:02:24.790 --> 00:02:31.420
But in order to add it to our first vector we're going to have to convert it to a vector using dot vector

38
00:02:31.900 --> 00:02:36.790
and that will convert our f rotator into an F vector.

39
00:02:36.790 --> 00:02:40.730
And then of course we can store it in something like line trace direction.

40
00:02:40.750 --> 00:02:47.200
Now the only issue that we have with this is the line trace direction essentially becomes a unit vector

41
00:02:47.740 --> 00:02:54.480
which is just 1 in its length which is absolutely fine for telling us the direction but we're going

42
00:02:54.480 --> 00:02:56.920
to have to multiply it by the reach.

43
00:02:56.920 --> 00:03:00.180
How far do we want our player to be able to reach from their body.

44
00:03:00.280 --> 00:03:03.550
Essentially how long other players arms.

45
00:03:03.550 --> 00:03:06.670
So the question is what is the line trace.

46
00:03:06.670 --> 00:03:09.280
And of course referring to the previous line.

47
00:03:09.310 --> 00:03:11.800
That's pretty straightforward to work out.

48
00:03:11.900 --> 00:03:17.980
So before we go ahead and give you that challenge let's set you up so you're able to test whether you've

49
00:03:17.980 --> 00:03:19.990
got it right in the first place.

50
00:03:21.190 --> 00:03:22.090
Hello everybody.

51
00:03:22.090 --> 00:03:29.070
Now before we get started with this lecture what I'd like to do is go to my default pawn blueprint.

52
00:03:29.070 --> 00:03:30.470
I'm gonna double click it.

53
00:03:30.520 --> 00:03:37.480
I think if we go to the viewport and have a look at it that point 5.5 point five on the scale of our

54
00:03:37.720 --> 00:03:39.940
default point that's just a bit big.

55
00:03:39.940 --> 00:03:44.260
So I'm gonna reduce that down to point two now so point to point to point.

56
00:03:44.290 --> 00:03:51.340
So remember you can tab between those that I'm going to compile on the top left and save it and then

57
00:03:51.340 --> 00:03:54.590
we can use it in our project okay.

58
00:03:54.620 --> 00:04:00.050
So what we want here is when we press play and inject ourselves we want to be able to look back at Star

59
00:04:00.050 --> 00:04:06.710
player and see something coming out of this default pawn here indicating which direction we're facing

60
00:04:06.950 --> 00:04:08.940
and how far our reaches.

61
00:04:09.610 --> 00:04:09.850
Okay.

62
00:04:09.860 --> 00:04:11.780
So let's go over to obvious code.

63
00:04:11.840 --> 00:04:15.250
So at the moment we are currently logging out.

64
00:04:15.260 --> 00:04:16.510
That's this area here.

65
00:04:16.700 --> 00:04:22.130
Oh and incidentally once we're here I was just thinking that these parentheses that I've got at the

66
00:04:22.130 --> 00:04:28.360
very end it'd be better if they lined up like so much like our curly braces do I think that would be

67
00:04:28.360 --> 00:04:30.640
a better coding style to go with there.

68
00:04:30.950 --> 00:04:37.820
And also we'll come back up to the includes in a bit and make them alphabetical which is actually the

69
00:04:38.150 --> 00:04:40.970
coding standard we should be adhering to.

70
00:04:41.120 --> 00:04:45.410
So that will be sorted because we're going to need another hash include in a bit.

71
00:04:45.410 --> 00:04:47.950
We're going to have to go and find out what it is.

72
00:04:47.960 --> 00:04:53.540
So for the moment let's stop logging out so that I'm going to comment that block outs I may remove it

73
00:04:53.570 --> 00:05:01.670
but I'll leave it in there for the moment and what we want to do is draw a line from player showing

74
00:05:01.670 --> 00:05:03.330
the reach.

75
00:05:03.350 --> 00:05:03.590
Okay.

76
00:05:03.620 --> 00:05:10.010
So I'm going to make a temporary line at the moment and of course you can finalize this all in your

77
00:05:10.010 --> 00:05:10.570
challenge.

78
00:05:10.880 --> 00:05:12.550
So we're gonna need an F vector.

79
00:05:12.560 --> 00:05:15.470
So let's go ahead and put that in first of all.

80
00:05:15.620 --> 00:05:20.450
And this will be our line trace and so line trace.

81
00:05:20.450 --> 00:05:21.730
And that makes sense.

82
00:05:21.830 --> 00:05:27.230
This is going to be our temporary end point whilst we're testing this all out and this is going to equal

83
00:05:27.230 --> 00:05:29.990
the players viewpoint location.

84
00:05:30.110 --> 00:05:33.170
That's the first part of that triangle if you remember.

85
00:05:33.170 --> 00:05:36.910
And then we're going to plus and we're going to add this is are a temporary one here.

86
00:05:36.990 --> 00:05:41.150
Another effector and we're gonna have to give it some values here.

87
00:05:41.150 --> 00:05:43.430
And in this case I'm going to just make it go straight up.

88
00:05:43.430 --> 00:05:45.060
So it's going to be okay.

89
00:05:45.080 --> 00:05:52.730
So let's give you this some values to zero point f comma zero point f comma zero point oh no we don't

90
00:05:52.730 --> 00:05:54.370
want zero point F on all of them.

91
00:05:54.410 --> 00:06:00.950
So we want this let's say stick straight up by an entire metre so one hundred point F because these

92
00:06:00.950 --> 00:06:03.110
values are gonna be in centimeters.

93
00:06:03.110 --> 00:06:05.020
Of course we need to finish that's off.

94
00:06:05.150 --> 00:06:09.630
So we have this idea that that's going to be the end point.

95
00:06:09.710 --> 00:06:14.320
But of course now we need to make sure that we can visualize it within unreal itself.

96
00:06:15.130 --> 00:06:15.410
Okay.

97
00:06:15.440 --> 00:06:20.200
So in order to draw the line we're going to have to call the method draw debug line.

98
00:06:20.210 --> 00:06:24.990
Now if you start typing that in you'll notice it doesn't actually appear.

99
00:06:25.040 --> 00:06:29.810
So we need to go and look at the unreal documentation and find out what we need in order to do that.

100
00:06:30.610 --> 00:06:30.920
Okay.

101
00:06:30.950 --> 00:06:36.350
So when go into the unreal documentations and looking at draw debug line we see down here that we're

102
00:06:36.350 --> 00:06:40.400
going to have to do and include hash include draw debug.

103
00:06:40.400 --> 00:06:42.920
Help us also look down here.

104
00:06:43.100 --> 00:06:47.600
There's quite a bit that this is going to need in order to work and we'll go through that.

105
00:06:47.600 --> 00:06:53.880
Bit by bit in a moment but first of all let's go and include this draw debug help us.

106
00:06:53.900 --> 00:06:55.910
Okay so let's go to the top.

107
00:06:56.060 --> 00:06:58.770
Hash include draw debug help.

108
00:06:58.850 --> 00:07:01.200
So that's a D G E.

109
00:07:01.220 --> 00:07:03.830
Okay let's sort this out and reorder it.

110
00:07:03.860 --> 00:07:08.150
Now you don't have to cut and paste remember you can use ult and just the up and down arrow to move

111
00:07:08.150 --> 00:07:11.280
those around and I'll save my file as I go.

112
00:07:11.470 --> 00:07:11.720
Okay.

113
00:07:11.730 --> 00:07:13.640
So that looks good at the moment.

114
00:07:13.640 --> 00:07:15.400
Let's scroll down on that further.

115
00:07:15.390 --> 00:07:20.650
So now if we start typing draw look at that draw debug.

116
00:07:20.680 --> 00:07:27.470
There's lots of options here and we want to draw a debug line as we're going through here.

117
00:07:27.500 --> 00:07:30.460
Do take note of the other options that are here.

118
00:07:30.590 --> 00:07:36.890
You can already see that perhaps drawing a at another is there a draw debug circle yes you can look

119
00:07:36.890 --> 00:07:40.910
at a certain radius around a player that's often quite useful as well.

120
00:07:40.940 --> 00:07:44.980
But we want to draw just a single line so we're going to draw the bug line.

121
00:07:44.990 --> 00:07:45.470
Excellent.

122
00:07:45.470 --> 00:07:49.850
Let's put up parentheses and I'm going to immediately put my semicolon on the end as well.

123
00:07:49.850 --> 00:07:51.250
Got a red squiggle here.

124
00:07:51.270 --> 00:07:52.970
We're going to say too few arguments.

125
00:07:52.970 --> 00:07:54.920
It wants lots of them somewhat.

126
00:07:55.100 --> 00:08:00.170
First of all put a return carriage in so that we can just list these out.

127
00:08:00.170 --> 00:08:05.840
It's going to be a lot easier to read the first thing we need to do and if we hover over it might give

128
00:08:05.840 --> 00:08:07.420
us what we need.

129
00:08:07.460 --> 00:08:10.560
Let's just finish off like this.

130
00:08:11.060 --> 00:08:11.320
Yes.

131
00:08:11.330 --> 00:08:12.010
There we go.

132
00:08:12.950 --> 00:08:16.540
So he's going to ask for first of all for the world.

133
00:08:16.580 --> 00:08:19.190
Well that's can just be get world.

134
00:08:19.280 --> 00:08:20.630
That's absolutely fine.

135
00:08:20.630 --> 00:08:23.340
So it needs to know which where it lives basically.

136
00:08:23.450 --> 00:08:28.390
And then we have the start of the line which shall be the player viewpoint location.

137
00:08:28.490 --> 00:08:33.220
Then we'll have the end of the line and we've already set that up in our little test there.

138
00:08:33.230 --> 00:08:34.530
We've got a color.

139
00:08:34.640 --> 00:08:38.080
We've got a true or false or whether or not the line persists.

140
00:08:38.120 --> 00:08:43.340
We don't want it there all the time we want it refreshed on every frame and the float lifetime.

141
00:08:43.370 --> 00:08:48.280
Well because it has no persistence there is no how long does it last anyway.

142
00:08:48.320 --> 00:08:49.100
That's priority.

143
00:08:49.100 --> 00:08:53.870
That's to do with rendering and our thickness where we can set a thickness of the line itself.

144
00:08:54.060 --> 00:08:54.300
Okay.

145
00:08:54.320 --> 00:08:56.030
So let's go through these one by one.

146
00:08:56.150 --> 00:09:03.480
The first one is a get a world where you can just bang that straight in there next.

147
00:09:03.830 --> 00:09:04.430
What do we need.

148
00:09:04.430 --> 00:09:11.090
We need the beginning point which is going to be the player viewpoint location comma New Line the end

149
00:09:11.090 --> 00:09:11.880
point.

150
00:09:11.900 --> 00:09:17.090
Well this is going to be our line trace and for the moment and you'll get to replace that with your

151
00:09:17.090 --> 00:09:19.760
own code in the challenge.

152
00:09:19.760 --> 00:09:21.410
Now the color itself.

153
00:09:21.890 --> 00:09:24.740
So if this were going to go f color.

154
00:09:25.320 --> 00:09:25.910
There we go.

155
00:09:26.240 --> 00:09:30.060
We're going to open up and there's going to be plenty of ways of defining this.

156
00:09:30.080 --> 00:09:32.790
We're simply going to use red green and blue.

157
00:09:32.900 --> 00:09:38.670
Now in the example before I was giving you your red line let's make a green line this time.

158
00:09:38.690 --> 00:09:47.960
So the first value will be zero representing zero in the red channel green 2 5 5 as elegantly 256 values

159
00:09:48.000 --> 00:09:56.500
and 255 is the highest one for the green and then zero for our blue okay excellent camera at the end

160
00:09:56.500 --> 00:09:56.830
of that.

161
00:09:56.830 --> 00:09:58.580
What's the next thing that we need.

162
00:09:58.600 --> 00:10:00.850
This is just going to be false.

163
00:10:01.000 --> 00:10:07.830
This is going to be zero point F because it's a float lifetime don't care about it.

164
00:10:08.440 --> 00:10:12.000
Oh automatically added something on the end thank you very much.

165
00:10:12.000 --> 00:10:13.580
Zero point f comma.

166
00:10:13.650 --> 00:10:16.290
Let's go down here depth priority again.

167
00:10:16.350 --> 00:10:18.530
This is going to be zero.

168
00:10:18.540 --> 00:10:21.060
Now notice here is asking for a U.

169
00:10:21.300 --> 00:10:22.000
Eight.

170
00:10:22.050 --> 00:10:24.320
That's just going to be an integer and a float thickness.

171
00:10:24.320 --> 00:10:26.430
This is going to be in pixels.

172
00:10:26.430 --> 00:10:28.380
So let's skip this.

173
00:10:28.620 --> 00:10:33.550
Let's say five for the moment and we can tweak that later if we need to.

174
00:10:33.680 --> 00:10:34.050
Okay.

175
00:10:34.050 --> 00:10:36.240
That's all of those values there.

176
00:10:36.240 --> 00:10:41.230
Let's go ahead and tidy up this mistake that came in when we were trying to get it to fill out.

177
00:10:41.420 --> 00:10:41.990
Okay.

178
00:10:42.120 --> 00:10:51.870
So what we should have is a green line that's five pixels in width and it should be coming out the top

179
00:10:51.870 --> 00:10:56.880
of our player because it's going to go from the player's location we should just be the center of our

180
00:10:56.880 --> 00:11:01.670
default pawn and it will be going 100 which should be centimeters.

181
00:11:01.680 --> 00:11:07.290
So a one meter above the player straight up hopefully that will work.

182
00:11:07.290 --> 00:11:11.040
Let's go over into unreal and compile okay.

183
00:11:11.040 --> 00:11:13.810
The compiles complete let's go ahead and press play.

184
00:11:14.010 --> 00:11:15.900
We're going to press f 8 if some.

185
00:11:15.960 --> 00:11:17.900
Sometimes if you start moving around in your lap.

186
00:11:17.910 --> 00:11:19.540
Oh I forgot about that.

187
00:11:19.620 --> 00:11:20.080
I can't.

188
00:11:20.100 --> 00:11:23.160
Oh look at that there's a green line above my head if I look up.

189
00:11:23.190 --> 00:11:24.760
That is very promising.

190
00:11:24.870 --> 00:11:30.910
And if we go ahead I can't reach ejects at the moment but I can press F I see you don't have to get

191
00:11:30.960 --> 00:11:36.060
an eject right at the beginning and look at that we've got a green line coming out the top of our head

192
00:11:36.980 --> 00:11:43.550
so now we've got that line working I've got a challenge for you and your challenge is to calculate the

193
00:11:43.640 --> 00:11:45.730
actual line trace and that we want.

194
00:11:45.730 --> 00:11:50.820
So exactly where the player is looking rather than just coming out the top of our head.

195
00:11:50.930 --> 00:11:57.740
So you'll need to create a private variable a member variable float reach and set it to 100 F that's

196
00:11:57.740 --> 00:12:04.040
going to be one need to reach then you'll need to calculate the line trace and remember this one over

197
00:12:04.040 --> 00:12:04.550
here.

198
00:12:04.550 --> 00:12:05.100
Here we go.

199
00:12:05.210 --> 00:12:12.770
In order to calculate that it's gonna be a plus b and then test the debug trace and remember it's f

200
00:12:12.770 --> 00:12:13.790
eight to eject.

201
00:12:13.820 --> 00:12:18.790
So you can see back at your default porn pause video now and give us a go

202
00:12:21.900 --> 00:12:23.070
Okay everybody Welcome back.

203
00:12:23.100 --> 00:12:26.030
Let's go ahead now and calculate the line trace end.

204
00:12:26.160 --> 00:12:29.580
Okay so I'm going to go straight to the head file first of all.

205
00:12:29.790 --> 00:12:35.570
And let's set up a section for our private member variables private okay.

206
00:12:35.610 --> 00:12:42.450
What do we want here we want it to be a float is going to be called Reach and it's going to have a value

207
00:12:42.450 --> 00:12:47.070
of 100 k That looks good to me.

208
00:12:47.310 --> 00:12:50.830
Let's go over into private you have.

209
00:12:51.510 --> 00:12:53.310
It was just slow catching up.

210
00:12:53.490 --> 00:12:54.450
Right.

211
00:12:54.480 --> 00:13:00.350
So this line trace end is not going to be this we're going to add something else on instead.

212
00:13:00.420 --> 00:13:06.600
And that's something else is going to be the player viewpoint rotation I look about.

213
00:13:06.720 --> 00:13:08.700
I've spelt rotation incorrectly.

214
00:13:08.730 --> 00:13:12.180
That's a bit awkward but we'll we'll correct that in a moment very quickly.

215
00:13:12.210 --> 00:13:15.640
So the player viewpoint rotation but this is an F rotator.

216
00:13:15.630 --> 00:13:20.970
We hover over we can see that we need to convert it into a vector and remember or become a unit vector

217
00:13:20.970 --> 00:13:23.410
so I'll only have a length of one.

218
00:13:23.410 --> 00:13:31.740
So we use the dot operator to access the vector function and then that would just be our unit vector.

219
00:13:31.740 --> 00:13:37.320
And then finally we can at times it by our reach and of course we can change our reach we can even expose

220
00:13:37.320 --> 00:13:39.980
that parameter if we wanted to as well.

221
00:13:40.050 --> 00:13:41.710
So that looks good to me.

222
00:13:41.790 --> 00:13:45.600
Now I said that the player viewpoint rotation is wrong.

223
00:13:45.630 --> 00:13:52.410
Now what we can do here is obviously do a find and replace but we can also press F too then we can come

224
00:13:52.410 --> 00:13:59.820
in and just type in the correct name and when we press Enter it's going to give us a suggestion over

225
00:13:59.820 --> 00:14:02.510
on the left hand side pending rename.

226
00:14:02.520 --> 00:14:08.010
I'm going to click the tick there and it's renamed all of the ones that would misnamed for us.

227
00:14:08.160 --> 00:14:08.340
Right.

228
00:14:08.340 --> 00:14:10.410
Let's hide the area over on the side.

229
00:14:10.470 --> 00:14:16.140
Save my file I think everything sorted here we should now have a green line pointing out directly where

230
00:14:16.140 --> 00:14:17.140
we're looking.

231
00:14:17.190 --> 00:14:19.470
Let's go ahead in Unreal.

232
00:14:19.470 --> 00:14:23.410
Let's compile excellent and compile is complete.

233
00:14:23.520 --> 00:14:25.160
Let's go ahead and press play.

234
00:14:25.260 --> 00:14:30.000
Hey we've got a green dot coming out and let's align it there.

235
00:14:30.000 --> 00:14:33.600
Remember you can press F eight to eject yourself.

236
00:14:33.600 --> 00:14:34.230
Excellent.

237
00:14:34.230 --> 00:14:36.450
That's exactly what we wanted to see.

238
00:14:36.480 --> 00:14:37.230
Brilliant.

239
00:14:37.230 --> 00:14:39.110
We've now got our line coming out.

240
00:14:39.120 --> 00:14:46.230
That means that we're testing our code visually and saying yes that is going to be the how far our player

241
00:14:46.230 --> 00:14:47.000
can reach.

242
00:14:47.160 --> 00:14:53.460
And that's really useful it gives you an idea of how to set up your game especially if we make our game

243
00:14:53.460 --> 00:14:58.940
a little bit more complex and maybe put something on a shelf or slightly in a more awkward position.

244
00:14:58.980 --> 00:15:02.610
What we don't want is to inadvertently place it where the player cannot reach.

245
00:15:02.730 --> 00:15:05.500
And if we've got green line coming out of us like that.

246
00:15:05.790 --> 00:15:09.900
Well we're going to be able to see whether that's the case or not.

247
00:15:09.930 --> 00:15:11.150
That's it for this lecture.

248
00:15:11.160 --> 00:15:12.840
And I'll see you all in the next one.
