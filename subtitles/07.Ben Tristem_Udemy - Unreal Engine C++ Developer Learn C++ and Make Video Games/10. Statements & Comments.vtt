WEBVTT
0
1
00:00:00.780 --> 00:00:05.400
Hello and welcome to this lesson where we're going to take a look at the different lines of code we've
1

2
00:00:05.400 --> 00:00:08.800
been writing so far in our main function body.
2

3
00:00:09.030 --> 00:00:16.050
These lines of code are known as statements and there's different kinds of statements in C++.
3

4
00:00:16.050 --> 00:00:21.330
These statements where we print to the terminal are expressions statements and expressions statement
4

5
00:00:21.540 --> 00:00:24.810
is one of the most common statements in C++.
5

6
00:00:24.810 --> 00:00:30.240
Now I want to be clear it's not the fact that we are printing to the terminal that makes these lines
6

7
00:00:30.240 --> 00:00:32.470
of code expression statements.
7

8
00:00:32.580 --> 00:00:39.260
For example a line of code where we assign a value to a variable is also an expression statement.
8

9
00:00:39.270 --> 00:00:43.230
So what is it that makes these lines of code expression statements.
9

10
00:00:43.230 --> 00:00:49.380
Well it's not too hard to understand the code within both of these lines we have here are expressions
10

11
00:00:49.790 --> 00:00:55.140
but it's the fact that we have a semicolon on the end of the expression that makes it an expression
11

12
00:00:55.140 --> 00:00:56.320
statement.
12

13
00:00:56.340 --> 00:01:04.160
So to summarize an expression followed by a semicolon is an expression statement.
13

14
00:01:04.170 --> 00:01:05.970
Okay, so what are the lines of code to be have.
14

15
00:01:06.300 --> 00:01:12.450
Well we have the lines where we declare variables these are declaration statements and a declaration
15

16
00:01:12.450 --> 00:01:18.570
statement is pretty straightforward it's simply some code that declares something and in our case our
16

17
00:01:18.570 --> 00:01:21.840
declaration statements are declaring our variables.
17

18
00:01:21.870 --> 00:01:26.970
Okay so in our code we have our include preprocessor directive.
18

19
00:01:27.150 --> 00:01:33.450
We have our main function and our expression and declaration statements that make up the body of our
19

20
00:01:33.450 --> 00:01:34.540
main function.
20

21
00:01:34.680 --> 00:01:38.730
And we also have the return statement of the main function.
21

22
00:01:38.730 --> 00:01:44.040
Now I want you to pause here because I want you to head over to our community forum and in your own
22

23
00:01:44.040 --> 00:01:47.990
words I want you to post about each section of code we have here.
23

24
00:01:48.060 --> 00:01:50.720
What is hash include iostream doing?
24

25
00:01:50.760 --> 00:01:53.370
Why do we have the main function in our file?
25

26
00:01:53.400 --> 00:01:59.070
What's are our expression and declarations statements doing in the terms of our gameplay play? And why
26

27
00:01:59.070 --> 00:02:03.030
do we have the return statement in our main function?
27

28
00:02:03.030 --> 00:02:08.040
So pause here to post about these sections of code in your own words and then when you're ready we can
28

29
00:02:08.040 --> 00:02:10.020
move on to commenting our code
29

30
00:02:12.960 --> 00:02:13.360
okay.
30

31
00:02:13.360 --> 00:02:18.320
So I hope you had a go at posting in the community to break down each of these.
31

32
00:02:18.340 --> 00:02:19.170
Well done if you did.
32

33
00:02:19.180 --> 00:02:24.190
We're going to move on now by taking a look at comments in C++.
33

34
00:02:24.190 --> 00:02:31.210
We can comment our code. Comments can be used to make your code more easily understood by yourself or
34

35
00:02:31.210 --> 00:02:33.910
by other programmers reading your code.
35

36
00:02:33.910 --> 00:02:37.980
Now what does it look like when we comment our code in C++.
36

37
00:02:37.990 --> 00:02:40.660
Well it can look like this as an example.
37

38
00:02:40.690 --> 00:02:47.140
Comments are kind of like mini notes in our code and the compiler ignores comments too. Anything after
38

39
00:02:47.140 --> 00:02:51.340
a double slash on a single line of code is ignored by the compiler.
39

40
00:02:51.400 --> 00:02:57.850
So to write comments in our code we enter two forward double slashes onto a line and then start typing
40

41
00:02:57.850 --> 00:02:59.260
out our comment.
41

42
00:02:59.260 --> 00:03:02.670
And right now I want you to have a go at commenting some of your code.
42

43
00:03:02.830 --> 00:03:09.700
So pause here to insert a new line at the start of your main function body and comment your first messages
43

44
00:03:09.910 --> 00:03:11.770
that you print to the terminal.
44

45
00:03:11.770 --> 00:03:17.310
If somebody was to read your code how would you describe to them what's happening in just a few words.
45

46
00:03:17.350 --> 00:03:19.010
So make sure to comment wisely.
46

47
00:03:19.030 --> 00:03:24.310
We don't want to write a story here just a few words will do so pause here to comment your code and
47

48
00:03:24.310 --> 00:03:26.470
then we can take a look at commenting together
48

49
00:03:29.180 --> 00:03:32.390
Okay so I'm just gonna go ahead and comment some of my code.
49

50
00:03:32.420 --> 00:03:38.280
I'm going to insert a new line at the start of my main function body and to add a comment.
50

51
00:03:38.330 --> 00:03:44.450
We can use two slashes or two forward slashes and now anything that is entered on the rest of this line
51

52
00:03:44.720 --> 00:03:47.010
is going to be ignored by the compiler.
52

53
00:03:47.150 --> 00:03:48.480
And this is a single line comment.
53

54
00:03:48.500 --> 00:03:51.010
So what are the expressions below do.
54

55
00:03:51.050 --> 00:03:55.900
Well they're kind of printing an intro message to the terminal or a welcome message to our game.
55

56
00:03:56.000 --> 00:04:03.500
So we could comment something like print welcome messages to the terminal and that's our first comment.
56

57
00:04:03.500 --> 00:04:09.240
Now we could continue commenting our code, what are we doing with our A B and C variables here.
57

58
00:04:09.290 --> 00:04:14.600
Well we are declaring our three number code so we could actually just comment that declare three
58

59
00:04:14.640 --> 00:04:18.430
number code and it's quite clear what we're doing with the sum and the product.
59

60
00:04:18.440 --> 00:04:20.800
We don't we need to comment that. We could comment
60

61
00:04:20.810 --> 00:04:29.520
our final expression statements here with something like "print sum and product to the terminal."
61

62
00:04:29.870 --> 00:04:34.850
Okay great so we've now commented our code and I just want to show you the multi line comment before
62

63
00:04:34.850 --> 00:04:36.380
we end this lesson.
63

64
00:04:36.440 --> 00:04:41.720
I'm going to add a few new lines above where we declare the sum and the product we can create multi
64

65
00:04:41.720 --> 00:04:45.480
line comments by typing a forward slash followed by an asterisk.
65

66
00:04:45.500 --> 00:04:49.890
This opens the multi line comment so we need to close the multi line comment.
66

67
00:04:49.890 --> 00:04:55.910
So on a couple of lines below this I'm going to just close that multi line comment by putting in a asterisk
67

68
00:04:55.910 --> 00:04:58.700
again followed by a forward slash.
68

69
00:04:58.880 --> 00:05:04.430
And anything we write between these lines is a comment but we're not going to use as multi line comment
69

70
00:05:04.430 --> 00:05:04.960
for anything.
70

71
00:05:04.970 --> 00:05:07.980
I just wanted to show you how we can write multi line comments.
71

72
00:05:08.090 --> 00:05:11.000
So I'm going to remove it and we're gonna wrap up this lesson here.
72

73
00:05:11.060 --> 00:05:13.250
And when you're ready I'll see you in the next one.
