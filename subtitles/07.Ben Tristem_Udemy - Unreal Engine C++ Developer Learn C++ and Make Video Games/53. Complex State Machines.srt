1
00:00:04,570 --> 00:00:05,740
Hello and welcome this lecture.

2
00:00:05,770 --> 00:00:12,220
We are going to be filling out Animation's state machine so that there are more states here allowing

3
00:00:12,220 --> 00:00:16,330
us to have a animation that jumps us into that initial jump state.

4
00:00:16,340 --> 00:00:18,580
As you can see, there's a little bit more spring to my jump.

5
00:00:19,120 --> 00:00:25,180
And we are going to learn about such things as automatic transitions and how to nest one state machine

6
00:00:25,510 --> 00:00:28,810
within another, which is what we're going to do for our death animation.

7
00:00:28,850 --> 00:00:31,810
Now, let's dive in and see how it works.

8
00:00:32,620 --> 00:00:40,890
So as promised in the last lecture, we're going to hook up our is airborne variable to the gameplay.

9
00:00:41,260 --> 00:00:48,470
Now, the way we're going to do this is to get from the poor or particularly from at a shoot a character.

10
00:00:49,030 --> 00:00:54,670
We want to find out essentially whether the character is airborne.

11
00:00:55,450 --> 00:01:01,390
And I find that the only way you can do this is essentially through the character movement component.

12
00:01:01,870 --> 00:01:02,800
So let me show you what I mean.

13
00:01:02,860 --> 00:01:07,830
If we go to our cast node that is casting to the shooter character, then we can drag off of this.

14
00:01:07,840 --> 00:01:12,610
In fact, what we can do is a more general cast in this particular instance because we don't need the

15
00:01:12,640 --> 00:01:15,850
specific information associated with is dead.

16
00:01:16,570 --> 00:01:24,580
So what I'm going to do here is we'll take this pin the pawn owner, and we're going to do a cast to

17
00:01:25,240 --> 00:01:26,050
character.

18
00:01:26,170 --> 00:01:30,370
In this case, because all we need to know is that this is a character instance.

19
00:01:30,430 --> 00:01:36,370
Then we're gonna add a new execution pin up at the sequence node, drag that down to our cast character.

20
00:01:36,460 --> 00:01:39,730
And then from the character will drag off of its character PIN.

21
00:01:39,820 --> 00:01:43,900
And we're going to look for basically something along the line of airborne.

22
00:01:44,590 --> 00:01:45,340
Nothing there.

23
00:01:45,460 --> 00:01:53,570
Maybe jump seems to be more interesting saying is jump providing force can jump, jump all that sort

24
00:01:53,590 --> 00:01:53,820
stuff.

25
00:01:53,900 --> 00:01:56,380
We've got something there, but that's not quite it.

26
00:01:56,410 --> 00:01:58,380
How about if we look for falling?

27
00:01:58,420 --> 00:01:59,050
There you go.

28
00:01:59,140 --> 00:02:00,730
We've got an is falling.

29
00:02:00,760 --> 00:02:06,940
And if you click that, you can see that it automatically gets hold of the character movement component

30
00:02:06,940 --> 00:02:10,660
from that character to see whether we are falling or not.

31
00:02:11,440 --> 00:02:17,350
Then what we can do is we can pass that in to set the value of is airborne.

32
00:02:17,410 --> 00:02:22,240
And obviously we're only going to be setting this if our cast to character succeeds.

33
00:02:22,300 --> 00:02:27,460
So let's hook in that execution pin right there and go ahead and compile that.

34
00:02:27,460 --> 00:02:29,320
Obviously, it's not going to change the preview.

35
00:02:29,680 --> 00:02:31,540
So we've got to go and try and play it.

36
00:02:31,720 --> 00:02:32,470
So let's play.

37
00:02:32,560 --> 00:02:33,170
We jump.

38
00:02:33,610 --> 00:02:37,630
And you can see we've got this falling variable instantly being true.

39
00:02:38,470 --> 00:02:40,330
And that is working quite nicely, actually.

40
00:02:40,430 --> 00:02:46,150
We're able to jump and land and jump and land and kill our enemies, obviously.

41
00:02:47,350 --> 00:02:51,880
So now I'd like to add a little bit more complication to Adam Graff.

42
00:02:52,030 --> 00:02:56,200
So in The Locomotion State machine at the moment, we've got two states here.

43
00:02:56,530 --> 00:03:02,770
But what I'd really like to do is to play a jumping animation, then an animation where we're airborne

44
00:03:02,980 --> 00:03:05,530
and then a landing animation when we hit the ground.

45
00:03:06,250 --> 00:03:09,310
To do that, we need some more states in our state machine.

46
00:03:09,790 --> 00:03:10,660
So let's go ahead.

47
00:03:10,690 --> 00:03:13,840
I'm going to do one of the set of states and you can do the final one.

48
00:03:14,620 --> 00:03:17,230
So the first one is going to be at Jumping State.

49
00:03:18,720 --> 00:03:23,280
And that is going to play an animation that gets us off the ground to say, let's go into the jumping

50
00:03:23,280 --> 00:03:28,200
states and to the output animation pose, we're going to link a new animation.

51
00:03:28,560 --> 00:03:29,280
We'll have a jump.

52
00:03:29,310 --> 00:03:31,990
We're looking for the ones suffixed with combat's.

53
00:03:32,670 --> 00:03:35,400
So we're going to look for jump start combat.

54
00:03:35,430 --> 00:03:36,010
There you go.

55
00:03:36,510 --> 00:03:37,500
And that's what we want.

56
00:03:37,560 --> 00:03:40,830
Then we're going to go back to our locomotion state machine.

57
00:03:41,280 --> 00:03:42,990
And we want to hook up some transitions.

58
00:03:43,140 --> 00:03:45,420
So we're gonna transition from grounded to jumping.

59
00:03:45,990 --> 00:03:48,480
That's going to happen if we're airborne.

60
00:03:48,570 --> 00:03:51,840
So put in the air is airborne in there.

61
00:03:52,230 --> 00:03:55,650
And Fusun is no way that I could see of changing the transition.

62
00:03:55,660 --> 00:03:58,980
So we're just going to have to delete the old transitions here.

63
00:03:59,070 --> 00:04:03,690
In both cases, then we're going to need to transition from jumping to is airborne.

64
00:04:03,720 --> 00:04:06,210
But we don't have a variable or state for that.

65
00:04:06,600 --> 00:04:09,810
So when is it that we're going to transition from jumping to is airborne?

66
00:04:09,840 --> 00:04:13,110
Well, we want to do it when the jumping animation has finished.

67
00:04:13,140 --> 00:04:14,500
When we've finished jumping.

68
00:04:14,520 --> 00:04:18,840
If you go and have a look at the jumping animation, you can see that it involves him lifting his feet

69
00:04:18,840 --> 00:04:20,070
off the ground like this.

70
00:04:20,520 --> 00:04:26,670
And so we want to basically transition into our apex animation when it's finished.

71
00:04:27,060 --> 00:04:29,550
Fortuny there's an option for that in the transitions.

72
00:04:29,610 --> 00:04:33,950
If you select the transition rather than going into it, you could look at its details, pain.

73
00:04:34,650 --> 00:04:35,820
And there's one option here.

74
00:04:36,830 --> 00:04:42,410
Which I like, spanned out, says automatic rule based on sequence player in state.

75
00:04:43,040 --> 00:04:48,290
If you check that, basically what is going to do is when we've nearly finished jumping, it's going

76
00:04:48,290 --> 00:04:50,690
to start transitioning into the next animation.

77
00:04:51,020 --> 00:04:55,730
And you can actually control when that transition is and how long that Crossfade is here in the BLENDE

78
00:04:55,730 --> 00:04:56,210
settings.

79
00:04:56,210 --> 00:05:00,240
You can see the duration of the BLENDE is about point two.

80
00:05:00,650 --> 00:05:05,270
But seeing as these two transitioning into each other particularly well, I'm going to make that nought

81
00:05:05,270 --> 00:05:06,380
point nought ones.

82
00:05:06,450 --> 00:05:08,420
I'm going to make a really short transition.

83
00:05:08,990 --> 00:05:10,550
So let's see what that looks like.

84
00:05:10,610 --> 00:05:12,550
So we're going to go into is airborne at play?

85
00:05:12,550 --> 00:05:18,140
Is that jumping animation and then goes straight into the airborne state, wants the animation is finished.

86
00:05:18,140 --> 00:05:19,220
Let's try that one more time.

87
00:05:19,730 --> 00:05:21,020
We can't try it one more time.

88
00:05:21,080 --> 00:05:26,210
That is the problem because we've got no transition out of the airborne state back to grounded.

89
00:05:26,660 --> 00:05:28,970
And that is indeed going to be your challenge.

90
00:05:29,210 --> 00:05:33,460
So what you gonna do is add a landing state, which is going to play a landing animation.

91
00:05:33,460 --> 00:05:37,850
So at the new stay at the animation that's most appropriate for landing, in your opinion, you might

92
00:05:37,850 --> 00:05:41,210
want to look for things with the jump prefix and the combat suffix.

93
00:05:41,780 --> 00:05:47,840
Then you're going to transition from airborne on a boolean into this landing state and then from that

94
00:05:47,840 --> 00:05:52,760
landing state, you're going to transition to grounded when the landing animation has finished.

95
00:05:53,760 --> 00:05:55,950
Play it, play around, see how it feels.

96
00:05:55,980 --> 00:05:56,820
Does it feel good?

97
00:05:56,850 --> 00:05:57,870
Does it look right?

98
00:05:58,440 --> 00:06:04,290
And you may want to look at tweaking those transition times to see if that makes things feel better.

99
00:06:04,710 --> 00:06:08,250
Pause a video and a half ago playing around with astate machine.

100
00:06:10,580 --> 00:06:10,750
OK.

101
00:06:10,930 --> 00:06:11,530
Welcome back.

102
00:06:11,620 --> 00:06:12,790
So let's give this a shot.

103
00:06:12,850 --> 00:06:14,590
We're going to add a new state in here.

104
00:06:14,870 --> 00:06:16,270
It's going to be called landing.

105
00:06:17,580 --> 00:06:20,010
And in this landing state, we go in.

106
00:06:20,040 --> 00:06:21,420
We need an animation for it.

107
00:06:21,510 --> 00:06:22,750
I'm going to search for jump.

108
00:06:23,370 --> 00:06:24,750
And what we want is jump.

109
00:06:24,810 --> 00:06:27,430
Land combat like so.

110
00:06:27,840 --> 00:06:30,750
And then we can get back up to our locomotion state machine.

111
00:06:30,750 --> 00:06:33,690
We need to transition from airborne to landing.

112
00:06:33,990 --> 00:06:34,980
Double click on that.

113
00:06:35,460 --> 00:06:40,410
And this needs to be the not in and not airborne basically.

114
00:06:40,440 --> 00:06:46,170
So not node than the is airborne past into that.

115
00:06:46,770 --> 00:06:48,600
So that's our transition condition.

116
00:06:48,630 --> 00:06:53,010
So when we are at the apex, once the knot is airborne, is unchecked.

117
00:06:53,040 --> 00:06:54,660
Then we go into that landing state.

118
00:06:55,260 --> 00:06:59,100
Then from our landing state, we want transition to grounded when finished.

119
00:06:59,130 --> 00:07:05,130
So if we click on the transition and check the automatic rule checkbox, it's going to do that when

120
00:07:05,130 --> 00:07:05,760
it's finished.

121
00:07:05,880 --> 00:07:06,720
So let's try that out.

122
00:07:07,170 --> 00:07:09,270
We're going to go into his airborn it place jumping.

123
00:07:09,330 --> 00:07:12,240
It goes into airborne and then uncheck it.

124
00:07:12,360 --> 00:07:14,400
It goes to landing and back out.

125
00:07:14,820 --> 00:07:15,570
Let's do that again.

126
00:07:16,570 --> 00:07:17,500
Seems pretty good.

127
00:07:17,720 --> 00:07:24,190
Okay, so what we're going to do now is try playing it, jumping around and landing.

128
00:07:24,420 --> 00:07:25,870
Okay, this is feeling quite good.

129
00:07:26,230 --> 00:07:28,450
There's a little bit of lag when I'm landing.

130
00:07:28,570 --> 00:07:32,600
Between me landing and the running animation being played.

131
00:07:32,650 --> 00:07:38,770
So I'm going to click on the transition from landing to ground it and have a look at our bland blend

132
00:07:38,770 --> 00:07:39,280
settings.

133
00:07:40,000 --> 00:07:43,000
Now we've got this duration of point one.

134
00:07:43,450 --> 00:07:48,680
That's how long it's taking us to do the transition and what's going on.

135
00:07:48,700 --> 00:07:54,400
So in our landing combat animation, how long is that landing combat animation?

136
00:07:54,820 --> 00:07:57,070
If I pause it, scroll along here.

137
00:07:57,580 --> 00:08:00,730
You can see that is about nought point two.

138
00:08:00,850 --> 00:08:09,130
So it's actually taking the whole of that time and transitioning during that time in to our grounded

139
00:08:09,130 --> 00:08:09,940
locomotion.

140
00:08:10,090 --> 00:08:15,520
So that's kind of what we want, because as soon as we've landed on the ground, as soon as the gameplay

141
00:08:15,540 --> 00:08:17,230
is telling us, we've landed on the ground.

142
00:08:17,620 --> 00:08:22,630
We want to start showing some foot movement because otherwise it's going to look a little bit weird.

143
00:08:23,200 --> 00:08:29,620
So we want that transition to actually start happening as soon as possible, which is why we're playing

144
00:08:29,620 --> 00:08:34,930
very little of the landing animation and transitioning into the grounded one as much as quickly as possible.

145
00:08:35,350 --> 00:08:42,730
The only thing that we can really tweak here is the transition mode, which kind of dictates the shape

146
00:08:42,730 --> 00:08:48,700
of that curve, the shape of how much landing versus grounded we have over time.

147
00:08:49,120 --> 00:08:52,870
And you can test out various of these options, see which ones feel best for you.

148
00:08:53,200 --> 00:08:59,590
For me, it's the exponential out that feels best because that shows as much grounded as possible as

149
00:08:59,620 --> 00:09:00,400
early as possible.

150
00:09:00,430 --> 00:09:02,260
But without it feeling jarring.

151
00:09:02,710 --> 00:09:08,680
So if we now do is airborne and then go back to ground, you can see that it feels like it's going into

152
00:09:08,680 --> 00:09:11,980
grounded pretty quickly, which is what we want.

153
00:09:12,460 --> 00:09:16,270
So I'm going to go ahead and hit play and see if that feels better.

154
00:09:17,350 --> 00:09:21,130
Yeah, it feels a bit more responsive to me hitting the ground, which is exactly what I want.

155
00:09:21,640 --> 00:09:27,160
Now, in practice, if you had more animations here to work with, what you might want to do with the

156
00:09:27,160 --> 00:09:31,570
landed state is to have a blend space there and have a recovery animation.

157
00:09:31,600 --> 00:09:36,610
So depending how hard you hit the ground, you might hit you might play a recovery animation, which

158
00:09:36,610 --> 00:09:39,190
is blended depending on which direction you're moving in.

159
00:09:39,580 --> 00:09:44,440
So he would land with a hefty thud, but kind of stagger over to the left, for example.

160
00:09:44,860 --> 00:09:46,820
Now, that is not something that we're going to cover here.

161
00:09:46,870 --> 00:09:50,950
But just because we don't have the animation, but in theory, that's what you might do.

162
00:09:51,190 --> 00:09:57,910
So now one final kind of mini challenge for you is that we've currently got this BLENDE poses by Boole

163
00:09:58,330 --> 00:10:00,480
going on for our death animation.

164
00:10:01,000 --> 00:10:04,660
This could be done with a new state machine for death.

165
00:10:05,170 --> 00:10:11,620
See if you could try and refactor this Annam graph so that it works with a state machine for death.

166
00:10:11,740 --> 00:10:14,360
Instead of this, BLENDE poses by Bool Kaso.

167
00:10:14,470 --> 00:10:16,660
Hopefully you took me up on that challenge.

168
00:10:17,050 --> 00:10:23,320
What we're going to do is we're going to right click do a new state machine, entirely new.

169
00:10:23,920 --> 00:10:28,470
We're going to rename the state machine to death or something similar like.

170
00:10:28,480 --> 00:10:32,950
So then I'm going to go into that state machine and we're gonna add two states.

171
00:10:33,040 --> 00:10:38,890
One is going to be the state alive and the other state is going to be dead.

172
00:10:39,450 --> 00:10:39,650
OK.

173
00:10:40,420 --> 00:10:42,010
And then we're going to add some transitions.

174
00:10:42,150 --> 00:10:44,040
So transition from alive to dead.

175
00:10:44,560 --> 00:10:46,210
That is going to happen if we double click.

176
00:10:46,360 --> 00:10:47,200
It's going to happen.

177
00:10:47,230 --> 00:10:49,720
When is dead is true.

178
00:10:50,170 --> 00:10:50,620
Like so.

179
00:10:51,640 --> 00:10:58,570
And then we want a maybe we want a transition back to alive, and we can just have that for testing

180
00:10:58,570 --> 00:11:03,700
purposes, at least that's going to have a not boolean and it's going to have is dead.

181
00:11:03,790 --> 00:11:05,350
So basically is not dead.

182
00:11:05,770 --> 00:11:07,330
We're gonna go back the other way.

183
00:11:08,320 --> 00:11:10,450
We want to default to being in their lives state.

184
00:11:10,470 --> 00:11:11,230
That makes sense.

185
00:11:11,320 --> 00:11:12,760
And then we need some animations to play.

186
00:11:13,420 --> 00:11:14,090
So for dead.

187
00:11:14,110 --> 00:11:15,670
We've already got that death animation.

188
00:11:15,670 --> 00:11:19,360
So I'm gonna go in back up to the Annam graph to cut that out.

189
00:11:19,390 --> 00:11:24,580
Go back into the dead state and paste that death animation in here.

190
00:11:25,970 --> 00:11:28,370
Then in our live state, what do we want to play there?

191
00:11:28,580 --> 00:11:30,640
Well, actually, we want to play everything else.

192
00:11:30,650 --> 00:11:32,260
We want to play the aim offsets.

193
00:11:32,330 --> 00:11:33,770
We want to play The Locomotion.

194
00:11:34,130 --> 00:11:35,570
So I'm gonna cut all of that.

195
00:11:36,200 --> 00:11:37,610
And this is where it gets interesting.

196
00:11:37,640 --> 00:11:42,080
Now we've got a state machine running within a state machine, which is entirely possible.

197
00:11:42,260 --> 00:11:50,240
So we can then pipe in this aim, offset into our output for the alive state and go back up to Adam

198
00:11:50,240 --> 00:11:51,080
Grauwe entirely.

199
00:11:51,080 --> 00:11:56,510
Remove all the nodes here and just pipe our death state machine into our output.

200
00:11:57,080 --> 00:12:00,320
And this works because we've got two top level states.

201
00:12:00,380 --> 00:12:02,420
Basically, we're saying they're either alive or dead.

202
00:12:03,140 --> 00:12:04,780
Your daddy just play a death animation.

203
00:12:05,240 --> 00:12:10,070
If you're alive, however, you do this aim offset and you do your locomotion state machine, which

204
00:12:10,070 --> 00:12:15,310
in turn has its own set of states, says layering state machine on top of state machine.

205
00:12:15,320 --> 00:12:20,960
Hopefully see how that can be really powerful so we can do now is dead, which overrides everything

206
00:12:20,960 --> 00:12:22,040
else that's running.

207
00:12:22,040 --> 00:12:26,240
It's no longer running the locomotion state machine because we're just playing at death animation fi

208
00:12:26,330 --> 00:12:30,620
undying as we go back to running the animation for alive.

209
00:12:30,980 --> 00:12:34,460
But we can replay our death crucially, which previously we couldn't do.

210
00:12:34,820 --> 00:12:41,690
And that's because when you leave a state in an animation state machine, it resets the animation within

211
00:12:41,690 --> 00:12:41,820
it.

212
00:12:41,820 --> 00:12:43,040
It resets it to the beginning.

213
00:12:43,070 --> 00:12:45,670
So that's a really useful feature here for death.

214
00:12:45,740 --> 00:12:50,030
So to recap, what we've learned about in this lecture is how to make more complex state machines and

215
00:12:50,030 --> 00:12:51,680
nesse state machines within each other.

216
00:12:52,160 --> 00:12:57,890
And we've seen about automatic transitions and how they can help us make a sequence of transitions happen

217
00:12:57,890 --> 00:12:58,610
more easily.

218
00:12:58,810 --> 00:12:59,900
And I'll see in the next lecture.
