1
00:00:04,610 --> 00:00:05,660
Hello and welcome in this lecture.

2
00:00:05,690 --> 00:00:12,620
We're going to be architecting ag gun such that when we hit the mouse button or the trigger, then we

3
00:00:12,620 --> 00:00:14,540
are going to get a log message.

4
00:00:14,600 --> 00:00:19,580
And this log message is the first step in getting many other things running off the back of this gun

5
00:00:19,630 --> 00:00:20,200
architecture.

6
00:00:20,340 --> 00:00:22,160
Let's dive in and see how it's done.

7
00:00:23,230 --> 00:00:29,380
So we want this gun ultimately to be able to shoot, and that is the core of it, why are we choosing

8
00:00:29,380 --> 00:00:32,980
to have the gun as the core of our shooting architecture?

9
00:00:33,070 --> 00:00:38,800
Well, as I've already alluded to a little bit, we want to be able to support different types of methods

10
00:00:38,920 --> 00:00:39,490
of shooting.

11
00:00:39,530 --> 00:00:42,400
Now, what are the kinds of methods of shooting that we can typically have?

12
00:00:42,520 --> 00:00:48,430
There is direct fire, which often uses retracing and direct line of sight to ascertain whether or not

13
00:00:48,430 --> 00:00:49,690
a victim has been hit.

14
00:00:49,810 --> 00:00:52,590
So it would go and say, okay, I can see that enemy.

15
00:00:52,630 --> 00:00:55,570
It's that line of sight from the gun to the enemy is clear.

16
00:00:55,660 --> 00:00:56,380
It hits him.

17
00:00:56,440 --> 00:00:58,000
So we have to do him damage.

18
00:00:58,030 --> 00:01:01,360
Otherwise, if I missed and I didn't hit the enemy, it doesn't do damage.

19
00:01:01,450 --> 00:01:02,810
That's one very easy way.

20
00:01:02,810 --> 00:01:04,750
It doesn't really replicate the physics of a bullet.

21
00:01:04,800 --> 00:01:05,670
But there's no need to.

22
00:01:05,710 --> 00:01:07,120
So for performance reasons, we do not.

23
00:01:07,210 --> 00:01:11,040
Now, with a rocket launcher or something like that, it's often a very slow projectile.

24
00:01:11,050 --> 00:01:16,420
We want to see the effects of that projectile moving through the air and the time delay can be important,

25
00:01:16,840 --> 00:01:21,760
in which case we might spawn that projectile and see whether the projectile hits in five seconds time

26
00:01:21,880 --> 00:01:28,990
or we might go down a different route with a bullet drop and rifles and sniper rifles over long distances.

27
00:01:29,110 --> 00:01:33,010
So all of this could change depending on the implementation of the gun.

28
00:01:33,040 --> 00:01:38,200
Now we're going to implement one gun during this section and it's going to be a rifle, a direct shooting

29
00:01:38,200 --> 00:01:38,860
type of gun.

30
00:01:38,920 --> 00:01:45,550
But in order to leave that architecture open for you to extend, we are going to make the gun responsible

31
00:01:45,610 --> 00:01:46,480
for doing shooting.

32
00:01:46,630 --> 00:01:52,030
So that means we have to go ahead and introduce some shooting architecture in to our gun.

33
00:01:52,090 --> 00:01:52,720
So we've got a gun.

34
00:01:52,810 --> 00:01:53,590
Dot h.

35
00:01:53,740 --> 00:02:00,700
We want to create a public function to this that is going to allow us to essentially pull the trigger

36
00:02:00,790 --> 00:02:07,810
on the gun from the shooter, carrot's or from wherever where binding input in the case of the enemy,

37
00:02:07,810 --> 00:02:12,370
for example, we're going to be caught pulling that trigger from the A.I..

38
00:02:13,090 --> 00:02:15,600
So let's go ahead and create a void.

39
00:02:15,610 --> 00:02:21,040
It doesn't have to have a return type pull trigger method and it doesn't need to take anything.

40
00:02:21,040 --> 00:02:24,550
All we need to know is that we want to pull the trigger in this frame.

41
00:02:24,880 --> 00:02:27,250
So having that is sufficient.

42
00:02:27,430 --> 00:02:33,790
Now, I'm going to go ahead and create this flirtation with control, shift P and create implementation.

43
00:02:34,870 --> 00:02:40,210
And then in here, all I'm going to do is I'm going to put UEE log and I'm just going to make it a warning

44
00:02:40,210 --> 00:02:43,150
to stand out and change the message, too.

45
00:02:43,300 --> 00:02:48,550
You've been shot like that and that's great.

46
00:02:48,640 --> 00:02:52,120
So that's what we're gonna call in our character.

47
00:02:52,190 --> 00:02:52,930
Don't CBP.

48
00:02:54,100 --> 00:02:57,520
So this is going to be a challenge to you is some more input binding?

49
00:02:57,520 --> 00:02:58,660
We've done lots of input binding.

50
00:02:58,660 --> 00:03:01,720
Hey, you got lots of examples of input binding.

51
00:03:02,020 --> 00:03:05,300
Go ahead and do this to hook up a shoot action.

52
00:03:05,410 --> 00:03:09,700
You're going to have to create a new action in the project settings for shooting Byrn.

53
00:03:09,760 --> 00:03:16,900
That to your key, your right trigger, whatever you want to bind it to, then bind it in the character

54
00:03:17,140 --> 00:03:20,170
set up player input component method to do this.

55
00:03:20,590 --> 00:03:26,290
And then after binding the character, you should be able to call the pull trigger from with in the

56
00:03:26,290 --> 00:03:30,280
function that you have created on the character.

57
00:03:30,340 --> 00:03:36,370
Remember to put a function in to character in order to set up the binding rather than trying to bind

58
00:03:36,370 --> 00:03:38,320
directly to that gun.

59
00:03:38,410 --> 00:03:40,270
Binding directly to the gun isn't going to work.

60
00:03:40,300 --> 00:03:42,760
You need to put a little function intermediary in there.

61
00:03:43,540 --> 00:03:48,110
So pause the video and I'll give you a little bit of a hint or a little bit of a start.

62
00:03:48,130 --> 00:03:52,960
If you're struggling with that last part of the challenge of creating the intermediary function.

63
00:03:53,780 --> 00:03:53,930
OK.

64
00:03:54,010 --> 00:03:55,240
So here comes the hint.

65
00:03:55,270 --> 00:03:56,680
If you don't want the hints, pause now.

66
00:03:57,010 --> 00:04:03,820
But the hint is going to be we're going to do something like this, which is to have a new private function

67
00:04:03,820 --> 00:04:08,980
called void shoot and create the implementation over in C++.

68
00:04:09,340 --> 00:04:14,650
And it's going to be in here that we cool to the guns own method.

69
00:04:14,650 --> 00:04:16,030
So the guns pull trigger.

70
00:04:16,450 --> 00:04:18,370
We're going to do gun.

71
00:04:19,520 --> 00:04:20,800
And then cool.

72
00:04:20,960 --> 00:04:24,950
Pull the trigger on that from within shoot.

73
00:04:25,010 --> 00:04:26,240
And this is what you need to find.

74
00:04:27,460 --> 00:04:31,520
Okay, so Paul's video, again, if that's where you want to take things.

75
00:04:32,480 --> 00:04:34,940
And then let's go and set up the actions.

76
00:04:35,030 --> 00:04:38,000
Okay, so we're gonna go over to our project settings.

77
00:04:38,090 --> 00:04:39,560
So settings, product settings.

78
00:04:40,100 --> 00:04:43,820
And we wants to dock this and go to our input.

79
00:04:43,940 --> 00:04:47,360
And we want to add a new action and we're going to call it shoot.

80
00:04:48,440 --> 00:05:00,020
And then we're going to bind this to the left mouse button and the right trigger, not the right trig

81
00:05:00,020 --> 00:05:00,650
axis.

82
00:05:01,250 --> 00:05:02,120
The right.

83
00:05:03,080 --> 00:05:03,730
Just trigger.

84
00:05:04,310 --> 00:05:05,330
I thought that's what it selected.

85
00:05:05,390 --> 00:05:09,500
But I had not case so binding to both controller and mouse.

86
00:05:10,100 --> 00:05:15,130
And then we're gonna go over and bind the axis in our shooter character, GPP.

87
00:05:15,410 --> 00:05:17,600
So copy this bind axis for jump.

88
00:05:18,020 --> 00:05:18,800
I mean, action.

89
00:05:18,800 --> 00:05:19,160
Of course.

90
00:05:19,160 --> 00:05:20,960
I'm always gonna get those two mixed up.

91
00:05:21,590 --> 00:05:24,860
We'll call switch over to the shoot axis here.

92
00:05:24,980 --> 00:05:32,030
The pressed is what we want and instead of binding to jump, we're going to buy into a character shoot

93
00:05:32,060 --> 00:05:32,590
instead.

94
00:05:33,650 --> 00:05:36,110
Like, so and let's go ahead and build.

95
00:05:36,790 --> 00:05:36,890
OK.

96
00:05:37,140 --> 00:05:38,870
It looks like that has succeeded.

97
00:05:39,040 --> 00:05:42,560
It's close that on down and see if it works.

98
00:05:42,680 --> 00:05:48,480
So it's exit the game and hit play again and have a look at our output log.

99
00:05:48,500 --> 00:05:50,390
Crucially play.

100
00:05:50,750 --> 00:05:51,190
Yay!

101
00:05:51,290 --> 00:05:54,380
So if I hit the mouse button is working.

102
00:05:54,770 --> 00:05:58,340
Let's see if the same thing happens if I use my right trigger.

103
00:05:58,980 --> 00:05:59,180
Yep.

104
00:05:59,270 --> 00:05:59,470
Right.

105
00:05:59,480 --> 00:06:01,550
Trigger is working too for firing.

106
00:06:01,910 --> 00:06:07,520
So obviously a log message is not the best way of letting your player know that something is going on

107
00:06:07,520 --> 00:06:07,910
in the game.

108
00:06:07,940 --> 00:06:11,930
So in the next act, we're going to look at adding in particle effects to do just that.

109
00:06:12,410 --> 00:06:13,000
I'll see you there.
