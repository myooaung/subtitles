WEBVTT
1
00:00:04.070 --> 00:00:05.990
Hello everybody and welcome back.

2
00:00:05.990 --> 00:00:07.910
Now at the moment we've got it.

3
00:00:07.910 --> 00:00:14.060
So when we go in the corner we're the only thing that can open the doors and what we need to change

4
00:00:14.150 --> 00:00:21.380
is ourselves so we have some mass and then instead of saying the doors can open if I'm in this collision

5
00:00:21.380 --> 00:00:24.230
volume we need to say the doors can open.

6
00:00:24.380 --> 00:00:30.880
If there is a certain amount of mass in the collision volume let's find out more so in order to do this

7
00:00:30.880 --> 00:00:33.910
we're talking about the implementation in the open door CBP.

8
00:00:33.910 --> 00:00:35.890
So let's go and find that now.

9
00:00:35.890 --> 00:00:37.780
There are a couple of ways that you could do that.

10
00:00:37.900 --> 00:00:43.630
Since I'm already MVS code one of the easiest ways for me to do it is to open up explorer and just double

11
00:00:43.630 --> 00:00:49.170
click on Open Door CPM boom it's there ready for us we might need the header file as well so I'm just

12
00:00:49.170 --> 00:00:54.760
gonna open it up and I'm going to click and drag those tabs because I'm anal about where things need

13
00:00:54.760 --> 00:00:55.420
to be.

14
00:00:55.450 --> 00:00:57.510
So that's absolutely fine.

15
00:00:57.520 --> 00:01:04.030
We may or may not need to have anything extra in there and perhaps expose the mass that opens or something

16
00:01:04.030 --> 00:01:05.800
along those lines.

17
00:01:05.800 --> 00:01:06.030
Okay.

18
00:01:06.040 --> 00:01:14.170
So we've got our open door and the area that we're talking about is here the actor that opens this is

19
00:01:14.230 --> 00:01:21.180
this is what we've got set so far and then we say if the pressure plate is overlapping acts of the open

20
00:01:21.190 --> 00:01:26.170
so instead of talking about an actor that opens we could actually have this condition within the if

21
00:01:26.170 --> 00:01:32.350
statement itself to be something along the lines of get the total mass because we want to be able to

22
00:01:32.350 --> 00:01:36.800
put multiple things on there to make sure that it's working as we'd expect it to.

23
00:01:37.120 --> 00:01:43.420
And just saying that we know straight away that we're going to need a function that adds up the total

24
00:01:43.420 --> 00:01:46.190
mass that's been put in our collision volume.

25
00:01:46.700 --> 00:01:46.960
Wow.

26
00:01:46.960 --> 00:01:52.150
So we've got quite a quite a bit to go through here and I'm going to delete some empty lines as I find

27
00:01:52.150 --> 00:01:52.750
them as well.

28
00:01:53.640 --> 00:01:53.950
Okay.

29
00:01:53.980 --> 00:01:58.330
So over in the head of file let's go ahead and see what do we have.

30
00:01:58.330 --> 00:02:00.650
We've got the open door closed door function.

31
00:02:00.880 --> 00:02:03.130
So here we've got a float.

32
00:02:03.130 --> 00:02:07.510
Now it's a float because it's a it's not gonna be a whole No it's not gonna be an integer.

33
00:02:07.570 --> 00:02:14.790
When we put different things on or into that collision volume so we can call this the total mass and

34
00:02:14.790 --> 00:02:21.430
what it is what is it's the total mass of it's going to be the total mass of the actors that we place

35
00:02:21.460 --> 00:02:22.960
on it's a total mass of actors.

36
00:02:22.990 --> 00:02:29.470
I think that's that's fine that I think we can also call this a concept function it'll help protect

37
00:02:29.470 --> 00:02:29.710
us.

38
00:02:30.040 --> 00:02:35.590
And it's not going to change any of these other things at all other than whether the door is able to

39
00:02:35.650 --> 00:02:36.490
open or not.

40
00:02:36.960 --> 00:02:43.570
OK so we've got a total mass of actors let's go over and start implementing that so it's returning a

41
00:02:43.570 --> 00:02:44.170
floats.

42
00:02:44.170 --> 00:02:47.020
We know that it's called.

43
00:02:47.110 --> 00:02:47.560
Here we go.

44
00:02:47.560 --> 00:02:48.600
So we're in the open doors.

45
00:02:48.610 --> 00:02:53.770
It's going to be you open door almost typed in you grab them because we're so used to that.

46
00:02:53.770 --> 00:02:59.920
So you open a door and then we're talking about the mass total mass of actors look at its most auto

47
00:02:59.920 --> 00:03:00.630
fill it for me.

48
00:03:00.730 --> 00:03:01.590
Okay.

49
00:03:01.630 --> 00:03:03.520
And it's a cost function.

50
00:03:03.700 --> 00:03:07.780
Let's go down and define what is actually happening in here.

51
00:03:07.780 --> 00:03:15.490
Well I think we can instead of adding it up to begin with what we can do is set it up and have a value

52
00:03:15.490 --> 00:03:19.560
that we can change and then check it's working before we do any other code.

53
00:03:19.600 --> 00:03:29.240
So if we float the total mass and initialize it to zero remember the float requires the f on the end.

54
00:03:29.530 --> 00:03:31.180
And then what do we need.

55
00:03:31.180 --> 00:03:33.900
We just need to return the total mass.

56
00:03:34.150 --> 00:03:39.520
That's just the simple code at the moment and we can adjust this and to see whether our doors open or

57
00:03:39.520 --> 00:03:40.660
shut or not.

58
00:03:40.660 --> 00:03:40.890
OK.

59
00:03:40.900 --> 00:03:43.570
So let's scroll up and see where we would be using that.

60
00:03:43.570 --> 00:03:46.500
So we're talking about here is overlapping at.

61
00:03:46.520 --> 00:03:51.070
So this is where we're going to start using things so instead of saying if the if there's something

62
00:03:51.070 --> 00:03:57.550
on the pressure plate there is a certain actor we can say that if the total mass of actors when we call

63
00:03:57.550 --> 00:04:05.100
that function is greater than let's say 50 as a starting point then our door will open.

64
00:04:05.160 --> 00:04:07.050
Otherwise it remains shut.

65
00:04:07.620 --> 00:04:07.820
OK.

66
00:04:07.830 --> 00:04:12.990
So let's say that in going test at the moment the doors should remain shut.

67
00:04:13.020 --> 00:04:18.360
Let's compile and with the compiler completes what we should find is that the door remains shut which

68
00:04:18.360 --> 00:04:19.040
it doesn't.

69
00:04:19.050 --> 00:04:20.510
It's still reacting to me.

70
00:04:20.520 --> 00:04:21.650
That's very bizarre.

71
00:04:21.660 --> 00:04:27.330
Let's just recompile and see if it's one of those moments that unreal has had its press play.

72
00:04:27.330 --> 00:04:28.260
Now let's see.

73
00:04:28.260 --> 00:04:28.770
Yes.

74
00:04:28.770 --> 00:04:34.020
There we go it is unreal having a moment always confusing when that happens so what should now happen

75
00:04:34.020 --> 00:04:40.140
if we go back to our code if we change this total mass to something that's greater than 50 like adding

76
00:04:40.140 --> 00:04:41.950
as a six at the beginning there we go.

77
00:04:41.980 --> 00:04:42.920
It's now six.

78
00:04:43.230 --> 00:04:48.720
Now when we go ahead and recompile basically when we press play the doors should open because it will

79
00:04:48.720 --> 00:04:50.340
have met that requirement.

80
00:04:50.340 --> 00:04:53.220
Let's go ahead and press play a look at that.

81
00:04:53.220 --> 00:04:54.630
Our doors are now opening.

82
00:04:54.630 --> 00:04:58.910
So we have the basics of the code working there which is brilliant that's exactly what we want.

83
00:04:59.010 --> 00:05:06.010
But now we need to go ahead and make our code just a little bit richer so if we go back down to the

84
00:05:06.010 --> 00:05:08.650
total mass of actors at the moment the total mass.

85
00:05:08.680 --> 00:05:10.090
Yes we can start at zero.

86
00:05:10.090 --> 00:05:11.300
That's absolutely fine.

87
00:05:11.530 --> 00:05:13.840
But we need to do two things here.

88
00:05:13.960 --> 00:05:21.620
We need to find all overlapping actors and then we will need to add up their masses.

89
00:05:21.730 --> 00:05:23.090
So we've got two things to do.

90
00:05:23.100 --> 00:05:25.030
So we'll break it down into two chunks.

91
00:05:25.030 --> 00:05:28.330
How are we going to find the overlapping actors.

92
00:05:28.330 --> 00:05:28.560
OK.

93
00:05:28.590 --> 00:05:36.440
So if we go ahead and find some actors or find anything for that matter we need to store them somewhere.

94
00:05:36.460 --> 00:05:42.850
Now can you remember what we would use to store a series of things in it's going to be a container.

95
00:05:42.850 --> 00:05:45.230
It's going to be a t array.

96
00:05:45.240 --> 00:05:45.560
OK.

97
00:05:45.910 --> 00:05:50.160
So let's start defining this new T array that we're going to store things in.

98
00:05:50.410 --> 00:05:52.610
So T right there we go.

99
00:05:52.750 --> 00:05:54.190
Now we need to type.

100
00:05:54.210 --> 00:05:56.230
That's going to go within this t array.

101
00:05:56.330 --> 00:05:57.980
That's going to be actors.

102
00:05:58.000 --> 00:06:00.850
So we're going to have an actor.

103
00:06:00.850 --> 00:06:06.870
Now remember it's going to be a pointer to that actor and what shall we call it.

104
00:06:06.900 --> 00:06:11.340
Well quite clearly it's going to be called something like overlapping actors.

105
00:06:11.340 --> 00:06:14.670
The Open Door component is looking at the pressure plate.

106
00:06:14.670 --> 00:06:16.080
It doesn't know anything else.

107
00:06:16.110 --> 00:06:21.270
So we're going to have to go through the pressure plates in order to find out what's within it.

108
00:06:21.270 --> 00:06:26.200
So let's start by going to the pressure plate and I remember by hovering over we can see that it's a

109
00:06:26.210 --> 00:06:31.560
pointer so in order to access anything with it we're going to have to use the arrow operator.

110
00:06:31.620 --> 00:06:37.560
Now I'm going to search here for overlapping actors and we've used overlapping answers before.

111
00:06:37.560 --> 00:06:39.060
So is it overlapping.

112
00:06:39.150 --> 00:06:40.530
That's what we've used on there.

113
00:06:40.560 --> 00:06:41.580
But we don't want that.

114
00:06:41.580 --> 00:06:45.420
We want something to get anything that is overlapping.

115
00:06:45.420 --> 00:06:48.810
Now again you could be looking at the documents at this point in time as well.

116
00:06:48.810 --> 00:06:55.290
And here we go we've got get overlapping actors that's perfect that's exactly what we need and let's

117
00:06:55.290 --> 00:06:57.960
have a look at a signature.

118
00:06:57.960 --> 00:07:04.050
So we have a signature here that basically says we've got an out parameter.

119
00:07:04.050 --> 00:07:07.080
This is something you'll get your head round as you start reading through so we're going to have an

120
00:07:07.140 --> 00:07:13.410
out parameter that's called overlapping actors which is kind of fortunate because we've got something

121
00:07:13.410 --> 00:07:16.890
called overlapping actors that they kind of line up perfectly.

122
00:07:16.890 --> 00:07:18.110
Now we could leave it like that.

123
00:07:18.110 --> 00:07:18.990
It's absolutely fine.

124
00:07:18.990 --> 00:07:25.780
But we could be even more explicit and use our out macro as well going to put a semicolon on the end

125
00:07:25.780 --> 00:07:29.120
to get rid of my red squiggle in this function okay.

126
00:07:29.130 --> 00:07:36.360
So let's go over into unreal for a few moments because we need to give our self and the rest of the

127
00:07:36.360 --> 00:07:39.710
objects in our scene that we want to be able to move and way.

128
00:07:39.720 --> 00:07:40.980
That's the ultimate goal.

129
00:07:40.980 --> 00:07:42.030
Actual mass.

130
00:07:42.030 --> 00:07:48.000
So if we go ahead and select our cube and scroll down we can see that it's already got mass.

131
00:07:48.000 --> 00:07:52.110
We've already done that for both this and the cone itself.

132
00:07:52.110 --> 00:07:59.580
They both have some mass on them and I'm going to increase this to 15 and that means the total of these

133
00:07:59.580 --> 00:08:03.990
two will equal sixty five and I know we've got the threshold at the moment set at 60.

134
00:08:04.020 --> 00:08:04.940
So that sets.

135
00:08:04.950 --> 00:08:09.240
But what about the player themselves because we want the player to be able to open the door but can't

136
00:08:09.240 --> 00:08:15.500
get there but then add these two to the Coalition volume onto the pressure plate in order to do that.

137
00:08:15.900 --> 00:08:20.520
So we can go ahead and edit our default pawn and now we're in the default point or a couple of things

138
00:08:20.520 --> 00:08:25.340
we can do we can change the base heights of the eyes where we're looking from.

139
00:08:25.440 --> 00:08:30.390
That might be quite useful if we set that a little bit higher so above the Collision Center I'm not

140
00:08:30.390 --> 00:08:35.120
quite sure what numbers I would pick out start with maybe 50 and then take it from there.

141
00:08:35.130 --> 00:08:38.590
Remember that if you change anything you're going to have to compile and save.

142
00:08:38.670 --> 00:08:44.160
But the other thing that we really need our player to do is adhere to gravity have mass so we can do

143
00:08:44.160 --> 00:08:44.990
that as well.

144
00:08:45.840 --> 00:08:49.350
But where where do we in this list pick physics from.

145
00:08:49.380 --> 00:08:52.830
Well it's not part of the details of the default porn itself.

146
00:08:52.830 --> 00:08:57.080
However if we go down one level we've got a collision component.

147
00:08:57.150 --> 00:09:03.450
The collision is how our model or how our pawn the player is going to be interacting with the world

148
00:09:03.450 --> 00:09:03.870
around them.

149
00:09:03.870 --> 00:09:08.430
So if we go ahead and go to the collision component we see that we've got quite a few options here and

150
00:09:08.430 --> 00:09:09.830
probably physics here we go.

151
00:09:10.170 --> 00:09:14.730
So the moment we simulate physics we're no longer going to be able to fly around our world particle

152
00:09:15.110 --> 00:09:16.770
and look at that massing kilos.

153
00:09:16.770 --> 00:09:20.110
Let's go ahead and say it 70.

154
00:09:20.230 --> 00:09:26.230
So now we've got our our two objects in the scene weighing the right amounts to test the plate with

155
00:09:26.650 --> 00:09:32.980
and we have our player themselves also weighing enough that they will trigger the volume as well.

156
00:09:32.980 --> 00:09:34.600
So I'm going to save my default pawn.

157
00:09:34.630 --> 00:09:37.250
I'm going to come back into the game for a moment.

158
00:09:37.280 --> 00:09:42.370
I'm gonna press play and notice that we're now folding over we can grab stuff we can move it around

159
00:09:43.300 --> 00:09:49.570
and obviously the doors are open at the moment but now we would hear the gravity so we can't just fly

160
00:09:49.570 --> 00:09:52.330
around the room anymore and look at that.

161
00:09:52.390 --> 00:09:53.870
There's also something else we need to do.

162
00:09:53.950 --> 00:09:59.540
I've seemed to have uncontrolled movement when I'm not actually doing any inputs.

163
00:10:00.070 --> 00:10:05.050
Now I think we'll solve that in a moment because obviously we don't want to just move around the room

164
00:10:05.050 --> 00:10:13.030
like this and I'll explain why as well why we've got this drift going on so why when we pick stuff up

165
00:10:13.030 --> 00:10:19.780
then are we wobbling all over the place and then still moving when I'm not doing anything on the controller.

166
00:10:19.810 --> 00:10:28.450
Well if we eject from the scene and look back look at what shape we are we are a ball and we happen

167
00:10:29.200 --> 00:10:33.860
to be spinning at the moment so we need to stop that's stop spinning.

168
00:10:33.870 --> 00:10:34.430
Okay.

169
00:10:34.510 --> 00:10:39.620
That's the reason why we're unstable and we're moving around is that it just happens to be the shape.

170
00:10:39.670 --> 00:10:43.290
Now we've enabled physics where we adhere to the ground like a ball would.

171
00:10:43.300 --> 00:10:47.270
So when we pick something up we will start to roll about.

172
00:10:47.270 --> 00:10:52.330
And of course we can edit the default porn here and back in the collision component there's going to

173
00:10:52.330 --> 00:10:58.150
be an option and we stop the game for a moment of coming down and potentially changing our collision.

174
00:10:58.150 --> 00:11:05.470
That's one option but we can also dampen how we're moving now I'm going to leave you to experiment with

175
00:11:05.470 --> 00:11:12.380
both of these and see which one is going to work for you and that will be part of your challenge.

176
00:11:12.380 --> 00:11:14.080
Hello this is Mike from the future here.

177
00:11:14.090 --> 00:11:19.040
Now before we go ahead one of the things that I forgot to tell you guys about and I don't really want

178
00:11:19.040 --> 00:11:23.600
to put you through the mill trying to discover it's with the two objects that we are going to enable

179
00:11:23.600 --> 00:11:29.270
physics on if you select one of them like the cube here and we've been talking about the simulating

180
00:11:29.270 --> 00:11:31.980
physics parts of it which is absolutely fine.

181
00:11:32.180 --> 00:11:38.310
But if we go further down to the collision put a tick in this box here that generates overlap events.

182
00:11:38.390 --> 00:11:45.620
If you don't do that you will have a problem when you put your cube or your cone over into the collision

183
00:11:45.620 --> 00:11:46.520
volume.

184
00:11:46.520 --> 00:11:47.850
It won't register.

185
00:11:47.960 --> 00:11:50.890
Now I have a little issue later on because I forget to do that.

186
00:11:51.080 --> 00:11:56.090
But equally we go through a bit of a root cause analysis and try and work out why it's not happening.

187
00:11:56.090 --> 00:12:00.610
And if you had done the same how you could go ahead and debug it as well.

188
00:12:01.630 --> 00:12:01.990
OK.

189
00:12:02.010 --> 00:12:05.550
So for your challenge I'd like you to count the total mass.

190
00:12:05.630 --> 00:12:07.430
Now there are a few sine things as well.

191
00:12:07.650 --> 00:12:11.500
I'd like you to stop the player rolling around as we've just discovered.

192
00:12:11.590 --> 00:12:16.650
And I like to go ahead and create an outmatched crowd to mark up our code where we have the outer parameter

193
00:12:17.310 --> 00:12:21.960
and with your knowledge of for loops we have not used them yet in this section but we're going to need

194
00:12:21.960 --> 00:12:27.290
to in order to iterate through and add up the mass of our actors.

195
00:12:27.290 --> 00:12:32.610
There's going to be a bit of exploration here for you as well and we'll take it step by step as we go

196
00:12:32.610 --> 00:12:34.560
through this challenge solution.

197
00:12:34.560 --> 00:12:40.620
And finally I'd like you to make the master open the door a parameter we can edit in the editor.

198
00:12:40.730 --> 00:12:41.320
So go ahead.

199
00:12:41.340 --> 00:12:44.450
Possibly now and give it a go okay.

200
00:12:44.450 --> 00:12:45.680
So welcome back.

201
00:12:45.680 --> 00:12:51.260
I'm over and I'm real now in my default pawn blueprint on the collision component.

202
00:12:51.440 --> 00:12:54.530
And we've got these two linear and angular dampening.

203
00:12:54.680 --> 00:12:56.860
And remember is the fact that we're rolling abouts.

204
00:12:56.870 --> 00:13:00.670
That's the issue so this is going to be a reduction of angular movement.

205
00:13:00.710 --> 00:13:05.250
I'm not sure what value to give because I don't want to get too sticky either.

206
00:13:05.390 --> 00:13:10.130
So I'm going to start with a value of to compile save and go into the game and play it.

207
00:13:10.130 --> 00:13:17.270
Now if you had chosen the other option which was let's go back here if you'd chosen the linear dampening

208
00:13:17.300 --> 00:13:22.580
you would actually slow down your movement speed and how you fell as well in the world it was slowed

209
00:13:22.580 --> 00:13:25.790
down the effect of gravity on you essentially.

210
00:13:25.790 --> 00:13:29.810
So we picked that up we're still rolling about a little do you notice that the moment I picked that

211
00:13:29.810 --> 00:13:33.260
up I'm not going to move my player at all.

212
00:13:33.260 --> 00:13:33.800
There we go.

213
00:13:34.070 --> 00:13:37.250
So moving this around is causing me to actually move.

214
00:13:37.250 --> 00:13:41.400
So I'm going to increase that a little more and to go all the way up to 10.

215
00:13:41.420 --> 00:13:45.980
I don't know if 10 is a big number or a small number for our particular case but if we go ahead and

216
00:13:45.980 --> 00:13:47.880
press play we can test that.

217
00:13:47.990 --> 00:13:54.530
I can walk round now and yes there's still a little bit of movement but that's so much better than it

218
00:13:54.530 --> 00:13:55.470
was before.

219
00:13:55.490 --> 00:14:01.670
In fact I kind of like the little bit of physical interaction where I'm throwing this big heavy cube

220
00:14:01.670 --> 00:14:06.640
because this one is big and heavy and it's affecting me more than this light cone.

221
00:14:06.650 --> 00:14:13.130
Obviously their sizes don't reflect their weights that's much heavier than this but you can see it has

222
00:14:13.130 --> 00:14:18.430
a physical impact on me the player when I go ahead and lift it and move it and throw about the room.

223
00:14:18.530 --> 00:14:19.270
I like that.

224
00:14:19.730 --> 00:14:20.140
OK.

225
00:14:20.420 --> 00:14:22.600
So that's part one done.

226
00:14:22.640 --> 00:14:27.230
Let's go over to our code we have here our potential out parameter.

227
00:14:27.240 --> 00:14:29.700
Define it over here as well.

228
00:14:29.970 --> 00:14:30.490
OK.

229
00:14:30.560 --> 00:14:33.050
So back to the open door.

230
00:14:33.050 --> 00:14:34.520
Where are we next.

231
00:14:34.520 --> 00:14:34.730
OK.

232
00:14:34.760 --> 00:14:39.290
So we've got a couple of things that we can start with here we can even go and assign the property to

233
00:14:39.290 --> 00:14:40.850
the mass that's required.

234
00:14:40.910 --> 00:14:46.850
So this total mass here that we've hardcoded at the moments on line 39 is taken out.

235
00:14:46.880 --> 00:14:48.950
I think we will do that in a bit.

236
00:14:49.010 --> 00:14:51.890
Let's sort out the adding up of their masses.

237
00:14:52.040 --> 00:14:53.510
So the total mass here.

238
00:14:53.510 --> 00:14:56.260
How are we going to go ahead and get that.

239
00:14:56.270 --> 00:15:00.070
Well first of all how do we go ahead and get the mass.

240
00:15:00.080 --> 00:15:03.770
Well first of all we initialize it to zero at the top here.

241
00:15:03.890 --> 00:15:08.100
So we're going to have a for loop and some parentheses.

242
00:15:08.150 --> 00:15:13.560
Now in this we are going to be looking at our actor and much like before.

243
00:15:13.640 --> 00:15:15.980
Because it's a point to use the arrow operator.

244
00:15:15.980 --> 00:15:20.810
And once again we're going to look at finding a component by class and then we're going to need our

245
00:15:20.810 --> 00:15:24.020
chevrons and something's going to have to be in there.

246
00:15:24.020 --> 00:15:25.400
And I don't know what it is.

247
00:15:25.430 --> 00:15:27.440
You probably don't know what it is either.

248
00:15:27.440 --> 00:15:28.430
Let's go and have a look.

249
00:15:28.820 --> 00:15:29.300
OK.

250
00:15:29.320 --> 00:15:32.900
So quick bit of google fu I have.

251
00:15:32.900 --> 00:15:33.920
Here we go get mass.

252
00:15:33.940 --> 00:15:37.590
I literally typed into Google find an actor's mass.

253
00:15:37.610 --> 00:15:38.300
You E4.

254
00:15:38.300 --> 00:15:40.820
This is the sort of thing that you're going to have to do.

255
00:15:41.180 --> 00:15:46.880
Because we can't possibly cover everything so we can see here that we're also going to have to hash

256
00:15:46.880 --> 00:15:49.970
include something as well in order to make this work.

257
00:15:50.000 --> 00:15:54.650
So let's go ahead and hash include that first of all scroll all the way up to the top.

258
00:15:54.650 --> 00:15:57.850
I can't remember this is going to come out in the right order.

259
00:15:57.850 --> 00:15:59.600
No it's not so let's lift it up.

260
00:15:59.660 --> 00:16:01.020
So there we go.

261
00:16:01.040 --> 00:16:02.230
It's in alphabetical order.

262
00:16:02.690 --> 00:16:03.420
Okay.

263
00:16:03.470 --> 00:16:07.880
The next thing that we need to do is go all the way back down here and I can't remember what it was

264
00:16:07.880 --> 00:16:10.940
called it was called you primitive components.

265
00:16:10.970 --> 00:16:16.340
Now we should be able to get mass from that so we're going to need our brackets at the end.

266
00:16:16.340 --> 00:16:18.310
And then I believe this is a pointer as well.

267
00:16:18.320 --> 00:16:21.360
And if I type in mass was it gets mass.

268
00:16:21.380 --> 00:16:24.590
There we go get mass let's finish off that line.

269
00:16:24.600 --> 00:16:25.210
Okay brilliant.

270
00:16:25.220 --> 00:16:28.910
So we're returning the mass which is exactly what we want.

271
00:16:28.910 --> 00:16:30.760
So we're returning a floats.

272
00:16:30.770 --> 00:16:35.870
Now the issue here is we're not adding up the total mass so at the moment it's just coming back out

273
00:16:35.900 --> 00:16:36.440
at zero.

274
00:16:36.860 --> 00:16:43.460
So what we could do is we could save the total mass can then be reassigned the value of the total mass

275
00:16:44.060 --> 00:16:47.610
plus the actors mass that we've got in there.

276
00:16:47.690 --> 00:16:49.270
Now there's a shorthand for that.

277
00:16:49.280 --> 00:16:51.230
Can you remember what it is.

278
00:16:51.230 --> 00:16:51.830
Here we go.

279
00:16:52.050 --> 00:16:53.420
So that makes it nice in the.

280
00:16:53.450 --> 00:16:58.640
So that should add up the total mass and return the new total mass after it's finished.

281
00:16:58.640 --> 00:17:00.770
Going round these four loops.

282
00:17:00.770 --> 00:17:01.010
OK.

283
00:17:01.010 --> 00:17:05.270
So I think that's all we need to do at the moment let's go ahead and play our game and test

284
00:17:08.510 --> 00:17:14.460
let's compile our code and let's press play first of all can we open it.

285
00:17:14.460 --> 00:17:15.570
Yes we can.

286
00:17:15.570 --> 00:17:16.110
Excellent.

287
00:17:16.110 --> 00:17:21.510
If we drag and drop this Cuban it is not working.

288
00:17:21.510 --> 00:17:22.000
Mm hmm.

289
00:17:22.140 --> 00:17:23.080
Interesting.

290
00:17:23.130 --> 00:17:25.160
Let's add this to it as well.

291
00:17:26.510 --> 00:17:28.550
So something's not working there.

292
00:17:28.570 --> 00:17:33.970
The easiest way of starting to work out what isn't working is to lock out the actors that are indeed

293
00:17:33.970 --> 00:17:35.210
within that collision volume.

294
00:17:35.350 --> 00:17:41.110
So let's go and say that we need to lock out so we log log.

295
00:17:41.110 --> 00:17:44.360
Temp I'll just put it as a warning for the moment.

296
00:17:44.590 --> 00:17:53.200
And then what are we going to say we're going to say that something's a percentage s is on the pressure

297
00:17:53.200 --> 00:17:53.900
plate.

298
00:17:54.070 --> 00:17:54.500
Okay.

299
00:17:54.520 --> 00:17:56.230
And what's this going to be.

300
00:17:56.230 --> 00:18:00.070
Well we can just do actor get name.

301
00:18:00.070 --> 00:18:01.460
Perfect.

302
00:18:01.570 --> 00:18:04.760
We need a semicolon on the end and we need to start the front.

303
00:18:04.780 --> 00:18:06.370
The reference set for the F string.

304
00:18:06.370 --> 00:18:13.910
Okay so if that saved Let's go and compile compiles complete let's press play.

305
00:18:14.010 --> 00:18:19.470
Now we should see if I turn the output lock on this press play again that when I go in there it says

306
00:18:19.470 --> 00:18:21.240
the default pawn is on the pressure plate.

307
00:18:21.240 --> 00:18:21.770
Brilliant.

308
00:18:22.200 --> 00:18:28.950
But if we pop cube in there it's not registering the cube at all.

309
00:18:28.950 --> 00:18:30.770
Now there could be a few reasons for this.

310
00:18:30.780 --> 00:18:35.710
I think it's something to do with the way the cube is set up so let's go ahead and have a look.

311
00:18:35.740 --> 00:18:38.960
Scroll down well if we got a.

312
00:18:39.120 --> 00:18:40.410
So we are colliding with something.

313
00:18:40.410 --> 00:18:45.600
This is a good place to start looking and we're not generating and the overlap events.

314
00:18:45.780 --> 00:18:48.540
Let's put a tick in that box and see what happens.

315
00:18:48.630 --> 00:18:49.500
And press play.

316
00:18:49.800 --> 00:18:50.060
Okay.

317
00:18:50.100 --> 00:18:53.700
So let's see if we can just throw that into the corner for a bit of fun.

318
00:18:53.700 --> 00:18:54.830
Off you go.

319
00:18:54.840 --> 00:18:57.000
So Cube 2 is on the pressure plate brilliant.

320
00:18:57.000 --> 00:19:01.230
And if we do this with the cone as well nothing is coming up here.

321
00:19:01.230 --> 00:19:06.240
If we inject ourselves with F eight I believe this is the setting we can change at runtime generate

322
00:19:06.240 --> 00:19:08.060
overlap events.

323
00:19:08.220 --> 00:19:09.480
Excellent.

324
00:19:09.480 --> 00:19:10.620
Is the door now open.

325
00:19:10.620 --> 00:19:11.160
No it doesn't.

326
00:19:11.160 --> 00:19:16.840
Perhaps we do have to do this outside so let's generate overlap events here.

327
00:19:16.890 --> 00:19:27.090
Press play pop our cube in the corner and also pop the cone over there in the corner as well so we've

328
00:19:27.090 --> 00:19:32.790
got the cone is on the pressure plate the Cuban on the pressure plate and they're both opening.

329
00:19:32.790 --> 00:19:33.760
Brilliant.

330
00:19:33.840 --> 00:19:36.370
So that's something to watch out for that we need the.

331
00:19:36.390 --> 00:19:37.900
Is overlapping on.

332
00:19:38.070 --> 00:19:39.850
Did you manage to get that.

333
00:19:39.870 --> 00:19:41.120
How is your detective work.

334
00:19:41.130 --> 00:19:48.360
When it came to find Danny is overlapping I hope now you've got your doors opening by placing other

335
00:19:48.360 --> 00:19:52.580
things in the scene these actors into this collision volume and I'll see you all.

336
00:19:52.980 --> 00:19:55.950
Oh before I go I completely forgot I was supposed to.

337
00:19:56.100 --> 00:19:57.150
That's part of the challenge.

338
00:19:57.150 --> 00:20:00.030
Here we go to make this into a new component.

339
00:20:00.030 --> 00:20:09.300
So what what should we call this let's call it mass to open doors so mass to open doors or door.

340
00:20:09.390 --> 00:20:10.920
That's absolutely fine.

341
00:20:10.920 --> 00:20:15.500
It's not defined anywhere yet so let's save the implementation come over here.

342
00:20:15.690 --> 00:20:21.960
And this is going to be a new property edit anywhere open angle I think that it's good to have it at

343
00:20:21.960 --> 00:20:22.620
the top here.

344
00:20:22.860 --> 00:20:24.090
So it's going to be a float.

345
00:20:24.090 --> 00:20:29.850
We know that and it's going to be mass to open doors.

346
00:20:29.870 --> 00:20:34.470
Hey we're going to set it to have a default value of something.

347
00:20:34.510 --> 00:20:36.120
We don't want it being absolutely random.

348
00:20:36.460 --> 00:20:39.910
Let's set it to 50 kilos just like we've got before.

349
00:20:39.910 --> 00:20:43.570
And then this will all make sense.

350
00:20:44.110 --> 00:20:47.580
We need a semicolon on the end of was nothing further than will work.

351
00:20:47.590 --> 00:20:48.000
OK.

352
00:20:48.010 --> 00:20:50.080
So that's hopefully the final change we need to make.

353
00:20:50.110 --> 00:20:51.420
And then we can go ahead.

354
00:20:51.620 --> 00:20:55.080
Then we can go ahead and compile it's complete.

355
00:20:55.210 --> 00:21:00.310
Let's play the game can pop some things in the scene itself.

356
00:21:00.550 --> 00:21:04.750
OK so we've got some objects in the right place we can see that the doors are open.

357
00:21:04.760 --> 00:21:06.010
Let's inject ourselves.

358
00:21:06.020 --> 00:21:07.300
Go to the door.

359
00:21:07.340 --> 00:21:15.310
This particular open door component we've now got a mass to open doors so if I set that at 90 look at

360
00:21:15.310 --> 00:21:16.700
that.

361
00:21:16.830 --> 00:21:21.600
Now that's pretty cool because that means that we can dynamically change each door individually.

362
00:21:21.670 --> 00:21:26.560
So if you've got a very large door perhaps it's going to require more mass to open.

363
00:21:26.560 --> 00:21:29.500
There are lots of potential things that you could do with this.

364
00:21:29.530 --> 00:21:29.830
Okay.

365
00:21:29.830 --> 00:21:30.740
Brilliant.

366
00:21:30.760 --> 00:21:31.080
Okay.

367
00:21:31.090 --> 00:21:33.090
So how did you guys get on.

368
00:21:33.100 --> 00:21:37.810
I know probably one of the most challenging things here was the overlapping actors it was very easy

369
00:21:37.810 --> 00:21:38.710
to miss that.

370
00:21:39.070 --> 00:21:43.090
However by using a combination of logging out to the console.

371
00:21:43.090 --> 00:21:45.190
Okay I can trigger it.

372
00:21:45.190 --> 00:21:51.080
But why can't the other actors in the scene must be something to do with how they're set up.

373
00:21:51.100 --> 00:21:53.990
That's one of the benefits of logging outs to the console.

374
00:21:54.150 --> 00:21:55.300
That's just not how you got on.

375
00:21:55.430 --> 00:21:57.310
And I'll see you well in the next lecture.
