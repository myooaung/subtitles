WEBVTT
0
1
00:00:00.240 --> 00:00:01.710
Hello and welcome back.
1

2
00:00:01.710 --> 00:00:05.290
In the previous lesson we learned how to print strings to the terminal.
2

3
00:00:05.340 --> 00:00:08.000
A good step forwards for our Triple X game.
3

4
00:00:08.130 --> 00:00:14.970
Now Triple X is based around three numbers. So we need a way of working with some data in our code which
4

5
00:00:14.970 --> 00:00:21.270
is why we're going to be having our first look at variables in this lesson. We can use variables to store
5

6
00:00:21.300 --> 00:00:24.360
data that we can then use in our program.
6

7
00:00:24.360 --> 00:00:30.180
And a lot of our game is going to be based around variables. To use variables in C++
7

8
00:00:30.180 --> 00:00:34.750
you first must declare them in your code. When we declare a variable
8

9
00:00:34.770 --> 00:00:39.410
we are reserving a space in the computer's memory for it.
9

10
00:00:39.420 --> 00:00:43.590
Here's an example of a variable being declared in C++.
10

11
00:00:43.590 --> 00:00:52.440
Variables are declared by giving a data type and a name. "int" is the data type here and "a" here is the
11

12
00:00:52.440 --> 00:00:53.680
variable's name.
12

13
00:00:53.910 --> 00:00:58.290
Here we can see after the variable name we have an equal sign and then a value.
13

14
00:00:58.290 --> 00:01:01.050
This is giving a value to our variable.
14

15
00:01:01.110 --> 00:01:05.460
When we declare it this is known as initializing a variable.
15

16
00:01:05.460 --> 00:01:11.250
If we didn't initialize a variable meaning if we didn't have the equal sign and the value here this
16

17
00:01:11.250 --> 00:01:16.530
would be known as an uninitalized variable. We'll be coming back to uninitialized variables at some
17

18
00:01:16.530 --> 00:01:17.880
point in the section.
18

19
00:01:17.880 --> 00:01:23.850
But for now let's go ahead and declare a variable in our file. Inside our main function,
19

20
00:01:23.850 --> 00:01:26.820
let's add two new lines underneath our messages.
20

21
00:01:26.820 --> 00:01:31.500
We print out at the start of our game just to make it a bit easier to read our code.
21

22
00:01:31.500 --> 00:01:35.610
Now let's declare a new variable that we can use in our game.
22

23
00:01:35.610 --> 00:01:41.190
First we need the data types so we're going to be working with an integer so to declare an integer in
23

24
00:01:41.190 --> 00:01:48.780
C++ we're going to write "int" and then we want to add a space and then name the variable let's just
24

25
00:01:48.780 --> 00:01:49.730
name it "a".
25

26
00:01:50.310 --> 00:01:52.620
So this variables name is now "a".
26

27
00:01:52.620 --> 00:01:59.610
Now let's add another space and then initialize this variable by inserting an equal sign and then another
27

28
00:01:59.610 --> 00:02:01.680
space and then the value.
28

29
00:02:01.680 --> 00:02:04.740
We want this variable to have so we can use any number here.
29

30
00:02:04.770 --> 00:02:08.960
I'm just gonna use four and that's finish this line off with a semicolon.
30

31
00:02:08.970 --> 00:02:14.430
I'm also going to add another new line so it's separated from the return statement of the main function.
31

32
00:02:14.430 --> 00:02:16.830
This is just to make it a bit easier to read.
32

33
00:02:16.830 --> 00:02:17.360
Okay great.
33

34
00:02:17.370 --> 00:02:23.760
We've now declared an integer variable in our file with the name of "a" and I've initialized it here with
34

35
00:02:23.760 --> 00:02:25.530
the value of 4.
35

36
00:02:25.530 --> 00:02:30.810
Now let's try output the value of our variable to the terminal so we can see it when we've run our program
36

37
00:02:31.260 --> 00:02:32.050
to do this.
37

38
00:02:32.070 --> 00:02:39.240
Let's add another two new lines and then let's write out "cout" just like we did in the previous lesson
38

39
00:02:39.270 --> 00:02:45.180
but this time instead of using a string we can print the value of our variable just by inserting its
39

40
00:02:45.180 --> 00:02:48.900
name here which is "a" and then followed with a semicolon.
40

41
00:02:49.410 --> 00:02:59.190
Okay great so let's save our file and then compile our code and that's run Triple X. So it's now printing
41

42
00:02:59.190 --> 00:03:04.860
our variable but it's printing it on the end of my line so I won't need to solve this problem.
42

43
00:03:04.890 --> 00:03:10.380
Pause here and think back to the previous lesson and try to make the value of our variable get printed
43

44
00:03:10.380 --> 00:03:14.980
out onto a new line.
44

45
00:03:15.010 --> 00:03:20.890
Okay so I've now changed my code so the value of my variable is now printed out onto a new line. To do
45

46
00:03:20.890 --> 00:03:21.320
this
46

47
00:03:21.340 --> 00:03:26.530
I called end line from the standard namespace just like we did in the previous lesson.
47

48
00:03:26.590 --> 00:03:31.420
Now Triple X is all about trying to figure out a three number code.
48

49
00:03:31.420 --> 00:03:37.270
The player is going to receive hints at the start of the game as to what the three number code adds up
49

50
00:03:37.270 --> 00:03:42.310
to and also the result of the code being multiplied by itself.
50

51
00:03:42.310 --> 00:03:49.360
Our variable that is named "a" is going to represent the first number of this code and I want you to declare
51

52
00:03:49.480 --> 00:03:55.750
two new variables to represent the other two numbers of the code. Declare an integer and give it the
52

53
00:03:55.750 --> 00:04:02.530
name of "b" and then initialize it with any value you want and declare another integer and give it the
53

54
00:04:02.530 --> 00:04:07.100
name of "c" and again initialize it with any value you want.
54

55
00:04:07.150 --> 00:04:11.440
So pause here to declare and initialize your variables and then we can continue
55

56
00:04:14.780 --> 00:04:18.930
so hopefully you should have declared two more integer variables in your code.
56

57
00:04:18.940 --> 00:04:21.400
You should have a, b, and c.
57

58
00:04:21.460 --> 00:04:28.930
Now we want to declare "b" and "c" close to where we declared "a". We don't want "b" and "c" to be declared a further
58

59
00:04:28.930 --> 00:04:30.320
down in our files.
59

60
00:04:30.320 --> 00:04:35.600
So make sure that you've declared them underneath "a" on separate lines like I have in my code.
60

61
00:04:35.620 --> 00:04:41.740
Now how can we go about printing out to the terminal the values of a, b, and c being added together.
61

62
00:04:42.100 --> 00:04:48.400
Well it's pretty easy to do follow along with me here instead of printing out a value, lets prints out the
62

63
00:04:48.400 --> 00:04:55.630
sum of a, b, and c by making use of the addition operator which is the plus symbol so we can type out
63

64
00:04:55.690 --> 00:05:04.840
"a + b + c" then just make sure that the line ends with a semicolon.
64

65
00:05:04.840 --> 00:05:06.260
Now let's compile our code.
65

66
00:05:07.660 --> 00:05:09.220
And let's run the program.
66

67
00:05:10.440 --> 00:05:15.240
And we can see now that the sum of our a, b, and c variables now get printed out to the terminal.
67

68
00:05:15.270 --> 00:05:21.030
Awesome, but there's an even cooler way to do this in our code underneath where we declared c we can
68

69
00:05:21.030 --> 00:05:28.980
insert a new line and another new line and we can declare another integer called "sum" and we can initialize
69

70
00:05:28.980 --> 00:05:39.210
it by typing out "a + b + c" followed by a semicolon and instead of printing out "a + b + c" we can
70

71
00:05:39.210 --> 00:05:46.620
just print out the variable which has named "sum" now if we compile our code and run the program we get
71

72
00:05:46.620 --> 00:05:53.010
the same results but we've learned that we can initialize variables by adding other variables together
72

73
00:05:53.100 --> 00:05:56.040
that we've declared previously in our code.
73

74
00:05:56.070 --> 00:05:56.780
Awesome stuff.
74

75
00:05:56.790 --> 00:06:02.810
So we've used the addition operator here which is just one of many arithmetic operators.
75

76
00:06:02.850 --> 00:06:08.670
Now notice that one of the operators here is the multiplication operator for the final challenge of
76

77
00:06:08.670 --> 00:06:09.650
this lesson.
77

78
00:06:09.690 --> 00:06:17.280
I want you to declare the product of a, b, and c meaning the values of a, b, and c being multiplied together.
78

79
00:06:17.280 --> 00:06:19.220
Then print this out on a new line.
79

80
00:06:19.230 --> 00:06:23.620
So we end up printing the sum and the product of our variables.
80

81
00:06:23.620 --> 00:06:25.530
so pause here to do this now.
81

82
00:06:29.410 --> 00:06:36.050
Okay, so to print out the product of a, b, and c we can start off by declaring a new integer underneath
82

83
00:06:36.050 --> 00:06:43.670
where we declare the sum we can declare a new int and name it "product" and we can initialize it by making
83

84
00:06:43.670 --> 00:06:46.000
use of the multiplication operator.
84

85
00:06:46.130 --> 00:06:53.150
We can type a and then insert the multiply symbol also known as the asterisk to multiply it by b and
85

86
00:06:53.150 --> 00:07:00.560
then we can do this again to multiply a, b, and c together and we can finish off this line with a semicolon.
86

87
00:07:00.560 --> 00:07:03.880
Now let's print out the product to the terminal on a new line.
87

88
00:07:03.980 --> 00:07:09.650
Now instead of inserting a new line in our code we can add a space where we print out some and we can
88

89
00:07:09.650 --> 00:07:15.230
use the two left angled brackets again and then we can call end line from the standard namespace.
89

90
00:07:15.230 --> 00:07:27.190
And now on a new line we can call cout product followed by a new line. Then save our work and let's compile
90

91
00:07:27.430 --> 00:07:31.180
our code and then that's run Triple X.
91

92
00:07:31.180 --> 00:07:35.680
Amazing, so we are now printing out the product and the sum of the variables that we've declared and
92

93
00:07:35.680 --> 00:07:40.120
we've learnt how to make use of the addition and multiplication operators.
93

94
00:07:40.300 --> 00:07:44.020
And most of all we've learnt how to declare variables.
94

95
00:07:44.020 --> 00:07:44.650
Great stuff.
95

96
00:07:44.650 --> 00:07:46.980
So that wraps up this lesson when you're ready.
96

97
00:07:47.050 --> 00:07:49.250
I'll see you in the next one.
