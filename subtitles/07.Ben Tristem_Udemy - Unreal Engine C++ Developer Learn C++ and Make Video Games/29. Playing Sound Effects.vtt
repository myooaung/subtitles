WEBVTT
1
00:00:03.990 --> 00:00:04.130
OK.

2
00:00:04.580 --> 00:00:09.680
So when I pretty far through getting this project implemented, as with any good game project, pipeline

3
00:00:09.800 --> 00:00:13.610
audio here is being left until the final stages of development.

4
00:00:14.360 --> 00:00:19.820
On a serious note, though, sound effects and audio in general are a really important part of getting

5
00:00:19.820 --> 00:00:20.900
the game feeling right.

6
00:00:21.050 --> 00:00:26.180
It's often one of the aspects which, if you're ever struggling to make a new prototype, feel right

7
00:00:26.240 --> 00:00:29.090
or if it ever feels like something is just missing.

8
00:00:29.270 --> 00:00:32.450
It's most probably the audio that hasn't yet been put in.

9
00:00:32.650 --> 00:00:36.680
In this case, though, we've been mainly focused on getting through the logic because we already had

10
00:00:36.680 --> 00:00:40.760
an idea of what the game was going to be and a kind of definitive end go.

11
00:00:41.150 --> 00:00:43.580
So we just wanted to get through all of the implementation.

12
00:00:43.970 --> 00:00:45.320
But this means we've now done that.

13
00:00:45.380 --> 00:00:49.010
So we're finally going to get round to adding some of our sound effects.

14
00:00:49.280 --> 00:00:54.470
So if we begin in the projectile class, just because we had this open last in the headphones, we're

15
00:00:54.470 --> 00:01:01.250
going to want to create two new pointers to the type of you signed bass one.

16
00:01:01.310 --> 00:01:02.450
Our name hits sound.

17
00:01:03.590 --> 00:01:05.660
And one that our name launch signed.

18
00:01:07.840 --> 00:01:12.970
Both of these can reduce the you property from our hit particle has already got the effects category

19
00:01:12.970 --> 00:01:13.210
then.

20
00:01:14.530 --> 00:01:19.450
And then in the code file, we can start by playing the launch, signed immediately on this.

21
00:01:19.530 --> 00:01:20.560
Actors begin play.

22
00:01:20.740 --> 00:01:23.680
So as soon as it spawned, this will make a noise.

23
00:01:23.980 --> 00:01:27.460
So we once again want to make use of the you game play static's.

24
00:01:27.610 --> 00:01:30.490
I'm then going to use the play sound at location.

25
00:01:33.110 --> 00:01:38.860
Asking in a reference to this, we then need these signed that we want to play, which will be our launch

26
00:01:38.860 --> 00:01:39.180
signed.

27
00:01:39.430 --> 00:01:44.990
And then finally, the location at which this will be played, which will be the return of the get actor

28
00:01:45.000 --> 00:01:46.180
location function again.

29
00:01:46.330 --> 00:01:47.290
Just a quick aside here.

30
00:01:47.290 --> 00:01:51.430
We're using the place end at location, which is one of the main two options you get.

31
00:01:51.460 --> 00:01:54.410
You also have the option to play more to these signs in a row.

32
00:01:55.120 --> 00:02:00.700
The system has a really good out of the box 3D sound system, which really makes the most of showing

33
00:02:00.700 --> 00:02:01.840
where the sound was spawned.

34
00:02:01.960 --> 00:02:04.870
Having things like automatic falloff and much more.

35
00:02:05.170 --> 00:02:07.660
If you wanted to dive into the sound side of things.

36
00:02:07.720 --> 00:02:12.970
So this just means that the sound effects can feel much more immersive using these features in comparison,

37
00:02:13.000 --> 00:02:18.010
play sign to 2D can be used when you want audio to be kind of an equal volume wherever you are in the

38
00:02:18.010 --> 00:02:18.310
world.

39
00:02:18.520 --> 00:02:23.830
And this might be used for things like menu updates, music, a level up doing sound effects and things

40
00:02:23.830 --> 00:02:24.370
like that.

41
00:02:24.490 --> 00:02:29.410
So these are things which are not going to be in the mind as a player, something which would be specific

42
00:02:29.410 --> 00:02:31.030
to a location at which is happening.

43
00:02:31.330 --> 00:02:35.170
So I was just a quick aside to explain why we're using the at location option.

44
00:02:35.230 --> 00:02:40.660
If you were aware of the other options, were they implemented, then I'm just going to copy this and

45
00:02:40.900 --> 00:02:45.970
paste this into the on hit function below where we're spawning our particle effect.

46
00:02:46.270 --> 00:02:51.700
The only thing that I want to change here in the place and its location code is will change the launch

47
00:02:51.700 --> 00:02:54.760
side to be the hit site and have that done.

48
00:02:54.760 --> 00:02:59.680
We can also improve the effect of a pawn being destroyed by adding a destruction side.

49
00:02:59.920 --> 00:03:04.180
So let's go over to the base class and add this here, because again, this is another thing.

50
00:03:04.600 --> 00:03:10.450
The turret and the tank classes will both need to have the destruction represented by a side effect

51
00:03:10.450 --> 00:03:10.810
as well.

52
00:03:11.260 --> 00:03:14.290
So I'm going to quickly grab the code from the projectile.

53
00:03:14.320 --> 00:03:15.730
Had a class as we can.

54
00:03:15.730 --> 00:03:18.670
We use all of this in the pawn based class.

55
00:03:19.060 --> 00:03:23.920
I'll just paste this block into the variable section and rename it to Death Signed.

56
00:03:26.040 --> 00:03:27.690
Then there's not really too much to say here.

57
00:03:27.740 --> 00:03:31.920
But in the PWN base, we're just going to repeat the previous steps.

58
00:03:32.010 --> 00:03:37.950
And in the handle destruction function, we'll call these spawn sound at location on the game play Static's

59
00:03:38.220 --> 00:03:42.870
referencing this and then playing the death signed at the actors current location.

60
00:03:47.510 --> 00:03:53.240
With all of that saved, we can return to opening the editor if we compile this, we can check our new

61
00:03:53.240 --> 00:03:54.200
implementation again.

62
00:03:54.680 --> 00:03:59.560
So when that's ready, we just need to assign our new sound effects in both of the pun blueprints.

63
00:03:59.570 --> 00:04:05.360
The turret and the tanks will want to assign the explode signed to the death signed template.

64
00:04:08.500 --> 00:04:13.240
And then for the projectile, we're just going to use the same side effect here for both the launch

65
00:04:13.330 --> 00:04:16.390
and the impact effects, but it will get the point across.

66
00:04:16.480 --> 00:04:21.850
And I've made these two separate side effects, because if you wanted to come back and download or create

67
00:04:21.850 --> 00:04:25.750
your own sound effects for this project, you can swap these out for something, hopefully spending

68
00:04:25.810 --> 00:04:31.790
a little bit better than the the sound files that I've come up with, with all of those properties filter.

69
00:04:31.960 --> 00:04:34.570
We can now press play and we can test our sound.

70
00:04:34.750 --> 00:04:39.730
So when we spawn a projectile and when it hits something, we can see that's making the noise that we'd

71
00:04:39.730 --> 00:04:40.270
expected.

72
00:04:40.720 --> 00:04:46.930
And then if we go over to one of the turret turrets and destroy that, we also get the explosion site.

73
00:04:47.140 --> 00:04:49.600
Finally, just to check that there's nothing very weird going on.

74
00:04:49.660 --> 00:04:54.940
I'm gonna go over with the tank as well to make sure that we hear the explosion sound when our tank

75
00:04:54.940 --> 00:04:56.440
is destroyed, which it is.

76
00:04:56.500 --> 00:05:01.450
And I think that's now all coming together and feeling much more like everything that's kind of happening

77
00:05:01.450 --> 00:05:03.580
is having much more of an effect on the world.

78
00:05:03.820 --> 00:05:08.530
And that's really our main goal in this last part of this section.
