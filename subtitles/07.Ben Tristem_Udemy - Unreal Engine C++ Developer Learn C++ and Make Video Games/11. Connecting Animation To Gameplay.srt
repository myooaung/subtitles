1
00:00:04,840 --> 00:00:05,570
Hello and welcome.

2
00:00:05,590 --> 00:00:09,920
In this lecture, we are going to be learning how to connect up an animation, swacked gameplay.

3
00:00:10,480 --> 00:00:16,780
And we're going to get the speed of our character hooked up to the BLENDE space so that we can get this

4
00:00:16,870 --> 00:00:17,260
effect.

5
00:00:17,290 --> 00:00:18,940
Let's dive in and see how it's done.

6
00:00:20,870 --> 00:00:25,940
Okay, so we have got ourselves a bland space to integrate in to this.

7
00:00:26,030 --> 00:00:27,780
A BP shooter character.

8
00:00:28,120 --> 00:00:32,210
The first thing I'm gonna do is I'm going to go ahead and delete these two blends that we use as an

9
00:00:32,210 --> 00:00:37,190
example of how the animation blueprints and graph works.

10
00:00:37,730 --> 00:00:42,370
And instead, we're going to bring in from the asset browser in the bottom right.

11
00:00:42,500 --> 00:00:45,040
The Blende space that we've just created, this B.

12
00:00:45,070 --> 00:00:46,520
S underscore locomotion.

13
00:00:46,910 --> 00:00:53,870
If you drag that in to your Annam graph, you'll see it brings in this little green node here and very

14
00:00:53,870 --> 00:01:00,320
much like the other blende nodes and things like that, we've got ourselves and UNimposed that we can

15
00:01:00,560 --> 00:01:02,290
drag into our outputs.

16
00:01:02,510 --> 00:01:05,930
And if I compile, you can see it's just in our default space.

17
00:01:07,190 --> 00:01:12,620
And then you can see this little visualization, which is quite handy of the little Blende space.

18
00:01:12,710 --> 00:01:20,510
And we could go ahead and change the values in here statically or we could input some variables into

19
00:01:20,510 --> 00:01:20,780
here.

20
00:01:22,010 --> 00:01:24,230
Well, we're probably going to want to do the latter.

21
00:01:24,260 --> 00:01:26,180
So I'm gonna go ahead and delete the two variables.

22
00:01:26,180 --> 00:01:32,960
We've got the left and the forward because we know now that what we want is an angle which is going

23
00:01:32,960 --> 00:01:33,710
to be a float.

24
00:01:34,070 --> 00:01:35,390
So let's change that over to float.

25
00:01:35,840 --> 00:01:40,220
And we're going to need a speed variable as well, which is also a float.

26
00:01:40,880 --> 00:01:47,000
And we can patch those two in the speed variable into the speed and the angle into the angle.

27
00:01:47,300 --> 00:01:53,450
And we go hit compile look at our animate preview editor and just tweak the values.

28
00:01:53,510 --> 00:01:56,570
So first of all, the speed, let's bring the speed up a little bit.

29
00:01:57,730 --> 00:02:01,390
Let's bring the speed up to about 30.

30
00:02:01,840 --> 00:02:02,600
See what happens.

31
00:02:02,620 --> 00:02:05,860
They go he starts to walk by, bring it up to 70.

32
00:02:06,100 --> 00:02:08,050
He is getting closer to running.

33
00:02:08,080 --> 00:02:09,220
I bring it to 100.

34
00:02:09,930 --> 00:02:10,890
Not 10, 100.

35
00:02:11,080 --> 00:02:13,910
Then he is full on running and then it can change the angle.

36
00:02:13,960 --> 00:02:18,310
So at 90 degrees, he's going 90 to the right, minus 90 is going.

37
00:02:18,800 --> 00:02:20,230
Mind going over to the left.

38
00:02:20,860 --> 00:02:21,910
We can go somewhere in between.

39
00:02:21,910 --> 00:02:23,160
So I can say 45 degrees.

40
00:02:23,170 --> 00:02:28,770
You can see runs at a 45 degree angle and you can see the Blende space where he is trying to pick in

41
00:02:28,780 --> 00:02:30,820
the plan space and what animations.

42
00:02:30,820 --> 00:02:34,930
It's sort of blending between its blend between that forward animation and that 90 degrees.

43
00:02:35,950 --> 00:02:36,370
Right.

44
00:02:36,460 --> 00:02:37,150
Animation.

45
00:02:37,840 --> 00:02:39,190
So that's cool.

46
00:02:39,250 --> 00:02:40,570
We've got that going.

47
00:02:40,570 --> 00:02:45,780
But as we know, this needs to be driven by our actual gameplay.

48
00:02:45,940 --> 00:02:47,260
And why do we do that anyway?

49
00:02:47,260 --> 00:02:53,770
Why don't we just have the animations, drive our gameplay saying, you know, we need to be moving

50
00:02:53,770 --> 00:02:55,660
forward at such and such a pace?

51
00:02:56,350 --> 00:03:02,410
Well, the reason for not doing that, the reason for not using the animation to drive gameplay is that

52
00:03:02,410 --> 00:03:07,650
you often want your designer to be able to tweak all sorts of variables about your gameplay.

53
00:03:07,750 --> 00:03:12,820
You want them to be able to say, okay, well, it doesn't feel right that this character is running

54
00:03:12,820 --> 00:03:13,360
at this speed.

55
00:03:13,380 --> 00:03:17,860
He needs to be running at this speed instead, and walking should be more at this speed.

56
00:03:18,490 --> 00:03:24,820
So you don't want your animations to constrain the design and game, feel you want the animations to

57
00:03:24,820 --> 00:03:27,940
come off the back of your game, feel and make it look good.

58
00:03:28,450 --> 00:03:33,100
So during a design process, you might realize actually we need a faster running animation and that's

59
00:03:33,100 --> 00:03:33,730
okay.

60
00:03:34,180 --> 00:03:40,480
But you want to be able to change up the game first to get there rather than have to go and try and

61
00:03:40,480 --> 00:03:46,570
record a different running animation or find a different running animation and then realize that actually

62
00:03:46,570 --> 00:03:48,300
that didn't improve the feel of the game.

63
00:03:48,310 --> 00:03:51,160
That's why I want to keep these two things as separate as possible.

64
00:03:51,550 --> 00:03:57,250
There are times when things really must line up with the animations, but this is not one of them.

65
00:03:57,460 --> 00:03:59,890
So there are exceptions to every rule.

66
00:04:00,160 --> 00:04:04,060
So don't take this as a completely set in stone rule.

67
00:04:04,060 --> 00:04:08,860
You'll definitely see instances of games that drive some features from the animation.

68
00:04:09,130 --> 00:04:12,160
But generally speaking, we want to do it the other way round.

69
00:04:12,190 --> 00:04:15,850
We want to say, what's the speed of the character in the game?

70
00:04:16,150 --> 00:04:21,250
Let me go and update the speed of the animation rather than saying, what's the speed of the animation?

71
00:04:21,250 --> 00:04:23,020
Let me update the speed of the character in the game.

72
00:04:23,500 --> 00:04:25,960
With that said, how do we do this?

73
00:04:26,200 --> 00:04:32,350
Basically, the mechanics of it are that this blueprint, this animation blueprint has an event graph

74
00:04:32,440 --> 00:04:38,230
like other blueprints do, which means that it can have things like a tick event.

75
00:04:38,470 --> 00:04:44,830
If I go over in to the event graph and have a look, we have got a couple of event nodes in here that

76
00:04:44,830 --> 00:04:46,060
we can use to start from.

77
00:04:46,120 --> 00:04:48,730
We've got this blueprint update animation.

78
00:04:48,760 --> 00:04:56,320
If we come off of this every time it wants to update the animation, it's going to give us the execution

79
00:04:56,320 --> 00:04:59,820
note and allow us to go ahead and grab some state.

80
00:04:59,920 --> 00:05:04,990
So what we're going to do is every time this is called, we go and grab some say and notice here, it's

81
00:05:04,990 --> 00:05:10,990
got this get porn owner that's saying go ahead and get the porn objects.

82
00:05:11,050 --> 00:05:16,240
Let's remind ourselves, the porn in this case is a character character being a subclass of porn.

83
00:05:16,660 --> 00:05:19,120
And it would be this BP shooter character.

84
00:05:19,210 --> 00:05:20,780
Why would it be the BP issues character?

85
00:05:20,790 --> 00:05:21,310
Well, let's see.

86
00:05:22,720 --> 00:05:29,770
Because this character, if we select the MASH, go to the viewport, it's currently running just a

87
00:05:29,770 --> 00:05:30,820
simple animation.

88
00:05:30,850 --> 00:05:35,460
But what we want to do is change the animation mode over to use animation blueprints.

89
00:05:36,070 --> 00:05:39,170
And we want to use that HBP shooter character.

90
00:05:39,610 --> 00:05:44,830
So that is why this is the porn owner is using that animation blueprint.

91
00:05:44,860 --> 00:05:47,650
So the blueprint now has a porn owner.

92
00:05:48,490 --> 00:05:54,640
And so what we want to do in this update function, just to summarize, is we want to grab the information

93
00:05:54,940 --> 00:05:57,010
from the porn about its movement.

94
00:05:57,040 --> 00:05:58,870
We want to say, what's your speed?

95
00:05:59,230 --> 00:06:01,480
What's the angle of your movement?

96
00:06:02,110 --> 00:06:03,910
That's what we're going to calculate in this lecture.

97
00:06:03,910 --> 00:06:06,550
We're just going to do the speed because it's the simplest to do.

98
00:06:06,910 --> 00:06:11,920
The angle is going to require a little bit of manipulation with transforms, which we're gonna look

99
00:06:11,920 --> 00:06:13,300
at in the next lecture.

100
00:06:13,600 --> 00:06:20,780
So the note that we're going to want here is to get the velocity of our porn owner.

101
00:06:20,830 --> 00:06:22,780
That gives us this vector here.

102
00:06:23,620 --> 00:06:28,510
And then off the back of that vector, we want to find its magnitude or its length.

103
00:06:28,720 --> 00:06:33,130
So we can drag off that vector search for the magnitude.

104
00:06:33,400 --> 00:06:34,750
And that's been clever here.

105
00:06:34,840 --> 00:06:39,460
And I've search for magnitude, but it's given me the function called vector length to clearly magnitude.

106
00:06:39,840 --> 00:06:42,460
They've clocked that it's a synonym for vector length.

107
00:06:42,580 --> 00:06:45,250
Why do we want to get the vector length rather than the vector itself?

108
00:06:45,280 --> 00:06:50,800
Because we're looking for a float's, which is the speed vectors include the direction as well as the

109
00:06:50,800 --> 00:06:53,380
speed, which we're gonna need to calculate the angle.

110
00:06:53,800 --> 00:06:56,980
But it isn't what we need to calculate the speed.

111
00:06:57,250 --> 00:06:59,020
So little mini challenge for you here.

112
00:06:59,200 --> 00:06:59,740
Go ahead.

113
00:06:59,770 --> 00:07:02,350
There aren't there isn't any other challenge in this lecture.

114
00:07:02,740 --> 00:07:06,930
Go ahead and set the speed using this vector length.

115
00:07:06,970 --> 00:07:11,790
And remember, if you need any execution pen, we're trying to do this on the blueprint update animations

116
00:07:11,810 --> 00:07:12,780
that pause video and have a go.

117
00:07:13,090 --> 00:07:13,510
Welcome back.

118
00:07:13,540 --> 00:07:16,180
So the speed is what we want to set.

119
00:07:16,210 --> 00:07:21,790
So if I drag that into the blueprint and hit set speed, you can see we've got an execution pin that

120
00:07:21,790 --> 00:07:22,120
we need.

121
00:07:22,150 --> 00:07:25,020
We're gonna get that from the blueprint update animation.

122
00:07:25,630 --> 00:07:31,090
And we need the data pin, which is going to be the speed that comes from our vector length of getting

123
00:07:31,090 --> 00:07:31,870
our velocity.

124
00:07:32,410 --> 00:07:35,080
So we should be able to go ahead and save and compile that.

125
00:07:35,080 --> 00:07:37,030
You can see that's reset the speed to zero.

126
00:07:37,060 --> 00:07:39,790
Because now it's trying to set it from a porn owner.

127
00:07:39,810 --> 00:07:41,860
That is not really there.

128
00:07:42,970 --> 00:07:48,910
So what we're gonna want to do is actually go ahead and play in the world and see what we've got.

129
00:07:49,510 --> 00:07:49,670
Okay.

130
00:07:49,720 --> 00:07:50,440
This is much better.

131
00:07:50,440 --> 00:07:56,020
We've got ourselves a porn that's staying static on the ground except for when I move, at which point

132
00:07:56,140 --> 00:07:58,510
it is giving me some speed.

133
00:07:59,470 --> 00:08:05,690
And if he is an analog input, such as a controller, you can see that by changing the analog input.

134
00:08:06,220 --> 00:08:07,570
That sort of changed the speed.

135
00:08:07,600 --> 00:08:12,400
We can change how fast this guy is moving.

136
00:08:14,740 --> 00:08:19,510
Now, obviously, there are two problems here, the first one being that if I move off an angle, it's

137
00:08:19,510 --> 00:08:21,040
just using the absolute speed.

138
00:08:21,130 --> 00:08:23,980
So it's not adjusting their angle in our BLENDE space.

139
00:08:23,980 --> 00:08:25,630
And so the animation looks wrong.

140
00:08:26,380 --> 00:08:31,660
The other problem is that we're getting definitely some foot sliding here because the speed of our animation

141
00:08:31,660 --> 00:08:34,510
is not matching the speed of the character in our game.

142
00:08:34,900 --> 00:08:38,950
That's something that we will look at fixing in a following lecture as well.

143
00:08:39,490 --> 00:08:40,000
Great stuff.

144
00:08:40,120 --> 00:08:47,350
Hopefully you now understand how animations should hook up to gameplay using the animation blueprint.

145
00:08:47,770 --> 00:08:51,790
And you should be able to go and apply that to your own game.

146
00:08:52,120 --> 00:08:56,350
See you in the next lecture where we will be hooking up those angles.

147
00:08:56,680 --> 00:08:58,750
So this movement looks a bit more natural.
