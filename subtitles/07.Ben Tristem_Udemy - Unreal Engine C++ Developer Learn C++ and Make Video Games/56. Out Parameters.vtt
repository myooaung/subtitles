WEBVTT
1
00:00:04.450 --> 00:00:06.310
Hello everybody and welcome back.

2
00:00:06.310 --> 00:00:08.680
In this lecture you're going to have a look at our parameters.

3
00:00:08.680 --> 00:00:12.560
This is something new to us and it should be quite intuitive how they work.

4
00:00:12.580 --> 00:00:15.520
However there's a bit of a gotcha to them.

5
00:00:15.520 --> 00:00:20.170
So basically at this point in time we need to count up our bulls and cows and that will pretty much

6
00:00:20.170 --> 00:00:22.210
complete our game.

7
00:00:22.270 --> 00:00:24.830
Now there are a couple of ways that we could do this.

8
00:00:24.880 --> 00:00:30.070
We could use a struct or a u struct or indeed we could also use member variables.

9
00:00:30.070 --> 00:00:36.340
Now I do say we could use member variables that would actually be quite bad practice in this particular

10
00:00:36.340 --> 00:00:37.020
case.

11
00:00:37.090 --> 00:00:42.220
So we were actually demonstrate this but when we get to using a struct in the next lecture you'll see

12
00:00:42.220 --> 00:00:49.180
that we could use them because structures are very similar to classes and we in this lecture are going

13
00:00:49.180 --> 00:00:51.100
to use out parameters.

14
00:00:51.110 --> 00:00:53.830
There's some pros and real uses them.

15
00:00:53.830 --> 00:00:56.620
It avoids creating unneeded copies.

16
00:00:56.620 --> 00:00:57.100
That's good.

17
00:00:57.850 --> 00:01:03.700
However they're separate from the assignment and there's a greater chance of variables not being initialized

18
00:01:03.730 --> 00:01:07.650
before being read which results in problems.

19
00:01:07.660 --> 00:01:13.480
When we compile our code or even run our code potentially one of the biggest things here is you have

20
00:01:13.480 --> 00:01:19.330
to read documentation or prefix your parameter names to signal that they are out parameters.

21
00:01:19.330 --> 00:01:22.560
However unreal doesn't necessarily do that.

22
00:01:22.570 --> 00:01:28.520
So just doing it yourself is great but being able to identify them otherwise is even better.

23
00:01:28.630 --> 00:01:34.390
Now member variables pretty much they're just not out parameters you don't have to rely on documentation

24
00:01:34.390 --> 00:01:40.750
or prefixes and in general it's not great designers it's not really parts of the class itself.

25
00:01:40.780 --> 00:01:43.220
And then finally a structure a stroke.

26
00:01:43.240 --> 00:01:49.600
The great thing about those is they are self documenting and you can join the declaration and assignment

27
00:01:49.600 --> 00:01:50.400
together.

28
00:01:50.530 --> 00:01:56.230
But let's go over to the U.S. code now and have a closer look at how our parameters work.

29
00:01:56.290 --> 00:02:02.430
Let's go ahead and first of all start off by creating our new function over in our header file.

30
00:02:02.470 --> 00:02:02.710
Okay.

31
00:02:02.740 --> 00:02:04.990
So first of all what is it going to return.

32
00:02:04.990 --> 00:02:11.290
Well the way that this is going to work is because we have out parameters it's going to return nothing

33
00:02:11.320 --> 00:02:12.840
in this particular case.

34
00:02:12.850 --> 00:02:18.580
Now that's not to say you can't have a function that returns something and has our parameters as well

35
00:02:18.910 --> 00:02:22.580
but for the time being this is going to return nothing.

36
00:02:22.660 --> 00:02:29.760
The name we're going to give it is get ball cows and then we need to pass in some parameters.

37
00:02:29.830 --> 00:02:35.050
So we're going to take in the players guess and as before we're not going to change that guest so it

38
00:02:35.050 --> 00:02:38.350
can be a constant f string reference.

39
00:02:38.350 --> 00:02:42.500
And of course we're going to document that by saying it's the gas.

40
00:02:42.520 --> 00:02:45.040
So now we can think about our out parameters.

41
00:02:45.130 --> 00:02:47.390
So they are both going to be in 32.

42
00:02:47.390 --> 00:02:57.460
We're going to have an in 32 bulls or bull count and we're going to have an int 32 which is a cow count.

43
00:02:57.520 --> 00:03:03.430
I think those are good names for them in this specific enough that we know what they refer to at the

44
00:03:03.430 --> 00:03:03.880
moment.

45
00:03:03.880 --> 00:03:09.320
These are parameters that we are passing him by value which means we're taking a copy.

46
00:03:09.340 --> 00:03:16.840
However if we make them references but do not make them contact references they will be out parameters.

47
00:03:16.840 --> 00:03:21.670
And this is one of the key identifiers when it comes to outer parameters the fact that it has not been

48
00:03:21.670 --> 00:03:23.870
written as a constant reference.

49
00:03:23.930 --> 00:03:25.690
It's just a reference.

50
00:03:25.690 --> 00:03:31.630
Now this may be someone not being as rigid with their code however it's a good indication that that

51
00:03:31.630 --> 00:03:32.500
is the case.

52
00:03:32.620 --> 00:03:34.690
And we'll see in a moment in the implementation.

53
00:03:34.690 --> 00:03:38.060
Another giveaway that we're going to be using our parameters.

54
00:03:38.110 --> 00:03:46.030
So the final thing to say here is is the get bull cows going to change the lives the game over the hidden

55
00:03:46.030 --> 00:03:47.310
word or the Isiah grounds.

56
00:03:47.320 --> 00:03:49.390
The likelihood is no.

57
00:03:49.420 --> 00:03:52.960
So let's go ahead and make it a contest function.

58
00:03:52.960 --> 00:03:58.960
Excellent we're going to save that now and go over into a bull cow cartridge C.P. Pete.

59
00:03:58.970 --> 00:04:04.160
OK so let's scroll down here where do we go ahead and call this the first time.

60
00:04:04.160 --> 00:04:10.040
So this is where we're going to be calling that code and then we're going to have some lines to print

61
00:04:10.100 --> 00:04:11.220
out here.

62
00:04:11.240 --> 00:04:20.720
So first of all let's go ahead and declare to in 30 2s called bulls and cows which we are deliberately

63
00:04:20.750 --> 00:04:26.420
not initializing and then we're going to go ahead and get bull cows and I don't think this is going

64
00:04:26.420 --> 00:04:27.870
to auto complete this.

65
00:04:27.890 --> 00:04:28.750
Oh yes there we go.

66
00:04:28.750 --> 00:04:29.470
It is.

67
00:04:29.580 --> 00:04:35.360
And we're going to pass into it the gas the Bulls and the cows.

68
00:04:35.360 --> 00:04:39.310
Now notice here let's have a tiny bit of white space here.

69
00:04:39.320 --> 00:04:46.760
Now notice that we are declaring two variables but not initializing and then immediately using them

70
00:04:46.790 --> 00:04:53.450
in a function this is another sign that these are going to be out parameters.

71
00:04:53.450 --> 00:04:58.850
And of course this is one of the things the highlights unless we actually initialize these within the

72
00:04:58.850 --> 00:04:59.960
function.

73
00:04:59.960 --> 00:05:02.000
They will be on initialized variables.

74
00:05:02.030 --> 00:05:04.810
So we may end up with garbage if we're not careful.

75
00:05:04.880 --> 00:05:10.560
And I'd say this is one of the key reasons not to use out parameters where possible.

76
00:05:10.670 --> 00:05:17.570
The final thing that we will want to do is print line and then the text macro and we will want to say

77
00:05:17.930 --> 00:05:20.180
you have.

78
00:05:20.180 --> 00:05:28.490
And then the format specify for an integer bowls and the format specified again and then cowls and then

79
00:05:28.550 --> 00:05:33.430
here we can go ahead and say we're going to use the bulls and cows.

80
00:05:33.500 --> 00:05:36.340
So our code is pretty much complete there.

81
00:05:36.350 --> 00:05:39.380
In terms of using that function.

82
00:05:39.380 --> 00:05:40.130
So that's good.

83
00:05:40.820 --> 00:05:44.120
However what we've not written yet is the get bull cows.

84
00:05:44.120 --> 00:05:46.310
So let's go down and start doing that.

85
00:05:46.730 --> 00:05:49.910
So it's a void function as we've done before.

86
00:05:50.090 --> 00:05:55.950
And then we need our new Bull Cal cartridge hopefully have spelt that correctly.

87
00:05:56.020 --> 00:05:58.250
Colon colon R Yes Get bull cows.

88
00:05:58.250 --> 00:05:58.760
Brilliant.

89
00:05:58.940 --> 00:06:01.380
I love it when autocomplete comes together.

90
00:06:01.520 --> 00:06:05.310
So what are we passing into this function well we're passing in the gas.

91
00:06:05.330 --> 00:06:10.580
So that's going to be a const f string guess which is absolutely fine.

92
00:06:10.700 --> 00:06:19.250
And remember it is a reference to the gas that we're passing in and then we're going to have our bulls

93
00:06:19.340 --> 00:06:20.810
and cows.

94
00:06:20.810 --> 00:06:29.240
So it's going to be an int 32 for the bull count and then again another in 32 reference for the cow

95
00:06:29.240 --> 00:06:29.950
count.

96
00:06:29.960 --> 00:06:31.100
Brilliant.

97
00:06:31.310 --> 00:06:33.230
Let's work on the body here.

98
00:06:33.230 --> 00:06:34.960
So what are we going to do.

99
00:06:35.030 --> 00:06:42.730
We are going to go ahead and first of all prevent these being assigned to anything.

100
00:06:42.800 --> 00:06:52.000
So we're going to set the bull count to zero and then the cow counts also to zero now because we've

101
00:06:52.050 --> 00:06:55.300
initialized the those both to zero.

102
00:06:55.300 --> 00:07:01.930
What that will mean is as we run our code if there are no bulls and are no cows we're guaranteed to

103
00:07:01.930 --> 00:07:03.740
get zero coming back.

104
00:07:04.280 --> 00:07:04.600
OK.

105
00:07:04.600 --> 00:07:08.640
So let's pseudo code here before we go ahead and do anything else.

106
00:07:08.710 --> 00:07:21.250
So we're going to say here if the index of what we looking at here the gas is same as index of the hidden

107
00:07:21.250 --> 00:07:25.060
world then the bull count is going to be plus plus.

108
00:07:25.060 --> 00:07:30.460
Now this this is quite an interesting thing how I've said if realistically we're going to use something

109
00:07:30.460 --> 00:07:31.440
like a for loop.

110
00:07:31.470 --> 00:07:37.790
So for every index guess is the same as a bull cow count that's fine.

111
00:07:38.020 --> 00:07:47.350
And then we need to do it on that and it's not a bull cow count we need to then say well is it's a cow

112
00:07:47.350 --> 00:07:48.740
instead.

113
00:07:48.790 --> 00:07:55.490
So if not a bull was it a cow.

114
00:07:55.540 --> 00:08:01.860
If yes Carol counts plus plus.

115
00:08:01.890 --> 00:08:02.360
OK.

116
00:08:02.430 --> 00:08:04.730
That's pretty much what we want to do.

117
00:08:04.740 --> 00:08:09.780
Otherwise we're just going to continue going around the loop and going to the next one.

118
00:08:09.780 --> 00:08:11.530
So let's start off this.

119
00:08:11.580 --> 00:08:15.000
And then I will get you to finish it in our challenge.

120
00:08:15.000 --> 00:08:16.670
So we're going to start with a for loop.

121
00:08:17.130 --> 00:08:20.040
So we're going to be iterating around the word itself.

122
00:08:20.040 --> 00:08:26.850
So in 32 and then I'm going to call this the guess index you can call it something else if you want

123
00:08:26.880 --> 00:08:29.280
but we're going through.

124
00:08:29.280 --> 00:08:31.140
Why am I setting it like that.

125
00:08:31.140 --> 00:08:36.120
You can call it something else but I think we're looking at the guess index was setting it to zero which

126
00:08:36.120 --> 00:08:36.990
is absolutely fine.

127
00:08:37.380 --> 00:08:43.020
And then here where are we going to where we're going to go to the guess and then we're going to call

128
00:08:43.020 --> 00:08:49.410
the length function on that so we can have the entire length of the word excellent.

129
00:08:49.410 --> 00:08:55.530
And then the code that we're going to do here so we can just say that if so we're going to look at the

130
00:08:55.530 --> 00:09:02.040
guess first of all and then the guess index which is initially going to be 0 and we're going to say

131
00:09:02.460 --> 00:09:05.400
is it the same as the hidden word.

132
00:09:05.430 --> 00:09:15.970
And again at the same index if it is then all we need to do is the bull count plus plus Excellent.

133
00:09:16.730 --> 00:09:17.070
OK.

134
00:09:17.080 --> 00:09:21.250
So that's the easy if statement done you wouldn't have guessed that I'll be leaving you with a more

135
00:09:21.250 --> 00:09:22.380
complex one.

136
00:09:22.420 --> 00:09:23.760
Now something to bear in mind his.

137
00:09:23.760 --> 00:09:25.240
We've got two options.

138
00:09:25.240 --> 00:09:26.540
We can now do.

139
00:09:26.710 --> 00:09:28.810
We can now do an else down here.

140
00:09:28.810 --> 00:09:30.320
That's absolutely fine.

141
00:09:30.370 --> 00:09:36.070
Or instead of having that extra level of nesting we can simply go continue.

142
00:09:36.070 --> 00:09:45.490
And what this does is it will skip to the end of the enclosing for loop for us if it finds a bull then

143
00:09:45.490 --> 00:09:51.550
it's just going to increment and go through the next letter and then down here we can start our not

144
00:09:51.640 --> 00:09:53.470
new for loop.

145
00:09:53.530 --> 00:09:57.620
Now this new for loop is going to have to iterate starting at the gas index.

146
00:09:57.620 --> 00:10:01.750
Well is this letter the same as any other letter in our word.

147
00:10:01.750 --> 00:10:07.030
So we're gonna have to have a new index that we iterate around for every other letter of the word.

148
00:10:07.030 --> 00:10:12.360
And that leads us nicely onto your challenge okay see your challenge.

149
00:10:12.490 --> 00:10:18.520
Well create the new for loops iterate around the rest of the letters of our hit and word.

150
00:10:18.520 --> 00:10:27.730
And if you find one that's the same increment the cow count pulls video now and give that a go Okay

151
00:10:27.760 --> 00:10:28.660
everybody Welcome back.

152
00:10:28.660 --> 00:10:34.350
Let's go ahead now and create this new for loops iterate around the rest of the letters okay.

153
00:10:34.390 --> 00:10:39.370
I'm just gonna type that for again so I'd get the auto complete to come in.

154
00:10:39.370 --> 00:10:39.800
Okay.

155
00:10:39.820 --> 00:10:44.800
So this is where we're going to have another 32 but we're going to call it something different this

156
00:10:44.800 --> 00:10:47.740
time I'm going to call it the hidden index.

157
00:10:47.770 --> 00:10:51.290
Be interested to hear what you call it because we're getting around the hidden word.

158
00:10:51.370 --> 00:10:54.000
I think that's an appropriate word for it.

159
00:10:54.280 --> 00:10:56.010
And now where do we go up to.

160
00:10:56.010 --> 00:10:59.640
Well I'm going to go up to the hidden word dot Lang now.

161
00:10:59.830 --> 00:11:04.390
I think because we're talking about the hidden word it's probably best that we stick with the hidden

162
00:11:04.390 --> 00:11:05.570
word length.

163
00:11:05.680 --> 00:11:11.800
So this is where we're going to say if the guess that we're looking at at the gas index now this is

164
00:11:11.800 --> 00:11:15.310
where we have our two separate indices that we're going around.

165
00:11:15.370 --> 00:11:21.730
So the gas index is going to remain at zero as we go through here providing we haven't got a bull that's

166
00:11:21.730 --> 00:11:22.750
absolutely fine.

167
00:11:22.870 --> 00:11:27.500
And then we're going to compare it against the hidden word hidden index.

168
00:11:27.700 --> 00:11:37.120
And if that works we will simply do cow counts milk cow counts plus plus I will save my coat there.

169
00:11:37.390 --> 00:11:43.000
So we're still comparing on this particular iteration the first letter of our gas against the first

170
00:11:43.000 --> 00:11:49.090
that survived and words it's technically we could actually start the hidden index at one in a few moments

171
00:11:49.090 --> 00:11:53.280
when I run my game I realize I should have left this at 0.

172
00:11:53.350 --> 00:11:55.090
So don't follow along with me at this point.

173
00:11:55.100 --> 00:11:56.810
Leave it as zero.

174
00:11:57.130 --> 00:12:00.680
And then we're going to go all the way up to the hidden word length.

175
00:12:00.740 --> 00:12:01.490
I think that's fine.

176
00:12:01.490 --> 00:12:05.120
Then we're going to increment the hidden index that should be okay.

177
00:12:05.120 --> 00:12:07.180
Let's tidy up some whitespace here.

178
00:12:07.440 --> 00:12:11.670
Well let's not delete random brackets okay.

179
00:12:11.680 --> 00:12:13.240
Perfect.

180
00:12:13.420 --> 00:12:14.870
So all being well that should work.

181
00:12:14.900 --> 00:12:18.100
Going to save my code here and see whether it works.

182
00:12:18.160 --> 00:12:18.690
Okay.

183
00:12:18.700 --> 00:12:19.950
Let's just go up.

184
00:12:20.020 --> 00:12:21.660
Ah okay.

185
00:12:21.700 --> 00:12:23.320
One thing here I've forgotten.

186
00:12:23.320 --> 00:12:29.180
Remember that's your declaration this is a constant declaration up here.

187
00:12:29.270 --> 00:12:30.830
Then we're going to have to make sure it's here.

188
00:12:30.830 --> 00:12:34.430
Otherwise we're defining something that hasn't been declared.

189
00:12:34.820 --> 00:12:35.330
Brilliant.

190
00:12:35.360 --> 00:12:38.050
I'm glad I spotted that otherwise that could have been embarrassing.

191
00:12:39.180 --> 00:12:41.180
Let's go ahead and click compile.

192
00:12:41.250 --> 00:12:41.640
OK.

193
00:12:41.670 --> 00:12:42.630
Brilliant.

194
00:12:42.630 --> 00:12:45.000
So we can see that the compiles complete swim.

195
00:12:45.000 --> 00:12:46.810
Go ahead and press play now.

196
00:12:46.830 --> 00:12:48.750
So the hit word is wife.

197
00:12:49.260 --> 00:12:49.800
Excellent.

198
00:12:49.830 --> 00:12:58.340
So if I go w e f i we have two bowls and two cows.

199
00:12:58.340 --> 00:13:00.140
Is that correct.

200
00:13:00.140 --> 00:13:01.750
Yes.

201
00:13:01.940 --> 00:13:04.070
We've got the F and the W in the right place.

202
00:13:04.070 --> 00:13:04.910
Brilliant.

203
00:13:04.910 --> 00:13:13.750
How about if we just do it backwards so w sorry e f i w we have three cows.

204
00:13:13.790 --> 00:13:15.910
No we should have four cows.

205
00:13:15.920 --> 00:13:17.000
Interesting.

206
00:13:17.060 --> 00:13:20.660
So part of our code that isn't working as expected.

207
00:13:20.750 --> 00:13:22.800
Now I think I know what it is.

208
00:13:23.090 --> 00:13:31.370
Well let's go back and have a look at our code and it's probably my thoughts here going wrong because

209
00:13:31.570 --> 00:13:36.720
if we do still need to compare the first one against the first one because it could be the same as something

210
00:13:36.810 --> 00:13:37.520
else.

211
00:13:37.520 --> 00:13:38.340
Mm hmm.

212
00:13:38.580 --> 00:13:42.370
Let's go back press compile and this time its remains.

213
00:13:42.380 --> 00:13:50.820
So let's type everything in backwards so n I a m e are six cows perfect.

214
00:13:50.830 --> 00:13:55.380
It's working there silly of me to think that's not including the first one but there we go.

215
00:13:55.400 --> 00:13:57.510
So that is all working.

216
00:13:57.510 --> 00:14:02.880
So let's just go have a look at that quickly because the one thing I was thinking of when I was looking

217
00:14:02.880 --> 00:14:10.980
through my code is that the debug line I think using ult and the up arrow I'm going to put it next to

218
00:14:10.980 --> 00:14:15.900
the head and word itself it kind of stands out as something you would have together I'm not going to

219
00:14:15.900 --> 00:14:17.840
leave for extra whitespace there.

220
00:14:18.560 --> 00:14:21.660
OK I'm going to save my work there.

221
00:14:21.690 --> 00:14:22.320
Excellent.

222
00:14:22.440 --> 00:14:26.040
So I think we've got ourselves a complete and working game.

223
00:14:26.040 --> 00:14:31.850
Obviously if you were now to share this then you'd probably want to comment about that debug line or

224
00:14:31.850 --> 00:14:39.000
otherwise it wouldn't be that interesting to play when you get your lives hit and word length perhaps

225
00:14:39.000 --> 00:14:45.180
a hidden word length times by to you know make it a bit easier for someone to play.

226
00:14:45.180 --> 00:14:50.120
I know that I'm pretty rubbish at these games but they're also so little things you can do like that.

227
00:14:50.160 --> 00:14:54.080
Now of course when it comes to sharing your work I'd love to see what you've come up with.

228
00:14:54.090 --> 00:14:58.320
Please share it's over in the discussions and I'll see you all in the next lecture.
