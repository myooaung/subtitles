1
00:00:04,300 --> 00:00:06,300
Hello everybody and welcome back.

2
00:00:06,310 --> 00:00:10,390
In this lecture we're going to have a look at random and the UAE for docs.

3
00:00:10,400 --> 00:00:17,180
Now before we even get into this lecture what I'd like you to do is have a look at random yourself.

4
00:00:17,290 --> 00:00:24,700
See if you can get to the E4 docs and find out which function you would use to give us a random number

5
00:00:25,210 --> 00:00:31,350
only spend about 30 seconds to a minute on it and use your google fu okay.

6
00:00:31,350 --> 00:00:32,150
Welcome back.

7
00:00:32,160 --> 00:00:33,790
Let's carry on.

8
00:00:33,850 --> 00:00:37,390
Well why would we have a look at the E4 docs I hear you call.

9
00:00:37,430 --> 00:00:44,030
Well we will be using Rand range and it rather than just me telling you that I want to take a closer

10
00:00:44,030 --> 00:00:49,370
look at how you might go ahead and find out that thing for yourself whether or not you want to work

11
00:00:49,370 --> 00:00:51,920
out how to do random or something else.

12
00:00:51,920 --> 00:00:57,260
Now one of the reasons why you want to refer to the use for docs rather than just searching for stuff

13
00:00:57,260 --> 00:01:03,770
online with C++ is you may find that's what you find does work in the contacts that we're currently

14
00:01:03,770 --> 00:01:04,280
doing.

15
00:01:04,310 --> 00:01:09,290
But if you were to compile game for a different system it may fail because we didn't use the Unreal

16
00:01:09,320 --> 00:01:12,710
Engine for specific random range function.

17
00:01:13,400 --> 00:01:14,540
But why this one.

18
00:01:14,540 --> 00:01:17,500
And how would you know other two big questions.

19
00:01:17,600 --> 00:01:23,390
Let's go ahead and do a basically a search online and see what we come up and give you a bit of guidance

20
00:01:23,390 --> 00:01:24,950
how you might find this yourself.

21
00:01:25,610 --> 00:01:28,860
Okay everybody so we're over on a search engine here.

22
00:01:28,910 --> 00:01:30,960
You can choose a different one if you don't like Google.

23
00:01:30,980 --> 00:01:31,910
That's absolutely fine.

24
00:01:31,910 --> 00:01:35,240
So how would we go ahead and search for random.

25
00:01:35,240 --> 00:01:42,200
Well I would first of all start off with what we want so random you E4 and then look the second search

26
00:01:42,200 --> 00:01:46,550
there and obviously this is going to be somewhat skewed because I've also been doing searches for it

27
00:01:46,790 --> 00:01:53,300
but I could go people as well as C++ it will come up with a similar results and we get a series of options

28
00:01:53,300 --> 00:01:57,240
and of course Google is a great way of finding out how things work.

29
00:01:57,320 --> 00:01:59,040
But specifically there are two here.

30
00:01:59,040 --> 00:02:03,770
There's the rand range and Rand range and it's brilliant it comes up straight away.

31
00:02:04,130 --> 00:02:10,040
That's given us an insight in that's probably what we need to use when it comes to being random within

32
00:02:10,070 --> 00:02:10,980
unreal.

33
00:02:11,000 --> 00:02:13,850
So let's just click on the top on here and see what we get.

34
00:02:14,030 --> 00:02:16,990
So we end up with the rand range function itself.

35
00:02:17,000 --> 00:02:24,350
What it can take in as its parameters so it can take in integers of both 32 and fourth 64 bits and floats

36
00:02:24,350 --> 00:02:30,210
as well so it's pretty simple and we can click on Rand range here and it will take us to.

37
00:02:30,230 --> 00:02:37,660
Here we go the names but the structure that contains all the math help her functions of which Rand range

38
00:02:37,660 --> 00:02:39,020
is one of.

39
00:02:39,020 --> 00:02:45,700
Now this is important because as if you cast your mind back to when we were doing triple X when we reached

40
00:02:45,700 --> 00:02:53,030
into the standard namespace to do C out we needed to make sure we went FTD colon colon C out otherwise

41
00:02:53,030 --> 00:02:58,670
we couldn't use it the same is true here we're gonna have to go f math colon colon Rand range and if

42
00:02:58,670 --> 00:03:04,310
our Entebbe sense is working it should enable us to do that quite well but even better in this itself

43
00:03:04,580 --> 00:03:06,690
it has the include file.

44
00:03:06,710 --> 00:03:13,820
Now one thing to mention here is since I think it was about four point fifteen or thereabouts anyway

45
00:03:13,850 --> 00:03:20,420
unreal version four point fifteen it switched over so that you now have to include what you use.

46
00:03:20,780 --> 00:03:28,460
So before this you may have been able to use Rand range without having to include the math young real

47
00:03:28,460 --> 00:03:30,550
math utility header file there.

48
00:03:30,560 --> 00:03:33,550
So that's something that we're going to have to include in our code.

49
00:03:33,620 --> 00:03:37,670
And one final thing that we should look at here is the remarks themselves.

50
00:03:37,670 --> 00:03:44,570
So let's just open that back up returns a Random number greater than or equal to the minimum and less

51
00:03:44,570 --> 00:03:46,010
than or equal to the max.

52
00:03:46,010 --> 00:03:49,850
The reason why I'm bringing this up is some functions may not operate like this.

53
00:03:49,850 --> 00:03:53,200
It may not include the minimum or may not include the maximum.

54
00:03:53,200 --> 00:03:55,000
It might just be less than the maximum.

55
00:03:55,610 --> 00:04:00,700
Let's see how we can go ahead and implement run range over in this code.

56
00:04:00,710 --> 00:04:01,100
OK.

57
00:04:01,100 --> 00:04:02,890
So are over it in our implementation.

58
00:04:02,890 --> 00:04:07,490
I'm going to add those two lines that I seem to keep deleting perhaps I should just leave a gap there.

59
00:04:07,490 --> 00:04:13,490
Now ordinarily we can't just call up brand range as we've mentioned before.

60
00:04:13,550 --> 00:04:21,130
What we'd have to do is do f math and then colon colon for the namespace and then ran Grange.

61
00:04:21,140 --> 00:04:27,760
Now the reason why this is appearing is because at some point in another header file it's been included.

62
00:04:27,760 --> 00:04:29,930
So let's go to the ball Cal cartridge header.

63
00:04:29,930 --> 00:04:36,080
I'm holding down control whilst clicking on these so one of these other included headers includes the

64
00:04:36,080 --> 00:04:39,710
necessary header files so let's go have a look at what that was.

65
00:04:39,770 --> 00:04:43,930
It was the math anew unreal utility header file.

66
00:04:44,030 --> 00:04:49,100
So let's see if we can find that and see where it's being used because this is a useful things go for

67
00:04:49,310 --> 00:04:53,930
I think it's going to be in the core minimal so we got a hold down control and click on that and I'm

68
00:04:53,930 --> 00:04:56,180
going to search for that up here.

69
00:04:56,180 --> 00:04:57,070
So here we go.

70
00:04:57,080 --> 00:05:01,200
So in the core minimal that's been included from the very beginning.

71
00:05:01,250 --> 00:05:05,170
This also includes our unreal math utility header file.

72
00:05:05,210 --> 00:05:10,220
The one thing we need to be aware of is that's not always is something like that going to be included.

73
00:05:10,220 --> 00:05:16,340
So if you wanted to use Rand range in your own projects you may not have everything all the prerequisites

74
00:05:16,340 --> 00:05:16,760
there.

75
00:05:16,820 --> 00:05:25,700
You would have to hash include the unreal math utility like so I shall comment that's out and leave

76
00:05:25,700 --> 00:05:27,350
it there for reference.

77
00:05:27,350 --> 00:05:30,580
So f math Rand Grange and then we would need to give it something.

78
00:05:30,590 --> 00:05:38,120
So we would give its size zero and 10 as an example and then our semicolon on the end.

79
00:05:38,300 --> 00:05:43,550
Now at the moment we're not doing anything without generating a random number and they're not doing

80
00:05:43,550 --> 00:05:44,210
anything with it.

81
00:05:44,540 --> 00:05:49,230
So we could pipe that straight into let's say a print line text.

82
00:05:49,640 --> 00:05:53,040
I have a space there that on a dummy all to completion for me.

83
00:05:53,270 --> 00:05:59,000
And then this here is probably going to give us a an integer but you haven't defined anything yet but

84
00:05:59,000 --> 00:06:05,810
let's pop in and it will probably be implicitly converted for us that we want f math and range between

85
00:06:05,810 --> 00:06:06,790
North and 10.

86
00:06:06,860 --> 00:06:10,640
And yes if we hover over it we can see it's been converted to 30.

87
00:06:10,730 --> 00:06:13,310
So have I got the right number of brackets.

88
00:06:13,310 --> 00:06:14,000
Yes I have.

89
00:06:14,030 --> 00:06:17,400
So let's go and see what that prints out there we've saved our work.

90
00:06:17,420 --> 00:06:20,690
Let's go over into Yui for and press compile.

91
00:06:20,690 --> 00:06:25,250
Now that hasn't actually compiled the code that's kept it as it was before so I'm just going to click

92
00:06:25,250 --> 00:06:27,130
stop and recompile.

93
00:06:27,140 --> 00:06:27,510
Okay.

94
00:06:27,530 --> 00:06:32,990
So with that compiled when we go ahead and press play now we should see a random number somewhere between

95
00:06:32,990 --> 00:06:34,190
0 and 10.

96
00:06:34,580 --> 00:06:39,650
If we stop it and play it again we get four and it's just going to keep going round giving us a random

97
00:06:39,650 --> 00:06:44,060
number within the range that we've specified and we've got seven twice that and there we go.

98
00:06:44,360 --> 00:06:50,990
So that's giving us out a random number which is great because what we can now do is say we want a random

99
00:06:50,990 --> 00:06:58,050
number of a particular array which is really useful because then we're going to get back a random word.

100
00:06:58,070 --> 00:07:00,650
If we target are valid words array.

101
00:07:01,510 --> 00:07:01,750
Okay.

102
00:07:01,760 --> 00:07:03,630
So let's go down to our hidden word.

103
00:07:03,650 --> 00:07:04,220
So here we go.

104
00:07:04,220 --> 00:07:09,380
We got where this is where we set our hidden word and we got our valid words list and all valid words

105
00:07:09,380 --> 00:07:13,390
list comes back when we utilize our get valid words.

106
00:07:13,400 --> 00:07:16,050
So let's go ahead and pop that in.

107
00:07:16,100 --> 00:07:19,040
So we're going to get valid words.

108
00:07:19,040 --> 00:07:19,490
There we go.

109
00:07:19,500 --> 00:07:24,890
That comes back and we're going to pass into it's our words which shall be our first word list that

110
00:07:24,890 --> 00:07:26,630
we have which is good.

111
00:07:26,630 --> 00:07:31,970
Now what this is saying at the moment is that it equals an array and we don't want that because this

112
00:07:31,970 --> 00:07:39,950
is returning valid words which is a T array which is not what we want we want an element of that's here

113
00:07:39,950 --> 00:07:40,250
right.

114
00:07:40,940 --> 00:07:46,760
So we can get the element of that's here right here with our square brackets and then we can just say

115
00:07:46,820 --> 00:07:50,300
zero for the moment and we can see whether or not that works.

116
00:07:50,300 --> 00:07:53,130
Let's save it come out and press compile.

117
00:07:53,630 --> 00:07:53,920
OK.

118
00:07:53,930 --> 00:07:59,060
So when we press play now we should see that the hidden word has been set to the first elements of our

119
00:07:59,060 --> 00:07:59,810
array.

120
00:07:59,930 --> 00:08:06,670
So the hidden word is able so we successfully pulled an element from the array that's really good.

121
00:08:06,710 --> 00:08:13,250
So now we just need to put within those square brackets something that will return us a random word

122
00:08:13,370 --> 00:08:16,160
from the valid words list.

123
00:08:16,160 --> 00:08:24,060
So your challenge is to use round range and set the hidden word to a random word from valid words pulls

124
00:08:24,080 --> 00:08:25,910
a video now and give that a go

125
00:08:29,830 --> 00:08:31,560
OK everybody welcome back.

126
00:08:31,570 --> 00:08:37,910
Let's go ahead now and use random rage to set the hidden word to a random word from valid words.

127
00:08:38,040 --> 00:08:42,830
OK so over in our implementation you probably worked out the we need to put something in the square

128
00:08:42,830 --> 00:08:44,970
brackets using the round range.

129
00:08:44,990 --> 00:08:51,210
So first of all we need to go f math prolong colon Rand range.

130
00:08:51,210 --> 00:08:53,540
Fortunately is at the top of the list there.

131
00:08:53,580 --> 00:08:57,210
So we need our minimum and maximum while the minimum is going to be zero.

132
00:08:57,210 --> 00:08:58,180
We already know that.

133
00:08:58,250 --> 00:09:00,540
But what is the maximum going to be.

134
00:09:00,540 --> 00:09:06,660
Well our maximum here is going to be the number of elements in our array of valid words right.

135
00:09:06,660 --> 00:09:09,540
So we're going to be calling this function again.

136
00:09:09,570 --> 00:09:13,820
So there are a number of elements in this array minus one.

137
00:09:14,070 --> 00:09:19,310
That's important because it may have 30 elements in the array but that will be from zero to 29.

138
00:09:19,950 --> 00:09:25,350
I can't remember how many valid words there are in here but we need to put it in code form so if we

139
00:09:25,350 --> 00:09:31,980
change our word list the code works it's not hard coded to do anything else.

140
00:09:32,040 --> 00:09:36,720
So we returning all valid words we're going to have to use to get valid words again.

141
00:09:36,810 --> 00:09:38,460
So let's go ahead and do that.

142
00:09:38,520 --> 00:09:39,210
So here we go.

143
00:09:39,300 --> 00:09:47,670
So we're going to go get valid words and then we're calling that function with words in it again.

144
00:09:47,790 --> 00:09:50,370
Otherwise we'd be comparing a different list.

145
00:09:50,370 --> 00:09:55,650
After that we're going to need our DOT name function to bring us the number of elements in the array.

146
00:09:56,280 --> 00:09:59,540
And then finally we're going to have to take one from it.

147
00:10:00,060 --> 00:10:05,540
And if you were unsure of those values you can always print it out to make sure that it's working properly.

148
00:10:05,580 --> 00:10:10,300
In fact if I grab get valid words dot num minus one.

149
00:10:10,320 --> 00:10:17,820
This little bits of code here and then print it out along with here's the number of valid words is and

150
00:10:17,820 --> 00:10:22,230
then up here do a print line forms like another debug line I suppose.

151
00:10:22,230 --> 00:10:33,690
Print line text and then valid words minus one is what we should find is it's one less than the number

152
00:10:33,780 --> 00:10:34,850
above it.

153
00:10:37,870 --> 00:10:42,040
And we don't need the extra brackets on the end.

154
00:10:42,040 --> 00:10:44,580
Or do we just have a look where was that.

155
00:10:44,590 --> 00:10:45,250
Yes.

156
00:10:45,250 --> 00:10:47,370
Yes we do need that brackets.

157
00:10:47,440 --> 00:10:47,720
Okay.

158
00:10:47,740 --> 00:10:50,710
All of our brackets are correct that I'm happy.

159
00:10:50,710 --> 00:10:53,380
Let's save our code and go over to unreal.

160
00:10:53,380 --> 00:10:57,830
Here we go so the number of words is four hundred and fifty one.

161
00:10:57,850 --> 00:10:59,580
Perfect that's exactly what I want to see.

162
00:10:59,800 --> 00:11:01,660
So I hidden word is same brilliant.

163
00:11:01,690 --> 00:11:03,030
So let's type in essay.

164
00:11:03,250 --> 00:11:06,490
Well let's type in SRM e we've won.

165
00:11:06,520 --> 00:11:06,940
Brilliant.

166
00:11:07,180 --> 00:11:08,340
We play again.

167
00:11:08,500 --> 00:11:10,210
Typing your guess and press continue.

168
00:11:10,210 --> 00:11:13,510
Well it's not going to be the same word this time it's going to be something else.

169
00:11:13,550 --> 00:11:21,220
And because we've not included our debug code in the repeating parts of our game we don't have a debug

170
00:11:21,220 --> 00:11:21,820
line there.

171
00:11:21,940 --> 00:11:25,220
So that's something we could potentially move around so we can test the game.

172
00:11:25,270 --> 00:11:31,050
I don't know what this is going to be so I'm just going to type in same same and same now it was body.

173
00:11:31,050 --> 00:11:33,610
No no of course we don't have our bulls and cows yet.

174
00:11:33,610 --> 00:11:37,800
So there was really no way of guessing that but presence to play again.

175
00:11:37,810 --> 00:11:38,170
Brilliant.

176
00:11:38,170 --> 00:11:40,150
We've got a working game here.

177
00:11:40,150 --> 00:11:45,170
Apart from the fact that it doesn't give us any clues as to what that hidden word is going to be.

178
00:11:45,220 --> 00:11:45,850
So there we go.

179
00:11:45,850 --> 00:11:46,330
Brilliant.

180
00:11:46,510 --> 00:11:49,860
I think I'm going to do a few tidy up bits to my code.

181
00:11:49,870 --> 00:11:52,060
Now how did you guys get on.

182
00:11:52,090 --> 00:11:55,480
Did you manage to get round range working.

183
00:11:55,480 --> 00:11:57,340
Did you remember to minus one at the end.

184
00:11:57,340 --> 00:12:02,680
That's something that I know that when I was just quickly putting this all together that's something

185
00:12:02,710 --> 00:12:06,820
that's very easy to forget about that you're talking about the number of elements but you actually start

186
00:12:06,820 --> 00:12:08,750
counting from zero.

187
00:12:08,800 --> 00:12:12,370
And we've come across that before and it's something to watch out for.

188
00:12:12,370 --> 00:12:19,280
So this spits at the top here this setting up of the game and this debug this whole system here.

189
00:12:19,570 --> 00:12:22,900
I don't really want to know the number of possible words anymore.

190
00:12:22,900 --> 00:12:24,850
That is all fine.

191
00:12:24,850 --> 00:12:25,500
I'm going to comment.

192
00:12:25,510 --> 00:12:26,480
That's out for the moment.

193
00:12:26,480 --> 00:12:27,410
That's nice and clean.

194
00:12:27,550 --> 00:12:31,240
But this debug line here the hidden word is.

195
00:12:31,570 --> 00:12:38,350
Well I'm going to put it elsewhere because at the moment it's only happening at Biggin play and it won't

196
00:12:38,350 --> 00:12:39,990
happen any other time.

197
00:12:40,000 --> 00:12:44,580
However a good place to have it will be when we set up the game.

198
00:12:44,590 --> 00:12:52,210
So we start the game we set up the game we set the hidden word but at the moment we don't have any debug

199
00:12:52,210 --> 00:12:55,220
line so this is going to be a great place to put it.

200
00:12:55,240 --> 00:13:01,090
So in order to get to that next line 44 I'm going to press control and enter and that's going to make

201
00:13:01,090 --> 00:13:02,760
sure I go down to the new line.

202
00:13:02,770 --> 00:13:08,980
So this is a great place to put that and we can turn it on and off as we want this top rates up here.

203
00:13:08,980 --> 00:13:12,490
Well at this point we can just get rid of all of that.

204
00:13:12,550 --> 00:13:14,630
And our example code up here.

205
00:13:14,680 --> 00:13:19,990
So now we begin playing we just set up the game and then we wait for the user inputs.

206
00:13:20,020 --> 00:13:20,950
So that's brilliant.

207
00:13:20,950 --> 00:13:24,490
I'm going to make sure quickly that my code works.

208
00:13:24,520 --> 00:13:29,170
Now please do share your work over in the discussions I'm looking forward to seeing how you're getting

209
00:13:29,170 --> 00:13:29,860
on.

210
00:13:29,950 --> 00:13:30,490
Here we go.

211
00:13:30,610 --> 00:13:33,110
Now my code is nice and clean.

212
00:13:33,280 --> 00:13:37,990
I'm cheating of course but there we go that's exactly what I want to see happening.

213
00:13:37,990 --> 00:13:38,470
Brilliant.

214
00:13:38,470 --> 00:13:40,630
Our game is really coming together now.

215
00:13:40,630 --> 00:13:45,400
The final thing is to really give now the player the bulls and cows.

216
00:13:45,550 --> 00:13:48,300
So we will start doing that over in the next lecture.

217
00:13:48,310 --> 00:13:48,760
Take our.
