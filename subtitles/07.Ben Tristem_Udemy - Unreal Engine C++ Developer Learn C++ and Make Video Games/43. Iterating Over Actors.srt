1
00:00:04,520 --> 00:00:08,780
Hello and welcome and this light show, we're gonna be introducing this piece of code here, the T actor

2
00:00:08,810 --> 00:00:14,900
range, and see how it allows us to iterate over all of the actors in a given level.

3
00:00:15,110 --> 00:00:16,640
Let's dive in and see how it works.

4
00:00:17,600 --> 00:00:24,760
So at the moment in the porn killed of an KMEL game mode we are calling a game has ended on the player

5
00:00:24,770 --> 00:00:25,270
controller.

6
00:00:25,970 --> 00:00:32,180
But in actual fact, game has ended is a function on all controllers, whether A.I. or player controllers.

7
00:00:32,180 --> 00:00:37,970
And we should probably be notifying the A.I. controllers as well that the game has ended.

8
00:00:38,450 --> 00:00:43,220
And that's certainly gonna be the case, or it's going to make it easier to do a win condition as well,

9
00:00:43,220 --> 00:00:46,010
because we won't necessarily have to play a pawn coming in here.

10
00:00:47,030 --> 00:00:49,970
So how do we go ahead and do this?

11
00:00:50,330 --> 00:00:57,170
Well, I'm going to create a new function in the KMEL game mode, a private one called End Game, which

12
00:00:57,170 --> 00:00:59,510
is going to be responsible for this act.

13
00:00:59,540 --> 00:01:01,340
So end game.

14
00:01:01,400 --> 00:01:04,690
And it's gonna need some information is gonna need to know who has won.

15
00:01:04,850 --> 00:01:06,650
Has it been the player or has it been the A.I.?

16
00:01:06,670 --> 00:01:11,540
So I'm gonna create a pool here called B is play a winner.

17
00:01:12,410 --> 00:01:18,710
And that is going to be what tells us whether or not we should be telling the A.I. that it's one or

18
00:01:18,710 --> 00:01:19,940
telling the player that it's one.

19
00:01:19,970 --> 00:01:22,640
Because remember, in here, our game has ended.

20
00:01:22,700 --> 00:01:26,510
Takes Boolean telling the controller whether or not it is one of the winners.

21
00:01:27,650 --> 00:01:31,970
So what we're gonna have to do is figure out, first of all, let's go ahead and create the implementation.

22
00:01:31,970 --> 00:01:37,670
So I'm gonna do my control shift P and then create implementation and then we're gonna have to figure

23
00:01:37,670 --> 00:01:44,630
out how we can find all of the controllers in our scene so that we can cool game has ended on those

24
00:01:44,630 --> 00:01:45,380
controllers.

25
00:01:46,610 --> 00:01:51,720
Now, the way we're gonna do this is using a an engine helper call.

26
00:01:51,920 --> 00:01:57,500
So forget to hash include going against use engine utils dot h festival.

27
00:01:57,660 --> 00:02:01,130
That's going to bring into scope the help that I want.

28
00:02:01,220 --> 00:02:05,730
And the helper is called T actor range A..

29
00:02:05,810 --> 00:02:11,330
Actor range is a template thing so we can do the angle brackets here.

30
00:02:11,840 --> 00:02:18,770
We can then put a controller and then the parentheses and get world.

31
00:02:18,890 --> 00:02:19,970
Now what's this gonna do.

32
00:02:20,150 --> 00:02:27,500
It's going to returners a range object, which is basically sort of like a list that goes over all of

33
00:02:27,500 --> 00:02:28,610
the controllers.

34
00:02:28,970 --> 00:02:35,420
That's why we've got that controller parameter in there in the world, a.k.a. the level, and we can

35
00:02:35,420 --> 00:02:37,220
use this in a full loop.

36
00:02:37,340 --> 00:02:39,470
So let me start wrapping this in a full loop.

37
00:02:39,740 --> 00:02:44,070
So we're gonna do a four over the A controller.

38
00:02:44,210 --> 00:02:47,720
So that thing that is the variable that we're going to be ranging over.

39
00:02:48,050 --> 00:02:53,930
It's going to be an A controller pointer, which I'm gonna call controller, and then we use the Kolon

40
00:02:54,440 --> 00:02:56,150
for what we're going to range over.

41
00:02:56,150 --> 00:03:02,900
It's going to be this TI active range and then we can put our close in parentheses and our curly brackets.

42
00:03:03,350 --> 00:03:04,880
So what's this saying?

43
00:03:04,910 --> 00:03:12,080
It's saying that we're going to do a full loop over every controller in the world and it's gonna be

44
00:03:12,080 --> 00:03:14,180
in this variable called controller.

45
00:03:15,180 --> 00:03:20,120
And now there's a couple of things that you might need to know, so one thing is we can query a controller

46
00:03:20,120 --> 00:03:22,550
for whether or not it's a player control without having to cast.

47
00:03:22,550 --> 00:03:24,920
We can actually just do controller arrow.

48
00:03:24,950 --> 00:03:28,630
And then I think I'm going actually needs to include my controller here.

49
00:03:28,640 --> 00:03:31,130
So hash include at the top.

50
00:03:31,160 --> 00:03:37,850
We're going to do a game framework forward slash controlled dot h and now to complete will probably

51
00:03:37,850 --> 00:03:38,300
work.

52
00:03:38,480 --> 00:03:39,020
Yes it has.

53
00:03:39,050 --> 00:03:41,780
So what we can do is obviously we can call game has ended.

54
00:03:41,810 --> 00:03:43,460
That's what my first autocomplete here.

55
00:03:43,790 --> 00:03:46,310
But also we can say is player controller.

56
00:03:46,700 --> 00:03:50,360
Basically it's going to say is this thing in the world to play a controller?

57
00:03:50,930 --> 00:03:58,250
And that will allow us to decide whether or not we should be passing in true or false two game has ended.

58
00:03:58,580 --> 00:04:04,910
So my charge to you is to fill out this for loop by calling game has ended with the correct boolean

59
00:04:04,910 --> 00:04:05,690
parameter.

60
00:04:06,410 --> 00:04:07,350
So we're gonna do this.

61
00:04:07,580 --> 00:04:09,920
So that's basically it should be true.

62
00:04:10,000 --> 00:04:15,740
If the if the controller that we're talking to, the controller currently in the for loop is a player

63
00:04:15,740 --> 00:04:21,590
controller and they're boolean that we have passed in says that the player controller is the winner,

64
00:04:22,370 --> 00:04:23,540
should also be true.

65
00:04:23,810 --> 00:04:31,310
If it is not a play controller and not the player, the player is the winner, basically saying if this

66
00:04:31,310 --> 00:04:33,260
is an A.I. and the A.I. is the winner.

67
00:04:34,100 --> 00:04:35,930
False if the player controller.

68
00:04:36,050 --> 00:04:40,880
But the player isn't the winner and false if not the play controller, but the player is the winner.

69
00:04:40,910 --> 00:04:42,800
You kind of see where this is going.

70
00:04:42,810 --> 00:04:43,990
Hopefully so.

71
00:04:44,070 --> 00:04:46,730
Pause video and have a go at implementing it like this.

72
00:04:46,730 --> 00:04:47,990
You might use if statements.

73
00:04:47,990 --> 00:04:53,600
You might use some other logic to allow you to calculate this boolean pause video and have a go.

74
00:04:55,010 --> 00:04:55,940
Okay, welcome back.

75
00:04:55,970 --> 00:05:02,990
So you could do this a number of ways, one way might be to say if the B is play control a winner and

76
00:05:02,990 --> 00:05:09,920
then we're going to put something in this if statement, we might do a Boole up here to decide that

77
00:05:09,920 --> 00:05:14,210
basically B is player controller.

78
00:05:15,340 --> 00:05:18,790
Which were going to save from the fact that we do a controller.

79
00:05:19,940 --> 00:05:28,190
Arrow, the is plant controller like so and then we might say, okay, well, we want to call Controller

80
00:05:28,530 --> 00:05:29,110
Arrow.

81
00:05:29,270 --> 00:05:30,860
Game has ended.

82
00:05:31,260 --> 00:05:33,140
We're going to pass in the null points for now.

83
00:05:33,500 --> 00:05:40,670
And then we're going to say, well, if it is a player that is the winner and we are a player controller,

84
00:05:40,700 --> 00:05:43,280
then yes, basically go with that value.

85
00:05:43,310 --> 00:05:44,900
So play a controller.

86
00:05:45,110 --> 00:05:47,900
Otherwise, if it's not the player controller, it's going to have lost.

87
00:05:48,380 --> 00:05:49,680
And we can just negate this.

88
00:05:49,700 --> 00:05:54,850
So we can say else that we're going to call the controller.

89
00:05:54,890 --> 00:06:02,360
Game has ended with not is play controller, basically, because we're saying the player is not the

90
00:06:02,360 --> 00:06:02,540
winner.

91
00:06:02,550 --> 00:06:04,700
The A.I. is the winner in this out statement.

92
00:06:05,180 --> 00:06:11,690
And so what we want to do is say that the depends on whether or based the opposite of whether the player

93
00:06:11,720 --> 00:06:14,150
has one, which is to say that the A.I. has won.

94
00:06:14,870 --> 00:06:17,180
So that's one way of doing it for sure.

95
00:06:17,540 --> 00:06:22,940
But there is another and simpler way, which is simply to say, are we the winner?

96
00:06:23,030 --> 00:06:25,800
So B is winner.

97
00:06:26,780 --> 00:06:36,560
And this can simply be to say that whether you are the player controller is equal to be is player winner.

98
00:06:37,160 --> 00:06:42,710
Now, let's think about this a little bit more, and I'll just complete this fully and then we'll talk

99
00:06:42,710 --> 00:06:43,010
about it.

100
00:06:43,040 --> 00:06:51,950
So we're going to say controller hand game has ended is going to be the null pointer with the B is winner

101
00:06:52,110 --> 00:06:52,880
past in here.

102
00:06:54,140 --> 00:06:56,420
Now, why does this statement work?

103
00:06:56,810 --> 00:06:58,150
Well, let's think about the cases.

104
00:06:58,160 --> 00:06:58,450
Right.

105
00:06:58,850 --> 00:07:02,990
So we have a player controller in here and the player is the winner.

106
00:07:03,770 --> 00:07:06,730
Then, yes, we are the winner and they are equal.

107
00:07:06,740 --> 00:07:07,520
True and true.

108
00:07:08,420 --> 00:07:13,370
How about if this is not the player controller and the player is not the winner?

109
00:07:13,940 --> 00:07:15,170
Well, then this is false.

110
00:07:15,560 --> 00:07:21,560
And this over here is also false so that the two of them are equal and the result is a winner.

111
00:07:21,590 --> 00:07:22,120
Is that true?

112
00:07:22,120 --> 00:07:22,290
Yes.

113
00:07:22,400 --> 00:07:27,170
Because if we are the A.I. and the A.I. is the winner, then we should be the winner.

114
00:07:28,040 --> 00:07:33,380
Otherwise, if these two are not equal, i.e. that we've got an A.I. controller but the player is the

115
00:07:33,380 --> 00:07:39,200
winner or we've got the player controller and the A.I. is the winner, then we're going to have a true

116
00:07:39,200 --> 00:07:40,790
and false or a false and true.

117
00:07:41,360 --> 00:07:45,110
These two aren't going to be equal and the Boolean is going to evaluate to false.

118
00:07:45,500 --> 00:07:49,480
So you can see then each of the cases and I've gone through all of the cases there.

119
00:07:50,240 --> 00:07:51,710
This ends up with the right answer.

120
00:07:51,740 --> 00:07:53,690
So we know that this is the right answer.

121
00:07:53,720 --> 00:07:58,400
This is the great thing about booleans is that usually you can evaluate all of the cases because you

122
00:07:58,400 --> 00:08:00,410
can say, okay, well, what are the cases?

123
00:08:00,450 --> 00:08:01,880
It's gonna be true and true.

124
00:08:01,910 --> 00:08:02,540
It's gonna be true.

125
00:08:02,540 --> 00:08:04,010
And false can be false and true.

126
00:08:04,010 --> 00:08:05,090
It's gonna be false and false.

127
00:08:05,540 --> 00:08:06,950
You can evaluate all those cases.

128
00:08:07,010 --> 00:08:12,440
If all of those cases are correct, then you know, you've got a correct boolean statement.

129
00:08:13,140 --> 00:08:13,370
Cool.

130
00:08:13,760 --> 00:08:18,470
So that's how we're going to calculate the B is when I finally we just need to call our end game mode.

131
00:08:18,470 --> 00:08:21,490
At the moment, we're doing a direct call to the player controller.

132
00:08:21,520 --> 00:08:22,610
Game has ended.

133
00:08:23,330 --> 00:08:27,650
And what I actually want to do here is go ahead and call end game.

134
00:08:27,920 --> 00:08:34,640
And we want to pass in false because this is a situation where the player has actually lost and that's

135
00:08:34,640 --> 00:08:36,590
basically what we want to achieve.

136
00:08:36,650 --> 00:08:40,610
Now, one more thing to note here is that there's no points.

137
00:08:40,610 --> 00:08:47,960
We've been Paskin is going to lead us to problems down the road because if the player has actually won,

138
00:08:48,680 --> 00:08:52,900
it's going to try and take away the focus from our player pawn.

139
00:08:52,940 --> 00:09:01,090
So what we want to pass in here is simply that the focus should be on the controller dot get porn.

140
00:09:01,880 --> 00:09:08,900
And that's basically saying that you should put the focus of your own player controller, be it basically

141
00:09:08,900 --> 00:09:10,460
where should your camera be pointing?

142
00:09:10,790 --> 00:09:12,380
It should still be pointing on your porn.

143
00:09:13,100 --> 00:09:14,600
Why is it important that we do this?

144
00:09:14,990 --> 00:09:17,180
And why is there this option here in the first place?

145
00:09:17,210 --> 00:09:23,900
Well, in a lot of games you often or a little off match style games, you might have that if the game

146
00:09:23,900 --> 00:09:27,410
has ended, you want to go and follow the porn.

147
00:09:27,420 --> 00:09:28,250
That was the winner.

148
00:09:28,310 --> 00:09:34,130
So imagine like a fortnight scenario, you often go and follow the person who killed you.

149
00:09:34,550 --> 00:09:36,410
This is the mechanism for doing this.

150
00:09:36,440 --> 00:09:40,280
You basically pass in the pawn of the person who did the killing.

151
00:09:40,700 --> 00:09:41,810
That's what we're doing in our game.

152
00:09:41,810 --> 00:09:45,380
We're going to carry on looking at our porn, whether we'd win or we die.

153
00:09:45,560 --> 00:09:46,990
So that's pretty much it for the lateral.

154
00:09:47,000 --> 00:09:50,030
Let's just compile and see whether it's working.

155
00:09:50,180 --> 00:09:53,330
Let's dive on over into Unreal and hit play.

156
00:09:53,570 --> 00:09:56,030
Let's go and get ourselves killed.

157
00:09:56,180 --> 00:09:56,810
There you go.

158
00:09:57,170 --> 00:09:57,680
Everything's working.

159
00:09:57,860 --> 00:10:01,050
As before, we're still getting that cool to the player controller.

160
00:10:01,400 --> 00:10:03,130
And then we re start.

161
00:10:03,260 --> 00:10:03,770
Great stuff.

162
00:10:03,800 --> 00:10:05,510
So in this lecture, just a recap.

163
00:10:05,540 --> 00:10:06,440
What have we seen?

164
00:10:06,500 --> 00:10:14,270
Well, we've seen how we can iterate over actors in the level in order to do something like calling

165
00:10:14,270 --> 00:10:16,820
a function on each of those actors.

166
00:10:17,060 --> 00:10:22,790
Next lecture, we will be using the T actor range again, this time to calculate whether the player

167
00:10:22,910 --> 00:10:23,480
has one.

168
00:10:23,810 --> 00:10:24,220
See you there.
