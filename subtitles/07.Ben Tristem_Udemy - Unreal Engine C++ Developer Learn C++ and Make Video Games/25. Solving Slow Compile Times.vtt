WEBVTT
1
00:00:04.480 --> 00:00:06.070
Hello everybody and welcome.

2
00:00:06.070 --> 00:00:12.040
We've got a problem at the moment with unreal where we go ahead and click compile and where our code

3
00:00:12.040 --> 00:00:16.750
was only taking a few moments when we were just doing the command line.

4
00:00:16.750 --> 00:00:19.090
Now it's a real pain in the backside.

5
00:00:19.090 --> 00:00:24.940
It's taking in excess of 10 seconds to compile not all of you will experience this problem but some

6
00:00:24.940 --> 00:00:27.310
of you have and certainly I have.

7
00:00:27.310 --> 00:00:31.420
And so Sam Sam's going to guide me through the process now of how to fix this with you.

8
00:00:31.950 --> 00:00:32.170
Yes.

9
00:00:32.590 --> 00:00:38.150
So first of all to know if you are actually experiencing the same problem as us once the compulsive

10
00:00:38.160 --> 00:00:48.910
finished what we want to do is go to the window menu and then go to help tools and open up the message

11
00:00:48.910 --> 00:00:53.100
log and then go to the compiler log.

12
00:00:54.030 --> 00:00:57.930
So basically when we get to a computer block whichever way you want to do this is just one way.

13
00:00:58.530 --> 00:01:05.100
And what you'll notice here is that the parallel execute the time it's giving is just like six seconds

14
00:01:05.100 --> 00:01:11.460
or nine seconds six point nine seconds rather which isn't what we saw we just saw it take about 32.

15
00:01:11.820 --> 00:01:20.670
So what we also see is the reflection code generated which is a few lines up from the top is taking

16
00:01:20.670 --> 00:01:27.060
23 seconds and we hadn't changed a single line of header code so it shouldn't have to be rebuilding

17
00:01:27.060 --> 00:01:29.010
the reflection at this point.

18
00:01:29.520 --> 00:01:32.230
But for some reason it seems to be doing it anyway.

19
00:01:32.280 --> 00:01:40.500
So what we need to do as I found out from the forums is we need to go over to a Visual Studio file a

20
00:01:40.500 --> 00:01:48.770
product whatever it is and we need to go and refresh a file in the in Unreal actual files.

21
00:01:48.780 --> 00:01:56.520
So if you go to see them like a student code in our case and we're actually gonna go down to the section

22
00:01:56.520 --> 00:02:02.430
down below here which has the all the stuff to do with unreal we're talking about before.

23
00:02:02.430 --> 00:02:04.410
So this one here and we want to go.

24
00:02:04.410 --> 00:02:13.370
Let me read out the path to you it is engine binaries win then depending on your platform it's going

25
00:02:13.370 --> 00:02:16.320
to be win 64 percent for you.

26
00:02:16.320 --> 00:02:17.850
Depends what you're on.

27
00:02:17.850 --> 00:02:22.840
And then we're looking for the unreal headed tool dot target almost there.

28
00:02:24.740 --> 00:02:26.130
We are dot target.

29
00:02:26.150 --> 00:02:30.920
So it's near the end of that list of the tools to go and open on that path.

30
00:02:31.290 --> 00:02:37.380
Now just make a single spaced change at the end of one of these comments or something just so it changes

31
00:02:37.380 --> 00:02:39.580
the file and save them.

32
00:02:39.660 --> 00:02:43.640
Notice the dots at the top who refused the extra time to do this.

33
00:02:43.710 --> 00:02:44.540
It's changed.

34
00:02:45.180 --> 00:02:50.910
Now go back over into unreal and they compile this time and it should still take a long time this time

35
00:02:50.910 --> 00:02:56.730
I think but then subsequent compilers should be much quicker.

36
00:02:56.730 --> 00:03:02.430
So it should take basic just those six seconds it was taken to compile the code without the 23 seconds

37
00:03:02.430 --> 00:03:08.880
it was taking to the end they'll head to and generally speaking this means that every time you only

38
00:03:08.880 --> 00:03:13.590
change C++ files they'll take that loan if you also change pedophiles.

39
00:03:13.600 --> 00:03:17.240
It will still take the twenty three seconds but it's vastly improved.

40
00:03:17.340 --> 00:03:23.010
When you're just messing around in C++ files so try and try running again and see if that actually worked

41
00:03:24.500 --> 00:03:25.420
got my fingers crossed.

42
00:03:29.260 --> 00:03:30.820
Seems to be taking a long time.

43
00:03:30.830 --> 00:03:33.450
Let's see if we have a look in the.

44
00:03:33.460 --> 00:03:34.880
That felt much quicker though.

45
00:03:35.530 --> 00:03:40.370
So let's have a look at the develop tools in the message look you've got to depend on the speed like

46
00:03:40.370 --> 00:03:41.480
the how much you can get out of it.

47
00:03:41.720 --> 00:03:42.710
That's a lot better.

48
00:03:42.800 --> 00:03:46.100
And if we have a look you can see it's no longer running and we all had it too.

49
00:03:46.230 --> 00:03:46.900
Yeah.

50
00:03:47.000 --> 00:03:50.850
So now this is just this is the speed of my kid's computer at this point.

51
00:03:51.260 --> 00:03:55.910
Depending on your computer you'll see you're going to get different numbers of seconds.

52
00:03:55.910 --> 00:04:01.650
The important thing is in the message log is no longer saying that it's running and we'll have a tool

53
00:04:01.730 --> 00:04:05.870
which is what was taken a long time it's no longer all that 20 seconds.

54
00:04:06.080 --> 00:04:09.440
So that I would say fixed is useful to you and can be useful for Mikey.

55
00:04:09.460 --> 00:04:16.430
I hope that lots of refactoring and changing of its code at least if he's any touching the C++ file

56
00:04:16.750 --> 00:04:20.960
it's going to be a lot quicker to run those changes and see what I think.

57
00:04:21.110 --> 00:04:22.150
Thank you Sam.

58
00:04:22.190 --> 00:04:24.860
And hopefully this will help you guys out as well.

59
00:04:24.890 --> 00:04:25.200
Take.
