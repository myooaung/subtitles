WEBVTT
1
00:00:04.900 --> 00:00:05.920
Hello and welcome.

2
00:00:05.980 --> 00:00:11.500
In this lecture, we're going to be getting our A.I. to be patrolling back and forth between allocations.

3
00:00:11.800 --> 00:00:16.930
So I'll go to my original start location, then I'll go back to his start location, wait a little bit

4
00:00:17.260 --> 00:00:18.600
and then go again.

5
00:00:18.670 --> 00:00:21.430
We're gonna be achieving this via at behavior trees.

6
00:00:21.730 --> 00:00:23.590
So let's dive in and see how it's done.

7
00:00:24.860 --> 00:00:28.810
So even now, we haven't made much use of our behavior, trailers fix that.

8
00:00:29.040 --> 00:00:36.560
We're going to create a behavior that allows us to go from the place where we're starting to the player's

9
00:00:36.560 --> 00:00:42.380
location and then go back to our original starting location.

10
00:00:43.130 --> 00:00:46.130
Now, the way we're going to do this is using the following.

11
00:00:46.160 --> 00:00:53.210
So there is a distinction in behavior, trees between things called tasks and things called composite

12
00:00:53.210 --> 00:00:57.020
nodes, or in this case, the example of the composite node is a sequence.

13
00:00:57.320 --> 00:01:01.100
So let's understand sequences and tasks as they kind of sound.

14
00:01:01.640 --> 00:01:03.110
A task is something you do.

15
00:01:03.530 --> 00:01:08.840
A sequence is a sequence of such tasks and it will run all of the tasks in order.

16
00:01:09.860 --> 00:01:15.500
So if you write, click and expand out the tasks here, you can see an example of what could be used

17
00:01:15.560 --> 00:01:16.130
as a task.

18
00:01:16.670 --> 00:01:21.680
For example, we can have move to moves to a location has moved directly to as well.

19
00:01:21.680 --> 00:01:24.180
I'm not entirely sure of that section we're gonna be using move to.

20
00:01:24.680 --> 00:01:27.680
You can get to play an animation such as a scratch your nose animation.

21
00:01:27.680 --> 00:01:29.720
You can get them to play a sound like, hey, you.

22
00:01:30.110 --> 00:01:30.980
That sort of stuff.

23
00:01:31.040 --> 00:01:34.550
You can get it to run another animal behavior if you want to.

24
00:01:35.180 --> 00:01:39.530
There's also a weight here, which is very useful for adding in some pauses into your behavior.

25
00:01:40.160 --> 00:01:45.950
Now, what's interesting about these tasks is that they can run for multiple frames, for multiple ticks.

26
00:01:46.280 --> 00:01:53.720
So move to will be running the entire time that you are moving to a location and it'll only finish when

27
00:01:53.720 --> 00:01:54.380
you get there.

28
00:01:55.070 --> 00:02:02.420
So if we did a move to and we had, we can stick it in the sequence here by just dragging down from

29
00:02:02.420 --> 00:02:07.910
the sequence node, then what you're going to get is, first of all, is going to try and move to the

30
00:02:07.910 --> 00:02:08.690
destination.

31
00:02:09.260 --> 00:02:13.580
And then we could add in a second task node, which tells it to wait.

32
00:02:14.090 --> 00:02:16.790
Then we can add in a third test task node notes.

33
00:02:16.790 --> 00:02:21.650
I'm pulling down from the sequence here and releasing, which allows me to add in a task quite quickly

34
00:02:21.950 --> 00:02:23.210
underneath that sequence node.

35
00:02:23.490 --> 00:02:24.080
And then I can tell it.

36
00:02:24.110 --> 00:02:26.600
I want to move to another location and then I can tell it.

37
00:02:26.600 --> 00:02:29.900
I want to wait again for a certain amount of time.

38
00:02:29.930 --> 00:02:35.690
Now, this is the basics of that, moving to the player, then moving back to where we started from.

39
00:02:36.050 --> 00:02:38.330
And you can see how the sequence node is working here.

40
00:02:38.540 --> 00:02:42.580
Now, as a root node as well, the root A. can only have one child node.

41
00:02:42.590 --> 00:02:44.330
So don't try and add more things under that.

42
00:02:44.630 --> 00:02:49.640
So we've got one sequence node as the root here, and that's basically saying that I'm going to run

43
00:02:49.640 --> 00:02:52.250
all of these tasks in order until one of them fails.

44
00:02:52.340 --> 00:02:56.150
And then once we're finished, we can start the process again.

45
00:02:57.260 --> 00:03:02.000
So the other thing to note here is that if you click on any one of these nodes, the details over here

46
00:03:02.030 --> 00:03:05.390
give us some impact over how that node works.

47
00:03:05.900 --> 00:03:13.430
For example, our move to currently takes a blackboard key in the blackboard section of its details,

48
00:03:13.430 --> 00:03:15.120
pain of self actor.

49
00:03:15.230 --> 00:03:17.150
We can change that over to the play location.

50
00:03:17.600 --> 00:03:22.400
So that's basically saying this move to node will now move to our player location.

51
00:03:22.410 --> 00:03:27.470
Then we've got to wait five seconds by default, but we can change that again to say we might want to

52
00:03:27.470 --> 00:03:33.160
wait two seconds and you might want to have a random deviation of one second so that basically we'll

53
00:03:33.170 --> 00:03:36.290
be waiting somewhere between one second, three seconds.

54
00:03:36.820 --> 00:03:39.500
Then we want to move to a different location.

55
00:03:39.530 --> 00:03:43.130
And that's a location that we don't currently have, which is our start location.

56
00:03:43.610 --> 00:03:44.740
So go ahead and add that.

57
00:03:44.810 --> 00:03:51.590
Let's go over to our blackboard, add a new key, add a vector, and have that as our start location.

58
00:03:52.370 --> 00:03:56.300
And then we can go back to the behavior tree and see that at Mutu Node.

59
00:03:56.360 --> 00:04:00.710
If you go to the details, Payne now has the start location as an option.

60
00:04:01.100 --> 00:04:05.060
And then we might say, we want to wait five seconds and then the process will start again because we'll

61
00:04:05.060 --> 00:04:07.160
have successfully completed our sequence note.

62
00:04:07.540 --> 00:04:08.390
So this is our works.

63
00:04:08.480 --> 00:04:09.960
You step down into the sequence.

64
00:04:09.980 --> 00:04:13.550
Note the sequence node then says, okay, well, where am I at?

65
00:04:13.670 --> 00:04:19.010
I want to start at the beginning and you can see there's no rings here are telling us the execution

66
00:04:19.340 --> 00:04:19.700
order.

67
00:04:19.760 --> 00:04:26.390
We start zero, which is the sequence node one is the move two, then two is wait three, move to four,

68
00:04:26.390 --> 00:04:30.770
etc. So we step through doing each task until completion or failure.

69
00:04:30.800 --> 00:04:33.920
If we fail, then a sequence node will fail as a whole.

70
00:04:34.220 --> 00:04:36.610
None of these are likely to fail, however.

71
00:04:36.710 --> 00:04:40.790
So we'll go through the whole thing and then the sequence node will complete.

72
00:04:40.880 --> 00:04:42.650
And the route will start it again.

73
00:04:42.680 --> 00:04:46.160
So we're going to go through an A loop, going to the play location.

74
00:04:46.160 --> 00:04:46.790
Waiting.

75
00:04:46.910 --> 00:04:49.670
Going back to the start location, waiting for a little bit longer.

76
00:04:50.210 --> 00:04:52.280
So that's the power of behavior trees.

77
00:04:52.290 --> 00:04:54.000
And you can start to nest these deeper.

78
00:04:54.020 --> 00:04:55.520
You can have choices in here.

79
00:04:55.820 --> 00:04:58.790
You can have decorator's all the stuff that we're gonna see in upcoming lectures.

80
00:04:59.090 --> 00:05:00.740
But this is the basis of it.

81
00:05:00.860 --> 00:05:07.430
A series of instructions that your A.I. can run and they can take more than one frame to complete.

82
00:05:07.700 --> 00:05:13.190
Now, what we want to do is actually set this start location to be something meaningful.

83
00:05:13.820 --> 00:05:16.640
Now, that should be reasonably straightforward.

84
00:05:16.670 --> 00:05:22.550
The only thing I probably want to tell you how to do is how do we get hold of the porn that we are in

85
00:05:22.550 --> 00:05:23.300
control of.

86
00:05:23.660 --> 00:05:24.080
So just.

87
00:05:24.160 --> 00:05:30.590
A reminder that if we go over to the controller dot h here, then we can have a look for the.

88
00:05:30.640 --> 00:05:39.580
Get porn and get porn method for both player controllers and A.I. controllers allows us to get hold

89
00:05:39.580 --> 00:05:41.230
of the porn that is being controlled.

90
00:05:41.260 --> 00:05:49.120
So you can use this to get the porn being controlled and get its location that begin play in order to

91
00:05:49.150 --> 00:05:51.460
set our start location.

92
00:05:51.880 --> 00:05:53.230
So here's the challenge to you.

93
00:05:53.230 --> 00:05:56.140
Set Astarte location, get the porn's location.

94
00:05:56.170 --> 00:06:00.040
As we've just talked a little bit about, set the correct Blackbaud Key.

95
00:06:00.110 --> 00:06:04.090
Use the player position that we've already used as a template for that.

96
00:06:04.800 --> 00:06:11.890
Set up the behavior tree the way I have in the lecture and test it out, see if that behavior gets the

97
00:06:12.130 --> 00:06:15.700
desired behavior of the player or the enemy.

98
00:06:15.970 --> 00:06:21.340
Moving to the player's pawn and then back to its original starting location, pulls a video and have

99
00:06:21.340 --> 00:06:21.670
a go.

100
00:06:23.080 --> 00:06:23.890
Kay, welcome back.

101
00:06:23.920 --> 00:06:25.310
So hopefully that worked out for you.

102
00:06:25.330 --> 00:06:26.920
Let's give it a shot.

103
00:06:27.250 --> 00:06:30.970
So I'm going to copy the line for our play location.

104
00:06:31.510 --> 00:06:36.100
And instead of setting the play location to go to our blackboard, have a look at our start location.

105
00:06:36.520 --> 00:06:39.550
We're going to copy that key value in here.

106
00:06:40.300 --> 00:06:45.910
And then instead of getting the location of the play pawn, we're doing to do a get pawn and then get

107
00:06:46.000 --> 00:06:52.630
actor location, which is going to get the pawn that we're currently controlling and get its location

108
00:06:52.720 --> 00:06:58.330
in the world so we can go ahead and go back to the editor and compile this.

109
00:06:58.540 --> 00:07:03.180
And once that's done, hit play and have a look at our pawn.

110
00:07:03.190 --> 00:07:05.350
He comes over, moves towards us.

111
00:07:05.440 --> 00:07:10.750
He waits three seconds or two seconds or one second, and then goes back to his original star location.

112
00:07:10.790 --> 00:07:16.730
And then he waits five seconds and then he comes back over to that original location to play pool.

113
00:07:16.780 --> 00:07:18.550
And so he's not updating that every frame.

114
00:07:18.570 --> 00:07:19.030
That's okay.

115
00:07:19.090 --> 00:07:20.150
That's how we designed it.

116
00:07:20.170 --> 00:07:20.800
At the moment.

117
00:07:21.130 --> 00:07:23.370
But you can see the behavior going on.

118
00:07:23.380 --> 00:07:25.360
He's patrolling back and forth.

119
00:07:25.720 --> 00:07:29.260
So let's have a look at the all of this in action.

120
00:07:29.290 --> 00:07:30.520
Have a look at our behavior tree.

121
00:07:31.060 --> 00:07:33.670
If we go back to our behavior change, select the A.I. in question.

122
00:07:33.670 --> 00:07:34.960
You can see where he's at.

123
00:07:34.990 --> 00:07:37.600
He's moving to he's waiting so many seconds.

124
00:07:37.630 --> 00:07:39.460
Then he's moving to his start location.

125
00:07:39.490 --> 00:07:40.480
He's waiting again.

126
00:07:40.870 --> 00:07:47.040
So we can undock this and see both of these things happening at the same time in our game.

127
00:07:47.050 --> 00:07:49.060
You can see he's moving to that location.

128
00:07:49.060 --> 00:07:50.020
He's waiting now.

129
00:07:50.320 --> 00:07:52.930
He is back to moving it to his start location.

130
00:07:52.960 --> 00:07:59.110
This is really handy for us to be able to debug, especially when these behaviors get a little bit more

131
00:07:59.110 --> 00:07:59.710
complicated.

132
00:07:59.710 --> 00:08:06.310
And it also gives you a sense of how unreal is calculating the behavior tree and how that execution

133
00:08:06.310 --> 00:08:09.310
flow is working within our behavior tree.

134
00:08:09.850 --> 00:08:10.350
Great stuff.

135
00:08:10.360 --> 00:08:15.040
In the next lecture, we're going to make these behaviors even more complicated and add some element

136
00:08:15.100 --> 00:08:21.460
of decision to whether we choose to follow a player or whether we choose to stay put where we are.

137
00:08:21.850 --> 00:08:23.140
I'll see you in that lecture.
