WEBVTT
ï»¿1
00:00:01.670 --> 00:00:04.005
Hi friends. In this video,

2
00:00:04.005 --> 00:00:06.000
we are going to write Python Bhutto three,

3
00:00:06.000 --> 00:00:10.125
skip to list your snapshots based on startTime.

4
00:00:10.125 --> 00:00:12.030
I mean, so you know,

5
00:00:12.030 --> 00:00:14.700
while taking snapshots, right?

6
00:00:14.700 --> 00:00:17.850
So based on time,

7
00:00:17.850 --> 00:00:23.340
so you're just arguing that you created snapshots around six AM today for dialysis.

8
00:00:23.340 --> 00:00:26.205
Same, you are going to take a snapshot.

9
00:00:26.205 --> 00:00:29.340
You have some automation script which will take snapshots

10
00:00:29.340 --> 00:00:33.645
daily at six AM or at 06:00 PM or busines, you're required time.

11
00:00:33.645 --> 00:00:36.840
Now what are the snapshots you create a, right?

12
00:00:36.840 --> 00:00:39.555
Suppose, let's say at six AM,

13
00:00:39.555 --> 00:00:44.645
I want to list them, right?

14
00:00:44.645 --> 00:00:50.990
For that, how you can create a put u3 script that may go and open my terminal theology.

15
00:00:50.990 --> 00:00:54.035
We how just to list out all your EC2 instance,

16
00:00:54.035 --> 00:00:57.245
sorry, snapshots, right?

17
00:00:57.245 --> 00:01:00.500
Get all snapshots.

18
00:01:00.500 --> 00:01:04.160
Now here. Yeah, first let

19
00:01:04.160 --> 00:01:12.840
me you can implement this with your client or even impure resource as well.

20
00:01:12.970 --> 00:01:16.170
Now let me run this first.

21
00:01:21.940 --> 00:01:26.150
Now, see, you are getting two snapshots from

22
00:01:26.150 --> 00:01:31.100
euro coin right now I want to see what is the time,

23
00:01:31.100 --> 00:01:33.980
I mean creation time for that, right?

24
00:01:33.980 --> 00:01:37.070
So for that, if you don't know how to take operation,

25
00:01:37.070 --> 00:01:39.680
just do like this VaR on

26
00:01:39.680 --> 00:01:46.265
each snap so that you can see there's this quote I am taking from your previous video.

27
00:01:46.265 --> 00:01:53.350
See if you observe here some very how start time, that's it.

28
00:01:53.350 --> 00:01:56.635
They simply operation on your object,

29
00:01:56.635 --> 00:02:01.430
which will do startTime.

30
00:02:03.480 --> 00:02:12.910
Now what I am doing is start time.

31
00:02:12.910 --> 00:02:14.230
Right?

32
00:02:14.230 --> 00:02:17.750
Now let me run this and see the output first.

33
00:02:18.330 --> 00:02:22.225
So you are getting one snapshot.

34
00:02:22.225 --> 00:02:25.300
Time is this one on one more snapshot is this one.

35
00:02:25.300 --> 00:02:26.425
Right?

36
00:02:26.425 --> 00:02:34.050
It's just assumed that Tuesday morning I had taken some snapshots.

37
00:02:34.050 --> 00:02:35.315
Right.

38
00:02:35.315 --> 00:02:40.955
Could a morning I have taken some snapshots at around 415.

39
00:02:40.955 --> 00:02:45.860
As of now, I am having only one snapshot for 54 hours,

40
00:02:45.860 --> 00:02:48.725
15 minutes, 44 seconds, something.

41
00:02:48.725 --> 00:02:50.135
Right?

42
00:02:50.135 --> 00:02:57.470
Today, one morning at 415 buddy mortgages or unit around six AM RPM, something like that.

43
00:02:57.470 --> 00:02:58.010
Okay.

44
00:02:58.010 --> 00:03:01.835
Because already I have taken some snapshot based on that, I wonder I district.

45
00:03:01.835 --> 00:03:03.470
Now.

46
00:03:03.470 --> 00:03:09.800
As of now I am having only one snapshot which is having this timestamp, right?

47
00:03:09.800 --> 00:03:16.515
But assume that daily I'm digging some ten snapshots or some 50 snapshots.

48
00:03:16.515 --> 00:03:18.460
But based on time,

49
00:03:18.460 --> 00:03:22.550
I want to list them which snapshots are taken around the stamp.

50
00:03:23.040 --> 00:03:24.535
Right?

51
00:03:24.535 --> 00:03:27.550
So for that, how you can implement a script.

52
00:03:27.550 --> 00:03:33.025
See what others are going to write that should work today or tomorrow,

53
00:03:33.025 --> 00:03:35.590
or day after tomorrow or at any date.

54
00:03:35.590 --> 00:03:38.680
I mean, if you run the skip today,

55
00:03:38.680 --> 00:03:44.545
then it has to list out the snapshot which are taken are only your required temp.

56
00:03:44.545 --> 00:03:52.220
So for that, what I am doing is get all snaps.

57
00:03:52.320 --> 00:03:55.090
I inputted already datetime module.

58
00:03:55.090 --> 00:03:59.660
Let me create today.

59
00:04:00.670 --> 00:04:06.170
Take goes to date time dot datetime lot.

60
00:04:06.170 --> 00:04:10.850
Now, know what is your required start time?

61
00:04:10.850 --> 00:04:12.800
Let me create my start time.

62
00:04:12.800 --> 00:04:19.700
So guys, you don't need to create datetime object that is using date Time.deltaTime.

63
00:04:19.700 --> 00:04:22.715
So whatever, today's date,

64
00:04:22.715 --> 00:04:26.885
today dot 0r today,

65
00:04:26.885 --> 00:04:31.325
month, then today dot today.

66
00:04:31.325 --> 00:04:34.145
Offer that you're very day, right?

67
00:04:34.145 --> 00:04:36.050
Whenever if I run this script today,

68
00:04:36.050 --> 00:04:45.095
it has to list out at snapshots which are taken around 41544 seconds.

69
00:04:45.095 --> 00:04:47.960
But if you schedule some jobs,

70
00:04:47.960 --> 00:04:49.430
you know, through lambda,

71
00:04:49.430 --> 00:04:52.415
exactly a six-year experience,

72
00:04:52.415 --> 00:04:54.080
then under time, just agenda,

73
00:04:54.080 --> 00:04:57.620
you have taken a snapshot around six AM.

74
00:04:57.620 --> 00:05:00.210
Then six.

75
00:05:00.670 --> 00:05:02.495
That's it.

76
00:05:02.495 --> 00:05:11.675
But here actually to identify because already taken around four, sorry, 41544 seconds.

77
00:05:11.675 --> 00:05:13.970
That's why I'm taking this time format.

78
00:05:13.970 --> 00:05:17.165
Now this is my start time.

79
00:05:17.165 --> 00:05:18.200
Right?

80
00:05:18.200 --> 00:05:23.330
Now what I am doing is say let me print first to this.

81
00:05:23.330 --> 00:05:25.580
Whatever the startTime I have taken,

82
00:05:25.580 --> 00:05:29.225
write print, start on us for time.

83
00:05:29.225 --> 00:05:32.040
C, the output for this.

84
00:05:34.330 --> 00:05:38.240
So this is time format I'm getting right.

85
00:05:38.240 --> 00:05:39.440
In this time format,

86
00:05:39.440 --> 00:05:41.330
you need to modify this.

87
00:05:41.330 --> 00:05:44.435
I mean, you are snapshot time.

88
00:05:44.435 --> 00:05:49.265
So for that, what I am doing is start time,

89
00:05:49.265 --> 00:05:52.910
then I'm using string format time object.

90
00:05:52.910 --> 00:05:58.100
So here, let me take hyphen wait,

91
00:05:58.100 --> 00:06:02.915
because I need to get B, sorry, month right.

92
00:06:02.915 --> 00:06:06.980
Then date, then space,

93
00:06:06.980 --> 00:06:12.120
then hours, minutes, and seconds.

94
00:06:12.940 --> 00:06:20.315
Say I'm taking from my account all snapshots and I'm displaying the snapshot time.

95
00:06:20.315 --> 00:06:24.605
So if you want to display your snapshot also, I mean IID,

96
00:06:24.605 --> 00:06:30.020
each snap dot id,

97
00:06:30.020 --> 00:06:35.180
and then it's created creation time. Right?

98
00:06:35.180 --> 00:06:38.790
See this snapshot has been created around this time.

99
00:06:38.980 --> 00:06:42.600
The snapshot is good at around this time.

100
00:06:42.600 --> 00:06:45.520
Now what I am doing is whatever the required time you,

101
00:06:45.520 --> 00:06:46.795
how in your hand start time.

102
00:06:46.795 --> 00:06:48.130
I'm lambda compared with

103
00:06:48.130 --> 00:06:57.190
that scene

104
00:06:57.190 --> 00:07:00.445
before printing your snapshot.

105
00:07:00.445 --> 00:07:05.305
If you will, snapshot diagram.

106
00:07:05.305 --> 00:07:10.285
If it is equals to our required start time,

107
00:07:10.285 --> 00:07:12.775
then only I want to capture that.

108
00:07:12.775 --> 00:07:15.020
That's it.

109
00:07:17.130 --> 00:07:21.400
Now if I run this script C, what happened?

110
00:07:21.400 --> 00:07:24.290
Yeah, I miss the balance is right.

111
00:07:27.450 --> 00:07:30.140
That's fine.

112
00:07:33.660 --> 00:07:39.230
Then you are not getting why you are not getting any.

113
00:07:41.370 --> 00:07:44.780
Let me verify it.

114
00:07:53.610 --> 00:07:55.165
Ok.

115
00:07:55.165 --> 00:07:56.620
So that is a string, right?

116
00:07:56.620 --> 00:08:04.855
Let me take this as a string. Now let me run it.

117
00:08:04.855 --> 00:08:09.860
See, you are able to display now the snapshot ID,

118
00:08:09.860 --> 00:08:16.055
which has taken around 41544 seconds, right?

119
00:08:16.055 --> 00:08:22.160
So if you have multiple snapshots which are created our own four hours,

120
00:08:22.160 --> 00:08:24.845
15 minutes, 44 seconds.

121
00:08:24.845 --> 00:08:27.800
So our script is going to list out all of them.

122
00:08:27.800 --> 00:08:30.395
Now in newer while practicing with script,

123
00:08:30.395 --> 00:08:34.970
we just modify your chain based on your required time you can modify here.

124
00:08:34.970 --> 00:08:38.105
So this is 24 hours format time, right?

125
00:08:38.105 --> 00:08:40.700
So if it is, suppose 01:00 PM,

126
00:08:40.700 --> 00:08:42.590
you heard right, 13, right?

127
00:08:42.590 --> 00:08:44.060
In this way you have to write.

128
00:08:44.060 --> 00:08:48.320
Okay, so this is the simple script just to identify

129
00:08:48.320 --> 00:08:54.740
the snapshots which are taken today at around six AM or 06:00 PM.

130
00:08:54.740 --> 00:08:58.565
But he had to poverty have time in 24 hours format.

131
00:08:58.565 --> 00:09:04.160
Right now it is only in the here where it is you're hearing how to format.

132
00:09:04.160 --> 00:09:10.174
That's a so this is simple script just to list out all your EC2,

133
00:09:10.174 --> 00:09:13.850
sorry, easy two snapshots, right?

134
00:09:13.850 --> 00:09:19.265
Which are which are having based on your required startTime.

135
00:09:19.265 --> 00:09:23.490
Okay? Okay. Yes. Thank you for watching this video.

