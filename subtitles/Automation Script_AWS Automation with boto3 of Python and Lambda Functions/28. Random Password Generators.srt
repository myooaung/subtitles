1
00:00:12,590 --> 00:00:14,384
Hyphens.

2
00:00:14,384 --> 00:00:16,710
In this video, we're going to implement

3
00:00:16,710 --> 00:00:21,585
one simple Python script and which is used to generate random password.

4
00:00:21,585 --> 00:00:25,980
So simply random password generator using Python.

5
00:00:25,980 --> 00:00:31,185
So there's this script while going forward will use while creating IAM users.

6
00:00:31,185 --> 00:00:34,500
Okay, now let me open my editor.

7
00:00:34,500 --> 00:00:38,955
Let me create one Python file.

8
00:00:38,955 --> 00:00:50,419
So I want to create a python file, random password generator.

9
00:00:50,419 --> 00:00:52,250
That's it.

10
00:00:52,250 --> 00:00:53,270
Okay.

11
00:00:53,270 --> 00:00:58,925
See here, I need a module called random.

12
00:00:58,925 --> 00:01:01,190
So from this I am going to import all,

13
00:01:01,190 --> 00:01:03,619
but actually I need only choice.

14
00:01:03,619 --> 00:01:06,320
So what is the choice you will see in this video?

15
00:01:06,320 --> 00:01:09,410
That's fine. Now guys here,

16
00:01:09,410 --> 00:01:11,150
first you have to decide.

17
00:01:11,150 --> 00:01:13,790
Suppose you are going to implement one skip

18
00:01:13,790 --> 00:01:16,355
through which you are going to generate a password,

19
00:01:16,355 --> 00:01:18,890
then what is the length of your password, right?

20
00:01:18,890 --> 00:01:22,950
So I need the password length, light.

21
00:01:24,730 --> 00:01:28,400
Suppose let say eight characters I need.

22
00:01:28,400 --> 00:01:33,185
Then what are the valid characters you need in your password?

23
00:01:33,185 --> 00:01:37,850
So let, let's say valid characters.

24
00:01:37,850 --> 00:01:40,790
Simply cause for password,

25
00:01:40,790 --> 00:01:42,605
no need to take this lengthy variable names.

26
00:01:42,605 --> 00:01:44,990
Just I am giving for your clarity.

27
00:01:44,990 --> 00:01:46,100
Right?

28
00:01:46,100 --> 00:01:52,505
And just assume that these are my characters which I want to take in my password, right?

29
00:01:52,505 --> 00:01:57,605
So for that, what I am doing is I'm going to take first sum valid characters,

30
00:01:57,605 --> 00:02:00,035
which I how to include in my password.

31
00:02:00,035 --> 00:02:01,220
That's fine.

32
00:02:01,220 --> 00:02:04,355
Now before going to implement your actual script, just assume that.

33
00:02:04,355 --> 00:02:11,585
So observe that I am going to print choice of u are valid characters for password.

34
00:02:11,585 --> 00:02:14,540
So guys, if I run this script very first-time C, what is the output?

35
00:02:14,540 --> 00:02:19,490
You are going to get? C, some parentheses right?

36
00:02:19,490 --> 00:02:21,770
Now I am going to read them this.

37
00:02:21,770 --> 00:02:29,430
Now see the output. Yeah, it's there right in India.

38
00:02:29,440 --> 00:02:35,195
C, C output or the output I am going to read on.

39
00:02:35,195 --> 00:02:38,150
Each time you are going to get some different characters

40
00:02:38,150 --> 00:02:40,955
in output side means tries is simply

41
00:02:40,955 --> 00:02:43,520
a method from your random module which will

42
00:02:43,520 --> 00:02:47,135
select from your string randomly anyone of the character.

43
00:02:47,135 --> 00:02:50,690
Right? Now based on this concept,

44
00:02:50,690 --> 00:02:54,275
first of all, I need eight characters in my password, right?

45
00:02:54,275 --> 00:02:59,510
Though that's why first-time taking password equals to sum a list.

46
00:02:59,510 --> 00:03:01,850
So guys, you can implement this in different ways.

47
00:03:01,850 --> 00:03:04,530
I'm going bit first, very simple one.

48
00:03:04,530 --> 00:03:09,880
For each car, right?

49
00:03:09,880 --> 00:03:17,725
I mean password character in range of So this many times I want to repeat it right?

50
00:03:17,725 --> 00:03:21,040
So simply first-time printing, print,

51
00:03:21,040 --> 00:03:25,405
choice of your valid characters for password.

52
00:03:25,405 --> 00:03:27,175
First observe the output.

53
00:03:27,175 --> 00:03:29,290
See you are getting this.

54
00:03:29,290 --> 00:03:33,730
Let us write. Now I am going to read on this. Now you are getting some different.

55
00:03:33,730 --> 00:03:35,920
Let us, once again, I am re-running.

56
00:03:35,920 --> 00:03:37,585
You're going to get some different letters.

57
00:03:37,585 --> 00:03:41,245
That means randomly you are generating some eight letters,

58
00:03:41,245 --> 00:03:45,625
but password means it has to there in one single string, right?

59
00:03:45,625 --> 00:03:47,565
That's why what I am doing is,

60
00:03:47,565 --> 00:03:49,775
instead of printing my password,

61
00:03:49,775 --> 00:03:53,840
I'm going to append these letters for our a list

62
00:03:53,840 --> 00:04:01,325
called password. That's it.

63
00:04:01,325 --> 00:04:02,165
Right?

64
00:04:02,165 --> 00:04:04,775
Now first let me print directly what is your password now,

65
00:04:04,775 --> 00:04:07,880
in your hand, software running your for loop eight times.

66
00:04:07,880 --> 00:04:10,895
I mean, often repeating your for loop with

67
00:04:10,895 --> 00:04:13,610
eight iterative iterations you are having now in

68
00:04:13,610 --> 00:04:17,570
your password list eight characters. Now see the output.

69
00:04:17,570 --> 00:04:21,020
Now I'm going to read on this and you'll get definitely different password,

70
00:04:21,020 --> 00:04:22,955
random you are going to select, right?

71
00:04:22,955 --> 00:04:25,130
But password means, again,

72
00:04:25,130 --> 00:04:26,210
it should be one single string,

73
00:04:26,210 --> 00:04:27,350
not a list of values.

74
00:04:27,350 --> 00:04:34,670
You know, in your list you have a method operation called join.

75
00:04:34,670 --> 00:04:37,770
So using join method,

76
00:04:37,870 --> 00:04:40,655
see there getting us a one string now,

77
00:04:40,655 --> 00:04:42,050
and this is your password.

78
00:04:42,050 --> 00:04:43,520
If I rerun this similar,

79
00:04:43,520 --> 00:04:46,530
definitely some different password, yes.

80
00:04:46,750 --> 00:04:52,940
Okay. So guys, now this is the simple way to generate your password.

81
00:04:52,940 --> 00:04:59,420
So final password is nothing but or simply let me take random password.

82
00:04:59,420 --> 00:05:02,810
You can take any variable I'm taking simply in this way.

83
00:05:02,810 --> 00:05:05,550
Now you can print that.

84
00:05:05,710 --> 00:05:08,405
So random passes is our variable guys,

85
00:05:08,405 --> 00:05:09,770
user-defined variable.

86
00:05:09,770 --> 00:05:12,930
That's a radon.

87
00:05:12,930 --> 00:05:16,750
Radon. That's it.

88
00:05:16,750 --> 00:05:19,450
Ok. Now,

89
00:05:19,450 --> 00:05:23,274
observe here, instead of this lengthy aligns,

90
00:05:23,274 --> 00:05:25,210
you can also use some shortcut.

91
00:05:25,210 --> 00:05:28,450
Just let me comment first of this code.

92
00:05:28,450 --> 00:05:33,610
For a for loop, you have a shortcut based on that c. Let me write

93
00:05:33,610 --> 00:05:41,680
a random password equals to simply join us if you are able to understand this,

94
00:05:41,680 --> 00:05:43,855
you just to follow this otherwise previous score,

95
00:05:43,855 --> 00:05:45,415
the score is also valid one.

96
00:05:45,415 --> 00:05:51,670
Now I'm going to denote the single line dies off your valid characters, right?

97
00:05:51,670 --> 00:05:58,430
For each cat in a range of you are length of password.

98
00:05:58,430 --> 00:06:01,744
That's a offer that just stride forward,

99
00:06:01,744 --> 00:06:05,300
print your password so that he can see random password.

100
00:06:05,300 --> 00:06:07,535
Let me open your output.

101
00:06:07,535 --> 00:06:09,620
Clearly, you see that.

102
00:06:09,620 --> 00:06:11,990
So now I'm generating your password here,

103
00:06:11,990 --> 00:06:15,425
any one single line with single line, right?

104
00:06:15,425 --> 00:06:19,355
So actually you are going to get list of values one by one from your for loop,

105
00:06:19,355 --> 00:06:21,860
but I'm adding them as one single string.

106
00:06:21,860 --> 00:06:27,965
So antilog asic, I mean this for loop and joined a logic,

107
00:06:27,965 --> 00:06:29,465
I heard another single line.

108
00:06:29,465 --> 00:06:31,610
If you are able to understand this line, just follow this.

109
00:06:31,610 --> 00:06:33,110
Otherwise you can also follow this one.

110
00:06:33,110 --> 00:06:34,820
Both will do the same result.

111
00:06:34,820 --> 00:06:37,955
The only thing is here you are reducing your number of lines.

112
00:06:37,955 --> 00:06:43,760
Okay? So this is the simple way to generate your random password.

113
00:06:43,760 --> 00:06:50,044
And guys, we will use this concept while creating IAM users in your AWS.

114
00:06:50,044 --> 00:06:52,205
So you, while creating your IMU lets,

115
00:06:52,205 --> 00:06:53,735
you can also assign some password,

116
00:06:53,735 --> 00:06:55,925
a random password or custom password.

117
00:06:55,925 --> 00:07:00,290
So I want to assign random password for each different IAM user.

118
00:07:00,290 --> 00:07:02,675
So at the time I will use this logic.

119
00:07:02,675 --> 00:07:03,545
Okay?

120
00:07:03,545 --> 00:07:06,840
Okay guys, thank you for watching this video.

