WEBVTT
ï»¿1
00:00:00.510 --> 00:00:06.070
Friends here our concept is very freeing boat A3 environments set up on

2
00:00:06.070 --> 00:00:11.860
Windows and Linux servers to work with AWS services using Python Bhutto, three skips.

3
00:00:11.860 --> 00:00:15.250
See from our previous videos already we done the setup

4
00:00:15.250 --> 00:00:18.790
for Bhutto three on your Windows as well as Linux servers.

5
00:00:18.790 --> 00:00:23.020
So simply our environment setup is we install some Python version.

6
00:00:23.020 --> 00:00:26.245
Then we installed moto 300 PwC lay packages,

7
00:00:26.245 --> 00:00:29.200
software that we configured the credentials for

8
00:00:29.200 --> 00:00:35.080
Root Account and then to IAM users on your both windows as well as Linux servers.

9
00:00:35.080 --> 00:00:38.859
Now you can verify this setup either on Windows or Linux.

10
00:00:38.859 --> 00:00:39.760
Fine.

11
00:00:39.760 --> 00:00:43.870
Now here we are verifying this setup with a simple example.

12
00:00:43.870 --> 00:00:45.760
So my example is,

13
00:00:45.760 --> 00:00:48.550
I want to implement a simple Python Bluetooth

14
00:00:48.550 --> 00:00:53.335
restrict to list all my users from my Ada, bless a cone.

15
00:00:53.335 --> 00:00:56.605
Before implementing Python Bhutto that escaped,

16
00:00:56.605 --> 00:00:59.530
I want to show you manual steps to list

17
00:00:59.530 --> 00:01:03.940
to see if we're all I am users from your AWS account.

18
00:01:03.940 --> 00:01:07.280
So first let me take a note.

19
00:01:08.220 --> 00:01:12.235
Manual steps to see our list.

20
00:01:12.235 --> 00:01:15.609
All IAM users.

21
00:01:15.609 --> 00:01:19.180
See manually if you want to see all your IAM uses.

22
00:01:19.180 --> 00:01:21.710
So what is the first step?

23
00:01:22.560 --> 00:01:25.195
You have to open a browser,

24
00:01:25.195 --> 00:01:30.590
then how to login into your butter AWS account by providing the credentials

25
00:01:30.590 --> 00:01:35.810
of your AWS account so that you are going to get ALS management console into your hand.

26
00:01:35.810 --> 00:01:39.170
So getting AWS management console is the first step.

27
00:01:39.170 --> 00:01:45.110
So get AWS management console.

28
00:01:45.110 --> 00:01:50.405
But in the first step, step to see from your analyst management console,

29
00:01:50.405 --> 00:01:51.890
you can enter into any service.

30
00:01:51.890 --> 00:01:54.005
Suppose I want to walk with easy to,

31
00:01:54.005 --> 00:01:58.520
then you have to select ec2 service and you have to get EC2 Console.

32
00:01:58.520 --> 00:02:00.290
If I want to walk with S3,

33
00:02:00.290 --> 00:02:01.670
you had to get S3 console.

34
00:02:01.670 --> 00:02:03.995
Now I want to work with IU.

35
00:02:03.995 --> 00:02:06.095
If you want to work with IBM,

36
00:02:06.095 --> 00:02:08.940
you hope to get I am console.

37
00:02:09.120 --> 00:02:11.620
So this is a second step, c,

38
00:02:11.620 --> 00:02:14.155
this entire thing is I am console right?

39
00:02:14.155 --> 00:02:19.160
Now. Get IAM console.

40
00:02:21.000 --> 00:02:23.410
That is the second step.

41
00:02:23.410 --> 00:02:26.620
Now from IAM console.

42
00:02:26.620 --> 00:02:29.155
See this is I am console, right?

43
00:02:29.155 --> 00:02:30.685
From this I am console.

44
00:02:30.685 --> 00:02:31.795
If I want to see group,

45
00:02:31.795 --> 00:02:34.045
you have to select option called groups.

46
00:02:34.045 --> 00:02:35.680
If you want to see users,

47
00:02:35.680 --> 00:02:38.740
you have to select users option, right?

48
00:02:38.740 --> 00:02:42.130
So after getting your IAM Console under human I am console,

49
00:02:42.130 --> 00:02:43.959
you are having options.

50
00:02:43.959 --> 00:02:47.020
Whether you want to work with users or groups,

51
00:02:47.020 --> 00:02:49.735
or roles or policies, that is your wish.

52
00:02:49.735 --> 00:02:57.560
So these two are the steps to get your IAM users.

53
00:02:57.560 --> 00:03:00.110
Now these two steps or helpful to implement

54
00:03:00.110 --> 00:03:03.710
your Python Bhutto transcripts for any integral Service.

55
00:03:03.710 --> 00:03:07.220
Now let me implement your Python Bhutto three scripts.

56
00:03:07.220 --> 00:03:09.230
So if you want to implement Python Bhutto,

57
00:03:09.230 --> 00:03:11.690
the risk it first you have to import Bhutto three.

58
00:03:11.690 --> 00:03:16.400
Then now you are having Bhutto three in your hand. Then what is the first step?

59
00:03:16.400 --> 00:03:18.410
Get AWS management console.

60
00:03:18.410 --> 00:03:22.940
Now let me take a logic to get your NLS management console.

61
00:03:22.940 --> 00:03:30.335
So I'm taking a variable called AWS management console equals two.

62
00:03:30.335 --> 00:03:34.280
You can take any variable just for your understanding as of no MTV, this variable.

63
00:03:34.280 --> 00:03:37.025
Equals to moto three.

64
00:03:37.025 --> 00:03:39.510
Remember this syntax?

65
00:03:41.230 --> 00:03:44.210
C, to get your analysts management console,

66
00:03:44.210 --> 00:03:46.895
you are providing your enemies credentials.

67
00:03:46.895 --> 00:03:49.880
Now here, through programmatic,

68
00:03:49.880 --> 00:03:52.385
you hard to provide programmatic access keys.

69
00:03:52.385 --> 00:03:53.930
But already we configured

70
00:03:53.930 --> 00:03:58.610
our programmatic access keys on our local server with some profile limbs.

71
00:03:58.610 --> 00:04:02.150
If you want to walk with the router cone root credentials,

72
00:04:02.150 --> 00:04:03.830
you have to take profile name as route.

73
00:04:03.830 --> 00:04:05.990
If you want to walk with padlet I am user,

74
00:04:05.990 --> 00:04:12.020
you just select Butler profile name from your credentials files on your local host.

75
00:04:12.020 --> 00:04:15.785
Say now I want to walk with the root credentials,

76
00:04:15.785 --> 00:04:19.505
then profile name equals to route.

77
00:04:19.505 --> 00:04:21.410
If you want to work with Butler IAM user,

78
00:04:21.410 --> 00:04:28.370
just providing her butler IAM user profile name which you configured on your local host.

79
00:04:28.370 --> 00:04:30.050
Fine.

80
00:04:30.050 --> 00:04:35.450
Seed to get your AWS management console through programmatically,

81
00:04:35.450 --> 00:04:37.490
the is the step. You have to remember this.

82
00:04:37.490 --> 00:04:41.660
Now once if you get your AWS management console from that, you can get your,

83
00:04:41.660 --> 00:04:47.610
I am concerned right now to get your IAM Console.

84
00:04:48.220 --> 00:04:52.775
Take your AWS management console variable.

85
00:04:52.775 --> 00:04:57.305
Then on this, how to perform one logic.

86
00:04:57.305 --> 00:05:05.090
That logic is you can get your IAM console using resource, our client options.

87
00:05:05.090 --> 00:05:07.220
As of now I'm taking Resource,

88
00:05:07.220 --> 00:05:08.480
don't worry about client.

89
00:05:08.480 --> 00:05:13.280
I will discuss in detail about the resource and client now resource.

90
00:05:13.280 --> 00:05:17.000
So I want to work with IAM in case if you want to work with S3,

91
00:05:17.000 --> 00:05:18.605
Just take S3 here.

92
00:05:18.605 --> 00:05:21.590
These simply variable, you can take any variable here.

93
00:05:21.590 --> 00:05:23.180
These two are simply variables.

94
00:05:23.180 --> 00:05:25.175
You can take any variables,

95
00:05:25.175 --> 00:05:27.470
but here they are creating in terms of objects,

96
00:05:27.470 --> 00:05:29.315
but don't worry about that.

97
00:05:29.315 --> 00:05:32.900
Now I am console from your management console,

98
00:05:32.900 --> 00:05:37.265
take resource option, then provide your Butler Service I want to work with.

99
00:05:37.265 --> 00:05:39.395
I am. That's it.

100
00:05:39.395 --> 00:05:43.400
Now you how your AWS management console, you're IAM console.

101
00:05:43.400 --> 00:05:45.755
From VM console you have to select options,

102
00:05:45.755 --> 00:05:47.120
what you want to see.

103
00:05:47.120 --> 00:05:50.420
So here I am directly writing a logic as of now, don't worry about it.

104
00:05:50.420 --> 00:05:57.605
We'll discuss in detail while going forward for each user in from your IAM console.

105
00:05:57.605 --> 00:06:00.965
If I want to see if they wanted to work with groups, you have to select two groups.

106
00:06:00.965 --> 00:06:02.720
If I wanted to work with the users,

107
00:06:02.720 --> 00:06:05.120
users, I want to see all users.

108
00:06:05.120 --> 00:06:12.035
That's a then print you are each user.name.

109
00:06:12.035 --> 00:06:13.790
So don't worry about this.

110
00:06:13.790 --> 00:06:15.560
Logic will discuss that.

111
00:06:15.560 --> 00:06:17.420
But just we are verifying the setup.

112
00:06:17.420 --> 00:06:19.955
Let me open my windows terminal.

113
00:06:19.955 --> 00:06:22.820
Here I'm implementing this script.

114
00:06:22.820 --> 00:06:30.950
So list IAM uses that P1. That's it.

115
00:06:30.950 --> 00:06:37.910
Let me save it. Run it. See the output.

116
00:06:37.910 --> 00:06:38.870
Yes, you are getting.

117
00:06:38.870 --> 00:06:44.040
So these two are the IAM users are how in my edibles accord see that?

118
00:06:44.860 --> 00:06:47.300
Not only I am users,

119
00:06:47.300 --> 00:06:49.835
let me implement one more Python script.

120
00:06:49.835 --> 00:06:54.680
Suppose I want to list all my S3 buckets.

121
00:06:54.680 --> 00:06:58.710
So simply, you have to import beta3.

122
00:06:59.920 --> 00:07:03.995
Then first to get your AWS management console.

123
00:07:03.995 --> 00:07:06.605
You can take any variable here.

124
00:07:06.605 --> 00:07:08.720
Moto three dot session.

125
00:07:08.720 --> 00:07:10.910
You have to remember the syntax.

126
00:07:10.910 --> 00:07:14.135
Then Profile Name.

127
00:07:14.135 --> 00:07:19.280
Let me take root or any I am users which you configured on your local host.

128
00:07:19.280 --> 00:07:21.350
Then now get S3 console.

129
00:07:21.350 --> 00:07:26.510
So S3 console equals to from your management console,

130
00:07:26.510 --> 00:07:31.130
you have to enter into S3 so that you can enter into using two options.

131
00:07:31.130 --> 00:07:33.215
One is resource on one more is client.

132
00:07:33.215 --> 00:07:35.630
As of now, we are taking only resource.

133
00:07:35.630 --> 00:07:41.010
Yes, three, that's a. Now let me copy it.

134
00:07:45.010 --> 00:07:48.575
List three buckets.

135
00:07:48.575 --> 00:07:57.920
Dot p, y for each bucket.

136
00:07:57.920 --> 00:07:59.600
Again, this is also variable,

137
00:07:59.600 --> 00:08:01.820
you know, for loop in Python, right?

138
00:08:01.820 --> 00:08:04.790
Then your S3 Console.

139
00:08:04.790 --> 00:08:08.460
Under S3 console, all buckets.

140
00:08:09.280 --> 00:08:13.505
Then print the word bucket name.

141
00:08:13.505 --> 00:08:18.810
That's a no, let me save it and run it.

142
00:08:22.630 --> 00:08:24.830
See the output. Yes.

143
00:08:24.830 --> 00:08:27.905
So these many buckets I have in my database console,

144
00:08:27.905 --> 00:08:30.035
I mean, in my S3.

145
00:08:30.035 --> 00:08:35.855
So let me go to S3 and see that.

146
00:08:35.855 --> 00:08:38.400
How many buckets I here.

147
00:08:39.460 --> 00:08:40.910
Right?

148
00:08:40.910 --> 00:08:46.130
That's a, so whatever setup we'd done on our Windows server that is working.

149
00:08:46.130 --> 00:08:55.140
Now let me take these two script and let me verify this on my Linux server as well.

150
00:08:57.130 --> 00:09:06.300
So simply copied for this is my Linux.

151
00:09:12.970 --> 00:09:16.970
So let me create list.

152
00:09:16.970 --> 00:09:21.030
Iam uses dot p y.

153
00:09:25.840 --> 00:09:32.280
Let's say, let me run this using Python three.

154
00:09:34.180 --> 00:09:37.625
Yes, you're getting your two, I am users.

155
00:09:37.625 --> 00:09:39.920
The same way you another script also will work.

156
00:09:39.920 --> 00:09:43.670
And one more thing, see interwar Linux servers.

157
00:09:43.670 --> 00:09:45.785
We can write shebang line interpreter line.

158
00:09:45.785 --> 00:09:50.630
You just copy it and open your Python script.

159
00:09:50.630 --> 00:09:53.100
And right at very first,

160
00:09:54.490 --> 00:09:58.445
like a shebang line or interpreter line,

161
00:09:58.445 --> 00:10:01.685
save it, provide the execution permissions.

162
00:10:01.685 --> 00:10:03.890
Now you can run dot slash.

163
00:10:03.890 --> 00:10:06.875
That's it, right?

164
00:10:06.875 --> 00:10:10.205
So our Anyone meant setup is working

165
00:10:10.205 --> 00:10:14.330
with you are Butler edible soccer and that's it. Okay.

166
00:10:14.330 --> 00:10:20.795
I will discuss in detail about each option which are there in your bu t.

167
00:10:20.795 --> 00:10:21.545
Okay.

168
00:10:21.545 --> 00:10:23.010
Thank you.

