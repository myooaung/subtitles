WEBVTT
ï»¿1
00:00:00.000 --> 00:00:06.240
Friends here our concept is how to implement Python B23 escapes using resource object.

2
00:00:06.240 --> 00:00:09.645
So in our previous video we have seen about client object.

3
00:00:09.645 --> 00:00:12.015
And here we're working with resource object.

4
00:00:12.015 --> 00:00:14.115
And one more important point is

5
00:00:14.115 --> 00:00:17.655
resource object is available only for some of those services.

6
00:00:17.655 --> 00:00:21.465
We already saw a boat that info find.

7
00:00:21.465 --> 00:00:24.135
No, let me open my sublime text.

8
00:00:24.135 --> 00:00:26.355
So first I'm going to import Bhutto three.

9
00:00:26.355 --> 00:00:28.815
So here I'm going to create a custom solution.

10
00:00:28.815 --> 00:00:31.620
I don't want to work with the default session as of now.

11
00:00:31.620 --> 00:00:34.680
So let me create my custom session or

12
00:00:34.680 --> 00:00:38.740
AWS management console session object equals to simply,

13
00:00:38.740 --> 00:00:42.455
we'll do three door Ce Shen dot session.

14
00:00:42.455 --> 00:00:45.380
Then this simply provide your profile name as root.

15
00:00:45.380 --> 00:00:49.565
So I am taking Profile Name as rude or I'm working with the root credentials,

16
00:00:49.565 --> 00:00:52.475
or I'm creating AWS management console using

17
00:00:52.475 --> 00:00:57.395
root credentials because I want to work with multiple services in this script.

18
00:00:57.395 --> 00:00:59.990
Now let me create my IAM console,

19
00:00:59.990 --> 00:01:02.315
foster using resource object.

20
00:01:02.315 --> 00:01:04.850
So simply you are analysed management console from

21
00:01:04.850 --> 00:01:07.715
that jihad to enter into what I am console.

22
00:01:07.715 --> 00:01:14.060
But we enter into your I am console here we are following a resource object method.

23
00:01:14.060 --> 00:01:21.095
So simply provide your service name equals 2m and also provide some region Nim.

24
00:01:21.095 --> 00:01:24.710
As us. He's one.

25
00:01:24.710 --> 00:01:28.070
Let me create two more consols.

26
00:01:28.070 --> 00:01:31.070
I mean, EC2 and S3.

27
00:01:31.070 --> 00:01:35.420
So simply this is S3 console and this is easy to console.

28
00:01:35.420 --> 00:01:42.005
So let me modify here EC2 Console using resource,

29
00:01:42.005 --> 00:01:46.055
and here S3 console using resource object.

30
00:01:46.055 --> 00:01:47.120
Fine.

31
00:01:47.120 --> 00:01:49.190
We held three consoles in our hand.

32
00:01:49.190 --> 00:01:50.855
Now what is your requirement?

33
00:01:50.855 --> 00:01:55.370
Suppose, let me take same requirement as our previous list,

34
00:01:55.370 --> 00:02:00.095
all IAM users using your resource object of your IAM.

35
00:02:00.095 --> 00:02:03.395
Then how we can implement the what next step.

36
00:02:03.395 --> 00:02:08.820
So the first thing is just to open your official documentation of Bhutto three.

37
00:02:09.040 --> 00:02:15.440
And here go with your available services.

38
00:02:15.440 --> 00:02:18.125
So as of now we are working with IAM.

39
00:02:18.125 --> 00:02:19.625
So I'm going to take,

40
00:02:19.625 --> 00:02:23.420
I am in this, I am first,

41
00:02:23.420 --> 00:02:27.545
let me open client object C.

42
00:02:27.545 --> 00:02:29.870
Under client, you are all available.

43
00:02:29.870 --> 00:02:33.480
Operations are available as a one set.

44
00:02:34.210 --> 00:02:38.585
C, They're all operations are there under one set.

45
00:02:38.585 --> 00:02:42.815
But now let me open for IAM resource object C,

46
00:02:42.815 --> 00:02:45.530
service resources, the resource opposite.

47
00:02:45.530 --> 00:02:48.305
And in this resource object,

48
00:02:48.305 --> 00:02:49.715
so I am object,

49
00:02:49.715 --> 00:02:53.285
I am console that has been created with the name called Le Yang.

50
00:02:53.285 --> 00:02:55.910
But these two steps we'd done in terms

51
00:02:55.910 --> 00:02:58.505
of three because we are working with customer object.

52
00:02:58.505 --> 00:03:02.330
So both Audrey, your idlis management console, you work.

53
00:03:02.330 --> 00:03:04.700
I am console using resource object.

54
00:03:04.700 --> 00:03:07.955
So I am console resource object is same as here.

55
00:03:07.955 --> 00:03:09.950
I am in this documentation.

56
00:03:09.950 --> 00:03:11.075
That's fine.

57
00:03:11.075 --> 00:03:16.700
And we love that if you observe operations are available as three sets.

58
00:03:16.700 --> 00:03:20.270
Set, second set, and then third set.

59
00:03:20.270 --> 00:03:22.355
Not only for IAM.

60
00:03:22.355 --> 00:03:28.835
Whatever the services you are having your in-situ,

61
00:03:28.835 --> 00:03:31.790
you are having your resource object in

62
00:03:31.790 --> 00:03:34.820
that all operations are available in terms of three sets.

63
00:03:34.820 --> 00:03:38.525
So suppose I am going to open EC2 resource object.

64
00:03:38.525 --> 00:03:42.350
Even in UC two resource object also you

65
00:03:42.350 --> 00:03:46.340
how your operations in terms of three sets for set,

66
00:03:46.340 --> 00:03:49.460
second set, and then third set.

67
00:03:49.460 --> 00:03:51.935
But it is very easy to classify them.

68
00:03:51.935 --> 00:03:54.920
The simple thing is, first,

69
00:03:54.920 --> 00:03:58.250
cities always abode to create or modify

70
00:03:58.250 --> 00:04:02.090
the existing thing if you want to create new IAM user,

71
00:04:02.090 --> 00:04:03.920
new group, our policy,

72
00:04:03.920 --> 00:04:09.050
our role user, then you have to select your operation from this list.

73
00:04:09.050 --> 00:04:11.900
Are if you want to modify the existing things,

74
00:04:11.900 --> 00:04:14.885
then you have to select your operation from this list.

75
00:04:14.885 --> 00:04:18.215
Not only here, even Institute if you go here,

76
00:04:18.215 --> 00:04:23.000
I want to create a new EC2 instance.

77
00:04:23.000 --> 00:04:24.710
I want to create volume,

78
00:04:24.710 --> 00:04:25.820
I want create VPC,

79
00:04:25.820 --> 00:04:28.655
then you ought to go and such in the first list.

80
00:04:28.655 --> 00:04:30.275
Fine.

81
00:04:30.275 --> 00:04:39.514
Now, the second thing is if you want to walk with existing EC2 to instance,

82
00:04:39.514 --> 00:04:41.675
particular single EC2 instance,

83
00:04:41.675 --> 00:04:45.380
or if you want to work with existing.

84
00:04:45.380 --> 00:04:47.630
Where is this?

85
00:04:47.630 --> 00:04:49.340
This is a boat.

86
00:04:49.340 --> 00:04:50.660
I am right? Yeah.

87
00:04:50.660 --> 00:04:53.165
See, even I am.

88
00:04:53.165 --> 00:04:57.635
Suppose if you want to work with particular IAM user or group or role,

89
00:04:57.635 --> 00:05:00.900
then you have to select your operation from the second set.

90
00:05:01.090 --> 00:05:05.600
Suppose even if you go with ins three, let me open that.

91
00:05:05.600 --> 00:05:09.380
Not only has three can take any of your AWS service.

92
00:05:09.380 --> 00:05:11.915
Yes, I'm taking examples from here.

93
00:05:11.915 --> 00:05:13.880
S3 resource.

94
00:05:13.880 --> 00:05:16.520
Even for this also you have three sets.

95
00:05:16.520 --> 00:05:18.065
C, I want to create a bucket,

96
00:05:18.065 --> 00:05:19.535
then go with first set.

97
00:05:19.535 --> 00:05:22.985
I want to work with the existing bucket,

98
00:05:22.985 --> 00:05:25.925
not buckets, only one single thing.

99
00:05:25.925 --> 00:05:29.660
Then go with the second set of operations.

100
00:05:29.660 --> 00:05:32.795
Alright, then what about thoughts it?

101
00:05:32.795 --> 00:05:37.895
If you want to see the existing things as a group,

102
00:05:37.895 --> 00:05:41.300
then you have to go with third set of operations I shall.

103
00:05:41.300 --> 00:05:43.175
These are called collections.

104
00:05:43.175 --> 00:05:45.605
So we're going to discuss collections in detail.

105
00:05:45.605 --> 00:05:48.604
But as of now just I am giving a basic information.

106
00:05:48.604 --> 00:05:50.014
Collections.

107
00:05:50.014 --> 00:05:53.180
Collect all the interesting things, all, all.

108
00:05:53.180 --> 00:05:55.940
So then you have to go with collect collections,

109
00:05:55.940 --> 00:05:58.520
our third set of operations, let's see.

110
00:05:58.520 --> 00:06:01.940
I want to see all I am users then go with the lost.

111
00:06:01.940 --> 00:06:04.535
Is this for I am know EC2.

112
00:06:04.535 --> 00:06:06.380
Yeah, this is for I am break.

113
00:06:06.380 --> 00:06:08.315
I want to see all users.

114
00:06:08.315 --> 00:06:11.940
I am users then go and set up your users operation from here.

115
00:06:11.940 --> 00:06:16.735
Suppose I want to see all EC2 instances, right?

116
00:06:16.735 --> 00:06:23.200
Is this Fourier C2? Yeah, now select instances from here, from third set.

117
00:06:23.200 --> 00:06:24.760
I want to see all buckets.

118
00:06:24.760 --> 00:06:29.500
Anyway for your buckets or resource of that you have only one operation in the third set.

119
00:06:29.500 --> 00:06:33.025
That's it. See that?

120
00:06:33.025 --> 00:06:36.355
So let me take response.

121
00:06:36.355 --> 00:06:40.810
You can take any variable just I am taking response from official documentation.

122
00:06:40.810 --> 00:06:44.499
I am console resource object dot.

123
00:06:44.499 --> 00:06:46.510
I want to see all users.

124
00:06:46.510 --> 00:06:49.390
That's it. Then what is the next step?

125
00:06:49.390 --> 00:06:50.755
Just click here.

126
00:06:50.755 --> 00:06:53.660
Where is the IAM user?

127
00:06:54.330 --> 00:06:59.605
Users. Under users, again, you how?

128
00:06:59.605 --> 00:07:02.320
Some different operations methods,

129
00:07:02.320 --> 00:07:09.145
all filter, limit page size.

130
00:07:09.145 --> 00:07:10.030
Okay?

131
00:07:10.030 --> 00:07:12.190
As of now, as of now,

132
00:07:12.190 --> 00:07:18.565
I am going to work with all a 100 and some limit c. After performing the users,

133
00:07:18.565 --> 00:07:27.390
you need to do one more dot operation that is either all odd or limit.

134
00:07:27.390 --> 00:07:30.580
Limit is useful to see some limit number,

135
00:07:30.580 --> 00:07:33.370
limited number of users or limited number of instances,

136
00:07:33.370 --> 00:07:37.845
or limited number of buckets are limited number of RDS instances.

137
00:07:37.845 --> 00:07:38.750
Right?

138
00:07:38.750 --> 00:07:40.520
So first let me do one thing.

139
00:07:40.520 --> 00:07:42.755
So here in undertake response actually,

140
00:07:42.755 --> 00:07:46.010
but let me do one thing that Italy,

141
00:07:46.010 --> 00:07:53.030
I'm printing your IAM console dot user

142
00:07:53.030 --> 00:07:56.510
and see the output C.

143
00:07:56.510 --> 00:07:58.445
They're getting some object.

144
00:07:58.445 --> 00:08:00.140
Anyway.

145
00:08:00.140 --> 00:08:04.730
On this object, what is the operation or what are the operations are available?

146
00:08:04.730 --> 00:08:08.390
You can see directly from here, under users,

147
00:08:08.390 --> 00:08:10.250
you know, otherwise, you know,

148
00:08:10.250 --> 00:08:12.485
in Python you how BAR operation.

149
00:08:12.485 --> 00:08:14.270
By using this also,

150
00:08:14.270 --> 00:08:16.775
you can see you weren't operations here.

151
00:08:16.775 --> 00:08:21.755
All filter, iterator, limit, size pages.

152
00:08:21.755 --> 00:08:28.565
Suppose now I want to apply on just after the output.

153
00:08:28.565 --> 00:08:34.655
I am console dot users, dot-dot-dot all.

154
00:08:34.655 --> 00:08:37.055
Actually, Ali's a method.

155
00:08:37.055 --> 00:08:38.960
You are getting something here, right?

156
00:08:38.960 --> 00:08:40.265
It is a meter.

157
00:08:40.265 --> 00:08:43.265
Then do one thing, used parenthesis.

158
00:08:43.265 --> 00:08:46.235
That's it. Right?

159
00:08:46.235 --> 00:08:50.885
Now, this object consists of all your IAM useless information.

160
00:08:50.885 --> 00:08:54.065
But you're getting US object or as output.

161
00:08:54.065 --> 00:08:55.460
Right?

162
00:08:55.460 --> 00:09:01.960
Now see all creates an iterable of all users resources in their collection.

163
00:09:01.960 --> 00:09:05.000
This is collection of all I am users.

164
00:09:05.000 --> 00:09:06.890
It is an iterable or iterator.

165
00:09:06.890 --> 00:09:08.450
You can simply iterate them.

166
00:09:08.450 --> 00:09:16.190
See that for each item in that is iterable item,

167
00:09:16.190 --> 00:09:18.260
you can take for loop to iterate one-by-one,

168
00:09:18.260 --> 00:09:23.400
then simply print each item.

169
00:09:26.620 --> 00:09:31.175
Let me save it and run it and see the output.

170
00:09:31.175 --> 00:09:33.560
So you are getting two objects.

171
00:09:33.560 --> 00:09:35.330
Again, these two are objects.

172
00:09:35.330 --> 00:09:38.030
But I want to see only easy to dollar per name,

173
00:09:38.030 --> 00:09:42.065
then you don't know what is the operations are available on this item,

174
00:09:42.065 --> 00:09:44.880
then use DIR operation.

175
00:09:46.420 --> 00:09:53.375
See the output. So on each item you how this many number of operations.

176
00:09:53.375 --> 00:09:56.990
Suppose if you want to see user ID or user name,

177
00:09:56.990 --> 00:09:59.975
our path, or tags, or what is that?

178
00:09:59.975 --> 00:10:03.379
Password last use policies.

179
00:10:03.379 --> 00:10:06.515
All these things are available on this each item.

180
00:10:06.515 --> 00:10:07.835
So as of now,

181
00:10:07.835 --> 00:10:10.490
I need only username.

182
00:10:10.490 --> 00:10:13.160
I mean, you are IAM user name,

183
00:10:13.160 --> 00:10:14.990
so simply take a swim name,

184
00:10:14.990 --> 00:10:17.030
then run it and see the output.

185
00:10:17.030 --> 00:10:19.970
So in sublime text to run your Python script,

186
00:10:19.970 --> 00:10:22.220
you can use control plus b.

187
00:10:22.220 --> 00:10:23.390
Or else.

188
00:10:23.390 --> 00:10:30.830
Go to your command line and simply run python help on this object.

189
00:10:30.830 --> 00:10:32.765
That's it.

190
00:10:32.765 --> 00:10:35.255
So if you are good at sublime text,

191
00:10:35.255 --> 00:10:37.805
then it's better to use a control B here,

192
00:10:37.805 --> 00:10:41.490
or just implementing what Python's could be using.

193
00:10:42.370 --> 00:10:46.100
Sublime text and Romney was kept from command line.

194
00:10:46.100 --> 00:10:47.330
That's fine.

195
00:10:47.330 --> 00:10:51.080
So this is the way how to work with IAM user using your resource.

196
00:10:51.080 --> 00:10:53.520
Now let me comment this.

197
00:10:54.430 --> 00:10:57.860
Yeah, one more thing. I want to explain.

198
00:10:57.860 --> 00:10:59.750
One more operation in shut off all.

199
00:10:59.750 --> 00:11:01.895
Suppose if I take limit,

200
00:11:01.895 --> 00:11:07.850
I'm taking limit for one user to users.

201
00:11:07.850 --> 00:11:10.550
That's why just I'm taking for one user, see the output.

202
00:11:10.550 --> 00:11:12.800
You're going to get only one user.

203
00:11:12.800 --> 00:11:17.345
So the way, whatever the order you how anywhere I am console in that order,

204
00:11:17.345 --> 00:11:19.310
it will get from top to down one by one.

205
00:11:19.310 --> 00:11:22.235
If I take two, you have only two users anyway.

206
00:11:22.235 --> 00:11:24.035
You're going to get those two.

207
00:11:24.035 --> 00:11:29.150
That's OK. Actually these are collections.

208
00:11:29.150 --> 00:11:31.895
So we'll discuss about collections in detail.

209
00:11:31.895 --> 00:11:36.120
But here I want to show you the help for your resource.

210
00:11:39.010 --> 00:11:43.760
Now let me list S3 buckets.

211
00:11:43.760 --> 00:11:46.040
You can go with EC2 or S3. Yes, I am taking a three.

212
00:11:46.040 --> 00:11:47.975
You just try with these YouTube.

213
00:11:47.975 --> 00:11:51.455
Now already how your S3 console in your hand.

214
00:11:51.455 --> 00:11:58.175
Then? Gotye were documentation foster S3 buckets.

215
00:11:58.175 --> 00:12:04.310
We created already our S3 console resource object.

216
00:12:04.310 --> 00:12:06.305
This S3 is already there with or a hand.

217
00:12:06.305 --> 00:12:08.660
Then we need all existing information.

218
00:12:08.660 --> 00:12:10.490
That's what you have to go with the third set.

219
00:12:10.490 --> 00:12:12.110
Thoughts, it buckets.

220
00:12:12.110 --> 00:12:13.415
In buckets I anyhow,

221
00:12:13.415 --> 00:12:17.705
all filter limit, page size, that's it.

222
00:12:17.705 --> 00:12:23.269
So these are the different methods in collections in your buckets.

223
00:12:23.269 --> 00:12:25.955
So simply see what I'm doing.

224
00:12:25.955 --> 00:12:29.060
And one more thing, this collections, right,

225
00:12:29.060 --> 00:12:34.610
is again, it iterates war and manipulate group of resources.

226
00:12:34.610 --> 00:12:43.400
Then for each item in your S3 console, dot,

227
00:12:43.400 --> 00:12:47.120
bucket, dot all, I want to collect all buckets,

228
00:12:47.120 --> 00:12:52.410
then print you are each item and see the output.

229
00:12:52.540 --> 00:12:54.905
So this many buckets I have,

230
00:12:54.905 --> 00:12:56.045
but this is an object.

231
00:12:56.045 --> 00:12:58.145
Each and everything is opposite in your resource.

232
00:12:58.145 --> 00:13:03.440
Only the last, the final output accepted that each and everything is object.

233
00:13:03.440 --> 00:13:09.420
Right? Now. I don't know what are the operations are available on this then.

234
00:13:09.460 --> 00:13:13.160
So this is all you are getting your S3 buckets,

235
00:13:13.160 --> 00:13:17.750
all that, all S3 buckets dot all is an iterator.

236
00:13:17.750 --> 00:13:19.940
We use that iterator to take one by one.

237
00:13:19.940 --> 00:13:23.165
But again, this is also, sorry,

238
00:13:23.165 --> 00:13:25.400
this is a object on this object,

239
00:13:25.400 --> 00:13:28.760
just USDA OR operation and see the result.

240
00:13:28.760 --> 00:13:31.550
So I'm going to use for only one.

241
00:13:31.550 --> 00:13:34.820
That's why I'm using Greek so that you can get clarity for one item.

242
00:13:34.820 --> 00:13:36.275
I'm seeing all the operations.

243
00:13:36.275 --> 00:13:39.155
These many operations are there on this object.

244
00:13:39.155 --> 00:13:42.515
But as of now I need only you were bucket name.

245
00:13:42.515 --> 00:13:44.510
So simply take nim.

246
00:13:44.510 --> 00:13:47.580
So let me do one thing.

247
00:13:49.330 --> 00:13:54.815
So you are each item dot name, that's it.

248
00:13:54.815 --> 00:13:56.720
Let me save it and run it.

249
00:13:56.720 --> 00:14:02.150
Sorry. Oh, we usually break.

250
00:14:02.150 --> 00:14:06.305
Let me remove that break so that it will create for each and every bucket.

251
00:14:06.305 --> 00:14:08.090
Nazi.

252
00:14:08.090 --> 00:14:10.505
So even here also, you cannot play limit.

253
00:14:10.505 --> 00:14:11.390
I wonder limit.

254
00:14:11.390 --> 00:14:14.549
I wanted to get only top ten buckets.

255
00:14:15.310 --> 00:14:21.185
Okay, and later IT That's a c.

256
00:14:21.185 --> 00:14:22.775
I, I'm getting only top ten buckets.

257
00:14:22.775 --> 00:14:23.615
That's it.

258
00:14:23.615 --> 00:14:29.915
So you just try with the Easy To Do list all your EC2 instances.

259
00:14:29.915 --> 00:14:30.980
Okay?

260
00:14:30.980 --> 00:14:34.110
Okay guys, thank you for watching this video.

