1
00:00:00,000 --> 00:00:04,410
Friends here we're implementing simple Python B23 escapes to get

2
00:00:04,410 --> 00:00:09,344
IAM user details and to get all I am users details.

3
00:00:09,344 --> 00:00:11,220
Let me open my editor.

4
00:00:11,220 --> 00:00:14,220
So simply I'm importing Bhutto three here.

5
00:00:14,220 --> 00:00:17,745
Then let me create my AWS management console session.

6
00:00:17,745 --> 00:00:21,480
So instead of taking AWS management console from here onwards,

7
00:00:21,480 --> 00:00:23,445
I am taking simply that has a session.

8
00:00:23,445 --> 00:00:26,330
So session equals two motor 3.What

9
00:00:26,330 --> 00:00:30,180
Session.get session and just provide your profile name.

10
00:00:30,180 --> 00:00:33,210
So our profile name I am taking as a rude because

11
00:00:33,210 --> 00:00:38,645
root profile is having access to work with IAM users in my case.

12
00:00:38,645 --> 00:00:42,440
So in case if you have any other profile which is having access to work with IM uses,

13
00:00:42,440 --> 00:00:44,000
just take that profile name.

14
00:00:44,000 --> 00:00:48,020
So now let me create IAM console using resource object.

15
00:00:48,020 --> 00:00:50,450
So you can also go with client object.

16
00:00:50,450 --> 00:00:51,680
I'm going with the resource.

17
00:00:51,680 --> 00:00:56,405
So simply session dot resource,

18
00:00:56,405 --> 00:00:59,120
just providing a service name.

19
00:00:59,120 --> 00:01:01,880
So I want to work with IAM, that's it.

20
00:01:01,880 --> 00:01:04,745
So anyway, I want to work with the default region.

21
00:01:04,745 --> 00:01:08,600
Anyway, region is not concern for your IAM.

22
00:01:08,600 --> 00:01:09,980
Now.

23
00:01:09,980 --> 00:01:12,530
So we have I am console resource object.

24
00:01:12,530 --> 00:01:13,760
Then what is your next step?

25
00:01:13,760 --> 00:01:18,920
So first thing, just I want to get details off one,

26
00:01:18,920 --> 00:01:21,470
any, any, any IAM user.

27
00:01:21,470 --> 00:01:23,510
So that is your wish.

28
00:01:23,510 --> 00:01:25,640
If you want to read your IAM user,

29
00:01:25,640 --> 00:01:29,600
you can read it by using your input command and the input syntax.

30
00:01:29,600 --> 00:01:31,595
Let me open my documentation.

31
00:01:31,595 --> 00:01:33,950
So I'm opening IBM,

32
00:01:33,950 --> 00:01:36,530
so as of now I'm working with the resource object.

33
00:01:36,530 --> 00:01:38,210
That's why I'm opening resource object.

34
00:01:38,210 --> 00:01:41,780
In resource object we know we have three set of operations.

35
00:01:41,780 --> 00:01:43,220
So first set, second,

36
00:01:43,220 --> 00:01:47,315
certain thoughts or if you have done in third steady how user just open that.

37
00:01:47,315 --> 00:01:52,550
So user, you can create any IAM user object if you know your username.

38
00:01:52,550 --> 00:02:00,230
Now let me open and create particular IAM user object equals two,

39
00:02:00,230 --> 00:02:02,900
that it Lake and create my user object.

40
00:02:02,900 --> 00:02:06,245
So simply from your IAM user,

41
00:02:06,245 --> 00:02:12,125
IAM console resource observed dot simply how to use user,

42
00:02:12,125 --> 00:02:13,880
then provide your username.

43
00:02:13,880 --> 00:02:19,025
Suppose I how S3 dollar per IAM user.

44
00:02:19,025 --> 00:02:25,205
That's it. Then on this object,

45
00:02:25,205 --> 00:02:28,020
what are the available operations?

46
00:02:28,540 --> 00:02:31,775
C, return type I am user.

47
00:02:31,775 --> 00:02:33,710
Click on that and see that.

48
00:02:33,710 --> 00:02:35,360
So anywhere I am user,

49
00:02:35,360 --> 00:02:38,270
these all are available operations.

50
00:02:38,270 --> 00:02:41,480
Suppose as of now I want to see what is the username anyway,

51
00:02:41,480 --> 00:02:43,460
that, that's what we are giving already.

52
00:02:43,460 --> 00:02:47,090
Then I want to see, suppose if there are any tags are what is the user ID,

53
00:02:47,090 --> 00:02:49,715
what is the year and when it was created?

54
00:02:49,715 --> 00:02:57,215
Or simply, you can simply print a DAR IAM user object so that it will list

55
00:02:57,215 --> 00:03:00,560
all your available operations on you were created

56
00:03:00,560 --> 00:03:05,900
IAM user object so that you can see your access key wherever it is,

57
00:03:05,900 --> 00:03:08,315
having login profile or not, right?

58
00:03:08,315 --> 00:03:10,370
So let me give at least some of the details so

59
00:03:10,370 --> 00:03:12,605
that you can work with the remaining operations.

60
00:03:12,605 --> 00:03:19,055
So simply I'm printing IAM user object dot.

61
00:03:19,055 --> 00:03:20,630
I'm taking simply.

62
00:03:20,630 --> 00:03:26,210
User name, then IAM, user object dot.

63
00:03:26,210 --> 00:03:32,615
So I want to see what is the user ID then I am user dot.

64
00:03:32,615 --> 00:03:37,250
What is the EIA or an IAM user object dot.

65
00:03:37,250 --> 00:03:40,099
Then I want to see suppose when it was created.

66
00:03:40,099 --> 00:03:43,175
So created date.

67
00:03:43,175 --> 00:03:46,040
Let me save it and run it and observe the output.

68
00:03:46,040 --> 00:03:48,725
C, S3 dollar per.

69
00:03:48,725 --> 00:03:53,000
This is the ID for that my I am user, ER,

70
00:03:53,000 --> 00:03:56,030
and it was created and so,

71
00:03:56,030 --> 00:04:01,200
and so date, so I want to format that date then import datetime module.

72
00:04:02,290 --> 00:04:05,060
So it is already datetime module.

73
00:04:05,060 --> 00:04:06,980
Then I'm in datetime object,

74
00:04:06,980 --> 00:04:11,105
just use dot string format time than simply use,

75
00:04:11,105 --> 00:04:14,390
I mean, year, month and day,

76
00:04:14,390 --> 00:04:16,310
save it and done it.

77
00:04:16,310 --> 00:04:19,625
Let's say it was created on this date.

78
00:04:19,625 --> 00:04:20,855
That's it.

79
00:04:20,855 --> 00:04:25,280
So here we worked with 11 IAM user.

80
00:04:25,280 --> 00:04:28,310
My incase, if you want to work with multiple I am users,

81
00:04:28,310 --> 00:04:30,365
I mean, on All I am users,

82
00:04:30,365 --> 00:04:37,549
then you have to take your for loop then for each user.

83
00:04:37,549 --> 00:04:43,770
Because before that, let me show you what do your documentation.

84
00:04:44,950 --> 00:04:47,090
Here you how user,

85
00:04:47,090 --> 00:04:49,835
if you observe here your users.

86
00:04:49,835 --> 00:04:52,249
Users.

87
00:04:52,249 --> 00:04:56,060
Now, simply whatever the console I am

88
00:04:56,060 --> 00:05:00,500
console resource we have on that you can perform dot users.

89
00:05:00,500 --> 00:05:08,015
Then after that you how not all collections meters or their right for

90
00:05:08,015 --> 00:05:18,830
each user in simply printing for each user and observe the output.

91
00:05:18,830 --> 00:05:21,380
This each user is an object.

92
00:05:21,380 --> 00:05:24,920
That object is exactly equals to one IAM user

93
00:05:24,920 --> 00:05:30,810
object c that if you observe giving list off am users,

94
00:05:31,180 --> 00:05:36,110
each IAM user 0s one user object.

95
00:05:36,110 --> 00:05:38,390
We already worked with one IAM user.

96
00:05:38,390 --> 00:05:41,460
So if I take this,

97
00:05:45,160 --> 00:05:49,100
so instead of h, I'm paying simply here because I

98
00:05:49,100 --> 00:05:52,460
don't want to modify that variable name in each and every place.

99
00:05:52,460 --> 00:05:56,000
Simply I am taking here IAM user.

100
00:05:56,000 --> 00:06:00,635
Then. So here also I am taking that as I am user,

101
00:06:00,635 --> 00:06:04,530
save it and run it and observe the output.

102
00:06:05,290 --> 00:06:08,330
Okay, I am user object.

103
00:06:08,330 --> 00:06:15,095
We are taken there after the output.

104
00:06:15,095 --> 00:06:17,180
First I am user object.

105
00:06:17,180 --> 00:06:21,379
For that, from that object, required information.

106
00:06:21,379 --> 00:06:25,250
Second IAM user object from that required information.

107
00:06:25,250 --> 00:06:28,970
So in this way you can get your user's information.

108
00:06:28,970 --> 00:06:32,585
One user if you want to work with one IAM user, just to go here.

109
00:06:32,585 --> 00:06:35,720
If you want to work with all am users go with here.

110
00:06:35,720 --> 00:06:39,184
And here we can also apply limit or filters.

111
00:06:39,184 --> 00:06:41,255
See that filters are there.

112
00:06:41,255 --> 00:06:48,150
So you can also apply your filters based on your requirement that say, Okay, thank you.

