WEBVTT
ï»¿1
00:00:00.000 --> 00:00:06.164
To see how to take EBS snapshot copy from one region to another region.

2
00:00:06.164 --> 00:00:11.460
So between regions, if you want to take k EBS snapshot, copy,

3
00:00:11.460 --> 00:00:13.725
how you can take, right,

4
00:00:13.725 --> 00:00:15.869
that we are going to implement here.

5
00:00:15.869 --> 00:00:21.690
And friends before going to implement that this code with your Python bottled three.

6
00:00:21.690 --> 00:00:23.819
First of all, what is the need to take

7
00:00:23.819 --> 00:00:27.600
your snapshot copy from one region to another region.

8
00:00:27.600 --> 00:00:30.495
So generally in your real time, right?

9
00:00:30.495 --> 00:00:31.800
So because of this,

10
00:00:31.800 --> 00:00:36.210
you are taking your snapshot copy from one region to another region.

11
00:00:36.210 --> 00:00:42.889
So if you want to expand your application across your GOP geographics, right?

12
00:00:42.889 --> 00:00:46.714
Or if you want to migrate your application from one region to another region,

13
00:00:46.714 --> 00:00:49.639
or most of the cases for disaster recovery, right?

14
00:00:49.639 --> 00:00:52.190
You know what is mean by recovery right?

15
00:00:52.190 --> 00:00:54.319
Now, just assume that in our case,

16
00:00:54.319 --> 00:00:57.065
our requirement is for disaster recovery,

17
00:00:57.065 --> 00:01:01.655
whether it is disaster recovery or geographic expansion or migration, right?

18
00:01:01.655 --> 00:01:03.514
Whatever it may be proceeding is same.

19
00:01:03.514 --> 00:01:06.200
What you are doing here simply you are making

20
00:01:06.200 --> 00:01:09.815
a copy of your snapshot from one region to another region.

21
00:01:09.815 --> 00:01:12.499
Once you take to other region there,

22
00:01:12.499 --> 00:01:15.290
if you want to launch your application,

23
00:01:15.290 --> 00:01:17.539
you can lunch if you want to migrate, right?

24
00:01:17.539 --> 00:01:24.424
Or you can also maintaining disaster recovery for your snapshot of one region, right?

25
00:01:24.424 --> 00:01:29.015
Okay, so base, before going to implement your script,

26
00:01:29.015 --> 00:01:31.999
Let me open my ec2 service because

27
00:01:31.999 --> 00:01:36.529
your snapshot EBS snapshots or they're under your ec2 service on the light.

28
00:01:36.529 --> 00:01:41.909
Absorbed that I'm having some snapshots here for you, my EBS.

29
00:01:42.250 --> 00:01:45.214
So which are wound by me, right?

30
00:01:45.214 --> 00:01:47.749
I how four snapshots which are owned by me.

31
00:01:47.749 --> 00:01:50.660
So you guys, if you go with your public snapshots,

32
00:01:50.660 --> 00:01:53.040
there are almost two thousand,

33
00:01:53.040 --> 00:01:56.189
twenty two thousand plus snapshot, sorry, here.

34
00:01:56.290 --> 00:01:57.844
Right?

35
00:01:57.844 --> 00:02:00.289
But I don't want to work on them.

36
00:02:00.289 --> 00:02:02.630
I want to work with only on my wound.

37
00:02:02.630 --> 00:02:06.274
Snapshots I'm having for now,

38
00:02:06.274 --> 00:02:09.905
whether I need to take a copy of this for snapshot,

39
00:02:09.905 --> 00:02:12.755
two different regions or some of them.

40
00:02:12.755 --> 00:02:17.690
Write C to identify that already a house.

41
00:02:17.690 --> 00:02:19.579
Some tags for my snapshots.

42
00:02:19.579 --> 00:02:23.569
Let me select first some snapshot and observe that there is a tag.

43
00:02:23.569 --> 00:02:28.310
And this tag consists of information like delete_one, 90 days.

44
00:02:28.310 --> 00:02:32.690
Anyway, I have one more step to delete this two snapshots of a 90 days.

45
00:02:32.690 --> 00:02:34.670
That's secondary script.

46
00:02:34.670 --> 00:02:37.340
Now currently we are working on backup means

47
00:02:37.340 --> 00:02:40.669
you're taking a copy of this snapshot, two different region.

48
00:02:40.669 --> 00:02:42.949
So to identify for reaches snapshots,

49
00:02:42.949 --> 00:02:47.059
I need to take a copy to identify that I already have a tax backup.

50
00:02:47.059 --> 00:02:47.420
Yes.

51
00:02:47.420 --> 00:02:49.129
Means only this snapshot.

52
00:02:49.129 --> 00:02:53.749
I need to take a copy of this snapshot into different regime.

53
00:02:53.749 --> 00:02:56.060
Let's select one more thing.

54
00:02:56.060 --> 00:02:59.720
Now for that, I don't have any backup as yes means I don't need to maintain IT.

55
00:02:59.720 --> 00:03:02.239
Disaster recovery. For disaster recovery.

56
00:03:02.239 --> 00:03:04.879
Point of view, I don't need to maintain a copy.

57
00:03:04.879 --> 00:03:07.100
But if I select one more thing,

58
00:03:07.100 --> 00:03:09.845
C for this natural again and have a backup, Yes, yes.

59
00:03:09.845 --> 00:03:16.084
That means now our concept is the snapshots which are having tags as backup ES.

60
00:03:16.084 --> 00:03:18.004
For those snapshots only,

61
00:03:18.004 --> 00:03:21.124
I need to copy from one region to another region.

62
00:03:21.124 --> 00:03:22.100
Right?

63
00:03:22.100 --> 00:03:27.514
So guys, before going to take a copy of your snapshot from one region to another region.

64
00:03:27.514 --> 00:03:30.995
First, you need to identify which snapshots, right?

65
00:03:30.995 --> 00:03:34.924
For which snapshots you need copy.

66
00:03:34.924 --> 00:03:36.005
Right.

67
00:03:36.005 --> 00:03:38.240
So let me implement our core.

68
00:03:38.240 --> 00:03:41.104
Let me open an editor.

69
00:03:41.104 --> 00:03:44.330
Here. I am implementing this code on my local host,

70
00:03:44.330 --> 00:03:47.029
the same code you can implement even in your lambda also.

71
00:03:47.029 --> 00:03:48.230
First I will implement here,

72
00:03:48.230 --> 00:03:51.560
then I will show you anyway lambda also, right?

73
00:03:51.560 --> 00:03:59.270
So let me save this as snaps.

74
00:03:59.270 --> 00:04:01.354
Copy.

75
00:04:01.354 --> 00:04:04.790
Between regions dot p

76
00:04:04.790 --> 00:04:07.460
y. I'm using here

77
00:04:07.460 --> 00:04:11.000
Sublime Text or simply if you are getting any confusion with some plain text,

78
00:04:11.000 --> 00:04:14.675
you can also use VA, VA emerita, right?

79
00:04:14.675 --> 00:04:21.444
So guys, I'm importing first Bordeaux 3p, right?

80
00:04:21.444 --> 00:04:25.765
See, you are running this on your local host.

81
00:04:25.765 --> 00:04:27.669
So before running this,

82
00:04:27.669 --> 00:04:30.175
right, you need to check whether voter three is there or not.

83
00:04:30.175 --> 00:04:32.349
That's why I'm writing anyway by

84
00:04:32.349 --> 00:04:35.575
default do is some system models are there with your Python.

85
00:04:35.575 --> 00:04:42.955
So now I'm trying to import my moto three with the help of try.

86
00:04:42.955 --> 00:04:45.160
Right? If, if it is success,

87
00:04:45.160 --> 00:04:46.194
right, if it is there,

88
00:04:46.194 --> 00:04:54.130
then I can write imported voter three successfully, right?

89
00:04:54.130 --> 00:04:55.840
If something goes wrong, right?

90
00:04:55.840 --> 00:04:59.095
What I want to do is I need to handle that exception,

91
00:04:59.095 --> 00:05:03.470
accept exception as He,

92
00:05:03.470 --> 00:05:06.574
then I want to print it that exception what we are getting.

93
00:05:06.574 --> 00:05:10.264
So if you have any adsorption while inputting your Bourdieu three,

94
00:05:10.264 --> 00:05:14.285
I don't want to run my core because my entire code is depending on both 2-3.

95
00:05:14.285 --> 00:05:17.644
If you're getting exception means voter three is not present that for you,

96
00:05:17.644 --> 00:05:22.175
I'm going to exit my script.

97
00:05:22.175 --> 00:05:25.249
That's a fine.

98
00:05:25.249 --> 00:05:30.664
So this first thing you need to collect,

99
00:05:30.664 --> 00:05:34.775
thus snapshots, which requires backups.

100
00:05:34.775 --> 00:05:40.174
And you are going to copy that snapshot from one region to another region.

101
00:05:40.174 --> 00:05:42.620
That's why I'm going to define some variables.

102
00:05:42.620 --> 00:05:43.264
First.

103
00:05:43.264 --> 00:05:45.994
They are like source region,

104
00:05:45.994 --> 00:05:48.799
from which region you want to copy, right?

105
00:05:48.799 --> 00:05:50.689
So they're actually not identify, first of all,

106
00:05:50.689 --> 00:05:54.574
all the snapshots which requires backups, right?

107
00:05:54.574 --> 00:05:58.490
That's why I'm taking suppose source region, US East One.

108
00:05:58.490 --> 00:06:01.654
You can take any region, then destination region.

109
00:06:01.654 --> 00:06:08.075
I am going to take it as us is 22. Right?

110
00:06:08.075 --> 00:06:09.289
Now.

111
00:06:09.289 --> 00:06:14.179
That's fine. And one more thing, nice.

112
00:06:14.179 --> 00:06:17.330
You're running this code from your local host.

113
00:06:17.330 --> 00:06:20.855
And you know, in our previous videos also,

114
00:06:20.855 --> 00:06:23.075
we are creating a session.

115
00:06:23.075 --> 00:06:25.880
So why we are creating session means we

116
00:06:25.880 --> 00:06:30.530
configured the credentials of one IAM user with some profile limb.

117
00:06:30.530 --> 00:06:32.495
That's why first you have to create a session.

118
00:06:32.495 --> 00:06:36.049
So that is nothing but moto three dots Session.get.

119
00:06:36.049 --> 00:06:41.165
Shen, then just to provide profile name,

120
00:06:41.165 --> 00:06:45.470
whatever you selected, wild configuring your credentials on your local host.

121
00:06:45.470 --> 00:06:48.214
I selected that as root.

122
00:06:48.214 --> 00:06:51.920
Now, first we need to collect to

123
00:06:51.920 --> 00:06:56.030
all the snapshots which are present in the source region.

124
00:06:56.030 --> 00:07:00.949
That's why I'm going to create some EC2 Console object.

125
00:07:00.949 --> 00:07:02.615
But you know that we can create

126
00:07:02.615 --> 00:07:07.069
EC2 Console object using resource as well as client object.

127
00:07:07.069 --> 00:07:10.624
As of now, I am going to create ec2.

128
00:07:10.624 --> 00:07:13.924
This is for source in the source location,

129
00:07:13.924 --> 00:07:18.035
that means in the US East one, right? Using client.

130
00:07:18.035 --> 00:07:19.970
So you can go with resource as well.

131
00:07:19.970 --> 00:07:21.469
But for simplicity, Barbosa,

132
00:07:21.469 --> 00:07:23.254
I'm going with client.

133
00:07:23.254 --> 00:07:28.909
So shen dot client, then service name.

134
00:07:28.909 --> 00:07:31.639
So with what service you want to work easy too,

135
00:07:31.639 --> 00:07:34.369
because under EC2 only how your EBS volumes,

136
00:07:34.369 --> 00:07:38.239
snapshots, then regime name.

137
00:07:38.239 --> 00:07:43.219
So from which reason you want to make a copy to other region, right?

138
00:07:43.219 --> 00:07:44.359
That is nothing but already we,

139
00:07:44.359 --> 00:07:48.424
silicon has a variable called source region. That's it.

140
00:07:48.424 --> 00:07:49.815
Okay.

141
00:07:49.815 --> 00:07:50.949
Fine.

142
00:07:50.949 --> 00:07:54.444
Now, before going to get tic,

143
00:07:54.444 --> 00:07:59.349
before going to create a copy of your snapshot from one region to another region,

144
00:07:59.349 --> 00:08:04.284
you know, to collect all your snapshots based on your requirement, right?

145
00:08:04.284 --> 00:08:07.014
C2, collect your snapshots, right?

146
00:08:07.014 --> 00:08:11.289
How you can get all your snapshot through your moto three script, right?

147
00:08:11.289 --> 00:08:13.929
So if you remember, somewhere I have seen,

148
00:08:13.929 --> 00:08:18.520
we have seen already how to get all your snapshots.

149
00:08:18.520 --> 00:08:24.580
Ec2. Sorry, from each let me print.

150
00:08:24.580 --> 00:08:26.649
Yeah, we are taking a client, right?

151
00:08:26.649 --> 00:08:37.470
So for each snap in your EC2 source client dot describe snapshots.

152
00:08:38.830 --> 00:08:42.439
Print each snap, right?

153
00:08:42.439 --> 00:08:44.824
So guys, if I run this,

154
00:08:44.824 --> 00:08:47.105
right, if I run this,

155
00:08:47.105 --> 00:08:49.460
what is the output you are going to get means you are going to

156
00:08:49.460 --> 00:08:52.039
get almost 20 to 1000 snapshot IDs.

157
00:08:52.039 --> 00:08:54.500
But in Iraq and you don't know that many snapshots.

158
00:08:54.500 --> 00:08:57.560
Because whenever if you do describe snapshot operation,

159
00:08:57.560 --> 00:09:00.184
it is going to collect all your public, private,

160
00:09:00.184 --> 00:09:05.974
underwater owned snapshots, but you need to get only particular to your account.

161
00:09:05.974 --> 00:09:09.620
That's why first, get your account ID anyway,

162
00:09:09.620 --> 00:09:11.359
can directly provide Yoda can tidy,

163
00:09:11.359 --> 00:09:14.345
but I don't want to provide my account ID directly.

164
00:09:14.345 --> 00:09:16.670
I want to get this account ID.

165
00:09:16.670 --> 00:09:18.874
So if you want to get your account ID,

166
00:09:18.874 --> 00:09:23.344
you need to create your SPS object, right?

167
00:09:23.344 --> 00:09:24.635
I'm going to already,

168
00:09:24.635 --> 00:09:25.730
if you observe here somewhere,

169
00:09:25.730 --> 00:09:33.935
I explained that how to get your AWS account ID right in,

170
00:09:33.935 --> 00:09:38.284
in our Udemy course, you can go through this before implementing this line.

171
00:09:38.284 --> 00:09:42.950
So what is the purpose to get your account ID means by default,

172
00:09:42.950 --> 00:09:49.564
describe snapshots operation will get all the snapshots which are present in your AWS,

173
00:09:49.564 --> 00:09:51.619
not in your account in general.

174
00:09:51.619 --> 00:09:54.079
Do you want to get particular to your AWS or

175
00:09:54.079 --> 00:09:56.750
conduct so you need to provide your warner ID here.

176
00:09:56.750 --> 00:10:05.435
Let me open your boat O3 documentation there you can see option called owner IDs, right?

177
00:10:05.435 --> 00:10:07.999
So you can provide multiple owner ID so that you can see

178
00:10:07.999 --> 00:10:11.690
snapshots which are littered with your multiple Owner IDs.

179
00:10:11.690 --> 00:10:14.869
So let me open available services here.

180
00:10:14.869 --> 00:10:19.920
So here is C2.

181
00:10:20.440 --> 00:10:22.834
Under EC2, right?

182
00:10:22.834 --> 00:10:25.114
We are going to select a client method,

183
00:10:25.114 --> 00:10:27.019
client object we are creating right?

184
00:10:27.019 --> 00:10:29.714
Already be clear, Dear client, client.

185
00:10:29.714 --> 00:10:31.339
That's why under Iso,

186
00:10:31.339 --> 00:10:32.570
just select a client.

187
00:10:32.570 --> 00:10:34.369
So inclined.

188
00:10:34.369 --> 00:10:37.130
Right, describe snapshots.

189
00:10:37.130 --> 00:10:42.000
Let me go into the describe snapshots.

190
00:10:42.190 --> 00:10:45.770
Just select this, not come down on observed

191
00:10:45.770 --> 00:10:49.400
that there is an option called Warner IDs, right?

192
00:10:49.400 --> 00:10:52.730
So we can provide here while describing your operation,

193
00:10:52.730 --> 00:10:54.874
you can provide your own IDs.

194
00:10:54.874 --> 00:10:56.869
I can borrow it directly, my one of ID,

195
00:10:56.869 --> 00:10:59.150
but I want to get that wonder IDs also

196
00:10:59.150 --> 00:11:02.299
through your boat to three script. Yes, you can get it.

197
00:11:02.299 --> 00:11:06.140
So simply you are Session.get from that.

198
00:11:06.140 --> 00:11:10.145
Just use client object

199
00:11:10.145 --> 00:11:13.640
because for a sts you have only client already, we discussed that, right?

200
00:11:13.640 --> 00:11:18.244
So service name equals two. Sds.

201
00:11:18.244 --> 00:11:20.989
Just provide any region name.

202
00:11:20.989 --> 00:11:24.184
Here isn't M is you can provide anything because

203
00:11:24.184 --> 00:11:27.724
you're not going to work with any particular service you are getting,

204
00:11:27.724 --> 00:11:29.344
particularly your account ID.

205
00:11:29.344 --> 00:11:31.100
So a cone radius, same across all regions.

206
00:11:31.100 --> 00:11:33.095
Let's make him grow at any region, India.

207
00:11:33.095 --> 00:11:34.385
Now.

208
00:11:34.385 --> 00:11:37.535
See if you go with the SPS,

209
00:11:37.535 --> 00:11:40.409
Let me open your STS service.

210
00:11:41.560 --> 00:11:45.349
So in this SDS service, right now anyway,

211
00:11:45.349 --> 00:11:51.965
only client get call ride entity operation is there not get color identity.

212
00:11:51.965 --> 00:11:53.029
Right?

213
00:11:53.029 --> 00:11:55.189
So under that, so let

214
00:11:55.189 --> 00:12:03.669
me first STS client in the odd get color Identity, dot get.

215
00:12:03.669 --> 00:12:04.795
What do you need?

216
00:12:04.795 --> 00:12:07.870
A cone, right?

217
00:12:07.870 --> 00:12:09.649
That's it.

218
00:12:11.580 --> 00:12:16.180
Now, just provide here account ID.

219
00:12:16.180 --> 00:12:19.119
So if you want to provide multiple account IDs,

220
00:12:19.119 --> 00:12:20.469
yes, you can provide it.

221
00:12:20.469 --> 00:12:22.825
Now let me save this and run it.

222
00:12:22.825 --> 00:12:30.609
See the output, what you are going to get on is indentation errors.

223
00:12:30.609 --> 00:12:33.429
Let me clarify this.

224
00:12:33.429 --> 00:12:35.035
Yeah.

225
00:12:35.035 --> 00:12:37.340
Fine.

226
00:12:41.680 --> 00:12:44.750
So your moto three imported successfully.

227
00:12:44.750 --> 00:12:47.510
Now, yeah, you need to get your snapshots right,

228
00:12:47.510 --> 00:12:49.220
let me take here,

229
00:12:49.220 --> 00:12:51.784
because after describing your option,

230
00:12:51.784 --> 00:12:53.495
if you observe here,

231
00:12:53.495 --> 00:12:55.910
I'm in Describe your snapshots.

232
00:12:55.910 --> 00:13:00.289
So what is the output you're going to get described snapshot for this response.

233
00:13:00.289 --> 00:13:03.004
If you observe, come down and see the response.

234
00:13:03.004 --> 00:13:06.364
This is one of the key and this response we need, right?

235
00:13:06.364 --> 00:13:10.950
Not phi dot get.

236
00:13:14.920 --> 00:13:18.514
Let me complete this file.

237
00:13:18.514 --> 00:13:21.090
Now let me run this.

238
00:13:22.810 --> 00:13:25.520
They're the output what you are going to get your

239
00:13:25.520 --> 00:13:28.460
getting as of no force snapshots if you have done here,

240
00:13:28.460 --> 00:13:35.104
this is 1234 dictionaries are there means you are getting four snapshots,

241
00:13:35.104 --> 00:13:39.109
IDs information because you never are gone for snapshots.

242
00:13:39.109 --> 00:13:43.370
But the thing is we need to identify only those snapshots

243
00:13:43.370 --> 00:13:47.764
which are having backup as yes, indeed, tags.

244
00:13:47.764 --> 00:13:51.004
That's why before describing your option,

245
00:13:51.004 --> 00:13:52.804
you need to apply some fetus.

246
00:13:52.804 --> 00:13:56.854
So now what the filter in neediness, filter for backup.

247
00:13:56.854 --> 00:13:59.390
So you know, filter is a standard syntax that is

248
00:13:59.390 --> 00:14:04.649
a dictionary and which consists of a name, right?

249
00:14:06.750 --> 00:14:09.939
And values as it keep.

250
00:14:09.939 --> 00:14:12.039
We discussed in our previous videos as well,

251
00:14:12.039 --> 00:14:15.204
Goyal describing your EC2 instances, right?

252
00:14:15.204 --> 00:14:18.790
So yes, so no,

253
00:14:18.790 --> 00:14:20.949
just know you cater to one freedom.

254
00:14:20.949 --> 00:14:23.409
That filter you have to apply here.

255
00:14:23.409 --> 00:14:27.295
So simply filters equals two.

256
00:14:27.295 --> 00:14:30.445
So our filter is backup filter.

257
00:14:30.445 --> 00:14:35.060
Now save it and run it and see the output what you are going to get.

258
00:14:35.820 --> 00:14:38.410
So previously got four outputs,

259
00:14:38.410 --> 00:14:40.660
now you got only two dictionaries, right?

260
00:14:40.660 --> 00:14:45.025
That means the tags which are having with the backup as yes, right?

261
00:14:45.025 --> 00:14:46.779
Those tags only you are able to fetch.

262
00:14:46.779 --> 00:14:51.019
That means now in your hand you how your snapshot IDs,

263
00:14:51.019 --> 00:14:52.804
I'm going require snapshot IDs.

264
00:14:52.804 --> 00:14:54.890
Let me print only snapshot IDs.

265
00:14:54.890 --> 00:14:57.545
You should've displaying entire information.

266
00:14:57.545 --> 00:14:58.775
Right?

267
00:14:58.775 --> 00:15:03.930
Say let me print that. Not good.

268
00:15:09.310 --> 00:15:13.439
Now let me run this and see the output.

269
00:15:14.500 --> 00:15:18.185
Now you're going to get only two snapshot IDs, right?

270
00:15:18.185 --> 00:15:20.360
Quantify and unify other there.

271
00:15:20.360 --> 00:15:23.779
Let me expand this 25,

272
00:15:23.779 --> 00:15:26.479
which is having backup as yes and 0 phi Anyway,

273
00:15:26.479 --> 00:15:29.285
this is also having backup as he is.

274
00:15:29.285 --> 00:15:32.255
Now. I don't want to display this actually.

275
00:15:32.255 --> 00:15:34.100
Right? I need to take a backup for these.

276
00:15:34.100 --> 00:15:39.154
That's why I'm storing back the snaps as a list.

277
00:15:39.154 --> 00:15:43.520
And in this list I'm going to store all your snapshot IDs which you want to take.

278
00:15:43.520 --> 00:15:46.744
Backup, dot append.

279
00:15:46.744 --> 00:15:49.099
That's it, right?

280
00:15:49.099 --> 00:15:51.964
So just know you collected all your snapshots.

281
00:15:51.964 --> 00:15:54.035
Now the second part in your queries,

282
00:15:54.035 --> 00:15:57.095
you need to take a copy of the snapshot IDs into different location.

283
00:15:57.095 --> 00:15:59.495
I'm indifferent regime, right?

284
00:15:59.495 --> 00:16:02.270
So for what region?

285
00:16:02.270 --> 00:16:06.380
I mean two, which region you mean you need to take a copy of this, right?

286
00:16:06.380 --> 00:16:08.135
For that you need to create the object.

287
00:16:08.135 --> 00:16:14.209
So now actually how here easy to source client object.

288
00:16:14.209 --> 00:16:18.724
Now, I want to create destination,

289
00:16:18.724 --> 00:16:22.040
easy to destination client object because for that I need to

290
00:16:22.040 --> 00:16:25.745
take a copy into that location and it would take a copy.

291
00:16:25.745 --> 00:16:28.220
So simply, instead of source region,

292
00:16:28.220 --> 00:16:34.714
just now create your destination region. That's it.

293
00:16:34.714 --> 00:16:39.755
Right now, guys, just to go to your official documentation, right?

294
00:16:39.755 --> 00:16:43.170
Let me select your EC2 once again.

295
00:16:45.490 --> 00:16:53.359
And client, if you observe here somewhere your option called Kopi snapshot,

296
00:16:53.359 --> 00:16:58.430
just click on that and see that what you want to provide for that response.

297
00:16:58.430 --> 00:17:00.020
If you want to capture this response,

298
00:17:00.020 --> 00:17:01.865
we can calculate R0 is no column.

299
00:17:01.865 --> 00:17:04.744
Client, this is nothing but destination object,

300
00:17:04.744 --> 00:17:09.019
destination you are EC2 client object, copy snapshot, right?

301
00:17:09.019 --> 00:17:10.610
C, Let me take it.

302
00:17:10.610 --> 00:17:14.645
So I need to take a copy of the snapshots which are

303
00:17:14.645 --> 00:17:18.949
present in this variable back backup snapshots, right?

304
00:17:18.949 --> 00:17:21.229
So first of all, to take it copy,

305
00:17:21.229 --> 00:17:24.140
I need to take one by one snapshot, right, is from this.

306
00:17:24.140 --> 00:17:28.774
That's why what I'm doing is for each snap, that is source,

307
00:17:28.774 --> 00:17:35.090
for each, i will take variable in this phase sources snap ID anywhere.

308
00:17:35.090 --> 00:17:37.279
Backup snapshot, right?

309
00:17:37.279 --> 00:17:42.170
Just simply I'm printing taking backup

310
00:17:42.170 --> 00:17:49.430
for the ID of the dot format.

311
00:17:49.430 --> 00:17:56.339
Each source snap ID into four, which region?

312
00:17:56.440 --> 00:18:01.909
Into whatever the destination region, you know,

313
00:18:01.909 --> 00:18:06.859
let me write that destination region.

314
00:18:06.859 --> 00:18:08.959
So base as if no, I'm not taking copy,

315
00:18:08.959 --> 00:18:11.299
just I'm printing the information whether it is working,

316
00:18:11.299 --> 00:18:14.579
what Mark just said, the output, right?

317
00:18:19.540 --> 00:18:23.554
See this natural ideas you're going to take into,

318
00:18:23.554 --> 00:18:26.420
in this US east to two same wave, four seconds on.

319
00:18:26.420 --> 00:18:29.584
But you have to write a code here to take your snapshot.

320
00:18:29.584 --> 00:18:31.984
Not to write your code. It's very simple.

321
00:18:31.984 --> 00:18:35.195
Copies snapshot, right?

322
00:18:35.195 --> 00:18:42.149
So let me write here simple code from your easy to destination client dot.

323
00:18:42.460 --> 00:18:46.384
Let me remove one dot, copy snapshot.

324
00:18:46.384 --> 00:18:48.470
Want you need to provide description.

325
00:18:48.470 --> 00:18:50.749
If you want to provide any description you can provide.

326
00:18:50.749 --> 00:18:53.839
And this is a string, right?

327
00:18:53.839 --> 00:19:02.040
That we provide for disaster recovery.

328
00:19:08.470 --> 00:19:12.979
That is, suppose my description then if you want to

329
00:19:12.979 --> 00:19:17.359
encrypt just to make it as a true and what is the encryption string you can use it.

330
00:19:17.359 --> 00:19:18.949
I am, I'm skipping these two parts.

331
00:19:18.949 --> 00:19:20.899
I don't want to encrypt then source,

332
00:19:20.899 --> 00:19:22.504
region, from which source you are.

333
00:19:22.504 --> 00:19:25.625
I mean from which region you are going to take a copy.

334
00:19:25.625 --> 00:19:30.500
So already our source region is storing in a variable called source region,

335
00:19:30.500 --> 00:19:33.334
then Sources snapshot ID.

336
00:19:33.334 --> 00:19:37.294
So these ID you are taking one by one with the help of four loop here.

337
00:19:37.294 --> 00:19:41.119
That is each source snapshot ID.

338
00:19:41.119 --> 00:19:44.854
Right? So dried on equals to false or to.

339
00:19:44.854 --> 00:19:47.014
Anyway, we need to execute this script,

340
00:19:47.014 --> 00:19:49.624
right, anyway, how permissions for this?

341
00:19:49.624 --> 00:19:52.819
That's why I don't want to include this dried on equals

342
00:19:52.819 --> 00:19:55.579
true or false by default when he takes good my code,

343
00:19:55.579 --> 00:19:58.159
that's why I'm not writing right on equals, true.

344
00:19:58.159 --> 00:20:02.075
That's a let me save this.

345
00:20:02.075 --> 00:20:08.360
And so your code is ready.

346
00:20:08.360 --> 00:20:10.265
Before going to exclude your core,

347
00:20:10.265 --> 00:20:15.799
let me open my US east to two.

348
00:20:15.799 --> 00:20:21.150
And let me check it whether do we have any snapshots here or not?

349
00:20:23.200 --> 00:20:26.179
Let me go with the snapshots.

350
00:20:26.179 --> 00:20:29.359
See here, I don't know any snapshots here.

351
00:20:29.359 --> 00:20:34.110
Right now what I'm doing is I am going to run this script.

352
00:20:37.120 --> 00:20:39.095
Let's let me run it.

353
00:20:39.095 --> 00:20:42.600
Yeah, I started, right.

354
00:20:44.830 --> 00:20:48.259
So you collected and taking a backup and yet

355
00:20:48.259 --> 00:20:51.215
done just to refresh here and see the output?

356
00:20:51.215 --> 00:20:52.909
Yes.

357
00:20:52.909 --> 00:20:56.374
Right here, if you observe,

358
00:20:56.374 --> 00:20:59.075
your script is done, it is exited.

359
00:20:59.075 --> 00:21:03.589
But still it was status of your snapshot is in pending status.

360
00:21:03.589 --> 00:21:05.960
But I want to make it, I mean,

361
00:21:05.960 --> 00:21:09.785
my script has to exit off after completion of status in,

362
00:21:09.785 --> 00:21:14.389
I mean in status is reached to completed offer that only I need to exit from my script.

363
00:21:14.389 --> 00:21:19.460
So my scrip has to wait until the status of your snapshot is completed.

364
00:21:19.460 --> 00:21:22.099
So at that time what you had to do in

365
00:21:22.099 --> 00:21:25.204
our previous video while taking a snapshot from your volume,

366
00:21:25.204 --> 00:21:28.175
volumes, EBS volumes, we included waiters.

367
00:21:28.175 --> 00:21:30.844
You just tried to apply that waiters here.

368
00:21:30.844 --> 00:21:31.954
Right?

369
00:21:31.954 --> 00:21:34.760
So if you face any challenges while taking it,

370
00:21:34.760 --> 00:21:36.215
while I'm playing waiters here,

371
00:21:36.215 --> 00:21:38.910
just let me know so that I will help you.

372
00:21:39.160 --> 00:21:41.869
Okay? Okay.

373
00:21:41.869 --> 00:21:44.659
Yes. And I am giving here one more task for you.

374
00:21:44.659 --> 00:21:51.635
That is, suppose just know we are taken, right?

375
00:21:51.635 --> 00:21:55.399
Snapshots copy from one region to another region.

376
00:21:55.399 --> 00:21:57.874
I mean, in the source destination,

377
00:21:57.874 --> 00:22:00.979
whatever the snapshots you are having for that,

378
00:22:00.979 --> 00:22:04.550
you have taken a copy into different region.

379
00:22:04.550 --> 00:22:06.515
But if I read on my code,

380
00:22:06.515 --> 00:22:08.479
again, you are going to take your snapshots,

381
00:22:08.479 --> 00:22:10.714
but I want to already I have taken,

382
00:22:10.714 --> 00:22:13.205
that's why if I read on my coordinate should not work.

383
00:22:13.205 --> 00:22:17.699
I mean, it should not take a copy for already taken snapshots.

384
00:22:17.699 --> 00:22:21.714
So for that, what you have to do, right?

385
00:22:21.714 --> 00:22:24.339
So after the completion of taking

386
00:22:24.339 --> 00:22:28.014
copy of your snapshot from this region to other regions.

387
00:22:28.014 --> 00:22:31.720
So basically you are identifying the snapshot based on

388
00:22:31.720 --> 00:22:35.874
tags and we tease having a key as backup and value as yes.

389
00:22:35.874 --> 00:22:37.509
Now what you had to do,

390
00:22:37.509 --> 00:22:42.954
E's often completion of your backup to different region.

391
00:22:42.954 --> 00:22:49.044
Just make these key backup value into completed so that whenever if you run next time,

392
00:22:49.044 --> 00:22:51.920
it won't pick this snapshot.

393
00:22:51.930 --> 00:22:55.615
Right? So for that,

394
00:22:55.615 --> 00:22:57.504
you just implement your core.

395
00:22:57.504 --> 00:23:00.439
So how you can implement that is,

396
00:23:02.130 --> 00:23:06.169
let me open your moto three.

397
00:23:19.770 --> 00:23:23.440
If you observe here we have deleted tags.

398
00:23:23.440 --> 00:23:24.504
Right?

399
00:23:24.504 --> 00:23:26.410
Just deleted tag.

400
00:23:26.410 --> 00:23:31.824
Sources means your snapshot. Right?

401
00:23:31.824 --> 00:23:34.525
Then bags, what are the tag you want to delete?

402
00:23:34.525 --> 00:23:38.785
You just delete existing tags and tried to create new tags.

403
00:23:38.785 --> 00:23:41.620
C2 create tag also you how option?

404
00:23:41.620 --> 00:23:44.880
Where it is created tags,

405
00:23:44.880 --> 00:23:47.269
right? Well, I will do one thing.

406
00:23:47.269 --> 00:23:49.925
I will open this in one tab.

407
00:23:49.925 --> 00:23:54.479
And nearly dogs, also N1 tau.

408
00:23:55.480 --> 00:23:59.659
So this is for create, delete.

409
00:23:59.659 --> 00:24:03.379
Then how to delete your tags, right?

410
00:24:03.379 --> 00:24:06.950
C. So dust, no,

411
00:24:06.950 --> 00:24:12.859
let me EBS snapshot,

412
00:24:12.859 --> 00:24:20.285
copy to destination.

413
00:24:20.285 --> 00:24:23.465
Region is completed.

414
00:24:23.465 --> 00:24:25.234
Just I am writing that information.

415
00:24:25.234 --> 00:24:27.019
Then print.

416
00:24:27.019 --> 00:24:35.069
Modifying tags for the snapshots

417
00:24:36.100 --> 00:24:46.920
for which backup is done by copies completed.

418
00:24:47.230 --> 00:24:48.874
That's it.

419
00:24:48.874 --> 00:24:51.034
So how you can do that?

420
00:24:51.034 --> 00:24:53.030
So first take one by one,

421
00:24:53.030 --> 00:24:55.730
you will snap from a snapshot source,

422
00:24:55.730 --> 00:25:01.174
snapshot in your backups, naps, right?

423
00:25:01.174 --> 00:25:03.425
So here, very simple,

424
00:25:03.425 --> 00:25:10.960
plain to dot delete tags, right?

425
00:25:10.960 --> 00:25:13.870
So, so claimed is nothing but here,

426
00:25:13.870 --> 00:25:17.395
what is your client source you are,

427
00:25:17.395 --> 00:25:19.720
you are removing from source, right?

428
00:25:19.720 --> 00:25:30.910
So then how you can delete that will let me take it my EC2 source client dot.

429
00:25:30.910 --> 00:25:32.844
You have already copied that, right?

430
00:25:32.844 --> 00:25:35.960
Let me delete tags.

431
00:25:37.590 --> 00:25:42.129
But for this, you have some resource option, right?

432
00:25:42.129 --> 00:25:48.144
Resources. Resources.

433
00:25:48.144 --> 00:25:49.390
It can write even if you want,

434
00:25:49.390 --> 00:25:50.560
write one-by-one next line,

435
00:25:50.560 --> 00:25:52.670
you can also write in this way.

436
00:25:52.900 --> 00:25:57.184
So resources, what is your resource snapshot id.

437
00:25:57.184 --> 00:25:59.580
Each snapshot ID.

438
00:26:02.350 --> 00:26:06.170
Right? Then after that,

439
00:26:06.170 --> 00:26:07.490
what do you want to provide?

440
00:26:07.490 --> 00:26:09.529
So I need to provide tags for this.

441
00:26:09.529 --> 00:26:11.285
What is the tags I want to delete?

442
00:26:11.285 --> 00:26:14.795
Simon? What other tags I need could delete for this.

443
00:26:14.795 --> 00:26:18.004
So if you observe here you have tags, right?

444
00:26:18.004 --> 00:26:23.430
And in the tags, you need to write a dictionary format to tag.

445
00:26:23.590 --> 00:26:27.139
So in that key,

446
00:26:27.139 --> 00:26:28.385
this is fixed one.

447
00:26:28.385 --> 00:26:31.084
Now in our case, what is our key?

448
00:26:31.084 --> 00:26:33.829
Our keys backup.

449
00:26:33.829 --> 00:26:35.209
Right?

450
00:26:35.209 --> 00:26:36.814
Then. What is value?

451
00:26:36.814 --> 00:26:37.670
Yes.

452
00:26:37.670 --> 00:26:38.944
Yes, we have currently.

453
00:26:38.944 --> 00:26:42.050
But after completion of that, I need to delete that.

454
00:26:42.050 --> 00:26:46.264
Yes. But I want to create a new tag right then.

455
00:26:46.264 --> 00:26:51.514
So deletion is done immediately just to create your new tags,

456
00:26:51.514 --> 00:26:55.744
EC2, source, client, and dot, right?

457
00:26:55.744 --> 00:27:03.829
So you have already your syntax here to create a tags. And that's it.

458
00:27:03.829 --> 00:27:07.159
Then just simply provide your resource IDs. Same thing.

459
00:27:07.159 --> 00:27:09.680
Let me copy and paste it.

460
00:27:09.680 --> 00:27:14.280
The only thing you have to make it CSS2.

461
00:27:14.500 --> 00:27:17.910
Guess as to complete it.

462
00:27:19.180 --> 00:27:25.385
That's a fine.

463
00:27:25.385 --> 00:27:35.909
So here I want write some essays like print, deleting older tags.

464
00:27:37.180 --> 00:27:45.390
And then here I'm going to write creating new tags.

465
00:27:48.460 --> 00:27:52.935
So if you want to write for snapshot ID, you can write it.

466
00:27:52.935 --> 00:27:57.775
Format your each source snapshot.

467
00:27:57.775 --> 00:28:01.730
So here also you can write it bold tags for.

468
00:28:06.210 --> 00:28:09.729
Let me save this. So less as of now,

469
00:28:09.729 --> 00:28:15.054
let me remove destination snapshots.

470
00:28:15.054 --> 00:28:17.170
Anyway, low-balling again redone,

471
00:28:17.170 --> 00:28:23.840
but I want to tell you that I don't want to keep them and just let me delete them.

472
00:28:28.380 --> 00:28:33.159
Than right.

473
00:28:33.159 --> 00:28:35.235
Now I'm running our code.

474
00:28:35.235 --> 00:28:36.349
Just observe

475
00:28:36.349 --> 00:28:47.220
the output format,

476
00:29:04.840 --> 00:29:09.120
creating new tags.

477
00:29:22.510 --> 00:29:24.500
Okay?

478
00:29:24.500 --> 00:29:29.165
So here I need to close our parentheses.

479
00:29:29.165 --> 00:29:30.660
Yes.

480
00:29:30.910 --> 00:29:36.079
For this, I forgot to close this parenthesis.

481
00:29:36.079 --> 00:29:39.770
Let me run it and see the output.

482
00:29:39.770 --> 00:29:43.024
If you have any errors, we'll rectify that.

483
00:29:43.024 --> 00:29:47.929
Taking backup done source client ID,

484
00:29:47.929 --> 00:29:55.050
name EC2 source client ID is not defined. Lenin, but 35.

485
00:29:57.190 --> 00:30:04.349
Here it is deleted, right? Yeah, Nobel.

486
00:30:04.660 --> 00:30:09.230
Okay. Now see that just now we'd done our core.

487
00:30:09.230 --> 00:30:11.119
It is creating two snapshots.

488
00:30:11.119 --> 00:30:13.610
But anyway, tags, we did not delete it.

489
00:30:13.610 --> 00:30:18.049
Let me rerun the code so that it will create again, once again snapshots.

490
00:30:18.049 --> 00:30:19.550
But if it is perfect,

491
00:30:19.550 --> 00:30:23.600
it will delete your old data and creating new tags, right?

492
00:30:23.600 --> 00:30:25.850
As of no, even let me check in our,

493
00:30:25.850 --> 00:30:30.034
our source snapshots with the tags.

494
00:30:30.034 --> 00:30:32.539
Once our script is completed successfully,

495
00:30:32.539 --> 00:30:37.025
then our snapshots tag should be modified.

496
00:30:37.025 --> 00:30:39.095
As of no DCS, right?

497
00:30:39.095 --> 00:30:41.490
Let me read on our code.

498
00:30:48.060 --> 00:30:54.859
Oh, EC2, client ID where it is man.

499
00:30:55.200 --> 00:31:04.210
Deleting old snap short tags for all client.read elite tag's name in-situ source client.

500
00:31:04.210 --> 00:31:11.620
Who will shed client who we MR.

501
00:31:11.620 --> 00:31:14.485
This year, unnecessarily very Harrington B. Yeah.

502
00:31:14.485 --> 00:31:16.825
No problem. Once again,

503
00:31:16.825 --> 00:31:19.165
just now we're done because of that, right?

504
00:31:19.165 --> 00:31:25.304
In your destination location now you have four snapshots.

505
00:31:25.304 --> 00:31:28.984
Previously to now to you have to verify that.

506
00:31:28.984 --> 00:31:33.139
Yes, fine. Now, in our source location,

507
00:31:33.139 --> 00:31:34.984
let me select source.

508
00:31:34.984 --> 00:31:36.920
Right before running our code,

509
00:31:36.920 --> 00:31:39.479
just crosscheck your tags.

510
00:31:43.420 --> 00:31:46.100
Still it is, yes, no,

511
00:31:46.100 --> 00:31:50.849
let me run this and see the output.

512
00:31:51.790 --> 00:31:55.859
You hope this will success at least no.

513
00:31:57.760 --> 00:32:02.135
Claimed id is not defined clear tax.

514
00:32:02.135 --> 00:32:04.685
Who shared here also?

515
00:32:04.685 --> 00:32:05.869
Same mystic.

516
00:32:05.869 --> 00:32:07.469
Yeah.

517
00:32:07.960 --> 00:32:11.990
But now you have taken tags on,

518
00:32:11.990 --> 00:32:13.549
you deleted your tags.

519
00:32:13.549 --> 00:32:15.424
C, You don't have any tags here,

520
00:32:15.424 --> 00:32:16.865
but we need to create a tags.

521
00:32:16.865 --> 00:32:22.529
That's why. Let me write once again tags.

522
00:32:36.370 --> 00:32:42.630
I think for this fight,

523
00:32:44.350 --> 00:32:46.999
I save this, right?

524
00:32:46.999 --> 00:32:55.640
Let me yes,

525
00:32:55.640 --> 00:32:57.890
your skipped past success.

526
00:32:57.890 --> 00:33:02.579
Not just to go and see newer destination region.

527
00:33:05.800 --> 00:33:10.504
See the number of snapshots which you are having currently,

528
00:33:10.504 --> 00:33:12.049
you how he ate right?

529
00:33:12.049 --> 00:33:19.310
Now. Just come to your source and see that tags because you're skeptical success note,

530
00:33:19.310 --> 00:33:20.944
you create a new tags.

531
00:33:20.944 --> 00:33:24.510
Then see the tags for each and every snapshot.

532
00:33:24.520 --> 00:33:26.554
Now it is completed,

533
00:33:26.554 --> 00:33:29.630
not as that means already you have taken a snapshot for these.

534
00:33:29.630 --> 00:33:33.770
That's why whenever if I run in future stayed the same code for the same snapshot ID,

535
00:33:33.770 --> 00:33:35.359
I should not take a backup already.

536
00:33:35.359 --> 00:33:41.314
A how and that's why I make are this right back up as completed? Same way.

537
00:33:41.314 --> 00:33:42.590
Evens or anybody for this,

538
00:33:42.590 --> 00:33:43.955
you don't have any backup option.

539
00:33:43.955 --> 00:33:46.654
For this, you have backup option now that is complicated.

540
00:33:46.654 --> 00:33:51.960
Now currently in your destination you how eight snapshots.

541
00:33:55.390 --> 00:33:57.005
Right?

542
00:33:57.005 --> 00:34:00.559
Now if I rerun our code with any number of times,

543
00:34:00.559 --> 00:34:08.070
you won't take any backups for already taken snapshots, backups.

544
00:34:08.440 --> 00:34:11.750
See, I'm running this.

545
00:34:11.750 --> 00:34:14.060
Iran already once now a second time.

546
00:34:14.060 --> 00:34:16.129
So previously, if it does success,

547
00:34:16.129 --> 00:34:18.245
the code has taken the snapshot.

548
00:34:18.245 --> 00:34:19.909
Snapshot should be like dual.

549
00:34:19.909 --> 00:34:23.345
But still you how ate only that means successfully,

550
00:34:23.345 --> 00:34:28.924
you modified bags for your snapshots offer take net backup, right?

551
00:34:28.924 --> 00:34:31.280
This is the complete code.

552
00:34:31.280 --> 00:34:35.659
Could take a copy of your snapshot, two different region.

553
00:34:35.659 --> 00:34:39.590
After taking snapshot, you will need to market as completed.

554
00:34:39.590 --> 00:34:42.230
That's why backup, tag value,

555
00:34:42.230 --> 00:34:46.699
how modified as completed? The same core.

556
00:34:46.699 --> 00:34:49.370
Suppose if you want to run through your lambda.

557
00:34:49.370 --> 00:34:52.955
So regularly, if you want to run this repeatedly, right?

558
00:34:52.955 --> 00:34:57.889
So every day I want to run once so that if any new snapshots are created for that,

559
00:34:57.889 --> 00:35:00.470
I need to take a backup to different region.

560
00:35:00.470 --> 00:35:04.009
Then you can differently around this core through your lambda.

561
00:35:04.009 --> 00:35:05.644
Because lambda you can schedule your job.

562
00:35:05.644 --> 00:35:09.499
Of course, even from your local host,

563
00:35:09.499 --> 00:35:12.049
you can schedule some cron jobs, right?

564
00:35:12.049 --> 00:35:14.285
But I don't want to schedule cron jobs.

565
00:35:14.285 --> 00:35:20.104
See what I can do 0s because in your lambda Uno,

566
00:35:20.104 --> 00:35:24.905
the code should be, their entire code should be there under your Lambda handler.

567
00:35:24.905 --> 00:35:30.439
That's why yes, no,

568
00:35:30.439 --> 00:35:32.374
I am taking this as a core.

569
00:35:32.374 --> 00:35:36.080
Nothing is there just to go to your lambda that we create.

570
00:35:36.080 --> 00:35:38.285
Before that we are under destination.

571
00:35:38.285 --> 00:35:40.439
Let me delete all of them.

572
00:35:43.750 --> 00:35:49.324
Now through lambda also we will see is two lambda, right?

573
00:35:49.324 --> 00:35:50.910
Lambda.

574
00:35:58.030 --> 00:35:59.480
So I wanted

575
00:35:59.480 --> 00:36:06.270
to get this in US East one lambda function. Okay?

576
00:36:07.210 --> 00:36:17.795
So functions,

577
00:36:17.795 --> 00:36:21.619
right, create new function already a house some functions,

578
00:36:21.619 --> 00:36:23.789
let me create a new one.

579
00:36:23.980 --> 00:36:29.910
So here our function is EBS maps.

580
00:36:31.120 --> 00:36:40.609
You can call it any name, but shorter will limbs maps to snaps between regions.

581
00:36:42.210 --> 00:36:45.774
So we want to implement this with L PAF lambda.

582
00:36:45.774 --> 00:36:48.669
So let me select lambda and suppose you can start there,

583
00:36:48.669 --> 00:36:50.499
Python 3.4x auto dot seven,

584
00:36:50.499 --> 00:36:52.449
whatever it may be, ocean you can select it.

585
00:36:52.449 --> 00:36:55.540
So there's, you know, lambda needs some IAM role you

586
00:36:55.540 --> 00:36:58.330
can select from here or after creation of your function,

587
00:36:58.330 --> 00:37:02.589
you can also select your lambda rule, right?

588
00:37:02.589 --> 00:37:05.440
And you need to remember that whenever if you're executing or

589
00:37:05.440 --> 00:37:08.244
Python moto three script through lambda, right?

590
00:37:08.244 --> 00:37:09.399
In your Even in near real time.

591
00:37:09.399 --> 00:37:13.674
Also, most of the cases you are going to execute with the help of roles only,

592
00:37:13.674 --> 00:37:16.819
right? Let me show you that.

593
00:37:17.790 --> 00:37:22.120
Now, just to delete these core and a copy,

594
00:37:22.120 --> 00:37:25.420
whatever the core you have in your hand under lambda.

595
00:37:25.420 --> 00:37:28.135
So guys here, just to provide this indentation,

596
00:37:28.135 --> 00:37:31.824
I rearranged my code by copying here and I provide some space here.

597
00:37:31.824 --> 00:37:33.625
Okay, that's fine.

598
00:37:33.625 --> 00:37:36.984
Now the thing is, whenever if you're working from lambda,

599
00:37:36.984 --> 00:37:39.654
don't create any session, right?

600
00:37:39.654 --> 00:37:41.589
We are not using any credentials, right?

601
00:37:41.589 --> 00:37:42.819
You are using some IAM role.

602
00:37:42.819 --> 00:37:45.714
That's why it directly create Bhutto three dot your client.

603
00:37:45.714 --> 00:37:49.090
I mean, whatever the object console you want to create,

604
00:37:49.090 --> 00:37:50.470
simply Bhutto three dot.

605
00:37:50.470 --> 00:37:54.429
Don't need any session object here.

606
00:37:54.429 --> 00:37:59.694
So session object is only from whenever if you're running your code from your local host.

607
00:37:59.694 --> 00:38:00.985
That's it.

608
00:38:00.985 --> 00:38:09.260
So somewhere we created our destination object files right here also simply moto three.

609
00:38:09.510 --> 00:38:12.589
Right? Save it.

610
00:38:15.450 --> 00:38:19.090
Fine. So as of now,

611
00:38:19.090 --> 00:38:22.974
I'm not skilled dealing a job means every day,

612
00:38:22.974 --> 00:38:25.869
morning, six AM, automatically the script has to run on if

613
00:38:25.869 --> 00:38:30.189
any new snapshots or inferring source location for them.

614
00:38:30.189 --> 00:38:34.555
I'm protect gay copy for destination transient, right?

615
00:38:34.555 --> 00:38:37.239
So for the EU to schedule your job,

616
00:38:37.239 --> 00:38:41.230
right, so that you can schedule using your CloudWatch Events.

617
00:38:41.230 --> 00:38:43.809
Let me add it so they will be clear for you.

618
00:38:43.809 --> 00:38:45.339
And before that I saw,

619
00:38:45.339 --> 00:38:48.370
let me assign your role for this.

620
00:38:48.370 --> 00:38:50.664
So execution role, right?

621
00:38:50.664 --> 00:38:52.314
Use an existing rule,

622
00:38:52.314 --> 00:38:54.189
already has some rules.

623
00:38:54.189 --> 00:38:57.159
Let me select my role is I think

624
00:38:57.159 --> 00:39:01.389
this is the role which is having full access and execution time.

625
00:39:01.389 --> 00:39:08.875
Suppose I am going to use some three minutes, right? Fine.

626
00:39:08.875 --> 00:39:10.840
Now if you want write some description undemanding,

627
00:39:10.840 --> 00:39:14.004
they can write tags for your lambda.

628
00:39:14.004 --> 00:39:16.705
If you want to provide some environment variable, you can probably.

629
00:39:16.705 --> 00:39:18.264
So as of now, we are not using them.

630
00:39:18.264 --> 00:39:20.679
Yes, we will use after some time.

631
00:39:20.679 --> 00:39:23.814
So your code is done. Right?

632
00:39:23.814 --> 00:39:26.569
Now, schedule it.

633
00:39:26.860 --> 00:39:32.929
Let me schedule this job. Configuration required.

634
00:39:32.929 --> 00:39:35.494
Just click on that and come down.

635
00:39:35.494 --> 00:39:38.735
So create a new rule.

636
00:39:38.735 --> 00:39:44.760
So that rule is KBS between regions.

637
00:39:47.410 --> 00:39:51.994
So between regions I am writing description.

638
00:39:51.994 --> 00:39:55.654
And here guys, you can use a scheduled expression or even to pattern.

639
00:39:55.654 --> 00:40:01.220
So scheduling expression is nothing but at what time you want to take a backup, right?

640
00:40:01.220 --> 00:40:04.325
So you can schedule some job here

641
00:40:04.325 --> 00:40:08.329
using two is using a the rate expression or comets fashion.

642
00:40:08.329 --> 00:40:12.304
So chronic expression, you have to provide exact time, whatever it may be.

643
00:40:12.304 --> 00:40:14.059
Now for your understanding purpose,

644
00:40:14.059 --> 00:40:19.744
what I am doing is simply I'm taking a rate one minute

645
00:40:19.744 --> 00:40:26.060
after one minute automatically it has to take snapshot.

646
00:40:26.060 --> 00:40:28.879
I mean, this code has to run, right?

647
00:40:28.879 --> 00:40:31.774
So if you want to schedule like everyday,

648
00:40:31.774 --> 00:40:38.069
Let me take this directly. Suppose everyday.

649
00:40:38.170 --> 00:40:43.235
This is as per UTC time race ever day six AM.

650
00:40:43.235 --> 00:40:45.725
Now if you save this code like this, right,

651
00:40:45.725 --> 00:40:51.140
whenever 06:00 AM occurs at the time automatically your code will run and incase if you

652
00:40:51.140 --> 00:40:57.290
identify em in your code is identified any new snapshots which are having tags,

653
00:40:57.290 --> 00:41:00.110
valid key as backup on Values areas.

654
00:41:00.110 --> 00:41:02.659
Those snapshot IDs which will take it back up.

655
00:41:02.659 --> 00:41:05.044
Good destination location, right?

656
00:41:05.044 --> 00:41:09.905
So this is the expression you want to schedule your job for everyday or 06:00 AM.

657
00:41:09.905 --> 00:41:12.560
But I need because I need to show you how it is going to execute.

658
00:41:12.560 --> 00:41:17.104
That's why I'm going to take in this way rate of one minute or two minutes.

659
00:41:17.104 --> 00:41:19.800
Let me take simply one minute.

660
00:41:20.740 --> 00:41:23.874
So after one minute it has clear execute,

661
00:41:23.874 --> 00:41:26.159
right? Let me save it.

662
00:41:27.570 --> 00:41:30.139
What happened?

663
00:41:32.490 --> 00:41:35.420
You May 2.

664
00:41:36.090 --> 00:41:38.364
Mode.

665
00:41:38.364 --> 00:41:43.460
Cloudwatch Events, configuration.

666
00:41:44.190 --> 00:41:46.524
Create new rule.

667
00:41:46.524 --> 00:41:50.059
I'm digging simply in-between regions.

668
00:41:50.970 --> 00:41:54.445
You can provide your description here.

669
00:41:54.445 --> 00:41:57.400
So I'm going to write rate.

670
00:41:57.400 --> 00:42:01.160
Let me take suppose two minutes otherwise.

671
00:42:08.110 --> 00:42:11.790
And then sail the score.

672
00:42:16.600 --> 00:42:18.859
Fine, right?

673
00:42:18.859 --> 00:42:20.645
So after two minutes it will run.

674
00:42:20.645 --> 00:42:22.250
But the problem is right.

675
00:42:22.250 --> 00:42:27.784
You don't have any snapshots which are having tags of key as,

676
00:42:27.784 --> 00:42:29.270
backup and value as yes,

677
00:42:29.270 --> 00:42:33.695
because already you modified whenever while running your code from your local host.

678
00:42:33.695 --> 00:42:36.484
No, let me change for at least one is

679
00:42:36.484 --> 00:42:41.675
one snapshot backup Azi s. So after two maids automatically you'll run.

680
00:42:41.675 --> 00:42:43.415
So before getting to minutes,

681
00:42:43.415 --> 00:42:46.429
let me modify immediately my snapshots.

682
00:42:46.429 --> 00:42:52.160
For one of the snapshot I will modify tagged as it should have complete,

683
00:42:52.160 --> 00:42:55.144
you know, let me modify this as yes.

684
00:42:55.144 --> 00:43:01.160
So now after two minutes automatically or code will run and in the destination location,

685
00:43:01.160 --> 00:43:03.170
let me go with your destination.

686
00:43:03.170 --> 00:43:07.130
After two minutes you will get only one snapshot because out of

687
00:43:07.130 --> 00:43:11.360
four Yao only for one snapshot backup as yes.

688
00:43:11.360 --> 00:43:12.995
I just wait for two minutes.

689
00:43:12.995 --> 00:43:15.770
After two minutes, just refresh it so that you will

690
00:43:15.770 --> 00:43:21.064
get a snapshot in the different lesion.

691
00:43:21.064 --> 00:43:24.330
Okay, and just wait for two minutes.

692
00:45:49.810 --> 00:45:54.509
Why it's not taking a snapshot.

693
00:46:25.750 --> 00:46:28.640
Streams, please try again,

694
00:46:28.640 --> 00:46:30.989
but inflation in this patient.

695
00:46:36.040 --> 00:46:39.089
We help take

696
00:47:01.540 --> 00:47:04.744
our CloudWatch.

697
00:47:04.744 --> 00:47:06.865
Two minutes.

698
00:47:06.865 --> 00:47:08.940
Perfect.

699
00:48:38.830 --> 00:48:42.479
Once again, you know, source region

700
00:48:47.770 --> 00:48:56.909
is they're not walking.

701
00:48:58.960 --> 00:49:02.729
This, uncheck it manually first.

702
00:49:12.340 --> 00:49:15.779
Let me run this once.

703
00:49:19.120 --> 00:49:22.429
You know lambda is based on events,

704
00:49:22.429 --> 00:49:24.499
even though if you don't want to provide

705
00:49:24.499 --> 00:49:28.499
any event or at least you have to provide some test random event.

706
00:49:32.590 --> 00:49:37.649
Mao district and see the output once.

707
00:49:39.130 --> 00:49:46.190
Yes, sorry, this is the reason we are unable to execute our core.

708
00:49:46.190 --> 00:49:49.409
I forgot to import both A3.

709
00:49:50.020 --> 00:49:53.789
Right? You'll save it.

710
00:49:53.789 --> 00:49:57.294
Es knowledge district ones.

711
00:49:57.294 --> 00:49:59.629
So if I test it,

712
00:50:07.140 --> 00:50:09.980
messes.

713
00:50:18.450 --> 00:50:23.239
Lie number two. What is that?

714
00:50:24.090 --> 00:50:34.969
Smallest lesion in syntax or in more Q lambda function?

715
00:50:36.100 --> 00:50:39.269
I number two.

716
00:50:41.470 --> 00:50:49.800
In module three, source and destination region

717
00:51:14.650 --> 00:51:18.240
three, that's fine.

718
00:51:37.510 --> 00:51:40.169
Model three,

719
00:51:53.530 --> 00:51:54.769
we had,

720
00:51:54.769 --> 00:52:01.620
we defined what it's minus tick.

721
00:52:01.660 --> 00:52:08.630
So every contest, you know,

722
00:52:08.630 --> 00:52:10.519
if it is success.

723
00:52:10.519 --> 00:52:13.940
Yes. Your in this case it was success.

724
00:52:13.940 --> 00:52:16.560
Let me go and see anywhere.

725
00:52:17.620 --> 00:52:24.559
Here. I'm going to open one more.

726
00:52:24.559 --> 00:52:31.129
So you know, you are getting only one snapshot because if you observe in the destination,

727
00:52:31.129 --> 00:52:35.914
right, let me already we earn destination.

728
00:52:35.914 --> 00:52:39.529
And the destination, we change you only for one EC2, sorry,

729
00:52:39.529 --> 00:52:43.745
one snapshot, the tag value as backup to yes.

730
00:52:43.745 --> 00:52:47.525
Now after completion of your core through lambda, right?

731
00:52:47.525 --> 00:52:51.754
If you observe four snapshots which you are having this anyway,

732
00:52:51.754 --> 00:52:54.349
for this only we modify nowadays got completed.

733
00:52:54.349 --> 00:52:56.240
Now let me modify this one.

734
00:52:56.240 --> 00:53:00.380
So again, these are tag. Yes, yes.

735
00:53:00.380 --> 00:53:06.050
And so I need to read on the score

736
00:53:06.050 --> 00:53:13.219
through by adding CloudWatch Events is by scheduling a job.

737
00:53:13.219 --> 00:53:19.230
So this here we are scheduling a job based on a rate expression.

738
00:53:26.410 --> 00:53:32.460
So you can also schedule this from your CloudWatch console also.

739
00:53:34.720 --> 00:53:36.004
Right?

740
00:53:36.004 --> 00:53:39.184
Let me save it and rate.

741
00:53:39.184 --> 00:53:42.380
So we have to wait two more minutes to verify this,

742
00:53:42.380 --> 00:53:46.170
right of two minutes.

743
00:53:48.610 --> 00:53:53.820
The object let me add and save it.

744
00:53:57.580 --> 00:54:01.430
So as you had to wait for two more minutes so that you can see

745
00:54:01.430 --> 00:54:05.420
one more backup here, right?

746
00:54:05.420 --> 00:54:07.145
Just wait for two minutes.

747
00:54:07.145 --> 00:54:08.284
So because this you-how?

748
00:54:08.284 --> 00:54:12.019
Yes, after completion of our code through lambda,

749
00:54:12.019 --> 00:54:13.969
it will become automatically competed.

750
00:54:13.969 --> 00:54:18.335
And here you will get one more snapshot, right?

751
00:54:18.335 --> 00:54:22.530
Okay, then wait for two minutes and observe the output.

752
00:54:45.100 --> 00:54:47.375
You got it.

753
00:54:47.375 --> 00:54:51.769
Right. Offer scheduling your two minutes, right.

754
00:54:51.769 --> 00:54:55.534
You got the word snapshot automatically here.

755
00:54:55.534 --> 00:54:57.289
Now after that, if you go through

756
00:54:57.289 --> 00:55:03.469
your destination and actually you have taken this backup as yes.

757
00:55:03.469 --> 00:55:07.099
Now already our code has been executed and that means we have taken

758
00:55:07.099 --> 00:55:11.240
a backup on offer that we are modifying through our skipped backup as complicated,

759
00:55:11.240 --> 00:55:14.930
so I'm going to modify the tags as completed through script.

760
00:55:14.930 --> 00:55:18.199
Just refresh it and see that whether you completed or not,

761
00:55:18.199 --> 00:55:20.269
see that you got completed.

762
00:55:20.269 --> 00:55:21.424
Okay?

763
00:55:21.424 --> 00:55:27.874
So okay, so this is the core how you can execute through your lambda, right?

764
00:55:27.874 --> 00:55:30.454
Or if you want a good from your local host.

765
00:55:30.454 --> 00:55:32.510
So your concept is right,

766
00:55:32.510 --> 00:55:35.149
how to take a backup of one snapshot,

767
00:55:35.149 --> 00:55:36.830
EBS snapshot two different region.

768
00:55:36.830 --> 00:55:38.930
After taking that snapshot,

769
00:55:38.930 --> 00:55:41.464
if you want to modify any tags,

770
00:55:41.464 --> 00:55:43.340
right? How you can modify.

771
00:55:43.340 --> 00:55:45.799
So that is the complete code.

772
00:55:45.799 --> 00:55:47.329
Right?

773
00:55:47.329 --> 00:55:50.509
Okay guys, thank you for watching this video.

774
00:55:50.509 --> 00:55:53.119
If you have any queries later this course,

775
00:55:53.119 --> 00:55:55.955
you can ping me on my what's up.

776
00:55:55.955 --> 00:55:57.364
Right?

777
00:55:57.364 --> 00:55:59.849
Okay. Thank you.

