1
00:00:05,750 --> 00:00:07,425
Hi friends.

2
00:00:07,425 --> 00:00:11,519
In this video, we are going to see how to automate snapshots

3
00:00:11,519 --> 00:00:16,749
of EBS volumes using AWS Lambda and CloudWatch.

4
00:00:16,760 --> 00:00:23,595
Right? So singly automated EBS snapshots using AWS Lambda and CloudWatch.

5
00:00:23,595 --> 00:00:26,760
So whatever the code you are going to use in AWS lambda,

6
00:00:26,760 --> 00:00:30,030
that is moto three of Python, right?

7
00:00:30,030 --> 00:00:33,944
So you know, lambda is also going to support for other languages as well, right?

8
00:00:33,944 --> 00:00:37,830
Like Node.js, JavaScript, go lang, Right?

9
00:00:37,830 --> 00:00:42,814
But here we are using moto three of your Python, right?

10
00:00:42,814 --> 00:00:43,609
Fine.

11
00:00:43,609 --> 00:00:47,345
So the is to implement this grip just i'm going with some steps.

12
00:00:47,345 --> 00:00:49,534
Very first step is first,

13
00:00:49,534 --> 00:00:55,534
I will write a small code to list all EBS volumes based on our requirement.

14
00:00:55,534 --> 00:00:58,445
Suppose yes are generally how

15
00:00:58,445 --> 00:01:06,485
some 50 to 60 of some 50 EBS volumes in your AECOM in one particular region.

16
00:01:06,485 --> 00:01:10,340
And one more thing is this script is going to work with only for one reason.

17
00:01:10,340 --> 00:01:16,519
And in next video, I will make a script such that it has to work for all the regions.

18
00:01:16,519 --> 00:01:17,329
Okay?

19
00:01:17,329 --> 00:01:23,119
That's fine. Now assume that you have 50 volumes in region, right?

20
00:01:23,119 --> 00:01:28,099
And in the summer or our product volumes on somewhat non-profit, right?

21
00:01:28,099 --> 00:01:32,719
But I want to take backup for suppose only for product, right?

22
00:01:32,719 --> 00:01:34,820
So based on this condition,

23
00:01:34,820 --> 00:01:38,029
first of all, I need to get all EBS volumes IDs.

24
00:01:38,029 --> 00:01:41,779
Once. If I get all EBS volumes IDs in my hand,

25
00:01:41,779 --> 00:01:48,799
then I can extend this logic to create snapshots, right?

26
00:01:48,799 --> 00:01:52,490
First, let me go and open a simple script to

27
00:01:52,490 --> 00:01:56,029
list all your EBS volumes based on your requirement.

28
00:01:56,029 --> 00:02:00,210
Now, our requirement is First let me open my icon.

29
00:02:04,600 --> 00:02:09,619
See, you know, EBS volumes or they're under your ec2 service.

30
00:02:09,619 --> 00:02:11,449
Right. So we are under EC2.

31
00:02:11,449 --> 00:02:14,915
Let me go with the volumes. Right.

32
00:02:14,915 --> 00:02:16,949
See observe here.

33
00:02:19,960 --> 00:02:22,829
Let me login.

34
00:02:31,240 --> 00:02:33,065
Now. See here

35
00:02:33,065 --> 00:02:35,810
we have two volumes, right?

36
00:02:35,810 --> 00:02:41,614
And if you observe that tag values for these two key as broad and value as backup.

37
00:02:41,614 --> 00:02:45,139
So whatever the EBS volume which is having

38
00:02:45,139 --> 00:02:49,385
key as broad and value as backup those volumes.

39
00:02:49,385 --> 00:02:52,295
For them, I want to take a snapshot, right?

40
00:02:52,295 --> 00:02:57,889
And we have only to unfold those to you how CHI has broadened value as backup.

41
00:02:57,889 --> 00:02:58,940
Right?

42
00:02:58,940 --> 00:03:01,535
And if you have the snapshots as of now,

43
00:03:01,535 --> 00:03:04,130
I don't have any snapshots, right?

44
00:03:04,130 --> 00:03:09,979
First, let me go and write a simple moto three scripts to list out all your EBS volumes.

45
00:03:09,979 --> 00:03:13,805
Then we will apply a filter based on tax, right?

46
00:03:13,805 --> 00:03:19,624
I will show the simple script. Okay?

47
00:03:19,624 --> 00:03:25,699
So automate EBS, snapshot PY.

48
00:03:25,699 --> 00:03:30,844
Let me write my Python shebang line and then import photo three.

49
00:03:30,844 --> 00:03:36,960
Then I'm also importing pre-print module.

50
00:03:37,840 --> 00:03:41,105
So instead of using simple print,

51
00:03:41,105 --> 00:03:43,579
paper and diffuse preprint for dictionaries,

52
00:03:43,579 --> 00:03:45,830
it will display output in Eclair format.

53
00:03:45,830 --> 00:03:48,590
That's it, right, fine.

54
00:03:48,590 --> 00:03:53,149
The first thing you are going to work with volumes.

55
00:03:53,149 --> 00:03:55,309
Volumes are there under ec2 service.

56
00:03:55,309 --> 00:03:59,255
That means you have to create first EC2 object.

57
00:03:59,255 --> 00:04:01,399
And to create your EC2 object,

58
00:04:01,399 --> 00:04:04,639
you are having two methods to objects.

59
00:04:04,639 --> 00:04:07,444
You are having resource object as well as client object.

60
00:04:07,444 --> 00:04:09,530
You can go with any one of that.

61
00:04:09,530 --> 00:04:12,889
So here I'm going to work with client object.

62
00:04:12,889 --> 00:04:16,280
Of course, same option is there even if your resource as well.

63
00:04:16,280 --> 00:04:17,419
Right?

64
00:04:17,419 --> 00:04:22,175
And anyway, you are running the score from your local host, right?

65
00:04:22,175 --> 00:04:25,265
So finally, I will copy and paste this coding lambda,

66
00:04:25,265 --> 00:04:29,690
and I will show you how to automate based on your required time.

67
00:04:29,690 --> 00:04:32,150
Right? That's fine.

68
00:04:32,150 --> 00:04:36,980
Now, so you are running this board as of no, from localhost.

69
00:04:36,980 --> 00:04:39,590
That's why I always try to create a session first.

70
00:04:39,590 --> 00:04:44,220
So this session is nothing but your moto three dot.

71
00:04:46,210 --> 00:04:49,655
So shen dot session.

72
00:04:49,655 --> 00:04:52,710
How to provide some profile name.

73
00:04:55,630 --> 00:05:01,895
See we are using from starting the profile landmass route.

74
00:05:01,895 --> 00:05:04,039
If you want to use any other profile just to

75
00:05:04,039 --> 00:05:06,604
configure your credentials on your local host.

76
00:05:06,604 --> 00:05:09,589
By running database configure, hyphen,

77
00:05:09,589 --> 00:05:11,960
hyphen profile man provided the profile name,

78
00:05:11,960 --> 00:05:13,444
whatever the proper limb you want,

79
00:05:13,444 --> 00:05:17,630
un-pause the credential so that that profile name will have access to

80
00:05:17,630 --> 00:05:22,234
work based on your IAM policies.

81
00:05:22,234 --> 00:05:23,360
That's fine.

82
00:05:23,360 --> 00:05:25,250
Now, I have a session in my hand.

83
00:05:25,250 --> 00:05:27,769
Right now let me create my easy to console

84
00:05:27,769 --> 00:05:32,449
object that I am going to use using client object, right?

85
00:05:32,449 --> 00:05:36,005
So simply session the client.

86
00:05:36,005 --> 00:05:38,119
So what about the service you need?

87
00:05:38,119 --> 00:05:39,379
I need EC2.

88
00:05:39,379 --> 00:05:43,279
That's why I'm going to take service name as EC2 when I want to work

89
00:05:43,279 --> 00:05:50,150
with a region name that is USBs 21.

90
00:05:50,150 --> 00:05:52,114
That's fine.

91
00:05:52,114 --> 00:05:57,214
Right now the thing is using your EC2 client object.

92
00:05:57,214 --> 00:06:01,430
I need to get all my required volume IDs first.

93
00:06:01,430 --> 00:06:04,355
Because for them only entity could take a snapshot.

94
00:06:04,355 --> 00:06:06,739
So whatever the volumes ids,

95
00:06:06,739 --> 00:06:10,340
you're going to get for that unit to take snapshot.

96
00:06:10,340 --> 00:06:14,449
That's why force I'm trying to collect my required volumes IDs.

97
00:06:14,449 --> 00:06:19,649
Let me go and open your official documentation for your moto three.

98
00:06:20,050 --> 00:06:26,989
On let me select your service as EC2.

99
00:06:26,989 --> 00:06:29,389
Go with available services, right.

100
00:06:29,389 --> 00:06:32,010
So under that ec2.

101
00:06:32,050 --> 00:06:35,915
And anyway, anyhow here, under EC2,

102
00:06:35,915 --> 00:06:39,319
you how both are resource as well as client object,

103
00:06:39,319 --> 00:06:43,159
C, client as well as resource object.

104
00:06:43,159 --> 00:06:43,880
Right?

105
00:06:43,880 --> 00:06:46,115
This is a resource and this is quaint.

106
00:06:46,115 --> 00:06:46,939
Right?

107
00:06:46,939 --> 00:06:48,724
Now I'm going to work with client.

108
00:06:48,724 --> 00:06:51,185
Just click on that client, right?

109
00:06:51,185 --> 00:06:54,965
And if you observe somewhere you how option coral.

110
00:06:54,965 --> 00:06:56,239
Your client, you know,

111
00:06:56,239 --> 00:07:02,119
all operations are one-step operations or describe volumes or they're somewhere.

112
00:07:02,119 --> 00:07:08,299
Describe volumes, right?

113
00:07:08,299 --> 00:07:11,164
Just take client.write volumes.

114
00:07:11,164 --> 00:07:13,189
So based on freedom affinity filter,

115
00:07:13,189 --> 00:07:15,469
you can apply a freighter as off null initially.

116
00:07:15,469 --> 00:07:17,389
I'm not going to apply a filter directly.

117
00:07:17,389 --> 00:07:22,049
I want to list all the volumes which are available in mind, but color, region.

118
00:07:22,120 --> 00:07:24,140
And one more thing here,

119
00:07:24,140 --> 00:07:26,299
they're using client dot describe volumes.

120
00:07:26,299 --> 00:07:29,719
But the client means in our case EC2 dot Klein Because we are creating

121
00:07:29,719 --> 00:07:34,024
a client object from a session, right? That's fine.

122
00:07:34,024 --> 00:07:37,080
Now let me print directly.

123
00:07:37,080 --> 00:07:39,924
I want to use P print,

124
00:07:39,924 --> 00:07:43,240
print your EC2 underscore,

125
00:07:43,240 --> 00:07:47,480
client dot describe volumes.

126
00:07:48,060 --> 00:07:53,569
That check. Ok, let me run and see the output.

127
00:07:56,130 --> 00:08:00,189
Let me provide a excretion permissions for this.

128
00:08:00,189 --> 00:08:02,360
Now I'm going to run it.

129
00:08:02,430 --> 00:08:05,979
We print what syntax?

130
00:08:05,979 --> 00:08:09,234
We print needs parenthesis.

131
00:08:09,234 --> 00:08:12,890
It's like a python three statement.

132
00:08:14,520 --> 00:08:19,440
See that you're going to get your output nuclear format.

133
00:08:19,440 --> 00:08:22,309
And if you observe the output, right,

134
00:08:22,309 --> 00:08:25,130
this is response later and the status is

135
00:08:25,130 --> 00:08:29,164
200 success our query has been executed successfully.

136
00:08:29,164 --> 00:08:31,805
Now under volumes, right?

137
00:08:31,805 --> 00:08:36,034
See that this is a list of values and new consists of,

138
00:08:36,034 --> 00:08:40,729
this is for one is volume ID and this is for one more volume IT anyway,

139
00:08:40,729 --> 00:08:44,210
as of now you have only two volumes as well.

140
00:08:44,210 --> 00:08:45,439
You are getting only two volumes.

141
00:08:45,439 --> 00:08:47,570
You've held some number of volumes.

142
00:08:47,570 --> 00:08:49,294
You will get all the volumes here.

143
00:08:49,294 --> 00:08:50,479
Right.

144
00:08:50,479 --> 00:08:55,039
Let me open you are I don't want to get response data.

145
00:08:55,039 --> 00:08:56,570
I need that at low volumes.

146
00:08:56,570 --> 00:09:01,654
That's why I'm picking a key called That's it.

147
00:09:01,654 --> 00:09:03,484
From your described volumes.

148
00:09:03,484 --> 00:09:05,869
I am getting the information for this only volumes

149
00:09:05,869 --> 00:09:08,479
that's certainly key called volumes right?

150
00:09:08,479 --> 00:09:10,580
Now let me run and see the output now.

151
00:09:10,580 --> 00:09:12,994
Now you are getting your output only four volumes.

152
00:09:12,994 --> 00:09:15,710
And that too is a list.

153
00:09:15,710 --> 00:09:16,714
A list.

154
00:09:16,714 --> 00:09:21,749
A list consist of two dictionaries because you have two volumes.

155
00:09:21,760 --> 00:09:23,300
Right?

156
00:09:23,300 --> 00:09:25,819
Now. First of all, I want to separate these

157
00:09:25,819 --> 00:09:29,645
one-by-one volume information by using for loop.

158
00:09:29,645 --> 00:09:40,470
That's why c I am taking for each volume in this.

159
00:09:40,960 --> 00:09:50,269
Let me print here also just use P print so that the output will be clear. That's it.

160
00:09:50,269 --> 00:09:52,309
Now let me run this and see the output.

161
00:09:52,309 --> 00:09:54,260
I need to collect one-by-one.

162
00:09:54,260 --> 00:09:58,445
Yes, no, you are getting this as one value and this has one value.

163
00:09:58,445 --> 00:10:00,409
But in this what you need volume ID.

164
00:10:00,409 --> 00:10:04,340
That's why what I am doing is I don't want to print the entire informations.

165
00:10:04,340 --> 00:10:05,959
Nbi need volume ID.

166
00:10:05,959 --> 00:10:13,939
So you can use either get or like square brackets you were key name.

167
00:10:13,939 --> 00:10:23,884
Anyone be fine. Let me save it and run it and see the output. What you are going to get.

168
00:10:23,884 --> 00:10:28,055
Oh, I have taken dot that is for not get.

169
00:10:28,055 --> 00:10:35,045
That's fine. Yes. We are getting two volumes IDs.

170
00:10:35,045 --> 00:10:35,809
Right.

171
00:10:35,809 --> 00:10:37,849
But the thing is yeah,

172
00:10:37,849 --> 00:10:39,439
you are collecting your volume IDs,

173
00:10:39,439 --> 00:10:42,574
but I want to store all volume IDs into one variable.

174
00:10:42,574 --> 00:10:46,640
And I'm going to take one list for two story.

175
00:10:46,640 --> 00:10:47,810
We're all volumes.

176
00:10:47,810 --> 00:10:52,054
So list of volume it is equals to.

177
00:10:52,054 --> 00:10:54,365
Now instead of printing each time,

178
00:10:54,365 --> 00:10:59,540
what I'm doing is I'm going to append this so

179
00:10:59,540 --> 00:11:05,659
that I can use this list of volume ids while taking snapshots.

180
00:11:05,659 --> 00:11:08,810
That's it. Softer completion of for loop,

181
00:11:08,810 --> 00:11:18,540
I'm going to print the list of volume ID saw. Right?

182
00:11:19,450 --> 00:11:21,139
That's it.

183
00:11:21,139 --> 00:11:24,839
Now let me save it and run it and see the output.

184
00:11:25,030 --> 00:11:28,879
Yes, you're able to get to volume might is right?

185
00:11:28,879 --> 00:11:30,544
But as of now we are collecting

186
00:11:30,544 --> 00:11:33,724
all the volume IDs which are there in your particular region,

187
00:11:33,724 --> 00:11:36,380
but based on requirement in anti collected, suppose,

188
00:11:36,380 --> 00:11:42,304
let's say or for one of the volume ID I'm going to change tags into,

189
00:11:42,304 --> 00:11:47,750
instead of fraud, I am going to continue to assert some dope, right?

190
00:11:47,750 --> 00:11:49,084
But if I run this script,

191
00:11:49,084 --> 00:11:51,949
it is going to collect again all volume IDs.

192
00:11:51,949 --> 00:11:55,504
But I need only prod volume might is, right?

193
00:11:55,504 --> 00:11:58,040
That's what you need to apply a filter here.

194
00:11:58,040 --> 00:12:01,550
Let me create a filter first.

195
00:12:01,550 --> 00:12:03,349
So my filter is like, you know,

196
00:12:03,349 --> 00:12:06,590
filter for backup, prod backup,

197
00:12:06,590 --> 00:12:09,065
Let me take broad backup.

198
00:12:09,065 --> 00:12:16,009
So this is like dictionary format and it is consist of name as a fixed r1 as one key.

199
00:12:16,009 --> 00:12:20,344
And you had to provide some name here and values.

200
00:12:20,344 --> 00:12:22,294
As a fixed key again,

201
00:12:22,294 --> 00:12:29,420
it consists of some list of values Now based on tag and that two key as proud.

202
00:12:29,420 --> 00:12:30,860
And for that key,

203
00:12:30,860 --> 00:12:33,530
what are the values you are going to take backup.

204
00:12:33,530 --> 00:12:35,224
So based on this backup, right?

205
00:12:35,224 --> 00:12:37,444
If I have a backup and if I have a product here,

206
00:12:37,444 --> 00:12:41,254
then only I want to get the volume might is right.

207
00:12:41,254 --> 00:12:46,979
So back-up or sometimes even write capital B.

208
00:12:47,140 --> 00:12:51,544
Anyone of that, it may consist of either this one or this one.

209
00:12:51,544 --> 00:12:52,400
Right?

210
00:12:52,400 --> 00:12:57,125
Now, you created a filter called filter for prod backup.

211
00:12:57,125 --> 00:13:01,265
Now that filter you how to apply while describing your volumes.

212
00:13:01,265 --> 00:13:02,540
If you observe here,

213
00:13:02,540 --> 00:13:05,945
describe volumes, you have a freighter option here, right?

214
00:13:05,945 --> 00:13:10,069
So this is nothing but we created filter for broad backup.

215
00:13:10,069 --> 00:13:13,129
This is one variable outtake and now just try to apply

216
00:13:13,129 --> 00:13:16,565
your filters equals two list of filters you can apply.

217
00:13:16,565 --> 00:13:23,609
As of now we have only one filter that is fritter, broad backup.

218
00:13:23,920 --> 00:13:26,824
Now let me run and see the output.

219
00:13:26,824 --> 00:13:30,469
Now we are going to get only one volume ID because only for

220
00:13:30,469 --> 00:13:35,645
this Yao Qi as broad and value as backup CF, right?

221
00:13:35,645 --> 00:13:38,075
Just to see if that is first one.

222
00:13:38,075 --> 00:13:40,054
See for this only how?

223
00:13:40,054 --> 00:13:44,765
Now? So just assume that I have.

224
00:13:44,765 --> 00:13:49,534
This also like products because I need to take at least two volumes to work.

225
00:13:49,534 --> 00:13:55,969
Now I changed for both volumes or how a key as broad and volume values as backup.

226
00:13:55,969 --> 00:13:59,000
That's why you're going to get to volume ID's.

227
00:13:59,000 --> 00:14:04,714
That's fine. So there is whatever the code we write.

228
00:14:04,714 --> 00:14:09,529
So you're using client object whenever you are using client opposite,

229
00:14:09,529 --> 00:14:12,514
if you go with the stride forward in this format,

230
00:14:12,514 --> 00:14:15,515
I'm Describe your volumes, right?

231
00:14:15,515 --> 00:14:19,399
It is going to fetch because this is a query, right?

232
00:14:19,399 --> 00:14:23,344
It is going to get only MAC, so 50 results.

233
00:14:23,344 --> 00:14:26,780
So if you have suppose volume arrays which are there more than 50 in

234
00:14:26,780 --> 00:14:30,769
your particular region than the straight forward way is not correct.

235
00:14:30,769 --> 00:14:35,209
While implementing your core with client object that to only four queries this query,

236
00:14:35,209 --> 00:14:38,494
no, you are going to get number of volume IDs query.

237
00:14:38,494 --> 00:14:40,594
So at that time, right?

238
00:14:40,594 --> 00:14:42,245
If you have less than 50 volumes,

239
00:14:42,245 --> 00:14:46,490
this is perfectly work, right?

240
00:14:46,490 --> 00:14:49,969
Less than 50 volume IDs in your particular region,

241
00:14:49,969 --> 00:14:52,040
this will work perfectly.

242
00:14:52,040 --> 00:14:54,979
But if you have more than 50 results,

243
00:14:54,979 --> 00:14:58,100
50 volume IDs in your Butler region, the core,

244
00:14:58,100 --> 00:15:02,300
whatever you are running that you may not fix all that may not fetch

245
00:15:02,300 --> 00:15:06,859
all you were volume IDs at that time you had to use pollinators, right?

246
00:15:06,859 --> 00:15:09,029
Just come back.

247
00:15:09,340 --> 00:15:11,724
See here we have paginated.

248
00:15:11,724 --> 00:15:20,389
So guys, resonators are only applicable for your client object, right?

249
00:15:20,389 --> 00:15:26,915
So you already we have discussed in detail with your resonators in your records, right.

250
00:15:26,915 --> 00:15:29,400
Let me open that also once.

251
00:15:39,570 --> 00:15:42,354
So let me open this and I will show you that.

252
00:15:42,354 --> 00:15:43,930
So about resonators.

253
00:15:43,930 --> 00:15:47,214
So if you are able to apply biogenetics For any one of those surveys,

254
00:15:47,214 --> 00:15:49,674
then that is common for all the services.

255
00:15:49,674 --> 00:15:53,320
Just come down somewhere we discuss in a boat.

256
00:15:53,320 --> 00:15:56,479
Past senators.

257
00:15:57,870 --> 00:16:00,730
Yeah. Fascinate us off moto three.

258
00:16:00,730 --> 00:16:02,559
Okay. Just remember this is just to go through

259
00:16:02,559 --> 00:16:05,454
this before proceeding with this script, right?

260
00:16:05,454 --> 00:16:10,284
Then come back and I can understand how to use past senators, right?

261
00:16:10,284 --> 00:16:15,244
So for time being, what I am doing is I'm going to comment your code fast,

262
00:16:15,244 --> 00:16:16,624
whatever the core we are having.

263
00:16:16,624 --> 00:16:21,395
But anyway, filter I need just simply these two lines of code. I am going to come in.

264
00:16:21,395 --> 00:16:24,110
Then first I'm going to create a paginated creation of

265
00:16:24,110 --> 00:16:27,259
pies net is nothing but what is your required operation?

266
00:16:27,259 --> 00:16:29,540
Your first year selecting year past senators,

267
00:16:29,540 --> 00:16:31,204
then you are entering into this page.

268
00:16:31,204 --> 00:16:33,035
So what is your required operation?

269
00:16:33,035 --> 00:16:35,359
Describe volumes, right. Just up there.

270
00:16:35,359 --> 00:16:37,280
Yes, I'm very how volumes.

271
00:16:37,280 --> 00:16:40,325
So whatever the query you with your normal object,

272
00:16:40,325 --> 00:16:44,509
same query will be there even in your past Senator under your clients.

273
00:16:44,509 --> 00:16:47,840
So describe volumes, right?

274
00:16:47,840 --> 00:16:51,020
See such you how to create a resonator in this fate?

275
00:16:51,020 --> 00:16:52,970
Just copy and paste it.

276
00:16:52,970 --> 00:16:55,129
Resonator, right.

277
00:16:55,129 --> 00:16:58,039
In our case, client is nothing but easy to underscore.

278
00:16:58,039 --> 00:16:59,869
Client. We're not taking as a client,

279
00:16:59,869 --> 00:17:02,660
we are taking another EC2 client, right?

280
00:17:02,660 --> 00:17:05,780
So from this passage to paginate,

281
00:17:05,780 --> 00:17:08,780
right, let me select a resonator.

282
00:17:08,780 --> 00:17:11,734
Resonate the mean, get page by page.

283
00:17:11,734 --> 00:17:15,380
And here you don't want to get all the alumina is.

284
00:17:15,380 --> 00:17:17,225
That's why again, just apply your filters.

285
00:17:17,225 --> 00:17:18,620
Simply copy and paste here,

286
00:17:18,620 --> 00:17:20,180
whatever we have already,

287
00:17:20,180 --> 00:17:23,689
we help us here. Right?

288
00:17:23,689 --> 00:17:25,505
That's it.

289
00:17:25,505 --> 00:17:30,515
Now let me print this object and see the output.

290
00:17:30,515 --> 00:17:33,930
So as of now your list of volumes are empty.

291
00:17:35,380 --> 00:17:40,430
So you are getting paginated 0.5x net as the object.

292
00:17:40,430 --> 00:17:44,120
So based on volumes you will get number of pages.

293
00:17:44,120 --> 00:17:47,854
So whatever the object you create dead, right?

294
00:17:47,854 --> 00:17:50,314
This paginated consists of number of pages,

295
00:17:50,314 --> 00:17:53,810
but it depends on number of volumes which are having in your account.

296
00:17:53,810 --> 00:17:57,020
That's why you just tried to collect page by page.

297
00:17:57,020 --> 00:18:04,909
So that's why I'm going to take four loop for this pass senator,

298
00:18:04,909 --> 00:18:10,805
for each page in this let me printed that page.

299
00:18:10,805 --> 00:18:12,425
I'm going to use P print.

300
00:18:12,425 --> 00:18:15,859
So if you have, suppose more than 50 volume IDs

301
00:18:15,859 --> 00:18:18,889
with this broad as a key and value as a backup,

302
00:18:18,889 --> 00:18:21,995
then you will get two pages.

303
00:18:21,995 --> 00:18:23,149
If you have more than a 100,

304
00:18:23,149 --> 00:18:25,564
you'll get three bridges, right?

305
00:18:25,564 --> 00:18:27,080
So up to less than or equal to a 100,

306
00:18:27,080 --> 00:18:28,144
you'll get two pages,

307
00:18:28,144 --> 00:18:29,870
but we have only two,

308
00:18:29,870 --> 00:18:31,790
or you might is right further,

309
00:18:31,790 --> 00:18:32,900
this code will work.

310
00:18:32,900 --> 00:18:34,925
And anyway, this code is work for all.

311
00:18:34,925 --> 00:18:39,900
If you have any number of volume mighty smite, let me pre-print.

312
00:18:39,940 --> 00:18:44,734
We're each page.

313
00:18:44,734 --> 00:18:53,329
So each fish, just observe the output. Right?

314
00:18:53,329 --> 00:18:54,500
You're getting your volumes,

315
00:18:54,500 --> 00:18:56,789
but I need only volumes, right?

316
00:19:00,610 --> 00:19:04,085
So here's while applying your packet headers,

317
00:19:04,085 --> 00:19:07,744
right, you are going to get one more extra loop.

318
00:19:07,744 --> 00:19:08,764
Right?

319
00:19:08,764 --> 00:19:10,354
You have to get first page by page.

320
00:19:10,354 --> 00:19:12,500
Now you are having in your inner hand one-page.

321
00:19:12,500 --> 00:19:13,745
So from that page,

322
00:19:13,745 --> 00:19:16,560
I'm collecting like this volumes.

323
00:19:17,200 --> 00:19:19,805
Right now, see the output.

324
00:19:19,805 --> 00:19:22,880
I have taken a key called volumes. Now see the output.

325
00:19:22,880 --> 00:19:25,939
They are getting List of volumes, right?

326
00:19:25,939 --> 00:19:29,629
I think is there whenever, if you include pass monitors you need in it include

327
00:19:29,629 --> 00:19:33,650
one more extra loop to iterate page by page.

328
00:19:33,650 --> 00:19:44,609
That's why c here for H volume in this each page of volume IDs, right?

329
00:19:44,950 --> 00:19:50,014
Then simply, I don't want to print holiday have a logic.

330
00:19:50,014 --> 00:19:53,239
So in a previous video we have seen in previous logic,

331
00:19:53,239 --> 00:19:55,040
whatever the logic you have, same logic.

332
00:19:55,040 --> 00:19:56,539
List of volume IDs,

333
00:19:56,539 --> 00:19:58,639
dot append each volume.

334
00:19:58,639 --> 00:20:03,569
That's it. Now let me save it and run it.

335
00:20:04,620 --> 00:20:08,185
That's it. You're able to get your volume IDs.

336
00:20:08,185 --> 00:20:09,624
So base as of no,

337
00:20:09,624 --> 00:20:12,099
in my Argonne to how only two volume Murray's,

338
00:20:12,099 --> 00:20:14,274
that's why even normal stride forward,

339
00:20:14,274 --> 00:20:16,810
whatever the code how to describe your option,

340
00:20:16,810 --> 00:20:18,535
that core will also work.

341
00:20:18,535 --> 00:20:24,144
But whenever if you are more than 50 results for your requirement,

342
00:20:24,144 --> 00:20:27,490
then you may not get all your 50 volume IDs

343
00:20:27,490 --> 00:20:31,600
using your straightforward method of your client object.

344
00:20:31,600 --> 00:20:35,739
That's why you had to create the Appassionata paginated will_paginate page by page.

345
00:20:35,739 --> 00:20:38,649
And each base consists of 50 volume ID's.

346
00:20:38,649 --> 00:20:43,689
That's why I'm going to collect all of pages and from the dollar volume.

347
00:20:43,689 --> 00:20:44,890
That's it.

348
00:20:44,890 --> 00:20:47,995
Right now I will use this score.

349
00:20:47,995 --> 00:20:49,659
That's fine.

350
00:20:49,659 --> 00:20:54,820
Right now in your hand you how your list of volume IDs.

351
00:20:54,820 --> 00:20:57,370
Now I want to take a snapshot further.

352
00:20:57,370 --> 00:21:00,889
Just go into a client, right?

353
00:21:01,140 --> 00:21:03,895
So how to take a snapshot?

354
00:21:03,895 --> 00:21:06,684
So somebody how Create Snapshot option,

355
00:21:06,684 --> 00:21:08,515
you just go through that, right?

356
00:21:08,515 --> 00:21:14,799
Let me open that first. Create.

357
00:21:14,799 --> 00:21:15,820
Create.

358
00:21:15,820 --> 00:21:17,800
If you go with all the options so that you can come

359
00:21:17,800 --> 00:21:19,929
to know what is the required option, right?

360
00:21:19,929 --> 00:21:22,449
I have a creates snapshot here.

361
00:21:22,449 --> 00:21:24,864
Client.print snapshot.

362
00:21:24,864 --> 00:21:28,120
It's requires some descriptions on volume ID,

363
00:21:28,120 --> 00:21:30,254
some tags, specifications, right.

364
00:21:30,254 --> 00:21:31,999
And he had dried on whether you want to

365
00:21:31,999 --> 00:21:35,779
run before proceeding with actual runoff martin, Right?

366
00:21:35,779 --> 00:21:37,954
So I I don't want to use this.

367
00:21:37,954 --> 00:21:40,880
Let me open my script.

368
00:21:40,880 --> 00:21:45,049
So guys, I want to take one by one volume IID from this unfolded.

369
00:21:45,049 --> 00:21:49,339
I need to apply this because it's taking only one volume ID, right?

370
00:21:49,339 --> 00:21:53,554
See, first I will take your for loop for H.

371
00:21:53,554 --> 00:22:00,065
Volume ID in your list of volume might ease.

372
00:22:00,065 --> 00:22:03,139
And just I am writing some print statement

373
00:22:03,139 --> 00:22:09,109
taking slump of whatever the volume ID you are having currently.

374
00:22:09,109 --> 00:22:15,574
Not format each volume ID, right?

375
00:22:15,574 --> 00:22:18,860
So first I am going to run it without writing your logic,

376
00:22:18,860 --> 00:22:21,870
just check it, how it is going to work.

377
00:22:23,890 --> 00:22:28,385
See taking snap off this volume and taking snap up this volume.

378
00:22:28,385 --> 00:22:29,915
But to take that snap,

379
00:22:29,915 --> 00:22:32,359
you need to include a logic, right?

380
00:22:32,359 --> 00:22:35,809
So how I am going to include that logic is nothing but just

381
00:22:35,809 --> 00:22:43,174
observe that they are quaint dot creates snapshot, right?

382
00:22:43,174 --> 00:22:44,240
But in our case,

383
00:22:44,240 --> 00:22:47,839
the client is nothing but easy to underscore client

384
00:22:47,839 --> 00:22:52,309
because we are creating client as easy to underscore client, right?

385
00:22:52,309 --> 00:22:54,350
Create snapshot.

386
00:22:54,350 --> 00:22:56,944
And it is going to take some options, right?

387
00:22:56,944 --> 00:22:58,460
So description.

388
00:22:58,460 --> 00:23:00,575
So I want to write description, yes.

389
00:23:00,575 --> 00:23:03,214
So as of now we are running this code from local host.

390
00:23:03,214 --> 00:23:06,979
But later finally, we are going to schedule these through cron job.

391
00:23:06,979 --> 00:23:10,535
I mean, like a cron job using your lambda and CloudWatch.

392
00:23:10,535 --> 00:23:16,169
That's why taking snap

393
00:23:17,230 --> 00:23:24,724
with lambda and CloudWatch, that's it, right?

394
00:23:24,724 --> 00:23:29,615
That is one parameter we want to provide this Create Snapshot.

395
00:23:29,615 --> 00:23:31,805
Then second thing is volume ID.

396
00:23:31,805 --> 00:23:35,119
So you're taking your volumes IDs.

397
00:23:35,119 --> 00:23:37,504
With your four loop, right?

398
00:23:37,504 --> 00:23:41,119
So that's why what I am going to take is your volume IDs,

399
00:23:41,119 --> 00:23:44,030
they're already anywhere this variable.

400
00:23:44,030 --> 00:23:46,040
So for each iteration you are going to work with

401
00:23:46,040 --> 00:23:48,799
one volume by means for each iteration you are

402
00:23:48,799 --> 00:23:53,584
going to take a snapshot of one volume, then tag specifications.

403
00:23:53,584 --> 00:23:55,400
So if you want to include, you can include it.

404
00:23:55,400 --> 00:23:57,635
But yes, I want to include it.

405
00:23:57,635 --> 00:23:59,150
I will tell you what is the reason here,

406
00:23:59,150 --> 00:24:00,524
even if you can skip this part,

407
00:24:00,524 --> 00:24:03,919
no bomb and hear resource pipe.

408
00:24:03,919 --> 00:24:05,239
Yeah, anyway, does a dictionary,

409
00:24:05,239 --> 00:24:07,910
let me open that. Provide that dictionary.

410
00:24:07,910 --> 00:24:09,425
Then.

411
00:24:09,425 --> 00:24:12,199
The resource type, what you are going to take,

412
00:24:12,199 --> 00:24:13,985
you're going to take a snap, right?

413
00:24:13,985 --> 00:24:17,194
That's why you have to provide resource type as snap.

414
00:24:17,194 --> 00:24:18,575
Or getting confusion.

415
00:24:18,575 --> 00:24:22,295
Here you will see somewhere you are resource type snap.

416
00:24:22,295 --> 00:24:26,280
Just go to last, right.

417
00:24:26,800 --> 00:24:30,260
Snap, right, let me just come back.

418
00:24:30,260 --> 00:24:32,134
Snapshot.

419
00:24:32,134 --> 00:24:36,590
Right? You're going to take a snapshot that's where it says type is Snapshot.

420
00:24:36,590 --> 00:24:37,834
That's fine.

421
00:24:37,834 --> 00:24:45,454
Then you need to provide some tags if you want.

422
00:24:45,454 --> 00:24:46,520
If you want, right?

423
00:24:46,520 --> 00:24:48,394
Yes. I want to provide it tags.

424
00:24:48,394 --> 00:24:49,310
That's why.

425
00:24:49,310 --> 00:24:51,410
Yes, I'm going to do that.

426
00:24:51,410 --> 00:24:53,104
Tags like, you know,

427
00:24:53,104 --> 00:25:01,075
key as suppose

428
00:25:01,075 --> 00:25:06,204
I am taking key.

429
00:25:06,204 --> 00:25:08,514
So what is my key means?

430
00:25:08,514 --> 00:25:13,599
Delete on because see the allele or taking snapshots, right?

431
00:25:13,599 --> 00:25:15,760
So if you keep on tick,

432
00:25:15,760 --> 00:25:17,619
you are going to increase number of volumes.

433
00:25:17,619 --> 00:25:19,584
I mean, snapshot for your volumes.

434
00:25:19,584 --> 00:25:24,235
So I had to take snapshot today and this snapshot I want to delete after 90 days.

435
00:25:24,235 --> 00:25:29,799
That's why after 90 days to identify my snapshot, right?

436
00:25:29,799 --> 00:25:35,540
Just I am giving here delete on as a key.

437
00:25:36,870 --> 00:25:40,644
But you can follow any tax.

438
00:25:40,644 --> 00:25:49,100
But I'm taking for my continence This next value.

439
00:25:49,100 --> 00:25:52,099
So what is the value you want to provide, right?

440
00:25:52,099 --> 00:25:53,930
So after 90 days I wanted delegate.

441
00:25:53,930 --> 00:25:55,789
So guys, whether it is a number or string,

442
00:25:55,789 --> 00:25:58,879
you have to provide as a string only tags are always strings.

443
00:25:58,879 --> 00:26:04,160
So now, see everyday I will run some one more script and through

444
00:26:04,160 --> 00:26:09,665
which I will find out the snapshot which are A's within 90 days.

445
00:26:09,665 --> 00:26:14,510
And if it is having a tag as Delete on 90, then I will delete it.

446
00:26:14,510 --> 00:26:17,330
So there's these tags are for other purpose,

447
00:26:17,330 --> 00:26:19,414
smart for this strip, right?

448
00:26:19,414 --> 00:26:22,340
So I want write one more step through which I won't delete the snapshot

449
00:26:22,340 --> 00:26:25,324
which are aged within 90 days or more than 90 days.

450
00:26:25,324 --> 00:26:27,874
So for that I am giving it tags as this one.

451
00:26:27,874 --> 00:26:30,079
But for time being, if you want to provide any,

452
00:26:30,079 --> 00:26:32,359
any type of tag, you can provide it.

453
00:26:32,359 --> 00:26:35,999
Right now close with the work.

454
00:26:37,810 --> 00:26:40,775
So this is for tags.

455
00:26:40,775 --> 00:26:46,880
Then tag specification close with dictionary format.

456
00:26:46,880 --> 00:26:52,400
Then you How? A list.

457
00:26:52,400 --> 00:26:56,090
Then you have parenthesis. That's it.

458
00:26:56,090 --> 00:26:57,694
Now you close, right?

459
00:26:57,694 --> 00:26:59,690
Now. Let me run the code.

460
00:26:59,690 --> 00:27:03,875
And before going to run just to go to your account and go to snaps.

461
00:27:03,875 --> 00:27:06,349
As often you don't have any snaps, right?

462
00:27:06,349 --> 00:27:07,669
That one by me.

463
00:27:07,669 --> 00:27:12,500
Not for all right. Not for our republic snaps. Let me run this.

464
00:27:12,500 --> 00:27:13,609
Yeah.

465
00:27:13,609 --> 00:27:15,964
See. Let me refresh it.

466
00:27:15,964 --> 00:27:18,590
So one computer one is pending.

467
00:27:18,590 --> 00:27:21,199
So of course you have taken your snapshot honest, you skipped,

468
00:27:21,199 --> 00:27:24,214
came out, but still you are taking a snapshot.

469
00:27:24,214 --> 00:27:26,119
Snapshot is not completed.

470
00:27:26,119 --> 00:27:29,720
So whatever the core you implemented, that is perfect.

471
00:27:29,720 --> 00:27:37,070
But the problem is with your queries exiting without completion of your snapshot, right?

472
00:27:37,070 --> 00:27:39,155
It's still in pending, right?

473
00:27:39,155 --> 00:27:45,094
Anyway, you can take some time and it will complete it. Right.

474
00:27:45,094 --> 00:27:49,625
But my requirement is until the snap is completed,

475
00:27:49,625 --> 00:27:54,844
your skipped should not exit the skip as to wait, right?

476
00:27:54,844 --> 00:27:57,979
For that, how you can include your logic.

477
00:27:57,979 --> 00:28:02,974
Right? So if you're going to get confused for further court, you can skip.

478
00:28:02,974 --> 00:28:05,089
But the good practices always,

479
00:28:05,089 --> 00:28:07,220
whenever if you are creating something,

480
00:28:07,220 --> 00:28:10,145
include waiters, That is a good practice.

481
00:28:10,145 --> 00:28:10,879
Right?

482
00:28:10,879 --> 00:28:14,779
So let me open in your or your client's sorry,

483
00:28:14,779 --> 00:28:16,939
your wages are there only for your client,

484
00:28:16,939 --> 00:28:19,520
but you can apply that CLI waiters even for

485
00:28:19,520 --> 00:28:23,549
your resource also know ballroom that may open waiters.

486
00:28:31,390 --> 00:28:36,080
So you have very does know these waiters sore for actually client.

487
00:28:36,080 --> 00:28:37,144
Right?

488
00:28:37,144 --> 00:28:40,010
You can apply this waders even for your resource also.

489
00:28:40,010 --> 00:28:42,365
So in next article,

490
00:28:42,365 --> 00:28:46,279
I will directly write a code by using your resources are the same procedure.

491
00:28:46,279 --> 00:28:48,874
I will give you a quote, right?

492
00:28:48,874 --> 00:28:51,800
You can go through that so that you can understand, yes,

493
00:28:51,800 --> 00:28:54,845
I am going to apply wages for that anyway.

494
00:28:54,845 --> 00:28:59,249
So what is the requirement? I need?

495
00:28:59,410 --> 00:29:02,389
Snap is completed, right?

496
00:29:02,389 --> 00:29:07,054
Just to go snap shot completed. Just observe here.

497
00:29:07,054 --> 00:29:11,600
First you have to create a waiter using your client, that straightforward syntax.

498
00:29:11,600 --> 00:29:14,705
Then simply you have to include waiter dot weight.

499
00:29:14,705 --> 00:29:17,090
But here you don't want to filters.

500
00:29:17,090 --> 00:29:19,429
You need just to provide you are

501
00:29:19,429 --> 00:29:25,820
snapshot IDs so that it will wait up to that snapshot is completed.

502
00:29:25,820 --> 00:29:27,395
Let me go with that.

503
00:29:27,395 --> 00:29:29,870
And before going to with this waiters,

504
00:29:29,870 --> 00:29:32,659
see guys, these waiters includes a either filters.

505
00:29:32,659 --> 00:29:38,029
I mean, you can provide either filters and even one or IDs or snapshot IDs.

506
00:29:38,029 --> 00:29:39,620
But in our case you, anyway,

507
00:29:39,620 --> 00:29:41,884
you are taking snapshots from this, right?

508
00:29:41,884 --> 00:29:45,334
So this is just simply are taken one syntax, right?

509
00:29:45,334 --> 00:29:50,329
So from this you can also capture the response, right?

510
00:29:50,329 --> 00:29:51,740
Let me, So what,

511
00:29:51,740 --> 00:29:54,275
what is the use of taking a response from here means?

512
00:29:54,275 --> 00:29:57,664
See my waiter needs some snapshot IDs.

513
00:29:57,664 --> 00:29:59,870
So if a province snapshot IDs,

514
00:29:59,870 --> 00:30:01,744
your waiter will wait up to.

515
00:30:01,744 --> 00:30:05,149
Sf snapshot is computed for this snapshot ID's.

516
00:30:05,149 --> 00:30:13,009
That's why now it's time to story were response simply I am taking a response, right?

517
00:30:13,009 --> 00:30:16,654
So often accompanies no fewer each and every.

518
00:30:16,654 --> 00:30:18,575
I mean, after taking,

519
00:30:18,575 --> 00:30:22,220
not completion, often running creates snapshot, right?

520
00:30:22,220 --> 00:30:25,250
Simply I'm printing, let me print

521
00:30:25,250 --> 00:30:29,765
so that you can see where you are going to get your snap ID.

522
00:30:29,765 --> 00:30:31,910
So I'm printing response. All right.

523
00:30:31,910 --> 00:30:33,800
Let me check for indentation.

524
00:30:33,800 --> 00:30:41,120
123412345

525
00:30:41,120 --> 00:30:42,784
See as of now,

526
00:30:42,784 --> 00:30:45,289
you how to snap shots.

527
00:30:45,289 --> 00:30:48,515
Right? Now I am going to run your code once again.

528
00:30:48,515 --> 00:30:53,794
Right? See, observe the output taking snap off this.

529
00:30:53,794 --> 00:30:55,459
And if you observe the output,

530
00:30:55,459 --> 00:30:57,470
some very how snapshot ID.

531
00:30:57,470 --> 00:30:58,159
Right?

532
00:30:58,159 --> 00:31:02,704
Now, that's why what I am doing is I need to collect Actually that snaps.

533
00:31:02,704 --> 00:31:09,620
That's why print your response

534
00:31:09,620 --> 00:31:13,430
dot get or you can use square brackets,

535
00:31:13,430 --> 00:31:15,709
then you can write your key.

536
00:31:15,709 --> 00:31:19,190
I'm in. This way is also ok,

537
00:31:19,190 --> 00:31:21,859
right, or dot github is also working.

538
00:31:21,859 --> 00:31:24,035
Now let me rerun anyway.

539
00:31:24,035 --> 00:31:26,539
We are going to get for now, right?

540
00:31:26,539 --> 00:31:31,685
That's fine. Now from this we have taken snap ID.

541
00:31:31,685 --> 00:31:32,554
Yeah, fine.

542
00:31:32,554 --> 00:31:34,925
Now I am going to run once again.

543
00:31:34,925 --> 00:31:38,329
I'll see the output. You're able to collect your snap IDs.

544
00:31:38,329 --> 00:31:42,690
Right? Now I'm going to store this snap IDs into.

545
00:31:43,150 --> 00:31:47,659
Now you have six just after that, right?

546
00:31:47,659 --> 00:31:49,234
That's fine.

547
00:31:49,234 --> 00:31:51,364
Now before going to start,

548
00:31:51,364 --> 00:31:53,660
our for loop could take snap for one-by-one.

549
00:31:53,660 --> 00:31:55,460
I'm taking snaps.

550
00:31:55,460 --> 00:31:59,240
Snap ID is equals to some list, empty list.

551
00:31:59,240 --> 00:32:03,650
And simply anyway, I'm displaying, but instead of displaying,

552
00:32:03,650 --> 00:32:10,684
what I will do is snap ID's.

553
00:32:10,684 --> 00:32:12,080
That's it.

554
00:32:12,080 --> 00:32:22,759
Right after completion of your for loop just I'm printing the snap IDs or snap IDs.

555
00:32:22,759 --> 00:32:25,429
So still you are not including your waiters.

556
00:32:25,429 --> 00:32:28,399
So just now you collected your snapshot IDs for

557
00:32:28,399 --> 00:32:32,329
which the volumes for which you are going to take a snapshot.

558
00:32:32,329 --> 00:32:35,090
Now in your handy how snapshot IDs?

559
00:32:35,090 --> 00:32:36,409
Right?

560
00:32:36,409 --> 00:32:38,870
That's fine. No, you need to include a waiter.

561
00:32:38,870 --> 00:32:40,505
So to include your waiter,

562
00:32:40,505 --> 00:32:42,455
first thing you have to create a waiter,

563
00:32:42,455 --> 00:32:44,285
right? Where is it?

564
00:32:44,285 --> 00:32:47,775
Yeah, simply waiter equals two.

565
00:32:47,775 --> 00:32:49,750
It's very simple guys.

566
00:32:49,750 --> 00:32:54,220
You no need to worry about this much. It's very simple.

567
00:32:54,220 --> 00:32:57,054
So snap shot completed because

568
00:32:57,054 --> 00:33:00,729
after completion of your snapshot to exit from your script.

569
00:33:00,729 --> 00:33:06,385
So client, EC2 underscore client is our object.

570
00:33:06,385 --> 00:33:09,355
Let's say now you created a waiter.

571
00:33:09,355 --> 00:33:11,829
Now you have to apply that waiter to apply that waiter,

572
00:33:11,829 --> 00:33:14,779
you, How do you simply wait up, not wait.

573
00:33:15,690 --> 00:33:17,184
Right?

574
00:33:17,184 --> 00:33:22,345
Then you can go with either filters, right?

575
00:33:22,345 --> 00:33:25,479
Or you were Warner IDs or snapshot IDs.

576
00:33:25,479 --> 00:33:27,610
So snapshot id say list of snapshot.

577
00:33:27,610 --> 00:33:30,345
It IS already we stored our snaps.

578
00:33:30,345 --> 00:33:38,809
Right? In a variable costs are in a dictionary called Stamp IDs, right?

579
00:33:38,809 --> 00:33:40,204
This is a list on the right.

580
00:33:40,204 --> 00:33:42,499
But inside that list string and us naturally,

581
00:33:42,499 --> 00:33:44,929
ID is a list to sorry, string only.

582
00:33:44,929 --> 00:33:45,740
That's it.

583
00:33:45,740 --> 00:33:47,780
Now after this you can write,

584
00:33:47,780 --> 00:33:57,695
write successfully completed snaps

585
00:33:57,695 --> 00:34:00,899
for the volumes of.

586
00:34:05,200 --> 00:34:08,345
So anyway, how some variable volume might is right,

587
00:34:08,345 --> 00:34:16,420
let me take it where you are amending your volume IDs.

588
00:34:16,420 --> 00:34:18,954
List of volume IDs, right?

589
00:34:18,954 --> 00:34:20,095
That's it.

590
00:34:20,095 --> 00:34:21,670
So now if I run our script,

591
00:34:21,670 --> 00:34:24,264
no, it won't exit immediately.

592
00:34:24,264 --> 00:34:28,360
See previously whenever if you are running yours could be is going to exit immediately,

593
00:34:28,360 --> 00:34:30,985
but it won't exit immediately.

594
00:34:30,985 --> 00:34:32,410
So first let me do one thing.

595
00:34:32,410 --> 00:34:33,910
I'm going to delete all the volumes,

596
00:34:33,910 --> 00:34:35,245
so one by me, sorry,

597
00:34:35,245 --> 00:34:37,909
snapshot won't buy me.

598
00:34:38,220 --> 00:34:42,099
Fine. Now if I run this script, right,

599
00:34:42,099 --> 00:34:50,599
see, okay, somewhere, list of duties not callable snapshot tidies.

600
00:34:56,460 --> 00:35:04,640
What happened on second snapshot IS diaper list object is not callable,

601
00:35:20,760 --> 00:35:25,009
easier to client.connect Vedas.

602
00:35:25,140 --> 00:35:34,089
And this is the core part,

603
00:35:34,089 --> 00:35:36,649
didn't eight line number, right?

604
00:36:01,240 --> 00:36:05,849
This is OK. Snap, snap.

605
00:36:09,100 --> 00:36:11,825
Snap shot, right is dot,

606
00:36:11,825 --> 00:36:15,510
dot get snapshot ID.

607
00:36:16,840 --> 00:36:20,809
List object is not callable.

608
00:36:20,809 --> 00:36:24,755
So taking this is a dictionary, right?

609
00:36:24,755 --> 00:36:30,089
Dictionary in that one of the keys snapshot ID.

610
00:36:33,760 --> 00:36:37,144
Okay, let me try once again.

611
00:36:37,144 --> 00:36:40,620
Is the syntax problem here.

612
00:36:44,470 --> 00:36:53,300
Oh, sorry, I didn't do append operation that my mistake.

613
00:36:53,300 --> 00:36:57,154
So I need to append one by one snapshot ID, right?

614
00:36:57,154 --> 00:36:58,684
Ok.

615
00:36:58,684 --> 00:37:00,980
Snapshot dot append.

616
00:37:00,980 --> 00:37:02,700
That's fine.

617
00:37:03,370 --> 00:37:06,859
Right now let me save it and done it.

618
00:37:06,859 --> 00:37:09,830
So before that, yeah, we are run right?

619
00:37:09,830 --> 00:37:12,109
Let me delete these two.

620
00:37:12,109 --> 00:37:14,389
Even though if you keep no problem,

621
00:37:14,389 --> 00:37:16,205
just I want to delete it.

622
00:37:16,205 --> 00:37:19,039
Now I'm going to run, see the output.

623
00:37:19,039 --> 00:37:23,780
So these thus snapshot ids you're taking right now if you observe here,

624
00:37:23,780 --> 00:37:25,729
yes, you are going to get those two snapshot,

625
00:37:25,729 --> 00:37:27,574
but it is still in pending status.

626
00:37:27,574 --> 00:37:29,435
That's why you're CPS waiting.

627
00:37:29,435 --> 00:37:31,084
Once it is completed,

628
00:37:31,084 --> 00:37:34,160
then your stimulus will come out, right?

629
00:37:34,160 --> 00:37:39,124
So that is called a waiter concept to right inside of your scripts.

630
00:37:39,124 --> 00:37:43,429
So there you have to use waiters whenever if you're creating something.

631
00:37:43,429 --> 00:37:49,685
So if you want to wait until the required action is completed at that time,

632
00:37:49,685 --> 00:37:53,180
you can include your writers inside of your skipped, right?

633
00:37:53,180 --> 00:37:57,394
You can use wages for any creation, right?

634
00:37:57,394 --> 00:38:01,909
The, remember that waiters and clients or their Servetus and passionate is,

635
00:38:01,909 --> 00:38:03,230
are there with your client.

636
00:38:03,230 --> 00:38:07,624
And anyway, pollinators are applicable only for your client, but waiters.

637
00:38:07,624 --> 00:38:10,489
You can create waiter from client and you can apply that for

638
00:38:10,489 --> 00:38:13,310
even resource object also, right?

639
00:38:13,310 --> 00:38:18,845
Still it is taking your completed.

640
00:38:18,845 --> 00:38:21,200
Now your script will come out.

641
00:38:21,200 --> 00:38:23,420
Oh man, successfully comparators.

642
00:38:23,420 --> 00:38:25,940
Now for the volume at least off volume IDs attributed

643
00:38:25,940 --> 00:38:30,365
string object has no attribute list of volume iris.

644
00:38:30,365 --> 00:38:34,019
Ok, or script is working but somewhere.

645
00:38:34,120 --> 00:38:40,474
Line number 46. Oh man,

646
00:38:40,474 --> 00:38:42,935
I forgot to write dot format.

647
00:38:42,935 --> 00:38:45,900
Actually script is working perfectly correct.

648
00:38:46,120 --> 00:38:49,264
Okay, we'll check it once again.

649
00:38:49,264 --> 00:38:52,174
So I forgot to mention that format.

650
00:38:52,174 --> 00:38:55,264
That's it. Ok.

651
00:38:55,264 --> 00:38:57,170
Now observe that your script is waiting.

652
00:38:57,170 --> 00:38:59,059
Now if we refresh it.

653
00:38:59,059 --> 00:39:01,699
So it is waiting for this snapshot.

654
00:39:01,699 --> 00:39:04,594
Once it is done than you are, you come out.

655
00:39:04,594 --> 00:39:05,974
Otherwise you just wait here.

656
00:39:05,974 --> 00:39:07,610
Once if you are skipping is computed,

657
00:39:07,610 --> 00:39:12,589
then go and see in your console so that your snapshots are completed, right?

658
00:39:12,589 --> 00:39:17,390
So for that only we are including betas, right?

659
00:39:17,390 --> 00:39:19,609
So there is, as of now,

660
00:39:19,609 --> 00:39:22,355
what are the core we are working, right?

661
00:39:22,355 --> 00:39:25,234
That is, we are running on your local host.

662
00:39:25,234 --> 00:39:28,715
Now our next step is we want to keep this code in lambda

663
00:39:28,715 --> 00:39:32,299
and I want to schedule a job such that everyday morning,

664
00:39:32,299 --> 00:39:36,485
six AM, or evenings, 6pm, right?

665
00:39:36,485 --> 00:39:38,329
Whatever it may be based on your required time,

666
00:39:38,329 --> 00:39:40,475
it has to take a snapshot automatically.

667
00:39:40,475 --> 00:39:41,314
Yes.

668
00:39:41,314 --> 00:39:46,064
Or skip has been executed successfully just to go out and refresh it now completed.

669
00:39:46,064 --> 00:39:46,924
Right?

670
00:39:46,924 --> 00:39:48,529
So just I am deleting.

671
00:39:48,529 --> 00:39:52,954
I don't want to give the snapshots. Right?

672
00:39:52,954 --> 00:39:54,260
So this is the code.

673
00:39:54,260 --> 00:39:56,930
And remember that this code we are working with

674
00:39:56,930 --> 00:40:02,000
only 41 region using the score we are working with only 41 region, right?

675
00:40:02,000 --> 00:40:07,114
In next video, I will implement this code for multiple reasons.

676
00:40:07,114 --> 00:40:11,450
And one more thing, we are implementing these code using client object, right?

677
00:40:11,450 --> 00:40:16,835
So I will give a code using a resource object for the same purpose, okay?

678
00:40:16,835 --> 00:40:21,304
I will do it as an article I will include in our course so that you can go through that.

679
00:40:21,304 --> 00:40:27,425
So maybe I will include somewhere where we are rocking it snaps right.

680
00:40:27,425 --> 00:40:32,059
Yeah, so I will include some barrier or your script, you just go through that.

681
00:40:32,059 --> 00:40:34,249
Ok, fine.

682
00:40:34,249 --> 00:40:36,844
Now let me copy this entire core.

683
00:40:36,844 --> 00:40:42,995
Now I want to run this core automatically with a scheduled intervals.

684
00:40:42,995 --> 00:40:48,559
So you can do even as a con job on your local host like you know, you can schedule,

685
00:40:48,559 --> 00:40:54,679
see this clip I want to run suppose for every ten hours or for every two hours,

686
00:40:54,679 --> 00:40:57,964
or every day, morning sometime or app in a day,

687
00:40:57,964 --> 00:41:02,330
particular time you can scheduled even using your conjure up from your Linux box.

688
00:41:02,330 --> 00:41:06,139
But to schedule, right, you need a cron job.

689
00:41:06,139 --> 00:41:10,070
And again, you need a local host to run your script.

690
00:41:10,070 --> 00:41:15,394
But anyway, I mean finally you need to maintain some server to run your jobs.

691
00:41:15,394 --> 00:41:18,470
But I don't want to do that because already AWS is

692
00:41:18,470 --> 00:41:22,445
providing a lambda through which you can schedule your jobs.

693
00:41:22,445 --> 00:41:24,410
That's why what I'm doing is,

694
00:41:24,410 --> 00:41:30,949
so let me open lambdas service.

695
00:41:30,949 --> 00:41:32,165
Right?

696
00:41:32,165 --> 00:41:37,070
So here I am going to schedule my job.

697
00:41:37,070 --> 00:41:42,214
That means automatically, it will take a snapshot based on required intervals or time.

698
00:41:42,214 --> 00:41:44,015
So just click on Create Function.

699
00:41:44,015 --> 00:41:46,684
So guys, this is your lambda, right?

700
00:41:46,684 --> 00:41:50,030
So already we have seen some intellection part in our course.

701
00:41:50,030 --> 00:41:53,279
Now we are going to directly create function.

702
00:41:53,370 --> 00:41:56,514
So I want to build from scratch.

703
00:41:56,514 --> 00:42:05,364
So simply write automate snaps for EBS volumes.

704
00:42:05,364 --> 00:42:06,354
That's it.

705
00:42:06,354 --> 00:42:09,759
So I want to implement it with this code with Python low,

706
00:42:09,759 --> 00:42:11,634
I'm going to set Python 2.What amen.

707
00:42:11,634 --> 00:42:14,305
You can select different languages case, right?

708
00:42:14,305 --> 00:42:17,244
Two dot seven, then you can assign your role here.

709
00:42:17,244 --> 00:42:19,645
But after creation of function, I will assign my role.

710
00:42:19,645 --> 00:42:23,169
See whenever if you are running your code through lambda.

711
00:42:23,169 --> 00:42:28,044
Again, lambda also need some credentials to work your work with your core,

712
00:42:28,044 --> 00:42:32,199
but that credentials you can provide with programmatic access keys.

713
00:42:32,199 --> 00:42:34,374
The way how you are working on your local host.

714
00:42:34,374 --> 00:42:36,240
Or we can assign some role,

715
00:42:36,240 --> 00:42:38,120
such that from the rule,

716
00:42:38,120 --> 00:42:41,345
the lambda will get credentials, right?

717
00:42:41,345 --> 00:42:44,255
C just to go down allocation of your lambda.

718
00:42:44,255 --> 00:42:46,670
There is option called execution role.

719
00:42:46,670 --> 00:42:47,914
Use an existing role.

720
00:42:47,914 --> 00:42:49,714
I already created a role.

721
00:42:49,714 --> 00:42:52,054
If you want to create a new row, just select this,

722
00:42:52,054 --> 00:42:54,349
right than a house somewhere.

723
00:42:54,349 --> 00:42:59,239
My role like Keno from lambda is U2.

724
00:42:59,239 --> 00:43:01,159
I think lambda whole to work with, yeah,

725
00:43:01,159 --> 00:43:02,720
I think for this argument,

726
00:43:02,720 --> 00:43:05,524
full access for this role. I selected this role.

727
00:43:05,524 --> 00:43:10,279
Just save it and see generally by default is given three seconds of execution time.

728
00:43:10,279 --> 00:43:11,420
So within three seconds,

729
00:43:11,420 --> 00:43:14,345
if you are not able to complete your lambda cold will get fail.

730
00:43:14,345 --> 00:43:17,629
That's why I'm going to do suppose ten minutes before ten minutes,

731
00:43:17,629 --> 00:43:19,054
if it is complicated, okay,

732
00:43:19,054 --> 00:43:22,219
your script will exit No Barolo, save.

733
00:43:22,219 --> 00:43:24,755
So if you're under select your network,

734
00:43:24,755 --> 00:43:26,629
right, different parameters we can provide.

735
00:43:26,629 --> 00:43:30,245
And also if you want to provide some tags for your lambda, you can do it.

736
00:43:30,245 --> 00:43:32,869
And any random variables as of now I am not going to use,

737
00:43:32,869 --> 00:43:34,940
we can use in, while going forward.

738
00:43:34,940 --> 00:43:36,230
Aidan variables are nothing but,

739
00:43:36,230 --> 00:43:37,400
you know, on your Linux bugs,

740
00:43:37,400 --> 00:43:40,040
suppose if I run some ENV command,

741
00:43:40,040 --> 00:43:41,090
you're getting some variables,

742
00:43:41,090 --> 00:43:43,505
right? So these variables.

743
00:43:43,505 --> 00:43:47,720
You can write a here and you can access inside of your B23 script.

744
00:43:47,720 --> 00:43:49,505
I mean here, right?

745
00:43:49,505 --> 00:43:52,790
That's fine. Now let me write first to code.

746
00:43:52,790 --> 00:43:56,179
So guys, this is the Lambda handlers

747
00:43:56,179 --> 00:44:00,200
from where you are automatically your core will executing your lambda, right?

748
00:44:00,200 --> 00:44:05,090
So while writing your code here and while importing your boater three,

749
00:44:05,090 --> 00:44:06,350
you need to think about

750
00:44:06,350 --> 00:44:09,340
whether both of these existing on not already adolescents

751
00:44:09,340 --> 00:44:11,825
maintaining in there lambda moto three module.

752
00:44:11,825 --> 00:44:12,935
You don't bother about that.

753
00:44:12,935 --> 00:44:15,590
The only thing you just copy your core and pasted.

754
00:44:15,590 --> 00:44:18,334
Otherwise, stride forward, you can write your code here also.

755
00:44:18,334 --> 00:44:19,820
Now already we have our code.

756
00:44:19,820 --> 00:44:23,089
Let me copy it even in order to write been python, right?

757
00:44:23,089 --> 00:44:28,099
Just import anyway that print statements,

758
00:44:28,099 --> 00:44:29,405
we are not going to see it.

759
00:44:29,405 --> 00:44:31,709
Yes, we can see it in log.

760
00:44:33,820 --> 00:44:37,475
Let me copy and paste my code.

761
00:44:37,475 --> 00:44:44,930
Now provide this is already we imported and we hear a pre-print also not required.

762
00:44:44,930 --> 00:44:46,804
And but if you want, you can keep it.

763
00:44:46,804 --> 00:44:50,044
Now here guys, you don't need to create a session object.

764
00:44:50,044 --> 00:44:54,754
Actually, you are creating your session from localhost whenever if you provide,

765
00:44:54,754 --> 00:44:57,904
if you configure the profile names, right?

766
00:44:57,904 --> 00:45:01,774
But whenever if you assign your role or that time,

767
00:45:01,774 --> 00:45:05,090
don't take session instead of directly take default session.

768
00:45:05,090 --> 00:45:07,580
Nothing but Bhutto three only.

769
00:45:07,580 --> 00:45:12,034
Don't worry, we'll take care if you assign IAM role.

770
00:45:12,034 --> 00:45:15,694
So boater, they dot client.write, right?

771
00:45:15,694 --> 00:45:19,714
So if you assign a role in order to create a session customization,

772
00:45:19,714 --> 00:45:21,604
if you don't assign any of you are crossing,

773
00:45:21,604 --> 00:45:23,900
passing some credentials, then you have to take

774
00:45:23,900 --> 00:45:28,099
either Profile Name or directly access keys, right?

775
00:45:28,099 --> 00:45:32,600
So now I assigned already a role for my lambda.

776
00:45:32,600 --> 00:45:36,185
That's why I am creating directly with the default session.

777
00:45:36,185 --> 00:45:46,100
Right now wherever you how let me modify our,

778
00:45:46,100 --> 00:45:47,779
I mean, let me adjust this.

779
00:45:47,779 --> 00:45:51,409
So there's here you are using ec2 client, your local host,

780
00:45:51,409 --> 00:45:53,795
but here simply use,

781
00:45:53,795 --> 00:45:56,660
yeah, that is easier to client only, sorry.

782
00:45:56,660 --> 00:45:58,459
So we are not creating a session, right?

783
00:45:58,459 --> 00:46:02,069
Only in this case a remaining parties, everything is same.

784
00:46:05,830 --> 00:46:14,615
So by this you are collecting all your list of volumes.

785
00:46:14,615 --> 00:46:18,420
Now you are going to create snapshot.

786
00:46:53,620 --> 00:47:00,450
Now let me rearrange Hyman poverty notations correctly here also.

787
00:47:01,840 --> 00:47:04,444
And we have not returning anything here.

788
00:47:04,444 --> 00:47:06,770
Just write return num.

789
00:47:06,770 --> 00:47:08,794
Okay, let me save it.

790
00:47:08,794 --> 00:47:09,754
Okay?

791
00:47:09,754 --> 00:47:14,630
First I'm going to test it where it is going to work or not as of now, right.

792
00:47:14,630 --> 00:47:18,305
We don't have any volumes are snapshots. I deleted them.

793
00:47:18,305 --> 00:47:19,624
Let me check it.

794
00:47:19,624 --> 00:47:22,654
So guys, basically lambda is a event driven action, right?

795
00:47:22,654 --> 00:47:24,514
So that's why before going to test,

796
00:47:24,514 --> 00:47:26,450
even though if you are not using any events,

797
00:47:26,450 --> 00:47:28,250
you have to provide some test event,

798
00:47:28,250 --> 00:47:32,225
whether you are going to use that or whether you are getting another secondary story.

799
00:47:32,225 --> 00:47:35,030
But by default you how to grow it at least test

800
00:47:35,030 --> 00:47:37,670
event whether you are using are not secondary,

801
00:47:37,670 --> 00:47:38,690
but you have to provide that.

802
00:47:38,690 --> 00:47:40,309
Say, okay, let me check it.

803
00:47:40,309 --> 00:47:41,480
If you have any errors,

804
00:47:41,480 --> 00:47:43,505
it will throw so that we can rectify that.

805
00:47:43,505 --> 00:47:45,679
If we don't, how errors, then ok,

806
00:47:45,679 --> 00:47:52,984
it will work. Okay, it's running.

807
00:47:52,984 --> 00:47:54,349
Right?

808
00:47:54,349 --> 00:47:56,970
So let me go and see here.

809
00:47:56,970 --> 00:48:04,959
Yes, it's taking, so it is waiting your lambda because you include your waiters.

810
00:48:04,959 --> 00:48:08,305
But in lambda, even if you don't include weight has no problem.

811
00:48:08,305 --> 00:48:14,604
But it's a good practice to include waiters if you don't want to just remove this.

812
00:48:14,604 --> 00:48:16,239
So if you include waitress No,

813
00:48:16,239 --> 00:48:20,200
you're going to consume your lambda execution time also.

814
00:48:20,200 --> 00:48:23,830
So that is a somewhat drawback.

815
00:48:23,830 --> 00:48:26,904
But if you're running from local host, right?

816
00:48:26,904 --> 00:48:31,044
You can include your waiters here also for perfect, suppose, if,

817
00:48:31,044 --> 00:48:34,884
if you are going to depend on these snapshots in your code itself, right?

818
00:48:34,884 --> 00:48:37,495
Offer sometime, then you have to include your waiters.

819
00:48:37,495 --> 00:48:39,339
But here just we are taking a snapshot on.

820
00:48:39,339 --> 00:48:41,824
We're not taking From Snapshot Any other thing.

821
00:48:41,824 --> 00:48:44,270
That's why no need to include waiters here.

822
00:48:44,270 --> 00:48:47,509
But assume that after creation of your waiter, Sorry,

823
00:48:47,509 --> 00:48:51,349
snapshots, you are going to take a snapshot into different, I mean,

824
00:48:51,349 --> 00:48:54,049
if you're going to take a copy of that snapshot into

825
00:48:54,049 --> 00:48:58,205
different region at the time before completion of your snapshot,

826
00:48:58,205 --> 00:49:02,150
you cannot take a copy of that snapshot into different cross region.

827
00:49:02,150 --> 00:49:02,690
R.

828
00:49:02,690 --> 00:49:04,219
The timing out include waiters.

829
00:49:04,219 --> 00:49:06,875
Ganymede has been completed, just completed.

830
00:49:06,875 --> 00:49:08,539
Our Skip is perfectly working.

831
00:49:08,539 --> 00:49:10,490
Right? Now.

832
00:49:10,490 --> 00:49:12,094
As of now what you are doing,

833
00:49:12,094 --> 00:49:14,659
even though if you have a coding your lambda manually,

834
00:49:14,659 --> 00:49:16,820
you are running your lambda so that it is taking a snapshot,

835
00:49:16,820 --> 00:49:18,290
but I don't want to run it manually.

836
00:49:18,290 --> 00:49:20,645
I want to schedule the job.

837
00:49:20,645 --> 00:49:24,064
So based on my required diameter has to take automatically the snapshot.

838
00:49:24,064 --> 00:49:26,044
That is our requirement, right?

839
00:49:26,044 --> 00:49:30,575
That's why what I am doing is see guys here you how different types of triggers.

840
00:49:30,575 --> 00:49:32,930
If you go here you have a CloudWatch Events.

841
00:49:32,930 --> 00:49:34,580
So in CloudWatch event,

842
00:49:34,580 --> 00:49:39,589
just click on that and click on the configuration required. Just come down.

843
00:49:39,589 --> 00:49:42,245
See configured trigger.

844
00:49:42,245 --> 00:49:44,899
So just create a new rule.

845
00:49:44,899 --> 00:49:48,394
I'm going to create rule name is automatic.

846
00:49:48,394 --> 00:49:51,239
So here don't provide any space.

847
00:50:02,740 --> 00:50:06,389
Sorry, automatic EBS.

848
00:50:09,010 --> 00:50:12,229
Then Rule Description, you can take anything.

849
00:50:12,229 --> 00:50:20,509
So I'm going to take automatically take a snap for PBS, lets say.

850
00:50:20,509 --> 00:50:22,894
Now here you have two types of rules ways.

851
00:50:22,894 --> 00:50:26,839
Either it is even pattern or schedule expression, even patterns, I think.

852
00:50:26,839 --> 00:50:28,789
But if something happens based on that,

853
00:50:28,789 --> 00:50:30,320
if you want to exclude your lambda,

854
00:50:30,320 --> 00:50:31,670
you have to select event pattern.

855
00:50:31,670 --> 00:50:34,729
But as of now you are going to schedule like a con job scores,

856
00:50:34,729 --> 00:50:36,785
can't jobs could you'll expression, sorry.

857
00:50:36,785 --> 00:50:38,569
If you want to schedule like a cron job,

858
00:50:38,569 --> 00:50:40,895
you have to sell it always scheduled expiration.

859
00:50:40,895 --> 00:50:45,199
Now, again, in this Yasu types of format, read using rate.

860
00:50:45,199 --> 00:50:46,460
Using Khan.

861
00:50:46,460 --> 00:50:49,715
So cronies exactly or cron job, right?

862
00:50:49,715 --> 00:50:52,790
But red is nothing but see if you have some fixed intervals.

863
00:50:52,790 --> 00:50:55,550
I want to run the script for every two minutes,

864
00:50:55,550 --> 00:50:58,939
five minutes, one hour, two hours, right?

865
00:50:58,939 --> 00:51:00,665
So that it will work.

866
00:51:00,665 --> 00:51:05,345
If you take rate, suppose, let's say I'm taking the rate of

867
00:51:05,345 --> 00:51:10,760
suppose sort two minutes. Right?

868
00:51:10,760 --> 00:51:12,530
So for every two means it will take

869
00:51:12,530 --> 00:51:16,249
automatically snapshots just for your testing purpose.

870
00:51:16,249 --> 00:51:17,854
Now I'm selecting faster rate.

871
00:51:17,854 --> 00:51:21,440
Okay, so in official document you how clear explanation for this?

872
00:51:21,440 --> 00:51:23,600
I will show you that. Just wait.

873
00:51:23,600 --> 00:51:29,870
Save it. Done after two minutes, right?

874
00:51:29,870 --> 00:51:32,600
So you just wait two minutes.

875
00:51:32,600 --> 00:51:34,490
So I'm going to mute.

876
00:51:34,490 --> 00:51:37,204
Once it is done,

877
00:51:37,204 --> 00:51:38,689
then I will enable them.

878
00:51:38,689 --> 00:51:42,810
Then I will explain that yet wait, what do mates?

879
00:52:01,270 --> 00:52:05,869
Right now you've got some old snapshot for given volume IDs.

880
00:52:05,869 --> 00:52:09,380
Again, after two means automatically when you get to most snapshots.

881
00:52:09,380 --> 00:52:14,719
So if you want to run any job for every two minutes,

882
00:52:14,719 --> 00:52:17,780
right, like that, then you have to select a rate expression.

883
00:52:17,780 --> 00:52:21,650
So let me open your official documentation itself.

884
00:52:21,650 --> 00:52:31,170
Aw

