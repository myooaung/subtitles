1
00:00:02,510 --> 00:00:04,199
Hi friends.

2
00:00:04,199 --> 00:00:08,340
In this video, we are going to discuss about resonators for

3
00:00:08,340 --> 00:00:14,565
S3 c already in our course somewhere we have a overall view of resonators,

4
00:00:14,565 --> 00:00:17,520
pollinators of moto three, right?

5
00:00:17,520 --> 00:00:23,325
So remember that pi resonators or applicable for your client object,

6
00:00:23,325 --> 00:00:25,574
not for your resource object.

7
00:00:25,574 --> 00:00:28,289
So why we are going with past senators?

8
00:00:28,289 --> 00:00:31,320
So guys, whenever if you're acquiring

9
00:00:31,320 --> 00:00:36,375
some information with your boat u3 from your AWS or cone,

10
00:00:36,375 --> 00:00:39,564
right at that time, resonators or helpful.

11
00:00:39,564 --> 00:00:48,530
So in what way they are helping us write C that just imagine that in your AWS or county,

12
00:00:48,530 --> 00:00:52,025
how suppose sum is three buckets.

13
00:00:52,025 --> 00:00:55,234
So max, we can create a 100 buckets, right?

14
00:00:55,234 --> 00:01:01,070
So now if I want to list all my bucket using either client or resource anyway,

15
00:01:01,070 --> 00:01:05,075
you don't have any problem with resource object. Problem if client.

16
00:01:05,075 --> 00:01:08,029
So if I tried to list all my buckets from

17
00:01:08,029 --> 00:01:11,809
this edible is silicone using client object, right?

18
00:01:11,809 --> 00:01:15,214
So you are acquiring information,

19
00:01:15,214 --> 00:01:18,935
you are making some EPA cause to get your information,

20
00:01:18,935 --> 00:01:21,589
to get the result for your query.

21
00:01:21,589 --> 00:01:22,504
Right?

22
00:01:22,504 --> 00:01:26,524
You are making some API call with your enemies account using your Bhutto three.

23
00:01:26,524 --> 00:01:35,765
Now this API call will get mags result of either 50 or a 100, right?

24
00:01:35,765 --> 00:01:40,565
Most of the cases, it is going to give you the result of either 50 results or a 100,

25
00:01:40,565 --> 00:01:44,585
except your S3 objects or three objects,

26
00:01:44,585 --> 00:01:48,049
you will get 1000 objects per request.

27
00:01:48,049 --> 00:01:53,494
And whenever if you're querying with your enablers or co-own,

28
00:01:53,494 --> 00:01:56,405
related with your S3 buckets.

29
00:01:56,405 --> 00:01:58,175
So this API call,

30
00:01:58,175 --> 00:02:03,740
we do max a 100 buckets information for one query.

31
00:02:03,740 --> 00:02:08,210
Now anyway, you can create maximum a 100 buckets from your AWS account.

32
00:02:08,210 --> 00:02:13,009
That's why if you want to list all lever buckets using your client,

33
00:02:13,009 --> 00:02:17,239
again, you don't have any problem with the word buckets were using client object.

34
00:02:17,239 --> 00:02:20,975
Now your problem is yes, three objects.

35
00:02:20,975 --> 00:02:24,214
Your problem is with S3 objects.

36
00:02:24,214 --> 00:02:29,614
Let's say you how one S3 bucket in your cone, an agenda.

37
00:02:29,614 --> 00:02:35,270
You how suppose more than 1000 objects inside of that S3 bucket.

38
00:02:35,270 --> 00:02:37,940
Note to list1 objects,

39
00:02:37,940 --> 00:02:44,555
you're making some APA call that APA col will get maximum of 1000 objects.

40
00:02:44,555 --> 00:02:47,240
Whenever if you are working with S3 objects,

41
00:02:47,240 --> 00:02:49,459
you will get 1000 results.

42
00:02:49,459 --> 00:02:51,694
But if held more than 1000 objects,

43
00:02:51,694 --> 00:02:56,870
the remaining objects information you cannot get with your normal procedure at that time.

44
00:02:56,870 --> 00:02:59,510
You had to create a pages.

45
00:02:59,510 --> 00:03:01,445
So suppose if you have, let's say,

46
00:03:01,445 --> 00:03:03,949
sum to a 100 objects are there in your account.

47
00:03:03,949 --> 00:03:07,279
Then if you use resonators automatically your paginated,

48
00:03:07,279 --> 00:03:09,304
we create two pages.

49
00:03:09,304 --> 00:03:11,240
And in first place you will get

50
00:03:11,240 --> 00:03:15,740
1000 objects information and less than 2 thousand you have.

51
00:03:15,740 --> 00:03:19,384
That's why remaining 200 objects you will get from second page.

52
00:03:19,384 --> 00:03:22,129
Let's say suppose you have some 303 thousand

53
00:03:22,129 --> 00:03:29,104
plus 3 thousand plus objects in your S3 bucket.

54
00:03:29,104 --> 00:03:30,259
Right?

55
00:03:30,259 --> 00:03:33,019
So automatically you are passionate or we create

56
00:03:33,019 --> 00:03:36,469
four pages because prepares you are getting 1000 objects.

57
00:03:36,469 --> 00:03:39,679
So if you have 3 thousand plus the remaining objects,

58
00:03:39,679 --> 00:03:41,539
you have to get from fourth page.

59
00:03:41,539 --> 00:03:45,574
So automatically you are both u3 passenger will create four pages.

60
00:03:45,574 --> 00:03:47,540
Now you how to read one-by-one page.

61
00:03:47,540 --> 00:03:51,710
And from this you have to read one-by-one object.

62
00:03:51,710 --> 00:03:52,805
Right?

63
00:03:52,805 --> 00:04:00,125
So now you need to use resonator to get you or S3 buckets information.

64
00:04:00,125 --> 00:04:06,319
Because by default, your client API call will get all your S3 buckets.

65
00:04:06,319 --> 00:04:09,035
The reason is you can create maximum of

66
00:04:09,035 --> 00:04:11,959
a 100 buckets in your AWS account at the same time,

67
00:04:11,959 --> 00:04:14,045
the AWS, so at the same time,

68
00:04:14,045 --> 00:04:18,140
the Bordeaux three APA call using client will also get maximum a 100.

69
00:04:18,140 --> 00:04:24,664
And that's why you no need to use resonators for your S3 buckets.

70
00:04:24,664 --> 00:04:30,634
But you, how do you use buzz monitors for your S3 objects, right?

71
00:04:30,634 --> 00:04:33,139
So guys, make sure that whenever,

72
00:04:33,139 --> 00:04:36,139
if you are working with fewer buckets,

73
00:04:36,139 --> 00:04:38,435
you don't need to create resonators.

74
00:04:38,435 --> 00:04:42,155
But whenever if you are working with objects of a bucket,

75
00:04:42,155 --> 00:04:46,340
then how to you how to use past knitters?

76
00:04:46,340 --> 00:04:53,029
Let me go and write one simple skip just to list out all your objects.

77
00:04:53,029 --> 00:04:56,929
List objects dot p, y.

78
00:04:56,929 --> 00:05:01,249
So guys, you were intensities from particular bucket,

79
00:05:01,249 --> 00:05:03,440
you how to get all your objects,

80
00:05:03,440 --> 00:05:05,210
right? Let me write my core.

81
00:05:05,210 --> 00:05:07,145
So as you know, you have to import moto three,

82
00:05:07,145 --> 00:05:09,004
then you have to create custom session.

83
00:05:09,004 --> 00:05:13,444
That is nothing but you are moto three dot session, session.

84
00:05:13,444 --> 00:05:22,175
Then profile name equals to underscore root.

85
00:05:22,175 --> 00:05:23,299
Right?

86
00:05:23,299 --> 00:05:25,849
Then you can go and get

87
00:05:25,849 --> 00:05:31,594
your objects information bright By creating either client object or resource object.

88
00:05:31,594 --> 00:05:34,670
First I'm going to work with a resource.

89
00:05:34,670 --> 00:05:38,299
Okay, then let me create YES, three for R3.

90
00:05:38,299 --> 00:05:40,024
So S3 using resource object,

91
00:05:40,024 --> 00:05:44,970
that is nothing but from your customization, dot a resource.

92
00:05:45,610 --> 00:05:48,665
Then service name.

93
00:05:48,665 --> 00:05:53,195
Our service name is yes, three.

94
00:05:53,195 --> 00:05:57,065
Then let me provide some region name.

95
00:05:57,065 --> 00:05:58,204
Anyway.

96
00:05:58,204 --> 00:06:03,065
Your S3 is not specific to any region much just providing a region name, that's it.

97
00:06:03,065 --> 00:06:08,180
Now in your hand you how S3 resource object, right?

98
00:06:08,180 --> 00:06:12,844
But you want to get your all objects of particular bucket.

99
00:06:12,844 --> 00:06:15,920
Let's say suppose my required bucket is bucket name,

100
00:06:15,920 --> 00:06:17,960
I'm taking my required bucket.

101
00:06:17,960 --> 00:06:21,900
Let's say in my home.

102
00:06:24,250 --> 00:06:25,999
He's it.

103
00:06:25,999 --> 00:06:27,364
Let me check it.

104
00:06:27,364 --> 00:06:32,729
No, not this. Let me open one more bucket.

105
00:06:35,560 --> 00:06:37,549
This one.

106
00:06:37,549 --> 00:06:42,469
Now if you observe in this grill,

107
00:06:42,469 --> 00:06:45,755
no, given not all this.

108
00:06:45,755 --> 00:06:49,590
So what is my bucket actually?

109
00:06:50,860 --> 00:06:53,909
Let me open this.

110
00:06:56,260 --> 00:07:02,344
Yeah. See I how here almost although your guys here observed count,

111
00:07:02,344 --> 00:07:05,135
how many objects I'm having, my account.

112
00:07:05,135 --> 00:07:08,464
I mean, any particular bucket that is do it Python April.

113
00:07:08,464 --> 00:07:13,219
So here, how many objects I'm having just to go through that 900,

114
00:07:13,219 --> 00:07:14,419
even more than 900.

115
00:07:14,419 --> 00:07:18,019
Let me open that. First after all the bucket,

116
00:07:18,019 --> 00:07:22,144
sorry, objects in a particular IO, almost 1101.

117
00:07:22,144 --> 00:07:26,615
Objects in Mike do with Python, April bucket.

118
00:07:26,615 --> 00:07:27,904
Let me do one thing.

119
00:07:27,904 --> 00:07:31,745
First time taking my bucket name here.

120
00:07:31,745 --> 00:07:36,679
So the ice actually you are having your objects inside of your bucket.

121
00:07:36,679 --> 00:07:40,100
That way first you have to create your bucket object.

122
00:07:40,100 --> 00:07:43,100
So let me create my bucket object.

123
00:07:43,100 --> 00:07:46,864
Right, is nothing but from your resource,

124
00:07:46,864 --> 00:07:50,795
S3 dot simply bucket.

125
00:07:50,795 --> 00:07:52,280
So if you're any doubts,

126
00:07:52,280 --> 00:07:54,545
let me open official documentation.

127
00:07:54,545 --> 00:07:55,490
It's very simple.

128
00:07:55,490 --> 00:07:57,620
Moto three documentation.

129
00:07:57,620 --> 00:08:03,859
Then just to go and select the word available service as is three.

130
00:08:03,859 --> 00:08:07,775
So on this, I'm going to select S3 as my surveys.

131
00:08:07,775 --> 00:08:09,589
Let me open that first.

132
00:08:09,589 --> 00:08:11,660
So as of now you are going to work with

133
00:08:11,660 --> 00:08:15,619
the resource object because for S3 you how resource as well, right?

134
00:08:15,619 --> 00:08:18,149
So let me open this.

135
00:08:21,010 --> 00:08:23,900
Now in the resource object, right?

136
00:08:23,900 --> 00:08:25,235
If you go and see here,

137
00:08:25,235 --> 00:08:27,049
there is a bucket object.

138
00:08:27,049 --> 00:08:33,335
So what is the use of bucket means if you open that the existing bucket,

139
00:08:33,335 --> 00:08:36,349
if you want to work with the existing bucket,

140
00:08:36,349 --> 00:08:37,880
using your boat to three,

141
00:08:37,880 --> 00:08:41,329
you have to create a bucket object first that is nothing but simply

142
00:08:41,329 --> 00:08:45,365
your bucket equals to see your resource,

143
00:08:45,365 --> 00:08:47,585
then dot bucket, bucket,

144
00:08:47,585 --> 00:08:49,520
then whatever the name you are having.

145
00:08:49,520 --> 00:08:54,784
So our name, you can provide directly inside the quote eight conditions like this.

146
00:08:54,784 --> 00:08:58,595
Or because already we stored our bucket in this variable.

147
00:08:58,595 --> 00:09:00,139
Let me say this,

148
00:09:00,139 --> 00:09:03,844
do that. That's a, okay.

149
00:09:03,844 --> 00:09:07,100
Now this, you have created your bucket object.

150
00:09:07,100 --> 00:09:09,364
Now inside your bucket object,

151
00:09:09,364 --> 00:09:12,605
you, how multiple objects?

152
00:09:12,605 --> 00:09:14,600
You are keys, right?

153
00:09:14,600 --> 00:09:15,439
If you go down

154
00:09:15,439 --> 00:09:17,040
somewhere,

155
00:09:24,130 --> 00:09:25,850
let me go.

156
00:09:25,850 --> 00:09:28,490
And so you see buckets, right?

157
00:09:28,490 --> 00:09:29,974
So yeah, how collections?

158
00:09:29,974 --> 00:09:32,389
So your bucket object dot buckets,

159
00:09:32,389 --> 00:09:35,345
your bucket object dot buckets, dot all.

160
00:09:35,345 --> 00:09:38,389
We'll do all your objects. Let me do one thing.

161
00:09:38,389 --> 00:09:41,810
Print your bucket object.

162
00:09:41,810 --> 00:09:44,839
In that bucket object we how objects,

163
00:09:44,839 --> 00:09:48,379
like if you remember while working with EC2,

164
00:09:48,379 --> 00:09:50,990
you are creating first EC2 Console.

165
00:09:50,990 --> 00:09:53,215
On that you are being dot instance,

166
00:09:53,215 --> 00:09:55,610
dot all do get all your instances the same

167
00:09:55,610 --> 00:09:58,100
way whenever if you are working with S3 buckets to get

168
00:09:58,100 --> 00:10:03,560
your S3 buckets first you are creating S3 console dot buckets dot all the same.

169
00:10:03,560 --> 00:10:09,304
But now you created your particular S3 object or butler S3 bucket console.

170
00:10:09,304 --> 00:10:11,449
Now in this yellow number of objects,

171
00:10:11,449 --> 00:10:13,100
so that for a dot objects,

172
00:10:13,100 --> 00:10:15,395
dot all is the operation.

173
00:10:15,395 --> 00:10:17,074
Now if I run this,

174
00:10:17,074 --> 00:10:19,864
just see dot Woodward, you're going to get it.

175
00:10:19,864 --> 00:10:24,515
You are getting some object inside this yellow number of objects.

176
00:10:24,515 --> 00:10:26,239
I mean, your bucket objects,

177
00:10:26,239 --> 00:10:28,024
not to get one-by-one.

178
00:10:28,024 --> 00:10:32,959
You know, you have for loop for each object in this.

179
00:10:32,959 --> 00:10:36,260
So I want to count how many objects you,

180
00:10:36,260 --> 00:10:39,499
how in this butler bucket.

181
00:10:39,499 --> 00:10:43,910
So print, count each object.

182
00:10:43,910 --> 00:10:46,280
Let me save this and run this and see the output.

183
00:10:46,280 --> 00:10:53,330
What you are going to get. A lot of objects in this cedar.

184
00:10:53,330 --> 00:10:56,554
Oh man, I forgot to increment my cone.

185
00:10:56,554 --> 00:11:01,069
Then only you can able to see how many objects are there here.

186
00:11:01,069 --> 00:11:04,109
Now let me run it and see the output.

187
00:11:09,370 --> 00:11:18,959
Just wait and see 1116 objects I'm having in my bucket.

188
00:11:19,390 --> 00:11:24,154
Right now. I want to display only name,

189
00:11:24,154 --> 00:11:25,504
bucket, sorry, object name.

190
00:11:25,504 --> 00:11:28,640
Then there is a dot operation called key,

191
00:11:28,640 --> 00:11:32,225
then simply your object dot key.

192
00:11:32,225 --> 00:11:37,169
Let me save this and run this and just see the output what you are going to get it now.

193
00:11:41,820 --> 00:11:46,975
Yes, you are getting all your objects inside of your bucket,

194
00:11:46,975 --> 00:11:48,249
whatever the bucket you are having.

195
00:11:48,249 --> 00:11:52,165
Likewise, for any bucket if you want to get these other simple steps.

196
00:11:52,165 --> 00:11:56,559
So first create your bucket object from that dot objects dot all.

197
00:11:56,559 --> 00:11:59,455
It can also apply some filters also, we will see it later.

198
00:11:59,455 --> 00:12:01,375
But as of now, my indigenous,

199
00:12:01,375 --> 00:12:03,250
I wanted to get just I won't list

200
00:12:03,250 --> 00:12:07,030
all the objects which are available in one particular bucket.

201
00:12:07,030 --> 00:12:10,839
And here we are using S3 resource object.

202
00:12:10,839 --> 00:12:15,010
But now I want to use suppose as three client object.

203
00:12:15,010 --> 00:12:16,930
So as of now, observe that how

204
00:12:16,930 --> 00:12:24,150
many let me come and how many of this are there in a particular bucket?

205
00:12:24,150 --> 00:12:28,925
So how many double 106 objects you how in a Portland bucket.

206
00:12:28,925 --> 00:12:32,060
So this we implemented with the help of resource object,

207
00:12:32,060 --> 00:12:34,864
but now I want to implement with client object.

208
00:12:34,864 --> 00:12:43,219
So simply client equals nothing but you are session dot client.

209
00:12:43,219 --> 00:12:47,429
Just copy and paste this anywhere. This is same, no.

210
00:12:47,830 --> 00:12:54,740
So if you are unable to understand what is this S3 Klein turned S3 resource upset, right?

211
00:12:54,740 --> 00:12:58,909
That very initial steps in our course we have given in detail why we

212
00:12:58,909 --> 00:13:03,200
need to create S3 object or AC to object, right?

213
00:13:03,200 --> 00:13:06,899
You just to go through introduction part. That's fine.

214
00:13:06,899 --> 00:13:08,035
Now.

215
00:13:08,035 --> 00:13:11,005
So there is nothing is there what we are doing as of now,

216
00:13:11,005 --> 00:13:13,270
we created S3 console first.

217
00:13:13,270 --> 00:13:17,140
See if you want to work with the objects first you out to enter into S3 console.

218
00:13:17,140 --> 00:13:20,274
Now with the help of this week later S3 console.

219
00:13:20,274 --> 00:13:25,584
But we want to work with particular bucket, right?

220
00:13:25,584 --> 00:13:28,900
So in your resource you created your bucket object.

221
00:13:28,900 --> 00:13:34,494
But whereas in S3, how you can get your objects of a particular bucket. Nothing is there.

222
00:13:34,494 --> 00:13:37,119
You don't need to think much about it.

223
00:13:37,119 --> 00:13:40,120
You just go and open your official documentation.

224
00:13:40,120 --> 00:13:41,470
Just enter into S3 service,

225
00:13:41,470 --> 00:13:46,360
then open your client object for your S3 and see the documentation.

226
00:13:46,360 --> 00:13:48,469
What you have here.

227
00:13:48,840 --> 00:13:50,305
Right.

228
00:13:50,305 --> 00:13:54,250
So you've seen inclined badly we how each and every operation,

229
00:13:54,250 --> 00:13:58,540
whatever the client object nucleated on that directly how you're all operations.

230
00:13:58,540 --> 00:14:00,265
So, so somewhere if you go down,

231
00:14:00,265 --> 00:14:03,610
you how list objects operation.

232
00:14:03,610 --> 00:14:06,925
So in this you can provide different parameters.

233
00:14:06,925 --> 00:14:09,460
As of now I want to get all the,

234
00:14:09,460 --> 00:14:13,359
all the objects in a particular bucket, C, nothing is there.

235
00:14:13,359 --> 00:14:15,684
Your S3 client dot list objects,

236
00:14:15,684 --> 00:14:18,834
then you took away your bucket name as a string.

237
00:14:18,834 --> 00:14:19,960
Right?

238
00:14:19,960 --> 00:14:25,180
See that? Now, what I am doing is let me that

239
00:14:25,180 --> 00:14:31,580
it'll print from your S3 client dot your operation.

240
00:14:32,190 --> 00:14:35,710
Then you have to provide your bucket name here.

241
00:14:35,710 --> 00:14:37,840
So here you have to provide syntax as bucket.

242
00:14:37,840 --> 00:14:41,364
It goes to bucket name anyway, our bucket.

243
00:14:41,364 --> 00:14:46,914
Yeah, I want write this as a very first because I want to work with this bucket.

244
00:14:46,914 --> 00:14:48,504
So I want to use this variable.

245
00:14:48,504 --> 00:14:50,844
Of course you can write anywhere no column.

246
00:14:50,844 --> 00:14:53,724
Now in short, providing us it directly, you are data.

247
00:14:53,724 --> 00:14:55,989
I'm providing us a variable name.

248
00:14:55,989 --> 00:14:58,344
That's it. Right?

249
00:14:58,344 --> 00:15:00,339
Let me run this and see the output.

250
00:15:00,339 --> 00:15:03,715
So from this bucket you are listing all your objects.

251
00:15:03,715 --> 00:15:05,695
So this is using client democratic guys.

252
00:15:05,695 --> 00:15:07,839
Don't get confused easily,

253
00:15:07,839 --> 00:15:10,359
just try to practice with anyone of them Method.

254
00:15:10,359 --> 00:15:12,940
So now you are getting some data here.

255
00:15:12,940 --> 00:15:14,999
But what do we need exactly?

256
00:15:14,999 --> 00:15:16,895
We need only Keys.

257
00:15:16,895 --> 00:15:18,245
Just come here.

258
00:15:18,245 --> 00:15:20,210
So anyway, whenever if you are having

259
00:15:20,210 --> 00:15:23,000
some operation in the document itself, we have some response.

260
00:15:23,000 --> 00:15:26,989
Also see the response what you are getting for your operation list objects.

261
00:15:26,989 --> 00:15:30,425
So you are getting as a dictionary inside that you have contents.

262
00:15:30,425 --> 00:15:32,810
So content inside that you have key.

263
00:15:32,810 --> 00:15:36,260
That means now you have to take this as a key from

264
00:15:36,260 --> 00:15:39,905
your entire output instead of getting all output now,

265
00:15:39,905 --> 00:15:44,160
I am going to take eight as in this way.

266
00:15:44,260 --> 00:15:48,480
Right now, just see that what you are going to get.

267
00:15:54,130 --> 00:15:57,035
Just to give me time.

268
00:15:57,035 --> 00:15:59,600
Yes, you're getting something.

269
00:15:59,600 --> 00:16:01,789
But in this data also what we need,

270
00:16:01,789 --> 00:16:04,669
we need only key, right?

271
00:16:04,669 --> 00:16:06,230
When you'd only key.

272
00:16:06,230 --> 00:16:07,955
So that is there directly right?

273
00:16:07,955 --> 00:16:11,225
Key as is your dictionary key.

274
00:16:11,225 --> 00:16:12,954
Now what you have to do,

275
00:16:12,954 --> 00:16:15,710
first of all, you how multiple things inside of this.

276
00:16:15,710 --> 00:16:18,860
That's why just take four loop to get one by one.

277
00:16:18,860 --> 00:16:21,770
For each object.

278
00:16:21,770 --> 00:16:28,760
In your S3 client list objects simply print the word count comma County.

279
00:16:28,760 --> 00:16:32,554
Just for our understanding how many objects you are able to get.

280
00:16:32,554 --> 00:16:34,849
Initially, let me take count as one.

281
00:16:34,849 --> 00:16:37,220
Then I am printing my count,

282
00:16:37,220 --> 00:16:40,789
then I'm going to count equals count plus 1.

283
00:16:40,789 --> 00:16:49,579
First order, the output one's just right.

284
00:16:49,579 --> 00:16:52,834
It will take some time because it has to connect with your yes.

285
00:16:52,834 --> 00:16:55,940
See you are getting some information and a man snow,

286
00:16:55,940 --> 00:16:57,799
you're getting 1000 objects only buddy,

287
00:16:57,799 --> 00:16:59,765
how around treble 16 object,

288
00:16:59,765 --> 00:17:02,149
but you are getting only 1000 objects.

289
00:17:02,149 --> 00:17:05,639
Anyway. I want to display only.

290
00:17:09,220 --> 00:17:11,390
Key name, right?

291
00:17:11,390 --> 00:17:14,899
So let me take as a key because if you have done in output He Hao Qi,

292
00:17:14,899 --> 00:17:18,440
Qi as a key and its value as your required object.

293
00:17:18,440 --> 00:17:19,294
Right?

294
00:17:19,294 --> 00:17:22,805
Now let me save this and run it and see the output.

295
00:17:22,805 --> 00:17:27,529
So this, whenever if you're working with a client, right?

296
00:17:27,529 --> 00:17:29,404
So your client object,

297
00:17:29,404 --> 00:17:33,784
something wanted, I reward tidied man.

298
00:17:33,784 --> 00:17:37,130
Oh, I have taken square brackets are going to get a 100.

299
00:17:37,130 --> 00:17:41,270
Take either square brackets or parenthesis.

300
00:17:41,270 --> 00:17:47,189
Yeah, no, it's ok. You will get it now.

301
00:17:48,730 --> 00:17:51,380
Yes, you are getting 1000 objects only,

302
00:17:51,380 --> 00:17:55,384
but you how tricky 16 objects in your Butler bucket.

303
00:17:55,384 --> 00:18:00,574
But you are not able to fetch them because whenever if you use client, client,

304
00:18:00,574 --> 00:18:03,949
client object to list all your objects from,

305
00:18:03,949 --> 00:18:05,975
from a particular bucket.

306
00:18:05,975 --> 00:18:11,045
So you're both really make API call to your AWS.

307
00:18:11,045 --> 00:18:15,650
And it will get maximum of 1000 objects only from a particular bucket.

308
00:18:15,650 --> 00:18:17,315
But more than that,

309
00:18:17,315 --> 00:18:22,189
that we want you all to do is before going to get your objects information,

310
00:18:22,189 --> 00:18:24,380
first, you had to create a resonator.

311
00:18:24,380 --> 00:18:30,694
So paginated will automatically create some number of pages based on your objects.

312
00:18:30,694 --> 00:18:33,184
So suppose you've got 1000 plus objects,

313
00:18:33,184 --> 00:18:35,450
then your paginated repeat two pages.

314
00:18:35,450 --> 00:18:37,610
And in one page you will get 1000 of

315
00:18:37,610 --> 00:18:41,089
this information and the remaining objects you will get in second page.

316
00:18:41,089 --> 00:18:43,445
So nothing is there guys again is very simple.

317
00:18:43,445 --> 00:18:45,229
You don't need to think much Hubbard.

318
00:18:45,229 --> 00:18:47,869
It simply just click on resonators and remember

319
00:18:47,869 --> 00:18:51,570
that fascinate us or they're only for your client.

320
00:18:51,760 --> 00:18:55,460
Right? See that if you observe here paginated,

321
00:18:55,460 --> 00:18:58,190
these are the possible resonators you, if you want to take it.

322
00:18:58,190 --> 00:19:01,384
Now, as of now I want to go and see list object as y.

323
00:19:01,384 --> 00:19:05,450
Just I'm selecting this paginated St.Petersburg dot list objects.

324
00:19:05,450 --> 00:19:08,990
Simple thing, just create a passenger first in this way.

325
00:19:08,990 --> 00:19:10,670
Her dad syntax.

326
00:19:10,670 --> 00:19:14,419
The only thing is whenever you are more than 1000 objects, right?

327
00:19:14,419 --> 00:19:16,265
You have to create a resonator.

328
00:19:16,265 --> 00:19:18,245
Let me create my paginated first.

329
00:19:18,245 --> 00:19:22,079
So I will keep this code as it is. I will do one thing.

330
00:19:28,240 --> 00:19:32,179
So before that, this is your client object.

331
00:19:32,179 --> 00:19:34,489
Let me take it my client on your tasks.

332
00:19:34,489 --> 00:19:36,560
And guys here, client didn't documentation,

333
00:19:36,560 --> 00:19:39,455
but in our case, our client is S3 underscore Planck.

334
00:19:39,455 --> 00:19:41,629
So just know you created a resonator.

335
00:19:41,629 --> 00:19:44,209
Now from fascinated you have to pass in it.

336
00:19:44,209 --> 00:19:45,964
That means you have to get pages, right?

337
00:19:45,964 --> 00:19:47,690
So that's why if you observe here,

338
00:19:47,690 --> 00:19:49,985
here itself we have paginated at paginate,

339
00:19:49,985 --> 00:19:51,600
then provide your bucket name.

340
00:19:51,600 --> 00:19:53,320
So remaining operations, I mean,

341
00:19:53,320 --> 00:19:54,534
parameters are also there,

342
00:19:54,534 --> 00:19:56,900
but we'll discuss them later.

343
00:19:56,910 --> 00:19:59,769
So it's very simple.

344
00:19:59,769 --> 00:20:04,280
If you look like your list objects operation only.

345
00:20:06,810 --> 00:20:10,449
So I think our bucket is bucket name.

346
00:20:10,449 --> 00:20:13,059
So now from resonator,

347
00:20:13,059 --> 00:20:14,619
you are creating simply pages.

348
00:20:14,619 --> 00:20:19,419
So this operation will create automatically the number of pages, right?

349
00:20:19,419 --> 00:20:21,175
C, Let me do one thing.

350
00:20:21,175 --> 00:20:24,655
Print this information.

351
00:20:24,655 --> 00:20:29,485
You'll see the output, what you are going to get it in intentional where MAN?

352
00:20:29,485 --> 00:20:33,170
Maybe here. Yes.

353
00:20:38,580 --> 00:20:44,409
Yes, although the output, so in this yao to paginate us, Simon two pages.

354
00:20:44,409 --> 00:20:46,794
So how I am saying to two pages,

355
00:20:46,794 --> 00:20:49,239
because I know how many objects are there in my account.

356
00:20:49,239 --> 00:20:51,564
But if you don't know, don't know, need to worry.

357
00:20:51,564 --> 00:20:55,765
So from this, from this objects,

358
00:20:55,765 --> 00:20:59,274
you will get number of pages based on how many objects are there in,

359
00:20:59,274 --> 00:21:01,135
in, in your Butler bucket.

360
00:21:01,135 --> 00:21:04,554
But you don't need to worry about how many ways are there, right?

361
00:21:04,554 --> 00:21:05,905
So if you want to count it,

362
00:21:05,905 --> 00:21:08,000
let me do one thing.

363
00:21:08,970 --> 00:21:11,214
So how many are there?

364
00:21:11,214 --> 00:21:13,239
So for that, right?

365
00:21:13,239 --> 00:21:17,560
For each page in this.

366
00:21:17,560 --> 00:21:24,154
So simply I'm printing, suppose print page.

367
00:21:24,154 --> 00:21:28,294
I don't want to print your each page information simply I'm printing some message.

368
00:21:28,294 --> 00:21:31,129
So now you'll get to 2z times this page information

369
00:21:31,129 --> 00:21:33,845
because in the CR two pages based on that,

370
00:21:33,845 --> 00:21:37,474
these measures will repeat two times because you are using for loop, right?

371
00:21:37,474 --> 00:21:39,409
So how many values are there based on that?

372
00:21:39,409 --> 00:21:41,719
So you're getting two pages.

373
00:21:41,719 --> 00:21:47,374
But in each case you how your information about your particular i mean,

374
00:21:47,374 --> 00:21:51,270
in each base you have information for you what objects.

375
00:21:51,400 --> 00:21:56,510
Right now that's why what you have to do is in each page,

376
00:21:56,510 --> 00:21:58,399
like this operation only,

377
00:21:58,399 --> 00:22:00,664
let me do it one thing.

378
00:22:00,664 --> 00:22:05,000
For each object.

379
00:22:05,000 --> 00:22:08,429
In each page.

380
00:22:08,590 --> 00:22:11,765
Just simply print the word.

381
00:22:11,765 --> 00:22:14,494
Each object.

382
00:22:14,494 --> 00:22:17,779
Then let me print the count also so that they can understand.

383
00:22:17,779 --> 00:22:21,545
So let me initiate some initialized sum count value one.

384
00:22:21,545 --> 00:22:31,519
And after this, let me increase my count equals count plus one.

385
00:22:31,519 --> 00:22:33,035
Right?

386
00:22:33,035 --> 00:22:34,324
Fine.

387
00:22:34,324 --> 00:22:36,409
Now let me run this and see the output.

388
00:22:36,409 --> 00:22:38,870
What you are going to get it. Something wrong.

389
00:22:38,870 --> 00:22:43,409
Yeah, it's my indentation above of Allah.

390
00:22:45,900 --> 00:22:51,799
So first let me get output and I will explain once again, output, you are core.

391
00:23:00,750 --> 00:23:03,190
Yeah, see in each page,

392
00:23:03,190 --> 00:23:05,725
right, you how your keys like this.

393
00:23:05,725 --> 00:23:08,260
So but you need only contents, right?

394
00:23:08,260 --> 00:23:12,129
If you remember, while working with your year in 16th line,

395
00:23:12,129 --> 00:23:13,839
while you are taking contents.

396
00:23:13,839 --> 00:23:15,625
So contents, the response,

397
00:23:15,625 --> 00:23:17,215
see the output or response.

398
00:23:17,215 --> 00:23:20,139
So the response in contents you how your key information.

399
00:23:20,139 --> 00:23:26,785
That's why here, let stake our contents.

400
00:23:26,785 --> 00:23:29,510
Now let me run this.

401
00:23:31,380 --> 00:23:38,319
Just see the output. Yes, no,

402
00:23:38,319 --> 00:23:40,210
you're getting, you're all objects.

403
00:23:40,210 --> 00:23:44,089
But in this information you need only key. Then do one thing.

404
00:23:44,520 --> 00:23:46,539
Schottky.

405
00:23:46,539 --> 00:23:48,909
Now let me run this.

406
00:23:48,909 --> 00:23:52,909
So guys first up there, the output, then I will explain.

407
00:23:58,290 --> 00:24:01,600
Now, you are getting only one object,

408
00:24:01,600 --> 00:24:03,384
objects from your bucket.

409
00:24:03,384 --> 00:24:06,069
So if you use normal list upsets,

410
00:24:06,069 --> 00:24:08,020
if you how less than 1000 objects,

411
00:24:08,020 --> 00:24:09,550
then it will be, it will work.

412
00:24:09,550 --> 00:24:12,430
But if you don't know how many objects are there, then

413
00:24:12,430 --> 00:24:14,860
If you want to get completely all your,

414
00:24:14,860 --> 00:24:19,045
all your objects, then you have to create a resonator.

415
00:24:19,045 --> 00:24:24,909
So let me go with some simple explanation about these paths render.

416
00:24:24,909 --> 00:24:30,110
So guess fascial creating some object for paginated.

417
00:24:30,300 --> 00:24:34,705
Then from this passage later you are calling paginate.

418
00:24:34,705 --> 00:24:38,634
Paginate operation will go and work with your AWS or cone,

419
00:24:38,634 --> 00:24:41,649
weighs down the objects which you are having in your account.

420
00:24:41,649 --> 00:24:44,980
Based on that, it will calculate how many objects are there.

421
00:24:44,980 --> 00:24:50,410
Then if you have more than 1000 and less than 2 thousand, automatically this resonator,

422
00:24:50,410 --> 00:24:52,824
because of this operation,

423
00:24:52,824 --> 00:24:56,524
pass metadata, resonate because of this operation.

424
00:24:56,524 --> 00:24:57,679
In place of this,

425
00:24:57,679 --> 00:24:59,554
you will get two pages,

426
00:24:59,554 --> 00:25:01,579
page one and page two.

427
00:25:01,579 --> 00:25:02,780
In our case, page one,

428
00:25:02,780 --> 00:25:04,624
page two, if you have some 200 thousand,

429
00:25:04,624 --> 00:25:07,414
greater than 2 thousand and less than 3 thousand,

430
00:25:07,414 --> 00:25:10,190
then you will get three pages.

431
00:25:10,190 --> 00:25:13,714
And you now you got three bridges.

432
00:25:13,714 --> 00:25:16,580
So now you had to take one by one PE separately.

433
00:25:16,580 --> 00:25:19,324
And on this page you have to work, right?

434
00:25:19,324 --> 00:25:22,789
So for using for loop from 23rd line, right,

435
00:25:22,789 --> 00:25:25,129
from this three pages,

436
00:25:25,129 --> 00:25:27,995
I'm taking first one page and I'm working on that page.

437
00:25:27,995 --> 00:25:32,975
So what King on one page is exactly like your list objects operation.

438
00:25:32,975 --> 00:25:34,114
Right?

439
00:25:34,114 --> 00:25:36,365
So for each object in your foster page,

440
00:25:36,365 --> 00:25:38,134
so in your page,

441
00:25:38,134 --> 00:25:40,909
the information that we get based on contents key,

442
00:25:40,909 --> 00:25:43,759
if you see here in your documentation,

443
00:25:43,759 --> 00:25:47,044
right, you how something like called contents here.

444
00:25:47,044 --> 00:25:52,099
So under continue how key information this is for one key,

445
00:25:52,099 --> 00:25:53,179
if you have more than that,

446
00:25:53,179 --> 00:25:55,159
you will get this type of victories.

447
00:25:55,159 --> 00:25:58,025
Likewise, right?

448
00:25:58,025 --> 00:26:01,679
That's why I'm taking foster key, sorry, first page.

449
00:26:01,679 --> 00:26:04,105
So on that page I am displaying the information.

450
00:26:04,105 --> 00:26:06,775
So once if you're complete,

451
00:26:06,775 --> 00:26:08,319
this for loop is completed,

452
00:26:08,319 --> 00:26:10,690
you are getting all the objects from foster page.

453
00:26:10,690 --> 00:26:12,700
Then you are not this main for loop.

454
00:26:12,700 --> 00:26:14,649
We'll go and take next to page and

455
00:26:14,649 --> 00:26:16,899
you're repeating same operation so that you are able to

456
00:26:16,899 --> 00:26:24,474
get all your objects inside of your Butler bucket.

457
00:26:24,474 --> 00:26:29,829
Okay, so guys, remember that C before going to use resonators,

458
00:26:29,829 --> 00:26:33,699
you can also come here and you can check it for what operation you,

459
00:26:33,699 --> 00:26:36,760
how fascinated so that you can decide whether you need to use fascinate us or not.

460
00:26:36,760 --> 00:26:38,605
Suppose I am working on S3.

461
00:26:38,605 --> 00:26:41,290
I don't know whether I how to use past data

462
00:26:41,290 --> 00:26:44,320
inclined for Professor Butler operation or not.

463
00:26:44,320 --> 00:26:47,725
All right, anyway, no need to use any passenger for resource.

464
00:26:47,725 --> 00:26:49,569
Just click on paginated and open to

465
00:26:49,569 --> 00:26:55,194
your page directly you can see the operations for which you have paginated.

466
00:26:55,194 --> 00:26:58,329
Let me see. Only for this operations you have paths and

467
00:26:58,329 --> 00:27:00,939
it is you don't have any passenger to walk with your S3.

468
00:27:00,939 --> 00:27:02,604
That means I'm in buckets.

469
00:27:02,604 --> 00:27:05,380
That means you don't need to use Pasadena four buckets.

470
00:27:05,380 --> 00:27:07,375
Whatever the operations you are here.

471
00:27:07,375 --> 00:27:09,880
For them only you how to use resonators.

472
00:27:09,880 --> 00:27:10,540
That's it.

473
00:27:10,540 --> 00:27:13,150
So even suppose if I want to work with, suppose,

474
00:27:13,150 --> 00:27:16,780
let's say IAM user.

475
00:27:16,780 --> 00:27:19,135
Suppose I am taking an example, right?

476
00:27:19,135 --> 00:27:19,974
I am.

477
00:27:19,974 --> 00:27:22,460
Let me open that page.

478
00:27:28,410 --> 00:27:31,209
I am right. See here paginate is,

479
00:27:31,209 --> 00:27:34,570
are there just taken that resonators?

480
00:27:34,570 --> 00:27:38,140
So for which operation you can use paginated,

481
00:27:38,140 --> 00:27:39,984
that information will be there here.

482
00:27:39,984 --> 00:27:42,430
You don't need to think about it.

483
00:27:42,430 --> 00:27:44,949
See some getToken operation it is.

484
00:27:44,949 --> 00:27:47,054
So for this list e,

485
00:27:47,054 --> 00:27:49,824
by seeing them, right, you can understand that.

486
00:27:49,824 --> 00:27:53,395
So Paul Butler operation whether I need to use passengers or not,

487
00:27:53,395 --> 00:27:56,155
by using client object.

488
00:27:56,155 --> 00:27:57,429
Right?

489
00:27:57,429 --> 00:28:04,734
So this is the way how you can use capacitors while working with your objects.

490
00:28:04,734 --> 00:28:07,719
Specifically while running queries yard

491
00:28:07,719 --> 00:28:10,784
use buzz monitors query said nothing but like list all the objects.

492
00:28:10,784 --> 00:28:13,789
So you're going to use and query for your analysts are co-owned using

493
00:28:13,789 --> 00:28:16,985
moto three and you're getting information from there, right?

494
00:28:16,985 --> 00:28:19,309
Only in that case you have to use past senators.

495
00:28:19,309 --> 00:28:23,450
Suppose if I want to create a bucket, don't use positive.

496
00:28:23,450 --> 00:28:24,634
You have to remember this point,

497
00:28:24,634 --> 00:28:28,070
passing eaters or helpful only while running queries.

498
00:28:28,070 --> 00:28:30,409
That means whenever if you're getting,

499
00:28:30,409 --> 00:28:35,120
whenever if you're trying to get some information about existing thing,

500
00:28:35,120 --> 00:28:37,954
then at that time you have to think about pollinators.

501
00:28:37,954 --> 00:28:40,520
And before going to use past data just to go and work

502
00:28:40,520 --> 00:28:43,564
anywhere official documentation and select by Senator.

503
00:28:43,564 --> 00:28:47,044
And another just see all the operations which are available.

504
00:28:47,044 --> 00:28:50,120
So if any operation which you're performing,

505
00:28:50,120 --> 00:28:52,639
if that operation is present in the buzz monitor,

506
00:28:52,639 --> 00:28:55,550
then you have to use past data for that Butler operation.

507
00:28:55,550 --> 00:29:00,289
And finally, remember that no need of pass senator for resource object.

508
00:29:00,289 --> 00:29:05,104
And one more thing, resource is not available for each and every service of your AWS.

509
00:29:05,104 --> 00:29:06,290
It is restricted.

510
00:29:06,290 --> 00:29:08,300
I'm not a security is as of now,

511
00:29:08,300 --> 00:29:10,534
it is available only for some of the services.

512
00:29:10,534 --> 00:29:14,449
Anyway, for S3, you how resource and client, right?

513
00:29:14,449 --> 00:29:15,815
If you remember these things,

514
00:29:15,815 --> 00:29:20,450
then you can easily write your Python both rescued 41, S3.

515
00:29:20,450 --> 00:29:23,615
So already we know about resource client.

516
00:29:23,615 --> 00:29:25,774
And anyway, under collections we have seen all

517
00:29:25,774 --> 00:29:27,919
we have to use filters while going forward.

518
00:29:27,919 --> 00:29:30,379
We use fetus, right?

519
00:29:30,379 --> 00:29:35,145
So anyway, these filters are also helpful whenever if you are running query a query,

520
00:29:35,145 --> 00:29:36,760
instead of getting all,

521
00:29:36,760 --> 00:29:39,250
if you want to get based on some specific parameter,

522
00:29:39,250 --> 00:29:43,555
based on some delimiter are the time you had to use filters in your S3.

523
00:29:43,555 --> 00:29:45,835
Just now we have seen pollinators.

524
00:29:45,835 --> 00:29:47,844
So while going forward,

525
00:29:47,844 --> 00:29:51,535
we'll go with this one and waiters and meta,

526
00:29:51,535 --> 00:29:54,580
meta of course nothing is there already we have given if

527
00:29:54,580 --> 00:29:57,655
you started your core with resource and if any operation is not present,

528
00:29:57,655 --> 00:30:00,370
then without creating client dogs that you can enter

529
00:30:00,370 --> 00:30:03,880
into client object with the help of meta object.

530
00:30:03,880 --> 00:30:07,309
That say, okay, okay,

531
00:30:07,309 --> 00:30:10,069
I thank you for watching this video.

