1
00:00:00,000 --> 00:00:01,320
Hi friends.

2
00:00:01,320 --> 00:00:04,545
In this video, we are going to see how to automate

3
00:00:04,545 --> 00:00:07,845
the start and stop EC2 instances for your test.

4
00:00:07,845 --> 00:00:11,145
And you don't mend on AWS using lambda function.

5
00:00:11,145 --> 00:00:13,680
So there's just agenda. You're having some tests,

6
00:00:13,680 --> 00:00:17,010
annual event and there suppose you are having some 30 to 40 servers.

7
00:00:17,010 --> 00:00:19,110
Now your requirement is,

8
00:00:19,110 --> 00:00:20,820
I'm in, on those servers,

9
00:00:20,820 --> 00:00:23,100
you are using these 30 servers for suppose

10
00:00:23,100 --> 00:00:29,610
some testing purpose and assume that you are not testing dream suppose, right.

11
00:00:29,610 --> 00:00:35,330
And you need instances are up and running only for certain hours.

12
00:00:35,330 --> 00:00:37,085
All working hours.

13
00:00:37,085 --> 00:00:38,030
Just say.

14
00:00:38,030 --> 00:00:40,400
So. You're working Hobbes working hours are,

15
00:00:40,400 --> 00:00:44,375
suppose some morning eight AM to yearning 5pm.

16
00:00:44,375 --> 00:00:47,030
So only during this time, right?

17
00:00:47,030 --> 00:00:52,490
You want to you need your EC2 instances are up and running.

18
00:00:52,490 --> 00:00:56,390
So out of these interval unit to stop them manually,

19
00:00:56,390 --> 00:00:57,950
if you want to stop, you have to select

20
00:00:57,950 --> 00:01:01,595
your test servers and then you have to start it out. You want to stop.

21
00:01:01,595 --> 00:01:04,070
You can stop it manually on your UI mode.

22
00:01:04,070 --> 00:01:07,415
But it is a time taking process and daily how to do this action.

23
00:01:07,415 --> 00:01:10,565
But I don't want to do this the action daily.

24
00:01:10,565 --> 00:01:12,260
Suppose, if I want to start,

25
00:01:12,260 --> 00:01:14,030
I don't want to start daily.

26
00:01:14,030 --> 00:01:17,045
I want to stop I don't want to stop dialing manually.

27
00:01:17,045 --> 00:01:23,750
Then I want to automate this 30 servers instances start and stop action.

28
00:01:23,750 --> 00:01:24,770
Right?

29
00:01:24,770 --> 00:01:26,585
Then how you can do this?

30
00:01:26,585 --> 00:01:27,530
Okay?

31
00:01:27,530 --> 00:01:28,970
So I guess we're going to do

32
00:01:28,970 --> 00:01:33,500
this action using automation

33
00:01:33,500 --> 00:01:36,259
with the help of your Python moto three and lambda functions.

34
00:01:36,259 --> 00:01:42,815
Ok, so now our assumption is every day I want to start my EC2 instances at 08:00 AM,

35
00:01:42,815 --> 00:01:48,305
that to Monday to Friday only in weekdays working days,

36
00:01:48,305 --> 00:01:51,890
then I want to stop EC2 instances are suppose 5pm,

37
00:01:51,890 --> 00:01:54,665
again, this also Monday to Friday only.

38
00:01:54,665 --> 00:01:57,095
Right? Fine.

39
00:01:57,095 --> 00:02:01,805
So this is to implement this automation script through your lambda.

40
00:02:01,805 --> 00:02:03,455
You have to follow some steps.

41
00:02:03,455 --> 00:02:07,370
Ok, when he first step is create a rule for lambda function.

42
00:02:07,370 --> 00:02:09,785
So y is in our previous video, right?

43
00:02:09,785 --> 00:02:13,520
While going through introduction to your Lambda function,

44
00:02:13,520 --> 00:02:19,790
we came to know that in lambda we can write both O3 in two ways.

45
00:02:19,790 --> 00:02:22,805
One is using with your programmatic access keys,

46
00:02:22,805 --> 00:02:25,415
and one more is using a role.

47
00:02:25,415 --> 00:02:27,695
I mean, whatever the code you are having on your lambda,

48
00:02:27,695 --> 00:02:28,925
if you want to run that,

49
00:02:28,925 --> 00:02:31,250
you should have some access on your required services.

50
00:02:31,250 --> 00:02:34,325
So for that, you can provide your programmatic access keys,

51
00:02:34,325 --> 00:02:36,710
or you can also assign some role two or lambda,

52
00:02:36,710 --> 00:02:42,450
such that lambda will perform the action on your required services based on your role.

53
00:02:42,670 --> 00:02:44,135
Right?

54
00:02:44,135 --> 00:02:45,485
So in your real time,

55
00:02:45,485 --> 00:02:47,660
instead of providing programmatic access keys,

56
00:02:47,660 --> 00:02:49,850
we use generally roles for

57
00:02:49,850 --> 00:02:53,525
lambda function to execute your code which is there on your lambda.

58
00:02:53,525 --> 00:02:54,500
Right?

59
00:02:54,500 --> 00:02:56,570
So that's why a first I'm going to create it all.

60
00:02:56,570 --> 00:02:58,940
So it's already if you have some role, just use it.

61
00:02:58,940 --> 00:03:03,920
I mean, you need a lambda function to execute on your EC2 instances, right?

62
00:03:03,920 --> 00:03:07,790
So that's why in case if you have any role which is

63
00:03:07,790 --> 00:03:12,545
having a policy to work with your EC2 instances, you can use that.

64
00:03:12,545 --> 00:03:14,645
Just assume that I don't have any rule.

65
00:03:14,645 --> 00:03:18,690
Now let me work on my console. I'm going to

66
00:03:20,470 --> 00:03:28,625
Okay, I will go with the IAM right there first, I'll create one role.

67
00:03:28,625 --> 00:03:30,695
The purpose of that Rollies.

68
00:03:30,695 --> 00:03:33,200
If this role is assigned to your lambda,

69
00:03:33,200 --> 00:03:36,815
your lambda will get an access to work with your EC2 instances.

70
00:03:36,815 --> 00:03:40,190
So in that way, how to create a maypole just to go on and go to your IAM.

71
00:03:40,190 --> 00:03:43,505
Then there select roles and create a new role.

72
00:03:43,505 --> 00:03:44,930
Actually how already holding on,

73
00:03:44,930 --> 00:03:46,250
but I want to use new one.

74
00:03:46,250 --> 00:03:47,600
So what is our intention?

75
00:03:47,600 --> 00:03:49,805
We want to assign this role to you or lambda.

76
00:03:49,805 --> 00:03:55,685
So just click on this allo lambda function to call AWS services on your behalf.

77
00:03:55,685 --> 00:03:58,130
Look on that next to permission.

78
00:03:58,130 --> 00:04:03,140
So what are the permissions you want to go for this role while working with your lambda.

79
00:04:03,140 --> 00:04:09,270
So I want to give you an access to walk with only EC2 instances.

80
00:04:09,460 --> 00:04:16,230
Okay? So EC2, full Amazon, EC2, full access.

81
00:04:16,240 --> 00:04:18,830
Even if you want to modify that,

82
00:04:18,830 --> 00:04:21,635
you can use your own policy.

83
00:04:21,635 --> 00:04:24,740
I mean, with the help of policies and rhetoric on gender and we can attach that,

84
00:04:24,740 --> 00:04:26,795
but I'm using existing policy.

85
00:04:26,795 --> 00:04:28,490
Then.

86
00:04:28,490 --> 00:04:34,430
If you want, you can take this lambda role.

87
00:04:34,430 --> 00:04:38,340
Is it to full access?

88
00:04:40,300 --> 00:04:42,950
That has given unroll lemma.

89
00:04:42,950 --> 00:04:48,290
I am giving lambda role to

90
00:04:48,290 --> 00:04:56,075
work with EC2 instances.

91
00:04:56,075 --> 00:04:59,795
Not say I'm creating a role.

92
00:04:59,795 --> 00:05:02,885
Now in my hand, I have a role.

93
00:05:02,885 --> 00:05:05,990
Using this role, I can write some code in lambda and I can

94
00:05:05,990 --> 00:05:09,665
execute that without having any credentials, programmatic access keys.

95
00:05:09,665 --> 00:05:12,485
For that I have created a role, right?

96
00:05:12,485 --> 00:05:18,290
Then second thing into lambda function using moto three, right?

97
00:05:18,290 --> 00:05:20,510
So based before going to write you a lambda function,

98
00:05:20,510 --> 00:05:22,155
actually we are going to work with

99
00:05:22,155 --> 00:05:25,835
some EC2 instances which are there for the word test environment, right?

100
00:05:25,835 --> 00:05:28,819
So let me go and see my EC2 Console,

101
00:05:28,819 --> 00:05:31,070
which instances are running?

102
00:05:31,070 --> 00:05:34,460
Just loginData Uriel demo having some 13 stanzas.

103
00:05:34,460 --> 00:05:36,785
As of now I'm having only two, right?

104
00:05:36,785 --> 00:05:39,095
So how can I identify which instances under

105
00:05:39,095 --> 00:05:42,200
test environment and which instances under different environment.

106
00:05:42,200 --> 00:05:44,120
So, you know, you have a tag concept.

107
00:05:44,120 --> 00:05:46,684
Now let me create for my required instances,

108
00:05:46,684 --> 00:05:49,980
tagged him as any run when t equals two.

109
00:05:50,680 --> 00:05:53,585
Let's create one more tag.

110
00:05:53,585 --> 00:06:00,005
So I'm taking a new dawn meant as some test, test and environmental.

111
00:06:00,005 --> 00:06:03,990
Then let me create tag for second instance also.

112
00:06:10,980 --> 00:06:16,030
Now these two instances are there under my test. Any RON mentor.

113
00:06:16,030 --> 00:06:18,145
Ok, fine.

114
00:06:18,145 --> 00:06:22,720
Now we have to write a lambda function using moto three.

115
00:06:22,720 --> 00:06:25,420
Suppose to start our star Posada is first I will go and

116
00:06:25,420 --> 00:06:28,420
write a script to start your EC2 instances.

117
00:06:28,420 --> 00:06:31,960
Same way you can proceed with the word stop EC2 instances.

118
00:06:31,960 --> 00:06:35,110
Okay, now let me open my lambda.

119
00:06:35,110 --> 00:06:42,025
So before that, once again,

120
00:06:42,025 --> 00:06:44,754
let me clearly take my ENV.

121
00:06:44,754 --> 00:06:46,480
These two are my dad's, right.

122
00:06:46,480 --> 00:06:47,740
Let me open this hazard is,

123
00:06:47,740 --> 00:06:49,929
and I want to open a new console.

124
00:06:49,929 --> 00:06:53,370
And I want to enter into my lambda surveys.

125
00:06:53,370 --> 00:06:57,050
So here I am going to I del lambda function.

126
00:06:57,050 --> 00:06:58,550
So the purpose of lambda function,

127
00:06:58,550 --> 00:07:03,650
suppose we are going to start some EC2 instances which are there on a test environment.

128
00:07:03,650 --> 00:07:05,720
So he's here to start,

129
00:07:05,720 --> 00:07:07,490
you have the right one lambda function to stop,

130
00:07:07,490 --> 00:07:08,900
you have to write one more Lambda function.

131
00:07:08,900 --> 00:07:10,640
I'm going to write in that way.

132
00:07:10,640 --> 00:07:15,260
Let me create a new lambda function, create function.

133
00:07:15,260 --> 00:07:19,085
So I want to write the core from scratch.

134
00:07:19,085 --> 00:07:27,110
Let me select this option and knew the name as autostart test.

135
00:07:27,110 --> 00:07:37,400
You can give it any name, EC2 instances, the rate eight.

136
00:07:37,400 --> 00:07:39,574
That's in my requirement.

137
00:07:39,574 --> 00:07:42,680
Now, let's take python rationales.

138
00:07:42,680 --> 00:07:46,535
You are required to Russian I'm taking two 0.7c then create a function.

139
00:07:46,535 --> 00:07:49,100
So after creation of your function,

140
00:07:49,100 --> 00:07:52,640
right, you have to write your code on how to execute your code.

141
00:07:52,640 --> 00:07:55,625
To execute your code, you should have some privileges.

142
00:07:55,625 --> 00:07:59,885
So that privileges for your lambda function you are going to get from the role.

143
00:07:59,885 --> 00:08:02,989
That's why offer creation of your Lambda function.

144
00:08:02,989 --> 00:08:07,775
Let me go down and see here somewhere you are having a Rules option,

145
00:08:07,775 --> 00:08:11,225
execute role, use an existing role.

146
00:08:11,225 --> 00:08:13,400
So just know we created some role, right?

147
00:08:13,400 --> 00:08:23,720
What is that role? Lambda role to work with EC2 instances. Save it.

148
00:08:23,720 --> 00:08:27,560
Okay, so if you want write some description, you can write it.

149
00:08:27,560 --> 00:08:30,995
So I want to take suppose execution time as five minutes,

150
00:08:30,995 --> 00:08:33,470
okay, fine, when some three seconds, that's your wish.

151
00:08:33,470 --> 00:08:35,700
Let me save that also.

152
00:08:36,850 --> 00:08:40,325
Now, come to your editor.

153
00:08:40,325 --> 00:08:41,315
Okay.

154
00:08:41,315 --> 00:08:42,965
Now you need your boat o3.

155
00:08:42,965 --> 00:08:47,450
So import moto three, right?

156
00:08:47,450 --> 00:08:51,065
So I'm adding go to implement.

157
00:08:51,065 --> 00:08:55,160
So guys here, while writing generally or Python Bhutto three scraped,

158
00:08:55,160 --> 00:08:58,190
you are creating your own session or customization.

159
00:08:58,190 --> 00:09:00,305
Medea, you no need to create your session,

160
00:09:00,305 --> 00:09:05,750
Custom session or your own session because we assign a role to your lambda automatically,

161
00:09:05,750 --> 00:09:09,470
you are moto three will create a required session from the role.

162
00:09:09,470 --> 00:09:10,910
You don't bother about that.

163
00:09:10,910 --> 00:09:14,525
So that's why directly create your required console.

164
00:09:14,525 --> 00:09:17,990
So I'm going to create my UCT console in terms of,

165
00:09:17,990 --> 00:09:22,805
let's say suppose using resource, we can go with anyone.

166
00:09:22,805 --> 00:09:24,020
But I'm going with this one.

167
00:09:24,020 --> 00:09:26,390
Moto three dot.

168
00:09:26,390 --> 00:09:32,655
Let's take a resource.

169
00:09:32,655 --> 00:09:36,369
So service name, EC2.

170
00:09:36,369 --> 00:09:46,570
And I wanted to work under region name as US East one.

171
00:09:46,570 --> 00:09:49,420
Right? Fine.

172
00:09:49,420 --> 00:09:50,800
First I want to collect

173
00:09:50,800 --> 00:09:55,225
all my EC2 instances which are there under develops or a test environment.

174
00:09:55,225 --> 00:09:57,310
So for that, right,

175
00:09:57,310 --> 00:10:06,835
for each instance in your EC2 Console using the source object dot instances, dot.

176
00:10:06,835 --> 00:10:12,040
If I take all, you will get all instances without having any, without checking.

177
00:10:12,040 --> 00:10:15,060
Which instance is related with the environment.

178
00:10:15,060 --> 00:10:17,390
So for that you have to use a filter.

179
00:10:17,390 --> 00:10:23,390
Right? Then feeder offer that filters equals three.

180
00:10:23,390 --> 00:10:24,560
How to write a list of filter?

181
00:10:24,560 --> 00:10:31,130
So now I want to create a my filter that is test to filter destiny Ron meant filter,

182
00:10:31,130 --> 00:10:32,690
I am taking, this is my,

183
00:10:32,690 --> 00:10:36,080
I mean meson, my requirement I am selecting suitable variable names.

184
00:10:36,080 --> 00:10:39,680
And you know, filter syntax is a dictionary which consists of by

185
00:10:39,680 --> 00:10:45,090
default name as one key and the value size.

186
00:10:45,790 --> 00:10:50,585
One more key. And this is the standard syntax for your filter while creating.

187
00:10:50,585 --> 00:10:53,765
And here, based on tags you are filtering right?

188
00:10:53,765 --> 00:10:56,240
Tag colon. So what is your required key?

189
00:10:56,240 --> 00:11:02,450
Env? Let's provide that e and v here.

190
00:11:03,330 --> 00:11:14,380
Then values. Now let me take values or test and Iran meant, right.

191
00:11:14,380 --> 00:11:15,595
That's it.

192
00:11:15,595 --> 00:11:17,110
Now for time being,

193
00:11:17,110 --> 00:11:21,565
let me directly print who just instance IDs.

194
00:11:21,565 --> 00:11:23,770
Okay, let me save this.

195
00:11:23,770 --> 00:11:26,620
And guess, after saving your code,

196
00:11:26,620 --> 00:11:28,390
you how to test it. Suppose.

197
00:11:28,390 --> 00:11:33,040
So, by default it needs at least one dummy event.

198
00:11:33,040 --> 00:11:36,505
So let me take sample event.

199
00:11:36,505 --> 00:11:39,010
You don't bother about this as of now.

200
00:11:39,010 --> 00:11:41,890
We will work out with this while going forward.

201
00:11:41,890 --> 00:11:44,600
Now let me test it.

202
00:11:46,260 --> 00:11:49,330
It's executing other that yeah,

203
00:11:49,330 --> 00:11:50,605
it has been executed.

204
00:11:50,605 --> 00:11:53,360
Let's go and see the details here.

205
00:11:53,820 --> 00:11:58,044
C, you're able to fetch your instance IDs,

206
00:11:58,044 --> 00:12:00,490
which are related with the word test a neuron.

207
00:12:00,490 --> 00:12:02,155
When suppose I am taking,

208
00:12:02,155 --> 00:12:06,760
I am going to modify this value or an environment.

209
00:12:06,760 --> 00:12:09,550
I suppose this is broad and Iran meant.

210
00:12:09,550 --> 00:12:10,795
Okay.

211
00:12:10,795 --> 00:12:14,530
Now see that if I read on the core previously or getting to insurance studies,

212
00:12:14,530 --> 00:12:18,290
if I read and you will get only one instance ID.

213
00:12:21,630 --> 00:12:24,850
Let me check it.

214
00:12:24,850 --> 00:12:26,905
Did they say oh, this?

215
00:12:26,905 --> 00:12:28,670
Yes.

216
00:12:29,700 --> 00:12:37,795
Yeah. Let me save this.

217
00:12:37,795 --> 00:12:40,705
Yeah. Radon.

218
00:12:40,705 --> 00:12:43,760
See the output here.

219
00:12:56,580 --> 00:13:00,280
So you are tags or test ENV,

220
00:13:00,280 --> 00:13:03,595
fine, would end up lay the feeders.

221
00:13:03,595 --> 00:13:07,530
So, so that's why you are getting all the values.

222
00:13:07,530 --> 00:13:12,905
So you have to apply. No, let me save it and rerun it.

223
00:13:12,905 --> 00:13:15,140
Now I am running that.

224
00:13:15,140 --> 00:13:18,140
So it's minus take Identify the filter here.

225
00:13:18,140 --> 00:13:20,780
So we have to apply a filter here in this portion, right?

226
00:13:20,780 --> 00:13:23,420
Okay, hi, ran that. Now go and see the output.

227
00:13:23,420 --> 00:13:25,550
You are getting only one instance ID now.

228
00:13:25,550 --> 00:13:27,260
That means based on your requirement,

229
00:13:27,260 --> 00:13:31,130
you are able to separate your instances from your required environment.

230
00:13:31,130 --> 00:13:34,430
Now let me modify this to tag to now test.

231
00:13:34,430 --> 00:13:38,990
Because I want to work with at least two servers so that you will get idea.

232
00:13:38,990 --> 00:13:43,040
Now, as of now you are having only one instance ID because previously

233
00:13:43,040 --> 00:13:46,490
one of the your instance environment was dealt nowadays, test.

234
00:13:46,490 --> 00:13:47,915
Now I'm going to rerun,

235
00:13:47,915 --> 00:13:49,850
but see the output, what you are going to get it.

236
00:13:49,850 --> 00:13:51,515
Now we are getting two instance IDs.

237
00:13:51,515 --> 00:13:53,450
So my intention is first of all,

238
00:13:53,450 --> 00:13:55,040
you are able to separate

239
00:13:55,040 --> 00:14:01,325
your test instance IDs or test EC2 instances from your all instances.

240
00:14:01,325 --> 00:14:03,170
Yes, we got that.

241
00:14:03,170 --> 00:14:04,490
Right.

242
00:14:04,490 --> 00:14:06,905
Okay, sir, to stop your EC2 instances,

243
00:14:06,905 --> 00:14:09,620
we already explained different ways, right?

244
00:14:09,620 --> 00:14:18,245
You can go through our previous easy to parts, right?

245
00:14:18,245 --> 00:14:20,315
We have different parts to work with. Easy to write.

246
00:14:20,315 --> 00:14:23,880
Let me go with select two hour.

247
00:14:26,590 --> 00:14:30,500
Where is it we are working with now these scores, right?

248
00:14:30,500 --> 00:14:32,130
Yeah, fine.

249
00:14:34,530 --> 00:14:37,810
So under curriculum, so you directly,

250
00:14:37,810 --> 00:14:41,125
you can get your course doodles c here.

251
00:14:41,125 --> 00:14:44,200
To stop your EC2 instances,

252
00:14:44,200 --> 00:14:46,450
write multiple instances on single instances we,

253
00:14:46,450 --> 00:14:48,160
we follow different procedures.

254
00:14:48,160 --> 00:14:50,380
I mean, we have different ways.

255
00:14:50,380 --> 00:14:51,610
So radically simple way.

256
00:14:51,610 --> 00:14:53,680
I'm going to use it here.

257
00:14:53,680 --> 00:14:55,540
Stop or start.

258
00:14:55,540 --> 00:14:56,245
Okay?

259
00:14:56,245 --> 00:15:02,110
No, I'm doing you are each manually first,

260
00:15:02,110 --> 00:15:06,070
I'm checking whether it is going to work Cournot, start.

261
00:15:06,070 --> 00:15:08,470
Right, save it.

262
00:15:08,470 --> 00:15:10,210
Currently either in turn,

263
00:15:10,210 --> 00:15:12,265
status is top predators.

264
00:15:12,265 --> 00:15:16,160
First, I will check it manually where it is working or not.

265
00:15:19,770 --> 00:15:22,615
Still it's working here, it's down.

266
00:15:22,615 --> 00:15:24,970
Let me go and refresh here and see the output.

267
00:15:24,970 --> 00:15:28,240
Now that in pending status means after sometime the hunted they will come to,

268
00:15:28,240 --> 00:15:29,770
you are running status.

269
00:15:29,770 --> 00:15:30,670
Ok.

270
00:15:30,670 --> 00:15:35,980
So now just to wait and I want to stop them and I want to come back here.

271
00:15:35,980 --> 00:15:38,500
Meanwhile, what we will do is say, okay,

272
00:15:38,500 --> 00:15:41,740
so now in our hand we have a core to stop.

273
00:15:41,740 --> 00:15:45,790
You are EC2 instances based on your required enviornment.

274
00:15:45,790 --> 00:15:48,415
Next, finally, you have to schedule a job.

275
00:15:48,415 --> 00:15:49,630
So as of no,

276
00:15:49,630 --> 00:15:53,560
we are running JavaScript manually if you want to start your EC2 instances,

277
00:15:53,560 --> 00:15:57,655
but automatically our Python moto three in your lambda,

278
00:15:57,655 --> 00:15:59,740
whatever it is there that should trigger,

279
00:15:59,740 --> 00:16:02,490
that should run automatically at 08:00 AM,

280
00:16:02,490 --> 00:16:03,965
two from Monday to Friday.

281
00:16:03,965 --> 00:16:06,455
So in that way, you have to schedule your job.

282
00:16:06,455 --> 00:16:10,205
Okay. Not to schedule your job, right.

283
00:16:10,205 --> 00:16:16,025
Just observe that. Go to your services and go to your CloudWatch.

284
00:16:16,025 --> 00:16:18,890
So guys here also you can trigger your job.

285
00:16:18,890 --> 00:16:20,885
Okay, you how your cloud watch here.

286
00:16:20,885 --> 00:16:23,225
But this is the easiest way and better way.

287
00:16:23,225 --> 00:16:25,475
Always. O, I will choose this one.

288
00:16:25,475 --> 00:16:27,290
I mean, I will prefer this one just I will go to

289
00:16:27,290 --> 00:16:30,590
CloudWatch and I will create a rule here such that

290
00:16:30,590 --> 00:16:37,339
my lambda function will trigger or run whenever that particular time occurs.

291
00:16:37,339 --> 00:16:41,465
So after entering into a Cloud was just to go to rules.

292
00:16:41,465 --> 00:16:42,815
Okay.

293
00:16:42,815 --> 00:16:44,480
So yeah, they are running now.

294
00:16:44,480 --> 00:16:46,380
I want to stop them.

295
00:16:52,930 --> 00:16:54,530
Stopping.

296
00:16:54,530 --> 00:16:55,325
That's fine.

297
00:16:55,325 --> 00:16:57,275
So guys, now we are,

298
00:16:57,275 --> 00:17:00,080
whatever the lambda function we are having in our hand,

299
00:17:00,080 --> 00:17:02,840
that lambda function we are going to schedule like, you know,

300
00:17:02,840 --> 00:17:06,365
on your Unix-like systems you have a cron jobs candlelight symbol.

301
00:17:06,365 --> 00:17:08,525
So I want to trigger this script.

302
00:17:08,525 --> 00:17:09,770
I wonder run this script.

303
00:17:09,770 --> 00:17:11,960
I want to exclude the script at particular time.

304
00:17:11,960 --> 00:17:14,990
So for that you hard to schedule the job so far

305
00:17:14,990 --> 00:17:18,675
that just go to your CloudWatch and rules, create your rule.

306
00:17:18,675 --> 00:17:21,610
Okay, so guys here, two types of rules are there.

307
00:17:21,610 --> 00:17:25,120
One is event, a patrimony schedule as are not just go with schedule.

308
00:17:25,120 --> 00:17:30,070
So in in a while we'll go and work with even the pat on aswell schedule.

309
00:17:30,070 --> 00:17:30,700
Right?

310
00:17:30,700 --> 00:17:32,380
And again in schedule also,

311
00:17:32,380 --> 00:17:38,245
you want to run the software every five minutes or after some five hours,

312
00:17:38,245 --> 00:17:40,255
orange and of that,

313
00:17:40,255 --> 00:17:48,385
just to use some cron job expression such that it will automatically trigger your job,

314
00:17:48,385 --> 00:17:50,290
automatically run your job.

315
00:17:50,290 --> 00:17:54,250
So here you have to form something such that it has to work.

316
00:17:54,250 --> 00:17:55,495
Okay?

317
00:17:55,495 --> 00:17:57,865
Now how you can form this, i mean,

318
00:17:57,865 --> 00:18:01,545
you had to write some expression such that it has to form.

319
00:18:01,545 --> 00:18:06,080
I mean, it has to represent eight AM from Monday to Friday.

320
00:18:06,080 --> 00:18:10,310
So if you don't know, just click on this here, learn more.

321
00:18:10,310 --> 00:18:13,445
It may lead to your official documentation.

322
00:18:13,445 --> 00:18:19,295
It should of that will also having some yeah.

323
00:18:19,295 --> 00:18:22,250
Let me take this. I will do this.

324
00:18:22,250 --> 00:18:25,865
So we have first scheduled expression for rules.

325
00:18:25,865 --> 00:18:27,005
What are the rules here and having?

326
00:18:27,005 --> 00:18:28,595
So for cron job expression,

327
00:18:28,595 --> 00:18:31,130
you are trying to work with con job.

328
00:18:31,130 --> 00:18:33,740
So in cron job, if observed here, how many fields are there?

329
00:18:33,740 --> 00:18:39,080
123456, then what is the meaning of each and every field?

330
00:18:39,080 --> 00:18:42,005
See first, if we listen minute, second hovers,

331
00:18:42,005 --> 00:18:43,430
then day of the month,

332
00:18:43,430 --> 00:18:47,600
month, day of week, okay, year.

333
00:18:47,600 --> 00:18:48,920
Ok.

334
00:18:48,920 --> 00:18:50,780
So now every year,

335
00:18:50,780 --> 00:18:53,330
suppose that for you just to make it as a star at last,

336
00:18:53,330 --> 00:18:55,085
then here question mark, is there no.

337
00:18:55,085 --> 00:18:58,590
So I will write cron jobs operatory first.

338
00:18:59,200 --> 00:19:02,285
So I want to write some pattern here,

339
00:19:02,285 --> 00:19:06,875
expression here such that it has to represent every Monday to Friday, 08:00 AM.

340
00:19:06,875 --> 00:19:13,190
So you're having suppose there 123456 fields.

341
00:19:13,190 --> 00:19:17,615
Let's take 123456.

342
00:19:17,615 --> 00:19:22,400
Ok. Now, foster families minute.

343
00:19:22,400 --> 00:19:25,310
So I want to start exactly at 08:00 AM.

344
00:19:25,310 --> 00:19:28,070
Then secondly is Howard eight.

345
00:19:28,070 --> 00:19:28,895
Okay.

346
00:19:28,895 --> 00:19:30,290
Then what about third field?

347
00:19:30,290 --> 00:19:33,005
You are having a day of the month.

348
00:19:33,005 --> 00:19:36,710
So I want to start every day, suppose.

349
00:19:36,710 --> 00:19:38,850
Okay.

350
00:19:39,280 --> 00:19:41,675
Day of the month, okay,

351
00:19:41,675 --> 00:19:43,730
I'm writing suppose star,

352
00:19:43,730 --> 00:19:46,400
then month, every month,

353
00:19:46,400 --> 00:19:48,155
I want to do that.

354
00:19:48,155 --> 00:19:51,005
Then day of the week.

355
00:19:51,005 --> 00:19:53,225
Suppose if you have during a Sunday to Saturday,

356
00:19:53,225 --> 00:19:56,555
but I want Monday to Friday, right?

357
00:19:56,555 --> 00:19:58,115
So if you want to write Monday to Friday,

358
00:19:58,115 --> 00:20:01,430
how you can write it, you can write here already, is there no.

359
00:20:01,430 --> 00:20:07,020
So simply can copy this one also. Monday to Friday.

360
00:20:12,640 --> 00:20:21,440
Then. Sorry. Last one is what is the having ear right.

361
00:20:21,440 --> 00:20:24,030
Every year I want to run it.

362
00:20:26,080 --> 00:20:28,220
Fine.

363
00:20:28,220 --> 00:20:31,160
Now guys, in case if you are getting convenient just to

364
00:20:31,160 --> 00:20:34,560
go through this so that you can get how you can use that.

365
00:20:35,170 --> 00:20:37,085
Ok.

366
00:20:37,085 --> 00:20:43,530
Fine. Now this is the expression to start the worker code at Monday to Friday.

367
00:20:44,500 --> 00:20:50,705
Monday to Friday, and Monday to Friday everyday, eight AM.

368
00:20:50,705 --> 00:20:55,445
Okay, so now this is the expression I required forum,

369
00:20:55,445 --> 00:20:58,370
our job, just copy and paste it.

370
00:20:58,370 --> 00:21:01,910
So now it is going to represent here Monday.

371
00:21:01,910 --> 00:21:05,180
Suppose next, when it will occur means Monday as of now,

372
00:21:05,180 --> 00:21:06,560
what is the time now suppose, I'm sorry,

373
00:21:06,560 --> 00:21:07,940
this is in IST,

374
00:21:07,940 --> 00:21:09,095
abilities in USD, right?

375
00:21:09,095 --> 00:21:09,695
No wrong.

376
00:21:09,695 --> 00:21:16,445
So as per USD will run on 13th May eighth AM GMT, right?

377
00:21:16,445 --> 00:21:19,685
So this is the interval this is going to represent.

378
00:21:19,685 --> 00:21:21,560
So after writing your expression here,

379
00:21:21,560 --> 00:21:24,845
you can also understand from the below triggers values.

380
00:21:24,845 --> 00:21:26,420
So it is going to do next or ten triggers,

381
00:21:26,420 --> 00:21:28,235
I mean, but when it will run this code,

382
00:21:28,235 --> 00:21:32,660
so for the 3D giving next ten intervals, that's fine.

383
00:21:32,660 --> 00:21:34,205
Okay.

384
00:21:34,205 --> 00:21:39,545
So, but now I can't wait up to tomorrow, 08:00 AM, right?

385
00:21:39,545 --> 00:21:41,705
So what I am doing is the HIPAA expression.

386
00:21:41,705 --> 00:21:49,025
So instead of that, just I am giving after one-meter how-to start my code.

387
00:21:49,025 --> 00:21:52,475
So as of now it instances are installed status, right?

388
00:21:52,475 --> 00:21:54,920
If you wait for one minute automatically,

389
00:21:54,920 --> 00:21:57,245
you are instances will come up.

390
00:21:57,245 --> 00:22:01,400
So there's often writing your pattern here,

391
00:22:01,400 --> 00:22:04,400
schedule, it just added target here for

392
00:22:04,400 --> 00:22:08,225
which lambda function you are going to assign this chron job.

393
00:22:08,225 --> 00:22:10,055
See that?

394
00:22:10,055 --> 00:22:15,300
Autostart test, EC2 instances eight AM.

395
00:22:15,610 --> 00:22:17,090
Ok.

396
00:22:17,090 --> 00:22:18,785
So as of now I don't bother about this.

397
00:22:18,785 --> 00:22:20,315
You just use default values.

398
00:22:20,315 --> 00:22:22,745
Ok, we are not giving any input.

399
00:22:22,745 --> 00:22:23,885
Okay?

400
00:22:23,885 --> 00:22:25,505
Just keep this as this.

401
00:22:25,505 --> 00:22:27,965
While going for I will discuss each and everything.

402
00:22:27,965 --> 00:22:29,945
Just configure details.

403
00:22:29,945 --> 00:22:30,905
Name.

404
00:22:30,905 --> 00:22:33,245
So for rule also, you have to give some name. That's it.

405
00:22:33,245 --> 00:22:36,860
Let me take autostart,

406
00:22:36,860 --> 00:22:42,785
EC2, test incense, test instances rule.

407
00:22:42,785 --> 00:22:43,490
That's it.

408
00:22:43,490 --> 00:22:46,010
If you want try some description you can write.

409
00:22:46,010 --> 00:22:49,085
Start enabled just to create a rule.

410
00:22:49,085 --> 00:22:51,530
Rule has been created.

411
00:22:51,530 --> 00:22:55,890
Okay, now, I wonder what the, what is the rule?

412
00:22:58,180 --> 00:23:00,920
So if you go with your rule,

413
00:23:00,920 --> 00:23:05,915
right, fix a rate of one minute.

414
00:23:05,915 --> 00:23:09,485
Offer one minute automatically you are instances will trigger.

415
00:23:09,485 --> 00:23:12,800
Just wait. Offer one minute.

416
00:23:12,800 --> 00:23:14,390
Okay. It will take one minute time mater

417
00:23:14,390 --> 00:23:16,985
one-meter automatically it will, they will trigger.

418
00:23:16,985 --> 00:23:20,030
But while applying our exert concept,

419
00:23:20,030 --> 00:23:23,255
you have to write your cron job in this way and you have to save it.

420
00:23:23,255 --> 00:23:26,825
So after checking this,

421
00:23:26,825 --> 00:23:30,125
yeah, see now they are automatically coming up.

422
00:23:30,125 --> 00:23:35,060
Because you've given a pattern as one might offer one minute to try to start.

423
00:23:35,060 --> 00:23:36,455
Right?

424
00:23:36,455 --> 00:23:39,020
So this is the way how you can do.

425
00:23:39,020 --> 00:23:41,030
But in your real time, right?

426
00:23:41,030 --> 00:23:42,260
As per our example,

427
00:23:42,260 --> 00:23:44,990
you should not go and start this out or every one minute initiative

428
00:23:44,990 --> 00:23:48,035
that we have to follow this pattern,

429
00:23:48,035 --> 00:23:54,995
you just save this pattern and we can execute this vector.

430
00:23:54,995 --> 00:23:57,785
Ok, now this easy. What pattern?

431
00:23:57,785 --> 00:24:00,305
Now if you have done here conjugate expression, it is there.

432
00:24:00,305 --> 00:24:02,990
Now based on this intervals automatically my instances

433
00:24:02,990 --> 00:24:06,020
will start at every Monday to Friday,

434
00:24:06,020 --> 00:24:08,345
every day, 80 AM.

435
00:24:08,345 --> 00:24:10,085
That's it.

436
00:24:10,085 --> 00:24:11,810
So it's just a four.

437
00:24:11,810 --> 00:24:15,335
You are understanding what we did for our cases.

438
00:24:15,335 --> 00:24:18,650
First, we need a role for your lambda.

439
00:24:18,650 --> 00:24:28,070
So why we are using this role means to get access of your AWS required service.

440
00:24:28,070 --> 00:24:36,920
So in our case, EC2 through moto three.

441
00:24:36,920 --> 00:24:39,920
So after creation of role just to create

442
00:24:39,920 --> 00:24:44,220
a lambda function that is based on lambda function call.

443
00:24:47,080 --> 00:24:49,805
So it is based on your requirement.

444
00:24:49,805 --> 00:24:58,050
So at the same time, don't forget to assign previously created roll.

445
00:25:01,540 --> 00:25:10,940
Okay, then offer that scheduler job in terms of your con job expression.

446
00:25:10,940 --> 00:25:13,370
So how do you learn about your cron job?

447
00:25:13,370 --> 00:25:16,010
It is they're officially in our official documentation

448
00:25:16,010 --> 00:25:19,770
of your AWS directly can understand by going through this.

449
00:25:20,050 --> 00:25:25,805
Ok. Now guys, you implemented only 40 watts start.

450
00:25:25,805 --> 00:25:29,645
Then what about stop wearing your lambda function.

451
00:25:29,645 --> 00:25:33,365
So same core, Exactly. Okay.

452
00:25:33,365 --> 00:25:36,050
Even you don't end up this return because you are not getting money.

453
00:25:36,050 --> 00:25:38,675
If you write something, you can return it.

454
00:25:38,675 --> 00:25:41,090
Actually, you know, any of this here, in this case,

455
00:25:41,090 --> 00:25:47,240
simply I am writing such as something.

456
00:25:47,240 --> 00:25:49,580
So same cone, nothing is it guys,

457
00:25:49,580 --> 00:25:53,075
you just try to implement for stop button 05:00 PM.

458
00:25:53,075 --> 00:25:53,705
Okay?

459
00:25:53,705 --> 00:25:56,539
Just ideas, stop, that's a stop.

460
00:25:56,539 --> 00:26:01,400
And same core are near expression is instead of a to just write nine.

461
00:26:01,400 --> 00:26:10,460
It is morning, right? So 17 told plus 717 so that it will represent for you or pm.

462
00:26:10,460 --> 00:26:11,780
Okay.

463
00:26:11,780 --> 00:26:14,000
Okay, so here's the way how you can automate

464
00:26:14,000 --> 00:26:20,090
your jobs to cron job while working with your lambda function.

465
00:26:20,090 --> 00:26:21,365
Okay?

466
00:26:21,365 --> 00:26:26,880
So if you have any confusion or just posted a message so that I will respond for that.

467
00:26:28,180 --> 00:26:30,065
Okay.

468
00:26:30,065 --> 00:26:33,630
Okay, guys, thank you for watching this video.

