1
00:00:00,000 --> 00:00:06,810
Friends here our concept is executing Python Botox escapes using IAM roles.

2
00:00:06,810 --> 00:00:08,250
See till this moment,

3
00:00:08,250 --> 00:00:10,800
we use programmatic access keys to

4
00:00:10,800 --> 00:00:14,100
execute your Python Bluetooth is keeps on your AWS account.

5
00:00:14,100 --> 00:00:15,495
Now.

6
00:00:15,495 --> 00:00:19,875
You can also exclude or Python Bhutto that escapes using IAM roles.

7
00:00:19,875 --> 00:00:21,645
And why using IAM roles,

8
00:00:21,645 --> 00:00:23,265
just use default session.

9
00:00:23,265 --> 00:00:24,210
That's it.

10
00:00:24,210 --> 00:00:27,404
Now let me open my EC2 instance.

11
00:00:27,404 --> 00:00:32,565
So here already I have a simple script just to list your EC2 instances and its state.

12
00:00:32,565 --> 00:00:34,590
Now let me run this first.

13
00:00:34,590 --> 00:00:38,190
And here we are working with programmatic access keys.

14
00:00:38,190 --> 00:00:42,280
So I already configured programmatic access keys fall profile called root.

15
00:00:42,280 --> 00:00:44,750
And I used that programmatic access keys to create

16
00:00:44,750 --> 00:00:47,555
your enemies management console or session object.

17
00:00:47,555 --> 00:00:51,590
And from that we created EC2 Console using resource object.

18
00:00:51,590 --> 00:00:55,295
Then I'm printing the instance ID and it's the state.

19
00:00:55,295 --> 00:01:02,465
Now what I will do is I am removing dot AWS directory.

20
00:01:02,465 --> 00:01:08,075
That means I am removing configure credentials or profiles from my host.

21
00:01:08,075 --> 00:01:09,305
Now.

22
00:01:09,305 --> 00:01:13,020
Now let me run your script once again.

23
00:01:14,230 --> 00:01:18,635
Now see the output profile not form.

24
00:01:18,635 --> 00:01:22,820
Whatever the profile we use in our Python Buddha three scape profile is

25
00:01:22,820 --> 00:01:27,320
not configured on our host because we entirely removed our edX dot AWS directory.

26
00:01:27,320 --> 00:01:29,630
There are no preference on our host now.

27
00:01:29,630 --> 00:01:34,940
Now, my requirement is I don't want to exclude with programmatic access keys.

28
00:01:34,940 --> 00:01:37,115
That's why I removed or database directory.

29
00:01:37,115 --> 00:01:43,010
Now I want to execute this script using rolls.

30
00:01:43,010 --> 00:01:49,400
That means I have to assign one IAM role for my EC2 instance.

31
00:01:49,400 --> 00:01:53,630
So that from the EC2 instance I can run my Python Bhutto three escaped on.

32
00:01:53,630 --> 00:01:54,875
I can get the result.

33
00:01:54,875 --> 00:01:57,860
Now first let me open my AWS management console.

34
00:01:57,860 --> 00:02:04,010
And here just let me go to IAM and create one IAM rule first.

35
00:02:04,010 --> 00:02:06,800
Now, simply go to IAM,

36
00:02:06,800 --> 00:02:09,725
then click on roles and create role.

37
00:02:09,725 --> 00:02:12,665
So AWS service role I am creating.

38
00:02:12,665 --> 00:02:17,000
And that to whatever the role I am going to create that I want to assign to

39
00:02:17,000 --> 00:02:18,740
my EC2 instance because I want to run

40
00:02:18,740 --> 00:02:22,910
my Python Bluetooth risk of SMI EC2 instance or from my localhost.

41
00:02:22,910 --> 00:02:27,125
That's why I just select easy to then next permissions.

42
00:02:27,125 --> 00:02:30,710
So what are the axis you want to provide for your IAM rule?

43
00:02:30,710 --> 00:02:33,680
We want to provide entire administration access.

44
00:02:33,680 --> 00:02:37,955
Or you want to work with only EC2 instances using this I am rule,

45
00:02:37,955 --> 00:02:41,690
or you want to work with only S3 service using this I am rule.

46
00:02:41,690 --> 00:02:46,700
Now as of now I want to work with only EC2 instances using these IAM role.

47
00:02:46,700 --> 00:02:49,175
Then select your existing rule.

48
00:02:49,175 --> 00:02:53,360
Or you can also create a new policy and you can attach that to your IAM rule.

49
00:02:53,360 --> 00:02:57,620
Now, EC2, full access,

50
00:02:57,620 --> 00:02:59,315
I want to do this IAM rule.

51
00:02:59,315 --> 00:03:05,540
That means whatever service you attached with this role from that service,

52
00:03:05,540 --> 00:03:07,744
you can work with your EC2 instances.

53
00:03:07,744 --> 00:03:09,710
No, I'm not providing any tags if you want,

54
00:03:09,710 --> 00:03:13,655
you can provide then simply provide a role_name.

55
00:03:13,655 --> 00:03:19,880
Both O3 execution for EC2 services.

56
00:03:19,880 --> 00:03:22,010
You can take any rule.

57
00:03:22,010 --> 00:03:24,660
Now let me create a hole.

58
00:03:26,050 --> 00:03:28,535
Role has been created.

59
00:03:28,535 --> 00:03:34,910
So your roll is let

60
00:03:34,910 --> 00:03:39,695
me such 123123 execution for EC2 services.

61
00:03:39,695 --> 00:03:43,055
Now go, do You are easy to console and select any one of you or

62
00:03:43,055 --> 00:03:46,685
EC2 instance from where you want to run you and Python Bhutto that escapes.

63
00:03:46,685 --> 00:03:49,730
Now as of now I have only one instance in this region.

64
00:03:49,730 --> 00:03:52,625
Let me select this instance and go to actions,

65
00:03:52,625 --> 00:03:56,555
and go to instance Settings and go to attach and replace,

66
00:03:56,555 --> 00:03:58,730
attach or replace IAM role.

67
00:03:58,730 --> 00:04:00,380
And here I am.

68
00:04:00,380 --> 00:04:01,475
Bowl is therefore that.

69
00:04:01,475 --> 00:04:07,385
Just click on that and such for your role, whatever you created.

70
00:04:07,385 --> 00:04:08,210
That's it.

71
00:04:08,210 --> 00:04:10,805
Now applied close.

72
00:04:10,805 --> 00:04:16,535
Now, you attach an IAM role to your EC2 instance.

73
00:04:16,535 --> 00:04:18,455
By using that IAM role,

74
00:04:18,455 --> 00:04:20,945
you can able to work with your EC2 instances with

75
00:04:20,945 --> 00:04:24,650
full privileges only for your EC2 instances.

76
00:04:24,650 --> 00:04:28,850
Now go to your EC2 instance.

77
00:04:28,850 --> 00:04:31,385
So where we have our Python Bhutto that escapes.

78
00:04:31,385 --> 00:04:34,160
And for this instance we attach IAM role.

79
00:04:34,160 --> 00:04:38,075
Now, you don't need any profile name here.

80
00:04:38,075 --> 00:04:42,995
See whenever if you're working with IAM roles directly use default session means.

81
00:04:42,995 --> 00:04:46,050
Now let me open our script and modify it.

82
00:04:48,100 --> 00:04:51,110
Comment these two lines.

83
00:04:51,110 --> 00:04:53,495
So whenever if you are using profiles,

84
00:04:53,495 --> 00:04:56,240
then we are creating AWS management console session object.

85
00:04:56,240 --> 00:04:59,135
From that we are creating our required service console.

86
00:04:59,135 --> 00:05:03,155
But whenever if you attach IAM rule to your EC2 instance,

87
00:05:03,155 --> 00:05:06,170
directly create your EC2 Console,

88
00:05:06,170 --> 00:05:09,950
maybe client or resource just by using default session,

89
00:05:09,950 --> 00:05:16,430
that is nothing but what a_3 dot either resource or claimed.

90
00:05:16,430 --> 00:05:20,240
Not say, oh, let me save it and run it.

91
00:05:20,240 --> 00:05:23,105
Now you are going to get to your reserve.

92
00:05:23,105 --> 00:05:26,000
Now your Python boat with recipes executing.

93
00:05:26,000 --> 00:05:31,715
So this is a simple way to execute our Python Bottura escapes using IAM roles.

94
00:05:31,715 --> 00:05:33,350
So while going forward,

95
00:05:33,350 --> 00:05:34,970
we'll also execute our Python,

96
00:05:34,970 --> 00:05:38,285
both racecars from lambda with the help of IBM bolts.

97
00:05:38,285 --> 00:05:41,420
So that is the general practice in your realtime.

98
00:05:41,420 --> 00:05:46,280
So whenever if you're executing your Python boaters risks from lambda through lambda,

99
00:05:46,280 --> 00:05:50,810
then we are using maximum cases we are using I am holds only.

100
00:05:50,810 --> 00:05:53,910
Okay, thank you for watching this video.

