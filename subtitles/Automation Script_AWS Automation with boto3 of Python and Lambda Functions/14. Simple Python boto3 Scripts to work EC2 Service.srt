1
00:00:00,000 --> 00:00:05,310
Friends here we are implementing some simple Python Bourdieu three scapes on EC2 service.

2
00:00:05,310 --> 00:00:07,455
First, let me open my EC2 Console.

3
00:00:07,455 --> 00:00:11,070
So I'm entering into EC2 Console from AWS management console.

4
00:00:11,070 --> 00:00:14,610
And if you have done in newer left aside or having different types of options,

5
00:00:14,610 --> 00:00:18,300
you can see instances, instance pipes, amazed.

6
00:00:18,300 --> 00:00:22,305
What are the available volumes with your account on your particular region.

7
00:00:22,305 --> 00:00:26,265
Then snapshots, security groups, elastic IPs, keypads.

8
00:00:26,265 --> 00:00:29,310
So and having lots of options for each and every option,

9
00:00:29,310 --> 00:00:31,980
you can implement your Python bow to three scripts.

10
00:00:31,980 --> 00:00:35,215
So let me open my sublime text editor first.

11
00:00:35,215 --> 00:00:37,700
I'm going to import Bhutto 3 first.

12
00:00:37,700 --> 00:00:41,555
Then let me create my AWS management console using,

13
00:00:41,555 --> 00:00:46,895
by using profile called root or anywhere how one more profiled called Easy to developer.

14
00:00:46,895 --> 00:00:52,190
That is configured with easily to dollar per IAM user.

15
00:00:52,190 --> 00:00:54,290
So I want to work with the institute than I can

16
00:00:54,290 --> 00:00:57,170
take that easy to dollar per profile also.

17
00:00:57,170 --> 00:01:04,670
Now let me take Bhutto three Session.get fashion than profile name.

18
00:01:04,670 --> 00:01:07,190
C, I want to walk with EC2 service.

19
00:01:07,190 --> 00:01:10,055
So you have to take the IAM user profile name,

20
00:01:10,055 --> 00:01:13,595
which is having access to access your EC2 services.

21
00:01:13,595 --> 00:01:16,710
So I have a institute dollar per profile.

22
00:01:16,710 --> 00:01:22,585
These are how access to you or easy to services.

23
00:01:22,585 --> 00:01:23,515
Fine.

24
00:01:23,515 --> 00:01:28,285
Now let me create my AWS EC2 Console.

25
00:01:28,285 --> 00:01:30,190
C to create your EC2 Console,

26
00:01:30,190 --> 00:01:33,370
we are having both client and resource options.

27
00:01:33,370 --> 00:01:37,045
Let me open your official documentation and let me create,

28
00:01:37,045 --> 00:01:39,850
let me click on your EC2 Console.

29
00:01:39,850 --> 00:01:44,050
And for easy too, we how client and also your resource.

30
00:01:44,050 --> 00:01:47,770
So here I'm implementing Python boat O3 scripts using client.

31
00:01:47,770 --> 00:01:52,150
You just try to implement for same concept using resource object.

32
00:01:52,150 --> 00:01:53,200
Directly.

33
00:01:53,200 --> 00:01:56,770
I'm going to attach the script for service resource object,

34
00:01:56,770 --> 00:02:00,595
but I'm implementing here using client.

35
00:02:00,595 --> 00:02:05,545
So let me create my client TO AWS EC2 service client.

36
00:02:05,545 --> 00:02:09,880
So EC2 Console using client object.

37
00:02:09,880 --> 00:02:12,415
So simply your analysts management console,

38
00:02:12,415 --> 00:02:16,975
client then service name equals to e, C2.

39
00:02:16,975 --> 00:02:19,090
Then select your region.

40
00:02:19,090 --> 00:02:21,430
So for ec2 region name is important.

41
00:02:21,430 --> 00:02:25,705
So I want to work with suppose US West One.

42
00:02:25,705 --> 00:02:29,995
So now in your hand you how you are easy to console,

43
00:02:29,995 --> 00:02:34,570
then what are the scripts you want to implement?

44
00:02:34,570 --> 00:02:37,885
So the very first clip, what I want to implement 0s,

45
00:02:37,885 --> 00:02:41,710
I want to list the available instances in

46
00:02:41,710 --> 00:02:49,025
my vest US West One instances IDs into state and when it was launched.

47
00:02:49,025 --> 00:02:54,890
So I need that. So let me open Sublime Text first.

48
00:02:54,890 --> 00:02:59,105
Let me go to your documents also.

49
00:02:59,105 --> 00:03:02,405
And see we know that in our client,

50
00:03:02,405 --> 00:03:04,700
you are having all options under one set.

51
00:03:04,700 --> 00:03:07,010
So if you go down somewhere,

52
00:03:07,010 --> 00:03:08,810
you how your option.

53
00:03:08,810 --> 00:03:12,080
So you have to look all these options at least once so that you can

54
00:03:12,080 --> 00:03:15,605
remember what is the operation with what option.

55
00:03:15,605 --> 00:03:19,115
So some very hard describe instances.

56
00:03:19,115 --> 00:03:24,870
Describe emails. Are there describe instances just to open that.

57
00:03:25,510 --> 00:03:32,400
So they say describe instances.

58
00:03:34,210 --> 00:03:37,475
So you could take some arguments as of now.

59
00:03:37,475 --> 00:03:38,930
Again, I'm not touching about this.

60
00:03:38,930 --> 00:03:40,880
Arguments will discuss in detail about

61
00:03:40,880 --> 00:03:43,955
these arguments while discussing about collections concept.

62
00:03:43,955 --> 00:03:50,585
That's fine. Now let me take response equals to simply you're easy to console.

63
00:03:50,585 --> 00:03:57,605
Dot u1 operation that is described EC2 instances, describe instances simply.

64
00:03:57,605 --> 00:04:03,755
Now let me print the result of first, see the output.

65
00:04:03,755 --> 00:04:08,255
So we already know that same response with an example.

66
00:04:08,255 --> 00:04:11,490
It is there, here itself in your document itself.

67
00:04:11,530 --> 00:04:16,205
So this is the response if you want to see your output in this format.

68
00:04:16,205 --> 00:04:17,795
So you actually, if you observe here,

69
00:04:17,795 --> 00:04:20,705
the response is there with continuation lines.

70
00:04:20,705 --> 00:04:24,665
Now I want to see in this format then Python three,

71
00:04:24,665 --> 00:04:26,870
you have a module called P print.

72
00:04:26,870 --> 00:04:34,430
So I'm going to import from P print, import pre-print.

73
00:04:34,430 --> 00:04:37,380
Now instead of print, simply if you print,

74
00:04:37,380 --> 00:04:41,635
now see the output, you will get some clarity and output now.

75
00:04:41,635 --> 00:04:44,455
So whenever if you want to see the output detail,

76
00:04:44,455 --> 00:04:46,555
clearly just use pre-print.

77
00:04:46,555 --> 00:04:51,580
So under reservations, some very how instance's first let me take reservations.

78
00:04:51,580 --> 00:04:55,270
So directly I am taking response equals to describe instances.

79
00:04:55,270 --> 00:04:59,575
Then there I am taking reservations.

80
00:04:59,575 --> 00:05:04,030
Now let me print. So initially you need

81
00:05:04,030 --> 00:05:08,710
to execute step-by-step so that you'll get some idea from the output.

82
00:05:08,710 --> 00:05:10,000
Now this is a list.

83
00:05:10,000 --> 00:05:11,905
So that means the response is a list.

84
00:05:11,905 --> 00:05:17,170
Now I am taking here for loop for each item.

85
00:05:17,170 --> 00:05:20,535
In a response.

86
00:05:20,535 --> 00:05:25,410
Let me print each item and see the output.

87
00:05:28,450 --> 00:05:33,470
So you are going to get dictionaries, right?

88
00:05:33,470 --> 00:05:37,050
So up to this disease, one dictionary,

89
00:05:38,230 --> 00:05:44,375
entitling is only one data center because under my us,

90
00:05:44,375 --> 00:05:47,060
only one instance, I hope.

91
00:05:47,060 --> 00:05:50,885
Yeah, only one instance will see that.

92
00:05:50,885 --> 00:05:55,895
Now this entire thing is a dictionary.

93
00:05:55,895 --> 00:05:57,935
So some very hard instances here.

94
00:05:57,935 --> 00:06:00,240
So now let me take

95
00:06:02,200 --> 00:06:09,810
here from this response instances, now observe the output.

96
00:06:13,510 --> 00:06:17,270
Now these instances, he's also a list,

97
00:06:17,270 --> 00:06:20,960
even though you have only one instance information, but that is a list.

98
00:06:20,960 --> 00:06:24,035
That's why you have to take here once again, you our for loop.

99
00:06:24,035 --> 00:06:27,590
For each in stance info.

100
00:06:27,590 --> 00:06:29,690
Non-nuclear. Take this lengthy variable,

101
00:06:29,690 --> 00:06:33,185
you can take your simple variable name.

102
00:06:33,185 --> 00:06:39,365
Now I'm printing, you will each instance info, see the output.

103
00:06:39,365 --> 00:06:44,100
So if you want to get clearly your output just to print.

104
00:06:44,190 --> 00:06:46,270
Now see the output.

105
00:06:46,270 --> 00:06:49,405
What I need. I need my instance ID.

106
00:06:49,405 --> 00:06:51,670
I need my guess image ID if you want,

107
00:06:51,670 --> 00:06:55,075
you can take instance ID is the instance type, is there.

108
00:06:55,075 --> 00:06:56,440
What is the key yield for that?

109
00:06:56,440 --> 00:06:57,669
What is the lunchtime?

110
00:06:57,669 --> 00:07:00,340
So let me print at least what is the image ID

111
00:07:00,340 --> 00:07:03,715
used to launch this EC2 instance and then Instance ID.

112
00:07:03,715 --> 00:07:07,160
So very simple, just simply print.

113
00:07:08,310 --> 00:07:11,800
So let me take first image id.

114
00:07:11,800 --> 00:07:17,905
See I'm printing the image ID used to launch this instance keys.

115
00:07:17,905 --> 00:07:22,300
So here I want to pray that slash n.

116
00:07:22,300 --> 00:07:29,430
Now, the instance ID E is.

117
00:07:31,300 --> 00:07:35,750
Then I want to print out what is the lunchtime for that?

118
00:07:35,750 --> 00:07:38,600
Of course, you can also print your instance tie EPA key name,

119
00:07:38,600 --> 00:07:41,030
lunchtime, whatever the option you want you can print,

120
00:07:41,030 --> 00:07:42,770
I'm printing some of the options.

121
00:07:42,770 --> 00:07:47,165
Then the instance, launch time

122
00:07:47,165 --> 00:07:53,900
e. So here I want to print my lunch time of this EC2 instance dot format.

123
00:07:53,900 --> 00:07:57,455
So simply take your each instance NFO.

124
00:07:57,455 --> 00:08:01,355
Now instead of taking this Lindsey wherever now I'm making it as short,

125
00:08:01,355 --> 00:08:03,290
simply each I'm taking.

126
00:08:03,290 --> 00:08:05,720
So each.

127
00:08:05,720 --> 00:08:09,210
So first I want to print each of,

128
00:08:09,210 --> 00:08:12,560
let me copy directly these key.

129
00:08:13,140 --> 00:08:21,680
Then next, each instance ID.

130
00:08:22,260 --> 00:08:31,430
Then each launch time.

131
00:08:33,870 --> 00:08:40,375
Now see the output would happen.

132
00:08:40,375 --> 00:08:43,310
Unexpected end of file.

133
00:08:45,390 --> 00:08:47,960
That's it.

134
00:08:51,390 --> 00:08:56,440
Now see the output. You are getting your required output.

135
00:08:56,440 --> 00:09:00,800
Let, let me remove these people because I need normal print.

136
00:09:00,810 --> 00:09:05,560
You're getting your information image ID launch ID, ease.

137
00:09:05,560 --> 00:09:07,840
And lunchtime is just,

138
00:09:07,840 --> 00:09:12,895
I want to use a lunchtime as suppose I want to print only date,

139
00:09:12,895 --> 00:09:18,010
then you can format this because this is DATETIME format in your AWS,

140
00:09:18,010 --> 00:09:20,260
whatever the output you are going to get using Python script,

141
00:09:20,260 --> 00:09:21,490
that is datetime object.

142
00:09:21,490 --> 00:09:24,940
So directly you can apply string format time.

143
00:09:24,940 --> 00:09:27,385
So simply percentage.

144
00:09:27,385 --> 00:09:32,830
Percentage is month, then percent, percentile date.

145
00:09:32,830 --> 00:09:35,050
Now let me run and see the output.

146
00:09:35,050 --> 00:09:37,585
See that you are getting only you would date.

147
00:09:37,585 --> 00:09:43,390
So this is very simple Python script just to work with your EC2 instance Service.

148
00:09:43,390 --> 00:09:46,420
Now, let me do one more thing.

149
00:09:46,420 --> 00:09:48,415
Let me work with volumes.

150
00:09:48,415 --> 00:09:51,050
So now let me come at this.

151
00:09:56,250 --> 00:10:02,050
Now. I want to work with one, yeah, one more thing.

152
00:10:02,050 --> 00:10:04,705
Let me select different region.

153
00:10:04,705 --> 00:10:11,240
Suppose I, how ease US East one in that house from different instances.

154
00:10:12,210 --> 00:10:15,100
Say the output C.

155
00:10:15,100 --> 00:10:17,880
So just to differentiate each and every output.

156
00:10:17,880 --> 00:10:20,250
So print.

157
00:10:23,500 --> 00:10:27,480
Instead of here, I will do one thing.

158
00:10:33,460 --> 00:10:35,990
Just for differentiation purpose.

159
00:10:35,990 --> 00:10:37,955
Oh, let me run and see the output.

160
00:10:37,955 --> 00:10:39,455
That's it.

161
00:10:39,455 --> 00:10:42,290
So at having three instances in my US East One,

162
00:10:42,290 --> 00:10:44,960
you're going to get the information for these three instances.

163
00:10:44,960 --> 00:10:48,995
You just try to print the instance ID and also instances state,

164
00:10:48,995 --> 00:10:51,140
some very hokey called state so that you will

165
00:10:51,140 --> 00:10:53,375
get what is the current state of your EC2 instance?

166
00:10:53,375 --> 00:10:56,390
You just try with that. That's fine.

167
00:10:56,390 --> 00:10:59,555
Now, let me comment this score.

168
00:10:59,555 --> 00:11:04,759
Suppose as of now we worked with the EC2 service, EC2 instance.

169
00:11:04,759 --> 00:11:06,410
Now let me work with volumes.

170
00:11:06,410 --> 00:11:07,940
So we have three instances.

171
00:11:07,940 --> 00:11:10,684
That's why Definitely you how tuple three volumes.

172
00:11:10,684 --> 00:11:18,635
Now, let me click on volumes C. All are under ec2 service only.

173
00:11:18,635 --> 00:11:20,930
So already we have our EC2 Console in your hand.

174
00:11:20,930 --> 00:11:23,150
The only thing from EC2 Console,

175
00:11:23,150 --> 00:11:27,710
how we can get our institute incenses First, let me work on US.

176
00:11:27,710 --> 00:11:33,425
West one and C, two list1 volumes.

177
00:11:33,425 --> 00:11:36,260
Definitely somewhere you how option?

178
00:11:36,260 --> 00:11:39,890
Just to go and such volumes is there.

179
00:11:39,890 --> 00:11:42,335
Just click on that and open it.

180
00:11:42,335 --> 00:11:46,175
Similarly, this is also option like describe volumes.

181
00:11:46,175 --> 00:11:47,435
So let me copy it.

182
00:11:47,435 --> 00:11:51,905
So describe volumes also taking some arguments as if not don't worry about them.

183
00:11:51,905 --> 00:11:55,730
Now simply, I am taking response equals to

184
00:11:55,730 --> 00:12:03,785
our EC2 Console using client object dot,

185
00:12:03,785 --> 00:12:06,035
you would describe volumes.

186
00:12:06,035 --> 00:12:07,890
Then let me print.

187
00:12:07,890 --> 00:12:10,340
So I am using p print just to see the output.

188
00:12:10,340 --> 00:12:11,900
Clearly.

189
00:12:11,900 --> 00:12:14,885
See output, you are going to get clearly.

190
00:12:14,885 --> 00:12:17,375
And indeed, suppose what do you need volumes.

191
00:12:17,375 --> 00:12:19,655
Now if you have done the output in this dictionary,

192
00:12:19,655 --> 00:12:21,620
there is a key called volumes.

193
00:12:21,620 --> 00:12:24,950
Take this key here itself.

194
00:12:24,950 --> 00:12:27,720
Now see the output.

195
00:12:27,910 --> 00:12:32,330
This is at least see that attending you how square bracket,

196
00:12:32,330 --> 00:12:33,680
that means this is a list,

197
00:12:33,680 --> 00:12:37,070
whether you have one volume or two volumes or three volumes,

198
00:12:37,070 --> 00:12:38,585
that is always a list.

199
00:12:38,585 --> 00:12:40,820
That's why now Andy's response,

200
00:12:40,820 --> 00:12:49,070
what I'm doing is I'm taking for loop for each item in response.

201
00:12:49,070 --> 00:12:51,140
So if you don't want to write two lines directly,

202
00:12:51,140 --> 00:12:54,125
you can copy this score and Berkeley pasted here itself.

203
00:12:54,125 --> 00:12:56,510
You can guess if you don't want, write two lines.

204
00:12:56,510 --> 00:12:59,015
That is your wish.

205
00:12:59,015 --> 00:13:04,655
Then suppose, let me p print each item.

206
00:13:04,655 --> 00:13:06,980
First, I need to observe the output.

207
00:13:06,980 --> 00:13:09,860
See each item output you are getting for each,

208
00:13:09,860 --> 00:13:11,465
easy to install the volume,

209
00:13:11,465 --> 00:13:14,555
you're getting some information in terms of a dictionary.

210
00:13:14,555 --> 00:13:17,135
Then see that your volume id is there.

211
00:13:17,135 --> 00:13:20,825
What is the volume type? Is that even you can also see availability joan,

212
00:13:20,825 --> 00:13:24,725
Even that information you can also see for your EC2 instance also.

213
00:13:24,725 --> 00:13:28,940
Then what is the for each instance it is attached.

214
00:13:28,940 --> 00:13:31,265
See that intense ideas is there.

215
00:13:31,265 --> 00:13:32,360
Right?

216
00:13:32,360 --> 00:13:35,855
What is the creation time when it was created?

217
00:13:35,855 --> 00:13:38,165
Now let me print that.

218
00:13:38,165 --> 00:13:44,270
So now what I am doing these so here guys,

219
00:13:44,270 --> 00:13:45,935
directly you are getting,

220
00:13:45,935 --> 00:13:48,170
you are listing the first-level itself.

221
00:13:48,170 --> 00:13:51,185
So I am printing for in,

222
00:13:51,185 --> 00:13:55,835
let's say the volume id.

223
00:13:55,835 --> 00:13:58,385
So here I want to print them volume ID.

224
00:13:58,385 --> 00:14:03,500
Then. What is the biopsies,

225
00:14:03,500 --> 00:14:05,690
their sizes, their AGB by default,

226
00:14:05,690 --> 00:14:07,760
this is in terms of GB, right?

227
00:14:07,760 --> 00:14:10,370
What is the state it is in use?

228
00:14:10,370 --> 00:14:13,205
What is available to join when it was created,

229
00:14:13,205 --> 00:14:14,645
is it encrypted? No.

230
00:14:14,645 --> 00:14:15,305
Right.

231
00:14:15,305 --> 00:14:18,180
So that information is available here.

232
00:14:20,080 --> 00:14:25,849
Yeah. We held three right here because you are working with the US East one nanomolar.

233
00:14:25,849 --> 00:14:28,370
Let me print that. Then.

234
00:14:28,370 --> 00:14:30,260
Intensity.

235
00:14:30,260 --> 00:14:32,315
Then what is the state?

236
00:14:32,315 --> 00:14:35,015
Is it used in user state R-naught,

237
00:14:35,015 --> 00:14:36,560
volume IT volume type.

238
00:14:36,560 --> 00:14:40,980
Let me print at least creation availability, Joan.

239
00:14:46,570 --> 00:14:49,925
So here I want to print availability June.

240
00:14:49,925 --> 00:14:55,085
Then if you want to print what is the volume type?

241
00:14:55,085 --> 00:14:57,910
Then I'm printing volume,

242
00:14:57,910 --> 00:14:59,365
I see nothing is there.

243
00:14:59,365 --> 00:15:01,585
You can observe each and everything in this output,

244
00:15:01,585 --> 00:15:05,635
because this is claimed to definitely each and every option is there in the output.

245
00:15:05,635 --> 00:15:07,765
If it is a resource, there is a doubt.

246
00:15:07,765 --> 00:15:09,220
May be a may or may not.

247
00:15:09,220 --> 00:15:14,340
How your output, your required the option in your output volume type.

248
00:15:14,340 --> 00:15:16,105
So here I want to print.

249
00:15:16,105 --> 00:15:19,520
So now let me take dot format.

250
00:15:19,560 --> 00:15:27,520
Then let me print here each item in this item first you are printing volume ID.

251
00:15:27,520 --> 00:15:30,500
So let me take volume ID.

252
00:15:33,090 --> 00:15:36,985
Then. What you want after that?

253
00:15:36,985 --> 00:15:38,350
Availability Jones.

254
00:15:38,350 --> 00:15:41,359
So each item then availability,

255
00:15:41,359 --> 00:15:43,910
Joan, C, whatever the options you want,

256
00:15:43,910 --> 00:15:46,110
you just printed them. That's it.

257
00:15:47,200 --> 00:15:50,750
So this concept is useful just to create

258
00:15:50,750 --> 00:15:55,490
some discovery script or inventory skipped for your required service.

259
00:15:55,490 --> 00:15:57,800
Not only for EC2, even for S3 also,

260
00:15:57,800 --> 00:16:01,415
this concept is useful just to implement your discovery scripts.

261
00:16:01,415 --> 00:16:05,495
Then last option, you are printing volume type.

262
00:16:05,495 --> 00:16:08,280
So here volume type is there.

263
00:16:11,080 --> 00:16:18,095
And that's it. Let me save it and run it.

264
00:16:18,095 --> 00:16:21,350
See the output. That's it.

265
00:16:21,350 --> 00:16:26,690
Just get clarity for each and every volume.

266
00:16:26,690 --> 00:16:28,610
Just I am writing this.

267
00:16:28,610 --> 00:16:33,785
That's fine.

268
00:16:33,785 --> 00:16:36,110
So same way you just try to work with

269
00:16:36,110 --> 00:16:39,990
your remaining options which are there in your EC2 Console.

270
00:16:41,440 --> 00:16:44,660
If you have some VPC, yes,

271
00:16:44,660 --> 00:16:48,755
you can work with that if you have some load balancers, auto-scaling.

272
00:16:48,755 --> 00:16:50,600
So whatever the options you want,

273
00:16:50,600 --> 00:16:53,540
You all options you can get from your EC2 Console.

274
00:16:53,540 --> 00:16:55,715
40 were easy to related services.

275
00:16:55,715 --> 00:16:57,920
That's it. Ok.

276
00:16:57,920 --> 00:16:59,460
Thank you.

