WEBVTT
ï»¿1
00:00:01.160 --> 00:00:07.770
Hi friends. Here we are going to discuss a mode of moto

2
00:00:07.770 --> 00:00:15.255
three that is paginating AWS APA Reserves using the moto three Python SDK,

3
00:00:15.255 --> 00:00:21.285
or simply paginated moto three for client object to guys Here,

4
00:00:21.285 --> 00:00:23.735
I am mentioning that client object.

5
00:00:23.735 --> 00:00:27.320
That means resonators are available for your client object,

6
00:00:27.320 --> 00:00:29.510
not for a work resource object.

7
00:00:29.510 --> 00:00:30.785
Right?

8
00:00:30.785 --> 00:00:33.230
So what are these resonators?

9
00:00:33.230 --> 00:00:35.525
Why we, how to use them, right?

10
00:00:35.525 --> 00:00:37.610
Let me go with step-by-step.

11
00:00:37.610 --> 00:00:45.935
First thing, paginated plays a role when we use both O3 to quality AWS resources.

12
00:00:45.935 --> 00:00:52.340
So gets quieter means getting information from your AWS about your resources, right?

13
00:00:52.340 --> 00:00:58.205
Suppose, you know, like to get a AWS EC2 instances.

14
00:00:58.205 --> 00:01:00.320
I am users, buckets,

15
00:01:00.320 --> 00:01:05.194
objects, groups, Information, Rules, Policies.

16
00:01:05.194 --> 00:01:07.310
I want to get, suppose all politics.

17
00:01:07.310 --> 00:01:08.420
I want to get all roles.

18
00:01:08.420 --> 00:01:10.430
So I wanted to get all users,

19
00:01:10.430 --> 00:01:15.215
I wanted to get all IAM users, right.

20
00:01:15.215 --> 00:01:18.710
Likewise. So whenever if you want to

21
00:01:18.710 --> 00:01:22.925
do a query with you or AWS using moto three at that time,

22
00:01:22.925 --> 00:01:24.650
resonators are very important.

23
00:01:24.650 --> 00:01:26.435
Why they are important?

24
00:01:26.435 --> 00:01:30.560
So as of now from our previous videos, right,

25
00:01:30.560 --> 00:01:32.360
without paginated concept, Yes,

26
00:01:32.360 --> 00:01:35.240
we are able to fetch the all EC2 instances,

27
00:01:35.240 --> 00:01:37.385
all I am users.

28
00:01:37.385 --> 00:01:39.320
Right?

29
00:01:39.320 --> 00:01:42.305
Then why does paginate is or important?

30
00:01:42.305 --> 00:01:43.910
Let me explain that.

31
00:01:43.910 --> 00:01:47.690
See, whenever if you do a query, right,

32
00:01:47.690 --> 00:01:52.789
both three makes a APA call to your AWS.

33
00:01:52.789 --> 00:01:55.730
So by making APA call,

34
00:01:55.730 --> 00:01:59.150
right to your AWS moto three,

35
00:01:59.150 --> 00:02:01.475
we give the information,

36
00:02:01.475 --> 00:02:04.595
will fetch the information, right?

37
00:02:04.595 --> 00:02:10.055
Generally, each APA call will return 50 or a 100 returns.

38
00:02:10.055 --> 00:02:13.055
Let's say suppose you are going to describe

39
00:02:13.055 --> 00:02:17.420
all your EC2 instances using your Bordeaux three of quaint method.

40
00:02:17.420 --> 00:02:23.465
Then that syntax will make APA call with your AWS, right?

41
00:02:23.465 --> 00:02:29.100
And it will get to the results of maximum 50 or a 100.

42
00:02:29.200 --> 00:02:34.655
That means, let say suppose you are having 1000 EC2 instances.

43
00:02:34.655 --> 00:02:39.140
If you make a client API call,

44
00:02:39.140 --> 00:02:40.970
bite not resource gaze,

45
00:02:40.970 --> 00:02:45.260
client trying to dot you are describing stanzas call if you do.

46
00:02:45.260 --> 00:02:49.925
Because of that, it will fetch 50 EC2 instances information only.

47
00:02:49.925 --> 00:02:53.930
The same way whenever if you do the APA called to

48
00:02:53.930 --> 00:03:00.170
get IAM users information using your client ID will get maximum a 100.

49
00:03:00.170 --> 00:03:04.100
Excerpt F3. F3 will return up to 1000,

50
00:03:04.100 --> 00:03:06.350
means 1000, and obviously it will written.

51
00:03:06.350 --> 00:03:07.730
So too do clarity.

52
00:03:07.730 --> 00:03:10.230
Let me open my terminal.

53
00:03:12.010 --> 00:03:15.255
So I'm going to add symbol Python voters.

54
00:03:15.255 --> 00:03:19.655
We skipped get all IAM users.

55
00:03:19.655 --> 00:03:21.260
This is also a query, right?

56
00:03:21.260 --> 00:03:28.535
I need to get information about I need to get all IAM users,

57
00:03:28.535 --> 00:03:30.980
right, let me import boat U3.

58
00:03:30.980 --> 00:03:34.055
First. I'm going to create a session.

59
00:03:34.055 --> 00:03:38.280
You know, where it first appears always creating a session.

60
00:03:39.070 --> 00:03:45.740
Then we are using suppose profile name as double underscore root.

61
00:03:45.740 --> 00:03:51.410
Then I am going to create I am resource object first. Write y.

62
00:03:51.410 --> 00:03:53.765
We are going to discuss resonators for client only.

63
00:03:53.765 --> 00:03:55.490
We have to first understand that.

64
00:03:55.490 --> 00:04:02.975
So that's my first i'm going to create a resource upset Session.get resource.

65
00:04:02.975 --> 00:04:05.015
But early I'm going to do,

66
00:04:05.015 --> 00:04:10.295
I am right now for each user.

67
00:04:10.295 --> 00:04:17.389
In your IAM resource dot users dot all I wanted to get all users.

68
00:04:17.389 --> 00:04:19.160
Then print each.

69
00:04:19.160 --> 00:04:21.020
Let me count it as well.

70
00:04:21.020 --> 00:04:23.045
County coast to one initially.

71
00:04:23.045 --> 00:04:28.610
So I want to count we all users,

72
00:04:28.610 --> 00:04:30.425
I am users, right?

73
00:04:30.425 --> 00:04:33.485
So this code already we have seen in our previous videos,

74
00:04:33.485 --> 00:04:36.245
just I'm taking them for next iteration.

75
00:04:36.245 --> 00:04:38.780
I want to increase my count value.

76
00:04:38.780 --> 00:04:41.850
First, let me nondescript

77
00:04:47.860 --> 00:04:51.200
2T naught for IAM us or they're in my account.

78
00:04:51.200 --> 00:04:55.140
Actually, let me open my icon so that you will get idea.

79
00:05:05.310 --> 00:05:08.725
I am right in I am,

80
00:05:08.725 --> 00:05:11.710
I want to work with suppose users, right?

81
00:05:11.710 --> 00:05:13.930
In a MER, different options I want to work with users.

82
00:05:13.930 --> 00:05:20.560
Let me go on with users and see that there are two naught for i am users.

83
00:05:20.560 --> 00:05:22.195
Yes, I am able to get all,

84
00:05:22.195 --> 00:05:25.195
not for IAM users with the help of your resource object.

85
00:05:25.195 --> 00:05:27.220
There is no problem, right?

86
00:05:27.220 --> 00:05:28.480
But a same core.

87
00:05:28.480 --> 00:05:34.660
What I'm doing is I'm going to comment with your resource method.

88
00:05:34.660 --> 00:05:37.060
Because for some of the services, you know,

89
00:05:37.060 --> 00:05:38.650
you don't have this resource.

90
00:05:38.650 --> 00:05:40.555
You have only client, right?

91
00:05:40.555 --> 00:05:44.365
You know, for which services you are having this resource and climb.

92
00:05:44.365 --> 00:05:45.910
We have a node for that,

93
00:05:45.910 --> 00:05:48.280
right in our previous wheels only for some of them,

94
00:05:48.280 --> 00:05:52.570
few of them, a few of your Animal Services are having resource object.

95
00:05:52.570 --> 00:05:56.740
That's why you have to know about client Jasmine, right?

96
00:05:56.740 --> 00:06:03.595
Let me create my client object Session.get client.

97
00:06:03.595 --> 00:06:05.080
I am.

98
00:06:05.080 --> 00:06:09.130
Now let me get my all users with the help of

99
00:06:09.130 --> 00:06:13.674
these am applying the row operation called lift users.

100
00:06:13.674 --> 00:06:15.175
So in this list users,

101
00:06:15.175 --> 00:06:19.000
you want users only, right?

102
00:06:19.000 --> 00:06:22.850
Let me print first. Each user.

103
00:06:27.360 --> 00:06:30.865
Okay, you need to print out user name as well, right?

104
00:06:30.865 --> 00:06:34.705
At the same time. I want to mention here count also.

105
00:06:34.705 --> 00:06:41.830
Let me take initially County coast to one column,

106
00:06:41.830 --> 00:06:45.700
each user in key called username.

107
00:06:45.700 --> 00:06:50.330
You how to get the let me increase my count value.

108
00:06:52.380 --> 00:06:56.410
Right now, let me run this and see the output.

109
00:06:56.410 --> 00:06:59.215
So you are getting only a 100 I am users.

110
00:06:59.215 --> 00:07:01.480
Then what about remaining two naught, naught four?

111
00:07:01.480 --> 00:07:06.575
I am users. Whenever if you do resource yea call,

112
00:07:06.575 --> 00:07:08.780
you're able to get all your IAM users.

113
00:07:08.780 --> 00:07:11.480
But whenever if you do joint ABA call,

114
00:07:11.480 --> 00:07:13.610
you are getting only a 100 I am users.

115
00:07:13.610 --> 00:07:16.535
Actually you are having two naught four, right?

116
00:07:16.535 --> 00:07:21.020
But you are getting only a 100, right?

117
00:07:21.020 --> 00:07:26.420
So that's why paginated or important for your client, right?

118
00:07:26.420 --> 00:07:29.660
The same way if you describe your instances using client,

119
00:07:29.660 --> 00:07:31.415
you will get Migrant 50 instances.

120
00:07:31.415 --> 00:07:35.090
You are not going to get all your EC2 instances, right?

121
00:07:35.090 --> 00:07:36.725
So for based on your service,

122
00:07:36.725 --> 00:07:42.245
but this value varies from 50 or a 100 excerpt to this S3.

123
00:07:42.245 --> 00:07:45.410
X3 will give maximum 1000 results.

124
00:07:45.410 --> 00:07:47.435
Okay, that's fine.

125
00:07:47.435 --> 00:07:51.275
So now you know that while working with client,

126
00:07:51.275 --> 00:07:54.065
if you do some query, you are not,

127
00:07:54.065 --> 00:07:59.090
there is no guarantee that you're not going to get all the values.

128
00:07:59.090 --> 00:08:02.540
All the IAM users, all the buckets,

129
00:08:02.540 --> 00:08:06.170
all the objects, all these it is census.

130
00:08:06.170 --> 00:08:09.050
Likewise, there is no guaranteed to get.

131
00:08:09.050 --> 00:08:10.310
All right.

132
00:08:10.310 --> 00:08:12.545
That's why he, pollinators are important.

133
00:08:12.545 --> 00:08:13.610
Anyway.

134
00:08:13.610 --> 00:08:17.735
Say actually IQ APA called returning a page.

135
00:08:17.735 --> 00:08:20.810
So whenever, if you run your boater three lists

136
00:08:20.810 --> 00:08:25.505
users that will make the API call to your AWS account.

137
00:08:25.505 --> 00:08:28.610
From that, we'll get the information like one page.

138
00:08:28.610 --> 00:08:35.195
That page consist of maximum age or 50 or a 100 except for this F3.

139
00:08:35.195 --> 00:08:38.840
So this pair is enough to support just urgent that we are going to fetch.

140
00:08:38.840 --> 00:08:40.325
I am useless information.

141
00:08:40.325 --> 00:08:44.030
Now this pair gives you enough to catch only a 100 IMUs and

142
00:08:44.030 --> 00:08:48.005
that's why it is skipping remaining 100.

143
00:08:48.005 --> 00:08:50.705
And then one more page you are having four users.

144
00:08:50.705 --> 00:08:51.860
Could L2 norm for users.

145
00:08:51.860 --> 00:08:54.514
That's why I came here to get three pages.

146
00:08:54.514 --> 00:08:57.920
But HAVA col will get only one page.

147
00:08:57.920 --> 00:08:59.540
That's why I'm getting only a 100.

148
00:08:59.540 --> 00:09:00.695
I am users.

149
00:09:00.695 --> 00:09:02.495
Then what about your remaining?

150
00:09:02.495 --> 00:09:05.370
I am useless information.

151
00:09:05.740 --> 00:09:13.460
All right, so to get all IMUs information using goto three client method,

152
00:09:13.460 --> 00:09:15.530
you have to create a pages,

153
00:09:15.530 --> 00:09:17.990
three budgets you are to create but your piazza up.

154
00:09:17.990 --> 00:09:20.600
No, two, not four IMUs are there.

155
00:09:20.600 --> 00:09:23.120
That's why I'm saying that we hope to get privileges.

156
00:09:23.120 --> 00:09:25.580
Each page, a 104200,

157
00:09:25.580 --> 00:09:28.550
unit, two pages remaining, 44.

158
00:09:28.550 --> 00:09:31.460
I am users, you need one more page, three pages.

159
00:09:31.460 --> 00:09:34.520
But if you don't know how many IMUs are there,

160
00:09:34.520 --> 00:09:37.580
then how can you say about pages, right?

161
00:09:37.580 --> 00:09:41.645
So first thing, default,

162
00:09:41.645 --> 00:09:44.765
APA client called ui-view one page,

163
00:09:44.765 --> 00:09:48.710
and that will consist of only a 100 users information.

164
00:09:48.710 --> 00:09:49.670
What about remaining?

165
00:09:49.670 --> 00:09:50.540
I am users.

166
00:09:50.540 --> 00:09:56.735
That means write, collect all wedges to get involved. All I M users.

167
00:09:56.735 --> 00:09:58.940
So how many pages you want to get,

168
00:09:58.940 --> 00:10:01.685
you don't know, right?

169
00:10:01.685 --> 00:10:04.670
So automatically how to create all pages based on

170
00:10:04.670 --> 00:10:08.390
the information which is their new edible silicone while querying.

171
00:10:08.390 --> 00:10:11.990
So in that case your passengers or helpful.

172
00:10:11.990 --> 00:10:16.040
So if you're trying to retrieve more than one page,

173
00:10:16.040 --> 00:10:18.335
make sure that you don't know how many ways are there,

174
00:10:18.335 --> 00:10:20.480
but you have to get all pages.

175
00:10:20.480 --> 00:10:24.260
So if you're trying to retrieve more than one page of reserves,

176
00:10:24.260 --> 00:10:30.575
you will need to use a pathname to issue multiple APA request on your behalf.

177
00:10:30.575 --> 00:10:33.810
So if you use paginated automatically,

178
00:10:33.810 --> 00:10:41.420
resonator will make recursively EPA calls so that for each API call will get each page.

179
00:10:41.420 --> 00:10:44.090
So if there is no extra page, suppose,

180
00:10:44.090 --> 00:10:46.430
just argue that as of now you are having

181
00:10:46.430 --> 00:10:49.835
three budgets based on your two naught for i am users.

182
00:10:49.835 --> 00:10:52.070
Now if you use batch monitor first,

183
00:10:52.070 --> 00:10:55.715
it will do one API call and we will get first 100 IAM users.

184
00:10:55.715 --> 00:10:58.670
Then after that again will make, I am sorry,

185
00:10:58.670 --> 00:11:00.260
EPA, call it, we'll get it,

186
00:11:00.260 --> 00:11:02.225
we get next a 100 I am users.

187
00:11:02.225 --> 00:11:05.660
Again, we'll try to make an API call, right?

188
00:11:05.660 --> 00:11:08.465
It will get next to for IMUs information.

189
00:11:08.465 --> 00:11:12.320
Again, we're trying to get and again,

190
00:11:12.320 --> 00:11:13.850
we'll try to make one more API calls,

191
00:11:13.850 --> 00:11:17.765
but there is no use to make API call because already all IMUs are over,

192
00:11:17.765 --> 00:11:20.480
then you're passionate or will stop getting pages.

193
00:11:20.480 --> 00:11:24.990
That is automatic process right?

194
00:11:25.120 --> 00:11:30.560
Now. So to use this pollinators already,

195
00:11:30.560 --> 00:11:33.934
your boater three provides resonators.

196
00:11:33.934 --> 00:11:38.810
So both the three provides resonator to automatically is Hugh.

197
00:11:38.810 --> 00:11:42.320
Multiple API requests to review all the pages.

198
00:11:42.320 --> 00:11:44.270
Once you've, you know, page look from each page,

199
00:11:44.270 --> 00:11:46.590
you can get the required result.

200
00:11:47.230 --> 00:11:50.495
So there's finally how to understand that.

201
00:11:50.495 --> 00:11:59.060
Paginate US or US footstool whenever if we have more pages for your resource information,

202
00:11:59.060 --> 00:12:02.705
but you don't know how many base all the other time you have to take five senators.

203
00:12:02.705 --> 00:12:05.870
So whenever you are working with a client and whenever

204
00:12:05.870 --> 00:12:08.915
if you're querying the information about your resources,

205
00:12:08.915 --> 00:12:12.575
then only you have to take by resonators, right?

206
00:12:12.575 --> 00:12:15.470
And event paginate if our straightforward to use.

207
00:12:15.470 --> 00:12:20.975
And one more thing that the fascinate us or not available for all services.

208
00:12:20.975 --> 00:12:24.200
Even if point is there are some other services you don't have

209
00:12:24.200 --> 00:12:27.530
passionate or other time you have to create your own path knitr.

210
00:12:27.530 --> 00:12:31.535
Okay, well, going forward we'll see how to create a custom cognitive.

211
00:12:31.535 --> 00:12:35.940
But then how to use pads monitors.

212
00:12:35.940 --> 00:12:37.960
Very simple, very fascinating,

213
00:12:37.960 --> 00:12:40.810
creative by zeta that is already there with your boat.

214
00:12:40.810 --> 00:12:44.350
Agree, you have to write it how to include one syntax in your code.

215
00:12:44.350 --> 00:12:47.860
So after creation of your paginated piles,

216
00:12:47.860 --> 00:12:53.800
netter is having IIS running to get all your pages that paginate through,

217
00:12:53.800 --> 00:12:58.510
create paginated to get pagers one-by-one, only two steps.

218
00:12:58.510 --> 00:13:03.710
Now let me login first your official documentation of your moto three.

219
00:13:06.780 --> 00:13:10.780
So I'm going with us up now because I have this number of

220
00:13:10.780 --> 00:13:15.100
IAM user so that I can show you how to use resonator for your IAM user.

221
00:13:15.100 --> 00:13:18.585
The same concept is applicable even for we were other.

222
00:13:18.585 --> 00:13:20.345
Services also.

223
00:13:20.345 --> 00:13:22.729
Let me go with available services.

224
00:13:22.729 --> 00:13:27.035
And I want to go with up now with IAM. Right?

225
00:13:27.035 --> 00:13:28.205
I am.

226
00:13:28.205 --> 00:13:30.214
So and that too in IAM,

227
00:13:30.214 --> 00:13:31.970
either while you're rocking with the list users,

228
00:13:31.970 --> 00:13:33.770
see guys in IAM is, are having,

229
00:13:33.770 --> 00:13:35.360
in IAM, you're having right?

230
00:13:35.360 --> 00:13:37.100
Goods, information, users roles,

231
00:13:37.100 --> 00:13:40.820
policy for all you can apply your paginated not

232
00:13:40.820 --> 00:13:45.515
I deselect on your paginated. Open new page.

233
00:13:45.515 --> 00:13:46.910
Right.

234
00:13:46.910 --> 00:13:49.190
Now see list of groups.

235
00:13:49.190 --> 00:13:50.585
You have to use this bad Netter.

236
00:13:50.585 --> 00:13:53.060
If you click on this, you'll get syntax also.

237
00:13:53.060 --> 00:13:58.730
Suppose I want to list all the users without dropping any user, right?

238
00:13:58.730 --> 00:14:02.060
That's why I'm using the word this lift user resonator.

239
00:14:02.060 --> 00:14:03.590
Pedot is a query.

240
00:14:03.590 --> 00:14:05.945
Query only you how paginated, right?

241
00:14:05.945 --> 00:14:07.985
So the very first thing,

242
00:14:07.985 --> 00:14:12.215
tight forward communist client,

243
00:14:12.215 --> 00:14:16.400
I mean, what are the coined object you created that dot get past data.

244
00:14:16.400 --> 00:14:20.030
So what is the magnetic or you are going to create to get list of users.

245
00:14:20.030 --> 00:14:22.340
That's why this is a list of users.

246
00:14:22.340 --> 00:14:23.705
Right?

247
00:14:23.705 --> 00:14:26.405
Now let me open your code.

248
00:14:26.405 --> 00:14:28.850
So already, you know,

249
00:14:28.850 --> 00:14:31.230
let me all the codes.

250
00:14:41.740 --> 00:14:46.670
Simply by resonator, that is any variable we can take it, right?

251
00:14:46.670 --> 00:14:50.790
And we are not taking like client, what is our variable?

252
00:14:51.610 --> 00:14:58.205
Now to this plane first we have to create planed object we had to create, right?

253
00:14:58.205 --> 00:15:01.080
So in our case we should've plane our abilities.

254
00:15:01.080 --> 00:15:03.390
I am underscore client.

255
00:15:04.180 --> 00:15:06.050
That's it.

256
00:15:06.050 --> 00:15:08.330
Now you've created a resonator.

257
00:15:08.330 --> 00:15:14.239
Now it is ready to paginate through all your pages in your AWS.

258
00:15:14.239 --> 00:15:16.925
Right? Then what you see here,

259
00:15:16.925 --> 00:15:20.300
if we have a paginated just tried to paginate one to

260
00:15:20.300 --> 00:15:23.420
get pledgers one-by-one and path prefix.

261
00:15:23.420 --> 00:15:30.545
You know, worse, by default it is to slash the insert any IAM user, path flash.

262
00:15:30.545 --> 00:15:32.930
Why do we have any other thing you can mention that,

263
00:15:32.930 --> 00:15:34.850
but I want to get all the way.

264
00:15:34.850 --> 00:15:36.170
I'm not going to take that one.

265
00:15:36.170 --> 00:15:44.570
Simply paginated dot paginate as an A1 dot.

266
00:15:44.570 --> 00:15:45.410
Passionate.

267
00:15:45.410 --> 00:15:50.825
I'm not going to feel that even if you want to mention your paginated configuration,

268
00:15:50.825 --> 00:15:54.905
you can do per page four is the maximum value menu items you want.

269
00:15:54.905 --> 00:15:57.230
And what is the size of your page, right?

270
00:15:57.230 --> 00:15:59.420
Anyway, you don't know the next you talk and meet next

271
00:15:59.420 --> 00:16:01.700
to page information you don't know, right?

272
00:16:01.700 --> 00:16:04.115
So that's why you are not going to take this.

273
00:16:04.115 --> 00:16:07.834
Now simply buys Nader dot paginate.

274
00:16:07.834 --> 00:16:11.610
Let me print this first information and see the output.

275
00:16:14.650 --> 00:16:17.195
You are getting an iterator.

276
00:16:17.195 --> 00:16:18.995
So in this iterator,

277
00:16:18.995 --> 00:16:22.370
you will how based on number of pages,

278
00:16:22.370 --> 00:16:26.405
based on the information which is there in your AWS account.

279
00:16:26.405 --> 00:16:29.090
Suppose we are going to fetch I am useless information.

280
00:16:29.090 --> 00:16:30.920
Now as of now, we are having two,

281
00:16:30.920 --> 00:16:32.495
not who I am user.

282
00:16:32.495 --> 00:16:36.800
You know, already we have seen a 100 users are there per page.

283
00:16:36.800 --> 00:16:40.280
That's why DEF consist of three pages.

284
00:16:40.280 --> 00:16:46.440
So now this information is very to paginate Renee to iterate three times.

285
00:16:46.600 --> 00:16:49.625
Right now I'm going to take for loop,

286
00:16:49.625 --> 00:16:53.090
take one-by-one PE separately for each page.

287
00:16:53.090 --> 00:16:55.685
In your resonator.

288
00:16:55.685 --> 00:16:56.885
Right?

289
00:16:56.885 --> 00:16:59.120
Just to print the each page.

290
00:16:59.120 --> 00:17:02.165
Now this each pays is the exactly like you know,

291
00:17:02.165 --> 00:17:06.215
l2 uses operation because in each Basie how under users information,

292
00:17:06.215 --> 00:17:09.540
even if you do list to users what you are getting,

293
00:17:10.960 --> 00:17:16.865
you are getting IM uses infrared information for a 100 users SIM.

294
00:17:16.865 --> 00:17:21.000
Now, each pays consist of list uses information.

295
00:17:21.160 --> 00:17:24.720
Now let me run this and see the output.

296
00:17:24.790 --> 00:17:27.830
Right, the user's videos, one page,

297
00:17:27.830 --> 00:17:32.165
the last page in large busy how only for users information.

298
00:17:32.165 --> 00:17:35.495
And this is for previous pages, right?

299
00:17:35.495 --> 00:17:38.030
So each base consists of a 100 users information.

300
00:17:38.030 --> 00:17:41.700
If you want to get clearly clarity.

301
00:17:55.000 --> 00:17:56.555
Right?

302
00:17:56.555 --> 00:17:58.880
Now, this is the list of e Now

303
00:17:58.880 --> 00:18:02.735
in the field for users information in this a â¬100 information.

304
00:18:02.735 --> 00:18:06.545
So again, to get how many users are there per page,

305
00:18:06.545 --> 00:18:08.405
you can do like length.

306
00:18:08.405 --> 00:18:12.230
You know, in Python lenses there to find out how many values are there.

307
00:18:12.230 --> 00:18:15.215
Now just observe that foster pay a 100 users.

308
00:18:15.215 --> 00:18:20.945
Second paid a 100 users last pitch for users, but check, right?

309
00:18:20.945 --> 00:18:25.970
So if you want to get clearly all users, right?

310
00:18:25.970 --> 00:18:30.260
Again, each page how to iterate, right?

311
00:18:30.260 --> 00:18:33.020
So you know, if you know each base from here,

312
00:18:33.020 --> 00:18:37.595
right up here, this is one page.

313
00:18:37.595 --> 00:18:41.030
So from page if you want to get to either separately one by one,

314
00:18:41.030 --> 00:18:43.280
you are taking for loop the same way.

315
00:18:43.280 --> 00:18:50.630
Now here you have to take for each user in this information.

316
00:18:50.630 --> 00:18:56.690
Then print each user dot user name.

317
00:18:56.690 --> 00:18:59.105
That's it. Not dot, right?

318
00:18:59.105 --> 00:19:00.260
This is a dictionary.

319
00:19:00.260 --> 00:19:02.760
You have to take asic key.

320
00:19:03.460 --> 00:19:10.415
That's it. I'll see that they're getting all users information.

321
00:19:10.415 --> 00:19:12.725
So if you want to do count, right,

322
00:19:12.725 --> 00:19:16.130
so that you can understand a rebuilding it all users information or not.

323
00:19:16.130 --> 00:19:19.250
Let me take a count variable called one,

324
00:19:19.250 --> 00:19:21.980
and I'm going to count it.

325
00:19:21.980 --> 00:19:25.290
Then let me increase the word_count.

326
00:19:27.150 --> 00:19:28.825
Right?

327
00:19:28.825 --> 00:19:30.415
Now if I run that,

328
00:19:30.415 --> 00:19:33.460
they're going to get all I am uses two, not four.

329
00:19:33.460 --> 00:19:36.850
So this is the way how you can create your resonators

330
00:19:36.850 --> 00:19:43.045
this same way if you want to create your paginated for to get your all.

331
00:19:43.045 --> 00:19:44.830
If it isn't stances,

332
00:19:44.830 --> 00:19:50.050
let's select the word easy to another.

333
00:19:50.050 --> 00:19:57.445
Just to go with your peers based on your service,

334
00:19:57.445 --> 00:20:00.280
you have to select a path knitters and your syntax is same.

335
00:20:00.280 --> 00:20:02.620
So even if you go and see a path monitors for

336
00:20:02.620 --> 00:20:09.135
your EC2 senor or IAM paginated what we use. Right. Seizure.

337
00:20:09.135 --> 00:20:12.260
You are client.read jetpack, Notre Dame syntax.

338
00:20:12.260 --> 00:20:14.000
You also see here.

339
00:20:14.000 --> 00:20:16.505
Suppose describe in stanzas.

340
00:20:16.505 --> 00:20:19.025
Describing stanzas, see,

341
00:20:19.025 --> 00:20:23.525
get Baghdad received the only thing for what our Can you are using.

342
00:20:23.525 --> 00:20:27.320
That's a byte.

343
00:20:27.320 --> 00:20:31.250
And let me select this. And I want to display in stanzas from this.

344
00:20:31.250 --> 00:20:33.035
I mean, using paginated,

345
00:20:33.035 --> 00:20:35.250
I won't list all Mike.

346
00:20:35.560 --> 00:20:37.805
Is it in stanzas?

347
00:20:37.805 --> 00:20:40.620
Let me comment this core now.

348
00:20:41.590 --> 00:20:45.395
Let biogenetic or important while

349
00:20:45.395 --> 00:20:50.675
acquiring the information about enlisting resources, right?

350
00:20:50.675 --> 00:20:54.545
So simply, you can take any variable.

351
00:20:54.545 --> 00:20:56.090
Simply I'm the impact Netter,

352
00:20:56.090 --> 00:21:01.040
net of equal to I am underscore client.read jetpack knitters effect.

353
00:21:01.040 --> 00:21:09.035
Then for each instance because you are giving or cannot describe in Kansas,

354
00:21:09.035 --> 00:21:14.490
that's why fasting for each page in your originator.

355
00:21:17.590 --> 00:21:22.745
And near, sorry, I'm taking same as this name, whatever it is there.

356
00:21:22.745 --> 00:21:26.630
Dot paginate.

357
00:21:26.630 --> 00:21:28.190
Right?

358
00:21:28.190 --> 00:21:33.570
So print, gauge, page. See the output trust.

359
00:21:35.280 --> 00:21:36.925
Okay.

360
00:21:36.925 --> 00:21:40.465
Im client we write,

361
00:21:40.465 --> 00:21:46.540
let me create my I am client called simply.

362
00:21:46.540 --> 00:21:51.280
You are Session.get client for EC2 by developing with now

363
00:21:51.280 --> 00:21:59.020
easy to spelling mistake,

364
00:21:59.020 --> 00:22:00.100
but may take hours, days,

365
00:22:00.100 --> 00:22:02.270
whatever I have taken here.

366
00:22:26.970 --> 00:22:32.530
Not right.

367
00:22:32.530 --> 00:22:35.170
So anyway are going I think you're going to get

368
00:22:35.170 --> 00:22:38.140
only one page because two instances of that in my icon.

369
00:22:38.140 --> 00:22:41.110
So you're going to get only one page.

370
00:22:41.110 --> 00:22:45.595
You just try to create number of EC2 instances and tried to work with

371
00:22:45.595 --> 00:22:49.900
resonator so that you will get how to use bio-monitoring 41 easily in sensors also.

372
00:22:49.900 --> 00:22:51.640
Anyway, well going forward,

373
00:22:51.640 --> 00:22:53.320
use this even for F3.

374
00:22:53.320 --> 00:22:57.550
Also. Write C two in concert.

375
00:22:57.550 --> 00:23:08.090
It is enough to get your information in one single Pysch, right?

376
00:23:10.920 --> 00:23:14.830
So under reservations, the how instances you have to take

377
00:23:14.830 --> 00:23:18.980
these reservations then key-value pair, magnificently hot.

378
00:23:19.110 --> 00:23:20.575
Okay?

379
00:23:20.575 --> 00:23:22.840
Now same way, suppose if you want to get,

380
00:23:22.840 --> 00:23:25.735
if you want to use pass liters for AS3,

381
00:23:25.735 --> 00:23:28.585
for anything, you can use it, right?

382
00:23:28.585 --> 00:23:30.175
Let me take a three.

383
00:23:30.175 --> 00:23:32.215
So I want to pass the Nate.

384
00:23:32.215 --> 00:23:39.220
I mean, I wanted to get all my Suppose objects in particular bucket, right?

385
00:23:39.220 --> 00:23:42.520
See liftoff did operation is their list object.

386
00:23:42.520 --> 00:23:46.595
Just click on that. Sea plane dot getMagnitude.

387
00:23:46.595 --> 00:23:48.785
Getmagnitude method is same.

388
00:23:48.785 --> 00:23:51.950
The only thing here based on your required query you have to mention,

389
00:23:51.950 --> 00:23:55.550
suppose I want the query about objects, then lift objects,

390
00:23:55.550 --> 00:23:57.140
then pageant on a bad note,

391
00:23:57.140 --> 00:23:58.340
if you end up like some Twitter,

392
00:23:58.340 --> 00:23:59.645
you can apply in its feet up,

393
00:23:59.645 --> 00:24:04.955
even in your EC2 also. We can apply a filter.

394
00:24:04.955 --> 00:24:07.430
I don't want to get all right.

395
00:24:07.430 --> 00:24:11.645
I want to get only based on some ads, right?

396
00:24:11.645 --> 00:24:12.890
Or some region.

397
00:24:12.890 --> 00:24:15.110
Yes, we can apply that freedom.

398
00:24:15.110 --> 00:24:18.590
Let me go with the describe instances.

399
00:24:18.590 --> 00:24:23.240
See here you're going to play your fetus body,

400
00:24:23.240 --> 00:24:27.110
how you construct already, we know how to apply filters, Right?

401
00:24:27.110 --> 00:24:31.115
So okay, uh, by these weak covered,

402
00:24:31.115 --> 00:24:35.615
you know how to use resources method on how to use client

403
00:24:35.615 --> 00:24:40.415
and waders we covered in newer EC2 instance information.

404
00:24:40.415 --> 00:24:43.745
And now after waiters, you know, paginated.

405
00:24:43.745 --> 00:24:47.615
So paginated, I covered or with the help of your IAM.

406
00:24:47.615 --> 00:24:51.530
Same concepts we've tried to correlate for other services also.

407
00:24:51.530 --> 00:24:55.925
If you have any doubts how to use this waiters for any particular surveys,

408
00:24:55.925 --> 00:24:58.205
how do you this bi-linear term for any particular service

409
00:24:58.205 --> 00:25:01.070
you just met as me so that I will respond for that.

410
00:25:01.070 --> 00:25:05.540
But finally, we cover the concepts of your waders by resonators,

411
00:25:05.540 --> 00:25:07.865
client and the service object.

412
00:25:07.865 --> 00:25:10.790
You have one more thing called meta.

413
00:25:10.790 --> 00:25:15.095
Meta is just to enter into client from the resource object,

414
00:25:15.095 --> 00:25:19.170
will see it in four, in one more video.

415
00:25:19.810 --> 00:25:21.980
Ok, so after that,

416
00:25:21.980 --> 00:25:28.385
I will also go through how to create a custom path Netter.

417
00:25:28.385 --> 00:25:29.435
Okay?

418
00:25:29.435 --> 00:25:32.910
Okay, thank you for watching this video.

