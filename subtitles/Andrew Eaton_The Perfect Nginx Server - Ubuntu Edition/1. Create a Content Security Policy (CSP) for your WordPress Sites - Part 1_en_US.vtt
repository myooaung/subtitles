WEBVTT

00:05.090 --> 00:12.410
The content security policy is a security standard that was introduced to help prevent the execution

00:12.410 --> 00:16.400
of malicious content in the trusted Web page context.

00:16.610 --> 00:19.790
It's not difficult to set up a SEECP.

00:19.790 --> 00:26.240
Problems arise when you start loading third party content, for example, advertising.

00:26.240 --> 00:33.110
When you start adding third party content, a policy might be almost impossible to implement without

00:33.110 --> 00:37.400
the risk of blocking some of those third party resources.

00:37.640 --> 00:42.450
Even if you get your policy set up correctly and everything works perfectly.

00:42.500 --> 00:49.700
There is no guarantee that a third party will not change something on their site, therefore breaking

00:49.700 --> 00:52.920
your site if you rely on advertising revenue.

00:52.950 --> 00:57.170
Be very careful about setting up a content security policy.

00:57.200 --> 01:02.820
I may even go so far as to suggest that you do not implement a CSP.

01:02.840 --> 01:04.700
It's up to you to decide.

01:04.820 --> 01:12.770
The CSP gives you control over what locations a client browser is permitted to load resources from and

01:12.770 --> 01:16.020
what sites are allowed to interact with your site.

01:16.100 --> 01:21.980
This is accomplished by white listing the resources that the client browser is allowed to load.

01:22.140 --> 01:28.400
One of the advantages of a VPs is that you can use Ingenix server blocks and host multiple WordPress

01:28.400 --> 01:30.070
sites on a single server.

01:30.080 --> 01:36.650
You need to keep in mind that you will need to create a unique content security policy for each site

01:36.680 --> 01:38.060
hosted on your server.

01:38.100 --> 01:43.190
You need to take the following steps before creating a content security policy.

01:43.370 --> 01:50.210
Firstly, if you have an existing content security policy, please disable the CSP.

01:50.240 --> 01:58.010
You can open the file that contains the KSP, comment it art and then reload Ingenix to disable the

01:58.010 --> 02:00.370
CSP only at this stage.

02:00.470 --> 02:07.550
Once you have completed the configuration and set up of your site, can you look at creating a content

02:07.550 --> 02:09.500
security policy for your site.

02:09.650 --> 02:16.910
Creating a content security policy will take a little time, but it's another layer of security that

02:16.910 --> 02:18.350
you are adding to your site.

02:23.390 --> 02:30.110
These are the variables we are going to sit with the added content security policy, Engine X directive

02:30.110 --> 02:36.410
in the PDF attached to this lecture, I've given you a link, as well as a brief description of each

02:36.410 --> 02:37.870
of these variables.

02:38.150 --> 02:45.340
To summarize these variables, they restrict where that particular asset can be loaded from.

02:45.350 --> 02:50.510
For example, image source restricts from where images can be loaded.

02:50.660 --> 02:53.040
You have these various variables.

02:53.170 --> 03:00.040
There are others that we will not specify in the event that you do not specify that particular variable.

03:00.050 --> 03:03.410
The fallback is the default source.

03:03.440 --> 03:11.450
The default source sits a default source list for all other variables that are not specified.

03:16.470 --> 03:23.190
The first step in setting up a content security policy is to set up the default policy now with the

03:23.190 --> 03:24.400
default policy.

03:24.420 --> 03:29.460
We will only allow resources to be loaded from our site.

03:29.490 --> 03:37.500
In other words, from self here we have taken each variable and we have specified where the asset can

03:37.500 --> 03:40.440
be loaded from to the right of each variable.

03:40.450 --> 03:47.190
You leave a space, then you type two apostrophes, and then in between the two apostrophes you type

03:47.190 --> 03:51.630
sell, each variable ends in a semicolon.

03:51.780 --> 03:58.400
What's important is the content security policy is typed on a single line.

03:58.410 --> 04:00.840
You can see it at the top of the slide.

04:00.840 --> 04:05.850
Do not attempt to type a content security policy over multiple lines.

04:05.850 --> 04:08.020
You will end up with numerous errors.

04:08.250 --> 04:15.870
This policy of restricting every variable to self is perfect for a site with all the assets are hosted

04:15.870 --> 04:18.540
and served from the same server.

04:18.570 --> 04:25.650
This is not the case with the WordPress site, especially if you use commercial themes and various plug

04:25.650 --> 04:27.240
ins with WordPress.

04:27.240 --> 04:34.710
You need to allow unsafe in line, unsafe evil in the script source and unsafe in line in the style

04:34.710 --> 04:35.310
source.

04:35.580 --> 04:40.280
If you do not, you will run into many issues with themes and plugins.

04:40.290 --> 04:48.480
You also need to allow embedded data such as a base 64 encoded image in the images and fonts source

04:48.690 --> 04:55.370
unsafe in line allows all inline JavaScript code to run and inline styles to be used.

04:55.390 --> 05:03.390
JavaScript and styles should actually be placed in a dedicated file and not in line in proper use of

05:03.390 --> 05:03.930
eval.

05:04.050 --> 05:11.940
Can open up your code for injection attacks, but it is required for the WordPress customizer to work.

05:11.940 --> 05:16.800
JavaScript templating in WordPress also requires unsafe eval.

05:17.010 --> 05:24.210
Embedded data is mostly used to encode images into stylesheets to reduce the number of requests.

05:24.240 --> 05:31.590
Here are the variables unsafe in line, unsafe eval and embedded data added to the CSP.

05:34.740 --> 05:40.470
We are going to create a new include file for the content security policy, we can use the file name

05:40.470 --> 05:44.910
SEECP Underscore, followed by the site name dot com.

05:44.940 --> 05:53.040
And if this file can be created in the ETSI, Ingenix includes or includes or global directory, you

05:53.040 --> 05:57.720
can use any location inside the FTC in your next directory.

05:57.810 --> 06:01.320
I cannot emphasize the importance of the following point.

06:01.320 --> 06:05.220
The CSP is typed on a single line.

06:05.430 --> 06:10.490
The directive is ad header leave Espace content security policy.

06:10.500 --> 06:12.800
Then you have to quotation marks.

06:12.840 --> 06:20.670
The variables are then added in between the quotes and as with any directive, it ends in a semicolon.

06:20.700 --> 06:27.990
At the bottom of the slide, you have an example of the CSP that will be added to the include file in

06:27.990 --> 06:28.830
the PDF.

06:28.830 --> 06:35.130
Attached to this lecture, you will find the default content security policy, which we need to add

06:35.130 --> 06:38.970
to the CSP site dot com NFR.

06:38.970 --> 06:44.610
The default CSP needs to be added to the CSP site Dot Seo NFR.

06:44.640 --> 06:50.590
Before you do that, I recommend you create the default CSP in your text editor.

06:50.610 --> 06:57.900
We need to add additional resources to the content security policy and it's much easier when using a

06:57.900 --> 06:58.770
text editor.

07:03.800 --> 07:08.840
Here I have the default content security policy open in my text editor.

07:17.110 --> 07:24.370
Now we need to start adding resources to the CSP by resources, I'm referring to the white listing of

07:24.370 --> 07:30.730
external sites, you need to open your website in your browser as well as your browsers, developer

07:30.730 --> 07:35.080
tools, and you need your CSP open in your text editor.

07:35.080 --> 07:39.520
In your text editor, you can select your CSP and copy.

07:39.520 --> 07:45.610
In the earlier part of my course, you would have created a file called HTP underscore headers dot com.

07:45.610 --> 07:52.240
And if that file will be located in the global directory, I'd like you to open the HTTP headers while

07:52.270 --> 07:59.590
it's inside this particular file that I asked you to comment your existing content security policy,

07:59.770 --> 08:02.150
you can close HTTP headers.

08:02.210 --> 08:04.810
Now, what I want you to do is Sue DCP.

08:04.810 --> 08:07.870
We want to copy HTTP headers, not SEO enough.

08:07.870 --> 08:14.530
And the file that we want to create is SEECP Underscore, followed by your domain name, Dot Seo in

08:14.530 --> 08:23.110
F you can open the new file using Neno Ciudadanos CSP underscore domain name dot seo in F where you

08:23.110 --> 08:27.100
have your existing content security policy that was commented out.

08:27.220 --> 08:31.270
You can paste the default SEECP that we created.

08:31.420 --> 08:36.490
You can close neno saving your changes to the CSP domain name file.

08:41.520 --> 08:49.170
You can then change to the Ingenix sites available directory and then open your sites, Ingenix configuration

08:49.170 --> 08:50.520
file using Nnenna.

08:53.020 --> 08:59.680
You can scroll down to the include directives include ETEK Ingenix might include files, HTP headers,

08:59.680 --> 09:04.970
dot com, if you will probably have the include ACTC, Ingenix Global.

09:04.990 --> 09:08.380
Now, what we need to do is change the include filename.

09:12.310 --> 09:20.650
CSP underscored the not com enough semicolon, you can close your site's config file, saving the changes.

09:21.760 --> 09:29.350
We've made changes to an engine X configuration file test, the config sudo, engine X, hyphen T test

09:29.350 --> 09:30.440
is successful.

09:30.460 --> 09:32.710
You can then reload engine X.
