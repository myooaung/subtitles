WEBVTT

00:20.000 --> 00:27.560
The reason that we use public key authentication over passwords is security, public key authentication

00:27.560 --> 00:35.270
provides cryptographic strength that even extremely long passwords cannot offer with each public key

00:35.270 --> 00:42.860
authentication improve security considerably as it frees users from having to remember complicated passwords.

00:42.890 --> 00:51.410
In addition to the obvious security benefits, it allows users to implement single sign on across multiple

00:51.410 --> 00:52.190
servers.

00:52.220 --> 00:56.930
That means that the same Kippy can be used for multiple servers.

00:57.140 --> 00:59.930
The slide is in red areas of the SSA.

01:00.110 --> 01:02.730
Keep is generated locally.

01:02.750 --> 01:05.000
What do I mean by the word locally?

01:05.000 --> 01:09.770
Locally is the PC or the Mac that you are sitting looking at and working on?

01:09.770 --> 01:11.030
Not the server.

01:11.040 --> 01:12.800
The server is remote.

01:12.920 --> 01:17.150
You generate the key here locally on your PC or Mac.

01:17.150 --> 01:20.060
You do not generate to keep it on the server.

01:20.120 --> 01:20.870
This is a key.

01:20.870 --> 01:26.990
Authentication is relatively straightforward to implement the users generate to keep themselves.

01:27.200 --> 01:34.370
The public key is copied to the server and the private key remains with the user on their PC or Mac

01:34.370 --> 01:37.880
keys come in pairs, a public key and a private key.

01:37.880 --> 01:39.470
Each key is unique.

01:39.470 --> 01:41.240
The keys work together.

01:41.240 --> 01:43.640
One last time I'm going to repeat this.

01:43.670 --> 01:47.660
The key is generated locally on your PC or Mac.

01:47.660 --> 01:50.680
You do not generate the keep it on the server.

01:50.720 --> 01:53.750
Let's look at how is such key authentication works.

01:53.750 --> 01:59.720
When using a password, you would initiate the connection and provide the password when prompted.

01:59.720 --> 02:06.530
If the password is correct, you authenticated and granted access with SSL key authentication.

02:06.530 --> 02:10.730
Firstly, you initiate an essential connection to the server.

02:10.730 --> 02:18.200
The server then replies to you by sending a random message back to the client using the private key

02:18.200 --> 02:20.690
which is stored on your PC or Mac.

02:20.690 --> 02:26.630
The client encrypts the random message and sends it back to the server on the server.

02:26.870 --> 02:31.850
The encrypted message is then decrypted using the public key.

02:31.880 --> 02:37.430
Now, if the messages match, the client is authenticated and access is granted to the server.

02:37.460 --> 02:40.340
Now we need to set up a key authentication.

02:40.370 --> 02:44.060
Your first step, you generate the keep it on your PC or Mac.

02:44.060 --> 02:51.470
Once you've generated to keep you copy the public key to your server, then you log into your server

02:51.470 --> 02:55.880
and you configure the server to use SSL key authentication.

02:55.880 --> 02:59.440
At the moment, our server is using password authentication.

02:59.450 --> 03:06.860
So what we need to do then is log in to the server, disable password authentication and enable key

03:06.860 --> 03:07.730
authentication.

03:07.730 --> 03:10.790
We then need to log in using key authentication.

03:10.790 --> 03:15.830
We need to do that to ensure we can log in using this key authentication.

03:15.830 --> 03:18.710
And finally, we need to create a conflict file.

03:18.720 --> 03:21.920
I'm not going to go into any detail at this stage about a config file.

03:21.920 --> 03:26.630
When we get to the conflict file, you will see why we need to use a config file.

03:26.700 --> 03:27.890
Look at the prompt on the screen.

03:27.890 --> 03:33.410
Andrew, that was the user that I added to my server at Ubuntu twenty 04.

03:33.440 --> 03:37.250
That was the hostname I gave my server when I created it, told Dollar.

03:37.610 --> 03:42.530
By looking at that, you should be able to tell that I am logged in to my server.

03:42.530 --> 03:50.510
I need to generate the H keep that are not generated on the server exit connection to my IP address

03:50.510 --> 03:53.000
closed log out of your server.

03:53.000 --> 03:59.770
I'm going to topolice dot ss h slash locally on my PC or Mac typing less.

04:00.020 --> 04:04.160
S.H. Slash will display the contents of the directory.

04:04.220 --> 04:07.850
Currently there is one file called known hosts.

04:07.850 --> 04:13.760
I'm going to type neno dot S.H. Slash followed by the filename known hosts.

04:13.790 --> 04:16.700
There is the server fingerprint for my server.

04:16.730 --> 04:22.820
If I need to remove a server fingerprint from the known host file, ensure your cursor is at the beginning

04:22.850 --> 04:23.480
of the line.

04:23.570 --> 04:27.410
Control key will remove that entire line.

04:27.440 --> 04:31.040
I'm going to control X save modified buffer.

04:31.040 --> 04:36.380
No, that is how you can remove the server fingerprint from the known hosts file.

04:36.380 --> 04:39.360
I'm going to topolice dot ss h slash.

04:39.680 --> 04:45.710
Now I'm going to generate my keep the commander's ss h hyphen kaige in the space.

04:45.710 --> 04:47.510
Two flags that I need to specify.

04:47.510 --> 04:53.930
I need to specify the type of key I t the type of key is always a Niva space and they need to specify

04:53.930 --> 05:01.490
the number of bits of and B four zero nine six and press enter into file in which to save the key you

05:01.490 --> 05:09.230
need to type A period s h slash that will specify the local path to the directory that we want to save

05:09.230 --> 05:10.030
the keeper to.

05:10.070 --> 05:12.740
After the slash you need to specify a filename.

05:12.800 --> 05:17.000
I'll call Marketo 20 zero four enter passphrase.

05:17.120 --> 05:19.340
This is not your password on the.

05:19.420 --> 05:25.510
Server, this is a passphrase that protects the private key from unauthorized usage.

05:25.540 --> 05:27.730
Let's say your PC, your Mac is stolen.

05:27.880 --> 05:31.050
Anyone can use that key and log into your server.

05:31.090 --> 05:34.510
If the key is protected with a passphrase, they will not be able to.

05:34.540 --> 05:39.230
You need to type the same passphrase again for the purposes of the course.

05:39.280 --> 05:47.170
The key fingerprint and the random auto you can ignore your ID has been saved in dot ss slash you 20

05:47.170 --> 05:50.890
zero for your public key has been saved in that SS age.

05:50.890 --> 05:54.230
Slash you 20 zero for dot pab.

05:54.280 --> 06:01.300
I must mention, if you cannot remember the passphrase, there is no way to recover a lost passphrase.

06:01.330 --> 06:05.890
I'm going to press my Baraki to list the contents of the DOT SS directory.

06:05.920 --> 06:10.310
Now we have three files known hosts you 20 zero four.

06:10.450 --> 06:16.900
That is my private key and you 20 zero four dot pop, which is my public key.

06:16.990 --> 06:20.490
Now we need to copy the public key to the server.

06:20.530 --> 06:23.440
The command is is CP secure.

06:23.440 --> 06:26.460
Copy that is copy over SS H.

06:26.500 --> 06:27.670
What do we want to copy.

06:27.700 --> 06:29.560
You need to specify the filename.

06:29.590 --> 06:37.660
Firstly the path dot ss h slash followed by the filename you 20 zero for pub the a space.

06:37.690 --> 06:40.120
Where do we want to copy it to my users.

06:40.120 --> 06:42.910
Andrew at my IP address kolon.

06:43.000 --> 06:45.760
Where on the server do we want to copy it to.

06:45.820 --> 06:48.970
You need to copy it to your user's home directory.

06:49.030 --> 06:52.200
Slash home slash Andrew Jessep.

06:52.240 --> 07:00.220
The path to the public key your service user at your service IP Holon slash home slash your server username.

07:00.550 --> 07:02.710
You need to type your users password.

07:04.640 --> 07:07.180
Our public, he has been copied to the server.

07:07.220 --> 07:12.640
Now we need to log into the server, we need to log into the server and configure the server to use

07:12.650 --> 07:17.370
key authentication services, each user at your servers IP address.

07:17.390 --> 07:18.770
I'm going to type clear.

07:18.890 --> 07:25.550
And then unless there is the public key that we copied to our server, this hyphen will display any

07:25.580 --> 07:32.220
hidden files or directories, any file or directory that starts with a period or DOT is a hidden file

07:32.220 --> 07:32.950
or directory.

07:32.990 --> 07:35.030
We need to rename the public key.

07:35.060 --> 07:39.020
The public key needs to be called authorized keys EMV.

07:39.140 --> 07:41.500
M.V. is your move command.

07:41.510 --> 07:44.930
It's also your rename command, followed by the file.

07:44.930 --> 07:48.510
Name you 20 zero for the public space.

07:48.620 --> 07:52.190
Now you type authorized underscore keys.

07:52.730 --> 07:57.710
We have renamed you 20 zero four two authorized keys.

07:57.710 --> 08:04.820
The authorized Keys file needs to be found in a directory called DOT SSL, which this is on the server.

08:04.820 --> 08:11.810
The file authorized keys needs to be located in a directory called Dot ss h Alice hyphen a we do not

08:11.810 --> 08:15.410
have a directory dot ss h mkdir.

08:15.470 --> 08:17.500
We want to make a directory.

08:17.540 --> 08:21.200
The name of the directory is not such a listing.

08:21.200 --> 08:22.760
These are authorized keys file.

08:22.820 --> 08:24.290
On the right hand side we have.

08:24.740 --> 08:29.840
This is such a wide listing with the L and a flex dot ss h.

08:29.870 --> 08:32.690
Look on the extreme left it is a directory.

08:35.180 --> 08:42.440
He authorized his file needs to be located in a directory DSH M.V. Only this time we are not renaming,

08:42.440 --> 08:43.330
we are moving.

08:43.340 --> 08:44.210
What are we moving?

08:44.210 --> 08:45.320
Authorized keys?

08:45.320 --> 08:53.000
We are we moving it to DSH listing displays are not in this directory, not the authorized keys file

08:53.000 --> 08:56.620
because we moved it into DSH Khedive.

08:56.630 --> 09:01.460
A space that is a and listing will display the authorized keys file.

09:01.490 --> 09:06.260
A wide listing will allow us to view the permissions on the authorized keys file.

09:06.260 --> 09:09.260
We need to lock down that authorized key file.

09:09.270 --> 09:15.230
What I mean by lockdown is we need to change the permissions and the file attributes on that file.

09:15.240 --> 09:17.180
That is an important file.

09:17.180 --> 09:23.890
So we need to lock that file down so that only our user has access to that file.

09:23.900 --> 09:25.730
There are two ways we do this.

09:25.760 --> 09:30.310
The first step is to change the permissions on the authorized keys file.

09:30.320 --> 09:32.390
The command is S.H. Mod.

09:32.510 --> 09:34.580
What permissions do we want on that file?

09:34.580 --> 09:38.270
We will allow user to read and write to that file.

09:38.270 --> 09:41.720
Read and write is four plus two, which is six.

09:41.750 --> 09:43.550
The group, no permissions.

09:43.580 --> 09:48.950
Zero other users on the server, no exis zero, no permissions.

09:49.130 --> 09:51.530
Niva Espace followed by the filename.

09:51.560 --> 09:59.570
Look at the listing above are w are the authorized keys file have permissions of six for for after typing

10:00.050 --> 10:02.210
about six hundred authorized keys.

10:02.240 --> 10:03.500
Look at the permissions now.

10:03.530 --> 10:06.680
Are w are w read write for the owner.

10:06.680 --> 10:10.040
No permissions for the group, no permissions for the other user.

10:10.070 --> 10:15.170
As this file is so important, we need to prevent this file from being deleted accidentally.

10:15.170 --> 10:18.890
To do that we need to change the attributes of the file.

10:18.890 --> 10:23.450
We need to set what is called an immutable but on the file.

10:23.450 --> 10:30.410
Once you sit and immutable, but on a file, the file cannot be modified, deleted or renamed.

10:30.440 --> 10:38.510
You need to use the chatter command S.H. a TTR to set an immutable but plus I leave a space followed

10:38.510 --> 10:39.650
by the filename.

10:39.740 --> 10:43.490
Changing file attributes is an administrative task.

10:43.520 --> 10:46.700
The root user needs to execute that command.

10:46.700 --> 10:52.310
I'm going to type the command as I have and press enter chatter operation not permitted while setting

10:52.310 --> 10:54.080
flags on authorized keys.

10:54.290 --> 10:57.530
The change attribute command is an administrative task.

10:57.530 --> 11:02.930
My user needs to invoke route privileges to invoke route privileges.

11:02.930 --> 11:08.900
My user needs to type sudo super user do prior to tapping the command.

11:08.930 --> 11:11.780
So it would be sudo the space chata.

11:11.810 --> 11:15.350
Plus I leave a space followed by the filename and enter.

11:15.350 --> 11:21.230
Now I need to type the password for my user and the command was executed successfully.

11:21.260 --> 11:28.340
Any time you need to invoke route privileges, use sudo prior to typing the command when exactly you

11:28.340 --> 11:29.510
need to use to do.

11:29.540 --> 11:33.710
As we progress through the course, you will learn when SUDA is required.

11:33.740 --> 11:35.780
Now we need to go back one level.

11:35.900 --> 11:39.170
I can use Khedive Espace double period.

11:39.170 --> 11:44.000
I'm going to list the contents of the home directory with the hyphen L and Aflex.

11:44.000 --> 11:46.730
We also need to lock down the dot is this directory.

11:46.820 --> 11:48.290
Look at the permissions on the left.

11:48.290 --> 11:52.820
Seven seven five rw x four to one.

11:52.820 --> 11:56.770
That's seven or eight seven six five.

11:56.780 --> 12:00.590
So that means the owner can read, write, execute in that directory.

12:00.590 --> 12:02.510
The group read, write, execute.

12:02.510 --> 12:04.670
Other users can read and execute.

12:04.700 --> 12:09.920
Execute with reference to a directory means other users can change to that directory.

12:09.920 --> 12:10.790
We don't want that.

12:10.820 --> 12:15.750
Let's prevent anyone except the owner from having access to that directory.

12:16.310 --> 12:20.660
Mod the owner read, write, execute for plus two plus one seven.

12:20.690 --> 12:24.290
The group, no permissions, other users, no permissions.

12:24.290 --> 12:30.680
So it's not 746 H slash listing with the hyphen L-A flags.

12:30.710 --> 12:31.940
Look at the permissions now.

12:31.940 --> 12:39.590
Read, write, execute followed by six hyphens only the user Andrew has access to that DSH directory.

12:39.620 --> 12:42.350
Now we need to edit a configuration file.

12:42.350 --> 12:45.950
The file we need to edit is SS HD underscore config.

12:45.950 --> 12:48.590
We've already edited the file as the route user.

12:48.590 --> 12:49.640
What do we need to do?

12:49.640 --> 12:52.970
Turn off password authentication and allow access?

12:52.970 --> 12:55.700
A key authentication code slash.

12:55.700 --> 13:03.500
Where's the file located slash ATC Slash SS Edge and listing of the slash H directory.

13:03.530 --> 13:07.400
There is the file is this underscore config as well as the backup file.

13:07.490 --> 13:09.590
We don't need to create another backup file.

13:09.590 --> 13:11.060
We already have a backup.

13:11.060 --> 13:17.150
I'm going to list the contents of the ATC slash SS directory using the hyphen L flag.

13:17.180 --> 13:20.390
Look at the file SS HD underscore config.

13:20.390 --> 13:24.710
The file is owned by the Route User Group owned by the route group.

13:24.710 --> 13:25.700
Look at the permissions.

13:25.700 --> 13:28.760
The route user can read and write to that file.

13:28.760 --> 13:31.730
The group can read, other users can read.

13:31.760 --> 13:34.490
Who is your user in this case, your user is.

13:34.700 --> 13:38.790
The other user, the other user can only read that file.

13:38.810 --> 13:46.520
So if I typed Nenna, it's this underscore config file issus HD underscore config is untradable control

13:46.520 --> 13:46.980
X.

13:47.030 --> 13:47.930
Why is that?

13:48.140 --> 13:53.120
And the other user, the other user only has read permissions on that file.

13:53.130 --> 13:56.570
Previously, when we edited that file we were the route user.

13:56.600 --> 13:58.400
Look at the permissions of the user.

13:58.430 --> 14:02.130
The user can read and write to that file.

14:02.150 --> 14:09.020
What do you think we need to do to allow our non-approved user to edit that file sudo sudo nenna followed

14:09.020 --> 14:11.900
by the file that invoke route privileges.

14:11.900 --> 14:16.280
So the command is Sudo Beevor space neno followed by the filename.

14:16.310 --> 14:19.430
No warning now about the file being unreadable.

14:19.460 --> 14:22.310
We need to scroll down to the section authentication.

14:25.030 --> 14:31.690
There is permitted logging know that we changed earlier, public key authentication is commented, remove

14:31.690 --> 14:34.900
the hash to uncommented, then we have a comment.

14:34.930 --> 14:36.470
Authorized keys fall.

14:36.490 --> 14:40.450
You can uncommented to the right of authorized keys file.

14:40.450 --> 14:48.850
We have DSH slash authorized keys dot S.H. slash authorized keys to in front of the first period.

14:49.030 --> 14:56.140
I want you to type in eight per cent h slash adding per cent which means it's this must check in the

14:56.140 --> 15:04.150
user's home directory for a dot SS directory and then in that directory check for the authorized keys

15:04.150 --> 15:04.510
file.

15:04.600 --> 15:09.070
Then you need to scroll down until you find password authentication.

15:09.070 --> 15:10.630
Password authentication.

15:10.630 --> 15:17.440
It's commented you can remove the hash, change password authentication from yes to no.

15:18.820 --> 15:27.160
You can close NENO control X save, modify, buffer Tapasvi filename to write this underscore config.

15:27.340 --> 15:33.340
When you ed configuration file, you need to restart the service associated with that configuration

15:33.340 --> 15:33.730
file.

15:33.760 --> 15:37.450
When you restart services, it is the job of the root user.

15:37.450 --> 15:44.520
You need to use sudo prior to typing sys ctl suda system ctl.

15:44.530 --> 15:45.490
What do we want to do.

15:45.490 --> 15:50.020
We want to restart the name of the service that we want to restart is a SSX.

15:50.230 --> 15:52.600
I'm going to type clear at this stage.

15:52.600 --> 15:54.670
Do not close this terminal window.

15:54.670 --> 16:01.150
You can lock yourself out of your server and leave this terminal window exactly where it is and open

16:01.150 --> 16:02.860
a new terminal window.

16:02.890 --> 16:07.900
So I've opened a new terminal window, my command to log in to the server.

16:08.050 --> 16:11.560
Was this my user at my servers IP address?

16:11.740 --> 16:14.650
If I type the same command, I now get a message.

16:14.650 --> 16:18.250
Permission denied, public key to log into my server.

16:18.250 --> 16:24.310
Using this key authentication, I need to specify what is called the identity file.

16:24.430 --> 16:30.460
That is, I need to specify the private key that must be used for this particular server.

16:30.460 --> 16:39.010
So the command is H hyphen I, I'm specifying the identity file and the identity file is my private

16:39.010 --> 16:39.330
key.

16:39.340 --> 16:46.450
Dot is this access followed by my private key filename you 20 zero for leave a space.

16:46.480 --> 16:49.150
Now you specify the user on the server.

16:49.300 --> 16:52.660
In my case it's Andrew at my servers IP address.

16:56.360 --> 16:57.930
Enter passphrase for the key.

16:57.980 --> 16:59.990
This is not my service password.

17:00.020 --> 17:03.230
This is the passphrase to unlock the private key.

17:04.350 --> 17:09.060
And I have logged into my server using public private key authentication.

17:09.090 --> 17:15.300
I'm going to type exit to close the second terminal window, switch back to the terminal window that

17:15.300 --> 17:16.170
you kept open.

17:16.230 --> 17:19.530
I'm also going to log out of my server by typing exit.
