WEBVTT

00:20.230 --> 00:26.830
The first type of server side caching we will enable is object caching the store's data, such as database

00:26.830 --> 00:28.390
queries into memory.

00:28.420 --> 00:34.000
Redus can be paired with MySQL AlmerÃ­a DB to act as an object cache.

00:34.000 --> 00:37.770
How it works is the first time a WordPress page is loaded.

00:37.780 --> 00:40.720
The database query is performed on the server.

00:40.720 --> 00:47.140
Redus caches the query into memory so that when another user loads the page, there is no need to query

00:47.140 --> 00:48.370
the database again.

00:48.430 --> 00:55.120
As Redus provides, the previously cached query results from memory thus drastically increases page

00:55.120 --> 00:59.700
load speeds and reduces the impact on server database resources.

01:04.800 --> 01:10.920
There are some sites that don't make great use of page caching, ecommerce sites, membership sites,

01:10.920 --> 01:17.700
forums, discussion boards, blogs with extremely active comment sections and other types of highly

01:17.700 --> 01:19.080
dynamic websites.

01:19.260 --> 01:26.790
Highly dynamic websites are good candidates for a persistent object caching option such as Redus.

01:26.970 --> 01:34.020
Readers will generally not help the load time of static blogs, informational business websites, news

01:34.020 --> 01:38.490
websites as these sites are better suited to page caching.

01:43.500 --> 01:50.340
Redus has a limited amount of memory for cashing badly coded WordPress plugins often store a huge amount

01:50.340 --> 01:52.110
of data in the database.

01:52.350 --> 01:57.300
What happens when a plugin attempts to store a huge image or video in the database?

01:57.300 --> 02:03.090
Readers will try to store the result of the square in its buffer, but it will run out of memory.

02:03.210 --> 02:09.420
Then it will start to delete previously cache content on a first in, first out basis.

02:09.660 --> 02:15.780
If the queries results are big enough and no actual content would be cached because it would be removed

02:15.780 --> 02:18.460
before being served a second time.

02:18.480 --> 02:24.180
In this case, your website would actually slow down because not only would you fail to spare this load

02:24.180 --> 02:30.510
on the MySQL service, but you would add another service in the process that requires its own computing

02:30.510 --> 02:30.890
time.

02:35.950 --> 02:42.100
The Raiders package is near Boonchu Repository is relatively outdated, so we need to add a third party

02:42.100 --> 02:45.910
repository that contains the latest version of Raiders.

02:48.800 --> 02:54.440
Please ensure you logged into your server, that's the repository that contains the latest version of

02:54.440 --> 03:02.270
Redus Sudo Adept Repository, PPA, Kolon, Chris Hyphen, Lya Slash Redus hyphen server.

03:15.280 --> 03:21.610
It's always good practice to update the packages on your server after adding a repository to the server

03:21.610 --> 03:23.990
sudo app to get update.

03:24.040 --> 03:25.960
We need to install two packages.

03:26.170 --> 03:33.790
We deciphered server and seven point two 1/2 and Redus SUDEP get installed, followed by the package

03:33.790 --> 03:34.350
names.

03:35.500 --> 03:37.120
Yes, we want to continue.

03:46.290 --> 03:51.650
Reduced hyphen server double hyphen version five point zero five.

03:52.020 --> 03:57.150
You can type Redus Seelie to access the Redus command line interface.

03:59.180 --> 04:07.190
Typing Ping will return Pong Redus has been installed successfully, you can type exit to return to

04:07.550 --> 04:08.510
the command prompt.

04:13.570 --> 04:19.510
We need to configure the Raiders cash policy, we will set the maximum memory available for caching

04:19.510 --> 04:26.590
and also set the eviction policy for when the cache memory becomes full and we need to replace old data

04:26.590 --> 04:28.070
with new data.

04:28.120 --> 04:36.120
The configuration file rate, not SEO enough and its location is slash etsi slash Redus.

04:41.200 --> 04:45.190
Can change to the XY slash Redus directory.

04:49.190 --> 04:54.470
Make it back up to DCP file, name the space file name Dot Beeac.

04:59.310 --> 05:08.130
You can open Redus dot com and if using Nenna control w we want to search, you can type in MEXT memory

05:08.160 --> 05:14.460
control W and Presenta, we need to find the line max memory bytes.

05:14.520 --> 05:21.470
You can uncommented that particular line, remove bytes and change it to 128 megabytes.

05:21.660 --> 05:25.150
This value is dependent on your server memory.

05:25.170 --> 05:31.980
I don't recommend installing routers on a one gigabyte server, 128 megabyte on a two gigabyte server

05:32.100 --> 05:32.950
for gigabyte.

05:32.970 --> 05:37.740
You can start increasing that value to 256 and scroll a little way down.

05:37.740 --> 05:38.280
Max.

05:38.280 --> 05:39.720
Memory policy.

05:39.870 --> 05:42.480
It says no eviction and comment.

05:42.630 --> 05:46.080
That line you can remove no eviction.

05:50.490 --> 05:58.680
Max, memory policy, you can type in all keys, hyphen, URL, or you least recently used the max memory

05:58.680 --> 06:06.030
configuration is used in order to configure readers to use a specified amount of memory for the cache,

06:06.030 --> 06:13.440
all keys, LRU, IPv6 keys, but trying to remove the less recently used keys first in order to make

06:13.440 --> 06:20.070
space for the new data that is being added, you can close NENO saving your changes to Reader Stotsky

06:20.280 --> 06:20.490
in.

06:20.490 --> 06:25.680
If we've made a change to the radius configuration, we need to restart the reader service.

06:25.680 --> 06:27.140
Suda System Qty.

06:27.150 --> 06:29.670
I'll restart Redus IFN server.

06:30.000 --> 06:39.060
Also good practice to restart the FPM service SUDA System ctrl restart seven point two hyphen FPM.

06:44.140 --> 06:52.780
We need to edit WP config to add a cache key salt with the name of your site and define WP underscore

06:52.780 --> 07:00.070
cache as true to create a persistent cache with a WordPress Redus object cache plug in, which we will

07:00.070 --> 07:00.730
be adding.

07:06.260 --> 07:09.620
You can change to your side's public HTML directory.

07:16.340 --> 07:20.630
You can open up half an config using nano.

07:23.940 --> 07:27.810
The line defined WP kishke salt, you can comment.

07:30.960 --> 07:38.060
Underneath you add define WP kishke salt, you then add your sights, you Aurel.

07:42.210 --> 07:49.710
You also need to add the line to find WPE cash true, you can close WP config saving your changes.

07:57.930 --> 08:05.310
We need to install the Redus object cash plug in in order for WordPress to make use of Redus as an object

08:05.310 --> 08:08.700
cache WP plugin search Redus.

08:09.030 --> 08:12.150
My very first entry Redus Object Cash.

08:12.180 --> 08:14.630
The slug is Redus Cash.

08:14.820 --> 08:16.490
I'm going to copy the slug.

08:25.370 --> 08:29.330
WP plugin install Redus, IFN Cash.

08:36.270 --> 08:42.270
After installing any plug ins or changing themes, run the WordPress ownership and permissions script

08:42.270 --> 08:44.040
in your home directory.

08:44.100 --> 08:45.810
I've opened my site's dashboard.

08:45.840 --> 08:48.840
I can go to plug ins, installed plug ins.

08:48.870 --> 08:51.920
There is Redus Object Cash activated.

08:51.930 --> 08:54.300
We can then go to settings.

08:54.570 --> 08:56.520
Enable object cache.

08:56.730 --> 08:58.710
Object cache enable.

09:09.320 --> 09:17.420
If you are going to install and use Redus with W3 Total Cash, do not install the Redus object cash,

09:17.420 --> 09:20.900
plug in BTC will control Redus.

09:21.110 --> 09:27.470
It's important that you test your site thoroughly after enabling object caching, review all critical

09:27.470 --> 09:33.960
processes on your website to ensure that cached objects are not being reused incorrectly.

09:34.130 --> 09:41.600
If you find a cached objects are being used incorrectly, it may be possible to exclude specific groups

09:41.600 --> 09:43.820
of objects from object caching.

09:43.820 --> 09:49.010
Manipulating object cache performance is way outside the scope of this course.

09:49.220 --> 09:55.090
It requires the involvement of a suitable and experienced WordPress developer.

09:55.100 --> 09:58.810
In this lecture, you configured object caching on your server.
