WEBVTT

00:17.530 --> 00:22.780
In this lecture, we are going to configure the main engine X configuration file.

00:22.960 --> 00:30.190
The process involves securing and optimizing the configuration settings in Engine X Dot SEO.

00:30.190 --> 00:36.790
And if there is only one configuration file we will be working with in this lecture, and that is engine

00:36.790 --> 00:46.830
X dot C seo in F, the absolute path to the file slash ATC slash engine X slash engine Eckstut Seo.

00:46.960 --> 00:54.340
And if the commands we will be using in this lecture are as follows neno to open the file to determine

00:54.340 --> 01:02.230
the number of c.p.u course ellis' c.p.u to determine the number of worker connections you limit.

01:02.410 --> 01:03.300
Hyphen in.

01:03.340 --> 01:09.180
There are two important engine X commands that you must make note of.

01:09.190 --> 01:11.650
You will be using them frequently.

01:11.770 --> 01:15.790
The first command is Sudo Ingenix hyphen t.

01:15.790 --> 01:23.410
That command will test Syntex of your configuration file and if there is an error it will display the

01:23.410 --> 01:24.340
error to you.

01:24.340 --> 01:27.580
The next command is sudo system.

01:27.580 --> 01:30.370
Ctrl, reload or restart.

01:30.550 --> 01:34.900
Ingenix I recommend you always use reload.

01:34.990 --> 01:39.370
The reload command will not drop connections to your server.

01:39.370 --> 01:43.180
Restart, on the other hand, will drop connections.

01:43.330 --> 01:52.300
So after you edit any engine X configuration file, you test the configuration using sudo engine X,

01:52.330 --> 01:56.590
hyphen T to enable the changes that you have made.

01:56.800 --> 01:59.830
Sudo sys ctrl reload.

02:00.160 --> 02:08.260
Ingenix, I'm going to take you through the changes that you need to make to the engine x dot seo NFR.

02:08.270 --> 02:16.720
Firstly, in the main context, worker processes is set to the number of CPU cause your server has.

02:16.720 --> 02:21.700
We will be adding worker our limit no file to the main context.

02:21.730 --> 02:28.540
This will help prevent the too many files open error that sometimes happens on busy sites.

02:28.540 --> 02:35.520
In the events context, we will be modifying the worker connections multi accept and use EPOP.

02:35.560 --> 02:43.540
The worker connections value specifies how many people can simultaneously be served by Ingenix by adding

02:43.540 --> 02:47.770
the worker or limit no file director to the main context.

02:47.800 --> 02:56.440
The Worker Connections Directive can be increased beyond the system defaults by enabling multi, except

02:56.440 --> 03:02.830
it causes Engine X to immediately accept as many connections as it can.

03:02.830 --> 03:09.130
People is recommended to increase throughput in the HTTP context.

03:09.340 --> 03:12.400
They are quite a few directives we need to look at.

03:12.520 --> 03:20.560
The server tokens directive enables or disables Engine X, displaying the version on error pages and

03:20.560 --> 03:22.990
in the server response header field.

03:22.990 --> 03:31.600
We will disable this to prevent information leakage to quickly process static sets of data such as server

03:31.600 --> 03:35.470
names, engine X users, hash tables.

03:35.500 --> 03:39.310
The size of a table is expressed in buckets.

03:39.310 --> 03:44.860
We are going to enable the server names, hash packet size directive.

03:44.890 --> 03:50.080
You have to log files and access log and an error log.

03:50.080 --> 03:56.290
The access log file records, every single request made to your server on a busy site.

03:56.560 --> 04:05.230
This can translate into huge resource demands if you don't need the access log file and for a huge performance

04:05.230 --> 04:07.930
boost, disable the access log file.

04:07.930 --> 04:15.580
The error log file must be kept as it's invaluable for troubleshooting by using GS of compression assets

04:15.580 --> 04:22.030
that clients are requesting will be compressed, therefore smaller and faster to send.

04:22.030 --> 04:27.640
We need to optimize the settings so as not to waste CPU cycles.

04:27.790 --> 04:32.800
Please do not attempt to compress an asset that's already compressed.

04:32.800 --> 04:39.160
JPEG files are already compressed and by attempting to compress them further, you will probably end

04:39.160 --> 04:40.600
up with a larger file.

04:40.600 --> 04:45.970
And you started with buffers, Tomaz and file handle caching.

04:45.970 --> 04:48.850
I'm going to look at those three individually.

04:49.000 --> 04:56.860
If the buffer sizes are too low, Engine X will read and write to disk constantly, thereby reducing

04:56.860 --> 04:57.790
performance.

04:58.000 --> 05:04.990
The following four directives will help with buffer sizes, the client body buffer size.

05:05.020 --> 05:11.650
The directive handles the client buffer size when post actions are sent to Ingenix.

05:11.680 --> 05:14.260
This is when forms are submitted.

05:14.260 --> 05:17.020
The client header, buffer sites, the storage.

05:17.110 --> 05:22.300
Have handles the client Hida sized client max body size.

05:22.360 --> 05:27.940
The directive specifies the maximum allowed size for a client request.

05:27.970 --> 05:36.560
If the size is exceeded, Engine X will display a request entity to large era large client hit buffers.

05:36.610 --> 05:41.320
The directive specifies the maximum number and size of buffers.

05:41.530 --> 05:43.020
For large client.

05:43.040 --> 05:44.980
It is the purpose of a server.

05:44.980 --> 05:52.660
Timeout is to prevent a device from endlessly waiting for a server to respond, the client body time

05:52.660 --> 05:55.300
out and client head time out.

05:55.400 --> 06:02.290
These two directors are responsible for how long the server will wait for a client or client header

06:02.290 --> 06:06.450
to be sent after the request to keep a lifetime out.

06:06.490 --> 06:12.100
This directive determines the time out for keep alive connections with the client.

06:12.130 --> 06:16.450
The connection will close after this time period since.

06:16.810 --> 06:22.420
But this directive sets a time out for transmitting a response to the client.

06:22.510 --> 06:29.380
If the client does not receive anything within this time, the connection is closed on a network file

06:29.380 --> 06:29.980
system.

06:29.980 --> 06:33.250
Opening a file can be a source of delay.

06:33.250 --> 06:41.740
Engine X can maintain a cache of open file descriptors for commonly served files, thereby avoiding

06:41.740 --> 06:42.430
the delay.

06:42.460 --> 06:49.960
The file handle cache does not cache the contents of a file, but rather the file descriptors.

06:49.960 --> 06:57.400
When you open a file, the operating system creates an entry to store information about open file in

06:57.400 --> 06:59.560
the file descriptor table.

06:59.560 --> 07:06.220
Some of this information is the file size modification time file lookup errors.

07:06.250 --> 07:09.250
What the Engine X File handle cache does.

07:09.460 --> 07:17.440
It caches the file handles to frequently requested files, so this avoids the need for the operating

07:17.440 --> 07:20.230
system to reopen them again.

07:20.230 --> 07:28.630
The one downside is that Agent X takes a little while to react to any changes you have made to any files

07:28.630 --> 07:30.610
in the settings we are going to use.

07:30.610 --> 07:38.350
The inactive file descriptors will expire in twenty seconds and the recently used descriptors will be

07:38.350 --> 07:41.590
revalidated every thirty seconds.

07:41.620 --> 07:49.420
We are going to add these directives to Ingenix, but I recommend you only enable them once your WordPress

07:49.420 --> 07:50.980
site is up and running.

07:51.010 --> 07:57.270
The settings work perfectly on a production server with a stable file collection.

07:57.280 --> 08:04.060
In this lecture, we looked at securing and optimizing the main engine X configuration file.
