1

00:00:01,440  -->  00:00:03,840
We're getting to the end of completing the stored procedure.

2

00:00:03,840  -->  00:00:06,720
So let's quickly recap on our progress up to now.

3

00:00:07,170  -->  00:00:13,830
So far we have created a working table to store our data then we populated it with records from our

4

00:00:13,830  -->  00:00:17,700
row table and along the way we had to exclude some anomalies.

5

00:00:17,700  -->  00:00:20,190
They were present in the original data set.

6

00:00:20,310  -->  00:00:25,560
Finally in the previous tutorial we leveraged our domain knowledge to exclude a one or more corrupt

7

00:00:25,560  -->  00:00:28,770
record where the balance column was less than zero.

8

00:00:28,770  -->  00:00:34,610
Today I will show you how to perform another quick but very powerful Q8 check to start off.

9

00:00:34,680  -->  00:00:37,880
Let's select all of the records in a working table.

10

00:00:37,890  -->  00:00:42,540
Our goal in this phase of the e-tail is to make sure that all of the fields that are important for our

11

00:00:42,540  -->  00:00:44,050
analysis are clean.

12

00:00:44,100  -->  00:00:49,260
Let's look at the zip code called For instance if our goal is to create a geo demographic segmentation

13

00:00:49,260  -->  00:00:50,240
of our customers.

14

00:00:50,400  -->  00:00:52,440
Then this field would be crucial.

15

00:00:52,440  -->  00:00:55,230
How can we make sure that it is clean.

16

00:00:55,230  -->  00:00:57,620
Well let's have a look.

17

00:00:57,890  -->  00:01:03,810
Did you notice that all of the records have the same structure three characters then a space and then

18

00:01:03,840  -->  00:01:09,750
another three characters we can use a structure to our advantage to fish out any non-conforming records

19

00:01:10,260  -->  00:01:17,160
and to do this we're going to use wildcards or regular expressions in the additional exclusion sections

20

00:01:17,160  -->  00:01:24,620
of the script type and then you select query we're going to select from the working table again.

21

00:01:25,320  -->  00:01:30,150
And in the WHERE clause type in where.

22

00:01:30,440  -->  00:01:44,520
Zip code not like and then a single quotation mark three underscores in a row a space three more underscores

23

00:01:45,330  -->  00:01:48,070
and a closing single quotation.

24

00:01:48,540  -->  00:01:50,120
Let's analyze this.

25

00:01:50,310  -->  00:01:56,040
As you recall the underscore is a wildcard for any character but only one character.

26

00:01:56,130  -->  00:02:02,400
That means that this regular expression specifies exactly the format in which our zip codes are presented

27

00:02:02,400  -->  00:02:03,160
.

28

00:02:03,330  -->  00:02:09,240
And because of the word that this select statement will pick out any records that are violating the

29

00:02:09,240  -->  00:02:15,750
specified structure highlight the select statement and click execute to run it.

30

00:02:16,380  -->  00:02:23,610
As you can see we have found four records in all of them the zip code is in a different format to what

31

00:02:23,610  -->  00:02:25,300
it should be.

32

00:02:25,380  -->  00:02:28,180
We can copy these records for further investigation.

33

00:02:28,230  -->  00:02:35,510
However in this tutorial we will simply exclude them from our analysis replace Silex star with delete

34

00:02:37,440  -->  00:02:42,690
and now run the query again forecheckers have been excluded.

35

00:02:42,810  -->  00:02:49,720
And let's copy the result as a comment underneath our query for future reference.

36

00:02:49,920  -->  00:02:51,510
We use the zip code as an example.

37

00:02:51,510  -->  00:02:58,530
However you can apply this same simple yet very powerful method to any other column that by design is

38

00:02:58,530  -->  00:03:00,950
meant to have a certain structure.

39

00:03:00,960  -->  00:03:07,710
This will help you capture and investigate your records of violating the structure in the next tutorial

40

00:03:07,830  -->  00:03:07,990
.

41

00:03:08,010  -->  00:03:15,840
Show you one file Q8 check that you can apply to any dates columns in your data set and I look forward

42

00:03:15,840  -->  00:03:16,570
to see the
