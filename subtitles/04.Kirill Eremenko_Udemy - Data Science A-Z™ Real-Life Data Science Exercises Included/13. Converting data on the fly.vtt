WEBVTT
1

00:00:00.660  -->  00:00:04.240
OK so last time we talked about leading zeros and how to add them.

2

00:00:04.250  -->  00:00:09.240
Hope you are now super come to that and you will never forget this super cool awesome trick.

3

00:00:09.390  -->  00:00:10.470
How to add leading zero's.

4

00:00:10.500  -->  00:00:13.780
And today I'll show you how to cover down on the fly.

5

00:00:13.800  -->  00:00:20.100
I thought that this is an important part for this tutorial section because even though we don't need

6

00:00:20.100  -->  00:00:24.060
to convert data we're relying on the implicit conversion.

7

00:00:24.060  -->  00:00:26.860
I think that it is worth having.

8

00:00:26.910  -->  00:00:32.250
Looking at a few examples of explicit data conversion just for the sake of practice so that you know

9

00:00:32.250  -->  00:00:39.680
how to do explicit data conversion when the time comes and you do need to do it in your work prox.

10

00:00:39.690  -->  00:00:45.150
So what are you going to do is close of these other windows that we don't need make up some make some

11

00:00:45.150  -->  00:00:46.360
space here.

12

00:00:46.740  -->  00:00:53.160
And as you know actually if we're going to close this was well so execute this proc I think we forgot

13

00:00:53.160  -->  00:00:56.150
to do this last time by the way remember that.

14

00:00:56.220  -->  00:01:00.670
So that thing I was talking about when you you've changed a proc but you haven't executed.

15

00:01:00.780  -->  00:01:06.180
So exit your prog before closing and just to make sure that you've saved the modification you have done

16

00:01:06.180  -->  00:01:06.490
.

17

00:01:06.630  -->  00:01:13.510
And what I what I do sometimes or often is actually select everything including where is it.

18

00:01:13.510  -->  00:01:19.150
So including from end to alter and then execute Yeah like that.

19

00:01:19.320  -->  00:01:22.260
And then I close the proc.

20

00:01:22.470  -->  00:01:27.350
So it's up to the do that way do it this way but just make sure you save it.

21

00:01:27.450  -->  00:01:27.780
All right.

22

00:01:27.780  -->  00:01:34.230
So we're going to look at the other one the transactional door because it has more data types and here

23

00:01:34.710  -->  00:01:36.470
these are the types who specified.

24

00:01:36.630  -->  00:01:42.360
As you recall we're relying on implicit conversion and this is a topic we discussed in the previous

25

00:01:42.360  -->  00:01:51.420
section of the course where you can basically rely on a all to do the conversion for you as long as

26

00:01:51.420  -->  00:01:53.220
it's from var char to these types.

27

00:01:53.220  -->  00:01:56.720
And you know our chairs are correct.

28

00:01:57.210  -->  00:02:03.390
Sometimes you know we do a lot of preparation before the load and we we work in Excel and we discussed

29

00:02:03.390  -->  00:02:10.710
this in a lot of detail how to prepare our data so that when we upload into Excel as RAW files we have

30

00:02:10.830  -->  00:02:18.780
as minimal headache as possible because we've already prepared it in the best in the best way and all

31

00:02:18.780  -->  00:02:21.160
of this implicit conversion happens very easy.

32

00:02:21.240  -->  00:02:26.340
But sometimes you will be faced with situations when you will either get errors or you will know in

33

00:02:26.340  -->  00:02:33.800
advance that your daughter will not be easily converted from these bar charts into these types.

34

00:02:33.810  -->  00:02:39.560
I'll give you a simple example so where's our rafaÅ‚.

35

00:02:39.610  -->  00:02:41.040
So that's our raw file.

36

00:02:41.040  -->  00:02:46.510
So here you can see for instance that dates we formatted the date really really nicely.

37

00:02:46.560  -->  00:02:54.930
This is what it does is called This is called the conventional I think method there's a specific name

38

00:02:54.930  -->  00:03:01.160
for this type of format universal form or something that because it's very easy to work with.

39

00:03:01.320  -->  00:03:02.700
Skill loves this type of format.

40

00:03:02.700  -->  00:03:10.350
When you have a year month date or date and in this case it converts easily but you can have a situation

41

00:03:10.350  -->  00:03:12.140
when you weren't able to do that.

42

00:03:12.140  -->  00:03:19.620
For instance if your file is too large to even open in Excel or even notepad plus plus or anywhere that

43

00:03:19.620  -->  00:03:27.630
it's you know several maybe dozens or maybe 100 gigabytes or something like that you can open it then

44

00:03:27.800  -->  00:03:33.930
and you just put it into a skill as is and and this format is incorrect it's not like you wanted to

45

00:03:33.930  -->  00:03:35.190
be.

46

00:03:35.190  -->  00:03:40.860
So it has like slashes or Dodsworth an American form in English form and whatever the case is.

47

00:03:40.920  -->  00:03:46.830
But you know that skill is going to error error out when you try to convert it because implicit conversion

48

00:03:46.830  -->  00:03:47.340
won't work.

49

00:03:47.340  -->  00:03:50.150
You have to specify the format of the date.

50

00:03:50.500  -->  00:03:57.050
Then one that's one of the cases when you might need to perform an explicit conversion.

51

00:03:57.180  -->  00:04:01.400
So let's have a look at a few examples of explicit conversions just for practice sake.

52

00:04:01.440  -->  00:04:04.710
We'll pretend that even though everything is working here fine.

53

00:04:04.730  -->  00:04:09.560
We'll pretend that we we do need to do an explicit conversion and I'll show you how to do it.

54

00:04:09.690  -->  00:04:15.630
So all you have to do is like in the example of adding leading zeros you do oleum with duplications

55

00:04:15.630  -->  00:04:21.650
in this select part so this is this is whatever you select here that's what goes into your table.

56

00:04:21.810  -->  00:04:23.960
Here are you just setting up your table you've done that.

57

00:04:23.970  -->  00:04:25.010
You know what you want.

58

00:04:25.020  -->  00:04:25.780
Great.

59

00:04:25.860  -->  00:04:30.760
Here you just specifying insert into your table so this is just like an auxiliary part.

60

00:04:30.780  -->  00:04:35.400
This is the main part where you have to do all of your modifications as I call them on the fly.

61

00:04:35.400  -->  00:04:42.450
So basically you selecting something from a table on the fly will fall at any intermediate storage facility

62

00:04:42.450  -->  00:04:48.300
you're modifying it and you're right away putting it into your final destination.

63

00:04:48.300  -->  00:04:49.660
Let's look at that.

64

00:04:49.860  -->  00:04:51.350
Let's start order date.

65

00:04:51.810  -->  00:04:55.440
Let's say we want to convert the order date.

66

00:04:55.800  -->  00:05:00.780
This column called Order Date into a date type So we're going to type and convert.

67

00:05:01.050  -->  00:05:03.770
It's going to be a date expression or a date.

68

00:05:03.780  -->  00:05:11.790
And here you have as we discussed convert is better than cost for data because you can actually specify

69

00:05:12.180  -->  00:05:14.850
the type of data you want to be converting.

70

00:05:14.850  -->  00:05:18.820
So let me bring up one.

71

00:05:18.830  -->  00:05:20.920
Give me a second tier skill.

72

00:05:20.940  -->  00:05:25.170
I'm looking up in Google convert

73

00:05:27.800  -->  00:05:32.350
So there we go to your skill costs and convert.

74

00:05:32.660  -->  00:05:41.150
And here if we scroll down it has a list of the actual dates that you will date formats that you'll

75

00:05:41.150  -->  00:05:42.500
be you can be working with.

76

00:05:42.740  -->  00:05:49.550
So let me zoom my browser in a bit here so we can see better what's going on.

77

00:05:49.550  -->  00:05:57.200
So if your day this is you you have an opportunity to tell a school which date your daughter is presented

78

00:05:57.200  -->  00:06:00.230
in which format your date in your door is presented.

79

00:06:00.500  -->  00:06:06.750
And here if you scroll down lower or lower there it is oh there that's a name canonical.

80

00:06:06.770  -->  00:06:10.500
So that's the canonical format that we're working with.

81

00:06:10.910  -->  00:06:11.930
And let's specify that.

82

00:06:11.930  -->  00:06:21.650
So if I say well I don't have millisecond So I'm just going to say 20 right here if I say 20 and I select

83

00:06:21.650  -->  00:06:24.590
that it works just fine.

84

00:06:25.010  -->  00:06:30.080
But you see you lose the column name but that doesn't matter because that's just a select statement

85

00:06:30.080  -->  00:06:32.630
you're still inserting into somewhere where there is a column name.

86

00:06:32.630  -->  00:06:38.480
So that's not a problem but now say if my fi specified just for fun.

87

00:06:38.670  -->  00:06:40.250
1 1 1 right.

88

00:06:40.340  -->  00:06:41.750
What will happen.

89

00:06:41.840  -->  00:06:45.410
What do you think will happen.

90

00:06:45.750  -->  00:06:46.800
Execute.

91

00:06:46.800  -->  00:06:49.000
Now this time this time it's.

92

00:06:49.490  -->  00:06:49.920
Yeah.

93

00:06:49.970  -->  00:06:54.550
That's I'm actually quite surprised sometimes it's smart about these things but let's say I specify

94

00:06:54.550  -->  00:06:55.080
1 to 1.

95

00:06:55.070  -->  00:06:56.450
So the US format

96

00:06:58.380  -->  00:07:00.820
.

97

00:07:01.480  -->  00:07:06.470
See now there there's an error conversion failed when converting date and or time from character string

98

00:07:06.480  -->  00:07:06.610
.

99

00:07:06.740  -->  00:07:12.560
This is a string that is correct and we're telling you all that this string is presented in this format

100

00:07:13.010  -->  00:07:18.530
and you convert to that it can convert today because it's we've told the wrong format.

101

00:07:18.530  -->  00:07:21.440
So in our case the format is 20.

102

00:07:21.440  -->  00:07:28.070
So if in your case you got a row file where the format is one of these you know you just go here you

103

00:07:28.070  -->  00:07:33.410
look it up you find the correct code and you put it into convert that will allow you to convert the

104

00:07:33.410  -->  00:07:34.560
data on the fly.

105

00:07:34.970  -->  00:07:38.000
Let's do another one let's say.

106

00:07:38.240  -->  00:07:41.290
Let's say you were having trouble with a unit price.

107

00:07:41.300  -->  00:07:47.030
And we want to cost that into into a flow right.

108

00:07:47.060  -->  00:07:49.270
And here is the implicit conversion.

109

00:07:49.270  -->  00:07:54.350
For some reason it's not working let's just I'll show you how to do it.

110

00:07:54.350  -->  00:07:56.880
We won't come up with the reasons why it wouldn't be working.

111

00:07:56.900  -->  00:07:59.560
But at least you will know how to deal with the problem.

112

00:07:59.570  -->  00:08:00.980
If that ever comes up.

113

00:08:00.980  -->  00:08:07.520
All right so as we discussed the cost is better than our a bit faster than convert because it's faster

114

00:08:07.520  -->  00:08:10.950
to type cost you know price as float.

115

00:08:11.060  -->  00:08:11.320
All right.

116

00:08:11.330  -->  00:08:13.200
So first like this now.

117

00:08:13.230  -->  00:08:13.820
Good.

118

00:08:13.970  -->  00:08:14.880
It's working.

119

00:08:14.900  -->  00:08:22.230
And see for that for example if I put it here it won't work because you can convert a float turn an

120

00:08:22.720  -->  00:08:29.870
int followed specifying you know the rounding and stuff like that so it's a float and I can do the same

121

00:08:29.870  -->  00:08:32.060
for units costs.

122

00:08:32.210  -->  00:08:33.590
You can use a convert if you like.

123

00:08:33.590  -->  00:08:37.100
I just think cost is faster cost.

124

00:08:37.120  -->  00:08:40.730
This is going to be a flow that's going to be an int.

125

00:08:40.760  -->  00:08:42.380
These are large chars.

126

00:08:42.410  -->  00:08:45.430
You don't have to convert them you can if you want to.

127

00:08:45.960  -->  00:08:48.210
Customer ID convert so on.

128

00:08:48.590  -->  00:08:49.880
So let's do that again

129

00:08:52.520  -->  00:08:56.130
truncate table insert 43 43.

130

00:08:56.240  -->  00:08:57.480
Have a look.

131

00:08:57.590  -->  00:09:04.290
Another reason why you might want to ever do this is let's say for his daughter you got the wrong file

132

00:09:04.300  -->  00:09:04.510
.

133

00:09:04.560  -->  00:09:06.380
It's not prepared by you.

134

00:09:06.380  -->  00:09:13.520
Somebody else prepared it it's you imported from another database and these columns they already have

135

00:09:13.520  -->  00:09:20.720
types for instance in unit prices or any float units is already integer and so on and you want to change

136

00:09:20.720  -->  00:09:21.500
those types.

137

00:09:21.500  -->  00:09:24.350
You might want units not to be a full integer.

138

00:09:24.350  -->  00:09:29.900
You wanted to be a float because then you're going to be adding appending more rows where units is actually

139

00:09:29.900  -->  00:09:30.690
a float.

140

00:09:30.860  -->  00:09:38.360
Or in your in your data unit price is actually an integer and you need to somehow around this number

141

00:09:38.360  -->  00:09:44.060
so you do a round and then you would do a cost into an integer and things like that or say maybe the

142

00:09:44.060  -->  00:09:50.120
person that is the custodian of the data thought that order ID is an integer but you want to see it

143

00:09:50.120  -->  00:09:50.750
as a string.

144

00:09:50.750  -->  00:09:57.500
Then you would do one of those operations because otherwise sometimes the implicit conversion will not

145

00:09:57.560  -->  00:09:59.150
work by itself.

146

00:09:59.150  -->  00:10:02.130
So that's how you convert dot on the fly.

147

00:10:02.600  -->  00:10:04.950
I hope that's handy.

148

00:10:05.060  -->  00:10:09.960
You might not need it in in this course although I will try.

149

00:10:10.190  -->  00:10:18.740
I will try for you to need it but you will definitely someday come across situations when this knowledge

150

00:10:18.830  -->  00:10:21.200
will help you out in your work.
