WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.450
Hi.

00:00:01.450 --> 00:00:03.370
In the previous lecture,

00:00:03.370 --> 00:00:06.020
we learned about the proof or fork aunt,

00:00:06.020 --> 00:00:11.850
how the miners compete for it to win the reward by adding the block to the block shin.

00:00:11.850 --> 00:00:14.750
We then learned about the nonce number.

00:00:14.750 --> 00:00:16.290
Let's see.

00:00:16.290 --> 00:00:22.490
What do we mean by the difficulty level of the knowns on how the increasing number of zeros

00:00:22.490 --> 00:00:28.130
increases the total number off attempts required to find the hash.

00:00:28.130 --> 00:00:30.950
So let's go to the actual code.

00:00:30.950 --> 00:00:35.050
So here I am in the bite on environment.

00:00:35.050 --> 00:00:36.330
Andi,

00:00:36.330 --> 00:00:36.660
Uh,

00:00:36.660 --> 00:00:42.830
I have this small little function which is going to use the library for hashed from hash

00:00:42.830 --> 00:00:43.050
leap.

00:00:43.050 --> 00:00:46.870
We are going to accept certain inputs here,

00:00:46.870 --> 00:00:52.370
which is nothing but some sort off input string on and the total number off leading zeros.

00:00:52.370 --> 00:00:54.630
We want Andreae,

00:00:54.630 --> 00:00:55.370
then Ah,

00:00:55.370 --> 00:00:56.680
I've just added some numbers.

00:00:56.680 --> 00:01:01.870
Some random number here just strike toe a pain that they will be certain dashes also

00:01:01.870 --> 00:01:04.570
upended after the data stream on DA.

00:01:04.570 --> 00:01:07.800
Then we try to find out particular hash on.

00:01:07.800 --> 00:01:08.230
Finally,

00:01:08.230 --> 00:01:09.970
we print it in terms off.

00:01:09.970 --> 00:01:10.870
What was the proof off?

00:01:10.870 --> 00:01:11.250
Look,

00:01:11.250 --> 00:01:16.510
what was the start and the end time and what was the duration for that on the time and has

00:01:16.510 --> 00:01:18.590
taken to gaze that particular nonce.

00:01:18.590 --> 00:01:21.410
So let's get started on this.

00:01:21.410 --> 00:01:23.860
I'm simply going to run this.

00:01:23.860 --> 00:01:28.100
It is asking me to enter and put string Andi.

00:01:28.100 --> 00:01:36.660
All I'm going to do is simply type my name and it is asking me to enter the number off

00:01:36.660 --> 00:01:37.640
leading zeros.

00:01:37.640 --> 00:01:39.440
Let's say to begin with,

00:01:39.440 --> 00:01:43.230
I simply interfere one leading zero on.

00:01:43.230 --> 00:01:43.930
There you go.

00:01:43.930 --> 00:01:45.030
It was pretty quick.

00:01:45.030 --> 00:01:51.310
So this was the proof off work that was given on DA The very first hash for that that I

00:01:51.310 --> 00:01:53.700
will go to them came up with Waas.

00:01:53.700 --> 00:01:56.040
This so on.

00:01:56.040 --> 00:02:03.790
The number off attempted has taken is 17 on the time to give the nonce waas less than few

00:02:03.790 --> 00:02:04.460
milliseconds.

00:02:04.460 --> 00:02:08.820
So what I'm going to do is I'm going going to run that program again.

00:02:08.820 --> 00:02:12.750
Andi lets me just crawl down of it.

00:02:12.750 --> 00:02:16.650
So I give the same data.

00:02:16.650 --> 00:02:23.150
On this time I'm going to give to leading zeros and I play center.

00:02:23.150 --> 00:02:25.870
So as you can see,

00:02:25.870 --> 00:02:32.150
it has taken 372 attempts for it to come up with.

00:02:32.150 --> 00:02:39.780
The two leading zeros are hash Witter to leading zeros on the time it has taken is if I'm

00:02:39.780 --> 00:02:40.500
not mistaken.

00:02:40.500 --> 00:02:41.260
This is ah,

00:02:41.260 --> 00:02:42.250
two millisecond.

00:02:42.250 --> 00:02:46.380
Let me increase the difficulty level of it on.

00:02:46.380 --> 00:02:48.650
Let's see what happens then.

00:02:48.650 --> 00:02:52.750
So my data remains constant.

00:02:52.750 --> 00:02:58.150
The number off leading zeros that I want this time is three.

00:02:58.150 --> 00:03:00.990
Okay,

00:03:00.990 --> 00:03:02.350
As you can see,

00:03:02.350 --> 00:03:12.670
the number off attempts has increased from 3 72 to 12,673 on the amount of time it has

00:03:12.670 --> 00:03:14.150
taken has also increased.

00:03:14.150 --> 00:03:15.650
So,

00:03:15.650 --> 00:03:21.680
as you can see as we are increasing the number off leading zeros the number of attempts to

00:03:21.680 --> 00:03:29.180
find out a nonce that will basically prove this work is increasing on to let me run it

00:03:29.180 --> 00:03:34.240
again on Let me actually this time instead of three.

00:03:34.240 --> 00:03:35.970
Let me straightaway jumped through.

00:03:35.970 --> 00:03:37.550
Maybe five leading zeros.

00:03:37.550 --> 00:03:38.390
Andi,

00:03:38.390 --> 00:03:39.650
Let's see what happens.

00:03:39.650 --> 00:03:42.150
It's running.

00:03:42.150 --> 00:03:44.750
It's still running.

00:03:44.750 --> 00:03:45.950
Wow.

00:03:45.950 --> 00:03:56.330
So it has taken close to five seconds to come up with the nonce which has got five leading

00:03:56.330 --> 00:03:56.950
zeros.

00:03:56.950 --> 00:03:58.040
Remember,

00:03:58.040 --> 00:04:00.750
the my data is British.

00:04:00.750 --> 00:04:02.950
On some random numbers.

00:04:02.950 --> 00:04:11.250
All I wanted was get a hash for this data with five leading zeros.

00:04:11.250 --> 00:04:21.080
The number off attempts it has taken is 1.3321251 point three million are teams it has

00:04:21.080 --> 00:04:22.470
taken Andi.

00:04:22.470 --> 00:04:29.050
It has taken close to 4.87 That's almost five seconds,

00:04:29.050 --> 00:04:30.650
is what it has taken,

00:04:30.650 --> 00:04:33.760
I guess on hash,

00:04:33.760 --> 00:04:35.550
with five leading zeros.

00:04:35.550 --> 00:04:39.370
Let's do it again on this time.

00:04:39.370 --> 00:04:46.240
Probably I will have to pause the video because it is going to take maybe a minute or two.

00:04:46.240 --> 00:04:49.850
I'm going to add six leading zeros now,

00:04:49.850 --> 00:04:57.250
and let's see how many attempts it takes on the amount off time that it takes to get the

00:04:57.250 --> 00:05:01.220
nuance it's running.

00:05:01.220 --> 00:05:05.950
I'm going to pause the video on Come back ones.

00:05:05.950 --> 00:05:17.110
It has successfully guest the nonce on there you go by simply adding one leading zero from

00:05:17.110 --> 00:05:18.450
5 to 6.

00:05:18.450 --> 00:05:24.660
The proof off work has taken 22 million attempts,

00:05:24.660 --> 00:05:33.750
and it has taken almost one minute on 15 2nd to finish this particular task.

00:05:33.750 --> 00:05:35.710
As you can see,

00:05:35.710 --> 00:05:40.950
it has increased exponentially compared to the previous one.

00:05:40.950 --> 00:05:42.550
All right,

00:05:42.550 --> 00:05:45.360
so if I add another one,

00:05:45.360 --> 00:05:47.450
it's probably going to take 10 minutes.

00:05:47.450 --> 00:05:48.370
Andi,

00:05:48.370 --> 00:05:49.450
if I add,

00:05:49.450 --> 00:05:50.110
let's say,

00:05:50.110 --> 00:05:52.170
nine leading or 10 leading zeros,

00:05:52.170 --> 00:05:54.290
it can be hundreds off millions.

00:05:54.290 --> 00:05:59.350
I won't be surprised even if it is close to a 1,000,000,000 attempt that it will take.

00:05:59.350 --> 00:06:01.350
I do not want to try it.

00:06:01.350 --> 00:06:06.150
I'm not going to do that as it might just run overnight.

00:06:06.150 --> 00:06:08.250
So I'm going to stop here.

00:06:08.250 --> 00:06:09.820
But as you can see,

00:06:09.820 --> 00:06:13.080
it has taken for this particular string.

00:06:13.080 --> 00:06:14.700
It has taken me one minute,

00:06:14.700 --> 00:06:17.870
15 seconds to get the nuns on.

00:06:17.870 --> 00:06:24.650
The number off attempts were 22 million on 36,000 649.

00:06:24.650 --> 00:06:30.240
But now let's go to our has generators on.

00:06:30.240 --> 00:06:36.490
See how easy these to verify that I have found a correct nonce.

00:06:36.490 --> 00:06:38.940
So here we are,

00:06:38.940 --> 00:06:41.850
in our sharp to 56 hash generators.

00:06:41.850 --> 00:06:48.800
All I'm going to do is I have already copied and pasted some of these proof off work that

00:06:48.800 --> 00:06:49.450
we checked.

00:06:49.450 --> 00:06:51.840
This one is for one leading zero.

00:06:51.840 --> 00:06:59.650
This one is for 12345 Leading zeros on this one is for six leading zeros.

00:06:59.650 --> 00:07:03.550
So let's go on check.

00:07:03.550 --> 00:07:04.650
Well,

00:07:04.650 --> 00:07:09.530
I'm going to do is copy and best all of these on.

00:07:09.530 --> 00:07:15.370
I'm going to check this check box because I want to verify all of them in one attempt Andi

00:07:15.370 --> 00:07:15.370
.

00:07:15.370 --> 00:07:24.150
Then I'm going to post this one as well on the Funnel One or we're here.

00:07:24.150 --> 00:07:29.150
All right.

00:07:29.150 --> 00:07:30.550
No,

00:07:30.550 --> 00:07:32.880
This one has,

00:07:32.880 --> 00:07:33.670
as we know,

00:07:33.670 --> 00:07:35.550
has taken a 17 at times.

00:07:35.550 --> 00:07:36.270
Sure,

00:07:36.270 --> 00:07:37.590
if I just do so,

00:07:37.590 --> 00:07:44.200
as we have seen are we typically just are the ones at the end and check whether we find

00:07:44.200 --> 00:07:44.650
something.

00:07:44.650 --> 00:07:46.340
Okay.

00:07:46.340 --> 00:07:47.950
I haven't found anything.

00:07:47.950 --> 00:07:50.670
I haven't found anything here.

00:07:50.670 --> 00:07:53.840
Not with three with seven attempts.

00:07:53.840 --> 00:07:54.550
No,

00:07:54.550 --> 00:07:56.250
we said 17 attempts.

00:07:56.250 --> 00:07:59.130
So with 17 attempts,

00:07:59.130 --> 00:08:03.050
I am able to find announce with one leading zero.

00:08:03.050 --> 00:08:04.740
With this,

00:08:04.740 --> 00:08:15.250
it was even more difficult because we had 13321 to 513321 to five.

00:08:15.250 --> 00:08:16.150
So,

00:08:16.150 --> 00:08:17.340
as you can see,

00:08:17.340 --> 00:08:22.250
it then generated a hash with five leading zeros.

00:08:22.250 --> 00:08:24.100
Minimum five leading zeros.

00:08:24.100 --> 00:08:26.100
So this is with six leading zeros.

00:08:26.100 --> 00:08:29.610
Then when I mentioned minimum six,

00:08:29.610 --> 00:08:32.150
this is the number that it generated.

00:08:32.150 --> 00:08:36.350
I'm simply going to copy and paste it years.

00:08:36.350 --> 00:08:37.310
Ah,

00:08:37.310 --> 00:08:40.720
Now I need to remove these Carmos on.

00:08:40.720 --> 00:08:41.870
As you can see,

00:08:41.870 --> 00:08:46.850
it has generated a hash with six leading zeros.

00:08:46.850 --> 00:08:54.260
So even though it has taken me close to a minute or more than a minute for this particular

00:08:54.260 --> 00:08:55.490
proof off work.

00:08:55.490 --> 00:08:55.940
Or rather,

00:08:55.940 --> 00:09:00.580
I would say this particular proof off work to come up with a nonce,

00:09:00.580 --> 00:09:04.660
which is this bigger number almost close to a minute.

00:09:04.660 --> 00:09:07.320
Verification off it is very,

00:09:07.320 --> 00:09:08.230
very easy.

00:09:08.230 --> 00:09:10.870
It will take me the same amount of time,

00:09:10.870 --> 00:09:14.060
even if I want to verify our hash with,

00:09:14.060 --> 00:09:14.450
let's,

00:09:14.450 --> 00:09:14.740
say,

00:09:14.740 --> 00:09:15.950
20 leading zeros,

00:09:15.950 --> 00:09:23.940
whereas to produce or come up with a nonce with 20 leading zeros on this laptop,

00:09:23.940 --> 00:09:28.610
computers would probably require these on.

00:09:28.610 --> 00:09:33.150
It's definitely not recommended to try something like that on a laptop computers.

00:09:33.150 --> 00:09:39.720
You would definitely requires specialized machines to come up with that kind of a nonce in

00:09:39.720 --> 00:09:40.850
a quick time,

00:09:40.850 --> 00:09:41.630
which,

00:09:41.630 --> 00:09:45.350
in case off Bitcoin is usually 10 minutes.

00:09:45.350 --> 00:09:46.710
All right,

00:09:46.710 --> 00:09:54.960
I hope this explains how the proof off work increases the difficulty level for the same

00:09:54.960 --> 00:10:00.150
computational power with additional leading zeros.

00:10:00.150 --> 00:10:05.750
That is precisely what the Bitcoin tries to do in case of Bitcoins.

00:10:05.750 --> 00:10:10.420
It has reached almost 35 40 leading zeros,

00:10:10.420 --> 00:10:13.580
and that's why takes close to 10 minutes,

00:10:13.580 --> 00:10:15.380
even for specialized machines.

00:10:15.380 --> 00:10:18.520
But as we add more and more computing power,

00:10:18.520 --> 00:10:21.850
this time is going to be they used.

00:10:21.850 --> 00:10:24.010
All right.

00:10:24.010 --> 00:10:29.140
I hope you have now understood how the hash are.

00:10:29.140 --> 00:10:31.130
Such a to 56 hash.

00:10:31.130 --> 00:10:36.950
Makes it difficult with every addition off leading zeros.

00:10:36.950 --> 00:10:39.660
Thank you so much for joining me in this one.

00:10:39.660 --> 00:10:41.050
Enjoy your time.

