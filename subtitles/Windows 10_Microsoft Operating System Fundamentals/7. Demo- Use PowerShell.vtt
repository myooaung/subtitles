WEBVTT
1
00:00:02.306 --> 00:00:04.040
In this final demo of this module,

2
00:00:04.040 --> 00:00:07.837
I'm going to give you a nutshell whirlwind tour super

3
00:00:07.837 --> 00:00:10.587
condensed of Windows PowerShell.

4
00:00:10.587 --> 00:00:12.647
Now PowerShell and Windows 10 ship standard,

5
00:00:12.647 --> 00:00:17.188
you get it whether you want to or not, also available in Windows Server.

6
00:00:17.188 --> 00:00:19.729
I have an icon for it here on my taskbar,

7
00:00:19.729 --> 00:00:21.254
but if you don't, of course,

8
00:00:21.254 --> 00:00:25.340
you can open your Cortana search or your Start search and type PowerShell.

9
00:00:25.340 --> 00:00:26.665
And then here's the deal.

10
00:00:26.665 --> 00:00:30.828
You want to right-click that icon and you can pin or unpin it to the taskbar,

11
00:00:30.828 --> 00:00:34.506
pin it or unpin it to your Start menu if you want it to appear there,

12
00:00:34.506 --> 00:00:37.966
but I want you to get into the habit of starting your

13
00:00:37.966 --> 00:00:41.527
PowerShell session as an administrator because there is very

14
00:00:41.527 --> 00:00:44.543
little you can do as a standard user, there really isn't.

15
00:00:44.543 --> 00:00:46.902
PowerShell is really for an administrator.

16
00:00:46.902 --> 00:00:48.281
If you're a business end user,

17
00:00:48.281 --> 00:00:51.928
maybe you don't even want to watch this demo and that's okay with me,

18
00:00:51.928 --> 00:00:53.735
but if you are an administrator,

19
00:00:53.735 --> 00:00:57.440
make sure you start as an administrator so that you have

20
00:00:57.440 --> 00:00:59.415
administrative access in that console.

21
00:00:59.415 --> 00:01:02.941
Let me double left-click and here is the console environment.

22
00:01:02.941 --> 00:01:06.433
You can open the control box up here and come down to Properties.

23
00:01:06.433 --> 00:01:10.094
One of the things you may want to do is navigate to the Font page.

24
00:01:10.094 --> 00:01:15.310
I like Consolas and you can boost the font size and you can change the colors.

25
00:01:15.310 --> 00:01:16.605
Some basic things here,

26
00:01:16.605 --> 00:01:20.995
the three main commands that you want to get are get-command,

27
00:01:20.995 --> 00:01:24.998
get-help, and get-member, but we won't deal with get-member here.

28
00:01:24.998 --> 00:01:28.517
We'll just deal with a couple of the others like get-command.

29
00:01:28.517 --> 00:01:32.208
Now you'll recall in the previous module we did some Hyper-V work, didn't we.

30
00:01:32.208 --> 00:01:33.186
Actually, for grins,

31
00:01:33.186 --> 00:01:37.551
let me come down to Cortana and type Hyper-V and start the Hyper-V

32
00:01:37.551 --> 00:01:41.263
management graphical tool if for now other reason just to remind

33
00:01:41.263 --> 00:01:43.054
myself of the ones that are there.

34
00:01:43.054 --> 00:01:45.020
Okay, so we've got a couple of them.

35
00:01:45.020 --> 00:01:47.281
If you want to figure out, for instance,

36
00:01:47.281 --> 00:01:51.647
what we can do with Hyper-V, let's do get-command against the module,

37
00:01:51.647 --> 00:01:54.962
and by the way, that's called tab complete what I just did.

38
00:01:54.962 --> 00:02:00.704
I typed -M tab, then autocomplete in many cases will guess correctly,

39
00:02:00.704 --> 00:02:01.953
Module hyper-v.

40
00:02:01.953 --> 00:02:02.578
Whoa!

41
00:02:02.578 --> 00:02:05.702
That's a lot of commands.

42
00:02:05.702 --> 00:02:08.122
Let me scroll all the way up to the top again.

43
00:02:08.122 --> 00:02:10.051
What we did is we said to PowerShell,

44
00:02:10.051 --> 00:02:13.451
give me a list of all of the commands that are in the Hyper-V module.

45
00:02:13.451 --> 00:02:16.064
How do we know that the Hyper-V module is installed?

46
00:02:16.064 --> 00:02:18.091
Well because in the previous module,

47
00:02:18.091 --> 00:02:22.188
remember we went to optional Windows features,

48
00:02:22.188 --> 00:02:25.305
windows features, turn Windows features on or off,

49
00:02:25.305 --> 00:02:26.279
and in there,

50
00:02:26.279 --> 00:02:30.511
we made sure to install Hyper-V and we also installed the

51
00:02:30.511 --> 00:02:33.331
Hyper-V module for Windows PowerShell and it looks like

52
00:02:33.331 --> 00:02:34.626
there is a lot of commands.

53
00:02:34.626 --> 00:02:39.587
They have standard verbs, add, disable, disconnect, enable, get.

54
00:02:39.587 --> 00:02:43.725
Get is a really good cmdlet because it's so universal.

55
00:02:43.725 --> 00:02:46.506
It's probably, in fact, I know for a fact,

56
00:02:46.506 --> 00:02:48.855
it's the most common verb across all PowerShell.

57
00:02:48.855 --> 00:02:52.069
Now what if we wanted to get a list of our VMs.

58
00:02:52.069 --> 00:02:53.680
Well it would be Get-VM, wouldn't it.

59
00:02:53.680 --> 00:02:56.082
Let me come back to the console, press Enter,

60
00:02:56.082 --> 00:02:59.826
do a cls to clear the screen and let's do a

61
00:02:59.826 --> 00:03:02.620
get-help on the cmdlet called get-vm.

62
00:03:02.620 --> 00:03:07.394
We get very basic help back, but we don't get examples and stuff.

63
00:03:07.394 --> 00:03:10.553
The reason for that is that we haven't updated our help.

64
00:03:10.553 --> 00:03:14.962
You want to get into the habit of updating the help files on your machine,

65
00:03:14.962 --> 00:03:15.548
in fact,

66
00:03:15.548 --> 00:03:19.084
PowerShell doesn't ship with local help by default because the

67
00:03:19.084 --> 00:03:23.044
idea is the documentation people at Microsoft are making tweaks

68
00:03:23.044 --> 00:03:25.834
to the docs online all the time.

69
00:03:25.834 --> 00:03:26.975
So by downloading help,

70
00:03:26.975 --> 00:03:31.075
it ensures that you have the latest and greatest versions of those files.

71
00:03:31.075 --> 00:03:34.735
So we'll wait for PowerShell to go through all available

72
00:03:34.735 --> 00:03:37.706
modules and download the help content for them.

73
00:03:37.706 --> 00:03:38.846
Once that process finishes,

74
00:03:38.846 --> 00:03:43.884
and boy it took a long time on my system because remember I installed the RSAT,

75
00:03:43.884 --> 00:03:46.307
the Remote Server Administration Tools so PowerShell,

76
00:03:46.307 --> 00:03:49.287
by the way, when you install the RSAT tools,

77
00:03:49.287 --> 00:03:52.237
you don't only get the graphic, all the snap-ins,

78
00:03:52.237 --> 00:03:54.337
but you also get the PowerShell module.

79
00:03:54.337 --> 00:03:57.038
So there was a lot of help to update.

80
00:03:57.038 --> 00:04:01.173
We now can do a get-help get-vm and we can look at

81
00:04:01.173 --> 00:04:02.552
specific things like examples.

82
00:04:02.552 --> 00:04:06.208
This is a nice example here that shows the power of the pipeline.

83
00:04:06.208 --> 00:04:10.373
Get-VM for a particular computer, now this could be a remote computer,

84
00:04:10.373 --> 00:04:12.114
again, the power of PowerShell,

85
00:04:12.114 --> 00:04:17.850
and then pipeline we can do where to filter on only those VMs that are running.

86
00:04:17.850 --> 00:04:19.465
So let's try that actually.

87
00:04:19.465 --> 00:04:22.497
Let's do a get-vm where the ComputerName is localhost,

88
00:04:22.497 --> 00:04:26.968
that's our local machine, and I'll do a where object,

89
00:04:26.968 --> 00:04:27.947
Where $_.

90
00:04:27.947 --> 00:04:31.865
State, and what that is, by the way,

91
00:04:31.865 --> 00:04:36.549
is $_ is what's called a sigil or a placeholder for

92
00:04:36.549 --> 00:04:38.785
the current object in the pipeline.

93
00:04:38.785 --> 00:04:40.379
So if we had 10 VMs,

94
00:04:40.379 --> 00:04:43.939
then those 10 VMs are 1 by 1 going to be passed into

95
00:04:43.939 --> 00:04:48.402
Where-Object and $_ means for each one of those look at the

96
00:04:48.402 --> 00:04:51.570
state property and I'm going to say not equal to Running because

97
00:04:51.570 --> 00:04:53.918
I know that both of mine are stopped.

98
00:04:53.918 --> 00:04:57.087
And sure enough, we see both of those machines there.

99
00:04:57.087 --> 00:04:57.313
Okay.

100
00:04:57.313 --> 00:05:00.026
Now if I want to store one as a variable, I can.

101
00:05:00.026 --> 00:05:06.322
Get, I'm going to do $vm get-vm where the name is ws2k12r2.

102
00:05:06.322 --> 00:05:08.610
I guess I can show you get-member.

103
00:05:08.610 --> 00:05:11.533
If you pipe a variable, for instance, to get-member,

104
00:05:11.533 --> 00:05:14.754
it gives you a list of all of the properties.

105
00:05:14.754 --> 00:05:19.043
Properties think of as metadata or status information and

106
00:05:19.043 --> 00:05:21.507
methods refer to actions that you can take.

107
00:05:21.507 --> 00:05:25.135
I was hoping that we would be able to start a VM here,

108
00:05:25.135 --> 00:05:28.383
but it looks like those methods aren't visible at this point.

109
00:05:28.383 --> 00:05:29.383
That's too bad.

110
00:05:29.383 --> 00:05:31.717
Now is there a command called start-vm.

111
00:05:31.717 --> 00:05:39.469
We can use get-command such that the verb is start and the noun contains vm,

112
00:05:39.469 --> 00:05:45.368
*vm* means any cmdlet that includes VM and I have some Azure

113
00:05:45.368 --> 00:05:47.505
cmdlets installed as you can see here.

114
00:05:47.505 --> 00:05:49.239
That's what the first three options are,

115
00:05:49.239 --> 00:05:54.280
and sure enough, there is a Start-VM cmdlet so it looks like we can do Start-VM.

116
00:05:54.280 --> 00:05:59.039
Let's do a get-help start-vm examples, yeah, just passing the name.

117
00:05:59.039 --> 00:06:05.245
So start-vm, the name is, uh-oh, I forgot what it's called again,

118
00:06:05.245 --> 00:06:13.040
so let's do a get-vm and now I'll do start-vm where the name is ws2k12r2.

119
00:06:13.040 --> 00:06:16.155
I don't need the quotes here because there are no spaces in the VM's name,

120
00:06:16.155 --> 00:06:18.718
but I like to do it as a general habit.

121
00:06:18.718 --> 00:06:19.715
Okay, so it's starting.

122
00:06:19.715 --> 00:06:24.131
So to test this, we should be able to come into the Hyper-V management console,

123
00:06:24.131 --> 00:06:32.073
and sure enough, we see that ws2k12r2 VM is in a starting and now running state.

124
00:06:32.073 --> 00:06:32.443
Nice.

125
00:06:32.443 --> 00:06:36.888
And as you'd expect, of course, we could use stop-vm to stop.

126
00:06:36.888 --> 00:06:40.001
You see how intuitive that is, that's why Jeffrey Snover,

127
00:06:40.001 --> 00:06:41.111
and Bruce Payette,

128
00:06:41.111 --> 00:06:52.000
and some other very smart people at Microsoft put together PowerShell to make it intuitive for non-programmers to do programmer-y things.

