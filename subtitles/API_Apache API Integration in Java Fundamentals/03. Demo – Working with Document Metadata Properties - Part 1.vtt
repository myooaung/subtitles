WEBVTT
1
00:00:01.140 --> 00:00:06.540
Now let's see how to add metadata to the Product Catalog PDF.

2
00:00:06.540 --> 00:00:13.490
You will see how to set XMPMetadata using the XMPMetadata class,

3
00:00:13.490 --> 00:00:18.660
also set metadata to product images that are in the form

4
00:00:18.660 --> 00:00:25.540
of PDImageXObjects using XML file, and finally,

5
00:00:25.540 --> 00:00:32.940
see what it takes to set metadata using the PDDocumentInformation class as well.

6
00:00:32.940 --> 00:00:33.950
First,

7
00:00:33.950 --> 00:00:40.170
you will need to open the pom.xml and add the XMPBox

8
00:00:40.170 --> 00:00:45.380
dependency as we are going to set XMPMetadata to the

9
00:00:45.380 --> 00:00:49.450
document in the first part of the demo.

10
00:00:49.450 --> 00:00:55.190
Back in the ProductCatalog class, I've added a method,

11
00:00:55.190 --> 00:01:02.030
setXMPMetadata, and loaded the ProductCatalog PDF document.

12
00:01:02.030 --> 00:01:05.240
In a PDF document,

13
00:01:05.240 --> 00:01:09.570
metadata can be associated with a few common object

14
00:01:09.570 --> 00:01:14.340
types like the PDDocumentCatalog, PDPage,

15
00:01:14.340 --> 00:01:17.740
and PDXObject.

16
00:01:17.740 --> 00:01:24.840
Let's add metadata to the PDDocumentCatalog object of the PDF document.

17
00:01:24.840 --> 00:01:29.260
They'll appear under Document Properties in the Description tab,

18
00:01:29.260 --> 00:01:36.060
like this, for example, if you open the document using Adobe Acrobat Reader.

19
00:01:36.060 --> 00:01:37.440
However,

20
00:01:37.440 --> 00:01:41.190
it should also be noted that there is no guarantee that all

21
00:01:41.190 --> 00:01:45.870
PDF documents will have all possible metadata properties as

22
00:01:45.870 --> 00:01:48.440
some of them are optional.

23
00:01:48.440 --> 00:01:51.570
So let's set some common metadata properties to the

24
00:01:51.570 --> 00:01:57.440
PDDocumentCatalog of the ProductCatalog PDF.

25
00:01:57.440 --> 00:01:59.250
To do this, first,

26
00:01:59.250 --> 00:02:04.590
you should get the document catalog object of the PDF document by calling the

27
00:02:04.590 --> 00:02:12.230
getDocumentCatalog method on the document object catalog.

28
00:02:12.230 --> 00:02:17.640
Let's assign it to a reference variable, like this.

29
00:02:17.640 --> 00:02:20.790
Next, using the XMPMetadata class,

30
00:02:20.790 --> 00:02:28.440
create a metadata object by calling the createXMPMetadata method.

31
00:02:28.440 --> 00:02:31.940
Then, using the XMPMetadata object,

32
00:02:31.940 --> 00:02:37.030
it is possible to set the properties that you saw earlier like the title,

33
00:02:37.030 --> 00:02:42.040
producer, created date, modified date, etc.

34
00:02:42.040 --> 00:02:46.140
These properties belong to different schemas.

35
00:02:46.140 --> 00:02:49.480
So in the XMPMetadata object metadata,

36
00:02:49.480 --> 00:02:55.080
you can create and add an XMPBasicSchema object where

37
00:02:55.080 --> 00:02:57.970
you can set a few of the properties.

38
00:02:57.970 --> 00:03:07.240
So call the createAndAddXMPBasicSchema method on the metadata object,

39
00:03:07.240 --> 00:03:12.840
and you will get an XMPBasicSchema object in return.

40
00:03:12.840 --> 00:03:19.300
And to this schema, you can set the create date and modify date.

41
00:03:19.300 --> 00:03:23.340
Let's create a Calendar object date,

42
00:03:23.340 --> 00:03:28.000
then call setCreateDate method on the basicSchema,

43
00:03:28.000 --> 00:03:35.140
passing in the date, call the setModifyDate method,

44
00:03:35.140 --> 00:03:39.140
passing in the date.

45
00:03:39.140 --> 00:03:42.170
Now, if you want to add some keywords,

46
00:03:42.170 --> 00:03:47.040
using which it would be possible to search for the document,

47
00:03:47.040 --> 00:03:51.480
you can do so by adding them to the AdobePDFSchema,

48
00:03:51.480 --> 00:04:01.440
so call the createAndAddAdobePDFSchema method on the metadata object,

49
00:04:01.440 --> 00:04:07.140
which will give you this AdobePDFScheme object.

50
00:04:07.140 --> 00:04:10.840
And to it, you can set the keywords, like this.

51
00:04:10.840 --> 00:04:16.640
Let's also set a few more properties like title, author, and the subject.

52
00:04:16.640 --> 00:04:22.840
These properties should be added to a schema called DublinCoreSchema.

53
00:04:22.840 --> 00:04:29.060
Call createAndAddDublinCoreSchema method on the XMPMetadata object,

54
00:04:29.060 --> 00:04:35.740
metadata, and you will get a DublinCoreSchema object in return.

55
00:04:35.740 --> 00:04:38.300
Now, to it, set the title.

56
00:04:38.300 --> 00:04:44.780
To set the author, call the addCreator method on the schema.

57
00:04:44.780 --> 00:04:52.340
And to set the subject, call the setDescription method.

58
00:04:52.340 --> 00:04:58.630
Now this example metadata that you set needs to be attached to PDMetadata

59
00:04:58.630 --> 00:05:05.540
object that represents the metadata of a PDF document in PDFBox.

60
00:05:05.540 --> 00:05:13.440
To do that, you can use the importXMPMetadata method of the PDMetadata object.

61
00:05:13.440 --> 00:05:21.640
As you can see, this method accepts the XMPMetadata in the form of a byte array.

62
00:05:21.640 --> 00:05:28.340
So to convert the XMPMetadata to a byte stream, you should serialize it.

63
00:05:28.340 --> 00:05:34.640
To do this, you can use the XMPSerializer of XMPBox,

64
00:05:34.640 --> 00:05:38.440
so create a new object of it,

65
00:05:38.440 --> 00:05:45.440
and you'll also need to define a new ByteArrayOutputStream object,

66
00:05:45.440 --> 00:05:49.390
then call the serialize method of the serializer,

67
00:05:49.390 --> 00:05:58.440
passing in the XMPMetadata, the ByteArrayOutputStream,

68
00:05:58.440 --> 00:06:04.530
and just passing false for the last parameter.

69
00:06:04.530 --> 00:06:10.560
False indicates that the XMP packet header will not be included in

70
00:06:10.560 --> 00:06:16.840
the XML document for the serialized XMPMetadata.

71
00:06:16.840 --> 00:06:17.180
Now,

72
00:06:17.180 --> 00:06:23.210
get the PDMetadata of the ProductCatalog document and import the

73
00:06:23.210 --> 00:06:30.580
XMPMetadata to it by calling the importXMPMetadata method on it,

74
00:06:30.580 --> 00:06:38.880
passing in the serialized XMPMetadata in the form of a byte array.

75
00:06:38.880 --> 00:06:46.040
Finally, set the metadata to the PDDocumentCatalog object that you got earlier,

76
00:06:46.040 --> 00:06:51.840
docCat, by calling its setMetadata method,

77
00:06:51.840 --> 00:07:01.400
passing in the pdMetadata object. Now, remember to save the document, call

78
00:07:01.400 --> 00:07:10.440
the method in the main class, and run the application.

79
00:07:10.440 --> 00:07:23.000
Then if you go to Properties of the PDF document in Adobe Acrobat Reader, you should see the metadata that you set, like this.

