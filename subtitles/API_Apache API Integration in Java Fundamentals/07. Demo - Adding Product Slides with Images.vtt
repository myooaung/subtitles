WEBVTT
1
00:00:01.240 --> 00:00:06.020
In this demo, you're going to add product slides to the presentation,

2
00:00:06.020 --> 00:00:08.640
and add images on there.

3
00:00:08.640 --> 00:00:12.120
You will be dynamically generating product slides for

4
00:00:12.120 --> 00:00:14.540
each product in the product list,

5
00:00:14.540 --> 00:00:18.310
and add the relevant product image on the slide,

6
00:00:18.310 --> 00:00:25.940
and draw an outline around the image on the slide to make it stand out.

7
00:00:25.940 --> 00:00:32.340
In the product presentation class, go to the method, addProductSlide.

8
00:00:32.340 --> 00:00:35.040
Let's first create a blank slide.

9
00:00:35.040 --> 00:00:41.140
For that, retrieve the default slide master as before,

10
00:00:41.140 --> 00:00:46.940
and get the layout, BLANK.

11
00:00:46.940 --> 00:00:49.350
Then using the blank slide layout,

12
00:00:49.350 --> 00:00:54.440
create a new slide on the PowerPoint presentation.

13
00:00:54.440 --> 00:00:58.640
Now to this slide, you are going to add the product image.

14
00:00:58.640 --> 00:01:03.340
For that, follow the steps that you saw in the previous clip.

15
00:01:03.340 --> 00:01:08.320
First, open up a FileInputStream, to it,

16
00:01:08.320 --> 00:01:11.240
pass in the image file path,

17
00:01:11.240 --> 00:01:16.440
which you can get from the product object passed in here,

18
00:01:16.440 --> 00:01:20.940
by calling getImageFile method,

19
00:01:20.940 --> 00:01:26.540
which will return the product image file path as a string.

20
00:01:26.540 --> 00:01:34.440
Wrap it around try with resources, handle the exceptions.

21
00:01:34.440 --> 00:01:43.720
Now read the image file data by calling IOUtils.toByteArray method into

22
00:01:43.720 --> 00:01:51.250
a byte array. And the next step is to add the picture to the PowerPoint,

23
00:01:51.250 --> 00:01:57.900
passing in the pictureData byte array, and specifying the type of

24
00:01:57.900 --> 00:02:06.250
picture by passing in PictureType enum constant as JPEG, as our product

25
00:02:06.250 --> 00:02:12.040
images are of that type.

26
00:02:12.040 --> 00:02:18.540
This will give a XSLFPictureData object in return.

27
00:02:18.540 --> 00:02:24.850
Now, create the picture on the slide, passing in the

28
00:02:24.850 --> 00:02:30.730
PictureData to draw the actual shape inside which the

29
00:02:30.730 --> 00:02:34.140
picture will be placed on the slide.

30
00:02:34.140 --> 00:02:40.540
It will result in a XSLFPictureShape object.

31
00:02:40.540 --> 00:02:46.130
Now this shape can be positioned in a desired location on the slide by

32
00:02:46.130 --> 00:02:52.830
calling setAnchor method on it. You will need to specify the X position,

33
00:02:52.830 --> 00:03:02.520
let's give 100. The Y position, let's give 100. The width of the image,

34
00:03:02.520 --> 00:03:10.500
let's give 225, and the height also as 225.

35
00:03:10.500 --> 00:03:17.240
As you can see, it specified using the java.awt.Rectangle class.

36
00:03:17.240 --> 00:03:24.520
Finally, call the setLineColor method of the PictureShape, and set

37
00:03:24.520 --> 00:03:33.040
the outline color to gray, for example; and a setLineWidth method,

38
00:03:33.040 --> 00:03:35.010
passing in a value of five,

39
00:03:35.010 --> 00:03:41.570
for example, to draw a thin outline around the image. As you

40
00:03:41.570 --> 00:03:45.580
can see, there are more methods using, which you can format

41
00:03:45.580 --> 00:03:49.910
and style the picture, as required.

42
00:03:49.910 --> 00:03:56.240
Now, you need to call this method inside the addContentSlides method.

43
00:03:56.240 --> 00:04:01.440
This method gets the passed in list of productData.

44
00:04:01.440 --> 00:04:05.450
This list needs to be looped through to generate product

45
00:04:05.450 --> 00:04:08.640
slides dynamically for each product.

46
00:04:08.640 --> 00:04:15.640
So add this for loop, and inside, call the addProductSlide

47
00:04:15.640 --> 00:04:24.140
method, passing in the ppt and a product object.

48
00:04:24.140 --> 00:04:25.240
Now,

49
00:04:25.240 --> 00:04:32.640
call the addContentSlides method inside the generateProductPresentation method.

50
00:04:32.640 --> 00:04:37.740
Save and run the application.

51
00:04:37.740 --> 00:04:42.010
You can see now that the product presentation has a bunch of product

52
00:04:42.010 --> 00:04:47.740
slides added to it, with a product image on them.

53
00:04:47.740 --> 00:04:57.000
Now we should fill them with the rest of the content. You will see how to do that in the next clip.

