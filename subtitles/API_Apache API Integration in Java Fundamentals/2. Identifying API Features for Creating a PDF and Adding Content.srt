1
00:00:01,340 --> 00:00:04,240
Before all that excitement starts,

2
00:00:04,240 --> 00:00:07,060
we need to look at the basic API features for

3
00:00:07,060 --> 00:00:11,840
creating a PDF and adding content to it.

4
00:00:11,840 --> 00:00:17,740
A PDF document is made of a stream of different object types

5
00:00:17,740 --> 00:00:22,810
This object system is known as the COS model.

6
00:00:22,810 --> 00:00:29,070
In other words, COS model is the low level object structure of a PDF

7
00:00:29,070 --> 00:00:36,460
document. In the Apache PDFBox API, these objects are represented by

8
00:00:36,460 --> 00:00:42,440
the org.apache.pdfbox.cos package.

9
00:00:42,440 --> 00:00:48,040
It contains these low level objects, and it's called the COS model.

10
00:00:48,040 --> 00:00:52,480
The COS model is helpful for developers who want to work

11
00:00:52,480 --> 00:00:57,740
directly with low level PDF objects. Using the COS model, all

12
00:00:57,740 --> 00:01:01,740
aspects of a PDF document can be accessed.

13
00:01:01,740 --> 00:01:05,940
However, since this is a low level object model,

14
00:01:05,940 --> 00:01:12,440
programming with it is quite tedious, and it's not very developer‑friendly.

15
00:01:12,440 --> 00:01:17,840
Therefore, another API was introduced called PD model,

16
00:01:17,840 --> 00:01:24,540
which is a developer‑friendly, high level API built on top of the COS model.

17
00:01:24,540 --> 00:01:28,140
The PD model API is available in the

18
00:01:28,140 --> 00:01:35,640
org.apache.pdfbox.pdmodel package in the PDFBox API.

19
00:01:35,640 --> 00:01:40,380
The PD model is built on top of the COS model as another

20
00:01:40,380 --> 00:01:43,270
layer and another level of abstraction,

21
00:01:43,270 --> 00:01:47,600
which is high level. So you need not worry about dealing with

22
00:01:47,600 --> 00:01:51,440
any of the complexities of the COS model.

23
00:01:51,440 --> 00:01:56,380
The API feature is required to create a new PDF document to add a

24
00:01:56,380 --> 00:02:02,420
page and add lines of text and other basic content to it, all located

25
00:02:02,420 --> 00:02:09,140
in the org.apache.pdfbox.pdmodel package.

26
00:02:09,140 --> 00:02:19,000
It has PDDocument, PDPage, and PDPageContentStream classes to handle all of this.

