1
00:00:01,940 --> 00:00:10,440
Metadata can also be set to other objects like PDImageXObject.

2
00:00:10,440 --> 00:00:16,540
Let's say you want to set some metadata to your product images.

3
00:00:16,540 --> 00:00:19,140
How can you do that?

4
00:00:19,140 --> 00:00:23,790
I've added this method setImageMetaData, and in it

5
00:00:23,790 --> 00:00:27,640
written basic code to load the document.

6
00:00:27,640 --> 00:00:31,660
You can simply copy this document loading logic from one

7
00:00:31,660 --> 00:00:35,140
of the methods that you wrote earlier.

8
00:00:35,140 --> 00:00:39,640
Now, we are going to read metadata from an XML File

9
00:00:39,640 --> 00:00:44,140
and set them to the image objects.

10
00:00:44,140 --> 00:00:48,340
This is the XML file that we are going to use.

11
00:00:48,340 --> 00:00:53,300
You can find this in the exercise file of this module.

12
00:00:53,300 --> 00:00:57,940
Simply place it under the resources folder.

13
00:00:57,940 --> 00:01:05,440
As you'll see, we set the title and all the metadata using the creator tag.

14
00:01:05,440 --> 00:01:06,770
So, first of all,

15
00:01:06,770 --> 00:01:14,470
create a File object to represent this XML file, and then open

16
00:01:14,470 --> 00:01:20,440
up an InputStream on it to read its content.

17
00:01:20,440 --> 00:01:28,440
We need to create a PDMetadata object that represents PDF document metadata.

18
00:01:28,440 --> 00:01:30,140
This time,

19
00:01:30,140 --> 00:01:33,750
let's use the constructor, passing in the product

20
00:01:33,750 --> 00:01:37,840
catalog document and the InputStream.

21
00:01:37,840 --> 00:01:42,190
This will read everything in the InputStream and

22
00:01:42,190 --> 00:01:46,040
embed them into the PDF document.

23
00:01:46,040 --> 00:01:50,680
Then the PDMetadata object that we create will consist of

24
00:01:50,680 --> 00:01:54,840
the metadata saved in the XML file.

25
00:01:54,840 --> 00:01:59,370
Now, say you want to save this metadata to the product images in

26
00:01:59,370 --> 00:02:02,940
the first page of the product catalog PDF.

27
00:02:02,940 --> 00:02:06,400
So get the first page.

28
00:02:06,400 --> 00:02:11,360
Now, you saw in the Modify the Already Created PDF Document

29
00:02:11,360 --> 00:02:16,690
module that the way to access resources like images in a PDF

30
00:02:16,690 --> 00:02:20,940
document is to use the PDResources.

31
00:02:20,940 --> 00:02:27,530
So get the resources of the first page. Then looping through the

32
00:02:27,530 --> 00:02:32,640
resources, you can access the images in the first page.

33
00:02:32,640 --> 00:02:35,710
This code is straight from the earlier module,

34
00:02:35,710 --> 00:02:39,940
Modifying the Already Created PDF Document.

35
00:02:39,940 --> 00:02:43,170
Once you get a PDImageXObject,

36
00:02:43,170 --> 00:02:49,590
you can simply set the PDMetadata to it by calling the setMetadata method,

37
00:02:49,590 --> 00:02:58,310
passing in the PDMetadata object, meta, to it. Once again, remember to save

38
00:02:58,310 --> 00:03:02,440
the document after doing these changes to it.

39
00:03:02,440 --> 00:03:04,730
Now when this method is called,

40
00:03:04,730 --> 00:03:08,650
the metadata title and author should get attached to

41
00:03:08,650 --> 00:03:12,350
the product image. There is, in fact,

42
00:03:12,350 --> 00:03:16,840
no way to see this unless you write code to read them.

43
00:03:16,840 --> 00:03:23,140
Let's quickly add this code to read the image metadata that you just set.

44
00:03:23,140 --> 00:03:28,540
You can find the code for this method on the exercise files.

45
00:03:28,540 --> 00:03:35,640
Simply copy and paste it to your ProductCatalog class like this.

46
00:03:35,640 --> 00:03:41,640
Now, add this line to read the metadata of the image.

47
00:03:41,640 --> 00:03:46,030
To read the image metadata, let's create an InputStream on the

48
00:03:46,030 --> 00:03:53,720
metadata object. Then create a new InputStreamReader object for

49
00:03:53,720 --> 00:04:01,590
it, and a BufferedReader so that you can read lines from the

50
00:04:01,590 --> 00:04:06,940
buffer and print them out like this.

51
00:04:06,940 --> 00:04:14,540
Now if you call both these methods in the main class, and run,

52
00:04:14,540 --> 00:04:21,540
you should see the metadata extracted from the three images like this.

53
00:04:21,540 --> 00:04:30,000
This is the title and author metadata that we added to the images using the XML file.

