WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.380 --> 00:00:02.850
Welcome back. In the last video,

00:00:02.850 --> 00:00:05.970
we created the HTML for the header section.

00:00:05.970 --> 00:00:10.275
We included the top navigation bar with the menu links,

00:00:10.275 --> 00:00:12.855
the main background image,

00:00:12.855 --> 00:00:15.495
and also the feature text.

00:00:15.495 --> 00:00:18.780
In this video, we're going to make our website

00:00:18.780 --> 00:00:22.740
look more like the finished project by adding the CSS.

00:00:22.740 --> 00:00:27.120
We're going to change the link color and background for the navigation.

00:00:27.120 --> 00:00:30.930
We're also going to style the text and make sure

00:00:30.930 --> 00:00:35.625
that it's horizontally and vertically aligned to the background image.

00:00:35.625 --> 00:00:39.035
We'll also take a look at the Bootstrap grid system,

00:00:39.035 --> 00:00:43.640
and I'll show you how to add a column to our website to make it responsive.

00:00:43.640 --> 00:00:47.310
Let's get started in our Text Editor.

00:00:47.870 --> 00:00:53.410
We need to pull up the sidebar and go into our custom CSS.

00:00:53.410 --> 00:00:55.320
Just blow the body,

00:00:55.320 --> 00:00:57.075
still within the global section,

00:00:57.075 --> 00:01:02.450
the first thing I need to add is a max width for the images.

00:01:02.450 --> 00:01:05.620
We're going to set them to 100 percent,

00:01:05.620 --> 00:01:09.105
which stops images stretching too big.

00:01:09.105 --> 00:01:14.310
Let's create a comment for the navbar section.

00:01:18.080 --> 00:01:21.615
We're going to get started with the navbar section.

00:01:21.615 --> 00:01:25.440
The main navigation has the class of navbar.

00:01:25.440 --> 00:01:28.110
This is the part we'll be styling first,

00:01:28.110 --> 00:01:31.360
so dot and then navbar.

00:01:32.150 --> 00:01:35.940
We need to up the purple background color.

00:01:35.940 --> 00:01:41.490
The background is going to have a number of 97689c.

00:01:43.240 --> 00:01:46.300
Let's check if that's working okay.

00:01:46.300 --> 00:01:48.740
The background color has changed,

00:01:48.740 --> 00:01:50.930
but we need to get rid of the margin,

00:01:50.930 --> 00:01:52.490
which is at the very bottom,

00:01:52.490 --> 00:01:55.520
pushing the background image down.

00:01:55.520 --> 00:02:02.080
We simply do that by changing the margin bottom to be zero.

00:02:05.600 --> 00:02:09.680
The next thing we want to do is remove the default border.

00:02:09.680 --> 00:02:13.730
It's pretty hard to see the default border around the navigation bar.

00:02:13.730 --> 00:02:19.890
But we can remove that by just setting the border to be zero.

00:02:21.440 --> 00:02:26.775
Then now we need to change the text for the logo on the navigation.

00:02:26.775 --> 00:02:30.090
Bootstrap has a lot of classes and a lot of CSS,

00:02:30.090 --> 00:02:31.725
which is included as standard.

00:02:31.725 --> 00:02:36.725
It can be sometimes difficult to find exactly which class we need to amend.

00:02:36.725 --> 00:02:42.200
One of the easiest ways to do that is to go into the browser developer tools.

00:02:42.200 --> 00:02:47.100
In Chrome, you need to right-click and select Inspect Element.

00:02:50.090 --> 00:02:54.240
Then if you select the magnifying glass,

00:02:54.460 --> 00:03:00.360
and then just hover over the element we need to change, and click.

00:03:00.360 --> 00:03:06.055
Then we should get a list of the classes which is affecting this particular element.

00:03:06.055 --> 00:03:12.155
We can see the first element is the color for the navbar default navbar brand,

00:03:12.155 --> 00:03:15.320
and that's in the Bootstrap minified version.

00:03:15.320 --> 00:03:17.465
We can change that color.

00:03:17.465 --> 00:03:23.790
I'm just going to copy the class which affects that color.

00:03:23.790 --> 00:03:28.455
Then back into our custom CSS,

00:03:28.455 --> 00:03:37.540
let's paste this in, and change the color to be white.

00:03:39.950 --> 00:03:43.025
That changes the color of the logo.

00:03:43.025 --> 00:03:47.270
We need to also do the same for the navigation links,

00:03:47.270 --> 00:03:50.525
which is a home blog on latest news.

00:03:50.525 --> 00:03:54.035
Again do the same, select the magnifying glass,

00:03:54.035 --> 00:03:56.580
and choose one of the links.

00:03:58.760 --> 00:04:06.680
Again, we can override the standard default gray color by copying the Bootstrap class.

00:04:06.680 --> 00:04:09.140
Because we also want this to be white,

00:04:09.140 --> 00:04:12.960
we can add this in the same section.

00:04:17.240 --> 00:04:20.115
That changes those to white.

00:04:20.115 --> 00:04:22.475
Then on the smaller mobile view,

00:04:22.475 --> 00:04:26.405
we also want the free icon bars to be white too.

00:04:26.405 --> 00:04:28.865
Again, select the magnifying glass.

00:04:28.865 --> 00:04:32.210
If you can just select one of the icon bars,

00:04:32.210 --> 00:04:36.810
and make sure we can find the one which controls the background color.

00:04:37.820 --> 00:04:40.545
Copy the classes.

00:04:40.545 --> 00:04:44.440
Then let's put those into our CSS.

00:04:46.160 --> 00:04:50.430
Let's change the default background color,

00:04:52.790 --> 00:04:55.810
we change it to white.

00:04:57.080 --> 00:05:04.740
Refresh. Great. There we go.

00:05:04.740 --> 00:05:06.650
The icon bars are all white now.

00:05:06.650 --> 00:05:10.295
That's all the styling we need to add to the top navigation bar.

00:05:10.295 --> 00:05:13.520
Now we can move down to the featured area,

00:05:13.520 --> 00:05:18.745
and we can start working on position in the image on the text.

00:05:18.745 --> 00:05:22.680
Let's create a new comment for the feature section.

00:05:30.490 --> 00:05:33.890
We can add the text over the image.

00:05:33.890 --> 00:05:37.180
We need to use some relative and absolute positioning.

00:05:37.180 --> 00:05:40.110
We need to make the container relative.

00:05:40.110 --> 00:05:42.750
Completion the text within it.

00:05:42.750 --> 00:05:51.050
The container for the feature section had a class of feature,

00:05:51.050 --> 00:05:54.140
which is a custom class we added ourselves.

00:05:54.140 --> 00:05:56.600
Let's start by adding that,

00:05:56.600 --> 00:06:00.660
and setting the position to be relative.

00:06:00.770 --> 00:06:04.250
Because we want the background image to stretch,

00:06:04.250 --> 00:06:06.560
to be the same width as the browser,

00:06:06.560 --> 00:06:16.730
we need to override the maximum width of 100 percent by adding the feature image class.

00:06:16.730 --> 00:06:18.380
Instead of max width,

00:06:18.380 --> 00:06:20.485
we're just going to set the width,

00:06:20.485 --> 00:06:23.205
this time of 100 percent.

00:06:23.205 --> 00:06:26.809
This means that the image can stretch slightly larger,

00:06:26.809 --> 00:06:30.550
or slightly smaller than the original size of the image.

00:06:30.550 --> 00:06:34.235
Now we've got the container position relative.

00:06:34.235 --> 00:06:37.730
We now need to change the text to be absolute.

00:06:37.730 --> 00:06:40.625
We added another custom class,

00:06:40.625 --> 00:06:45.990
surrounded the text, which was a class of feature text.

00:06:46.640 --> 00:06:50.110
Next, let's start with that.

00:06:52.400 --> 00:06:57.075
First position is going to be set to absolute,

00:06:57.075 --> 00:07:00.195
because we're using absolute positioning.

00:07:00.195 --> 00:07:08.235
We're going to set both the top and the bottom position to be equal.

00:07:08.235 --> 00:07:10.470
They're both going to be zero.

00:07:10.470 --> 00:07:13.220
Now because that's positioned absolute,

00:07:13.220 --> 00:07:15.935
the text now appears over the image.

00:07:15.935 --> 00:07:20.850
We can start working with getting it horizontally and vertically aligned.

00:07:22.520 --> 00:07:26.535
We're going to start by vertically aligning the text now.

00:07:26.535 --> 00:07:29.560
First of all, I'm going to just type this out,

00:07:29.560 --> 00:07:32.735
and then I'll explain what this is doing afterwards.

00:07:32.735 --> 00:07:38.250
The feature text class, and then before.

00:07:39.650 --> 00:07:44.050
Set the content to be empty.

00:07:44.720 --> 00:07:49.270
The display type to be inline-block.

00:07:50.120 --> 00:07:56.560
The height to take up 100 percent of the container.

00:07:56.810 --> 00:08:01.210
Lastly, vertical-align to be middle.

00:08:01.640 --> 00:08:04.605
We'll come back to that just in a moment.

00:08:04.605 --> 00:08:05.790
We'll just, first of all,

00:08:05.790 --> 00:08:07.710
add the styles for the text.

00:08:07.710 --> 00:08:14.760
The feature class, and then the p,

00:08:14.760 --> 00:08:17.920
which surrounds the text.

00:08:19.540 --> 00:08:25.200
This is going to also have the display type of inline-block,

00:08:25.340 --> 00:08:28.170
and will all come clear soon.

00:08:28.170 --> 00:08:32.415
Also vertical aligned to be middle.

00:08:32.415 --> 00:08:37.255
The text align will be centralized in the div.

00:08:37.255 --> 00:08:41.895
The width to be 100 percent of the container.

00:08:41.895 --> 00:08:44.745
If we go back into the browser,

00:08:44.745 --> 00:08:47.435
and if we take a look at the finished project,

00:08:47.435 --> 00:08:49.905
there's a background color.

00:08:49.905 --> 00:08:52.650
It's quite faint, but it surrounds the text,

00:08:52.650 --> 00:08:54.345
which has rounded edges,

00:08:54.345 --> 00:08:58.870
and it's also semi-transparent. Let's add that now.

00:08:58.870 --> 00:09:02.425
To start, we can add the background color,

00:09:02.425 --> 00:09:06.730
which has a RGBA value.

00:09:07.180 --> 00:09:10.100
First of all, we need to add the red,

00:09:10.100 --> 00:09:12.220
green, and blue values.

00:09:12.220 --> 00:09:14.835
To create the gray color,

00:09:14.835 --> 00:09:18.390
the first value is 74,

00:09:19.820 --> 00:09:27.420
82, 95, and then the last value is the Alpha or the opacity.

00:09:27.420 --> 00:09:30.040
I I want that to be 0.2,

00:09:30.040 --> 00:09:33.765
which is the same as 20 percent opacity.

00:09:33.765 --> 00:09:37.520
The background has got rounded corners,

00:09:37.520 --> 00:09:44.385
which you get by adding a border-radius of 10 pixels.

00:09:44.385 --> 00:09:47.710
The text color is white.

00:09:50.790 --> 00:09:54.610
So there's the background for the text in place.

00:09:54.610 --> 00:09:57.280
So basically what we're doing here is we're creating

00:09:57.280 --> 00:10:00.745
some text and we're adding some styles to it,

00:10:00.745 --> 00:10:04.570
and then we're adding a fake element just before

00:10:04.570 --> 00:10:10.420
the text so we can use it as a full height reference to align the text in the div.

00:10:10.420 --> 00:10:14.800
Before the text, we're creating an empty div,

00:10:14.800 --> 00:10:16.570
which has no content,

00:10:16.570 --> 00:10:21.730
which are both the fake div and the text to be in-line block.

00:10:21.730 --> 00:10:24.055
So they'll be side-by-side.

00:10:24.055 --> 00:10:29.605
Because the fake elements has a height of 100 percent,

00:10:29.605 --> 00:10:33.655
this will take up the full height of the div,

00:10:33.655 --> 00:10:36.940
and then because this is the full height of the div,

00:10:36.940 --> 00:10:40.390
we can then set the vertical align to be middle and this

00:10:40.390 --> 00:10:44.215
will cause the text to be aligned in the middle of the div.

00:10:44.215 --> 00:10:45.745
To get this trick to work,

00:10:45.745 --> 00:10:49.164
we just need to do one more thing because by default,

00:10:49.164 --> 00:10:52.870
in-line block has a gap between elements.

00:10:52.870 --> 00:10:54.695
We need to remove this.

00:10:54.695 --> 00:10:59.235
So we need to add a property which is zero width.

00:10:59.235 --> 00:11:03.360
If we change the font size to be zero,

00:11:03.360 --> 00:11:08.060
that will remove the gap between the fake elements and the text.

00:11:08.060 --> 00:11:10.765
Because we've set the font size to be zero,

00:11:10.765 --> 00:11:15.745
we then need to add the font size in the p tags.

00:11:15.745 --> 00:11:19.435
So one has to be 48 pixels.

00:11:19.435 --> 00:11:24.925
So it saved that and check that on the browser. That's looking good.

00:11:24.925 --> 00:11:29.065
That's now vertically aligned to the background image,

00:11:29.065 --> 00:11:33.220
and we can also see the semitransparent background color.

00:11:33.220 --> 00:11:36.070
So let's just add a little bit upon it,

00:11:36.070 --> 00:11:45.650
just three percent, and space out the line height to be 80 pixels.

00:11:45.720 --> 00:11:48.820
Let's save and take a look at that.

00:11:48.820 --> 00:11:51.295
Great. That's looking a lot better now.

00:11:51.295 --> 00:11:55.705
The next thing we need to do is align it horizontally in the div.

00:11:55.705 --> 00:11:59.305
We're going to do that by adding some Bootstrap columns.

00:11:59.305 --> 00:12:07.600
If we head back to get bootstrap.com and then if we go in the CSS section,

00:12:08.840 --> 00:12:13.025
and then select the grid system on the right,

00:12:13.025 --> 00:12:17.035
and then scroll down to the grid options.

00:12:17.035 --> 00:12:23.545
Bootstrap has a 12-column grid system and to access that we use the class prefix of

00:12:23.545 --> 00:12:26.710
col and then dash and then we can use

00:12:26.710 --> 00:12:32.079
the xs for the number of columns why we want in extra small devices,

00:12:32.079 --> 00:12:35.515
sm for small devices or tablets,

00:12:35.515 --> 00:12:39.115
md for medium devices or desktops,

00:12:39.115 --> 00:12:41.740
or lg for the large desktops.

00:12:41.740 --> 00:12:43.495
So we can create divs,

00:12:43.495 --> 00:12:47.140
which is displayed differently on smaller or larger devices.

00:12:47.140 --> 00:12:49.090
There's an example below.

00:12:49.090 --> 00:12:54.865
If we want to create a div which has two parts and spans the full width of the page,

00:12:54.865 --> 00:12:59.350
each div needs take up six columns each, and the same,

00:12:59.350 --> 00:13:01.765
if we want to create three column side-by-side,

00:13:01.765 --> 00:13:05.725
we'll give each div a class of four columns.

00:13:05.725 --> 00:13:09.145
Let's put this into practice in our project.

00:13:09.145 --> 00:13:11.425
Back into the index page.

00:13:11.425 --> 00:13:18.925
If we look for the div which surrounds the text just after the feature text class,

00:13:18.925 --> 00:13:22.075
we're going to add the Bootstrap columns.

00:13:22.075 --> 00:13:26.470
So we want the text to take up all the available space on a mobile view,

00:13:26.470 --> 00:13:28.735
so we can add col-xs,

00:13:28.735 --> 00:13:32.455
for extra small devices, 12,

00:13:32.455 --> 00:13:36.955
so we'll take up the full 12 columns on a small device.

00:13:36.955 --> 00:13:42.160
If we don't want it to be full width on larger devices,

00:13:42.160 --> 00:13:43.870
we can add col-md-8,

00:13:43.870 --> 00:13:52.870
because that will take up eight parts of 12 or two-thirds and then larger still,

00:13:52.870 --> 00:13:56.245
on large desktops, col-lg-6,

00:13:56.245 --> 00:14:00.295
because that will take up half the width of the web page.

00:14:00.295 --> 00:14:03.410
Let's save that and take a look.

00:14:03.840 --> 00:14:07.135
If we scroll down to the small size,

00:14:07.135 --> 00:14:10.690
you can see the text takes up the full width.

00:14:10.690 --> 00:14:14.350
But once we hit the medium devices,

00:14:14.350 --> 00:14:17.950
this div is only taken up eight parts.

00:14:17.950 --> 00:14:19.990
Because it's only taken up eight parts,

00:14:19.990 --> 00:14:22.645
it's leaving four columns on the right side.

00:14:22.645 --> 00:14:26.020
So to make sure that this div stays in the middle of the page,

00:14:26.020 --> 00:14:29.065
we can add an offset on the left-hand side.

00:14:29.065 --> 00:14:30.670
So to centralize this div,

00:14:30.670 --> 00:14:33.280
we need to add an offset of two,

00:14:33.280 --> 00:14:35.950
and the way we do that is col,

00:14:35.950 --> 00:14:40.790
so the first one is md then dash offset,

00:14:41.460 --> 00:14:44.409
and then to offset it to two columns,

00:14:44.409 --> 00:14:46.920
we set that to two.

00:14:46.920 --> 00:14:49.020
Let's save that and see if that's working okay.

00:14:49.020 --> 00:14:51.270
Great. So the eight column div is in the middle of

00:14:51.270 --> 00:14:54.270
the page with two columns in the side now.

00:14:54.270 --> 00:15:00.405
We'll do the same for the large devices because the large devices is taken up six parts.

00:15:00.405 --> 00:15:02.640
We need to add an offset of three.

00:15:02.640 --> 00:15:11.730
So col-lg-offset three. There we go.

00:15:11.730 --> 00:15:17.595
Bootstrap documentations got some more information about the grid system and offsetting.

00:15:17.595 --> 00:15:22.630
There's also some examples you can take a look at in the offsetting section.

00:15:22.830 --> 00:15:25.630
So that's this video nearly finished.

00:15:25.630 --> 00:15:28.165
Just one more thing we need to add before we go,

00:15:28.165 --> 00:15:30.640
is if we shrink the browser down,

00:15:30.640 --> 00:15:33.085
the text is pretty large.

00:15:33.085 --> 00:15:37.525
So we'll get down to the small tablet or mobile sizes.

00:15:37.525 --> 00:15:40.900
We need to make sure that the text is smaller.

00:15:40.900 --> 00:15:45.325
So we can do that in our CSS by adding a media query.

00:15:45.325 --> 00:15:54.350
Let's add a mobile styling comment just at the very bottom of the page.

00:16:02.340 --> 00:16:11.350
So let's add a media query, so @media screen,

00:16:11.350 --> 00:16:20.590
and we'll target the devices with a max width of 768 pixels.

00:16:20.590 --> 00:16:23.935
By using 768 pixels,

00:16:23.935 --> 00:16:27.370
this keeps in-line with Bootstrap's media queries.

00:16:27.370 --> 00:16:30.985
If we go back up to the top of the grid system,

00:16:30.985 --> 00:16:35.050
you can see the media query sizes the Bootstrap uses.

00:16:35.050 --> 00:16:43.070
So we're going to set in our media query for extra small devices less than 768 pixels.

00:16:45.390 --> 00:16:48.265
To reduce the font size,

00:16:48.265 --> 00:16:52.280
we need to add the class of feature text,

00:16:53.340 --> 00:17:00.085
and then p, and we need to show the space after and, there we go.

00:17:00.085 --> 00:17:03.880
So we need to reduce the font size.

00:17:03.880 --> 00:17:09.520
Let's set this to 28 pixels and also the line height,

00:17:09.520 --> 00:17:13.720
that can be the same, that can also be 28 pixels.

00:17:13.720 --> 00:17:17.605
Let's save that and head back into the browser.

00:17:17.605 --> 00:17:23.620
If we go back into the project and then shrink the browser down.

00:17:23.620 --> 00:17:26.830
You can see that the text now scales down on

00:17:26.830 --> 00:17:30.385
the smaller devices and fitted in the container.

00:17:30.385 --> 00:17:34.195
As we get larger and hit the Media query,

00:17:34.195 --> 00:17:38.485
we'll get the larger text, so that's looking a lot better.

00:17:38.485 --> 00:17:40.660
While we're in the media query,

00:17:40.660 --> 00:17:44.965
we can also just make the free links in the mobile view,

00:17:44.965 --> 00:17:47.050
up here in the center of the page,

00:17:47.050 --> 00:17:51.230
we can add that in the lia section,

00:17:51.900 --> 00:17:59.030
because it's our list item hyperlinks, so text-align center.

00:18:00.120 --> 00:18:05.905
There we go. Great. So that's it for this section.

00:18:05.905 --> 00:18:09.325
That's all the CSS completed for the header.

00:18:09.325 --> 00:18:11.320
If you join me in the next video,

00:18:11.320 --> 00:18:15.620
we'll continue with the website and move down to the welcome section.
