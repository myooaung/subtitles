1
00:00:00,000 --> 00:00:05,220
In this lesson, we're going to refactor the product page here to use Vue.js.

2
00:00:05,220 --> 00:00:06,945
If we look at the code now,

3
00:00:06,945 --> 00:00:11,790
the content and all the dynamic values are coming from Shopify liquid.

4
00:00:11,790 --> 00:00:13,380
What that means is,

5
00:00:13,380 --> 00:00:19,035
that it's rendered on the server side once when the page loads.

6
00:00:19,035 --> 00:00:21,485
No matter what we do,

7
00:00:21,485 --> 00:00:24,440
the current variant is going to be small white

8
00:00:24,440 --> 00:00:27,920
because that's the variant that's selected on page load,

9
00:00:27,920 --> 00:00:33,440
and no matter what we do here to update our color,

10
00:00:33,440 --> 00:00:37,190
the color in the product image is not going to change,

11
00:00:37,190 --> 00:00:39,910
and that is a bad user experience, of course.

12
00:00:39,910 --> 00:00:44,255
Currently, we don't even have this setup to change the variant id.

13
00:00:44,255 --> 00:00:48,995
When we click "Add to cart" it's going to add the small white

14
00:00:48,995 --> 00:00:54,020
T. I'm going to clear my cart quickly by running fetch.

15
00:00:54,020 --> 00:00:55,565
You can do this as well.

16
00:00:55,565 --> 00:01:00,320
This is just the end point of the cart Ajax API to clear the cart.

17
00:01:00,320 --> 00:01:04,740
Just fetch cart clear.js,

18
00:01:05,060 --> 00:01:09,045
and that refresh the page that'll clear the cart.

19
00:01:09,045 --> 00:01:11,940
Back to this page right here.

20
00:01:11,940 --> 00:01:13,395
If we go into the code,

21
00:01:13,395 --> 00:01:16,460
we're rendering all of this Shopify liquid on the page,

22
00:01:16,460 --> 00:01:19,295
but of course we want to update certain things

23
00:01:19,295 --> 00:01:23,455
depending on the selection here in the variance selection.

24
00:01:23,455 --> 00:01:26,270
This is why we want to use Vue.

25
00:01:26,270 --> 00:01:30,380
The first thing I'm going to do is set up the data. We saw that before.

26
00:01:30,380 --> 00:01:34,580
We're going to have to create a data function within this object,

27
00:01:34,580 --> 00:01:36,965
and then inside this function,

28
00:01:36,965 --> 00:01:40,855
we return an object which holds our data.

29
00:01:40,855 --> 00:01:46,065
Let's think about some of the things we want to track in this app.

30
00:01:46,065 --> 00:01:49,520
Of course, we want to track the current variant id because that's

31
00:01:49,520 --> 00:01:53,585
what's going to get added to the cart when we click "Add to cart".

32
00:01:53,585 --> 00:01:57,069
I'm going to start with that current variant id,

33
00:01:57,069 --> 00:02:00,680
and the starting value of our current variant id is going to be

34
00:02:00,680 --> 00:02:04,605
equal to what we currently have here in our value.

35
00:02:04,605 --> 00:02:07,100
As I mentioned before, the value that's been inserted

36
00:02:07,100 --> 00:02:09,725
into this hidden field, and therefore,

37
00:02:09,725 --> 00:02:12,950
what gets added to the cart when you click "Add to cart"

38
00:02:12,950 --> 00:02:16,745
is the selected or first available variant.

39
00:02:16,745 --> 00:02:21,990
Let's move this value into here, our Vue instance,

40
00:02:21,990 --> 00:02:24,650
and that's going to ensure that the current variant

41
00:02:24,650 --> 00:02:27,920
id on page load will get set with that value.

42
00:02:27,920 --> 00:02:31,880
But then we can update it as we interact with our Vue app.

43
00:02:31,880 --> 00:02:36,500
Now what I'm going to do here is something very subtle but very important.

44
00:02:36,500 --> 00:02:40,084
I'm going to put a colon in front of value,

45
00:02:40,084 --> 00:02:45,725
and that's going to transform that field into a dynamic Vue field.

46
00:02:45,725 --> 00:02:49,130
Instead of putting an explicit value in there like here,

47
00:02:49,130 --> 00:02:50,540
the value is going to be one,

48
00:02:50,540 --> 00:02:54,615
we can put a variable name in there from our data object

49
00:02:54,615 --> 00:03:00,105
and it will update depending on what happens to this data.

50
00:03:00,105 --> 00:03:02,825
This is where the reactivity comes in.

51
00:03:02,825 --> 00:03:08,710
Here, we're going to put the variable name in here.

52
00:03:08,710 --> 00:03:12,770
The idea is that if this changes over time,

53
00:03:12,770 --> 00:03:15,230
this will also change automatically.

54
00:03:15,230 --> 00:03:17,600
But for now we should see the exact same results.

55
00:03:17,600 --> 00:03:19,165
I'll refresh the page.

56
00:03:19,165 --> 00:03:21,180
Let's go over to our Vue tab,

57
00:03:21,180 --> 00:03:27,170
and you can see here we get to inspect the data and we can see our current variant id.

58
00:03:27,170 --> 00:03:31,610
If we inspect the form and look for that hidden field,

59
00:03:31,610 --> 00:03:34,110
you can see that's the value.

60
00:03:34,110 --> 00:03:38,820
Actually what we can do is go in here and edit this on the fly.

61
00:03:38,820 --> 00:03:40,370
If I put this as 1,

62
00:03:40,370 --> 00:03:42,290
2, 3, 4, 5, for instance,

63
00:03:42,290 --> 00:03:43,930
I've changed the value,

64
00:03:43,930 --> 00:03:47,000
and then you can see here it's changed in the DOM as well.

65
00:03:47,000 --> 00:03:49,925
You've got this data binding happening here. It's pretty cool.

66
00:03:49,925 --> 00:03:51,695
If I refresh the page,

67
00:03:51,695 --> 00:03:57,085
that value will get loaded in again. That's pretty cool.

68
00:03:57,085 --> 00:03:59,530
The next thing I want to capture,

69
00:03:59,530 --> 00:04:03,365
the different variants available for this particular product.

70
00:04:03,365 --> 00:04:06,755
The way I'm going to do that is by doing a liquid loop.

71
00:04:06,755 --> 00:04:08,840
This is not the cleanest code,

72
00:04:08,840 --> 00:04:12,155
but it's just the way we have to do it in Shopify liquid.

73
00:04:12,155 --> 00:04:16,445
I'm going to create a variants array here,

74
00:04:16,445 --> 00:04:17,930
and inside this array,

75
00:04:17,930 --> 00:04:22,440
I'm going to use Shopify liquid to give us our variants.

76
00:04:22,440 --> 00:04:25,620
We're going to put in a for loop here,

77
00:04:25,620 --> 00:04:29,010
variant in product variants.

78
00:04:29,010 --> 00:04:33,425
Basically what I'm doing here is transferring the data from

79
00:04:33,425 --> 00:04:38,900
Shopify liquid into our Vue instance so that we can interact with it inside of Vue,

80
00:04:38,900 --> 00:04:44,005
all on the front end without having to rely on Shopify liquid.

81
00:04:44,005 --> 00:04:47,095
For each variant in product variants,

82
00:04:47,095 --> 00:04:49,895
I'm going to have an object with a comma.

83
00:04:49,895 --> 00:04:50,960
Don't forget the comma,

84
00:04:50,960 --> 00:04:54,380
otherwise there won't be any separation between variants,

85
00:04:54,380 --> 00:04:58,945
and I'm going to copy across some of the data from Shopify liquid.

86
00:04:58,945 --> 00:05:01,740
First one, variant id,

87
00:05:01,740 --> 00:05:06,820
we're going to need to know if the variant is available.

88
00:05:06,820 --> 00:05:13,500
We can set that without quotations so that it can just insert as a Boolean value there,

89
00:05:13,500 --> 00:05:16,705
and then we're going to grab its option values.

90
00:05:16,705 --> 00:05:20,795
Within the three options that we have available to us in Shopify,

91
00:05:20,795 --> 00:05:22,790
what is the selection?

92
00:05:22,790 --> 00:05:25,849
If you're unfamiliar with any of these objects,

93
00:05:25,849 --> 00:05:29,540
you can always look them up on the Shopify liquid documentation.

94
00:05:29,540 --> 00:05:32,330
I might show you that right now just as

95
00:05:32,330 --> 00:05:37,175
a quick point of reference, Shopify liquid reference.

96
00:05:37,175 --> 00:05:44,810
If you're ever confused about what attributes you have on a particular object,

97
00:05:44,810 --> 00:05:49,080
you can just go into the reference, go down.

98
00:05:49,160 --> 00:05:53,220
Look at variant is the one we're looking for,

99
00:05:53,220 --> 00:05:56,465
and then you can see explanations of all these attributes

100
00:05:56,465 --> 00:06:00,955
that I'm putting in to our Vue data.

101
00:06:00,955 --> 00:06:04,310
I might just keep that one open just in case,

102
00:06:04,310 --> 00:06:09,590
and let's go back and build in the rest option 2 and option 3.

103
00:06:09,590 --> 00:06:12,290
Then I'm going to put in the variant price,

104
00:06:12,290 --> 00:06:16,490
making sure to filter that through the money filter in Shopify liquid,

105
00:06:16,490 --> 00:06:21,205
otherwise it's going to come out as sense with no formatting.

106
00:06:21,205 --> 00:06:24,575
Next I'm going to grab the image for that variant,

107
00:06:24,575 --> 00:06:30,455
and I'm going to add in an extra step here to check if the variant image is blank.

108
00:06:30,455 --> 00:06:34,790
Because in Shopify, if the variant image is blank,

109
00:06:34,790 --> 00:06:36,215
it still loads an image,

110
00:06:36,215 --> 00:06:38,015
it's just the wrong image.

111
00:06:38,015 --> 00:06:41,494
I'm going to create a variable here first,

112
00:06:41,494 --> 00:06:43,999
and you'll see what I'm doing in just a second,

113
00:06:43,999 --> 00:06:51,840
grab that image URL using all the filters available in Shopify liquid.

114
00:06:51,840 --> 00:06:56,135
Again, check the reference if there's anything here that's confusing to you.

115
00:06:56,135 --> 00:07:02,295
Then in here what I'm going to do for image is put in unless statement.

116
00:07:02,295 --> 00:07:08,090
Unless image URL contains no image,

117
00:07:08,090 --> 00:07:14,285
which is the image that comes up when there is no image set on that particular variant.

118
00:07:14,285 --> 00:07:20,525
I'm going to output this image URL that I've set in this variable just above,

119
00:07:20,525 --> 00:07:22,985
and there's no else statement there.

120
00:07:22,985 --> 00:07:24,980
If it is, a no image,

121
00:07:24,980 --> 00:07:27,025
is just going to show up as blank.

122
00:07:27,025 --> 00:07:31,309
Sweep. Now, just on the issue of images,

123
00:07:31,309 --> 00:07:35,635
what I'm also going to do is create a fallback image.

124
00:07:35,635 --> 00:07:39,605
In case the variant doesn't have an image,

125
00:07:39,605 --> 00:07:42,170
which is going to be a lot of instances,

126
00:07:42,170 --> 00:07:45,415
I'm going to just use the featured image of the product.

127
00:07:45,415 --> 00:07:51,785
I'm going to do fallback product image is going to be featured image,

128
00:07:51,785 --> 00:07:54,940
which is a variable we've set up here.

129
00:07:54,940 --> 00:08:01,775
I can take that featured image and then grab the URL of that featured image,

130
00:08:01,775 --> 00:08:05,545
making sure we put that in quotations.

131
00:08:05,545 --> 00:08:08,500
Now let's have a look inside our Vue DevTools,

132
00:08:08,500 --> 00:08:11,290
make sure we haven't made any syntax errors.

133
00:08:11,290 --> 00:08:13,570
Refresh over here.

134
00:08:13,570 --> 00:08:17,244
Looks like we might have unexpected token.

135
00:08:17,244 --> 00:08:19,780
Here we go, available.

136
00:08:19,780 --> 00:08:24,415
I've typed in varian rather than variant.

137
00:08:24,415 --> 00:08:26,395
Let's refresh the page.

138
00:08:26,395 --> 00:08:29,620
No JavaScript errors, head over to Vue.

139
00:08:29,620 --> 00:08:35,890
Here you can see we've got an array with all the variants and that data that was set up.

140
00:08:35,890 --> 00:08:38,800
We've got our fallback product image.

141
00:08:38,800 --> 00:08:42,035
We've got our current variant id.

142
00:08:42,035 --> 00:08:45,915
We can use all of this information now within our Vue app.

143
00:08:45,915 --> 00:08:51,800
We can bind it to elements on the page or we can use it in calculations.

144
00:08:51,800 --> 00:08:54,580
Now there's actually just a little bit more data that I want to add here,

145
00:08:54,580 --> 00:08:57,745
and that's to capture our selection here.

146
00:08:57,745 --> 00:09:00,925
We're going to just above variants,

147
00:09:00,925 --> 00:09:04,240
put in our variant selection,

148
00:09:04,240 --> 00:09:07,105
and we're going to bind this to our form.

149
00:09:07,105 --> 00:09:10,540
Make sure that the comma is in there.

150
00:09:10,540 --> 00:09:14,545
This is just option 1 is going to equal

151
00:09:14,545 --> 00:09:20,935
the selected value of our options with values, selected value.

152
00:09:20,935 --> 00:09:26,245
Here what we're doing, if we go into the documentation,

153
00:09:26,245 --> 00:09:28,435
we look at product.

154
00:09:28,435 --> 00:09:32,395
There is an attribute here called options with values,

155
00:09:32,395 --> 00:09:35,230
and it will return an array.

156
00:09:35,230 --> 00:09:42,070
Inside the array will give you the values and the option name of all the options.

157
00:09:42,070 --> 00:09:45,370
You have name and value here.

158
00:09:45,370 --> 00:09:48,910
You can have a look at that particular object here.

159
00:09:48,910 --> 00:09:52,420
Name, position, selected value, values.

160
00:09:52,420 --> 00:09:59,770
We're using the selected value of the first product option in our products.

161
00:09:59,770 --> 00:10:02,095
That's going to be option 1.

162
00:10:02,095 --> 00:10:05,080
Make sure to put that in quotation marks there.

163
00:10:05,080 --> 00:10:10,225
I'm just going to copy for the next two.

164
00:10:10,225 --> 00:10:12,760
For this 1, 2, and 3,

165
00:10:12,760 --> 00:10:19,460
we just need to update the position in the array and that should be all good.

166
00:10:20,010 --> 00:10:24,415
Now let's go back over to our page here.

167
00:10:24,415 --> 00:10:27,430
You can see we've now got our variant selection,

168
00:10:27,430 --> 00:10:30,055
which is small and white.

169
00:10:30,055 --> 00:10:34,335
We've got this variant selection here loaded into Vue on page load.

170
00:10:34,335 --> 00:10:40,050
But what we don't have currently is data binding so that when this updates,

171
00:10:40,050 --> 00:10:43,260
our data in the Vue instance updates as well.

172
00:10:43,260 --> 00:10:44,960
Let's do that right now.

173
00:10:44,960 --> 00:10:47,785
Let's go over to our code.

174
00:10:47,785 --> 00:10:51,460
I'm going to drag this down because we don't need that so big.

175
00:10:51,460 --> 00:10:58,990
What I'm going to do is bind these values to these selects right here.

176
00:10:58,990 --> 00:11:00,880
As we can see here, we're looping through

177
00:11:00,880 --> 00:11:04,345
the options with values attribute on the product,

178
00:11:04,345 --> 00:11:09,070
which for each item in the array gives us the name of the product option,

179
00:11:09,070 --> 00:11:10,975
the values that are available,

180
00:11:10,975 --> 00:11:12,670
and the selected value.

181
00:11:12,670 --> 00:11:16,270
We can use this logic to figure out what the current selection

182
00:11:16,270 --> 00:11:21,130
is and create a select in order for the user to change that.

183
00:11:21,130 --> 00:11:28,675
What we need to do is bind this value of the select to our data model here.

184
00:11:28,675 --> 00:11:34,480
The way we can do that is by adding an attribute here of v-model.

185
00:11:34,480 --> 00:11:39,580
We add this to the select because that's the one that's carrying the value.

186
00:11:39,580 --> 00:11:44,035
Within here we can start at the root of the data object.

187
00:11:44,035 --> 00:11:46,255
We're going to do variant.

188
00:11:46,255 --> 00:11:50,620
Actually, it might be worthwhile to have this side by side.

189
00:11:50,620 --> 00:11:52,990
You can see both sides.

190
00:11:52,990 --> 00:11:55,195
Here's our data object right here.

191
00:11:55,195 --> 00:11:58,735
Here is the HTML code.

192
00:11:58,735 --> 00:12:04,450
We want to go into variant selection and pull off the relevant option.

193
00:12:04,450 --> 00:12:09,250
I'm going to go variant underscore selection option.

194
00:12:09,250 --> 00:12:14,110
Then what I'm going to do to select the particular number that I want is use

195
00:12:14,110 --> 00:12:20,540
the attribute within this loop on the product option objects of position.

196
00:12:21,510 --> 00:12:23,990
Product_option.position.

197
00:12:23,990 --> 00:12:28,155
That's going to insert a number from one in here,

198
00:12:28,155 --> 00:12:31,545
and that's going to link it up with this.

199
00:12:31,545 --> 00:12:34,395
Now we've Vue model on our element.

200
00:12:34,395 --> 00:12:38,155
We can go back to the page over here, refresh.

201
00:12:38,155 --> 00:12:40,735
If I change one of these options,

202
00:12:40,735 --> 00:12:43,750
you can see it updates in the data.

203
00:12:43,750 --> 00:12:45,490
That's all well and good.

204
00:12:45,490 --> 00:12:48,265
We are updating our variant selection.

205
00:12:48,265 --> 00:12:52,900
But what we need to do is convert that variant selection into an actual variant.

206
00:12:52,900 --> 00:12:54,730
We've got our list of variants here.

207
00:12:54,730 --> 00:12:58,240
What we need to do is calculate what variant is

208
00:12:58,240 --> 00:13:02,140
currently selected by the selection that we have stored here.

209
00:13:02,140 --> 00:13:05,200
This is something we would need to do inside any Shopify store,

210
00:13:05,200 --> 00:13:06,895
whether we're using Vue or not.

211
00:13:06,895 --> 00:13:09,265
I won't spend too long going through it.

212
00:13:09,265 --> 00:13:13,045
What we're going to do is create our first method though.

213
00:13:13,045 --> 00:13:15,595
This is something new that we haven't covered yet,

214
00:13:15,595 --> 00:13:17,425
is to add a method.

215
00:13:17,425 --> 00:13:19,780
On our instance, we've got our data object here.

216
00:13:19,780 --> 00:13:25,990
But let's create a method which is basically a function on our Vue instance.

217
00:13:25,990 --> 00:13:33,025
How we do that is make sure we put a comma there and we define a methods object.

218
00:13:33,025 --> 00:13:34,720
Inside the methods object,

219
00:13:34,720 --> 00:13:36,820
we create our first method.

220
00:13:36,820 --> 00:13:40,030
I'm going to call it variant from options.

221
00:13:40,030 --> 00:13:46,345
Inside I'm going to look up the variant based on the variant options.

222
00:13:46,345 --> 00:13:48,880
Where I'm going do this is I'm going to copy and paste some code,

223
00:13:48,880 --> 00:13:50,305
and then I'm just going to explain them.

224
00:13:50,305 --> 00:13:57,580
What I'm doing here is using the find method on this variants array to find a match.

225
00:13:57,580 --> 00:14:03,370
When the variant option 1 equals the variant selection option 1,

226
00:14:03,370 --> 00:14:06,385
then that's a match on that particular one.

227
00:14:06,385 --> 00:14:10,000
We'll start checking to see if it's blank.

228
00:14:10,000 --> 00:14:13,030
Because if it's blank, then we shouldn't even look for a match by

229
00:14:13,030 --> 00:14:16,615
default is going to be true unless we come up against a false.

230
00:14:16,615 --> 00:14:18,205
Then at the very end,

231
00:14:18,205 --> 00:14:20,725
we're going to be returned with a match.

232
00:14:20,725 --> 00:14:24,700
That's going to return the find method here.

233
00:14:24,700 --> 00:14:26,800
What we're going to do with that value,

234
00:14:26,800 --> 00:14:28,465
if I create a new line,

235
00:14:28,465 --> 00:14:34,330
is update the current variant id to be equal to

236
00:14:34,330 --> 00:14:41,080
the variant that's selected in this find statement and take the ID of that.

237
00:14:41,080 --> 00:14:42,625
Now that we've created this method,

238
00:14:42,625 --> 00:14:46,915
we still need to hook it up to our element on the page.

239
00:14:46,915 --> 00:14:52,450
We're going to use a another attribute here in Vue.js,

240
00:14:52,450 --> 00:14:57,130
starting with the @ symbol and then writing the event that we're looking for.

241
00:14:57,130 --> 00:14:59,890
This is basically saying onchange.

242
00:14:59,890 --> 00:15:05,575
Then onchange, we're going to run variant from options.

243
00:15:05,575 --> 00:15:07,675
We've got the binding,

244
00:15:07,675 --> 00:15:09,295
and then when we change it,

245
00:15:09,295 --> 00:15:13,225
not only are we changing it here in our variant selection,

246
00:15:13,225 --> 00:15:16,840
we're going to recalculate the current variant id from

247
00:15:16,840 --> 00:15:20,935
our variant selection here, or here rather.

248
00:15:20,935 --> 00:15:22,735
Refreshing the page.

249
00:15:22,735 --> 00:15:25,075
I want you to notice over here.

250
00:15:25,075 --> 00:15:26,740
In our Vue instance,

251
00:15:26,740 --> 00:15:28,600
if I change the selection,

252
00:15:28,600 --> 00:15:33,100
you'll see that our current variant gets recalculated.

253
00:15:33,100 --> 00:15:37,870
If I select Medium black and I click "Add to Cart."

254
00:15:37,870 --> 00:15:42,820
We should now see a medium black t-shirt being added to the cart.

255
00:15:42,820 --> 00:15:47,635
Just going to run that Fetch command again to get rid of the cart.

256
00:15:47,635 --> 00:15:50,980
Let's go back to the shop Tee product page.

257
00:15:50,980 --> 00:15:54,040
That's all well and good now we've got our variant selection working.

258
00:15:54,040 --> 00:15:58,419
But what happens if each of our variants has a different price,

259
00:15:58,419 --> 00:16:00,415
a different sold out status,

260
00:16:00,415 --> 00:16:02,245
a different variant image.

261
00:16:02,245 --> 00:16:04,915
We want that to update on the page.

262
00:16:04,915 --> 00:16:10,600
Also, there's a thing in Shopify where the variant id gets stored in the URL.

263
00:16:10,600 --> 00:16:13,625
If you share that URL or refresh the page,

264
00:16:13,625 --> 00:16:16,105
the same variant is selected,

265
00:16:16,105 --> 00:16:18,850
so we need to add that as well.

266
00:16:18,850 --> 00:16:23,030
The three areas that we're going to do is the variant image,

267
00:16:23,030 --> 00:16:28,400
the variant price, and the history state in our URL.

268
00:16:28,400 --> 00:16:30,825
Let's head back to our Vue app.

269
00:16:30,825 --> 00:16:36,860
If we're going to actually find what the current variant image is,

270
00:16:36,860 --> 00:16:40,415
the current variant price and the current variant ID is,

271
00:16:40,415 --> 00:16:43,320
well, we already have the ID updating here.

272
00:16:43,320 --> 00:16:47,330
We're going to need to understand which variant is currently

273
00:16:47,330 --> 00:16:52,005
selected and grab that as an object from this variants array.

274
00:16:52,005 --> 00:16:54,950
If I go back to the data inside Vue,

275
00:16:54,950 --> 00:16:58,910
the only thing we have on the current variant is its ID.

276
00:16:58,910 --> 00:17:01,625
That allows us to look up the variant,

277
00:17:01,625 --> 00:17:08,050
but it doesn't actually allow us to access data attributes on the variant.

278
00:17:08,050 --> 00:17:10,925
What we're going to do is use this to look up

279
00:17:10,925 --> 00:17:14,730
the relevant variant object inside this array.

280
00:17:14,730 --> 00:17:19,745
The way we're going to do that is via something called a computed property.

281
00:17:19,745 --> 00:17:23,060
Computed properties exist in Vue.js because we don't want to

282
00:17:23,060 --> 00:17:27,440
put functions and logic inside our HTML structure.

283
00:17:27,440 --> 00:17:33,095
We just add an extra object here with our computed properties.

284
00:17:33,095 --> 00:17:36,965
Then we can treat the computed property as if it

285
00:17:36,965 --> 00:17:41,390
is a data attribute here and place it in our HTML.

286
00:17:41,390 --> 00:17:44,915
What we're going to do inside our computed property,

287
00:17:44,915 --> 00:17:49,130
we're going to create our own property called current variant.

288
00:17:49,130 --> 00:17:53,610
You'll see this reflected in our Vue DevTools in just a moment.

289
00:17:53,610 --> 00:17:58,550
Computed properties are basically just functions that return a value.

290
00:17:58,550 --> 00:18:02,015
We're going to do return and then we're going to look

291
00:18:02,015 --> 00:18:06,270
up the variant using the find method.

292
00:18:06,270 --> 00:18:15,860
Variant, and all we need to look for is the variant id equal to this current variant id.

293
00:18:15,860 --> 00:18:21,085
That should give us the relevant variant object from this array.

294
00:18:21,085 --> 00:18:23,695
Let's go back here, refresh the page.

295
00:18:23,695 --> 00:18:26,380
You'll see under data we've got computed now.

296
00:18:26,380 --> 00:18:28,415
If we look in current variant,

297
00:18:28,415 --> 00:18:33,425
you can see that we've got an object with the variant id,

298
00:18:33,425 --> 00:18:36,635
the options, the image, the price.

299
00:18:36,635 --> 00:18:39,020
If I go in here and change this,

300
00:18:39,020 --> 00:18:40,525
then this will update.

301
00:18:40,525 --> 00:18:43,005
If the price is different, that will update.

302
00:18:43,005 --> 00:18:47,270
See here, the image will update if it is supposed to be updated.

303
00:18:47,270 --> 00:18:50,000
This is all happening without us having to trigger

304
00:18:50,000 --> 00:18:53,650
a method because a computed property is reactive.

305
00:18:53,650 --> 00:18:55,730
If any of this changes,

306
00:18:55,730 --> 00:18:59,505
then all the computed properties will be recomputed.

307
00:18:59,505 --> 00:19:02,060
If we put it into a method,

308
00:19:02,060 --> 00:19:05,690
then we would have to recompute explicitly.

309
00:19:05,690 --> 00:19:07,760
That's the beauty of computed methods.

310
00:19:07,760 --> 00:19:12,905
We can tie together data and have that be reactive as well.

311
00:19:12,905 --> 00:19:16,145
Now that we have our current variant computed property,

312
00:19:16,145 --> 00:19:20,525
we now have access to our current variants image and price.

313
00:19:20,525 --> 00:19:24,240
Let's make sure our UI updates in response to that.

314
00:19:24,240 --> 00:19:26,060
I'm going to go back here,

315
00:19:26,060 --> 00:19:28,895
and I'm going to go up to,

316
00:19:28,895 --> 00:19:31,610
let's do the price first.

317
00:19:31,610 --> 00:19:33,585
I'm going to get rid of this,

318
00:19:33,585 --> 00:19:39,405
and I'm going to add an attribute on the element itself, code V-HTML.

319
00:19:39,405 --> 00:19:41,420
Anytime you see v dash,

320
00:19:41,420 --> 00:19:44,420
that is most likely a Vue attribute.

321
00:19:44,420 --> 00:19:47,255
I'm going to add V-HTML.

322
00:19:47,255 --> 00:19:53,525
Inside V-HTML, I can put in the attribute that we're looking for.

323
00:19:53,525 --> 00:19:57,060
It's going to be current_variants.price.

324
00:19:57,610 --> 00:20:00,545
Then up here for the image,

325
00:20:00,545 --> 00:20:03,095
I'm going to replace this.

326
00:20:03,095 --> 00:20:07,850
I'm going to make this dynamic by putting the colon in front and then I'm

327
00:20:07,850 --> 00:20:12,725
going to put in the current variant image.

328
00:20:12,725 --> 00:20:15,830
Now, if the current variant doesn't have an image,

329
00:20:15,830 --> 00:20:17,750
we're going to need to use the fallback.

330
00:20:17,750 --> 00:20:20,960
I'm going to use the double pipe syntax here.

331
00:20:20,960 --> 00:20:23,060
If this comes as false,

332
00:20:23,060 --> 00:20:25,655
null, or undefined, I believe the list is,

333
00:20:25,655 --> 00:20:30,320
then we're going to default to the value that comes next,

334
00:20:30,320 --> 00:20:34,920
which is going to be fallback product image.

335
00:20:35,110 --> 00:20:41,225
That's going to be very important on products that don't have any variant images set.

336
00:20:41,225 --> 00:20:44,450
Let's go back to our front end here,

337
00:20:44,450 --> 00:20:47,675
and let's change this to black.

338
00:20:47,675 --> 00:20:52,400
As you can see, the variant image updates it's not particularly

339
00:20:52,400 --> 00:20:57,050
smooth right now we're going to add a bit of a transition on that but as you can see,

340
00:20:57,050 --> 00:20:59,135
when we update the color,

341
00:20:59,135 --> 00:21:03,365
the variant image changes as well, changing that color.

342
00:21:03,365 --> 00:21:05,600
If we update the size,

343
00:21:05,600 --> 00:21:09,230
you can see that the price is changing.

344
00:21:09,230 --> 00:21:11,720
As always, you can use the Vue-devtools tools to

345
00:21:11,720 --> 00:21:14,255
check whether this lines up with the data,

346
00:21:14,255 --> 00:21:16,370
which of course it does.

347
00:21:16,370 --> 00:21:20,135
The third thing I wanted to bind is the history state,

348
00:21:20,135 --> 00:21:22,010
which we're not updating currently.

349
00:21:22,010 --> 00:21:25,265
That's important if you share this link with somebody,

350
00:21:25,265 --> 00:21:26,540
or you refresh the page.

351
00:21:26,540 --> 00:21:28,025
If I refresh now,

352
00:21:28,025 --> 00:21:31,250
you'll see it just defaults to the first selection.

353
00:21:31,250 --> 00:21:35,135
Let's create a method for updating history state as well.

354
00:21:35,135 --> 00:21:41,689
Inside methods object after this variant from options method,

355
00:21:41,689 --> 00:21:46,685
I'm going to create an update history state method.

356
00:21:46,685 --> 00:21:50,090
I'm going to put in the argument of a variant,

357
00:21:50,090 --> 00:21:52,460
and then here some code,

358
00:21:52,460 --> 00:21:55,325
"If history replace state".

359
00:21:55,325 --> 00:21:57,605
This is code I copied from

360
00:21:57,605 --> 00:21:59,690
a previous theme because it's going to be the same

361
00:21:59,690 --> 00:22:02,150
regardless of whether you're using view or not.

362
00:22:02,150 --> 00:22:06,500
I'm just loading it into a view instance on this occasion.

363
00:22:06,500 --> 00:22:08,270
I'll just type out the rest of the code and we can

364
00:22:08,270 --> 00:22:11,220
talk about what it's doing in just a sec.

365
00:22:16,480 --> 00:22:21,725
It's not essential that you 100 percent understand exactly what's going on here,

366
00:22:21,725 --> 00:22:23,645
obviously it helps if you do,

367
00:22:23,645 --> 00:22:25,445
but basically what we're doing here,

368
00:22:25,445 --> 00:22:28,085
if there is no "history replace state",

369
00:22:28,085 --> 00:22:30,290
and there is no "variant",

370
00:22:30,290 --> 00:22:32,420
then we're just going to return.

371
00:22:32,420 --> 00:22:35,780
But if there is, we're going to create a new URL.

372
00:22:35,780 --> 00:22:37,520
We're going to take the protocol,

373
00:22:37,520 --> 00:22:39,620
which will probably be HTTPS,

374
00:22:39,620 --> 00:22:43,490
then add these two slashes, then the host,

375
00:22:43,490 --> 00:22:47,030
then the pathname, then we're going to add in

376
00:22:47,030 --> 00:22:51,890
this query parameter of variant equals and then pass in the variant ID.

377
00:22:51,890 --> 00:22:57,560
Then we're going to update our Window history to the new URL.

378
00:22:57,560 --> 00:22:59,990
Feel free to copy and paste this code.

379
00:22:59,990 --> 00:23:05,450
All it's doing is updating the URL in a browser using JavaScript.

380
00:23:05,450 --> 00:23:07,415
Now of course, it's not going to trigger without

381
00:23:07,415 --> 00:23:09,530
us cooling it somewhere so what I want to

382
00:23:09,530 --> 00:23:14,360
do after the variant has been calculated from these options,

383
00:23:14,360 --> 00:23:17,210
I want to update the history state.

384
00:23:17,210 --> 00:23:21,230
In order to trigger a method from the same instance,

385
00:23:21,230 --> 00:23:24,830
we just do this.updatehistorystate,

386
00:23:24,830 --> 00:23:29,330
and then we've got that variant object so we can just place that in there.

387
00:23:29,330 --> 00:23:32,435
That'll find the variant ID from this object

388
00:23:32,435 --> 00:23:36,725
and place it after this query parameter in our browser.

389
00:23:36,725 --> 00:23:39,230
if I refresh the page over here,

390
00:23:39,230 --> 00:23:42,425
let's select a different variant and see what happens.

391
00:23:42,425 --> 00:23:48,500
Here you can see that our variant ID gets added or updated in our browser.

392
00:23:48,500 --> 00:23:50,870
If I refresh the page,

393
00:23:50,870 --> 00:23:54,360
I'll get the same selection.

394
00:23:54,670 --> 00:23:59,060
Those are the three areas that we want to be reactive.

395
00:23:59,060 --> 00:24:01,535
We want the price to react,

396
00:24:01,535 --> 00:24:03,815
we want the product image to react,

397
00:24:03,815 --> 00:24:06,695
and we want the history state to react.

398
00:24:06,695 --> 00:24:09,080
That's basically it for our Vue instance.

399
00:24:09,080 --> 00:24:11,720
The one thing I'm going to do before we move on is,

400
00:24:11,720 --> 00:24:14,330
this does look a little bit glitchy.

401
00:24:14,330 --> 00:24:17,840
I mean, it could be a better user experience so I'm going to use something that

402
00:24:17,840 --> 00:24:21,980
comes standard in Vue, which is transitions.

403
00:24:21,980 --> 00:24:25,840
If I go back to where that image is,

404
00:24:25,840 --> 00:24:31,650
and then I'm going to wrap the image in a Vue element called transition,

405
00:24:31,650 --> 00:24:33,230
I'm going to call it fade,

406
00:24:33,230 --> 00:24:35,990
which will give it the fade transition,

407
00:24:35,990 --> 00:24:39,365
and then copy that back in there.

408
00:24:39,365 --> 00:24:42,760
There are two things we need in order to make this work.

409
00:24:42,760 --> 00:24:44,920
One is we need the CSS.

410
00:24:44,920 --> 00:24:49,645
What this is going to do is add some classes to this element while it's changing.

411
00:24:49,645 --> 00:24:56,615
We need to actually put into our CSS what we want it to do when those classes are added.

412
00:24:56,615 --> 00:25:00,380
I'll just show you where that is in our theme.

413
00:25:00,380 --> 00:25:02,510
CSS, right here.

414
00:25:02,510 --> 00:25:04,910
It's going to add and remove these classes.

415
00:25:04,910 --> 00:25:07,670
We just need to define them in our CSS.

416
00:25:07,670 --> 00:25:13,145
You can find it on the examples of what to do though on the Vue documentation.

417
00:25:13,145 --> 00:25:17,225
If we go into "Transitions" "Enter & Leave",

418
00:25:17,225 --> 00:25:20,975
you can see this is basically the exact same code

419
00:25:20,975 --> 00:25:26,280
from the documentation so here is the reference.

420
00:25:26,410 --> 00:25:29,420
The other thing we're going to need is,

421
00:25:29,420 --> 00:25:32,705
we need to add a key to this element,

422
00:25:32,705 --> 00:25:39,050
because Vue is not going to know that it's changed even though this SRC has changed.

423
00:25:39,050 --> 00:25:41,960
It needs to know that the element has changed.

424
00:25:41,960 --> 00:25:47,855
One way we can force it to understand that is by giving the element a key.

425
00:25:47,855 --> 00:25:51,035
We're going to do :key,

426
00:25:51,035 --> 00:26:00,720
and then we're going to make the key equal to the exact same as here in the SRC.

427
00:26:00,730 --> 00:26:04,685
Now if I refresh the page,

428
00:26:04,685 --> 00:26:07,490
and let's change this attribute,

429
00:26:07,490 --> 00:26:12,485
you can see we've got this nice little fade between the different colors.

430
00:26:12,485 --> 00:26:14,645
How good is that?

431
00:26:14,645 --> 00:26:19,205
There you have it. We've got our products page here.

432
00:26:19,205 --> 00:26:22,130
If I select any variant,

433
00:26:22,130 --> 00:26:24,500
the price, the variant image,

434
00:26:24,500 --> 00:26:29,420
and the variant ID in the URL is going to update alongside it,

435
00:26:29,420 --> 00:26:32,390
or within a few milliseconds,

436
00:26:32,390 --> 00:26:36,995
and it's going to save the current variant ID based on the selection.

437
00:26:36,995 --> 00:26:38,630
When I click add to cart,

438
00:26:38,630 --> 00:26:41,960
if I have selected a large red t-shirt,

439
00:26:41,960 --> 00:26:46,355
it's going to add a large red t-shirt to my cart.

440
00:26:46,355 --> 00:26:49,565
As you can see here though, this has no interactivity,

441
00:26:49,565 --> 00:26:51,410
if I up the quantity,

442
00:26:51,410 --> 00:26:54,395
it's not going to work, if I click the trash, it's not going to work.

443
00:26:54,395 --> 00:26:57,785
These upsells down here aren't linked up.

444
00:26:57,785 --> 00:27:00,620
If you're ready to jump into the next lesson,

445
00:27:00,620 --> 00:27:04,580
we're actually going to connect this page up to Vue,

446
00:27:04,580 --> 00:27:09,650
and Vue is going to handle all of these interactions and sync all of that data.

447
00:27:09,650 --> 00:27:10,985
The cart page, of course,

448
00:27:10,985 --> 00:27:14,000
is a great candidate for Vue.js.

449
00:27:14,000 --> 00:27:18,510
In the next lesson, let's actually hook up this cart page.

