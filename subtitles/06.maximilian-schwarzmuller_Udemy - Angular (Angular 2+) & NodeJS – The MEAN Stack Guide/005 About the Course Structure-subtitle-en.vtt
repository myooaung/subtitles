WEBVTT
1

00:00:01.967 --> 00:00:04.370

<v ->Now that we had a look about the core topics</v>



2

00:00:04.370 --> 00:00:06.607

of this course, Angular 2 and NodeJS,



3

00:00:06.607 --> 00:00:09.186

and how to connect both, I wanna show you how



4

00:00:09.186 --> 00:00:11.531

we will walk through this course,



5

00:00:11.531 --> 00:00:14.270

and how you may take this course.



6

00:00:14.270 --> 00:00:15.885

Right now, we're getting started here



7

00:00:15.885 --> 00:00:19.262

and we will in the next video set up the basic project



8

00:00:19.262 --> 00:00:21.959

with which we're going to work throughout the course.



9

00:00:21.959 --> 00:00:26.396

In the next course module, I'll have a refresher on NodeJS.



10

00:00:26.396 --> 00:00:28.788

If you feel confident in NodeJS



11

00:00:28.788 --> 00:00:30.167

and you're not interested in that,



12

00:00:30.167 --> 00:00:34.017

feel free to skip because I do attach the latest version



13

00:00:34.017 --> 00:00:36.248

of this overarching course project,



14

00:00:36.248 --> 00:00:38.598

which we're going to build, at the end



15

00:00:38.598 --> 00:00:40.955

and beginning of each course module.



16

00:00:40.955 --> 00:00:43.640

At the beginning, the latest stage of the last module,



17

00:00:43.640 --> 00:00:45.240

and at the end, the latest version



18

00:00:45.240 --> 00:00:47.303

of the module you just were in.



19

00:00:47.303 --> 00:00:51.170

So you're free to skip to any module you wanna skip to.



20

00:00:51.170 --> 00:00:53.671

The same is true for the MongoDB Basics module



21

00:00:53.671 --> 00:00:55.700

which follows the NodeJS module.



22

00:00:55.700 --> 00:00:59.085

Here, I'll introduce you to the basics about MongoDB,



23

00:00:59.085 --> 00:01:01.487

how to create our models, and so on.



24

00:01:01.487 --> 00:01:02.555

If you're not interested in that,



25

00:01:02.555 --> 00:01:04.761

feel free to skip that, too.



26

00:01:04.761 --> 00:01:07.127

Thereafter, time to understand the basics



27

00:01:07.127 --> 00:01:09.399

about Angular 2 and build the front end



28

00:01:09.399 --> 00:01:10.759

of our course project.



29

00:01:10.759 --> 00:01:12.925

Again, we're building an overarching project



30

00:01:12.925 --> 00:01:16.357

throughout all these modules, so definitely jump in here



31

00:01:16.357 --> 00:01:19.153

to understand how we build the front end.



32

00:01:19.153 --> 00:01:22.640

Thereafter, finally time to connect Angular 2 and NodeJS.



33

00:01:22.640 --> 00:01:25.808

So here you will see how we will create



34

00:01:25.808 --> 00:01:29.840

this connexion I showed you in the last lecture on slides.



35

00:01:29.840 --> 00:01:31.970

Thereafter, I wanna explain how we could



36

00:01:31.970 --> 00:01:34.660

implement authentication, which means



37

00:01:34.660 --> 00:01:38.180

how do we protect certain parts of our application



38

00:01:38.180 --> 00:01:42.328

when building such a Angular 2 plus NodeJS app.



39

00:01:42.328 --> 00:01:45.629

And then it's time to understand how we could handle errors.



40

00:01:45.629 --> 00:01:48.086

Sometimes not everything goes how it should,



41

00:01:48.086 --> 00:01:49.895

or maybe the user tried to sign up



42

00:01:49.895 --> 00:01:51.707

and entered some invalid data.



43

00:01:51.707 --> 00:01:54.161

Here you will see an example approach



44

00:01:54.161 --> 00:01:56.802

and how we can handle errors thrown by the server



45

00:01:56.802 --> 00:01:59.152

on our Angular 2 front end.



46

00:01:59.152 --> 00:02:02.791

After this module, we'll have the finished application



47

00:02:02.791 --> 00:02:05.092

of this course, but I won't stop there.



48

00:02:05.092 --> 00:02:08.258

I also want to show you how we can optimise



49

00:02:08.258 --> 00:02:09.543

this app further.



50

00:02:09.543 --> 00:02:12.634

For example, by adding lazy loading to only load parts



51

00:02:12.634 --> 00:02:15.262

of this application if we really need them,



52

00:02:15.262 --> 00:02:17.578

and then how we can bundle them



53

00:02:17.578 --> 00:02:20.952

and use Angular 2's ahead of time compilation



54

00:02:20.952 --> 00:02:23.117

to shrink the bundle size.



55

00:02:23.117 --> 00:02:24.675

Well, and once we have done this,



56

00:02:24.675 --> 00:02:27.219

it's time to deploy this application



57

00:02:27.219 --> 00:02:30.797

and see it run on the web and we will deploy to Heroku



58

00:02:30.797 --> 00:02:32.797

and Amazon web services.



59

00:02:33.911 --> 00:02:38.016

Finally, I will provide you an example project



60

00:02:38.016 --> 00:02:40.416

which we'll set up in the next video.



61

00:02:40.416 --> 00:02:42.166

If you want to build your own project,



62

00:02:42.166 --> 00:02:44.312

or want to understand how this example project



63

00:02:44.312 --> 00:02:46.814

was built by me, I've got an extra module



64

00:02:46.814 --> 00:02:48.878

where I do explain just that.



65

00:02:48.878 --> 00:02:51.697

Where we will build this C project from scratch.



66

00:02:51.697 --> 00:02:53.786

Can't wait to dive deeper into that.



67

00:02:53.786 --> 00:02:54.786

Let's start.



