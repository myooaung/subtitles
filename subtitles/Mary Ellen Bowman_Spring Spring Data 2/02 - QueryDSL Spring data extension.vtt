WEBVTT
1
00:00:00.005 --> 00:00:02.006
- [Instructor] Spring data comments query methods

2
00:00:02.006 --> 00:00:04.003
are static.

3
00:00:04.003 --> 00:00:08.001
Filtering by multiple fields requires several query methods

4
00:00:08.001 --> 00:00:11.000
covering all possible combinations.

5
00:00:11.000 --> 00:00:14.007
In this example, filtering just by age, last name,

6
00:00:14.007 --> 00:00:18.008
and full-time requires seven different query methods

7
00:00:18.008 --> 00:00:22.004
plus invocation logic.

8
00:00:22.004 --> 00:00:26.004
Querydsl is a dynamic search criteria framework.

9
00:00:26.004 --> 00:00:29.007
It works with various data sources including JPA

10
00:00:29.007 --> 00:00:31.002
and MongoDB.

11
00:00:31.002 --> 00:00:34.006
Spring data comments provides an extension to querydsl

12
00:00:34.006 --> 00:00:40.002
via the querydsl predicate executor interface.

13
00:00:40.002 --> 00:00:44.001
A repository extending from querydsl predicate executor

14
00:00:44.001 --> 00:00:48.006
overloads the find and count and exist methods.

15
00:00:48.006 --> 00:00:51.009
Predicate is the search criteria.

16
00:00:51.009 --> 00:00:55.007
The querydsl annotation processor generates what are called

17
00:00:55.007 --> 00:00:58.004
Qclasses from entities.

18
00:00:58.004 --> 00:01:01.006
Qclasses are search criteria helpers to create what

19
00:01:01.006 --> 00:01:05.005
are called boolean expressions, the building blocks

20
00:01:05.005 --> 00:01:07.000
of predicates.

21
00:01:07.000 --> 00:01:11.002
In this example I have a helper class student expressions

22
00:01:11.002 --> 00:01:15.005
that dynamically creates boolean expressions.

23
00:01:15.005 --> 00:01:18.003
Take a moment to read through them.

24
00:01:18.003 --> 00:01:21.008
So I have a static method called has last name,

25
00:01:21.008 --> 00:01:26.008
I have a method called is full time and a method called

26
00:01:26.008 --> 00:01:28.008
is older than.

27
00:01:28.008 --> 00:01:32.009
Now we just mix and match the boolean expressions

28
00:01:32.009 --> 00:01:36.003
into predicates and pass them into our repository

29
00:01:36.003 --> 00:01:38.003
find all method.

30
00:01:38.003 --> 00:01:39.008
It's much cleaner looking isn't it?

31
00:01:39.008 --> 00:01:41.006
And it reads better too.

32
00:01:41.006 --> 00:01:46.002
So find all students with the last name Smith that's full

33
00:01:46.002 --> 00:01:49.000
time and is older than 20.

34
00:01:49.000 --> 00:01:54.001
Find all students that's full time and is older than 20.

35
00:01:54.001 --> 00:01:57.009
Find all students that has the last name Smith and is older

36
00:01:57.009 --> 00:02:00.000
than 20.

37
00:02:00.000 --> 00:02:03.003
To learn more about this powerful open source project,

38
00:02:03.003 --> 00:02:08.000
check out the site www.querydsl.com.

