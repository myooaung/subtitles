WEBVTT
1
00:00:00.050 --> 00:00:02.050
- [Narrator] Spring enjoys a great legacy of

2
00:00:02.050 --> 00:00:05.020
providing superior data access frameworks,

3
00:00:05.020 --> 00:00:08.090
making it a solution source for developers worldwide.

4
00:00:08.090 --> 00:00:11.060
More than an inversion of control framework,

5
00:00:11.060 --> 00:00:13.050
Spring now comprises a vast collection

6
00:00:13.050 --> 00:00:15.030
of enterprise solutions.

7
00:00:15.030 --> 00:00:18.050
One of the solutions is the Spring Data project.

8
00:00:18.050 --> 00:00:20.090
Spring data's mission is to provide a familiar

9
00:00:20.090 --> 00:00:23.060
and consistent, Spring based programing model

10
00:00:23.060 --> 00:00:25.090
for data access, while still retaining

11
00:00:25.090 --> 00:00:29.020
the special traits of the underlying data store.

12
00:00:29.020 --> 00:00:32.090
Spring data is actually an umbrella of several sub projects.

13
00:00:32.090 --> 00:00:35.080
Some address the commonality between data stores

14
00:00:35.080 --> 00:00:39.020
others tap into those special traits.

15
00:00:39.020 --> 00:00:41.070
Before we go any further I think it is very important

16
00:00:41.070 --> 00:00:44.070
to get to know the Spring Data homepage.

17
00:00:44.070 --> 00:00:46.020
It is the jumping off point for

18
00:00:46.020 --> 00:00:49.090
all the Spring Data sub projects or modules.

19
00:00:49.090 --> 00:00:51.050
And this is the place to go to

20
00:00:51.050 --> 00:00:54.010
download a particular release bundle.

21
00:00:54.010 --> 00:00:57.050
There is a section to show the release schedule.

22
00:00:57.050 --> 00:00:59.020
There is access to the twitter feed

23
00:00:59.020 --> 00:01:02.020
and stack overflow for answers.

24
00:01:02.020 --> 00:01:06.050
There are working examples and documentation.

25
00:01:06.050 --> 00:01:09.020
And we see there are several modules

26
00:01:09.020 --> 00:01:12.050
and they all specialize in various data sources

27
00:01:12.050 --> 00:01:16.000
but they all depend upon commons.

28
00:01:16.000 --> 00:01:21.010
Commons abstracts away from any particular data source.

29
00:01:21.010 --> 00:01:24.050
No matter what data source the goal is always the same,

30
00:01:24.050 --> 00:01:27.060
have a way to convert java object entities

31
00:01:27.060 --> 00:01:31.010
into target data source records and persist them,

32
00:01:31.010 --> 00:01:34.030
as well as convert the records back to entities.

33
00:01:34.030 --> 00:01:35.090
It has to look up data source records

34
00:01:35.090 --> 00:01:38.030
by citing the entity attributes.

35
00:01:38.030 --> 00:01:42.020
It has to update data source records by updating the entity.

36
00:01:42.020 --> 00:01:44.010
And finally delete the data source records

37
00:01:44.010 --> 00:01:47.000
by deleting the entity.

38
00:01:47.000 --> 00:01:49.030
The repository pattern is the abstraction

39
00:01:49.030 --> 00:01:53.010
used by Spring Data commons to accomplish these goals.

40
00:01:53.010 --> 00:01:55.080
It is followed throughout the Spring Data project

41
00:01:55.080 --> 00:01:59.030
for creating, reading, updating, and deleting records

42
00:01:59.030 --> 00:02:01.070
by citing entities.

43
00:02:01.070 --> 00:02:03.070
Any module for a particular data source

44
00:02:03.070 --> 00:02:06.080
has a repository that extends from the generic one.

45
00:02:06.080 --> 00:02:11.080
So for example, Spring Data JPA has a JPA repository,

46
00:02:11.080 --> 00:02:15.030
Spring Data mongo DB has a mongo repository,

47
00:02:15.030 --> 00:02:21.010
Spring Data gemfire has a gemfire repository, and so on.

48
00:02:21.010 --> 00:02:24.000
Spring Data JPA is the most popular module,

49
00:02:24.000 --> 00:02:26.000
therefore our deep dive into coding with

50
00:02:26.000 --> 00:02:29.040
Spring Data common repositories will be in that chapter

51
00:02:29.040 --> 00:02:32.010
as well as this querying chapter.

52
00:02:32.010 --> 00:02:34.010
Lessons learned from these chapters will be

53
00:02:34.010 --> 00:02:36.050
leveraged in the Spring Data mongo video

54
00:02:36.050 --> 00:02:39.000
and hence any other Spring Data module.

