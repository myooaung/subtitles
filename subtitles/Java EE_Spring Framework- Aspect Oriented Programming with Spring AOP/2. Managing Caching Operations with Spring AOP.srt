1
00:00:02,540 --> 00:00:05,910
[Autogenerated] we'll continue now the code demonstration and will show how

2
00:00:05,910 --> 00:00:09,890
to effectively cash the results of current operations.

3
00:00:09,890 --> 00:00:14,240
In order to do this will first demonstrate the execution without cashing.

4
00:00:14,240 --> 00:00:17,380
Then I will introduce cashing through ah crosscutting

5
00:00:17,380 --> 00:00:21,650
functionality more exactly through an aspect and then will

6
00:00:21,650 --> 00:00:27,440
demonstrate the execution with gashing.

7
00:00:27,440 --> 00:00:29,620
We go back to our flights management,

8
00:00:29,620 --> 00:00:32,840
main class and first to retreat the passenger don't improve

9
00:00:32,840 --> 00:00:36,410
bean from inside the spring container.

10
00:00:36,410 --> 00:00:41,580
We retrieved the best singer with the I D one once and

11
00:00:41,580 --> 00:00:43,040
retrieve the passenger was the I.

12
00:00:43,040 --> 00:00:47,100
D one for the second time will debunk the application

13
00:00:47,100 --> 00:00:49,440
and we see how things are going.

14
00:00:49,440 --> 00:00:54,160
We have inserted a break point to see if any passengers is retrieved from the

15
00:00:54,160 --> 00:00:58,300
passengers map and another break point to see if they get by.

16
00:00:58,300 --> 00:01:07,340
The method is called Leslie back the application.

17
00:01:07,340 --> 00:01:11,040
Remember, we are trying to retrieve twice the passenger having the i.

18
00:01:11,040 --> 00:01:11,600
D.

19
00:01:11,600 --> 00:01:12,340
One.

20
00:01:12,340 --> 00:01:14,030
When the method is first cold,

21
00:01:14,030 --> 00:01:17,930
we see that the execution stops where recall get by i d.

22
00:01:17,930 --> 00:01:21,250
So at the first call of the get passenger method,

23
00:01:21,250 --> 00:01:29,090
the passenger is not yet in the passenger's map.

24
00:01:29,090 --> 00:01:34,040
We have retrieved passenger Jim from United States.

25
00:01:34,040 --> 00:01:38,470
We resume the program and we see that for the second time the

26
00:01:38,470 --> 00:01:43,340
passenger hasn't been retreats from the map.

27
00:01:43,340 --> 00:01:46,730
It is the same passenger Jim from United States.

28
00:01:46,730 --> 00:01:48,560
So there is no cashing.

29
00:01:48,560 --> 00:01:51,300
Of course, this is because nobody's inserting anything.

30
00:01:51,300 --> 00:01:55,280
So the already defined passengers map Remember,

31
00:01:55,280 --> 00:01:58,110
we have promised to go back to this problem.

32
00:01:58,110 --> 00:02:00,220
Who should do this, of course,

33
00:02:00,220 --> 00:02:03,390
across cutting functionality more exactly on aspect.

34
00:02:03,390 --> 00:02:12,230
And this is what we're going to do next.

35
00:02:12,230 --> 00:02:18,210
We introduced this new cashing aspic class and we'll provide to

36
00:02:18,210 --> 00:02:22,240
it order three meaning it will have the highest importance in

37
00:02:22,240 --> 00:02:26,260
order to speed up the application.

38
00:02:26,260 --> 00:02:26,540
Winter.

39
00:02:26,540 --> 00:02:31,130
Just hear the get passengers map method In order to make the passengers map

40
00:02:31,130 --> 00:02:36,790
field accessible from outside the passengers that are in class,

41
00:02:36,790 --> 00:02:43,000
we go back to the cashing aspect class We annotated with aspect.

42
00:02:43,000 --> 00:02:47,940
We introduced this cash passenger method and we annotated with the around

43
00:02:47,940 --> 00:02:51,820
annotation Toby executed around the execution of the method.

44
00:02:51,820 --> 00:02:53,240
Calm the parasite.

45
00:02:53,240 --> 00:02:57,320
The spring GOP dot flies management dr DAO dot passenger,

46
00:02:57,320 --> 00:03:01,530
dollar imp dot Yet passenger In this method,

47
00:03:01,530 --> 00:03:04,410
we are first getting the metal Arguments were

48
00:03:04,410 --> 00:03:07,460
effectively running the original method then,

49
00:03:07,460 --> 00:03:08,620
as the I D.

50
00:03:08,620 --> 00:03:11,130
Is the first argument of the original method,

51
00:03:11,130 --> 00:03:13,870
we check if it already exists inside the map.

52
00:03:13,870 --> 00:03:18,530
And if this does not happen, we are putting it into the passengers map.

53
00:03:18,530 --> 00:03:23,290
This is how we are effectively making the cashing into

54
00:03:23,290 --> 00:03:26,110
the AARP dot xml configuration file.

55
00:03:26,110 --> 00:03:29,440
We're inserting this being with the name cashing aspect

56
00:03:29,440 --> 00:03:32,150
belonging to the class calm dot pearl site.

57
00:03:32,150 --> 00:03:37,370
Hot Spring Europea Thought Flights management dot aspect dot cashing aspect.

58
00:03:37,370 --> 00:03:43,310
This way, the aspect will arrive under the control of the spring container.

59
00:03:43,310 --> 00:03:51,180
We kept the same break points, so let's run the application.

60
00:03:51,180 --> 00:03:54,040
This is the first execution of the get passenger method,

61
00:03:54,040 --> 00:03:56,980
having one as argument The passenger was the I.

62
00:03:56,980 --> 00:03:59,540
D one is not yet inside the passengers map.

63
00:03:59,540 --> 00:04:07,720
So it is retreats from the database with the help of the get by de matter.

64
00:04:07,720 --> 00:04:11,540
It is passenger Jim from United States.

65
00:04:11,540 --> 00:04:16,610
We resume the program and look at the second execution of the

66
00:04:16,610 --> 00:04:18,630
get passenger method with the same idea.

67
00:04:18,630 --> 00:04:22,540
One, the messenger is retrieved from the passengers map.

68
00:04:22,540 --> 00:04:23,410
Why?

69
00:04:23,410 --> 00:04:31,040
Because the cashing aspect has inserted it here and we may resume the program.

70
00:04:31,040 --> 00:04:41,000
So we have demonstrated how to introduce the cashing crosscutting functionality with the help of the spring Air Opie facilities.

