WEBVTT
1
00:00:00.006 --> 00:00:03.006
- [Instructor] Before we discuss microservice security,

2
00:00:03.006 --> 00:00:06.009
let's talk about several security fundamentals that apply

3
00:00:06.009 --> 00:00:09.008
to any system architecture.

4
00:00:09.008 --> 00:00:11.008
When securing an information system,

5
00:00:11.008 --> 00:00:14.007
there are three primary security objectives,

6
00:00:14.007 --> 00:00:19.006
confidentiality, integrity and availability.

7
00:00:19.006 --> 00:00:23.002
Confidentiality ensures that information remains private

8
00:00:23.002 --> 00:00:27.004
by only allowing authorized users to access it.

9
00:00:27.004 --> 00:00:30.007
Integrity ensures that information can be trusted

10
00:00:30.007 --> 00:00:33.004
because it has not been tampered with.

11
00:00:33.004 --> 00:00:36.006
Availability ensures that systems are accessible

12
00:00:36.006 --> 00:00:38.003
and can make information available

13
00:00:38.003 --> 00:00:41.006
to authorized users when they need it.

14
00:00:41.006 --> 00:00:42.008
To achieve these goals,

15
00:00:42.008 --> 00:00:45.008
security strategies and controls are selected

16
00:00:45.008 --> 00:00:48.002
and applied to a systems architecture

17
00:00:48.002 --> 00:00:51.003
to the extent they are required.

18
00:00:51.003 --> 00:00:54.009
Access control is one security technique applied

19
00:00:54.009 --> 00:00:58.003
to protect sensitive resources.

20
00:00:58.003 --> 00:00:59.008
If you've ever taken a flight,

21
00:00:59.008 --> 00:01:03.005
you've experienced two key components of access control,

22
00:01:03.005 --> 00:01:06.007
authentication and authorization.

23
00:01:06.007 --> 00:01:09.000
To board a flight, you must authenticate

24
00:01:09.000 --> 00:01:10.004
or prove your identity

25
00:01:10.004 --> 00:01:13.004
by showing your ID at the security gate.

26
00:01:13.004 --> 00:01:17.002
Next, you show your boarding pass to prove you're authorized

27
00:01:17.002 --> 00:01:18.009
to be on the flight.

28
00:01:18.009 --> 00:01:21.005
Only after completing these two steps

29
00:01:21.005 --> 00:01:25.002
will you be granted access to the airplane.

30
00:01:25.002 --> 00:01:27.004
When securing information systems,

31
00:01:27.004 --> 00:01:30.006
authentication is an important security control

32
00:01:30.006 --> 00:01:33.007
because it establishes a user's identity

33
00:01:33.007 --> 00:01:37.005
which is necessary to make an access decision.

34
00:01:37.005 --> 00:01:40.005
Systems may need to authenticate both human users

35
00:01:40.005 --> 00:01:42.007
and other systems,

36
00:01:42.007 --> 00:01:44.006
which is accomplished through the exchange

37
00:01:44.006 --> 00:01:47.005
of something you know such as a password

38
00:01:47.005 --> 00:01:50.008
or something you have such as a token.

39
00:01:50.008 --> 00:01:52.006
Highly sensitive systems

40
00:01:52.006 --> 00:01:55.002
may apply additional security measures

41
00:01:55.002 --> 00:01:57.006
like multi-factor authentication

42
00:01:57.006 --> 00:02:00.009
that combines several authentication methods

43
00:02:00.009 --> 00:02:05.001
such as a password and a one-time pin.

44
00:02:05.001 --> 00:02:07.006
Once identity is established,

45
00:02:07.006 --> 00:02:10.003
a system uses the authorization process

46
00:02:10.003 --> 00:02:12.007
to control access to resources

47
00:02:12.007 --> 00:02:15.004
based upon a user's privileges.

48
00:02:15.004 --> 00:02:17.005
Privileges are used to determine

49
00:02:17.005 --> 00:02:19.008
if users should be granted access

50
00:02:19.008 --> 00:02:22.008
to the resources they requested.

51
00:02:22.008 --> 00:02:24.009
Modern authorization protocols

52
00:02:24.009 --> 00:02:29.004
such as OAuth permit access privileges to be delegated

53
00:02:29.004 --> 00:02:32.003
by a resource owner to third parties,

54
00:02:32.003 --> 00:02:36.001
allowing the third party to access resources

55
00:02:36.001 --> 00:02:38.009
on behalf of a user.

56
00:02:38.009 --> 00:02:42.007
Trust is another very important security concept

57
00:02:42.007 --> 00:02:44.008
because it determines to what extent

58
00:02:44.008 --> 00:02:47.005
something is believed to be true.

59
00:02:47.005 --> 00:02:49.007
Systems must frequently decide

60
00:02:49.007 --> 00:02:52.007
whether to trust various pieces of information

61
00:02:52.007 --> 00:02:55.009
such as a user's identity, access privileges,

62
00:02:55.009 --> 00:02:59.003
tokens and transactional business data.

63
00:02:59.003 --> 00:03:02.003
This determination is made based upon factors

64
00:03:02.003 --> 00:03:04.002
such as the source of the data,

65
00:03:04.002 --> 00:03:08.009
it's age and the integrity checks it is undergone.

66
00:03:08.009 --> 00:03:13.000
Additionally trust domains can cause one segment of a system

67
00:03:13.000 --> 00:03:15.004
to trust a piece of information.

68
00:03:15.004 --> 00:03:19.000
However, if that data crosses a trust boundary

69
00:03:19.000 --> 00:03:21.002
to another segment of the system,

70
00:03:21.002 --> 00:03:24.000
it is no longer trusted.

71
00:03:24.000 --> 00:03:27.002
A system's attack surface comprises all of the paths

72
00:03:27.002 --> 00:03:32.004
that can be used to get data into or out of an application.

73
00:03:32.004 --> 00:03:36.001
A systems user interface, open ports, API,

74
00:03:36.001 --> 00:03:39.000
and database can all present opportunities

75
00:03:39.000 --> 00:03:41.009
for an attacker to compromise a system.

76
00:03:41.009 --> 00:03:45.003
So they are considered part of the attack surface.

77
00:03:45.003 --> 00:03:47.008
Reducing and hardening the attack surface

78
00:03:47.008 --> 00:03:52.002
is an effective strategy to enhance a system security.

79
00:03:52.002 --> 00:03:55.005
These security goals and concepts are universal

80
00:03:55.005 --> 00:03:57.005
to any architecture,

81
00:03:57.005 --> 00:03:59.006
but how we achieve or apply them

82
00:03:59.006 --> 00:04:01.005
will be drastically different

83
00:04:01.005 --> 00:04:04.000
from microservice architecture.

84
00:04:04.000 --> 00:04:07.005
Most of the strategies used to secure a monolith

85
00:04:07.005 --> 00:04:12.000
need to be re-engineered to secure a distributed system.

