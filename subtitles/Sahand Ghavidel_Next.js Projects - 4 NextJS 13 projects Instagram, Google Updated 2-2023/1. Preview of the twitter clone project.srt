0
1
00:00:01,010 --> 00:00:02,330
Welcome to the project.
1

2
00:00:02,780 --> 00:00:10,190
In this project, we're going to create a Twitter clone using Next.js, Tailwind CSS, and Firebase.
2

3
00:00:11,240 --> 00:00:14,470
You're going to use Next.js version 12.
3

4
00:00:15,500 --> 00:00:16,010
Tailwind
4

5
00:00:16,010 --> 00:00:16,720
CSS
5

6
00:00:16,730 --> 00:00:22,190
Version 3.0 and Firebase version 9 inside our project.
6

7
00:00:23,980 --> 00:00:30,910
As you can see from the final version of the project, we have three parts in the homepage, including
7

8
00:00:30,910 --> 00:00:35,110
the sidebar, widgets, and the feed sections.
8

9
00:00:35,980 --> 00:00:39,430
The sidebar includes the menu and the sign in button.
9

10
00:00:40,060 --> 00:00:46,090
We're going to use the next-auth package along with Google OAuth for authentication.
10

11
00:00:46,870 --> 00:00:49,120
Once we click on the sign in button.
11

12
00:00:50,240 --> 00:00:54,970
You're going to be redirected to a custom sign in page here.
12

13
00:00:54,970 --> 00:00:57,730
We can click on the sign in with Google Button.
13

14
00:00:58,390 --> 00:01:02,590
And on the next page we can choose our desired Gmail accounts.
14

15
00:01:02,920 --> 00:01:04,630
For example, I choose this one.
15

16
00:01:09,390 --> 00:01:15,810
Once we are signed in with a Google account, a session would be started and the picture of the user would
16

17
00:01:15,810 --> 00:01:21,090
be shown under the menu here and also at the input section here.
17

18
00:01:21,180 --> 00:01:23,010
Now we can post a new tweet.
18

19
00:01:23,430 --> 00:01:29,430
Also, we have the ability to like and leave a comment with this account here.
19

20
00:01:29,430 --> 00:01:33,700
Inside the input section, we can write our tweet with an image.
20

21
00:01:34,170 --> 00:01:37,380
For example, I just write a new tweet.
21

22
00:01:40,200 --> 00:01:43,260
And add a new image by clicking on this icon.
22

23
00:01:44,870 --> 00:01:48,140
For example, I choose this image.
23

24
00:01:48,680 --> 00:01:52,610
Once we choose the image, we can see the preview of the image here.
24

25
00:01:52,880 --> 00:01:59,720
By clicking on the tweet icon, we are going to upload the image into the Firebase Storage first.
25

26
00:02:01,590 --> 00:02:09,150
Then a new document is going to be created inside the "posts" collection of the Firebase database, which
26

27
00:02:09,150 --> 00:02:11,100
is in our case Firestore.
27

28
00:02:11,460 --> 00:02:17,520
We are going to learn how to interact with Firestore, including the CRUD operations, a step by
28

29
00:02:17,520 --> 00:02:19,170
step inside the project.
29

30
00:02:19,680 --> 00:02:24,960
The post that we have created is going to be shown at the beginning of the feed section.
30

31
00:02:25,440 --> 00:02:29,970
Each post has a header and image and buttons.
31

32
00:02:30,720 --> 00:02:33,900
Each person can only like the post once.
32

33
00:02:35,090 --> 00:02:37,400
And delete its own post here.
33

34
00:02:37,850 --> 00:02:40,370
The number of likes is shown here.
34

35
00:02:40,580 --> 00:02:42,770
If the post has more than one like.
35

36
00:02:43,220 --> 00:02:51,870
Also the user can leave a comment on any post by clicking on the chat icon by clicking on this icon.
36

37
00:02:51,890 --> 00:02:53,750
A modal is going to pop up.
37

38
00:02:54,440 --> 00:02:58,220
We are going to use react-modal package to create this modal.
38

39
00:02:58,670 --> 00:03:04,790
Comments and likes are also recorded in the Firestore and they are going to be fetch each time the
39

40
00:03:04,790 --> 00:03:08,600
database is changed using the useEffect react hook.
40

41
00:03:09,230 --> 00:03:12,000
Let me leave a comment here, for example.
41

42
00:03:12,020 --> 00:03:14,060
I say thank you.
42

43
00:03:15,180 --> 00:03:16,920
And I press reply.
43

44
00:03:17,760 --> 00:03:24,600
Once you press on the reply, you're going to be redirected to the page specifically created for the
44

45
00:03:24,600 --> 00:03:25,170
post.
45

46
00:03:26,470 --> 00:03:31,990
So each post has its own page and comments of the posts are shown here.
46

47
00:03:32,800 --> 00:03:40,150
Each comments can be liked and also can be deleted by the owner of the comment like this.
47

48
00:03:40,960 --> 00:03:44,890
And you can also click on this icon to come back to the homepage.
48

49
00:03:47,710 --> 00:03:54,310
On the right side, we have the widget which includes the search bar, the What's Happening section
49

50
00:03:55,180 --> 00:03:57,250
and also who to follow section.
50

51
00:03:58,490 --> 00:04:05,870
These news titles inside the What's Happening sections are dynamic and real and coming from a news API.
51

52
00:04:06,350 --> 00:04:12,680
By clicking on the show more button, we can see three more news titles each time.
52

53
00:04:19,060 --> 00:04:28,360
These users inside the Who to Follow section are also created using a user generator API and by clicking
53

54
00:04:28,360 --> 00:04:34,390
on to show more link, we can also see three more users each time.
54

55
00:04:36,820 --> 00:04:43,990
All the website is are styled using only Tailwind CSS version 3.0 and the entire source code is
55

56
00:04:43,990 --> 00:04:49,780
available inside this GitHub repository, which you can find inside the resource section.
56

57
00:04:50,440 --> 00:04:57,280
You can also have a preview of the project from this URL, twitter.100jsprojects.com
57

58
00:04:57,760 --> 00:05:04,240
in the next section we are going to install Next.js and Tailwind CSS and create the beginning template.
58

59
00:05:04,840 --> 00:05:06,400
So see you in the next section.
