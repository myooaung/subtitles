WEBVTT
1
00:00:07.520 --> 00:00:07.940
All right.

2
00:00:07.940 --> 00:00:12.200
In the last section, we have completed the nav bar component.

3
00:00:12.590 --> 00:00:19.460
In this section, we're going to fetch data based on the trending or top-rated and show it inside the

4
00:00:19.460 --> 00:00:20.600
home page.

5
00:00:21.870 --> 00:00:28.080
So the database we're going to use is a TM be.

6
00:00:28.790 --> 00:00:32.600
So if you go, I want to use Firefox.

7
00:00:33.560 --> 00:00:37.670
Uh, if you use if you go to tlmt be.

8
00:00:38.960 --> 00:00:42.010
Website, and this is my account.

9
00:00:42.020 --> 00:00:43.790
I show you the URL.

10
00:00:44.980 --> 00:00:48.310
It's the movie TV dot org.

11
00:00:48.820 --> 00:00:52.720
If you go there and sign in with your account, it's completely free.

12
00:00:52.720 --> 00:00:55.210
You can just make an account.

13
00:00:56.240 --> 00:01:05.810
And here you can click on this profile button at the top and click on setting.

14
00:01:08.780 --> 00:01:11.480
So here you can have access to your API.

15
00:01:11.530 --> 00:01:14.480
So on the left side, you click on API.

16
00:01:15.770 --> 00:01:18.620
And here you can see your API key.

17
00:01:19.680 --> 00:01:24.790
And also there are some documentations about how to use the API.

18
00:01:24.810 --> 00:01:29.010
Show you some how you can use this database to create.

19
00:01:29.760 --> 00:01:32.520
And get information, for example.

20
00:01:34.510 --> 00:01:43.330
Inside the database, the documentation, for example, if you go to training tab here.

21
00:01:45.750 --> 00:01:46.470
It explained.

22
00:01:46.470 --> 00:01:52.170
You can get the trending for everything, for movies, for TV, for person.

23
00:01:53.300 --> 00:01:56.570
From the last day or to last week.

24
00:01:56.990 --> 00:01:59.510
And then you can also try it yourself.

25
00:01:59.510 --> 00:02:00.980
You can click on Try it.

26
00:02:02.460 --> 00:02:03.180
Out.

27
00:02:03.180 --> 00:02:08.030
And here you can put your API key and choose the media type.

28
00:02:08.040 --> 00:02:09.990
For example, I choose movie.

29
00:02:10.320 --> 00:02:14.040
And for example, I want the last week.

30
00:02:14.220 --> 00:02:16.710
So this is going to show me.

31
00:02:17.580 --> 00:02:18.590
The URL.

32
00:02:18.600 --> 00:02:22.590
I need to send a request.

33
00:02:24.260 --> 00:02:32.990
So the URL is the same website, the movie TV dot org, but API dot and forward slash three trending

34
00:02:32.990 --> 00:02:34.280
movie week.

35
00:02:34.370 --> 00:02:36.800
And you pass your API key.

36
00:02:37.070 --> 00:02:44.900
So for the trending, we use this one for the Fitch rated top rated, it's different.

37
00:02:44.900 --> 00:02:47.650
So you can just see what you can do.

38
00:02:47.660 --> 00:02:50.780
There are a lot of things in the.

39
00:02:51.620 --> 00:02:59.360
Following sections, I'm going to show you how to use the search box and search between the movies as

40
00:02:59.360 --> 00:02:59.750
well.

41
00:03:00.640 --> 00:03:02.860
So this is a documentation.

42
00:03:04.280 --> 00:03:13.070
We don't need it now, but for the API key you need to copy your API key and go back to your Visual

43
00:03:13.070 --> 00:03:23.240
Studio code and create an environmental variable file in the root of your project.

44
00:03:23.540 --> 00:03:28.790
It should be just outside, just next to the for example, tailwind configs.

45
00:03:28.790 --> 00:03:36.680
So you right click here and create a new file and you call this file dot E and V.

46
00:03:39.220 --> 00:03:40.480
Dot's local.

47
00:03:44.150 --> 00:03:46.820
And here.

48
00:03:47.920 --> 00:04:00.760
You just create a variable called API underlying key and you equal this one to that API key that we

49
00:04:00.760 --> 00:04:04.120
have copied.

50
00:04:05.380 --> 00:04:10.630
After creating the environmental value, you need to restart the server.

51
00:04:11.020 --> 00:04:13.180
So you need to start the server.

52
00:04:13.420 --> 00:04:17.470
And it started again using NPN run diff.

53
00:04:17.470 --> 00:04:22.210
Otherwise you don't get the information from the environmental variable.

54
00:04:23.370 --> 00:04:31.950
So now inside the home page and the reason we put the API key in the environmental variable is when

55
00:04:31.950 --> 00:04:41.340
you're uploading your website to the GitHub, this environmental variable is not going to be uploaded,

56
00:04:41.340 --> 00:04:44.790
so your API key is going to be secure.

57
00:04:44.790 --> 00:04:56.250
And also when we deploy our website traversal, we are going to add the this API key in the in the environmental

58
00:04:56.250 --> 00:04:58.590
variable section of the vessel.

59
00:04:58.590 --> 00:05:02.940
So the versa is going to protect our environmental variable.

60
00:05:04.800 --> 00:05:13.050
So inside the home page, inside the app directory and the page that is X, we are going to firstly,

61
00:05:13.050 --> 00:05:14.820
I want to delete all these things.

62
00:05:14.820 --> 00:05:15.930
We don't need them.

63
00:05:17.040 --> 00:05:23.640
We want to create a constant called API.

64
00:05:25.030 --> 00:05:26.650
Underlying key.

65
00:05:28.240 --> 00:05:33.820
And this is going to be equal and this should be capitalized.

66
00:05:35.820 --> 00:05:39.270
This one is equal to process.

67
00:05:41.160 --> 00:05:42.450
That envy.

68
00:05:45.430 --> 00:05:48.000
That API key.

69
00:05:49.820 --> 00:05:52.070
Which is coming from the environmental variables.

70
00:05:52.070 --> 00:05:56.510
So this is the way you get the information from the environmental variable.

71
00:05:56.510 --> 00:05:58.820
And this is going to be protected as well.

72
00:05:59.980 --> 00:06:02.860
So now we have the API key protected.

73
00:06:02.890 --> 00:06:05.380
Now we want to fetch the data.

74
00:06:06.010 --> 00:06:10.540
The way that it works in inside the.

75
00:06:12.050 --> 00:06:13.700
Next year 13.

76
00:06:13.730 --> 00:06:23.390
We don't use use effect or any other hoax to get the data because this is going to be client side.

77
00:06:23.420 --> 00:06:24.740
We want to use the.

78
00:06:26.000 --> 00:06:29.750
Server side for the this home page.

79
00:06:30.110 --> 00:06:37.070
So in order to do that, because we want to request from the API and this is going to be asynchronous.

80
00:06:37.580 --> 00:06:40.670
And we need to wait for the data to comes.

81
00:06:40.940 --> 00:06:42.980
So we need to change this.

82
00:06:43.920 --> 00:06:46.410
A function to asynchronous.

83
00:06:47.750 --> 00:06:51.650
So this is not possible inside the React functional component.

84
00:06:51.650 --> 00:06:56.210
So this is only possible for the next year 30.

85
00:06:57.260 --> 00:07:02.660
And so because they made the server side like this.

86
00:07:03.380 --> 00:07:07.970
So now at the top, we can have our request.

87
00:07:10.890 --> 00:07:14.820
So the way we do that, we just create a constant.

88
00:07:17.030 --> 00:07:20.480
At first we want to get the information from the URL.

89
00:07:21.020 --> 00:07:23.630
So in the URL we have.

90
00:07:24.710 --> 00:07:25.550
The genre.

91
00:07:25.550 --> 00:07:27.230
We want to get the genre.

92
00:07:28.010 --> 00:07:34.970
We want to know that if if it's fetch trending or fetch top rated inside the.

93
00:07:35.570 --> 00:07:42.530
If you remember inside the components, we have used the use search params, but we cannot use it here

94
00:07:42.530 --> 00:07:45.660
because this is the server side component.

95
00:07:45.680 --> 00:07:51.050
Here there is another method and the this inside the next.

96
00:07:51.070 --> 00:07:51.280
Yes.

97
00:07:51.290 --> 00:07:51.740
13.

98
00:07:51.740 --> 00:07:55.880
We can just get the search params here.

99
00:07:59.380 --> 00:08:01.390
So we get this search.

100
00:08:04.370 --> 00:08:13.640
Pram here and now we can just create a constant, we call it genre, and this is going to be equal to

101
00:08:13.640 --> 00:08:16.880
search params dot genre.

102
00:08:18.630 --> 00:08:25.740
And if there is no genre, I just want to just say use.

103
00:08:26.820 --> 00:08:27.660
Fitch.

104
00:08:28.080 --> 00:08:28.980
Trendy.

105
00:08:29.850 --> 00:08:30.330
All right.

106
00:08:31.140 --> 00:08:34.770
So it can be Fitch trending or Fitch top rated.

107
00:08:34.770 --> 00:08:39.930
But if it's not available, this one, you want to use the Fitch Trendy.

108
00:08:41.250 --> 00:08:50.580
And now we want to get the information from the API here using this information and also the API key.

109
00:08:53.300 --> 00:08:57.410
So I'm going to use this a way to fetch.

110
00:08:58.290 --> 00:09:00.240
I call it response.

111
00:09:01.010 --> 00:09:10.130
And the URL is dynamic because we want to have the trending or top rated.

112
00:09:10.130 --> 00:09:16.130
So depending on the genre, we want to change the URL, but there is a base URL.

113
00:09:16.520 --> 00:09:18.860
So the base URL here.

114
00:09:23.020 --> 00:09:24.940
The base URL is this one.

115
00:09:27.850 --> 00:09:28.660
HTTP.

116
00:09:28.660 --> 00:09:33.250
As you can see, the code copilot is suggesting me something.

117
00:09:34.150 --> 00:09:35.470
So that is very useful.

118
00:09:35.470 --> 00:09:39.850
So we have the API dot.

119
00:09:40.880 --> 00:09:43.010
So let me use this one first.

120
00:09:43.280 --> 00:09:46.100
So we're going to use this is the base URL.

121
00:09:47.450 --> 00:09:48.590
And the.

122
00:09:52.580 --> 00:10:00.950
This is for the top rated, so I'm going to delete the rest, actually.

123
00:10:02.800 --> 00:10:05.170
And we create a variable here.

124
00:10:09.130 --> 00:10:12.010
For creating variable, you need to use the dollar sign.

125
00:10:12.670 --> 00:10:19.270
And now we just say if the genre is equal.

126
00:10:21.700 --> 00:10:23.110
To Fitch.

127
00:10:26.810 --> 00:10:27.800
Top rated

128
00:10:30.440 --> 00:10:34.070
if this one is equal to fetch top rated.

129
00:10:39.550 --> 00:10:46.800
I want the URL the rest of it to be movie forward slash top rated.

130
00:10:46.810 --> 00:10:48.910
Otherwise I wanted to be.

131
00:10:50.100 --> 00:10:55.200
Trending all but instead of day, I want to use week the last week.

132
00:10:55.200 --> 00:10:57.450
I want to use the trending in the last week.

133
00:10:58.320 --> 00:10:59.130
And.

134
00:11:01.800 --> 00:11:03.420
So the rest of them.

135
00:11:04.830 --> 00:11:09.480
We are using the API key and also we want to use the language.

136
00:11:10.390 --> 00:11:15.010
English and can we can use the first page.

137
00:11:18.380 --> 00:11:19.340
So let's see.

138
00:11:19.340 --> 00:11:20.660
This is correct.

139
00:11:21.110 --> 00:11:22.850
So this is the fetch.

140
00:11:25.870 --> 00:11:29.800
So I think this is we can delete this one.

141
00:11:31.750 --> 00:11:34.720
Now, let me explain you again.

142
00:11:34.720 --> 00:11:40.450
So we have a base URL, which is common for both top rated and top trending.

143
00:11:40.990 --> 00:11:45.490
If it's top rated, the URL is movie.

144
00:11:46.280 --> 00:11:47.060
Dash.

145
00:11:48.680 --> 00:11:49.970
At top rated.

146
00:11:50.970 --> 00:11:54.900
If it's not, it can be trending because we are using trending.

147
00:11:54.900 --> 00:11:57.570
So it's trending all week.

148
00:11:58.550 --> 00:12:02.390
And also we have passed the API key.

149
00:12:03.350 --> 00:12:11.510
Which is we are getting from here and the language we want to be English and also we want to show the

150
00:12:11.510 --> 00:12:12.560
first page.

151
00:12:12.560 --> 00:12:20.030
And if you want to add the pagination later, you can just work and make this one dynamic as well.

152
00:12:21.040 --> 00:12:24.820
But for now, for simplicity, we just get the first page.

153
00:12:25.450 --> 00:12:28.360
Now there is another option.

154
00:12:30.090 --> 00:12:35.730
Yeah, because this is the we get from the next year, 13.

155
00:12:35.730 --> 00:12:38.670
Next year 13 gives us a couple of options.

156
00:12:38.670 --> 00:12:41.880
So let me show you inside the documentation.

157
00:12:41.880 --> 00:12:50.460
So we go to better that next year's forward slash docs and I'm going to show you the fetch.

158
00:12:52.200 --> 00:12:54.930
Or let's see, we can here find it here.

159
00:12:55.830 --> 00:12:57.930
So for data fetching.

160
00:13:00.950 --> 00:13:02.330
Uh, let's see.

161
00:13:02.510 --> 00:13:05.540
For data fishing, we have different methods.

162
00:13:05.660 --> 00:13:08.900
So after the fishing, we can just fetch it.

163
00:13:08.930 --> 00:13:13.100
Normally, this is going to just fetch the data.

164
00:13:15.380 --> 00:13:17.960
And this is going to cache your data.

165
00:13:19.400 --> 00:13:20.480
For the caching.

166
00:13:20.480 --> 00:13:22.430
We have several options.

167
00:13:22.850 --> 00:13:29.030
For example, we can say every 22nd, ten second cash.

168
00:13:29.690 --> 00:13:36.050
Our data, it means if the one user comes, it's going to cash the data.

169
00:13:36.560 --> 00:13:44.900
But for the next ten second anyone comes to our website is going to use the cash that data from the

170
00:13:45.290 --> 00:13:51.460
from the server not they're not going to get the new data from the API.

171
00:13:51.470 --> 00:13:55.790
So this is going to save you from your API request.

172
00:13:56.060 --> 00:13:58.940
For example, if your data is not.

173
00:14:00.090 --> 00:14:00.630
Uh.

174
00:14:01.620 --> 00:14:06.660
Real time, for example, it's not something that is come every second.

175
00:14:07.140 --> 00:14:12.000
You can just use, for example, revalidate, for example, one day.

176
00:14:12.480 --> 00:14:19.590
In that case, for example, if you for example, especially for the movie trending or other things,

177
00:14:19.590 --> 00:14:22.690
the trending is not going to change every second.

178
00:14:22.710 --> 00:14:31.290
For example, every 3 hours, every every 5 hours you can check and this is going to save your API request.

179
00:14:31.530 --> 00:14:40.590
And the just the the other users use the the the cache inside the server.

180
00:14:41.920 --> 00:14:45.370
So we can use add this option for us.

181
00:14:45.370 --> 00:14:51.970
For example, we can just add this one and there are plenty of other methods.

182
00:14:52.390 --> 00:14:55.600
So we're going to use in other projects.

183
00:14:55.870 --> 00:15:00.340
But for now, we just know that there are some methods you can just.

184
00:15:01.100 --> 00:15:05.240
You don't have any cash or you are all you always cash it.

185
00:15:06.340 --> 00:15:10.600
Or you can revalidate every ten second every.

186
00:15:11.260 --> 00:15:13.420
So I'm going to just copy this one.

187
00:15:17.530 --> 00:15:24.190
So I'm just going to copy this on a comeback to our website and inside the fetch.

188
00:15:27.060 --> 00:15:33.900
Before closing the fetch, I'm going to add a comma here.

189
00:15:33.900 --> 00:15:37.610
So after this back tick, you add a comma and paste it.

190
00:15:37.650 --> 00:15:40.920
This one and this is.

191
00:15:42.450 --> 00:15:43.830
So there was a comma here.

192
00:15:43.830 --> 00:15:45.600
So I'm going to delete one comma.

193
00:15:47.510 --> 00:15:57.880
And then we can just change this revalidation, for example, to 10000 seconds, because the movie,

194
00:15:58.130 --> 00:16:06.560
mostly the movies, they are not going to change every second or every 102nd thousand second, even

195
00:16:06.560 --> 00:16:07.400
this one is.

196
00:16:08.280 --> 00:16:09.600
Uh, very much.

197
00:16:09.960 --> 00:16:16.740
So I just want to show you how we get the data and how we can revalidate using next year 13.

198
00:16:17.730 --> 00:16:19.080
Then we can just.

199
00:16:21.430 --> 00:16:28.480
Change this data and convert it to JSON file and save it inside the data.

200
00:16:29.570 --> 00:16:37.970
And I just want to firstly show the and we get the results and the results would be.

201
00:16:39.800 --> 00:16:44.390
Inside data that results.

202
00:16:44.780 --> 00:16:46.340
And let's console.log.

203
00:16:46.340 --> 00:16:55.130
And just another important things to know is this is a server side and console.log is just showing inside

204
00:16:55.130 --> 00:16:58.670
this server to inside the terminal, not inside the browser.

205
00:16:59.370 --> 00:17:01.980
So when we console.log here.

206
00:17:03.420 --> 00:17:05.880
And we need to go to the browser.

207
00:17:06.830 --> 00:17:09.230
We just refresh the page.

208
00:17:12.980 --> 00:17:16.550
And now we should see the data here.

209
00:17:17.910 --> 00:17:19.980
If the fishing is successful.

210
00:17:25.500 --> 00:17:27.390
And we got the result on the find.

211
00:17:27.390 --> 00:17:30.300
Probably we made some mistakes here.

212
00:17:30.300 --> 00:17:32.610
So let me check again.

213
00:17:34.150 --> 00:17:38.290
So this is the base, your URL.

214
00:17:40.830 --> 00:17:43.230
And we have the genre.

215
00:17:45.050 --> 00:17:46.160
Oh, we didn't.

216
00:17:49.620 --> 00:17:53.160
We got the genre from the premise here.

217
00:17:53.930 --> 00:17:55.130
And then.

218
00:17:56.100 --> 00:17:56.420
Fitch.

219
00:17:56.520 --> 00:17:57.660
Top rated.

220
00:17:58.380 --> 00:18:00.180
This is the URL.

221
00:18:05.810 --> 00:18:06.770
I think.

222
00:18:14.680 --> 00:18:16.690
So let me pause the video and check.

223
00:18:16.870 --> 00:18:20.650
I will be I'll be back when I find every error.

224
00:18:21.730 --> 00:18:22.060
All right.

225
00:18:22.060 --> 00:18:28.870
I find the error, so we just need to connect this one together because of the space here.

226
00:18:29.350 --> 00:18:32.770
It's going to crash like this.

227
00:18:33.070 --> 00:18:36.670
So now we get the results, actually.

228
00:18:38.950 --> 00:18:43.360
You can see that we got an array of results.

229
00:18:44.770 --> 00:18:47.930
With with movies for the.

230
00:18:48.790 --> 00:18:49.630
Their language.

231
00:18:49.630 --> 00:18:53.830
The title We have the poster path.

232
00:18:54.610 --> 00:18:59.680
And we have the overview of the movies.

233
00:18:59.980 --> 00:19:00.610
All right.

234
00:19:01.880 --> 00:19:03.710
So that is working now.

235
00:19:03.710 --> 00:19:07.220
So let me close this.

236
00:19:07.670 --> 00:19:09.190
So we this is okay.

237
00:19:09.200 --> 00:19:11.480
We just need to delete these spaces.

238
00:19:11.510 --> 00:19:15.500
So this is going to make a space and it's a better request.

239
00:19:15.890 --> 00:19:18.890
And the other things we want to do is.

240
00:19:19.680 --> 00:19:22.260
So let's delete the console lock here.

241
00:19:23.860 --> 00:19:27.280
And then we want to check if the result.

242
00:19:29.260 --> 00:19:32.980
If the race is not okay.

243
00:19:32.980 --> 00:19:35.440
So the result has a problem.

244
00:19:36.430 --> 00:19:38.290
We want to.

245
00:19:41.030 --> 00:19:44.270
We want to have some condition and truth and error.

246
00:19:44.360 --> 00:19:46.520
So we just throw an error.

247
00:19:48.020 --> 00:19:49.820
We just right down through.

248
00:19:51.240 --> 00:19:52.560
A new error.

249
00:19:53.900 --> 00:19:55.490
That's the suggestion.

250
00:19:56.090 --> 00:19:58.890
And this is going to throw an error.

251
00:19:58.910 --> 00:20:01.790
Fail to fetch data, for example.

252
00:20:02.420 --> 00:20:04.760
I just add some letters.

253
00:20:04.760 --> 00:20:06.590
Extra letters here.

254
00:20:07.680 --> 00:20:09.030
For the API key.

255
00:20:09.030 --> 00:20:10.860
So this is a bad request.

256
00:20:11.100 --> 00:20:16.020
So now inside our website we should get an error.

257
00:20:18.900 --> 00:20:23.490
So now, for example, if we refresh the page.

258
00:20:31.460 --> 00:20:35.330
We get an error saying fail to fetch data.

259
00:20:35.330 --> 00:20:39.260
So this error is actually is showing inside the.

260
00:20:41.330 --> 00:20:48.770
And inside the development mode, in the production mode, when we the user doesn't see this error,

261
00:20:48.770 --> 00:20:54.120
but instead it's going to see some error effect.

262
00:20:54.140 --> 00:21:03.200
We're going to add that one using the next JZ 13 method, which is going to add an error that is x file

263
00:21:03.200 --> 00:21:06.380
inside the app dot the app directory.

264
00:21:06.740 --> 00:21:10.760
But for now, let's fix this API key.

265
00:21:11.390 --> 00:21:17.120
And now let's continue and show it inside the browser.

266
00:21:18.980 --> 00:21:21.350
So instead of just showing the.

267
00:21:22.900 --> 00:21:27.250
And h one saying home, I'm going to delete this one.

268
00:21:31.730 --> 00:21:35.420
And instead I want to just have a dif here.

269
00:21:37.970 --> 00:21:39.980
So let me create a div.

270
00:21:43.260 --> 00:21:45.240
So I create a diff.

271
00:21:47.410 --> 00:21:48.580
And here.

272
00:21:50.640 --> 00:21:54.120
I want to create another component called the results.

273
00:21:54.120 --> 00:21:58.320
So I want to show the result using that component.

274
00:21:58.320 --> 00:22:03.570
So I'm going to create a component called Result.

275
00:22:05.050 --> 00:22:08.170
Of results that gsx.

276
00:22:10.050 --> 00:22:12.300
And this is going to.

277
00:22:14.040 --> 00:22:16.770
Be a React functional component.

278
00:22:17.380 --> 00:22:20.050
And the things we want to get here.

279
00:22:20.050 --> 00:22:22.360
We want to get the result.

280
00:22:23.720 --> 00:22:24.770
Results.

281
00:22:27.500 --> 00:22:30.110
So each you want to get.

282
00:22:30.110 --> 00:22:34.760
Yeah, we want to get all the results and here we want to map to that results.

283
00:22:34.760 --> 00:22:41.600
So to get that result, map through it, get each result.

284
00:22:42.080 --> 00:22:43.700
And I'm going to.

285
00:22:46.570 --> 00:22:47.800
Uh, let's see.

286
00:22:49.880 --> 00:22:52.390
So here we're going to have a div.

287
00:23:06.220 --> 00:23:11.740
I want to create a div, but this is not suggesting me, so I'm going to create it myself.

288
00:23:17.360 --> 00:23:17.750
Hey.

289
00:23:23.050 --> 00:23:28.480
So now inside this diff, I want to show the results.

290
00:23:31.780 --> 00:23:33.910
And I think we missed one.

291
00:23:34.990 --> 00:23:38.590
Parenthesis here, which is making an error.

292
00:23:40.290 --> 00:23:40.550
Okay.

293
00:23:40.560 --> 00:23:41.580
Now it's correct.

294
00:23:41.610 --> 00:23:46.140
So now inside this tape, I'm going to show the results.

295
00:23:47.010 --> 00:23:48.810
Which is, uh.

296
00:23:51.250 --> 00:23:53.950
For example, I just want to show the result.

297
00:23:55.020 --> 00:23:56.850
That original title.

298
00:24:03.580 --> 00:24:09.610
And this this tip should have a key as well.

299
00:24:11.900 --> 00:24:13.610
So here we just add a.

300
00:24:14.790 --> 00:24:15.540
He.

301
00:24:17.660 --> 00:24:20.360
Which is going to be the result.

302
00:24:22.850 --> 00:24:25.160
Dot ID, which is a unique.

303
00:24:27.680 --> 00:24:33.800
Now we should see the results, but we first we should pass this data.

304
00:24:33.800 --> 00:24:38.120
So here I'm going to import that result component.

305
00:24:38.120 --> 00:24:39.560
So results.

306
00:24:41.340 --> 00:24:45.480
Component, which is coming from that.

307
00:24:46.390 --> 00:24:48.670
Components forward slash result.

308
00:24:50.040 --> 00:24:54.930
And here I'm going to pass the results as a props.

309
00:24:56.010 --> 00:24:58.800
So the result is going to be equal.

310
00:24:59.980 --> 00:25:00.940
To.

311
00:25:02.470 --> 00:25:03.470
Results.

312
00:25:07.690 --> 00:25:12.640
Now, if you go over to our website, we can see the result here.

313
00:25:12.640 --> 00:25:19.210
If you click on top trending, you get the top trending original titles.

314
00:25:19.870 --> 00:25:22.150
And in top rated you get.

315
00:25:22.930 --> 00:25:24.460
The top rated one.

316
00:25:28.660 --> 00:25:29.650
So let's see.

317
00:25:31.890 --> 00:25:32.940
All right, So.

318
00:25:34.570 --> 00:25:41.800
And also, if you go to the home page, we should get the top trending one instead, because when there

319
00:25:41.800 --> 00:25:46.480
is no genre, this is the default is top trending.

320
00:25:46.810 --> 00:25:47.310
All right.

321
00:25:47.320 --> 00:25:53.380
So now we got the information and we can show it inside our home page.

322
00:25:54.310 --> 00:26:00.310
In the next section, we're going to firstly, I want to create the loading.

323
00:26:01.440 --> 00:26:02.460
In fact.

324
00:26:02.580 --> 00:26:05.060
And also I want to handle the error.

325
00:26:05.070 --> 00:26:10.650
So if an error happened, I want to do I don't want a window pops up and say the error.

326
00:26:10.650 --> 00:26:17.880
I want to really show the error inside and we're going to use the features of next year's 13, which

327
00:26:17.880 --> 00:26:23.220
gives us the ability to easily handle the errors and loading effects.

328
00:26:23.220 --> 00:26:25.980
So in the next section, we're going to work on that.

329
00:26:26.070 --> 00:26:34.380
So now let's just save this onto the GitHub using contour shift G by pressing on this plus icon.

330
00:26:36.210 --> 00:26:41.910
And we just add a message which will be fetch.

331
00:26:42.590 --> 00:26:50.270
Data from tm dpi API in the.

332
00:26:51.660 --> 00:26:52.800
Home page.

333
00:26:56.660 --> 00:27:00.920
And let's push it to GitHub and we review what we have done.

334
00:27:02.060 --> 00:27:04.160
Uh, so.

335
00:27:05.950 --> 00:27:07.690
We got to get up.

336
00:27:08.950 --> 00:27:16.210
I close the GitHub now, so I'm going to search IMDB and I'll go to GitHub IMDB.

337
00:27:17.080 --> 00:27:23.710
So now we should see some new commits here.

338
00:27:24.890 --> 00:27:32.900
So we have seven commits now and in the search result in the commits, we see the new commit.

339
00:27:33.320 --> 00:27:35.270
So it didn't work.

340
00:27:35.840 --> 00:27:37.280
Let's refresh the page.

341
00:27:42.160 --> 00:27:43.760
Okay, now we see the new comet.

342
00:27:43.780 --> 00:27:47.140
Fetch data from IMDB API in the home page.

343
00:27:48.550 --> 00:27:51.400
And here we can see that.

344
00:27:52.430 --> 00:27:56.510
And inside the page that GSA, which is our home page.

345
00:27:57.270 --> 00:28:03.840
We have brought the API key, which is inside the environmental variable and the other things.

346
00:28:03.840 --> 00:28:10.650
You see that there is no dot, dot and v dot local file inside the GitHub which is going to protect

347
00:28:10.650 --> 00:28:12.000
our API key.

348
00:28:12.770 --> 00:28:13.550
And.

349
00:28:15.030 --> 00:28:21.780
We have changed this function to asynchronous, which is going to be a server side component for each

350
00:28:21.780 --> 00:28:22.650
request.

351
00:28:24.690 --> 00:28:33.240
And we just got the genre from using the search params, which is the method in next year.

352
00:28:33.240 --> 00:28:36.930
13 in the server side pages.

353
00:28:38.120 --> 00:28:43.460
So we got the genre and we fit the database and the genre.

354
00:28:44.300 --> 00:28:49.580
From this URL, which is dynamic based on the genre.

355
00:28:49.970 --> 00:29:05.450
And also we have used this next revalidate revalidate V and Re, we revalidate every 10000 seconds,

356
00:29:05.930 --> 00:29:08.720
which is going to help to save the API.

357
00:29:10.510 --> 00:29:13.210
And here we pass the error.

358
00:29:14.550 --> 00:29:18.510
And if there is an error happens, we throw an error.

359
00:29:18.510 --> 00:29:24.150
And in the next section, I'm going to show you how to make a message for the error inside our website

360
00:29:24.150 --> 00:29:27.030
using next next year 13.

361
00:29:27.480 --> 00:29:36.450
And we converted our data to JSON and we got the result and we passed the result to a new component

362
00:29:36.450 --> 00:29:38.850
which we are creating here.

363
00:29:39.180 --> 00:29:46.360
So this component results that we can use in many cases we can use later as well.

364
00:29:46.380 --> 00:29:50.070
When we are searching, we are adding the search ability.

365
00:29:50.730 --> 00:29:58.770
So this is the good way to use React as you create components and we can reuse it many times.

366
00:29:58.920 --> 00:30:01.710
So we got the result and we mapped through it.

367
00:30:01.710 --> 00:30:06.330
We got each result and we show only the original title.

368
00:30:07.750 --> 00:30:10.280
So that was it for the fishing data.

369
00:30:10.300 --> 00:30:17.920
So I highly recommend you read this documentation from the next year, the fetch data, the fundamentals

370
00:30:17.920 --> 00:30:20.770
and re validating the data.

371
00:30:20.800 --> 00:30:25.270
They have different methods and also at.

372
00:30:26.900 --> 00:30:28.940
How to fish, how to catch.

373
00:30:29.090 --> 00:30:30.140
So.

374
00:30:31.030 --> 00:30:35.530
And we are working on a different methods, for example, for the search.

375
00:30:35.850 --> 00:30:37.690
I'm not going to revalidate.

376
00:30:37.690 --> 00:30:40.890
I'm going to use the no cash method.

377
00:30:40.900 --> 00:30:44.880
We always get the fresh data from the API.

378
00:30:44.890 --> 00:30:48.910
So I'm going to show you different methods of fishing in this project.

379
00:30:49.900 --> 00:30:52.390
So that was it for the fetching data.

380
00:30:52.390 --> 00:30:55.210
In the next section, we're going to handle the error.
