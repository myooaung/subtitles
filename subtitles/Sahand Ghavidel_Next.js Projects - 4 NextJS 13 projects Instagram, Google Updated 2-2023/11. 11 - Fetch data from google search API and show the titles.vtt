WEBVTT
1
00:00:07.310 --> 00:00:07.730
All right.

2
00:00:07.730 --> 00:00:12.200
In the last section, we have completed the search for other options.

3
00:00:12.380 --> 00:00:20.960
In this section, we're going to fetch the data from the Google Search API and show the title inside

4
00:00:21.110 --> 00:00:24.920
the image search page or the web search page.

5
00:00:26.750 --> 00:00:35.150
So the things we need to do is to first go back to our website, to our Visual Studio code, and we

6
00:00:35.150 --> 00:00:35.570
go.

7
00:00:36.540 --> 00:00:37.790
Let me close this.

8
00:00:37.800 --> 00:00:39.930
I open the Explorer section.

9
00:00:40.530 --> 00:00:42.970
We go to Web.

10
00:00:43.950 --> 00:00:49.380
First, we start with the web, and then we can just modify it and create the image as well.

11
00:00:49.380 --> 00:00:54.360
So we go to Web and page the G6, and we need to complete this one.

12
00:00:55.530 --> 00:01:03.960
This page is server side, and next year, 13 provides a different way to fetch data in a server side.

13
00:01:04.380 --> 00:01:08.430
So I'm going to show you how to do it in next 12 was different.

14
00:01:08.430 --> 00:01:16.860
We need we use the gate server side props function, but here we don't need to have any extra functions

15
00:01:16.860 --> 00:01:20.340
to fetch data from an API.

16
00:01:22.290 --> 00:01:27.300
So the things we do here, here are the top.

17
00:01:29.430 --> 00:01:34.590
So first thing first, we need to change this function to asynchronous.

18
00:01:34.980 --> 00:01:43.590
So this is the because we want to use some a wait here and in React, this one doesn't work.

19
00:01:43.590 --> 00:01:49.350
You cannot change this function to asynchronous, but in next year's 13 you just change this font to

20
00:01:49.350 --> 00:01:59.250
asynchronous and this component works fine for the server side and you can easily fetch any data using

21
00:01:59.250 --> 00:02:00.030
a weight.

22
00:02:02.090 --> 00:02:07.610
So we need to create a constant and we call it response, for example.

23
00:02:10.110 --> 00:02:15.000
And this is going to await for a function.

24
00:02:16.350 --> 00:02:19.080
And we fetch data from a new URL.

25
00:02:19.290 --> 00:02:27.480
But which URL we fetch, we need to go and check inside the Google.

26
00:02:27.480 --> 00:02:33.060
So we need to first activate the Google search API.

27
00:02:33.780 --> 00:02:37.110
So we need to go to Google and we search for.

28
00:02:38.060 --> 00:02:41.330
Developers Google.

29
00:02:44.110 --> 00:02:48.940
Here as we go to a website called Developers dot Google.com.

30
00:02:49.630 --> 00:02:53.950
And you need to sign in with your proper account.

31
00:02:53.950 --> 00:02:58.000
So I'm going to sign in with my other Gmail.

32
00:02:58.660 --> 00:02:59.860
And here.

33
00:03:01.080 --> 00:03:04.890
We need to search for the API we would like to use.

34
00:03:04.920 --> 00:03:09.030
As you can see, the Google has many products.

35
00:03:09.700 --> 00:03:18.490
Android, Google Cloud, Firebase, Flutter, and etc. So we can click here to view all the developer's

36
00:03:18.490 --> 00:03:20.620
product and.

37
00:03:21.430 --> 00:03:21.820
Here.

38
00:03:21.820 --> 00:03:23.920
We can search for our product.

39
00:03:23.980 --> 00:03:25.380
We want to search.

40
00:03:25.390 --> 00:03:28.480
We create a search engine.

41
00:03:28.810 --> 00:03:35.800
They have plenty of things, but the 1ii want to use is programmer search engine.

42
00:03:37.240 --> 00:03:40.450
Once you get here, you click on explore.

43
00:03:42.160 --> 00:03:45.490
And here explains how they can use that.

44
00:03:46.000 --> 00:03:52.870
And the things you need to do is just click here on create a search engine.

45
00:03:55.900 --> 00:03:58.930
So you can just check here.

46
00:03:58.930 --> 00:04:00.100
You you need to.

47
00:04:00.580 --> 00:04:02.680
What sort of things do you need?

48
00:04:02.800 --> 00:04:09.220
But the things that is important for us is JSON API section on the left section.

49
00:04:10.060 --> 00:04:12.910
And we want to use using rest.

50
00:04:12.910 --> 00:04:15.250
So we click on using rest.

51
00:04:16.120 --> 00:04:27.520
Now, on the right side, as you can see, we can create a request and search for the parameters we

52
00:04:27.520 --> 00:04:28.190
have.

53
00:04:28.210 --> 00:04:36.520
But if you want to have a search query, we can use something, a get request from, for example, this

54
00:04:36.520 --> 00:04:45.850
URL which is Google API dot com custom search forward slash v one and then you need to have your API

55
00:04:45.880 --> 00:04:46.990
key here.

56
00:04:47.440 --> 00:04:49.060
Then you have your.

57
00:04:49.900 --> 00:04:51.610
Uh, context key.

58
00:04:51.700 --> 00:04:53.440
You need to add here.

59
00:04:53.680 --> 00:04:59.950
And finally, you need to have some query.

60
00:05:00.340 --> 00:05:05.230
So a queue for query, for example, this one is searching for lectures.

61
00:05:06.520 --> 00:05:15.640
So we need to I want to copy this URL and put it inside our fetch.

62
00:05:15.850 --> 00:05:22.240
But I want to use it back tick because I want to make the query and API key.

63
00:05:22.860 --> 00:05:24.510
So I'm going to paste this on.

64
00:05:24.780 --> 00:05:39.290
And also, you can see we are getting a very nice suggestion from a tap and sorry, the GitHub copilot.

65
00:05:39.300 --> 00:05:41.430
I'm going to paste this one anyway.

66
00:05:42.180 --> 00:05:45.720
So we need to have our API key and context key.

67
00:05:45.720 --> 00:05:49.620
So we want to hide it from the people.

68
00:05:51.470 --> 00:05:55.050
Inside the GitHub that will watch our website.

69
00:05:55.070 --> 00:06:03.740
So we're going to create a variable here using dollar sign and a set of curly braces and just create

70
00:06:03.740 --> 00:06:04.910
a process.

71
00:06:05.800 --> 00:06:07.270
That envy.

72
00:06:07.990 --> 00:06:10.180
I'm just going to call this one.

73
00:06:11.560 --> 00:06:21.910
For example, API underline key or you can call it anything like Google API key or whatever you want

74
00:06:21.910 --> 00:06:23.250
to call it.

75
00:06:23.260 --> 00:06:27.880
And then we go to dot, EMV, dot local.

76
00:06:29.120 --> 00:06:35.300
We need to have the same name, which is API key.

77
00:06:35.630 --> 00:06:39.110
This is not public because this is in the server side.

78
00:06:39.110 --> 00:06:42.140
So we can we don't need to use next public.

79
00:06:42.140 --> 00:06:46.220
So we just say API key equal.

80
00:06:46.760 --> 00:06:51.080
And then we need to get our API key from Google.

81
00:06:51.080 --> 00:06:53.210
So we need to go a little bit up.

82
00:06:54.330 --> 00:06:54.630
Here.

83
00:06:54.630 --> 00:06:56.250
They said API key.

84
00:06:56.940 --> 00:07:01.410
Use the key query parameters to identify your application.

85
00:07:01.410 --> 00:07:10.140
So we need to click on identify your application, and here we can click on Get a key.

86
00:07:11.500 --> 00:07:15.820
This is going to ask us which projects you want to get the key.

87
00:07:16.630 --> 00:07:21.940
You can choose your previous projects or you can just create a new projects.

88
00:07:22.270 --> 00:07:25.600
So I can just create a new project here.

89
00:07:25.600 --> 00:07:27.170
I'm going to call this one.

90
00:07:27.190 --> 00:07:29.470
You cannot use the word Google.

91
00:07:29.500 --> 00:07:33.190
This is this is against the Google's policy.

92
00:07:33.190 --> 00:07:34.870
You're going to get an error later.

93
00:07:34.870 --> 00:07:44.470
So never use the word Google so you can use any other words like go, for example, I just say go next.

94
00:07:45.550 --> 00:07:46.380
13.

95
00:07:46.390 --> 00:07:52.060
So be careful that some of my students here use Google and send me their error.

96
00:07:52.330 --> 00:07:54.970
So go next year 13.

97
00:07:56.960 --> 00:08:05.210
And you just press next and wait for them to create and enable your custom search API.

98
00:08:05.210 --> 00:08:10.400
And they're going to give you the your API key in a short time.

99
00:08:12.500 --> 00:08:14.630
So now we are all set.

100
00:08:16.070 --> 00:08:18.740
We can just click here to show the key.

101
00:08:19.520 --> 00:08:21.680
So I'm going to copy this one.

102
00:08:22.990 --> 00:08:28.460
And we go back here and paste it inside our environmental variable.

103
00:08:28.480 --> 00:08:33.090
The next things we need to do is to create the context key.

104
00:08:33.100 --> 00:08:36.750
So I'm going to create another variable here.

105
00:08:36.760 --> 00:08:39.250
This is coming until this query.

106
00:08:39.250 --> 00:08:41.770
You need to change it and to delete.

107
00:08:42.370 --> 00:08:45.610
And then you can just write down here a process.

108
00:08:47.870 --> 00:08:50.180
Dot, e and v.

109
00:08:52.220 --> 00:08:53.180
Dot.

110
00:08:53.950 --> 00:08:56.680
You just call this one context.

111
00:08:57.430 --> 00:09:02.230
This should be uppercase and context underlined key.

112
00:09:04.000 --> 00:09:08.140
So I'm going to copy this inside the environmental value bull.

113
00:09:08.140 --> 00:09:11.650
I'm going to equal this one and we need to get that one too.

114
00:09:11.650 --> 00:09:14.320
So I'm going to press down.

115
00:09:14.560 --> 00:09:22.140
We come back one more time in the previous page where we got the click on the API key.

116
00:09:22.150 --> 00:09:32.260
Now we need to go to programmer programmable search engine ID, which is called C X or Context API.

117
00:09:34.210 --> 00:09:37.510
So we need to click on the control panel.

118
00:09:38.720 --> 00:09:40.280
We need to.

119
00:09:41.050 --> 00:09:44.080
Create our desired search engine.

120
00:09:44.080 --> 00:09:46.990
So as you can see, before I made another one.

121
00:09:47.290 --> 00:09:52.030
Now you can just click on ADD, Create a new one.

122
00:09:52.060 --> 00:09:54.170
I'm going to call this one, for example.

123
00:09:54.190 --> 00:09:56.910
Go dash next.

124
00:09:56.920 --> 00:09:58.840
JZ 13.

125
00:10:02.140 --> 00:10:03.470
Why do you want to search?

126
00:10:03.490 --> 00:10:06.760
For example, search a specific site or page.

127
00:10:06.790 --> 00:10:09.370
Or search the entire web.

128
00:10:12.880 --> 00:10:14.290
You can just, uh.

129
00:10:16.090 --> 00:10:18.310
I think you can choose the entire web.

130
00:10:18.610 --> 00:10:21.460
I want to search image as well.

131
00:10:22.360 --> 00:10:24.040
Safe search.

132
00:10:24.070 --> 00:10:24.750
It's okay.

133
00:10:24.760 --> 00:10:25.750
I don't need it.

134
00:10:28.080 --> 00:10:33.630
So I'm going to click here and I'm not a robot and just create it.

135
00:10:36.160 --> 00:10:40.190
So now we can just get our contact ski.

136
00:10:40.210 --> 00:10:44.500
As you can see here, you can just copy this Contacts key.

137
00:10:48.230 --> 00:10:52.070
And then this is the I want to show you.

138
00:10:52.530 --> 00:10:56.540
You just need these numbers after six.

139
00:10:57.520 --> 00:11:03.070
So when you copy this one, you come back to Visual Studio Code and paste it here.

140
00:11:05.140 --> 00:11:12.220
So now as we have changed the environmental variable, I'm going to stop the server.

141
00:11:13.090 --> 00:11:20.470
I'm going to use NPM run dev to start the server again.

142
00:11:23.930 --> 00:11:30.110
So let's close the environmental variable file and now we go back to here.

143
00:11:30.710 --> 00:11:32.210
We already got it.

144
00:11:32.390 --> 00:11:33.830
This search query.

145
00:11:33.830 --> 00:11:34.490
Just leave it.

146
00:11:34.640 --> 00:11:36.260
For now, lectures.

147
00:11:36.260 --> 00:11:38.540
I want to just show you the results first.

148
00:11:38.780 --> 00:11:42.530
First thing first, we need to convert this one to.

149
00:11:43.470 --> 00:11:45.000
JSON file.

150
00:11:45.970 --> 00:11:47.980
So we got the response here.

151
00:11:48.460 --> 00:11:54.580
We can create another file, another constant called, for example, data, which is going to wait and

152
00:11:54.580 --> 00:11:56.710
convert this one to a JSON.

153
00:11:58.150 --> 00:12:00.640
Then we can just get the data.

154
00:12:03.370 --> 00:12:05.260
Or as we call it, the results.

155
00:12:05.260 --> 00:12:10.210
And the result is going to be equal to data that items.

156
00:12:11.290 --> 00:12:12.520
That is a result.

157
00:12:12.520 --> 00:12:18.550
And also this is the, for example, ten results.

158
00:12:20.470 --> 00:12:23.350
But you can get some more data from here.

159
00:12:23.350 --> 00:12:24.010
That data.

160
00:12:24.010 --> 00:12:28.900
So let me console.log data I'm going to show you first.

161
00:12:30.970 --> 00:12:32.650
So let's test this one.

162
00:12:32.650 --> 00:12:34.330
We go to our website.

163
00:12:36.250 --> 00:12:40.510
We go to all because we use the web already.

164
00:12:40.510 --> 00:12:41.710
We just use the web.

165
00:12:41.710 --> 00:12:45.210
Now, let's see.

166
00:12:45.220 --> 00:12:45.760
Okay.

167
00:12:49.160 --> 00:12:52.910
We got the we should get the result in the server side.

168
00:12:53.510 --> 00:12:54.020
Okay.

169
00:12:57.280 --> 00:12:58.480
Because this is a server.

170
00:12:58.480 --> 00:13:02.320
So you need to see your console log inside the terminal.

171
00:13:02.350 --> 00:13:04.510
As you can see, we got the result.

172
00:13:05.650 --> 00:13:06.310
And.

173
00:13:07.580 --> 00:13:13.100
This is the result for the World Lectures, as you can see.

174
00:13:13.870 --> 00:13:15.970
This is the information of the results.

175
00:13:15.970 --> 00:13:17.560
For example, search time.

176
00:13:17.560 --> 00:13:21.580
We got the formatted search, total number of search.

177
00:13:21.880 --> 00:13:30.700
And in the items in the items, we get all the results, which includes ten results.

178
00:13:32.200 --> 00:13:35.770
For example, the title, the first one is a lecture Wikipedia.

179
00:13:35.770 --> 00:13:44.290
This is the URL to link, display link and many more things that we can see here.

180
00:13:44.590 --> 00:13:46.870
The things I want to show you here.

181
00:13:46.870 --> 00:13:50.920
We want to show just the title inside the.

182
00:13:51.830 --> 00:13:53.060
A browser.

183
00:13:54.810 --> 00:13:57.060
So we got this result.

184
00:13:57.090 --> 00:14:05.310
Now, inside this return, let me just create an empty fragment.

185
00:14:07.040 --> 00:14:07.580
I'm done.

186
00:14:07.610 --> 00:14:12.200
I'm going to create, for example, I just say if the results.

187
00:14:13.560 --> 00:14:14.700
Exist.

188
00:14:15.270 --> 00:14:28.020
Then I want to map through the results, which is includes the items, get each result, and then I

189
00:14:28.020 --> 00:14:30.000
want to just show it.

190
00:14:31.700 --> 00:14:33.950
Inside an Etch One tag, for example.

191
00:14:35.790 --> 00:14:41.730
I just create an H one tag and then the things I want to show is I ten.

192
00:14:43.340 --> 00:14:43.850
Oh, sorry.

193
00:14:43.850 --> 00:14:44.840
The result.

194
00:14:48.540 --> 00:14:49.880
Dot title.

195
00:14:49.890 --> 00:14:53.220
I want to just see the title of the search.

196
00:14:54.480 --> 00:14:57.210
Let's be sure that we don't make a mistake.

197
00:14:57.420 --> 00:14:58.980
We need to close this.

198
00:15:01.360 --> 00:15:02.110
Here.

199
00:15:02.320 --> 00:15:03.430
I think it's fine.

200
00:15:03.430 --> 00:15:05.740
Now, let's come back and check.

201
00:15:06.770 --> 00:15:14.090
For example, if we now refresh the page, we should see the title here.

202
00:15:14.600 --> 00:15:19.310
Okay, Now we got the title for the word lecture.

203
00:15:20.210 --> 00:15:20.990
All right.

204
00:15:22.580 --> 00:15:25.160
So we think but we don't get the result.

205
00:15:25.160 --> 00:15:26.060
For example, for this.

206
00:15:26.060 --> 00:15:26.450
Hello.

207
00:15:26.450 --> 00:15:32.360
So we need to have a mechanism to get the search term and then only show the search term.

208
00:15:32.450 --> 00:15:35.150
It's very simple inside the.

209
00:15:36.460 --> 00:15:36.910
Next.

210
00:15:36.910 --> 00:15:37.980
She is 13.

211
00:15:37.990 --> 00:15:49.480
In server side, we can just get the search programs directly here so we need to get this search params

212
00:15:50.800 --> 00:15:57.720
here and this search params is going to include all the queries.

213
00:15:57.730 --> 00:16:07.570
For example, here we can change this lecture to a dynamic one and here we just say search params.

214
00:16:07.570 --> 00:16:11.170
For example, if you want to get this a search term.

215
00:16:11.170 --> 00:16:14.380
So we just say search term.

216
00:16:14.470 --> 00:16:18.700
So we get the search term and we search for that one instead.

217
00:16:19.330 --> 00:16:26.200
So I'm going to show you now, for example, we have hello, we get the hello and if you want to give,

218
00:16:26.200 --> 00:16:34.570
for example, I search the word nice, we get the result for the nice, as you can see here.

219
00:16:34.810 --> 00:16:37.480
So it's very simple and straightforward.

220
00:16:38.400 --> 00:16:40.980
So I think that's it for this section.

221
00:16:40.980 --> 00:16:41.820
That's enough.

222
00:16:42.300 --> 00:16:47.610
In the next section, we're going to customize this.

223
00:16:48.850 --> 00:16:51.910
And we're going to get the result.

224
00:16:53.050 --> 00:16:54.190
In a way.

225
00:16:54.370 --> 00:16:56.860
A first thing first, I want to handle the errors.

226
00:16:56.860 --> 00:16:59.700
So in this search, it's very important and

227
00:17:02.410 --> 00:17:04.030
in the next section.

228
00:17:06.400 --> 00:17:13.310
So before anything else, we want to handle the errors using the new feature of next year's 30.

229
00:17:13.330 --> 00:17:17.920
But for now, we just add this one to GitHub using contour shift G.

230
00:17:18.340 --> 00:17:23.080
We're going to press class to add this one, and then we just create.

231
00:17:24.000 --> 00:17:27.690
A message for that one, which is going to be fetch.

232
00:17:30.140 --> 00:17:33.020
Data from.

233
00:17:33.960 --> 00:17:37.020
Google search.

234
00:17:39.940 --> 00:17:40.720
API.

235
00:17:48.290 --> 00:17:50.060
And show the titles.

236
00:17:55.990 --> 00:17:56.560
Okay.

237
00:17:56.590 --> 00:18:01.780
So I'm going to click on here and commit and push.

238
00:18:03.430 --> 00:18:09.940
So let's go back to our website, to our GitHub repository, and here we click on Google Clone next

239
00:18:09.940 --> 00:18:11.080
year 13.

240
00:18:11.290 --> 00:18:15.490
And here we can see that we have now 12 commits.

241
00:18:16.460 --> 00:18:24.320
So here we can see the last comment is first, fetch data from Google API, search API and show.

242
00:18:25.400 --> 00:18:26.960
The titles.

243
00:18:30.530 --> 00:18:31.710
I have to make a sure.

244
00:18:31.710 --> 00:18:32.460
That's fine.

245
00:18:33.600 --> 00:18:38.550
So now we have modified this page.

246
00:18:38.550 --> 00:18:40.110
Page that gsx.

247
00:18:41.030 --> 00:18:44.720
Let me review how this one works.

248
00:18:44.930 --> 00:18:53.090
As you can see inside the next yes, 13, we create a asynchronous function component, which is going

249
00:18:53.090 --> 00:18:56.930
to fetch data easily inside the server side.

250
00:18:57.640 --> 00:19:03.970
Based on the search programs that we have, for example, the search term, any search term we have,

251
00:19:03.970 --> 00:19:05.890
we're going to fetch the data.

252
00:19:07.520 --> 00:19:08.580
And, uh.

253
00:19:11.460 --> 00:19:12.150
This.

254
00:19:12.150 --> 00:19:13.980
We need to have the environment.

255
00:19:14.250 --> 00:19:16.900
Sorry, API key and the context key.

256
00:19:16.920 --> 00:19:18.860
I have shown you how to get it.

257
00:19:18.870 --> 00:19:29.910
You need to go to the developers that google.com and create a new programmer search API and you get

258
00:19:29.910 --> 00:19:33.240
your API key and context key by creating a new one.

259
00:19:33.870 --> 00:19:40.380
And once we've done that, we're going to convert this one to JSON file and we're going to map through

260
00:19:40.380 --> 00:19:43.350
it and show the title.

261
00:19:44.790 --> 00:19:46.860
The other things I didn't mention.

262
00:19:47.750 --> 00:19:58.430
There are plenty of fetching the methods for next year's 13 if you search for better.

263
00:19:59.400 --> 00:20:00.360
Dot.

264
00:20:01.970 --> 00:20:06.680
Next JSON or G I want to show you.

265
00:20:06.680 --> 00:20:08.840
There are plenty of ways to.

266
00:20:11.050 --> 00:20:12.160
Fetch data.

267
00:20:13.070 --> 00:20:18.320
The one we use that we we're going to cache the data.

268
00:20:18.320 --> 00:20:27.620
So when the when you go here and you go to data fishing for the fishing and there are plenty of ways

269
00:20:27.800 --> 00:20:31.820
we have used the simple one, we just switch the data.

270
00:20:32.420 --> 00:20:36.800
But you can use the different ways.

271
00:20:36.800 --> 00:20:44.990
For example, you can cash, cash the data or you can revalidate the data every 60 seconds, for example.

272
00:20:46.040 --> 00:20:47.210
And the.

273
00:20:48.550 --> 00:20:55.270
For example, you you get the data, but in the search engine, you want to always get the fresh data.

274
00:20:55.270 --> 00:20:58.080
So we're not going to use the revalidate.

275
00:20:58.090 --> 00:21:02.050
We always have to get the fresh data.

276
00:21:02.410 --> 00:21:03.550
So.

277
00:21:05.460 --> 00:21:14.490
We can just use force cash or only cash, or we can just say no cash to always get the new data.

278
00:21:14.490 --> 00:21:14.970
But.

279
00:21:16.040 --> 00:21:19.610
The things we why we always get the new data.

280
00:21:20.000 --> 00:21:21.410
If you look at the.

281
00:21:22.240 --> 00:21:23.830
The data we got.

282
00:21:26.940 --> 00:21:30.500
I want to show you why we always get the new data.

283
00:21:31.640 --> 00:21:39.830
We always get the this search information differently because the search time, the total result is

284
00:21:39.830 --> 00:21:41.930
always different when you search.

285
00:21:41.930 --> 00:21:46.040
So we cannot actually cache this result.

286
00:21:46.040 --> 00:21:48.680
So each time it's different results and.

287
00:21:49.430 --> 00:21:51.230
And Nick just cannot cash it.

288
00:21:51.230 --> 00:21:55.460
So that's why I didn't use any revalidation or anything here.

289
00:21:55.460 --> 00:21:57.950
So we just simply could just fetch it.

290
00:21:57.950 --> 00:22:05.510
But if you fetching from an API, that doesn't change too much, for example, if you're fetching from

291
00:22:05.510 --> 00:22:07.100
a movie API.

292
00:22:08.120 --> 00:22:12.980
You can simply revalidate that one, for example, every few hours.

293
00:22:12.980 --> 00:22:17.660
So you're going to save a lot of API requests by doing that.

294
00:22:17.660 --> 00:22:18.110
So.

295
00:22:18.710 --> 00:22:27.290
So if you want more information I have just created in other projects for next year for the IMDB clone.

296
00:22:27.290 --> 00:22:32.120
So I have used the revalidate there, so you can use that one.

297
00:22:32.120 --> 00:22:37.010
But for the search engine we just normally fetch data.

298
00:22:38.930 --> 00:22:44.320
Okay, so that was it for fetching data and show it inside the browser.

299
00:22:44.330 --> 00:22:45.440
Just a title.

300
00:22:45.440 --> 00:22:52.460
In the next section we're going to handle the errors, which is very important in any applications.

301
00:22:52.460 --> 00:22:57.560
And next year 13 provides us a very simple method to do that.

302
00:22:57.560 --> 00:22:59.210
So see you in the next section.
