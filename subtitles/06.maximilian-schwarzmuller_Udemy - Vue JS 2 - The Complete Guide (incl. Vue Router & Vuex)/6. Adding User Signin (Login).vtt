WEBVTT

00:02.480 --> 00:05.660
In the last lecture we learned how to sign users up,

00:05.870 --> 00:13.190
let's now sign users in. For that, I of course need to go to the sign in page and there, I also want to send

00:13.190 --> 00:16.400
a request whenever we submit this form,

00:16.640 --> 00:23.210
so I will import axios from and now from my own axios instance so

00:23.340 --> 00:24.590
let's move up a little bit

00:24.590 --> 00:32.410
and axios imported from axios-auth and then here, I also need to send a post request to a different end

00:32.440 --> 00:33.540
point though.

00:33.750 --> 00:38.510
Now for that, let's find out to which URL we need to send this information,

00:38.570 --> 00:43.490
I'll go back to the firebase documentation and we're interested in signing a user in with email and

00:43.490 --> 00:44.500
password.

00:44.600 --> 00:48.340
Here we get the URL and it's actually the same URL as before

00:48.440 --> 00:55.790
but the path at the end differs, we still sign the API key but we use verify password instead of the other

00:56.020 --> 00:57.590
end point we used before.

00:58.040 --> 01:02.480
We still need to pass e-mail, password and return secure token here as a payload,

01:02.480 --> 01:04.170
so that didn't change,

01:04.430 --> 01:10.820
so if we go back to our application, what I do is I will copy the post request from the signup.vue

01:10.820 --> 01:16.960
file with then and catch block and add it to the signin on submit method

01:17.450 --> 01:24.290
but now grab the verify password part and exchange signup new user with that.

01:24.290 --> 01:25.910
And now that actually should be all,

01:25.910 --> 01:32.360
now we're sending a post request which is the method we should use as suggested or as written in the

01:32.360 --> 01:33.740
documentation,

01:33.740 --> 01:39.540
we're sending a post request to this verify password endpoint which should allow us to login.

01:39.860 --> 01:42.340
Let's save this and see it in action,

01:42.350 --> 01:44.700
I'll go back to our application here,

01:44.750 --> 01:46.500
click on sign in,

01:46.520 --> 01:51.450
now we need to enter of course the same e-mail and password we used for signing up

01:51.520 --> 01:56.400
and if I hit submit, we actually get back a successful response,

01:56.400 --> 02:03.030
so this worked. And in the data, we again have this ID token field with the token, the user ID, the

02:03.030 --> 02:07.700
e-mail of the user, when the token is going to expire and so on.

02:07.980 --> 02:12.930
So we got all these things, we now can sign up and sign in,

02:12.960 --> 02:21.780
now it's our task to finally store that token somewhere in our application so that we can really, well

02:21.840 --> 02:25.400
work with it and also use it for authenticating

02:25.530 --> 02:32.130
because even though we can sign in, of course the request on the dashboard page still fails because we're

02:32.130 --> 02:34.820
not passing this token to the backend there.

02:35.040 --> 02:38.560
So let's think about token storage in the next lectures.
