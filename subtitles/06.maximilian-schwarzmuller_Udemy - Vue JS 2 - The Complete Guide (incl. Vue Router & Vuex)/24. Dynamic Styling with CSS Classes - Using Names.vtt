WEBVTT

00:01.940 --> 00:08.660
Sometimes you don't want to decide if a certain class should be attached or not but you want to calculate

00:08.690 --> 00:12.390
or dynamically derive which class should be attached or not.

00:12.680 --> 00:22.130
Let's say we add a horizontal line and then a user input down there, I'll bind it to my color property

00:22.190 --> 00:24.960
which I'll set up here, initially

00:25.110 --> 00:32.980
I'll set color to green referring to this green css class as I will use it on my last remaining unstyled

00:32.990 --> 00:35.780
div here where I want to set up class.

00:35.900 --> 00:37.380
And now what?

00:37.580 --> 00:42.560
Now here, I simply will set this equal to color,

00:42.650 --> 00:45.890
well why did I call this property, should be called color,

00:46.120 --> 00:46.790
yep.

00:47.030 --> 00:55.070
So now, this is connected to the color property here and the color property is set through this input field.

00:55.070 --> 01:00.460
If I now save this, we see the green class here and we see green in the input field.

01:00.650 --> 01:02.260
With that said I can go down there,

01:02.270 --> 01:09.110
delete it, you see the green class disappearing and I can change it to blue or to red, whatever css

01:09.110 --> 01:09.830
class

01:09.830 --> 01:11.810
I have set up.

01:12.050 --> 01:13.680
Now what's happening here?

01:13.880 --> 01:19.720
I'm not determining if the green class should be attached or not with true or false,

01:19.760 --> 01:26.060
instead I'm directly outputting a class name here and this class name happens to be stored in this color

01:26.060 --> 01:28.730
property which is settable through the input,

01:28.730 --> 01:34.940
it could be set through anything, doesn't have to be set through input, the key thing here is that I'm storing

01:35.030 --> 01:37.550
the value and not if or not

01:37.550 --> 01:41.570
but instead what should be attached, the class name.

01:41.570 --> 01:47.140
You can also attach multiple classes by using the array syntax, now

01:47.180 --> 01:53.650
this syntax here will still work as you can see but now I could also add this condition here,

01:53.720 --> 01:55.690
this object as a second argument,

01:55.820 --> 01:57.490
now I get a mixture.

01:57.740 --> 02:03.730
I now always have my green class here since I wrote green here,

02:03.740 --> 02:04.920
now it's blue

02:05.150 --> 02:11.530
and now it's red but if I switch this back to blue and now I click on the first div and remove blue

02:11.540 --> 02:17.120
here, you now see it's red because now it also has this red class attached to it

02:17.120 --> 02:24.080
because I'm now setting up an array of classes which I want vuejs to analyze and then merge it

02:24.140 --> 02:31.210
all into one list of css classes based on whatever these items in the array resolves to

02:31.310 --> 02:40.010
and what do they resolve to? They resolve to this color property which is a css class and to an object,

02:40.010 --> 02:42.270
if it's an object, then vuejs knows

02:42.290 --> 02:42.800
okay,

02:42.830 --> 02:48.130
it's a key value pair where the key is css class and the value is the condition

02:48.140 --> 02:54.680
if this class should be attached or not, here attached red is the property deciding whether to attach

02:54.680 --> 02:55.760
class or not.

02:56.000 --> 03:04.250
So we get both syntaxes using the css class directly or using an object where then the key is the css

03:04.250 --> 03:06.920
class and the value is the condition.

03:06.980 --> 03:11.360
This is important to keep in mind because it gives you a lot of flexibility,

03:11.480 --> 03:13.690
you see how much flexibility we got here.

03:13.700 --> 03:18.580
We got so many different ways of calculating our classes and attaching them,

03:18.650 --> 03:24.620
that really is amazing and should give you all the tools you need in your application to get the desired

03:24.620 --> 03:25.380
result.
