WEBVTT

00:01.940 --> 00:10.260
Now with all our component reorganized here and having them with different selectors and in a nice folder structure,

00:10.360 --> 00:12.120
there's one other thing I want to mention,

00:12.170 --> 00:14.300
we're not using the style right now,

00:14.300 --> 00:16.610
we're not applying any styles.

00:16.730 --> 00:19.700
Now let's change this, let's add some styling,

00:19.700 --> 00:22.660
let's say the server details here,

00:22.670 --> 00:24.230
there we do have a div

00:24.260 --> 00:33.170
and I want to give this div of let's say a border of 1px solid and red and then in my servers

00:33.310 --> 00:34.090
here,

00:34.280 --> 00:41.050
I want to set up a div style for this wrapping div where I set up a border of 1px solid and

00:41.060 --> 00:43.410
blue, that might not be super beautiful,

00:43.430 --> 00:44.950
but let's see how this looks,

00:45.080 --> 00:47.310
oh everything is red now.

00:47.540 --> 00:52.190
Well the issue is I only set the red style here in the server details,

00:52.190 --> 00:54.190
why is everything border red

00:54.190 --> 00:57.260
now, why was every div selected?

00:57.500 --> 01:03.020
The reason for this behavior is that we're not scoping the styles, which means the styles are not contained

01:03.020 --> 01:03.970
in this component.

01:03.980 --> 01:11.180
By default, any style we set up in any component will be applied globally, like in a global stylesheet,

01:11.180 --> 01:13.020
now that might not be the behavior you want

01:13.010 --> 01:19.340
and you could easily overwrite it by adding scoped to the style tag here in your component, in the single

01:19.340 --> 01:22.750
file template and that will work in any single file template.

01:22.790 --> 01:25.940
So I'll do the same here in my servers and we head over,

01:25.970 --> 01:29.120
you see now we get the borders only around 

01:29.140 --> 01:33.060
these divs where we want to have them, reload the page if you're not seeing this.

01:33.290 --> 01:40.400
So with this, we're now containing the styles we apply in a single file here, in a vue file to the content

01:40.490 --> 01:45.080
of this vue file, to this html template there. Behind the scenes,

01:45.080 --> 01:48.520
this emulates a behavior known as the shadow dom.

01:48.710 --> 01:53.720
the shadow dom basically means that in upcoming browsers

01:53.720 --> 01:56.380
basically, the dom in there,

01:56.400 --> 02:00.110
each element has a dom behind this element,

02:00.110 --> 02:07.430
so you not only have one global dom but many sub-doms so that your h1 tag, your normal html

02:07.430 --> 02:13.070
tag could have a different style in one place than in another place because there are two different

02:13.070 --> 02:15.880
doms behind each of this h1 tags.

02:16.130 --> 02:19.630
Well that's something which we will probably see in the future,

02:19.910 --> 02:25.660
vuejs emulates it today and we can see how it emulates it if we inspect this.

02:25.820 --> 02:32.570
So if we inspect this div with the blue border, we see we have this strange attribute being added to

02:32.570 --> 02:32.890
it,

02:32.900 --> 02:38.780
data-v- and then some ID. And the same is true for the div with the red border,

02:38.780 --> 02:41.920
here we also got such an attribute with a different ID though.

02:42.050 --> 02:47.840
You will see the ID stays the same within each component but changes across components, like here between

02:47.840 --> 02:51.010
the two different components red and blue bordered,

02:51.110 --> 02:52.960
now here we clearly see it.

02:53.180 --> 02:58.700
This attribute which was added by vuejs, we didn't place it there, is important,

02:58.730 --> 03:05.090
it's of course not a default html attribute but it's also not one which is in conflict with any default

03:05.120 --> 03:05.990
attribute,

03:05.990 --> 03:12.110
indeed it's using the default html data attribute which allows us to attach custom data to elements,

03:12.110 --> 03:15.910
so it's in line with a good html style,

03:16.070 --> 03:18.610
but where do we use this attribute for?

03:19.010 --> 03:28.610
Well the styles we append here in our single files are in the end pulled up into the head of our document,

03:28.620 --> 03:31.840
this is why here we see all these styles

03:31.850 --> 03:36.800
we set up in the single files attached in this head section of the document,

03:36.800 --> 03:39.660
this is something vuejs does for us.

03:39.680 --> 03:48.350
Now here, you see an empty style but once we click on the style of the blue and the red border, these

03:48.350 --> 03:53.060
two here, you see the red border and the blue border,

03:53.060 --> 03:58.550
this is the reason why before we only saw the red border because this style comes second so it overrides the

03:58.550 --> 04:04.550
other style and this makes sense because we load the server details after the servers because this

04:04.550 --> 04:07.760
is how we ordered them there, servers are loaded first.

04:08.270 --> 04:09.940
So this is how they are ordered

04:10.010 --> 04:13.620
and now you see vuejs added something to our selector.

04:13.620 --> 04:19.940
It's now not only selecting by div, instead it's selecting by div and the attribute and this of course

04:19.940 --> 04:24.150
is the attribute also added in the button, so to our divs.

04:24.340 --> 04:30.500
This is how it emulates this behavior that our styles are only applied to the elements in a certain

04:30.500 --> 04:31.370
component,

04:31.490 --> 04:34.040
it adds our styles in the head section,

04:34.090 --> 04:39.640
it does this always for all our files which is the reason why we have these empty style tags here

04:39.650 --> 04:42.290
for the other components, the other files we're using.

04:42.620 --> 04:50.650
And then for the files where we have scoped added to our style, there it adds this ID to both the selector

04:50.650 --> 04:55.660
and the element in the dom so that now the style is indeed scoped.

04:55.700 --> 04:58.420
That's something to keep in mind and something to use

04:58.430 --> 05:02.470
if you want to make sure your styling only gets applied one component.
