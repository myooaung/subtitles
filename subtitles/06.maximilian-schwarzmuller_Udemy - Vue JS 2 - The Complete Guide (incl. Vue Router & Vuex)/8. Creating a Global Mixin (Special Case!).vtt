WEBVTT

00:01.960 --> 00:07.850
Thus far, we saw that we register mixins in the components where we want to use them, with the mixins array

00:07.910 --> 00:08.370
here,

00:08.440 --> 00:10.560
of course you could add multiple mixins,

00:10.660 --> 00:12.660
that is also important to know.

00:12.660 --> 00:17.890
Now let's say you got one mixin you want to use on every single instance in your app

00:17.920 --> 00:24.370
and this is really important to understand, a global mixin is added to every instance and thus every component

00:24.370 --> 00:26.800
too in your application,

00:26.800 --> 00:29.100
hence you rarely want to use that,

00:29.110 --> 00:32.950
most of the time, that is what the official vuejs docs recommend.

00:33.070 --> 00:37.060
You want to use this if you create third party plugins for vuejs

00:37.090 --> 00:39.370
and not in your production application.

00:39.370 --> 00:41.710
Nonetheless to show you how it would work,

00:41.980 --> 00:47.120
you can register a global mixin by typing vue mixin,

00:47.260 --> 00:52.390
now that will allow you to configure some code which is mixed into every single instance.

00:52.450 --> 00:59.120
Therefore we here pass the object which is our mixin and let's say I again add something to the created

00:59.120 --> 00:59.710
hook,

00:59.710 --> 01:07.330
so now again I manage or I adjust my created hook here in a mixin, now in the global mixin. Here I

01:07.330 --> 01:15.180
want to say global mixin created hook so that we can see where this is coming from.

01:15.340 --> 01:20.560
If I now save this, I don't need to add it to any array because again, it is already added to all instances,

01:20.950 --> 01:28.330
if I clear this and reload, we see that the global mixin gets executed here, then we have created,

01:28.410 --> 01:32.610
then the global mixin again and then created in inside list created hook.

01:32.680 --> 01:39.550
Now why do we have global mixin three times when we only have the app.vue file and the list.vue

01:39.550 --> 01:40.460
file here?

01:42.220 --> 01:44.410
Well because we also have the main.js file and

01:44.410 --> 01:46.080
here we have a new vue instance too,

01:46.120 --> 01:54.200
so we get the created hook executed in the new vue instance, that is this first call, then let's have a look.

01:54.250 --> 01:57.330
We get the render function where we render the app file,

01:57.340 --> 02:00.250
so this is the second time we call the created hook,

02:00.370 --> 02:07.410
then we call created because the app.vue file also has the fruit mixin which adds the created

02:07.540 --> 02:13.420
hook here and then we reach the third time that we call the global mixin created hook because

02:13.420 --> 02:17.400
now we also add the list component,

02:17.410 --> 02:23.350
this is the last thing we add in our application and there, we have the fruit mixin added, which is called

02:23.380 --> 02:30.640
first then the local created method here which says inside list created hook, this is last and then we're

02:30.640 --> 02:31.350
done.

02:31.360 --> 02:39.570
So this is this lifecycle, global mixin called first, then mixins added with the mixins array called next

02:39.730 --> 02:47.350
and then code directly written into the instance is handled lastly so that it always has the

02:47.350 --> 02:49.810
last word as described before.

02:50.110 --> 02:54.970
This is how you can add such a global mixin, again used this with caution,

02:55.000 --> 02:56.870
it really affects everything.

02:56.980 --> 03:01.960
This is why you typically use it for developing plugins where you don't really have a complete app

03:01.960 --> 03:07.210
with many many components and instances but a contained piece of business logic which you then ship

03:07.210 --> 03:11.720
to other apps where your global mixin is contained to your business logic.

03:11.890 --> 03:15.330
But to be aware of how to use it, this is how you would use it,

03:15.340 --> 03:21.260
typically though, you use a local mixin with the mixins array and then the import where the mixin is

03:21.280 --> 03:23.460
outsourced in a separate file for example.
