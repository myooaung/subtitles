WEBVTT

00:01.890 --> 00:06.410
Now let's continue with our form, how shall we deal with a text area like this one,

00:06.420 --> 00:07.670
how does this work?

00:07.920 --> 00:11.700
Well let's go back to the form and here is my text area,

00:11.910 --> 00:15.460
unsurprisingly, it also works with v-model,

00:15.600 --> 00:19.480
so like this. Now I already have a node up there though,

00:19.560 --> 00:25.650
interpolation between the text area opening closing tag like interpolating a test variable does

00:25.650 --> 00:26.870
not work,

00:26.880 --> 00:31.440
instead you should use v-model to set the default value if you want to do this.

00:31.680 --> 00:34.000
Well let's bind to message here

00:34.020 --> 00:40.140
and of course I need to create a new property named message in my data field therefore, message.

00:40.140 --> 00:42.890
Now this could be a long text by default,

00:43.020 --> 00:49.490
I'll simply pick a short one and you will see that this now pre-populates this message box here,

00:49.620 --> 00:53.080
so this is how you pre-populate it and that's just important to keep in mind,

00:53.190 --> 00:55.980
you use v-model like with other input fields

00:55.980 --> 01:01.680
but if you want to set a default value here, don't do it between the opening and closing tag of the text

01:01.680 --> 01:02.110
area,

01:02.130 --> 01:07.380
use v-model for that, like you do it in other input fields but with the text area having the opening and closing

01:07.380 --> 01:15.210
tag, you could think that you can access this between area here and use string interpolation there and

01:15.210 --> 01:17.810
that will actually not work as intended,

01:17.850 --> 01:22.790
so make sure to not use this area and use v-model instead.

01:22.800 --> 01:29.870
So let me look at my data field, oh and that should be of course the password of my user data

01:30.030 --> 01:37.850
and then here, message shall of course output my message. And with that, we see how easy it is to now also see a new

01:37.860 --> 01:39.030
text here

01:39.060 --> 01:48.140
and if I change that to a change text something else, well then we see, whoops, that it also updates down

01:48.150 --> 01:48.820
there.

01:48.820 --> 01:53.650
Now what you also see is that it doesn't keep the line break though.

01:53.860 --> 02:00.070
What if you wanted to keep that structure, what if you wanted to keep that line break and not convert it

02:00.130 --> 02:03.540
to a single line string, like it does right now.

02:03.850 --> 02:06.000
Well actually it does store it multi-line,

02:06.070 --> 02:11.620
I'm just not outputting it like this but outputting it with multiple lines is as easy as adding a new

02:11.620 --> 02:16.570
style to my paragraph down there and that's a normal style, nothing vuejs specific.

02:16.570 --> 02:23.470
And here you want to set whitespace to pre, that's a css option which will keep your multi-line string,

02:23.890 --> 02:30.850
so as you can now see, I am keeping the line breaks now too, so it was a pure output styling thing not

02:30.850 --> 02:32.570
something vuejs messed up,

02:32.590 --> 02:37.740
it is stored as a multi-line string, that's important to understand and keep in mind. If you wanted and

02:37.740 --> 02:43.660
sent it to a server let's say and save it there, you can contain the styling or the formatting you have

02:43.660 --> 02:44.470
set up here

02:44.490 --> 02:50.010
and with that, I basically mean adding line breaks in this default input field or default text area

02:50.010 --> 02:50.460
here.
