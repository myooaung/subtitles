WEBVTT

00:01.770 --> 00:08.110
So we made our central store.js file much slimmer by having this counter module.

00:08.250 --> 00:13.670
I could outsource the value related things into the value module then the store would be really slim

00:14.100 --> 00:17.970
but I don't want to do it because I want to show something else.

00:17.970 --> 00:25.410
Sometimes you also have some state, some action, some getters which don't really belong into one module.

00:25.620 --> 00:32.040
In your application let's say, you have a users part and you have your block part and that will be two

00:32.040 --> 00:33.280
great modules

00:33.540 --> 00:38.130
but then also you've got some state which is only displayed in the header which has to be displayed

00:38.160 --> 00:38.790
everywhere,

00:38.910 --> 00:44.540
therefore you don't want to put the header related state into either of the two modules.

00:44.730 --> 00:49.920
You could leave it in your main store file but maybe you got a lot of different actions and so on

00:49.920 --> 00:53.870
so the store.js file will grow pretty big again.

00:54.210 --> 01:01.710
Well for that, you can create other files like let's say actions.js, not in the new modules folder but

01:01.710 --> 01:07.600
immediately in the store folder, you can then take your actions, only one action here

01:07.610 --> 01:11.040
but yeah it does it for demo purposes, I guess

01:11.100 --> 01:18.760
and in the actions.js file, you simply export a constant and give it a name, update values in the name

01:18.820 --> 01:19.940
of your action

01:20.250 --> 01:22.830
and that of course now is a function,

01:22.830 --> 01:27.060
so I'll turn it into an ES6 function by adding an arrow and the equal sign

01:27.210 --> 01:30.660
and if you have more actions, you'll simply add more exports,

01:30.690 --> 01:34.970
so here we use named exports to export all our actions,

01:35.010 --> 01:39.750
so action number two would be another function for example.

01:40.200 --> 01:46.740
So these are the actions, we still can call commit like this because we still will get this commit or

01:46.740 --> 01:51.300
this context argument here, it will still work as before.

01:51.320 --> 01:57.930
So with the constant exported, let's go to our store and here we now want to import our actions, so let's

01:57.980 --> 02:02.690
add the import from these actions file here

02:02.970 --> 02:07.980
and I'm not going to import all the exported constants one by one even though it would only be one here

02:08.010 --> 02:14.190
but it could be more in a real application and still I'll use the star syntax in that as actions, this

02:14.230 --> 02:22.770
name is up to you, to let javascript create an object here which I can access with the name actions,

02:22.770 --> 02:29.310
so this is an object where all my exported values here are basically just properties in that object.

02:29.580 --> 02:31.940
So since actions here also is an object,

02:32.160 --> 02:33.780
well I can just use actions,

02:33.780 --> 02:37.680
so my imported actions object here and that should work fine.

02:37.680 --> 02:40.450
Now we can do the same for mutations,

02:40.470 --> 02:50.160
so let me quickly add mutation, mutations.js here where I also export the update value constants,

02:50.160 --> 03:02.000
so export const update value and of course also let's create a getters.js file for my, whoops

03:02.000 --> 03:06.610
here, for my getter, possibly could be more than one of course,

03:06.640 --> 03:08.630
then this would make more sense.

03:08.890 --> 03:14.770
So let's add this getter, let's add the equal sign here and then in the store

03:14.770 --> 03:24.760
of course I also want to add the imports, so to getters and to mutations, like this and then here, as

03:24.760 --> 03:30.380
with actions, we use these imported objects. And with this place if I save this,

03:30.400 --> 03:37.410
you see this still works as before but now we get a very very lean file here where

03:37.540 --> 03:45.970
we outsource both our centralized tasks in the actions getters mutations file and we have modules for

03:46.120 --> 03:48.320
the more specialized things

03:48.550 --> 03:56.560
and of course, you could even split your modules into actions, getters and mutations files. So you could

03:56.560 --> 04:05.400
create a counter folder and in this folder, you could then have the actions.js file and so on.

04:05.410 --> 04:11.710
I'm not going to do this here but you can do this and this really allows you to split this up and to

04:11.710 --> 04:15.430
keep the individual files manageable and lean.
