WEBVTT

00:01.840 --> 00:06.910
So as mentioned in the last video, I want to start working on these stocks component and the individual

00:06.910 --> 00:08.000
stocks.

00:08.050 --> 00:13.180
So I'll head over to the stocks.vue file where right now we only got this template and I'm

00:13.180 --> 00:15.540
going to replace it with a div. Now

00:15.580 --> 00:21.280
in this div, what I want to do is I kind of want to loop through all my individual stocks and then simply

00:21.280 --> 00:28.120
output them here and let bootstrap handle the, place them in a grid, problematic.

00:28.210 --> 00:33.790
So therefore, what I want to do here first is I want to set up some dummy stocks, just so that we can

00:33.790 --> 00:39.040
see something, we will soon change this and manage our state differently.

00:39.040 --> 00:47.050
So first of all, I'll export default object in here and in this object, I'll have my data function to return

00:47.500 --> 00:48.940
an array of stocks

00:48.970 --> 00:52.500
and again that's just some dummy data we'll replace soon,

00:52.900 --> 00:57.400
whoops, that's it of course, not the right set up, that should be a colon like this.

00:57.400 --> 01:01.590
So how is a stock defined in this application?

01:01.840 --> 01:11.410
Well I want to have ID for each stock, I want to have a name, BMW maybe and then a price, let's say 110 and

01:11.410 --> 01:18.910
then I'm going to repeat this to also get other stocks with unique IDs, that will make it easier to manage

01:18.910 --> 01:19.920
them

01:20.110 --> 01:26.260
with Google let's say and let's give it a price of 200, yes I know that's too low but just so that

01:26.260 --> 01:28.900
we are actually able to buy some of them,

01:28.990 --> 01:36.360
Apple let's say 250 and Twitter, well that can't be much right,

01:36.410 --> 01:37.910
so let's say eight.

01:38.300 --> 01:40.390
So these are the stocks I want to use

01:40.580 --> 01:46.650
and with these stocks, I now want to loop through them and create as many stock components as needed.

01:46.820 --> 01:52.570
So with that, let's work on that stock component next because it seems to be the more interesting one.

01:52.970 --> 01:55.490
I want to start with the layout here,

01:55.550 --> 01:59.470
so first how should this generally look like?

01:59.720 --> 02:06.280
Well as I said, I want to have some boxes which are then distributed across the page by bootstrap,

02:06.320 --> 02:19.280
so we'll certainly wrap the stock in its own column class and I'll name it col-sm-6, col-md-4

02:19.300 --> 02:25.420
maybe so that we can fit three stock boxes next to each other on a medium sized screen and two of them

02:25.450 --> 02:29.230
on a small screen and so on. In there,

02:29.230 --> 02:36.790
I want to use a div or create a div which uses the panel class and also the panel success class, this will

02:36.790 --> 02:45.910
give it this green panel-like look bootstrap offers me, just to let you know what I'm talking about,

02:45.920 --> 02:52.440
if you go on the bootstrap page under components here, you'll also get these panels

02:52.540 --> 02:54.280
and that's what our panel looks like

02:54.280 --> 02:59.700
and there you got different panels and I want to use this green one here to hold my stock data.

02:59.950 --> 03:03.030
So that is the enclosing div

03:03.040 --> 03:04.420
I'm going to use, now

03:04.450 --> 03:09.970
in this div, of course we need a panel heading, this again is a bootstrap class to give it some nice heading

03:09.970 --> 03:16.300
style and there I want to have a h3 tag which I'll give a class of panel title and again, these

03:16.300 --> 03:18.630
are all bootstrap classes make it look nice

03:18.730 --> 03:22.650
and here we want to output the stock name, will soon be replaced,

03:22.650 --> 03:24.240
for now I'll keep it like this.

03:24.460 --> 03:29.910
And also inside of this h3 tag, I'll use another feature bootstrap offers me,

03:29.980 --> 03:32.010
I can not only output my name here,

03:32.020 --> 03:39.000
I can also add small and then some extra data which will be fit nicely into that title by bootstrap,

03:39.070 --> 03:44.600
so here we'll set the price which was a placeholder right now and then it looks good.

03:44.980 --> 03:49.430
So this is my panel heading, now after the panel heading

03:49.450 --> 03:53.920
I want to have my panel body which holds the content.

03:53.980 --> 03:56.180
Now the content are now two divs

03:56.180 --> 04:00.100
basically, one with an input form and one with the buy button,

04:00.100 --> 04:03.090
therefore I'll have a div with the class pull left,

04:03.100 --> 04:08.770
this is a bootstrap class to make it float on the left, pull it on the left side and in there, I simply

04:08.770 --> 04:11.380
want to have my input field which is of type,

04:11.650 --> 04:17.440
well we can make it of type number actually, I will still implement a check to make sure we do have

04:17.440 --> 04:21.470
a number, a valid number in there, so type number

04:21.700 --> 04:29.440
and then I'll give it a class of form control, bootstrap class of course, then I'll give it a placeholder

04:29.500 --> 04:37.050
of quantity so that the user actually knows what we want to see here and that's it for now,

04:37.060 --> 04:39.680
of course we'll revisit this later on.

04:39.700 --> 04:44.290
Then it's time to add another div with the class pool right for this buy button,

04:44.290 --> 04:52.270
so there I want to have a button which says buy though we'll also work on this caption of the button

04:52.300 --> 04:57.020
because I wanna say insufficient funds if we want to buy something we can't afford,

04:57.460 --> 05:04.690
so on this button I'll now add a class which is button and then button success because we want the green

05:04.690 --> 05:07.210
button let's say, always makes buying easier

05:07.720 --> 05:09.070
and that's it for now.

05:09.160 --> 05:13.140
So this is this button and this input field,

05:13.150 --> 05:18.550
with that we got our template for this stock set up,

05:18.550 --> 05:24.790
now before we fill it with some life, let's see if this works as intended by going back to the stocks.vue

05:24.790 --> 05:25.090
.

05:25.090 --> 05:27.230
file here and here I

05:27.280 --> 05:30.130
now want to first import this stock,

05:30.130 --> 05:35.440
so import stock from well and from the stock.vue file.

05:35.500 --> 05:37.390
And of course I also want to register it

05:37.390 --> 05:40.870
and I'm going to register this as a local component here too,

05:40.960 --> 05:43.340
again because I'm only using it in this component,

05:43.360 --> 05:47.130
if I were to use it somewhere else, this of course would be a great global component,

05:47.410 --> 05:55.720
so app stock is a stock here and then I want to have my stock and use v-for on it to loop through all

05:55.720 --> 05:56.710
my stocks.

05:56.860 --> 05:59.410
Now when looping through all the stocks here,

05:59.470 --> 06:05.850
I will say stock in stocks referring to my stocks array down there and that's it for now.

06:05.860 --> 06:08.870
We don't pass the data right now, we'll do this soon,

06:08.890 --> 06:11.310
for now I only want to see if this works.

06:11.320 --> 06:14.170
So let's head over to the application and this looks pretty good,

06:14.170 --> 06:20.260
we got four boxes which makes sense because we've got four stock items, we don't see the data in there

06:20.260 --> 06:22.630
of course because we don't pass it right now,

06:22.750 --> 06:28.930
so let's work on setting up this communication and passing the data down next.
