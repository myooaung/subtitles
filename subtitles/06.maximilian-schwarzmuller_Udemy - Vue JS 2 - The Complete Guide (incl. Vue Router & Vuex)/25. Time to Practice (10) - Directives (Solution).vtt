WEBVTT

00:01.570 --> 00:08.310
So we want to build this new directive which works kind of like v-on. So directives and here,

00:08.320 --> 00:09.280
the directive,

00:09.310 --> 00:19.960
well you may choose any name, I will choose customOn as the name and in my customOn directive, I have

00:19.960 --> 00:25.780
my bind hook here, that's my important hook in this case, here I do have my element and my binding,

00:25.780 --> 00:28.990
these are the two arguments I will need to access.

00:28.990 --> 00:32.560
Now let me quickly add a button here

00:34.170 --> 00:42.220
and I will add a method in my object here, methods where I will say clicked and here, I then want to

00:42.240 --> 00:43.090
throw an alert,

00:43.140 --> 00:45.960
so it's not really about the function we execute here,

00:45.960 --> 00:48.180
it is about being able to execute one.

00:48.420 --> 00:51.950
So alert, I was clicked, nice

00:51.960 --> 00:54.430
So this is this function,

00:54.600 --> 01:00.190
now I then want to use my directive, v-customOn like this

01:00.400 --> 01:02.870
and then here I will execute clicked,

01:02.980 --> 01:05.450
so I pass a reference to this function 

01:05.450 --> 01:07.680
I then want to execute.

01:08.050 --> 01:15.810
Now therefore, what I can do is here in the element, I want to listen to an event.

01:15.820 --> 01:18.020
Now I'm not specifying which event right now so

01:18.040 --> 01:22.310
let's start simple by forcing that to be a click event.

01:22.570 --> 01:24.030
How can I do this?

01:24.250 --> 01:32.200
Well keep in mind the element is my native html element and therefore of course, I have access to on

01:32.200 --> 01:41.680
click, like this and on click now takes a function which should get executed whenever we click on this

01:41.680 --> 01:42.730
element.

01:42.730 --> 01:50.470
Now what I can do here is I can say execute my binding value of which I know it will be a reference

01:50.470 --> 01:53.210
to a function so I can execute it like a function,

01:53.650 --> 01:54.940
let's see if this works.

01:54.970 --> 01:59.580
If I now go back and hit click me, we see I was clicked, was that easy?

01:59.590 --> 02:00.360
It is.

02:00.370 --> 02:04.270
So that is really how easy it is to get started with this,

02:04.270 --> 02:06.790
now let's fine tune a little bit.

02:06.850 --> 02:11.770
First of all, I'm not really connected to this directive but I want to give this button some styling to

02:11.800 --> 02:13.690
make it look nicer.

02:13.690 --> 02:18.290
Second of all, I don't want to listen to on click here,

02:18.490 --> 02:24.130
instead I want to be able to listen to any event and I want to set up a flexible event listener for

02:24.130 --> 02:25.120
that,

02:25.120 --> 02:31.440
therefore I'm going to copy or comment out that and instead I want to add an event listener here

02:31.660 --> 02:33.680
and how do you add an event listener?

02:33.970 --> 02:38.380
Well we have to specify the type of the event as a string

02:38.770 --> 02:41.900
and then the second argument is the function we want to execute.

02:42.190 --> 02:49.920
Well that's pretty easy, the type is something we can extract because that is simply our binding arg,

02:49.990 --> 02:57.280
now we're not passing this yet but I can pass it with a colon, click for example and then I can here

02:57.280 --> 02:59.650
add the type here, this will be converted to a string,

02:59.650 --> 03:02.030
so it is absolutely fine to use it like this

03:02.410 --> 03:05.440
and then I want to execute my function.

03:05.530 --> 03:09.910
I'm just extracting this in separate constants to make it really clear what happens here,

03:09.910 --> 03:15.900
so this is my binding value which again will be a reference to a function I can execute,

03:16.030 --> 03:17.950
so I'll execute the function here.

03:17.980 --> 03:20.960
Important, don't pass parentheses here,

03:21.010 --> 03:24.130
you want to just pass the reference to the event listener,

03:24.130 --> 03:28.960
javascript will execute this automatically for you once you do click.

03:28.960 --> 03:34.450
Now with this, let me try this modified code, still works like a charm,

03:34.450 --> 03:35.480
awesome.

03:35.530 --> 03:38.670
Now with that, we already finished the exercise,

03:38.680 --> 03:44.990
now I want to try something else and also add a little div here which I give some style,

03:45.010 --> 03:51.940
let's say some width, 100 pixels and a height 100 pixels and so that we can see the background color of

03:52.300 --> 03:54.470
light green,

03:55.000 --> 03:58.860
so this div here. And here I want to listen to mouse enter,

03:59.220 --> 04:09.490
so to do that I'll restructure this into multiple lines, here I want to have my customOn directive and

04:09.490 --> 04:22.240
I want to listen to mouse enter here and execute a function I will pass or I could create mouse

04:22.240 --> 04:23.870
enter for that

04:23.920 --> 04:31.110
and here I simply want to console log mouse entered

04:33.920 --> 04:42.850
and I also want to provide another function, mouseleave and you guess what I want to enter there

04:42.850 --> 04:46.850
or output there, mouse leaved.

04:46.900 --> 04:52.520
Now of course I also will hook this up, so mouse enter here, I want to execute mouse enter,

04:52.540 --> 05:01.270
so this newly created function and I also want to hook up my other listener, v-customOn mouse leave

05:01.360 --> 05:03.980
and execute mouse leave here

05:04.940 --> 05:08.930
and don't put the parentheses here, like this.

05:08.930 --> 05:11.280
Now let's see this in a console,

05:11.470 --> 05:13.790
if I clear this, mouse entered,

05:13.980 --> 05:15.320
mouse leaved, mouse entered, mouse leaved.

05:15.470 --> 05:17.720
So this is really flexible, as you can see,

05:17.720 --> 05:21.230
we can listen to multiple events, you can of course still click here.

05:21.230 --> 05:26.720
That is how this works and how easy it was to create our custom directive which kind of works like

05:26.810 --> 05:35.630
v-on just by using native dom javascript, things like the event listener here, passing an argument and passing

05:35.720 --> 05:42.920
a value, the function which should get executed or the reference to this function. Really short and hopefully

05:42.920 --> 05:50.690
that showed you how you can use the features native elements offer you, native javascript offers you to

05:50.690 --> 05:52.520
build powerful directives.
