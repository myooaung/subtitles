WEBVTT

00:02.070 --> 00:08.610
So in the last video, we already ran npm run build, this script here which is key to create this dist folder

00:08.610 --> 00:10.660
with the build.js file,

00:10.720 --> 00:18.030
it bundles all the files from the source folder together into one bundle which holds all your code,

00:18.030 --> 00:24.660
now this and the index.html file needs to be deployed. In this a webpack-simple template as well

00:24.660 --> 00:27.480
as the other templates created by the vue cli,

00:27.700 --> 00:33.120
everything's already configured to be deployment ready. If you're not using them,

00:33.120 --> 00:35.940
let's have a look at the webpack config file,

00:35.940 --> 00:44.370
the important parts here are these define plugin where we basically set the mode to production here which

00:44.370 --> 00:50.100
will strip out some additional warnings vuejs would throw otherwise, this will reduce the file

00:50.240 --> 00:52.680
size because we don't need the warnings anymore

00:52.740 --> 00:59.430
and it also makes sure that your deployed application doesn't give some impossibly meaningful warnings

00:59.430 --> 01:01.110
to visitors of your page,

01:01.170 --> 01:02.770
you don't want to do that.

01:02.910 --> 01:09.630
Then we also have the optimize plugin here, the uglify.js plugin which minifies everything,

01:09.660 --> 01:16.490
which means shortens your words, makes everything more compact so that it works great.

01:16.590 --> 01:23.100
Now with these two steps in place, warning stripped out and everything minified, again this is done

01:23.100 --> 01:25.980
automatically by the template set up through the cli,

01:26.250 --> 01:28.300
we're ready to deploy our app,

01:28.380 --> 01:34.810
so now that we have this build.js file and the index.html file, we get everything we need.

01:34.890 --> 01:38.020
Let's now see how we can actually deploy it

01:38.070 --> 01:43.110
and I will show this at the example of Amazon Web Services S3.
