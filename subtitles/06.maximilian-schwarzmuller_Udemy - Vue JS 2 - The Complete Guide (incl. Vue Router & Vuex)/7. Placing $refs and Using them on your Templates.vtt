WEBVTT

00:02.300 --> 00:05.870
I mentioned this third property I wanted to talk about,

00:06.080 --> 00:14.210
it's this ref property vuejs exposes to us. That actually is something we haven't talked

00:14.210 --> 00:15.820
about yet,

00:15.860 --> 00:20.880
it's something you want to use careful but which can really do the thing you just were looking for.

00:20.900 --> 00:25.170
If in my html code, I want to get the current content of this button,

00:25.190 --> 00:27.310
this show paragraph button,

00:27.540 --> 00:34.130
it's right now a bit hard for me to do. In normal, in vanilla javascript which as a side note I can always

00:34.130 --> 00:41.270
mix in, I could select it with a query selector, let's say. In vuejs I can access it very

00:41.270 --> 00:46.750
easily with the following syntax though, I can simply place the ref key on it,

00:46.790 --> 00:49.310
that is not an official html attribute,

00:49.310 --> 00:51.970
this is a key added by vuejs,

00:51.980 --> 00:54.400
notice it doesn't have a colon at the beginning,

00:54.410 --> 00:57.740
it's not a directive, it's not using the v-bind directive,

00:57.890 --> 01:02.500
it doesn't need to because it isn't a native html attribute anyways.

01:02.790 --> 01:10.220
So ref is yeah kind of a key which is also recognized by vuejs on any element, you may place it

01:10.220 --> 01:16.130
on any element, any html element and I can set it equal to any name I like,

01:16.160 --> 01:17.720
I named it my button

01:17.720 --> 01:21.100
but again, this is a string you can choose.

01:21.290 --> 01:22.560
This is in the app1

01:22.570 --> 01:29.900
so we may want to go into our app1 vue instance here. Inside of this instance as well as outside of

01:29.900 --> 01:30.490
it,

01:30.710 --> 01:38.060
I do have access to all my refs I register with this ref key, I can register as many as I want with the

01:38.060 --> 01:40.380
$refs property.

01:40.670 --> 01:50.360
So let's say here when clicking this show button or when I execute a show function, I want to

01:50.450 --> 01:58.900
first console log this ref attribute so that we learn more about it, this ref property.

01:59.090 --> 02:05.060
So here I'll log this refs and now I hit control enter, open up the console here,

02:05.060 --> 02:13.150
clear this and let's click show paragraph here. We see the button, it was also printed before when we changed

02:13.150 --> 02:16.360
the title, when we called show from outside.

02:16.360 --> 02:19.420
This is clearly an object representing my button,

02:19.420 --> 02:25.510
it is not the native element though, it is a javascript object where I have a key which is named my button,

02:25.510 --> 02:28.840
this clearly is the name I chose for the reference up here.

02:29.320 --> 02:30.810
And the button itself now,

02:30.850 --> 02:37.570
well this looks like a normal button element and it is, this is a normal javascript or a normal html

02:37.570 --> 02:40.150
element used in javascript.

02:40.150 --> 02:46.540
Now since this is the case, this means that on this refs, I can access all references I registered using

02:46.540 --> 02:55.110
the name I set up as a property, my button like this for example. Now this also means that here I could

02:55.110 --> 03:04.140
say this $refs my button in a text equals test. If I hit control enter, this function will

03:04.140 --> 03:06.270
get executed in a few seconds anyways,

03:07.940 --> 03:09.880
you now see it was renamed to test

03:09.920 --> 03:14.410
so I am able to access my html elements just like that.

03:14.630 --> 03:20.600
Now what if I do this on an element which is already under control of vuejs or the content of this

03:20.600 --> 03:26.710
element is under control of vuejs because I'm outputting the content here with title, with this string

03:26.710 --> 03:28.490
interpolation.

03:28.520 --> 03:36.570
So if I name this heading here for example and I do update the title here through vuejs and the show

03:36.570 --> 03:38.450
method recognize this.

03:38.790 --> 03:46.250
So what if I say before this timeout here fires in my normal javascript code, simply access this vue

03:46.290 --> 03:52.770
instance, all my refs I just said you can use $refs inside of the instance and outside as

03:52.830 --> 03:53.890
well

03:54.000 --> 03:59.810
and then here I access heading, this is the name I chose for this h1 tag.

03:59.970 --> 04:08.280
I can then set inner text here to something else and if I hit control enter, we see it is changed to

04:08.280 --> 04:09.970
something else here.

04:10.020 --> 04:16.380
Now after three seconds, it's changed to vue instance updated because the string interpolation up here

04:16.470 --> 04:17.580
still holds,

04:17.580 --> 04:19.250
this is not overwritten.

04:19.290 --> 04:21.350
Why is it not overwritten?

04:21.390 --> 04:25.320
That is something I will dive in deeper in with the next videos,

04:25.350 --> 04:31.450
generally we have to keep in mind that vuejs takes this code it controls, this html code

04:31.650 --> 04:36.990
and as I explained earlier in the course, it takes a template or it creates a template based on this

04:36.990 --> 04:38.560
html code.

04:38.580 --> 04:44.970
Now if we access element like we do here, we're changing this directly in the dom but we're not

04:44.970 --> 04:47.880
changing the template of vuejs,

04:47.970 --> 04:54.990
therefore whenever vuejs re-renders the dom for us, it takes its old template as it always

04:54.990 --> 05:01.050
does and then re-renders the dom based on this template, so it overrides our change we made here and that

05:01.050 --> 05:06.630
is something very important to keep in mind, you are able to interact with html elements using

05:06.630 --> 05:10.530
the ref key and the $refs property here.

05:10.830 --> 05:12.510
But if you change something there,

05:12.540 --> 05:15.440
be aware that this is not reactive,

05:15.600 --> 05:20.200
this is not part of vuejs's instance, this is directly in the dom

05:20.190 --> 05:22.800
so your changes may be overwritten.

05:23.250 --> 05:24.860
That's really important,

05:24.870 --> 05:30.330
it may be convenient to use a reference though if you want to get some value, if you want to get the

05:30.330 --> 05:34.970
current value of something. If you need to access a native element,

05:35.040 --> 05:40.080
then there's this for you and much easier than using the query selector as in with this method, you

05:40.080 --> 05:43.150
simply place ref on an element and there you go

05:43.270 --> 05:45.640
access through the $refs property.
