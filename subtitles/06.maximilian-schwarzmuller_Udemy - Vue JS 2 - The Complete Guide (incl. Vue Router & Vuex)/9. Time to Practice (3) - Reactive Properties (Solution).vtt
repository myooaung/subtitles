WEBVTT

00:01.790 --> 00:04.870
Let's start with the first exercise here.

00:05.030 --> 00:08.410
This clearly is a case where we need to create a computed property,

00:08.450 --> 00:16.070
so let's add the computed object here to our vue instance. The computed object then as the data object

00:16.340 --> 00:19.740
takes key value pairs where the key is our property name,

00:19.760 --> 00:27.200
result but the value is not directly the value but instead a function which will return as the value

00:27.250 --> 00:29.290
result should eventually have.

00:29.570 --> 00:37.310
So here, the eventual value of result shall depend on value, so on this value property here.

00:37.700 --> 00:44.000
I want to check whether value is let's say equal to 37 in this case or not,

00:44.000 --> 00:46.780
so I will return this check,

00:46.790 --> 00:51.690
this value equals 37 and output done

00:51.710 --> 00:59.810
if we actually do fulfill this requirement and not there yet otherwise. And of course feel free to choose

00:59.900 --> 01:06.980
any other set up or number you want, the key part is that we're using this dependency on value here.

01:06.980 --> 01:11.740
With this, I can hit control enter here to see not there yet

01:11.750 --> 01:15.390
and now let's change this to actually be 37.

01:15.650 --> 01:21.500
So I'll push this up to 35 and then add two more and we see done,

01:21.530 --> 01:28.720
this is our computed property working and feel free to make this more complex in anyway you imagine

01:28.790 --> 01:32.610
but generally, this is how you always use computed properties,

01:32.690 --> 01:39.080
having a function, that is important which returns the actual value this result property in this case

01:39.080 --> 01:40.230
will eventually have

01:40.370 --> 01:46.910
and in this function, you may use any code you want and importantly which is why it is so powerful when

01:46.910 --> 01:53.930
using dependencies, you may use any other property or data field you want but you don't have to, a

01:53.930 --> 01:54.950
computed property

01:54.980 --> 02:00.620
could also simply be a normal arithmetic calculation if for some reason you need that functionality,

02:00.620 --> 02:03.720
it could be a random number if you need that functionality,

02:03.740 --> 02:05.760
so whatever you need here.

02:05.820 --> 02:12.760
The second exercise here wants me to watch for changes in the result property,

02:12.770 --> 02:18.920
so in this computed property, we can also watch such a computed property not just normal properties,

02:18.920 --> 02:21.370
we can watch any property at the end.

02:21.650 --> 02:29.210
So let's add the watch object to our vuejs instance and then as a key, we specify the name of the

02:29.210 --> 02:30.800
property we want to watch,

02:30.800 --> 02:34.470
result here referring to this result property

02:34.520 --> 02:37.250
we set up here as a computed property.

02:37.340 --> 02:43.160
So again, this is really important to understand, you can watch any property computed or not. And then the

02:43.160 --> 02:48.940
value here is the function which should get executed whenever result changes,

02:48.950 --> 02:55.730
so here I then want to reset the value property, this one here after 5 seconds,

02:55.910 --> 03:03.500
so I will simply call set timeout, second argument will be 5000 for five seconds and then

03:03.500 --> 03:06.870
here, I will have my function which should get executed.

03:07.070 --> 03:16.030
Now as I mentioned in the last video, we will have to bind our this variable, so var vm is the variable

03:16.040 --> 03:18.620
I'll create for this which is equal to this,

03:18.650 --> 03:25.610
so that I still get access to this vue instance with the proxy properties like result and value

03:25.650 --> 03:28.070
specifically, as in here,

03:28.070 --> 03:36.600
I will need to set vm value referring to this value property here equal to zero again.

03:36.930 --> 03:42.070
Let's hit control enter and correct this mistake here,

03:42.080 --> 03:43.870
we of course need a colon after watch,

03:43.880 --> 03:45.750
so control enter again

03:46.310 --> 03:53.930
and now let's see, I can add 5 and we don't see a change after 5 seconds here because result here

03:54.020 --> 03:56.320
wasn't changed but yes it was re-evaluated,

03:56.330 --> 04:01.640
it was recalculated because we changed the value but result is still not there yet.

04:01.790 --> 04:06.710
So let's change it to 37 then and wait for 5 seconds,

04:09.530 --> 04:10.360
here we go,

04:10.480 --> 04:14.030
it jumped back to zero and that also reset result,

04:14.150 --> 04:19.820
so we even get this kind of circle that we're watching result which depends on value where we then

04:19.820 --> 04:24.880
reset value which also resets result as it depends on value.

04:24.950 --> 04:32.170
So you can also create kind of infinite dependencies here or infinite circles so watch out for that.

04:32.180 --> 04:41.090
For example, if I were to watch this result here and change result whenever for example value is equal

04:41.090 --> 04:46.830
to zero, then I would continuously execute this code and get into a never ending loop,

04:46.850 --> 04:48.890
so you may want to watch out for this.

04:49.000 --> 04:56.620
The use case here works works perfectly fine since we only reset if we reach 37, like we do here,

04:56.730 --> 05:01.100
watch it again, here we go.

05:01.100 --> 05:09.770
So this has been the exercise on computed properties and watch, I hope you were able to get a bit better

05:09.830 --> 05:12.150
into using these two features,

05:12.150 --> 05:17.960
understand the difference, that on the one we simply calculate a property whereas on the other, watch,

05:18.170 --> 05:23.210
we simply react to some changes and we don't necessarily have to change a property there even though

05:23.210 --> 05:24.630
we do so here

05:24.710 --> 05:27.290
but you don't have to, you could run any code here.

05:27.620 --> 05:30.290
And this is the important thing to understand where

05:30.290 --> 05:35.870
it's important that you feel comfortable using these features as these two features, computed and watch

05:36.200 --> 05:45.280
really make your application much more reactive and allow you to create very flexible and reactive applications.
