WEBVTT

00:01.910 --> 00:08.110
Now when we use filters like this, it seems very useful and it is, we can use it to transform certain

00:08.110 --> 00:08.920
outputs,

00:08.920 --> 00:14.560
think about formatting a date by putting let's say a date filter which you create your own where you

00:14.560 --> 00:18.320
then are able to configure the date or how it should be displayed.

00:18.650 --> 00:24.850
But oftentimes, you think that a filter might solve a certain solution and there is a better alternative

00:24.850 --> 00:28.020
available and that would be a computed property,

00:28.120 --> 00:30.120
let me show you an example.

00:30.250 --> 00:34.870
Imagine we have an array of fruits here,

00:34.870 --> 00:37.260
now there we may have an apple,

00:37.720 --> 00:42.510
we may have a banana and we may have a mango,

00:42.830 --> 00:45.050
hope that is the name and a melon,

00:45.140 --> 00:53.210
so we've got four fruit items there. Now it would be convenient to now be able to have it output as a

00:53.210 --> 00:56.460
list here and then filter when we type in the input field.

00:56.510 --> 01:03.980
So let's do this, I'll add a horizontal line, I'll add an input where I want to bind to or with v-model to

01:04.070 --> 01:07.260
the filter text property which I'll also create,

01:07.400 --> 01:11.320
so here we got filter text which is empty at the beginning.

01:11.760 --> 01:19.860
And with that filter text here, I want to filter this unordered list where I loop with v-for and loop

01:19.860 --> 01:24.010
through my fruit in fruits, like this,

01:24.020 --> 01:27.020
this allows me to output fruit here.

01:27.020 --> 01:31.780
Now if we have a look at this, what we see of course is our four fruits, that is normal

01:31.790 --> 01:36.620
vuejs code as we learned it, we're not using any filters here. Now it would be convenient to somehow

01:36.680 --> 01:45.410
add a filter here to say only output these fruits which match our filtered text, so if we entered an m in

01:45.410 --> 01:50.520
there, we only want the add the fruit which starts with the m, let's say. So it would be convenient to say

01:50.540 --> 01:55.080
and then here, this filter somehow, pipe filter after fruits.

01:55.130 --> 02:01.620
Now the issue with such a filter is that this is very suboptimal from a performance perspective,

02:01.690 --> 02:07.340
vuejs is not able to handle this greatly in the background as it is not able to detect when it should

02:07.340 --> 02:12.680
rerun the filter or not, actually it will rerun the filter up on each re-rendering of the dom.

02:12.680 --> 02:18.560
This of course is a huge performance hit because maybe you didn't change this input here but still

02:18.560 --> 02:21.550
it needs to rerun the filter because it doesn't know that,

02:21.680 --> 02:24.360
so this really is bad for performance

02:24.410 --> 02:31.160
hence filters have been kind of limited in what they can do in vuejs 2.0, that was different in

02:31.250 --> 02:33.630
vuejs 1.0 as a side note.

02:33.920 --> 02:40.430
So what could we do in such a case where we want to filter an existing list? We can use a computed property,

02:40.490 --> 02:43.790
we already learned about these earlier in the course.

02:43.790 --> 02:49.520
The great thing about computed properties is vuejs knows on what such a property depends and therefore

02:49.550 --> 02:51.200
only recalculates it

02:51.350 --> 02:56.630
if something changes in the things we can use in this property or in this method it is then in

02:56.630 --> 02:57.370
the end.

02:57.650 --> 02:59.880
So let me demonstrate this, here

02:59.900 --> 03:09.430
I want to add a new property filteredFruits, this is actually a method as all computed properties are and

03:09.430 --> 03:12.710
here I want to return my fruits array

03:12.970 --> 03:18.860
and since it is an array, I can call the filter method on this ES6 method. The filter method

03:18.860 --> 03:24.910
now takes a callback which is executed on each element in this array, the element is then passed automatically

03:24.910 --> 03:27.480
as an argument to this callback.

03:27.490 --> 03:32.770
Now in this callback, I have to return all them elements and when I keep in this new array I'm generating, in

03:32.850 --> 03:35.350
these filteredFruits array that is, it is a method

03:35.350 --> 03:40.300
but keep in mind behind the scenes, vuejs will create a property based on this method which is

03:40.300 --> 03:46.600
then recreated whenever some input changes, so whenever fruits changes or as I will soon implement it,

03:46.660 --> 03:48.160
filter text.

03:48.160 --> 03:53.650
So here I want to return each element which matches this filter text,

03:53.680 --> 04:00.310
so the text entered by the user, this computed property will only be recalculated filter, text or fruits

04:00.310 --> 04:01.420
changes,

04:01.420 --> 04:03.290
therefore it's very performant,

04:03.310 --> 04:11.640
it's not doing any unnecessary calculations and I can hence simply loop through my filtered fruits here,

04:11.650 --> 04:15.130
that's a great alternative to a filter.

04:15.160 --> 04:21.670
Now if we have a look, this still works but if I enter M for mango or melon, we only see these two, if

04:21.670 --> 04:27.100
I enter a for apple, we only see this, if I have a lowercase a, we see banana and mango because these

04:27.100 --> 04:28.660
two have a lowercase n.

04:29.050 --> 04:36.460
If I now enter a and we see only banana and mango because these are the only two words which have a

04:36.480 --> 04:38.270
and character sequence in them,

04:38.470 --> 04:42.450
so this shows you how to create a better filter with vuejs.

04:42.460 --> 04:44.660
This is not using vuejs filters at all,

04:44.680 --> 04:50.570
we do that with the uppercase filter but for more complex transformations, you want to use a computed

04:50.590 --> 04:53.200
property and that is something to keep in mind.

04:53.230 --> 04:59.360
Filters can be a nice solution but oftentimes, computed properties are the better solution,

04:59.410 --> 05:03.970
they can be more fine tuned to your needs and they are more performant.

05:04.000 --> 05:06.110
So keep this in mind when working with filters,

05:06.220 --> 05:12.070
you may of course use the normal filter here but again, definitely think about using a computed property

05:12.130 --> 05:12.920
instead.
