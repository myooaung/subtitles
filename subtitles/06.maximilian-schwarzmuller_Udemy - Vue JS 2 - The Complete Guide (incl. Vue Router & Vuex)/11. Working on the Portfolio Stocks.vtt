WEBVTT

00:01.840 --> 00:05.040
So our last video, we set up our portfolio here.

00:05.090 --> 00:08.740
Now we need to add it to our store by importing it

00:08.740 --> 00:17.060
first of all, so this portfolio module we just created, add it here to the modules object again and here,

00:17.060 --> 00:22.280
I'm just repeating this portfolio means that we have the long version, would be portfolio portfolio.

00:22.670 --> 00:24.370
So this is now set up,

00:24.410 --> 00:35.140
now we can use all the actions and the getters here to also update our portfolio and to make this

00:35.230 --> 00:37.130
buy button work,

00:37.210 --> 00:38.770
let's look at the buy button.

00:38.830 --> 00:41.830
So in the stock.vue here,

00:41.830 --> 00:45.000
I do have my buy stock method here

00:45.010 --> 00:51.510
and in this method, I now finally want to use this order I created to dispatch it.

00:51.670 --> 00:57.520
So here I can say this store dispatch, of course I could also map my actions and then call this

00:57.520 --> 00:58.550
action here

00:58.720 --> 01:01.380
but I want to do it like this, dispatch

01:01.390 --> 01:04.790
and now the name of the action is buy stock.

01:04.990 --> 01:10.580
Now this action is in the stocks module whereas the mutation is in the portfolio module,

01:10.630 --> 01:15.680
you could argue that both should be in the same module and I wouldn't necessarily disagree,

01:15.700 --> 01:21.340
I also want to show though that you can of course commit mutations across modules here,

01:21.340 --> 01:26.470
this is why I chose to use this set up and of course you could also say that the action should occur

01:26.770 --> 01:32.750
in the stocks module whereas then the updating of the portfolio really belongs to the portfolio

01:32.750 --> 01:35.240
module, that would be a different argument.

01:35.350 --> 01:42.040
So with that, I can simply dispatch buy stock here and I need to pass the order as a second argument,

01:42.070 --> 01:43.650
as my payload.

01:43.670 --> 01:48.890
Now in the stocks.js file, buy stock doesn't do much right now does it,

01:48.900 --> 01:50.870
it doesn't commit anything

01:50.980 --> 01:56.980
so here we need to commit buy stock and here we see this global namespace, even though it's a different module

01:57.040 --> 01:58.210
buy stock here,

01:58.330 --> 02:00.850
we'll refer to this buy stock mutation.

02:01.150 --> 02:05.700
And there of course we also need to pass our order as an argument

02:05.800 --> 02:10.600
to this mutation so that this mutation is able to pull the data it needs to pull.

02:11.040 --> 02:18.580
So with that, if we set it up like this, we're actually able to dispatch this action and we can already

02:18.580 --> 02:20.890
have a tiny look at this,

02:21.100 --> 02:26.660
if we open up the console and try buy, at least we don't see an error

02:26.710 --> 02:27.930
so that looks good.

02:28.120 --> 02:30.810
Now to finally see if that works,

02:30.830 --> 02:36.610
I'll remove this console log and now I want to go to my portfolio and make sure that the portfolio is actually

02:36.610 --> 02:39.890
printed to the screen so that we can see if it gets updated,

02:39.910 --> 02:43.700
if that works. For that, let's head over to the portfolio.vue

02:43.750 --> 02:50.500
file and here I first of all also want to set up a div which wraps everything, then I need

02:50.500 --> 02:55.630
some stock components like I do have here, my stocks module. 

02:55.870 --> 02:59.650
Now I will copy the code from this stock.vue file

02:59.650 --> 03:04.570
and of course that's always a good sign that you might want to refactor it though I will change quite

03:04.570 --> 03:10.420
a lot of that code which as I explained at the beginning of this module is the reason why I decided to

03:10.420 --> 03:17.050
use two different components instead of one but you may feel free of course to merge them into one.

03:17.050 --> 03:18.450
Now first of all, what I'll change is

03:18.460 --> 03:23.340
I'll get rid of the buy stock method and then I need to work on this template.

03:23.410 --> 03:27.770
The general layout here is fine, though it starts here at the subtitle,

03:27.970 --> 03:32.040
we'll not only have a price, we'll also have a quantity here,

03:32.140 --> 03:36.090
so I also want to output stock quantity, a field we do have

03:36.100 --> 03:39.390
because that is what I'll set up here in my stocks

03:39.410 --> 03:42.630
array, when I add a new stock it has this quantity field

03:42.760 --> 03:46.780
therefore I can access it here when outputting an individual stock.

03:46.990 --> 03:52.620
Of course we also have an input where we are able to buy things with v-model here,

03:52.810 --> 03:58.650
so that's all fine and I also want to make sure that we're not selling less than we have so that we're

03:58.660 --> 04:00.670
not selling less than zero,

04:00.670 --> 04:07.930
I will soon add some checks to also make sure we're not selling more than we have as well as on the

04:07.990 --> 04:12.240
stocks module to make sure we're not buying more than we can afford.

04:12.580 --> 04:16.540
But for now, I'll do it like it is and here I'll name this sell, again

04:16.540 --> 04:22.760
we'll soon be adjusted to then really differ a bit more from the other stock file.

04:22.780 --> 04:27.580
So with this in place, we get this hooked up,

04:27.580 --> 04:36.130
we should name this sell stock here and then I want to add my sell stock method, so I'll implement sell stock

04:36.130 --> 04:38.980
here and sell stock

04:38.980 --> 04:42.670
will now create an order as well, in this order

04:42.680 --> 04:48.990
I of course will have a stock ID so this stock ID, I want to have a stock price,

04:49.080 --> 04:51.100
this stock price

04:51.370 --> 04:57.370
and we also want to have a quantity, the quantity we enter into this field which is bound with

04:57.430 --> 05:00.870
v-model to our return property here,

05:01.240 --> 05:06.300
our quantity property here, excuse me. I do have access to the price,

05:06.580 --> 05:08.160
oh that should be a colon,

05:08.470 --> 05:16.780
so I do have access to the price here because in my portfolio module in my store, when getting a stock

05:16.780 --> 05:23.250
portfolio, I'm mapping each object in this array and I do add this price field.

05:23.290 --> 05:27.950
Now the only thing we're not doing right now is we're never using the stock portfolio getter, we're not

05:28.060 --> 05:33.430
using it here in the single stock item because that's not the place where we should use it and the

05:33.430 --> 05:35.380
portfolio component is pretty empty.

05:35.380 --> 05:36.620
We'll work on this soon

05:36.670 --> 05:43.570
but let me first finish this stock component because after creating the order, we of course want to dispatch

05:43.570 --> 05:44.230
it

05:44.230 --> 05:53.140
and now I'll show a different way to do this by importing map actions from vuex, since I only have

05:53.140 --> 05:59.200
one action here, that is a bit well too much work or you wouldn't actually need to do this, you could

05:59.200 --> 06:00.760
directly dispatch it here

06:00.910 --> 06:02.640
but I'll show it anyways.

06:02.770 --> 06:07.990
So here I'll use the three dots to then call map actions and distribute all the properties

06:07.980 --> 06:16.800
this is going to create for us and then here, I'll pass an array and I will simply import sell stock,

06:16.810 --> 06:22.170
this now gives me access to this sell stock here.

06:22.240 --> 06:27.850
I can now execute this safely because I know this action will be created by map actions for me,

06:27.850 --> 06:33.540
you could also pass an object here and map a different name for you to use in this component here

06:33.640 --> 06:41.020
then the one you set up in the store, sell stock is the name of this method in the store.

06:41.410 --> 06:47.650
With that we set up this, now the next step is to go to our portfolio and actually load all our stocks

06:47.650 --> 06:47.910
there.

06:47.920 --> 06:49.060
So let's do that next.
