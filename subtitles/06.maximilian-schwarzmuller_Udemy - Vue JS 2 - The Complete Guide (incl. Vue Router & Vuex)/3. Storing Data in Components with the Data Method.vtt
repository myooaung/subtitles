WEBVTT

00:02.300 --> 00:07.250
In the last video, we were creating our first component and I was highlighting the importance that

00:07.250 --> 00:13.070
data shall be a function. To really understand what can go wrong if it weren't one,

00:13.070 --> 00:19.330
we have to cheat because I can't use an object because vuejs will actually halt and give me a warning

00:19.700 --> 00:28.580
but I can create a new data object outside of vuejs where I set status to critical and now, I can return

00:28.580 --> 00:31.010
the data here which is in an object,

00:31.010 --> 00:31.470
right.

00:31.610 --> 00:37.580
But now we're cheating because now returning the same data object and I mean the same, not content wise

00:37.610 --> 00:42.260
but actually the same place in memory in all instances of this component,

00:42.260 --> 00:48.770
so if we create the component twice as we do here, I actually do have two instances with the same data object.

00:48.800 --> 00:54.560
The thing vuejs tries to avoid by forcing us to use a function but it's not able to detect our cheat

00:54.560 --> 00:55.170
here.

00:55.400 --> 00:58.730
So with that if I hit enter, we see critical,

00:58.730 --> 01:03.790
now we will see the problem once I add something in my template here,

01:03.950 --> 01:14.340
let's say I add parentheses where I then in the parentheses simply add a button, whoops, like this, and on

01:14.340 --> 01:18.490
this button here and it's a bit hard to read because it's a string,

01:18.510 --> 01:26.240
I say change and I want to execute with @click, a method named

01:26.280 --> 01:29.240
changeStatus, like this.

01:29.250 --> 01:31.110
Now of course I have to register that,

01:31.110 --> 01:36.780
So I will set up my methods object here and here it's fine to use an object because each method will

01:36.780 --> 01:40.900
be running only in this component context here,

01:40.920 --> 01:48.820
So here I will have my change status method which is a function where I now say this status and this

01:48.820 --> 01:53.620
is cool, we can still access this with the this keyword even though it's enclosed in a function,

01:53.630 --> 01:58.740
vuejs will handle this for us in the background equal to normal.

01:58.740 --> 02:05.100
Now if I hit control enter here and I click change, you see a change in both instances and not just

02:05.100 --> 02:09.920
in the one where I clicked it, this is the issue with having a shared data object.

02:09.920 --> 02:15.330
Again it's not an issue for the methods object here because that works differently behind the scenes

02:15.540 --> 02:21.840
because there, we do we have our change status or we do have our functions which access the current instance

02:21.840 --> 02:23.120
with the this keyword,

02:23.160 --> 02:29.160
so there we don't have a shared instance but the data, well that is the data and therefore this is one

02:29.160 --> 02:30.670
place in memory

02:30.780 --> 02:37.280
we have different pointers pointing to the same place and therefore we change the same data here.

02:37.710 --> 02:41.010
Now if I comment this out and remove my cheat,

02:41.040 --> 02:44.180
so instead here I again return an object,

02:44.220 --> 02:47.890
so a new object not a shared one with different places in memory

02:47.920 --> 02:51.630
therefore and I set my status to critical here,

02:51.830 --> 02:57.780
well now you will see that if I hit control enter and I click change, it only changes in the instance

02:57.780 --> 03:02.010
where I clicked on change. Again because now we have two different object

03:02.040 --> 03:08.400
and I mean different places in memory, two different objects in memory and we access them here with this

03:08.400 --> 03:13.620
and this refers to the different objects which is why we don't have a problem with having methods as

03:14.050 --> 03:15.090
objects here,

03:15.090 --> 03:21.350
this will only refer to the instance or to the object of this vue component.

03:21.360 --> 03:28.380
This is key to understand, this difference in objects, that each vue component is its own object

03:28.380 --> 03:32.960
but if we were to share the same data source, we would run into problems

03:32.950 --> 03:33.530
.

03:33.570 --> 03:38.860
which is why data needs to be a function and that's the only thing we need to watch out here for.

03:38.880 --> 03:42.420
With that, we saw how to create a simple component,

03:42.600 --> 03:48.900
now next I want to dive deeper into how we can use these components because right now, it's registered

03:48.900 --> 03:56.190
globally which means if I were to have a second vue instance here and I use my component there, it would

03:56.190 --> 03:58.580
use the same component setup up here.

03:58.740 --> 04:01.420
We'll have a look at how we can change this in the next video.
