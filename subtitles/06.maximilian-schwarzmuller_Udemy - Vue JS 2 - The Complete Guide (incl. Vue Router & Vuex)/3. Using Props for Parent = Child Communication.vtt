WEBVTT

00:01.770 --> 00:07.400
For transferring data from the parent to the child, we use something called props.

00:07.440 --> 00:14.010
If you come from reactjs, you already know props, it's a short form for properties and it basically

00:14.010 --> 00:16.590
means properties set from outside,

00:16.590 --> 00:23.400
so from the parent. In order to tell our child, the user detailed component here that it will receive

00:23.400 --> 00:30.700
data from outside, that it will receive such props, I add the props property to it, to this object,

00:30.720 --> 00:32.830
that's a property we haven't seen before.

00:33.210 --> 00:39.660
This happens to be an array and in this array, we specify a couple of strings where in each string, we

00:39.660 --> 00:43.570
define a property which should be settable from outside.

00:43.830 --> 00:46.860
So let's say name can be set from outside,

00:46.860 --> 00:47.850
important,

00:47.850 --> 00:54.270
this name we give it here inside of the string has to match the property we're using in our template

00:54.480 --> 01:00.390
because behind the scenes, this will create a new property we can use, just like a property we set up

01:00.390 --> 01:05.310
in our data object but now implicitly because it will be passed from outside.

01:05.550 --> 01:07.720
So this will give us access to name,

01:07.740 --> 01:11.640
of course we're still not passing it. In order to pass it,

01:11.640 --> 01:20.640
I will go to my user component and here for user detail, I can now simply say name equals and then whatever

01:20.670 --> 01:22.250
I want to pass.

01:22.300 --> 01:24.870
Now here's something we have to watch out for,

01:24.900 --> 01:29.900
I can use it like this and I'll pass Max here, so I'm not passing the name

01:29.910 --> 01:31.350
I'm changing with the button,

01:31.380 --> 01:34.680
I'm hardcoding a name I'm passing here, Max.

01:35.010 --> 01:39.310
If we save this and go back, you see Max is actually displayed here,

01:39.330 --> 01:41.310
so this works.

01:41.310 --> 01:43.760
However it's not dynamic,

01:43.980 --> 01:53.430
if I pass name here hence referring to my name property in the data property, you will see it now prints name,

01:53.490 --> 01:58.610
so it prints the string name and not the value of this name property.

01:58.620 --> 02:01.940
This is because if using name like this,

02:01.980 --> 02:07.660
so just using the property we set up here will not be dynamic,

02:07.680 --> 02:11.730
it will only pass a string. To make it dynamic,

02:11.730 --> 02:13.060
I use a colon,

02:13.260 --> 02:20.010
so v-bind would be the alternative but I'm using the shorthand. With this, I'm now referring to the

02:20.010 --> 02:27.150
name property here like we do with all attributes we're binding to with colon and then name, so source

02:27.150 --> 02:32.190
on the image would have been  another use case where we use the colon and to make it dynamic

02:32.190 --> 02:36.420
and we're doing the same here with our prop. Once I do this,

02:36.480 --> 02:38.000
you now see Max here

02:38.040 --> 02:42.300
and once I click on change my name, you see it change to Anna.

02:42.300 --> 02:49.130
Now we're passing a dynamic property using this props concept. Important,

02:49.320 --> 02:51.920
you need the colon here to make it dynamic

02:52.050 --> 02:57.860
and of course the name here has to be the same as the name you're setting up in this array here,

02:57.930 --> 03:04.140
otherwise vuejs doesn't know what to do with the attributes you are adding to user detail here. And with

03:04.140 --> 03:04.680
this,

03:04.680 --> 03:07.770
I'm passing data from the parent to the child.
