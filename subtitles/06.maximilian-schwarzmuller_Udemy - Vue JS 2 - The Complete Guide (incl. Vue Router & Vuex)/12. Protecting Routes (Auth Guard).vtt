WEBVTT

00:02.580 --> 00:07.070
In the last lecture, we finally added code to pass on this token,

00:07.080 --> 00:14.250
now I want to make sure that we can't reach the dashboard route if we're not authenticated. To do this I'll

00:14.310 --> 00:19.940
add a navigation guard, a concept I taught you about in the routing section.

00:20.160 --> 00:22.480
We set it up on a per route level,

00:22.590 --> 00:29.070
well actually you can set up guards on different levels but to prevent the access to a given route, the

00:29.070 --> 00:35.880
per route level makes sense because it checks the guard condition before actually loading the component

00:36.240 --> 00:38.910
which is of course what we want here.

00:38.940 --> 00:47.940
Now here in my route set up, I can add the before enter property, that actually will be a method and I

00:47.940 --> 00:51.310
will split this up over multiple lines to make it easier to read,

00:51.720 --> 00:59.740
this method will receive three arguments, to, that will hold information about the router going to, from,

01:00.130 --> 01:02.080
information where we're coming from

01:02.080 --> 01:08.590
and next, a function I have to execute to continue navigating. Inside the function,

01:08.590 --> 01:12.040
I now want to check whether we do have a token or not

01:12.220 --> 01:19.450
because only if we have a token the user isAuthenticated, only then it makes sense to continue. To get

01:19.450 --> 01:27.490
this information from the store, I'll import the store from ./store.js and this store I import

01:27.490 --> 01:27.950
here

01:27.970 --> 01:33.480
is the same instance as the instance I access in my components with this.$store,

01:33.490 --> 01:42.220
so we're talking about the same store. In before enter, I now simply check if store state, so store.state

01:42.220 --> 01:46.540
ID token is set,

01:46.540 --> 01:47.580
if this is true,

01:47.590 --> 01:51.010
so if we have a valid token, I'll execute next,

01:51.030 --> 02:00.940
so the navigation may continue, else if the token is false or null, if it's invalid, I will also call next

02:00.940 --> 02:04.760
but I'll pass an argument to it which will redirect the request.

02:04.810 --> 02:08.480
If you pass a string path, you will go to that path,

02:08.620 --> 02:15.760
so I want to go to /signin, this route here.

02:15.780 --> 02:23.340
Now with that, if I save this and I go back to my application and reload it to invalidate all tokens I might

02:23.340 --> 02:29.500
have, if I click on dashboard, you see instead I land on sign in,

02:29.550 --> 02:33.740
I can't go to dashboard no matter how hard I try.

02:33.780 --> 02:41.070
As soon as I do login though and I have a token therefore, I can access dashboard and this is how easy

02:41.070 --> 02:46.160
we can protect a route with before enter and by accessing the store in there.
