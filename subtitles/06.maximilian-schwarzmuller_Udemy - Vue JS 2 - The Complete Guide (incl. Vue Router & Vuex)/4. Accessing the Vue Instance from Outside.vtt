WEBVTT

00:01.680 --> 00:08.370
I was speaking about having a way to access another instance from yet another instance

00:08.630 --> 00:11.500
and we will have a look at this possibility now.

00:11.600 --> 00:14.920
Right now we always use new vue like this,

00:14.930 --> 00:21.140
so we create a new vue instance here and we don't store it in a variable, it is still created and it is

00:21.200 --> 00:29.570
managed for us, this instance exists but it is not stored in a variable. Well we can do so though,

00:29.870 --> 00:36.120
we can store it in a variable and you will often see the variable named vm for vue model since vuejs

00:36.130 --> 00:39.760
kind of represents the vue model of your application

00:39.950 --> 00:42.550
but you are free to choose any other name.

00:42.680 --> 00:44.970
So I'm going to name this vm1

00:45.290 --> 00:49.740
and my second instance will be named vm2, with that

00:49.760 --> 00:55.730
I now got my instances stored in variables and now what I can do is, I can in my second instance add a

00:55.730 --> 01:04.130
new button, change something in vue one in this first instance, I will hook it up with the add click listener,

01:04.310 --> 01:06.240
onChange for example,

01:06.260 --> 01:13.440
choose any name you like and I'll quickly add it here to my methods property in this second vue instance.

01:13.670 --> 01:21.590
So onChange will be a function here and in this function, I want to use vm1, remember this is the

01:21.610 --> 01:22.120
variable

01:22.130 --> 01:27.060
where we store the first vue instance and I want to change the title in the first instance.

01:27.110 --> 01:27.830
Let's try

01:27.830 --> 01:28.330
vm

01:28.460 --> 01:33.680
title equals changed, like that.

01:33.680 --> 01:39.510
If I hit control enter and I click here, it is changed,

01:39.840 --> 01:43.790
so we are able to access one instance from another,

01:43.830 --> 01:48.360
it's just what I mentioned before that if you do need this connection, you might want to place

01:48.360 --> 01:53.790
it in the same instance in the first place but you are able to access your instance from outside.

01:54.120 --> 01:59.490
Obviously not just from another vue instance, also from normal javascript code like here, between

01:59.490 --> 02:00.760
the two instances.

02:00.790 --> 02:06.660
This is the normal javascript code and here of course I could place a timeout where I after 3

02:06.690 --> 02:13.170
seconds access my first vue instance, whoops, have my function here first though,

02:13.710 --> 02:21.200
so where I then access my first instance, access the title and set it to changed by timer.

02:21.210 --> 02:29.630
Now if I hit control enter and we wait 3 seconds, we see the alert going off due to us watching the title

02:29.900 --> 02:32.450
and it is changed by the timer.

02:32.450 --> 02:34.560
This is not just some hack,

02:34.580 --> 02:35.900
this is perfectly valid,

02:35.900 --> 02:38.070
you may use your instance like this,

02:38.150 --> 02:40.720
you may access it from outside.

02:40.740 --> 02:48.320
Note this, that vuejs also proxies the properties we set up here in data and it does the same for our

02:48.320 --> 02:50.210
methods and computed properties,

02:50.480 --> 02:54.520
it proxies them so that we can easily access them like this,

02:54.530 --> 02:56.500
vm1.title.

02:56.540 --> 03:02.510
Keep in mind, technically vm1 is our vue instance and this instance may have whatever properties

03:02.510 --> 03:03.090
it has,

03:03.200 --> 03:10.580
it's not created by us, it certainly by default hasn't our title property, our title property is

03:10.580 --> 03:16.640
set up on this data object we pass on this object we pass to the vuejs constructor.

03:16.910 --> 03:23.030
So vuejs does this proxying for us automatically which makes it easier for us to access it from

03:23.030 --> 03:24.000
outside.

03:24.070 --> 03:27.160
I'll come back to this proxying in the next video.
