WEBVTT

00:02.480 --> 00:07.420
Over the last lectures, we covered a lot of core features of axios,

00:07.440 --> 00:14.040
there's one other supercool feature which I also want to share with you and that is the creation of

00:14.070 --> 00:16.280
custom axios instances.

00:16.440 --> 00:22.350
Right now, what we're doing is we're always using the global axios instance which we import from the

00:22.350 --> 00:23.430
axios package,

00:23.430 --> 00:24.540
nothing wrong with that,

00:24.600 --> 00:31.180
if your whole application shares the same global config as we set it up here, that's perfectly fine.

00:31.530 --> 00:38.640
But imagine an application where you target different URLs and for one set of URLs, you

00:38.640 --> 00:42.500
want to attach this authorization, for the other set,

00:42.510 --> 00:46.310
you don't want to do that. With custom instances,

00:46.410 --> 00:49.440
you can easily get into such a world.

00:49.530 --> 00:55.650
Now to use a custom instance, I'll create a new file for that even though that's of course optional, I'll

00:55.650 --> 01:00.660
name it axios-auth.js

01:00.680 --> 01:07.070
because let's pretend that for authenticating and for sending requests from the sign up and sign

01:07.070 --> 01:12.690
in.vue files, we actually want to set a different base URL, here it's the same

01:12.740 --> 01:17.210
but later when we enter the authentication module, this will actually become relevant,

01:17.210 --> 01:20.510
so let's already prepare it here. In axios-auth,

01:20.510 --> 01:25.790
the first thing I'll do is I'll import axios from axios, like this.

01:25.790 --> 01:32.900
Now with that, we can create a new axios instance, so I'll create an instance constant here and in that, I'll

01:32.950 --> 01:39.600
store axios and then call create, create will eventually return this new instance.

01:39.890 --> 01:44.810
We can now configure this instance with the same config you learned about already,

01:44.870 --> 01:53.450
so we pass a javascript object and then here, we could set some headers or we simply set up a base

01:53.450 --> 01:56.830
URL, I'll also show how to set headers in a second.

01:56.840 --> 01:59.650
So base URL here of course is always the same

01:59.650 --> 02:01.880
but let's pretend it would be a different one,

02:02.120 --> 02:07.440
so I'll copy the base URL from my main.js file,

02:07.550 --> 02:13.900
here this one. I'll copy this string and use it here as a value for base URL,

02:14.120 --> 02:19.900
if you also want to set up your own headers, you can simply access instance defaults,

02:19.910 --> 02:24.920
so this instance again has a default object but these defaults will now only apply to this instance

02:24.920 --> 02:27.150
and not to the global axios instance

02:27.530 --> 02:34.790
and on this defaults object, you can set up exactly the same as you could before on the global instance.

02:34.790 --> 02:39.740
So here, you can also access headers common

02:39.860 --> 02:47.480
and let me simply set the something header here to something.

02:47.490 --> 02:53.710
Now all I have to do is I have to export this constant and I'll export it as the default here,

02:53.730 --> 03:00.270
so default instance and now we can import it from anywhere in our application where we want to use this

03:00.270 --> 03:01.070
instance.

03:01.080 --> 03:07.110
Now as I said, I want to use it in the auth related files, so I'll go to the signup.vue file and

03:07.110 --> 03:13.380
there, I now no longer want to import the global axios instance but my own one, so I'll adjust the

03:13.380 --> 03:24.550
path and simply import from two levels up, axios-auth and I can still name this axios,

03:24.570 --> 03:27.980
you can name this axios instance, whatever you want,

03:27.980 --> 03:33.780
I'll stick to axios so that I don't even have to adjust any of the other code because that's a cool thing.

03:33.850 --> 03:36.950
The axios instance works just like the global instance,

03:36.950 --> 03:43.100
it's just a customized version and we can create as many custom instances as we want and need

03:43.280 --> 03:50.210
and therefore, we get many customized instances, each with its own set of set up and configuration so

03:50.210 --> 03:57.200
that we can really have the best of both world, very detailed and request specific configuration and

03:57.200 --> 04:00.110
still using this on a global level

04:00.110 --> 04:01.870
as far as possible.

04:02.240 --> 04:03.730
So now let's save this,

04:03.740 --> 04:08.810
we're now using our custom instance, we will be able to tell by the fact that we have this something

04:08.860 --> 04:12.010
header. If we now go back to signing up,

04:12.050 --> 04:13.940
this is where we use that instance,

04:14.300 --> 04:19.820
if I do sign up here, that's not my real age

04:19.830 --> 04:21.620
by the way, a little bit older.

04:21.870 --> 04:25.620
So if we do sign up here, submit this,

04:25.800 --> 04:32.650
we actually see that it still works, if we inspect the network and the post request there under headers,

04:32.670 --> 04:36.470
we also see that we did set the something header.

04:36.600 --> 04:42.090
So we did indeed use our own custom instance and it still worked as before,

04:42.150 --> 04:48.790
of course so does the dashboard. So custom instances are the last feature I wanted to show you,

04:48.900 --> 04:54.390
it's super useful and gives you a lot of power for your vue applications.
