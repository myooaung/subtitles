WEBVTT

00:02.390 --> 00:06.790
We learned about the basics of using axios with get and post.

00:06.800 --> 00:14.120
Now one thing we do right now is we reuse the same base URL, like this one here,

00:14.120 --> 00:20.360
actually we reuse the same entire URL since also users.json is the same in sign up and dashboard

00:20.360 --> 00:21.210
component

00:21.380 --> 00:27.260
but let's pretend that this would be different and that we only had the same base URL, though what

00:27.260 --> 00:29.920
I will show you would also work if you copy everything.

00:30.230 --> 00:34.930
What I want to show you is that you can set up a base URL when using axios,

00:34.930 --> 00:42.290
let's do this in the main.js file simply because it runs as the first file before our component

00:42.290 --> 00:43.700
code runs.

00:43.700 --> 00:51.380
So here, I will import axios from axios and you could outsource the logic I'm writing here into a separate

00:51.380 --> 00:53.140
file if you wanted to.

00:53.150 --> 00:58.540
Now as I mentioned earlier, you don't need to and you can't use vue use here

00:58.550 --> 01:01.420
so what do we do instead is we just access axios

01:01.550 --> 01:05.260
and now if we want to set a base URL on axios,

01:05.360 --> 01:13.220
you can simply access the defaults object. As the name suggests, this is the object axios ships with which

01:13.220 --> 01:17.450
allows you to set up some default settings and the settings you set up here,

01:17.480 --> 01:24.500
it could also be set up as request specific settings by passing a second or a third argument to the request,

01:24.650 --> 01:26.480
this javascript object.

01:26.480 --> 01:33.230
So there you could set up options for this specific request, here we're setting up global options which

01:33.230 --> 01:35.570
will be applied to any request,

01:35.570 --> 01:38.420
now what can we do on this defaults object?

01:38.670 --> 01:45.530
A full list of things you can configure, it can of course be found on the axios documentation, there

01:45.530 --> 01:51.850
if you scroll down, you'll find details about the request configuration you can apply.

01:51.970 --> 01:55.020
I will focus on the base URL,

01:55.090 --> 01:57.700
that is one key you can set up here,

01:57.730 --> 02:04.540
you can set base URL with URL all being capital case characters and then you set this equal

02:04.540 --> 02:05.550
to a string.

02:05.690 --> 02:09.610
Here I will cut this code to cut the string,

02:09.680 --> 02:16.660
so really remove it from my dashboard.vue file and enter it into this base URL in the main.js

02:16.660 --> 02:17.390
.

02:17.560 --> 02:22.310
and I'll also go to the signup.vue file and get rid of this URL here too,

02:22.620 --> 02:23.800
so that in both files

02:23.800 --> 02:29.620
I only have the path I want to access and since that's the same path, we could actually also extract

02:29.620 --> 02:30.040
that

02:30.130 --> 02:35.290
but I'll leave it there for demo purposes so that we don't just have empty requests here.

02:35.620 --> 02:40.400
So we now get the base URL set up here and that's all we need to do,

02:40.540 --> 02:46.710
as I mentioned earlier axios which you import here is the same shared instance across all your files,

02:46.870 --> 02:52.720
so settings you set in the main.js file will effect the axios instance, use the dashboard sign up

02:52.780 --> 02:59.290
or any other place in your app. So with that, we can go back to our application and we can already see it if I

02:59.290 --> 03:00.300
reload,

03:00.580 --> 03:02.030
we don't get an error,

03:02.140 --> 03:07.330
well obviously we would get one if we would now target an invalid URL.

03:07.420 --> 03:09.930
So that's the first important thing I wanted to mention,

03:09.970 --> 03:17.170
you can set up configurations either on a request level or as shown here on a global level and feel

03:17.170 --> 03:23.150
free to dive into the axios documentation to learn about all possible things you can set up here.

03:24.600 --> 03:29.780
One common configuration I want to share with you is the configuration of headers,

03:29.830 --> 03:34.620
there on the defaults object to make it or to configure it for every request,

03:34.620 --> 03:37.700
you can also set up default headers,

03:37.800 --> 03:40.730
actually you can add something to the default headers,

03:40.740 --> 03:46.050
axios will always set up some default headers but if you want to pass some specific headers, you can

03:46.050 --> 03:50.070
set them up here and axios will merge them. There on the headers,

03:50.060 --> 03:55.430
you actually got the choice between a couple of header specifications or targets.

03:55.590 --> 04:01.620
You can choose common to set up headers which should be applied to any request, no matter which type it

04:01.620 --> 04:07.540
is, there you can then set up your own header by adding a new property like this,

04:07.590 --> 04:10.010
for example the authorization header,

04:10.030 --> 04:15.820
you're free to add any header you want and then set this to something,

04:15.880 --> 04:21.140
this could be a good way to pass some generic token to the backend on every request.

04:21.520 --> 04:27.850
If you got more specific read needs, you can also target headers but there for example just target get

04:27.850 --> 04:34.590
requests by targeting get and then adding some specific header here,

04:35.020 --> 04:38.350
so then you could also set up something like this.

04:40.030 --> 04:47.890
With that in place, if we now go back to the application and I reload this page, you'll see it works as

04:47.920 --> 04:48.740
before

04:48.850 --> 04:54.240
but if we inspect the network tab here, what we can see is quite interesting.

04:55.210 --> 05:03.970
There if I inspect this request to users.json and I go to headers, you can see that on the request

05:03.970 --> 05:07.630
headers at the bottom, this authorization was passed

05:07.780 --> 05:12.950
and since this was a get request, you can also see that accept was set to application.json.

05:12.970 --> 05:19.190
That's very interesting and this is another cool way of setting some global config,

05:19.440 --> 05:24.280
so overall the key takeaway of this lecture is you can set up configuration defaults,

05:24.300 --> 05:31.440
you could also set all these things on a request level, on a per request level by passing it as an additional

05:31.470 --> 05:33.590
argument to your request methods.

05:33.780 --> 05:40.380
But being able to set up some global config can save you a lot of time and make your code easier to

05:40.380 --> 05:41.110
maintain.
