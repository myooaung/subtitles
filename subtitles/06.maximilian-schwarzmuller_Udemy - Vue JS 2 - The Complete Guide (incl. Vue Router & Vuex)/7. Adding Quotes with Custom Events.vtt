WEBVTT

00:01.660 --> 00:06.550
So we're at the point that we're able to create a quote here, we're binding it with two-way data binding to the

00:06.550 --> 00:07.760
quote property,

00:07.810 --> 00:13.030
now I want to emit that to send this new quote to the parent component which in the end even though

00:13.030 --> 00:14.820
I haven't embedded it yet will hold

00:14.810 --> 00:16.210
the new quote here

00:16.420 --> 00:19.080
and which handles all our quotes.

00:19.090 --> 00:27.640
So in new quote here, in create new, I will call this emit, $emit to emit the quote added event,

00:28.210 --> 00:32.540
name is of course totally, you're free to choose whatever name you like,

00:32.740 --> 00:34.580
and there I will add this quote.

00:34.630 --> 00:40.490
Remember, this quote will be updated all the time because we're binding it with two-way binding.

00:40.870 --> 00:48.760
Therefore I will also reset this quote after sending it so that the form gets cleared. With this I'm emitting

00:48.760 --> 00:55.260
this, now in my app.vue file, in this root component, there

00:55.270 --> 01:05.240
I want to implement this new quote component. To do so and keep in mind in new quote, we do have a separate

01:05.240 --> 01:10.680
row, so to do so here I will simply add a new component,

01:10.850 --> 01:12.580
therefore adding a new import

01:12.570 --> 01:23.020
first, new quote from NewQuotes.vue and then down there, register it as a local component, app

01:23.060 --> 01:28.420
new quote shall be new quote here and then adding the selector up there,

01:28.480 --> 01:30.830
app new quote, like that.

01:31.040 --> 01:33.830
If I save this, we already see it here,

01:33.890 --> 01:36.110
looks a bit different than before but that's okay,

01:36.110 --> 01:41.590
we do have the button here, we can create it and now it would be nice to

01:41.650 --> 01:43.590
well actually listen to that event

01:43.700 --> 01:44.180
so that

01:44.360 --> 01:48.450
if I do enter a new one, well it gets added to the array.

01:48.800 --> 01:50.990
Let's do this too.

01:51.180 --> 01:54.310
I already do emit the event here, quote edit,

01:54.500 --> 01:55.920
therefore in the parent component,

01:55.920 --> 02:04.980
I can simply listen to quote edit on the selector and then execute new quote

02:05.010 --> 02:16.300
for example, whatever you like as a name. I will add my methods object here to set up the new quote method

02:16.800 --> 02:24.280
and of course here, I actually do get some data passed, the data I do get passed

02:24.300 --> 02:26.500
is the quote which was added,

02:26.760 --> 02:32.330
so I want to fetch this here in this component too and use it down there in the new quote method.

02:32.670 --> 02:38.420
Well we learned that vuejs will automatically provide us this data state on our custom event,

02:38.520 --> 02:41.840
so here with new quote, I can simply access the quote,

02:42.030 --> 02:49.100
I don't need to change the event up here, though I could also set it like this,

02:49.200 --> 02:52.190
$event like that but I don't need to do this,

02:52.190 --> 02:57.120
vuejs will do that implicitly. So here i can then use this new quote

02:57.330 --> 02:58.810
and how do I want to use it?

02:59.010 --> 03:09.070
I simply want to say this quotes, whoops, quotes push quote, like that.

03:09.590 --> 03:11.810
Well with this, let's see if this works,

03:11.840 --> 03:13.260
if I add something new,

03:13.520 --> 03:16.990
wou see it gets added here. So we get this,

03:17.030 --> 03:20.880
what's missing is the functionality to delete a quote,

03:21.140 --> 03:24.630
this info box at the bottom which tells us that we can delete a quote

03:24.770 --> 03:31.610
and of course, the logic to handle our state, to count how many quotes we have and to show the progress

03:31.610 --> 03:32.030
bar.
