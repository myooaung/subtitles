WEBVTT

00:02.810 --> 00:08.940
So a lot of vuex magic was done over the last lectures, a lot of things that don't really are connected

00:08.940 --> 00:11.700
to authentication, at least not directly.

00:11.790 --> 00:19.620
The core issue we have is that damn token which we need to authenticate ourselves, the auth object on firebase

00:19.920 --> 00:25.950
isn't available because we've got a token, we got it in the store but we're not passing it on with our

00:25.950 --> 00:29.180
http requests to our firebase database,

00:29.190 --> 00:31.390
time to change that. Now

00:31.410 --> 00:39.590
the cool thing is passing on the token is actually super simple, in store user where we access a URL where

00:39.600 --> 00:47.670
we need the token, we can also extract the current state from our context object and the state is of

00:47.670 --> 00:50.660
course where we store the token.

00:50.700 --> 00:58.320
Now here, we can simply check if state ID token is set,

00:58.540 --> 01:03.800
so if this field is not null and if this were null,

01:03.810 --> 01:05.490
so I'm adding an exclamation mark,

01:05.680 --> 01:10.010
we could just return and not make this http request.

01:10.150 --> 01:15.790
In all other cases, we know we have the token and now we simply have to append something to that

01:15.790 --> 01:20.530
URL and that of course now again depends on the backend you're using,

01:20.530 --> 01:26.680
some might require you to send an authorization header which contains the token, firebase requires

01:26.680 --> 01:33.610
you to pass an additional query param, auth. Auth equals is what you have to add

01:33.820 --> 01:42.400
and then you set this equal to state ID token so to that token you got and I'll do the exact same thing

01:42.820 --> 01:44.900
for my other request,

01:45.160 --> 01:53.580
so for fetching users here, there I'll replace this with global axios post in my ID token check, post

01:53.600 --> 01:58.590
is then again replaced with get of course because I have a get request and that is all.

01:58.590 --> 02:02.650
Now the user data here, this argument of course also has to be removed,

02:02.650 --> 02:04.010
it's a get request

02:04.240 --> 02:11.350
but with that, we're now passing on the token, for firebase as a query param, for your own backend,

02:11.470 --> 02:12.690
maybe differently,

02:12.790 --> 02:18.280
the key thing is we're extracting it from the state, from the store therefore and we're appending it

02:18.310 --> 02:26.080
to our request. With that if we now go back and I sign up again where we should then also store the user

02:26.080 --> 02:35.500
data, if I use now another unused email address, enter an age here, some password. maybe a hobby and accept the terms

02:35.500 --> 02:36.780
and I hit submit,

02:36.790 --> 02:44.080
now you see we get two successful responses and now you can also see in your firebase database, if you

02:44.080 --> 02:45.270
click on data,

02:45.560 --> 02:47.530
that we got new users here,

02:47.680 --> 02:50.400
that's the user I just created.

02:50.440 --> 02:52.390
So this is now working,

02:52.390 --> 02:56.370
now we're finally using that token for something good.

02:56.650 --> 03:03.910
Now if we go back to the application to the dashboard, there we still get an error though because we

03:04.090 --> 03:10.960
essentially have an error in the state and we also tried to read the property e-mail in at a point

03:10.960 --> 03:11.310
of time

03:11.320 --> 03:14.980
we don't have it yet because we tried to output it right from the start

03:14.980 --> 03:16.840
even if we have no e-mail yet.

03:16.930 --> 03:19.070
Now let's fix this quickly too,

03:19.340 --> 03:22.060
let's first of all work on that e-mail thing.

03:22.270 --> 03:28.690
A nice fix is to go to the e-mail computed property and there where we try to fetch it on a user even if user

03:28.690 --> 03:29.780
might be null,

03:29.830 --> 03:42.200
let's simply return either this store getters user, either false if that is falsy

03:42.210 --> 03:50.490
so that will be the case as long as user is null or return our other original code if user is set,

03:50.520 --> 03:56.220
so this should prevent this error. Now the state is not defined, error is stemming from the store.js

03:56.230 --> 04:04.470
file, in fetch user I'm accessing state ID token but I forgot to also extract state from this

04:04.470 --> 04:05.880
context object,

04:05.880 --> 04:11.020
so let me quickly do this here. As soon as I do this,

04:11.040 --> 04:16.040
if I now reload this page, you'll see I still got this null error because I messed this up,

04:16.050 --> 04:19.570
of course I want to check if not this store getters user,

04:19.560 --> 04:23.540
so if this is falsy and as I explained it but didn't code it.

04:23.820 --> 04:31.010
So now with that saved, now if I reload, you see false here. Now it never updates though,

04:31.060 --> 04:32.990
the reason for this makes sense though,

04:33.070 --> 04:36.770
I reloaded the app and therefore, our token was lost.

04:36.790 --> 04:41.330
Let me stay in the app and quickly login and now go to dashboard

04:41.530 --> 04:48.030
and now you see, it correctly switches and of course since outputting false isn't too pretty,

04:48.040 --> 04:55.920
we can also use v-if on the paragraph and check that we only output this if e-mail is true-ish,

04:55.930 --> 04:59.440
so as long as it is false, the whole paragraph will be hidden.

04:59.440 --> 05:01.020
So now if I reload this,

05:01.450 --> 05:02.720
we don't even see that,

05:02.860 --> 05:09.030
if I do sign in though however again, I go back to dashboard, it appears after it loaded it.

05:09.310 --> 05:11.100
So now all of that is working,

05:11.170 --> 05:17.620
now we're using this token, we're passing it on and therefore, we get authentication implemented.

05:17.740 --> 05:20.270
There are still things we can improve though,

05:20.380 --> 05:26.800
for example updating the header depending on the authentication state and preventing us from accessing

05:26.800 --> 05:28.420
dashboard in the first place

05:28.510 --> 05:35.710
if we're not authenticated. Let's start with this access prevention discard in the next lecture.
