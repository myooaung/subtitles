WEBVTT

00:01.870 --> 00:03.860
So we installed the router from the last video,

00:03.880 --> 00:09.680
now let's add it to our application and then set up some routes. We do add it in this main.js

00:09.880 --> 00:16.870
file, the exact same place where we add a vue resource before and we do add it in the same way. We import it,

00:16.960 --> 00:22.810
vue router for example, this name is up to you from vue router, like this

00:22.810 --> 00:29.380
and with that added here or with this import added, I now again use vue.use here to add the new plugin to vue

00:29.710 --> 00:32.140
and here I add the vue router, that's all.

00:32.140 --> 00:36.650
With that routing is enabled, the router is added to the application.

00:36.700 --> 00:40.800
The next thing is we should set up some routes so that we can see this,

00:40.930 --> 00:46.840
now you could set them up in a separate file and then import this file into this main.js file,

00:46.840 --> 00:50.340
you definitely want to register them here though on your route vue

00:50.530 --> 00:56.740
instance especially when creating single page applications, you will only have one route instance, this

00:56.740 --> 01:02.230
one here and thereafter, it's only about switching out components which yes, are kind of their own instances

01:02.470 --> 01:06.050
but you will have only one instance created with the new keyword.

01:06.070 --> 01:11.170
So definitely register your routes in this root instance otherwise you will not get the desired behavior

01:11.200 --> 01:12.970
and some problems and errors.

01:13.390 --> 01:16.830
And then again, you can set it up here in this file or outsource it,

01:16.840 --> 01:22.000
now I will outsource it since in a real application, you might have a couple of different routes and this

01:22.000 --> 01:24.880
could quickly blow this file here,

01:25.030 --> 01:28.030
so I will set up a routes.js file.

01:28.030 --> 01:33.550
Now in this routes.js file, I want to export a constant named routes which should hold my routes,

01:33.610 --> 01:36.150
holding routes means it has an array and 

01:36.310 --> 01:41.200
in this array, we got a couple of different objects where each object will represent a route

01:41.260 --> 01:42.900
as soon as we register it of course,

01:42.940 --> 01:44.700
right now it's only a normal array,

01:45.040 --> 01:48.250
so let's create the first route, this first object,

01:48.370 --> 01:50.710
Each route needs a path,

01:50.710 --> 01:54.980
this is what will be appended in the URL to your domains,

01:55.030 --> 02:01.370
so after your domain. So if your domain is example.com, whoops, you get the point of it, is example.com

02:01.360 --> 02:08.860
and here you have a path of let's say user, then this would trigger whenever we visit example.com

02:08.860 --> 02:10.590
/user,

02:10.900 --> 02:16.510
this is how we set this up. So we set up the path first, slash and then well the name of this segment

02:16.510 --> 02:19.570
or whatever we want to be displayed in the URL.

02:19.720 --> 02:20.980
So this is our path

02:21.220 --> 02:26.140
and then the next step is to set up the component we want to load when we visit this path,

02:26.170 --> 02:33.460
now since I visit user here, I want to display the user component, so I'll import it here, give it a name of

02:33.460 --> 02:41.600
user maybe from ./component/user user.vue in this case here,

02:41.880 --> 02:45.700
so I import this file and then I simply add it like this.

02:45.710 --> 02:52.560
This now will tell vuejs whenever we visit our domain/user, load this component.

02:52.810 --> 02:59.950
Now having only one path is boring so let's add a second one and let's add the home component here to

02:59.950 --> 03:00.460
it,

03:00.460 --> 03:03.040
so this component I created over there,

03:03.070 --> 03:06.950
that of course lives in the components folder not in the user subfolder

03:07.090 --> 03:13.100
and here I want to visit this let's say if the path is actually empty.

03:13.240 --> 03:15.570
So this shall be our root route,

03:15.610 --> 03:17.330
what gets loaded first,

03:17.530 --> 03:20.350
this can be done by setting it up like this,

03:20.350 --> 03:25.550
so whenever we have just our domain/nothing, I want to load the home component here.

03:25.660 --> 03:27.900
So these are the two routes I set up here,

03:28.180 --> 03:33.380
now having the routes in this file doesn't do that much, this file is not even getting used anywhere.

03:33.580 --> 03:38.380
So let's go back to the main.js file because I said we should register our routes here,

03:38.440 --> 03:42.520
so here is a good place to import our routes.

03:42.520 --> 03:50.980
So here I shall import from my routes.js file and since I named the constant there, I have to

03:50.980 --> 03:53.260
use the syntax with the curly braces

03:53.440 --> 03:58.260
and I can import the routes, again this is the constant I'm exporting here.

03:58.330 --> 04:06.700
So with that imported here, I can now after using my router, so after registering this plugin I can now

04:06.790 --> 04:15.480
add something, I can create a new router also stored in a constant and I'll name it new vue router

04:15.530 --> 04:19.550
using this package I imported here. In this router,

04:19.580 --> 04:23.750
I have to pass an object where I set up my router,

04:23.780 --> 04:31.350
so here I set it up by passing routes which I import here. Now due to ES6,

04:31.470 --> 04:37.380
if I just pass this to this object, this will automatically create this mapping to it so it will have

04:37.380 --> 04:40.670
a key of routes and value will then route, vue route too, 

04:40.710 --> 04:43.500
I can do it as if I use the same name for key and value

04:43.650 --> 04:45.150
so this is just a shortcut.

04:45.360 --> 04:51.300
This will now pass my routes to the vue router and the final step is to go to my vue instance here

04:51.660 --> 04:53.250
and add the router to it

04:53.280 --> 04:57.210
and again I use the same shortcut where key and value is the same.

04:57.210 --> 05:03.390
This would be the long version I can just pass router. With that, my routes are registered,

05:03.420 --> 05:05.800
now we also need a place to render them.

05:05.880 --> 05:10.410
So we need a place in our html code where vuejs should actually load that component,

05:10.410 --> 05:16.770
so either the home or the user component because thankfully it will, it will not replace our whole

05:16.770 --> 05:18.750
page with this component,

05:18.810 --> 05:20.310
thankfully it will not do that,

05:20.430 --> 05:22.680
so we have to tell it where to load it then.

05:22.920 --> 05:29.250
So back in app.vue file which holds my main template, I'll add a horizontal line and then we simply mark

05:29.310 --> 05:35.550
the place where the component of the currently active route should be loaded with router vue, with this

05:35.550 --> 05:36.680
component.

05:37.080 --> 05:43.050
That's a built in component shipping with the vue router and it tells the router please load the component

05:43.050 --> 05:45.710
which has to be loaded in this place.

05:46.050 --> 05:52.680
Well and with that, if we now navigate back and reload, we automatically see the home page because that

05:52.680 --> 05:53.820
is our root route,

05:53.820 --> 05:54.900
keep that in mind,

05:54.900 --> 05:57.340
we set up an empty path for that.

05:57.420 --> 06:03.560
You also see our URL got adjusted and now has this hash tag, that's the default mode the vue

06:03.550 --> 06:06.090
router works with, this hash mode,

06:06.090 --> 06:09.750
I'll come back to the available nodes and how they work in one of the next videos,

06:09.750 --> 06:11.550
for now let's ignore it.

06:11.580 --> 06:17.220
We can now simply add user at the end of this route to go to our user page, just like that

06:17.400 --> 06:20.710
and this already is our router in place.

06:20.750 --> 06:22.860
We were able to navigate and load our routes,

06:22.860 --> 06:24.320
we set up our routes,

06:24.330 --> 06:30.180
now of course it would be nice to have some links in our page so that we can actually click somewhere

06:30.210 --> 06:33.590
to navigate instead of having it to hardcode in the URL.

06:33.630 --> 06:38.830
And well, we'll also have a look at this URL and see what this is all about with this hashtag,

06:38.940 --> 06:41.510
actually I'll do this right in the next video.
