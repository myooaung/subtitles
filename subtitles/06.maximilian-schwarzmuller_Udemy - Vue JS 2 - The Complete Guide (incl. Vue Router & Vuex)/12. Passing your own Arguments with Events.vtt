WEBVTT

00:01.880 --> 00:10.640
What if we wanted to pass our own argument? For example here when increasing the counter, we're currently

00:10.640 --> 00:12.230
incrementing it by one,

00:12.380 --> 00:18.890
what if we wanted to pass our own step by which it should get incremented? Nothing easier than that, here

00:18.890 --> 00:25.310
when calling increase or setting up this reference, I can also add parentheses and pass my own argument,

00:25.490 --> 00:33.230
for example two. Now with this, I say or I want to say that I want to increase this counter by two, since

00:33.230 --> 00:35.070
I've pass it as an argument here,

00:35.090 --> 00:39.560
I can go down there to my method and in the increase function,

00:39.590 --> 00:45.500
I simply listen to step or add the argument step here.

00:45.690 --> 00:52.290
I can then say this.counter+= step to now increase it by this step instead of one.

00:52.290 --> 00:57.660
So if I save this, you're now see I click and it increases by two all the time,

00:57.780 --> 01:00.760
this is how easy I can pass my own argument.

01:01.020 --> 01:07.800
And finally what if I not only wanted to pass my own argument but both my own argument and this automatically

01:07.800 --> 01:09.530
created event object?

01:09.660 --> 01:11.340
That's also very simple,

01:11.460 --> 01:13.540
I can simply add a second argument

01:13.680 --> 01:16.160
and now here the naming is important.

01:16.440 --> 01:23.130
Vuejs automatically fetches this default event argument and stores it in a kind of a variable we

01:23.130 --> 01:26.260
can access here named $event.

01:26.340 --> 01:28.260
So this is a protected name,

01:28.260 --> 01:32.300
don't override it and make sure to not get it wrong.

01:32.640 --> 01:38.460
Doing it this way, I can now also fetch this event here and I could use it in my increase method if

01:38.460 --> 01:45.430
I wanted to too conveniently well use both my own argument and the automatically created

01:45.450 --> 01:50.730
and now also passed event object future vuejs gives us access to.
