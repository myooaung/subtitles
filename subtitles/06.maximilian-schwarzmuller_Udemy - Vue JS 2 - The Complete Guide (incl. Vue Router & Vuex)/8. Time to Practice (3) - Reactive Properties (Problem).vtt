WEBVTT

00:01.970 --> 00:05.560
Back with another exercise. We learned about computed properties,

00:05.570 --> 00:11.880
another key feature of vuejs which makes reacting to data changes and updating related or

00:11.980 --> 00:13.590
depending values

00:13.590 --> 00:14.830
very very easy,

00:14.870 --> 00:21.110
so this is something you will use a lot as it really makes your application more dynamic and more flexible.

00:21.410 --> 00:27.650
So therefore, it's also important to really understand how to work with it and to get these core mechanics

00:27.650 --> 00:28.810
set,

00:28.820 --> 00:31.450
so here I prepared two exercises 

00:31.460 --> 00:37.820
and even though it's only two, it should really get you into computed properties and watching properties

00:37.880 --> 00:38.930
as well.

00:39.120 --> 00:46.910
In the first exercise, I want you to train or to practice the computed properties, we have two buttons

00:46.910 --> 00:53.020
here, add 5 and add 1 and we have a current value which initially set to zero.

00:53.050 --> 01:00.060
The buttons here as you can see increment or increase the value property by either 5 or 1 and then

01:00.060 --> 01:06.850
here, I want to show a result down here which doesn't exist yet which either says not there yet

01:06.860 --> 01:12.950
or whatever you like as long as the value is let's say not equal to 37, of course feel free to choose

01:12.950 --> 01:21.200
your own check or your own threshold and then print done whenever the value is equal to 37 or is above,

01:21.350 --> 01:23.390
whatever your condition is.

01:23.390 --> 01:28.670
The key thing here of course is not the value to which you're limiting or what which you're reacting

01:28.670 --> 01:36.050
here but that the result property we're going to create will depend on this value property,

01:36.080 --> 01:39.610
thus a typical use case for a computed property.

01:40.100 --> 01:48.140
Well the second exercise then is that I want to watch for changes in the result which we are yet to

01:48.140 --> 01:49.060
create

01:49.280 --> 01:56.960
and once it does change, I want to reset the value after five seconds and here as a hint, the function

01:56.960 --> 02:02.810
for setting this timer would be set timeout with 5000 milliseconds as the second argument and the

02:02.810 --> 02:06.440
function which runs your code as the first argument.

02:06.470 --> 02:09.520
Side note again, this will then take a closure,

02:09.560 --> 02:16.760
so you will have to bind this, the this keyword to a new variable to be able to access it inside of

02:16.760 --> 02:19.050
the callback function in set timeout.

02:19.050 --> 02:21.570
With that, in the next video,

02:21.650 --> 02:26.850
we can solve this together if you are not sure or if you simply want to compare solutions.
