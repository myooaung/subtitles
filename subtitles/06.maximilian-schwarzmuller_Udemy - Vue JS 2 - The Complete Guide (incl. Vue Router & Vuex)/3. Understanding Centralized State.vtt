WEBVTT

00:02.340 --> 00:09.490
Vuex and the name does already give us a hint that it might be kind of similar to redux or flux's

00:09.920 --> 00:14.820
implementations and that kind of is, though it has some differences compared to these approaches,

00:14.840 --> 00:22.490
it's kind of also directly aimed at vuejs and it actually is written by the vuejs team so

00:22.910 --> 00:28.790
it does have some adjustments but the general idea is the same. So vuex, this pattern we're going

00:28.790 --> 00:36.530
to learn in this module has the idea of using a central store where our state is stored and that is

00:36.530 --> 00:37.210
key,

00:37.370 --> 00:45.050
we have one file we could say in our application where we store our state, our application state, that

00:45.050 --> 00:48.760
does not mean that our components can't have their own state.

00:48.830 --> 00:54.200
If you have a property in a component which is only used in this component and only change in this component,

00:54.230 --> 01:00.620
there is no need to put it in the application state but everything which you use in different parts

01:00.620 --> 01:08.180
of your application should go in there. With such a central state, we could access it from one child or

01:08.180 --> 01:10.190
from one component and change it

01:10.190 --> 01:15.680
and then in another component where we want to get our data, we can simply access it to get the data.

01:15.950 --> 01:23.340
So before adding more parts or more components to this picture which are also part of vuex,

01:23.450 --> 01:28.580
let's start with this simple concept of having a central state and let's see how that already improves

01:28.640 --> 01:29.820
existing application.
