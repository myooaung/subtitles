WEBVTT

00:02.200 --> 00:12.740
Speaking of show and hide, vuejs indeed also has an option to v-if. V-if as mentioned before completely

00:12.800 --> 00:16.510
attaches or detaches an element to the dom,

00:16.580 --> 00:20.160
so it removes it or it adds it, it doesn't hide it.

00:20.660 --> 00:24.980
Well if you want to hide it, might be that you do want to hide it,

00:25.040 --> 00:30.180
you can do this by using v-show instead.

00:30.260 --> 00:33.880
It has the same syntax as v-if besides the name,

00:34.010 --> 00:35.810
so v-show instead of v-if

00:35.810 --> 00:42.410
works fine but it allows us to now switch this, remove it

00:42.410 --> 00:49.220
and now if we inspect this do you also see me text which has v-show attached, watch this element here

00:49.220 --> 00:50.100
on the right,

00:51.060 --> 00:54.240
here, do you also see me? If I hit switch,

00:54.330 --> 00:55.810
it's still there

00:55.920 --> 00:59.060
but it got this new style, display none.

00:59.100 --> 01:00.540
That's the key difference,

01:00.540 --> 01:01.770
it's not detached,

01:01.770 --> 01:05.290
it's still there, it's just not displayed anymore

01:05.300 --> 01:08.810
through css. This might also be the behavior we want,

01:08.850 --> 01:11.640
maybe you don't want to detach the element,

01:11.730 --> 01:15.200
maybe for some reason you want to keep it around in your dom

01:15.300 --> 01:17.660
and then this would be the way to do it.

01:17.790 --> 01:25.350
If you are sure you don't want to detach it, use v-show to only hide it and not remove it entirely

01:25.350 --> 01:26.510
from the dom.

01:26.520 --> 01:33.090
The default though will be to use v-if as it is also better performance-wise to have less elements in the

01:33.090 --> 01:33.710
dom,

01:33.720 --> 01:39.620
it makes sense removing not required elements. But if you have the special case that you absolutely need it,

01:39.800 --> 01:40.860
use v-show.
