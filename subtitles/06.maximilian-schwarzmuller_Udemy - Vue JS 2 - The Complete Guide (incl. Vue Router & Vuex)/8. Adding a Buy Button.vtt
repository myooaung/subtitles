WEBVTT

00:02.030 --> 00:05.080
We set up our stocks to be visible like this,

00:05.090 --> 00:07.530
now we also want to fill them with some data,

00:07.760 --> 00:12.980
we get some dummy data here, we'll soon replace this but for now it's good to use that here.

00:13.310 --> 00:20.300
I of course want to send the stock I'm at in this loop here to this stock component.

00:20.540 --> 00:22.810
We learned how to do this with props,

00:22.940 --> 00:30.460
so I'm going to add this stock prop here and notice the colon to bind it dynamically to the stock variable

00:30.470 --> 00:32.020
we're creating in this loop

00:32.150 --> 00:37.280
and with that I can go to my stock component and here, I'll add a script part to it

00:37.280 --> 00:43.930
now and I want to export the default object and in this object, of course set up my props and props

00:43.980 --> 00:49.990
is at least stock because I'm getting this individual stock sent to this component here.

00:51.190 --> 00:57.430
Now with the stock being available here, I can of course replace my placeholders to output the actual

00:57.430 --> 01:07.770
stock name, the actual stock price and also to then start setting up my input and this buy button because

01:07.830 --> 01:13.000
I want to make them, I want to make them work right, at least the basic functionality.

01:13.000 --> 01:20.920
Now for the input I want to bind this to my data object, so here I will return a new object of course

01:21.280 --> 01:30.790
which is quantity which is 0 initially and I will bind my input here by passing v-model equals

01:31.210 --> 01:41.320
quantity, like this, quantity, this will now bind my input to this data field and we can see this

01:41.330 --> 01:47.340
if we switch over, we now see the names, the real prices and all the inputs are populated with zero.

01:47.360 --> 01:49.850
The next step now is to set up the button,

01:49.850 --> 01:55.910
for now I only want to log it to the console, we'll soon change this though, in order to set up the button,

01:57.210 --> 02:05.280
I'll add a click listener here and I'll want to execute buy stock here, let's say. Now of course to be able

02:05.280 --> 02:10.000
to execute this, I need to add my methods property in this vue instance

02:10.230 --> 02:14.720
and I want to have my buy stock method in there

02:15.000 --> 02:17.530
and here I will create a new order.

02:17.610 --> 02:24.960
Now this order is basically a javascript object where I do have my stock ID and for that, I can simply

02:24.990 --> 02:26.870
access the stock I get passed

02:26.880 --> 02:30.110
via props binding or via the property binding here,

02:30.120 --> 02:36.090
the prop up there, this ID of the stock. I want to have a stock price,

02:36.090 --> 02:39.510
this of course is this stock price,

02:39.510 --> 02:41.610
that's the price of the individual stock

02:41.910 --> 02:45.960
and I want to have the quantity, this quantity.

02:45.960 --> 02:47.210
This is my order

02:47.250 --> 02:52.230
and with that we're of course able to calculate the total price with quantity times the individual

02:52.230 --> 02:54.850
stock price.

02:54.870 --> 03:00.120
Now with that, I kind of want to buy it, for now

03:00.120 --> 03:01.430
we don't do that because for that

03:01.430 --> 03:02.660
we will need vuex,

03:02.660 --> 03:08.040
we need our global state management where I then want to of course change my funds and so on. So

03:08.520 --> 03:10.080
I don't do that right now,

03:10.110 --> 03:19.050
instead I want to simply console log this order and I will set this quantity back to null thereafter,

03:19.080 --> 03:21.190
to zero to be precise,

03:21.210 --> 03:27.330
so to reset it after the order. If we save this and have a look at our application,

03:27.330 --> 03:37.670
if I open the console here and enter 10 and click on buy, we see this almost worked, though the stock price

03:37.670 --> 03:38.590
of undefined,

03:38.590 --> 03:39.930
that doesn't look right.

03:40.910 --> 03:45.840
Well the reason is that this should be stock.price not stock price in the camel case,

03:46.070 --> 03:51.390
so with this, if we try this again too, that looks much better.

03:51.650 --> 03:55.280
So we got our buy button hooked up, we got the input hooked up,

03:55.280 --> 04:02.300
now one thing we can do right now is I can enter -10 for example and buy this and you see it in the

04:02.300 --> 04:06.380
console that if we have a look at this object, this worked.

04:06.380 --> 04:08.590
This of course is certainly not what I want,

04:08.610 --> 04:14.810
also I could buy more than I have funds, though at the moment I don't have any funds so that is something

04:14.810 --> 04:16.250
will fix in the future

04:16.370 --> 04:22.010
but at least I want to make sure that we can't buy a negative amount of stocks right now. For that,

04:22.010 --> 04:28.540
I will add a new attribute binding to this button where I disable it under certain conditions.

04:28.700 --> 04:30.380
What are these conditions?

04:30.620 --> 04:36.980
Well one of it is that the quantity is smaller or equal to zero,

04:36.980 --> 04:43.490
I can't buy stocks if I don't buy at least one of them. I also want to make sure that my number

04:43.490 --> 04:44.520
is an integer,

04:44.540 --> 04:49.600
therefore I check if it's not an integer here in which case I would disable the button,

04:49.820 --> 04:54.920
so if it's not an integer, I want to disable the button. With this in place,

04:54.920 --> 04:59.660
if we go back we see the button is disabled by default, if I enter -1, it stays disabled,

04:59.660 --> 05:07.370
if I enter 1, it gets enabled, if I enter 1.2, it gets disabled again because

05:07.400 --> 05:12.110
that's not an integer. With that, I got this functionality in place,

05:12.110 --> 05:14.080
I'd say that looks pretty good,

05:14.090 --> 05:19.340
we already see that we're now reaching the point where it's hard to continue as long as we don't have

05:19.340 --> 05:22.910
a proper state management in place because we want to check our funds,

05:22.910 --> 05:25.090
we want to be able to execute the order,

05:25.100 --> 05:31.400
it won't make sense to work on the portfolio if we're not able to really store our purchase somewhere.

05:31.400 --> 05:36.760
So the next videos are definitely about setting up vuex, setting up our state management

05:36.830 --> 05:42.020
and that again is a great challenge for you to take over at this part and try setting this up at your

05:42.020 --> 05:46.660
own, think about what's in your state, which mutations do you have,

05:46.700 --> 05:51.920
how do you dispatch these mutations, which getters do you need and so on.

05:51.950 --> 05:54.350
I'll see you in the next video when I start working on that.
