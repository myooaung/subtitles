WEBVTT

00:02.190 --> 00:06.770
We saw css transition properties in action and css animations,

00:06.780 --> 00:08.250
now let's mix both.

00:08.670 --> 00:15.540
I want to adjust my slide-in animation here such that it not only slides up and down but that it is also

00:15.540 --> 00:19.720
becoming transparent or is transparent at the beginning.

00:20.710 --> 00:22.230
Now to acheive this,

00:22.300 --> 00:25.060
I will first adjust my slide-enter class here,

00:25.060 --> 00:27.840
here I will have an initial opacity of zero

00:28.090 --> 00:35.680
and on slide-enter-active, I therefore also want to attach a transition where I set the opacity over

00:35.680 --> 00:38.730
let's say half a second

00:38.870 --> 00:44.300
and yes of course you could animate the opacity here in your keyframes as well,

00:44.300 --> 00:50.060
I just want to show you how to mix transition and animation here because sometimes you need it or you

00:50.060 --> 00:51.920
want that behavior.

00:51.950 --> 00:57.350
Now for slide-leave, I don't need to set up anything because we don't need to set an opacity there, the default

00:57.350 --> 01:00.830
opacity of 1 is exactly what you want

01:00.950 --> 01:07.870
but here, I want to add a transition upon leaving it or upon this leave-active class being attached

01:07.880 --> 01:12.790
and here I want to animate the opacity over one second let's say

01:13.400 --> 01:16.950
and of course also set the opacity to zero here.

01:16.970 --> 01:25.070
Now if I reload this, let's see, I'd say this looks much better now, though we do have a problem

01:25.070 --> 01:25.310
here

01:25.310 --> 01:33.680
now, if we have a look at this right now, we're animating here over one second when we animated in and

01:33.680 --> 01:36.830
we transitioned over one second if we animated out.

01:37.020 --> 01:44.480
Now the issue we do have is if I were to set the transition of the opacity here to 3 seconds upon

01:44.480 --> 01:45.350
removing it

01:48.500 --> 01:59.630
and I reload this, well to us, it looks a bit strange here doesn't it now because now it jumps. The reason

01:59.630 --> 02:08.060
here of course is that normally we would want this animation to end once it slide down and maybe it

02:08.060 --> 02:14.390
is not fully transparent by this point of time but it certainly looks ugly if it uses the transition.

02:14.390 --> 02:19.940
Now the problem is since we have both animation and transition here, vuejs doesn't know which one

02:19.940 --> 02:20.510
to use,

02:20.510 --> 02:24.870
we have two different operations here and it takes the longer one.

02:24.890 --> 02:31.790
Now we can tell vuejs which duration of which property to use by adding a type property here

02:31.820 --> 02:38.540
to the transition component and then setting type either to animation or to transition because these are

02:38.540 --> 02:42.480
the two css properties we can use to animate things

02:42.650 --> 02:45.050
and with that, we can set up which one to use.

02:45.110 --> 02:51.950
So I could set this to animation and this will make sure that for vuejs, the animation finishes,

02:52.460 --> 02:57.950
the transition I should say here finishes but both names are occupied so that this removing of the element

02:58.010 --> 03:04.280
is done once the animation here finishes and not once the transition finishes because I set this to

03:04.280 --> 03:05.690
type animation.

03:05.870 --> 03:10.070
We can see this if I reload this animate it in and now if I remove it,

03:10.070 --> 03:14.780
we see we don't have that ugly jump because even though the transition wasn't finished, it took three

03:14.780 --> 03:15.600
seconds,

03:15.620 --> 03:20.870
the animation, the css property animation was finished and that is then when vuejs knows,

03:20.870 --> 03:21.910
okay I'm done,

03:21.920 --> 03:22.750
remove it.

03:22.940 --> 03:23.920
So this is important,

03:23.930 --> 03:29.020
if you mix animation and transition, make sure to set up which one dictates the length.
