WEBVTT
1
00:00:01.002 --> 00:00:02.004
- [Instructor] Now that we've established

2
00:00:02.004 --> 00:00:05.000
the business objects in the domain model,

3
00:00:05.000 --> 00:00:07.008
let's see the associated code.

4
00:00:07.008 --> 00:00:08.006
We're in a domain package,

5
00:00:08.006 --> 00:00:11.005
which is a new package that I've declared here.

6
00:00:11.005 --> 00:00:14.007
There is a class called Tour.

7
00:00:14.007 --> 00:00:17.001
As I said before this tutorial is for developers

8
00:00:17.001 --> 00:00:20.009
with previous knowledge of the Java Persistence API.

9
00:00:20.009 --> 00:00:22.006
For a quick overview of JPA

10
00:00:22.006 --> 00:00:27.006
check out the JPA chapter in my course Spring Data II.

11
00:00:27.006 --> 00:00:29.002
If you do know JPA

12
00:00:29.002 --> 00:00:33.004
then you will recognize the @Entity, @ID,

13
00:00:33.004 --> 00:00:38.005
@GeneratedValue, @Column, and @ManyToOne.

14
00:00:38.005 --> 00:00:40.007
These are annotations on this Java class

15
00:00:40.007 --> 00:00:43.001
and it's attributes.

16
00:00:43.001 --> 00:00:46.006
All the attributes in this class are present here,

17
00:00:46.006 --> 00:00:49.000
plus the generated ID field.

18
00:00:49.000 --> 00:00:51.002
In addition to the typical getters and setters,

19
00:00:51.002 --> 00:00:53.009
there is a constructor.

20
00:00:53.009 --> 00:01:00.000
This constructor is on line 50.

21
00:01:00.000 --> 00:01:01.007
It takes all the fields

22
00:01:01.007 --> 00:01:06.004
and initialize the attributes of those fields.

23
00:01:06.004 --> 00:01:10.000
I make my default constructor protected,

24
00:01:10.000 --> 00:01:11.006
so consumers of this class

25
00:01:11.006 --> 00:01:12.008
are only able to construct

26
00:01:12.008 --> 00:01:16.005
the fully initialized Java object.

27
00:01:16.005 --> 00:01:22.002
As we said before Region is a enumerated type,

28
00:01:22.002 --> 00:01:24.003
so let's look at that.

29
00:01:24.003 --> 00:01:27.008
Here's our Region, and the values are Central Coast,

30
00:01:27.008 --> 00:01:31.004
Southern California, Northern California and varies,

31
00:01:31.004 --> 00:01:34.002
and then we have enumeration difficulty,

32
00:01:34.002 --> 00:01:38.008
which is easy, medium, difficult, and varies.

33
00:01:38.008 --> 00:01:42.006
Finally the tour package entity,

34
00:01:42.006 --> 00:01:45.009
this has an ID on the code attributes,

35
00:01:45.009 --> 00:01:48.008
so it's not generated, we're providing it.

36
00:01:48.008 --> 00:01:54.006
This is a string, and the name is also a string.

37
00:01:54.006 --> 00:01:55.008
Using just JPA,

38
00:01:55.008 --> 00:01:58.005
the next step would be creating data services,

39
00:01:58.005 --> 00:02:00.005
which invoke the entity manager

40
00:02:00.005 --> 00:02:04.003
to create, read, update and delete entity objects.

41
00:02:04.003 --> 00:02:08.004
Instead, we are going to use Spring Data JPA,

42
00:02:08.004 --> 00:02:11.000
and these are repositories which eliminate

43
00:02:11.000 --> 00:02:14.000
all of that repetitive, error prone, boiler plate code.

