WEBVTT
1
00:00:01.001 --> 00:00:02.006
- [Instructor] At the beginning of this chapter,

2
00:00:02.006 --> 00:00:04.008
we learned that API should provide

3
00:00:04.008 --> 00:00:06.008
their own documentation.

4
00:00:06.008 --> 00:00:11.006
Spring Data REST provides this via the /profile endpoint.

5
00:00:11.006 --> 00:00:16.004
So if I do a get on 8080 of the application,

6
00:00:16.004 --> 00:00:18.009
what returns is our list of links

7
00:00:18.009 --> 00:00:22.000
and we have a profile link.

8
00:00:22.000 --> 00:00:23.009
I'm going to click down into that

9
00:00:23.009 --> 00:00:31.003
and let's see what we get with profile.

10
00:00:31.003 --> 00:00:42.004
And now let's actually look at the profile of packages.

11
00:00:42.004 --> 00:00:44.001
Our Spring Data REST application

12
00:00:44.001 --> 00:00:46.004
responds with metadata

13
00:00:46.004 --> 00:00:49.000
describing the schema and the methods

14
00:00:49.000 --> 00:00:51.004
available on this resource.

15
00:00:51.004 --> 00:00:53.007
This metadata follows the hypermedia

16
00:00:53.007 --> 00:00:56.001
application language standard.

17
00:00:56.001 --> 00:00:57.005
It's nice to have,

18
00:00:57.005 --> 00:00:59.008
but it's still raw data,

19
00:00:59.008 --> 00:01:02.000
and honestly, ugly.

20
00:01:02.000 --> 00:01:04.000
So, we're going to use something called

21
00:01:04.000 --> 00:01:06.005
the Spring Data REST HAL Browser

22
00:01:06.005 --> 00:01:08.008
and see what that gives us.

23
00:01:08.008 --> 00:01:11.001
Going to stop the application

24
00:01:11.001 --> 00:01:13.008
and open up our pom,

25
00:01:13.008 --> 00:01:17.003
and I'm adding this new dependency here.

26
00:01:17.003 --> 00:01:19.005
It's part of the Spring Data framework

27
00:01:19.005 --> 00:01:23.000
it's called spring-data-rest-hal-browser,

28
00:01:23.000 --> 00:01:24.005
and let's see what it does for us.

29
00:01:24.005 --> 00:01:27.006
Let's import those changes.

30
00:01:27.006 --> 00:01:38.000
And then run the application.

31
00:01:38.000 --> 00:01:40.004
And it started.

32
00:01:40.004 --> 00:01:42.002
So let's actually,

33
00:01:42.002 --> 00:01:45.000
instead of Postman,

34
00:01:45.000 --> 00:01:46.006
let's go to a browser.

35
00:01:46.006 --> 00:01:48.005
I'm going to open up my Chrome browser

36
00:01:48.005 --> 00:01:53.001
and let's do localhost:8080.

37
00:01:53.001 --> 00:01:55.005
And voila, we have actually a new interface

38
00:01:55.005 --> 00:02:00.007
to interact with our application endpoints.

39
00:02:00.007 --> 00:02:02.003
So let's actually try it out.

40
00:02:02.003 --> 00:02:09.007
I'm going to go into the packages link

41
00:02:09.007 --> 00:02:12.002
and click that, so here, this is the

42
00:02:12.002 --> 00:02:13.006
endpoint for packages.

43
00:02:13.006 --> 00:02:17.002
I'm going to say go on that.

44
00:02:17.002 --> 00:02:19.000
And I get a response body of that,

45
00:02:19.000 --> 00:02:23.009
so it shows all the packages.

46
00:02:23.009 --> 00:02:29.007
And I'm actually going to drill down into the first one.

47
00:02:29.007 --> 00:02:40.001
And that shows that the first package is Backpack Cal.

48
00:02:40.001 --> 00:02:42.001
I'm going to click on the self link,

49
00:02:42.001 --> 00:02:44.009
you can actually do a link on that right resource

50
00:02:44.009 --> 00:02:48.007
and it populates with the code up here,

51
00:02:48.007 --> 00:02:54.001
and there's the response.

52
00:02:54.001 --> 00:02:57.002
Now let me go back to the beginning,

53
00:02:57.002 --> 00:02:59.003
and let's look at tours.

54
00:02:59.003 --> 00:03:01.004
So tours sort of has a question mark here,

55
00:03:01.004 --> 00:03:04.003
and that's because of the regular get,

56
00:03:04.003 --> 00:03:06.009
there's extra parameters here to be concerned about,

57
00:03:06.009 --> 00:03:08.007
so I'll click this,

58
00:03:08.007 --> 00:03:10.000
and we have a little popup

59
00:03:10.000 --> 00:03:11.006
that shows that if we wanted to

60
00:03:11.006 --> 00:03:15.005
add attributes like page size and sort,

61
00:03:15.005 --> 00:03:18.007
we could actually put them in this little JSON packet.

62
00:03:18.007 --> 00:03:26.008
So, let's say we want to have page three in sizes two.

63
00:03:26.008 --> 00:03:30.009
And click follow URI.

64
00:03:30.009 --> 00:03:34.001
And that's the result of invoking that endpoint

65
00:03:34.001 --> 00:03:37.006
with those parameters.

66
00:03:37.006 --> 00:03:39.002
This is a cool feature,

67
00:03:39.002 --> 00:03:41.009
but I would only add it to microservices

68
00:03:41.009 --> 00:03:46.000
that exclusively provides Spring Data REST APIs.

