WEBVTT
1
00:00:01.001 --> 00:00:04.008
- Every entity that spring data rest exposes also

2
00:00:04.008 --> 00:00:07.006
creates a slash search endpoint.

3
00:00:07.006 --> 00:00:09.006
Let's see what happens when we envoke the

4
00:00:09.006 --> 00:00:14.005
tour packages slash search.

5
00:00:14.005 --> 00:00:16.008
Other than the self href

6
00:00:16.008 --> 00:00:20.007
we also see a findByName attribute.

7
00:00:20.007 --> 00:00:24.007
Let's click on that.

8
00:00:24.007 --> 00:00:28.005
That maps directly to the method we created in

9
00:00:28.005 --> 00:00:31.003
tour package repository FindByName and we have an

10
00:00:31.003 --> 00:00:33.008
example of what the parameter is,

11
00:00:33.008 --> 00:00:38.004
so let's actually put that in.

12
00:00:38.004 --> 00:00:47.005
And give it a name BackpackCal.

13
00:00:47.005 --> 00:00:51.000
We need to put the percent 20 in there because

14
00:00:51.000 --> 00:00:53.008
that's at the ASCII value for space and an

15
00:00:53.008 --> 00:01:04.000
actual space is not allowed on a URL.

16
00:01:04.000 --> 00:01:09.009
And we get back these tour packages BC.

17
00:01:09.009 --> 00:01:12.006
So now that we know how slash search resource works,

18
00:01:12.006 --> 00:01:16.003
let's create a tour repository method.

19
00:01:16.003 --> 00:01:19.001
I want to create a method to find all tours associated

20
00:01:19.001 --> 00:01:23.008
with the tour package by the code.

21
00:01:23.008 --> 00:01:29.000
So add a new method in here.

22
00:01:29.000 --> 00:01:31.002
Since tour package could be associated with many tours

23
00:01:31.002 --> 00:01:39.001
it would be in a list.

24
00:01:39.001 --> 00:01:42.006
Find by tour package code.

25
00:01:42.006 --> 00:01:48.002
(typing)

26
00:01:48.002 --> 00:01:51.005
And that's really all we need, however, in previous

27
00:01:51.005 --> 00:01:52.003
versions of spring data rest

28
00:01:52.003 --> 00:02:00.000
you needed to have the at param in here.

29
00:02:00.000 --> 00:02:05.005
I'll put it in here just as a helper.

30
00:02:05.005 --> 00:02:17.008
And let's stop and restart our application.

31
00:02:17.008 --> 00:02:20.004
And it's started up and running.

32
00:02:20.004 --> 00:02:34.000
Back in Postman.

33
00:02:34.000 --> 00:02:38.007
Let's see what we get back on the search endpoint

34
00:02:38.007 --> 00:02:43.002
and we see our new method FindByTourPackageCode.

35
00:02:43.002 --> 00:02:48.000
We'll click into that and we'll ask for the code

36
00:02:48.000 --> 00:02:59.002
for California calm.

37
00:02:59.002 --> 00:03:00.000
And we get back all the tours

38
00:03:00.000 --> 00:03:04.000
associated with California calm.

39
00:03:04.000 --> 00:03:05.005
And there's three of them.

40
00:03:05.005 --> 00:03:09.004
One, two, three.

41
00:03:09.004 --> 00:03:12.003
I want to show you how spring data rest treats

42
00:03:12.003 --> 00:03:14.003
entity to entity associations.

43
00:03:14.003 --> 00:03:17.001
So there is many to one association between a

44
00:03:17.001 --> 00:03:19.003
tour package and tours.

45
00:03:19.003 --> 00:03:22.005
So the tour package attribute in the J response body

46
00:03:22.005 --> 00:03:26.001
is a hypermedia link to the tour.

47
00:03:26.001 --> 00:03:29.005
So if we click on that and that endpoint will direct us

48
00:03:29.005 --> 00:03:33.000
back to California calm.

