1
1

00:00:01,898  -->  00:00:03,944
<v ->[Course Instructor] So we have seen in this section</v>
2

2

00:00:03,944  -->  00:00:06,571
that the creation phase of an execution context
3

3

00:00:06,571  -->  00:00:07,738
has two steps.
4

4

00:00:08,696  -->  00:00:12,232
Creation phase, and execution phase.
5

5

00:00:12,232  -->  00:00:16,425
So far, we have talked about object variable creation
6

6

00:00:16,425  -->  00:00:19,225
as well as the sculpt chain creation.
7

7

00:00:19,225  -->  00:00:21,622
Both part of the creation phase.
8

8

00:00:21,622  -->  00:00:23,814
I hope that you have followed along just fine
9

9

00:00:23,814  -->  00:00:25,814
and taken a lot of notes
10

10

00:00:26,675  -->  00:00:30,213
so that we can now talk about the third and last step
11

11

00:00:30,213  -->  00:00:32,201
of the creation phase,
12

12

00:00:32,201  -->  00:00:34,774
which is determining and setting the value
13

13

00:00:34,774  -->  00:00:38,274
of the this variable, or the this keyword.
14

14

00:00:39,718  -->  00:00:42,553
So the this variable is a variable
15

15

00:00:42,553  -->  00:00:45,938
that each and every execution context gets.
16

16

00:00:45,938  -->  00:00:47,289
And as we already know,
17

17

00:00:47,289  -->  00:00:51,669
it is stored in the execution context object.
18

18

00:00:51,669  -->  00:00:55,836
So where does the this variable, or the this keyword, point?
19

19

00:00:57,093  -->  00:00:59,827
In a regular function call,
20

20

00:00:59,827  -->  00:01:02,884
the this keyword simply points at the global object,
21

21

00:01:02,884  -->  00:01:06,516
which , in case of the browser, is the window object.
22

22

00:01:06,516  -->  00:01:10,895
And this is actually the default, simple as that.
23

23

00:01:10,895  -->  00:01:13,740
In a method call, which, as you remember,
24

24

00:01:13,740  -->  00:01:17,005
is a function that is attached to an object,
25

25

00:01:17,005  -->  00:01:19,649
the this variable points to the object
26

26

00:01:19,649  -->  00:01:22,444
that is calling the method.
27

27

00:01:22,444  -->  00:01:24,400
And something variable important about this
28

28

00:01:24,400  -->  00:01:28,718
is that the this keyword is not assigned a value
29

29

00:01:28,718  -->  00:01:32,885
until the function where it is defined is actually called.
30

30

00:01:34,621  -->  00:01:38,781
So, again, even though it appears that the this variable
31

31

00:01:38,781  -->  00:01:42,576
refers to the object where it is defined,
32

32

00:01:42,576  -->  00:01:46,175
the this variable is technically only assigned a value
33

33

00:01:46,175  -->  00:01:49,356
as soon as an object calls a method.
34

34

00:01:49,356  -->  00:01:52,305
But armed with all the knowledge that you have gained
35

35

00:01:52,305  -->  00:01:53,968
in this section so far,
36

36

00:01:53,968  -->  00:01:56,445
this makes total sense, right?
37

37

00:01:56,445  -->  00:01:59,072
And that's because we know that the this keyword
38

38

00:01:59,072  -->  00:02:01,807
is attached to an execution context,
39

39

00:02:01,807  -->  00:02:06,706
which is only created as soon as the function is invoked,
40

40

00:02:06,706  -->  00:02:08,408
which also means called.
41

41

00:02:08,408  -->  00:02:11,870
So invoked and called are the same thing.
42

42

00:02:11,870  -->  00:02:14,722
Alright, so let's now check out some practical examples
43

43

00:02:14,722  -->  00:02:17,139
of this in the next lecture.
