1
1

00:00:00,980  -->  00:00:03,610
<v Jonas>Welcome back, so let's now take care</v>
2

2

00:00:03,610  -->  00:00:07,520
of our application data and the user interface as well
3

3

00:00:07,520  -->  00:00:10,600
by using a technique called templating.
4

4

00:00:10,600  -->  00:00:13,260
So basically we have this HTML template
5

5

00:00:13,260  -->  00:00:15,990
that will then be filled with the data for each
6

6

00:00:15,990  -->  00:00:17,400
of the laptops.
7

7

00:00:17,400  -->  00:00:19,500
So for example when it's laptop four,
8

8

00:00:19,500  -->  00:00:22,030
then our template will get filled with all this data,
9

9

00:00:22,030  -->  00:00:24,553
this image, this price, then this data,
10

10

00:00:24,553  -->  00:00:26,193
then also the description.
11

11

00:00:27,510  -->  00:00:29,900
If we have image three for example,
12

12

00:00:29,900  -->  00:00:32,310
then it is a different price, different image,
13

13

00:00:32,310  -->  00:00:34,470
different data, different name here,
14

14

00:00:34,470  -->  00:00:38,320
and everything changes, but the template is the same.
15

15

00:00:38,320  -->  00:00:40,140
And so what we're gonna do now is to take
16

16

00:00:40,140  -->  00:00:42,845
an HTML file that I coded for this page
17

17

00:00:42,845  -->  00:00:46,170
and convert it into a template which we can then use
18

18

00:00:46,170  -->  00:00:50,900
to replace the data and send that back to the browser, okay?
19

19

00:00:50,900  -->  00:00:52,140
Maybe it sounds complicated,
20

20

00:00:52,140  -->  00:00:55,120
but it's actually quite straightforward.
21

21

00:00:55,120  -->  00:00:58,540
Okay, so let's open up the laptop.html.
22

22

00:00:58,540  -->  00:01:01,853
And so this is the HTML code that I was talking about.
23

23

00:01:01,853  -->  00:01:04,420
I also have the CSS code right in the HTML
24

24

00:01:04,420  -->  00:01:06,830
because that's easier, okay?
25

25

00:01:06,830  -->  00:01:11,097
And so down here that is the HTML that people now replace
26

26

00:01:11,097  -->  00:01:14,110
with some placeholders basically
27

27

00:01:14,110  -->  00:01:16,960
that we can then replace, okay?
28

28

00:01:16,960  -->  00:01:19,363
So let's create a folder here called templates.
29

29

00:01:24,610  -->  00:01:28,220
And then copy these two into that folder
30

30

00:01:31,370  -->  00:01:33,390
so that we keep the originals here.
31

31

00:01:33,390  -->  00:01:34,673
What happened here?
32

32

00:01:36,870  -->  00:01:39,550
Copy, sure, I wanted to paste.
33

33

00:01:39,550  -->  00:01:42,543
So paste them in there, and here we go.
34

34

00:01:44,680  -->  00:01:45,580
Close all of this.
35

35

00:01:48,600  -->  00:01:53,600
Let's rename this also, and the name doesn't really matter,
36

36

00:01:53,820  -->  00:01:55,630
I'm just gonna call it template
37

37

00:01:56,890  -->  00:01:59,224
and then the original name, alright?
38

38

00:01:59,224  -->  00:02:02,370
So starting with template overview,
39

39

00:02:02,370  -->  00:02:06,700
or actually template laptop, let's come down here
40

40

00:02:06,700  -->  00:02:10,153
and everything that is data we will now replace
41

41

00:02:10,153  -->  00:02:12,400
with a placeholder.
42

42

00:02:12,400  -->  00:02:15,900
So here we have the price, so let's replace that.
43

43

00:02:15,900  -->  00:02:17,860
So what I'm gonna do here as a placeholder
44

44

00:02:17,860  -->  00:02:20,470
is like using a couple of symbols so that we don't
45

45

00:02:20,470  -->  00:02:22,640
accidentally replace something
46

46

00:02:22,640  -->  00:02:24,070
that we actually want to keep.
47

47

00:02:24,070  -->  00:02:28,179
So if we do it like this, well then we can be sure
48

48

00:02:28,179  -->  00:02:31,681
that nowhere else on the page,
49

49

00:02:31,681  -->  00:02:33,980
actually I want this, okay.
50

50

00:02:33,980  -->  00:02:35,990
So now we know that nowhere else on the page
51

51

00:02:35,990  -->  00:02:38,660
will probably be something like this, right?
52

52

00:02:38,660  -->  00:02:40,520
So this is our placeholder.
53

53

00:02:40,520  -->  00:02:44,140
If we just called this price, just like this,
54

54

00:02:44,140  -->  00:02:45,640
maybe there might be some other string
55

55

00:02:45,640  -->  00:02:47,960
exactly like this, and then we would replace something
56

56

00:02:47,960  -->  00:02:49,660
that we actually want to keep.
57

57

00:02:49,660  -->  00:02:53,453
And so with this kind of unique looking text here,
58

58

00:02:53,453  -->  00:02:55,180
that is not going to happen.
59

59

00:02:55,180  -->  00:02:58,350
And so we're always going to use this format here, okay?
60

60

00:02:58,350  -->  00:03:00,763
Then here we want the image.
61

61

00:03:03,110  -->  00:03:05,593
We actually copied this one here, that's easier.
62

62

00:03:08,043  -->  00:03:10,623
And here's the slash, and I'm going to explain why
63

63

00:03:11,510  -->  00:03:13,730
here in a second, or actually a bit later in the video,
64

64

00:03:13,730  -->  00:03:15,750
because image will be something that we will
65

65

00:03:15,750  -->  00:03:19,154
have to fix later, okay?
66

66

00:03:19,154  -->  00:03:22,463
As the alt text here, we want the product name, okay?
67

67

00:03:25,030  -->  00:03:28,210
The product name will be this here, right?
68

68

00:03:28,210  -->  00:03:30,670
So again later we are going to replace all of this
69

69

00:03:30,670  -->  00:03:33,370
by the data that's going to come from this JSON.
70

70

00:03:33,370  -->  00:03:35,560
So the price, the product name and image,
71

71

00:03:35,560  -->  00:03:39,683
CPU, RAM, storage, screen, and description, okay?
72

72

00:03:40,630  -->  00:03:43,453
So the product name here, again the product name.
73

73

00:03:49,300  -->  00:03:52,983
Then here, we have the screen.
74

74

00:03:56,090  -->  00:03:57,283
Then we have the CPU.
75

75

00:04:01,170  -->  00:04:02,673
We have storage.
76

76

00:04:05,460  -->  00:04:07,433
And finally we have the RAM.
77

77

00:04:11,180  -->  00:04:14,167
Then this here is the description.
78

78

00:04:20,430  -->  00:04:23,213
And then finally again, the price.
79

79

00:04:25,370  -->  00:04:26,600
Okay.
80

80

00:04:26,600  -->  00:04:30,200
Then here I have some emojis as you're probably noticing.
81

81

00:04:30,200  -->  00:04:31,900
Maybe on your computer they are not working,
82

82

00:04:31,900  -->  00:04:35,050
maybe you don't have the latest operating system version,
83

83

00:04:35,050  -->  00:04:36,140
and you could just use something else
84

84

00:04:36,140  -->  00:04:38,200
or you could get rid of the emojis altogether
85

85

00:04:38,200  -->  00:04:39,650
if you don't like them, okay?
86

86

00:04:39,650  -->  00:04:42,046
But anyway our template here should now be done
87

87

00:04:42,046  -->  00:04:45,830
and we are now ready to basically load this HTML file,
88

88

00:04:45,830  -->  00:04:48,620
replace all of these placeholders by the real text,
89

89

00:04:48,620  -->  00:04:51,083
and then send that HTML to the browser each time
90

90

00:04:51,083  -->  00:04:52,983
that we request a certain laptop.
91

91

00:04:53,880  -->  00:04:55,470
Okay, make sense?
92

92

00:04:55,470  -->  00:04:59,350
So let's do that, and it's right here
93

93

00:04:59,350  -->  00:05:02,070
in the laptop route, right?
94

94

00:05:02,070  -->  00:05:05,910
So fs.readFile again,
95

95

00:05:05,910  -->  00:05:07,350
and this time we're not going to use
96

96

00:05:07,350  -->  00:05:09,710
the same conversion, okay?
97

97

00:05:09,710  -->  00:05:12,130
So many times in note there are synchronous
98

98

00:05:12,130  -->  00:05:15,270
and asynchronous versions of the same functions.
99

99

00:05:15,270  -->  00:05:18,510
Now I'm not going to go into real deep details here,
100

100

00:05:18,510  -->  00:05:20,940
but the synchronous version is always blocking,
101

101

00:05:20,940  -->  00:05:23,125
so basically it makes the entire code stop
102

102

00:05:23,125  -->  00:05:25,990
for the time that the function is doing its work,
103

103

00:05:25,990  -->  00:05:28,060
and that is going to block the entire thread
104

104

00:05:28,060  -->  00:05:30,680
for all the users that are accessing your code.
105

105

00:05:30,680  -->  00:05:33,910
Because Node.js runs in something called a single thread.
106

106

00:05:33,910  -->  00:05:36,660
And so there's only one thread in the computer
107

107

00:05:36,660  -->  00:05:39,500
that runs your application, no matter if you have 10 users
108

108

00:05:39,500  -->  00:05:42,320
or a million users accessing your app at the same time.
109

109

00:05:42,320  -->  00:05:45,120
So if you block the single thread with a synchronous
110

110

00:05:45,120  -->  00:05:47,290
function that takes up a lot of time,
111

111

00:05:47,290  -->  00:05:50,119
all the other users will have to wait
112

112

00:05:50,119  -->  00:05:51,680
until that function finishes its work.
113

113

00:05:51,680  -->  00:05:53,730
And so usually we always try to use
114

114

00:05:53,730  -->  00:05:56,000
the asynchronous versions, okay?
115

115

00:05:56,000  -->  00:05:58,290
Because then they do the work in the background
116

116

00:05:58,290  -->  00:05:59,460
and as soon as they're finished,
117

117

00:05:59,460  -->  00:06:01,795
they simply run the callback that we pass into
118

118

00:06:01,795  -->  00:06:03,720
the asynchronous function, okay?
119

119

00:06:03,720  -->  00:06:05,410
And so that's what we're gonna do here.
120

120

00:06:05,410  -->  00:06:07,700
So we have the asynchronous file read
121

121

00:06:07,700  -->  00:06:09,970
and then we need to pass in the file name
122

122

00:06:09,970  -->  00:06:12,520
of the template that we just created.
123

123

00:06:12,520  -->  00:06:14,860
Again we have to use the dirname variable
124

124

00:06:14,860  -->  00:06:16,053
and then templates,
125

125

00:06:19,350  -->  00:06:23,293
and template-laptop.html.
126

126

00:06:25,230  -->  00:06:29,425
Then the character encoding again, so UTF-8.
127

127

00:06:29,425  -->  00:06:31,670
And now this time again we have
128

128

00:06:31,670  -->  00:06:33,303
the callback function in here.
129

129

00:06:34,700  -->  00:06:36,750
And that callback function adds access
130

130

00:06:36,750  -->  00:06:41,223
to at least two parameters which are error and direct data.
131

131

00:06:44,070  -->  00:06:46,540
Okay, so this time we're not going to save anything
132

132

00:06:46,540  -->  00:06:49,230
to any variable like we did up here
133

133

00:06:49,230  -->  00:06:51,080
in this synchronous file read,
134

134

00:06:51,080  -->  00:06:52,620
but instead we're going to wait until node
135

135

00:06:52,620  -->  00:06:55,669
finishes reading our file and then calls our callback
136

136

00:06:55,669  -->  00:06:57,880
and passes the data into that callback
137

137

00:06:57,880  -->  00:06:58,987
as the data parameter.
138

138

00:06:58,987  -->  00:07:00,750
And so now in here in this callback
139

139

00:07:00,750  -->  00:07:03,070
we will have access to that data using
140

140

00:07:03,070  -->  00:07:05,920
this data parameter, okay?
141

141

00:07:05,920  -->  00:07:08,313
Now up here we get the synchronous file here,
142

142

00:07:08,313  -->  00:07:10,580
I just want to mention this because you might be wondering
143

143

00:07:10,580  -->  00:07:13,620
why the hell we used the synchronous version up here.
144

144

00:07:13,620  -->  00:07:15,384
And we did so because here it is no problem,
145

145

00:07:15,384  -->  00:07:18,880
because this only happens once you start your app,
146

146

00:07:18,880  -->  00:07:21,500
and now while maybe millions or at least thousands
147

147

00:07:21,500  -->  00:07:24,730
of users might be using your app at the same time, okay?
148

148

00:07:24,730  -->  00:07:27,890
Because remember, each time that someone accesses your code,
149

149

00:07:27,890  -->  00:07:31,990
this is the callback function that is executed, okay?
150

150

00:07:31,990  -->  00:07:35,860
So this is where you don't want to block the main thread.
151

151

00:07:35,860  -->  00:07:38,100
But here is no problem, because again it runs
152

152

00:07:38,100  -->  00:07:41,010
only once when you start up your application.
153

153

00:07:41,010  -->  00:07:44,260
Anyway, what we have here now is basically
154

154

00:07:44,260  -->  00:07:48,800
this HTML read into this data variable, right?
155

155

00:07:48,800  -->  00:07:51,910
So all of this here is now as a string
156

156

00:07:51,910  -->  00:07:53,170
in that data variable.
157

157

00:07:53,170  -->  00:07:55,943
So now all we have to do is to replace again
158

158

00:07:55,943  -->  00:07:59,510
these placeholders as I mentioned before, okay?
159

159

00:07:59,510  -->  00:08:01,410
So that's very easy, so let's do that.
160

160

00:08:02,310  -->  00:08:04,773
So let's create a variable here called output.
161

161

00:08:05,710  -->  00:08:08,360
And it's actually a let because we're going to change this
162

162

00:08:08,360  -->  00:08:10,970
basically for each of the placeholders, okay?
163

163

00:08:10,970  -->  00:08:14,180
So this will be data.replace.
164

164

00:08:14,180  -->  00:08:17,650
It's a very simple string method and so we say it,
165

165

00:08:17,650  -->  00:08:19,983
and let's start here by the product name.
166

166

00:08:26,632  -->  00:08:29,060
And then replace it with the actual data.
167

167

00:08:29,060  -->  00:08:30,540
And what is the actual data?
168

168

00:08:30,540  -->  00:08:34,150
Well it is the laptop data, right?
169

169

00:08:34,150  -->  00:08:37,090
So that is our array here that we read
170

170

00:08:37,930  -->  00:08:42,013
from the adta.json file and then at the position of the ID.
171

171

00:08:43,310  -->  00:08:46,850
So ID, which is remember, the ID that we read
172

172

00:08:46,850  -->  00:08:48,437
from our URL, okay?
173

173

00:08:49,879  -->  00:08:51,700
And so if it reads the number three,
174

174

00:08:51,700  -->  00:08:54,520
well then we're gonna access the laptop data
175

175

00:08:54,520  -->  00:08:57,730
at position number three, okay?
176

176

00:08:57,730  -->  00:09:00,250
So we have that laptop now, imagine that it's number three,
177

177

00:09:00,250  -->  00:09:04,060
so zero, one, two, three, and what we want
178

178

00:09:04,060  -->  00:09:06,513
is the product name, okay?
179

179

00:09:09,650  -->  00:09:11,405
.ProductName.
180

180

00:09:11,405  -->  00:09:15,720
And let's actually create this variable here outside,
181

181

00:09:15,720  -->  00:09:16,763
so just like this.
182

182

00:09:19,083  -->  00:09:21,733
So take it from here so we only have to read it once.
183

183

00:09:27,710  -->  00:09:29,763
And so it's now laptop.productName.
184

184

00:09:31,080  -->  00:09:33,820
Okay, and now all we have to do is to do the same
185

185

00:09:33,820  -->  00:09:34,893
for all the others.
186

186

00:09:36,090  -->  00:09:38,970
Now keep in mind that this replace method here
187

187

00:09:38,970  -->  00:09:41,970
will actually return a new string, alright?
188

188

00:09:41,970  -->  00:09:46,630
So output is now data with the product name replaced.
189

189

00:09:46,630  -->  00:09:49,560
What this means is that when we next want to replace
190

190

00:09:49,560  -->  00:09:52,710
the next placeholder, let's say image,
191

191

00:09:52,710  -->  00:09:57,170
we have to do that in the output from before, okay?
192

192

00:09:57,170  -->  00:10:00,500
Otherwise we're going to do it in the original data variable
193

193

00:10:00,500  -->  00:10:03,060
where the product name was not yet changed.
194

194

00:10:03,060  -->  00:10:04,951
So basically this is like a chain.
195

195

00:10:04,951  -->  00:10:07,770
So first we replace the product name,
196

196

00:10:07,770  -->  00:10:10,070
then in that variable we replace the image
197

197

00:10:10,070  -->  00:10:11,410
and then the price, the screen,
198

198

00:10:11,410  -->  00:10:13,713
and so on and so forth, okay?
199

199

00:10:16,440  -->  00:10:19,120
And now we can just duplicate this here a couple times.
200

200

00:10:19,120  -->  00:10:22,923
So we have image, then we have price,
201

201

00:10:25,460  -->  00:10:27,533
then we have the screen,
202

202

00:10:32,874  -->  00:10:34,023
we have CPU,
203

203

00:10:37,030  -->  00:10:39,333
we have storage,
204

204

00:10:42,100  -->  00:10:43,840
we have the RAM and then finally
205

205

00:10:43,840  -->  00:10:46,150
we're gonna have the description.
206

206

00:10:46,150  -->  00:10:47,700
And I guess that's all for now.
207

207

00:10:53,020  -->  00:10:56,250
Alright, now there's just one small issue here,
208

208

00:10:56,250  -->  00:10:59,890
which is that replace only replaces the first occurrence
209

209

00:10:59,890  -->  00:11:02,090
of each of the labels, so of the strings
210

210

00:11:02,090  -->  00:11:03,140
that we're searching for.
211

211

00:11:03,140  -->  00:11:06,250
Now we have the price here I remember twice.
212

212

00:11:06,250  -->  00:11:08,580
And so we have to change that,
213

213

00:11:08,580  -->  00:11:10,370
and the way we do it is to actually use something
214

214

00:11:10,370  -->  00:11:12,850
called a regular expression, okay?
215

215

00:11:12,850  -->  00:11:15,170
And I'm not gonna go deep into that here.
216

216

00:11:15,170  -->  00:11:18,680
Again, you can just always Google a regular expression
217

217

00:11:18,680  -->  00:11:20,150
when you need it, okay?
218

218

00:11:20,150  -->  00:11:22,400
Now all I'm gonna do here is to actually replace
219

219

00:11:22,400  -->  00:11:25,720
these quotes here with a slash, okay?
220

220

00:11:25,720  -->  00:11:28,400
Because the regular expression always starts and ends
221

221

00:11:28,400  -->  00:11:30,663
with a dash, and then the same here.
222

222

00:11:32,530  -->  00:11:34,683
So all of these here need to go now,
223

223

00:11:36,250  -->  00:11:39,990
and then slash and G, okay?
224

224

00:11:39,990  -->  00:11:41,970
So again, a regular expressions is something
225

225

00:11:41,970  -->  00:11:43,248
that you can just Google.
226

226

00:11:43,248  -->  00:11:44,550
This is not a part of Node.js,
227

227

00:11:44,550  -->  00:11:47,730
it is just a regular JavaScript, alright?
228

228

00:11:47,730  -->  00:11:49,689
And if this here seems a lot of work to you,
229

229

00:11:49,689  -->  00:11:52,040
then of course as I mentioned before,
230

230

00:11:52,040  -->  00:11:54,580
there are tools in Node.js, and mainly I'm talking
231

231

00:11:54,580  -->  00:11:56,980
about something called Express which is a framework
232

232

00:11:56,980  -->  00:12:00,100
for Node which takes some of the pain away from this.
233

233

00:12:00,100  -->  00:12:03,070
So we can use something called template engines
234

234

00:12:03,070  -->  00:12:05,820
which will make it a lot easier to do this,
235

235

00:12:05,820  -->  00:12:07,150
what we're now doing manually,
236

236

00:12:07,150  -->  00:12:09,270
but again I think it's a great exercise
237

237

00:12:09,270  -->  00:12:11,080
to learn how things actually work
238

238

00:12:11,080  -->  00:12:13,610
and how you can do everything on your own also
239

239

00:12:13,610  -->  00:12:16,400
even without using any framework, alright.
240

240

00:12:16,400  -->  00:12:20,098
So we should now have our final HTML in this output variable
241

241

00:12:20,098  -->  00:12:23,860
and then all we have to do is to actually send this
242

242

00:12:23,860  -->  00:12:26,330
to the browser, so send a response back.
243

243

00:12:26,330  -->  00:12:30,010
So we use the res variable again, so a res object,
244

244

00:12:30,010  -->  00:12:33,493
and then end and output.
245

245

00:12:35,700  -->  00:12:37,940
Alright, let's check that out.
246

246

00:12:37,940  -->  00:12:42,160
We have number four and we have some kind of error here,
247

247

00:12:42,160  -->  00:12:43,960
so let's check out what's happening.
248

248

00:12:44,810  -->  00:12:47,810
And it says here that output has already been declared
249

249

00:12:47,810  -->  00:12:50,253
and of course yeah, this doesn't make any sense.
250

250

00:12:52,214  -->  00:12:53,230
Let's just get rid of all of them,
251

251

00:12:53,230  -->  00:12:55,166
so we only need to declare it of course once
252

252

00:12:55,166  -->  00:12:56,903
and then we're good to go.
253

253

00:12:58,520  -->  00:13:01,930
Try that again, and bam, here we go.
254

254

00:13:01,930  -->  00:13:05,800
So we have our real HTML page here with all the data
255

255

00:13:05,800  -->  00:13:09,650
that is coming from the Samsung Notebook nine.
256

256

00:13:09,650  -->  00:13:13,870
So from, yeah number four.
257

257

00:13:13,870  -->  00:13:15,830
So we have the RAM storage screen
258

258

00:13:15,830  -->  00:13:17,590
and you will see everything is the same
259

259

00:13:17,590  -->  00:13:20,470
as we have in our data JSON, so that's amazing,
260

260

00:13:20,470  -->  00:13:22,010
that's really great.
261

261

00:13:22,010  -->  00:13:24,010
Number one is the Apple MacBook
262

262

00:13:24,010  -->  00:13:28,030
and now we have one terabyte, 15 inch retina display
263

263

00:13:28,030  -->  00:13:29,673
and a six core Intel i9.
264

264

00:13:30,550  -->  00:13:34,190
And of course there's the huge price.
265

265

00:13:34,190  -->  00:13:36,277
Now one thing that's missing here is the image,
266

266

00:13:36,277  -->  00:13:38,340
and we're gonna fix that a bit later.
267

267

00:13:38,340  -->  00:13:40,128
Because that's something a bit particular
268

268

00:13:40,128  -->  00:13:43,510
and for now I just want to continue with this templating
269

269

00:13:43,510  -->  00:13:46,270
now for the other part, so for the products.
270

270

00:13:46,270  -->  00:13:48,610
So we have the laptop page now working,
271

271

00:13:48,610  -->  00:13:50,230
let's go ahead and do the same
272

272

00:13:50,230  -->  00:13:52,910
for the product overview.
273

273

00:13:52,910  -->  00:13:57,200
So basically this part here, okay?
274

274

00:13:57,200  -->  00:13:59,260
Now this will be a bit more difficult
275

275

00:13:59,260  -->  00:14:01,800
because we will basically have a loop which will loop
276

276

00:14:01,800  -->  00:14:04,550
over all of our products and then for each of them
277

277

00:14:04,550  -->  00:14:06,980
create this HTML for this card here.
278

278

00:14:06,980  -->  00:14:09,200
So if we have only one product it will only create
279

279

00:14:09,200  -->  00:14:11,940
of course one of these product cards.
280

280

00:14:11,940  -->  00:14:14,970
If we have 10, then we want 10 of these product cards.
281

281

00:14:14,970  -->  00:14:18,580
And so we have to do that with a kind of loop.
282

282

00:14:18,580  -->  00:14:23,030
So let's again start by creating a template, okay?
283

283

00:14:23,030  -->  00:14:25,253
So we have the template overview.
284

284

00:14:26,770  -->  00:14:30,240
And so let's go ahead and do the same as we did before
285

285

00:14:30,240  -->  00:14:33,250
down here in the HTML, alright?
286

286

00:14:33,250  -->  00:14:35,560
And actually I think I forgot something here,
287

287

00:14:35,560  -->  00:14:38,233
because the product name should also be in the title.
288

288

00:14:41,200  -->  00:14:42,963
So right here as well.
289

289

00:14:47,330  -->  00:14:50,830
Okay, so now if we change, now it also says Dell XPS 13
290

290

00:14:50,830  -->  00:14:53,510
in the title and also down here.
291

291

00:14:53,510  -->  00:14:56,000
So that part we didn't have before.
292

292

00:14:56,000  -->  00:14:59,180
Anyway, going back to the template overview
293

293

00:14:59,180  -->  00:15:01,916
we will now actually have to split it in two.
294

294

00:15:01,916  -->  00:15:04,000
And that's because of what I explained to you
295

295

00:15:04,000  -->  00:15:08,130
a moment ago which is that we have to create this card here.
296

296

00:15:08,130  -->  00:15:10,832
So only this part, we have to create this one here
297

297

00:15:10,832  -->  00:15:14,050
in a loop and we have to create as many as we need
298

298

00:15:14,050  -->  00:15:17,400
according to the number of laptops in our data.
299

299

00:15:17,400  -->  00:15:20,520
And so we need one template for everything that's outside
300

300

00:15:20,520  -->  00:15:22,850
that's not the card, so that we have basically
301

301

00:15:22,850  -->  00:15:26,410
that container where we can then put the cards into, okay?
302

302

00:15:26,410  -->  00:15:27,610
Does that make sense?
303

303

00:15:27,610  -->  00:15:30,020
So actually go ahead and cut this here,
304

304

00:15:30,020  -->  00:15:31,363
create a new template,
305

305

00:15:35,040  -->  00:15:36,297
template card.html.
306

306

00:15:39,120  -->  00:15:40,707
And then paste it here.
307

307

00:15:40,707  -->  00:15:43,624
And what we want here in this place
308

308

00:15:44,921  -->  00:15:46,366
is all the cards.
309

309

00:15:46,366  -->  00:15:48,360
So you will create a string basically with all
310

310

00:15:48,360  -->  00:15:51,020
of the HTML for all the cards and then replace
311

311

00:15:51,020  -->  00:15:55,010
this string with that code which contains the cards, okay?
312

312

00:15:55,010  -->  00:15:56,630
And so in here we're actually done,
313

313

00:15:56,630  -->  00:15:59,623
so all we have to replace really is this part.
314

314

00:16:00,690  -->  00:16:02,640
Up here there's nothing really.
315

315

00:16:02,640  -->  00:16:06,050
And then all the data is actually here.
316

316

00:16:06,050  -->  00:16:07,400
So again we have the image.
317

317

00:16:13,760  -->  00:16:17,614
Let me go ahead and copy this pattern here,
318

318

00:16:17,614  -->  00:16:22,614
then in the alt we will have the product name again.
319

319

00:16:29,120  -->  00:16:30,693
And here the same.
320

320

00:16:36,470  -->  00:16:37,703
Here it's the screen.
321

321

00:16:43,190  -->  00:16:47,253
The CPU, and finally the price.
322

322

00:16:47,253  -->  00:16:50,630
This one here has a bit less data.
323

323

00:16:50,630  -->  00:16:52,990
Now actually we also need something else,
324

324

00:16:52,990  -->  00:16:55,630
and that is the href for this link.
325

325

00:16:55,630  -->  00:16:58,233
So we want to go to laptop,
326

326

00:16:59,676  -->  00:17:01,550
and then remember our query string.
327

327

00:17:01,550  -->  00:17:06,520
So ID equals, and then the ID, right?
328

328

00:17:06,520  -->  00:17:09,260
So let me show that to you in the original.
329

329

00:17:09,260  -->  00:17:13,075
So in here as you can see down there in the corner, right?
330

330

00:17:13,075  -->  00:17:17,420
We have laptop and then the query ID of ID equals zero,
331

331

00:17:17,420  -->  00:17:20,230
because that will then lead us to the page,
332

332

00:17:20,230  -->  00:17:21,940
as you see then the ID zero,
333

333

00:17:21,940  -->  00:17:24,880
which will then load the data according to the ID.
334

334

00:17:24,880  -->  00:17:27,487
So as we did in the previous step, okay?
335

335

00:17:27,487  -->  00:17:30,940
And so now in the overview we will actually have to provide,
336

336

00:17:30,940  -->  00:17:34,350
we will have to construct this ID so that it will then
337

337

00:17:34,350  -->  00:17:38,280
take is to the correct laptop that we want to display.
338

338

00:17:38,280  -->  00:17:39,940
Okay, make sense?
339

339

00:17:39,940  -->  00:17:44,930
So again, the path is laptop and then the ID equals
340

340

00:17:44,930  -->  00:17:48,810
the ID that we're then going to replace, alright?
341

341

00:17:48,810  -->  00:17:52,120
And so that's actually it already I believe.
342

342

00:17:52,120  -->  00:17:55,260
And so let's go back and do that here in route
343

343

00:17:55,260  -->  00:17:58,013
for the product, so the product overview.
344

344

00:17:58,912  -->  00:18:01,060
We don't need that, and now we could go ahead
345

345

00:18:01,060  -->  00:18:03,080
and copy a bunch of this code here,
346

346

00:18:03,080  -->  00:18:05,970
but then we would have duplicate code and that's not ideal.
347

347

00:18:05,970  -->  00:18:08,670
So instead let's simply create a function for that
348

348

00:18:08,670  -->  00:18:11,230
which we can then reuse, so that's always the better
349

349

00:18:11,230  -->  00:18:12,860
thing to do not only in JavaScript
350

350

00:18:12,860  -->  00:18:14,633
but in programming in general.
351

351

00:18:15,660  -->  00:18:19,587
Right, so let's create function replaceTemplate.
352

352

00:18:22,864  -->  00:18:25,647
And so what I need in here is the originalHTML,
353

353

00:18:29,727  -->  00:18:33,720
and we need of course the laptop, okay?
354

354

00:18:33,720  -->  00:18:36,520
And so now what I'm going to do is to cut
355

355

00:18:36,520  -->  00:18:40,823
all of this and paste it down here, okay?
356

356

00:18:42,750  -->  00:18:46,029
Just format the selection and alright,
357

357

00:18:46,029  -->  00:18:48,460
just one minor change that we have to do here,
358

358

00:18:48,460  -->  00:18:50,050
because this is no longer called data now,
359

359

00:18:50,050  -->  00:18:52,590
it is the original HTML,
360

360

00:18:52,590  -->  00:18:55,223
which is coming from this parameter, right?
361

361

00:18:56,637  -->  00:19:00,263
So in the end all we have to do is to return the output.
362

362

00:19:03,590  -->  00:19:04,423
Okay?
363

363

00:19:04,423  -->  00:19:07,813
And finally we also need to replace the ID.
364

364

00:19:10,640  -->  00:19:13,510
So that's for this part here.
365

365

00:19:13,510  -->  00:19:16,890
This part we didn't yet have here in the code
366

366

00:19:16,890  -->  00:19:20,180
and so I'm adding that to the replaceTemplate function now.
367

367

00:19:20,180  -->  00:19:22,460
So let's use replaceTemplate.
368

368

00:19:22,460  -->  00:19:25,583
First here in this place which we already had working.
369

369

00:19:26,670  -->  00:19:31,313
So const output will be replaceTemplate
370

370

00:19:32,600  -->  00:19:37,393
and here we pass in the data and the laptop, alright?
371

371

00:19:40,220  -->  00:19:42,660
And just to see if this actually works,
372

372

00:19:42,660  -->  00:19:46,450
let's just reload this and indeed it does.
373

373

00:19:46,450  -->  00:19:49,410
So everything works the same and so we simply
374

374

00:19:49,410  -->  00:19:52,180
explored this functionality into its own function
375

375

00:19:52,180  -->  00:19:53,540
so that we can now do the same
376

376

00:19:53,540  -->  00:19:58,210
with the product overview, okay?
377

377

00:19:58,210  -->  00:20:00,280
So where do we have that part?
378

378

00:20:00,280  -->  00:20:01,975
Ah, it's right here.
379

379

00:20:01,975  -->  00:20:04,062
Let's actually add some comment here to make this
380

380

00:20:04,062  -->  00:20:04,895
a bit more legible.
381

381

00:20:08,000  -->  00:20:10,373
So product overview, or products.
382

382

00:20:16,193  -->  00:20:17,690
And the laptop detail.
383

383

00:20:17,690  -->  00:20:21,833
And then URL not found.
384

384

00:20:23,700  -->  00:20:24,920
Alright, so that always makes it
385

385

00:20:24,920  -->  00:20:26,910
a little bit easier to understand.
386

386

00:20:26,910  -->  00:20:29,650
So again we need to do this in two phases
387

387

00:20:29,650  -->  00:20:31,460
basically as I explained before.
388

388

00:20:31,460  -->  00:20:35,300
We first need to basically load all the HTML
389

389

00:20:35,300  -->  00:20:36,930
which is not in the cart.
390

390

00:20:36,930  -->  00:20:40,130
So basically just everything here around.
391

391

00:20:40,130  -->  00:20:44,690
So the tile basically and then this background, okay?
392

392

00:20:44,690  -->  00:20:48,613
And so that is this HTML that we have down here.
393

393

00:20:50,618  -->  00:20:51,451
So just this.
394

394

00:20:51,451  -->  00:20:53,294
And we will then go ahead and replace the cards
395

395

00:20:53,294  -->  00:20:58,294
with the HTML generated using this template, okay?
396

396

00:20:58,740  -->  00:21:00,530
So again we need to do this in two steps
397

397

00:21:00,530  -->  00:21:04,060
because we want to have a dynamic number of laptops.
398

398

00:21:04,060  -->  00:21:07,610
So I'm just gonna go ahead and grab this code here
399

399

00:21:07,610  -->  00:21:09,290
because it's quite similar
400

400

00:21:09,290  -->  00:21:12,290
and there's no need to rewrite all of it.
401

401

00:21:12,290  -->  00:21:14,180
So it's template overview now
402

402

00:21:16,050  -->  00:21:18,560
and now this part is what we don't need.
403

403

00:21:18,560  -->  00:21:21,210
And now just to check, let's actually simply render
404

404

00:21:21,210  -->  00:21:23,470
what we already have, okay?
405

405

00:21:23,470  -->  00:21:27,240
And so instead of render output, it's now render the data,
406

406

00:21:27,240  -->  00:21:29,730
so this parameter here, okay?
407

407

00:21:29,730  -->  00:21:31,093
So let's try that out.
408

408

00:21:35,890  -->  00:21:39,420
So products is our route and here we go.
409

409

00:21:39,420  -->  00:21:42,430
So we have the title and then we have this string here
410

410

00:21:42,430  -->  00:21:45,833
that we now in the next step need to replace with our cards.
411

411

00:21:47,480  -->  00:21:51,380
So I can actually go ahead and copy this again
412

412

00:21:51,380  -->  00:21:54,580
and then have it in here, okay?
413

413

00:21:54,580  -->  00:21:57,240
And so this callback function in here basically,
414

414

00:21:57,240  -->  00:22:00,700
so this new one here, needs to be inside the first one
415

415

00:22:00,700  -->  00:22:03,180
because we only want to read the card template
416

416

00:22:03,180  -->  00:22:06,350
as soon as the overview template has been read, okay?
417

417

00:22:06,350  -->  00:22:09,400
So basically to create a sequence here, alright?
418

418

00:22:09,400  -->  00:22:12,353
So this is now, I put cards, card.
419

419

00:22:14,120  -->  00:22:16,050
This is no longer needed 'cause we're not going
420

420

00:22:16,050  -->  00:22:19,770
to send the data just here without the cards in there
421

421

00:22:19,770  -->  00:22:23,550
and so let's now loop through all of our different laptops
422

422

00:22:23,550  -->  00:22:27,050
and create the template for each of them, alright?
423

423

00:22:27,050  -->  00:22:30,440
And that would be fairly easy as well.
424

424

00:22:30,440  -->  00:22:32,946
So laptop data, remember that is the array
425

425

00:22:32,946  -->  00:22:35,540
where all of our laptops are stored,
426

426

00:22:35,540  -->  00:22:38,940
so all the objects for each of the laptops,
427

427

00:22:38,940  -->  00:22:40,470
and so we do a simple map.
428

428

00:22:40,470  -->  00:22:42,820
And remember that map is an array method
429

429

00:22:42,820  -->  00:22:45,520
which moves through the array and in each iteration
430

430

00:22:45,520  -->  00:22:47,680
it saves the result of the callback function
431

431

00:22:47,680  -->  00:22:49,860
into a new array, okay?
432

432

00:22:49,860  -->  00:22:52,860
And so we need to actually save this here to a new variable.
433

433

00:22:55,740  -->  00:22:57,130
Output, alright.
434

434

00:22:57,130  -->  00:22:58,800
So we've been calling this always output,
435

435

00:22:58,800  -->  00:23:01,840
and so this one is the cards output, alright?
436

436

00:23:01,840  -->  00:23:04,190
So we want to loop through the laptop area,
437

437

00:23:04,190  -->  00:23:07,900
and for each element, what we're going to do is
438

438

00:23:07,900  -->  00:23:09,850
to use our function.
439

439

00:23:09,850  -->  00:23:12,520
So our replace template function that we used before.
440

440

00:23:12,520  -->  00:23:15,030
And so now it's really handy that we did this function,
441

441

00:23:15,030  -->  00:23:18,385
alright, because all we need to do now is to pass
442

442

00:23:18,385  -->  00:23:21,230
in the cards HTML, so data and then the laptop,
443

443

00:23:21,230  -->  00:23:25,040
which in this case is the current element called EL, right?
444

444

00:23:25,040  -->  00:23:28,170
So remember we need to pass in the original HTML
445

445

00:23:28,170  -->  00:23:29,430
and the laptop.
446

446

00:23:29,430  -->  00:23:32,550
And in this case the original HTML is this data
447

447

00:23:32,550  -->  00:23:34,810
that we read for the card and the element
448

448

00:23:34,810  -->  00:23:37,634
is the current element of this iteration
449

449

00:23:37,634  -->  00:23:41,440
through the laptop data array, alright?
450

450

00:23:41,440  -->  00:23:44,730
So let's just lock this to the console here
451

451

00:23:44,730  -->  00:23:48,410
just so that it makes 100% sense to you.
452

452

00:23:48,410  -->  00:23:50,070
I'm not sure it does at this point,
453

453

00:23:50,070  -->  00:23:51,950
and so let's just reload.
454

454

00:23:51,950  -->  00:23:54,160
This looks a bit weird, but don't worry.
455

455

00:23:54,160  -->  00:23:57,790
Right now I'm only interested in the output here,
456

456

00:23:57,790  -->  00:23:59,460
and so you see that we have now
457

457

00:23:59,460  -->  00:24:02,090
the HTML for all these cards.
458

458

00:24:02,090  -->  00:24:05,940
So it's an array actually, so an array of all these strings.
459

459

00:24:05,940  -->  00:24:10,050
So we have the card, and here we have the next
460

460

00:24:10,050  -->  00:24:12,120
element, so the next element in the array.
461

461

00:24:12,120  -->  00:24:14,700
A new card, and so we will have five cards
462

462

00:24:14,700  -->  00:24:17,740
for all the five laptops, okay?
463

463

00:24:17,740  -->  00:24:18,780
Make sense?
464

464

00:24:18,780  -->  00:24:21,535
Now we want this actually in a string,
465

465

00:24:21,535  -->  00:24:25,110
and so all we have to do is to say join.
466

466

00:24:25,110  -->  00:24:27,512
And again we did this before so this is nothing new really.
467

467

00:24:27,512  -->  00:24:29,940
So we join this with an empty string
468

468

00:24:31,410  -->  00:24:32,973
and if I reload this now,
469

469

00:24:34,060  -->  00:24:37,950
you will see that the output is simply a huge string
470

470

00:24:37,950  -->  00:24:40,733
with all of this HTML, so perfect.
471

471

00:24:42,420  -->  00:24:44,800
So what is the next step that we need to do?
472

472

00:24:44,800  -->  00:24:47,170
Well all we have to do now is to replace that cards
473

473

00:24:47,170  -->  00:24:51,520
placeholder, so this one here with this HTML that
474

474

00:24:51,520  -->  00:24:55,060
we just generated, okay?
475

475

00:24:55,060  -->  00:24:56,393
So this data here.
476

476

00:24:57,370  -->  00:24:59,470
And so let's actually give it a name here,
477

477

00:25:00,442  -->  00:25:04,013
let output equal the data.
478

478

00:25:06,370  -->  00:25:11,360
Alright, and so now all we have to do is to change
479

479

00:25:11,360  -->  00:25:14,110
that output so that our original data here,
480

480

00:25:14,110  -->  00:25:16,676
so the overview output, and let's actually call it
481

481

00:25:16,676  -->  00:25:17,843
overviewOutput
482

482

00:25:20,150  -->  00:25:22,823
to make it a little bit less confusing I guess.
483

483

00:25:24,800  -->  00:25:29,630
So the overview output will be overviewOutput.replace.
484

484

00:25:32,640  -->  00:25:35,660
And so the string is this one,
485

485

00:25:35,660  -->  00:25:37,090
and now we don't have to worry about
486

486

00:25:37,090  -->  00:25:39,530
any irregular expressions because there's only
487

487

00:25:39,530  -->  00:25:40,853
going to be one of this.
488

488

00:25:41,850  -->  00:25:44,890
So we're going to replace this placeholder by the cards
489

489

00:25:44,890  -->  00:25:46,333
or with the cards output.
490

490

00:25:48,310  -->  00:25:53,047
And now all we need to do is to render that overviewOutput
491

491

00:25:54,125  -->  00:25:55,800
and that should be it.
492

492

00:25:55,800  -->  00:26:00,800
Okay, let's try it out and bam, here we go, amazing right?
493

493

00:26:02,090  -->  00:26:03,800
All that's really missing is the image again,
494

494

00:26:03,800  -->  00:26:07,270
but again I'm gonna fix that in a minute.
495

495

00:26:07,270  -->  00:26:09,710
But for now just see how it actually
496

496

00:26:09,710  -->  00:26:12,317
dynamically on the fly generated this page
497

497

00:26:12,317  -->  00:26:14,303
based on our data.
498

498

00:26:15,340  -->  00:26:17,800
And if I go ahead and remove one of them of course,
499

499

00:26:17,800  -->  00:26:22,563
let's say I remove this Dell product here,
500

500

00:26:23,990  -->  00:26:26,490
just get rid of it and now reload,
501

501

00:26:26,490  -->  00:26:29,760
then it's of course gone and now we only have
502

502

00:26:29,760  -->  00:26:31,430
these four left.
503

503

00:26:31,430  -->  00:26:33,867
So really it does it automatically, dynamically,
504

504

00:26:33,867  -->  00:26:35,000
and on the fly.
505

505

00:26:35,000  -->  00:26:36,850
So that is the power of Node.js
506

506

00:26:36,850  -->  00:26:38,430
and JavaScript on the server.
507

507

00:26:38,430  -->  00:26:43,220
As you see, you can really recycle 90% of what you already
508

508

00:26:43,220  -->  00:26:45,700
know of JavaScript and take it to the server
509

509

00:26:45,700  -->  00:26:50,700
to build these backend applications without any problem.
510

510

00:26:51,510  -->  00:26:55,194
So now it's back and it's back here as well.
511

511

00:26:55,194  -->  00:26:57,440
Okay, and with everything now working,
512

512

00:26:57,440  -->  00:27:00,050
the last thing that we have to fix is these
513

513

00:27:00,050  -->  00:27:03,870
images not working, so let's actually take a look at them
514

514

00:27:03,870  -->  00:27:06,750
and inspect them and try to figure out
515

515

00:27:06,750  -->  00:27:09,120
what is not working here.
516

516

00:27:09,120  -->  00:27:12,160
So for all of this we have this error message,
517

517

00:27:12,160  -->  00:27:15,720
the server responded with a status of 404 not found.
518

518

00:27:15,720  -->  00:27:18,240
So why does this actually happen?
519

519

00:27:18,240  -->  00:27:21,550
Well it does happen because Node.js doesn't serve
520

520

00:27:21,550  -->  00:27:23,220
any files by default.
521

521

00:27:23,220  -->  00:27:26,873
Every URL is always like a route.
522

522

00:27:27,980  -->  00:27:30,563
And so for example, if we have this image here,
523

523

00:27:31,810  -->  00:27:35,640
for Node.js this is just a simple request.
524

524

00:27:35,640  -->  00:27:39,920
So let's try to figure out what happens if we were
525

525

00:27:39,920  -->  00:27:41,483
to simply put it in here.
526

526

00:27:43,460  -->  00:27:45,687
Like this, then we will get the URL
527

527

00:27:45,687  -->  00:27:47,363
was not found on the server.
528

528

00:27:48,610  -->  00:27:50,870
Alright, maybe you're thinking that's because
529

529

00:27:50,870  -->  00:27:53,520
it is in the image folder in data.
530

530

00:27:53,520  -->  00:27:55,560
Alright, so let's try that out.
531

531

00:27:55,560  -->  00:27:57,830
Because you might think that this part here
532

532

00:27:57,830  -->  00:28:00,930
is like the home folder and then we need to simply type
533

533

00:28:00,930  -->  00:28:04,890
data/image and that's it.
534

534

00:28:04,890  -->  00:28:07,391
But that is not how it works, actually.
535

535

00:28:07,391  -->  00:28:11,090
Because on a Node.js folder, the concept of folders
536

536

00:28:11,090  -->  00:28:13,070
and files does not really exist.
537

537

00:28:13,070  -->  00:28:15,780
So everything is like a request.
538

538

00:28:15,780  -->  00:28:18,410
And if we request this image here,
539

539

00:28:18,410  -->  00:28:20,540
well then we need to kind of respond
540

540

00:28:20,540  -->  00:28:22,110
to that request as well.
541

541

00:28:22,110  -->  00:28:26,062
But right now we only request to the products route
542

542

00:28:26,062  -->  00:28:28,620
and to the laptop route, right?
543

543

00:28:28,620  -->  00:28:32,640
And so we now need basically a route for images as well,
544

544

00:28:32,640  -->  00:28:36,203
so we can then surf these images on these requests.
545

545

00:28:37,240  -->  00:28:39,420
Okay, and to illustrate this even more,
546

546

00:28:39,420  -->  00:28:43,303
let's go ahead and log this path name here.
547

547

00:28:46,740  -->  00:28:50,530
Okay, and so now you will see that there is not just
548

548

00:28:50,530  -->  00:28:54,300
one request, right, so there is not just a request
549

549

00:28:54,300  -->  00:28:57,860
for this product, but also for style.css
550

550

00:28:57,860  -->  00:29:00,837
and for these five images, okay?
551

551

00:29:00,837  -->  00:29:02,450
And so we loaded this page,
552

552

00:29:02,450  -->  00:29:04,140
but that is not the only request.
553

553

00:29:04,140  -->  00:29:06,070
All of the resources that are on the page
554

554

00:29:06,070  -->  00:29:08,830
are also requests and we need to respond to them
555

555

00:29:08,830  -->  00:29:12,400
if we want to display something based on them, right?
556

556

00:29:12,400  -->  00:29:14,490
So in this case, these images.
557

557

00:29:14,490  -->  00:29:16,030
We also have the style here,
558

558

00:29:16,030  -->  00:29:17,730
but let me just get rid of that.
559

559

00:29:17,730  -->  00:29:20,753
It's probably here in one of these templates right here.
560

560

00:29:20,753  -->  00:29:23,380
This is actually the reason why I did the style in lines
561

561

00:29:23,380  -->  00:29:26,450
so I put all the styles right in the HTML files
562

562

00:29:26,450  -->  00:29:29,030
so that we don't have to deal with CSS as well.
563

563

00:29:29,030  -->  00:29:31,600
Because then we would have to need yet another route,
564

564

00:29:31,600  -->  00:29:34,300
and that's not really practical, alright?
565

565

00:29:34,300  -->  00:29:37,930
So again with these frameworks like Express.js,
566

566

00:29:37,930  -->  00:29:39,000
this is a lot easier.
567

567

00:29:39,000  -->  00:29:41,150
You don't have to really do this manually,
568

568

00:29:41,150  -->  00:29:43,360
but once again I like to really understand
569

569

00:29:43,360  -->  00:29:46,139
how and why things work the way they do.
570

570

00:29:46,139  -->  00:29:50,460
And I think it's also very beneficial for you as well, okay?
571

571

00:29:50,460  -->  00:29:53,693
So let's now try to do a route for images in general.
572

572

00:29:53,693  -->  00:29:55,670
Of course we're not going to do a route
573

573

00:29:55,670  -->  00:29:57,960
for each of them individually, right?
574

574

00:29:57,960  -->  00:29:59,850
We're going to have a general route
575

575

00:29:59,850  -->  00:30:01,840
that works for all of the images.
576

576

00:30:01,840  -->  00:30:04,663
So what we want here is another route.
577

577

00:30:07,030  -->  00:30:08,073
So images.
578

578

00:30:09,210  -->  00:30:12,770
Else if, and now what we need here is basically
579

579

00:30:12,770  -->  00:30:15,960
a true false value indicating if the resource
580

580

00:30:15,960  -->  00:30:18,800
that we're requesting is an image, okay?
581

581

00:30:18,800  -->  00:30:20,610
And again if you need something like this
582

582

00:30:20,610  -->  00:30:23,600
you can always Google regular expression
583

583

00:30:23,600  -->  00:30:26,360
to find image extension, okay?
584

584

00:30:26,360  -->  00:30:28,510
So basically that's what I did for this,
585

585

00:30:28,510  -->  00:30:30,417
because it's really difficult and time intensive
586

586

00:30:30,417  -->  00:30:33,460
to really learn how regular expression works.
587

587

00:30:33,460  -->  00:30:36,460
I find it easier to just Google it, okay?
588

588

00:30:36,460  -->  00:30:39,200
So we always start a regular expression with slash
589

589

00:30:39,200  -->  00:30:41,200
and end it with slash, and then in there
590

590

00:30:42,039  -->  00:30:43,630
there's some kind of magic happening.
591

591

00:30:43,630  -->  00:30:45,680
And in this case it works just like this.
592

592

00:30:47,100  -->  00:30:50,350
So basically we test if there is an extension
593

593

00:30:50,350  -->  00:30:52,000
with just the dot.
594

594

00:30:52,000  -->  00:30:54,810
So if there is dot jpg
595

595

00:30:57,490  -->  00:30:59,070
or maybe a jpg written with E
596

596

00:30:59,070  -->  00:31:03,337
because sometimes you see that or a png,
597

597

00:31:04,220  -->  00:31:06,770
because we actually have a png, this one here.
598

598

00:31:06,770  -->  00:31:09,280
And let's say we also might have a gif
599

599

00:31:09,280  -->  00:31:11,170
or a gif, I don't know.
600

600

00:31:11,170  -->  00:31:13,700
And so let's add that here as well.
601

601

00:31:13,700  -->  00:31:15,440
Then we need this dollar sign here,
602

602

00:31:15,440  -->  00:31:18,440
for some reason, slash i, alright?
603

603

00:31:18,440  -->  00:31:21,515
And so this is all regular expression
604

604

00:31:21,515  -->  00:31:25,760
and we will now test if our path name contains
605

605

00:31:25,760  -->  00:31:27,460
basically this regular expression.
606

606

00:31:29,010  -->  00:31:32,400
So we say .test which is a method that is available
607

607

00:31:32,400  -->  00:31:34,543
on all regular expressions in JavaScript.
608

608

00:31:36,820  -->  00:31:38,773
And then or pathName.
609

609

00:31:39,910  -->  00:31:41,920
This one I don't need, and okay.
610

610

00:31:41,920  -->  00:31:44,890
So this is our regular expression again,
611

611

00:31:44,890  -->  00:31:49,240
and we will now test if our path name which is for example
612

612

00:31:49,240  -->  00:31:51,890
this one here, this one or this one,
613

613

00:31:51,890  -->  00:31:54,360
we will test if it contains .jpg or .jpeg
614

614

00:31:55,786  -->  00:31:58,610
or .png or .gif, alright?
615

615

00:31:58,610  -->  00:32:01,510
And if it does, well then we're going to read that image
616

616

00:32:01,510  -->  00:32:03,470
and serve it or basically send it
617

617

00:32:03,470  -->  00:32:06,750
back as the response, okay?
618

618

00:32:06,750  -->  00:32:08,063
So let's just do that.
619

619

00:32:09,330  -->  00:32:14,330
So readFile, then again we need the dirname
620

620

00:32:15,160  -->  00:32:17,140
and now where is this image?
621

621

00:32:17,140  -->  00:32:22,080
So imagine that we have macbook-pro-15.jpg as the request.
622

622

00:32:22,080  -->  00:32:27,080
So what we need then is to go into our folder/data/img
623

623

00:32:29,560  -->  00:32:30,913
and then our path name.
624

624

00:32:33,140  -->  00:32:33,973
Make sense?
625

625

00:32:33,973  -->  00:32:35,263
Because that is the name of the image
626

626

00:32:35,263  -->  00:32:38,090
that we're actually trying to read, okay?
627

627

00:32:38,090  -->  00:32:41,210
Now this time we're not going to do the character encoding
628

628

00:32:41,210  -->  00:32:43,760
because this is not text, it's just an image.
629

629

00:32:43,760  -->  00:32:47,540
And so now all we have to do is to pass in the callback
630

630

00:32:47,540  -->  00:32:50,100
function which will be called as soon as we're done
631

631

00:32:50,100  -->  00:32:51,350
reading the image.
632

632

00:32:51,350  -->  00:32:54,410
And again it's important that this happens asynchronously,
633

633

00:32:54,410  -->  00:32:56,060
and so that's why we're using the readFile
634

634

00:32:56,060  -->  00:32:58,830
and not readFile async, alright?
635

635

00:32:58,830  -->  00:33:00,820
Now as soon as we're done reading that data,
636

636

00:33:00,820  -->  00:33:05,820
all we have to do is to really send the head as always,
637

637

00:33:06,430  -->  00:33:09,260
and this time let's just do image
638

638

00:33:11,270  -->  00:33:12,323
and then jpg.
639

639

00:33:13,530  -->  00:33:15,260
Okay, so that's the content type.
640

640

00:33:15,260  -->  00:33:18,370
There are many, and one of them is image/jpg,
641

641

00:33:18,370  -->  00:33:22,270
so the type of data and then the file
642

642

00:33:22,270  -->  00:33:24,820
extension actually, alright?
643

643

00:33:24,820  -->  00:33:29,820
And then as always, res and then end and the data.
644

644

00:33:30,140  -->  00:33:33,650
Okay, now in real world application we should also
645

645

00:33:33,650  -->  00:33:36,120
have some error handling in place,
646

646

00:33:36,120  -->  00:33:39,400
and that's why we always have access to this error
647

647

00:33:39,400  -->  00:33:41,466
here as well, so imagine that the image
648

648

00:33:41,466  -->  00:33:43,560
we're trying to read is not really there,
649

649

00:33:43,560  -->  00:33:44,870
well then we would have an error
650

650

00:33:44,870  -->  00:33:46,550
and we could handle that error.
651

651

00:33:46,550  -->  00:33:47,990
But here in this case we're just going to assume
652

652

00:33:47,990  -->  00:33:51,142
that everything works just fine, alright?
653

653

00:33:51,142  -->  00:33:53,800
Okay, let's now test this.
654

654

00:33:53,800  -->  00:33:58,650
Reload and bam, our images are now there.
655

655

00:33:58,650  -->  00:34:00,920
Still one error, don't know what that is.
656

656

00:34:00,920  -->  00:34:04,343
Ah, it's just a CSS for some reason.
657

657

00:34:05,330  -->  00:34:09,403
Take a look, maybe it is in here as well.
658

658

00:34:11,240  -->  00:34:12,900
No it's not.
659

659

00:34:12,900  -->  00:34:15,393
The overview also shouldn't have it anymore.
660

660

00:34:17,750  -->  00:34:19,413
Ah okay, it's here.
661

661

00:34:21,080  -->  00:34:22,380
We can now close all these templates,
662

662

00:34:22,380  -->  00:34:25,410
don't need them any more, reload,
663

663

00:34:25,410  -->  00:34:27,340
and yeah, so now we have no error
664

664

00:34:27,340  -->  00:34:29,544
and we have our images as well.
665

665

00:34:29,544  -->  00:34:33,860
So again, each of these images is a separate request
666

666

00:34:33,860  -->  00:34:35,360
and we're handling that request,
667

667

00:34:35,360  -->  00:34:38,520
each of the requests actually here in this route.
668

668

00:34:38,520  -->  00:34:41,910
So this route handles images with the jpg, jpeg,
669

669

00:34:41,910  -->  00:34:43,710
png, or gif format.
670

670

00:34:43,710  -->  00:34:46,510
So as soon as we have one of these extensions
671

671

00:34:46,510  -->  00:34:49,410
in our URL, well then we will read the image
672

672

00:34:49,410  -->  00:34:52,450
from the file system and send it as a response
673

673

00:34:52,450  -->  00:34:55,250
to the browser, and so then like this
674

674

00:34:55,250  -->  00:34:58,170
the browser is able to of course display it on a page.
675

675

00:34:58,170  -->  00:35:00,740
And it's gonna work hopefully on these as well,
676

676

00:35:00,740  -->  00:35:01,690
and it does.
677

677

00:35:01,690  -->  00:35:03,870
So now we have the images here just like
678

678

00:35:03,870  -->  00:35:06,883
in our original store, which we can now close.
679

679

00:35:07,730  -->  00:35:10,088
And let's also actually try it like here
680

680

00:35:10,088  -->  00:35:13,020
and indeed, our image is also now here.
681

681

00:35:13,020  -->  00:35:15,647
So we can do this simple request here
682

682

00:35:15,647  -->  00:35:19,900
and our image is gonna show up just like this, alright?
683

683

00:35:19,900  -->  00:35:21,113
Oh what's going on here?
684

684

00:35:23,830  -->  00:35:27,933
Not really sure, it's really called product.
685

685

00:35:32,270  -->  00:35:37,270
And back, there's still an error in that code.
686

686

00:35:38,560  -->  00:35:39,940
So in the HTML.
687

687

00:35:39,940  -->  00:35:44,113
So let's open up that laptop and here should be a link.
688

688

00:35:47,210  -->  00:35:50,510
Yeah, it sends back to overview.html
689

689

00:35:50,510  -->  00:35:52,080
and it's of course not correct.
690

690

00:35:52,080  -->  00:35:56,067
What we want is to send it back to products, right?
691

691

00:36:02,470  -->  00:36:06,200
So reload this here and now as you can see, down there here
692

692

00:36:06,200  -->  00:36:09,003
it will send us back to products and here we go.
693

693

00:36:10,090  -->  00:36:13,370
So the Samsung here we see the Samsung.
694

694

00:36:13,370  -->  00:36:14,870
And yeah, it now works.
695

695

00:36:14,870  -->  00:36:18,060
So the project is really finished now.
696

696

00:36:18,060  -->  00:36:20,040
Awesome, that's really really cool.
697

697

00:36:20,040  -->  00:36:23,019
And of course we only barely scratch the surface here
698

698

00:36:23,019  -->  00:36:25,140
of Node.js, right?
699

699

00:36:25,140  -->  00:36:27,920
So this is really just the absolute fundamentals
700

700

00:36:27,920  -->  00:36:29,490
of what you can do with it.
701

701

00:36:29,490  -->  00:36:32,020
But I think it was still very exciting
702

702

00:36:32,020  -->  00:36:33,990
and I hope that you found it useful
703

703

00:36:33,990  -->  00:36:37,460
and hopefully you're going to want to learn more after this.
704

704

00:36:37,460  -->  00:36:40,170
And if you do feel that Node.js is something you like
705

705

00:36:40,170  -->  00:36:43,470
or something you might find useful in the future,
706

706

00:36:43,470  -->  00:36:46,039
well let me tell you that I will actually be working
707

707

00:36:46,039  -->  00:36:48,690
on a brand new Node.js course over
708

708

00:36:48,690  -->  00:36:50,950
the next couple of months, alright?
709

709

00:36:50,950  -->  00:36:53,295
So that course will have a ton more explanations
710

710

00:36:53,295  -->  00:36:56,620
than just this small crash course.
711

711

00:36:56,620  -->  00:36:58,540
It will have a lot of theory, lectures,
712

712

00:36:58,540  -->  00:37:00,810
so that you really understand how Node.js works
713

713

00:37:00,810  -->  00:37:03,250
behind the scenes and of course a huge
714

714

00:37:03,250  -->  00:37:05,750
real world project where you're gonna learn
715

715

00:37:05,750  -->  00:37:07,916
everything about Node.js, Express,
716

716

00:37:07,916  -->  00:37:10,700
which is the framework that I just talked about,
717

717

00:37:10,700  -->  00:37:13,810
and also use MongoDB as a real database
718

718

00:37:13,810  -->  00:37:16,610
instead of just storing data in text files.
719

719

00:37:16,610  -->  00:37:18,870
So of course, usually the data comes from databases,
720

720

00:37:18,870  -->  00:37:21,710
not just text files like we did here, okay?
721

721

00:37:21,710  -->  00:37:23,900
That course will be available some time
722

722

00:37:23,900  -->  00:37:26,498
in first half of 2019 hopefully, alright?
723

723

00:37:26,498  -->  00:37:29,632
So I hope you can wait for that.
724

724

00:37:29,632  -->  00:37:31,507
In the mean time just keep coding,
725

725

00:37:31,507  -->  00:37:33,650
keep building great projects,
726

726

00:37:33,650  -->  00:37:36,277
and keep learning every day, alright?
727

727

00:37:36,277  -->  00:37:39,510
So I hope to see you soon in some of my next videos
728

728

00:37:39,510  -->  00:37:42,493
or courses and until then, have a good time.
