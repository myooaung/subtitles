1
1

00:00:01,080  -->  00:00:01,913
<v Jonas>As I've told you</v>
2

2

00:00:01,913  -->  00:00:03,760
over and over again in this course,
3

3

00:00:03,760  -->  00:00:06,670
thinking about architecture is absolutely fundamental
4

4

00:00:06,670  -->  00:00:08,510
before starting any new project.
5

5

00:00:08,510  -->  00:00:10,830
No matter if it's a Vanilla JavaScript project
6

6

00:00:10,830  -->  00:00:12,530
like the one we're about to build,
7

7

00:00:12,530  -->  00:00:14,400
or a React app or a Node app
8

8

00:00:14,400  -->  00:00:16,540
or whatever you're using, really.
9

9

00:00:16,540  -->  00:00:18,420
So we talked a lot about architecture
10

10

00:00:18,420  -->  00:00:20,040
back in the Budgety app,
11

11

00:00:20,040  -->  00:00:22,763
and so let's do the same before starting this project.
12

12

00:00:23,780  -->  00:00:26,570
Now, this time around, we're gonna use a widely used
13

13

00:00:26,570  -->  00:00:28,010
and well known architecture
14

14

00:00:28,010  -->  00:00:31,150
called the Model-View-Controller Architecture,
15

15

00:00:31,150  -->  00:00:33,180
or MVC for short.
16

16

00:00:33,180  -->  00:00:35,940
Now the main advantage of the MVC architecture
17

17

00:00:35,940  -->  00:00:38,040
is that it very nicely decouples
18

18

00:00:38,040  -->  00:00:40,610
the presentation logic from the application logic
19

19

00:00:40,610  -->  00:00:42,570
with a controller in between them
20

20

00:00:42,570  -->  00:00:44,600
that controls the entire app.
21

21

00:00:44,600  -->  00:00:46,850
And this is actually a bit similar to what we did
22

22

00:00:46,850  -->  00:00:48,650
with the Budgety app, right?
23

23

00:00:48,650  -->  00:00:49,740
But this time around,
24

24

00:00:49,740  -->  00:00:52,290
we're gonna implement it with ES6 modules
25

25

00:00:52,290  -->  00:00:55,440
instead of using the module pattern that we used before.
26

26

00:00:55,440  -->  00:00:58,400
Because using real modules is a lot easier
27

27

00:00:58,400  -->  00:01:01,180
and a more real separation of concerns.
28

28

00:01:01,180  -->  00:01:02,100
Now there are different ways
29

29

00:01:02,100  -->  00:01:03,880
of implementing the MVC pattern,
30

30

00:01:03,880  -->  00:01:05,440
some more complex than others,
31

31

00:01:05,440  -->  00:01:06,600
but we're gonna implement it
32

32

00:01:06,600  -->  00:01:08,550
in a very straightforward way here.
33

33

00:01:08,550  -->  00:01:09,560
I just wanted to let you know
34

34

00:01:09,560  -->  00:01:12,026
that if you Google around for MVC,
35

35

00:01:12,026  -->  00:01:16,230
then you will find it coded in some different ways, okay?
36

36

00:01:16,230  -->  00:01:17,063
But anyway,
37

37

00:01:17,063  -->  00:01:20,770
let's now look at MVC in the context of our actual app.
38

38

00:01:20,770  -->  00:01:23,430
So of course, we're gonna have a Controller
39

39

00:01:23,430  -->  00:01:26,960
which will have it's own file called index.js.
40

40

00:01:26,960  -->  00:01:30,480
So again, this will be possible thanks to ES6 modules,
41

41

00:01:30,480  -->  00:01:33,130
which allow us to make our JavaScript apps more modular
42

42

00:01:33,130  -->  00:01:35,460
by separating different aspects of the app
43

43

00:01:35,460  -->  00:01:37,260
into different files.
44

44

00:01:37,260  -->  00:01:40,030
Now about the Models, we will have one model
45

45

00:01:40,030  -->  00:01:42,850
for each of the different aspects of the app,
46

46

00:01:42,850  -->  00:01:44,630
and the same goes for the Views.
47

47

00:01:44,630  -->  00:01:48,430
So again, one View file for each part of the app.
48

48

00:01:48,430  -->  00:01:51,610
In this first example, we have the Search functionality.
49

49

00:01:51,610  -->  00:01:54,390
So in the Search Model is where we do Ajax calls
50

50

00:01:54,390  -->  00:01:58,130
to get recipes for a certain search query from an API.
51

51

00:01:58,130  -->  00:02:00,000
On the other hand, in the View
52

52

00:02:00,000  -->  00:02:01,940
is where we get the search query string
53

53

00:02:01,940  -->  00:02:03,240
from the user interface,
54

54

00:02:03,240  -->  00:02:06,340
and also where we print the results of the search.
55

55

00:02:06,340  -->  00:02:07,860
And the Controller, of course,
56

56

00:02:07,860  -->  00:02:10,010
is what brings these two together,
57

57

00:02:10,010  -->  00:02:13,530
so that Model and View never actually have to communicate.
58

58

00:02:13,530  -->  00:02:15,590
And this will make the entire app, again,
59

59

00:02:15,590  -->  00:02:17,930
more modular and easier to maintain,
60

60

00:02:17,930  -->  00:02:20,060
as you will see when we start coding it.
61

61

00:02:20,060  -->  00:02:22,250
So as you see, the Model is always concerned
62

62

00:02:22,250  -->  00:02:24,140
about the data and the apps logic,
63

63

00:02:24,140  -->  00:02:26,380
while the View gets and displays data
64

64

00:02:26,380  -->  00:02:29,840
from, and to, the user interface, okay?
65

65

00:02:29,840  -->  00:02:31,440
So that is in simple terms
66

66

00:02:31,440  -->  00:02:34,060
how MVC is going to work in our app.
67

67

00:02:34,060  -->  00:02:37,840
And of course the same logic applies then to the Recipe,
68

68

00:02:37,840  -->  00:02:40,480
List and Likes part of the app,
69

69

00:02:40,480  -->  00:02:43,040
so there's always one model and one view
70

70

00:02:43,040  -->  00:02:45,770
held together by the overall controller.
71

71

00:02:45,770  -->  00:02:48,180
Now we could also have multiple controllers here
72

72

00:02:48,180  -->  00:02:51,470
but I find it easier to work with just one global controller
73

73

00:02:51,470  -->  00:02:53,420
and you will see why a bit later.
74

74

00:02:53,420  -->  00:02:56,360
All right, so let's now jump right to the next lecture
75

75

00:02:56,360  -->  00:02:58,730
where we're gonna start implementing this architecture
76

76

00:02:58,730  -->  00:03:00,093
with ES6 modules.
