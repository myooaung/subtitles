WEBVTT
1
1

00:00:01.838  -->  00:00:03.001
<v Instructor>In this lecture</v>
2

2

00:00:03.001  -->  00:00:05.617
we are going to read the income or expense data
3

3

00:00:05.617  -->  00:00:08.853
out of the user interface or input fields
4

4

00:00:08.853  -->  00:00:11.790
so that we can use it in our app later.
5

5

00:00:11.790  -->  00:00:15.499
So it only makes sense that in this lecture
6

6

00:00:15.499  -->  00:00:17.635
you're going to learn how to read data
7

7

00:00:17.635  -->  00:00:20.302
from different HTML input types.
8

8

00:00:21.659  -->  00:00:24.787
Okay, so here we are in the app controller
9

9

00:00:24.787  -->  00:00:27.894
and the logic in this project will always be
10

10

00:00:27.894  -->  00:00:30.505
that in the controller is the place
11

11

00:00:30.505  -->  00:00:33.512
where we tell the other modules what to do.
12

12

00:00:33.512  -->  00:00:36.880
So we write methods in the UI controller
13

13

00:00:36.880  -->  00:00:39.667
and in the budget controller to get some data for us
14

14

00:00:39.667  -->  00:00:41.401
or to calculate something
15

15

00:00:41.401  -->  00:00:45.568
and then in here in the controller we call these methods.
16

16

00:00:46.573  -->  00:00:49.585
So in this particular case that I want to get the input
17

17

00:00:49.585  -->  00:00:52.587
from the user interface I'm going to write the method
18

18

00:00:52.587  -->  00:00:54.442
in the user interface controller
19

19

00:00:54.442  -->  00:00:56.718
and then call it here in the controller
20

20

00:00:56.718  -->  00:01:00.268
so that I can get this data and then use it further.
21

21

00:01:00.268  -->  00:01:02.539
For example, to pass it into the other controller
22

22

00:01:02.539  -->  00:01:06.918
so that it can then add the input data as a new expense
23

23

00:01:06.918  -->  00:01:09.960
or a new income to the data structure
24

24

00:01:09.960  -->  00:01:12.460
that we're gonna create later.
25

25

00:01:13.329  -->  00:01:15.663
So let's now start by writing a method
26

26

00:01:15.663  -->  00:01:18.884
into the UI controller to get our input.
27

27

00:01:18.884  -->  00:01:23.051
So here in the UI controller we're going to write a method
28

28

00:01:24.448  -->  00:01:26.360
or a function.
29

29

00:01:26.360  -->  00:01:28.918
Now, this is a function that we want to use
30

30

00:01:28.918  -->  00:01:30.950
in the other controller, right?
31

31

00:01:30.950  -->  00:01:33.555
So it cannot be a private function, right?
32

32

00:01:33.555  -->  00:01:36.686
So instead it's going to be a public function
33

33

00:01:36.686  -->  00:01:38.269
or a public method.
34

34

00:01:39.262  -->  00:01:42.054
So it will have to be in the object that this function here,
35

35

00:01:42.054  -->  00:01:44.429
this IIFE will return.
36

36

00:01:44.429  -->  00:01:47.639
So again, and I'm sure that you remember this,
37

37

00:01:47.639  -->  00:01:50.614
this code here will execute immediately
38

38

00:01:50.614  -->  00:01:54.221
and then the object that we return will be assigned
39

39

00:01:54.221  -->  00:01:56.987
to this UI controller here
40

40

00:01:56.987  -->  00:01:59.674
and all the variables and the functions that we define
41

41

00:01:59.674  -->  00:02:01.921
in the function will stay in the closure
42

42

00:02:01.921  -->  00:02:04.395
even after this function returns.
43

43

00:02:04.395  -->  00:02:07.599
The object that's going to be returned from this
44

44

00:02:07.599  -->  00:02:09.173
will have access
45

45

00:02:09.173  -->  00:02:13.592
to these private methods or functions and variables.
46

46

00:02:13.592  -->  00:02:16.509
Alright, so let's write our method.
47

47

00:02:18.594  -->  00:02:21.594
So return, as we were saying, right?
48

48

00:02:22.451  -->  00:02:25.183
And we return this object.
49

49

00:02:25.183  -->  00:02:27.100
So let's say get input.
50

50

00:02:30.564  -->  00:02:33.564
So a function without any parameters
51

51

00:02:36.138  -->  00:02:39.488
and now in here we read the data from the user interface.
52

52

00:02:39.488  -->  00:02:42.352
So what do we have in the UI?
53

53

00:02:42.352  -->  00:02:45.849
So we have the type here, so if it's an income or an expense
54

54

00:02:45.849  -->  00:02:49.723
then we have the description and the value.
55

55

00:02:49.723  -->  00:02:52.461
So let's see that in the HTML file
56

56

00:02:52.461  -->  00:02:56.191
and let's actually now take a deeper look at this file
57

57

00:02:56.191  -->  00:02:58.513
as I promised you before.
58

58

00:02:58.513  -->  00:03:02.112
So basically the UI is divided in two parts
59

59

00:03:02.112  -->  00:03:04.606
with just the top part here with just this one,
60

60

00:03:04.606  -->  00:03:08.260
all of this is the top part and then all of this here
61

61

00:03:08.260  -->  00:03:10.692
is the bottom part, okay?
62

62

00:03:10.692  -->  00:03:13.222
So we have the top part and in here
63

63

00:03:13.222  -->  00:03:16.880
we have of course the budget title, the month,
64

64

00:03:16.880  -->  00:03:18.924
which we're going to replace later.
65

65

00:03:18.924  -->  00:03:21.249
Then we have the budget value here,
66

66

00:03:21.249  -->  00:03:25.155
we have the budget value of the income only,
67

67

00:03:25.155  -->  00:03:27.238
and also of the expenses.
68

68

00:03:28.600  -->  00:03:30.611
So all of these are in the top part
69

69

00:03:30.611  -->  00:03:33.397
and we're going to use all of these later on, right?
70

70

00:03:33.397  -->  00:03:36.298
And then we have the bottom here
71

71

00:03:36.298  -->  00:03:38.847
and in here we have the add container.
72

72

00:03:38.847  -->  00:03:41.794
Which is basically our form, so where we have our input,
73

73

00:03:41.794  -->  00:03:45.472
and then our inputs are the add type,
74

74

00:03:45.472  -->  00:03:48.838
which is for the income or expense type.
75

75

00:03:48.838  -->  00:03:51.864
We have the add description and the add value
76

76

00:03:51.864  -->  00:03:54.204
and the add button that we already used
77

77

00:03:54.204  -->  00:03:56.647
to set up the event handler.
78

78

00:03:56.647  -->  00:03:58.796
Okay, then below that the container.
79

79

00:03:58.796  -->  00:04:01.504
So basically all of this here, right?
80

80

00:04:01.504  -->  00:04:04.613
This part here of the user interface is the container,
81

81

00:04:04.613  -->  00:04:07.249
which is also divided in two parts.
82

82

00:04:07.249  -->  00:04:09.493
It has an income part on the left side
83

83

00:04:09.493  -->  00:04:12.585
and an expenses part on the right side.
84

84

00:04:12.585  -->  00:04:16.040
And each of this has of course a title, right,
85

85

00:04:16.040  -->  00:04:18.543
and then it has a list.
86

86

00:04:18.543  -->  00:04:22.710
So an income list and down here an expenses list, okay?
87

87

00:04:24.441  -->  00:04:27.320
So right now these are empty because all of the items
88

88

00:04:27.320  -->  00:04:31.678
are commented out here so that it's empty in the beginning
89

89

00:04:31.678  -->  00:04:33.581
but this is how an item looks like.
90

90

00:04:33.581  -->  00:04:35.801
So this block of code here is an item
91

91

00:04:35.801  -->  00:04:38.590
and we will take a closer look at this one
92

92

00:04:38.590  -->  00:04:41.822
once we start adding items to our user interface.
93

93

00:04:41.822  -->  00:04:45.502
So let's now concentrate on what we need for this step
94

94

00:04:45.502  -->  00:04:49.669
which is this add type, add description, and add value.
95

95

00:04:50.739  -->  00:04:53.829
So value, description, and type.
96

96

00:04:53.829  -->  00:04:57.996
So we're gonna select all of them and retrieve their value.
97

97

00:04:59.503  -->  00:05:01.920
So let's start with the type.
98

98

00:05:04.927  -->  00:05:07.863
And we already did this in our other project, right?
99

99

00:05:07.863  -->  00:05:09.827
So the logic is always the same.
100

100

00:05:09.827  -->  00:05:11.144
We select something
101

101

00:05:11.144  -->  00:05:14.108
and then we do something with the selection.
102

102

00:05:14.108  -->  00:05:17.691
So document.querySelector and then remember
103

103

00:05:19.689  -->  00:05:22.689
it was the class called add and type
104

104

00:05:23.559  -->  00:05:27.638
and actually it has two underscores I think.
105

105

00:05:27.638  -->  00:05:30.271
But let's just double check.
106

106

00:05:30.271  -->  00:05:34.438
Yes, so two underscores, which is a special notation.
107

107

00:05:35.794  -->  00:05:39.842
Okay and then simply use the value property.
108

108

00:05:39.842  -->  00:05:42.027
Remember that one?
109

109

00:05:42.027  -->  00:05:43.401
So that's actually it.
110

110

00:05:43.401  -->  00:05:47.242
So with this we read the value of the type.
111

111

00:05:47.242  -->  00:05:50.406
And since this is a select element in the HTML
112

112

00:05:50.406  -->  00:05:52.820
it works a bit different.
113

113

00:05:52.820  -->  00:05:56.778
So in these normal input elements like this one here,
114

114

00:05:56.778  -->  00:05:58.024
so like this,
115

115

00:05:58.024  -->  00:06:02.674
we simply get the value that's written here, right?
116

116

00:06:02.674  -->  00:06:06.010
But in the select element, which is this one here,
117

117

00:06:06.010  -->  00:06:09.375
what we get is these values that are specified.
118

118

00:06:09.375  -->  00:06:11.925
So if the first one is selected what we get is inc,
119

119

00:06:11.925  -->  00:06:14.131
which stands for income,
120

120

00:06:14.131  -->  00:06:16.921
and if the second one with the minus is selected
121

121

00:06:16.921  -->  00:06:20.999
then what we get is the exp, so expenses.
122

122

00:06:20.999  -->  00:06:25.166
So let's just annotate this here so that we don't forget it.
123

123

00:06:26.336  -->  00:06:29.753
So will be either inc or exp for expense.
124

124

00:06:34.281  -->  00:06:37.031
Alright, and now the description.
125

125

00:06:41.854  -->  00:06:43.937
So document.querySelector
126

126

00:06:48.122  -->  00:06:50.789
and this one is add description.
127

127

00:06:53.529  -->  00:06:55.779
And again we use the value.
128

128

00:06:58.567  -->  00:07:00.734
And now finally the value.
129

129

00:07:04.534  -->  00:07:06.867
So document, query selector,
130

130

00:07:13.741  -->  00:07:17.741
add value and reading the property called value.
131

131

00:07:19.323  -->  00:07:23.143
Alright, okay so now we have the three input values
132

132

00:07:23.143  -->  00:07:24.938
stored in these three variables.
133

133

00:07:24.938  -->  00:07:28.670
Now remember the controller is going to call this method
134

134

00:07:28.670  -->  00:07:32.143
and it wants to receive back all of these values.
135

135

00:07:32.143  -->  00:07:35.256
So we have to return something here, right?
136

136

00:07:35.256  -->  00:07:39.385
So how do we return three values at the same time?
137

137

00:07:39.385  -->  00:07:42.601
The best solution for this is to simply return an object
138

138

00:07:42.601  -->  00:07:46.200
containing these three as properties.
139

139

00:07:46.200  -->  00:07:48.498
So instead of having three separate variables
140

140

00:07:48.498  -->  00:07:51.403
we should simply return an object with three properties
141

141

00:07:51.403  -->  00:07:53.236
which are these three.
142

142

00:07:54.077  -->  00:07:55.494
So let's do that.
143

143

00:07:57.308  -->  00:07:59.891
So I'm saying return an object.
144

144

00:08:01.725  -->  00:08:05.098
And so let me copy this in the inside.
145

145

00:08:05.098  -->  00:08:08.642
Now of course I need to change some stuff
146

146

00:08:08.642  -->  00:08:11.492
so we don't need these for our keywords
147

147

00:08:11.492  -->  00:08:14.341
and it's not the equal operator
148

148

00:08:14.341  -->  00:08:18.008
but this is how we define properties, right?
149

149

00:08:19.512  -->  00:08:23.679
Oh and also these should be commas and not semicolons.
150

150

00:08:27.636  -->  00:08:31.053
Okay, so this is our method for returning
151

151

00:08:35.728  -->  00:08:39.774
all of the three inputs that we had in the user interface.
152

152

00:08:39.774  -->  00:08:43.724
So let's now call this method from our controller
153

153

00:08:43.724  -->  00:08:45.583
and we're gonna do it right here.
154

154

00:08:45.583  -->  00:08:49.583
So under this comment here we will say var input
155

155

00:08:52.447  -->  00:08:55.657
should be the result of calling the get input method
156

156

00:08:55.657  -->  00:08:59.490
and it's a method of the UI controller, right?
157

157

00:09:00.371  -->  00:09:03.978
So UI controller which is the module that we have access to
158

158

00:09:03.978  -->  00:09:05.561
and then get input,
159

159

00:09:07.643  -->  00:09:11.725
which is the public method that we can access.
160

160

00:09:11.725  -->  00:09:14.284
And no parameters here.
161

161

00:09:14.284  -->  00:09:17.701
So let's now console.log simply the input
162

162

00:09:21.870  -->  00:09:26.103
and we can remove this console.log from down here, okay?
163

163

00:09:26.103  -->  00:09:27.900
So remember this will happen
164

164

00:09:27.900  -->  00:09:31.167
as soon as we either click the input button
165

165

00:09:31.167  -->  00:09:35.334
or hit the Enter key because this is in the function, right?
166

166

00:09:37.006  -->  00:09:39.818
So this is in the function that is called
167

167

00:09:39.818  -->  00:09:43.442
when either one of these actions happen, right?
168

168

00:09:43.442  -->  00:09:47.609
So let's now test this and I'm going to refresh it.
169

169

00:09:50.177  -->  00:09:53.873
So let's say it's a minus, so an expense,
170

170

00:09:53.873  -->  00:09:57.454
and I'm just calling it test and it's a number
171

171

00:09:57.454  -->  00:10:00.608
and now I hit Enter and okay.
172

172

00:10:00.608  -->  00:10:05.090
So we have an object actually and it has type expense.
173

173

00:10:05.090  -->  00:10:08.694
So this is correct because it shows the minus here
174

174

00:10:08.694  -->  00:10:12.425
then the description is test, right which we have here,
175

175

00:10:12.425  -->  00:10:13.722
and the value is 23.
176

176

00:10:13.722  -->  00:10:15.400
So everything is correct.
177

177

00:10:15.400  -->  00:10:16.332
Let's just create another one.
178

178

00:10:16.332  -->  00:10:19.832
So test2 with something else, let's say 12
179

179

00:10:21.116  -->  00:10:24.340
and now hitting the key, so it also works.
180

180

00:10:24.340  -->  00:10:26.590
So income and test2 and 12.
181

181

00:10:28.711  -->  00:10:30.923
Cool, so now we have these two modules
182

182

00:10:30.923  -->  00:10:35.530
talking to one another by calling each other's methods.
183

183

00:10:35.530  -->  00:10:36.855
So this is the pattern
184

184

00:10:36.855  -->  00:10:39.282
that we will see a lot of time happening.
185

185

00:10:39.282  -->  00:10:41.986
So basically the controller calling some method
186

186

00:10:41.986  -->  00:10:46.153
and these methods then do something and return it.
187

187

00:10:47.313  -->  00:10:50.862
Now if you move up here to this method here
188

188

00:10:50.862  -->  00:10:53.993
and to this controller there is actually one small problem
189

189

00:10:53.993  -->  00:10:56.240
that I don't like so much
190

190

00:10:56.240  -->  00:10:58.520
and that is that we're starting to have
191

191

00:10:58.520  -->  00:10:59.755
all these strings here
192

192

00:10:59.755  -->  00:11:02.198
for query selectors all over the place
193

193

00:11:02.198  -->  00:11:05.534
like this one, this one, this one, and down here
194

194

00:11:05.534  -->  00:11:10.034
there's also this one and they are only going to get more
195

195

00:11:10.034  -->  00:11:13.033
as we proceed with our application.
196

196

00:11:13.033  -->  00:11:14.035
And that's a problem
197

197

00:11:14.035  -->  00:11:17.263
because imagine that we make some changes in the UI
198

198

00:11:17.263  -->  00:11:20.131
and the class names and then we would have to change
199

199

00:11:20.131  -->  00:11:22.510
all of these strings manually
200

200

00:11:22.510  -->  00:11:26.127
and this of course could cost some serious bucks.
201

201

00:11:26.127  -->  00:11:28.247
So instead we can simply create an object
202

202

00:11:28.247  -->  00:11:31.379
where we store all of this data.
203

203

00:11:31.379  -->  00:11:33.751
And since we're talking about the UI here
204

204

00:11:33.751  -->  00:11:36.528
we should of course do it in the UI controller.
205

205

00:11:36.528  -->  00:11:39.506
So we can create a private variable here
206

206

00:11:39.506  -->  00:11:42.673
and call it DOMstrings, so DOMstrings.
207

207

00:11:46.864  -->  00:11:49.306
And it's gonna be an object
208

208

00:11:49.306  -->  00:11:52.345
and I will store all of the strings in here.
209

209

00:11:52.345  -->  00:11:56.512
So let's say input type and then I put this one here.
210

210

00:12:04.576  -->  00:12:06.356
And now I could go ahead
211

211

00:12:06.356  -->  00:12:10.273
and simply write DOMstrings.inputType, alright.
212

212

00:12:12.697  -->  00:12:16.739
So now if I decide to change all of the class names
213

213

00:12:16.739  -->  00:12:18.778
in the entire user interface
214

214

00:12:18.778  -->  00:12:20.363
then it's not such a big problem.
215

215

00:12:20.363  -->  00:12:21.853
Then I just have to come here
216

216

00:12:21.853  -->  00:12:23.859
and change the string in here as well.
217

217

00:12:23.859  -->  00:12:26.558
And not in our entire code.
218

218

00:12:26.558  -->  00:12:28.849
So this means that we have now a central place
219

219

00:12:28.849  -->  00:12:31.391
where all the strings are nicely stored
220

220

00:12:31.391  -->  00:12:34.851
and we can then retrieve them and change them easily.
221

221

00:12:34.851  -->  00:12:36.018
So once again,
222

222

00:12:36.945  -->  00:12:41.004
programming is not just to make things work in some way
223

223

00:12:41.004  -->  00:12:43.378
but it's also to create the necessary structures
224

224

00:12:43.378  -->  00:12:44.975
to make life easier
225

225

00:12:44.975  -->  00:12:47.316
and this is definitely one of these moments
226

226

00:12:47.316  -->  00:12:50.279
where we have to create some kind of data structure
227

227

00:12:50.279  -->  00:12:52.320
to make it easier for us later on.
228

228

00:12:52.320  -->  00:12:54.487
Okay, so input description
229

229

00:13:01.489  -->  00:13:04.739
and of course it's going to be this one
230

230

00:13:07.575  -->  00:13:09.658
and then the input value.
231

231

00:13:17.654  -->  00:13:21.020
And now I just need to put them back here.
232

232

00:13:21.020  -->  00:13:25.020
So DOMstrings and this was the input description
233

233

00:13:26.216  -->  00:13:30.383
so inputDescription and then here the DOMstrings.inputValue.
234

234

00:13:36.443  -->  00:13:37.969
So just to confirm,
235

235

00:13:37.969  -->  00:13:42.256
let's reload this and see if it still works.
236

236

00:13:42.256  -->  00:13:45.339
So test78 and yep, so it still works.
237

237

00:13:48.965  -->  00:13:52.258
Alright, so now there's only one place left
238

238

00:13:52.258  -->  00:13:57.178
where we have a hard coded string, which is in here.
239

239

00:13:57.178  -->  00:13:58.838
Now the DOMstrings object
240

240

00:13:58.838  -->  00:14:01.082
is in a different controller, right?
241

241

00:14:01.082  -->  00:14:04.603
So we don't really have access to it from here.
242

242

00:14:04.603  -->  00:14:08.984
So is the solution just to copy this object here
243

243

00:14:08.984  -->  00:14:10.368
into our controller?
244

244

00:14:10.368  -->  00:14:13.546
No, of course not, and you already know that by now, right?
245

245

00:14:13.546  -->  00:14:16.964
So the best solution is of course to pass this object
246

246

00:14:16.964  -->  00:14:21.307
from one controller from one module to the other.
247

247

00:14:21.307  -->  00:14:23.232
So what I'm going to do is something similar
248

248

00:14:23.232  -->  00:14:25.723
to the get input method here
249

249

00:14:25.723  -->  00:14:29.890
and this one will simply be called get the DOMstrings.
250

250

00:14:33.326  -->  00:14:37.466
And all we need in this function in this method here
251

251

00:14:37.466  -->  00:14:42.407
is to return or private DOMstrings into the public.
252

252

00:14:42.407  -->  00:14:46.006
So basically we are now exposing the DOMstrings object
253

253

00:14:46.006  -->  00:14:47.339
into the public.
254

254

00:14:49.966  -->  00:14:53.883
So I can now come down here into our controller
255

255

00:14:55.326  -->  00:14:59.409
and to find a new variable to get the DOMstrings.
256

256

00:15:00.318  -->  00:15:02.901
So UI controller.getDOMstrings.
257

257

00:15:05.259  -->  00:15:06.349
And that's it.
258

258

00:15:06.349  -->  00:15:08.577
So now inside of this DOM variable
259

259

00:15:08.577  -->  00:15:12.858
we also have the DOMstrings that we have up here
260

260

00:15:12.858  -->  00:15:14.577
in this controller
261

261

00:15:14.577  -->  00:15:17.588
because once again we exposed them to the public
262

262

00:15:17.588  -->  00:15:20.255
by using this method here, okay?
263

263

00:15:21.239  -->  00:15:23.989
So now what I can do is of course
264

264

00:15:24.866  -->  00:15:27.659
I first need to add this to the DOMstrings, right?
265

265

00:15:27.659  -->  00:15:28.492
So I say
266

266

00:15:33.656  -->  00:15:35.239
input button, okay?
267

267

00:15:39.320  -->  00:15:41.737
And so now I can use it here.
268

268

00:15:44.663  -->  00:15:46.330
So DOM.input button,
269

269

00:15:49.751  -->  00:15:52.470
because remember now it's called DOM here
270

270

00:15:52.470  -->  00:15:54.857
because that's the variable where it's stored now
271

271

00:15:54.857  -->  00:15:57.013
and no longer DOMstrings.
272

272

00:15:57.013  -->  00:15:59.127
So in this controller it's called DOM.
273

273

00:15:59.127  -->  00:16:02.610
So let's test this again very quickly.
274

274

00:16:02.610  -->  00:16:05.693
So again, test then let's say 55 here
275

275

00:16:07.397  -->  00:16:11.286
and now I hit this button and yes, so down here it is.
276

276

00:16:11.286  -->  00:16:15.018
So we're making some great progress here in our application
277

277

00:16:15.018  -->  00:16:17.363
and we're getting a really nice structure here
278

278

00:16:17.363  -->  00:16:20.400
which is something really important, as you know by now.
279

279

00:16:20.400  -->  00:16:24.414
And so in the next lecture let's continue with that.
280

280

00:16:24.414  -->  00:16:25.831
So, see you then.
