1
1

00:00:01,199  -->  00:00:03,043
<v Instructor>Alright, so now that we are familiar</v>
2

2

00:00:03,043  -->  00:00:06,871
with our project, we're ready to start coding, right?
3

3

00:00:06,871  -->  00:00:10,604
Well, not really, because we cannot just start coding
4

4

00:00:10,604  -->  00:00:14,059
without having a plan of what we're gonna do.
5

5

00:00:14,059  -->  00:00:17,473
I mean, it was OK to build, like, the pit game project
6

6

00:00:17,473  -->  00:00:19,587
without a clear plan.
7

7

00:00:19,587  -->  00:00:21,377
But in a bigger project like this one,
8

8

00:00:21,377  -->  00:00:24,062
we really need to think about the structure,
9

9

00:00:24,062  -->  00:00:27,145
the architecture, of our application.
10

10

00:00:27,145  -->  00:00:29,543
So let's do that in this lecture.
11

11

00:00:29,543  -->  00:00:32,387
So in the end, we're going to end up
12

12

00:00:32,387  -->  00:00:34,298
with something like this.
13

13

00:00:34,298  -->  00:00:36,902
Now, is this a great piece of art or not?
14

14

00:00:36,902  -->  00:00:39,378
No, I'm just joking around.
15

15

00:00:39,378  -->  00:00:41,206
This is actually a representation
16

16

00:00:41,206  -->  00:00:44,296
of the final architecture of our app
17

17

00:00:44,296  -->  00:00:46,935
in a way that I like to display it.
18

18

00:00:46,935  -->  00:00:51,570
But not so fast, we need to think one step at a time,
19

19

00:00:51,570  -->  00:00:53,645
and we need to think together
20

20

00:00:53,645  -->  00:00:55,722
so that everything makes sense to you
21

21

00:00:55,722  -->  00:00:57,796
and so that you can think on your own
22

22

00:00:57,796  -->  00:01:00,924
when you start coding your own projects.
23

23

00:01:00,924  -->  00:01:02,065
That is really important
24

24

00:01:02,065  -->  00:01:04,993
and one of my biggest goals with this course.
25

25

00:01:04,993  -->  00:01:08,409
I want you to learn how to program and how to think,
26

26

00:01:08,409  -->  00:01:10,685
not just to copy my code,
27

27

00:01:10,685  -->  00:01:13,494
and that's also what you want, right?
28

28

00:01:13,494  -->  00:01:16,300
OK, so let's look at our application again
29

29

00:01:16,300  -->  00:01:19,309
and identify the most fundamental parts
30

30

00:01:19,309  -->  00:01:21,059
that we need to code,
31

31

00:01:22,353  -->  00:01:24,690
and we're actually going to do this planning
32

32

00:01:24,690  -->  00:01:26,728
in more than one step.
33

33

00:01:26,728  -->  00:01:28,933
Right now, I just want to identify
34

34

00:01:28,933  -->  00:01:32,060
the most fundamental things that our app has to do,
35

35

00:01:32,060  -->  00:01:34,251
and then start coding them.
36

36

00:01:34,251  -->  00:01:36,447
Later we're going to come back to this
37

37

00:01:36,447  -->  00:01:39,290
and then plan the rest of the app's future.
38

38

00:01:39,290  -->  00:01:41,727
So this is step one.
39

39

00:01:41,727  -->  00:01:43,191
Alright, so we know that we can input
40

40

00:01:43,191  -->  00:01:46,156
an income or expense description and value,
41

41

00:01:46,156  -->  00:01:50,099
then hit the OK button and then the data will appear
42

42

00:01:50,099  -->  00:01:54,405
on the interface and the budget calculation will update.
43

43

00:01:54,405  -->  00:01:58,506
But it actually starts with the create on the button.
44

44

00:01:58,506  -->  00:02:01,995
And we already know we can handle this kind of events
45

45

00:02:01,995  -->  00:02:04,796
by using an event handler, right?
46

46

00:02:04,796  -->  00:02:07,073
So the first thing, or to do this,
47

47

00:02:07,073  -->  00:02:09,673
will be to add that event handler.
48

48

00:02:09,673  -->  00:02:12,559
OK, and then we need to get the data
49

49

00:02:12,559  -->  00:02:14,874
out of our input fields,
50

50

00:02:14,874  -->  00:02:17,558
so we need some code for that as well.
51

51

00:02:17,558  -->  00:02:20,157
We see that this data then will be printed
52

52

00:02:20,157  -->  00:02:23,243
to the interface, so we need to first
53

53

00:02:23,243  -->  00:02:27,878
add the income or expense to our internal data structure
54

54

00:02:27,878  -->  00:02:31,878
and then add them to the user interface as well.
55

55

00:02:33,076  -->  00:02:36,369
And finally, the budget is also updated.
56

56

00:02:36,369  -->  00:02:39,706
So we need to internally calculate the new budget
57

57

00:02:39,706  -->  00:02:43,734
and then again update the user interface.
58

58

00:02:43,734  -->  00:02:46,251
Does that make sense to you?
59

59

00:02:46,251  -->  00:02:48,806
OK, so we're gonna write functions and methods
60

60

00:02:48,806  -->  00:02:52,385
for all of these tests in our applications, right?
61

61

00:02:52,385  -->  00:02:54,538
So we already have a nice list of tasks
62

62

00:02:54,538  -->  00:02:57,382
that we have to complete now,
63

63

00:02:57,382  -->  00:02:59,532
but before we start coding,
64

64

00:02:59,532  -->  00:03:03,393
we also need to talk about how to structure our code.
65

65

00:03:03,393  -->  00:03:06,359
And for that, there's nothing better in JavaScript
66

66

00:03:06,359  -->  00:03:08,389
and programming in general than modules.
67

67

00:03:08,389  -->  00:03:10,806
So modules are a vital aspect
68

68

00:03:12,699  -->  00:03:16,437
of any robust application's architecture.
69

69

00:03:16,437  -->  00:03:20,053
Also, modules help us in keeping the units of code
70

70

00:03:20,053  -->  00:03:24,495
for a project both cleanly separated and organized.
71

71

00:03:24,495  -->  00:03:28,269
And lastly, modules can allow us to encapsulate
72

72

00:03:28,269  -->  00:03:32,542
some data in privacy and expose other data publicly.
73

73

00:03:32,542  -->  00:03:35,837
All of this keeps getting more important
74

74

00:03:35,837  -->  00:03:39,170
as our applications get bigger and bigger.
75

75

00:03:39,170  -->  00:03:42,499
So basically, modules allow us to break up our code
76

76

00:03:42,499  -->  00:03:45,343
into logical parts which are the modules,
77

77

00:03:45,343  -->  00:03:48,554
and then make them interact with one another.
78

78

00:03:48,554  -->  00:03:51,689
So what modules should we have in our project?
79

79

00:03:51,689  -->  00:03:53,437
Let's think about the tasks
80

80

00:03:53,437  -->  00:03:56,202
that we already have on our to-do list.
81

81

00:03:56,202  -->  00:04:00,794
So looking at these tasks that we specified before,
82

82

00:04:00,794  -->  00:04:02,947
we can see that some tasks
83

83

00:04:02,947  -->  00:04:05,309
have more to do with the user interface
84

84

00:04:05,309  -->  00:04:09,368
and others with doing internal data manipulation, right?
85

85

00:04:09,368  -->  00:04:12,862
So we're going to create a module for each of these,
86

86

00:04:12,862  -->  00:04:16,189
so that we have cleanly separated and organized units
87

87

00:04:16,189  -->  00:04:18,423
of code in our app.
88

88

00:04:18,423  -->  00:04:23,059
So we start with a user interface module and a data module.
89

89

00:04:23,059  -->  00:04:27,323
OK, so I would clearly say that Get input values,
90

90

00:04:27,323  -->  00:04:30,536
Add the new item to the user interface,
91

91

00:04:30,536  -->  00:04:34,763
and Update the user interface with the new budget
92

92

00:04:34,763  -->  00:04:37,513
should all go into the UI module.
93

93

00:04:38,623  -->  00:04:40,818
Do you agree with that?
94

94

00:04:40,818  -->  00:04:43,048
OK, and as for the data module,
95

95

00:04:43,048  -->  00:04:46,543
let's put Add the new item to our data structure
96

96

00:04:46,543  -->  00:04:51,290
and Calculate the budget right into the data module.
97

97

00:04:51,290  -->  00:04:52,802
Now there's still one left
98

98

00:04:52,802  -->  00:04:56,165
that doesn't really fit in any of these modules, right?
99

99

00:04:56,165  -->  00:04:58,398
So I'm going to create a new module
100

100

00:04:58,398  -->  00:05:01,161
and I'm going to call it the controller module.
101

101

00:05:01,161  -->  00:05:04,639
So in here we'll add the event handler
102

102

00:05:04,639  -->  00:05:08,013
and specify the response to the event.
103

103

00:05:08,013  -->  00:05:11,702
The goal of this module will be to control the entire app
104

104

00:05:11,702  -->  00:05:13,853
and basically acting as a link
105

105

00:05:13,853  -->  00:05:16,651
between the other two modules.
106

106

00:05:16,651  -->  00:05:17,749
Alright, so now we have
107

107

00:05:17,749  -->  00:05:20,469
some nicely separated units of code here,
108

108

00:05:20,469  -->  00:05:23,353
and all of this will make a lot more sense to you
109

109

00:05:23,353  -->  00:05:26,074
when we actually start writing our code,
110

110

00:05:26,074  -->  00:05:29,646
which is exactly what we're gonna do in the next lecture,
111

111

00:05:29,646  -->  00:05:32,731
where I'll show you how to set up these modules.
112

112

00:05:32,731  -->  00:05:36,585
So again, the planning that we did in this lecture
113

113

00:05:36,585  -->  00:05:40,525
is only for the first step of coding this project.
114

114

00:05:40,525  -->  00:05:42,923
There are a lot more functions
115

115

00:05:42,923  -->  00:05:46,086
that we're gonna need in each of these modules
116

116

00:05:46,086  -->  00:05:49,542
so that we end up with a final functioning app.
117

117

00:05:49,542  -->  00:05:51,252
But we'll come back to this later.
118

118

00:05:51,252  -->  00:05:54,252
OK, see you in the next lecture now.
