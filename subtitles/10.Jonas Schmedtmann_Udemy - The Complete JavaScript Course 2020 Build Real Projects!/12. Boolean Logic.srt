1
1

00:00:01,020  -->  00:00:03,610
<v Instructor>Let's now take conditional to the next level</v>
2

2

00:00:03,610  -->  00:00:05,970
and learn about Boolean logic.
3

3

00:00:05,970  -->  00:00:09,050
And, in this small example, we want to log to the console,
4

4

00:00:09,050  -->  00:00:12,960
depending on Johns age, if he is a boy, a teenager,
5

5

00:00:12,960  -->  00:00:15,840
a young man, or a man, okay.
6

6

00:00:15,840  -->  00:00:19,240
And, so, let's start, again, by defining the first name
7

7

00:00:22,300  -->  00:00:24,730
as John, and then the age.
8

8

00:00:24,730  -->  00:00:27,840
And let's start here with 16, for example.
9

9

00:00:27,840  -->  00:00:30,840
Alright, so we use our if else statement.
10

10

00:00:30,840  -->  00:00:33,910
And we can say that if John is younger than 13,
11

11

00:00:33,910  -->  00:00:38,130
well, then, he is a boy, alright.
12

12

00:00:38,130  -->  00:00:42,700
So console.log firstName + is a boy, alright.
13

13

00:00:50,970  -->  00:00:52,713
And then we can say else,
14

14

00:00:54,900  -->  00:00:57,203
and let's just copy this line of code here,
15

15

00:00:58,750  -->  00:01:00,053
is a man.
16

16

00:01:01,340  -->  00:01:04,280
Okay, so that covers the boy and the man.
17

17

00:01:04,280  -->  00:01:07,130
But how do we actually decide if he is a teenager
18

18

00:01:07,130  -->  00:01:08,760
or a young man?
19

19

00:01:08,760  -->  00:01:11,250
We need some more options here, right?
20

20

00:01:11,250  -->  00:01:13,620
And we can actually do that with JavaScript.
21

21

00:01:13,620  -->  00:01:16,380
So instead of just having the if and else block,
22

22

00:01:16,380  -->  00:01:18,610
we can also have an else if block.
23

23

00:01:18,610  -->  00:01:20,260
Okay, so let me show that to you.
24

24

00:01:21,360  -->  00:01:25,203
So here we can have else, and then a new if.
25

25

00:01:28,240  -->  00:01:29,930
So let's put it back here.
26

26

00:01:29,930  -->  00:01:32,670
And, so, here we can put some more text.
27

27

00:01:32,670  -->  00:01:35,200
And, actually, we need to add a new condition here.
28

28

00:01:35,200  -->  00:01:37,240
And so what do we want to have here?
29

29

00:01:37,240  -->  00:01:39,640
So let's first put in the result here, actually,
30

30

00:01:39,640  -->  00:01:42,210
so that we know what we're actually talking about here.
31

31

00:01:42,210  -->  00:01:43,960
So let's say that he is a teenager.
32

32

00:01:45,510  -->  00:01:47,250
And, so, teenager basically means
33

33

00:01:47,250  -->  00:01:50,550
that he's between 13 and 20, right?
34

34

00:01:50,550  -->  00:01:52,700
So let's write that down here as a comment.
35

35

00:01:53,750  -->  00:01:58,240
Between 13 and 20.
36

36

00:01:58,240  -->  00:02:01,560
Well, how do we write a logical condition
37

37

00:02:01,560  -->  00:02:03,530
to express exactly this?
38

38

00:02:03,530  -->  00:02:08,040
So how do we say that the age should be between 13 and 20?
39

39

00:02:08,040  -->  00:02:10,160
Well, that's kind of difficult, right?
40

40

00:02:10,160  -->  00:02:12,540
So let's think about it a little bit more.
41

41

00:02:12,540  -->  00:02:15,660
So between 13 and 20, what this really means
42

42

00:02:15,660  -->  00:02:20,660
is that the age is greater or equal, 13, right?
43

43

00:02:21,200  -->  00:02:25,403
And, at the same time, it's also less than 20.
44

44

00:02:26,700  -->  00:02:30,900
Right, so, again, having an age between 13 and 20
45

45

00:02:30,900  -->  00:02:34,850
should mean that the age is equal or greater than 13,
46

46

00:02:34,850  -->  00:02:36,810
and less than 20.
47

47

00:02:36,810  -->  00:02:40,610
So these two conditions here at the same time, okay.
48

48

00:02:40,610  -->  00:02:43,230
And so what we need is an operator for this.
49

49

00:02:43,230  -->  00:02:47,210
And, so, there actually, in JavaScript, is an end operator.
50

50

00:02:47,210  -->  00:02:49,880
And in order to learn how that end operator works,
51

51

00:02:49,880  -->  00:02:52,213
we need to talk about Boolean logic.
52

52

00:02:53,290  -->  00:02:54,950
So, in a very broad sense,
53

53

00:02:54,950  -->  00:02:57,660
Boolean logic is a branch of computer science
54

54

00:02:57,660  -->  00:02:59,800
that deals with true and false values.
55

55

00:02:59,800  -->  00:03:02,550
And it's actually something quite important in coding.
56

56

00:03:02,550  -->  00:03:05,980
And so you should make sure to really understand this part.
57

57

00:03:05,980  -->  00:03:06,840
Alright?
58

58

00:03:06,840  -->  00:03:09,150
Now there are several logical operators
59

59

00:03:09,150  -->  00:03:11,170
that deal with true and false values.
60

60

00:03:11,170  -->  00:03:12,420
But the most important ones
61

61

00:03:12,420  -->  00:03:15,490
are the NOT, AND, and OR operators.
62

62

00:03:15,490  -->  00:03:17,940
So let's start by looking at the AND operator.
63

63

00:03:17,940  -->  00:03:20,710
And here we have a table called a truth table,
64

64

00:03:20,710  -->  00:03:24,140
which allows us to see the outcome of the operator.
65

65

00:03:24,140  -->  00:03:26,600
So the AND operator works like this.
66

66

00:03:26,600  -->  00:03:29,730
Suppose that we have two variables, A and B.
67

67

00:03:29,730  -->  00:03:33,810
Only if variable A and variable B are both true,
68

68

00:03:33,810  -->  00:03:37,690
the expression A and B will become true, okay.
69

69

00:03:37,690  -->  00:03:40,830
In all other cases, the result will be false.
70

70

00:03:40,830  -->  00:03:43,150
And that's why it's called the AND operator.
71

71

00:03:43,150  -->  00:03:46,120
Because A and B must both be true
72

72

00:03:46,120  -->  00:03:48,800
in order for the result to be true as well.
73

73

00:03:48,800  -->  00:03:50,870
So if either A or B is false,
74

74

00:03:50,870  -->  00:03:54,730
well, then A and B will become false as well.
75

75

00:03:54,730  -->  00:03:57,480
And the same applies if there are more than two variables.
76

76

00:03:57,480  -->  00:03:59,540
Only if all the variables are true,
77

77

00:03:59,540  -->  00:04:02,500
then the AND expression will become true as well.
78

78

00:04:02,500  -->  00:04:04,900
Alright, and now the second truth table
79

79

00:04:04,900  -->  00:04:06,740
is for the OR operator.
80

80

00:04:06,740  -->  00:04:09,230
And here things work a bit differently.
81

81

00:04:09,230  -->  00:04:10,730
So, with the OR operator,
82

82

00:04:10,730  -->  00:04:13,720
it's enough for one of the variables to be true
83

83

00:04:13,720  -->  00:04:16,540
in order to make A or B come true.
84

84

00:04:16,540  -->  00:04:18,750
And, again, that makes sense, right?
85

85

00:04:18,750  -->  00:04:20,420
So it's called the OR operator
86

86

00:04:20,420  -->  00:04:23,690
because only A or B needs to be true
87

87

00:04:23,690  -->  00:04:26,310
in order for the final expression to be true.
88

88

00:04:26,310  -->  00:04:30,170
The result will only be false if both variables are false.
89

89

00:04:30,170  -->  00:04:33,130
And we can see that here in the truth table, right?
90

90

00:04:33,130  -->  00:04:33,963
And, once more,
91

91

00:04:33,963  -->  00:04:36,760
it works the same way with multiple variables.
92

92

00:04:36,760  -->  00:04:39,350
So it's enough for one variable to be true
93

93

00:04:39,350  -->  00:04:41,720
to make the final result be true as well,
94

94

00:04:41,720  -->  00:04:45,400
if there are like 3, 4, 5, or even ten Boolean variables.
95

95

00:04:45,400  -->  00:04:48,080
So that's how the AND and true operator works.
96

96

00:04:48,080  -->  00:04:51,130
And then, finally, there's also the NOT operator.
97

97

00:04:51,130  -->  00:04:52,810
And this one is really simple.
98

98

00:04:52,810  -->  00:04:54,330
All it does is to invert
99

99

00:04:54,330  -->  00:04:56,600
the true or false value of a variable.
100

100

00:04:56,600  -->  00:05:00,230
So if variable A is true, then NOT A is false.
101

101

00:05:00,230  -->  00:05:03,580
And if A is false, well, then NOT A is true.
102

102

00:05:03,580  -->  00:05:04,860
So, easy, right?
103

103

00:05:04,860  -->  00:05:06,863
Let's now look at a couple of examples.
104

104

00:05:07,850  -->  00:05:10,600
So we start by defining a variable called age.
105

105

00:05:10,600  -->  00:05:13,400
Then we have age greater or equal than 20,
106

106

00:05:13,400  -->  00:05:17,150
which is, of course, false, because 16 is less than 20.
107

107

00:05:17,150  -->  00:05:21,030
Then we have age less than 30, which, of course, is true.
108

108

00:05:21,030  -->  00:05:23,450
And, finally, we have the NOT operator.
109

109

00:05:23,450  -->  00:05:26,650
So we know that age less than 30 is true.
110

110

00:05:26,650  -->  00:05:29,540
And we know that the NOT operator inverts the value.
111

111

00:05:29,540  -->  00:05:33,360
So NOT age less than 30 is, of course, false.
112

112

00:05:33,360  -->  00:05:34,800
Makes sense, right?
113

113

00:05:34,800  -->  00:05:36,460
Okay, so the next expression.
114

114

00:05:36,460  -->  00:05:38,470
We already know that the first part,
115

115

00:05:38,470  -->  00:05:41,300
age greater or equal than 20, is false.
116

116

00:05:41,300  -->  00:05:45,020
And we also know that age less than 30 is true.
117

117

00:05:45,020  -->  00:05:47,690
So, here, we have false and true.
118

118

00:05:47,690  -->  00:05:49,560
So can you guess the result?
119

119

00:05:49,560  -->  00:05:53,200
That's right, it's false, because they're not both true.
120

120

00:05:53,200  -->  00:05:54,100
Okay?
121

121

00:05:54,100  -->  00:05:56,160
Now the next expression is similar.
122

122

00:05:56,160  -->  00:05:58,780
But we have the OR operator here.
123

123

00:05:58,780  -->  00:06:00,920
So it's now true or false.
124

124

00:06:00,920  -->  00:06:03,080
So what will the result be this time?
125

125

00:06:03,080  -->  00:06:04,790
Alright, now it's true.
126

126

00:06:04,790  -->  00:06:06,300
Because, with the OR operator,
127

127

00:06:06,300  -->  00:06:08,610
it's enough for one of them to be true.
128

128

00:06:08,610  -->  00:06:10,210
So I hope that made sense.
129

129

00:06:10,210  -->  00:06:11,570
And so we can now go back
130

130

00:06:11,570  -->  00:06:14,380
and use what we just learned in code.
131

131

00:06:14,380  -->  00:06:17,450
Okay, and now that we know about the AND and OR operators,
132

132

00:06:17,450  -->  00:06:20,360
we actually have a way of writing out the expression
133

133

00:06:20,360  -->  00:06:21,440
that we need here.
134

134

00:06:21,440  -->  00:06:23,800
So what we want here is the age
135

135

00:06:23,800  -->  00:06:27,430
to be greater or equal to 13.
136

136

00:06:27,430  -->  00:06:29,240
And, that's with the AND operator,
137

137

00:06:29,240  -->  00:06:31,910
as you saw before, we write like this.
138

138

00:06:31,910  -->  00:06:35,080
And so we want age greater or equal to 13.
139

139

00:06:35,080  -->  00:06:39,450
And, at the same time, the age to be less than 20.
140

140

00:06:39,450  -->  00:06:41,140
Okay, and so that's all we need.
141

141

00:06:41,140  -->  00:06:42,720
That is our expression here.
142

142

00:06:42,720  -->  00:06:45,210
Or, basically, our testing condition.
143

143

00:06:45,210  -->  00:06:48,700
So let's say that the age is 16, so as it is right now.
144

144

00:06:48,700  -->  00:06:50,660
So if we now load this,
145

145

00:06:50,660  -->  00:06:53,810
well, then we log to the console, John is a teenager.
146

146

00:06:53,810  -->  00:06:55,520
And so it's actually working.
147

147

00:06:55,520  -->  00:06:57,402
So, right now, age is 16.
148

148

00:06:57,402  -->  00:07:00,670
And so age is, in fact, greater than 13.
149

149

00:07:00,670  -->  00:07:02,320
So this part here is true.
150

150

00:07:02,320  -->  00:07:06,640
Then the age is also less than 20, so this is also true.
151

151

00:07:06,640  -->  00:07:10,220
And so true and true makes true, as we just learned.
152

152

00:07:10,220  -->  00:07:13,330
And so then this block here is executed.
153

153

00:07:13,330  -->  00:07:14,690
Now just quickly talking about
154

154

00:07:14,690  -->  00:07:16,740
the precedence of this operator here,
155

155

00:07:16,740  -->  00:07:19,120
while it has to be lower than the precedence
156

156

00:07:19,120  -->  00:07:20,380
of this ones here, right?
157

157

00:07:20,380  -->  00:07:23,240
Because, of course, we first want this to be executed
158

158

00:07:23,240  -->  00:07:25,480
in order to end up with the true or false value.
159

159

00:07:25,480  -->  00:07:26,980
And then this one here.
160

160

00:07:26,980  -->  00:07:29,210
And, only after that, we want to combine
161

161

00:07:29,210  -->  00:07:32,470
these two false values using this operator here.
162

162

00:07:32,470  -->  00:07:34,610
And so, of course, the AND and OR operator,
163

163

00:07:34,610  -->  00:07:36,560
they must have a lower precedence
164

164

00:07:36,560  -->  00:07:39,500
than these comparison operators, right?
165

165

00:07:39,500  -->  00:07:41,483
So let's check if that's actually true.
166

166

00:07:42,740  -->  00:07:44,470
And, indeed, it is.
167

167

00:07:44,470  -->  00:07:47,020
So the Logical AND and OR,
168

168

00:07:47,020  -->  00:07:50,830
they have a lower precedence of 6 and 5
169

169

00:07:50,830  -->  00:07:53,300
than these comparison, like Less,
170

170

00:07:53,300  -->  00:07:55,140
and Less Than Equal, Greater,
171

171

00:07:55,140  -->  00:07:57,790
and, oh, yeah, all these comparison operators here.
172

172

00:07:57,790  -->  00:07:59,230
So they have a higher precedence
173

173

00:07:59,230  -->  00:08:04,230
and that's why it works the way it works here, okay.
174

174

00:08:04,260  -->  00:08:05,710
And now just a final step.
175

175

00:08:05,710  -->  00:08:07,490
Because we want a boy, teenager,
176

176

00:08:07,490  -->  00:08:12,170
and we also want like a young man between 20 and 30, okay.
177

177

00:08:12,170  -->  00:08:14,373
So let's create a new else if here.
178

178

00:08:16,560  -->  00:08:19,673
Here are the condition, and open a new block.
179

179

00:08:23,700  -->  00:08:25,510
So a young man.
180

180

00:08:25,510  -->  00:08:28,010
And what do we want the age to be now?
181

181

00:08:28,010  -->  00:08:32,310
Well, we want it to be greater or equal than 20.
182

182

00:08:32,310  -->  00:08:37,310
And, at the same time, it will be less than 30, okay.
183

183

00:08:37,570  -->  00:08:39,710
And if we didn't put this equals sign here,
184

184

00:08:39,710  -->  00:08:42,760
well, then the 20 wouldn't be covered anywhere, right.
185

185

00:08:42,760  -->  00:08:44,560
So let's take this out here.
186

186

00:08:44,560  -->  00:08:47,090
And go to 20, so set the age to 20.
187

187

00:08:47,090  -->  00:08:49,020
And let's see what happens then.
188

188

00:08:49,020  -->  00:08:51,110
So now it says John is a man.
189

189

00:08:51,110  -->  00:08:53,910
Okay, and that's because this 20 here is not included,
190

190

00:08:53,910  -->  00:08:56,180
neither in this condition nor in this one.
191

191

00:08:56,180  -->  00:08:58,530
So here it's just less than 20,
192

192

00:08:58,530  -->  00:09:00,490
and here it's greater than 20.
193

193

00:09:00,490  -->  00:09:02,240
But nowhere is the equals sign.
194

194

00:09:02,240  -->  00:09:05,670
And so that's why we have to include it right here, okay.
195

195

00:09:05,670  -->  00:09:07,200
We could also have included it here.
196

196

00:09:07,200  -->  00:09:09,080
But while someone who is 20 years old
197

197

00:09:09,080  -->  00:09:10,820
is not really a teenager anymore,
198

198

00:09:10,820  -->  00:09:13,160
and so we include this equals sign up here.
199

199

00:09:13,160  -->  00:09:14,490
And if we reload it now,
200

200

00:09:14,490  -->  00:09:16,800
well, then it's gonna say young man.
201

201

00:09:16,800  -->  00:09:18,913
Okay, and so that worked just find.
202

202

00:09:20,090  -->  00:09:22,950
Alright, and I think that is enough for this lecture.
203

203

00:09:22,950  -->  00:09:24,810
So you learnt all about Boolean logic
204

204

00:09:24,810  -->  00:09:27,780
and the AND, OR, and NOT operators.
205

205

00:09:27,780  -->  00:09:31,060
And, also, that we can add these else if blocks here
206

206

00:09:31,060  -->  00:09:33,220
to our if else statements, okay.
207

207

00:09:33,220  -->  00:09:36,720
So we can have multiple, let's say, if else statements
208

208

00:09:36,720  -->  00:09:39,330
all in one construct, like this.
209

209

00:09:39,330  -->  00:09:41,710
Okay, so make sure that you understand all of this.
210

210

00:09:41,710  -->  00:09:45,080
If necessary, you can maybe review parts of the lecture,
211

211

00:09:45,080  -->  00:09:47,380
and then let's just move on to the next video.
