WEBVTT
1
1

00:00:00.980  -->  00:00:03.077
<v Instructor>As a last step in a search functionality,</v>
2

2

00:00:03.077  -->  00:00:06.210
let's now implement the search results pagination.
3

3

00:00:06.210  -->  00:00:07.193
And in this lecture,
4

4

00:00:07.193  -->  00:00:10.110
you will actually learn some cool new stuff,
5

5

00:00:10.110  -->  00:00:12.560
including the super useful closest method
6

6

00:00:12.560  -->  00:00:16.367
for doing event handling in a much easier way and also how
7

7

00:00:16.367  -->  00:00:19.120
and why to use data attributes in order
8

8

00:00:19.120  -->  00:00:21.653
to read data from HTML5 elements.
9

9

00:00:22.920  -->  00:00:23.860
And so let me first show you
10

10

00:00:23.860  -->  00:00:25.830
what we're actually trying to achieve.
11

11

00:00:25.830  -->  00:00:28.100
So I'm going to my working example here.
12

12

00:00:28.100  -->  00:00:30.280
And so what we have done here is this button
13

13

00:00:30.280  -->  00:00:31.550
which has page two.
14

14

00:00:31.550  -->  00:00:34.201
When we click it, then we have the next 10 results.
15

15

00:00:34.201  -->  00:00:38.150
We can go back to page one and to the next page, page three,
16

16

00:00:38.150  -->  00:00:41.188
and then we have the next 10 results.
17

17

00:00:41.188  -->  00:00:43.540
And then of course we can go back all the way to page one.
18

18

00:00:43.540  -->  00:00:46.943
And so let's now go ahead and implement that in our code.
19

19

00:00:48.200  -->  00:00:51.630
And we will implement this functionality in three steps.
20

20

00:00:51.630  -->  00:00:54.950
So the first step is to change the render results function,
21

21

00:00:54.950  -->  00:00:56.800
because that's the function that will be called
22

22

00:00:56.800  -->  00:00:59.590
whenever we click on one of the buttons.
23

23

00:00:59.590  -->  00:01:00.423
Okay?
24

24

00:01:00.423  -->  00:01:03.250
So we not only need to pass in the recipes now,
25

25

00:01:03.250  -->  00:01:05.570
but we also need to pass in the page
26

26

00:01:05.570  -->  00:01:06.958
that we want to display.
27

27

00:01:06.958  -->  00:01:09.840
And we can also say that we want
28

28

00:01:09.840  -->  00:01:12.612
to pass in the results per page.
29

29

00:01:12.612  -->  00:01:14.890
Okay?
30

30

00:01:14.890  -->  00:01:18.550
And we can set these here as a default to 10, let's say.
31

31

00:01:18.550  -->  00:01:22.720
And we can also start with page number one as a default.
32

32

00:01:22.720  -->  00:01:24.990
But of course, we can then override it.
33

33

00:01:24.990  -->  00:01:25.823
Okay?
34

34

00:01:25.823  -->  00:01:26.656
Make sense?
35

35

00:01:26.656  -->  00:01:29.430
So imagine we click on the button to go to page number two.
36

36

00:01:29.430  -->  00:01:31.630
Then these render results will be called
37

37

00:01:31.630  -->  00:01:33.840
and page will be set to two.
38

38

00:01:33.840  -->  00:01:34.770
Okay?
39

39

00:01:34.770  -->  00:01:37.110
Then the second step that we need to implement later
40

40

00:01:37.110  -->  00:01:40.770
is to render these buttons actually on the interface.
41

41

00:01:40.770  -->  00:01:42.370
And then the third step will be
42

42

00:01:42.370  -->  00:01:45.920
to attach some event handlers to these buttons
43

43

00:01:45.920  -->  00:01:48.630
in order to actually make the functionality work.
44

44

00:01:48.630  -->  00:01:49.463
Okay?
45

45

00:01:49.463  -->  00:01:51.470
But let's start with changing some stuff here
46

46

00:01:51.470  -->  00:01:52.750
in the render results.
47

47

00:01:52.750  -->  00:01:55.000
And it's actually not really difficult.
48

48

00:01:55.000  -->  00:01:57.793
So what we want to do here is to not display all 30,
49

49

00:01:57.793  -->  00:02:00.950
but only the number of results per page.
50

50

00:02:00.950  -->  00:02:03.110
So in this case here, 10.
51

51

00:02:03.110  -->  00:02:03.943
Okay?
52

52

00:02:03.943  -->  00:02:05.790
And so let's define a start variably.
53

53

00:02:05.790  -->  00:02:10.270
Let's set it here to an arbitrary number for now,
54

54

00:02:10.270  -->  00:02:12.853
and we're going to implement this logic here later.
55

55

00:02:12.853  -->  00:02:15.350
Okay?
56

56

00:02:15.350  -->  00:02:17.400
But for now, let's just put some random numbers here.
57

57

00:02:17.400  -->  00:02:19.580
So we have a start and an end variable.
58

58

00:02:19.580  -->  00:02:21.273
Let's set this one here to 10.
59

59

00:02:22.854  -->  00:02:24.300
So we enter zero.
60

60

00:02:24.300  -->  00:02:25.133
Okay?
61

61

00:02:25.133  -->  00:02:25.966
So then I can now show you
62

62

00:02:25.966  -->  00:02:27.990
what we actually need these variables for.
63

63

00:02:27.990  -->  00:02:29.350
So what we're gonna do then,
64

64

00:02:29.350  -->  00:02:32.170
after determining which should be the first recipe to show
65

65

00:02:32.170  -->  00:02:33.720
and which one is the last,
66

66

00:02:33.720  -->  00:02:37.650
well then we can simply take a part of the total array.
67

67

00:02:37.650  -->  00:02:39.600
So remember that this recipes here
68

68

00:02:39.600  -->  00:02:42.140
is the array of all the 30 recipes.
69

69

00:02:42.140  -->  00:02:44.380
So we can now take just a part of this,
70

70

00:02:44.380  -->  00:02:46.700
which is done using the slice method.
71

71

00:02:46.700  -->  00:02:48.790
And I think we've used this before
72

72

00:02:48.790  -->  00:02:50.680
in one of the other projects.
73

73

00:02:50.680  -->  00:02:53.470
And so the first parameter that we need to pass in
74

74

00:02:53.470  -->  00:02:55.780
is the first point where we want to start,
75

75

00:02:55.780  -->  00:02:58.520
basically copying the array.
76

76

00:02:58.520  -->  00:03:00.280
And that's at start.
77

77

00:03:00.280  -->  00:03:01.410
And well you can guess it.
78

78

00:03:01.410  -->  00:03:04.000
The second parameter is for end.
79

79

00:03:04.000  -->  00:03:06.850
Let me actually show that to you just so you
80

80

00:03:06.850  -->  00:03:10.790
can become more familiar with the documentation.
81

81

00:03:10.790  -->  00:03:13.830
So I usually always like to use whatever I'm searching for
82

82

00:03:13.830  -->  00:03:15.130
and then mdn,
83

83

00:03:15.130  -->  00:03:19.700
which is in my opinion the best web documentation out there.
84

84

00:03:19.700  -->  00:03:20.533
Okay?
85

85

00:03:20.533  -->  00:03:22.610
So you see slice returns a shallow copy
86

86

00:03:22.610  -->  00:03:25.140
of the portion of an array into a new array.
87

87

00:03:25.140  -->  00:03:25.973
Okay?
88

88

00:03:25.973  -->  00:03:28.660
And so we can pass in the begin and the end,
89

89

00:03:28.660  -->  00:03:30.150
which is exactly what we did.
90

90

00:03:30.150  -->  00:03:32.903
And both of them are zero based indexes.
91

91

00:03:32.903  -->  00:03:34.285
Okay?
92

92

00:03:34.285  -->  00:03:39.285
So how do we actually calculate the start and the end?
93

93

00:03:40.180  -->  00:03:43.090
And the best way to figure it out is with an example.
94

94

00:03:43.090  -->  00:03:44.740
So let's say you're on page one.
95

95

00:03:44.740  -->  00:03:47.350
And so you want to start at zero.
96

96

00:03:47.350  -->  00:03:48.183
Right?
97

97

00:03:48.183  -->  00:03:50.280
Because the index in the array is zero based,
98

98

00:03:50.280  -->  00:03:52.070
and so the first position is zero.
99

99

00:03:52.070  -->  00:03:54.360
So on page one, you want to start on zero,
100

100

00:03:54.360  -->  00:03:57.179
and you want to end on number nine.
101

101

00:03:57.179  -->  00:03:58.030
Right?
102

102

00:03:58.030  -->  00:04:00.140
And with that, we will select 10 element.
103

103

00:04:00.140  -->  00:04:01.860
Now if we were on page number two,
104

104

00:04:01.860  -->  00:04:03.620
well then we would like to start
105

105

00:04:03.620  -->  00:04:06.180
with number 10 here like this.
106

106

00:04:06.180  -->  00:04:07.507
Okay?
107

107

00:04:07.507  -->  00:04:08.870
So how do we implement this?
108

108

00:04:08.870  -->  00:04:13.036
Well we can simply say page minus one
109

109

00:04:13.036  -->  00:04:17.080
times the results per page.
110

110

00:04:17.080  -->  00:04:18.470
Right?
111

111

00:04:18.470  -->  00:04:19.303
And that's it.
112

112

00:04:19.303  -->  00:04:22.750
So again, on page number one, it will be one minus one zero.
113

113

00:04:22.750  -->  00:04:24.580
And so we will start on zero.
114

114

00:04:24.580  -->  00:04:25.940
On page number two,
115

115

00:04:25.940  -->  00:04:28.950
it will be two minus one is one times 10.
116

116

00:04:28.950  -->  00:04:31.270
So we will start on page number 10.
117

117

00:04:31.270  -->  00:04:32.960
And of course on page number three,
118

118

00:04:32.960  -->  00:04:36.170
it will be two times 10, and so we start at 20.
119

119

00:04:36.170  -->  00:04:37.450
And this will actually work
120

120

00:04:37.450  -->  00:04:39.780
for whatever page you pass in here.
121

121

00:04:39.780  -->  00:04:41.730
So we could hard code it specifically
122

122

00:04:41.730  -->  00:04:43.340
just for page two and three,
123

123

00:04:43.340  -->  00:04:45.170
because we know that right now from the api,
124

124

00:04:45.170  -->  00:04:46.750
we only get 30 results.
125

125

00:04:46.750  -->  00:04:48.620
But imagine that the api would change in the future,
126

126

00:04:48.620  -->  00:04:50.460
and we would get a hundred results.
127

127

00:04:50.460  -->  00:04:52.470
And then this code would no longer work.
128

128

00:04:52.470  -->  00:04:54.920
And if you do it like this dynamically,
129

129

00:04:54.920  -->  00:04:56.830
then everything's going to work.
130

130

00:04:56.830  -->  00:04:57.663
Okay?
131

131

00:04:57.663  -->  00:04:59.552
And then the end is actually just the page
132

132

00:04:59.552  -->  00:05:02.150
times the results per page.
133

133

00:05:02.150  -->  00:05:03.980
And that's it.
134

134

00:05:03.980  -->  00:05:05.442
So on page one will be one times 10.
135

135

00:05:05.442  -->  00:05:09.830
So 10 and then 20 and 30.
136

136

00:05:09.830  -->  00:05:12.820
And what this means is that's actually the end number here
137

137

00:05:12.820  -->  00:05:15.820
is not actually included in the new array.
138

138

00:05:15.820  -->  00:05:18.310
So let's take a look at that here in the doc again.
139

139

00:05:18.310  -->  00:05:20.080
So here's what I was saying.
140

140

00:05:20.080  -->  00:05:24.025
So slice extracts up to but not including the end.
141

141

00:05:24.025  -->  00:05:26.040
And so when we put 10 here,
142

142

00:05:26.040  -->  00:05:27.920
it will really only copy until nine,
143

143

00:05:27.920  -->  00:05:31.150
which is exactly what we want, so 10 results.
144

144

00:05:31.150  -->  00:05:31.983
Okay?
145

145

00:05:31.983  -->  00:05:32.816
Make sense?
146

146

00:05:32.816  -->  00:05:35.650
So let's actually now go ahead and test this.
147

147

00:05:35.650  -->  00:05:36.960
And if we do it right now,
148

148

00:05:36.960  -->  00:05:39.280
it will actually already work, I'm sure.
149

149

00:05:39.280  -->  00:05:43.320
So if we now type in pizza, we will only get 10 results.
150

150

00:05:43.320  -->  00:05:45.058
So let's wait for it.
151

151

00:05:45.058  -->  00:05:47.527
And let's count them actually.
152

152

00:05:47.527  -->  00:05:49.360
Some more space here.
153

153

00:05:49.360  -->  00:05:51.130
So one, two, three, four, five,
154

154

00:05:51.130  -->  00:05:53.840
six, seven, eight, nine, and 10.
155

155

00:05:53.840  -->  00:05:54.710
Perfect.
156

156

00:05:54.710  -->  00:05:57.323
Let's change it here now as a default to three.
157

157

00:05:59.290  -->  00:06:02.100
And actually, let's also change this one here to five
158

158

00:06:04.840  -->  00:06:06.673
just to see if everything works.
159

159

00:06:07.600  -->  00:06:10.163
And indeed, we get five results.
160

160

00:06:12.961  -->  00:06:13.850
Put it back to 10.
161

161

00:06:13.850  -->  00:06:15.163
Let's check it out again.
162

162

00:06:17.320  -->  00:06:19.303
And indeed, here we go.
163

163

00:06:20.200  -->  00:06:21.033
Alright.
164

164

00:06:21.033  -->  00:06:22.030
So that's now implemented.
165

165

00:06:22.030  -->  00:06:25.490
Let's now take care of rendering the actual buttons.
166

166

00:06:25.490  -->  00:06:28.253
So let's write a function.
167

167

00:06:32.130  -->  00:06:33.540
Render buttons.
168

168

00:06:33.540  -->  00:06:35.927
And you see that this is, again, a private function.
169

169

00:06:35.927  -->  00:06:38.910
And that's because we will call this function
170

170

00:06:38.910  -->  00:06:40.375
from the render results.
171

171

00:06:40.375  -->  00:06:41.503
Okay?
172

172

00:06:44.100  -->  00:06:45.870
So what do we actually need here?
173

173

00:06:45.870  -->  00:06:47.960
Well let's put in just the page for now,
174

174

00:06:47.960  -->  00:06:49.532
and we're gonna add more arguments
175

175

00:06:49.532  -->  00:06:52.185
later down the road if we need them.
176

176

00:06:52.185  -->  00:06:54.040
Okay?
177

177

00:06:54.040  -->  00:06:56.610
So of course we could have done this functionality here
178

178

00:06:56.610  -->  00:06:58.100
so the rendering of the buttons
179

179

00:06:58.100  -->  00:06:59.750
ride inside the render results,
180

180

00:06:59.750  -->  00:07:00.583
but again,
181

181

00:07:01.597  -->  00:07:03.900
I like to keep different stuff in different functions here,
182

182

00:07:03.900  -->  00:07:06.640
so to make it more reusable and more maintainable.
183

183

00:07:06.640  -->  00:07:09.450
So the goal of this function here is to render the buttons
184

184

00:07:09.450  -->  00:07:12.190
according to the number of the page that we're on.
185

185

00:07:12.190  -->  00:07:13.800
So let me show it to you again
186

186

00:07:13.800  -->  00:07:15.400
how it should work in the end.
187

187

00:07:15.400  -->  00:07:17.590
So when we're on page one,
188

188

00:07:17.590  -->  00:07:20.580
then it should only display the button for next.
189

189

00:07:20.580  -->  00:07:22.000
If we're on the second page,
190

190

00:07:22.000  -->  00:07:24.280
so not the first one and also not the last one,
191

191

00:07:24.280  -->  00:07:27.890
then we have both buttons to go back and also to go forward.
192

192

00:07:27.890  -->  00:07:29.244
And when we're on the last page,
193

193

00:07:29.244  -->  00:07:32.427
well then we only want the button to go back.
194

194

00:07:32.427  -->  00:07:33.560
Okay?
195

195

00:07:33.560  -->  00:07:36.410
So how do we actually now implement this?
196

196

00:07:36.410  -->  00:07:38.830
Well we need to know on which page we are
197

197

00:07:38.830  -->  00:07:41.540
and also how many pages there actually are.
198

198

00:07:41.540  -->  00:07:44.090
And how do we actually know how many pages there are?
199

199

00:07:44.090  -->  00:07:46.400
Well, all we have to do is to divide the number
200

200

00:07:46.400  -->  00:07:50.310
of results by the results that are displayed per page.
201

201

00:07:50.310  -->  00:07:51.143
Right?
202

202

00:07:51.143  -->  00:07:53.993
So we need to pass in that data to our function.
203

203

00:07:55.300  -->  00:07:57.020
So we need to num of results,
204

204

00:07:57.020  -->  00:08:00.856
and we need how many results we have per page.
205

205

00:08:00.856  -->  00:08:02.763
Right?
206

206

00:08:02.763  -->  00:08:04.370
Does that make sense?
207

207

00:08:04.370  -->  00:08:06.630
Let's call this one here pages,
208

208

00:08:06.630  -->  00:08:09.710
which will mean, again, how many pages there actually are.
209

209

00:08:09.710  -->  00:08:12.690
And we calculate this by doing the number of results
210

210

00:08:15.130  -->  00:08:19.670
divided by the results per page.
211

211

00:08:19.670  -->  00:08:22.420
So in our example, we have 30 results,
212

212

00:08:22.420  -->  00:08:24.780
and on each page, we have 10 results.
213

213

00:08:24.780  -->  00:08:27.830
And so 30 divided by 10 will be three.
214

214

00:08:27.830  -->  00:08:30.070
And so now we know that we have three pages.
215

215

00:08:30.070  -->  00:08:32.990
Now imagine that for some reason this changes here again.
216

216

00:08:32.990  -->  00:08:34.580
So if the api changes in the future,
217

217

00:08:34.580  -->  00:08:38.550
and instead of 30, we get back 45, for example.
218

218

00:08:38.550  -->  00:08:42.450
Then 45 divided by 10 would be 4.5 pages,
219

219

00:08:42.450  -->  00:08:44.020
and we don't want that of course.
220

220

00:08:44.020  -->  00:08:44.853
Right?
221

221

00:08:44.853  -->  00:08:46.580
So we want not 4.5, but in this case,
222

222

00:08:46.580  -->  00:08:49.500
we want five pages in order to have room
223

223

00:08:49.500  -->  00:08:50.960
to display all of the results.
224

224

00:08:50.960  -->  00:08:53.490
And so we have to use a function
225

225

00:08:53.490  -->  00:08:58.490
which is part of the math object, and it's called math ceil.
226

226

00:08:58.770  -->  00:09:01.230
And so this will basically round it to the ceiling,
227

227

00:09:01.230  -->  00:09:02.550
so to the next integer.
228

228

00:09:02.550  -->  00:09:06.260
So if we had 4.1, then it would round it up to five.
229

229

00:09:06.260  -->  00:09:09.630
If we had 4.4, it would also round it up to five.
230

230

00:09:09.630  -->  00:09:12.300
Because if we used normal rounding, then well,
231

231

00:09:12.300  -->  00:09:15.010
4.4 would be just four page,
232

232

00:09:15.010  -->  00:09:16.440
because it would be rounding down.
233

233

00:09:16.440  -->  00:09:17.790
Right?
234

234

00:09:17.790  -->  00:09:19.570
But we always want it to the ceiling.
235

235

00:09:19.570  -->  00:09:20.403
Okay?
236

236

00:09:20.403  -->  00:09:22.163
So we have three pages.
237

237

00:09:23.290  -->  00:09:26.663
And so let's now do some if else statements.
238

238

00:09:27.950  -->  00:09:30.439
So saying what we just said when we looked at
239

239

00:09:30.439  -->  00:09:33.740
what buttons we want available on each page.
240

240

00:09:33.740  -->  00:09:37.813
So if we are on page one, so page is one,
241

241

00:09:38.960  -->  00:09:43.960
well then we want the button to go to next page.
242

242

00:09:45.570  -->  00:09:47.430
So for now, I'm just writing it down here,
243

243

00:09:47.430  -->  00:09:50.050
so that we can then know what to do.
244

244

00:09:50.050  -->  00:09:51.630
Else if.
245

245

00:09:51.630  -->  00:09:52.700
So if we're on the last page,
246

246

00:09:52.700  -->  00:09:55.760
we only want the button to go to the previous page.
247

247

00:09:55.760  -->  00:09:56.593
Right?
248

248

00:09:56.593  -->  00:09:58.068
So how do we say the last page?
249

249

00:09:58.068  -->  00:10:03.046
Well, it's just that the page is equal to pages.
250

250

00:10:03.046  -->  00:10:04.350
Right?
251

251

00:10:04.350  -->  00:10:06.780
So if we have five pages, and we are on page five,
252

252

00:10:06.780  -->  00:10:08.670
well, it means that we're on the last page.
253

253

00:10:08.670  -->  00:10:09.610
Right?
254

254

00:10:09.610  -->  00:10:14.450
Here let's say only button to go to next page.
255

255

00:10:14.450  -->  00:10:18.853
And here we only want the button to go to the previous page.
256

256

00:10:20.830  -->  00:10:22.445
So these are the two edge cases,
257

257

00:10:22.445  -->  00:10:24.720
but then we also have the case
258

258

00:10:24.720  -->  00:10:28.250
that we are in one of the middle pages.
259

259

00:10:28.250  -->  00:10:32.920
And so that means that the page is less than pages.
260

260

00:10:32.920  -->  00:10:33.753
Right?
261

261

00:10:37.620  -->  00:10:40.453
So in this case, we want both buttons.
262

262

00:10:43.910  -->  00:10:44.850
Okay?
263

263

00:10:44.850  -->  00:10:47.993
Now imagine that we only have one page.
264

264

00:10:47.993  -->  00:10:49.140
Then in that case,
265

265

00:10:49.140  -->  00:10:52.100
we actually don't really want to display any buttons at all.
266

266

00:10:52.100  -->  00:10:53.425
Right?
267

267

00:10:53.425  -->  00:10:54.991
So let's say here that the page should be one
268

268

00:10:54.991  -->  00:10:59.800
and pages should be greater than one.
269

269

00:10:59.800  -->  00:11:00.633
Okay?
270

270

00:11:00.633  -->  00:11:02.980
Which means that there are actually more than one page.
271

271

00:11:02.980  -->  00:11:05.470
And the same thing applies to the last case.
272

272

00:11:05.470  -->  00:11:08.040
So in case that we're on the last page,
273

273

00:11:08.040  -->  00:11:10.790
well we really only want a previous button
274

274

00:11:10.790  -->  00:11:13.660
if there are more than one pages.
275

275

00:11:13.660  -->  00:11:16.800
And so let's now actually write the code for the buttons.
276

276

00:11:16.800  -->  00:11:19.690
And you see that we will have a lot of duplicate code here.
277

277

00:11:19.690  -->  00:11:21.061
Right?
278

278

00:11:21.061  -->  00:11:22.180
Because we will have a button here,
279

279

00:11:22.180  -->  00:11:24.170
and here we will actually have both buttons,
280

280

00:11:24.170  -->  00:11:26.130
and here we will again have a button.
281

281

00:11:26.130  -->  00:11:27.320
And so all of this HTML code
282

282

00:11:27.320  -->  00:11:29.240
will actually be pretty similar.
283

283

00:11:29.240  -->  00:11:31.730
And so what we can do is to, once more,
284

284

00:11:31.730  -->  00:11:34.254
export it to an outside function.
285

285

00:11:34.254  -->  00:11:35.740
Okay?
286

286

00:11:35.740  -->  00:11:36.623
So let's do that.
287

287

00:11:37.750  -->  00:11:41.123
Const create button.
288

288

00:11:44.500  -->  00:11:46.560
So what do we need to pass into this function
289

289

00:11:46.560  -->  00:11:48.590
which is going to render the button?
290

290

00:11:48.590  -->  00:11:50.650
Well we need to pass in the number of the page
291

291

00:11:50.650  -->  00:11:53.200
that we're in so that it can then print
292

292

00:11:53.200  -->  00:11:54.830
that number to the interface.
293

293

00:11:54.830  -->  00:11:56.200
And we will have to say if it's a button
294

294

00:11:56.200  -->  00:11:59.020
to go back or to go forward.
295

295

00:11:59.020  -->  00:12:00.883
And so let's call that one the type.
296

296

00:12:03.840  -->  00:12:08.280
Let's now go to the HTML and actually grab the button here,
297

297

00:12:08.280  -->  00:12:10.350
because it should already be somewhere here.
298

298

00:12:10.350  -->  00:12:12.713
And let's actually get this here as a comment.
299

299

00:12:15.100  -->  00:12:16.900
And now before we paste it here,
300

300

00:12:16.900  -->  00:12:21.330
I can see that we can actually get rid of these parentheses,
301

301

00:12:21.330  -->  00:12:23.750
because all we really want to do from this function here
302

302

00:12:23.750  -->  00:12:26.850
is to return the markup for this button.
303

303

00:12:26.850  -->  00:12:27.983
Okay?
304

304

00:12:27.983  -->  00:12:29.910
So we are going to render it down here
305

305

00:12:29.910  -->  00:12:31.570
inside of the render button functions.
306

306

00:12:31.570  -->  00:12:32.403
Okay?
307

307

00:12:32.403  -->  00:12:33.236
And so from here,
308

308

00:12:33.236  -->  00:12:36.080
we are actually only going to create the markup.
309

309

00:12:36.080  -->  00:12:38.773
And so we just want to return a template string
310

310

00:12:38.773  -->  00:12:40.043
from this one here.
311

311

00:12:44.780  -->  00:12:48.370
And so this is now just some regular HTML here as a comment,
312

312

00:12:48.370  -->  00:12:49.660
as you know already.
313

313

00:12:49.660  -->  00:12:50.977
Okay?
314

314

00:12:50.977  -->  00:12:53.090
So this is just so that we see what's the difference
315

315

00:12:53.090  -->  00:12:55.550
between the previous and the next button.
316

316

00:12:55.550  -->  00:12:59.760
So you see here that we have the results button previous
317

317

00:12:59.760  -->  00:13:01.230
and results button next.
318

318

00:13:01.230  -->  00:13:04.010
So that's one of the differences and also here in the icon.
319

319

00:13:04.010  -->  00:13:06.840
So here we have left, and here we have right.
320

320

00:13:06.840  -->  00:13:07.673
Okay?
321

321

00:13:07.673  -->  00:13:09.690
But that's actually all there is.
322

322

00:13:09.690  -->  00:13:11.853
So let's go ahead and copy this one here,
323

323

00:13:13.376  -->  00:13:14.853
and that's not correct.
324

324

00:13:16.879  -->  00:13:18.710
Alright.
325

325

00:13:18.710  -->  00:13:21.133
So let's start with the number here.
326

326

00:13:23.200  -->  00:13:25.220
So imagine that we're on page number two
327

327

00:13:25.220  -->  00:13:27.720
and that we want a previous button.
328

328

00:13:27.720  -->  00:13:31.190
So in that case, we want to say page number one here.
329

329

00:13:31.190  -->  00:13:32.023
Right?
330

330

00:13:32.023  -->  00:13:34.320
And in case we are on a next button,
331

331

00:13:34.320  -->  00:13:36.440
well, then we actually want page number three.
332

332

00:13:36.440  -->  00:13:38.120
And so depending here on this type,
333

333

00:13:38.120  -->  00:13:42.040
we can now specify what we want to display here
334

334

00:13:42.040  -->  00:13:43.780
in this page number.
335

335

00:13:43.780  -->  00:13:46.890
So let's say that as the type,
336

336

00:13:46.890  -->  00:13:51.890
it can either be previous, or it can be next.
337

337

00:13:53.440  -->  00:13:54.273
Okay?
338

338

00:13:54.273  -->  00:13:55.910
And both as strings of course.
339

339

00:13:55.910  -->  00:13:58.150
So in here, whenever we call this create button,
340

340

00:13:58.150  -->  00:13:59.633
we're going to pass in the number of the page
341

341

00:13:59.633  -->  00:14:01.060
that we're currently in
342

342

00:14:01.060  -->  00:14:04.251
and either if it's a previous or a next button.
343

343

00:14:04.251  -->  00:14:05.450
Okay?
344

344

00:14:05.450  -->  00:14:08.180
And so let's now use the ternary operator here
345

345

00:14:08.180  -->  00:14:10.670
in order to make an if else statement,
346

346

00:14:10.670  -->  00:14:12.720
but in just a single line.
347

347

00:14:12.720  -->  00:14:13.553
Okay?
348

348

00:14:13.553  -->  00:14:15.303
So we can say if the type is previous,
349

349

00:14:17.720  -->  00:14:19.540
so previous,
350

350

00:14:19.540  -->  00:14:22.673
well then what we want is page minus one.
351

351

00:14:25.150  -->  00:14:28.300
And if it's not, then we want page plus one.
352

352

00:14:28.300  -->  00:14:29.579
Okay?
353

353

00:14:29.579  -->  00:14:30.586
Make sense?
354

354

00:14:30.586  -->  00:14:32.200
So imagine we have a previous button,
355

355

00:14:32.200  -->  00:14:33.610
and we're on page number two.
356

356

00:14:33.610  -->  00:14:35.520
Well then we want to display that we want
357

357

00:14:35.520  -->  00:14:36.910
to go to page number one.
358

358

00:14:36.910  -->  00:14:38.320
So two minus one.
359

359

00:14:38.320  -->  00:14:40.080
But if we have a next button,
360

360

00:14:40.080  -->  00:14:43.030
well then on that button it should say page number three.
361

361

00:14:43.030  -->  00:14:44.807
And so that's page plus one.
362

362

00:14:44.807  -->  00:14:45.940
Okay?
363

363

00:14:45.940  -->  00:14:49.900
Next up, we can do the same here for the icon.
364

364

00:14:49.900  -->  00:14:51.903
So we have left and right.
365

365

00:14:58.860  -->  00:15:00.923
So again, if it's a previous button,
366

366

00:15:00.923  -->  00:15:03.153
then the arrow should point to the left side.
367

367

00:15:03.153  -->  00:15:06.923
And in the other case, it should point to the right side.
368

368

00:15:08.030  -->  00:15:08.863
Okay?
369

369

00:15:08.863  -->  00:15:11.600
And so that icon here coming from the icons that svg
370

370

00:15:11.600  -->  00:15:14.500
will then display exactly that what we want to do.
371

371

00:15:14.500  -->  00:15:17.290
Next up, we have this class name up here.
372

372

00:15:17.290  -->  00:15:20.247
So results button previous for the previous button
373

373

00:15:20.247  -->  00:15:22.130
and next for the next button.
374

374

00:15:22.130  -->  00:15:25.730
So here, we can simply plug in this type.
375

375

00:15:25.730  -->  00:15:27.513
So let's get rid of this,
376

376

00:15:30.510  -->  00:15:32.130
and just say type.
377

377

00:15:32.130  -->  00:15:33.330
Simple as that.
378

378

00:15:33.330  -->  00:15:34.933
And so that's almost at.
379

379

00:15:34.933  -->  00:15:37.580
There's just one more thing that we need to do here,
380

380

00:15:37.580  -->  00:15:40.630
which is to actually plug in the data into this button
381

381

00:15:40.630  -->  00:15:43.660
containing the number of the page where we want to move
382

382

00:15:43.660  -->  00:15:45.360
whenever we click this button.
383

383

00:15:45.360  -->  00:15:46.663
Okay?
384

384

00:15:46.663  -->  00:15:50.093
So basically we need to encode this number here.
385

385

00:15:51.330  -->  00:15:53.080
And I can actually copy it right now
386

386

00:15:53.080  -->  00:15:55.820
so that it's stored inside of this element,
387

387

00:15:55.820  -->  00:15:56.960
inside this component.
388

388

00:15:56.960  -->  00:15:58.243
And so in HTML5,
389

389

00:15:58.243  -->  00:16:01.250
there's something called the data attributes.
390

390

00:16:01.250  -->  00:16:03.335
And so we can say data,
391

391

00:16:03.335  -->  00:16:05.670
and then we can specify a random name.
392

392

00:16:05.670  -->  00:16:07.050
So like go to.
393

393

00:16:07.050  -->  00:16:08.060
So go to page.
394

394

00:16:08.060  -->  00:16:09.840
So the page that we want to go to.
395

395

00:16:09.840  -->  00:16:13.901
And then, let's simple paste in here the number
396

396

00:16:13.901  -->  00:16:15.300
that we want to be here.
397

397

00:16:15.300  -->  00:16:16.591
Okay?
398

398

00:16:16.591  -->  00:16:18.780
And we're then going to use this property here later
399

399

00:16:18.780  -->  00:16:21.920
when we attach the event handler to these buttons.
400

400

00:16:21.920  -->  00:16:22.790
Okay?
401

401

00:16:22.790  -->  00:16:24.500
So just keep in mind that we're going
402

402

00:16:24.500  -->  00:16:25.900
to use this one here later,
403

403

00:16:25.900  -->  00:16:28.230
and by then I'm going to explain to you why.
404

404

00:16:28.230  -->  00:16:30.760
Now all we need to do is to call, actually,
405

405

00:16:30.760  -->  00:16:34.560
this function here in all of these different cases.
406

406

00:16:34.560  -->  00:16:35.393
Okay?
407

407

00:16:35.393  -->  00:16:40.240
So create button with the current page and 10.
408

408

00:16:41.220  -->  00:16:43.683
In this case here, we want the prev,
409

409

00:16:45.160  -->  00:16:46.430
so the previous.
410

410

00:16:46.430  -->  00:16:47.263
Right?
411

411

00:16:47.263  -->  00:16:49.210
Actually no, we want the next, of course.
412

412

00:16:49.210  -->  00:16:51.640
From page number one, we want to go to the next page.
413

413

00:16:51.640  -->  00:16:55.890
Now this here should then be assigned to a variable.
414

414

00:16:55.890  -->  00:16:56.723
Right?
415

415

00:16:56.723  -->  00:16:58.583
Now we cannot use a const here.
416

416

00:16:58.583  -->  00:16:59.840
Right?
417

417

00:16:59.840  -->  00:17:01.623
So we cannot say const button.
418

418

00:17:03.000  -->  00:17:05.030
And that's because const and let,
419

419

00:17:05.030  -->  00:17:07.479
so the new ways of declaring variables in ES6,
420

420

00:17:07.479  -->  00:17:09.190
they are block scoped.
421

421

00:17:09.190  -->  00:17:12.410
And so they are only available inside of this block.
422

422

00:17:12.410  -->  00:17:13.243
Okay?
423

423

00:17:13.243  -->  00:17:15.070
And so I have to declare it inside of this block.
424

424

00:17:15.070  -->  00:17:16.300
Well then button is not going
425

425

00:17:16.300  -->  00:17:19.180
to be available outside of this block.
426

426

00:17:19.180  -->  00:17:20.970
So what I have to do instead is
427

427

00:17:20.970  -->  00:17:23.830
to declare the variable outside with a let,
428

428

00:17:23.830  -->  00:17:26.854
because we will want to change it.
429

429

00:17:26.854  -->  00:17:28.330
Okay?
430

430

00:17:28.330  -->  00:17:29.660
So we cannot use const here,
431

431

00:17:29.660  -->  00:17:31.563
because we then want to reassign it.
432

432

00:17:32.751  -->  00:17:34.400
Okay?
433

433

00:17:34.400  -->  00:17:36.863
So now we can say button in here.
434

434

00:17:38.240  -->  00:17:41.383
We can say button here, but with prev.
435

435

00:17:42.490  -->  00:17:45.480
And then we can also say button in here.
436

436

00:17:45.480  -->  00:17:48.584
But here remember, we actually want both buttons.
437

437

00:17:48.584  -->  00:17:51.080
And I'm not sure why I deleted the comments.
438

438

00:17:51.080  -->  00:17:52.163
Let's go back here.
439

439

00:17:56.240  -->  00:17:59.840
So prev, and here we want both buttons.
440

440

00:17:59.840  -->  00:18:02.480
So now we need a string which contains one button
441

441

00:18:02.480  -->  00:18:04.700
for next and one for prev.
442

442

00:18:04.700  -->  00:18:05.533
So let's do that.
443

443

00:18:05.533  -->  00:18:07.103
So a template string again here.
444

444

00:18:11.200  -->  00:18:12.850
I'm not sure why this one closed.
445

445

00:18:21.440  -->  00:18:25.724
So one for next and one for previous.
446

446

00:18:25.724  -->  00:18:26.650
Okay?
447

447

00:18:26.650  -->  00:18:29.440
So I created a string which contains the result
448

448

00:18:29.440  -->  00:18:32.050
of calling these function here two times,
449

449

00:18:32.050  -->  00:18:33.290
so these two strings.
450

450

00:18:33.290  -->  00:18:35.823
And so we will then have these two buttons.
451

451

00:18:36.700  -->  00:18:38.004
Okay?
452

452

00:18:38.004  -->  00:18:40.470
So all we need to do now is to actually
453

453

00:18:40.470  -->  00:18:44.690
then insert this new element right into our dumb.
454

454

00:18:44.690  -->  00:18:46.710
And so where do we actually want this?
455

455

00:18:46.710  -->  00:18:49.140
Well let's go back to our HTML,
456

456

00:18:49.140  -->  00:18:50.800
and well, it should be inside
457

457

00:18:50.800  -->  00:18:53.370
of this div here called results pages.
458

458

00:18:53.370  -->  00:18:55.483
So let's edit to our element.
459

459

00:18:57.910  -->  00:19:01.550
So we have search res and search res list.
460

460

00:19:01.550  -->  00:19:05.813
Let's now add search res and pages.
461

461

00:19:18.370  -->  00:19:23.370
So elements dot search res pages dot insert adjacent,
462

462

00:19:24.940  -->  00:19:26.773
and not element but HTML.
463

463

00:19:30.350  -->  00:19:32.240
We want it at after begin,
464

464

00:19:32.240  -->  00:19:34.220
so right at the beginning of the element
465

465

00:19:34.220  -->  00:19:38.760
and then of course the element we want to insert,
466

466

00:19:38.760  -->  00:19:42.390
which is of course the button.
467

467

00:19:42.390  -->  00:19:43.223
Whew.
468

468

00:19:43.223  -->  00:19:44.270
So that was a lot of code.
469

469

00:19:44.270  -->  00:19:47.973
Let's actually take a look if this is working.
470

470

00:19:50.210  -->  00:19:51.350
Okay?
471

471

00:19:51.350  -->  00:19:53.280
So this is our result.
472

472

00:19:53.280  -->  00:19:56.200
Oh and I see an error here already,
473

473

00:19:56.200  -->  00:19:58.470
and it is in base dot js.
474

474

00:19:58.470  -->  00:19:59.303
Let's take a look.
475

475

00:19:59.303  -->  00:20:00.370
And actually it is a red here.
476

476

00:20:00.370  -->  00:20:02.141
It the code editor,
477

477

00:20:02.141  -->  00:20:03.730
it was already telling me something's wrong,
478

478

00:20:03.730  -->  00:20:06.190
and for some reason I added this semicolon,
479

479

00:20:06.190  -->  00:20:07.090
which I shouldn't.
480

480

00:20:08.190  -->  00:20:11.593
And so let's see if it works now.
481

481

00:20:12.490  -->  00:20:13.823
Gives us some more space.
482

482

00:20:15.370  -->  00:20:17.890
And I do not see any buttons down here.
483

483

00:20:17.890  -->  00:20:20.050
And yeah of course I don't,
484

484

00:20:20.050  -->  00:20:24.170
because we did never call the, where is it?
485

485

00:20:24.170  -->  00:20:26.940
So we did never call the render buttons.
486

486

00:20:26.940  -->  00:20:27.950
Okay?
487

487

00:20:27.950  -->  00:20:29.450
So let's go ahead and do that.
488

488

00:20:30.670  -->  00:20:32.713
So some comments here.
489

489

00:20:36.730  -->  00:20:39.553
Render results of current page.
490

490

00:20:44.970  -->  00:20:49.970
And render the pagination buttons.
491

491

00:20:50.070  -->  00:20:54.270
So render buttons with the page,
492

492

00:20:54.270  -->  00:20:58.380
which is page the number of results
493

493

00:20:58.380  -->  00:21:02.560
is the length of the recipe.
494

494

00:21:02.560  -->  00:21:03.580
Right?
495

495

00:21:03.580  -->  00:21:07.793
So recipes is the array which contains all of the recipes.
496

496

00:21:08.760  -->  00:21:10.510
And length then gives us the amount
497

497

00:21:10.510  -->  00:21:12.330
of recipes that are in there.
498

498

00:21:12.330  -->  00:21:15.540
And then finally, the third one is results per page,
499

499

00:21:15.540  -->  00:21:18.030
which is just results per page,
500

500

00:21:18.030  -->  00:21:21.361
which is this one that we get as an input to this function.
501

501

00:21:21.361  -->  00:21:23.993
And so let's take a look at that again.
502

502

00:21:28.210  -->  00:21:33.090
And so well, something is not right here.
503

503

00:21:33.090  -->  00:21:34.540
And I guess, yeah,
504

504

00:21:34.540  -->  00:21:37.420
the problem is that we're still on page three.
505

505

00:21:37.420  -->  00:21:40.463
So of course we always want to start on page number one.
506

506

00:21:46.090  -->  00:21:48.330
And so here we go, page two.
507

507

00:21:48.330  -->  00:21:51.110
Well the icon is not really at the right place,
508

508

00:21:51.110  -->  00:21:53.700
but we're gonna take care of that in a second.
509

509

00:21:53.700  -->  00:21:55.410
And then of course if I click,
510

510

00:21:55.410  -->  00:21:57.150
then it doesn't do anything yet,
511

511

00:21:57.150  -->  00:22:00.210
because we didn't yet attach the handler.
512

512

00:22:00.210  -->  00:22:01.660
Let's just inspect this element here
513

513

00:22:01.660  -->  00:22:05.400
so that I can show you this data attribute that we added,
514

514

00:22:05.400  -->  00:22:06.690
and so this one here.
515

515

00:22:06.690  -->  00:22:10.780
So we have to data dot go to, which is set to two.
516

516

00:22:10.780  -->  00:22:13.100
And so next when we're adding the event listeners,
517

517

00:22:13.100  -->  00:22:16.530
this is how we'll know which page we should move to.
518

518

00:22:16.530  -->  00:22:17.847
Okay?
519

519

00:22:17.847  -->  00:22:20.407
So instead of reading it from the text,
520

520

00:22:20.407  -->  00:22:21.860
from this dumb element here,
521

521

00:22:21.860  -->  00:22:24.250
we will simply read this property here,
522

522

00:22:24.250  -->  00:22:25.590
which is a lot better.
523

523

00:22:25.590  -->  00:22:26.860
Okay?
524

524

00:22:26.860  -->  00:22:27.710
So it works on page number one.
525

525

00:22:27.710  -->  00:22:30.307
So let's hope it also works on page number two.
526

526

00:22:30.307  -->  00:22:31.650
And we're gonna test that
527

527

00:22:31.650  -->  00:22:35.710
once we have our event handlers properly working.
528

528

00:22:35.710  -->  00:22:39.050
And so that's what we're going to do next actually.
529

529

00:22:39.050  -->  00:22:41.480
So that's going to be in the controller again.
530

530

00:22:41.480  -->  00:22:45.160
So in a controller is where we have all our event listeners,
531

531

00:22:45.160  -->  00:22:47.450
and we then control what should happen
532

532

00:22:47.450  -->  00:22:50.500
based on what's clicked, of course.
533

533

00:22:50.500  -->  00:22:52.840
Now in this case, we actually have a small problem
534

534

00:22:52.840  -->  00:22:56.570
because where do we actually attach these event listeners to
535

535

00:22:56.570  -->  00:22:59.100
if the pagination buttons are not yet there
536

536

00:22:59.100  -->  00:23:00.600
when the page is loaded?
537

537

00:23:00.600  -->  00:23:01.580
And so we have to use something
538

538

00:23:01.580  -->  00:23:03.150
called event delegation again.
539

539

00:23:03.150  -->  00:23:04.830
So we used that before in the course.
540

540

00:23:04.830  -->  00:23:07.240
And so the concept is that we attach the event listener
541

541

00:23:07.240  -->  00:23:09.170
to an element that is already there,
542

542

00:23:09.170  -->  00:23:12.240
and then we try to figure out where the click happened
543

543

00:23:12.240  -->  00:23:14.830
so that we can then take action based on that.
544

544

00:23:14.830  -->  00:23:15.663
Okay?
545

545

00:23:15.663  -->  00:23:18.670
And so the element that is actually already available
546

546

00:23:18.670  -->  00:23:22.060
at load is this one, so results page,
547

547

00:23:22.060  -->  00:23:23.860
which is where we put the buttons into.
548

548

00:23:23.860  -->  00:23:26.513
And so that's where we have to put our event handler.
549

549

00:23:28.159  -->  00:23:33.159
So elements dot search res, and it is here, pages.
550

550

00:23:35.860  -->  00:23:37.823
Add event listener on click.
551

551

00:23:39.269  -->  00:23:42.950
We want to have access to the event
552

552

00:23:42.950  -->  00:23:45.100
so that we can then use the target property,
553

553

00:23:45.100  -->  00:23:46.410
remember that one.
554

554

00:23:46.410  -->  00:23:51.410
And so that's actually log it to the console.
555

555

00:23:51.490  -->  00:23:54.390
So e dot target.
556

556

00:23:54.390  -->  00:23:57.680
So e is our event here, our click event in this case,
557

557

00:23:57.680  -->  00:23:59.350
and then the target.
558

558

00:23:59.350  -->  00:24:02.240
So exactly where this click happened.
559

559

00:24:02.240  -->  00:24:04.450
Now in order to be able to view two buttons
560

560

00:24:04.450  -->  00:24:05.300
and not just one,
561

561

00:24:05.300  -->  00:24:06.470
let's go to page two,
562

562

00:24:06.470  -->  00:24:09.320
because then we should have the previous and next button.
563

563

00:24:11.563  -->  00:24:13.543
So let's test it out.
564

564

00:24:15.530  -->  00:24:18.450
And indeed, we have page one and page three.
565

565

00:24:18.450  -->  00:24:20.683
And so let's now click on the buttons.
566

566

00:24:21.690  -->  00:24:24.110
And you see that here now we have the element
567

567

00:24:24.110  -->  00:24:25.299
where the click happened.
568

568

00:24:25.299  -->  00:24:29.260
Now I clicked here on this text.
569

569

00:24:29.260  -->  00:24:32.040
Now watch what happens when I click on the icon.
570

570

00:24:32.040  -->  00:24:33.990
You see that we then get the icon.
571

571

00:24:33.990  -->  00:24:36.420
And if I click here outside (mumbles) on the button,
572

572

00:24:36.420  -->  00:24:38.430
well then we get something else.
573

573

00:24:38.430  -->  00:24:41.200
And so how do we actually now define
574

574

00:24:41.200  -->  00:24:43.760
where we want the click to happen?
575

575

00:24:43.760  -->  00:24:46.170
Or in other words, how do I say that I want something
576

576

00:24:46.170  -->  00:24:48.540
to happen when I click on this button
577

577

00:24:48.540  -->  00:24:51.110
when in reality I'm clicking at this text
578

578

00:24:51.110  -->  00:24:52.500
or maybe even at this icon
579

579

00:24:52.500  -->  00:24:54.880
and not really the button element itself
580

580

00:24:54.880  -->  00:24:55.810
that I'm looking for?
581

581

00:24:55.810  -->  00:24:57.820
So how can we do that?
582

582

00:24:57.820  -->  00:25:00.998
Well we actually have something that helps us in JavaScript
583

583

00:25:00.998  -->  00:25:04.090
for dealing with just that.
584

584

00:25:04.090  -->  00:25:06.113
And that is the closest method.
585

585

00:25:07.210  -->  00:25:09.947
So again, let me try to show that to you.
586

586

00:25:15.303  -->  00:25:17.070
So it works on all dumb elements,
587

587

00:25:17.070  -->  00:25:19.580
and you see that closest returns to closest ancestor
588

588

00:25:19.580  -->  00:25:21.900
of the current element which matches the selector
589

589

00:25:21.900  -->  00:25:24.330
given in the parameter.
590

590

00:25:24.330  -->  00:25:25.163
Okay?
591

591

00:25:25.163  -->  00:25:27.123
So let's see that in action.
592

592

00:25:28.650  -->  00:25:30.950
I'm going to create a new variable here actually.
593

593

00:25:30.950  -->  00:25:32.703
So let's say button.
594

594

00:25:34.800  -->  00:25:36.490
So e the target.
595

595

00:25:36.490  -->  00:25:37.783
And now the closest.
596

596

00:25:40.260  -->  00:25:42.730
And so now in here we put a selector.
597

597

00:25:42.730  -->  00:25:45.810
And the selector that we want is the class of the button
598

598

00:25:45.810  -->  00:25:47.010
that we're actually looking for.
599

599

00:25:47.010  -->  00:25:48.060
So let's go back here.
600

600

00:25:48.060  -->  00:25:51.120
And so what we're looking for, and well now it's gone.
601

601

00:25:51.120  -->  00:25:53.070
So I cannot show it to you anymore.
602

602

00:25:53.070  -->  00:25:54.987
But the button that we're looking for
603

603

00:25:54.987  -->  00:25:58.300
is the one with the button inline class.
604

604

00:25:58.300  -->  00:25:59.133
Right?
605

605

00:25:59.133  -->  00:26:00.770
So I showed you that we sometimes click
606

606

00:26:00.770  -->  00:26:04.090
on this svg here or on this span,
607

607

00:26:04.090  -->  00:26:05.620
but really we're only interested
608

608

00:26:05.620  -->  00:26:07.970
in clicks to the button itself.
609

609

00:26:07.970  -->  00:26:11.100
And so we can now use the closest method and say
610

610

00:26:11.100  -->  00:26:12.980
that we are only interested in the ones
611

611

00:26:12.980  -->  00:26:14.793
with the class of button inline.
612

612

00:26:18.040  -->  00:26:19.010
Okay?
613

613

00:26:19.010  -->  00:26:21.470
And now I should actually go ahead and save this
614

614

00:26:21.470  -->  00:26:25.320
in the element strings here, so put it in here.
615

615

00:26:25.320  -->  00:26:26.300
But I'm not going to do that,
616

616

00:26:26.300  -->  00:26:28.640
because then I would have to do the same here
617

617

00:26:28.640  -->  00:26:32.270
for this one and for this one here as well.
618

618

00:26:32.270  -->  00:26:35.890
And so right now I'm not going to go down that road.
619

619

00:26:35.890  -->  00:26:37.173
Okay?
620

620

00:26:37.173  -->  00:26:38.440
So let's keep it simple here,
621

621

00:26:38.440  -->  00:26:41.330
and right now I'm simply going to lock the button.
622

622

00:26:41.330  -->  00:26:44.028
So what's going to happen here is that now,
623

623

00:26:44.028  -->  00:26:45.823
well let me show it to you.
624

624

00:26:51.620  -->  00:26:53.810
So what happens now is that I still click here
625

625

00:26:53.810  -->  00:26:56.480
on the span or on the icon like this,
626

626

00:26:56.480  -->  00:26:58.820
but it will then find the closest element
627

627

00:26:58.820  -->  00:27:01.060
with the button inline class,
628

628

00:27:01.060  -->  00:27:03.350
so this exact button that we're looking for.
629

629

00:27:03.350  -->  00:27:05.040
So no matter where I click now,
630

630

00:27:05.040  -->  00:27:07.950
we only get the button which is exactly
631

631

00:27:07.950  -->  00:27:10.220
where this data here is located.
632

632

00:27:10.220  -->  00:27:11.053
Okay?
633

633

00:27:11.053  -->  00:27:13.410
So what we're interested for is the button
634

634

00:27:13.410  -->  00:27:15.480
where we have stored the page number.
635

635

00:27:15.480  -->  00:27:17.070
So this one here is page three,
636

636

00:27:17.070  -->  00:27:19.600
and this one will of course show page one.
637

637

00:27:19.600  -->  00:27:20.684
Okay?
638

638

00:27:20.684  -->  00:27:21.810
And so that's the number that we're interested for,
639

639

00:27:21.810  -->  00:27:23.730
and therefore we really need
640

640

00:27:23.730  -->  00:27:25.960
to just select this exact element
641

641

00:27:25.960  -->  00:27:28.984
and not any of their child elements.
642

642

00:27:28.984  -->  00:27:30.531
Okay?
643

643

00:27:30.531  -->  00:27:34.207
So let's now say if there is a button,
644

644

00:27:38.120  -->  00:27:41.123
then let's read the go to page.
645

645

00:27:45.050  -->  00:27:46.369
Okay?
646

646

00:27:46.369  -->  00:27:47.710
And so now we're actually going to read out the data
647

647

00:27:47.710  -->  00:27:51.030
that is stored in that data attribute that I showed you.
648

648

00:27:51.030  -->  00:27:51.950
And it is so useful,
649

649

00:27:51.950  -->  00:27:53.300
because all we have to do now
650

650

00:27:53.300  -->  00:27:58.300
is to say button dot data set dot go to,
651

651

00:28:00.100  -->  00:28:01.590
and that's it.
652

652

00:28:01.590  -->  00:28:03.093
Let's log it to the console,
653

653

00:28:10.030  -->  00:28:11.563
and test it out of course.
654

654

00:28:16.230  -->  00:28:20.040
And you see it shows me one, and here three,
655

655

00:28:20.040  -->  00:28:22.216
and that is again of course
656

656

00:28:22.216  -->  00:28:26.180
because it saved inside of this attribute.
657

657

00:28:26.180  -->  00:28:28.270
So we can read out this data attribute
658

658

00:28:28.270  -->  00:28:30.990
whenever we prefix an attribute with data,
659

659

00:28:30.990  -->  00:28:32.380
then this variable here gets stored
660

660

00:28:32.380  -->  00:28:35.650
in a data set dot go to here in this case.
661

661

00:28:35.650  -->  00:28:36.896
Okay?
662

662

00:28:36.896  -->  00:28:37.729
And if it was something else,
663

663

00:28:37.729  -->  00:28:39.660
then of course, for example if I had page here,
664

664

00:28:39.660  -->  00:28:42.210
then it would be data set dot page here.
665

665

00:28:42.210  -->  00:28:43.590
Okay?
666

666

00:28:43.590  -->  00:28:47.160
And so this is very handy way of having access to data.
667

667

00:28:47.160  -->  00:28:50.290
Now you saw here maybe that this is not really a number.
668

668

00:28:50.290  -->  00:28:51.850
It's really a string.
669

669

00:28:51.850  -->  00:28:53.290
'Cause a number looks like this.
670

670

00:28:53.290  -->  00:28:55.070
So it's in a console it's showing blue.
671

671

00:28:55.070  -->  00:28:57.120
And so we have a string here really.
672

672

00:28:57.120  -->  00:29:00.660
And so we still have to convert it to a number.
673

673

00:29:00.660  -->  00:29:04.660
So we can use parse int,
674

674

00:29:04.660  -->  00:29:07.930
so it will basically convert it to an integer,
675

675

00:29:07.930  -->  00:29:10.520
and we still have to specify the base of the number,
676

676

00:29:10.520  -->  00:29:11.400
which is 10 here.
677

677

00:29:11.400  -->  00:29:12.906
Right?
678

678

00:29:12.906  -->  00:29:14.320
So 10 just means that we're on base 10,
679

679

00:29:14.320  -->  00:29:16.320
so from zero to nine.
680

680

00:29:16.320  -->  00:29:18.370
For example, if I were to put two,
681

681

00:29:18.370  -->  00:29:19.630
then we were in binary,
682

682

00:29:19.630  -->  00:29:22.110
and so we will only use the zero and the one.
683

683

00:29:22.110  -->  00:29:23.840
But that's not the case, we are on base 10,
684

684

00:29:23.840  -->  00:29:26.290
so let's just keep it like that.
685

685

00:29:26.290  -->  00:29:27.123
Okay.
686

686

00:29:27.123  -->  00:29:31.454
Now all we need to do is to use our render results method
687

687

00:29:31.454  -->  00:29:32.940
or function.
688

688

00:29:32.940  -->  00:29:35.660
Now all we have to do is to call it just like we did before
689

689

00:29:35.660  -->  00:29:38.020
but specifying the page,
690

690

00:29:38.020  -->  00:29:40.068
which by default should be one of course.
691

691

00:29:40.068  -->  00:29:42.752
And so let's do that.
692

692

00:29:42.752  -->  00:29:45.100
So we used it before here to render.
693

693

00:29:45.100  -->  00:29:46.840
And here we didn't pass any number,
694

694

00:29:46.840  -->  00:29:48.750
because we could simply pass a number one,
695

695

00:29:48.750  -->  00:29:51.703
but that's the default anyway, so let's not do that.
696

696

00:29:53.270  -->  00:29:55.470
So all I'm gonna do is to just copy it here.
697

697

00:29:57.540  -->  00:29:59.420
I'm still leaving the go to page down there
698

698

00:29:59.420  -->  00:30:00.770
so we can check it out.
699

699

00:30:00.770  -->  00:30:04.563
And then all we need to pass in is the go to page.
700

700

00:30:06.480  -->  00:30:08.030
And that's it.
701

701

00:30:08.030  -->  00:30:09.630
That's all we need to do really.
702

702

00:30:11.980  -->  00:30:14.801
So I hope this is making a ton of sense to you,
703

703

00:30:14.801  -->  00:30:16.930
and I'm sure it is.
704

704

00:30:16.930  -->  00:30:19.230
So let's now click on two,
705

705

00:30:19.230  -->  00:30:23.090
and it will add these new down here below.
706

706

00:30:23.090  -->  00:30:23.923
Okay?
707

707

00:30:23.923  -->  00:30:25.690
We also have all of this here,
708

708

00:30:25.690  -->  00:30:27.430
so that's not ideal of course.
709

709

00:30:27.430  -->  00:30:29.820
So whenever we add some more results here,
710

710

00:30:29.820  -->  00:30:33.260
we first should actually clean out the list
711

711

00:30:33.260  -->  00:30:35.615
before we keep adding into it of course.
712

712

00:30:35.615  -->  00:30:38.440
So we have render results,
713

713

00:30:38.440  -->  00:30:42.142
but before we do that, let's actually use clear results.
714

714

00:30:42.142  -->  00:30:46.023
And we did that before here again, so clear the results.
715

715

00:30:46.900  -->  00:30:48.730
And so now it's becoming in really handy
716

716

00:30:48.730  -->  00:30:50.270
that we have it all nicely separated
717

717

00:30:50.270  -->  00:30:52.380
into our different functions and modules,
718

718

00:30:52.380  -->  00:30:54.120
because we are of course
719

719

00:30:54.120  -->  00:30:56.020
reusing all of this code from before.
720

720

00:30:56.020  -->  00:30:58.350
And so we just have to do clear results
721

721

00:30:58.350  -->  00:30:59.850
and render results again here.
722

722

00:31:02.010  -->  00:31:03.710
So let's get rid of this one here.
723

723

00:31:03.710  -->  00:31:06.290
And the other problem was with these buttons.
724

724

00:31:06.290  -->  00:31:10.010
So we should actually also clear out the buttons.
725

725

00:31:10.010  -->  00:31:10.843
Okay?
726

726

00:31:10.843  -->  00:31:12.900
So let's do that and then clear results,
727

727

00:31:12.900  -->  00:31:15.233
and it should be here.
728

728

00:31:16.910  -->  00:31:18.440
So clear results,
729

729

00:31:18.440  -->  00:31:23.440
and so we also have to say search res pages dot inner HTML
730

730

00:31:26.990  -->  00:31:29.193
should be empty as well.
731

731

00:31:31.738  -->  00:31:33.343
So try it out one more time.
732

732

00:31:35.450  -->  00:31:39.490
So that is page one, and here we go.
733

733

00:31:39.490  -->  00:31:42.100
Page number two with the next results,
734

734

00:31:42.100  -->  00:31:47.060
and finally, page number three, and great, that's awesome.
735

735

00:31:47.060  -->  00:31:48.560
So it's really working.
736

736

00:31:48.560  -->  00:31:50.080
Also the numbers here are correct.
737

737

00:31:50.080  -->  00:31:52.533
What's just not correct is these,
738

738

00:31:52.533  -->  00:31:54.437
this should actually be on this left side,
739

739

00:31:54.437  -->  00:31:55.870
and this here should be on the right side.
740

740

00:31:55.870  -->  00:31:58.090
So I'm not really sure why that is happening,
741

741

00:31:58.090  -->  00:31:59.890
but let's take care of that for a second.
742

742

00:31:59.890  -->  00:32:02.010
For now, let's just appreciate that it's really working.
743

743

00:32:02.010  -->  00:32:04.810
So it tells us to go back to page number two,
744

744

00:32:04.810  -->  00:32:06.544
because we are on page number three.
745

745

00:32:06.544  -->  00:32:08.590
Now we're on page number two,
746

746

00:32:08.590  -->  00:32:13.050
and so now it says go back to one or next to three.
747

747

00:32:13.050  -->  00:32:15.640
And then here we just have the forward button
748

748

00:32:15.640  -->  00:32:20.220
just as we said here in our render buttons code.
749

749

00:32:20.220  -->  00:32:21.490
So just as we did here.
750

750

00:32:21.490  -->  00:32:22.866
Right?
751

751

00:32:22.866  -->  00:32:24.800
And the problem with the text being on the wrong side
752

752

00:32:24.800  -->  00:32:26.340
is just because this one here
753

753

00:32:26.340  -->  00:32:30.033
should actually come before the icon.
754

754

00:32:31.360  -->  00:32:32.746
Okay?
755

755

00:32:32.746  -->  00:32:33.579
And so now everything will be perfect
756

756

00:32:33.579  -->  00:32:38.579
just one last time before we can finish with this video,
757

757

00:32:38.720  -->  00:32:39.963
and so now it works.
758

758

00:32:41.550  -->  00:32:42.890
So perfect.
759

759

00:32:42.890  -->  00:32:45.700
So I hope that wasn't all too complicated for you,
760

760

00:32:45.700  -->  00:32:47.340
and of course when you're doing your own app,
761

761

00:32:47.340  -->  00:32:50.100
you're not going to implement it in the exact same way.
762

762

00:32:50.100  -->  00:32:52.118
And so all I want you to really understand
763

763

00:32:52.118  -->  00:32:55.660
is the entire logic behind this pagination.
764

764

00:32:55.660  -->  00:32:58.502
So basically creating the start and the end numbers
765

765

00:32:58.502  -->  00:33:00.630
and then rendering the buttons here
766

766

00:33:00.630  -->  00:33:03.520
according to the page that we're currently on.
767

767

00:33:03.520  -->  00:33:04.759
Okay?
768

768

00:33:04.759  -->  00:33:06.220
Also it's important to remember event delegation,
769

769

00:33:06.220  -->  00:33:09.300
which is something really important again in JavaScript.
770

770

00:33:09.300  -->  00:33:10.610
And we did that here again.
771

771

00:33:10.610  -->  00:33:12.190
We did it on other projects,
772

772

00:33:12.190  -->  00:33:17.190
but so now here we did it once more for you to remember it.
773

773

00:33:17.230  -->  00:33:18.519
Okay?
774

774

00:33:18.519  -->  00:33:19.541
Anyway, this was a huge lecture.
775

775

00:33:19.541  -->  00:33:22.330
Great to see that you're still with me here,
776

776

00:33:22.330  -->  00:33:23.870
and take a break now
777

777

00:33:23.870  -->  00:33:26.223
and then see you in a second in the next one.
