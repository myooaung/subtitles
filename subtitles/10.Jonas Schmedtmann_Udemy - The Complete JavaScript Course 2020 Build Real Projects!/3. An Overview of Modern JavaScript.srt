1
1

00:00:00,302  -->  00:00:03,430
<v Narrator>Now that we know what this project is all about</v>
2

2

00:00:03,430  -->  00:00:05,970
let's take a look at modern JavaScript.
3

3

00:00:05,970  -->  00:00:08,594
So the way we write JavaScript has changed tremendously
4

4

00:00:08,594  -->  00:00:10,115
during the last couple of years.
5

5

00:00:10,115  -->  00:00:13,524
Today, we compile ES6, and even newer JavaScript versions,
6

6

00:00:13,524  -->  00:00:14,640
down to ES5.
7

7

00:00:14,640  -->  00:00:16,815
We use module bundlers, task runners,
8

8

00:00:16,815  -->  00:00:19,134
external packages, and other dev tools.
9

9

00:00:19,134  -->  00:00:21,230
So, up until this point of the course,
10

10

00:00:21,230  -->  00:00:23,140
we have always coded JavaScript
11

11

00:00:23,140  -->  00:00:25,657
in the kind of old school way, okay?
12

12

00:00:25,657  -->  00:00:27,790
But that's about to change with this project
13

13

00:00:27,790  -->  00:00:29,616
where we're finally gonna use JavaScript
14

14

00:00:29,616  -->  00:00:31,821
the more modern, real world way.
15

15

00:00:31,821  -->  00:00:34,866
Now, modern JavaScript is not so much
16

16

00:00:34,866  -->  00:00:36,331
about the language itself.
17

17

00:00:36,331  -->  00:00:39,410
But it's more about the whole JavaScript ecosystem,
18

18

00:00:39,410  -->  00:00:41,971
and environment that we use to write it in, okay?
19

19

00:00:41,971  -->  00:00:44,000
And this one is important to understand.
20

20

00:00:44,000  -->  00:00:46,978
So, we still write the exact same JavaScript
21

21

00:00:46,978  -->  00:00:49,065
but we use it together with a set of tools
22

22

00:00:49,065  -->  00:00:51,460
that make it easier and better to work with.
23

23

00:00:51,460  -->  00:00:53,500
And the foundation of all these tools
24

24

00:00:53,500  -->  00:00:55,459
is the Node Js and NPM ecosystem
25

25

00:00:55,459  -->  00:00:59,110
Where we can find all kind of third party open source tools
26

26

00:00:59,110  -->  00:01:01,650
and libraries and frameworks needed
27

27

00:01:01,650  -->  00:01:03,560
for modern web development.
28

28

00:01:03,560  -->  00:01:04,957
And with libraries and frameworks
29

29

00:01:04,957  -->  00:01:06,902
that means stuff like Reactor, Angular,
30

30

00:01:06,902  -->  00:01:09,950
or libraries like Lodash, or even Jquery.
31

31

00:01:09,950  -->  00:01:12,062
Then, we also have development tools,
32

32

00:01:12,062  -->  00:01:13,442
like for task automations,
33

33

00:01:13,442  -->  00:01:15,180
automatic browser reloading,
34

34

00:01:15,180  -->  00:01:17,832
or to compile JavaScript down to ES5.
35

35

00:01:17,832  -->  00:01:20,685
Now, in order to use and share these packages,
36

36

00:01:20,685  -->  00:01:23,894
we need some kind of tool to install and to manage them.
37

37

00:01:23,894  -->  00:01:26,170
And that's where the node package manager,
38

38

00:01:26,170  -->  00:01:27,274
or NPM, comes in.
39

39

00:01:27,274  -->  00:01:30,497
So NPM is just a simple command line interface
40

40

00:01:30,497  -->  00:01:32,646
that allows us to do exactly that.
41

41

00:01:32,646  -->  00:01:35,551
Plus, NPM also allows us to write scripts
42

42

00:01:35,551  -->  00:01:39,360
to use our development tools, but more on that a bit later.
43

43

00:01:39,360  -->  00:01:41,280
Alright, so the first tool that we use
44

44

00:01:41,280  -->  00:01:42,795
in modern JavaScript is Babel.
45

45

00:01:42,795  -->  00:01:45,160
In order to convert cutting edge JavaScript
46

46

00:01:45,160  -->  00:01:47,488
like ES6, ES7, or even ES8,
47

47

00:01:47,488  -->  00:01:51,608
which together are simply called ESNext, back to ES5.
48

48

00:01:51,608  -->  00:01:54,919
So if all browsers are capable of understanding our code.
49

49

00:01:54,919  -->  00:01:57,891
In a couple of years, this might no longer be necessary
50

50

00:01:57,891  -->  00:02:00,130
but for now, this is an important step
51

51

00:02:00,130  -->  00:02:01,476
in our development process.
52

52

00:02:01,476  -->  00:02:04,167
Next up we want to use ES6 modules
53

53

00:02:04,167  -->  00:02:06,870
in order to make our code more modular
54

54

00:02:06,870  -->  00:02:08,630
and therefore, easier to maintain.
55

55

00:02:08,630  -->  00:02:10,648
By separating different parts of our amp
56

56

00:02:10,648  -->  00:02:12,078
into different files.
57

57

00:02:12,078  -->  00:02:14,882
And ES6 brought us exactly that possibility
58

58

00:02:14,882  -->  00:02:16,536
by implementing modules.
59

59

00:02:16,536  -->  00:02:19,492
Now the problem with these modules is that, right now,
60

60

00:02:19,492  -->  00:02:22,213
browsers can not really support this functionality yet.
61

61

00:02:22,213  -->  00:02:24,415
And so we have to bundle these modules together
62

62

00:02:24,415  -->  00:02:27,483
into a single file using something called a module bundler,
63

63

00:02:27,483  -->  00:02:30,657
and the most popular one out there is called Webpack.
64

64

00:02:30,657  -->  00:02:33,529
And so that's the one that we're gonna use in this project.
65

65

00:02:33,529  -->  00:02:36,222
Now webpack can actually do so much more
66

66

00:02:36,222  -->  00:02:37,853
than just bundling modules
67

67

00:02:37,853  -->  00:02:40,487
like codesplitting, loading menu types of assets
68

68

00:02:40,487  -->  00:02:43,911
like sas or images, decreasing our JavaScript bundle size
69

69

00:02:43,911  -->  00:02:46,106
using an algorithm called treeshaking
70

70

00:02:46,106  -->  00:02:47,678
and much, much more.
71

71

00:02:47,678  -->  00:02:50,447
But in this project, we're not gonna do any of that.
72

72

00:02:50,447  -->  00:02:51,870
We just want to use Webpack
73

73

00:02:51,870  -->  00:02:53,525
to bundle all the modules together.
74

74

00:02:53,525  -->  00:02:57,217
And there are other, way more simple ways to do only this,
75

75

00:02:57,217  -->  00:02:59,745
but I wanted to show you Webpack because, once again,
76

76

00:02:59,745  -->  00:03:02,205
it's really the most popular choice out there.
77

77

00:03:02,205  -->  00:03:05,836
So Babel and Webpack are the main tools that we're gonna use
78

78

00:03:05,836  -->  00:03:08,424
and as I mentioned, these are NPM packages.
79

79

00:03:08,424  -->  00:03:10,232
And the easiest way to run these packages
80

80

00:03:10,232  -->  00:03:13,148
is by using something called NPM scripts
81

81

00:03:13,148  -->  00:03:15,298
which allows us to run all these tools
82

82

00:03:15,298  -->  00:03:19,312
automatically and very easily in our command line interface.
83

83

00:03:19,312  -->  00:03:20,145
Alright?
84

84

00:03:20,145  -->  00:03:22,230
And that's actually all we need
85

85

00:03:22,230  -->  00:03:24,391
in order to build our modern JavaScript setup.
86

86

00:03:24,391  -->  00:03:26,421
So, now that we know all about it,
87

87

00:03:26,421  -->  00:03:28,501
let's set up our development workflow
88

88

00:03:28,501  -->  00:03:30,400
over the next couple of lectures
89

89

00:03:30,400  -->  00:03:33,203
with NPM packages, Webpack, and Babel.
