1
1

00:00:00,795  -->  00:00:03,068
<v Narrator>Alright, and now as the final step,</v>
2

2

00:00:03,068  -->  00:00:05,968
let's integrate Babel into our workflow.
3

3

00:00:05,968  -->  00:00:07,744
In order to make it really complete and ready
4

4

00:00:07,744  -->  00:00:10,887
for us to start working on the project.
5

5

00:00:10,887  -->  00:00:12,769
So, as you see from the website,
6

6

00:00:12,769  -->  00:00:15,335
Babel is a JavaScript compiler.
7

7

00:00:15,335  -->  00:00:18,487
In order to use next generation JavaScript, today.
8

8

00:00:18,487  -->  00:00:22,206
And it can be rather complex and confusing to set it up,
9

9

00:00:22,206  -->  00:00:24,289
but we're gonna use a very straightforward
10

10

00:00:24,289  -->  00:00:26,080
configuration in order to do it.
11

11

00:00:26,080  -->  00:00:28,357
And it's all here in the commendations and you can read
12

12

00:00:28,357  -->  00:00:30,690
through it if you want. But of course,
13

13

00:00:30,690  -->  00:00:32,781
I'm going to show you now, again,
14

14

00:00:32,781  -->  00:00:36,234
the most straightforward way that there is to set up Babel.
15

15

00:00:36,234  -->  00:00:39,365
So, first off, in order to make Babel work, we need again,
16

16

00:00:39,365  -->  00:00:41,922
to download a couple of packages.
17

17

00:00:41,922  -->  00:00:46,574
So, let's fire up our terminal. Come into this one,
18

18

00:00:46,574  -->  00:00:49,931
and let's clear it up. And so the packages that we need to
19

19

00:00:49,931  -->  00:00:54,303
install are, so again, npm install.
20

20

00:00:54,303  -->  00:00:57,462
And the first one is babel core,
21

21

00:00:57,462  -->  00:01:01,029
which contains the core functionality of the compiler.
22

22

00:01:01,029  -->  00:01:03,578
The next one is babel present-env. And now we are doing
23

23

00:01:03,578  -->  00:01:06,227
something that we didn't do before which is to install
24

24

00:01:06,227  -->  00:01:09,219
many packages with the same line. And it's totally possible.
25

25

00:01:09,219  -->  00:01:12,637
So we can install multiple packages in the same command.
26

26

00:01:12,637  -->  00:01:15,235
So we have babel core and now the next one, if you want,
27

27

00:01:15,235  -->  00:01:19,227
is babel preset env,
28

28

00:01:19,227  -->  00:01:20,618
and this is a babel preset
29

29

00:01:20,618  -->  00:01:23,757
that will take care, that all the modern JavaScript features
30

30

00:01:23,757  -->  00:01:26,276
are converted back to ES5. And a bit more
31

31

00:01:26,276  -->  00:01:28,859
on this one a bit later, again.
32

32

00:01:29,716  -->  00:01:32,549
And finally, we need babel loader.
33

33

00:01:34,554  -->  00:01:38,248
And this one is needed for Webpack in order to actually load
34

34

00:01:38,248  -->  00:01:42,998
Babel files. Okay? But again more on loaders a bit later.
35

35

00:01:44,240  -->  00:01:47,040
Now, finally, give it a save-dev here. And now we are
36

36

00:01:47,040  -->  00:01:51,464
going to install all these three packages at the same time.
37

37

00:01:51,464  -->  00:01:55,241
So, let's check it out here in the package.json file.
38

38

00:01:55,241  -->  00:02:00,149
And indeed, here we have babel core loader and preset-env.
39

39

00:02:00,149  -->  00:02:02,124
Okay, and now we need to learn about the
40

40

00:02:02,124  -->  00:02:04,707
concept of loaders in Webpack.
41

41

00:02:04,707  -->  00:02:08,174
So, loaders in Webpack allow us to import or to load
42

42

00:02:08,174  -->  00:02:10,823
all kinds of different files. And more importantly,
43

43

00:02:10,823  -->  00:02:14,542
to also process them. Like converting SASS to CSS Code or
44

44

00:02:14,542  -->  00:02:17,537
covert ES6 code to ES5 JavaScript.
45

45

00:02:17,537  -->  00:02:20,694
Which is exactly what we are gonna do now. Right?
46

46

00:02:20,694  -->  00:02:23,544
And so, for that, we need the Babel loader because
47

47

00:02:23,544  -->  00:02:27,633
Babel is the one that will convert this ES6 back to ES5.
48

48

00:02:27,633  -->  00:02:31,313
And again, the syntax for this is a bit weird.
49

49

00:02:31,313  -->  00:02:35,982
So, how it works, is we use module. Pass in an object,
50

50

00:02:35,982  -->  00:02:40,097
and then in there, we need to specify the rules property.
51

51

00:02:40,097  -->  00:02:42,578
And rules then receives an array of all of the
52

52

00:02:42,578  -->  00:02:44,477
loaders that we want to use.
53

53

00:02:44,477  -->  00:02:48,210
And for each loader, again, we need an object, right?
54

54

00:02:48,210  -->  00:02:52,304
So, again this is all a bit weird and confusing,
55

55

00:02:52,304  -->  00:02:54,107
but you just need to set this up once.
56

56

00:02:54,107  -->  00:02:58,549
So once set up it will keep working forever basically right?
57

57

00:02:58,549  -->  00:03:02,883
So, for each of the loaders, we need the test property.
58

58

00:03:02,883  -->  00:03:04,180
And for this one we use something called
59

59

00:03:04,180  -->  00:03:06,292
a regular expression. And we are gonna talk
60

60

00:03:06,292  -->  00:03:08,625
a bit more about this later.
61

61

00:03:09,838  -->  00:03:12,753
Okay. So, in this regular expression, what we want to say
62

62

00:03:12,753  -->  00:03:16,359
is that we want to test for all the JavaScript files.
63

63

00:03:16,359  -->  00:03:20,837
And the JavaScript files are the ones that end with .js.
64

64

00:03:20,837  -->  00:03:25,837
So, we want .js at the end, and that's what this here means.
65

65

00:03:25,896  -->  00:03:29,797
So this test here will basically look for all of the files
66

66

00:03:29,797  -->  00:03:33,630
and test if they end in .js.
67

67

00:03:33,630  -->  00:03:35,602
So that's what this regular expression here means.
68

68

00:03:35,602  -->  00:03:37,794
Okay? So, all of the JavaScript files
69

69

00:03:37,794  -->  00:03:40,754
will use the babel loader.
70

70

00:03:40,754  -->  00:03:42,941
And so we use the use.
71

71

00:03:42,941  -->  00:03:46,313
And then again we pass in an object here and then finally
72

72

00:03:46,313  -->  00:03:51,313
we use the loader property and then we can say babel loader.
73

73

00:03:54,540  -->  00:03:58,182
So, that is really a lot here to write and,
74

74

00:03:58,182  -->  00:04:00,702
and again it looks really complex here with all of these
75

75

00:04:00,702  -->  00:04:04,501
modules, rules, test and then use and finally the loader.
76

76

00:04:04,501  -->  00:04:07,269
And a lot of newbies are confused by all of this,
77

77

00:04:07,269  -->  00:04:11,317
but really I don't think it's such a big problem, okay?
78

78

00:04:11,317  -->  00:04:12,150
So, babel loader,
79

79

00:04:12,150  -->  00:04:14,608
this is the package that we installed before.
80

80

00:04:14,608  -->  00:04:18,917
So, remember it's here in our package.json,
81

81

00:04:18,917  -->  00:04:22,437
so, this babel loader package is what allows us to use this
82

82

00:04:22,437  -->  00:04:24,776
here, then, in webpack. Okay?
83

83

00:04:24,776  -->  00:04:27,265
And we can actually add something more here to this rule,
84

84

00:04:27,265  -->  00:04:28,932
which is an exclude.
85

85

00:04:32,657  -->  00:04:35,453
And with exclude we say that we want to exclude everything
86

86

00:04:35,453  -->  00:04:38,741
that's in a node modules folder, okay?
87

87

00:04:38,741  -->  00:04:42,410
Because if we wouldn't do this, than Babel would apply
88

88

00:04:42,410  -->  00:04:44,675
to all of the thousands of JavaScript files
89

89

00:04:44,675  -->  00:04:47,446
that are inside of this folder here.
90

90

00:04:47,446  -->  00:04:49,001
And we of course don't want that to happen.
91

91

00:04:49,001  -->  00:04:50,789
We just want it to do it in our own project,
92

92

00:04:50,789  -->  00:04:53,063
so we can exclude this entire folder here.
93

93

00:04:53,063  -->  00:04:56,240
And again, we use it as a regular expression here with these
94

94

00:04:56,240  -->  00:05:00,243
two slashes at the beginning and at the end. Okay?
95

95

00:05:00,243  -->  00:05:04,030
So again, what this rule does here is it tests for this
96

96

00:05:04,030  -->  00:05:07,669
.js at the end which this one here means. And if it is a
97

97

00:05:07,669  -->  00:05:12,327
JavaScript file than it will apply the babel loader, loader.
98

98

00:05:12,327  -->  00:05:15,349
Okay? And so that's how we use Babel step one.
99

99

00:05:15,349  -->  00:05:18,270
And step two is that we now actually also need
100

100

00:05:18,270  -->  00:05:20,500
a babel config file.
101

101

00:05:20,500  -->  00:05:23,141
So, not only for webpack we need this config file,
102

102

00:05:23,141  -->  00:05:25,061
but also for Babel.
103

103

00:05:25,061  -->  00:05:26,892
So, let's create a new file here.
104

104

00:05:26,892  -->  00:05:30,896
And the one for Babel is usually called babelrc.
105

105

00:05:30,896  -->  00:05:35,266
So, just .babelrc.
106

106

00:05:35,266  -->  00:05:39,158
And once again VS Code here actually already recognizes
107

107

00:05:39,158  -->  00:05:41,797
it here as a Babel six file
108

108

00:05:41,797  -->  00:05:45,943
and so it puts the six here as the file icon.
109

109

00:05:45,943  -->  00:05:48,779
So, in here all we pass is just this object.
110

110

00:05:48,779  -->  00:05:51,220
And so this one is different from Webpack
111

111

00:05:51,220  -->  00:05:52,875
which is a real JavaScript file.
112

112

00:05:52,875  -->  00:05:55,474
This one here is just a dot file. Okay?
113

113

00:05:55,474  -->  00:05:59,755
So we have this object and then we pass preset
114

114

00:05:59,755  -->  00:06:02,422
and into preset we pass an array
115

115

00:06:03,288  -->  00:06:06,435
and say that the preset that we want is called env.
116

116

00:06:06,435  -->  00:06:07,615
Now, a preset here
117

117

00:06:07,615  -->  00:06:10,904
is a collection of code transform plug-ins,
118

118

00:06:10,904  -->  00:06:14,351
which are like the pieces of code that actually apply
119

119

00:06:14,351  -->  00:06:17,230
the actual transformations to our code. Okay?
120

120

00:06:17,230  -->  00:06:19,821
And the one that we select here is the env.
121

121

00:06:19,821  -->  00:06:21,238
which stands for environment.
122

122

00:06:21,238  -->  00:06:25,780
And we actually installed this here before, as a plug-in.
123

123

00:06:25,780  -->  00:06:30,780
Right? As a package, sorry. So the babel preset environment.
124

124

00:06:31,205  -->  00:06:33,259
Okay? And so now in the config file,
125

125

00:06:33,259  -->  00:06:34,886
that is exactly the one that we use.
126

126

00:06:34,886  -->  00:06:37,309
So preset, environment.
127

127

00:06:37,309  -->  00:06:39,554
So we select the preset and say that the
128

128

00:06:39,554  -->  00:06:41,997
one that we want is the environment.
129

129

00:06:41,997  -->  00:06:43,495
So the one based on the environment.
130

130

00:06:43,495  -->  00:06:46,147
And now we can actually specify the environment
131

131

00:06:46,147  -->  00:06:47,833
that we want to target, okay?
132

132

00:06:47,833  -->  00:06:51,439
And by environment, I mean like the browsers.
133

133

00:06:51,439  -->  00:06:54,453
So, we can do it like this.
134

134

00:06:54,453  -->  00:06:55,768
Write target.
135

135

00:06:55,768  -->  00:06:59,341
And actually this needs to be in quotes, like this.
136

136

00:06:59,341  -->  00:07:02,845
And then we pass in another object and so once more,
137

137

00:07:02,845  -->  00:07:06,531
this is really confusing, you know.
138

138

00:07:06,531  -->  00:07:09,090
Okay, so browsers.
139

139

00:07:09,090  -->  00:07:11,536
And now, finally we just pass in an array
140

140

00:07:11,536  -->  00:07:15,461
saying which browsers we want to target. Okay?
141

141

00:07:15,461  -->  00:07:18,055
So in here we can now say stuff like,
142

142

00:07:18,055  -->  00:07:19,972
the last five versions.
143

143

00:07:21,573  -->  00:07:22,531
And what this will do
144

144

00:07:22,531  -->  00:07:25,523
is that Babel automatically figures out which ES6 features
145

145

00:07:25,523  -->  00:07:28,242
it actually needs to convert in order to work
146

146

00:07:28,242  -->  00:07:31,898
on the last five versions of all the browsers. Okay?
147

147

00:07:31,898  -->  00:07:34,741
And so that is what it means with environment.
148

148

00:07:34,741  -->  00:07:37,182
So we say which environment we want it to work,
149

149

00:07:37,182  -->  00:07:39,939
and then Babel automatically figures it out.
150

150

00:07:39,939  -->  00:07:42,430
There are of course other presets we could use,
151

151

00:07:42,430  -->  00:07:44,515
but then we would like manually have to say
152

152

00:07:44,515  -->  00:07:47,457
what we want to convert and what not. And with this preset,
153

153

00:07:47,457  -->  00:07:49,610
well, it all just happens automatically.
154

154

00:07:49,610  -->  00:07:52,364
So we can say something like last five versions,
155

155

00:07:52,364  -->  00:07:54,520
we can say two or ten or whatever.
156

156

00:07:54,520  -->  00:07:58,103
And we can also say something like we want,
157

157

00:07:59,182  -->  00:08:03,087
at least the internet explorer more than eight. Okay?
158

158

00:08:03,087  -->  00:08:04,871
And we can add more stuff to this
159

159

00:08:04,871  -->  00:08:07,798
and it can find more examples on the documentations of Babel
160

160

00:08:07,798  -->  00:08:10,843
but I guess for now, this is enough.
161

161

00:08:10,843  -->  00:08:13,882
So again we say that the preset should be based on
162

162

00:08:13,882  -->  00:08:16,493
the environment and that we want to target the browsers,
163

163

00:08:16,493  -->  00:08:19,730
the last five versions and internet explorer greater or
164

164

00:08:19,730  -->  00:08:21,959
equal to version eight. Okay?
165

165

00:08:21,959  -->  00:08:26,175
Give it a save, close it up and we're good to go.
166

166

00:08:26,175  -->  00:08:30,189
So, right now ES6 or even ES7, ES8 or ES Next,
167

167

00:08:30,189  -->  00:08:33,182
so all the future versions of ES, so of JavaScript,
168

168

00:08:33,182  -->  00:08:36,483
will be converted back to ES5.
169

169

00:08:36,483  -->  00:08:39,606
Now, there are some things that we cannot really convert
170

170

00:08:39,606  -->  00:08:41,550
because they simply were not present
171

171

00:08:41,550  -->  00:08:43,333
in the ES5 version of the language.
172

172

00:08:43,333  -->  00:08:46,410
And so there is no way that we can simply convert them
173

173

00:08:46,410  -->  00:08:51,081
back from ES6 to ES5. And so these need to be pollyfilled.
174

174

00:08:51,081  -->  00:08:52,945
And I'm talking about things like promises
175

175

00:08:52,945  -->  00:08:55,092
or methods like array.from.
176

176

00:08:55,092  -->  00:08:58,453
So stuff that just were not present in ES5
177

177

00:08:58,453  -->  00:09:01,649
and so we cannot really convert them back, okay?
178

178

00:09:01,649  -->  00:09:03,636
And so we need to polyfill them.
179

179

00:09:03,636  -->  00:09:06,516
Which basically adds this to our code.
180

180

00:09:06,516  -->  00:09:08,350
So, the promise object for example
181

181

00:09:08,350  -->  00:09:10,013
is not present in ES5, right?
182

182

00:09:10,013  -->  00:09:13,745
But we can write some ES5 code that basically implements
183

183

00:09:13,745  -->  00:09:17,125
the promise in ES5 so that we can then use it in our code.
184

184

00:09:17,125  -->  00:09:21,454
Okay? And so that is exactly what a polyfill does. So.
185

185

00:09:21,454  -->  00:09:22,832
How do we use a polyfill?
186

186

00:09:22,832  -->  00:09:25,897
We need to install another package. Okay?
187

187

00:09:25,897  -->  00:09:27,230
So npm, install,
188

188

00:09:28,846  -->  00:09:29,846
babel,
189

189

00:09:30,715  -->  00:09:31,585
polyfill.
190

190

00:09:31,585  -->  00:09:33,657
Now this code is actually code that will be
191

191

00:09:33,657  -->  00:09:36,742
in our final code. So as I've explained,
192

192

00:09:36,742  -->  00:09:41,163
this will basically implement like a promise in ES5.
193

193

00:09:41,163  -->  00:09:44,204
And so this is not really a development tool,
194

194

00:09:44,204  -->  00:09:46,111
but it is really code that is going to go
195

195

00:09:46,111  -->  00:09:47,853
into our final bundle, right?
196

196

00:09:47,853  -->  00:09:50,243
And so this is not a devDependency,
197

197

00:09:50,243  -->  00:09:52,842
but it's a real dependency. As I like to call it.
198

198

00:09:52,842  -->  00:09:57,772
And so, we just use save and not savedev. Alright?
199

199

00:09:57,772  -->  00:10:00,264
And it installs as you can see down here.
200

200

00:10:00,264  -->  00:10:03,263
Now all we have to do is to add it in our webpack config.
201

201

00:10:03,263  -->  00:10:07,980
And where we do it is in our entry point.
202

202

00:10:07,980  -->  00:10:09,902
So, I said before that in the beginning
203

203

00:10:09,902  -->  00:10:12,293
we just had one entry point, but there can be multiple.
204

204

00:10:12,293  -->  00:10:13,913
And now we actually will have multiple.
205

205

00:10:13,913  -->  00:10:16,510
And so now we pass in an array.
206

206

00:10:16,510  -->  00:10:19,270
So let's open it and close it here.
207

207

00:10:19,270  -->  00:10:22,155
And so our entry points are now this polyfill that we just
208

208

00:10:22,155  -->  00:10:26,374
installed and then our original entry point. Okay?
209

209

00:10:26,374  -->  00:10:28,124
So we can simply say,
210

210

00:10:30,326  -->  00:10:33,814
babel, polyfill here.
211

211

00:10:33,814  -->  00:10:35,361
And webpack will then automatically
212

212

00:10:35,361  -->  00:10:38,312
figure out where this code is located and will then bundle
213

213

00:10:38,312  -->  00:10:40,727
it together with this code that we have here.
214

214

00:10:40,727  -->  00:10:43,491
And so again, we have one huge bundle, which has both
215

215

00:10:43,491  -->  00:10:46,283
all the polyfills for the ES6 code
216

216

00:10:46,283  -->  00:10:51,157
as well as our own code of course and index.js file. Okay?
217

217

00:10:51,157  -->  00:10:55,296
So basically installing babel was a three step process.
218

218

00:10:55,296  -->  00:10:57,611
First, we installed all of these packages
219

219

00:10:57,611  -->  00:11:01,708
and then added this rule here with the babel loader.
220

220

00:11:01,708  -->  00:11:05,291
Second, we created then a config file here,
221

221

00:11:06,364  -->  00:11:07,860
in order to tell Babel which stuff
222

222

00:11:07,860  -->  00:11:10,255
we want to convert back to ES5.
223

223

00:11:10,255  -->  00:11:11,711
And then finally, we also included a
224

224

00:11:11,711  -->  00:11:14,230
polyfill in order to not convert,
225

225

00:11:14,230  -->  00:11:16,709
but polyfill the features that we cannot
226

226

00:11:16,709  -->  00:11:19,065
convert with the babel loaders.
227

227

00:11:19,065  -->  00:11:22,343
So, with all of this work done, let's now finally test this.
228

228

00:11:22,343  -->  00:11:27,157
So, in the index.js file we actually have this
229

229

00:11:27,157  -->  00:11:29,291
well it's already ES6 so this template string
230

230

00:11:29,291  -->  00:11:31,674
and also in here we have, well
231

231

00:11:31,674  -->  00:11:33,997
here we don't really have an ES6.
232

232

00:11:33,997  -->  00:11:36,672
So let's also add a constant here,
233

233

00:11:36,672  -->  00:11:40,589
so const x=23
234

234

00:11:41,752  -->  00:11:44,081
and let's edit now into this template string here somewhere.
235

235

00:11:44,081  -->  00:11:48,293
So, num from another module called test.js.
236

236

00:11:48,293  -->  00:11:50,710
Let's just add...
237

237

00:11:52,298  -->  00:11:54,298
variable x is...
238

238

00:11:57,213  -->  00:11:58,787
x. Okay.
239

239

00:11:58,787  -->  00:12:03,787
So let's give it a save and then run or a webpack command.
240

240

00:12:04,103  -->  00:12:08,901
Okay? So npm run dev. Right?
241

241

00:12:08,901  -->  00:12:12,935
And so this will now create or bundle and whoa,
242

242

00:12:12,935  -->  00:12:16,665
we have some errors here so let's check it out.
243

243

00:12:16,665  -->  00:12:18,769
So there's some errors here.
244

244

00:12:18,769  -->  00:12:22,263
And we can see it's in Babel and so we have something
245

245

00:12:22,263  -->  00:12:25,786
invalid here in our config file. Okay?
246

246

00:12:25,786  -->  00:12:28,171
So, presets and so it looks like we're
247

247

00:12:28,171  -->  00:12:31,137
missing like some parentheses there.
248

248

00:12:31,137  -->  00:12:33,946
Right? So let's go back to our babelrc file
249

249

00:12:33,946  -->  00:12:35,364
and what we're missing is that here
250

250

00:12:35,364  -->  00:12:37,924
we actually need another brackets. Okay?
251

251

00:12:37,924  -->  00:12:40,076
So we have one brackets here and
252

252

00:12:40,076  -->  00:12:42,846
we then need to close it. In here.
253

253

00:12:42,846  -->  00:12:46,377
And what's also missing here is a missing 's' here.
254

254

00:12:46,377  -->  00:12:50,287
So it's presets and not just preset and the same for target.
255

255

00:12:50,287  -->  00:12:52,632
So it's targets and not just target. Okay?
256

256

00:12:52,632  -->  00:12:56,114
So give it a save now and let's try it again.
257

257

00:12:56,114  -->  00:12:58,428
And so now it should really work.
258

258

00:12:58,428  -->  00:13:02,733
And you see. Yeah. Now it's done. Now it work just fine.
259

259

00:13:02,733  -->  00:13:07,155
So let's try and open up this bundle.js file
260

260

00:13:07,155  -->  00:13:09,078
which was just converted.
261

261

00:13:09,078  -->  00:13:12,927
And so, whoa. So you see here, let's go to the beginning.
262

262

00:13:12,927  -->  00:13:15,194
That we have this huge amount of code,
263

263

00:13:15,194  -->  00:13:18,769
and most of this actually now comes from the babel polyfill.
264

264

00:13:18,769  -->  00:13:20,393
So you see down here when we scroll
265

265

00:13:20,393  -->  00:13:22,666
that it actually included here the babel polyfill.
266

266

00:13:22,666  -->  00:13:24,971
And so all of this weird code here,
267

267

00:13:24,971  -->  00:13:29,075
all of this is probably coming from the babel polyfill.
268

268

00:13:29,075  -->  00:13:33,478
Okay? But we will also be able to find our own code in here.
269

269

00:13:33,478  -->  00:13:36,645
So, let's grab this piece of code here
270

270

00:13:37,797  -->  00:13:39,834
and then search for it in the bundle.
271

271

00:13:39,834  -->  00:13:43,266
Then we will be able to find our own code.
272

272

00:13:43,266  -->  00:13:44,464
And so here it is.
273

273

00:13:44,464  -->  00:13:46,341
And you can already see that it actually did,
274

274

00:13:46,341  -->  00:13:49,133
decompiling from ES6 to ES5.
275

275

00:13:49,133  -->  00:13:54,133
So before we had const x=23 and now we have var here, right?
276

276

00:13:54,134  -->  00:13:55,097
And also before we had
277

277

00:13:55,097  -->  00:13:56,513
(overlapping voices)
278

278

00:13:56,513  -->  00:13:59,535
in the console.log and now you see these normal quotes
279

279

00:13:59,535  -->  00:14:02,458
and then the plus signs in order to join the strings,
280

280

00:14:02,458  -->  00:14:04,943
just like we did it in the ES5 way.
281

281

00:14:04,943  -->  00:14:08,335
And so this proves that Babel is now really working.
282

282

00:14:08,335  -->  00:14:11,178
It is doing the real conversion from ES6 to ES5
283

283

00:14:11,178  -->  00:14:13,756
and it's also doing the polyfill.
284

284

00:14:13,756  -->  00:14:18,123
So it included all of this polyfilled that we specified.
285

285

00:14:18,123  -->  00:14:22,479
Okay. And so now we're actually really done with our set-up.
286

286

00:14:22,479  -->  00:14:25,111
So we used entry points, we used outputs,
287

287

00:14:25,111  -->  00:14:28,842
we used a devServer, plugins and also loaders
288

288

00:14:28,842  -->  00:14:31,082
here in our webpack configuration.
289

289

00:14:31,082  -->  00:14:33,065
And so I hope that you're fairly confident
290

290

00:14:33,065  -->  00:14:35,339
with using webpack at this point.
291

291

00:14:35,339  -->  00:14:37,328
Of course there is a ton more to learn.
292

292

00:14:37,328  -->  00:14:40,246
And you can always check out the webpack documentation.
293

293

00:14:40,246  -->  00:14:42,664
Or you can search for some tutorials online.
294

294

00:14:42,664  -->  00:14:44,608
And there's a lot more to learn actually.
295

295

00:14:44,608  -->  00:14:46,599
For example you can use loaders for
296

296

00:14:46,599  -->  00:14:48,628
SASS in order to convert it to CSS, and that's
297

297

00:14:48,628  -->  00:14:51,809
something very popular and that's very useful as well.
298

298

00:14:51,809  -->  00:14:55,482
So you don't need to include an additional SASS converter
299

299

00:14:55,482  -->  00:14:57,304
outside of webpack so you can do it all
300

300

00:14:57,304  -->  00:14:59,483
inside of webpack very nicely.
301

301

00:14:59,483  -->  00:15:01,316
But in this project that's not really necessary
302

302

00:15:01,316  -->  00:15:04,200
and so again we keep it here very simple,
303

303

00:15:04,200  -->  00:15:07,599
just in order to make it work according to our needs here.
304

304

00:15:07,599  -->  00:15:09,826
So that being said, I hope you learned quite a lot
305

305

00:15:09,826  -->  00:15:12,697
in this small series of webpack lectures
306

306

00:15:12,697  -->  00:15:13,613
so that you're now ready
307

307

00:15:13,613  -->  00:15:17,363
to really move on to the project from now on.
