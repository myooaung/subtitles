WEBVTT
1
1

00:00:01.582  -->  00:00:04.247
<v Jonas>Welcome back to the project.</v>
2

2

00:00:04.247  -->  00:00:06.519
And in this lecture, we're gonna set up
3

3

00:00:06.519  -->  00:00:10.686
our first event listener to handle our input button.
4

4

00:00:12.265  -->  00:00:15.670
So, the new things that you're gonna learn in this lecture
5

5

00:00:15.670  -->  00:00:17.902
is how to set up event listeners
6

6

00:00:17.902  -->  00:00:20.724
specifically for keypress events,
7

7

00:00:20.724  -->  00:00:23.895
and you will also learn what the event object is
8

8

00:00:23.895  -->  00:00:25.395
and how to use it.
9

9

00:00:27.539  -->  00:00:30.590
But, let's start by cleaning up our code here,
10

10

00:00:30.590  -->  00:00:33.066
because I wanna get rid of all of this,
11

11

00:00:33.066  -->  00:00:37.233
because this was just to show you how everything works.
12

12

00:00:38.134  -->  00:00:39.884
And, up here as well.
13

13

00:00:42.020  -->  00:00:43.770
So let's delete this.
14

14

00:00:45.044  -->  00:00:46.211
So, some code.
15

15

00:00:47.085  -->  00:00:50.168
And I'll give it some structure here.
16

16

00:00:53.946  -->  00:00:56.696
So this is the budget controller.
17

17

00:01:01.519  -->  00:01:04.221
Give it some more space here.
18

18

00:01:04.221  -->  00:01:05.721
The UI controller.
19

19

00:01:07.556  -->  00:01:09.889
And then, finally,
20

20

00:01:09.889  -->  00:01:12.889
let's say the global app controller.
21

21

00:01:13.834  -->  00:01:14.667
All right.
22

22

00:01:16.278  -->  00:01:18.676
So I'm gonna set up the event listener
23

23

00:01:18.676  -->  00:01:22.315
for the input button right here in our controller,
24

24

00:01:22.315  -->  00:01:25.923
because this is the central place where I want to decide,
25

25

00:01:25.923  -->  00:01:30.341
so where I want to control what happens upon each event,
26

26

00:01:30.341  -->  00:01:34.767
and then delegate these tasks to the other controllers.
27

27

00:01:34.767  -->  00:01:36.311
Okay, and we already know
28

28

00:01:36.311  -->  00:01:38.947
how to set up event listeners, right?
29

29

00:01:38.947  -->  00:01:41.161
So, we first select an element,
30

30

00:01:41.161  -->  00:01:44.491
and then attach it the event listener.
31

31

00:01:44.491  -->  00:01:47.242
So we use the querySelector method.
32

32

00:01:47.242  -->  00:01:49.492
So, document.querySelector,
33

33

00:01:51.659  -->  00:01:54.240
and you remember that one, right?
34

34

00:01:54.240  -->  00:01:56.315
And now we need to know the class
35

35

00:01:56.315  -->  00:01:59.424
or the ID name of this button.
36

36

00:01:59.424  -->  00:02:04.233
So in order to do that, let's check out our HTML file.
37

37

00:02:04.233  -->  00:02:07.835
And then I will just try to grab the class name.
38

38

00:02:07.835  -->  00:02:11.897
So we see that down here, we have the button, all right.
39

39

00:02:11.897  -->  00:02:14.990
So this is the class that is attached to this button.
40

40

00:02:14.990  -->  00:02:16.676
So I'm gonna copy it.
41

41

00:02:16.676  -->  00:02:18.595
And, actually, we should probably
42

42

00:02:18.595  -->  00:02:21.962
take a closer look at all this markup structure,
43

43

00:02:21.962  -->  00:02:24.157
but I'm gonna leave that for later, okay.
44

44

00:02:24.157  -->  00:02:26.626
So, for now, I'm just going to grab this class name here,
45

45

00:02:26.626  -->  00:02:29.793
but later, we're going to look better at the structure
46

46

00:02:29.793  -->  00:02:33.129
of this HTML file, so that we can better understand
47

47

00:02:33.129  -->  00:02:35.682
our user interface, okay.
48

48

00:02:35.682  -->  00:02:39.557
So let's move back here and paste it here.
49

49

00:02:39.557  -->  00:02:41.476
So the add button, and this, remember,
50

50

00:02:41.476  -->  00:02:44.683
is the class selector, because it is a class.
51

51

00:02:44.683  -->  00:02:47.101
And since this is how we select with CSS,
52

52

00:02:47.101  -->  00:02:49.806
remember, this is done the exact same way
53

53

00:02:49.806  -->  00:02:51.514
after we select using the querySelector,
54

54

00:02:51.514  -->  00:02:55.681
because it uses the same syntax as the CSS selectors.
55

55

00:02:56.787  -->  00:02:58.799
Okay, and now all we need to do
56

56

00:02:58.799  -->  00:03:01.988
is to use the addEventListener method, right?
57

57

00:03:01.988  -->  00:03:05.468
And what we want is the click event,
58

58

00:03:05.468  -->  00:03:08.395
and then the function that gets executed
59

59

00:03:08.395  -->  00:03:11.812
as soon as the user clicks on the button.
60

60

00:03:12.791  -->  00:03:13.624
All right.
61

61

00:03:15.952  -->  00:03:20.119
So, just to test this, let's create a console.log here.
62

62

00:03:22.164  -->  00:03:24.081
So, button was clicked.
63

63

00:03:26.511  -->  00:03:28.782
And let's check this out.
64

64

00:03:28.782  -->  00:03:29.699
So, reload.
65

65

00:03:31.179  -->  00:03:34.209
And, clicking the button, all right.
66

66

00:03:34.209  -->  00:03:35.834
So, button was clicked.
67

67

00:03:35.834  -->  00:03:36.667
So it works.
68

68

00:03:36.667  -->  00:03:39.417
Event handler is properly set up.
69

69

00:03:40.504  -->  00:03:41.380
All right.
70

70

00:03:41.380  -->  00:03:42.777
So this was just a test.
71

71

00:03:42.777  -->  00:03:45.468
Now, of course, we cannot yet write the code in here,
72

72

00:03:45.468  -->  00:03:48.486
but we can write what we want to happen here later,
73

73

00:03:48.486  -->  00:03:51.784
so we can, basically, create a to-do list in here,
74

74

00:03:51.784  -->  00:03:53.028
which is basically the to-do list
75

75

00:03:53.028  -->  00:03:56.167
that we did in the planning lecture.
76

76

00:03:56.167  -->  00:03:58.958
So, as soon as someone hits the button,
77

77

00:03:58.958  -->  00:04:02.293
we first need to get the input data, right?
78

78

00:04:02.293  -->  00:04:04.710
So, get the field input data.
79

79

00:04:07.271  -->  00:04:10.688
Okay, after that, we need to add the item
80

80

00:04:12.205  -->  00:04:14.288
to the budget controller.
81

81

00:04:17.241  -->  00:04:19.766
So, here, we're basically creating a recipe
82

82

00:04:19.766  -->  00:04:22.183
for what we're gonna do next.
83

83

00:04:23.565  -->  00:04:26.027
Then, we need to add the new item
84

84

00:04:26.027  -->  00:04:28.527
to the user interface as well.
85

85

00:04:32.886  -->  00:04:35.553
We need to calculate the budget.
86

86

00:04:42.553  -->  00:04:45.720
And we also need to display the budget
87

87

00:04:49.487  -->  00:04:51.592
on the user interface.
88

88

00:04:51.592  -->  00:04:52.971
All right.
89

89

00:04:52.971  -->  00:04:56.053
And let's create some space here.
90

90

00:04:56.053  -->  00:04:57.549
So this is what we're going to do
91

91

00:04:57.549  -->  00:05:00.323
as soon as someone hits the button, right?
92

92

00:05:00.323  -->  00:05:02.406
So we get the input data.
93

93

00:05:04.038  -->  00:05:06.990
We then add the item to the budget controller,
94

94

00:05:06.990  -->  00:05:10.066
to the user interface, and then we calculate this budget
95

95

00:05:10.066  -->  00:05:12.220
and display them.
96

96

00:05:12.220  -->  00:05:16.379
So, over the next lectures, we're going to focus on that,
97

97

00:05:16.379  -->  00:05:19.125
but for now, there's one more thing that we need to do,
98

98

00:05:19.125  -->  00:05:22.094
because we not only want all of this here
99

99

00:05:22.094  -->  00:05:25.394
to happen when someone hits the button, but also,
100

100

00:05:25.394  -->  00:05:28.924
when someone hits the return key, so, the enter key.
101

101

00:05:28.924  -->  00:05:30.507
So, let's see this.
102

102

00:05:32.012  -->  00:05:33.262
So imagine that
103

103

00:05:36.624  -->  00:05:41.476
someone writes something in here, let's say, project.
104

104

00:05:41.476  -->  00:05:44.189
Then a value here, and then instead
105

105

00:05:44.189  -->  00:05:48.247
of hitting this button here, hits the return key.
106

106

00:05:48.247  -->  00:05:50.949
So in this case, we also want all of that to happen.
107

107

00:05:50.949  -->  00:05:53.331
We also want to get the input data,
108

108

00:05:53.331  -->  00:05:55.979
we want to add the item to the user interface,
109

109

00:05:55.979  -->  00:05:58.007
and to the controller, and all of that.
110

110

00:05:58.007  -->  00:06:00.449
So it should be the exact same thing.
111

111

00:06:00.449  -->  00:06:04.616
So, not only the click event, but also a keypress event.
112

112

00:06:06.501  -->  00:06:08.814
And this is something new, so we did never
113

113

00:06:08.814  -->  00:06:12.433
use the keypress event, so let's now do that.
114

114

00:06:12.433  -->  00:06:15.683
So we need another event listener here.
115

115

00:06:16.659  -->  00:06:19.350
But now we're gonna do it in a slightly different way.
116

116

00:06:19.350  -->  00:06:22.137
We're not going to select anything.
117

117

00:06:22.137  -->  00:06:25.994
We will just add this event listener to the global document.
118

118

00:06:25.994  -->  00:06:27.175
Okay?
119

119

00:06:27.175  -->  00:06:28.758
So, just like this,
120

120

00:06:30.121  -->  00:06:33.337
document, and then, addEventListener.
121

121

00:06:33.337  -->  00:06:35.746
And that's because this keypress event
122

122

00:06:35.746  -->  00:06:38.365
doesn't happen on any specific element,
123

123

00:06:38.365  -->  00:06:40.451
but it happens on the global web page,
124

124

00:06:40.451  -->  00:06:43.325
so on the global document, anywhere in the document.
125

125

00:06:43.325  -->  00:06:44.158
Right?
126

126

00:06:45.632  -->  00:06:48.442
Now, there are actually more than one type of event
127

127

00:06:48.442  -->  00:06:51.269
that handles when someone presses a key.
128

128

00:06:51.269  -->  00:06:54.792
So let's look at the event reference
129

129

00:06:54.792  -->  00:06:56.619
that I have already open here, okay.
130

130

00:06:56.619  -->  00:06:59.761
So this is the reference for all the JavaScript events,
131

131

00:06:59.761  -->  00:07:01.935
or the DOM events, and you can find this
132

132

00:07:01.935  -->  00:07:05.173
on my resources page as well.
133

133

00:07:05.173  -->  00:07:07.488
But now, I already have it here open.
134

134

00:07:07.488  -->  00:07:09.833
And so, here, we see the keyboard events,
135

135

00:07:09.833  -->  00:07:11.589
and there are actually three.
136

136

00:07:11.589  -->  00:07:15.601
So, keydown is when we start pressing the key,
137

137

00:07:15.601  -->  00:07:17.287
so any keys pressed.
138

138

00:07:17.287  -->  00:07:19.876
And then, the keypress event is when the key
139

139

00:07:19.876  -->  00:07:22.025
is already in the pressed position,
140

140

00:07:22.025  -->  00:07:26.343
and then the keyup event is after we release the key.
141

141

00:07:26.343  -->  00:07:28.268
So, for us, there is no need
142

142

00:07:28.268  -->  00:07:31.504
to use the keydown or keyup events.
143

143

00:07:31.504  -->  00:07:33.185
We're simply going to use the
144

144

00:07:33.185  -->  00:07:35.983
more common keypress event here, okay?
145

145

00:07:35.983  -->  00:07:39.910
And, remember, this is when any key is pressed,
146

146

00:07:39.910  -->  00:07:41.587
not just the enter or the return key,
147

147

00:07:41.587  -->  00:07:44.320
but this is for any key, right?
148

148

00:07:44.320  -->  00:07:47.052
So we'll need to talk about that in a second.
149

149

00:07:47.052  -->  00:07:50.053
But first, let's use the keypress event here.
150

150

00:07:50.053  -->  00:07:51.136
So, keypress.
151

151

00:07:52.726  -->  00:07:55.226
And then, again, our function.
152

152

00:07:56.859  -->  00:07:58.192
Like this, okay.
153

153

00:07:59.884  -->  00:08:02.769
Now, we actually only want to execute some code
154

154

00:08:02.769  -->  00:08:05.305
when the user hits the return key, right?
155

155

00:08:05.305  -->  00:08:07.688
Not just some random key on the keyboard.
156

156

00:08:07.688  -->  00:08:09.711
So, how are we going to do that?
157

157

00:08:09.711  -->  00:08:14.129
And the key to this is that this function here
158

158

00:08:14.129  -->  00:08:16.877
that is passed into the event listener
159

159

00:08:16.877  -->  00:08:20.323
can receive an argument, which is the event argument.
160

160

00:08:20.323  -->  00:08:22.221
And this is something that we have not been,
161

161

00:08:22.221  -->  00:08:23.752
up until this point,
162

162

00:08:23.752  -->  00:08:25.405
so we've been using this function here,
163

163

00:08:25.405  -->  00:08:27.266
this anonymous function, in this case,
164

164

00:08:27.266  -->  00:08:29.675
all the time without any parameters.
165

165

00:08:29.675  -->  00:08:32.020
But now we're gonna use it for the first time,
166

166

00:08:32.020  -->  00:08:34.536
and I'm gonna call it event.
167

167

00:08:34.536  -->  00:08:37.495
And actually, we can use any name for this that we want,
168

168

00:08:37.495  -->  00:08:40.379
and then use it in our event listener function.
169

169

00:08:40.379  -->  00:08:42.688
But I'm just going to do it event here.
170

170

00:08:42.688  -->  00:08:45.131
Another popular name that developers use
171

171

00:08:45.131  -->  00:08:49.908
is simply e, like this, but I'm going to go with event,
172

172

00:08:49.908  -->  00:08:52.788
so that we are sure what this means.
173

173

00:08:52.788  -->  00:08:54.799
So, this automatically gets passed
174

174

00:08:54.799  -->  00:08:57.684
into our event handler by the browser,
175

175

00:08:57.684  -->  00:08:59.090
and there's nothing we have to do,
176

176

00:08:59.090  -->  00:09:01.788
so we just need to specify it here,
177

177

00:09:01.788  -->  00:09:03.554
and then we can use it.
178

178

00:09:03.554  -->  00:09:07.167
And just to see what this event object actually is,
179

179

00:09:07.167  -->  00:09:10.168
let's start by logging it into the console.
180

180

00:09:10.168  -->  00:09:11.501
So, console.log,
181

181

00:09:13.327  -->  00:09:14.160
event.
182

182

00:09:15.219  -->  00:09:17.169
And remember, this is going to happen
183

183

00:09:17.169  -->  00:09:21.336
when we press any key, so not just the return key.
184

184

00:09:22.710  -->  00:09:24.249
So, take a look at the console,
185

185

00:09:24.249  -->  00:09:27.865
and I'm going to hit a button now.
186

186

00:09:27.865  -->  00:09:31.532
All right, and here we have a keyword event.
187

187

00:09:34.207  -->  00:09:37.121
So this is simply an object, as we can see,
188

188

00:09:37.121  -->  00:09:39.466
with a lot of properties.
189

189

00:09:39.466  -->  00:09:43.980
And it has a prototype, so just for the sake of curiosity,
190

190

00:09:43.980  -->  00:09:45.376
let's take a look at that.
191

191

00:09:45.376  -->  00:09:48.758
So, a keyword event is the prototype,
192

192

00:09:48.758  -->  00:09:53.043
and this one has also a prototype, which is in the UI event.
193

193

00:09:53.043  -->  00:09:55.386
So this means that the keyword event
194

194

00:09:55.386  -->  00:09:59.369
is a UI, in the user interface, event.
195

195

00:09:59.369  -->  00:10:03.077
And this one is also a prototype, which is an event,
196

196

00:10:03.077  -->  00:10:06.169
and this one is also a prototype, the object.
197

197

00:10:06.169  -->  00:10:08.589
And that's it, so we know that the object
198

198

00:10:08.589  -->  00:10:11.941
is usually the last one in a prototype chain, right?
199

199

00:10:11.941  -->  00:10:14.715
So we can use all of this here
200

200

00:10:14.715  -->  00:10:17.049
with the keyboard event, right?
201

201

00:10:17.049  -->  00:10:20.393
And you know that already, because of the prototype chain.
202

202

00:10:20.393  -->  00:10:23.913
But right now, I want you to focus on something else,
203

203

00:10:23.913  -->  00:10:26.267
which is this keyCode property here.
204

204

00:10:26.267  -->  00:10:28.997
So here, you see a keycode and a number,
205

205

00:10:28.997  -->  00:10:31.667
and this number is what identifies
206

206

00:10:31.667  -->  00:10:33.679
the key that we pressed, so right now,
207

207

00:10:33.679  -->  00:10:37.176
I pressed a key, and the keycode is 107.
208

208

00:10:37.176  -->  00:10:39.593
But a different key will have another one.
209

209

00:10:39.593  -->  00:10:42.260
So let me press now another key.
210

210

00:10:43.383  -->  00:10:47.274
So I'm going to press the space key now.
211

211

00:10:47.274  -->  00:10:49.689
Actually, it has to be here in the document.
212

212

00:10:49.689  -->  00:10:52.106
So, I press the space button.
213

213

00:10:53.094  -->  00:10:56.432
And this time, the key code is 32.
214

214

00:10:56.432  -->  00:11:00.015
And now, I'm going to press the return key.
215

215

00:11:00.987  -->  00:11:03.070
Again, it has to be here.
216

216

00:11:04.473  -->  00:11:08.223
So, the enter key, and now the keycode is 13.
217

217

00:11:09.320  -->  00:11:12.419
So this keycode here is what we're gonna use
218

218

00:11:12.419  -->  00:11:14.677
to say that we only want something to happen
219

219

00:11:14.677  -->  00:11:16.188
when this keycode was pressed.
220

220

00:11:16.188  -->  00:11:19.396
So, in this case, that the enter key was pressed.
221

221

00:11:19.396  -->  00:11:23.358
And in case that you ever need the keycode for another key,
222

222

00:11:23.358  -->  00:11:25.137
I have this cool reference here,
223

223

00:11:25.137  -->  00:11:27.838
which you can also find on the resource pages,
224

224

00:11:27.838  -->  00:11:30.599
and in here, if we hit some button here,
225

225

00:11:30.599  -->  00:11:32.146
then we have the keycode.
226

226

00:11:32.146  -->  00:11:34.529
So, again, the enter key is 13,
227

227

00:11:34.529  -->  00:11:38.761
the space is 32, and this happens on any other key here.
228

228

00:11:38.761  -->  00:11:39.681
Okay?
229

229

00:11:39.681  -->  00:11:42.041
So, just a cool reference.
230

230

00:11:42.041  -->  00:11:45.771
So let's now go back and use this knowledge, okay.
231

231

00:11:45.771  -->  00:11:48.430
So what we're going to do is,
232

232

00:11:48.430  -->  00:11:52.402
as you can probably guess, an if statement.
233

233

00:11:52.402  -->  00:11:55.494
So we're going to use the event,
234

234

00:11:55.494  -->  00:11:58.016
and then they keyCode property.
235

235

00:11:58.016  -->  00:12:00.683
And we say that it should be 13.
236

236

00:12:02.651  -->  00:12:06.778
And if it's 13, so, if it's the return key,
237

237

00:12:06.778  -->  00:12:09.195
then let's log to the console
238

238

00:12:10.212  -->  00:12:12.129
that enter was pressed.
239

239

00:12:16.199  -->  00:12:17.398
Now, some older browsers,
240

240

00:12:17.398  -->  00:12:20.173
they don't use this keyCode property here.
241

241

00:12:20.173  -->  00:12:22.916
They use another property called which,
242

242

00:12:22.916  -->  00:12:26.106
and so, it's a good practice to use that as well,
243

243

00:12:26.106  -->  00:12:30.669
and so we're simply going to use an or operator here,
244

244

00:12:30.669  -->  00:12:32.419
and say, event.which,
245

245

00:12:34.883  -->  00:12:36.215
13.
246

246

00:12:36.215  -->  00:12:40.299
So, if the keycode is 13 or the which property is 13,
247

247

00:12:40.299  -->  00:12:41.312
then this happens.
248

248

00:12:41.312  -->  00:12:43.504
So, again, this is for more older browsers,
249

249

00:12:43.504  -->  00:12:45.688
or other browsers that simply don't have
250

250

00:12:45.688  -->  00:12:49.087
this keyCode property, and in this case, we're also safe,
251

251

00:12:49.087  -->  00:12:51.134
because then we have this part here.
252

252

00:12:51.134  -->  00:12:53.689
So let's now test this.
253

253

00:12:53.689  -->  00:12:55.312
So I'm refreshing.
254

254

00:12:55.312  -->  00:12:58.324
And now, I'm hitting some random keys here.
255

255

00:12:58.324  -->  00:13:00.239
As you can hear, probably.
256

256

00:13:00.239  -->  00:13:01.763
And nothing happens in the console, right.
257

257

00:13:01.763  -->  00:13:04.586
And now I'm going to hit the enter key.
258

258

00:13:04.586  -->  00:13:05.464
Okay.
259

259

00:13:05.464  -->  00:13:06.862
Enter was pressed.
260

260

00:13:06.862  -->  00:13:08.112
So, this works.
261

261

00:13:09.002  -->  00:13:12.250
Now, what do we want to happen here?
262

262

00:13:12.250  -->  00:13:14.830
Because we don't want to console.log, of course.
263

263

00:13:14.830  -->  00:13:16.415
But we want something to happen.
264

264

00:13:16.415  -->  00:13:19.968
Which is, as you can guess, the exact same thing
265

265

00:13:19.968  -->  00:13:24.263
what we want to happen when someone hits the input button.
266

266

00:13:24.263  -->  00:13:25.782
So we could copy this code
267

267

00:13:25.782  -->  00:13:29.018
that we're later gonna write here and paste it here.
268

268

00:13:29.018  -->  00:13:31.581
But, as you probably know,
269

269

00:13:31.581  -->  00:13:33.441
this doesn't make any sense at all,
270

270

00:13:33.441  -->  00:13:36.045
because that would completely disrespect
271

271

00:13:36.045  -->  00:13:40.237
the DRY, the don't repeat yourself, principle.
272

272

00:13:40.237  -->  00:13:44.021
So, the solution is, once again, to write a custom function.
273

273

00:13:44.021  -->  00:13:46.104
So let's do that up here.
274

274

00:13:47.347  -->  00:13:51.680
And I'm going to call this one the ctrlAddItem function.
275

275

00:13:51.680  -->  00:13:52.513
So, var,
276

276

00:13:54.974  -->  00:13:55.974
ctrlAddItem,
277

277

00:13:57.657  -->  00:14:00.170
and I'm going to prepend this control here
278

278

00:14:00.170  -->  00:14:03.247
to this function name, because there may be
279

279

00:14:03.247  -->  00:14:06.164
functions with similar names in the other controllers,
280

280

00:14:06.164  -->  00:14:08.378
and I wanna be able to distinguish them.
281

281

00:14:08.378  -->  00:14:11.795
So I am already planning with that, okay?
282

282

00:14:13.066  -->  00:14:14.233
So, a function
283

283

00:14:16.012  -->  00:14:19.956
which simply will do all of this here.
284

284

00:14:19.956  -->  00:14:23.225
So this is not real code, of course,
285

285

00:14:23.225  -->  00:14:27.956
but this will then be where we specify all of this actions.
286

286

00:14:27.956  -->  00:14:29.421
So now, what we're doing here
287

287

00:14:29.421  -->  00:14:32.225
is to simply call this function,
288

288

00:14:32.225  -->  00:14:34.451
so in case that someone hits the return key,
289

289

00:14:34.451  -->  00:14:37.868
we want to call the ctrlAddItem function.
290

290

00:14:39.437  -->  00:14:40.604
And that's it.
291

291

00:14:42.198  -->  00:14:44.869
And now, here, the same thing.
292

292

00:14:44.869  -->  00:14:47.332
So I'm going to remove this from here,
293

293

00:14:47.332  -->  00:14:49.919
so we no longer want the anonymous function here,
294

294

00:14:49.919  -->  00:14:51.422
but we actually want to pass
295

295

00:14:51.422  -->  00:14:53.818
the ctrlAddItem function in here.
296

296

00:14:53.818  -->  00:14:55.108
And we already did that before,
297

297

00:14:55.108  -->  00:14:57.030
actually, in our other project.
298

298

00:14:57.030  -->  00:14:59.528
So it doesn't have to be an anonymous function.
299

299

00:14:59.528  -->  00:15:02.614
We can simply pass a function that we have,
300

300

00:15:02.614  -->  00:15:05.113
a standalone function, pass it here
301

301

00:15:05.113  -->  00:15:07.575
into the addEventListener method.
302

302

00:15:07.575  -->  00:15:09.301
And, again, we're not going to call it here,
303

303

00:15:09.301  -->  00:15:11.642
so we don't need this call operator,
304

304

00:15:11.642  -->  00:15:14.375
because this is a callback, and so,
305

305

00:15:14.375  -->  00:15:17.565
the addEventListener method will call it for us
306

306

00:15:17.565  -->  00:15:18.981
when needed, so, when necessary,
307

307

00:15:18.981  -->  00:15:21.675
so when someone clicks the button.
308

308

00:15:21.675  -->  00:15:24.175
So, just to finally test this,
309

309

00:15:25.300  -->  00:15:28.633
let's log something to the console here.
310

310

00:15:30.197  -->  00:15:33.030
Doesn't matter here, so, it works.
311

311

00:15:34.847  -->  00:15:36.097
And, all right.
312

312

00:15:37.622  -->  00:15:39.671
So I'm going to hit the space key,
313

313

00:15:39.671  -->  00:15:42.213
nothing happens, and now, the return key.
314

314

00:15:42.213  -->  00:15:45.434
So it works, and now, I'm going to hit this key here,
315

315

00:15:45.434  -->  00:15:49.673
sorry, this button here, and so it should appear again.
316

316

00:15:49.673  -->  00:15:50.791
And, yes.
317

317

00:15:50.791  -->  00:15:52.791
Here it is, so it works.
318

318

00:15:54.111  -->  00:15:54.944
All right.
319

319

00:15:54.944  -->  00:15:58.248
So now we're all set up to start adding some code
320

320

00:15:58.248  -->  00:15:59.829
to our event listeners.
321

321

00:15:59.829  -->  00:16:02.912
So let's do that in the next lecture.
