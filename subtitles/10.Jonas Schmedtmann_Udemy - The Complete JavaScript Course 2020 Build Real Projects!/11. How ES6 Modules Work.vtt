WEBVTT
1
1

00:00:01.250  -->  00:00:02.700
<v Instructor>Lets now talk in detail</v>
2

2

00:00:02.700  -->  00:00:05.540
about how ES6 modules really work.
3

3

00:00:05.540  -->  00:00:06.503
And so, in this video,
4

4

00:00:06.503  -->  00:00:09.440
you're gonna learn how to import and export stuff
5

5

00:00:09.440  -->  00:00:12.100
from and to ES6 modules
6

6

00:00:12.100  -->  00:00:16.526
by using both default and named exports and imports.
7

7

00:00:16.526  -->  00:00:20.053
So, let's open up our index.js file.
8

8

00:00:21.730  -->  00:00:24.890
And we can actually close the package.json file.
9

9

00:00:24.890  -->  00:00:28.350
And also we can get rid of the test js file.
10

10

00:00:28.350  -->  00:00:33.277
So this is just to test if webpack was working right.
11

11

00:00:33.277  -->  00:00:35.390
And we don't need that anymore.
12

12

00:00:35.390  -->  00:00:38.070
And we also don't need any of this stuff here anymore.
13

13

00:00:38.070  -->  00:00:39.362
So let's get rid of all of it
14

14

00:00:39.362  -->  00:00:43.510
so I can now explain to you how ES6 modules work.
15

15

00:00:43.510  -->  00:00:47.430
Okay, let's create a new model here
16

16

00:00:47.430  -->  00:00:49.010
for the search functionality.
17

17

00:00:49.010  -->  00:00:52.640
So, new file, and I'm gonna call this one search.
18

18

00:00:52.640  -->  00:00:53.730
And usually,
19

19

00:00:53.730  -->  00:00:57.600
we always write JavaScript files all in lowercase.
20

20

00:00:57.600  -->  00:00:58.827
But, in the case of models,
21

21

00:00:58.827  -->  00:01:00.483
it's like a convention
22

22

00:01:00.483  -->  00:01:04.570
to always use uppercase here for the model name.
23

23

00:01:04.570  -->  00:01:06.120
So this one here is for search
24

24

00:01:06.120  -->  00:01:09.320
so I'm just using search with an upper S, okay?
25

25

00:01:09.320  -->  00:01:11.010
And just search.
26

26

00:01:11.010  -->  00:01:13.181
And now the same one for the view.
27

27

00:01:13.181  -->  00:01:14.980
And remember from the last lecture,
28

28

00:01:14.980  -->  00:01:16.543
this one is called search view.
29

29

00:01:20.067  -->  00:01:21.580
.js, of course.
30

30

00:01:21.580  -->  00:01:24.340
Okay, so we just created the search model
31

31

00:01:24.340  -->  00:01:25.647
and the search view file
32

32

00:01:25.647  -->  00:01:28.300
and we also have our index.js file,
33

33

00:01:28.300  -->  00:01:30.620
which is gonna be the controller, okay?
34

34

00:01:30.620  -->  00:01:33.900
Now we're not gonna add the real coding here just yet.
35

35

00:01:33.900  -->  00:01:34.941
For now I just wanna show you
36

36

00:01:34.941  -->  00:01:38.580
how named and default exports and imports
37

37

00:01:38.580  -->  00:01:40.036
work in ES6 modules.
38

38

00:01:40.036  -->  00:01:42.240
So we already talked a bit about this
39

39

00:01:42.240  -->  00:01:44.860
when we talked about webpack tests.
40

40

00:01:44.860  -->  00:01:47.538
So the test.js that I just deleted.
41

41

00:01:47.538  -->  00:01:50.120
But now let's really dive into it.
42

42

00:01:50.120  -->  00:01:52.110
Starting with default exports,
43

43

00:01:52.110  -->  00:01:53.406
that's the ones that we use
44

44

00:01:53.406  -->  00:01:57.033
when we only want to export one thing from a module.
45

45

00:01:57.033  -->  00:01:58.730
And that's actually pretty common.
46

46

00:01:58.730  -->  00:02:00.953
That's why we have default exports.
47

47

00:02:00.953  -->  00:02:02.480
With default exports,
48

48

00:02:02.480  -->  00:02:03.837
all we have to do is to say
49

49

00:02:03.837  -->  00:02:08.837
export, default and then the thing that we want to export.
50

50

00:02:10.000  -->  00:02:12.624
So let's say we simply want to export a string
51

51

00:02:12.624  -->  00:02:16.793
saying I am an exported string.
52

52

00:02:20.600  -->  00:02:23.330
Okay, and so this is our default export.
53

53

00:02:23.330  -->  00:02:27.060
We don't specify any constant or any variable at all.
54

54

00:02:27.060  -->  00:02:29.160
We simply put our expression
55

55

00:02:29.160  -->  00:02:30.430
so this string here
56

56

00:02:30.430  -->  00:02:32.870
right after the export and default statement.
57

57

00:02:32.870  -->  00:02:35.880
Okay, so this one I'll export it from this file.
58

58

00:02:35.880  -->  00:02:39.320
And if you wanna now import it into the index.js file,
59

59

00:02:39.320  -->  00:02:40.790
we do it like this.
60

60

00:02:40.790  -->  00:02:45.290
So we say import and then we have to give it a name.
61

61

00:02:45.290  -->  00:02:47.773
So let's call it string, for example,
62

62

00:02:49.550  -->  00:02:50.457
and then from
63

63

00:02:50.457  -->  00:02:53.010
and the path to this module.
64

64

00:02:53.010  -->  00:02:53.843
And in this case,
65

65

00:02:53.843  -->  00:02:55.260
it's in the models folder.
66

66

00:02:55.260  -->  00:02:58.339
And so we have to say first the current folder, remember,
67

67

00:02:58.339  -->  00:03:03.339
then slash models and then slash search.
68

68

00:03:03.540  -->  00:03:05.600
And remember, I already told you before
69

69

00:03:05.600  -->  00:03:07.670
that when we import a module,
70

70

00:03:07.670  -->  00:03:10.280
we don't have to specify the .js.
71

71

00:03:10.280  -->  00:03:12.070
So just the name of the module,
72

72

00:03:12.070  -->  00:03:15.180
which is search, not search.js.
73

73

00:03:15.180  -->  00:03:20.180
Okay, and like this we have now this value stored in string.
74

74

00:03:20.330  -->  00:03:23.960
In string, we right now will have I am an imported string.
75

75

00:03:23.960  -->  00:03:26.750
And in here we really can give it any name that we want.
76

76

00:03:26.750  -->  00:03:30.510
We can also call it just str or X.
77

77

00:03:30.510  -->  00:03:31.530
It doesn't really matter.
78

78

00:03:31.530  -->  00:03:34.161
Okay, so let's just call it str.
79

79

00:03:34.161  -->  00:03:36.960
So default exports, they are really simple.
80

80

00:03:36.960  -->  00:03:38.550
They work just like that.
81

81

00:03:38.550  -->  00:03:40.730
Now if you want to export multiple things
82

82

00:03:40.730  -->  00:03:41.716
from the same module,
83

83

00:03:41.716  -->  00:03:44.812
then we have to use something called named export.
84

84

00:03:44.812  -->  00:03:48.293
So let me show it to you in here in the search view file.
85

85

00:03:48.293  -->  00:03:51.220
Okay, because later we will actually export
86

86

00:03:51.220  -->  00:03:52.607
many functions from here.
87

87

00:03:52.607  -->  00:03:55.240
And so let me show you how we can do that.
88

88

00:03:55.240  -->  00:03:57.002
It's actually pretty simple as well.
89

89

00:03:57.002  -->  00:03:59.100
Again, we use the export keyword.
90

90

00:03:59.100  -->  00:04:00.191
But now, instead of default,
91

91

00:04:00.191  -->  00:04:03.470
we declare D the constant or the variable
92

92

00:04:03.470  -->  00:04:05.400
that we want to export from here.
93

93

00:04:05.400  -->  00:04:07.560
Imagine we want to export a function.
94

94

00:04:07.560  -->  00:04:09.720
Let's say const.
95

95

00:04:09.720  -->  00:04:10.553
And, for example,
96

96

00:04:10.553  -->  00:04:13.843
let's say we wanna export a simple sum function or add.
97

97

00:04:17.840  -->  00:04:19.240
And we pass two numbers into it.
98

98

00:04:19.240  -->  00:04:21.883
And then we return a+b.
99

99

00:04:22.860  -->  00:04:25.018
Okay, so just a very simple function,
100

100

00:04:25.018  -->  00:04:26.310
which takes two arguments
101

101

00:04:26.310  -->  00:04:28.713
and then returns the sum of a+b.
102

102

00:04:29.550  -->  00:04:31.750
This is here again, the arrow function syntax.
103

103

00:04:31.750  -->  00:04:35.290
I'm sure you're already familiar with that by now.
104

104

00:04:35.290  -->  00:04:37.740
Let's say we now want a similar function to this one here,
105

105

00:04:37.740  -->  00:04:39.253
which multiples two numbers.
106

106

00:04:41.490  -->  00:04:46.490
So multiply, and then again same as before,
107

107

00:04:46.890  -->  00:04:50.360
which will be a*b.
108

108

00:04:50.360  -->  00:04:52.827
Okay, so now we have two exports here.
109

109

00:04:52.827  -->  00:04:55.077
Now let's say we wanna export something else.
110

110

00:04:57.186  -->  00:05:01.370
For example, an ID set to the value of 23.
111

111

00:05:01.370  -->  00:05:05.130
Now we exported three things from this module.
112

112

00:05:05.130  -->  00:05:07.410
And then, if we wanna import it from here,
113

113

00:05:07.410  -->  00:05:10.200
it works in a slightly different way.
114

114

00:05:10.200  -->  00:05:11.530
Again, we have to say import.
115

115

00:05:11.530  -->  00:05:12.533
But then we have to specify
116

116

00:05:12.533  -->  00:05:15.690
what exactly we wanna import from the module.
117

117

00:05:15.690  -->  00:05:17.660
So we use the curly braces.
118

118

00:05:17.660  -->  00:05:21.230
And then just imagine that we want to add and then multiply.
119

119

00:05:21.230  -->  00:05:26.230
So we say add and multiply from
120

120

00:05:29.970  -->  00:05:33.040
and then view and then search view.
121

121

00:05:33.040  -->  00:05:35.839
And again, we omit the .js, right?
122

122

00:05:35.839  -->  00:05:40.010
So with this, we only imported the add and the multiply.
123

123

00:05:40.010  -->  00:05:41.783
And we have to use the exact same names
124

124

00:05:41.783  -->  00:05:46.240
that we exported here in these named exports.
125

125

00:05:46.240  -->  00:05:47.530
And that's why they're called names
126

126

00:05:47.530  -->  00:05:48.830
because we gave them a name
127

127

00:05:48.830  -->  00:05:50.080
and then, in order to import them,
128

128

00:05:50.080  -->  00:05:53.933
we have to use the exact same names if we want to use them.
129

129

00:05:53.933  -->  00:05:57.040
Now let's also add the ID.
130

130

00:05:57.040  -->  00:05:59.592
And so we can now use these.
131

131

00:05:59.592  -->  00:06:01.630
Let's get rid of this line.
132

132

00:06:01.630  -->  00:06:03.750
And now let's log all of this through console.
133

133

00:06:03.750  -->  00:06:05.073
So console.log.
134

134

00:06:07.350  -->  00:06:09.420
And a template string here
135

135

00:06:09.420  -->  00:06:11.697
using imported functions.
136

136

00:06:15.440  -->  00:06:20.150
And so let's see, add these functions actually or use them.
137

137

00:06:20.150  -->  00:06:21.280
So let's say add
138

138

00:06:22.380  -->  00:06:24.540
and then we can actually use ID,
139

139

00:06:24.540  -->  00:06:28.480
which is 23 and also pass two.
140

140

00:06:28.480  -->  00:06:31.820
So now we passed in the ID and two.
141

141

00:06:31.820  -->  00:06:34.960
So the two variables that are available to us right now.
142

142

00:06:34.960  -->  00:06:36.743
So add and ID.
143

143

00:06:40.130  -->  00:06:42.180
And let's use the other function here as well.
144

144

00:06:42.180  -->  00:06:43.463
So multiply.
145

145

00:06:47.620  -->  00:06:50.363
And now I can pass three and five.
146

146

00:06:51.480  -->  00:06:53.130
And also, since we're at it,
147

147

00:06:53.130  -->  00:06:56.490
let's also include the str, so the string,
148

148

00:06:56.490  -->  00:07:00.937
so we have everything in one console.log here.
149

149

00:07:00.937  -->  00:07:04.190
And now see we're missing here the curly brace here.
150

150

00:07:04.190  -->  00:07:06.890
And now we should be good to go.
151

151

00:07:06.890  -->  00:07:08.610
Okay, so that tested out.
152

152

00:07:08.610  -->  00:07:10.340
And actually it should already work.
153

153

00:07:10.340  -->  00:07:11.350
And it does.
154

154

00:07:11.350  -->  00:07:15.032
And that is because, here in the terminal,
155

155

00:07:15.032  -->  00:07:17.432
this process is still running, as you can see.
156

156

00:07:17.432  -->  00:07:20.660
Our def server is still bundling up
157

157

00:07:20.660  -->  00:07:24.080
all our JavaScript files as soon as we save the files.
158

158

00:07:24.080  -->  00:07:25.230
And so in here we have now,
159

159

00:07:25.230  -->  00:07:27.967
using imported functions 25 and 15.
160

160

00:07:27.967  -->  00:07:30.810
And so these are the results of the functions,
161

161

00:07:30.810  -->  00:07:32.360
the imported functions.
162

162

00:07:32.360  -->  00:07:33.430
So up here in this pop-up,
163

163

00:07:33.430  -->  00:07:36.350
it says 23 plus two is, of course, 25,
164

164

00:07:36.350  -->  00:07:38.053
and three times five is 15.
165

165

00:07:39.560  -->  00:07:41.370
Then here I am an exported string.
166

166

00:07:41.370  -->  00:07:44.090
So all of this is working just fine.
167

167

00:07:44.090  -->  00:07:47.210
Now imagine if we wanna use different names here.
168

168

00:07:47.210  -->  00:07:48.632
We can actually do that as well.
169

169

00:07:48.632  -->  00:07:50.963
All we have to do is say,
170

170

00:07:51.950  -->  00:07:54.230
add as a, for example.
171

171

00:07:54.230  -->  00:07:56.543
And multiply as m.
172

172

00:07:58.510  -->  00:07:59.980
Okay, and then just ID.
173

173

00:07:59.980  -->  00:08:03.155
And so now we can use a and m in here.
174

174

00:08:03.155  -->  00:08:05.510
Okay, so let's give it a save.
175

175

00:08:05.510  -->  00:08:07.903
Go back and it still works.
176

176

00:08:08.920  -->  00:08:10.760
So we basically changed the names
177

177

00:08:10.760  -->  00:08:12.160
of the imported variables,
178

178

00:08:12.160  -->  00:08:14.020
so the imported functions here, in this case.
179

179

00:08:14.020  -->  00:08:16.650
But they're still variables, so it's the same.
180

180

00:08:16.650  -->  00:08:19.070
Okay, we can export them using one name
181

181

00:08:19.070  -->  00:08:22.920
and then import them and assign them another name
182

182

00:08:22.920  -->  00:08:25.910
by simply using this as syntax here.
183

183

00:08:25.910  -->  00:08:28.620
So this is the second way of doing named imports
184

184

00:08:28.620  -->  00:08:30.230
coming from named exports.
185

185

00:08:30.230  -->  00:08:33.600
Now the third way is a bit different.
186

186

00:08:33.600  -->  00:08:36.120
But there is actually still a third way.
187

187

00:08:36.120  -->  00:08:39.090
And so let me actually comment this one out.
188

188

00:08:39.090  -->  00:08:40.650
And start it again.
189

189

00:08:40.650  -->  00:08:44.900
So I can say import everything from this here.
190

190

00:08:44.900  -->  00:08:46.100
So let's copy this part.
191

191

00:08:47.750  -->  00:08:49.830
And so I can do it like this.
192

192

00:08:49.830  -->  00:08:52.130
And then I also have to give it a name here.
193

193

00:08:52.130  -->  00:08:54.100
Import everything as,
194

194

00:08:54.100  -->  00:08:55.700
and let's just say, search view.
195

195

00:08:56.740  -->  00:08:59.700
Okay, so everything is now called search view
196

196

00:08:59.700  -->  00:09:01.550
from views slash search view.
197

197

00:09:01.550  -->  00:09:03.540
Alright, and if you now wanna go ahead
198

198

00:09:03.540  -->  00:09:05.810
and use the stuff that we exported here,
199

199

00:09:05.810  -->  00:09:07.440
we have to do it like this.
200

200

00:09:07.440  -->  00:09:11.760
So we have to use searchview.add.
201

201

00:09:11.760  -->  00:09:16.760
And here we have to add searchview.multiply.
202

202

00:09:18.870  -->  00:09:23.870
And here, of course, we also have to use searchview.id.
203

203

00:09:24.840  -->  00:09:26.810
Okay, let's check it out again.
204

204

00:09:26.810  -->  00:09:28.780
And here it is.
205

205

00:09:28.780  -->  00:09:31.440
So still working just the exact same way.
206

206

00:09:31.440  -->  00:09:34.353
So that is the third way of doing named imports.
207

207

00:09:35.280  -->  00:09:37.760
Again, here we import basically everything
208

208

00:09:37.760  -->  00:09:41.120
and put it into this variable here or this object.
209

209

00:09:41.120  -->  00:09:44.760
And on this object is where all of the variables then live.
210

210

00:09:44.760  -->  00:09:46.320
So we can then use them.
211

211

00:09:46.320  -->  00:09:50.483
Here searchview.add, .multiply and .id.
212

212

00:09:51.450  -->  00:09:52.810
And there are different use cases
213

213

00:09:52.810  -->  00:09:55.720
where we can use these different methods.
214

214

00:09:55.720  -->  00:09:57.210
And then we are going to use all of them
215

215

00:09:57.210  -->  00:09:58.500
throughout this project.
216

216

00:09:58.500  -->  00:10:00.148
But I just wanted to make a separate video
217

217

00:10:00.148  -->  00:10:03.397
in order for you to learn how modules work
218

218

00:10:03.397  -->  00:10:05.200
all in one video.
219

219

00:10:05.200  -->  00:10:08.022
Okay, we can get rid of all of this here now
220

220

00:10:08.022  -->  00:10:09.749
after learning this.
221

221

00:10:09.749  -->  00:10:12.743
So this was, again, just to test it.
222

222

00:10:14.370  -->  00:10:16.820
And so now we're good to go
223

223

00:10:16.820  -->  00:10:19.960
and really ready to start with the project
224

224

00:10:19.960  -->  00:10:21.520
right in the next video.
225

225

00:10:21.520  -->  00:10:23.523
I hope to see you there very soon.
