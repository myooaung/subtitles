1
1

00:00:01,138  -->  00:00:04,078
<v Male>After the theory about the This Keyword</v>
2

2

00:00:04,078  -->  00:00:05,995
now comes the practice.
3

3

00:00:06,856  -->  00:00:10,052
So let's start and simply log the This Keyword
4

4

00:00:10,052  -->  00:00:12,850
for this global execution context.
5

5

00:00:12,850  -->  00:00:16,267
So all we have to do is console.log this.
6

6

00:00:19,151  -->  00:00:21,484
And what can we expect here?
7

7

00:00:24,016  -->  00:00:28,439
Alright, so all this means is that the This Keyword
8

8

00:00:28,439  -->  00:00:30,560
in the global execution context
9

9

00:00:30,560  -->  00:00:33,248
is very simply the window object,
10

10

00:00:33,248  -->  00:00:35,448
and that makes sense, right?
11

11

00:00:35,448  -->  00:00:38,789
That's because the window object is the default object
12

12

00:00:38,789  -->  00:00:41,300
as we learned in the last lecture.
13

13

00:00:41,300  -->  00:00:45,360
Okay, let's come on out to this part of the code
14

14

00:00:45,360  -->  00:00:47,070
and let's write a simple function.
15

15

00:00:47,070  -->  00:00:48,661
And once again, we're going back
16

16

00:00:48,661  -->  00:00:51,161
to our calculate age function,
17

17

00:00:52,707  -->  00:00:55,790
because we already know that so well.
18

18

00:01:00,738  -->  00:01:04,738
Alright, so console.log and 2016 minus the year,
19

19

00:01:11,601  -->  00:01:14,210
and what we also want here
20

20

00:01:14,210  -->  00:01:18,043
is to console log the This Keyword once again.
21

21

00:01:21,233  -->  00:01:22,917
This...
22

22

00:01:22,917  -->  00:01:24,418
Alright and when we call this function,
23

23

00:01:24,418  -->  00:01:27,056
what can we expect this time?
24

24

00:01:27,056  -->  00:01:30,977
Actually we have to write the function call up here,
25

25

00:01:30,977  -->  00:01:34,560
so calculateAge, I'm going to go with 1985.
26

26

00:01:37,886  -->  00:01:40,068
So let's refresh this,
27

27

00:01:40,068  -->  00:01:42,956
and try to guess what we're gonna see now.
28

28

00:01:42,956  -->  00:01:46,128
So we first have the result of thirty-one,
29

29

00:01:46,128  -->  00:01:48,096
which comes from this log here,
30

30

00:01:48,096  -->  00:01:52,456
and the This Variable is once again the window object.
31

31

00:01:52,456  -->  00:01:54,456
So does this make any sense to you?
32

32

00:01:54,456  -->  00:01:58,258
I hope so, because this is a regular function code
33

33

00:01:58,258  -->  00:02:02,205
and not a method, as we learned in the last lecture.
34

34

00:02:02,205  -->  00:02:04,606
In a regular function code, the This Keyword
35

35

00:02:04,606  -->  00:02:08,134
always points to the window object.
36

36

00:02:08,134  -->  00:02:09,607
And it actually makes sense,
37

37

00:02:09,607  -->  00:02:13,060
because the object that this function is attached to
38

38

00:02:13,060  -->  00:02:16,539
is the global object, and it actually makes sense.
39

39

00:02:16,539  -->  00:02:19,848
Because the object that this function is attached to
40

40

00:02:19,848  -->  00:02:21,988
is the global object.
41

41

00:02:21,988  -->  00:02:24,626
So it has to be the This variable here as well.
42

42

00:02:24,626  -->  00:02:27,926
Okay, so another method a regular function code,
43

43

00:02:27,926  -->  00:02:31,598
so the This Variable is the global object.
44

44

00:02:31,598  -->  00:02:35,307
So let's move on to an object here,
45

45

00:02:35,307  -->  00:02:38,724
and we'll go back to our old John object.
46

46

00:02:42,197  -->  00:02:44,364
So, name... John.
47

47

00:02:48,235  -->  00:02:51,736
And here's not a semicolon, but a normal coma.
48

48

00:02:51,736  -->  00:02:54,653
Then yearOfBirth is 1990.
49

49

00:02:58,793  -->  00:03:01,375
And let's now add a method here,
50

50

00:03:01,375  -->  00:03:05,865
and it will be our calculate age method once again.
51

51

00:03:05,865  -->  00:03:08,448
So calculateAge and once again,
52

52

00:03:13,032  -->  00:03:16,213
this is a little bit different than what we had before.
53

53

00:03:16,213  -->  00:03:19,454
Right, because this is like a function expression
54

54

00:03:19,454  -->  00:03:22,133
and not a function declaration.
55

55

00:03:22,133  -->  00:03:26,300
So in here we can also console log the This Keyword,
56

56

00:03:28,516  -->  00:03:33,075
but first of all, we have to perform the method code.
57

57

00:03:33,075  -->  00:03:35,344
And that's as simple as this.
58

58

00:03:35,344  -->  00:03:39,344
So we use John, and then we use the calculateAge
59

59

00:03:43,003  -->  00:03:45,194
method on it.
60

60

00:03:45,194  -->  00:03:47,661
So what's going to happen now,
61

61

00:03:47,661  -->  00:03:51,828
and let me actually comment out this part of the code.
62

62

00:03:53,923  -->  00:03:55,506
Alright.
63

63

00:03:56,676  -->  00:03:59,927
So the This Variable now is the John object
64

64

00:03:59,927  -->  00:04:02,315
and it makes absolute sense, right?
65

65

00:04:02,315  -->  00:04:04,347
Because, as we know, the This Keyword
66

66

00:04:04,347  -->  00:04:07,578
refers to the object that called the method.
67

67

00:04:07,578  -->  00:04:09,746
In this case, it was the John object,
68

68

00:04:09,746  -->  00:04:11,877
so, of course, it has to be the This Variable.
69

69

00:04:11,877  -->  00:04:14,506
And we actually already saw this in action before
70

70

00:04:14,506  -->  00:04:17,406
in the introductory lecture about objects
71

71

00:04:17,406  -->  00:04:19,577
but at the time we didn't really understand it,
72

72

00:04:19,577  -->  00:04:21,707
but now it makes total sense
73

73

00:04:21,707  -->  00:04:26,104
why the This Keyword refers to the John object, right?
74

74

00:04:26,104  -->  00:04:29,943
And now it also makes sense why we now can use this
75

75

00:04:29,943  -->  00:04:31,943
to calculate John's age.
76

76

00:04:33,355  -->  00:04:36,605
So console log this.yearOfBirth, right?
77

77

00:04:40,667  -->  00:04:43,366
So let's run this again.... sorry.
78

78

00:04:43,366  -->  00:04:46,106
And then we have the final result.
79

79

00:04:46,106  -->  00:04:50,273
No, of course not, because it's of course 2016 minus this.
80

80

00:04:51,896  -->  00:04:53,764
Alright, here we go.
81

81

00:04:53,764  -->  00:04:57,256
Now let's take this even a bit further here,
82

82

00:04:57,256  -->  00:05:00,235
and what we're going to do is to add a function
83

83

00:05:00,235  -->  00:05:04,152
inside of the calculate age function or method.
84

84

00:05:05,567  -->  00:05:09,734
So I'm simply going to call it innerFunction, okay.
85

85

00:05:13,304  -->  00:05:17,844
So this function will not really do anything.
86

86

00:05:17,844  -->  00:05:22,011
I just want to console log the This Keyword in here as well.
87

87

00:05:24,901  -->  00:05:29,068
Alright and then we can call it, of course, innerFunction
88

88

00:05:30,494  -->  00:05:33,723
and just like this because it doesn't have any parameters.
89

89

00:05:33,723  -->  00:05:37,462
So now, when we call the calculateAge method down here,
90

90

00:05:37,462  -->  00:05:42,428
not only will these two console logs here happen, right,
91

91

00:05:42,428  -->  00:05:46,892
but also this function will be declared and then called,
92

92

00:05:46,892  -->  00:05:51,542
and therefore the This Keyword will be logged as well.
93

93

00:05:51,542  -->  00:05:53,921
And now try to guess what the This Keyword
94

94

00:05:53,921  -->  00:05:55,588
is going to be like.
95

95

00:05:57,611  -->  00:06:01,611
Alright, so once again, the This Keyword in here
96

96

00:06:02,730  -->  00:06:05,752
is the John object, as expected.
97

97

00:06:05,752  -->  00:06:07,982
Then the outcome is, of course, twenty-six
98

98

00:06:07,982  -->  00:06:10,251
as we had before, but now comes something
99

99

00:06:10,251  -->  00:06:13,001
that looks rather strange, right.
100

100

00:06:14,155  -->  00:06:16,558
And that's the fact that the This Keyword
101

101

00:06:16,558  -->  00:06:18,140
in this inner function here
102

102

00:06:18,140  -->  00:06:21,350
is now back to being the window.
103

103

00:06:21,350  -->  00:06:23,731
And this is a bit counter-intuitive, right?
104

104

00:06:23,731  -->  00:06:26,610
And in fact, some people in the JavaScript community
105

105

00:06:26,610  -->  00:06:29,289
agree with this, and other don't agree.
106

106

00:06:29,289  -->  00:06:33,140
Some people think that the This Keyword in here
107

107

00:06:33,140  -->  00:06:37,430
should still be the object, the John object, right?
108

108

00:06:37,430  -->  00:06:41,330
But to me, actually, it makes sense that it's not
109

109

00:06:41,330  -->  00:06:42,908
because it's simply the rule.
110

110

00:06:42,908  -->  00:06:46,219
And the rule is that when a regular function code happens,
111

111

00:06:46,219  -->  00:06:50,088
then the default object is the window object,
112

112

00:06:50,088  -->  00:06:53,008
at least that's how it happens in the browser.
113

113

00:06:53,008  -->  00:06:54,978
So once again this is not a method,
114

114

00:06:54,978  -->  00:06:57,130
because the method is called calculateAge,
115

115

00:06:57,130  -->  00:06:59,388
so it's method of the John object.
116

116

00:06:59,388  -->  00:07:00,576
But this function here,
117

117

00:07:00,576  -->  00:07:03,806
although it's written inside of a method,
118

118

00:07:03,806  -->  00:07:06,049
it's still a regular function.
119

119

00:07:06,049  -->  00:07:08,060
So when we call it the This Keyword
120

120

00:07:08,060  -->  00:07:11,120
will no longer point to the John object,
121

121

00:07:11,120  -->  00:07:14,118
but instead point to the window object.
122

122

00:07:14,118  -->  00:07:15,909
Okay and this is something very important
123

123

00:07:15,909  -->  00:07:17,729
to keep in mind for the future,
124

124

00:07:17,729  -->  00:07:20,370
and also for future projects.
125

125

00:07:20,370  -->  00:07:23,168
And now that this is really crystal clear,
126

126

00:07:23,168  -->  00:07:26,639
let's now complicate things a little bit more.
127

127

00:07:26,639  -->  00:07:29,690
So remember how I said that the This Variable is
128

128

00:07:29,690  -->  00:07:34,488
only assigned a value as soon as an object calls a method.
129

129

00:07:34,488  -->  00:07:38,409
So, I said this was important, so let's now see an example.
130

130

00:07:38,409  -->  00:07:42,098
And for that, I'm going to create another object
131

131

00:07:42,098  -->  00:07:44,816
which will be called Mike.
132

132

00:07:44,816  -->  00:07:48,068
Var mike will be another object,
133

133

00:07:48,068  -->  00:07:51,485
and his name will now be Mike, of course.
134

134

00:07:55,887  -->  00:07:59,470
The yearOfBirth can be something like 1984.
135

135

00:08:02,426  -->  00:08:04,859
Alright, now imagine that we want
136

136

00:08:04,859  -->  00:08:07,276
to calculate the age of Mike.
137

137

00:08:08,278  -->  00:08:10,937
So one thing that we could do is, of course,
138

138

00:08:10,937  -->  00:08:14,768
to go ahead and copy this calculate method here
139

139

00:08:14,768  -->  00:08:17,067
and paste it here in the Mike object.
140

140

00:08:17,067  -->  00:08:19,499
But we could be really smart,
141

141

00:08:19,499  -->  00:08:22,985
and instead do something that's actually a very common
142

142

00:08:22,985  -->  00:08:25,180
practice in JavaScript and that we will also
143

143

00:08:25,180  -->  00:08:26,808
use more in the future.
144

144

00:08:26,808  -->  00:08:29,147
And that's something called Method Borrowing.
145

145

00:08:29,147  -->  00:08:33,179
We are going to borrow John's method to use it on Mike.
146

146

00:08:33,179  -->  00:08:34,659
And how are we going to do it?
147

147

00:08:34,659  -->  00:08:35,958
It's very simple.
148

148

00:08:35,958  -->  00:08:39,458
We just say that we want mike.calculateAge
149

149

00:08:42,792  -->  00:08:45,792
to be john.calculateAge.
150

150

00:08:48,048  -->  00:08:49,288
Simple, right?
151

151

00:08:49,288  -->  00:08:50,906
So you see that in this case we don't have
152

152

00:08:50,906  -->  00:08:53,087
the parenthesis because these parenthesis
153

153

00:08:53,087  -->  00:08:55,547
are for calling a function, and now,
154

154

00:08:55,547  -->  00:08:58,886
we simply treat the function here as a variable.
155

155

00:08:58,886  -->  00:09:02,957
And so we can say that we want the mike.calculateAge
156

156

00:09:02,957  -->  00:09:05,376
function to be the exact same as
157

157

00:09:05,376  -->  00:09:09,543
john.calculateAge function, which is this one here, right?
158

158

00:09:11,336  -->  00:09:14,887
Alright and if we now go ahead and use the function
159

159

00:09:14,887  -->  00:09:18,997
calculateAge, because now I wanna really call it,
160

160

00:09:18,997  -->  00:09:20,914
so I use the parenthesis.
161

161

00:09:20,914  -->  00:09:24,718
So now, I'm going to go ahead and call the function.
162

162

00:09:24,718  -->  00:09:28,358
But first, I will actually make it a bit simpler.
163

163

00:09:28,358  -->  00:09:32,525
So, I don't want this code here anymore to get in my way,
164

164

00:09:33,458  -->  00:09:37,625
so I'm now going to call it and what are we going to see?
165

165

00:09:38,487  -->  00:09:43,158
Alright, so from the john.calculateAge call here,
166

166

00:09:43,158  -->  00:09:47,587
comes the John object and the twenty-six age of John.
167

167

00:09:47,587  -->  00:09:49,656
So exactly what we had before.
168

168

00:09:49,656  -->  00:09:53,823
But when we now call the calculateAge method for Mike,
169

169

00:09:54,727  -->  00:09:56,408
which we had borrowed,
170

170

00:09:56,408  -->  00:09:59,066
then the object becomes the Mike object,
171

171

00:09:59,066  -->  00:10:01,978
and now we have Mike's age here.
172

172

00:10:01,978  -->  00:10:04,186
So this is truly amazing, right?
173

173

00:10:04,186  -->  00:10:07,425
And this proves what I have said in the beginning,
174

174

00:10:07,425  -->  00:10:10,785
which is that the This Variable is only assigned a value
175

175

00:10:10,785  -->  00:10:13,437
when the object calls the method.
176

176

00:10:13,437  -->  00:10:15,126
So if it wouldn't be like this,
177

177

00:10:15,126  -->  00:10:19,293
then this This Variable here would always be John, right?
178

178

00:10:20,265  -->  00:10:23,677
Because it's in fact attached to the John object.
179

179

00:10:23,677  -->  00:10:27,978
But when we now call this same method from the Mike object,
180

180

00:10:27,978  -->  00:10:32,099
then the This Variable becomes the Mike object.
181

181

00:10:32,099  -->  00:10:35,708
So again, the This Keyword only becomes something
182

182

00:10:35,708  -->  00:10:38,907
as soon as the method gets called.
183

183

00:10:38,907  -->  00:10:41,269
And this something really important once again.
184

184

00:10:41,269  -->  00:10:44,479
Okay, so I hope that this is really crystal clear now.
185

185

00:10:44,479  -->  00:10:49,079
And with this, we reach the end of our theoretical lectures.
186

186

00:10:49,079  -->  00:10:51,027
And for me it's really good to see
187

187

00:10:51,027  -->  00:10:52,600
that you're still with me
188

188

00:10:52,600  -->  00:10:55,470
after all of these more eratic lectures.
189

189

00:10:55,470  -->  00:10:59,569
And believe me, that these lectures were really worth it,
190

190

00:10:59,569  -->  00:11:01,737
and they will absolutely make you
191

191

00:11:01,737  -->  00:11:03,998
a better developer over time.
192

192

00:11:03,998  -->  00:11:06,038
And even if you don't understand it now,
193

193

00:11:06,038  -->  00:11:08,149
I'm sure that you will eventually.
194

194

00:11:08,149  -->  00:11:10,979
And so, from now on, we can build on
195

195

00:11:10,979  -->  00:11:13,089
what we've learned so far,
196

196

00:11:13,089  -->  00:11:15,837
and we can now focus even more on coding.
197

197

00:11:15,837  -->  00:11:18,479
So let's continue doing that right now.
198

198

00:11:18,479  -->  00:11:20,812
See you in the next lecture.
