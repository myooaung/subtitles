WEBVTT
1
1

00:00:01.120  -->  00:00:03.290
<v Jonas>Alright, here goes my solution</v>
2

2

00:00:03.290  -->  00:00:05.730
for the first part of the coding challenge
3

3

00:00:05.730  -->  00:00:07.570
that I just showed you.
4

4

00:00:07.570  -->  00:00:09.833
So, I start by creating the John object,
5

5

00:00:10.850  -->  00:00:12.950
set object literal again,
6

6

00:00:12.950  -->  00:00:15.093
then the full name, John Smith.
7

7

00:00:21.290  -->  00:00:22.910
And then an array of the bills,
8

8

00:00:22.910  -->  00:00:25.490
just as it says in the instructions.
9

9

00:00:25.490  -->  00:00:30.490
And the bills are 124, 48, 268, 180, and 42 dollars.
10

10

00:00:36.120  -->  00:00:38.080
Okay, and that's all the data that we need.
11

11

00:00:38.080  -->  00:00:40.780
Now we're already ready to write
12

12

00:00:40.780  -->  00:00:45.780
our calcTips function, or method I should say.
13

13

00:00:46.650  -->  00:00:49.210
So, function without any argument,
14

14

00:00:49.210  -->  00:00:50.840
such like before.
15

15

00:00:50.840  -->  00:00:53.780
And so, this challenge here is actually
16

16

00:00:53.780  -->  00:00:55.590
a bit similar to the one before
17

17

00:00:55.590  -->  00:00:57.680
where we calculated the BMIs
18

18

00:00:57.680  -->  00:00:59.170
for John and Mark.
19

19

00:00:59.170  -->  00:01:00.730
The only difference is that this time
20

20

00:01:00.730  -->  00:01:02.120
we also need some loops
21

21

00:01:02.120  -->  00:01:04.960
and so that adds a new level of complexity
22

22

00:01:04.960  -->  00:01:06.550
to this functioning.
23

23

00:01:06.550  -->  00:01:08.940
Alright, so, remember how I said
24

24

00:01:08.940  -->  00:01:11.680
that you should start with an empty array
25

25

00:01:11.680  -->  00:01:14.680
for both the tips, and the final values?
26

26

00:01:14.680  -->  00:01:16.800
And while you could do that,
27

27

00:01:16.800  -->  00:01:18.810
you can do it like this.
28

28

00:01:18.810  -->  00:01:22.810
So, tips, and then here, an empty array,
29

29

00:01:22.810  -->  00:01:24.670
but I figured that would be a bit cleaner
30

30

00:01:24.670  -->  00:01:26.410
to start without a tear
31

31

00:01:26.410  -->  00:01:29.100
and instead, as soon as we run the function,
32

32

00:01:29.100  -->  00:01:32.470
then we add these empty arrays to our object.
33

33

00:01:32.470  -->  00:01:34.980
Okay, so, how do we do that?
34

34

00:01:34.980  -->  00:01:38.140
Well, we just say this dot tips
35

35

00:01:39.130  -->  00:01:41.500
equals an empty array,
36

36

00:01:41.500  -->  00:01:45.320
and then also this dot final values
37

37

00:01:46.830  -->  00:01:48.730
is also an empty array.
38

38

00:01:48.730  -->  00:01:51.060
Okay, so I'm giving it the same names
39

39

00:01:51.060  -->  00:01:52.920
as I did in the other tip calculator.
40

40

00:01:52.920  -->  00:01:54.500
So, tips will be the array
41

41

00:01:54.500  -->  00:01:56.500
with all of the five tips.
42

42

00:01:56.500  -->  00:01:57.990
So, one for each of these bills,
43

43

00:01:57.990  -->  00:02:00.710
and then the final values is the array
44

44

00:02:00.710  -->  00:02:02.160
where we will have the sum
45

45

00:02:02.160  -->  00:02:04.530
of each tip with each bill.
46

46

00:02:04.530  -->  00:02:06.900
Okay, so now we have to loop through the bills
47

47

00:02:06.900  -->  00:02:08.410
in order to calculate the tip
48

48

00:02:08.410  -->  00:02:10.810
for each of these values.
49

49

00:02:10.810  -->  00:02:12.560
Okay, and so, of course we're going to use
50

50

00:02:12.560  -->  00:02:16.150
the four loop, such as we learned in the last lecture.
51

51

00:02:16.150  -->  00:02:20.520
Four, and restarting at I zero,
52

52

00:02:20.520  -->  00:02:22.970
and we're going until I reaches the length
53

53

00:02:22.970  -->  00:02:24.630
of the bills array.
54

54

00:02:24.630  -->  00:02:27.320
So, once more, it's the exact same thing
55

55

00:02:27.320  -->  00:02:28.830
as we did in the last lecture.
56

56

00:02:28.830  -->  00:02:29.970
Okay, so we're just applying
57

57

00:02:29.970  -->  00:02:31.720
what we just learned before.
58

58

00:02:31.720  -->  00:02:33.500
So, where is this bills?
59

59

00:02:33.500  -->  00:02:36.420
Well, it's at this dot bills
60

60

00:02:36.420  -->  00:02:38.210
and then dot length.
61

61

00:02:38.210  -->  00:02:40.770
And so, here you see something for the first time,
62

62

00:02:40.770  -->  00:02:43.150
which is two dots.
63

63

00:02:43.150  -->  00:02:46.010
Okay, and actually the dot is an operator.
64

64

00:02:46.010  -->  00:02:48.330
So, let's go to our operator precedence table
65

65

00:02:48.330  -->  00:02:49.740
that is still opened here,
66

66

00:02:49.740  -->  00:02:51.690
and here you have this operator
67

67

00:02:51.690  -->  00:02:54.050
which is called the member access.
68

68

00:02:54.050  -->  00:02:55.710
Okay, and we see that this one
69

69

00:02:55.710  -->  00:02:58.810
is executed from left to right.
70

70

00:02:58.810  -->  00:03:01.760
Alright, and so this is why this works.
71

71

00:03:01.760  -->  00:03:03.070
So, here is the first one.
72

72

00:03:03.070  -->  00:03:04.400
So, the first dot.
73

73

00:03:04.400  -->  00:03:06.200
And so this dot bills
74

74

00:03:06.200  -->  00:03:08.320
is the first part that will be executed.
75

75

00:03:08.320  -->  00:03:09.690
And so, this here will be basically
76

76

00:03:09.690  -->  00:03:11.800
replaced with this array.
77

77

00:03:11.800  -->  00:03:14.137
And so, we end up having this array here
78

78

00:03:14.137  -->  00:03:17.450
and then after that, we retain the length property,
79

79

00:03:17.450  -->  00:03:19.400
this one here, of that array.
80

80

00:03:19.400  -->  00:03:21.320
Okay, so, if it was the other way around,
81

81

00:03:21.320  -->  00:03:23.013
if we started reading this way here,
82

82

00:03:23.013  -->  00:03:24.430
then it wouldn't work at all
83

83

00:03:24.430  -->  00:03:27.330
because bills dot length would be something anon.
84

84

00:03:27.330  -->  00:03:28.163
So, it wouldn't exist
85

85

00:03:28.163  -->  00:03:30.720
because all that exists is this dot bills.
86

86

00:03:30.720  -->  00:03:32.120
And so, of course it makes a lot
87

87

00:03:32.120  -->  00:03:34.170
of sense that we start basically reading
88

88

00:03:34.170  -->  00:03:37.170
that we start executing from left to right.
89

89

00:03:37.170  -->  00:03:38.910
So, that was just a small detail,
90

90

00:03:38.910  -->  00:03:40.240
but I think it's important to really
91

91

00:03:40.240  -->  00:03:41.810
understand why these things
92

92

00:03:41.810  -->  00:03:43.420
actually work the way they do.
93

93

00:03:43.420  -->  00:03:45.210
Okay, I hope you agree with that.
94

94

00:03:45.210  -->  00:03:46.823
So, I plus plus.
95

95

00:03:48.710  -->  00:03:50.340
Alright, makes sense.
96

96

00:03:50.340  -->  00:03:52.170
So again, we're going all the way
97

97

00:03:52.170  -->  00:03:55.020
until we reach the length of the builds array.
98

98

00:03:55.020  -->  00:03:56.330
Which is six in this case.
99

99

00:03:56.330  -->  00:04:00.200
So, we execute it for 0123 and four.
100

100

00:04:00.200  -->  00:04:02.720
Okay, so the length is not six, it's five.
101

101

00:04:02.720  -->  00:04:05.310
I think I said six, but of course it's five.
102

102

00:04:05.310  -->  00:04:08.310
Alright, so what are we going to do in each duration?
103

103

00:04:08.310  -->  00:04:09.590
Well, just like before,
104

104

00:04:09.590  -->  00:04:11.510
we are going to determine the percentage
105

105

00:04:11.510  -->  00:04:13.470
based on the tipping rules.
106

106

00:04:13.470  -->  00:04:15.270
Okay, so let's write that down here.
107

107

00:04:20.710  -->  00:04:22.370
Okay, and so I actually,
108

108

00:04:22.370  -->  00:04:24.620
I like to add these comments here
109

109

00:04:24.620  -->  00:04:26.940
in order to figure out beforehand,
110

110

00:04:26.940  -->  00:04:29.040
before actually writing the code.
111

111

00:04:29.040  -->  00:04:30.710
So, we determined the percentage
112

112

00:04:30.710  -->  00:04:32.770
and then we add the result
113

113

00:04:35.330  -->  00:04:36.833
to the corresponding arrays.
114

114

00:04:40.220  -->  00:04:42.420
So, this is the same stuff that we did before.
115

115

00:04:42.420  -->  00:04:44.900
So, we define the percentage
116

116

00:04:46.760  -->  00:04:49.070
without actually specifying it.
117

117

00:04:49.070  -->  00:04:50.640
So we just declare the variable here
118

118

00:04:50.640  -->  00:04:52.080
but do not define it.
119

119

00:04:52.080  -->  00:04:54.273
And we do that based on the bill.
120

120

00:04:55.490  -->  00:05:00.490
So, if the bill is less than 50, remember.
121

121

00:05:00.900  -->  00:05:03.053
So, that's the rule that we have up here.
122

122

00:05:04.320  -->  00:05:06.550
So, if the bill is less than 50
123

123

00:05:06.550  -->  00:05:08.430
then the tip is 20 percent,
124

124

00:05:08.430  -->  00:05:11.130
it is 15 percent if it's between 50
125

125

00:05:11.130  -->  00:05:13.870
and 200 dollars, and it's 10 percent
126

126

00:05:13.870  -->  00:05:16.180
if it's more than 200 dollars.
127

127

00:05:16.180  -->  00:05:17.200
Alright, and so, we are going
128

128

00:05:17.200  -->  00:05:20.160
to translate that here into code.
129

129

00:05:20.160  -->  00:05:23.100
Okay, and actually, bill is not something
130

130

00:05:23.100  -->  00:05:24.960
that we have defined.
131

131

00:05:24.960  -->  00:05:26.100
So, sorry for that.
132

132

00:05:26.100  -->  00:05:28.060
So, it's not bill, but instead,
133

133

00:05:28.060  -->  00:05:29.480
what do we have here?
134

134

00:05:29.480  -->  00:05:33.730
We have this dot bills, add to current position.
135

135

00:05:33.730  -->  00:05:35.430
Okay, so maybe this is starting
136

136

00:05:35.430  -->  00:05:37.690
to become a bit confusing.
137

137

00:05:37.690  -->  00:05:39.500
Okay, and I totally get that.
138

138

00:05:39.500  -->  00:05:41.100
And I actually mentioned before,
139

139

00:05:41.100  -->  00:05:43.810
that was kind of the goal of this challenge.
140

140

00:05:43.810  -->  00:05:45.250
Not to be confusing to you,
141

141

00:05:45.250  -->  00:05:48.000
but to make you think a little bit about
142

142

00:05:48.000  -->  00:05:48.890
how the things work.
143

143

00:05:48.890  -->  00:05:51.270
So, how can we solve this kind of problems?
144

144

00:05:51.270  -->  00:05:53.570
Okay, so this dot bills
145

145

00:05:53.570  -->  00:05:55.750
is our array with the bills.
146

146

00:05:55.750  -->  00:05:57.820
Right, and what we do here with the loop,
147

147

00:05:57.820  -->  00:06:00.220
is to loop exactly through that array.
148

148

00:06:00.220  -->  00:06:01.630
And so, it only makes sense
149

149

00:06:01.630  -->  00:06:04.250
that we then access the current position
150

150

00:06:04.250  -->  00:06:08.150
of this array using the current counter variable.
151

151

00:06:08.150  -->  00:06:09.950
Okay, and that's always I,
152

152

00:06:09.950  -->  00:06:11.860
just as we learned in the last lecture.
153

153

00:06:11.860  -->  00:06:13.870
Alright, and so, let's now define
154

154

00:06:13.870  -->  00:06:17.260
the percentage for this bill value,
155

155

00:06:17.260  -->  00:06:19.120
and that will be point two.
156

156

00:06:19.120  -->  00:06:21.330
Okay, so, 20 percent.
157

157

00:06:23.080  -->  00:06:26.763
Then else, and I actually grab this one here.
158

158

00:06:29.910  -->  00:06:33.523
So, if it is larger, or equal 50,
159

159

00:06:34.840  -->  00:06:39.200
and at the same time it should be less than 200.
160

160

00:06:39.200  -->  00:06:40.930
Right, so that it stays exactly
161

161

00:06:40.930  -->  00:06:42.883
between 50 and 200.
162

162

00:06:44.020  -->  00:06:44.880
So, in this case,
163

163

00:06:44.880  -->  00:06:47.723
the percentage is going to be point 15.
164

164

00:06:48.760  -->  00:06:51.023
And then finally, in all other cases,
165

165

00:06:52.060  -->  00:06:55.143
the percentage is going to be point one.
166

166

00:06:56.400  -->  00:06:57.850
Okay, now as you see here,
167

167

00:06:57.850  -->  00:06:59.970
we have a lot of duplicate code here.
168

168

00:06:59.970  -->  00:07:03.380
So, this dot bills and then I,
169

169

00:07:03.380  -->  00:07:05.570
we have repeated it here three times.
170

170

00:07:05.570  -->  00:07:07.410
And so lets actually create
171

171

00:07:07.410  -->  00:07:09.470
a separate variable for that.
172

172

00:07:09.470  -->  00:07:10.870
So, lets call that one bill.
173

173

00:07:13.330  -->  00:07:15.390
Okay, and to before doing anything here
174

174

00:07:15.390  -->  00:07:17.310
we simply create a variable
175

175

00:07:17.310  -->  00:07:20.410
where we store the current bill value.
176

176

00:07:20.410  -->  00:07:22.070
Alright, so we can now go ahead
177

177

00:07:22.070  -->  00:07:23.980
and replace all of these here.
178

178

00:07:23.980  -->  00:07:25.450
And so, that's a bit better.
179

179

00:07:25.450  -->  00:07:27.450
So, instead of repeating the same code
180

180

00:07:27.450  -->  00:07:30.050
multiple times, we just store the value
181

181

00:07:30.050  -->  00:07:31.600
and a variable.
182

182

00:07:31.600  -->  00:07:33.760
Okay, so that is much better.
183

183

00:07:33.760  -->  00:07:36.320
Okay, so for each of the bills
184

184

00:07:36.320  -->  00:07:38.660
we have now figured out the percentage.
185

185

00:07:38.660  -->  00:07:39.660
So, all we have to do now
186

186

00:07:39.660  -->  00:07:41.640
is to edit to the tips,
187

187

00:07:41.640  -->  00:07:43.810
and to the final values array.
188

188

00:07:43.810  -->  00:07:47.660
So, this dot tips at the current position.
189

189

00:07:47.660  -->  00:07:49.013
Remember, that is I.
190

190

00:07:50.500  -->  00:07:52.170
Well, and now it's very simple.
191

191

00:07:52.170  -->  00:07:54.550
It's the bill variable that we defined before.
192

192

00:07:54.550  -->  00:07:56.833
So, this dot bills at the current position,
193

193

00:07:57.970  -->  00:07:59.720
times the percentage.
194

194

00:07:59.720  -->  00:08:02.020
And so, this part here is exactly the same
195

195

00:08:02.020  -->  00:08:04.710
as in the first, in the more simpler version
196

196

00:08:04.710  -->  00:08:06.393
of our tip calculator, right?
197

197

00:08:07.430  -->  00:08:10.810
And now finally, this dot final values,
198

198

00:08:10.810  -->  00:08:13.130
add to current position,
199

199

00:08:13.130  -->  00:08:16.320
will be the bill plus the this dot tips
200

200

00:08:16.320  -->  00:08:17.270
at the current position.
201

201

00:08:17.270  -->  00:08:19.210
Or, actually, we can do this one here.
202

202

00:08:19.210  -->  00:08:20.060
So it's the same.
203

203

00:08:21.900  -->  00:08:23.000
Okay, so we have the bill,
204

204

00:08:23.000  -->  00:08:25.650
plus the bill times the percentage.
205

205

00:08:25.650  -->  00:08:28.830
Alright, and so that's actually it.
206

206

00:08:28.830  -->  00:08:31.600
So, that is our tips calculator
207

207

00:08:31.600  -->  00:08:32.970
which will at the same time,
208

208

00:08:32.970  -->  00:08:34.850
calculate the tips for all
209

209

00:08:34.850  -->  00:08:36.290
of the five bills.
210

210

00:08:36.290  -->  00:08:38.820
Alright, let's actually try that out.
211

211

00:08:38.820  -->  00:08:41.033
So, John dot calcTips,
212

212

00:08:42.744  -->  00:08:44.520
and then let's log into the console.
213

213

00:08:44.520  -->  00:08:47.253
Console dot log, John.
214

214

00:08:49.180  -->  00:08:52.740
Alright, oh we have some syntax error
215

215

00:08:52.740  -->  00:08:55.370
here at line 674.
216

216

00:08:55.370  -->  00:08:56.730
So, where is that?
217

217

00:08:56.730  -->  00:08:59.560
And indeed, I'm missing the if here.
218

218

00:08:59.560  -->  00:09:01.000
So, else if.
219

219

00:09:01.000  -->  00:09:02.970
Probably, you already saw that when coming.
220

220

00:09:02.970  -->  00:09:05.360
So, I'm sorry for that mistake.
221

221

00:09:05.360  -->  00:09:07.740
And so, now we have the object here.
222

222

00:09:07.740  -->  00:09:10.660
And in here, we have our bills.
223

223

00:09:10.660  -->  00:09:12.210
We have our final values,
224

224

00:09:12.210  -->  00:09:13.460
and we have our tips.
225

225

00:09:13.460  -->  00:09:15.150
So, it's all here now.
226

226

00:09:15.150  -->  00:09:18.172
Okay, so, we have 18 point six,
227

227

00:09:18.172  -->  00:09:19.363
nine point six, 26 point eight,
228

228

00:09:20.334  -->  00:09:21.940
27 and eight point four.
229

229

00:09:21.940  -->  00:09:24.940
And this, if we edit to this bills,
230

230

00:09:24.940  -->  00:09:26.973
will then result in this final values
231

231

00:09:26.973  -->  00:09:28.360
that we have here.
232

232

00:09:28.360  -->  00:09:31.950
So, for example, this 180 plus the 27,
233

233

00:09:31.950  -->  00:09:35.400
is 207 and that's exactly what we see here.
234

234

00:09:35.400  -->  00:09:39.220
Right, so, it means that it's actually working.
235

235

00:09:39.220  -->  00:09:40.470
So, the first part of a challenge
236

236

00:09:40.470  -->  00:09:42.220
is completed I think.
237

237

00:09:42.220  -->  00:09:43.690
Let's take a look.
238

238

00:09:43.690  -->  00:09:46.130
So, add the method and should include the loop.
239

239

00:09:46.130  -->  00:09:49.100
Add as an output, create these two arrays.
240

240

00:09:49.100  -->  00:09:51.200
Okay, so the first part is finished.
241

241

00:09:51.200  -->  00:09:52.290
Let's take a look at it again,
242

242

00:09:52.290  -->  00:09:54.020
because it's quite a lot of code here,
243

243

00:09:54.020  -->  00:09:57.000
and this is by far the most complicated
244

244

00:09:57.000  -->  00:09:58.560
code that we have written
245

245

00:09:58.560  -->  00:10:00.600
up until this point in the course.
246

246

00:10:00.600  -->  00:10:02.880
So, the hardest part probably to grasp
247

247

00:10:02.880  -->  00:10:04.833
is the fact that inside of this method here
248

248

00:10:04.833  -->  00:10:06.550
this calcTips method,
249

249

00:10:06.550  -->  00:10:09.090
we have this loop that calculates
250

250

00:10:09.090  -->  00:10:12.370
all of the five tips all basically at the same time.
251

251

00:10:12.370  -->  00:10:14.370
One after the other, but automatically.
252

252

00:10:14.370  -->  00:10:15.550
So, that's exactly the reason
253

253

00:10:15.550  -->  00:10:17.100
why we used the loop.
254

254

00:10:17.100  -->  00:10:19.430
Okay, and so we had to have these
255

255

00:10:19.430  -->  00:10:23.140
kind of confusing like, this dot bills dot length.
256

256

00:10:23.140  -->  00:10:26.130
Where we first read the bills array,
257

257

00:10:26.130  -->  00:10:27.360
from the current object,
258

258

00:10:27.360  -->  00:10:28.280
and then from there,
259

259

00:10:28.280  -->  00:10:29.430
we get the length.
260

260

00:10:29.430  -->  00:10:33.900
Alright, and then here we get the current bill.
261

261

00:10:33.900  -->  00:10:35.130
So, the current value,
262

262

00:10:35.130  -->  00:10:36.960
and from there, well, basically
263

263

00:10:36.960  -->  00:10:39.890
the same is then the rest is the same
264

264

00:10:39.890  -->  00:10:41.660
as we did in the other challenge.
265

265

00:10:41.660  -->  00:10:43.860
Okay, then another particularity
266

266

00:10:43.860  -->  00:10:46.690
was that we had to create these empty arrays here
267

267

00:10:46.690  -->  00:10:48.380
so that we can then fill them up.
268

268

00:10:48.380  -->  00:10:51.050
And maybe you thought that we could do it like this.
269

269

00:10:51.050  -->  00:10:56.050
So, this dot tips, is equals this dot final values,
270

270

00:10:57.130  -->  00:10:59.040
is equals an empty array.
271

271

00:10:59.040  -->  00:11:01.060
So, maybe try to do it all in one line,
272

272

00:11:01.060  -->  00:11:02.580
but that is not going to work.
273

273

00:11:02.580  -->  00:11:04.330
So, this here will not work
274

274

00:11:04.330  -->  00:11:06.030
because what is this going to mean,
275

275

00:11:06.030  -->  00:11:09.210
is that this two arrays will be the same.
276

276

00:11:09.210  -->  00:11:10.940
So, in this case, if you did it like this,
277

277

00:11:10.940  -->  00:11:13.850
if you then added something to the tips array.
278

278

00:11:13.850  -->  00:11:15.470
So, this one here, then you would have
279

279

00:11:15.470  -->  00:11:18.170
automatically also added to the final values
280

280

00:11:18.170  -->  00:11:20.570
because they would be in fact the same array.
281

281

00:11:20.570  -->  00:11:22.090
Alright, and don't worry
282

282

00:11:22.090  -->  00:11:23.580
if that sounds a bit confusing
283

283

00:11:23.580  -->  00:11:24.580
to you at this point,
284

284

00:11:24.580  -->  00:11:26.750
because later on, again,
285

285

00:11:26.750  -->  00:11:29.200
we will learn why it is that way.
286

286

00:11:29.200  -->  00:11:30.600
So, what I want you to do now
287

287

00:11:30.600  -->  00:11:31.830
is after this video,
288

288

00:11:31.830  -->  00:11:34.690
take a deep look again at this method here
289

289

00:11:34.690  -->  00:11:37.290
and especially of course, at this method here.
290

290

00:11:37.290  -->  00:11:39.250
Try to figure out why everything works
291

291

00:11:39.250  -->  00:11:40.860
the way that it does here,
292

292

00:11:40.860  -->  00:11:43.730
and only move on if it really makes sense to you.
293

293

00:11:43.730  -->  00:11:46.820
Okay, so this was the first part of the solution.
294

294

00:11:46.820  -->  00:11:47.770
Now, in the next video,
295

295

00:11:47.770  -->  00:11:50.870
I will then solve this second part.
296

296

00:11:50.870  -->  00:11:53.080
Okay, so I'm leaving that for a different video
297

297

00:11:53.080  -->  00:11:55.510
so that you can first go over this again
298

298

00:11:55.510  -->  00:11:56.760
and make sure that you understand
299

299

00:11:56.760  -->  00:11:58.453
100 percent what's going on here.
