1
00:00:01,404 --> 00:00:07,404
For a project to be Agile they generally conform to the following practices.

2
00:00:07,404 --> 00:00:09,626
Work as one team.

3
00:00:09,626 --> 00:00:17,404
A successful Agile team must have a 'we are all in this together' mindset.

4
00:00:17,404 --> 00:00:23,404
All team members, in their respective roles, must collaborate together.

5
00:00:23,404 --> 00:00:27,154
Customers, product owners, project managers,

6
00:00:27,154 --> 00:00:30,737
analysts, designers, architects, software engineers and testers.

7
00:00:30,737 --> 00:00:37,404
Even other roles I may have left off must all work together as a team,

8
00:00:37,404 --> 00:00:41,404
bringing their own ideas and perspectives together.

9
00:00:41,404 --> 00:00:44,586
We work in short releases.

10
00:00:44,586 --> 00:00:48,404
No grand phases or waterfall steps.

11
00:00:48,404 --> 00:00:53,019
Each release is in and of itself a mini project,

12
00:00:53,019 --> 00:00:57,904
if you will, with analysis, design, coding,

13
00:00:57,904 --> 00:01:01,404
testing, user acceptance, etc.

14
00:01:01,404 --> 00:01:06,118
Each iteration, and sometimes we call this a sprint,

15
00:01:06,118 --> 00:01:10,832
has a fixed time length, AKA, Also Known As,

16
00:01:10,832 --> 00:01:12,404
a time box.

17
00:01:12,404 --> 00:01:18,404
And there are a few more on the next slide.

18
00:01:18,404 --> 00:01:23,404
So here are some more items for the Agile approach to projects.

19
00:01:23,404 --> 00:01:26,404
Deliver something in each release.

20
00:01:26,404 --> 00:01:32,404
Typically at the end of each release is usable software.

21
00:01:32,404 --> 00:01:34,904
It may also be some other concrete usable elements,

22
00:01:34,904 --> 00:01:37,404
such as a document or a plan as well.

23
00:01:37,404 --> 00:01:41,690
Typically it's a software release, but it could be an analysis result,

24
00:01:41,690 --> 00:01:47,404
an estimate, a spec, some analysis, things like that.

25
00:01:47,404 --> 00:01:51,404
We also focus on business priorities.

26
00:01:51,404 --> 00:01:57,404
Deliver features in the priority order specified by the user.

27
00:01:57,404 --> 00:02:03,404
Focus on completing user-valued features rather than isolated software tasks.

28
00:02:03,404 --> 00:02:08,404
For example, something that's not business focused would be design a database.

29
00:02:08,404 --> 00:02:10,654
Yes, I know you need to design a database,

30
00:02:10,654 --> 00:02:14,404
but we want to word the features in such a way that

31
00:02:14,404 --> 00:02:17,404
they're business-customer oriented.

32
00:02:17,404 --> 00:02:20,404
For example, enable the closing of a billing period.

33
00:02:20,404 --> 00:02:24,904
That may make sense to someone like a CFO or an account-type.

34
00:02:24,904 --> 00:02:28,404
That's important to them, they understand that.

35
00:02:28,404 --> 00:02:30,848
But focused on designing a database, even though we need that,

36
00:02:30,848 --> 00:02:32,404
and we know we must do that,

37
00:02:32,404 --> 00:02:36,404
it's really inconsequential to the actual end user and customer.

38
00:02:36,404 --> 00:02:37,356
So again,

39
00:02:37,356 --> 00:02:42,118
we focus on business priorities rather than more of our

40
00:02:42,118 --> 00:02:46,404
technical viewpoints that we may be more used to.

41
00:02:46,404 --> 00:02:48,204
We inspect and adapt.

42
00:02:48,204 --> 00:02:50,004
Life changes, things happen.

43
00:02:50,004 --> 00:02:55,404
So we always have to be able to inspect what we're doing,

44
00:02:55,404 --> 00:03:02,404
observe what we're doing, and then adapt and change the plans accordingly.

45
00:03:02,404 --> 00:03:04,930
So based on the previous release or iteration,

46
00:03:04,930 --> 00:03:08,404
we may adapt our plans for the NEXT release or iteration.

47
00:03:08,404 --> 00:03:14,404
So we're always modifying, correcting, taking in the business world,

48
00:03:14,404 --> 00:03:16,586
taking in the resources that may have changed,

49
00:03:16,586 --> 00:03:17,404
maybe budget changes.

50
00:03:17,404 --> 00:03:22,404
And again, the customer changing their requirement priorities,

51
00:03:22,404 --> 00:03:27,404
adapting our plans, and then sending out a new release plan,

52
00:03:27,404 --> 00:03:32,537
another term would be sprint, and then moving forward on that.

53
00:03:32,537 --> 00:03:34,404
Over and over again.

54
00:03:34,404 --> 00:03:37,204
You likely can't change plans every hour.

55
00:03:37,204 --> 00:03:40,404
But also, your plans shouldn't be so rigid,

56
00:03:40,404 --> 00:03:44,404
that it only changes every six months.

57
00:03:44,404 --> 00:03:47,404
Now that we have covered some of the simple basics of Agile,

58
00:03:47,404 --> 00:03:54,404
let's talk about the different implementations of Agile on the next slide.

59
00:03:54,404 --> 00:03:59,204
There is only one way to do Agile.

60
00:03:59,204 --> 00:04:00,404
Absolutely not.

61
00:04:00,404 --> 00:04:05,019
Agile consists of values and principles.

62
00:04:05,019 --> 00:04:10,404
It does not specifically document implementation details.

63
00:04:10,404 --> 00:04:16,237
But here is some actual Agile implementations such as Scrum,

64
00:04:16,237 --> 00:04:19,250
Extreme Programming, Kanban, Feature Driven Development.

65
00:04:19,250 --> 00:04:25,904
The most popular that I'm aware of is Scrum and I'd recommend that you

66
00:04:25,904 --> 00:04:30,404
take a moment and maybe research the Scrum methodology.

67
00:04:30,404 --> 00:04:35,035
Now, as long as you're adhering to Agile values and principles,

68
00:04:35,035 --> 00:04:38,404
you and your team should be considered Agile.

69
00:04:38,404 --> 00:04:43,404
It doesn't necessarily have to follow one of these implementations.

70
00:04:43,404 --> 00:04:47,682
In fact I think it's okay to roll your own implementation

71
00:04:47,682 --> 00:04:50,404
that works for you and your organization.

72
00:04:50,404 --> 00:04:54,404
And that's what we've done in my company.

73
00:04:54,404 --> 00:04:57,737
Leverage as many best practices of Agile as you can.

74
00:04:57,737 --> 00:05:00,404
And also adoption may vary and take time,

75
00:05:00,404 --> 00:05:06,404
based on your team and based on your customer as well actually.

76
00:05:06,404 --> 00:05:14,000
Okay, in the next section we will talk about how Agile affects traditional estimation.

