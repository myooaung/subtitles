WEBVTT
1
00:00:00.607 --> 00:00:02.107
Deriving an Agile estimate.

2
00:00:02.107 --> 00:00:06.232
Now in this section we'll discuss some of the tools and

3
00:00:06.232 --> 00:00:11.607
techniques used in deriving an Agile estimate.

4
00:00:11.607 --> 00:00:13.607
Estimating in ideal days.

5
00:00:13.607 --> 00:00:19.607
The notion of ideal time is fully embraced in the Agile approach.

6
00:00:19.607 --> 00:00:22.607
And we learned that in the previous modules.

7
00:00:22.607 --> 00:00:28.607
You can apply what you learned by determining ideal time for user stories.

8
00:00:28.607 --> 00:00:29.920
For early estimates,

9
00:00:29.920 --> 00:00:35.607
using ideal days may be a good unit of measure for Agile projects.

10
00:00:35.607 --> 00:00:39.107
Also, using a WBS, as we discussed before,

11
00:00:39.107 --> 00:00:42.607
Work Breakdown Structure, may also be very useful.

12
00:00:42.607 --> 00:00:47.274
And in a WBS we might want to use ideal hours that

13
00:00:47.274 --> 00:00:49.607
we talked about before as well.

14
00:00:49.607 --> 00:00:54.239
Now your ideal days can be your pretty good unit of

15
00:00:54.239 --> 00:00:57.607
measure for a second cut at story points.

16
00:00:57.607 --> 00:01:03.607
Now, days and hours, ideal days and hours, are well, real.

17
00:01:03.607 --> 00:01:08.663
And what I'd like to look at next is how we would choose

18
00:01:08.663 --> 00:01:10.607
an abstract Agile estimating scale.

19
00:01:10.607 --> 00:01:15.607
Let's look at the next slide.

20
00:01:15.607 --> 00:01:19.107
Using the right estimation value and scale.

21
00:01:19.107 --> 00:01:21.607
Now in the previous modules,

22
00:01:21.607 --> 00:01:26.607
our estimate values were typically in ideal time and in fact ideal hours.

23
00:01:26.607 --> 00:01:33.607
But with Agile estimating, we typically use abstract values and let's see how.

24
00:01:33.607 --> 00:01:39.607
A story point value is typically just an integer value.

25
00:01:39.607 --> 00:01:44.607
But who decides the actual values and what do they mean?

26
00:01:44.607 --> 00:01:49.607
So if a user story is deemed to be a value of say 5,

27
00:01:49.607 --> 00:01:54.607
and another story is a 10, is this story twice the size?

28
00:01:54.607 --> 00:01:57.069
Well, yes, it is.

29
00:01:57.069 --> 00:02:02.607
We're just looking for relative value and relative size.

30
00:02:02.607 --> 00:02:04.607
Typical Agile estimating,

31
00:02:04.607 --> 00:02:10.607
using abstract values are based on a scale to determine the relative values.

32
00:02:10.607 --> 00:02:13.153
And the one you see to the right,

33
00:02:13.153 --> 00:02:16.653
is the Fibonacci Scale and I'm also going to recommend a

34
00:02:16.653 --> 00:02:21.107
couple of these abstract estimation scales.

35
00:02:21.107 --> 00:02:24.607
Exponential and Fibonacci.

36
00:02:24.607 --> 00:02:29.607
And, you could use one of the others or you could certainly make up your own.

37
00:02:29.607 --> 00:02:34.765
And the one to the right is the Fibonacci because it kind of models,

38
00:02:34.765 --> 00:02:36.607
roughly, a Fibonacci numerical progression.

39
00:02:36.607 --> 00:02:41.607
But 0 would mean, hey this piece of work doesn't take any time to do.

40
00:02:41.607 --> 00:02:45.425
And on the other end of the scale is the infinity sign,

41
00:02:45.425 --> 00:02:51.407
which means I have no idea how long it'll take or it's going to be a very,

42
00:02:51.407 --> 00:02:52.607
very long time.

43
00:02:52.607 --> 00:02:56.433
And you can see that maybe 8 and 5, 3, 2,

44
00:02:56.433 --> 00:03:00.607
1, these are just different numbers, 5 is definitely bigger than 3,

45
00:03:00.607 --> 00:03:02.707
but not quite as big as twice.

46
00:03:02.707 --> 00:03:06.607
You want to make the scale something that causes some thinking to happen.

47
00:03:06.607 --> 00:03:11.607
So you can kind of provide those particular values, relative to each other.

48
00:03:11.607 --> 00:03:16.607
You're just trying to compare relative size of story points.

49
00:03:16.607 --> 00:03:23.607
Now let's talk about the actual process on the next few slides.

50
00:03:23.607 --> 00:03:27.725
When we are in a team setting and discussing an

51
00:03:27.725 --> 00:03:30.607
estimate for a story point or feature,

52
00:03:30.607 --> 00:03:35.607
here's the Agile approach for deriving an estimate.

53
00:03:35.607 --> 00:03:39.207
Ask and listen to expert opinions.

54
00:03:39.207 --> 00:03:44.607
Experts have experience, intuition, and just plain 'gut' feel.

55
00:03:44.607 --> 00:03:49.607
So have the right experts in the room when you come up with your estimates.

56
00:03:49.607 --> 00:03:51.007
Secondly, use analogies.

57
00:03:51.007 --> 00:03:56.607
And what I mean by that is, in your discussions incorporate comparisons,

58
00:03:56.607 --> 00:03:58.607
parallels, and contrasts,

59
00:03:58.607 --> 00:04:04.607
with other situations or other requirements or other features.

60
00:04:04.607 --> 00:04:07.607
And you might want to do feature breakdowns.

61
00:04:07.607 --> 00:04:10.607
Split a feature into smaller, easier to understand,

62
00:04:10.607 --> 00:04:12.393
and therefore easier to estimate.

63
00:04:12.393 --> 00:04:16.923
Maybe a user story is a little more complex and you're going to need

64
00:04:16.923 --> 00:04:19.555
to be able to break it down into maybe sub-stories,

65
00:04:19.555 --> 00:04:20.607
two or three sub-stories.

66
00:04:20.607 --> 00:04:25.607
And then provide estimates for each one of those.

67
00:04:25.607 --> 00:04:33.000
So, an abstract estimation approach is called planning poker. And let's check it out on the next slide.

