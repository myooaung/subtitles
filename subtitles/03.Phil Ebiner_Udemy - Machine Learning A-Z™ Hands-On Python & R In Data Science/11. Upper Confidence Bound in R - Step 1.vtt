WEBVTT
1
00:00:00.330 --> 00:00:02.650
Hello and welcome to this art tutorial.

2
00:00:02.670 --> 00:00:08.010
So today we're starting a new branch of machine learning which is reinforcement learning and that is

3
00:00:08.010 --> 00:00:14.340
taking us closer to the field of artificial intelligence because robots and artificial intelligence

4
00:00:14.340 --> 00:00:18.210
that comes with it are partly built with reinforcement learning.

5
00:00:18.480 --> 00:00:23.710
So to prevent from any disappointment in the next tutorials we're not going to build any robot but we

6
00:00:23.710 --> 00:00:29.850
will solve a very interesting problem which is called the multi Bendit problem and we are going to solve

7
00:00:29.850 --> 00:00:32.780
this problem with the two most popular algorithms for this.

8
00:00:32.790 --> 00:00:36.720
These are the upper confidence bound and the Tompson something algorithms.

9
00:00:36.720 --> 00:00:41.940
So we're going to start today with upper confidence bounds we're going to implement this algorithm in

10
00:00:41.960 --> 00:00:42.490
our.

11
00:00:42.660 --> 00:00:47.630
And in this first tutorial we are going to import the data set and explain what the problem is.

12
00:00:47.670 --> 00:00:51.600
That is we will explain what the multi-point problem is about.

13
00:00:51.600 --> 00:00:53.480
So let's start with the basics.

14
00:00:53.490 --> 00:00:58.980
Let's set the right for them as working directory so let's go to our machine in the folder then Part

15
00:00:58.980 --> 00:01:04.420
6 reinforcement learning and Section 32 per company is about UCB.

16
00:01:04.650 --> 00:01:05.380
All right.

17
00:01:05.520 --> 00:01:11.280
And now in this folder make sure that you have the add city optimization city Rs4 click through rates

18
00:01:11.280 --> 00:01:17.730
so we are going to try to optimize the click through rates of different users on an ad that we put on

19
00:01:17.730 --> 00:01:21.210
a social network and therefore that's the name of our data sets.

20
00:01:21.230 --> 00:01:21.950
Yes.

21
00:01:22.200 --> 00:01:27.120
So if you have this data set you are now ready to click on this more button here and then set as working

22
00:01:27.120 --> 00:01:27.910
directory.

23
00:01:28.380 --> 00:01:28.770
Good.

24
00:01:28.830 --> 00:01:31.500
And now we are going to import the data set.

25
00:01:31.500 --> 00:01:39.570
So as usual we're going to call or voidable for the data set data set and then equals read that t as

26
00:01:39.570 --> 00:01:40.520
we hear this.

27
00:01:40.680 --> 00:01:46.620
And then in parenthesis we just need to add in quotes the name of the data set.

28
00:01:46.650 --> 00:01:55.820
So it's right here and it is adds underscore city are on the score up to zation.

29
00:01:55.830 --> 00:01:56.540
Here we go.

30
00:01:56.670 --> 00:01:59.750
And let's not forget to dot see as being the end.

31
00:01:59.880 --> 00:02:01.920
And now rarety to import this data set.

32
00:02:01.920 --> 00:02:07.370
So let's do it let's select this line and execute dataset will import it.

33
00:02:07.410 --> 00:02:09.240
Now let's have a look.

34
00:02:09.240 --> 00:02:11.980
By clicking on this set right here.

35
00:02:12.120 --> 00:02:12.720
Here we go.

36
00:02:12.930 --> 00:02:13.280
OK.

37
00:02:13.320 --> 00:02:20.520
So remember in part 3 Cl. we dealt with a problem that consisted of classifying and targeting the users

38
00:02:20.520 --> 00:02:23.910
on a social network for some car company marketing campaigns.

39
00:02:23.910 --> 00:02:29.550
Remember we had this business client of the social network that put ads on the social network and then

40
00:02:29.550 --> 00:02:35.010
we made these classification models to target the users on the social network most likely to buy this

41
00:02:35.280 --> 00:02:41.550
brand new luxury SUV that the car company launched at a very low price and basically to prepare this

42
00:02:41.550 --> 00:02:47.650
marketing campaign this car company prepared an ad that they would put on the social network.

43
00:02:47.760 --> 00:02:52.470
And what happened is that the Department of Marketing prepared some different versions of the same ad

44
00:02:52.770 --> 00:02:58.200
you know putting the car in different scenarios like for example one ad had the car on a beautiful road

45
00:02:58.560 --> 00:03:03.630
and on another version of the ad the car is on a mountain and maybe on another version it's on a beautiful

46
00:03:03.630 --> 00:03:04.380
bridge.

47
00:03:04.380 --> 00:03:10.440
Well the Department of Marketing prepared different versions of this same ad that they would put on

48
00:03:10.440 --> 00:03:11.560
the social network.

49
00:03:11.820 --> 00:03:19.860
But the problem is that they prepared 10 great versions of the same ad the 10 versions of this ad look

50
00:03:20.040 --> 00:03:20.880
great.

51
00:03:20.880 --> 00:03:25.420
So they're actually not very sure of which ad to put on the social network.

52
00:03:25.500 --> 00:03:28.680
They want to put the ad that will get the maximum clicks.

53
00:03:28.750 --> 00:03:31.260
You know so that most users buy the SUV.

54
00:03:31.260 --> 00:03:35.170
And so they need to put the ads that will lead to the best conversion rates.

55
00:03:35.430 --> 00:03:41.670
So what this company did is that they hired us as a data scientist and they said OK I have 10 versions

56
00:03:41.670 --> 00:03:42.500
of the ad.

57
00:03:42.600 --> 00:03:47.250
We have a limited budget to place the ads in The Social Network because putting these ads on the social

58
00:03:47.250 --> 00:03:48.590
network cost them money.

59
00:03:48.720 --> 00:03:54.990
And so this company would like a state of scientists to find the best strategy to quickly find out which

60
00:03:54.990 --> 00:04:01.530
version of this ad is the best for the users that is which version of the ad will lead us to the highest

61
00:04:01.620 --> 00:04:02.390
conversion rate.

62
00:04:02.400 --> 00:04:05.310
That's the city are that's the click through rates.

63
00:04:05.310 --> 00:04:08.820
We want to find the ad that will get the most clicks.

64
00:04:08.850 --> 00:04:13.950
And so now speaking of this this is leading us to the key difference between what we're about to do

65
00:04:13.950 --> 00:04:20.910
now and what we've been doing earlier because earlier we had a data set with some data content independent

66
00:04:20.910 --> 00:04:23.190
variables and one dependent variable.

67
00:04:23.190 --> 00:04:29.180
And then we did some clustering where we had independent variables only and now things are different.

68
00:04:29.190 --> 00:04:31.580
We start with no data.

69
00:04:31.590 --> 00:04:37.050
I know we have some data set in front of us but this is just data set for simulation because what happens

70
00:04:37.050 --> 00:04:37.870
in real life.

71
00:04:37.920 --> 00:04:39.690
And we're going to pretend we're in real life.

72
00:04:39.690 --> 00:04:42.550
We're going to pretend that we don't have any data yet.

73
00:04:42.780 --> 00:04:47.730
Well what happens in real life is that we are going to start experimenting with this and by placing

74
00:04:47.730 --> 00:04:50.530
them on a social network to different versions of the ad.

75
00:04:50.730 --> 00:04:57.000
And according to the results we observe we will change our strategy to place these ads on the social

76
00:04:57.000 --> 00:04:57.620
network.

77
00:04:57.750 --> 00:05:05.090
So here are the different steps of the this we have 10 versions of the same add 10 versions of this

78
00:05:05.150 --> 00:05:09.270
ad trying to sell this cheap luxury SUV.

79
00:05:09.380 --> 00:05:15.860
And each time a user of the social network will log into his account we will place one version of these

80
00:05:15.860 --> 00:05:21.050
10 ads and that will be around each time a user connects to its account.

81
00:05:21.050 --> 00:05:27.350
We will show him one version of the ad for example at 3 version 3 of your ad and we will observe its

82
00:05:27.440 --> 00:05:30.120
response if the user clicks on the ad.

83
00:05:30.170 --> 00:05:32.490
We get a reward equals to 1.

84
00:05:32.660 --> 00:05:38.630
And if the user doesn't click on the ad we get a reward equals to zero and we're going to do this for

85
00:05:38.630 --> 00:05:41.870
ten thousand users on the social network.

86
00:05:41.870 --> 00:05:44.300
We're going to show the ad to 10000 users.

87
00:05:44.290 --> 00:05:49.580
We're going to observe if the user clicks yes or no on the ad if the user clicks on the ad that will

88
00:05:49.580 --> 00:05:56.090
give us one we want and if the user doesn't click on the ad that will give us zero we want however we're

89
00:05:56.090 --> 00:06:02.180
not going to show the different versions of the ads we choose or at random there's going to be a specific

90
00:06:02.180 --> 00:06:03.840
strategy to do this.

91
00:06:03.860 --> 00:06:10.030
And the key thing to understand about reinforcement learning is that this strategy will depend at each

92
00:06:10.030 --> 00:06:15.030
round on the previous results we observed at the previous rounds.

93
00:06:15.140 --> 00:06:17.700
So for example when we are at around 10.

94
00:06:17.750 --> 00:06:22.250
Well what happens behind the scene is that the algorithm will look at the different results observed

95
00:06:22.340 --> 00:06:28.370
during the first ten rounds and according to these results it will decide which version of the ad it

96
00:06:28.370 --> 00:06:29.890
will show to the user.

97
00:06:30.080 --> 00:06:35.280
That's why reinforcement learning is also called Online learning or interactive learning.

98
00:06:35.450 --> 00:06:39.920
Because the strategy is dynamic it depends on the observations from the beginning of the experiment

99
00:06:40.310 --> 00:06:41.980
up to the present time.

100
00:06:42.020 --> 00:06:43.770
And so now what is the data set.

101
00:06:43.790 --> 00:06:49.040
This is just some simulation of what is going to happen when we show the ads to the users.

102
00:06:49.040 --> 00:06:55.310
In other words this is what God knows because we have no idea on which ad each user is going to click

103
00:06:55.310 --> 00:06:55.710
on.

104
00:06:55.910 --> 00:07:01.220
And that's what the data set is telling us it's telling is for each round that is for each user connecting

105
00:07:01.220 --> 00:07:05.150
to his account on which versions of the user is going to click on.

106
00:07:05.180 --> 00:07:09.830
So let's give an example let's explain what happens for the five first users.

107
00:07:09.830 --> 00:07:11.410
So let's take the first round.

108
00:07:11.600 --> 00:07:17.000
And according to the simulation or according to God this first user of the social network is going to

109
00:07:17.000 --> 00:07:19.830
click on the ad if we show him the first version.

110
00:07:19.940 --> 00:07:26.060
The fifth version and the 9th version and if we show him the second version the third version the fourth

111
00:07:26.060 --> 00:07:29.730
version 6 7 8 or tenth version.

112
00:07:29.900 --> 00:07:32.810
Well this user is not going to click on the AD.

113
00:07:33.020 --> 00:07:34.680
So this is what God knows.

114
00:07:34.820 --> 00:07:40.330
But as far as we are concerned we have no idea on which ads this will click on.

115
00:07:40.550 --> 00:07:41.940
So what about the second user.

116
00:07:41.990 --> 00:07:47.120
So that's the second round at the second round we show another version of the ad and according to God's

117
00:07:47.120 --> 00:07:52.520
truth the second user will only click on the ad if we show him the ninth version.

118
00:07:52.520 --> 00:07:56.120
The third user will never click on the add whatever version we display.

119
00:07:56.150 --> 00:08:02.120
The fourth user will only click on the second version and the 8th version and the fifth user will never

120
00:08:02.120 --> 00:08:02.920
click on the ad.

121
00:08:02.990 --> 00:08:04.990
Whatever version we show to him.

122
00:08:05.000 --> 00:08:07.010
All right so that's the idea of the problem.

123
00:08:07.040 --> 00:08:12.590
And so we're going to build two algorithms the UCB algorithm and the Tompson something algorithm and

124
00:08:12.590 --> 00:08:18.650
these algorithms will decide from here which version of the ad to show to the user.

125
00:08:18.650 --> 00:08:24.050
And depending on the reward the ads will get that as reward equals when the user clicks on the ads or

126
00:08:24.050 --> 00:08:29.440
we word equals zero if the user doesn't click on the ad will decide which ad to show to the user at

127
00:08:29.450 --> 00:08:30.370
the next round.

128
00:08:30.500 --> 00:08:32.850
According to the previous observations.

129
00:08:33.050 --> 00:08:39.990
And so we're going to have 10000 rounds if we go down here we can see that we're showing the ad to 10000

130
00:08:40.010 --> 00:08:40.790
users.

131
00:08:40.970 --> 00:08:45.600
And so of course the goal of the algorithm is to maximize the total reward.

132
00:08:45.680 --> 00:08:51.020
That is the sum of all the different rewards and each round obtained by the different selections of

133
00:08:51.020 --> 00:08:51.780
the ads.

134
00:08:52.040 --> 00:08:53.430
OK so let's do it.

135
00:08:53.450 --> 00:08:57.540
Let's start with upper confidence about the UCB algorithm.

136
00:08:57.620 --> 00:09:02.690
But before we start implementing this algorithm I would like to show you something I would like to show

137
00:09:02.690 --> 00:09:07.700
you what would happen if we randomly select the versions of the ad at each trial.

138
00:09:07.790 --> 00:09:10.850
You know no algorithm no strategy.

139
00:09:10.850 --> 00:09:17.820
Each time a user connects to its account we're displaying one version of these ten at totally random.

140
00:09:17.840 --> 00:09:21.070
So I actually prepared this algorithm.

141
00:09:21.080 --> 00:09:26.120
We're not going to implemented together because this algorithm is actually not very relevant just to

142
00:09:26.120 --> 00:09:29.620
give you the motivation of what we will implement in the next tutorials.

143
00:09:29.780 --> 00:09:36.370
But this algorithm is actually provided in the folder you see it's this random selection file.

144
00:09:36.410 --> 00:09:40.040
And actually I pre-vetted here that's the algorithm.

145
00:09:40.040 --> 00:09:43.700
So as you can see I call this algorithm random selection here.

146
00:09:43.710 --> 00:09:47.800
I'm importing the day said as we just did so I don't need to execute that again.

147
00:09:47.960 --> 00:09:54.320
And in this section I am implementing the random selection algorithm that just consists of selecting

148
00:09:54.320 --> 00:09:59.730
at random one version of the ad and each round that is each time a user connects on its social work

149
00:09:59.750 --> 00:10:00.840
it counts.

150
00:10:00.840 --> 00:10:03.860
So I'm going to execute the section right now.

151
00:10:04.320 --> 00:10:06.200
So here it is well-implemented.

152
00:10:06.420 --> 00:10:09.140
And we can see the different results of this algorithm.

153
00:10:09.150 --> 00:10:15.450
So the most important result is the total We want there is this variable is the sum of the different

154
00:10:15.450 --> 00:10:17.520
rewards up to the last round.

155
00:10:17.520 --> 00:10:19.860
That is up to the 10000 user.

156
00:10:19.920 --> 00:10:25.300
And so what is the total reward the total reward is one thousand two hundred and forty two.

157
00:10:25.560 --> 00:10:31.620
So what happened is that the random selection algorithm randomly selected each and each round we can

158
00:10:31.620 --> 00:10:35.450
actually see the random selections in this selected list.

159
00:10:35.610 --> 00:10:40.890
So we can clearly see what happened at ground zero for the first user the random selection algorithm

160
00:10:40.890 --> 00:10:46.040
selected the version number for then and the second round the version before then that the third round

161
00:10:46.040 --> 00:10:51.300
the version number three then the fourth run version number one and the fifth round version number four.

162
00:10:51.300 --> 00:10:52.820
That's the random selections.

163
00:10:52.860 --> 00:10:59.340
And so at each round based on the god's true results the selection of the ad generated a reward.

164
00:10:59.520 --> 00:11:04.830
So at the first round for the first use of connecting and to count the random selection algorithm selected

165
00:11:04.860 --> 00:11:09.700
at number four and we see a zero here which means that this first user doesn't take on this.

166
00:11:09.700 --> 00:11:12.800
And so we get a zero reward at the first round.

167
00:11:13.080 --> 00:11:15.520
Then what about the second selection for.

168
00:11:15.840 --> 00:11:20.550
Well we see here the second round that there is also as you were at number four which means that the

169
00:11:20.550 --> 00:11:26.190
second user doesn't click on this ad and therefore we also get a zero reward and the total reward that

170
00:11:26.190 --> 00:11:33.300
we observe here is actually the sum of all the rewards that it gets whether it's 0 or 1 at the end of

171
00:11:33.300 --> 00:11:35.490
the ten thousand rounds.

172
00:11:35.490 --> 00:11:35.810
All right.

173
00:11:35.820 --> 00:11:42.030
So the interesting thing to remember here is that when we randomly select the ads we get a reward of

174
00:11:42.030 --> 00:11:44.170
one thousand two hundred and forty two.

175
00:11:44.340 --> 00:11:46.570
Well you know there is this random factor.

176
00:11:46.620 --> 00:11:53.300
And so of course if we select that again we'll get another word but it will be very close to this value

177
00:11:53.300 --> 00:11:53.810
here.

178
00:11:53.910 --> 00:11:55.900
I'm going to do that again.

179
00:11:56.010 --> 00:12:01.430
And as you can see we get 1232 and I can even do that again.

180
00:12:01.480 --> 00:12:06.850
I get 1246 again 1236.

181
00:12:06.870 --> 00:12:12.160
So we always get a total reward close to 1200.

182
00:12:12.360 --> 00:12:19.460
So let's keep this resolved in our mind because then we'll compare it to the total reward that we get.

183
00:12:19.500 --> 00:12:25.560
Thanks to our more advanced algorithm which has the upper confidence down and then the Tompson sampling

184
00:12:25.590 --> 00:12:26.430
algorithm.

185
00:12:26.730 --> 00:12:32.270
So 1200 Let's see how you see me and Tompson something beat that.

186
00:12:32.370 --> 00:12:37.140
And now just the last thing to show you as for every algorithm we implement in this course we get the

187
00:12:37.140 --> 00:12:39.850
exciting step in the end which is to visualize the results.

188
00:12:40.080 --> 00:12:46.770
Well in this part reinforcement learning the visualization of the results will consist of visualizing

189
00:12:46.770 --> 00:12:51.470
the histogram where we see the different selections of the different versions of the data.

190
00:12:51.600 --> 00:12:57.440
So I'm going to show you what happened for our Random selection algorithm that Stuart Breske amount

191
00:12:57.450 --> 00:12:59.350
of control and to execute.

192
00:12:59.430 --> 00:13:00.530
And here we go.

193
00:13:00.600 --> 00:13:06.390
Of course since our algorithm randomly selected the different versions of the ads at each round.

194
00:13:06.480 --> 00:13:13.410
Well of course we get a nearly uniform distribution of the different versions of the at the ten different

195
00:13:13.410 --> 00:13:17.410
versions of the ad were selected more or less the same number of times.

196
00:13:17.670 --> 00:13:24.660
All right so that was just to give you a little extra motivation and now time to go pro let's go back

197
00:13:24.660 --> 00:13:28.730
to our UCB algorithm and start implementing it.

198
00:13:28.740 --> 00:13:33.370
So remember 1200 total we work for the random selection algorithm.

199
00:13:33.510 --> 00:13:35.730
Let's see how UCB beats that.

200
00:13:35.730 --> 00:13:37.780
So we'll find out in the next tutorial.

201
00:13:37.810 --> 00:13:39.520
And until then enjoy machine learning
