WEBVTT

00:02.180 --> 00:09.110
So in this model we spend a lot of time on adding authentication and you'll learn there's a lot to it.

00:09.110 --> 00:11.620
We made sure users can be created.

00:11.630 --> 00:19.370
Users can log in and then we're managing this token managing this token with the help of behavior subjects

00:19.640 --> 00:24.950
to make sure that everything in the app updates correctly whenever our token in our user changes.

00:24.950 --> 00:27.130
We're using it in the guard here.

00:27.290 --> 00:32.800
We're using it to find out whoever a user is authenticated with the help of our getters there.

00:32.930 --> 00:39.050
We're doing the same for the user I.D. and we're using the token also to appended to the requests we're

00:39.050 --> 00:45.260
sending to our back and there we append the token to every requested leaves our app because otherwise

00:45.260 --> 00:52.320
the back end as you saw blocks access and this way our back in a secured and we correctly reflect the

00:52.340 --> 00:58.550
occurred authentication state on the front end and we all of that are things like automatically logging

00:58.550 --> 01:03.530
the user in when it comes back to the app as well as automatically log into user out.

01:03.530 --> 01:09.650
Now obviously there are rooms for improvement you can improve error handling you can use that refresh

01:09.650 --> 01:13.680
token to keep the user locked in for more than one hour.

01:13.680 --> 01:15.680
I'm happy with that state.

01:15.680 --> 01:18.820
My goal obviously was to give you an overview.

01:18.920 --> 01:25.550
Overall these tools and give you a thorough introduction on how you add authentication to an eye on

01:25.550 --> 01:26.300
a gap.

01:26.300 --> 01:32.540
Feel free to now explore other options and dive deeper on this to use all the features you need for

01:32.540 --> 01:33.710
your next project.
