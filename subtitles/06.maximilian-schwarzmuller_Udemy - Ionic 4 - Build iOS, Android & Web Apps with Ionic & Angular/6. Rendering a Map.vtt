WEBVTT

00:02.170 --> 00:05.380
So let's build that map for this first of all.

00:05.380 --> 00:11.170
I'll get access to a map element and that should be the place where I rendered that map.

00:11.170 --> 00:15.430
And this will be this day of the year with the map local reference.

00:15.490 --> 00:18.780
Now since it has that local reference we can easily get access to it.

00:19.580 --> 00:29.550
We can simply add at view child here which is imported from at Angola court in front of a property with

00:29.580 --> 00:35.090
any name of your choice like map element.

00:35.100 --> 00:36.800
This will be of type element ref.

00:36.810 --> 00:40.990
And of course you have to pass something to view child you have to pass to your selector.

00:41.010 --> 00:43.230
You have to pass that local reference name.

00:43.350 --> 00:49.350
And since I named this map here in my template I have to use map here as well.

00:49.350 --> 00:58.020
So no map Allen gives us access to D def here in the end and therefore I will store it is in a U constant

00:58.050 --> 01:04.560
which on a map L to avoid confusion and reach out to this map element that's named as map element ref

01:04.590 --> 01:09.750
because it actually is just a reference and there we can access the native element which is the actual

01:09.750 --> 01:10.790
div.

01:10.860 --> 01:16.890
Now we have that div stored in map L and the data stand for the place where I want to render this.

01:16.890 --> 01:22.660
Now we do render a map by using new Google Maps dot map.

01:22.680 --> 01:27.930
So this constructor which has a first arguments takes d h to male element we want to render the map

01:27.940 --> 01:30.500
in and that would be my map l here.

01:30.690 --> 01:34.300
The second argument is then a starting configuration for the map.

01:34.350 --> 01:40.860
Like for example Center which defines on which coordinates it should center initially no coordinates

01:40.860 --> 01:48.630
here should be a javascript object with a lat and long queues or lat and LNG key and alleged stands

01:48.630 --> 01:56.430
for latitude and there we could use something like minus 3 4 3 9 7 but you can also fire up Google Maps

01:56.430 --> 02:01.530
in your browser and pick a location there and then take the latitude and longitude from there.

02:01.530 --> 02:07.710
I'll just enter some random data here which I searched in advance but nothing too spectacular.

02:08.580 --> 02:14.580
So that is my center besides the center we can also set up assume here which is how far we're assumed

02:14.580 --> 02:17.400
in and 16 should work quite well.

02:17.430 --> 02:23.850
Now let's store that map here in a map constant so that we can interact with it a bit more because now

02:23.850 --> 02:30.210
with this map created we can start adding markers to ID or set up event listeners.

02:30.240 --> 02:36.910
Now for now we'll not do any of that but to see the map I now also need to do some styling here.

02:37.110 --> 02:40.710
We need to style this map div here.

02:40.710 --> 02:47.190
That is why I assigned de class of map here to make sure that this is visible and has the rights dimensions.

02:47.190 --> 02:56.080
So let's select map here to map class and first of all let's give this a position of absolute and a

02:56.080 --> 03:04.060
height of 100 percent and a width of 100 percent so that it takes the full modal there after all get

03:04.150 --> 03:10.120
gift as a background color of transparent to make sure that we just have the map there and nothing in

03:10.120 --> 03:15.370
front of that and I'll add an A Pass City of 0 which of course hides it.

03:15.370 --> 03:16.640
Now why do I do that.

03:16.690 --> 03:22.600
Because I also want to add a transition here which animates deal pass city when it changes over let's

03:22.600 --> 03:25.780
say 150 milliseconds to ease in.

03:25.870 --> 03:31.600
I'm doing that because we actually have to load the Google Maps SDK first here with diskette Google

03:31.600 --> 03:35.280
Maps and this can take a few milliseconds or something like that.

03:35.530 --> 03:42.040
And I want to estimate the map in once it has been loaded and once it can be rendered simply to provide

03:42.040 --> 03:43.510
a nice effect.

03:43.600 --> 03:53.040
Therefore here I will add a map visible selector here so that the map div with class map also has the

03:53.050 --> 03:56.910
visible class and they're all set opacity 1.

03:56.920 --> 04:02.620
Now we just have to make sure that the opacity gets changed once the map has been loaded and that in

04:02.620 --> 04:12.340
turn can be done in the map modal again here when we create our map we can use that Google Maps SDK

04:12.340 --> 04:19.540
thing we're getting as an argument here at their tap into the event property to add a listener once

04:19.540 --> 04:20.900
and listener once some effort.

04:20.900 --> 04:27.050
This exposes to the map so too does map opted we created here and that event to which we only want to

04:27.050 --> 04:29.020
listen once is idle.

04:29.070 --> 04:33.880
And this will essentially fire as soon as the map has been loaded and we only listen to it once because

04:33.880 --> 04:37.270
we are just interested in that first initial load.

04:37.300 --> 04:42.640
So to say now the function which you pass is a third argument will be the function that is executed

04:42.640 --> 04:49.240
when this event occurs and there are one or add this classed as visible class to my map element.

04:49.240 --> 04:58.680
Now the most elegant way of doing this is by injecting the renderer renderer to here from at angular

04:58.680 --> 04:59.660
core.

04:59.850 --> 05:06.570
That is an object a tool angler gives us for interacting with Dom elements which is preferable to directly

05:06.570 --> 05:07.500
manipulating them.

05:07.530 --> 05:17.250
If we can avoid it and now we can use that renderer I inject it to add a class and here I first of all

05:17.250 --> 05:26.310
pass my element so my map l here and then the class name and that should be a string and it is visible

05:26.310 --> 05:27.890
here.

05:27.980 --> 05:28.820
So with that.

05:28.850 --> 05:34.190
Theoretically we should now get a map that actually loads and even animates and lets see if it does

05:34.190 --> 05:34.980
work.

05:35.000 --> 05:37.630
So let's go back here and let's open that model.

05:37.910 --> 05:38.870
And here we are.

05:38.870 --> 05:45.320
Here is the map and it all faded in and I is elected in the middle of nowhere here as a starting location

05:45.320 --> 05:46.780
near Sydney.

05:46.820 --> 05:50.950
Of course you can pick any location you want now.

05:50.960 --> 05:55.820
That is the map and you can interact with it as you would expect it which is really nice.

05:55.820 --> 06:01.490
Now the next day of course will be to make sure that we actually you register a click by the user to

06:01.490 --> 06:02.330
pick a location.
