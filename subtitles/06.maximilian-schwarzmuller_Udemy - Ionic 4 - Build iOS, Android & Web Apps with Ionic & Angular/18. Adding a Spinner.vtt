WEBVTT

00:02.240 --> 00:03.450
A lot of ground covered,

00:03.470 --> 00:11.060
let's conclude this module now by having a look at some other of these controller components, so components

00:11.090 --> 00:18.610
which you actually create programmatically by injecting their controller here in our Ionic Angular app

00:18.710 --> 00:24.190
and specifically, I want to introduce two new controller components which we need in this app.

00:24.260 --> 00:29.420
The first one is related to the auth page and there when we click this login button,

00:29.420 --> 00:32.210
we currently simply always redirect.

00:32.420 --> 00:34.820
Now right now, there's little else we can do, right,

00:34.820 --> 00:40.340
we have no real login logic but later we'll send a request here to the web.

00:40.340 --> 00:46.070
So I already want to add a little timeout here to fake that we have to wait for a response

00:46.250 --> 00:51.570
and I'm of course adding this here so that I can show you how to add a loader,

00:51.590 --> 00:58.490
so a loading icon. Now in this function here after one second, I will redirect or let's make it 1.5

00:58.490 --> 01:05.070
seconds actually and in my auth service, I'll set isAuthenticated back to false

01:05.110 --> 01:08.680
so that we actually start on this authentication page here.

01:08.800 --> 01:15.300
So let's wait for that to reload and here I am. Now if I press login,

01:15.300 --> 01:20.460
nothing happens for one and a half second before I'm redirected.

01:20.460 --> 01:23.790
Now this is of course not the best user experience,

01:23.790 --> 01:29.820
if we have to wait for something, we want to show a loader and for that, I'll actually first start with a

01:29.970 --> 01:34.050
non-overlay loader where we don't need to inject anything

01:34.050 --> 01:36.420
and this is also something we'll use later in the course

01:36.420 --> 01:42.480
once we add HTTP requests, I will already show it to you here. For this, I can add an isLoading property

01:42.480 --> 01:49.230
to the auth page component and set this to false here and then here in onLogin, I'll set isLoading

01:49.230 --> 01:56.630
to true and then once I'm done, so inside set timeout, I'll set this loading to false.

01:56.630 --> 02:04.010
Now we can use this isLoading property here in the auth.page.html file to show a spinner and Ionic

02:04.100 --> 02:05.490
has us covered here too,

02:05.510 --> 02:11.270
we have spinners and progress bars to choose from, the official docs of course are the place to go.

02:11.360 --> 02:17.570
Here I'll simply replace the button with a spinner, so I'll add ion-spinner which is such an element

02:18.080 --> 02:24.470
and give it a color of primary and only render that if isLoading is true

02:24.560 --> 02:30.590
and on the other hand, the button will only be rendered if we're not loading because if we are loading,

02:30.590 --> 02:33.640
then the buttons should not be pressable again.

02:33.650 --> 02:40.290
So with that, we let this reload, as soon as I click that login button, we got that nice spinner which

02:40.290 --> 02:43.400
will automatically have the platform specific look,

02:43.410 --> 02:46.980
so if we have a look at this on a pixel device here,

02:47.040 --> 02:54.990
so Android therefore, actually a smaller one so that it fits onto the screen, if we have a look at that

02:54.990 --> 02:57.420
and we reload, now we have that Android spinner.

02:57.420 --> 03:02.970
Now of course you can also center that in the middle of the screen by for example wrapping it into a

03:02.970 --> 03:10.480
div or an ion-grid and on the div, we could use text center here and it should now be centered.

03:10.560 --> 03:11.880
So you can style that,

03:11.880 --> 03:17.420
you can also style it with CSS and all of that is nice.

03:17.430 --> 03:20.090
Now this is a spinner which we absolutely can display

03:20.100 --> 03:26.390
but for me such a spinner and that's now a purely philosophic thing makes more sense

03:26.400 --> 03:28.340
if we'll stay on the page.

03:28.350 --> 03:34.780
So for example here, we can later add such a spinner when we're loading our places. On the login page,

03:34.860 --> 03:41.850
I actually want to add an overlay on the page so that we can't click anything and it's very clear that

03:41.850 --> 03:49.380
the entire app is now waiting for us to load this because on a screen like this here, we could argue

03:49.390 --> 03:54.120
yes we might see a spinner here but we can still navigate to other places.

03:54.120 --> 03:58.220
Now when we're logging in, we're definitely stuck until we succeeded

03:58.440 --> 04:06.420
and therefore here, I will actually not use this spinner, I'll comment it out but instead use such a controller

04:06.510 --> 04:11.850
spinner which I already announced and I also removed ngIf here by the way on the button.

04:11.850 --> 04:15.150
So let's now have a look at that loading controller.
