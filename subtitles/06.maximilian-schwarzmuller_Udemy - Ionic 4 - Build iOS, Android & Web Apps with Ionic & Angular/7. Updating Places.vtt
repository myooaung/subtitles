WEBVTT

00:02.500 --> 00:07.580
And now replace in the application where we of course save data is when we edit an offer.

00:07.580 --> 00:12.390
There we also have the on update offer method and right now we're not doing anything here.

00:12.440 --> 00:18.340
No definitely feel free to pause the video and try adding some logic here to actually call some method

00:18.340 --> 00:23.250
into place a service which you'll have to add on your own that updates a place.

00:23.390 --> 00:29.500
This will require definitely some things which we haven't used in this course in exactly the same way

00:29.500 --> 00:30.400
we use it right now.

00:30.400 --> 00:32.180
But in general it should be doable.

00:32.290 --> 00:37.540
But of course you cannot just pause the video and try it but you can also follow along my solution or

00:37.540 --> 00:40.060
compare yours to mine when they're done.

00:42.240 --> 00:43.500
Where are you successful.

00:43.500 --> 00:45.270
Let's try it together.

00:45.270 --> 00:51.370
First of all we'll have to adjust the places service to have a method that allows us to update and offer.

00:51.690 --> 00:59.100
And therefore here I'll add an update offer method and this will need to receive the data we can get

00:59.130 --> 01:04.860
when we added an offer we can add the title and description so we definitely need to accept that as

01:04.860 --> 01:05.890
arguments here.

01:06.030 --> 01:09.720
But we also need to be able to identify the place we want to change.

01:09.720 --> 01:12.090
So we need the place idea here as well.

01:12.090 --> 01:21.440
And then title and description as I mentioned now for the logic in here we'll have to fetch the place

01:21.440 --> 01:22.560
we want to change.

01:22.730 --> 01:28.720
Then we will have to change it and then we want to replace it in our existing list of places.

01:28.820 --> 01:34.730
So replace the existing place that we updated with the updated version and admit this new place list

01:34.940 --> 01:38.940
definitely a couple of steps that are involved.

01:38.960 --> 01:44.890
First of all let's reach out this places and we could subscribe here.

01:44.940 --> 01:50.580
But actually I want to return my subscript here again so that we can listen to it in our edit offer

01:50.580 --> 01:56.850
page and hence here I will do everything with our Express operators which do allow us to subscribe to

01:56.850 --> 01:59.570
it even after the operator ran.

01:59.580 --> 02:03.560
Now what do I want to pipe onto my places.

02:03.690 --> 02:05.060
First of all take one.

02:05.070 --> 02:10.410
So did I only get the latest snapshot of the list and not any future updates because I'm only updating

02:10.410 --> 02:17.700
this once and then if I updated it again that would be a separate operation so for every updating operation

02:17.760 --> 02:21.280
I only will touch my places list once.

02:21.310 --> 02:30.750
So let's take all the places and then we tap into that so we can execute some code with the places where

02:30.750 --> 02:31.400
fetching here.

02:31.410 --> 02:39.360
So with our existing list of places in there I will have to get my updated place and I will need to

02:39.360 --> 02:48.220
index off that place as well so that I can replace it in that places list we get this by using the places

02:48.220 --> 02:55.090
list there to find index method which can be called on every javascript array and that will execute

02:55.090 --> 02:57.160
a function on every element.

02:57.160 --> 03:05.440
So in every place in that array and there I can compare the I.D. of the place I'm looking at with my

03:05.440 --> 03:08.290
place I.D. I'm getting as an argument here.

03:08.290 --> 03:13.150
And if that equals that is the place I want to look at and then find index will return Media Index off

03:13.150 --> 03:17.740
that place with that we get the updated place index.

03:17.740 --> 03:25.570
Now we can create updated places array here where I copy my old places to make sure we don't mutate

03:25.700 --> 03:28.580
any old state in an unwanted way.

03:28.750 --> 03:33.650
And then I can set up data places for the updated place index.

03:33.700 --> 03:39.580
So now I'm accessing the element which I want to change and I'll set this equal to a new place which

03:39.580 --> 03:42.460
should of course get all the data off the old place.

03:42.460 --> 03:45.380
But I want to write that Highlands on.

03:45.670 --> 03:54.250
So for that I'll add a new constant Old Place which is updated places for the updated place index and

03:54.250 --> 03:57.320
then I can here of course keep the old at ease.

03:57.330 --> 04:00.750
So that should be named Old place here.

04:01.390 --> 04:05.840
So here I will access old place dot I.D. Now.

04:05.890 --> 04:09.460
The title however should be overwritten with the title I'm getting us argument.

04:09.460 --> 04:14.260
Same as the description description but all the other data will be kept.

04:14.260 --> 04:28.700
So it will be old Lay's image you El old plays prize old plays date whips away lable from old plays

04:28.820 --> 04:33.170
away lable to and old plays user I.D..

04:34.070 --> 04:41.780
So this is essentially how I replace my existing place in the updated places array which is a copy of

04:41.780 --> 04:49.070
my places array and now we just need to call this underscore replace this next and omit that updated

04:49.220 --> 04:56.630
places array which is the old places array with that one place replaced so that now we remit a new list

04:56.690 --> 04:59.020
of places essentially.

04:59.110 --> 05:01.940
This should allow us to update a place.

05:02.040 --> 05:08.380
Now I return this whole observable here so that in the added offer page I can wait for when this is

05:08.380 --> 05:09.180
completed.

05:09.250 --> 05:12.450
And now you could add your own delay again to show a spinner.

05:13.000 --> 05:19.640
Let's maybe do this year to practice this as well and then the added offer page here.

05:19.870 --> 05:26.410
I will now inject that places service so private places.

05:26.410 --> 05:27.940
Oh it's already there.

05:27.940 --> 05:31.960
So we can still inject something and that would be the router because there's still one to navigate

05:31.960 --> 05:33.400
away once we're done.

05:33.400 --> 05:37.100
Roger of course is imported from at Angola router.

05:37.420 --> 05:42.760
And then here in on update all four I'm checking the validity and thereafter we can call this

05:45.880 --> 06:01.280
places service update Ofer now here we want to access our place and there the idea and then pass on

06:01.280 --> 06:07.640
this forum value title and this forum value descriptions so to date I have fetched here in my forum

06:09.270 --> 06:14.930
now by the way in the places service I of course named this update offer an update.

06:14.940 --> 06:21.150
It's called at place you could name this year update place as well and I will name it such to be less

06:21.150 --> 06:24.950
confusing because offer and place for me here basically is the same.

06:24.990 --> 06:27.890
So I will call update plays here.

06:28.230 --> 06:30.320
Nonetheless this gives us a subscription.

06:30.330 --> 06:35.050
So let's subscribe here by the way you never need to clear these subscriptions.

06:35.100 --> 06:41.010
These are one time observable they will complete automatically once their operation is done.

06:41.070 --> 06:50.500
So no need to clear this here and then in here we can dismiss any loader we're showing.

06:50.930 --> 06:58.120
So to show a loading spinner let's inject this as well let's inject the loading controller here off

06:58.130 --> 07:07.460
type loading controller which is imported from at ionic angular and then we can use the loading controller

07:07.460 --> 07:08.420
down there.

07:08.420 --> 07:18.160
This loading controller to create a new loading overlay with a message of updating place in the Venn

07:18.170 --> 07:18.530
block.

07:18.530 --> 07:25.970
We get our loading element that is created for us by ionic and to the stair where I then want to start

07:26.000 --> 07:34.130
that updating process in my service so that I can call loading element present here and then into subscription

07:34.130 --> 07:39.470
here I'll pass in a function or to the subscribe method here I'll pass a function which will execute

07:39.470 --> 07:45.320
once we're done with the updating logic and they're all call loading element dismiss.

07:45.320 --> 07:47.730
And I also want to clear to form.

07:47.750 --> 07:51.930
So this form reset is what I call here and navigate away.

07:51.950 --> 08:01.130
So this router navigate to slash places tabs offers doesn't sound like a bad idea.

08:01.220 --> 08:05.460
And now with that we have generally the same logic as we have in a new offshore place.

08:05.570 --> 08:07.310
But now with editing and offer.

08:07.610 --> 08:14.000
So if I had a couple of exclamation marks to Lemoore to sure which was a real horrible way of pronouncing

08:14.000 --> 08:17.830
this then you see them here as well.

08:17.870 --> 08:20.160
And of course also here.

08:20.180 --> 08:23.240
So now we're doing quite a lot already.

08:23.240 --> 08:29.480
Let's next make sure that we can only book places we haven't created before we dare officer make sure

08:29.480 --> 08:36.200
that we also can view our bookings and draw that from a real service populated dynamically and that

08:36.200 --> 08:37.910
we of course can make a booking.
