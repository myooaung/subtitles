WEBVTT

00:02.180 --> 00:05.730
Passing data into the modal is pretty straightforward.

00:05.900 --> 00:11.400
Here where we create that modal, we probably want a pass in the place for which we're opening it,

00:11.420 --> 00:14.090
that is the place we want to book after all.

00:14.090 --> 00:19.820
You can pass data into a modal by adding that component props property to the object you pass to the

00:19.820 --> 00:26.810
create method and that has to be an object where you can now add any key-value pairs you want, like

00:27.650 --> 00:34.260
booked place or selected place. The value here will then be this place,

00:34.270 --> 00:39.340
so this place property I have in this component and now this gets passed in as a property

00:39.400 --> 00:46.380
to my component, to the create booking component. So in the create booking component, I'll now add this

00:46.440 --> 00:48.870
as a bindable property. Here

00:48.950 --> 00:55.350
I'll use @input which you need to import from @angular/core and then I should use that same name

00:55.350 --> 00:58.160
of course, selected place is the name here,

00:58.170 --> 01:02.910
so let's name it selected place here as well in the create booking component which is loaded as a modal

01:03.570 --> 01:06.050
and that will be of type place,

01:06.090 --> 01:09.990
so let's make sure to also import place here.

01:09.990 --> 01:14.420
Now we can interact with that just as we can do in any other component.

01:14.550 --> 01:21.360
So here in create booking component, we could instead of outputting book this place up here, we could

01:21.480 --> 01:28.830
access our selected place title here and maybe show the description in here, so we could add a text center

01:28.830 --> 01:31.530
property and some padding to the ion content

01:31.740 --> 01:33.330
so that this looks a little bit nicer

01:33.780 --> 01:44.230
and then I have my paragraph here with the selected place description. That is possible and you can output

01:44.230 --> 01:52.540
anything you want here about your place of course. Let's give this a try, if I save that, let's login, load

01:52.550 --> 01:57.920
New York City, book this place and here is the title and here is the description, of course you could also

01:57.920 --> 02:00.100
display the image and so on.

02:00.140 --> 02:03.700
So this is our way of passing data into the modal,

02:03.710 --> 02:09.620
now how about closing it and passing data back? For this, inside of the modal component,

02:10.810 --> 02:14.080
you of course need to define some condition on when you want to close it.

02:14.080 --> 02:23.570
Maybe you have a book button down there that closes it, so ion button book with a color of primary

02:25.560 --> 02:31.170
and that should trigger that the modal is closed and of course that you also book the place.

02:31.170 --> 02:38.400
So for that, we can add a click listener, onBookPlace maybe and we might also want a button here in our main

02:38.400 --> 02:39.290
bar,

02:39.330 --> 02:50.200
so there we could also add our good old ion buttons wrapper with a slot of primary and in there, add an ion

02:50.240 --> 03:01.940
button with an ion icon and a name of close and when that is pressed, we maybe want to execute onCancel

03:01.940 --> 03:06.470
so that here we don't book the place, you typically want to offer more than one choice to your

03:06.470 --> 03:08.180
users.

03:08.180 --> 03:10.700
So now we can add these two methods, onCancel

03:13.410 --> 03:23.590
and onBookPlace was the other method I think, yes it was and now in there to close the modal,

03:23.680 --> 03:29.920
you can again inject something where Ionic helps you and that would be the modal controller.

03:29.920 --> 03:35.200
So you simply inject the modal controller from @ionic/angular, so the same tool we used for opening

03:35.290 --> 03:42.670
the modal and then in onCancel for example, you can execute this modal controller dismiss and it will

03:42.670 --> 03:44.860
dismiss the nearest modal it finds,

03:44.860 --> 03:51.130
alternatively you can also define the ID of a modal as a third param and if you don't need the others,

03:51.130 --> 03:58.530
you can simply pass null as a third param because when opening a model which we're doing here, besides

03:58.540 --> 04:04.060
setting component and component props, you can also set an ID so that if you have multiple modals that

04:04.060 --> 04:09.490
might be open at the moment, that are overlapping each other or whatever, you can control which modal

04:09.490 --> 04:14.680
to close, otherwise it will close simply the topmost one which is perfectly fine here.

04:14.800 --> 04:19.510
Now I said you can pass null for the other arguments but the other arguments are the interesting thing

04:19.510 --> 04:20.260
here.

04:20.260 --> 04:25.640
We can pass back some data here as a first argument or null if you don't plan to,

04:25.660 --> 04:30.010
you can set a role which is a string, that is something you can set however you want,

04:30.010 --> 04:34.630
I'll name it cancel and you'll be able to read that role later so that you have a quick and easy way

04:34.630 --> 04:40.530
of finding out which button was pressed and then that ID I already mentioned. In onBookPlace

04:40.540 --> 04:47.530
I will also dismiss but here of course you typically want to pass some data, maybe in this modal later

04:47.530 --> 04:54.640
in this application people will be able to select a starting and ending date for when they want to book

04:54.640 --> 04:58.870
this place or how long they want to stay there and you might want to pass that data back.

04:58.990 --> 05:05.050
For now, I'll just pass back some dummy message but again here, you can pass any key-value pair you want,

05:05.080 --> 05:09.010
this is a dummy message, just to show how this would work

05:09.010 --> 05:13.660
and now here the role could be confirm. Again these roles are totally settable by you,

05:13.660 --> 05:17.050
this is a not limited amount of strings you could use.

05:18.220 --> 05:20.790
So we got this way of closing the modal now,

05:21.130 --> 05:22.540
now let's see whether that works.

05:26.350 --> 05:33.290
Let's login, go to Manhattan, click book and let's cancel, certainly closes it,

05:33.290 --> 05:36.260
let's click book, certainly closes it as well.

05:36.260 --> 05:39.920
How can we find out which button was pressed and how can we get that data?

05:40.100 --> 05:43.970
For that we go back to the place where we opened the modal, here.

05:43.970 --> 05:46.840
Now here we get that modal element and we present it.

05:47.000 --> 05:58.130
Now we can set a listener here with onDidDismiss and onDidDismiss returns a promise, so we can return

05:58.130 --> 05:58.850
this here

05:58.970 --> 06:05.480
so that on this main promise chain, I can chain another then block. This now will hold my result data

06:06.110 --> 06:13.560
and the result data in turn will hold if we log it, data and role,

06:13.560 --> 06:17.010
so these first two arguments we could pass to dismiss.

06:17.010 --> 06:24.930
So let's output both here, result data data and result data role and let's already use that role and

06:24.930 --> 06:29.130
check if result data role is equal to confirm,

06:29.130 --> 06:31.460
that was one of the roles we set in the modal,

06:31.530 --> 06:38.520
then I will also output booked here and I'll not do that if we chose the cancel button

06:38.530 --> 06:43.450
and therefore the role is set to cancel as we did it in the dismiss method.

06:43.450 --> 06:46.090
So now let's log back in,

06:46.090 --> 06:52.570
open New York, click book and if I now click the cancel button, we see null and cancel which makes sense

06:52.570 --> 06:57.310
because our role we set was canceled and we didn't pass any data.

06:57.310 --> 07:02.860
If I click book however, we see message, this is a dummy message and we see that the role is confirm

07:03.130 --> 07:08.740
and therefore we logically also see the booked output which stems from this if statement.

07:08.800 --> 07:15.310
So this is how you can open a modal, pass data into it, close it and pass data back and then use that

07:15.310 --> 07:18.420
data which is pretty much all we need right now

07:18.430 --> 07:19.210
in my opinion. 
