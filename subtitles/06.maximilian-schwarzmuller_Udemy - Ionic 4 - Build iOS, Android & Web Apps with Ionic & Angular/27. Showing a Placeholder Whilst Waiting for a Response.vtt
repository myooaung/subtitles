WEBVTT

00:02.180 --> 00:09.020
So we're almost done with this refresher which is not that short because Angular is quite complex and

00:09.140 --> 00:14.990
I want to conclude this by making sure that whilst we are waiting for the response, I'm not showing nothing,

00:14.990 --> 00:20.480
instead it would be nice to have some let's say text here loading and we show that and you could easily

00:20.480 --> 00:24.490
imagine that this is a spinner you're showing whilst you're waiting for the response

00:24.710 --> 00:29.330
or maybe you have something like fetching data here.

00:29.390 --> 00:31.300
Now I want to show this

00:31.310 --> 00:38.360
as long as we don't have a response and remove it as soon as we do have it. Well to implement this, I

00:38.360 --> 00:46.110
will add a new property in the persons component and I'll simply name this isFetching

00:46.120 --> 00:53.980
and initially it's false let's say, it's a boolean therefore and in ngOnInit before I fetch persons,

00:53.980 --> 00:54.760
I'll

00:54.760 --> 00:56.020
set this to

00:56.020 --> 00:59.920
this isFetching true, so I'll set it to true.

00:59.920 --> 01:06.460
But whenever I got a new list here, whenever I got new persons, I'll set it to false again

01:06.460 --> 01:12.190
and just because this comes first does not mean that it runs first because this part here in this function

01:12.190 --> 01:18.250
we pass to subscribe will only run when this is triggered which is not the case immediately.

01:18.250 --> 01:24.130
So now isFetching switches between false and true depending on whether we are loading or not.

01:24.430 --> 01:31.300
Now we can use another directive here in the template, the ngIf directive, *ngIf

01:31.340 --> 01:36.730
and here we can pass in a condition which controls whether this element and its child elements should

01:36.730 --> 01:38.240
be shown or not.

01:38.320 --> 01:44.630
And this should be shown if isFetching is true and the unordered list should be shown if it is false,

01:44.680 --> 01:52.700
so if it is not true. And with this implemented if I save that, you see fetching data and once the

01:52.700 --> 01:56.690
data is there, you see the list, here it is again.

01:56.690 --> 02:03.320
So that is another important structural directive Angular offers and it's important to be aware of that one.
