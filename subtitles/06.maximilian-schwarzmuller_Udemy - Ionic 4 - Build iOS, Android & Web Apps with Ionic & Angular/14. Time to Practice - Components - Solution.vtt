WEBVTT

00:01.950 --> 00:09.350
So I empty this project I'm back on a very plank project with an empty content in my home page here.

00:09.540 --> 00:13.340
And what I want to start with is the grade which should hold all the content.

00:13.380 --> 00:20.830
So Eddie eyeing CRID component as a rapper then I'll have my own row here and I'll start flying Cullom.

00:20.920 --> 00:27.630
Now in this column I simply want to explain what this app does what the idea behind this app is.

00:27.870 --> 00:34.050
So I will simply add h free tech there where I say entered the right code since this ultimately is the

00:34.050 --> 00:42.060
goal and I'll add a paragraph below where else say tap twice and press 4 times of course.

00:42.060 --> 00:46.450
You can also change your code and therefore your instructions here.

00:46.530 --> 00:53.550
Now if we save this we see that we're generally going in the right direction that we will have a header

00:53.550 --> 00:57.150
and a paragraph here in a second but it's not centered.

00:57.210 --> 01:05.100
If you remember in the last video that was centered Well we can easily center it by adding the text

01:05.100 --> 01:12.990
center helper utility here help or directive to the I call element which contains both the heading and

01:12.990 --> 01:18.500
the paragraph with this if we rebuild our application you see now it's nicely centered.

01:18.510 --> 01:20.610
So that is the first step.

01:20.610 --> 01:28.080
The next step is to add de-list which keeps track of how often we tap and pressed for this I'll add

01:28.080 --> 01:35.730
a new row in my grid year and a new Cullin And inside this column I'll create my list with two items.

01:35.730 --> 01:41.670
The first item will simply hold a paragraph where I say tapped and then I'll put the number of well

01:41.670 --> 01:48.810
tap events your anti-Second I an item in the same list of course will hold a paragraph where I say press

01:48.840 --> 01:52.330
and output times I press this year.

01:52.560 --> 01:57.840
I can already at the properties will need to track those events so I'll add a tap's property which is

01:57.840 --> 02:04.890
Ciro initially and the press property which is zero and let's name all of this.

02:04.890 --> 02:06.920
Let's let's just tapped too.

02:06.930 --> 02:14.010
So now I got my two properties here which tracked the occurrences of those events and then I can output

02:14.250 --> 02:19.020
tapped here and pressed here.

02:19.030 --> 02:22.400
So now I'm outputting those properties while stringin repletion.

02:22.550 --> 02:25.960
If we save this we should now see a list.

02:26.240 --> 02:31.050
Looks good and we see 0 0 so we correctly bind to those properties.

02:31.160 --> 02:37.850
And with that we already used to degrade quite a bit and our iron list though of course it's a very

02:37.910 --> 02:39.870
simple straightforward list here.

02:40.670 --> 02:45.620
Now with this added It's time to work on the reset buttons.

02:45.620 --> 02:52.250
And as I said I want to outsource those buttons into a separate component so that you really practice

02:52.250 --> 02:59.000
that too that you really are aware of that way of working with your application of splitting it up into

02:59.000 --> 03:00.970
multiple components which you should do.

03:01.310 --> 03:08.880
For this I'll add new components folder in the source folder and there I'll add my reset component again.

03:08.900 --> 03:15.380
I'm going to name the full file reset start Kumho and you can omit DL component here if you want.

03:15.380 --> 03:22.430
So I'll name the class year reset component and here you should add the component to really make sure

03:22.430 --> 03:27.560
that everyone understands that this is an angle or two component or used as such.

03:27.560 --> 03:32.670
And we would make it usable as such by adding the component decorator to it.

03:32.720 --> 03:40.060
Of course you then need to import component from at angular core.

03:40.880 --> 03:45.950
Now if this it's time to add a selector to this component so that it can actually embedded in the template

03:46.280 --> 03:51.500
here name it app reset and with the selector added.

03:51.620 --> 03:53.840
I also want to add a template.

03:53.920 --> 03:55.380
I'll use the inline template here.

03:55.450 --> 03:58.390
You could of course also use an external file.

03:58.390 --> 04:00.520
Now how should this template look like.

04:00.520 --> 04:03.250
What do I want to have inside of this template.

04:03.520 --> 04:10.540
If we go back to the home page you'll see that I probably want to include it here below the row holding

04:10.540 --> 04:11.550
the list.

04:11.710 --> 04:16.690
Therefore the template should actually also have in row element.

04:16.780 --> 04:18.780
Because I will use it in a grid.

04:18.790 --> 04:19.330
Right.

04:19.360 --> 04:27.220
So let's add I in row here and in this row we therefore also of course need the iron column.

04:27.220 --> 04:31.010
So let's also add the in call element.

04:31.390 --> 04:35.650
So with that we got a component which you can easily use in an existing grid.

04:35.650 --> 04:42.460
Exactly what we're planning to do now of course if you don't want to use it or if you can put it another

04:42.460 --> 04:42.760
way.

04:42.760 --> 04:48.970
Of course if you want to use it in both grids and non-Brits you should not add that here and instead

04:49.000 --> 04:55.510
add it here and then only include what's left in your component so the part which I'm adding now between

04:55.510 --> 04:57.850
those wrapping grid elements.

04:57.850 --> 05:00.400
So that would make it even more reusable.

05:00.430 --> 05:05.680
But since they only use it integrate here there's nothing wrong with including the grid logic in this

05:05.680 --> 05:06.860
component itself.

05:07.760 --> 05:14.570
So is this what I want to have inside of this component to your ears or in the first column I should

05:14.570 --> 05:18.110
say is of course my button.

05:18.110 --> 05:23.940
So here I want to add a normal button which will add the on button directive to.

05:24.170 --> 05:25.640
I want to make this button read.

05:25.640 --> 05:27.670
So I'll add color danger.

05:27.950 --> 05:33.860
I want to make it small and I want to make it a block element to take up the full width of this column.

05:34.460 --> 05:41.810
With this I added or I created my basic button all split up over multiple lines so that it's a bit easier

05:42.020 --> 05:43.880
to read here.

05:44.540 --> 05:46.360
And I'll give it a caption of reset.

05:46.370 --> 05:51.680
All that of course also means that I should add a listener and I will add a click listener since I want

05:51.680 --> 05:53.410
to listen to all techy events.

05:53.570 --> 05:58.760
If you only wanted to listen to tap's make sure to change just to tap instead.

05:58.970 --> 06:06.050
Here I wouldn't say on reset and that won't pass argument of all this is a string so a string which

06:06.050 --> 06:14.210
says all know if this simply replicates is Cullom here twice so that I also have a column which holds

06:14.210 --> 06:22.510
a button where I will say taps and one where I will say press corps choose any captions you like and

06:22.520 --> 06:28.930
here's a old past tab and hearable per pass press as arguments to the on reset method.

06:28.930 --> 06:33.980
Now this on reset method also needs to be created in the component body of course.

06:33.980 --> 06:36.270
And here we know we will get a string.

06:36.500 --> 06:40.340
So I'll give this argument and name of type and it will be of type string.

06:40.460 --> 06:47.300
So do you reset type will be stored in this argument here and then I want to emit this event because

06:47.300 --> 06:49.530
I don't want to handle it here.

06:49.610 --> 06:51.250
I can't handle it here.

06:51.470 --> 06:59.050
I want to reset my tapped and pressed properties in the home page not in the Reset component.

06:59.300 --> 07:05.970
So I somehow need to get my event from the reset component to the home page.

07:06.440 --> 07:10.720
It should become clearer how that works want to actually include that component.

07:10.850 --> 07:16.970
So let's use our selector preset here and let's edit your home page here.

07:16.970 --> 07:22.550
Remember that our Reset component holds the iron row in and call so we can easily add it to our existing

07:22.550 --> 07:23.370
grid.

07:23.750 --> 07:29.090
Now I added it here and if we now have a look at it in the running application we should already see

07:29.090 --> 07:30.610
the free buttons.

07:30.950 --> 07:39.350
Well not because you forgot one important step of course you always need to add components to AB module.

07:39.350 --> 07:44.630
So here we need to add the reset component to the declarations Airi.

07:44.780 --> 07:50.280
You don't need to add a two entry components because we're using it with selector therefore angler too

07:50.290 --> 07:53.100
will automatically find out that we're about to use it.

07:53.420 --> 07:58.610
And of course you also need to add tipoff the import path at the top.

07:58.610 --> 08:02.520
Now with this if I save it now it should work correctly.

08:02.570 --> 08:07.650
And now you see the free buttons though of course pressing them won't Doucette do anything.

08:08.120 --> 08:10.640
So as I said I want to emit this event.

08:10.640 --> 08:15.650
I want to make sure that when I click a button the Morrisette component this event reaches my home page

08:16.070 --> 08:22.150
and for this I will use a technique angler to use as always in such cases.

08:22.280 --> 08:26.460
I will add my own custom event to the reset component.

08:26.690 --> 08:34.190
I will name it did a reset and this needs to hold an event emitter.

08:34.730 --> 08:41.930
Instantiate a new object of type event emitter and event emitter needs to be imported from at angular

08:41.930 --> 08:42.950
core.

08:43.400 --> 08:48.920
Now this is a generic type that it will actually emit an event with a string dataset with some text

08:48.950 --> 08:50.020
as data.

08:50.390 --> 08:55.130
And with that I can now successfully emit this event here in on reset here.

08:55.190 --> 09:02.330
It will emit dangerous set and this is normal plain vanilla angler to code which you should recognize

09:02.330 --> 09:03.920
and be aware of.

09:03.920 --> 09:06.850
Now here I will simply emit the event type.

09:06.860 --> 09:08.170
So what I am passing here.

09:08.180 --> 09:16.220
Tap press or all and it will simply pass this on to anyone who's listening now in order to enable the

09:16.220 --> 09:22.840
parent component to listen to this event I need to add a decorator in front of it reset and that's d

09:23.150 --> 09:30.290
at output decorator which tells you this property actually is an event and you should be able to listen

09:30.290 --> 09:32.880
to it from a parent components perspective.

09:33.200 --> 09:36.970
So I will add output here as an import.

09:36.970 --> 09:42.530
We need to import it from an angle coord and with this change in place I can go to my home page and

09:42.530 --> 09:48.400
on the app reset selector I can now listen to did reset to my own event.

09:48.410 --> 09:49.610
I just created.

09:49.900 --> 09:54.220
Well and in there I will then now execute on the reset method.

09:54.230 --> 09:58.970
Let's say you can name this method whatever you want to name it and this method now needs to be implemented

09:59.030 --> 10:00.520
on your home page.

10:00.560 --> 10:10.660
So let's add a year to the component body to the typescript file in on reset I will now handle the event

10:10.870 --> 10:14.200
minute by clicking one of my reset buttons.

10:14.260 --> 10:17.910
Now I'm passing event data here in the Reset component.

10:17.920 --> 10:24.670
I'm passing this type string which I'm well passing to a method when I click a button I'm passing it

10:24.700 --> 10:35.300
on by defining it here as the argument for emit and therefore I can't extract it in my home page template

10:35.580 --> 10:42.030
by using Thaller assign event is reserved to word which always gives us the event data of an event.

10:42.030 --> 10:48.480
Therefore I passed as now to on the reset here I know that I get my reset type or whatever you want

10:48.480 --> 10:50.280
to name it which is a string.

10:50.550 --> 10:59.180
Well and with that I can simply add a switch statement where I switch my reset type and where I now

10:59.180 --> 11:06.230
handle the case deaded is let's say tap here when they click the reset taps button.

11:06.230 --> 11:09.920
So now I handle the case that it's tap like this.

11:10.310 --> 11:17.540
And in this case I want to say this tapped and set it backwards euro and the break of course that I

11:17.540 --> 11:20.330
also have the case that it's Press.

11:20.540 --> 11:23.380
This is this button here.

11:23.710 --> 11:25.600
And if it is a press event.

11:25.930 --> 11:32.690
Well in this case I want to set press back to zero and break or for any abrogates.

11:32.800 --> 11:43.230
I will define a default where I simply set tapped to 0 and pressed to zero like this and with this I

11:43.230 --> 11:45.430
have my recept logic in place.

11:45.480 --> 11:51.000
I am able to listen to those button clicks and then change something in my home page.

11:51.020 --> 11:57.600
Now we won't be able to see the action though because resetting those properties to zero is nice but

11:57.600 --> 11:59.910
we don't even have a way of incrementing them.

12:00.180 --> 12:06.670
So let's now add this final piece you're the listeners for tap and press events.

12:06.690 --> 12:16.770
So back in my home page template here below my app reset component I'll add a new row and a new column

12:16.770 --> 12:24.730
in this role of course and this column should actually hold my tapping area.

12:25.020 --> 12:27.900
I'll add a inline style here.

12:27.900 --> 12:34.050
You could of course all the add your own class but all I want to do here is I want to quickly set the

12:34.050 --> 12:36.210
color to light green.

12:36.210 --> 12:38.490
That's why I used inline style.

12:38.490 --> 12:40.860
I want to center the text.

12:40.980 --> 12:48.360
Let me wrap this over multiple lines now and I want to listen to the most important part to a tab and

12:48.360 --> 12:50.550
then execute you on tab methods.

12:50.550 --> 12:56.100
So here I'll say tab here and then I'm going to duplicate this whole column.

12:56.100 --> 13:01.920
Notice that I register detat event on the column itself does of course is possible since this is a normal

13:01.920 --> 13:09.420
component in the end and all on the second column all change the Tapi Ventoux press event and say on

13:09.420 --> 13:14.360
press and simply say press here as text inside of this column.

13:14.760 --> 13:18.390
Well with that we need to implement on tap and on press.

13:18.390 --> 13:23.630
So let's go back to our component body and implement own on tap.

13:23.880 --> 13:34.020
And then also the IT ON press and in on tap I will simply use Konsole locked is tapped so that we can

13:34.020 --> 13:36.510
see that it happened in the console too.

13:36.720 --> 13:44.280
And then I will say this tabbed plus plus two incremented by one and in on press I will say console

13:44.280 --> 13:57.150
log pressed and then you guessed it I will increment pressed by one like this.

13:57.180 --> 14:04.590
Now with that in place if I safeties and go back to the application I can now tap this and you'll see

14:04.590 --> 14:07.540
the counter go up there as well as the console log.

14:07.740 --> 14:10.540
I can reset taps this works correctly.

14:10.680 --> 14:12.390
I can recite all.

14:12.420 --> 14:14.720
Now that's a long press year.

14:14.790 --> 14:16.250
Looks good too.

14:16.360 --> 14:20.960
I can reset all and I can reset just the presses.

14:21.120 --> 14:25.000
So with that we got a working application.

14:25.110 --> 14:26.580
Well almost.

14:26.580 --> 14:32.370
We're not showing the you one text up there so let's add this final piece and this is of course the

14:32.370 --> 14:34.020
super easy to add.

14:34.110 --> 14:38.670
I will use the following approach but there are other approaches of course too.

14:38.940 --> 14:47.440
I will simply add a method did win which simply returns this tapped equals to.

14:47.640 --> 14:58.620
Remember that was our condition tap twice press four times and this preste equals four.

14:58.630 --> 15:01.920
This should of course also have two equal signs here.

15:02.140 --> 15:10.130
So if I am returning this boolean check here where I check if this tap is true and this press for if

15:10.150 --> 15:12.130
this is the case it returns true.

15:12.130 --> 15:14.210
Otherwise this method returns false.

15:14.230 --> 15:16.370
Therefore this method is a good candidate.

15:16.390 --> 15:23.440
Your onli paragraph to add NGF and check if we did and win in which case I want to show the instructions

15:23.950 --> 15:28.450
or on a second paragraph I simply duplicated this one.

15:28.450 --> 15:31.120
I will change this to date wins.

15:31.120 --> 15:35.410
Now if this returns true in which case I would say you won.

15:35.440 --> 15:38.500
And of course there are other ways of implementing this too.

15:38.500 --> 15:45.520
Now with this in place if we saved us and let it recompile and we tap twice and then press four times

15:45.520 --> 15:51.480
down there we should see you one and once said we're back to the instructions.

15:51.820 --> 15:54.200
So this is my solution to this assignment.

15:54.280 --> 15:57.950
And chances are high that you got a different way of doing this.

15:57.970 --> 15:59.290
And that's perfectly fine.

15:59.290 --> 16:01.080
There is no single correct way.

16:01.240 --> 16:07.750
I just wanted to show you a possible approach especially the part where we outsource these patents into

16:07.750 --> 16:12.630
an extra component with D at output event here might be interesting.

16:12.730 --> 16:16.720
But of course your approach might be perfectly fine and working too.

16:16.720 --> 16:20.360
It's an exercise to see different approaches in the end right.

16:20.650 --> 16:26.410
So if data I hope you feel comfortable using those types of components and working with components ionic

16:26.440 --> 16:33.030
two components and normal components or your own components I should say in ionic too.

16:33.250 --> 16:39.820
Let's now move onto the next section where we will actually learn how to run our app on the real device.
