WEBVTT

00:02.300 --> 00:10.910
Now how do we use these components? In a project where we imported this Ionic component library and

00:11.120 --> 00:15.120
there are actually different ways of importing it as you will also learn in this course,

00:15.140 --> 00:21.020
so in a project where we have this library imported, we have access to this core of Ionic, to these components

00:21.350 --> 00:25.360
and we use them just like regular HTML elements

00:25.490 --> 00:30.950
and now that is really important to understand if you never worked with web components before, the term

00:31.250 --> 00:35.060
might be or will be brand new to you and you might not know how to work with them.

00:35.420 --> 00:41.510
Well the thing is you just add them with their tags into your HTML code, in the places where you want

00:41.510 --> 00:45.480
to use them, just like regular HTML elements

00:45.530 --> 00:52.100
and here is an example, this would be the ion-button, basically a button provided by Ionic which wraps

00:52.160 --> 00:57.930
a native normal HTML button and then add some extra styling and extra functionality to it

00:58.190 --> 00:59.450
and that's also important.

00:59.450 --> 01:03.110
These web components are not just about pre-styled elements,

01:03.200 --> 01:08.570
they do add Javascript logic to them as well or at least they can and they often do

01:08.780 --> 01:14.630
and then this button here can be configured, it can receive attributes, just as you can set attributes

01:14.690 --> 01:20.660
on normal HTML elements. But of course the attributes you can set here and the properties you

01:20.660 --> 01:26.900
could set on this button programmatically as well depend on the exact web component you're using because

01:27.050 --> 01:32.810
all the things you can configure here, like the fill mode which defines which style of button this is

01:33.080 --> 01:34.000
and the color,

01:34.100 --> 01:41.900
these are of course things you can configure because the Ionic team made them configurable and the official

01:41.900 --> 01:48.710
docs are the place to go to learn which attributes and properties you can set on these web components

01:48.800 --> 01:52.430
and I'll guide you through thee docs later in this module.

01:52.790 --> 01:55.430
So we use it like a normal HTML element,

01:55.430 --> 02:02.180
it supports attributes and properties and these elements can also emit events and that is also quite

02:02.180 --> 02:03.430
interesting,

02:03.710 --> 02:09.560
you can emit your own events when you are building your own web components and therefore a lot of Ionic

02:09.680 --> 02:10.610
components

02:10.610 --> 02:14.300
actually also emit customer events to which you can listen,

02:14.300 --> 02:20.690
something like a special ion change event for select dropdown for example and we'll see some of these

02:20.690 --> 02:24.390
events throughout the course. Now under the hood,

02:24.390 --> 02:31.710
such a button as I mentioned is in the end a combination of the three core drivers of front-end web

02:31.710 --> 02:35.540
development. It contains some HTML code under the hood

02:35.550 --> 02:43.080
and here, we have the normal regular by default supported HTML elements and in the end, all web components

02:43.140 --> 02:48.280
are made up of such vanilla HTML elements.

02:48.310 --> 02:52.520
Now actually, a web component can be made up of other web components as well

02:52.530 --> 02:57.300
but if you dig down through all web components, the one at the bottom which doesn't include other web

02:57.300 --> 03:01.590
components will only include normal HTML elements,

03:01.800 --> 03:08.460
so that's important to understand. Such a web component is basically like a wrapped up piece of pre-structured

03:08.550 --> 03:10.230
HTML code.

03:10.230 --> 03:15.070
Now we don't just have HTML code, we also have some CSS styling

03:15.180 --> 03:18.960
and here you actually see something special for the value, for the color,

03:18.960 --> 03:25.980
this var thing. This is a CSS variable and this makes styling this web component from outside and

03:25.980 --> 03:31.260
applying a general theme very easy and we'll dive deeply into this in the styling and theming module of

03:31.260 --> 03:32.010
the course.

03:32.640 --> 03:39.180
But as I mentioned, a web component is not just a combination of HTML and CSS, we also have a Javascript

03:39.180 --> 03:45.900
portion in there which adds certain functionalities to that component, which exposes properties that

03:45.900 --> 03:52.590
can be set, which controls things like that we can set the color or the fill mode of that button.

03:52.590 --> 03:58.800
So all of that is controlled with JavaScript and this is all packaged up together and basically wrapped

03:58.860 --> 04:00.680
into a Javascript object

04:00.690 --> 04:07.040
you could say which we can add to the HTML code to the DOM with this ion-button selector.

04:07.350 --> 04:13.830
Now under the hood, this also uses a technique called The Shadow DOM and CSS variables which help

04:13.830 --> 04:19.420
with encapsulating the styles of this component, so that the styling applied to the elements in

04:19.420 --> 04:26.220
this component doesn't spill over to your app or to other components and the Ionic web components

04:26.310 --> 04:33.860
actually also automatically load any polyfills that might be required to make them run on older browsers.

04:33.930 --> 04:40.830
Modern browsers support all the web component features by default, older browsers don't and therefore

04:41.040 --> 04:47.220
Ionic actually make sure that these components work on older browsers as well by automatically polyfilling

04:47.220 --> 04:48.920
everything that is required.

04:50.000 --> 04:55.100
Now that is as deep as I want to dive into web components here because you don't need to be able to

04:55.100 --> 05:00.410
build web components to use them. If you want to build them and if you want to understand everything

05:00.410 --> 05:05.570
here, you can take my Web Component With Stencil course. Stencil

05:05.600 --> 05:11.810
as I mentioned in the first course module is a tool developed by the Ionic company, by the Ionic team

05:12.050 --> 05:16.140
that they used internally to build all these web components,

05:16.150 --> 05:20.130
it's in the end a tool that just makes the creation of web components easier,

05:20.150 --> 05:25.470
it still spits out normal vanilla web components in the end and you can use that tool too

05:25.490 --> 05:31.670
and in this course I do cover it. Now may be also interesting to you, Ionic is of course open source and

05:31.670 --> 05:36.810
if you visit it's repository on Github here under Ionic team Ionic,

05:37.010 --> 05:43.610
you can always dive into this core folder and inspect the source code of the component you're interested

05:43.610 --> 05:44.030
in.

05:44.150 --> 05:49.970
For example if you select a button here, this is this ion-button component, there you will always find

05:49.970 --> 05:57.680
a TSX file because Stencil uses Typescript and so on and in this TSX file, you see how in Stencil,

05:57.800 --> 05:59.640
this component was created

05:59.780 --> 06:04.730
and this is not the code that gets imported into your app when you include that component,

06:04.730 --> 06:09.170
this is the raw code which is actually compiled to a native component by Stencil,

06:09.170 --> 06:10.790
you see the raw version here

06:10.850 --> 06:15.470
but if you are learning Stencil and you want to understand what happens under the hood, you can always

06:15.470 --> 06:17.850
dive into the source code of this component

06:17.970 --> 06:26.120
and for example also see which properties you can set there, things like the disabled property, the button

06:26.120 --> 06:32.250
type, the color and of course you can also see this in a more convenient way in the official docs

06:32.360 --> 06:38.840
but I find it quite interesting to sometimes dive into this official source code to understand how

06:38.840 --> 06:41.390
this actually works under the hood and how this,

06:41.420 --> 06:44.450
in this case this button, is created under the hood.
