WEBVTT

00:02.130 --> 00:03.870
So the goal is clear.

00:03.870 --> 00:08.750
We've got four exercises Let's start with exercise 1 and create two new pages.

00:09.060 --> 00:10.990
I'll create one of them automatically.

00:11.010 --> 00:12.550
And one of them manually.

00:12.690 --> 00:16.050
Let's start with the automatic one in a new terminal window.

00:16.050 --> 00:23.430
I will run a I want to generate and I will generate a new page I will generate the shop page so this

00:23.430 --> 00:28.020
will give me a new folder in the pages folder and here it is the shop page.

00:28.020 --> 00:34.350
Now unfortunately those pages those components 10 tend to be pretty crowded so clean them up and get

00:34.350 --> 00:36.190
rid of all the things I don't need.

00:36.210 --> 00:39.460
So now we have a normal angler to component level.

00:39.520 --> 00:47.250
Also get rid of this comment in the template I will renamed it to shop with a capital ass and here on

00:47.250 --> 00:49.350
this page you will see will add some content.

00:49.440 --> 00:56.180
Before doing that though I will add a buyout page and again you can nest this page in the shop or register

00:56.180 --> 00:58.770
it on the pages folder itself.

00:59.040 --> 01:05.190
Now I will trade in the pages folder because theoretically you could argue that a buyout page is accessible

01:05.190 --> 01:09.090
from different parts of Europe but choose whatever you like.

01:09.450 --> 01:14.260
So here Whoops I will create a new directory named buyout and Endace directory.

01:14.270 --> 01:21.600
I will create a new file named biodata TS and here I will export a normal component or model types of

01:21.600 --> 01:22.930
class to begin with.

01:23.070 --> 01:30.330
I'll name it biote page though because it will serve as a page and here at the component decorator.

01:30.330 --> 01:37.020
As you learned before now dyads component decorator component needs to be imported though you'll need

01:37.020 --> 01:43.080
to import component from at angular coord like this.

01:43.450 --> 01:46.440
Well then you need to pass an object configuring this component.

01:46.630 --> 01:48.620
So I will have a selector.

01:48.630 --> 01:58.830
I'll give it a select of page shop excuse me fly out of course the bio page and I will point to an external

01:58.870 --> 02:07.870
template which I will save in a biodata HMO file so I will create a file here by our door HVM out and

02:07.870 --> 02:15.310
in this file we need two components at least the Ironhead header to mark the headers section and I am

02:15.310 --> 02:17.380
content with that.

02:17.380 --> 02:20.770
We're almost good to go but it would be a pretty boring page.

02:21.010 --> 02:27.250
Let's add a nav bar so that I onic also has a place where it can place the back button otherwise you

02:27.250 --> 02:28.680
won't have a back button.

02:29.020 --> 02:30.700
And let's add a title.

02:30.850 --> 02:34.450
So hearable such as say buyout and an iron content.

02:34.450 --> 02:41.140
I will add the padding directive to get some padding on the edges so if this I actually created two

02:41.140 --> 02:49.210
new pages and this already is exercise one solved let's move on to exercise 2 with two new pages created.

02:49.210 --> 02:53.080
It's time to fold them with some life so we should add some buttons.

02:53.170 --> 02:55.120
Let's start with the home page here.

02:55.120 --> 02:57.820
I will add a button which leads to the shop page.

02:57.850 --> 02:59.650
I already am on the home page.

02:59.650 --> 03:03.990
It's just common with just taking up all the spacier and below to comment here.

03:04.180 --> 03:12.760
I will add a button give a d iron button directive and load the shop page so I will say go to shop or

03:12.760 --> 03:14.620
whatever you prefer.

03:14.620 --> 03:18.310
Here I can simply add a click listener and add on.

03:18.310 --> 03:27.850
Go to shop and with this place I will at the Ango to shop method to the body of this component on go

03:27.850 --> 03:31.160
to shop to do body of this class here.

03:31.480 --> 03:37.990
And we already get enough control injected here by default so I can use to snap controller to now push

03:38.220 --> 03:44.020
a page and I will push the shop page like this.

03:44.020 --> 03:47.540
Make sure to also add the import.

03:47.560 --> 03:49.250
Now let's see if this works.

03:49.330 --> 03:51.100
Ionic surf is already running.

03:51.100 --> 03:58.590
So I've been saving this will recompile the application and will reload it in the browser.

03:58.900 --> 04:01.890
Now watch what happens if I click on go to shop.

04:01.990 --> 04:07.320
We get an error because we forget something important and I left this out intentionally.

04:07.420 --> 04:15.430
You should make sure to add any new page to your app module overwise angler too is not aware of it and

04:15.430 --> 04:17.020
is not able to load it.

04:17.260 --> 04:21.310
So let's add it here let's at the shop page.

04:21.310 --> 04:23.640
And let's also at the buyout page.

04:23.640 --> 04:26.140
Make sure to alter at the imports.

04:26.140 --> 04:27.840
Now you probably already know that.

04:27.850 --> 04:33.130
We also need to add two entry components but let me show you what happens if we don't add them to entry

04:33.130 --> 04:34.240
components.

04:34.230 --> 04:36.870
This would be the set up we use in the normal English to AB.

04:36.910 --> 04:39.630
This will be enough in a normal English to app.

04:39.640 --> 04:45.760
Now if we don't add a two entry component and we click on go to shop we still get an error that no component

04:45.760 --> 04:51.670
factory was found because it doesn't create such a component factory for us because it's not ready to

04:51.670 --> 04:54.920
create those components because it doesn't see us use them.

04:54.940 --> 04:58.030
We don't use the selector we don't use the angle to router.

04:58.330 --> 05:03.820
So by adding them to entry components we're telling and all to please create such a component factory

05:03.820 --> 05:04.580
for us.

05:04.690 --> 05:11.500
And now we were able to actually click on this go to shop button and go there successfully.

05:11.500 --> 05:14.030
So let this reload click and go to shop.

05:14.050 --> 05:17.690
Here we are the shop page is pretty boring though.

05:17.760 --> 05:19.170
So let's work on this too.

05:19.290 --> 05:22.660
And let's add a button here with this button.

05:22.710 --> 05:25.200
I want to be taken to the eye and click.

05:25.260 --> 05:34.920
I want to be taken to the bar by out so buy out and I can again say click on go to buyout or let's simply

05:34.920 --> 05:41.610
say on by now we will pass some data student wouldn't for now I will leave it like this on bias the

05:41.610 --> 05:45.150
method I need to add to my component and we need an AF controller.

05:45.180 --> 05:52.850
So that's injected let's store it in a property named nav controller and lets add nav controller here.

05:52.920 --> 05:55.830
You also need to make sure to import it.

05:56.040 --> 06:05.120
You need to import nav controller from ionic angler with this this will work correctly.

06:05.190 --> 06:13.300
And now you can say this nav controller push and I want to push my buy out page.

06:13.380 --> 06:14.500
So let's do this.

06:16.860 --> 06:21.070
Also make sure to add the import to the buyout page here at the top.

06:21.810 --> 06:28.360
With this in place I can save this and we should now be able to successfully go there.

06:28.480 --> 06:34.590
So click on go to shop and click on buyout were on the buyer page the pages itself are pretty boring

06:34.780 --> 06:37.730
but will soon change to us and pass some data around.

06:37.840 --> 06:41.180
But I'd say for now we solved exercise 2.

06:41.260 --> 06:45.220
Let's now move on to exercise free and actually pass some data.

06:45.220 --> 06:47.290
We added our pages and we hooked them up.

06:47.290 --> 06:53.710
Let's now pass around some data so we should create multiple products in our shop.

06:53.710 --> 07:00.580
So instead of having a buyout button I will say milk here and I will replicate this to also offer bread

07:01.030 --> 07:02.030
and apples.

07:02.170 --> 07:04.270
And of course I want to pass that data.

07:04.390 --> 07:09.140
So here in on by I want to pass my milk string.

07:09.160 --> 07:19.000
We're of course you could pass an object where you say name is milk and let's say quantity is two to

07:19.030 --> 07:23.560
kind of makes a bit more interesting choose whatever data you want to pass though.

07:23.650 --> 07:31.060
So let's do the same for bread and apples and apples and change to quantity.

07:31.060 --> 07:34.140
Let's say so 10 apples and one bread.

07:34.390 --> 07:38.940
And when it does we should also get to stay in the on by method.

07:38.980 --> 07:45.580
So here here we expect to get some product data and we know that it will be of type Object where the

07:45.580 --> 07:49.970
object has a name which is a string and a quantity which is a number.

07:50.020 --> 07:52.970
So this is a simple typescript type definition.

07:53.380 --> 08:01.060
Well if this we can go ahead and push our product data to our buyout page and then by biote page of

08:01.060 --> 08:05.690
course and want to retrieve it to retrieve it we need to inject Insaf parents.

08:05.740 --> 08:12.220
So let's quickly do this let's check now if parents here make sure you import them and desist you wrong

08:12.220 --> 08:15.280
import you should just import them from my onic angler.

08:15.420 --> 08:22.000
So import them like this and then here we kind of need to retrieve them and would again we could do

08:22.000 --> 08:25.960
this in the engine in it hook or simply in the constructor.

08:25.960 --> 08:30.120
I'll do it in a constructor to mix it up for retrieving the NAF Perens.

08:30.130 --> 08:37.180
It really depends on if your component can be cached so if there is a danger of it not being recreated

08:37.450 --> 08:43.480
and it will come back to this later retrieving data in a constructor or an engine in it is a good choice.

08:43.480 --> 08:44.640
In general though.

08:45.010 --> 08:53.410
So here let me quickly add a new property owner named product data and again we know it is a type name

08:53.410 --> 08:58.910
which is a String object which has a name which is a string and a quantity which is a number.

08:59.200 --> 09:06.980
So therefore here we can say this product data equals dis Nath Perens and then simply data.

09:07.030 --> 09:13.480
Because keep in mind in the shop here we're passing this whole object as data.

09:13.480 --> 09:20.260
So now we retrieved as Optik as it is with the name and the quantity of properties in the bower by our

09:20.260 --> 09:22.750
page we're now storing product data.

09:22.950 --> 09:24.910
NEHTA mail file.

09:24.910 --> 09:35.600
I want to output to state now so we can say your order and then output name an Access product data dog

09:35.680 --> 09:36.130
name.

09:36.130 --> 09:43.660
We know that this property will be available and quantity to output product data not quantity you like

09:43.660 --> 09:44.790
this.

09:44.830 --> 09:49.080
Now if we save this let's recompile our application and see it in action.

09:49.300 --> 09:55.930
So it really is here in browser and I click we go to shop click on milk and then see milk wanted to

09:56.490 --> 09:58.560
read Red quantity 1.

09:58.600 --> 10:01.380
And of course apples apples quantity 10.

10:01.390 --> 10:02.810
So this is working great.

10:02.980 --> 10:05.900
And with deaths we solved exercise free.

10:05.950 --> 10:12.230
Let's move on to exercise for an ad a way to actually buy our items and go back to the front page.

10:13.180 --> 10:19.370
In order to buy our items let's go to the Byard page and below our orders summary.

10:19.390 --> 10:21.650
Let's add a button on this button.

10:21.670 --> 10:26.350
I want to say by all or confirm or what ever you want.

10:27.330 --> 10:33.030
Let's add the end button directive to make it look nice and let's add a click listener here.

10:33.240 --> 10:38.760
I wouldn't say on confirm pre-Chase whatever you want to call this method you can also pick a shorter

10:38.760 --> 10:45.450
name of course and then let's go to the typed file and add this method in the file like this.

10:45.450 --> 10:52.710
So in year we now add this method with this method added We want to go back to the root page and of

10:52.710 --> 10:55.070
course we need the NAF controllers.

10:55.080 --> 10:58.950
So that's injected Neph controller of type of controller.

10:58.980 --> 11:02.330
Make sure to add the import from my own angler.

11:02.340 --> 11:08.270
Don't know why my ID is adding the wrong aport But does the correct import nav controller from my on

11:08.280 --> 11:09.300
an angler.

11:09.630 --> 11:18.090
And with this inject it in on confirm pre-Chase we can say Nav. controller pop and not just pop but

11:18.120 --> 11:22.210
all the pop to root to go back to the root page.

11:22.220 --> 11:28.650
Now as a side note you can't pass data when popping so if you plan to pass some data when going back.

11:28.650 --> 11:30.240
This does not work like this.

11:30.240 --> 11:35.610
You would need to use an angler to service and we will later in this cause see a lot of examples of

11:35.610 --> 11:38.640
storing state managing state and passing data around.

11:38.640 --> 11:41.270
So no worries with this.

11:41.310 --> 11:44.580
Let's save this and see if this works as intended.

11:44.790 --> 11:49.420
If our app reloads and we go to a shop we click on bread and click and buy.

11:49.590 --> 11:51.540
We're taken back to the front page.

11:51.540 --> 11:52.250
Great.

11:52.470 --> 11:57.930
So if that we solve all four exercises I hope you had fun with that and I hope you were able to find

11:57.930 --> 11:59.100
fitting solutions to
