WEBVTT

00:02.010 --> 00:07.560
Remember that slide where I talked about this token based authentication firebase somewhere needs to

00:07.560 --> 00:13.290
store this token and it does store it in the local storage of our browser.

00:13.320 --> 00:19.590
You can see it if you go to the grown developer tools 2 application here and then to local storage and

00:19.590 --> 00:24.930
then the localhost part you're here you see we have a key and a value.

00:25.020 --> 00:31.320
And this actually is the tokens stored by firebase Adeste is automatically for you when you call days

00:31.410 --> 00:37.060
sign up or sign in Mefford it does do this and it always has a look at this token.

00:37.200 --> 00:44.740
If you then try to do something in your application and we can later use this token to offended ourselves.

00:44.770 --> 00:48.530
I'll come back to using this token in a second or later.

00:48.540 --> 00:50.260
Now this is where it stores it.

00:50.280 --> 00:57.630
Now if I sign the user in here sign in you see now it gave us an Muto again.

00:57.870 --> 01:03.660
If I click on log out or remove this tokens so there's actually an old token which I can delete.

01:04.110 --> 01:06.570
So let's see this in action again.

01:06.570 --> 01:10.220
Let's sign the user in like this.

01:12.050 --> 01:14.080
This is now the token striated.

01:14.180 --> 01:16.140
And if it clicks log out it delete it.

01:16.220 --> 01:18.680
And this is how it determines if we are locked in or not.

01:18.710 --> 01:23.470
If there is no token we clearly are not locked in and this check happens asynchronously synchronously

01:23.600 --> 01:25.630
but very very fast.

01:25.650 --> 01:30.860
Therefore we had this issue of our navigation stacked not being initialized when we already knew we

01:30.860 --> 01:36.230
were not offending and tried to use our navigation stack to navigate somewhere else.

01:36.230 --> 01:41.840
So if this is now working the missing piece of course is the redirection when you click log out which

01:41.840 --> 01:49.100
does not happen as of now we are stuck on the shopping list page and instead until an average change

01:49.100 --> 01:51.700
detection cycle hits.

01:51.800 --> 01:58.040
And the reason for this simply is because changing the route page alone does not trigger change detection

01:58.160 --> 02:01.540
and does not resolve in any page transmission.

02:01.550 --> 02:07.820
So in order to navigate away I can go to on log out here I can use my nav controller because of course

02:07.820 --> 02:11.620
the template has been initialized and the navigation stack has been initialized.

02:11.720 --> 02:16.500
And here I can then call set root and set the root page to sign in page 2 now.

02:16.520 --> 02:24.050
Also kind of do the same I did here only for the property but now also trigger the transition off the

02:24.050 --> 02:24.950
page.

02:24.950 --> 02:31.080
I hope this can be tricky to grasp simply has to be set up in this way due to how firebase works.

02:31.100 --> 02:36.800
Of course you could also find different workarounds to make sure that you are not checking the authentication

02:36.800 --> 02:39.910
state before your navigation stack has been initialized.

02:39.950 --> 02:42.930
But this happens to work quite well.

02:43.010 --> 02:48.620
So if this now I changed that again if a cloud clicked log out you see were instantly redirected because

02:48.620 --> 02:50.530
now I also called said Drood.

02:50.660 --> 02:52.740
I already changed to property.

02:52.790 --> 02:59.240
So now we're back on the sign in page daises how we can change this.

02:59.250 --> 03:02.730
How can we all we can check the authentication state to begin with.

03:02.840 --> 03:05.340
You saw that it stored this token.

03:05.600 --> 03:12.800
Now if there's one place we can start using our indications state to send HTP requests to our server

03:13.100 --> 03:19.370
on our own through angler's HTP service to store our recipe shopping list stated there.

03:19.370 --> 03:22.390
Now let's start working on this in the next lectures.
