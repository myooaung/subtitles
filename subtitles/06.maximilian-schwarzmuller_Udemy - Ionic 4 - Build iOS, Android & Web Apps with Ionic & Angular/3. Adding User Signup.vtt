WEBVTT

00:02.410 --> 00:05.670
So let's add authentication now in our application.

00:05.860 --> 00:13.810
Thus far in our off part of the app we got our off page HD email file where we do have our off form

00:14.170 --> 00:22.810
and in on submit we are currently validating that form and thereafter we will do nothing and that of

00:22.810 --> 00:24.100
course has to change.

00:24.100 --> 00:26.220
We don't want to do nothing here.

00:26.350 --> 00:32.410
We instead want to make sure that we try to authenticate the user instead currently what we're doing

00:32.410 --> 00:36.420
is we're all triggering on log in here when we click that button.

00:36.430 --> 00:43.810
Now that will change and we'll now rewrite this to use our on submit handler here where we check whether

00:43.810 --> 00:46.870
we're logging in or not to determine what we want to do.

00:46.870 --> 00:52.030
Do we want to trigger log in here or do we want to trigger some sign up functionality.

00:52.150 --> 00:57.940
Either way we'll need to prepare our backend and for that I'll go to Firebase and there you have that

00:58.030 --> 01:04.030
authentication part and then there you can enable off indications so far based takes care about the

01:04.030 --> 01:09.310
heavy lifting happening on the server for an ad you just click on setup sign and method here and we'll

01:09.310 --> 01:13.650
go with email password here which you enable by clicking that switch.

01:13.780 --> 01:20.950
And now you can send requests to certain and points provided by firebase to either create a new user

01:21.100 --> 01:27.280
or if you have a user already to sign that user in to find these and points you can simply google for

01:27.280 --> 01:34.120
far best off REST API and you should find that firebase off REST API documentation and there you find

01:34.120 --> 01:37.320
different actions you can do with that off indication API.

01:37.450 --> 01:43.040
And for us to sign up with e-mail password and sign in with e-mail password parts here are important.

01:43.210 --> 01:49.000
There you'll find these you are all you need to send the request to you find the data you need to encode

01:49.000 --> 01:54.820
in that request body because it will be a POST request as you can see and you'll see which kind of data

01:54.820 --> 02:00.070
you will get back by the server and dare you'll learn that for example when signing in what you get

02:00.070 --> 02:06.220
back is also so-called I.D. token which is that token I managed on the slides.

02:06.220 --> 02:13.150
Now since we enabled firebase off indication in the firebase web console here we can already get started

02:13.390 --> 02:18.010
with signing up because that allows us to create new users which you of course need to do before we

02:18.010 --> 02:18.880
can sign them in.

02:19.480 --> 02:24.820
So for that we'll need that you are L here but of course I also want to write some code here in our

02:24.820 --> 02:25.370
front.

02:26.170 --> 02:33.160
And for that I'll go to my off service and in there I now need a new method which we haven't created

02:33.190 --> 02:35.020
thus far which I'll name sign up.

02:35.020 --> 02:38.580
You could of course also name it create user or whatever you want.

02:38.590 --> 02:43.630
Now here I expect to get my email which is a string and my password which is a string because these

02:43.630 --> 02:49.680
are the two pieces of information that I need to create a user with that firebase rest api.

02:49.720 --> 02:55.600
It takes an e-mail and a password that return secure token thing here is a parameter we have to pass

02:55.780 --> 02:57.420
but it should always be true.

02:57.460 --> 02:58.180
As you can see here.

02:59.020 --> 03:06.520
So with that we can now send an H to the p request and of course we do that by injecting our HBP client

03:06.670 --> 03:13.430
so I'll name that to be it'll be of type h to be client and it's imported from ET angular slash common

03:13.430 --> 03:21.450
slash H to repeat with that injected and sign up we can use it and there we can now reach out to this

03:21.600 --> 03:28.650
HBP and then send up host request as you can see in the docs it has to be a post request to you that

03:28.680 --> 03:29.880
you are L here.

03:29.880 --> 03:35.700
So let's add a string and I'll use back tricks here because we have one dynamic segment and that is

03:35.700 --> 03:37.420
our API key.

03:37.560 --> 03:44.450
Now that API key is our firebase API key and you can find that in your web project in off indications.

03:44.460 --> 03:49.950
So in the firebase console under authentication by clicking on the web setup up there and there you

03:49.950 --> 03:52.800
will find that API key which you can just copy.

03:52.800 --> 03:59.890
You can ignore the rest so after copying that if I go back to my code I can insert it here but we'll

03:59.920 --> 04:01.920
need it in on another place too.

04:01.990 --> 04:05.440
And therefore I'll do the same as I did with the Google Maps API key.

04:05.500 --> 04:12.850
I'll go to that environments file here in the environments folder and I'll add my firebase API key which

04:12.850 --> 04:15.360
is that string I just copied from there.

04:15.430 --> 04:21.760
I'll add that same key to the prod file here so that I use the same firebase key for both development

04:21.820 --> 04:27.880
and production and then back in you off service I'll inject something dynamic here into that string

04:28.270 --> 04:38.450
and that will be my environment file of course which is imported from that environments folder here

04:38.810 --> 04:44.030
and there I'm not importing the broad file but the normal file which by the way will be swapped automatically

04:44.030 --> 04:48.800
when you build this for production with the environment file imported down there.

04:48.830 --> 04:54.860
I don't use my full environment file but that far eBay's API key property and with that we have to you

04:54.860 --> 05:00.530
are Al for signing up but of course we also need to attach some data and that is the second part and

05:00.530 --> 05:07.100
that should be a javascript object which has these three key value pairs you find here email password

05:07.370 --> 05:15.320
and return secure token which is always true now of course our e-mail is the e-mail we're getting as

05:15.320 --> 05:21.180
an argument and we know that this is a valid e-mail because we're validating it in our off page already.

05:21.230 --> 05:27.680
I always get my password and I pass in the password which I get as an argument and that return secure

05:27.680 --> 05:28.700
token thing.

05:28.700 --> 05:36.950
As mentioned in the docs is always true and now we're preparing a request that should create a new user.

05:36.970 --> 05:41.280
Now as always we need to subscribe so that this request really gets sent.

05:41.470 --> 05:44.350
And for that so that we can all show and I's spinner.

05:44.350 --> 05:53.380
I will return this observable here to my off page or to wherever I call sign up and that will be it

05:53.560 --> 05:55.120
for now.

05:55.120 --> 06:02.470
So let me go back to the off page and there I would now want to use my all service which I am already

06:02.470 --> 06:08.170
injecting and I want to use it here in on submit in the ads block.

06:08.200 --> 06:15.400
So if I'm not logging in then I want to call this off service sign up and forward e-mail and password

06:15.520 --> 06:17.020
which I am extracting here.

06:17.080 --> 06:22.450
And please note I am validating the form before I extract that anti validators we added can be seen

06:22.450 --> 06:27.220
in our template because we're using the template driven approach we're requiring a password which has

06:27.220 --> 06:33.190
at least six characters which by the way is indeed a default requirement by Firebase and for the email

06:33.280 --> 06:39.870
it should be required and a valid email so back in the off page here where I called sign up I forwarded

06:39.930 --> 06:48.010
email and password which we extract up there let me remove that console log statement now this returns

06:48.010 --> 06:53.340
and observable so we need to subscribe here and there will get some response data.

06:53.920 --> 06:56.950
And to be precise that response data is no mystery.

06:56.950 --> 06:59.920
It will be data that is described here.

06:59.920 --> 07:07.600
So what I can do here already is we can add a nice little interface in the off service to get better

07:07.660 --> 07:15.280
auto completion so I'll add my interface off response data here you can name is however you want.

07:15.340 --> 07:20.980
And there I just describe how the data we get back will look like so that we get better or completion

07:21.610 --> 07:28.270
and there I'll just basically fill out what I find here that I get a kind which will be of type String

07:28.780 --> 07:34.810
and I token field which is that token I showed on the slide which will all the be a string and email

07:34.930 --> 07:41.410
which will be a string I refresh token which will not use here but which would allow us to refresh that

07:41.440 --> 07:45.690
token that I.D. token that expires after some time by default.

07:45.700 --> 07:51.970
One hour here on firebase so we get that refreshed token we get a local idea which is just a user I.D.

07:52.270 --> 07:58.300
that was created by firebase because firebase automatically assigns a unique I.D. to every user we create

07:59.140 --> 08:07.390
we have that expires Enfield which is how long that I.D. token will be valid and we have our registered

08:07.750 --> 08:14.950
field which is actually not returned here for signing up but later for signing in this field which basically

08:14.950 --> 08:21.100
tells us whether the email already was verified which by default it will be here automatically and that

08:21.100 --> 08:22.110
will be a boolean.

08:22.210 --> 08:27.970
And since we don't get this for signing up I'll add a question mark after that name to indicate that

08:27.970 --> 08:36.270
this is an optional field nodded off response data will be returned here by this post request and therefore

08:36.270 --> 08:41.700
we can add these angled brackets after post since it's a generic method and add in our off response

08:41.700 --> 08:42.180
data.

08:42.180 --> 08:48.210
So the typescript knows that we'll get back data off this format and that could help us here in the

08:48.210 --> 08:53.580
off page where we get a response data we know which format this has now though here I don't even need

08:53.610 --> 09:01.050
that data there for now I'll just lock dead response data and do nothing else with it.

09:01.050 --> 09:06.420
Now to make sure that we start on that log in page I'll set something special in the off service I'll

09:06.450 --> 09:13.890
set is authenticate to false here and I'll actually also set the user I.D. to null here so that we start

09:14.130 --> 09:18.810
on the log in page on the sign up page and we're not starting on cyber page.

09:18.810 --> 09:20.120
So here I am now.

09:20.190 --> 09:27.470
And now let's try filling this out with some valid data and switch to sign up and press log in and that

09:27.470 --> 09:30.300
button should basically also say sign up now that I look at it.

09:30.350 --> 09:32.430
But what I see here looks pretty good.

09:32.430 --> 09:34.820
This looks like a valid response.

09:34.880 --> 09:40.890
We see all these fields we all saw on the official docs we see that user I.D. It was created.

09:41.000 --> 09:46.460
And if you go to your firebase web console under authentication to the users tab and you refresh that

09:46.460 --> 09:49.020
tab you should see your user here.

09:49.070 --> 09:55.100
Side note if you tried to create that same user again you get back in error of course and that error

09:55.130 --> 10:00.490
actually has a description with a message of email exists.

10:00.680 --> 10:02.270
So you even get that.

10:02.300 --> 10:03.590
Now let's build up on that.
