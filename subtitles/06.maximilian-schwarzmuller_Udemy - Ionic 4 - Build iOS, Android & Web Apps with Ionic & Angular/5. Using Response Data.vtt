WEBVTT

00:02.410 --> 00:09.310
Let's now make sure we use that unique I.D. we get back and we just saw that the response we get essentially

00:09.310 --> 00:13.150
is an object with a name field and that holds a string which is our unique I.D..

00:13.720 --> 00:19.060
Now this post method is a generic method which means we can describe which kind of response we'll get

00:19.060 --> 00:19.780
back.

00:19.780 --> 00:24.620
So again we can use the angle brackets here and then pass a type definition in between.

00:24.760 --> 00:30.640
And I will define here that we get back an object with a name key which is of type String because that

00:30.640 --> 00:34.430
is just what we're getting back what we just saw in the console.

00:34.450 --> 00:40.560
And with that we get better auto completion support in all the next steps in this observable chain.

00:40.600 --> 00:42.910
And here I now don't want to tap.

00:42.970 --> 00:48.940
Instead I want to update my existing array of places which is also an observable if it is we can use

00:48.940 --> 00:56.890
the switch map operator which you need to import from our X as operators and switch map works such that

00:56.950 --> 00:59.040
it takes an existing observable chain.

00:59.050 --> 01:06.550
This one for the HBP request and it takes the result of that chain which here is our response data or

01:06.550 --> 01:08.100
whatever you want to call it.

01:08.200 --> 01:12.180
It gives you that data in that function you pass the switch map.

01:12.340 --> 01:18.310
But in here you now return a new observable that will then replace the old observable in the upcoming

01:18.310 --> 01:19.960
steps of this chain.

01:19.960 --> 01:20.860
So here it will return.

01:20.860 --> 01:24.760
This place is now to get to my places array.

01:24.910 --> 01:31.490
Thereafter I will add take one because I only need one place and they are after we can now have our

01:31.490 --> 01:37.160
tap step again because at this point of time because of switch map we're now not interacting with the

01:37.160 --> 01:39.620
response of DHS to repeat request anymore.

01:39.620 --> 01:40.980
That changed here.

01:41.010 --> 01:46.490
Instead we're now working with our places array and therefore we can now com cat than you place.

01:46.490 --> 01:54.860
However in new place before I added here I want to switch the I.D. And I want to replace it with my

01:54.980 --> 01:59.000
I.D. from the back end which we get here on our response.

01:59.000 --> 02:04.480
The thing is that I.D. is available here in the respond state off the switch map not down there.

02:04.490 --> 02:09.590
This is a different function and rest data due to scoping is only available in that function not in

02:09.590 --> 02:13.860
that one of course we can fix this in a relatively easy way.

02:13.910 --> 02:21.000
We can add a variable here in the overall add place method you could name this generated I.D. The name

02:21.000 --> 02:27.900
is totally up to you and this will be a string and you can of course define it like this on initialized

02:27.900 --> 02:28.580
up there.

02:28.710 --> 02:34.110
But once you got the idea which is the case here in the switch map I said does equal to rest data dot

02:34.140 --> 02:40.200
name which is that unique I.D. generated by Firebase and then down there because this is a variable

02:40.200 --> 02:45.360
available in the entire add place method I can use generated ideas like this.

02:45.360 --> 02:52.020
And now we're storing or we're adding this new place with the generated I.D. to our list of places.

02:52.110 --> 02:53.190
Let's give this a try.

02:53.220 --> 03:05.850
So let's wait for this to reload and then let's add the Manhattan mentioned Europe manually nice place

03:05.850 --> 03:13.790
in the middle of New York let's say give it a price and availability

03:22.560 --> 03:25.430
and now does this created and now we see it down there at the bottom.

03:25.420 --> 03:27.520
This is the place I just added.

03:27.580 --> 03:34.720
So this now works and now we're able to send data to discover what about fetching.
