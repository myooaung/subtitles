WEBVTT

00:02.410 --> 00:09.090
Well we have taken care about logging out manually and we have taken care about logging in automatically.

00:09.250 --> 00:16.610
But now I want to focus on also making sure that we are able to log the user out automatically when

00:16.610 --> 00:18.070
the token expired.

00:18.070 --> 00:23.360
Now I will say that with firebase you're also getting that refresh token that you could in theory use

00:23.650 --> 00:29.470
to get a fresh valid main token here in the official box.

00:29.470 --> 00:32.740
You can learn how to exchange a refresh token for an I.D. token.

00:32.770 --> 00:37.630
Where to send the request to and you could send that request whenever you're interacting with the other

00:37.630 --> 00:45.800
Firebase and points or is set a timer that exchanges the refresh token for an I.D. token every 10 minutes.

00:45.800 --> 00:46.860
Anything like that.

00:46.930 --> 00:53.570
I'll not add this logic here but I at least want to lock to use route when it token expires.

00:53.580 --> 00:55.780
Now how can we implement this.

00:55.830 --> 00:57.820
We have all the log in here.

00:57.900 --> 01:03.610
Now I will also add an audio log out method.

01:03.680 --> 01:06.230
It's a private method which I'll name all the log out.

01:06.280 --> 01:12.400
And I expect to get adoration here which should be a number which is basically the timer I want to set.

01:12.400 --> 01:18.430
It's not always one hour because I also want to set this when we order locked in the user which of course

01:18.430 --> 01:22.450
can be the case with a token that's only valid for 10 more minutes.

01:22.450 --> 01:32.890
So here I get dead duration and I can then use set timeout to set a timer based on that duration.

01:32.890 --> 01:37.930
And in the function it executes off their desperation I will simply call this log out.

01:37.930 --> 01:41.210
So the same method I call when I manually log out.

01:41.500 --> 01:48.590
Now of course I want to make sure that I clear any timers Whenever I set a new one for days I'll add

01:48.590 --> 02:05.730
a new property here private active log out timer which is of type any and down there in auto log out

02:07.440 --> 02:12.340
I will store my timer in this act of log out timer.

02:12.510 --> 02:20.220
Therefore if I set a new timer I'll check if this active log out the timer is set and I'll then call

02:20.220 --> 02:27.420
clear timeout for this active log old timer to remove the existing active log out the timer because

02:27.420 --> 02:35.100
I'm about to set a new one I want to do the same here for a logging out so I'll copy that logic and

02:35.190 --> 02:40.180
all the added here into log out to remove any existing log out timers.

02:40.230 --> 02:49.760
And then there is one extra thing we can do in services as well we can actually implement on destroy

02:49.760 --> 02:55.890
here imported from adding LA core just as you can do it in components you can also add on destroy to

02:55.890 --> 03:01.430
services and this will then somebody give you a place where you can run cleanup logic for debt service

03:01.730 --> 03:07.160
and that in my case would be that I also want to clean up any existing timer's whenever dis service

03:07.160 --> 03:10.880
gets destroyed to prevent memory leaks.

03:10.880 --> 03:13.190
So now we're cleaning up the timer.

03:13.220 --> 03:17.990
We got a method where we would set it theoretically but now of course we need to call.

03:18.140 --> 03:20.740
And where would we do that.

03:20.750 --> 03:24.470
Well I essentially want to call auto log out whenever we log in.

03:24.500 --> 03:32.450
So in log in and sign up and an auto log in all these places where I do log in in all these places we

03:32.450 --> 03:37.710
do log a user in either by calling set user data here and log in and sign up.

03:37.730 --> 03:45.350
Or by executing all the logic here in auto log in Denver and all these places I want to set a timer

03:48.430 --> 03:52.840
for example here in order log in where I do admit my new user.

03:53.020 --> 04:01.310
I also want to call this all the logout and I need to pass in the duration so the remaining time until

04:01.310 --> 04:07.380
the token expires and of course here I need the duration and not the timestamp.

04:07.450 --> 04:12.020
So let's go to the user model and why don't we calculate the remaining time here.

04:12.070 --> 04:21.020
So token duration could be a getter we add in there and therefore here first of all I check if we have

04:21.020 --> 04:24.600
a token loops using this getter here.

04:25.040 --> 04:31.070
And if we don't have a tokens if does this null then I return 0 here because then it is expired right

04:34.460 --> 04:40.450
otherwise I will return new data to get a current timestamp.

04:40.450 --> 04:51.750
So right now in milliseconds with the help of get time minus this token expiration date which is a data

04:51.780 --> 04:52.650
object.

04:52.650 --> 04:57.720
So that although with get time gives us this timestamp in milliseconds.

04:57.720 --> 05:03.750
So now we have the current time minus token expiration time and that of course is the wrong way of calculating

05:03.750 --> 05:04.470
it.

05:04.830 --> 05:10.560
I want to get that token expiration time which should be in the future and deduct the current time so

05:10.560 --> 05:14.020
let's reverse it to this function.

05:14.340 --> 05:20.160
And now I'm returning the difference in milliseconds between the token expiration time and the current

05:20.160 --> 05:22.200
time and that would be the future.

05:22.200 --> 05:24.770
So this should be a positive number if it's negative.

05:24.780 --> 05:26.130
We know it expired.

05:26.130 --> 05:32.400
If it is 0 we know it is expired and on token duration we get this amount in milliseconds.

05:32.400 --> 05:39.400
So back in you off service in all the logout I pass on user token duration which is the amount of the

05:39.400 --> 05:43.000
token or debility off the token in milliseconds.

05:43.000 --> 05:47.800
And of course I don't just call this here in order to log in but also in inset user data which is the

05:47.800 --> 05:49.990
method I'm calling in sign up and log in.

05:50.350 --> 05:53.570
So inset user data where I met my new user.

05:53.620 --> 06:03.660
I also use that user data here which I get this new user object I'm generating here all actually not

06:03.660 --> 06:11.880
do this on the fly but store it in a user constant like this forward does user a constant to the next

06:11.880 --> 06:14.550
method and then also use it down there.

06:14.550 --> 06:22.200
So now we're setting the order logout timer to validate that it works all temporarily go to my user

06:22.200 --> 06:31.050
model and comment out dad real calculation and just return two thousand which are two seconds.

06:31.050 --> 06:37.630
So now when we're testing this and we're automatically locked in we should be locked out after two seconds.

06:37.680 --> 06:44.250
So let me log in here and now let's wait for two seconds and we go back here.

06:44.250 --> 06:45.860
So that's looking good.

06:46.780 --> 06:49.880
It's all to quickly check on the application.

06:49.900 --> 06:51.620
Application tab here.

06:51.760 --> 06:53.530
Data was all cleared.

06:53.530 --> 06:58.440
So now if I interact with the app yet I'm redirected.

06:58.450 --> 07:05.680
Also if I create a new user let's check this if I switch to sign up here I am.

07:06.020 --> 07:12.780
Here I am and now last but not least let's be quick here.

07:13.080 --> 07:13.730
Website.

07:13.770 --> 07:15.020
Need to log in here.

07:15.080 --> 07:20.060
Let's be quick and let's try if this all the works after the order log in and for it is I'll reload

07:20.060 --> 07:21.530
the page here.

07:21.530 --> 07:26.040
Now this should still redirect me so this all works.

07:26.060 --> 07:31.340
Now of course I'll not return two thousand but the real cake calculation and therefore our token should

07:31.340 --> 07:38.860
be valid a bit longer now and actually reflect the well actual validity of the token.

07:38.870 --> 07:47.590
So now if our log in here I should be able to navigate around and interact with the app but eventually

07:47.890 --> 07:57.190
once this token expires which is still some time to go here for me once this expires then I should be

07:57.310 --> 07:58.060
locked out.
