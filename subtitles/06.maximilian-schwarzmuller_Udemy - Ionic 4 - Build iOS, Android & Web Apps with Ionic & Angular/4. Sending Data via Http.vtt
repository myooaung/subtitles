WEBVTT

00:02.640 --> 00:07.350
With our base setup let's go back to our code and let's have a look at our place.

00:07.380 --> 00:12.340
Service there we have our ad place method and thus far.

00:12.360 --> 00:16.730
What we do here is we add that place to our local list of places.

00:16.740 --> 00:22.410
Now of course we can do that but I also want to store that place on the server now because that is the

00:22.410 --> 00:24.520
whole idea of having a back end.

00:24.660 --> 00:30.450
This will allow the places to survive wife even if to use a restarts the app or uninstall it or anything

00:30.450 --> 00:31.190
like that.

00:31.230 --> 00:35.240
It of course also is necessary to share places between users.

00:35.310 --> 00:38.790
So how do we store our data on a server then.

00:39.060 --> 00:45.990
Well remember we're building an angular app here and in angular you have to be client to communicate

00:45.990 --> 00:49.080
with back ends and therefore we'll use that here.

00:49.110 --> 00:55.620
Now to use that you should check that in your app module you do actually add a special new import and

00:55.620 --> 01:01.320
I'll add it here to start and that is the HP Client module.

01:01.350 --> 01:11.790
Now the HP Client module here needs to be imported from at angular common age to the.

01:11.820 --> 01:19.230
So from this path here this is required to unlock the injectable h to be client which we then can inject

01:19.230 --> 01:24.990
into our various modules and components wherever we needed to send HBP requests.

01:25.050 --> 01:31.770
So at does import here and add HCV client module to the imports array in the app module and with that

01:31.770 --> 01:41.060
back into places service we can go to the start of this service here to the constructor and now not

01:41.060 --> 01:47.720
just inject the off service but our own age to the client or I'll just name the property H to the P

01:47.720 --> 01:54.710
here but the name is up to you our own h to be client service which is provided by angular.

01:54.710 --> 02:02.090
So you do inject the type h to be client here and a should if your client is imported from at Angola

02:02.110 --> 02:07.660
a common H to the P and that is now a service provided by.

02:07.670 --> 02:12.380
So built into angular that you can use to send H to the p request.

02:12.380 --> 02:19.530
Now we want to use that here at at place of course we're creating our new place object here and we want

02:19.530 --> 02:22.180
to store that on a server.

02:22.320 --> 02:28.860
Now actually what I don't want to build here or I don't want to construct here is the idea though instead

02:28.860 --> 02:34.800
firebase will generate a new idea for us that I want to use that instead will then be a real guaranteed

02:34.800 --> 02:42.830
unique idea and therefore I want to send the place without the I.D. Q firebase now can we do that.

02:42.830 --> 02:49.280
There are various ways one of the easier ways is to simply copy that place object and replace the idea

02:49.280 --> 02:51.390
with null when we're sending this.

02:51.410 --> 02:58.700
So let's start setting this by accessing this HCV and now for Firebase and probably for a lot of rest

02:58.730 --> 03:04.910
api is if you want to create something you send a post request and with angular is HBP client you do

03:04.910 --> 03:07.760
that by using the post method here.

03:07.760 --> 03:13.100
Now you first of all need to enter Do you are L2 which you want to send the request and that would be

03:13.100 --> 03:20.510
this you are L you find here in your firebase real time database so I had it here but then that's the

03:20.510 --> 03:28.070
special a nice thing about firebase you add your own segment here to give the the folder so to say under

03:28.070 --> 03:32.840
which the data should be stored a name right now we have no folders here it's empty down there because

03:32.840 --> 03:36.080
we haven't added anything but that will soon change.

03:36.080 --> 03:40.460
So I will named is offered dash places but the name is up to you.

03:40.460 --> 03:45.840
And now a special thing about firebase you always need to add dot Jason at the end.

03:45.890 --> 03:48.640
This is not required by ionic or by angular.

03:48.680 --> 03:51.460
This is really just a firebase U R L thing.

03:51.470 --> 03:55.970
If you are using a different rest api you probably don't have to add this.

03:56.120 --> 03:57.270
So this is the U R L.

03:57.320 --> 04:02.960
The second argument in this post Bamford then is the data we want to send in here all create a new javascript

04:02.990 --> 04:10.490
object and copy all the properties of new plays but I'll overwrite the I.D. property then and set this

04:10.490 --> 04:15.320
to now and this will essentially then not store it on firebase because I don't want to store my I.D.

04:15.320 --> 04:24.120
there I want to instead let firebase generate a new idea and then use that now angler as in many other

04:24.130 --> 04:30.030
places uses observable behind the scenes when working with h to DP requests.

04:30.030 --> 04:35.370
So in the end what I can do here is I can return this and now we can subscribe to that anywhere where

04:35.370 --> 04:41.120
we want to start this because it will not send the request before a subscription has been set up but

04:41.120 --> 04:50.120
all that where we want to listen to that just the one thing of course is I still want to have my my

04:50.120 --> 04:59.240
place here and update my places whenever we're basically done adding this therefore we'll have to combine

04:59.510 --> 05:05.840
this places observable to which we're listening with our H2 observable here.

05:05.840 --> 05:14.120
Hence I will add the pipe method here at the end of my age to the p request chain it in that pipe method

05:14.570 --> 05:18.310
I now can work with the result of this first observable.

05:18.320 --> 05:24.620
So basically with the response of this H to the p request for a start let's simply have a look at that

05:25.070 --> 05:27.120
and therefore here I will add tap.

05:27.380 --> 05:33.440
I will have my response data in here and it will simply console log the response data so temporarily

05:33.440 --> 05:34.870
our app will be broken.

05:34.940 --> 05:42.700
I will comment out this unnecessary return statement here it's important that you still returned as

05:42.710 --> 05:47.410
HDTV request though so that your average code where you subscribe to that observable from inside the

05:47.410 --> 05:48.220
component.

05:48.280 --> 05:54.280
So in our case from inside the new offer page component that disco is still works this subscription

05:54.280 --> 06:01.300
here subscribe mythical only works if ad place returns and observable which it does right now.

06:01.420 --> 06:02.740
So let's give this a try.

06:02.770 --> 06:08.660
Let's save everything and let's have a look at our application here.

06:08.770 --> 06:14.680
Let's go to offers and let's add a new offer test does this work.

06:14.680 --> 06:26.240
The price and some dates here of course like that and submit this and this looks pretty good.

06:26.480 --> 06:31.360
Id finished it showed us the loading spinner so something took place.

06:31.400 --> 06:37.580
Remember that we commented out our own observable change and we commented out our delay in place.

06:37.580 --> 06:45.980
Service so this here is clearly not what cost to spend or to show up and here on the right you see that

06:45.980 --> 06:48.690
console log and that is the response by firebase.

06:48.710 --> 06:52.250
This is essentially the unique I.D. it generated.

06:52.250 --> 06:55.700
It gives you an object with a name field and that holds the unique idea.

06:56.000 --> 07:01.940
And if we have a look at Firebase here this should live update you now see this new offered places.

07:01.940 --> 07:05.380
Node here and in there you see that same unique idea.

07:05.420 --> 07:09.650
And under that idea you will have the data for your place which is pretty nice of course.
