WEBVTT

00:02.260 --> 00:07.850
So we're working on that fallback and we're able to choose a file with the file picker which we opened

00:07.850 --> 00:13.370
for the user when we when the user tries to take a picture on the device that doesn't have a camera

00:13.490 --> 00:16.420
or where we think that there is no camera.

00:16.500 --> 00:22.460
And we learned that this event optic here has a target property which has a files property which holds

00:22.460 --> 00:23.410
the file.

00:23.420 --> 00:26.800
So now we just have to extract the file from there.

00:26.840 --> 00:34.600
So our picked file here can be found on the event target files list there.

00:34.600 --> 00:35.830
It's the first element

00:38.540 --> 00:41.360
now typescript does note at our events.

00:41.360 --> 00:47.300
Target is an element that has a files property and therefore we should convert this by wrapping event

00:47.330 --> 00:50.960
target in brackets in parentheses.

00:50.960 --> 00:58.070
And then we can add a conversion here with as HD him El input element and this makes it clear yes there

00:58.070 --> 01:00.020
will be a files property.

01:00.020 --> 01:01.620
So that is to pick file.

01:01.640 --> 01:05.980
Now please remember that for the camera we're actually getting a base 64 string.

01:06.470 --> 01:10.370
And indeed I need such a string here as well to review that image.

01:10.370 --> 01:13.300
Thankfully we can convert is a relatively easy.

01:13.310 --> 01:18.140
First of all I want to check if we don't have a picked file for some reason and then I just want to

01:18.140 --> 01:19.870
exit here and not continue.

01:19.880 --> 01:22.380
You might want to show an alert message here of course.

01:22.550 --> 01:30.570
But if we do have an image then we can use a tool named file reader which I store here in a constant

01:30.570 --> 01:37.530
named F R because we have to instantiate a file reader instance by calling you file reader and the file

01:37.530 --> 01:44.630
reader has a read as data you are L method to which we can pass our picked file and this will convert

01:44.660 --> 01:47.040
to a base64 string.

01:47.070 --> 01:52.650
This is actually an asynchronous task and therefore here we don't get these base64 string as a result

01:53.100 --> 01:58.830
but instead we have to register on Load method here on the file reader and we want to do that before

01:58.830 --> 02:05.340
we start converting and that this is an anonymous function that will be executed once to file reader

02:05.340 --> 02:10.290
is done doing whichever operation we tell him to do.

02:10.290 --> 02:18.120
And here will get our data you are so that base64 your El by accessing the file reader result property

02:18.210 --> 02:25.320
that will be set once to file reader is done reading our data you are El to be precise we have to call

02:25.500 --> 02:32.170
to string here to get a valid you URL and then we can set this selected image equal to data you are

02:32.180 --> 02:33.830
l like this.

02:33.880 --> 02:36.820
So now we should see a preview for our picked image as well.

02:36.820 --> 02:38.330
We're not emitting it yet.

02:38.440 --> 02:41.440
That will be the next step but we can see it there hopefully.

02:41.440 --> 02:45.860
So let's wait for that to reload and let's take a picture here.

02:45.980 --> 02:47.730
Select that image.

02:47.830 --> 02:48.850
Here it is.

02:48.860 --> 02:56.660
So now that works here as well as a next step let's make sure we emit this picked image here just as

02:56.660 --> 02:58.400
we emit the other image.
