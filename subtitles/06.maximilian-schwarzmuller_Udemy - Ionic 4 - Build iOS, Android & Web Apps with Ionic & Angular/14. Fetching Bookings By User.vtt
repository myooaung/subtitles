WEBVTT

00:02.300 --> 00:06.780
To show bookings on the bookings page when we reload there we need to add a new method.

00:06.850 --> 00:10.890
You can add this anywhere of course and all named as fetch bookings.

00:11.180 --> 00:17.360
And in here a one I'm always the fetch my list of bookings and I want to fetch the bookings for bad

00:17.360 --> 00:20.060
user who made them of course and not all bookings.

00:20.060 --> 00:22.610
We should only see our bookings here.

00:22.700 --> 00:29.560
So first of all I will use the agent be declined to make a GET request and that gets request will of

00:29.560 --> 00:34.030
course be sent to the same path we used for adding a single booking.

00:34.080 --> 00:36.820
So let's copy that and let's add it here.

00:37.720 --> 00:42.290
But now with Firebase and of course that differs from back in to back.

00:42.360 --> 00:44.580
And this is just firebase approach here.

00:44.680 --> 00:49.980
You can now add some query parameters there to narrow down which kind of data you want to fetch.

00:49.990 --> 00:56.590
So did you don't want to fetch all the data but just for a specific user as in our case for it is all

00:56.590 --> 01:02.200
changed as used as string literal notation with the back ticks so that I can inject dynamic value here

01:02.550 --> 01:06.570
and then add a question mark here to add query parameters.

01:06.760 --> 01:09.340
And the first one should be order by written like this.

01:09.400 --> 01:13.690
And this is a firebase feature really important this does not work on any API.

01:13.720 --> 01:17.000
This works on this REST API here.

01:17.150 --> 01:22.620
Now here we order by user I.D. put it in double quotes like this.

01:22.760 --> 01:26.780
This tells firebase dead it should order the results by user I.D..

01:26.810 --> 01:32.130
That is not that helpful to us but we can combine this with t equal to operator.

01:32.150 --> 01:35.540
So I am percent and then equal to.

01:35.720 --> 01:41.740
And this means basically fetch me the data where user I.D. is equal to a value defined by us.

01:41.750 --> 01:48.920
And now this value here should be put between double quotes and it is now injected dynamically with

01:48.920 --> 01:55.910
this dollar sign opening and closing curly brace syntax and of course here I want to use my user I.D.

01:56.390 --> 02:04.010
so I can use this of service user I.D. here and now I'm fetching only the orders for my user for the

02:04.010 --> 02:12.910
currently locked in user only the bookings of that user for this to work you need to make one adjustment

02:13.030 --> 02:21.270
on firebase side here in your database under rules you need to add something so add a comma and then

02:21.360 --> 02:23.780
add bookings.

02:23.860 --> 02:26.390
So the name of that node you created.

02:26.410 --> 02:32.500
So basically whatever you entered here in front of Jason for storing a bookings under a certain path.

02:32.500 --> 02:39.280
So bookings colon and then opening and closing curly brace and then they're double quotes dot index

02:39.400 --> 02:45.930
on written like this colon and then an array with all the values you want to make searchable basically.

02:45.940 --> 02:51.310
And in my case that's just the user I.D. published this thereafter.

02:51.380 --> 02:58.260
And this sets up some settings for firebase behind the scenes to allow you to search the bookings by

02:58.290 --> 02:58.980
user I.D..

02:58.980 --> 03:04.380
Otherwise you would get an error but now you will be able to look into your bookings and search by that

03:04.380 --> 03:10.290
user idea that is stored there that be remove that extra booking here.

03:10.830 --> 03:15.960
So now we're fetching bookings by user I.D. which is of course nice.

03:16.290 --> 03:21.630
We now just need to make sure that we transform them appropriately because you might remember from fetching

03:21.630 --> 03:27.120
all the places that firebase gives us an object where we have keys which are a unique I.D. which can

03:27.120 --> 03:29.190
hold the actual data.

03:29.190 --> 03:41.270
So here I want to map my booking data into an array with which I can work for that I'll create a new

03:41.420 --> 03:44.660
bookings array here and then a for in loop.

03:44.660 --> 03:55.800
So for a key in booking data at the safe check where you check if booking data has a property of that

03:55.800 --> 03:59.820
key so that this review works and does not fail.

03:59.820 --> 04:03.120
We're not extracting data from any prototypes or something like that.

04:03.900 --> 04:05.430
And now it does F. check.

04:05.430 --> 04:13.800
We simply push data into our bookings array here and that should be a new booking obviously where the

04:13.800 --> 04:19.000
ideas are a key for the same reasoning as before when we did this for the places.

04:19.020 --> 04:22.340
So make sure to watch that lecture again if this is unclear.

04:22.530 --> 04:26.860
So I'm creating a new booking with my idea which is that key.

04:27.210 --> 04:36.820
Then with the place I.D. which I get from my booking data for that given key there I will have a place

04:36.820 --> 04:37.240
idea.

04:37.690 --> 04:46.490
And now just to speed this up again I will define an interface so I will copy the structure of the data

04:46.520 --> 04:53.280
as it's stored on Firebase and then define a helper interface up here which which I'll name booking

04:53.280 --> 04:54.930
data but the name is up to you.

04:54.930 --> 04:57.540
And there I define how my booking gate looks like.

04:57.540 --> 05:03.420
So in the end I'll have booked from which is a string booked too which is a string the first name which

05:03.420 --> 05:04.440
is a string.

05:04.500 --> 05:06.910
The guest number which is well a number.

05:07.110 --> 05:16.350
The last name which is a string the place I.D. here which is a string place image which is a string

05:16.680 --> 05:23.530
to place title which is a string and the user I.D. which is a string now booking data as they offer

05:23.570 --> 05:24.260
the data format.

05:24.270 --> 05:30.870
I get back and thanks to anglers H to the client we could add angle brackets here after get and basically

05:30.870 --> 05:39.030
tell angular and the H to be client or we tell typescript that the data we get back will have this dynamic

05:39.060 --> 05:45.330
key which was days square brackets notation to indicate that we can have multiple keys with names we

05:45.330 --> 05:50.580
don't know and that the value for each key will be in the format of our booking data and now we get

05:50.580 --> 05:57.000
better order completion down there because now we can go through our booking data and here I need to

05:57.000 --> 06:05.610
add the user I.D. and I just noticed before I continue of course this should be in a map operator.

06:05.850 --> 06:09.430
So there is an higher function here.

06:09.480 --> 06:11.070
This should be inside of the map.

06:11.100 --> 06:20.170
Operator and map needs to be imported from our exchange as operators then we get better order completion.

06:20.190 --> 06:21.440
So now it is looking good.

06:21.900 --> 06:22.860
So let's continue.

06:22.860 --> 06:26.250
Now we extracted the user I.D. we all need to place title.

06:26.250 --> 06:31.800
So we have booking data for the given t key with a place title.

06:31.800 --> 06:37.970
Then we need to place image so booking data for the given key with the place image.

06:37.980 --> 06:40.130
And then we have the first name.

06:40.200 --> 06:48.990
So again booking data key first name last name of couriers booking data key last name the guest number

06:49.380 --> 06:54.470
booking data key guest number booked from as a date.

06:54.470 --> 06:58.160
So I will use the date constructor here to turn it into a date object

07:02.620 --> 07:04.340
and booked too.

07:04.450 --> 07:05.470
Same thing.

07:05.470 --> 07:13.130
I will use the date constructor to use my booking data a key and then booked too.

07:13.210 --> 07:16.380
And now I'm creating a new booking and pushing does on the bookings array.

07:16.450 --> 07:20.520
All of that happening in the map operator in this observable chain.

07:20.530 --> 07:23.480
Now we just need to return it as in the end here.

07:23.560 --> 07:24.570
So often does loop.

07:24.580 --> 07:30.730
Let's return the bookings array so that our observable chain your India yields and array of bookings

07:31.060 --> 07:37.840
and whenever we call fetch bookings and I return this year of course we will get back this bookings

07:37.840 --> 07:41.560
array as an argument in the function we pass to subscribe.

07:41.560 --> 07:44.780
Of course I don't just want to get this data in my subscription though.

07:44.950 --> 07:48.630
Instead here in this observable chain I will at the tap.

07:48.640 --> 07:54.340
Operator Where I get to get my bookings and then I can call this underscore bookings which is this behavior

07:54.340 --> 08:01.030
is subject next bookings and amidst the bookings at just fetched as a new list of bookings for this

08:01.030 --> 08:02.570
app.

08:02.580 --> 08:08.110
And now with all of that out of the way we can go to the bookings page where we need debt.

08:08.200 --> 08:12.360
And here I do set up my subscription to that list of bookings which is great.

08:12.520 --> 08:20.470
Justice before with iron view will enter when this page becomes visible then I will use this booking

08:20.470 --> 08:27.250
service and I will then fetch the bookings here like this and we need to call subscribe here so that

08:27.250 --> 08:28.700
something happens.

08:28.720 --> 08:31.870
Now just as before we can show a nice loading spinner.

08:31.870 --> 08:35.430
So is loading is added here as a property.

08:35.690 --> 08:40.600
And whenever we fetch it here all set is loading to true.

08:40.600 --> 08:45.580
And in that function and pass the subscribe where we would also get that bookings array but where I

08:45.580 --> 08:51.760
don't need it thanks to the subscription I will simply said is loading back to false.

08:51.760 --> 08:54.990
And now back in the bookings page H2 mail file.

08:55.060 --> 08:58.160
Well there we can now take advantage of this.

08:58.240 --> 09:00.960
We already output a message if we have no bookings.

09:01.270 --> 09:06.820
Well I only want to show it as if we're not loading because otherwise if we are loading it is of course

09:06.820 --> 09:14.650
a valid state that we temporarily have no data but if we're not loading and one of these conditions

09:14.650 --> 09:23.190
is met then I certainly want to show that text if we are not loading then and these other conditions

09:23.190 --> 09:33.350
are met then I certainly want to display my my list should be to an %s and of course I will also add

09:33.350 --> 09:43.300
a new column at the top though the same size and offset here also with text center and in there I will

09:43.300 --> 09:47.620
show my iron spinner for the case that we are loading.

09:47.620 --> 09:53.440
So you're color is primary and I will add N.G. if is loading here.

09:53.560 --> 09:59.770
So that's been should be visible if we are loading bookings back in the app here on the bookings page

10:01.070 --> 10:02.000
we now see the spinner.

10:02.000 --> 10:05.540
And then we see our booking here let's now make sure we can delete that.
