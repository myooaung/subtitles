WEBVTT

00:00.120 --> 00:08.460
Now one important thing about Angular is that typically, we use it to build web applications, so websites

00:08.460 --> 00:16.390
that run in the browser. In this course however, we use it to build native mobile applications as well,

00:16.410 --> 00:23.540
we do this with the help of the extra tool we're covering in this course, Ionic.

00:23.730 --> 00:30.000
Now if we take a step back and we have a look at a regular web application built with Angular, then

00:30.210 --> 00:36.900
there we typically build a so-called single page application and that simply means that we only have

00:36.900 --> 00:45.780
one single HTML page which we really create and which we serve on our web server to our clients, our

00:45.780 --> 00:53.970
users visiting the page in their browser and on this HTML page, we load the Angular script and the

00:53.970 --> 01:01.080
Angular script is not just the framework script, it is our code built with Angular as well. Because

01:01.110 --> 01:08.910
we will use a project setup which actually gives us quite a nice way of building our Angular application,

01:09.030 --> 01:14.490
writing our code in a very structured and easy to read way and it will then take all this code which

01:14.490 --> 01:21.840
uses Typescript as I mentioned before, which does not run in the browser but it will compile Typescript

01:21.950 --> 01:25.750
to Javascript and bundle up all our code,

01:25.800 --> 01:31.560
so our own application logic as well as the Angular framework logic,

01:31.560 --> 01:37.950
so all these utility functions and so on, all that will be bundled up and will be imported in that single

01:38.070 --> 01:45.870
index.html file. And single page application then means that Angular will take care about constantly

01:45.870 --> 01:48.450
re-rendering the user interface,

01:48.450 --> 01:55.830
so what the user sees, re-rendering all these HTML elements so that to the user, it can definitely

01:55.830 --> 02:03.150
seem like we are using multiple pages but technically, we control all that through Javascript and the huge

02:03.180 --> 02:10.200
advantage of that is the performance, the speed because Javascript runs in the browser, it even works if

02:10.200 --> 02:15.810
we temporarily lose our internet connection and more than that, it happens instantly.

02:15.810 --> 02:21.010
We don't need to download anything from a server other than this initial page,

02:21.010 --> 02:27.390
thereafter everything can be re-rendered quickly and that of course feels good to the user because it's

02:27.510 --> 02:28.700
very reactive,

02:28.740 --> 02:35.970
it's the feeling we know from mobile apps typically where we also can press and tap stuff and things

02:35.970 --> 02:37.530
change instantly

02:37.680 --> 02:43.830
and if we happen to reach out to a server because we maybe want to download new data from a database,

02:44.070 --> 02:49.460
we do this behind the scenes and Angular allows us to achieve the same in a web app.

02:49.650 --> 02:56.670
And that of course makes it a perfect candidate to be used together with Ionic to then build a real

02:56.670 --> 03:04.230
native mobile app as well but still use our Angular knowledge to build all our business logic, all the

03:04.230 --> 03:07.230
logic we want to execute in our application.
