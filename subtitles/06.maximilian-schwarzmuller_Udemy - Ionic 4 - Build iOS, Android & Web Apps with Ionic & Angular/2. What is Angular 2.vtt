WEBVTT

00:00.450 --> 00:06.330
So for does recap let's dive into the question what is angular angular.

00:06.420 --> 00:13.190
Is a framework a javascript framework in the end which allows you to create single page applications.

00:13.530 --> 00:19.770
Let's understand what a single page application is by comparing it to a traditional web application

00:19.770 --> 00:21.630
if you want to call it like this.

00:21.690 --> 00:27.330
There we would have the user and the client the client being our browser for example.

00:27.330 --> 00:36.060
And of course the server hosting and running our application if we as the user click on something on

00:36.060 --> 00:39.750
the page we're on which is loaded in our client in our browser.

00:39.990 --> 00:45.870
Click on a link let's say the client will send a request to the server telling the server hey the user

00:45.960 --> 00:51.420
clicked on this link please give me the appropriate page and the server will return and response giving

00:51.420 --> 00:54.160
us the new page the user wants to see.

00:54.330 --> 00:58.130
And therefore we are able to well see this page.

00:58.170 --> 01:05.340
There's nothing wrong with this approach but it means that for everything we do we will have to involve

01:05.430 --> 01:06.070
the server.

01:06.090 --> 01:13.170
We will have to send the request and wait for the response which introduces a slight delay between clicking

01:13.200 --> 01:14.710
and viewing the result.

01:14.820 --> 01:20.340
And for some pages it might not even be needed because maybe we don't even need some server side specific

01:20.340 --> 01:26.070
code or some data from a database in which case we could totally leave out the server in a single page

01:26.070 --> 01:27.030
application.

01:27.030 --> 01:31.310
We therefore have the same set up but it behaves differently.

01:31.320 --> 01:37.860
Here once we click on some link let's say wizard d about page and the About page doesn't need any extra

01:37.860 --> 01:39.460
info from the server.

01:39.810 --> 01:46.270
The browser itself the client itself re renders the parts of the dom which needs to be rendered.

01:46.290 --> 01:53.730
So to display this new page which technically isn't a new page it's not a new HD DML page sent by the

01:53.730 --> 01:54.440
server.

01:54.480 --> 02:00.430
It's the same page we were on hence the name single page application but now the page was updated.

02:00.450 --> 02:03.680
Or specifically did dom of the page was updated.

02:03.750 --> 02:09.870
Now of course we still can't reach out to the server because we might need to access the database there

02:10.080 --> 02:17.760
but that will happen behind the scenes through Ajax requests which are sent behind the scenes from our

02:17.760 --> 02:21.900
anglo to app to the server and then the response will all be handled there.

02:21.990 --> 02:28.890
And it might lead to again the re rendering of parts of our page but we will never get back a new page

02:28.890 --> 02:30.450
from the server instead.

02:30.450 --> 02:37.770
Data will be exchanged in for example Jason format in the requests and responses here.

02:37.800 --> 02:44.460
This is a single page application and this is what allows us to create such a single page application

02:44.670 --> 02:51.150
where England gives us the tools to easily manage manipulate our Dom and to show the user to content

02:51.160 --> 02:52.320
we want to show to when
