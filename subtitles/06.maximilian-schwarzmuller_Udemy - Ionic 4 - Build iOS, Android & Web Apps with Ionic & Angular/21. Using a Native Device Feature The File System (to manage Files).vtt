WEBVTT

00:02.090 --> 00:08.900
So as described at the end of last video the problem is we're not storing our files on persistent storage

00:08.900 --> 00:13.320
in a folder where it can not get cleaned up automatically by the system.

00:13.400 --> 00:17.420
So where it won't get removed if space is running or something like this.

00:17.420 --> 00:23.240
Additionally we also then need to store our data and some persistent storage but come back to this later.

00:23.240 --> 00:27.730
Let's start with the file storage and file storage.

00:27.820 --> 00:30.480
Actually is a native feature too.

00:30.830 --> 00:38.560
So here in the native feature documentation you can scroll to file to learn more about this and also

00:38.560 --> 00:41.200
to get a command to install this plug in.

00:41.270 --> 00:45.840
Again have a look at this link to learn more about it and at this documentation general.

00:45.890 --> 00:52.250
Of course I'm going to walk you through the most important features in this video so we copy this command.

00:52.250 --> 00:58.430
So now let's run it to install this plug in ionic plug in at cord of a plug in file file is the name

00:58.430 --> 00:59.450
of this package.

01:00.260 --> 01:07.740
And with this atatÃ¼rk package we can go to the AT place TS file and at this as a new import from our

01:07.880 --> 01:11.730
ionic native package file Wasden name.

01:11.810 --> 01:19.520
Now with file added We can go on to our on take photo method and here we actually want to move the image

01:19.790 --> 01:26.570
once it has been taken and we can use this file package this file plug in to move files around into

01:26.860 --> 01:29.690
our file system.

01:29.740 --> 01:36.500
The first thing I want to do here is I want to extract the name of this image image data as default

01:36.630 --> 01:43.210
you are l but I want to get the name and for Doesn't Gunks use a regular expression and I'll store the

01:43.210 --> 01:45.650
name in a new contes named current name.

01:45.700 --> 01:51.190
And here are simply excess image data which is a string the payoff to the image and use the built in

01:51.190 --> 01:58.150
javascript method replace to replace a part of the string and store this new string in current name

01:58.660 --> 02:04.520
and the part I want to replace is identified by the following regular expression.

02:06.290 --> 02:10.710
But what this does is it gives me the part at the end of the path.

02:10.730 --> 02:16.520
So it basically identifies all these slashes or backslashes depending on the operating system.

02:16.940 --> 02:19.450
And no this is the PORATH part.

02:19.490 --> 02:24.590
And only if there is no more slash or backslash after the word.

02:24.600 --> 02:29.930
It's now looking at it knows that this has to be the final name because obviously the filename at the

02:29.930 --> 02:34.510
end of the path is not followed by a slash or backslash.

02:34.880 --> 02:41.600
And then it simply replaces this part the path with an empty string so it strips out the power of all

02:41.600 --> 02:49.100
these segments divided by slashes and backslashes so that only the current name is left over is left

02:50.000 --> 02:52.040
and then I'm also interested in the opposite.

02:52.060 --> 02:55.480
And the path for this and again going to use my image data.

02:55.670 --> 03:02.790
And now I'm going to replace the opposite this regular expression here will achieve the opposite.

03:02.900 --> 03:06.540
Here I will identify the end of this part.

03:06.560 --> 03:10.680
So do filename and I will replace this with an empty string.

03:11.030 --> 03:15.820
So these are just two helpful regular expressions I don't want to go too deep into regular expressions

03:15.830 --> 03:21.470
you can also find regular expressions like these by searching for what you want to achieve plus javascript

03:21.470 --> 03:23.010
regular expression here.

03:23.020 --> 03:28.320
I'm extracting file name and path and hopefully did not mess up my regular expressions here.

03:28.490 --> 03:29.830
With that identified.

03:29.870 --> 03:36.220
I can now use the file package this file native feature we imported from ionic native.

03:36.410 --> 03:41.030
And here we get a couple of helpful methods so definitely check out the official documentation.

03:41.030 --> 03:45.400
You can do all kinds of things create files create directories move directories.

03:45.500 --> 03:53.060
I want to move a file of course because I want to move the image I want to move the image at this path

03:53.120 --> 03:58.850
with this name and this is why I had to split it up because move file expects to have path and name

03:58.850 --> 04:02.320
as two separate arguments and not as one single argument.

04:02.900 --> 04:13.550
And then I need to entered a new path not a new path can be found on reserved variable we can access

04:13.820 --> 04:16.250
and that's the code of the variable.

04:16.250 --> 04:22.640
Now we have to go to the top of the file Bellotti imports but above the component declaration here and

04:22.640 --> 04:27.110
declare a new variable corde of the of type.

04:27.110 --> 04:34.370
Any This is a little trick which informs typescript that this chord of a variable will be available

04:34.370 --> 04:35.170
at runtime.

04:35.180 --> 04:41.120
It's not able to identify this very variable right now because it's only available on the native device.

04:41.120 --> 04:45.280
So this is why we have to use this trick to inform it hey it's going to be good.

04:45.320 --> 04:51.110
It's going to be available when we need it and we need the help of variable here because with this we

04:51.110 --> 04:58.050
can access the path on our file system but we want to store those files because that's no signal path.

04:58.100 --> 05:03.920
Instead this is the path for our application and it will vary depending on the platform you're running

05:03.920 --> 05:05.320
on.

05:05.330 --> 05:10.160
Thankfully d'accord of the package itself which we're accessing with this method with this to me with

05:10.160 --> 05:14.920
this variable with quarter of a year has a couple of helper properties and methods.

05:15.020 --> 05:22.150
And the important helper property here is the file property and then data directory.

05:22.490 --> 05:30.500
And that's just something you can keep in mind this expression here gives us access to the folder for

05:30.560 --> 05:36.680
this app on the different platforms automatically adjusted depending on where you run this app where

05:36.680 --> 05:38.890
you can store your files permanently.

05:38.920 --> 05:45.710
Because on both iOS and Android there is a kind of permanent storage directory for each app and you

05:45.710 --> 05:50.350
can access this storage directory with this helper expression here Cordova.

05:50.390 --> 05:52.330
File data directory.

05:52.880 --> 05:59.210
And that's also something you'll find here in the official native documentation for the file package

05:59.450 --> 06:06.830
here for example in an example you see that you have is where a cord of a helper and you can also find

06:06.830 --> 06:09.260
more on the Get up page for this package.

06:09.260 --> 06:13.580
This is why I really encourage you to dive into this for your specific use case or just to manage you

06:13.580 --> 06:14.470
covered them all.

06:14.570 --> 06:18.580
But it's important to know that such helper expressions here exist.

06:18.590 --> 06:20.630
The last argument is to file name.

06:20.630 --> 06:23.940
And here we can just use the current name of course you could always rename it.

06:24.020 --> 06:26.990
This will be didn't you name of this file.

06:27.020 --> 06:33.140
So if this were telling you fall pick whatever we want to move this file or this file name here at this

06:33.140 --> 06:38.380
path to this POV with this new file name which here happens to be the old file name.

06:38.480 --> 06:44.030
And then again we have two blocks or two methods catch and then to handle both arrows and success cases.

06:44.030 --> 06:48.480
And as always you should handle both because that as also can go wrong.

06:48.500 --> 06:55.880
So we should definitely do something in the error case and in this case I actually want to abort this

06:55.880 --> 07:01.610
whole process because well something failed so we said should set the image you're allowed to to an

07:01.610 --> 07:03.770
empty string.

07:03.770 --> 07:07.820
We should also for lottos that something goes or went wrong.

07:08.000 --> 07:18.780
So maybe create a new toast to year with the Tele's controller where we say create and then say as a

07:18.780 --> 07:25.180
message could not save the image please.

07:26.140 --> 07:33.450
Try again something like that for adoration of two and a half seconds and at the bottom is fine.

07:33.490 --> 07:39.130
So that we can then present this toast because again we really need to make sure that we're not doing

07:39.130 --> 07:42.960
something wrong here and we're trying to save a place where we couldn't save the image.

07:42.970 --> 07:44.170
Right.

07:44.200 --> 07:50.260
Also at this point of time any error here we can call camera this camera package.

07:50.260 --> 07:57.520
We also used to get a picture and call cleanup and this will clean up our temporary storage because

07:57.610 --> 07:58.570
obviously it failed.

07:58.570 --> 08:01.120
So no need to keep the image around right.

08:01.120 --> 08:04.770
It doesn't have any use for us in the temporary storage.

08:04.900 --> 08:12.010
So this honesty case that had failed and we can also copy does tell us here now that I see it and show

08:12.010 --> 08:17.590
it here in the Arrow case for the whole camera I get picture method just to complete this too could

08:17.590 --> 08:19.900
not take the image would be the right message here.

08:19.900 --> 08:22.460
So that's just a tiny addition to all the show a message.

08:22.600 --> 08:23.700
If that fails.

08:23.860 --> 08:26.080
But back to the file moving here.

08:26.410 --> 08:28.630
We can't recover the error case.

08:28.630 --> 08:31.740
Now let's talk about that being successful.

08:32.140 --> 08:40.130
If it is successful we get back a data object which will hold our new path so we can then set the image

08:40.250 --> 08:44.200
bureau to this new path and we can exorcise the state object.

08:44.260 --> 08:49.720
And there we have a native you are l property and that's the important property we're interested in

08:49.870 --> 08:57.490
because this property store is d'you or all of this newly created image and since typescript doesn't

08:57.610 --> 09:00.350
like this let's assign the type here.

09:00.490 --> 09:06.370
This will be an entry you need to import entry from ionic native to.

09:06.520 --> 09:09.770
So that's the type definition default package uses for this.

09:09.850 --> 09:13.340
And on entry we do have a native Your L.

09:13.630 --> 09:20.050
And since we're already doing this we can also set the type of this error to file error because that

09:20.110 --> 09:21.880
is the type of error we would get.

09:22.060 --> 09:25.940
You can also import this from ionic native.

09:25.970 --> 09:28.960
So with this we adjusted our types here.

09:30.370 --> 09:35.710
And more importantly we're setting the immaterial to the new you are l Where is stored this file.

09:35.740 --> 09:43.650
We can then also call camera cleanup to remove our temporary files because we don't need it anymore.

09:43.690 --> 09:45.660
We copied the file in the end right.

09:45.730 --> 09:53.710
An alternative would be to call file remove file and then point to the path and the current name which

09:53.710 --> 09:56.220
is the temporary path and the name.

09:56.260 --> 09:59.320
So that's an alternative but camera cleanup should do the same.

09:59.320 --> 10:01.170
And with that we're really moving the files.

10:01.180 --> 10:03.150
No we're storing it permanently.

10:03.160 --> 10:07.160
That's the first important step storing the file in a better place.

10:07.180 --> 10:12.760
Next we also need to store our data so that when we kill the app and we reopen it we still have the

10:12.760 --> 10:13.720
data there.

10:13.780 --> 10:16.190
Let's start working on this in the next lecture.
