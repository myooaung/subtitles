WEBVTT

00:02.130 --> 00:04.330
We added a basic form of routing,

00:04.350 --> 00:08.780
now let's also add a way of passing data around with services.

00:08.910 --> 00:16.470
A service is essentially a class which can act as a middleman between components or as a data storage

00:16.470 --> 00:20.910
for other components or even interact with other services.

00:20.910 --> 00:26.400
You can create a service anywhere and I will create my persons service in the persons folder because

00:26.400 --> 00:29.110
it makes sense logically to add it there.

00:29.490 --> 00:34.990
I'll name it persons.service.ts, that is kind of convention you typically use and again,

00:35.010 --> 00:40.130
that is just a class, persons service.

00:40.140 --> 00:46.620
Now here, we add another decorator and here it's the @injectable decorator,

00:46.620 --> 00:52.770
you might have expected something like @service but that does actually not exist. Injectable needs

00:52.770 --> 00:58.560
to be imported from @angular/core and you need to add parentheses after it and it's called injectable

00:58.890 --> 01:05.940
because we can inject services into other components using a feature called dependency injection to which

01:05.940 --> 01:07.310
I'll come back.

01:07.590 --> 01:16.160
Now in this decorator, you want to add a Javascript object where you set the providedIn key to root and

01:16.160 --> 01:19.370
this will make sure that Angular is aware of this service.

01:19.410 --> 01:27.030
The alternative would be to not do that and instead go to your module, your app module and here in providers,

01:27.390 --> 01:34.470
you would then add persons service and you need to add an import to that service in your file as well.

01:34.710 --> 01:38.040
You need to do that or that other thing I showed before,

01:38.430 --> 01:46.200
this makes Angular aware of the service and allows Angular to inject it into components that need it

01:46.230 --> 01:53.010
and here, I'll not use the providers approach but I will use the actually recommended approach by adding

01:53.010 --> 01:56.060
it in @injectable here.

01:56.100 --> 01:59.870
So now Angular is aware of this and can inject it,

01:59.880 --> 02:03.380
now what does inject mean though?

02:03.390 --> 02:11.640
Well inject mean that component can simply define that it needs a certain class, a certain object

02:11.910 --> 02:17.430
and Angular tries to give that element or that class to that component

02:17.430 --> 02:21.820
and for that, you need to of course tell Angular which things are injectable and

02:21.870 --> 02:23.900
that's exactly what we're doing here.

02:24.120 --> 02:31.340
But step-by-step, before injecting this, let's add some logic to that class, to this service.

02:31.440 --> 02:37.500
For example let's grab the persons array we have in the app component and let's remove it there and

02:37.500 --> 02:38.590
let's add it here in

02:38.610 --> 02:46.970
the persons service, instead of here in the app component and we also don't need this method here anymore,

02:46.980 --> 02:53.160
therefore in the app component. In persons service, I added this and there, I will also add a method which

02:53.160 --> 02:55.640
I'll name add person and the name is up to you

02:55.800 --> 03:05.730
and there, I expect to get my name which is a string and there, I want to push data to my persons, like

03:05.730 --> 03:06.670
this.

03:06.690 --> 03:11.830
Now we have our very basic first version of that service set up,

03:11.970 --> 03:13.080
how can we now use it?
