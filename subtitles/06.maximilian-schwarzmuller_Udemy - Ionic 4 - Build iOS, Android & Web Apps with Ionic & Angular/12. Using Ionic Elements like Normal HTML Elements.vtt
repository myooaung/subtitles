WEBVTT

00:02.290 --> 00:04.110
Now this is all taking shape,

00:04.120 --> 00:10.390
it's now time to add some logic and with logic, I mean write some code that does something when either

00:10.390 --> 00:12.140
of these buttons is clicked.

00:12.160 --> 00:15.750
Now of course later, we'll do this with the help of Angular in this course

00:15.970 --> 00:20.230
but as I mentioned multiple times, you don't need to do that with Angular,

00:20.230 --> 00:25.960
this here will work with vanilla Javascript as well because we're just throwing a couple of web components

00:25.960 --> 00:26.690
into our app,

00:26.770 --> 00:33.010
we can interact with them just as we can do with normal HTML elements and that by the way of course

00:33.010 --> 00:39.370
is also the reason why you can use Ionic for and later versions with Angular, with Vue, with Raect, with

00:39.400 --> 00:42.830
whichever framework you want.

00:42.840 --> 00:48.920
Now let's add an app.js file here and you can name the file however you want of course and let's import

00:48.950 --> 00:56.180
that file at the end of our HTML file right before the closing body tag, here with a script import, script

00:56.180 --> 01:02.080
source app.js, so that this will now execute when this file is parsed and in here,

01:02.090 --> 01:07.640
I want to get access to my inputs to reads the values in them and I want to get access to my buttons

01:07.670 --> 01:09.490
to add click listeners to them

01:09.650 --> 01:16.620
and of course, I also want to output some data we entered below this card,

01:16.640 --> 01:22.280
so here or actually outside of this column and row.

01:22.340 --> 01:27.200
So first of all to get access to the inputs and the button, I will add IDs to them.

01:27.260 --> 01:33.140
You could add CSS classes or use the tag selectors, though since we have multiple ion-inputs using

01:33.140 --> 01:38.900
the tag selector to get access to them would work but would be a bit more tricky.

01:38.900 --> 01:50.360
So here I'll just give this a reason or an input reason ID, this here we'll get an ID of input amount

01:50.960 --> 01:59.990
and for the buttons here, this first button will get an ID of button cancel and the second button down

01:59.990 --> 02:00.340
there,

02:00.350 --> 02:07.100
this one, will get an ID of button confirm. Now obviously you can use any ID names you want,

02:07.100 --> 02:08.780
this is not an Ionic feature,

02:08.780 --> 02:17.900
these are regular HTML IDs. With these IDs assigned, let's go into app.js and store references

02:17.900 --> 02:25.730
to these elements in some constants, like the reason input here. We can get access to it by using document

02:25.730 --> 02:34.920
query selector and then hashtag to use the ID selector, input reason and of course this here, this

02:34.920 --> 02:38.690
text here, this name here should match the ID name you assigned here,

02:38.730 --> 02:43.040
input reason. Next we'll get access to input amount and for that,

02:43.080 --> 02:50.760
let me just duplicate this line here, name this amount input and get access to input amount.

02:50.760 --> 02:56.100
So these are the two inputs, of course I also want to get access to my buttons, so I'll have my cancel

02:56.100 --> 03:03.450
button which I get access to with document query selector and then hashtag button cancel was the

03:03.450 --> 03:11.400
ID I assigned and last but not least, the confirm button with document query selector hashtag button

03:11.730 --> 03:20.550
confirm. So now, access to all these elements is or not access, references to all these elements are stored.

03:21.510 --> 03:29.070
In this vanilla Javascript code I'm writing here, I can now of course add my listeners to the confirm

03:29.070 --> 03:35.040
button for example. We can add an event listener to the click event and then this function here will

03:35.040 --> 03:42.210
get executed once we click on the button and for now, we can just console log it works to check

03:42.360 --> 03:44.580
whether it works.

03:44.580 --> 03:52.880
So let me open the Javascript console here on the right, reload and click add expense and you should

03:52.880 --> 04:00.530
see it works now if you wired this all up correctly. Now that is perfect, as a next step, let's make sure we

04:00.800 --> 04:08.000
actually read the values we store in here and that we then are able to validate them and output

04:08.000 --> 04:08.420
them

04:08.450 --> 04:09.850
below our card here.
