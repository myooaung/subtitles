WEBVTT

00:02.200 --> 00:05.340
What exactly is Angular? Angular

00:05.350 --> 00:06.420
is a client-side,

00:06.430 --> 00:12.400
which means it runs in the browser, Javascript framework which is used to build engaging and reactive

00:12.400 --> 00:13.960
user interfaces.

00:13.960 --> 00:16.110
This is a definition we could come up with

00:16.120 --> 00:18.580
but what exactly does it mean?

00:18.580 --> 00:24.670
Well the first important part is that it's a client-side Javascript framework, that means it runs in

00:24.670 --> 00:26.330
the browser, not on the server.

00:26.410 --> 00:30.610
It's not using NodeJS or any other server-side programming language,

00:30.640 --> 00:34.480
it uses Javascript as it runs in the browser.

00:34.480 --> 00:40.480
Well actually as it will turn out, you will learn that Angular uses Typescript which is a superset to

00:40.480 --> 00:46.660
Javascript but that is just so that we as a developer have a more convenient way of developing Angular

00:46.660 --> 00:48.190
applications.

00:48.190 --> 00:53.860
We will in the end just get a bunch of Javascript code even though we don't write that Javascript code

00:53.860 --> 00:55.250
directly.

00:55.360 --> 01:02.260
The next important part is that it's a framework and that simply means it's a set of rules and utility

01:02.260 --> 01:09.730
tools and utility helpers which we use in our Javascript code or our Typescript code which we write

01:10.030 --> 01:12.140
that makes our life easier

01:12.370 --> 01:20.710
and that will take care about things like sending HTTP requests, routing, so rendering different pages,

01:20.740 --> 01:28.510
different content depending on where the user went in our application and managing the state, the data

01:28.750 --> 01:30.720
our application needs.

01:30.730 --> 01:37.570
This would all be possible without Angular or without a framework like Angular too but using a framework

01:37.660 --> 01:39.300
simply makes it easier

01:39.670 --> 01:44.740
and always keep in mind, in the end what we will get is a bunch of Javascript code that we could have

01:44.740 --> 01:51.250
written like this but that is very complex and very sophisticated and hence is easier to write when

01:51.250 --> 01:53.270
using a framework like Angular.

01:53.500 --> 01:59.830
And last but not least, we are using frameworks or tools like Angular to build engaging and reactive

01:59.830 --> 02:02.590
user interfaces and that is important.

02:02.590 --> 02:09.040
We don't use Angular to build very trivial applications most of the time because it really shines when

02:09.040 --> 02:15.700
we have more complex applications, more complex web apps, more complex user interfaces where a lot of

02:15.700 --> 02:22.840
things are happening and where we therefore want to control a lot of stuff with Javascript which allows

02:22.840 --> 02:30.010
us to update things in the browser without reloading the page, without fetching a new HTML page and

02:30.100 --> 02:35.920
where at the same time all this complexity means that we would have to write very complex Javascript

02:35.920 --> 02:40.630
code and that is where a framework like Angular simply helps us a lot.
