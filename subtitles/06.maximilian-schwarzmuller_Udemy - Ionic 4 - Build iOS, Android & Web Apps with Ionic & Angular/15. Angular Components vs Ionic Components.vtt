WEBVTT

00:02.420 --> 00:05.310
Now with the alert controller added, we're pretty much done,

00:05.330 --> 00:10.460
one of the missing things is that I also want to redirect here in this very unlikely case that we somehow

00:10.460 --> 00:13.660
get to this page without having a recipe in the URL,

00:13.760 --> 00:15.800
so I will do that there

00:15.890 --> 00:21.980
and with that I'm happy with that setup, with what we achieved here.

00:22.010 --> 00:27.240
I hope you see why using Angular together with Ionic can be helpful

00:27.290 --> 00:31.620
and in the end, it's just a normal Angular app with the Ionic magic added to it

00:31.640 --> 00:34.460
you could say. This therefore is of course the setup

00:34.460 --> 00:39.380
I'll continue with for the rest of the course and with which we'll build the entire course project then.

00:39.920 --> 00:42.410
There's one more thing I want to show you

00:42.410 --> 00:48.170
just to make this really clear on how it works and how it works together with Ionic. Obviously in this

00:48.170 --> 00:54.860
Angular project, you can still create your normal Angular components which you use with their selectors

00:54.860 --> 01:00.770
in your templates, so you can not just generate pages with Angular components,

01:00.770 --> 01:04.580
you can still use them as you use them in any Angular project.

01:04.580 --> 01:11.870
So I can use Ionic generate here again and as you will see, besides being able to create a page, I can now

01:11.870 --> 01:13.640
also create normal component,

01:13.640 --> 01:14.720
so let's go with that. Of

01:14.790 --> 01:21.440
course you could have typed Ionic generate component as well and the path will be recipes, recipe item

01:21.440 --> 01:27.650
here and this will simply be a single recipe item which I output here in my list.

01:27.650 --> 01:34.430
So I'll grab this ion-item code here from the recipes page component and add it to the HTML file

01:34.430 --> 01:36.560
of my recipe item component.

01:36.560 --> 01:39.320
So this is now not a full Ionic page,

01:39.320 --> 01:46.280
it is just keeping or containing some Ionic components and it could also just contain other Angular components

01:46.310 --> 01:49.720
or normal HTML, the key takeaway is

01:49.720 --> 01:52.730
this will not be rendered as an Ionic page.

01:52.840 --> 01:58.870
I also don't want to have ngFor on this ion-item here, instead in recipe item,

01:59.020 --> 02:06.870
I want to have a property, recipe item maybe which will be a recipe, so it will be of type recipe and therefore

02:06.870 --> 02:12.700
you should import recipe from the recipe model file and this will be bindable from outside.

02:12.720 --> 02:14.520
How does that work in Angular?

02:14.520 --> 02:18.690
Well you add @input in front of it right

02:18.900 --> 02:21.240
and input is imported from @angular/core.

02:21.330 --> 02:26.980
So you can continue building these normal Angular components with inputs, outputs and so on.

02:27.000 --> 02:31.110
Here we're using an input and make recipe item bindable from outside,

02:31.140 --> 02:38.790
therefore in the template of recipe item I can use recipe item here and here because that is the name

02:38.790 --> 02:47.200
of my property now, of that bindable property and we can now start using recipe item by its selector in

02:47.290 --> 02:49.160
our recipes page.

02:49.390 --> 02:57.640
Now recipes module was automatically updated by the Ionic CLI and it added recipe item component

02:57.670 --> 03:03.360
there to the declarations which is correct because I want to use it in this module,

03:03.370 --> 03:08.740
I want to use it in the recipes page, so declaring it in the app module or anything like that would have

03:08.740 --> 03:09.550
been wrong,

03:09.550 --> 03:13.980
you have to declare it in the module where you use it and we do use it here.

03:14.020 --> 03:21.670
So now in the recipes page component file here, we can use app recipe item, that is the selector of the

03:21.670 --> 03:23.160
component that was created,

03:23.230 --> 03:29.040
you can of course see that here in the component Typescript file and all we have to do is we

03:29.040 --> 03:32.770
have to pass a value for our recipe item.

03:32.850 --> 03:38.540
Now this can be done by still going through all our recipes with ngFor here,

03:38.580 --> 03:46.800
so recipe of recipes, this doesn't change and that recipe is then forwarded as a recipe item to the app recipe

03:46.800 --> 03:48.860
item component

03:48.930 --> 03:55.050
and with that if you save that, it should now rebuild and work in exactly the same way as before.

03:55.050 --> 03:59.200
Here we have our items and we can still tap them and navigate around.

03:59.250 --> 04:04.500
So those works as before and I'm simply showing you this because I really want to make sure that you

04:04.500 --> 04:11.220
understand that this is a normal Angular project and you can build Angular components as you're used to.

04:11.370 --> 04:17.610
And indeed if you compare Angular components and Ionic components, you'll see that you use them in a

04:17.610 --> 04:23.970
similar way inside of your Angular project, of course Angular components are created by you with

04:23.970 --> 04:30.570
@component or you're importing some other third-party library and actually as I mentioned, @ionic/angular,

04:30.600 --> 04:36.930
this package in the end wraps all the Ionic web components into Angular components.

04:36.930 --> 04:42.930
So technically, these also are Angular components now but they're only thinly wrapped, in its core,

04:42.960 --> 04:44.820
there's still web components.

04:44.820 --> 04:48.060
So we create our own components with @component,

04:48.060 --> 04:53.310
we use them inside of our Angular templates and that's the only place where we can use them, Angular

04:53.310 --> 04:58.040
will render them to the DOM for us, will render the content of their templates to the DOM for us

04:58.800 --> 05:05.550
and as I mentioned, we can only use Angular components in an Angular app. Ionic components,

05:05.570 --> 05:12.530
well Ionic ships these pre-built web components and you can't edit them, they're open source but you can't

05:12.530 --> 05:18.230
edit them, they will not allow you to merge your changes into the Ionic repository without a very good

05:18.230 --> 05:24.320
reason. Ionic components use native web technologies, they are web components and yes they are wrapped

05:24.320 --> 05:30.110
here by @ionic/angular but in its core, there're still web components in there and you can therefore

05:30.110 --> 05:38.610
use these web components anywhere, in any project, anywhere, not just inside of Angular apps. And I mentioned

05:38.610 --> 05:44.180
this a couple of times, I think it's pretty clear now, it is just important to understand which is why

05:44.210 --> 05:46.510
I'm emphasizing this over and over again.
