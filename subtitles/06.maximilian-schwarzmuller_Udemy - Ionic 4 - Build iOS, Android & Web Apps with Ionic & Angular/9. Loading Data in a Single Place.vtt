WEBVTT

00:02.160 --> 00:05.310
Now what if I load a detail page.

00:05.310 --> 00:11.880
Of course this works like this but if I reload the page here it will break and it will break in an ugly

00:11.880 --> 00:12.750
way.

00:12.780 --> 00:15.650
Similar thing can be observed if I'm editing a place.

00:15.690 --> 00:18.980
It works like this but if I reload on this page doesn't work.

00:19.440 --> 00:25.770
So we should also add a method that fetches a single place fetching single places would be useful because

00:25.770 --> 00:31.710
it allows pages like the added offer page or to place detail page to work even if we load the page there.

00:31.710 --> 00:37.280
So if we load the app there and we haven't loaded our pages where we load it all places before.

00:37.290 --> 00:41.630
Now obviously we could just call fetch places in these pages here as well.

00:41.910 --> 00:46.140
And you could argue that this might be good because it all ensures that places are there once you go

00:46.140 --> 00:47.130
back to offers.

00:47.160 --> 00:52.800
However dare we call fetch places anyways so it's not really a big advantage and it might simply take

00:52.800 --> 00:59.310
longer because if we fetch all places when reloading the added offer page then we load a lot of redundant

00:59.340 --> 01:01.330
data which we don't actually need there.

01:01.380 --> 01:02.910
We just need that single place.

01:02.910 --> 01:10.080
We try to edit after all hence it makes sense to go to the places service again and there we already

01:10.080 --> 01:16.680
have a get place method note that is nice but what we want to do here in the end is we want to get a

01:16.680 --> 01:19.280
place from the server now.

01:19.470 --> 01:20.070
Here it is.

01:20.070 --> 01:28.320
OK if I replaced my local place finder with the finder where I get this from a server or at least you

01:28.320 --> 01:33.450
could say I want to get it from the server if we don't have the data locally you could of course make

01:33.450 --> 01:35.680
such a fine grained differentiation.

01:35.760 --> 01:39.900
I will simply always fetch a single place from the server here.

01:39.900 --> 01:47.310
Therefore I'll simply go ahead use the H to be client and use it gets request and the user L for a single

01:47.310 --> 01:54.940
place of course looks similar to the URL for updating a place we need to encode the place I.D. into

01:54.940 --> 02:01.690
the URL so we'll fetch you or L from down there from the update place method and use that up here get

02:01.690 --> 02:03.940
place like this.

02:04.240 --> 02:09.460
Just that it's not named place idea here but the argument is just named I.D. So let's use that into

02:09.460 --> 02:10.780
your l instead.

02:10.960 --> 02:13.780
This gets the single place data.

02:13.780 --> 02:17.440
Now we just need to make sure we're returning it in the right format.

02:17.670 --> 02:22.660
Now here let's see in which format we get back our response.

02:22.760 --> 02:27.370
Let's add tap here and console log the response data.

02:29.230 --> 02:33.730
And then let's safeties and run the app and let's see what we're getting back when we're trying to fetch

02:33.880 --> 02:41.160
a place like that I get an error because the page fails to load which is OK but I also see at the bottom

02:41.490 --> 02:46.740
that what I got back is an object with all that place data except for the I.D. which is no problem because

02:46.740 --> 02:47.420
I have to I.D..

02:47.420 --> 02:48.730
Here of course.

02:48.810 --> 02:54.450
So all we have to do here is we have to use map to construct the place object with the data we fetched

02:54.630 --> 02:56.850
and that idea added to it.

02:56.850 --> 03:00.870
So we get our place data our response data whatever you want to call it.

03:01.140 --> 03:09.700
And in the end here I want to return a new place because I know that I get back a place data object

03:09.730 --> 03:12.430
here so we can use that place data interface.

03:12.430 --> 03:16.870
We defined earlier here in the angle brackets because that's just the type of data we're getting back

03:16.870 --> 03:17.640
here.

03:17.980 --> 03:23.530
And therefore here in the new place the idea is the idea I got here is an argument that doesn't change

03:24.790 --> 03:33.840
then the title will be our place data title we will all have to place data description and basically

03:33.840 --> 03:39.540
have all the place data fields we are fetching from the server all the price.

03:39.630 --> 03:43.650
Now for the dates again I want to wrap that so place data.

03:44.890 --> 03:48.610
Available from is one thing and then also in new Date.

03:48.610 --> 03:55.930
I have placed data available too like that last but not least.

03:55.960 --> 03:58.400
Also get the user I.D..

03:58.710 --> 04:01.050
So this is now a new place which I'm returning.

04:01.050 --> 04:02.220
And if we save that

04:05.170 --> 04:06.120
it should not reload

04:09.210 --> 04:17.280
but we still get an error and that error is stemming from the fact that in our edit offer page H html

04:17.280 --> 04:24.020
file we're already trying to synchronize our fields here.

04:24.060 --> 04:30.780
Our form controls to to form created in the edit all four page typescript file but there we actually

04:30.780 --> 04:36.270
only initialize the form once we got our place which is super fast but which still takes a couple of

04:36.270 --> 04:42.750
milliseconds so the template with all the form controls that angular tries to synchronize loads before

04:42.750 --> 04:44.550
that place was fetched.

04:44.940 --> 04:51.840
Now to fix this and to make sure that this works of course we can show a spinner here as well so we

04:51.840 --> 04:54.530
can add is loading and set this to false here.

04:55.850 --> 05:03.710
And then here before we call get placed I said is loading to true and then I set it back to FALSE after

05:03.710 --> 05:05.840
we initialized this form here.

05:05.900 --> 05:13.400
So there s after this I set is loading back to false and now in the template we can use is loading just

05:13.400 --> 05:14.570
as we used to before.

05:14.780 --> 05:20.750
And I would want to basically hide the entire form if we're loading so only show it if we're not loading

05:21.200 --> 05:30.240
and if we are loading well then I'll just use a diff here with the ion spinner Woops I and irons better

05:30.570 --> 05:40.290
color of primary and here I want to check whether we're loading node this alone wouldn't do though.

05:40.340 --> 05:49.130
I'm also trying to access my form up here and I want to check if it's valid now form will not be initialized.

05:49.260 --> 05:53.810
When does page first load because I only set a value to my form property here.

05:53.820 --> 05:59.850
Once we got a place data we can fix this by adding a question mark off the forum which means only access

05:59.850 --> 06:05.970
to valid property If form is set and I also set the place I.D. here on the back button.

06:05.970 --> 06:13.590
Now the problem I have here is of course that this place also is only load after a certain amount of

06:13.590 --> 06:20.010
time but actually the place I.D. is a way lable earlier so we can work around this by adding a place

06:20.130 --> 06:26.260
Aidid property here and we set this place I.D. whenever we got an idea.

06:26.310 --> 06:32.020
So basically here before we start loading the place for that I.D. We can already store the place I.D.

06:32.030 --> 06:40.070
which is part of the U or L and set does equal to Param map get place ideas like this.

06:40.350 --> 06:46.830
And now with this new place I.D. property added here where we needed we can also use place I.D. instead

06:46.830 --> 06:48.750
of place dot I.D..

06:48.750 --> 06:56.340
And with that if we wait for this to reload our page here loads correctly but we will actually have

06:56.400 --> 06:57.420
new problems.
