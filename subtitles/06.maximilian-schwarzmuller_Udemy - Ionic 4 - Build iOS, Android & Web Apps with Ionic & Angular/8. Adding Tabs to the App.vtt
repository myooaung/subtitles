WEBVTT

00:02.210 --> 00:09.170
As always the official docs are a great place to learn all about tabs, there on the bottom of that components

00:09.380 --> 00:12.020
documentation you find the ion-tabs element.

00:12.140 --> 00:16.790
Now it is worth pointing out that you use them a little bit different when working with Angular than

00:16.790 --> 00:22.700
it's documented here and I'll explain you how you work with it but the general idea is the same.

00:22.700 --> 00:24.560
So how do you work with tabs then?

00:26.260 --> 00:30.250
First of all, let me get rid of the padding so that we don't have any extra padding on the page,

00:30.250 --> 00:37.000
I don't need that and then you add tabs by adding that ion-tabs component, that is your wrapper around

00:37.000 --> 00:39.940
your entire tabbing logic.

00:39.940 --> 00:46.000
Then you need to add an ion-tab bar and that basically allows you to define which buttons you want to

00:46.000 --> 00:54.430
have, which actual tabs with which text and which icons you want to have. That ion-tab bar must receive

00:54.880 --> 01:02.290
a slot of bottom here so that it's correctly positioned at the bottom of the page. Inside of the ion

01:02.290 --> 01:03.330
tab bar,

01:03.340 --> 01:09.250
you then add your ion-tab button components which allow you to set up the different buttons in

01:09.250 --> 01:16.300
your tab bar and each tab button needs to get a unique identifier which you assign with the tab attribute

01:16.870 --> 01:20.880
and in our case with the places, we'll have let's say discover

01:20.890 --> 01:28.900
but you can choose whatever you want here and I'll also add my second tab button and there I'll add

01:29.230 --> 01:32.650
a tab attribute with a value of offers,

01:32.650 --> 01:34.170
again this is totally up to you.

01:35.380 --> 01:42.970
Now you can add text and or icons to your tabs and I'll add both, you add text by adding a ion label

01:43.540 --> 01:50.510
and then in between you just enter whichever text you want to display, like discover.

01:50.640 --> 01:59.820
You can also then add an ion icon and here I'll use a name of search which should give us a nice search

02:00.000 --> 02:03.850
icon. For the second tab,

02:03.850 --> 02:08.710
I'll add my ion label with a text of offer or offers,

02:08.770 --> 02:14.170
makes more sense since we might have multiple places offered and then also my ion icon with a name

02:14.170 --> 02:20.090
of a card here, that is actually a nice icon I picked in advance that fits quite well.

02:20.110 --> 02:24.570
Of course you can always go to ionicons.com and search for your own

02:24.580 --> 02:29.080
icons you could use here. And now the part that differs,

02:29.100 --> 02:35.190
if you follow the official docs, then you would now also add the ion-tab elements here where you

02:35.190 --> 02:41.700
actually use the same identifiers you used on the tab buttons to then control which content gets displayed

02:41.970 --> 02:45.150
for which button that is pressed. With Angular,

02:45.180 --> 02:47.460
that works a bit different,

02:47.550 --> 02:52.860
you don't add ion-tab and indeed ion-tab at this time is not even supported here,

02:52.950 --> 03:00.420
instead Angular will automatically insert the right page based on the button you pressed and to ensure

03:00.420 --> 03:02.370
that Angular is able of doing that,

03:02.400 --> 03:06.600
you just have to make sure that you match this tab identifier

03:06.630 --> 03:11.760
you're setting up here in your routing setup and for that, we first of all need to tune our routing

03:11.770 --> 03:17.640
setup of course. We do that in the places module because is the place responsible for the places page

03:18.210 --> 03:19.040
and in there

03:19.050 --> 03:21.490
currently, we have one route.

03:21.810 --> 03:26.430
Now we'll add more routes and therefore I'll actually do something which is totally optional but which

03:26.430 --> 03:27.570
is a good practice,

03:27.660 --> 03:34.770
I'll outsource my routes here into a new module, into my places-routing.module.ts file

03:35.100 --> 03:40.650
and that is a similar pattern we have for the main routes with the app routing module as well. In the

03:40.650 --> 03:48.360
places-routing module, I'll export a class which is named PlacesRoutingModule and the duty of that

03:48.360 --> 03:53.820
class is to get the ngModule decorator and if that is something you never saw before,

03:54.270 --> 04:00.030
as always check out my complete guide about Angular, there you'll learn all about Angular modules and

04:00.030 --> 04:04.560
what's up with them and on this ngModule here,

04:04.560 --> 04:12.450
I will now set or I will now import the router module and that is coming from @angular/router,

04:12.450 --> 04:18.810
so nothing ionic specific, that still is Angular routing we're using. The idea is that we here set up some

04:18.810 --> 04:26.100
child routes with forChild which are then basically merged with the global route definition once this

04:26.100 --> 04:28.020
module is lazy loaded,

04:28.050 --> 04:34.950
we also need to export our router module here without forChild being called again though,

04:35.040 --> 04:40.200
so this is now the router module with the new configuration you could say. Now for the routes,

04:40.200 --> 04:45.990
I'll add my routes constant which will be of type routes and routes just as router module needs to be

04:45.990 --> 04:48.260
imported from @angular/router,

04:48.330 --> 04:51.120
that is an array of our route objects,

04:51.120 --> 05:00.930
so again just plain old Angular logic. Now in that object here, in the first object, I want to set a path

05:01.050 --> 05:07.680
which I'll name tabs and you could name this place-tabs as well, whatever you want, I'll just name it tabs.

05:09.990 --> 05:16.420
The component I want to render for this path is my places component because that will actually be

05:16.540 --> 05:23.580
the component, excuse me, places page is the name, that is the component in the end that has my tabs and that

05:23.580 --> 05:24.330
is important.

05:24.330 --> 05:30.240
So here you want to render that component that holds your tabs and of course you need to import that

05:30.240 --> 05:38.440
component here. Now that will have a couple of children, a couple of child routes and now that is an important

05:38.440 --> 05:39.150
pattern,

05:39.370 --> 05:45.870
the page, the component where you have your ion-tabs element needs to have some child routes

05:45.910 --> 05:53.890
and now for these child routes, we'll have to make sure that we adjust them correctly to meet our identifiers

05:53.890 --> 05:58.000
we added on our tab buttons. How do we do that?

05:58.000 --> 06:05.890
Well we add again just an object to configure a path and the path here now has to match one of these

06:05.890 --> 06:12.600
identifiers because ionic behind the scenes will then look for such a path when this button is pressed.

06:12.670 --> 06:21.320
So here, I'll now add discover as a path and discover for me will actually then just be a wrapper with

06:21.320 --> 06:28.940
more child routes because in these child routes, I'll now have both my discover main page where we see all

06:28.940 --> 06:34.490
the places we can book but I'll then always have another child which will be my place detail page

06:34.490 --> 06:42.920
so to say. So I'll have an empty path in there and there I want to lazy load my discover module, so the

06:42.920 --> 06:51.020
discover page, I'll do that by pointing at the discover folder and then the discover module and in

06:51.020 --> 06:52.090
there, without .ts

06:52.100 --> 06:54.230
that's important and then a hashtag

06:54.440 --> 06:57.100
and then discover module.

06:57.230 --> 07:03.530
So you basically now need to enter the name of this class, discover page module it is here after the

07:03.530 --> 07:11.060
hashtag and that is how you set up lazy loading in Angular, relative path from this file on and that allows

07:11.060 --> 07:13.280
us to use lazy loading even inside of tabs.

07:13.280 --> 07:18.920
That means if we never press a tab button, the code for the page that is loaded when you press it will

07:18.920 --> 07:25.150
not be downloaded unnecessarily which is of course great. So that is my first route which is a child

07:25.150 --> 07:30.730
of discover and in the end, we reach this by simply typing /tabs/discover you could say

07:31.090 --> 07:38.410
or actually /places/tabs/discover since this whole module is only loaded after we visited

07:38.530 --> 07:43.690
/places already, so now then we load this discover page.

07:43.840 --> 07:50.620
Now the other child page I have here which should start with /places/tabs/discover

07:51.340 --> 07:56.720
is the page with a path of :placeId

07:57.070 --> 08:00.550
and that is a dynamic parameter, hence the colon

08:00.640 --> 08:03.340
because we'll have different places with different IDs

08:03.400 --> 08:04.540
and I want to show my place

08:04.540 --> 08:05.620
detail page here

08:05.680 --> 08:08.800
and I want to pass the ID as a parameter

08:08.800 --> 08:13.990
in the URL and that is also something we already saw in an earlier module and

08:13.990 --> 08:17.330
that is also just how it works in Angular in general.

08:17.380 --> 08:24.940
Here again I'll set up lazy loading by going to /discover and there now to the place detail folder

08:25.220 --> 08:29.810
and there to the place detail module, without .ts

08:29.840 --> 08:35.300
it's important that you remove that otherwise this path will be resolved incorrectly

08:35.300 --> 08:38.740
and then you add a hashtag and then the name of this module.

08:38.810 --> 08:40.080
So let's go in there,

08:40.160 --> 08:42.530
let's copy and paste that name, it's place

08:42.530 --> 08:48.310
detail page module and let's add it here after the hashtag.

08:48.500 --> 08:49.450
Perfect,

08:49.460 --> 08:51.840
so now we have that setup.

08:51.860 --> 08:53.980
This is my discover area,

08:54.020 --> 08:59.700
of course I also have offers and that will now be a sibling to the discover route object.

08:59.780 --> 09:01.950
Here I have a path of offers

09:02.030 --> 09:07.430
and again, this path now needs to match your button tab attribute here

09:07.430 --> 09:11.100
otherwise it will not be loaded correctly. Here

09:11.100 --> 09:16.740
I'll then also add children because I want to have a couple of routes that actually start with

09:16.740 --> 09:24.810
/places/tabs/offers and the first child route I'll add is again just an empty path for just

09:24.810 --> 09:34.010
/places/tabs/offers and there I'll lazy load the offers modules, so that main offers

09:34.020 --> 09:38.740
page, again without ts here and then just as before,

09:38.790 --> 09:46.110
make sure you do copy the right name here so that lazy loading works correctly. So let's copy that and

09:46.110 --> 09:47.980
add it here after the hashtag.

09:48.010 --> 09:54.010
Now feel free to pause the videos and add routes for the other files we have here,

09:54.150 --> 09:59.460
you'll need to pass some dynamic parameters for some of the other routes, for example for editing or

09:59.460 --> 10:04.750
viewing the details. After the short pause which I give you to pause this video, we'll do it together.

10:06.830 --> 10:08.540
So were you successful?

10:08.540 --> 10:10.070
Let's do it together now.

10:10.070 --> 10:13.340
So we have that first route here already,

10:13.370 --> 10:20.630
now I also want to be able to create new offers and I'll do this with a path of new.

10:20.630 --> 10:24.200
Here you can choose any path you want of course

10:24.200 --> 10:25.900
and again, load children

10:26.060 --> 10:32.720
and then I'll go into the offers folder, then into new offer and then load my new offer module and as

10:32.720 --> 10:35.250
before, make sure you do type or copy

10:35.270 --> 10:38.370
the correct module name otherwise routing will break.

10:38.780 --> 10:44.300
So now after a hashtag, I load the new offer page module.

10:44.390 --> 10:46.160
Now besides that, I'll have two other routes,

10:46.160 --> 10:48.890
the first one is the route for editing,

10:48.890 --> 10:51.840
here I'll have added /placeId.

10:51.980 --> 10:55.010
So that is actually a path that consists of two segments,

10:55.010 --> 11:00.320
the first one is hardcoded but the second one is a dynamic segment because when I added a place, I

11:00.320 --> 11:06.020
need to get its ID and I will pass that ID through the URL.

11:06.020 --> 11:08.000
The rest is not that difficult,

11:08.030 --> 11:15.590
I will lazy load it from the offers folder, added offers.module.ts without ts and then it's the added

11:16.100 --> 11:23.560
offer page module that should be loaded here. And after that, there's one more route to go and that is

11:23.590 --> 11:30.220
just :placeID, that is for the details page where I basically can see all the bookings for

11:30.220 --> 11:30.850
my offer,

11:31.270 --> 11:39.280
so here I'll implement loadChildren ./offer-bookings/offer-bookings.module and then

11:39.280 --> 11:44.300
#OfferBookingsPageModule.

11:44.320 --> 11:47.970
Now one important note, the order here matters,

11:48.030 --> 11:53.860
the hardcoded paths have to go before the ones with the dynamic segments because if you would have

11:53.860 --> 11:59.680
a reverse order, when you go to something like /new and you have :placeId

11:59.680 --> 12:04.270
in front of that, well then new would be treated as a value for placeId

12:04.330 --> 12:05.620
and this route would be loaded

12:05.620 --> 12:12.220
instead of this route, so hardcoded routes first. With that, the routing setup is complete,

12:12.220 --> 12:19.840
now let's pass the routes to router module for child here and then let's import our place routing module

12:19.990 --> 12:21.880
into the places module.

12:21.880 --> 12:26.350
There, we can therefore get rid of that route setup we had in there before, we can get rid of that entire

12:26.350 --> 12:28.860
Angular router import here,

12:30.380 --> 12:33.070
can also get rid of the forms module by the way right now,

12:33.080 --> 12:38.060
we're currently not using forms here and you could delete it for all the other modules too at the moment.

12:38.060 --> 12:43.340
And then here in imports, I'll just import my places routing module and you need to add that import

12:43.340 --> 12:45.110
path here as well.

12:45.110 --> 12:53.800
So now let's save that and let it recompile and then go back to the ionic app here and reload it and

12:53.800 --> 12:55.780
we're not seeing anything, do we?

12:57.320 --> 12:59.280
Well that is because we're using lazy loading,

12:59.310 --> 13:03.140
there's one thing we need to adjust in the places-routing module.

13:03.140 --> 13:11.520
There, we have that big tabs object here in the end where we have all these nested tabs pages,

13:11.870 --> 13:15.770
next to that big tabs path or route object here

13:15.890 --> 13:21.440
you need to add a new route object with a path of empty which is triggered when you're going to just

13:21.440 --> 13:22.030
/places

13:22.070 --> 13:33.950
so to say and there, you should redirect to /places/tabs/discover to start on that discover

13:33.970 --> 13:34.390
page

13:34.410 --> 13:37.550
or of course redirect to another page if you want to start there.

13:37.710 --> 13:43.230
Important here, you need to set path match to full so that this only kicks in if we're really just going

13:43.230 --> 13:47.220
to /places and not to /places/something else

13:47.430 --> 13:54.580
and we need a similar redirection. Actually in here, inside of our tabs,

13:54.600 --> 14:02.700
there we have the rediscover and the offer part, in there you should also add an empty path for cases where

14:02.700 --> 14:06.680
we go to just /places/tabs, there

14:06.750 --> 14:15.120
I also want to redirect to /places/tabs/discover and also set path match to full.

14:15.120 --> 14:18.700
So with these two redirections set up here,

14:18.780 --> 14:23.110
let's now save that and wait for the compilation to finish

14:23.490 --> 14:26.640
and now we can see something. It's still not the final output

14:26.640 --> 14:27.610
I want to have

14:27.690 --> 14:32.300
but we can see that we have the discover page active here and if I go to offers,

14:32.310 --> 14:34.080
we see the offers page.

14:34.290 --> 14:36.210
So that's looking good,

14:36.480 --> 14:42.720
we can also see that lazy loading works if we open a network tab, go back to discover, reload here and

14:42.720 --> 14:44.340
then clear the network log

14:44.340 --> 14:50.540
and now I go to offers, you see that is downloaded separately, so that's lazy loading in action.

14:50.940 --> 14:53.700
But what about that extra navigation bar?

14:53.700 --> 15:00.150
Well the fix is simple. In your places.page.html file where you have your tabs, you should actually

15:00.210 --> 15:01.740
only have your tabs,

15:01.740 --> 15:08.040
so get rid of the ion header and also of ion content and just have ion-tabs in here.

15:09.170 --> 15:14.930
And now with that if you save it, this will reload and we'll get rid of that extra header and this is

15:14.930 --> 15:16.310
now the look and feel

15:16.310 --> 15:20.120
I want to build up on. This is how you can implement tabs in your application.
