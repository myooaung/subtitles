WEBVTT

00:02.580 --> 00:09.240
So this is how we deploy our apps to the app stores which of course is one of the main reasons why you

00:09.240 --> 00:14.400
often use ionic and capacitor but you are not limited to that all the time.

00:14.400 --> 00:19.020
We were testing a web app in the browser so why don't we deploy it as such.

00:19.020 --> 00:20.940
And actually we already got one.

00:20.940 --> 00:28.740
Since we ran energy build prod early end is module we have to w w w folder which holds a web app that

00:29.040 --> 00:35.820
can be used just like that that is ready to be deployed to a web server and actually left me showed

00:35.820 --> 00:38.490
us to you by using firebase.

00:38.490 --> 00:41.760
However I don't just want to publish a regular web app.

00:41.880 --> 00:44.790
I want to publish a progressive web app now.

00:44.850 --> 00:48.090
What turns a web into a progressive web app.

00:48.150 --> 00:49.480
It still is a web app.

00:49.590 --> 00:56.310
It just uses a service worker which can cache certain assets on the front end to serve your app faster

00:56.310 --> 01:03.120
on subsequent requests and in general make your app feel a bit more native like whilst running in the

01:03.120 --> 01:03.960
browser.

01:03.960 --> 01:09.740
You can take my complete progressive web app course if you want to learn all about that exciting technology.

01:10.960 --> 01:14.890
Turning an angular app in a progressive web app is straight forward.

01:14.920 --> 01:23.250
You just run energy add at angular slash P. W8 for progressive web app and this will now configure does

01:23.260 --> 01:29.730
angler project such that it automatically generates such a service worker that is responsible for that

01:29.740 --> 01:35.130
caching and so on and basically sets up everything you need to have a progressive web.

01:35.140 --> 01:38.950
Nothing else needed once all of that is done.

01:39.110 --> 01:45.800
You'll have a GSW config Jason File which allows you to configure that service worker no more information

01:45.800 --> 01:50.150
about that can be found on the official or docs under techniques.

01:50.150 --> 01:55.520
Service workers MP w a dare you'll learn more about what you can configure there and how it works.

01:55.520 --> 02:01.670
This generally sets up which of your assets will be cashed in which way and that caching again will

02:01.670 --> 02:08.420
happen in the browser Once users have visited your page to make subsequent visits faster and potentially

02:08.420 --> 02:10.880
even provide offline support.

02:10.910 --> 02:14.370
Now with all of that added You don't need to change anything.

02:14.420 --> 02:21.290
The defaults are pretty good and you can run energy build dash dash prod again to now build the angular

02:21.290 --> 02:25.080
app again taking this new configuration into account.

02:25.100 --> 02:34.160
Side note of course you can also set a fav icon for example here by adding icons into your assets folder

02:34.190 --> 02:35.620
you get Ganguly right.

02:35.630 --> 02:42.320
I can out of the box you can't replace that fab icon which is the iconic icon and d Android icons here

02:42.440 --> 02:47.870
with your own icons that should have d sizes that are encoded here in the file names.

02:47.870 --> 02:52.470
If you want to have your own icons for your web app as well I will not do it here.

02:52.490 --> 02:56.070
Since it's not really a difficult task just a time consuming one.

02:56.090 --> 03:02.300
Instead let's wait for it is built to finish and let me then show you how you could deploy this to firebase.

03:02.300 --> 03:09.440
Though of course you can deploy it to any static host like AWP s as free or whatever your favorite static

03:09.440 --> 03:15.110
website host is the static host thing is important though since it's a front end driven Web app with

03:15.170 --> 03:23.180
HD Himmel front and JavaScript and CSX only you need no PSP or no J server on the back end you really

03:23.180 --> 03:31.080
need only a host that is capable of serving HDMI all javascript and CSX like firebase hosting or a W

03:31.080 --> 03:32.780
S as free.

03:32.780 --> 03:35.180
So building the project finished.

03:35.180 --> 03:39.610
Now I want to as I mention before deployed US to Firebase but just as an example.

03:39.620 --> 03:45.560
You're not limited to FA base since you already added FA based cloud functions though adding hosting

03:45.560 --> 03:47.230
is particularly easy.

03:47.270 --> 03:53.870
You simply run firebase in it again in your project and we already added functions in the past.

03:53.870 --> 03:56.120
Now we also add hosting here.

03:56.180 --> 03:59.530
So simply check hosting and hit tap.

03:59.610 --> 04:02.490
Now what do you want as your public directory.

04:03.280 --> 04:09.910
Here will use w w w because that is the folder that holds our built assets we want to configure does

04:09.910 --> 04:10.950
as a single page app.

04:10.960 --> 04:12.400
Yes because that's what it is.

04:12.400 --> 04:14.450
So enter a y here.

04:14.560 --> 04:20.740
I don't want to override my ID next time I'll file instead I want to use the one I had and with that

04:23.780 --> 04:31.850
we got this firebase Jason File with some configuration about the the hosting which you should leave

04:31.850 --> 04:34.150
as it is the default should work here.

04:35.000 --> 04:41.450
We can now run firebase deploy here and this will now deploy our cloud function as before but it will

04:41.600 --> 04:46.070
also now deploy our Web app to Firebase hosting.

04:46.070 --> 04:53.100
So let's wait for that to finish and once this is done you see the URL where your app will be hosted

04:53.100 --> 04:53.700
at here.

04:53.740 --> 04:58.030
Of course you can also connect your own domains here if you want to stick to Firebase hosting your official

04:58.030 --> 05:06.460
box tell you more if I enter that domain here into the browser though I see my web app here and obviously

05:06.460 --> 05:11.160
feel free to adjust this styling to whatever you want but this is now our web app.

05:11.200 --> 05:18.460
As we build it throughout this course and as it all runs as a native app but now here in the browser

05:18.640 --> 05:26.950
and it works just as it does on the mobile devices DSD app we built where we can book our events and

05:26.950 --> 05:27.880
so on.

05:27.940 --> 05:29.770
So that is our web app we built.

05:29.770 --> 05:32.920
And you also learned how to deploy this app as a native app.

05:32.930 --> 05:38.620
Therefore I hope you now have all the tools you need to build amazing apps use amazing features and

05:38.620 --> 05:42.550
then of course deploy them to any platform you want to deploy them to.
