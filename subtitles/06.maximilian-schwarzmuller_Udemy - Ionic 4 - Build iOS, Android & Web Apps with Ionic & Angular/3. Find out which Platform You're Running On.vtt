WEBVTT

00:00:01.660 --> 00:00:05.760
In some applications you need to know what your app is running on.

00:00:05.780 --> 00:00:06.590
Is it Iowa.

00:00:06.620 --> 00:00:07.480
Is it Android.

00:00:07.520 --> 00:00:10.120
Maybe you even need more specific information.

00:00:10.130 --> 00:00:12.700
Is it an iPad or an iPhone.

00:00:13.160 --> 00:00:18.920
And that is super easy to find out in ionic too in the app component.

00:00:19.100 --> 00:00:23.160
We already see that there is something in Jack that here the platform.

00:00:23.420 --> 00:00:27.400
And this is of type platform which is imported from ionic angular.

00:00:27.680 --> 00:00:33.020
Now that is exactly what we can use to not only check once the platform has been finished initialising

00:00:33.320 --> 00:00:36.380
but also to get some extra information about the platform.

00:00:36.650 --> 00:00:39.210
And you can do this of course anywhere in your application.

00:00:39.230 --> 00:00:42.950
So I will do it here in the home file and there in the constructor.

00:00:43.020 --> 00:00:47.810
I'll inject the platform here too and bind it to a private property named platform.

00:00:47.930 --> 00:00:52.870
So of type platform which you need to import from ionic Engler.

00:00:53.390 --> 00:00:58.960
And with this I can simply console log this platform.

00:00:59.060 --> 00:01:01.170
And now we get a couple of useful methods.

00:01:01.220 --> 00:01:04.340
The one I'm interested here is platforms.

00:01:04.580 --> 00:01:07.200
Well this Mefford gives us back something.

00:01:07.220 --> 00:01:09.470
Let's have a look at what the something is.

00:01:09.470 --> 00:01:14.450
I own it servers already running here so I'll save this and let it recompile and that's no watch to

00:01:14.450 --> 00:01:15.930
log what we will get.

00:01:16.600 --> 00:01:18.560
See this area here at the very top.

00:01:18.670 --> 00:01:22.340
It's mobile iOS iPhone mobile web.

00:01:22.480 --> 00:01:29.530
So this is what it determined here for my example where I use iPhone 6 as an emulator or a kind of let's

00:01:29.530 --> 00:01:33.560
switch just to the Nexus 5 x and reload this application.

00:01:33.790 --> 00:01:37.570
You now see it's mobile Android phablet mobile web.

00:01:37.810 --> 00:01:40.010
And this is information you can get.

00:01:40.030 --> 00:01:42.010
It always has this structure.

00:01:42.010 --> 00:01:48.180
It starts with the most generic term which is mobile it's a mobile application and it gives you this

00:01:48.190 --> 00:01:53.590
differentiation because theoretically with ionic too you can audible progressive Web app which can run

00:01:53.590 --> 00:01:56.230
them both the Web and the mobile device.

00:01:56.260 --> 00:01:59.440
But here we have a native Apso it clearly is mobile.

00:01:59.440 --> 00:02:01.490
Then we have Android.

00:02:01.690 --> 00:02:05.730
Well that is the operating system of course and that we have phablet.

00:02:05.740 --> 00:02:07.470
So which kind of device is it.

00:02:07.660 --> 00:02:11.170
And then we have mobile Web as an additional category.

00:02:11.170 --> 00:02:14.310
Now you can do more than just print the platforms.

00:02:14.500 --> 00:02:16.590
You can also use that knowledge.

00:02:16.600 --> 00:02:23.150
For example let's say in our home that HDMI file we get three paragraphs here.

00:02:23.170 --> 00:02:25.880
The first one says iOS.

00:02:26.080 --> 00:02:31.180
The second one says iPhone and the third one simply say its Android.

00:02:31.270 --> 00:02:37.060
Now I'm going to get rid of all the content what I want to do is I only want to show the paragraphs

00:02:37.060 --> 00:02:38.860
which are correct.

00:02:38.920 --> 00:02:44.380
So to do this I can now simply use the platform which I inject to your right.

00:02:44.380 --> 00:02:51.610
So I object that this unbounded to this platform property and at N-G is here now I can access this platform

00:02:51.610 --> 00:02:58.540
property and there do more than just platforms I could kind of check of this array holds iOS but there

00:02:58.540 --> 00:03:00.400
also is a not very useful method.

00:03:00.460 --> 00:03:02.120
There is method here.

00:03:02.140 --> 00:03:05.950
We can't pass one of the strings we saw in that array in the console log.

00:03:06.010 --> 00:03:13.480
For example I can check if this is Wes and be sure to write this all lowercase.

00:03:13.600 --> 00:03:17.010
Now on the phone here I will check if it is an iPhone.

00:03:17.050 --> 00:03:21.700
Of course you need to know the possible values this can give you so it's a good thing to check those

00:03:21.700 --> 00:03:28.120
first with the platform's method you see here but this is then how you can utilize this information

00:03:28.390 --> 00:03:30.820
here I'm going to check if it's Android.

00:03:30.820 --> 00:03:36.540
Now let me save this to not only print out information I have but also will adjust what I see in this

00:03:36.550 --> 00:03:39.650
application to show you how powerful this is.

00:03:39.820 --> 00:03:45.880
Because with this you can basically change how your application will behave at runtime depending on

00:03:45.880 --> 00:03:52.780
the device you're using as it can of course not only use this here in your that should be lower case

00:03:52.810 --> 00:03:58.870
P as you can of course is not only used as here in the template to show or hide stuff but anywhere in

00:03:58.870 --> 00:04:03.130
your code you could use the if statement to only run some code.

00:04:03.310 --> 00:04:12.640
If the platform is Iowa for example and here this code would never get executed if you're running this

00:04:12.700 --> 00:04:13.860
on Android.

00:04:13.990 --> 00:04:18.610
So this is how powerful this is and how you might use this