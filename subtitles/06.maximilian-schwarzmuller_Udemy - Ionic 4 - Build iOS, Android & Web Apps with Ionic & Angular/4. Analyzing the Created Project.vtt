
00:02.310 --> 00:07.960
In this project here, as I mentioned, generally we have a normal Angular project.

00:07.980 --> 00:13.560
If you explore the source folder, you will find a main.ts file and in the end here, as you can tell,

00:13.950 --> 00:19.350
we bootstrap a normal Angular app, you find absolutely nothing about Ionic in here,

00:19.350 --> 00:24.380
this is all code you find in any normal Angular web application.

00:24.690 --> 00:27.740
The index.html file also looks pretty normal,

00:27.750 --> 00:34.290
we see the title here says something about Ionic but other than that, it's a normal HTML file

00:34.500 --> 00:37.910
and we do have our app root component in there.

00:38.040 --> 00:45.150
Now I do expect you to know how an Angular application starts, that this app root selector is in the

00:45.150 --> 00:50.240
end picked up by our app module which is the module we bootstrap,

00:50.240 --> 00:55.580
we start our app with and the app module in turn which can be found in the app folder,

00:55.620 --> 01:02.100
this defines that our bootstrapping, our root component is the app component which happens to have this

01:02.100 --> 01:08.430
exact same selector, app root here and therefore, the content of the template of this component will

01:08.430 --> 01:12.440
be rendered in the place of this selector in the index.html file

01:12.680 --> 01:19.530
and this then therefore is mounting our root Angular component to the real DOM and any other component

01:19.530 --> 01:26.130
we include in our template of that root component or in then other components templates will therefore

01:26.130 --> 01:31.680
be mounted onto the DOM as well and will be part of our Angular application.

01:31.680 --> 01:35.560
If that that's something you'd never heard about, definitely learn Angular first,

01:35.580 --> 01:41.420
I do expect this basic knowledge from now on. So this all looks quite familiar,

01:41.500 --> 01:48.320
now one thing that is new is the theme folder and here we're also using SASS or SCSS by default,

01:48.340 --> 01:51.360
though you could do that in a normal Angular app as well.

01:51.460 --> 01:57.700
The theme folder will be important though because here, we see some strange syntax which is actually

01:57.700 --> 02:06.850
a CSS feature heavily used by Ionic, CSS custom properties also known as CSS variables and

02:06.850 --> 02:07.400
in the end,

02:07.450 --> 02:10.990
this is not some hacky new feature offered by Ionic,

02:10.990 --> 02:17.150
this is a standard CSS feature about which you also can learn in my Complete CSS Guide here on Udemy

02:17.710 --> 02:24.160
and it allows you to define your own variables which can hold any kinds of values like colors but you

02:24.160 --> 02:31.330
can also store units, you can store sizes, margins, you can store whatever you want in there and you can

02:31.330 --> 02:37.390
then reuse these variables and assign them in your app to other properties. So somewhere else in the app,

02:37.420 --> 02:43.690
we could set a background color of a div to this variable and it would take whichever color is stored

02:43.690 --> 02:50.380
in this variable. Ionic uses this concept heavily since this makes it easy for us to adjust the global

02:50.380 --> 02:52.100
look of our application,

02:52.120 --> 02:55.800
that however is something I'll come back to in the styling and theming module,

02:55.840 --> 02:58.010
I just wanted to mention it here.

02:58.990 --> 03:04.010
More interesting is of course how this app now interact with Ionic,

03:04.210 --> 03:05.380
how is it connected

03:05.380 --> 03:06.470
exactly?

03:06.550 --> 03:13.420
If we have a look at the angular.json file there, we'll see that if we scroll down a bit, this here is

03:13.420 --> 03:20.530
actually the build set up for our default build we would execute when building our Angular app and there

03:20.530 --> 03:22.700
we do import some assets

03:22.870 --> 03:26.640
and the first interesting thing here is that we see that the ionicons,

03:26.680 --> 03:33.310
so these Ionic icons are included as assets. That of course is not the case in a standard Angular project,

03:33.400 --> 03:40.270
instead Ionic created an Angular project for us where the configuration is already adjusted to include

03:40.300 --> 03:45.760
these icons so that we can use them in our Angular app here.

03:45.760 --> 03:49.000
Now that is the first interesting part,

03:49.000 --> 03:55.960
we also have that ionic.config.json file here which is very simple but in the end, this will allow you

03:55.960 --> 04:01.150
to for example set the app, the identifier of your Ionic app.

04:04.510 --> 04:06.470
In the package.json file,

04:06.490 --> 04:11.790
we of course also see that we have all these Angular imports but then we also have some Ionic imports

04:12.040 --> 04:19.690
and especially interesting is that Ionic Angular import here. We'll find that Ionic Angular package being

04:19.690 --> 04:25.030
used in our app module which is the root module of our Angular app

04:25.030 --> 04:28.110
and there, we generally find default Angular code,

04:28.120 --> 04:30.000
we have our NgModule,

04:30.130 --> 04:31.680
we declare our app component,

04:31.690 --> 04:33.010
we bootstrap it,

04:33.040 --> 04:40.480
we import the browser module but then we also see the Ionic module being used here and we also have

04:40.510 --> 04:48.270
these providers down there which are also not there in a standard normal web app you build with Angular.

04:48.310 --> 04:55.450
Now this is all imported from Ionic and from Ionic Angular specifically, we import that Ionic module

04:55.930 --> 05:04.150
and this Ionic module here in the end as it is included in the app module unlocks all these Ionic components

05:04.240 --> 05:06.310
in our Angular app here.

05:06.310 --> 05:09.280
Now you would of course correctly say, what does it need to unlock,

05:09.280 --> 05:13.510
didn't you say that web components can be used anywhere by default?

05:13.510 --> 05:13.950
Yes

05:13.990 --> 05:16.960
but first of all, we of course need to import them,

05:16.990 --> 05:22.900
we need to import our Ionic package and in the previous sections, we did that by including a CDN link.

05:23.080 --> 05:28.840
Here we will never find this link because there is no CDN link or any other import link,

05:28.900 --> 05:35.890
instead this Ionic module will import the Ionic web components but it will actually do more than that

05:35.890 --> 05:43.330
for us because why do we actually have an Ionic Angular package if Ionic is all about having web components

05:43.360 --> 05:46.360
we can drop into any app by default,

05:46.360 --> 05:51.580
why do we need a separate Ionic Angular package then if it should work with any framework?
