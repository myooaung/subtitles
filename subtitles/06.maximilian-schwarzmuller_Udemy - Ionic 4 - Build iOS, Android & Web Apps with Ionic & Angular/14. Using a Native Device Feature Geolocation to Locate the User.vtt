WEBVTT

00:01.980 --> 00:07.350
I will start with native features on the official documentation page again just to also let you know

00:07.350 --> 00:09.480
where to find more information.

00:09.480 --> 00:12.540
We already had a look at component's API of theming.

00:12.690 --> 00:18.930
Let's now have a look at Native Discovery's native features you can use on your app or on your mobile

00:18.930 --> 00:25.200
device native features or basically features which kind of need a mobile device to work correctly like

00:25.200 --> 00:28.950
the fingerprint sensor or for us interesting right now.

00:29.100 --> 00:35.890
The geolocation so let's scroll down to this part geolocation which is responsible for locating you.

00:36.000 --> 00:37.020
You'll find the command.

00:37.020 --> 00:44.000
You have to run to used as plug in here ionic plug in at coord of a plug in geolocation.

00:44.100 --> 00:50.830
So let's copy this and simply run it here in the command line of our project.

00:50.870 --> 00:58.190
What this will do is it will enable this plug in for us and switch some configurations for example also

00:59.050 --> 01:04.430
request the right permissions and when you then build it for a native device so that your device the

01:04.430 --> 01:09.000
App Store where your publisher apt you also knows which permissions app requires.

01:09.050 --> 01:11.450
So that's all happening behind the scenes here.

01:11.590 --> 01:17.600
And with this tiny command we and able to plug in and you have to enable any native device feature any

01:17.600 --> 01:22.550
plug in you want to use here as you can see there are quite a lot of plug ins you can use and these

01:22.550 --> 01:28.370
are old coord of a plug ins but Iyonix 2 wraps itself around those plug ins.

01:28.400 --> 01:33.470
So you run this ironic plug in at command and then the name of the cord of a plug in this is how it

01:33.470 --> 01:33.980
works.

01:34.010 --> 01:34.730
This is the command.

01:34.730 --> 01:36.070
We just ran.

01:36.110 --> 01:43.090
You can find more information about the specific plug in here on this page and also on the page just

01:43.100 --> 01:44.000
linked here.

01:44.090 --> 01:48.990
So definitely check out this documentation if you're using some of her native feature as you see there

01:48.990 --> 01:53.810
are quite a lot and probably a bit too far to cover them all here though we will have a look at a couple

01:53.810 --> 01:55.800
of avarice in the next pictures too.

01:56.060 --> 02:00.250
Let's start with the geolocation and we also have examples or on how to use it.

02:00.350 --> 02:01.810
And then some detailed documentation.

02:01.820 --> 02:08.030
So that's really great and really something to dive deeper into if you want using geolocation is super

02:08.030 --> 02:08.740
simple though.

02:08.750 --> 02:15.240
So let's do it in the at least typescript file here or in the template let's say let's start here.

02:15.290 --> 02:21.560
Here we not only have our select on map button we also have the locate me button which executes the

02:21.560 --> 02:23.290
on located method.

02:23.330 --> 02:30.500
So I will now implement the on located method here and this should kind of trigger this auto detection

02:30.770 --> 02:33.020
to be able to use this.

02:33.050 --> 02:42.880
I need to import geolocation so I'll do it last year at the top and we import this geolocation like

02:42.880 --> 02:51.150
this one word from and not from ionic angular but from ionic native.

02:51.270 --> 02:52.950
That's a difference.

02:53.200 --> 02:59.500
So import geolocation from ionic native with this we were able to use it here in this typescript file

02:59.980 --> 03:06.230
and then in the on locate Meffert I simply want to fetch my location and it works just like this.

03:06.280 --> 03:09.360
I use geolocation Dipak which I just imported.

03:09.640 --> 03:14.110
And there we have to get current position Meffert let's execute the method.

03:14.140 --> 03:20.980
This method will surprisingly try to fetch our current position and it will return a promise so we can

03:20.980 --> 03:25.600
then listen to this promise or to the result of that promise if it's resolved.

03:25.600 --> 03:33.970
So if it was successful or catch any errors an error might be that we didn't allow to you apt to fetch

03:33.970 --> 03:39.400
our location because even if we request permissions the user is still able to denied us to initiate

03:39.400 --> 03:40.540
this permission right.

03:40.570 --> 03:45.430
So that could be a reason or that there is no TB or life-I equatable.

03:45.430 --> 03:47.270
So there are a couple of reasons why this could fail.

03:47.270 --> 03:54.980
So we definitely need to handle the case that we're not able to fetch our position in this case will

03:55.010 --> 04:01.030
receive an error and we should handle this error to probably show some error message or come back just

04:01.050 --> 04:01.860
a second.

04:01.880 --> 04:06.680
For now I will log it to the console though that of course is not a great way of handling it but we

04:06.680 --> 04:08.390
will improve soon.

04:08.540 --> 04:15.430
And then Meffert we will actually get to the location as an argument so if it was successful and here

04:15.820 --> 04:24.040
I can and simply use this location and we can present this to the console to see which data it involved

04:24.070 --> 04:26.260
or which data it held you can do this.

04:26.530 --> 04:29.980
But I already know that it will have a latitude and longitude.

04:30.220 --> 04:37.350
So I can then said this location led us to the location object we're getting here by the geolocation

04:37.360 --> 04:43.540
plug in there we will have a cord's property and discords property has a couple of Suppe properties

04:43.540 --> 04:49.280
like the accuracy and so on important data you might need but also very importantly the latitude.

04:49.540 --> 04:53.600
And of course the same exists for the Langit long attitude.

04:53.680 --> 04:58.480
So make sure to extract these to the long it you'd like this.

04:58.530 --> 05:04.540
With that we did set our location so we should also set location is set to true because it's an alternative

05:04.540 --> 05:06.100
to manually choosing it.

05:06.460 --> 05:09.070
And with that we do have a location right.

05:09.190 --> 05:11.210
So this is a way of fetching this.

05:11.230 --> 05:13.400
And I'd say let's see it in action.

05:13.600 --> 05:18.190
And even though it is a native device feature that is something which will probably also work in your

05:18.190 --> 05:22.390
browser because your browser is also able to get the location of your machine.

05:22.420 --> 05:24.410
So I'm going to test this in the browser.

05:24.490 --> 05:28.190
No worry will soon see it all run on a native device too.

05:28.510 --> 05:33.400
So let's save it and recompile this application and then go back to a running app.

05:33.730 --> 05:35.610
And here I will hit locate me

05:39.730 --> 05:42.760
and after a couple of seconds the location appears here.

05:42.760 --> 05:47.830
Now I actually faked this a bit and changed the location behind the scenes because I don't want to expose

05:47.830 --> 05:49.270
my living place.

05:49.270 --> 05:51.470
It's in the same city at least in Berlin.

05:51.640 --> 05:55.910
So this is now the location which was chosen by the geolocation plug in.

05:56.020 --> 06:00.910
And you may have seen that it took a couple of seconds to get this location so we can definitely improve

06:00.910 --> 06:06.370
the user experience by showing some loading Ike and something which indicates that something is happening

06:06.370 --> 06:06.880
here.

06:07.030 --> 06:08.430
So let's do this next.

06:08.470 --> 06:14.920
But it's great to see that education is already working and with this and as a super importer stand

06:15.310 --> 06:20.730
we implemented our first native device feature even though it runs on the browser here too.

06:20.740 --> 06:28.150
But again it's a feature which uses some of our native device features like CPS or life-I and it just

06:28.150 --> 06:34.560
happens to be the case that our browser our PC is also able to utilize some of those features.
