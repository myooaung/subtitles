WEBVTT

00:02.230 --> 00:11.240
Let's start with the browser app which is a bit easier and there, we can for example already get our

00:11.240 --> 00:17.210
first issue when I delete an item and then I go back to this page here.

00:17.210 --> 00:21.690
Now obviously the issue is that I can still go there, that even though I deleted the item,

00:21.860 --> 00:25.970
it still is there in my recipes page,

00:26.000 --> 00:27.910
so where I lists all my recipes.

00:28.010 --> 00:30.660
Now this error is here on purpose,

00:30.830 --> 00:37.550
I didn't fix it here because we will dive way deeper into advanced apps and the state management with

00:37.550 --> 00:45.860
Angular later and this specifically has also to do with how navigation and page reusage works in

00:46.100 --> 00:50.290
Ionic and that is something I'll dive into in the routing and navigation module.

00:50.750 --> 00:56.960
So this is a perfect use case to see how we can debug this error and find out what's wrong.

00:57.050 --> 01:03.050
One of the easiest things you can do when you're encountering strange behaviors or problems is if you

01:03.050 --> 01:09.410
get an error message, read it, a lot of the error messages are actually helpful and you can at least copy

01:09.410 --> 01:11.580
and paste the error and put it into Google

01:11.630 --> 01:16.340
and often you will find solutions or hints or ideas on what's wrong there,

01:16.430 --> 01:21.830
so don't get scared if you see an error message, read it. If you don't get an error message or you've

01:21.830 --> 01:26.400
got one but you need to investigate a bit further, you can do that

01:26.450 --> 01:31.170
and one of the easiest things you can do in that case is throw in a console log

01:31.370 --> 01:38.720
and here, our problem seems to be that after I deleted this, I still have the spaghetti here in my list

01:38.720 --> 01:39.790
on the recipes page.

01:40.550 --> 01:46.130
So why don't we go into our recipes page and there where I load my recipes, where I seem to load them

01:46.130 --> 01:53.000
incorrectly, we can throw in a console log statement and yes, console log debugging is not something you'll

01:53.000 --> 01:55.580
win a lot of hearts or fans with

01:55.580 --> 02:00.110
but for quick checks, it is a great tool and I would absolutely use it.

02:00.140 --> 02:03.530
I'll dive into advanced debugging tools later too, no worries.

02:03.530 --> 02:10.340
So now I'm logging the content of this recipes in ngOnInit of the recipes page. If we now reload this

02:10.340 --> 02:17.250
app here, we see the output here, we see our array with the two recipes and that makes sense because when

02:17.340 --> 02:23.400
you reload, the data's there because right now, we have no logic to save our changes to a server or anything

02:23.400 --> 02:24.360
like that.

02:24.570 --> 02:26.280
If I now go to my spaghetti,

02:26.280 --> 02:32.760
obviously it's there and if I now delete my spaghetti, I'm back on the recipes page and this is our old

02:32.760 --> 02:40.350
console log, we don't see a new one and this indirectly already tells us what's wrong here. Since we don't

02:40.350 --> 02:43.230
get another log here,

02:43.320 --> 02:49.980
we kind of seem to be in a situation where ngOnInit doesn't execute again and indeed, it doesn't.

02:50.120 --> 02:56.400
Now the detailed reasons for this will be taught in the navigation routing section, basically Ionic

02:56.410 --> 03:03.170
caches this page and doesn't recreate it when you move to another page and come back and therefore

03:03.180 --> 03:09.130
ngOnInit doesn't execute again and therefore we don't fetch or update the recipes from the recipe

03:09.130 --> 03:09.620
service,

03:09.630 --> 03:10.850
that's the problem.

03:11.070 --> 03:17.280
And this is something we can identify or narrow down with this single console log statement because

03:17.280 --> 03:19.890
we can clearly see this does not execute again,

03:19.890 --> 03:21.620
something has to be wrong there,

03:21.660 --> 03:28.040
why could this not execute again and then we can find out because you learned it in this course or you'll

03:28.040 --> 03:33.560
find it in the official docs that Ionic does cache pages and you have your reason,

03:33.630 --> 03:40.290
now you would need to change your code such that you set up a subscription to recipes and get notified

03:40.320 --> 03:42.210
when they change the service.

03:42.210 --> 03:43.400
Feel free to do that,

03:43.410 --> 03:49.090
it is a pattern we'll implement later in our main course project. So console log,

03:49.090 --> 03:55.630
a nice tool but sometimes it's not enough or you need deeper insights, you want to dive into the exact

03:55.870 --> 04:00.300
flow of logic in your application and that is possible as well.
