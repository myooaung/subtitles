WEBVTT

00:02.680 --> 00:12.250
Now one core idea that is built into Angular the framework is that we build our application with so-called

00:12.280 --> 00:13.480
components

00:13.600 --> 00:15.220
and what does this mean?

00:15.220 --> 00:18.030
Well let's have a look at a web page,

00:18.040 --> 00:25.420
how it could look like. Let's say we have a page which has a header, maybe a side navigation bar and then

00:25.420 --> 00:28.190
maybe an area with a couple of list items

00:28.360 --> 00:34.930
and obviously, you will find many pages that have a pattern like this or some related pattern.

00:34.930 --> 00:43.570
Now clearly, we can think of all these pieces as individual components which we then take to compose

00:43.630 --> 00:45.600
a rich user interface.

00:45.640 --> 00:47.500
We have a header component,

00:47.560 --> 00:49.750
we have a side nav component,

00:49.750 --> 00:54.000
we have our list item components and on the list item component,

00:54.010 --> 01:00.910
we can already see one advantage of thinking in components, if we build such components with Angular and

01:00.910 --> 01:04.260
I will show you how to do that with Angular in a second,

01:04.360 --> 01:11.950
then we only need to set up the general logic and the look for such a list item once and we can reuse

01:11.950 --> 01:13.090
it in our application,

01:13.090 --> 01:19.600
like on this screen where I use it four times and that's the idea behind component driven development.

01:19.600 --> 01:25.450
We see that in a lot of frameworks and a lot of tools and Angular is no exception,

01:25.450 --> 01:32.980
there we think in components too because it allows us to reuse code and define logic once and then use

01:32.980 --> 01:35.110
it as often as we want to.
