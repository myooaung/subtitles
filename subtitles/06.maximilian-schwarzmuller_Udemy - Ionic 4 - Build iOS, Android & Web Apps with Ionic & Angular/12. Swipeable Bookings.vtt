WEBVTT

00:02.580 --> 00:07.110
I did mention that I also want to have swipeable items on the bookings page.

00:07.170 --> 00:12.960
Right now, the bookings page of course is empty because we have no way of managing bookings, we'll not

00:12.960 --> 00:16.400
really add the entire logic to manage them here either

00:16.650 --> 00:24.180
but we can already get started with a little bit of bookings logic. And for that, I will add two things

00:24.190 --> 00:26.640
and the first one is a booking model,

00:26.640 --> 00:33.480
so a booking.model.ts file so that we can basically define how a booking object should look like

00:33.600 --> 00:40.770
in our application and for that, I'll export a class named booking here and that class will have a constructor

00:40.770 --> 00:46.980
where I now set up all the properties of this class and which are then also settable through the constructor

00:48.600 --> 00:55.050
and for example, a booking should have an ID which will be of type string, a booking should have a place

00:55.050 --> 01:02.160
ID because every booking relates to a place of course. A booking will also have a user ID because a

01:02.160 --> 01:09.270
booking also relates to a user, a booking will also have more fields than just that, for example

01:09.280 --> 01:14.940
also the title of the place which was booked and you could of course also embed the entire place

01:15.030 --> 01:20.010
as an object here if you wanted to but I don't need all the place data, just some selected data

01:20.040 --> 01:25.500
which is why I'm adding it as extra information and we can also add extra user data.

01:25.530 --> 01:32.130
So for example, you can also add the guest number which would be of type number to find out how many

01:32.130 --> 01:38.280
people will be attending or want to stay at this place for the selected time. And the selected

01:38.280 --> 01:39.460
time is missing still,

01:39.460 --> 01:45.810
that is something we'll add later once we add the user input fields.

01:45.810 --> 01:50.610
So that is how a booking could look like and how we will continue working with it, we'll actually add

01:50.610 --> 01:51.960
more fields throughout the course

01:51.960 --> 01:53.840
but that's a good starting point.

01:53.880 --> 02:00.150
Now next to the booking model, I'll add a booking service file and thus far, we always created that with

02:00.150 --> 02:00.830
the CLI,

02:00.900 --> 02:06.600
you can still do that but of course creating it manually is also not that difficult.

02:06.600 --> 02:18.100
You export a class, you add @injectable and there, you should add providedIn root so that it is automatically

02:18.100 --> 02:18.700
provided

02:18.700 --> 02:24.220
application-wide and you can inject it anywhere. In here,

02:24.220 --> 02:31.060
I now want to have my bookings, so for that, I'll add a private property, bookings which is of type booking

02:31.340 --> 02:37.540
array and for that, you need to import a reference to your booking model,

02:37.570 --> 02:46.210
so import booking from that booking.model file without the file extension and I will add a getter

02:46.210 --> 02:46.940
here,

02:47.140 --> 02:59.680
bookings, here I'm missing a G and the that will simply be returning a copy of this bookings, like

02:59.680 --> 03:00.350
that.

03:00.370 --> 03:07.960
So now we have that array but of course it's empty, so let me pre-populate it with some dummy bookings for

03:07.960 --> 03:09.230
the time being

03:09.400 --> 03:12.190
and then I have some ID here.

03:12.190 --> 03:17.260
I have a place ID like p1 let's say, then we have the place title,

03:17.260 --> 03:20.280
that was the Manhattan Mansion,

03:20.290 --> 03:22.940
you can of course add any data you want here.

03:23.140 --> 03:25.300
Guest number let's say is 2

03:25.480 --> 03:33.760
and we also have a user ID here of ABC, so only one booking for the time being, it's only dummy data

03:33.780 --> 03:39.740
so that will do. In the bookings.page.ts file, we now need that booking data

03:39.750 --> 03:50.620
obviously. So in there in the constructor, I'll inject the bookings service which is of type bookings service

03:50.620 --> 04:00.200
and for that to work, we need to import the bookings, not page, the bookings service from 

04:00.230 --> 04:07.630
./bookings.service, I'll name it differently in there, let's name it booking service.

04:07.840 --> 04:09.120
Let me actually,

04:09.190 --> 04:13.960
yes since the file is named as such, I'll also rename it here, booking service,

04:13.960 --> 04:16.570
you could name it bookings service of course

04:16.570 --> 04:24.950
and with that injected, in my bookings page here, I also want to have my let's say my loaded bookings

04:24.950 --> 04:29.780
to not confuse the names which is also an array of bookings,

04:29.810 --> 04:35.300
so make sure to import your booking model reference at the top as well and in ngOnInit,

04:35.330 --> 04:42.830
I can set this loaded bookings equal to this booking service bookings and that will import my dummy

04:42.830 --> 04:44.970
bookings of which I only have one.

04:45.140 --> 04:50.990
Now definitely feel free to pause the video here and output these bookings in your template with any of

04:50.990 --> 04:56.250
the information you have and you want and thereafter, we'll do that together.

04:58.500 --> 04:59.620
Were you successful?

04:59.700 --> 05:05.320
Let's output it together in the bookings page and for that in here,

05:05.320 --> 05:07.450
you can get rid of the padding on the content,

05:07.450 --> 05:12.130
I'll leave it here for now and I'll output an ion-list here and in that ion-list,

05:12.190 --> 05:18.310
I'll have my ion-item but we want to make these items swipeable, right?

05:18.340 --> 05:25.600
So for that, we add ion-item-sliding and the ion-item actually goes in there.

05:25.620 --> 05:30.300
Now it's the ion-item-sliding which we want to repeat for all our booking data,

05:30.300 --> 05:39.860
so the idea is to here add ngFor and then simply go through all the bookings of loadedBookings

05:39.900 --> 05:46.050
here and that gives us all the data for a single booking on that booking property which we

05:46.050 --> 05:48.620
can now output in the ion-item.

05:48.690 --> 05:55.250
Now there, we could output the image of that place if we would store that in the booking service,

05:55.530 --> 05:57.110
at the moment I'm not doing that yet,

05:57.120 --> 05:59.550
so let's not output it, I guess.

05:59.550 --> 06:05.310
Instead I'll just add an ion-label because I'll actually wrap two things here,

06:05.310 --> 06:15.920
I'll have let's say a h5 tag to have a tiny header where I want to output my booking place

06:16.030 --> 06:23.540
title and below that, a paragraph where I want to output the number of guests and

06:23.640 --> 06:31.050
that is also a dynamic value because on a booking, we have that guest number property on our booking model.

06:33.520 --> 06:34.120
With that

06:34.120 --> 06:42.720
if you save that and you then go to your bookings, you see that one booking here.

06:42.800 --> 06:45.740
Now obviously on a desktop device, it's way too large

06:45.740 --> 06:53.420
as you can tell. So as a first step before I continue making this swipeable, let's add an ion-grid here

06:53.750 --> 06:58.010
and of course always feel free to pause the video and then try this on your own,

06:58.010 --> 07:06.330
make sure that this is not as wide on bigger screens but takes the full width on smaller screens. I'll

07:06.330 --> 07:15.810
achieve this here by adding an ion-column and of course, I'll move that list into that column now, like

07:15.810 --> 07:16.420
this

07:16.500 --> 07:22.740
and on the column, the default is size twelve, right, which will automatically take the full width. Now

07:22.800 --> 07:29.830
I want to make sure that on medium sized and bigger devices, I'm only taking six columns and therefore

07:29.830 --> 07:31.500
to make this centered,

07:31.500 --> 07:37.800
I'll offset this on medium-sized devices on bigger by three columns, so that we start after three

07:37.800 --> 07:38.420
columns,

07:38.460 --> 07:43.610
then we take six columns and then since we have 12 columns overall, we have three columns left

07:43.650 --> 07:48.960
making this perfectly centered and therefore now when we save this, we should have a list which looks

07:48.960 --> 07:55.290
much nicer and is centered only on bigger screens. On smaller screens like this mobile device here, we

07:55.290 --> 08:01.290
still see it in the middle and we just got some normal padding which is introduced by the grid and by

08:01.290 --> 08:06.460
this padding attribute here on the content which you can remove of course.

08:06.560 --> 08:10.640
Now one thing is missing at the moment though, I added ion-item-sliding

08:10.940 --> 08:12.790
but what is missing?

08:12.830 --> 08:20.340
Well the options, the actual buttons. For this, you can add ion-item-options here and in there, you

08:20.340 --> 08:23.030
have your ion-item-option elements

08:23.340 --> 08:29.610
and I only need one option here and I'll give that option a colour of danger because we'll delete the

08:29.610 --> 08:32.090
item with it and I'll say cancel.

08:32.250 --> 08:35.460
And of course you could also render a trash bin icon,

08:35.550 --> 08:41.580
so you could also enter ion-icon with the name of trash, that should be a nice trash bin and give

08:41.580 --> 08:46.920
it a slot of icon-only. So whatever you like, text or icon or both combined.

08:49.940 --> 08:58.110
The missing piece is that we now add a click listener, onCancelBooking and there, I'll forward the booking

08:58.110 --> 08:58.670
ID

08:58.980 --> 09:00.720
and what else?

09:00.720 --> 09:05.170
Well to close the item, a reference to the ion-item-sliding element.

09:05.220 --> 09:11.610
So here I'll add my sliding booking, whatever you want to name it and pass this as a second argument

09:11.640 --> 09:17.990
to onCancelBooking and onCancelBooking is now simply a method you can add to your bookings.page.ts

09:18.000 --> 09:24.980
file where the first argument will be the offerId of type string and

09:25.120 --> 09:33.050
the second element will be a reference to the sliding element which is of type ion-item-sliding

09:33.070 --> 09:38.070
and ion-item-sliding needs to be imported from @ionic/angular.

09:40.800 --> 09:52.710
That allows us to again call slidingEl.close and then here, we can cancel booking with ID offerId

09:52.710 --> 09:55.050
and that's all I'll do for now,

09:55.050 --> 10:00.780
so not too useful because we're missing other basic features that would allow us to dynamically add bookings

10:00.780 --> 10:05.050
and so on. So with that, reloaded here is the trash bin

10:05.050 --> 10:09.820
and when I click it for now, it only closes, later we'll actually delete that item.
