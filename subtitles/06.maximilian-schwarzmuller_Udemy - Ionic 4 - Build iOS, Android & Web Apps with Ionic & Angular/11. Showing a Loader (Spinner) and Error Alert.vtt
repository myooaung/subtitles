WEBVTT

00:02.010 --> 00:06.010
In the last lecture we successfully add it to sign up functionality.

00:06.030 --> 00:08.810
Now want to add some fine tuning to this Meffert.

00:08.910 --> 00:14.790
It would be nice to see some spinner whilst we're waiting for the response and turns out ionic tube

00:14.850 --> 00:18.030
has a fitting component for this.

00:18.030 --> 00:22.890
This component is called loading or loading controller to be precise.

00:22.890 --> 00:24.570
So let's inject that here.

00:24.600 --> 00:31.570
Let's inject the loading controller and important the type is loading controller.

00:31.590 --> 00:39.950
Make sure to import that from ionic and ular and the loading compute controller allows us to create

00:40.040 --> 00:44.880
like a dialogue with this spinner in the middle which will automatically disappear.

00:44.990 --> 00:47.420
Once we want to tell it to disappear.

00:47.420 --> 00:56.660
So once our Prose's taking up sometime is finished I'm creating a new loading dialog by simply calling

00:56.660 --> 00:58.570
this loading control to create.

00:58.610 --> 00:59.990
So does this common pattern.

00:59.990 --> 01:04.020
You probably know by now and I'm starting them in a constant loading.

01:04.250 --> 01:08.600
And this takes as always a challenge to Optik reconfigure it.

01:08.720 --> 01:10.350
Now does loading overlay.

01:10.360 --> 01:12.550
It's really simple to configure.

01:12.590 --> 01:16.280
We simply enter content here which is the text you want to display.

01:16.340 --> 01:22.160
For example signing you up would be a fitting text here because this is what we're trying to do.

01:22.430 --> 01:28.700
Well and then we can for centers loading overlay this dialog because we're in the on site method and

01:28.700 --> 01:34.320
we want to presenter's as soon as this method is triggered as soon as the submit button was pressed.

01:34.370 --> 01:40.460
Of course right now we will never detached as loading overlay though we will never dismiss it.

01:40.490 --> 01:47.410
Now we want to dismiss it in the then or in the success and then the error case.

01:47.470 --> 01:50.130
So let's start with the success case here.

01:50.410 --> 01:58.030
I will remove this console lock statement and instead I want to say loading dismiss.

01:58.050 --> 02:05.310
So this is just like how we dismiss a model this works the same for this loading element here because

02:05.460 --> 02:10.450
it is a view in the end which we can always dismiss rudes View Controller.

02:10.500 --> 02:12.990
Now that's one thing I want to do.

02:13.200 --> 02:20.220
And the other thing I want to do is I wanna go to the catch method where we catch any error at all to

02:20.220 --> 02:22.120
get rid of the error message here.

02:22.340 --> 02:26.190
All dismiss the loading overlay.

02:26.340 --> 02:30.270
And here I actually want to show an alert if we did get an error.

02:30.510 --> 02:39.480
So I'm going to create an alert here and for this of course we need the alert controller so alert controllers

02:39.480 --> 02:45.420
should be inject that here make sure to import this from ionic angular and we learn how to configure

02:45.420 --> 02:46.570
an alert before.

02:46.620 --> 02:49.550
So definitely try doing this on your own.

02:49.590 --> 02:54.690
We use the alert controller together to create Mefford and then we have a Charvis could object configuring

02:54.700 --> 02:55.510
does alert.

02:55.560 --> 03:02.420
And here I simply want to show a title whereas say sign up failed and then a message.

03:02.410 --> 03:06.560
Now the cool thing is this error also included a message.

03:06.580 --> 03:10.130
Do you remember just from the last lecture when I showed you this console log.

03:10.480 --> 03:17.200
So we can simply say error and then message because it will have this message property.

03:17.200 --> 03:20.890
This is how we can display our error message.

03:20.900 --> 03:28.480
Now Dan I also want to add some buttons or one button to be precise where I simply say OK.

03:28.570 --> 03:30.690
And I don't need to configure this for you.

03:30.710 --> 03:35.980
Chalis object because I only have one button and I should simply dismiss the alert which is the default

03:36.040 --> 03:36.970
action.

03:37.450 --> 03:44.000
So with that I can then presenter's alert to inform the user about any error which might have occurred.

03:44.410 --> 03:50.770
And with this we can save our application read it let it recompile and then view it in the browser again

03:50.920 --> 03:52.390
to see what changed.

03:52.390 --> 03:54.710
So let's go to the sign up page here again.

03:55.090 --> 04:01.120
Let's enter dis And this is valid here in my case because I deleted this user so let's hit sign up we

04:01.120 --> 04:03.300
see the loader it disappears once we're done.

04:03.310 --> 04:04.930
We don't see a success message.

04:04.960 --> 04:08.760
We will work on this later and make something happen when we successfully signed in.

04:08.760 --> 04:14.290
Now if I press sign up a second time now you see here's the alert with the error message.

04:14.290 --> 04:16.780
So this is a much nicer number for us.

04:16.810 --> 04:20.490
We get a basic sign up functionality in place.

04:20.500 --> 04:22.110
We're able to create users.

04:22.300 --> 04:31.240
The next step of course is to give us a way of signing in users before we can then dive into kind of

04:31.360 --> 04:35.380
splitting our app into two pieces and protecting the.

04:35.410 --> 04:39.430
You have to be authenticated part from unauthenticated access
