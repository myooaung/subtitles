WEBVTT

00:02.310 --> 00:09.920
To conclude this section in a section on lists and list items and the things you can do there,

00:09.960 --> 00:15.810
let's look at one other important topic related to lists and that is virtual scrolling for which

00:15.810 --> 00:18.870
we have a separate component in Ionic.

00:19.170 --> 00:21.510
Now what is virtual scrolling?

00:21.540 --> 00:27.510
Consider a list with a couple of list items, now if your viewing this on a device, no matter if it is

00:27.600 --> 00:31.500
a desktop, PC or a mobile phone or a tablet,

00:31.500 --> 00:36.270
you will have a certain viewport which is basically the visible area of your app,

00:36.270 --> 00:41.880
so this for example of course could be a landscape phone here or a desktop.

00:41.880 --> 00:46.320
And what we can see here is that we only see a few of these list items right,

00:46.320 --> 00:48.540
we don't see all list items here,

00:48.540 --> 00:53.670
there are certain list items which simply are not visible at the moment because they're not inside of

00:53.670 --> 01:00.970
our current viewport. Now by default when rendering items with ngFor, they're always there,

01:01.000 --> 01:06.550
no matter if we see them or not they're on the page and when we scroll down, we can then see them but

01:06.550 --> 01:09.730
they're there even if we're not scrolling there.

01:09.820 --> 01:17.370
So they are rendered, they are managed all the time. As you might imagine for longer lists,

01:17.400 --> 01:24.660
this can be quite performance intensive especially on mobile devices and there especially on

01:24.780 --> 01:28.060
mobile devices, that might not be that powerful.

01:28.230 --> 01:33.240
Obviously I'm talking about very long lists here, I'm not talking about 20 list items or anything like

01:33.240 --> 01:39.120
that but if you got a list with a couple of hundred items, then it really could hurt if you're rendering

01:39.120 --> 01:42.010
all these items, no matter if they're visible or not.

01:42.090 --> 01:45.750
The concept of virtual scrolling helps there, there

01:46.320 --> 01:54.480
you basically don't render items that are far away from being visible and far away is actually a quite

01:54.480 --> 01:55.220
heavy term,

01:55.230 --> 02:01.300
with that I mean items that are let's say three or four items away from your viewport.

02:01.470 --> 02:04.060
You also have certain items which are a kind of pre-rendered,

02:04.080 --> 02:10.110
so they are fully rendered even though they're not visible yet but you're likely to scroll to them soon

02:10.140 --> 02:15.720
because they're close to your viewport and therefore they are rendered so that when you do scroll down,

02:15.720 --> 02:22.620
they are already there and you don't see them pop in. And then whenever you scroll, items that are not

02:22.620 --> 02:30.000
visible are basically removed and items that are visible are added and they are added in advance to

02:30.000 --> 02:37.500
provide smooth scrolling and to not hit the DOM too much and render and remove too many items at the

02:37.500 --> 02:46.000
same time, the items that are getting invisible, so you're scrolling away from will actually be reused.

02:46.050 --> 02:51.750
So if you're scrolling down, then the list item which is right now still visible, the moment it gets

02:51.750 --> 02:57.840
invisible, it can get reused which means only its content is swapped and it's attached at the bottom

02:57.840 --> 03:03.780
of the list again, so that when you're scrolling down, you're seeing that same item that already was rendered

03:03.780 --> 03:05.760
before but with new content

03:05.850 --> 03:11.670
and this is simply done to not re-render new items all the time but reuse the items that already were

03:11.730 --> 03:12.430
rendered.

03:12.450 --> 03:18.900
So overall, it's a performance optimization which can actually be a disadvantage if you use it on very

03:18.900 --> 03:25.020
short lists because then you have all that extra logic running behind the scenes that checks whether

03:25.020 --> 03:28.390
you're scrolling and what items need to be changed,

03:28.770 --> 03:33.960
then you've got this extra logic and you might not benefit that much because your list isn't that long

03:34.170 --> 03:40.620
but the longer your list is or especially if you have long lists of unpredictable length, so where you

03:40.620 --> 03:47.180
don't know if it'll be 50 or 100 items long, then virtual scrolling can really be helpful.

03:47.190 --> 03:48.240
Let's see it in practice.
