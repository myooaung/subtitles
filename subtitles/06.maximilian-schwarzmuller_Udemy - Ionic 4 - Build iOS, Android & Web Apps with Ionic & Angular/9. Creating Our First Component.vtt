WEBVTT

00:02.190 --> 00:09.090
Now that we had a detailed tour through how Angular works and starts, let's start building our own components

00:09.620 --> 00:17.010
and we can do this by, in the app folder in the source folder, adding a new component file.

00:17.070 --> 00:21.510
Now we could do this right here or store the separate sub-folder,

00:21.510 --> 00:26.840
I will actually create a sub-folder and name it persons and that name is totally up to you but I want

00:26.840 --> 00:28.710
to create a persons component.

00:28.740 --> 00:34.430
Now you can name this file however you want but the naming convention is to have the name of your component,

00:34.530 --> 00:40.250
then .component and then .ts and in there,

00:40.300 --> 00:45.720
we now export a class which you also typically name persons component.

00:45.760 --> 00:53.230
So first the name of your component with a capital starting character and then also with a capital starting

00:53.230 --> 00:53.700
character

00:53.730 --> 01:01.750
but in the same word, component. Now here again to tell Angular that this class should be treated as a

01:01.750 --> 01:02.680
component,

01:02.860 --> 01:06.060
we add the @component decorator

01:06.050 --> 01:11.950
and here my IDE added the import automatically but you need to make sure that you do add it as well.

01:11.950 --> 01:14.920
You need to add it in every file where you use this,

01:14.920 --> 01:19.690
so just because you are already important component here doesn't mean you don't have to import it here

01:19.690 --> 01:20.370
anymore.

01:20.380 --> 01:26.500
Every file works on its own and every dependency of that file, so every object or class you're using

01:26.500 --> 01:30.780
from another file needs to be imported into this file.

01:30.790 --> 01:32.920
Now we definitely need a selector here,

01:32.920 --> 01:39.520
so our own tag by which we can use that. Now you're relatively free regarding the naming but it should

01:39.520 --> 01:41.220
be a name with a dash in it

01:41.500 --> 01:48.820
so that you have something like app something or my something, so that you're not clashing with default

01:48.820 --> 01:57.080
names, like h1. So I will name it app-persons and that is kind of the convention, you use app- as your

01:57.080 --> 02:00.320
prefix and then again your component name.

02:00.590 --> 02:08.570
Now I also will add a template URL and point at ./ to construct a relative path, 

02:08.810 --> 02:11.680
./persons.component.html.

02:11.960 --> 02:13.850
Now that file doesn't exist yet,

02:13.970 --> 02:16.670
so let's add a persons.component.html

02:16.670 --> 02:24.230
file next to the persons.component.ts file and there, I'll add a paragraph where I simply

02:24.230 --> 02:30.410
say some persons, nothing fancy but it'll do for now. Now

02:30.410 --> 02:38.060
last but not least, let's save these files and now we need to register this component in our module or

02:38.150 --> 02:40.140
in some Angular module.

02:40.190 --> 02:47.450
Now let's use the app module for now and let's add an import here at the top where I import persons component

02:47.960 --> 02:54.140
and you have to make sure that the name you use here matches your class name you used here, so persons

02:54.140 --> 03:02.400
component from and then you point at your file and this has to be a relative path,

03:02.920 --> 03:08.350
so ./ and then it's in the persons sub-folder and there persons component,

03:08.470 --> 03:13.640
again without .ts, that is added automatically for you.

03:13.750 --> 03:20.650
Now we add it to declarations because we have to declare all the components we are using in this module.

03:21.430 --> 03:26.230
We don't add it to Bootstrap because you only add your root component here,

03:26.230 --> 03:32.820
the question then of course is, where will Angular look for the selector of this component then?

03:32.840 --> 03:40.360
And the answer is in all other components of this declaration list here basically. So we can go to the

03:40.450 --> 03:44.770
app.component.html file and delete all the default code in there

03:44.920 --> 03:55.420
and now add app-persons as an HTML tag. And if you now save that all, you will see that if

03:55.420 --> 04:02.110
you go back to your browser, you see some persons here and that of course is the content of your own

04:02.230 --> 04:03.550
persons component.
