WEBVTT

00:02.590 --> 00:07.120
In cases where console log statement is not enough and you need deeper insights, you want to really

00:07.120 --> 00:09.170
dig into your application,

00:09.430 --> 00:17.890
in such cases you can use the Chrome developer tools. There under sources, you find your source code.

00:17.890 --> 00:20.590
Now the place where you find it can differ,

00:20.590 --> 00:24.110
you should find it here under webpack in this .folder,

00:24.160 --> 00:29.680
there is a source file and in there you find your actual Typescript files even, thanks to a concept called

00:29.680 --> 00:31.360
source maps.

00:31.360 --> 00:37.870
Now here, we could dive into the recipes folder and through the recipes.page.ts file and you

00:37.870 --> 00:41.860
can now set a breakpoint here in the Chrome dev tools.

00:41.860 --> 00:48.440
Now this means that when I now reload this page, code execution will actually stop

00:48.440 --> 00:54.530
as you can see and it stops in this line where I place the breakpoint and there, you can now inspect what's

00:54.530 --> 00:55.610
inside of this,

00:55.610 --> 01:00.410
so what does this refer to and what's inside my recipe service.

01:00.470 --> 01:00.760
Ok and

01:00.800 --> 01:07.550
there we have this array of two recipes and what is the result of getRecipes which is therefore stored

01:07.550 --> 01:09.200
in these recipes?

01:09.200 --> 01:14.270
Well let's move on to the next line, so that this line gets executed. You can move through the code with

01:14.270 --> 01:17.510
the controls down there and step into, what

01:17.510 --> 01:20.060
now? Step into the getAllRecipes

01:20.060 --> 01:27.150
function, if I click that, we are now in getAllRecipes and now we're in the service and can inspect that too.

01:27.990 --> 01:31.740
Step out, goes back and goes into the new line here.

01:31.740 --> 01:36.780
Now we load the recipes and we can inspect our recipes here and we see OK, we got the schnitzel and so

01:36.780 --> 01:37.620
on.

01:37.620 --> 01:43.650
Now once you got the information, you want you can press the play button here and code execution continues.

01:43.650 --> 01:51.510
Now we can again go here, delete that and go back and oh here again, we notice this never executes again,

01:51.720 --> 01:55.500
otherwise you would have paused because the breakpoint is still there.

01:55.500 --> 02:01.380
So this is the extra insight we can get and with breakpoints, you can of course inspect everything in

02:01.380 --> 02:02.690
your code here.

02:02.760 --> 02:07.950
Now the Chrome developer tools by the way are very powerful and therefore in the last lecture of this

02:07.950 --> 02:14.400
module, you'll find additional resources where you can dive way deeper into these dev tools to get the most

02:14.400 --> 02:15.230
out of them,

02:15.240 --> 02:21.600
I'm only showing the basics here in this module, I'll not dive into every single feature you can use.

02:21.680 --> 02:25.420
So this is how we can use breakpoints and console log,

02:25.430 --> 02:26.240
what else can we do,

02:26.240 --> 02:28.490
how else could we debug our application?
