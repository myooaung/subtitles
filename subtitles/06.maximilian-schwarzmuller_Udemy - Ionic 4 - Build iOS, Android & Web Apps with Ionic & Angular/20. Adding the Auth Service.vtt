WEBVTT

00:02.160 --> 00:03.950
We're nearing the end of this module.

00:03.990 --> 00:09.030
Obviously a lot of functionality of this application is still missing but this module is about the

00:09.030 --> 00:12.700
routing, we'll add the functionality step-by-step throughout the course.

00:12.720 --> 00:17.270
One thing that is still missing though is the authentication page, when I tap logout here,

00:17.280 --> 00:22.590
I actually want to go to that authentication page and I already want to have some dummy authentication

00:22.590 --> 00:29.760
flow here where I can't really authenticate but where I can fake that I can authenticate, so that we

00:29.760 --> 00:36.450
can also control whether when the app starts, we see that discover or offers or bookings part or if we

00:36.450 --> 00:40.170
just see the authentication page and we need to login first.

00:40.170 --> 00:46.480
Now for that, we have that auth page here of course. I'll set the title to authenticate and I certainly

00:46.480 --> 00:52.900
don't want to add my menu button here because you can't go anywhere if you're not authenticated. Instead

00:52.900 --> 01:01.630
here I'll add a button, a normal button with a color of primary and I'll say login and later we'll add

01:01.630 --> 01:08.460
a real login with user input and so on, for now it's just that button. When we press this button, I want

01:08.460 --> 01:15.650
to execute onLogin and I want to flip something that actually does set me to login,

01:15.660 --> 01:18.180
so simply a boolean that is switched to true

01:18.180 --> 01:23.060
for now let's say. And for this, I'll add a new service, an auth service.

01:23.160 --> 01:32.720
So with Ionic generate service, in my auth folder, I'll add a new auth service. So this will generate a

01:32.720 --> 01:38.990
new auth service file in there, don't need the testing file and that auth service file for now will simply

01:38.990 --> 01:47.940
have a user is authenticated property which is false as a default let's say and I will add a login

01:47.940 --> 01:54.750
method here which sets user is authenticated to true and I'll add a logout method to that service which

01:54.750 --> 01:58.080
when called will set user is authenticated back to false

01:58.080 --> 02:04.230
so that we simply have that dummy authentication flow, that is all, nothing too fancy of course. Now on

02:04.230 --> 02:10.080
login in the auth page component has to be added of course, this method has to be added here and now

02:10.080 --> 02:16.140
here, I want to trigger the login method in my service. For that, I need to inject the auth service here,

02:16.830 --> 02:24.570
auth service, make sure to add the import to the auth service file and in onLogin, I will simply call login

02:24.570 --> 02:26.330
on my auth service.

02:26.400 --> 02:32.580
Now one tiny thing I'll change is also I'll set a user is authenticated to a private property and

02:32.580 --> 02:33.390
add a getter, get

02:36.190 --> 02:41.640
user is authenticated and return

02:41.680 --> 02:47.890
this user is authenticated, simply to wrap this so that we can't set this directly from outside but so

02:47.890 --> 02:53.650
that we have to use the login or logout method. Simply a pattern which isn't too bad to use to make

02:53.650 --> 02:59.470
sure you can't accidentally overwrite this to true or false from any other place in your app, you have

02:59.470 --> 03:02.620
to go through login or logout instead.

03:02.620 --> 03:08.350
So the auth page now has to on logging method added that will actually trigger the login method in the

03:08.440 --> 03:09.450
auth service.

03:09.730 --> 03:10.860
That's part number one

03:10.870 --> 03:14.580
but right now, we never see the auth page of course and to see it,

03:14.620 --> 03:24.650
I want to add a guard that prevents access to both my places and my bookings in cases where I'm not authenticated.

03:24.680 --> 03:26.120
So that's the next thing we'll add.
