WEBVTT

00:02.180 --> 00:09.830
Now using local references is an absolutely fine way of passing the data here but there is another way and

00:09.830 --> 00:13.100
that uses a feature called two-way binding.

00:13.100 --> 00:18.770
We saw property binding which is the thing with the square brackets and there, it's important to note

00:19.100 --> 00:22.480
that here, I used it on my own component,

00:22.490 --> 00:29.540
I set up my own property to which I can bind with @input but I could also bind on the normal HTML

00:29.550 --> 00:30.940
elements,

00:30.980 --> 00:39.170
for example I could also bind the value property here with square brackets and then any dynamic value.

00:39.230 --> 00:46.010
So not some text like this, if you want to pass text you have to add an extra set of quotes because the

00:46.010 --> 00:51.860
part in between the double quotes here and that is the case for property binding and for event binding

00:51.860 --> 00:53.720
and for string interpolation,

00:53.720 --> 00:57.450
this is always evaluated as a Typescript expression.

00:57.530 --> 01:04.570
So one plus one would work, if I do that, we actually see two as a default value because

01:04.570 --> 01:08.560
that is what I'm binding to the value property of this input.

01:08.560 --> 01:13.990
But here I don't want to bind to that, it's just important to keep in mind that property binding is available

01:14.170 --> 01:20.650
on all elements and you can bind to any property that specific element or component has and the default

01:20.700 --> 01:27.690
HTML elements have a lot of bindable properties. But here, I don't want to use property binding like

01:27.690 --> 01:28.650
this,

01:28.650 --> 01:33.600
instead I'll use a different syntax which looks like a combination of property binding with the square

01:33.600 --> 01:37.990
brackets and event binding with the normal parentheses

01:38.310 --> 01:43.200
and then I bind to ngModule and it has to be ngModule.

01:43.200 --> 01:50.460
This is a directive exposed by Angular and currently not available, we'll need to change something but

01:50.460 --> 01:52.380
we'll soon make it available,

01:52.380 --> 02:00.120
so it's a directive made available by Angular which supports this two-way binding syntax as it is called

02:00.540 --> 02:09.990
because this actually will listen to changes to the value and output changes into a property of our

02:09.990 --> 02:12.690
choice and update it with the latest value

02:12.720 --> 02:19.170
and on the other hand, it will pass back changes into the value of this input and to make this a bit

02:19.170 --> 02:20.820
more understandable,

02:20.970 --> 02:28.410
let's add a new property to the person input component, the enteredPersonName and that will be a string

02:28.590 --> 02:31.020
and by default, let's say it's an empty string,

02:31.020 --> 02:34.730
we can now also omit this type definition because Tyepscript can infer it,

02:35.370 --> 02:42.370
so it's a empty string here and enteredPersonName is what I'll pass here between the double quotes.

02:42.600 --> 02:47.810
Now I mentioned that this would not be available right now, to unlock the ngModule directive,

02:47.820 --> 02:52.580
we have to go to the app module and it's not unlocked by the browser module,

02:52.590 --> 03:01.890
instead we need to import another core Angular module and that is the forms module because this contains

03:01.890 --> 03:08.900
functionalities that help us with handling forms or user input and we get this from Angular forms.

03:09.030 --> 03:13.920
We have to add this in the imports array here, the forms module.

03:13.920 --> 03:19.230
This unlocks a couple of features and amongst them, this ngModule directive which helps us again

03:19.320 --> 03:21.590
with handling user input.

03:21.630 --> 03:30.850
Now this is available and now we can still enter values normally here but we can do something interesting.

03:31.140 --> 03:37.350
Remember that enteredPersonName is the property to which we are binding with ngModule,

03:37.350 --> 03:44.400
we're not passing anything to onCreatePerson and therefore we can't expect any arguments here anymore

03:44.430 --> 03:46.040
because we're not getting any

03:46.230 --> 03:53.370
but since this here, enteredPersonName is now a normal property of this component, we can use it from

03:53.430 --> 03:55.970
anywhere inside this component code.

03:56.010 --> 04:03.610
So here I can output this enteredPersonName and this will just be a string and now if I go back to the

04:03.610 --> 04:10.430
running application and I enter Max 2 here and I click create, we still see that here,

04:10.450 --> 04:13.110
so this gives us access to this value as well

04:13.240 --> 04:19.510
but it's two-way binding, so we can now also update the value of this input and to do that,

04:19.510 --> 04:23.150
for example let's say after we created a person, we want to clear it again,

04:23.290 --> 04:27.500
I can set enteredPersonName equal to an empty string again.

04:27.940 --> 04:33.480
And if I do that and let it reload, I can enter Max 2 and if I hit create,

04:33.490 --> 04:39.920
you see it's reset back to an empty form but it did receive the value correctly

04:40.050 --> 04:45.670
and that's a nice feature we can easily implement with the help of two-way binding which is the fourth

04:45.820 --> 04:48.540
and last form of data binding Angular knows.

04:48.760 --> 04:55.810
We have property binding with the square brackets where we bind to properties of our own components or

04:55.810 --> 05:04.630
built-in elements, we have event binding with parentheses where we bind to native events or our own

05:04.630 --> 05:05.070
events,

05:05.080 --> 05:07.010
I'll soon show you how this works

05:07.880 --> 05:13.370
or we use string interpolation which we use anywhere where we want to output text,

05:13.370 --> 05:23.180
we use it with double curly braces or we use two-way binding on input elements which allows us to get

05:23.300 --> 05:26.930
the current value but also write to that value,

05:26.960 --> 05:30.440
so it allows us to interact with it in both directions.

05:30.440 --> 05:35.220
These are four crucial parts of Angular which you'll see being used a lot in this course

05:35.300 --> 05:38.010
and therefore it's important to understand them.

05:38.060 --> 05:44.900
Now of course we are not done here because I don't just want to output the entered name here, I instead

05:45.140 --> 05:51.500
want to use that entered name and kind of pass it back to the app component so that we can add it to

05:51.500 --> 05:53.330
this array of persons there and

05:53.330 --> 05:54.620
that's what we'll do next.
