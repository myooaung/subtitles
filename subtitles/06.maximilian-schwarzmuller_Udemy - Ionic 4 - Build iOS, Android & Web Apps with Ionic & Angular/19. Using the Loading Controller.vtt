WEBVTT

00:02.360 --> 00:08.630
For that loading controller, for that overlay, in the auth page component, just as with other controllers

00:08.660 --> 00:11.930
we used earlier like the modal controller, we have to inject it.

00:12.350 --> 00:21.110
So here I'll inject my loading controller which is of type loading controller, now loading controller

00:21.110 --> 00:26.300
here needs to be imported from @ionic/angular.

00:26.400 --> 00:30.790
Now this loading controller can be used here in onLogin now,

00:30.900 --> 00:37.140
this loading controller and just with all the other controllers, we can call create to create a new loading

00:37.140 --> 00:39.830
controller overlay or a new loading overlay

00:39.870 --> 00:46.200
I should say. You pass in a Javascript object to configure that and there you can set things like the

00:46.200 --> 00:52.200
duration in case you can't control that on your own by dismissing it once you're done,

00:52.200 --> 00:58.260
you can control whether it should close any open keyboards which it should do here in case I still have

00:58.270 --> 01:00.000
one open.

01:00.210 --> 01:06.930
You can choose which spinner to show, so which kind of a spinner it should show and you can also show a

01:06.930 --> 01:13.600
message like logging in. Now as all these other create methods,

01:13.600 --> 01:15.100
this uses a promise,

01:15.100 --> 01:23.280
so what we get back here is a loading element in our function we pass to then and on this loading element,

01:23.290 --> 01:26.690
we now have to call present to show it.

01:26.770 --> 01:37.350
Now it's also on this element, let me move that up, where I want to actually start the timer let's say

01:39.330 --> 01:45.580
and I want to dismiss the element once I'm done. So here inside of that function we passed to timeout,

01:45.640 --> 01:51.150
so once we're done logging in because remember, I'm just faking a network request here,

01:51.310 --> 01:56.720
we can use that loading element and call dismiss and this will dismiss the overlay.

01:56.740 --> 02:01.720
So here we're presenting it, then we're starting the timer and this function will execute after one and

02:01.720 --> 02:04.600
a half second and we'll then remove the overlay.

02:04.600 --> 02:11.740
Now what this gives us if we save this is a nice overlay that blocks us from doing anything

02:11.740 --> 02:13.510
here on the page.

02:13.510 --> 02:18.670
Now you could actually configure it to be dismissable when you click the background but the default is

02:18.670 --> 02:23.470
that it's not this dismissable because indeed it should block all interaction.

02:23.470 --> 02:30.280
Now this is the loading controller which I want to use in places where the user just has to wait and

02:30.280 --> 02:34.470
where you can't do anything useful with the app until the loading is done.
