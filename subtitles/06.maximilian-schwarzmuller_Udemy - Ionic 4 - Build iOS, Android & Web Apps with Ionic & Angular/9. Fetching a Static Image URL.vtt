WEBVTT

00:02.190 --> 00:08.220
So with the address fetched let's continue with the next step which is fetching a preview of the location

00:08.280 --> 00:09.760
we fetched.

00:09.810 --> 00:16.860
So instead of subscribing here to get address I actually want to send no HDP request and therefore will

00:16.860 --> 00:24.600
add another observable and hence I will add pipe here to then use to switch map operator which allows

00:24.600 --> 00:31.570
us to take the result of observable one and return a new observable so here will get the address of

00:31.570 --> 00:39.710
course in it and in here I then want to call a number a method that actually yields me that screenshot

00:39.740 --> 00:47.160
that preview lets first of all store the address and a general will need some location object that stores

00:47.160 --> 00:54.720
de coordinates the address and then also a link to that snapshot image which will get in yen and I guess

00:54.720 --> 00:58.630
for this it makes sense to add a new model to our application.

00:58.750 --> 01:07.450
I'll added here in the places folder because logically a location belongs to a place and I will add

01:07.450 --> 01:16.570
edit here next to the place model and I'll name it location model and I'll export an interface here

01:18.260 --> 01:25.730
which I'll actually name coordinates first of all that will just be a pair of lat and LNG both our numbers

01:26.240 --> 01:31.110
but then I'll add another interface in here which I'll name place location.

01:31.130 --> 01:36.710
You could of course also just name it location but I don't when I clash with the built in location that

01:36.710 --> 01:39.350
is a core web API.

01:39.920 --> 01:47.360
And that will actually extend coordinates and interfaces and types can extend our interfaces which simply

01:47.600 --> 01:54.080
means they rely on these properties and then you can add your own ones and there I will have address

01:54.080 --> 02:02.120
which is a string and d static map image you or L or whatever you want to name it which is also string

02:02.120 --> 02:05.940
and that will be the path to that image we're about to generate.

02:05.990 --> 02:11.500
So place location will have both coordinates and these extra fields and with all that added.

02:11.510 --> 02:19.880
Let's go back to the location picture here and let's create a new object up here.

02:20.080 --> 02:25.870
Once we dismiss the model which I'll name picked location and.

02:26.110 --> 02:28.810
That will be of type place location.

02:29.170 --> 02:33.190
So make sure to add that import to that place location file

02:36.030 --> 02:41.730
or to the location model file I should say which we just added with the place location and then this

02:41.730 --> 02:43.430
will be a javascript object therefore.

02:43.530 --> 02:50.610
And in this object we obviously have a latitude which we get from our modal data right.

02:50.640 --> 03:00.120
Because dad returns us a lot and a long field so we can add lat and long here modal data data LNG will

03:00.150 --> 03:05.970
have an address which initially is now and we'll have a static map image your l which initially is also

03:05.970 --> 03:15.120
now now here where we fetched the address we can use that picked location object again does one and

03:15.120 --> 03:17.390
set the address to the address we fetched.

03:17.400 --> 03:24.030
So did we now have coordinates and an address and then we can continue with the next step where I want

03:24.030 --> 03:33.850
to send a request to actually fetch that static image you are L as well for that for it is fetching

03:33.850 --> 03:39.950
off that image you are all aware of that image that gives us a preview of what we picked.

03:40.090 --> 03:44.370
I will add a new method here which I'll name get map image.

03:44.410 --> 03:49.810
But you can of course named us as you want and this also needs latitude which is a number and a long

03:49.810 --> 03:56.800
etude which is a number and also assume level which is a number because we're generating a screenshot

03:56.890 --> 04:01.660
of Google Maps basically and you need to know how far you are assumed in of course.

04:01.960 --> 04:06.910
And then we use a number API which you can learn more about by googling for it.

04:07.090 --> 04:10.910
And that is de static map API.

04:11.020 --> 04:16.180
So if you google for a Google static map API you'll find that documentation here where you can learn

04:16.360 --> 04:21.040
all about that and where do you most importantly learn how to send the request.

04:21.040 --> 04:22.110
So let's copy that.

04:22.110 --> 04:23.580
You are L here.

04:23.710 --> 04:28.330
Ed let's Denver return this string simply between double takes.

04:28.360 --> 04:34.570
We're not even sending an HDP request here because this is actually a string that will yield an image

04:35.350 --> 04:41.250
which is dynamically generated on Google servers and we can directly use that as a source for our images

04:41.320 --> 04:42.460
in our application.

04:42.490 --> 04:46.240
We don't need to send the request there because we're not expecting any Jason data.

04:46.240 --> 04:50.570
This will return the image already but of course we need to adjust this.

04:50.650 --> 04:55.900
So for example here center that will not be an address like this.

04:55.900 --> 04:59.640
Instead center it can also be a latitude and longitude pair.

04:59.680 --> 05:07.660
So here I will pass in left and then you should add a comma and also pass an LNG there after the some

05:07.660 --> 05:08.220
level.

05:08.220 --> 05:13.920
All that will be set by me of course and I will set this to soon.

05:13.930 --> 05:21.570
So my first argument now for it is size you cannot set up any size you want all go with 500 by 300 here

05:23.720 --> 05:25.730
map type road map should be okay.

05:25.790 --> 05:27.650
I want to have that default map.

05:27.650 --> 05:30.380
And now you can add markers that exist on that map.

05:30.440 --> 05:37.540
Now I don't want that many markers so I will remove all but one year one marker is good though.

05:37.760 --> 05:39.840
It should be red so I'll pick red here.

05:39.920 --> 05:46.200
And again you'll learn all about that in your official docs of course the label.

05:46.220 --> 05:54.540
I will said here is place and then here you have again the coordinates for that marker.

05:54.540 --> 06:00.510
The first coordinate here is lat and that should be my center so I will use lat which I get here as

06:00.810 --> 06:05.110
an argument to this method and then LNG.

06:05.130 --> 06:12.420
Now of course here for the API key we again need to inject our API key so we'll get this from environment.

06:12.420 --> 06:17.680
Google Maps API key and this is now a string that should yield an image.

06:17.710 --> 06:19.840
Now remember this is not an observable.

06:19.840 --> 06:23.710
This is just a string switch map needs and observable though.

06:23.710 --> 06:28.960
So what I will do is I will return off and off is imported from our extra yes.

06:28.960 --> 06:34.270
It creates an observable that can be wrapped around any value which is instantly emitted.

06:34.330 --> 06:46.400
So off this get map image and there we word picked location let picked location long and assume level

06:46.400 --> 06:52.070
of 14 let's say cause you can play around with that and test different some levels.

06:52.070 --> 06:55.120
Now the next step will be to subscribe again.

06:55.130 --> 07:03.080
So on this entire observable here we can subscribe and we'll get back that static map image you're all

07:03.080 --> 07:11.120
here because that is the last thing I resolve their and I'll then set picked location static map image

07:11.120 --> 07:15.300
you are all equal to the static map image you're all that was generated here.

07:16.240 --> 07:17.410
And we're good now.
