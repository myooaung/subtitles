WEBVTT

00:02.010 --> 00:07.790
So as mentioned let's start with Iowa and let's run our application on iOS device.

00:07.800 --> 00:10.550
Now there are certain requirements you have to fulfill.

00:10.590 --> 00:15.560
And the saddest requirement kind of is you need Mac OSS.

00:15.600 --> 00:20.610
There is no way around that you need X code and X code only runs on Mac OS.

00:20.610 --> 00:25.660
You can of course also get Mapquest run on some virtual machines and stuff like that.

00:25.800 --> 00:31.970
I won't go into this because it's really legal but any ways you need Mac OS wherever dad runs.

00:32.010 --> 00:34.210
If you have Mac OS you can continue.

00:34.320 --> 00:38.670
If you don't have that you unfortunately can't build your Iowas app.

00:38.760 --> 00:42.890
You can still continue developing it and do it in the browser as we did before.

00:42.990 --> 00:48.900
But you won't be able to publish it to the App Store or to a real device or even to the simulator.

00:48.900 --> 00:52.160
That just won't work with that out of the way.

00:52.290 --> 00:58.640
Assuming that you have X code installed you should run X code select install in your terminal.

00:58.650 --> 01:02.940
So after you installed X code this will install some extra tools.

01:02.940 --> 01:08.760
I will use behind the scenes to build your project so that you can actually build your project without

01:08.760 --> 01:14.010
having to enter X code to be able to build your project from the command line.

01:14.010 --> 01:19.280
You don't also need to run NPM install mindless G Iowas deploy.

01:19.470 --> 01:24.720
So this is another command you will need to run and we can actually run this together.

01:24.960 --> 01:27.490
I'm assuming that you ran X code.

01:27.650 --> 01:28.420
Select

01:31.190 --> 01:33.060
install like this.

01:33.080 --> 01:39.530
I already got it installed so it won't work here and if you Randles you now can run NPM

01:41.720 --> 01:48.860
install dashi to install it globally on your machine I was deployed just helper package which is used

01:48.860 --> 01:54.070
to deploy the app to your Iowa Osterweis which without opening X code.

01:54.110 --> 01:59.840
Now chances are you get an error like this and that simply means you have to put as sudo in front of

01:59.840 --> 02:03.830
it since you are installing a global package and on Mac you probably need that.

02:03.830 --> 02:06.030
On Windows it should work without sudo.

02:06.040 --> 02:12.380
Now I'm still getting an error and this is another error you get from time to time with this package.

02:12.410 --> 02:19.580
It can be fixed by adding a of flag unsaved Perm which is set to True and this will now allow you to

02:19.580 --> 02:21.750
install it to force the installation.

02:21.780 --> 02:22.800
This is fine your.

02:22.810 --> 02:24.280
This is no unsafe package.

02:24.290 --> 02:26.390
So what that does is now installed.

02:26.390 --> 02:33.230
Now we fulfill the software prerequisites and we can therefore continue working on this and running

02:33.230 --> 02:35.030
it on iOS device.

02:35.180 --> 02:37.820
Now when running it for the first time.

02:37.820 --> 02:41.300
So you haven't ranted on a real device before.

02:41.300 --> 02:44.180
We need to open it in X code.

02:44.180 --> 02:51.170
This is a must because we have to assign a certain cert certificate to our app to basically inform our

02:51.170 --> 02:57.470
application that this is a valid application that there is nothing wrong with it to assign the certificate.

02:57.500 --> 03:03.440
You first need to build your app for iOS and for this you need to have eyeless add it as a platform

03:03.440 --> 03:03.880
here.

03:03.920 --> 03:06.220
So I already got both platforms added.

03:06.260 --> 03:13.460
But if you don't have it edit simply run kÃ¶nig platform at IO s and as will then add it as a platform

03:13.550 --> 03:15.790
and also execute a build.

03:16.100 --> 03:20.060
So if you already had it added You need to run this build manually so run.

03:20.090 --> 03:26.810
I want to build iOS and this will now simply build your project not just for a web app as we did before

03:26.810 --> 03:32.470
with my own server but also build it to run natively on a device so trigger discord of a step.

03:32.480 --> 03:37.970
I was mentioning on the slides in the first course section triggering code about to take our web application

03:38.120 --> 03:40.840
and build a native app based on that.

03:40.910 --> 03:42.550
So there's not succeeded.

03:42.800 --> 03:46.390
And once you did build it you can open a project in X code.

03:46.510 --> 03:51.410
And now you should navigate into your project folder and there into the platform's folder.

03:51.500 --> 03:56.260
Here in the iOS folder and then does ionic to course X called Project file.

03:56.300 --> 04:00.760
Simply click open on that and this will open it in X code.

04:00.770 --> 04:07.590
Now with this open for the first time you won't see a team assigned here under signing.

04:07.610 --> 04:10.910
If you click on the project you won't see this year.

04:11.180 --> 04:17.930
You have to go to preferences and there you should have an Apple ID or create one by adding plus and

04:17.930 --> 04:25.880
then add Apple ID here you get this Apple ID and then interview details here if you got a couple of

04:25.880 --> 04:29.000
signing identities and provisioning profiles.

04:29.000 --> 04:31.090
The profiles are created automatically.

04:31.100 --> 04:37.700
You need to set up a signing identity and if you have one already you can click Create here where there

04:37.700 --> 04:39.850
is no button for me because I already did this.

04:39.860 --> 04:46.280
You can click Create Now you can create one for the distribution of apps only for the development because

04:46.280 --> 04:49.970
for the distribution you need a paid Apple developer account.

04:50.000 --> 04:54.420
If you have that you able to create that signing too but you only need to development.

04:54.500 --> 04:57.500
Signing identity and that will be available for free.

04:57.620 --> 05:03.860
So after you click Create your and create that identity you can leave the Preferences go back to this

05:03.860 --> 05:06.410
project here and choose your team here.

05:06.560 --> 05:12.630
At that you should automatically sign your app and you can now run it on a device or on the simulator.

05:21.840 --> 05:26.880
You can pick a simulator here or any connect the device and hit the play button to run it from within

05:26.880 --> 05:32.400
X code which also gives you good vantage of having DS just log here which you can open with this button

05:32.400 --> 05:37.260
here on the top right here you will see any console log messages you're printing in the application

05:37.410 --> 05:38.410
and any errors.

05:38.430 --> 05:40.710
So that's very useful for debugging.

05:41.040 --> 05:45.360
I went into glowsticks code and now show you how to this from the command line.

05:45.360 --> 05:46.210
Important again.

05:46.230 --> 05:50.390
Make sure that you have added this signing certificate here.

05:50.400 --> 06:00.000
Now with that added and D IO as deploy package installed globally you can simply run ionic run Iowas

06:00.330 --> 06:04.780
and then dash dash device to run it on a connected iOS device.

06:04.800 --> 06:10.480
So I will quickly connect my device here and then hit enter and this will now build the project.

06:10.500 --> 06:15.330
So turn it into a native app and then ship it to your device and automatically launch it.

06:15.330 --> 06:17.700
They're all from the command line here.

06:17.850 --> 06:22.200
And again if you encounter any errors or have questions about this definitely have a look at the official

06:22.200 --> 06:26.500
documentation for Iowa to learn more about this process.

06:26.520 --> 06:30.580
So does this now opening it on my device or shipping it there and then opening it.

06:31.020 --> 06:32.720
And here I mirroring the app..

06:32.760 --> 06:36.690
So this is my real application running on my real device.

06:36.690 --> 06:39.030
And there you can see it runs pretty well.

06:39.030 --> 06:41.360
I can open my quotes I can favorite them.

06:41.370 --> 06:42.200
Yes go ahead.

06:42.210 --> 06:43.500
Go back here.

06:43.590 --> 06:48.300
Go to February if they read see it here reclose So this is all running well on my device.

06:48.540 --> 06:50.290
And of course only one option.

06:50.310 --> 06:52.360
You can also run on the emulator.

06:52.500 --> 06:56.810
This would be achieved by running ionic emulate iOS.

06:56.820 --> 07:00.300
This will start up the simulator and launch your app there.

07:00.540 --> 07:06.980
So to summarize you have ionic built ins which will bulled it for iOS.

07:07.020 --> 07:13.220
You really need to run this though mostly for the initial setup in X code because this will only treat

07:13.220 --> 07:13.910
a bullet.

07:14.130 --> 07:18.840
You can also run ionic run Iowas this would treat to build and run it on your device.

07:18.840 --> 07:26.360
Important add a dash dash device at the end to work correctly and you can run ionic emulate Aiwass.

07:26.370 --> 07:31.380
This will also create a bold and ship to a range running emulator or start such emulator.

07:31.380 --> 07:32.930
If no one is running.

07:32.970 --> 07:38.450
So these are the useful commands you have at your hand when it comes to running apps on the wise.

07:38.460 --> 07:42.590
And with that you should be able to test replication on real devices.
