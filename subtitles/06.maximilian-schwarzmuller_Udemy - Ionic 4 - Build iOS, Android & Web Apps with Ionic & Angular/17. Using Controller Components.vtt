WEBVTT

00:02.140 --> 00:07.960
So we have this nice demo app in a form that we'll never use again because for the rest of the course

00:07.960 --> 00:14.650
we'll use Angular but still you learned a lot about some of the core Ionic components and most importantly,

00:14.710 --> 00:20.140
where to find more information about the components and how to generally use them and have a look at this

00:20.140 --> 00:20.680
app,

00:20.740 --> 00:27.220
it really looks nice, it really looks beautiful in my opinion and that with very little work from our

00:27.220 --> 00:27.680
side

00:27.820 --> 00:29.800
and this is the power Ionic gives you

00:29.800 --> 00:34.900
and it even gives you the power to of course adjust all these styles if you need to and

00:34.960 --> 00:37.010
we'll do that later in the course as well,

00:37.060 --> 00:40.210
styling and theming is an important topic.

00:40.210 --> 00:46.720
Before we do that, let's dive into a component which works a bit differently than the other components

00:46.870 --> 00:53.230
and which will then also nicely explain why using Angular instead of vanilla Javascript can be more

00:53.230 --> 00:58.040
convenient. Let's say when we enter some invalid data,

00:58.040 --> 01:01.700
for example we leave the fields empty and I click add expense,

01:01.700 --> 01:08.600
we want to show a little alert which warns the user that the entered value is invalid.

01:08.600 --> 01:16.060
Now of course we could throw an alert here, invalid values,

01:16.100 --> 01:20.600
this uses the built-in alert functionality every browser knows.

01:20.600 --> 01:22.610
If we do that, if I reload,

01:22.610 --> 01:25.080
then I get this default alert here at the top

01:25.280 --> 01:27.370
but we can certainly do way better,

01:27.380 --> 01:33.290
how about a native looking-like alert here in the middle of the app? Ionic has us covered,

01:33.290 --> 01:39.380
it does offer components that help us with that but if we have a look at the official components docs, 

01:39.500 --> 01:48.090
we do find an alert and we find an ion-alert-controller and an ion-alert.

01:48.090 --> 01:51.850
Now thankfully, you find some instructions on how to use the alert here,

01:51.860 --> 01:55.160
also with vanilla Javascript instead of just Angular

01:55.160 --> 02:02.270
but as you will learn with Angular, it's way more convenient but let's focus on the vanilla Javascript

02:02.270 --> 02:05.480
style for now. To throw such an alert,

02:05.480 --> 02:09.640
first of all in our ion app somewhere, maybe here at the bottom,

02:09.860 --> 02:13.890
you have to add the ion-alert-controller.

02:13.940 --> 02:19.040
Now if you add this element, you'll not see any change on your screen,

02:19.040 --> 02:21.740
if you reload, you don't see that controller here,

02:21.740 --> 02:26.670
it's an invisible element because it doesn't add any visual output,

02:26.780 --> 02:33.830
it adds some functionality we can tap into, we can use. Now to use it though, we need to get access to

02:33.830 --> 02:35.830
the ion-alert-controller,

02:35.870 --> 02:45.710
so in my Javascript code here, I'll add a new constant, alertController or alertCtrl and I will

02:45.710 --> 02:51.710
simply use document query selector to select that ion-alert-controller because even though we can't

02:51.710 --> 02:56.350
see anything on the screen, it of course still is a normal web component,

02:56.470 --> 03:04.190
just one that doesn't really render anything, it just adds some Javascript functionality behind the scenes.

03:05.180 --> 03:07.490
With access to this component,

03:07.490 --> 03:15.620
we can tap into this Javascript functionality. So with the alert controller here where I do my validation,

03:16.550 --> 03:19.780
I can actually call create.

03:19.790 --> 03:25.550
Now this is a method provided by this alert controller component and you can learn about this method

03:25.550 --> 03:27.040
in the official docs of course,

03:27.050 --> 03:33.920
it's not a default HTML method. Create takes a Javascript object because with this method, we create

03:34.010 --> 03:34.930
a new alert

03:35.000 --> 03:44.100
and with this object we can configure this alert and one configuration we can set up is the message

03:44.100 --> 03:52.390
that gets displayed, like please enter a valid reason and amount. Besides a message,

03:52.390 --> 03:57.980
we can also add a header and all these fields you can set can of course be found in the official docs, 

03:58.240 --> 04:03.280
though later when we work with Angular, this will also become easier because we then have Typescript

04:03.280 --> 04:05.860
support and we get some help from our IDE.

04:06.400 --> 04:12.370
So for now, I'll just enter this invalid inputs header by knowing that this header field exists and you

04:12.370 --> 04:14.470
just have to trust me for now.

04:14.770 --> 04:20.080
We can also add a buttons array which allows us to label the buttons which are displayed and control

04:20.080 --> 04:24.450
how many buttons are displayed in general and I will add one button which prints

04:24.480 --> 04:25.250
okay.

04:25.360 --> 04:30.110
You can always configure these buttons in more detail and control what they do when they are tapped

04:30.130 --> 04:36.280
but for now, I'll just enter this button which will then as a default always close the alert.

04:36.280 --> 04:42.730
Now create creates a new alert but if you save that and click the button again after reloading, you won't

04:42.730 --> 04:49.450
see anything because it creates that and it does so asynchronously and it does not display it automatically.

04:50.080 --> 04:52.490
Instead to display the created alert,

04:52.600 --> 04:58.900
you have to add then because create actually returns a promise which will fulfill when the creation of

04:58.900 --> 05:00.490
this element is done.

05:00.580 --> 05:07.150
So here as an argument in the function you pass to the then block, you will get an alert element.

05:07.370 --> 05:10.030
This is the element that was created

05:10.120 --> 05:13.030
and it will be that ion-alert-component here.

05:13.030 --> 05:17.920
If you would add this directly to the DOM like this, it would not work as intended,

05:18.040 --> 05:18.510
instead

05:18.540 --> 05:22.390
this is always created for you by the alert controller

05:22.690 --> 05:30.190
but on this alert element, you can then call present to present it on the screen.

05:30.250 --> 05:36.460
So now with this code added, if we go back to the application and reload and I tap this button, we see

05:36.670 --> 05:38.460
this alert here.

05:38.460 --> 05:43.960
Now please also note that here it looks like a typical material design Android alert,

05:43.960 --> 05:49.570
if I go to an iPhone and I reload, that's always important,

05:49.570 --> 05:52.470
you need to reload after switching devices,

05:52.630 --> 05:55.760
if I click add expense, not only do the buttons look different,

05:55.840 --> 06:04.690
the alert style also looks as it should look on iOS. So this is how we can use these special components,

06:04.930 --> 06:10.660
all the components which end with controller in the docs like the actionsheet controller or as you

06:10.660 --> 06:17.230
just saw, the alert controller. But using these controller-like components will get even easier once we add

06:17.230 --> 06:22.600
Angular, then we don't have to place them in the DOM even though we can't see them and access them like

06:22.600 --> 06:22.960
this,

06:23.200 --> 06:26.110
instead we'll be able to inject them but more on that later.
