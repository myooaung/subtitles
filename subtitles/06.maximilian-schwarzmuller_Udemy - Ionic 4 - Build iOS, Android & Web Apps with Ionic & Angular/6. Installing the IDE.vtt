WEBVTT

00:02.220 --> 00:09.120
Now I will use Visual Studio Code which you can get on code.visualstudio.com.

00:09.120 --> 00:11.820
This is a free IDE, a very powerful one, a

00:11.820 --> 00:14.290
very nice and easy to use one

00:14.370 --> 00:20.410
and this is the IDE I will use here, to build my Angular app and work on my Angular app.

00:20.460 --> 00:21.760
You can simply download it here,

00:21.770 --> 00:27.960
it is available for all major platforms and walk through the installer that gives you and

00:27.960 --> 00:31.790
once you did that, you can simply open Visual Studio Code.

00:31.890 --> 00:38.610
Now inside Visual Studio Code, simply open the project you just created in the command line,

00:38.610 --> 00:46.690
so this Angular project and you should get something like this, you use file open to open that folder.

00:46.710 --> 00:50.820
Now this is the Angular project and now here, I got a specific look,

00:50.820 --> 00:59.220
you can hit command shift P or a control shift p on Windows and then simply type theme here to choose

00:59.220 --> 01:00.360
your color theme

01:00.360 --> 01:04.060
and I'm using the dark plus theme here which gives me that dark look.

01:04.740 --> 01:11.220
Additionally, I use some extensions and you can hit command shift X or control shift X to go to the

01:11.220 --> 01:17.880
extensions menu here or you use view and then choose extensions here and there,

01:17.970 --> 01:24.480
I'm using the material icon package, that is optional but that explains why the icons in my project

01:24.480 --> 01:30.750
will look the way they do look, you can simply install that if you want the same look and I'm using the Angular

01:30.750 --> 01:37.770
essentials package and you can simply search for that and install this to have an essential set of extensions

01:37.830 --> 01:44.340
in Visual Studio Code that makes working with Angular apps easier and thereafter you can switch back to

01:44.340 --> 01:53.310
this explorer view here. Now we have that newly created Angular project and the remaining thing to do

01:53.310 --> 02:00.270
is to start a development server that allows us to work on this project and you can do that in the terminal

02:00.270 --> 02:07.530
where you created the project by navigating into that project with cd ng-refresher and then running

02:07.590 --> 02:16.920
ng serve or the way I'll do it, in your IDE, in Visual Studio Code, you can click on terminal, new terminal

02:17.190 --> 02:25.110
to bring up a new terminal or command prompt but here inside your IDE, so this is the same normal terminal

02:25.200 --> 02:31.350
and command prompt you have outside of it but here it's simply integrated and conveniently, it automatically

02:31.350 --> 02:38.400
navigated into your project folder and therefore here, you can also run ng serve and this again uses

02:38.400 --> 02:45.450
the Angular CLI to now bring up a development server which kicks off that build process I was talking

02:45.450 --> 02:51.870
about, which even watches your files for changes to rerun that build process whenever something changes

02:52.470 --> 02:59.820
and which gives you a URL you can visit, this one here to preview your Angular app. You can just

02:59.880 --> 03:02.490
enter that into your browser,

03:02.490 --> 03:09.960
here it is http://localhost:4200 to see your Angular app in a browser as your users would

03:09.960 --> 03:15.780
see it and you need to keep this ng serve process running to keep watching for changes and to be

03:15.780 --> 03:21.420
able to visit this again. Double-clicking the index.html file which you will find here in the source

03:21.420 --> 03:27.690
folder will not do it because A, this is only the input and this will be bundled up and moved to a different

03:27.690 --> 03:29.610
location, for ng serve

03:29.620 --> 03:35.400
this happens in memory which is why you can't see a different folder here but B, even if that were the

03:35.400 --> 03:42.430
final file, double-clicking it would use the file protocol not the HTTP protocol and you need the HTTP

03:42.560 --> 03:46.580
protocol for all features to work correctly.

03:46.800 --> 03:51.790
Now last but not least, let me show you what happens behind the scenes.

03:51.870 --> 03:56.260
As I mentioned, ng serve does all this compilation and bundling in memory,

03:56.490 --> 04:02.700
you can see the real output by running ng build and this will now not start a development server

04:02.970 --> 04:09.630
but instead, it will do the same steps the serve process does, compile the Typescript code and bundle everything

04:09.630 --> 04:15.750
up but you can see what this gives you. It gives you a dist folder and again ng serve kind of does

04:15.750 --> 04:21.810
the same thing but behind the scenes in memory only and there, you see that index.html file with

04:21.810 --> 04:27.960
that script import I mentioned on an earlier slide, actually multiple imports but the most important

04:27.960 --> 04:35.220
import for us is that main.js import which imports this Javascript file and this is your compiled

04:35.250 --> 04:41.370
and bundled and optimized Angular code. And this is not the code we're writing because this doesn't really

04:41.370 --> 04:46.380
look like code you would want to write but it is what we'll get in the end and it's interesting to keep

04:46.380 --> 04:52.320
this in mind because we will write it in a so much more convenient way by working here in the source

04:52.320 --> 04:52.920
folder.

04:53.070 --> 04:57.950
Let me now walk you through that folder and Angular's core features in the next lectures.
