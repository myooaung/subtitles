WEBVTT

00:01.900 --> 00:09.100
In the last lecture we add a method to store our places on the local storage and to function.

00:09.210 --> 00:16.290
Now I want to be able to delete places now deleting places actually in a couple of things because we

00:16.350 --> 00:20.210
also need to delete the file the image file in this step right.

00:20.220 --> 00:22.830
Because otherwise you would delete the data from the storage.

00:22.830 --> 00:28.380
But the image is still lying around in our system so we need to do both remove the data from the storage

00:28.560 --> 00:30.050
and remove the image.

00:30.360 --> 00:38.070
So for this we're going to need to import the file package again from ionic native because this again

00:38.070 --> 00:42.230
is which gives us access to our files and we need that access.

00:42.240 --> 00:48.210
So here in the lead place I now want to start with removing the image.

00:48.450 --> 00:53.570
Well first of all splicing the place here from the array is always a good thing to do because it's desirÃ©e

00:53.580 --> 00:55.950
which I'm using in the app to display a list and so on.

00:55.950 --> 00:58.570
So we definitely have to update the array too.

00:59.010 --> 01:07.250
But then I also want to remove this element from our storage in order to do so.

01:07.410 --> 01:16.200
I will simply access to storage and set the places he said will always overwrite the old value and that

01:16.200 --> 01:16.950
is what I do.

01:16.980 --> 01:18.030
What I want.

01:18.090 --> 01:20.720
I'll overwrite it with the update replaces array.

01:20.820 --> 01:26.160
So first remove the element from the place array and then I overwrite the data in the storage.

01:26.160 --> 01:28.120
This is how you update the storage.

01:28.530 --> 01:34.720
Well then here indeed then call back I'll take care about the image in the error code there.

01:34.740 --> 01:37.310
Of course don't want to update the image here.

01:37.320 --> 01:40.440
I'll stick to logging the error to the console for now.

01:40.620 --> 01:42.960
But indeed then block here here.

01:43.050 --> 01:46.150
We also want to remove the image.

01:46.230 --> 01:53.460
So in this method in this area it just erro method which we're executing and the then block I somehow

01:53.460 --> 01:59.670
need access to my image and I need to remove it all outsourced isn't a separate method though of course

01:59.670 --> 02:06.260
we could leave it in the same method but just to make it easier to read I'll The new method remove file

02:06.640 --> 02:10.810
for the place passed as an argument.

02:10.930 --> 02:16.440
And in this method of first of all fetch the file name and store it here.

02:16.450 --> 02:17.590
Current name.

02:17.920 --> 02:21.910
Well we're already doing this in the at least typescript file.

02:21.910 --> 02:27.130
So let's simply copy this regular expression here or this whole expression where we fetched a file name

02:27.760 --> 02:33.400
and edit your service down there we'll try to get the file name though not on image data but instead

02:33.400 --> 02:36.470
on the image you are saved on our place here.

02:36.610 --> 02:41.320
So if that I get it getting the file name of the file that want to delete and then it does because the

02:41.320 --> 02:44.350
directory will again be this directory access.

02:44.380 --> 02:53.170
Rudy Cordova helper variable I can now use remove file to remove a file and again the directory is stored

02:53.200 --> 03:02.950
in core to the file data directory because remember this was the directory We used an app place to store

03:02.950 --> 03:04.660
it there.

03:04.750 --> 03:07.380
So this gives us access to our file storage.

03:07.510 --> 03:15.610
Of course as in the at least typescript file we need to declare these chord of variables Sodor types

03:15.790 --> 03:19.380
knows that it will be available so declare it here.

03:20.440 --> 03:25.690
At the top and with that declared we can now access this path.

03:26.040 --> 03:29.640
And we know the file name we're retrieving it with the regular expression.

03:29.640 --> 03:35.850
Now we're trying to remove this and if we're successful Well then there's nothing else for us to do

03:35.850 --> 03:44.840
we could lock this to the console maybe or show a toast or anything like this console lock removed file

03:44.850 --> 03:48.380
for debugging reasons here doesn't do anything else.

03:48.420 --> 03:54.330
More importantly the catch block if something goes wrong in this case.

03:54.690 --> 04:00.870
Well we also can show an error message and note you could extract the error here as an argument or just

04:00.930 --> 04:02.170
needed.

04:02.280 --> 04:08.790
So we could extract the error message and I'm going to say cancel lock error while removing file again

04:08.790 --> 04:10.240
for debugging reasons.

04:10.470 --> 04:18.480
But more importantly we need to run at place again and re-aired displaced to our array because removing

04:18.480 --> 04:20.830
it was not successful.

04:20.910 --> 04:23.720
Removing the file was not successful.

04:23.820 --> 04:30.570
So we should add this place to our array again and as we call at place this will also added to our storage

04:30.570 --> 04:31.100
again.

04:31.350 --> 04:37.830
So those just some well implementation to make this robust so that if defiler removing fails we're not

04:37.830 --> 04:46.170
deleting it from storage because we re added so a lot of talking about this with this we get this help

04:46.170 --> 04:53.830
or Meffert know back into place Meffert if we successfully overload or storage and therefore we save

04:53.830 --> 05:02.110
the fact that this is no longer included displays here I know want to call remove file and here we need

05:02.110 --> 05:03.640
to pass the place.

05:03.850 --> 05:11.290
So we should retrieve the place before deleting it stored in a new constant does laces at this index.

05:11.290 --> 05:15.000
Of course we have to do this before splicing it because it's gone thereafter.

05:15.280 --> 05:20.350
So this gives us this place we passed as the argument here.

05:20.350 --> 05:26.620
Now for this all to work correctly though we now need to go to the module and add something very important

05:26.860 --> 05:28.380
here in the providers.

05:28.390 --> 05:36.310
We need to add storage like this and also make sure to import storage from at Iyonix storage to at is

05:36.310 --> 05:37.550
import here too.

05:37.580 --> 05:43.020
This is super important if you forget this it won't run because remember storage is something we inject.

05:43.090 --> 05:46.300
So we also need to provide it with this read.

05:46.330 --> 05:49.800
Let's run it on our device and see if it works the way it should work.

05:50.810 --> 05:56.920
So it is just the device or the application running on device that's now trying to add does this display

05:56.990 --> 06:02.950
again we use before let's select that on the map as always like here.

06:03.380 --> 06:09.510
Open the camera and take a slightly different picture to mix things up like this.

06:09.980 --> 06:13.110
And let's now at this photo let's go back.

06:13.110 --> 06:17.610
This looks good on viewing it in the motile looks good too.

06:17.720 --> 06:24.280
I can leave it now let's kill the application and see if this works if I reload the application here.

06:25.430 --> 06:32.740
Well somehow it shows that if I then navigate somewhere else and come back but it doesn't loaded right

06:32.740 --> 06:37.960
at the beginning and this is probably due to the fact that fetching this from storage takes longer than

06:37.960 --> 06:40.200
the start of this page takes.

06:40.270 --> 06:47.980
But if we now open this and delete this you see at least it seems to be working it seems like the file

06:47.980 --> 06:50.170
was saved correctly and so on.

06:50.170 --> 06:54.860
So now if I open this again or deleted this it should be deleted from storage too.

06:55.120 --> 06:58.950
So now if I go to an repeating come back it's missing here too.

06:58.950 --> 07:02.800
So it's generally working but we're not loading it early enough so let's fix this.

07:02.800 --> 07:05.080
And with that we should have a working application.
