WEBVTT
1
00:00:00.000 --> 00:00:02.002
- Like we've done a couple times before,

2
00:00:02.002 --> 00:00:05.004
we will create a presigned URL for public downloading of

3
00:00:05.004 --> 00:00:07.004
our private objects.

4
00:00:07.004 --> 00:00:09.007
keeping note with the Java SDK is going to act

5
00:00:09.007 --> 00:00:12.004
a little bit differently than we saw with Python,

6
00:00:12.004 --> 00:00:13.002
in the way that it behaves

7
00:00:13.002 --> 00:00:15.004
and the way that you interact with it.

8
00:00:15.004 --> 00:00:18.002
Let's jump back into our IDE.

9
00:00:18.002 --> 00:00:24.006
And we will create a new method

10
00:00:24.006 --> 00:00:28.002
called create presigned URL.

11
00:00:28.002 --> 00:00:34.001
And we need to set a bucket and a key.

12
00:00:34.001 --> 00:00:37.003
so the string results,

13
00:00:37.003 --> 00:00:40.001
equal to null

14
00:00:40.001 --> 00:00:43.008
and we will return that result.

15
00:00:43.008 --> 00:00:47.000
Now before we go any further on actually implementing this,

16
00:00:47.000 --> 00:00:50.001
we need to modify our class a little bit,

17
00:00:50.001 --> 00:00:53.000
jump back up here towards the top of the class where

18
00:00:53.000 --> 00:00:53.009
our statics are,

19
00:00:53.009 --> 00:00:57.001
and we're going to create a new private final variable,

20
00:00:57.001 --> 00:01:01.002
of type s3 presigner.

21
00:01:01.002 --> 00:01:04.005
We will simply call it presigner.

22
00:01:04.005 --> 00:01:05.006
Now because that's final,

23
00:01:05.006 --> 00:01:10.006
we need to pass it into the constructor.

24
00:01:10.006 --> 00:01:13.003
And now we need to go down to our main method

25
00:01:13.003 --> 00:01:18.003
and create that when we create our class.

26
00:01:18.003 --> 00:01:19.009
So much like we did with the client,

27
00:01:19.009 --> 00:01:24.002
we will do an s3 presigner.

28
00:01:24.002 --> 00:01:26.000
This time we are going to use the builder

29
00:01:26.000 --> 00:01:28.006
for the s3 presigner.

30
00:01:28.006 --> 00:01:36.006
And we will pass it the same credentials provider.

31
00:01:36.006 --> 00:01:37.004
Ideally,

32
00:01:37.004 --> 00:01:38.003
we could have abstract that

33
00:01:38.003 --> 00:01:42.009
and shared the same one but this will work for right now.

34
00:01:42.009 --> 00:01:46.001
And let's pass that pre signer over to our class.

35
00:01:46.001 --> 00:01:48.009
So now we kind of have the infrastructure set up.

36
00:01:48.009 --> 00:01:49.007
Let's go back up here

37
00:01:49.007 --> 00:01:52.008
where we started implementing our method.

38
00:01:52.008 --> 00:01:56.008
And we can get going doing this.

39
00:01:56.008 --> 00:01:58.007
Alright so the first thing that we're going to do

40
00:01:58.007 --> 00:02:02.002
is a get object Pre signed request,

41
00:02:02.002 --> 00:02:07.004
call that request.

42
00:02:07.004 --> 00:02:08.008
And as you might imagine,

43
00:02:08.008 --> 00:02:10.009
there is a builder.

44
00:02:10.009 --> 00:02:16.000
First thing we want to do is call the get object request.

45
00:02:16.000 --> 00:02:20.004
And get object request.

46
00:02:20.004 --> 00:02:25.000
also has a builder.

47
00:02:25.000 --> 00:02:30.002
We need to pass that one, the bucket,

48
00:02:30.002 --> 00:02:33.009
and the key.

49
00:02:33.009 --> 00:02:36.005
and back our original builder,

50
00:02:36.005 --> 00:02:38.008
we set a signature duration.

51
00:02:38.008 --> 00:02:42.009
Now we could have passed that in and probably should have,

52
00:02:42.009 --> 00:02:44.005
but for the purposes of this demo,

53
00:02:44.005 --> 00:02:46.009
it's just fine to set it here.

54
00:02:46.009 --> 00:02:52.006
We'll set it to duration of 30 seconds.

55
00:02:52.006 --> 00:02:56.008
And now we have our object request.

56
00:02:56.008 --> 00:02:58.006
So now what we're going to do

57
00:02:58.006 --> 00:03:02.002
is we're going to create a pre signed get object request,

58
00:03:02.002 --> 00:03:05.003
call this one p request.

59
00:03:05.003 --> 00:03:08.006
That's going to be equal to our pre signer,

60
00:03:08.006 --> 00:03:12.004
dot pre signed get object.

61
00:03:12.004 --> 00:03:15.007
And we will send in our request.

62
00:03:15.007 --> 00:03:19.005
And at this point we have the string that we need to do.

63
00:03:19.005 --> 00:03:20.008
So,

64
00:03:20.008 --> 00:03:23.003
our result,

65
00:03:23.003 --> 00:03:26.001
is going to be equal to

66
00:03:26.001 --> 00:03:27.006
P request

67
00:03:27.006 --> 00:03:29.006
dot url

68
00:03:29.006 --> 00:03:33.000
dot to string,

69
00:03:33.000 --> 00:03:35.003
which should be returned.

70
00:03:35.003 --> 00:03:40.004
We'll put in our catch block.

71
00:03:40.004 --> 00:03:46.007
And we can now jump back down here into main.

72
00:03:46.007 --> 00:03:51.000
And now let's call app dot create pre signed URL.

73
00:03:51.000 --> 00:03:54.007
We will pass it our primary bucket

74
00:03:54.007 --> 00:03:57.005
and let's do f two.

75
00:03:57.005 --> 00:04:02.005
Now this is going to return a string,

76
00:04:02.005 --> 00:04:04.000
So we need to output that.

77
00:04:04.000 --> 00:04:08.000
So we'll just do a System dot out dot print line,

78
00:04:08.000 --> 00:04:10.006
on that URL.

79
00:04:10.006 --> 00:04:15.006
And now let's run our program.

80
00:04:15.006 --> 00:04:18.006
So now we got a URL If we click that URL,

81
00:04:18.006 --> 00:04:21.008
it will download a file.

82
00:04:21.008 --> 00:04:24.002
And if we open that file up,

83
00:04:24.002 --> 00:04:25.007
you'll see we have data.

84
00:04:25.007 --> 00:04:26.006
Since that's all there was to

85
00:04:26.006 --> 00:04:28.000
generating that preset request.

86
00:04:28.000 --> 00:04:29.007
And this is a very useful tool.

87
00:04:29.007 --> 00:04:31.002
It obviously is a little bit different

88
00:04:31.002 --> 00:04:34.009
with having to have a different object to generate that URL.

89
00:04:34.009 --> 00:04:37.005
But it's pretty straightforward once you get the hang of it.

90
00:04:37.005 --> 00:04:40.000
And of course, you're using builders everywhere.

