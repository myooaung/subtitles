WEBVTT
1
00:00:00.006 --> 00:00:03.008
- [Instructor] Now we can start digging in to the Java SDK.

2
00:00:03.008 --> 00:00:06.001
I will remind you of a couple things.

3
00:00:06.001 --> 00:00:09.001
First, there's usually more than one way to do things.

4
00:00:09.001 --> 00:00:10.007
I'm just showing you a snapshot

5
00:00:10.007 --> 00:00:13.002
of the SDK, not a full picture.

6
00:00:13.002 --> 00:00:15.007
Secondly, this is not production code.

7
00:00:15.007 --> 00:00:17.002
It's demo code.

8
00:00:17.002 --> 00:00:20.008
I'm making compromises for brevity with the Java code

9
00:00:20.008 --> 00:00:23.005
since this isn't a course on Java.

10
00:00:23.005 --> 00:00:25.008
So let's jump into our application here.

11
00:00:25.008 --> 00:00:27.006
We're going to add a whole bunch of variables

12
00:00:27.006 --> 00:00:30.007
much like we did with the Python example.

13
00:00:30.007 --> 00:00:35.009
So private static final Logger

14
00:00:35.009 --> 00:00:45.005
LOGGER equals LoggerFactory.getLogger.

15
00:00:45.005 --> 00:00:47.009
Import the logger.

16
00:00:47.009 --> 00:00:51.005
Now private static final string

17
00:00:51.005 --> 00:01:00.005
AWS_ACCESS_KEY equals AWS_ACCESS_KEY_ID.

18
00:01:00.005 --> 00:01:03.007
Now just like with Python, Java will look

19
00:01:03.007 --> 00:01:05.009
in your local directory, your local AWS

20
00:01:05.009 --> 00:01:07.009
to see if you have credentials.

21
00:01:07.009 --> 00:01:10.000
But because we at least want to show some

22
00:01:10.000 --> 00:01:12.006
of the way you will do this in a production system,

23
00:01:12.006 --> 00:01:14.002
we don't want to rely on the file system.

24
00:01:14.002 --> 00:01:18.004
So we're going to look them up from environment variables.

25
00:01:18.004 --> 00:01:20.003
And just like we did with Python,

26
00:01:20.003 --> 00:01:24.001
I am going to pass those environment variables through my IDE.

27
00:01:24.001 --> 00:01:29.002
You can export them on your local system as you see fit.

28
00:01:29.002 --> 00:01:31.001
Alright, so again, just like we did with Python,

29
00:01:31.001 --> 00:01:32.005
we've got all of these values.

30
00:01:32.005 --> 00:01:36.004
We will use them throughout this chapter.

31
00:01:36.004 --> 00:01:45.001
Now let's create an S3Client called s3.

32
00:01:45.001 --> 00:01:46.008
Because I made it final, I need

33
00:01:46.008 --> 00:01:49.007
to put a constructor on this.

34
00:01:49.007 --> 00:01:51.007
And now let's go through and we'll create

35
00:01:51.007 --> 00:01:54.004
our create bucket method.

36
00:01:54.004 --> 00:02:01.008
So public void createBucket.

37
00:02:01.008 --> 00:02:06.009
We will pass in a string that is a name.

38
00:02:06.009 --> 00:02:10.006
Include a try catch block here.

39
00:02:10.006 --> 00:02:13.005
And most of the Java SDK actually works

40
00:02:13.005 --> 00:02:15.004
very much the same way.

41
00:02:15.004 --> 00:02:20.003
So you do a CreateBucketRequest, and then

42
00:02:20.003 --> 00:02:24.008
there's a builder associated with it.

43
00:02:24.008 --> 00:02:29.002
We'll bring this out a little bit.

44
00:02:29.002 --> 00:02:33.005
Then within our builder, we want to create a bucket.

45
00:02:33.005 --> 00:02:38.002
So we'll pass in the name.

46
00:02:38.002 --> 00:02:42.003
Then on the s3 client, we will call createBucket,

47
00:02:42.003 --> 00:02:44.007
and we will pass in our request.

48
00:02:44.007 --> 00:02:48.004
Again, you're going to see most of these look the exact same.

49
00:02:48.004 --> 00:02:51.000
Let me go ahead and just catch generic exception

50
00:02:51.000 --> 00:02:52.004
because I don't really need to worry

51
00:02:52.004 --> 00:02:54.006
about exception handling.

52
00:02:54.006 --> 00:03:05.000
And we will do a LOGGER.error, error during create bucket.

53
00:03:05.000 --> 00:03:09.007
And pass out the error.

54
00:03:09.007 --> 00:03:11.002
Now the final step to what we need to do

55
00:03:11.002 --> 00:03:13.004
is go down here into our main method, we'll get rid

56
00:03:13.004 --> 00:03:16.004
of this Hello World from before.

57
00:03:16.004 --> 00:03:22.007
We will get our keys from System.

58
00:03:22.007 --> 00:03:28.004
Now we will create an AwsSessionCredentials.

59
00:03:28.004 --> 00:03:32.004
In this case, it's a create method, which is static.

60
00:03:32.004 --> 00:03:36.003
We will pass this the accessKey, the secretKey,

61
00:03:36.003 --> 00:03:41.007
and then an empty string for the session token.

62
00:03:41.007 --> 00:03:46.005
Shrink this down a little bit so you guys can see better.

63
00:03:46.005 --> 00:03:52.000
Alright, so we'll create our S3Client.

64
00:03:52.000 --> 00:03:57.001
Once again, there's a builder associated with this.

65
00:03:57.001 --> 00:03:58.009
We need to pass in a credentialsProvider,

66
00:03:58.009 --> 00:04:03.001
so we will use the StaticCredentialsProvider.create,

67
00:04:03.001 --> 00:04:06.009
and we will pass it the creds.

68
00:04:06.009 --> 00:04:09.008
Then we will build that.

69
00:04:09.008 --> 00:04:17.007
Now we will create an instance of our application.

70
00:04:17.007 --> 00:04:22.001
And we will pass it the s3.

71
00:04:22.001 --> 00:04:25.007
And now finally, we can call createBucket,

72
00:04:25.007 --> 00:04:28.006
and we will pass it the TRANSIENT_BUCKET.

73
00:04:28.006 --> 00:04:32.002
So before I run this, let's jump over to the console.

74
00:04:32.002 --> 00:04:33.007
Refresh our view, make sure that we

75
00:04:33.007 --> 00:04:35.007
don't have that bucket created.

76
00:04:35.007 --> 00:04:37.009
Run our program.

77
00:04:37.009 --> 00:04:39.000
So now that our program is done,

78
00:04:39.000 --> 00:04:40.009
we'll jump back to the console.

79
00:04:40.009 --> 00:04:43.008
Refresh our view, and there's our bucket.

80
00:04:43.008 --> 00:04:45.000
So we're good to go.

