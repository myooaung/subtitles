WEBVTT
1
00:00:00.005 --> 00:00:01.006
- [Instructor] We are now going to walk through

2
00:00:01.006 --> 00:00:04.002
a way to create a bucket in Python.

3
00:00:04.002 --> 00:00:07.000
I want to note early, and I may do so often,

4
00:00:07.000 --> 00:00:10.000
that there is usually more than one way to do this work.

5
00:00:10.000 --> 00:00:13.004
I am showing you a snapshot, an example,

6
00:00:13.004 --> 00:00:15.007
not a complete picture.

7
00:00:15.007 --> 00:00:19.003
I also want to reinforce that this isn't a course on Python.

8
00:00:19.003 --> 00:00:21.001
I'm not writing production code.

9
00:00:21.001 --> 00:00:24.004
I am writing example code to show you the SDK.

10
00:00:24.004 --> 00:00:27.003
There are many compromises I am making

11
00:00:27.003 --> 00:00:29.002
for the benefit of brevity.

12
00:00:29.002 --> 00:00:31.002
But let's go ahead and jump in.

13
00:00:31.002 --> 00:00:34.004
So, I want you to open up your Py S3 file,

14
00:00:34.004 --> 00:00:37.002
and we're going to add a few things.

15
00:00:37.002 --> 00:00:39.009
One thing that I do want to do is sort of make this

16
00:00:39.009 --> 00:00:43.000
production-like, and that is that I'm going to bring in

17
00:00:43.000 --> 00:00:48.004
through the environment the actual AWS credentials.

18
00:00:48.004 --> 00:00:53.002
Now, if we were doing this just on our machine always,

19
00:00:53.002 --> 00:00:55.009
the Bono3 library will look at the credentials file

20
00:00:55.009 --> 00:00:58.002
that we've set up for the CLI.

21
00:00:58.002 --> 00:01:01.005
But I don't want to leverage that.

22
00:01:01.005 --> 00:01:06.003
So we'll go ahead and add in a few values here.

23
00:01:06.003 --> 00:01:08.003
Now I'm going to do a few other global variables,

24
00:01:08.003 --> 00:01:12.003
so I'm going to create one called PRI bucket name

25
00:01:12.003 --> 00:01:14.008
for my primary bucket, and I want you to use

26
00:01:14.008 --> 00:01:16.006
whatever you're using for your primary bucket.

27
00:01:16.006 --> 00:01:21.002
In my case, I'm using F-P-M-L-I-L.

28
00:01:21.002 --> 00:01:24.006
I'm also going to create one called transient bucket name,

29
00:01:24.006 --> 00:01:26.004
and this is just so I've got a place to

30
00:01:26.004 --> 00:01:28.006
work with buckets themselves.

31
00:01:28.006 --> 00:01:32.006
And I'm going to call this one F-P-M-L-I-L, too.

32
00:01:32.006 --> 00:01:36.001
And again, use your own pattern when doing that.

33
00:01:36.001 --> 00:01:40.000
I'm going to create a couple of file name pointers here.

34
00:01:40.000 --> 00:01:45.003
So F1, we are going to call LIL1.txt.

35
00:01:45.003 --> 00:01:51.007
And we'll copy that over, and edit these to be two,

36
00:01:51.007 --> 00:01:55.002
and then three.

37
00:01:55.002 --> 00:01:57.006
Now, I'm going to specify a directory

38
00:01:57.006 --> 00:01:59.002
that I'm going to use for my operations,

39
00:01:59.002 --> 00:02:01.005
and in my case, it's on my desktop.

40
00:02:01.005 --> 00:02:06.002
So users, fpmoles, which is my username,

41
00:02:06.002 --> 00:02:08.007
desktop, and then S3.

42
00:02:08.007 --> 00:02:11.004
I'm also going to create a download directory

43
00:02:11.004 --> 00:02:13.004
that we'll use later on,

44
00:02:13.004 --> 00:02:18.005
and that's going to be available in users

45
00:02:18.005 --> 00:02:21.007
fpmoles desktop

46
00:02:21.007 --> 00:02:24.002
S3

47
00:02:24.002 --> 00:02:25.004
alt.

48
00:02:25.004 --> 00:02:28.002
And I need to create that directory.

49
00:02:28.002 --> 00:02:30.009
So let me copy that over.

50
00:02:30.009 --> 00:02:33.000
Make sure that directory exists on your local machine,

51
00:02:33.000 --> 00:02:35.004
so I'm going to open up a terminal,

52
00:02:35.004 --> 00:02:39.004
and I'm just going to do a mkdir at that location.

53
00:02:39.004 --> 00:02:41.005
Excellent.

54
00:02:41.005 --> 00:02:44.007
So now, we can get in some actual code here.

55
00:02:44.007 --> 00:02:48.006
So the first thing I'm going to do is replace this hello world

56
00:02:48.006 --> 00:02:52.004
with loading up our access key and our secret.

57
00:02:52.004 --> 00:02:55.008
So we're going to use the os.getenv,

58
00:02:55.008 --> 00:02:58.009
and we will leverage that access key value.

59
00:02:58.009 --> 00:03:02.007
You'll notice I need to go ahead and import OS.

60
00:03:02.007 --> 00:03:07.002
We're going to do the same for secret.

61
00:03:07.002 --> 00:03:10.002
Now, I'm going to create an instance of the S3 resource,

62
00:03:10.002 --> 00:03:16.002
and I'm going to use boto3.resource,

63
00:03:16.002 --> 00:03:19.008
and it is for S3.

64
00:03:19.008 --> 00:03:23.000
Now, I'm going to pass it,

65
00:03:23.000 --> 00:03:27.005
AWS access key ID equals access,

66
00:03:27.005 --> 00:03:33.000
and AWS secret access key will be my secret.

67
00:03:33.000 --> 00:03:35.005
And this will force the client to actually

68
00:03:35.005 --> 00:03:37.009
use those credentials that I'm passing in.

69
00:03:37.009 --> 00:03:40.003
One thing you don't want to ever do when you're writing code,

70
00:03:40.003 --> 00:03:42.005
especially in a cloud-dated environment,

71
00:03:42.005 --> 00:03:44.003
is depend on the file system.

72
00:03:44.003 --> 00:03:48.000
So like, passing these in and creating our client with them,

73
00:03:48.000 --> 00:03:50.003
it gives us the ability to pass them as environment

74
00:03:50.003 --> 00:03:53.009
variables, which is how we would do it in a real system.

75
00:03:53.009 --> 00:03:56.005
So we'll go ahead and import boto3,

76
00:03:56.005 --> 00:03:58.008
and then we're ready to create our function

77
00:03:58.008 --> 00:04:00.003
to create our bucket.

78
00:04:00.003 --> 00:04:03.004
So def create bucket,

79
00:04:03.004 --> 00:04:10.005
and we are going to pass this a name, and our S3 resource.

80
00:04:10.005 --> 00:04:14.002
I'm going to do a little try except here.

81
00:04:14.002 --> 00:04:20.002
So bucket equals S3 dot create bucket.

82
00:04:20.002 --> 00:04:24.005
And you send it in a bucket that is equal to name.

83
00:04:24.005 --> 00:04:27.006
And we're going to except a client error,

84
00:04:27.006 --> 00:04:32.004
and we'll import that here in a moment, as CE.

85
00:04:32.004 --> 00:04:35.008
And for the sake of simplicity, I'm just going to print them.

86
00:04:35.008 --> 00:04:38.004
Obviously in a production system, you'd want to log these.

87
00:04:38.004 --> 00:04:40.005
But for this purpose, it's fine.

88
00:04:40.005 --> 00:04:43.007
So, we'll go ahead and import client error.

89
00:04:43.007 --> 00:04:45.006
And now the last step that we need to do

90
00:04:45.006 --> 00:04:49.001
is go back up here in main and call that function.

91
00:04:49.001 --> 00:04:52.004
So we will call create bucket,

92
00:04:52.004 --> 00:04:54.007
and we're going to use our transient bucket name

93
00:04:54.007 --> 00:04:56.009
when we create this.

94
00:04:56.009 --> 00:04:59.001
Pass in our S3 client.

95
00:04:59.001 --> 00:05:03.000
That's everything that we need to do, with one exception.

96
00:05:03.000 --> 00:05:04.009
You need to supply the environment variables

97
00:05:04.009 --> 00:05:06.001
before you run this.

98
00:05:06.001 --> 00:05:09.008
But I can do that in Py charm in my run configuration.

99
00:05:09.008 --> 00:05:12.000
Each ID has a way to do this.

100
00:05:12.000 --> 00:05:15.006
But I put in my access and secret as environment variables

101
00:05:15.006 --> 00:05:18.003
so that I can run this with that.

102
00:05:18.003 --> 00:05:23.006
So at this case, let's go ahead and jump to the S3 console,

103
00:05:23.006 --> 00:05:28.004
just to show that we don't have any funny business going on.

104
00:05:28.004 --> 00:05:30.007
You'll see that I only have my default bucket,

105
00:05:30.007 --> 00:05:31.008
the one that we've been using.

106
00:05:31.008 --> 00:05:35.000
If I refresh, there is no bucket there.

107
00:05:35.000 --> 00:05:39.009
So we'll jump back over and we'll run our program.

108
00:05:39.009 --> 00:05:42.008
Finished with an exit code of zero, which is good.

109
00:05:42.008 --> 00:05:46.008
Jump back over here to our web browser,

110
00:05:46.008 --> 00:05:50.002
refresh our view, and you'll see that we have a bucket.

111
00:05:50.002 --> 00:05:53.009
It's a public bucket, there's no block for private.

112
00:05:53.009 --> 00:05:55.009
But that's okay, we'll get to that later.

113
00:05:55.009 --> 00:05:57.008
But for now, you'll see that we have a bucket.

114
00:05:57.008 --> 00:06:00.005
Let's go ahead and delete that bucket

115
00:06:00.005 --> 00:06:04.005
so that we don't run into issues later.

116
00:06:04.005 --> 00:06:07.003
And that's all there is to using Python

117
00:06:07.003 --> 00:06:10.000
to create a bucket in Amazon S3.

