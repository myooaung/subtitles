WEBVTT
1
00:00:00.005 --> 00:00:01.007
- [Instructor] There's a lot of variation

2
00:00:01.007 --> 00:00:05.002
of security options when dealing with S3 buckets,

3
00:00:05.002 --> 00:00:07.008
and they can all be configured to the STK.

4
00:00:07.008 --> 00:00:11.001
We're going to leverage the STK to block public access,

5
00:00:11.001 --> 00:00:12.005
like we did in the console,

6
00:00:12.005 --> 00:00:14.009
and we're going to use this as an example

7
00:00:14.009 --> 00:00:18.000
of using the STK for security purposes.

8
00:00:18.000 --> 00:00:19.009
There are obviously no way that I can show you all

9
00:00:19.009 --> 00:00:22.006
of them but this is a good example.

10
00:00:22.006 --> 00:00:27.000
So let's go back into our Python file.

11
00:00:27.000 --> 00:00:27.008
And we will create

12
00:00:27.008 --> 00:00:36.005
a new function called prevent public access.

13
00:00:36.005 --> 00:00:38.005
And we're simply going to have a bucket in order

14
00:00:38.005 --> 00:00:43.009
to do this work.

15
00:00:43.009 --> 00:00:48.009
And we will call on S3 meta client once again.

16
00:00:48.009 --> 00:00:56.004
And we're going to use a method called put public access block.

17
00:00:56.004 --> 00:01:00.007
We will send a bucket in the keyword arguments.

18
00:01:00.007 --> 00:01:03.005
We'll pass that our bucket.

19
00:01:03.005 --> 00:01:12.004
Now we need to build a public access block configuration

20
00:01:12.004 --> 00:01:15.008
which will equal a dictionary.

21
00:01:15.008 --> 00:01:18.000
Let's bring this to the next line here real quick

22
00:01:18.000 --> 00:01:22.001
so you can see me type at all.

23
00:01:22.001 --> 00:01:30.004
And in this dictionary, we will use block public ACLs.

24
00:01:30.004 --> 00:01:33.003
We'll set that equal to true.

25
00:01:33.003 --> 00:01:39.000
We will ignore public ACLs.

26
00:01:39.000 --> 00:01:42.009
Also true.

27
00:01:42.009 --> 00:01:48.007
We will block public policy.

28
00:01:48.007 --> 00:01:53.008
Also true.

29
00:01:53.008 --> 00:02:01.003
And we will restrict public buckets.

30
00:02:01.003 --> 00:02:02.006
Also true.

31
00:02:02.006 --> 00:02:04.007
Let's take a look at what those relate to.

32
00:02:04.007 --> 00:02:07.003
Jump back into the console.

33
00:02:07.003 --> 00:02:09.005
Open up our bucket.

34
00:02:09.005 --> 00:02:12.000
Go to our permissions,

35
00:02:12.000 --> 00:02:14.007
and you'll see that these ACLs mapped

36
00:02:14.007 --> 00:02:16.005
to each of these values.

37
00:02:16.005 --> 00:02:19.000
So in this bucket we have them turned on.

38
00:02:19.000 --> 00:02:21.003
You'll see that we have block all public access.

39
00:02:21.003 --> 00:02:24.003
And then the various ACL's that it's set on.

40
00:02:24.003 --> 00:02:26.009
So back in our code.

41
00:02:26.009 --> 00:02:32.007
Once we execute that command, we can accept.

42
00:02:32.007 --> 00:02:36.002
Hit client error as ce.

43
00:02:36.002 --> 00:02:41.004
And we will simply print that error.

44
00:02:41.004 --> 00:02:43.007
Now this is where you're going to see one of the big benefits

45
00:02:43.007 --> 00:02:48.005
of using the STK versus the CLI.

46
00:02:48.005 --> 00:02:51.004
So let's get rid of the uploads.

47
00:02:51.004 --> 00:02:53.000
'Cause that data should still

48
00:02:53.000 --> 00:02:55.004
be there unless you've been able to clean it up.

49
00:02:55.004 --> 00:02:57.006
We'll create that transient bucket again,

50
00:02:57.006 --> 00:03:00.007
but this time on the transient bucket,

51
00:03:00.007 --> 00:03:05.009
we're going to want to pass in a value that makes it secure.

52
00:03:05.009 --> 00:03:11.001
So let's go to our create bucket command here real quick.

53
00:03:11.001 --> 00:03:15.006
And in our create bucket command,

54
00:03:15.006 --> 00:03:18.003
I want to pass a secure value,

55
00:03:18.003 --> 00:03:23.002
with a default of false.

56
00:03:23.002 --> 00:03:27.009
So after I do my try and get my bucket,

57
00:03:27.009 --> 00:03:37.007
I want to do an if secure, prevent public access.

58
00:03:37.007 --> 00:03:41.005
We'll pass it the name, and S3.

59
00:03:41.005 --> 00:03:43.006
And we're not using that bucket so I might as well get rid

60
00:03:43.006 --> 00:03:47.006
of that, and I'm also going to use this as an opportunity

61
00:03:47.006 --> 00:03:53.008
to move this file up above main.

62
00:03:53.008 --> 00:03:58.007
Just because I want to keep it a little bit cleaner.

63
00:03:58.007 --> 00:04:02.004
And now let's go ahead and run our program.

64
00:04:02.004 --> 00:04:06.005
But, before we simply create it, we want to pass true,

65
00:04:06.005 --> 00:04:09.009
that way this bucket gets created securely.

66
00:04:09.009 --> 00:04:13.006
So run that program.

67
00:04:13.006 --> 00:04:16.000
Got an exit code of zero.

68
00:04:16.000 --> 00:04:19.005
If you see an error here that says the bucket doesn't exist,

69
00:04:19.005 --> 00:04:22.007
it may just be a case of it ran too fast for S3,

70
00:04:22.007 --> 00:04:24.008
you may have hit a throttle or something.

71
00:04:24.008 --> 00:04:28.000
If that's the case, go delete the bucket, run it again.

72
00:04:28.000 --> 00:04:30.001
It tends to happen sometimes with AWS.

73
00:04:30.001 --> 00:04:34.006
They throttle requests at weird behavior times.

74
00:04:34.006 --> 00:04:37.003
Let's go ahead and jump back into our console.

75
00:04:37.003 --> 00:04:39.001
And we'll refresh our view.

76
00:04:39.001 --> 00:04:43.002
And you'll see that I have a bucket created.

77
00:04:43.002 --> 00:04:46.000
It says that the objects can be public.

78
00:04:46.000 --> 00:04:48.008
But if you go look at the permissions of it,

79
00:04:48.008 --> 00:04:51.004
you'll see that it is blocked.

80
00:04:51.004 --> 00:04:55.004
So jump back out to the console and refresh.

81
00:04:55.004 --> 00:04:57.008
Again, that's sort of another glitch that happens sometimes

82
00:04:57.008 --> 00:04:58.008
in the console.

83
00:04:58.008 --> 00:05:01.003
It was marked as not public,

84
00:05:01.003 --> 00:05:04.001
but it showed up when you first entered as being public.

85
00:05:04.001 --> 00:05:06.004
And it just hadn't refreshed completely.

86
00:05:06.004 --> 00:05:08.000
So don't be alarmed if you jump in

87
00:05:08.000 --> 00:05:09.008
and it doesn't look right, right away.

88
00:05:09.008 --> 00:05:13.004
It could just be a matter of refreshing.

89
00:05:13.004 --> 00:05:15.005
So let's go ahead and clean up after ourselves,

90
00:05:15.005 --> 00:05:18.005
we'll delete this bucket.

91
00:05:18.005 --> 00:05:21.004
But we've now created a bucket,

92
00:05:21.004 --> 00:05:25.000
that does not allow public access, which is really good.

