WEBVTT

00:05.450 --> 00:06.710
Hello and welcome back.

00:06.740 --> 00:11.660
This lecture I want to provide a solution for our previous challenge was which was implementing the

00:11.660 --> 00:17.950
adapter design pattern using an object adapter to solve the problem of two incompatible interfaces basically

00:17.950 --> 00:21.420
a Advanced Media interface and a media player interface.

00:21.470 --> 00:23.000
Advanced Media Player interface.

00:23.120 --> 00:29.950
So we're gonna create a project we'll just name it adapter solution since solution to our challenge.

00:33.500 --> 00:37.030
And we'll call it the adapter solution

00:40.310 --> 00:43.070
we're gonna start off by creating our interfaces so we'll be right.

00:43.090 --> 00:45.740
One interface for the media player.

00:45.850 --> 00:47.810
This is the target interface.

00:48.250 --> 00:57.290
And so we'll name this media player be an interface and then we're gonna create another interface which

00:57.290 --> 01:02.320
will be our adapter he's called Advanced Media Player

01:05.640 --> 01:07.900
and this will also be actually in the supply.

01:08.000 --> 01:15.650
Good to have the interface name Vance Media Player interface will rename Media Player to media player

01:15.650 --> 01:17.780
interface as well.

01:18.200 --> 01:24.320
Player interface we have to create a couple of concrete classes for both of these we'll start with the

01:24.320 --> 01:28.010
Advanced Media Player and we're gonna create a.

01:28.310 --> 01:30.930
Actually we have to finish the implementation of these interfaces.

01:31.190 --> 01:36.350
So the Advanced Media Player has a load file name

01:41.000 --> 01:42.790
and name.

01:43.110 --> 01:47.740
And this takes a string for the following.

01:47.820 --> 01:52.740
It also has a listen method.

01:52.760 --> 01:58.330
Our media player interface got our media player interface that's good.

01:58.350 --> 02:05.270
Thought I was in the wrong file just has a play method taking an audio type

02:08.540 --> 02:09.460
and a file name

02:12.920 --> 02:15.050
but these two interfaces are incompatible.

02:15.050 --> 02:21.270
The media player interface you're gonna notice can only implement and play a certain type of files and

02:21.290 --> 02:25.120
then we'll see that when we implement these concrete classes.

02:25.250 --> 02:28.930
First let's implement the conquer class for the advanced play a media interface.

02:29.020 --> 02:37.840
We're gonna create a V L C player which implements this interface so public class v Chelsea player employ

02:37.850 --> 02:41.630
implements the Advanced Media Player interface.

02:41.830 --> 02:44.680
It's gonna have a member variable my file.

02:44.960 --> 02:52.880
We're gonna implement the overridden method the two methods in here which is public void Load File Name

02:54.360 --> 02:58.370
That takes a file name.

02:58.370 --> 02:59.450
And this is just gonna set

03:02.450 --> 03:03.830
I remember variable.

03:04.080 --> 03:07.470
So we're gonna say my file equals file name.

03:08.900 --> 03:11.950
And then the other one is going to say Have a listen method

03:15.690 --> 03:21.130
and this is going to just display some output saying it's actually playing or listening to the music.

03:21.140 --> 03:29.360
So it's kind of just hard code some information playing DLC file name

03:32.060 --> 03:35.170
is equal to my file.

03:35.570 --> 03:36.380
Pretty straightforward.

03:36.380 --> 03:38.450
That's our field C player.

03:38.450 --> 03:43.190
We're also going to have an MP for player that implements this interface and it's gonna do pretty much

03:43.190 --> 03:45.420
the exact same thing.

03:46.010 --> 03:53.520
It's just going to play MP for files so here we would have pretty much the same thing except the name

03:53.520 --> 03:56.760
of the class as MP for player.

03:56.770 --> 04:01.530
It's still going to implement this interface it's going to have its own my file it's going to load and

04:01.530 --> 04:12.200
listen the audio player that implements the media player interface is gonna play MP 3s play MP 3 so

04:12.200 --> 04:16.280
we'll just call this class public class audio player

04:20.920 --> 04:27.770
and this implements the media player interface.

04:27.770 --> 04:33.680
So this is going to have an over and method for play.

04:33.680 --> 04:36.650
This is gonna allow us to play MP 3 files.

04:36.780 --> 04:43.100
This is implemented a little bit differently and that it actually has an if statement inside there so

04:43.100 --> 04:47.840
string it takes an audio type and file name

04:51.230 --> 04:56.060
and it's gonna check what the type is and then determine whether or not to play it and if it doesn't

04:56.060 --> 04:59.120
have the right type it's going to ignore it.

05:00.200 --> 05:01.950
So we're gonna do something like this.

05:02.210 --> 05:08.860
The other type equals ignore case MP 3 play the MP 3 if it doesn't.

05:08.860 --> 05:13.500
Just say the auto type is not supported something like that.

05:14.610 --> 05:19.790
So you should notice with this implementation that the media play interface is very restrictive.

05:19.790 --> 05:22.560
It can only play MP 3s.

05:22.560 --> 05:29.380
We want to make sure that it can play advanced media like our MP force and I fixed all those red squiggles

05:29.460 --> 05:34.680
to make in what was happening was I had public in front of all the class names so those have to be in

05:34.680 --> 05:39.630
their own separate file and I don't want to do that so I just made him default access.

05:39.630 --> 05:48.340
Now we can write our adapter interface which will allow us to play other formats.

05:48.630 --> 05:58.460
So we're gonna say new Java class and we're gonna say Advanced Media Player adapter.

05:59.400 --> 06:06.900
This is going to implement a media player right here we're following the implementation of the adapter

06:06.990 --> 06:12.710
object implementation implements Media Player

06:15.980 --> 06:16.760
interface.

06:19.730 --> 06:24.140
And the first thing you need to do in the adapter is you need to have an instance of the adapter.

06:24.830 --> 06:29.600
So we're gonna say Advanced Media Player interface

06:33.860 --> 06:47.360
advanced music player our constructor is gonna set our Advanced Media Player to our instance so public

06:48.200 --> 06:58.540
Advanced Media Player adapter it's gonna take an advanced media player interface my media player

07:01.450 --> 07:09.160
and this is again just going to set our advanced music player to are my media player standard stuff

07:09.160 --> 07:10.510
for the adapter.

07:10.510 --> 07:12.970
Now we need to override our play

07:16.060 --> 07:19.340
because we're implementing the media play interface our target.

07:19.340 --> 07:24.760
So play and this remember takes a string audio type and a file name.

07:28.990 --> 07:31.440
So this is where we have to do the conversion.

07:31.660 --> 07:36.650
What we're gonna do is we're in a call a couple methods on our advanced music player.

07:36.670 --> 07:42.040
First thing we have to do for advanced music music as we first have to load the file name in order to

07:42.130 --> 07:43.800
listen to the music.

07:44.020 --> 07:45.820
So we're gonna say Load File name

07:50.920 --> 07:58.590
until essence load file name with the one passed in and then we're gonna say listen

08:00.990 --> 08:04.320
and I have to select the right one.

08:04.420 --> 08:05.200
Listen.

08:05.530 --> 08:05.780
All right.

08:05.800 --> 08:10.690
That's doing our conversion whenever we call play on the media play interface and we want to play advanced

08:10.690 --> 08:17.560
music use the adapter that's going to first load the file and then listen whereas before the media player

08:17.560 --> 08:21.170
interface always had different implementation right.

08:21.460 --> 08:22.680
You had to use the audio type.

08:23.200 --> 08:26.110
We don't need that for the adapter.

08:26.320 --> 08:33.950
So our last thing is to create our client you Java class client which demonstrates the use of the adapter.

08:34.180 --> 08:36.010
We're gonna create a new media player

08:39.730 --> 08:50.380
Media Player interface sorry you say audio player and this is going to be just a new audio player and

08:50.380 --> 08:51.790
then we're gonna try to play that.

08:51.850 --> 09:03.100
So we're gonna say audio player that play and we're gonna play let's make sure audio player play we

09:03.100 --> 09:04.450
need to have the sort of main method

09:08.080 --> 09:14.570
which I always forget.

09:15.160 --> 09:16.440
Here we go.

09:20.810 --> 09:26.620
So now we can play our audio player and we're gonna play type which is MP 3.

09:26.620 --> 09:34.090
It's only one that's supported in this particular player and we're just going to play you know Jason's

09:34.720 --> 09:36.390
music.

09:36.730 --> 09:42.070
And MP 3 we also want to play other formats.

09:42.070 --> 09:46.510
So in this case we're gonna create some new MP forms and some new V LC players.

09:46.510 --> 09:51.710
Now we're only gonna play be able to play that through the interface by using the adapter.

09:52.000 --> 09:57.790
So first we need to create our MP for player which we'll do here.

09:57.790 --> 10:06.040
So we're gonna say Advanced Media Player interface MP for player Media Player interface which is our

10:06.040 --> 10:16.290
adapter scroll this over remember the adapter just takes the concrete class and then we're going to

10:16.530 --> 10:18.370
try to play it.

10:18.570 --> 10:22.920
So we should be able to call a play on the right one.

10:22.950 --> 10:31.560
So we say Advanced Media Player adapter 1 that play and then we can do it again for our v LC player.

10:31.560 --> 10:37.390
We create a new V LC player instance we pass that into our adapter and we hit play.

10:38.340 --> 10:41.160
So here we just do something similar.

10:41.160 --> 10:42.780
Make sure they're the interface

10:46.110 --> 10:49.670
Advanced Media Player interface.

10:50.010 --> 10:52.710
The Chelsea player and I had to spell it correctly

10:55.450 --> 10:59.240
and then also our media player interface.

11:00.210 --> 11:05.880
And then again we play this with just some kind of name.

11:07.140 --> 11:07.480
All right.

11:07.540 --> 11:14.640
Advanced Media Player adapter 2 that play DLC with quick quotations

11:17.220 --> 11:25.420
and just some far far away so we could then try playing another format that's not supported in open

11:25.440 --> 11:31.380
display matches saying it's not supported so let's try to play something like Navy file here we would

11:31.380 --> 11:37.860
just say Advanced Media Player adapter to not play v DLC and that will hit the if statement inside of

11:38.040 --> 11:42.010
the audio player and it will not play it.

11:42.390 --> 11:54.090
All right so here we would say play it would try to load and listen and it would fail.

11:54.090 --> 11:59.760
Actually this one when use the adapter would try to play it using the audio player so this would be

12:01.590 --> 12:02.660
audio player.

12:03.750 --> 12:11.790
Now if we try to build us and run it we should see we're playing an empty three file while playing a

12:11.860 --> 12:16.990
v LC file and are playing another v LC file so something's wrong here.

12:16.990 --> 12:19.340
Should be safe playing MP for file.

12:19.620 --> 12:21.090
It looks like we may have.

12:21.310 --> 12:24.460
Yeah we've got out the wrong string for the MP for.

12:24.460 --> 12:25.410
Forgot to update that.

12:25.420 --> 12:34.010
So I should say I'm for and then if we build and run it we'll see the correct output which is good.

12:34.010 --> 12:40.010
We're playing an MP 3 file before file v LC file then we've invalid media format but we're using the

12:40.010 --> 12:41.990
adapter very nicely.

12:41.990 --> 12:49.270
So now the client can use the media player interface to play other types and be foreign v LC So that's

12:49.270 --> 12:54.990
an easy solution for the adapter design pattern implementing it an object adapter.

12:55.130 --> 12:58.090
Felt this was helpful if you have any questions you can ask in the Q and A.

12:58.090 --> 12:58.610
Thank you.
