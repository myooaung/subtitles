WEBVTT

00:05.440 --> 00:06.340
Hello and welcome back.

00:06.370 --> 00:08.000
I have a challenge for you.

00:08.050 --> 00:13.540
This challenge is going to test your understanding of the state design pattern nice little application

00:13.540 --> 00:16.930
here that demonstrates the state design pattern.

00:16.930 --> 00:18.650
It's not too complex.

00:19.000 --> 00:22.820
Basically Suppose we want to simulate the alert status of a mobile phone.

00:23.130 --> 00:27.130
Right the phone can be either in a vibration state or a silent state.

00:27.130 --> 00:30.760
This is typical something that I'm sure you're familiar with.

00:30.760 --> 00:36.570
Based on this alert state the behavior of the mobile device changes when an alert happens.

00:36.580 --> 00:36.910
Right.

00:36.910 --> 00:41.330
The behavior is going to be different if it's in vibration or silence state.

00:41.440 --> 00:45.790
So the steps to create this application is you need to create the state interface that would be your

00:45.790 --> 00:49.600
first step and that should contain an alert method.

00:49.810 --> 00:54.540
Then you need to create the context they should have a reference to the state interface.

00:54.780 --> 00:58.610
It should have a set state method an alert method alert.

00:58.630 --> 01:04.040
We'll use the state reference to invoke the correct instance method the correct state object denote

01:04.060 --> 01:10.760
dynamically right through polymorphism and then you need to create two concrete state classes one for

01:10.760 --> 01:16.810
vibration and one for silent each alert method can simply display a default message.

01:16.850 --> 01:17.890
The phone is in silent.

01:17.930 --> 01:19.550
The phone is in vibration.

01:19.550 --> 01:21.850
Again a very straightforward application.

01:21.860 --> 01:25.320
The state design pattern this is honestly pretty easy to implement.

01:25.340 --> 01:30.890
You just have those concrete state objects and the contexts is just gonna invoke the right object dynamically

01:31.400 --> 01:37.160
and this is very closely related to the strategy pattern which we'll show you next in the next section.

01:37.160 --> 01:41.570
Last thing you need to do is you need to create a client class that creates a context object and sets

01:41.570 --> 01:45.640
its various states while also issuing alerts.

01:45.710 --> 01:52.330
And so here's some Example output vibration Vibration state changes goes in the silent still in silence

01:52.330 --> 01:58.170
still in silent and you can modify obviously have different output and maybe play around a little bit

01:58.170 --> 02:01.620
more to make it a little more interesting but these are the basic requirements.

02:01.710 --> 02:02.970
Please let me know if you have any questions.

02:02.970 --> 02:03.510
Thank you.

02:03.630 --> 02:03.990
Thank you.
