WEBVTT

00:05.760 --> 00:06.570
Hello and welcome back.

00:06.570 --> 00:10.250
In this lecture I want to test your knowledge of the adapter everything you learned in this section.

00:10.410 --> 00:11.960
So I have a little assignment little challenge.

00:13.980 --> 00:18.590
So what I want to do is I want you to implement the adapter pattern for an application that plays media.

00:18.810 --> 00:21.940
You're going to need to implement the pattern using an object adapter.

00:22.170 --> 00:26.430
So you're going to use composition has a relationship.

00:26.430 --> 00:31.950
You need to create a media player interface in a concrete class named audio player audio player is going

00:31.950 --> 00:33.870
to implement this interface.

00:33.870 --> 00:39.600
The media play interface contains a single method named play it takes a string for audio type and a

00:39.600 --> 00:45.490
string for file name audio player can play MP 3 format audio files.

00:45.490 --> 00:46.550
That's the audio type.

00:46.570 --> 00:47.410
By default

00:51.300 --> 00:57.690
you need to create another interface named Advanced Media Player and concrete classes v LC player and

00:57.690 --> 01:01.280
MP for player v LC player and MP for player.

01:01.290 --> 01:06.610
Implement the Advanced Media Player interface to different interface than the media player.

01:06.690 --> 01:12.790
The Advanced Media Player interface includes two methods Load File Name and listen Load File Name takes

01:12.790 --> 01:14.020
a string representing the file name.

01:14.020 --> 01:20.710
Listen to listen we'll use the file name member variable to listen to audio and these classes can play

01:20.710 --> 01:24.370
v LC in MP format files.

01:24.700 --> 01:30.610
We want to make the media player play other formats in addition to the audio player so we need to create

01:30.610 --> 01:35.570
an adapter that adapts the imbalance to media player to a media player.

01:35.620 --> 01:36.940
That's the goal for this assignment.

01:39.520 --> 01:44.010
You're going to need to create an adapter class named Advanced Media Player adapter.

01:44.140 --> 01:49.180
You need to implement the media player interface right because that's the target should you.

01:49.170 --> 01:53.880
You should use advanced media player object to listen to the required format.

01:53.890 --> 01:54.970
That's the competition right.

01:54.970 --> 01:56.180
That's the adapter.

01:56.200 --> 02:02.230
The Advanced Media Player you're adapting the Advanced Media Player to the target which is a media player.

02:02.230 --> 02:06.490
So you want to set the Advanced Media Player remember object via the media adapter constructor.

02:06.490 --> 02:08.680
So we haven't previous examples.

02:08.680 --> 02:14.230
The Advanced Media Player adapter play method takes the desired audio type as input handle a file name

02:15.040 --> 02:20.290
it does not know the actual class which can play the desired format it invokes the load file name and

02:20.290 --> 02:22.270
listen methods how it works.

02:24.370 --> 02:27.850
The adapter pattern demo is the demo class or the client.

02:27.850 --> 02:34.870
The client will use the media player class to play various formats so who their participates in this

02:34.870 --> 02:35.830
challenge.

02:35.860 --> 02:37.930
The target is the media player.

02:37.960 --> 02:42.430
Remember this defines the low main specific interface that the client will use the client or interact

02:42.430 --> 02:42.990
with.

02:43.240 --> 02:46.180
The ultimate target is the media player.

02:46.180 --> 02:53.610
The client is going to collaborate with objects conforming to the target interface so MP for v LC are

02:53.610 --> 02:55.260
the clients they implement.

02:55.260 --> 03:01.110
The Advanced Media Player interface right now those are incompatible with the media Interface Media

03:01.110 --> 03:01.680
Player interface.

03:01.680 --> 03:09.770
We cannot play IP for or V LC audio so this client needs to collaborate with the Advanced Media Player

03:09.770 --> 03:12.980
adapter which conforms to the media player interface

03:15.830 --> 03:20.830
the adapter is gonna be the one that defines an existing interface that needs adapting.

03:20.880 --> 03:23.550
That's the Advanced Media Player that's seen her face.

03:23.550 --> 03:31.060
That's the adaptive the adapter is who's gonna adopt the interface of the adapt to the target interface.

03:31.290 --> 03:37.170
So the Advanced Media Player adapter is gonna adopt the Advanced Media Player to the media player interface

03:37.740 --> 03:39.930
and that's the goal for the assignment.

03:39.930 --> 03:43.810
Knowing the participants you should be apply this pattern quite easily.

03:43.830 --> 03:48.390
I gave you a lot of information in the beginning to show you how the hierarchy works and show you how

03:48.890 --> 03:52.100
the different concrete class is implementing the interfaces that are incompatible.

03:52.800 --> 03:55.490
If you run the program here is some example output.

03:55.500 --> 04:01.650
You just want to play some audio files so you would demonstrate that you're able to play multiple audio

04:01.650 --> 04:05.420
files through the media player interface using the adapter.

04:05.460 --> 04:10.410
So here we're just saying you play we're able to play an IP 3 file and we display the name we able to

04:10.410 --> 04:17.250
play an MP for file with the name and VRC file with the name and then we also had invalid media because

04:17.250 --> 04:19.030
we tried to play something with API.

04:19.070 --> 04:24.030
But there was no adapter that allowed us to have an advanced media player to play API with the media

04:24.030 --> 04:24.890
player interface.

04:26.190 --> 04:28.320
These are the goals for the challenge.

04:28.380 --> 04:35.460
Again demonstrating your knowledge of the adapter design padding pattern using an object adapter using

04:35.460 --> 04:42.220
composition and we know our two interfaces that are and supported and we know are adapting an adapter.

04:42.270 --> 04:43.490
Thank you and good luck.
