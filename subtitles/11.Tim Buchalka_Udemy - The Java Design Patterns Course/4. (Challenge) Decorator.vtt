WEBVTT

00:05.380 --> 00:06.940
Hello and welcome back.

00:07.060 --> 00:12.700
In this lecture I want to test your knowledge of the decorative design pattern so I'm providing an opportunity

00:12.700 --> 00:14.880
here for you to complete an assignment.

00:14.890 --> 00:20.310
This is our challenge on the decorator the requirements of this assignment are that you're going to

00:20.310 --> 00:25.500
use the Decorator pattern to add additional functionality to an application that draws various shapes

00:27.470 --> 00:32.970
and so you should be familiar again shapes as a nice example because it has a lot of different types.

00:33.350 --> 00:38.100
So we can use it for you know inheritance and things like that.

00:38.120 --> 00:42.410
So what I want you to do is you'll need to create a component interface.

00:42.410 --> 00:49.340
We know the decorator consist of a component interface an abstract decorator a concrete component and

00:49.340 --> 00:51.770
then those concrete decorators that extend the functionality.

00:52.090 --> 00:59.240
So you need to create all of those and you're required to create a shape interface that will be the

00:59.240 --> 01:06.010
component in this case and you can add a simple Draw method to that shape interface.

01:06.040 --> 01:09.640
You're also required to implement those concrete classes implementing the shape interface.

01:09.640 --> 01:11.440
These are the concrete components.

01:11.470 --> 01:15.970
This is what you want to add additional functionality to the two concrete components for the assignment

01:15.990 --> 01:18.460
or rectangle and circle.

01:18.560 --> 01:22.580
You can implement the draw by just displaying some default string now it doesn't have to be real logic

01:22.580 --> 01:23.390
in this.

01:23.390 --> 01:29.770
You're going to extend this drawer and your decorators so you're required to create an abstract decorator

01:29.770 --> 01:33.970
class name shape decorator that will implement the shape interface.

01:34.030 --> 01:38.860
We'll have the draw method and it will have a shape object as its instance variable because that's all

01:38.860 --> 01:45.520
the Decorator pattern works you're required to create some concrete decorator classes.

01:45.520 --> 01:47.600
You can do anything you really why here.

01:47.770 --> 01:49.740
I suggest maybe adding some colors.

01:50.260 --> 01:55.960
So red shape decorator green Chapstick decorator but you need to add additional functionality such as

01:55.960 --> 02:00.080
setting a color or a border or changing style.

02:00.460 --> 02:05.620
You can come up with any real additional functionality that you feel fit that we could add something

02:05.620 --> 02:11.440
to the drawing capability of a shape so it can be anything it doesn't have to be colors on the last

02:11.440 --> 02:16.390
thing you have to do is you have to create a client that uses the decorator to decorate shape objects.

02:16.390 --> 02:18.610
You can add additional functionality to your drawing.

02:19.240 --> 02:23.410
Here's some example output and again this is just examples so it doesn't have to be exactly like this

02:24.280 --> 02:28.540
but I'm demonstrating the additional functionality with the decorator.

02:28.540 --> 02:35.080
I'm drawing a circle with a normal border specifying what the shape is and then have additional functionality

02:35.950 --> 02:40.630
because the draw method in the component classes they're just going to draw a circle.

02:40.630 --> 02:48.380
Nothing else I'm adding additional functionality in my decorators to draw a maybe a red border or a

02:49.790 --> 02:54.580
you know a red rectangle so a red border for a circle or a red border for a rectangle.

02:54.580 --> 02:55.480
That's what I decided.

02:55.610 --> 03:01.450
But again feel free to modify and do whatever you want and your decorator if you can think of additional

03:01.450 --> 03:04.010
functionality that report into drawing a shape.

03:04.330 --> 03:05.120
Good luck.

03:05.230 --> 03:10.000
I'll provide a solution in the next lecture on implementing the decorative design pattern for the shape

03:10.000 --> 03:10.510
concept.

03:10.510 --> 03:10.900
Thank you.
