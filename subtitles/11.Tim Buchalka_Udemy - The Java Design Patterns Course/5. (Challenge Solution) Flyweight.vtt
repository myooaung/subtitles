WEBVTT

00:05.350 --> 00:10.090
Loan welcome back in this lecture I want to provide a solution to the challenge from the previous lecture

00:10.090 --> 00:14.780
which is implementing the fly pattern to simulate a counterstrike game.

00:14.830 --> 00:20.170
Basically are players wouldn't want to create a new instance for every single player.

00:20.290 --> 00:25.630
We want to share them and so we're gonna use the fly away to share common characteristics and then use

00:25.630 --> 00:29.410
extreme Tech Data to have not common characteristics.

00:30.340 --> 00:37.980
So we're gonna name this flyweight solution.

00:38.890 --> 00:42.370
First thing we want to do is we want to create this flyaway interface.

00:42.370 --> 00:48.490
This will contain remember the extrinsic data and the interface that the concrete shared fly which we

00:48.490 --> 00:49.210
use.

00:49.540 --> 00:52.590
It's going to say new Java class.

00:52.600 --> 00:58.500
This is gonna be called player and this is gonna be an interface.

00:58.570 --> 01:05.340
This is gonna have a method for extrinsic data extrinsic.

01:05.340 --> 01:06.030
I can spell that.

01:06.020 --> 01:07.430
It's also a hard word to say by the way

01:11.090 --> 01:13.070
and this is just gonna be it a sine weapon

01:16.850 --> 01:17.530
string weapon

01:20.460 --> 01:25.300
and then we're going to also have our mission method in here.

01:26.090 --> 01:27.170
Something like that.

01:27.320 --> 01:29.780
We then need to create our concave fly weights.

01:29.780 --> 01:30.860
These are gonna be shared.

01:30.950 --> 01:43.360
We're gonna have a terrorist and a counterterrorist so we're gonna say class terrorist implements player

01:46.090 --> 01:53.670
and the intrinsic attribute here is gonna be our task.

01:53.670 --> 02:02.020
This is gonna be a private final String task and then we're gonna have we're going to store our extrinsic

02:02.020 --> 02:09.070
state which usually is stored in the client but for testing purposes we're going to store it in here.

02:09.100 --> 02:15.580
This is gonna be our weapon so we can use the weapon on our mission instead of having to pass it to

02:15.580 --> 02:16.030
the mission.

02:17.620 --> 02:26.200
So we're gonna say private String weapon and then our constructor

02:30.030 --> 02:32.940
is going to set the task.

02:32.940 --> 02:34.460
So here we're just going to whoops

02:37.320 --> 02:46.650
here we're just going to say our task equals plant plan a bomb something

02:49.520 --> 02:54.140
and we have to implement our assigned weapon.

02:54.140 --> 02:55.670
So gonna say assign a weapon

02:59.420 --> 03:04.440
which takes a string for the weapon.

03:04.760 --> 03:10.640
This is going to set our member variable stop weapon equals weapon.

03:13.800 --> 03:16.320
And then our mission is just gonna print out some hard coded data.

03:17.010 --> 03:22.860
So going gonna say public void mission doesn't take any parameters no data and arguments.

03:22.860 --> 03:30.300
And this is just good how hard code some basically the terrorists the weapon they're using.

03:31.410 --> 03:33.990
Terrorists with weapon

03:36.900 --> 03:54.400
class weapon plus we're just gonna plus the weapon and then we'll say task is plus task something like

03:54.400 --> 03:54.580
that

03:57.540 --> 04:04.720
and then we're gonna end our class for our player are there fly away is gonna be shared as the counterterrorist

04:05.620 --> 04:07.870
which is gonna be very similar to this.

04:08.200 --> 04:09.790
Someone to do some cutting and pasting

04:14.110 --> 04:20.200
and this one is gonna be called Counter Terrorist.

04:20.200 --> 04:22.700
This is going to have a task and a weapon.

04:22.860 --> 04:24.130
It's not going to plan a bomb.

04:24.130 --> 04:27.850
It's going to defuse a bomb.

04:27.880 --> 04:34.900
Fuse about it's going to sign the weapon and instead of saying terrorists it's gonna say counterterrorist

04:39.440 --> 04:45.860
counter terrorist with weapon weapon and task so forth.

04:45.890 --> 04:47.890
Now we need to create the factory.

04:47.930 --> 04:49.940
This is gonna just be called a player factory

04:53.070 --> 04:54.240
player factory

04:57.930 --> 05:03.880
and this needs to store a hash map so that it can do the lock up and get really similar to a singleton.

05:04.950 --> 05:09.650
Except that it's not implemented as a single it uses things in the hash map.

05:10.050 --> 05:15.230
So we're gonna store all of our reference objects for terrorists and counterterrorist in the stash map.

05:15.300 --> 05:27.260
Private static hash map the hash map is going to be a string and a player we'll call it H M

05:29.850 --> 05:37.920
and this is gonna say new hash map string player.

05:37.920 --> 05:40.410
This will be initialized the class loading time.

05:40.770 --> 05:42.940
We're going to have a method to get a player.

05:42.960 --> 05:47.730
This is our factory method.

05:47.730 --> 05:49.380
So we're gonna say give player.

05:49.380 --> 05:50.460
We're gonna pass and the type

05:53.610 --> 06:02.100
we're gonna initialize local variable to null and we're going to check if the object is already stored

06:02.460 --> 06:05.910
for counter terrorist or terrorists and if it is we're gonna return the reference.

06:05.910 --> 06:11.300
So we're gonna say if a gem that contains key and the key would be the type.

06:11.970 --> 06:18.480
And if it does we will set the player to the type from the hash table.

06:18.510 --> 06:24.550
So we'll say get and we'll just say type something like that.

06:24.550 --> 06:34.010
Else we're going to have to create an object so we're going to switch on the type and do something like

06:34.010 --> 06:34.340
this

06:38.780 --> 06:39.800
with our bracket.

06:39.920 --> 06:45.410
So we're gonna say switch on the type if it's a terrorist we're gonna put up print out terrorist created

06:45.410 --> 06:50.460
and create a new terrorist if it's a counter terrorist we're gonna print out counterterrorist create

06:50.490 --> 06:59.260
and create new counter terrorists right in regardless of what it is we're gonna put it in to a hash

06:59.260 --> 07:07.170
table and you might say well the default if you read the default they pass and something else it's going

07:07.160 --> 07:12.610
to be stored in the hash table but we're gonna make sure the client smart so we're gonna put the type

07:14.710 --> 07:21.460
and the P in the hash table so we can manage our shared objects and then we're gonna return p we want

07:21.460 --> 07:24.800
to make sure that it's in the right spot.

07:24.820 --> 07:35.660
We're going to turn P and then close our method and close our class.

07:35.750 --> 07:37.090
There we go.

07:37.100 --> 07:39.220
Now we need to create the client.

07:39.770 --> 07:41.630
It's a new class

07:44.350 --> 07:44.850
client.

07:44.870 --> 07:49.190
We should by name this counter strike.

07:49.370 --> 07:55.250
And in here this is going to get all the players the types and the weapons and we're gonna use a create

07:55.250 --> 07:58.740
a helper method for getting a random weapon.

07:58.760 --> 08:04.380
So here we're going to get all player types and used by get random and random weapons.

08:04.400 --> 08:11.380
So we're gonna create a couple static variables player type and a bunch of weapons gloss to create objects

08:11.380 --> 08:13.060
quicker.

08:13.060 --> 08:18.820
So we have player types terrorist counterterrorist and we have weapons a bunch of different weapons

08:20.410 --> 08:24.530
and I guess those are weapons don't let's say Desert Eagle I'm not sure what that is.

08:24.540 --> 08:29.520
But AK 47 I know Maverick I don't know.

08:29.520 --> 08:32.490
There must be I must be a gun not a gun guy

08:35.310 --> 08:37.800
but let's have our static void main

08:42.810 --> 08:45.990
and then we can go through and create a bunch of objects.

08:46.170 --> 08:50.220
So we're gonna assume that we have a total of 10 players in the game so we're gonna write a for loop

08:51.360 --> 08:58.100
that creates 10 players or shares to share a certain amount of players to give player is gonna call

08:58.100 --> 09:00.600
a helper function to get random players.

09:00.830 --> 09:05.630
So we may have so get random player well defined in the second and then we're gonna also assign random

09:05.630 --> 09:07.350
weapons.

09:07.880 --> 09:12.290
So we're going to do something like this sign random weapons are going to create two helper methods

09:12.320 --> 09:13.640
and then we're gonna send them on the mission

09:17.710 --> 09:19.970
do something like that.

09:19.970 --> 09:22.040
This needs to be inside the for loop

09:25.540 --> 09:33.170
and we're gonna close our for loop we're gonna close our main close our class and then write our helper

09:33.170 --> 09:40.840
methods to get random player type just going to return a random at and do some mapping.

09:40.840 --> 09:47.510
So again I like to put my methods above the main.

09:47.520 --> 09:53.760
So these are a couple utility methods get random player type uses the Random class returns one or two

09:54.360 --> 09:59.260
and then it's gonna look it up in the array 1 or 2 or 0 or 1 I'm sorry.

09:59.250 --> 10:06.610
Should we should return 0 or 1 terrorists or counterterrorist and so we're just mapping random integers

10:06.610 --> 10:14.250
to array indices themes gonna same thing is going to happen for the random weapon except here will generate

10:14.880 --> 10:15.570
zero to 4

10:20.630 --> 10:22.340
five should not be inclusive.

10:22.350 --> 10:25.540
Two should not be inclusive to be exclusive.

10:27.180 --> 10:29.450
Because you have an array index out of bounds.

10:29.460 --> 10:30.860
OK.

10:31.130 --> 10:32.070
And that's our client.

10:32.730 --> 10:34.260
So now let's see if we compile

10:37.460 --> 10:47.360
and I do have an error like usual I forgot to change the constructor num name.

10:47.380 --> 10:51.110
Try this again okay.

10:51.120 --> 10:53.120
Now when we run our client

10:57.240 --> 10:59.140
we can see the flyway in action.

10:59.340 --> 11:04.990
So we created 10 objects can see we create a counterterrorist the first time and then we reuse the counterterrorist

11:05.040 --> 11:06.510
with an AK 47.

11:06.690 --> 11:10.680
We create a terrorist the first time and then we use the terrorists every time after that we shared

11:10.680 --> 11:18.760
an object with a different extrinsic data a different weapon and every time you run this it should be

11:18.760 --> 11:22.780
a little bit more random with the weapons and the players create it right.

11:25.070 --> 11:27.950
See although random is not always random.

11:27.950 --> 11:31.380
There we go that's a little better but you get the gist.

11:31.420 --> 11:35.890
This is demonstration of the flyway design pattern a solution if you have any questions please ask him

11:35.890 --> 11:37.840
in the Q and A thank you.
