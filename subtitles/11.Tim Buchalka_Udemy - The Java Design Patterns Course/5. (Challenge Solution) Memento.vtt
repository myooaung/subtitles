WEBVTT

00:05.330 --> 00:06.020
Hello and welcome.

00:06.050 --> 00:10.910
In this lecture we're going to provide a solution to the challenge from the previous lecture which was

00:10.910 --> 00:13.490
implementing the momento design pattern.

00:13.490 --> 00:19.910
It's gonna be a simple application with simple state data and saved restore points so we can do multiple

00:19.910 --> 00:21.140
save points.

00:21.170 --> 00:24.860
We're gonna call this application the momento solution

00:27.980 --> 00:30.140
as far as our previous ones have been.

00:30.320 --> 00:32.660
The first thing we're gonna do is we're gonna create a memento.

00:32.710 --> 00:38.240
Now normally or last time I should say the momento was an entire class.

00:38.240 --> 00:42.800
It does not have to be it's a little more restrictive when it is a memento CLASS BUT IT DOESN'T NEED

00:42.800 --> 00:46.230
TO BE THIS IS GONNA DUPLICATE the state from the originator.

00:46.340 --> 00:51.570
And the only state data in the originator is gonna be a private String state.

00:51.620 --> 00:54.800
Again this is a generic example.

00:54.800 --> 01:01.700
And so the constructor is gonna take and set that state so public momento string state.

01:03.680 --> 01:10.880
And it's just gonna say this dot state equals state and then we're going to have a get method to retrieve

01:10.880 --> 01:13.970
that state.

01:14.270 --> 01:15.110
So get state

01:17.720 --> 01:22.100
return state very simple momento class.

01:22.160 --> 01:25.520
Our next step would be to create their originator class.

01:25.520 --> 01:34.400
So now we're gonna say new Java class and that's gonna be our originator.

01:34.550 --> 01:39.620
This is also a public class and it's gonna mimic has to have the same state as the momento or else it

01:39.620 --> 01:40.690
wouldn't work.

01:40.730 --> 01:42.190
So we just have state.

01:42.590 --> 01:49.090
We're gonna have a set and a guest state for the state common encapsulation.

01:49.090 --> 01:49.340
Right.

01:49.340 --> 01:52.010
Private member variables public and sets.

01:52.160 --> 01:54.950
And then we want to have a safe state to mental.

01:54.980 --> 01:59.030
And when we same state to the mentor we just create a new mental object.

01:59.630 --> 02:05.210
So this method name is gonna be safe state to momento to momento sorry and we're gonna say return new

02:05.210 --> 02:11.290
momento with the State of the current object how the originator.

02:11.480 --> 02:17.750
And then we're gonna get the state from the mental as well and so we'll create a method called get state

02:17.750 --> 02:22.640
from a mental well you pass in the memento and you get the state in the restore.

02:22.670 --> 02:26.860
This is really a restore method as well.

02:26.990 --> 02:34.520
We also have to create the caretaker class it's say new I'm going to say caretaker and remember this

02:34.520 --> 02:38.000
is gonna control an access to mental.

02:38.210 --> 02:43.390
It has limited access it really just passes around him a mental the originator has full access.

02:43.770 --> 02:45.960
This is gonna have a list of store points.

02:45.960 --> 02:50.820
So we have to create a list there's a private list that's gonna be momento objects.

02:50.820 --> 02:53.670
It's gonna be our mental list

02:56.910 --> 03:02.070
and we're gonna instantiate that class loading time so we're just gonna make it an array list.

03:02.070 --> 03:10.770
And again it contains all mental like that we're gonna have an add method which will add to the list

03:12.250 --> 03:19.410
and we're gonna have a get method which will get from the list so we can restore previous states.

03:19.720 --> 03:28.860
So our add method just takes Memento and adds it to the list our get method is gonna take an index so

03:28.860 --> 03:31.730
that we can retrieve a certain state a certain store point.

03:32.700 --> 03:36.730
So it just calls get on the list for the index passed in.

03:37.050 --> 03:40.970
Last thing we need to do is create our client.

03:40.990 --> 03:49.090
So now we're gonna say new job class client and this is gonna have a main method and we'll have to test

03:49.090 --> 03:53.110
the mettle on the caretakers by saving multiple states and then trying to restore them.

03:54.160 --> 04:01.020
So public static void main String args.

04:01.780 --> 04:03.790
And we're gonna need to create an originator.

04:03.940 --> 04:08.840
We'll just call this originator and we'll see a new originator.

04:09.040 --> 04:12.150
We're gonna create a caretaker.

04:12.160 --> 04:18.070
We'll call this caretaker and say new caretaker.

04:18.070 --> 04:22.060
And what we're gonna do is we're gonna start setting states when we set the states new mementos are

04:22.060 --> 04:23.340
gonna be created.

04:23.380 --> 04:32.290
So we're just gonna basically set a couple states and then we're gonna add those states to be saved.

04:32.290 --> 04:37.270
So those are store points so we're gonna set a state for state number one we're gonna set a state for

04:37.270 --> 04:44.180
state number two and then we're gonna save state number two because we're only saving at periodic times.

04:44.260 --> 04:49.030
We're not going to save every single state though the way we set state state number two is we say caretaker

04:49.030 --> 04:56.090
not add added to the list and then we get the originator safe we get the originator safe state to memento.

04:56.110 --> 04:56.320
Right.

04:56.320 --> 05:03.370
So if we look at the originator this just created a new Memento and we save it we could write some more

05:03.370 --> 05:07.450
states and save some more every save points.

05:07.450 --> 05:13.290
We'll actually have a state three and a state four that will save it as well.

05:13.300 --> 05:16.040
So here again we have we're setting a new state.

05:16.240 --> 05:20.860
We're gonna save that to our caretaker using the momento.

05:20.860 --> 05:24.080
And we're also going to set a state for but we're not going to save it.

05:24.100 --> 05:30.110
So now we want to print out our current state the last thing we can do is we can start restoring.

05:30.140 --> 05:35.450
So we're first going to restore our first save state point.

05:35.570 --> 05:41.150
We can do that by getting the state from a month from the mental calling that method on the originator

05:41.570 --> 05:43.880
and passing in the first state.

05:43.880 --> 05:47.800
Then we can display that first safe state.

05:47.990 --> 05:55.430
We can do it again for another saved state save state one and restore that state as well.

05:55.430 --> 05:57.290
Something like that.

05:57.290 --> 06:01.710
So when we call get state from a mental right.

06:01.780 --> 06:06.550
What we're doing is we're restoring the state of the originator.

06:06.550 --> 06:08.950
So we just need to make sure our names are correct.

06:09.190 --> 06:14.740
And then this demonstrates how we can save and restore states using a momento if we compile this and

06:14.740 --> 06:20.560
run it you'll see the different restore points being set back after we've retrieve them.

06:21.450 --> 06:31.540
Let's go ahead and run our client and we'll see the current state is going to be state number four.

06:31.570 --> 06:35.240
We didn't restore anything yet but we did save a couple of states.

06:35.470 --> 06:37.880
We saved state 2 and state 3.

06:38.050 --> 06:43.330
And so now we're going to actually restore our state to the first stage state which is state 2 and we

06:43.330 --> 06:49.520
say well we've changed our mind we're not going to restore it to state 1 and that state number three.

06:49.640 --> 06:52.090
So this is a governmental solution to our challenge.

06:52.130 --> 06:54.070
If you have any questions please let me know.

06:54.230 --> 06:54.980
Otherwise thank you.
