WEBVTT
1
00:00:00.006 --> 00:00:02.003
- [Instructor] The sidecar pattern is used

2
00:00:02.003 --> 00:00:05.000
to offload processing of some kind

3
00:00:05.000 --> 00:00:07.006
to a separate module.

4
00:00:07.006 --> 00:00:09.003
With the sidecar pattern,

5
00:00:09.003 --> 00:00:13.004
you deploy the sidecar as a module associated

6
00:00:13.004 --> 00:00:15.005
with every applicable microservice

7
00:00:15.005 --> 00:00:19.003
in your architecture in order to offload the processing

8
00:00:19.003 --> 00:00:21.001
through a single deployment.

9
00:00:21.001 --> 00:00:24.008
The sidecar pattern is more about removing repetitive code

10
00:00:24.008 --> 00:00:28.004
across services than anything else.

11
00:00:28.004 --> 00:00:30.000
The reason that it is helpful

12
00:00:30.000 --> 00:00:31.007
in a microservices architecture

13
00:00:31.007 --> 00:00:33.008
is things like logging, monitoring

14
00:00:33.008 --> 00:00:36.000
and network services can be offloaded

15
00:00:36.000 --> 00:00:37.009
to a separate module.

16
00:00:37.009 --> 00:00:40.004
So essentially, the problem we are solving

17
00:00:40.004 --> 00:00:42.001
is repeating code paths

18
00:00:42.001 --> 00:00:46.004
that don't have to be accomplished through repeating code.

19
00:00:46.004 --> 00:00:49.006
The details of design is actually very straightforward.

20
00:00:49.006 --> 00:00:52.002
You start with the process itself.

21
00:00:52.002 --> 00:00:53.009
The key here is that you need

22
00:00:53.009 --> 00:00:56.004
to write the module specific enough

23
00:00:56.004 --> 00:00:58.005
for your immediate needs

24
00:00:58.005 --> 00:01:00.000
while being generic enough

25
00:01:00.000 --> 00:01:02.001
for other parts of your system.

26
00:01:02.001 --> 00:01:04.008
This really is the hardest part of sidecars

27
00:01:04.008 --> 00:01:07.001
because you have to be willing to get it wrong

28
00:01:07.001 --> 00:01:09.003
before you get it right.

29
00:01:09.003 --> 00:01:10.009
Once the design is in place,

30
00:01:10.009 --> 00:01:12.009
you simply write your code.

31
00:01:12.009 --> 00:01:14.006
Most runtimes that you would use

32
00:01:14.006 --> 00:01:16.009
with a microservices architecture

33
00:01:16.009 --> 00:01:20.005
have sidecar processes or strategies depending

34
00:01:20.005 --> 00:01:22.007
on how they containerize or provide access

35
00:01:22.007 --> 00:01:24.008
to that runtime.

36
00:01:24.008 --> 00:01:27.007
The next step is simply to schedule your sidecar

37
00:01:27.007 --> 00:01:30.007
to deploy with the appropriate service.

38
00:01:30.007 --> 00:01:32.004
Most of the time, this is accomplished

39
00:01:32.004 --> 00:01:36.008
via the parent service manifest or service definition.

40
00:01:36.008 --> 00:01:39.004
Now, the sidecar's a relatively easy pattern

41
00:01:39.004 --> 00:01:40.005
but at this point,

42
00:01:40.005 --> 00:01:43.008
once you deploy it, the functionality should just appear.

43
00:01:43.008 --> 00:01:46.002
You never have to actually modify the code

44
00:01:46.002 --> 00:01:48.003
of your main service application

45
00:01:48.003 --> 00:01:50.001
and that's really where the power is

46
00:01:50.001 --> 00:01:51.008
because as we implement one piece

47
00:01:51.008 --> 00:01:55.000
of functionality, if that piece of functionality now needs

48
00:01:55.000 --> 00:01:56.003
to live somewhere else,

49
00:01:56.003 --> 00:01:59.003
we simply upload the sidecar with that element

50
00:01:59.003 --> 00:02:02.003
and that it will inherit that functionality.

51
00:02:02.003 --> 00:02:04.008
So let's take a look here at a quick visualization

52
00:02:04.008 --> 00:02:07.000
of the sidecar pattern itself.

53
00:02:07.000 --> 00:02:09.002
We're going to start with three microservices sitting

54
00:02:09.002 --> 00:02:11.000
in our visual network.

55
00:02:11.000 --> 00:02:12.006
Now, we add our first sidecar

56
00:02:12.006 --> 00:02:15.002
and in this case, it's the logging sidecar,

57
00:02:15.002 --> 00:02:17.000
to each service.

58
00:02:17.000 --> 00:02:18.007
Note how the representation here

59
00:02:18.007 --> 00:02:22.000
is very focused on containerized deployments

60
00:02:22.000 --> 00:02:25.000
as this is usually how sidecars work.

61
00:02:25.000 --> 00:02:27.008
We actually are deploying these process elements,

62
00:02:27.008 --> 00:02:32.002
these sidecar elements to the parent process itself.

63
00:02:32.002 --> 00:02:35.005
But we're getting the benefits of the sidecar everywhere

64
00:02:35.005 --> 00:02:39.000
while not writing code in each service.

65
00:02:39.000 --> 00:02:41.003
Now, we're going to go ahead and add another sidecar.

66
00:02:41.003 --> 00:02:43.004
This time, a monitoring one.

67
00:02:43.004 --> 00:02:46.001
Again, applying it to each service

68
00:02:46.001 --> 00:02:48.003
and once again, we are uploading it

69
00:02:48.003 --> 00:02:50.000
as part of the parent service

70
00:02:50.000 --> 00:02:51.006
when we do the deployment.

71
00:02:51.006 --> 00:02:54.005
So all of these run within a single process

72
00:02:54.005 --> 00:02:57.004
though they are very distinct modules.

73
00:02:57.004 --> 00:02:58.003
Now, the last step

74
00:02:58.003 --> 00:03:00.007
is that we're going to add a security sidecar

75
00:03:00.007 --> 00:03:02.006
but this time, we're only going to apply it

76
00:03:02.006 --> 00:03:04.007
to one of our services.

77
00:03:04.007 --> 00:03:07.004
And this is really the power of sidecars.

78
00:03:07.004 --> 00:03:09.003
You pick and choose where you want

79
00:03:09.003 --> 00:03:11.000
to apply the functionality

80
00:03:11.000 --> 00:03:12.008
and simply apply it.

81
00:03:12.008 --> 00:03:16.002
As long as your sidecar is written generic enough,

82
00:03:16.002 --> 00:03:19.000
you can apply it anywhere and that service

83
00:03:19.000 --> 00:03:22.002
will automatically inherit that functionality

84
00:03:22.002 --> 00:03:24.000
through a single process

85
00:03:24.000 --> 00:03:25.005
and that's what we want to achieve

86
00:03:25.005 --> 00:03:29.000
because now as I scale each one of these services,

87
00:03:29.000 --> 00:03:31.009
the sidecars come along for the ride for free

88
00:03:31.009 --> 00:03:35.000
and we inherit all that functionality once again.

