1
00:00:01,930 --> 00:00:05,750
Hello everyone and welcome to this new section in this lecture.

2
00:00:05,800 --> 00:00:11,550
I'm going to walk you through a completely different completely new concept so call it functions OK

3
00:00:12,040 --> 00:00:17,320
functions is actually very very important when it comes to any programming language and merely python

4
00:00:17,350 --> 00:00:22,570
in particular because it enables us to do and kind of

5
00:00:26,750 --> 00:00:31,790
because it enables us to simply run the code in a very very efficient way.

6
00:00:31,790 --> 00:00:32,060
All right.

7
00:00:32,150 --> 00:00:36,250
So let's take a look at what you mean by function first and let's see how can we define a function.

8
00:00:36,380 --> 00:00:38,970
Let's it's how can we actually call that function.

9
00:00:38,990 --> 00:00:40,640
So let's take a look at the definition first.

10
00:00:40,670 --> 00:00:41,560
Zoom in a little bit.

11
00:00:41,570 --> 00:00:47,590
So a function is a block of code that can run whenever it's called by the main function for example.

12
00:00:47,600 --> 00:00:53,100
So think of a function as just just a couple of lines of code that have been separated.

13
00:00:53,120 --> 00:00:53,720
All right.

14
00:00:53,720 --> 00:00:59,390
Just think of them as maybe two or three lines of code that let's say some two numbers to each other

15
00:01:00,110 --> 00:01:01,390
and they are put on the side.

16
00:01:01,460 --> 00:01:07,010
And every time you wanted to call that function you just call it by its name.

17
00:01:07,160 --> 00:01:14,990
So you go ahead execute this couple of lines and then go back to the main actual main code without having

18
00:01:14,990 --> 00:01:18,190
to kind of repeat the exact same code several times.

19
00:01:18,190 --> 00:01:18,440
All right.

20
00:01:18,530 --> 00:01:19,940
I know it might be a little bit confusing.

21
00:01:19,940 --> 00:01:22,970
Let's take a quick example and let's see how can we do that.

22
00:01:22,970 --> 00:01:29,680
Let's assume that I wanted for example to let's say print for instance hello world.

23
00:01:29,930 --> 00:01:31,980
Let's say three times OK.

24
00:01:32,150 --> 00:01:35,580
So what I could do is I could do a for loop or K or like a while loop.

25
00:01:35,600 --> 00:01:35,790
OK.

26
00:01:35,810 --> 00:01:36,770
But I'm not going to go there.

27
00:01:36,770 --> 00:01:38,180
I'm going to do it in a function format.

28
00:01:38,810 --> 00:01:40,820
So I got to say OK I'm going to define a function.

29
00:01:40,900 --> 00:01:45,110
So I going to say def and let's say again I call it my function.

30
00:01:45,130 --> 00:01:55,170
All right and I'm going to say print let's say hello world hello world all right.

31
00:01:55,590 --> 00:01:56,730
So what happened here.

32
00:01:56,760 --> 00:01:59,350
So simply put what I've done here is to define the function.

33
00:01:59,370 --> 00:01:59,700
OK.

34
00:01:59,700 --> 00:02:02,250
And they call this function my function.

35
00:02:02,270 --> 00:02:02,540
All right.

36
00:02:02,550 --> 00:02:05,540
So in order to define a function you have to use def space.

37
00:02:05,550 --> 00:02:07,610
And then I lost my function here.

38
00:02:07,630 --> 00:02:07,970
Right.

39
00:02:07,980 --> 00:02:12,750
And if this function takes any parameters I actually list the parameters any in here the arguments taken

40
00:02:12,750 --> 00:02:14,700
in here in these parentheses.

41
00:02:14,700 --> 00:02:14,960
All right.

42
00:02:15,660 --> 00:02:18,610
If I leave it empty that mean that function will not going to take anything.

43
00:02:18,690 --> 00:02:19,440
OK.

44
00:02:19,740 --> 00:02:21,560
And then what does this function do.

45
00:02:21,570 --> 00:02:24,090
This function simply does print Hello World.

46
00:02:24,090 --> 00:02:24,900
All right looks good.

47
00:02:25,530 --> 00:02:29,220
So if I run it you'll find that something nothing happened.

48
00:02:29,220 --> 00:02:30,510
We didn't print anything.

49
00:02:30,510 --> 00:02:30,740
OK.

50
00:02:30,750 --> 00:02:31,200
Why.

51
00:02:31,200 --> 00:02:34,240
Because I haven't called that function yet.

52
00:02:34,240 --> 00:02:34,500
What.

53
00:02:34,530 --> 00:02:35,350
By calling the function.

54
00:02:35,340 --> 00:02:41,070
Now I wanted to call the function so I can OK my underscore function.

55
00:02:41,170 --> 00:02:41,590
That's it.

56
00:02:41,590 --> 00:02:42,220
That's what we.

57
00:02:42,220 --> 00:02:43,630
That's basically the function calls.

58
00:02:43,630 --> 00:02:48,880
If I do shift enter would get hello world which means you simply when you do my function that means

59
00:02:48,880 --> 00:02:54,280
you're calling the function you are saying OK let's leave that lines of the code go up here to the function

60
00:02:54,370 --> 00:02:56,080
and execute the body of the function.

61
00:02:56,140 --> 00:02:58,210
And that's why we're getting print Hello World.

62
00:02:58,210 --> 00:02:59,610
So if I do it again.

63
00:02:59,770 --> 00:03:03,020
I don't need to do and go ahead and do print Hello World again.

64
00:03:03,220 --> 00:03:06,250
I can maybe just do this copy and paste.

65
00:03:06,250 --> 00:03:10,270
So you really just you know change for example the call of the function for instance.

66
00:03:10,300 --> 00:03:10,740
OK.

67
00:03:10,800 --> 00:03:11,310
All right.

68
00:03:11,800 --> 00:03:12,400
Let's take a look.

69
00:03:12,400 --> 00:03:17,260
This obviously is a very simple example you don't know what kind of realize the power of the functions.

70
00:03:17,320 --> 00:03:23,260
Let's assume that I wanted to let's say define a function that function takes a number and square that

71
00:03:23,260 --> 00:03:23,660
number.

72
00:03:24,100 --> 00:03:24,460
All right.

73
00:03:24,490 --> 00:03:27,670
So how can we say when you do that then that.

74
00:03:27,750 --> 00:03:28,780
Well let's see how can

75
00:03:32,760 --> 00:03:33,170
all right.

76
00:03:33,200 --> 00:03:38,270
So let's assume that I wanted to define a function and that function takes a number and simply return

77
00:03:38,630 --> 00:03:40,380
the square of that number.

78
00:03:40,550 --> 00:03:41,480
Let's say can we do that.

79
00:03:41,480 --> 00:03:47,010
So we're going to say OK define so again I'm defining function you can call the function wherever he'd

80
00:03:47,030 --> 00:03:48,590
call the squared.

81
00:03:48,590 --> 00:03:50,660
And that function will take an argument x.

82
00:03:50,840 --> 00:03:51,770
Ok.

83
00:03:52,070 --> 00:03:53,590
And the function would return.

84
00:03:53,600 --> 00:03:58,790
So I have to write the return the function would return x square.

85
00:03:58,850 --> 00:03:59,830
All right shift enter.

86
00:03:59,820 --> 00:04:00,230
Here we go.

87
00:04:00,230 --> 00:04:01,610
Now I define the function.

88
00:04:01,670 --> 00:04:02,370
Nothing happened.

89
00:04:02,370 --> 00:04:02,630
Why.

90
00:04:02,630 --> 00:04:04,630
Because I didn't call the function yet.

91
00:04:04,670 --> 00:04:07,910
So let's see how can we call the function to call the function.

92
00:04:07,910 --> 00:04:10,990
I'm gonna say okay please call it with its name to call the function.

93
00:04:10,990 --> 00:04:18,150
I'm gonna call it with exact same name squared of black activists who do this and instead of X. Let's

94
00:04:18,150 --> 00:04:20,550
say in gonna past let's say number three for instance.

95
00:04:20,590 --> 00:04:21,950
So shift enter shift enter.

96
00:04:21,960 --> 00:04:22,490
Here we go.

97
00:04:22,500 --> 00:04:26,460
Now I basically obtain the square number of three and 49.

98
00:04:26,580 --> 00:04:29,940
So let's say if I do four shift enter and become sixteen.

99
00:04:29,940 --> 00:04:31,640
And so on so forth.

100
00:04:31,640 --> 00:04:36,090
And that's pretty much how we define a function what we send to the function is are called arguments.

101
00:04:36,090 --> 00:04:40,410
These are arguments these are variable that I send to the function and these are kind of the returns.

102
00:04:40,410 --> 00:04:43,040
That's what we get back out of that function.

103
00:04:43,050 --> 00:04:43,300
All right.

104
00:04:43,670 --> 00:04:44,400
OK.

105
00:04:44,490 --> 00:04:46,650
You can actually put that in for example let's say

106
00:04:49,260 --> 00:04:51,020
output for instance.

107
00:04:51,040 --> 00:04:57,120
So if you do that then output will have the actual value came back from the function the return of the

108
00:04:57,120 --> 00:04:58,810
function which is 16 in this case.

109
00:04:59,590 --> 00:05:00,110
All right.

110
00:05:00,240 --> 00:05:00,500
OK.

111
00:05:00,540 --> 00:05:02,400
I'll get what I want you guys to do.

112
00:05:02,430 --> 00:05:08,100
Please go ahead pause the video and I want you to define a function and that function simply takes a

113
00:05:08,100 --> 00:05:11,120
number OK and multiplied by ten.

114
00:05:11,150 --> 00:05:11,460
All right.

115
00:05:11,550 --> 00:05:13,320
So I want to please go ahead pause a video.

116
00:05:13,320 --> 00:05:18,510
Define a function call it whatever call it multiply for example and maybe test that function let's say

117
00:05:18,510 --> 00:05:22,060
with three core values let's say 10 20 and 30 again.

118
00:05:22,080 --> 00:05:26,400
The objective of the function is to take a number and multiplied by 10.

119
00:05:26,460 --> 00:05:31,770
Pause the video and I'll see you guys after the challenge all right.

120
00:05:31,770 --> 00:05:36,450
Hope you guys were able to figure out the challenge will ask us to do is to simply define a function

121
00:05:36,540 --> 00:05:39,180
and that function is what we call it let's say multiply

122
00:05:42,480 --> 00:05:49,810
and that function takes a value X and what it does it simply return x times 10 which is what it asked

123
00:05:49,810 --> 00:05:50,440
us to do.

124
00:05:50,470 --> 00:05:50,790
Right.

125
00:05:50,790 --> 00:05:52,840
So it's some it simply takes a number.

126
00:05:52,990 --> 00:05:58,330
Ed the the value time stench of entry we go and let's test it.

127
00:05:58,360 --> 00:06:05,590
So to test it with exabytes names we're gonna say multiply and we're going to pass along let's say number

128
00:06:05,590 --> 00:06:10,900
three for instance ship entry we go we come back three let's say return let's say nine or come back

129
00:06:10,900 --> 00:06:17,200
with 90 let's say 10 and you come back with 100 that means the function works like a charm.

130
00:06:17,220 --> 00:06:17,790
Perfect.

131
00:06:18,570 --> 00:06:18,990
OK.

132
00:06:19,500 --> 00:06:21,830
Let's take a look at another example.

133
00:06:22,140 --> 00:06:27,570
Let's assume that I wanted to again define a function and that function takes specific you know like

134
00:06:27,690 --> 00:06:32,270
like parameter but I need to set a kind of a default value within my function.

135
00:06:32,400 --> 00:06:33,180
What do you mean by this.

136
00:06:33,180 --> 00:06:34,000
Let's take a look.

137
00:06:34,110 --> 00:06:35,130
So I can define a function.

138
00:06:35,160 --> 00:06:37,930
This function is call I can call it my function.

139
00:06:38,040 --> 00:06:39,690
This function takes an age.

140
00:06:39,690 --> 00:06:42,960
Let's say we define it as an age.

141
00:06:43,020 --> 00:06:43,920
OK.

142
00:06:43,920 --> 00:06:50,010
And what the function does is simply print and it print simply something like this.

143
00:06:50,010 --> 00:06:53,800
I am let's say whatever age.

144
00:06:53,880 --> 00:06:54,720
Years old.

145
00:06:55,160 --> 00:06:55,900
OK.

146
00:06:56,130 --> 00:07:00,740
And said Dot format you as a member and here are going to pass along my agent here.

147
00:07:00,740 --> 00:07:01,620
Shift entry we go.

148
00:07:01,620 --> 00:07:02,410
Looks good.

149
00:07:02,640 --> 00:07:09,790
And what I'm going to do I'm going to say my function my function and I can pass along maybe like 30

150
00:07:09,790 --> 00:07:13,870
years or entry we go and say I am 30 years old.

151
00:07:13,870 --> 00:07:14,180
All right.

152
00:07:14,390 --> 00:07:15,080
Okay looks great.

153
00:07:15,550 --> 00:07:17,820
Maybe I tested with let's say 60 seconds.

154
00:07:17,830 --> 00:07:18,040
Okay.

155
00:07:18,100 --> 00:07:19,920
I am 60 years old it's on.

156
00:07:19,980 --> 00:07:20,210
OK.

157
00:07:20,290 --> 00:07:21,250
So what's new here.

158
00:07:21,250 --> 00:07:26,380
I haven't said anything new so what I wanted to do here is I wanted to show you guys how can we set

159
00:07:26,440 --> 00:07:27,970
a default value.

160
00:07:27,970 --> 00:07:32,820
So if I say for example age equals to let's say 20.

161
00:07:32,920 --> 00:07:38,430
That means that age is the default value which means if I call that function.

162
00:07:38,430 --> 00:07:45,010
So if I come here and they say my function and I didn't pass any parameter in here.

163
00:07:45,010 --> 00:07:45,680
All right.

164
00:07:45,850 --> 00:07:46,990
The functional will still work.

165
00:07:46,990 --> 00:07:50,670
What is the function is as normal but it will set the default value.

166
00:07:51,370 --> 00:07:52,260
So let's run it.

167
00:07:52,280 --> 00:07:52,830
And here we go.

168
00:07:52,830 --> 00:07:59,500
I'm getting I am 20 years old which means that if you set within the parameter here that's a specific

169
00:07:59,500 --> 00:08:00,130
number.

170
00:08:00,340 --> 00:08:03,970
And you didn't send anything from the mean then you were going to go ahead and set the default.

171
00:08:03,970 --> 00:08:07,140
However if I call the function and let's say put 30 here.

172
00:08:07,330 --> 00:08:11,250
This will override right that means you sent arguments you sent parameters here.

173
00:08:11,290 --> 00:08:16,630
When you call the function then that would overcome the default if you don't send anything.

174
00:08:16,630 --> 00:08:17,700
We're just gonna use the default.

175
00:08:17,710 --> 00:08:18,970
That's all what it is.

176
00:08:19,540 --> 00:08:24,250
All right okay let's take a look at another example.

177
00:08:24,590 --> 00:08:29,660
Let's assume that I wanted to for instance duplicate what the default parameters.

178
00:08:29,760 --> 00:08:35,840
OK so I wanted to let's say define a function that function takes a summation so or perform the summation

179
00:08:35,840 --> 00:08:43,460
to the functions called summation and the function takes X equals X and let's say Y Okay.

180
00:08:44,000 --> 00:08:49,730
And the function returns x plus y entering go looks good.

181
00:08:49,970 --> 00:08:55,010
And what I wanted to do is I want to call that function summation and that function simply sums the

182
00:08:55,010 --> 00:09:00,170
two numbers and let's say 3 and 8 shift enter you come up with 11.

183
00:09:00,320 --> 00:09:06,890
Okay so what I want you guys to do is to please go ahead pause the video adjust this function somehow

184
00:09:07,370 --> 00:09:13,370
so it can return a default value of 100 at all times.

185
00:09:13,970 --> 00:09:14,350
OK.

186
00:09:14,360 --> 00:09:21,330
So please go ahead pause the video and I'll see you guys after the challenge.

187
00:09:21,390 --> 00:09:21,810
All right.

188
00:09:21,860 --> 00:09:28,290
Hope you guys were able to figure out the challenge will ask us to do is to simply define a set of default

189
00:09:28,320 --> 00:09:30,350
parameters or default values here.

190
00:09:30,350 --> 00:09:36,540
So I ask has to do is defined summation here and instead of sending parameters c or eight if you don't

191
00:09:36,540 --> 00:09:37,200
send anything.

192
00:09:37,200 --> 00:09:40,090
So if you said let's see summation and you leave it leave it empty.

193
00:09:40,190 --> 00:09:42,500
Okay I need to set default parameters here.

194
00:09:42,530 --> 00:09:48,590
So what I'm going to do when I said let's say set for example one hundred and let's say Y equals to

195
00:09:48,590 --> 00:09:55,320
zero which means at all times the return parameter will gonna be value of 100 let's run it let's run

196
00:09:55,320 --> 00:09:55,500
it.

197
00:09:55,500 --> 00:09:56,640
Same answer run it.

198
00:09:56,640 --> 00:09:57,600
And here we go.

199
00:09:57,600 --> 00:09:59,550
We'll come back with a default parameter of hundred.

200
00:09:59,550 --> 00:09:59,820
Why.

201
00:09:59,820 --> 00:10:02,560
Because I didn't send any arguments from the function.

202
00:10:02,760 --> 00:10:04,910
So the default values will prevail.

203
00:10:04,980 --> 00:10:09,570
So hundred plus zero is one hundred and that would be the failure to value return back to the mean.

204
00:10:10,160 --> 00:10:11,470
All right.

205
00:10:11,530 --> 00:10:12,160
OK.

206
00:10:12,480 --> 00:10:14,330
Let's take a look at other example.

207
00:10:14,520 --> 00:10:19,410
Let's assume that I want it for example to define That's a greeting function in that greeting function

208
00:10:19,890 --> 00:10:25,470
doesn't take one parameter actually she takes two parameters let's say happy new year for example Mitch

209
00:10:25,560 --> 00:10:28,050
I wish you let's say happiness something like that.

210
00:10:28,170 --> 00:10:35,130
The second to do that Mizuki define greetings underscore function and the function takes let's say the

211
00:10:35,130 --> 00:10:38,570
name and take takes Li let's say the greetings.

212
00:10:38,870 --> 00:10:39,160
All right.

213
00:10:39,900 --> 00:10:49,440
And the function what it does just print like Happy New Year and it's a pass along the name.

214
00:10:49,440 --> 00:10:49,890
All right.

215
00:10:49,900 --> 00:10:57,160
I wish you for example happiness for instance I'm going to say dot format and we're gonna pass along

216
00:10:57,160 --> 00:11:01,870
here the name and pass along our greetings enter.

217
00:11:01,880 --> 00:11:04,960
Looks good so what is the call.

218
00:11:04,960 --> 00:11:06,540
So now I'm going to call the function.

219
00:11:06,580 --> 00:11:10,830
I'm going to come here to copy this without the column.

220
00:11:10,830 --> 00:11:12,690
So now I call the function reading function.

221
00:11:12,690 --> 00:11:17,490
Now I can pass whatever name I want so I'm going to say OK I'm going to pass along let's say.

222
00:11:17,640 --> 00:11:21,290
Ryan for example and the greetings are going to pass along.

223
00:11:21,300 --> 00:11:28,170
I wish you let's say happiness something of this shift enter shift enter here we go.

224
00:11:28,170 --> 00:11:31,740
Happy New Year Ryan wish you happiness and so on so forth.

225
00:11:31,740 --> 00:11:32,380
All right.

226
00:11:32,850 --> 00:11:33,180
OK.

227
00:11:33,210 --> 00:11:38,730
So what I want you guys to do is to please go ahead pause a video and please maybe wish for example

228
00:11:38,760 --> 00:11:44,190
you know your loved ones just pick whatever name and wish them any I wish like like let's say health

229
00:11:44,190 --> 00:11:45,620
wealth whatever.

230
00:11:45,630 --> 00:11:51,930
All right go ahead pause the video and I'll see you guys after the challenge.

231
00:11:51,940 --> 00:11:52,290
All right.

232
00:11:52,300 --> 00:11:57,880
So ask us to do is to simply go ahead call the function so greetings function and pass along whatever

233
00:11:57,880 --> 00:11:58,210
name.

234
00:11:58,210 --> 00:12:06,070
So for example Layla for instance I'm going to pass along let's say whatever heat wealth shift entry

235
00:12:06,080 --> 00:12:07,200
we go happy.

236
00:12:07,260 --> 00:12:08,420
Layla wish you well.

237
00:12:08,550 --> 00:12:09,620
It's again pretty much the same.

238
00:12:09,620 --> 00:12:14,340
We just changed the arguments that I sent over here to the art to the function.

239
00:12:14,370 --> 00:12:14,640
All right.

240
00:12:15,720 --> 00:12:17,870
OK let's take a look at one more example.

241
00:12:17,870 --> 00:12:24,800
Let's assume that I wanted to define a function and that function simply returns.

242
00:12:24,800 --> 00:12:26,550
Let's say the radius of a circle.

243
00:12:26,560 --> 00:12:27,360
OK.

244
00:12:27,500 --> 00:12:30,590
And maybe return let's say the area of a circle as well.

245
00:12:30,740 --> 00:12:30,960
OK.

246
00:12:30,960 --> 00:12:34,330
We can have a lot more examples when it comes to the exercise section.

247
00:12:34,330 --> 00:12:38,600
Here it is just a quick kind of you know like warming up example.

248
00:12:38,690 --> 00:12:46,520
So I'm going to take a fine and I'm gonna call it circle and here the circle takes simply the radius

249
00:12:46,520 --> 00:12:48,260
are all right.

250
00:12:48,260 --> 00:12:51,170
And the function simply returns what I wanted to do.

251
00:12:51,320 --> 00:12:56,500
I want to return actually to parameters I wanted to return the the that the diameter first.

252
00:12:56,570 --> 00:13:03,600
So then there would be two times are and I wanted as well to return the area which is pi R squared.

253
00:13:03,710 --> 00:13:10,140
So I'm gonna say OK I wanted to return three point 1 4 times r squared.

254
00:13:10,510 --> 00:13:10,780
OK.

255
00:13:10,790 --> 00:13:16,220
You can actually do that here in this format.

256
00:13:16,220 --> 00:13:25,920
So I'm gonna turn three point one four times the R times times to all right.

257
00:13:25,970 --> 00:13:26,780
Okay looks good.

258
00:13:26,920 --> 00:13:27,420
Enter.

259
00:13:27,430 --> 00:13:28,790
Here we go.

260
00:13:28,790 --> 00:13:32,570
And let's go ahead here and maybe test it's going to say circle.

261
00:13:32,650 --> 00:13:34,720
I'm gonna pass along let's say 2.

262
00:13:34,750 --> 00:13:35,590
Here we go.

263
00:13:35,590 --> 00:13:39,890
Now I came up with simply the the diameter which is 4.

264
00:13:40,060 --> 00:13:45,390
And then I'm gonna come up with the area which is pi R squared of the circle.

265
00:13:45,490 --> 00:13:46,550
All right.

266
00:13:46,600 --> 00:13:47,020
Okay.

267
00:13:47,080 --> 00:13:49,180
And that's pretty much all what I have for this lecture.

268
00:13:49,180 --> 00:13:51,400
I hope you guys enjoyed it.

269
00:13:51,400 --> 00:13:53,070
Let's recap all of them so far.

270
00:13:53,130 --> 00:13:57,910
This in this section we're able to learn what how what are what functions are what do they do.

271
00:13:58,000 --> 00:14:03,280
Now we know how to define a function how to send arguments to the function get something out of the

272
00:14:03,280 --> 00:14:06,490
function we're able to set as well default parameters.

273
00:14:06,490 --> 00:14:11,110
If we don't send anything from the main what's going to happen here we know that now we know as well

274
00:14:11,110 --> 00:14:16,420
how can we let's say it's and two arguments like strings and print them out and you're able as well

275
00:14:16,420 --> 00:14:23,080
to maybe return more than one parameter using the return parentheses and that should conclude our lecture.

276
00:14:23,080 --> 00:14:26,170
Best of luck and I'll see you guys in the next lecture.
