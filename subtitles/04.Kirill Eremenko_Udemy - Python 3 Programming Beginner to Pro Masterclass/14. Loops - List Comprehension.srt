1
00:00:00,630 --> 00:00:03,270
Hello everyone and welcome to this new lecture.

2
00:00:03,480 --> 00:00:09,660
The biggest lecture we're able to cover the basics of for loops and we cover a couple of kind of special

3
00:00:09,730 --> 00:00:15,390
keywords such as how to do break how to break a loop how to continue within loop and we've covered as

4
00:00:15,390 --> 00:00:21,000
well a couple of the advanced topics within loops which is how to perform nested loops which is kind

5
00:00:21,000 --> 00:00:22,360
of a loop inside the loop.

6
00:00:22,380 --> 00:00:22,730
All right.

7
00:00:23,210 --> 00:00:30,660
And this section for going to learn kind of an advanced liberal advanced topic or so-called list comprehension.

8
00:00:31,140 --> 00:00:31,960
OK.

9
00:00:32,110 --> 00:00:36,680
All right let's take a look at the description first and then I'm going to take a look at an example.

10
00:00:36,690 --> 00:00:38,110
All right so let's comprehension.

11
00:00:38,220 --> 00:00:43,160
Kind of as an elegant tool is used to transform one list into another.

12
00:00:43,170 --> 00:00:50,310
OK so let's assume that I have for instance a list and I want to take that list and let's say square

13
00:00:50,340 --> 00:00:52,270
each element within that list.

14
00:00:52,410 --> 00:00:52,680
Right.

15
00:00:52,680 --> 00:00:55,280
I have two options to do it or have two ways of doing it.

16
00:00:55,290 --> 00:01:02,160
First one is to simply create another list and go ahead and do a loop within each specific element within

17
00:01:02,160 --> 00:01:03,480
the first list.

18
00:01:03,480 --> 00:01:06,810
Take it square it and append it and put it in a different list.

19
00:01:06,810 --> 00:01:07,450
All right.

20
00:01:07,560 --> 00:01:11,740
This is kind of a very basic way of doing it and actually going to start by doing that basic way.

21
00:01:11,850 --> 00:01:16,920
And I will show you how can we use list comprehension to make it way way 10 times even easier.

22
00:01:17,250 --> 00:01:17,460
All right.

23
00:01:17,970 --> 00:01:21,480
Let's take a look at an example let's assume I am going to use the exact same example that I listed

24
00:01:21,490 --> 00:01:28,400
so going to take a minute my list equals two let's say one two one two three and four.

25
00:01:28,520 --> 00:01:32,050
And when I wanted to do was to simply square each element in here.

26
00:01:32,160 --> 00:01:37,710
So simple ways say OK this is my input list I'm going to create an out list right.

27
00:01:37,860 --> 00:01:40,140
And I'm going to create it as an empty first.

28
00:01:40,380 --> 00:01:44,940
I'm gonna go ahead create a loop for element in my list.

29
00:01:44,970 --> 00:01:50,250
So every time I will go in my list and here grab an element which is gonna be element here maybe one

30
00:01:50,250 --> 00:01:53,540
and then two and then three and then four every time I'll take it.

31
00:01:53,580 --> 00:01:54,320
Right.

32
00:01:54,540 --> 00:01:56,110
I'm going to dig that element.

33
00:01:56,160 --> 00:01:56,610
All right.

34
00:01:56,610 --> 00:01:58,230
I'm going to square it.

35
00:01:58,230 --> 00:01:59,060
That's how to square it.

36
00:01:59,070 --> 00:01:59,280
Right.

37
00:01:59,940 --> 00:02:04,980
And when I need to do is to take the square of the element and append it it's kind of you know think

38
00:02:04,980 --> 00:02:10,020
of it this concatenation just taking the element and append it to my list the element the next element

39
00:02:10,020 --> 00:02:11,930
and append it to the list and so on.

40
00:02:12,090 --> 00:02:13,360
So to do that I'm going to say okay.

41
00:02:13,380 --> 00:02:20,670
Output on the score list dot append and even append that new element to my list in here.

42
00:02:21,110 --> 00:02:21,930
Okay.

43
00:02:22,050 --> 00:02:22,780
All right.

44
00:02:22,800 --> 00:02:30,260
And afterwards after I'm done the loop I'm just gonna go here and print my new output the score list.

45
00:02:30,270 --> 00:02:31,150
All right.

46
00:02:31,470 --> 00:02:34,020
Again let's let's actually it and see what's happened shift enter.

47
00:02:34,530 --> 00:02:34,790
Okay.

48
00:02:34,800 --> 00:02:38,670
So now do we have a problem because Out list actually called output list.

49
00:02:38,670 --> 00:02:40,110
My apologies.

50
00:02:40,110 --> 00:02:44,100
And here actually it's call it output lists shift enter.

51
00:02:44,100 --> 00:02:44,830
Here we go.

52
00:02:45,210 --> 00:02:51,070
So as you can see here this is the original list was given this was one two three four.

53
00:02:51,210 --> 00:02:53,850
And this is my output list was 1 4 9 sixteen.

54
00:02:53,850 --> 00:02:54,080
All right.

55
00:02:54,090 --> 00:02:56,000
So what do you mean by what happened.

56
00:02:56,040 --> 00:03:01,020
So what are we have done here is that we create an output list and we initialize it as empty just no

57
00:03:01,080 --> 00:03:02,720
blank empty list.

58
00:03:02,720 --> 00:03:08,130
And what we have done we've created a loop that takes each element within my list.

59
00:03:08,400 --> 00:03:13,980
Take the element squared it and append it to my output list and keep repeating repeating repeating.

60
00:03:14,070 --> 00:03:18,780
So we keep doing this so we end up with basically and elements that are kind of a square of the original

61
00:03:18,780 --> 00:03:19,300
element.

62
00:03:19,310 --> 00:03:20,060
All right.

63
00:03:20,070 --> 00:03:22,670
This is kind of you know that the easy old way of doing it.

64
00:03:22,680 --> 00:03:26,130
Now we're going to become experts when it comes to list comprehension.

65
00:03:26,130 --> 00:03:26,420
All right.

66
00:03:26,430 --> 00:03:28,230
Let's see how can we do all these.

67
00:03:28,230 --> 00:03:30,780
Just you know in one line of code basically.

68
00:03:30,800 --> 00:03:31,090
All right.

69
00:03:31,110 --> 00:03:32,340
That's our code to do that.

70
00:03:32,550 --> 00:03:34,750
What we could do we could say OK.

71
00:03:35,040 --> 00:03:38,850
And it might sound a little bit confusing but please bear in mind we're going to create kind of you

72
00:03:38,850 --> 00:03:40,650
know lack of lists like this.

73
00:03:40,650 --> 00:03:46,670
And what I would do I'm gonna say for element in my list.

74
00:03:47,610 --> 00:03:47,820
All right.

75
00:03:47,820 --> 00:03:50,060
So this is exactly pretty much the same at this command.

76
00:03:50,060 --> 00:03:50,250
Right.

77
00:03:50,700 --> 00:03:55,080
So going to say go into my list loop or each of the specific these elements.

78
00:03:55,080 --> 00:03:55,350
All right.

79
00:03:56,140 --> 00:04:01,620
And what happened is when you take that element right instead of creating an actual for loop and putting

80
00:04:01,620 --> 00:04:06,300
the columns and having the body then creating a new list and all this stuff we don't need to do any

81
00:04:06,300 --> 00:04:06,650
of that.

82
00:04:06,780 --> 00:04:10,000
All that all what I'm going to do in a circle for element in my list.

83
00:04:10,380 --> 00:04:10,580
OK.

84
00:04:10,590 --> 00:04:11,510
What should I do.

85
00:04:11,520 --> 00:04:14,900
Take each element within my list and simply square it.

86
00:04:14,930 --> 00:04:16,260
Okay element.

87
00:04:16,650 --> 00:04:17,300
Square.

88
00:04:17,520 --> 00:04:17,880
That's it.

89
00:04:17,880 --> 00:04:18,940
Done.

90
00:04:19,080 --> 00:04:20,870
Here is my list comprehension.

91
00:04:20,880 --> 00:04:27,510
This is just like in you kind of elegant way of creating the for loops and simply just you know like

92
00:04:27,750 --> 00:04:29,460
iterating on a specific list.

93
00:04:29,520 --> 00:04:35,190
Doing something with it square it multiply it whatever shift enter here we go and we're able to create

94
00:04:35,220 --> 00:04:39,710
kind of you know like can you lists you can call it whatever that has these kind of new element.

95
00:04:39,720 --> 00:04:42,290
And that's what we call it new list comprehension.

96
00:04:42,360 --> 00:04:47,400
Again very elegant very powerful way of doing you know a lot of command summarize a lot of commands

97
00:04:47,400 --> 00:04:51,210
for loops and stuff just in a very small one line of code.

98
00:04:51,480 --> 00:04:51,730
All right.

99
00:04:52,240 --> 00:04:52,650
OK.

100
00:04:52,860 --> 00:04:54,140
So I'm gonna ask you guys to do it.

101
00:04:54,150 --> 00:04:55,500
Please go ahead pause a video.

102
00:04:55,500 --> 00:05:02,180
Well I wanted to us to do is to simply take all these elements and instead of squaring it when I want

103
00:05:02,180 --> 00:05:07,010
you guys to do is to take each of these elements and multiply it by 10.

104
00:05:07,040 --> 00:05:11,190
So I want to see the results is basically 10 20 30 and 40.

105
00:05:11,330 --> 00:05:14,170
Please go ahead pause the video and please use list comprehension.

106
00:05:14,180 --> 00:05:17,270
Obviously so again I to as to kind of use this.

107
00:05:17,550 --> 00:05:23,280
Very similar to this command to simply multiply all the elements by 10.

108
00:05:23,330 --> 00:05:27,390
Please go ahead pause the video and I'll see you guys after the challenge.

109
00:05:27,450 --> 00:05:27,830
All right.

110
00:05:27,830 --> 00:05:29,490
I hope you guys were able to figure out the challenge.

111
00:05:29,510 --> 00:05:32,180
Well I guess we have to do is to simply take again.

112
00:05:32,180 --> 00:05:37,160
Think of it this way element in my list every time I take that element.

113
00:05:37,160 --> 00:05:43,160
All right so four elements in my list every time I think the element I will take it the element and

114
00:05:43,160 --> 00:05:45,190
simply multiply by 10 that's it.

115
00:05:45,780 --> 00:05:46,160
Okay.

116
00:05:46,220 --> 00:05:46,760
Shift enter.

117
00:05:46,760 --> 00:05:47,510
Here we go.

118
00:05:47,510 --> 00:05:49,290
So we ended up by 10 20 30 and 40.

119
00:05:49,670 --> 00:05:49,940
Okay.

120
00:05:50,030 --> 00:05:50,850
Awesome.

121
00:05:50,850 --> 00:05:51,120
All right.

122
00:05:51,170 --> 00:05:53,020
Let's take a look at another example.

123
00:05:53,210 --> 00:05:55,670
Let's assume that I wanted for instance to

124
00:05:58,280 --> 00:06:00,240
start with a specific again empty list.

125
00:06:00,260 --> 00:06:05,660
So I'm going to start with a new list called minus equals to bunch of numbers.

126
00:06:05,660 --> 00:06:12,860
One two three four five six seven eight nine and ten.

127
00:06:14,070 --> 00:06:19,070
And when I wanted to do is to simply create again using the conventional way using the basic all the

128
00:06:19,070 --> 00:06:28,530
way create a for loop that simply goes in there and only extract only extract the even numbers and out

129
00:06:28,530 --> 00:06:29,880
of these even numbers.

130
00:06:29,910 --> 00:06:32,730
I just wanted to square only even numbers.

131
00:06:32,730 --> 00:06:40,020
So simply put I wanted the output to be two squared which is four four squared which is 16 six square

132
00:06:40,020 --> 00:06:45,880
which is 64 four and then eight square and then afterwards we're going to be.

133
00:06:45,900 --> 00:06:51,180
I'm sorry six squared which is three six eight squared with sixty four and then ten squared which is

134
00:06:51,240 --> 00:06:52,300
one hundred.

135
00:06:52,350 --> 00:06:54,330
So let's how can we do that with the conventional way.

136
00:06:54,360 --> 00:06:54,590
OK.

137
00:06:54,630 --> 00:06:58,470
I'm going to try to get my list or we'll call it that's a new list.

138
00:06:58,470 --> 00:06:59,560
This is the output list.

139
00:06:59,820 --> 00:07:01,840
It's got to find it's an empty first.

140
00:07:01,840 --> 00:07:08,730
And what I would do then is take a four I in my list every time I go in my list.

141
00:07:08,730 --> 00:07:11,010
Let's first check if that number is even or odd.

142
00:07:11,070 --> 00:07:11,310
Okay.

143
00:07:11,350 --> 00:07:16,440
If I divided by two equals two zero.

144
00:07:16,500 --> 00:07:16,770
Right.

145
00:07:16,800 --> 00:07:25,000
So if it's an even number OK take that number and simply take the new list dot append.

146
00:07:25,020 --> 00:07:29,640
So again append to it that number whatever the number square.

147
00:07:29,670 --> 00:07:36,450
So if the number is even if you find the ever even number go he'd go here take that new list and take

148
00:07:36,450 --> 00:07:39,300
that number squared and append it to my new list.

149
00:07:39,300 --> 00:07:43,340
And then after when you're done you just go ahead and print your new list.

150
00:07:43,340 --> 00:07:44,700
All right shift enter.

151
00:07:44,700 --> 00:07:45,340
Here we go.

152
00:07:45,670 --> 00:07:48,660
Now we're able to print 416 36 64 and 100.

153
00:07:49,290 --> 00:07:51,420
Let's see how can we do that using list comprehension.

154
00:07:51,420 --> 00:07:54,740
Again one command one line will and we'll call it today.

155
00:07:54,780 --> 00:07:55,000
OK.

156
00:07:55,000 --> 00:08:00,740
So what we could do again second new on the score list equals two.

157
00:08:00,770 --> 00:08:01,030
All right.

158
00:08:01,420 --> 00:08:04,280
And open basically to kind of the list like this.

159
00:08:04,300 --> 00:08:10,420
I'm going to say OK for I in my list it's exactly the same as we have done here for I in my list.

160
00:08:10,420 --> 00:08:11,190
I'm going to do this right.

161
00:08:11,620 --> 00:08:12,610
OK.

162
00:08:12,660 --> 00:08:13,660
All right.

163
00:08:13,720 --> 00:08:18,180
What what I need to do is I need to add a condition here OK.

164
00:08:18,220 --> 00:08:23,770
And then the return we're going to be here which is you know what I need to do after the element satisfy

165
00:08:23,770 --> 00:08:28,210
that condition I need to put it here before the for loop which may be confusing if you think about it

166
00:08:28,920 --> 00:08:29,220
again.

167
00:08:29,230 --> 00:08:37,840
So what we're going to do is take it for I in my list if you find the I index divided by two ways equals

168
00:08:37,840 --> 00:08:41,320
to zero which means if you find that number is even number.

169
00:08:41,340 --> 00:08:41,550
OK.

170
00:08:41,560 --> 00:08:42,770
What should I do.

171
00:08:42,790 --> 00:08:44,230
What should I do is not written here.

172
00:08:44,260 --> 00:08:44,490
OK.

173
00:08:44,500 --> 00:08:46,520
It's written before the four.

174
00:08:46,570 --> 00:08:46,870
OK.

175
00:08:46,900 --> 00:08:49,280
It's confusing as hell but that's fine.

176
00:08:49,700 --> 00:08:51,760
So that's for I in my list.

177
00:08:51,760 --> 00:08:57,130
If you read it like that if I was divided by two equals equals to zero if my number is even what I should

178
00:08:57,130 --> 00:09:00,630
do I'll take that number and squared it.

179
00:09:00,630 --> 00:09:02,100
That said OK.

180
00:09:02,110 --> 00:09:03,010
List comprehension.

181
00:09:03,030 --> 00:09:03,910
It's amazing.

182
00:09:03,910 --> 00:09:09,470
You simply just summarize or you know like kind of knock down all these lines into just one single line.

183
00:09:09,470 --> 00:09:10,450
Run it again.

184
00:09:10,450 --> 00:09:12,780
Let's take a look at new list.

185
00:09:12,790 --> 00:09:15,280
Here we go 416 thirty six four and one hundred.

186
00:09:15,630 --> 00:09:15,980
OK.

187
00:09:16,030 --> 00:09:16,450
Perfect.

188
00:09:17,350 --> 00:09:17,690
All right.

189
00:09:18,010 --> 00:09:19,880
So let's take a look at a quick challenge OK.

190
00:09:19,900 --> 00:09:20,980
It's mini challenge.

191
00:09:20,980 --> 00:09:26,860
What s quest to do is they're going to provide you with a temperature on the score C OK and which is

192
00:09:26,860 --> 00:09:34,420
simply just a list of temperatures and degrees of degrees Celsius 25 30 40 and 50.

193
00:09:34,420 --> 00:09:35,250
All right.

194
00:09:35,290 --> 00:09:40,780
And when I get asked what I ask you guys to do is to use list comprehension to simply convert temperature

195
00:09:40,870 --> 00:09:43,600
celsius to temperatures Fahrenheit.

196
00:09:43,610 --> 00:09:44,770
Right so please right.

197
00:09:44,770 --> 00:09:50,200
You know kind of a list comprehension here to simply going to create a for loop that goes in here.

198
00:09:50,290 --> 00:09:55,530
Take the elements in here and simply do the conversion from Celsius to Fahrenheit.

199
00:09:55,530 --> 00:10:04,300
Do you guys remember from 4 Celsius to Fahrenheit the equation was nine divided by five times the Celsius

200
00:10:04,600 --> 00:10:06,860
plus three divided by two.

201
00:10:07,090 --> 00:10:08,130
Right.

202
00:10:08,140 --> 00:10:10,060
My apologies plus my procedure.

203
00:10:10,090 --> 00:10:16,730
So this is the equation the equation was nine divided by five times temperature in Celsius plus 32.

204
00:10:16,750 --> 00:10:18,920
That will give us the temperature in Fahrenheit.

205
00:10:18,920 --> 00:10:20,080
All right this is the equation.

206
00:10:20,200 --> 00:10:25,610
Please go ahead pause the video and I'll see you guys after the challenge.

207
00:10:25,730 --> 00:10:26,100
All right.

208
00:10:26,110 --> 00:10:30,140
I hope you guys were able to figure out the challenge will ask us to do to simply use this comprehension

209
00:10:30,560 --> 00:10:36,200
to kind of transform that list which is temperature in Celsius to temperatures in Fahrenheit.

210
00:10:36,200 --> 00:10:37,210
Let's see how can you do that.

211
00:10:37,220 --> 00:10:46,260
Going to take it for I in temperature C so every time I go into that temperature see grab an element.

212
00:10:46,260 --> 00:10:46,460
OK.

213
00:10:46,470 --> 00:10:47,760
What should I do with it.

214
00:10:47,760 --> 00:10:48,780
There is no condition right.

215
00:10:48,810 --> 00:10:50,520
I don't need to add if condition in here.

216
00:10:50,520 --> 00:10:52,730
I'm going to do that on all elements.

217
00:10:52,890 --> 00:10:59,010
So I'm gonna say OK what I'm gonna do I'm going to say nine divided by five right times.

218
00:10:59,010 --> 00:11:02,040
I plus 32

219
00:11:04,960 --> 00:11:05,890
plus 32.

220
00:11:05,890 --> 00:11:09,080
My apologies.

221
00:11:09,220 --> 00:11:09,820
Here we go.

222
00:11:10,990 --> 00:11:15,490
So every time I'm going to take the temperature which is gonna be element within the temperature C which

223
00:11:15,490 --> 00:11:23,670
is 25 first and 30 and then four and so on take that number multiply by nine divided by five plus 32.

224
00:11:23,860 --> 00:11:26,260
And that should be temperature and finite shift enter.

225
00:11:26,620 --> 00:11:29,500
Let's take a look at temperature Fahrenheit V.

226
00:11:29,500 --> 00:11:30,260
Here we go.

227
00:11:30,400 --> 00:11:35,530
And that's the translation simply of all the entire list here into a new list that has temperatures

228
00:11:35,530 --> 00:11:36,640
in Fahrenheit.

229
00:11:36,640 --> 00:11:37,040
All right.

230
00:11:37,060 --> 00:11:38,260
Perfect.

231
00:11:38,260 --> 00:11:38,490
All right.

232
00:11:38,500 --> 00:11:42,090
Let's take a look at one last example and that should conclude the list comprehension.

233
00:11:42,100 --> 00:11:48,190
Let's assume that I wanted for example to the finest drinks or the finest thing call my string equals

234
00:11:48,190 --> 00:11:48,880
two.

235
00:11:49,240 --> 00:11:58,270
And they're going to say I am I am becoming a master Python master.

236
00:11:58,330 --> 00:11:59,570
I just just a string.

237
00:11:59,620 --> 00:12:00,530
Okay.

238
00:12:00,820 --> 00:12:08,120
And maybe it's defined in 30 days and becoming the python master in 30 days.

239
00:12:08,200 --> 00:12:15,040
And what I wanted to do is to simply return back only the numbers I just wanted to return only these

240
00:12:15,070 --> 00:12:16,300
3 0 here.

241
00:12:16,300 --> 00:12:18,530
How can I do that using list comprehension.

242
00:12:18,640 --> 00:12:24,700
So I'm gonna say OK I'm going to create another list and that list is going to call it numbers equals

243
00:12:24,690 --> 00:12:25,480
two.

244
00:12:25,750 --> 00:12:30,750
And what I wanted to do is to simply loop here when each element each character.

245
00:12:31,580 --> 00:12:38,590
So going to take a four I in my string so that will go ahead and look at each element and he had character

246
00:12:39,310 --> 00:12:41,110
every time I have to check.

247
00:12:41,110 --> 00:12:48,760
So going to take it if you find my character I dot is digits again that's pretty new.

248
00:12:48,760 --> 00:12:50,640
We haven't that we haven't discussed that before.

249
00:12:50,770 --> 00:12:51,800
But the overall idea is OK.

250
00:12:51,820 --> 00:12:55,500
Check that number if the number is digits was digit.

251
00:12:55,510 --> 00:12:56,110
OK.

252
00:12:56,230 --> 00:12:58,720
So was like like a number like 3 and 0.

253
00:12:58,780 --> 00:12:59,020
Right.

254
00:12:59,560 --> 00:13:04,990
So this is kind of you know where to turn true if the number is digit return False if not what we need

255
00:13:04,990 --> 00:13:05,440
to do.

256
00:13:05,470 --> 00:13:06,330
Just return i.

257
00:13:06,460 --> 00:13:07,750
That's it.

258
00:13:07,750 --> 00:13:08,750
So please go ahead.

259
00:13:08,800 --> 00:13:11,190
Check each of the characters in there in my string.

260
00:13:11,250 --> 00:13:12,420
Grab any of that.

261
00:13:12,430 --> 00:13:17,470
Make that check if that character was is digital or not if it is they should just return it and that's

262
00:13:17,470 --> 00:13:17,850
it.

263
00:13:17,890 --> 00:13:18,650
Shift enter.

264
00:13:19,090 --> 00:13:19,430
OK.

265
00:13:19,450 --> 00:13:21,580
Let's take a look at numbers or print.

266
00:13:21,630 --> 00:13:22,190
We'll get.

267
00:13:22,290 --> 00:13:24,160
The numbers enter.

268
00:13:24,160 --> 00:13:24,970
Here we go.

269
00:13:24,970 --> 00:13:30,070
So we'll be able to return back to 3 and 0 which is only two elements in here within my string.

270
00:13:30,100 --> 00:13:30,640
All right.

271
00:13:30,670 --> 00:13:31,070
OK.

272
00:13:31,100 --> 00:13:32,800
And that's pretty much what I have for this lecture.

273
00:13:32,800 --> 00:13:34,390
I hope you guys enjoyed it.

274
00:13:34,390 --> 00:13:38,350
Let's recap all we have done so far in this lecture we have been able to learn about list comprehension

275
00:13:38,710 --> 00:13:44,950
which is a very elegant new way of just you know writing a lot of lines of code into a very simple line

276
00:13:44,950 --> 00:13:50,940
of code an elegant way just simply converting a list into another list in one line of code.

277
00:13:51,010 --> 00:13:56,380
We have a list and we wanted to convert it for example Melissa squared or multiplied by 10 or do whatever

278
00:13:56,770 --> 00:14:01,570
we can do that using these commands and what we could do as well that we can add an additional condition

279
00:14:01,570 --> 00:14:02,280
as well.

280
00:14:02,340 --> 00:14:02,640
OK.

281
00:14:02,650 --> 00:14:07,060
If you want to kind of you know add a little bit smartness in there and we're able as well to maybe

282
00:14:07,060 --> 00:14:13,840
use here kind of you know special like functions look like that is digit for instance to check if that

283
00:14:13,840 --> 00:14:19,870
digit or not and then using less compression as well we're able to extract the numbers 3 and 0 out of

284
00:14:19,870 --> 00:14:21,080
my string.

285
00:14:21,130 --> 00:14:21,680
All right.

286
00:14:21,700 --> 00:14:23,110
That's pretty much all for this lecture.

287
00:14:23,110 --> 00:14:24,280
I hope you guys enjoyed it.

288
00:14:24,370 --> 00:14:28,540
Next lecture I'm going to walk you through the while loops which is really interesting as well just

289
00:14:28,540 --> 00:14:30,490
a different kind of taste.

290
00:14:30,490 --> 00:14:34,750
You know like to perform a loop similar to for loops and that should conclude that section.

291
00:14:34,750 --> 00:14:36,820
Best of luck and I'll see you guys in the next lecture.
