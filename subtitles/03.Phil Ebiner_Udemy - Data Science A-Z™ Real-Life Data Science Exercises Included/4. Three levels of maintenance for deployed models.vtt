WEBVTT
1

00:00:00.300  -->  00:00:05.640
Model maintenance we've been leading up to this the Tauriel in the previous two where we talked about

2

00:00:05.700  -->  00:00:08.380
how models deteriorate and why they deteriorate.

3

00:00:08.610  -->  00:00:15.150
And today it's time to understand what we can do to prevent them from deteriorating or at least find

4

00:00:15.150  -->  00:00:20.130
out that they're deteriorating on time to replace them and are going to cut straight to the chase here

5

00:00:20.130  -->  00:00:21.060
.

6

00:00:21.090  -->  00:00:24.440
This is the Prose's that I'm going to be talking about.

7

00:00:24.480  -->  00:00:26.510
It's called the R process.

8

00:00:26.640  -->  00:00:32.580
That is my own abbreviation a r r and we're going to go through every single one of these letters one

9

00:00:32.580  -->  00:00:33.120
by one.

10

00:00:33.300  -->  00:00:39.760
And the way this process works is it's a hierarchical process so first you do the first letter A.

11

00:00:39.900  -->  00:00:41.940
If that works then you good.

12

00:00:42.120  -->  00:00:46.470
If that fails and you move on to the next that are if that works then you're all sweet.

13

00:00:46.470  -->  00:00:49.400
If that fails then you move on to the last step.

14

00:00:49.470  -->  00:00:50.540
The last are.

15

00:00:50.670  -->  00:00:54.800
So let's find out what they are a stands for assess.

16

00:00:54.870  -->  00:00:59.460
This is by far the most important part of the model maintenance cycle.

17

00:00:59.460  -->  00:01:01.640
You have to look at your models.

18

00:01:02.460  -->  00:01:07.440
Periodically you have to assess them and see how they're going you can just leave them alone and hope

19

00:01:07.440  -->  00:01:11.370
for the best or wait until they tell you that they're not working because that's not going to happen

20

00:01:11.380  -->  00:01:11.620
.

21

00:01:11.850  -->  00:01:18.210
You have to get take your morals and once in a while run a fresh sample through them.

22

00:01:18.390  -->  00:01:25.020
And for one that you really know the outcome say take another take another thousand people randomly

23

00:01:25.110  -->  00:01:31.890
selected from your bank or thousand toothbrushes sampled or a couple of thousand and see what happened

24

00:01:31.890  -->  00:01:32.160
there.

25

00:01:32.160  -->  00:01:36.810
Like we know the outcome we know whether or not those people left whether or not those toothbrushes

26

00:01:36.810  -->  00:01:42.150
were faulty and run the door through your model and see what it would have predicted.

27

00:01:42.140  -->  00:01:49.800
Create the cap curve check the rule of thumb see how much worse it is than the original model that you

28

00:01:49.800  -->  00:01:51.920
created and determine for yourself.

29

00:01:51.930  -->  00:01:56.820
Are you happy with that if you're or not if you're happy if that great your morals are doing fine.

30

00:01:56.820  -->  00:01:57.980
Let it keep running.

31

00:01:58.170  -->  00:02:00.540
If you're not you've got to move on to the next letter.

32

00:02:00.540  -->  00:02:04.320
Next letter is our for retrain.

33

00:02:04.320  -->  00:02:09.270
So this is the point where you're not happy with how your model is performing.

34

00:02:09.270  -->  00:02:13.560
It's the cap curves flattening out and you're got to do something about it.

35

00:02:13.830  -->  00:02:19.090
So retrain implies keeping the variables that you've read like.

36

00:02:19.120  -->  00:02:26.430
So in retrain you don't have to do that whole process that we went through you don't have to throw bro

37

00:02:26.520  -->  00:02:32.040
everything to throw take all the variables that you have in your company throw them at the models obviously

38

00:02:32.040  -->  00:02:37.290
select select them logically but then still throw them at your model and then do the backward elimination

39

00:02:37.290  -->  00:02:43.830
process and then find out the coefficients you don't have to do all of that you know we train you keep

40

00:02:44.160  -->  00:02:46.340
the variables that you've already found out.

41

00:02:46.440  -->  00:02:51.710
Like for instance we we decided we'll keep the dummy variable called Germany.

42

00:02:51.730  -->  00:02:59.220
We'll keep the dummy variable for gender will we'll keep we'll even keep tenure but we'll exclude the

43

00:02:59.250  -->  00:03:01.180
other things from our model.

44

00:03:01.410  -->  00:03:06.120
And all you have to do is you're keeping the Marable's you just have to give them all a fresh sample

45

00:03:07.800  -->  00:03:09.650
to train it on.

46

00:03:09.690  -->  00:03:16.890
So what will change is the coefficients the coefficients of your logistic regression will change because

47

00:03:17.010  -->  00:03:19.390
you've given your model a fresh sample.

48

00:03:19.470  -->  00:03:23.230
Of course you'll have to have training data and test data just like we did.

49

00:03:23.400  -->  00:03:29.040
And once you've used the training data then you check them out on the test data and if the cap curve

50

00:03:29.040  -->  00:03:35.640
improves then from there you deploy the new model or the refreshed retrained bottled that's that's what

51

00:03:35.640  -->  00:03:37.110
it's called retrain model.

52

00:03:37.230  -->  00:03:44.490
You deploy the retrain model and maybe you monitor for it for a bit just a bit more frequently.

53

00:03:44.490  -->  00:03:49.680
So instead of if you're monitoring a models once every six months this one you might check check up

54

00:03:49.680  -->  00:03:54.450
on it in two months and then in two months again and then two months again because it is kind of on

55

00:03:54.450  -->  00:03:56.920
probation it's it's a new thing.

56

00:03:57.420  -->  00:04:03.120
You've retrained the model and but that might fix a situation that might be sufficient.

57

00:04:03.360  -->  00:04:11.550
And that might happen when your variables are still explaining what's going on is just that the confessions

58

00:04:11.550  -->  00:04:17.350
are not sufficient for instance let's say age is a important factor.

59

00:04:17.520  -->  00:04:21.030
And also â‚¬10 important factor right.

60

00:04:21.030  -->  00:04:23.980
But in our model age was way more important than tenure.

61

00:04:24.210  -->  00:04:29.820
But let's say that over time things change and they're still both important just that tenure has become

62

00:04:30.210  -->  00:04:34.860
a bit more important or much more important and now the coefficient for tenure has to be greater.

63

00:04:34.860  -->  00:04:41.380
But your model hasn't had a chance to understand that you have to give it some fresh start to and train

64

00:04:41.410  -->  00:04:46.380
on that and maybe it'll pick that up and it will start working well from there.

65

00:04:46.380  -->  00:04:51.060
So if that's if that gives you a cap curve that you're satisfied with then.

66

00:04:51.060  -->  00:04:52.290
Perfect.

67

00:04:52.290  -->  00:04:56.750
Keep that model and continue going down that path.

68

00:04:56.910  -->  00:05:02.550
But if that fails then you have to move on to the last R which is rebuild.

69

00:05:02.550  -->  00:05:07.590
You have to rebuild your model from scratch and we're talking about everything completely scrap the

70

00:05:07.590  -->  00:05:13.110
model that you have or if it's not doing that bad if this is like a preliminary phase and we'll talk

71

00:05:13.110  -->  00:05:17.850
about this and say and then don't scrap completely but basically what you have to do is go all the way

72

00:05:17.850  -->  00:05:22.750
back find the variables do this whole process again and get anymore.

73

00:05:23.040  -->  00:05:30.520
Now speaking of this whole scrapping business sometimes if your models performing really poorly or it's

74

00:05:30.540  -->  00:05:33.330
rubbish then of course you have to scrap it and build a new one.

75

00:05:33.570  -->  00:05:39.450
But if you're doing this small maintenance process right then you'll pick up the fact that is deteriorating

76

00:05:39.540  -->  00:05:47.670
on time you'll pick it up early and it's not the models are working too poorly yet it's still doing

77

00:05:47.670  -->  00:05:48.230
a good job.

78

00:05:48.240  -->  00:05:52.740
But you just want to see if you can do a better job with a new model.

79

00:05:52.920  -->  00:05:58.080
So in that case once you build the second model you run them side by side.

80

00:05:58.260  -->  00:06:06.750
And this is called a champion challenger setup where your existing model is a champion and your new

81

00:06:06.750  -->  00:06:12.870
model is the challenger and you're running them side by side and you want to see which one performs

82

00:06:12.870  -->  00:06:14.290
better over time.

83

00:06:14.550  -->  00:06:20.700
And basically in real life situations and then you'll keep the one this corner and you can do this in

84

00:06:20.700  -->  00:06:26.070
different ways you could run the champion challenger and only use the output of the champion or only

85

00:06:26.070  -->  00:06:29.330
use the output of the challenger but just monitor them at the same time.

86

00:06:29.550  -->  00:06:35.220
Or you could actually split your population in half and run half through the champion half through the

87

00:06:35.220  -->  00:06:36.330
challenger.

88

00:06:36.330  -->  00:06:44.670
It's up to you how you set this up but that is a good valid approach to make sure that if you are going

89

00:06:44.670  -->  00:06:48.620
to replace a model that you are replacing you have something that's actually worse.

90

00:06:49.110  -->  00:06:51.330
And that's basically how you do model maintenance.

91

00:06:51.330  -->  00:06:53.890
Remember to do it on time.

92

00:06:54.010  -->  00:06:56.850
It sounds like it sounds like a car maintenance right.

93

00:06:56.850  -->  00:07:00.480
Don't forget the car maintenance but it is it is a fair point.

94

00:07:00.480  -->  00:07:04.510
You should do your model maintenance on time you should share it.

95

00:07:04.710  -->  00:07:08.850
Frequency depends on the industry depends on what exactly is your modeling.

96

00:07:08.940  -->  00:07:17.130
It can it can vary it can be three months six months 12 months two years but I would actually that is

97

00:07:17.130  -->  00:07:19.160
the frequency of when you need to update the models.

98

00:07:19.170  -->  00:07:24.210
I would actually assess them at least every six months or so at least one six months you go ahead and

99

00:07:24.210  -->  00:07:32.220
just quickly a system doesn't take that long and then maybe if things are changing quickly or you're

100

00:07:32.220  -->  00:07:39.810
in a very fast paced environment at a business moment then then maybe a sister models once every three

101

00:07:39.810  -->  00:07:44.920
months or so to frequence Also there's no point in that so assessing a model everydays differently to

102

00:07:45.150  -->  00:07:46.150
different doesn't have a point.

103

00:07:46.230  -->  00:07:52.620
But you will gauge over time what is the right frequency for your environment and for your specific

104

00:07:52.620  -->  00:07:53.990
models.

105

00:07:54.060  -->  00:08:00.570
Just don't forget to do it because it's really sad when somebody deploys a model and it deteriorates

106

00:08:00.570  -->  00:08:05.580
over time and nobody picks it up on time to fix that or replace them all.

107

00:08:05.580  -->  00:08:06.860
So there you go.

108

00:08:06.860  -->  00:08:08.420
That's how you do model maintenance.

109

00:08:08.430  -->  00:08:11.460
Nothing complicated just a three step process.

110

00:08:11.470  -->  00:08:12.510
A-R are.

111

00:08:12.750  -->  00:08:18.240
And that brings us to the end of the story so I hope you picked up something useful and hopefully this

112

00:08:18.240  -->  00:08:21.170
will help you in your day to day role
