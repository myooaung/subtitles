WEBVTT
1
00:00:00.005 --> 00:00:01.008
- [Instructor] Infrastructure as Code

2
00:00:01.008 --> 00:00:05.002
is another key practice embraced by GitOps.

3
00:00:05.002 --> 00:00:07.006
The idea behind Infrastructure as Code

4
00:00:07.006 --> 00:00:10.001
is to apply practices traditionally used

5
00:00:10.001 --> 00:00:12.007
by developers like source code versioning

6
00:00:12.007 --> 00:00:16.006
and code reviews to the management of infrastructure.

7
00:00:16.006 --> 00:00:20.002
This means that every change to a system's infrastructure

8
00:00:20.002 --> 00:00:23.008
is written as code and stored in version control.

9
00:00:23.008 --> 00:00:25.008
This allows us to track the changes

10
00:00:25.008 --> 00:00:28.009
to the infrastructure over time.

11
00:00:28.009 --> 00:00:30.001
When it's time to change

12
00:00:30.001 --> 00:00:32.005
or build the infrastructure of a system,

13
00:00:32.005 --> 00:00:34.005
Infrastructure as Code says we start

14
00:00:34.005 --> 00:00:36.007
by writing the changes as code

15
00:00:36.007 --> 00:00:41.000
and then feed the code into a tool for it to be applied.

16
00:00:41.000 --> 00:00:42.005
If we stick with this approach,

17
00:00:42.005 --> 00:00:46.002
we can avoid making manual one-off changes through GUIs

18
00:00:46.002 --> 00:00:50.009
or issuing commands that we can never repeat through a CLI.

19
00:00:50.009 --> 00:00:52.002
This should sound familiar

20
00:00:52.002 --> 00:00:55.003
because it overlaps a lot with GitOps.

21
00:00:55.003 --> 00:00:58.008
The Kubernetes manifest and Terraform files we looked at

22
00:00:58.008 --> 00:01:02.003
is infrastructure expressed as code.

23
00:01:02.003 --> 00:01:04.004
GitOps just takes it a step further

24
00:01:04.004 --> 00:01:06.005
and favors declarative code.

25
00:01:06.005 --> 00:01:09.002
Infrastructure as Code isn't as prescriptive

26
00:01:09.002 --> 00:01:10.009
about what type of code we use

27
00:01:10.009 --> 00:01:13.004
to describe the infrastructure.

28
00:01:13.004 --> 00:01:15.006
GitOps also moves up the stack

29
00:01:15.006 --> 00:01:18.008
and recommends we store declarative configuration code

30
00:01:18.008 --> 00:01:22.000
for our Kubernetes objects and release strategies

31
00:01:22.000 --> 00:01:24.003
in addition to any infrastructure,

32
00:01:24.003 --> 00:01:28.002
like virtual machines or the actual cluster.

33
00:01:28.002 --> 00:01:31.002
The operator running in our cluster is the tool

34
00:01:31.002 --> 00:01:34.008
that helps automatically apply this infrastructure code.

35
00:01:34.008 --> 00:01:37.006
That means we can avoid issuing one-off commands

36
00:01:37.006 --> 00:01:41.005
we don't have captured anywhere through a command line.

37
00:01:41.005 --> 00:01:44.005
The key difference is that GitOps is more strict

38
00:01:44.005 --> 00:01:46.009
about only storing the code in a source code

39
00:01:46.009 --> 00:01:50.001
management tool like Git and only using Git

40
00:01:50.001 --> 00:01:54.000
as the interface for making changes to the system.

41
00:01:54.000 --> 00:01:57.005
When we adopt the practices behind Infrastructure as Code,

42
00:01:57.005 --> 00:01:59.006
system infrastructure can be changed

43
00:01:59.006 --> 00:02:02.002
more rapidly and reliably.

44
00:02:02.002 --> 00:02:05.005
Since everything is defined as code and repeatable,

45
00:02:05.005 --> 00:02:08.003
we can quickly rebuild or create another instance

46
00:02:08.003 --> 00:02:09.008
of our infrastructure.

47
00:02:09.008 --> 00:02:13.008
This allows us to scale up very quickly.

48
00:02:13.008 --> 00:02:15.007
Since everything is built from code,

49
00:02:15.007 --> 00:02:19.008
it's built consistently, the same way every time,

50
00:02:19.008 --> 00:02:23.003
and any changes to the code can be reviewed for errors

51
00:02:23.003 --> 00:02:26.002
using a technique like a poll request.

52
00:02:26.002 --> 00:02:28.009
We don't lose track of some change

53
00:02:28.009 --> 00:02:32.004
that was made four years ago on the command line

54
00:02:32.004 --> 00:02:35.001
because that's how surprises happen

55
00:02:35.001 --> 00:02:39.000
and that's what we're trying to avoid with GitOps.

56
00:02:39.000 --> 00:02:42.007
GitOps and Infrastructure as Code use similar practices

57
00:02:42.007 --> 00:02:45.007
that allow infrastructure and applications

58
00:02:45.007 --> 00:02:49.002
to be provisioned with techniques that increase velocity

59
00:02:49.002 --> 00:02:52.000
and prevent issues caused by human error.

