WEBVTT
1
00:00:00.005 --> 00:00:02.003
- [Instructor] Our next principle declares Git

2
00:00:02.003 --> 00:00:05.003
as the single source of truth for our system.

3
00:00:05.003 --> 00:00:06.008
As simple as that sounds,

4
00:00:06.008 --> 00:00:09.007
it's really important for GitOps.

5
00:00:09.007 --> 00:00:12.003
Let's start with our blueprint analogy.

6
00:00:12.003 --> 00:00:15.003
A blueprint represents the desired state of a house.

7
00:00:15.003 --> 00:00:18.000
It's what the homeowner, the builder, and the workers agree

8
00:00:18.000 --> 00:00:21.000
the house should look like when it's finished.

9
00:00:21.000 --> 00:00:23.000
If the blueprints do not have a bathroom,

10
00:00:23.000 --> 00:00:24.006
the house won't either.

11
00:00:24.006 --> 00:00:27.002
If you want to change the house by adding another room,

12
00:00:27.002 --> 00:00:30.005
the blueprints need to be updated so that everybody working

13
00:00:30.005 --> 00:00:34.007
on the house understands what needs to be built.

14
00:00:34.007 --> 00:00:37.002
All right, let's tie that to GitOps.

15
00:00:37.002 --> 00:00:40.004
In GitOps we store everything in Git.

16
00:00:40.004 --> 00:00:42.006
So inside of Git we'll find things

17
00:00:42.006 --> 00:00:45.009
like the application code, tests, image definitions,

18
00:00:45.009 --> 00:00:49.005
and our declared infrastructure configuration.

19
00:00:49.005 --> 00:00:53.004
Now, I will highlight that GitOps is meant for operations,

20
00:00:53.004 --> 00:00:57.003
so it really focuses on the infrastructure code.

21
00:00:57.003 --> 00:01:00.005
But still, anything pertaining to the system is in Git.

22
00:01:00.005 --> 00:01:03.007
It has all the blueprints related to the system.

23
00:01:03.007 --> 00:01:06.003
We call this our desired state.

24
00:01:06.003 --> 00:01:10.005
If something isn't in the desired state, AKA the blueprints,

25
00:01:10.005 --> 00:01:13.001
it shouldn't be in the system.

26
00:01:13.001 --> 00:01:16.001
This makes Git the only place that developers,

27
00:01:16.001 --> 00:01:20.003
operations, security, and automations check when trying

28
00:01:20.003 --> 00:01:23.009
to determine what should be running in the system.

29
00:01:23.009 --> 00:01:26.004
If changes to the system are necessary,

30
00:01:26.004 --> 00:01:31.004
a commit is the only way to update the blueprints in Git.

31
00:01:31.004 --> 00:01:34.000
Having one place to store the description

32
00:01:34.000 --> 00:01:38.002
of our system's desired state has many advantages.

33
00:01:38.002 --> 00:01:42.006
At any point in time, anyone or anything can turn to Git

34
00:01:42.006 --> 00:01:45.008
as the single source of truth for the system.

35
00:01:45.008 --> 00:01:47.007
This includes automated agents

36
00:01:47.007 --> 00:01:50.001
that observe the system's desired state

37
00:01:50.001 --> 00:01:52.009
while watching for any changes.

38
00:01:52.009 --> 00:01:55.004
Having Git as the single source of truth

39
00:01:55.004 --> 00:01:57.008
provides us with auditability.

40
00:01:57.008 --> 00:02:01.006
What changed, who changed it, and when the change happened

41
00:02:01.006 --> 00:02:04.002
is stored in Git, because every change

42
00:02:04.002 --> 00:02:08.002
to the system is described with a commit.

43
00:02:08.002 --> 00:02:11.005
GitOps also increases a system's recoverability

44
00:02:11.005 --> 00:02:14.002
because we can easily revert a failed change

45
00:02:14.002 --> 00:02:18.003
or recover the entire system from the repository.

46
00:02:18.003 --> 00:02:19.004
That about covers it.

47
00:02:19.004 --> 00:02:22.009
The main concepts behind this principle are simple.

48
00:02:22.009 --> 00:02:25.003
Put everything about your system in Git

49
00:02:25.003 --> 00:02:27.000
and manage it from there.

