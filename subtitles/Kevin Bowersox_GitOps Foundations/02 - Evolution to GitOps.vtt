WEBVTT
1
00:00:00.005 --> 00:00:02.004
- [Instructor] It helps to understand the history

2
00:00:02.004 --> 00:00:05.008
behind GitOps and the direction where it's heading.

3
00:00:05.008 --> 00:00:08.006
The software development community is always searching

4
00:00:08.006 --> 00:00:10.008
for ways to deliver faster.

5
00:00:10.008 --> 00:00:13.000
Nobody likes waiting, so it's pretty easy

6
00:00:13.000 --> 00:00:15.007
to convince management to support an idea

7
00:00:15.007 --> 00:00:17.008
that shortens the cycle.

8
00:00:17.008 --> 00:00:20.009
The desire to move faster has driven several waves

9
00:00:20.009 --> 00:00:25.000
of evolution through our community in different spaces.

10
00:00:25.000 --> 00:00:28.003
We've adopted more integrated development processes,

11
00:00:28.003 --> 00:00:31.002
leaving traditional waterfall methods behind

12
00:00:31.002 --> 00:00:34.006
for better ways of working, like Agile and DevOps,

13
00:00:34.006 --> 00:00:37.004
that will make teams more productive.

14
00:00:37.004 --> 00:00:41.003
We've also broken systems down into fine-grain services

15
00:00:41.003 --> 00:00:44.007
so they're easier to change and deploy.

16
00:00:44.007 --> 00:00:47.001
Apps have shifted from running on VMs

17
00:00:47.001 --> 00:00:51.002
to being packaged and deployed within immutable containers

18
00:00:51.002 --> 00:00:54.005
that scale quickly on orchestration platforms.

19
00:00:54.005 --> 00:00:58.003
At the same time, we began shifting our infrastructure

20
00:00:58.003 --> 00:01:03.002
to the cloud, where platforms like Azure GCP and AWS

21
00:01:03.002 --> 00:01:08.000
have reduced provisioning times down from weeks to seconds.

22
00:01:08.000 --> 00:01:10.003
Teams that progress through these stages

23
00:01:10.003 --> 00:01:13.000
often hit their goals for delivering faster,

24
00:01:13.000 --> 00:01:15.006
but there's unintended side effects.

25
00:01:15.006 --> 00:01:19.000
For example, systems will often become unstable

26
00:01:19.000 --> 00:01:21.006
if the operations side can't keep up

27
00:01:21.006 --> 00:01:24.004
with the increased rate change.

28
00:01:24.004 --> 00:01:27.000
That's where GitOps enters the picture.

29
00:01:27.000 --> 00:01:31.004
It focuses primarily on the operations, or Ops side.

30
00:01:31.004 --> 00:01:34.002
Using GitOps, teams manage operations

31
00:01:34.002 --> 00:01:37.007
through declarative infrastructure code stored in Git.

32
00:01:37.007 --> 00:01:41.000
Changes to the code are released through a delivery pipeline

33
00:01:41.000 --> 00:01:43.001
controlled by an automated agent

34
00:01:43.001 --> 00:01:46.000
that applies the changes to the system.

35
00:01:46.000 --> 00:01:49.002
This workflow for continuous delivery allows teams

36
00:01:49.002 --> 00:01:52.006
to rapidly, yet safely, deliver changes

37
00:01:52.006 --> 00:01:56.004
without sacrificing system stability.

38
00:01:56.004 --> 00:02:00.001
The idea of storing all aspects of your system in Git

39
00:02:00.001 --> 00:02:02.006
and using the repository to drive automation

40
00:02:02.006 --> 00:02:04.006
has been around for years.

41
00:02:04.006 --> 00:02:08.009
However, it wasn't until 2017 that Weaveworks CEO,

42
00:02:08.009 --> 00:02:12.008
Alexis Richardson, first introduced the term GitOps

43
00:02:12.008 --> 00:02:17.007
in a blog post titled Operations by Poll Request.

44
00:02:17.007 --> 00:02:19.003
Currently, a working group

45
00:02:19.003 --> 00:02:21.009
within the Cloud Native Computing Foundation

46
00:02:21.009 --> 00:02:24.001
is building a GitOps manifesto

47
00:02:24.001 --> 00:02:27.003
that standardizes GitOps principles.

48
00:02:27.003 --> 00:02:30.001
The group recently formed and has participation

49
00:02:30.001 --> 00:02:32.009
from notable names in tech like Weaveworks,

50
00:02:32.009 --> 00:02:35.003
Codefresh, and Microsoft.

51
00:02:35.003 --> 00:02:38.005
So the GitOps principles have solidified,

52
00:02:38.005 --> 00:02:43.000
but the practices and tolling will constantly be evolving.

53
00:02:43.000 --> 00:02:46.006
Everyone agrees the GitOps pattern will heavily influence

54
00:02:46.006 --> 00:02:50.000
how we'll work and how tolls will be built in the future,

55
00:02:50.000 --> 00:02:52.006
but everybody has a slightly different idea

56
00:02:52.006 --> 00:02:55.001
of how that's going to be implemented.

57
00:02:55.001 --> 00:02:58.009
So it's an exciting time to be involved with GitOps.

58
00:02:58.009 --> 00:03:02.001
The future is promising, which is why it's important

59
00:03:02.001 --> 00:03:06.000
to grasp the concepts in the early stages.

