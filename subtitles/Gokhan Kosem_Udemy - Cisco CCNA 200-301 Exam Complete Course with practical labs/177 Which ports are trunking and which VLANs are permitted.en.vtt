WEBVTT
1
00:00:00.000 --> 00:00:05.000
We could confirm which ports are trunking on our switches

2
00:00:05.000 --> 00:00:08.000
likes an example going to the switch 1

3
00:00:08.000 --> 00:00:15.000
and typing sh interfaces trunk  as you can see here

4
00:00:15.000 --> 00:00:22.000
the command sh interfaces trunk shows me that gigabit 0/0 1, 2, and 3

5
00:00:22.000 --> 00:00:26.000
are set on for trunking using 802.1Q

6
00:00:26.000 --> 00:00:30.000
the status is trunking and the native VLAN is VLAN 1.

7
00:00:30.000 --> 00:00:35.000
The VLANs allowed across those ports are VLANs 1 to 4094

8
00:00:35.000 --> 00:00:38.000
in other words, we’ve allowed all VLANs

9
00:00:38.000 --> 00:00:44.000
the VLANs currently allowed and active in the management domain of 1, 10, and 20

10
00:00:44.000 --> 00:00:50.000
VLANs in the Spanning Tree forwarding state not pruned of 1, 10, and 20

11
00:00:50.000 --> 00:00:52.000
we'll talk about Spanning Tree in a moment

12
00:00:52.000 --> 00:00:56.000
but this  port is the only port that is forwarding traffic across it

13
00:00:56.000 --> 00:01:02.000
because port 1 and 2 are currently blocked as shown here

14
00:01:02.000 --> 00:01:08.000
because port 1, 2 and 3 are currently blocked through Spanning Tree

15
00:01:08.000 --> 00:01:12.000
sh spanning-tree as an example

16
00:01:12.000 --> 00:01:16.000
shows me that those ports are blocking

17
00:01:16.000 --> 00:01:20.000
This port is not a trunk port, this is an access port.

18
00:01:20.000 --> 00:01:24.000
So sh int trunk

19
00:01:24.000 --> 00:01:30.000
shows me in a nice simple format which interfaces

20
00:01:30.000 --> 00:01:34.000
are configured for trunking, which encapsulation is used

21
00:01:34.000 --> 00:01:39.000
and which ports are forwarding for which VLANs.

22
00:01:39.000 --> 00:01:42.000
Let’s have a look at switch 2 as an example

23
00:01:42.000 --> 00:01:51.000
on switch 2   sh int trunk port g0/0, g0/1, g0/2, and g0/3

24
00:01:51.000 --> 00:01:55.000
so these interfaces are trunking, the mode is on

25
00:01:55.000 --> 00:02:00.000
we're not using DTP, encapsulation is dot1q, status is trunking

26
00:02:00.000 --> 00:02:02.000
native VLAN is VLAN 1

27
00:02:02.000 --> 00:02:07.000
the VLANs allowed across those ports are 1 - 4094

28
00:02:07.000 --> 00:02:09.000
currently the VLANs allowed and active

29
00:02:09.000 --> 00:02:12.000
in the management domain are 1, 10, and 20

30
00:02:12.000 --> 00:02:15.000
VLANs in Spanning Tree forwarding state

31
00:02:15.000 --> 00:02:18.000
are not pruned are 1, 10, and 20 across all the ports.

32
00:02:18.000 --> 00:02:22.000
At the moment    sh vlan brief    shows me

33
00:02:22.000 --> 00:02:27.000
that I only have VLAN 1, 10, and 20 configured on the switch

34
00:02:27.000 --> 00:02:34.000
and hence the switch is forwarding those VLANs across those ports

35
00:02:34.000 --> 00:02:39.000
1, 10, and 20 is forwarded across port gigabit 0 1 2 and 3.

36
00:02:39.000 --> 00:02:41.000
Spanning Tree is not blocking any of these ports

37
00:02:41.000 --> 00:02:44.000
and I can see that by typing   sh spanning-tree

38
00:02:44.000 --> 00:02:47.000
as you can see here all those ports are forwarding

39
00:02:47.000 --> 00:02:49.000
and they are designated ports

40
00:02:49.000 --> 00:02:51.000
because the switch is the root switch

41
00:02:51.000 --> 00:02:57.000
whereas on switch 1 once again  sh spanning-tree  shows me

42
00:02:57.000 --> 00:03:02.000
that the switch is not the root bridge or root switch of the Spanning Tree

43
00:03:02.000 --> 00:03:08.000
these ports 1, 2, and 3, so 1, 2, and 3 are blocking

44
00:03:08.000 --> 00:03:11.000
sh int trunk

45
00:03:11.000 --> 00:03:13.000
shows me that those ports are trunk ports

46
00:03:13.000 --> 00:03:19.000
but only gigabit 0/0 is forwarding VLANs 1, 10, and 20 across it.

47
00:03:19.000 --> 00:03:22.000
So    sh int   is trunk is a very useful command

48
00:03:22.000 --> 00:03:27.000
to see a summary of your trunks.
