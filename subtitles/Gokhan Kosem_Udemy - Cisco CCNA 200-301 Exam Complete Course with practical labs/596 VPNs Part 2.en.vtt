WEBVTT
1
00:00:00.610 --> 00:00:05.980
So once again what is a symmetric algorithm in a symmetrical algorithm.

2
00:00:05.980 --> 00:00:10.490
The same key is used to encrypt and decrypt the message.

3
00:00:10.510 --> 00:00:14.980
An example of a symmetric key algorithm would be a yes.

4
00:00:15.100 --> 00:00:23.720
Notice both the sender and the receiver using the same algorithm as well as the same key.

5
00:00:23.760 --> 00:00:30.820
This can cause a major problem because both the sender and the receiver must know what the key is and

6
00:00:30.820 --> 00:00:33.700
they need a method to communicate this.

7
00:00:33.760 --> 00:00:41.680
The problem is how to watch telly securely what the key is if I don't have a secure tunnel established

8
00:00:42.100 --> 00:00:50.710
as yet I need the key to establish the secure tunnel but I cannot establish a secure tunnel until we

9
00:00:50.710 --> 00:00:52.770
both know what the key is.

10
00:00:52.810 --> 00:00:59.920
So this means that we need to communicate the key out of band I need to phone you by I need to is a

11
00:00:59.920 --> 00:01:06.730
mess you or I need to use some outer band method to tell you what key to use.

12
00:01:07.260 --> 00:01:14.760
So as an example if I'm in the UK and you're in the US and we want to set up a private VPN between a

13
00:01:14.760 --> 00:01:21.110
route in the UK and abroad in the US I would have to phone you and let you know what key to use.

14
00:01:21.160 --> 00:01:28.270
That's fine when we have a simple VPN but it doesn't scale well when we have thousands of routers.

15
00:01:28.400 --> 00:01:35.270
It is an advantage of a symmetrical key algorithm the good symmetric ciphers of fast secure and easy

16
00:01:35.270 --> 00:01:42.860
to implement using modern microprocessors and therefore tend to be used for bulk encryption.

17
00:01:42.860 --> 00:01:50.850
Here are some examples of symmetric key algorithms days triple days a year and blowfish unexplained

18
00:01:51.000 --> 00:01:58.330
data encryption standard or DayZ triple days and advanced encryption standard or a yes in more detail

19
00:01:58.340 --> 00:02:00.080
in upcoming slides.

20
00:02:00.320 --> 00:02:08.600
But for now please realize that we still use symmetric key algorithms in VPN today because of the advantage

21
00:02:08.600 --> 00:02:15.920
that they can encrypt bulk data quickly in modern microprocessors so that encryption standard or days

22
00:02:16.490 --> 00:02:23.390
is a symmetric encryption algorithm where the same key is used by the sender and receiver.

23
00:02:23.390 --> 00:02:30.290
So notice the sender uses days with a key of one two three and the receiver uses days with the key of

24
00:02:30.290 --> 00:02:31.840
one two three.

25
00:02:31.850 --> 00:02:37.550
It was developed by IBM and the US National Security Agency in 1975.

26
00:02:38.520 --> 00:02:41.000
It has a fixed key length of 56.

27
00:02:41.010 --> 00:02:48.340
Let's remember once again that a class A IP address gives you two to the power of 24 combinations days

28
00:02:48.360 --> 00:02:55.820
gives you two to the power of the six combinations so the algorithm was good but the key length doesn't

29
00:02:55.820 --> 00:03:01.880
meet today's security requirements and it's recommended that you do not use days in today's corporate

30
00:03:01.880 --> 00:03:03.080
environments.

31
00:03:03.080 --> 00:03:11.390
The problem is is that it's susceptible to brute force attacks by 1998 it days encrypted message was

32
00:03:11.390 --> 00:03:19.190
decrypted within 56 hours and by nineteen ninety nine it took just over twenty two hours to crack.

33
00:03:19.190 --> 00:03:24.790
Once again DayZ is not recommended in today's environments around the same time.

34
00:03:24.980 --> 00:03:32.840
Triple DayZ was developed triple DayZ is also asymmetric key algorithm with the same uses triple days

35
00:03:33.260 --> 00:03:38.410
and the receiver uses triple days and they have the same set of keys.

36
00:03:38.510 --> 00:03:45.530
In this case they are three keys the way triple based works is that clear text data is encrypted with

37
00:03:45.530 --> 00:03:55.730
key one that encrypted text is then decrypted with a different key key too and then it's encrypted with

38
00:03:55.730 --> 00:03:56.940
a third key.

39
00:03:56.960 --> 00:04:05.670
In this case key three so the data is encrypted then decrypted and then encrypted that with different

40
00:04:05.670 --> 00:04:06.680
keys.

41
00:04:06.750 --> 00:04:09.900
Now if key one and key three are the same.

42
00:04:10.020 --> 00:04:16.050
This would result in a hundred and twelve but key length if key one and key three are not the same it

43
00:04:16.050 --> 00:04:24.060
would result in 168 but key lengths as you can see the key length is greater than days which was fifty

44
00:04:24.060 --> 00:04:25.260
six bits in length.

45
00:04:26.160 --> 00:04:31.110
Please note at CCNY level it's not expected that you understand the details of all these algorithms

46
00:04:31.680 --> 00:04:38.640
but I mentioned them here because I find it's easier to understand a VPN work if you have a bit of knowledge

47
00:04:38.640 --> 00:04:41.600
of how the algorithms function.

48
00:04:41.730 --> 00:04:50.850
A yes or advanced encryption standard is the recommended symmetric key algorithm to use today in corporate

49
00:04:50.850 --> 00:04:59.900
environments once again the sender and the receiver use the same algorithm as well as the same key as

50
00:04:59.900 --> 00:05:02.830
this is a symmetric key algorithm.

51
00:05:02.950 --> 00:05:05.330
A Yes comes in different variants.

52
00:05:05.450 --> 00:05:08.840
You've got a hundred twenty eight but eight hundred ninety two.

53
00:05:08.840 --> 00:05:19.090
But an A is 256 but a year was announced in 2001 and became a federal government standard in May of

54
00:05:19.090 --> 00:05:20.960
2002.

55
00:05:21.100 --> 00:05:30.060
It was approved by the NSA for top secret information it once again is a recommended algorithm for BP

56
00:05:30.060 --> 00:05:36.850
and in today's corporate environment the details of these three algorithms are available on the internet.

57
00:05:36.870 --> 00:05:42.950
Have a look at Wikipedia and other sources for more detailed information of how the algorithms work.

58
00:05:42.950 --> 00:05:49.890
But for now I just have an appreciation that is triple days and a yes or symmetric key algorithms that

59
00:05:49.890 --> 00:05:57.630
can be used for bulk encryption and decryption of data on asymmetric key algorithm uses a different

60
00:05:57.630 --> 00:05:59.760
key to encrypt and decrypt.

61
00:06:00.780 --> 00:06:06.520
So for instance the sender would be using a Asymmetric algorithm like RSA.

62
00:06:06.750 --> 00:06:10.550
The receiver would be using an algorithm like RSA.

63
00:06:10.550 --> 00:06:19.430
But please notice different keys are used to encrypt and decrypt the data asymmetric key algorithms

64
00:06:19.580 --> 00:06:25.760
solve many of the long standing problems with symmetric key algorithms like how do you exchange the

65
00:06:25.760 --> 00:06:30.410
secret keys in the first place with a symmetric key algorithm.

66
00:06:30.410 --> 00:06:39.060
For instance how do we send the decided private key to each other without it being intercepted when

67
00:06:39.060 --> 00:06:44.410
using a symmetric key algorithm once again without a secure channel.

68
00:06:44.460 --> 00:06:47.770
There is no way to establish a secure channel.

69
00:06:47.880 --> 00:06:53.880
I need to securely tell you for instance what the shade key is in a symmetric key algorithm that we

70
00:06:53.880 --> 00:07:00.060
both need to know what the shade secret key is to establish a secure channel to be able to securely

71
00:07:00.060 --> 00:07:01.830
send the key to one another.

72
00:07:02.010 --> 00:07:05.180
But we can't set up the channel because we don't have a key yet.

73
00:07:05.250 --> 00:07:08.640
That means we have to tell each other what the key is out of band.

74
00:07:08.640 --> 00:07:14.640
Like by phoning one another asymmetric key algorithms allow us to solve this problem because different

75
00:07:14.640 --> 00:07:23.150
keys are used for encryption versus decryption also note asymmetric key algorithms have key links far

76
00:07:23.150 --> 00:07:32.060
greater than symmetric key algorithms the key links vary from 512 but to 2048 bits a lot of this information

77
00:07:32.060 --> 00:07:37.190
is out of the scope of the course but it's worth knowing so that you can understand how the peons work

78
00:07:37.910 --> 00:07:40.420
with an asymmetric key algorithm.

79
00:07:40.610 --> 00:07:44.030
You firstly generate what's called a private key.

80
00:07:44.030 --> 00:07:49.190
Now the word private means that you don't tell anyone else what your key is.

81
00:07:49.190 --> 00:07:53.210
In other words a private key is kept to oneself.

82
00:07:53.540 --> 00:08:03.290
No one else gets told what your private key is a public key is derived from a private key so firstly

83
00:08:03.290 --> 00:08:07.230
a device like Arata will generate a private key.

84
00:08:07.440 --> 00:08:16.340
It will then generate a public key from its private key please note a private key cannot be generated

85
00:08:16.340 --> 00:08:22.780
from a public key a public key can only be generated from a private key.

86
00:08:22.790 --> 00:08:28.040
Now this is not a math course so we're not going to get into the mathematics of how public and private

87
00:08:28.040 --> 00:08:35.240
keys are derived we as network engineers just need to have an appreciation of how they work and then

88
00:08:35.240 --> 00:08:42.560
how to configure them in networking environments so to sum up you create a private key which you keep

89
00:08:42.560 --> 00:08:50.030
to yourself you then generate a public key from your private key your public key is then shared with

90
00:08:50.030 --> 00:08:59.390
the world now something encrypted with your private key can only be decrypted by your public key and

91
00:08:59.410 --> 00:09:06.110
something encrypted with your public key can only be decrypted with your private key So for instance

92
00:09:06.170 --> 00:09:10.460
if a on the left wants to send something to be on the right.

93
00:09:10.640 --> 00:09:19.400
The way it works is as follows B generates a private key a public key is then generated from these private

94
00:09:19.400 --> 00:09:31.730
key B then shares is public key with a when a wants to send something to be a encrypts the data with

95
00:09:31.730 --> 00:09:35.360
B public key which a now knows.

96
00:09:35.360 --> 00:09:43.520
The only key that can decrypt something encrypted with B's public key is B's private key and B is the

97
00:09:43.520 --> 00:09:46.940
only person that has these private key.

98
00:09:46.940 --> 00:09:53.030
So a encrypts the data with these public key and sends it to B.

99
00:09:53.360 --> 00:10:03.430
B is the only device or person with these private key so only B can decrypt the information can get

100
00:10:03.430 --> 00:10:11.050
really confusing so let me say it again if I want to send something to you that only you can decrypt

101
00:10:11.740 --> 00:10:20.480
I would encrypt the data with your public key if you want to send something to me that only I can decrypt

102
00:10:21.200 --> 00:10:28.400
you would encrypt that data with my public key because only my private key would be able to decrypt

103
00:10:28.400 --> 00:10:33.910
something encrypted with my public key.

104
00:10:33.950 --> 00:10:41.820
Now how does this apply to VPN while in 1976 two gentlemen Duffy and Hellman discovered a way out of

105
00:10:41.820 --> 00:10:44.220
the secure channel dilemma.

106
00:10:44.280 --> 00:10:49.920
In other words the issue we had with the transmission of a shared secret across an insecure medium can

107
00:10:49.920 --> 00:10:56.600
be solved by using Duffy Hellman they found out that by using a different key certain one way functions

108
00:10:56.600 --> 00:10:58.220
could be undone.

109
00:10:58.320 --> 00:11:03.980
This solution called public key cryptography takes advantage of a characteristic of prime an almost

110
00:11:03.980 --> 00:11:05.290
prime numbers.

111
00:11:05.480 --> 00:11:13.100
Specifically how hard it is to find the two factors of a large number that has only two factors both

112
00:11:13.100 --> 00:11:14.680
of which are prime.

113
00:11:14.720 --> 00:11:18.690
This uses things like quadratic residues.

114
00:11:18.750 --> 00:11:21.460
Now unless you're a mathematician that will have no meaning I'm sure.

115
00:11:22.290 --> 00:11:28.390
Now once again we as network engineers do not need to understand the math behind all of these algorithms.

116
00:11:28.390 --> 00:11:32.580
We just have to know when to apply the algorithms in production environments.

117
00:11:33.310 --> 00:11:42.460
So just understand that Duffy Hellman discovered a way to securely create a secure channel to exchange

118
00:11:43.210 --> 00:11:50.110
a shared secret key which is required by algorithms like a strip all days and days a cross an insecure

119
00:11:50.140 --> 00:11:58.480
medium like the Internet securely so that no hacker can find out what the shared secret is.

120
00:11:58.620 --> 00:12:05.670
In brief the way Duffy Holman works is as follows the peers in other words the two devices involved

121
00:12:05.670 --> 00:12:15.630
in a VPN can yield or create a shared secret key based on the other peers public value and their own

122
00:12:15.630 --> 00:12:17.130
secret.

123
00:12:17.130 --> 00:12:24.000
In other words if you and I are going to set up a VPN and we need to create a shared secret key between

124
00:12:24.000 --> 00:12:31.410
us by using complicated mathematics we can create a shared secret securely without other people being

125
00:12:31.410 --> 00:12:38.330
able to work out what the key is you need at least one secret value to perform this function or calculation.

126
00:12:38.370 --> 00:12:46.020
Remember secret or private keys are not exchanged with other people so the attacker has no secret values

127
00:12:46.560 --> 00:12:53.450
and needs to perform a discreet logarithm of a public Valley which is computationally infeasible.

128
00:12:53.460 --> 00:12:57.330
In other words in theory impossible.

129
00:12:57.350 --> 00:13:05.600
So for example yes empty it takes data that we want to send securely using an algorithm like a yes a

130
00:13:05.600 --> 00:13:13.110
yes being a symmetric key algorithm requires that the same key be useful encryption and decryption.

131
00:13:13.260 --> 00:13:21.330
We want to be able to work out a shared secret key between the sender and receiver securely across an

132
00:13:21.360 --> 00:13:22.790
insecure medium.

133
00:13:23.040 --> 00:13:28.130
With all kinds of undesirables trying to sniff the network and work out what the password is.

134
00:13:28.320 --> 00:13:35.880
So both peers need to establish a shared key securely and Duffy Hellman gives us the ability to do this

135
00:13:37.220 --> 00:13:43.880
by using public key cryptography in other words private and public keys we can work out a shared secret

136
00:13:43.880 --> 00:13:51.820
securely without others being able to see that so when two peers want to set up a VPN they use Duffy

137
00:13:51.820 --> 00:13:59.290
Hellman to work out a shared key the reason why we need that shade key is symmetric key algorithms like

138
00:13:59.320 --> 00:14:02.910
a is require that the same key be used on both sides.

139
00:14:03.070 --> 00:14:10.060
And the reason why we use a yes is because it's good for bulk encryption once the Duffy Hellman key

140
00:14:10.060 --> 00:14:12.040
exchange has taken place.

141
00:14:12.040 --> 00:14:18.100
We can create a shared secret for a yes and therefore a yes in the shade shaky can be used for bulk

142
00:14:18.100 --> 00:14:26.770
encryption of our data which can be sent across the insecure Internet securely and only decrypted by

143
00:14:26.770 --> 00:14:27.840
the receiving party.
