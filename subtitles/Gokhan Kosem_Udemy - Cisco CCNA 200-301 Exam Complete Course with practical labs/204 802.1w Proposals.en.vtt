WEBVTT
1
00:00:00.000 --> 00:00:06.000
On point-to-point links, a proposal agreement handshake sequence is used

2
00:00:06.000 --> 00:00:09.000
by Rapid Spanning Tree to achieve fast convergence.

3
00:00:09.000 --> 00:00:15.000
So Rapid Spanning Tree uses this to quickly transition ports to the forwarding state

4
00:00:15.000 --> 00:00:20.000
where as 802.1D was just waiting for timers to expire

5
00:00:20.000 --> 00:00:24.000
before ports where set to the forwarding state.

6
00:00:24.000 --> 00:00:27.000
In this topology, if the link between the root switch on port 0

7
00:00:27.000 --> 00:00:35.000
and port 1, on this switch, came up they would send proposals to each other.

8
00:00:35.000 --> 00:00:37.000
Both ports are put into designated blocking

9
00:00:37.000 --> 00:00:44.000
and they both send a Rapid Spanning Tree BPDU with the proposal bit set

10
00:00:44.000 --> 00:00:52.000
Now, these rely on a new BPDU format which contains a proposal bit in the BPDU.

11
00:00:52.000 --> 00:00:57.000
So additional information in a Rapid Spanning Tree BPDU has been added

12
00:00:57.000 --> 00:01:01.000
we have the proposal bit, we have the port role

13
00:01:01.000 --> 00:01:04.000
we have we have learning forwarding and agreement bits

14
00:01:04.000 --> 00:01:08.000
as well as a topology change bit and topology change acknowledgment bit

15
00:01:08.000 --> 00:01:12.000
that are part of the Rapid Spanning Tree BPDU.

16
00:01:12.000 --> 00:01:15.000
So essentially what happens is when the port comes up

17
00:01:15.000 --> 00:01:18.000
the switches sent proposal to each other

18
00:01:18.000 --> 00:01:23.000
saying I want to have the designated port on this segment.

19
00:01:23.000 --> 00:01:27.000
However, because bridge A, this switch here

20
00:01:27.000 --> 00:01:31.000
receives the BPDU indicating a superior path cost

21
00:01:31.000 --> 00:01:37.000
in other words, a better path is found via the root switch then itself

22
00:01:37.000 --> 00:01:42.000
it immediately knows that port 1 is gonna be its new root port.

23
00:01:42.000 --> 00:01:45.000
So it knows right away that this port should be its root port

24
00:01:45.000 --> 00:01:49.000
because this port has the best path back to the root switch.

25
00:01:49.000 --> 00:01:53.000
In other words a superior or better or lower path cost.

26
00:01:53.000 --> 00:01:58.000
Bridge A, in other words, this switch start a sync

27
00:01:58.000 --> 00:02:01.000
to ensure that all of its ports are in sync with this new information.

28
00:02:01.000 --> 00:02:05.000
A port is in sync if it meets the following criteria

29
00:02:05.000 --> 00:02:09.000
it is in the blocking state, in other words, its discarding ports or it's an edge port.

30
00:02:09.000 --> 00:02:13.000
So in this example, port 2 is an alternate port

31
00:02:13.000 --> 00:02:18.000
port 3 is a designated port  and port 4 is an edge port.

32
00:02:18.000 --> 00:02:25.000
So port 2 and port 4 already meet one of the criteria listed above.

33
00:02:25.000 --> 00:02:28.000
It’s in the blocking state or it's an edge port.

34
00:02:28.000 --> 00:02:35.000
So to be in the sync, bridge A must block port 3 and assigns it to the discarding
state.

35
00:02:35.000 --> 00:02:37.000
Now that all ports are in sync

36
00:02:37.000 --> 00:02:41.000
bridge A can unblock its newly selected root port

37
00:02:41.000 --> 00:02:44.000
and reply to the root with an agreement message.

38
00:02:44.000 --> 00:02:49.000
So basically a proposal is sent from the root to switch A.

39
00:02:49.000 --> 00:02:53.000
Switch A agrees that this is the best path back to the root

40
00:02:53.000 --> 00:02:57.000
it blocks all ports or make sure that they are in sync

41
00:02:57.000 --> 00:03:00.000
because they're edge ports and then sends back an agreement.

42
00:03:00.000 --> 00:03:03.000
As soon as that happens the port can be unblocked.

43
00:03:03.000 --> 00:03:08.000
So bridge A can unblock its port and replies with an agreement message

44
00:03:08.000 --> 00:03:12.000
once the root switch receives that agreement message

45
00:03:12.000 --> 00:03:15.000
it can transition immediately to the forwarding state.

46
00:03:15.000 --> 00:03:19.000
So proposal, agreement, unblock port

47
00:03:19.000 --> 00:03:21.000
in other words, set it to the forwarding state.

48
00:03:21.000 --> 00:03:24.000
Now that happens very, very quickly.

49
00:03:24.000 --> 00:03:27.000
Now by the same token, switch A can send the proposal to this switch.

50
00:03:27.000 --> 00:03:32.000
So this process continues, proposal to this switch.

51
00:03:32.000 --> 00:03:34.000
The switch sends back an agreement

52
00:03:34.000 --> 00:03:36.000
this port can go to the forwarding state

53
00:03:36.000 --> 00:03:40.000
this happens very quickly because it doesn’t rely on timers.

54
00:03:40.000 --> 00:03:45.000
This way of handshakes propagates quickly towards the edge of the network

55
00:03:45.000 --> 00:03:49.000
and quickly restores connectivity after a change in the topology.

56
00:03:49.000 --> 00:03:53.000
If a designated discarding port does not receive an agreement

57
00:03:53.000 --> 00:03:57.000
to its proposal, it slowly transitions to the forwarding state

58
00:03:57.000 --> 00:04:02.000
using the traditional 802.1D listening, learning sequence.

59
00:04:02.000 --> 00:04:05.000
This could happen if the remote bridge doesn’t understand

60
00:04:05.000 --> 00:04:11.000
Rapid Spanning Tree BPDUs or if the remote bridge port is blocking.

61
00:04:11.000 --> 00:04:13.000
So in this topology at the moment

62
00:04:13.000 --> 00:04:19.000
sh spanning-tree g0/1

63
00:04:19.000 --> 00:04:23.000
is a designated port in the forwarding state but it's shared port.

64
00:04:23.000 --> 00:04:27.000
In this topology, g0/0 has been shutdown

65
00:04:27.000 --> 00:04:31.000
so the root port on switch 3 is g0/1

66
00:04:31.000 --> 00:04:34.000
and the alternate port is g0/2

67
00:04:34.000 --> 00:04:38.000
but if i no shut g0/0

68
00:04:38.000 --> 00:04:41.000
so I’ve enabled this port again.

69
00:04:41.000 --> 00:04:50.000
sh spanning-tree notice g0/0 is the root port of switch 3.

70
00:04:50.000 --> 00:04:53.000
This port is now the designated port but is in a blocking state.

71
00:04:53.000 --> 00:04:57.000
0/2 is in the blocking state backup port.

72
00:04:57.000 --> 00:05:04.000
On switch 2 the status has changed to blocking

73
00:05:04.000 --> 00:05:09.000
because in this segment this is the best port to use to get back to root bridge.

74
00:05:09.000 --> 00:05:13.000
However, it takes longer for this process to complete

75
00:05:13.000 --> 00:05:16.000
than it would be if it was point-to-point link

76
00:05:16.000 --> 00:05:18.000
shared ports take longer to converge.

77
00:05:18.000 --> 00:05:22.000
so let’s do that again, I'll shut the port.

78
00:05:22.000 --> 00:05:25.000
So gigabit 0/0 is now gonna be shutdown.

79
00:05:25.000 --> 00:05:31.000
Previously gigabit 0/1 on this switch was the alternate port.

80
00:05:31.000 --> 00:05:33.000
Now it’s the designated port

81
00:05:33.000 --> 00:05:42.000
but it's blocking, still blocking, sh spanning-tree on switch 3.

82
00:05:42.000 --> 00:05:44.000
Notice alternate port is blocking

83
00:05:44.000 --> 00:05:50.000
root port is forwarding, now the port is in the learning state.

84
00:05:50.000 --> 00:05:52.000
So traffic is still being dropped on this port

85
00:05:52.000 --> 00:05:55.000
even though this is the port to use to get to the root bridge.

86
00:05:55.000 --> 00:06:00.000
Now it’s forwarding, can take 30 seconds on a shared ports

87
00:06:00.000 --> 00:06:07.000
because we’re using traditional 802.1D, listening, learning sequences on that port.

88
00:06:07.000 --> 00:06:14.000
To use proposals and agreements the ports need to be configured

89
00:06:14.000 --> 00:06:19.000
as point-to-point ports or need to negotiate to use full duplex.
