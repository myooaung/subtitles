WEBVTT
1
00:00:10.950 --> 00:00:19.170
This is one of multiple IP addressing and submitting scenarios rather than just working out the subnets

2
00:00:19.290 --> 00:00:20.960
for a scenario.

3
00:00:21.100 --> 00:00:28.230
We're going to work them out and then configure the devices so that we can practically design and configure

4
00:00:28.650 --> 00:00:32.120
a Cisco IP network in this scenario.

5
00:00:32.120 --> 00:00:36.870
Let's assume that we've got two sites one in San Francisco one in New York.

6
00:00:36.870 --> 00:00:40.770
The sites are connected via a serial link.

7
00:00:40.860 --> 00:00:46.670
In this scenario we've been allocated a subnet of 1 9 2 1 6 8 1.0 slice 24.

8
00:00:46.980 --> 00:00:52.210
And we need to subnet this network to support this topology.

9
00:00:52.240 --> 00:00:54.880
Let's assume that this is a small medium business.

10
00:00:54.910 --> 00:00:59.530
So all PCs at each site will be in the same subnet.

11
00:00:59.530 --> 00:01:05.980
We're going to keep it simple by configuring the hosts in a single subnet at each site but they are

12
00:01:05.980 --> 00:01:10.870
60 hosts in San Francisco and 60 hosts in New York.

13
00:01:10.880 --> 00:01:22.730
OK so this is our subnet 1 9 2 1 6 8 1.0 slice 24 now slushed 24 means that there are 24 binary ones

14
00:01:22.730 --> 00:01:25.910
in the subnet mask in the first octet.

15
00:01:25.920 --> 00:01:28.020
We have 2 binary ones.

16
00:01:28.350 --> 00:01:33.290
Second octet to 8 binary ones a third octet a binary ones.

17
00:01:33.330 --> 00:01:37.100
Now in an octet there is no space between the binary ones.

18
00:01:37.110 --> 00:01:45.570
I'm just going to represent them that way to make it easier to read 24 is a side notation or classless

19
00:01:45.570 --> 00:01:47.600
into domain writing notation.

20
00:01:47.820 --> 00:01:54.010
Twenty four means that the subnet mask again consists of 24 binary ones.

21
00:01:54.090 --> 00:01:57.640
Again there is no space between the binary ones.

22
00:01:57.990 --> 00:01:59.660
But to make it easier to read.

23
00:01:59.850 --> 00:02:01.550
I'm going to show it with spaces.

24
00:02:01.560 --> 00:02:10.650
So he has octet 1 8 binary ones equates to 255 and decimal 8 binary ones equates to 255 8 binary ones

25
00:02:10.650 --> 00:02:17.160
equates to 255 8 to binary zeros equates to 0 using decimal.

26
00:02:17.160 --> 00:02:22.110
So this is the dotted decimal notation of the subnet mask.

27
00:02:22.140 --> 00:02:27.540
This is the Sajda notational binary notation.

28
00:02:27.580 --> 00:02:31.520
Now when working with binary Don't forget the following.

29
00:02:31.750 --> 00:02:39.670
If you have a 1 in the least significant but in the octet that represents 1 in decimal 1 in the second

30
00:02:39.730 --> 00:02:48.070
least significant position in binary equates to 2 in decimal that equates to 4 and so forth and so 1

31
00:02:48.220 --> 00:02:54.870
1 in the most significant position in the octet equates to 128.

32
00:02:54.900 --> 00:03:00.700
So if we look at 1 9 2 1 6 8 1 2 0 in binary 1 9 2 is that.

33
00:03:00.870 --> 00:03:06.270
In other words it's 128 plus 64 168 in decimal.

34
00:03:06.270 --> 00:03:08.330
Looks like this in binary.

35
00:03:08.340 --> 00:03:15.820
In other words it's 128 plus 32 plus 8 1 in decimal.

36
00:03:15.830 --> 00:03:17.690
Looks like this in binary.

37
00:03:17.690 --> 00:03:23.220
In other words only the last bit is set on 0 in decimal.

38
00:03:23.220 --> 00:03:24.870
Looks as follows.

39
00:03:24.870 --> 00:03:27.250
This is what subnet mask looks like.

40
00:03:28.420 --> 00:03:34.280
255 255 255 is zero.

41
00:03:34.900 --> 00:03:39.240
So in other words this portion is the network portion.

42
00:03:39.490 --> 00:03:46.180
This portion is the host portion a subnet mask indicates which portion is the network and which portion

43
00:03:46.180 --> 00:03:47.430
is host.

44
00:03:47.440 --> 00:03:53.760
So this means that the first optative network second octet is network a third octet is network fourth

45
00:03:53.770 --> 00:03:55.280
octet is.

46
00:03:55.740 --> 00:04:03.330
So 1 on 2 1 6 8 1.0 is 24 means that this is network as host.

47
00:04:03.340 --> 00:04:06.140
OK so we've been allocated this network.

48
00:04:06.220 --> 00:04:09.030
How do we submit this.

49
00:04:09.090 --> 00:04:14.190
You need to decide whether you going to use host or network you are submitting.

50
00:04:14.190 --> 00:04:16.310
In this example we can look at hosts.

51
00:04:16.560 --> 00:04:23.700
We've got a requirement for 60 hosts on two subnets when you want to work out the number of bits required

52
00:04:23.700 --> 00:04:26.580
to support a certain number of hosts.

53
00:04:26.580 --> 00:04:33.970
Use the formula 2 to the power of x where x is the number of bits that is required for hosts minus 2.

54
00:04:34.680 --> 00:04:41.640
If you want to work out the number of networks you use the formula 2 to the power of x where x is the

55
00:04:41.640 --> 00:04:45.240
number of bits that you are going to be using for networks.

56
00:04:46.790 --> 00:04:53.680
The reason why we have to subtract two here is we need to we need to allocate two addresses for special

57
00:04:53.680 --> 00:04:54.860
use cases.

58
00:04:54.970 --> 00:05:01.750
One is network Sublette and one is the broadcast address so hence we need to subtract two.

59
00:05:02.500 --> 00:05:07.960
So if we're going to support 60 hosts That's what we've got enough typology here.

60
00:05:08.020 --> 00:05:13.240
We've got two subnets consisting of 60 hosts how many do we need.

61
00:05:13.490 --> 00:05:14.860
So to work this out.

62
00:05:15.730 --> 00:05:18.200
Work out how many binary butts you need.

63
00:05:18.490 --> 00:05:24.920
So two to the power of two as an example minus two gives you two.

64
00:05:24.960 --> 00:05:34.610
So if you use two binary bits per formula that any support two hosts OK so how many bits are required

65
00:05:34.610 --> 00:05:36.680
to support 60 hosts.

66
00:05:36.680 --> 00:05:38.260
The answer is 6 butts.

67
00:05:38.450 --> 00:05:45.930
And that's because two to the power of six equals 64 minus two it gives you 62.

68
00:05:46.100 --> 00:05:53.690
So we will have enough hosts to support 60 hosts if we use six plus.

69
00:05:53.800 --> 00:06:00.960
So 60 hosts will require six bucks for the host portion of the address.

70
00:06:00.980 --> 00:06:09.740
Now currently 1 2 1 6 8 1.0 slice 24 means we have 8 butts in the host portion.

71
00:06:09.830 --> 00:06:21.200
So if we need six butts in the host portion that means that two bits can be stolen if you like for subnets.

72
00:06:21.230 --> 00:06:31.220
So think of subnets as stolen but we are going to steal two bits from the host portion to create additional

73
00:06:31.220 --> 00:06:32.800
subnets.

74
00:06:32.920 --> 00:06:39.540
That means that our subnet mask changes to slash 26.

75
00:06:39.550 --> 00:06:45.700
The reason why it's like 26 is we have eight in the first octet for network plus 8 bits in the second

76
00:06:45.700 --> 00:06:50.320
octet Plus 8 bits in a third octet that gives us 24.

77
00:06:50.500 --> 00:06:57.760
But we also have an additional 2 bats in the fourth octet which gives us 26.

78
00:06:57.760 --> 00:07:11.630
So a subnet mask and dotted decimal notation will be 2 4 5 2 4 5 2 4 5 192 it's 192 because 128 plus

79
00:07:11.630 --> 00:07:18.930
64 gives you 192 So this is our new subnet mask.

80
00:07:19.430 --> 00:07:23.460
So how do we work out the different subnets.

81
00:07:23.500 --> 00:07:35.070
The first subnet will be exactly the 1 2 1 6 8 1.0 slushed 26 not to work out the next subnet look at

82
00:07:35.070 --> 00:07:36.720
your subnet portion.

83
00:07:36.720 --> 00:07:39.580
So what I'll do is I'll change this to another color

84
00:07:42.660 --> 00:07:44.030
lets say orange.

85
00:07:44.220 --> 00:07:48.300
So the orange portion or subnet portion needs to change.

86
00:07:48.300 --> 00:07:52.070
This is a network this subnet.

87
00:07:52.200 --> 00:08:01.480
This is hoost portion so to work out the next subnet you cycle through all the variations of binary

88
00:08:01.570 --> 00:08:04.350
for the number of bits that you've got.

89
00:08:04.360 --> 00:08:13.450
So think about the is two cables you've got two cables and you can put electricity on one cable or two

90
00:08:13.450 --> 00:08:15.400
cables or no cables.

91
00:08:15.820 --> 00:08:19.780
So this means there's no electricity on either cable.

92
00:08:19.780 --> 00:08:25.710
This means that you putting electricity on the second cable but not the first cable.

93
00:08:25.720 --> 00:08:30.220
This means that you're putting electricity on the first cable but not the second cable.

94
00:08:30.220 --> 00:08:34.340
And this means that you're putting electricity on both cables.

95
00:08:34.390 --> 00:08:38.310
So this is no electricity on both cables.

96
00:08:38.310 --> 00:08:39.330
This is electricity.

97
00:08:39.340 --> 00:08:46.760
On the second cable this is electricity on the first cable.

98
00:08:46.990 --> 00:08:50.640
And this is electricity on both cables.

99
00:08:50.680 --> 00:08:56.500
So what does that equate to this means zero in decimal.

100
00:08:56.520 --> 00:09:08.710
This however looking at the entire octet is 0 0 1 in binary means that the second bit is set on.

101
00:09:08.720 --> 00:09:11.930
So what that means is that this is 64.

102
00:09:12.260 --> 00:09:15.020
What does this whole octet equate to.

103
00:09:15.200 --> 00:09:18.240
That's 128 first binary.

104
00:09:18.250 --> 00:09:20.770
But Ted is on.

105
00:09:20.870 --> 00:09:22.370
What does this equate to.

106
00:09:22.400 --> 00:09:24.540
This is one hundred ninety two.

107
00:09:25.070 --> 00:09:29.210
So what we've got now are four subnets.

108
00:09:29.210 --> 00:09:40.350
1 9 2 1 6 8 1.0 26 1 9 2 1 6 8 1 64 slice 26 128 and 192.

109
00:09:40.360 --> 00:09:48.710
So what we can do now is allocate the first subnet to the hosts on the left and then as an example we

110
00:09:48.710 --> 00:09:56.110
could allocate the second subnet to the hosts on the right.

111
00:09:56.290 --> 00:10:06.520
And then what we could do is allocate the third subnet for the serial link and that means we've got

112
00:10:06.520 --> 00:10:09.980
one additional subnet for future use.

113
00:10:10.000 --> 00:10:15.490
Now we can optimize the subnet and I'll show you how to do that later but for now we'll allocate a slash

114
00:10:15.490 --> 00:10:19.270
26 subnet to the serial link.

115
00:10:19.270 --> 00:10:20.770
Generally you don't want to do that.

116
00:10:20.770 --> 00:10:27.580
You want to allocate to slash 30 which means that you only have two IP addresses in a subnet and you

117
00:10:27.580 --> 00:10:30.220
do that to conserve IP addresses.

118
00:10:30.220 --> 00:10:36.760
But for now let's configure the network using slash 26 and then I'll show you later how to subnet this

119
00:10:36.850 --> 00:10:38.070
further.

120
00:10:38.070 --> 00:10:41.500
I hope you found this video useful if it was of benefit to you.

121
00:10:41.500 --> 00:10:45.580
Please LIKE IT AND PLEASE SUBSCRIBE TO MY YOUTUBE CHANNEL.

122
00:10:45.820 --> 00:10:47.410
I wish you all the very best.
