WEBVTT
1
00:00:00.330 --> 00:00:07.590
Now if they were multiple hosts on the inside network let's say we've got p.s. one and PC to PC one

2
00:00:07.590 --> 00:00:13.510
has an IP address of 10 to 1 to 1 and 1 PC to has an IP address of 10 that one would wonder.

3
00:00:13.890 --> 00:00:20.400
In this example if we were using one to one net rather than port address translation translational Pat

4
00:00:20.790 --> 00:00:24.710
we would need to create a net entry for each host.

5
00:00:24.810 --> 00:00:31.590
So Host 1 as an example would be not to talk to one but one would want a to and host to a PC ti would

6
00:00:31.590 --> 00:00:40.710
be nattered to one but one would 1.3 the net increase would look as follows 10 1 1 1 2 1 1 1 2 10 1

7
00:00:40.710 --> 00:00:48.690
1 2 2 2 2 1 1 2 1 2 and 3 as the inside global address outside local outside global in this example

8
00:00:48.690 --> 00:00:49.840
would be the same.

9
00:00:49.860 --> 00:00:55.530
So the inside local address would be the actual IP address of the host the inside global address would

10
00:00:55.530 --> 00:01:00.450
be the nattered global address as seen on the Internet.

11
00:01:00.690 --> 00:01:05.670
The outside local and outside global addresses in this example would remain the same because we are

12
00:01:05.670 --> 00:01:12.990
not enacting the destination IP address only the source IP address will be noted in this example.

13
00:01:13.050 --> 00:01:19.620
The problem with Pier network address translation as shown in this example is that you would need a

14
00:01:19.800 --> 00:01:28.860
public IP address for every internal host that uses a private RAFC 19:18 address that kind of defeats

15
00:01:28.860 --> 00:01:34.590
the whole purpose of network address translation where we want to conserve IP addresses in the real

16
00:01:34.590 --> 00:01:35.210
world.

17
00:01:35.220 --> 00:01:43.800
We tend to use Pat or port address translation which so Scott also call not overloading Pat allows multiple

18
00:01:43.860 --> 00:01:51.450
inside host addresses such as 10 1 on 1 and 10 1 20 to be netted to the same public IP address.

19
00:01:51.450 --> 00:01:58.260
So in this example both PCs are indebted to the same inside global address.

20
00:01:58.260 --> 00:02:00.240
Its not a one to one mapping.

21
00:02:00.360 --> 00:02:06.900
In this example two private IP addresses on Nottage to a single public IP address.

22
00:02:06.900 --> 00:02:09.900
In addition in this example one dog wandered wandered.

23
00:02:09.900 --> 00:02:13.590
One is the router is configured IP address.

24
00:02:13.590 --> 00:02:15.240
That raises another issue.

25
00:02:15.540 --> 00:02:22.650
How does the router to free initiate traffic that's destined to itself versus traffic destined to PC

26
00:02:22.650 --> 00:02:26.410
one versus traffic destined to PC.

27
00:02:26.670 --> 00:02:33.000
So when PC one since traffic onto the Internet to the server and the traffic is returned How does the

28
00:02:33.000 --> 00:02:38.330
router know that that traffic belongs to PC one rather than PC.

29
00:02:38.340 --> 00:02:42.100
Two if the traffic is going to the same IP address.

30
00:02:42.180 --> 00:02:48.060
So in other words how does the router differentiate between different sessions or different flows if

31
00:02:48.090 --> 00:02:52.620
multiple hosts on the inside are talking to the same server on the Internet.

32
00:02:52.800 --> 00:02:56.730
Well that's where Idris translation comes in.

33
00:02:56.730 --> 00:03:00.250
In this example multiple hosts are sharing the same IP address.

34
00:03:00.270 --> 00:03:08.790
So the way to make the entries unique is to combine an IP address with a port number to differentiate

35
00:03:08.790 --> 00:03:14.410
between the different sessions or different host devices.

36
00:03:14.820 --> 00:03:21.420
And that's where the port address translation term comes in because multiple hosts are sharing the same

37
00:03:21.420 --> 00:03:22.660
IP address.

38
00:03:22.710 --> 00:03:31.290
The way to get a unique entry in the inside global table is to combine a port and an IP address.

39
00:03:31.290 --> 00:03:38.940
So the combination of port and IP address provides a unique value which allows the router to differentiate

40
00:03:38.940 --> 00:03:40.470
between entries.

41
00:03:40.500 --> 00:03:48.470
So in this example both PC 1 and pc 2 are sharing $1.1 1.1 as the inside global address.

42
00:03:48.510 --> 00:03:55.050
However when host 1 initiate a session to the server it's going to choose a random way femoral port

43
00:03:55.050 --> 00:04:02.310
number to uniquely identify the session on the local PC when the traffic hits the router.

44
00:04:02.310 --> 00:04:09.510
The router will use that chosen source port number to represent the next entry in the table.

45
00:04:09.810 --> 00:04:18.430
So the PC chose 1024 and that's the entry used in the inside global NAT table entry.

46
00:04:18.870 --> 00:04:24.910
If PC to initiate a session to the server and let's say for argument's sake it chose ten twenty five

47
00:04:24.960 --> 00:04:31.740
as the source port number that's the entry used on the router to uniquely identify the session.

48
00:04:31.770 --> 00:04:37.350
So when traffic is sent from these PCs to the server and it's returned back to the router from the server

49
00:04:37.830 --> 00:04:43.460
the server is able to differentiate between traffic that's destined to tend not one but one to one.

50
00:04:43.680 --> 00:04:49.590
There's this traffic that's destined to Tennet wondered wondered too because of the unique IP address

51
00:04:49.620 --> 00:04:51.870
and port number combination.

52
00:04:51.870 --> 00:04:58.170
So what happens if both PCs for whatever reason randomly choose the same source port number.

53
00:04:58.200 --> 00:05:02.440
So let's assume both you want a PC to chose 10:24.

54
00:05:02.730 --> 00:05:09.840
While all the rodded does is it just changes the entry in the inside global table to keep the entry

55
00:05:09.840 --> 00:05:10.610
unique.

56
00:05:10.770 --> 00:05:18.390
So tane one one to chose 10:24 is the port number and the router simply changes that to another port

57
00:05:18.390 --> 00:05:21.840
number to keep the valley's unique in the table.

58
00:05:21.840 --> 00:05:26.550
So in the server sense traffic to the Rodda destined to wondered wondered wondered.

59
00:05:26.550 --> 00:05:29.200
One port number ten twenty five.

60
00:05:29.220 --> 00:05:35.770
The router simply changes the address to 10 that one did wander to port number 10:24.

61
00:05:36.270 --> 00:05:41.650
So if you sniffing the traffic on this local area network connection you would see traffic with the

62
00:05:41.650 --> 00:05:42.840
source address of 10.

63
00:05:42.870 --> 00:05:43.730
Doug wondered wondered.

64
00:05:43.730 --> 00:05:50.140
One port 10:24 going to the servo with a drays 1:58 to port 80.

65
00:05:50.250 --> 00:05:57.450
You'd also see traffic from BCT with IP address change but one would want to port number 10:24 going

66
00:05:57.450 --> 00:06:01.600
to the same server to toe to toe to toe to port 80.

67
00:06:01.620 --> 00:06:06.960
However when the traffic hits the router the road is going to change those valleys when the traffic

68
00:06:06.960 --> 00:06:11.180
is knotted by the Rodda before seeing the traffic on the Internet.

69
00:06:11.190 --> 00:06:14.000
The rockwool changed the source addresses.

70
00:06:14.340 --> 00:06:21.510
So if you are sniffing the traffic on the Internet interface you would see traffic from PC one now having

71
00:06:21.870 --> 00:06:29.400
a source IP address of one block one took one to one port 10:24 destination address remains the same.

72
00:06:29.480 --> 00:06:34.610
We are not changing the outside global and outside local addresses.

73
00:06:34.650 --> 00:06:43.260
You would also see traffic from PC to the source address would now be 1.1 at 1.1 port 10:25 on this

74
00:06:43.260 --> 00:06:50.940
interface with the destination set to the server so the router has netted both the IP address and in

75
00:06:50.940 --> 00:06:55.990
this case it's also changed the port number to keep the values unique.

76
00:06:56.070 --> 00:07:01.680
The server in this example believes that it's got two sessions from the same host one wondered wondered

77
00:07:01.680 --> 00:07:03.390
One way is an actual fact.

78
00:07:03.420 --> 00:07:10.440
They are two separate PCs but the server is unaware of that as it only sees the nattered IP address

79
00:07:11.130 --> 00:07:13.570
when the server returns traffic to the router.

80
00:07:13.680 --> 00:07:19.770
It's going to return traffic to one that one want wanted one port 10:24 source address would now be

81
00:07:19.840 --> 00:07:24.990
to to to to to to to port 80 as well as destination address of wondered.

82
00:07:24.990 --> 00:07:25.320
Wondered.

83
00:07:25.320 --> 00:07:25.620
Wondered.

84
00:07:25.620 --> 00:07:33.150
One port ten twenty five so-so grace of two toe to toe to toe to port 80 the server once again believes

85
00:07:33.150 --> 00:07:39.690
that it's talking to the same host but different sessions so same IP address but different port numbers.
