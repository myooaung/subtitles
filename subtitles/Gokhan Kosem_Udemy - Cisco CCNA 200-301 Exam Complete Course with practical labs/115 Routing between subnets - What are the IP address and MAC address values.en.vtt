WEBVTT
1
00:00:00.000 --> 00:00:06.000
The ping traffic can now be transmitted with a source MAC address of A

2
00:00:06.000 --> 00:00:10.000
which is the local machine, destination MAC addresses of C

3
00:00:10.000 --> 00:00:15.000
in other words PC C the destination MAC address was learnt through ARP

4
00:00:15.000 --> 00:00:19.000
Source IP address is 10.1.1.1

5
00:00:19.000 --> 00:00:21.000
destination IP address is 10.1.1.2

6
00:00:21.000 --> 00:00:26.000
When the hub receives the frame from PC A, it will repeat it

7
00:00:26.000 --> 00:00:29.000
out of all interfaces except the interface it arrived on.

8
00:00:29.000 --> 00:00:33.000
So the router will once again receive the frame but will drop it

9
00:00:33.000 --> 00:00:35.000
because its MAC address is G

10
00:00:35.000 --> 00:00:39.000
and the destination MAC address for this frame is C.

11
00:00:39.000 --> 00:00:43.000
PC C will also receive the traffic and will accept it

12
00:00:43.000 --> 00:00:47.000
because the destination MAC address is C and its local MAC address is C.

13
00:00:47.000 --> 00:00:51.000
the layer 2 headers will be stripped and the IP address information

14
00:00:51.000 --> 00:00:56.000
will be read by high layer protocols, this is an ICMP echo packet.

15
00:00:56.000 --> 00:01:01.000
So the PC will reply with an echo reply message.

16
00:01:01.000 --> 00:01:05.000
C will send the frame to the hub with the source MAC address of  C

17
00:01:05.000 --> 00:01:09.000
destination MAC address of A it knows the MAC address of A

18
00:01:09.000 --> 00:01:11.000
because of the previous ARP request message.

19
00:01:11.000 --> 00:01:16.000
So its ARP cache has a entry associating MAC address A

20
00:01:16.000 --> 00:01:21.000
with IP address 10.1.1.1 so source Mac address in the frame is c

21
00:01:21.000 --> 00:01:24.000
destination Mac address is A, source IP address is 10.1.1.2

22
00:01:24.000 --> 00:01:27.000
destination IP address is 10.1.1.1

23
00:01:27.000 --> 00:01:29.000
When the frame is receive by the hub

24
00:01:29.000 --> 00:01:32.000
the hub will repeat it out of all ports

25
00:01:32.000 --> 00:01:34.000
except the one on which was received.

26
00:01:34.000 --> 00:01:38.000
The router will receive the frame but will drop it

27
00:01:38.000 --> 00:01:41.000
because the destination MAC address is A not the G

28
00:01:41.000 --> 00:01:43.000
the local routers MAC address.

29
00:01:43.000 --> 00:01:47.000
When A receive the frame from the hub it will accept it

30
00:01:47.000 --> 00:01:51.000
because the destination MAC address is A and the PCâ€™s Mac address is A,

31
00:01:51.000 --> 00:01:53.000
it will then strip layer 2 headers

32
00:01:53.000 --> 00:01:57.000
and forward the information to higher layer protocols.

33
00:01:57.000 --> 00:02:02.000
In this case it was an echo reply, so the ping will show a success message.

34
00:02:02.000 --> 00:02:06.000
In other words an echo request was sent to PC C

35
00:02:06.000 --> 00:02:10.000
and an echo reply message was successfully received back.

36
00:02:10.000 --> 00:02:16.000
So in my Wireshark capture, for example, I can filter on ICMP messages

37
00:02:16.000 --> 00:02:23.000
I can see the initial echo request message sent from my PC to 10.0.0.254

38
00:02:23.000 --> 00:02:26.000
and I can then see the echo reply message.

39
00:02:26.000 --> 00:02:30.000
Notice please that these are unicast frames.

40
00:02:30.000 --> 00:02:34.000
Unicast firstly from my PC to the local router

41
00:02:34.000 --> 00:02:38.000
and then a unicast from the router to my local machine.

42
00:02:38.000 --> 00:02:41.000
The same information would be displayed if you were pinging

43
00:02:41.000 --> 00:02:44.000
another local device on the segment.

44
00:02:44.000 --> 00:02:50.000
As the user you would see something similar to this ping 10.0.0.254

45
00:02:50.000 --> 00:02:52.000
and the ping was successful.

46
00:02:52.000 --> 00:02:57.000
So in this example my PC successfully got a reply

47
00:02:57.000 --> 00:03:02.000
from the remote device that I was pinging.
