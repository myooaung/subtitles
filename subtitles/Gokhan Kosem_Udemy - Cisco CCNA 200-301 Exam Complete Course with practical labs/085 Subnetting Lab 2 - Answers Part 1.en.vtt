WEBVTT
1
00:00:06.310 --> 00:00:09.500
OK so let's complete the submitting lab.

2
00:00:09.550 --> 00:00:18.910
We were told of that previously network 1 9 2 1 6 8 1 0 slash 24 was broken up into four subnets to

3
00:00:19.090 --> 00:00:23.090
support the various subnets in this lab.

4
00:00:23.110 --> 00:00:33.410
So we have 190 16 had 1.0 slash 26 64 slash 26 192 26 and 128 26.

5
00:00:34.270 --> 00:00:40.690
So going back to my calculations we had 1 9 2 1 6 8 1.0 slash 24.

6
00:00:40.840 --> 00:00:42.670
We created 4 subnets.

7
00:00:42.730 --> 00:00:54.980
We used this formula to get the subnets to remind you to to the power of n minus two is used when asked

8
00:00:55.160 --> 00:01:01.620
to work out the number of bits required for a certain number of hosts with subnets.

9
00:01:01.640 --> 00:01:05.810
We don't have to subtract two so two to the power of n was used.

10
00:01:05.930 --> 00:01:08.810
Which gave us four subnets.

11
00:01:09.030 --> 00:01:16.820
So the formula 2 to the N or two to the power of two was used we only had to steal two bits from the

12
00:01:16.910 --> 00:01:21.560
host portion for subnets and that gave us our three subnets.

13
00:01:21.560 --> 00:01:31.540
We've now been told to subnet the subnet further so in the lab we've been told to break up 1 8 2 1 6

14
00:01:31.540 --> 00:01:38.500
8 1 64 slash 26 to support as many subnets as possible with 8 hosts per subnet

15
00:01:42.460 --> 00:01:53.540
so this network 1 8 2 1 6 8 1 64 slash 26 needs to be broken up to support as many subnets as possible

16
00:01:53.990 --> 00:02:01.430
with 8 hosts required per subnet so the formula that we're going to use is two to the power of n minus

17
00:02:01.430 --> 00:02:02.340
two.

18
00:02:02.780 --> 00:02:07.480
That gives us and the number of hosts that we require.

19
00:02:07.480 --> 00:02:17.750
So if we work through that two to the power of one gives us two that will only give us zero hosts so

20
00:02:17.750 --> 00:02:24.440
that's not enough to to the power of two minus two gives us two hosts also not enough due to the power

21
00:02:24.440 --> 00:02:31.210
of three minus two would give a six two to power three is eight minus two gives us six not enough to

22
00:02:31.220 --> 00:02:39.560
do the power of four with sixteen minus two gives us fourteen hosts so that is enough to tip power five

23
00:02:39.560 --> 00:02:45.860
is thirty two minus two would give us thirty hosts and we could continue with that but we already know

24
00:02:46.190 --> 00:02:51.310
that this is the number of hosts that we require

25
00:02:54.360 --> 00:03:00.990
so we need four bits in the host portion which would give us sixteen combinations minus two one for

26
00:03:00.990 --> 00:03:09.450
broadcast one for network gives us fourteen hosts so this is what our original subnet looks like

27
00:03:12.240 --> 00:03:24.060
at the moment this is the network subnet portion and this is the host portion we only require four but

28
00:03:24.090 --> 00:03:27.330
for the host portion so we can now move

29
00:03:31.630 --> 00:03:41.590
two bits to the new subnet portion so these two bits which which I'll put in green are gonna be our

30
00:03:41.590 --> 00:03:53.060
new subnet portion there are no spaces once again in an octet This is a full octet so 0 1 0 0 followed

31
00:03:53.060 --> 00:04:00.380
by four zeros but I've just split it to make it easier to see who's portion is four bits subnet portion

32
00:04:00.560 --> 00:04:13.680
is this so if we work out the subnets we have to go through the various binary combinations which would

33
00:04:13.680 --> 00:04:24.030
look like that which you can also do if you want to save time is this is 128 This is 64 This is 32 this

34
00:04:24.030 --> 00:04:36.660
is sixteen so you can just add sixteen to 64 to get to the next subnet so that would be eighty and and

35
00:04:36.660 --> 00:04:45.180
just to verify that I've done it right eighty in decimal looks like this in binary nodes 0 1 0 1 followed

36
00:04:45.180 --> 00:04:54.170
by four zeros that's what we've got there and then you can simply add sixteen to that and there would

37
00:04:54.170 --> 00:04:55.820
be 96

38
00:04:59.990 --> 00:05:01.320
96.

39
00:05:01.360 --> 00:05:05.470
It looks like this in binary which is the same as what I've got here.

40
00:05:05.550 --> 00:05:15.470
0 1 1 0 followed by four zeros and then you can simply add 16 to that again which should give us 112.

41
00:05:15.470 --> 00:05:17.420
If my math is right.

42
00:05:17.660 --> 00:05:21.010
Hundred twelve looks like that.

43
00:05:21.170 --> 00:05:26.960
So zero followed by three one's followed by four zeros.

44
00:05:26.960 --> 00:05:29.780
So those are new subnets.

45
00:05:29.780 --> 00:05:32.960
We've got four subnets each supporting 14 hosts.

46
00:05:32.960 --> 00:05:42.400
We only require eight hosts but we had to use an additional but because three bits wouldn't give us

47
00:05:42.430 --> 00:05:44.610
enough hosts we'd only have six hosts.

48
00:05:44.980 --> 00:05:50.920
So we've had to use four bits in binary to give us 16 less two which is 14 hosts.

49
00:05:50.920 --> 00:05:59.260
We have four subnets because we have two bits to do the power of two gives us four subnets.

50
00:05:59.290 --> 00:06:10.700
So we've created four new subnets from that single subnet so we could allocate the subnet to our new

51
00:06:10.700 --> 00:06:22.220
network so this new network would now be 1 9 2 1 6 8 1

52
00:06:25.280 --> 00:06:30.500
64 and it's no longer a slash 26.

53
00:06:30.500 --> 00:06:33.710
So I need to update that.

54
00:06:34.040 --> 00:06:37.700
It's eight plus eight.

55
00:06:37.700 --> 00:06:42.320
Sixteen plus a binary bits 24 plus four.

56
00:06:42.650 --> 00:06:43.880
It's 28.

57
00:06:43.880 --> 00:06:46.730
Or if you prefer we originally had 26.

58
00:06:46.740 --> 00:06:52.210
We've added an additional two bits to the subnet portion so slash 28.

59
00:06:53.000 --> 00:06:59.480
So this is now slash 28.

60
00:06:59.570 --> 00:07:03.470
Now before I configure the network I just want to make sure that I've done things right.

61
00:07:03.560 --> 00:07:05.150
This network needs to change now.

62
00:07:05.150 --> 00:07:07.610
That's what we used originally.

63
00:07:07.610 --> 00:07:18.940
What we've been told to do is use the lost new subnet you got from 1 9 2 1 6 8 164 slash 26 and use

64
00:07:18.940 --> 00:07:21.490
that with Slash 30 mosques.

65
00:07:21.490 --> 00:07:27.400
So we need to take this subnet and then we need to subnet it again.

66
00:07:27.400 --> 00:07:34.980
So this is the new subnet that we want to break up as a slash 30.

67
00:07:34.990 --> 00:07:41.770
The reason why we use flash 30 is two to the power of two minus two gives us two hosts a Wayne link

68
00:07:41.800 --> 00:07:49.240
such as a serial link only requires two IP addresses IP addresses on each side of the link so we can

69
00:07:50.440 --> 00:07:59.710
steal two bits here for the subnet portion so that would be network.

70
00:08:00.050 --> 00:08:05.730
This would be our new subnet and our who's portion would only consist of two bits.

71
00:08:05.750 --> 00:08:07.940
So that would be the first network

72
00:08:13.980 --> 00:08:15.340
to slash 30 mosques now

73
00:08:21.560 --> 00:08:23.920
next network would look like that.

74
00:08:23.930 --> 00:08:26.440
Just go through the winery combinations.

75
00:08:27.340 --> 00:08:40.280
So in decimal that's a four so it'd be 16 20 24 and we could once again verify that by using a calculator.

76
00:08:40.820 --> 00:08:48.560
So 1 1 2 looks like that in binary 1 1 6.

77
00:08:48.560 --> 00:08:55.300
It looks like that which is correct 120 looks like that.

78
00:08:55.310 --> 00:09:01.130
Notice 0 followed by 4 ones 0 followed by 4 ones followed by three zeros.

79
00:09:01.130 --> 00:09:02.860
Again there's no gap here.

80
00:09:03.200 --> 00:09:08.450
In an octet I'm only doing that to make it easier to read 124.

81
00:09:08.960 --> 00:09:13.060
Looks like that and that's also correct.

82
00:09:13.070 --> 00:09:18.320
So what I'll do is I'll firstly configure the wine links because they've changed now.

83
00:09:19.080 --> 00:09:28.000
This when link needs to be 112 slash 30 hundred twelve slash 30.

84
00:09:28.660 --> 00:09:38.960
So this writer needs to be configured with the first ip address in that subnet so show run and the serial

85
00:09:38.960 --> 00:09:42.700
interface needs to be changed.

86
00:09:42.740 --> 00:09:49.170
Interface serial 0 1 0 IP address is 1 9 2 1 6 8 1 1 1 3.

87
00:09:49.220 --> 00:09:59.550
First IP address in that subnet it's a slash 30 mosque 0 SPF neighbor relationship has come down writers

88
00:09:59.590 --> 00:10:06.580
require that they have the same subnet on both sides for them to form an SPF neighbor relationship show

89
00:10:06.580 --> 00:10:10.340
run on this side.

90
00:10:10.960 --> 00:10:12.910
This IP address needs to change

91
00:10:19.940 --> 00:10:33.420
so interface serial 0 1 slash 0 IP address 1 9 2 1 6 8 1 1 1 4 slash 30 mosque paying 1 9 2 1 6 8 1

92
00:10:33.930 --> 00:10:41.210
1 1 3 Paying works you can see that to the neighbor relationship has come up so that looks good.

93
00:10:41.220 --> 00:10:51.300
So on Roorda one neighbor relationship has come up again show IP rot shows us default route via 1 1

94
00:10:51.300 --> 00:10:52.440
4.

95
00:10:52.500 --> 00:11:04.690
In other words this road is seeing this rather as its default gateway or or gateway of last resort so

96
00:11:04.760 --> 00:11:08.760
paying Cisco to come can we still get to Cisco.

97
00:11:08.760 --> 00:11:20.490
Can the strata IP domain look up IP name server should be called Triple H sipping Cisco dot com

98
00:11:25.110 --> 00:11:32.310
maybe not a problem Packet Tracer let's see if the strata camping the DNS server yes it can.

99
00:11:32.300 --> 00:11:35.520
Can it ping Cisco dot com name has resolved.

100
00:11:35.550 --> 00:11:38.600
So Internet wrote a competing Cisco dot com.

101
00:11:38.670 --> 00:11:40.270
What about right of one.

102
00:11:40.350 --> 00:11:49.170
I was just impatient they notice it can ping Cisco dot com and can it ping Facebook dot com again.

103
00:11:49.360 --> 00:11:58.870
It can so I can save the configuration I've now successfully updated the Internet router and route one

104
00:11:59.470 --> 00:12:01.930
with the new subnet.

105
00:12:01.930 --> 00:12:10.360
Next thing I need to do is configure a subnet on this link so this will be one on 2 1 6 8 1 and I'll

106
00:12:10.360 --> 00:12:14.500
choose the next one which is 1 1 6 slash 30

107
00:12:17.650 --> 00:12:26.050
so notice how I've taken one original subnet this one and I've broken it up into these three.

108
00:12:26.110 --> 00:12:35.510
This one is being used now so I can't use that anymore because I've submitted that into these four subnets

109
00:12:36.230 --> 00:12:41.900
but there's nothing stopping you taking one subnet and subdividing it and then subdividing it again

110
00:12:42.380 --> 00:12:43.300
like I've done here.
