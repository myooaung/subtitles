WEBVTT
1
00:00:00.870 --> 00:00:03.130
This section we're going to look at X's lists.

2
00:00:03.240 --> 00:00:07.650
I'd like to show you how to implement security using Access Control lists which are one of the most

3
00:00:07.650 --> 00:00:12.240
basic building blocks for implementing security in the Cisco network.

4
00:00:12.240 --> 00:00:17.580
These days there are multiple ways to implement security but access lists are one of the most fundamental

5
00:00:17.730 --> 00:00:20.000
and a lot of the new technologies are based on them.

6
00:00:20.160 --> 00:00:25.190
So it's important that you have a good understanding of how access lists work and how to implement them.

7
00:00:26.660 --> 00:00:29.270
So we can look at the purpose of access control lists.

8
00:00:29.360 --> 00:00:35.330
I'd like to show you how they are bound to interfaces now either bound inbound or outbound.

9
00:00:35.330 --> 00:00:40.880
I'd like to show you various tops of access lists including numbered X-ists lists named X-ists lists

10
00:00:41.210 --> 00:00:45.820
as well as stand in an extended access control lists or ACLC.

11
00:00:46.100 --> 00:00:52.850
I'd like to explain what a wild card mosque does and how you can match individual hosts subnets all

12
00:00:52.850 --> 00:00:55.530
hosts by changing the wildcard mosque.

13
00:00:55.820 --> 00:01:02.760
I'd also like to explain tunne based reflexive and dynamic ACLC Now before getting into a discussion

14
00:01:02.760 --> 00:01:04.850
of access control lists or ACLC.

15
00:01:05.010 --> 00:01:06.730
Let's review some of the information coming in.

16
00:01:06.730 --> 00:01:12.780
I CND one course you will not be able to implement ACL without a good understanding of protocols port

17
00:01:12.780 --> 00:01:18.270
numbers and other options available in the TZP AGI protocol stack and other protocols.

18
00:01:18.270 --> 00:01:24.270
If you have them running on your network see as an example if we have a PC connecting to a server and

19
00:01:24.270 --> 00:01:31.760
the PC connects using HDD and that traffic is sent across the network router one will see a packet with

20
00:01:31.760 --> 00:01:38.040
a source address of 10 1 1 1 with the source port number greater than 1023.

21
00:01:38.190 --> 00:01:41.010
So in this example let's say 1024.

22
00:01:41.010 --> 00:01:47.040
In this case because you are using UDP it's going to well-known port number 80 so the destination IP

23
00:01:47.040 --> 00:01:51.560
address is 10 1 to 1 and the destination port number is 80.

24
00:01:51.630 --> 00:01:57.030
Now with access lists direction is of great importance on this interface.

25
00:01:57.030 --> 00:02:03.930
The rat is receiving the packet inbound but on this interface the packet is being transmitted outbound.

26
00:02:03.930 --> 00:02:06.920
It's important that you look at this from the routers point of view.

27
00:02:07.080 --> 00:02:11.100
The packet arrives inbound and is sent outbound.

28
00:02:11.340 --> 00:02:16.710
So in other words if you configure an access list outbound on the seem to face it would have no effect

29
00:02:16.710 --> 00:02:23.160
on traffic from the PC to the server because an out on access list only checks traffic outbound from

30
00:02:23.160 --> 00:02:24.400
the Buddhist point of view.

31
00:02:24.660 --> 00:02:30.090
So if you configured an inbound Access Control List on the left hand side packets would have to pass

32
00:02:30.090 --> 00:02:34.740
that exit control list before being permitted and once again if you configure it and outbound Access

33
00:02:34.740 --> 00:02:40.680
Control list on this interface traffic ST would have to pass the access list will be permitted by the

34
00:02:40.680 --> 00:02:41.800
access list.

35
00:02:41.820 --> 00:02:43.540
Otherwise the traffic will be dropped.

36
00:02:44.600 --> 00:02:50.540
When the service since traffic in reply the source address will now be 10 one to one with a source port

37
00:02:50.540 --> 00:02:58.380
of 80 and the destination IP address will be 10 1 1 1 and the destination port number will be 1024.

38
00:02:58.400 --> 00:03:04.640
In this case an outbound access list on this interface would come into effect or traffic from the server

39
00:03:04.640 --> 00:03:08.760
to the PC because the traffic is going out from the router point of view.

40
00:03:09.020 --> 00:03:14.360
So an access list configured outbound and this interface would have fixed this traffic and this traffic

41
00:03:14.360 --> 00:03:20.630
would have to pass the criteria set in the access list before being permitted by the same token an inbound

42
00:03:20.660 --> 00:03:25.550
access list on this interface would affect the traffic and the traffic would have to pass the criteria

43
00:03:25.550 --> 00:03:27.220
set in that Access Control List.

44
00:03:28.250 --> 00:03:29.960
Yes another example.

45
00:03:29.960 --> 00:03:34.470
This MacBook is telnetting to switch one via the router.

46
00:03:34.700 --> 00:03:39.100
So for argument's sake let's assume the MacBook chooses port 50000.

47
00:03:39.170 --> 00:03:44.870
The source address all frames from the MacBook to the switch would be one on one with the source port

48
00:03:44.870 --> 00:03:46.250
of 50000.

49
00:03:46.280 --> 00:03:51.400
The destination would be 10 1 to 1 with the destination port number of 23.

50
00:03:51.680 --> 00:03:57.530
So once again from the writer's point of view it's receiving frames on this interface with a sort of

51
00:03:57.530 --> 00:04:03.230
tame one on one source for fifty thousand and it's transmitting those packets out of this interface

52
00:04:03.590 --> 00:04:10.400
with the same details packets sent in reply from the switch of a source address of 10 1 to 1 source

53
00:04:10.400 --> 00:04:17.240
port of 23 and a destination IP address of 10 1 1 1 the destination port of 50000.

54
00:04:17.240 --> 00:04:23.330
Once again it's important that you understand your protocols and port numbers because without that understanding

55
00:04:23.720 --> 00:04:25.980
you'll not be able to configure yells.

56
00:04:26.150 --> 00:04:32.180
Always look at the direction of the traffic to determine whether an excess should be banned inbound

57
00:04:32.510 --> 00:04:36.200
or outbound on specific interfaces.

58
00:04:36.200 --> 00:04:40.850
There are some examples of some well-known TCAP protocols with the relevant port numbers.

59
00:04:40.850 --> 00:04:51.170
If DP uses port 21 for control and 24 data telnet uses 4:23 sickish shell uses port 22.

60
00:04:51.460 --> 00:04:52.010
Empty.

61
00:04:52.070 --> 00:05:00.940
Uses port 25 HDD Pease's port 80 pop 3 uses code 1 1 0 SS Elissa's port 443.

62
00:05:01.190 --> 00:05:07.350
So those are examples of some well-known TZP port numbers that you should remember for the real world.

63
00:05:07.370 --> 00:05:14.490
Just google my on port numbers to see a list of the Internet assigned numbers of 30 port numbers.

64
00:05:14.660 --> 00:05:19.690
The I own is in charge of quarter numbers and determines the allocation.

65
00:05:19.780 --> 00:05:22.680
As an example just type on the port numbers

66
00:05:25.420 --> 00:05:30.860
and your very first hit will be a list of court numbers and they explain quite nicely.

67
00:05:31.760 --> 00:05:40.160
About the well-known members registered port numbers and dynamic and private port numbers.

68
00:05:40.200 --> 00:05:47.080
So as an example if you just do a search for telnet you'll see which port number telnet uses.

69
00:05:47.280 --> 00:05:52.350
He has a nice list if you're not sure which port numbers are used by specific protocols.

70
00:05:53.270 --> 00:05:57.230
Here's an example of protocols that use UDP and they live in Port numbers.

71
00:05:57.260 --> 00:06:07.690
So as an example DHP uses port number 67 and 68 TFT Pease's port 69 and as an empty uses port 161.

72
00:06:08.000 --> 00:06:13.460
Once again on that same list on the Ayana you could do a search for specific protocols.

73
00:06:14.220 --> 00:06:18.690
And there's an example of TFT the DNS is a special case.

74
00:06:18.780 --> 00:06:23.670
It is just part number 53 that uses both TCAP and UDP.

75
00:06:23.850 --> 00:06:26.120
So both for study purposes and the real world.

76
00:06:26.160 --> 00:06:31.610
Remember that protocols like telnet use port 23 and tell that users TZP.

77
00:06:31.770 --> 00:06:38.330
Whereas for example DFT uses port 69 using UDP.

78
00:06:38.340 --> 00:06:43.380
Now why would you use ACLC up to this point in the course we've been enabling access between different

79
00:06:43.380 --> 00:06:44.450
parts of the network.

80
00:06:44.640 --> 00:06:50.970
No shutting interfaces grading into the writing setting up routing protocols like your European OSPF

81
00:06:51.270 --> 00:06:53.650
will enable access throughout the network.

82
00:06:53.850 --> 00:06:58.770
However you might not want everyone to be able to access every part of the network.

83
00:06:59.160 --> 00:07:02.040
This is especially true when you connect to the Internet.

84
00:07:02.040 --> 00:07:06.510
You don't necessarily want everyone on the Internet to be able to access your corporate servers or corporate

85
00:07:06.510 --> 00:07:07.290
network.

86
00:07:07.450 --> 00:07:12.780
So access lists are one of the first lines of defense to stop or deny traffic from one part of the network

87
00:07:12.780 --> 00:07:17.420
to another so they can be used to permit or deny traffic moving through a router.

88
00:07:17.680 --> 00:07:21.810
So as an example we might allow this MacBook to gain access to the Internet.

89
00:07:22.810 --> 00:07:26.750
That we might deny traffic from the internet into our corporate environment.

90
00:07:27.070 --> 00:07:32.920
So we would permit or deny traffic on a per interface basis and thus deny traffic moving through the

91
00:07:32.920 --> 00:07:33.510
router.

92
00:07:34.320 --> 00:07:39.130
You could put a password on a BT wireline on a router to force a level of security.

93
00:07:39.370 --> 00:07:44.490
However you might say that only administrative subnets Wayne since this machine on an administrative

94
00:07:44.490 --> 00:07:50.610
subnet is allowed to access the Viti while lines whereas this machine is not allowed to access the BT

95
00:07:50.610 --> 00:07:51.750
y lines.

96
00:07:51.750 --> 00:07:59.060
In this case the access list will not even permit telnet or S-sh traffic to the why lines on the router.

97
00:07:59.250 --> 00:08:05.700
So rather than just having one line of defense a password you implement two lines of defense only permitting

98
00:08:05.700 --> 00:08:12.000
certain subnets to the BT wire lines as well as putting a password on the BT Why lines whenever it comes

99
00:08:12.000 --> 00:08:12.630
to security.

100
00:08:12.630 --> 00:08:18.270
You've got to think of the risk dependent on the risk you will implement more security.

101
00:08:18.270 --> 00:08:23.310
In this case you might deem the risk of users accessing network equipment to be high.

102
00:08:23.580 --> 00:08:31.630
So you only allow certain subnets to connect to the BT y lines or the router or switch.

103
00:08:31.670 --> 00:08:36.640
So once again with our ACLC all packets could be transmitted to all parts of the network.

104
00:08:36.740 --> 00:08:38.750
And that might not be desirable.

105
00:08:38.810 --> 00:08:43.510
So you might want to deny certain parts of the network from gaining access to other parts of the network.

106
00:08:43.820 --> 00:08:49.220
The whole idea here is that you're starting to implement security locking down parts of the network

107
00:08:49.490 --> 00:08:55.530
so that they cannot be accessed by all individuals inside and outside of your organization.

108
00:08:56.450 --> 00:09:02.660
ACLC How have I not just used for permitting or denying traffic it can also be used for classification

109
00:09:03.350 --> 00:09:08.390
when setting up an basic VPN or virtual private network between two sites.

110
00:09:08.390 --> 00:09:12.230
You need to tell the router which traffic needs to be encrypted.

111
00:09:12.350 --> 00:09:18.140
You might not want all traffic encrypted from your local LAN because you might want traffic from your

112
00:09:18.140 --> 00:09:26.540
local LAN to an Internet server to be sent unencrypted but traffic from your local LAN to the land on

113
00:09:26.540 --> 00:09:33.030
the other side of the VPN tunnel needs to be encrypted so you create an access list determining what

114
00:09:33.030 --> 00:09:34.520
traffic is interesting.

115
00:09:34.530 --> 00:09:38.490
In other words needs to be encrypted what traffic is not interesting.

116
00:09:38.490 --> 00:09:45.990
In other words does not need to be encrypted ACL can also be used in redistribution where you are taking

117
00:09:45.990 --> 00:09:53.400
routes from one routing protocol and redistributing them or pumping them in to another routing protocol.

118
00:09:53.400 --> 00:09:59.820
So you might not want OSPF to learn about all your GOP routes and therefore you can use Access Control

119
00:09:59.820 --> 00:10:07.000
lists to limit or only permit certain routes to be redistributed access lists are also used with net

120
00:10:07.090 --> 00:10:09.280
or network address translation.

121
00:10:09.280 --> 00:10:14.290
The Axis list will determine which packets need to be translated and which packets do not need to be

122
00:10:14.290 --> 00:10:15.440
translated.

123
00:10:15.490 --> 00:10:19.810
So you would create an access list permitting only certain subnets which would allow for those packets

124
00:10:19.810 --> 00:10:26.320
to be translated packets denied by the access list are not denied access or dropped but they are not

125
00:10:26.350 --> 00:10:34.200
translated using network address translation or net when using ACLC to permit or deny packets moving

126
00:10:34.200 --> 00:10:35.190
through a router.

127
00:10:35.400 --> 00:10:37.360
There are two main steps.

128
00:10:37.620 --> 00:10:44.400
So firstly in global configuration mode you create the access list using the common access list and

129
00:10:44.400 --> 00:10:46.450
then filling in various options.

130
00:10:46.500 --> 00:10:53.040
So the access list command is used to create the access list and then secondly you apply the access

131
00:10:53.040 --> 00:10:57.270
list either inbound and outbound on an interface by using the Access Group.

132
00:10:57.270 --> 00:10:58.320
C'mon.

133
00:10:58.350 --> 00:11:04.500
So access less command creates the exorcist access group command binds the access list.

134
00:11:04.620 --> 00:11:08.460
And when you bind it you either specify inbound or outbound.

135
00:11:08.460 --> 00:11:12.190
In other words determining the direction that the access list is bound.

136
00:11:12.540 --> 00:11:17.380
It's important to note that an ACL does not take effect until it's applied somewhere.

137
00:11:17.520 --> 00:11:22.830
So if you have access lists in the running configuration of a router and they haven't been applied there

138
00:11:22.830 --> 00:11:24.290
have no effect.

139
00:11:24.300 --> 00:11:31.060
There are two steps you create the access list and then you apply it some way for instance inbound on.

140
00:11:31.120 --> 00:11:33.870
Ethernet seriously Zehra.

141
00:11:34.050 --> 00:11:38.650
So once again Imraan ACLC are applied inbound on an interface.

142
00:11:38.880 --> 00:11:42.620
The ICAO will be processed before the traffic will be routed.

143
00:11:42.630 --> 00:11:49.740
In other words if the ICL denies the traffic and the traffic is discarded the Raptor will not have to

144
00:11:49.740 --> 00:11:55.590
process the packets while looking in its writing table and determining the outbound interface.

145
00:11:55.650 --> 00:12:01.230
The Packers will be discarded or dropped before the routing engine needs to process them.

146
00:12:01.380 --> 00:12:08.140
If they are permitted they will be processed for riding on the router will determine the outgoing interface.

147
00:12:08.310 --> 00:12:13.410
If discarded there is no additional overhead on the router because the router does not need to do a

148
00:12:13.410 --> 00:12:17.300
writing table lookup to determine the a graceful outgoing interface.

149
00:12:17.550 --> 00:12:23.220
If the traffic is permitted the writing process will then do the writing table lookup to determine the

150
00:12:23.220 --> 00:12:27.410
outgoing interface without Dan ACLC.

151
00:12:27.670 --> 00:12:34.060
Rotting is performed first and then the packet is directed to an outbound interface and then based on

152
00:12:34.060 --> 00:12:36.480
the ACL the packets will be permitted.

153
00:12:36.490 --> 00:12:43.630
In other words transmitted or denied it is therefore more efficient to bind an access list inbound on

154
00:12:43.630 --> 00:12:48.970
an interface because packets that are dropped or denied will not need to be processed.

155
00:12:49.000 --> 00:12:51.130
While the writing process on the router.

156
00:12:51.490 --> 00:12:58.360
If an ACL is applied outbound the rod is still has to process all the packets which may then be denied

157
00:12:58.420 --> 00:13:00.840
or dropped on the outbound interface.

158
00:13:00.940 --> 00:13:08.740
So where possible bind ACLC inbound on interfaces rather than outbound for more efficient processing.

159
00:13:09.500 --> 00:13:15.560
An access list is a sequential list of statements where packets are evaluated from the first statement

160
00:13:15.620 --> 00:13:16.670
to the last.

161
00:13:16.670 --> 00:13:19.520
In other words there is top down processing.

162
00:13:19.850 --> 00:13:25.850
If a packet is matched by an individual statement in the access list that packet will either be permitted

163
00:13:26.030 --> 00:13:32.200
or denied depending on whether the Admit or deny keyword is used in that specific statement.

164
00:13:32.690 --> 00:13:37.030
All remaining lines of the access list are ignored so that specific packet.

165
00:13:37.280 --> 00:13:43.490
So in other words as soon as there's a match on a line all remaining lines are ignored if the traffic

166
00:13:43.490 --> 00:13:50.340
does not match that specific line or statement in the next line in the ACL is checked.

167
00:13:50.570 --> 00:13:56.060
So this list is a sequential list of statements and the Rodda will check from the first line to the

168
00:13:56.060 --> 00:13:58.170
last until it gets a match.

169
00:13:58.490 --> 00:14:01.930
As soon as there's a match all subsequent lines are ignored.

170
00:14:02.120 --> 00:14:07.400
If there is no match for any statement in the ACL the packet is dropped because of what's called the

171
00:14:07.400 --> 00:14:11.170
implicit denie at the end at the end of every access list.

172
00:14:11.190 --> 00:14:17.750
There's an implicit denial which means if you're not explicitly permitted by an access list you're implicitly

173
00:14:17.750 --> 00:14:25.610
denied all traffic not permitted some somewhere in that access list with the use of a permit statement

174
00:14:25.760 --> 00:14:27.290
will be dropped.

175
00:14:27.290 --> 00:14:32.430
That means therefore that you must have at least one permit statement some in practice list.

176
00:14:32.510 --> 00:14:34.870
Otherwise you might as well unplug the cable.

177
00:14:34.880 --> 00:14:39.320
Now there are two main types of access lists that we concentrate on in this course.

178
00:14:39.320 --> 00:14:46.640
The first is a standard ACL and the second is an extended ACL standard ACLC only check on Source IP

179
00:14:46.640 --> 00:14:47.580
addresses.

180
00:14:47.720 --> 00:14:54.500
They do not check on individual port numbers or individual protocols that either permit or deny the

181
00:14:54.500 --> 00:14:59.540
entire protocol suite based on the source IP address or source network.

182
00:14:59.780 --> 00:15:06.320
Nothing else in the source IP address or source network can be specified extended ACLC check on both

183
00:15:06.320 --> 00:15:13.030
the source and destination address and allows you to permit or deny specific protocols and applications.

184
00:15:13.040 --> 00:15:20.620
In other words you could permit or deny based on IP TZP UDP ICMP and many other protocols and you could

185
00:15:20.620 --> 00:15:26.830
also permit or deny based on source port numbers and destination port numbers extended access lists

186
00:15:26.840 --> 00:15:30.710
are they for a lot more granular and tend to be used in the real world.

187
00:15:30.920 --> 00:15:35.690
But for completeness we need to cover both stented and extended access lists in this course.
