WEBVTT
1
00:00:00.500 --> 00:00:08.240
What I'd like to point out once again is that each web site is resolved to a different IP address.

2
00:00:08.240 --> 00:00:16.460
Lastly if I ping CNN.com notice that that also resolves to an IP address but it's different to the previous

3
00:00:16.460 --> 00:00:17.660
examples.

4
00:00:17.660 --> 00:00:24.600
DNS is doing the name resolution so it's resolving a domain name to an IP address and that's how I'm

5
00:00:24.620 --> 00:00:28.890
learning the IP address of CNN dot com or Google dot com.

6
00:00:29.000 --> 00:00:35.120
You can ping many of the well-known Web sites on the internet to find out what the IP addresses are.

7
00:00:35.120 --> 00:00:42.200
You could also use this look up which just does a DNS resolution of a domain name rather than trying

8
00:00:42.200 --> 00:00:44.270
to pin the server.

9
00:00:44.270 --> 00:00:50.490
So in summary the devices on the Internet have been configured with IP version 4 addresses.

10
00:00:50.510 --> 00:00:55.180
I'll explain more about the formatting of IP addresses in the next few minutes.

11
00:00:55.400 --> 00:01:03.140
But for now just take note that every device has an IP address and that includes my own machine or the

12
00:01:03.140 --> 00:01:07.860
command IP config will show me the IP address on my local machine.

13
00:01:07.910 --> 00:01:09.420
When using Windows.

14
00:01:09.470 --> 00:01:14.740
So in this example my IP version 4 address is 10.0 0.6.

15
00:01:14.750 --> 00:01:22.960
You'll also notice here that I have an IP version 6 address of 2001 Colin 20 colon colon.

16
00:01:23.240 --> 00:01:28.910
In this video we are concentrating on IP version for addresses but in another video I'll explain IP

17
00:01:28.910 --> 00:01:35.780
version 6 IP version 6 is becoming more and more important because IP addresses are now exhausted in

18
00:01:35.780 --> 00:01:44.240
certain parts of the world IP version 4 or Internet Protocol version 4 is a layer 3 or network a layer

19
00:01:44.240 --> 00:01:47.240
protocol as per the OS model.

20
00:01:47.400 --> 00:01:48.690
You know different video.

21
00:01:48.690 --> 00:01:50.470
I explained the OS on model.

22
00:01:50.510 --> 00:01:57.560
So if you're not sure about layers Please refer to that video IP version 4 is a connection list protocol.

23
00:01:57.560 --> 00:02:01.420
In other words there are no sessions formed when traffic is transmitted.

24
00:02:01.580 --> 00:02:06.800
The transmitter simply sends data without notification to the receiver.

25
00:02:06.800 --> 00:02:10.500
No status information is sent back from the receiver to the transmitter.

26
00:02:10.550 --> 00:02:15.490
It's totally connection less TZP for transmission control protocol.

27
00:02:15.500 --> 00:02:20.680
On the other hand is connection orientated TZP will set up a session.

28
00:02:20.750 --> 00:02:28.070
So before transmission takes place in TZP the transmitter sends what's called a sun or synchronization

29
00:02:28.070 --> 00:02:30.190
message to the receiver.

30
00:02:30.230 --> 00:02:38.210
There's a sim ack message from the receiver to the transmitter and then a ack or acknowledgement message

31
00:02:38.390 --> 00:02:40.430
from the transmitted to the receiver.

32
00:02:40.430 --> 00:02:48.610
So before any data is transmitted but devices using TZP go through what's called the three way handshake.

33
00:02:48.890 --> 00:02:54.960
Some send ack and ack IP on the other hand doesn't do any of that.

34
00:02:55.010 --> 00:02:58.820
Each packet is treated independently of other packets.

35
00:02:58.820 --> 00:03:04.190
That's why traffic can take different paths to get to a destination.

36
00:03:04.220 --> 00:03:11.000
Rodders will route the traffic via different paths based on options such as load balancing because each

37
00:03:11.000 --> 00:03:12.430
packet is independent.

38
00:03:12.530 --> 00:03:15.190
An IP is a connection list protocol.

39
00:03:15.500 --> 00:03:22.110
Routers can also base routing decisions on different values such as bandwidth or hop count.

40
00:03:22.430 --> 00:03:32.240
But it is possible that packets from one session take divergent or different parts to get to a destination.

41
00:03:32.240 --> 00:03:39.260
So for example Ripp will base its routing decisions on hop count which is not good and hence Repp is

42
00:03:39.260 --> 00:03:41.470
not used that often anymore.

43
00:03:41.750 --> 00:03:48.650
OSPF will base it on bandwidths other running protocols will use their own metrics to determine the

44
00:03:48.650 --> 00:03:49.830
best path.

45
00:03:49.850 --> 00:03:56.630
I'll be discussing routing protocols in more detail later in this course but in brief writing protocols

46
00:03:56.630 --> 00:04:01.330
determine the best path or best route from A to B.

47
00:04:01.340 --> 00:04:08.120
This is based on the whole Rockhill addressing structure in IP version for an IP version 6 where we

48
00:04:08.120 --> 00:04:15.080
have both a network and host portion as part of the address Rawdon's base their routing decisions on

49
00:04:15.080 --> 00:04:22.100
the network portion of the address rather than on the host portion of the address and I'll explain network

50
00:04:22.370 --> 00:04:24.390
and host portions in a moment.

51
00:04:24.620 --> 00:04:28.850
IP also only gives best effort to delivery of packets.

52
00:04:28.850 --> 00:04:34.220
There is no guarantee of packet delivery any packet could be misdirected.

53
00:04:34.370 --> 00:04:41.960
It could be duplicated or it could be lost in transmission when sent to a destination and that should

54
00:04:41.960 --> 00:04:45.410
be expected in IP transmissions.

55
00:04:45.410 --> 00:04:52.190
Once again TZP which is a connection oriented protocol has the ability to read transmit packets that

56
00:04:52.190 --> 00:04:58.730
go missing UDP another layer for protocol doesn't retransmit packets.

57
00:04:58.730 --> 00:05:04.130
If they get dropped simply lost and the applications need to take care of that.

58
00:05:04.340 --> 00:05:07.780
There is also no data recovery features in IP.

59
00:05:07.790 --> 00:05:14.750
If the packet for example gets corrupted the end devices need to handle that and not the routers in

60
00:05:14.750 --> 00:05:16.040
between.

61
00:05:16.040 --> 00:05:24.020
So in summary IP has no boltin sessions no data recovery no retransmissions Hialeah protocols such as

62
00:05:24.020 --> 00:05:31.730
TCAP will need to handle dropped packets corrupted packets misdirected packets and so forth.

63
00:05:31.790 --> 00:05:39.850
IP does not provide those features and relies on Hialeah protocols to implement those features.

64
00:05:39.980 --> 00:05:47.300
So let's look at the format of an IP version for address an IP version for address is 32 bits in size

65
00:05:47.480 --> 00:05:56.750
normally written in dotted decimal notation such as this example 10 dot one dot 1.1 each of value such

66
00:05:56.750 --> 00:05:59.770
as 10 is 8 bits in size.

67
00:05:59.780 --> 00:06:07.780
So in other words we have x x x done X with each X being 8 bits in length.

68
00:06:07.910 --> 00:06:13.390
Also known as an octet the total size of the address is 32 bits.

69
00:06:13.400 --> 00:06:15.390
Please refer to the binary video.

70
00:06:15.530 --> 00:06:22.820
If you're not sure about bits and how to convert this address into binary and back again IP addresses

71
00:06:22.820 --> 00:06:29.520
once again have a rock hill structure to enable routing which consists of two main parts.

72
00:06:29.630 --> 00:06:35.810
We have the network portion of an address and the host portion and we look at that in more detail in

73
00:06:35.810 --> 00:06:37.070
a moment.

74
00:06:37.070 --> 00:06:45.620
IP addresses are used for routing in a very similar way to the way DHL or FedEx ranked parcels based

75
00:06:45.620 --> 00:06:51.390
on a destination address route as will route traffic to a destination address.

76
00:06:51.530 --> 00:06:57.800
When unicast packets are transmitted multi-course packets use a different mechanism and do a routing

77
00:06:57.800 --> 00:06:59.500
based on source address.

78
00:06:59.600 --> 00:07:08.420
So as an analogy DHL or FedEx are sending the possible to a destination based on the destination on

79
00:07:08.420 --> 00:07:16.220
the parcel routers are sending packets to destinations based on the destination address in the packet.
