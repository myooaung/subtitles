WEBVTT
1
00:00:00.360 --> 00:00:05.850
One protocol that you want to be especially careful with is ICMP v sex.

2
00:00:05.990 --> 00:00:11.080
Remember an IP version for use OP to determine the MAC address of a neighbor.

3
00:00:11.110 --> 00:00:20.350
OP is no longer used in IP version 6 neighbor Discovery Protocol or NDP is part of ICMP Version 6.

4
00:00:20.400 --> 00:00:29.790
So if you have a blanket deny of IP version 6 inadvertently it could affect the communication of devices

5
00:00:29.790 --> 00:00:31.950
in your IP version 6 network.

6
00:00:32.190 --> 00:00:35.910
Icmp is also used for path into new discovery.

7
00:00:36.090 --> 00:00:39.440
So don't just block ICMP Version 6.

8
00:00:39.450 --> 00:00:47.010
Be careful blocking that protocol in IP version 4 in some cases you don't want to block ICMP but you

9
00:00:47.010 --> 00:00:54.520
can be a little bit more blasÃ© blocking ICMP in IP version 4 versus IP version 6.

10
00:00:54.540 --> 00:01:03.630
Be careful again that some protocols required for neighbor discovery and basic IP version 6 functionality

11
00:01:04.020 --> 00:01:12.090
require ICMP Version 6 IP version 6 access lists once again are very similar to IP version 4.

12
00:01:12.090 --> 00:01:18.930
You need to be careful again with protocols that you use to an IP version 4 such as broadcasts and OP

13
00:01:19.410 --> 00:01:26.160
IP version 6 doesn't use broadcasts it uses multi costs so to discover neighbors we use neighbor Discovery

14
00:01:26.160 --> 00:01:34.680
Protocol and multicast rather than using ops and broadcasts IP version 6 also includes new fields such

15
00:01:34.680 --> 00:01:42.780
as a float label and extension headers which are different to IP version for IP version 6 access lists

16
00:01:42.910 --> 00:01:50.310
therefore allow you to match on traffic classes flow labels IP vs 6 and next head of field source and

17
00:01:50.310 --> 00:01:59.250
destination 128 but IP vs 6 addresses upper layer headers Hialeah protocols such as TTP and UDP and

18
00:01:59.250 --> 00:02:03.490
their relevant port numbers as well as flags such as an ACH.

19
00:02:03.540 --> 00:02:11.160
We also have ICMP Version 6 types and codes that you could match on as well as IP version 6 ext Head

20
00:02:11.160 --> 00:02:13.020
of Values and types.

21
00:02:13.140 --> 00:02:20.940
So be careful there are differences between IP version 6 access lists and IP version 4 access lists.

22
00:02:21.060 --> 00:02:28.080
There are also limitations with IP version 6 access lists IP version 6 tends to have more tunnels than

23
00:02:28.080 --> 00:02:29.230
IP version for.

24
00:02:29.600 --> 00:02:36.150
So as an example you may have IP version 6 packets transported over an IP version for network using

25
00:02:36.440 --> 00:02:38.480
GRC tunnels.

26
00:02:38.550 --> 00:02:45.540
So be careful if you're trying to block IP version 6 packets using an IP version 6 access list and that's

27
00:02:45.540 --> 00:02:53.820
tunneled within a IP version forgery tunnel your access list won't work in IP version for access lists

28
00:02:54.240 --> 00:02:57.640
wildcard masks don't have to be contiguous.

29
00:02:57.930 --> 00:03:00.600
In other words it doesn't have to look like this.

30
00:03:00.600 --> 00:03:09.270
You could match all odd IP addresses or even IP addresses by manipulating the inverse mask of an IP

31
00:03:09.270 --> 00:03:11.310
version for access list.

32
00:03:11.370 --> 00:03:19.440
However in IP version 6 you create IP version 6 access lists using a prefix length a number that indicates

33
00:03:19.440 --> 00:03:23.200
the number of contiguous prefix Moscow bits.

34
00:03:23.550 --> 00:03:30.630
That's very different to IP version for an IP version 6 access lists the prefix of Lent number represents

35
00:03:30.630 --> 00:03:38.350
the number of contiguous bits that will be matched for that IP version 6 address prefix.

36
00:03:38.550 --> 00:03:45.300
So we use a slash notation where the number after the slash indicates the number of bits of the prefix

37
00:03:45.330 --> 00:03:46.540
length.

38
00:03:46.560 --> 00:03:54.310
That means therefore that you can only match on an IP version 6 address prefix and can not use discontinuous

39
00:03:54.330 --> 00:03:57.630
mosques with IP version 6 access lists.

40
00:03:57.660 --> 00:04:04.160
In addition it's very common to have prefix lengths that are evenly divisible by 4.

41
00:04:04.410 --> 00:04:12.040
So you'd use things such as Slash 48 slash 52 slash 56 slash 64 as an example.

42
00:04:12.270 --> 00:04:20.370
And it's not a standard practice to have a prefix length that doesn't fall on a hex digit boundary that's

43
00:04:20.370 --> 00:04:28.590
very different again to IP version for IP version 4 addresses you may have a slash 20 to slash 23 slash

44
00:04:28.590 --> 00:04:32.370
24 but then a slash 25 or slash 26.

45
00:04:32.760 --> 00:04:40.480
So unlike an IP version 4 where you don't just use slash 8 or slash 16 or slash 24 or slash 32.

46
00:04:40.560 --> 00:04:44.030
That tends to be the practice in IP version 6.

47
00:04:44.130 --> 00:04:51.590
So as an example you will match slash 64 you matching on a hex digit boundary remember hex digits are

48
00:04:51.600 --> 00:04:53.450
for binary bits in length.

49
00:04:54.180 --> 00:05:03.020
So we use slash 48 slash 52 slash 56 slash 60 slash 64 rather than something like Slash 62.

50
00:05:03.030 --> 00:05:08.810
It's important to remember that excessive logging can negatively impact a rider performance.

51
00:05:08.940 --> 00:05:13.280
The rider CPE use involved when a log entry is created.

52
00:05:13.320 --> 00:05:20.790
Therefore be careful using the logging keyword just like with IP version for IP version 6 access list

53
00:05:20.940 --> 00:05:28.260
don't deny packets originating from a router so an outbound access list on a raw interface will not

54
00:05:28.590 --> 00:05:31.620
block rorted packets sent to by that Radha.
