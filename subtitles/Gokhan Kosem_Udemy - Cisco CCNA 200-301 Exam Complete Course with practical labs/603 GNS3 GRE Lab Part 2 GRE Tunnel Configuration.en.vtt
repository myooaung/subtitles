WEBVTT
1
00:00:01.060 --> 00:00:06.070
Now before we can figure out tunnels we need to make sure that the tunnel and points have connectivity

2
00:00:06.160 --> 00:00:07.280
to each other.

3
00:00:07.280 --> 00:00:11.330
So Rider 2 should be able to ping rather for and vice versa.

4
00:00:11.350 --> 00:00:17.380
In this example I'm going to set up the tunnel from the serial interfaces so logically it looks like

5
00:00:17.380 --> 00:00:25.360
we have this separate tunnel interface but the tunnel is actually configured from serial 0 2 0 2 serial

6
00:00:25.360 --> 00:00:34.090
0 2 0 so not a 2 Can we paying for the 1 2 2 2 Yes we can.

7
00:00:34.220 --> 00:00:37.340
And on router 4 can be paying forward at 1 to 1 to 1.

8
00:00:37.370 --> 00:00:42.190
Yes we can now ping uses a different protocol to GRC.

9
00:00:42.230 --> 00:00:49.700
So you need to confirm that you have connectivity using GRC from this interface to this interface.

10
00:00:49.700 --> 00:00:56.040
But for the moment we've used ping as our initial test to ensure that we have basic connectivity so

11
00:00:56.030 --> 00:01:05.760
to configure a tunnel you go quantity interface tunnel and you specify no I'm going to choose 0 to keep

12
00:01:05.760 --> 00:01:11.280
it simple but as you see there's a wide range of tunnel numbers that you can choose from Tunnel zero

13
00:01:11.280 --> 00:01:17.910
in this example has gone down the tunnel interface will only come up if we have IP connectivity to the

14
00:01:17.910 --> 00:01:25.320
tunnel destination which we still need to configure but first let's configure an IP address on the tunnel

15
00:01:26.160 --> 00:01:34.680
and I'm gonna configure this as a slash 30 network and once again we're going to use a private IP address.

16
00:01:34.680 --> 00:01:40.380
So we're going to be sending traffic across the Internet using private IP addresses but it'll work because

17
00:01:40.380 --> 00:01:49.070
Rider 3 is going to run to traffic based on the outer header or as described in the RNC is the delivery

18
00:01:49.080 --> 00:01:57.600
header so the jury header and payload packet is not going to be read by the Internet Rod is they simply

19
00:01:57.600 --> 00:02:04.910
gonna write traffic based on the delivery header we need to specify the tunnel mode

20
00:02:08.010 --> 00:02:15.370
notice multiple options are available but we're going to use jari and IP version 4 that is actually

21
00:02:15.370 --> 00:02:15.990
the default.

22
00:02:16.000 --> 00:02:22.570
So when we look at the tunnel interface you'll notice that command doesn't display because that is once

23
00:02:22.570 --> 00:02:25.150
again the default tunnel mode.

24
00:02:25.150 --> 00:02:31.730
We now need to specify the tunnel source noticed the tunnel command gives you multiple options.

25
00:02:31.880 --> 00:02:38.230
We've already chosen mode but now we'll select the source of the tunnel.

26
00:02:38.440 --> 00:02:41.580
You can choose a physical interface or an IP address.

27
00:02:41.620 --> 00:02:48.190
In this example I'm simply going to choose IP address and hit enter the tunnel is going to originate

28
00:02:48.190 --> 00:02:56.870
from this IP address and it's going to go to a destination afforded wonder to go to.

29
00:02:56.970 --> 00:03:01.940
In other words Rata for as you can see the tunnel has now come up.

30
00:03:02.130 --> 00:03:09.200
And that's because we have IP connectivity from this rudder to the destination of the tunnel.

31
00:03:09.210 --> 00:03:15.420
The tunnel however is not going to work because we have to configure the other side so confetti interface

32
00:03:15.430 --> 00:03:27.130
tunnel 0 en route for IP address 10 dot 1 dot 3D or to keep it in the same subnet so this side is once

33
00:03:27.130 --> 00:03:30.850
again tenth of 1 to 3 to 1

34
00:03:33.990 --> 00:03:44.520
and the side is tendered 1 2 3 2 2 so back on Rado for tunnel mode Gyari my pEa.

35
00:03:44.570 --> 00:03:50.090
You don't have to specify that command because it's the default but I'll do it here for completeness

36
00:03:52.590 --> 00:04:00.450
tunnel sources forward and wonder to the to tunnel destination is forward to wander wandered 1 and hopefully

37
00:04:00.450 --> 00:04:10.320
what we should see is that that tunnel comes up and there it does show IP interface brief shows us that

38
00:04:10.320 --> 00:04:16.370
we now have a tunnel interface that's up up on the side and en route to

39
00:04:19.290 --> 00:04:26.160
the tunnel is up en route to some route to we should be able to ping right a force tunnel interface

40
00:04:26.160 --> 00:04:35.700
which we can so no just we pinging 10 dot wonder 3 to 2 but rather 3 has no visibility of that route

41
00:04:39.210 --> 00:04:44.140
and that shows quite nicely that Rider 3 is able to route traffic from this IP address to this IP address

42
00:04:44.560 --> 00:04:51.730
without actually reading those IP addresses simply writing traffic based on the source to this destination

43
00:04:53.130 --> 00:04:59.540
so let's prove that I'll start a captcha here I'm going to start a captcha using HDL see because the

44
00:04:59.540 --> 00:05:08.240
default encapsulation is HDL Si On Cisco's serial links on interface serial to slash one on rudder three

45
00:05:13.840 --> 00:05:21.830
so at the momentary cease GDP we see some other messages but what I'll do is to a ping from Robert to

46
00:05:21.840 --> 00:05:27.480
Toronto for again and there you go there's ICMP messages

47
00:05:31.330 --> 00:05:38.530
so we can see it's an ICMP from tendered wonder 3 to 1 to 10 to 1 or 3 to 2 the layer 2 encapsulation

48
00:05:38.530 --> 00:05:46.110
is HDL see the protocol used at layer three is IP version 4 and notice the source and destination ip

49
00:05:46.110 --> 00:05:50.980
addresses forwarded wandered wandered one destination is Fort at 1 to 2 to 2.

50
00:05:51.240 --> 00:05:59.170
In other words this writer is sending traffic to this Radha rudder 3 is going to rot based on these

51
00:05:59.170 --> 00:06:07.300
IP addresses not on the IP addresses contained in the encapsulated packet at least for we can see Joey

52
00:06:08.070 --> 00:06:17.320
so generic writing encapsulation using IP version for and inside there we can see the source tendered

53
00:06:17.320 --> 00:06:21.560
1 or 3 to 1 and destination of tendered wonder 3 to 2.

54
00:06:21.790 --> 00:06:31.390
In other words we've encapsulated an IP version full packet within an IP version 4 packet the original

55
00:06:31.690 --> 00:06:39.430
traffic was a ICMP ping so there's the ping and if we go to the next packet we can see the ping reply

56
00:06:39.910 --> 00:06:50.020
encapsulated in IP version 4 within injury within IP version 4 within each deal see so we've now successfully

57
00:06:50.020 --> 00:06:58.260
configured a tunnel from right to to write for I'll stop that capture in the next video we'll check

58
00:06:58.260 --> 00:07:04.520
where the rudder 1 can ping wrote of 5 and do simple y shock captures and do some other tests.
