WEBVTT
1
00:00:00.370 --> 00:00:08.070
An event based systems the network management protocols work very differently to query based systems.

2
00:00:08.070 --> 00:00:14.970
In any event based system the network management system simply listens for possible announcements or

3
00:00:14.970 --> 00:00:17.720
events to be sent over the wire.

4
00:00:18.090 --> 00:00:24.450
Typically network management protocols that leverage these types of events are either logged based or

5
00:00:24.490 --> 00:00:26.810
a in P-trap based.

6
00:00:26.860 --> 00:00:34.570
Now they are controllable in terms of the amount of detail that you receive from devices on your network.

7
00:00:34.630 --> 00:00:42.530
So as an example on a Cisco Rodda you could enable debugging which produces a very large amount of data.

8
00:00:42.670 --> 00:00:47.530
There's a lot of low level detail that's generated with the debugging.

9
00:00:47.530 --> 00:00:53.400
You may not necessarily want that amount of data pushed to your network management system.

10
00:00:53.440 --> 00:00:59.590
One of the issues here is if you receive a large amount of data who's going to sift through the data

11
00:00:59.980 --> 00:01:04.080
to make meaningful decisions on the data that was received.

12
00:01:04.570 --> 00:01:11.200
So you don't want it just enable lots of event based information that same to assist looks over one

13
00:01:11.200 --> 00:01:17.200
of the advantages of event based systems is that they can react very quickly.

14
00:01:17.230 --> 00:01:22.930
In other words if an event takes place on the network the network management system can act on that

15
00:01:22.930 --> 00:01:27.860
event immediately rather than waiting for a polling interval to expire.

16
00:01:28.600 --> 00:01:35.380
As an example if you are polling a router interface for its status every five minutes then you would

17
00:01:35.380 --> 00:01:43.060
know that that interfaces up whenever the poll is done or query is done in a query based system.

18
00:01:43.270 --> 00:01:49.300
But if the interface goes down just after you've polled it it may take another five minutes for you

19
00:01:49.300 --> 00:01:55.810
to realize that the interface went down when your network management system pulls the router every five

20
00:01:55.810 --> 00:01:56.610
minutes.

21
00:01:56.760 --> 00:02:03.960
It will receive back a positive response from the Rodda confirming that the interface is up as an example.

22
00:02:04.210 --> 00:02:08.880
That's typically done using a network management protocols such as Ace and MP.

23
00:02:08.890 --> 00:02:14.680
So you know the interface is operational because you've queried the router if you don't get a response

24
00:02:14.770 --> 00:02:17.010
from the router then you know there's a problem.

25
00:02:17.530 --> 00:02:23.170
But the downside of a query based system is that you only polling it every five minutes.

26
00:02:23.410 --> 00:02:30.130
If the interface went down immediately after you pulled the router it could take up to five minutes

27
00:02:30.640 --> 00:02:37.260
for you to realize that there's a problem on the interface of that router where as in any event based

28
00:02:37.270 --> 00:02:44.080
system and it's an empty trap log message is sent immediately when the interface goes down.

29
00:02:44.080 --> 00:02:49.570
So in this case the router is informing the network management system that there's a problem rather

30
00:02:49.570 --> 00:02:55.630
than the network management system having to wait a five minute interval to query the Rodda for the

31
00:02:55.630 --> 00:02:57.960
status of an interface.

32
00:02:57.970 --> 00:03:04.870
Now there is a downside to event based systems the network management protocols are not reliable because

33
00:03:04.870 --> 00:03:12.750
the network management system is simply passively waiting and listening for events to be sent to it.

34
00:03:12.820 --> 00:03:18.730
It wouldn't know if there was a problem on the network if that event didn't reach the network management

35
00:03:18.730 --> 00:03:20.020
system.

36
00:03:20.050 --> 00:03:26.140
So if there's a network issue or a need to face went down that prevents the log message or an empty

37
00:03:26.140 --> 00:03:32.740
trap from getting to the network management system the network management system would be unaware of

38
00:03:32.770 --> 00:03:37.750
the problem without explicitly polling the network device.

39
00:03:38.480 --> 00:03:44.630
So what are the best practices what should you be doing in a live environment how best practices state

40
00:03:44.690 --> 00:03:51.980
that you should use both you should use polling based or query based as well as event based network

41
00:03:51.980 --> 00:03:55.370
management protocols as part of your network management solution.

42
00:03:56.500 --> 00:03:59.720
Now it doesn't help just to receive a large amount of data.

43
00:03:59.980 --> 00:04:02.940
You need to make meaningful decisions on that data.

44
00:04:03.750 --> 00:04:09.380
So you also want to bold and leverage alerts and reports so that you both are notified when an issue

45
00:04:09.380 --> 00:04:16.700
occurs whether it was based on a polling based detection mechanism or an event based detection.

46
00:04:16.770 --> 00:04:22.350
And in addition you're going to want some kind of reporting capability which provides you with detail

47
00:04:22.350 --> 00:04:25.150
of performance not only in real time.

48
00:04:25.170 --> 00:04:28.980
At this point in time but over a period of time.

49
00:04:29.070 --> 00:04:33.760
So you want historical data available so that you can make meaningful decisions.

50
00:04:34.470 --> 00:04:41.320
As an example if an interface on a Rodda has a utilization of 70 percent is that good.

51
00:04:41.350 --> 00:04:42.560
What is that bad.

52
00:04:43.380 --> 00:04:48.930
That's difficult to know if you don't have historical data that allows you to build a baseline of what

53
00:04:48.930 --> 00:04:51.650
your network typically runs at.

54
00:04:51.790 --> 00:04:57.220
If that interface in the last three months has been running at 2 percent utilization and now suddenly

55
00:04:57.220 --> 00:05:03.100
it's running at 90 percent utilization you'll know that something has happened on your network that

56
00:05:03.100 --> 00:05:06.350
has changed to the interface utilization dramatically.

57
00:05:07.230 --> 00:05:13.470
So you're going to want reports to give you performance detail over time as well as notify you of issues

58
00:05:13.830 --> 00:05:16.640
and the availability of devices in your network.

59
00:05:17.560 --> 00:05:23.170
You're going to want to at a glance be able to see if there's a problem with a network device such as

60
00:05:23.170 --> 00:05:29.730
a router or if there's a problem with an individual interface on one of your routers.

61
00:05:29.920 --> 00:05:37.640
Don't forget to set the polling frequency and how granular your event notifications are.

62
00:05:37.680 --> 00:05:43.440
This will vary from one environment to another and often depends on the type of typology that you have

63
00:05:44.010 --> 00:05:50.760
the bandwidth available and the resources you have to detect and then act on the information that you're

64
00:05:50.760 --> 00:05:51.690
receiving.

65
00:05:52.310 --> 00:05:58.500
In addition you might need to make decisions on how quickly you need to react to an issue on your network

66
00:05:59.560 --> 00:06:06.730
if something happens on your network and it effects an entire building for the entire organization you're

67
00:06:06.730 --> 00:06:09.000
going to want to act on that quickly.

68
00:06:09.100 --> 00:06:14.320
But if something happens and it only affects a single device that's not important it's probably not

69
00:06:14.320 --> 00:06:20.260
as important that you get woken up at 3 o'clock in the morning to tell you that the port on the switch

70
00:06:20.260 --> 00:06:21.200
has gone down.
