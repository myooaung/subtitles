WEBVTT
1
00:00:00.000 --> 00:00:05.000
Now let’s look at a MAC address in more detail, its once again 6 bytes in length

2
00:00:05.000 --> 00:00:11.000
and if you remember a byte is 8 bits in length, so 6 x 6 gives you 48 bits

3
00:00:11.000 --> 00:00:19.000
3 bytes or 24 bits is the OUI portion of the address

4
00:00:19.000 --> 00:00:23.000
3 bytes or 24 bits is Network Interface Card specific

5
00:00:23.000 --> 00:00:28.000
and is the unique identifier of that Network Interface Card.

6
00:00:28.000 --> 00:00:34.000
Now in the OUI portion in the first octet or most significant octet,

7
00:00:34.000 --> 00:00:37.000
in other words the first byte in the OUI.

8
00:00:37.000 --> 00:00:43.000
The least significant bit, in other words the last bit of the first octet or first byte

9
00:00:43.000 --> 00:00:51.000
is either set to 0 which indicates unicast or it set to 1 which indicates multicast.

10
00:00:51.000 --> 00:00:56.000
Unicast traffic if you remember is a conversation between 2 devices where

11
00:00:56.000 --> 00:01:00.000
one devices sending the traffic and the other devices receiving the traffic.

12
00:01:00.000 --> 00:01:03.000
So device A is talking to device B.

13
00:01:03.000 --> 00:01:09.000
Multicast is where one device is sending traffic to multiple devices

14
00:01:09.000 --> 00:01:12.000
that have subscribe to the multicast.

15
00:01:12.000 --> 00:01:15.000
Now this make it very efficient for Ethernet switches

16
00:01:15.000 --> 00:01:18.000
to know whether they should flood the frame out of all ports.

17
00:01:18.000 --> 00:01:23.000
When multicast traffic is receive by a layer 2 switch that traffic is flooded

18
00:01:23.000 --> 00:01:28.000
out of all ports whereas unicast traffic is typically not flooded.

19
00:01:28.000 --> 00:01:35.000
So by reading the bit in the frame, the layer 2 switch knows how to process traffic.

20
00:01:35.000 --> 00:01:39.000
The second least significant bits in the first octet, so in the other words we're still

21
00:01:39.000 --> 00:01:46.000
looking at the first octet but the 2nd least significant bit, is either set to 0

22
00:01:46.000 --> 00:01:49.000
which means that it's a globally unique MAC address

23
00:01:49.000 --> 00:01:55.000
or it set to 1 which means that an administrator has change the MAC address.

24
00:01:55.000 --> 00:01:59.000
So that would be for the example that I did previously

25
00:01:59.000 --> 00:02:04.000
where I change the MAC address on my PC, the 0 means it's a unique MAC address

26
00:02:04.000 --> 00:02:12.000
designated by manufacturer where as a 1 means that a administrator locally change

27
00:02:12.000 --> 00:02:15.000
the MAC address of the interface.

28
00:02:15.000 --> 00:02:20.000
Now in Ethernet, when a bus topology is used, devices used

29
00:02:20.000 --> 00:02:27.000
what’s called Carrier Sense Multiple Access/Collision Detection or CSMA/CD.

30
00:02:27.000 --> 00:02:32.000
This operates as follows, when a device wants to send traffic

31
00:02:32.000 --> 00:02:36.000
it should first check to hear if any other devices speaking.

32
00:02:36.000 --> 00:02:42.000
So the device will not communicate unto the network if it hears another device

33
00:02:42.000 --> 00:02:48.000
that's called Carrier Sense, Carrier sense is essentially sensing the network

34
00:02:48.000 --> 00:02:51.000
to hear if another device is speaking.

35
00:02:51.000 --> 00:02:56.000
Multiple Access means that any device can communicate across that segment

36
00:02:56.000 --> 00:02:59.000
as long as no other device is communicating.

37
00:02:59.000 --> 00:03:05.000
Now this is different to the old main frame days where a central device

38
00:03:05.000 --> 00:03:09.000
would poll terminals to allow them to communicate.

39
00:03:09.000 --> 00:03:16.000
In Ethernet were using a distributed environment where each device can independently

40
00:03:16.000 --> 00:03:20.000
communicate across the network without permission from other devices.

41
00:03:20.000 --> 00:03:25.000
However a device should only change traffic if no other device is speaking

42
00:03:25.000 --> 00:03:30.000
and that’s because we want to avoid collisions in an Ethernet environment.

43
00:03:30.000 --> 00:03:36.000
As another analogy when traditional telephones are connected to PDX,

44
00:03:36.000 --> 00:03:39.000
the PDX is in charge of the communications.

45
00:03:39.000 --> 00:03:42.000
That’s not true in an Ethernet environment

46
00:03:42.000 --> 00:03:46.000
every device is independent of other devices

47
00:03:46.000 --> 00:03:48.000
However if collisions do take place

48
00:03:48.000 --> 00:03:52.000
there’s an option in Ethernet to detect collisions.

49
00:03:52.000 --> 00:03:56.000
When a devices detects that a collision has taken place it may send

50
00:03:56.000 --> 00:04:01.000
a back off or jamming signal to indicate that a collision has taken place.

51
00:04:01.000 --> 00:04:06.000
Once again in this environment, terminators are used at the end of the cable

52
00:04:06.000 --> 00:04:12.000
to ensure that signals don’t bounce back causing additional collisions.

53
00:04:12.000 --> 00:04:18.000
Now in a given scenario it may happen that 2 devices want to communicate

54
00:04:18.000 --> 00:04:24.000
at exactly the same time, but at that point on time, no devices are speaking.

55
00:04:24.000 --> 00:04:30.000
So let say that in this example A wants to communicate  with C.

56
00:04:30.000 --> 00:04:33.000
so A wants to send traffic unto the network

57
00:04:33.000 --> 00:04:36.000
with the source address of A and destination address of C.

58
00:04:36.000 --> 00:04:41.000
But that exact point in time, D also wants to communicate.

59
00:04:41.000 --> 00:04:44.000
In this case D wants to communicate with B.

60
00:04:44.000 --> 00:04:46.000
So it wants to send the frame unto the network

61
00:04:46.000 --> 00:04:50.000
with the source address of D and destination address of B.

62
00:04:50.000 --> 00:04:58.000
Now in line with CSMA/CD both A and D firstly check to see if anyone is speaking.

63
00:04:58.000 --> 00:05:03.000
So they use Carrier Sense or CS to check the wire.

64
00:05:03.000 --> 00:05:07.000
At this point in time no devices communicating on the network.

65
00:05:07.000 --> 00:05:13.000
However, because of Multiple Access any device can access the cable

66
00:05:13.000 --> 00:05:15.000
without permission from any other device.

67
00:05:15.000 --> 00:05:21.000
So both A and D send traffic unto the network but because this is 10base2

68
00:05:21.000 --> 00:05:27.000
or in other words baseband, only 1 signal is allowed across the wire at any given time.

69
00:05:27.000 --> 00:05:31.000
So in this example a collision takes place.

70
00:05:31.000 --> 00:05:37.000
Now if A transmitting data station or PC detects another signal on the wire

71
00:05:37.000 --> 00:05:42.000
while transmitting its frame, it will stop transmitting that frame

72
00:05:42.000 --> 00:05:47.000
and then send a jamming signal as well as waiting a random period of time

73
00:05:47.000 --> 00:05:52.000
known as back off delay before trying to send the signal again.

74
00:05:52.000 --> 00:05:55.000
This will prevent machine or PCs

75
00:05:55.000 --> 00:05:59.000
from repeatedly attempting to transmit at the same time.

76
00:05:59.000 --> 00:06:05.000
However, the probability of collisions becomes greater as the cable length increases

77
00:06:05.000 --> 00:06:05.000
and as more devices are added unto the network.

78
00:06:05.000 --> 00:06:13.000
In other words, its more likely that collisions will takes place

79
00:06:13.000 --> 00:06:17.000
with longer cable lengths and more devices.

80
00:06:17.000 --> 00:06:20.000
So as you add more and more devices to this network

81
00:06:20.000 --> 00:06:25.000
and extend the cable length, the probability of collisions increases dramatically.
