WEBVTT
1
00:00:04.560 --> 00:00:09.180
Now in the official cert guide that Wendell wrote he spent a lot of time going over SDI or software

2
00:00:09.180 --> 00:00:10.620
defined access.

3
00:00:10.620 --> 00:00:13.430
Now just software defined could be software defined.

4
00:00:13.430 --> 00:00:14.250
Coffee.

5
00:00:14.340 --> 00:00:19.290
I mean there's so many terms with this word of software defined networking got abused.

6
00:00:19.350 --> 00:00:23.160
We had software defined networking that was open flow and we had software defined networking that was

7
00:00:23.160 --> 00:00:24.000
using API.

8
00:00:24.000 --> 00:00:26.280
We had software defined networking there was overlays.

9
00:00:26.460 --> 00:00:31.410
So we spoke about overlays and under Laser ready basically became software defined whatever you like.

10
00:00:31.410 --> 00:00:39.920
But software defined access or SDK Cisco's solution of changing the way a enterprise network works so

11
00:00:39.930 --> 00:00:45.770
traditionally in an enterprise network we would have spanning tree that causes a whole bunch of issues

12
00:00:45.780 --> 00:00:52.200
because we have to match up you know forwarding of ports to a just IP default gateways causes a whole

13
00:00:52.200 --> 00:00:57.930
lot of issues so we want to do away with spending tree and what we do is we just run writing protocols

14
00:00:57.960 --> 00:00:58.880
everywhere.

15
00:00:58.980 --> 00:01:03.500
So the default gateway of your pieces will be the local access switch.

16
00:01:03.510 --> 00:01:08.970
So the switch on the edge the switch that they connect to rather than a call switch or a distribution

17
00:01:08.970 --> 00:01:12.550
switch we run SPF everywhere or writing protocol everywhere.

18
00:01:12.560 --> 00:01:17.730
So we do away with spanning tree we do away with port blocking that kind of stuff.

19
00:01:17.730 --> 00:01:21.940
But in my experience of the CCMA exam I think it was overkill.

20
00:01:21.990 --> 00:01:28.330
The FDA stuff in the O.C. gee now if I hear otherwise I'll change this course.

21
00:01:28.620 --> 00:01:31.680
But I wouldn't spend too much time on SGA.

22
00:01:31.680 --> 00:01:34.850
Basically the idea is the network gets managers of fabric.

23
00:01:35.070 --> 00:01:41.340
So we have all these writers and switches that are controlled by a controller and then similar to NSX

24
00:01:41.340 --> 00:01:48.540
from the Amway what we do is we building tunnels automatically the X land tunnels once again where we

25
00:01:48.540 --> 00:01:51.030
build an overlay across the underlying network.

26
00:01:51.050 --> 00:01:57.270
So the core underlying network can be fairly basic rather than configuring a whole bunch of Axis lists

27
00:01:57.300 --> 00:02:03.600
on the core devices we can do everything as a policy on the SDK server and then apply a policy on the

28
00:02:03.600 --> 00:02:07.980
network devices and DNA center will basically blast off automatically.

29
00:02:07.980 --> 00:02:12.660
So it will build the excellent tunnels it will apply the policies.

30
00:02:12.840 --> 00:02:19.740
So we have this concept once again of intent based networking and intent is I want to do something but

31
00:02:19.740 --> 00:02:24.410
I don't want to have to explicitly write everything down to make that happen.

32
00:02:24.420 --> 00:02:30.300
So as an example I want to stop PCH talking to PTB in a traditional environment you have to create access

33
00:02:30.300 --> 00:02:36.330
lists that stop those devices from talking to each other but if an intent based scenario and and some

34
00:02:36.330 --> 00:02:42.750
of the other it's controller based implementations I would basically say OK this guy can talk to this

35
00:02:42.750 --> 00:02:45.720
guy put across there so that's all done through.

36
00:02:45.720 --> 00:02:46.890
Give me as an example.

37
00:02:46.890 --> 00:02:51.930
And then that applies a policy to the network that basically stops that.

38
00:02:52.030 --> 00:02:56.310
So you as a network engineer don't have to go and configure access lists manually.

39
00:02:56.310 --> 00:03:02.230
Your intent is to stop this guy talking to this guy and the network just makes that happen automatically.

40
00:03:02.580 --> 00:03:06.730
Which is quite scary in some ways because what happens if it goes wrong.

41
00:03:07.060 --> 00:03:11.890
So the whole idea of this SD n stuff is fantastic and I don't want to blow it out of the water straight

42
00:03:11.890 --> 00:03:16.960
away but just be aware that you should kind of understand what's going on under the hood because what

43
00:03:16.960 --> 00:03:18.060
happens if something goes wrong.

44
00:03:19.270 --> 00:03:22.970
But the principle is we have an underlying network.

45
00:03:23.080 --> 00:03:29.080
Then we put vehicles land tunnels over it which allows us to apply policies on the overlay network rather

46
00:03:29.080 --> 00:03:35.710
than on the underlying network so we can stop this guy talking to this guy much more easily using these

47
00:03:35.710 --> 00:03:41.290
tunnels than to try and have a single access list on an interface of a router that blocks people across

48
00:03:41.290 --> 00:03:42.700
the entire network.

49
00:03:43.030 --> 00:03:49.240
Much better way of doing things it's basically the way it's going so we have a controller that manages

50
00:03:49.240 --> 00:03:53.690
a whole bunch of devices in the enterprise.

51
00:03:53.740 --> 00:04:01.030
Now just stepping back a second third to jump around software defined networking was more for the datacenter

52
00:04:01.530 --> 00:04:06.780
so it was NSX was a fantastic success in the data center.

53
00:04:06.840 --> 00:04:09.830
Cisco have ECI also data center product.

54
00:04:10.050 --> 00:04:11.520
But what about enterprises.

55
00:04:11.610 --> 00:04:19.680
So FDA is an enterprise solution where we take software defined principles and apply it to an enterprise

56
00:04:20.280 --> 00:04:26.050
and we apply policies on that network rather than in a datacenter.

57
00:04:26.070 --> 00:04:30.980
So basically simple things like OK let's get rid of spanning tree.

58
00:04:30.990 --> 00:04:34.080
So we run 0 SPF or writing protocol everywhere.

59
00:04:34.140 --> 00:04:36.780
Everything's layer 3 rather than layer 2.

60
00:04:36.810 --> 00:04:39.740
But you know how do we get this device to talk to this device.

61
00:04:39.810 --> 00:04:44.480
We can apply a policy through a gooey or a management station or a controller.

62
00:04:44.580 --> 00:04:51.420
If you want to use the the right term that applies the policy onto the network without you having to

63
00:04:51.420 --> 00:04:53.680
manually configure a whole bunch of stuff.

64
00:04:53.700 --> 00:05:00.630
The idea is use is this term of abstraction abstraction is used everywhere as an example if I want to

65
00:05:00.630 --> 00:05:02.430
write a piece of Python code.

66
00:05:02.430 --> 00:05:07.130
I don't have to know how to make that do something on a hard drive.

67
00:05:07.170 --> 00:05:14.130
I'm an abstracted from a low level programming the operating system abstracts me from the hardware operating

68
00:05:14.130 --> 00:05:20.580
system abstracts me from network cable stuff like that I'm programming in a high level programming language

69
00:05:20.580 --> 00:05:27.810
Python that goes all the way down through the stack and actually make something happen something happen

70
00:05:27.840 --> 00:05:29.570
on the network.

71
00:05:29.640 --> 00:05:35.870
So I'm extracted from assembly language as an example I'm abstracted from low level stuff.

72
00:05:36.030 --> 00:05:40.380
I use my brain for doing high level stuff rather than low level stuff.

73
00:05:40.770 --> 00:05:48.820
So very real world example pilots a pilot today doesn't fly from the UK to the US manually the whole

74
00:05:48.830 --> 00:05:49.490
way.

75
00:05:49.770 --> 00:05:51.960
What do they use they use autopilot.

76
00:05:51.960 --> 00:06:00.000
So the idea is autopilot allows the pilot to take care of high level tasks why the low level stuff is

77
00:06:00.000 --> 00:06:02.540
taken care of using autopilot.

78
00:06:02.580 --> 00:06:08.460
Now the aeroplane has all of these sensors that give information about altitude stuff like that and

79
00:06:08.460 --> 00:06:17.400
then the plane can guide the pilot but autopilot can cause problems where the pilot tries to manage

80
00:06:17.400 --> 00:06:23.760
the network or should I say the plane through autopilot by adjusting various high level parameters rather

81
00:06:23.760 --> 00:06:26.260
than just grabbing the plane and flying it.

82
00:06:26.410 --> 00:06:31.800
And it was a really interesting video where they were talking about this issue where automation has

83
00:06:31.800 --> 00:06:38.790
actually caused the crashes because pilots no longer fly the plane like physically fly it they try and

84
00:06:38.790 --> 00:06:45.450
adjust the planes flying through autopilot so that they try and feed information to autopilot that then

85
00:06:45.450 --> 00:06:47.520
flies the plane and adjusts adjusts the plane.

86
00:06:47.870 --> 00:06:54.210
But if you got a plane flying at you you as a pilot you'd grab the aeroplane and fly it out of the way

87
00:06:54.210 --> 00:06:56.500
rather than trying to adjust autopilot.

88
00:06:56.550 --> 00:07:00.780
And I think that's the same thing that we as network engineers need to be careful of is don't rely on

89
00:07:00.780 --> 00:07:08.610
the autopilot or the cleverness of all of these applications when the network is burning or there's

90
00:07:08.640 --> 00:07:12.040
a fire you need to jump in and fix the problems.

91
00:07:12.090 --> 00:07:17.580
So automation has its place but it's still important to understand how networks work because automation

92
00:07:17.580 --> 00:07:24.160
will allow you to break a network very very quickly if you don't understand what automation is doing.

93
00:07:24.180 --> 00:07:30.530
I mean if a programmer just writes a script that sends a whole bunch of BP to use it to a network running

94
00:07:30.530 --> 00:07:33.200
spending tree it could mess up your whole network.

95
00:07:33.210 --> 00:07:38.210
So you need to understand what your program is doing what these applications are doing.

96
00:07:38.310 --> 00:07:43.980
So there's huge advantages to abstraction huge advantages to automation but you still need to understand

97
00:07:43.980 --> 00:07:44.850
networking.

98
00:07:44.880 --> 00:07:46.870
So I think Cisco has done a good thing here.

99
00:07:46.880 --> 00:07:53.850
Ten percent of the CCMA is automation and programming or program ability 90 percent is a lot of traditional

100
00:07:53.850 --> 00:07:58.860
network stuff useful and network person is still a network engineer you still need to understand protocols

101
00:07:58.860 --> 00:08:07.020
like spending 3 0 SPF etc. But I think for me the programming side is very exciting because Cisco now

102
00:08:07.020 --> 00:08:13.450
have this definite track so you have this world in front of you which didn't exist.

103
00:08:13.530 --> 00:08:18.480
I'm recording this you know not long after the CCMA was released.

104
00:08:18.480 --> 00:08:25.260
You've got this world now where you can go traditional networking with a bit of programming or you can

105
00:08:25.260 --> 00:08:27.670
go programming with a bit of networking.

106
00:08:27.690 --> 00:08:32.910
So I think if you starting in your career you have two wonderful choices and I mean you just got to

107
00:08:32.910 --> 00:08:37.560
decide what you enjoy do you enjoy programming with a touch of networking or do you enjoy networking

108
00:08:37.560 --> 00:08:38.880
with a touch of programming.

109
00:08:38.880 --> 00:08:42.570
I think those are going to actually become closer and close in future.

110
00:08:42.570 --> 00:08:49.140
So five 10 years from today the line between networking and programming will just draw closer and closer.

111
00:08:49.140 --> 00:08:51.900
Networking is changing and I've been saying this for many years.

112
00:08:51.930 --> 00:08:53.930
I mean now we are going more to the cloud.

113
00:08:53.940 --> 00:08:56.560
So cloud stuff is becoming more important.

114
00:08:56.700 --> 00:09:00.890
But don't think that if you put it in the cloud it's going to solve your network problems.

115
00:09:00.910 --> 00:09:01.780
It's still a network.

116
00:09:01.780 --> 00:09:05.500
You still have to manage the network cloud as in your network.

117
00:09:05.980 --> 00:09:09.020
I mean if you put a VM in the cloud it's cool it's just a VM.

118
00:09:09.130 --> 00:09:14.210
But what happens if you have virtual machines in Asia and in America and in Europe.

119
00:09:14.290 --> 00:09:18.610
Suddenly you start working with low balances you start working with firewalls you start working with

120
00:09:18.640 --> 00:09:24.040
access control lists you start working with villains not call that but you start working with all the

121
00:09:24.040 --> 00:09:25.530
traditional networking stuff.

122
00:09:25.600 --> 00:09:29.440
So just because it's in the cloud doesn't mean that you can ignore networking still gonna be a lot of

123
00:09:29.440 --> 00:09:31.530
work for network engineers.

124
00:09:31.570 --> 00:09:35.340
It's just the roles may change rather than typing on the CLIA.

125
00:09:35.350 --> 00:09:41.800
You might be working in a controller or in the cloud but you still need to understand networking principles.

126
00:09:41.860 --> 00:09:48.340
Okay so that was quite a long ramble a hope that kind of discussion was valuable to add to the course.

127
00:09:48.430 --> 00:09:57.190
I'm going to show you some more practical stuff now in the rest of the course but hopefully that gives

128
00:09:57.190 --> 00:10:03.880
you a good idea of what's important for the exam and kind of sets the 10000 foot view and overview of

129
00:10:03.880 --> 00:10:06.190
programming and network automation.
