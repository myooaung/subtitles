WEBVTT
1
00:00:00.720 --> 00:00:07.050
In a topology like this we may have full access which is connected via stacking cables so physically

2
00:00:07.110 --> 00:00:08.900
it would look like this.

3
00:00:15.590 --> 00:00:23.420
But logically it looks like this the switches appear to be a single switch to the rest of the network

4
00:00:23.720 --> 00:00:27.770
and you configure them as if they are a single switch.

5
00:00:27.770 --> 00:00:34.520
We now have a full uplinks to each distribution switch so physically they connected as follows with

6
00:00:34.520 --> 00:00:41.960
each Access Switch having one connection to each distribution switch but logically we have for physical

7
00:00:41.960 --> 00:00:49.600
cables to each distribution switch which then allows us to use ether channel to the distribution switch.

8
00:00:49.600 --> 00:00:55.250
So rather than using spanning tree across these uplinks we're one of the ports is forwarding and one

9
00:00:55.250 --> 00:00:57.020
of the ports is blocking.

10
00:00:57.260 --> 00:01:02.220
We've now created an ether channel to each distribution switch.

11
00:01:02.330 --> 00:01:08.330
This kind of setup simplifies the configuration and management of the network from a spending three

12
00:01:08.330 --> 00:01:13.070
point of view rather than having six switches involved in the spending tree.

13
00:01:13.070 --> 00:01:19.430
We now only have three switches involved in the spanning tree so it's much easier to configure much

14
00:01:19.430 --> 00:01:26.870
easier to understand as well as to predict what happens when there's a failure in the network uploading

15
00:01:26.870 --> 00:01:33.710
across an ether channel is also more efficient than using spanning tree to block one port and forward

16
00:01:33.770 --> 00:01:34.610
on another port.
