WEBVTT
1
00:00:00.880 --> 00:00:07.750
So what is a previous t plus or Rapide previous t plus extended bridge ID now spending tree requires

2
00:00:07.750 --> 00:00:11.510
that every switch have a unique bridge ID in the past.

3
00:00:11.520 --> 00:00:16.550
Those simply consisted of the bridge priority and a MAC address.

4
00:00:16.720 --> 00:00:23.740
So bridge ID consists of eight bytes with two bytes being the bridge priority and six bytes being the

5
00:00:23.740 --> 00:00:25.290
MAC address.

6
00:00:25.300 --> 00:00:31.840
However when configuring multiple villans and running Poovey and spending tree a different MAC address

7
00:00:31.840 --> 00:00:39.600
would have to be allocated for every villaine previous t creates an instance on a Poovey land basis.

8
00:00:39.820 --> 00:00:46.510
So to ensure that the bridge idea is unique on a per violent basis a different MAC address would have

9
00:00:46.510 --> 00:00:48.000
to be allocated.

10
00:00:48.100 --> 00:00:54.670
Now that works fine if you only have a few villans But if you configuring hundreds or thousands of lines

11
00:00:54.970 --> 00:00:56.520
it's not scalable.

12
00:00:56.770 --> 00:01:03.400
If a vendor was supporting Peavey's t the vendor would need to assign a unique MAC address on a Poovey

13
00:01:03.400 --> 00:01:04.440
land basis.

14
00:01:05.240 --> 00:01:11.240
So in theory if four thousand ninety four villains were supported on the switch four thousand ninety

15
00:01:11.240 --> 00:01:15.600
four unique MAC addresses would need to be assigned to every switch.

16
00:01:15.860 --> 00:01:18.090
That's simply not scalable.

17
00:01:18.200 --> 00:01:25.670
So to conserve MAC addresses the system has changed and an extended system id is also known as MAC address

18
00:01:25.670 --> 00:01:26.960
reduction.

19
00:01:27.050 --> 00:01:34.430
So with extended bridge IDs the bridge ID is still 8 bytes in size but the priority is now split into

20
00:01:34.430 --> 00:01:43.320
two parts so the two by two per already portion consists of a 4 but bridge priority and a toll.

21
00:01:43.370 --> 00:01:50.110
But extended system id the MAC address is still 6 bytes in size.

22
00:01:50.170 --> 00:01:58.810
So please note bridge Purdy's for bits extended system IDs 12 bits which equates to two bytes be extended

23
00:01:58.810 --> 00:02:05.610
system IDs populated with the villain number and the bridge priority is a value that you can set.

24
00:02:05.620 --> 00:02:09.430
Default is 3 2 7 6 8 in decimal.

25
00:02:09.580 --> 00:02:15.610
In the past at the bridge party consisted of two bites and you could set the property to a value such

26
00:02:15.610 --> 00:02:16.620
as 1.

27
00:02:16.630 --> 00:02:24.080
However that's no longer supported on the switch as an example if I type spending tree movieland one

28
00:02:24.450 --> 00:02:32.620
per priority and try and set it to 1 I'm told that I need to set it in increments of four thousand ninety

29
00:02:32.620 --> 00:02:37.360
six so the value is allowed on one of these.

30
00:02:37.360 --> 00:02:44.830
The reason for that is that the bridge party has been split into two portions with only the most significant

31
00:02:44.830 --> 00:02:48.560
4 bits being available for the priority.

32
00:02:48.610 --> 00:02:56.500
So if you set the bridge pro-ID portion the Philpots to binary 1 and you take the full 2 points into

33
00:02:56.500 --> 00:02:57.480
account.

34
00:02:57.520 --> 00:03:00.770
That would equate to four thousand ninety six in decimal.

35
00:03:01.030 --> 00:03:07.810
So if the priority but is set to 1 the extended bridge ID priority works out to four thousand ninety

36
00:03:07.810 --> 00:03:08.670
six.

37
00:03:08.710 --> 00:03:11.840
If you take into account the full two bytes.

38
00:03:12.250 --> 00:03:21.370
If you set the bridge Prodi portion 2 to say 0 0 1 0 in binary and look at the full 16 bits or two bytes

39
00:03:21.790 --> 00:03:24.720
it equates to 8 1 9 2 in decimal.

40
00:03:24.940 --> 00:03:31.000
On some vendor's equipment you can set the party to one and it will automatically be converted to 8

41
00:03:31.000 --> 00:03:37.660
1 9 2 but on Cisco switches you need to set the bridge priority in multiples of four thousand ninety

42
00:03:37.660 --> 00:03:39.170
six.

43
00:03:39.220 --> 00:03:43.780
So once again if I try and set the party to one it's not allowed.

44
00:03:43.880 --> 00:03:51.360
Set it to 4000 and 96 that's allowed to show spending tree.

45
00:03:51.380 --> 00:03:58.160
Notice the priority of the switch because it's running previously plus is four thousand ninety seven

46
00:03:58.640 --> 00:04:01.260
so the priority Plus the villain number.

47
00:04:01.550 --> 00:04:04.990
If you are looking at a violent 10 is an example.

48
00:04:05.060 --> 00:04:08.870
The priority would be for 0 9 6 plus 10.

49
00:04:08.870 --> 00:04:13.790
If you're looking at villaine 20 it would be 4 0 9 6 plus 20.

50
00:04:13.790 --> 00:04:20.880
I'll demonstrate that in a separate video now over the years various enhancements have been made to

51
00:04:20.880 --> 00:04:24.500
spending try to reduce convergence time.

52
00:04:24.810 --> 00:04:30.570
So in a switched environment various enhancements have been made to the protocol to make sure that things

53
00:04:30.570 --> 00:04:31.740
happen quicker.

54
00:04:32.070 --> 00:04:37.800
A stented port on the switch could take us 30 seconds to converge and that's not acceptable in modern

55
00:04:37.800 --> 00:04:38.870
day networks.

56
00:04:39.150 --> 00:04:46.230
As an example if the PC was booting up and needed to connect to a DHP server the PC would boot up and

57
00:04:46.230 --> 00:04:50.910
send out a DHP request before the switch porters converged.

58
00:04:51.150 --> 00:04:57.480
So the PC would have already booted up and requested an IP address before 30 seconds have expired and

59
00:04:57.480 --> 00:05:04.200
hence the PC wouldn't receive an IP address from the DHP server because the DHP request from the PC

60
00:05:04.200 --> 00:05:09.540
would be dropped by this port which is blocking wireless converging.

61
00:05:09.720 --> 00:05:16.950
So to improve performance in switched environments edge ports in other words ports connected to edge

62
00:05:16.950 --> 00:05:24.840
devices such as PCs some servers and routers would be configured as port FOSS ports in a Cisco environment

63
00:05:25.180 --> 00:05:32.130
or edge ports on other vendor equipment Cecka use the term port fust.

64
00:05:32.160 --> 00:05:38.850
Other vendors use the term edge ports in some terminology Cisco will use the term port first and in

65
00:05:38.850 --> 00:05:43.050
other terminology it will be referred to as an edge port.

66
00:05:43.050 --> 00:05:49.830
Now it's important that you only enable port FOSS ports on access ports and not trunk ports.

67
00:05:49.860 --> 00:05:56.160
In other words you shouldn't enable port Fost on links between switches because that will introduce

68
00:05:56.370 --> 00:06:03.870
loops in your topology and edge port or a port phos port immediately transitions to the forwarding state.

69
00:06:03.870 --> 00:06:10.200
So bypasses the listening and learning states it goes directly from blocking to forwarding.

70
00:06:10.380 --> 00:06:17.190
Once again skipping both listening and learning states that allows for much quicker convergence because

71
00:06:17.250 --> 00:06:22.800
rather than waiting for spending tree to go through various stages such as blocking listening learning

72
00:06:22.800 --> 00:06:28.660
forwarding the Portus starts immediately forwarding traffic and hence convergence is a lot quicker.

73
00:06:29.640 --> 00:06:31.630
Spending trees still running on that port.

74
00:06:31.860 --> 00:06:34.280
But transition's immediately to forwarding.

75
00:06:34.350 --> 00:06:41.250
So we for some reason a be PDU was received in the port the port can get back to the blocking state.

76
00:06:41.250 --> 00:06:47.640
It's good practice to do this because you don't want to inadvertently introduce loops because someone

77
00:06:47.640 --> 00:06:51.570
plugged in a switch as an example by mistake on a port Fosset port.
