WEBVTT
1
00:00:01.340 --> 00:00:07.190
Just a reminder again about remarks remarks allow us to add descriptions to access control lists so

2
00:00:07.190 --> 00:00:13.070
that they are easier to understand with access less as they can get fairly complicated if you have a

3
00:00:13.070 --> 00:00:15.200
10 line or 20 line ACL.

4
00:00:15.210 --> 00:00:19.780
The last thing you want to do is decipher what the access list is intended to do.

5
00:00:20.000 --> 00:00:25.970
So adding remarks can make it a lot easier to follow and understand typing the C'mon show access list.

6
00:00:28.590 --> 00:00:34.260
Well Misratah shows me the access lists configured and at the moment you can see there are access lists

7
00:00:34.560 --> 00:00:39.890
with various lines that they in themselves don't mean much other than doing that.

8
00:00:39.900 --> 00:00:48.110
Let's create an access list it's the access list five hemat they say for instance 10 1.2 to 1.

9
00:00:48.430 --> 00:00:56.050
But now what you can do is you can say access list five Ramshaw and now you can put in a remark up to

10
00:00:56.050 --> 00:00:57.370
100 characters.

11
00:00:57.550 --> 00:00:58.810
So something like that

12
00:01:01.760 --> 00:01:11.070
the meet the boss X-ists to exchange server or whatever you decide.

13
00:01:11.490 --> 00:01:13.500
Now topping that come on show X-ists list

14
00:01:17.350 --> 00:01:21.370
doesn't show that remark but not as if I do the C'mon show run.

15
00:01:21.400 --> 00:01:25.990
Inkley access list.

16
00:01:26.210 --> 00:01:33.200
Notice the remark is displayed in the access list which makes it a lot easier to see what's going on.

17
00:01:33.230 --> 00:01:41.490
I could create another line that ex-wrestler Salita Exorcist 5 Tumut.

18
00:01:41.680 --> 00:01:43.210
And then I could create another a mock

19
00:01:52.240 --> 00:01:53.160
something like this.

20
00:01:54.170 --> 00:01:57.380
And now doing the same come on again show run piping CLEET Exorcist

21
00:02:01.540 --> 00:02:07.540
allows me to see each line in the access list and it's relevant remark thus making it a lot easier to

22
00:02:07.540 --> 00:02:09.050
understand what's going on.

23
00:02:10.570 --> 00:02:17.180
Some guidelines regarding access lists mostly the top of access list indicates what can be filtered.

24
00:02:17.350 --> 00:02:25.090
In other words a standard the access list can only on Source IP addresses or networks an extended access

25
00:02:25.090 --> 00:02:31.120
list can filter both on source and destination addresses source and destination port numbers and various

26
00:02:31.120 --> 00:02:34.180
other options relating to IP protocols.

27
00:02:34.280 --> 00:02:37.160
So extended access lists tend to be a lot more powerful.

28
00:02:37.240 --> 00:02:40.350
The order of processing is also of great importance.

29
00:02:40.410 --> 00:02:46.990
You should place your more specific statements first if your first statement was commit any and your

30
00:02:46.990 --> 00:02:54.460
second statement was deny host 10 1 1 1 second deny statement would be irrelevant because of your first

31
00:02:54.460 --> 00:02:59.740
statement saying permit any Remember access control lists or process top down.

32
00:02:59.740 --> 00:03:03.410
If there's a match on a line all subsequent lines are ignored.

33
00:03:03.490 --> 00:03:10.180
So I permit any would be matched and all traffic including traffic from host 10:01 one one would be

34
00:03:10.180 --> 00:03:15.010
permitted and the second line denying host 10 one on one would be ignored.

35
00:03:15.400 --> 00:03:21.430
Don't forget that there's an implicit deny all at the end of every Access Control list unless you explicitly

36
00:03:21.430 --> 00:03:24.370
permit something it's going to be denied.

37
00:03:24.670 --> 00:03:31.060
Only one access list can be bound her interface per direction per protocol.

38
00:03:31.060 --> 00:03:38.920
In other words an IP version 4 ACL can be bound either in or out on a per interface basis.

39
00:03:38.920 --> 00:03:45.220
You cannot have to provision for access lists inbound on the same interface that you can have one in

40
00:03:45.250 --> 00:03:46.370
and one out.

41
00:03:46.720 --> 00:03:52.600
As I've already demonstrated if you tried bind two IP access lists inbound on the same interface the

42
00:03:52.600 --> 00:03:56.370
second one will just replace the first one.

43
00:03:56.460 --> 00:03:58.640
So where should you place your access lists.

44
00:03:58.680 --> 00:04:05.380
Now the best practice from Cisco is to place stented ACLC as close to the destination as possible.

45
00:04:05.520 --> 00:04:08.900
And the reason for this is that you cannot match specific protocols.

46
00:04:09.030 --> 00:04:15.570
Now in the real world most HLL implementations will be using extended IP access lists because of the

47
00:04:15.570 --> 00:04:21.600
fact that you can filter based on both source and destination IP address as well as source and destination

48
00:04:21.600 --> 00:04:22.850
ports and so forth.

49
00:04:23.220 --> 00:04:29.000
Whereas with IP stented access control lists you can only fall to based on the source address.

50
00:04:29.040 --> 00:04:37.020
So in this example if you didn't want 10 1 on 1 to connect to the server 10 1 to 1 you could bind a

51
00:04:37.020 --> 00:04:45.030
standard IP access list either inbound on or one for outbound and or one or inbound and or two or outbound

52
00:04:45.030 --> 00:04:46.730
and arty.

53
00:04:46.850 --> 00:04:55.160
If you decided to bind an access list denying this host inbound and or one you would not only deny 10

54
00:04:55.160 --> 00:05:02.330
1 1 1 access to the server but you would also deny the host access to all other parts of the network

55
00:05:02.810 --> 00:05:09.710
because she cannot specify a destination but only a source if you bound an access list in Bonan or one

56
00:05:09.800 --> 00:05:12.220
denying host 10 1 1 1.

57
00:05:12.260 --> 00:05:18.530
You would deny that host access to all parts of the network so this wouldn't be a good place to bind

58
00:05:18.680 --> 00:05:19.830
that access list.

59
00:05:20.720 --> 00:05:28.130
If you bomb the access list outbound and or one saying denie host 10 one on one the host would be allowed

60
00:05:28.130 --> 00:05:29.930
access to this host.

61
00:05:29.990 --> 00:05:35.180
Once again 10:01 one one would be denied access to this network.

62
00:05:35.180 --> 00:05:41.480
This network as well as this network because once again you can only to deny on the source address with

63
00:05:41.480 --> 00:05:46.920
a standard IP access list not on the destination or port numbers.

64
00:05:46.970 --> 00:05:52.880
If you decided to bind the access list inbound and or to the host 10:01 one one would have access to

65
00:05:52.880 --> 00:05:59.000
this network as well as this network but it wouldn't have access to this network or this network so

66
00:05:59.000 --> 00:06:00.360
that wouldn't work either.

67
00:06:01.220 --> 00:06:07.730
And lastly if you decided to bind the access list outbound on r t that would be the optimum place to

68
00:06:07.730 --> 00:06:14.690
place the access list because you would be denying host 10 one one one access to the server that you

69
00:06:14.690 --> 00:06:19.790
wouldn't be denying that host access to any other part of the network and that you would accomplish

70
00:06:19.940 --> 00:06:21.730
what you set out to do.

71
00:06:22.220 --> 00:06:28.430
However with the extended IP access lists the recommendation is to place the access list as close to

72
00:06:28.430 --> 00:06:30.040
the source as possible.

73
00:06:30.050 --> 00:06:35.600
The reason for this is that you can match specific protocols and specific destination addresses.

74
00:06:35.660 --> 00:06:44.000
So if you burn an access list inbound and or one you could say deny this host 10 1 1 1 access to this

75
00:06:44.000 --> 00:06:52.940
host 10 1 to 1 but permit this host access to any other part of the network and thus you would accomplish

76
00:06:52.940 --> 00:06:54.340
what you set out to do.

77
00:06:54.530 --> 00:06:59.720
And this example would be a lot more efficient than the previous example because you would be denying

78
00:06:59.750 --> 00:07:06.280
traffic at this point rather than routing it all the way across the network to or to just to be dropped.

79
00:07:06.500 --> 00:07:12.770
So you extended IP access lists are a lot more flexible and a lot more efficient and thus tend to be

80
00:07:12.770 --> 00:07:14.710
used more in the real world.
