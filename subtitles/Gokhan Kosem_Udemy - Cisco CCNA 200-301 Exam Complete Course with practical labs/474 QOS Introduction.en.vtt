WEBVTT
1
00:00:00.520 --> 00:00:09.130
What is quality of service quality of service is providing a better quality to certain applications

2
00:00:09.130 --> 00:00:16.720
at the detriment of other applications in the same way that on the roads certain vehicles are poor motorized

3
00:00:16.720 --> 00:00:20.360
over others such as ambulances or buses.

4
00:00:20.380 --> 00:00:22.990
We approach rising certain traffic types.

5
00:00:22.990 --> 00:00:26.610
In other words making sure that they go to the front of the queue.

6
00:00:26.710 --> 00:00:29.740
As an example versus other traffic types.

7
00:00:29.800 --> 00:00:37.330
Certain traffic types such as voice or video are delay sensitive they can't handle a lot of delay so

8
00:00:37.330 --> 00:00:43.560
they will be poorer terrorized over traffic types that can handle delay such as FCP.

9
00:00:43.630 --> 00:00:46.320
It's also called managed unfairness.

10
00:00:46.360 --> 00:00:52.420
We are introducing unfairness into the network prioritizing certain traffic types over other traffic

11
00:00:52.420 --> 00:00:53.200
types.

12
00:00:53.380 --> 00:01:00.580
As an example a very important phone call from the CEO would be proud to rise over someone watching

13
00:01:00.580 --> 00:01:04.000
YouTube videos for the CPA exam.

14
00:01:04.000 --> 00:01:09.130
You need to be aware of three traffic types and to their traffic characteristics.

15
00:01:09.130 --> 00:01:16.090
Firstly we have data data traffic is generally boosted and greedy that's not always the case.

16
00:01:16.120 --> 00:01:21.850
But generally data applications such as FCP will grab as much bandwidth as they can.

17
00:01:22.570 --> 00:01:29.580
If you give an FCP application two megabits per second it will take two megabits per second.

18
00:01:29.680 --> 00:01:34.080
If you give it four megabits per second it's going to take four megabits per second.

19
00:01:34.270 --> 00:01:37.240
So data is Bersih and greedy.

20
00:01:37.480 --> 00:01:39.580
It's sometimes smooth and benign.

21
00:01:39.580 --> 00:01:43.360
In other words it doesn't grab all the bandwidth that you give it.

22
00:01:43.360 --> 00:01:47.520
But in a lot of cases data applications of boosting and greedy.

23
00:01:47.650 --> 00:01:49.830
They also tend to be dropping sensitive.

24
00:01:49.840 --> 00:01:54.280
In other words if a packet is dropped it doesn't matter because it's a retransmission.

25
00:01:54.820 --> 00:02:01.320
A lot of data applications use TTP which read transmits data if packets go missing.

26
00:02:01.510 --> 00:02:03.240
It's also delay insensitive.

27
00:02:03.430 --> 00:02:09.220
So as an example if packets are delayed by 500 milliseconds it's not a major problem.

28
00:02:09.280 --> 00:02:12.760
Now this really depends on the type of data sent.

29
00:02:12.820 --> 00:02:15.840
There are two major categories of data applications.

30
00:02:15.850 --> 00:02:22.240
We have interactive data applications and non interactive data applications telnet.

31
00:02:22.330 --> 00:02:28.390
As an example is interactive a large delay will degrade the user experience.

32
00:02:28.390 --> 00:02:32.980
But if you downloading a file using FCP delay isn't that important.
