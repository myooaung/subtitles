WEBVTT
1
00:00:00.910 --> 00:00:09.310
Jerry encapsulates other traffic inside a 20 point IP header and four point Jerry had a the details

2
00:00:09.310 --> 00:00:13.450
of jerry can be found in RF C 2 7 8 4.

3
00:00:13.750 --> 00:00:21.680
And as you can see here this is for generic routing encapsulation or GOP I won't bore you going through

4
00:00:21.680 --> 00:00:25.120
all the details but if you're interested have a look at the sorry.

5
00:00:25.150 --> 00:00:33.170
See but notice a payload packet which is the data sent by user pieces would be encapsulated inside a

6
00:00:33.170 --> 00:00:40.720
GOP tunnel using a delivery header as well as Jerry had a you know genius 3 topology which I'm going

7
00:00:40.720 --> 00:00:42.450
to demonstrate in a moment.

8
00:00:42.470 --> 00:00:50.660
That means that traffic sent from our one acting as P.S. 1 to our 5 acting as P.S. 2 in this topology

9
00:00:51.140 --> 00:00:53.650
is encapsulated by Rod at 2.

10
00:00:53.660 --> 00:00:59.120
As mentioned I'll show you this configuration in a moment and I'll also do y shock captures so that

11
00:00:59.120 --> 00:01:05.960
you can see the packets but in brief traffic sent by our 1 Center's normal Ethernet frames across this

12
00:01:05.960 --> 00:01:06.290
link.

13
00:01:06.410 --> 00:01:14.020
But when it hits right at to it's encapsulated in a tunnel for transmission to root a for we're going

14
00:01:14.020 --> 00:01:25.450
to build a tunnel from R2 to our 4 and our 3 in this case is going to act as an Internet router or 3

15
00:01:25.630 --> 00:01:33.160
is going to forward traffic based on the outer header or delivery header because the tunnel is established

16
00:01:33.160 --> 00:01:42.850
from R2 to our 4 or 3 only sees traffic going from our two's IP address to our phones IP address it

17
00:01:42.850 --> 00:01:49.270
rots based on the outer header or delivery header and doesn't look at the traffic that originated from

18
00:01:49.300 --> 00:01:50.350
our one.

19
00:01:50.380 --> 00:01:57.640
Be careful however Jerry doesn't encrypt so I'm gonna demonstrate how you could run wire shock on this

20
00:01:57.640 --> 00:02:05.660
link and capture the internal traffic that was sent from our 1 to our 5 so even though you encapsulating

21
00:02:05.660 --> 00:02:07.400
the traffic in a tunnel.

22
00:02:07.400 --> 00:02:10.100
Be aware that that tunnel is not encrypted.

23
00:02:10.160 --> 00:02:17.240
So someone running wire shark or a hacking tool could see the internal traffic as sent in the payload

24
00:02:17.270 --> 00:02:18.590
packet.

25
00:02:18.590 --> 00:02:26.140
So the original data is encapsulated in the jury header with a delivery header the right is on the Internet

26
00:02:26.440 --> 00:02:33.220
would write traffic based on the delivery header when traffic is received by Rider 2 which is the source

27
00:02:33.220 --> 00:02:40.190
of the jury tunnel in this case from Rada 1 It's encapsulated in jury sent across this tunnel to RADA

28
00:02:40.200 --> 00:02:47.770
for which Dean calculates the traffic and sends it to RADA five as the original packet as if this was

29
00:02:47.770 --> 00:02:53.590
a point to point link between write tune rider for this example I've only got a single rider being the

30
00:02:53.590 --> 00:03:01.010
internet that remember you could have many many devices here forming the Internet

31
00:03:05.310 --> 00:03:13.110
and the idea is that the tunnel is formed from one tunnel and point to another across many devices the

32
00:03:13.110 --> 00:03:18.300
devices on the Internet right based on the outer header route it too as an example when receiving traffic

33
00:03:18.300 --> 00:03:25.410
from road one will encapsulate those packets within jury headers send it to Rota for route A Fool will

34
00:03:25.410 --> 00:03:30.750
remove the headers and forward the packet across two rows of five as if there was a point to point the

35
00:03:30.750 --> 00:03:36.390
link between write 2 and write off for the same thing will happen in the reverse write a 5 or send a

36
00:03:36.390 --> 00:03:42.480
standard Ethan it frame across this link to write a for write a for will encapsulate the packet send

37
00:03:42.480 --> 00:03:48.540
it through the tunnel to write it two which will then Dean calculate the packet and forward the packet

38
00:03:48.570 --> 00:03:55.120
onto rider 1 as if there was a point to point serial link between Rider 2 and write a 4.

39
00:03:55.230 --> 00:04:02.280
As mentioned I'll demonstrate the setup of this topology and we'll assume that this picture is Jerry

40
00:04:02.400 --> 00:04:04.790
tunnel from rider to to write a 4.

41
00:04:04.980 --> 00:04:12.210
It's simply a session that's established using the jury protocol from Rider 2 to write a full but logically

42
00:04:12.210 --> 00:04:21.440
it's as if you've got this extra serial interface on the riders which in our example will configure

43
00:04:21.530 --> 00:04:26.040
as tunnel 0 on both riders.
