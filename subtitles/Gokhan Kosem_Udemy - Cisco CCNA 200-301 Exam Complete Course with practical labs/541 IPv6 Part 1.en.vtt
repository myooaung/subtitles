WEBVTT
1
00:00:09.160 --> 00:00:10.320
Welcome back.

2
00:00:10.360 --> 00:00:12.650
My name is David Bumble s.c.i.

3
00:00:12.700 --> 00:00:14.500
Eleven thousand twenty three.

4
00:00:14.500 --> 00:00:17.340
And in this section we're going look at IP version 6.

5
00:00:17.430 --> 00:00:22.450
We have been talking about the transition to Activision six for many years in the networking industry

6
00:00:22.860 --> 00:00:25.590
that it looks like we finally run out of time.

7
00:00:25.660 --> 00:00:34.300
It looks like this is the final year 2011 of being able to delay the transition to IPV six in production

8
00:00:34.300 --> 00:00:36.190
in real world environments.

9
00:00:36.190 --> 00:00:43.120
It's expected that in 2011 we will finally run out of IP version 4 addresses and be forced to move to

10
00:00:43.120 --> 00:00:44.740
IP version 6.

11
00:00:44.800 --> 00:00:52.310
So it looks like we can no longer procrastinate the conversion of our networks to IP version 6 but start

12
00:00:52.310 --> 00:00:55.170
with this news item from the BBC.

13
00:00:55.230 --> 00:00:58.130
Now it is dated 28 of January 2011.

14
00:00:58.350 --> 00:01:04.470
Were they talking about the last big blocks of the Nates dwindling stock of addresses about to be handed

15
00:01:04.470 --> 00:01:05.390
out.

16
00:01:05.430 --> 00:01:13.890
They are talking about total exhaustion in September 2011 however notice what the Internet Corporation

17
00:01:13.890 --> 00:01:22.530
for Assigned Names and Numbers is stating on the Web site last IPV for dresses are allocated today.

18
00:01:22.720 --> 00:01:27.790
And I mean you can read more about it on the web site but notice they say that today is a historic milestone

19
00:01:27.790 --> 00:01:32.320
for the Internet with the last addresses have been allocated.

20
00:01:32.320 --> 00:01:38.140
So after years of rapid Internet expansion the pool of available unallocated addresses for IP version

21
00:01:38.140 --> 00:01:40.710
4 is completely depleted.

22
00:01:41.170 --> 00:01:49.090
Notice the news release February 3 2011 available pool of unallocated provision for Internet addresses

23
00:01:49.090 --> 00:01:50.890
is now completely emptied.

24
00:01:51.940 --> 00:01:56.800
They talk about a critical point in history was reached today with the allocation of the last remaining

25
00:01:56.830 --> 00:02:00.220
IP version of four addresses from a central pool.

26
00:02:00.700 --> 00:02:04.820
So this is a major turning point in the ongoing development of the Internet.

27
00:02:05.230 --> 00:02:08.790
So notice here two blocks of the dwindling provision for addresses.

28
00:02:08.830 --> 00:02:15.220
About 33 million of them were allocated earlier this week to the Asia Pacific region.

29
00:02:15.220 --> 00:02:20.800
When that happened it meant the pool of IPV for dresser's had been depleted to a point where global

30
00:02:20.800 --> 00:02:26.830
policy was triggered to immediately allocate the remaining small pool of addresses equally among the

31
00:02:26.830 --> 00:02:29.970
five global regional Internet registries.

32
00:02:30.160 --> 00:02:38.970
This has now taken place so they are located in a ceremony in Miami so the procrastination for the convergence

33
00:02:38.970 --> 00:02:41.450
to IP version 6 is now finally over.

34
00:02:41.670 --> 00:02:47.520
We have to make sure we know how IP version 6 works and functions because we're going to come across

35
00:02:47.520 --> 00:02:50.880
it a lot more in the coming months and years.

36
00:02:51.270 --> 00:02:54.840
So what we're going to cover is firstly looking at the need for IP version 6.

37
00:02:54.900 --> 00:02:56.820
And I think I've covered that already.

38
00:02:56.850 --> 00:03:02.520
We have run out of IP version 4 addresses and we are now forced to convert or migrate to AGI version

39
00:03:02.520 --> 00:03:03.440
6.

40
00:03:03.590 --> 00:03:10.150
Mean explain the format of an IP version 6 address an IP version 6 addresses 128 bits in length.

41
00:03:10.320 --> 00:03:16.090
So a lot larger than the city to that IP version for address that we used to working with.

42
00:03:16.230 --> 00:03:19.650
We can look at the methods of assigning an IP version 6 address.

43
00:03:19.660 --> 00:03:21.290
We can look at routing protocols.

44
00:03:21.430 --> 00:03:23.420
We're going to look at implementation strategies.

45
00:03:23.560 --> 00:03:26.950
And I'd like to show you in the configuration.

46
00:03:26.950 --> 00:03:32.430
So in other words I'll get a little network running using IP version 6 with G.

47
00:03:32.530 --> 00:03:37.590
The thing that seems to escape people most is the format of an IP version 6 address.

48
00:03:37.600 --> 00:03:43.450
The great thing about Activision 6 you can take a lot of your knowledge of IP version 4 and just apply

49
00:03:43.450 --> 00:03:51.790
it in an IP version 6 environment routing protocols like OSPF rip GOP and so forth are available in

50
00:03:51.790 --> 00:03:53.330
IP version 6.

51
00:03:53.330 --> 00:03:58.900
The version in the syntax text might be slightly different but a lot of the concepts remain the same.

52
00:03:58.900 --> 00:04:03.430
We still have TCAP and UDP and a lot of the other protocols.

53
00:04:03.520 --> 00:04:10.330
So you don't have to learn everything from scratch which is a great benefit in Activision for an address

54
00:04:10.330 --> 00:04:14.540
consists of four tests which equals 32 bits in binary.

55
00:04:14.560 --> 00:04:20.860
So this is what an IP version for address would look like in binary or in Dr decimal notation.

56
00:04:20.860 --> 00:04:27.040
This is the number of IP addresses available in IP version for now an IP version 6.

57
00:04:27.090 --> 00:04:32.230
The address is 16 octets in length which equates to 128 bits.

58
00:04:32.230 --> 00:04:34.870
This is an IP version 6 address written in binary.

59
00:04:34.900 --> 00:04:41.040
And as you can see it's a lot lot longer IP version 6 addresses are typically written in hexadecimal.

60
00:04:41.290 --> 00:04:46.300
So this is the hex representation of this binary IPV 6 address.

61
00:04:46.360 --> 00:04:51.510
They are 3.4 times ten to the thirty eight IP addresses available.

62
00:04:51.520 --> 00:04:54.520
The pool is a much much larger.

63
00:04:54.580 --> 00:04:57.510
The industry is learning from the mistakes of the past.

64
00:04:57.610 --> 00:05:03.820
And in this case they're making the pool very large so that we don't run into the same issue in a few

65
00:05:03.820 --> 00:05:07.420
years time where we run out of IP version 6 addresses.

66
00:05:07.450 --> 00:05:13.910
It's a dangerous thing to say this but this should be enough addresses for future Internet growth requirements.

67
00:05:14.080 --> 00:05:20.890
But just to put this in perspective there are enough IP version 6 addresses that we could allocate the

68
00:05:20.890 --> 00:05:27.880
entire equivalent IPV for Internet address space to every individual on Earth.

69
00:05:28.180 --> 00:05:31.380
That's how big this address space is.

70
00:05:31.610 --> 00:05:40.490
When comparing the time model of IP version 4 to IP version 6 you'll notice that all the layers except

71
00:05:40.580 --> 00:05:46.300
for Layer 3 have remained the same or only had slight modifications.

72
00:05:46.430 --> 00:05:53.180
So the application presentation session and transport will function in IP version 6 in the same way

73
00:05:53.180 --> 00:05:58.350
as they function in IP version for the network layer is where the changes have been made.

74
00:05:58.400 --> 00:06:05.150
For instance an IP version of fortress consists of only 32 bits but an IPV 6 address consists of 128

75
00:06:05.150 --> 00:06:05.980
bits.

76
00:06:06.110 --> 00:06:10.700
The data link layer and physical layer Orser remain the same.

77
00:06:10.700 --> 00:06:16.250
So from a networking point of view this is great news because you can take all your knowledge and experience

78
00:06:16.340 --> 00:06:21.030
of IP version 4 protocols and apply it in an IP version 6 environment.

79
00:06:21.290 --> 00:06:27.620
It's not like in other rodded protocols we have to learn an entire new protocol stack protocols like

80
00:06:27.620 --> 00:06:35.910
TZP and UDP still remain at Layer 4 and reside on top of IPV 6 just like they do an IP version 4.

81
00:06:35.910 --> 00:06:39.060
So let's look at the IP V-6 address format in more detail.

82
00:06:39.060 --> 00:06:46.240
It consists of eight Xs where X is 16 but takes it a small field separated by colons.

83
00:06:46.380 --> 00:06:48.630
So it would look something like this.

84
00:06:48.660 --> 00:06:52.290
Please note that an IP V-6 address is case insensitive.

85
00:06:52.500 --> 00:06:58.910
So you could write F in lowercase and be in uppercase and it wouldn't make any difference.

86
00:06:58.950 --> 00:07:00.960
It's not case sensitive.

87
00:07:00.960 --> 00:07:07.710
There are some rules that you need to remember leading zeros or optional within the 16 but takes a decimal

88
00:07:07.710 --> 00:07:15.550
field and successive fields of zeros can be represented as Colon colon but only once address.

89
00:07:15.650 --> 00:07:23.610
So as an example you could take this address and rewrite it as the following notice these two octets

90
00:07:23.880 --> 00:07:27.790
could be written as a Zira and notice these four states here.

91
00:07:28.020 --> 00:07:33.130
So the eight zeros in hexadecimal can be represented as Colon colon.

92
00:07:33.450 --> 00:07:39.870
However you cannot put colon colon twice with in an IP address because the system would have no way

93
00:07:39.870 --> 00:07:44.240
of working out how many zeros are represented by these colons.

94
00:07:44.250 --> 00:07:47.540
Is this four zeros and those eight zeros.

95
00:07:47.550 --> 00:07:50.750
Or is this eight zeros and there's four zeros.

96
00:07:50.970 --> 00:07:55.470
So you can only put colon colon once in a mid-race OK.

97
00:07:55.480 --> 00:07:57.040
Here's another example.

98
00:07:57.190 --> 00:08:00.370
We have an IP version 6 address written as follows.

99
00:08:00.640 --> 00:08:04.840
Correct representations of this address would be as follows.

100
00:08:04.880 --> 00:08:07.150
Two thousand and one remains the same.

101
00:08:07.150 --> 00:08:09.990
This leadings zero can be removed.

102
00:08:10.060 --> 00:08:19.120
So we have one two three these four zeros and these four zeros can be condensed down to only colon colon.

103
00:08:19.180 --> 00:08:22.800
So those eight zeros can be compressed down to colon colon.

104
00:08:22.800 --> 00:08:25.360
The 4 x for remain the same.

105
00:08:25.360 --> 00:08:29.240
Now you also have four zeros followed by four zeros.

106
00:08:29.290 --> 00:08:35.710
However you can only represent a string of zeros by colon colon once in an address.

107
00:08:35.890 --> 00:08:37.910
And you've already done that.

108
00:08:37.930 --> 00:08:44.350
So what you can do is remove the leading zeros and when you remove leading zeros you have to have one

109
00:08:44.350 --> 00:08:47.110
value that remains between the colon.

110
00:08:47.320 --> 00:08:50.080
So notice here we've removed three leading zeros.

111
00:08:50.170 --> 00:08:52.570
And here we've removed three leading zeros.

112
00:08:52.900 --> 00:08:59.380
Yeah we've removed the leading zero in front of ABC so that 0 is also being removed.

113
00:08:59.380 --> 00:09:02.370
So this is a correct representation of the address.

114
00:09:02.460 --> 00:09:09.440
Or you could do something similar way these eight zeros are represented by Colon's era column 0.

115
00:09:09.700 --> 00:09:13.650
But these eight zeros are represented by colon colon.

116
00:09:13.660 --> 00:09:19.440
Remember you can only have two colons written in this format once in an address.

117
00:09:19.480 --> 00:09:23.690
So this would be an incorrect format for an IP V-6 address.

118
00:09:23.980 --> 00:09:30.580
A rat will not except you typing this address on an interface as it cannot work out how many zeroes

119
00:09:30.640 --> 00:09:34.490
are between these two columns and how many zeros are between these two colons.

120
00:09:34.630 --> 00:09:38.760
You can only write code on code on once in an address.

121
00:09:38.790 --> 00:09:42.340
So here are some more examples in this IP V-6 address we have.

122
00:09:42.350 --> 00:09:52.000
If it's 0 1 followed by a bunch of zeros ending in a 1 so we could represent that address by us or by

123
00:09:52.000 --> 00:09:54.310
this or by this.

124
00:09:54.310 --> 00:09:58.030
And I'm sure you can think of other variations of this address.

125
00:09:58.180 --> 00:10:01.080
Please note this is the same address.

126
00:10:01.090 --> 00:10:07.320
It's like saying tomato juice is tomato or napkin versus serviette.

127
00:10:07.450 --> 00:10:12.070
It's the same thing just represented in different formats.

128
00:10:12.070 --> 00:10:13.580
Here's another example.

129
00:10:13.870 --> 00:10:19.690
We've got four ones followed by 2:59 for all about eight zeros followed by one two three four followed

130
00:10:19.690 --> 00:10:22.630
by eight zeros followed by four ones.

131
00:10:22.630 --> 00:10:25.760
These four zeros can be condensed down to zero.

132
00:10:26.080 --> 00:10:28.780
These four zeros can be condensed down to zero.

133
00:10:29.170 --> 00:10:35.770
And these eight zeros can be condensed down to Colon Cullen or you can say those eight zeros are represented

134
00:10:35.770 --> 00:10:40.530
by colon colon and these four zeros by a zero.

135
00:10:40.930 --> 00:10:43.810
And those four zeros by zero.

136
00:10:43.810 --> 00:10:49.670
Once again it's the same address different representations whichever you prefer.

137
00:10:50.110 --> 00:10:55.680
Once again this address a bunch of zeros followed by one could be represented as Colon colon one.

138
00:10:56.020 --> 00:11:02.380
This is the loopback address of an interface and a string of zeros could be represented as Colon colon.

139
00:11:02.380 --> 00:11:10.180
This is an example of an unassigned address cómo on a Windows machine occupying 127 0 0 1 the loopback

140
00:11:10.750 --> 00:11:12.870
in IP version 4.

141
00:11:13.100 --> 00:11:19.420
By the same token I can think colon colon one which is the loopback in IP version 6.

142
00:11:19.940 --> 00:11:23.370
If you remember the design is an IP version 4.

143
00:11:23.570 --> 00:11:30.080
Unfortunately chose a class A address for the loopback address and thus the IP version for address range

144
00:11:30.080 --> 00:11:36.590
lost 16 million host addresses because the loopback is across a address in PV 6.

145
00:11:36.620 --> 00:11:41.120
The design is of try to avoid the same mistakes that were made in the past.

146
00:11:41.150 --> 00:11:44.710
So notice the loopback address is just called on call on one.

147
00:11:45.050 --> 00:11:46.370
But I could also taking

148
00:11:54.200 --> 00:11:57.230
which is the same address the loopback.

149
00:11:57.340 --> 00:11:58.780
All I could do the following

150
00:12:05.030 --> 00:12:06.230
or something like this.

151
00:12:12.070 --> 00:12:18.730
Notice it's all the same address my PC automatically converts it into call on column 1 which I think

152
00:12:18.730 --> 00:12:24.440
is the easiest representation of this address now in the real world this is going to be a lot of fun.

153
00:12:24.730 --> 00:12:30.550
It's difficult enough trying to get users to top HTP cold encored slash forward slash and IP version

154
00:12:30.550 --> 00:12:32.970
4 address into a web browser.

155
00:12:33.270 --> 00:12:38.440
Can you imagine trying to get them to do the following in IP version 6 in a web browser you have to

156
00:12:38.440 --> 00:12:43.490
enclose the address within square brackets as follows.

157
00:12:43.490 --> 00:12:47.740
So in other words you would type HTP colon slash slash.

158
00:12:47.740 --> 00:12:51.040
The IP version 6 address colon.

159
00:12:51.040 --> 00:12:54.020
And then for instance the port number to ADHD.

160
00:12:54.160 --> 00:12:58.280
And then for instance a file name let's say indexed at age Chmela.

161
00:12:58.600 --> 00:13:01.290
This is obviously going to be very difficult for users.

162
00:13:01.420 --> 00:13:06.010
So I suppose you would use this mostly for diagnostic purposes but I can see that we're going to have

163
00:13:06.010 --> 00:13:08.140
to ask users to do this at some point.

164
00:13:08.320 --> 00:13:09.900
So good luck with that.

165
00:13:09.910 --> 00:13:14.400
So it's recommended to use fully qualified domain names rather than IP addresses.

166
00:13:14.440 --> 00:13:19.840
So rather than typing something like this you would say Cisco dot com and then rely on DNS to do the

167
00:13:19.840 --> 00:13:21.300
conversion.

168
00:13:21.340 --> 00:13:29.350
Now to your IP version 6 connectivity you can go to this Web site HTP Portes flashforwards Lesch test

169
00:13:29.560 --> 00:13:37.220
IPV six dot com and this will run a series of tests to check your connectivity to IP version 6 as you

170
00:13:37.220 --> 00:13:37.600
can see.

171
00:13:37.600 --> 00:13:45.610
I'm going to have a problem where I'm currently residing is also information about VB 6 day which depending

172
00:13:45.610 --> 00:13:48.830
on when you're viewing this may have taken place already.

173
00:13:48.920 --> 00:13:55.150
It's scheduled for eight of June 2011 when there's going to be a global scale test flight of IP version

174
00:13:55.150 --> 00:13:56.140
6.

175
00:13:56.210 --> 00:14:02.330
So major web companies and other industry players will enable IP version 6 on their main Web sites for

176
00:14:02.330 --> 00:14:09.540
24 hours of the different types of addresses in occupations six some of which you'll recognize already.

177
00:14:09.630 --> 00:14:14.730
The first one is a unique cost address which has an address allocated to single interface for example

178
00:14:15.250 --> 00:14:21.430
and several types of unicast addresses and I'll go through all of these in more detail in upcoming slides.

179
00:14:21.530 --> 00:14:24.820
But first we have a global unique cost race.

180
00:14:24.840 --> 00:14:28.670
There is no need for net in IP version 6.

181
00:14:28.770 --> 00:14:30.720
That comes as a big shock to a lot of people.

182
00:14:30.780 --> 00:14:36.900
Remember that was introduced to try and conserve ATI version for addresses yet we have plenty of addresses

183
00:14:36.900 --> 00:14:41.760
so there's no need for net a lot of people say that that's a security vulnerability.

184
00:14:41.940 --> 00:14:47.470
But remember that net will network address translation was not developed for security originally.

185
00:14:47.550 --> 00:14:53.250
That's a byproduct of net that we have globally unique unique cost addresses.

186
00:14:53.250 --> 00:14:59.400
The address on your interface on your PC at home will be unique globally.

187
00:14:59.700 --> 00:15:06.240
There is no need for your IP address to be netted to an external or public address or a public if you

188
00:15:06.240 --> 00:15:10.480
like global Unicode addresses available for all devices in the world.

189
00:15:10.630 --> 00:15:14.460
There are also reserved unicast of racism we won't worry too much about them.

190
00:15:14.460 --> 00:15:20.520
We also have link local unicast addresses and I only refer to a particular physical link.

191
00:15:20.520 --> 00:15:26.790
Raptor's do not forward link local addresses linked local addresses will allow two hosts to communicate

192
00:15:26.790 --> 00:15:30.460
with each other without IP addresses being assigned to those devices.

193
00:15:30.480 --> 00:15:35.880
So two users could connect that PCs back to back using for instance a crossover cable and they'll have

194
00:15:35.880 --> 00:15:43.440
immediate optic connectivity without the need for manual configuration of addresses or for the HGP server.

195
00:15:43.710 --> 00:15:49.620
Many ITV six routing protocols also use Linked local addresses to communicate with each other link local

196
00:15:49.620 --> 00:15:55.260
addresses are also used for Link communication such as automatic address configuration neighbor discovery

197
00:15:55.290 --> 00:15:57.000
and rodded discovery.

198
00:15:57.000 --> 00:15:59.890
I'll show you a link local address looks like in a moment.

199
00:15:59.940 --> 00:16:06.670
We also have site local unicast addresses which are similar in concept to RAFC 19:18 private addresses.

200
00:16:06.920 --> 00:16:13.620
These are addresses assigned to an entire site within an organization so site local address would only

201
00:16:13.620 --> 00:16:20.100
be valid within the site makework of an organization so that local addresses were part of the original

202
00:16:20.100 --> 00:16:23.350
addressing architecture from 1995.

203
00:16:23.650 --> 00:16:31.160
Please note that site local unicast addresses have been deprecated since September 2004.

204
00:16:31.410 --> 00:16:40.380
And you can read more about this in RAFC 3 8 7 9 where they talk about deprecating site local addresses.

205
00:16:40.380 --> 00:16:46.440
It's important to note that the development of IP B-6 has been ongoing for a number of years and certain

206
00:16:46.440 --> 00:16:51.510
terms that you come across such a site local addresses will have changed or been updated.

207
00:16:51.580 --> 00:16:53.320
In this case deprecated.

208
00:16:53.520 --> 00:16:59.230
So they no longer use because of the confusion and ambiguity of the term site.

209
00:16:59.520 --> 00:17:03.760
They have not been replaced with what are called unique local addresses.

210
00:17:03.780 --> 00:17:08.670
There are also some special purpose unicast addresses such as unspecified whichever it is shown you

211
00:17:08.670 --> 00:17:15.240
it's just colon colon and is used to refer to the host itself and is used when a device does not know

212
00:17:15.240 --> 00:17:17.040
its own IP address.

213
00:17:17.040 --> 00:17:22.590
This will be typically used in the source field of a datagram that is sent by a device that seeks to

214
00:17:22.590 --> 00:17:24.410
have its IP address configured.

215
00:17:24.780 --> 00:17:27.330
So colon colon means unspecified.

216
00:17:27.330 --> 00:17:29.050
I've already demonstrated loopback.

217
00:17:29.070 --> 00:17:35.060
That would be colon colon one which is very similar to 1:27 001 for example.

218
00:17:35.340 --> 00:17:39.660
Now IP version for compatible addresses have also been deprecated.

219
00:17:39.660 --> 00:17:45.420
It would allow for the representation of an IP version for address with an IP version 6.

220
00:17:45.420 --> 00:17:52.200
The most significant 96 bits of the address would be set to zero while the last 32 bits are the IP version

221
00:17:52.200 --> 00:17:54.100
for address that is represented.

222
00:17:54.370 --> 00:17:57.190
This was deprecated in 2006.

223
00:17:57.210 --> 00:18:02.440
The reason I still mention these addresses is that you may come across them an IP version 6 or literature.

224
00:18:02.700 --> 00:18:08.490
Just be aware like a lot of things and life changes have taken place and certain technologies and addresses

225
00:18:08.490 --> 00:18:10.890
have been cropped or deprecated.

226
00:18:10.890 --> 00:18:16.000
So be aware the first top addressing not Division 6 is unicast.

227
00:18:16.120 --> 00:18:20.940
The second is multicast where one host speech to many hosts.

228
00:18:21.160 --> 00:18:26.350
And this is very similar to multicasting and provision for because it enables more efficient use of

229
00:18:26.350 --> 00:18:29.890
the network but uses a larger address range.

230
00:18:29.890 --> 00:18:36.190
The advantage of multicasting is that a single stream from a single server can go to many many devices

231
00:18:36.630 --> 00:18:42.430
so a hundred devices could be receiving the same video stream of one megabits per second rather than

232
00:18:42.430 --> 00:18:48.540
having a hundred one megabits per second streams and thus using up a hundred megabits per second.

233
00:18:48.640 --> 00:18:52.150
If the cost was used the third type is any cost.

234
00:18:52.150 --> 00:18:55.750
Now this does exist in IP version 4 as well.

235
00:18:55.750 --> 00:19:02.650
This is known as one to nearest Unix addresses are used but the same address is configured on two or

236
00:19:02.650 --> 00:19:04.210
more devices.

237
00:19:04.210 --> 00:19:09.280
The idea here is that routers will decide on the closest device to reach the destination.

238
00:19:09.280 --> 00:19:14.920
If you are going to Amazon Dot com for example you wouldn't care if that server was hosted in California

239
00:19:15.010 --> 00:19:16.310
or in New York.

240
00:19:16.630 --> 00:19:20.020
You just want to purchase a book for example from Amazon.

241
00:19:20.200 --> 00:19:26.560
If you on the West Coast of the US you would be closer to a server in California than you would be to

242
00:19:26.560 --> 00:19:27.990
a server in New York.

243
00:19:28.180 --> 00:19:34.330
So at any cost to servers one in New York one in San Francisco for example are configured with the same

244
00:19:34.360 --> 00:19:35.460
IP address.

245
00:19:35.560 --> 00:19:41.320
If you are on the West Coast of the US and you are going to Amazon Dot com for example you'd be routed

246
00:19:41.500 --> 00:19:47.530
to the server in San Francisco because it's physically closer to you than the server in New York.

247
00:19:47.530 --> 00:19:53.130
By the same token if you're on the east coast you'd be routed to the server in New York.

248
00:19:53.170 --> 00:19:56.090
It allows for load balancing and content delivery services.

249
00:19:56.350 --> 00:19:59.190
As I've mentioned it already exists an IP version 4.

250
00:19:59.440 --> 00:20:02.560
So they are three address types Naki version 6.

251
00:20:02.650 --> 00:20:08.550
So we have broad costs which are so common in IP version for broadcast addresses no longer exist.

252
00:20:08.870 --> 00:20:16.270
Broadcasts can cause lots of issues on networks and broadcasting has been replaced with multicasting

253
00:20:16.270 --> 00:20:18.260
in an IP version 6 environment.

254
00:20:18.490 --> 00:20:23.430
We no longer send broadcasts if we want to contact multiple devices.

255
00:20:23.620 --> 00:20:31.280
We send a multicast instead of a broadcast as mentioned an IP version 6 address is 120 a.

256
00:20:31.310 --> 00:20:37.850
But since lenth it consists of two main portions we have the network portion when they took prefix and

257
00:20:37.850 --> 00:20:41.420
the interface identifier or host portion.

258
00:20:41.420 --> 00:20:44.290
Each of these is 64 bits in length.

259
00:20:44.300 --> 00:20:50.600
Now it may come as a surprise to you but there's no submitting an IP version 6 like an IP version 4.

260
00:20:50.870 --> 00:20:56.590
We're not going to subnet is say a slash city or slashed 28 or slash 16.

261
00:20:56.720 --> 00:21:02.990
We're not going to have classes of addresses like class A B and C and subnets of those like taking a

262
00:21:02.990 --> 00:21:06.750
class C address and submitting it to slash 28 or slash 30.

263
00:21:07.010 --> 00:21:09.000
That no longer exists.

264
00:21:09.020 --> 00:21:17.180
The following statement is important to understand every interface has a mosque slash 64 in your enterprise

265
00:21:17.180 --> 00:21:18.290
environments.

266
00:21:18.290 --> 00:21:23.850
Every interface when using a Unicode address has a mosque of 64.

267
00:21:24.220 --> 00:21:29.250
I'll say that again all interfaces have a subnet mask of slash 64.

268
00:21:29.540 --> 00:21:32.960
In other words the network prefix is always slash 64.

269
00:21:33.170 --> 00:21:38.010
In our enterprise environments the host portion is always 64 bits.

270
00:21:38.060 --> 00:21:43.070
So this actually makes our lives a lot easier because we don't have to do crazy subsetting in IP version

271
00:21:43.070 --> 00:21:44.720
6 in a similar way.

272
00:21:44.730 --> 00:21:46.590
We had to do an IP version 4.

273
00:21:47.030 --> 00:21:49.540
So there's no subsetting like an IP version 4.

274
00:21:49.700 --> 00:21:52.890
There's also no net like an IP version 4.

275
00:21:53.180 --> 00:22:01.230
NET is no longer required addresses and organizations use what are called aggregated all global unicast

276
00:22:01.240 --> 00:22:02.350
addresses.

277
00:22:02.350 --> 00:22:03.900
Which is quite a mouthful.

278
00:22:03.940 --> 00:22:09.460
I'll just refer to these as global unicast addresses but the full name once again is aggregated all

279
00:22:09.580 --> 00:22:11.930
global unicast addresses.

280
00:22:11.980 --> 00:22:15.860
In other words addresses within your organization of globally unique.

281
00:22:16.030 --> 00:22:22.180
There is no need to net those addresses when going onto the Internet because they all like public IP

282
00:22:22.180 --> 00:22:27.900
addresses within organizations they are globally unique there are also a unique cost addresses.

283
00:22:28.180 --> 00:22:34.480
The term aggregate A-ball means that they can be aggregated or summarized in the global Internet.

284
00:22:34.480 --> 00:22:36.570
The design is of IP version 6.

285
00:22:36.640 --> 00:22:43.270
I've specifically looked at aggregation of addresses to reduce writing table sizes within the global

286
00:22:43.270 --> 00:22:47.090
Internet and I'll show you an example of that in a moment.

287
00:22:47.140 --> 00:22:51.570
Each Malenko interface will have a slash 64 subnet mask.

288
00:22:51.850 --> 00:22:54.390
Once again this makes life a lot easier.

289
00:22:54.400 --> 00:23:03.130
The interface identifier or ID which is 64 bits in length can use a modified EU I-64 format address

290
00:23:03.340 --> 00:23:05.550
which I'll explain in a moment.

291
00:23:05.770 --> 00:23:08.780
But it's essentially a modified mac address.

292
00:23:08.980 --> 00:23:15.220
For those of you who've been in networking for a long time you may remember how IPX to use the Mac address

293
00:23:15.760 --> 00:23:19.090
and that same thinking can be used in IP version 6.

294
00:23:19.390 --> 00:23:25.590
So the EU address allows us to get the interface ID portion of an IP version 6 address.

295
00:23:25.660 --> 00:23:32.080
This can be used in multiple IP version 6 addresses including link local site local as well as the stateless

296
00:23:32.080 --> 00:23:34.590
order configuration mechanism.

297
00:23:34.600 --> 00:23:35.740
Don't worry too much about those.

298
00:23:35.740 --> 00:23:42.280
Now we'll be talking about them in a moment but please note and address can also be used in an aggregate

299
00:23:42.280 --> 00:23:44.520
of all global unicast address.

300
00:23:44.560 --> 00:23:48.970
It doesn't have to be but you can use it if you so desire.

301
00:23:49.210 --> 00:23:51.910
And you just said that with a command on a Cisco router.

302
00:23:52.240 --> 00:23:57.930
So what happens is the Rotto other device takes its ethernet MAC address which is 48 bits in length

303
00:23:58.450 --> 00:24:04.600
and he has an example of an Ethernet MAC address and the address is split in half between the vendor

304
00:24:04.600 --> 00:24:07.770
portion and the unique portion of the MAC address.

305
00:24:07.840 --> 00:24:16.180
If as if he is inserted in the middle which results in a 64 bit address remember all of these values

306
00:24:16.180 --> 00:24:17.640
on hexadecimal.

307
00:24:17.770 --> 00:24:21.900
So this represents 64 bits.

308
00:24:21.910 --> 00:24:29.290
So again please note that this address is written in hexadecimal because IP version 6 addresses are

309
00:24:29.290 --> 00:24:31.970
written in hexadecimal.

310
00:24:32.000 --> 00:24:36.110
These two hexadecimal values equate to 8 binary bits.
