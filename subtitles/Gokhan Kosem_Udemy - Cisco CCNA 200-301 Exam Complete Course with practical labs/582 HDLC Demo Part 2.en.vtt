WEBVTT
1
00:00:01.000 --> 00:00:06.720
I'll sort of want shock capture again on the surreal link

2
00:00:10.840 --> 00:00:16.480
in the output we can see a hollow packet sent by writer 1.

3
00:00:16.570 --> 00:00:22.130
So this is an no SPF packet sent to the multicast address for 0 SPF.

4
00:00:22.450 --> 00:00:27.410
We can see that it showing as a unit cost packet in each GLC.

5
00:00:27.670 --> 00:00:36.620
The protocol type is IP version for we can see the source IP address destination ip address shown here

6
00:00:36.620 --> 00:00:42.040
once again the protocol type is 0 SPF.

7
00:00:42.100 --> 00:00:52.170
So it's protocol 89 and the protocol used is always P.F. and we can see that it's a hollow packet with

8
00:00:52.170 --> 00:00:56.130
this network mask and it's from this Rhonda

9
00:00:58.910 --> 00:01:02.720
so looking at the HDD see messages.

10
00:01:02.750 --> 00:01:09.860
Notice it's IP version 4 as the protocol here is CTP.

11
00:01:09.860 --> 00:01:11.780
Different type.

12
00:01:11.780 --> 00:01:13.150
Here is slop.

13
00:01:13.160 --> 00:01:15.350
A different type.

14
00:01:15.680 --> 00:01:28.280
And once again if we ping using IP version 6 his IP version 6 a different HDL type what I'll do now

15
00:01:28.280 --> 00:01:35.080
is purposely change the encapsulation on one side to something else.

16
00:01:35.380 --> 00:01:41.230
So the different encapsulation is but I'll set it to BP and what we should notice is that the interface

17
00:01:41.230 --> 00:01:42.820
goes down.

18
00:01:42.820 --> 00:01:48.820
We can see that oh SPF is saying that the relationship has gone down and that the line protocol has

19
00:01:48.820 --> 00:01:50.620
gone down.

20
00:01:50.620 --> 00:01:53.710
So show interface serial to slash zero

21
00:01:57.600 --> 00:02:04.770
in the output we can see that the physical interfaces up but the line protocol is down encapsulation

22
00:02:04.770 --> 00:02:06.840
is BPP.

23
00:02:06.840 --> 00:02:09.520
This means that we don't have a layer 1 problem.

24
00:02:09.630 --> 00:02:15.660
The interface is physically connected but this is showing us that we have a layer 2 problem which in

25
00:02:15.660 --> 00:02:25.070
our case is a encapsulation issue on the side of SPF has gone down show interface serial to slash zero

26
00:02:28.640 --> 00:02:29.930
so there's the command.

27
00:02:29.930 --> 00:02:34.820
The interface is up physically but the line protocol is down.

28
00:02:34.850 --> 00:02:43.070
The reason why is the encapsulation on the side is HDL C but the encapsulation on the side is PDP.

29
00:02:43.310 --> 00:02:49.180
So for the interface to be up up you need to ensure that the encapsulation on both sides is the same

30
00:02:50.690 --> 00:03:00.480
so once again on the side I'll change it to HDL C and hopefully what should happen is the interface

31
00:03:00.480 --> 00:03:02.290
comes up after a while.

32
00:03:02.490 --> 00:03:04.120
Now that's based on keep the lives.

33
00:03:04.170 --> 00:03:12.800
So you may have to wait a while keep the lights on these when interfaces are set to 10 seconds so it

34
00:03:12.800 --> 00:03:21.050
can take a few seconds for the link to either go down or to come up don't know shut an interface and

35
00:03:21.050 --> 00:03:25.460
expect it to immediately be working or immediately to go down.

36
00:03:25.640 --> 00:03:31.850
Wait a few seconds so that keep lives can traverse the link to ensure that things are working properly

37
00:03:32.570 --> 00:03:34.790
so the line protocol is up down at that time.

38
00:03:35.780 --> 00:03:44.790
And notice here it went up so always wait a few seconds so that keeper lives can succeed from one side

39
00:03:44.790 --> 00:03:46.310
to the other.

40
00:03:46.380 --> 00:03:54.270
The encapsulation is now HDL C on the side we can see that the interface came up with peer relationships

41
00:03:54.270 --> 00:03:57.490
were formed and if we look at the interface

42
00:04:00.320 --> 00:04:08.980
we can see that the interfaces up encapsulation as HTC noticed that keep alive you know why shock capture

43
00:04:10.280 --> 00:04:18.320
scrolling up can see a lot of negotiation taking place between 0 SPF neighbors

44
00:04:21.810 --> 00:04:28.920
what I'd like to point out here is notice that keep lives so there is a keep alive scent from one side

45
00:04:28.920 --> 00:04:30.180
to the other.

46
00:04:30.450 --> 00:04:35.610
And notice we have sequence numbers for the keeper lives so there is an outgoing sequence number and

47
00:04:35.610 --> 00:04:43.120
a returned sequence number for the keeper lives from one side of the link to the other.

48
00:04:43.260 --> 00:04:46.860
And what you'll notice is that will keep on being sent here.

49
00:04:46.860 --> 00:04:51.480
Notice the sequence number was set to 1 as the interface came up again

50
00:04:54.610 --> 00:05:02.500
here's the 0 SPF negotiation here's the IP version 6 and negotiation and notice share all the keeper

51
00:05:02.520 --> 00:05:06.740
lives continuing bunch of 0 SPF stuff.

52
00:05:06.780 --> 00:05:14.180
Notice the sequence numbers in the keeper lives because the interface came up again on Robert 2.

53
00:05:14.470 --> 00:05:22.720
So those keep the lives as shown so it's important that both sides have the same encapsulation it's

54
00:05:22.720 --> 00:05:29.890
important that you check the encapsulation check that the physical interface is up check that the line

55
00:05:29.890 --> 00:05:36.380
protocol is up and wait a few seconds for the keeper lives to succeed on both sides.

56
00:05:36.490 --> 00:05:43.030
So wait for instance half a minute to give it time to settle down and to send and receive keeper lives.
