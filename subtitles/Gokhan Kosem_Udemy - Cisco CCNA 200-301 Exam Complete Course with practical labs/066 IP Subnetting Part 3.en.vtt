WEBVTT
1
00:00:00.000 --> 00:00:08.000
So just to summarize, we know that the subnet are host resides on its 172.16.32.0

2
00:00:08.000 --> 00:00:11.000
We also have work out that the next subnet in the range is 172.16.48.0

3
00:00:11.000 --> 00:00:15.000
It’s important that you work out both the subnet that the host resides on

4
00:00:15.000 --> 00:00:23.000
as well as the next subnet, now just to help you with the analogy.

5
00:00:23.000 --> 00:00:24.000
In the real world we have an odometer in a car or motor bike something

6
00:00:24.000 --> 00:00:32.000
like this picture it will roll over from a 9 to 0.

7
00:00:32.000 --> 00:00:38.000
When travelling if the right most value is 9 and you drive another kilometer

8
00:00:38.000 --> 00:00:43.000
or mile that will change to 0, and the 0 to the left of it, will move to 1.

9
00:00:43.000 --> 00:00:48.000
So in a standard odometer if you had a value of, let say 7 0's

10
00:00:48.000 --> 00:00:51.000
and a 1 because you got a brand new vehicle.

11
00:00:51.000 --> 00:00:54.000
So that’s the distance that you've travel, let say 1 mile

12
00:00:54.000 --> 00:00:58.000
and you drive another mile,  the odometer will show that you have driven

13
00:00:58.000 --> 00:01:05.000
7 0's 2 miles (00000002), if you have driven 9 miles and you drove 1 extra mile

14
00:01:05.000 --> 00:01:11.000
that would display as six 0's followed by 1 followed by 0 (00000010) in

15
00:01:11.000 --> 00:01:17.000
other words 10 miles, if you have driven 999 miles and drove in extra mile

16
00:01:17.000 --> 00:01:22.000
that would display as 4 0's followed by 1 followed by 3 0's

17
00:01:22.000 --> 00:01:24.000
(00001000), in other words a thousand miles.

18
00:01:24.000 --> 00:01:29.000
Not that you would ever do this, but let say you reverse the odometer.

19
00:01:29.000 --> 00:01:34.000
So you had a thousand miles and you took 1 mile away that would give you

20
00:01:34.000 --> 00:01:40.000
5 0's followed by 3 9's(00000999) in other words 999 miles.

21
00:01:40.000 --> 00:01:43.000
Now as analogy we have a binary odometer.

22
00:01:43.000 --> 00:01:47.000
If you had an IP address of 10.1.1.254 and you added 1 to it

23
00:01:47.000 --> 00:01:53.000
the value will become 10.1.1.255 that should be very simple to understand.

24
00:01:53.000 --> 00:02:03.000
However if you had 10.1.1.255 and added 1 to that you now get 10.1.2.0

25
00:02:03.000 --> 00:02:07.000
in the similar manner to a standard odometer in a car.

26
00:02:07.000 --> 00:02:19.000
10.1.2.0 + 1 would equate to 10.1.2.1 or if we went in reverse 10.1.2.0 - 1

27
00:02:19.000 --> 00:02:23.000
would give you 10.1.1.1.255

28
00:02:23.000 --> 00:02:30.000
In a standard odometer the values can go from 0 to 9, in a binary odometer the

29
00:02:30.000 --> 00:02:36.000
values can go to 0 to 255 and then I have to click over in the next octet.

30
00:02:36.000 --> 00:02:44.000
Thus, if the last octet is equal to 255 and you add 1, notice the 3rd octet

31
00:02:44.000 --> 00:02:49.000
clicks over from 1 to 2 and the last octet clicks over to 0

32
00:02:49.000 --> 00:02:54.000
So use this analogy to help you work out the first host,

33
00:02:54.000 --> 00:02:56.000
the last host and the broadcast address.

34
00:02:56.000 --> 00:03:02.000
So the broadcast address is equal to the next network that we work out less 1

35
00:03:02.000 --> 00:03:09.000
so the next network that we work out was 172.16.48.0 and if we subtract 1 from that

36
00:03:09.000 --> 00:03:17.000
we'll get 172.16.47.255 just remember how the binary odometer works each octet

37
00:03:17.000 --> 00:03:23.000
can go from 0.255 and then it has to click over or in this example click back.

38
00:03:23.000 --> 00:03:32.000
So the broadcast address for host 172.16.35.123 is 172.16.47.255

39
00:03:32.000 --> 00:03:37.000
we work this out by leaving the network portion the same in other words

40
00:03:37.000 --> 00:03:43.000
the first 2 octets in blue and then the subnet in the host portion is set to 1 less

41
00:03:43.000 --> 00:03:48.000
than the next network which in this case is 48.0

42
00:03:48.000 --> 00:03:55.000
To work out the first host in the same subnet, take your subnet and add 1 to it.

43
00:03:55.000 --> 00:04:01.000
So the subnet that we've worked out is 172.16.32.0 and if you add 1 to that .

44
00:04:01.000 --> 00:04:08.000
you get 172.16.32.1, the last host is equal to the broadcast address less 1.

45
00:04:08.000 --> 00:04:18.000
So 172.16.47.255 which is our broadcast address less 1 is equal to 172.16.47.254

46
00:04:18.000 --> 00:04:23.000
and thats it we’ve work out the answers to the question.

47
00:04:23.000 --> 00:04:27.000
Now initially that might seem like a lot of work but you should be able to start

48
00:04:27.000 --> 00:04:33.000
doing examples within 30 to 60 seconds using this method, thus, the quick method.

49
00:04:33.000 --> 00:04:43.000
So to summarize this example 172.16.32.0 is the subnet for host 172.16.35.123

50
00:04:43.000 --> 00:04:52.000
with the subnet mask of 255.255.240.0 the broadcast is 172.16.47.255

51
00:04:52.000 --> 00:04:59.000
and the first host is 172.16.32.1 and the last host is 172.16.47.254

52
00:04:59.000 --> 00:05:04.000
In the second part of this section we're gonna look at how to subdivide a network

53
00:05:04.000 --> 00:05:11.000
or subnet when given a specific number of host that would be required

54
00:05:11.000 --> 00:05:11.000
on a subnet or a specific number of subnets that are required.

55
00:05:11.000 --> 00:05:20.000
So the 2 scenarios when ask for specific number of host on the subnets

56
00:05:20.000 --> 00:05:24.000
you would have to subdivide a specific network or subnet that you were given

57
00:05:24.000 --> 00:05:28.000
into multiple subnets that can support that number of host

58
00:05:28.000 --> 00:05:33.000
or you may be required to subdivide a subnet into multiple subnets.

59
00:05:33.000 --> 00:05:35.000
Why would this be required in the real world?

60
00:05:35.000 --> 00:05:38.000
Well you might been the administrator of a remote side and

61
00:05:38.000 --> 00:05:45.000
the head office is allocated US specific subnet, let say 192.168.1.0/24.

62
00:05:45.000 --> 00:05:49.000
Now that is only 1 subnet, what happens if you require multiple subnets?

63
00:05:49.000 --> 00:05:53.000
well, you could ask the head office to give you more subnets, but then may tell

64
00:05:53.000 --> 00:05:55.000
you that you don’t require  multiple subnet

65
00:05:55.000 --> 00:06:00.000
and that you are to subdivide that subnet into more subnets.

66
00:06:00.000 --> 00:06:07.000
Now if your sites only had 2 physical segments, with let say the first segment

67
00:06:07.000 --> 00:06:11.000
having 3 hosts on it and the second segment having 2 hosts on it.

68
00:06:11.000 --> 00:06:15.000
It’s very unlikely that the head office is gonna allocate

69
00:06:15.000 --> 00:06:22.000
you 2 separates subnets because this subnet 192.168.1.0 can support 254 hosts.

70
00:06:22.000 --> 00:06:27.000
And you only have a requirement for 3 hosts on 1 segment

71
00:06:27.000 --> 00:06:32.000
and 2 hosts on another segment, so you may be required to subdivide the subnet

72
00:06:32.000 --> 00:06:37.000
that you have been given so that you can support this infrastructure.

73
00:06:37.000 --> 00:06:42.000
Another reason to subnet is that the original classfull networks

74
00:06:42.000 --> 00:06:54.000
like a class A network supports 16,777,214 host per network of 10.0.0.0/8 and

75
00:06:54.000 --> 00:06:59.000
you had all of your host on that one subnet, the network would die the amount of

76
00:06:59.000 --> 00:07:04.000
broadcast and traffic sent on this segment will just destroy the network.

77
00:07:04.000 --> 00:07:09.000
It’s not practically possible to have so many hosts on the subnet.

78
00:07:09.000 --> 00:07:14.000
A lot of network engineers will put a maximum of 254 hosts on a subnet.

79
00:07:14.000 --> 00:07:19.000
In other words they would subnet down to a class C subnet

80
00:07:19.000 --> 00:07:25.000
class B network supports 16,382 host per subnet and once again

81
00:07:25.000 --> 00:07:30.000
that's far too many hosts on a subnet or network.

82
00:07:30.000 --> 00:07:34.000
That segment will not operate properly with so many hosts within that subnet.

83
00:07:34.000 --> 00:07:39.000
So once again we will more than likely subnet down to at least 254 hosts

84
00:07:39.000 --> 00:07:44.000
on the subnet, on a point to point 1 link only 2 host addresses are required

85
00:07:44.000 --> 00:07:49.000
so it make sense to subnet down even further or subdivide a network

86
00:07:49.000 --> 00:07:53.000
down even further until you only have 2 hosts on that subnet.

87
00:07:53.000 --> 00:07:57.000
The formula to work out how many host are supported on a subnet

88
00:07:57.000 --> 00:08:03.000
is 2 to n minus 2 where n is number of binary bits in the host portion.

89
00:08:03.000 --> 00:08:08.000
So as an example of class A address is 32 bits in size where 8 bits

90
00:08:08.000 --> 00:08:13.000
is the network portion and 24 bits is the host portion
