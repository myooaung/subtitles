WEBVTT
1
00:00:00.830 --> 00:00:04.900
There are two main types of encapsulation that we'll discuss in this course.

2
00:00:04.940 --> 00:00:09.860
The first one is HDL C more high level data link control.

3
00:00:09.860 --> 00:00:17.300
This is a layer to encapsulation once again that can be used across a leased line providing Layer 1

4
00:00:17.420 --> 00:00:21.710
service or connectivity from one site to another.

5
00:00:21.710 --> 00:00:28.550
Now you need to be aware that Cisco have extended the industry standard version of HDL C by adding an

6
00:00:28.550 --> 00:00:36.170
extra field called the Type field HDL C is a very simple encapsulation and I'll demonstrate a y shock

7
00:00:36.230 --> 00:00:38.930
capture of the frame in a moment.

8
00:00:38.930 --> 00:00:45.020
But as an example we have a flag field address field control field and a frame check sequence field

9
00:00:45.320 --> 00:00:48.650
Cisco have added a Type field to the frame.

10
00:00:48.650 --> 00:00:56.840
So this is different to the ISO industry standard HDFC protocol Cisco devices do you use the Cisco HDL

11
00:00:56.840 --> 00:01:04.340
C or C HDL C version by default and you'll notice it's very easy to set up a serial link using this

12
00:01:04.340 --> 00:01:10.340
encapsulation essentially just have to put an IP address on your right interfaces and no shut to the

13
00:01:10.340 --> 00:01:13.550
interfaces to get them to communicate with each other.

14
00:01:13.760 --> 00:01:19.730
If you want to connect Cisco riders to non Cisco riders you're going to want to change the encapsulation

15
00:01:19.730 --> 00:01:24.770
TPP which is an industry standard version of encapsulation.

16
00:01:24.770 --> 00:01:32.630
Now the reason why Cisco added the proprietary field is to allow multiple highlight protocols to traverse

17
00:01:32.630 --> 00:01:34.580
the link at the same time.

18
00:01:34.640 --> 00:01:42.620
So in other words if you want to run IP version for an IP version 6 across a serial link simultaneously

19
00:01:43.070 --> 00:01:50.090
the riders need a Type field to differentiate the frames that belong to IP version 4 vs. the frames

20
00:01:50.090 --> 00:01:57.200
that belong to IP version 6 when the router receives an IP version 4 packet across a serial link.

21
00:01:57.200 --> 00:02:01.910
So in this example Rider 2 receives an IP version for packet from rider 1.

22
00:02:02.050 --> 00:02:09.170
Write it too needs to know that that packet should be processed by the IP version 4 protocol stack on

23
00:02:09.170 --> 00:02:13.270
the rider when it receives a IP version 6 packet.

24
00:02:13.370 --> 00:02:20.690
It needs to know that the packet is destined to the IP version 6 protocol stack and that's what the

25
00:02:20.840 --> 00:02:22.700
Type field provides.

26
00:02:22.700 --> 00:02:29.480
It essentially allows the riders to differentiate between multiple higher layer protocols and hence

27
00:02:29.570 --> 00:02:33.650
Cisco extended the protocol to allow that functionality.

28
00:02:33.830 --> 00:02:40.820
The Industry Standard Version of HDL C doesn't have that type field denoting high layer protocols.

29
00:02:40.880 --> 00:02:42.120
It's very simple to configure.

30
00:02:42.120 --> 00:02:48.950
HDL see between two broad as you would type as an example and write a 1 enable committee interface and

31
00:02:48.950 --> 00:02:50.120
the relevant interface.

32
00:02:50.120 --> 00:02:53.110
In this example Serial 1 slash 0.

33
00:02:53.140 --> 00:02:59.810
You would configure the IP address on these several interface so IP address tendered 1 to 2 to one with

34
00:02:59.810 --> 00:03:03.440
the mosque 2 4 5 2 4 5 2 4 5 2 5 2.

35
00:03:03.440 --> 00:03:06.900
As an example which would be better than slash 24.

36
00:03:07.100 --> 00:03:13.880
And then you specify encapsulation HDL C so it's as simple as that to configure HDL C all you type is

37
00:03:13.880 --> 00:03:18.330
encapsulation HDL C and that is done by default for you.

38
00:03:18.530 --> 00:03:20.570
So you don't actually need to configure that at all.
