WEBVTT
1
00:00:00.580 --> 00:00:07.060
In this section we're going to look at virtual private networks or VPN and VPN solutions provide for

2
00:00:07.060 --> 00:00:14.890
secure access across insecure mediums such as the Internet allowing for the connection of branch offices

3
00:00:14.980 --> 00:00:24.430
home offices business partners and remote telecommuters to all or some part of a corporate network VPN

4
00:00:24.430 --> 00:00:31.220
have become very popular because of low cost high bandwidth Internet connectivity which allows for secure

5
00:00:31.250 --> 00:00:38.600
encrypted connections back to Central sites previously remote offices to connect to the central office

6
00:00:38.900 --> 00:00:43.720
or head office through expensive leased lines or dial up phone lines.

7
00:00:45.090 --> 00:00:51.180
VPN ads have helped reduce network costs by allowing for secure connections through broadband technology

8
00:00:51.180 --> 00:01:00.210
such as DSL and cable these days VPN can transport mission critical data voice over IP and clients of

9
00:01:00.220 --> 00:01:03.980
applications without compromising quality or security.

10
00:01:05.370 --> 00:01:11.070
In this section and a look at an overview of BP ends at CCNY level they just expect you to have an appreciation

11
00:01:11.070 --> 00:01:16.830
of BP and but in my experience I find people get really confused if you just gloss over some of the

12
00:01:16.830 --> 00:01:23.490
terms and technologies and VPN components and that's I'm going to delve into it a little bit more detail.

13
00:01:23.870 --> 00:01:29.970
We're going to explain what IP SEC is what encryption is what authentication is and what integrity is

14
00:01:30.570 --> 00:01:34.770
all vital components in a VPN.

15
00:01:34.790 --> 00:01:41.870
So again what is a VPN a VPN is an encrypted connection between private networks over a public network

16
00:01:41.870 --> 00:01:42.920
such as the Internet.

17
00:01:43.600 --> 00:01:50.990
So it's a virtual private network which allows for the sending of traffic securely across an insecure

18
00:01:50.990 --> 00:01:52.280
medium.

19
00:01:52.280 --> 00:01:59.450
Thus you can send private data and private information across the Internet without the worry of someone

20
00:01:59.450 --> 00:02:04.670
intercepting and reading your information to keep the data private.

21
00:02:04.760 --> 00:02:09.640
The traffic is encrypted so that confidentiality is maintained.

22
00:02:09.800 --> 00:02:16.880
Instead of using a dedicated connection between two sites such as a leased line we are using a public

23
00:02:16.880 --> 00:02:22.750
infrastructure such as the Internet to send data securely from one private network.

24
00:02:23.030 --> 00:02:30.170
Let's say a home network where a user's telecommuting to a central office or head office where the user's

25
00:02:30.180 --> 00:02:38.900
accessing for instance an Oracle database so secure data is sent between these two private sites across

26
00:02:38.900 --> 00:02:42.660
the public Internet now bit of history.

27
00:02:42.750 --> 00:02:49.740
Why the requirement for VPN or IP vision forwards created in the 1970s and in those days network security

28
00:02:49.740 --> 00:02:50.850
wasn't a big issue.

29
00:02:51.570 --> 00:02:57.690
It's important to realize that IP transmits a lot of data as clear text which is often referred to as

30
00:02:57.690 --> 00:03:04.560
transmitting in the clear data is just transported in raw form with no encryption.

31
00:03:04.560 --> 00:03:10.650
Lots of private information including usernames and passwords so authentication information and other

32
00:03:10.650 --> 00:03:19.050
private data is transmitted in clear text and if captured can easily be read by hackers and other individuals

33
00:03:20.910 --> 00:03:28.200
is a simple example of a sniffer capture of a user logging into an FTB server and you can clearly see

34
00:03:28.380 --> 00:03:35.520
that the user name is anonymous available in clear text and the password of Cisco is also shown in clear

35
00:03:35.520 --> 00:03:36.150
text.

36
00:03:36.780 --> 00:03:43.740
So when you connect for instance to a web server it that web server is not using encrypted HDP your

37
00:03:43.740 --> 00:03:51.210
username and password for instance will be sending clear text which is easy to capture and read all

38
00:03:51.210 --> 00:03:53.180
information transmitted in an email.

39
00:03:53.190 --> 00:04:00.820
For example is sending clear text we are some examples of text protocols for instance if DP all the

40
00:04:00.820 --> 00:04:04.540
data as well as the authentication information is sending clear text.

41
00:04:04.540 --> 00:04:10.870
If you tell leading to a Rada or a switch or your authentication information isn't clear text so usernames

42
00:04:10.870 --> 00:04:16.510
and passwords can easily be captured as well as any commands that you type on the rota or switch.

43
00:04:16.510 --> 00:04:22.240
So as an example if you type show run the entire running configuration could be captured.

44
00:04:22.240 --> 00:04:28.780
There are some really powerful hacking tools available on the internet please note I don't recommend

45
00:04:28.780 --> 00:04:32.160
you using them but just be aware that they exist.

46
00:04:32.170 --> 00:04:38.290
An example would be Cain and Abel which is extremely powerful and can capture usernames and passwords

47
00:04:38.470 --> 00:04:41.590
from multiple protocols including those listed here.

48
00:04:42.710 --> 00:04:49.260
Just do a search for Cain and Abel in Google and you can see this website.

49
00:04:49.470 --> 00:04:53.650
Oh excited or I.T. provides Cain and Abel for free.

50
00:04:55.440 --> 00:05:02.620
And has really powerful features for capturing and recovering passwords you use this program at your

51
00:05:02.650 --> 00:05:03.910
own risk.

52
00:05:04.000 --> 00:05:08.300
And again I don't recommend that you use it but be aware that it exists.

53
00:05:08.590 --> 00:05:13.740
It's A.P. sends the contents of mail messages into a text so does pop 3.

54
00:05:14.160 --> 00:05:17.590
So does HDP so does is an MP version one.

55
00:05:18.010 --> 00:05:24.220
So be aware a lot of the protocol that we use in everyday environments send information and clear text

56
00:05:24.820 --> 00:05:31.350
which could be captured and read on undesirables cryptography.

57
00:05:31.630 --> 00:05:35.650
Like so many other things in life as its own terminology.

58
00:05:35.650 --> 00:05:40.110
Some of the terms that you need to understand firstly what an algorithm is.

59
00:05:40.330 --> 00:05:47.350
An algorithm is detailed steps or performing a function and a cipher is an example of an encryption

60
00:05:47.380 --> 00:05:48.760
algorithm.

61
00:05:48.760 --> 00:05:57.640
We look at a lot of the algorithms in the next few slides but as an example days triple days and a yes

62
00:05:58.050 --> 00:06:06.600
or encryption algorithms used for taking clear text data and putting it into non readable form or ciphertext

63
00:06:07.120 --> 00:06:09.010
In other words encrypted data.

64
00:06:09.070 --> 00:06:13.300
The two main types of encryption algorithms that we're going to look at in this course the first one

65
00:06:13.300 --> 00:06:20.050
is a symmetric algorithm symmetric algorithm is where the same key is used for encryption and decryption

66
00:06:20.680 --> 00:06:27.700
and secret key algorithms like DayZ triple days in a yes or symmetric encryption algorithms.

67
00:06:27.700 --> 00:06:33.610
An asymmetric algorithm is an algorithm in which different keys are used for encryption and decryption

68
00:06:34.420 --> 00:06:41.590
public key algorithm such as RSA or asymmetric encryption algorithms to look at those in more detail

69
00:06:41.590 --> 00:06:48.280
in a moment but just be aware that with a symmetric algorithm the same key is used to encrypt and decrypt

70
00:06:48.820 --> 00:06:50.850
with an asymmetric algorithm.

71
00:06:51.010 --> 00:06:55.590
A different key is used to encrypt versus decrypt.

72
00:06:55.620 --> 00:06:56.920
So what is a key.

73
00:06:57.100 --> 00:07:02.700
A key is a bit of information that is required to decrypt the message usually in the form of a value

74
00:07:02.700 --> 00:07:06.630
that is used with a cipher to encrypt the message.

75
00:07:06.630 --> 00:07:11.820
It's important that the key remain secret in order for the message to remain private.

76
00:07:11.820 --> 00:07:19.110
Think of a key as a password a key or password is used with an encryption algorithm and together they

77
00:07:19.110 --> 00:07:27.720
make the data secret think of it as follows the algorithm is well-known and can be read about in books.

78
00:07:27.750 --> 00:07:29.940
You can look on Wikipedia.

79
00:07:29.940 --> 00:07:36.780
There's lots of documentation explaining various algorithms like a s triple days and days however the

80
00:07:36.780 --> 00:07:38.610
key is a secret valley.

81
00:07:38.610 --> 00:07:41.990
A key use with an algorithm makes the data unique.

82
00:07:43.140 --> 00:07:45.300
What are we trying to accomplish.

83
00:07:45.310 --> 00:07:50.120
There are four things that you typically want to accomplish in a VPN.

84
00:07:50.220 --> 00:07:55.800
The first one and the one most people think about is data confidentiality or encryption where no one

85
00:07:55.800 --> 00:08:01.410
else should be able to read the information by manipulating the data that is sent across the public

86
00:08:01.410 --> 00:08:02.560
infrastructure.

87
00:08:02.610 --> 00:08:07.290
In other words if a hacker captures your information on the Internet that hackers should not be able

88
00:08:07.290 --> 00:08:10.830
to decrypt or read the information data.

89
00:08:10.830 --> 00:08:17.450
Confidentiality is provided by using encryption algorithms with associated keys.

90
00:08:17.470 --> 00:08:23.560
The second goal is data integrity and yeah we want to know that the data has traversed unchanged between

91
00:08:23.560 --> 00:08:25.030
the two parties.

92
00:08:25.030 --> 00:08:31.930
For instance if party A in something to party B party B wants to know that that data has not been manipulated

93
00:08:31.960 --> 00:08:40.260
or changed in transit the data has arrived without changes as it was sent by party a.

94
00:08:40.380 --> 00:08:47.050
The third goal is data origin authentication the receiver of the data needs to be able to verify that

95
00:08:47.050 --> 00:08:51.540
the data that it received could only have originated from the sender.

96
00:08:51.550 --> 00:08:56.830
In other words the so-called sender is the actual sender that we believe them to be.

97
00:08:57.130 --> 00:09:02.650
The receiver wants to be able to authenticate the source of the packet that arrived guaranteeing and

98
00:09:02.650 --> 00:09:11.130
certified who the source of the information actually is and then the fourth goal is empty replay protection.

99
00:09:11.220 --> 00:09:17.820
We want to verify that each packet is unique and is not duplicated so he has a very basic example of

100
00:09:17.820 --> 00:09:23.610
confidentiality or encryption and is one of the earliest forms of encryption used by Caesar.

101
00:09:23.610 --> 00:09:30.290
Years and years ago if a hacker captured the following text MJ que Kuti.

102
00:09:30.570 --> 00:09:31.370
What does it mean.

103
00:09:31.860 --> 00:09:34.170
Well two things have been done to this text.

104
00:09:34.260 --> 00:09:42.210
The first is that an algorithm has been applied to clear text with a key so in this example the algorithm

105
00:09:42.210 --> 00:09:49.020
used is a so-called Caesar's algorithm where data has been moved to the right hand side and the key

106
00:09:49.020 --> 00:09:52.540
space or key used is 5.

107
00:09:52.550 --> 00:09:59.430
Now if you reverse that process in other words move the letters by 5 to the left hand side.

108
00:09:59.450 --> 00:10:02.330
This can be decrypted as Hello.

109
00:10:02.420 --> 00:10:09.200
Just take an alphabet look at em for example move by five letters and you'll get an h.

110
00:10:09.200 --> 00:10:11.070
And so forth and so on.

111
00:10:11.090 --> 00:10:17.450
So if a hacker captured the encrypted text he or she would have to know firstly which algorithm was

112
00:10:17.450 --> 00:10:21.500
used and secondly what the key is.

113
00:10:21.500 --> 00:10:26.520
Once you know those two pieces of information it's just a matter of reversing the algorithm.

114
00:10:26.720 --> 00:10:34.310
So there is a very simple example of data confidentiality we encryption this is the process involved

115
00:10:34.430 --> 00:10:35.690
with encryption.

116
00:10:35.690 --> 00:10:39.910
We firstly take some secret data which is in clear text.

117
00:10:39.980 --> 00:10:47.090
This might be an order or a confidential email or some data that is in clear text that we want to keep

118
00:10:47.090 --> 00:10:48.970
it confidential.

119
00:10:48.980 --> 00:10:57.940
We then take a key in combination with an algorithm let's say a yes or advanced encryption standard.

120
00:10:57.980 --> 00:11:03.920
I'll explain more about the algorithms in a moment but for now just understand that you take the original

121
00:11:03.920 --> 00:11:06.500
data which is in clear text.

122
00:11:06.500 --> 00:11:13.610
You take a key you take the encryption algorithm the clear text when sent through the encryption algorithm

123
00:11:14.330 --> 00:11:22.520
with a specific key results in ciphertext or encrypted data that encrypted data can then be sent across

124
00:11:22.520 --> 00:11:29.900
a public infrastructure such as the Internet and an undesirable like a hacker will not be able to read

125
00:11:29.930 --> 00:11:37.340
information because it's encrypted the receiving party will receive the encrypted data and will reverse

126
00:11:37.340 --> 00:11:38.440
the process.

127
00:11:38.450 --> 00:11:46.100
So in other words by applying the same algorithm and the same key but in the reverse direction the encrypted

128
00:11:46.100 --> 00:11:54.020
data is reversed back to the original clear text data and the receiving party can read the information.

129
00:11:54.260 --> 00:12:00.590
So it's a simple process where you take the text data you apply an encryption algorithm with a key to

130
00:12:00.590 --> 00:12:06.710
it which results in ciphertext the sender then transmits that across an insecure medium such as the

131
00:12:06.710 --> 00:12:07.540
Internet.

132
00:12:07.790 --> 00:12:11.870
The receiver reverses the process by applying the same key.

133
00:12:12.020 --> 00:12:20.240
If it's a symmetric algorithm and the algorithm that reverses the process which results in the original

134
00:12:20.560 --> 00:12:29.660
text data now an algorithms key space or key length is a set of all possible values for that algorithm.

135
00:12:29.660 --> 00:12:36.890
I find this confuses a lot of people someone explain it by using an IP address and that keys produces

136
00:12:36.980 --> 00:12:40.070
a 2 to the N key space size.

137
00:12:40.220 --> 00:12:46.520
So by looking at a class A address as an example an IP version for addresses 32 bits in size the network

138
00:12:46.520 --> 00:12:50.720
portion is 8 bits and the host portion is 24 bits.

139
00:12:50.720 --> 00:12:59.080
So 2 to the power of 24 gives you over 16 and a half billion options or host addresses in theory.

140
00:12:59.090 --> 00:13:06.990
So think about it as follows at 24 but he spaced results in over 16 and a half billion combinations.

141
00:13:07.160 --> 00:13:11.810
So keep that in mind when we look at the key spaces available in the various algorithms.

142
00:13:11.810 --> 00:13:18.020
The greater the key space the harder it's gonna be to crack the encryption algorithm because there are

143
00:13:18.020 --> 00:13:20.090
more combinations available.
