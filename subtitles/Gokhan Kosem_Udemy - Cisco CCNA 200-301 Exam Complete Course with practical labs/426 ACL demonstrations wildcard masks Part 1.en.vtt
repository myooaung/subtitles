WEBVTT
1
00:00:00.270 --> 00:00:06.870
There are also two methods to identify whether an ACL is a standard ACL or extended ACL access lists

2
00:00:06.930 --> 00:00:14.460
either configured as numbered access lists or named access lists with numbered ACLC the number of the

3
00:00:14.460 --> 00:00:17.600
ACL determines what type of ACL it is.

4
00:00:17.790 --> 00:00:26.340
So for example ACL is in the range 1099 or what's called the expanded range 2300 to one triple nine

5
00:00:26.730 --> 00:00:36.150
would be used for standard IP ACLC So as an example when Arata in global configuration I can type the

6
00:00:36.150 --> 00:00:39.700
C'mon access list questionmark.

7
00:00:40.140 --> 00:00:50.500
And as you can see here 1 to 99 is used for IPS standard access lists the expanded range is also listed.

8
00:00:50.610 --> 00:00:53.400
Certain 300 to one triple nine.

9
00:00:53.400 --> 00:01:00.440
Now the reason for the expanded range is that initially about 100 ACLC seen more than enough.

10
00:01:00.540 --> 00:01:06.930
But as we all know as time goes by what was deemed to be enough is not necessarily enough and these

11
00:01:06.930 --> 00:01:13.340
days we can use both 1 to 99 or the expanded range if the requirement for more than 100 access lists

12
00:01:13.350 --> 00:01:20.010
is their IP extended access lists on the range one hundred to one ninety nine as well as the expanded

13
00:01:20.010 --> 00:01:28.950
range which is thousand to 2 6 9 9 depending on your Iowas you will see other types of ACLC listed for

14
00:01:28.950 --> 00:01:36.180
instances of Port epal talk ACL in the range 600 to 699 can be used or to support IPX.

15
00:01:36.330 --> 00:01:42.900
You could for instance use a cells in the range 800 to eight nine nine or extended IPX X-ists lists

16
00:01:43.020 --> 00:01:45.990
in the range 900 to 9 9 9.

17
00:01:46.140 --> 00:01:54.880
Notice have for example ACLJ in the range 700 to 7 9 9 are used for mac address access lists in this

18
00:01:54.880 --> 00:02:00.900
course we fortunately only concentrate on Ickey access lists so we will concentrate on both IP stented

19
00:02:00.910 --> 00:02:07.810
access lists an IP extended access lists that be away please that there are other number ranges used

20
00:02:07.810 --> 00:02:11.690
for other protocols like IPX Apple talk and so forth.

21
00:02:12.010 --> 00:02:17.680
The second type is named X-ists lists which are more descriptive because they use alphanumeric characters

22
00:02:17.770 --> 00:02:18.870
as names.

23
00:02:19.070 --> 00:02:25.520
So rather than access list 100 for instance permitting telnet traffic to switch you could call TACL

24
00:02:25.730 --> 00:02:28.830
hemat telnet and give it a name with more meaning.

25
00:02:29.140 --> 00:02:34.890
That also allows you to create many many more ACLC on a router than the list specified by the numbered

26
00:02:35.050 --> 00:02:42.430
ACLC originally named ACLJ also gave you more flexibility when it came to editing individual lines or

27
00:02:42.430 --> 00:02:45.200
deleting individual lines in an ACL.

28
00:02:45.310 --> 00:02:53.250
But these days that flexibility is available for both named as well as numbered ACLC just to demonstrate

29
00:02:53.250 --> 00:02:54.130
a little bit more.

30
00:02:54.450 --> 00:02:57.830
If I specify one as my ACL number.

31
00:02:58.040 --> 00:02:59.910
Notice it gives me three options.

32
00:02:59.940 --> 00:03:02.450
Deny permit or remark.

33
00:03:02.460 --> 00:03:04.230
Now let's start with the last one.

34
00:03:04.230 --> 00:03:08.250
The Remarque option allows you to add a description to your heels.

35
00:03:08.250 --> 00:03:13.950
This is very useful because when you return to an ACL that you configured months ago rather than having

36
00:03:13.950 --> 00:03:21.300
to decipher the lines of the ACL the remark or in other words the description conflicts you know what

37
00:03:21.300 --> 00:03:23.670
that ACL is attempting to accomplish.

38
00:03:23.670 --> 00:03:28.950
So it's recommended that you use the remark statement to add descriptions TACL as to make them more

39
00:03:28.950 --> 00:03:34.320
user friendly and understandable both for yourself and for others.

40
00:03:34.330 --> 00:03:41.890
Do I choose the option to meet notice because this is a standard IP access list the only options here

41
00:03:42.310 --> 00:03:48.940
are permitting either a hostname or IP address permitting any which permits everyone or anything and

42
00:03:48.940 --> 00:03:50.190
the host option.

43
00:03:50.500 --> 00:03:55.020
So I could for example put in and dress like 10.0 one would one.

44
00:03:55.300 --> 00:04:03.430
And then noticed the next option is to put in wildcard bets or to hit enter or I can log this information

45
00:04:03.670 --> 00:04:08.710
to say this log server or another logging device on my network.

46
00:04:08.710 --> 00:04:17.020
So if I put in the option 0 then 0.00 that is specifying that I will permit traffic from a specific

47
00:04:17.020 --> 00:04:20.370
host 10 dot one dot 1.1.

48
00:04:20.410 --> 00:04:22.950
Now ISIL is don't you stented network mosques.

49
00:04:22.960 --> 00:04:29.610
They use Inv. mosques whereas zero in binary means they must be a match and a one in binary means that

50
00:04:29.620 --> 00:04:31.720
doesn't have to be a match.

51
00:04:31.750 --> 00:04:37.810
So just to reiterate you need to look at this in binary if you're not sure a zero in binary in the mosque

52
00:04:37.930 --> 00:04:44.290
means that there must be a match on the host or network a one in the mosque means that we ignore the

53
00:04:44.290 --> 00:04:46.240
host or network Valley.

54
00:04:46.480 --> 00:04:53.040
So as an example if I want to match a specific IP address I can tap the come on access list one 1 denoting

55
00:04:53.050 --> 00:04:55.350
that this is a standard the access list.

56
00:04:55.600 --> 00:05:04.630
I'm permitting traffic that matches 10 dot one dot 1.1 exactly the zeros in the mosque mean that the

57
00:05:04.630 --> 00:05:07.430
first octet must be a 10.

58
00:05:07.450 --> 00:05:16.300
The second noctis must be a one the third octet must be a one and the fourth octet must be or 1 0 in

59
00:05:16.300 --> 00:05:20.540
the MOS means an exact match a one in the most means.

60
00:05:20.650 --> 00:05:22.200
It doesn't have to match.

61
00:05:22.450 --> 00:05:29.310
So this statement will only match for specific host with the IP address 10 dot $1.1 1.

62
00:05:29.350 --> 00:05:33.230
Now rather than doing it that way you can configure the access list as follows.

63
00:05:33.370 --> 00:05:36.640
You can tap on access list one Hammet.

64
00:05:36.850 --> 00:05:38.990
And in this case we're looking for a specific host.

65
00:05:39.040 --> 00:05:45.380
So you can use the keyword host and then specifying the host IP address either will do.

66
00:05:45.400 --> 00:05:51.950
It's like saying tomato versus to Meda depending on which you prefer will depend on which one you configure.

67
00:05:52.910 --> 00:05:58.240
The opposite of specifying an individual host would be matching anything or everything.

68
00:05:58.280 --> 00:06:04.150
So you could create an access list access list one per minute and notice in the address portion we have

69
00:06:04.190 --> 00:06:06.850
put 0 0 0 0.

70
00:06:07.130 --> 00:06:14.620
And this could essentially be made anything in the Moscow but we've put 2 5 5 2 4 5 2 4 5 2 4 5.

71
00:06:14.640 --> 00:06:19.420
I remember a one in binary in the mosque means ignored this failure.

72
00:06:19.490 --> 00:06:24.390
In other words it can be anything at zero in the mosque means an exact match.

73
00:06:24.430 --> 00:06:32.930
So if we look at the IP address it's 0.0 0.0 in decimal which is equal to all zeroes in binary this

74
00:06:32.930 --> 00:06:36.090
get in the binary address obviously doesn't exist.

75
00:06:36.310 --> 00:06:38.350
I'll just put a chair for readability.

76
00:06:38.660 --> 00:06:43.410
So looking at the address in binary it's eight zeros the mosque.

77
00:06:43.430 --> 00:06:50.190
In other words in the first octet the mosque is set to 255 which is equal to eight binary ones.

78
00:06:50.210 --> 00:06:56.210
So what we are saying by putting 255 in the first octet in the mosque is that the first octet in the

79
00:06:56.210 --> 00:06:58.430
address is irrelevant.

80
00:06:58.430 --> 00:07:04.450
We are just ignoring all the bets we've done the same with Octave two three and four.

81
00:07:04.610 --> 00:07:08.310
So this is essentially meshing anything or everything.

82
00:07:08.630 --> 00:07:12.230
And we are not matching any specific host or network.

83
00:07:12.620 --> 00:07:17.110
Alternately you could also use the syntax access list one that any.

84
00:07:17.300 --> 00:07:22.320
So once again tomato versus tomato you decide which you prefer.

85
00:07:22.370 --> 00:07:25.240
Both will work and both have the same result.

86
00:07:26.320 --> 00:07:31.960
If you wanted to match an individual subnet rather than an individual host for any traffic you could

87
00:07:31.960 --> 00:07:34.840
use a combination of zeros and ones in the mosque.

88
00:07:35.050 --> 00:07:41.470
So as an example X-ists list one has met 10 and notice in the mosque we have a zero in the first octet

89
00:07:41.950 --> 00:07:46.090
which means that we are matching on the 10 10 dot wonder 1.0.

90
00:07:46.150 --> 00:07:50.190
And in the mosque we have 0 0 0 up 255.

91
00:07:50.440 --> 00:07:56.470
Now in the first octet in the mosque we have got binary zeros which means that there must be an exact

92
00:07:56.470 --> 00:07:58.640
match on the address.

93
00:07:58.660 --> 00:08:02.120
In other words we are specifically matching the first octet.

94
00:08:02.200 --> 00:08:04.330
It must be equal to a 10.

95
00:08:04.350 --> 00:08:08.920
The second octet must be 1 because we've got a zero in the mosque.

96
00:08:08.920 --> 00:08:12.850
The third octet must be 1 because we have a zero in the mosque.

97
00:08:12.850 --> 00:08:18.910
But notice in the fourth octet this can be set to anything because we've got binary ones in the fourth

98
00:08:18.910 --> 00:08:23.220
octet 255 if you remember is eight binary ones.

99
00:08:23.230 --> 00:08:29.230
In other words we are saying we don't care what the last octet does City this statement will match any

100
00:08:29.230 --> 00:08:35.640
host or any address where the first three octets are set to 10 dot one dot one.

101
00:08:35.680 --> 00:08:38.800
The fourth octet can be anything.

102
00:08:38.800 --> 00:08:45.400
So just to sum up if we were using the dotted decimal notation it matches specific IP address like 10

103
00:08:45.490 --> 00:08:46.670
1 1 1.

104
00:08:46.870 --> 00:08:49.810
We would fool the mosque with Ciro's.

105
00:08:49.840 --> 00:08:51.980
Once again this is an inverse mosque.

106
00:08:52.090 --> 00:08:58.170
A zero in the mosque means that we are looking for a specific value in the host portion of the address.

107
00:08:58.300 --> 00:09:02.430
A one in the mosque means we ignore what the host portion is 60.

108
00:09:02.560 --> 00:09:08.860
So this matches a specific IP address to match specific subnet lets say 10 1 1 0.

109
00:09:09.040 --> 00:09:15.500
We could configure the access list is 10 1 1 0 with the first three octets equal to zero.

110
00:09:15.580 --> 00:09:18.200
And the last octet equal to 255.

111
00:09:18.490 --> 00:09:24.880
Or if we wanted to match anything we could say the host portion to actually any number and the mosque

112
00:09:24.890 --> 00:09:29.870
at 255 255 255 255.

113
00:09:29.900 --> 00:09:37.550
So as an example on a Rodda I could top the cream on access list to the Met and then specify anything

114
00:09:37.550 --> 00:09:41.630
I wanted to.

115
00:09:41.750 --> 00:09:47.300
But if a mosque is set to all ones flattops the come on show IP X-ists list

116
00:09:50.530 --> 00:09:54.270
noticed the rioters changed that to say permit any.

117
00:09:54.620 --> 00:10:02.440
We talked this on the Rodda but the rot has changed it to permit any I can do the come on show run piping

118
00:10:02.440 --> 00:10:08.180
clean access list to see all my ex's live statements configured on the router and you can see once again

119
00:10:08.480 --> 00:10:11.810
the Rodda has changed the format of the access lists.
