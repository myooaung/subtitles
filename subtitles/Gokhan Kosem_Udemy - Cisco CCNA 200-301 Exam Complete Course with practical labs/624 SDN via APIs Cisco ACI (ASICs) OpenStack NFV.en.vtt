WEBVTT
1
00:00:00.770 --> 00:00:06.530
Another definition of software defined networking is software defined networking via API ease or application

2
00:00:06.530 --> 00:00:08.330
programming interfaces.

3
00:00:08.330 --> 00:00:15.470
In this vision rather than being tied to configuring a network device via a command line interface which

4
00:00:15.470 --> 00:00:17.090
is very restrictive.

5
00:00:17.090 --> 00:00:22.070
Why didn't we have richer programmatic interfaces on networking devices.

6
00:00:22.070 --> 00:00:28.960
An example would be let's use a RESTful API rather than a basic SEO lie.

7
00:00:29.030 --> 00:00:35.780
Other protocols like Ovi SDP a net conf could be used to programmatically change the configuration of

8
00:00:35.780 --> 00:00:37.460
a networking device.

9
00:00:37.460 --> 00:00:42.760
Now you may be thinking well I'll just use simple network management protocol or S&amp;P.

10
00:00:43.030 --> 00:00:49.370
S&amp;P has some restrictions and doesn't work particularly well when you want to change the configuration

11
00:00:49.370 --> 00:00:50.900
of a device.

12
00:00:50.900 --> 00:00:58.850
Another definition would be using ASX and I've put this as a separate vision of SDM and there will be

13
00:00:58.850 --> 00:01:04.070
a separate course on Cisco ECI using a protocol called a plex.

14
00:01:04.190 --> 00:01:13.160
Cisco purchased a startup called in semi and they have developed a vision of SD in using hardware or

15
00:01:13.400 --> 00:01:14.200
ASX.

16
00:01:14.270 --> 00:01:20.420
So the Cisco solution is very reliant on an async implementation and ties in with their nexus product

17
00:01:20.420 --> 00:01:21.300
line.

18
00:01:21.440 --> 00:01:26.460
Other terms you may come across include cloud automation using open stack.

19
00:01:26.690 --> 00:01:32.420
One of the visions with open stack is that we should be able to manage all our networking devices servers

20
00:01:32.510 --> 00:01:35.810
and storage from a single management console.

21
00:01:35.840 --> 00:01:38.830
We'll talk more about Open stack in a separate course.

22
00:01:38.840 --> 00:01:42.950
What about in a V or network function virtualization.

23
00:01:42.950 --> 00:01:50.750
I'd recommend that you visit the OPI in a V Web site for more details about in a V but to give you a

24
00:01:50.750 --> 00:01:58.580
very quick overview of NFP is why do you run specific operating systems on specific hardware to provide

25
00:01:58.580 --> 00:02:00.730
a function as an example.

26
00:02:00.740 --> 00:02:06.200
Why do you have a hardware firewall that just provides that function.

27
00:02:06.200 --> 00:02:12.310
In the past you had servers that had specific functions installed on specific hardware.

28
00:02:12.590 --> 00:02:20.450
As an example you may have had an Exchange server or a database server or a file server every server

29
00:02:20.450 --> 00:02:22.790
was running on dedicated hardware.

30
00:02:22.790 --> 00:02:25.840
Then a few years ago servers got virtualize.

31
00:02:26.270 --> 00:02:27.810
So you no longer run.

32
00:02:27.890 --> 00:02:34.070
For instance some server platforms on hardware you run them within virtual machines and typically you

33
00:02:34.070 --> 00:02:38.630
would run many virtual machines on a single hardware device.

34
00:02:38.630 --> 00:02:43.580
And there are many advantages to the virtualization of servers in the same way.

35
00:02:43.580 --> 00:02:46.940
Why don't we virtualize networking devices.

36
00:02:46.940 --> 00:02:56.240
So as an example we might virtualize a Cisco router using the CSR or an HP router using a VCR or a switch

37
00:02:56.540 --> 00:02:59.510
using obvious or open v switch.

38
00:02:59.510 --> 00:03:05.420
Many of us have encountered virtual switching in a VM way environment VM Where have virtual switches

39
00:03:05.420 --> 00:03:07.280
running in their hyper visors.

40
00:03:07.280 --> 00:03:13.790
So taking this a step further why don't we virtualize networking devices rather than having a dedicated

41
00:03:13.790 --> 00:03:16.180
rudder or a dedicated firewall.

42
00:03:16.190 --> 00:03:22.970
Why didn't we just run a VM with that function so we could virtualize a firewall or virtualize a router

43
00:03:23.470 --> 00:03:25.820
that we could take it a step further.

44
00:03:25.890 --> 00:03:32.570
So as an example rather than running a Windows operating system just to give me a specific application

45
00:03:32.570 --> 00:03:39.740
like a web server why don't we virtualize the operating system as well and run multiple applications

46
00:03:39.980 --> 00:03:47.270
separated from each other as if they're in different VMs or containers is a term that's often used today

47
00:03:47.660 --> 00:03:53.990
and separate the applications from each other but have multiple applications running on a single server

48
00:03:54.710 --> 00:04:01.310
in the same way why didn't we virtualize a function such as VR or P or a firewall function rather than

49
00:04:01.310 --> 00:04:04.220
running a full blown operating system per function.

50
00:04:04.250 --> 00:04:10.730
Why don't we run one operating system and just instantiate network functions and many of them on a single

51
00:04:10.730 --> 00:04:12.050
operating system.

52
00:04:12.080 --> 00:04:15.820
We'll talk more about in a V in a separate course.

53
00:04:15.880 --> 00:04:20.180
For now I'm going to introduce open SD and add a bit of open flow.

54
00:04:20.200 --> 00:04:27.360
Have a look at more detail courses available on genius 3 I will hopefully be discussing the details

55
00:04:27.360 --> 00:04:29.790
of all of these in upcoming courses.
