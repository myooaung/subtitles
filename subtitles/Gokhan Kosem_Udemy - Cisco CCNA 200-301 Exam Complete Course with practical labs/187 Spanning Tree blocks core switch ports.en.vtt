WEBVTT
1
00:00:00.000 --> 00:00:09.000
So on switch 1 the only port that’s forwarding is gigabit 0/0 as shown here.

2
00:00:09.000 --> 00:00:12.000
Other ports on the switch are blocking.

3
00:00:12.000 --> 00:00:16.000
So taking a picture of the topology

4
00:00:16.000 --> 00:00:21.000
this port is blocking, this port is blocking and this port is blocking.

5
00:00:21.000 --> 00:00:28.000
The only port that is forwarding is gigabit 0/0 and we can see that in the output
here.

6
00:00:28.000 --> 00:00:32.000
So gigabit 0/0 is a root port.

7
00:00:32.000 --> 00:00:36.000
So we could say this is the root port of that switch.

8
00:00:36.000 --> 00:00:39.000
Other ports are blocking.

9
00:00:39.000 --> 00:00:41.000
Now what about switch 2?

10
00:00:41.000 --> 00:00:47.000
So on switch 2 for VLAN 10 all ports are forwarding

11
00:00:47.000 --> 00:00:51.000
because this is the root bridge.

12
00:00:51.000 --> 00:00:53.000
On a root bridge, all ports are in the forwarding state

13
00:00:53.000 --> 00:00:57.000
you can't get closer to the root bridge than the root bridge itself.

14
00:00:57.000 --> 00:01:01.000
So all of this ports on the switch are forwarding

15
00:01:01.000 --> 00:01:05.000
and all of these ports are designated ports

16
00:01:05.000 --> 00:01:08.000
so each port here is a designated port

17
00:01:08.000 --> 00:01:14.000
and the state of the port is forwarding. What about switch 3?

18
00:01:14.000 --> 00:01:22.000
so on switch 3 enable sh spanning-tree vlan 10

19
00:01:22.000 --> 00:01:28.000
we can see in the output that gigabit 0/0 is a designated port, it's forwarding

20
00:01:28.000 --> 00:01:33.000
so this is a designated port and the state is forwarding.

21
00:01:33.000 --> 00:01:37.000
We can see that gigabit 0/1 is a root port

22
00:01:37.000 --> 00:01:42.000
and its forwarding, so this is a root port and the state is forwarding

23
00:01:42.000 --> 00:01:48.000
and we can also see that gigabit 0/2 is a designated port and its forwarding.

24
00:01:48.000 --> 00:01:52.000
So this is a designated port and the state is forwarding.

25
00:01:52.000 --> 00:02:04.000
What about switch 4? so on switch 4 sh spanning-tree vlan 10

26
00:02:04.000 --> 00:02:10.000
on this switch, we’ve got 2 ports that are in VLAN 10.

27
00:02:10.000 --> 00:02:14.000
The reason why this port is not showing up is that this port is in VLAN 20

28
00:02:14.000 --> 00:02:21.000
and gigabit 0/0 is the root port and is forwarding and 0/1 is the designated port

29
00:02:21.000 --> 00:02:26.000
and is forwarding, so this is the root port and status forwarding.

30
00:02:26.000 --> 00:02:31.000
This is a designated port and state is forwarding

31
00:02:31.000 --> 00:02:35.000
This port is in different VLAN, so it's not shown for VLAN 10.

32
00:02:35.000 --> 00:02:38.000
So I’m hoping you can see a problem here.

33
00:02:38.000 --> 00:02:42.000
I’ll take another screen shot of this topology.

34
00:02:42.000 --> 00:02:46.000
What I want you to see is that this port

35
00:02:46.000 --> 00:02:52.000
this port and this port have been taken out of the topology

36
00:02:52.000 --> 00:02:56.000
because of the ports being blocked by Spanning Tree.

37
00:02:56.000 --> 00:03:00.000
User data is not gonna be sent through the blocking ports.

38
00:03:00.000 --> 00:03:04.000
So logically from a user point of view.

39
00:03:04.000 --> 00:03:08.000
These ports are not connected to the topology

40
00:03:08.000 --> 00:03:12.000
even though they're there while those ports on the blocking state

41
00:03:12.000 --> 00:03:15.000
user traffic doesn’t go through those ports.

42
00:03:15.000 --> 00:03:20.000
Other traffics such as CDP and LLDP will go through a blocking port

43
00:03:20.000 --> 00:03:25.000
but user traffic doesn’t. So what is that mean?

44
00:03:25.000 --> 00:03:31.000
If this user is sending large files as an example, to this server

45
00:03:31.000 --> 00:03:38.000
that traffic will flow this way to get to the server which is inefficient.

46
00:03:38.000 --> 00:03:42.000
Traffic from this host will go this path to get to this server.

47
00:03:42.000 --> 00:03:48.000
So if a large number of hosts here were sending traffic to the server

48
00:03:48.000 --> 00:03:53.000
that traffic is having to go across this link between the 2 core switches

49
00:03:53.000 --> 00:03:58.000
and it could be over run because we only have 1 link that’s enabled.

50
00:03:58.000 --> 00:04:03.000
So if I clear this diagram up

51
00:04:03.000 --> 00:04:06.000
we only have 1 forwarding link here.

52
00:04:06.000 --> 00:04:11.000
The other link is broken and the path used is inefficient.

53
00:04:11.000 --> 00:04:14.000
one of the things that you must remember with the Spanning Tree

54
00:04:14.000 --> 00:04:17.000
is you must set the Spanning Tree root

55
00:04:17.000 --> 00:04:19.000
you don’t wanna allow Spanning Tree to determine

56
00:04:19.000 --> 00:04:23.000
where the root is without your input

57
00:04:23.000 --> 00:04:26.000
because the situation could be a lot worst than it is currently.

58
00:04:26.000 --> 00:04:30.000
If this switch became the root bridge of the topology

59
00:04:30.000 --> 00:04:32.000
it could be a lot worst

60
00:04:32.000 --> 00:04:35.000
because this switch would use this as it's root port

61
00:04:35.000 --> 00:04:37.000
this switch would use this as it's root port

62
00:04:37.000 --> 00:04:39.000
and let’s assume that the MAC address of this switch

63
00:04:39.000 --> 00:04:41.000
is lower than the switch or has a lower priority

64
00:04:41.000 --> 00:04:45.000
that would mean that this would be the root port of this edge switch.

65
00:04:45.000 --> 00:04:49.000
This port and this port would be designated port

66
00:04:49.000 --> 00:04:51.000
this would be a designated port

67
00:04:51.000 --> 00:04:55.000
and in this topology assuming that this has a lower bridge ID

68
00:04:55.000 --> 00:04:58.000
these ports would be designated ports.

69
00:04:58.000 --> 00:05:02.000
Let’s assume that this has a lower bridge ID than this

70
00:05:02.000 --> 00:05:05.000
this would be a designated port in that scenario

71
00:05:05.000 --> 00:05:08.000
which means that this port is blocked

72
00:05:08.000 --> 00:05:11.000
this port gets blocked and this port gets blocked.

73
00:05:11.000 --> 00:05:17.000
So now if this host has to send a large number of files to this server

74
00:05:17.000 --> 00:05:22.000
the traffic will flow like this to get to the server.

75
00:05:22.000 --> 00:05:26.000
Assume once again that you have many, many host devices here

76
00:05:26.000 --> 00:05:32.000
they are sending all their traffic via this access switch to get to the server.

77
00:05:32.000 --> 00:05:40.000
If this was a lower end switch let’s say it’s very old 2950 access switch

78
00:05:40.000 --> 00:05:43.000
and it became the root of your topology

79
00:05:43.000 --> 00:05:48.000
you would be forcing lots of lots of user data through this little switch

80
00:05:48.000 --> 00:05:53.000
and the same would be true if you have many, many access switches

81
00:05:53.000 --> 00:05:56.000
so imagine you have 20 access switches here

82
00:05:56.000 --> 00:06:01.000
all the user traffic on those 20 access switches would now be pushed through

83
00:06:01.000 --> 00:06:04.000
the access switch to get to the server

84
00:06:04.000 --> 00:06:07.000
that’s definitely not what we want.

85
00:06:07.000 --> 00:06:14.000
We wanna make sure that the core switches of the root switches

86
00:06:14.000 --> 00:06:17.000
and to improve this we want to make sure

87
00:06:17.000 --> 00:06:20.000
that one of the switches is the root for some VLANs

88
00:06:20.000 --> 00:06:25.000
so in this topology, we gonna make switch 1, the root for VLAN 1 and VLAN 10

89
00:06:25.000 --> 00:06:28.000
and we're gonna make this switch the root for other VLANs

90
00:06:28.000 --> 00:06:31.000
now in this topology, we would split it as follows

91
00:06:31.000 --> 00:06:36.000
because VLAN 10 hosts are connected to this switch

92
00:06:36.000 --> 00:06:41.000
and it’s gonna be more efficient if they send traffic directly to that core switch

93
00:06:41.000 --> 00:06:46.000
and this host VLAN 20 send their traffic directly to switch 2.

94
00:06:46.000 --> 00:06:52.000
So in our topology, we're going to make this switch the root for VLAN 1

95
00:06:52.000 --> 00:06:57.000
and VLAN 10 and this switch will be the root for VLAN 20

96
00:06:57.000 --> 00:07:01.000
that means once again that VLAN 10 host will send their traffic there

97
00:07:01.000 --> 00:07:05.000
and VLAN 20 hosts will send their traffic there.

98
00:07:05.000 --> 00:07:10.000
So let’s set that up.
