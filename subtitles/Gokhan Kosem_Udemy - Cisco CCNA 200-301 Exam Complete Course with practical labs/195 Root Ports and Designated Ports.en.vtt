WEBVTT
1
00:00:00.000 --> 00:00:07.000
So in this topology, let’s determine why certain ports are set to forwarding

2
00:00:07.000 --> 00:00:10.000
and why certain points are blocking

3
00:00:10.000 --> 00:00:12.000
so we'll work through the Spanning Tree process.

4
00:00:12.000 --> 00:00:17.000
The first decision that needs to be made is election of root bridge.

5
00:00:17.000 --> 00:00:20.000
So 1 of the switches in the topology

6
00:00:20.000 --> 00:00:23.000
needs to become the root of the Spanning Tree.

7
00:00:23.000 --> 00:00:27.000
So on switch 1 as we saw previously

8
00:00:27.000 --> 00:00:30.000
sh spanning-tree

9
00:00:30.000 --> 00:00:34.000
shows us that this switch or bridge is the root of the Spanning Tree.

10
00:00:34.000 --> 00:00:43.000
Switch 2 is not the root of this Spanning Tree.

11
00:00:43.000 --> 00:00:46.000
So in the output here we can see

12
00:00:46.000 --> 00:00:49.000
that it has a path cost to get to the root switch

13
00:00:49.000 --> 00:00:52.000
it sees that the root bridge or root switch

14
00:00:52.000 --> 00:00:55.000
has the root ID with priority of this

15
00:00:55.000 --> 00:01:00.000
and MAC address of this which is different to the local switch MAC address.

16
00:01:00.000 --> 00:01:04.000
So first decision, how is the root determined?

17
00:01:04.000 --> 00:01:07.000
It's based on lowest bridge ID

18
00:01:07.000 --> 00:01:10.000
which consist of the priority and MAC address.

19
00:01:10.000 --> 00:01:16.000
Switch 1 has the same priority as switch 2, 32769

20
00:01:16.000 --> 00:01:19.000
so that can't be used to determine the Spanning Tree root.

21
00:01:19.000 --> 00:01:23.000
So the tie breaker is based on the MAC address.

22
00:01:23.000 --> 00:01:25.000
so lowest MAC address will win

23
00:01:25.000 --> 00:01:29.000
switch 1 has a lower MAC address when compared to switch 2

24
00:01:29.000 --> 00:01:35.000
once again 0011 is the same on both switches

25
00:01:35.000 --> 00:01:41.000
but notice c6ea is greater and c6ac in hexadecimal

26
00:01:41.000 --> 00:01:44.000
so switch 1 becomes the root of the Spanning Tree.

27
00:01:44.000 --> 00:01:49.000
So that’s the first decision determine who the root bridge is.

28
00:01:49.000 --> 00:01:52.000
Once again priority 32768 is the default.

29
00:01:52.000 --> 00:01:56.000
So we’ve now determined who the root bridge is or root switch is.

30
00:01:56.000 --> 00:02:03.000
The next decision is that every non root switch needs to determine its root port

31
00:02:03.000 --> 00:02:06.000
the root port is at its best port to get to the root bridge.

32
00:02:06.000 --> 00:02:11.000
The root port is chosen based on lowest path cost.

33
00:02:11.000 --> 00:02:13.000
If there’s a tie-breaker on that

34
00:02:13.000 --> 00:02:18.000
then it's based on lowest neighbor bridge ID if path cost are the same.

35
00:02:18.000 --> 00:02:22.000
if that can't be used to determine the root port

36
00:02:22.000 --> 00:02:24.000
then the lowest port priority is used

37
00:02:24.000 --> 00:02:26.000
the port priority is 128 by default

38
00:02:26.000 --> 00:02:32.000
and if that can't be used then the lowest port ID is used as a tie-breaker.

39
00:02:32.000 --> 00:02:36.000
So first decision is based on lowest path cost.

40
00:02:36.000 --> 00:02:41.000
Here’s a table showing you the path cost of Cisco switches

41
00:02:41.000 --> 00:02:48.000
they are either based on a 1998 IEEE cost or 2004 IEEE cost.

42
00:02:48.000 --> 00:02:57.000
In the 1998 cost values, a 10 Meg link has a cost of 100, 100 Meg 19, I gig 4

43
00:02:57.000 --> 00:03:06.000
and 10 gig 2 and the IEEE cost in 2004 and later the cost changed to the following.

44
00:03:06.000 --> 00:03:11.000
So in our topology, we have gig interfaces on the switches

45
00:03:11.000 --> 00:03:15.000
and if we look at the path cost of various ports

46
00:03:15.000 --> 00:03:19.000
notice the value associated is 4

47
00:03:19.000 --> 00:03:23.000
so these gigabit links have a path cost value of 4

48
00:03:23.000 --> 00:03:28.000
which means that the switches are using the old path cost method

49
00:03:28.000 --> 00:03:32.000
to determine the best path to a destination.

50
00:03:32.000 --> 00:03:38.000
now the first decision is to determine the root port based on the path cost

51
00:03:38.000 --> 00:03:45.000
in this topology, we have gigabit 0/0 connected directly to switch 1

52
00:03:45.000 --> 00:03:48.000
gigabit 0/1 is also directly connected to switch 1

53
00:03:48.000 --> 00:03:52.000
gigabit 0/3 is connected to a hub

54
00:03:52.000 --> 00:03:54.000
which inturn connected to switch 1.

55
00:03:54.000 --> 00:04:01.000
So the path cost of gigabit 0/3 would be 8

56
00:04:01.000 --> 00:04:04.000
if there was a switch connected here

57
00:04:04.000 --> 00:04:10.000
but at the moment the path cost is 4 because we have a hub instead of a switch.

58
00:04:10.000 --> 00:04:16.000
So we have 3 ports with the same path cost to get to switch 1.

59
00:04:16.000 --> 00:04:20.000
on switch 2 we can type sh spanning root as an example

60
00:04:20.000 --> 00:04:28.000
and we can see that gigabit 0/0 was chosen as the root port to get to switch 1

61
00:04:28.000 --> 00:04:31.000
but that couldn’t have been determined based on the path cost

62
00:04:31.000 --> 00:04:35.000
it would need to be determined base on something else.

63
00:04:35.000 --> 00:04:39.000
So once again sh spanning-tree

64
00:04:39.000 --> 00:04:47.000
so on switch 2 its chosen gigabit 0/0 as its root port.

65
00:04:47.000 --> 00:04:51.000
Can path cost be used to determined the best path to the root bridge

66
00:04:51.000 --> 00:04:55.000
based on its port numbers and the answer is no

67
00:04:55.000 --> 00:04:59.000
the path cost of this link is 4, the path cost of this link is 4

68
00:04:59.000 --> 00:05:03.000
the path cost of this link is 4

69
00:05:03.000 --> 00:05:06.000
but that can’t be used as the determining factor.

70
00:05:06.000 --> 00:05:09.000
So the next choice is neighbor bridge ID.

71
00:05:09.000 --> 00:05:12.000
Now in this example switch, 2 is connected to switch 1

72
00:05:12.000 --> 00:05:16.000
on 2 ports that are directly connected to switch 1.

73
00:05:16.000 --> 00:05:20.000
so the neighboring bridge ID on both this port is the same

74
00:05:20.000 --> 00:05:22.000
so that cannot be used at as the tie-breaker

75
00:05:22.000 --> 00:05:26.000
the next decision criteria is based on priority

76
00:05:26.000 --> 00:05:29.000
but the priority of the ports are the same

77
00:05:29.000 --> 00:05:32.000
so that can't be used as a tie-breaker.

78
00:05:32.000 --> 00:05:35.000
So the port number is used as the tie-breaker.

79
00:05:35.000 --> 00:05:39.000
1 is a lower number than 2

80
00:05:39.000 --> 00:05:44.000
so hence gigabit 0/0 is chosen as the root port in this topology.

81
00:05:44.000 --> 00:05:49.000
now once the root ports are chosen on a per segment basis

82
00:05:49.000 --> 00:05:52.000
a designated port needs to be chosen.

83
00:05:52.000 --> 00:05:53.000
The easiest way to work this out

84
00:05:53.000 --> 00:06:00.000
is imagine that you have a PC in the middle of this cable

85
00:06:00.000 --> 00:06:03.000
and it needs to get to the root bridge

86
00:06:03.000 --> 00:06:07.000
using either the port on the left or the port on the right.

87
00:06:07.000 --> 00:06:08.000
So if I had a PC in this topology

88
00:06:08.000 --> 00:06:12.000
which port would it used to get to the root bridge

89
00:06:12.000 --> 00:06:13.000
and hopefully, it's fairly obvious

90
00:06:13.000 --> 00:06:18.000
that this port is closer to the root bridge than this port.

91
00:06:18.000 --> 00:06:23.000
and hence on this segment gigabit 0/0 to gigabit 0/0

92
00:06:23.000 --> 00:06:29.000
this port, port 0/0 on switch 1 is the designated port

93
00:06:29.000 --> 00:06:33.000
a designated port is the best port to use

94
00:06:33.000 --> 00:06:37.000
on a per segment basis to get to the root bridge.

95
00:06:37.000 --> 00:06:41.000
So this port is the best port to use on this top segment

96
00:06:41.000 --> 00:06:44.000
to get to the root bridge. What about this segment?

97
00:06:44.000 --> 00:06:48.000
So on this segment imagine once again that you had a PC here

98
00:06:48.000 --> 00:06:52.000
what's it's best port to use to get to the root bridge?

99
00:06:52.000 --> 00:06:56.000
Well it would be this port here on switch 1

100
00:06:56.000 --> 00:07:01.000
and once again on switch 1, we can see that by typing sh spanning-tree

101
00:07:01.000 --> 00:07:08.000
notice gigabit 0/1 on switch 1 is the designated port for this segment.

102
00:07:08.000 --> 00:07:10.000
The same it's true for this segment

103
00:07:10.000 --> 00:07:14.000
which is the best port to use to get to the root bridge?

104
00:07:14.000 --> 00:07:20.000
It's gonna be gigabit 0/3 on switch 1.

105
00:07:20.000 --> 00:07:25.000
And on this segment looking at layer 2 switches running spanning 3

106
00:07:25.000 --> 00:07:29.000
this port is the best port to use to get to the root bridge.

107
00:07:29.000 --> 00:07:33.000
So we've now chosen a designated port for this top link

108
00:07:33.000 --> 00:07:38.000
the 2nd link, these links through the hub as well as this link.

109
00:07:38.000 --> 00:07:41.000
The last remaining link is this link

110
00:07:41.000 --> 00:07:47.000
and the best port to use to get to the root bridge is this port on switch 2.

111
00:07:47.000 --> 00:07:51.000
Any other ports on the network will go blocking.

112
00:07:51.000 --> 00:07:56.000
So this port gigabit 0/1 is put in the blocking state

113
00:07:56.000 --> 00:08:00.000
and so is gigabit 0/3 also put in the blocking state.

114
00:08:00.000 --> 00:08:07.000
Now in Rapid Spanning Tree or Rapid PVST these are known as alternate ports.

115
00:08:07.000 --> 00:08:11.000
In other words, on these hubs as an example, if we have a PC connected to it.

116
00:08:11.000 --> 00:08:13.000
If this link went down

117
00:08:13.000 --> 00:08:18.000
PCs could send traffic into the network using this alternate port

118
00:08:18.000 --> 00:08:23.000
because it would now transition to the forwarding state when this link goes down.
