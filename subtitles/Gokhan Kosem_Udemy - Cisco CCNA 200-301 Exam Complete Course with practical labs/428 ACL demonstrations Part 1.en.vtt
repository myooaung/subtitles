WEBVTT
1
00:00:00.330 --> 00:00:06.840
So let's have a look at another example in this example we want to promote host 10 1 1 1 2 Servite 10

2
00:00:06.840 --> 00:00:07.900
1 2 1.

3
00:00:08.130 --> 00:00:14.730
So this host should be permitted to the server but we want to deny everyone our sending traffic to that

4
00:00:14.730 --> 00:00:15.410
server.

5
00:00:15.690 --> 00:00:19.280
But we also want to allow traffic to go to all other servers.

6
00:00:19.380 --> 00:00:22.220
Anyone else should be able to connect to all of the servers.

7
00:00:22.230 --> 00:00:27.480
So the first decision again is where we going to bind this Access Control List and in which direction.

8
00:00:27.480 --> 00:00:28.420
So we combine it.

9
00:00:28.440 --> 00:00:33.600
If Sirus the sirra inbound or we could binded on 0 1 outbound.

10
00:00:33.810 --> 00:00:40.350
The issue with trying to bind the access list on if seriously Zerah is that we cannot specify destination

11
00:00:40.350 --> 00:00:42.900
addresses with the standard IP access list.

12
00:00:42.960 --> 00:00:48.720
You can only specify source addresses so you won't be able to implement this statement that is deny

13
00:00:48.720 --> 00:00:55.760
everyone else to a specific server but allow traffic to all other servers because otherwise you're going

14
00:00:55.770 --> 00:01:02.550
to say deny any and the very next statement is going to be permit any which won't work because the permit

15
00:01:02.610 --> 00:01:04.130
any will never be used.

16
00:01:04.470 --> 00:01:07.610
So what we're going to do is we're going to bind it on this interface outbound.

17
00:01:07.740 --> 00:01:14.880
If serious Lesch one this also follows best practices which say that you should bind stented IP access

18
00:01:14.880 --> 00:01:17.870
lists as close to the destination as possible.

19
00:01:17.880 --> 00:01:19.930
I'll explain more about that in a moment.

20
00:01:21.280 --> 00:01:25.600
So on our router we could configure this access control lists by going into global configuration mode

21
00:01:26.470 --> 00:01:37.220
and topping X-ists list and let's choose number three Palmet 10 Doc wondered wondered 1.1 and then we

22
00:01:37.220 --> 00:01:42.860
could go into the interface if there is one on top of Common IP access group.

23
00:01:43.970 --> 00:01:46.560
Three out.

24
00:01:46.720 --> 00:01:50.080
So once again I could do the C'mon show access lists

25
00:01:53.630 --> 00:01:56.740
which just show me that simple is that I've just created.

26
00:01:56.760 --> 00:02:02.760
The catch here was to remember a way to bind the access list and to remember that you don't need a deny

27
00:02:02.850 --> 00:02:07.720
any at the end because there's an implicit deny in an access list statement.

28
00:02:08.020 --> 00:02:10.480
Werman Explain what this number 10 means in a moment.

29
00:02:11.890 --> 00:02:17.230
In this example you want to permit subnet 10 1 1 0 and then deny everyone else.

30
00:02:17.230 --> 00:02:20.700
Once again we would bind the Access Control List inbound on fust.

31
00:02:20.710 --> 00:02:25.790
Ethan it seriously Sarah says to make the access list as efficient as possible.

32
00:02:25.830 --> 00:02:31.750
We once again don't want the rodder having to process packets internally just to have them dropped on

33
00:02:31.750 --> 00:02:33.860
an external outbound interface.

34
00:02:34.000 --> 00:02:37.270
So we'll bind the Access Control List inbound.

35
00:02:37.540 --> 00:02:44.990
So on our router going into global configuration mode the come on access list and in this case choose

36
00:02:45.000 --> 00:02:53.520
number four and we will permit in this case a specific subnet so 10.0 wondered 1.0.

37
00:02:53.910 --> 00:02:58.580
And then we need to put in the wildcard mosque 0 in binary means match.

38
00:02:58.590 --> 00:03:05.550
So the first octet 10 match second Optik one must match that octet one must match at the last octet

39
00:03:05.550 --> 00:03:07.640
can be equal to anything.

40
00:03:07.780 --> 00:03:11.550
There's an implicit deny so we don't have to specify anything else.

41
00:03:11.550 --> 00:03:20.110
However if you want to log information you could do the following X's list for denie and notice the

42
00:03:20.110 --> 00:03:20.940
option.

43
00:03:21.070 --> 00:03:28.690
Any notice this option log that would allow us to log information to assist log server or log locally

44
00:03:28.690 --> 00:03:32.130
on the router so that we can see which packets were denied.

45
00:03:32.380 --> 00:03:38.230
When it comes to logging it's best practice not to log locally on the router but to push it to a server

46
00:03:38.230 --> 00:03:40.000
like a log server.

47
00:03:40.000 --> 00:03:45.910
The reason for that is that the Rodda has limited space for storing log messages whereas if you store

48
00:03:45.930 --> 00:03:51.610
them on a server you can store huge amounts of data because of the size of hard disks these days.

49
00:03:51.610 --> 00:03:56.560
So it makes sense to back the logging information off to an external server.

50
00:03:56.920 --> 00:04:08.460
The last step in this example is to go interface zero zero and topic come on IP X's group for in once

51
00:04:08.460 --> 00:04:10.470
again I can do the come on the access list

52
00:04:13.980 --> 00:04:20.580
if I just wanted to see that specific access list but a number in access list for you can see the first

53
00:04:20.580 --> 00:04:25.920
line is saying permit 10 1 1 0 with wild card bets 0 0 0 2 4 5.

54
00:04:26.370 --> 00:04:33.540
And the second line is saying deny any and log better information show IP interface.

55
00:04:33.600 --> 00:04:39.700
Seriously Ceara is showing me that the inbound access list is for.

56
00:04:39.940 --> 00:04:45.580
So we have bound X's list for inbound on Fosset Ethan 0 0.

57
00:04:45.600 --> 00:04:47.830
Now this example the interface is shut down.

58
00:04:48.060 --> 00:04:52.290
I'm not too concerned because I'm just showing you the syntax of the access lists rather than showing

59
00:04:52.290 --> 00:04:54.520
you working example.

60
00:04:54.540 --> 00:04:59.040
Be careful with adding an explicit denie as I did in this example.

61
00:04:59.100 --> 00:05:04.770
You need to read between the lines in the questions and make sure that you are explicitly asked to deny

62
00:05:04.770 --> 00:05:12.270
traffic if not asked don't add the line deny any because they may be testing you to make sure you know

63
00:05:12.270 --> 00:05:13.890
about the implicit deny.

64
00:05:14.010 --> 00:05:17.000
At the end of every access list.

65
00:05:17.110 --> 00:05:23.450
Another example in this case we want to permit 10 1 1 1 to telnet to the router.

66
00:05:23.800 --> 00:05:29.170
And then we want to deny everyone else telling it to the router and allow traffic anywhere else.

67
00:05:29.200 --> 00:05:31.930
Now once again you need to read between the lines carefully.

68
00:05:31.930 --> 00:05:35.690
In this example we are setting up a standard Access Control list.

69
00:05:36.010 --> 00:05:43.150
So the only way to do this is to bind the stented Access Control List on the Viti Wilens remembers stented

70
00:05:43.180 --> 00:05:48.040
IP access lists cannot determine protocol or destination addresses.

71
00:05:48.070 --> 00:05:54.550
So if the example is asking for a standard IP access list to deny or permit telnet then you know that

72
00:05:54.550 --> 00:05:58.720
you have to bind that access list on the Viti y lines.

73
00:05:58.720 --> 00:06:07.680
So as an example I'm going to telnet to Arata this case the address is 10 0 0 2 farfel but in my username

74
00:06:09.390 --> 00:06:17.670
put in my password topping the C'mon show run time section a line will show me what's configured on

75
00:06:17.670 --> 00:06:19.390
the lines of this router.

76
00:06:20.950 --> 00:06:25.780
As you can see here there are no access lists on the Viti wildlands of this router.

77
00:06:25.960 --> 00:06:29.510
So then I could do the following access list.

78
00:06:29.530 --> 00:06:39.240
Let's just pick a number like 10 Palmet and notice the IP address is 10 1 1 1 no one else is allowed

79
00:06:39.240 --> 00:06:47.290
to telnet to the router so commit 10 1 1 1 and then I can go onto the line between Solangi 2 0 0 for

80
00:06:48.700 --> 00:06:56.260
Anani to use the command access Clauss rather than Access group noted you can specify either standard

81
00:06:56.350 --> 00:07:02.770
IP access list or extended Atiyah access lists in early Iris's you could only choose standard on the

82
00:07:02.770 --> 00:07:03.790
access lists.

83
00:07:03.880 --> 00:07:07.730
But these days you can use both standon an extended ACL.

84
00:07:07.990 --> 00:07:10.280
So I'm going to choose 10.

85
00:07:10.420 --> 00:07:15.270
And notice I can fold the incoming telnet connections or outgoing telnet connections.

86
00:07:15.510 --> 00:07:16.770
So I'm going to specify in

87
00:07:19.620 --> 00:07:21.560
an I'm going to try and telnet to the Rodda again.

88
00:07:21.600 --> 00:07:25.230
So telnet 10 0 0 2 5 4.

89
00:07:25.470 --> 00:07:33.320
And notice the telnet connection does not open because we are denying telnet to the Rodda just to prove

90
00:07:33.320 --> 00:07:34.040
that to you.

91
00:07:34.160 --> 00:07:43.280
If I remove this access Clauss and then put it back on again notice I'm able to telnet and I can successfully

92
00:07:43.280 --> 00:07:54.520
log in it's just connect with that access list back again Tron telnet and noticed that telnet is denied.

93
00:07:54.850 --> 00:08:02.320
So please don't forget about access lists that can be bound on Viti Why lines to permit or deny telnet

94
00:08:02.350 --> 00:08:05.100
or access to a router.

95
00:08:05.130 --> 00:08:16.670
Once again show run pipe section a line shows me that I have the access Clause 10 down inbound on the

96
00:08:16.670 --> 00:08:25.010
Viti y line some unable to tell me from my PCP to have a look at the IP address of my PC as you'll see

97
00:08:25.010 --> 00:08:35.960
here the IP address is 10 0 0 1 so on the route to what topic I'm on no access list.

98
00:08:36.220 --> 00:08:37.240
10.

99
00:08:37.310 --> 00:08:38.150
Be careful with that.

100
00:08:38.150 --> 00:08:41.740
Come on it doesn't just remove a line on the access list.

101
00:08:41.750 --> 00:08:44.050
It deletes the entire access list.

102
00:08:44.120 --> 00:08:51.530
So topping the on do show access list 10 schemin that that access list does not exist.

103
00:08:51.560 --> 00:08:58.330
So I've just deleted the access list entirely but I caught up to come on X-ists list 10 minute 10 0

104
00:08:58.400 --> 00:09:02.390
0 1 and then go into my line bt why.

105
00:09:02.450 --> 00:09:04.170
Just make sure that it's found.

106
00:09:04.470 --> 00:09:16.390
So access Clauss 10 in now if I tried telnet noticed that telnet is successful.

107
00:09:16.570 --> 00:09:18.130
So I'm able to tell that to the Rodda

108
00:09:23.670 --> 00:09:27.260
that is via the come on do show access list 10.

109
00:09:27.560 --> 00:09:35.060
You can see that there are two matches on the sexist list but Telenet again do show come on.

110
00:09:35.100 --> 00:09:36.920
Notice the matches are increasing.

111
00:09:38.070 --> 00:09:42.780
Can I still tell it to the right if I delete this access list so I'm going to topic them on the access

112
00:09:42.780 --> 00:09:43.350
list.

113
00:09:44.920 --> 00:09:47.980
10 Do the show command.

114
00:09:48.240 --> 00:09:50.600
And as you can see the access list has been removed.

115
00:09:52.030 --> 00:09:55.810
I'll disconnect my telling it's issue and let me see if I can tell it again.

116
00:09:55.870 --> 00:10:06.480
And as you can see I can gain access to show run type section line

117
00:10:09.590 --> 00:10:14.400
showed me that the access list is still bound and this is a big gotcha.

118
00:10:14.400 --> 00:10:17.410
This also applies to access list bound on interfaces.

119
00:10:17.520 --> 00:10:21.540
You can bind a nonexistent access list on an interface.

120
00:10:21.630 --> 00:10:27.810
It's very dangerous because if someone later on credit that access list and let's say inadvertently

121
00:10:27.810 --> 00:10:33.480
configured it for something else that access list would immediately become active and traffic would

122
00:10:33.480 --> 00:10:38.440
be denied or permitted unexpectedly as per the new access list.

123
00:10:38.760 --> 00:10:43.370
So let's say we permitted 10 1 to 2 to 1 for argument's sake.

124
00:10:43.500 --> 00:10:50.510
Now suddenly by telling it back to the router notice the telnet session is denied.

125
00:10:50.510 --> 00:10:55.810
Be very careful with your access lists create them then bind them.

126
00:10:56.060 --> 00:10:59.420
If you delete them remove them from the bindings.

127
00:10:59.420 --> 00:11:03.890
In other words remove them from the Viti y lines or from the interfaces.

128
00:11:03.920 --> 00:11:11.060
Do not allow non-existent access lists to be bound to interfaces and do not allow access lists just

129
00:11:11.060 --> 00:11:14.960
to exist in a configuration not being bound anyway.
