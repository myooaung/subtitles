WEBVTT
1
00:00:00.000 --> 00:00:05.000
In summary hubs reside at the physical layer of the OSI model.

2
00:00:05.000 --> 00:00:07.000
They are not intelligent.

3
00:00:07.000 --> 00:00:10.000
They do not understand the frames that they are repeating

4
00:00:10.000 --> 00:00:15.000
they simply amplify the signal that they receive out of all other ports

5
00:00:15.000 --> 00:00:18.000
except the ports on which it was received.

6
00:00:18.000 --> 00:00:22.000
Hubs were good for their time, but in general today have been replaced by switches.

7
00:00:22.000 --> 00:00:25.000
Now there's always an exception to the rule.

8
00:00:25.000 --> 00:00:31.000
Wireless networks act like hubs, if you have a 54 Mbps wireless network

9
00:00:31.000 --> 00:00:39.000
be careful, it’s not 54 Mbps dedicated or if you have a 200 Mbps wireless network

10
00:00:39.000 --> 00:00:44.000
be careful it’s shared between all devices on the wireless network

11
00:00:44.000 --> 00:00:49.000
So you need to divide the speed of your wireless network

12
00:00:49.000 --> 00:00:52.000
by the devices connected to a access point.

13
00:00:52.000 --> 00:00:57.000
Wireless network also have other issues which reduce the throughput even more

14
00:00:57.000 --> 00:01:02.000
but the moral of the story is wireless networks operate as hubs.

15
00:01:02.000 --> 00:01:05.000
Hubs are shared devices that would good for their time

16
00:01:05.000 --> 00:01:08.000
but are very slow when compared to today's switches.

17
00:01:08.000 --> 00:01:11.000
So overtime hubs were replaced by bridges

18
00:01:11.000 --> 00:01:15.000
and bridges in turn have been receives by switches.

19
00:01:15.000 --> 00:01:21.000
A bridge is a layer 2 device, in other words it resides at the data link layer

20
00:01:21.000 --> 00:01:25.000
of the OSI model, bridges are more intelligent than hubs.

21
00:01:25.000 --> 00:01:29.000
They use something called a MAC address table

22
00:01:29.000 --> 00:01:32.000
to learn where devices are in the topology.

23
00:01:32.000 --> 00:01:36.000
So rather than simply just repeating the signal

24
00:01:36.000 --> 00:01:40.000
and sending traffic out of all ports without understanding it.

25
00:01:40.000 --> 00:01:46.000
Bridges maintain a table with a list of MAC addresses learned in this topology.

26
00:01:46.000 --> 00:01:50.000
So in our sample network we have 4 devices A, B, C and D

27
00:01:50.000 --> 00:01:53.000
and the hub is being replaced by a bridge.

28
00:01:53.000 --> 00:01:56.000
The topology is still a star topology.

29
00:01:56.000 --> 00:02:00.000
So the main change here, is the hub has been replaced with the bridge.

30
00:02:00.000 --> 00:02:04.000
Bridges store Mac address in the Mac address table

31
00:02:04.000 --> 00:02:06.000
and that in turn is stored in software.

32
00:02:06.000 --> 00:02:11.000
Bridges are therefore very slow in comparison to modern day devices like switches.

33
00:02:11.000 --> 00:02:16.000
Switches and bridges operate in a very similar way, but bridges do the processing

34
00:02:16.000 --> 00:02:21.000
and software where as switches do the processing and hardware.

35
00:02:21.000 --> 00:02:27.000
Switches use something called an ASIC or Application Specific Integrated Circuit

36
00:02:27.000 --> 00:02:32.000
which allows for high throughput, very quick table lookups and forwarding of traffic

37
00:02:32.000 --> 00:02:36.000
often at line rate, in other words switches don’t slow the traffic down.

38
00:02:36.000 --> 00:02:41.000
Bridges were the predecessors to switches and did things in software.

39
00:02:41.000 --> 00:02:46.000
They were a lot slower, but from a forwarding point of view bridges and switches

40
00:02:46.000 --> 00:02:50.000
forward traffic on a layer 2 segment in the same way

41
00:02:50.000 --> 00:02:54.000
except switches do it in hardware and bridges do it in software.

42
00:02:54.000 --> 00:02:57.000
So what does a bridge do when it receives a frame?

43
00:02:57.000 --> 00:02:59.000
So in the similar way to the previous example.

44
00:02:59.000 --> 00:03:04.000
Host A is sending traffic to host C, the source MAC address in the frame is A

45
00:03:04.000 --> 00:03:08.000
the destination address in the frame is C, when the bridge boots up

46
00:03:08.000 --> 00:03:10.000
its MAC address table is empty

47
00:03:10.000 --> 00:03:14.000
in other words its do not contain dynamically learned MAC addresses.

48
00:03:14.000 --> 00:03:18.000
MAC addresses can be statically configured by an administrator

49
00:03:18.000 --> 00:03:22.000
but in this example let’s assume that Mac address are gonna be learned dynamically.

50
00:03:22.000 --> 00:03:27.000
So at the moment the table is empty, when a frame arrives on port 1

51
00:03:27.000 --> 00:03:34.000
on the bridge sent by host A, the bridge now knows that host A is connected to port 1

52
00:03:34.000 --> 00:03:38.000
and can add MAC address A to its MAC address table

53
00:03:38.000 --> 00:03:43.000
and essentially creates a mapping saying that MAC address A can be found on port 1

54
00:03:43.000 --> 00:03:47.000
So it’s now learned where A is in the topology.

55
00:03:47.000 --> 00:03:50.000
However it doesn't know where C is in the topology

56
00:03:50.000 --> 00:03:53.000
because that information is not in its MAC address table yet.

57
00:03:53.000 --> 00:03:57.000
In other words because it doesn’t know where C is, its gonna send the frame out of all

58
00:03:57.000 --> 00:04:03.000
ports except the port on which would was received to ensure that C receives the frame.

59
00:04:03.000 --> 00:04:07.000
Now because the frame is sent out of all ports, both B and D receive a copy of the

60
00:04:07.000 --> 00:04:11.000
frame but they will drop it because the frame is not destined to them.

61
00:04:11.000 --> 00:04:16.000
So in other words the network interface cards on NICs on Pc's B and D

62
00:04:16.000 --> 00:04:21.000
will read the destination MAC address and see that it's destined to C

63
00:04:21.000 --> 00:04:24.000
and not themselves and therefore drop the frame.

64
00:04:24.000 --> 00:04:30.000
The network interface card on host C will receive the frame, strip the layer 2 headers

65
00:04:30.000 --> 00:04:33.000
and pass the information to high layer protocols

66
00:04:33.000 --> 00:04:38.000
and it does that because the destination MAC address on the frame is C.
