WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.200 --> 00:00:02.250
So far in this course,

00:00:02.250 --> 00:00:05.580
we've looked mainly at how things work on the front-end.

00:00:05.580 --> 00:00:08.025
We've built user interfaces,

00:00:08.025 --> 00:00:10.905
different layouts, looked at responsive design,

00:00:10.905 --> 00:00:13.395
and also, how to use JavaScript.

00:00:13.395 --> 00:00:18.150
This is all great and really important that we understand all of this.

00:00:18.150 --> 00:00:20.100
From this section onwards,

00:00:20.100 --> 00:00:24.150
we are also going to be looking more at the back-end of websites.

00:00:24.150 --> 00:00:27.119
How a websites will interact with servers,

00:00:27.119 --> 00:00:30.075
different data sources, and generally,

00:00:30.075 --> 00:00:33.220
how they communicate with external sources.

00:00:33.220 --> 00:00:36.210
When our user interface is communicating with

00:00:36.210 --> 00:00:40.425
servers or generally requesting any information,

00:00:40.425 --> 00:00:45.600
there are some concepts we need to know to fully understand what is happening.

00:00:45.600 --> 00:00:50.765
We don't need to be an expert to go too deep into each one of these concepts.

00:00:50.765 --> 00:00:53.795
As most come as a topic on their own,

00:00:53.795 --> 00:00:55.295
but having, at least,

00:00:55.295 --> 00:01:00.205
a general understanding will really help us understand what is going on.

00:01:00.205 --> 00:01:05.185
The first concept we're going to look at is the client server model.

00:01:05.185 --> 00:01:07.590
As you can see here from the slide,

00:01:07.590 --> 00:01:11.135
over on the left-hand side we have some examples of clients.

00:01:11.135 --> 00:01:13.490
A client can be a web browser,

00:01:13.490 --> 00:01:17.605
a phone, or even a terminal on our computer.

00:01:17.605 --> 00:01:21.650
Basically, the client is the one which makes the requests,

00:01:21.650 --> 00:01:25.705
such as a requesting any web pages which you want to view.

00:01:25.705 --> 00:01:27.650
On the right-hand side,

00:01:27.650 --> 00:01:31.430
we have the server which provides these resources,

00:01:31.430 --> 00:01:34.805
all the services which the client is requesting,

00:01:34.805 --> 00:01:36.875
such as our webpage,

00:01:36.875 --> 00:01:40.345
which it will send back to the client if it has it.

00:01:40.345 --> 00:01:42.545
When a client makes a request,

00:01:42.545 --> 00:01:44.840
such as requesting a webpage,

00:01:44.840 --> 00:01:48.155
this is called a HTTP request.

00:01:48.155 --> 00:01:53.435
HTTP stands for Hypertext Transfer Protocol.

00:01:53.435 --> 00:01:56.255
This is the standard or the procedure used

00:01:56.255 --> 00:02:00.445
when transferring hypertext data across the web.

00:02:00.445 --> 00:02:03.950
The client goes ahead and makes the request,

00:02:03.950 --> 00:02:09.145
and then the server will try to respond to that request if possible.

00:02:09.145 --> 00:02:14.615
It may respond with things such as the HTML required for the webpage,

00:02:14.615 --> 00:02:19.380
any images, or any scripts which may be needed too.

00:02:19.790 --> 00:02:23.165
Although this may sound a little complex,

00:02:23.165 --> 00:02:27.805
it is something which we do each time we visit a web browser.

00:02:27.805 --> 00:02:31.610
First of all, if we go to the Wikipedia homepage,

00:02:31.610 --> 00:02:35.990
over at the top, you'll notice that HTTPS is at the beginning.

00:02:35.990 --> 00:02:39.530
This is like the HTTP we mentioned before.

00:02:39.530 --> 00:02:46.010
But nowadays, HTTP secure is more commonly used as it provides an encrypted version,

00:02:46.010 --> 00:02:48.910
a greater security, and privacy.

00:02:48.910 --> 00:02:52.840
Once we enter a URL and hit "Enter",

00:02:52.840 --> 00:02:55.070
the web browser, or in our case,

00:02:55.070 --> 00:02:59.525
the client is now making a request for this webpage.

00:02:59.525 --> 00:03:01.430
If everything went okay,

00:03:01.430 --> 00:03:07.660
the server will then respond with the requested page and then display it in the browser.

00:03:07.660 --> 00:03:13.430
This request response cycle also works the same for other clients too,

00:03:13.430 --> 00:03:15.830
such as a computer terminal,

00:03:15.830 --> 00:03:17.675
which is also a client.

00:03:17.675 --> 00:03:20.080
Let's open up the terminal.

00:03:20.080 --> 00:03:22.650
Make this a little bit bigger.

00:03:22.650 --> 00:03:26.480
We'll use a terminal more once we get to the node section of

00:03:26.480 --> 00:03:30.740
this course and you don't need to follow along with the section if you don't want to.

00:03:30.740 --> 00:03:33.755
But all I'm going to use is a cURL command,

00:03:33.755 --> 00:03:38.275
which also makes a HTTP request from the terminal.

00:03:38.275 --> 00:03:40.830
We do this by typing cURL,

00:03:40.830 --> 00:03:42.950
and then we can type our URL,

00:03:42.950 --> 00:03:46.320
just like we looked at before inside the browser.

00:03:47.800 --> 00:03:53.970
HTTPS:// and then www.wikipedia.org.

00:03:57.830 --> 00:04:00.465
Then hit "Enter".

00:04:00.465 --> 00:04:05.540
Then if we scroll up to see a lot of information is being returned back to us.

00:04:05.540 --> 00:04:10.775
This is all the HTML which is used for the Wikipedia website.

00:04:10.775 --> 00:04:12.470
A lot of this will look common,

00:04:12.470 --> 00:04:14.090
such as the divs,

00:04:14.090 --> 00:04:18.920
our span tags, and all the various classes which are added these.

00:04:18.920 --> 00:04:21.695
It can't be a little bit difficult to read.

00:04:21.695 --> 00:04:24.830
This is because a terminal doesn't know how

00:04:24.830 --> 00:04:28.325
to deal with this HTML which is returned back to us,

00:04:28.325 --> 00:04:31.285
so it's just displayed as plain text.

00:04:31.285 --> 00:04:36.245
On the other hand, a web browser knows exactly what to do with this HTML.

00:04:36.245 --> 00:04:38.510
So if go over to the browser,

00:04:38.510 --> 00:04:41.995
and right-click and then go to View Page Source,

00:04:41.995 --> 00:04:44.720
this can also be a little bit hard to read,

00:04:44.720 --> 00:04:49.580
but this is the same information which is being sent back from the server.

00:04:49.580 --> 00:04:52.715
The difference being the web browser knows how to deal with

00:04:52.715 --> 00:04:57.790
this information and how to then convert it into a web page.

00:04:57.790 --> 00:05:01.220
When we make a HTTP request,

00:05:01.220 --> 00:05:04.565
there is various request methods we can use.

00:05:04.565 --> 00:05:07.745
Here we can see four examples called GET,

00:05:07.745 --> 00:05:10.655
POST, PUT, and DELETE.

00:05:10.655 --> 00:05:15.355
There is more than these four, but these are common ones to get us started.

00:05:15.355 --> 00:05:17.610
When we want to get a webpage,

00:05:17.610 --> 00:05:19.275
or we want to get some data,

00:05:19.275 --> 00:05:22.145
we can use what's called a GET request.

00:05:22.145 --> 00:05:26.485
This is what is used in the browser to get our webpage from the server.

00:05:26.485 --> 00:05:32.120
POST will do the opposite and submit some data to the server for processing,

00:05:32.120 --> 00:05:35.815
such as adding a new record into a database.

00:05:35.815 --> 00:05:38.520
Next we have the PUT request.

00:05:38.520 --> 00:05:44.410
Just like POST, this will also submit some data to the server to process.

00:05:44.410 --> 00:05:50.270
However, the difference being if this data or the resource already exists on the server,

00:05:50.270 --> 00:05:52.535
it will go ahead and replace it.

00:05:52.535 --> 00:05:56.320
This is used commonly for updating some data.

00:05:56.320 --> 00:06:00.920
The final one is the DELETE and this is pretty self-explanatory.

00:06:00.920 --> 00:06:05.515
This will delete the resource or the data which we specify.

00:06:05.515 --> 00:06:08.405
We will use some of these methods during this course,

00:06:08.405 --> 00:06:12.835
particularly in the final project when interacting with a database.

00:06:12.835 --> 00:06:16.730
Part of this response from the server is also a status code.

00:06:16.730 --> 00:06:18.649
There are many different responses,

00:06:18.649 --> 00:06:20.710
but here are some examples.

00:06:20.710 --> 00:06:25.700
A code of 200 means the request was successful and

00:06:25.700 --> 00:06:31.735
the requested resource is sent back to the client's inside the body of the response.

00:06:31.735 --> 00:06:34.360
Next up we have the 301 response,

00:06:34.360 --> 00:06:36.650
which is a redirection message.

00:06:36.650 --> 00:06:41.975
This means the resource which we are trying to request has been moved permanently.

00:06:41.975 --> 00:06:46.210
We usually get the new URI given with the response.

00:06:46.210 --> 00:06:50.960
A 401 response means the client is unauthorized,

00:06:50.960 --> 00:06:55.930
usually requiring authentication before receiving the requested response.

00:06:55.930 --> 00:07:00.470
404 is a common one which you may have already seen when browsing the web.

00:07:00.470 --> 00:07:03.185
This is common when a page cannot be found,

00:07:03.185 --> 00:07:07.140
such as when a user mistypes a URL.

00:07:08.410 --> 00:07:12.785
A lot of this may just appear to happen in the background by magic,

00:07:12.785 --> 00:07:17.710
but we can get a better idea of what is going on inside the developer tools.

00:07:17.710 --> 00:07:21.500
If we return back to any web page such as Wikipedia,

00:07:21.500 --> 00:07:26.010
and then right-click, and then inspect, inside here,

00:07:26.010 --> 00:07:29.810
we can go to the Network tab, just at the top here,

00:07:29.810 --> 00:07:33.500
and then hit Refresh and then can see

00:07:33.500 --> 00:07:37.120
we have a lot of different file names which were returned back to us.

00:07:37.120 --> 00:07:39.240
We have the main page.

00:07:39.240 --> 00:07:41.865
We have some various JPEG images.

00:07:41.865 --> 00:07:43.710
We have some scripts,

00:07:43.710 --> 00:07:46.940
some PNG images and scrolling down,

00:07:46.940 --> 00:07:50.495
we see all these are returned back to us from the server.

00:07:50.495 --> 00:07:55.970
We can also see the status code too and most of these are code of 200,

00:07:55.970 --> 00:07:57.530
which we looked at before.

00:07:57.530 --> 00:08:00.775
This means the request was successful.

00:08:00.775 --> 00:08:03.170
If we look at the main page at the top,

00:08:03.170 --> 00:08:07.555
we can see a status code of 304 for this homepage.

00:08:07.555 --> 00:08:12.259
This means the page has not been modified since the last request,

00:08:12.259 --> 00:08:16.745
therefore, the browser can use what is called a cached version.

00:08:16.745 --> 00:08:20.370
A cache is a temporary storage and browsers will

00:08:20.370 --> 00:08:24.155
use a cache to store our webpages once we visit them,

00:08:24.155 --> 00:08:27.410
so they can be accessed faster and also reduce

00:08:27.410 --> 00:08:31.390
the need to keep making additional server requests.

00:08:31.390 --> 00:08:38.005
This is why if we go up to the top and click on Disable cache, it reloads.

00:08:38.005 --> 00:08:43.220
We now see that this main page now has a status code of 200.

00:08:43.220 --> 00:08:48.380
This means we're now making a fresh request to the server for this webpage,

00:08:48.380 --> 00:08:52.850
rather than storing it inside the browser for quick access.

00:08:52.850 --> 00:08:56.495
Now, if we uncheck this and then refresh,

00:08:56.495 --> 00:08:59.345
we can now see the status code of 304,

00:08:59.345 --> 00:09:01.970
meaning we're using the stored version inside

00:09:01.970 --> 00:09:05.695
the browser rather than making a new request.

00:09:05.695 --> 00:09:10.325
This is an overview of how things work between the client and the server.

00:09:10.325 --> 00:09:14.930
Even by having just a basic knowledge of these concepts will really help you

00:09:14.930 --> 00:09:20.330
understand what is going on behind the scenes and really help you as a developer.

00:09:20.330 --> 00:09:24.620
Next up, we'll be looking at APIs and how we can use them in

00:09:24.620 --> 00:09:30.300
our websites or applications to get data from external sources.
