WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.200 --> 00:00:05.070
Now it's time to look at another important part of building websites,

00:00:05.070 --> 00:00:07.590
and this is JavaScript events.

00:00:07.590 --> 00:00:10.155
Events are triggered in many ways,

00:00:10.155 --> 00:00:11.940
when a button is clicked,

00:00:11.940 --> 00:00:13.500
this can trigger an event,

00:00:13.500 --> 00:00:15.735
when a mouse hovers over an elements,

00:00:15.735 --> 00:00:17.925
this can trigger an event too,

00:00:17.925 --> 00:00:20.295
even when the page first loads,

00:00:20.295 --> 00:00:22.665
this can trigger an onload event.

00:00:22.665 --> 00:00:26.940
We can then decide what we want to do when these events happens.

00:00:26.940 --> 00:00:30.800
For example, we could run a function when a button is clicked,

00:00:30.800 --> 00:00:35.620
or we could change the color of an element when a mouse hovers over it.

00:00:35.620 --> 00:00:40.995
Here on the W3 Schools website under the HTML DOM events,

00:00:40.995 --> 00:00:44.105
there's a huge list of events we can listen for,

00:00:44.105 --> 00:00:46.405
if we were to scroll down.

00:00:46.405 --> 00:00:49.170
First of all, we have the mouse events,

00:00:49.170 --> 00:00:51.014
so we have onclick,

00:00:51.014 --> 00:00:54.480
we have ondouble-click, onmouseleave,

00:00:54.480 --> 00:00:59.175
onmouseenter, onmouseover, out, and up.

00:00:59.175 --> 00:01:00.680
Further down we also have

00:01:00.680 --> 00:01:04.355
keyboard events which are triggered when various keys are pressed.

00:01:04.355 --> 00:01:09.785
For example, we can trigger an event when the keyboard button is pressed up or down

00:01:09.785 --> 00:01:13.040
and there's pretty much every kind of event to

00:01:13.040 --> 00:01:16.355
cover us for pretty much anything which can happen on a web page,

00:01:16.355 --> 00:01:21.940
including forms here, we can decide what we want to do with things such as onchange,

00:01:21.940 --> 00:01:27.710
onsearch, or onsubmit, which is what to do when the form has been submitted.

00:01:27.710 --> 00:01:29.645
There's also drag events,

00:01:29.645 --> 00:01:32.935
clipboard events, and so many more.

00:01:32.935 --> 00:01:36.680
We're going to be using some of these during this video and this

00:01:36.680 --> 00:01:40.460
gives us so many options which we can respond to inside of our code.

00:01:40.460 --> 00:01:42.680
If we head over to the starter files,

00:01:42.680 --> 00:01:45.805
we can go ahead and take a look at some examples.

00:01:45.805 --> 00:01:48.465
Go over to the JavaScript events file,

00:01:48.465 --> 00:01:51.870
and then let's get started inside of our example.

00:01:51.870 --> 00:01:57.380
Here we have some simple text inside of a P element and then inside the script,

00:01:57.380 --> 00:01:59.465
we've got a arrow function.

00:01:59.465 --> 00:02:02.720
Inside here, we just changed the style of

00:02:02.720 --> 00:02:07.740
the font size to be 34 pixels and then run this function.

00:02:07.740 --> 00:02:10.385
We'll go to the browser and reload.

00:02:10.385 --> 00:02:14.830
This is the text which we have after the style has been applied.

00:02:14.830 --> 00:02:19.900
Currently we're calling our function inside of the script, which is just here.

00:02:19.900 --> 00:02:23.960
If you wanted this function to only run when something happens,

00:02:23.960 --> 00:02:27.695
such as a user moving the mouse over the text,

00:02:27.695 --> 00:02:31.030
we can add this function called into an event.

00:02:31.030 --> 00:02:40.080
Inside the P element just here inside the open inside we're going to add onmouseover,

00:02:40.080 --> 00:02:42.620
and this is the name of one of the events which we've seen

00:02:42.620 --> 00:02:47.165
before and then we can set this equal to the name of our function,

00:02:47.165 --> 00:02:56.835
which is changeFontSize and then add the premises just afterwards.

00:02:56.835 --> 00:03:02.020
This will then run this function every time the mouse is over this text.

00:03:02.020 --> 00:03:06.380
Then let's comment out this function call right to the bottom,

00:03:06.380 --> 00:03:08.830
save and then over to the browser,

00:03:08.830 --> 00:03:13.550
stares our standard size text and now if you hover over with the mouse,

00:03:13.550 --> 00:03:18.220
we now see the text has been increased to 34 pixels.

00:03:18.220 --> 00:03:23.840
We can choose any event we want to trigger this function such as onclick.

00:03:23.840 --> 00:03:28.700
Let's change onmouseover to be onclick,

00:03:28.700 --> 00:03:32.735
reload the browser, and then if you click the text,

00:03:32.735 --> 00:03:35.165
the function is now called.

00:03:35.165 --> 00:03:41.350
Things such as onclick and mouse events are really common and we'll see them a lot.

00:03:41.350 --> 00:03:45.680
There is also some uncommon ones which you can see from the list before,

00:03:45.680 --> 00:03:49.865
such as if the user tries to copy something from the page.

00:03:49.865 --> 00:03:54.610
Let's add oncopy, and then we can comment this out,

00:03:54.610 --> 00:03:57.855
and then do something to show us an alert,

00:03:57.855 --> 00:04:03.130
and a message of stop copying my stuff,

00:04:04.820 --> 00:04:07.470
just like that and then save.

00:04:07.470 --> 00:04:10.055
Now if we right-click and then copy,

00:04:10.055 --> 00:04:13.560
we now see the message appearing on the screen.

00:04:14.170 --> 00:04:19.270
Slash remove this alert from here and reinstate this.

00:04:19.270 --> 00:04:24.485
We can even run some code when the page has finished loading with onload.

00:04:24.485 --> 00:04:27.230
We can do this inside of the body.

00:04:27.230 --> 00:04:31.320
Let's go inside the opening tag and then add onload.

00:04:33.010 --> 00:04:35.615
here rather than calling the function,

00:04:35.615 --> 00:04:38.215
I'm just going to apply some JavaScript to run.

00:04:38.215 --> 00:04:42.850
Let's copy this document.getElementById,

00:04:42.850 --> 00:04:48.765
just up to there and then we can paste in our JavaScript inside the quotations.

00:04:48.765 --> 00:04:51.135
We're grabbing this text element.

00:04:51.135 --> 00:04:57.755
Then let's change the inner HTML to be our text string of changed.

00:04:57.755 --> 00:05:00.005
Now we save that.

00:05:00.005 --> 00:05:02.255
Now as soon as the page has loaded,

00:05:02.255 --> 00:05:05.425
this will override the text to be changed.

00:05:05.425 --> 00:05:09.755
This method of handling events within a HTML elements,

00:05:09.755 --> 00:05:12.215
like we've done with these two examples,

00:05:12.215 --> 00:05:14.870
is called inline event handlers,

00:05:14.870 --> 00:05:16.790
although this code will work,

00:05:16.790 --> 00:05:20.450
it is considered bad practice to do things like this.

00:05:20.450 --> 00:05:24.680
It is better to keep the HTML and JavaScript separate,

00:05:24.680 --> 00:05:26.900
even placing the JavaScript into

00:05:26.900 --> 00:05:30.935
a separate file and this is what we'll look at soon in this course.

00:05:30.935 --> 00:05:35.210
let's go ahead and remove the event handlers from the HTML.

00:05:35.210 --> 00:05:38.270
First, the ones from the body section,

00:05:38.270 --> 00:05:47.355
especially everything from inside here and also the oncopy one from here,

00:05:47.355 --> 00:05:52.075
then we can get to work moving all these into our scripts section.

00:05:52.075 --> 00:05:57.710
Let's start by accessing all P elements here and store it inside a variable.

00:05:57.710 --> 00:06:06.415
Let's say, var textElement and set is to, document.querySelector.

00:06:06.415 --> 00:06:11.025
I'm going to select our P elements with the P tag.

00:06:11.025 --> 00:06:15.335
We can then attach an event listener to this text element.

00:06:15.335 --> 00:06:21.025
Add, texteElement and then.addEventListener.

00:06:21.025 --> 00:06:25.400
Inside the brackets, this event listener takes in two values.

00:06:25.400 --> 00:06:30.865
First is the type of events we want to listen for. Let's say click.

00:06:30.865 --> 00:06:33.500
This name is generally like the ones we've looked at

00:06:33.500 --> 00:06:36.485
before without the word on before it,

00:06:36.485 --> 00:06:38.030
so rather than onclick,

00:06:38.030 --> 00:06:40.760
which we used before, we just use click.

00:06:40.760 --> 00:06:44.260
Also onmouseover would just be mouseover.

00:06:44.260 --> 00:06:49.190
The second value or the second parameter separated by comma,

00:06:49.190 --> 00:06:51.625
is the function which we want to run.

00:06:51.625 --> 00:06:54.875
Let's add our anonymous function into here,

00:06:54.875 --> 00:06:59.885
the parentheses and then open and close the curly braces.

00:06:59.885 --> 00:07:02.495
Put a semicolon at the end.

00:07:02.495 --> 00:07:04.010
Inside this function body,

00:07:04.010 --> 00:07:05.765
we can then run some code.

00:07:05.765 --> 00:07:10.670
Let's copy this section from before and in fact,

00:07:10.670 --> 00:07:11.690
we can remove this function,

00:07:11.690 --> 00:07:13.890
we don't need this anymore.

00:07:14.300 --> 00:07:16.530
Let's remove all this.

00:07:16.530 --> 00:07:20.755
Then inside this anonymous function we can then paste this in,

00:07:20.755 --> 00:07:25.925
and remember this is the one which changes the font size to be 34 pixels.

00:07:25.925 --> 00:07:29.780
Give that a save and then reload, there's our text.

00:07:29.780 --> 00:07:34.325
Once we click this, it now increases to 34 pixels.

00:07:34.325 --> 00:07:39.680
remember this is an anonymous function because we cannot give this function a name,

00:07:39.680 --> 00:07:42.910
it's simply runs when the event is triggered.

00:07:42.910 --> 00:07:48.635
This can also be shortened using the arrow function syntax, which is looked up.

00:07:48.635 --> 00:07:53.660
If we remove the function keyword and then add the arrow just afterwards,

00:07:53.660 --> 00:07:57.145
which is equals and then the greatest symbol.

00:07:57.145 --> 00:08:01.065
Check this is working okay by clicking the text.

00:08:01.065 --> 00:08:05.390
Using this add event listener would also be useful if you wanted to

00:08:05.390 --> 00:08:09.910
listen to all P elements on a page rather than just one.

00:08:09.910 --> 00:08:12.420
To do this, we will would need to loop through all of

00:08:12.420 --> 00:08:15.795
them and we'll cover looping in the next section,

00:08:15.795 --> 00:08:20.840
or if we wanted to give this function a name so we could reuse elsewhere,

00:08:20.840 --> 00:08:24.445
we can cut out from here and create a separate function,

00:08:24.445 --> 00:08:25.880
that's because it's a little bit smaller,

00:08:25.880 --> 00:08:27.920
so it all fits on one line.

00:08:27.920 --> 00:08:31.430
Then I'm going to go ahead and copy from this closing brace

00:08:31.430 --> 00:08:35.735
here right to the start of this function parentheses.

00:08:35.735 --> 00:08:40.310
In fact, we'll cut these other place then above this we can create our function.

00:08:40.310 --> 00:08:47.235
Give this a name of, var changeFontSize, just like this.

00:08:47.235 --> 00:08:50.510
Then we can set this equal to the function which

00:08:50.510 --> 00:08:54.180
was copied and space this out a little bit.

00:08:54.180 --> 00:08:57.110
Now we have our separate function which is now

00:08:57.110 --> 00:09:01.040
self-contained and stored in the value of change font size.

00:09:01.040 --> 00:09:03.755
Now instead of having this as the second argument,

00:09:03.755 --> 00:09:08.900
we can now just paste in this variable name and the code should work exactly the same.

00:09:08.900 --> 00:09:13.460
Refresh, click on the text and the function still works.

00:09:13.460 --> 00:09:17.305
Even though we've now placed it into its own variable,

00:09:17.305 --> 00:09:20.630
this also means now different parts of our code can

00:09:20.630 --> 00:09:23.920
still run this function by accessing this name here.

00:09:23.920 --> 00:09:26.855
Notice when we called the function just here,

00:09:26.855 --> 00:09:31.205
we didn't add the premises just afterwards, like this.

00:09:31.205 --> 00:09:35.735
This is because our [inaudible] will run the function straight away.

00:09:35.735 --> 00:09:38.635
It won't wait for the event handler first.

00:09:38.635 --> 00:09:42.000
Let's just add these in, save,

00:09:42.000 --> 00:09:45.695
and refresh and we can see the text is immediately

00:09:45.695 --> 00:09:49.925
34 pixels even before we've clicked on the smaller text.

00:09:49.925 --> 00:09:54.260
Let's remove these now from this example and say this.

00:09:54.260 --> 00:09:57.785
This is it, now for our first look of events,

00:09:57.785 --> 00:10:02.350
they're really useful and something which we'll use a lot when working with JavaScript.

00:10:02.350 --> 00:10:05.315
We'll continue looking at events in the next video,

00:10:05.315 --> 00:10:08.330
where we'll look at the eventobject.
