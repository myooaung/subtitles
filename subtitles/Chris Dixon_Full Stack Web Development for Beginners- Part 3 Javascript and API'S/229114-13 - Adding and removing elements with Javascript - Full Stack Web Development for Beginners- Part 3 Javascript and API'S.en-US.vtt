WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:06.010
We have just looked at how we can use JavaScript to manipulate elements in our DOM,

00:00:06.010 --> 00:00:08.200
such as changing the text,

00:00:08.200 --> 00:00:11.315
adding attributes, and setting styles.

00:00:11.315 --> 00:00:15.115
We're going to cover how to actually create new elements,

00:00:15.115 --> 00:00:17.425
and also how to remove them too.

00:00:17.425 --> 00:00:20.270
Let's head over to our starter files.

00:00:20.270 --> 00:00:23.140
We're going to begin in number 11,

00:00:23.140 --> 00:00:25.600
which is adding and removing elements with

00:00:25.600 --> 00:00:29.975
JavaScript and also have this open inside the browser.

00:00:29.975 --> 00:00:33.970
We can see in our starter files we have an unordered list,

00:00:33.970 --> 00:00:38.120
with the two ListItems of apples and pears,

00:00:38.200 --> 00:00:40.655
which we have just here.

00:00:40.655 --> 00:00:43.200
Let's begin down in the script section.

00:00:43.200 --> 00:00:46.760
We're going to look at what is called a document.write.

00:00:46.760 --> 00:00:51.590
Document.write is a way of setting a text string to a page.

00:00:51.590 --> 00:00:57.455
Document.write, and then inside of the brackets we can add a text string,

00:00:57.455 --> 00:01:01.910
such as document write text.

00:01:01.910 --> 00:01:04.940
If we save that and reload the browser,

00:01:04.940 --> 00:01:09.515
we now have this text appearing alongside our unordered list.

00:01:09.515 --> 00:01:14.545
Document.write is for adding a simple text string to a page.

00:01:14.545 --> 00:01:17.584
This is commonly used for testing purposes,

00:01:17.584 --> 00:01:21.305
but it can cause problems if used incorrectly.

00:01:21.305 --> 00:01:25.770
For example, if you go to google.com,

00:01:26.300 --> 00:01:29.295
and then open up the Console,

00:01:29.295 --> 00:01:31.720
you right-click and Inspect.

00:01:31.850 --> 00:01:35.830
Inside here if we do a document.write,

00:01:36.300 --> 00:01:39.010
and then pass in a text string,

00:01:39.010 --> 00:01:43.500
such as hello, hit Enter,

00:01:43.500 --> 00:01:48.880
and we see the Google homepage has been replaced with our document write.

00:01:48.880 --> 00:01:53.170
A document write will override all of the existing content,

00:01:53.170 --> 00:01:55.765
if the page is already loaded.

00:01:55.765 --> 00:01:58.820
We need to be really careful when using this.

00:01:58.820 --> 00:02:01.780
You'll see at the top of the start template,

00:02:01.780 --> 00:02:03.910
we have our unordered list,

00:02:03.910 --> 00:02:05.360
which is just here.

00:02:05.360 --> 00:02:11.525
This is a list we can work with by adding and removing some ListItems, using JavaScript.

00:02:11.525 --> 00:02:15.965
If we want to create a new element on the page using JavaScript,

00:02:15.965 --> 00:02:19.195
we can use the createElement method.

00:02:19.195 --> 00:02:22.740
Let's remove this document.write,

00:02:22.740 --> 00:02:27.520
and then inside here we can do the document.createElement.

00:02:27.520 --> 00:02:32.315
Let's create a variable to store the scene called ListItem,

00:02:32.315 --> 00:02:38.040
and set this to document.createElement.

00:02:38.690 --> 00:02:42.600
Just like this. Again, using the camel casing,

00:02:42.600 --> 00:02:44.445
just like we've seen before.

00:02:44.445 --> 00:02:47.870
Inside the parentheses, we can pass in as a string,

00:02:47.870 --> 00:02:50.135
the name of the elements we want to create,

00:02:50.135 --> 00:02:52.300
such as a ListItem.

00:02:52.300 --> 00:02:55.085
Any element tag name can be added to,

00:02:55.085 --> 00:02:57.560
such as a div or p element.

00:02:57.560 --> 00:03:00.350
Creating this won't do anything on its own,

00:03:00.350 --> 00:03:02.405
because although we've created it,

00:03:02.405 --> 00:03:05.630
there is still no text inside the elements.

00:03:05.630 --> 00:03:10.240
We can add text using the CreateText.Method.

00:03:10.240 --> 00:03:16.750
Let's just add some comments, create element.

00:03:17.030 --> 00:03:22.260
Then after here we're going to create the TextNode.

00:03:23.270 --> 00:03:28.445
We can also store this inside of a variable called itemText.

00:03:28.445 --> 00:03:33.510
This equal to document.createTextNode.

00:03:33.920 --> 00:03:35.970
Then inside the bracket,

00:03:35.970 --> 00:03:39.535
you can pass in the text string we want to add.

00:03:39.535 --> 00:03:41.590
Sticking with the fruits,

00:03:41.590 --> 00:03:44.690
I'm going to add the value of bananas.

00:03:46.640 --> 00:03:50.775
If we save that and then reload the browser,

00:03:50.775 --> 00:03:54.250
I go to our index page,

00:03:54.250 --> 00:03:57.625
we still don't see any extra items on the screen,

00:03:57.625 --> 00:04:01.330
because although we have our elements which we created here,

00:04:01.330 --> 00:04:03.970
and also our text which we have here,

00:04:03.970 --> 00:04:08.335
we have not yet added this text to the contents of these elements.

00:04:08.335 --> 00:04:11.950
We can do this with the appendChild method.

00:04:11.950 --> 00:04:16.880
Let's add text to element.

00:04:17.330 --> 00:04:20.190
First of all, let's grab our ListItem,

00:04:20.190 --> 00:04:21.735
which is just here.

00:04:21.735 --> 00:04:26.800
We say ListItem.appendChild.

00:04:26.800 --> 00:04:31.330
The child we want to append is this item text just here.

00:04:31.330 --> 00:04:37.460
Add these inside the bracket and then save, and then reload.

00:04:37.460 --> 00:04:40.940
We still don't see the elements on the screen.

00:04:40.940 --> 00:04:44.485
Let's see what's going on with the console log.

00:04:44.485 --> 00:04:49.850
That's console log, the value of our ListItem.

00:04:51.050 --> 00:04:56.200
Over to the console, right-click Inspect.

00:04:56.330 --> 00:04:59.725
We see that we have our element created.

00:04:59.725 --> 00:05:02.905
We've got our opening and closing ListItem,

00:05:02.905 --> 00:05:06.725
and then the text of bananas as the child.

00:05:06.725 --> 00:05:10.285
The final step is to again use appendChild,

00:05:10.285 --> 00:05:15.470
to add this new item to this existing list, which is just here.

00:05:15.470 --> 00:05:18.845
This existing list has an ID of list.

00:05:18.845 --> 00:05:22.760
First let's grab this and store it inside a variable.

00:05:22.760 --> 00:05:25.320
Down at the bottom,

00:05:25.320 --> 00:05:29.955
let's select the parent list.

00:05:29.955 --> 00:05:33.960
Install this inside a variable called list.

00:05:34.030 --> 00:05:40.530
We know how to do this, it's document.getElementById.

00:05:40.930 --> 00:05:44.290
The Id we gave this is List.

00:05:44.290 --> 00:05:47.775
Then we shall add a semicolon at the end,

00:05:47.775 --> 00:05:50.010
to store this inside this variable.

00:05:50.010 --> 00:05:52.465
we have the parent list,

00:05:52.465 --> 00:05:54.830
and we have the child we want to add.

00:05:54.830 --> 00:05:57.485
We can go ahead and add these now.

00:05:57.485 --> 00:06:03.815
Add new ListItem to list.

00:06:03.815 --> 00:06:08.335
We do this, we list.appendChild,

00:06:08.335 --> 00:06:10.005
which we've seen before,

00:06:10.005 --> 00:06:13.860
and the item we want to add is the ListItem.

00:06:13.860 --> 00:06:16.920
Add a semicolon at the end.

00:06:16.920 --> 00:06:19.740
We load the browser and there we go,

00:06:19.740 --> 00:06:22.875
there is our bananas as a new ListItem.

00:06:22.875 --> 00:06:25.250
Just to recap what we're doing here,

00:06:25.250 --> 00:06:27.560
we're grabbing the full list,

00:06:27.560 --> 00:06:30.110
and storing it inside a variable.

00:06:30.110 --> 00:06:32.765
We then add in to this list,

00:06:32.765 --> 00:06:36.610
the child, which is this new ListItem.

00:06:36.610 --> 00:06:39.935
You may be wondering why do all of this,

00:06:39.935 --> 00:06:45.170
instead of just typing in a new ListItem look inside the HTML.

00:06:45.170 --> 00:06:49.015
Well, there is a lot of cases where we want to do this with JavaScript.

00:06:49.015 --> 00:06:51.379
In a to do app for example,

00:06:51.379 --> 00:06:54.440
each time the user types in a new to do item,

00:06:54.440 --> 00:06:57.970
this could be added to the list, just like we've done here.

00:06:57.970 --> 00:07:01.040
Or for example, in another course which I have,

00:07:01.040 --> 00:07:03.515
we build a music player application,

00:07:03.515 --> 00:07:06.130
where we construct a list of songs.

00:07:06.130 --> 00:07:09.910
Moving on, as well as adding items to our list,

00:07:09.910 --> 00:07:14.020
we can also replace any existing items which we already have.

00:07:14.020 --> 00:07:18.910
For example, if we wanted to replace these pears ListItem,

00:07:18.910 --> 00:07:22.380
with something else, we could also do this too.

00:07:22.380 --> 00:07:26.890
First, let's create a new ListItem called grapes.

00:07:27.230 --> 00:07:34.125
So let's create grapes ListItem.

00:07:34.125 --> 00:07:40.615
We do this just like before, we can create a new variable called new ListItem,

00:07:40.615 --> 00:07:46.100
and then set this to be document.createElement,

00:07:46.490 --> 00:07:51.400
the element we want to create is a ListItem.

00:07:52.150 --> 00:07:54.710
Then just like we've seen before,

00:07:54.710 --> 00:07:56.870
we can also create our TextNode.

00:07:56.870 --> 00:08:00.790
Let's say newItemText.

00:08:00.790 --> 00:08:03.980
This is just exactly the same as what we did before,

00:08:03.980 --> 00:08:05.855
when we created a ListItem.

00:08:05.855 --> 00:08:08.705
Then our TextNode, bananas.

00:08:08.705 --> 00:08:11.945
But this time we're going to be creating grapes.

00:08:11.945 --> 00:08:18.570
This is equal to document.createTextNode,

00:08:20.020 --> 00:08:26.115
text of grapes, semicolon at the end.

00:08:26.115 --> 00:08:29.700
Then we need to add this text to this item.

00:08:29.700 --> 00:08:37.890
We say newListItem and then append the child of new item text.

00:08:39.410 --> 00:08:43.985
Just like that. I've got a newListItem here,

00:08:43.985 --> 00:08:45.680
which we access in here.

00:08:45.680 --> 00:08:47.540
We'll then add in the child,

00:08:47.540 --> 00:08:49.460
which is a new item text,

00:08:49.460 --> 00:08:51.885
which is the TextNode of grapes.

00:08:51.885 --> 00:08:54.100
we have this newListItem.

00:08:54.100 --> 00:08:58.685
We can use this to replace any of the ListItems we already have.

00:08:58.685 --> 00:09:00.350
As we mentioned before,

00:09:00.350 --> 00:09:02.210
I want to be selecting pears,

00:09:02.210 --> 00:09:05.250
which is the index position of one.

00:09:05.350 --> 00:09:07.595
Down at the bottom,

00:09:07.595 --> 00:09:17.730
let's create a variable called item to replace, and then document.querySelectorAll.

00:09:18.650 --> 00:09:21.975
We're going to grab the ListItems.

00:09:21.975 --> 00:09:24.470
Then the item we want is our index position

00:09:24.470 --> 00:09:32.780
1. we have our item that we want to add in and also the item we want to replace.

00:09:32.780 --> 00:09:37.540
We can now go ahead and use replace child to complete this.

00:09:37.540 --> 00:09:44.025
Just after here, let's select our list.replaceChild.

00:09:44.025 --> 00:09:46.830
ReplaceChild takes in two values,

00:09:46.830 --> 00:09:49.985
the first one is going to be our new ListItem,

00:09:49.985 --> 00:09:52.420
which is a new item.

00:09:52.420 --> 00:09:54.930
Then separated by a comma,

00:09:54.930 --> 00:09:57.280
we add in the item we want to replace,

00:09:57.280 --> 00:10:00.375
which we stored in this variable here.

00:10:00.375 --> 00:10:03.285
Add the same as our second value,

00:10:03.285 --> 00:10:06.255
save that, and then reload.

00:10:06.255 --> 00:10:09.515
Good to know our second item is now grapes,

00:10:09.515 --> 00:10:13.265
rather than what we had originally, which is pears.

00:10:13.265 --> 00:10:16.650
Finally, if we wanted to completely remove an element,

00:10:16.650 --> 00:10:18.840
rather than replace it with something else,

00:10:18.840 --> 00:10:21.950
we can also use the removeChild method.

00:10:21.950 --> 00:10:24.285
This is pretty straightforward to do.

00:10:24.285 --> 00:10:26.670
Let's go back into our script.

00:10:26.670 --> 00:10:30.015
Let's say, remove an item.

00:10:30.015 --> 00:10:32.385
Let's grab our list.

00:10:32.385 --> 00:10:37.785
Then we use.removeChild. Inside the brackets,

00:10:37.785 --> 00:10:41.330
all we need to do is add the child we want to remove.

00:10:41.330 --> 00:10:43.930
If we wanted to remove our grapes,

00:10:43.930 --> 00:10:46.410
which is stored in newListItem,

00:10:46.410 --> 00:10:48.990
we just add this in as a value,

00:10:48.990 --> 00:10:51.495
save, and then reload.

00:10:51.495 --> 00:10:55.340
The value of grapes has been removed from our list.

00:10:55.340 --> 00:10:57.835
When removing these items,

00:10:57.835 --> 00:11:00.850
we always need to specify the pattern first,

00:11:00.850 --> 00:11:02.770
which is our list here.

00:11:02.770 --> 00:11:05.314
Then remove one of the child items,

00:11:05.314 --> 00:11:10.615
just like this, rather than accessing the elements to remove directly.

00:11:10.615 --> 00:11:12.850
We now know how to add, remove,

00:11:12.850 --> 00:11:15.595
and update elements using JavaScript.

00:11:15.595 --> 00:11:18.620
Now let's move on to the next video.
