WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.700
Welcome back guys. In this video,

00:00:02.700 --> 00:00:05.130
we're going to be using regular expressions,

00:00:05.130 --> 00:00:08.010
to build a simple find and replace app.

00:00:08.010 --> 00:00:09.600
Inside the starts files,

00:00:09.600 --> 00:00:15.045
we have a basic form where the user can type in a word inside the find section.

00:00:15.045 --> 00:00:17.220
This will and then find a word inside

00:00:17.220 --> 00:00:21.375
his original text and then we can choose a word to replace it with.

00:00:21.375 --> 00:00:24.240
Once this Replace button is selected,

00:00:24.240 --> 00:00:29.280
this Replace button will trigger a function which will make all this happen.

00:00:29.280 --> 00:00:33.190
Let's begin by adding an event listener to this button.

00:00:33.190 --> 00:00:35.295
Over in the starter files,

00:00:35.295 --> 00:00:40.500
this is Number 33 which is rejects, find, replace.

00:00:40.500 --> 00:00:44.750
Down here we have our form with the find inputs,

00:00:44.750 --> 00:00:48.110
the replace inputs and then our button,

00:00:48.110 --> 00:00:51.370
which has the ID of replaceBtn.

00:00:51.370 --> 00:00:57.350
Let's go down to our script which is down at the very bottom.

00:00:57.350 --> 00:01:01.615
Let's like this with document.getElementById.

00:01:01.615 --> 00:01:06.760
The ID like we've just seen is replaceBtn.

00:01:06.800 --> 00:01:10.510
Then add an event listener.

00:01:10.850 --> 00:01:14.820
Inside the brackets, we know we need to add two values.

00:01:14.820 --> 00:01:17.040
The first one is the name of the event.

00:01:17.040 --> 00:01:20.600
We're going to be listening for the click events.

00:01:20.600 --> 00:01:27.670
Then we're going to trigger a arrow function just like this.

00:01:28.610 --> 00:01:34.280
Inside here these four things we need to grab and store inside of variables.

00:01:34.280 --> 00:01:38.810
We need to grab the form inputs for the find section.

00:01:38.810 --> 00:01:40.550
We need to grab the input for

00:01:40.550 --> 00:01:44.960
the replace section and then we need to grab our original text,

00:01:44.960 --> 00:01:47.540
which is our first set of p elements.

00:01:47.540 --> 00:01:50.330
Then we need to grab our second p elements,

00:01:50.330 --> 00:01:53.740
which is going to contain our text with the replaced words.

00:01:53.740 --> 00:01:58.400
Let's add in these four variables inside of our event listener.

00:01:58.400 --> 00:02:02.060
Let's start by grabbing our original text and

00:02:02.060 --> 00:02:05.615
then our modified text inside the p elements.

00:02:05.615 --> 00:02:16.140
Let original texts be equal to documents.querySelectorAll.

00:02:16.150 --> 00:02:21.305
The original text is the first occurrence of the p elements.

00:02:21.305 --> 00:02:26.100
Add the p tag inside here at index position zero.

00:02:26.100 --> 00:02:29.500
Then lets copy this line and paste it in just below.

00:02:29.500 --> 00:02:32.870
This one is going to be the modified text.

00:02:32.870 --> 00:02:39.270
The only difference is the p element is this time at index number one.

00:02:39.270 --> 00:02:47.365
Now we also need to store the user inputs which has an ID or find and also replace.

00:02:47.365 --> 00:02:50.705
Lets install these two inside a variables as well.

00:02:50.705 --> 00:02:59.975
Let our findText be equal to documents.getElementbyId,

00:02:59.975 --> 00:03:02.480
the first one was find.

00:03:02.480 --> 00:03:05.105
We want to grab the user's value.

00:03:05.105 --> 00:03:10.670
We've got value, copy this line and paste it in again just below.

00:03:10.670 --> 00:03:13.790
This is going to be the replace text.

00:03:13.790 --> 00:03:16.580
Let's replace text.

00:03:16.580 --> 00:03:21.190
The ID this time is replaced.

00:03:21.190 --> 00:03:25.040
Okay, good so make sure yours looks like this example here.

00:03:25.040 --> 00:03:29.290
Now we have all the information we need stored in variables.

00:03:29.290 --> 00:03:33.695
Next we need to grab the inner HTML of our original text.

00:03:33.695 --> 00:03:36.455
This is texturing just here,

00:03:36.455 --> 00:03:39.679
so at the very bottom of our function,

00:03:39.679 --> 00:03:48.710
let's say originalText.innerHTML describes all the text content from our original text.

00:03:48.710 --> 00:03:51.935
Then we're going to use the dot replace method,

00:03:51.935 --> 00:03:54.305
which we looked at in the last video.

00:03:54.305 --> 00:03:56.659
This takes in our two values.

00:03:56.659 --> 00:03:59.240
The first one is the word we want to find.

00:03:59.240 --> 00:04:04.670
This is stored inside a variable called findText then separated by a comma,

00:04:04.670 --> 00:04:06.845
the word we want to replace it with.

00:04:06.845 --> 00:04:11.000
This is stored inside of this replace text variable.

00:04:11.000 --> 00:04:14.450
Replace text as our second value,

00:04:14.450 --> 00:04:16.470
the semicolon at the end,

00:04:16.470 --> 00:04:22.110
then we can install this inside of a variable called newText.

00:04:22.240 --> 00:04:29.075
Finally, we want to output this newText to our empty p elements which is just here.

00:04:29.075 --> 00:04:32.225
We already have a reference list called modified text.

00:04:32.225 --> 00:04:34.360
Let's add this down at the bottom,

00:04:34.360 --> 00:04:44.310
so modifiedText.innerHTML is going to be equal to this newText just here.

00:04:47.300 --> 00:04:52.880
Okay, good. I think we're ready to go to the browser and give this a test.

00:04:52.880 --> 00:04:55.505
Let's search for one of our words.

00:04:55.505 --> 00:04:59.885
Let's say sits, find the word of sits.

00:04:59.885 --> 00:05:03.660
Then replace it with stand stand.

00:05:03.660 --> 00:05:07.795
Hit replace and nothing appears to happen.

00:05:07.795 --> 00:05:12.080
If we look a little closely and we add this in once more.

00:05:12.600 --> 00:05:18.410
If we click on this replace button and watch very closely down at the bottom.

00:05:18.410 --> 00:05:24.010
We can see the briefly the new text will flush up and then disappear.

00:05:24.010 --> 00:05:28.910
This is because, this part inside of the form elements.

00:05:28.910 --> 00:05:30.710
When we click on this button,

00:05:30.710 --> 00:05:33.950
the default behavior is to submit the form.

00:05:33.950 --> 00:05:37.120
This causes the page to reload.

00:05:37.120 --> 00:05:42.725
This is also why the inputs are now clear at the top because the page has done a refresh.

00:05:42.725 --> 00:05:46.835
To fix this, we can prevent the default behavior of this event.

00:05:46.835 --> 00:05:48.980
First, we can add the e,

00:05:48.980 --> 00:05:51.680
which is the details of our events,

00:05:51.680 --> 00:05:56.180
inside of the function parenthesis then we can prevent

00:05:56.180 --> 00:06:03.780
the default behavior inside the function body with e.preventDefault.

00:06:04.640 --> 00:06:08.840
This will stop our form from submitting and therefore we

00:06:08.840 --> 00:06:12.320
won't see a page refresh. Let's try this again.

00:06:12.320 --> 00:06:16.099
We replace sit with stand,

00:06:16.099 --> 00:06:20.910
click ''Replace'' and there we go under our new tech section.

00:06:20.910 --> 00:06:27.250
We see the word sit has been replaced with stand and we no longer see a page reload.

00:06:27.250 --> 00:06:30.440
There is also another way to fix this too.

00:06:30.440 --> 00:06:35.855
Instead of having e.preventDefault we can remove this.

00:06:35.855 --> 00:06:40.350
We can remove our e variable from here and instead,

00:06:40.350 --> 00:06:42.390
if we go up to the button,

00:06:42.390 --> 00:06:47.970
inside of our form we can also add the type of button.

00:06:51.110 --> 00:06:55.280
Now this is a type of button rather than submit.

00:06:55.280 --> 00:06:58.480
This will stop the default submit action.

00:06:58.480 --> 00:07:08.355
Now let's give this a go and this time we'll replace Ipsum with any of the words.

00:07:08.355 --> 00:07:14.690
Hit ''Replace''. Now we got also our new text now has this replaced word.

00:07:14.690 --> 00:07:19.445
The final thing to look at is how to make this search case insensitive.

00:07:19.445 --> 00:07:22.700
If we search for the word lorom using

00:07:22.700 --> 00:07:29.830
these small l and replace it with anything. Hit ''Replaced''.

00:07:29.830 --> 00:07:32.375
We see that this doesn't work below.

00:07:32.375 --> 00:07:36.140
You may think we could just add a modifier like this,

00:07:36.140 --> 00:07:40.250
so down to our new text inside the Find and

00:07:40.250 --> 00:07:47.810
Replace let's add our two forward slashes and then the I modifiers just like this.

00:07:47.810 --> 00:07:49.970
However, if we were to say this,

00:07:49.970 --> 00:07:55.400
refresh and give these a go, type in lorem.

00:07:55.400 --> 00:08:01.005
Our replacement words, we see that this still does not work.

00:08:01.005 --> 00:08:04.460
To make this work, we need to use a constructor function,

00:08:04.460 --> 00:08:07.149
so back over to our scripts.

00:08:07.149 --> 00:08:10.170
Just a bit of a new text we're going to say,

00:08:10.170 --> 00:08:14.520
''New regular expression'' just like this.

00:08:14.520 --> 00:08:18.465
Then inside these brackets we are going to pass in this find text.

00:08:18.465 --> 00:08:21.090
Our design as our first value.

00:08:21.090 --> 00:08:25.315
Separated by a comma we can add the I modifier.

00:08:25.315 --> 00:08:29.510
This constructor function will compile the results including

00:08:29.510 --> 00:08:33.725
this modifier and then we could install this inside of a variable.

00:08:33.725 --> 00:08:41.614
Let's say find, with modifier and set this to our constructor function.

00:08:41.614 --> 00:08:46.595
Then we can use this variable name and passes in through our replace.

00:08:46.595 --> 00:08:48.650
Rather than what we have here,

00:08:48.650 --> 00:08:51.470
let's just pass in a variable name.

00:08:51.470 --> 00:08:55.320
You have to save and then let's try this,

00:08:55.320 --> 00:09:02.955
so lorem, with lower case l. Hit Replace and now you see this is working.

00:09:02.955 --> 00:09:05.779
Great, so this constructor function compiles

00:09:05.779 --> 00:09:10.430
our runtime which is ideal for patterns which may change.

00:09:10.430 --> 00:09:13.150
Although we know the pattern we looking for,

00:09:13.150 --> 00:09:16.415
it may change depending on the case of the letters.

00:09:16.415 --> 00:09:21.725
Great, we now have a working find and replace up which is case insensitive.

00:09:21.725 --> 00:09:25.050
Let's now move on to the next video.
