WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.274
Welcome back guys. We're now going to look at JavaScript objects.

00:00:04.274 --> 00:00:09.570
Objects are the collection of properties which have a name and a value pair.

00:00:09.570 --> 00:00:12.555
For example, just like in real life,

00:00:12.555 --> 00:00:14.535
a computer is an object.

00:00:14.535 --> 00:00:17.904
A computer can have many properties for example,

00:00:17.904 --> 00:00:20.165
a property name of manufacturer,

00:00:20.165 --> 00:00:22.100
and a value of Apple,

00:00:22.100 --> 00:00:27.220
a property name of monitor size and a value of 22 inch,

00:00:27.220 --> 00:00:30.140
or sticking with our characters from before,

00:00:30.140 --> 00:00:32.615
a character could be an object too,

00:00:32.615 --> 00:00:35.075
with a property name of first name,

00:00:35.075 --> 00:00:36.815
and a value of Mickey,

00:00:36.815 --> 00:00:38.765
or a property name of color,

00:00:38.765 --> 00:00:40.570
and the value of red.

00:00:40.570 --> 00:00:47.135
These are all just names and values which are much together which construct a object.

00:00:47.135 --> 00:00:51.065
Let's create an object over in the object's starts a file,

00:00:51.065 --> 00:00:53.380
which is just an empty script tag.

00:00:53.380 --> 00:00:58.175
First, we define new objects with the new keyword,

00:00:58.175 --> 00:01:03.400
so new objects, followed by the brackets, and the semicolon.

00:01:03.400 --> 00:01:06.710
We can then assign this new object to a

00:01:06.710 --> 00:01:10.310
variable and let's set this to the name of character.

00:01:10.310 --> 00:01:13.470
If we now go over to the console,

00:01:13.810 --> 00:01:18.870
so right-click and inspect, open this up,

00:01:18.870 --> 00:01:27.075
and then we can do a console log with the value of character,

00:01:27.075 --> 00:01:29.865
save that and then reload.

00:01:29.865 --> 00:01:33.025
We see a set of curly braces.

00:01:33.025 --> 00:01:38.555
This is just an empty object because we've not yet added any properties.

00:01:38.555 --> 00:01:41.000
If we go back over to our project,

00:01:41.000 --> 00:01:42.960
we can now add these in.

00:01:42.960 --> 00:01:48.070
We can do these by selecting our character and then let's say

00:01:48.070 --> 00:01:54.250
dot first name and set this equal to Bugs.

00:01:55.250 --> 00:02:03.220
Then we can say character dot last name equal to Bunny,

00:02:03.710 --> 00:02:08.230
then character, and let's say we had an image,

00:02:08.230 --> 00:02:17.780
so dot image equal to a string of bugs-bunny dot png.

00:02:17.780 --> 00:02:25.010
We'll do one more, we'll say Character dot color is equal to grew,

00:02:26.000 --> 00:02:29.185
so here we've given the character objects,

00:02:29.185 --> 00:02:30.775
the properties of first name,

00:02:30.775 --> 00:02:36.665
last name, image and color and then we're assigning these values on the right-hand side.

00:02:36.665 --> 00:02:39.745
If we save that and then go back over to the console,

00:02:39.745 --> 00:02:42.055
let's see what effect this has.

00:02:42.055 --> 00:02:46.165
We now see some content inside of our curly braces,

00:02:46.165 --> 00:02:49.415
so our object now has some properties.

00:02:49.415 --> 00:02:51.825
We can say our first name of Bugs,

00:02:51.825 --> 00:02:54.420
our last name of Bunny and so on.

00:02:54.420 --> 00:02:56.805
These are name value pairs,

00:02:56.805 --> 00:02:59.775
so first name of Bugs is a name value pair,

00:02:59.775 --> 00:03:02.630
last name of Bunny is a name value pair too.

00:03:02.630 --> 00:03:08.455
We can access any of these properties directly with the name, just like this.

00:03:08.455 --> 00:03:15.460
Let's go over to our console log and just below it we can add a second console log.

00:03:15.460 --> 00:03:18.320
If we wanted to access our characters color,

00:03:18.320 --> 00:03:23.910
we could select the full character and then say dot color,

00:03:24.560 --> 00:03:28.560
refresh this and there's our value of ,

00:03:28.560 --> 00:03:31.035
which is this property just here.

00:03:31.035 --> 00:03:37.650
Access our values just like this with the dot is called the dot notation.

00:03:38.270 --> 00:03:43.120
There is also a second way of accessing these properties,

00:03:43.120 --> 00:03:46.725
this is the brackets notation.

00:03:46.725 --> 00:03:50.735
This time instead of accessing the properties with the dots,

00:03:50.735 --> 00:03:56.070
we can do a console log and instead use these square braces.

00:03:56.070 --> 00:03:59.255
Let's select the character objects,

00:03:59.255 --> 00:04:03.700
the square brackets and then we can access our color,

00:04:03.700 --> 00:04:06.450
semicolon at the end,

00:04:06.450 --> 00:04:10.425
refresh and there's our two values of gray.

00:04:10.425 --> 00:04:14.695
First with the dot notation and then second with the brackets.

00:04:14.695 --> 00:04:17.885
Another way to create an object is called object

00:04:17.885 --> 00:04:21.710
literal and rather than declaring a empty objects,

00:04:21.710 --> 00:04:27.005
which we add just here and then adding properties to it with these four lines,

00:04:27.005 --> 00:04:29.020
we can do it all at once.

00:04:29.020 --> 00:04:35.325
Let's comment out this first method here and then just below this.

00:04:35.325 --> 00:04:39.550
We can create our object and store it inside available.

00:04:39.550 --> 00:04:44.849
Let's say var character and set this to all objects,

00:04:44.849 --> 00:04:47.105
rather than having an empty object,

00:04:47.105 --> 00:04:50.045
we can now assign our name value pairs,

00:04:50.045 --> 00:04:55.425
so let's say our first name, the colon.

00:04:55.425 --> 00:04:57.600
Our first name is Bugs,

00:04:57.600 --> 00:04:59.640
separated by a comma,

00:04:59.640 --> 00:05:03.420
we can add our second one of last name,

00:05:03.420 --> 00:05:06.360
and this is Bunny.

00:05:06.360 --> 00:05:12.420
Again our image, so Bugs-Bunny

00:05:12.420 --> 00:05:19.305
dot png and finally the color.

00:05:19.305 --> 00:05:22.265
These previous values which we've looked at,

00:05:22.265 --> 00:05:24.200
are just simple strings.

00:05:24.200 --> 00:05:27.395
These can also be any data type which we've already covered,

00:05:27.395 --> 00:05:29.260
such as an array.

00:05:29.260 --> 00:05:32.130
We can add multiple values for the color,

00:05:32.130 --> 00:05:38.875
so let's say we have a color value of gray and then separated by comma, also white too.

00:05:38.875 --> 00:05:44.015
If we save this and in fact we'll remove these console logs,

00:05:44.015 --> 00:05:46.830
just leaving our character.

00:05:46.960 --> 00:05:49.794
Over to the console,

00:05:49.794 --> 00:05:52.640
there's our name-value pairs,

00:05:52.640 --> 00:05:57.965
just like before, but this time our color is an Array with two separate values.

00:05:57.965 --> 00:05:59.885
If you click on this arrow here,

00:05:59.885 --> 00:06:03.915
we can then open this up and then expand the color.

00:06:03.915 --> 00:06:09.215
The index position of zero is gray and the index of one is white.

00:06:09.215 --> 00:06:12.440
We can even add functions to our objects,

00:06:12.440 --> 00:06:14.165
so just after the color,

00:06:14.165 --> 00:06:18.470
we can add a comma and then let's set a function which

00:06:18.470 --> 00:06:23.420
will create a string which concatenates our first name and last name.

00:06:23.420 --> 00:06:28.040
Let's say our full name is equal to

00:06:28.040 --> 00:06:33.709
a function and then create a function just like we've seen previously.

00:06:33.709 --> 00:06:35.570
Inside the function body,

00:06:35.570 --> 00:06:40.035
we can do a Alert and inside the alert,

00:06:40.035 --> 00:06:46.515
let's create string saying my full name is,

00:06:46.515 --> 00:06:50.040
a space and then can add our properties.

00:06:50.040 --> 00:06:54.195
Let's say this dot first name,

00:06:54.195 --> 00:07:01.770
then add a empty string for the space and then on the end we'll say this dot last name,

00:07:02.120 --> 00:07:04.695
semicolon at the end.

00:07:04.695 --> 00:07:08.225
There's a couple of things to note here, first of all,

00:07:08.225 --> 00:07:12.185
when we add a function as a property of an object,

00:07:12.185 --> 00:07:18.900
this is called a Method and also we've have used this keyword to access our properties.

00:07:18.900 --> 00:07:22.160
When a function is called as a method of an object,

00:07:22.160 --> 00:07:25.570
the value of this is set to these current objects.

00:07:25.570 --> 00:07:29.330
Therefore we can access any of these properties on this object

00:07:29.330 --> 00:07:33.935
by using this dot and then the name of our property.

00:07:33.935 --> 00:07:37.120
If you give this a save and go over to the browser,

00:07:37.120 --> 00:07:40.440
you can see our method of full name is here

00:07:40.440 --> 00:07:44.345
plus if you want to actually run this method and display the alert,

00:07:44.345 --> 00:07:47.630
we need to execute it within the parentheses.

00:07:47.630 --> 00:07:55.155
Back to our console log and say character dot full name,

00:07:55.155 --> 00:07:59.775
the parenthesis just after and now if we save and then call this,

00:07:59.775 --> 00:08:04.040
we'll now see our method run and the alert is in the browser and

00:08:04.040 --> 00:08:08.790
the string of My full name is Bugs-Bunny, closes down.

00:08:08.790 --> 00:08:12.330
This is now for our first look at objects,

00:08:12.330 --> 00:08:18.100
they're really useful for grouping together information about almost any type of item.

00:08:18.100 --> 00:08:23.370
Next, we'll stick with the topic of Objects and look at how we can loop through them.
