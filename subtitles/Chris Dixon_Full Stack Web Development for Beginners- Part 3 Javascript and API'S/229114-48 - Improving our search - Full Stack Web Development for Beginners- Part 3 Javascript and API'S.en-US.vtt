WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.170 --> 00:00:02.250
In the last video,

00:00:02.250 --> 00:00:07.635
we made great progress by wiring up our search button at the top of our website.

00:00:07.635 --> 00:00:10.425
We also included a small problem.

00:00:10.425 --> 00:00:13.844
This is when a second search term is performed,

00:00:13.844 --> 00:00:16.740
rather than replacing the original results,

00:00:16.740 --> 00:00:18.975
they added onto the end.

00:00:18.975 --> 00:00:22.350
This is what we'll be fixing in this video.

00:00:22.350 --> 00:00:26.815
All of our songs, our child elements of the song container.

00:00:26.815 --> 00:00:30.950
So we need to check if the container first, has songs.

00:00:30.950 --> 00:00:35.375
If it does then we need to remove them before researching.

00:00:35.375 --> 00:00:41.645
So let's get started by moving our song container reference to the top of our script.

00:00:41.645 --> 00:00:44.690
So let's go back to our script.js.

00:00:44.690 --> 00:00:47.779
and then if you scroll down to our song container,

00:00:47.779 --> 00:00:53.125
which is just here, let's cut this out of our map.

00:00:53.125 --> 00:00:56.775
Then we can paste this at the top of our scripts.

00:00:56.775 --> 00:00:59.325
Now let's move to the top of our scripts.

00:00:59.325 --> 00:01:02.135
This will give this variable a global scope.

00:01:02.135 --> 00:01:05.650
Medium can access it in multiple locations.

00:01:05.650 --> 00:01:08.870
So now if we scroll down to our else section,

00:01:08.870 --> 00:01:10.970
which is this section here,

00:01:10.970 --> 00:01:13.655
before we run our search query.

00:01:13.655 --> 00:01:20.215
First, let's run a while loop which will check if the song container has a child element.

00:01:20.215 --> 00:01:23.085
So at the top of the else section here,

00:01:23.085 --> 00:01:31.720
let's say while song container thoughts first child.

00:01:32.240 --> 00:01:36.980
So it will check if the song container has any child elements.

00:01:36.980 --> 00:01:39.710
If it does, you want to go ahead and remove it.

00:01:39.710 --> 00:01:41.930
So we can say song container,

00:01:41.930 --> 00:01:49.110
removed child, just like that.

00:01:49.110 --> 00:01:51.035
Then inside removed child,

00:01:51.035 --> 00:01:56.100
we need to pass in the song container.firstchild.

00:01:57.650 --> 00:02:00.810
So as it is a loop it will loop through

00:02:00.810 --> 00:02:04.685
our song container and each there is a child elements,

00:02:04.685 --> 00:02:10.360
it will go ahead and remove it and so no child elements are left in the container.

00:02:10.360 --> 00:02:12.635
Once the container is empty,

00:02:12.635 --> 00:02:16.055
the code can then move on to doing a new search.

00:02:16.055 --> 00:02:18.335
So let's give this a go in the browser,

00:02:18.335 --> 00:02:21.275
give that a save, and then reload.

00:02:21.275 --> 00:02:26.940
I'll do the same search as before, Ed Sheeran.

00:02:26.990 --> 00:02:31.885
Okay, so now let's do a second search of Queen.

00:02:31.885 --> 00:02:36.995
It search and now our Queen results will replace the original search.

00:02:36.995 --> 00:02:42.335
Great, so let's now finish off this query string by adding in some extra parameters.

00:02:42.335 --> 00:02:45.515
First by setting the media to be music.

00:02:45.515 --> 00:02:48.380
So let's go to the URL,

00:02:48.380 --> 00:02:50.210
which is just here.

00:02:50.210 --> 00:02:52.370
Then after the question mark,

00:02:52.370 --> 00:02:56.280
we can say media of music.

00:02:56.890 --> 00:03:02.675
Don't forget to add an ampersand after this so it also looks for the search term.

00:03:02.675 --> 00:03:05.960
So this will now restrict the search results to be

00:03:05.960 --> 00:03:09.185
only music rather than any other media types,

00:03:09.185 --> 00:03:11.585
such as e-books or movies.

00:03:11.585 --> 00:03:15.995
Remember, all of these options are available in iTunes documentation,

00:03:15.995 --> 00:03:17.465
which we looked at earlier.

00:03:17.465 --> 00:03:19.595
Also, this is your application,

00:03:19.595 --> 00:03:22.700
so feel free to change it to be a movie search up,

00:03:22.700 --> 00:03:27.215
a podcast search, or any other type of media which you prefer.

00:03:27.215 --> 00:03:32.065
Finally, I'm going to restrict the number of search results to the 10.

00:03:32.065 --> 00:03:34.290
Back to the question mark,

00:03:34.290 --> 00:03:41.610
then we'll say limit equals 10 at the ampersands, give that a save.

00:03:41.610 --> 00:03:46.020
Reload the browser, add a search.

00:03:46.020 --> 00:03:51.070
Give that a go, so now we have 10 results.

00:03:52.130 --> 00:03:55.940
Hit search and there we go,

00:03:55.940 --> 00:03:57.515
now we have 10 results,

00:03:57.515 --> 00:04:00.415
all restricted to the media type of music.

00:04:00.415 --> 00:04:03.660
Write our song, find the app is almost now

00:04:03.660 --> 00:04:07.490
complete but there is one final touch we need to add.

00:04:07.490 --> 00:04:12.590
We passed in the audio to the audio player to give us this song preview.

00:04:12.590 --> 00:04:15.000
So if we click on this,

00:04:16.720 --> 00:04:20.810
we now see that the audio preview is working.

00:04:20.810 --> 00:04:22.370
So this all works fine,

00:04:22.370 --> 00:04:25.800
but if we click on a second audio preview

00:04:27.470 --> 00:04:31.730
we see that post songs are now playing at the same time.

00:04:31.730 --> 00:04:34.640
Instead, what we want is the ability to click on

00:04:34.640 --> 00:04:37.130
an audio preview and then is to pause

00:04:37.130 --> 00:04:40.490
any other audio players which you currently playing.

00:04:40.490 --> 00:04:42.635
This is the last thing we need to take care of.

00:04:42.635 --> 00:04:47.580
Fourth is application and we'll look at this in the next video.
