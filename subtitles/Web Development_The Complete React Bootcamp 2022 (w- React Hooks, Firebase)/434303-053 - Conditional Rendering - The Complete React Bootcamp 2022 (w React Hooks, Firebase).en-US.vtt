WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.750
Hey,

00:00:00.750 --> 00:00:02.120
welcome in this video,

00:00:02.120 --> 00:00:07.480
we will talk about conditional rendering and also Bubble displayed the draw message at the

00:00:07.480 --> 00:00:08.060
top.

00:00:08.060 --> 00:00:13.010
If we have no moves left on the gaming port and we don't have a winner,

00:00:13.010 --> 00:00:13.810
let's go.

00:00:13.810 --> 00:00:15.620
Let's get back to our code.

00:00:15.620 --> 00:00:20.850
And here the first thing we will do will find this piece off code.

00:00:20.850 --> 00:00:22.950
But we're under our status message.

00:00:22.950 --> 00:00:23.810
As you can see,

00:00:23.810 --> 00:00:27.540
it resize in Abdel Gs inside this age to attack what?

00:00:27.540 --> 00:00:31.310
We referenced this message credible with next logic inside.

00:00:31.310 --> 00:00:33.490
Now what I proposed to do,

00:00:33.490 --> 00:00:38.110
I proposed to create a new component that we will name something like status message.

00:00:38.110 --> 00:00:38.610
And inside,

00:00:38.610 --> 00:00:41.650
we will put all business logic related to this message.

00:00:41.650 --> 00:00:42.510
Let's go.

00:00:42.510 --> 00:00:42.820
So,

00:00:42.820 --> 00:00:43.820
under components,

00:00:43.820 --> 00:00:47.440
I'm gonna create status message the G s.

00:00:47.440 --> 00:00:52.970
I will scaffold it with the extension and it is going to be HDE two.

00:00:52.970 --> 00:00:53.860
And for now,

00:00:53.860 --> 00:00:55.150
let it be amity.

00:00:55.150 --> 00:01:05.170
Now we need to import it into Abdel genius and dribbled toward Scotus message and now in

00:01:05.170 --> 00:01:07.480
place off old h two,

00:01:07.480 --> 00:01:10.600
we will poor status message like that.

00:01:10.600 --> 00:01:19.390
And also we will put this Logic two status message GS Enviable commented on Lee four Future

00:01:19.390 --> 00:01:24.960
reference now if we save it And if we go back to our app Now we have this d d that we

00:01:24.960 --> 00:01:26.000
render over here.

00:01:26.000 --> 00:01:26.800
All right,

00:01:26.800 --> 00:01:27.410
Cool.

00:01:27.410 --> 00:01:34.290
Now what about conditional rendering to conditionally render things inside j six We simply

00:01:34.290 --> 00:01:39.300
need to poor jealous script condition inside curly brackets.

00:01:39.300 --> 00:01:42.640
So if we open them here inside you six,

00:01:42.640 --> 00:01:45.400
we can simply type if we have a winner.

00:01:45.400 --> 00:01:46.840
If winner is defined,

00:01:46.840 --> 00:01:49.530
then by using the and operator,

00:01:49.530 --> 00:01:51.980
we can pour whatever we want to render.

00:01:51.980 --> 00:01:53.450
It can be an element.

00:01:53.450 --> 00:01:54.750
It can be a component,

00:01:54.750 --> 00:01:55.840
but in our case,

00:01:55.840 --> 00:01:58.370
we want to rendered the string.

00:01:58.370 --> 00:02:00.580
So let's copy it from here.

00:02:00.580 --> 00:02:02.290
And let's put it like that,

00:02:02.290 --> 00:02:09.270
the only thing we need to do we need to grab this winner as a prop that we will pass and

00:02:09.270 --> 00:02:10.970
down from Abdullah gs.

00:02:10.970 --> 00:02:16.580
So here we will put winner and let's check it out if it actually work.

00:02:16.580 --> 00:02:17.010
Now,

00:02:17.010 --> 00:02:23.240
this message is empty because inside status message we only put conditional rendering for

00:02:23.240 --> 00:02:24.170
for the winner.

00:02:24.170 --> 00:02:27.310
So if we let's they inspect this element,

00:02:27.310 --> 00:02:31.860
if we look into our dump structure this age two will be empty,

00:02:31.860 --> 00:02:32.850
and that's fine.

00:02:32.850 --> 00:02:38.450
Now let's at our second condition and run their this next player message.

00:02:38.450 --> 00:02:41.670
So Huma Herbal put another cutlet brackets and we will say,

00:02:41.670 --> 00:02:43.760
If we don't have a winner,

00:02:43.760 --> 00:02:46.320
then we will put this message,

00:02:46.320 --> 00:02:49.980
which is next player is something like that.

00:02:49.980 --> 00:02:52.940
But we don't have access to the current state.

00:02:52.940 --> 00:02:56.790
So let's again pass it down the props.

00:02:56.790 --> 00:02:58.440
And here,

00:02:58.440 --> 00:03:01.690
let's put current current.

00:03:01.690 --> 00:03:02.420
Okay,

00:03:02.420 --> 00:03:02.870
good.

00:03:02.870 --> 00:03:04.820
Now we have the previous functionality.

00:03:04.820 --> 00:03:07.890
What about the draw message?

00:03:07.890 --> 00:03:09.840
So to display a draw,

00:03:09.840 --> 00:03:17.010
we need to detect if we have free squares on the gaming fort and we also need to check

00:03:17.010 --> 00:03:18.010
against the winner.

00:03:18.010 --> 00:03:22.250
So first we need to detect if we have free space on the gaming board.

00:03:22.250 --> 00:03:30.110
And since our state is an array off elements where every element by default is that to know

00:03:30.110 --> 00:03:32.320
when the gaming board is full,

00:03:32.320 --> 00:03:39.890
it means that every element inside this array is defined so we can use it to get our Bullen

00:03:39.890 --> 00:03:39.890
.

00:03:39.890 --> 00:03:43.050
That will indicate if we have free space on the board.

00:03:43.050 --> 00:03:43.640
So west,

00:03:43.640 --> 00:03:43.900
Great.

00:03:43.900 --> 00:03:46.180
And you valuable here will name it.

00:03:46.180 --> 00:03:49.940
No moves left and what we will do,

00:03:49.940 --> 00:03:58.780
we will check current board than every and this dot every method is available on all

00:03:58.780 --> 00:04:06.210
JavaScript race and this dot every method iterating over the array and for every element it

00:04:06.210 --> 00:04:11.610
runs the callback function that we will pass insight and this callback function must return

00:04:11.610 --> 00:04:12.450
and Bullen value.

00:04:12.450 --> 00:04:17.750
And if for every element these callback function returns true,

00:04:17.750 --> 00:04:20.600
then the whole condition will be set to true.

00:04:20.600 --> 00:04:25.450
If at least one element returns false from this cultic function,

00:04:25.450 --> 00:04:28.150
then the whole condition will be Saturday falls.

00:04:28.150 --> 00:04:29.160
So we will check.

00:04:29.160 --> 00:04:36.130
We will receive element because it has the same arguments as dot map method and other

00:04:36.130 --> 00:04:37.750
available JavaScript method.

00:04:37.750 --> 00:04:43.140
So element notch equals no and that's it.

00:04:43.140 --> 00:04:48.460
Now we can use this hour Bullen value to conditionally render our strings.

00:04:48.460 --> 00:04:52.120
So if we don't have a winner and mobile port,

00:04:52.120 --> 00:04:53.890
we will extend our condition.

00:04:53.890 --> 00:05:00.050
So if you don't have a winner and we have moves on the gaming board,

00:05:00.050 --> 00:05:06.220
then we will rendered the next player message and our third condition will be If we don't

00:05:06.220 --> 00:05:10.690
have a winner and no moves left on the gaming board,

00:05:10.690 --> 00:05:16.220
then we will Poor X and zero tight quote.

00:05:16.220 --> 00:05:20.210
Now let's get read off this comments at the tail.

00:05:20.210 --> 00:05:22.760
We don't need them anymore and let's check it out.

00:05:22.760 --> 00:05:24.180
So if I played the game,

00:05:24.180 --> 00:05:25.330
everything's fine.

00:05:25.330 --> 00:05:27.070
And if I have a winner,

00:05:27.070 --> 00:05:28.070
everything is called.

00:05:28.070 --> 00:05:29.730
Now let's create a draw.

00:05:29.730 --> 00:05:34.140
So let me quickly put it and you who?

00:05:34.140 --> 00:05:38.120
You can see that X and zero tight so everything works.

00:05:38.120 --> 00:05:39.410
Everything is fine.

00:05:39.410 --> 00:05:45.560
The only thing I want to mention here is that this condition that we put it must always

00:05:45.560 --> 00:05:47.310
return a bull in value.

00:05:47.310 --> 00:05:48.110
In our future.

00:05:48.110 --> 00:05:52.050
Videos we will check will use conditional rendering to render,

00:05:52.050 --> 00:05:52.880
Let's say,

00:05:52.880 --> 00:05:55.260
a race to mop race to Jan.

00:05:55.260 --> 00:05:59.420
Six elements and we will check against the length off array.

00:05:59.420 --> 00:06:04.670
So we will do if our let's say winner dot length then will render the array.

00:06:04.670 --> 00:06:08.110
But this does not return the Bolen Valley.

00:06:08.110 --> 00:06:10.510
It returns and number so it will.

00:06:10.510 --> 00:06:11.570
It can be zero.

00:06:11.570 --> 00:06:16.510
So if we put zero over here and zero is in javascript,

00:06:16.510 --> 00:06:17.770
zero is false.

00:06:17.770 --> 00:06:19.340
But in react,

00:06:19.340 --> 00:06:23.860
if we try and do something like this instead off putting bowling value,

00:06:23.860 --> 00:06:25.710
it will be rendering.

00:06:25.710 --> 00:06:32.880
That's why we need to ensure that this value is always bowling so we can simply overcome

00:06:32.880 --> 00:06:35.300
this with by putting double negation,

00:06:35.300 --> 00:06:36.830
and it will work for.

00:06:36.830 --> 00:06:41.440
We just simply can put something like this to ensure that this is a bowline.

00:06:41.440 --> 00:06:45.650
So let's put with her and yet that's it.

00:06:45.650 --> 00:06:48.970
That's all I wanted to cover in this video about conditional friends.

00:06:48.970 --> 00:06:53.540
Now let's finish this video and let's commit our changes.

00:06:53.540 --> 00:06:56.720
So we are going to commit our code,

00:06:56.720 --> 00:07:06.690
and the name for our committee is going to be this played draw message with the conditional

00:07:06.690 --> 00:07:10.850
rendering perfect we'll see in the next one.

