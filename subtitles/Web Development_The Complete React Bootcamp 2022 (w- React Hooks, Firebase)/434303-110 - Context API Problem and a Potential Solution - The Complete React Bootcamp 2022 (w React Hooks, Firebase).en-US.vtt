WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.360
hi context.

00:00:01.360 --> 00:00:02.610
AP is amazing,

00:00:02.610 --> 00:00:03.180
isn't it?

00:00:03.180 --> 00:00:05.370
But always with any good tool,

00:00:05.370 --> 00:00:07.050
there is also a negative side.

00:00:07.050 --> 00:00:11.560
The problem with context is that we can select a part of its value.

00:00:11.560 --> 00:00:14.750
We can't define a selector for that reason.

00:00:14.750 --> 00:00:18.140
Whenever context is consumed with the use contacts hook,

00:00:18.140 --> 00:00:21.300
even if the value is not used and it changes,

00:00:21.300 --> 00:00:23.150
the component will be rendered.

00:00:23.150 --> 00:00:28.110
Imagine the context that passes down and object with the next structure.

00:00:28.110 --> 00:00:31.430
In a component where Title is displayed,

00:00:31.430 --> 00:00:33.640
we would like to get only title tax,

00:00:33.640 --> 00:00:38.530
right so we can destruct your title text from context value and it seems okay.

00:00:38.530 --> 00:00:39.410
However,

00:00:39.410 --> 00:00:40.620
for context,

00:00:40.620 --> 00:00:46.080
it doesn't matter whether it is destructor or you trying to partially select elements.

00:00:46.080 --> 00:00:50.570
It always gives you the whole context value from now on,

00:00:50.570 --> 00:00:56.500
since title component gets the value whenever anything inside our object changes.

00:00:56.500 --> 00:00:57.550
For example,

00:00:57.550 --> 00:00:58.380
searching put,

00:00:58.380 --> 00:01:00.500
the title component will be to render,

00:01:00.500 --> 00:01:01.500
and that's bad.

00:01:01.500 --> 00:01:02.800
To solve this,

00:01:02.800 --> 00:01:08.600
we can actually split the context into two separate context providers one per object key.

00:01:08.600 --> 00:01:09.740
In that way,

00:01:09.740 --> 00:01:15.120
we split responsibilities and render will not be triggered because we will consume only

00:01:15.120 --> 00:01:19.120
what we need inside a provider component were not limited to you.

00:01:19.120 --> 00:01:23.430
Only one context can combine multiple contexts under one provider.

00:01:23.430 --> 00:01:26.310
It is very useful when we pass through the contacts,

00:01:26.310 --> 00:01:27.200
for example,

00:01:27.200 --> 00:01:28.960
the result of use state,

00:01:28.960 --> 00:01:32.080
state and its update function for them.

00:01:32.080 --> 00:01:35.750
That will be two separate contexts grouped under one provider.

00:01:35.750 --> 00:01:36.520
So now,

00:01:36.520 --> 00:01:43.060
if inside a component we consume context that provides the update function component will

00:01:43.060 --> 00:01:44.050
not be rendered.

00:01:44.050 --> 00:01:45.670
When this state changes,

00:01:45.670 --> 00:01:51.180
it will only render if the actual value off consumed context will be changed,

00:01:51.180 --> 00:01:52.750
which is the update function.

00:01:52.750 --> 00:01:53.470
In this case,

00:01:53.470 --> 00:01:55.360
this will work for most cases.

00:01:55.360 --> 00:01:56.040
However,

00:01:56.040 --> 00:02:00.160
there are situations when we would like to pass a large object through the context,

00:02:00.160 --> 00:02:04.170
and creating a new context for every key will be an overkill.

00:02:04.170 --> 00:02:05.840
For these situations.

00:02:05.840 --> 00:02:11.650
There is a package use context selector that provides us functionality to partially select

00:02:11.650 --> 00:02:12.900
value from context.

00:02:12.900 --> 00:02:14.790
It comes with the few limitations,

00:02:14.790 --> 00:02:16.530
but when used wisely,

00:02:16.530 --> 00:02:18.550
renders can be avoided at all.

00:02:18.550 --> 00:02:19.850
Just to point out,

00:02:19.850 --> 00:02:24.510
all of that is considerate when using creed ducks instead of context a P I.

00:02:24.510 --> 00:02:25.680
For state management,

00:02:25.680 --> 00:02:26.460
however,

00:02:26.460 --> 00:02:30.140
Redox has a learning curve and brings more complexity,

00:02:30.140 --> 00:02:31.650
depending on the app.

00:02:31.650 --> 00:02:32.980
You probably don't need it.

00:02:32.980 --> 00:02:34.400
That's why we use context.

00:02:34.400 --> 00:02:39.540
A p i in the next video we're going to install use context selector and we will see how it

00:02:39.540 --> 00:02:41.150
can help us see you that

