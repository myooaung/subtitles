WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.090
Hey,

00:00:01.090 --> 00:00:01.540
welcome.

00:00:01.540 --> 00:00:05.190
Everyone in this video will start building the homepage,

00:00:05.190 --> 00:00:08.740
and also we will start our work with the A p I,

00:00:08.740 --> 00:00:10.150
which is TV maize.

00:00:10.150 --> 00:00:15.620
And it will give us all information about shows and actors that we are looking for it.

00:00:15.620 --> 00:00:18.930
It is completely free and available for everyone.

00:00:18.930 --> 00:00:19.850
Let's go,

00:00:19.850 --> 00:00:23.610
Let's get back to our code and let's open home togs.

00:00:23.610 --> 00:00:25.750
And the first thing we will do a bubble creatine,

00:00:25.750 --> 00:00:26.590
you input.

00:00:26.590 --> 00:00:30.130
That will be our tax box for our search.

00:00:30.130 --> 00:00:37.850
So here I will put input bulls type text.

00:00:37.850 --> 00:00:39.370
And for now that said,

00:00:39.370 --> 00:00:43.820
Now we need to associate a new state with this input.

00:00:43.820 --> 00:00:46.910
So whatever we type inside our tax books,

00:00:46.910 --> 00:00:48.810
we have it inside the state.

00:00:48.810 --> 00:00:51.290
So for that from react,

00:00:51.290 --> 00:00:56.910
I will import use state hook and I will define in your state.

00:00:56.910 --> 00:01:01.760
I will give it a name off in port than the update function.

00:01:01.760 --> 00:01:06.800
Us said input and then use state default.

00:01:06.800 --> 00:01:07.040
Well,

00:01:07.040 --> 00:01:09.920
you will be set to just an empty string.

00:01:09.920 --> 00:01:13.920
Now how to associate this state with this input element?

00:01:13.920 --> 00:01:14.500
Well,

00:01:14.500 --> 00:01:19.510
we can get used off the on change event that is available on this input element.

00:01:19.510 --> 00:01:22.150
So let's type on change.

00:01:22.150 --> 00:01:24.190
And as any other event,

00:01:24.190 --> 00:01:26.050
it received the callback function.

00:01:26.050 --> 00:01:30.710
And this callback function receives an event object.

00:01:30.710 --> 00:01:34.070
But instead of directly put in this logic over here,

00:01:34.070 --> 00:01:40.240
let's create our own custom function on input change.

00:01:40.240 --> 00:01:43.880
And this function receives an event object.

00:01:43.880 --> 00:01:51.100
And let's replace this handler with our input change function.

00:01:51.100 --> 00:01:51.830
All right,

00:01:51.830 --> 00:01:56.250
Now let's try and console lock this event object over here.

00:01:56.250 --> 00:02:02.810
And if we open our app And if we inspect and go to Consul Now,

00:02:02.810 --> 00:02:04.710
whenever we type inside,

00:02:04.710 --> 00:02:10.230
we can see that the event is being fired and we can see the event object.

00:02:10.230 --> 00:02:13.560
But the most important part inside this event object.

00:02:13.560 --> 00:02:15.440
We have the target property.

00:02:15.440 --> 00:02:17.290
And from this target property,

00:02:17.290 --> 00:02:20.680
we will get access to the currently typing Well,

00:02:20.680 --> 00:02:21.630
you all right?

00:02:21.630 --> 00:02:27.060
So let's try and Consul Arc event tar get dot value.

00:02:27.060 --> 00:02:28.640
And right now,

00:02:28.640 --> 00:02:30.090
whenever we type,

00:02:30.090 --> 00:02:31.270
let's say hello.

00:02:31.270 --> 00:02:34.250
You can see that the value that we type here,

00:02:34.250 --> 00:02:37.110
we can get it from this value prop.

00:02:37.110 --> 00:02:37.840
All right.

00:02:37.840 --> 00:02:38.390
Perfect.

00:02:38.390 --> 00:02:41.510
This is how we will update our state.

00:02:41.510 --> 00:02:48.470
So we will call set input and we will pour event target value inside.

00:02:48.470 --> 00:02:49.270
All right?

00:02:49.270 --> 00:02:50.740
And that's it.

00:02:50.740 --> 00:02:52.130
We're almost there.

00:02:52.130 --> 00:02:54.970
But there is one more thing to mention.

00:02:54.970 --> 00:02:56.340
It is really important.

00:02:56.340 --> 00:02:57.260
Right now.

00:02:57.260 --> 00:03:00.210
We update the state and everything works fine.

00:03:00.210 --> 00:03:06.950
But we didn't directly associate our input state with this input element.

00:03:06.950 --> 00:03:07.940
So for that,

00:03:07.940 --> 00:03:10.900
we need to use the value prop.

00:03:10.900 --> 00:03:12.270
And for this value,

00:03:12.270 --> 00:03:14.950
we need to pour our input state.

00:03:14.950 --> 00:03:17.260
As otherwise it will work.

00:03:17.260 --> 00:03:24.540
But the input state will not be directly associated whether with our state that we define

00:03:24.540 --> 00:03:24.920
here.

00:03:24.920 --> 00:03:25.660
All right,

00:03:25.660 --> 00:03:28.250
now everything will be the same.

00:03:28.250 --> 00:03:30.240
But now we associate ID.

00:03:30.240 --> 00:03:33.810
We mapped input element with input State called.

00:03:33.810 --> 00:03:40.450
Now our next step is to create a new bottom will give it type button,

00:03:40.450 --> 00:03:43.280
and inside we will pour search.

00:03:43.280 --> 00:03:43.860
Okay,

00:03:43.860 --> 00:03:44.920
let's check it out.

00:03:44.920 --> 00:03:45.880
Perfect.

00:03:45.880 --> 00:03:49.460
Now we need to give it the on click handler.

00:03:49.460 --> 00:03:55.150
So on click event and again for the on click you went as before,

00:03:55.150 --> 00:03:58.550
we will use the custom function which we will name.

00:03:58.550 --> 00:04:04.980
Let's say on search and let's keep it like that for now.

00:04:04.980 --> 00:04:06.490
And for on click,

00:04:06.490 --> 00:04:08.930
we will pour on search.

00:04:08.930 --> 00:04:09.750
Perfect.

00:04:09.750 --> 00:04:14.060
Now what is our strategy when we click on this button.

00:04:14.060 --> 00:04:15.400
What is going to happen?

00:04:15.400 --> 00:04:16.900
Let's take a look at this.

00:04:16.900 --> 00:04:19.590
A p I how we're able to get results.

00:04:19.590 --> 00:04:23.190
So for now we are only interested in this first example,

00:04:23.190 --> 00:04:24.510
which is show search.

00:04:24.510 --> 00:04:31.170
Let's click on this example and let's take a look as you can see Now receive old data that

00:04:31.170 --> 00:04:34.700
we poor inside this Let's say request.

00:04:34.700 --> 00:04:42.470
So inside our your l we need to pull the query string Right now it has set the girls.

00:04:42.470 --> 00:04:45.940
But here we will put our state that we just created.

00:04:45.940 --> 00:04:51.630
And in that manner we can grab results related to our typed text.

00:04:51.630 --> 00:04:52.230
So here,

00:04:52.230 --> 00:04:54.820
if I type man and if I look now,

00:04:54.820 --> 00:04:57.290
you can see that results have been changed.

00:04:57.290 --> 00:04:58.380
So this is it.

00:04:58.380 --> 00:04:59.600
This is the way to go.

00:04:59.600 --> 00:05:04.860
So let's copy this your l Let's get back to our code and for on surge,

00:05:04.860 --> 00:05:10.870
let's paste it and commented and less replace http with https.

00:05:10.870 --> 00:05:13.630
And what logic should we put here Well,

00:05:13.630 --> 00:05:19.150
to grab data from some external resource or to just received data,

00:05:19.150 --> 00:05:22.600
we need to call the browser ap I fetch.

00:05:22.600 --> 00:05:26.930
It allows us to fetch the remote data.

00:05:26.930 --> 00:05:28.010
Let's say so.

00:05:28.010 --> 00:05:33.550
Inside this patch we will put this euro that we just copy it like that.

00:05:33.550 --> 00:05:37.140
And then instead of this questing man,

00:05:37.140 --> 00:05:39.010
we will pour our input.

00:05:39.010 --> 00:05:40.590
So here I will.

00:05:40.590 --> 00:05:47.510
So each quotes I will put string contract elation and inside I will pour our input like

00:05:47.510 --> 00:05:47.890
that.

00:05:47.890 --> 00:05:48.540
All right.

00:05:48.540 --> 00:05:51.310
And this fetch function returns.

00:05:51.310 --> 00:05:51.950
Promise.

00:05:51.950 --> 00:05:53.830
It means that we need to awaited.

00:05:53.830 --> 00:05:56.170
So we will put that then.

00:05:56.170 --> 00:06:00.250
And here we will receive the response object.

00:06:00.250 --> 00:06:03.900
But it is still in the raw structure.

00:06:03.900 --> 00:06:05.960
So we need to convert it to Jason.

00:06:05.960 --> 00:06:11.640
The data that we can work with so responds dot Jason to transform it.

00:06:11.640 --> 00:06:19.890
And we will put here another then and eventually we will receive our results from the A p I

00:06:19.890 --> 00:06:19.890
.

00:06:19.890 --> 00:06:23.450
So he will put result on let's just Consul,

00:06:23.450 --> 00:06:25.950
log it to see what do we received.

00:06:25.950 --> 00:06:28.050
So I will put result.

00:06:28.050 --> 00:06:31.920
I will say it Now let's get back to our app.

00:06:31.920 --> 00:06:34.960
Let's look for something maybe for men.

00:06:34.960 --> 00:06:35.540
Now,

00:06:35.540 --> 00:06:36.970
if I click on search,

00:06:36.970 --> 00:06:42.970
you can see this results so array off 10 elements being displayed pretty awesome.

00:06:42.970 --> 00:06:46.050
And inside we have all show information.

00:06:46.050 --> 00:06:47.730
And if I change something.

00:06:47.730 --> 00:06:50.820
Let's say two girls and if likely concert,

00:06:50.820 --> 00:06:54.450
I will have another results being displayed.

00:06:54.450 --> 00:06:55.120
Okay,

00:06:55.120 --> 00:06:55.710
Perfect.

00:06:55.710 --> 00:06:57.330
So this is our strategy.

00:06:57.330 --> 00:07:02.410
But here I will want to point to one more thing.

00:07:02.410 --> 00:07:03.230
Right now,

00:07:03.230 --> 00:07:06.720
the search will only take place if we click on the button.

00:07:06.720 --> 00:07:11.370
But we want to also start the search when we press enter.

00:07:11.370 --> 00:07:17.850
But it will not happen because we didn't map our enter key with the import element.

00:07:17.850 --> 00:07:19.530
So what do we do?

00:07:19.530 --> 00:07:20.150
Well,

00:07:20.150 --> 00:07:26.230
we can get used off another event that is available for the input element.

00:07:26.230 --> 00:07:30.150
This event is on key down.

00:07:30.150 --> 00:07:31.500
And as before,

00:07:31.500 --> 00:07:34.890
it receives a callback function with the event object Insight.

00:07:34.890 --> 00:07:37.600
So we will create our custom function,

00:07:37.600 --> 00:07:43.490
which we will name on key down exactly the same as the event name.

00:07:43.490 --> 00:07:47.460
And again it will receive the event object.

00:07:47.460 --> 00:07:50.660
And we will put it here for this Hendler.

00:07:50.660 --> 00:07:56.850
Now what we need to do here if we cancel our get again well below received the event object

00:07:56.850 --> 00:07:56.850
.

00:07:56.850 --> 00:08:03.710
So basically it fires every time when our key is pressed to the bottom with it is down.

00:08:03.710 --> 00:08:06.490
But what's our strategy will be here.

00:08:06.490 --> 00:08:12.570
How can we understand that we are pressing the enter button right now because whenever we

00:08:12.570 --> 00:08:13.720
press a key,

00:08:13.720 --> 00:08:17.570
this event will fire well inside Google.

00:08:17.570 --> 00:08:22.260
I will type JavaScript key coats.

00:08:22.260 --> 00:08:24.530
Then I will open the first your l.

00:08:24.530 --> 00:08:27.220
And here whenever I press any bottle,

00:08:27.220 --> 00:08:34.340
I can get the number that is associated with this particular button that I pressed inside

00:08:34.340 --> 00:08:35.000
Javascript.

00:08:35.000 --> 00:08:35.600
So,

00:08:35.600 --> 00:08:36.180
as you can see,

00:08:36.180 --> 00:08:37.230
when I press enter,

00:08:37.230 --> 00:08:38.830
I received number 13.

00:08:38.830 --> 00:08:45.660
It means that let's try and console log event key code.

00:08:45.660 --> 00:08:50.900
And now if I press enter over here,

00:08:50.900 --> 00:08:54.880
I received 13 exactly the same number as I received here.

00:08:54.880 --> 00:08:56.250
And if I press a,

00:08:56.250 --> 00:08:58.160
I get 65.

00:08:58.160 --> 00:08:59.810
If I press A here,

00:08:59.810 --> 00:09:01.040
I get 65.

00:09:01.040 --> 00:09:06.460
So this is how we can understand that right now we press the enter button,

00:09:06.460 --> 00:09:08.350
so we will do a simple check.

00:09:08.350 --> 00:09:18.800
If event dot key coat equals 13 then we will call our on search function.

00:09:18.800 --> 00:09:19.880
Well,

00:09:19.880 --> 00:09:21.130
put it like this.

00:09:21.130 --> 00:09:22.040
Pretty simple,

00:09:22.040 --> 00:09:23.850
but it will give us that on.

00:09:23.850 --> 00:09:25.020
Search was used before.

00:09:25.020 --> 00:09:26.050
It wasn't defined.

00:09:26.050 --> 00:09:31.680
So let's just put this function on top of it right after input.

00:09:31.680 --> 00:09:32.660
All right.

00:09:32.660 --> 00:09:33.270
Perfect.

00:09:33.270 --> 00:09:34.390
Let's check it out.

00:09:34.390 --> 00:09:37.690
If I type for girls and I press enter,

00:09:37.690 --> 00:09:40.150
you can see results on the right.

00:09:40.150 --> 00:09:41.820
So this is it.

00:09:41.820 --> 00:09:44.680
I guess that's the end for this video.

00:09:44.680 --> 00:09:48.270
We've done everything we wanted in the next video.

00:09:48.270 --> 00:09:55.530
The results that we get from the A p I mobile displayed them inside our component.

00:09:55.530 --> 00:09:57.350
But before we end this video,

00:09:57.350 --> 00:09:59.040
let's commit our changes.

00:09:59.040 --> 00:10:03.480
So get and everything and then get commit.

00:10:03.480 --> 00:10:16.100
They will say created input and fetch results from TV Maze ap I All right.

00:10:16.100 --> 00:10:16.870
Perfect.

00:10:16.870 --> 00:10:18.140
See you in the next one.

