WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.000
Hey,

00:00:01.000 --> 00:00:02.520
welcome in this video,

00:00:02.520 --> 00:00:04.920
we will talk more about components,

00:00:04.920 --> 00:00:08.830
how to create them and also we will touch component properties.

00:00:08.830 --> 00:00:09.830
Let's go.

00:00:09.830 --> 00:00:12.660
I already started the local development server,

00:00:12.660 --> 00:00:14.870
so we should do the same thing.

00:00:14.870 --> 00:00:21.940
Now let's open Abdel Ge as our main component and the first thing that we will you we will

00:00:21.940 --> 00:00:24.070
get rid off the initial market.

00:00:24.070 --> 00:00:29.800
So let's get rid off the Pitak And then instead of this taxed in each one,

00:00:29.800 --> 00:00:34.160
let's put our tick tack toe title.

00:00:34.160 --> 00:00:41.080
And also maybe let's wrap our app in a dif tax instead of react fragment just for

00:00:41.080 --> 00:00:41.950
consistency.

00:00:41.950 --> 00:00:43.000
Okay,

00:00:43.000 --> 00:00:45.060
Now what do we do next?

00:00:45.060 --> 00:00:51.480
Let's great an actual component that will represent the gaming board that we can collect

00:00:51.480 --> 00:00:52.610
for that.

00:00:52.610 --> 00:00:53.780
Under a source,

00:00:53.780 --> 00:00:55.540
I will create a new folder.

00:00:55.540 --> 00:00:59.850
I will name its components inside this folder bubble.

00:00:59.850 --> 00:01:04.910
Put all our application components so I'm gonna cretin you file here.

00:01:04.910 --> 00:01:13.080
I will name it board dot gs and pay attention that I used the capital letter as the first

00:01:13.080 --> 00:01:15.250
letter and that's a convention.

00:01:15.250 --> 00:01:16.740
When it comes to naming,

00:01:16.740 --> 00:01:22.750
you should name all of your competent files starting from the capital letter So in the

00:01:22.750 --> 00:01:26.420
future you can distinguish between normal files,

00:01:26.420 --> 00:01:29.770
normal scripts and the component files.

00:01:29.770 --> 00:01:36.390
So inside I will put the snippet that comes from the extension that we've installed.

00:01:36.390 --> 00:01:39.750
So I will put R A F c e.

00:01:39.750 --> 00:01:41.590
And then I will heat tap,

00:01:41.590 --> 00:01:45.710
and it will scaffold the code for a new component.

00:01:45.710 --> 00:01:49.250
And it will put file name as competent name.

00:01:49.250 --> 00:01:50.630
So All right,

00:01:50.630 --> 00:01:52.390
what should report inside?

00:01:52.390 --> 00:01:55.290
Since it is going to be aboard component,

00:01:55.290 --> 00:01:57.930
we need to pour the grit the market.

00:01:57.930 --> 00:02:03.570
So our board will be three by three with the metro off,

00:02:03.570 --> 00:02:05.290
three elements Insight.

00:02:05.290 --> 00:02:10.840
So I'm gonna create and you give that will represent a role.

00:02:10.840 --> 00:02:12.410
So we have three rows.

00:02:12.410 --> 00:02:15.660
I will copy it three times inside.

00:02:15.660 --> 00:02:20.730
Every row will have three squares that we will click on.

00:02:20.730 --> 00:02:23.480
And these are going to be bottoms.

00:02:23.480 --> 00:02:29.710
So let's put button over here and let's call pay three times and we will do that for all

00:02:29.710 --> 00:02:30.880
off our work,

00:02:30.880 --> 00:02:31.590
Rose.

00:02:31.590 --> 00:02:39.460
So here I will put this three bottoms and also here I will put this three buttons if I save

00:02:39.460 --> 00:02:39.680
it.

00:02:39.680 --> 00:02:44.050
And if I go back to my application If I inspected here.

00:02:44.050 --> 00:02:48.970
And if I open my body and inspect my app,

00:02:48.970 --> 00:02:56.030
I will not see this newly created component over here because every file that we create is

00:02:56.030 --> 00:02:56.690
emotional.

00:02:56.690 --> 00:02:59.290
So we know that in emotional system,

00:02:59.290 --> 00:03:03.750
we need to import and export them to share data.

00:03:03.750 --> 00:03:05.850
So what we do from this file,

00:03:05.850 --> 00:03:07.810
we export our function,

00:03:07.810 --> 00:03:11.080
which is a component that we've created now to use it,

00:03:11.080 --> 00:03:14.410
we need to actually import it in our application treat.

00:03:14.410 --> 00:03:17.050
So we need to import it inside app.

00:03:17.050 --> 00:03:26.440
So here we will type import board from Components Board And now,

00:03:26.440 --> 00:03:27.820
to use this component,

00:03:27.820 --> 00:03:33.200
we can simply inserted in our mark up by using board and at the end,

00:03:33.200 --> 00:03:39.670
global self close it the same thing as we do with the self closing components in normal HD

00:03:39.670 --> 00:03:40.010
Emma.

00:03:40.010 --> 00:03:44.050
And if I save it now and get back to my browser,

00:03:44.050 --> 00:03:47.060
I will see that now I have this great over here,

00:03:47.060 --> 00:03:52.550
but it is empty because we just created buttons and they are all empty.

00:03:52.550 --> 00:03:53.480
Okay,

00:03:53.480 --> 00:03:54.060
quote,

00:03:54.060 --> 00:03:58.860
Now we can see that all off our buttons are kind of the same,

00:03:58.860 --> 00:04:03.450
so it would be sensible to separate them in its own component.

00:04:03.450 --> 00:04:04.380
So what's great?

00:04:04.380 --> 00:04:04.950
A new one?

00:04:04.950 --> 00:04:11.700
We will call this file square dot gs and it will obviously be the square.

00:04:11.700 --> 00:04:13.410
So the same as before.

00:04:13.410 --> 00:04:14.950
We will use the snippet.

00:04:14.950 --> 00:04:16.450
And inside the snippet,

00:04:16.450 --> 00:04:21.820
we will put the button that we've created just like that.

00:04:21.820 --> 00:04:22.910
And inside,

00:04:22.910 --> 00:04:24.880
Let's actually put some value.

00:04:24.880 --> 00:04:26.700
Let it be one,

00:04:26.700 --> 00:04:27.800
something like that.

00:04:27.800 --> 00:04:28.610
Now,

00:04:28.610 --> 00:04:30.280
instead of these buttons,

00:04:30.280 --> 00:04:39.910
we will import this component so import square from square instead of these bottoms.

00:04:39.910 --> 00:04:44.050
I will replace all of them with this square component.

00:04:44.050 --> 00:04:47.710
If I save it and get back to my browser,

00:04:47.710 --> 00:04:49.030
I will see the difference.

00:04:49.030 --> 00:04:51.350
They all will be set to one,

00:04:51.350 --> 00:04:53.110
which is good now.

00:04:53.110 --> 00:05:00.720
But this is not really cool that we have this one over here so we can get used off

00:05:00.720 --> 00:05:06.850
properties or arguments that we can pass to our components in the same manner as we pass

00:05:06.850 --> 00:05:10.180
attributes toe normal html tax.

00:05:10.180 --> 00:05:12.930
But before we dive into properties,

00:05:12.930 --> 00:05:15.950
if we look inside square and if we have our own it,

00:05:15.950 --> 00:05:21.550
we will see this missing an explicit type attributes for button first by es land.

00:05:21.550 --> 00:05:28.180
That's because every bottom must be associated with the type So let's pass a very first

00:05:28.180 --> 00:05:29.930
argument to these button,

00:05:29.930 --> 00:05:32.640
so we will put type over here.

00:05:32.640 --> 00:05:35.820
Then we will put the equal sign and the string,

00:05:35.820 --> 00:05:40.170
and it will automatically pick it up and proposes a few Barron's.

00:05:40.170 --> 00:05:44.310
So let's use just button and the error will disappear.

00:05:44.310 --> 00:05:45.750
So what we just did?

00:05:45.750 --> 00:05:49.580
We passed on a tribute to this button element,

00:05:49.580 --> 00:05:54.240
and it will automatically give us the intelligence whenever it's possible.

00:05:54.240 --> 00:05:55.070
If it is,

00:05:55.070 --> 00:05:55.620
let's say,

00:05:55.620 --> 00:05:57.930
a built in HTML component.

00:05:57.930 --> 00:06:01.790
All right now about our properties.

00:06:01.790 --> 00:06:07.470
It would be nice if we had some sort of a dynamic value over here instead of this hard

00:06:07.470 --> 00:06:08.350
coded one.

00:06:08.350 --> 00:06:09.610
So what we can do?

00:06:09.610 --> 00:06:13.130
We can pass custom attributes to our components.

00:06:13.130 --> 00:06:19.130
Let's say this square will have a custom attributes or a property named Let's say,

00:06:19.130 --> 00:06:19.750
value,

00:06:19.750 --> 00:06:23.030
and this value will be equal to something.

00:06:23.030 --> 00:06:29.390
Maybe 20 So this is an attribute or property,

00:06:29.390 --> 00:06:31.810
and if we pass a string,

00:06:31.810 --> 00:06:38.330
we can simply do the name off off the attributes than equal and the string.

00:06:38.330 --> 00:06:39.230
If it is,

00:06:39.230 --> 00:06:39.690
let's say,

00:06:39.690 --> 00:06:40.770
an expression,

00:06:40.770 --> 00:06:42.710
a number or a function,

00:06:42.710 --> 00:06:47.630
or maybe just a viable that you has some value and we need to pass it.

00:06:47.630 --> 00:06:52.380
We need to open always curly brackets for JavaScript expression.

00:06:52.380 --> 00:06:54.690
Just a number is an expression.

00:06:54.690 --> 00:06:57.170
We can't do something like that.

00:06:57.170 --> 00:06:58.670
It will give us an error.

00:06:58.670 --> 00:07:00.860
So in order to use it,

00:07:00.860 --> 00:07:02.650
we need to open Carly brackets.

00:07:02.650 --> 00:07:04.350
So inside this Carla brackets,

00:07:04.350 --> 00:07:11.530
let's just pass zero to this square component now to this mobile pass another value.

00:07:11.530 --> 00:07:15.640
Let's say one to at least what will pass to and so one.

00:07:15.640 --> 00:07:16.250
It's so one.

00:07:16.250 --> 00:07:22.630
Let's save it and let's now see how we can access it inside this square component because

00:07:22.630 --> 00:07:29.910
it is just a function we can receive arguments and the props that we passed through these

00:07:29.910 --> 00:07:35.350
components come as in arguments for this particular component.

00:07:35.350 --> 00:07:39.410
So here I will put props and what I will do.

00:07:39.410 --> 00:07:43.500
I will simply Consul lug this props and we will inspect right now.

00:07:43.500 --> 00:07:45.120
What do we have here?

00:07:45.120 --> 00:07:49.020
Let's get back to the browser and inside console.

00:07:49.020 --> 00:07:53.980
We will see nine council logs because we have nine square elements,

00:07:53.980 --> 00:07:55.700
but only for a three off them.

00:07:55.700 --> 00:07:57.500
We will have this value.

00:07:57.500 --> 00:07:59.010
And as you can notice,

00:07:59.010 --> 00:08:01.080
this is just an object.

00:08:01.080 --> 00:08:05.210
So these props that we passed to these components.

00:08:05.210 --> 00:08:10.030
So all of these become keys inside an object.

00:08:10.030 --> 00:08:12.100
So if we pass value,

00:08:12.100 --> 00:08:14.870
it will become key inside this object.

00:08:14.870 --> 00:08:17.420
If we rename it to whatever we want,

00:08:17.420 --> 00:08:21.840
we can use any name that we want for our components for our properties.

00:08:21.840 --> 00:08:27.680
You will see that right now this object has these key and because the rest off this

00:08:27.680 --> 00:08:31.750
components does not receive any property.

00:08:31.750 --> 00:08:34.670
That's why they are all empty.

00:08:34.670 --> 00:08:35.970
Something like that.

00:08:35.970 --> 00:08:39.340
Now what we can do since we receive it here,

00:08:39.340 --> 00:08:42.350
we can reference them inside our coat.

00:08:42.350 --> 00:08:45.590
So to use any javascript,

00:08:45.590 --> 00:08:48.660
whatever it is available or,

00:08:48.660 --> 00:08:49.070
I don't know,

00:08:49.070 --> 00:08:54.650
a function again any valid javascript expression we need to open curly brackets.

00:08:54.650 --> 00:09:01.420
So instead of hard coding one here you can open Carlin brackets and reference this function

00:09:01.420 --> 00:09:02.050
argument.

00:09:02.050 --> 00:09:04.550
So we know that it is an object,

00:09:04.550 --> 00:09:07.110
and this object has value key.

00:09:07.110 --> 00:09:10.310
So we will put props dot value.

00:09:10.310 --> 00:09:13.870
And if I save it and get back to my up,

00:09:13.870 --> 00:09:22.030
the 1st 3 squares will have 01 and two exactly the same values that we passed as the props

00:09:22.030 --> 00:09:22.030
.

00:09:22.030 --> 00:09:23.160
If I change it,

00:09:23.160 --> 00:09:27.050
it will be automatically changed something like this.

00:09:27.050 --> 00:09:31.530
But other elements are all empty because there are no values,

00:09:31.530 --> 00:09:34.720
no props that we passed to the component.

00:09:34.720 --> 00:09:37.710
And this value is simply undefined.

00:09:37.710 --> 00:09:38.900
And if we have,

00:09:38.900 --> 00:09:42.350
it will give us must used disrupting props assignment.

00:09:42.350 --> 00:09:46.480
That's because these props argument is just an object.

00:09:46.480 --> 00:09:47.710
So what we can do?

00:09:47.710 --> 00:09:53.650
We can disrupt your this object directly inside function arguments so we can open curly

00:09:53.650 --> 00:09:55.990
brackets and weaken destruction.

00:09:55.990 --> 00:10:00.850
Er value too much the same key that we passed as a prop.

00:10:00.850 --> 00:10:01.880
All right.

00:10:01.880 --> 00:10:04.040
And instead of problems don't value,

00:10:04.040 --> 00:10:05.860
we would put just value.

00:10:05.860 --> 00:10:07.880
And let's get rid of this council.

00:10:07.880 --> 00:10:08.290
Look,

00:10:08.290 --> 00:10:09.370
if I save,

00:10:09.370 --> 00:10:11.380
you will see nothing will be changed.

00:10:11.380 --> 00:10:12.640
But this will look much,

00:10:12.640 --> 00:10:13.860
much cleaner.

00:10:13.860 --> 00:10:14.800
Now,

00:10:14.800 --> 00:10:19.460
let's actually put these props to the rest off our components.

00:10:19.460 --> 00:10:24.510
So I will copy this and for the rest of components here,

00:10:24.510 --> 00:10:26.900
I will put this value,

00:10:26.900 --> 00:10:31.800
But just passing three for five over here,

00:10:31.800 --> 00:10:34.730
and the same I will do for death warrants.

00:10:34.730 --> 00:10:37.370
So 67 and eight.

00:10:37.370 --> 00:10:38.710
And if I save it,

00:10:38.710 --> 00:10:46.510
I go back Now I have my grid Whether all these values that I receive us props,

00:10:46.510 --> 00:10:48.050
and that's basically it.

00:10:48.050 --> 00:10:50.220
So these are the props,

00:10:50.220 --> 00:10:52.350
and these are the components.

00:10:52.350 --> 00:10:53.470
As you can see,

00:10:53.470 --> 00:10:56.860
it was not too complicated to create a prop.

00:10:56.860 --> 00:10:58.600
It was not too complicated,

00:10:58.600 --> 00:10:59.250
too great.

00:10:59.250 --> 00:11:00.710
And you component,

00:11:00.710 --> 00:11:04.210
let's commit our changes and finish this video.

00:11:04.210 --> 00:11:06.530
So I'm gonna stop the server.

00:11:06.530 --> 00:11:11.250
And here I will put get at dot get commit.

00:11:11.250 --> 00:11:17.100
And I will pour created board and square components.

00:11:17.100 --> 00:11:21.680
All right.

00:11:21.680 --> 00:11:22.480
Perfect.

00:11:22.480 --> 00:11:23.610
In the next video,

00:11:23.610 --> 00:11:30.280
we will get to know how to style the app and you will be satisfied because it is really,

00:11:30.280 --> 00:11:32.270
really simple and enjoyable.

00:11:32.270 --> 00:11:33.240
See you there.

