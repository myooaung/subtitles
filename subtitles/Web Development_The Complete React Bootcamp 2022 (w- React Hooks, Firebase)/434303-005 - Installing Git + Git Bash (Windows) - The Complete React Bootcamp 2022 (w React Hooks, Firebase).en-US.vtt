WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.880
Hey, in this video we will install

00:00:02.880 --> 00:00:05.625
and get what is good and why do we need it?

00:00:05.625 --> 00:00:08.595
We're going to cover all of that in the upcoming video.

00:00:08.595 --> 00:00:11.070
This video is all about installation.

00:00:11.070 --> 00:00:12.015
Let's go.

00:00:12.015 --> 00:00:13.830
As always, we first open

00:00:13.830 --> 00:00:16.170
Google and then we'll look for and

00:00:16.170 --> 00:00:20.490
get this will bring us to the official website.

00:00:20.490 --> 00:00:23.325
In a new tab I'm going to open don't loads.

00:00:23.325 --> 00:00:24.795
And in the current tab,

00:00:24.795 --> 00:00:30.465
I'm going to look for Git installed at location.

00:00:30.465 --> 00:00:33.990
This will bring us to at least one.com.

00:00:33.990 --> 00:00:36.350
So why do we need it?

00:00:36.350 --> 00:00:39.410
If you if you will see discrepancies in

00:00:39.410 --> 00:00:42.020
Git installation or if

00:00:42.020 --> 00:00:45.005
you are lost about Git installation.

00:00:45.005 --> 00:00:49.280
This is latest, up-to-date get insolation tutorial.

00:00:49.280 --> 00:00:50.585
I recommend that one.

00:00:50.585 --> 00:00:52.399
So if you are on MacOS,

00:00:52.399 --> 00:00:54.215
linux, Windows, it doesn't matter.

00:00:54.215 --> 00:00:56.345
Just navigate here and

00:00:56.345 --> 00:00:58.790
it's very easy and straightforward.

00:00:58.790 --> 00:01:01.895
All right, Now let's get back to downloads.

00:01:01.895 --> 00:01:05.150
This video is targeted at Windows users,

00:01:05.150 --> 00:01:08.030
but if you are from Linux or macOS,

00:01:08.030 --> 00:01:09.770
it's totally fine too.

00:01:09.770 --> 00:01:13.175
So if you're on Linux, just click here,

00:01:13.175 --> 00:01:15.740
and depending on your distribution,

00:01:15.740 --> 00:01:17.420
just select the command.

00:01:17.420 --> 00:01:19.775
It is very easy to do, okay?

00:01:19.775 --> 00:01:21.995
If you come from macOS world,

00:01:21.995 --> 00:01:23.780
you have a few options.

00:01:23.780 --> 00:01:25.430
You can install good-bye using

00:01:25.430 --> 00:01:27.740
a package manager like Homebrew,

00:01:27.740 --> 00:01:30.710
or you can use an installer directly.

00:01:30.710 --> 00:01:35.194
That tutorial here, it recommends to use an installer,

00:01:35.194 --> 00:01:38.915
which is the easiest way on MacOS, okay?

00:01:38.915 --> 00:01:40.490
Since we are on Windows,

00:01:40.490 --> 00:01:42.845
we're going to click on Windows

00:01:42.845 --> 00:01:45.110
and we will get the installer.

00:01:45.110 --> 00:01:48.680
Again if you are coming from a different OS,

00:01:48.680 --> 00:01:51.830
I still recommend you to quickly go through this video

00:01:51.830 --> 00:01:55.250
because we're going to cover a few important questions.

00:01:55.250 --> 00:02:01.730
All right, so we opened the installer and we hit Next.

00:02:01.730 --> 00:02:03.515
What do we need here?

00:02:03.515 --> 00:02:04.744
Additional icons.

00:02:04.744 --> 00:02:07.970
This is up to you, Windows Explorer integration.

00:02:07.970 --> 00:02:10.550
So this is Windows only option.

00:02:10.550 --> 00:02:13.655
And we wanted to select Git Bash over here,

00:02:13.655 --> 00:02:16.385
and we wanted to uncheck good GUI.

00:02:16.385 --> 00:02:17.855
Nobody uses good to go.

00:02:17.855 --> 00:02:22.145
This is a visual tool to represent a good, Okay?

00:02:22.145 --> 00:02:25.085
And Git Bash is a short version

00:02:25.085 --> 00:02:29.270
of Unix terminal called Bash.

00:02:29.270 --> 00:02:31.790
So this short version is just

00:02:31.790 --> 00:02:35.075
available on Windows under Git Bash day.

00:02:35.075 --> 00:02:39.875
And I think this is very useful and convenient.

00:02:39.875 --> 00:02:43.310
So on Windows we have cmd and PowerShell,

00:02:43.310 --> 00:02:45.695
and we're going to install Git Bash and use it

00:02:45.695 --> 00:02:48.275
instead of CMD and PowerShell.

00:02:48.275 --> 00:02:51.755
Okay, Then we wanted to select good L of c.

00:02:51.755 --> 00:02:53.690
So this is just in case if we have

00:02:53.690 --> 00:02:56.735
really large files and our good project,

00:02:56.735 --> 00:02:59.660
this option will allow us to put those files.

00:02:59.660 --> 00:03:01.385
So in a good project basically,

00:03:01.385 --> 00:03:04.070
then we wanted to keep associations.

00:03:04.070 --> 00:03:06.500
I don't need daily updates

00:03:06.500 --> 00:03:09.215
and Git Bash profile to Windows Terminal.

00:03:09.215 --> 00:03:11.060
So I'm not sure about this one,

00:03:11.060 --> 00:03:12.530
but I guess this is related to

00:03:12.530 --> 00:03:16.085
the new Windows Terminal that was recently published.

00:03:16.085 --> 00:03:19.130
Okay, so I don't want it either.

00:03:19.130 --> 00:03:21.485
So next, this step,

00:03:21.485 --> 00:03:25.805
let's choose an editor that you feel comfortable about.

00:03:25.805 --> 00:03:31.055
So I know that you don't know about yet, but in good,

00:03:31.055 --> 00:03:34.310
there there is a possibility there that there will

00:03:34.310 --> 00:03:37.970
be a conflict between multiple files.

00:03:37.970 --> 00:03:40.145
And to resolve that conflict,

00:03:40.145 --> 00:03:41.510
you will have to manually

00:03:41.510 --> 00:03:44.360
go through those files and edit them.

00:03:44.360 --> 00:03:46.700
So when this conflict occurs,

00:03:46.700 --> 00:03:49.355
get will open an editor

00:03:49.355 --> 00:03:51.950
that you select over here by default.

00:03:51.950 --> 00:03:56.600
Okay, so choose something that you know how to use,

00:03:56.600 --> 00:03:59.810
for example, Visual Studio Code.

00:03:59.810 --> 00:04:03.380
All right, next here.

00:04:03.380 --> 00:04:05.150
What do we have here, justing,

00:04:05.150 --> 00:04:06.830
the name of the initial branch

00:04:06.830 --> 00:04:08.180
in your repository as well.

00:04:08.180 --> 00:04:09.545
This is a tricky one.

00:04:09.545 --> 00:04:11.690
We're going to select, we're going to select,

00:04:11.690 --> 00:04:13.040
let, get to decide.

00:04:13.040 --> 00:04:15.080
But what this is all about.

00:04:15.080 --> 00:04:18.800
Well, I get, I know that you don't know about yet,

00:04:18.800 --> 00:04:21.770
but there is this concept of branches in good.

00:04:21.770 --> 00:04:23.915
So about a year ago,

00:04:23.915 --> 00:04:26.765
good community and GitHub community

00:04:26.765 --> 00:04:30.680
decided to change the default branch name two,

00:04:30.680 --> 00:04:35.675
main right before it was called master.

00:04:35.675 --> 00:04:39.740
Now it is officially called main,

00:04:39.740 --> 00:04:41.810
but still there are lots of projects

00:04:41.810 --> 00:04:44.480
that keep using master.

00:04:44.480 --> 00:04:47.300
So what I recommend to do is just choose,

00:04:47.300 --> 00:04:49.880
Select, let, get, decide.

00:04:49.880 --> 00:04:51.905
Then let's hit Next.

00:04:51.905 --> 00:04:54.590
And here we have adjusting your path environment

00:04:54.590 --> 00:04:57.230
so we want to select Recommended second option.

00:04:57.230 --> 00:04:59.090
It will allow us to use Git from

00:04:59.090 --> 00:05:01.760
any terminal shell, whether it's CMD,

00:05:01.760 --> 00:05:04.460
PowerShell or Bash, or from

00:05:04.460 --> 00:05:06.455
any other software and

00:05:06.455 --> 00:05:08.825
shells that we're going to install and use.

00:05:08.825 --> 00:05:12.740
So this is why second option is what we want.

00:05:12.740 --> 00:05:15.800
At this step. We don't want to change anything,

00:05:15.800 --> 00:05:21.185
just keep a default use bundled OpenSSH will get four.

00:05:21.185 --> 00:05:25.070
It's connections might use SSH tunnels.

00:05:25.070 --> 00:05:32.840
Okay. That's why it comes bundled up with SSH executable,

00:05:32.840 --> 00:05:35.015
which comes from OpenSSH.

00:05:35.015 --> 00:05:40.415
Okay, Next, here, https transport back-end.

00:05:40.415 --> 00:05:42.710
Keep using OpenSSL.

00:05:42.710 --> 00:05:44.810
We don't want to change it as well.

00:05:44.810 --> 00:05:49.070
Next here about line endings.

00:05:49.070 --> 00:05:52.370
Well, good is a cross-platform tool.

00:05:52.370 --> 00:05:56.225
However, there are some specific things

00:05:56.225 --> 00:05:58.355
that must be somehow,

00:05:58.355 --> 00:06:00.545
somehow managed or controlled to

00:06:00.545 --> 00:06:03.575
achieve that cross-platform availability.

00:06:03.575 --> 00:06:07.535
And one of those things is line endings.

00:06:07.535 --> 00:06:11.300
Thing is that on Windows and on Unix-like systems,

00:06:11.300 --> 00:06:16.220
line endings have different codings, okay?

00:06:16.220 --> 00:06:21.920
And it might create big problems to get projects.

00:06:21.920 --> 00:06:25.475
So this will give us ability to

00:06:25.475 --> 00:06:29.465
keep our project cross-platform without any problems.

00:06:29.465 --> 00:06:31.385
This is a very minor thing,

00:06:31.385 --> 00:06:33.350
but it is very important because if you

00:06:33.350 --> 00:06:35.720
select third option and if you're

00:06:35.720 --> 00:06:37.190
gonna do some changes to get

00:06:37.190 --> 00:06:38.945
project on Windows and then you

00:06:38.945 --> 00:06:42.694
open that project on a different OS,

00:06:42.694 --> 00:06:45.710
you will experience a lot of problems.

00:06:45.710 --> 00:06:47.315
Why we don't want it.

00:06:47.315 --> 00:06:50.585
So for Windows, we select this option.

00:06:50.585 --> 00:06:54.050
Next, configured the Terminal Emulator

00:06:54.050 --> 00:06:55.400
to use with Git Bash.

00:06:55.400 --> 00:06:58.550
Okay, so Git Bash is going to be again our new shell that

00:06:58.550 --> 00:07:01.865
we will use as an alternative to CMD and PowerShell.

00:07:01.865 --> 00:07:06.350
So minty is that terminal window, okay,

00:07:06.350 --> 00:07:09.545
so if I open CMD,

00:07:09.545 --> 00:07:14.269
I have this default windows window,

00:07:14.269 --> 00:07:15.920
basically the right, just like it says,

00:07:15.920 --> 00:07:18.560
the second option here, default console window.

00:07:18.560 --> 00:07:23.195
So mentee is that that software,

00:07:23.195 --> 00:07:27.785
basically that runs the trans terminal shell,

00:07:27.785 --> 00:07:29.510
shells inside of it.

00:07:29.510 --> 00:07:31.400
So it will be that window

00:07:31.400 --> 00:07:33.230
that we will be able to configure,

00:07:33.230 --> 00:07:35.990
change its color and coding and

00:07:35.990 --> 00:07:39.320
other things may be key bindings, all of that.

00:07:39.320 --> 00:07:41.405
So this is just that, you know,

00:07:41.405 --> 00:07:44.075
windowed that runs terminal shells.

00:07:44.075 --> 00:07:46.850
Okay? So we want to use mentee,

00:07:46.850 --> 00:07:49.820
then choose the default behavior of good poll.

00:07:49.820 --> 00:07:51.665
You don't know about it yet,

00:07:51.665 --> 00:07:54.020
but let's choose default.

00:07:54.020 --> 00:07:57.995
This is the preferred option, almost always.

00:07:57.995 --> 00:07:59.855
And I would say always.

00:07:59.855 --> 00:08:02.930
Next, choose a credential helper.

00:08:02.930 --> 00:08:05.855
Here we want to select Git Credential Manager core.

00:08:05.855 --> 00:08:07.835
This is specific to Windows here,

00:08:07.835 --> 00:08:09.530
but still use that option.

00:08:09.530 --> 00:08:11.330
What it does, there will be times,

00:08:11.330 --> 00:08:13.055
I mean, always like that.

00:08:13.055 --> 00:08:16.670
We wanted to host our good project somewhere.

00:08:16.670 --> 00:08:18.695
We hosted on GitHub.

00:08:18.695 --> 00:08:22.505
And to authorize ourselves to GitHub,

00:08:22.505 --> 00:08:25.175
we will have to enter our credentials for a GitHub,

00:08:25.175 --> 00:08:26.930
our username and password.

00:08:26.930 --> 00:08:29.990
So to not answer them every time

00:08:29.990 --> 00:08:32.030
those credentials must be safely

00:08:32.030 --> 00:08:34.385
stored somewhere in a cache storage.

00:08:34.385 --> 00:08:36.530
On Windows, this cache storage is

00:08:36.530 --> 00:08:39.440
named Git Credential Manager core.

00:08:39.440 --> 00:08:42.050
So this is why we needed to

00:08:42.050 --> 00:08:45.080
not enter our credentials every time.

00:08:45.080 --> 00:08:48.875
We would like to push our changes to GitHub.

00:08:48.875 --> 00:08:52.390
Okay, Next, at this step we

00:08:52.390 --> 00:08:56.170
wanted to enable system caching, symbolic cleanings.

00:08:56.170 --> 00:08:57.865
Keep it as it is.

00:08:57.865 --> 00:09:00.715
We hit next and we don't need

00:09:00.715 --> 00:09:03.970
any experimental features at all.

00:09:03.970 --> 00:09:07.190
So just hit Install.

00:09:07.200 --> 00:09:09.700
Removing previous version.

00:09:09.700 --> 00:09:13.375
Yeah, I mean, for me because I already had it installed.

00:09:13.375 --> 00:09:16.960
Let's wait for a second until it's

00:09:16.960 --> 00:09:20.960
installed and let's see what we have.

00:09:25.110 --> 00:09:29.605
Okay, good. Completing the good setup wizard.

00:09:29.605 --> 00:09:32.935
I don't want release notes finish.

00:09:32.935 --> 00:09:35.200
Now, good is installed.

00:09:35.200 --> 00:09:36.925
How we can verify that?

00:09:36.925 --> 00:09:39.955
Let's go to CMD.

00:09:39.955 --> 00:09:43.630
And in cmd, we want to just

00:09:43.630 --> 00:09:47.680
type git space dash, dash version.

00:09:47.680 --> 00:09:50.455
And if you see the version installed,

00:09:50.455 --> 00:09:53.439
congrats, get is now installed.

00:09:53.439 --> 00:09:57.310
Now, this is only related to Windows users who installed,

00:09:57.310 --> 00:09:59.650
who selected Git Bash during installation.

00:09:59.650 --> 00:10:01.360
How we can verify keep Bash?

00:10:01.360 --> 00:10:04.870
Well, we can run git Bash directly from another shell,

00:10:04.870 --> 00:10:07.000
from seeing Cmd for example.

00:10:07.000 --> 00:10:09.850
So if I type Git Bash with dash inside,

00:10:09.850 --> 00:10:12.324
I will see Git Bash is not recognized.

00:10:12.324 --> 00:10:15.595
Well, this is to be honest, expected.

00:10:15.595 --> 00:10:17.230
And to fix that,

00:10:17.230 --> 00:10:19.450
we have to do again,

00:10:19.450 --> 00:10:22.765
a small change in our path variable.

00:10:22.765 --> 00:10:25.780
So what do we need to do is to go to

00:10:25.780 --> 00:10:29.275
start Panel and in search with Type III and V.

00:10:29.275 --> 00:10:30.550
Then we go to edit

00:10:30.550 --> 00:10:34.720
the system environment variables and vitamin vegetables.

00:10:34.720 --> 00:10:38.935
And under System bubbles will look for path.

00:10:38.935 --> 00:10:40.630
Double-click on that.

00:10:40.630 --> 00:10:42.460
And here at the end of the list you

00:10:42.460 --> 00:10:44.230
will see C Program Files, good,

00:10:44.230 --> 00:10:46.660
CMD or whatever installation path

00:10:46.660 --> 00:10:48.520
you chose during installation.

00:10:48.520 --> 00:10:53.170
Okay, so if we open this path,

00:10:53.170 --> 00:10:55.480
Let's go to folders.

00:10:55.480 --> 00:10:58.335
And let's go here.

00:10:58.335 --> 00:11:01.430
Executables that we have here are good,

00:11:01.430 --> 00:11:05.540
good GUI, everything but except Git Bash.

00:11:05.540 --> 00:11:08.060
However, if we go to get

00:11:08.060 --> 00:11:11.315
folder here we have Git Bash executable.

00:11:11.315 --> 00:11:11.990
Alright?

00:11:11.990 --> 00:11:18.605
So in order to use that executable from the terminal,

00:11:18.605 --> 00:11:25.475
we have to add folder path to the path variable. Okay?

00:11:25.475 --> 00:11:27.770
So we go back here to that list.

00:11:27.770 --> 00:11:31.190
We click on New and we add C Program Files.

00:11:31.190 --> 00:11:32.000
Good.

00:11:32.000 --> 00:11:35.585
So we hit OK, OK, OK.

00:11:35.585 --> 00:11:41.180
Now I'm going to restart the terminal again.

00:11:41.180 --> 00:11:44.105
And now if I type Git Bash,

00:11:44.105 --> 00:11:49.369
boom, I'm inside Git Bash shell and it uses minty.

00:11:49.369 --> 00:11:52.070
So if I click on options here,

00:11:52.070 --> 00:11:54.664
you will see that logo of minty.

00:11:54.664 --> 00:11:57.290
So it might look very similar,

00:11:57.290 --> 00:12:00.995
but it actually uses like Windows default console.

00:12:00.995 --> 00:12:05.809
But this runs inside minty Terminal Emulator.

00:12:05.809 --> 00:12:07.280
All right, if you want to,

00:12:07.280 --> 00:12:09.710
you can configure different options here,

00:12:09.710 --> 00:12:11.885
Key selection, Windows Terminal.

00:12:11.885 --> 00:12:14.090
So these are all the options and just

00:12:14.090 --> 00:12:16.415
in case, and this is Git Bash.

00:12:16.415 --> 00:12:20.765
Now if we want to type very basic Linux commands here,

00:12:20.765 --> 00:12:23.555
we're able to do that, for example, ls,

00:12:23.555 --> 00:12:28.320
to list all files in this folder.

00:12:28.630 --> 00:12:32.600
Okay, Great, And this is our C Users entropy.

00:12:32.600 --> 00:12:35.960
This is mine. It will be your username over here.

00:12:35.960 --> 00:12:38.255
If we wanted to go to different disk,

00:12:38.255 --> 00:12:40.445
we're going to type cd to

00:12:40.445 --> 00:12:43.760
change directory and then the name of disk.

00:12:43.760 --> 00:12:46.970
Great, so this is about Git Bash.

00:12:46.970 --> 00:12:52.310
You can also run it from the run window in start

00:12:52.310 --> 00:12:58.670
Panel or by pressing Windows plus r and typing Git Bash.

00:12:58.670 --> 00:13:02.120
And you are inside.

00:13:02.120 --> 00:13:04.550
That's basically, it's, this is

00:13:04.550 --> 00:13:07.940
everything we need to configure Git, okay,

00:13:07.940 --> 00:13:14.750
Maybe one more option is that Git config command, right?

00:13:14.750 --> 00:13:17.270
So if we go to that at lesion to total,

00:13:17.270 --> 00:13:19.640
it doesn't matter when for Windows,

00:13:19.640 --> 00:13:20.915
for Linux doesn't matter.

00:13:20.915 --> 00:13:23.180
So here we need to configure,

00:13:23.180 --> 00:13:28.355
get to use our name and email, right?

00:13:28.355 --> 00:13:34.520
So just copy this command here and paste it in terminal.

00:13:34.520 --> 00:13:37.744
And here enter your name.

00:13:37.744 --> 00:13:39.410
It can be your real name on it,

00:13:39.410 --> 00:13:42.335
or it can be your nickname, whatever you do.

00:13:42.335 --> 00:13:46.730
So press Enter for your username,

00:13:46.730 --> 00:13:48.680
and then the same for email.

00:13:48.680 --> 00:13:50.165
So what are those?

00:13:50.165 --> 00:13:55.385
Those will be visible in the commit messages.

00:13:55.385 --> 00:13:56.810
In the good history,

00:13:56.810 --> 00:13:58.340
we will cover all of that,

00:13:58.340 --> 00:14:00.980
but this is something that other users and

00:14:00.980 --> 00:14:03.875
you will see in your project history,

00:14:03.875 --> 00:14:06.335
pick something real, that's basically

00:14:06.335 --> 00:14:08.990
it gets installed for Windows user,

00:14:08.990 --> 00:14:10.400
you get bashes installed.

00:14:10.400 --> 00:14:11.660
In the upcoming video,

00:14:11.660 --> 00:14:13.400
we will talk about it in

00:14:13.400 --> 00:14:16.865
details and how it will make our lives easier.

00:14:16.865 --> 00:14:18.840
See you there.
