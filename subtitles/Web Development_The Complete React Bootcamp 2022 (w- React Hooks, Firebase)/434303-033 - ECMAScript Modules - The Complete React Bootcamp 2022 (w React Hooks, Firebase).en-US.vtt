WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.820
Hey, in this video I would like to talk about

00:00:02.820 --> 00:00:05.625
atmospheric modules in Node.JS environment,

00:00:05.625 --> 00:00:07.800
we already know that there is

00:00:07.800 --> 00:00:12.345
a native module system which is called common GS.

00:00:12.345 --> 00:00:15.780
It uses require and module

00:00:15.780 --> 00:00:19.140
exports syntax to import

00:00:19.140 --> 00:00:20.430
and export something from

00:00:20.430 --> 00:00:22.544
a module in the browser environment,

00:00:22.544 --> 00:00:25.710
we have also a native browser module system

00:00:25.710 --> 00:00:28.360
which is called script.

00:00:28.360 --> 00:00:31.130
Modules and atmospheric modules

00:00:31.130 --> 00:00:34.820
use import and export syntax.

00:00:34.820 --> 00:00:38.015
Nodejs community pushes Ackman Script modules

00:00:38.015 --> 00:00:41.585
to be implemented in Node.JS in order to

00:00:41.585 --> 00:00:44.825
replace CommonJS because Ekman Script modules

00:00:44.825 --> 00:00:48.530
are more convenient and more comprehensive.

00:00:48.530 --> 00:00:51.635
And eventually we have built tools that

00:00:51.635 --> 00:00:54.830
allow us to use ACML Script modules in Node.JS

00:00:54.830 --> 00:00:58.025
environment without direct support

00:00:58.025 --> 00:00:59.585
for atmospheric modules in

00:00:59.585 --> 00:01:01.625
Node.JS environment will anyways,

00:01:01.625 --> 00:01:05.180
and modern JavaScript, you will see ECMO Script modules.

00:01:05.180 --> 00:01:09.185
And rarely, I would say you would see CommonJS.

00:01:09.185 --> 00:01:11.375
Now in this video,

00:01:11.375 --> 00:01:15.320
I would like to talk about import and export of

00:01:15.320 --> 00:01:17.210
atmospheric modules because there are

00:01:17.210 --> 00:01:19.100
a few important aspects that we

00:01:19.100 --> 00:01:21.470
need to understand about them.

00:01:21.470 --> 00:01:23.914
First, let's create two files.

00:01:23.914 --> 00:01:28.790
So I'm going to rename file.js to file.js MGS

00:01:28.790 --> 00:01:31.250
in order to use ACML Script modules

00:01:31.250 --> 00:01:34.264
natively in Node.JS environment.

00:01:34.264 --> 00:01:39.695
Then I'm going to create a second file called second MGS.

00:01:39.695 --> 00:01:41.270
And from second MGS,

00:01:41.270 --> 00:01:43.730
I'm going to export a few things.

00:01:43.730 --> 00:01:47.135
So first I'm going to create a variable called Five,

00:01:47.135 --> 00:01:53.285
and I'm going to export five right next to it.

00:01:53.285 --> 00:01:57.740
I'm going to export const 10.

00:01:57.740 --> 00:02:00.185
And I'm going to specify it like that.

00:02:00.185 --> 00:02:01.505
You see the difference?

00:02:01.505 --> 00:02:03.845
So first I created a variable,

00:02:03.845 --> 00:02:05.315
then I exported it.

00:02:05.315 --> 00:02:07.235
And here is just a one-liner,

00:02:07.235 --> 00:02:10.460
basically the same thing as at the top.

00:02:10.460 --> 00:02:13.340
Maybe let's export something else.

00:02:13.340 --> 00:02:15.440
Export const.

00:02:15.440 --> 00:02:18.770
My name is going to be Andrew.

00:02:18.770 --> 00:02:20.555
And at the very end,

00:02:20.555 --> 00:02:24.980
I'm going to put export default and this time,

00:02:24.980 --> 00:02:29.600
let it be shop just like that.

00:02:29.600 --> 00:02:30.965
So as you can see,

00:02:30.965 --> 00:02:33.259
we have two types of experts.

00:02:33.259 --> 00:02:39.440
We have named exports and we have one default export.

00:02:39.440 --> 00:02:41.495
So an aqua Script modules,

00:02:41.495 --> 00:02:47.120
there are two types of experts named and default.

00:02:47.120 --> 00:02:50.225
There can be only one default export in a module

00:02:50.225 --> 00:02:54.020
and as many as you want named exports.

00:02:54.020 --> 00:02:57.905
Now, how we can actually import all of those.

00:02:57.905 --> 00:03:01.355
If I go to File MGS here,

00:03:01.355 --> 00:03:09.665
I need to type import something from second MGS.

00:03:09.665 --> 00:03:11.960
Great. So what should I supply over

00:03:11.960 --> 00:03:15.020
here in order to import 5?

00:03:15.020 --> 00:03:16.430
Well, the thing is that

00:03:16.430 --> 00:03:20.765
any module has its own export object,

00:03:20.765 --> 00:03:22.475
the expert object for

00:03:22.475 --> 00:03:25.820
second MGS is going to look like that.

00:03:25.820 --> 00:03:29.090
So first we explore it five, right?

00:03:29.090 --> 00:03:32.000
Which is going to be our named expert because well,

00:03:32.000 --> 00:03:34.670
we have Bible named five and

00:03:34.670 --> 00:03:37.850
we export variable named five.

00:03:37.850 --> 00:03:41.675
So five is going to be five,

00:03:41.675 --> 00:03:42.935
then this same width,

00:03:42.935 --> 00:03:47.360
10, and the same with my name.

00:03:47.360 --> 00:03:51.920
These are all of our named exports.

00:03:51.920 --> 00:03:54.485
Then at the end we have export default shot,

00:03:54.485 --> 00:03:56.060
default experts.

00:03:56.060 --> 00:03:58.010
They do not have any name.

00:03:58.010 --> 00:03:59.900
That's because they are default.

00:03:59.900 --> 00:04:02.570
You export just a value.

00:04:02.570 --> 00:04:05.045
You can see that I didn't create

00:04:05.045 --> 00:04:09.530
any explicit name for a string sharp, right?

00:04:09.530 --> 00:04:11.300
It is not assigned to any variable,

00:04:11.300 --> 00:04:13.565
it is just exported by default,

00:04:13.565 --> 00:04:16.535
atmospheric modules will actually append

00:04:16.535 --> 00:04:19.550
that default export to the export object

00:04:19.550 --> 00:04:22.835
under default key, just like that.

00:04:22.835 --> 00:04:27.170
So eventually we end up with an object like that.

00:04:27.170 --> 00:04:31.175
This is what we export from second mgs.

00:04:31.175 --> 00:04:34.280
Now, if I want to import 5,

00:04:34.280 --> 00:04:36.545
I can use object is structuring.

00:04:36.545 --> 00:04:37.310
Why?

00:04:37.310 --> 00:04:40.130
Because well, we export an object.

00:04:40.130 --> 00:04:43.205
So again, every module has an expert object,

00:04:43.205 --> 00:04:45.155
and since it is an object,

00:04:45.155 --> 00:04:47.495
we can use object destruction.

00:04:47.495 --> 00:04:48.515
That's why.

00:04:48.515 --> 00:04:50.195
Here next to import,

00:04:50.195 --> 00:04:53.165
I'm going to put curly brackets for this structuring.

00:04:53.165 --> 00:04:55.655
And I will import 5, right,

00:04:55.655 --> 00:05:00.125
specified the key that I wanted to import 5.

00:05:00.125 --> 00:05:03.515
Also, I'd like to grab maybe my name,

00:05:03.515 --> 00:05:05.945
five and my name.

00:05:05.945 --> 00:05:09.740
Let's console.log five and my name.

00:05:09.740 --> 00:05:13.865
And let's execute the script to verify that.

00:05:13.865 --> 00:05:16.010
And we see five and Andrew.

00:05:16.010 --> 00:05:17.330
Which is correct.

00:05:17.330 --> 00:05:21.200
However, what about our default export over here?

00:05:21.200 --> 00:05:24.095
Let's try and import default.

00:05:24.095 --> 00:05:27.170
Actually less destruction default.

00:05:27.170 --> 00:05:28.805
If I will do that,

00:05:28.805 --> 00:05:31.520
I will instantly have syntax error.

00:05:31.520 --> 00:05:33.860
The thing is that we cannot just use

00:05:33.860 --> 00:05:36.800
that reserved default keyword.

00:05:36.800 --> 00:05:41.659
This is not allowed in order to import default export,

00:05:41.659 --> 00:05:44.000
we don't need to use the structuring.

00:05:44.000 --> 00:05:45.275
Instead.

00:05:45.275 --> 00:05:46.865
We just have to give it

00:05:46.865 --> 00:05:50.150
our own name for the exported value.

00:05:50.150 --> 00:05:51.545
So let it be

00:05:51.545 --> 00:05:58.430
my default import comma and then all named exports.

00:05:58.430 --> 00:06:03.515
So if we don't need actually all those named exports,

00:06:03.515 --> 00:06:06.830
we can only import default export,

00:06:06.830 --> 00:06:08.525
which is going to be sharp.

00:06:08.525 --> 00:06:10.010
So I'm going to remove

00:06:10.010 --> 00:06:11.900
this structuring part and

00:06:11.900 --> 00:06:14.105
I will keep only my default import.

00:06:14.105 --> 00:06:19.280
Now, let me try and console log my default import.

00:06:19.280 --> 00:06:22.070
You will see sharp and it doesn't matter

00:06:22.070 --> 00:06:26.060
what name I supply for my default import.

00:06:26.060 --> 00:06:28.925
It does not matter because we'll initially,

00:06:28.925 --> 00:06:31.310
it does not have any variable name.

00:06:31.310 --> 00:06:34.835
Unlike with our named experts,

00:06:34.835 --> 00:06:37.460
they all have a meaningful name.

00:06:37.460 --> 00:06:40.535
We export it variable named five.

00:06:40.535 --> 00:06:43.925
That's why when we're going to import that variable,

00:06:43.925 --> 00:06:46.130
we can just rename it, right?

00:06:46.130 --> 00:06:48.770
We can just put 55

00:06:48.770 --> 00:06:52.655
capitalized does not exist on the exported object.

00:06:52.655 --> 00:06:55.235
We have five, which is lowercase.

00:06:55.235 --> 00:06:57.575
That's why we have to strictly follow

00:06:57.575 --> 00:07:00.575
the same rules as with object destruction.

00:07:00.575 --> 00:07:04.805
We have to use the same names that we export.

00:07:04.805 --> 00:07:07.745
Another use case would be when we have to

00:07:07.745 --> 00:07:11.960
import all of that as a one single object.

00:07:11.960 --> 00:07:13.895
Just like you see over here,

00:07:13.895 --> 00:07:17.555
we do not want to separate like named exports

00:07:17.555 --> 00:07:21.740
and default export, just like that.

00:07:21.740 --> 00:07:23.405
We don't want to separate them like that.

00:07:23.405 --> 00:07:28.010
So instead we wanted to receive the one whole object.

00:07:28.010 --> 00:07:29.495
So in this case,

00:07:29.495 --> 00:07:32.525
we can do import asterix

00:07:32.525 --> 00:07:35.495
as and then the name of the object.

00:07:35.495 --> 00:07:39.275
So let it be second module.

00:07:39.275 --> 00:07:43.250
And now if I'm going to cancel log second module,

00:07:43.250 --> 00:07:45.680
you will see that I have,

00:07:45.680 --> 00:07:48.905
will basically my export object.

00:07:48.905 --> 00:07:50.660
I have 5, 10,

00:07:50.660 --> 00:07:53.090
my name and default.

00:07:53.090 --> 00:07:56.795
And now in order to access default expert,

00:07:56.795 --> 00:08:01.400
I need to now actually reference the default key, right?

00:08:01.400 --> 00:08:02.915
You will see sharp.

00:08:02.915 --> 00:08:05.000
If I need to access 10,

00:08:05.000 --> 00:08:07.655
I will have to use 10.

00:08:07.655 --> 00:08:09.545
So what we just did,

00:08:09.545 --> 00:08:12.200
we imported the whole module

00:08:12.200 --> 00:08:14.270
into that single second module,

00:08:14.270 --> 00:08:16.384
batter bowl, I would say in practice,

00:08:16.384 --> 00:08:20.120
this is less common in practice in real world.

00:08:20.120 --> 00:08:21.425
Most of the time,

00:08:21.425 --> 00:08:23.810
we're going to see either a default export

00:08:23.810 --> 00:08:25.325
or named export.

00:08:25.325 --> 00:08:27.980
They are used a lot in real-world.

00:08:27.980 --> 00:08:30.605
We actually going to see either like that

00:08:30.605 --> 00:08:35.555
510 or if a module has only default export,

00:08:35.555 --> 00:08:41.480
we would use only this default import.

00:08:41.480 --> 00:08:45.170
And we would use it just like that.

00:08:45.170 --> 00:08:48.740
Well, that's where basically you're going to see it.

00:08:48.740 --> 00:08:51.470
It's not that hard to understand that part.

00:08:51.470 --> 00:08:53.570
You just need to always remember that there are

00:08:53.570 --> 00:08:55.700
two types of export.

00:08:55.700 --> 00:08:58.805
A default export and named export,

00:08:58.805 --> 00:09:01.670
there is only one default export for

00:09:01.670 --> 00:09:03.620
a single module you cannot

00:09:03.620 --> 00:09:06.875
use to export default over here.

00:09:06.875 --> 00:09:09.335
If I will try and do that,

00:09:09.335 --> 00:09:11.510
you will see that I will have

00:09:11.510 --> 00:09:13.760
syntax error identifier default

00:09:13.760 --> 00:09:15.890
has already been declared.

00:09:15.890 --> 00:09:18.530
I recommend you to always remember that

00:09:18.530 --> 00:09:21.410
every module has an object which is

00:09:21.410 --> 00:09:24.695
being exported and all named exports

00:09:24.695 --> 00:09:27.500
are merged into that object.

00:09:27.500 --> 00:09:29.960
Way it is easier to remember that you

00:09:29.960 --> 00:09:32.585
have to import that object.

00:09:32.585 --> 00:09:35.015
Using object is structuring.

00:09:35.015 --> 00:09:37.010
I think ECMO Script modules are

00:09:37.010 --> 00:09:38.945
fun and I really do like them.

00:09:38.945 --> 00:09:42.900
And I hope U2 going to see you in the next one.
