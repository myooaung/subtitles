WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.840
Hey there.

00:00:00.840 --> 00:00:01.600
In this video,

00:00:01.600 --> 00:00:07.960
we will handle delish in off chap messages for that rubble at another Aiken Bt in control

00:00:07.960 --> 00:00:09.160
to message item.

00:00:09.160 --> 00:00:09.970
Let's go.

00:00:09.970 --> 00:00:12.640
Let's navigate to message item Dodgy?

00:00:12.640 --> 00:00:12.990
Yes.

00:00:12.990 --> 00:00:15.520
And here next to like,

00:00:15.520 --> 00:00:16.770
I can begin control.

00:00:16.770 --> 00:00:22.410
Let another Aiken between control to delete the message and it will be visible on Lee to

00:00:22.410 --> 00:00:23.130
the message.

00:00:23.130 --> 00:00:23.640
Author.

00:00:23.640 --> 00:00:26.060
So Onley message author can do that.

00:00:26.060 --> 00:00:31.390
So let's copy this and let's conditionally render our next Aiken became control.

00:00:31.390 --> 00:00:35.330
So if we are author off the message,

00:00:35.330 --> 00:00:37.480
only then we will be able to see that.

00:00:37.480 --> 00:00:39.190
So we don't need color.

00:00:39.190 --> 00:00:39.850
Brad,

00:00:39.850 --> 00:00:41.200
we need is visible.

00:00:41.200 --> 00:00:43.240
I can name is going to be close.

00:00:43.240 --> 00:00:47.720
Tool tip is going to be delayed This message We don't need veg content.

00:00:47.720 --> 00:00:53.750
And for unclip we will add handle dill it that we will receive from props.

00:00:53.750 --> 00:00:54.800
Okay,

00:00:54.800 --> 00:00:56.600
I guess we are finished here.

00:00:56.600 --> 00:00:59.050
Now let's take a look If I,

00:00:59.050 --> 00:01:01.280
however I can see delivered this message,

00:01:01.280 --> 00:01:01.540
okay,

00:01:01.540 --> 00:01:02.200
Pretty cool.

00:01:02.200 --> 00:01:04.980
Now let's not engage two messages in text togs.

00:01:04.980 --> 00:01:07.630
And here let's define that function.

00:01:07.630 --> 00:01:15.220
Let's pull the const handle dill it and rapid in use call back in advance.

00:01:15.220 --> 00:01:20.920
Let's also don't forget about dependencies and let's pass it in advance to message item.

00:01:20.920 --> 00:01:21.330
Okay,

00:01:21.330 --> 00:01:21.670
good.

00:01:21.670 --> 00:01:26.510
So this handle delete receives a message idea as an argument.

00:01:26.510 --> 00:01:30.000
So let's grab it and I'll let's define our logic in the first place.

00:01:30.000 --> 00:01:33.750
We will ask if you sort of really intends to deliver this message.

00:01:33.750 --> 00:01:35.240
Maybe he just mis clicked it.

00:01:35.240 --> 00:01:39.590
So we're gonna ask if window confirm,

00:01:39.590 --> 00:01:41.770
deliver this message.

00:01:41.770 --> 00:01:44.110
So if user clicks on no,

00:01:44.110 --> 00:01:48.190
then we're gonna simply return from dysfunction.

00:01:48.190 --> 00:01:54.640
Then we need to perform a few operations over here when we update the database.

00:01:54.640 --> 00:01:56.350
Because as you remember,

00:01:56.350 --> 00:01:58.600
when we deliberate message over here,

00:01:58.600 --> 00:02:03.790
we need to also consider our last message property inside room item.

00:02:03.790 --> 00:02:05.610
So we also need to update it,

00:02:05.610 --> 00:02:08.320
and we need to perform an atomic operation.

00:02:08.320 --> 00:02:08.740
For that,

00:02:08.740 --> 00:02:10.590
we will create an update object,

00:02:10.590 --> 00:02:13.120
and then we will update our database from the root,

00:02:13.120 --> 00:02:14.270
as we did before.

00:02:14.270 --> 00:02:14.790
Okay,

00:02:14.790 --> 00:02:17.010
so let's create new updates,

00:02:17.010 --> 00:02:17.720
object,

00:02:17.720 --> 00:02:19.100
which is empty for now.

00:02:19.100 --> 00:02:24.750
And then we're gonna put first updates than people update messages.

00:02:24.750 --> 00:02:26.880
Then we will update message.

00:02:26.880 --> 00:02:33.740
I d Annable said it to know it will delete the original message that when our message is

00:02:33.740 --> 00:02:34.280
last,

00:02:34.280 --> 00:02:37.540
we want to update our room information.

00:02:37.540 --> 00:02:41.660
So first we need to detect when our message is lost.

00:02:41.660 --> 00:02:42.550
For that,

00:02:42.550 --> 00:02:44.790
we will create a new valuable over here,

00:02:44.790 --> 00:02:46.210
which we will name is last,

00:02:46.210 --> 00:02:48.270
Let's put it above updates.

00:02:48.270 --> 00:02:52.830
And it is going to be a comparison between our current state and message I D.

00:02:52.830 --> 00:02:54.850
So we're going to refer to messages.

00:02:54.850 --> 00:02:57.430
Then messages dot length minus one.

00:02:57.430 --> 00:03:03.520
We will grab the latest message from our state array that I d equals two message I d.

00:03:03.520 --> 00:03:05.270
So if this is true,

00:03:05.270 --> 00:03:07.850
then our messages lust Okay,

00:03:07.850 --> 00:03:12.880
so here we're gonna ask if our message is lust than for these updates.

00:03:12.880 --> 00:03:13.400
Object.

00:03:13.400 --> 00:03:15.570
We're gonna specify slash rooms,

00:03:15.570 --> 00:03:17.160
slash chat I D.

00:03:17.160 --> 00:03:21.430
And then last message equals the next.

00:03:21.430 --> 00:03:28.210
So it is going to be the previous object next to our current dilated object.

00:03:28.210 --> 00:03:31.780
So we need to grab messages dot length minus two,

00:03:31.780 --> 00:03:32.780
the previous object,

00:03:32.780 --> 00:03:33.140
right?

00:03:33.140 --> 00:03:36.580
So we're gonna spread it all over last message.

00:03:36.580 --> 00:03:41.680
So let's forward messages than messages dot length minus two.

00:03:41.680 --> 00:03:44.830
And also we need to specify message i d.

00:03:44.830 --> 00:03:46.820
As to remember for last message.

00:03:46.820 --> 00:03:49.100
So we're gonna also put messages,

00:03:49.100 --> 00:03:53.360
messages about length minus two dot i d.

00:03:53.360 --> 00:03:56.950
And because we are trying to access messages dot length minus two,

00:03:56.950 --> 00:04:01.790
this might be now or this object can not be existence.

00:04:01.790 --> 00:04:03.390
So we need to check against that.

00:04:03.390 --> 00:04:05.720
So we can do that by simply putting here.

00:04:05.720 --> 00:04:11.540
If our message is last and messages thought length is greater than one Onley,

00:04:11.540 --> 00:04:15.400
then we make sure that this object does exist.

00:04:15.400 --> 00:04:15.850
Okay,

00:04:15.850 --> 00:04:21.590
then our next case to consider when we have only one message left in the chat room.

00:04:21.590 --> 00:04:23.080
And when we delayed it,

00:04:23.080 --> 00:04:25.740
we want to delete the last message inside,

00:04:25.740 --> 00:04:25.880
um,

00:04:25.880 --> 00:04:27.120
information for that.

00:04:27.120 --> 00:04:33.960
We're gonna check if our message is lost and messages dot length equals to one on Lee.

00:04:33.960 --> 00:04:38.820
Then we will pull for last message Mel Value to deliver it.

00:04:38.820 --> 00:04:39.850
And in the end,

00:04:39.850 --> 00:04:41.470
we will update our database.

00:04:41.470 --> 00:04:43.290
So let's put try Kage.

00:04:43.290 --> 00:04:44.520
Look over here.

00:04:44.520 --> 00:04:45.840
Then we're gonna call,

00:04:45.840 --> 00:04:53.990
await database dot draft door update with objects and let's converted to anything function

00:04:53.990 --> 00:04:53.990
.

00:04:53.990 --> 00:04:57.510
And also let's specify array of dependencies.

00:04:57.510 --> 00:05:00.400
So we need to pasture idee and messages.

00:05:00.400 --> 00:05:03.660
And also to avoid this warning,

00:05:03.660 --> 00:05:06.160
Colette's suppressor like that.

00:05:06.160 --> 00:05:11.600
And also let's put alert here to notify user that we deleted the message.

00:05:11.600 --> 00:05:17.440
So message has bean dilated and not messages message.

00:05:17.440 --> 00:05:18.890
And for any error,

00:05:18.890 --> 00:05:20.990
we're gonna put alert door,

00:05:20.990 --> 00:05:21.910
enter error,

00:05:21.910 --> 00:05:22.800
but message.

00:05:22.800 --> 00:05:23.640
OK,

00:05:23.640 --> 00:05:24.930
looks good.

00:05:24.930 --> 00:05:25.850
Now let's take a look.

00:05:25.850 --> 00:05:28.260
Let me add a few new messages.

00:05:28.260 --> 00:05:28.970
Hello?

00:05:28.970 --> 00:05:30.640
They're high.

00:05:30.640 --> 00:05:31.150
Okay,

00:05:31.150 --> 00:05:35.560
So if I delete the very last message inside the database,

00:05:35.560 --> 00:05:39.160
I can see now room information is being updated.

00:05:39.160 --> 00:05:41.560
And now I have last message set to there,

00:05:41.560 --> 00:05:42.950
which is correct.

00:05:42.950 --> 00:05:45.230
Now if I do it not the last message,

00:05:45.230 --> 00:05:46.350
but one of those.

00:05:46.350 --> 00:05:47.450
Let's say hello.

00:05:47.450 --> 00:05:52.220
I can see that the last message inside room item has not been updated.

00:05:52.220 --> 00:05:53.350
This is correct.

00:05:53.350 --> 00:05:53.890
Now,

00:05:53.890 --> 00:05:55.880
if I delete the last message,

00:05:55.880 --> 00:05:57.130
I have new messages.

00:05:57.130 --> 00:06:02.090
And if I have only one message inside the database and if I delete that one,

00:06:02.090 --> 00:06:05.120
I have no messages yet in both places.

00:06:05.120 --> 00:06:05.420
OK,

00:06:05.420 --> 00:06:06.540
so this is good.

00:06:06.540 --> 00:06:08.650
And this is how we will handle that.

00:06:08.650 --> 00:06:09.320
All right,

00:06:09.320 --> 00:06:12.280
let's commit our changes and finish this video.

00:06:12.280 --> 00:06:15.350
Let's forget everything and then get commit.

00:06:15.350 --> 00:06:20.050
Handle dilated message cooperation.

00:06:20.050 --> 00:06:21.250
All right,

00:06:21.250 --> 00:06:22.750
See you in the next one.

