WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.840
Hey,

00:00:00.840 --> 00:00:02.440
welcome in this video,

00:00:02.440 --> 00:00:09.030
we will add start new game button as well as highlight the winning squares when there is a

00:00:09.030 --> 00:00:09.510
winner.

00:00:09.510 --> 00:00:10.250
Let's go,

00:00:10.250 --> 00:00:17.090
Let's get back to our code and the first thing we will do inside Abdul Gs right after we're

00:00:17.090 --> 00:00:18.550
under the board component.

00:00:18.550 --> 00:00:28.020
Let's put the button element with the text said to start a new game and we will set type

00:00:28.020 --> 00:00:29.540
two button.

00:00:29.540 --> 00:00:37.020
And also we will define a handler for the on click you went so on Click is going to be on

00:00:37.020 --> 00:00:46.810
new game the function that we will create over here and it will take the next logic.

00:00:46.810 --> 00:00:50.280
So what should we put inside to simply reset the game?

00:00:50.280 --> 00:00:54.740
We need to set our state back to the initial value.

00:00:54.740 --> 00:00:55.980
So what we can do?

00:00:55.980 --> 00:00:58.680
We can copy the initial value from here,

00:00:58.680 --> 00:01:01.820
and we can simply call our history,

00:01:01.820 --> 00:01:05.150
said history and put initial Valley over here,

00:01:05.150 --> 00:01:08.200
but not to repeat ourselves.

00:01:08.200 --> 00:01:11.830
What I proposed to do here outside of this component,

00:01:11.830 --> 00:01:13.660
we can create a new variable,

00:01:13.660 --> 00:01:15.580
something like New Game,

00:01:15.580 --> 00:01:21.530
and it is going to be the constant variable and it is going to be our initial value and

00:01:21.530 --> 00:01:21.850
here,

00:01:21.850 --> 00:01:27.630
instead of directly passing the definition for our initial value weaken reference this

00:01:27.630 --> 00:01:28.200
valuable.

00:01:28.200 --> 00:01:36.610
So use state is going to be new game and the same thing Crable do when we click on new game

00:01:36.610 --> 00:01:37.160
button.

00:01:37.160 --> 00:01:39.390
So new game over here.

00:01:39.390 --> 00:01:44.640
Now we also need to reset the counter for our moves.

00:01:44.640 --> 00:01:49.450
So we will also call set current move and set it back,

00:01:49.450 --> 00:01:50.160
Geo.

00:01:50.160 --> 00:01:52.130
Now let's check it out.

00:01:52.130 --> 00:01:53.680
If we go back to our app,

00:01:53.680 --> 00:01:56.060
we can see the start of your game over here.

00:01:56.060 --> 00:01:59.720
And if we play the game and if we click on this button,

00:01:59.720 --> 00:02:01.320
everything will be reset.

00:02:01.320 --> 00:02:02.120
OK,

00:02:02.120 --> 00:02:03.040
pretty simple.

00:02:03.040 --> 00:02:07.450
Now what about highlighting the winning X squares?

00:02:07.450 --> 00:02:11.040
Let's take a look at our algorithm when we get the winner.

00:02:11.040 --> 00:02:14.720
So inside this calculate winner inside this four loop,

00:02:14.720 --> 00:02:17.980
we check against the winning combination.

00:02:17.980 --> 00:02:18.320
And,

00:02:18.320 --> 00:02:19.430
more specifically,

00:02:19.430 --> 00:02:21.260
in this Lions vegetable,

00:02:21.260 --> 00:02:25.060
we have all possible winning combinations,

00:02:25.060 --> 00:02:25.570
and,

00:02:25.570 --> 00:02:26.410
as you can see,

00:02:26.410 --> 00:02:31.700
every combination is an array off potential winning position.

00:02:31.700 --> 00:02:38.130
Let's say so we can get access to this winning positions inside this four lope,

00:02:38.130 --> 00:02:42.380
so when we have the position off our winning square,

00:02:42.380 --> 00:02:46.210
we can simply apply dynamic styles to this square.

00:02:46.210 --> 00:02:50.890
So here what we will do instead of just returning the winner,

00:02:50.890 --> 00:02:53.450
we can return the next thing.

00:02:53.450 --> 00:02:56.750
So we will return an object with the two teeth.

00:02:56.750 --> 00:03:01.860
So first is going to be winner and it is going to be the same as before.

00:03:01.860 --> 00:03:05.230
It is going to be squares a and the next thing we will do,

00:03:05.230 --> 00:03:07.950
we will return also winning squares.

00:03:07.950 --> 00:03:12.590
And it is going to be one off these winning combinations over here.

00:03:12.590 --> 00:03:14.480
So in our four lope,

00:03:14.480 --> 00:03:18.650
we already have it as lines with the I A traitor.

00:03:18.650 --> 00:03:21.350
So let's just put lines eight.

00:03:21.350 --> 00:03:21.740
Or,

00:03:21.740 --> 00:03:23.540
if we want to be more specific,

00:03:23.540 --> 00:03:24.940
we can put it like this.

00:03:24.940 --> 00:03:26.680
A B c.

00:03:26.680 --> 00:03:27.570
All right.

00:03:27.570 --> 00:03:28.050
Good.

00:03:28.050 --> 00:03:30.640
Now when we don't have a winner,

00:03:30.640 --> 00:03:33.220
we need to also return the same structure.

00:03:33.220 --> 00:03:36.840
So let's copied and put it here instead of Richard.

00:03:36.840 --> 00:03:37.210
No,

00:03:37.210 --> 00:03:39.030
but if we don't have a winner,

00:03:39.030 --> 00:03:40.840
we will return now.

00:03:40.840 --> 00:03:42.830
And if we don't have winning squares,

00:03:42.830 --> 00:03:48.560
we simply will return the empty right now inside Abdel Gs,

00:03:48.560 --> 00:03:53.730
we can d structure this object because we return it from this function.

00:03:53.730 --> 00:03:54.580
So here,

00:03:54.580 --> 00:04:01.410
instead of just winner we will put curly brackets to destructor it and also winning squares

00:04:01.410 --> 00:04:01.410
.

00:04:01.410 --> 00:04:05.850
Now what we will do to display this winning squares,

00:04:05.850 --> 00:04:10.600
we will put them down to our were bored component.

00:04:10.600 --> 00:04:19.210
So inside word component we have this render square method that displays our square and

00:04:19.210 --> 00:04:23.890
let's actually first pass it to this board over here.

00:04:23.890 --> 00:04:28.410
So when in the squares is going to be winning squares,

00:04:28.410 --> 00:04:30.350
so inside board,

00:04:30.350 --> 00:04:31.960
we can destructor it.

00:04:31.960 --> 00:04:35.610
And now,

00:04:35.610 --> 00:04:38.380
when we rendered this square weaken,

00:04:38.380 --> 00:04:45.310
simply create innumerable to check if our currently rendered square is one of the women

00:04:45.310 --> 00:04:45.980
squares.

00:04:45.980 --> 00:04:52.950
So let's put a new valuable over here will name it something like Is winning square

00:04:52.950 --> 00:04:54.180
enviable?

00:04:54.180 --> 00:05:01.450
Simply check if our current position that we render is a part of the brain in squares array

00:05:01.450 --> 00:05:01.450
.

00:05:01.450 --> 00:05:06.830
So winning squares dot includes our current position.

00:05:06.830 --> 00:05:09.110
And then what we will do.

00:05:09.110 --> 00:05:15.250
We will pass this Bullen to the square component and inside square component.

00:05:15.250 --> 00:05:19.450
Let's open it and inside square component,

00:05:19.450 --> 00:05:23.140
we can apply dynamic styles based on this value,

00:05:23.140 --> 00:05:27.790
so we will apply style prop and for this style,

00:05:27.790 --> 00:05:29.560
prop the same as before.

00:05:29.560 --> 00:05:35.100
We will pass font weight prop so formed weight is going to be.

00:05:35.100 --> 00:05:37.650
If our square is the winning square,

00:05:37.650 --> 00:05:39.450
then it is going to be bold.

00:05:39.450 --> 00:05:42.380
Otherwise it is set to normal.

00:05:42.380 --> 00:05:45.510
So let's say what and let's go back to up.

00:05:45.510 --> 00:05:49.180
Let's play a little bit and let's see if it actually work.

00:05:49.180 --> 00:05:50.240
Yahoo,

00:05:50.240 --> 00:05:51.830
it's really worked.

00:05:51.830 --> 00:05:52.630
Perfect.

00:05:52.630 --> 00:05:56.520
Now let's at one more test with the zeros.

00:05:56.520 --> 00:05:59.170
So something like this,

00:05:59.170 --> 00:05:59.660
Yeah,

00:05:59.660 --> 00:06:01.110
indeed it works,

00:06:01.110 --> 00:06:04.900
so everything's fine and everything is in place,

00:06:04.900 --> 00:06:06.750
and I guess that's it.

00:06:06.750 --> 00:06:10.880
We made all functionality inside our application.

00:06:10.880 --> 00:06:15.790
So our next part will be about styling the entire app,

00:06:15.790 --> 00:06:18.330
and after that we will do the deployment.

00:06:18.330 --> 00:06:22.210
And after that we can share our app to our friends to boast.

00:06:22.210 --> 00:06:22.890
All right,

00:06:22.890 --> 00:06:24.790
Before we finish this video,

00:06:24.790 --> 00:06:26.520
let's commit our changes.

00:06:26.520 --> 00:06:33.520
So we will put to get at dot and to get commit and we will name it.

00:06:33.520 --> 00:06:44.480
Highlights winning squares and end it and add start new game button.

00:06:44.480 --> 00:06:45.900
All right,

00:06:45.900 --> 00:06:46.630
perfect.

00:06:46.630 --> 00:06:48.350
We'll see you in the next one

