WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.080
Hey,

00:00:01.080 --> 00:00:01.840
welcome.

00:00:01.840 --> 00:00:03.040
In the previous video,

00:00:03.040 --> 00:00:06.040
we've managed the state and react events.

00:00:06.040 --> 00:00:06.930
In this video,

00:00:06.930 --> 00:00:13.280
I would like to talk about react life cycle events and tell how they are related to the

00:00:13.280 --> 00:00:14.920
state that we created.

00:00:14.920 --> 00:00:17.540
So I already started the local server.

00:00:17.540 --> 00:00:19.650
And this isn't the app that we did.

00:00:19.650 --> 00:00:20.450
No.

00:00:20.450 --> 00:00:24.740
If we look inside our application in the board component,

00:00:24.740 --> 00:00:25.460
we can.

00:00:25.460 --> 00:00:29.380
Consul ought the state to see the current state.

00:00:29.380 --> 00:00:33.430
So if I hit safe and if I go back to my app,

00:00:33.430 --> 00:00:36.190
I refresh on the right inside the council,

00:00:36.190 --> 00:00:38.450
I can see it is being consul locked.

00:00:38.450 --> 00:00:41.170
And whenever I let's see,

00:00:41.170 --> 00:00:42.250
updated the state,

00:00:42.250 --> 00:00:46.010
you can see the new state is being consul logged over here.

00:00:46.010 --> 00:00:48.780
And whenever I do and you changed,

00:00:48.780 --> 00:00:52.600
it will be updated and you can see the updates in council.

00:00:52.600 --> 00:00:53.800
But why?

00:00:53.800 --> 00:00:54.690
So why?

00:00:54.690 --> 00:00:57.700
It is happening exactly well,

00:00:57.700 --> 00:01:00.280
and this is happening due to react.

00:01:00.280 --> 00:01:02.490
Life cycle events and react.

00:01:02.490 --> 00:01:10.230
Lee Cycle Evans is just a set off events that take place at some point when component is,

00:01:10.230 --> 00:01:11.220
let's say,

00:01:11.220 --> 00:01:13.490
being inserted on the back page,

00:01:13.490 --> 00:01:18.020
being updated or being removed from the webpage.

00:01:18.020 --> 00:01:20.530
What I mean is that in Google,

00:01:20.530 --> 00:01:24.350
let's type react life cycle events.

00:01:24.350 --> 00:01:32.470
And then if we go to official react GS here and if we scroll down a little bit,

00:01:32.470 --> 00:01:33.900
we confined this.

00:01:33.900 --> 00:01:36.310
You can use this life cycle diagram.

00:01:36.310 --> 00:01:38.790
Let's open it and let's take a look.

00:01:38.790 --> 00:01:40.040
What do we have here?

00:01:40.040 --> 00:01:44.490
We can see three different phases off component over here,

00:01:44.490 --> 00:01:45.380
mounting,

00:01:45.380 --> 00:01:47.460
updating and then mounting.

00:01:47.460 --> 00:01:50.160
So at the mounting stage,

00:01:50.160 --> 00:01:54.800
we have this constructor render and component DEET mount.

00:01:54.800 --> 00:01:56.930
So on the first time,

00:01:56.930 --> 00:02:01.800
when we refresh the page and this board component is being mounted,

00:02:01.800 --> 00:02:05.950
we received this render lifecycle event.

00:02:05.950 --> 00:02:12.620
Let's say that's why we can see this initial council log over here and also in the future,

00:02:12.620 --> 00:02:19.590
we Dios we will get to know about Component did mount and it is basically run after render

00:02:19.590 --> 00:02:22.850
when the component just mounted on the weapons.

00:02:22.850 --> 00:02:28.350
Then we have the update face when the component is being updated.

00:02:28.350 --> 00:02:32.130
So whenever we change in the state in a component,

00:02:32.130 --> 00:02:36.660
the component and all its Children in our case,

00:02:36.660 --> 00:02:41.430
square components will be updated or re rendered,

00:02:41.430 --> 00:02:44.460
and this is the face off update.

00:02:44.460 --> 00:02:48.070
And whenever the update takes place,

00:02:48.070 --> 00:02:53.250
there is this component did update lifecycle event,

00:02:53.250 --> 00:02:57.660
and basically this is what's happening when we a bleed instead.

00:02:57.660 --> 00:02:59.530
That's why we can see this Consul.

00:02:59.530 --> 00:03:01.910
Look over here and again.

00:03:01.910 --> 00:03:05.040
We will take you off this life cycle events,

00:03:05.040 --> 00:03:06.970
all of them in future videos.

00:03:06.970 --> 00:03:07.640
For now,

00:03:07.640 --> 00:03:09.500
we just need to know that they exist,

00:03:09.500 --> 00:03:14.360
and it is important to understand that we are going to manipulate them.

00:03:14.360 --> 00:03:19.700
And then we have the on mounting stage when the component will amount.

00:03:19.700 --> 00:03:21.850
And this lifecycle event,

00:03:21.850 --> 00:03:27.890
Ron's right before the component is being removed from the Pepperidge.

00:03:27.890 --> 00:03:28.780
For example,

00:03:28.780 --> 00:03:32.810
if we had multiple pages and our application,

00:03:32.810 --> 00:03:36.330
if let's say we had this board component in one page.

00:03:36.330 --> 00:03:37.730
When we switch pages,

00:03:37.730 --> 00:03:40.950
this component will be removed from the webpage,

00:03:40.950 --> 00:03:42.890
and this is this stage.

00:03:42.890 --> 00:03:49.600
This is this lifecycle event that will be run right before the component will be removed

00:03:49.600 --> 00:03:50.890
from the webpage,

00:03:50.890 --> 00:03:54.130
and that's it about life cycle events.

00:03:54.130 --> 00:03:54.790
Also,

00:03:54.790 --> 00:03:59.190
I draw this small image for us to let's say,

00:03:59.190 --> 00:04:03.160
to represent this diagram in a more interactive away.

00:04:03.160 --> 00:04:04.240
Let's say so.

00:04:04.240 --> 00:04:05.670
This is our component.

00:04:05.670 --> 00:04:07.790
Let's say this arrow is a component,

00:04:07.790 --> 00:04:10.810
so when it has been inserted onto the back page.

00:04:10.810 --> 00:04:16.190
We have this lifecycle event that is called Did mounts or component indeed mount.

00:04:16.190 --> 00:04:18.140
Whenever it is updated,

00:04:18.140 --> 00:04:23.510
the rear ender will take place and we will get access to this event.

00:04:23.510 --> 00:04:26.510
And when the component being removed from the Web page,

00:04:26.510 --> 00:04:29.610
the will amount event will take place.

00:04:29.610 --> 00:04:31.880
And that's basically it.

00:04:31.880 --> 00:04:34.090
And now about re rendering.

00:04:34.090 --> 00:04:35.840
So other said before,

00:04:35.840 --> 00:04:38.580
whenever this component changes,

00:04:38.580 --> 00:04:40.310
the surrender will take place.

00:04:40.310 --> 00:04:45.860
And it also means that all Children over this component will be to render in our case.

00:04:45.860 --> 00:04:47.180
And this is square component.

00:04:47.180 --> 00:04:52.350
So let's Consul lock something like board rear ender.

00:04:52.350 --> 00:04:55.240
And inside square,

00:04:55.240 --> 00:04:59.330
we will Port Square Re Orender.

00:04:59.330 --> 00:05:02.840
Let's get back to the browser to see the app.

00:05:02.840 --> 00:05:04.820
And now if I look on the right,

00:05:04.820 --> 00:05:10.450
I can see one councillor for board and 94 square because we have nine squares.

00:05:10.450 --> 00:05:14.650
Now let me clear the council and if I update the board,

00:05:14.650 --> 00:05:17.250
I will see that the board is rendered.

00:05:17.250 --> 00:05:23.000
But also all squares are surrendered and we can't change that.

00:05:23.000 --> 00:05:23.640
Well,

00:05:23.640 --> 00:05:24.850
someone would ask,

00:05:24.850 --> 00:05:27.700
What if I don't want to surrender?

00:05:27.700 --> 00:05:31.800
Let's say this square at the bottom because we only about eight.

00:05:31.800 --> 00:05:33.520
This square at the top.

00:05:33.520 --> 00:05:34.630
And you are right.

00:05:34.630 --> 00:05:41.160
This is the topic for our future videos when we will talk about optimization to reduce the

00:05:41.160 --> 00:05:43.390
number off potential updates.

00:05:43.390 --> 00:05:44.410
But in this video,

00:05:44.410 --> 00:05:50.260
I just want you to get the point off life cycle events and rear enders.

00:05:50.260 --> 00:05:51.780
I guess it was clear.

00:05:51.780 --> 00:05:59.430
And now you know that there are basically three stages off component life cycle and events

00:05:59.430 --> 00:06:03.320
that occur on this or that stages.

00:06:03.320 --> 00:06:03.900
Thank you.

00:06:03.900 --> 00:06:07.190
And we will continue building the app in the next video.

