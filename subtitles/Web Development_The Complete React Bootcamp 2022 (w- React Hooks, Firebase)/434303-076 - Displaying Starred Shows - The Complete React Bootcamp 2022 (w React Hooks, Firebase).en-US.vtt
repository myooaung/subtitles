WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.310
Hey there in this video will continue to work with custom cooks and we're going to finish

00:00:05.310 --> 00:00:06.730
off the start page.

00:00:06.730 --> 00:00:08.340
Let's go The first thing.

00:00:08.340 --> 00:00:16.110
Quibble dio inside start component We are going to destructor Start shows from use shows

00:00:16.110 --> 00:00:19.840
Hook that we created earlier and we will not use dispatch.

00:00:19.840 --> 00:00:22.450
That's why we do not destruction it over here.

00:00:22.450 --> 00:00:28.780
Then we're going to define another state for the actual TRO data that will receive from the

00:00:28.780 --> 00:00:29.400
a p I.

00:00:29.400 --> 00:00:33.570
So we can certainly use use reducer for state management.

00:00:33.570 --> 00:00:36.460
But to keep things more simpler,

00:00:36.460 --> 00:00:38.330
let's stick with us state.

00:00:38.330 --> 00:00:45.560
So here I'm gonna define shows state and by default it will be set to melt.

00:00:45.560 --> 00:00:52.670
Then I will also define loading state which will be set to true by default.

00:00:52.670 --> 00:01:01.770
And at last we are going to define the error state which will be set to know All right,

00:01:01.770 --> 00:01:02.230
Good.

00:01:02.230 --> 00:01:02.840
Now,

00:01:02.840 --> 00:01:10.440
to fetch data when the component mountains we will use use effect and in the first place we

00:01:10.440 --> 00:01:15.570
will check against the start shows to make sure that they exist.

00:01:15.570 --> 00:01:22.690
So if start shows are defined and start that length is greater than zero Onley,

00:01:22.690 --> 00:01:24.750
then we're going to do our logic.

00:01:24.750 --> 00:01:26.090
Otherwise we will.

00:01:26.090 --> 00:01:29.970
Call Set is loading and Port Falls Insight.

00:01:29.970 --> 00:01:30.750
And now,

00:01:30.750 --> 00:01:32.300
if we have her on the array,

00:01:32.300 --> 00:01:35.730
we will see that we have a missing the dependency start.

00:01:35.730 --> 00:01:39.200
This is fine because we use it inside the effect,

00:01:39.200 --> 00:01:41.640
so it is totally justified.

00:01:41.640 --> 00:01:42.350
All right,

00:01:42.350 --> 00:01:42.790
now,

00:01:42.790 --> 00:01:44.860
what logic should report inside?

00:01:44.860 --> 00:01:46.730
If statement Well,

00:01:46.730 --> 00:01:52.450
the a p and that we use it does not expose any endpoint that allow us to fetch multiple

00:01:52.450 --> 00:01:54.610
show data with one single request.

00:01:54.610 --> 00:01:59.340
That's why we will send multiple requests and we will send them at once,

00:01:59.340 --> 00:02:00.670
not one by one.

00:02:00.670 --> 00:02:05.590
So we need to manage concurrent promises and to manage concurrent promises.

00:02:05.590 --> 00:02:09.790
We will use promise that all but it expects an array of promises.

00:02:09.790 --> 00:02:11.540
So let's create one here.

00:02:11.540 --> 00:02:14.670
We're gonna define promises and what we will do.

00:02:14.670 --> 00:02:15.490
Bubble map,

00:02:15.490 --> 00:02:21.720
every show I d to a p I get that we created earlier,

00:02:21.720 --> 00:02:24.540
and a p I get returns a promise.

00:02:24.540 --> 00:02:30.670
That's why we will end up with Harry off promises with unresolved promises that we will

00:02:30.670 --> 00:02:33.470
resolve at once with promised that all.

00:02:33.470 --> 00:02:36.170
So we need to first import ap.

00:02:36.170 --> 00:02:39.180
I get from MISC conflict.

00:02:39.180 --> 00:02:46.960
We will put a p I get and inside a p I get what query should we put if we open show page?

00:02:46.960 --> 00:02:49.610
We already have this query over here,

00:02:49.610 --> 00:02:50.860
so let's copy it.

00:02:50.860 --> 00:02:52.620
But without embedded part,

00:02:52.620 --> 00:02:59.160
let's paste it and let's replace i d with show I d that we receive from that map.

00:02:59.160 --> 00:03:00.050
All right,

00:03:00.050 --> 00:03:04.770
now what's called Promise that all and let's put promises insight.

00:03:04.770 --> 00:03:10.350
Then we will await it with the then and he will receive our results.

00:03:10.350 --> 00:03:12.850
So let's consul luck them and let's see,

00:03:12.850 --> 00:03:13.770
what do we have?

00:03:13.770 --> 00:03:17.440
So if I refresh the page if I opened this array,

00:03:17.440 --> 00:03:19.500
I can see I have show data.

00:03:19.500 --> 00:03:19.990
All right,

00:03:19.990 --> 00:03:21.350
so it actually worked.

00:03:21.350 --> 00:03:23.050
Now let's update this state.

00:03:23.050 --> 00:03:28.300
We're gonna put set shows and we will put results.

00:03:28.300 --> 00:03:29.230
And also Dan,

00:03:29.230 --> 00:03:33.560
Verbal update is loading state and we will put false here.

00:03:33.560 --> 00:03:37.350
Then we will also handle the catch block in case of any other.

00:03:37.350 --> 00:03:40.070
So I'm gonna put catch here,

00:03:40.070 --> 00:03:46.910
and then inside we will call set better with error dot message and then again,

00:03:46.910 --> 00:03:50.580
verbal update is loading state and put false here.

00:03:50.580 --> 00:03:51.350
All right,

00:03:51.350 --> 00:03:52.580
it seems fine now,

00:03:52.580 --> 00:03:59.080
we need to display the actual data and we can't use if statements over here because we want

00:03:59.080 --> 00:04:00.160
to persist.

00:04:00.160 --> 00:04:01.450
Main page layout.

00:04:01.450 --> 00:04:06.240
So we will put our conditional rendering qlogic directly over here.

00:04:06.240 --> 00:04:10.830
So our first condition is going to be when we have our data loaded.

00:04:10.830 --> 00:04:14.710
So is loading if we have it set to truth,

00:04:14.710 --> 00:04:16.260
and then we're going to displayed.

00:04:16.260 --> 00:04:21.140
If that will say shows are still loading.

00:04:21.140 --> 00:04:25.560
Second condition is going to be when we have an error message.

00:04:25.560 --> 00:04:27.200
So in case off better,

00:04:27.200 --> 00:04:33.570
we're going to display diff which will say error occurred and then the actual error message

00:04:33.570 --> 00:04:33.570
.

00:04:33.570 --> 00:04:34.390
All right,

00:04:34.390 --> 00:04:38.810
let's remove this empty space from here and define third condition.

00:04:38.810 --> 00:04:43.690
So third condition will take place when this else is executed.

00:04:43.690 --> 00:04:50.220
So when we have no shows so we gonna put if we have is loading states at two.

00:04:50.220 --> 00:04:54.140
False and also we have no shows on Lee.

00:04:54.140 --> 00:05:02.430
Then we want to display no shows were added and at last we're going to put final condition

00:05:02.430 --> 00:05:04.630
that will display the actual data.

00:05:04.630 --> 00:05:12.900
So we're gonna ask if we have no loading state If we have no error and if we have shows

00:05:12.900 --> 00:05:14.110
defined Onley.

00:05:14.110 --> 00:05:18.000
Then we will display show great component.

00:05:18.000 --> 00:05:20.550
So let's put show great.

00:05:20.550 --> 00:05:24.480
And as an argument it expects data.

00:05:24.480 --> 00:05:29.800
So let's put data prop and let's pass shows insight.

00:05:29.800 --> 00:05:31.970
Let's save it and let's check it out.

00:05:31.970 --> 00:05:33.320
When we refresh the page,

00:05:33.320 --> 00:05:36.850
we will see that Kennett re property idea off undefined.

00:05:36.850 --> 00:05:42.850
This is because I were shape of the state is little bit different from the one that we have

00:05:42.850 --> 00:05:45.190
inside show grit because,

00:05:45.190 --> 00:05:52.930
as you can see every element inside data array has this show key show property at the top

00:05:52.930 --> 00:05:54.930
where the actual data recites.

00:05:54.930 --> 00:06:01.980
So we need to transform this state a little bit and we will do it inside other than right

00:06:01.980 --> 00:06:03.870
before we said this state.

00:06:03.870 --> 00:06:06.240
So let's put them over here,

00:06:06.240 --> 00:06:11.730
and we're going to receive a pi data and what we will do.

00:06:11.730 --> 00:06:20.260
We will map a pi data where every show is going to be mapped to an object with show key at

00:06:20.260 --> 00:06:24.470
the top and inside bubble put the actual later like that.

00:06:24.470 --> 00:06:25.190
All right,

00:06:25.190 --> 00:06:28.350
let's say with and let's check it out and yeah,

00:06:28.350 --> 00:06:31.150
right now I have all my shows that I edit.

00:06:31.150 --> 00:06:33.340
Let's remove a few of them.

00:06:33.340 --> 00:06:34.930
If we refresh the page,

00:06:34.930 --> 00:06:36.080
we can see the detection.

00:06:36.080 --> 00:06:36.800
Early works.

00:06:36.800 --> 00:06:38.980
Let's look for something random.

00:06:38.980 --> 00:06:41.550
Let's edit navigate back.

00:06:41.550 --> 00:06:42.760
And it is here.

00:06:42.760 --> 00:06:44.540
So it actually works.

00:06:44.540 --> 00:06:45.240
Perfect.

00:06:45.240 --> 00:06:45.740
No.

00:06:45.740 --> 00:06:48.550
Let's finish this video and commit changes.

00:06:48.550 --> 00:06:55.450
So I'm gonna put the get at everything and then get commit with message said to finished

00:06:55.450 --> 00:06:57.870
starred Page.

00:06:57.870 --> 00:06:58.780
All right.

00:06:58.780 --> 00:06:59.710
Seems fine.

00:06:59.710 --> 00:07:01.150
See you in the next one.

