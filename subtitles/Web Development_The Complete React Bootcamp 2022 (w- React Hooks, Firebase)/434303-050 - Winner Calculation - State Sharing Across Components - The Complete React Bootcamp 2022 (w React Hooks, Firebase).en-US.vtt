WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.030
Hey,

00:00:01.030 --> 00:00:02.370
welcome in this video,

00:00:02.370 --> 00:00:07.260
we will talk about how we can share the state between components or elements,

00:00:07.260 --> 00:00:12.060
also will calculate the winner and displayed the current status message.

00:00:12.060 --> 00:00:13.030
Let's go.

00:00:13.030 --> 00:00:18.090
So let's overview the app by opening our border GS component first,

00:00:18.090 --> 00:00:21.190
as we can see our state off,

00:00:21.190 --> 00:00:28.040
the game board recites in this board component and we can't access it from anywhere on Lee

00:00:28.040 --> 00:00:29.310
within border gs.

00:00:29.310 --> 00:00:32.300
But if we look inside Abdul Gs,

00:00:32.300 --> 00:00:36.640
if we had some sort of a status message that we were poured over here,

00:00:36.640 --> 00:00:39.750
we would put it on top off this board element.

00:00:39.750 --> 00:00:41.750
So somewhere over here.

00:00:41.750 --> 00:00:46.350
So let's board h two here and let's just type message something like that.

00:00:46.350 --> 00:00:48.070
If we save we have it here,

00:00:48.070 --> 00:00:48.960
however,

00:00:48.960 --> 00:00:51.250
we don't have access to the state.

00:00:51.250 --> 00:00:57.800
If we needed to calculate the winner or to get the current player and displayed over here,

00:00:57.800 --> 00:00:59.570
we will need get access to the state,

00:00:59.570 --> 00:01:04.870
but it is available only inside board and we can't directly access it.

00:01:04.870 --> 00:01:12.300
So there are only two options what we can do to access in the state to actually display the

00:01:12.300 --> 00:01:18.890
message with logic that we want so We need to either move this age to from here inside this

00:01:18.890 --> 00:01:24.950
board component and put it inside our mark up so we'd have access to the state or what we

00:01:24.950 --> 00:01:25.430
can do.

00:01:25.430 --> 00:01:32.350
We can put this all logic movement from this board component to the top level to the

00:01:32.350 --> 00:01:33.270
Abdullah Gs.

00:01:33.270 --> 00:01:39.140
So this state will be shared between these elements that we have inside Abdel Gs and this

00:01:39.140 --> 00:01:40.340
is what we're going to do.

00:01:40.340 --> 00:01:42.550
So what we will do?

00:01:42.550 --> 00:01:45.250
We will copy this handle Square Khaliq,

00:01:45.250 --> 00:01:52.600
and it's stayed from here and put it to the APP component over here.

00:01:52.600 --> 00:01:56.250
Now we need to also import use a state,

00:01:56.250 --> 00:01:59.440
and that's basically it.

00:01:59.440 --> 00:02:00.010
Now,

00:02:00.010 --> 00:02:01.480
inside border G s.

00:02:01.480 --> 00:02:03.500
We need to get rid of use state.

00:02:03.500 --> 00:02:05.560
And what do we do next?

00:02:05.560 --> 00:02:08.900
Now we lack off board state and handles quickly,

00:02:08.900 --> 00:02:10.300
But that's not a problem.

00:02:10.300 --> 00:02:14.570
Since we shared the state here and this is the child component.

00:02:14.570 --> 00:02:19.050
We can put all of this as props to these board component.

00:02:19.050 --> 00:02:23.810
So inside this board we will receive board as a prop,

00:02:23.810 --> 00:02:29.950
and then we will receive handle square click as a prop and inside Abdel Gs to this board

00:02:29.950 --> 00:02:30.620
component.

00:02:30.620 --> 00:02:36.340
We will pass our board state as board and also for Kendall Square.

00:02:36.340 --> 00:02:36.860
Click.

00:02:36.860 --> 00:02:39.550
We will pass handle a square click.

00:02:39.550 --> 00:02:40.120
Now,

00:02:40.120 --> 00:02:42.020
if I will get back to my lab,

00:02:42.020 --> 00:02:48.010
everything will be working because we just only put the state to the top level.

00:02:48.010 --> 00:02:54.900
It also means that our H one and H two will be rendered every time whenever this component

00:02:54.900 --> 00:02:55.440
updates.

00:02:55.440 --> 00:02:59.600
But that's how things are working in react.

00:02:59.600 --> 00:03:00.950
And we can't change that.

00:03:00.950 --> 00:03:01.700
All right,

00:03:01.700 --> 00:03:02.270
now,

00:03:02.270 --> 00:03:04.700
what about current message,

00:03:04.700 --> 00:03:07.330
Current status and winner calculation?

00:03:07.330 --> 00:03:08.340
For that,

00:03:08.340 --> 00:03:13.910
we will open the Assets folder and inside people find this calculate winner function.

00:03:13.910 --> 00:03:15.500
Doggy s inside.

00:03:15.500 --> 00:03:19.100
There is a simple function that we will use to get the winner.

00:03:19.100 --> 00:03:23.780
So let's get back to our app and under source Mobile,

00:03:23.780 --> 00:03:28.030
create to new file and bubble name it helpers inside.

00:03:28.030 --> 00:03:31.650
We will put this function and we will also export it from here.

00:03:31.650 --> 00:03:32.610
So what?

00:03:32.610 --> 00:03:40.170
This function basically does as an argument it expects our current state off the board then

00:03:40.170 --> 00:03:41.570
based on this state,

00:03:41.570 --> 00:03:43.130
it will calculate the winner.

00:03:43.130 --> 00:03:44.760
If there is nothing,

00:03:44.760 --> 00:03:46.010
then it will return.

00:03:46.010 --> 00:03:46.540
No.

00:03:46.540 --> 00:03:51.330
And the algorithm is that inside this lines variable.

00:03:51.330 --> 00:03:54.850
We have all possible winning combinations.

00:03:54.850 --> 00:04:00.350
And inside this four loop we simply check against those combinations using our current

00:04:00.350 --> 00:04:00.780
state.

00:04:00.780 --> 00:04:03.840
And then if there was the winning combination,

00:04:03.840 --> 00:04:07.340
then we return the winner as simple as that.

00:04:07.340 --> 00:04:08.080
All right,

00:04:08.080 --> 00:04:08.710
now,

00:04:08.710 --> 00:04:11.650
how can we use this function inside up component?

00:04:11.650 --> 00:04:12.260
Well,

00:04:12.260 --> 00:04:13.130
the question is,

00:04:13.130 --> 00:04:17.750
next do we need deported in a state or simply in available?

00:04:17.750 --> 00:04:18.350
Well,

00:04:18.350 --> 00:04:19.630
in our case,

00:04:19.630 --> 00:04:21.290
we can put it in a variable.

00:04:21.290 --> 00:04:23.630
Let me write it and then I will explain.

00:04:23.630 --> 00:04:27.790
So I will put const winner and hear what I will do.

00:04:27.790 --> 00:04:29.440
I will put a calculate winner.

00:04:29.440 --> 00:04:30.450
And as you can see,

00:04:30.450 --> 00:04:31.330
I have this out,

00:04:31.330 --> 00:04:33.340
our intelligence for outer import.

00:04:33.340 --> 00:04:36.550
So I press tab and it will be automatically imported.

00:04:36.550 --> 00:04:38.550
But let's put it here at the top.

00:04:38.550 --> 00:04:39.320
So,

00:04:39.320 --> 00:04:46.340
to this function we will pass our board state and the answer to the question why we don't

00:04:46.340 --> 00:04:51.640
need to put it in a state simply because whenever our board updates,

00:04:51.640 --> 00:04:58.190
the component will be rendered and it means that everything that goes inside the component

00:04:58.190 --> 00:04:59.450
will be also updated.

00:04:59.450 --> 00:05:01.940
So this component will be updated.

00:05:01.940 --> 00:05:08.890
And on this render these calculate winner will be run every time so the valuable will be

00:05:08.890 --> 00:05:09.520
updated.

00:05:09.520 --> 00:05:14.050
Now let's Consul luck this winner and let's see what do we have?

00:05:14.050 --> 00:05:14.890
Insight?

00:05:14.890 --> 00:05:17.310
Let's get back to browser.

00:05:17.310 --> 00:05:20.230
So the value is in all Okay,

00:05:20.230 --> 00:05:20.650
good.

00:05:20.650 --> 00:05:22.080
Now let's play the game.

00:05:22.080 --> 00:05:25.440
No X X now.

00:05:25.440 --> 00:05:26.130
All right.

00:05:26.130 --> 00:05:27.340
And when we have a winner,

00:05:27.340 --> 00:05:28.600
we have Oh,

00:05:28.600 --> 00:05:29.110
here.

00:05:29.110 --> 00:05:29.640
Perfect.

00:05:29.640 --> 00:05:31.410
If we had X as a winner,

00:05:31.410 --> 00:05:33.610
then we had eggs here and that's it.

00:05:33.610 --> 00:05:36.020
That's how we will get the winner now.

00:05:36.020 --> 00:05:37.260
How can we use this?

00:05:37.260 --> 00:05:38.110
So here,

00:05:38.110 --> 00:05:38.940
under winner,

00:05:38.940 --> 00:05:42.750
I'm going to create a new variable and it is going to be message.

00:05:42.750 --> 00:05:45.750
And inside this message we will put the next logic.

00:05:45.750 --> 00:05:48.040
If we have a winner,

00:05:48.040 --> 00:05:49.790
then we will return.

00:05:49.790 --> 00:05:56.840
The next string winner is then Movil switch quotes with the extension and we will pour

00:05:56.840 --> 00:05:59.200
winner and string interpolation.

00:05:59.200 --> 00:06:01.240
If we don't have the winner,

00:06:01.240 --> 00:06:10.560
then we will put next player is again open string interpolation than change quotes and the

00:06:10.560 --> 00:06:11.370
next logic.

00:06:11.370 --> 00:06:13.190
So is X next.

00:06:13.190 --> 00:06:15.050
Then we will pour eggs.

00:06:15.050 --> 00:06:17.420
Otherwise we will put Oh,

00:06:17.420 --> 00:06:19.510
and that's basically it.

00:06:19.510 --> 00:06:27.630
Now we need to Onley display this message over here to do so inside our Js six instead of

00:06:27.630 --> 00:06:33.010
just putting message here we will Oakland Carly brackets for JavaScript and reference this

00:06:33.010 --> 00:06:34.120
valuable over here.

00:06:34.120 --> 00:06:37.260
And when we save it and we get back to the app,

00:06:37.260 --> 00:06:39.820
we can see the next player is zero.

00:06:39.820 --> 00:06:40.700
Awesome.

00:06:40.700 --> 00:06:44.450
Now let's play the game and let's see if we have the winner.

00:06:44.450 --> 00:06:45.010
Okay,

00:06:45.010 --> 00:06:47.120
Perfect X zero.

00:06:47.120 --> 00:06:48.220
Awesome.

00:06:48.220 --> 00:06:51.400
Now we have the winner calculation algorithm working,

00:06:51.400 --> 00:06:53.270
so everything's fine.

00:06:53.270 --> 00:06:53.950
However,

00:06:53.950 --> 00:06:55.240
there is one caveat.

00:06:55.240 --> 00:07:03.220
We can still play the game and we can really simply figs that by just adding one more

00:07:03.220 --> 00:07:04.660
condition to this.

00:07:04.660 --> 00:07:07.150
If statement inside handle square click.

00:07:07.150 --> 00:07:15.930
So we will ask if our square at disposition already exists or if we have a winner it it's

00:07:15.930 --> 00:07:17.580
not equal tude now.

00:07:17.580 --> 00:07:21.060
Then we will just simply return from this function.

00:07:21.060 --> 00:07:21.990
We will exit it.

00:07:21.990 --> 00:07:23.920
Now let's check it out.

00:07:23.920 --> 00:07:27.450
Let's put some winner over here and yeah,

00:07:27.450 --> 00:07:28.510
we have the winner.

00:07:28.510 --> 00:07:31.700
But also we can't play the game up,

00:07:31.700 --> 00:07:31.930
sir,

00:07:31.930 --> 00:07:32.980
it has been finished,

00:07:32.980 --> 00:07:37.180
so everything's working and everything works Fine.

00:07:37.180 --> 00:07:37.750
Okay,

00:07:37.750 --> 00:07:38.150
good.

00:07:38.150 --> 00:07:41.950
Now let's commit our changes and finish the video.

00:07:41.950 --> 00:07:43.770
So in my console,

00:07:43.770 --> 00:07:52.550
I'm gonna put a get at dot than get commit and we will pour Calculate,

00:07:52.550 --> 00:07:56.850
winner and lift up the state.

00:07:56.850 --> 00:07:58.440
Something like this.

00:07:58.440 --> 00:07:59.410
Okay,

00:07:59.410 --> 00:08:00.110
Perfect.

00:08:00.110 --> 00:08:01.750
I'm going to see you in the next one.

