WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.990
Hey,

00:00:00.990 --> 00:00:02.750
welcome in this video,

00:00:02.750 --> 00:00:04.990
we will talk about pages in react,

00:00:04.990 --> 00:00:08.190
how we are able to create and manage them.

00:00:08.190 --> 00:00:09.170
Let's go.

00:00:09.170 --> 00:00:10.520
In the previous project,

00:00:10.520 --> 00:00:12.570
when we build the TIC tac toe game,

00:00:12.570 --> 00:00:14.960
we used only one page.

00:00:14.960 --> 00:00:20.010
But right now the situation is different and we need to define multiple pages.

00:00:20.010 --> 00:00:22.750
So how were able to achieve that?

00:00:22.750 --> 00:00:23.440
Well,

00:00:23.440 --> 00:00:29.360
the very first and naive approach would be to use conditional rendering based on some

00:00:29.360 --> 00:00:30.110
condition.

00:00:30.110 --> 00:00:31.980
We rendered the content.

00:00:31.980 --> 00:00:32.900
It will work,

00:00:32.900 --> 00:00:38.550
but it will not give us the desired result and will lead us to unneeded complexity.

00:00:38.550 --> 00:00:40.190
So what do we do?

00:00:40.190 --> 00:00:41.130
In fact,

00:00:41.130 --> 00:00:46.470
React doesn't have any built in solution for the routing system,

00:00:46.470 --> 00:00:50.360
so we need to look up for a separate emotional.

00:00:50.360 --> 00:00:51.460
For this reason,

00:00:51.460 --> 00:00:57.790
the react community has built a few packages that we can use as our routing system.

00:00:57.790 --> 00:01:00.940
So one of them is react router,

00:01:00.940 --> 00:01:03.710
and I would say this is the most popular one.

00:01:03.710 --> 00:01:07.110
It is available for both Web and native,

00:01:07.110 --> 00:01:10.070
but we're interested only in Web version.

00:01:10.070 --> 00:01:12.340
So I opened the official webpage,

00:01:12.340 --> 00:01:16.160
and from here I will copied the installation command,

00:01:16.160 --> 00:01:18.140
and I'll put it in my terminal,

00:01:18.140 --> 00:01:19.980
but before I executed,

00:01:19.980 --> 00:01:26.340
I will extend it a little bit and I lead React router because it is available for both

00:01:26.340 --> 00:01:27.230
Webern native.

00:01:27.230 --> 00:01:30.990
We need to install the core package and then the concrete package,

00:01:30.990 --> 00:01:34.260
depending on either Web or native.

00:01:34.260 --> 00:01:36.960
So react filter Dom is intended for Well,

00:01:36.960 --> 00:01:39.760
all right now that it is installing,

00:01:39.760 --> 00:01:42.070
let's configure react router.

00:01:42.070 --> 00:01:44.540
So let's get to Index.

00:01:44.540 --> 00:01:45.570
It'll GS.

00:01:45.570 --> 00:01:52.680
And here we will import something from react router dumb.

00:01:52.680 --> 00:01:58.020
And these something is going to be browser router.

00:01:58.020 --> 00:02:03.260
And this is a component the trouble used to wrap our application around.

00:02:03.260 --> 00:02:10.250
So we're gonna put browser router over here and inside our app component will go.

00:02:10.250 --> 00:02:11.090
All right,

00:02:11.090 --> 00:02:12.180
Something like that.

00:02:12.180 --> 00:02:16.750
Now our router is configured and we are ready to use it.

00:02:16.750 --> 00:02:17.680
Let's get back to you,

00:02:17.680 --> 00:02:24.660
Abdel Gs and let's run our application right after that in Abdel Gs,

00:02:24.660 --> 00:02:32.960
we will import again something from react router dumb and this something again is going to

00:02:32.960 --> 00:02:38.650
be switch and route inside our component.

00:02:38.650 --> 00:02:45.170
Let's remove this Deve and let's put the switch component And inside the switch component,

00:02:45.170 --> 00:02:47.870
we need to define our routes.

00:02:47.870 --> 00:02:49.160
War pages.

00:02:49.160 --> 00:02:50.620
So what I mean,

00:02:50.620 --> 00:02:56.250
is let's poor route as a component over here and for this route,

00:02:56.250 --> 00:02:58.850
we need to define a path,

00:02:58.850 --> 00:03:02.030
a path that will be used to render this component.

00:03:02.030 --> 00:03:11.750
So let's say for the path equals slash we want to render This is home page.

00:03:11.750 --> 00:03:13.630
So whatever goes inside,

00:03:13.630 --> 00:03:17.700
the Stroud component will be rendered at thes path.

00:03:17.700 --> 00:03:21.570
So let's save it and let's get back to our app.

00:03:21.570 --> 00:03:22.970
And as you can see,

00:03:22.970 --> 00:03:25.030
this is home page being rendered.

00:03:25.030 --> 00:03:26.660
But right now,

00:03:26.660 --> 00:03:30.450
if I navigate to some other route over here,

00:03:30.450 --> 00:03:32.100
it will still be rendered.

00:03:32.100 --> 00:03:34.140
And the way react outer works.

00:03:34.140 --> 00:03:37.480
It just uses this path to match the Europe.

00:03:37.480 --> 00:03:39.330
So whatever we define here,

00:03:39.330 --> 00:03:44.860
if this path much is the path that we have on your l,

00:03:44.860 --> 00:03:46.660
the content will be rendered.

00:03:46.660 --> 00:03:48.750
But this is not exactly we want.

00:03:48.750 --> 00:03:55.700
We want to render this route Onley when our your l matches this path over here like the

00:03:55.700 --> 00:03:58.260
exactly much is so for this reason,

00:03:58.260 --> 00:04:05.110
we need to specify one more prop and these prop is exact and it must be set to true in

00:04:05.110 --> 00:04:05.660
react.

00:04:05.660 --> 00:04:07.190
When we have Bullen props,

00:04:07.190 --> 00:04:13.230
we can omit using equals true and then just used the name and react will understand that

00:04:13.230 --> 00:04:14.900
this is set to true.

00:04:14.900 --> 00:04:18.970
Let's say what and now if we go back to this route,

00:04:18.970 --> 00:04:20.490
nothing will be rendered.

00:04:20.490 --> 00:04:22.840
But when we navigate back to your home,

00:04:22.840 --> 00:04:26.360
you can see the D quantities render it so that's it.

00:04:26.360 --> 00:04:29.630
Now let's try and create another page,

00:04:29.630 --> 00:04:30.800
another route.

00:04:30.800 --> 00:04:37.160
So let me copy this and let's put it over here like this and for path.

00:04:37.160 --> 00:04:44.590
We will specify that it is going to be 100 under Start and let's remove exact to see the

00:04:44.590 --> 00:04:45.190
behavior.

00:04:45.190 --> 00:04:48.920
And also this is start like that.

00:04:48.920 --> 00:04:53.560
All right now let's navigate to slash start.

00:04:53.560 --> 00:04:54.600
And as you can see,

00:04:54.600 --> 00:04:56.000
the content is rendered.

00:04:56.000 --> 00:04:58.070
But we don't have the exact probe.

00:04:58.070 --> 00:05:01.190
So if we go to something else afterwards,

00:05:01.190 --> 00:05:03.700
you can see the content is still rendered.

00:05:03.700 --> 00:05:06.790
So let's at exact prop right now,

00:05:06.790 --> 00:05:09.750
and the content will disappear at this route.

00:05:09.750 --> 00:05:12.520
So now under start,

00:05:12.520 --> 00:05:15.230
we will have our exact content.

00:05:15.230 --> 00:05:15.860
All right,

00:05:15.860 --> 00:05:16.480
Perfect.

00:05:16.480 --> 00:05:20.560
Now what about pages that are not found?

00:05:20.560 --> 00:05:22.800
What about this undefined routes?

00:05:22.800 --> 00:05:23.930
Let's say so.

00:05:23.930 --> 00:05:26.490
To render this not found Page,

00:05:26.490 --> 00:05:34.570
we can simply put route without any props at the end off the switch statement and whatever

00:05:34.570 --> 00:05:37.240
goes in sight will be set as not found.

00:05:37.240 --> 00:05:37.750
Page.

00:05:37.750 --> 00:05:44.240
Let's say this is four or four page if we save it.

00:05:44.240 --> 00:05:51.090
And now we never will navigate to undefined route that we didn't specify insights which

00:05:51.090 --> 00:05:53.020
this will be rendered.

00:05:53.020 --> 00:05:56.240
So now if I go to start,

00:05:56.240 --> 00:05:59.390
let's say 12345 it will be.

00:05:59.390 --> 00:06:01.170
This is for a four page,

00:06:01.170 --> 00:06:04.780
but if I navigate to one off the defined routes,

00:06:04.780 --> 00:06:07.710
you will see the corresponding content,

00:06:07.710 --> 00:06:08.580
and that's it.

00:06:08.580 --> 00:06:11.220
That's basically how react router works.

00:06:11.220 --> 00:06:12.520
As you can see,

00:06:12.520 --> 00:06:16.930
it is very similar to the switch statement in JavaScript.

00:06:16.930 --> 00:06:24.170
So we switch between routes where every case is the path that we specify.

00:06:24.170 --> 00:06:26.770
And if we don't have the exact match,

00:06:26.770 --> 00:06:29.350
we have the default operation,

00:06:29.350 --> 00:06:32.060
which is this four or four page.

00:06:32.060 --> 00:06:34.270
I hope it does make sense.

00:06:34.270 --> 00:06:37.240
There are certainly more things toward react,

00:06:37.240 --> 00:06:38.200
router dom,

00:06:38.200 --> 00:06:39.400
But don't worry,

00:06:39.400 --> 00:06:42.170
we will cover them in upcoming videos,

00:06:42.170 --> 00:06:45.010
so the question is the next.

00:06:45.010 --> 00:06:45.440
Now,

00:06:45.440 --> 00:06:50.310
this would define throughout how we are able to navigate between them,

00:06:50.310 --> 00:06:53.890
so we need some sort of a nav bar this region between pages.

00:06:53.890 --> 00:06:57.250
But this is our topic for the next video right now.

00:06:57.250 --> 00:07:00.970
Let's and this video by committing our changes.

00:07:00.970 --> 00:07:01.960
So we will put,

00:07:01.960 --> 00:07:04.990
get at everything and then get commit.

00:07:04.990 --> 00:07:07.200
And we will say something like,

00:07:07.200 --> 00:07:07.680
Let's say,

00:07:07.680 --> 00:07:08.270
edit.

00:07:08.270 --> 00:07:09.620
React right,

00:07:09.620 --> 00:07:10.090
Walter.

00:07:10.090 --> 00:07:11.720
And that's it.

00:07:11.720 --> 00:07:12.780
All right,

00:07:12.780 --> 00:07:14.180
see you in the next one.

