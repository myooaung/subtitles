WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.020
Hey,

00:00:01.020 --> 00:00:02.640
welcome in this video.

00:00:02.640 --> 00:00:09.730
I would like to talk more about use reducer and I want to replace our state management

00:00:09.730 --> 00:00:13.120
using cues state with use reducer Let's go.

00:00:13.120 --> 00:00:19.030
The first thing I will do I will come in all of these use states and from react I'm gonna

00:00:19.030 --> 00:00:27.740
import used reducer Now here I will call use reducer And when I opened party says I can see

00:00:27.740 --> 00:00:33.870
that as a first argument it expects reducer So let's put reducer which we will define in a

00:00:33.870 --> 00:00:40.950
moment Then we have initial state So what initial state should we feed to use reducer?

00:00:40.950 --> 00:00:41.730
Well,

00:00:41.730 --> 00:00:48.290
all of these we manage right now separately So let's combine them under one object because

00:00:48.290 --> 00:00:55.050
the all are related So here outside of this component we are going to create a new variable

00:00:55.050 --> 00:01:02.360
which is going to be initial state And here we will pour So first we have show which is no

00:01:02.360 --> 00:01:10.630
by default than we have is loading which is true then we have better which is also true Now

00:01:10.630 --> 00:01:17.490
we can pass this initial state to use reducer Now we only need to define the reducer itself

00:01:17.490 --> 00:01:17.490
.

00:01:17.490 --> 00:01:19.960
So here what we will do verbal put,

00:01:19.960 --> 00:01:23.970
Const reducer equals some function.

00:01:23.970 --> 00:01:29.050
So a reducer is a function that will return and you state All right,

00:01:29.050 --> 00:01:32.480
so this reducer function receives two arguments.

00:01:32.480 --> 00:01:38.790
First is our current or previous state and then we have the action object.

00:01:38.790 --> 00:01:44.160
So all of our actions are just objects that have structure like this.

00:01:44.160 --> 00:01:49.100
We first have the action type which is basically action name.

00:01:49.100 --> 00:01:50.830
And then whatever we pastor,

00:01:50.830 --> 00:01:55.750
this object is considerate at data that is passed along with this object.

00:01:55.750 --> 00:01:56.170
Well,

00:01:56.170 --> 00:01:56.450
right.

00:01:56.450 --> 00:02:00.550
So since all objects will have the type key,

00:02:00.550 --> 00:02:09.210
we can use the switch statement over here and we can switch over action dot type and our

00:02:09.210 --> 00:02:10.130
default case.

00:02:10.130 --> 00:02:14.270
When we pass an undefined action to our reducer,

00:02:14.270 --> 00:02:17.350
we will return previous state.

00:02:17.350 --> 00:02:19.710
Now let's define our action.

00:02:19.710 --> 00:02:26.130
So our first action is going to be what actions will we eventually have.

00:02:26.130 --> 00:02:32.060
So first action is going to be when we successfully said the data when the fetch is

00:02:32.060 --> 00:02:35.570
successful and then when fetch is unsuccessful,

00:02:35.570 --> 00:02:37.470
So we will have to actions.

00:02:37.470 --> 00:02:39.290
So first will have name,

00:02:39.290 --> 00:02:40.170
fetch,

00:02:40.170 --> 00:02:41.360
success.

00:02:41.360 --> 00:02:47.640
And here we will put the next logic Whatever we return will be set as a new state.

00:02:47.640 --> 00:02:53.760
So we want to make sure that we return the correct structure that we return an object.

00:02:53.760 --> 00:03:01.550
So that's why what we will do double first type return than open object and put spread

00:03:01.550 --> 00:03:02.850
previous state,

00:03:02.850 --> 00:03:08.770
it will merge the previous state and hear whatever we specify will be over written.

00:03:08.770 --> 00:03:11.160
So when we have fetch success,

00:03:11.160 --> 00:03:17.560
we want to update is loading state and said it your falls and also show.

00:03:17.560 --> 00:03:27.660
So we will put is loading said to false and then show will be equal to action dot show So,

00:03:27.660 --> 00:03:31.700
along with our dispatch mobile past action,

00:03:31.700 --> 00:03:32.550
off type,

00:03:32.550 --> 00:03:32.920
fetch,

00:03:32.920 --> 00:03:39.980
success and action that show will be set to the show data that we will return from this

00:03:39.980 --> 00:03:40.570
reducer.

00:03:40.570 --> 00:03:41.320
All right?

00:03:41.320 --> 00:03:47.610
And maybe just to insurable also set our ever to know.

00:03:47.610 --> 00:03:48.700
All right,

00:03:48.700 --> 00:03:49.550
Perfect.

00:03:49.550 --> 00:03:56.410
Then we don't actually need to merge the previous state so we can simply return just an

00:03:56.410 --> 00:03:57.610
object like that.

00:03:57.610 --> 00:04:05.920
And now we will define the second action which is going to be fetch failed and this fetch

00:04:05.920 --> 00:04:09.620
failed will return again An object again.

00:04:09.620 --> 00:04:13.410
We will merge the previous state and hear what we will do.

00:04:13.410 --> 00:04:17.960
We need to update again is loading and enter message.

00:04:17.960 --> 00:04:19.000
So we will do.

00:04:19.000 --> 00:04:28.140
Is loading is going to be set to false and ever message is going to be action dot ever like

00:04:28.140 --> 00:04:28.570
that?

00:04:28.570 --> 00:04:29.460
All right,

00:04:29.460 --> 00:04:32.480
now we are finished with our reducer.

00:04:32.480 --> 00:04:34.810
Let's use this hook properly.

00:04:34.810 --> 00:04:36.490
So this use reducer.

00:04:36.490 --> 00:04:38.010
If we have our on it,

00:04:38.010 --> 00:04:39.820
it returns us again.

00:04:39.820 --> 00:04:42.960
An array off exactly two elements,

00:04:42.960 --> 00:04:45.150
the same as used state.

00:04:45.150 --> 00:04:46.740
So what we can do?

00:04:46.740 --> 00:04:49.350
We can do structure it like we did it before.

00:04:49.350 --> 00:04:56.180
So the first is going to be our state and second is going to be the dispatch function that

00:04:56.180 --> 00:05:01.290
we will call and I am eight hour or dispatch our actions.

00:05:01.290 --> 00:05:02.460
So right now,

00:05:02.460 --> 00:05:03.580
instead of calling,

00:05:03.580 --> 00:05:03.940
set,

00:05:03.940 --> 00:05:06.330
show and sad is loading separately,

00:05:06.330 --> 00:05:13.290
we can call the dispatch function and inside we will pass an object which is going to be

00:05:13.290 --> 00:05:14.150
our action.

00:05:14.150 --> 00:05:19.710
So first we pass type and when we successfully set our data,

00:05:19.710 --> 00:05:23.120
we want to dispatch fetch success.

00:05:23.120 --> 00:05:26.280
So let's go api it and put it over here.

00:05:26.280 --> 00:05:27.350
So type,

00:05:27.350 --> 00:05:28.480
fetch success.

00:05:28.480 --> 00:05:30.350
And then along with this type,

00:05:30.350 --> 00:05:37.990
we will pass show action dot show So show is going to be set to results,

00:05:37.990 --> 00:05:39.220
and that's it.

00:05:39.220 --> 00:05:41.700
Now we dispatch the action,

00:05:41.700 --> 00:05:42.410
all right?

00:05:42.410 --> 00:05:44.430
And for the fail case,

00:05:44.430 --> 00:05:51.740
we will do a similar thing but will copy it and instead off fetch success will dispatch

00:05:51.740 --> 00:05:52.770
fetch failed.

00:05:52.770 --> 00:05:55.020
So fetch failed.

00:05:55.020 --> 00:05:56.550
And instead of show,

00:05:56.550 --> 00:05:59.120
we will pass action dot error.

00:05:59.120 --> 00:06:05.540
So here we will specify better and we will pour error dot message and that's it.

00:06:05.540 --> 00:06:06.970
Now what we can do,

00:06:06.970 --> 00:06:10.630
we can use this state inside our component.

00:06:10.630 --> 00:06:12.590
But since we have an object,

00:06:12.590 --> 00:06:14.140
it can be destructed.

00:06:14.140 --> 00:06:17.040
So we will do it here directly.

00:06:17.040 --> 00:06:18.150
So we will do.

00:06:18.150 --> 00:06:20.500
We will destructor show we will.

00:06:20.500 --> 00:06:23.320
Destructor is loading and we will do structure,

00:06:23.320 --> 00:06:23.750
error.

00:06:23.750 --> 00:06:27.540
And now we end up with exactly the same.

00:06:27.540 --> 00:06:30.390
Let's a concept off state management,

00:06:30.390 --> 00:06:33.780
but right now it is all managed by use reducer.

00:06:33.780 --> 00:06:38.650
It might look that we are managing it a little bit more complex,

00:06:38.650 --> 00:06:40.450
but at the end of the day,

00:06:40.450 --> 00:06:42.750
it looks more clean,

00:06:42.750 --> 00:06:43.390
isn't it?

00:06:43.390 --> 00:06:51.110
So let's remove this use state from here and right now let's just save all of that and

00:06:51.110 --> 00:06:56.180
let's get back to our page and we will see this show and also maybe less.

00:06:56.180 --> 00:06:58.660
Consul Log is loading.

00:06:58.660 --> 00:07:00.530
Or maybe not.

00:07:00.530 --> 00:07:04.280
Maybe let's even not d structure this object from here.

00:07:04.280 --> 00:07:09.280
Let's put state and just cancel lug it to see the complete object.

00:07:09.280 --> 00:07:11.870
And maybe from now,

00:07:11.870 --> 00:07:13.930
let's remove it from here.

00:07:13.930 --> 00:07:15.760
Let's just commented and let's see,

00:07:15.760 --> 00:07:16.570
what do we have?

00:07:16.570 --> 00:07:18.200
So if I refresh the page,

00:07:18.200 --> 00:07:23.580
I can see that my initial state is the state that I specify over here.

00:07:23.580 --> 00:07:29.720
But when we call the fetch success action when we dispatch this action,

00:07:29.720 --> 00:07:35.690
we can see that object has changed and we have error now is loading follows and show

00:07:35.690 --> 00:07:37.070
populated with the data.

00:07:37.070 --> 00:07:38.450
So this is it.

00:07:38.450 --> 00:07:42.160
This is how reducer concept looks like.

00:07:42.160 --> 00:07:43.550
And this is how it works.

00:07:43.550 --> 00:07:43.890
Well,

00:07:43.890 --> 00:07:44.640
right now,

00:07:44.640 --> 00:07:49.350
let's get back to our previous destruct Drink.

00:07:49.350 --> 00:07:51.210
And yep,

00:07:51.210 --> 00:07:52.500
we are ready.

00:07:52.500 --> 00:07:55.530
And now we're managing everything with reducers.

00:07:55.530 --> 00:07:56.090
All right,

00:07:56.090 --> 00:08:01.120
so let's save it and let's commit changes and finish the video.

00:08:01.120 --> 00:08:04.670
So get at everything and get commit,

00:08:04.670 --> 00:08:07.050
replaced.

00:08:07.050 --> 00:08:14.590
Use state with use reducer on the so page.

00:08:14.590 --> 00:08:15.510
All right,

00:08:15.510 --> 00:08:16.310
Perfect.

00:08:16.310 --> 00:08:17.850
See you in the next one

