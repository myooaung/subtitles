WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.050
Hey,

00:00:01.050 --> 00:00:02.690
welcome in this very will.

00:00:02.690 --> 00:00:08.180
Continue building the show page and we will display at her and loading ca messages.

00:00:08.180 --> 00:00:08.860
Let's go.

00:00:08.860 --> 00:00:14.100
The first thing we will do inside show component we are going to add new state.

00:00:14.100 --> 00:00:16.430
So it is going to be is loading,

00:00:16.430 --> 00:00:21.570
which will be a bullet value that will indicate whether data is being loaded or not.

00:00:21.570 --> 00:00:22.740
And by default,

00:00:22.740 --> 00:00:29.270
we will set it to true because below our data from the very start now the second state

00:00:29.270 --> 00:00:32.100
would define is going to be four errors.

00:00:32.100 --> 00:00:34.110
So we will damage just enter,

00:00:34.110 --> 00:00:38.380
and by default it can be just an empty string.

00:00:38.380 --> 00:00:43.810
But I prefer to put now values all right now that we have the state,

00:00:43.810 --> 00:00:48.150
let's updated here right after we said the state for show,

00:00:48.150 --> 00:00:53.710
but will also update the estate for is lowering curable port falls,

00:00:53.710 --> 00:00:56.270
and the same will do for error messages.

00:00:56.270 --> 00:01:00.900
But first we need to pull the catch block to catch another,

00:01:00.900 --> 00:01:08.690
and inside this block bubble call set at her and horrible call error dot message.

00:01:08.690 --> 00:01:09.410
All right,

00:01:09.410 --> 00:01:12.730
and also because this is different use case,

00:01:12.730 --> 00:01:18.690
we also need to call SAT is loading again and poor false inside.

00:01:18.690 --> 00:01:19.370
All right,

00:01:19.370 --> 00:01:25.000
now that we have the state how we can use it so we can use conditional rendering.

00:01:25.000 --> 00:01:31.230
And instead of directly putting conditions inside our main mark up like we did it before

00:01:31.230 --> 00:01:33.660
with slumped like is loading,

00:01:33.660 --> 00:01:38.960
Then we will display loading message if we have another than we're going to display ever.

00:01:38.960 --> 00:01:45.280
If we have show we're going to display show instead off this swivel poor if statements over

00:01:45.280 --> 00:01:45.750
here.

00:01:45.750 --> 00:01:48.570
So we're gonna pour if is lowering,

00:01:48.570 --> 00:01:51.240
then we are going to return,

00:01:51.240 --> 00:01:52.440
Let's say and you,

00:01:52.440 --> 00:01:53.000
def,

00:01:53.000 --> 00:01:57.150
that will be data is being floated.

00:01:57.150 --> 00:02:03.790
And what will be the difference between this if over here or direct logic inside Main

00:02:03.790 --> 00:02:04.190
market?

00:02:04.190 --> 00:02:04.780
Well,

00:02:04.780 --> 00:02:10.440
if we don't care about the wrapping element off our messages,

00:02:10.440 --> 00:02:12.800
we can return completely another market.

00:02:12.800 --> 00:02:13.560
So instead,

00:02:13.560 --> 00:02:14.750
off this one,

00:02:14.750 --> 00:02:19.140
these market will be returned when we have is loading set to true.

00:02:19.140 --> 00:02:22.690
So it's totally up to us for our case.

00:02:22.690 --> 00:02:24.260
It works just fine.

00:02:24.260 --> 00:02:27.220
So if we have at our message,

00:02:27.220 --> 00:02:35.560
we're going to pour again and you def which will be better occurred and inside were going

00:02:35.560 --> 00:02:37.680
to Botha ever message like that.

00:02:37.680 --> 00:02:38.530
All right,

00:02:38.530 --> 00:02:39.900
let's check it out.

00:02:39.900 --> 00:02:41.790
If I refresh the page quickly,

00:02:41.790 --> 00:02:44.740
I can see my message is flickering.

00:02:44.740 --> 00:02:46.170
So this is fine.

00:02:46.170 --> 00:02:47.160
So with works.

00:02:47.160 --> 00:02:49.400
But to make it more clear,

00:02:49.400 --> 00:02:57.290
let's put Saturn time out over here and let's pour two seconds here and inside,

00:02:57.290 --> 00:02:58.260
set a mouth.

00:02:58.260 --> 00:03:00.600
We will put our update functions.

00:03:00.600 --> 00:03:02.050
Now let's take it out.

00:03:02.050 --> 00:03:04.000
So data is being loaded.

00:03:04.000 --> 00:03:05.790
And then after two seconds,

00:03:05.790 --> 00:03:07.520
we have this is show page,

00:03:07.520 --> 00:03:09.100
so it actually worked.

00:03:09.100 --> 00:03:17.930
Now what about error messages inside a P I get We can throw new error and let's poor whoops

00:03:17.930 --> 00:03:19.210
over here.

00:03:19.210 --> 00:03:23.630
And whenever something bad happens to our request,

00:03:23.630 --> 00:03:27.440
we will see this ever occurred and then error message.

00:03:27.440 --> 00:03:29.390
So again it worked.

00:03:29.390 --> 00:03:31.820
Now it seems like we are done.

00:03:31.820 --> 00:03:32.990
But there is one more.

00:03:32.990 --> 00:03:35.050
Think above all of that.

00:03:35.050 --> 00:03:36.080
And the thing is,

00:03:36.080 --> 00:03:36.600
next.

00:03:36.600 --> 00:03:41.580
If I refresh the page and while data is being loaded,

00:03:41.580 --> 00:03:43.330
I switch pages.

00:03:43.330 --> 00:03:48.780
I will see this warning saying that can perform it reacts state of late on an amounted

00:03:48.780 --> 00:03:49.450
competent.

00:03:49.450 --> 00:03:54.750
This is because we have this chain off events define here.

00:03:54.750 --> 00:03:57.490
So first would get data from a P I.

00:03:57.490 --> 00:04:01.290
Then we said this state and because this is all asynchronous,

00:04:01.290 --> 00:04:03.320
when we switch pages,

00:04:03.320 --> 00:04:08.130
react still tries and continue to update the state.

00:04:08.130 --> 00:04:09.760
But as for now,

00:04:09.760 --> 00:04:12.070
our component already on mounted.

00:04:12.070 --> 00:04:16.890
But react doesn't really know about that because it tries to update the state.

00:04:16.890 --> 00:04:17.850
And again,

00:04:17.850 --> 00:04:20.300
this is happening because it's all asynchronous.

00:04:20.300 --> 00:04:26.140
So to prevent that react suggests us to use a fact cleanup function,

00:04:26.140 --> 00:04:27.300
so we will use it.

00:04:27.300 --> 00:04:27.820
All right,

00:04:27.820 --> 00:04:33.590
so inside use the fact we are going Teoh define a new variable which is going to be his

00:04:33.590 --> 00:04:34.250
mounted,

00:04:34.250 --> 00:04:39.450
and it will indicate whether our component is currently mounted or rendered on evaporation

00:04:39.450 --> 00:04:40.160
or not.

00:04:40.160 --> 00:04:41.100
By default,

00:04:41.100 --> 00:04:47.610
it will be set to true because these callback of user fact fires only one component is

00:04:47.610 --> 00:04:48.200
mounted.

00:04:48.200 --> 00:04:56.660
So it is set to true and inside cleanup function when component will amount we will set is

00:04:56.660 --> 00:04:58.220
mounted to Fox.

00:04:58.220 --> 00:04:58.810
Now,

00:04:58.810 --> 00:05:00.820
right before we update the state,

00:05:00.820 --> 00:05:03.850
we will ask if our component is mounted.

00:05:03.850 --> 00:05:09.240
Only then rubble update the state and the same applies for the catch block.

00:05:09.240 --> 00:05:11.060
If component is mounted,

00:05:11.060 --> 00:05:14.230
Denver will set hair and that's it.

00:05:14.230 --> 00:05:15.390
Let's check it out.

00:05:15.390 --> 00:05:16.800
Let me switch back.

00:05:16.800 --> 00:05:19.050
Data is being loaded again.

00:05:19.050 --> 00:05:20.520
Now,

00:05:20.520 --> 00:05:23.370
I don't have any warnings inside the council,

00:05:23.370 --> 00:05:24.540
so it worked.

00:05:24.540 --> 00:05:29.390
And I've noticed that I misspelled data over here with date.

00:05:29.390 --> 00:05:31.160
Let's make it like this.

00:05:31.160 --> 00:05:32.070
All right?

00:05:32.070 --> 00:05:32.550
Now,

00:05:32.550 --> 00:05:33.650
it seems fine.

00:05:33.650 --> 00:05:40.130
Let's remove set time out from here and commit our changes because we are done.

00:05:40.130 --> 00:05:43.700
So I'm gonna open my terminal and then put,

00:05:43.700 --> 00:05:45.490
get at everything,

00:05:45.490 --> 00:05:46.740
get commit,

00:05:46.740 --> 00:05:56.530
and let's poor at it blowing and better messages to the show page.

00:05:56.530 --> 00:05:57.210
All right?

00:05:57.210 --> 00:05:58.750
Everything seems fine.

00:05:58.750 --> 00:06:00.150
See you in the next one.

