WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.820
Hey,

00:00:00.820 --> 00:00:01.580
welcome.

00:00:01.580 --> 00:00:02.960
Let's continue endless.

00:00:02.960 --> 00:00:07.400
Finally finished building the game history for our application.

00:00:07.400 --> 00:00:13.970
I already started the local development server and what I will do next to display the game

00:00:13.970 --> 00:00:14.600
history,

00:00:14.600 --> 00:00:16.370
I will create a new component.

00:00:16.370 --> 00:00:18.490
And for these under components,

00:00:18.490 --> 00:00:25.470
we will create in your file named History and it is going to be a component and we will use

00:00:25.470 --> 00:00:29.140
a dis snippet again and the market will be the next.

00:00:29.140 --> 00:00:34.410
So it is going to be a ul element with the L I element in sight.

00:00:34.410 --> 00:00:36.590
And inside this Lee element,

00:00:36.590 --> 00:00:43.050
we will put Button because we will be able to click on this element to traverse the history

00:00:43.050 --> 00:00:43.050
.

00:00:43.050 --> 00:00:43.810
So for now,

00:00:43.810 --> 00:00:52.380
let's put it something like okay and we associate the type and set it to Button to avoid

00:00:52.380 --> 00:00:53.850
getting Kiessling's warning.

00:00:53.850 --> 00:00:55.850
Now what we will do,

00:00:55.850 --> 00:01:01.130
we will import this history component Teoh Abdel Gs So here at the top,

00:01:01.130 --> 00:01:06.250
I will copy this line and I will replace board with history.

00:01:06.250 --> 00:01:14.330
Then at the bottom off this markup we will put this history component just like so Now if

00:01:14.330 --> 00:01:16.720
we save it and get back to the browser,

00:01:16.720 --> 00:01:19.650
we will see it is being displayed here at the bottom.

00:01:19.650 --> 00:01:20.320
Okay,

00:01:20.320 --> 00:01:22.420
So what actually worked nice?

00:01:22.420 --> 00:01:31.030
Our next step is to pass down this state from the app to history to get access to the State

00:01:31.030 --> 00:01:31.680
Insight.

00:01:31.680 --> 00:01:34.490
So what we will do to history?

00:01:34.490 --> 00:01:35.270
Component.

00:01:35.270 --> 00:01:41.150
We will pass history as history and inside history component.

00:01:41.150 --> 00:01:45.220
Bubble de structured this history and in this manner,

00:01:45.220 --> 00:01:47.500
we will get access to the state.

00:01:47.500 --> 00:01:48.250
Now,

00:01:48.250 --> 00:01:49.490
the question is,

00:01:49.490 --> 00:01:52.390
how can we actually display this state?

00:01:52.390 --> 00:01:55.790
Because our state is just an array off elements.

00:01:55.790 --> 00:01:56.430
Well,

00:01:56.430 --> 00:01:59.470
we can get used off dot Map matter.

00:01:59.470 --> 00:02:05.480
What I mean is that here inside this u L we can open Carly brackets,

00:02:05.480 --> 00:02:07.350
and here we can type history,

00:02:07.350 --> 00:02:08.830
doc map.

00:02:08.830 --> 00:02:11.280
And inside this callback function,

00:02:11.280 --> 00:02:12.430
which we will do,

00:02:12.430 --> 00:02:15.930
we will return the markup that we want to map.

00:02:15.930 --> 00:02:16.540
So,

00:02:16.540 --> 00:02:18.670
basically what we are doing,

00:02:18.670 --> 00:02:23.510
we are mapping every array element to JSX element.

00:02:23.510 --> 00:02:25.650
So let's return it from here.

00:02:25.650 --> 00:02:26.930
Let's save it.

00:02:26.930 --> 00:02:31.390
Let's get back to the browser and let's see if it actually worked.

00:02:31.390 --> 00:02:32.490
As you can see,

00:02:32.490 --> 00:02:39.010
the number off elements increases as the number off array elements increases as well.

00:02:39.010 --> 00:02:40.330
So that's fine.

00:02:40.330 --> 00:02:42.030
But here in the Council.

00:02:42.030 --> 00:02:46.450
We see that each child in the list should have a unique key prop.

00:02:46.450 --> 00:02:50.490
And that's because whenever we map elements like that,

00:02:50.490 --> 00:02:54.580
we need to pass the key prop to the rapper element.

00:02:54.580 --> 00:02:59.960
And this key prop must be unique for every item.

00:02:59.960 --> 00:03:07.430
That's because imagine if we had a really dynamic array and we map elements like that react

00:03:07.430 --> 00:03:07.430
,

00:03:07.430 --> 00:03:08.410
what will it do?

00:03:08.410 --> 00:03:14.380
It will keep track off every element to retain the correct order.

00:03:14.380 --> 00:03:18.230
That's why we need to associate it with the key every time.

00:03:18.230 --> 00:03:21.560
But because our array is not that dynamic,

00:03:21.560 --> 00:03:25.060
we can put index off this item as a key.

00:03:25.060 --> 00:03:26.520
So what we will do,

00:03:26.520 --> 00:03:28.700
we will get this index from here.

00:03:28.700 --> 00:03:34.690
We will put underscore because we are not intended to use the actual value mobile breath

00:03:34.690 --> 00:03:37.120
index but instead of index mess,

00:03:37.120 --> 00:03:42.840
rename it to move because it will basically represent the current move.

00:03:42.840 --> 00:03:45.540
Not the current boom was just the move.

00:03:45.540 --> 00:03:48.520
So let's save it and let's get back.

00:03:48.520 --> 00:03:50.080
And if we play a little bit,

00:03:50.080 --> 00:03:52.500
we see that we have no warning,

00:03:52.500 --> 00:03:54.880
so everything's fine now.

00:03:54.880 --> 00:03:59.290
Our next step is to replace this talk text over here.

00:03:59.290 --> 00:04:00.470
What we will do.

00:04:00.470 --> 00:04:03.920
We will open Carla brackets and we will put next condition.

00:04:03.920 --> 00:04:07.410
If our move is zero,

00:04:07.410 --> 00:04:11.480
then we will display Go to game start.

00:04:11.480 --> 00:04:20.060
As otherwise we will display Go to move than hashtag Denver will open string and reparation

00:04:20.060 --> 00:04:25.060
switch quotes and we will put move to display the actual move,

00:04:25.060 --> 00:04:27.100
which is our index.

00:04:27.100 --> 00:04:27.870
Now,

00:04:27.870 --> 00:04:28.950
As we can see,

00:04:28.950 --> 00:04:36.540
our first element is go to games start and the rest is just 12345 and so one.

00:04:36.540 --> 00:04:37.100
Okay,

00:04:37.100 --> 00:04:37.670
perfect.

00:04:37.670 --> 00:04:39.080
This is what we wanted.

00:04:39.080 --> 00:04:40.900
Now the thing is,

00:04:40.900 --> 00:04:43.600
if we click on these buttons,

00:04:43.600 --> 00:04:45.050
nothing happens.

00:04:45.050 --> 00:04:48.160
There's because we didn't put any functionality yet.

00:04:48.160 --> 00:04:49.610
So what we will do?

00:04:49.610 --> 00:04:54.090
We will put on click event to this button.

00:04:54.090 --> 00:04:56.650
And for this on click you went,

00:04:56.650 --> 00:04:59.450
we will give the next handler.

00:04:59.450 --> 00:05:01.780
So inside this on click handler,

00:05:01.780 --> 00:05:08.390
we will call another function that will come from the Abdullah gs component.

00:05:08.390 --> 00:05:16.050
So we will call this function move to and this function will receive one argument the move

00:05:16.050 --> 00:05:20.480
that will be set as a state four current move.

00:05:20.480 --> 00:05:25.200
So it is going to be this index from this mapped item.

00:05:25.200 --> 00:05:28.920
So move to most if we save it now,

00:05:28.920 --> 00:05:32.980
we need to consume this move to from our props.

00:05:32.980 --> 00:05:39.030
So here we will put move to and now inside Abdul G s.

00:05:39.030 --> 00:05:42.400
We need to create one more prop over here,

00:05:42.400 --> 00:05:46.920
moved to you and pass our move to that We will create in the moment.

00:05:46.920 --> 00:05:47.920
So here,

00:05:47.920 --> 00:05:49.590
right before we return it,

00:05:49.590 --> 00:05:51.840
we will create this move to function.

00:05:51.840 --> 00:05:56.950
And as an argument it will receive this moving that we pass over here.

00:05:56.950 --> 00:05:59.560
Let's specify it here.

00:05:59.560 --> 00:06:02.200
And that thing we will do,

00:06:02.200 --> 00:06:08.240
we will just call the sad current move function so set current to move.

00:06:08.240 --> 00:06:15.150
And we will put these move to this function just like that if we see with,

00:06:15.150 --> 00:06:17.450
let's see what we have.

00:06:17.450 --> 00:06:22.500
So if I played the game a little bit and if I click on the bottle,

00:06:22.500 --> 00:06:27.650
you can see that we now traverse the history so it worked.

00:06:27.650 --> 00:06:30.510
But there is one thing that we can't actually see.

00:06:30.510 --> 00:06:37.750
Our current move the user is not not if I'd so Let's fix it with applying dynamic styles.

00:06:37.750 --> 00:06:39.580
So in previous videos,

00:06:39.580 --> 00:06:42.390
when we talked about silent in react,

00:06:42.390 --> 00:06:48.040
I didn't say about one more way off selling the up about in line styles.

00:06:48.040 --> 00:06:50.930
We only talked about classes so to you,

00:06:50.930 --> 00:06:52.750
in line styles in react.

00:06:52.750 --> 00:07:00.480
Every element in react has in this style prop and this style prop expects an object.

00:07:00.480 --> 00:07:02.450
And inside this object,

00:07:02.450 --> 00:07:07.440
we can use any styles that will be applied as in line styles.

00:07:07.440 --> 00:07:12.750
But because it is an object we can to use CSS directly over here.

00:07:12.750 --> 00:07:16.800
So our keys will be CSS properties.

00:07:16.800 --> 00:07:17.800
Camel cased.

00:07:17.800 --> 00:07:24.440
What I mean is that bubble highlight this move with the font weight property.

00:07:24.440 --> 00:07:27.310
So instead of typing fond than dash,

00:07:27.310 --> 00:07:27.910
wait,

00:07:27.910 --> 00:07:32.940
we can to do this because this is just an object instead of a Bill Port Camel case

00:07:32.940 --> 00:07:36.530
diversion and we will put the next logic here.

00:07:36.530 --> 00:07:37.350
We will say,

00:07:37.350 --> 00:07:45.910
if our move that we are currently it rating over equals our current move that we will get

00:07:45.910 --> 00:07:47.260
from the Abdul Gs,

00:07:47.260 --> 00:07:53.110
then we will port bold as otherwise our element will be normal.

00:07:53.110 --> 00:07:55.790
Now we need to get this current move.

00:07:55.790 --> 00:07:59.150
So let's grab it from our props.

00:07:59.150 --> 00:08:01.610
And in Abdel Gs,

00:08:01.610 --> 00:08:03.220
let's pass it to history.

00:08:03.220 --> 00:08:07.350
So current move equals current move,

00:08:07.350 --> 00:08:08.910
just like so.

00:08:08.910 --> 00:08:10.310
Now if we save it.

00:08:10.310 --> 00:08:16.260
We can see that our latest element by default is bolt because of this is our current step.

00:08:16.260 --> 00:08:18.160
But when we traveled the history,

00:08:18.160 --> 00:08:23.250
we can see that everything is being highlighted and everything works just fine.

00:08:23.250 --> 00:08:27.950
So with it everything we wanted in terms off adding history too.

00:08:27.950 --> 00:08:28.740
Our game.

00:08:28.740 --> 00:08:29.540
Cool.

00:08:29.540 --> 00:08:37.070
Now let's also get rid off this Consul locks and spaces and we are ready to commit our

00:08:37.070 --> 00:08:37.570
changes.

00:08:37.570 --> 00:08:47.210
So I will stop the server and I will pour to get that dot and also get commit message.

00:08:47.210 --> 00:08:51.750
I will put something like displayed game history.

00:08:51.750 --> 00:08:53.150
Okay,

00:08:53.150 --> 00:08:54.280
Perfect.

00:08:54.280 --> 00:08:56.090
I will see you in the next one.

