WEBVTT
1
00:00:05.040 --> 00:00:07.030
Hello and welcome back to the course on blog.

2
00:00:07.170 --> 00:00:11.070
And today we're going to have a visual demonstration of how watchings work.

3
00:00:11.070 --> 00:00:18.120
So in order to form along with a tutorial you need to go to Tools Daut super size dot com slash block

4
00:00:18.120 --> 00:00:19.760
chain slash lock.

5
00:00:20.040 --> 00:00:24.740
So this year all you'll be able to find all of the tools are going to be using today.

6
00:00:25.020 --> 00:00:27.030
And right away there's a copyright notice here.

7
00:00:27.040 --> 00:00:35.160
I just wanted to say a huge thank you to Andrew Anders Brown were for making these cards available.

8
00:00:35.160 --> 00:00:38.320
You can if you like them you can also include them on your own websites.

9
00:00:38.460 --> 00:00:40.950
Here's the license agreement.

10
00:00:40.950 --> 00:00:41.280
All right.

11
00:00:41.280 --> 00:00:44.990
So this we've already seen hash.

12
00:00:45.000 --> 00:00:51.960
So if you put in any information here you'll see that this is Chateau-Renaud 56 hash which is calculated.

13
00:00:51.960 --> 00:00:57.940
Now here is a block and as we discussed got the block number of the Nolens the data and the hash.

14
00:00:58.020 --> 00:01:01.410
We don't have the previous hash here because this is just block by itself.

15
00:01:01.590 --> 00:01:04.220
And here you can see how the block works.

16
00:01:04.220 --> 00:01:08.160
So you put in any number we can this this one.

17
00:01:08.160 --> 00:01:10.790
This illustrates the mining process.

18
00:01:10.790 --> 00:01:22.440
So for instance let me just put in some value here Cairo sense a lot 900 coins.

19
00:01:23.010 --> 00:01:23.450
OK.

20
00:01:23.550 --> 00:01:27.450
And so you can see that right away it becomes red because it doesn't have a valid hash.

21
00:01:27.450 --> 00:01:30.540
So what are we going to do now is we're into mindless blocks.

22
00:01:30.560 --> 00:01:32.020
If you click here.

23
00:01:32.150 --> 00:01:32.900
There we go.

24
00:01:32.910 --> 00:01:38.430
So you can see that the non-Scots updated and the hash got updated and the block number and the data

25
00:01:38.610 --> 00:01:39.870
did not change.

26
00:01:40.410 --> 00:01:47.160
So that's and you can see the leading zeros here that indicates that it has passed a certain target

27
00:01:47.860 --> 00:01:48.850
difficulty.

28
00:01:49.050 --> 00:01:51.620
As we discussed it's small is less than a certain number.

29
00:01:51.630 --> 00:01:54.080
That's exactly what we talked about in the mining trial.

30
00:01:54.090 --> 00:02:01.050
So if you change anything here so if you say it not 900 which is say nine hundred and one right away

31
00:02:01.140 --> 00:02:04.860
the hash is absolutely different and you need to mine this block again.

32
00:02:05.180 --> 00:02:05.970
And there you go.

33
00:02:06.060 --> 00:02:09.480
Right away there's a nons 20 1405 gives a good hash.

34
00:02:09.600 --> 00:02:15.870
So go ahead and play around with this and you can just see how this whole Mai-Ling concept works.

35
00:02:15.870 --> 00:02:20.670
All right so now we're going to move on to block chain and here you actually have a chain of these blocks

36
00:02:20.730 --> 00:02:23.090
probably a chain where we have five blocks in it.

37
00:02:23.280 --> 00:02:29.700
And this time as you can see the new field has been included the previous hash hash of the previous

38
00:02:29.700 --> 00:02:29.960
block.

39
00:02:29.970 --> 00:02:35.490
And as you can see they are all cryptographically linked together and moreover each one of the blocks

40
00:02:35.490 --> 00:02:36.960
has a valid hash.

41
00:02:36.960 --> 00:02:41.630
It says below that sort of number so it starts with the four leading zeros.

42
00:02:41.710 --> 00:02:46.680
And so let's have a look at what happens if we try to attack this block chain.

43
00:02:46.690 --> 00:02:51.480
So for instance if we try to change the value let's say in this block.

44
00:02:51.960 --> 00:03:00.420
So for example let's say we want to actually let's say to start off we're going to add some data right.

45
00:03:00.420 --> 00:03:04.740
So we're going to say hello.

46
00:03:04.740 --> 00:03:09.960
Let's say I bought a house and we'll say

47
00:03:12.660 --> 00:03:13.660
let's.

48
00:03:13.680 --> 00:03:14.880
I don't know.

49
00:03:16.170 --> 00:03:19.250
How are you.

50
00:03:19.740 --> 00:03:26.740
Say my wallet number is X.

51
00:03:26.930 --> 00:03:27.500
And

52
00:03:30.300 --> 00:03:36.720
fifty three for just some random information and then we'll just make the vulture invalid by mining

53
00:03:36.720 --> 00:03:39.530
all of these blocks so we have something to start with.

54
00:03:39.530 --> 00:03:40.700
Right.

55
00:03:40.800 --> 00:03:44.230
So that's second.

56
00:03:44.470 --> 00:03:50.050
Sometimes they take longer because the hash might be further away.

57
00:03:50.050 --> 00:03:52.960
So let's try that more one more time.

58
00:03:52.960 --> 00:03:56.390
There we go again.

59
00:03:56.650 --> 00:03:57.510
That's all of that.

60
00:03:57.610 --> 00:03:59.140
And so now if we try to.

61
00:03:59.140 --> 00:04:03.220
So this is a block chain and it's immutable it's secure.

62
00:04:03.250 --> 00:04:04.900
What happens if we try to change something.

63
00:04:04.900 --> 00:04:09.520
So if I try to change something in this block today.

64
00:04:09.520 --> 00:04:09.770
Right.

65
00:04:09.820 --> 00:04:11.600
How are you today.

66
00:04:12.280 --> 00:04:13.960
You can see what happens right away.

67
00:04:13.990 --> 00:04:19.540
So you can see that the previous hash doesn't change it's the same but the hash of the current block

68
00:04:19.540 --> 00:04:20.740
changes.

69
00:04:21.130 --> 00:04:32.260
And then what's so the interesting thing about this implementation that Anders has suggested is that

70
00:04:32.410 --> 00:04:35.000
here instantly the next to this is the changes.

71
00:04:35.020 --> 00:04:45.850
And this also changes and like this is an assumption that once you attack this block then you recalculate

72
00:04:45.850 --> 00:04:47.490
the hash here and you recalculate the hash.

73
00:04:47.490 --> 00:04:55.010
If you don't mind the blocks but we see as we put in this value the the hash is automatically recalculated

74
00:04:55.090 --> 00:04:58.920
and then so basically all these hashes automatically recalculate.

75
00:04:59.080 --> 00:05:02.680
That's doesn't have to necessarily be the case in a block chain.

76
00:05:02.680 --> 00:05:06.850
What could happen is just this Hosh this previous hash would just be different and it would not match

77
00:05:06.850 --> 00:05:07.850
up with this hash.

78
00:05:07.960 --> 00:05:09.640
And that's where the link would be broken.

79
00:05:09.640 --> 00:05:11.220
So this would still be green.

80
00:05:11.390 --> 00:05:14.640
But inevitably you would still need to fix this.

81
00:05:14.700 --> 00:05:18.690
Remind this remind this and that this will become red and you need to remind this.

82
00:05:18.730 --> 00:05:24.100
So I just wanted to point that out that this is just a specific implementation where you can see that

83
00:05:24.640 --> 00:05:30.310
the hashes are recalculate automatically so as I start typing in here you can see this hash is recalculated

84
00:05:30.310 --> 00:05:34.400
this hash all the hashes of the future blocks recalled automatically.

85
00:05:34.630 --> 00:05:37.890
That's just the specifics of this implementation.

86
00:05:38.370 --> 00:05:42.410
In a normal block chain what would happen is this hash is recalculate.

87
00:05:42.430 --> 00:05:44.840
And that would just not match up with this hash.

88
00:05:44.920 --> 00:05:51.010
And then this hash would not match up with hash was still not up but once you recalculate remind this

89
00:05:51.010 --> 00:05:54.570
block and then remind this block then these two would not match up.

90
00:05:54.580 --> 00:05:57.030
So that's just something to keep in mind.

91
00:05:57.040 --> 00:05:58.740
That's how it works.

92
00:05:59.770 --> 00:06:04.420
But there are as you can see once you try to change something here everything in the future breaks.

93
00:06:04.470 --> 00:06:06.640
OK and now we're moving on to distributed.

94
00:06:06.880 --> 00:06:13.630
And here we have the same block chain but it is with separate peer's so puree has a copy of B has a

95
00:06:13.630 --> 00:06:20.410
copy Pearcey has the copy as is here which is going to have a look at what we discussed in that peer

96
00:06:20.410 --> 00:06:28.570
to peer distributed peer to peer network tutorial where if we put in some value here not only does the

97
00:06:28.570 --> 00:06:37.870
hacker have to now remind this block and then this block and then this block but also the block chain

98
00:06:37.870 --> 00:06:43.330
is secure because this will no longer match up as we will see just give it a second it's still it's

99
00:06:43.330 --> 00:06:48.140
still processing it's probably going to have like a big number here.

100
00:06:48.150 --> 00:06:48.520
There we go.

101
00:06:48.520 --> 00:06:51.550
So now it will no longer match up.

102
00:06:51.550 --> 00:06:57.930
So if you look at the hash over here you can see it starts with four zeros and then F A D.

103
00:06:58.540 --> 00:06:59.770
And here it's different.

104
00:06:59.770 --> 00:07:01.100
E-4 be.

105
00:07:01.270 --> 00:07:02.940
And here it's forty nine.

106
00:07:03.010 --> 00:07:09.400
So we know right away that because the majority of blogs have the same hash for Benard something is

107
00:07:09.400 --> 00:07:11.210
wrong in this block chain.

108
00:07:11.580 --> 00:07:17.890
That's what we talked about in the peer to peer distribution network tutorial that it's much harder

109
00:07:17.890 --> 00:07:22.540
to attack a blotching that's distributed because not only do you have to recalculate all of these you

110
00:07:22.540 --> 00:07:27.940
have to also attack all of these blocks at the same time and all of these blocks at the same time before

111
00:07:27.940 --> 00:07:29.690
they're able to update this.

112
00:07:29.710 --> 00:07:33.560
And the more you have net peers in the network the harder it is.

113
00:07:33.640 --> 00:07:36.770
And finally moving on to tokens This is the same thing.

114
00:07:36.790 --> 00:07:43.450
But here we have transactions so it just illustrates the concept even further that you have the block

115
00:07:43.450 --> 00:07:46.850
chain that is distributed across three peers.

116
00:07:46.960 --> 00:07:54.550
And then if you try to change like even one to one $1 from ninety seven dollars thirteen to ninety eight

117
00:07:54.550 --> 00:07:55.450
dollars.

118
00:07:55.870 --> 00:07:58.780
So you can see right away these become invalid.

119
00:07:58.780 --> 00:08:04.510
You have to mine the block again you have to mine the block again and then right away you can tell just

120
00:08:04.510 --> 00:08:10.850
by looking at the hash starts six five a and this one is different this is be a zero.

121
00:08:11.290 --> 00:08:12.880
And here you have a zero.

122
00:08:12.880 --> 00:08:17.210
So you can see right away that this is the correct copy of the block chain.

123
00:08:17.260 --> 00:08:17.550
Yes.

124
00:08:17.560 --> 00:08:19.090
And this is the incorrect copy.

125
00:08:19.090 --> 00:08:21.340
This is something is wrong here you can.

126
00:08:21.460 --> 00:08:27.660
You don't even need to compare all of the values and look for this one fraudulent transaction.

127
00:08:27.670 --> 00:08:29.420
You can just say right away.

128
00:08:29.920 --> 00:08:30.220
All right.

129
00:08:30.220 --> 00:08:32.610
So that's that's how tokens work.

130
00:08:32.620 --> 00:08:35.480
That's how basically the block chain works with money.

131
00:08:35.560 --> 00:08:36.960
We're going to look at this one as well.

132
00:08:36.970 --> 00:08:41.380
Even though we haven't discussed it yet this is something that we'll talk about in module 2 but nevertheless

133
00:08:41.380 --> 00:08:42.180
this will be helpful.

134
00:08:42.400 --> 00:08:43.480
In the future.

135
00:08:43.910 --> 00:08:48.920
So Coinbase is the trans is where actually the money originates.

136
00:08:48.920 --> 00:08:54.940
For instance Bitcoins once a block is mind that is the Coinbase at the top of every block in Bitcoin

137
00:08:54.950 --> 00:08:58.230
you'll see that that's how much money the miner got.

138
00:08:58.430 --> 00:09:05.390
And so this will allow money to actually be injected into the blogs and into the system where does it

139
00:09:05.390 --> 00:09:07.980
come from in the first place come come from thin air.

140
00:09:08.040 --> 00:09:12.860
And so you see the monies coming into the system through Coinbase and then the transactions are happening

141
00:09:13.150 --> 00:09:15.330
then the money's been distributed again.

142
00:09:15.360 --> 00:09:20.720
Is this just another type of transaction that's included here the rest of the principles are exactly

143
00:09:20.720 --> 00:09:21.740
the same.

144
00:09:22.020 --> 00:09:27.580
Again that will be useful in part 2 in module 2 of course.

145
00:09:27.590 --> 00:09:30.330
So there you go that's the block chain demo.

146
00:09:30.350 --> 00:09:32.110
I hope you enjoyed today's tutorial.

147
00:09:32.120 --> 00:09:38.410
Have a player on refrig and it's tools that tools does that create a assigns that the watching slash.

148
00:09:38.450 --> 00:09:43.170
Whichever one you want to start with the easiest one is probably block because it's shorter to type.

149
00:09:43.550 --> 00:09:46.030
And on that note thank you so much for being here today.

150
00:09:46.130 --> 00:09:47.700
I look forward to seeing you next time.

151
00:09:47.720 --> 00:09:49.340
Until then in your book chains.
