WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.400 --> 00:00:04.380
Welcome back. In the last video,

00:00:04.380 --> 00:00:07.680
we looked at how to define a function and how to invoke

00:00:07.680 --> 00:00:12.345
that function using the functions name and then the curly brackets.

00:00:12.345 --> 00:00:16.020
In this video, we're going to take that a little bit further.

00:00:16.020 --> 00:00:20.730
I'm going to take a look at passing parameters into these curly brackets.

00:00:20.730 --> 00:00:23.835
Let's start with the folder.

00:00:23.835 --> 00:00:26.520
Open up your JavaScript folder.

00:00:26.520 --> 00:00:30.630
In the basics, duplicate the functions.

00:00:30.630 --> 00:00:35.380
This is Number 10, function-parameters.

00:00:42.410 --> 00:00:49.270
Then open up the function parameters folder and change the name.

00:00:53.750 --> 00:00:56.505
Let's take a look at how this works.

00:00:56.505 --> 00:01:00.280
We can just delete the section from the last video.

00:01:00.920 --> 00:01:07.090
A new function, and we'll call this alertMessage.

00:01:11.200 --> 00:01:14.225
This time we're leaving the brackets empty.

00:01:14.225 --> 00:01:18.590
I'm going to pass in a message into there.

00:01:18.590 --> 00:01:22.400
Then the function is you're simply going to alert,

00:01:22.400 --> 00:01:25.350
the message you were passing.

00:01:27.050 --> 00:01:30.660
This acts in a similar way to a variable.

00:01:30.660 --> 00:01:32.670
Where do we get this message from?

00:01:32.670 --> 00:01:36.675
Well, we put that into the brackets when we the call function.

00:01:36.675 --> 00:01:41.935
AlertMessage. This time, instead of just leaving the brackets empty,

00:01:41.935 --> 00:01:45.280
we're going to pass in a message that we want to alert.

00:01:45.280 --> 00:01:50.030
I am learning Javascript.

00:01:52.640 --> 00:01:55.300
This message is whatever is in here.

00:01:55.300 --> 00:01:58.540
Then we just simply going to alert that message.

00:01:58.540 --> 00:02:00.895
Let's take a look. There is the message,

00:02:00.895 --> 00:02:03.200
I am learning Javascript.

00:02:04.400 --> 00:02:09.160
We can also pass in more than one parameter into the function.

00:02:09.160 --> 00:02:11.755
If we wanted to have a function,

00:02:11.755 --> 00:02:14.600
we just performed a calculation.

00:02:14.600 --> 00:02:19.695
I'll create a new function called multiplyNumbers.

00:02:19.695 --> 00:02:23.774
Then we can pass in two parameters;

00:02:23.774 --> 00:02:28.960
number1 and also number2.

00:02:30.800 --> 00:02:40.870
Then we can alert the calculation of number1 multiply by number2.

00:02:43.490 --> 00:02:45.845
Then just like before,

00:02:45.845 --> 00:02:48.305
when we invoke that function,

00:02:48.305 --> 00:02:51.890
we pass in the two numbers that we want to calculate.

00:02:51.890 --> 00:02:56.190
For example, five and four.

00:02:56.300 --> 00:02:59.540
Now we should get the calculation alerted,

00:02:59.540 --> 00:03:02.380
which is the result of 20.

00:03:02.380 --> 00:03:04.890
Okay, so that's all working.

00:03:04.890 --> 00:03:08.930
I hope that all makes sense and thank you for watching and I hope you now got

00:03:08.930 --> 00:03:13.025
better understanding of how to pass parameters into functions.

00:03:13.025 --> 00:03:14.720
I'll see you in the next video,

00:03:14.720 --> 00:03:18.060
where we'll take a look at JavaScript scope.
