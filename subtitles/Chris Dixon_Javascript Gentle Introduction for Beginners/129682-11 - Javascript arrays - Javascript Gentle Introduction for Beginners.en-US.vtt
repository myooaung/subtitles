WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.400 --> 00:00:03.510
So far in this course,

00:00:03.510 --> 00:00:07.620
we have looked at variables and how they are used to store a value.

00:00:07.620 --> 00:00:10.740
However, if we need to store more than one value,

00:00:10.740 --> 00:00:13.725
we would need to use what is called an Array.

00:00:13.725 --> 00:00:17.700
Arrays can hold multiple values under a single name,

00:00:17.700 --> 00:00:22.815
and we can access these values by their position or their index number.

00:00:22.815 --> 00:00:28.050
Let's go over to our javascript folder and in a javascript-basics section,

00:00:28.050 --> 00:00:29.850
duplicate the last folder.

00:00:29.850 --> 00:00:39.760
This is going to be number 7.arrays and then let's open that folder up.

00:00:45.620 --> 00:00:49.300
Then change the title to Arrays.

00:00:53.000 --> 00:00:56.920
We can just delete this section.

00:00:59.570 --> 00:01:03.770
There's a couple of different ways we can create an Array.

00:01:03.770 --> 00:01:06.545
It starts off in a similar way to variables.

00:01:06.545 --> 00:01:11.585
We use the var keyword and then we assign a name to the Array.

00:01:11.585 --> 00:01:17.660
As an example, I'm going to create an Array for users and then we're going

00:01:17.660 --> 00:01:24.180
to create a new Array and then the brackets just afterwards.

00:01:24.180 --> 00:01:29.855
This creates a new Array called users and we can add different users

00:01:29.855 --> 00:01:35.625
or different values to this Array by using the Array name and then the square brackets.

00:01:35.625 --> 00:01:39.560
The first position on an Array is 0.

00:01:39.560 --> 00:01:43.610
I'm going to set the first position to be equal

00:01:43.610 --> 00:01:48.750
to Chris and then I'm just going to add a couple more,

00:01:48.750 --> 00:01:53.290
so users and then Position 1,

00:01:53.450 --> 00:01:57.040
I'm going to call this user Mike.

00:01:58.430 --> 00:02:03.040
Then users and then a third one,

00:02:04.370 --> 00:02:07.470
we'll insert Paul into there.

00:02:07.470 --> 00:02:10.820
Now our new Array should have three different values,

00:02:10.820 --> 00:02:16.220
so let's just check that's all working with a document.write and

00:02:16.220 --> 00:02:22.695
then inside the brackets we can put the name of the Array which is users.

00:02:22.695 --> 00:02:30.050
Let's take a look. Great, it says our three values that we've inserted into the Array.

00:02:30.050 --> 00:02:33.275
Another way we can create an Array,

00:02:33.275 --> 00:02:35.240
possibly a more popular way,

00:02:35.240 --> 00:02:37.610
is to use the literal method.

00:02:37.610 --> 00:02:42.080
Beginning the same way and instead of using the new keyword,

00:02:42.080 --> 00:02:45.710
we can put the value straight into the square brackets.

00:02:45.710 --> 00:02:52.605
Just as before, we can put the first user and then separate by a comma.

00:02:52.605 --> 00:02:58.320
We can add the rest of our values and just like variables when it

00:02:58.320 --> 00:03:04.450
pull strings between quotations but we're okay to put numbers just as they are.

00:03:06.590 --> 00:03:09.590
Now, you can save that and then refresh and we'll

00:03:09.590 --> 00:03:12.200
get the same three users that we had before.

00:03:12.200 --> 00:03:16.040
As well as displaying the full contents of the Array,

00:03:16.040 --> 00:03:21.690
we can just display individual values from an Array depending on their index position,

00:03:21.690 --> 00:03:23.985
so Chris is Position 0,

00:03:23.985 --> 00:03:26.775
Mike is 1 and Paul is 2.

00:03:26.775 --> 00:03:31.185
If you just go to document.write and then instead of

00:03:31.185 --> 00:03:36.200
displaying all the users between the square brackets we can put the index number.

00:03:36.200 --> 00:03:38.645
If we want it to display Mike,

00:03:38.645 --> 00:03:43.530
that would be 1, and we'll just get

00:03:43.530 --> 00:03:49.750
one value appearing and if we wanted Paul we could change that to 2.

00:03:49.910 --> 00:03:54.740
When dealing with Arrays, we can also use different data types.

00:03:54.740 --> 00:03:57.590
As well as strings, we can put in numbers,

00:03:57.590 --> 00:04:01.055
for example, and that will work exactly the same.

00:04:01.055 --> 00:04:04.070
If we just save that and then refresh,

00:04:04.070 --> 00:04:07.585
we'll get the number appearing at the end of the Array.

00:04:07.585 --> 00:04:13.040
One handy thing to know with Arrays is we can use the length property to find out

00:04:13.040 --> 00:04:20.140
how many values is inside the Array and the way to do that is with the.length property.

00:04:20.140 --> 00:04:23.260
Now it should display the length of the Array,

00:04:23.260 --> 00:04:25.225
so we should get the value of three.

00:04:25.225 --> 00:04:27.745
Let's take a look and refresh.

00:04:27.745 --> 00:04:30.590
There we go, so we get the value of three.

00:04:30.590 --> 00:04:33.890
We'll leave this out and in the next video we'll take a look at

00:04:33.890 --> 00:04:40.310
some really powerful and interesting ways to manipulate Arrays using Array methods.
