1
00:00:00,570 --> 00:00:06,330
In the previous lecture, we have seen custom APIs using the find by methods provided by submitting

2
00:00:06,340 --> 00:00:06,560
data.

3
00:00:07,620 --> 00:00:09,830
But here just one field is involved.

4
00:00:09,910 --> 00:00:12,810
OK, see here we just have e-mail here.

5
00:00:12,810 --> 00:00:14,010
We just don't post name.

6
00:00:14,580 --> 00:00:18,960
Now, let's say we want to get started and it is by first name, last name.

7
00:00:19,440 --> 00:00:23,670
So that is basically antiquity if we talk in context of security.

8
00:00:23,820 --> 00:00:27,300
OK, so we want to help antiquity between two columns.

9
00:00:27,720 --> 00:00:30,270
So let's jump to my second workbench.

10
00:00:30,570 --> 00:00:31,080
So what?

11
00:00:31,080 --> 00:00:34,020
We can try to get that first name.

12
00:00:34,560 --> 00:00:36,120
Simple example equal to John.

13
00:00:36,930 --> 00:00:37,320
OK.

14
00:00:37,830 --> 00:00:38,460
And.

15
00:00:40,450 --> 00:00:42,460
Last name Nicole to Smith.

16
00:00:44,760 --> 00:00:45,510
Rhonda Aguirre.

17
00:00:47,170 --> 00:00:51,780
So we got the story, and it is now this we want to have as you debate.

18
00:00:52,150 --> 00:00:56,800
And indeed, our consumer can pass these two values, OK, as many parameters.

19
00:00:57,340 --> 00:01:00,820
These are the basically values, OK, or first NIMET last name.

20
00:01:01,120 --> 00:01:02,540
So two very parameters.

21
00:01:03,010 --> 00:01:10,240
So let's say this says goodbye using the spring GDP, OK, and spring guitarist will expose the mattress

22
00:01:10,630 --> 00:01:11,280
goodbye.

23
00:01:11,740 --> 00:01:15,100
So let me copy this what we have seen in the previous lecture.

24
00:01:15,970 --> 00:01:19,800
So find by first name and then we want to know antiquity, OK?

25
00:01:19,810 --> 00:01:23,740
And using which filled first name and last name, OK.

26
00:01:24,190 --> 00:01:29,770
So in the camel case, another will last name and we need another method parameter.

27
00:01:31,420 --> 00:01:31,930
Last name.

28
00:01:31,990 --> 00:01:32,500
That's it.

29
00:01:32,920 --> 00:01:35,200
See, these are the things provided by spring.

30
00:01:36,040 --> 00:01:36,400
OK.

31
00:01:36,730 --> 00:01:43,830
And this matter will be used to by spring guitarist, and it will expose this as GDP a bit to query

32
00:01:43,840 --> 00:01:44,440
parameters.

33
00:01:44,860 --> 00:01:47,140
Now let's I don't know what spring would application.

34
00:01:52,810 --> 00:01:55,960
Let me copy this, Metallica and jump to Horsemen.

35
00:01:57,210 --> 00:02:03,390
Here after the search, OK for students, Les Estes, Les Search and then our attorney.

36
00:02:03,630 --> 00:02:08,010
OK, first name, let's Peter or say, for example, John, you know what?

37
00:02:08,010 --> 00:02:08,520
Example?

38
00:02:09,120 --> 00:02:10,320
Another query parameter, right?

39
00:02:10,690 --> 00:02:15,390
Last name the theme OK, you need to provide from here the exact one.

40
00:02:15,390 --> 00:02:17,010
What you have as method parameter.

41
00:02:17,010 --> 00:02:17,250
OK?

42
00:02:17,490 --> 00:02:21,060
The same you need to possess query parameter for your GDP.

43
00:02:22,250 --> 00:02:24,410
Last, Jimmy Goldsmith called AP.

44
00:02:26,210 --> 00:02:29,570
See, this is just branded as OK, VAT ID equal to 18.

45
00:02:30,050 --> 00:02:31,430
Or let's try another one.

46
00:02:32,870 --> 00:02:33,170
OK.

47
00:02:34,580 --> 00:02:41,330
So, for example, first name Peter and last name Mark, OK, let's try with this one last name, mark

48
00:02:41,960 --> 00:02:43,040
and first name.

49
00:02:43,630 --> 00:02:43,880
Peter.

50
00:02:45,020 --> 00:02:47,450
All they see is equal to two.

51
00:02:48,320 --> 00:02:55,490
So this mythology of what we have right in the repository, this is being exposed less goodbye by spring

52
00:02:55,490 --> 00:02:56,060
guitarist.

53
00:02:56,990 --> 00:03:00,140
So there are several methods, OK, which are automatically provided by spring.

54
00:03:01,100 --> 00:03:06,920
You can explore yourself or say, for example, you want to help or Griddy between first name and last

55
00:03:06,920 --> 00:03:07,430
name column.

56
00:03:07,460 --> 00:03:10,460
OK, so let me copy this.

57
00:03:10,970 --> 00:03:12,200
This also you can try.

58
00:03:12,230 --> 00:03:12,530
OK.

59
00:03:12,740 --> 00:03:14,910
And this is also provided by spring ADP.

60
00:03:15,500 --> 00:03:18,170
Just write the or operator between your two fields.

61
00:03:18,170 --> 00:03:19,790
OK, first name and last name.

62
00:03:20,120 --> 00:03:21,320
Here we antiquity.

63
00:03:21,650 --> 00:03:22,310
Here we go.

64
00:03:22,310 --> 00:03:27,620
Or query between which bills first name and last name so we can say between the first name and last

65
00:03:27,620 --> 00:03:29,810
name column that we have in this table.

66
00:03:30,710 --> 00:03:34,460
Let me stop and again start the spring wood application.

67
00:03:35,470 --> 00:03:36,310
Copy this one.

68
00:03:37,710 --> 00:03:38,670
Provider here.

69
00:03:39,000 --> 00:03:41,940
OK, let's hear first name Peter.

70
00:03:42,120 --> 00:03:42,450
OK.

71
00:03:42,720 --> 00:03:47,760
And lastly, Michael Rosemead, so we should get those two entities, OK?

72
00:03:47,790 --> 00:03:48,900
First name Michael Jupiter.

73
00:03:48,900 --> 00:03:50,100
Last name Michael Smith.

74
00:03:50,430 --> 00:03:52,470
Now we help order parameter.

75
00:03:52,470 --> 00:03:52,780
OK?

76
00:03:53,710 --> 00:03:59,800
See it equal to two Peter Mark and another be we is it equal to 18 John Smith.

77
00:04:00,250 --> 00:04:06,220
So here, OK, for the first student, the first name is Magilla or here and Paul.

78
00:04:06,220 --> 00:04:09,010
Last name OK, it is merging with the second string.

79
00:04:09,430 --> 00:04:11,610
So that's why we are getting to student details.

80
00:04:11,620 --> 00:04:13,180
OK, in that Jason response.

81
00:04:13,930 --> 00:04:16,990
This is the collection or list or area, whatever you say.

82
00:04:17,320 --> 00:04:17,710
Why?

83
00:04:18,100 --> 00:04:21,160
Because our written type is least top student.

84
00:04:21,670 --> 00:04:23,980
This is antiquity, and this is our query.

85
00:04:25,060 --> 00:04:30,610
So these are the couple custom areas that we have developed and others, as I said, you can try yourself

86
00:04:30,610 --> 00:04:36,040
OK, fine by methods which are provided by GP so that you can try out yourself.

87
00:04:36,850 --> 00:04:40,960
So this is how you can have the customer base while working with spring that.

88
00:04:41,950 --> 00:04:45,940
That's all for now, and we'll proceed further the next lecture.

89
00:04:46,210 --> 00:04:47,110
Thank you very much.
