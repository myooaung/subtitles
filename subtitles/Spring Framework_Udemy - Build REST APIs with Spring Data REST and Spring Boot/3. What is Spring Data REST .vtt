WEBVTT
1
00:00:00.180 --> 00:00:06.070
In the previous lecture, we have seen this problem statement now in this lecture, we will see how

2
00:00:06.090 --> 00:00:08.460
spring guitarist resolves this problem.

3
00:00:09.510 --> 00:00:15.570
So, for example, we're using Masika database, so we will use the spring data GPA in our spring wood

4
00:00:15.570 --> 00:00:22.080
application and spinning that a GPA provides GPA repository under the GPA repository.

5
00:00:22.230 --> 00:00:28.080
There are a couple of methods, for example, find all using which we can get all the records from the

6
00:00:28.200 --> 00:00:33.930
sequel table find by ID, using which we can get the single record by primary key.

7
00:00:34.110 --> 00:00:37.590
Or, you can say, by unique identifier from the sequel table.

8
00:00:38.570 --> 00:00:45.710
So metal using which we can create and update the record to the sequel table, delete my I.D. using

9
00:00:45.710 --> 00:00:48.350
which we can delete the record from the sequel table.

10
00:00:49.220 --> 00:00:55.100
So all these methods are provided by a repository so that we don't need to write native sequel committees

11
00:00:55.100 --> 00:00:56.660
in our Springwood application.

12
00:00:57.110 --> 00:01:00.470
There are other methods as well, but I am not listing down all over here.

13
00:01:00.500 --> 00:01:05.990
OK, so the purpose is we don't need to write the IT equal queries if we are using these methods.

14
00:01:06.940 --> 00:01:08.500
Now, look at these matters.

15
00:01:08.860 --> 00:01:12.640
OK, here we are, getting the data we can create and update the data.

16
00:01:12.820 --> 00:01:14.410
And also we can delete the data.

17
00:01:14.860 --> 00:01:21.160
So using these methods, we can perform the crud operations over the sequel table using our springboard

18
00:01:21.160 --> 00:01:21.730
application.

19
00:01:22.360 --> 00:01:24.610
Now here comes spring guitarist.

20
00:01:24.910 --> 00:01:27.010
It takes this a step forward.

21
00:01:27.430 --> 00:01:33.660
So what splinted arrest does is it is using these methods and exposing them as wristbands.

22
00:01:34.450 --> 00:01:37.450
So here using this Bain methods, we are getting the data right.

23
00:01:37.810 --> 00:01:41.860
So spring, that arrest will expose them as it did the big database.

24
00:01:42.640 --> 00:01:46.090
Using the same method, we can create or update the record, right?

25
00:01:46.420 --> 00:01:51.610
So this will be exposed as at the post and will debut by the spring guitarist.

26
00:01:52.150 --> 00:01:54.430
And this will be exposed as a tidbit.

27
00:01:54.430 --> 00:01:55.210
Billy dpa.

28
00:01:56.160 --> 00:01:57.390
Now, look at this one, OK?

29
00:01:57.660 --> 00:02:05.040
These are our crowd operations using a TDB bigot board port in daily debates, and all these labels

30
00:02:05.040 --> 00:02:07.280
will be automatically provided by spring.

31
00:02:07.290 --> 00:02:13.770
The guitarist here, spring guitarist will work with the repository and it will use all these methods

32
00:02:14.040 --> 00:02:16.740
and will expose all these APIs automatically.

33
00:02:17.250 --> 00:02:19.680
Now let's go back to our problem statement.

34
00:02:20.890 --> 00:02:26.200
So if we are using the traditional view right to how the app is, then we need to have the controller

35
00:02:26.200 --> 00:02:27.220
and service layer.

36
00:02:27.610 --> 00:02:33.640
But now if you use the spring guitarist, then we don't need a controller and service layer at all.

37
00:02:34.030 --> 00:02:36.550
And this is the advantage of Spring Day guitarist.

38
00:02:37.060 --> 00:02:42.220
We just need the repository and A.D. glass, and obviously we are having the database right.

39
00:02:42.550 --> 00:02:46.540
And as I said, this repository depends on which database we are using.

40
00:02:46.750 --> 00:02:51.760
If it is cycle database, then there will be a repository if it is MongoDB.

41
00:02:52.000 --> 00:02:54.140
Then there will be spring data, MongoDB.

42
00:02:54.820 --> 00:02:59.050
But the main part is we don't need to have this controller in service layer.

43
00:02:59.230 --> 00:02:59.500
OK.

44
00:02:59.770 --> 00:03:03.400
If you just want to have the APIs, we can go with the spring data.

45
00:03:03.400 --> 00:03:10.540
Rest Spring guitarist will work with the repository and A.D. Glass to how the cloud APIs automatically.

46
00:03:11.320 --> 00:03:16.180
Now you may be thinking, OK, how we can, how that is deployed in our spring wood application without

47
00:03:16.180 --> 00:03:17.800
having the controller in service layer.

48
00:03:18.190 --> 00:03:19.780
Yes, that's possible.

49
00:03:20.020 --> 00:03:22.870
And that is possible only with the spring data rest.

50
00:03:23.170 --> 00:03:24.940
And that's what you will learn in this course.

51
00:03:25.930 --> 00:03:30.700
If you want to know more about Spring Guitarist, then you can check out the official page provided

52
00:03:30.700 --> 00:03:31.540
by spring.

53
00:03:31.840 --> 00:03:33.130
So let's jump to browser.

54
00:03:34.090 --> 00:03:38.920
So this we have already seen that in one of the previous lecture dam projects putting data.

55
00:03:39.340 --> 00:03:41.660
Now here is the sub project spring data.

56
00:03:42.250 --> 00:03:42.970
Just click on it.

57
00:03:44.760 --> 00:03:48.360
You can read out disinformation, what a spring guitarist, OK, now let's come down.

58
00:03:48.630 --> 00:03:55.590
And this is the important part, OK, that as of now, spring guitarist currently supports GPA, MongoDB,

59
00:03:55.830 --> 00:03:59.130
Neo4j, Salat, Cassandra, Gem, Fire.

60
00:04:00.030 --> 00:04:00.600
We note eight.

61
00:04:00.840 --> 00:04:07.230
If we are using the sequel databases, then we use spring data, AGP Spring Data, MongoDB for MongoDB

62
00:04:07.230 --> 00:04:13.350
database, spring data, Neo4j for the Neo4j database and same for this database is.

63
00:04:14.420 --> 00:04:19.520
Now, let's say you are using the spring day to realize that it's not possible to have the spring date

64
00:04:19.520 --> 00:04:22.510
arrest to automatically have the great apes.

65
00:04:22.790 --> 00:04:23.160
Why?

66
00:04:23.420 --> 00:04:27.530
Because spring data doesn't provide support for spring data release.

67
00:04:28.100 --> 00:04:29.420
See, this is clearly mentioned.

68
00:04:29.420 --> 00:04:29.830
What here?

69
00:04:29.840 --> 00:04:32.840
OK, this only supports sequel databases.

70
00:04:33.170 --> 00:04:37.850
MongoDB, Neo4j, Salat, Cassandra and Gem Player.

71
00:04:38.880 --> 00:04:43.890
You can take out this page, OK, because it may be possible that in the future spring, the Tories

72
00:04:43.890 --> 00:04:46.260
will provide the support for other databases.

73
00:04:46.620 --> 00:04:50.250
But for now, it provides support for these databases.

74
00:04:50.490 --> 00:04:56.760
Whatever mentioned what here, so that's all about the spring guitarist and will proceed further in

75
00:04:56.760 --> 00:04:57.600
the next lecture.

76
00:04:57.960 --> 00:04:58.830
Thank you very much.
