WEBVTT
1
00:00:00.330 --> 00:00:06.450
Before we jump to spring guitarist, let us see how we used to develop recipes using spring wood.

2
00:00:06.960 --> 00:00:13.260
So here is the consumer visiting our recipes, so the requests will go to our risk controller that we

3
00:00:13.260 --> 00:00:16.620
have mapping for our apples added to be better than all right.

4
00:00:16.980 --> 00:00:22.290
So from controller, we will call our service layer and from service layer, we will call the repository.

5
00:00:22.650 --> 00:00:23.970
So that will be an entity.

6
00:00:23.980 --> 00:00:29.310
Glass using that repository will interact with the database and will get the data.

7
00:00:29.670 --> 00:00:32.700
At last, we will give the response back to the consumer.

8
00:00:33.360 --> 00:00:36.180
So this is the complete flaw now here.

9
00:00:36.300 --> 00:00:39.360
This repository depends on which database we are using.

10
00:00:39.720 --> 00:00:43.710
Say, for example, we are using any single database, like my single database.

11
00:00:44.020 --> 00:00:47.190
Then there will be a repository provided by sampling data.

12
00:00:48.090 --> 00:00:51.000
If you are using MongoDB, then there will be spring data.

13
00:00:51.000 --> 00:00:51.660
MongoDB.

14
00:00:51.930 --> 00:00:58.230
Likewise, for other databases, now let's say we are providing great APIs using which consumer can

15
00:00:58.230 --> 00:01:02.190
create, update, delete and get the data from the database.

16
00:01:02.910 --> 00:01:04.530
So here is the problem statement.

17
00:01:04.920 --> 00:01:10.770
Even we are just providing the APIs we need to write the in our this controller mapping for our APIs

18
00:01:11.010 --> 00:01:13.620
and also we need to write the code in the service layer.

19
00:01:14.610 --> 00:01:19.740
So this is kind of boilerplate code that we need to write our controller and service layer.

20
00:01:20.070 --> 00:01:26.640
So there comes spring data rest house spring guitarist resolves this problem that it is in the next

21
00:01:26.640 --> 00:01:27.150
lecture.

22
00:01:27.420 --> 00:01:32.230
But for now, you need to keep this problem statement in your mind that we are just providing the basic

23
00:01:32.230 --> 00:01:33.000
crud APIs.

24
00:01:33.270 --> 00:01:37.050
And still, we need to write the code in our controller and service layer.

25
00:01:37.830 --> 00:01:42.120
So that's all for now, and we'll proceed further in the next lecture.

26
00:01:42.690 --> 00:01:43.560
Thank you very much.
