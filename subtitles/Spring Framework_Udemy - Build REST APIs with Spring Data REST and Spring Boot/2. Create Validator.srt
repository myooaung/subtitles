1
00:00:00,300 --> 00:00:05,160
By creating the Sudan, these are the details that we are passing in the rigorous bellowed in the palmtop,

2
00:00:05,340 --> 00:00:05,850
Jason.

3
00:00:06,630 --> 00:00:10,140
Now let's say we want to have validation for first Anfield.

4
00:00:10,680 --> 00:00:16,110
So for example, if consumer provides first name field's value either null or empty, then we want to

5
00:00:16,110 --> 00:00:18,900
throw out proper error message to the consumer.

6
00:00:19,260 --> 00:00:23,750
So this is what we want to achieve in the upcoming lectures here.

7
00:00:23,760 --> 00:00:26,970
The very first thing we need is we need to have the validator.

8
00:00:27,180 --> 00:00:31,200
And for that, we will use the validator interface provided by setting framework.

9
00:00:31,650 --> 00:00:32,470
So let's create.

10
00:00:32,470 --> 00:00:37,800
The validator jumped to his ideas and first thing is we need to have the class that will implement the

11
00:00:38,070 --> 00:00:39,180
validator interface.

12
00:00:40,670 --> 00:00:41,780
So create a new class.

13
00:00:43,580 --> 00:00:46,610
So, for example, validator Olympian.

14
00:00:49,350 --> 00:00:51,600
Mark, this with a configuration.

15
00:00:53,820 --> 00:00:54,810
Let me maximize.

16
00:00:55,320 --> 00:00:57,780
And we need to implement.

17
00:00:59,160 --> 00:01:00,540
Validator interface.

18
00:01:00,810 --> 00:01:06,660
Make sure you select from the steering framework, not from the delegate exhibit, select from the spring

19
00:01:06,660 --> 00:01:07,110
framework.

20
00:01:08,130 --> 00:01:10,230
And we need to right two methods.

21
00:01:11,270 --> 00:01:15,500
Let's come to this matter here, we need to return true instead of false.

22
00:01:15,800 --> 00:01:16,040
OK.

23
00:01:16,850 --> 00:01:17,660
The remove this one.

24
00:01:18,620 --> 00:01:21,320
If you don't return true, then your validation will not work.

25
00:01:21,410 --> 00:01:24,290
OK, so make sure you return through from this matter.

26
00:01:24,690 --> 00:01:26,480
Now let's come to this matter.

27
00:01:27,510 --> 00:01:29,640
Here, the actual validation will take place.

28
00:01:30,150 --> 00:01:32,360
Now this matter has to matter parameters, OK?

29
00:01:32,610 --> 00:01:35,580
One is type of object and another one is errors.

30
00:01:36,420 --> 00:01:41,280
So here we will get the object of over A.D. Class C while creating the student.

31
00:01:41,550 --> 00:01:43,920
These days we are passing right in the parliament of Jason.

32
00:01:44,310 --> 00:01:47,640
So this will be converted to object of our entity class.

33
00:01:47,640 --> 00:01:48,720
That is $200.

34
00:01:48,990 --> 00:01:53,610
Spitting framework will use the Dickson Library right in the background and we will get the object of

35
00:01:53,880 --> 00:01:54,780
student entity class.

36
00:01:55,080 --> 00:01:56,940
So that object will get what here.

37
00:01:57,360 --> 00:01:58,980
Obviously, we need to cast it, OK?

38
00:01:59,370 --> 00:02:03,480
And using this object, we can provide the proper error message to the consumer.

39
00:02:04,020 --> 00:02:09,480
So first thing is, we need to cast this object to a student class, OK, type of student.

40
00:02:10,050 --> 00:02:11,730
So here costed like this.

41
00:02:15,070 --> 00:02:19,120
My bed this is to rent and provide the object imported.

42
00:02:20,600 --> 00:02:22,580
Now, let's head over, well, ED..

43
00:02:23,270 --> 00:02:25,670
So what condition is if?

44
00:02:29,740 --> 00:02:32,260
To get first name is either null.

45
00:02:33,430 --> 00:02:35,020
Or empty, right?

46
00:02:36,270 --> 00:02:43,080
Then we want to throw out error message, but is empty, then using this object, OK, type of errors,

47
00:02:44,010 --> 00:02:46,020
call the meter, reject the value.

48
00:02:47,210 --> 00:02:48,190
Select this one, OK?

49
00:02:48,350 --> 00:02:50,300
With three string parameters.

50
00:02:50,990 --> 00:02:53,300
First is our field that is first name.

51
00:02:54,230 --> 00:02:56,510
Error code, that's fine if we don't provide.

52
00:02:56,930 --> 00:02:59,270
And here is our message to the consumer.

53
00:02:59,690 --> 00:03:02,780
So, for example, name is required.

54
00:03:04,550 --> 00:03:06,920
So now we have created the validator.

55
00:03:07,190 --> 00:03:12,890
Now this validator, we need to register with the spring guitarist so that we will do in the next lecture.

56
00:03:13,430 --> 00:03:17,270
That's all for now, and we'll proceed further in the next lecture.

57
00:03:17,840 --> 00:03:18,680
Thank you very much.
