WEBVTT
1
00:00:00.360 --> 00:00:02.460
Now we are all set with the projection.

2
00:00:02.610 --> 00:00:06.270
So let's run our Springwood application and jump to Bozeman.

3
00:00:07.420 --> 00:00:10.390
This is the EPA we're calling right together, and it is.

4
00:00:10.630 --> 00:00:13.450
And in response, we are getting the collection up student right.

5
00:00:13.690 --> 00:00:16.030
This we have already seen so so-called this EPA.

6
00:00:18.000 --> 00:00:22.740
See, here we are getting four films, OK, and that just in response ID, first name, last name in

7
00:00:22.890 --> 00:00:23.340
email.

8
00:00:23.670 --> 00:00:25.470
So this is the fix in a decent response.

9
00:00:25.950 --> 00:00:29.250
Now let's apply the projects and while calling this API.

10
00:00:29.820 --> 00:00:31.710
So how using that query parameter?

11
00:00:31.710 --> 00:00:31.980
OK.

12
00:00:32.370 --> 00:00:36.870
So here we need to have one query parameter that is projection equal to.

13
00:00:37.230 --> 00:00:41.040
Now we need to parse the name of the projects and that we want to apply.

14
00:00:41.430 --> 00:00:49.380
So say, for example, we want to apply this project and poster projects and so provide it or here and

15
00:00:49.500 --> 00:00:50.330
called API.

16
00:00:51.310 --> 00:00:56.730
See, now we are getting only two fields, OK in the decent response, which to add an email.

17
00:00:56.730 --> 00:00:57.030
OK?

18
00:00:57.300 --> 00:00:58.680
And that's what we provided.

19
00:00:58.680 --> 00:01:03.270
OK, inside our projects and see, this is applicable for every student.

20
00:01:03.270 --> 00:01:08.430
OK, inside the collection here as well, OK, for all the students inside the collection.

21
00:01:08.940 --> 00:01:14.880
We are getting only two builds in the JSON response, which do it in email idea of the student.

22
00:01:15.780 --> 00:01:19.950
Now let's play another projection and that is second projects.

23
00:01:19.950 --> 00:01:21.900
And right, so call this EPA.

24
00:01:22.650 --> 00:01:29.010
See, now we are getting two builds in that Jason response 18+ name, and again, this is applicable

25
00:01:29.010 --> 00:01:30.130
for all the records.

26
00:01:30.150 --> 00:01:30.420
OK.

27
00:01:30.570 --> 00:01:33.500
Inside the collection and this is the two pools.

28
00:01:33.510 --> 00:01:38.730
OK, we have insider second projects an idea first name of the student.

29
00:01:39.840 --> 00:01:44.130
So this is all you need to do, OK, if you want to have the project, then while calling the API,

30
00:01:44.610 --> 00:01:50.100
use the very parameter projection and past the name of the project, then called API.

31
00:01:50.190 --> 00:01:50.730
That's it.

32
00:01:51.690 --> 00:01:56.760
So this kind of project sense you can have and this project since you can provide to your consumers.

33
00:01:57.120 --> 00:02:02.100
And as per the requirements, they can use this project sons while calling the EPA.

34
00:02:03.250 --> 00:02:08.610
See, you can use these projections while calling other databases will look for the student table.

35
00:02:08.990 --> 00:02:11.520
Simple example we are getting those to run by.

36
00:02:12.270 --> 00:02:14.340
Simple example that ID equal to two.

37
00:02:14.970 --> 00:02:16.140
This is how we pass, right?

38
00:02:16.140 --> 00:02:21.320
While working with the spring guitarist and apply the second projection called API.

39
00:02:21.690 --> 00:02:23.390
We are getting the single string details.

40
00:02:23.400 --> 00:02:25.400
OK, see I.D. and first name.

41
00:02:25.930 --> 00:02:28.080
Now use the first projection.

42
00:02:29.120 --> 00:02:33.620
Called EPA now we are getting it in email of this, why?

43
00:02:33.950 --> 00:02:36.470
Because we have this first project set in place.

44
00:02:37.480 --> 00:02:43.570
So this is how you can help projects and while working with spring data rest, that's all for now,

45
00:02:43.750 --> 00:02:46.150
and we'll proceed further in the next lecture.

46
00:02:46.690 --> 00:02:47.560
Thank you very much.
