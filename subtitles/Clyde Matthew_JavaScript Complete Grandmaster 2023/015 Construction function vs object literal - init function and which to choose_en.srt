1
00:00:00,240 --> 00:00:04,440
It's clear that with the object literal syntax, you don't have access to a constructor.

2
00:00:04,470 --> 00:00:09,420
Remember, with the constructor function, we could actually pass through parameters into their constructor

3
00:00:09,420 --> 00:00:11,730
and set up an object the way we want to.

4
00:00:11,760 --> 00:00:15,300
So if you want to show you what that means, let's have a look, let's say.

5
00:00:16,520 --> 00:00:17,240
With A.

6
00:00:19,200 --> 00:00:21,330
Constructor function, we can.

7
00:00:22,360 --> 00:00:24,580
Construct our object.

8
00:00:25,630 --> 00:00:28,660
With parameters, we asked.

9
00:00:30,830 --> 00:00:31,340
Into it.

10
00:00:32,460 --> 00:00:38,080
Let me give you an example that say, we've got an object, and let's just call it website Euro.

11
00:00:39,770 --> 00:00:43,130
And we pass in our bureau of the website.

12
00:00:44,470 --> 00:00:49,170
We say this euro equals the euro, we've passed into it, and let's say we want to create a method,

13
00:00:49,190 --> 00:00:50,560
we want to show the euro.

14
00:00:55,970 --> 00:01:01,250
And all it does is it just console logs this year are all very simple.

15
00:01:02,030 --> 00:01:02,600
Nothing.

16
00:01:04,510 --> 00:01:05,680
Nothing too complicated.

17
00:01:06,700 --> 00:01:11,200
Now we've defined our object, what's the second step when using the constructor function?

18
00:01:12,010 --> 00:01:12,520
It's right.

19
00:01:12,520 --> 00:01:14,470
We need to call it with the new keyword.

20
00:01:15,460 --> 00:01:22,210
So let's define a variable, and it's cool that my website and it's just say that's a new website and

21
00:01:22,210 --> 00:01:27,160
it's passing the URL and say, this is my website dot com.

22
00:01:28,150 --> 00:01:30,850
And we've done we've literally constructed this whole function.

23
00:01:31,240 --> 00:01:36,580
We've got a method that can now call this new website, and the constructor function allows us to pass

24
00:01:36,580 --> 00:01:37,380
variables as well.

25
00:01:37,630 --> 00:01:39,190
If we go to my website.

26
00:01:40,370 --> 00:01:43,730
And we go show you all this should console.

27
00:01:44,330 --> 00:01:46,310
This is my website dot com to the screen.

28
00:01:46,550 --> 00:01:47,570
Let need just start quicker.

29
00:01:49,880 --> 00:01:52,100
And there you have it now with an object literal.

30
00:01:52,490 --> 00:01:54,560
We don't have this amount of flexibility.

31
00:01:55,040 --> 00:02:00,680
So what people tend to do to work around it is that you have to blend in it to function and you don't

32
00:02:00,680 --> 00:02:04,610
have to call it in it, but it's just convention in the programming JavaScript.

33
00:02:04,940 --> 00:02:05,810
Let me show you what I mean.

34
00:02:05,810 --> 00:02:07,160
So how would we create this?

35
00:02:07,220 --> 00:02:10,160
Well, maybe you can even give it a bit of a think before I show you the answer.

36
00:02:10,430 --> 00:02:13,580
But how would you create the same set up with an object?

37
00:02:13,580 --> 00:02:14,810
Literal syntax way?

38
00:02:16,070 --> 00:02:20,270
You got to be a bit creative because you're going to have to create a function that you can call and

39
00:02:20,270 --> 00:02:23,120
passing the perimeter three to one.

40
00:02:23,150 --> 00:02:23,660
Let me show you.

41
00:02:24,170 --> 00:02:25,100
Let's look at this now.

42
00:02:25,100 --> 00:02:30,170
So with a object literal, you are unable to have a.

43
00:02:32,120 --> 00:02:32,570
I'm struck.

44
00:02:34,440 --> 00:02:37,770
Which means you are unable.

45
00:02:38,930 --> 00:02:40,190
To initialize.

46
00:02:43,370 --> 00:02:43,790
Your.

47
00:02:44,880 --> 00:02:45,510
Object.

48
00:02:46,520 --> 00:02:52,560
Unless and this is important, unless you add your own innate function.

49
00:02:53,240 --> 00:02:54,380
And this is what I'm going to go through now.

50
00:02:54,410 --> 00:02:55,220
So how do we do this?

51
00:02:55,490 --> 00:02:57,050
Well, let's start creating this object.

52
00:02:57,740 --> 00:02:59,000
So lit websites.

53
00:03:00,610 --> 00:03:03,610
Equals it's created in it function.

54
00:03:05,260 --> 00:03:11,050
This function takes a parameter, and you guessed it, takes a URL, and then all we wanted to do is

55
00:03:11,050 --> 00:03:14,860
we wanted to set this objects euro to the URL.

56
00:03:15,160 --> 00:03:17,260
Halston's seems weird.

57
00:03:18,250 --> 00:03:23,290
But this is a way to get around the whole constructor, passing in variables and initializing your object

58
00:03:23,290 --> 00:03:24,190
when you created.

59
00:03:24,370 --> 00:03:28,390
Remember, with object controls, we've got a separate each key value pair with a comment.

60
00:03:28,690 --> 00:03:31,300
And the second property we want on this is actually a method.

61
00:03:32,270 --> 00:03:34,820
We want the same method as last time show you are on.

62
00:03:35,330 --> 00:03:39,200
And that is just a function where we console log.

63
00:03:40,500 --> 00:03:41,700
This year on.

64
00:03:43,340 --> 00:03:44,150
So there you have it.

65
00:03:44,180 --> 00:03:47,390
We've just created an object with a built in a day function.

66
00:03:47,900 --> 00:03:52,040
And this is getting quite complicated, so don't worry if you're not fully understanding it, but you

67
00:03:52,040 --> 00:03:52,910
will, you'll get it.

68
00:03:52,940 --> 00:03:54,680
So now how do we use this now?

69
00:03:54,710 --> 00:04:01,700
Well, we can access that in its function so we can go website and we can access the init function and

70
00:04:01,700 --> 00:04:05,180
have our own our custom your old dot com.

71
00:04:06,910 --> 00:04:08,740
So now we've run that function.

72
00:04:09,010 --> 00:04:12,930
We sit this euro equal to our customers.

73
00:04:13,660 --> 00:04:15,010
So when we admitted.

74
00:04:16,510 --> 00:04:17,610
Show your.

75
00:04:19,899 --> 00:04:23,260
It's done our own custom URL gets console.log to the screen.

76
00:04:23,920 --> 00:04:28,600
But you can see it's not as intuitive using the constructor function, which is why you must use the

77
00:04:28,600 --> 00:04:29,440
constructor function.

78
00:04:29,440 --> 00:04:33,460
If you're going to be passing in a lot of parameters and you've got a lot of built in methods and complicated

79
00:04:33,460 --> 00:04:34,330
things within your object.

80
00:04:34,450 --> 00:04:40,570
It's better to use that constructor function, but if you want to create a simple object, the few property

81
00:04:40,600 --> 00:04:45,790
developers that is perfectly fine to use object literal syntax you must just use whatever you want to

82
00:04:45,790 --> 00:04:46,720
use is what I'm getting.

83
00:04:46,720 --> 00:04:47,590
It doesn't matter.

84
00:04:47,620 --> 00:04:50,830
Remember, there's no one right way to do something.

85
00:04:50,980 --> 00:04:56,530
I hope this has been informative, but now we still have two other ways we can create an object in the

86
00:04:56,530 --> 00:04:56,720
sky.

87
00:04:56,800 --> 00:04:57,430
A look at them now.

