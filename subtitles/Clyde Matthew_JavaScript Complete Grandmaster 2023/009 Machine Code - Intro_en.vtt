WEBVTT
1
00:00:02.710 --> 00:00:08.770
So I'm sure you familiar with the fact that computers can't actually understand words. They deal with

2
00:00:08.770 --> 00:00:12.550
numbers, ones and zeros, electrical inputs.

3
00:00:13.790 --> 00:00:19.970
And programs stored on the computer are stored as sequences of binary numbers, and these numbers represent

4
00:00:19.970 --> 00:00:22.370
instructions, and we already know instructions are commands.

5
00:00:22.910 --> 00:00:31.100
Same thing. And these raw numbers, this raw state of instructions is known as machine code, and this

6
00:00:31.100 --> 00:00:33.080
is true for all programming languages.

7
00:00:33.920 --> 00:00:40.700
So the question is, and you know, I kind of alluded to it last lecture is, why don't we all just write

8
00:00:40.700 --> 00:00:43.690
machine code? Well, for a few reasons. 

9
00:00:43.700 --> 00:00:50.240
One, it's just about impossible. Its numerical operations, tiny instructions that work on the smallest

10
00:00:50.240 --> 00:00:52.130
pieces of memory inside your computer.

11
00:00:52.790 --> 00:00:56.750
So even if you could write it, it's basically unreadable to anyone else.

12
00:00:57.470 --> 00:01:03.440
And to top it off, the cherry on the top, is that machine code works at the level of the CPU.

13
00:01:03.710 --> 00:01:08.270
So it just means you're going to have to learn different types of machine code for different models of

14
00:01:08.270 --> 00:01:08.900
CPU.

15
00:01:10.060 --> 00:01:15.550
And just before we move on, to appease those of you who are curious, what does machine code look like?

16
00:01:15.580 --> 00:01:18.640
Well, when I say it is zeros and ones, I literally mean zero

17
00:01:18.640 --> 00:01:22.390
and ones. I mean, here's an example of what machine code looks like.

18
00:01:22.390 --> 00:01:24.910
And for a computer, this means something.

19
00:01:25.810 --> 00:01:27.880
But before we jump the gun, let's continue.

