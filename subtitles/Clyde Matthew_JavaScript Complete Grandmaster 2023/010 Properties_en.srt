1
00:00:00,650 --> 00:00:09,350
Let's now talk about properties, because JavaScript objects and primitive data types - they both have properties

2
00:00:09,350 --> 00:00:15,680
attached to them. And by properties I just mean extra functionality that you and I can use to enhance

3
00:00:15,950 --> 00:00:17,150
whatever we want to get done.

4
00:00:18,410 --> 00:00:22,160
So, for example, almost all JavaScript values have properties.

5
00:00:23,340 --> 00:00:30,870
Well, what do I mean? Strings have properties such as length, trim(), indexOf(), and we're going to get into examples

6
00:00:30,870 --> 00:00:37,770
of this through the course. Numbers have properties, toString(), toFixed(), toPrecision().  

7
00:00:39,360 --> 00:00:46,080
But not everything has properties. Exceptions I can think of is null and undefined. Null and undefined

8
00:00:46,080 --> 00:00:47,520
have no properties.

9
00:00:48,300 --> 00:00:50,600
Now the question you probably are asking is "cool

10
00:00:50,610 --> 00:00:55,350
I know there are properties on strings and numbers and objects, but how do I access these properties?

11
00:00:55,650 --> 00:01:00,870
What do I do, what do I type in order to get these properties so I can use them?". Well, there are two main ways

12
00:01:00,870 --> 00:01:01,610
you can do that.

13
00:01:02,340 --> 00:01:09,720
The one is by using the dot notation, and the other one is by using the square brackets notation.

14
00:01:10,830 --> 00:01:13,650
They can both achieve exactly the same thing.

15
00:01:13,890 --> 00:01:15,570
The dot is just a lot more popular.

16
00:01:16,230 --> 00:01:17,780
So let me give you an example.

17
00:01:17,790 --> 00:01:23,640
So if you have a value and you're wanting to get a property called X, all you have to do is type 

18
00:01:24,210 --> 00:01:25,110
value.x

19
00:01:25,830 --> 00:01:27,180
And what about the square brackets?

20
00:01:27,360 --> 00:01:33,870
Well, you can just type value[x], and both of these different

21
00:01:33,870 --> 00:01:34,410
ways

22
00:01:34,860 --> 00:01:38,070
will access a property called X on that value.

23
00:01:39,300 --> 00:01:44,190
The word after the dot is the actual name of the property., in this case

24
00:01:44,190 --> 00:01:44,550
X.

25
00:01:45,980 --> 00:01:47,630
And it's the same thing with square brackets.

26
00:01:48,290 --> 00:01:54,380
It's an expression that is evaluated to get the property name, and the property name in this case is

27
00:01:54,380 --> 00:01:54,720
X.

28
00:01:56,430 --> 00:02:01,860
Strings and properties, remember, I mentioned that we've got certain properties that we can access

29
00:02:01,860 --> 00:02:05,910
on every single value, not every single value, most values.

30
00:02:06,540 --> 00:02:07,710
Well, let me give you an example.

31
00:02:08,250 --> 00:02:13,710
So let's say we've got name equals Tommy Wally.

32
00:02:14,880 --> 00:02:16,500
What are some properties we can access?

33
00:02:18,160 --> 00:02:19,660
Well, just so we can see it

34
00:02:19,880 --> 00:02:23,290
lets type it to the page itself.

35
00:02:24,160 --> 00:02:27,970
And let's go name, and remember how I said we can access properties?

36
00:02:29,230 --> 00:02:30,520
Do you remember how we could do that?

37
00:02:31,630 --> 00:02:34,420
Well, one is through the dot notation.

38
00:02:35,820 --> 00:02:40,830
In JavaScript there are many properties. One of them is toUpperCase().

39
00:02:45,470 --> 00:02:46,940
It literally puts it all in caps for you. 

40
00:02:47,930 --> 00:02:53,900
This is a JavaScript function. We're executing JavaScript right now, how cool is this! What about if we wanted to 

41
00:02:53,900 --> 00:02:57,770
the length property on Tommy Wally.

42
00:02:58,640 --> 00:03:00,410
You want to know how many characters are there?

43
00:03:00,890 --> 00:03:02,870
Well, we can use length.

44
00:03:05,240 --> 00:03:08,160
How cool is this! So you can see how easy it is to access properties.

45
00:03:08,180 --> 00:03:10,910
I just wanted to give you a very quick example of how we do it.

