WEBVTT
1
00:00:00.580 --> 00:00:06.280
We saw kind of what a low level language was. Now as we move away from the CPU, and we go higher up the

2
00:00:06.280 --> 00:00:06.640
curve,

3
00:00:06.820 --> 00:00:11.620
we get into what's known as a "higher level language" and with high level languages, you tend to worry

4
00:00:11.620 --> 00:00:13.570
less about the actual hardware.

5
00:00:13.810 --> 00:00:18.760
And yes, I understand you get a whole lot of people out there that say "Listen, although it's easier

6
00:00:18.760 --> 00:00:24.820
to write, it can be slower in running because it's not optimized for the CPU at the CPU level."

7
00:00:25.710 --> 00:00:29.040
But I'll be honest with you, I haven't encountered any problems.

8
00:00:29.400 --> 00:00:34.710
And in this day and age, compilers and transpilers are so incredibly powerful, and I'm going to be

9
00:00:34.710 --> 00:00:35.700
telling you what these are.

10
00:00:35.850 --> 00:00:42.900
So don't don't don't worry yet. But these programs that convert JavaScript into machine code are very powerful

11
00:00:42.900 --> 00:00:44.370
and were written by very clever people.

12
00:00:44.370 --> 00:00:49.170
So at the end of the day, high level languages are just a lot more efficient for programmers.

13
00:00:49.560 --> 00:00:54.160
So the question you're probably asking now is "Well, where does JavaScript fit in?

14
00:00:54.180 --> 00:00:56.520
Is it a low level language or a high level language?"

15
00:00:57.240 --> 00:00:58.140
We'll wait for it.

16
00:01:01.570 --> 00:01:07.000
It's a high level language, which is awesome and what makes it so incredibly powerful.

17
00:01:07.720 --> 00:01:13.060
And now as we move on, just bear in mind when we write JavaScript code, we refer to this code as source

18
00:01:13.060 --> 00:01:19.110
code, and the source code is also called a program, and the source code will eventually be translated

19
00:01:19.120 --> 00:01:20.970
into machine code so it can run on a computer.

20
00:01:20.980 --> 00:01:23.050
So we know this, we've been through it.

21
00:01:23.060 --> 00:01:29.780
We know a machine can only understand 1's and naughts. So we know when we writing "text" as JavaScript,

22
00:01:29.800 --> 00:01:32.930
you and I both know, that eventually has to go to zeros and ones.

23
00:01:32.950 --> 00:01:37.690
What I'm trying to get across is that when I'm writing code, its "source code" and when I'm programming

24
00:01:37.690 --> 00:01:40.150
or I'm coding, I'm just meaning the same thing.

25
00:01:40.150 --> 00:01:41.700
I'm just meaning I'm writing code.

26
00:01:41.710 --> 00:01:43.180
I'm writing words.

