WEBVTT
1
00:00:00.180 --> 00:00:01.680
Let's get into variables.

2
00:00:02.670 --> 00:00:10.110
By the end of the section, you should have a very solid understanding of what a variable is. Variables

3
00:00:10.320 --> 00:00:17.580
are kind of like containers in JavaScript. And using variables to store data is the foundation of JavaScript.

4
00:00:17.760 --> 00:00:20.520
It really is. And it's done in three different parts

5
00:00:20.520 --> 00:00:22.830
but we're going to get into those in later lectures. For now

6
00:00:23.730 --> 00:00:28.920
I just want you to understand that a variable is just a container to store values.

7
00:00:29.820 --> 00:00:30.300
That's it.

8
00:00:31.240 --> 00:00:32.080
Let's look at Wally.

9
00:00:32.940 --> 00:00:33.580
Wally Smart.

10
00:00:34.000 --> 00:00:34.720
Remember him?

11
00:00:35.680 --> 00:00:37.510
We already know some information about him.

12
00:00:37.750 --> 00:00:39.070
His name is Wally Smart.

13
00:00:39.250 --> 00:00:41.680
He's only got 34 funds in his account.

14
00:00:42.550 --> 00:00:44.950
He's not logged in, and he's got a few favorites.

15
00:00:45.880 --> 00:00:48.390
How would we go about storing these into variables?

16
00:00:48.400 --> 00:00:49.330
How does this work?

17
00:00:50.290 --> 00:00:55.750
I've already mentioned that taking data and later manipulating that data is the backbone of programming.

18
00:00:56.470 --> 00:01:02.290
All languages use variables and variables allow you to store things and use them later.

19
00:01:02.290 --> 00:01:03.730
That's all the variable is.

20
00:01:04.540 --> 00:01:06.750
So let's take our friend Wally.

21
00:01:07.510 --> 00:01:08.380
These are values.

22
00:01:09.400 --> 00:01:10.390
But how do we store them?

23
00:01:11.340 --> 00:01:12.360
Well, let's look at each one.

24
00:01:13.230 --> 00:01:16.590
Let's create a container, which is just a variable.

25
00:01:18.200 --> 00:01:24.200
And let's name that "name" because we're going to store Wally Smart's name in it. So it's almost like you

26
00:01:24.200 --> 00:01:26.690
taking a container and you labeling that container.

27
00:01:27.760 --> 00:01:31.870
Let's label it "name", and let's put Wally Smart into that container.

28
00:01:32.410 --> 00:01:33.520
Let's set that aside now.

29
00:01:34.980 --> 00:01:36.300
Let's go down the next one on the list.

30
00:01:37.500 --> 00:01:38.550
What about 34?

31
00:01:39.540 --> 00:01:42.780
Well, no problem, we've got an unlimited supply of containers.

32
00:01:43.480 --> 00:01:46.560
Let's call this one "balance" because that's the balance of funds in his account.

33
00:01:46.590 --> 00:01:51.450
We can call it anything we want. And let's store that 34 into that container.

34
00:01:52.970 --> 00:01:55.070
And we keep working our way down the list.

35
00:01:55.370 --> 00:01:57.770
Let's get another container for whether he's logged in or not.

36
00:01:57.800 --> 00:02:01.940
Let's label that "loggedIn", and that store that value in that container.

37
00:02:02.910 --> 00:02:04.140
I hope you are seeing a pattern here.

38
00:02:05.160 --> 00:02:07.020
We're doing the same now for favorites.

39
00:02:07.380 --> 00:02:09.570
We store the favorites in another container.

40
00:02:10.350 --> 00:02:15.480
The important point that I'm sure you've picked up on already is that all of these variables were created

41
00:02:15.480 --> 00:02:16.320
in the same way.

42
00:02:16.980 --> 00:02:20.280
We got a container, we labeled it and we put in the value.

43
00:02:21.240 --> 00:02:25.590
And you can also see that variables can hold different types of data.

44
00:02:26.790 --> 00:02:31.740
Think about a container in your pantry, you can put different types of food in those containers, the

45
00:02:31.740 --> 00:02:32.970
same thing with JavaScript.

46
00:02:33.570 --> 00:02:34.680
We just don't talk food.

47
00:02:34.690 --> 00:02:35.760
We talk value types.

48
00:02:36.970 --> 00:02:44.500
In our example, loggedIn is a boolean, balance is a number, his name is a string, and favorites, well we've

49
00:02:44.500 --> 00:02:45.610
just said that's complex.

50
00:02:45.690 --> 00:02:46.750
It's actually an Array.

51
00:02:47.380 --> 00:02:52.720
And in our programming career and any application you build, you're probably going to have hundreds

52
00:02:52.720 --> 00:02:55.990
and thousands of variables that you create in your code.

53
00:02:56.710 --> 00:03:00.460
That's why it's worthwhile having a whole section on them so you deeply understand them.

54
00:03:01.310 --> 00:03:06.140
Another thing that's interesting here is that all our variables have unique names.

55
00:03:06.860 --> 00:03:12.800
It would be very confusing if "balance" somehow became "name".

56
00:03:13.310 --> 00:03:14.390
Like, that just doesn't make sense. 

57
00:03:15.530 --> 00:03:19.190
And then you start overriding variables and all of that, and it becomes very messy.

58
00:03:20.640 --> 00:03:22.800
Remember, we create variables.

59
00:03:23.340 --> 00:03:29.880
We then put values in them and we can store them, and we should make certain that our variables have

60
00:03:29.880 --> 00:03:30.900
distinct names.

61
00:03:31.710 --> 00:03:32.310
Let's move on.

