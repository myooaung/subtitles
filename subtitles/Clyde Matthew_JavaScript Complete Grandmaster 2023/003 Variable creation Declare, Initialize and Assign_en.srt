1
00:00:00,120 --> 00:00:03,490
Let's look at variables and how we create them in a bit more detail.

2
00:00:03,510 --> 00:00:09,750
Remember in the previous lecture I said that using variables to store data is done in 3 distinct

3
00:00:10,020 --> 00:00:10,590
steps.

4
00:00:11,340 --> 00:00:13,020
Well, let's discuss those steps quickly.

5
00:00:13,020 --> 00:00:16,770
The first step is you have to declare your variable.

6
00:00:17,490 --> 00:00:21,630
And all that means is that the variable is registered in its corresponding scope.

7
00:00:22,560 --> 00:00:26,790
And the scope of a variable is simply where the variable can be used.

8
00:00:27,300 --> 00:00:31,530
Don't stress about scope yet, we're going to be talking about scope in more detail later.

9
00:00:32,710 --> 00:00:35,860
The next step is initialization.

10
00:00:36,310 --> 00:00:38,830
You've got to initialize that variable.

11
00:00:39,130 --> 00:00:42,460
And this usually occurs at the same time the variables declared.

12
00:00:43,270 --> 00:00:46,480
And all this means is that the variable is assigned in  memory.

13
00:00:46,720 --> 00:00:49,630
It's assigned space by the JavaScript engine.

14
00:00:50,380 --> 00:00:55,450
And when you initialize this variable, it takes a value of undefined.

15
00:00:55,510 --> 00:00:56,710
Remember that undefined,

16
00:00:56,890 --> 00:00:58,180
it's a primitive data type.

17
00:00:59,110 --> 00:01:02,560
It takes that value until you assign a value to it.

18
00:01:04,090 --> 00:01:08,530
And here is a practical example of a undefined variable.

19
00:01:09,730 --> 00:01:16,990
Let's say we just make up a variable called animal, but we don't assign a value, meaning we don't have

20
00:01:16,990 --> 00:01:18,100
an equal sign with

21
00:01:19,840 --> 00:01:20,320
a value.

22
00:01:21,560 --> 00:01:25,490
We just gonna declare a variable, this is what we've just done.

23
00:01:27,480 --> 00:01:30,180
And now we go typeof(animal), 

24
00:01:32,540 --> 00:01:33,380
it is undefined.

25
00:01:33,650 --> 00:01:39,100
So we've declared a variable. In the background, the parser has initiated that variable.

26
00:01:39,110 --> 00:01:41,570
It's assigned memory space to the variable.

27
00:01:42,170 --> 00:01:44,690
But at this point in time, it is undefined.

28
00:01:46,620 --> 00:01:52,110
Which brings us to the third step, and that is assigning a value to that variable. And all that, that

29
00:01:52,110 --> 00:01:55,860
means is that you literally put a value into that container.

30
00:01:56,370 --> 00:02:00,660
You tell JavaScript that that variable is to have that value.

31
00:02:01,140 --> 00:02:04,530
We've declared & initialized our variable called animal

32
00:02:04,620 --> 00:02:07,110
in this case, how do we assign it a value?

33
00:02:07,860 --> 00:02:08,370
It's easy.

34
00:02:09,360 --> 00:02:10,650
Let's say our animal, 

35
00:02:10,830 --> 00:02:14,160
we just retype it out, because remember, it's been initialized

36
00:02:14,160 --> 00:02:15,480
so there is memory space.

37
00:02:15,630 --> 00:02:20,220
The parser knows that this is a variable, but let's assign it a value of

38
00:02:21,910 --> 00:02:22,390
warthog.

39
00:02:24,840 --> 00:02:28,620
And now, if we go to typeof(animal), we would expect to see ...

40
00:02:30,370 --> 00:02:33,340
A string, which is what we've got. Hope its making sense.

41
00:02:33,490 --> 00:02:33,970
Let's move on.

