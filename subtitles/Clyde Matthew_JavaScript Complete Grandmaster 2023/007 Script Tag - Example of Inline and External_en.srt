1
00:00:00,060 --> 00:00:06,090
We know we have to insert JavaScript between the script tag and recall, I mentioned that there are two broad

2
00:00:06,090 --> 00:00:10,050
categories of how you can actually execute your JavaScript.

3
00:00:10,410 --> 00:00:14,640
The one is called inline - and that just means you don't have an external file,

4
00:00:14,640 --> 00:00:18,660
you write your JavaScript within the index.html file.

5
00:00:19,680 --> 00:00:21,780
Well, what I mean by inline, what do I mean by that?

6
00:00:22,800 --> 00:00:24,540
Well, let's have a look. Let's say you've got an

7
00:00:24,540 --> 00:00:25,450
HTML document.

8
00:00:26,670 --> 00:00:32,490
Listen, for the sake of simplicity, I'm just going to ignore the opening HTML tags, the header tags

9
00:00:32,490 --> 00:00:33,320
and the body tags.

10
00:00:33,810 --> 00:00:35,430
So let's just get to the meat of HTML.

11
00:00:35,430 --> 00:00:37,860
Say you've got a paragraph called Hello Wally.

12
00:00:38,970 --> 00:00:41,300
And you want to write JavaScript in your HTML.

13
00:00:41,500 --> 00:00:46,890
All you need to do is have your script tags, and let's write a simple JavaScript alert.

14
00:00:47,550 --> 00:00:49,530
This is an alert from JavaScript.

15
00:00:49,620 --> 00:00:51,060
We close the script tag.

16
00:00:51,510 --> 00:00:56,460
That means the end of your JavaScript, and then you can continue writing your normal HTML.

17
00:00:57,180 --> 00:00:58,730
This is inline JavaScript.

18
00:00:58,730 --> 00:00:59,570
That's all it is.

19
00:00:59,580 --> 00:01:01,860
It is literally that simple.

20
00:01:02,550 --> 00:01:04,830
Now, in this case, what do you think would happen?

21
00:01:05,370 --> 00:01:07,530
Because remember, the browser engine

22
00:01:07,950 --> 00:01:11,640
it interprets your code from top to bottom.

23
00:01:12,300 --> 00:01:15,750
So intuitively, you might think you should see on your browser window

24
00:01:15,960 --> 00:01:16,740
Hello, Wally.

25
00:01:17,100 --> 00:01:21,360
And then an alert comes up and then you'll see Hello again, Wally.

26
00:01:21,870 --> 00:01:28,470
Well, you'll get an unexpected result here because the alert is not triggered by any JavaScript event.

27
00:01:28,980 --> 00:01:33,390
So that alert function will fire as soon as the DOM is loaded.

28
00:01:33,390 --> 00:01:36,030
And don't worry about what the DOM is, I'm going to get into this later.

29
00:01:36,030 --> 00:01:42,840
Just think about the DOM as your actual document, your whole web page and all the HTML tags that go

30
00:01:42,840 --> 00:01:43,440
along with it.

31
00:01:43,830 --> 00:01:48,120
That's the one category of how you can execute JavaScript on your page.

32
00:01:48,600 --> 00:01:49,860
What's the second category?

33
00:01:51,160 --> 00:01:59,830
The second category is external JavaScript. And it's all exactly the same, but the only one difference

34
00:01:59,830 --> 00:02:07,240
is you include a source attribute. That source attribute just tells the browser engine where to find

35
00:02:07,570 --> 00:02:08,710
that external file.

36
00:02:09,310 --> 00:02:14,530
And then what's interesting is that external file will have to then write that alert. 

37
00:02:15,160 --> 00:02:19,060
Hope it's making sense, but we're going to see a lot more in depth details coming up.

