WEBVTT
1
00:00:00.480 --> 00:00:05.160
Now with an interpreted language, on the other hand, you don't compile your source code beforehand.

2
00:00:05.910 --> 00:00:11.130
The programmer gives you a copy of that source code and it will be the user's machine,

3
00:00:11.370 --> 00:00:16.410
that means it will be your machine, your computer that will interpret the source code whenever you

4
00:00:16.410 --> 00:00:17.400
want to run the program.

5
00:00:18.640 --> 00:00:23.650
So you can already tell that an interpreter is different from a compiler and the awesome thing with an

6
00:00:23.650 --> 00:00:29.200
interpreter as it does this on the fly. We can think of it as going through your source code line by

7
00:00:29.200 --> 00:00:32.320
line and processing that source code on the fly.

8
00:00:32.950 --> 00:00:35.470
Bish Bash Bosh, Bob's your uncle, all done.

9
00:00:36.220 --> 00:00:42.850
An interpreter doesn't save your source code into a separate machine-code file. So you might be sitting

10
00:00:42.850 --> 00:00:49.210
there going okay, of course, it's all nice and well in theory, but I've never, my machine's never been

11
00:00:49.420 --> 00:00:52.690
used as an interpreter to interpret language sent to me.

12
00:00:53.230 --> 00:00:55.390
And by golly gosh, it actually has.

13
00:00:56.290 --> 00:00:59.110
And let's just take a step back and think about how it actually works.

14
00:00:59.110 --> 00:01:03.970
So when you go and visit a website, OK, that JavaScript gets sent to your machine.

15
00:01:04.540 --> 00:01:04.890
Yes

16
00:01:04.900 --> 00:01:08.830
and you can argue "Listen, it's actually the browser that executes it", but you've installed your browser

17
00:01:08.830 --> 00:01:15.580
on your machine. And this happens on pretty much every single website you visit, including (swoosh) Google.

