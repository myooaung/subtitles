1
00:00:00,210 --> 00:00:01,710
JS inline.

2
00:00:03,490 --> 00:00:07,270
I know you might be getting sick of this for now, but I just want to drive the point home, I want

3
00:00:07,270 --> 00:00:13,540
you to intuitively understand how JavaScript is included in your code, and we know that inline JavaScript

4
00:00:13,540 --> 00:00:19,810
just means that your JavaScript code is been included (or written) directly in your HTML.

5
00:00:20,440 --> 00:00:25,150
So let's set up a basic structure of an HTML website, a web page.

6
00:00:25,360 --> 00:00:27,070
We know we've got to start with "DOCTYPE".

7
00:00:28,420 --> 00:00:30,340
We've got those header tags. 

8
00:00:31,450 --> 00:00:32,590
We've got the body tags.

9
00:00:34,050 --> 00:00:35,730
Let's say we want to write "Hello World".

10
00:00:37,020 --> 00:00:39,570
And, you know, in the head tags, you got a few bits and bobs.

11
00:00:40,350 --> 00:00:44,760
You've often you've got a stylesheet that it (the HTML) references from an external file.

12
00:00:45,210 --> 00:00:49,890
I don't know, say we want to make the paragraph text red.

13
00:00:51,300 --> 00:00:53,230
How do we include inline JavaScript?

14
00:00:53,350 --> 00:00:59,100
The one place you can put it, and you can probably see by the gap in the code there, is within the head

15
00:00:59,490 --> 00:01:00,000
section.

16
00:01:00,180 --> 00:01:07,470
You can literally put your JavaScrip there. That is valid JavaScript code. But that's not the

17
00:01:07,470 --> 00:01:10,230
only place you can put your JavaScript code, lets have another look.

18
00:01:10,530 --> 00:01:12,900
So we set up the basic structure once again.

19
00:01:13,710 --> 00:01:18,180
You write your "Hello World" and within your head tags you've got all the bits and bobs, plus you have your

20
00:01:18,180 --> 00:01:18,870
CSS.

21
00:01:20,550 --> 00:01:24,750
But now we can choose to put our script tag within the body tags.

22
00:01:25,830 --> 00:01:28,470
And again, it's valid JavaScript code.

23
00:01:29,640 --> 00:01:33,060
The point I'm trying to make, is you can choose where to put your JavaScript code.

24
00:01:34,520 --> 00:01:40,850
And there are benefits and pros of putting it in the heads and in the bodies, but I don't get into that

25
00:01:40,850 --> 00:01:41,190
now.

26
00:01:41,210 --> 00:01:42,890
We're going to get into that later in the course.

27
00:01:43,680 --> 00:01:49,280
I just wanted you to get the concept that you can choose as a program where you put that script tag.

28
00:01:51,970 --> 00:01:52,290
Cool.

29
00:01:52,930 --> 00:01:53,440
OK.

30
00:01:54,620 --> 00:01:55,100
Let's go.

31
00:01:55,520 --> 00:01:57,740
Let's let's see how this all fits together.

32
00:01:57,770 --> 00:01:58,730
Let's see how it works.

33
00:01:59,570 --> 00:02:04,330
What I'm going to go through now is I'm just going to show you a very simple example of how we write

34
00:02:04,370 --> 00:02:05,690
JavaScript inline. 

35
00:02:06,200 --> 00:02:11,000
So you can see I've got a very simple template of an HTML page.

36
00:02:11,720 --> 00:02:12,950
How do we include JavaScript?

37
00:02:12,980 --> 00:02:14,900
Well, let's include it in two places.

38
00:02:17,300 --> 00:02:18,840
We actually don't need this link ref. 

39
00:02:19,470 --> 00:02:20,630
We're not styling the page.

40
00:02:21,050 --> 00:02:25,670
So let's now put it in between these head tags. 

41
00:02:25,940 --> 00:02:27,290
Let's run JavaScript.

42
00:02:28,460 --> 00:02:32,450
We've already seen JavaScript has to be inserted between script tags.

43
00:02:34,270 --> 00:02:37,120
And let's issue an alert, "JavaScript

44
00:02:38,740 --> 00:02:41,410
being run in an IDE

45
00:02:43,660 --> 00:02:44,170
inline".

46
00:02:44,950 --> 00:02:46,860
Let's now put it in the body section.

47
00:02:48,190 --> 00:02:48,820
What do we need?

48
00:02:49,390 --> 00:02:49,880
Correct.

49
00:02:49,900 --> 00:02:50,830
We need script tags.

50
00:02:55,720 --> 00:02:59,830
Opening and closing script tags, and what should we do this time?

51
00:03:00,610 --> 00:03:03,850
Well, we know console log. So let's just console.log

52
00:03:06,180 --> 00:03:07,320
JavaScript,

53
00:03:09,430 --> 00:03:11,230
"This JavaScript.

54
00:03:13,250 --> 00:03:15,050
has been executed

55
00:03:16,490 --> 00:03:17,960
after the alert, 

56
00:03:19,630 --> 00:03:21,430
also INLINE".

57
00:03:24,190 --> 00:03:28,690
Before I show you what this looks like in the browser, just understand that when the browser

58
00:03:29,110 --> 00:03:38,530
parses this document, this html page, it that starts at the top, and it goes to the bottom. So this script

59
00:03:39,160 --> 00:03:41,680
will hit first, which is in the head tag.

60
00:03:42,460 --> 00:03:47,890
And because there's no JavaScript event that fires this alert, like "click" or something like that,

61
00:03:48,490 --> 00:03:53,590
when the browser starts rendering this page, it's going to execute that JavaScript straightaway.

62
00:03:53,740 --> 00:03:56,170
So we would expect, I hope you agree,

63
00:03:56,170 --> 00:03:58,270
we would expect to see an alert.

64
00:03:59,350 --> 00:04:04,960
When that alert is finished, we should be able to open the console and see our console message here, if all works well.

65
00:04:04,960 --> 00:04:06,010
Let's have a look.

66
00:04:06,490 --> 00:04:09,880
So here's the Go Live that I was telling you about. Let's

67
00:04:10,450 --> 00:04:14,290
execute this in the browser. And boom, there's the alert:

68
00:04:14,410 --> 00:04:16,480
"JavaScript is being run in an IDE inline"

69
00:04:16,690 --> 00:04:18,519
That's what we wrote, When you click OK, 

70
00:04:18,850 --> 00:04:19,930
we're going to see nothing,

71
00:04:19,930 --> 00:04:24,920
and that's expected because, well, we defined nothing in our HTML.

72
00:04:25,330 --> 00:04:26,560
But if we inspect our page, 

73
00:04:30,530 --> 00:04:31,850
and we click on our Console tab. 

74
00:04:33,700 --> 00:04:34,240
There we go.

75
00:04:36,310 --> 00:04:41,200
"This JavaScript has been executed after the alert, also inline." How cool is that?

