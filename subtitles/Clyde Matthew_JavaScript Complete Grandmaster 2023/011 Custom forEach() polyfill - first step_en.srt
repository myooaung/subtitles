1
00:00:00,640 --> 00:00:06,010
As mentioned, first pot building our poly for is going to have to be to determine whether that callback

2
00:00:06,010 --> 00:00:08,770
function is that is the function.

3
00:00:09,310 --> 00:00:11,380
So let's get into that start building up.

4
00:00:12,490 --> 00:00:16,180
So what I'm going to do here is I'm going to create a new file and I'm just going to call that.

5
00:00:17,320 --> 00:00:22,930
Polyvore and what we want this qualified to do is we want it to be on the prototype of every era, so

6
00:00:22,930 --> 00:00:25,210
we've got to access the right object in JavaScript.

7
00:00:26,130 --> 00:00:30,600
On its prototype, we wanted to define a new function called for each.

8
00:00:30,960 --> 00:00:35,520
Now in this instance, you and I know that our browser need to be, but because I'm doing it this way,

9
00:00:35,520 --> 00:00:39,660
I'm actually going to be overriding the normal functionality for each.

10
00:00:39,960 --> 00:00:43,440
So in effect, we're going to be creating a brand new poly for branding function.

11
00:00:43,860 --> 00:00:46,020
We know that this for each is a method.

12
00:00:47,530 --> 00:00:49,210
And this means it takes two arguments.

13
00:00:49,420 --> 00:00:53,050
The first argument is a callback function in our case, let's just call a callback.

14
00:00:53,060 --> 00:00:54,190
We can call it whatever we want.

15
00:00:54,340 --> 00:00:59,470
And remember, the second argument was, look, we wanted to define this as this is cool.

16
00:00:59,470 --> 00:01:02,320
This this argument will argue this.

17
00:01:05,260 --> 00:01:07,760
And there you have it, this is how we started building our plentiful.

18
00:01:08,170 --> 00:01:13,750
Now the first thing we want to do is we want to check whether the Caldbeck.

19
00:01:15,130 --> 00:01:16,180
Is a function.

20
00:01:17,130 --> 00:01:22,140
And we do this by using Java scripts in both method called Time Off.

21
00:01:22,500 --> 00:01:23,310
It's an operator.

22
00:01:24,060 --> 00:01:26,220
So what we want to do is we want to test if.

23
00:01:27,460 --> 00:01:29,170
Type of the callback.

24
00:01:30,950 --> 00:01:32,960
If that is not a function.

25
00:01:35,300 --> 00:01:36,350
Then what do we want to happen?

26
00:01:36,620 --> 00:01:39,320
Well, we want to stop our code because it has to be a function.

27
00:01:39,500 --> 00:01:43,190
So what we want to do is we want to throw a new type era.

28
00:01:46,460 --> 00:01:52,190
And what we want to do is we want to throw back that call back and we want to say is not a function,

29
00:01:52,460 --> 00:01:56,330
just so the user has some feedback about what it is they did wrong.

30
00:01:58,780 --> 00:02:05,710
And we know it's this doesn't throw type error, the Knockaert can continue, we can continue our code

31
00:02:05,710 --> 00:02:06,160
here.

32
00:02:07,420 --> 00:02:10,780
So there you have it, let's test whether this code works or whether we've done anything wrong.

33
00:02:10,990 --> 00:02:15,070
First thing I can actually spot you haven't even tasted it yet is I should have actually had two equal

34
00:02:15,070 --> 00:02:15,580
songs here.

35
00:02:16,580 --> 00:02:19,310
Some actually wanting it to be of the same time as function.

36
00:02:20,580 --> 00:02:23,730
Let's see if this works, let's hear our console and let's run.

37
00:02:30,220 --> 00:02:34,600
Of course, they haven't actually executed the function for each function.

38
00:02:35,610 --> 00:02:43,470
So what I must do here is let's define a new era lit array equals smoke.

39
00:02:45,260 --> 00:02:45,680
Honey.

40
00:02:47,230 --> 00:02:48,070
And sugar.

41
00:02:48,990 --> 00:02:51,420
And now let's excuse off for each mate that we've just bolt.

42
00:02:52,490 --> 00:02:53,480
For each.

43
00:02:55,890 --> 00:02:59,370
And let's just execute it, let's not pass in a function, what do you think will happen?

44
00:03:00,830 --> 00:03:02,030
Well, let's try and run it.

45
00:03:04,080 --> 00:03:09,450
I'm court type error undefined is not a function, this is exactly the era that we've thrown yet.

46
00:03:09,750 --> 00:03:11,280
That's why we actually throw an error.

47
00:03:12,180 --> 00:03:18,660
I mean, even if you put in something that's not a function like an unknown, let's do console log a,

48
00:03:19,230 --> 00:03:21,270
for example, let's run that.

49
00:03:22,050 --> 00:03:24,000
So we've actually defined already.

50
00:03:24,000 --> 00:03:29,940
Let's refresh the console and run it if we go console.log is not a function.

51
00:03:30,570 --> 00:03:34,980
So this just shows you why we actually throw an ear off because we're getting feedback to the user saying,

52
00:03:34,980 --> 00:03:39,120
Hey, guys, you have to actually pass a function in the for each method.

53
00:03:39,510 --> 00:03:40,470
So let's do this.

54
00:03:40,530 --> 00:03:41,940
Let me show you is what does it mean?

55
00:03:41,970 --> 00:03:43,170
Alright, well, let's throw function.

56
00:03:43,170 --> 00:03:44,250
So let's pass it a function.

57
00:03:45,140 --> 00:03:45,740
There you go.

58
00:03:45,830 --> 00:03:48,230
In this instance, the function is completely empty.

59
00:03:48,500 --> 00:03:50,880
So let's refresh the page here the console.

60
00:03:50,960 --> 00:03:53,170
It's run this function and there you go.

61
00:03:53,170 --> 00:03:57,520
We haven't had an error and we can even test our code by saying call.

62
00:03:57,530 --> 00:04:00,170
If an error hasn't been thrown, let's just go console log.

63
00:04:01,010 --> 00:04:01,610
Yay.

64
00:04:01,790 --> 00:04:03,620
We can continue.

65
00:04:05,180 --> 00:04:06,050
So there you go.

66
00:04:06,440 --> 00:04:07,520
Let's see if this works.

67
00:04:08,770 --> 00:04:14,050
It's run our function and you can see log to the screen as, yay, we can continue.

68
00:04:14,200 --> 00:04:18,190
And this proves that our callback is actually a function.

69
00:04:18,399 --> 00:04:19,060
Awesome, right?

70
00:04:19,089 --> 00:04:21,660
So this is the first part to building our own full.

71
00:04:22,029 --> 00:04:26,200
You can see we're not done by any means because we haven't even got into what the callback function

72
00:04:26,200 --> 00:04:26,760
should do.

73
00:04:27,010 --> 00:04:32,800
And that is it right through our array and then allow us to manipulate and work with the item and the

74
00:04:32,800 --> 00:04:33,250
index.

75
00:04:33,940 --> 00:04:35,260
Let's see how to do that shortly.

