WEBVTT
1
00:00:00.090 --> 00:00:05.490
We noticed a few things happening in the previous example. The first thing that happened that you saw was that

2
00:00:05.760 --> 00:00:12.000
the paragraph tag did not display until all the scripts were finished running.

3
00:00:13.110 --> 00:00:20.490
And this brings us to a very interesting, interesting concept and that is first things first, when

4
00:00:20.490 --> 00:00:26.550
a script is referenced in an HTML page, the browser does two things for you.

5
00:00:26.880 --> 00:00:34.260
One, it retrieves and loads the scripts content, and this is non-blocking.

6
00:00:35.040 --> 00:00:37.230
We're going to get into a bit more detail on this later.

7
00:00:37.950 --> 00:00:41.520
Non-blocking just means that everything can still happen in the background.

8
00:00:41.820 --> 00:00:42.600
Nothing's blocked.

9
00:00:43.790 --> 00:00:46.820
That's the first thing it does - it retrieves that script content.

10
00:00:46.880 --> 00:00:54.290
The second thing is it (the browser) does, is it runs that script content. And this is blocking. 

11
00:00:54.920 --> 00:00:56.190
So what's the conclusion?

12
00:00:56.210 --> 00:00:57.140
What did we see?

13
00:00:57.410 --> 00:01:03.170
Well, when we opened the HTML in the browser, we noticed the delay of the page load.

14
00:01:03.770 --> 00:01:06.800
The page went blank before it rendered correctly.

15
00:01:07.160 --> 00:01:13.070
And this is due to the fact that the running of the scripts is blocking and it blocks the DOM from rendering.

16
00:01:14.000 --> 00:01:20.780
What this means is that when a script is running, the browser is not able to fetch & display the DOM element

17
00:01:21.200 --> 00:01:26.210
in our case, we saw that it was our document.getElementByID.

18
00:01:27.380 --> 00:01:28.340
Order matters.

19
00:01:29.000 --> 00:01:34.640
That's why we saw null. This is because scripts are run before the DOM has rendered.

20
00:01:36.190 --> 00:01:39.040
Scripts themselves are also blocking each other.

21
00:01:39.730 --> 00:01:42.310
They run in the order specified in the HTML.

22
00:01:42.730 --> 00:01:43.870
It kind of makes sense, right?

