1
00:00:00,240 --> 00:00:06,270
Looping through data to extract it, it's so important when it comes to programming, and I want to

2
00:00:06,720 --> 00:00:11,220
really I want to stress this, so I'm going to show you two examples the one I'm just going to loop

3
00:00:11,220 --> 00:00:13,440
through arrays show you the different methods.

4
00:00:13,950 --> 00:00:19,410
And then as we've discussed in the lecture, I want to actually create an object with with properties

5
00:00:19,650 --> 00:00:21,810
named Ellipse, and I want to look through that.

6
00:00:22,740 --> 00:00:26,430
So without further ado, let's get into it.

7
00:00:26,730 --> 00:00:32,820
I'm going to start cutting a bit more complicated functions and calls and loops because we've come a

8
00:00:32,820 --> 00:00:33,270
long way.

9
00:00:33,660 --> 00:00:39,120
And I think you're getting really familiar with the traditional easy objects, arrays and all of that.

10
00:00:39,210 --> 00:00:40,470
So let's create a function.

11
00:00:40,470 --> 00:00:46,350
Let's say we've got a whole list of members on our site and we want to loop through each member and

12
00:00:46,350 --> 00:00:48,000
give them a welcome message.

13
00:00:48,660 --> 00:00:49,380
How do we do that?

14
00:00:49,410 --> 00:00:53,250
Well, firstly, let's create a function and we're going to get into functions in a completely whole

15
00:00:53,250 --> 00:00:53,820
new section.

16
00:00:54,240 --> 00:00:55,740
So don't worry about syntax yet.

17
00:00:56,250 --> 00:00:57,510
Just understand the concept.

18
00:00:58,450 --> 00:01:03,610
Let's define a function called high, and it said it function takes in the person's name.

19
00:01:04,660 --> 00:01:07,660
In all this function, does it returns our welcome message?

20
00:01:08,410 --> 00:01:12,490
Welcome, and we using template literals here and we just going to cancel out their name.

21
00:01:15,370 --> 00:01:16,150
So next.

22
00:01:17,100 --> 00:01:19,830
Let's find our members.

23
00:01:21,880 --> 00:01:25,520
And let's say we've got a whole member list.

24
00:01:28,290 --> 00:01:31,710
And we're just starting out, so we've only got two members, Tom and Jerry.

25
00:01:33,090 --> 00:01:38,580
But then let's say we get new users if, say, we get new users.

26
00:01:40,120 --> 00:01:40,480
John?

27
00:01:42,180 --> 00:01:44,000
And Wally.

28
00:01:45,480 --> 00:01:48,000
So member lists its push.

29
00:01:49,850 --> 00:01:50,240
John?

30
00:01:53,980 --> 00:01:56,320
And as to the sad and push Wally.

31
00:01:57,660 --> 00:02:00,900
Now, our member lists should contain four members.

32
00:02:02,240 --> 00:02:02,840
And it does.

33
00:02:03,260 --> 00:02:06,020
And we wanted to greet all members.

34
00:02:07,660 --> 00:02:08,889
How we go about doing this?

35
00:02:10,070 --> 00:02:14,120
We'll remember how I keep stressing these never one right way to do something, and there's lots of

36
00:02:14,120 --> 00:02:16,400
ways to loop through this array.

37
00:02:16,640 --> 00:02:19,370
Just look at the traditional old school ways first.

38
00:02:20,360 --> 00:02:25,820
So the traditional for loop and something worth remembering is that every four loop has curly braces

39
00:02:25,820 --> 00:02:31,340
at the end, and it's kind of like whatever we want to do and code goes in between these curly braces.

40
00:02:32,300 --> 00:02:34,550
What differs is what's in the parentheses here.

41
00:02:34,760 --> 00:02:38,690
So for the traditional so let's start off here with traditional.

42
00:02:39,750 --> 00:02:42,140
Old School for Loop.

43
00:02:43,200 --> 00:02:48,510
We have to define a variable and that variable iterates by one each time the loop completes.

44
00:02:49,080 --> 00:02:52,470
So we can call this anything, but traditionally people like to call it I.

45
00:02:53,220 --> 00:02:55,470
So we say it, I equal zero.

46
00:02:55,470 --> 00:02:57,000
So I'm going to start at zero.

47
00:02:57,870 --> 00:03:04,530
And then the second parameter in this for loop sees under what condition will the loop continue to loop?

48
00:03:04,800 --> 00:03:06,480
Because eventually the loop is going to have to stop.

49
00:03:06,810 --> 00:03:08,550
Otherwise, it's going to be an infinite loop.

50
00:03:09,300 --> 00:03:12,390
So let's say here, we only want this to iterate how many times.

51
00:03:13,500 --> 00:03:14,040
That's right.

52
00:03:14,490 --> 00:03:16,500
Only four times because they are full members, right?

53
00:03:17,010 --> 00:03:19,530
So we need I to be less than.

54
00:03:20,860 --> 00:03:23,500
The member must link.

55
00:03:25,170 --> 00:03:29,100
And in the third parameter is what happens to AI after the first iteration.

56
00:03:29,400 --> 00:03:31,620
And we want AI to increase by one.

57
00:03:32,100 --> 00:03:35,670
So when we start I0 does the first leap.

58
00:03:36,300 --> 00:03:40,320
When it finishes, that is going to be increased by one and then this condition is going to be tested.

59
00:03:41,670 --> 00:03:42,580
I hope it makes sense.

60
00:03:43,750 --> 00:03:50,270
And now I wanted to find a greeting, a particularly greeting for each member, let's say late greeting

61
00:03:50,270 --> 00:03:50,930
equals.

62
00:03:51,740 --> 00:03:55,970
This is where we want to return the high function and remember the high function.

63
00:03:56,120 --> 00:03:58,970
One of its input parameters was the name of the individual.

64
00:04:00,520 --> 00:04:03,040
What is the name of this individual on the first loop?

65
00:04:03,310 --> 00:04:08,560
Well, it's going to be our members list and remember to access properties and array.

66
00:04:08,560 --> 00:04:14,890
We can use the square brackets and here I zero on the first iteration, I'll be zero network, two in

67
00:04:14,890 --> 00:04:15,550
the name Tom.

68
00:04:16,540 --> 00:04:19,660
And then all we wanting to do is console.log pretty.

69
00:04:37,910 --> 00:04:38,720
So there you have it.

70
00:04:38,750 --> 00:04:39,420
Welcome, Tom.

71
00:04:39,440 --> 00:04:40,010
Welcome, Jerry.

72
00:04:40,010 --> 00:04:40,600
Welcome, John.

73
00:04:40,760 --> 00:04:41,000
Welcome.

74
00:04:42,350 --> 00:04:43,260
How cool is that?

75
00:04:43,280 --> 00:04:44,360
I hope you understand what it is.

76
00:04:44,360 --> 00:04:47,120
We did, but again, this is an old school for loop.

77
00:04:47,140 --> 00:04:48,350
I'll show you a better way to do it.

78
00:04:48,470 --> 00:04:53,150
But before I show you the best way to do it, you me show you another old school where it's called the

79
00:04:53,150 --> 00:04:54,410
four in loop.

80
00:04:54,830 --> 00:05:00,440
This is also old school way the for in loop.

81
00:05:02,840 --> 00:05:08,750
Again, we had the fall, and then we've got these curly brackets, and now all we have to do is we

82
00:05:08,750 --> 00:05:13,190
have tickets for concert name in the list.

83
00:05:15,280 --> 00:05:20,130
So what this and is doing is on every loop, it's going to get each element in our right.

84
00:05:20,620 --> 00:05:24,250
We've called out element name because we know their names Tom, Jerry, John, Wally.

85
00:05:24,700 --> 00:05:29,350
So it's going to grab that name in our object members, in our right.

86
00:05:29,590 --> 00:05:34,630
And then traditionally, what this does is that this actually accesses all the prototype's properties

87
00:05:34,630 --> 00:05:39,100
as well, so it can get very cumbersome and sometimes it accesses things it shouldn't.

88
00:05:39,220 --> 00:05:44,440
And for this reason, you often include an if statement within this fall in Newark, and you just have

89
00:05:44,440 --> 00:05:46,360
to say if member list.

90
00:05:47,610 --> 00:05:56,400
And there's a built in property called his own property, and all we've got to say is if this certain

91
00:05:56,400 --> 00:05:59,790
array has its own property and that is outside of any prototypes.

92
00:06:01,000 --> 00:06:01,510
Then.

93
00:06:03,060 --> 00:06:04,440
We want to execute this code.

94
00:06:05,070 --> 00:06:08,660
So now we've passed this if statement, we in the bloc, what do we right?

95
00:06:08,920 --> 00:06:09,900
Well, the same thing.

96
00:06:10,500 --> 00:06:17,790
We want our greeting to execute that high function, and we're going to be passing in each name of the

97
00:06:17,790 --> 00:06:18,180
member.

98
00:06:18,360 --> 00:06:23,250
So the member list and yeah, we haven't called it, I like we did above in that old school followed.

99
00:06:24,060 --> 00:06:26,130
Yeah, we've defined each iteration.

100
00:06:26,130 --> 00:06:28,200
We're going to have the name, it's going to be called name.

101
00:06:28,740 --> 00:06:29,790
So we pass and then.

102
00:06:31,020 --> 00:06:35,100
Now we've got our greeting and all we want to do is console log.

103
00:06:36,600 --> 00:06:37,260
This greeting.

104
00:06:41,820 --> 00:06:42,870
And Bob's your uncle.

105
00:06:42,900 --> 00:06:43,350
There we go.

106
00:06:43,380 --> 00:06:43,960
Welcome, Tom.

107
00:06:43,980 --> 00:06:44,520
Welcome, Jerry.

108
00:06:44,520 --> 00:06:45,720
Welcome John, welcome Wally.

109
00:06:46,350 --> 00:06:48,540
But you can see these methods all that cumbersome.

110
00:06:48,930 --> 00:06:50,340
You know, you really got to think about it.

111
00:06:50,340 --> 00:06:51,480
You've got to do a lot of typing.

112
00:06:52,230 --> 00:06:54,390
Let me show you the full of loop, which is awesome.

113
00:06:55,340 --> 00:06:57,860
Full of loot.

114
00:07:01,210 --> 00:07:03,250
OK, so let's do a full of loop.

115
00:07:04,460 --> 00:07:09,490
My I.D. again helps me with this concert iterator of object.

116
00:07:09,560 --> 00:07:13,070
So, yeah, we've got my name and our object is member list.

117
00:07:14,780 --> 00:07:18,810
And you'll see how much easier this is, this is going to loop through each name.

118
00:07:19,520 --> 00:07:23,420
Each element of our array of our object.

119
00:07:24,320 --> 00:07:31,490
All we need to do now is the trees get our greeting, which is executing the high function and we've

120
00:07:31,490 --> 00:07:33,260
already got our name.

121
00:07:36,160 --> 00:07:39,310
And then we can console log our greeting.

122
00:07:41,350 --> 00:07:44,860
Can you see how much easier and simple the for of loop is?

123
00:07:45,070 --> 00:07:45,730
It's great.

124
00:07:46,480 --> 00:07:51,670
But I want to show you one more example now because yeah, we've been dealing with a simple array.

125
00:07:51,700 --> 00:07:54,160
I want to now deal with the more complicated object.

126
00:07:54,280 --> 00:07:58,780
So let me stop this video because it's getting a bit long, and in the next video, we're going to be

127
00:07:58,780 --> 00:08:00,370
dealing with the object.

128
00:08:00,460 --> 00:08:02,620
And then we're going to iterate Susette object.

129
00:08:03,280 --> 00:08:03,790
See you soon.

