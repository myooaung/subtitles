1
00:00:00,150 --> 00:00:02,009
Who we are getting there?

2
00:00:02,400 --> 00:00:02,850
Let's go.

3
00:00:03,360 --> 00:00:07,830
I want to show you now an example of a class object, but before I do, I want to use a constructor

4
00:00:07,830 --> 00:00:13,020
function and I know I've been doing that a lot, but I just want to have a very simple one, just so

5
00:00:13,020 --> 00:00:15,210
you can compare the differences between the two.

6
00:00:16,670 --> 00:00:21,620
This is all about classes, and let's do example one where we use.

7
00:00:22,760 --> 00:00:24,860
A constructor function.

8
00:00:26,480 --> 00:00:31,490
And remember, the first step to reconstruct the function is to define the object.

9
00:00:31,730 --> 00:00:33,020
And this just to a person.

10
00:00:34,900 --> 00:00:42,160
Which gets passed in a name, and we seek the new objects name to the name that we passed in the person's

11
00:00:42,160 --> 00:00:43,630
name will be the name we passed in.

12
00:00:44,020 --> 00:00:49,720
But now let's say on this object, this constructor function, we want to include a greeting method

13
00:00:49,720 --> 00:00:51,490
that can greet the use of by the name.

14
00:00:52,450 --> 00:00:57,040
Now, one of the problems we saw when we saw in the previous lecture is that if we use the constructor

15
00:00:57,040 --> 00:01:03,420
function and put the method inside its body, inside its block like this, if we go this in the school

16
00:01:03,430 --> 00:01:05,860
of greeting equals function, blah blah blah.

17
00:01:06,190 --> 00:01:12,370
If we put it in there, we saw that every time you create a new instance of this, this greeting method

18
00:01:12,370 --> 00:01:15,100
is being stored in that new variable.

19
00:01:15,790 --> 00:01:17,350
And that's just a memory leak.

20
00:01:17,740 --> 00:01:21,580
It's just a waste of space slows your system down.

21
00:01:22,210 --> 00:01:30,310
So what we saw was we can access the person and on the prototype, we can include a method called greeting.

22
00:01:30,700 --> 00:01:31,630
And let's do this not.

23
00:01:36,250 --> 00:01:38,770
And all those greeting was to just console log.

24
00:01:41,580 --> 00:01:42,120
The snake.

25
00:01:46,520 --> 00:01:48,950
And what's the second step with a constructor function?

26
00:01:49,760 --> 00:01:53,450
That's right, we need to instantiate, we need to call the object.

27
00:01:54,390 --> 00:01:57,590
So let's go, let's use it equals new person.

28
00:01:58,100 --> 00:01:59,780
And let's say his name is Wally.

29
00:02:01,520 --> 00:02:06,530
And because we've set the greeting method on the prototype, we can access the star Ricky right now.

30
00:02:07,990 --> 00:02:12,550
For example, user beating and IT console logs, Wally.

31
00:02:13,960 --> 00:02:16,120
This is intuitive and you understand us.

32
00:02:16,660 --> 00:02:21,850
So now that creates the same object with the class syntax.

33
00:02:28,380 --> 00:02:35,640
Now, before actually going to class syntax, can you see my I.D. has already put three dots below that

34
00:02:35,640 --> 00:02:38,280
P Alema function constructor?

35
00:02:38,520 --> 00:02:39,120
Can you see that?

36
00:02:39,720 --> 00:02:40,770
And if a hover over it?

37
00:02:41,910 --> 00:02:46,320
It sees this constructor function may be converted to a class declaration.

38
00:02:46,500 --> 00:02:51,900
So it's actually saying to me, Hey, we can convert our constructor function into a more up to date

39
00:02:52,050 --> 00:02:54,630
class and text way of declaring this object.

40
00:02:54,780 --> 00:02:57,240
But anyway, I'll leave that day for now so you can compare the differences.

41
00:02:57,240 --> 00:02:59,010
You'll see how similar they are.

42
00:02:59,700 --> 00:03:05,850
So with the constructor function, the first step was to try to find your object, and we used that

43
00:03:05,850 --> 00:03:09,660
by using the function keyword or with the clause syntax.

44
00:03:09,660 --> 00:03:10,590
We don't use a function.

45
00:03:10,590 --> 00:03:17,010
Key word we user what keyword drum roll do we use?

46
00:03:17,010 --> 00:03:17,970
The class keyword.

47
00:03:18,750 --> 00:03:20,340
So class person.

48
00:03:21,580 --> 00:03:29,070
And then we follow it by opening, closing curly braces so you can see we've just created a class object.

49
00:03:29,260 --> 00:03:31,900
But now the only difference is is it with a constructive function?

50
00:03:31,900 --> 00:03:36,770
We POSTECH name variable within it was a class object.

51
00:03:36,790 --> 00:03:40,840
We have to define a constructor function and it's simple and it's intuitive.

52
00:03:40,930 --> 00:03:45,190
You call it the constructor and the construct is going to take in a name.

53
00:03:46,610 --> 00:03:54,230
Variable and we going to set the new variables name to the name, we pass into this constructor function.

54
00:03:55,210 --> 00:03:55,600
Whoo!

55
00:03:55,660 --> 00:03:56,440
So there you have it.

56
00:03:56,590 --> 00:04:00,640
It's the first part that we've replicated on that constructor function.

57
00:04:01,940 --> 00:04:07,880
And you can see how some lengths and text it is always done, though different times that we've defined

58
00:04:07,880 --> 00:04:12,050
a constructor method within this class, within this object.

59
00:04:12,200 --> 00:04:15,710
The other thing now that we want to do is one edit creating method.

60
00:04:15,710 --> 00:04:16,100
Remember?

61
00:04:16,760 --> 00:04:21,829
Well, when we use the constructor function, we had to explicitly put it onto the prototype of it.

62
00:04:22,400 --> 00:04:23,360
It was a class.

63
00:04:23,720 --> 00:04:28,130
Any method you actually declare in it is automatically put on the prototype.

64
00:04:28,640 --> 00:04:33,620
So it actually helps us automatically allocate methods in the most optimal way.

65
00:04:34,250 --> 00:04:36,110
You don't need commas or anything to separate.

66
00:04:36,110 --> 00:04:36,560
These are.

67
00:04:36,620 --> 00:04:37,570
You can just keep going.

68
00:04:37,790 --> 00:04:39,860
Yeah, we're going to define a greeting function.

69
00:04:40,700 --> 00:04:42,860
And all we want to do is console log.

70
00:04:44,110 --> 00:04:44,800
The name, right?

71
00:04:47,430 --> 00:04:50,940
And there you have it, we've created a class that results in the same object.

72
00:04:51,180 --> 00:04:53,340
And what we just did above with a constructor function.

73
00:04:53,640 --> 00:04:58,200
Let me comment this out and then I'll show you I just don't want conflicting variable names.

74
00:04:59,490 --> 00:05:00,720
And let's look at an example.

75
00:05:02,470 --> 00:05:08,230
And what's awesome about this is that we still have to go through the same processes with a class than

76
00:05:08,230 --> 00:05:11,410
we did with the constructor function, remember step one was to define your object.

77
00:05:11,650 --> 00:05:12,580
We've done that now.

78
00:05:13,120 --> 00:05:13,900
What stick to?

79
00:05:15,070 --> 00:05:24,760
That's right, we've got a call object, so let user equal new person, and now we're going to put it

80
00:05:24,760 --> 00:05:25,630
in the name Wally.

81
00:05:26,990 --> 00:05:30,230
And it's very similar to what we've been seeing previously.

82
00:05:30,950 --> 00:05:34,370
Now the screeching method, if we go use a greeting.

83
00:05:35,860 --> 00:05:37,780
It console logs Wally to the screen.

84
00:05:38,620 --> 00:05:40,990
How cool is this, but we're not quite done.

85
00:05:41,140 --> 00:05:43,450
I just want to show you three things very quickly.

86
00:05:43,810 --> 00:05:48,280
You know how I keep telling you how the class syntax is so similar to a construction function?

87
00:05:49,600 --> 00:05:56,020
Well, a constructor function is a function, so you expect this class that we created to also be a

88
00:05:56,020 --> 00:05:56,470
function.

89
00:05:57,220 --> 00:05:57,610
Right?

90
00:05:58,150 --> 00:05:58,930
Let me prove it to you.

91
00:06:00,360 --> 00:06:02,760
So let me say here in JavaScript.

92
00:06:04,530 --> 00:06:08,550
A class is a kind of function.

93
00:06:09,890 --> 00:06:11,570
And it puts the methods.

94
00:06:13,200 --> 00:06:17,520
We create here into the prototype.

95
00:06:18,610 --> 00:06:19,180
Property.

96
00:06:20,730 --> 00:06:21,660
Improve this to you.

97
00:06:22,020 --> 00:06:24,390
It's console log the type of.

98
00:06:25,400 --> 00:06:25,790
Person.

99
00:06:28,800 --> 00:06:29,550
And there you have it.

100
00:06:29,820 --> 00:06:31,140
It is a function.

101
00:06:32,070 --> 00:06:33,450
But what function is it?

102
00:06:33,540 --> 00:06:35,550
I would expect it to be the construct function.

103
00:06:35,850 --> 00:06:40,920
Remember, for the constructor function, we if you console.log the function out, it would actually

104
00:06:40,920 --> 00:06:42,480
throw you back the constructor function.

105
00:06:42,690 --> 00:06:45,180
So I'd expect the same here and I can prove that to you as well.

106
00:06:45,630 --> 00:06:48,030
So let's console.log the person.

107
00:06:49,080 --> 00:06:54,560
Class Person, which we just created, and we know that's a function, and it's tasters are saying,

108
00:06:54,560 --> 00:06:55,820
is that equal to?

109
00:06:56,760 --> 00:06:57,540
The person.

110
00:06:58,750 --> 00:07:01,810
The prototype and the constructor on that prototype.

111
00:07:04,920 --> 00:07:06,240
And the result is true.

112
00:07:06,930 --> 00:07:10,470
So you can see that these things are just exactly the same.

113
00:07:11,070 --> 00:07:17,310
And the final thing I want to prove to you is that can you see my second statement on it says using

114
00:07:17,310 --> 00:07:21,660
the class puts the methods we create into the prototype property.

115
00:07:23,670 --> 00:07:27,840
So how many methods should we have on the prototype property of this person plus?

116
00:07:29,100 --> 00:07:33,210
Well, would expect to one called constructor and one called greeting.

117
00:07:33,600 --> 00:07:39,570
And the cool thing with JavaScript is you've got in-built methods on that global object that allow us

118
00:07:39,570 --> 00:07:41,700
to access and taste what properties we have.

119
00:07:42,770 --> 00:07:46,710
So it's console.log, let's access the global object.

120
00:07:47,450 --> 00:07:51,470
And this is a property or a method called gate property names.

121
00:07:51,710 --> 00:07:52,370
That's what we want.

122
00:07:52,370 --> 00:07:57,290
We want to see all our property names on our person object.

123
00:07:58,160 --> 00:07:59,600
But the prototype of it?

124
00:08:00,490 --> 00:08:04,950
And you can see they we've got to construct and greedy who this is cool.

125
00:08:05,110 --> 00:08:06,790
This is really getting advanced.

126
00:08:07,250 --> 00:08:10,610
Hope you starting to get a feel for these things.

127
00:08:10,630 --> 00:08:11,920
I mean, just take a step back.

128
00:08:11,920 --> 00:08:12,760
We've done a lot.

129
00:08:12,910 --> 00:08:19,540
We've created objects by the literal syntax, construct the functions, object of create.

130
00:08:19,540 --> 00:08:21,820
And now we've just done it via the class method.

131
00:08:22,780 --> 00:08:28,660
And don't worry if you've been a bit confused with this loss section, now we're going to get into prototypes

132
00:08:28,660 --> 00:08:29,370
in the next section.

133
00:08:29,370 --> 00:08:33,970
I'm going have a whole bonus of it, but just take a step back and realize, like there's so many different

134
00:08:33,970 --> 00:08:40,260
ways in JavaScript to create objects and we can play around with these things all day long.

135
00:08:40,270 --> 00:08:44,470
But the truth is, you must just get comfortable with what you enjoy the most.

136
00:08:44,950 --> 00:08:47,740
And in some situations, you're going to prefer one over the other.

137
00:08:48,550 --> 00:08:49,390
So let's continue.

138
00:08:49,390 --> 00:08:50,290
Let's let's have fun.

139
00:08:50,290 --> 00:08:52,120
Go get a coffee, go get a coke.

140
00:08:52,450 --> 00:08:53,410
Whatever pumps you up.

141
00:08:53,980 --> 00:08:55,810
Maybe not a whiskey you need.

142
00:08:55,990 --> 00:08:57,370
You need a good mind for these things.

143
00:08:57,850 --> 00:09:00,350
And let's let's continue.

144
00:09:00,370 --> 00:09:01,330
I'll see you in the next lecture.

