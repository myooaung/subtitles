1
00:00:00,390 --> 00:00:04,800
We need to get our source code converted into machine code somehow before it can run.

2
00:00:05,880 --> 00:00:11,880
And there're two main ways of doing this - what's called compiling the source code and what's called interpreting

3
00:00:11,880 --> 00:00:16,410
the source code, and most languages you'll deal with will naturally fall into one or the other.

4
00:00:17,370 --> 00:00:21,840
But I think it's worth knowing the difference because you are going to be encountering these terms a

5
00:00:21,840 --> 00:00:23,580
lot in your programming career.

6
00:00:24,790 --> 00:00:29,920
With a compiled language, what happens is you write your source code and then you have a program called

7
00:00:29,920 --> 00:00:35,530
a compiler that will go through that source code and create a separate file that contains the machine

8
00:00:35,530 --> 00:00:35,830
code.

9
00:00:37,350 --> 00:00:43,170
The end result is sometimes referred to as an "executable file" because we can directly execute it.

10
00:00:43,800 --> 00:00:49,140
The user can directly run the file and you as a programmer, you get to keep your source code (secret) and the

11
00:00:49,140 --> 00:00:50,160
user never sees it.

12
00:00:51,160 --> 00:00:56,650
Clyde, what are some examples? Well okay, programs, you know, or languages such as C++ or Java,

13
00:00:57,190 --> 00:00:59,140
they need to be compiled before they run.

14
00:00:59,710 --> 00:01:06,160
All that means is that the source code has to pass through a compiler, which is translated into byte code

15
00:01:06,160 --> 00:01:08,530
that the machine can understand and then execute.

16
00:01:09,430 --> 00:01:14,560
And when a program is compiled, it's often compiled for a specific platform.

17
00:01:14,980 --> 00:01:21,430
For example, an IBM platform which will only work for IBM computers and no other platform, so it won't

18
00:01:21,430 --> 00:01:22,570
work on Apple computers.

19
00:01:23,200 --> 00:01:27,700
So what's interesting is that most high level languages today includes their own compilers, or they

20
00:01:27,700 --> 00:01:30,430
have toolkits available that can be used to compile the program.

21
00:01:30,730 --> 00:01:34,620
If you want another example, I mean, a good example of a compiler that uses Java is Eclipse. 

22
00:01:35,470 --> 00:01:39,430
And an example of a compiler used with C and C++ is the GCC command.  

23
00:01:40,350 --> 00:01:44,550
Depending on how big the program is, it should take a few seconds or minutes to compile. If no errors are

24
00:01:44,550 --> 00:01:48,750
encountered while being compiled, then an executable file is (finally) created.

