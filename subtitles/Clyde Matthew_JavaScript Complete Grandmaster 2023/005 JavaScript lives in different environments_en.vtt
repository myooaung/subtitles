WEBVTT
1
00:00:00.550 --> 00:00:09.130
A quick word on JavaScript. And yes, we know that JavaScript is a programming language, but what

2
00:00:09.130 --> 00:00:15.160
you may or may not know is that JavaScript lives in different environments. Specifically, we can

3
00:00:15.160 --> 00:00:19.330
break it down into three environments. It lives in the browser.

4
00:00:20.050 --> 00:00:24.730
It lives in the backend, a.k.a. the server, and it can live in a database.

5
00:00:25.480 --> 00:00:31.780
It's used in all three of these environments in different ways. And there are different rules, and there's

6
00:00:31.780 --> 00:00:35.050
a different syntax associated with each different environment.

7
00:00:35.620 --> 00:00:43.030
So in the browser, we've got the DOM - the Document Object Model - and JavaScript within this environment

8
00:00:43.030 --> 00:00:45.820
is referred to as client-side JavaScript.

9
00:00:46.570 --> 00:00:49.990
And what are some of the things JavaScript deals with within this environment? Well, 

10
00:00:50.470 --> 00:00:55.450
for example, what happens when a user clicks a button, then JavaScript can get involved and manipulate

11
00:00:55.450 --> 00:00:56.680
the DOM in some way.

12
00:00:56.890 --> 00:01:02.020
What happens when we navigate a menu or what happens when you want a carousel of images to be displayed

13
00:01:02.020 --> 00:01:02.860
on your web page?

14
00:01:03.370 --> 00:01:05.050
This is all JavaScript

15
00:01:05.290 --> 00:01:12.760
speaking to the DOM, to the browser. Then we also know JavaScript can interact and live in the backend

16
00:01:13.210 --> 00:01:20.290
and a very, very common language, is Node.js. And JavaScript in this environment is called backend

17
00:01:20.290 --> 00:01:21.220
JavaScript.

18
00:01:21.880 --> 00:01:27.880
And it deals with things like what happens when someone clicks on the "About Us" page, then JavaScript

19
00:01:27.880 --> 00:01:32.140
needs to speak to the server and the server needs to deliver the "About Us" page.

20
00:01:32.500 --> 00:01:34.120
I know that's a very simple example,

21
00:01:34.360 --> 00:01:35.800
I'm just trying to get the point across.

22
00:01:36.070 --> 00:01:39.540
And last but not least, we also have a database.

23
00:01:40.180 --> 00:01:46.180
And of course, we can use JavaScript in this environment too. And a very common database schema we can

24
00:01:46.180 --> 00:01:52.060
use with JavaScript is mongoDB. And JavaScript again can live within this environment.

25
00:01:52.390 --> 00:01:57.700
It has new language features available to it in order to do its job within this environment.

26
00:01:58.030 --> 00:01:59.540
What kind of jobs am I talking about?

27
00:01:59.560 --> 00:02:02.440
Well, what happens when someone signs up to our site?

28
00:02:02.530 --> 00:02:08.680
When they fill out all that form information, we can use JavaScript to save their data to the database.

29
00:02:09.400 --> 00:02:10.460
So there you have it.

30
00:02:10.479 --> 00:02:17.470
JavaScript is very dynamic, but what's interesting is that common JavaScript features like objects, functions,

31
00:02:17.470 --> 00:02:22.270
arrays, prototypes, inheritance, data types, all of these kind of things

32
00:02:22.750 --> 00:02:26.650
they exist in every single environment, and they are largely the same.

33
00:02:27.130 --> 00:02:32.530
However, what's different is that in each environment, JavaScript is exposed to new functionality,

34
00:02:32.800 --> 00:02:39.040
new methods and properties that we have to then access in their specific environment in order to tell

35
00:02:39.040 --> 00:02:42.010
JavaScript to do its job for a specific purpose.

36
00:02:42.640 --> 00:02:44.470
I know it might be a bit confusing for now.

37
00:02:44.920 --> 00:02:50.630
In this course, we're going to be more focusing on client side JavaScript. But what you learn

38
00:02:50.650 --> 00:02:54.580
like I mentioned, can carry across into all three. Hope you're having fun.

39
00:02:55.000 --> 00:02:57.010
Stay motivated, and I'll see you in the next lecture.

