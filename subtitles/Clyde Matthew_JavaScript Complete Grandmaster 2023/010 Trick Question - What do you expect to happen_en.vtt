WEBVTT
1
00:00:00.750 --> 00:00:03.420
You've wrapped your head around the console.

2
00:00:04.050 --> 00:00:08.580
The fact that we're writing code in the text editor and running it on the browser, it's awesome.

3
00:00:08.940 --> 00:00:14.460
But now let me ask you a bit of a trick question, something that isn't as intuitive as you might first

4
00:00:14.460 --> 00:00:14.820
think.

5
00:00:15.630 --> 00:00:19.720
Let's say in our body, here is just another simple HTML document,

6
00:00:19.740 --> 00:00:21.750
let's just say we've got a paragraph.

7
00:00:22.710 --> 00:00:23.910
Called "Hello World".

8
00:00:25.040 --> 00:00:26.600
And then lets start writing JavaScript.

9
00:00:30.110 --> 00:00:35.150
And in JavaScript, we've got two commands. (1) document.write().

10
00:00:41.260 --> 00:00:42.730
And remember what the document was?

11
00:00:43.000 --> 00:00:50.500
Well, the document is your web page. So all we're telling JavaScript to do here, is what? Correct, its to write the

12
00:00:50.500 --> 00:00:55.320
string called "I expect this to be executed first", onto your webpage.

13
00:00:56.980 --> 00:00:58.600
Let's execute then (2) an alert.

14
00:01:07.650 --> 00:01:12.660
Remember what I said before that when the browser parses your webpage, it goes from top to bottom. 

15
00:01:13.260 --> 00:01:14.880
So what would you expect to happen here?

16
00:01:15.420 --> 00:01:21.600
Well, intuitively I would expect the document.write() to be executed first, so we should see this on

17
00:01:21.600 --> 00:01:22.680
the screen first.

18
00:01:23.670 --> 00:01:31.200
As a matter of fact, I would expect to see the paragraph "Hello World" come first, then I'd expect this to be

19
00:01:31.200 --> 00:01:32.190
displayed beneath it,

20
00:01:33.060 --> 00:01:36.330
and only then would I expect the alert to show up on the screen.

21
00:01:38.310 --> 00:01:39.990
But, programming can be weird.

22
00:01:40.110 --> 00:01:41.220
Let's have a look at what happens.

23
00:01:42.210 --> 00:01:43.350
Let's Go Live.

24
00:01:49.640 --> 00:01:50.480
Ohhhhhh.

25
00:01:50.900 --> 00:01:52.010
Can you see what's just happened?

26
00:01:53.190 --> 00:01:59.760
There is nothing shown on the browser, but this alert has shown up! But we expected this to be executed

27
00:01:59.760 --> 00:02:01.440
second, not first, what's going on?

28
00:02:02.280 --> 00:02:03.990
Well, you can see when we click OK,

29
00:02:05.110 --> 00:02:07.090
here is what we expected to happen first.

30
00:02:08.340 --> 00:02:10.889
Why does this happen? You can clearly see if we go back to the code,

31
00:02:10.919 --> 00:02:15.900
this alert is written last, but it seems to be executed first.

32
00:02:15.910 --> 00:02:16.590
Why is that?

33
00:02:17.190 --> 00:02:23.220
The simple answer is that most modern web browsers are set up such that 

34
00:02:23.220 --> 00:02:29.490
when they encounter JavaScript, they pause the rendering of the remaining HTML content.

35
00:02:30.150 --> 00:02:37.260
So what's happened is that although the browser does get to document.write first, and it parses

36
00:02:37.260 --> 00:02:43.950
that first, when it hits a JavaScript function, the alert() function, it actually pauses everything else

37
00:02:44.130 --> 00:02:45.540
and it executes that first.

38
00:02:46.760 --> 00:02:52.550
That's exactly why we see it first, even though we've written it second. So there are all these little

39
00:02:52.550 --> 00:02:56.420
nuances that you just need to keep in mind with JavaScript, but it is fun, it's awesome.

40
00:02:56.870 --> 00:03:01.550
And intuitively, these things can be a little weird sometimes.

41
00:03:01.940 --> 00:03:05.990
But in most cases, you know, it does work as we would expect.

42
00:03:06.020 --> 00:03:06.530
Let's move on.

