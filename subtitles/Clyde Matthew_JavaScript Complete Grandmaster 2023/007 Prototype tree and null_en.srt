1
00:00:00,210 --> 00:00:05,460
Remember earlier we said that the prototype either has to be now or an object.

2
00:00:06,090 --> 00:00:11,340
And you've heard me countless times saying that in JavaScript, pretty much everything is an object

3
00:00:11,340 --> 00:00:14,400
and everything inherits from another object.

4
00:00:15,180 --> 00:00:18,510
Well, let me explain, and I think this will drive the point home.

5
00:00:19,230 --> 00:00:21,210
Let's start off with the number seven.

6
00:00:22,050 --> 00:00:23,490
What's its prototype going to be?

7
00:00:24,120 --> 00:00:27,370
Will its prototype property is going to be the No.

8
00:00:27,620 --> 00:00:34,470
Prototype, and that's why we can access methods like is in our in is finite and a whole plethora of

9
00:00:34,470 --> 00:00:35,130
other methods.

10
00:00:36,030 --> 00:00:42,210
It's because when we declare that variable, it's inheriting a whole lot of properties and methods from

11
00:00:42,210 --> 00:00:43,080
the number prototype.

12
00:00:43,920 --> 00:00:45,660
For now, let's look at the number prototype.

13
00:00:45,900 --> 00:00:47,310
What's its product going to be?

14
00:00:47,820 --> 00:00:52,800
It's proto is going to be the object prototype, and that's why we've got other methods and properties

15
00:00:52,800 --> 00:00:54,660
like to string and value of.

16
00:00:55,520 --> 00:01:01,850
And this is almost the overriding arching object prototype that is accessible from all other objects

17
00:01:01,850 --> 00:01:02,570
in JavaScript.

18
00:01:03,170 --> 00:01:05,690
But now what about this question?

19
00:01:05,930 --> 00:01:08,600
What is the photo of object prototype?

20
00:01:09,170 --> 00:01:11,000
And you guessed it, it's null.

21
00:01:11,540 --> 00:01:12,110
It stops.

22
00:01:12,620 --> 00:01:14,900
It's empty and that makes sense, right?

23
00:01:15,410 --> 00:01:18,860
And that's what I mean when I see prototypes either have to be an object or now.

24
00:01:19,460 --> 00:01:20,870
OK, that was a number seven.

25
00:01:21,350 --> 00:01:22,670
Let's now look at an array.

26
00:01:23,120 --> 00:01:25,280
Let's say we have an array of one, three and five.

27
00:01:25,610 --> 00:01:27,560
What is its pronto going to point to?

28
00:01:28,160 --> 00:01:28,700
It's right.

29
00:01:28,700 --> 00:01:31,130
It's going to point to the array prototype.

30
00:01:31,130 --> 00:01:36,230
And that's why we have methods such as push, pop and other methods because it's all attached into that

31
00:01:36,230 --> 00:01:36,770
prototype.

32
00:01:37,280 --> 00:01:38,770
And what about the array prototype?

33
00:01:38,780 --> 00:01:40,130
What is its product going to be?

34
00:01:40,850 --> 00:01:41,300
Correct.

35
00:01:41,420 --> 00:01:43,160
It's going to be the object prototype.

36
00:01:43,730 --> 00:01:45,080
And let's look at a function.

37
00:01:45,560 --> 00:01:46,580
We define function.

38
00:01:46,580 --> 00:01:48,890
Cordelia, what's its product going to be?

39
00:01:49,670 --> 00:01:52,040
Yep, it's going to be a function prototype.

40
00:01:52,310 --> 00:01:58,550
And again, we've got methods such as bind, cool to string and a whole bunch of others, and it's proto

41
00:01:58,550 --> 00:02:00,170
is going to be the object prototype.

42
00:02:00,590 --> 00:02:03,740
So take a step back, look at this image and let it sink in.

43
00:02:04,040 --> 00:02:09,770
And I hope it's now starting to become more intuitive and to make sense and to prove a point, to prove

44
00:02:09,770 --> 00:02:13,010
that eventually you get to know at the very top by starting at the bottom.

45
00:02:13,010 --> 00:02:15,560
Let's look at an array and let's head to the console.

