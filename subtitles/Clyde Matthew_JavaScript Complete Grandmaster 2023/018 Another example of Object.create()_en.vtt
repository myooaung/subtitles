WEBVTT
1
00:00:00.150 --> 00:00:04.500
One more example of objeto creates, I just want to drive this point home, the more we work with it,

2
00:00:04.500 --> 00:00:08.570
the more we'll start to feel familiar with it, the more comfortable you're going to be and the more

3
00:00:08.610 --> 00:00:13.230
ease you're going to be with the fact that there is no right way we can create objects in a plethora

4
00:00:13.230 --> 00:00:13.680
of ways.

5
00:00:13.750 --> 00:00:14.030
Cool.

6
00:00:14.550 --> 00:00:16.530
Let's look at an example.

7
00:00:18.080 --> 00:00:20.000
This object creates.

8
00:00:22.010 --> 00:00:31.370
The first thing I want you to remember, so I should say example one is you have to pass an object or

9
00:00:31.370 --> 00:00:31.760
no?

10
00:00:33.090 --> 00:00:40.290
As the prototype, and we've seen that if we go layperson equals object, don't create.

11
00:00:41.330 --> 00:00:47.360
And we don't know what we're going to get an error because a prototype may only be an object or not.

12
00:00:47.750 --> 00:00:49.250
We know that we just saw an example.

13
00:00:51.180 --> 00:00:52.890
What's another practical example that?

14
00:00:53.960 --> 00:00:56.120
Of how we can use object to create.

15
00:00:59.130 --> 00:01:07.560
Practical employee example, let's say these, I don't know, private equity company that has multiple

16
00:01:07.560 --> 00:01:14.070
companies under its ownership and when his employees new staff, it once its prototype to be based on

17
00:01:14.070 --> 00:01:16.530
waiver, that employee is employed in which company.

18
00:01:16.620 --> 00:01:18.480
So we need a few different prototypes.

19
00:01:19.170 --> 00:01:24.690
Let's say this private equity firm loves animals, so the one company that own is called Dog Factory

20
00:01:24.690 --> 00:01:27.420
and other factory they own is called Cat Factory.

21
00:01:27.900 --> 00:01:36.660
Let's create a company one called Dog Factory, and remember how the prototype has to be an object animal.

22
00:01:36.660 --> 00:01:41.280
So let's create these prototypes in the form of an object and the Stew's object literal syntax.

23
00:01:41.370 --> 00:01:44.430
So let's define a dog protein property.

24
00:01:45.240 --> 00:01:49.470
The dog protein remember object literal syntax.

25
00:01:49.470 --> 00:01:50.400
All we need is opening.

26
00:01:50.400 --> 00:01:51.420
Closing curly braces.

27
00:01:51.420 --> 00:01:51.940
That's it.

28
00:01:51.960 --> 00:01:55.830
We've created an object, and let's say this right there.

29
00:01:56.010 --> 00:01:57.300
So an employee works.

30
00:01:57.300 --> 00:01:57.560
Yeah.

31
00:01:57.570 --> 00:01:59.190
Is working for a company called.

32
00:02:00.590 --> 00:02:02.780
The dog factory.

33
00:02:05.080 --> 00:02:07.030
And it's great company to.

34
00:02:10.210 --> 00:02:11.410
Old Kent.

35
00:02:12.540 --> 00:02:14.730
Factory similar process.

36
00:02:14.760 --> 00:02:15.330
That's correct.

37
00:02:15.690 --> 00:02:20.940
Can't protect open close curly braces means we've defined an object.

38
00:02:21.540 --> 00:02:23.280
And let's say that company name.

39
00:02:25.060 --> 00:02:28.090
It's called the kit factory.

40
00:02:30.140 --> 00:02:33.360
Now, let's say we've got an employee who works for each company.

41
00:02:35.370 --> 00:02:36.630
Create employee.

42
00:02:37.960 --> 00:02:39.340
Let's let employee one.

43
00:02:47.060 --> 00:02:48.320
He works for the dog.

44
00:02:49.190 --> 00:02:51.720
So we want to expose the dog.

45
00:02:52.250 --> 00:02:57.200
So now this employee one automatically has access to the dog factory.

46
00:02:58.040 --> 00:03:03.500
We know when we call him and we log him out that he'll have company property that is set to the dog

47
00:03:03.500 --> 00:03:03.950
factory.

48
00:03:04.580 --> 00:03:07.160
And let's give employee one a name.

49
00:03:08.210 --> 00:03:08.750
Frank.

50
00:03:12.940 --> 00:03:19.780
And you guessed it, there is another employee employee, too, and this employee is part of the protest.

51
00:03:22.430 --> 00:03:25.400
And let's give employed to a name of.

52
00:03:26.940 --> 00:03:27.360
Judy?

53
00:03:29.380 --> 00:03:34.570
We've set up two employees now let's console.log out the employee's name and who they work for, and

54
00:03:34.570 --> 00:03:40.360
this is where you'll see the benefits of working with objeto create console.log and we're going to use

55
00:03:40.360 --> 00:03:41.710
template literals and Texea.

56
00:03:44.260 --> 00:03:46.120
First, we're going to go employee one name.

57
00:03:49.960 --> 00:03:51.070
Works for.

58
00:03:55.640 --> 00:03:56.990
Employee one.

59
00:04:01.900 --> 00:04:02.500
Company.

60
00:04:05.650 --> 00:04:06.370
And there you have it.

61
00:04:06.520 --> 00:04:08.530
Frank works for the dog factory.

62
00:04:09.070 --> 00:04:13.630
And if I console.log the exact same thing, but I change employee one to employee two.

63
00:04:16.160 --> 00:04:22.070
This is the cool thing Judy works for the cat factory, and this is how you can work with objects of

64
00:04:22.070 --> 00:04:26.480
great hope is making sense, but let's look at the final way we can create an object.

