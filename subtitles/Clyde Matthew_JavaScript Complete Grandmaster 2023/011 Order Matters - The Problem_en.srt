1
00:00:00,270 --> 00:00:06,240
I want to drive home the importance of the order of your JavaScript code, and the impact it can have

2
00:00:06,960 --> 00:00:07,740
on your website.

3
00:00:08,340 --> 00:00:09,060
So let's have a look.

4
00:00:10,290 --> 00:00:11,730
Let's say, in the body tag

5
00:00:13,230 --> 00:00:14,340
we've got a paragraph.

6
00:00:19,530 --> 00:00:22,200
"We want this text to

7
00:00:25,570 --> 00:00:26,290
display

8
00:00:28,080 --> 00:00:30,210
after the script."

9
00:00:32,000 --> 00:00:36,500
Well, lets just say "We want this text to display" and to identify this paragraph,

10
00:00:36,530 --> 00:00:39,140
let's just have an ID of, I don't know,

11
00:00:39,600 --> 00:00:40,640
"order matters".

12
00:00:42,520 --> 00:00:50,050
So now we've got this paragraph, and we want this text to display on the page. But let's say we've

13
00:00:50,050 --> 00:00:54,910
got a script tag within the head section, and we did this in a previous lecture,

14
00:00:54,920 --> 00:00:56,590
I just want to go into a bit more detail now.

15
00:01:09,310 --> 00:01:15,800
Date() is a JavaScript inbuilt function. Again, we're going to get into more detail later,

16
00:01:15,820 --> 00:01:18,310
don't worry too much yet. Just know that it returns a date.

17
00:01:18,940 --> 00:01:24,340
And if you don't want the actual date and text displayed, you can just display a number by including the + 

18
00:01:24,340 --> 00:01:24,580
sign.

19
00:01:29,330 --> 00:01:31,070
So let's console.log

20
00:01:33,600 --> 00:01:34,230
"script

21
00:01:36,890 --> 00:01:40,940
started at", and lets display the time.

22
00:01:45,170 --> 00:01:49,650
OK, and now I also want to console.log this paragraph element.

23
00:01:50,480 --> 00:01:52,370
So let's go to console.log

24
00:01:54,740 --> 00:01:55,340
"element",

25
00:01:56,580 --> 00:02:01,710
and let's get it. So doc ... you have to start with the document because it is everything on your page.

26
00:02:03,430 --> 00:02:06,550
There's a JavaScript method called getElementById.

27
00:02:08,280 --> 00:02:12,060
And we want to get the element with ID, "order-matters".

28
00:02:12,270 --> 00:02:15,330
Let's just put hyphen in here, order-matters.

29
00:02:17,760 --> 00:02:18,990
And now I want to show you something.

30
00:02:19,030 --> 00:02:20,880
Let's create a delay.

31
00:02:22,640 --> 00:02:27,020
And we're going to get into this while-loop later, this while function.

32
00:02:28,030 --> 00:02:31,720
So let's say while, and let's do a new Date,

33
00:02:36,240 --> 00:02:37,320
is less than

34
00:02:39,000 --> 00:02:41,670
t1 plus 5000, 

35
00:02:47,200 --> 00:02:48,010
then do nothing.

36
00:02:51,020 --> 00:02:53,390
And then finally, I want to console.log

37
00:02:54,980 --> 00:02:57,710
"script has finished running at"

38
00:03:00,830 --> 00:03:02,060
and then let's do a new Date.

39
00:03:03,720 --> 00:03:05,910
Ah actually, I think I made a mistake here.

40
00:03:06,030 --> 00:03:07,020
We shouldn't have brackets.

41
00:03:11,190 --> 00:03:12,030
That should work.

42
00:03:17,300 --> 00:03:17,670
Allright.

43
00:03:18,020 --> 00:03:24,160
So before we execute this, understand what we're trying to do. We're defining a time, now, then we console

44
00:03:24,170 --> 00:03:26,510
log that time just so that we all know what it is.

45
00:03:27,200 --> 00:03:32,010
Then we're trying to console.log this paragraph element before. Remember

46
00:03:33,350 --> 00:03:35,720
your browser interprets code from top to bottom.

47
00:03:35,720 --> 00:03:39,080
So by the time it hits this, this isn't going to have been rendered by the browser yet

48
00:03:39,470 --> 00:03:45,020
so we can expect some sort of error. But we're going to console.log an element and it's going to be that paragraph.

49
00:03:45,620 --> 00:03:50,600
Then after that, I want to wait five seconds and then I want to console.log again,

50
00:03:51,620 --> 00:03:52,310
the new time.

51
00:03:53,950 --> 00:03:57,280
Then we're going to display the paragraph text on the browser.

52
00:03:57,490 --> 00:03:58,300
Let's see what happens.

53
00:03:58,600 --> 00:04:00,880
I'm going to click "Save Now".

54
00:04:03,720 --> 00:04:04,740
And I'm going to refresh.

55
00:04:05,820 --> 00:04:06,680
And look what happens.

56
00:04:07,580 --> 00:04:12,530
One, two, three, four, five and then the text is displayed.

57
00:04:12,950 --> 00:04:13,640
Did you see that?

58
00:04:14,090 --> 00:04:16,910
And look at the element that we consolled.

59
00:04:17,920 --> 00:04:20,350
It's null. And we would expect it to be null.

60
00:04:20,740 --> 00:04:25,420
Remember, we hadn't encountered that paragraph tag before we included JavaScript.

61
00:04:26,170 --> 00:04:32,560
This is a really cool concept to grasp, understanding how JavaScript is executed in the browser.

62
00:04:32,890 --> 00:04:35,320
Let me just quickly show you why this happened.

63
00:04:35,500 --> 00:04:36,280
Let's take a look.

