1
00:00:00,390 --> 00:00:00,870
All right.

2
00:00:00,960 --> 00:00:07,200
Next up, what we're going to do is we're going to hook up the timer, the actual countdown timer,

3
00:00:07,590 --> 00:00:09,630
because it can take the property minutes.

4
00:00:09,990 --> 00:00:16,530
And right now we're defaulting to the amount of minutes that is predetermined in the countdown component,

5
00:00:16,860 --> 00:00:20,730
which is the default equal to zero point one.

6
00:00:21,780 --> 00:00:27,990
But we want our timer to actually set the minutes, so let's say Konst Minutes.

7
00:00:29,380 --> 00:00:37,480
Is equal to set minutes and then is equal to use state, and then we'll put zero point one as a default

8
00:00:37,480 --> 00:00:38,160
value for now.

9
00:00:39,070 --> 00:00:44,470
But now you can see if I control it here, I can use zero point two and so forth.

10
00:00:44,920 --> 00:00:50,320
Now the control here is basically to have the ability to add buttons down here, a leader.

11
00:00:51,220 --> 00:00:54,670
But this video is focusing on one this.

12
00:00:54,940 --> 00:01:00,040
And then the other part is on the end of the countdown.

13
00:01:00,550 --> 00:01:03,670
We want vibration and so react native exports.

14
00:01:03,670 --> 00:01:10,160
This nice library called vibration vibration, vibrates the device very simple at this very, very simple.

15
00:01:10,630 --> 00:01:16,300
And so if we look at the usage of vibration, it's basically it takes a pattern.

16
00:01:16,840 --> 00:01:22,300
And so that pattern is you give it an amount of seconds and then you given an array of numbers.

17
00:01:22,660 --> 00:01:28,060
And that array of numbers corresponds to, hey, vibrate this then vibrate that the vibrate that.

18
00:01:28,060 --> 00:01:32,290
So it's going to vibrate at the first second, there's going to wait two seconds, then it can vibrate

19
00:01:32,290 --> 00:01:32,620
again.

20
00:01:32,620 --> 00:01:34,780
There's going to wait three seconds, then it's going to vibrate again.

21
00:01:35,740 --> 00:01:40,930
So if we take this pattern over here and we put it over here at the top now, we don't want to define

22
00:01:40,930 --> 00:01:45,740
this in our component because we're not going to change it at all.

23
00:01:45,760 --> 00:01:47,110
We're not changing the vibration pattern.

24
00:01:47,110 --> 00:01:48,280
It's kind of set.

25
00:01:48,850 --> 00:01:54,640
Now what I want to say here is that the pattern is now vibrate after one second vibrate after two seconds

26
00:01:54,640 --> 00:01:55,930
and then vibrate after three seconds.

27
00:01:56,350 --> 00:01:58,600
We want it to vibrate five times.

28
00:01:59,800 --> 00:02:05,530
After each second, that's what we want to do, because we want to prompt the user, Hey, the time

29
00:02:05,530 --> 00:02:06,040
is over.

30
00:02:06,460 --> 00:02:14,260
And then if we go, look at what actually needs to be done, it is vibration that vibrate and you just

31
00:02:14,260 --> 00:02:15,280
give it the pattern.

32
00:02:16,290 --> 00:02:25,680
Now, if we do that here in our own end, what we'll see is that when we start our timer at the end

33
00:02:25,680 --> 00:02:29,100
of our timer, our phone will start vibrating.

34
00:02:30,310 --> 00:02:36,520
And so that is a tactile feel now you can't feel it, but it's vibrating in my hand, right?

35
00:02:36,760 --> 00:02:44,260
And it's vibrating five times after each second, which is pretty nice, pretty simple, pretty straightforward.

36
00:02:44,650 --> 00:02:46,270
Now if we go, look here.

37
00:02:47,500 --> 00:02:53,580
In Android, you may need to request for an Android permission with the use permission now in Exposicion

38
00:02:53,710 --> 00:02:54,730
default this.

39
00:02:56,600 --> 00:03:01,370
And over here, you can see reference methods to be able to cancel.

40
00:03:02,640 --> 00:03:07,710
How vibration specifically works on Android, on Android, the default vibrations, 400 milliseconds

41
00:03:08,130 --> 00:03:13,890
and so forth, and specifically on Android, the odds of a pattern array to represent the vibration

42
00:03:13,890 --> 00:03:14,430
duration.

43
00:03:15,270 --> 00:03:23,190
So there's differences on how on Android, the odd indices of the pattern represent the vibration on

44
00:03:23,190 --> 00:03:23,780
iOS.

45
00:03:23,790 --> 00:03:27,210
The number in the pattern area represents the vibration.

46
00:03:27,630 --> 00:03:31,020
So the odd in this here represents the vibration.

47
00:03:31,020 --> 00:03:37,860
So if we look at our pattern on Android, what's going to happen is one, three and five are going to

48
00:03:37,860 --> 00:03:38,460
vibrate.

49
00:03:39,090 --> 00:03:41,040
And even in this are going to wait.

50
00:03:41,070 --> 00:03:45,000
So there's differences in how vibration happens on each device.

51
00:03:45,210 --> 00:03:50,790
And that's why it's extremely important to always reach to the React native documentation to understand

52
00:03:51,180 --> 00:03:52,740
how these libraries work.

53
00:03:53,070 --> 00:03:59,490
What specifically we can do with them because they can also change as a react need of upgrades.

54
00:03:59,910 --> 00:04:02,370
They may implement specific custom behaviors.

55
00:04:02,400 --> 00:04:07,170
Now here they stuck with the behavior of the phone, but it's important to note here.

56
00:04:07,380 --> 00:04:11,340
So we've added vibrations to our timer.

