WEBVTT
1
00:00:00.830 --> 00:00:05.630
Before we start building our search feature, I kind of wanted to stop and take a look at, hey, how

2
00:00:05.630 --> 00:00:06.950
do search features work?

3
00:00:07.460 --> 00:00:15.500
And so if we went ahead and we typed in San Francisco, what would end up happening is this would be

4
00:00:15.500 --> 00:00:21.300
translated into a map for you that corresponds with this area.

5
00:00:21.800 --> 00:00:22.130
Right.

6
00:00:22.370 --> 00:00:24.150
But what's happening behind the scenes?

7
00:00:24.500 --> 00:00:27.740
Well, it's something called geocoding in Google.

8
00:00:28.370 --> 00:00:35.780
The geocoding API is an API that allows the process of converting addresses, for instance, a specific

9
00:00:35.780 --> 00:00:42.980
address or a city or a town into geographic coordinates like latitude and longitude, which can be used

10
00:00:42.980 --> 00:00:45.260
to place markers on a map or position a map.

11
00:00:45.710 --> 00:00:50.450
And so you have something called reverse geocoding, which is taking this and then translating into

12
00:00:50.600 --> 00:00:51.200
an address.

13
00:00:51.590 --> 00:00:54.830
But for all intents and purposes, we need geocoding.

14
00:00:54.830 --> 00:00:56.300
And why do we need geocoding?

15
00:00:56.480 --> 00:01:03.620
Because if we look at the places API, right, if we get an overview of the places API, well, when

16
00:01:03.620 --> 00:01:11.030
we utilize the places API, what it is taking as a location, when we look at places search.

17
00:01:12.180 --> 00:01:20.460
It is taking a longitude and latitude, we can see this when we look at, for instance, how the search

18
00:01:20.460 --> 00:01:22.310
would work in an example.

19
00:01:23.010 --> 00:01:27.720
So if we look at an example, let's see here.

20
00:01:29.190 --> 00:01:36.090
If we took this right, this is a map that Google API dot com place nearby search, and then it gives

21
00:01:36.090 --> 00:01:42.720
it a location and the location is taking in the longitude and latitude and then potentially a radius

22
00:01:42.990 --> 00:01:47.010
and you can give it type restaurant and all this other information.

23
00:01:47.790 --> 00:01:50.640
So this is kind of what we've been aiming towards.

24
00:01:50.640 --> 00:01:50.960
Right.

25
00:01:51.180 --> 00:01:56.760
If we go look at our code, when we look at our restaurant context, when we look at the way that we

26
00:01:56.760 --> 00:01:58.890
structured how this works.

27
00:01:59.880 --> 00:02:06.870
If we look at our service, well, our transform aside, when we look at how we structured our mock

28
00:02:06.870 --> 00:02:14.220
data inside of index, what we used longitude and latitude to signify a specific location, whether

29
00:02:14.220 --> 00:02:16.850
it be Antwerp, Toronto, Chicago, San Francisco.

30
00:02:16.860 --> 00:02:20.870
So we're mimicking the way that the places API would work for us.

31
00:02:21.210 --> 00:02:28.770
You see, in our request, what we're doing is we're saying give us a location, which is a string of

32
00:02:28.770 --> 00:02:34.320
longitude, latitude that's comma separated, and then we're going to go look for that location.

33
00:02:35.010 --> 00:02:40.710
This is no different than actually doing the API call to Google, but the only difference here is because

34
00:02:40.710 --> 00:02:45.810
we set it up this way and because we are setting our service up this way, we are setting ourselves

35
00:02:45.810 --> 00:02:51.300
up for success, because when we eventually go to integrate later in the course, in the bonus section

36
00:02:51.300 --> 00:02:56.100
where we try to integrate with Google API, what we're going to see here is that it's going to be very

37
00:02:56.100 --> 00:03:02.700
easy for us to take this information like these lines of code and translate them into an actual API

38
00:03:02.700 --> 00:03:03.160
request.

39
00:03:03.540 --> 00:03:11.130
Now, you may be wondering, OK, Mo, I get that like our restaurant service works as if it interacted

40
00:03:11.130 --> 00:03:12.180
with the Places API.

41
00:03:12.900 --> 00:03:17.600
But, you know, right now our search really isn't doing anything.

42
00:03:17.880 --> 00:03:18.690
And that's true.

43
00:03:19.080 --> 00:03:22.230
That's because we don't have any geocoding in the app.

44
00:03:22.380 --> 00:03:26.610
Like if we fill in San Francisco into this box.

45
00:03:26.610 --> 00:03:26.780
Right.

46
00:03:26.790 --> 00:03:33.600
If we filled in San Francisco, we have nothing backing us in terms of taking that term, like that

47
00:03:33.600 --> 00:03:38.450
search keyword and then translating it into longitude latitude.

48
00:03:38.880 --> 00:03:42.810
So we need to go and we need to build out a service that does that for us.

49
00:03:43.080 --> 00:03:45.770
So that's kind of how geocoding works, right?

50
00:03:45.780 --> 00:03:51.360
We're going to take our search term and we're going to translate it to the longitude latitude that translates

51
00:03:51.360 --> 00:03:53.970
to this specific area on the map.

