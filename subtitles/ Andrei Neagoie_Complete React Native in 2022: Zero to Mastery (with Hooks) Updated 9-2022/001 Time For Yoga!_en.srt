1
00:00:00,700 --> 00:00:08,080
We've built the great app so far, and we kind of went through the motion of using a system like syntax

2
00:00:08,530 --> 00:00:14,740
to kind of put together the UI and go through the motions of, hey, this is the UI we're going to build.

3
00:00:14,750 --> 00:00:18,550
This is roughly how we're going to use these properties to put them in the right place.

4
00:00:18,550 --> 00:00:23,860
And maybe in your past you've done X, maybe you're completely new to all of this together.

5
00:00:23,860 --> 00:00:29,380
But if you've done this in the past, you may have felt like, hey, react native.

6
00:00:29,380 --> 00:00:32,320
This kind of feels like CSFs kind of familiar.

7
00:00:32,980 --> 00:00:37,210
Well, it's not really successful and we must really make that distinction.

8
00:00:37,210 --> 00:00:43,150
We must step away from thinking of it as excess because it's a flexible layout engine and it's called

9
00:00:43,150 --> 00:00:45,070
yoga now.

10
00:00:45,100 --> 00:00:47,500
Yoga because it's flexible, get the pun.

11
00:00:47,770 --> 00:00:54,250
And then in case the whole purpose of yoga is to build flexible layouts on any platform with highly

12
00:00:54,250 --> 00:00:56,310
optimized open source layout engine.

13
00:00:56,530 --> 00:00:58,600
So, OK, what does that mean?

14
00:00:59,050 --> 00:01:04,300
Well, kind of like you want to put the pieces of a puzzle in the right order.

15
00:01:04,599 --> 00:01:07,240
Layouts need to be built in certain ways.

16
00:01:07,240 --> 00:01:11,920
And so you want spacing between items and you want this to be this far from that in this to be this

17
00:01:11,920 --> 00:01:13,350
far from that and all that stuff.

18
00:01:13,360 --> 00:01:17,650
And so usually in if you've done CSFs, it's quite the process.

19
00:01:17,650 --> 00:01:20,580
If you're completely new to this, you may have a blank slate and that's great.

20
00:01:21,430 --> 00:01:28,210
That said, laying out an engine or doing a layout engine is quite an endeavor.

21
00:01:28,870 --> 00:01:34,580
And so yoga is being used by Riak native as the layout engine.

22
00:01:35,500 --> 00:01:44,020
Now, you may or may not have heard of flex box flex boxes of specification in which we're trying to

23
00:01:44,230 --> 00:01:49,870
achieve this layout structure with minimal effort.

24
00:01:49,870 --> 00:01:56,530
We're trying to minimize what you need to know, the language you need to know in order to achieve being

25
00:01:56,530 --> 00:01:58,570
able to layout things in a logical way.

26
00:01:59,260 --> 00:02:01,640
And flex box has certain properties.

27
00:02:01,870 --> 00:02:08,650
Now, this is flex box, like if you've done CSFs, it's kind of like CSFs Flex Box, but it differs

28
00:02:08,650 --> 00:02:10,990
a bit and it won't act exactly the same.

29
00:02:10,990 --> 00:02:16,240
So don't be afraid of things don't actually pan out the same way that they do in CSFs.

30
00:02:17,200 --> 00:02:20,170
Now you have absolute and relative layouts.

31
00:02:20,380 --> 00:02:26,820
You have alignment of content, rapping, direction, aspect ratio, justify content, flexibility,

32
00:02:26,890 --> 00:02:32,770
all of these obscure things that you're basically using to put things in the right place on the screen.

33
00:02:32,770 --> 00:02:33,460
That's all they do.

34
00:02:33,670 --> 00:02:38,140
All they do is make sure that you can put things on the right screen at the right place.

35
00:02:39,010 --> 00:02:43,840
So now that we know that, now that we know that this yoga thing is a thing and that it's laying out

36
00:02:43,840 --> 00:02:50,500
stuff on the right spot on the screen and it has all of these properties that help us do this, what

37
00:02:50,500 --> 00:02:51,640
exactly does it look like?

38
00:02:51,640 --> 00:02:52,750
Well, let's take a look at that.

