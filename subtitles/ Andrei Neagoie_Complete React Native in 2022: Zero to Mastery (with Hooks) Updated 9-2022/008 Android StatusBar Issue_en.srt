1
00:00:00,550 --> 00:00:03,670
In the previous video, we saw that on iOS.

2
00:00:04,760 --> 00:00:12,050
We were getting the desired outcome, we were seeing the safe area of you allow us to dodge the top

3
00:00:12,050 --> 00:00:18,580
and the bottom portion of the status bar and the interaction portion, that is the swipe gesture.

4
00:00:19,190 --> 00:00:23,120
But then on Android, we saw that the safe area of you really wasn't doing very much for us.

5
00:00:23,390 --> 00:00:25,680
And we asked ourselves the question, why, Mo?

6
00:00:25,820 --> 00:00:26,570
Why?

7
00:00:27,370 --> 00:00:28,490
Well, let me tell you why.

8
00:00:29,420 --> 00:00:36,860
In effect, safe area view is only for IOPS Mo, I read this, I read this, you told me to read this,

9
00:00:36,860 --> 00:00:38,540
I read this like don't beat a dead horse.

10
00:00:38,540 --> 00:00:39,140
I get it.

11
00:00:39,140 --> 00:00:39,770
I get it.

12
00:00:40,660 --> 00:00:46,000
But what I'm trying to get at here is we need a different solution for Android, and so that different

13
00:00:46,000 --> 00:00:52,310
solution is we need to make sure that the safe area of takes into account that padding, that margin.

14
00:00:52,510 --> 00:00:53,650
So how do we go about that?

15
00:00:53,890 --> 00:00:59,050
Well, we could give it a margin top and we could say like 50 and then it's going to go 50.

16
00:00:59,800 --> 00:01:03,190
Oh, but that really doesn't feel right, because now it's going 50 over here.

17
00:01:03,190 --> 00:01:07,600
Like if I did five hundred here, you're going to see it's going to change on iOS and Android.

18
00:01:07,600 --> 00:01:09,420
We don't want it to change on both.

19
00:01:09,850 --> 00:01:13,140
So if we did 30, well, we could do that.

20
00:01:13,150 --> 00:01:14,800
And that doesn't really feel right.

21
00:01:14,800 --> 00:01:15,460
Maybe 20.

22
00:01:15,700 --> 00:01:19,900
You're playing a guessing game and well, you can play that guessing game and you could import something

23
00:01:19,900 --> 00:01:23,380
like platform from Riak Netiv.

24
00:01:23,380 --> 00:01:23,740
Right.

25
00:01:24,550 --> 00:01:28,270
And we could do something like, well, if you are Android, right.

26
00:01:28,450 --> 00:01:29,470
Is Android.

27
00:01:30,570 --> 00:01:35,130
Is equal to platform dot os, equal to Android.

28
00:01:36,670 --> 00:01:41,050
This is all lowercase, so this is a check where we're checking like basically, hey, are we running

29
00:01:41,050 --> 00:01:42,250
on Android or iOS?

30
00:01:42,490 --> 00:01:46,540
And we could do like an inline check and we could say, like, well, if you're Android.

31
00:01:48,110 --> 00:01:53,930
Question mark, this is starting an in line, if do 20, otherwise do zero, so this is an inline if

32
00:01:53,930 --> 00:01:55,000
statement, right?

33
00:01:55,040 --> 00:01:58,600
This is checking like if we're Android, do 20, otherwise do zero.

34
00:01:59,120 --> 00:02:05,450
And so right now we can see that this works because if we set this to five hundred, well, only Android

35
00:02:05,450 --> 00:02:06,410
is going to change.

36
00:02:06,440 --> 00:02:08,840
OK, so do we play the guessing game then.

37
00:02:09,949 --> 00:02:15,380
I mean, this doesn't feel right because the status bar over here, it has different heights on different

38
00:02:15,380 --> 00:02:16,600
machines, right?

39
00:02:16,640 --> 00:02:21,120
Like on different Android machines, the status bar may be different or different device pixel densities

40
00:02:21,380 --> 00:02:23,300
and all this stuff that goes into account.

41
00:02:23,330 --> 00:02:24,480
So how do we go about this?

42
00:02:25,040 --> 00:02:26,300
OK, well, let's slow it down.

43
00:02:27,280 --> 00:02:28,880
Our problem is the status bar.

44
00:02:29,500 --> 00:02:31,060
So let's go look at status bar.

45
00:02:32,140 --> 00:02:36,400
OK, and if we go look at status bar, we can see that we're using it with the navigator.

46
00:02:36,700 --> 00:02:38,140
OK, good, good, good, good.

47
00:02:38,290 --> 00:02:40,050
We're using a different implementation.

48
00:02:40,060 --> 00:02:41,830
We're using the Expo status bar.

49
00:02:42,160 --> 00:02:45,190
But let's see what the REACT Native Status Bar is giving us.

50
00:02:45,520 --> 00:02:47,320
And we see here a reference.

51
00:02:47,530 --> 00:02:49,200
OK, so let's look at that reference.

52
00:02:49,690 --> 00:02:57,670
So in that reference, we can see that, well, we have constants and those constants are current height,

53
00:02:58,120 --> 00:03:00,160
which is Android only.

54
00:03:00,730 --> 00:03:01,250
OK.

55
00:03:01,350 --> 00:03:02,920
OK, what does this say?

56
00:03:03,400 --> 00:03:06,250
The height of the status bar.

57
00:03:07,240 --> 00:03:12,480
Hodd, the height of the status bar, current height and its android only interesting.

58
00:03:12,880 --> 00:03:15,100
OK, so what does that do for us?

59
00:03:15,130 --> 00:03:19,300
Well, we have a status bar that we're importing here from XPO Status Bar.

60
00:03:20,290 --> 00:03:25,610
And we need to import status bar from Riak need of the react need of package over here, right.

61
00:03:26,260 --> 00:03:28,240
So how are we going to do that?

62
00:03:28,390 --> 00:03:36,730
Well, we can rename the Expo Status Bar by doing something that is the rename action in an import.

63
00:03:36,760 --> 00:03:44,680
If you type as and then you say Expo Status Bar, then we can rename the reference down here and we

64
00:03:44,680 --> 00:03:46,780
can say Expo Status Bar.

65
00:03:50,730 --> 00:03:55,620
OK, so now we need this property current height from Riak native, so what we're going to do is we're

66
00:03:55,620 --> 00:04:03,000
going to import status bar from Riak Native Right status bar and we're going to do something crazy.

67
00:04:04,410 --> 00:04:09,030
First of all, we're going to remove this margin top here real quick, and I want you to see something

68
00:04:09,090 --> 00:04:10,560
we're going to console log.

69
00:04:17,310 --> 00:04:23,100
And I want you to see what the output is going to be in here, so let's open our terminal and you can

70
00:04:23,100 --> 00:04:24,630
see on iOS.

71
00:04:25,550 --> 00:04:30,670
It returned null because its Android only, but on Android, it returned 24.

72
00:04:31,340 --> 00:04:32,040
Interesting.

73
00:04:32,660 --> 00:04:39,350
So what that means is that if we take this property right and we put it over here.

74
00:04:40,300 --> 00:04:43,330
Inside of the margin top that we had.

75
00:04:44,840 --> 00:04:50,120
We're going to be applying the status bar height only to Android.

76
00:04:51,290 --> 00:04:52,730
Well, that looks good, doesn't it?

77
00:04:53,270 --> 00:05:01,840
Look at that, it's spacing itself correctly inside of Android and nothing happened to our safe area

78
00:05:01,850 --> 00:05:02,840
view on iOS.

79
00:05:03,080 --> 00:05:10,210
So we have perfect distance from the status bar on Android and on iOS.

80
00:05:10,250 --> 00:05:19,230
So we have our safe area, so to speak, set up correctly for us to start building our feature.

81
00:05:19,880 --> 00:05:22,140
Well, isn't that amazing?

82
00:05:22,880 --> 00:05:29,660
We're basically set up to know exactly where our content is going to render and the way that we know

83
00:05:29,660 --> 00:05:34,100
this is we can pull up by pressing command m the element inspector.

84
00:05:34,310 --> 00:05:40,670
And we can see in the element, inspector, that everything is in a right spot and you can do this on

85
00:05:40,670 --> 00:05:41,630
iOS as well.

86
00:05:41,750 --> 00:05:47,150
But pressing command control Z or going to the device and pressing shake.

87
00:05:48,110 --> 00:05:53,750
You can pull up the element, Inspector, and we can see where the elements are, what they're spacing

88
00:05:53,750 --> 00:06:00,410
is, and all of that good stuff, so we know now that we're not interfering with this top and this bottom

89
00:06:00,410 --> 00:06:01,070
section.

90
00:06:01,310 --> 00:06:06,920
And so press command control again or command em to hide the element, Inspector, because you don't

91
00:06:06,920 --> 00:06:08,620
always want to show it right.

92
00:06:08,990 --> 00:06:11,000
So you press command em on Android.

93
00:06:11,000 --> 00:06:12,020
The commands are different.

94
00:06:12,170 --> 00:06:14,960
If you're doing this on your phone, just shake your phone shaking.

95
00:06:14,960 --> 00:06:19,880
Your phone will bring up the menu so you can use this element inspectors to verify that what you're

96
00:06:19,880 --> 00:06:22,540
rendering is indeed in the right spot.

97
00:06:23,360 --> 00:06:25,040
That's absolutely amazing.

98
00:06:25,700 --> 00:06:32,210
OK, so now that we know all of this and now that Android and iOS are set up in the right spacing proportions,

99
00:06:32,210 --> 00:06:33,920
we can start building out our features.

