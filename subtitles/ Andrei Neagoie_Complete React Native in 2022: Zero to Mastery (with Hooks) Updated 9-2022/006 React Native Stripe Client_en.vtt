WEBVTT
1
00:00:00.300 --> 00:00:05.790
Now that we know that we need to take the user's credit card information and turn that into a payment

2
00:00:05.790 --> 00:00:08.210
token with Stripe, well, what do we do?

3
00:00:08.280 --> 00:00:09.050
What do we do, Mo?

4
00:00:09.570 --> 00:00:10.440
How do we go about this?

5
00:00:10.440 --> 00:00:11.840
Do we use the straight documentation?

6
00:00:12.120 --> 00:00:15.390
And yes, you could utilize this stripe documentation to go through this entire.

7
00:00:15.840 --> 00:00:21.990
But I've gone through the liberty of tailoring and picking this amazing package for you.

8
00:00:22.500 --> 00:00:25.470
And it's called Stripe Client.

9
00:00:25.470 --> 00:00:31.950
It's a react native stripe wrapper that you put in your Riak native, and it allows you to collect credit

10
00:00:31.950 --> 00:00:38.070
card information and convert it into a strip token with a single line of JavaScript, as well as banking

11
00:00:38.070 --> 00:00:39.510
information, personal information.

12
00:00:39.600 --> 00:00:42.790
And we'll be using it for the credit card information.

13
00:00:43.500 --> 00:00:48.730
Now, Stripe only allows the exchange of card information in the front end.

14
00:00:48.930 --> 00:00:54.720
This does not verify the payment information, just checks that it looks reasonable, etc. So like credit

15
00:00:54.720 --> 00:00:56.540
card, expiration date and all this stuff.

16
00:00:56.550 --> 00:01:01.240
So so we're only doing one aspect of a payment for which is the credit card flow.

17
00:01:01.470 --> 00:01:07.320
There are many different flows inside of Stripe that you could you could do you could do a bank payment

18
00:01:07.320 --> 00:01:07.530
flow.

19
00:01:07.530 --> 00:01:09.300
You could do all of these different things.

20
00:01:09.900 --> 00:01:17.400
Now, as they're saying, you should only embed your stripe publishable in the front end application.

21
00:01:17.730 --> 00:01:19.620
And this is what I told you when we went in.

22
00:01:19.620 --> 00:01:20.550
We looked at Stripe.

23
00:01:20.970 --> 00:01:24.020
Only your publishable key should ever be available in your act.

24
00:01:24.990 --> 00:01:27.580
And this library works with that publishable token.

25
00:01:28.050 --> 00:01:34.950
So what we're going to do is we're going to add this stripe client to our code and then we're going

26
00:01:34.950 --> 00:01:43.590
to look at how exactly we can create a token and we're going to utilize this flow step by step and like

27
00:01:43.590 --> 00:01:45.840
any other feature we've built so far.

28
00:01:46.730 --> 00:01:49.130
You know, we're layering it like a cake.

29
00:01:50.120 --> 00:01:57.410
Delicious chocolate cake of payments because we're going to be making money anyways, that said, what

30
00:01:57.410 --> 00:02:02.220
we need to do here is we need to install this library and then look at the basic implementation.

31
00:02:02.840 --> 00:02:10.280
Now, if we go over to our visual studio code and we open up our terminal here, we want to add the

32
00:02:10.280 --> 00:02:11.170
stripe client.

33
00:02:11.390 --> 00:02:20.360
And this is going to install the stripe client in our project and enable us to basically start our baseline

34
00:02:20.360 --> 00:02:29.460
integration in terms of getting and implementing the very, very first part of getting the straight

35
00:02:29.480 --> 00:02:31.550
payment token from the credit card information.

36
00:02:31.560 --> 00:02:37.340
So the very first step in our payment for which is crucial because without that information, we really

37
00:02:37.340 --> 00:02:38.540
can't process any payments.

38
00:02:39.460 --> 00:02:45.220
And if we go back over here and we look at the example usage, we can see that creating a credit card

39
00:02:45.220 --> 00:02:48.540
token is going to look a little something like this.

40
00:02:48.670 --> 00:02:49.020
Right.

41
00:02:49.030 --> 00:02:57.240
We have this baseline implementation that we could utilize to kind of hack together are our token.

42
00:02:57.940 --> 00:03:00.190
And so we'll be doing something along these lines.

43
00:03:01.300 --> 00:03:08.980
Now that it's installed, we can go ahead and look at what steps we need to take in order to get a straight

44
00:03:08.980 --> 00:03:09.280
talk.

