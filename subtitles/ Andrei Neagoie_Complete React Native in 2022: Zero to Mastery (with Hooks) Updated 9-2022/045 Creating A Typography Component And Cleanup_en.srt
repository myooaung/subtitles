1
00:00:00,810 --> 00:00:04,800
All right, so now we're going to look at the same thing for the tax component, so what I've done is

2
00:00:04,800 --> 00:00:09,600
I've created the typography folder in the source components folder and I've created a text component.

3
00:00:10,050 --> 00:00:13,170
And in that text component is where the magic is going to happen.

4
00:00:13,200 --> 00:00:17,800
So first of all, as always, we have to import styled from styled components native.

5
00:00:18,060 --> 00:00:23,050
This is going to import styled components for us now at the bottom.

6
00:00:23,070 --> 00:00:23,940
Let's start at the bottom.

7
00:00:24,780 --> 00:00:31,680
The first thing we're going to do is we're going to export a component text that takes the styled object

8
00:00:32,310 --> 00:00:34,570
and references the text component.

9
00:00:35,040 --> 00:00:35,420
Right.

10
00:00:35,430 --> 00:00:40,410
So it's taking the text component that's styled components has exported for us.

11
00:00:40,410 --> 00:00:42,990
It's the text component that Riak native also use.

12
00:00:43,320 --> 00:00:50,550
So we're doing styled text and then we're saying, hey, the styles for style text are going to be two

13
00:00:50,790 --> 00:00:52,560
dynamic properties.

14
00:00:52,770 --> 00:01:01,740
So we're using the dollar sign with the bracket in order for us to reference the properties of text

15
00:01:01,920 --> 00:01:09,330
and the properties here, meaning that we would reference if text had, for instance, the variant equal

16
00:01:09,330 --> 00:01:10,230
to something.

17
00:01:12,590 --> 00:01:19,010
If we did something like props over here, we could do props start variant.

18
00:01:19,970 --> 00:01:26,000
Right, and so we're getting the props of the component now, this over here with the brackets again

19
00:01:26,300 --> 00:01:27,750
is a shorthand syntax.

20
00:01:27,770 --> 00:01:32,510
This is a shorthand syntax to take the properties off of the props object directly.

21
00:01:32,510 --> 00:01:33,860
So we're structuring here.

22
00:01:34,220 --> 00:01:35,970
So we're saying, hey, get Verint.

23
00:01:36,830 --> 00:01:40,700
OK, so we're getting variant and theme.

24
00:01:42,450 --> 00:01:47,910
And so with these two properties, what we can do now and with this property up here, so we're doing

25
00:01:47,910 --> 00:01:48,930
two different things.

26
00:01:49,410 --> 00:01:53,910
So on the first line, forty five, we're getting theme off of the props and then we're saying, hey,

27
00:01:54,660 --> 00:01:59,160
run this function, default textiles and give it the theme object.

28
00:01:59,460 --> 00:02:01,300
And what is default textiles?

29
00:02:01,530 --> 00:02:02,370
Well, you guessed it.

30
00:02:02,580 --> 00:02:06,360
It's constructing the defaults that we want for our text.

31
00:02:06,360 --> 00:02:08,970
Any time our text doesn't have a variant at all.

32
00:02:09,210 --> 00:02:17,760
If it so happened to be that way, it would construct the following font family body font with regular

33
00:02:18,150 --> 00:02:20,430
color primary text primary.

34
00:02:20,440 --> 00:02:21,840
So we're getting it all off of the theme.

35
00:02:22,200 --> 00:02:25,830
We're going to say flex, wrap, wrap so that it wraps itself margined bottom.

36
00:02:25,830 --> 00:02:27,600
No margin on the text element.

37
00:02:29,760 --> 00:02:36,630
And so by doing that, we're guaranteed that we have a default amount of styles and then on the second

38
00:02:36,630 --> 00:02:39,600
line we're grabbing the variant and the theme.

39
00:02:40,570 --> 00:02:44,360
And we're saying, hey, we have a variant objects up here, right?

40
00:02:44,410 --> 00:02:45,310
A variance.

41
00:02:46,030 --> 00:02:53,020
So on variance, there is going to be a key, whether it be body label, caption, error or hint.

42
00:02:53,350 --> 00:02:57,690
These are all objects on the object itself.

43
00:02:57,700 --> 00:02:58,030
Right.

44
00:02:58,300 --> 00:03:05,170
So this is the same syntax as are saying, well, body is equal to a function or body is equal to one,

45
00:03:05,170 --> 00:03:05,710
two, three.

46
00:03:05,950 --> 00:03:09,750
We're just saying, hey, reference body from over here.

47
00:03:09,760 --> 00:03:14,250
So we created functions that are named the same way as the key.

48
00:03:14,470 --> 00:03:16,570
So we're using another shorthand syntax here.

49
00:03:16,570 --> 00:03:20,460
So body is declared up, their label is declared up there.

50
00:03:20,770 --> 00:03:23,220
Caption is clear there and they're all declared as functions.

51
00:03:23,440 --> 00:03:27,630
So we're putting keys on the objects of variance.

52
00:03:28,330 --> 00:03:29,230
So these are all keys.

53
00:03:29,230 --> 00:03:36,190
If we did something like object keys, right of variance, we would see exactly what was on there.

54
00:03:36,460 --> 00:03:40,540
And if we went to terminal, we could see that here at the bottom.

55
00:03:40,870 --> 00:03:47,230
I have a couple of errors that I'm contending with right now, located at yada, yada, yada.

56
00:03:47,770 --> 00:03:50,590
It may have logged them, actually, maybe.

57
00:03:51,840 --> 00:03:52,590
Over here.

58
00:03:54,360 --> 00:03:55,660
Where is my law coming in?

59
00:03:55,660 --> 00:04:02,000
Oh, well, obviously, obviously, you need to consult log dumb anyhow.

60
00:04:02,260 --> 00:04:07,420
So when we counsel log, what's going to happen here is we can see that our array, if we do object

61
00:04:07,420 --> 00:04:09,150
keys, we're going to see the array of the variance.

62
00:04:09,310 --> 00:04:15,130
If we just cancel log variants, we're going to see that it's an object that has a body, a caption,

63
00:04:15,400 --> 00:04:17,260
an error, a hint and a label.

64
00:04:17,260 --> 00:04:20,500
And there all the functions are the functions that are declared at the top.

65
00:04:20,649 --> 00:04:26,380
OK, so now what we know is that hate variance can get some type of key, right?

66
00:04:26,450 --> 00:04:30,690
It could be something it could be labeled text color, hint, whatever the case is.

67
00:04:31,120 --> 00:04:38,590
And so what we're going to do here is we're going to say, hey, grab whatever was given to text variant

68
00:04:38,770 --> 00:04:41,320
as the property variant and put it in here.

69
00:04:41,330 --> 00:04:45,300
So if I put a label in here, it's going to grab the label.

70
00:04:45,640 --> 00:04:55,510
So if I did this console, that log of various label, what I'm going to grab here is the function label.

71
00:04:55,840 --> 00:05:00,010
It's going to get that function now that if I invoke that function with the theme, then I'll get the

72
00:05:00,010 --> 00:05:00,610
styles.

73
00:05:00,880 --> 00:05:08,650
So with that, we now know that, well, the variant that we're passing in here is going to go in this

74
00:05:08,650 --> 00:05:10,560
object and going to get the right function.

75
00:05:10,750 --> 00:05:17,680
And so we're going to give that function the theme of style components in order for us to run that function

76
00:05:17,680 --> 00:05:21,100
and get the appropriate styles.

77
00:05:21,490 --> 00:05:25,810
So those appropriate styles are the following right for body.

78
00:05:25,810 --> 00:05:27,700
We're seeing that the font size is going to be body.

79
00:05:27,700 --> 00:05:29,110
So we're adding that on for hints.

80
00:05:29,110 --> 00:05:32,080
We're going to say the font sizes body as well for error.

81
00:05:32,080 --> 00:05:35,590
We're going to change the color to read for caption.

82
00:05:35,590 --> 00:05:40,150
We're going to change the font size in the font weight to font size caption and font.

83
00:05:40,150 --> 00:05:42,760
Weed's bold and all of this code will be available in the resources.

84
00:05:42,760 --> 00:05:47,170
So make sure to go into the resources and get the code from right there.

85
00:05:47,380 --> 00:05:54,010
Any time we're going through code a bit quicker or showing you how these particular portions work,

86
00:05:54,220 --> 00:05:56,410
it's always available in the resources.

87
00:05:57,100 --> 00:06:03,460
Now, over here we have caption font size, font weight is being changed and then we're looking at label

88
00:06:03,760 --> 00:06:06,250
font, family, font size, font weight is being changed.

89
00:06:06,250 --> 00:06:12,040
OK, so now that we know that, hey, based on the variant we give it and we're giving it a default,

90
00:06:12,040 --> 00:06:12,820
which is body.

91
00:06:12,850 --> 00:06:14,770
So it's always going to run this by default.

92
00:06:15,860 --> 00:06:20,470
Now that we know that we can give it any type of variant, we can very easily create variant functions

93
00:06:20,470 --> 00:06:25,060
here to give a different variation of text with different styles.

94
00:06:25,060 --> 00:06:30,460
We could say title, text variant title, and we could give that a specific with the height and all

95
00:06:30,460 --> 00:06:31,150
that good stuff.

96
00:06:31,310 --> 00:06:37,270
OK, so now that we've done this, let's go and optimize our restaurant card here to use this.

97
00:06:37,270 --> 00:06:43,300
So if we go over to our restaurant card, what we can see over here is that I've gone ahead and taken

98
00:06:43,300 --> 00:06:47,740
the liberty of going to import the text directly from typography text.

99
00:06:47,860 --> 00:06:51,910
And from now on, any time we need text, we're going to grab it from over here because this is the

100
00:06:51,910 --> 00:06:52,840
one we want to use.

101
00:06:53,590 --> 00:06:58,630
OK, so over here in our restaurant card, what we're going to do, first of all, is we're going to

102
00:06:58,630 --> 00:06:59,290
remove title.

103
00:06:59,530 --> 00:07:00,250
We don't need that.

104
00:07:00,670 --> 00:07:02,740
We have our text component now that can take variants.

105
00:07:03,010 --> 00:07:03,780
There's no need.

106
00:07:04,300 --> 00:07:05,530
So we're going to go over here.

107
00:07:05,530 --> 00:07:13,360
We're going to say text and text, and we're going to see what it renders out and it renders out this.

108
00:07:13,960 --> 00:07:16,660
So now we can give it a variant.

109
00:07:17,830 --> 00:07:22,660
And if we give it a variant of, let's say, a label, let's try that.

110
00:07:23,110 --> 00:07:25,120
Well, now it looks similar.

111
00:07:26,020 --> 00:07:32,590
And then over here, down here, we're going to give this a variant of caption and that's going to change

112
00:07:32,590 --> 00:07:34,720
the text of the close temporarily.

113
00:07:34,960 --> 00:07:41,560
And we don't need the style tag anymore because the variant caption is already taking into account what

114
00:07:41,560 --> 00:07:47,890
needs to happen for the text to be well, or is it is it so we have to actually call it error?

115
00:07:48,160 --> 00:07:49,000
Oh, that was it.

116
00:07:49,360 --> 00:07:50,560
That was the one we needed.

117
00:07:50,710 --> 00:07:51,340
Exactly.

118
00:07:51,340 --> 00:07:55,150
So we can create variants on variants, on variants for specific use cases.

119
00:07:55,150 --> 00:08:00,880
Now we have an error key, an error variant that's going to give it a read text.

120
00:08:00,880 --> 00:08:04,660
And so we could, for instance, create a variant title just as well.

121
00:08:05,530 --> 00:08:10,930
If we go look at our text component, we have a label which has the font size heading, so.

122
00:08:11,900 --> 00:08:17,030
Honestly, I don't feel like this should be called label, but at the same time it should be called

123
00:08:17,030 --> 00:08:22,310
label because it's not really a title the font is heading, but the font sizes body and the font weight

124
00:08:22,310 --> 00:08:22,790
is medium.

125
00:08:22,790 --> 00:08:24,020
It isn't really a large size.

126
00:08:24,020 --> 00:08:29,720
When I think of a title, I think of something that has a font size that is bigger than font size body

127
00:08:29,720 --> 00:08:34,090
and font size body has a size of 16 pixels.

128
00:08:34,100 --> 00:08:37,520
I'm thinking more along the lines of these ones, these big boys.

129
00:08:37,549 --> 00:08:38,870
Right, so.

130
00:08:39,940 --> 00:08:46,510
In that case, we've now optimized our restaurant card component as far as we can with.

131
00:08:47,620 --> 00:08:52,870
Attributes that can scale across the code base, so we've taken the text component and we've scaled

132
00:08:52,870 --> 00:08:55,660
that out so that we now have text that can be used anywhere.

133
00:08:55,660 --> 00:08:56,350
We need text.

134
00:08:56,500 --> 00:08:59,860
We have a spacer component that can space elements anywhere.

135
00:08:59,860 --> 00:09:01,150
We would need spacing.

136
00:09:01,330 --> 00:09:01,610
Right.

137
00:09:01,630 --> 00:09:05,770
And we have consistent spacing at that because we're set up.

138
00:09:06,840 --> 00:09:12,300
One more thing we may need to do here is I don't like this image component, so we're going to make

139
00:09:12,300 --> 00:09:21,180
this an icon component and we're going to say over here, const icon equals styled dot image and we're

140
00:09:21,180 --> 00:09:27,930
going to give that the width of 15 pixels and the height of 15 pixels.

141
00:09:28,530 --> 00:09:30,120
And that's going to basically.

142
00:09:31,160 --> 00:09:31,950
Fix that up.

143
00:09:32,390 --> 00:09:40,280
OK, so one more thing we need to do here, basically, our entire component here is in good shape,

144
00:09:40,280 --> 00:09:40,520
right?

145
00:09:40,550 --> 00:09:43,160
We have this over here and this over there.

146
00:09:43,640 --> 00:09:47,580
And we're looking like we're we're in good shape for this.

147
00:09:47,990 --> 00:09:56,000
So one more thing we need to do here is we need to take a critical eye at our code and we basically

148
00:09:56,150 --> 00:10:00,020
need to clean up anything that is.

149
00:10:01,000 --> 00:10:06,310
Not necessary right here, and I'm going to give you a pattern for this, one thing we're going to do

150
00:10:06,700 --> 00:10:09,940
is inside of components, inside of the feature restaurant card.

151
00:10:10,150 --> 00:10:14,640
Right now, we have the restaurant info card component.

152
00:10:15,430 --> 00:10:20,560
Now, one file I want us to create as well is going to be restaurant.

153
00:10:23,970 --> 00:10:27,210
Card dot styles torture's.

154
00:10:28,470 --> 00:10:34,350
And what I want us to do in this in this particular file is I want us to go ahead and I want us to take

155
00:10:34,770 --> 00:10:37,230
each and every one of these components.

156
00:10:38,680 --> 00:10:38,920
Right.

157
00:10:39,490 --> 00:10:43,780
Each and every one of these components that we made specifically for the restaurant info, and I want

158
00:10:43,780 --> 00:10:46,510
us to move it into that style folder and let me show you how that works.

159
00:10:46,690 --> 00:10:49,960
So let's, for instance, take the icon and let's go over here.

160
00:10:50,270 --> 00:10:51,160
Just copy paste it.

161
00:10:51,430 --> 00:10:57,610
So one thing we need to do here is we need to import styled from styled components.

162
00:11:02,270 --> 00:11:09,230
And so now we're going to export CONSED icon, so we're going to add the export to the Gonski and one

163
00:11:09,230 --> 00:11:13,580
more thing we want to do in here is we want to go over here and we need to say import.

164
00:11:16,910 --> 00:11:25,100
From and then DOT's Restaurant InFocus styles, so now we have our icon coming from there and if we

165
00:11:25,100 --> 00:11:27,230
look at our card, everything still works.

166
00:11:27,500 --> 00:11:33,050
So what I want us to do is I want us to go ahead and take each and every one of these styled components

167
00:11:33,050 --> 00:11:34,460
and put them in the styles file.

168
00:11:35,090 --> 00:11:37,640
And that's going to be the exercise leading into the next video.

169
00:11:37,850 --> 00:11:39,860
And then we'll look at the solution.

