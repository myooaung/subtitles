WEBVTT
1
00:00:01.819 --> 00:00:08.720
Now it's time to take our request and actually get the data and be able to share it globally, and for

2
00:00:08.720 --> 00:00:11.220
that we're going to use something called riak context.

3
00:00:11.240 --> 00:00:21.530
So first of all, we have to import, react and use state, create context, use effect and use Memmo.

4
00:00:22.130 --> 00:00:24.700
And we're going to get that from react.

5
00:00:25.460 --> 00:00:25.940
All right.

6
00:00:26.270 --> 00:00:27.840
Now that we've imported what we needed.

7
00:00:27.860 --> 00:00:35.270
We also are going to import our restaurant request and restaurant transform.

8
00:00:36.330 --> 00:00:42.660
And we're going to do that from DOT's Restaurant Service now, we need to make sure that both of these

9
00:00:42.660 --> 00:00:47.010
are exported and as we can see, our transform isn't being exported.

10
00:00:47.500 --> 00:00:53.970
OK, so now that we're back in here, we can now see that we have everything we need to start creating

11
00:00:53.970 --> 00:00:54.510
our contacts.

12
00:00:54.540 --> 00:01:02.250
So first of all, we're going to export consed the restaurants context and that's going to be create

13
00:01:02.250 --> 00:01:03.000
context.

14
00:01:03.030 --> 00:01:05.730
This is going to create a global context for us would react.

15
00:01:06.950 --> 00:01:14.930
And then we're going to export CONSED restaurants context provider, and that's going to be the thing

16
00:01:14.930 --> 00:01:19.450
that wraps the app and provides it certain state.

17
00:01:19.940 --> 00:01:24.530
Now what we need to do here is we're going to return.

18
00:01:26.990 --> 00:01:37.070
Restaurant context, dot provider, and that's going to be what's wrapping the app, and so at this

19
00:01:37.070 --> 00:01:39.300
point you may be thinking, OK, what is it rapping?

20
00:01:39.320 --> 00:01:40.580
Well, it's rapping the children.

21
00:01:41.090 --> 00:01:44.960
So it's going to be rapping whatever the children are.

22
00:01:44.990 --> 00:01:47.390
So we're going to grab children off of the props.

23
00:01:48.940 --> 00:01:51.580
And what we can see now is that OK?

24
00:01:52.500 --> 00:02:02.250
With this basic concept, if we go to app, what we can do is we can say import restaurant context provider

25
00:02:02.250 --> 00:02:04.950
from that source slash.

26
00:02:06.390 --> 00:02:14.910
Services, restaurant slash, and then we'll take the context and what we'll do with this is we're going

27
00:02:14.910 --> 00:02:19.640
to wrap it before the navigation container, right?

28
00:02:19.950 --> 00:02:25.350
So at this level, we're going to put the restaurant in context provider and we're going to wrap it

29
00:02:25.350 --> 00:02:29.310
around the navigation container so that all of the navigation has access to the restaurants.

30
00:02:30.310 --> 00:02:35.770
And what will put on this context, first of all, is we're going to give it a value and we're going

31
00:02:35.770 --> 00:02:40.180
to say value is equal to and then we'll say restaurants.

32
00:02:42.470 --> 00:02:49.460
And then we'll say it's an empty array, right, we'll say it's an empty array, and so we'll put one,

33
00:02:49.460 --> 00:02:50.750
two, three in here.

34
00:02:51.680 --> 00:02:57.380
And what I want to make clear here is by setting up this context now, because we wrapped the app level

35
00:02:57.380 --> 00:03:03.170
consideration with the restaurant context provider, what we can do now is we can go inside our restaurant

36
00:03:03.170 --> 00:03:08.390
screen and we can import from react use context.

37
00:03:09.960 --> 00:03:16.470
And what used context, what we're going to do here is we're going to say in our restaurant screen return,

38
00:03:17.160 --> 00:03:18.930
we're going to open the function body.

39
00:03:20.100 --> 00:03:27.360
And by opening up the function body, what we can do is say CONSED restaurant context is equal to use

40
00:03:27.360 --> 00:03:28.050
context.

41
00:03:28.530 --> 00:03:35.580
And so what we need to use here is we need to import the restaurant context.

42
00:03:36.120 --> 00:03:36.500
Right.

43
00:03:36.900 --> 00:03:37.620
This one.

44
00:03:38.640 --> 00:03:46.250
We need to import this, so we're importing this from and then we're going to dot, dot, dot, dot,

45
00:03:46.500 --> 00:03:52.860
dot, dot, dot, slash services, slash restaurant slash restaurant context, and by importing this,

46
00:03:52.860 --> 00:03:54.930
we can now put it in the used context.

47
00:03:56.060 --> 00:04:03.890
Right, and by doing that console, that logging restaurant context, we should see our restaurants

48
00:04:03.890 --> 00:04:05.450
with the empty array value.

49
00:04:05.930 --> 00:04:14.180
So, OK, what we did here is we went into Apgar's and we wrapped it with the restaurant context provider

50
00:04:14.180 --> 00:04:16.070
that we created in restaurant context.

51
00:04:16.279 --> 00:04:22.130
So this is the provider of this context and it returns the restaurant context, the provider, and it

52
00:04:22.130 --> 00:04:23.870
gives it an initial value of restaurants.

53
00:04:23.870 --> 00:04:24.730
One, two, three.

54
00:04:25.010 --> 00:04:29.930
So this is basically a component that's going to do the majority of the heavy lifting and then telling

55
00:04:29.930 --> 00:04:32.540
the context what it's going to contain as a value.

56
00:04:32.660 --> 00:04:39.590
And that value can be passed around along the tree below Apache's, below Aptos.

57
00:04:39.860 --> 00:04:47.240
We can then go and say, OK, we'll use context, the restaurant context, anything below Apgar's now

58
00:04:47.240 --> 00:04:49.370
can use context of restaurant context.

59
00:04:49.610 --> 00:04:54.260
And if it console that logs that context, what we can see actually, you know what?

60
00:04:54.260 --> 00:04:56.990
Let's go ahead and do this.

61
00:04:56.990 --> 00:05:00.010
Let's use it in the data, because right here we have all this mock data.

62
00:05:00.410 --> 00:05:05.600
So instead of doing this, let's go ahead and do restaurant context restaurants.

63
00:05:07.600 --> 00:05:14.170
And then we should see the amount of restaurants populate that we have set up, so if we reload this,

64
00:05:14.920 --> 00:05:17.500
what we're going to see is we have three restaurants here now.

65
00:05:17.830 --> 00:05:22.360
So it's using the array of the restaurant context right here.

66
00:05:22.360 --> 00:05:27.930
One, two, three, four, five, six, seven, eight.

67
00:05:28.210 --> 00:05:30.030
So we'll see eight restaurants populate.

68
00:05:30.460 --> 00:05:37.870
So we know now that one, two, three, four, five, six, seven, eight restaurants are being populated.

69
00:05:37.870 --> 00:05:44.920
So this array is now being used by this screen, right by the screen.

70
00:05:45.940 --> 00:05:50.980
As the data attribute, so the data attribute is coming from this, and if we console that log, that

71
00:05:51.520 --> 00:05:52.840
console log.

72
00:05:53.680 --> 00:05:58.420
Restaurant context, and we open our terminal here.

73
00:05:59.410 --> 00:06:05.350
What we'll see inside of that restaurant context if we scroll to the bottom, is that array of one to

74
00:06:05.350 --> 00:06:05.860
eight.

75
00:06:06.490 --> 00:06:12.820
Now, this is obviously not the data that we want to use, but we've just set up a context that we'll

76
00:06:12.820 --> 00:06:19.650
be able to provide any level below Apgar's with the context and the information.

77
00:06:19.930 --> 00:06:24.550
So in that context, that's where we're going to do our service, call and store the restaurants that

78
00:06:24.550 --> 00:06:27.310
we get back and then have that pass down.

79
00:06:27.610 --> 00:06:34.360
And then eventually we'll be able to load up all of San Francisco's data and you'll see all of these

80
00:06:34.360 --> 00:06:35.380
restaurants change.

