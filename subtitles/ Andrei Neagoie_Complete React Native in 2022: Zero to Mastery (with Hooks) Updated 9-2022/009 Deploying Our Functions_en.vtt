WEBVTT
1
00:00:00.680 --> 00:00:05.010
In this video will be deploying our firebase functions to Firebase for the first time.

2
00:00:05.540 --> 00:00:11.930
If you do not have payment information set up, this is where the bonus section ends for you, unfortunately,

3
00:00:12.530 --> 00:00:16.400
because you require payment information to move beyond this point.

4
00:00:17.120 --> 00:00:21.830
This is because of Firebase and Google's freemium plans.

5
00:00:21.960 --> 00:00:27.290
They require you to set up payment information in order to do these procedures.

6
00:00:27.690 --> 00:00:29.570
OK, so how do we deploy?

7
00:00:29.990 --> 00:00:36.740
Well, if you remember in our package, Jason, of our Functions folder, we had a very specific method

8
00:00:36.980 --> 00:00:40.330
inside of the scripts called The Ploy.

9
00:00:40.880 --> 00:00:42.680
So let's go ahead and run that yarn.

10
00:00:42.830 --> 00:00:43.490
Deploy.

11
00:00:44.510 --> 00:00:50.990
And what that's going to do is it's going to do the same that served us, but it's going to take our

12
00:00:50.990 --> 00:00:53.830
functions and actually deploy them to the cloud.

13
00:00:54.260 --> 00:00:59.830
And so it's creating node 14 beta geocode and places nearby functions.

14
00:01:00.320 --> 00:01:07.730
And if we go over here to our meals to go functions and I quickly reload, we should see our functions

15
00:01:08.060 --> 00:01:08.770
pop up.

16
00:01:09.170 --> 00:01:10.110
There we go.

17
00:01:10.130 --> 00:01:11.070
It's that simple.

18
00:01:11.330 --> 00:01:17.450
And so if we took geocode here, right, it's served now at this early this specific URL.

19
00:01:17.660 --> 00:01:23.330
Also be aware that all of the information that you see on my screen, you cannot reuse it because we

20
00:01:23.330 --> 00:01:29.230
will be removing these functions and all of the credentials that you see me use throughout this section.

21
00:01:29.510 --> 00:01:35.450
So please do not try to use the credentials you see anywhere here or the URL you see anywhere here as

22
00:01:35.450 --> 00:01:36.580
they will not work for you.

23
00:01:36.860 --> 00:01:39.580
You have to release your own functions in order for this to work.

24
00:01:39.950 --> 00:01:44.660
So if we take this URL and we were to surf to it by default, it's not going to really do any.

25
00:01:45.020 --> 00:01:50.600
But if we do questionmark city equal to Antwerp, well, that's going to return us to geometry information

26
00:01:50.600 --> 00:01:51.220
for Antwerp.

27
00:01:51.680 --> 00:01:55.840
And if we do the same for Chicago, that's going to return us Chicago's information.

28
00:01:55.850 --> 00:02:00.470
So our mock information is now operating behind this public yooralla.

29
00:02:00.680 --> 00:02:06.020
And it was that easy to release a server that now has our mock information available.

30
00:02:06.590 --> 00:02:13.430
And then if we take this and we said questionmark, location is equal to and we went and we grabbed

31
00:02:13.790 --> 00:02:21.680
from our places, Mark Fooler, a certain location here, we would see that we'll get our information

32
00:02:21.680 --> 00:02:21.860
back.

33
00:02:21.860 --> 00:02:26.120
So all Vermaak information is now being served live behind these URLs.

34
00:02:26.390 --> 00:02:27.770
And it was that simple.

35
00:02:28.620 --> 00:02:31.530
OK, well, how do I get this to work live then?

36
00:02:32.180 --> 00:02:35.570
Well, it's fairly simple at this point since we set everything up so beautifully.

37
00:02:35.810 --> 00:02:45.020
If we go over to our location service and we say over here that will replace this part with this, then

38
00:02:45.020 --> 00:02:54.050
we should basically, in a very simple way, be linking our actual output of our app to a live server,

39
00:02:54.440 --> 00:02:57.710
to a live server being hosted on firebase functions.

40
00:02:58.100 --> 00:03:00.290
And it works right now.

41
00:03:00.590 --> 00:03:09.710
We can search and get our mock information back from our firebase function as if our app was actually

42
00:03:09.710 --> 00:03:10.520
running locally.

43
00:03:10.520 --> 00:03:12.450
So our data is now live.

44
00:03:12.800 --> 00:03:15.920
OK, it's still marked data, but it's live.

45
00:03:16.160 --> 00:03:21.870
And it was that easy to serve our functions, to update them, to deploy them.

46
00:03:22.100 --> 00:03:28.460
And right now we can see health, we can see logs, we can see how many requests are going on.

47
00:03:28.460 --> 00:03:29.780
We can view the usage.

48
00:03:29.930 --> 00:03:33.680
We have all of this information about how our functions are being used.

49
00:03:33.890 --> 00:03:40.160
We've created two very small interfaces for our app to interface with to get data back.

50
00:03:40.980 --> 00:03:49.020
It was that simple, we now get data back in our app from Firebase, not locally anymore, and it's

51
00:03:49.020 --> 00:03:50.370
still the same Mark data.

52
00:03:50.370 --> 00:03:55.200
And now that we've reached this point, well, nothing stopping us from integrating with Google now,

53
00:03:55.200 --> 00:03:55.530
is it?

54
00:03:56.760 --> 00:03:57.390
Awesome.

55
00:03:57.690 --> 00:04:03.720
So from here, we'll be looking at, well, how do we extend out what we've done so far, how do we

56
00:04:03.720 --> 00:04:06.300
scale it and how do we integrate with Google?

57
00:04:06.690 --> 00:04:07.680
Well, let's take a look at that.

