1
00:00:00,610 --> 00:00:06,130
One thing we are seeing happening in the app is everything is rendering properly, but the address,

2
00:00:06,130 --> 00:00:07,590
the address doesn't look right.

3
00:00:08,050 --> 00:00:09,940
And so here's where I would challenge you.

4
00:00:09,940 --> 00:00:16,219
If we go look at the mock data and we go look at where the address is actually being defined.

5
00:00:16,780 --> 00:00:17,130
Right.

6
00:00:17,500 --> 00:00:24,190
If we look at kind of the police I.D., the scope, the reference, and then we we look here address

7
00:00:24,190 --> 00:00:25,480
isn't called address.

8
00:00:25,990 --> 00:00:27,640
It's called vicinity.

9
00:00:28,330 --> 00:00:30,480
That was a miss on our part, wasn't it?

10
00:00:31,210 --> 00:00:35,290
Or rather sometimes sometimes in an application.

11
00:00:35,290 --> 00:00:40,720
What you want is you want to translate what the API is giving you, just like we created these extra

12
00:00:40,720 --> 00:00:43,450
properties is open now, is closed temporarily.

13
00:00:43,450 --> 00:00:48,720
Sometimes you want to translate a property to a different name.

14
00:00:49,360 --> 00:00:54,340
And so what's important to know here is that it's not that facility is wrong.

15
00:00:54,940 --> 00:01:03,940
It's rather that we want to name it address so we could do something like address is restaurant dot

16
00:01:04,000 --> 00:01:08,740
facility and that would give us the address as a variable.

17
00:01:08,860 --> 00:01:13,990
Now, vicinity is still on the object, obviously, because we're spreading restaurant and we could

18
00:01:13,990 --> 00:01:16,540
do something like removing the key.

19
00:01:16,990 --> 00:01:17,260
Right.

20
00:01:17,260 --> 00:01:18,460
We could delete the key.

21
00:01:18,490 --> 00:01:21,880
We could go through that transformation step and we can look at that later.

22
00:01:21,880 --> 00:01:25,660
Once we add utility functions to clean up some of the things that we're doing in here.

23
00:01:26,140 --> 00:01:28,390
For now, we're just going to leave it as is.

24
00:01:28,870 --> 00:01:36,340
And so if we go inside and we save this and we go back inside our app, what we can see is, oh, OK,

25
00:01:37,060 --> 00:01:40,780
now the addresses are rendering properly.

26
00:01:41,170 --> 00:01:46,630
So we had a bug, but it was an intentional bug because we had changed the shape of what we expect it

27
00:01:46,630 --> 00:01:47,380
to come back.

28
00:01:47,590 --> 00:01:56,590
But we hadn't checked our mock data properly enough to realize that address was actually named vicinity

29
00:01:56,590 --> 00:01:57,250
in the data.

30
00:01:57,280 --> 00:02:00,760
And so this is part of the trickery of when working with APIs.

31
00:02:01,000 --> 00:02:03,070
The API may give you something.

32
00:02:03,220 --> 00:02:05,320
You may expect it to be named something else.

33
00:02:05,470 --> 00:02:08,050
You may set up a component in a specific shape.

34
00:02:08,850 --> 00:02:16,170
But that shape doesn't match the reality of the data, and so this is why I'm doing this specifically

35
00:02:16,170 --> 00:02:20,220
to show you the power of separating out.

36
00:02:20,310 --> 00:02:25,620
First of all, we separated out our request and then separating out the transformation and pushing it

37
00:02:25,620 --> 00:02:32,280
to the edge of the system because we have full control here over what's coming in and what it's supposed

38
00:02:32,280 --> 00:02:32,970
to look like.

39
00:02:33,210 --> 00:02:41,670
And we have changed it with one line of code and suddenly the UI has all of the benefit of it because

40
00:02:41,670 --> 00:02:43,700
it's rendering out properly now.

41
00:02:44,450 --> 00:02:47,450
Right, and so that's extremely important to note here.

