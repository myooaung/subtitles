WEBVTT
1
00:00:00.570 --> 00:00:03.070
There's a couple of things I don't like about this implementation.

2
00:00:03.780 --> 00:00:08.039
First of all, we have these statements here and we have this assignment clause.

3
00:00:08.400 --> 00:00:13.310
And I really feel that this is an unnecessary step that is not required.

4
00:00:13.980 --> 00:00:19.040
Now, with that said, we could also optimize out of this to be a separate function.

5
00:00:19.500 --> 00:00:22.050
And so let's go ahead and figure out how to do that.

6
00:00:22.770 --> 00:00:26.630
So first off, these temporary placeholders we're going to leave in place for now.

7
00:00:27.210 --> 00:00:34.890
But what I want to do is I want to create an object called Tab Icon, and this object is going to have

8
00:00:35.040 --> 00:00:35.850
two properties.

9
00:00:36.300 --> 00:00:39.340
First of all, the key is going to be the name of the root.

10
00:00:39.600 --> 00:00:43.190
So this is equal to the name of any root that we define.

11
00:00:43.770 --> 00:00:50.910
And then second of all, the value is going to be the actual icon name that we're going to reference.

12
00:00:51.160 --> 00:00:57.210
So then we have map and then we have Mudie Map and then we have settings.

13
00:00:58.300 --> 00:01:04.300
And that's going to be M.D. settings, and this is a small optimization that we're doing here just to

14
00:01:04.300 --> 00:01:11.860
get rid of some logic, then we're going to define a function called CONSED Screen options, and that's

15
00:01:11.860 --> 00:01:13.270
going to again, have the root.

16
00:01:15.070 --> 00:01:19.090
And then what we're going to do is we're going to open the function body.

17
00:01:20.460 --> 00:01:22.740
And we're going to take this logic.

18
00:01:26.930 --> 00:01:34.940
We know that it's going to return an object and that object is going to be Tabbaa icon and then we're

19
00:01:34.940 --> 00:01:38.600
going to define const Tabbaa icon as a function.

20
00:01:41.290 --> 00:01:42.730
And that's going to return.

21
00:01:44.400 --> 00:01:48.960
A eye on icons, so we know that this is going to happen.

22
00:01:51.060 --> 00:01:51.400
Right.

23
00:01:52.050 --> 00:01:58.530
So with well, let me just remove that very real quick so we know that this is going to happen, but

24
00:01:58.530 --> 00:01:59.880
there's a couple of issues here.

25
00:02:00.480 --> 00:02:07.500
OK, so first off, let's remove everything in between here and let's say that this one is screen options.

26
00:02:08.009 --> 00:02:11.070
So this is going to reference our function over here.

27
00:02:13.330 --> 00:02:15.430
Now, our function over here has the name.

28
00:02:16.460 --> 00:02:21.830
Right, and the right name is important for us to determine which icon we're going to get.

29
00:02:22.550 --> 00:02:26.800
So first off, let's simplify this, right?

30
00:02:27.980 --> 00:02:34.610
Let's say that const ikon is equal to and then we know that our tab icon.

31
00:02:36.240 --> 00:02:42.390
Has the key that is equal to the root name, so root that name.

32
00:02:43.690 --> 00:02:51.130
OK, so knowing that we know now which icon we want to pick, but we need this icon and we'll call it

33
00:02:51.130 --> 00:02:55.000
icon mean, we need this icon name to be given to.

34
00:02:56.230 --> 00:02:57.530
Dysfunction over here.

35
00:02:58.150 --> 00:03:01.370
Now we know that dysfunction is going to return on icons.

36
00:03:01.390 --> 00:03:02.590
So let's simplify this.

37
00:03:02.960 --> 00:03:05.710
We know that this is a function that has.

38
00:03:07.030 --> 00:03:13.520
Size and color has properties on this function.

39
00:03:13.900 --> 00:03:16.190
These are two properties on this function, so we know that.

40
00:03:16.900 --> 00:03:21.850
So if we were to write it like this, what we now know is that.

41
00:03:22.850 --> 00:03:32.750
Icon name is available in this function, so we know now by doing this that we have the right icon.

42
00:03:33.840 --> 00:03:40.500
So this code already works and this is completely fine, but if we wanted to optimize it even further,

43
00:03:40.500 --> 00:03:47.070
we could say that this was a function that returns a function and takes in icon name as the property.

44
00:03:49.140 --> 00:03:50.820
And has that.

45
00:03:51.770 --> 00:03:58.400
As a further simplification, so we could, for instance, do this and we can say Tabbaa icon is tab

46
00:03:59.060 --> 00:04:05.130
bar icon, icon name, and that would also do it for us.

47
00:04:05.810 --> 00:04:08.900
And so this is another way of writing that function.

48
00:04:11.830 --> 00:04:16.060
I think that the previous week we wrote it right this way.

49
00:04:17.529 --> 00:04:24.430
Is way more appealing, so let's not overindulge in splitting things out, but I feel like creating

50
00:04:24.730 --> 00:04:26.620
the screen options this way.

51
00:04:27.830 --> 00:04:30.650
And so let's name this function, create screen options.

52
00:04:34.260 --> 00:04:40.710
And screen options is equal to create screen options, and we know that this one is going to be creating

53
00:04:40.830 --> 00:04:43.290
the entirety of the tree.

54
00:04:44.240 --> 00:04:50.930
So we've optimized away the statements here by introducing this object that has the key of the root

55
00:04:50.930 --> 00:04:58.550
and the name of the icon, and by doing this, we now can easily reference correctly each and every

56
00:04:58.550 --> 00:05:01.250
individual icon that we need based on the root.

57
00:05:03.070 --> 00:05:11.110
And our app still works, but we got rid of some if logic, and so that's absolutely amazing because

58
00:05:11.110 --> 00:05:12.970
we've simplified our code even further.

