1
00:00:00,790 --> 00:00:03,940
Now that we have the full end to end payment, slow processing.

2
00:00:05,190 --> 00:00:12,990
In less than 26 lines of code and in total, maybe one hundred fifty end to end, we've done a great

3
00:00:12,990 --> 00:00:13,400
job.

4
00:00:13,410 --> 00:00:20,460
We see Paghman Show up and Stripe and we have a solid foundation on which we can build the most complex

5
00:00:21,120 --> 00:00:22,860
of Chekov's right.

6
00:00:23,470 --> 00:00:26,010
And so with that, one thing is missing.

7
00:00:27,690 --> 00:00:35,040
We don't see anything happening when we do any of this right now, all of this is contingent on us actually

8
00:00:35,040 --> 00:00:37,010
having utilization.

9
00:00:38,130 --> 00:00:45,140
And so by utilization, I mean utilizing this promise to trigger the UI to do OK.

10
00:00:45,360 --> 00:00:50,090
Well, with that said, there's a couple of things that we need to we need to do right now.

11
00:00:50,760 --> 00:00:55,050
First of all, we need to process the response of this.

12
00:00:55,260 --> 00:01:01,830
So you you heard we thought then and with the dot then we can get the result.

13
00:01:02,580 --> 00:01:04,739
And with the dot catch, we can get the error.

14
00:01:05,580 --> 00:01:09,990
And now we could also go ahead and use an async away here to try catch.

15
00:01:09,990 --> 00:01:11,460
That's completely fine as well.

16
00:01:12,360 --> 00:01:14,280
I'm choosing to do it this way in this case.

17
00:01:15,190 --> 00:01:22,210
And when we get the result, well, what are we going to do, because we don't necessarily know what's

18
00:01:22,210 --> 00:01:22,780
going on.

19
00:01:23,140 --> 00:01:30,550
So first of all, let's add some voting state, let's say is loading and let's say set is loading.

20
00:01:31,690 --> 00:01:37,840
And let's set that to false, and then once you start your payment request, we're going to set is loading

21
00:01:37,840 --> 00:01:38,290
to true.

22
00:01:39,290 --> 00:01:44,300
And while it's loading, if it succeeds, we're going to set is loading the false.

23
00:01:46,500 --> 00:01:49,500
And if it airs, we're also going to set is loading to false.

24
00:01:50,250 --> 00:01:52,800
OK, so in both those scenarios, we're caught up.

25
00:01:53,800 --> 00:02:03,370
If it errors, we'll have a const error that's going to catch the error potentially, but rather than

26
00:02:03,370 --> 00:02:09,630
do that, maybe we should do something else, maybe we should have a more holistic approach to this.

27
00:02:09,639 --> 00:02:14,190
So, first of all, let's let's take our voting state and let's let's just complete that.

28
00:02:14,860 --> 00:02:18,550
So if we're loading let's put it right here is loading.

29
00:02:19,620 --> 00:02:27,890
Then we want to do something if we are loading, we want to show a payment processing.

30
00:02:28,900 --> 00:02:35,460
Component, that payment processing component is going to come from, you guessed it, checkout styles

31
00:02:35,830 --> 00:02:40,200
now over here, what we're going to need to do is we're going to need to export a component.

32
00:02:40,220 --> 00:02:48,580
So we're going to say export const payment processing, and that's going to be a styled activity indicator.

33
00:02:49,450 --> 00:02:52,270
An activity indicator is going to come from.

34
00:02:53,450 --> 00:02:58,880
Riak made of paper, so we're going to put it right here and then what we're going to do is we're going

35
00:02:58,880 --> 00:03:01,730
to import that in our checkout screen.

36
00:03:02,300 --> 00:03:06,490
So in checkout screen, we're going to import payment processing.

37
00:03:07,100 --> 00:03:08,950
And so now we can utilize that.

38
00:03:08,960 --> 00:03:15,230
So let's go back to checkout styles and what we need to do inside of checkout Styles's.

39
00:03:15,500 --> 00:03:18,800
We need to set certain attributes for this and styles.

40
00:03:18,800 --> 00:03:23,750
So we're going to do that attributes and we're going to say that the size is going to be one hundred

41
00:03:23,750 --> 00:03:24,300
twenty eight.

42
00:03:25,070 --> 00:03:37,990
And we're also going to say that the animating is true and color should be colors thought blue.

43
00:03:38,120 --> 00:03:38,780
Three hundred.

44
00:03:39,410 --> 00:03:41,240
Now color is going to come from.

45
00:03:42,290 --> 00:03:44,030
Colors from Riak native pepper.

46
00:03:44,930 --> 00:03:51,590
And some of the styles that we need to give this are as follows, we need to say that this is going

47
00:03:51,590 --> 00:03:59,110
to have a position absolute we're going to give it a top of 50 percent.

48
00:03:59,750 --> 00:04:04,820
We're going to say from the left that it's going to come in at thirty five percent and we're going to

49
00:04:04,820 --> 00:04:07,170
give it a Z index of nine nine nine.

50
00:04:07,880 --> 00:04:10,280
And so by doing this now, if we do more.

51
00:04:11,370 --> 00:04:21,390
And Beanie and we just hit pay, we're going to see this start to animate and now our payment will start

52
00:04:21,390 --> 00:04:26,360
processing, but clearly it isn't ever going to false.

53
00:04:26,370 --> 00:04:33,570
So if we go to checkout screen, something is clearly going wrong in the catch and the thought then.

54
00:04:34,140 --> 00:04:40,640
So clearly, we aren't hitting these scenarios like we should be right.

55
00:04:41,070 --> 00:04:44,630
Something inside of here isn't happening.

56
00:04:44,850 --> 00:04:46,880
And so we're hitting this use case.

57
00:04:47,310 --> 00:04:48,660
So we also have to set in.

58
00:04:48,660 --> 00:04:55,260
Is loading false over here because we don't have a car ID otherwise loading will continue to spin.

59
00:04:55,920 --> 00:04:57,150
So if we reload here.

60
00:04:58,120 --> 00:05:05,560
And then we go into order special and now we fill in Mo Beeny and we pay for only we won't even see

61
00:05:05,560 --> 00:05:06,780
it flash because it won't happen.

62
00:05:07,360 --> 00:05:14,770
So if we do four to four to four to four to four, two and so forth, and then we hit pay, now we'll

63
00:05:14,770 --> 00:05:20,290
see it come up and it'll process to true our it'll process the false once it hits one of these scenarios.

64
00:05:20,800 --> 00:05:26,140
Now, one other thing I want to do is while this is loading, I want to disable these two functions

65
00:05:26,350 --> 00:05:34,150
because there's nothing worse than having to handle a button state while something is happening.

66
00:05:34,540 --> 00:05:38,750
So we want to disable these buttons as quickly as we can.

67
00:05:39,040 --> 00:05:42,100
So we're going to disable them while it is loading.

68
00:05:42,550 --> 00:05:46,350
And the same is true for the payment, but we're going to disable it while it's loading.

69
00:05:46,930 --> 00:05:53,590
And so what will happen here is now if I press pay, both of them will turn off until the payment has

70
00:05:53,590 --> 00:05:54,130
returned.

71
00:05:54,190 --> 00:05:54,520
Right.

72
00:05:54,880 --> 00:05:59,230
So they're basically turning themselves off while the payment this process.

73
00:06:00,480 --> 00:06:01,090
Amazing.

74
00:06:01,470 --> 00:06:05,550
So with those states, though, what else can we achieve?

75
00:06:06,270 --> 00:06:13,590
Well, maybe we should add some navigation for a success and an error case, because those would be

76
00:06:13,590 --> 00:06:20,040
quite useful for us in order to know what exactly happened after the payment process.

77
00:06:20,190 --> 00:06:21,500
So let's look at how to do that.

