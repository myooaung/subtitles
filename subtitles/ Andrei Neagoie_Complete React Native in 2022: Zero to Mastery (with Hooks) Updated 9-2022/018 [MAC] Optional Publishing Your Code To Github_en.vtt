WEBVTT
1
00:00:00.480 --> 00:00:09.120
For my next magic trick, I'm going to make you take your code and put it on GitHub now wait for it,

2
00:00:09.450 --> 00:00:16.860
because all you need to do right now is make sure you made your GitHub account and make sure that you're

3
00:00:16.860 --> 00:00:20.370
logged into GitHub on the main browser of your computer.

4
00:00:20.730 --> 00:00:25.920
And then let's hop back to Visual Studio Code, because the last thing we did, the last thing we did

5
00:00:25.920 --> 00:00:30.020
was we had some changes that we stored.

6
00:00:30.030 --> 00:00:33.110
And so let's undo some of these random changes that happened here.

7
00:00:33.420 --> 00:00:36.870
We had all of our changes stored in GIT.

8
00:00:37.350 --> 00:00:43.260
But what we need to know here is that git is tracking everything locally on our computer and all of

9
00:00:43.260 --> 00:00:49.230
the revisions and all of the changes that are happening to our files are just happening on our hard

10
00:00:49.230 --> 00:00:50.220
disk locally.

11
00:00:50.610 --> 00:00:54.090
And by pushing them up, pushing is determined.

12
00:00:54.090 --> 00:00:56.000
Get by pushing them up to GitHub.

13
00:00:56.220 --> 00:00:57.870
Now they're in the cloud.

14
00:00:58.230 --> 00:01:02.340
Now we're creating a back up that is public and this is optional.

15
00:01:02.340 --> 00:01:04.680
Obviously, you do not need to do this.

16
00:01:04.830 --> 00:01:10.200
You can still do all of your get stuff locally and you can forego doing the GitHub thing if you want.

17
00:01:10.440 --> 00:01:17.190
But it is an industry standard and it's good to learn how GitHub works because it's a tool that is widely

18
00:01:17.190 --> 00:01:18.120
used in the industry.

19
00:01:18.450 --> 00:01:22.120
So we have our GitHub account are empty shell of git hub.

20
00:01:22.800 --> 00:01:27.840
Now, if we went here and we said push, push to where are we going to push you?

21
00:01:27.840 --> 00:01:30.690
Well, your repository has no remotes configured.

22
00:01:30.690 --> 00:01:32.940
A remote is a place to push Pushtu.

23
00:01:33.180 --> 00:01:36.570
So remote in this case would be git hub.

24
00:01:37.050 --> 00:01:38.790
So that's where we want to end up pushing, too.

25
00:01:38.790 --> 00:01:42.180
So let's say add remote now we don't have any remotes.

26
00:01:42.180 --> 00:01:45.510
Please provide a tutorial or add remote from GitHub.

27
00:01:45.510 --> 00:01:47.510
So let's click that because that sounds nice.

28
00:01:47.700 --> 00:01:48.840
Let's go about doing that.

29
00:01:49.650 --> 00:01:50.100
Huh?

30
00:01:50.720 --> 00:01:50.950
Wow.

31
00:01:51.240 --> 00:01:52.200
What's happening here?

32
00:01:52.810 --> 00:01:54.690
Well, what's what's what's going on?

33
00:01:55.650 --> 00:01:56.410
Is it stuck?

34
00:01:56.790 --> 00:02:03.900
Well, if this happens to you where it just stuck in the state, make sure to put Visual Studio Code

35
00:02:04.380 --> 00:02:12.930
and restart visual studio code, make sure that you do this because sometimes it can get stuck in this

36
00:02:12.930 --> 00:02:13.380
state.

37
00:02:13.650 --> 00:02:16.500
OK, so let's see here.

38
00:02:17.190 --> 00:02:19.440
If we go back to source control.

39
00:02:20.280 --> 00:02:20.700
Right.

40
00:02:21.790 --> 00:02:25.900
And we opened recent we opened documents for focus time.

41
00:02:26.990 --> 00:02:35.180
It seems that my specific installation of visual studio code is corrupt, so let's let's go and fix

42
00:02:35.180 --> 00:02:35.530
that.

43
00:02:35.540 --> 00:02:38.350
So if I say visual studio code, what's going on here?

44
00:02:38.900 --> 00:02:43.400
It seems that my visual studio code corrupted itself temporarily and I had to restart it.

45
00:02:43.820 --> 00:02:48.260
OK, so let's go ahead and open recent focus time.

46
00:02:49.080 --> 00:02:54.990
All right, so focus time is over here, and if we go back to our source control, we already committed

47
00:02:54.990 --> 00:02:57.860
all of our changes locally, but now we want to push them to GitHub.

48
00:02:58.140 --> 00:03:03.100
So we said Pushtu and we set aside remote and then we said Adelmo from GitHub.

49
00:03:03.450 --> 00:03:04.730
So now it's working again.

50
00:03:04.740 --> 00:03:05.820
So this can happen.

51
00:03:06.210 --> 00:03:11.910
You can corrupt your local whatever visual studio code is not a perfect software.

52
00:03:11.910 --> 00:03:12.720
Things can happen.

53
00:03:12.720 --> 00:03:15.060
So make sure to restart Visual Studio code.

54
00:03:15.060 --> 00:03:20.790
If you get stuck on a step or it's not showing you a certain thing, restarting usually solves the problem.

55
00:03:20.790 --> 00:03:22.620
Otherwise reach out to our community.

56
00:03:22.630 --> 00:03:25.380
So we're going to hit allow and now it's going to go over here.

57
00:03:25.380 --> 00:03:28.460
It's going to say, hey, authorized visual studio code to access GitHub.

58
00:03:28.770 --> 00:03:32.220
Cool, let's do that and let's authorize GitHub.

59
00:03:32.940 --> 00:03:34.670
Let's open visual studio code now.

60
00:03:34.680 --> 00:03:36.840
So now it's going to ask you to open visual studio code.

61
00:03:36.840 --> 00:03:37.500
So let's do that.

62
00:03:37.950 --> 00:03:41.040
And so now it's going to say allow extension to open the AURI.

63
00:03:41.580 --> 00:03:43.650
What we're going to say, we're going to allow that as well.

64
00:03:43.660 --> 00:03:49.560
So this process is the authentication between GitHub and Visual Studio Code, our coding environment.

65
00:03:49.830 --> 00:03:50.820
So let's say open.

66
00:03:52.720 --> 00:03:59.520
And so writing login information to key chain failed channel name encryption timed out, huh?

67
00:04:00.070 --> 00:04:01.180
What is happening there?

68
00:04:01.190 --> 00:04:02.800
So we'll go to the troubleshoot guide.

69
00:04:02.980 --> 00:04:10.090
If the key change throws an error, then we need to go to the keychain app and we need to unlock it.

70
00:04:11.060 --> 00:04:12.620
Huh, interesting.

71
00:04:12.890 --> 00:04:18.329
OK, so we're in the Log-in that's done, we're in the system, so what do we need to do here?

72
00:04:18.680 --> 00:04:21.050
Open the keychain app and right.

73
00:04:21.050 --> 00:04:25.350
Click on the login keychain and lock and unlock it again.

74
00:04:25.550 --> 00:04:27.830
So let's say lock the key chain.

75
00:04:28.820 --> 00:04:33.590
And let's say unlock the keychain and let's say our password.

76
00:04:34.290 --> 00:04:36.230
OK, so we unlocked it again.

77
00:04:37.250 --> 00:04:41.600
And so now what we want to do is we want to go back to Visual Studio Code.

78
00:04:42.740 --> 00:04:48.020
All of a sudden, we have access interesting because it failed before, right?

79
00:04:48.650 --> 00:04:52.630
So now locking and unlocking the key chain solve that issue.

80
00:04:53.730 --> 00:04:59.340
So let's see if it actually really did solve the issue, so let's go back to GitHub and let's create

81
00:04:59.340 --> 00:05:03.450
a repository, new repository and let's call it focus time.

82
00:05:04.260 --> 00:05:06.360
And I'm going to call it Mac specifically.

83
00:05:07.060 --> 00:05:09.450
I'm going to say my focus to map.

84
00:05:10.370 --> 00:05:16.610
Right, but this is going to create the repository, and then once I create this repository, I can

85
00:05:16.610 --> 00:05:20.000
go back into visual studio code.

86
00:05:20.750 --> 00:05:29.270
And what I want to do here is I want to go back to here remote pusch I want to say Pushtu and then say

87
00:05:29.450 --> 00:05:30.350
no remotes configure.

88
00:05:30.360 --> 00:05:36.410
So let's add a remote and then let's say at a remote from GitHub and now it should have access to everything.

89
00:05:37.530 --> 00:05:39.040
So what just happened?

90
00:05:39.210 --> 00:05:43.680
First of all, let's select focus time back and then let's provide a remote name and we're going to

91
00:05:43.680 --> 00:05:44.610
call it origin.

92
00:05:46.230 --> 00:05:49.950
And so once we set up Origin, we can say.

93
00:05:52.200 --> 00:05:56.400
And then we can say Master has no upstream branch, would you like to publish?

94
00:05:56.430 --> 00:05:56.970
Yes.

95
00:05:57.940 --> 00:06:03.550
So now we're publishing and you can see the little arrow going on here, we're going to say don't do

96
00:06:03.550 --> 00:06:05.100
not periodically run, get fetch.

97
00:06:05.110 --> 00:06:08.600
This means the Visual Studio code is going to pull code for you.

98
00:06:08.620 --> 00:06:09.400
We don't want that.

99
00:06:11.210 --> 00:06:14.420
So let's go over here and if we refresh the screen.

100
00:06:15.260 --> 00:06:16.460
Our code is suddenly here.

101
00:06:17.030 --> 00:06:18.950
OK, so let's slow this down.

102
00:06:19.100 --> 00:06:20.270
What happened here?

103
00:06:20.570 --> 00:06:25.850
Well, first of all, we went through the process of linking Visual Studio Code to GitHub.

104
00:06:26.360 --> 00:06:29.960
Then we went through the process of going to our key chain.

105
00:06:30.110 --> 00:06:30.560
Right.

106
00:06:30.590 --> 00:06:31.670
Our key chain up.

107
00:06:32.660 --> 00:06:35.480
Because we saw an error and we locked.

108
00:06:36.970 --> 00:06:46.360
We locked and unlocked our key chain and filled in our users password here, the password for the user

109
00:06:46.360 --> 00:06:52.750
that you login with on your Mac and locking and unlocking that key chain allowed visual studio code

110
00:06:52.990 --> 00:06:57.070
to now suddenly have the ability to push to.

111
00:06:58.440 --> 00:07:07.350
Origin, and by allowing that, we can now push changes to GitHub, so let's say if I, for instance,

112
00:07:07.350 --> 00:07:15.840
added a console log here, this is going to GitHub and I said console dot log has the message.

113
00:07:15.840 --> 00:07:19.810
And I staged this change and I committed this change.

114
00:07:20.190 --> 00:07:25.840
Well, if we go look on GitHub right now, right on our GitHub and we said it was going to be an app

115
00:07:25.860 --> 00:07:29.460
that yes, well, currently there is no console log there.

116
00:07:29.700 --> 00:07:32.370
But if we go inside here and we say.

117
00:07:35.320 --> 00:07:43.390
Right, we just say push, well, now it's going to push and as it pushes, if we go back into GitHub

118
00:07:43.720 --> 00:07:46.540
and we refresh, this is going to get up.

119
00:07:46.930 --> 00:07:50.230
So we're able to publish our changes to the cloud.

120
00:07:50.410 --> 00:07:52.240
Now, this is optional.

121
00:07:52.370 --> 00:07:54.190
It is optional to link it to GitHub.

122
00:07:54.190 --> 00:07:59.470
And if if you run into a brick wall here, that's completely OK, you can still continue the course.

123
00:07:59.650 --> 00:08:03.790
It's not going to be a block or you're just not going to be able to publish it to the cloud.

124
00:08:03.790 --> 00:08:10.120
You're still going to be able to to code along and keep going along with the course.

125
00:08:10.540 --> 00:08:16.600
Now, the reason that we show this is because it's a vital tool in the industry and it's good to learn

126
00:08:17.140 --> 00:08:17.830
early on.

