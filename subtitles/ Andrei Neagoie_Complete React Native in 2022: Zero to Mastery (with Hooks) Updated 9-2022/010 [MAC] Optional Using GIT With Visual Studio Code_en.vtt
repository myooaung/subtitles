WEBVTT
1
00:00:01.160 --> 00:00:08.390
Hey, I'll remember when we installed get and it was this whole process and we really didn't do anything

2
00:00:08.390 --> 00:00:08.660
with it.

3
00:00:09.290 --> 00:00:14.840
Well, we're about to get into it because we just installed Visual Studio Code and because we installed

4
00:00:14.840 --> 00:00:16.010
visual studio code.

5
00:00:16.340 --> 00:00:22.890
What we can do now is we can go through the process of using git.

6
00:00:23.240 --> 00:00:29.330
And so what I want you to do is I want you to go find the folder that you downloaded that you extracted.

7
00:00:29.810 --> 00:00:35.840
Now, over here you can see that I have a bunch of other stuff going on, but I have my focus time folder

8
00:00:35.840 --> 00:00:36.290
over here.

9
00:00:36.860 --> 00:00:40.550
So I'm going to open this focus time folder and I'm going to say openness.

10
00:00:41.090 --> 00:00:47.000
And what's going to happen is Visual Studio Code is going to open all of this code inside of this interface.

11
00:00:47.000 --> 00:00:50.030
And over here you can see all of this weird stuff.

12
00:00:50.030 --> 00:00:52.760
The welcome screen is going to close that we into this focus.

13
00:00:52.760 --> 00:00:53.990
We're going to hyperfocus.

14
00:00:53.990 --> 00:00:56.390
We're going to focus on the left hand side.

15
00:00:56.720 --> 00:00:59.540
Let me enlarge that a bit, a little bit less.

16
00:01:00.140 --> 00:01:02.750
And what we want to look at here is this left hand pane.

17
00:01:02.750 --> 00:01:05.960
We can see our files, we can see our assets, we can see our source files.

18
00:01:06.170 --> 00:01:07.430
We can see all of that stuff.

19
00:01:08.450 --> 00:01:14.930
Here we remember when I said we had all of these icons, will this icon, the third icon, the source

20
00:01:14.930 --> 00:01:17.900
control icon, will this source control icon?

21
00:01:18.290 --> 00:01:24.080
It contains the magic that is needed to utilize, get.

22
00:01:24.090 --> 00:01:29.330
And the reason that I want us to utilize get inside a visual studio code is because we could go ahead

23
00:01:29.330 --> 00:01:33.290
and we could use terminal and we could look like we're powering through the Matrix.

24
00:01:33.800 --> 00:01:35.120
But we really don't need to do that.

25
00:01:35.130 --> 00:01:36.140
I like simple things.

26
00:01:36.560 --> 00:01:43.580
And so the simplest thing we can do here is currently focus time that we downloaded isn't tracked by

27
00:01:43.590 --> 00:01:46.820
get now get is a version control.

28
00:01:47.000 --> 00:01:47.360
Right.

29
00:01:47.510 --> 00:01:49.640
So it's keeping revisions of things.

30
00:01:49.770 --> 00:01:55.430
It's kind of like you going through and saying like, hey, today I did this yesterday, I did this

31
00:01:55.430 --> 00:01:56.780
the day before that I did this.

32
00:01:56.870 --> 00:01:59.330
It's keeping a history of what happened in the past.

33
00:01:59.510 --> 00:02:01.970
Doesn't necessarily know what's going to happen in the future.

34
00:02:02.270 --> 00:02:04.330
It's keeping track of what happened in the past.

35
00:02:04.670 --> 00:02:11.000
So if we hit this button, initialize repository, what's going to happen is you're going to see changes,

36
00:02:11.330 --> 00:02:15.830
19 files, all of them marked with a you, huh?

37
00:02:16.550 --> 00:02:17.420
You, huh?

38
00:02:17.420 --> 00:02:21.200
Untracked entourage's, huh?

39
00:02:21.230 --> 00:02:24.830
OK, so Git is saying, hey, I see all these files.

40
00:02:24.920 --> 00:02:26.020
I see you did all this stuff.

41
00:02:26.030 --> 00:02:26.270
No.

42
00:02:27.080 --> 00:02:28.100
I don't know what it is.

43
00:02:28.190 --> 00:02:30.960
I've never seen these files before, I don't know what you're talking about.

44
00:02:31.160 --> 00:02:34.180
And if we go over here into our explorer, you'll see the exact same thing.

45
00:02:34.190 --> 00:02:35.440
Everything is green suddenly.

46
00:02:35.900 --> 00:02:36.380
Why?

47
00:02:36.680 --> 00:02:37.910
Well, it's all untracked.

48
00:02:37.910 --> 00:02:39.430
Gett has never seen it before.

49
00:02:40.100 --> 00:02:45.620
So what we want to do here is we want to go back into that source control and we can see here that it's

50
00:02:45.620 --> 00:02:49.160
in this changes according so.

51
00:02:50.000 --> 00:02:57.440
And we have the option to either open the file so we can go and open it well, not exist, or we can

52
00:02:57.440 --> 00:03:01.430
open our box and we can kind of go look at like, hey, what's going on here?

53
00:03:02.810 --> 00:03:08.030
We can revert it, which we don't want to discard the changes, we want to keep them usually sometimes

54
00:03:08.030 --> 00:03:13.790
you may want to discard what you did, but you can see the plus sign here, which is stage changes and

55
00:03:13.790 --> 00:03:15.860
stage changes, is nothing more than telling it.

56
00:03:15.860 --> 00:03:16.760
Hey, track this.

57
00:03:17.000 --> 00:03:17.780
Keep track of this.

58
00:03:17.780 --> 00:03:18.920
I need this stuff.

59
00:03:19.190 --> 00:03:20.180
So we'll hit the plus.

60
00:03:20.390 --> 00:03:27.380
And then you can see in stage changes Duchesse came in here and if we hover over the AI, it's added.

61
00:03:27.500 --> 00:03:30.500
So Git is starting to track it, but it it isn't done yet.

62
00:03:30.530 --> 00:03:37.160
So if we press the plus at the accordion level here, stage all changes, all the files are now staged,

63
00:03:37.250 --> 00:03:42.260
staged, meaning that git is in this phase where it's saying like, hey Mo, I know you want me to track

64
00:03:42.260 --> 00:03:47.090
the stuff, but you really got to tell me, what is all of this like, what's going on here?

65
00:03:47.810 --> 00:03:49.910
So it's asking us up here, enter a message.

66
00:03:50.720 --> 00:03:51.710
What kind of message?

67
00:03:52.190 --> 00:03:54.140
What we want to enter a message to tell get.

68
00:03:54.140 --> 00:03:56.190
Hey, this is what's happening here.

69
00:03:56.600 --> 00:04:00.320
Well, since this is our very first one, we'll say initial entry.

70
00:04:00.650 --> 00:04:04.760
This is our first time entering anything into the gate and we'll see commit.

71
00:04:05.540 --> 00:04:09.410
And now everything is tracked by git.

72
00:04:09.860 --> 00:04:15.560
Now, for instance, let's say if I did a console log here and I said YOLO because you only live once,

73
00:04:15.560 --> 00:04:21.529
you know, and that saved well over here, you can see if I refreshed, which it already did.

74
00:04:22.410 --> 00:04:29.250
There's an M and M for modified, and if we click that, you can see now the change between the previous

75
00:04:29.250 --> 00:04:36.720
file and what we changed, very powerful stuff, extremely important that we use this to keep track

76
00:04:36.720 --> 00:04:38.530
of our code and what we changed.

77
00:04:38.730 --> 00:04:44.070
It's very easy to get lost when you have thousands and thousands and thousands of lines of code and

78
00:04:44.070 --> 00:04:46.470
what you changed, where it was change, what happened.

79
00:04:46.680 --> 00:04:48.750
All this stuff is like very confusing.

80
00:04:49.170 --> 00:04:53.330
So this this is the method will be using to keep track of stuff.

81
00:04:53.640 --> 00:04:57.090
And so if I said like here, OK, well, let's track this one.

82
00:04:57.120 --> 00:04:57.780
Let's add it.

83
00:04:57.780 --> 00:04:58.620
It's Stagedoor.

84
00:04:58.620 --> 00:05:00.510
So it's not no longer changed.

85
00:05:00.510 --> 00:05:02.220
It's also changed and staged.

86
00:05:02.220 --> 00:05:06.330
You want it to be in staged before you can add a message, because otherwise it gets going to say like,

87
00:05:06.900 --> 00:05:11.760
well, I don't really know what you want to do here is like if I unstaged innocent changes and I just

88
00:05:11.760 --> 00:05:13.530
said, here, console that log.

89
00:05:16.420 --> 00:05:21.730
Well, it's going to say like cancel the log what you can't really like, what am I going to commit

90
00:05:21.730 --> 00:05:22.420
if I commit?

91
00:05:22.420 --> 00:05:24.250
There are no staged files to commit.

92
00:05:24.670 --> 00:05:26.800
OK, well, let's stage this now.

93
00:05:26.800 --> 00:05:28.210
I can go ahead and commit this.

94
00:05:28.210 --> 00:05:30.450
So get knows that it changed.

95
00:05:30.820 --> 00:05:31.180
Right.

96
00:05:31.420 --> 00:05:34.870
But let's unstaged this and let's revert this because we don't want it now.

97
00:05:35.020 --> 00:05:37.090
Be careful with discarding changes.

98
00:05:37.090 --> 00:05:39.550
Be careful with reverting undoing.

99
00:05:39.550 --> 00:05:39.880
Right.

100
00:05:40.210 --> 00:05:45.190
Careful with this button in general, because once you undo it, you're not getting it back.

101
00:05:45.610 --> 00:05:46.390
It's not happening.

102
00:05:46.400 --> 00:05:49.030
So if we undo it, be very careful with that.

103
00:05:49.030 --> 00:05:57.630
But OK, so now we know how to use it in visual studio code and we understand the benefits of gett.

104
00:05:57.730 --> 00:05:59.290
It's keeping track of stuff.

105
00:05:59.530 --> 00:06:04.040
It's keeping track of where files are, what's happening in the file and all that good stuff.

106
00:06:04.330 --> 00:06:06.280
Super, super important stuff.

107
00:06:06.400 --> 00:06:09.460
Super, super important for us to know how to use it.

108
00:06:09.590 --> 00:06:15.250
Now, we're not going to become power users from day one, but as you continue using it and as you continue

109
00:06:15.250 --> 00:06:21.010
down the path of mastery of react native and all the other technologies out there, you will become

110
00:06:21.010 --> 00:06:30.190
more and more inundated with get super vital tool used across the industry in multiple workplaces everywhere.

111
00:06:30.610 --> 00:06:31.060
All right.

112
00:06:31.330 --> 00:06:34.840
Get super powerful visual studio code, super powerful.

113
00:06:35.020 --> 00:06:37.990
This little tab here, our main interface, forget.

