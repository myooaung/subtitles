1
00:00:00,780 --> 00:00:02,400
We have hello world rendering.

2
00:00:03,490 --> 00:00:10,570
Now it begs the question, how do we actually get our content to always stay within the frame?

3
00:00:11,880 --> 00:00:16,410
And so over here, you can see that we had the style is equal to styles that container.

4
00:00:16,950 --> 00:00:22,260
And we say over here, well, the padding is 50 and the padding being 50 means that we're padding from

5
00:00:22,260 --> 00:00:24,240
the left, right, top and bottom.

6
00:00:24,240 --> 00:00:28,230
So we're essentially crimping the entire screen.

7
00:00:29,130 --> 00:00:37,860
Now, not every phone has the same exact notch placement or notch size, and the pixels over here,

8
00:00:38,310 --> 00:00:42,690
they aren't actually true pixels, their density based pixels.

9
00:00:42,690 --> 00:00:45,360
So it also depends on the density of your screen.

10
00:00:45,600 --> 00:00:48,540
So this 50 could look different on an iOS device.

11
00:00:48,900 --> 00:00:50,730
It could look different on an Android device.

12
00:00:50,730 --> 00:00:52,920
It could look different on a bunch of different devices.

13
00:00:54,350 --> 00:00:55,730
Well, how would we solve that?

14
00:00:55,760 --> 00:01:03,290
Well, we could say, let's take in platform platform is a specific library within React Native that

15
00:01:03,290 --> 00:01:07,100
allows you to target iOS and Android separately.

16
00:01:07,550 --> 00:01:16,670
So what we could see here is, hey, if Platform Dot OS is equal to iOS, let's put 50 density pixels

17
00:01:17,150 --> 00:01:19,670
and otherwise, you know, let's put 100.

18
00:01:20,740 --> 00:01:25,750
And if we look at that, that would mean that basically on Android, we would, you know, push it down

19
00:01:25,750 --> 00:01:26,470
even further.

20
00:01:27,220 --> 00:01:29,770
Now we don't want it to go from all sides.

21
00:01:29,770 --> 00:01:33,250
So maybe we just say from the top, OK, let's just push it down from the top.

22
00:01:33,790 --> 00:01:35,800
Well, now one hundred seems excessive.

23
00:01:36,050 --> 00:01:39,100
Fifty feels about right for us.

24
00:01:39,700 --> 00:01:45,250
But you might be asking yourself, Hey, what is the best way for us to achieve this?

25
00:01:45,250 --> 00:01:46,540
This kind of feels.

26
00:01:47,490 --> 00:01:53,800
Hacky, this kind of feels like it's not the right way to consistently push down.

27
00:01:54,840 --> 00:02:00,690
The content in a nice way now it is nice because this is, you know, the top level view in our app

28
00:02:00,690 --> 00:02:01,290
right now, right?

29
00:02:01,310 --> 00:02:03,000
We only have app, there's one view.

30
00:02:03,000 --> 00:02:08,470
And so if we say that everything renders inside of this, everything will get the exact same padding.

31
00:02:09,120 --> 00:02:12,900
But there must be a nicer way to achieve this.

32
00:02:13,950 --> 00:02:16,460
And so enter safe area view.

33
00:02:17,070 --> 00:02:21,000
The purpose of a safe area of view is to render the content within the safe area.

34
00:02:21,000 --> 00:02:29,580
Bounds of a device is currently only applicable to iOS devices with iOS version 11 or later, right?

35
00:02:30,060 --> 00:02:37,200
So when we apply safe area view, what it's basically going to do is it's going to implement its own

36
00:02:37,200 --> 00:02:43,500
padding behavior, which means that it will not take in our padding behavior.

37
00:02:45,070 --> 00:02:46,870
OK, so let's take a look at them.

38
00:02:47,500 --> 00:02:55,720
If we take in safe area of you and then we say, Hey, let's remove this over here and let's use that

39
00:02:56,530 --> 00:02:58,420
and let's get rid of Styles container.

40
00:02:59,650 --> 00:03:01,110
And let's apply to see if any of you.

41
00:03:03,190 --> 00:03:07,930
And then we can see, hey, nothing really, oh, it jumped up a tiny smidge.

42
00:03:08,680 --> 00:03:09,850
And why is that the case?

43
00:03:10,000 --> 00:03:14,110
Well, it's because see if any of you implement its own planning rules.

44
00:03:14,110 --> 00:03:18,820
It's basically saying, Hey, I'm going to determine the safe area for you to render your contact when

45
00:03:18,910 --> 00:03:20,230
you don't have to worry about that.

46
00:03:20,440 --> 00:03:24,070
And anything you render within me will always be within the bounds of the screen.

47
00:03:25,090 --> 00:03:29,080
Now you may be asking yourself the question How would this work on Android?

48
00:03:29,800 --> 00:03:30,700
Let's take a look at that.

