1
00:00:00,490 --> 00:00:04,280
Hopefully that window right now, let's look at how I solved it.

2
00:00:04,630 --> 00:00:10,180
So first of all, in the Restaurant Navigator, what we needed to accomplish was we needed to remove

3
00:00:10,180 --> 00:00:17,470
our text input here from the restaurant screen, rendering an inline function causes react navigation

4
00:00:17,470 --> 00:00:18,670
not to work properly.

5
00:00:18,680 --> 00:00:20,980
So we need to import a named component.

6
00:00:21,490 --> 00:00:25,210
And we created the name component restaurant detail screen here.

7
00:00:25,210 --> 00:00:33,160
We can remove this import and we import restaurant detail screen from our features folder where we created

8
00:00:33,160 --> 00:00:35,290
a screen called Restaurant Detail.

9
00:00:35,290 --> 00:00:38,230
Dot screen, restaurant detail.

10
00:00:38,230 --> 00:00:43,060
Dot screen is a screen that contains three things.

11
00:00:43,930 --> 00:00:45,520
First of all, we need to import react.

12
00:00:46,060 --> 00:00:48,550
Then we need to import the restaurant info card.

13
00:00:49,180 --> 00:00:55,000
Then we import the safe area view from the utility safe area component because we want to make sure

14
00:00:55,000 --> 00:00:57,250
we render in the safe area, even if it's a modal.

15
00:00:58,280 --> 00:01:05,990
Inside of that safe area, what we're going to do is render the restaurant info card, the restaurant

16
00:01:05,990 --> 00:01:12,830
info card is going to be part of the holistic approach that we're taking to rendering out the details.

17
00:01:12,830 --> 00:01:19,490
We want to show the exact same detail card without the same exact interactions just yet.

18
00:01:20,520 --> 00:01:23,760
And so what we need to take in as props is the root.

19
00:01:24,740 --> 00:01:31,100
Now, the root is coming in because it's part of Restaurant Navigator, because it's defined as a component

20
00:01:31,130 --> 00:01:39,020
on the stock screen, restaurant details screen now gets information from its route in order to be able

21
00:01:39,020 --> 00:01:40,190
to pull information.

22
00:01:41,090 --> 00:01:46,640
Some of the information we need to pull is off of route programs, as you saw in the documentation route

23
00:01:46,650 --> 00:01:49,600
that allows us to pass information around.

24
00:01:49,850 --> 00:01:52,700
And so the program we're pulling off is restaurant.

25
00:01:53,120 --> 00:01:57,970
And as we pass that into the restaurant info card, we pass restaurant is equal to restaurant.

26
00:01:58,280 --> 00:02:03,860
We also needed to adjust the restaurant screen in order to pass that parameter.

27
00:02:04,130 --> 00:02:07,640
And the parameter that we passed is on navigation that navigate.

28
00:02:08,090 --> 00:02:12,380
We put in the path we're going to navigate to which is restaurant detail.

29
00:02:13,010 --> 00:02:14,230
Then we add comma.

30
00:02:14,270 --> 00:02:20,810
We opened up an object and we said the restaurant was equal to item because as you remember, item is

31
00:02:20,810 --> 00:02:21,650
our restaurant.

32
00:02:21,920 --> 00:02:28,100
So we're passing restaurant en route to restaurant detail as we go over there.

33
00:02:28,940 --> 00:02:34,310
And if we look at that from a solution perspective, if we go over to our phone, what we can see here

34
00:02:34,310 --> 00:02:42,170
is now if we click on our restaurant, will pop up the detail screen and it will show the information

35
00:02:42,170 --> 00:02:49,670
that is required inside of the safe area of you with the restaurant detail card.

36
00:02:49,790 --> 00:02:55,070
So the restaurant detail card is the first part of the detailed screen that we've now built out.

37
00:02:55,280 --> 00:03:00,200
And we've been able to successfully past the restaurant information each time that it's clicked into

38
00:03:00,200 --> 00:03:01,610
the restaurant detail screen.

39
00:03:02,090 --> 00:03:05,720
So we're in a good state here to start building out our menu.

