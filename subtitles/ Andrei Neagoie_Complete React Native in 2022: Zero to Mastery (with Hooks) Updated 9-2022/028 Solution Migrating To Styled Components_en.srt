1
00:00:00,330 --> 00:00:06,300
I hope you all got through that, but there were a couple of obstacles in our way here that I've pointed

2
00:00:06,300 --> 00:00:09,280
out rudimentary, but we're going to go deeper into now.

3
00:00:09,540 --> 00:00:16,050
So for restaurant card cover, we kind of went the route of doing the rap style with the parentheses

4
00:00:16,050 --> 00:00:16,580
over here.

5
00:00:17,310 --> 00:00:20,530
And as you can see, all of our styles have applied.

6
00:00:20,550 --> 00:00:21,880
So how do we go about that?

7
00:00:22,590 --> 00:00:25,190
OK, so let's take it step by step.

8
00:00:26,010 --> 00:00:32,940
So for restaurant card cover, we took the styled and we wrapped it with parentheses because we're wrapping

9
00:00:32,940 --> 00:00:39,690
a custom component that styled probably doesn't have U.S. styled system, again, exports a certain

10
00:00:39,690 --> 00:00:41,070
amount of elements.

11
00:00:41,220 --> 00:00:43,920
For instance, text you could do text thought for you.

12
00:00:44,190 --> 00:00:51,600
You could not do something like a dot card dot cover because styled will basically complain and say,

13
00:00:51,750 --> 00:00:55,320
hey, I don't have anything like that that doesn't exist for me.

14
00:00:55,320 --> 00:00:56,340
What is this thing?

15
00:00:57,550 --> 00:01:04,629
But you could give it specifically the card, the cover that we imported from Riak native paper because

16
00:01:04,629 --> 00:01:06,250
it comes from a different library.

17
00:01:06,250 --> 00:01:11,460
So by using the parentheses, we can give it external components that it can style as well.

18
00:01:12,220 --> 00:01:16,030
And so with that, we gave it padding 20 pixels.

19
00:01:16,250 --> 00:01:20,950
So you may be asking yourself most, why do I need to fill in pixels here all of a sudden?

20
00:01:21,130 --> 00:01:22,270
Like, what is this about?

21
00:01:22,270 --> 00:01:23,050
Why pixels?

22
00:01:23,050 --> 00:01:24,130
Why pixels?

23
00:01:24,820 --> 00:01:26,380
Well, let's look at that.

24
00:01:26,980 --> 00:01:31,900
If we go look at styled components and we look at how it works.

25
00:01:33,260 --> 00:01:40,880
It supports complex styles, but it uses something called success to react netiv in the background and

26
00:01:40,900 --> 00:01:45,530
ceases to react native is basically how styled component's works for Riak native.

27
00:01:45,770 --> 00:01:53,170
It takes what we would write in excess and converts it to the Riak native equivalents.

28
00:01:53,180 --> 00:01:57,840
So when we fill in pixels, it's just converting it back to the regular number.

29
00:01:58,070 --> 00:02:04,250
So from now on, we're going to write our Riak native styles as if we were writing excess and we can

30
00:02:04,250 --> 00:02:05,660
try it out here, right?

31
00:02:05,810 --> 00:02:07,970
We could write CSFs to react native.

32
00:02:08,150 --> 00:02:13,760
It also does Jaysus conversions, which is different library altogether, but we could try out all of

33
00:02:13,790 --> 00:02:17,840
the different things that we would want to write so you can see here.

34
00:02:18,800 --> 00:02:27,050
If we wrote font size 20 pixels, well, it's going to translate the font size 20 and if we wrote background

35
00:02:27,560 --> 00:02:33,860
color red, right, it would translate it to background color red.

36
00:02:34,940 --> 00:02:38,540
And that for us, well, if we did this.

37
00:02:39,570 --> 00:02:45,780
It's going to do a weird translation, so we really need to do this, and so here you can test out the

38
00:02:45,780 --> 00:02:49,780
properties that you would normally write and see what they would become and react native.

39
00:02:50,310 --> 00:02:51,810
Now, that said.

40
00:02:52,720 --> 00:02:57,490
Style commonness is using this under the hood to do the translation to the object that we would write

41
00:02:57,490 --> 00:02:58,810
in the style sheet create.

42
00:02:59,760 --> 00:03:06,390
Awesome, right, so we can go ahead and we can write our styles this way and by using pixels is basically

43
00:03:06,390 --> 00:03:09,720
going to transfer to the rack native equivalent that would not have it.

44
00:03:10,020 --> 00:03:14,280
Now, if we don't write the pixels here, it's basically going to complain.

45
00:03:14,760 --> 00:03:17,930
Failed to pass Declaration 20 because it doesn't understand it.

46
00:03:17,930 --> 00:03:19,240
It needs the pixels.

47
00:03:19,880 --> 00:03:21,510
Now, that said.

48
00:03:23,000 --> 00:03:24,110
We need to reload.

49
00:03:25,180 --> 00:03:29,770
It seems like my meal to go isn't refreshing properly, so let's save that, and it didn't take into

50
00:03:29,770 --> 00:03:32,230
account that I added back the pixels so this can happen.

51
00:03:32,530 --> 00:03:35,200
So if I remove the pixels, it's going to crash.

52
00:03:35,200 --> 00:03:35,530
Right.

53
00:03:35,950 --> 00:03:42,970
And if I add back the pixels, it will no longer crash, but it's not taking into account immediately.

54
00:03:42,970 --> 00:03:45,730
So we need to make sure that we save properly.

55
00:03:45,950 --> 00:03:51,280
OK, keeping that in mind, we're always going to add pixels to whatever number we add and background

56
00:03:51,280 --> 00:03:53,500
color we're going to write in this certain way.

57
00:03:54,360 --> 00:03:59,920
OK, so now we've translated everything to styled components.

58
00:04:00,980 --> 00:04:04,230
And now down here, we can see well, that's pretty nice.

59
00:04:04,790 --> 00:04:10,460
We now can read well, we have a restaurant card, we have a restaurant card cover, we have a title,

60
00:04:10,730 --> 00:04:12,060
and that's all.

61
00:04:12,260 --> 00:04:16,660
And if we go to a restaurant screen, we also have to translate this Tiriac native.

62
00:04:16,820 --> 00:04:22,010
And if we look at the outcome, we can see here that we have a safe area because we created our own

63
00:04:22,010 --> 00:04:22,630
safe area.

64
00:04:23,390 --> 00:04:29,330
We have a search container because we now have a search container wrapping our search bar that's going

65
00:04:29,330 --> 00:04:30,140
to create the spacing.

66
00:04:30,140 --> 00:04:35,300
Here we have a restaurant list container and we have the restaurant info card.

67
00:04:35,870 --> 00:04:41,570
And so if we look at how this was made, there was a little bit of trickery going on here, which was

68
00:04:41,750 --> 00:04:47,660
how were we going to do status bar that current height, because we're writing it in this weird template

69
00:04:47,660 --> 00:04:48,380
syntax.

70
00:04:48,530 --> 00:04:55,240
And if you've never seen this before, well, it becomes a bit confusing because when we did stylesheet

71
00:04:55,370 --> 00:04:55,970
create.

72
00:04:56,240 --> 00:04:56,630
Right.

73
00:04:56,900 --> 00:05:01,330
Stylesheet thought create, we could do an object and we could say safe area.

74
00:05:01,490 --> 00:05:08,210
And then inside of a safe area, we could have done like margin top and we would have copy paste this.

75
00:05:08,720 --> 00:05:10,610
And that's how it would have worked.

76
00:05:10,610 --> 00:05:10,940
Right.

77
00:05:10,940 --> 00:05:18,470
Like we wouldn't have to care about anything because this is the way it worked now, because everything

78
00:05:18,470 --> 00:05:19,850
here is written as a string.

79
00:05:20,030 --> 00:05:24,440
The power of the template strings lies in the fact that you can reference variables.

80
00:05:24,920 --> 00:05:29,090
And the way that we do that is this little syntax here where you do sign this.

81
00:05:29,480 --> 00:05:34,670
And between these two brackets, we can automatically put a variable from outside.

82
00:05:34,700 --> 00:05:39,920
So we know that we need a status bar, that current height, but we also need it to add pixels to the

83
00:05:39,920 --> 00:05:44,360
end of it, because if we don't add pixels to the end of it, woops, we're breaking it.

84
00:05:44,780 --> 00:05:47,840
So we need to add pixels to the end of it and then it'll work.

85
00:05:48,500 --> 00:05:49,880
OK, well that's good.

86
00:05:50,120 --> 00:05:55,730
And then we added our surge container padding, 16 pixels, we added our list container and we moved

87
00:05:55,730 --> 00:05:56,840
the styles over.

88
00:05:56,840 --> 00:06:04,520
And so now our restaurant screen looks so much cleaner we don't have any crazy props for styling being

89
00:06:04,520 --> 00:06:05,120
passed in.

90
00:06:05,120 --> 00:06:07,850
We can just read it as if they were nested elements.

91
00:06:07,850 --> 00:06:10,340
We know we have a search container inside of the search container.

92
00:06:10,340 --> 00:06:12,410
We have the search bar, restaurant list container.

93
00:06:12,560 --> 00:06:18,470
So we're creating this readable code in this good infrastructure and these good practices with which

94
00:06:18,470 --> 00:06:22,790
we can style our react native app in a consistent way.

95
00:06:23,030 --> 00:06:26,390
But there's another level to this consistency that we'll get to later.

96
00:06:26,600 --> 00:06:31,280
For now, we've migrated everything successfully to styled components.

