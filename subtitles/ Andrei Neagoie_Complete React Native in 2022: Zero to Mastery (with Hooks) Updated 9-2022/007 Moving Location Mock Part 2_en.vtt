WEBVTT
1
00:00:01.300 --> 00:00:06.550
In our previous video, we moved our mock interface that we had built in our location service to work

2
00:00:06.550 --> 00:00:13.990
in the local firebase function, but now our app is basically broken as we do not have any integration

3
00:00:14.350 --> 00:00:17.710
to any type of service returning US data.

4
00:00:18.250 --> 00:00:24.520
So what we're going to do now is we're going to do a local fetch request, and that request is going

5
00:00:24.520 --> 00:00:31.430
to basically be a interaction between our firebase local function.

6
00:00:31.720 --> 00:00:41.020
So this is going to send data over to here and that's going to allow us to integrate in our location

7
00:00:41.020 --> 00:00:41.780
request again.

8
00:00:42.130 --> 00:00:47.230
So let's go over here and let's take this URL right from here to here.

9
00:00:47.770 --> 00:00:53.560
And what we're going to do is we're going to fill that in right there and we're going to see the city

10
00:00:53.560 --> 00:00:56.740
is equal to a query parameter.

11
00:00:57.700 --> 00:01:02.490
And we're going to make this a template string and we're going to say city is equal to search term,

12
00:01:03.010 --> 00:01:10.210
and by doing that, we can now do then and by doing that, then we now have access to our response.

13
00:01:10.570 --> 00:01:13.540
And what we need to do is something called return response Dot.

14
00:01:13.570 --> 00:01:23.050
Jason, now, you could also do it this way where you return response Laugesen inside of here and this

15
00:01:23.050 --> 00:01:25.990
is going to invoke the JSON serialization.

16
00:01:26.000 --> 00:01:31.660
So it's going to take the object and it's going to understand that is going to get adjacent object back

17
00:01:31.660 --> 00:01:32.320
to JavaScript.

18
00:01:32.320 --> 00:01:34.120
Simple object notation back.

19
00:01:34.370 --> 00:01:39.790
It's going to transform it and then it's going to pass it to location transform and by doing this now

20
00:01:40.000 --> 00:01:48.340
what we can see over here in the app is if we dismiss, dismiss and we reload, what we're going to

21
00:01:48.340 --> 00:01:55.140
see is undefined is not an object doing location request to lower case dot then, huh?

22
00:01:55.450 --> 00:01:59.350
Oh, we have to return our fetch statement here.

23
00:01:59.590 --> 00:02:05.470
And once we return our fetch statement, we are returning the promise that is going to talk to the server

24
00:02:05.470 --> 00:02:11.950
over here and get this information and then pass it back over into here.

25
00:02:12.610 --> 00:02:19.690
And if we go into our transform and we were to log our result, we would see that our result is basically

26
00:02:20.020 --> 00:02:22.330
the information console dialog.

27
00:02:22.750 --> 00:02:30.820
Result is the information that we expect to get back from the latitude longitude of the geometry of

28
00:02:30.850 --> 00:02:32.410
the position of the location.

29
00:02:32.410 --> 00:02:37.360
So Antwerp would return us a different longitude, latitude.

30
00:02:37.600 --> 00:02:39.880
And if we were to fill in somewhere strange.

31
00:02:40.210 --> 00:02:43.500
Well, that's obviously not going to return us any information.

32
00:02:43.630 --> 00:02:46.270
And so it does not change anything in the UI.

33
00:02:46.510 --> 00:02:52.570
If we did Chicago, obviously we're going to get a response and that's going to give us back our information.

34
00:02:53.080 --> 00:02:53.690
Awesome.

35
00:02:54.550 --> 00:03:03.160
So now that we know how our Geocode mark is going to interact over here and pass back information from

36
00:03:03.160 --> 00:03:12.220
a local server into our application, what we can now do is do the same for the restaurant information

37
00:03:12.370 --> 00:03:18.070
because the restaurant information and all of this information that we've marked over here in the restaurants

38
00:03:18.070 --> 00:03:24.940
folder, will all of this can also be given to us by the server and by mocking that request as well

39
00:03:24.940 --> 00:03:30.910
and moving it to the server, creating that full server based interaction will give us the ability to

40
00:03:31.090 --> 00:03:37.870
integrate Google later on and just swap out what data resource is going to return to us.

41
00:03:37.870 --> 00:03:43.250
And we're going to be doing cool things like enabling a mock parameter, et cetera, et cetera.

42
00:03:43.450 --> 00:03:47.520
We'll get into that as we move further along this integration.

43
00:03:48.010 --> 00:03:53.440
So now that we have this working, let's look at how we're going to move over the marks of the restaurant

44
00:03:53.440 --> 00:03:53.800
info.

