WEBVTT
1
00:00:00.530 --> 00:00:08.720
You see React initially was billed for the web, so react as a library, was used to build Web pages,

2
00:00:09.260 --> 00:00:15.950
then react native, came along to be able to do the same thing we did on the Web, but also natively

3
00:00:15.950 --> 00:00:16.620
on mobile.

4
00:00:17.480 --> 00:00:26.690
So in react, we would use something like Deve or a P or image tag, all HTML tags to build components.

5
00:00:27.020 --> 00:00:32.130
But on a phone there's no HTML because it's not the web, right.

6
00:00:32.479 --> 00:00:36.410
The idea of Riak native is to build for a phone and on a phone.

7
00:00:36.440 --> 00:00:38.270
There's no e-mail, there's no browser.

8
00:00:38.270 --> 00:00:40.730
I mean there is, but we're building native apps.

9
00:00:41.240 --> 00:00:48.320
So when you use something like Div with riak native, well you can't, you have to use views or text

10
00:00:48.320 --> 00:00:49.760
or something like this.

11
00:00:51.250 --> 00:00:58.240
So on the Web, you would often use something called React Dom, to render something on the DOM or on

12
00:00:58.240 --> 00:01:04.690
the Web page with react native use, react native to render something on the mobile app.

13
00:01:05.690 --> 00:01:13.400
Initially react, had the library react, Dom, for the web, but they eventually got split into two.

14
00:01:13.430 --> 00:01:20.540
So on the Web you would use react and the react on library and on mobile, you'd use react and then

15
00:01:20.540 --> 00:01:21.050
react.

16
00:01:21.170 --> 00:01:22.220
Native library.

17
00:01:23.840 --> 00:01:31.520
So if we go back to our example here, you may notice a few things that are different than if you were

18
00:01:31.520 --> 00:01:33.020
using react on the Web.

19
00:01:33.590 --> 00:01:36.530
One is that obviously there's no reactor.

20
00:01:36.680 --> 00:01:38.450
Instead, we're using react native.

21
00:01:39.930 --> 00:01:46.860
Then we notice that we're not using HTML tags, we're using native react native components, so view

22
00:01:46.860 --> 00:01:49.950
and text instead of a div or a PAETEC.

23
00:01:51.480 --> 00:01:57.960
Next, we see that we have this thing called stylesheet, stylesheet is a way that we act native dustups,

24
00:01:58.590 --> 00:02:07.380
so we use this format of stylesheet to create and then we create a new style class using this object

25
00:02:07.410 --> 00:02:08.070
notation.

26
00:02:08.789 --> 00:02:15.120
Now, you'll notice here that we're not using the regular season way of writing Margined Top, which

27
00:02:15.120 --> 00:02:16.980
will be margin desktop top.

28
00:02:16.980 --> 00:02:22.590
Instead, we're using Camil case, which is native to JavaScript, and we also don't have any idea of

29
00:02:22.590 --> 00:02:23.450
pixels here.

30
00:02:24.210 --> 00:02:27.090
Again, Riak native simplifies things for us.

31
00:02:27.150 --> 00:02:33.470
It just says 50 and it tries to optimize it based on the operating system based on the screen for us.

32
00:02:33.510 --> 00:02:35.700
So it makes things a lot simpler.

33
00:02:36.590 --> 00:02:43.250
But once we learn this difference between working with react on the Web and working with react on mobile,

34
00:02:43.520 --> 00:02:49.700
all the other principles are pretty much the same as just components with other components using them

35
00:02:49.700 --> 00:02:52.640
together to build interactive UI.

