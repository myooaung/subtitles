WEBVTT
1
00:00:00.550 --> 00:00:01.150
Welcome back.

2
00:00:02.120 --> 00:00:09.440
I've just put our robo friends project on GitHub, but let's say you're downloading this project, maybe

3
00:00:09.440 --> 00:00:12.010
you're sharing a project with other developers.

4
00:00:12.020 --> 00:00:15.460
But this project, let's say, was written last year.

5
00:00:15.890 --> 00:00:17.900
How can we update this project?

6
00:00:18.740 --> 00:00:26.270
If you remember, when we look at the package DOT, JSON file, we have the react version as sixteen

7
00:00:26.270 --> 00:00:29.660
point two, but the Riak version is now higher.

8
00:00:29.960 --> 00:00:34.840
So let's update this project, as you would on any other project.

9
00:00:35.630 --> 00:00:42.560
I'm going to clone this repo and I'm going to use S.H. You might have to use HD if you haven't had that

10
00:00:42.560 --> 00:00:43.040
set up.

11
00:00:44.050 --> 00:00:49.780
But I'm going to use S.H. just so I don't have to enter my password every time, so I'm going to clone

12
00:00:49.810 --> 00:00:52.870
this repoll, say, git clone.

13
00:00:56.060 --> 00:00:56.460
Awesome.

14
00:00:56.810 --> 00:00:58.850
Now, if I go into my friends.

15
00:00:59.970 --> 00:01:02.490
Folder and I opened this in Sublime.

16
00:01:03.590 --> 00:01:11.720
There we go, we have our package dot, JSON file, which we can see over here now when I usually download

17
00:01:11.720 --> 00:01:13.640
a project, I want to make sure it starts.

18
00:01:13.650 --> 00:01:18.320
So I'm going to say npm start and make sure that everything is still working.

19
00:01:19.270 --> 00:01:23.320
Oh, and I get an error because I have to first do npm install.

20
00:01:27.810 --> 00:01:36.300
Oh, boy, and we get a bunch of errors or warnings saying we've audited some of your packages and there's

21
00:01:36.300 --> 00:01:43.980
a few vulnerabilities, actually quite a lot and too critical one, and we can run an audit fix to fix

22
00:01:43.980 --> 00:01:44.160
them.

23
00:01:45.540 --> 00:01:49.190
So let's copy that and run that again.

24
00:01:54.990 --> 00:02:03.270
And now I get another issue that 27 vulnerabilities required manual review and you see here that it's

25
00:02:03.300 --> 00:02:06.570
mainly because some of them require what we call breaking changes.

26
00:02:06.570 --> 00:02:08.370
It might break our app.

27
00:02:08.729 --> 00:02:11.880
And this is the trade off when updating libraries.

28
00:02:13.100 --> 00:02:19.390
You are using an older version of a library that may have changed and now breaks your app completely,

29
00:02:20.360 --> 00:02:27.980
so sometimes you want to go one by one to actually check and see what the changes are in these libraries.

30
00:02:28.610 --> 00:02:31.400
Now, if I run NPM audit here.

31
00:02:35.070 --> 00:02:40.290
It'll actually give me some idea of what my issues are.

32
00:02:41.850 --> 00:02:46.140
Now, before I do NPM audit.

33
00:02:48.430 --> 00:02:55.330
Fix and then do dash dash force to force all those changes, I want to talk a little bit about this

34
00:02:55.330 --> 00:02:56.590
package that Jason.

35
00:02:59.590 --> 00:03:07.290
You see the react script, which is the create react up script that runs is outdated.

36
00:03:07.750 --> 00:03:14.880
There's a way higher version of react scripts, a bigger version of the cray cray reactor.

37
00:03:14.920 --> 00:03:16.330
And same with react.

38
00:03:17.120 --> 00:03:21.190
So one thing I can do is say NPM update.

39
00:03:21.940 --> 00:03:22.960
And if I run this.

40
00:03:23.910 --> 00:03:26.570
And when I click on this file, check this out.

41
00:03:27.850 --> 00:03:37.510
Did you see that my aversions got updated now NPM update, what it does is it looks at this version

42
00:03:37.690 --> 00:03:42.760
and says, what's the highest version that I can upgrade to in my case?

43
00:03:42.760 --> 00:03:44.230
Because I use the carrot.

44
00:03:44.650 --> 00:03:51.670
It said, hey, you can upgrade to whatever the highest version is in the minor release.

45
00:03:51.970 --> 00:03:59.590
So if there was a react version 17, well, this wouldn't upgrade to 17 because we're using the carrot.

46
00:03:59.920 --> 00:04:02.890
Remember, we can use greater than if we want to.

47
00:04:04.390 --> 00:04:12.880
But this way, we make sure that we only update whatever is in the minor release, which tends to not

48
00:04:12.880 --> 00:04:18.250
have any breaking changes, for example, when we have reacted 17, that's most likely going to have

49
00:04:18.250 --> 00:04:19.269
some breaking changes.

50
00:04:19.660 --> 00:04:26.890
OK, so we have the react version updated, but we still have these vulnerabilities that we need to

51
00:04:26.890 --> 00:04:27.280
fix.

52
00:04:28.870 --> 00:04:36.400
Let's now run the audit, fix and force, assuming that we've looked through the changes and we assume

53
00:04:36.400 --> 00:04:39.010
that it's OK, everything should still work.

54
00:04:39.220 --> 00:04:40.480
So I'm going to run this.

55
00:04:41.080 --> 00:04:46.150
And again, keep in mind that when using force, you want to make sure that you actually reviewed the

56
00:04:46.150 --> 00:04:46.600
updates.

57
00:04:47.470 --> 00:04:52.990
Now, while this is going, another thing I could have done with React is actually gone to the React

58
00:04:53.020 --> 00:04:56.320
website and checked the actual version.

59
00:04:56.320 --> 00:05:03.520
And instead of having the carrot just or doing NPM update, I could just change the version.

60
00:05:03.550 --> 00:05:09.330
Let's say version 17 comes out in react seventeen point zero point two.

61
00:05:09.820 --> 00:05:16.180
Well, I can just change that and package Dodgson and run NPM install again.

62
00:05:19.090 --> 00:05:28.540
Let's clear this, we see here that our react script is now updated to version three point two, that

63
00:05:28.540 --> 00:05:31.170
is the latest version of create a reactor.

64
00:05:31.780 --> 00:05:35.230
That's awesome if I do NPM audit once again.

65
00:05:37.390 --> 00:05:39.430
I have zero vulnerabilities.

66
00:05:39.940 --> 00:05:45.080
All right, looks like everything is looking fine, but we have one issue, right?

67
00:05:45.250 --> 00:05:48.060
We've updated everything that we have.

68
00:05:48.490 --> 00:05:49.960
There's no vulnerabilities.

69
00:05:50.590 --> 00:05:56.500
But because we've updated all these things, will our project still work?

70
00:05:57.520 --> 00:05:58.880
Well, there's one way to find out.

71
00:05:59.020 --> 00:06:01.990
Let's do npm start.

72
00:06:03.010 --> 00:06:08.380
All right, the nuclear reactor app asked me for a target browser, so I'll click.

73
00:06:08.380 --> 00:06:09.100
Yes, here.

74
00:06:10.320 --> 00:06:14.490
And look at that, looks like things are still working.

75
00:06:14.640 --> 00:06:15.810
Good job, Wrobel friends.

76
00:06:15.990 --> 00:06:20.690
If I open up the developer tools and I go to console, there's no airs.

77
00:06:21.480 --> 00:06:22.080
That's great.

78
00:06:23.250 --> 00:06:31.890
So just like that, I was able to update my project, upgrade my project with all the latest, react

79
00:06:32.490 --> 00:06:39.720
all the latest, react on the react scripts, which is what create react app uses, we have tachyons

80
00:06:39.720 --> 00:06:40.590
updated as well.

81
00:06:41.630 --> 00:06:43.900
And everything is working fine.

82
00:06:45.010 --> 00:06:50.590
So I can now push this change to GitHub so that we don't have those security warnings.

83
00:06:50.770 --> 00:06:51.350
Let's do that.

84
00:06:51.790 --> 00:06:53.770
I'm going to say get add.

85
00:06:55.150 --> 00:07:00.310
Get, commit, I'll say fixing.

86
00:07:01.990 --> 00:07:07.570
Security issues, updated libraries.

87
00:07:10.220 --> 00:07:16.670
Try to get Push Origin Master, because while I'm the only one on this project so I can just push to

88
00:07:16.670 --> 00:07:17.330
Maxtor.

89
00:07:20.890 --> 00:07:25.480
Now, if I go back to my GitHub page and I refresh.

90
00:07:27.560 --> 00:07:36.770
Let's check out the security tab and look at that, we have zero closed, zero open because our project

91
00:07:37.280 --> 00:07:39.350
is now fully up to date.

92
00:07:40.410 --> 00:07:41.830
How cool is that?

93
00:07:42.390 --> 00:07:51.120
This is a great way to keep your projects updated and the security vulnerabilities fixed, but the more

94
00:07:51.120 --> 00:07:58.470
libraries you have, the more dependencies you have, the more maintenance you have to do to make sure

95
00:07:58.470 --> 00:08:01.080
that every time you update a library.

96
00:08:02.080 --> 00:08:08.200
That it doesn't break your app, our robo friends app was fairly small, but you can imagine this being

97
00:08:08.200 --> 00:08:11.280
a bigger and bigger issues as applications grow.

98
00:08:11.890 --> 00:08:18.060
But I hope you learned one little trick that took me a long time to actually learn in my developer career.

99
00:08:18.340 --> 00:08:26.140
That is the easiest way to keep your projects up to date and secure is to just simply update the package

100
00:08:26.170 --> 00:08:27.060
Dodgson file.

101
00:08:27.850 --> 00:08:29.710
I'll see in the next one, Bhabhi.

