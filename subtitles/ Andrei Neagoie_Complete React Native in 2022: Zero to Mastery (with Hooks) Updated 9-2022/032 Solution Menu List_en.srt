1
00:00:01,120 --> 00:00:07,960
There are a bunch of ways to reach your desired effect when it comes to rendering out the menu inside

2
00:00:07,960 --> 00:00:11,510
of the safe area of the restaurant, a detail screen.

3
00:00:12,190 --> 00:00:14,560
Now, here, I'm going to show you how I achieved it.

4
00:00:14,920 --> 00:00:22,270
First of all, I had a couple of you states that I was going to require in order to open and close the

5
00:00:22,270 --> 00:00:22,990
accordion groups.

6
00:00:22,990 --> 00:00:27,910
So I had state for the breakfast, the lunch, the dinner and the drinks.

7
00:00:28,210 --> 00:00:32,439
And this is keeping track of each individual accordion's state.

8
00:00:33,070 --> 00:00:40,900
On top of that, I had to import list from Riak need of paper in order to utilize what the list has

9
00:00:40,900 --> 00:00:41,710
to offer us.

10
00:00:42,850 --> 00:00:46,780
And next to that I eventually need a scroll view.

11
00:00:46,780 --> 00:00:49,950
But first, let's go through putting together the accordion.

12
00:00:50,440 --> 00:01:00,220
So what we need to do here is we need to define the accordion's one by one, and that means having the

13
00:01:00,220 --> 00:01:03,660
accordion's predefined before putting the list items inside.

14
00:01:04,000 --> 00:01:07,960
Here we have an accordion for breakfast, which I gave the title breakfast.

15
00:01:08,290 --> 00:01:15,340
On the left side, I put a list out icon of the icon bread slice, which was available, and then I

16
00:01:15,340 --> 00:01:17,470
linked the expanded.

17
00:01:17,740 --> 00:01:22,410
So the tracking of whether it's expanded or not to the state of breakfast expanded.

18
00:01:22,630 --> 00:01:29,890
So any time we trigger the list accordion, this will be set to true or false, depending on it's open

19
00:01:29,890 --> 00:01:36,550
or closed state by triggering the on press, which returns an inner function of set breakfast expanded

20
00:01:36,700 --> 00:01:39,370
of the inverse of breakfast expanded.

21
00:01:39,370 --> 00:01:42,370
So if the current value is false, it'll be set to true.

22
00:01:42,490 --> 00:01:45,010
If the current value is true, it'll be set to false.

23
00:01:45,650 --> 00:01:54,010
OK, so now what we need to do is we need to create the same accordion groups for lunch and dinner and

24
00:01:54,010 --> 00:01:54,550
drinks.

25
00:01:54,880 --> 00:01:59,050
That means creating a accordion for lunch.

26
00:02:00,860 --> 00:02:02,150
For dinner.

27
00:02:03,710 --> 00:02:07,100
And then for drinks, so here we have dinner.

28
00:02:08,259 --> 00:02:16,960
And then we have drinks as well, which is going to be linked to the state of set drinks expanded,

29
00:02:17,680 --> 00:02:25,300
and so with that, we have all of our accordions ready to go to be filled in with information, but

30
00:02:25,330 --> 00:02:28,230
they currently do not have any information inside of them.

31
00:02:28,720 --> 00:02:30,550
And so if we look at what that renders out.

32
00:02:31,510 --> 00:02:35,050
We need a closing tag for each and every one of these.

33
00:02:36,700 --> 00:02:44,200
Now, when we look at this accordion, is each one of our accordions closed and here we can see the

34
00:02:44,200 --> 00:02:44,890
following.

35
00:02:46,830 --> 00:02:54,420
Are expected closing tag for Alstott accordion, and it seems that I said I wrote according to small

36
00:02:54,420 --> 00:02:56,580
little mistake here and then.

37
00:02:57,630 --> 00:03:06,270
What we can do here is we can just, oh, I made the same mistake everywhere, according according according

38
00:03:06,930 --> 00:03:07,770
to one little mistake.

39
00:03:08,500 --> 00:03:12,930
Now, if we open these up, what we're going to see is that we have breakfast, dinner and drinks,

40
00:03:12,930 --> 00:03:17,260
and they're triggering their state to open and close the accordion, which is great.

41
00:03:17,550 --> 00:03:22,740
So that means that we're tracking the state correctly in our accordion's, can open and close at will.

42
00:03:23,760 --> 00:03:29,820
Now, what we can go and do is we can go put list items inside of here and those will expand and contract

43
00:03:29,820 --> 00:03:34,880
with the accordion group so you can put however many items you want in every accordion group.

44
00:03:34,890 --> 00:03:36,030
It doesn't really matter.

45
00:03:36,300 --> 00:03:46,380
I chose a couple of list items for breakfast, lunch and dinner, and that allows us to set up our breakfast,

46
00:03:46,380 --> 00:03:49,200
lunch and dinner and drinks accordingly.

47
00:03:50,040 --> 00:03:55,290
Now, if I contract lunch and then we see dinner.

48
00:03:57,350 --> 00:03:59,420
We can see that within dinner.

49
00:04:00,680 --> 00:04:02,600
I put breakfast.

50
00:04:02,850 --> 00:04:05,570
Oh, actually, I accidentally skipped one.

51
00:04:05,900 --> 00:04:09,440
So what we need to do here is this is the lunch clause.

52
00:04:11,630 --> 00:04:19,910
And this is the breakfast clause, the accordion, rather, that has these items, and so by saving,

53
00:04:19,910 --> 00:04:21,050
we restructure.

54
00:04:21,290 --> 00:04:25,340
And then I have a couple of drinks here that I wanted to put in.

55
00:04:25,550 --> 00:04:32,330
I was list items in the drinks accordion, and that allows us to set up correctly dinner and drinks.

56
00:04:32,330 --> 00:04:34,850
But we have one issue here, you see.

57
00:04:35,770 --> 00:04:40,750
When we set this up and we unfold every single one of these, we can't really see the entire list item.

58
00:04:40,750 --> 00:04:46,780
And if this and in the drinks area, we can see clearly here after Coke we have fatha but it's going

59
00:04:46,780 --> 00:04:47,620
off the screen.

60
00:04:48,340 --> 00:04:49,390
So what, what can we do here.

61
00:04:49,780 --> 00:04:56,470
Well one option would be to use philatelist but then, but then again we don't really need flat list

62
00:04:56,470 --> 00:05:01,110
here because it would separate out too much of the data.

63
00:05:01,450 --> 00:05:07,120
The data would have to be each individual item in a category and then structuring that would be very

64
00:05:07,120 --> 00:05:07,550
hard.

65
00:05:08,320 --> 00:05:11,860
So what we need to use here basically is a scroll view.

66
00:05:11,860 --> 00:05:15,010
We just want to make the area scrollable for us.

67
00:05:15,490 --> 00:05:22,540
That means that we're going to import scroll view from Riak native and this will just make the area

68
00:05:22,870 --> 00:05:31,950
around the accordion's scrollable and thus able for us to scale our accordion's accordingly.

69
00:05:32,170 --> 00:05:40,930
And now we can see that if breakfast, dinner and drinks is all expanded at the same time, we can still

70
00:05:40,930 --> 00:05:46,560
scroll down and see everything that is available to us very easily.

71
00:05:46,960 --> 00:05:51,520
You see, Flat List is for when we have data coming in of a certain structure and we want to render

72
00:05:51,520 --> 00:05:53,110
out one certain item here.

73
00:05:53,110 --> 00:05:57,150
We have accordion groupings and items inside those accordion groupings.

74
00:05:57,160 --> 00:06:02,650
It's not to say we couldn't use philatelist, but all we needed to do here was make the area scrollable

75
00:06:02,860 --> 00:06:05,860
in order for our menu to become scrollable.

76
00:06:05,860 --> 00:06:10,840
And we're never going to hit a case where our menu has a hundred thousand items.

77
00:06:11,020 --> 00:06:17,190
So we're not at risk here of running into performance issues because menus tend to be limited.

78
00:06:17,200 --> 00:06:21,730
You may have 50, 60, 70, 80, 90, maybe 90 items at max.

79
00:06:21,730 --> 00:06:26,500
And at that point you have a gigantic restaurant and I don't know how that kitchen is doing it.

80
00:06:27,100 --> 00:06:34,540
So a scroll view is just performant enough here for us to be able to gather all of our information and

81
00:06:34,540 --> 00:06:42,130
set up and have that scrollable interface while still keeping the top level information, the important

82
00:06:42,130 --> 00:06:45,440
information of the card right here for us.

83
00:06:46,030 --> 00:06:54,460
OK, now that we have our detailed screen fully built, what we're able to do from here, right, is

84
00:06:54,460 --> 00:06:55,720
we have our detailed screen.

85
00:06:56,230 --> 00:07:00,700
We know that for every single restaurant and these work with a swipe down action.

86
00:07:00,700 --> 00:07:05,470
By the way, you can also click the tab icon in order to close these.

87
00:07:06,940 --> 00:07:13,990
Now that we have this set up for each individual restaurant and we have the detail screen set up for

88
00:07:13,990 --> 00:07:21,070
each one of these, what we can go ahead and do is we can go ahead and set up our map for you now because

89
00:07:21,070 --> 00:07:24,030
we have all of our information ready to go for us.

90
00:07:24,340 --> 00:07:27,850
So why don't we go to the restaurants and now render them on a map?

