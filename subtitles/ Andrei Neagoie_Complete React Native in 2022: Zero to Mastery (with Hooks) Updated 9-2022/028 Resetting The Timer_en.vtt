WEBVTT
1
00:00:00.650 --> 00:00:06.350
Now that we have everything set up in terms of controls on our screen, the next step is what do we

2
00:00:06.350 --> 00:00:09.830
do when the timer ends?

3
00:00:10.820 --> 00:00:15.320
Right now, we're just vibrating the phone at a certain pattern, but there's more things that could

4
00:00:15.320 --> 00:00:19.310
happen, right, like we might want to after we vibrate.

5
00:00:19.730 --> 00:00:22.550
We might want to reset everything, right?

6
00:00:23.330 --> 00:00:29.780
And so basically, our on and function needs to become somewhat more complex.

7
00:00:29.780 --> 00:00:33.290
So let's go say on end here is equal to a function.

8
00:00:34.550 --> 00:00:42.050
And let's take the body of on end over here, and let's put it inside of this and then call on and over

9
00:00:42.050 --> 00:00:42.380
here.

10
00:00:43.970 --> 00:00:44.330
OK.

11
00:00:45.550 --> 00:00:46.000
Now.

12
00:00:47.080 --> 00:00:54.040
Over here, we basically are seeing vibrate whenever a timer has ended specifically, but when the timer

13
00:00:54.040 --> 00:01:01.270
ends, we don't just want everything to stay at zero zero progress zero.

14
00:01:02.020 --> 00:01:02.380
Right?

15
00:01:02.800 --> 00:01:09.070
Like when it ends over here, what we want to do is we probably want to reset the timer up here, reset

16
00:01:09.070 --> 00:01:13.300
the progress bar, change the pause button back to started.

17
00:01:14.550 --> 00:01:20.520
Because you may want to extend your focus time on this particular subject, you may not want to just

18
00:01:20.940 --> 00:01:21.510
finish.

19
00:01:22.400 --> 00:01:23.820
And be done with it.

20
00:01:23.840 --> 00:01:28.310
You may want to continue on with that, right?

21
00:01:29.000 --> 00:01:37.460
And so with that, basically what we want to do here is we want to introduce set is started to false.

22
00:01:38.860 --> 00:01:43.660
We want to introduce set progress back to one.

23
00:01:44.920 --> 00:01:46.900
And then we want to reset the minutes.

24
00:01:47.230 --> 00:01:48.850
What do we mean by reset minutes?

25
00:01:49.270 --> 00:01:52.930
Well, we already have our default minutes predetermined in here.

26
00:01:53.150 --> 00:01:55.480
You know, we decided to focus six seconds on this.

27
00:01:56.080 --> 00:02:05.560
And basically right now when we run this, we aren't resetting our timer back to its original state.

28
00:02:06.610 --> 00:02:12.220
Now, this isn't a consequence of us not resetting the minutes that like calling set minutes.

29
00:02:12.280 --> 00:02:14.750
Zero point one here isn't going to do much for us.

30
00:02:14.750 --> 00:02:16.370
They're already set to zero point one.

31
00:02:17.970 --> 00:02:22.470
So what we probably want to do here is drill into our countdown timer and see specifically what's going

32
00:02:22.470 --> 00:02:22.710
on.

33
00:02:23.400 --> 00:02:30.450
So minutes is used over here to calculate an internal state of milliseconds, and when the timer ends,

34
00:02:31.080 --> 00:02:33.330
milliseconds is at zero, we're not resetting it.

35
00:02:34.420 --> 00:02:35.590
And that's the problem.

36
00:02:35.980 --> 00:02:39.370
How do we reset milliseconds back to its original state?

37
00:02:40.240 --> 00:02:44.250
Well, we really don't have a function for it, like we have a bunch of effects that fire when this

38
00:02:44.260 --> 00:02:44.860
mounts.

39
00:02:45.490 --> 00:02:52.690
So what we need to do here is at a cost reset, which is a function that's going to call set Milly's

40
00:02:53.020 --> 00:02:56.650
of the original minutes to release.

41
00:02:57.720 --> 00:03:01.140
OK, that reset function now, how do we invoke it?

42
00:03:01.740 --> 00:03:07.020
Well, since it's a function, we can pass it as a parameter to on end.

43
00:03:07.530 --> 00:03:07.860
Right?

44
00:03:08.490 --> 00:03:14.370
And when we pass it as a parameter to an end, now it's being passed up to the timer.

45
00:03:15.500 --> 00:03:22.370
So what we can see here is that, you know, on end is the equivalent of getting reset and then being

46
00:03:22.370 --> 00:03:29.690
able to call it so we've passed our function here called on end, which means we now have the reset

47
00:03:29.690 --> 00:03:33.410
inside of here and we can decide to call it over here.

48
00:03:33.920 --> 00:03:44.000
And now when we start our timer and we count down all the way to zero, what we can do now is reset

49
00:03:44.000 --> 00:03:47.210
the timer back to the original state of the milliseconds.

50
00:03:47.780 --> 00:03:48.710
That's awesome.

51
00:03:49.160 --> 00:03:55.250
That means that our timer is now in a complete state and we can continue focusing on the test subject

52
00:03:55.550 --> 00:03:57.590
for as long as we need.

53
00:03:58.250 --> 00:03:59.300
That's awesome.

54
00:03:59.990 --> 00:04:00.470
OK.

55
00:04:01.070 --> 00:04:09.170
So with that said, now we basically know, hey, we've completed focusing on this and we can focus

56
00:04:09.170 --> 00:04:09.740
on it again.

