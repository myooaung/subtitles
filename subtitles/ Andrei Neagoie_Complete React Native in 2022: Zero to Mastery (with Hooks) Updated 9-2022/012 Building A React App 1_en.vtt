WEBVTT
1
00:00:00.510 --> 00:00:04.600
All right, let's build our robo friends app, I think, to get started.

2
00:00:04.770 --> 00:00:09.840
We want to think about component's again and what kind of components we want to build.

3
00:00:10.620 --> 00:00:16.680
Looking at this website, the smallest component that we probably want to start working on is perhaps

4
00:00:16.920 --> 00:00:19.980
the cart component, this cart over here.

5
00:00:20.130 --> 00:00:27.150
If we can build one of these, then according to what I've said before, we can just copy all these

6
00:00:27.150 --> 00:00:28.950
components and add them to the page.

7
00:00:29.220 --> 00:00:31.080
So let's start off with this.

8
00:00:31.530 --> 00:00:33.390
The card component.

9
00:00:36.440 --> 00:00:44.330
Now, we won't be using the helo component anymore, and if you remember it look like this, let's just

10
00:00:45.200 --> 00:00:46.790
I know it's sad, but we're going to delete it.

11
00:00:47.330 --> 00:00:51.470
We're going to delete the helo access, start off clean.

12
00:00:52.280 --> 00:00:54.560
So I'm going to delete, OK?

13
00:01:00.160 --> 00:01:02.620
And we'll also delete hello, access.

14
00:01:03.690 --> 00:01:06.540
I know all our hard work just completely gone.

15
00:01:09.050 --> 00:01:14.570
You know what, we're going to start, Deline, things that we don't need and this project, for example,

16
00:01:14.570 --> 00:01:18.650
the app dogs that we had initially, well, we can delete that.

17
00:01:21.030 --> 00:01:23.110
You can also delete Abdon Access.

18
00:01:40.900 --> 00:01:44.150
All right, so everything's looking very small now.

19
00:01:44.320 --> 00:01:52.990
We have just index success index suggests and this register service worker that comes with cracked up

20
00:01:52.990 --> 00:01:54.250
that we don't need to touch.

21
00:01:54.800 --> 00:02:00.370
OK, obviously we have failed to compile because, well, the Hello Imparts doesn't really work.

22
00:02:00.370 --> 00:02:01.300
We don't have anything.

23
00:02:02.630 --> 00:02:08.419
So let's start off with this, let's start off by creating a card component.

24
00:02:10.169 --> 00:02:16.350
And this car component will have to import it from Card James.

25
00:02:18.270 --> 00:02:23.940
Again, if I say this, still get in there because it doesn't exist, so let's create it, I'm going

26
00:02:23.940 --> 00:02:27.830
to say new file card J.S..

27
00:02:30.000 --> 00:02:32.010
Again, making sure that this is.

28
00:02:33.910 --> 00:02:38.740
Using baseball and let's do what we've done before we do import.

29
00:02:42.080 --> 00:02:43.850
React from.

30
00:02:46.890 --> 00:02:51.810
Instead of doing the class way for now, we're just going to worry about building the function, so

31
00:02:51.810 --> 00:02:54.150
I'm going to say const.

32
00:02:55.340 --> 00:02:59.060
Card equals it won't have any properties for now.

33
00:03:00.310 --> 00:03:01.900
And this will return.

34
00:03:04.160 --> 00:03:05.120
Hassan Brackett's.

35
00:03:11.380 --> 00:03:15.040
And within here, we'll say that it has a divx.

36
00:03:17.440 --> 00:03:23.320
Within this d'Hiv, we'll have an image and this image will have some sort of a source that we don't

37
00:03:23.320 --> 00:03:25.750
know what it is yet, so we'll just keep it the way it is.

38
00:03:26.140 --> 00:03:29.800
Closing tag and we'll have another div.

39
00:03:34.460 --> 00:03:36.980
That within here, if you remember, we have.

40
00:03:37.920 --> 00:03:43.530
Our name and email in here, so we'll just do an H H2.

41
00:03:44.630 --> 00:03:47.750
Well, just right, hard coded values here.

42
00:03:48.240 --> 00:03:49.280
Well, Jane Doe.

43
00:03:51.920 --> 00:03:59.930
And finally, a pit tag that has some email address, let's Jane Doe at Gmail dot com.

44
00:04:01.420 --> 00:04:02.350
Clothes, a tag.

45
00:04:03.490 --> 00:04:10.570
All right, so we just have a simple component that's returning card and remember, we want to export

46
00:04:10.570 --> 00:04:14.500
this, so we want to say export default card.

47
00:04:17.250 --> 00:04:23.090
Save I get I'm Gelman's must have an adult property again, it's giving me a nice hint.

48
00:04:23.280 --> 00:04:26.790
So let's just add a alt prop..

49
00:04:26.880 --> 00:04:29.370
We just say what this photo is.

50
00:04:29.550 --> 00:04:34.110
So I'll just say photo for now or I'll say robots for now.

51
00:04:36.030 --> 00:04:39.210
Compiled successfully, if we look back at our app.

52
00:04:40.190 --> 00:04:43.880
We have robots, Jane Doe and Jane Doe, perfect.

53
00:04:46.000 --> 00:04:52.600
All right, we have the card component, and you must be asking yourself, why are we using react here

54
00:04:52.600 --> 00:04:54.400
if we're not really using it?

55
00:04:54.730 --> 00:04:56.200
Let's see what happens if I remove it.

56
00:04:57.960 --> 00:05:06.270
I get a whole bunch of errors that says Riak must be in scope when using Jagex, remember, Jair, sex

57
00:05:06.270 --> 00:05:07.500
is this.

58
00:05:07.770 --> 00:05:13.890
We're not writing a Schimel, we're writing about sex and we need to import react so that.

59
00:05:15.220 --> 00:05:19.750
Our program understands this ASML like Syntex.

60
00:05:20.140 --> 00:05:25.810
OK, now we need an image and for this exercise I have something called robo hash for you.

61
00:05:26.660 --> 00:05:28.660
It's a really, really cool API.

62
00:05:28.930 --> 00:05:30.820
And for those that don't know what APIs are.

63
00:05:30.850 --> 00:05:33.760
Don't worry, I have a session coming up with all that information.

64
00:05:33.780 --> 00:05:35.080
Well, you'll get to learn about it.

65
00:05:35.410 --> 00:05:45.130
But the cool thing about robo hashes, I can just say anything in here and it will return are a random

66
00:05:45.130 --> 00:05:45.880
robot for me.

67
00:05:47.310 --> 00:05:50.340
All we need is just this you, Earl.

68
00:05:52.970 --> 00:05:55.820
And I can just say for now, test.

69
00:05:59.230 --> 00:06:02.650
If I save this and go back to my example.

70
00:06:05.880 --> 00:06:06.490
There you go.

71
00:06:06.540 --> 00:06:13.080
We have our random robot, if I change this to say test test, I save.

72
00:06:14.040 --> 00:06:15.330
Well, now I get.

73
00:06:16.440 --> 00:06:18.510
Another robot, how cool is that?

74
00:06:20.350 --> 00:06:27.580
All right, I want to make sure that the size is somewhat small so you can do a question mark here and

75
00:06:27.580 --> 00:06:29.040
just give it width and height.

76
00:06:29.080 --> 00:06:32.070
So I'm just going to do two hundred by two hundred.

77
00:06:32.710 --> 00:06:35.830
And again, this is just something that you do with this.

78
00:06:36.190 --> 00:06:40.780
You URL that they give you and the information here will make you go through it.

79
00:06:44.770 --> 00:06:46.990
Everything should look nice.

80
00:06:48.870 --> 00:06:55.890
Now, let's say I wanted to add a title and I'll do something like Divx or H1.

81
00:07:06.840 --> 00:07:12.990
You see, I get an error here, it's because, remember, we need to return one thing and we can have

82
00:07:13.410 --> 00:07:14.190
multiple.

83
00:07:15.480 --> 00:07:21.420
Elements being returned, right, if we want to return something, make sure it's one thing or another,

84
00:07:21.450 --> 00:07:25.380
but for now, we'll worry about the title later.

85
00:07:25.410 --> 00:07:29.550
We want to make sure that we're only returning one element.

86
00:07:29.550 --> 00:07:34.710
So in this case, the development that has a ton of things inside, which is the car component.

87
00:07:35.550 --> 00:07:37.110
All right, let's save.

88
00:07:38.810 --> 00:07:41.450
All right, we have our card component.

89
00:07:41.570 --> 00:07:49.130
It looks nice, but what if I wanted to have multiple cars now according to what we know, because we

90
00:07:49.130 --> 00:07:53.570
have the card component, if I go to index, James, I can just say.

91
00:07:55.690 --> 00:07:58.870
And to put this on a new line so you can see, I can just.

92
00:08:00.360 --> 00:08:01.620
Wrap this in a div.

93
00:08:03.170 --> 00:08:07.460
Again, because we want to return just a single element, and I can say.

94
00:08:14.510 --> 00:08:15.980
And close the div tag.

95
00:08:18.540 --> 00:08:25.050
Save and look at that, we have multiple cars now, they're each their own component.

96
00:08:26.100 --> 00:08:32.250
OK, but let's have some styling to this just to make it look nicer again, because we have tachyons,

97
00:08:32.610 --> 00:08:35.220
we can use some really nice Syntex.

98
00:08:35.700 --> 00:08:40.230
If we go to the car's component within the div, I can say class name again.

99
00:08:40.260 --> 00:08:45.080
Remember, we can use class BGI light green.

100
00:08:45.120 --> 00:08:47.310
So that is background like green.

101
00:08:47.310 --> 00:08:50.980
And this is just tachyon classes that are already predefined for us.

102
00:08:51.120 --> 00:08:52.990
Again, CSFs section.

103
00:08:53.390 --> 00:08:54.690
This isn't that.

104
00:08:54.810 --> 00:08:57.060
So we're not going to focus too much on CSFs.

105
00:08:57.060 --> 00:08:58.950
I'll just give you the styling that you need.

106
00:08:59.700 --> 00:09:02.550
We have the d'Hiv, the border.

107
00:09:03.090 --> 00:09:07.500
We have padding of three lots and margins too as well.

108
00:09:07.500 --> 00:09:09.710
And then we'll do Growe, which is the animation.

109
00:09:09.960 --> 00:09:11.040
So if I save this.

110
00:09:14.160 --> 00:09:15.990
That's that's pretty nice.

111
00:09:19.170 --> 00:09:27.150
You know what, let's add a few more will do B.W. two and Shadow five to add a bit of.

112
00:09:28.110 --> 00:09:29.040
Shadows to them.

113
00:09:29.850 --> 00:09:30.460
There you go.

114
00:09:30.510 --> 00:09:32.010
They look more 3-D now.

115
00:09:32.610 --> 00:09:33.620
That looks very nice.

116
00:09:35.040 --> 00:09:41.580
There you go, we have our cards again, we don't want this static card where it says Jane Doe, Jane

117
00:09:41.580 --> 00:09:44.030
Doe, Jane Doe, we want it to be dynamic, right?

118
00:09:44.040 --> 00:09:47.460
So it sounds like we need what we call props properties.

119
00:09:48.770 --> 00:09:55.190
Well, and actually, I have for you a robot's object that I've created, so I'm just going to add a

120
00:09:55.190 --> 00:09:57.470
new file here that says robots.

121
00:09:59.450 --> 00:10:02.330
And within here, I'm just going to copy and paste this.

122
00:10:03.080 --> 00:10:05.710
As you can see, it is just a constant object.

123
00:10:05.720 --> 00:10:12.200
Its robots, it's an array of objects and it has ID, name, user name, email.

124
00:10:12.290 --> 00:10:14.480
And these are just random that I've made.

125
00:10:16.430 --> 00:10:22.430
If you want this file, then you can grab the files from the end of this section, but for now, this

126
00:10:22.430 --> 00:10:25.700
way, I have something that I can use and you can see I'm exporting it.

127
00:10:26.330 --> 00:10:27.050
I can say.

128
00:10:30.350 --> 00:10:36.860
Robots from DOT because we're in the same directory, robots.

129
00:10:38.850 --> 00:10:48.600
Now, if I save this, I got robots as defined by never used, but because this is using export instead

130
00:10:48.600 --> 00:10:52.380
of export default, this file could have multiple exports.

131
00:10:52.530 --> 00:10:54.370
It just so happens that I only have one.

132
00:10:54.750 --> 00:10:57.900
The rule is for these ones because they're a default.

133
00:10:58.050 --> 00:11:02.480
Well, you can just do card for ones that aren't default.

134
00:11:02.610 --> 00:11:04.500
You have to restructure it.

135
00:11:05.560 --> 00:11:12.670
That is like this, so that if I have another variable, let's say that says Katz, then I will have

136
00:11:12.670 --> 00:11:14.730
to do that to grab it.

137
00:11:16.070 --> 00:11:17.240
So we have robots.

138
00:11:18.380 --> 00:11:26.660
And now I can't give it some properties I can say ID equals, and again, we have these brackets so

139
00:11:26.660 --> 00:11:29.870
that it's a JavaScript expression and we'll say robots.

140
00:11:31.970 --> 00:11:33.050
But robots.

141
00:11:36.850 --> 00:11:38.800
ID has the ID.

142
00:11:39.980 --> 00:11:43.640
Then we have name equals robots.

143
00:11:44.060 --> 00:11:47.840
Again, the first user, that name.

144
00:11:49.440 --> 00:11:54.600
Close to bracket, and then we also have email equals.

145
00:11:56.050 --> 00:12:00.850
Robots first in the area got email.

146
00:12:03.330 --> 00:12:05.490
Holy moly, that's a lot of typing.

147
00:12:07.300 --> 00:12:13.000
And I'm going to make this smaller, just so you can see, I'm going to copy and paste for the other

148
00:12:13.000 --> 00:12:21.220
ones as well, except for change this to the second user and then the third.

149
00:12:22.390 --> 00:12:25.510
Use up the second.

150
00:12:31.640 --> 00:12:37.940
Now, if I say this, it's compiled successfully, but, well, nothing has changed because we need

151
00:12:37.940 --> 00:12:39.700
to go to cards.

152
00:12:39.710 --> 00:12:41.540
I'm going to close robust, such as for now.

153
00:12:42.080 --> 00:12:46.340
And this because Cartes needs to now accept parameters.

154
00:12:46.490 --> 00:12:47.730
And what are the parameters?

155
00:12:47.750 --> 00:12:51.770
Well, its properties and these props are now.

156
00:12:54.760 --> 00:12:56.200
Dot name.

157
00:13:07.430 --> 00:13:08.090
Go back.

158
00:13:08.750 --> 00:13:13.650
It's not working well because this is a JavaScript expression, right?

159
00:13:13.850 --> 00:13:17.510
So I need to wrap it in curly brackets.

160
00:13:18.680 --> 00:13:21.740
Just the way it works in sex save.

161
00:13:22.930 --> 00:13:29.440
Look at that, we have dynamic names that we're passing as properties to each one.

162
00:13:29.920 --> 00:13:31.600
Let's head tech center here.

163
00:13:33.630 --> 00:13:34.540
And there you go.

164
00:13:34.590 --> 00:13:36.480
Now we have everything center that's a lot better.

165
00:13:38.150 --> 00:13:44.200
OK, but we also passed ID, we can use ID to do something cool, if you remember in the ESX section

166
00:13:44.900 --> 00:13:53.210
we have template strings and because this is a template string, we have to wrap it in a curly bracket.

167
00:13:53.210 --> 00:13:54.680
So it's a JavaScript expression.

168
00:13:55.190 --> 00:14:03.410
And now within the robo hash, instead of using test here, we can randomize what robots we get by using

169
00:14:03.770 --> 00:14:05.170
the syntax, as you remember.

170
00:14:05.330 --> 00:14:08.210
And in here we can just say prop stot ID.

171
00:14:08.780 --> 00:14:14.360
So now this will say Wrobel hash tag ID of whatever it is for the robot.

172
00:14:15.390 --> 00:14:21.120
With the size, so we make sure that, again, the IDs are always dynamic and changing if I say this.

173
00:14:24.190 --> 00:14:29.800
Look at that, you see that there's a bit of a delay, again, because we're talking to the API and

174
00:14:29.800 --> 00:14:33.700
the API is returning answer for us, but how cool is that?

175
00:14:33.730 --> 00:14:37.180
We just created our own dynamic, Cartes.

176
00:14:39.240 --> 00:14:45.180
One last thing, although this works, something nicer that you can do is we have something called the

177
00:14:45.180 --> 00:14:45.710
structure.

178
00:14:46.260 --> 00:14:48.420
We can do something like const.

179
00:14:50.800 --> 00:14:51.520
Name.

180
00:14:53.010 --> 00:14:56.630
Email equals props.

181
00:14:57.330 --> 00:15:01.440
Again, as you may remember from Essex, and now I can use.

182
00:15:03.570 --> 00:15:05.360
And that's a good idea as well.

183
00:15:14.070 --> 00:15:19.860
Another cool thing that you can do, and this is even cleaner, is within the parameters you can do

184
00:15:20.250 --> 00:15:21.120
the structuring.

185
00:15:21.570 --> 00:15:23.610
Again, you can add these over here now.

186
00:15:28.580 --> 00:15:29.810
And now if I save.

187
00:15:31.250 --> 00:15:33.290
It should still work and it does.

188
00:15:34.870 --> 00:15:41.470
This might be confusing if you're new to the structuring, but as you saw, step by step, we're just

189
00:15:41.470 --> 00:15:46.000
receiving props and we're structuring the props right inside of the brackets here.

190
00:15:47.340 --> 00:15:48.450
This is much cleaner.

191
00:15:50.610 --> 00:15:54.120
All right, that was a lot of fun in a really, really fast way.

192
00:15:54.130 --> 00:15:57.930
We've just created our own cards in the next section.

193
00:15:57.940 --> 00:16:00.420
We're going to expand on this and make this even better.

194
00:16:01.050 --> 00:16:01.820
I'll see on that one.

195
00:16:02.460 --> 00:16:02.640
Bye.

