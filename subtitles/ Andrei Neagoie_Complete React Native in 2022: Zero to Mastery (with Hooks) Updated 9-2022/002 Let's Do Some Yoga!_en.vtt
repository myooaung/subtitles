WEBVTT
1
00:00:00.420 --> 00:00:06.060
All right, so over here, we're in the yoga playground and the yoga playground is basically like a

2
00:00:06.060 --> 00:00:12.150
playground, OK, not really, but a place where we can play around with the yoga framework and try

3
00:00:12.150 --> 00:00:14.170
to see how it lays things out.

4
00:00:14.580 --> 00:00:17.060
And so, as you can see here, we have this root container.

5
00:00:17.220 --> 00:00:20.010
Now, think of root as your phone screen, right?

6
00:00:20.430 --> 00:00:22.920
Like it's not going to be this wide.

7
00:00:22.920 --> 00:00:24.330
It's more going to be like.

8
00:00:25.450 --> 00:00:32.080
Kind of like this, that would be your phone screen size and in that phone container, we can start

9
00:00:32.080 --> 00:00:32.980
positioning things.

10
00:00:32.980 --> 00:00:37.900
We have three nodes in here right now, each node.

11
00:00:38.800 --> 00:00:44.920
It's kind of special because what it can do is it can grow and shrink dynamically.

12
00:00:45.460 --> 00:00:51.110
Now, if we give this a grow of one, obviously it's not going to do anything because, well, the root

13
00:00:51.160 --> 00:00:53.300
container is set up in a real fashion.

14
00:00:53.320 --> 00:01:00.430
If we set it up in a column fashion, you can see now that because I gave a grow one, it's taking up

15
00:01:00.520 --> 00:01:02.730
the rest of the space.

16
00:01:02.740 --> 00:01:07.370
And if I gave these all the grow one, well, they would all take up equal space.

17
00:01:08.050 --> 00:01:08.800
Interesting.

18
00:01:09.580 --> 00:01:11.470
Now, how would I make them taken the width?

19
00:01:12.190 --> 00:01:16.230
Well, if we went to layout here, we can see that they have a fixed width and a fixed height.

20
00:01:16.570 --> 00:01:21.070
So if we gave them a fixed aspect ratio, well, now they're overflowing.

21
00:01:21.080 --> 00:01:22.190
That doesn't look too good.

22
00:01:22.990 --> 00:01:24.010
Well, how would we do that?

23
00:01:24.040 --> 00:01:29.340
Oh, they automatically taken they automatically take in the width.

24
00:01:29.850 --> 00:01:30.730
Interesting.

25
00:01:31.000 --> 00:01:35.110
So because they had a fixed with and height, they were kind of already.

26
00:01:36.810 --> 00:01:44.220
Fixating themselves in a specific constraint, so by giving them no constraints at all and just saying,

27
00:01:44.220 --> 00:01:51.180
hey, grow to the size that is available, well, now they've grown to the size of the parent container's

28
00:01:51.180 --> 00:01:51.660
width.

29
00:01:52.020 --> 00:01:56.430
And the way that we know that is because we can go here.

30
00:01:56.760 --> 00:02:02.370
And if we remove this node right, you can see that they'll keep on growing, keep on growing.

31
00:02:02.400 --> 00:02:02.680
Right.

32
00:02:02.700 --> 00:02:05.750
And if we put this to zero, well, it's not going to grow at all.

33
00:02:06.330 --> 00:02:08.220
But let's say we made this a bit higher.

34
00:02:10.210 --> 00:02:10.889
Five fifty.

35
00:02:11.740 --> 00:02:16.510
Well, if we added a child note inside of here and we said for this child known, make it grow one.

36
00:02:17.580 --> 00:02:22.350
Interesting, and we said the layout, well, don't give it a fix with don't give it a fixed height.

37
00:02:23.160 --> 00:02:27.810
Well, now two is taking up all the space and one is over here being sad because we took away all of

38
00:02:27.810 --> 00:02:28.620
its properties.

39
00:02:29.970 --> 00:02:36.030
And so you can kind of see how as we play along with this, we can kind of get a sense of.

40
00:02:37.090 --> 00:02:39.610
What exactly can we do with this yoga stuff?

41
00:02:40.990 --> 00:02:47.200
What is available to us, and that is what is interesting, right, is that we could do something like

42
00:02:47.200 --> 00:02:50.650
this where to is wider than one.

43
00:02:50.980 --> 00:02:57.850
And what's extremely cool about this is if you take all of this, you have this get code over.

44
00:02:58.780 --> 00:03:02.160
Yoga is used by litho component kit and react native.

45
00:03:02.170 --> 00:03:08.710
And so we could go and look at, hey, what react native code would generate this layout and we can

46
00:03:08.710 --> 00:03:16.060
get a good idea of how we have to layout our views in specific ways to take up certain portions of the

47
00:03:16.060 --> 00:03:19.210
screen or put things in a specific spot.

48
00:03:19.210 --> 00:03:19.660
Right.

49
00:03:19.810 --> 00:03:21.480
In a dynamic fashion.

50
00:03:22.090 --> 00:03:27.910
So that's extremely interesting because we can go and build an entire test UI in here.

51
00:03:28.150 --> 00:03:33.760
If we gave this all background colors, we could go put this in a snack, for instance.

52
00:03:33.760 --> 00:03:35.350
We could copy this to our clipboard.

53
00:03:35.710 --> 00:03:37.180
We could go to a snack.

54
00:03:37.180 --> 00:03:37.540
Right.

55
00:03:37.990 --> 00:03:39.220
Snack XPO.

56
00:03:40.060 --> 00:03:46.960
And we could kind of put this in a snack, and if we did that, what we would see here is that, well,

57
00:03:47.440 --> 00:03:47.810
what?

58
00:03:50.250 --> 00:03:55.410
I copied a bit too much, maybe we'll see here what exactly is going on.

59
00:03:55.890 --> 00:03:56.900
Oh, copy that.

60
00:03:56.920 --> 00:03:59.070
An actual entire component inside of here.

61
00:03:59.080 --> 00:03:59.900
So that's not so good.

62
00:04:01.630 --> 00:04:07.360
Let's go ahead and remove that and let's just put it here and then we can copy specifically what is

63
00:04:07.360 --> 00:04:14.710
in the return and remove the rest and then we can take the return here and we can make it so.

64
00:04:14.710 --> 00:04:18.339
So if we said background color blue.

65
00:04:18.850 --> 00:04:19.209
Right.

66
00:04:20.140 --> 00:04:23.410
And we said background color green.

67
00:04:24.670 --> 00:04:26.980
Right, background, color, green.

68
00:04:28.130 --> 00:04:31.110
OK, so that's taking up the whole with interesting.

69
00:04:31.460 --> 00:04:36.100
So this was view one that kind of sat at the top and didn't have anything right.

70
00:04:36.590 --> 00:04:37.880
So if we said read.

71
00:04:39.240 --> 00:04:46.140
Now it's taking up 50 50, Flexcar zero, taking up zero, and so we can kind of go ahead and play around

72
00:04:46.140 --> 00:04:49.200
with this if we said this was orange, right.

73
00:04:50.010 --> 00:04:52.890
And then we said this one was.

74
00:04:54.550 --> 00:04:58.570
I'm really laying it out in a weird way here, let's just put this real quick.

75
00:04:59.530 --> 00:05:07.540
If we take this one and we say purple and then we take this one and we say yellow, well, we can see

76
00:05:07.540 --> 00:05:10.570
that we took our layout, right.

77
00:05:11.050 --> 00:05:15.100
Our layout that was in yoga right here.

78
00:05:16.010 --> 00:05:24.590
We put it inside of a snack and we were able to take what was in yoga and visualize it in the snack

79
00:05:24.600 --> 00:05:29.540
so you can go and play around with yoga, play around with different layout types and see how flexible

80
00:05:29.540 --> 00:05:34.220
box interacts and really learn to understand how layout happens and react native.

81
00:05:34.400 --> 00:05:38.840
It's a very powerful tool to start to understand the nuances.

82
00:05:38.840 --> 00:05:39.190
Right.

83
00:05:39.470 --> 00:05:44.270
And so I wanted to give you this tools so that you can go ahead, play around, take this, take a snack

84
00:05:44.540 --> 00:05:47.680
and a real snack and maybe a drink and go play around with some yoga.

85
00:05:48.170 --> 00:05:48.710
Sound good.

86
00:05:49.100 --> 00:05:50.210
I'll see you in the next video.

