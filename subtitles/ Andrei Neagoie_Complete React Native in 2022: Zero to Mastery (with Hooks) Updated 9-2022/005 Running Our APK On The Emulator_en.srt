1
00:00:00,980 --> 00:00:06,830
While our bill is running, we can also go and look at the specific logs so we can see what it's going

2
00:00:06,830 --> 00:00:11,450
through, what it's doing, starting the build process, getting the icons, resolving the native modules,

3
00:00:11,810 --> 00:00:17,330
reading the manifest, and then going through the gradle build, which is Android's build tool of choice.

4
00:00:17,330 --> 00:00:22,220
That's going to take all of the information, all of the native code, all of our JavaScript code and

5
00:00:22,220 --> 00:00:24,640
build the output of our application.

6
00:00:25,250 --> 00:00:29,630
And once that is done, what we'll see is a built artifact.

7
00:00:29,790 --> 00:00:36,500
So what we have to do right now is wait for all eight steps to complete once it's gone through all the

8
00:00:36,500 --> 00:00:37,060
steps.

9
00:00:37,610 --> 00:00:41,270
What we have here is what's called a build artifact.

10
00:00:41,270 --> 00:00:47,160
So it's taken all of our code and it's built out that apk that Android package that we can now install

11
00:00:47,160 --> 00:00:47,780
on our phones.

12
00:00:48,080 --> 00:00:52,700
And if we look over here, we can see the logs of the build and see specifically what happened with

13
00:00:52,700 --> 00:00:53,120
the build.

14
00:00:53,870 --> 00:01:00,080
And what we can see over here in our builds is the actual artifact.

15
00:01:00,110 --> 00:01:06,200
So we're able now to download this by pressing this button and what we'll get is the actual app.

16
00:01:07,040 --> 00:01:10,880
So this is the downloadable file of our application.

17
00:01:10,880 --> 00:01:17,210
If we go to download and we take that app and we drag it into our emulator or you send it to your phone,

18
00:01:17,660 --> 00:01:24,080
it's going to install meals to go on our phone as a production build.

19
00:01:24,290 --> 00:01:31,130
So we're going to be able to now see over here meals to go as a standalone application.

20
00:01:31,130 --> 00:01:33,440
It's no longer inside of that XML framework.

21
00:01:33,440 --> 00:01:39,980
And if we press that, it's going to launch missiles to go for us as a native app.

22
00:01:40,160 --> 00:01:45,650
So we can see here is our splash screen coming in and it's loading and optimizing all of the assets.

23
00:01:45,650 --> 00:01:49,280
We can see our app come in here with a nice background feed.

24
00:01:49,580 --> 00:01:54,500
And if we click login, what we can see is Moe at Beeny, Dot Io.

25
00:01:54,890 --> 00:02:01,670
And if we press password test one, two, three and we hit login will come into our application and

26
00:02:01,670 --> 00:02:06,620
we'll be able to see all of our information that we had previously loaded.

27
00:02:08,479 --> 00:02:13,670
And so now that our information is loading on our apk and we have everything ready for Android, one

28
00:02:13,670 --> 00:02:17,150
shortcoming that I need to show you is our settings panel will work as intended.

29
00:02:17,150 --> 00:02:22,730
But when we click the maps integration in a production level build standalone app, we're running into

30
00:02:22,730 --> 00:02:23,240
an error.

31
00:02:23,480 --> 00:02:25,460
It won't render out the map.

32
00:02:25,610 --> 00:02:27,620
It just basically crashes the app.

33
00:02:27,860 --> 00:02:34,940
And this is because if we go over here to our map, USDA deploying a standalone app to Android, you

34
00:02:34,940 --> 00:02:39,880
have to integrate something called Google Sinon or a Google Maps API key.

35
00:02:40,130 --> 00:02:50,060
If you've done the bonus section on the integration of Google Maps into our application, you know that

36
00:02:50,070 --> 00:02:54,410
you require payment information in order to set up Google Cloud in order to do this.

37
00:02:54,950 --> 00:03:00,710
And this highlights all of the steps that you would need to go through in order to integrate that Google

38
00:03:00,710 --> 00:03:08,930
Maps API key step by step and put it in your app, JSON, in order to get that crash to go away.

39
00:03:09,200 --> 00:03:17,030
Now we're trying to showcase the app release procedure and so we don't want to integrate this just for

40
00:03:17,030 --> 00:03:24,560
now, but be aware that certain packages that we use, for instance, the Google Maps package in order

41
00:03:24,560 --> 00:03:29,180
to render our app when we want to release to the Google Play store, will have the additional requirement

42
00:03:29,300 --> 00:03:33,380
of needing to integrate Google Cloud as well and integrate the API key.

43
00:03:33,650 --> 00:03:39,410
And so you can always come back here and go through these steps specifically if you want to release

44
00:03:39,410 --> 00:03:44,150
a production grade app with a maps integration to the app and play store.

