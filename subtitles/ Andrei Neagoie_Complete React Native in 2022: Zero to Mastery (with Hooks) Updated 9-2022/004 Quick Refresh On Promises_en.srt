1
00:00:00,520 --> 00:00:06,190
For those of you who are new to promises, I wanted to put together a quick refresher to explain exactly

2
00:00:06,190 --> 00:00:11,370
what promises do you see over here in the function app?

3
00:00:11,380 --> 00:00:16,320
The component we have a const my promise, and this is equal to a new promise.

4
00:00:16,660 --> 00:00:18,330
New promise is a key word.

5
00:00:18,490 --> 00:00:21,550
It's a key word that is used to define a promise.

6
00:00:21,760 --> 00:00:24,550
Now, a promise is kind of like a binding contract.

7
00:00:24,640 --> 00:00:27,640
You're promising that you're going to get something back in the future.

8
00:00:28,240 --> 00:00:30,250
And so it's a very simple interface.

9
00:00:30,640 --> 00:00:32,229
You say new promise.

10
00:00:32,680 --> 00:00:37,090
This will return a function internally that has a resolve and a reject function.

11
00:00:37,960 --> 00:00:42,220
And then if we hit resolve, we'll return my local promise result.

12
00:00:42,460 --> 00:00:49,690
And if we do my promise that then in the inner function, in the inside, it defines a function.

13
00:00:50,020 --> 00:00:50,450
Right.

14
00:00:50,470 --> 00:00:52,000
This function in the dot then.

15
00:00:52,940 --> 00:00:57,770
Returns as the result that we were promised to get back at a later phase and so over here we can see

16
00:00:57,770 --> 00:01:03,820
local promise, my local promise result, and this is the basic interaction that promises do for us.

17
00:01:04,040 --> 00:01:06,300
It's a promise that something will come back in the future.

18
00:01:06,710 --> 00:01:13,250
Now, to that extent, we're using local promises to resolve local variables right here.

19
00:01:13,250 --> 00:01:16,070
We're not really getting anything from anywhere externally.

20
00:01:17,060 --> 00:01:21,620
Now, there are certain functions out there that work with promises.

21
00:01:22,400 --> 00:01:26,450
Fetch is one of them fetches a standard that is built into every browser.

22
00:01:26,450 --> 00:01:34,520
And what Fetch does is it is an interface around promises that wraps the ability to talk to external

23
00:01:34,520 --> 00:01:35,330
APIs.

24
00:01:35,780 --> 00:01:43,220
So if we did, for instance, fetch http jobholder type COCOM to DOS one and we did that, then then

25
00:01:43,220 --> 00:01:51,560
our response would come back as a JSON object, adjacent object as a simple JavaScript object that returns

26
00:01:51,830 --> 00:01:52,800
properties.

27
00:01:53,240 --> 00:02:00,770
Now any time we're fetching JSON, when it's returned in a JSON format, we'll do the following interaction.

28
00:02:00,950 --> 00:02:06,830
We'll do a dot then response equals response adjacent to pass the JSON and then we'll do another dot

29
00:02:06,830 --> 00:02:11,670
then where we get our actual response and then console log out the response.

30
00:02:11,690 --> 00:02:15,980
So here you can see that I'm getting to DOS number one from JSON placeholder dot com.

31
00:02:16,520 --> 00:02:22,950
And in my logs here you can see that that returns me a user ID and ID, a title and a completed.

32
00:02:23,240 --> 00:02:29,750
So this is the basic interaction of how promises interact and how we can use them to call external services.

33
00:02:30,230 --> 00:02:32,210
And that's our quick refresher on promises.

