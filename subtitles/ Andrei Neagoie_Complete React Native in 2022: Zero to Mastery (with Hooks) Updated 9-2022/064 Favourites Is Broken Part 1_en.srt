1
00:00:00,760 --> 00:00:09,670
As we can see, we have a major problem right now when we log in to Mo Adine, the audio with test one,

2
00:00:09,670 --> 00:00:14,320
two, three, we're loading the exact same.

3
00:00:15,340 --> 00:00:18,100
Favorites for each individual user.

4
00:00:18,250 --> 00:00:26,470
So right over here, we can see we're loading these favorites and if we reload and we log into to plus

5
00:00:26,470 --> 00:00:31,470
to add beneath audio, we're going to see the exact same thing pop up mode.

6
00:00:31,480 --> 00:00:35,560
Plus to add, we need audio test, one, two, three.

7
00:00:35,830 --> 00:00:36,910
And we log in.

8
00:00:37,600 --> 00:00:40,940
We're going to see the exact same favorites load.

9
00:00:41,530 --> 00:00:44,920
Now, first of all, why are the exact same favorites loading?

10
00:00:45,970 --> 00:00:54,490
Well, we have an issue where we're not uniquely identifying each and every favorite, we're not uniquely

11
00:00:54,490 --> 00:00:57,900
identifying the favorites, and that's a problem.

12
00:00:58,390 --> 00:01:03,080
But the second problem is why do we have to authenticate every time we reload?

13
00:01:03,370 --> 00:01:05,170
Why isn't the session persisting?

14
00:01:05,530 --> 00:01:07,510
So there's a twofold error going on here.

15
00:01:07,510 --> 00:01:14,080
Our authentication infrastructure is eight percent set up, but we have a problem with the persistence

16
00:01:14,080 --> 00:01:14,740
of the session.

17
00:01:15,370 --> 00:01:15,670
Right.

18
00:01:15,670 --> 00:01:21,010
Our user, when we reload, is technically still logged in, but for some reason we can log in again.

19
00:01:21,700 --> 00:01:25,000
And then on top of that, our favorites aren't being stored against the right user.

20
00:01:25,600 --> 00:01:29,550
OK, so we have to solve this one issue at a time.

21
00:01:30,010 --> 00:01:35,080
And so the first issue we need to solve is we need to solve the issue of the session persistence.

22
00:01:35,560 --> 00:01:42,010
And in order to do that, what we need to go look at is the way that Firebase is set up in the often

23
00:01:42,010 --> 00:01:43,020
vacation context.

24
00:01:43,480 --> 00:01:45,040
And over here we can see that.

25
00:01:45,310 --> 00:01:48,790
Well, if we log in, we're we're doing our login or register.

26
00:01:49,120 --> 00:01:57,490
All that stuff is good, but we're not checking on app load if there is actually already a session.

27
00:01:57,940 --> 00:01:59,770
And so Firebase has a hook for that.

28
00:02:00,340 --> 00:02:04,240
Firebase has a hook that's going to go look for off state changes.

29
00:02:04,480 --> 00:02:07,510
And it's called Firebase off on state change.

30
00:02:07,930 --> 00:02:16,990
And that's going to take the user object and is going to say, well, if user then set the user to user

31
00:02:17,590 --> 00:02:24,460
and that's going to ensure us that, well, Firebase is going to go look, hey, did I previously authorize

32
00:02:24,790 --> 00:02:25,960
someone to log in?

33
00:02:26,440 --> 00:02:33,520
And if I previously authorized someone to log in, well, let's go ahead and use that user and log them

34
00:02:33,520 --> 00:02:38,230
in rather than still have authentication session going on.

35
00:02:38,230 --> 00:02:41,830
But allow a different user to login because that creates conflicting state.

36
00:02:41,830 --> 00:02:44,620
We don't want to we don't want to work with conflicting state.

37
00:02:44,620 --> 00:02:48,550
We don't want to have issues between different users going on.

38
00:02:48,550 --> 00:02:54,370
So when the app boots and we set up our authentication context, let's quickly go check if there's already

39
00:02:54,370 --> 00:02:56,980
a session going on, if not completely fine.

40
00:02:57,340 --> 00:03:00,280
We still go to our account screen and we can log in.

41
00:03:00,950 --> 00:03:03,450
OK, so now how do we log out then?

42
00:03:03,490 --> 00:03:07,930
So you kind of basically broke the entire thing and now we can't log out.

43
00:03:08,830 --> 00:03:09,760
Well, good point.

44
00:03:10,420 --> 00:03:14,700
The way that we need to log out is kind of through Firebase as well.

45
00:03:15,400 --> 00:03:21,700
And so in order to get that going, well, we need to add right here and log out function.

46
00:03:22,180 --> 00:03:24,490
And I just noticed something we're missing.

47
00:03:24,760 --> 00:03:31,840
A set is loading to true for the register function right over here.

48
00:03:33,010 --> 00:03:34,750
And so that may cause issues.

49
00:03:35,350 --> 00:03:41,080
So let's make sure that we always start loading when we register, but we need an on log out function

50
00:03:41,080 --> 00:03:48,460
where basically we'll set the user to know and we'll call Firebase off that sign out because that should

51
00:03:48,460 --> 00:03:48,970
always work.

52
00:03:48,970 --> 00:03:53,050
It's just going to clear state so we don't need to use the dot then the catch syntax.

53
00:03:53,350 --> 00:03:55,900
It will always successfully log you out.

54
00:03:56,380 --> 00:04:01,870
And so because of that, now we can take this on logout function and we can pass it over here to the

55
00:04:01,870 --> 00:04:02,410
value.

56
00:04:04,070 --> 00:04:10,010
And we can quickly build a very simple logout function before we have our settings ready over here in

57
00:04:10,010 --> 00:04:14,540
settings, we can quickly go get a button from Riak native.

58
00:04:15,260 --> 00:04:24,080
And once we have this button, what we can do is we can say button title is equal to logout.

59
00:04:24,960 --> 00:04:27,150
And we'll say on press.

60
00:04:28,230 --> 00:04:32,820
Is equal to a function called of on logout.

61
00:04:33,450 --> 00:04:41,760
Now, we don't have on logout right here currently, but if we import the authentication context.

62
00:04:45,320 --> 00:04:55,100
Thought slash, slash services, slash, navigate authentication, slash authentication context, now

63
00:04:55,100 --> 00:04:55,710
we'll have it.

64
00:04:56,180 --> 00:05:00,290
We also need to import use context from react so that we can use the context.

65
00:05:00,680 --> 00:05:07,130
And if we quickly build it inside of our settings placeholder here, we can quickly put a button in

66
00:05:07,130 --> 00:05:10,280
place just to make sure that we have a full circle authentication.

67
00:05:10,280 --> 00:05:18,200
So const on logout is equal to use context of and then we grab our authentication context from here.

68
00:05:19,250 --> 00:05:22,340
And we'll plug it into this part.

69
00:05:23,620 --> 00:05:31,540
And once we do that, well, now we can go full circle with our logout function by doing this, we now

70
00:05:31,540 --> 00:05:33,360
kind of have gone full circle.

71
00:05:33,370 --> 00:05:39,160
If we go to settings, we can press the on logout function and that's going to Lagus out.

72
00:05:39,160 --> 00:05:46,270
Firebase no longer has a session now and we can securely log in to another account without having any

73
00:05:46,270 --> 00:05:51,140
issues of potentially having conflicting state or anything like that.

74
00:05:51,880 --> 00:05:56,590
And so what we want to do is say test one, two, three.

75
00:05:57,310 --> 00:06:01,030
And if we log in now, we're logged in as a different user.

76
00:06:01,270 --> 00:06:06,520
But we still have the issue of the favorites being persisted, even though we have different users.

77
00:06:07,190 --> 00:06:12,970
So how do we solve that when we've solved one fourth of the problem, which is our authentication session

78
00:06:12,970 --> 00:06:13,510
issue?

79
00:06:13,900 --> 00:06:17,350
And the second fold of the problem is the favorites issue.

