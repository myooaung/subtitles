WEBVTT
1
00:00:00.380 --> 00:00:06.470
First up is Android, and so if we choose to build for Android, what we're going to see here is that

2
00:00:06.470 --> 00:00:11.630
when building for Android, you can choose to build an app or an app bundle.

3
00:00:12.530 --> 00:00:13.280
Well, what's that?

4
00:00:13.310 --> 00:00:19.190
So there are different types of binaries or different types of outputs that you can upload to the App

5
00:00:19.190 --> 00:00:19.540
Store.

6
00:00:19.910 --> 00:00:25.190
Now, app bundles are recommended, but you have to make sure that Google Play app signing is enabled

7
00:00:25.190 --> 00:00:26.120
for your project.

8
00:00:26.540 --> 00:00:28.670
So this is a more complicated step.

9
00:00:29.280 --> 00:00:35.960
If it's your first time building, they'll ask you also to upload a key store for XPO to be able to

10
00:00:35.960 --> 00:00:37.910
handle it for you.

11
00:00:38.420 --> 00:00:41.240
If you don't know what a key store is, they'll generate one for you.

12
00:00:41.360 --> 00:00:42.580
Otherwise you can upload your own.

13
00:00:42.590 --> 00:00:44.100
So we'll let them upload it for us.

14
00:00:44.570 --> 00:00:52.130
And so if EXPL uploads a key store for us, we have to run it later on with the Fetch Key store and

15
00:00:52.130 --> 00:00:53.780
back it up ourselves.

16
00:00:53.940 --> 00:00:57.830
That's recommended because they're storing it in the cloud on their end.

17
00:00:58.730 --> 00:01:02.690
And so making up a backup of your key story is extremely important because once you submit to the Google

18
00:01:02.690 --> 00:01:06.170
Play store, all future releases must also be signed with that same key store.

19
00:01:06.200 --> 00:01:09.410
Think of it like a contract.

20
00:01:09.680 --> 00:01:13.720
And Google, once you release with that key store, is going to hold you to that key store.

21
00:01:13.730 --> 00:01:14.720
It's kind of like a contract.

22
00:01:14.720 --> 00:01:20.450
It's a file that contains information that's going to be specific to our application signing process.

23
00:01:20.660 --> 00:01:23.980
So Google just wants to make sure that you are the one signing.

24
00:01:24.590 --> 00:01:27.470
So first things first, let's go run Expo, build Android.

25
00:01:27.620 --> 00:01:34.490
And so over here, if we open up our terminal, what we're going to see is that once I run, X will

26
00:01:34.490 --> 00:01:38.300
build Android, it's going to set up my project.

27
00:01:38.300 --> 00:01:41.150
So it's going to ask me what would I want my Android package name to be?

28
00:01:41.150 --> 00:01:42.980
And it's going to give me an option.

29
00:01:42.980 --> 00:01:44.830
Karmo beneath that to go.

30
00:01:44.840 --> 00:01:46.130
So I'm going to accept that.

31
00:01:46.730 --> 00:01:48.600
And then it's going to say, what do you want to build?

32
00:01:48.620 --> 00:01:53.330
Do you want to build an app, build a package to deploy to the store or directly to Android devices

33
00:01:53.330 --> 00:01:58.190
or an app bundle, build an optimized bundle for the store where we're going to choose an app because

34
00:01:58.190 --> 00:02:02.380
then we can install it directly on Android devices if we choose to.

35
00:02:02.480 --> 00:02:03.620
So let's choose that.

36
00:02:04.570 --> 00:02:11.740
Once this is done, building your local JavaScript bundle, what it's going to do is it's going to upload

37
00:02:11.740 --> 00:02:13.870
your build to Expo over here.

38
00:02:13.870 --> 00:02:17.230
And if we go over to Build's, we can see now it's been uploaded and it's been cued.

39
00:02:17.230 --> 00:02:21.390
So XML is going to take over the build for us.

40
00:02:21.850 --> 00:02:27.880
We've built our JavaScript or optimized JavaScript output and now Expo is going to go through the steps

41
00:02:27.880 --> 00:02:30.560
of actually building our Android app.

42
00:02:30.640 --> 00:02:30.960
Okay.

43
00:02:31.480 --> 00:02:40.030
And once it's done installing that Android app, it will allow us to download that output so that we

44
00:02:40.030 --> 00:02:43.180
can go through the steps of actually deploying it onto the store.

45
00:02:43.570 --> 00:02:46.140
So as you can see here, it's a step five of eight.

46
00:02:46.150 --> 00:02:47.100
It's running gradle.

47
00:02:47.800 --> 00:02:54.180
And with that, we can now keep track of all the builds that we do for Android or iOS.

48
00:02:54.460 --> 00:03:01.840
So right now we're going through the Android build and once the build is done, we can actually go through

49
00:03:02.020 --> 00:03:04.540
and download the Rapkay, install it on the device.

50
00:03:05.050 --> 00:03:06.550
So let's wait for that bill to finish.

51
00:03:06.550 --> 00:03:09.850
And of course, it gives you a link here where you can keep track of the build.

52
00:03:10.330 --> 00:03:15.400
And if we click that link, we can go to the same exact screen that I just showed you we were at where

53
00:03:15.400 --> 00:03:17.440
we can see which phase it's at.

54
00:03:17.650 --> 00:03:22.450
So once this build is finished, let's go through and see what we can do with the output of that build.

