WEBVTT
1
00:00:00.740 --> 00:00:06.320
Now that we're aware of the process that we need to go through in order to get our Android app running

2
00:00:06.320 --> 00:00:13.040
on our phone, as well as getting the binary that we would utilize to go on the Google Play store and

3
00:00:13.040 --> 00:00:17.780
go through the release procedure, we need to go through the same process for iOS.

4
00:00:18.230 --> 00:00:21.940
And so the way that we would do that is we would run Expo, build iOS.

5
00:00:22.430 --> 00:00:28.970
Now you have to be aware that when we build for iOS, first of all, we need a bundle identifier.

6
00:00:29.000 --> 00:00:36.200
This is just an identifier that the app is going to use in order to know, hey, this is my unique name,

7
00:00:36.200 --> 00:00:37.360
my unique identifier.

8
00:00:37.490 --> 00:00:41.960
So we'll take the one that's auto generated and now we get to choose the build type.

9
00:00:42.290 --> 00:00:44.890
So for iOS, there are different bill types.

10
00:00:44.900 --> 00:00:49.550
It's not an app and an Android app bundle.

11
00:00:49.790 --> 00:00:51.950
No, it's an archive or a simulator.

12
00:00:51.950 --> 00:00:57.380
So we can determine whether or not we want to build in order to run a production grade app on our simulator

13
00:00:57.650 --> 00:01:00.710
or we want to deploy the build to the store.

14
00:01:01.490 --> 00:01:04.129
Either process has different requirements.

15
00:01:04.430 --> 00:01:09.890
So if we go down the route of archive now, it's going to ask us, do you have credentials for mobility

16
00:01:09.890 --> 00:01:10.550
in the project?

17
00:01:10.550 --> 00:01:11.140
Needs to go.

18
00:01:11.480 --> 00:01:13.270
OK, so it's going to access the credentials.

19
00:01:13.520 --> 00:01:18.180
Do we have the access to the Apple store account that will be used for submitting to the App Store?

20
00:01:18.980 --> 00:01:19.580
Well.

21
00:01:20.950 --> 00:01:26.320
Now, the question becomes, if we're in a live environment, if we're at a company, do we have access

22
00:01:26.320 --> 00:01:28.800
to credentials that are going to be used to deploy to the store?

23
00:01:29.230 --> 00:01:32.050
In this case, what we'll say is no.

24
00:01:32.680 --> 00:01:33.850
And now it says no problem.

25
00:01:33.850 --> 00:01:37.960
We can auto generate credentials if we don't have them to the main Apple account.

26
00:01:38.110 --> 00:01:38.460
Right.

27
00:01:39.550 --> 00:01:42.790
But we can still set up for the upload credentials, so.

28
00:01:43.740 --> 00:01:51.960
Will we provide our own distribution certificate, so here is the process where we're saying, OK,

29
00:01:51.960 --> 00:01:57.540
we don't have the credentials to deploy to the App Store, they may be in the hands of marketing, they

30
00:01:57.540 --> 00:01:59.730
may be in the hands of a different department altogether.

31
00:02:00.150 --> 00:02:04.620
But now the question is, will you provide your own Apple distribution certificate?

32
00:02:05.750 --> 00:02:08.180
Well, in this case, we'll say let expl handle it.

33
00:02:09.240 --> 00:02:14.030
OK, so now we have to enter your Apple developer program credentials.

34
00:02:14.030 --> 00:02:19.310
If you do not have an Apple developer program credential, what you need to do is you need to go over

35
00:02:19.310 --> 00:02:23.670
to developer the apple dotcom and then you need to enroll in the program.

36
00:02:23.690 --> 00:02:29.540
Now you can enroll as an individual or as an organization, and this will enable you to release to the

37
00:02:29.540 --> 00:02:30.000
App Store.

38
00:02:30.620 --> 00:02:37.700
Luckily, I already have an account, so my Apple ID is this email and for the password I will quickly

39
00:02:37.700 --> 00:02:38.660
fill out the password.

40
00:02:41.780 --> 00:02:46.460
And so if I hit enter here, what it's going to do is it's going to authenticate against the Apple developer

41
00:02:46.460 --> 00:02:50.530
portal and it's going to ask for access.

42
00:02:50.960 --> 00:02:55.640
So we're going to fill in our six digit code here that is going to show us five to nine.

43
00:02:55.640 --> 00:02:56.120
Nine to.

44
00:02:58.810 --> 00:03:04.930
And then it's going to request for a session and what it's going to say is now failed to prompt for

45
00:03:04.930 --> 00:03:05.890
all the credentials.

46
00:03:06.280 --> 00:03:08.980
Next time you build automatically, it will use the credentials.

47
00:03:09.520 --> 00:03:11.870
You have no team associated with your Apple account.

48
00:03:12.700 --> 00:03:15.880
Now, we need to make sure that we have a Pete Apple developer account.

49
00:03:15.880 --> 00:03:18.790
Do we actually have a paid Apple developer account?

50
00:03:19.000 --> 00:03:19.930
That is a good question.

51
00:03:19.930 --> 00:03:26.230
If we look at the status of the changes that it's made, Will, now we're basically in a state where

52
00:03:26.440 --> 00:03:29.830
we need to make sure that we have an Apple developer account.

53
00:03:29.830 --> 00:03:37.960
Otherwise we cannot even begin to build the output that is required to run our app on our phone.

54
00:03:38.260 --> 00:03:40.920
This is one of the cruxes of apple development.

55
00:03:41.440 --> 00:03:44.050
So let me go and make sure that I have an Apple developer account.

56
00:03:44.590 --> 00:03:48.920
And so, as you can see over here, currently, I am not enrolled in the Apple developer program.

57
00:03:48.940 --> 00:03:52.390
Now, if you subscribe to the Apple developer program, you can go through this.

58
00:03:52.840 --> 00:03:55.950
I can reapply to the Apple developer program.

59
00:03:55.960 --> 00:03:58.990
And so what I've done is I've gone through the process of renewing my membership.

60
00:03:58.990 --> 00:04:07.300
And so the same would apply to you if you tried to apply this expo, build iOS without having the proper

61
00:04:07.300 --> 00:04:08.290
account information.

62
00:04:08.440 --> 00:04:09.670
So let's go through this again.

63
00:04:10.360 --> 00:04:15.670
Now we're going to say no here and we're going to say let expl handle the process again.

64
00:04:15.670 --> 00:04:17.769
We're going to authenticate against the portal.

65
00:04:18.370 --> 00:04:23.890
And if authenticated successfully, it's now creating a distribution certificate and all of that stuff.

66
00:04:23.890 --> 00:04:29.670
Now that I have a valid Apple account again, will you provide your own app, a push notification service

67
00:04:29.680 --> 00:04:29.890
again?

68
00:04:29.890 --> 00:04:31.270
We're going to let XML handle it.

69
00:04:31.270 --> 00:04:36.220
So we're going to go let it go through the process of setting up our Apple developer account, setting

70
00:04:36.220 --> 00:04:41.180
up everything that needs to be set up in terms of provisioning profiles and all of that good stuff.

71
00:04:41.470 --> 00:04:42.880
Now we've run into another error.

72
00:04:43.330 --> 00:04:47.350
Runtime error cannot find app would bundle ID come up beneath that meals to go.

73
00:04:48.610 --> 00:04:51.430
Interestingly enough, it's run into an error.

74
00:04:51.910 --> 00:04:54.140
So if we go here to our bundle and certificates list.

75
00:04:56.470 --> 00:05:00.310
Well, we can see here is that we have an IRS distribution certificate.

76
00:05:01.180 --> 00:05:03.100
We do not have any identifiers.

77
00:05:04.010 --> 00:05:05.150
We have a device set up.

78
00:05:06.830 --> 00:05:13.220
But what we need to do here is we need to add an app I.D., so let's add an identifier so we'll add

79
00:05:13.220 --> 00:05:15.350
an app ID, will it continue?

80
00:05:15.560 --> 00:05:18.430
We'll say app will continue.

81
00:05:19.250 --> 00:05:23.240
And what we'll say over here is that the bundle ID needs to be.

82
00:05:24.920 --> 00:05:26.540
Com dot mobeen.

83
00:05:27.620 --> 00:05:33.860
That means to go, so we need to make sure that that's set up in our account, we'll see meals to go

84
00:05:35.300 --> 00:05:35.570
now.

85
00:05:35.570 --> 00:05:37.550
We can determine what access it will have.

86
00:05:42.930 --> 00:05:46.680
We should allow something called push notifications.

87
00:05:46.710 --> 00:05:51.750
We should enable this register, and now that we've registered Miles to go, we can try this process

88
00:05:51.750 --> 00:05:52.130
again.

89
00:05:55.640 --> 00:05:57.950
No, let Expo handle it.

90
00:05:59.410 --> 00:06:03.660
And then we'll sign in, it's going to try to create the provisioning profiles.

91
00:06:03.670 --> 00:06:10.120
Again, it's going to try to optimize the assets and now it's actually able to set everything up in

92
00:06:10.120 --> 00:06:12.530
order to release our application.

93
00:06:13.360 --> 00:06:17.830
So now it's built and optimized our resources, our source maps and our code.

94
00:06:18.340 --> 00:06:22.260
And it's uploading our build over here on XPO.

95
00:06:22.660 --> 00:06:28.210
And what we can see if we go over to Build's is that now a build has started for iOS and so XPO is now

96
00:06:28.210 --> 00:06:32.500
generating the necessary files for iOS.

97
00:06:32.920 --> 00:06:38.440
So it's important to note here that we needed to set up the identifier in our certificate's identifiers

98
00:06:38.440 --> 00:06:43.260
and profiles in order for Expo to be able to manage the output build.

99
00:06:43.930 --> 00:06:48.150
And once this is done building, we'll show you how to run this on your phone.

