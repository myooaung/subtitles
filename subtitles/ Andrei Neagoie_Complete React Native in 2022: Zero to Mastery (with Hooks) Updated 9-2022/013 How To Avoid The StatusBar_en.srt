1
00:00:00,880 --> 00:00:05,860
Now, when we run out on Android, we can see that, hey, the safe air of you really didn't do anything

2
00:00:05,860 --> 00:00:11,260
for us, and if we go look at safe area of you, well, it says only applicable to iOS devices with

3
00:00:11,260 --> 00:00:13,690
iOS version 11 or later.

4
00:00:14,410 --> 00:00:18,160
See if a review renders nested content automatically and applies the padding.

5
00:00:18,190 --> 00:00:18,670
OK.

6
00:00:19,120 --> 00:00:25,900
And then in the example O to use it, wrap the top level view at a safe review with a Flex one style

7
00:00:25,900 --> 00:00:26,500
applied to it.

8
00:00:27,380 --> 00:00:30,530
Well, that's something we accidentally removed, isn't it?

9
00:00:31,070 --> 00:00:38,480
We need to add back style is equal to Styles dark container because we want to make sure that the content

10
00:00:38,480 --> 00:00:40,730
rendered within apply reflects one.

11
00:00:41,150 --> 00:00:46,730
Now, this really isn't going to change anything for Android, but it's important to note that the documentation

12
00:00:46,730 --> 00:00:53,120
in React Native often tells you how to use something, and so it's very imperative to read through the

13
00:00:53,120 --> 00:00:55,100
documentation now.

14
00:00:56,810 --> 00:01:00,590
It says over here, as padding is used to implement the behavior of the component, padding rules and

15
00:01:00,590 --> 00:01:06,200
styles apply to safe air if you will be ignored as they can cause different results, depending on the

16
00:01:06,200 --> 00:01:06,740
platform.

17
00:01:07,010 --> 00:01:12,350
So that means an iOS, any type of padding rules, which we proved are going to be ignored.

18
00:01:12,830 --> 00:01:18,710
But for Android, for Android specifically, well over here we can see that's causing an issue.

19
00:01:19,100 --> 00:01:26,720
So if we say padding top and we say, 10, what's that going to do, huh?

20
00:01:26,750 --> 00:01:27,680
Well, it pushes it down.

21
00:01:28,130 --> 00:01:35,570
That tells us that safe area view in Android doesn't actually apply the same rules as it does on iOS.

22
00:01:36,200 --> 00:01:43,970
So the documentation says this only works for iOS 11 or later, and it's going to ignore padding rules.

23
00:01:44,240 --> 00:01:45,800
So what is it doing on Android?

24
00:01:46,130 --> 00:01:53,630
Well, in Android, we can assume that it's actually falling back to a view component behind the scenes.

25
00:01:53,960 --> 00:01:58,430
So this safe area, if you want Android's actually just rendering a view, which means over here we

26
00:01:58,430 --> 00:01:59,630
can do something pretty cool.

27
00:02:00,350 --> 00:02:01,820
Remember when I showed you platform?

28
00:02:01,820 --> 00:02:05,870
Well, we can take that again, and we can also get something called status bar.

29
00:02:05,900 --> 00:02:13,130
These are two libraries that come from React Native, and what we can say is here platform Dot OS is

30
00:02:13,130 --> 00:02:14,390
equal to Android.

31
00:02:15,410 --> 00:02:17,030
Then we're going to do something specific.

32
00:02:17,030 --> 00:02:19,970
What we're going to do is we're going to give it padding 10 or zero.

33
00:02:20,030 --> 00:02:22,100
We're going to say, Hey, apply a padding.

34
00:02:23,090 --> 00:02:31,010
If you are on Android specifically, so right over here we can go back to devices, we can reload the

35
00:02:31,010 --> 00:02:31,490
apps.

36
00:02:34,140 --> 00:02:39,090
And so what we'll see here is that the content was actually pushed out about 10, so if we put 20,

37
00:02:39,810 --> 00:02:42,090
then we'll see it pushed down about 20.

38
00:02:42,840 --> 00:02:45,730
Now Status Bar comes with a very interesting property.

39
00:02:45,780 --> 00:02:47,400
You can do status bar dot.

40
00:02:47,400 --> 00:02:53,700
Current height and status bar reflects to the status bar over here, so it internally is going to the

41
00:02:53,700 --> 00:03:00,030
native code of the Android device and saying, Hey, get me your status bars actual height in density

42
00:03:00,030 --> 00:03:03,300
pixels so that I can always offset it the right amount.

43
00:03:03,900 --> 00:03:12,990
And so now what we have is a safe area view that is usable for both Android and iOS.

44
00:03:12,990 --> 00:03:18,950
Because on iOS, we know for a fact that this is actually pushing it beyond the notch.

