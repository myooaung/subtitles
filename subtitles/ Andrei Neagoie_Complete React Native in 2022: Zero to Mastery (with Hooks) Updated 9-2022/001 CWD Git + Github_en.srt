1
00:00:01,330 --> 00:00:09,520
In this video, we're going to talk about Git and GitHub and source control now you might remember GitHub

2
00:00:09,520 --> 00:00:16,030
from our previous section where we used it to put the website online, but I'll show you that it is

3
00:00:16,030 --> 00:00:17,150
so much more than that.

4
00:00:17,920 --> 00:00:24,040
More importantly, getting GitHub is used by most professional companies, and it is a skill that is

5
00:00:24,040 --> 00:00:26,630
expected to be known by all developers now.

6
00:00:27,280 --> 00:00:28,870
So this is an important section.

7
00:00:29,890 --> 00:00:35,950
One of the first things most developers have to do on their first day at the job is to meet something

8
00:00:35,950 --> 00:00:39,420
called a pull request, which uses Git and GitHub.

9
00:00:40,210 --> 00:00:42,290
We'll get through that in this section.

10
00:00:42,490 --> 00:00:46,900
Don't worry, you're going to learn all of this and it's going to make sense.

11
00:00:47,560 --> 00:00:48,970
Let's first start with source control.

12
00:00:49,510 --> 00:00:53,000
Up until now, we have only worked on small files.

13
00:00:53,200 --> 00:00:58,060
No team members, just ourselves, just a couple of files.

14
00:00:58,630 --> 00:01:02,410
But in real life, you're most likely not the only developer on a team.

15
00:01:03,300 --> 00:01:09,090
Most likely, the projects are huge, there's many, many files source control allows us to make sure

16
00:01:09,090 --> 00:01:13,230
that multiple people can work on the same file from different locations.

17
00:01:14,300 --> 00:01:21,950
Think of it as Google Docs that allows people to collaborate on one document, but enough talk, let's

18
00:01:21,950 --> 00:01:23,040
actually check it out.

19
00:01:23,360 --> 00:01:25,880
I have over here set up two folders.

20
00:01:27,510 --> 00:01:35,520
One is for myself, Andre, who just started a new job at X Company, and I have Marsi here who has

21
00:01:35,550 --> 00:01:40,250
been working at the company for a while and she has project files over here.

22
00:01:40,650 --> 00:01:46,010
I'm actually using the files from our background generator video now without get GitHub.

23
00:01:46,470 --> 00:01:49,650
What I can do is just copy and paste these files.

24
00:01:49,890 --> 00:01:54,450
So I have whatever Marcy has and we can start working on these files.

25
00:01:54,810 --> 00:02:02,460
I can have my developer environment here with my terminal and my sublime text, and I can work on whatever

26
00:02:02,460 --> 00:02:04,200
changes that need to be made on the app.

27
00:02:04,440 --> 00:02:05,280
And Marci.

28
00:02:06,290 --> 00:02:12,710
Over here also has her own version where she can work on it, and we're both working on the same project,

29
00:02:13,370 --> 00:02:20,150
but let's say that both Marcy and I are working on this project and she decides to change the project

30
00:02:20,150 --> 00:02:23,540
name from gradient background to super background.

31
00:02:24,530 --> 00:02:30,660
And at the same time, in my project, I decide to call this cool background.

32
00:02:31,340 --> 00:02:39,620
Well, now you'll have to set up a meeting between myself and Marcy and decide how we should change

33
00:02:39,620 --> 00:02:40,360
the code.

34
00:02:41,060 --> 00:02:46,520
And this is a small example, but you can imagine that as different programmers work together, there's

35
00:02:46,520 --> 00:02:51,270
always going to be this issue of one person changing one thing and another person changing another thing.

36
00:02:51,560 --> 00:02:54,200
This is where social control came in.

37
00:02:54,740 --> 00:03:01,070
And social control is a way to control this, where we have one place instead of our own.

38
00:03:01,070 --> 00:03:05,840
Computers in this case is just represented by the folder that I have in here.

39
00:03:06,290 --> 00:03:14,240
Instead of each of us having a copy of the project with Source Control, we have a copy of the project.

40
00:03:14,250 --> 00:03:20,930
But there is a centralized location up somewhere, maybe owned by the company or somewhere on the Internet

41
00:03:21,080 --> 00:03:28,280
that has the ultimate version that we each talk to to make sure that we each have the same version.

42
00:03:29,000 --> 00:03:34,340
Getting GitHub is a way to do this, to be able to use social control.

43
00:03:35,000 --> 00:03:38,870
And as a matter of fact, it's the de facto way of doing this.

44
00:03:38,880 --> 00:03:44,540
So like I said before, this is most likely the tool you'll be using every single day at your workplace.

45
00:03:46,130 --> 00:03:54,140
So if I go to the GitHub website here, what it allows us to do is it's a place, a central place that

46
00:03:54,140 --> 00:03:57,150
both Andre and Marcy can talk to.

47
00:03:58,160 --> 00:04:02,180
So even though we work on the same files, the same project.

48
00:04:03,460 --> 00:04:12,280
I can ask this central location such as GitHub, hey, has Marsi made any changes and Marsic can ask,

49
00:04:12,280 --> 00:04:14,170
hey, how's Andrew made any changes?

50
00:04:16,260 --> 00:04:22,019
And every once in a while you'll get something like this where we have cool background and super background,

51
00:04:22,200 --> 00:04:31,680
where we have something called a merge conflict, what GitHub allows us to do is say, hey, I noticed

52
00:04:31,680 --> 00:04:33,000
there is a merge conflict.

53
00:04:33,210 --> 00:04:35,520
I see that you guys have both changed your background.

54
00:04:35,780 --> 00:04:36,810
I don't know who's right.

55
00:04:37,170 --> 00:04:38,850
But here's the information.

56
00:04:39,510 --> 00:04:43,640
Andre Marsi, can you guys talk amongst yourself and figure it out?

57
00:04:45,070 --> 00:04:48,760
That's pretty much work, though, so let's actually see what this looks like.

58
00:04:49,970 --> 00:04:55,760
The first thing we want to do is set up a GitHub account, if you haven't done it in the previous exercises,

59
00:04:56,300 --> 00:04:59,320
you absolutely should start a GitHub account.

60
00:04:59,330 --> 00:05:00,520
It's free.

61
00:05:00,560 --> 00:05:04,450
And like I said before, if you're a developer, you just need to have it.

62
00:05:04,460 --> 00:05:06,830
It's where everybody puts their projects.

63
00:05:06,830 --> 00:05:08,120
It's where you work.

64
00:05:08,390 --> 00:05:10,970
You'll be spending a lot of time on this website.

65
00:05:12,590 --> 00:05:18,530
You might remember that when we had the GitHub project, I also told you to get GitHub for desktop.

66
00:05:21,250 --> 00:05:26,080
Although we use that to make things simpler during the video, this is actually not the recommended

67
00:05:26,080 --> 00:05:26,830
way of doing it.

68
00:05:27,430 --> 00:05:31,510
It allows you to visually see and interact with GitHub.

69
00:05:32,170 --> 00:05:34,630
But it's kind of looked down upon by employers.

70
00:05:34,630 --> 00:05:39,370
And most people use the term and or the command prompt to actually do this.

71
00:05:39,370 --> 00:05:44,770
So I won't be teaching you this way just because I think it's bad practice and getting used to the terminal

72
00:05:44,770 --> 00:05:46,360
is important.

73
00:05:46,390 --> 00:05:49,360
I'm going to close that and we're going to get the start.

74
00:05:49,690 --> 00:05:52,930
The very first thing we're going to do is we're going to click on Start a Project.

75
00:05:54,210 --> 00:06:02,130
And here we're going to call it whatever you want, we'll call it background generator, and you also

76
00:06:02,130 --> 00:06:04,110
want to leave it as public.

77
00:06:04,110 --> 00:06:10,470
And we want to click on initialise this with a README and we'll click create repository and what that

78
00:06:10,470 --> 00:06:10,880
does.

79
00:06:10,890 --> 00:06:18,240
Well, we've created a new project on GitHub and here the README, which is just a file that describes

80
00:06:18,240 --> 00:06:18,920
your project.

81
00:06:18,930 --> 00:06:20,010
You can see that it's here.

82
00:06:20,610 --> 00:06:24,330
We can type into the read me whatever we want and describe our project.

83
00:06:25,170 --> 00:06:26,250
But let's go back.

84
00:06:27,180 --> 00:06:32,940
If Marsi, let's say Marsi has been working at this company for a long time, I'm actually going to

85
00:06:32,940 --> 00:06:34,110
remove my files here.

86
00:06:36,750 --> 00:06:42,570
Marcy has been working at this company for a long time, and the employer finally decided, hey, we

87
00:06:42,570 --> 00:06:45,950
need to use GitHub, we're going to hire this new guy, Andre.

88
00:06:46,350 --> 00:06:50,850
We want to make sure that you both can work on it, on the project together without any issues.

89
00:06:51,180 --> 00:06:52,940
Can you put the project up on GitHub?

90
00:06:53,880 --> 00:07:01,470
So one Marcy will do is she will go to GitHub, create a background generator, and then she's going

91
00:07:01,470 --> 00:07:07,890
to click right over here to clone or download and she's going to make sure it says use https.

92
00:07:08,490 --> 00:07:15,930
And from here, you just click on this button, which copies this link to your keyboard, then Marsi.

93
00:07:17,380 --> 00:07:25,300
Goes to her terminal, and right now we're in documents, we want to have the project in the Marcy folder,

94
00:07:25,330 --> 00:07:29,460
so I'll see into Marcy if I click, unless I see that yet.

95
00:07:29,590 --> 00:07:30,420
I have my files.

96
00:07:31,060 --> 00:07:35,530
Now, the first command that we're going to learn is called GET.

97
00:07:37,520 --> 00:07:38,150
Klown.

98
00:07:39,710 --> 00:07:47,420
And then copy and paste what we copy from the website, we're just saying, hey, clone this project

99
00:07:47,630 --> 00:07:48,970
from GitHub dot com.

100
00:07:49,760 --> 00:07:52,310
So I press enter and there you go.

101
00:07:52,880 --> 00:07:54,870
Everything is downloaded.

102
00:07:55,220 --> 00:07:59,300
If I go back to the folder now, I see that I have background generator.

103
00:08:00,140 --> 00:08:04,940
If I double click this, you'll see that I have a dot get folder here that's actually hidden.

104
00:08:04,940 --> 00:08:09,680
You might not even see it on your laptop if you don't have this feature on your computer enabled.

105
00:08:09,890 --> 00:08:13,840
But this Dugit now allows me to communicate with GitHub.

106
00:08:14,990 --> 00:08:22,370
So what we can do now, Marsi can copy and paste these files and put it into a background generator.

107
00:08:23,840 --> 00:08:29,690
Now let me show you the next get command Marsi right now, if we see she's in her folder.

108
00:08:29,690 --> 00:08:36,650
But now we need to go into the background generator because if we do any good commands here, well,

109
00:08:37,010 --> 00:08:39,750
it won't work because it's not a good project.

110
00:08:39,760 --> 00:08:43,190
We need to actually go inside of the project that was created on GitHub.

111
00:08:43,700 --> 00:08:46,790
So I'm going to seed into that directory notis here.

112
00:08:46,790 --> 00:08:53,150
I have my terminal set so that it actually shows me what GitHub location I'm in and I'll explain what

113
00:08:53,150 --> 00:08:54,140
Master means later.

114
00:08:54,470 --> 00:08:58,370
Now that we're here, we can look at all our files.

115
00:08:58,490 --> 00:09:00,230
Yeah, I see that now.

116
00:09:00,230 --> 00:09:04,850
I have my read me, which I created on GitHub plus the files that I copy and paste it.

117
00:09:06,580 --> 00:09:14,290
We need to sink this so that if I go into my background generator instead of the read me files, Marcy

118
00:09:14,290 --> 00:09:16,540
can put up her files on GitHub.

119
00:09:17,170 --> 00:09:23,110
The way we do that is our second command get status.

120
00:09:25,320 --> 00:09:34,170
It tells us that we have entr'acte files, that is we have indexed e-mail scripts and style that are

121
00:09:34,170 --> 00:09:39,740
entr'acte and it says use get add file to include why, what will be permitted.

122
00:09:40,350 --> 00:09:48,600
So now that we see our status of what we have in our folder, we can say get add and the filename so

123
00:09:48,600 --> 00:10:02,540
I can do index dot html, get had script and get add style access.

124
00:10:03,900 --> 00:10:05,990
Let's clear this up so we can see it.

125
00:10:06,420 --> 00:10:10,710
And now I can do get status again just to see what our status is.

126
00:10:11,310 --> 00:10:16,580
And now I have your branches up to date changes to be committed.

127
00:10:16,590 --> 00:10:21,090
You see that now with ADD we've said, hey, we want to add these changes.

128
00:10:21,330 --> 00:10:25,850
We have new files that we've added and says to be committed.

129
00:10:26,970 --> 00:10:35,310
So the second step is to do something called get, commit and get commit says, hey, I'm committing

130
00:10:35,310 --> 00:10:35,640
that.

131
00:10:35,640 --> 00:10:38,850
These are the changes that I want to make to GitHub.

132
00:10:39,690 --> 00:10:43,800
And it allows you to pass a message so that on GitHub it'll show the message.

133
00:10:44,100 --> 00:10:49,680
When Andre comes back in, he can say, oh, Marsi added these files and this is the message.

134
00:10:49,680 --> 00:10:52,110
And we do that by doing this.

135
00:10:52,710 --> 00:11:02,430
And within here, within the double codes, I can say adding starting a project, close the bracket

136
00:11:02,430 --> 00:11:03,120
press center.

137
00:11:04,320 --> 00:11:06,120
I'm going to clear this now.

138
00:11:06,120 --> 00:11:08,760
There's one last step we've added.

139
00:11:09,330 --> 00:11:15,690
We did get add to add our changes, then get commit to commit and say, yeah, we're locking in those

140
00:11:15,690 --> 00:11:16,170
changes.

141
00:11:16,410 --> 00:11:22,530
And then finally, we need to let GitHub Dotcom know that these are the changes.

142
00:11:22,530 --> 00:11:25,140
So we do get push.

143
00:11:28,270 --> 00:11:29,410
And there you go.

144
00:11:29,560 --> 00:11:34,480
It has now been pushed to this repository, so if I go back.

145
00:11:35,710 --> 00:11:36,790
And I refresh.

146
00:11:38,310 --> 00:11:43,680
Look at that, it's the same thing that we did when we put up our first website online, but instead

147
00:11:43,680 --> 00:11:49,950
of using the desktop version of GitHub, we use the command line and now we have our project, which

148
00:11:50,340 --> 00:11:51,150
is very good.

149
00:11:51,750 --> 00:11:53,070
Now, let's go back to our example.

150
00:11:53,580 --> 00:11:55,820
So Marsia has been working on this project.

151
00:11:55,830 --> 00:12:01,350
There's a good repository and I just joined the company and now I need to start working on this.

152
00:12:03,060 --> 00:12:09,930
What do I do now, I need to access GitHub and get the copy of Background Generator the way I do that,

153
00:12:10,320 --> 00:12:11,850
well, I go into my folder.

154
00:12:15,400 --> 00:12:23,920
And I do the same thing I do get Klown and then I copy and paste the repository just like before,

155
00:12:26,770 --> 00:12:31,050
git clone and clone the repo and there you go.

156
00:12:31,420 --> 00:12:33,100
If I go back to my folder, look at that.

157
00:12:34,310 --> 00:12:41,900
I have a background generator, so we're both working now on background generator, but not off of each

158
00:12:41,900 --> 00:12:42,480
other's files.

159
00:12:42,500 --> 00:12:45,980
We're working with whatever version is on GitHub.

160
00:12:46,790 --> 00:12:47,170
All right.

161
00:12:47,180 --> 00:12:52,100
So now more realistic, we go back to working.

162
00:12:52,100 --> 00:12:57,680
And the first day of my job, I say I'm going to change the Grania background title, actually, the

163
00:12:57,890 --> 00:13:06,350
Wantagh to cool generator if I save this and I do get status.

164
00:13:09,640 --> 00:13:16,600
OK, well, I'm not in a good repository right now, if you remember, I have to go into the background

165
00:13:16,960 --> 00:13:17,590
generator.

166
00:13:18,310 --> 00:13:19,990
Let me open that up a bit so you can see.

167
00:13:21,080 --> 00:13:27,990
There you go again, these give commands won't work if you're not in a folder that has a docket folder.

168
00:13:28,340 --> 00:13:31,360
So let me do that CD into background generator.

169
00:13:32,270 --> 00:13:37,940
I'm going to clear this and I'm going to say get status and look at that.

170
00:13:37,940 --> 00:13:40,640
It tells me that I've modified index, not Alpha.

171
00:13:41,390 --> 00:13:45,230
And if you remember, I will say git add.

172
00:13:45,800 --> 00:13:46,760
I only have one file.

173
00:13:46,760 --> 00:13:48,260
I can do it next on HTML.

174
00:13:48,620 --> 00:13:53,660
But if I wanted if I had multiple files and I want to just commit all them at once, I can just do the

175
00:13:53,690 --> 00:13:54,170
period.

176
00:13:55,280 --> 00:14:02,090
So I'll do that and then get commit and I'll add a message changing title.

177
00:14:04,470 --> 00:14:10,710
I press enter and clear this, OK, and again, I do get push.

178
00:14:13,190 --> 00:14:17,540
And it looks like everything went through, so let's open that up and check it out.

179
00:14:18,260 --> 00:14:19,610
I now refresh your.

180
00:14:22,800 --> 00:14:31,290
And what we haven't seen any changes, but we now see that we have three commits, we have the initial

181
00:14:31,290 --> 00:14:38,610
commit the adding back on project that Marsi did, and it shows you all the files that were added.

182
00:14:39,830 --> 00:14:48,410
And if I go back, I have the changing title commit, and now I see that, yeah, Andre just change

183
00:14:48,410 --> 00:14:52,970
the background generator, which is in red to cool generator.

184
00:14:54,670 --> 00:15:00,130
So as you can see, we have a history of all the changes and we can always go back if there's any mistakes,

185
00:15:00,700 --> 00:15:03,310
but there's one issue right now.

186
00:15:03,670 --> 00:15:10,360
If I go back to the code and I go to Marcy's computer, I see that.

187
00:15:10,360 --> 00:15:14,350
Well, she still has a background generator here.

188
00:15:15,050 --> 00:15:15,760
Why is that?

189
00:15:16,030 --> 00:15:20,510
Well, because her computer doesn't know that GitHub has been updated.

190
00:15:21,310 --> 00:15:27,130
The next command I'm going to show you, this is the last one I'm going to show you in this video is

191
00:15:27,640 --> 00:15:28,590
get pull.

192
00:15:29,230 --> 00:15:37,970
So remember, get push to push the changes to GitHub dotcom and get pull to pull whatever's the latest.

193
00:15:38,410 --> 00:15:39,370
So I do get pull.

194
00:15:41,610 --> 00:15:47,950
And there you go, you see over here that it shows me that index that ASML file was was changed.

195
00:15:48,360 --> 00:15:49,770
Now you see that my.

196
00:15:50,770 --> 00:15:57,820
Title has been changed to cool generator, let's just say that Marcy saw my first change and she really,

197
00:15:57,820 --> 00:16:03,850
really likes how I've a cool generator, but I think she wants to make it capitalized again.

198
00:16:03,860 --> 00:16:05,050
She's going to save that.

199
00:16:05,980 --> 00:16:07,840
She's going to say get status.

200
00:16:09,010 --> 00:16:09,370
All right.

201
00:16:09,370 --> 00:16:24,390
I have my index that I'll get and then get commit and I'll have the message capac to Lai's title and

202
00:16:25,140 --> 00:16:26,380
then get push.

203
00:16:29,450 --> 00:16:32,000
There you go again, I go back.

204
00:16:33,770 --> 00:16:39,260
I refresh and now there's four comments and we see that capitalized title.

205
00:16:40,310 --> 00:16:40,880
Is.

206
00:16:42,070 --> 00:16:48,100
The new changes, the first day of work is done, I come into the next day of work and well, I want

207
00:16:48,100 --> 00:16:53,950
to start with whatever the latest project is of back on generator.

208
00:16:54,310 --> 00:16:58,710
And let's say Marcy worked all night to change that title to Cool Capitalised.

209
00:16:59,200 --> 00:17:01,840
I want to make sure that I have the most updated version.

210
00:17:02,110 --> 00:17:07,450
So what I do is when I get into work in the morning, I'll say, well, I want to make sure that if

211
00:17:07,450 --> 00:17:13,089
there's any changes that Marcy made I know about, then so I'm going to say get pull and notice here

212
00:17:13,089 --> 00:17:16,599
how the titles are going to change after I do the pull.

213
00:17:18,300 --> 00:17:21,640
And now I click the sublime text and there you go.

214
00:17:22,170 --> 00:17:23,579
Cool generator.

215
00:17:24,940 --> 00:17:31,420
All right, and the next video, we're going to expand on this and show you what happens if both Marci

216
00:17:31,420 --> 00:17:36,720
and Andre make the same changes, what does GitHub do?

217
00:17:37,570 --> 00:17:39,310
I'll see in that one by.

