WEBVTT
1
00:00:00.550 --> 00:00:04.130
Hopefully, you built a beautiful activity in the quarter with an old custom color.

2
00:00:04.390 --> 00:00:06.220
I'm going to show you how I solved it.

3
00:00:06.790 --> 00:00:15.790
So what I did was I imported the activity indicator and the colors from Riak native paper, and that

4
00:00:15.790 --> 00:00:21.640
allowed me to go inside my render function and say, well, I could do two things.

5
00:00:22.120 --> 00:00:28.890
I could return early and I could say here if is loading and then I could return something else.

6
00:00:29.410 --> 00:00:34.360
I opted to render it inside of the safe area of you that I already have here.

7
00:00:34.810 --> 00:00:40.420
And what I did was I put a conditional in here that said is loading.

8
00:00:41.510 --> 00:00:46.430
And and and this would allow me to render something while this was loading.

9
00:00:47.440 --> 00:00:54.070
And what I rendered was there was a couple of options, but what I decided on was and I'll show you

10
00:00:54.070 --> 00:01:00.250
why I did this is I decided to render a view and this view that I rendered.

11
00:01:00.280 --> 00:01:04.269
Let me just get the view from I'll create a custom view.

12
00:01:04.599 --> 00:01:05.810
I'll show you what I basically did.

13
00:01:06.100 --> 00:01:08.980
So if it is loading, I would render a view.

14
00:01:09.220 --> 00:01:11.500
And that view I would position.

15
00:01:11.500 --> 00:01:12.390
Absolutely.

16
00:01:12.400 --> 00:01:18.100
So an absolute positioning means on the screen, on the screen of the phone, I'm going to position

17
00:01:18.100 --> 00:01:19.750
it where I want to position it.

18
00:01:20.260 --> 00:01:22.420
So it's absolute depending on this.

19
00:01:22.420 --> 00:01:27.310
So the entire screen, I can say, well, render it over here or render it over here or render it over

20
00:01:27.310 --> 00:01:27.620
here.

21
00:01:28.240 --> 00:01:33.130
So knowing that that I can just determine where I want to render it, I give it a position absolute.

22
00:01:33.130 --> 00:01:37.960
And I said render it top 50 percent and render it left 50 percent.

23
00:01:38.650 --> 00:01:41.230
And then I give it an activity indicator with a size of 50.

24
00:01:41.590 --> 00:01:46.000
And that activity indicator, I moved up twenty five, so half of it.

25
00:01:46.000 --> 00:01:53.620
So I deducted half the the size of the activity indicator so that it would center itself in the middle

26
00:01:53.620 --> 00:01:56.700
of the screen, because if I didn't do this, it wouldn't.

27
00:01:57.010 --> 00:02:02.170
So let me just quickly import view from Riak netiv import view.

28
00:02:03.120 --> 00:02:11.340
From Riak native, and then we can go and we can adjust this, so if we import view from Riak native,

29
00:02:11.340 --> 00:02:14.310
what we'll see here is that if we reload.

30
00:02:15.570 --> 00:02:20.550
We're going to see an activity indicator pop up for two seconds, right, and it's right in the middle.

31
00:02:20.820 --> 00:02:21.680
Let's do that again.

32
00:02:21.690 --> 00:02:22.950
It's right in the middle.

33
00:02:23.170 --> 00:02:30.030
But if I don't do the margin and deduct half of the size, what we're going to see happen is it's off

34
00:02:30.030 --> 00:02:30.500
center.

35
00:02:30.870 --> 00:02:36.190
So a bit of math here to render it in the center doesn't really matter where exactly.

36
00:02:36.660 --> 00:02:38.460
As long as you're happy with the position.

37
00:02:38.760 --> 00:02:40.920
This is how I would render it in the center.

38
00:02:41.280 --> 00:02:48.630
But there are some optimizations we need to make so we could say const activity indicator.

39
00:02:49.580 --> 00:02:55.790
We'll call it loading, we'll see consed loading is equal to styled and we'll give it activity indicator

40
00:02:56.060 --> 00:03:02.540
and then we'll give it a custom style and we'll say margin left minus twenty five pixels, minus twenty

41
00:03:02.540 --> 00:03:06.620
five pixels and that will give us a custom loading indicator.

42
00:03:07.830 --> 00:03:14.880
And then we can remove this and we can still give it these properties, right, and then for our view,

43
00:03:15.030 --> 00:03:17.340
we'll say const loading.

44
00:03:17.880 --> 00:03:20.980
Well, it really depends on what you want to do.

45
00:03:21.640 --> 00:03:25.260
So what would we call this?

46
00:03:26.390 --> 00:03:30.620
We could call this home loading container.

47
00:03:31.170 --> 00:03:31.920
That sounds good.

48
00:03:32.940 --> 00:03:35.090
Naming things is always hard, honestly.

49
00:03:35.850 --> 00:03:39.570
So we'll say loading container and then we'll give it a position absolute.

50
00:03:42.280 --> 00:03:45.040
And we'll say top 50 percent.

51
00:03:46.040 --> 00:03:48.410
And then we'll say left 50 percent.

52
00:03:49.790 --> 00:03:52.880
And by doing that now, we can say loading container here.

53
00:03:56.730 --> 00:03:57.520
Loading container.

54
00:03:57.900 --> 00:04:04.560
And if we save this now, all of a sudden we should have a loading container that loads every time we

55
00:04:04.560 --> 00:04:05.070
reload.

56
00:04:06.110 --> 00:04:15.020
Awesome, we can clean up our styles here and now we have some interaction while the API call is happening

57
00:04:15.440 --> 00:04:22.070
to kind of indicate to the user, hey, I'm trying to retrieve something very important, user experience,

58
00:04:22.070 --> 00:04:22.910
very important.

59
00:04:23.540 --> 00:04:31.100
So now that we have that in here, we've basically tightened up our end to end between calling the API

60
00:04:31.490 --> 00:04:33.680
and actually retrieving the data.

