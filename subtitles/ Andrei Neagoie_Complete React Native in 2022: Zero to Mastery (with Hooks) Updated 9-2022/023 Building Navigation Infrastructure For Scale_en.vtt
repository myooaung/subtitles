WEBVTT
1
00:00:00.550 --> 00:00:05.200
Before we hit the ground running with this feature, we need to talk about our navigation setup because

2
00:00:05.200 --> 00:00:13.060
currently our navigation setup lives solely inside of the Appalachia's and currently we're only able

3
00:00:13.060 --> 00:00:14.910
to create TAB navigation.

4
00:00:15.100 --> 00:00:19.810
And as you could see by the feature, it wasn't really a tab navigation type of feature.

5
00:00:20.230 --> 00:00:24.880
Rather, it was more or less a stack view.

6
00:00:24.910 --> 00:00:31.540
So right now, every tab is a singular component, a singular screen.

7
00:00:32.049 --> 00:00:39.040
But now we're getting into a more complex scenario where this component should actually be a different

8
00:00:39.040 --> 00:00:40.090
navigation stack.

9
00:00:40.120 --> 00:00:44.680
So every tab is going to be able to navigate on its own.

10
00:00:44.950 --> 00:00:52.540
And the purpose of this is so that in every single tab we have our own kind of universe.

11
00:00:52.810 --> 00:00:54.700
Every tab should have its own universe.

12
00:00:54.880 --> 00:00:58.650
And sure, tabs can link through to other tabs.

13
00:00:58.660 --> 00:01:05.910
That is completely fair, but TAB interactions should in reality be isolated to that tab.

14
00:01:05.920 --> 00:01:10.960
So everything that has to do with restaurant information and restaurant detail should live inside the

15
00:01:10.960 --> 00:01:11.590
restaurant tab.

16
00:01:11.590 --> 00:01:15.850
Everything that has to do with MAP should live and map and everything that has to do with settings should

17
00:01:15.850 --> 00:01:16.810
live inside of settings.

18
00:01:17.320 --> 00:01:18.970
And so every route.

19
00:01:18.970 --> 00:01:19.200
Right.

20
00:01:19.270 --> 00:01:21.130
We have to think of this in terms of routes.

21
00:01:21.370 --> 00:01:24.400
Every route should live inside of its tab.

22
00:01:24.580 --> 00:01:30.720
The tab is kind of a container that's going to contain more navigation options for us.

23
00:01:30.880 --> 00:01:31.220
Right.

24
00:01:31.240 --> 00:01:35.470
This is kind of the shell in which we're rendering a specific route.

25
00:01:35.650 --> 00:01:39.330
And so one of the routes that we want to render is restaurant detail.

26
00:01:39.790 --> 00:01:45.070
Now, in order to do that, what we're going to need to do is we're going to need to introduce, instead

27
00:01:45.070 --> 00:01:49.360
of a restaurant screen, a stack navigator, a stack navigator of sorts.

28
00:01:50.260 --> 00:01:52.660
OK, so a Stack Navigator is.

29
00:01:53.530 --> 00:01:58.420
A different type of navigation than a tab navigation, but before we get into that, we need to do some

30
00:01:58.420 --> 00:02:04.640
cleanup, because can you imagine the finding a stack navigator inside of Abcess for every single tab?

31
00:02:04.960 --> 00:02:07.570
We need a better system to organize our navigation.

32
00:02:07.930 --> 00:02:12.730
And so luckily, we are already set up a good approach to this.

33
00:02:12.790 --> 00:02:15.700
We had our infrastructure folder in which we had our theme.

34
00:02:16.120 --> 00:02:21.580
And so our infrastructure folder is a good place for us to create a navigation folder.

35
00:02:21.850 --> 00:02:28.750
And that navigation folder is going to contain all of the infrastructure for navigation.

36
00:02:28.750 --> 00:02:29.170
Right.

37
00:02:29.300 --> 00:02:33.090
All of our different types of navigators, so to speak.

38
00:02:33.310 --> 00:02:35.190
And why is it infrastructure, you ask?

39
00:02:35.350 --> 00:02:40.380
Well, it's infrastructure because navigation is a core functionality of the application.

40
00:02:40.480 --> 00:02:43.890
It's a core feature, but it also requires setup.

41
00:02:43.900 --> 00:02:45.880
And so it's pulling things together.

42
00:02:46.000 --> 00:02:47.470
It's pulling screens together.

43
00:02:47.470 --> 00:02:47.740
Right.

44
00:02:48.340 --> 00:02:52.980
It in itself is a feature, but it's a feature of infrastructure, not a feature feature.

45
00:02:53.230 --> 00:02:59.530
When we talk about features over here, what we're talking about is user facing features, the features

46
00:02:59.530 --> 00:03:00.730
that the user consumes.

47
00:03:00.940 --> 00:03:04.840
When we talk about infrastructure, however, we're talking about app infrastructure.

48
00:03:05.020 --> 00:03:12.010
And although navigation in itself is a feature that is user facing, oftentimes it is more considered

49
00:03:12.010 --> 00:03:18.070
infrastructure of the application because it's pulling together all of these different user facing features

50
00:03:18.070 --> 00:03:20.320
for the end user to consume.

51
00:03:21.160 --> 00:03:28.510
Now, with that said, what we want to do in navigation is we want to create an App Navigator database.

52
00:03:29.080 --> 00:03:35.710
And so in that app, that navigator is what we basically want to do is we want to move over the whole

53
00:03:35.710 --> 00:03:39.220
navigation container of the tab view in there.

54
00:03:39.580 --> 00:03:44.830
And so try this out, try to get the App Navigator running on its own.

55
00:03:45.280 --> 00:03:47.800
And then in the next video, I'll show you how we split it out.

