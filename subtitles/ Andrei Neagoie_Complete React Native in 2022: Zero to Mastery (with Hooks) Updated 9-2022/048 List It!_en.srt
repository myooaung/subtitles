1
00:00:00,610 --> 00:00:06,770
I'm so excited we're about to build our very first list for you, and that is absolutely exciting.

2
00:00:07,240 --> 00:00:09,310
So where do we start here?

3
00:00:09,430 --> 00:00:15,790
Well, we need to go back to our restaurant screen because that's where we have all of the magic happening.

4
00:00:15,790 --> 00:00:16,070
Right.

5
00:00:16,270 --> 00:00:21,340
We have this restaurant info card right here.

6
00:00:21,610 --> 00:00:28,960
And so what we want to do right now basically is we want to take this and we want to make it a list.

7
00:00:28,960 --> 00:00:29,210
Right.

8
00:00:29,230 --> 00:00:31,330
We want to make it that scrollable goodness.

9
00:00:32,220 --> 00:00:40,710
First of all, we need to know exactly how to go about this first and foremost, let's go ahead and

10
00:00:40,710 --> 00:00:42,120
let's clean this up.

11
00:00:42,360 --> 00:00:46,860
We have the restaurant list container, right, that has Fleck's one and all of that good stuff.

12
00:00:47,370 --> 00:00:49,050
But we will no longer need this.

13
00:00:49,050 --> 00:00:53,940
We we kind of use that to kind of fix our list in a certain way.

14
00:00:54,450 --> 00:00:56,970
But we're reaching a point at which we no longer need that.

15
00:00:56,970 --> 00:01:00,210
What we need to do is we need to go to the riak need of docks.

16
00:01:00,690 --> 00:01:01,000
Right.

17
00:01:01,500 --> 00:01:03,840
React native to our Holy Grail.

18
00:01:04,260 --> 00:01:10,350
And so what we need to look at here is flat list and flat list is, well, what you would think a flat

19
00:01:10,590 --> 00:01:11,250
list.

20
00:01:11,580 --> 00:01:16,710
It's a performant interface for rendering basic flat lists and supporting the most handy features.

21
00:01:16,950 --> 00:01:19,140
It's fully cross platform.

22
00:01:19,290 --> 00:01:21,240
It has optional horizontal mode.

23
00:01:21,240 --> 00:01:25,560
It's configurable, it has header support as footer support as separator support.

24
00:01:25,680 --> 00:01:30,120
You can do pull to refresh, you can scroll blook, you can do all the things OK.

25
00:01:30,540 --> 00:01:34,200
And also if you need section support, if we need sections in our list, you could also look at section

26
00:01:34,210 --> 00:01:34,350
was.

27
00:01:34,470 --> 00:01:38,700
So this is why it's useful to read the docs because they guide you in all different types of directions.

28
00:01:39,120 --> 00:01:43,830
So if we look over here at Flat List, this is kind of what it looks like, right?

29
00:01:43,980 --> 00:01:46,260
We have our first item, our second item, our third item.

30
00:01:46,440 --> 00:01:46,830
Right.

31
00:01:46,830 --> 00:01:50,670
And flat list has this interface where it's going to take in data.

32
00:01:51,560 --> 00:01:57,140
And it's going to render an item and it's going to potentially use a key extractor, that's if you don't

33
00:01:57,140 --> 00:01:58,830
seddiqui now what is a key?

34
00:01:59,090 --> 00:02:01,580
So let's look at what the key is.

35
00:02:01,940 --> 00:02:03,500
If we Google react key.

36
00:02:04,040 --> 00:02:04,340
Right.

37
00:02:04,340 --> 00:02:05,900
Listen, keys first.

38
00:02:05,900 --> 00:02:07,600
Let's take an overview of how to transform a list.

39
00:02:07,610 --> 00:02:14,660
So if we take a list here in JavaScript, write numbers, one, two, three, four, five, and we map

40
00:02:14,660 --> 00:02:18,260
that well when we render this out.

41
00:02:20,020 --> 00:02:20,980
In this way.

42
00:02:22,130 --> 00:02:29,180
It basically becomes difficult for react to reference what specifically every item is, if there are

43
00:02:29,180 --> 00:02:35,210
duplicates, if the number is duplicate for reacts rendering cycle, it needs to know a little bit more

44
00:02:35,210 --> 00:02:35,660
about this.

45
00:02:35,660 --> 00:02:41,360
And this is a great article highlighting why you need keys, what a key is and all of that good stuff.

46
00:02:41,360 --> 00:02:41,620
Right.

47
00:02:41,630 --> 00:02:45,890
A key is a special attribute that you need to include when creating a list of elements, and they'll

48
00:02:45,890 --> 00:02:47,630
discuss why it's important in the next section.

49
00:02:47,630 --> 00:02:49,970
And they go through, hey, this is what keys are.

50
00:02:49,970 --> 00:02:53,440
Keys, help react, identify which items have changed, added, removed.

51
00:02:53,540 --> 00:02:57,470
It's basically like this identifier that really needs to kind of go through the motions.

52
00:02:57,470 --> 00:03:01,760
And for those of you who are new to react, we will link this documentation for you to go through and

53
00:03:01,760 --> 00:03:08,060
read and understand and understand the importance because it is an important concept and highlighting

54
00:03:08,060 --> 00:03:09,590
what it basically does.

55
00:03:10,040 --> 00:03:14,380
It allows react to kind of have knowledge of your list.

56
00:03:15,020 --> 00:03:18,230
Now, when we go to flat list, when we go to the flat list implementation.

57
00:03:18,230 --> 00:03:18,500
Right.

58
00:03:18,740 --> 00:03:21,890
If you go to the doctor, you can try this out on all different types of devices.

59
00:03:21,890 --> 00:03:28,940
But what we're trying to do with the flat list approach is we're trying to allow data to be rendered

60
00:03:28,940 --> 00:03:29,960
in a specific way.

61
00:03:30,140 --> 00:03:31,220
So this is our data.

62
00:03:31,220 --> 00:03:36,680
If our data was an array of an idea and a title object and we have three objects, what we could say

63
00:03:36,680 --> 00:03:44,990
is that in our flat list we would have down here the data as the data and the render item as a function

64
00:03:44,990 --> 00:03:52,610
render item and render item would take the item and it would map it to a different component, a different

65
00:03:52,610 --> 00:03:57,110
component that would then take the properties off of the item, which in this case would be identical

66
00:03:57,440 --> 00:03:59,780
and put them in a text field.

67
00:04:00,590 --> 00:04:06,560
OK, so knowing that what we want to know about why specifically we need to use flat list as opposed

68
00:04:06,560 --> 00:04:13,040
to like something else is basically because it is a wrapper around something called a virtualize list.

69
00:04:13,040 --> 00:04:15,590
So it has inherent memory optimizations.

70
00:04:15,590 --> 00:04:21,860
It's going to do things out of the box that help you better relay information in.

71
00:04:22,100 --> 00:04:26,960
And if you have massive lists and data is coming in dynamically and all of these things are changing

72
00:04:26,960 --> 00:04:33,380
often, or it's a very, very large amount of data, a flat list is your main solution because it has

73
00:04:33,380 --> 00:04:34,160
these optimization.

74
00:04:34,160 --> 00:04:39,230
Now, you could go to something directly like scroll view and scroll views, a component that just provides

75
00:04:39,230 --> 00:04:40,580
you a scrollable interface.

76
00:04:40,790 --> 00:04:41,150
Right.

77
00:04:41,360 --> 00:04:43,010
And scroll view versus flat list.

78
00:04:43,010 --> 00:04:44,240
Which one should you choose?

79
00:04:44,450 --> 00:04:49,460
Will scroll if you just renders all of the children at once and that has a performance down side.

80
00:04:49,460 --> 00:04:54,170
So scroll view is something that you may use if you have a fixed number of items available.

81
00:04:54,530 --> 00:04:57,980
But flat list comes into play when you want to render items lazily.

82
00:04:57,980 --> 00:05:03,110
So like you're doing something where you want to pull data from a different website like Google or somewhere

83
00:05:03,110 --> 00:05:03,530
else.

84
00:05:03,710 --> 00:05:05,180
Flourless is also handy if you want to.

85
00:05:05,870 --> 00:05:07,820
If you want to render separators multiple.

86
00:05:08,120 --> 00:05:12,770
There's so many different variations of things that we can do here and it's honestly mind boggling.

87
00:05:13,580 --> 00:05:19,490
But so what we need to know now is you have scroll view and then you have flat list and we're going

88
00:05:19,490 --> 00:05:23,000
with flat list because we want to future proof our code.

89
00:05:23,000 --> 00:05:30,560
We may reach a point at which we would want to extend this app and do things that made you lazy loading

90
00:05:30,560 --> 00:05:34,820
or pull data from an API or do a pull to refresh or anything kind of crazy thing.

91
00:05:34,820 --> 00:05:36,290
So we want to future proof our app.

92
00:05:36,530 --> 00:05:42,440
And in that case, we need to make the smart decision and choose the implementation that best suits

93
00:05:42,470 --> 00:05:43,880
what we're trying to accomplish.

94
00:05:44,390 --> 00:05:52,100
OK, with all of that background, what we need to do now is we need to go inside of Riak native.

95
00:05:52,280 --> 00:05:55,910
We're going to remove the things that we're not using anymore because we don't need them and we're going

96
00:05:55,910 --> 00:05:57,080
to import philatelist.

97
00:05:57,380 --> 00:05:57,710
Right.

98
00:05:58,010 --> 00:06:02,720
And Flat List is one of those things that we're going to go put it over here.

99
00:06:03,290 --> 00:06:03,770
All right.

100
00:06:04,370 --> 00:06:08,480
And what we need to do with the flat list is we need to give it a couple of properties.

101
00:06:09,050 --> 00:06:11,000
So we're going to give it data.

102
00:06:11,420 --> 00:06:12,170
Well, what data?

103
00:06:12,200 --> 00:06:12,860
So what?

104
00:06:12,860 --> 00:06:13,920
We don't have any data.

105
00:06:14,930 --> 00:06:15,440
Good point.

106
00:06:15,440 --> 00:06:15,950
Good point.

107
00:06:16,190 --> 00:06:19,460
For now, we're going to give it the restaurant card.

108
00:06:19,740 --> 00:06:23,750
OK, so the restaurant card, that's what's going to render out right now.

109
00:06:24,320 --> 00:06:25,550
We're not giving it any data.

110
00:06:25,550 --> 00:06:26,870
We're not stripping the item.

111
00:06:26,870 --> 00:06:27,920
We don't have any data yet.

112
00:06:27,920 --> 00:06:29,540
So we don't know what we're giving it just yet.

113
00:06:29,690 --> 00:06:35,210
But stay with me and then we're going to give it a key extractor and the key extractor is going to say,

114
00:06:35,210 --> 00:06:35,570
hey.

115
00:06:36,550 --> 00:06:37,690
For the item.

116
00:06:39,490 --> 00:06:45,460
Right, for the item, take the item, not name as the actual key.

117
00:06:45,640 --> 00:06:49,380
We're going to take the name of the thing that we're trying to render, and that's going to be our key.

118
00:06:50,350 --> 00:06:51,600
OK, good.

119
00:06:52,370 --> 00:06:58,100
Now, we also need to make sure the right content container style.

120
00:06:58,300 --> 00:06:59,010
What is this?

121
00:06:59,140 --> 00:07:00,610
What is this content Container Store?

122
00:07:00,640 --> 00:07:01,380
Well, I'll show you.

123
00:07:02,050 --> 00:07:07,840
So if we look at content container style inside of what we would call scroll view.

124
00:07:08,820 --> 00:07:15,510
A content container style will apply the style to the contents of the container, so for each child

125
00:07:15,510 --> 00:07:19,270
it will apply these specific things.

126
00:07:19,290 --> 00:07:22,350
So what we're going to do is we're going to say padding 16.

127
00:07:23,540 --> 00:07:25,430
Now, this is not allowed, but we'll get there.

128
00:07:25,490 --> 00:07:26,240
Don't worry about it.

129
00:07:27,140 --> 00:07:33,180
All right, so now we're in a state where we have a flat list, but look, it's not rendering out anything.

130
00:07:33,200 --> 00:07:33,860
Why is that?

131
00:07:34,130 --> 00:07:35,380
Well, our array is empty.

132
00:07:35,810 --> 00:07:42,050
So if we added things to our rate and we said name one and then we said second object name to.

133
00:07:44,110 --> 00:07:47,320
What's going to happen is we're going to render out to restaurants.

134
00:07:48,710 --> 00:07:54,350
Huh, that's pretty cool, isn't it, on the why is this happening and what would happen if we said

135
00:07:54,350 --> 00:07:57,770
our pattern here to zero if we set our pattern here to zero?

136
00:07:57,800 --> 00:07:59,240
Well, they're going to stick to the edges.

137
00:07:59,240 --> 00:08:01,440
That's why we're adding the padding to every single item.

138
00:08:01,850 --> 00:08:03,320
OK, good to know.

139
00:08:03,320 --> 00:08:03,860
Get to know.

140
00:08:05,400 --> 00:08:06,930
Why is it rendering two items, Nomo?

141
00:08:07,080 --> 00:08:15,510
Well, as you can remember, inside of the component restaurant INFL card, we set all of these logical

142
00:08:15,510 --> 00:08:18,180
defaults to every single property.

143
00:08:18,540 --> 00:08:22,650
So it didn't really matter if we gave it a property or not, because it's going to fill in our mock

144
00:08:22,650 --> 00:08:23,720
data either way.

145
00:08:23,970 --> 00:08:28,590
So this is pretty good because now we can start building our UI without having to wonder about where

146
00:08:28,590 --> 00:08:30,030
data is coming from just yet.

147
00:08:30,370 --> 00:08:36,840
OK, so if we do this and we copy this right and we say, well, OK, paste that a couple of times,

148
00:08:37,169 --> 00:08:40,409
so let's do that, let's do that, let's do that, let's do that, let's do that.

149
00:08:40,919 --> 00:08:43,289
And we're doing something wrong here because basically.

150
00:08:44,360 --> 00:08:47,030
We're forcing multiple objects with the same name.

151
00:08:51,050 --> 00:09:01,460
So we're going to do three, four, five, six, seven, eight, nine, 10, 11, 12.

152
00:09:02,250 --> 00:09:08,370
13 and 14 now, we won't have children with the same name, and that's pretty good.

153
00:09:08,640 --> 00:09:11,700
And as you can see, we have a pretty long list here.

154
00:09:12,030 --> 00:09:13,590
It's looking good.

155
00:09:13,830 --> 00:09:14,850
It's looking good.

156
00:09:14,970 --> 00:09:17,280
And we just implemented a whole list feature.

157
00:09:17,460 --> 00:09:18,800
OK, but there's still something wrong.

158
00:09:19,260 --> 00:09:23,840
I see you asking yourself, Mo, why are these sticking to each other?

159
00:09:24,120 --> 00:09:25,890
What is going on?

160
00:09:26,370 --> 00:09:27,500
And that's a good question.

161
00:09:27,840 --> 00:09:29,460
Why are they sticking to each other?

162
00:09:29,950 --> 00:09:33,330
Didn't we just add padding, then we add padding to them?

163
00:09:33,810 --> 00:09:34,670
Well, yes, we did.

164
00:09:35,010 --> 00:09:39,330
Well, we also need to add a margin pop potentially of 16.

165
00:09:40,200 --> 00:09:46,680
Huh, that really isn't doing anything that like they're still sticking to each other, that doesn't

166
00:09:46,680 --> 00:09:47,100
look good.

167
00:09:47,760 --> 00:09:48,990
So how do we go about this?

168
00:09:49,380 --> 00:09:55,500
Well, I'll tell you what's going on here is that although this is applying a style to each individual

169
00:09:55,530 --> 00:10:01,350
item, it it isn't really applying a speccing inside of the item itself.

170
00:10:01,350 --> 00:10:01,680
Right.

171
00:10:01,700 --> 00:10:08,460
So, like, if we go look at this and we show the element, Inspector and we do this, the element itself

172
00:10:08,460 --> 00:10:11,010
is not being spaced correctly.

173
00:10:11,020 --> 00:10:12,360
So how do we go about doing this?

174
00:10:12,390 --> 00:10:13,530
Well, I'll show you.

175
00:10:14,600 --> 00:10:19,580
Give me one second if we go inside our restaurant info card, right, right over here.

176
00:10:20,550 --> 00:10:25,680
And I'm going to show you some magic that's going to happen, and we look here, restaurant card, OK,

177
00:10:25,680 --> 00:10:27,420
so we'll go to a restaurant card.

178
00:10:27,420 --> 00:10:28,500
Where is restaurant card?

179
00:10:28,770 --> 00:10:30,620
We set a background color, OK.

180
00:10:30,690 --> 00:10:32,700
OK, so let's add some padding.

181
00:10:33,180 --> 00:10:34,500
But we don't want any padding.

182
00:10:34,500 --> 00:10:36,570
We want actually let's not do padding.

183
00:10:36,570 --> 00:10:43,500
Let's do margin bottom and let's set margin bottom to spacing three and then let's see what happens.

184
00:10:43,950 --> 00:10:46,070
Oh suddenly they're spacing themselves apart.

185
00:10:46,080 --> 00:10:51,630
So there are certain styles that still need to be applied to the card itself because content container

186
00:10:51,630 --> 00:10:53,970
style won't just automatically apply it.

187
00:10:53,970 --> 00:10:54,270
Right.

188
00:10:54,480 --> 00:10:58,170
We want this card specifically outlaid this way.

189
00:10:58,170 --> 00:11:02,400
So we still need to say to the card, hey, you need some spacing around you.

190
00:11:02,940 --> 00:11:06,000
And we could, for instance, do that just by doing this.

191
00:11:06,000 --> 00:11:06,960
We could do patting.

192
00:11:07,840 --> 00:11:11,090
And now we're stretching the card, that's not good.

193
00:11:11,110 --> 00:11:13,190
That's why padding wouldn't work here.

194
00:11:13,210 --> 00:11:14,560
This is why we need margins.

195
00:11:14,890 --> 00:11:21,070
So we're going to add a margin bottom of the theme Space three, and that's going to give us the kind

196
00:11:21,070 --> 00:11:26,650
of ideal layout that we're looking for, because now they're ideally spaced apart in a good way, right?

197
00:11:26,860 --> 00:11:28,220
In a good type of way.

198
00:11:28,390 --> 00:11:29,380
It looks so slick.

199
00:11:29,380 --> 00:11:32,170
It looks like a real production grade.

200
00:11:32,380 --> 00:11:35,130
Nice feature packed up.

201
00:11:35,530 --> 00:11:36,040
Look at this.

202
00:11:36,380 --> 00:11:37,570
Wouldn't you want to eat those?

203
00:11:37,610 --> 00:11:38,590
I want to eat those potatoes.

204
00:11:38,590 --> 00:11:39,310
What don't you want to eat?

205
00:11:39,700 --> 00:11:40,540
That looks great.

206
00:11:40,960 --> 00:11:43,510
In any case, what we're trying to get at here.

207
00:11:43,540 --> 00:11:43,840
Right.

208
00:11:45,090 --> 00:11:51,050
Is there are certain styles that need to be applied specifically to the item that you're rendering inside

209
00:11:51,210 --> 00:11:52,530
and we could have done this another way.

210
00:11:52,530 --> 00:11:53,820
We could have, for instance, done this.

211
00:11:53,820 --> 00:11:56,580
We could have said, hey, render the restaurant card.

212
00:11:57,300 --> 00:12:00,960
And then also we could have used our spacer here, I believe.

213
00:12:01,200 --> 00:12:06,210
So we could have done something like spacer and we could have said, hey, wrap this with a spacer.

214
00:12:07,890 --> 00:12:14,310
And then if we go into the info card over here, we can just copy the import to our speaker and we can

215
00:12:14,310 --> 00:12:16,680
put it over here at the top right there.

216
00:12:17,340 --> 00:12:18,420
And this should work.

217
00:12:19,480 --> 00:12:20,630
And let's see what that does.

218
00:12:21,370 --> 00:12:24,880
So if we did this and then we, for instance, said over here.

219
00:12:25,980 --> 00:12:26,890
Don't do this one.

220
00:12:27,540 --> 00:12:30,410
What's going to happen is the spacing is going to be way smaller.

221
00:12:30,750 --> 00:12:32,790
So this is a different way, for instance, doing it.

222
00:12:32,790 --> 00:12:37,200
And we could have, for instance, that if we go look at the interface of the spacer, we could have

223
00:12:37,200 --> 00:12:38,400
said position bottom.

224
00:12:39,180 --> 00:12:40,430
Let's go back into here.

225
00:12:41,070 --> 00:12:42,960
We could have said position.

226
00:12:44,330 --> 00:12:45,650
Is bottom.

227
00:12:46,990 --> 00:12:49,960
And then we could say size equals large.

228
00:12:51,260 --> 00:12:57,290
And boom, but more spacing, so this is another perfectly fine way of doing it and at least you know

229
00:12:57,290 --> 00:12:59,060
now where the spacing is happening, right?

230
00:12:59,060 --> 00:13:04,180
We can see our spacer here and we could say, hey, space them from the bottom side and do it large.

231
00:13:04,190 --> 00:13:08,450
So we're wrapping this and we're saying, hey, just push it down a little bit so we don't have to go

232
00:13:08,450 --> 00:13:13,940
look inside of the restaurant card in the style and see that the margin bottom is being applied here.

233
00:13:13,940 --> 00:13:18,590
Can you see how the spacer component is adding value here and how we can see how things are being spaced

234
00:13:18,590 --> 00:13:19,700
directly in the UI?

235
00:13:19,940 --> 00:13:21,160
I just find that useful.

236
00:13:21,410 --> 00:13:22,400
Some people don't.

237
00:13:22,610 --> 00:13:23,630
It really depends.

238
00:13:24,500 --> 00:13:29,450
And so if we don't add our content container style, we're going to see a little bit of a sticking point.

239
00:13:29,870 --> 00:13:35,360
And in that case, what we can do is we can, for instance, go back here and we can say, hey, add

240
00:13:35,360 --> 00:13:39,890
some padding and this will add padding, but only on the inside.

241
00:13:40,010 --> 00:13:41,750
OK, so that's an interesting side effect.

242
00:13:41,750 --> 00:13:41,980
Right?

243
00:13:42,170 --> 00:13:45,940
So we do need this content container so so we know what to do now.

244
00:13:45,980 --> 00:13:46,360
Right.

245
00:13:47,260 --> 00:13:57,460
What we do is we say CONSED restaurant list is styled, right styled, and then we give it the flat

246
00:13:57,460 --> 00:13:59,620
list and we say, Hey.

247
00:14:01,820 --> 00:14:04,990
Patting, let's take that padding, let's put it there.

248
00:14:08,670 --> 00:14:10,230
Well, will that actually work?

249
00:14:11,790 --> 00:14:20,670
No, it won't, because this is applying the padding to the flat list itself, not to the specific content

250
00:14:20,670 --> 00:14:24,300
container style, so we can't actually use this.

251
00:14:24,720 --> 00:14:28,890
That's an interesting side effect of using content, container style.

252
00:14:28,890 --> 00:14:29,160
Right.

253
00:14:29,700 --> 00:14:38,250
So what I would advocate is in some cases, it's perfectly fine to use content, container style and

254
00:14:38,250 --> 00:14:39,510
do some inline styling.

255
00:14:39,600 --> 00:14:43,320
If you don't want to do that, you can still do something like like styles.

256
00:14:44,160 --> 00:14:50,160
But I personally find that completely OK to do something like padding 16 here, because at least I know

257
00:14:50,160 --> 00:14:52,170
where the padding is happening and why it's happening.

258
00:14:52,830 --> 00:14:53,170
Right.

259
00:14:53,640 --> 00:14:57,310
You could do padding 30 to and really give it some space.

260
00:14:57,330 --> 00:14:59,040
It really depends on what you want to do.

261
00:14:59,520 --> 00:15:04,770
But just know it's available to you and we'll look at how to optimize this potentially in the course.

262
00:15:05,010 --> 00:15:09,810
Of course, our excellent is telling us no inline styles and we're keeping that there for now.

263
00:15:10,110 --> 00:15:10,490
Right.

264
00:15:10,680 --> 00:15:16,410
What we could also do is we could, for instance, disable it for this line and then it wouldn't complain

265
00:15:16,410 --> 00:15:21,810
over here that something that you kind of want to avoid, you always want your lending to be in line

266
00:15:21,810 --> 00:15:23,130
with what you're trying to build.

