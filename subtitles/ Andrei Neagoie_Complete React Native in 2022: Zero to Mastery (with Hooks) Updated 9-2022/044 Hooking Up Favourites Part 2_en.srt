1
00:00:00,720 --> 00:00:05,580
So now that we're here, we can actually look at improving the placement and it's as simple as playing

2
00:00:05,580 --> 00:00:12,630
around with the top and the right position, because this will position it evenly both on iOS and Android

3
00:00:12,900 --> 00:00:15,370
in terms of positioning on the card.

4
00:00:16,020 --> 00:00:16,880
That's a good thing.

5
00:00:17,070 --> 00:00:20,810
We know that it's going to be positioned on the right spot on both cards.

6
00:00:21,690 --> 00:00:22,560
So twenty five.

7
00:00:22,560 --> 00:00:24,180
Twenty five looks pretty good to me.

8
00:00:24,600 --> 00:00:31,170
That's a good position in terms of being able to add and remove the favorite from the fever button.

9
00:00:32,250 --> 00:00:39,750
But there's one tiny little thing here that we need to improve, and that is, well, right now we don't

10
00:00:39,750 --> 00:00:43,070
know anything that comes into this component.

11
00:00:43,590 --> 00:00:48,030
What this favorite component should take it every time is the current restaurant.

12
00:00:48,390 --> 00:00:55,980
So we should pass the restaurant to the favorite and then it can determine whether or not it has been

13
00:00:55,980 --> 00:00:56,430
favorite.

14
00:00:56,430 --> 00:01:02,100
It once we get in the restaurant, what we can see here is that we can determine const.

15
00:01:03,070 --> 00:01:12,850
Is favorite is equal to the favorites dot find of the restaurant in the list that place Placide.

16
00:01:13,800 --> 00:01:16,860
Being equal to restaurant.

17
00:01:18,330 --> 00:01:24,860
Police ID, and this will tell us whether or not it exists in the array of favorites.

18
00:01:25,200 --> 00:01:30,180
And so what we'll know then is that, well, we can do more complex interactions.

19
00:01:30,180 --> 00:01:38,970
For instance, if it is the favorite, what we can say here is do a heart, otherwise do a heart outline

20
00:01:39,090 --> 00:01:39,570
heart.

21
00:01:39,720 --> 00:01:41,190
Oh, heart outline.

22
00:01:41,640 --> 00:01:44,220
That is one of the basic functionalities.

23
00:01:44,220 --> 00:01:49,830
And then for color, what we want to do is if it's favorite ID do red, otherwise do white.

24
00:01:51,350 --> 00:01:56,720
And so right now, we can see that nothing at all is favored it so now we need to add an arm press handler

25
00:01:56,720 --> 00:02:01,330
in order to make sure that we can actually add things.

26
00:02:01,580 --> 00:02:05,120
So this is going to expose a function where if it is not a favorite.

27
00:02:06,600 --> 00:02:11,550
We're going to add to favorites the current restaurant.

28
00:02:12,420 --> 00:02:19,140
Otherwise, we're going to remove from favourite's the restaurant that was Pastan.

29
00:02:20,820 --> 00:02:25,590
And so with this, we have the full fledged functionality of the favorite button and we can see that

30
00:02:25,590 --> 00:02:31,650
because when we click here now, it's added to the favorites, it's being added to the favorites in

31
00:02:31,650 --> 00:02:33,300
every given circumstance.

32
00:02:34,190 --> 00:02:35,250
That's amazing.

33
00:02:35,600 --> 00:02:39,890
So right here, we can see, all right, this is looking good, this is looking good.

34
00:02:40,280 --> 00:02:45,380
And we have all of our favorites selected now and we can select favorites.

35
00:02:45,830 --> 00:02:51,980
And if we canceled all of our favorites or what we'll see here, console the log.

36
00:02:52,880 --> 00:02:58,220
Favorites will do that length so that we can see the length of the array, what we can see here is if

37
00:02:58,220 --> 00:03:02,120
we scroll to the bottom, it's going to be zero.

38
00:03:03,330 --> 00:03:09,420
It's so it's five, and if we scroll to the top for three.

39
00:03:10,510 --> 00:03:17,880
Too, and so what you can see here is that it's rendering the amount of times that the list is rendering.

40
00:03:18,160 --> 00:03:22,050
So the favorite button, of course, has to render for every single restaurant.

41
00:03:22,270 --> 00:03:28,460
And so it needs to determine for each individual restaurant if it's in the list or not.

42
00:03:28,810 --> 00:03:34,960
And so if this were a list of one hundred thousand restaurants at any given point, this would be a

43
00:03:34,960 --> 00:03:36,330
performance bottleneck.

44
00:03:36,340 --> 00:03:41,200
We wouldn't want to run the is favorite function in this way with a dot find.

45
00:03:41,830 --> 00:03:45,220
That being said, we're only finding against a small subset, right?

46
00:03:45,220 --> 00:03:49,540
If we had a favorite story that was one hundred thousand items large, we're having a bigger problem.

47
00:03:49,810 --> 00:03:58,270
But for now, this logic works just fine in terms of being able to verify the current instance against

48
00:03:58,360 --> 00:04:02,170
the favorites array, because our favorites are a is going to remain small.

49
00:04:02,320 --> 00:04:08,620
Now, as we gain a larger and larger list, there may be optimizations that we can make to this is favorite

50
00:04:08,620 --> 00:04:12,130
logic, but that would be a premature optimization.

51
00:04:13,460 --> 00:04:20,339
OK, so with that in mind, right now, we have a fully fledged feature we're able to add to the favorite

52
00:04:20,370 --> 00:04:20,730
story.

53
00:04:21,290 --> 00:04:28,100
So next up, what I would like to do is I would like to be able to view all my favorites in a list right

54
00:04:28,100 --> 00:04:32,540
above the list for you when I click the icon over here.

55
00:04:33,240 --> 00:04:35,740
So let's go and take a look at how that would look.

