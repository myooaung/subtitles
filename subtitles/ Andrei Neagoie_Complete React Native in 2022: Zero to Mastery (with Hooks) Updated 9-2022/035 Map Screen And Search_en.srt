1
00:00:00,500 --> 00:00:05,840
I hear you asking the question, Mo, why did we set up a map screen and then import that map screen

2
00:00:05,840 --> 00:00:07,700
directly into Riak native navigation?

3
00:00:07,939 --> 00:00:12,530
Why didn't we create a navigator called Map Navigator like we did for Restaurants Navigator?

4
00:00:13,010 --> 00:00:16,630
Well, that's because right now we're just building out the map screen.

5
00:00:16,730 --> 00:00:23,720
We don't know all of the other functionality that it may need if it needs to be able to go to different

6
00:00:23,720 --> 00:00:28,550
screens, if it has different screens inside of the map, or if it's solely just the map view that's

7
00:00:28,550 --> 00:00:33,050
linking out into Restaurant Navigator, we haven't built out all of the functionality yet.

8
00:00:33,350 --> 00:00:43,610
So for now, map screen will suffice for us to enable us to be able to load what we need from maps.

9
00:00:45,090 --> 00:00:52,890
Now that we have our map up and running, the next thing we need to do is we need to make sure that

10
00:00:52,890 --> 00:00:58,190
it gets the information it requires in order to render out what it needs to render out.

11
00:00:58,590 --> 00:01:04,300
So for us to do that, we're going to need to build out a bit more than what is already here.

12
00:01:05,040 --> 00:01:07,260
So right here we see that we have a map screen.

13
00:01:07,440 --> 00:01:13,620
And if we open this up, what we're going to be able to do is build out what our map screen is supposed

14
00:01:13,680 --> 00:01:14,510
to look like.

15
00:01:15,000 --> 00:01:21,270
Right now, the entire mafia is rendering inside of the entire shell of the app, and we don't really

16
00:01:21,270 --> 00:01:28,160
mind if it's taking up the entire view rather than, for instance, rendering it in a safe area.

17
00:01:28,390 --> 00:01:33,480
We don't mind the full the full screen solution here because it looks nice.

18
00:01:33,480 --> 00:01:37,120
It looks nice when the when the map extends out into this area.

19
00:01:37,590 --> 00:01:39,540
So we're going to leave it as is.

20
00:01:39,810 --> 00:01:45,900
But what we're going to do is we're going to import styled from style components native.

21
00:01:46,950 --> 00:01:54,780
And what we're going to do is we're going to say consed map equals styled and we'll give it the map

22
00:01:54,780 --> 00:01:56,940
for you and then we'll say.

23
00:01:59,520 --> 00:02:00,750
One hundred percent.

24
00:02:01,640 --> 00:02:04,940
With 100 percent just for good measure.

25
00:02:06,120 --> 00:02:13,410
And then once we have that, we don't we can utilize that as our map rather than have the inline styles

26
00:02:13,410 --> 00:02:14,010
going on.

27
00:02:14,010 --> 00:02:18,930
And as we can see here, it is still loading correctly when we go into our map.

28
00:02:19,360 --> 00:02:24,430
That looks amazing now that we have our maps set up with a style component.

29
00:02:24,480 --> 00:02:25,950
What's the next thing we need to do?

30
00:02:26,790 --> 00:02:32,310
Well, I would argue that the next thing we need to do is figure out how we're going to render out the

31
00:02:32,310 --> 00:02:33,420
search bar at the top.

32
00:02:33,780 --> 00:02:39,500
So right now, our search is inside of this feature component restaurants.

33
00:02:39,870 --> 00:02:46,650
So what we can do here is we can utilize the search that is currently inside of here or we can build

34
00:02:46,650 --> 00:02:49,820
a standalone search for the map screen.

35
00:02:50,160 --> 00:02:58,020
I lean towards building a standalone search for the map screen because at a certain point these search

36
00:02:58,020 --> 00:03:02,130
bars may diverge in terms of functionality and view.

37
00:03:02,250 --> 00:03:05,490
And we don't we want to build the right component for the right use case.

38
00:03:05,700 --> 00:03:11,430
So what we can do is we can copy everything in this file because it's going to look close to what is

39
00:03:11,430 --> 00:03:18,180
currently here, will create a components folder and then we'll create a search component that is.

40
00:03:19,950 --> 00:03:22,290
And will paste what is in here.

41
00:03:23,700 --> 00:03:33,210
And this will allow us to have a very similar component to what is already inside of restaurants, but

42
00:03:33,210 --> 00:03:40,260
the reason that we're copy pasting is it's not bad to copy paste components when they differ in visualization

43
00:03:40,440 --> 00:03:49,950
or they may differ in some view in functionality because we don't want complex, if else, logic inside

44
00:03:49,950 --> 00:03:54,900
of the component determining, hey, you need to render this icon or you need to render this icon in

45
00:03:54,900 --> 00:03:55,860
this specific use case.

46
00:03:55,860 --> 00:04:00,850
And as a search bar extends across multiple features, it becomes like this very, very bulky thing.

47
00:04:01,170 --> 00:04:05,880
So for that case, we build the search bar specifically for the map view.

48
00:04:07,050 --> 00:04:14,140
Now we can go ahead and we can say import search from Tattaglia.

49
00:04:15,150 --> 00:04:24,180
Components search component, and now we'll have a search bar for our search screen, so we'll do search

50
00:04:24,180 --> 00:04:24,510
here.

51
00:04:25,230 --> 00:04:33,030
And as we do that now, we'll be able to see that we have a search, but it's not really positioning

52
00:04:33,030 --> 00:04:33,840
itself correctly.

53
00:04:34,260 --> 00:04:41,460
And so that's where the search function already diverges from the search function we saw for restaurants

54
00:04:41,940 --> 00:04:44,420
instead of it being having padding.

55
00:04:44,430 --> 00:04:48,150
It's also supposed to be positioned in an absolute fashion.

56
00:04:48,990 --> 00:04:56,460
And next to that, we're going to give it a Z index of nine nine nine so that it renders at the top

57
00:04:56,730 --> 00:04:57,810
it already has a padding.

58
00:04:57,810 --> 00:05:02,090
And we're going to say from the top, always be 20 pixels far down.

59
00:05:02,640 --> 00:05:06,570
And so with that, oh, now it's rendering over here.

60
00:05:07,350 --> 00:05:15,210
Well, let's also give it a width of one hundred percent so that it scales to the to the UI and maybe

61
00:05:15,210 --> 00:05:16,760
let's render it a bit lower.

62
00:05:17,610 --> 00:05:18,490
That looks good.

63
00:05:18,540 --> 00:05:20,700
That feels good and.

64
00:05:21,780 --> 00:05:26,760
Maybe we could go a bit lower, we could go a bit lower, and if we look on Android here, what we're

65
00:05:26,760 --> 00:05:29,400
going to see is something very, very similar.

66
00:05:29,800 --> 00:05:34,190
We're going to see it render inside of The View at a good position.

67
00:05:34,830 --> 00:05:41,490
And so with that, we now have our search bar that is rendering already the same value as in the restaurant's

68
00:05:41,490 --> 00:05:44,900
view, because it's already hooked up to the context.

69
00:05:44,970 --> 00:05:45,330
Right.

70
00:05:45,520 --> 00:05:47,460
We already hooked up the search to the context.

71
00:05:47,460 --> 00:05:50,180
So it's using the same keyword that is currently set.

72
00:05:50,430 --> 00:05:56,890
And this is pretty cool because let's say we searched for Antwerp inside of here, Antwerp.

73
00:05:57,810 --> 00:06:00,270
Now we're going to run there, the restaurants for Antwerp.

74
00:06:00,270 --> 00:06:04,350
And if we go to our map view, oh, well, this isn't updating.

75
00:06:04,590 --> 00:06:05,980
Why isn't this updating?

76
00:06:06,270 --> 00:06:12,330
Well, we're only setting the search keyword for the initial render.

77
00:06:12,630 --> 00:06:21,640
So we need to make sure that any time the keyword updates, we update the search keyword inside of here.

78
00:06:22,110 --> 00:06:30,450
So what we can do is we can set a use effect inside of our search component locally and we can say any

79
00:06:30,450 --> 00:06:31,770
time the keyword changes.

80
00:06:33,240 --> 00:06:40,350
Let's set the search keyword, let's set the local search keyword to the keyword.

81
00:06:41,330 --> 00:06:44,880
And let's import use effect from over here.

82
00:06:45,730 --> 00:06:51,050
Now we can have a sink that happens between these two screens.

83
00:06:51,050 --> 00:06:59,810
So if I reload here and I search for Antwerp, we're going to see that it is going to adjust itself

84
00:07:00,050 --> 00:07:01,180
inside of this screen.

85
00:07:01,430 --> 00:07:03,440
But if I search for San Francisco here.

86
00:07:04,360 --> 00:07:11,520
What we're going to see is that in here, it's not going to update, so we need this logic in both places.

87
00:07:12,250 --> 00:07:22,570
But the reasoning behind us duplicating this logic is because we don't want to search components, we

88
00:07:22,570 --> 00:07:29,500
don't want one search component for both use cases because they're going to diverge heavily in visualization

89
00:07:30,010 --> 00:07:31,350
and positioning.

90
00:07:31,780 --> 00:07:36,750
So the styling, the search container is going to differ as well as some of the functionality in here.

91
00:07:37,060 --> 00:07:41,740
Now, we could say that we may take out the search bar and give it some conditional logic.

92
00:07:42,100 --> 00:07:49,030
I honestly prefer this method because this will scale with the feature if the map screen feature needed

93
00:07:49,240 --> 00:07:56,440
more intense search functionality type of head functionality from Google type ahead to test or AB testing

94
00:07:56,440 --> 00:07:59,890
the map screen search versus the restaurant search.

95
00:08:00,400 --> 00:08:02,860
So I like to Buckett these features.

96
00:08:02,860 --> 00:08:04,780
I like the bucket, these features to be separate.

97
00:08:05,380 --> 00:08:13,240
And one of the things that we're immediately going to do is we're going to show a custom icon inside

98
00:08:13,240 --> 00:08:18,160
of this search component for the search map screen.

99
00:08:18,820 --> 00:08:22,570
And so the way that we're going to do that is we're going to say icon is equal to map.

100
00:08:23,020 --> 00:08:28,810
And by doing this now, we can see that when we're on the restaurant screen, it's going to show us

101
00:08:28,810 --> 00:08:29,650
a search indicator.

102
00:08:29,650 --> 00:08:32,919
But when we're on the map, screen is going to show us a map indicator.

103
00:08:33,070 --> 00:08:37,230
And that map indicator is going to allow us to know, hey, visually, we're on the map screen.

104
00:08:37,780 --> 00:08:40,010
So another divergence point.

105
00:08:40,510 --> 00:08:46,630
OK, so now we know that if we type in Antwerp here and we were to hit search, what we would see in

106
00:08:46,630 --> 00:08:50,440
the restaurant screen is also a loading of the Antwerp restaurants.

107
00:08:50,830 --> 00:08:51,520
Amazing.

108
00:08:52,780 --> 00:08:57,650
We're starting to link functionality together, we're starting to get the map screen in a good shape.

109
00:08:58,150 --> 00:09:01,180
Now we've set up search for the map screen.

110
00:09:01,210 --> 00:09:08,440
We set up the map screen in side of the navigation, and we've kind of coupled the searches together

111
00:09:08,440 --> 00:09:13,570
so that when one search happens in the map screen, the other search also updates that back and forth

112
00:09:13,570 --> 00:09:14,470
is very important.

113
00:09:14,890 --> 00:09:20,800
In the next video, we're going to look at how we can extend the map for you to render out the information

114
00:09:20,800 --> 00:09:21,640
for the restaurants.

