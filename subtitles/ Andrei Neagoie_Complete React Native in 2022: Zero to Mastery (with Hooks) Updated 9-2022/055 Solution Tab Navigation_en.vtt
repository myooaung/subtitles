WEBVTT
1
00:00:00.810 --> 00:00:02.020
Let's get into the solution.

2
00:00:02.340 --> 00:00:06.800
So first off, we know that we have to remove the restaurant screen because this isn't useful here anymore.

3
00:00:07.200 --> 00:00:12.240
This is not something that we currently need in the root of the application will leave the airport here

4
00:00:12.240 --> 00:00:13.500
because we still need that.

5
00:00:14.130 --> 00:00:19.110
But what we know over here is that we need to copy these two core items.

6
00:00:20.380 --> 00:00:27.460
We need to import the navigation container as well as the create bottom top navigator.

7
00:00:29.320 --> 00:00:35.440
And looking at this example right down here, we can see that we need to create a contact tab.

8
00:00:37.760 --> 00:00:43.760
To create the actual navigation element, so we'll put that over here right above the render function.

9
00:00:45.470 --> 00:00:50.570
OK, this over here is going to create the bottom tab navigator, this is the core function that is

10
00:00:50.570 --> 00:00:58.580
going to create the component that we're going to use to allow us to create tabs.

11
00:00:58.850 --> 00:01:06.230
OK, so now we could follow along with this and we can create separate components for everything.

12
00:01:06.470 --> 00:01:12.740
Now, this over here, if you see function my tabs, this is similar to the way that we create components.

13
00:01:12.890 --> 00:01:14.660
We just do it with private functions.

14
00:01:15.560 --> 00:01:17.590
Either method is completely valid.

15
00:01:17.630 --> 00:01:20.790
This is what we would call in Java script, a private function.

16
00:01:21.140 --> 00:01:23.180
This is a named function.

17
00:01:23.810 --> 00:01:25.660
And so they operate the exact same way.

18
00:01:25.940 --> 00:01:28.310
My personal preference is to write components this way.

19
00:01:28.590 --> 00:01:32.060
A lot of times this is a very acceptable way of doing it as well.

20
00:01:32.630 --> 00:01:35.860
So what we're going to do is we're going to copy this out.

21
00:01:36.200 --> 00:01:39.750
But first, we need to put our navigation container in our approach.

22
00:01:39.770 --> 00:01:46.570
So this needs to be the core thing that wraps any navigation elements, right?

23
00:01:49.210 --> 00:01:49.970
And there we go.

24
00:01:50.500 --> 00:01:52.660
So now we have our navigation container in here.

25
00:01:54.810 --> 00:02:03.160
OK, so now that we have that we can create from this TAB element, the TAB navigation.

26
00:02:03.480 --> 00:02:10.979
So by doing this we said we wanted a restaurant's screen, which is going to be restaurants, and then

27
00:02:10.979 --> 00:02:14.880
we wanted a setting screen, but we also wanted a map screen.

28
00:02:15.660 --> 00:02:18.780
We can quickly create like two functions here, right?

29
00:02:19.080 --> 00:02:24.120
Const settings is equal to and then quickly grab.

30
00:02:25.280 --> 00:02:30.740
For instance, let's do react native, let's grab just a quickly like the text element from Riak native,

31
00:02:31.490 --> 00:02:35.600
we're going to render out some text here just to make it easy to see which screen is which.

32
00:02:36.050 --> 00:02:40.700
And so we can do settings is equal to text and then we'll do settings.

33
00:02:42.010 --> 00:02:47.560
And text, and then we'll do the same for map and we'll say map.

34
00:02:48.620 --> 00:02:55.400
We'll save that and what we can do here is we can say map, we can say settings and we know that for

35
00:02:55.400 --> 00:02:59.540
restaurants we're going to need the restaurants screen.

36
00:03:00.890 --> 00:03:04.970
And so when we do that, I just need to quickly rerun.

37
00:03:06.830 --> 00:03:13.670
My expo canceled it and then one stops running what I can do once it started, the metro bundler, I

38
00:03:13.670 --> 00:03:19.490
can reload over here and this is going to allow me the ability to see my changes in the app while it's

39
00:03:19.490 --> 00:03:19.940
building.

40
00:03:20.600 --> 00:03:28.850
And boom, right here we can see restaurants, map settings, no icons available yet, but we have three

41
00:03:28.850 --> 00:03:29.660
things rendering out.

42
00:03:29.690 --> 00:03:31.310
Oh, look at that.

43
00:03:31.820 --> 00:03:36.130
Look at that map is rendering off the screen and so is settings.

44
00:03:36.500 --> 00:03:37.310
Why is that?

45
00:03:37.850 --> 00:03:42.560
Well, remember when we created our safe area in the screen right here?

46
00:03:43.670 --> 00:03:50.220
When we need the same thing for all of these tabs, because they're not rendering in the safe area.

47
00:03:50.570 --> 00:03:55.250
So one thing, one optimization we're going to do here as well is we're going to create a new folder

48
00:03:55.250 --> 00:03:55.820
over here.

49
00:03:57.020 --> 00:04:04.150
A new component, so to speak, and we'll call it safe area component thought.

50
00:04:05.420 --> 00:04:11.000
Now, we could put this in a specific folder, but since it's just a baseline component, well, let's

51
00:04:11.000 --> 00:04:12.260
put it in utilities.

52
00:04:12.380 --> 00:04:12.760
Right.

53
00:04:12.950 --> 00:04:15.920
This is kind of a utility component.

54
00:04:15.920 --> 00:04:17.779
So we'll put it in a utility folder.

55
00:04:18.680 --> 00:04:23.330
And then what we're going to do is we're going to take from restaurant screen.

56
00:04:23.660 --> 00:04:30.410
We're going to say export, we're going to copy paste this and we're going to put it in here.

57
00:04:30.920 --> 00:04:34.610
And then we're going to take this import.

58
00:04:35.000 --> 00:04:37.070
We're going to put this at the top.

59
00:04:37.940 --> 00:04:40.400
We're going to remove flat list because it's not used.

60
00:04:40.400 --> 00:04:43.580
We're going to clean up these references because we don't need them.

61
00:04:44.180 --> 00:04:48.590
And then the last thing we need to do is we need to import styled from Riak native styled.

62
00:04:49.100 --> 00:04:55.280
And then in the restaurant screen, of course, we need to do something like import safe area, and

63
00:04:55.280 --> 00:05:01.970
then we need to do that from dot, dot, dot, dot, dot, dot, dot, slash components, utility,

64
00:05:03.120 --> 00:05:03.740
safe area.

65
00:05:04.550 --> 00:05:06.260
And that's going to fix that up.

66
00:05:06.650 --> 00:05:14.360
And then in the app that, yes, we can import that safe area as well by doing an import over here from

67
00:05:14.510 --> 00:05:16.880
import safe area.

68
00:05:17.540 --> 00:05:25.850
And then we can say from source components, utility, safe area and then we'll have our safe area.

69
00:05:25.850 --> 00:05:30.070
And all we need to do now is say, OK, wrap this in a safe area.

70
00:05:31.640 --> 00:05:34.240
And then wrap this one in the safe area.

71
00:05:36.500 --> 00:05:43.940
And by doing that, we're going to make sure that every single tab renders in a safe area and now they're

72
00:05:43.940 --> 00:05:45.760
rendering in the correct section.

73
00:05:45.920 --> 00:05:51.560
So we took a component that we have built for a specific screen and we now needed a utility component

74
00:05:51.740 --> 00:05:52.970
that can be used anywhere.

75
00:05:53.090 --> 00:05:58.670
And so they're, first of all, always going to dodge the top height because on iOS is going to be in

76
00:05:58.670 --> 00:06:02.750
the safe area component and on Android, it's going to take into account the current height.

77
00:06:03.590 --> 00:06:06.710
And we applied this to every single screen.

78
00:06:07.280 --> 00:06:14.120
So we made a mini optimization there, but a very powerful one because now we can put any tab in a safe

79
00:06:14.120 --> 00:06:14.550
area.

80
00:06:15.110 --> 00:06:15.770
Amazing.

