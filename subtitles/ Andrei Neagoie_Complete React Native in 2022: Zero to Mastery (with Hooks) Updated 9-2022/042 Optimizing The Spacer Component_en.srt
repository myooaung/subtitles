1
00:00:01,580 --> 00:00:08,810
Last we left off, we wanted to optimize the spacer and in order to optimize the spacer.

2
00:00:09,140 --> 00:00:14,060
Well, right now we have this entire if statement tree that's kind of telling us, well, if it's top

3
00:00:14,060 --> 00:00:17,690
left, bottom right, will you only did top or left.

4
00:00:17,690 --> 00:00:21,740
And we already had one, two, three, four, five if statements.

5
00:00:21,950 --> 00:00:23,460
We don't really want to do that.

6
00:00:23,540 --> 00:00:26,510
That's that's not something that sounds very appealing.

7
00:00:26,540 --> 00:00:27,920
So what we're going to do here.

8
00:00:28,220 --> 00:00:28,610
Right.

9
00:00:29,600 --> 00:00:34,790
We're going to do instead of Var., we're going to do position, which is that, and then we're going

10
00:00:34,790 --> 00:00:35,870
to do size.

11
00:00:36,860 --> 00:00:44,750
And so based on position and size, we're going to render out the right type of view.

12
00:00:45,420 --> 00:00:47,930
So here we're going to do spacer component.

13
00:00:49,140 --> 00:00:56,460
And then we're going to pass it position in size, so we're going to say position is equal to position

14
00:00:57,690 --> 00:01:01,870
and then we're going to say that size is equal to size.

15
00:01:02,370 --> 00:01:04,190
Now, we don't even actually need to do this.

16
00:01:04,200 --> 00:01:11,580
So what we could, for instance, do is we could just say, hey, styled dot view, that's going to

17
00:01:11,580 --> 00:01:12,630
be our spacer component.

18
00:01:12,840 --> 00:01:13,440
Let's do that.

19
00:01:13,470 --> 00:01:14,450
That may be a bit easier.

20
00:01:16,460 --> 00:01:21,770
And then what we'll say is, will remove all of this and I'm going to show you a technique that may

21
00:01:21,770 --> 00:01:23,400
be a bit of trickery.

22
00:01:24,200 --> 00:01:28,000
Now we're going to see here that we're going to read the props, right?

23
00:01:28,430 --> 00:01:29,810
So we have the props.

24
00:01:31,660 --> 00:01:37,540
These are our props now, what we're going to the structure off of the props is going to be positioned.

25
00:01:39,490 --> 00:01:45,460
And then we're going to do size and position, we're going to default to the top, and the way that

26
00:01:45,460 --> 00:01:51,520
we're going to do that is we're going to say spacer thought default props equals and we're going to

27
00:01:51,520 --> 00:01:58,120
say position is equal to top and we're going to say size is equal to.

28
00:01:59,200 --> 00:01:59,830
Small.

29
00:02:01,280 --> 00:02:09,620
Right, and so over here, what we're going to do is we're going to say CONSED sizes is equal to an

30
00:02:09,620 --> 00:02:13,910
object where we say if it's small, we're going to do index one.

31
00:02:14,360 --> 00:02:17,180
If it's medium, we're going to do index two.

32
00:02:17,750 --> 00:02:20,070
And if it's large, we're going to do index three.

33
00:02:20,810 --> 00:02:22,880
And so these are going to be our different options.

34
00:02:23,150 --> 00:02:23,460
Right.

35
00:02:24,260 --> 00:02:30,890
And so now inside of here, now that we know what the size is going to link to, what we can say is

36
00:02:30,890 --> 00:02:33,710
the position, right, top, bottom, left, right.

37
00:02:33,740 --> 00:02:38,510
So we're going to say CONSED positions and we're going to make that an object as well.

38
00:02:38,520 --> 00:02:43,070
And we're going to say if it's top, we're going to do margin top.

39
00:02:44,050 --> 00:02:53,260
And if it's left, we're going to do margin left and if it's bottom, we're going to do margin bottom,

40
00:02:54,490 --> 00:02:54,950
OK?

41
00:02:55,510 --> 00:03:00,310
And then if it's right, we're going to do margin, right.

42
00:03:00,730 --> 00:03:02,010
So these are all of our options.

43
00:03:02,020 --> 00:03:04,120
These are all of the possible combinations that we can get to.

44
00:03:04,600 --> 00:03:08,830
So what we're going to do here is we're going to say the following.

45
00:03:09,960 --> 00:03:17,040
What we're going to return from this function is we're going to return a string from this function.

46
00:03:18,210 --> 00:03:22,890
Now, this may be a bit weird because we're returning a template string inside of a string, but basically

47
00:03:22,890 --> 00:03:30,150
what we want to return here is something along the lines of margin top one, two or three margin left

48
00:03:30,840 --> 00:03:33,780
one, two or three.

49
00:03:33,780 --> 00:03:34,150
Right.

50
00:03:34,530 --> 00:03:36,300
So that's what we're trying to return here.

51
00:03:36,670 --> 00:03:39,990
OK, so what we can say is get variant.

52
00:03:40,320 --> 00:03:41,340
That's what we're going to do.

53
00:03:41,970 --> 00:03:45,990
And we're going to give that position and we're going to give that size.

54
00:03:46,560 --> 00:03:56,550
And then we're going to say over here that consed get variant is equal to position and size and what

55
00:03:56,550 --> 00:03:58,650
is going to return is a string.

56
00:03:58,920 --> 00:04:00,570
That is the combination of.

57
00:04:01,490 --> 00:04:02,900
We're going to do positions.

58
00:04:05,170 --> 00:04:06,040
Of position.

59
00:04:08,790 --> 00:04:12,810
Or let's call dispositioned variant, because that would make more sense, we're going to say select

60
00:04:12,810 --> 00:04:16,589
the position variant and select the size variant based on the size.

61
00:04:16,589 --> 00:04:21,120
So the position variant of position is going to be if we give it top, it's going to do margin, top

62
00:04:21,120 --> 00:04:24,300
if it's left, to do margin left and so forth and so forward.

63
00:04:25,530 --> 00:04:28,050
And then we're going to say we need to return a string.

64
00:04:28,410 --> 00:04:34,710
So we're going to do this and then we're going to say we're going to add this over here and then we're

65
00:04:34,710 --> 00:04:37,560
going to say size, variant of size.

66
00:04:38,400 --> 00:04:40,080
We're constructing a string here.

67
00:04:40,380 --> 00:04:45,390
And basically what this says is, OK, so you're going to pass me a position of this size which can

68
00:04:45,390 --> 00:04:47,280
be top left, right or bottom.

69
00:04:47,280 --> 00:04:50,750
And you're going to pass me a size variant, which you're going to be small, medium or large.

70
00:04:50,760 --> 00:04:54,030
So we're reading this syntax, this language for this component.

71
00:04:54,030 --> 00:04:55,200
Right, these props.

72
00:04:55,830 --> 00:04:59,190
And we're going to say that the defaults are these top small.

73
00:05:00,050 --> 00:05:05,010
OK, so knowing that we know now that we're formulating over here.

74
00:05:06,320 --> 00:05:09,650
We're going to get the position and size off of the props with the spacer component, and we're going

75
00:05:09,650 --> 00:05:14,210
to say run the get variant function and get various function is going to take the position in size and

76
00:05:14,210 --> 00:05:20,360
go select the position variant based off of what was given and the size variant based off of what was

77
00:05:20,360 --> 00:05:20,690
given.

78
00:05:21,380 --> 00:05:21,740
Right.

79
00:05:22,430 --> 00:05:30,680
So with this, what we basically have over here is the ability to have a function that will generate

80
00:05:30,680 --> 00:05:31,040
this.

81
00:05:31,040 --> 00:05:35,690
But the one thing we have to add at the end of this is pixels, because we always have to actually,

82
00:05:35,690 --> 00:05:40,610
we don't because we're referencing sorry, we don't have to add pixels because we're referencing a certain

83
00:05:40,610 --> 00:05:42,470
size on the theme.

84
00:05:42,650 --> 00:05:45,550
One, two and three is referring to the spacing.

85
00:05:45,920 --> 00:05:50,030
So one, two, three, four, eight and 16 pixels.

86
00:05:50,360 --> 00:05:51,230
So that's great.

87
00:05:51,590 --> 00:05:57,620
So knowing that we're basically set up for success here now, we do have some errors in here and we

88
00:05:57,620 --> 00:05:58,820
can go check those out.

89
00:05:59,250 --> 00:06:00,110
What is the error?

90
00:06:01,240 --> 00:06:07,900
Parsing const declarations require an initialization value, and it seems that I made a little syntactical

91
00:06:07,900 --> 00:06:10,300
error here, that has to be an equal sign.

92
00:06:10,880 --> 00:06:12,450
OK, and so we're ready to go, right?

93
00:06:13,980 --> 00:06:17,790
And so there's one more thing that we need to do now, this spacer component, you may have noticed

94
00:06:17,790 --> 00:06:22,740
that originally we had put it alone as kind of like an alarm component right here.

95
00:06:23,310 --> 00:06:27,960
But since it's a view, you can actually wrap the thing that you're spacing so you can put your spacer

96
00:06:28,140 --> 00:06:33,060
around something and that will allow it to space that element.

97
00:06:33,300 --> 00:06:37,680
And that is a way more effective way of being able to inspect it, because if we don't do it that way,

98
00:06:37,680 --> 00:06:39,170
we won't be able to see the view.

99
00:06:39,180 --> 00:06:40,440
It will still space.

100
00:06:40,920 --> 00:06:43,470
It'll just be very hard to target in the element, Inspector.

101
00:06:43,920 --> 00:06:44,210
Right.

102
00:06:44,220 --> 00:06:51,090
If we do this, for instance, on the image, what we're going to see is that in the element, Inspector,

103
00:06:51,720 --> 00:06:56,730
we're going to have a very hard time targeting specifically where that thing is happening, whereas

104
00:06:56,730 --> 00:07:04,830
on this element, we can kind of figure it well, it's still hard, but you can still get it if you

105
00:07:04,830 --> 00:07:11,340
click on this and you go over here up one level, for example.

106
00:07:13,280 --> 00:07:14,480
You can usually get it.

107
00:07:18,500 --> 00:07:22,680
Right now, it isn't spacing at all, and that's because the spacing is extremely small.

108
00:07:22,760 --> 00:07:28,430
What is happening here is if we go up here and we can't hold out longer position variant and let me

109
00:07:28,430 --> 00:07:30,470
just put the spacer back around.

110
00:07:31,740 --> 00:07:35,190
And then right here, I need to remove this part.

111
00:07:36,030 --> 00:07:36,400
Boom.

112
00:07:36,600 --> 00:07:37,440
And we're good.

113
00:07:37,920 --> 00:07:43,350
OK, so right now it is spacing and if we cancel the log, exactly what's going on with the spacing?

114
00:07:44,750 --> 00:07:51,710
What we can see here is if we hide the element of Specter and we reload quickly, what we can see is

115
00:07:51,710 --> 00:07:52,190
that.

116
00:07:54,200 --> 00:07:56,810
Our get variant, let me open this up a bit more.

117
00:07:58,590 --> 00:07:59,660
What's going on in here?

118
00:08:00,930 --> 00:08:02,900
Every element should have unique you sure?

119
00:08:05,520 --> 00:08:08,910
In our spacer, it doesn't seem to be console logging.

120
00:08:09,810 --> 00:08:10,900
So let's see here.

121
00:08:10,920 --> 00:08:15,690
Oh, yeah, well, OK, so if we went back here to this.

122
00:08:17,250 --> 00:08:22,850
What we'll see is that margin left is being set to three, so this isn't actually the correct size,

123
00:08:23,160 --> 00:08:24,790
this isn't getting it from the theme.

124
00:08:25,500 --> 00:08:29,760
So what we need to do here is we're getting the correct size variant, right.

125
00:08:30,090 --> 00:08:32,600
So what we can do is we can optimize this a bit.

126
00:08:33,480 --> 00:08:40,770
We can say const size index is equal to this and then we can say property.

127
00:08:41,700 --> 00:08:43,590
Is equal to the position variant.

128
00:08:45,100 --> 00:08:49,210
And so now we know that this is going to be marginal left margin top and then for the size, and that's

129
00:08:49,210 --> 00:08:50,020
what we want to do.

130
00:08:50,020 --> 00:08:52,300
Here is one more thing.

131
00:08:52,960 --> 00:08:57,670
We also want to get the theme object and we want to pass the theme to this.

132
00:08:58,730 --> 00:09:07,220
And so what we can do now is we can take the theme in here and we can say for the size index, this

133
00:09:07,220 --> 00:09:15,050
is CONSED, the actual value is equal to theme that space, I believe.

134
00:09:15,290 --> 00:09:21,260
And then we give it the size index and we'll console lock that console that log the value.

135
00:09:22,600 --> 00:09:31,330
And we'll just put value inside of here, and that should warrant us properly to get the correct spacing.

136
00:09:31,720 --> 00:09:38,440
So if we look here, it's so hard to target these inner little things, but we can see the spacing going

137
00:09:38,440 --> 00:09:39,070
on here, right?

138
00:09:39,510 --> 00:09:40,290
We can see that.

139
00:09:40,300 --> 00:09:42,230
And so, like, let's play around with that.

140
00:09:42,250 --> 00:09:45,670
The element inspector targeting small, little things, always so hard.

141
00:09:46,990 --> 00:09:53,050
Now, what we can do here is we can play around with the spacer so we can say left, small, right.

142
00:09:53,590 --> 00:09:57,800
And if we say left small here, that's going to make that smaller.

143
00:09:58,120 --> 00:10:00,070
So we're going to see a large.

144
00:10:01,220 --> 00:10:03,500
And we could say for here top.

145
00:10:04,730 --> 00:10:05,100
Right.

146
00:10:05,120 --> 00:10:06,360
And that's going to break that.

147
00:10:06,920 --> 00:10:07,460
So.

148
00:10:08,680 --> 00:10:14,170
Wrapping the spacer around the thing you want, the space is the first proper thing we should do because

149
00:10:14,380 --> 00:10:17,560
look, at the end of the day, you don't need to wrap the spacer around the thing.

150
00:10:17,560 --> 00:10:18,430
You want the space.

151
00:10:18,850 --> 00:10:25,240
You could just as well do this and it would still space adequately, like you'd still see the spacing

152
00:10:25,240 --> 00:10:26,020
occurring here.

153
00:10:26,470 --> 00:10:29,020
But kind of depends on what you want to do.

154
00:10:29,050 --> 00:10:32,620
I find it better to wrap it around the thing you want to space, because at least then you'll have a

155
00:10:32,620 --> 00:10:36,650
better chance of targeting it for viewing in the element, Inspector.

156
00:10:37,390 --> 00:10:46,780
So we've basically built and optimized the entire spacer component to be able to get the variant that

157
00:10:46,780 --> 00:10:54,910
we need for the style that we need from the theme based on a couple of props that we gave it.

158
00:10:54,920 --> 00:11:02,350
So basically us giving it a prop position and size is able to tell the spacer how to space adequately.

159
00:11:02,620 --> 00:11:08,890
And we've built, I believe, 12 or 13 variants of this component just with a couple of lines of code.

160
00:11:09,250 --> 00:11:10,960
And that's absolutely amazing.

161
00:11:10,960 --> 00:11:13,420
And we've also defaulted it to be top small.

162
00:11:13,900 --> 00:11:20,170
So optimizing these spacer and getting these variants is a very good pattern just because it allows

163
00:11:20,170 --> 00:11:26,020
us to create so much versatility in this component versus all of those if statements.

164
00:11:26,020 --> 00:11:26,290
Right.

165
00:11:26,500 --> 00:11:28,360
All of those if statements were quite complex.

166
00:11:28,540 --> 00:11:35,080
At the end of the day, this is building up the entirety of the statement that is going to be the property.

167
00:11:36,070 --> 00:11:42,550
That we're returning inside The View and so the syntax can be a bit wonky, right, but what we're doing

168
00:11:42,550 --> 00:11:47,410
is we're getting the props off of the prop values and then we're running a get variant function based

169
00:11:47,410 --> 00:11:52,710
off of those properties to get the correct spacing from this menu.

170
00:11:52,960 --> 00:11:53,290
Right.

171
00:11:53,300 --> 00:12:00,880
The size variance index and the position variant, name margin, bottom margin, right margin left,

172
00:12:01,150 --> 00:12:02,170
all that good stuff.

173
00:12:02,320 --> 00:12:02,740
All right.

174
00:12:02,770 --> 00:12:08,080
So optimizing that space component, no more if statements and way more functionality.

