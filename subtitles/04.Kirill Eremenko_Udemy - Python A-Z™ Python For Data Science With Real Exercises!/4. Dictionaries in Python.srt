1

00:00:05,050  -->  00:00:08,090
Hello and welcome back to the course and Python programming.

2

00:00:08,100  -->  00:00:12,810
In today's tutorial we're talking about dictionaries and Python quite excited about this tutorial so

3

00:00:12,960  -->  00:00:14,430
let's dive straight into it.

4

00:00:14,670  -->  00:00:17,010
So dictionaries What are they.

5

00:00:17,220  -->  00:00:22,920
I've already said the title over here and what I'm going to do is I'm going to remove the header and

6

00:00:22,950  -->  00:00:24,710
the toolbar so I have some more space.

7

00:00:24,780  -->  00:00:29,700
And before we jump into talking about dictionaries what I want to do is practice a bit of indexation

8

00:00:29,810  -->  00:00:33,060
and that will kind of gradually lead us into that topic.

9

00:00:33,250  -->  00:00:39,510
If you go to the top here we've got some matrices and let's say we to take Kobe Bryant's games for those

10

00:00:39,510  -->  00:00:45,000
seasons so confront is the first is represented by the first row here so you can see Kobe Bryant and

11

00:00:45,000  -->  00:00:46,590
that's how the matrix was created.

12

00:00:46,590  -->  00:00:47,950
So he's at the top.

13

00:00:48,030  -->  00:00:53,370
So we want to take his games or let's say we want to look at the brawne James we want to look at the

14

00:00:53,370  -->  00:00:57,180
number of games for the past for the most recent season in this data set.

15

00:00:57,180  -->  00:00:57,550
Right.

16

00:00:57,550  -->  00:00:58,440
So how do we do.

17

00:00:58,440  -->  00:00:59,160
Would we do that.

18

00:00:59,160  -->  00:01:00,390
We would say games.

19

00:01:00,530  -->  00:01:01,800
That's the whole matrix.

20

00:01:01,800  -->  00:01:04,140
If you run that you'll see that the whole matrix.

21

00:01:04,410  -->  00:01:08,420
And if I just want to access the first draw just say games and then say zero.

22

00:01:08,430  -->  00:01:14,990
Because by an indexation starts from zero so that gives me that first stroke and if I want LeBron James

23

00:01:15,120  -->  00:01:18,130
he's in the third row which beat games too.

24

00:01:18,420  -->  00:01:21,030
And that's his whole row.

25

00:01:21,060  -->  00:01:26,460
If I want just the past season I would look at the last row in this case.

26

00:01:26,460  -->  00:01:28,370
It would be number nine.

27

00:01:28,440  -->  00:01:29,760
So that gives me a 69.

28

00:01:29,760  -->  00:01:36,230
Or another way we could do it is we could access it by a minus sign or you could say minus one.

29

00:01:36,470  -->  00:01:36,750
Right.

30

00:01:36,760  -->  00:01:37,680
It would be 69.

31

00:01:37,690  -->  00:01:40,970
Also just means go from the other side go the right.

32

00:01:40,980  -->  00:01:44,910
What else can we do we could say games to minus one like that.

33

00:01:44,910  -->  00:01:50,340
So that's the same thing that that doesn't really matter which way it's eight games to nine.

34

00:01:50,380  -->  00:01:52,280
We can do many different ways like that.

35

00:01:52,410  -->  00:01:57,470
And what else could we we could for any player we could pick out their values or their rows.

36

00:01:57,520  -->  00:02:03,360
However we want as long as we know kind of the position they are in the Matrix so whether they're numbers

37

00:02:03,360  -->  00:02:12,090
0 1 2 3 for instance for let's say the points matrix would want say Chris Paul's points would have say

38

00:02:12,090  -->  00:02:16,970
1 0 1 2 3 4 5 6.

39

00:02:17,010  -->  00:02:24,270
So he's the 6 and we want the whole roll for example there are say games or points 6 and nothing.

40

00:02:24,270  -->  00:02:25,510
So just like that.

41

00:02:25,770  -->  00:02:31,770
And that is the role for Chris Paul and if we want to serve a year I would say foin So let's say we

42

00:02:31,770  -->  00:02:38,280
want two thousand six for example so then would say this is a stellar 5 she's in the 2006 season so

43

00:02:38,350  -->  00:02:43,810
say 0 1 so be 6 and then 1 then we'd be able to pick out this out.

44

00:02:43,920  -->  00:02:48,080
But as you can see that's quite a tedious process so it is a good thing that we practice how to do the

45

00:02:48,090  -->  00:02:52,920
indexation and I encourage you to practice a bit more and see what other numbers you can pull out of

46

00:02:52,920  -->  00:02:53,440
here.

47

00:02:53,520  -->  00:03:00,280
But at the same time it is a bit tedious to always remember or count the number at which each player

48

00:03:00,290  -->  00:03:00,830
sitting.

49

00:03:01,020  -->  00:03:06,900
And if you've studied Ari you'll remember that in our we have named matrices and named vectors and it's

50

00:03:06,900  -->  00:03:12,120
much easier like that because the matrices actually have the rows and columns of the matrices actually

51

00:03:12,120  -->  00:03:17,260
have names and you can sign those names to be like the player names or the years and therefore it'll

52

00:03:17,280  -->  00:03:23,040
be very easy instead of specifying the number here and here you can specify the names of those dimensions

53

00:03:23,040  -->  00:03:24,130
and it will be much easier.

54

00:03:24,180  -->  00:03:26,910
But in Python it's not as simple as that.

55

00:03:26,910  -->  00:03:33,800
So what I wanted to show you is a way that we can use dictionaries to help us with this a bit of a challenge

56

00:03:33,810  -->  00:03:39,180
so therefore we need to learn a bit about dictionaries and then we'll come back to solving this problem

57

00:03:39,180  -->  00:03:39,540
.

58

00:03:39,540  -->  00:03:41,850
All right so let's have a look at dictionaries.

59

00:03:41,910  -->  00:03:43,340
So what is a dictionary.

60

00:03:43,380  -->  00:03:44,040
How does it work.

61

00:03:44,040  -->  00:03:44,890
What is it used for.

62

00:03:45,030  -->  00:03:50,100
I'll just type up an example and then we'll discuss it right away so we'll say dictionary one equals

63

00:03:50,130  -->  00:03:53,750
and then in curly brackets you know how full lists we have square brackets for dictionaries.

64

00:03:53,760  -->  00:04:01,910
Curly brackets and then also say key one poll on value or valid one and then same thing to pull on Valve

65

00:04:01,980  -->  00:04:02,620
2.

66

00:04:02,730  -->  00:04:07,200
And there's another one the D-3 call on all three.

67

00:04:07,200  -->  00:04:07,470
All right.

68

00:04:07,470  -->  00:04:10,140
So what we have here is three pairs right.

69

00:04:10,140  -->  00:04:14,390
So cue one value one key to value two and three value three.

70

00:04:14,640  -->  00:04:19,050
And what is happening here when I run this we've just created an object which is called a dictionary

71

00:04:19,410  -->  00:04:20,930
and it's kind of like a list.

72

00:04:20,940  -->  00:04:27,570
But the difference is that a list is an ordered set of elements whereas a dictionary is not ordered

73

00:04:27,570  -->  00:04:27,640
.

74

00:04:27,660  -->  00:04:31,880
It's got the key so therefore they are referenced by key.

75

00:04:31,920  -->  00:04:37,190
For example if I have a list I would access elements by their number in a dictionary.

76

00:04:37,200  -->  00:04:40,160
The way to access elements is using their key.

77

00:04:40,200  -->  00:04:43,630
So basically the key is kind of like the label of each value.

78

00:04:43,830  -->  00:04:48,960
Let's have a look an example I would say if I want to access this value so the values are what we are

79

00:04:48,960  -->  00:04:52,730
after the values is the data that has been stored in the dictionary.

80

00:04:52,860  -->  00:04:55,900
So let's say I want to access value to how to access that.

81

00:04:55,900  -->  00:05:01,420
Well I would say dict one and then I would say inside square brackets instead of specifying numbers

82

00:05:01,420  -->  00:05:01,440
.

83

00:05:01,450  -->  00:05:08,340
If I just specify a I would assume if I if this is a list that would be 0 1 2 if I asked for one I'm

84

00:05:08,340  -->  00:05:09,040
going to get an error.

85

00:05:09,060  -->  00:05:14,350
Because you can't do that instead of that for a dictionary you need to specify the actual key of that

86

00:05:14,360  -->  00:05:14,710
value.

87

00:05:14,700  -->  00:05:17,020
So the key of value too is key too.

88

00:05:17,050  -->  00:05:18,550
So let's specify too.

89

00:05:18,740  -->  00:05:22,180
If I run that you will get value to the output right.

90

00:05:22,220  -->  00:05:23,530
Let's look at a different one.

91

00:05:23,540  -->  00:05:27,760
If I say dictionary 1 and then key one I will get value 1.

92

00:05:27,920  -->  00:05:32,960
And if you look at actually dictionary 1 if you look at it you'll see that it's stored exactly like

93

00:05:32,950  -->  00:05:38,450
that so it is always stored in pairs so you can always whenever you say key it will always know which

94

00:05:38,440  -->  00:05:39,610
value you're referring to.

95

00:05:39,610  -->  00:05:41,790
Will give you that value as an output.

96

00:05:42,130  -->  00:05:43,610
All right so and to practice.

97

00:05:43,620  -->  00:05:45,360
Let's do another dictionary here.

98

00:05:45,380  -->  00:05:48,070
That's a dictionary too.

99

00:05:48,230  -->  00:05:53,200
Let's just create a dictionary with countries where the countries are going to be Archy's.

100

00:05:53,200  -->  00:05:55,010
Just to illustrate the point.

101

00:05:55,220  -->  00:05:57,050
So let's say in Germany.

102

00:05:57,230  -->  00:05:59,000
So the value here will be here.

103

00:05:59,000  -->  00:06:01,880
I have been here let's say another one.

104

00:06:01,970  -->  00:06:03,710
France and here.

105

00:06:03,750  -->  00:06:06,740
Maybe instead of the actual just text.

106

00:06:06,800  -->  00:06:10,330
That I've been here I can say two because I've been there two times or something like that.

107

00:06:10,570  -->  00:06:14,690
And then for example let's say Spain I can say true.

108

00:06:14,750  -->  00:06:16,360
So I can do a boolean value.

109

00:06:16,570  -->  00:06:18,030
So if I run this.

110

00:06:18,050  -->  00:06:24,970
This is just to illustrate that dictionaries can have different mixes of values or types just like lists

111

00:06:24,980  -->  00:06:26,510
can in Python.

112

00:06:26,540  -->  00:06:31,010
So if I run a dictionary too you'll see that it's been saved.

113

00:06:31,000  -->  00:06:35,320
And another thing that you'll notice here is that here Germany is in the first place here.

114

00:06:35,320  -->  00:06:37,160
Germany is on the second place.

115

00:06:37,220  -->  00:06:38,280
How come is that right.

116

00:06:38,270  -->  00:06:40,970
So why did France move to the first place all of a sudden.

117

00:06:41,120  -->  00:06:44,880
Well that's because in dictionaries order doesn't matter at all.

118

00:06:44,890  -->  00:06:50,860
There's no no point in order because we can't even access a dictionary based on sequential positioning

119

00:06:50,870  -->  00:06:51,580
of each element.

120

00:06:51,570  -->  00:06:57,790
We can only access elements of a dictionary through their keys anyway so that's why it just stores them

121

00:06:57,800  -->  00:07:03,340
however it's most efficient for Python it doesn't maintain the order in which you specified them.

122

00:07:03,380  -->  00:07:04,820
So that's another thing to remember.

123

00:07:04,900  -->  00:07:08,290
Accessing the elements of this dictionary is still very simple.

124

00:07:08,300  -->  00:07:13,310
So dictionary two square brackets and then let's say I want to get the value for France.

125

00:07:13,310  -->  00:07:14,040
There you go.

126

00:07:14,240  -->  00:07:15,050
I've got the value.

127

00:07:15,050  -->  00:07:20,520
So it's very very simple and that's pretty much all there is to do is of course is a bit more.

128

00:07:20,690  -->  00:07:25,960
But we won't go into too much depth into all of the intricate intricacies of dictionaries and things

129

00:07:25,970  -->  00:07:28,580
that you can do more decrees if we need that.

130

00:07:28,590  -->  00:07:32,810
We'll explore that further down the course or you'll be able to pick that up very quickly because this

131

00:07:32,810  -->  00:07:34,850
is the fundamentals of dictionaries.

132

00:07:34,850  -->  00:07:40,400
What we will do is we will look at how dictionaries are applied in our challenge.

133

00:07:40,510  -->  00:07:45,710
All right so let's go up and here you'll notice that we actually have two dictionaries in our daughters

134

00:07:45,710  -->  00:07:46,930
that we have as stickit.

135

00:07:47,020  -->  00:07:50,410
So the season's dictionary and the player's dictionary predict.

136

00:07:50,460  -->  00:07:54,470
So let's go ahead and explore how they're organized here.

137

00:07:54,470  -->  00:07:59,970
So what you'll see is that the keys here are actually the names of the players.

138

00:07:59,970  -->  00:08:02,590
So Kobe Bryant and the value is zero.

139

00:08:02,690  -->  00:08:07,510
Joe Johnson and the values want LeBron James lvalues to Carmelo Anthony Dahlia's three.

140

00:08:07,510  -->  00:08:14,740
So why would somebody meaning Kyrle create a dictionary which contains values 0 2 9.

141

00:08:14,810  -->  00:08:17,150
What does that give us and the keys or the player names.

142

00:08:17,140  -->  00:08:18,560
So how would that be helpful.

143

00:08:18,710  -->  00:08:25,040
Well if you look at the matrices always Kobe Bryant is on the Zura on the road number zero and always

144

00:08:25,030  -->  00:08:28,100
in every matrix he is on row number zero.

145

00:08:28,120  -->  00:08:32,520
Basically what that is saying and all the other players are also in the same positions in their first

146

00:08:32,530  -->  00:08:34,670
so Joe Johnson's always in the first row.

147

00:08:34,690  -->  00:08:36,650
LeBron James on the second row and so on.

148

00:08:36,640  -->  00:08:42,520
So what that is saying is that this dictionary can help guide us to which role the player is sitting

149

00:08:42,520  -->  00:08:42,670
at.

150

00:08:42,670  -->  00:08:44,040
So as long as we know the name.

151

00:08:44,240  -->  00:08:47,030
So we were looking for information on Carmelo Anthony.

152

00:08:47,020  -->  00:08:52,970
We can use this dictionary to remember that he's on the third row and then use that value to pass it

153

00:08:52,970  -->  00:08:56,730
into the matrix into this matrix or whatever other matrix you want.

154

00:08:56,770  -->  00:09:01,670
And that way we won't have to do that exercise of counting on which row the player is actually sitting

155

00:09:01,660  -->  00:09:02,170
.

156

00:09:02,170  -->  00:09:03,960
So that's the whole point of this victory.

157

00:09:04,150  -->  00:09:06,200
And this one the season's very simple thing.

158

00:09:06,210  -->  00:09:09,970
So 2005 we know that that is the first column.

159

00:09:09,980  -->  00:09:15,350
2006 is column number one 2007s colon number two in every single matrix.

160

00:09:15,350  -->  00:09:21,980
So again we can use this dictionary to access the number of the column based on the key which will be

161

00:09:21,980  -->  00:09:22,550
the year.

162

00:09:22,730  -->  00:09:23,950
So let's have a look at that in action.

163

00:09:23,970  -->  00:09:29,650
It's a very interesting set up so here you kind of like you'd usually expect that this like 0 would

164

00:09:29,650  -->  00:09:33,940
be the key or something like that to get to the Kobe Bryant in the list.

165

00:09:33,930  -->  00:09:39,440
It is you get two words based on numbers here's opposites I know it can be confusing but let's see it

166

00:09:39,430  -->  00:09:41,170
in practice and that will explain how it works.

167

00:09:41,170  -->  00:09:44,840
So let's started with this one and we'll go to the bottom.

168

00:09:44,930  -->  00:09:48,190
We're going back to our challenge so let's add a limiter.

169

00:09:48,470  -->  00:09:52,530
And what are we going to do is we're going to look at Princeton's games right.

170

00:09:52,580  -->  00:09:54,310
Let's look at the game's matrix.

171

00:09:54,350  -->  00:09:55,660
So there's a whole matrix.

172

00:09:55,660  -->  00:10:00,710
So what if I want to access how do I know where Kobe Bryant is sitting.

173

00:10:00,800  -->  00:10:05,930
So I know by default that he's on a roll and miserable Let's say I didn't know that so how would I get

174

00:10:05,920  -->  00:10:06,370
to him.

175

00:10:06,380  -->  00:10:07,850
I would say predict.

176

00:10:07,850  -->  00:10:09,580
So the players dictionary.

177

00:10:09,670  -->  00:10:15,940
And here I would say Kobe Bryant because I remember his name so far on that.

178

00:10:15,940  -->  00:10:17,600
You'll see that I get a value of zero.

179

00:10:17,600  -->  00:10:21,910
So now then and this is my actual index so this is the name of the player.

180

00:10:21,910  -->  00:10:27,950
But then he returns the index of where he's in this just to point this out the dictionary and the matrix

181

00:10:28,050  -->  00:10:29,290
are not interrelated.

182

00:10:29,300  -->  00:10:30,860
They have no connection whatsoever.

183

00:10:30,860  -->  00:10:36,280
It's just a convenient way of structuring this approach that if you remember the name you can look at

184

00:10:36,290  -->  00:10:42,320
the dictionary and find out his position in the matrix though we know he's always in that position in

185

00:10:42,320  -->  00:10:42,860
the Matrix.

186

00:10:43,000  -->  00:10:48,600
And then we can take this value and actually apply it there so then we can say games 0 and run that

187

00:10:48,600  -->  00:10:48,620
.

188

00:10:48,620  -->  00:10:50,330
So that will give us that value.

189

00:10:50,330  -->  00:10:55,130
So if we say we want Derrick Rose right there across there we go.

190

00:10:55,310  -->  00:10:56,310
So he's number eight.

191

00:10:56,310  -->  00:10:59,410
So I want his daughter there it is.

192

00:10:59,410  -->  00:11:02,650
And we can confirm that is true because in this season.

193

00:11:02,720  -->  00:11:06,010
So that's 20 14 13 2012.

194

00:11:06,010  -->  00:11:07,930
He was injured he didn't play any games at all.

195

00:11:07,930  -->  00:11:10,080
So that is definitely Derrick Rose.

196

00:11:10,100  -->  00:11:15,140
So we got his value here and a handy way of doing all of this instead of like looking it up separately

197

00:11:15,130  -->  00:11:15,250
.

198

00:11:15,250  -->  00:11:16,270
How do we do it programatic.

199

00:11:16,270  -->  00:11:23,330
I would take this and place it instead of games instead of the eight they're so from that we are right

200

00:11:23,330  -->  00:11:23,360
.

201

00:11:23,360  -->  00:11:23,990
Do it right away.

202

00:11:23,990  -->  00:11:25,120
So that's the value.

203

00:11:25,420  -->  00:11:30,340
And that's the game so we can look up their dirty clothes and we can do the same thing.

204

00:11:30,360  -->  00:11:32,170
Let's say for the Crows four.

205

00:11:32,170  -->  00:11:35,890
So this was 2014 13 12.

206

00:11:35,920  -->  00:11:38,960
So let's say we want to season 2012.

207

00:11:39,160  -->  00:11:41,830
So again this is our games matrix right.

208

00:11:41,990  -->  00:11:44,770
21 2012 we want to add once again.

209

00:11:44,770  -->  00:11:46,280
This is the row number.

210

00:11:46,310  -->  00:11:48,860
Now we want to add the row numbers in these brackets.

211

00:11:48,860  -->  00:11:56,190
Now we want to add a column number column number so that would be 0 1 2 3 4 5 6 7 right.

212

00:11:56,200  -->  00:12:02,290
The seventh value in here so far on this I'll get zero right because he didn't play any games.

213

00:12:02,500  -->  00:12:08,360
Instead of saying 7 what I could say similar in a similar fashion I could use the dictionary.

214

00:12:08,440  -->  00:12:12,890
And here I could just say 2012 or and that I get zero right.

215

00:12:12,910  -->  00:12:13,380
Beautiful.

216

00:12:13,390  -->  00:12:17,890
Let's try this for a different metric for same points and same thing.

217

00:12:17,880  -->  00:12:21,760
as Derrick Rose 2012 should be there as well because he didn't play.

218

00:12:21,760  -->  00:12:23,210
Let's look at a different player.

219

00:12:23,260  -->  00:12:28,200
Let's look at Joe Johnson thousand 12 that's how many points he made in that year.

220

00:12:28,340  -->  00:12:28,640
Right.

221

00:12:28,630  -->  00:12:35,260
So if I take that and I remove this bit right this whole bit that's a whole row for Joe Johnson in terms

222

00:12:35,260  -->  00:12:37,030
of points and we can go in and confirm that.

223

00:12:37,050  -->  00:12:40,010
So 1 6 5 3 1 4 to 6.

224

00:12:40,150  -->  00:12:46,450
If We'll look at the points metrics and we look at Joe Johnson 1 6 5 3 1 4 to 6 so that it is indeed

225

00:12:46,450  -->  00:12:46,800
him.

226

00:12:46,970  -->  00:12:49,510
And so that's how we can use dictionaries.

227

00:12:49,510  -->  00:12:55,460
So just to recap these matrices that we creating and they don't have named Rose and named columns.

228

00:12:55,690  -->  00:13:01,150
So in order to find the players we need to count at which row they're sitting and at which column they're

229

00:13:01,150  -->  00:13:01,640
sitting.

230

00:13:01,630  -->  00:13:07,580
And best way for us right now is to go through dictionaries because we also get to practice dictionaries

231

00:13:07,580  -->  00:13:08,380
at the same time.

232

00:13:08,540  -->  00:13:14,660
So what we did is we used the dictionaries that were supplied to us which tell us in which row each

233

00:13:14,650  -->  00:13:18,000
player is sitting and in which column each year is sitting.

234

00:13:18,190  -->  00:13:24,620
And based on those dictionaries we were able to create this kind of approach where we use the name of

235

00:13:24,620  -->  00:13:29,830
the matrix and we're looking at and then we use the first dictionary to look up the player's row and

236

00:13:29,840  -->  00:13:36,220
we use the second dictionary to look up the year the column of the year or the years column that we're

237

00:13:36,230  -->  00:13:37,070
interested in.

238

00:13:37,340  -->  00:13:43,720
All right so that is a very kind of tricky approach I know but the same time it allowed us to practice

239

00:13:43,750  -->  00:13:49,900
with dictionaries and hopefully that shows the dishes aren't that complicated they're pretty straightforward

240

00:13:49,940  -->  00:13:51,190
and can be useful at times.

241

00:13:51,200  -->  00:13:54,290
And as you'll see throughout the section we'll be using them quite a lot.

242

00:13:54,620  -->  00:13:56,520
And that's sort of a series of Tauriel.

243

00:13:56,530  -->  00:14:02,920
I highly encourage you to play around with that and try to perhaps look up other players or maybe combinations

244

00:14:02,920  -->  00:14:08,870
of players in years and in different matrices just to get a grip on dictionaries and practice them because

245

00:14:08,870  -->  00:14:12,620
we will be using them in for the historians and that's for today.

246

00:14:12,620  -->  00:14:14,090
I look forward to seeing you next time.

247

00:14:14,090  -->  00:14:16,030
Until then happy coning
