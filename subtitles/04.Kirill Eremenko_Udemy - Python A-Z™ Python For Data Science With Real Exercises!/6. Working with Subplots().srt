1

00:00:05,930  -->  00:00:10,040
Welcome back to the Python programming course this is Carol or Menko as always.

2

00:00:10,080  -->  00:00:15,130
And I am super happy that we've gotten this far in this section of the course.

3

00:00:15,180  -->  00:00:21,660
We have already looked at the kernel density estimate Plaut that we've got over here which is very interesting

4

00:00:21,690  -->  00:00:23,820
to create something unusual.

5

00:00:24,030  -->  00:00:27,630
And today we're going to continue working with a few kernel as the estimates.

6

00:00:27,690  -->  00:00:33,300
But at the same time we're going to introduce a new concept we're going to talk about sub plots in Python

7

00:00:33,300  -->  00:00:33,660
.

8

00:00:33,660  -->  00:00:38,430
It's a function that allows you to create more sophisticated whistles or has to combine these allegations

9

00:00:38,520  -->  00:00:39,360
together.

10

00:00:39,540  -->  00:00:44,040
So let's see how subplots works in action.

11

00:00:44,040  -->  00:00:44,340
All right.

12

00:00:44,340  -->  00:00:51,540
So first thing I want to do is I'm going to create a new kernel as estimate using our seaborne library

13

00:00:51,540  -->  00:00:51,910
.

14

00:00:51,930  -->  00:01:01,770
So Katie Plaut by the way just a reminder we are using seaborne so seaborne was imported as import seaborne

15

00:01:02,100  -->  00:01:03,370
as S and S.

16

00:01:03,600  -->  00:01:08,800
And that's what allows us to create these beautiful visualizations.

17

00:01:08,820  -->  00:01:12,470
It's always good to refresh on what exactly we're using.

18

00:01:12,470  -->  00:01:17,160
So if I scroll up here you'll see that's our standard imports.

19

00:01:17,160  -->  00:01:20,590
So in fact might as well just copy them here.

20

00:01:20,620  -->  00:01:22,740
It never hurts to rerun them.

21

00:01:22,770  -->  00:01:24,110
Not that it changes anything.

22

00:01:24,120  -->  00:01:29,970
But if you're say jumping into the course at this part this tutorial then you'll definitely need to

23

00:01:29,970  -->  00:01:31,560
have these imports.

24

00:01:31,560  -->  00:01:35,160
So the go that's the imports we're using.

25

00:01:35,430  -->  00:01:38,920
So let's go ahead and create our kernel density estimate.

26

00:01:39,090  -->  00:01:46,750
so sns dot kde plot movies dot budget millions come to movies.

27

00:01:46,770  -->  00:01:49,650
Daut audience rating.

28

00:01:49,650  -->  00:01:51,510
All right so far on this.

29

00:01:51,510  -->  00:01:59,280
What does this current estimates show us whether the budget of the movie affects the rating that the

30

00:01:59,280  -->  00:02:00,360
audience gives it.

31

00:02:00,420  -->  00:02:07,810
So basically Is there any skew of this Alsation to the right or to the left or up or down.

32

00:02:07,950  -->  00:02:15,810
And so what we can see from here is that basically if you slice this viz. an audience rating of say

33

00:02:15,810  -->  00:02:25,170
40 you'll see that the budget millions is located somewhere or here mostly if you slice it at 60 then

34

00:02:25,170  -->  00:02:30,990
you can see that it does stretch out a bit more or if you slice it another way if you say for example

35

00:02:31,890  -->  00:02:39,210
let's take a budget millions and take a slice at $20000000 you can see that it's straighted rating audience

36

00:02:39,210  -->  00:02:42,860
ratings stretches all the way from 20 to nearly 100.

37

00:02:42,990  -->  00:02:49,320
But if you take budget millions and slice it at for example 60 you can see that the lower bound of the

38

00:02:49,320  -->  00:02:52,540
audience rating or the lower density is a bit higher.

39

00:02:52,560  -->  00:02:57,960
But also the higher density is a bit lower so the movies are more likely less likely to get ratings

40

00:02:57,960  -->  00:03:04,140
around 20 30 is also less likely to get ratings over 90 and closer to 100.

41

00:03:04,140  -->  00:03:06,200
Very interesting observation.

42

00:03:06,210  -->  00:03:08,730
So it kind of narrows down in both ways.

43

00:03:08,730  -->  00:03:11,190
As you go into the higher budgets of movies.

44

00:03:11,580  -->  00:03:17,780
One thing I wanted to change here is I wanted to change the style so this type in essence set disco

45

00:03:17,790  -->  00:03:21,650
style and here we're going to say dark.

46

00:03:21,810  -->  00:03:27,290
So if you're on that then we've gotten rid of that grid and it kind of looks a bit better.

47

00:03:27,360  -->  00:03:29,750
This particular chart looks better without the grid.

48

00:03:30,060  -->  00:03:36,480
And then what we want to do as well is we want to do the same thing but this time as you can imagine

49

00:03:36,480  -->  00:03:43,000
for critic rating serve her on that this is a bit more interesting.

50

00:03:43,140  -->  00:03:47,070
So you've got a chart so how do we read this.

51

00:03:47,070  -->  00:03:52,230
You can see that the critic rating even though it goes below zero here that is just because the way

52

00:03:52,230  -->  00:03:57,180
the kernel density estimate is constructed of course in reality creating doesn't go below zero.

53

00:03:57,450  -->  00:04:02,460
What it's showing us is that critique ratings are most concentrated here between the 20 and 40 mark

54

00:04:02,460  -->  00:04:08,730
and then they stretch out and if you take slices and different movie ratings or movie budgets you can

55

00:04:08,730  -->  00:04:14,850
see that as you go over a budget of 50 million they create the maximum critic rating drops quite substantially

56

00:04:15,330  -->  00:04:19,550
and it does pick up on the bottom as well so kind of similar observation to here.

57

00:04:19,680  -->  00:04:25,620
But as you can see the audience rating is a bit tighter here whereas a critic rating is spread out.

58

00:04:25,620  -->  00:04:30,760
And that's something we discussed that is closer to normal distribution the audience ratings closer

59

00:04:30,780  -->  00:04:37,350
to normal distribution whereas a critic rating is actually closer to a uniform distribution.

60

00:04:37,380  -->  00:04:39,090
So that's an interesting charge.

61

00:04:39,090  -->  00:04:46,080
You can also kind of observe it or analyze it by slicing by critic creating and observing how the budget

62

00:04:46,240  -->  00:04:46,670
is changed.

63

00:04:46,680  -->  00:04:52,970
So I'll let you do that and try to play around with that conceptually see if this is a charge you like

64

00:04:52,980  -->  00:04:55,280
it also is a matter of personal preference.

65

00:04:55,290  -->  00:05:03,050
Some people might like a resolution like this some people might enjoy it less because it isn't as straightforward

66

00:05:03,090  -->  00:05:05,490
for example as a scatterplot.

67

00:05:05,490  -->  00:05:12,030
So today what we're focusing on is not just analyzing or creating these realizations today we want to

68

00:05:12,030  -->  00:05:17,900
talk about the subplots function what exactly does it do and how do we use it.

69

00:05:18,040  -->  00:05:25,050
Well in order to call subplots we would we need to do is say for example say F and this is a coding

70

00:05:25,060  -->  00:05:28,420
convention that you will see quite a lot in Python code.

71

00:05:28,490  -->  00:05:35,070
F dot f my X and then he goes P.L. T Dot subplots.

72

00:05:35,520  -->  00:05:41,350
So subplots comes from my plot lib or pi plot which we're importing a specialty BLT called subplots

73

00:05:41,360  -->  00:05:41,600
.

74

00:05:41,740  -->  00:05:43,220
Here we're going to say one two.

75

00:05:43,320  -->  00:05:50,590
So if I run this you'll see right away what it does so it's saying one row two columns I can say one

76

00:05:50,590  -->  00:05:56,560
row three columns that will give me three shots it creates three empty chairs and say three rows three

77

00:05:56,560  -->  00:06:03,140
columns will create nine empty chairs that which we can then populating and say three to eight.

78

00:06:03,160  -->  00:06:05,060
Three call three rows two columns.

79

00:06:05,110  -->  00:06:08,060
So in either case we're going to say one row two columns.

80

00:06:08,070  -->  00:06:08,810
Why is that.

81

00:06:08,980  -->  00:06:09,940
Well you guessed it right.

82

00:06:09,940  -->  00:06:15,570
Would you want to do is we want to place this chart in here and this chart in here.

83

00:06:15,810  -->  00:06:19,630
And that's what we're going to be working on now.

84

00:06:19,620  -->  00:06:22,590
All right so there we go that's a that's a good start.

85

00:06:22,600  -->  00:06:26,620
So another parameter that is quite useful is big size.

86

00:06:26,990  -->  00:06:34,020
It's the size of the whole figure and you specify it and a tuple is say 12 for instance 6.

87

00:06:34,300  -->  00:06:36,760
And the first one is how long it is.

88

00:06:36,750  -->  00:06:39,030
The second parameter is how high it is.

89

00:06:39,460  -->  00:06:46,140
All right so now we want to just take these two beautiful beautiful Katy plots and put them in here

90

00:06:46,170  -->  00:06:46,540
.

91

00:06:46,930  -->  00:06:51,300
This is supposed to be OK to take this and put it in here.

92

00:06:51,810  -->  00:06:54,750
And so if I just run this nothing is going to happen.

93

00:06:54,750  -->  00:06:58,340
Nothing good because they're actually plotted on one chart.

94

00:06:58,600  -->  00:07:00,440
How do I control where they go.

95

00:07:00,630  -->  00:07:08,800
Well the way to control it is you take a x and then you always hear you say comma A-x which is actually

96

00:07:08,800  -->  00:07:14,510
a parameter that you can pass into Katie plot's or into other functions of Seaborn.

97

00:07:14,710  -->  00:07:21,120
And then you say X which is this X in fact just to make it easier to follow along with you get to rename

98

00:07:21,120  -->  00:07:28,340
as we say access here and say access and here we're going to say zero because it's.

99

00:07:28,870  -->  00:07:32,410
I'll explain why are we doing this in a second to just create this code.

100

00:07:32,670  -->  00:07:34,840
And here we can say one.

101

00:07:34,840  -->  00:07:36,550
So now they've been split.

102

00:07:36,610  -->  00:07:36,830
All right.

103

00:07:36,850  -->  00:07:37,780
So what happened here.

104

00:07:37,770  -->  00:07:39,420
Let's quickly analyze it.

105

00:07:39,430  -->  00:07:43,620
First of all we've never seen this before right so we've got one function on the right.

106

00:07:43,750  -->  00:07:47,570
Yes we understand how we calling a function we're one to these parameters.

107

00:07:47,590  -->  00:07:52,590
That's number of rows number of columns in fact you press shift tab and I'll show me a number of rows

108

00:07:52,600  -->  00:07:53,670
number of columns.

109

00:07:53,760  -->  00:07:58,060
Then Fig's size this and another parameter that you can pass to this function.

110

00:07:58,240  -->  00:08:04,390
It isn't specified here it's it's a bit tricky it's kind of like one of those parameters that you got

111

00:08:04,520  -->  00:08:07,720
you got to know about in order to pass it here.

112

00:08:07,930  -->  00:08:12,050
And what's the function returns is this.

113

00:08:12,060  -->  00:08:13,570
So this is the important part.

114

00:08:13,560  -->  00:08:21,540
So fig and X this function actually report returns two objects or turns a tuple of two objects.

115

00:08:21,630  -->  00:08:28,710
Fig is the well basically the chart that you created to figure and X is either a single x x or this

116

00:08:28,710  -->  00:08:31,190
is important part and I will reiterate this just now.

117

00:08:31,360  -->  00:08:37,450
It can be either a single axis object or an area of Access objects.

118

00:08:37,480  -->  00:08:39,610
If more than once a point was created.

119

00:08:39,900  -->  00:08:43,990
So the dimension of the result and area can be controlled if the squeeze Kure.

120

00:08:43,990  -->  00:08:44,850
See above.

121

00:08:44,860  -->  00:08:47,280
So we're not going to worry about the squeeze keyword.

122

00:08:47,350  -->  00:08:53,280
What this basically means is that we are reaching the function returns two values so f is the figure

123

00:08:53,300  -->  00:08:55,270
that's the whole object that we're working with.

124

00:08:55,330  -->  00:09:04,120
And then AXS is going to be and array specifying how it's how you axes these or how you can access each

125

00:09:04,120  -->  00:09:04,570
one of these.

126

00:09:04,570  -->  00:09:10,170
If I say access here you'll see that it's an array and it's got two parts to it.

127

00:09:10,170  -->  00:09:13,660
So this first bit is associated with the first shock.

128

00:09:13,770  -->  00:09:17,300
Second bit is associated with the second chart.

129

00:09:17,520  -->  00:09:21,760
So that's how we put each chart HKT plot on the associated chart.

130

00:09:21,770  -->  00:09:25,300
On the one we want so here is zero space for one.

131

00:09:25,300  -->  00:09:30,610
All right so another thing I wanted to show you and this is something I need to definitely we need to

132

00:09:30,610  -->  00:09:36,100
color off is that if for instance you said two two here you'll get an error.

133

00:09:36,250  -->  00:09:37,600
All right so why is that.

134

00:09:37,600  -->  00:09:40,870
Well the reason is let's just calm these out for now.

135

00:09:40,870  -->  00:09:44,040
If you say two to first of all I'm going to do that.

136

00:09:44,050  -->  00:09:50,680
So if you say two to now you've got four charts and as soon as you have a two dimensional number of

137

00:09:50,670  -->  00:09:57,280
charts or subplots are called subplots since you have like a matrix of subplots as long as it's not

138

00:09:57,390  -->  00:09:59,980
either just one row one column of them.

139

00:10:00,250  -->  00:10:02,720
Then this object has been returned.

140

00:10:02,740  -->  00:10:05,080
Access becomes a two dimensional area.

141

00:10:05,080  -->  00:10:10,330
So in this case if you want to place it let's say I want to place K-1 over here because it's not enough

142

00:10:10,330  -->  00:10:15,490
to say zero because what is that zero mean does that mean this chart on this chart or this chart which

143

00:10:15,490  -->  00:10:18,330
chart does it mean you've got to specify 0 0.

144

00:10:18,340  -->  00:10:21,120
And this is something that definitely can be a bit tricky.

145

00:10:21,150  -->  00:10:27,930
So you've got to always remember is it's a two dimensional set of subplots or a one dimensional set

146

00:10:27,930  -->  00:10:28,570
of subplots.

147

00:10:28,570  -->  00:10:35,880
So here if let's say just this video quickly and how as you move this kitty plot to this subplot What

148

00:10:35,880  -->  00:10:37,170
would you type in there.

149

00:10:37,590  -->  00:10:37,900
OK.

150

00:10:37,890  -->  00:10:38,620
One two three.

151

00:10:38,620  -->  00:10:45,870
I'm going to show you now so I would just basically say this is on row 0 but in column so rows 0 but

152

00:10:45,880  -->  00:10:47,500
in Column number 1.

153

00:10:47,530  -->  00:10:53,380
So here I replace that was 0 1 and now it's been moved over there so I can move it even further down

154

00:10:54,000  -->  00:10:55,090
1 1.

155

00:10:55,090  -->  00:10:55,730
So there we go.

156

00:10:55,750  -->  00:10:59,880
So and K-2 same thing I can say 1 0.

157

00:11:00,170  -->  00:11:01,900
That one has ended up over there.

158

00:11:02,130  -->  00:11:06,880
So that is how you control it when you have a two dimensional set of subplots.

159

00:11:06,880  -->  00:11:12,840
In our case it's a 1 2 and therefore now for on this card then I'll give you an error of course too

160

00:11:12,850  -->  00:11:15,250
many indices for an aere naturally.

161

00:11:15,280  -->  00:11:22,800
So here we're going to have say just 0 and 1 right because we only have a single row of these subplots

162

00:11:22,810  -->  00:11:23,200
.

163

00:11:23,190  -->  00:11:28,450
So that's a very important distinction to remember because it not only changes the number you put in

164

00:11:28,440  -->  00:11:32,740
actually changes the number of dimensions of the object and therefore you have to supply more indices

165

00:11:32,750  -->  00:11:33,150
.

166

00:11:33,550  -->  00:11:34,290
OK.

167

00:11:34,380  -->  00:11:35,410
What else can we do here.

168

00:11:35,430  -->  00:11:38,020
Well let's make these look a bit prettier.

169

00:11:38,010  -->  00:11:39,040
We're going to say K.

170

00:11:39,080  -->  00:11:46,170
One set Exel him he calls minus 20 to 1 succeed.

171

00:11:46,440  -->  00:11:50,170
So there's only to go all the way to 300 will just go to 160.

172

00:11:50,160  -->  00:11:51,290
Run that.

173

00:11:51,690  -->  00:11:55,810
So there you go you can see that this one its limit is from 1 to minus 20 to 60.

174

00:11:55,810  -->  00:11:58,230
This one's limit is still large.

175

00:11:58,240  -->  00:12:02,580
We can copy this line and create the same line for this second chart.

176

00:12:02,590  -->  00:12:07,410
So for k to but we're going to do that because we're going to just use a parameter.

177

00:12:07,410  -->  00:12:15,510
Here we're going to say Khama share X equals true so that they have the same x axis and that means the

178

00:12:15,510  -->  00:12:17,510
second will just be copied from the first one.

179

00:12:17,760  -->  00:12:19,320
So you can see now it's also 160.

180

00:12:19,340  -->  00:12:25,860
Now it's kind of like zoomed into the chart and the other thing we wanted to do is share.

181

00:12:26,050  -->  00:12:27,360
Why.

182

00:12:27,420  -->  00:12:33,190
Because right now they're not the same so that's minus 20 and that doesn't even say minus or any difference

183

00:12:33,220  -->  00:12:37,290
goes up to just 110 and goes up to 20 so it can be a bit confusing.

184

00:12:37,300  -->  00:12:38,370
They're not aligned.

185

00:12:38,690  -->  00:12:44,720
Sirius's share Weikel is true that's another prominent can pass and the ghost and now they're aligned

186

00:12:44,740  -->  00:12:50,640
and you can compare visually the two side by side you can see that audience rading more compact Kritik

187

00:12:50,640  -->  00:12:52,600
creating more spread out.

188

00:12:52,990  -->  00:12:56,560
And then we've got well we've already done pick sides actually.

189

00:12:56,800  -->  00:12:57,920
There it is.

190

00:12:57,970  -->  00:13:02,580
OK so that is how you work with subplots.

191

00:13:02,620  -->  00:13:04,390
It's a very very powerful tool.

192

00:13:04,380  -->  00:13:06,820
It's good to have practice with it.

193

00:13:06,820  -->  00:13:14,400
It's definitely a good idea to experiment a bit more so try to create a like a vertical subplot for

194

00:13:14,400  -->  00:13:20,620
example or create a subplot or applause with nine subplots and try to place these in different locations

195

00:13:20,620  -->  00:13:25,500
or maybe even add some more chars some more kid E-plus and populate them even if they're the same it

196

00:13:25,500  -->  00:13:26,040
doesn't matter.

197

00:13:26,070  -->  00:13:32,430
It's more about now practicing the subplots function because woofs subplots you can create some very

198

00:13:32,430  -->  00:13:37,610
interesting relations and subplots is often used to create some tricky realisations in Python.

199

00:13:37,750  -->  00:13:45,270
And moreover this tutorial about subplots is a stepping stone for us for when we talk more about how

200

00:13:45,280  -->  00:13:48,130
to create dashboards in Python.

201

00:13:48,250  -->  00:13:53,890
So it's a very valuable skill to have and we'll expand on and further down in this section of the course

202

00:13:53,880  -->  00:13:54,660
.

203

00:13:54,660  -->  00:13:58,980
Hope you have a chance to play around with that and I'll see you on the next tutorial.

204

00:13:59,020  -->  00:14:02,670
Until then happy coding.
