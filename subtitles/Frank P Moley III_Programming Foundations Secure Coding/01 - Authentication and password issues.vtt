WEBVTT
1
00:00:00.060 --> 00:00:03.090
- Authentication is not an easy operation

2
00:00:03.090 --> 00:00:06.080
when it comes to modern software.

3
00:00:06.080 --> 00:00:10.050
On paper, it looks very straightforward.

4
00:00:10.050 --> 00:00:13.050
User comes to your site, enters their username

5
00:00:13.050 --> 00:00:16.060
and password, and clicks submit.

6
00:00:16.060 --> 00:00:20.000
You then evaluate the username and password

7
00:00:20.000 --> 00:00:23.000
and determine if this is indeed the correct person

8
00:00:23.000 --> 00:00:25.010
and go from there.

9
00:00:25.010 --> 00:00:26.060
Simple, right?

10
00:00:26.060 --> 00:00:29.040
Well, not so fast.

11
00:00:29.040 --> 00:00:34.050
Authentication itself has many security implications.

12
00:00:34.050 --> 00:00:37.030
One such attack is an enumeration attack,

13
00:00:37.030 --> 00:00:39.070
which we've already discussed.

14
00:00:39.070 --> 00:00:41.090
If you provide separate messages

15
00:00:41.090 --> 00:00:44.070
when a wrong password is entered,

16
00:00:44.070 --> 00:00:48.070
versus when an unknown user enters your system,

17
00:00:48.070 --> 00:00:51.020
you are telling an attacker if they have

18
00:00:51.020 --> 00:00:52.070
the username correct or not.

19
00:00:52.070 --> 00:00:57.050
So, the key here is keep the messaging consistent.

20
00:00:57.050 --> 00:01:00.050
Another issue to address is the actual time

21
00:01:00.050 --> 00:01:03.050
it takes to perform authentication.

22
00:01:03.050 --> 00:01:07.090
This is a case where faster is not better.

23
00:01:07.090 --> 00:01:10.060
We're going to talk about cryptographic algorithms

24
00:01:10.060 --> 00:01:14.050
in a bit, but know that some hashing algorithms

25
00:01:14.050 --> 00:01:16.090
are slower than others, and when it

26
00:01:16.090 --> 00:01:20.080
comes to authentication, slow is not a bad thing.

27
00:01:20.080 --> 00:01:24.020
Now, when I say slow, we're talking about hundreds

28
00:01:24.020 --> 00:01:28.050
of milliseconds slower, not seconds or minutes.

29
00:01:28.050 --> 00:01:31.070
The reason for this is because a faster algorithm

30
00:01:31.070 --> 00:01:34.080
gives an attacker more operations

31
00:01:34.080 --> 00:01:39.040
per unit of time to brute force a password,

32
00:01:39.040 --> 00:01:45.010
so the key here is use a good password hashing algorithm.

33
00:01:45.010 --> 00:01:49.010
Another issue that just makes the previous two worse

34
00:01:49.010 --> 00:01:53.080
is simply allowing password brute force attacks.

35
00:01:53.080 --> 00:01:56.060
If you do not provide a maximum number

36
00:01:56.060 --> 00:01:58.070
of bad password attempts before

37
00:01:58.070 --> 00:02:02.000
you institute a lockout procedure,

38
00:02:02.000 --> 00:02:05.090
you're setting your site up to be attacked.

39
00:02:05.090 --> 00:02:09.060
Not only will this put your customer data at risk,

40
00:02:09.060 --> 00:02:12.070
but you will also be allowing more load

41
00:02:12.070 --> 00:02:16.050
on your system than you even should be.

42
00:02:16.050 --> 00:02:19.060
The key, here, is having a maximum number

43
00:02:19.060 --> 00:02:22.060
of incorrect attempts and storing

44
00:02:22.060 --> 00:02:25.090
those failed attempts in a database.

45
00:02:25.090 --> 00:02:31.010
Storing this data in a session is not sufficient.

46
00:02:31.010 --> 00:02:35.070
So, I want to point out a couple other issues really quickly,

47
00:02:35.070 --> 00:02:40.010
because in all honesty, we could go on for days.

48
00:02:40.010 --> 00:02:43.060
Never stores your customer's password,

49
00:02:43.060 --> 00:02:47.080
encrypted, or worse yet, in plain text.

50
00:02:47.080 --> 00:02:51.020
You have zero reason to know, or be able

51
00:02:51.020 --> 00:02:54.070
to identify a customer's password.

52
00:02:54.070 --> 00:02:58.050
If you can do so, an attacker can as well,

53
00:02:58.050 --> 00:03:04.010
if they gain access, so only hash passwords.

54
00:03:04.010 --> 00:03:06.050
Also, leverage short-lived

55
00:03:06.050 --> 00:03:10.020
unique links for passwords resets.

56
00:03:10.020 --> 00:03:14.010
Password reset functionality should provide unique tokens

57
00:03:14.010 --> 00:03:18.090
to customers through their verified email address.

58
00:03:18.090 --> 00:03:20.050
You should never provide them

59
00:03:20.050 --> 00:03:24.060
a password in a plain text email.

60
00:03:24.060 --> 00:03:28.070
You should also never allow anyone from your company

61
00:03:28.070 --> 00:03:34.010
to manipulate their passwords or impersonate the customer.

62
00:03:34.010 --> 00:03:38.040
Also, like before, consider how you respond

63
00:03:38.040 --> 00:03:41.040
to password changes on screen.

64
00:03:41.040 --> 00:03:45.030
If you know the user, is the messaging the same,

65
00:03:45.030 --> 00:03:49.000
or different, than if you don't know them?

66
00:03:49.000 --> 00:03:51.090
A final point that I want to bring up about authentication

67
00:03:51.090 --> 00:03:56.080
and passwords is consider the complexity.

68
00:03:56.080 --> 00:04:00.080
You would be better served to only use lowercase letters

69
00:04:00.080 --> 00:04:03.070
in a password of sufficient size,

70
00:04:03.070 --> 00:04:07.060
than a short password with complex rules.

71
00:04:07.060 --> 00:04:11.020
The first is easier for the user to memorize,

72
00:04:11.020 --> 00:04:14.050
while the latter is next to impossible.

73
00:04:14.050 --> 00:04:16.080
While I won't argue that special characters

74
00:04:16.080 --> 00:04:21.020
and uppercase letters add to the search space,

75
00:04:21.020 --> 00:04:25.080
I will state that an all lowercase, 29 character,

76
00:04:25.080 --> 00:04:29.000
dictionary word based password would currently

77
00:04:29.000 --> 00:04:32.090
take over a trillion years to crack randomly.

78
00:04:32.090 --> 00:04:35.040
An eight character password, with symbols,

79
00:04:35.040 --> 00:04:39.080
numbers, and mixed case, can take minutes to guess.

80
00:04:39.080 --> 00:04:42.010
Authentication issues can arise

81
00:04:42.010 --> 00:04:44.070
if you don't take this topic seriously,

82
00:04:44.070 --> 00:04:48.080
which, believe it or not, can be the case.

83
00:04:48.080 --> 00:04:51.060
I urge you to really think about authentication

84
00:04:51.060 --> 00:04:54.020
and passwords the next time you interact

85
00:04:54.020 --> 00:04:57.000
with that part of your system.

