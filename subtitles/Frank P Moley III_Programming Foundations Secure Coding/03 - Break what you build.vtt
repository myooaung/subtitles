WEBVTT
1
00:00:01.010 --> 00:00:04.040
- As developers, our general strength lies

2
00:00:04.040 --> 00:00:06.080
in building systems.

3
00:00:06.080 --> 00:00:10.010
A huge part of the problem in secure coding

4
00:00:10.010 --> 00:00:12.020
is that we are builders.

5
00:00:12.020 --> 00:00:14.070
So we need to change our mindset a little

6
00:00:14.070 --> 00:00:19.060
in order to truly be effective as a secure coder.

7
00:00:19.060 --> 00:00:23.060
Developers interested in proving their security footprint

8
00:00:23.060 --> 00:00:27.080
need to develop the skill of breaking code.

9
00:00:27.080 --> 00:00:29.030
Now I'm not going to argue

10
00:00:29.030 --> 00:00:32.070
that you should be an expert penetration tester,

11
00:00:32.070 --> 00:00:36.040
but there is real value in learning the basics

12
00:00:36.040 --> 00:00:39.020
of attacking systems.

13
00:00:39.020 --> 00:00:41.050
Now some developers may want to go deep

14
00:00:41.050 --> 00:00:44.030
and learn how to write exploit attacks.

15
00:00:44.030 --> 00:00:47.030
And while this can be an amazing skill,

16
00:00:47.030 --> 00:00:50.050
it's over the top of what you really need to do

17
00:00:50.050 --> 00:00:53.000
in my opinion.

18
00:00:53.000 --> 00:00:56.040
The fact is that there are several really great tools

19
00:00:56.040 --> 00:01:00.060
on the market that allow you to attack your code

20
00:01:00.060 --> 00:01:03.050
without a lot of extended learning.

21
00:01:03.050 --> 00:01:07.040
The value of using these tools is that you can start looking

22
00:01:07.040 --> 00:01:10.080
at actual exploits in your code.

23
00:01:10.080 --> 00:01:12.070
By breaking your code,

24
00:01:12.070 --> 00:01:17.060
you can gain many valuable insights into your application.

25
00:01:17.060 --> 00:01:21.050
You will see how data is accessed and used.

26
00:01:21.050 --> 00:01:24.000
You will see how logging output is generated

27
00:01:24.000 --> 00:01:26.040
and eventually consumed.

28
00:01:26.040 --> 00:01:30.040
It becomes a natural learning exercise that will increase

29
00:01:30.040 --> 00:01:33.060
your knowledge of the code base as a whole.

30
00:01:33.060 --> 00:01:37.040
One of the biggest benefits of learning to break software

31
00:01:37.040 --> 00:01:41.030
is that you get to interact with security professionals.

32
00:01:41.030 --> 00:01:42.080
This is powerful

33
00:01:42.080 --> 00:01:46.010
when you consider how important collaboration is

34
00:01:46.010 --> 00:01:48.030
for a development team.

35
00:01:48.030 --> 00:01:51.010
Constructive collaboration with team members

36
00:01:51.010 --> 00:01:53.070
can never be discounted.

37
00:01:53.070 --> 00:01:57.010
Constructive collaboration with security teams

38
00:01:57.010 --> 00:01:59.030
can be even more valuable

39
00:01:59.030 --> 00:02:02.010
for today's development teams.

40
00:02:02.010 --> 00:02:07.000
This concept of DevSecOps really is about bringing security

41
00:02:07.000 --> 00:02:09.070
into your development process

42
00:02:09.070 --> 00:02:12.090
the same way that we brought operations

43
00:02:12.090 --> 00:02:17.000
into our processes for DevOps.

44
00:02:17.000 --> 00:02:20.090
Everyone on the team learns and becomes responsible

45
00:02:20.090 --> 00:02:25.050
for the security footprint of the application.

46
00:02:25.050 --> 00:02:28.070
Once developers understand how to break software

47
00:02:28.070 --> 00:02:31.080
and start to have more constructive conversations

48
00:02:31.080 --> 00:02:33.080
with security professionals,

49
00:02:33.080 --> 00:02:37.040
the entire team benefits.

50
00:02:37.040 --> 00:02:40.080
You will hopefully see faster turnaround on bug fixes

51
00:02:40.080 --> 00:02:46.030
and better testing as the knowledge base grows on your team.

52
00:02:46.030 --> 00:02:50.010
Another advantage from learning to break software

53
00:02:50.010 --> 00:02:53.030
is that if you know how to break software,

54
00:02:53.030 --> 00:02:56.000
you are prepared to fix your software

55
00:02:56.000 --> 00:03:01.020
or better yet prevent security defects to begin with.

56
00:03:01.020 --> 00:03:03.050
This skill of breaking software

57
00:03:03.050 --> 00:03:07.070
can create a culture of secure coding.

58
00:03:07.070 --> 00:03:09.090
Now I encourage you as a developer

59
00:03:09.090 --> 00:03:12.090
to take time to learn the basics

60
00:03:12.090 --> 00:03:15.080
and you will find amazing results

61
00:03:15.080 --> 00:03:21.000
in how you and your team approach security.

