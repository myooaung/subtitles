WEBVTT
1
00:00:00.006 --> 00:00:01.009
- [Instructor] Within Spring Batch,

2
00:00:01.009 --> 00:00:04.004
several out of the box transition elements,

3
00:00:04.004 --> 00:00:06.006
allowed jobs to define steps,

4
00:00:06.006 --> 00:00:09.003
that are conditionally executed based upon,

5
00:00:09.003 --> 00:00:12.003
the previous steps exit status.

6
00:00:12.003 --> 00:00:13.004
At a high level,

7
00:00:13.004 --> 00:00:16.008
you can think of this as including an if statement,

8
00:00:16.008 --> 00:00:19.009
in our batch job that allows us to choose,

9
00:00:19.009 --> 00:00:24.000
between several paths the job may take.

10
00:00:24.000 --> 00:00:26.007
To help us explore conditional flows,

11
00:00:26.007 --> 00:00:29.004
we're going to add another step,

12
00:00:29.004 --> 00:00:33.000
within our delivery jobs configuration.

13
00:00:33.000 --> 00:00:36.006
This will bring our total number of steps to four.

14
00:00:36.006 --> 00:00:42.007
So this step is going to allow us to store the package,

15
00:00:42.007 --> 00:00:48.001
in the event that we cannot locate the customer's address.

16
00:00:48.001 --> 00:00:51.003
So I'm just going to copy one of our other steps

17
00:00:51.003 --> 00:00:55.006
and then I'm going to rename the method,

18
00:00:55.006 --> 00:01:01.008
that will create our step being to the storePackageStep.

19
00:01:01.008 --> 00:01:03.005
And then we'll need to navigate,

20
00:01:03.005 --> 00:01:06.003
into our step builder configuration

21
00:01:06.003 --> 00:01:11.006
and change this to the storePackageStep.

22
00:01:11.006 --> 00:01:14.007
And then also inside of our tasks GLUT,

23
00:01:14.007 --> 00:01:18.001
we'll want to adjust our console output

24
00:01:18.001 --> 00:01:20.009
to indicate we're storing the package.

25
00:01:20.009 --> 00:01:24.007
So we'll say storing the package,

26
00:01:24.007 --> 00:01:30.005
while the customer address is located.

27
00:01:30.005 --> 00:01:33.005
Okay, so we have this new step,

28
00:01:33.005 --> 00:01:35.006
it's only going to be executed,

29
00:01:35.006 --> 00:01:38.007
when we get lost finding the customer address.

30
00:01:38.007 --> 00:01:42.001
So that sounds like conditional logic to me.

31
00:01:42.001 --> 00:01:46.001
Let's now navigate to our job configuration

32
00:01:46.001 --> 00:01:50.000
to include this conditional logic.

33
00:01:50.000 --> 00:01:52.006
So, we know that we want to include,

34
00:01:52.006 --> 00:01:56.001
this logic after the drive to address step.

35
00:01:56.001 --> 00:01:59.003
So at that point in our job configuration,

36
00:01:59.003 --> 00:02:01.009
we're going to use the on method

37
00:02:01.009 --> 00:02:05.007
and we're going to specify the pattern failed.

38
00:02:05.007 --> 00:02:08.008
So if the drive to address step,

39
00:02:08.008 --> 00:02:11.009
has an exit status of failed,

40
00:02:11.009 --> 00:02:15.009
then we would like the job execution

41
00:02:15.009 --> 00:02:19.005
to transition to the StorePackageStep.

42
00:02:19.005 --> 00:02:25.001
Okay, so now that we have configured the failed condition,

43
00:02:25.001 --> 00:02:30.006
we need to specify what to do if it completes successfully.

44
00:02:30.006 --> 00:02:35.001
So we're going to use the from method.

45
00:02:35.001 --> 00:02:39.003
And we'll specify that from the drive to address step.

46
00:02:39.003 --> 00:02:44.000
If we have any other exit status then failed.

47
00:02:44.000 --> 00:02:47.006
And we specify that by using the asterisk pattern,

48
00:02:47.006 --> 00:02:51.006
then we would like the execution of the job

49
00:02:51.006 --> 00:02:56.000
to transition to the givePackageToCustomerStep.

50
00:02:56.000 --> 00:02:58.002
Because, we found their address

51
00:02:58.002 --> 00:03:01.000
and now we're giving them their item.

52
00:03:01.000 --> 00:03:04.000
Because we now have that configuration in place,

53
00:03:04.000 --> 00:03:06.007
we can take out this next transition.

54
00:03:06.007 --> 00:03:11.002
And then we need to add the end method,

55
00:03:11.002 --> 00:03:15.007
in order to complete our jobs configuration.

56
00:03:15.007 --> 00:03:18.003
So we can go ahead and save that.

57
00:03:18.003 --> 00:03:24.004
And let's just take a quick look at the job configuration.

58
00:03:24.004 --> 00:03:27.007
So, here is our conditional,

59
00:03:27.007 --> 00:03:29.004
where basically we're determining,

60
00:03:29.004 --> 00:03:32.007
if we failed we execute the storePackageStep.

61
00:03:32.007 --> 00:03:37.005
And if we did not fail, we give the package to the customer.

62
00:03:37.005 --> 00:03:39.006
If you're having trouble reading the logic,

63
00:03:39.006 --> 00:03:42.001
one helpful way to interpret it,

64
00:03:42.001 --> 00:03:47.008
is to consider the from transition as an else if

65
00:03:47.008 --> 00:03:52.002
and the on transition as an equal statement,

66
00:03:52.002 --> 00:03:55.002
and to as a then statement.

67
00:03:55.002 --> 00:03:58.003
So, here we will say,

68
00:03:58.003 --> 00:04:02.005
else if the driveToAddressStep is equal

69
00:04:02.005 --> 00:04:05.001
to anything other than failed,

70
00:04:05.001 --> 00:04:08.004
then give the package to the customer.

71
00:04:08.004 --> 00:04:12.004
It's just a helpful way to read this configuration.

72
00:04:12.004 --> 00:04:16.001
Okay, now let's configure our job to fail.

73
00:04:16.001 --> 00:04:21.009
I'm going to switch the GOT LOST boolean over to true.

74
00:04:21.009 --> 00:04:25.001
And then I'm going to navigate over to the console,

75
00:04:25.001 --> 00:04:29.000
where I will run our delivery job.

76
00:04:29.000 --> 00:04:32.006
And the job will build and then once built,

77
00:04:32.006 --> 00:04:37.008
it will kick off.

78
00:04:37.008 --> 00:04:41.006
Okay, so here we can see that we got lost

79
00:04:41.006 --> 00:04:43.009
and our job failed.

80
00:04:43.009 --> 00:04:46.008
And then if we take a look at the logic,

81
00:04:46.008 --> 00:04:51.003
you're going to see that we stored the package,

82
00:04:51.003 --> 00:04:54.003
while the customer address is located.

83
00:04:54.003 --> 00:04:55.006
Okay, so we were able

84
00:04:55.006 --> 00:05:00.002
to execute our custom job logic for when we failed,

85
00:05:00.002 --> 00:05:02.007
the drive to address step.

86
00:05:02.007 --> 00:05:07.006
Now let's go and we'll flip the job over

87
00:05:07.006 --> 00:05:12.002
to execute the successful condition.

88
00:05:12.002 --> 00:05:14.004
And in this case, we want to give the package

89
00:05:14.004 --> 00:05:15.009
to the customer.

90
00:05:15.009 --> 00:05:19.004
So we'll set GOT LOST to false.

91
00:05:19.004 --> 00:05:21.003
And now the other thing we'll need to do,

92
00:05:21.003 --> 00:05:25.000
is clear out our job metadata

93
00:05:25.000 --> 00:05:30.005
because we are running the same job instance over.

94
00:05:30.005 --> 00:05:33.002
So a quick way to get past that,

95
00:05:33.002 --> 00:05:36.002
is to just quickly drop all the tables.

96
00:05:36.002 --> 00:05:38.009
Obviously, you do not want to do that,

97
00:05:38.009 --> 00:05:41.001
within your production environment,

98
00:05:41.001 --> 00:05:44.003
that would not be advisable.

99
00:05:44.003 --> 00:05:49.001
So we can go ahead and drop our tables.

100
00:05:49.001 --> 00:05:52.001
And then once all the tables are dropped,

101
00:05:52.001 --> 00:05:56.002
and you can see there's a little bit of an order to it.

102
00:05:56.002 --> 00:06:00.005
We're good to go ahead and run our new job.

103
00:06:00.005 --> 00:06:04.009
So let's clear the console.

104
00:06:04.009 --> 00:06:08.006
And then we're going to run the job again.

105
00:06:08.006 --> 00:06:14.004
And this time we will execute our success condition.

106
00:06:14.004 --> 00:06:17.002
Okay, so here we can see,

107
00:06:17.002 --> 00:06:20.000
that we started delivering the shoes.

108
00:06:20.000 --> 00:06:23.008
And then we successfully arrived at the address,

109
00:06:23.008 --> 00:06:27.001
and then we gave the package to the customer.

110
00:06:27.001 --> 00:06:29.007
Using the transition elements in Spring Batch,

111
00:06:29.007 --> 00:06:32.001
we were able to build a conditional job,

112
00:06:32.001 --> 00:06:34.009
that changed its flow dynamically depending,

113
00:06:34.009 --> 00:06:38.004
upon the exit status of subsequent steps.

114
00:06:38.004 --> 00:06:39.009
This is an important feature

115
00:06:39.009 --> 00:06:41.008
of Spring Batch because it allows us

116
00:06:41.008 --> 00:06:43.008
to construct complex jobs,

117
00:06:43.008 --> 00:06:48.000
that can satisfy more complicated batch requirements.

