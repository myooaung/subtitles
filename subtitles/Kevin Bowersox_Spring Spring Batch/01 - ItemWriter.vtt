WEBVTT
1
00:00:00.005 --> 00:00:02.005
- [Instructor] During chunk-based processing

2
00:00:02.005 --> 00:00:05.001
an ItemWriter is used to write items

3
00:00:05.001 --> 00:00:09.008
the job has read and processed to a data store.

4
00:00:09.008 --> 00:00:12.009
Spring Batch provides the ItemWriter interface

5
00:00:12.009 --> 00:00:15.007
and several out of the box implementations

6
00:00:15.007 --> 00:00:18.008
for common data stores like relational databases,

7
00:00:18.008 --> 00:00:21.008
flat files, or Kafka topics.

8
00:00:21.008 --> 00:00:24.005
A key point to remember about ItemWriters

9
00:00:24.005 --> 00:00:28.009
is multiple items are written as chunks to the data store

10
00:00:28.009 --> 00:00:32.007
as opposed to writing a single item at a time.

11
00:00:32.007 --> 00:00:34.004
The number of items written

12
00:00:34.004 --> 00:00:36.003
is determined by the chunk size,

13
00:00:36.003 --> 00:00:40.000
which helps keep our batch processing efficient.

14
00:00:40.000 --> 00:00:43.001
Let's take a quick at the ItemWriters available

15
00:00:43.001 --> 00:00:45.002
within the framework.

16
00:00:45.002 --> 00:00:48.000
Here's a list of some of the ItemWriters made available

17
00:00:48.000 --> 00:00:49.004
by the framework.

18
00:00:49.004 --> 00:00:51.009
If you are using one of these technologies,

19
00:00:51.009 --> 00:00:54.000
you will not need to write any custom code

20
00:00:54.000 --> 00:00:56.004
to write items to that data store.

21
00:00:56.004 --> 00:00:59.001
Simply leverage the out-of-the-box components

22
00:00:59.001 --> 00:01:01.009
and just provide some simple configurations

23
00:01:01.009 --> 00:01:03.007
and you're ready to go.

24
00:01:03.007 --> 00:01:04.009
Let's get hands on

25
00:01:04.009 --> 00:01:08.000
and see a few of these ItemWriters in action.

