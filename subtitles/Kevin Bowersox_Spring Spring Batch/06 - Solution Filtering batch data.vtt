WEBVTT
1
00:00:00.000 --> 00:00:05.006
(bright upbeat music)

2
00:00:05.006 --> 00:00:06.009
- [Instructor] So let's take a look

3
00:00:06.009 --> 00:00:10.000
at one solution to the challenge.

4
00:00:10.000 --> 00:00:12.004
I was able to solve the challenge

5
00:00:12.004 --> 00:00:16.008
by creating a new item processor.

6
00:00:16.008 --> 00:00:21.000
So I'm just going to open the new dialog, create a new class

7
00:00:21.000 --> 00:00:23.004
and I'm going to name this class

8
00:00:23.004 --> 00:00:27.003
free shipping item processor.

9
00:00:27.003 --> 00:00:29.003
And then this class is going

10
00:00:29.003 --> 00:00:34.009
to implement spring batches item processor interface.

11
00:00:34.009 --> 00:00:36.008
And within that interface

12
00:00:36.008 --> 00:00:39.006
we can supply two type arguments.

13
00:00:39.006 --> 00:00:41.005
Now this part is a little bit tricky.

14
00:00:41.005 --> 00:00:45.000
We're going to make this the last item processor

15
00:00:45.000 --> 00:00:46.009
within our chain.

16
00:00:46.009 --> 00:00:50.007
So it's actually going to receive a tracked order

17
00:00:50.007 --> 00:00:54.005
as input and then it's going to output,

18
00:00:54.005 --> 00:00:57.002
a tracked order as well.

19
00:00:57.002 --> 00:01:00.001
So once we specify those generics

20
00:01:00.001 --> 00:01:01.009
we can go ahead and hit finish.

21
00:01:01.009 --> 00:01:06.003
And here we see our new item processor implementation

22
00:01:06.003 --> 00:01:09.006
is created and we just need to provide

23
00:01:09.006 --> 00:01:13.006
some logic within this class that's going

24
00:01:13.006 --> 00:01:17.004
to set the free shipping boolean

25
00:01:17.004 --> 00:01:20.004
for those orders that do qualify.

26
00:01:20.004 --> 00:01:23.009
So the way I handled that, I got the cost

27
00:01:23.009 --> 00:01:29.000
of the tracked order and I compared that to,

28
00:01:29.000 --> 00:01:34.005
a new big decimal with a value of 80

29
00:01:34.005 --> 00:01:36.007
and once I've done that comparison

30
00:01:36.007 --> 00:01:39.005
I just checked to see if it's equal to one,

31
00:01:39.005 --> 00:01:44.001
which would indicate that the order is over $80.

32
00:01:44.001 --> 00:01:46.004
And in that case I want to go ahead

33
00:01:46.004 --> 00:01:52.008
and set the free shipping indicator on this tracked order.

34
00:01:52.008 --> 00:01:58.001
So I'll set that to true, and then for those items

35
00:01:58.001 --> 00:02:00.005
that do not satisfy the criteria

36
00:02:00.005 --> 00:02:05.007
I can set the free shipping indicator to false.

37
00:02:05.007 --> 00:02:08.009
And then this next part is going to allow us

38
00:02:08.009 --> 00:02:12.004
to filter out those items

39
00:02:12.004 --> 00:02:15.007
that do not qualify for free shipping.

40
00:02:15.007 --> 00:02:20.002
So we can check the free shipping boolean

41
00:02:20.002 --> 00:02:23.005
and if the boolean is true,

42
00:02:23.005 --> 00:02:25.000
which indicates the item does qualify

43
00:02:25.000 --> 00:02:28.006
for free shipping ,we'll return it.

44
00:02:28.006 --> 00:02:31.009
Otherwise we're going to return null.

45
00:02:31.009 --> 00:02:34.008
So returning null from an item processor

46
00:02:34.008 --> 00:02:37.005
is pretty much the same as filtering

47
00:02:37.005 --> 00:02:42.009
and using that approach we're able to remove those orders

48
00:02:42.009 --> 00:02:46.005
which are under our free shipping threshold.

49
00:02:46.005 --> 00:02:51.004
Okay, so now we have the free shipping item processor,

50
00:02:51.004 --> 00:02:57.001
it's time to head back over to our job configuration

51
00:02:57.001 --> 00:03:00.004
and what we're going to do, I'm just going to copy

52
00:03:00.004 --> 00:03:04.000
one of our existing bean methods,

53
00:03:04.000 --> 00:03:10.007
and then I'm going to create our free shipping processor.

54
00:03:10.007 --> 00:03:16.005
I'll change the generic typing on that processor.

55
00:03:16.005 --> 00:03:20.003
So then I'll go ahead and I can change the name

56
00:03:20.003 --> 00:03:24.008
of this method to free shipping item processor.

57
00:03:24.008 --> 00:03:28.008
And then we're just going to go ahead

58
00:03:28.008 --> 00:03:30.009
and within the body of that method

59
00:03:30.009 --> 00:03:36.001
we're going to return a new free shipping

60
00:03:36.001 --> 00:03:39.002
item processor, Okay?

61
00:03:39.002 --> 00:03:43.003
Now that we have defined our free shipping item processor

62
00:03:43.003 --> 00:03:49.000
as a bean we can simply add it to the delegates

63
00:03:49.000 --> 00:03:52.006
that are specified within our composite item writer.

64
00:03:52.006 --> 00:03:55.005
So here I'll just call the free shipping item

65
00:03:55.005 --> 00:03:58.007
processor method that will cause that bean

66
00:03:58.007 --> 00:04:00.008
to be registered as one of the delegates

67
00:04:00.008 --> 00:04:03.002
in the composite item processor,

68
00:04:03.002 --> 00:04:04.002
and that will cause

69
00:04:04.002 --> 00:04:07.008
all three of these processors to execute.

70
00:04:07.008 --> 00:04:09.008
Now if we save everything,

71
00:04:09.008 --> 00:04:12.008
we can head over to our console

72
00:04:12.008 --> 00:04:14.003
and we're going to go ahead

73
00:04:14.003 --> 00:04:16.008
and kick off the job.

74
00:04:16.008 --> 00:04:23.006
And once the project builds, our job will launch.

75
00:04:23.006 --> 00:04:26.008
Okay, we can see that our job has completed.

76
00:04:26.008 --> 00:04:29.004
Let's go check the output of our job.

77
00:04:29.004 --> 00:04:32.008
So I'm going to head into my data directory.

78
00:04:32.008 --> 00:04:36.002
And we should have adjacent file waiting for us.

79
00:04:36.002 --> 00:04:40.000
And here you can see that only one order

80
00:04:40.000 --> 00:04:45.001
came from a government email that was over $85

81
00:04:45.001 --> 00:04:50.009
and that is the only order that qualified for free shipping.

82
00:04:50.009 --> 00:04:53.005
So that was my solution to the challenge.

83
00:04:53.005 --> 00:04:57.001
I hope you were able to solve it as well.

84
00:04:57.001 --> 00:04:58.006
And it was a good example

85
00:04:58.006 --> 00:05:00.007
of how we can use item processors

86
00:05:00.007 --> 00:05:04.004
as well as composite item processors

87
00:05:04.004 --> 00:05:09.000
to introduce a lot of logic into our batch jobs.

