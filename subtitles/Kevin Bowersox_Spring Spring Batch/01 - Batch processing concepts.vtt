WEBVTT
1
00:00:00.005 --> 00:00:02.006
- [Narrator] Before diving in to Spring Batch.

2
00:00:02.006 --> 00:00:06.001
Let's review some of the basics of batch processing.

3
00:00:06.001 --> 00:00:08.004
We'll talk about what batch processing is.

4
00:00:08.004 --> 00:00:09.007
It's characteristics.

5
00:00:09.007 --> 00:00:12.007
And discuss some examples.

6
00:00:12.007 --> 00:00:14.009
If you ask most people to describe their

7
00:00:14.009 --> 00:00:17.006
company's payroll system, they will most likely

8
00:00:17.006 --> 00:00:20.005
describe something like the image we see here.

9
00:00:20.005 --> 00:00:23.002
These users are accustom to interacting

10
00:00:23.002 --> 00:00:25.003
with the user interface that accepts their

11
00:00:25.003 --> 00:00:28.004
time entries in real time.

12
00:00:28.004 --> 00:00:30.008
More technical individuals may describe

13
00:00:30.008 --> 00:00:33.000
entering their time through a browser based

14
00:00:33.000 --> 00:00:35.008
web application that stores their entries

15
00:00:35.008 --> 00:00:37.008
in to a database.

16
00:00:37.008 --> 00:00:39.004
What people forget to mention,

17
00:00:39.004 --> 00:00:41.008
is the Batch Job that runs periodically

18
00:00:41.008 --> 00:00:44.001
behind the scenes to process their

19
00:00:44.001 --> 00:00:46.003
bi-weekly or monthly time sheets

20
00:00:46.003 --> 00:00:48.007
allowing them to get paid.

21
00:00:48.007 --> 00:00:50.008
This behind the scenes process is

22
00:00:50.008 --> 00:00:54.002
essential for ensuring time entries are processed.

23
00:00:54.002 --> 00:00:56.007
And their wages are ultimately deposited

24
00:00:56.007 --> 00:00:58.008
in to their bank accounts.

25
00:00:58.008 --> 00:01:02.001
Many industries execute these background processes

26
00:01:02.001 --> 00:01:05.002
to complete essential business operations such as,

27
00:01:05.002 --> 00:01:09.003
billing, transactions, statements and reporting.

28
00:01:09.003 --> 00:01:12.002
In this course we will dive in to how to build

29
00:01:12.002 --> 00:01:17.008
similar batch processes with Spring Batch on the JBM.

30
00:01:17.008 --> 00:01:20.006
Batch processing has some key characteristics

31
00:01:20.006 --> 00:01:22.007
that set it apart from other types

32
00:01:22.007 --> 00:01:24.004
of technical solutions.

33
00:01:24.004 --> 00:01:27.009
Such as, web or desktop applications.

34
00:01:27.009 --> 00:01:30.006
Unlike a web or desktop application,

35
00:01:30.006 --> 00:01:33.006
there is no human interaction with a batch job.

36
00:01:33.006 --> 00:01:35.003
So there's no GUI.

37
00:01:35.003 --> 00:01:38.000
Instead, they run behind the scenes on their

38
00:01:38.000 --> 00:01:41.004
own as a process without interruption.

39
00:01:41.004 --> 00:01:43.009
Batch jobs follow a typical pattern.

40
00:01:43.009 --> 00:01:46.008
They consist of reading from a fixed data set,

41
00:01:46.008 --> 00:01:48.001
like our time entries.

42
00:01:48.001 --> 00:01:51.002
And then processing each item in the data set

43
00:01:51.002 --> 00:01:53.006
until it reaches the end.

44
00:01:53.006 --> 00:01:56.008
The processing that occurs for each item varies

45
00:01:56.008 --> 00:01:59.008
for each batch job and the business operation

46
00:01:59.008 --> 00:02:01.008
it's meant to complete.

47
00:02:01.008 --> 00:02:05.004
It is common to execute batch jobs on a schedule.

48
00:02:05.004 --> 00:02:07.008
Allowing the necessary data to accumulate

49
00:02:07.008 --> 00:02:11.003
over a period of time between executions.

50
00:02:11.003 --> 00:02:15.000
Once we have the necessary data for the period,

51
00:02:15.000 --> 00:02:18.006
the job is triggered to perform the processing.

52
00:02:18.006 --> 00:02:20.006
Let's take a look at some typical batch

53
00:02:20.006 --> 00:02:24.001
scenarios to get a better understanding.

54
00:02:24.001 --> 00:02:27.001
Reporting is a frequent use case for Batch.

55
00:02:27.001 --> 00:02:29.001
Because it requires a set of data to be

56
00:02:29.001 --> 00:02:31.001
collected over a reporting period.

57
00:02:31.001 --> 00:02:35.002
And possibly aggregated as a complete data set.

58
00:02:35.002 --> 00:02:38.003
In order to process and distribute report information

59
00:02:38.003 --> 00:02:41.005
to it's recipients at the specified interval.

60
00:02:41.005 --> 00:02:44.005
The batch job requires all data to be present

61
00:02:44.005 --> 00:02:47.000
in order to create the report.

62
00:02:47.000 --> 00:02:48.009
Imagine if you're monthly bank statement

63
00:02:48.009 --> 00:02:51.002
were not batch processed.

64
00:02:51.002 --> 00:02:54.002
In a real-time scenario you're statement

65
00:02:54.002 --> 00:02:56.002
would either be incomplete for the month

66
00:02:56.002 --> 00:02:59.005
or sent too frequently to provide value.

67
00:02:59.005 --> 00:03:01.001
You wouldn't want to receive a statement

68
00:03:01.001 --> 00:03:03.004
every time you made a transaction.

69
00:03:03.004 --> 00:03:05.005
It's much easier to digest this

70
00:03:05.005 --> 00:03:08.001
information on a monthly basis.

71
00:03:08.001 --> 00:03:10.004
This makes Batch an ideal approach

72
00:03:10.004 --> 00:03:13.003
for reporting scenarios.

73
00:03:13.003 --> 00:03:16.001
Another frequent use case is the exchange

74
00:03:16.001 --> 00:03:18.004
of information between systems

75
00:03:18.004 --> 00:03:20.007
or within the same system.

76
00:03:20.007 --> 00:03:23.003
Batch jobs can generate information to be

77
00:03:23.003 --> 00:03:26.007
sent to another system or receive information

78
00:03:26.007 --> 00:03:30.000
from another system for processing.

79
00:03:30.000 --> 00:03:32.001
This will typically take place using a

80
00:03:32.001 --> 00:03:34.001
pre-defined integration strategy

81
00:03:34.001 --> 00:03:35.008
between the two systems.

82
00:03:35.008 --> 00:03:40.005
Such as, SFTP, direct database connections or messaging.

83
00:03:40.005 --> 00:03:42.009
These integration strategies can require

84
00:03:42.009 --> 00:03:45.005
careful timing to ensure data is available

85
00:03:45.005 --> 00:03:48.003
and up to date when necessary.

86
00:03:48.003 --> 00:03:50.005
Batch jobs of this nature typically

87
00:03:50.005 --> 00:03:52.004
follow an ETL pattern.

88
00:03:52.004 --> 00:03:54.005
Receiving the data, validating it,

89
00:03:54.005 --> 00:03:57.003
possibly transforming it and then

90
00:03:57.003 --> 00:04:00.001
loading in to another data store.

91
00:04:00.001 --> 00:04:02.007
So that is a quick look at Batch processing

92
00:04:02.007 --> 00:04:04.004
in a few examples.

93
00:04:04.004 --> 00:04:06.001
Throughout the course we will see how to

94
00:04:06.001 --> 00:04:08.009
construct batch jobs with Spring Batch

95
00:04:08.009 --> 00:04:11.004
that can perform the processing necessary

96
00:04:11.004 --> 00:04:15.000
to power business operations for major enterprises.

