WEBVTT
1
00:00:00.005 --> 00:00:03.003
- [Instructor] The first item processor we'll take a look at

2
00:00:03.003 --> 00:00:07.000
is the bean validating item processor.

3
00:00:07.000 --> 00:00:09.003
This is a processor that Spring Batch

4
00:00:09.003 --> 00:00:11.002
provides out of the box.

5
00:00:11.002 --> 00:00:16.000
We can use it to validate the items read into a step.

6
00:00:16.000 --> 00:00:18.000
To determine if an item is valid,

7
00:00:18.000 --> 00:00:20.009
the bean validating item processor

8
00:00:20.009 --> 00:00:26.008
consults JSR 380 validation annotations placed on a bean.

9
00:00:26.008 --> 00:00:29.005
Let's take a look at how we can configure

10
00:00:29.005 --> 00:00:34.004
this item processor for validation within our batch job.

11
00:00:34.004 --> 00:00:36.001
We'll start out by taking a look

12
00:00:36.001 --> 00:00:39.004
at the Palm file for our project.

13
00:00:39.004 --> 00:00:41.004
You'll notice within the Palm

14
00:00:41.004 --> 00:00:44.008
that we've had to add some dependencies

15
00:00:44.008 --> 00:00:49.008
in order to support the JSR 380 annotations,

16
00:00:49.008 --> 00:00:52.004
so we added the hibernate validator,

17
00:00:52.004 --> 00:00:56.002
we added the EL API dependency

18
00:00:56.002 --> 00:01:00.007
as well as the EL dependency from Java EE,

19
00:01:00.007 --> 00:01:04.004
and then a jax B implementation from GlassFish.

20
00:01:04.004 --> 00:01:06.009
Those will need to be within your Palm,

21
00:01:06.009 --> 00:01:12.000
they're included within the working files for this lesson,

22
00:01:12.000 --> 00:01:15.005
so if you're starting out from those, you'll be fine.

23
00:01:15.005 --> 00:01:20.005
Okay, let's navigate back to our application,

24
00:01:20.005 --> 00:01:23.005
and we're going to start building

25
00:01:23.005 --> 00:01:27.007
our first item processor implementation.

26
00:01:27.007 --> 00:01:30.005
And to do that, we're going to start

27
00:01:30.005 --> 00:01:35.005
with our chunk based step, and here you can see,

28
00:01:35.005 --> 00:01:38.000
we have our chunk, we have our reader,

29
00:01:38.000 --> 00:01:40.005
and then between the reader and the writer,

30
00:01:40.005 --> 00:01:43.003
we're going to add a processor.

31
00:01:43.003 --> 00:01:47.003
And I'm going to add a stub method

32
00:01:47.003 --> 00:01:52.009
to provide the item processor as a bean.

33
00:01:52.009 --> 00:01:54.006
So I'll just name that method,

34
00:01:54.006 --> 00:01:58.002
the order validating item processor,

35
00:01:58.002 --> 00:02:03.000
and then we can just hover over that error message

36
00:02:03.000 --> 00:02:06.001
and hit control one and that gives us the option

37
00:02:06.001 --> 00:02:08.007
for it to generate our method.

38
00:02:08.007 --> 00:02:13.000
I'll go ahead and grab that order validating

39
00:02:13.000 --> 00:02:16.002
item processor method, and I'm going to move it to the top

40
00:02:16.002 --> 00:02:20.005
of our class, it just works to organize it that way.

41
00:02:20.005 --> 00:02:24.007
And then our new item processor is going to be a bean,

42
00:02:24.007 --> 00:02:30.005
so let's go ahead and add the bean annotation to our method

43
00:02:30.005 --> 00:02:35.005
and then we'll change it over to a public method.

44
00:02:35.005 --> 00:02:39.000
The next thing we'll do is we're going to simplify

45
00:02:39.000 --> 00:02:44.000
the type arguments supplied on the item processor interface,

46
00:02:44.000 --> 00:02:48.002
so we're going to specify the input to this processor

47
00:02:48.002 --> 00:02:52.007
as order, and the output of this processor

48
00:02:52.007 --> 00:02:56.001
will be order as well, so we're not doing

49
00:02:56.001 --> 00:02:59.007
any transformation, we're just going to be validating

50
00:02:59.007 --> 00:03:02.008
the orders passed into this processor,

51
00:03:02.008 --> 00:03:05.008
and then we're going to be outputting

52
00:03:05.008 --> 00:03:08.007
those orders that are valid.

53
00:03:08.007 --> 00:03:13.006
Okay, now we can start to define that processor

54
00:03:13.006 --> 00:03:17.000
within our configuration.

55
00:03:17.000 --> 00:03:22.000
So within the framework you'll find the bean validating

56
00:03:22.000 --> 00:03:26.007
item processor, it accepts a generic type argument,

57
00:03:26.007 --> 00:03:30.003
which is the type of the object

58
00:03:30.003 --> 00:03:32.006
that you would like to validate.

59
00:03:32.006 --> 00:03:37.000
I'm going to name this object item processor,

60
00:03:37.000 --> 00:03:41.000
and then we'll just use the constructor

61
00:03:41.000 --> 00:03:46.009
to create a new instance of this item processor,

62
00:03:46.009 --> 00:03:51.000
and then we just have to supply one single configuration.

63
00:03:51.000 --> 00:03:55.002
On this item processor, we're able to set whether or not

64
00:03:55.002 --> 00:03:58.007
the processor will filter, in our case,

65
00:03:58.007 --> 00:04:01.001
we would like it to filter.

66
00:04:01.001 --> 00:04:06.001
The alternative is for the processor to throw an error

67
00:04:06.001 --> 00:04:08.009
when there's a validation exception.

68
00:04:08.009 --> 00:04:13.001
In this case, we're just going to continue processing,

69
00:04:13.001 --> 00:04:17.003
we're just not going to process those items

70
00:04:17.003 --> 00:04:21.000
that cannot pass the validation

71
00:04:21.000 --> 00:04:23.007
enforced by this item processor.

72
00:04:23.007 --> 00:04:28.000
So we won't throw an error, we'll continue processing.

73
00:04:28.000 --> 00:04:31.003
And then from this bean method we're going to go ahead

74
00:04:31.003 --> 00:04:35.000
and return the item processor,

75
00:04:35.000 --> 00:04:38.000
and now we have everything configured

76
00:04:38.000 --> 00:04:42.005
for our bean validating item processor.

77
00:04:42.005 --> 00:04:44.006
We'll need to do one thing at this point,

78
00:04:44.006 --> 00:04:48.001
we're going to hop over to our order pogo,

79
00:04:48.001 --> 00:04:54.004
and here's where we can place those JSR 280 annotations.

80
00:04:54.004 --> 00:04:58.003
So within this class is where we can specify

81
00:04:58.003 --> 00:05:03.000
the JSR 380 bean validation annotations.

82
00:05:03.000 --> 00:05:07.008
Those annotations allow us to annotate a field

83
00:05:07.008 --> 00:05:11.009
and provide criteria that will determine whether or not

84
00:05:11.009 --> 00:05:14.009
the value in that field is valid.

85
00:05:14.009 --> 00:05:18.009
So we're just going to apply one validation.

86
00:05:18.009 --> 00:05:23.000
We're going to use the pattern annotation,

87
00:05:23.000 --> 00:05:25.002
and within the pattern annotation,

88
00:05:25.002 --> 00:05:31.005
we're going to specify the reg expression element,

89
00:05:31.005 --> 00:05:35.009
and we're going to configure the expression

90
00:05:35.009 --> 00:05:41.002
to only allow government emails, so our processor

91
00:05:41.002 --> 00:05:44.006
is going to limit all of our orders to those

92
00:05:44.006 --> 00:05:50.001
placed by individuals that have a government email address.

93
00:05:50.001 --> 00:05:53.002
So here you can see the regular expression

94
00:05:53.002 --> 00:05:58.006
to limit to .gov emails, and once that is in place

95
00:05:58.006 --> 00:06:02.004
our configuration is complete, and we can hop over

96
00:06:02.004 --> 00:06:05.005
to the terminal, and from here we'll just kick off

97
00:06:05.005 --> 00:06:10.004
the script that will build and run our job.

98
00:06:10.004 --> 00:06:14.001
Okay, so we see the job start to execute,

99
00:06:14.001 --> 00:06:16.007
and it looks like it has completed.

100
00:06:16.007 --> 00:06:19.008
So let's go check the data directory,

101
00:06:19.008 --> 00:06:23.001
where we are writing our output as Jason

102
00:06:23.001 --> 00:06:27.008
in the shift underscore orders underscore output.Jason file,

103
00:06:27.008 --> 00:06:31.003
and if we inspect that file, what you're going to notice

104
00:06:31.003 --> 00:06:36.003
is that the email addresses of all the individuals

105
00:06:36.003 --> 00:06:39.006
within the file are .gov.

106
00:06:39.006 --> 00:06:41.007
So these are all fictional emails,

107
00:06:41.007 --> 00:06:43.003
they're not real individuals,

108
00:06:43.003 --> 00:06:46.004
but we have used our item processor

109
00:06:46.004 --> 00:06:50.000
to appropriately apply our validation.

110
00:06:50.000 --> 00:06:52.006
We'll take a look at some additional item processors

111
00:06:52.006 --> 00:06:54.000
coming up in our next lesson.

