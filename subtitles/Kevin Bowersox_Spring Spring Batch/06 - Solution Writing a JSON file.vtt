WEBVTT
1
00:00:00.000 --> 00:00:05.006
(soothing music)

2
00:00:05.006 --> 00:00:07.008
- [Instructor] So let's take a look at one solution

3
00:00:07.008 --> 00:00:08.009
to the challenge.

4
00:00:08.009 --> 00:00:11.005
I hope you found it enjoyable.

5
00:00:11.005 --> 00:00:13.008
In order to complete the challenge,

6
00:00:13.008 --> 00:00:18.008
we needed to switch our item writer implementation.

7
00:00:18.008 --> 00:00:22.008
Currently the implementation we have writes to a database,

8
00:00:22.008 --> 00:00:26.001
and we wanted to write to a JSON file.

9
00:00:26.001 --> 00:00:30.002
So, let's go ahead and remove the current configuration

10
00:00:30.002 --> 00:00:32.001
of our item writer bean,

11
00:00:32.001 --> 00:00:35.004
and then we're going to leverage a new object,

12
00:00:35.004 --> 00:00:39.004
the JsonFile Item Writer builder.

13
00:00:39.004 --> 00:00:43.000
And this will help us configure our new item writer,

14
00:00:43.000 --> 00:00:45.008
which is capable of writing JSON

15
00:00:45.008 --> 00:00:48.003
to a file on the file system.

16
00:00:48.003 --> 00:00:52.004
Now when we construct the JSON File Item writer builder

17
00:00:52.004 --> 00:00:54.002
using its constructor,

18
00:00:54.002 --> 00:00:57.005
we need to supply a generic type argument

19
00:00:57.005 --> 00:00:59.005
which is the type of the POJO

20
00:00:59.005 --> 00:01:02.009
that we we would like to write to our JSON file.

21
00:01:02.009 --> 00:01:05.006
And then from there, we have to supply

22
00:01:05.006 --> 00:01:08.008
a JSON object marshaller.

23
00:01:08.008 --> 00:01:11.002
In this case, we're going to be using

24
00:01:11.002 --> 00:01:13.008
Spring's Jackson support.

25
00:01:13.008 --> 00:01:18.005
And we'll use the Jackson JSON object marshaller.

26
00:01:18.005 --> 00:01:21.004
So Jackson is a serialization

27
00:01:21.004 --> 00:01:27.006
and deserialization framework for working with JSON in Java,

28
00:01:27.006 --> 00:01:29.006
it's able to take a JSON string

29
00:01:29.006 --> 00:01:31.008
and turn it into a Java object,

30
00:01:31.008 --> 00:01:35.004
and a Java object can be turned into a JSON string

31
00:01:35.004 --> 00:01:37.004
without much code being written.

32
00:01:37.004 --> 00:01:39.002
And we're going to leverage that

33
00:01:39.002 --> 00:01:43.004
within our new JSON file item writer.

34
00:01:43.004 --> 00:01:46.006
It all comes out of the box with Spring.

35
00:01:46.006 --> 00:01:49.001
The next thing we're going to do

36
00:01:49.001 --> 00:01:54.000
is specify where we would like to write that JSON file.

37
00:01:54.000 --> 00:01:58.004
So to do that, we use a file system resource

38
00:01:58.004 --> 00:02:01.006
and we just need to use the constructor

39
00:02:01.006 --> 00:02:05.005
that accepts a path to the file we'd like to write.

40
00:02:05.005 --> 00:02:07.006
On my machine, I'm going to write it within

41
00:02:07.006 --> 00:02:09.007
that data directory I've been using.

42
00:02:09.007 --> 00:02:11.001
And I'm going to name

43
00:02:11.001 --> 00:02:16.007
the file shipped_orders_output.json.

44
00:02:16.007 --> 00:02:18.008
And then the final thing that we need to do

45
00:02:18.008 --> 00:02:21.006
is give this item writer a name.

46
00:02:21.006 --> 00:02:25.004
I'm just going to call it the jsonItemWriter,

47
00:02:25.004 --> 00:02:27.004
and then from there, we can go ahead

48
00:02:27.004 --> 00:02:29.009
and build our item writer.

49
00:02:29.009 --> 00:02:34.006
Okay, so now we have our new item writer implementation

50
00:02:34.006 --> 00:02:38.002
in place, it's capable of writing out a JSON file.

51
00:02:38.002 --> 00:02:41.005
We just need to navigate to our terminal.

52
00:02:41.005 --> 00:02:47.002
And then we're going to go ahead, kick off the job,

53
00:02:47.002 --> 00:02:52.004
and once the job executes, we should have a JSON file

54
00:02:52.004 --> 00:02:55.007
that is written on our file system.

55
00:02:55.007 --> 00:02:58.007
So I'm going to hop into the File explorer

56
00:02:58.007 --> 00:03:02.008
and on the root of my machine I have a data directory.

57
00:03:02.008 --> 00:03:07.002
And then here we see the shipped_orders_output.json file

58
00:03:07.002 --> 00:03:08.009
created by the job.

59
00:03:08.009 --> 00:03:11.003
And there is all the information

60
00:03:11.003 --> 00:03:15.001
that was previously in the table in our relational database

61
00:03:15.001 --> 00:03:17.000
within a JSON file.

