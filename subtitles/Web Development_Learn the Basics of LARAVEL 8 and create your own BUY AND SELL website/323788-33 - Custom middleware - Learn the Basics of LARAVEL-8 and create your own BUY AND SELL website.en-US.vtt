WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.410 --> 00:00:03.570
Well, our website looks good now,

00:00:03.570 --> 00:00:06.600
but there is still a serious issue.

00:00:06.600 --> 00:00:11.355
And once we fix this issue will be ready for the initial release.

00:00:11.355 --> 00:00:14.445
Now before I show you how to fix this issue,

00:00:14.445 --> 00:00:16.800
latest understand the issue itself.

00:00:16.800 --> 00:00:18.855
And for the unit two echoes,

00:00:18.855 --> 00:00:21.480
I have created two accounts on the website and I have

00:00:21.480 --> 00:00:24.720
added products using both of the accounts.

00:00:24.720 --> 00:00:26.910
And you have to do the same.

00:00:26.910 --> 00:00:33.470
Now log in it one account and try to edit a product, edit by the other account.

00:00:33.470 --> 00:00:36.440
And if you try to find the edit button on

00:00:36.440 --> 00:00:39.635
the product details page of a product edit by the other account.

00:00:39.635 --> 00:00:42.110
You won't find them as we are already

00:00:42.110 --> 00:00:45.590
verifying the owner said before displaying the edit and delete buttons.

00:00:45.590 --> 00:00:50.450
So you have to manually enter the URL on the address bar of the browser.

00:00:50.450 --> 00:00:53.900
So enter, be honest or less.

00:00:53.900 --> 00:00:54.695
Edit.

00:00:54.695 --> 00:00:56.600
This is the root right?

00:00:56.600 --> 00:01:01.610
Add, the ID of a product added by the other account.

00:01:01.610 --> 00:01:04.670
And now here you have deformed to ADD product.

00:01:04.670 --> 00:01:08.465
So basically, anyone can edit anyone else's product.

00:01:08.465 --> 00:01:10.955
And this is a serious issue.

00:01:10.955 --> 00:01:15.900
And in this video I'll show you how to fix this using a middleware.

00:01:16.630 --> 00:01:20.450
We have already seen how powerful middlewares are, right?

00:01:20.450 --> 00:01:22.580
We have been using ought to prevent

00:01:22.580 --> 00:01:27.350
unauthenticated users from accessing different pages of the website.

00:01:27.350 --> 00:01:30.800
And now we are going to create our own middleware.

00:01:30.800 --> 00:01:34.145
So first we sell create our own middleware.

00:01:34.145 --> 00:01:36.230
We say assign a key to the immediate,

00:01:36.230 --> 00:01:39.365
we're inside the kernel dot PHP file.

00:01:39.365 --> 00:01:42.860
Finally, we sell, apply this middleware to the root.

00:01:42.860 --> 00:01:45.990
So let's get started.

00:01:52.210 --> 00:01:56.690
Create a middleware by running the command PHP artisan

00:01:56.690 --> 00:02:00.710
make colon middleware and provide a name.

00:02:00.710 --> 00:02:03.450
Let's name it, verify sailor.

00:02:04.360 --> 00:02:08.300
Now let us revise the concept of middleware.

00:02:08.300 --> 00:02:10.415
Once you remember right,

00:02:10.415 --> 00:02:13.880
a middleware can intercept an HTTP request of the application,

00:02:13.880 --> 00:02:19.280
make a decision whether to let the request to process it or to deny it.

00:02:19.280 --> 00:02:21.335
Here, in our case,

00:02:21.335 --> 00:02:23.585
whenever a user makes a request to edit

00:02:23.585 --> 00:02:29.240
a product using this middleware verify seller who sell intercept the request.

00:02:29.240 --> 00:02:35.025
Check whether the user trying to edit the product is the owner of the product or not.

00:02:35.025 --> 00:02:37.135
If the users do owner we sell,

00:02:37.135 --> 00:02:41.800
allow the request to proceed to the next tip to display the product edit form.

00:02:41.800 --> 00:02:45.145
But if the user is not, the owner,

00:02:45.145 --> 00:02:49.150
whistle redirect him or her to the product details page.

00:02:49.150 --> 00:02:50.830
Instead.

00:02:50.830 --> 00:02:54.745
Currently our medulla looks like this.

00:02:54.745 --> 00:03:00.655
And we have to write the logic for making the decision inside this function handle.

00:03:00.655 --> 00:03:04.060
Currently there is a single statement inside this function.

00:03:04.060 --> 00:03:07.330
It allows the request to proceed to the next level.

00:03:07.330 --> 00:03:11.420
Now we sell at some code before the statement.

00:03:11.970 --> 00:03:17.990
First of all, we have to get the product ID from

00:03:17.990 --> 00:03:20.660
the root because we shall fetch the product

00:03:20.660 --> 00:03:23.840
from the database to know who is the owner or sailor.

00:03:23.840 --> 00:03:26.970
From the view of the user ID column.

00:03:26.980 --> 00:03:31.820
We can call the function root on the request object to

00:03:31.820 --> 00:03:36.125
get an instance of the class root representing the current route.

00:03:36.125 --> 00:03:39.230
And then if we call the function parameter on

00:03:39.230 --> 00:03:43.280
it and pass the name of the route parameter we're interested in.

00:03:43.280 --> 00:03:46.505
We will get the value of that parameter.

00:03:46.505 --> 00:03:54.930
So let's pass ID as this is the name of the parameter on the route, edit ID.

00:03:56.830 --> 00:03:59.615
And assign the result.

00:03:59.615 --> 00:04:02.660
If a variable named Product ID.

00:04:02.660 --> 00:04:09.300
Now fetch the product by ID by calling the function find on the product model.

00:04:12.160 --> 00:04:14.360
And for this to work,

00:04:14.360 --> 00:04:17.480
we must include the class product inside this file.

00:04:17.480 --> 00:04:18.995
So at the top of this file,

00:04:18.995 --> 00:04:25.430
at this line, use models product.

00:04:25.430 --> 00:04:29.000
Let us also include the class off as we will

00:04:29.000 --> 00:04:32.615
need it next to get the idea of the logged in user.

00:04:32.615 --> 00:04:37.205
Use Illuminate support facades OT.

00:04:37.205 --> 00:04:42.245
Now add an if statement to check if the author ID,

00:04:42.245 --> 00:04:44.645
the idea of the logged in user,

00:04:44.645 --> 00:04:51.590
is not equal to D user ID of the product instance,

00:04:51.590 --> 00:04:55.040
which is the user ID of this sailor or the owner.

00:04:55.040 --> 00:05:02.855
In the condition of the if statement we sell check if the two user IDs are not equal.

00:05:02.855 --> 00:05:04.700
So if it is true,

00:05:04.700 --> 00:05:10.220
which means that the user trying to edit the product is not the owner.

00:05:10.220 --> 00:05:14.390
Then we sell, redirect the user to the details bridge of the product.

00:05:14.390 --> 00:05:18.570
Otherwise, we sell, allow the user to edit.

00:05:18.700 --> 00:05:25.170
We shall call the function redirect and pass the URL of the details page to eat.

00:05:27.580 --> 00:05:34.160
So we have added the logic to the middleware bot to be able to apply to the roots,

00:05:34.160 --> 00:05:37.340
we have to assign a key to this middleware.

00:05:37.340 --> 00:05:44.120
And for that, opened the file kernel dot PHP from the app's less HTTP folder.

00:05:44.120 --> 00:05:46.370
At the bottom of this file,

00:05:46.370 --> 00:05:50.285
you will find the area and named root middleware.

00:05:50.285 --> 00:05:53.600
Notice how the keys are assigned to the middlewares.

00:05:53.600 --> 00:05:55.280
Now we shall do this same width,

00:05:55.280 --> 00:05:57.275
army dealer, verify seller.

00:05:57.275 --> 00:05:59.795
First, specify the key,

00:05:59.795 --> 00:06:03.140
latest name it verify underscore sailor.

00:06:03.140 --> 00:06:07.140
We shall use this name while adding the medulla to the root.

00:06:07.140 --> 00:06:13.940
Then add the fat arrow and then the part of the class verify seller.

00:06:17.340 --> 00:06:23.740
Now append the root file web dot PHP and add the middleware to the root ADT.

00:06:23.740 --> 00:06:28.730
We have to use an array to apply multiple middlewares to the root.

00:06:28.980 --> 00:06:31.765
Now try to ADD product,

00:06:31.765 --> 00:06:33.640
edit by edified account.

00:06:33.640 --> 00:06:35.725
Then the one you are logged in with,

00:06:35.725 --> 00:06:39.220
try and run the URL manually on the address bar,

00:06:39.220 --> 00:06:44.080
like VNS dot goes less edit the ID.

00:06:44.080 --> 00:06:46.105
And try changing the ID.

00:06:46.105 --> 00:06:50.415
You won't be able to edit others product anymore.

00:06:50.415 --> 00:06:53.900
Middleware in larval are awesome, right?

00:06:53.900 --> 00:06:56.795
I hope you have enjoyed creating your own middleware.

00:06:56.795 --> 00:07:00.125
Now you can protect any route that you don't want

00:07:00.125 --> 00:07:03.665
in non owner two Xs is in this middleware.

00:07:03.665 --> 00:07:06.840
I'll add this to the delete root two.
