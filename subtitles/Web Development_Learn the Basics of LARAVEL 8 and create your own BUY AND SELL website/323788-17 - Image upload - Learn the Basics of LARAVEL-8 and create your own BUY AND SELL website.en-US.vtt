WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.760
After realization of the user inputs,

00:00:02.760 --> 00:00:05.670
we're sure that we have all the data that we need to

00:00:05.670 --> 00:00:09.225
create a new entry in the products table, right?

00:00:09.225 --> 00:00:11.069
Well, not exactly.

00:00:11.069 --> 00:00:14.025
Take a look at the structure of the projects products table

00:00:14.025 --> 00:00:17.175
and you will find a column named image URL,

00:00:17.175 --> 00:00:22.560
where we are going to store the URL of the uploaded image.

00:00:22.560 --> 00:00:26.265
But we don't have debt URL here.

00:00:26.265 --> 00:00:32.655
So first of all, we have to upload the image selected by the user to the server,

00:00:32.655 --> 00:00:34.995
then get its path.

00:00:34.995 --> 00:00:40.810
And then only we will be ready to store the products information on the database.

00:00:43.000 --> 00:00:45.935
Notice tapes, debt, we have to take

00:00:45.935 --> 00:00:51.095
our gate DMAs inside the store method or the products controller,

00:00:51.095 --> 00:00:54.185
creating unique name 45,

00:00:54.185 --> 00:00:58.320
upload the image and then get deposited.

00:00:58.390 --> 00:01:03.155
You will be surprised to see how easy it is enlarged head.

00:01:03.155 --> 00:01:05.900
First, call the function file on

00:01:05.900 --> 00:01:09.740
the request object to get the file submitted with the form,

00:01:09.740 --> 00:01:14.015
we have to pass the name of the input field 45.

00:01:14.015 --> 00:01:16.985
It is IMC in our case.

00:01:16.985 --> 00:01:20.450
Then call another function named store.

00:01:20.450 --> 00:01:23.540
We have to pass the path to store the file.

00:01:23.540 --> 00:01:27.890
Let's simply pass the folder name where we want to store the file.

00:01:27.890 --> 00:01:30.890
Let's name it. Product images.

00:01:30.890 --> 00:01:33.620
Folder does not exist yet,

00:01:33.620 --> 00:01:35.900
so it will be automatically created.

00:01:35.900 --> 00:01:42.420
And this store function also generate a unique name, 45.

00:01:43.090 --> 00:01:51.290
Finally, we have to get the path of the uploaded image right to store it on the database.

00:01:51.290 --> 00:01:55.490
This function store returns that part.

00:01:55.490 --> 00:01:58.430
We simply need to create a variable to hold it.

00:01:58.430 --> 00:02:01.460
So let us create one, name it path.

00:02:01.460 --> 00:02:06.080
Now, if you want to see depart,

00:02:06.080 --> 00:02:15.420
add an echo statement or use the dump and die a function to print this variable.

00:02:17.380 --> 00:02:23.075
Now if we reload the page and try to submit the form with an image,

00:02:23.075 --> 00:02:25.280
you will get an error.

00:02:25.280 --> 00:02:31.400
This is because we have to add the value multi-part form data to the property,

00:02:31.400 --> 00:02:38.450
to the attribute BNC type in our form to be able to submit an image or a file.

00:02:38.450 --> 00:02:43.340
So open sale dot blade dot PHP and to the form tag,

00:02:43.340 --> 00:02:48.570
add EN C-type equal multi-part form data.

00:02:51.610 --> 00:02:53.900
Now reload the page,

00:02:53.900 --> 00:02:57.890
fill up the form, select any maze and submit the form.

00:02:57.890 --> 00:03:01.550
And the MS has been successfully uploaded.

00:03:01.550 --> 00:03:04.730
We can see the path on the screen.

00:03:04.730 --> 00:03:14.430
And a new folder named product images has been created inside stories, inside App.

00:03:17.320 --> 00:03:22.020
And the image has been stored in this folder.

00:03:25.180 --> 00:03:32.915
Now remove this function call and let us process to the next task,

00:03:32.915 --> 00:03:36.000
storing the data only database.
