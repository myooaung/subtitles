WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.560 --> 00:00:06.960
We shall allow our users to post an ad for a product that he or she wants to sail.

00:00:06.960 --> 00:00:11.580
In this video, we are going to create a forum to add a title of the product,

00:00:11.580 --> 00:00:13.395
to add a short description,

00:00:13.395 --> 00:00:17.610
a longer description, the price of the product and an image for the product.

00:00:17.610 --> 00:00:20.400
And when the user clicks on the submit button,

00:00:20.400 --> 00:00:23.790
then we store this information on the database.

00:00:23.790 --> 00:00:29.565
And the egg or the product will be immediately available on the product list page.

00:00:29.565 --> 00:00:33.240
And in this video we are going to focus only on the UI.

00:00:33.240 --> 00:00:36.760
We shall implemented database interactions later.

00:00:38.200 --> 00:00:42.995
First of all, create a new file inside the views directory.

00:00:42.995 --> 00:00:46.800
Let's name it sail lock-blade, dot-dot-dot PHP.

00:00:49.420 --> 00:00:53.960
Then add a route for this view on the web dot PHP file

00:00:53.960 --> 00:00:59.165
inside the routes folder called the function gate of the root class.

00:00:59.165 --> 00:01:03.620
To the first parameter passed the URI as a sale,

00:01:03.620 --> 00:01:05.030
and to the second parameter,

00:01:05.030 --> 00:01:09.635
passive function and return the view that we have created.

00:01:09.635 --> 00:01:12.920
Just now from this function.

00:01:12.920 --> 00:01:19.760
Now we can load this page on the browser by entering HTTP columns less,

00:01:19.760 --> 00:01:22.445
less, DNS dot grows less.

00:01:22.445 --> 00:01:23.855
Sale.

00:01:23.855 --> 00:01:26.420
The page is blank now.

00:01:26.420 --> 00:01:30.450
So let's start adding some content to it.

00:01:30.520 --> 00:01:38.880
Add the tags for the base layout component inside these u, x base layout.

00:01:38.890 --> 00:01:43.505
Inside these add a form element.

00:01:43.505 --> 00:01:45.995
Inside the form element,

00:01:45.995 --> 00:01:50.854
we add the input boxes and their corresponding labels.

00:01:50.854 --> 00:01:55.070
So first let's add a level 40 title.

00:01:55.070 --> 00:02:02.190
Let's add the text product title and then add an input box of type text.

00:02:02.970 --> 00:02:06.490
Now add some styles to make it look better.

00:02:06.490 --> 00:02:09.940
We can add detail when CSS classes here itself,

00:02:09.940 --> 00:02:13.705
or we can create a reusable component.

00:02:13.705 --> 00:02:16.750
The way larval breeze has created

00:02:16.750 --> 00:02:21.460
40 components of the login screen and they reached isn't screen.

00:02:21.460 --> 00:02:23.845
Take a look at the components folder.

00:02:23.845 --> 00:02:27.189
You will notice components like all scarred,

00:02:27.189 --> 00:02:30.200
input level button, et cetera.

00:02:30.750 --> 00:02:34.120
This components are added by larval breeze and

00:02:34.120 --> 00:02:36.805
are used in the authentication related screens.

00:02:36.805 --> 00:02:39.610
Now let us create a component ourselves,

00:02:39.610 --> 00:02:42.265
similar to this Asgard component.

00:02:42.265 --> 00:02:44.440
And we are going to create an anonymous communist,

00:02:44.440 --> 00:02:48.965
so we don't need to run the command Make Component.

00:02:48.965 --> 00:02:51.800
Simply create a new file with

00:02:51.800 --> 00:02:57.590
a dot blade dot PHP extension inside this folder, the components folder.

00:02:57.590 --> 00:03:03.900
Let's name it form container card dot dot dot PHP.

00:03:05.170 --> 00:03:10.070
We shall make the form looks similar to the login and racism forms.

00:03:10.070 --> 00:03:15.209
So let's copy the content of the ORT guard component,

00:03:16.300 --> 00:03:18.830
which will make two changes here.

00:03:18.830 --> 00:03:23.840
First, let's change the background color to be z graffiti on the root def,

00:03:23.840 --> 00:03:30.070
as this is the color we are using on the product list and product details pages.

00:03:30.070 --> 00:03:35.170
Secondly, renamed the variable logo to title as instead of the logo.

00:03:35.170 --> 00:03:36.940
As soon on the login,

00:03:36.940 --> 00:03:38.785
login enraged isn't screen.

00:03:38.785 --> 00:03:42.835
We sell display a title like what do you want the sale today.

00:03:42.835 --> 00:03:45.205
Also make the title a little bold,

00:03:45.205 --> 00:03:49.580
using the class found semi bold.

00:03:52.020 --> 00:03:54.250
Now inside the file,

00:03:54.250 --> 00:03:56.080
say lock-blade dot PHP,

00:03:56.080 --> 00:04:03.500
wrap the form inside the tags x form container card.

00:04:13.290 --> 00:04:17.455
If you reload the page now you will get an error.

00:04:17.455 --> 00:04:20.140
As we have not defined this lot title.

00:04:20.140 --> 00:04:24.865
So inside the x form container card tag,

00:04:24.865 --> 00:04:27.880
let's add the slot tag,

00:04:27.880 --> 00:04:31.120
pass the title to the attribute name,

00:04:31.120 --> 00:04:36.350
and add the text to display inside these tags.

00:04:38.970 --> 00:04:45.580
Now reload the page and we can see the changes.

00:04:45.580 --> 00:04:51.220
We also have to make the input box and the label look better for that,

00:04:51.220 --> 00:04:52.934
let's add the classes.

00:04:52.934 --> 00:04:59.015
Takes SM and takes the gray 530 level to make it look a little smaller and create.

00:04:59.015 --> 00:05:00.950
And to the input element,

00:05:00.950 --> 00:05:05.570
Let's add rounded MD to make the current corners round.

00:05:05.570 --> 00:05:08.030
Shadow SM to add some shadow.

00:05:08.030 --> 00:05:12.170
Border. Great 302, add a gray border.

00:05:12.170 --> 00:05:21.050
Focus, bolder indigo 300 to make the border color indigo when focused and w fool.

00:05:21.050 --> 00:05:27.590
Too late it occupy the maximum space available horizontally inside the container.

00:05:27.590 --> 00:05:35.315
Let's group the label and the input element inside a div and add a top margin.

00:05:35.315 --> 00:05:39.000
Today div empty to.

00:05:40.870 --> 00:05:44.040
Now it looks like this.

00:05:46.210 --> 00:05:51.390
Now is they'll create the input fields for the other fields too.

00:05:55.510 --> 00:05:59.450
Let's copy and paste these elements

00:05:59.450 --> 00:06:02.855
three times for the small description, the long description,

00:06:02.855 --> 00:06:09.470
and the price of the product change

00:06:09.470 --> 00:06:15.000
the values of the attributes and the taste 40 level.

00:06:28.270 --> 00:06:33.240
And now the page looks like this.

00:06:37.660 --> 00:06:43.700
We are also going to allow the user to upload an image of the product for the add.

00:06:43.700 --> 00:06:47.825
So let's add a label and an input element with

00:06:47.825 --> 00:06:54.170
type file to allow the user to pick an image from the computer.

00:06:54.170 --> 00:06:55.880
On this input element,

00:06:55.880 --> 00:06:59.790
we still keep only w fool in the class list.

00:07:09.400 --> 00:07:11.960
Now if we reload the page,

00:07:11.960 --> 00:07:16.500
we can see the button to browse an image.

00:07:21.190 --> 00:07:28.009
Finally, let's add a button to submit the form larval breeze has edited component

00:07:28.009 --> 00:07:30.830
named button for creating a button

00:07:30.830 --> 00:07:35.450
which it has used in the login and reached its end pages.

00:07:35.450 --> 00:07:41.070
Let us try to use the same component, 40 button here.

00:07:42.270 --> 00:07:51.280
Let's add the tags X button and edit takes to post the add inside these tags.

00:07:51.280 --> 00:07:58.315
I'll also add some top margin with the class empty for make the button full-width,

00:07:58.315 --> 00:08:06.260
which w fool and align the text inside at the center using justify center.

00:08:07.560 --> 00:08:09.775
Lipase looks good now,

00:08:09.775 --> 00:08:12.820
but I'd like to make one more change.

00:08:12.820 --> 00:08:15.550
I will change the target input box 2.

00:08:15.550 --> 00:08:18.970
It takes the area to provide some more space to

00:08:18.970 --> 00:08:23.450
the user to enter a complete description of the product.

00:08:27.900 --> 00:08:31.400
Now, it looks perfect.

00:08:32.340 --> 00:08:36.430
Html forms are vulnerable to CSRF and x.

00:08:36.430 --> 00:08:38.455
Now what is a CA Certificate?

00:08:38.455 --> 00:08:42.220
In simple words, in a CSRF attack, an attacker,

00:08:42.220 --> 00:08:49.044
metric and innocent end user to submit a web request that he never intended.

00:08:49.044 --> 00:08:53.035
Let us think about a possible attack on our website.

00:08:53.035 --> 00:09:00.744
An attacker may create and host a webpage where he or she may write the code to submit

00:09:00.744 --> 00:09:04.780
a product ad to the same new debt we're using to

00:09:04.780 --> 00:09:10.200
submit the details of a product from the form to sell a product.

00:09:10.200 --> 00:09:12.560
Add when we are logged in,

00:09:12.560 --> 00:09:15.200
if the attacker can somehow get us,

00:09:15.200 --> 00:09:17.375
click on a link to her website,

00:09:17.375 --> 00:09:22.620
we may end up posting an ad to say something that we never intended.

00:09:22.810 --> 00:09:26.465
And to prevent such CSRF index.

00:09:26.465 --> 00:09:30.035
Csrf tokens are used inside HTML forms.

00:09:30.035 --> 00:09:34.160
A CSRF token uniquely identifies a logged in user.

00:09:34.160 --> 00:09:36.725
So wherever it post food,

00:09:36.725 --> 00:09:38.660
pets, or delete request is made,

00:09:38.660 --> 00:09:44.840
the CSRF token is verified to confirm debt do request is from an authorized user.

00:09:44.840 --> 00:09:47.120
It is not an unauthorized request.

00:09:47.120 --> 00:09:51.815
La, la, they'll make this complete process extremely easy for us.

00:09:51.815 --> 00:09:57.815
A CSRF token, we simply have to add the CSR directive to the HTML form.

00:09:57.815 --> 00:10:00.635
And the process of token verification will be

00:10:00.635 --> 00:10:05.495
done by the middleware named verify CSRF token.

00:10:05.495 --> 00:10:11.315
So to secure our form from CSRF attacks,

00:10:11.315 --> 00:10:17.165
we simply have to add this bleed directive at the CSF to deform.

00:10:17.165 --> 00:10:21.905
And that is all. Now our form is secure.

00:10:21.905 --> 00:10:25.205
To learn more about CSRF attacks,

00:10:25.205 --> 00:10:27.079
go through the larval documentation,

00:10:27.079 --> 00:10:29.450
click on the main White MD basics,

00:10:29.450 --> 00:10:33.945
and then take a look at the page CSRF protection.

00:10:33.945 --> 00:10:39.550
Finally, let us edit button on the nav bar to load this page,

00:10:39.550 --> 00:10:46.150
the form opened a component-based layout and before adding the OD directive,

00:10:46.150 --> 00:10:55.700
add a link with the text sale and add the route to the sale view to the HREF attribute.

00:11:02.100 --> 00:11:09.290
Also add some merging to the right with M. For.

00:11:09.960 --> 00:11:14.990
Now the link to sail pays is visible on the navigation bar.
