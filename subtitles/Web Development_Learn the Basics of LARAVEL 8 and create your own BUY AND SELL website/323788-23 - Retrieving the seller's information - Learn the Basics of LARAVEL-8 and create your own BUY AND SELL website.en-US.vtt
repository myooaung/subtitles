WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.570 --> 00:00:03.760
Take a look at the product details page.

00:00:03.760 --> 00:00:06.250
We need the name, the phone number,

00:00:06.250 --> 00:00:08.890
and the e-mail of the sailor to display here.

00:00:08.890 --> 00:00:11.920
We have this information in the users table and in

00:00:11.920 --> 00:00:14.770
the products table for each of the product,

00:00:14.770 --> 00:00:20.185
we have the user ID of the user who has created the ad for this product.

00:00:20.185 --> 00:00:21.820
Let's get to the center.

00:00:21.820 --> 00:00:25.720
Now we have to find a way to fats d users in provision from

00:00:25.720 --> 00:00:32.020
the users table by this ID that we have inside the product details page.

00:00:32.020 --> 00:00:36.550
And this is pretty easy enlarge as larvae loses eloquent, warning.

00:00:36.550 --> 00:00:43.575
Eloquent or RM makes managing and working with database relationships easy.

00:00:43.575 --> 00:00:45.245
Help of the loc1 models,

00:00:45.245 --> 00:00:46.520
you look ON models have

00:00:46.520 --> 00:00:50.885
magical powers and we have been working with them for a while now.

00:00:50.885 --> 00:00:56.240
We have used an instance of a product model to add a new product,

00:00:56.240 --> 00:00:57.830
add to the products table.

00:00:57.830 --> 00:01:02.795
We have called functions like all fine save on the instances

00:01:02.795 --> 00:01:08.255
of a model to perform different operations on the products table.

00:01:08.255 --> 00:01:13.805
Now open the file product or PHP from the folder Models.

00:01:13.805 --> 00:01:16.925
And there is nothing inside, almost nothing.

00:01:16.925 --> 00:01:19.820
All the work of communicating with

00:01:19.820 --> 00:01:25.380
the corresponding database table is powerful by eloquent under the hood.

00:01:26.590 --> 00:01:33.020
Now we are trying to find a way to find the information of the seller of a product.

00:01:33.020 --> 00:01:39.335
For that, we simply have to add a function inside the product model.

00:01:39.335 --> 00:01:45.690
The name of the function should match the name of the model that we are trying to fetch.

00:01:46.210 --> 00:01:49.895
So let's name it user here.

00:01:49.895 --> 00:01:53.135
As user owns the product,

00:01:53.135 --> 00:01:56.720
or we may say the product belongs to a user.

00:01:56.720 --> 00:01:58.880
So here inside the function user,

00:01:58.880 --> 00:02:03.305
we have to call a function named belongs to and

00:02:03.305 --> 00:02:08.210
pass the class name of the model to dysfunction.

00:02:08.210 --> 00:02:11.370
And finally, we have to return the result.

00:02:12.070 --> 00:02:15.890
This belong to function is inherited by this class,

00:02:15.890 --> 00:02:20.945
so we have to use this keyword to refer to it.

00:02:20.945 --> 00:02:26.990
Now this works as the primary key of the user's table is named ID

00:02:26.990 --> 00:02:32.480
and the foreign key on the products table is named user ID, underscore ID.

00:02:32.480 --> 00:02:35.960
I append it to the snake case name of dependent model.

00:02:35.960 --> 00:02:39.380
Do you remember I had mentioned that there is a reason

00:02:39.380 --> 00:02:43.895
behind this name user ID while creating the table.

00:02:43.895 --> 00:02:50.000
If the foreign key on the products table where different dent user ID,

00:02:50.000 --> 00:02:56.030
then we would have to pass it to the second argument of the belongs to function.

00:02:56.030 --> 00:03:01.820
And it didn't name of the primary key on the users table, we're not ID.

00:03:01.820 --> 00:03:10.470
Then we would have to pass the primary keys name to detect parameter of this function.

00:03:11.050 --> 00:03:13.730
But in our case, we don't need

00:03:13.730 --> 00:03:19.895
this second and target parameters as the foreign key on our products table is user ID.

00:03:19.895 --> 00:03:24.230
And it maps to the column ID of the user's table.

00:03:24.230 --> 00:03:29.225
And this column user ID is the primary key of the user's table.

00:03:29.225 --> 00:03:34.110
Eloquent. Understand this naming convention by default.

00:03:35.770 --> 00:03:39.635
Now open the view 40 product details page,

00:03:39.635 --> 00:03:41.735
product dot blade dot PHP,

00:03:41.735 --> 00:03:45.200
and scroll down to the cellar in permission section.

00:03:45.200 --> 00:03:51.815
Here, replace this static string for the name with the actual name of the sailor.

00:03:51.815 --> 00:03:57.200
We can treat the function user of the product model like a property of the class.

00:03:57.200 --> 00:04:03.680
So product user name gives us the name of the scalar. Product.

00:04:03.680 --> 00:04:07.385
User phone gives us the full number and

00:04:07.385 --> 00:04:12.570
product user email gives us the e-mail of the user.

00:04:15.870 --> 00:04:19.960
After replacing the static strings with these values,

00:04:19.960 --> 00:04:22.660
opened the details page for a product

00:04:22.660 --> 00:04:27.145
and you will find the actual contact information of the sailor.

00:04:27.145 --> 00:04:32.950
Here a default number is missing as this product was added by the previous user account

00:04:32.950 --> 00:04:38.080
for which I don't have the full number on the users table.

00:04:38.080 --> 00:04:41.770
Let me add one main way from PHP, my admin.

00:04:41.770 --> 00:04:44.695
Now we have one more issue here.

00:04:44.695 --> 00:04:47.980
The link to the image seems to be broken.

00:04:47.980 --> 00:04:50.020
To find out the issue latest,

00:04:50.020 --> 00:04:52.630
right-click here and click on Inspect.

00:04:52.630 --> 00:04:54.745
And notice the URL.

00:04:54.745 --> 00:04:57.730
As we have, simply edit the path of the image.

00:04:57.730 --> 00:05:00.250
It gets appended to the root.

00:05:00.250 --> 00:05:02.905
And it worked on the home screen as the root,

00:05:02.905 --> 00:05:05.870
in that case, pointed to the root.

00:05:11.940 --> 00:05:19.165
And this can be easily fixed with help of the helper function asset of Laura Val.

00:05:19.165 --> 00:05:23.305
Instead of passing the image path directly to the HREF attribute,

00:05:23.305 --> 00:05:25.375
pass it to the asset function,

00:05:25.375 --> 00:05:28.810
and pass that result to the HREF attribute.

00:05:28.810 --> 00:05:33.115
They assert function will create the appropriate URL for us.

00:05:33.115 --> 00:05:37.550
Now reload the page and we can see the image.
