WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.840
We have really did it. Our form uploaded the image.

00:00:03.840 --> 00:00:07.260
Now we have the image URL and all other provision of the product.

00:00:07.260 --> 00:00:12.300
So it is time to store the information on the product on the database.

00:00:12.300 --> 00:00:18.850
We are going to interact with the database table products using our modal product.

00:00:19.550 --> 00:00:25.770
Two main points of focus for this video are using

00:00:25.770 --> 00:00:32.830
a model to store data on the database and getting the user ID of the logged in user.

00:00:33.800 --> 00:00:37.200
So let's get started.

00:00:37.200 --> 00:00:43.850
First opened the products controller inside the store function.

00:00:43.850 --> 00:00:45.725
After uploading the image,

00:00:45.725 --> 00:00:49.940
first create an instance of the modal class.

00:00:49.940 --> 00:00:55.610
Let us create a variable products to hold this instance.

00:00:55.610 --> 00:00:59.090
And to be able to access this class product,

00:00:59.090 --> 00:01:03.455
we must include the class at the top of the file.

00:01:03.455 --> 00:01:10.230
So add this line, use models product.

00:01:11.830 --> 00:01:19.685
The input values can be accessed by calling the function input on the request object.

00:01:19.685 --> 00:01:23.090
So let's get those values and assign them

00:01:23.090 --> 00:01:27.110
to the corresponding sales of the product instance.

00:01:27.110 --> 00:01:31.445
If we pass title to dysfunction input,

00:01:31.445 --> 00:01:37.100
then we will get the value entered by the user for the film title.

00:01:37.100 --> 00:01:43.295
So let's assign it to the property title of our product instance.

00:01:43.295 --> 00:01:50.460
Similarly, let's do the same for the short description.

00:01:51.550 --> 00:01:56.430
The long description, and a price.

00:02:02.920 --> 00:02:05.975
Notice the names of the fields,

00:02:05.975 --> 00:02:09.530
the sales of the product class have the same name as

00:02:09.530 --> 00:02:13.445
what we have provided 40 columns of the table.

00:02:13.445 --> 00:02:17.000
And the strings d'etre passed to the input function are

00:02:17.000 --> 00:02:22.110
the names d'etre provide it to the input sales of the form.

00:02:22.690 --> 00:02:26.180
To the field image URL.

00:02:26.180 --> 00:02:33.900
We assign the variable path as it holds the path to the uploaded image.

00:02:34.330 --> 00:02:39.320
We also have to store the user ID of the user submitting this product

00:02:39.320 --> 00:02:45.090
and we shall use the class ought to get the idea of the logged in user.

00:02:45.090 --> 00:02:50.140
We can get the id with the help of this function ID of the Auth class.

00:02:50.140 --> 00:02:55.915
And we sell, assign this value to the property user idea of our product instance.

00:02:55.915 --> 00:03:01.120
And to be able to use this class or inside this file,

00:03:01.120 --> 00:03:05.600
we first have to include it at the top.

00:03:05.670 --> 00:03:08.780
At this line at the top.

00:03:09.090 --> 00:03:12.535
Now call the function dumping Dai,

00:03:12.535 --> 00:03:16.369
who wants to see the content of the product instance.

00:03:16.770 --> 00:03:21.700
Now let's reload the page and fill up the form and submit.

00:03:21.700 --> 00:03:24.880
We will see that lots of information about

00:03:24.880 --> 00:03:28.140
the product instance gates printed on the screen.

00:03:28.140 --> 00:03:32.120
If we expand the fill attributes,

00:03:32.120 --> 00:03:35.555
we will see the values of this fins.

00:03:35.555 --> 00:03:39.620
And you will also notice that the user ID is null.

00:03:39.620 --> 00:03:43.325
This is because we are currently not logged in.

00:03:43.325 --> 00:03:45.815
If we login and try again,

00:03:45.815 --> 00:03:49.320
then we will see a non-null user ID here.

00:03:50.950 --> 00:03:56.585
But we should not have been able to post an ad without logging in, right?

00:03:56.585 --> 00:04:00.065
If an unauthenticated user clicks on the button,

00:04:00.065 --> 00:04:02.960
we had to redirect that user to the login screen.

00:04:02.960 --> 00:04:06.980
And in the next video, I'll show you how to do that using a middleware.

00:04:06.980 --> 00:04:10.620
But for now, let's stay logged in.

00:04:11.680 --> 00:04:16.055
Come back to the code of the products controller.

00:04:16.055 --> 00:04:23.580
Remove the call to this function and call the function save only products instance.

00:04:25.570 --> 00:04:30.785
Now reload the page submitted filled up form.

00:04:30.785 --> 00:04:34.220
And if we take a look at the products table on the database,

00:04:34.220 --> 00:04:37.740
we can see a newly edit product here.

00:04:42.070 --> 00:04:47.090
Now with this, we have completed a very important milestone for our project.

00:04:47.090 --> 00:04:51.350
We have started dealing with actual content and soon we shall start displaying

00:04:51.350 --> 00:04:55.880
actual data from the database on our product list and product detail pages.

00:04:55.880 --> 00:04:58.820
But before that, let us redirect the user to

00:04:58.820 --> 00:05:02.480
a proper place was the form submission is successful.

00:05:02.480 --> 00:05:07.460
Let's take the user to the details ways of essentially edit product.

00:05:07.460 --> 00:05:11.615
For that, after calling save on the product instance,

00:05:11.615 --> 00:05:14.075
add a return statement,

00:05:14.075 --> 00:05:19.730
which I'll call the function redirect and passed the root to which we want to redirect.

00:05:19.730 --> 00:05:26.000
Now the root 40 product details page looks like product less ID.

00:05:26.000 --> 00:05:28.865
We have to pass the product ID, right?

00:05:28.865 --> 00:05:32.405
And we can get the idea of the recently added product

00:05:32.405 --> 00:05:37.410
from the filled ID of the product model.

00:05:42.340 --> 00:05:46.730
And once again, try submitting the form.

00:05:46.730 --> 00:05:50.495
This time you will be redirected to the product details page.

00:05:50.495 --> 00:05:54.680
The product details page is still displaying the static dummy content

00:05:54.680 --> 00:05:59.255
which we sell replace with the content from the database soon.

00:05:59.255 --> 00:06:02.630
So our forum for posting an ad looks complete.

00:06:02.630 --> 00:06:05.240
It displays errors for invalid inputs.

00:06:05.240 --> 00:06:07.370
It submits these inputs to

00:06:07.370 --> 00:06:11.465
the database and it redirects the user to the product details page.

00:06:11.465 --> 00:06:13.670
The only thing left now is to

00:06:13.670 --> 00:06:18.800
restrict the unauthenticated users from accessing this form.

00:06:18.800 --> 00:06:22.590
And I am going to show you how to do that in the next video.
