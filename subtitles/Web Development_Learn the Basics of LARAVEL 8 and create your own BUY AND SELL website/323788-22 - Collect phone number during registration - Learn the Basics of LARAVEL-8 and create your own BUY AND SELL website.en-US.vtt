WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.370 --> 00:00:05.310
So we have realized that to complete the product details page,

00:00:05.310 --> 00:00:06.930
we will need the name,

00:00:06.930 --> 00:00:09.660
the phone number, and the e-mail of the cylinder.

00:00:09.660 --> 00:00:12.060
And we're already storing the user ID of

00:00:12.060 --> 00:00:15.555
the sailor while inserting a product with the products table.

00:00:15.555 --> 00:00:21.075
Using this, we can easily retrieve the users in chromosome from the users table.

00:00:21.075 --> 00:00:22.635
I'll show you how to do that.

00:00:22.635 --> 00:00:26.430
But before that, we had to make some changes to the rachis and

00:00:26.430 --> 00:00:31.360
related code to collect the full number during radiation.

00:00:31.550 --> 00:00:37.500
First we have to add a column to the users table for the phone number.

00:00:37.500 --> 00:00:42.500
Then add a new input field to rearrange written form.

00:00:42.500 --> 00:00:45.820
And finally, we will have to make some changes to

00:00:45.820 --> 00:00:49.435
the controller handling the user registration.

00:00:49.435 --> 00:00:52.280
So let's get started.

00:00:53.460 --> 00:00:58.600
Create a migration to add a new column in the users table.

00:00:58.600 --> 00:01:04.690
Run this command on the terminal PHP artisan make migration and then give it

00:01:04.690 --> 00:01:11.665
a descriptive name to the migration ad for number two, users table.

00:01:11.665 --> 00:01:15.040
Now open the file there has just been created

00:01:15.040 --> 00:01:18.890
inside the folded up obvious less migration.

00:01:19.800 --> 00:01:23.560
Now as Israel, this file has two functions,

00:01:23.560 --> 00:01:26.570
up and down inside the function,

00:01:26.570 --> 00:01:31.940
which I'll call the function string to add a new column to the users table.

00:01:31.940 --> 00:01:34.340
And inside the down function,

00:01:34.340 --> 00:01:39.660
we sell called drop column to delete this column from the table.

00:01:46.330 --> 00:01:50.690
Now save the changes and run the migrations by entering

00:01:50.690 --> 00:01:55.249
the command PHP artisan migrate or determinable.

00:01:55.249 --> 00:01:58.745
And take a look at the database structure.

00:01:58.745 --> 00:02:04.170
The users table now has a new column named phone.

00:02:05.050 --> 00:02:10.010
Now let us add a new input box in the registration form.

00:02:10.010 --> 00:02:10.955
For that.

00:02:10.955 --> 00:02:15.909
First of all, opened the file razor Teradata blade dot PHP.

00:02:15.909 --> 00:02:21.650
Let us copy the the for the name and paste it ones.

00:02:21.650 --> 00:02:25.460
Now for both the label and input box chains,

00:02:25.460 --> 00:02:30.950
the values for the attributes from name to form wherever required.

00:02:30.950 --> 00:02:32.945
Also change the level.

00:02:32.945 --> 00:02:37.700
Now load the races and page and you will see the new field for phone number.

00:02:37.700 --> 00:02:40.595
Let us also add a margin at the top,

00:02:40.595 --> 00:02:42.890
like the input works for the image.

00:02:42.890 --> 00:02:48.875
Here we can see that the class empty for is used for top padding,

00:02:48.875 --> 00:02:54.410
top margin in the input boxes except the first one,

00:02:54.410 --> 00:02:56.765
latest add the same to the new item,

00:02:56.765 --> 00:02:59.280
and now it looks good.

00:03:02.290 --> 00:03:06.695
Next we have to make some changes to the controller.

00:03:06.695 --> 00:03:12.965
We have to validate this field and make sure does fill gets inserted into the database.

00:03:12.965 --> 00:03:19.760
So first of all, we have to find the controller that is responsible for registration.

00:03:19.760 --> 00:03:25.355
For that. Take a look at the attribute action of the form tag,

00:03:25.355 --> 00:03:27.755
which route has been passed here.

00:03:27.755 --> 00:03:31.380
It is the root called racer.

00:03:33.310 --> 00:03:39.575
Now open the root file or dot PHP data has been added by labial breathe.

00:03:39.575 --> 00:03:41.525
Take a look at this second route.

00:03:41.525 --> 00:03:45.830
Here, you will find two routes with this same your'e.

00:03:45.830 --> 00:03:52.175
But one of them handles a get request and BRR handle supposed to request.

00:03:52.175 --> 00:03:54.410
We are concerned about the second one.

00:03:54.410 --> 00:03:58.280
As deforms our Mason makes a post request. Here.

00:03:58.280 --> 00:03:59.855
Notice this second argument,

00:03:59.855 --> 00:04:06.800
IF function named store of the class registered user controller is being passed here.

00:04:06.800 --> 00:04:12.660
So registered user controller is the controller we are looking for.

00:04:15.010 --> 00:04:23.000
So open the file registered user controller dot PHP from the folder apps less HTTP,

00:04:23.000 --> 00:04:25.760
less controllers, less OT.

00:04:25.760 --> 00:04:28.775
And inside the functions torr,

00:04:28.775 --> 00:04:31.265
at a validation rule for the phone number.

00:04:31.265 --> 00:04:32.510
I'll keep it simple.

00:04:32.510 --> 00:04:38.400
I'll make the phone number compulsory and numeric with this rule.

00:04:40.080 --> 00:04:45.760
And after validation and instance of the class user is being created using

00:04:45.760 --> 00:04:52.520
the constructor create latest pass the phone number two from the request inputs.

00:04:56.130 --> 00:05:01.690
Finally, we have to make some changes inside the model user.

00:05:01.690 --> 00:05:08.990
So pending file user dot PHP from the folder models inside the folder app.

00:05:09.300 --> 00:05:16.610
And add a new string form to the airfield level of this class.

00:05:18.750 --> 00:05:23.115
And we're done, try registering a new user.

00:05:23.115 --> 00:05:25.985
Once the registration is successful,

00:05:25.985 --> 00:05:28.985
shake the users table on the database.

00:05:28.985 --> 00:05:33.300
Now we can see the phone number of the new user.

00:05:38.260 --> 00:05:41.390
Now we have the data that we need to show,

00:05:41.390 --> 00:05:47.630
but we don't yet have the way to fetch a user's information by ID from the users table.

00:05:47.630 --> 00:05:50.940
So in the next video, we shall find a way.
