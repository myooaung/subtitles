1
00:00:02,320 --> 00:00:08,320
So let's start improving the app from an optical perspective or not just optical but also from a user

2
00:00:08,500 --> 00:00:15,610
experience perspective here on the log in screen if we enter wrong credentials we get no visible feedback.

3
00:00:15,790 --> 00:00:21,210
We get the error message on the right but the typical user is viewing your app like this and therefore

4
00:00:21,220 --> 00:00:23,770
message is on the right are not winnable.

5
00:00:23,770 --> 00:00:25,490
So we should improve this.

6
00:00:25,630 --> 00:00:30,890
And we also totally unrelated to this might want to enter some text for the logo.

7
00:00:30,940 --> 00:00:35,970
So let's start with the logo and let's then work on the more important error feedback.

8
00:00:36,010 --> 00:00:39,630
Now for the logo we of course should go to navigation.

9
00:00:39,630 --> 00:00:40,480
Header.

10
00:00:40,600 --> 00:00:43,090
And then the header component h team out here.

11
00:00:43,120 --> 00:00:46,170
I will simply enter a name like ngi fitness.

12
00:00:46,390 --> 00:00:48,060
So now that was bugging me.

13
00:00:48,070 --> 00:00:54,230
So it's fixed onto more important authentication error feedback.

14
00:00:54,520 --> 00:01:00,840
When we do log in or sign up and we do something wrong use an e-mail address that's already taken.

15
00:01:00,880 --> 00:01:02,800
Or enter the wrong credentials.

16
00:01:02,860 --> 00:01:04,410
We get no visible error.

17
00:01:04,630 --> 00:01:08,260
So which angle a material component could help us with that.

18
00:01:09,000 --> 00:01:10,820
All ustedes snack bar.

19
00:01:10,820 --> 00:01:12,990
Now we could also simply show a dialog.

20
00:01:12,990 --> 00:01:14,010
Feel free to do that.

21
00:01:14,010 --> 00:01:19,310
We implemented the dialogue early and of course but a snack bar is also pretty neat.

22
00:01:19,320 --> 00:01:27,040
It's this message at the bottom of the screen which shows up a snack bar is implemented relatively easy.

23
00:01:27,270 --> 00:01:29,790
It's controlled programmatically.

24
00:01:29,820 --> 00:01:35,570
Why a snack bar open and you can pass some options to it to configure it.

25
00:01:35,580 --> 00:01:42,110
You can also listen to events like when it disappears or when the user clicks on it.

26
00:01:42,450 --> 00:01:50,410
So the easiest way of using a snack bar is to open it with some text and then setting a duration if

27
00:01:50,410 --> 00:01:56,420
you inspect the source code of the example up here you'll see that in the end what you want to do in

28
00:01:56,420 --> 00:02:05,690
typescript code is inject this med snack bar class year and then open the snack bar like this.

29
00:02:05,690 --> 00:02:07,290
So let's do that in our code.

30
00:02:07,290 --> 00:02:16,040
Q All First of all go to my material module because just as with all the other assets or components

31
00:02:16,070 --> 00:02:21,860
we import from the material package we need to add the mad snack bar module here.

32
00:02:22,010 --> 00:02:27,250
And of course we don't just add to the imports but all the imports and the module itself then.

33
00:02:27,380 --> 00:02:35,930
And to exports with that added We can go to the log in component and hand the case that we get an error

34
00:02:36,290 --> 00:02:40,340
or actually we might even want to do that in the log in component.

35
00:02:40,340 --> 00:02:43,680
Would it be better to do that in the off service.

36
00:02:43,880 --> 00:02:48,770
Here we have our registered user and our log in method.

37
00:02:48,950 --> 00:02:52,110
And in both we already have our catch blocks.

38
00:02:52,370 --> 00:02:55,290
So this is where we want to show a snack bar.

39
00:02:55,520 --> 00:03:01,930
We can do that easily by injecting this man's snack bar into the off service.

40
00:03:02,090 --> 00:03:08,090
So I'll bind it to a private property called snack bar and the type now is Matt snack bar.

41
00:03:08,090 --> 00:03:13,820
You need to import that from angular materials so you need to add this import here.

42
00:03:14,390 --> 00:03:21,110
With that added and with that inject that we can go to register user and instead of Konsole logging

43
00:03:21,110 --> 00:03:27,430
the error we can simply reach out to our snack bar and call the open method.

44
00:03:27,440 --> 00:03:29,480
Now here I'll pass a message.

45
00:03:29,480 --> 00:03:36,710
So what I want to display and dad message simply is the error message.

46
00:03:36,710 --> 00:03:42,380
Thankfully the error object we're getting back from firebase has a message properties so we can just

47
00:03:42,440 --> 00:03:48,890
access it like this then next argument would be a potential action like a button we can click.

48
00:03:49,100 --> 00:03:52,210
This could be clicked to dismiss the snack bar.

49
00:03:52,220 --> 00:03:58,130
Now I don't want to set an action so I'll set this to null and instead just pass an object to configure

50
00:03:58,130 --> 00:04:04,390
it is where we can set the duration key to free thousand to show it is for free seconds.

51
00:04:04,400 --> 00:04:10,850
Now if you wanted to use an action you can see this in the official docs to you simply pass the label

52
00:04:10,850 --> 00:04:18,500
of the button here and then you can handle the clicking of the action here with the on action listener

53
00:04:18,680 --> 00:04:25,130
on the snack bar reference which is filtered by the open method here and there you could then react

54
00:04:25,130 --> 00:04:26,730
to this button being clicked.

55
00:04:26,840 --> 00:04:34,250
With that let's copy that code from the log in to me from the register user method and also put the

56
00:04:34,250 --> 00:04:37,910
same logic into our log in handler.

57
00:04:38,180 --> 00:04:45,020
With that let's save all files and go back to the running project and now enter incorrect credentials

58
00:04:45,020 --> 00:04:45,920
again.

59
00:04:46,280 --> 00:04:51,220
And you see if we get an error at the bottom the password is invalid or the user doesn't have a password.

60
00:04:51,320 --> 00:04:55,730
And if I do sign up and I use the e-mail address that's already taken.

61
00:04:55,730 --> 00:04:58,840
The rest is actually correct but the e-mail address is taken.

62
00:04:58,970 --> 00:05:01,260
Then I get this as an error.

63
00:05:01,400 --> 00:05:07,790
And on the other hand if we do enter correct credentials here like the e-mail address and the password

64
00:05:08,180 --> 00:05:11,470
then we of course are locked in successfully.

65
00:05:11,480 --> 00:05:18,640
Now one thing I want to do is I want you all to show a spinner while we're waiting for the logon firebase

66
00:05:18,650 --> 00:05:22,270
is actually super fast but still this is something we can do.

67
00:05:22,400 --> 00:05:24,560
Let's implement this in the next lecture.

