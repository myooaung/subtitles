1
00:00:02,360 --> 00:00:06,770
This far in the module we applied multiple optical improvements.

2
00:00:06,830 --> 00:00:11,220
Now we can work on the technical side and the technical side.

3
00:00:11,270 --> 00:00:14,400
I mainly mean splitting up the app module.

4
00:00:14,420 --> 00:00:16,370
It's OK we could leave it like this.

5
00:00:16,370 --> 00:00:22,900
We don't have a super big app but we already have a lot of imports and declarations in the app module.

6
00:00:22,910 --> 00:00:29,360
So it would make sense to split our application up into feature modules and maybe also add a core module.

7
00:00:29,360 --> 00:00:31,720
Now let's see what makes sense.

8
00:00:32,320 --> 00:00:39,020
We can certainly add feature modules we can add a feature module for a training feature and one for

9
00:00:39,030 --> 00:00:40,630
you off feature.

10
00:00:40,690 --> 00:00:46,120
So these two modules certainly make sense and they allow us to move the components which belong to a

11
00:00:46,120 --> 00:00:50,920
certain feature into that module and therefore clean up the app module.

12
00:00:51,100 --> 00:00:52,240
So let's start with that.

13
00:00:52,270 --> 00:00:58,160
Let's start with a feature module 40 of part next to the off servers and off guard.

14
00:00:58,270 --> 00:01:04,820
I'll add a ofter module that yes file I'll simply export a class here of module.

15
00:01:05,020 --> 00:01:10,270
And this has turned into a module by adding the Ngee module decorator.

16
00:01:10,270 --> 00:01:16,390
Now the Ngee module decorator needs to be imported and it is imported from at angular core.

17
00:01:16,540 --> 00:01:24,850
So make sure to add this import at the top of your file import module from at angular core.

18
00:01:25,180 --> 00:01:33,280
With that added We should add some while configurations are an object we passed to Engy module to Engy

19
00:01:33,280 --> 00:01:34,250
module.

20
00:01:34,600 --> 00:01:38,110
And here we have to add some declarations.

21
00:01:38,110 --> 00:01:46,240
So the components we use in this module we might need to add some imports and we might need to add some

22
00:01:46,300 --> 00:01:47,520
exports.

23
00:01:47,520 --> 00:01:49,030
Now let's see what we need.

24
00:01:49,300 --> 00:01:55,930
We don't add providers here because we actually should always provide your services in the app module

25
00:01:55,930 --> 00:01:57,760
if you plan on using them.

26
00:01:57,760 --> 00:02:03,070
Application wide or in general if you plan on using them as a singleton.

27
00:02:03,080 --> 00:02:07,930
Once you can learn more about this in my complete guide course where I dive into modules in way greater

28
00:02:07,930 --> 00:02:12,300
depth as I dive into all angular topics in way greater depth there.

29
00:02:12,400 --> 00:02:16,290
So which declarations should we add to the of module now.

30
00:02:16,360 --> 00:02:18,180
We have a look at the map module.

31
00:02:18,280 --> 00:02:23,560
We certainly have to sign up component and the log in component that does not belong to the entire app

32
00:02:23,590 --> 00:02:26,240
but to the of module to the feature.

33
00:02:26,320 --> 00:02:31,660
So catch them from the declarations in the app module and I'll remove the imports.

34
00:02:32,020 --> 00:02:36,510
And instead I go to the off module and add them two declarations here.

35
00:02:36,880 --> 00:02:39,090
This means we all have to add the imports here.

36
00:02:39,160 --> 00:02:47,520
So at the import to sign up component from the Sign-Up folder the sign up component file there and the

37
00:02:47,520 --> 00:02:56,310
same for the log in component which is fetched from the log in folder and there from the log in component

38
00:02:56,310 --> 00:02:57,810
file.

39
00:02:57,810 --> 00:03:02,480
So that are my declarations which are relevant to the off module.

40
00:03:02,490 --> 00:03:05,360
Now what about imports and exports.

41
00:03:05,700 --> 00:03:12,350
Well in the app module we clearly have our angular material module which we import.

42
00:03:12,450 --> 00:03:18,300
This one we also got routing and flex layout and the forms module and so on.

43
00:03:18,300 --> 00:03:24,720
Now the important thing to keep in mind is that just because you import something into the airport all

44
00:03:25,290 --> 00:03:32,640
this does not make it available in over modules even if these modules are kind of child modules to at

45
00:03:32,680 --> 00:03:40,830
Marchal because you could think that since we created this off module that you simply imported so import

46
00:03:41,100 --> 00:03:43,180
of modules from.

47
00:03:43,180 --> 00:03:50,370
And now let's go to the off section and there import that of Marchal file and then you add all module

48
00:03:50,430 --> 00:03:53,950
to the imports array of your app module like this.

49
00:03:54,390 --> 00:04:03,690
If you do this it compiles successfully but your app will now actually break with a bunch of error messages.

50
00:04:03,710 --> 00:04:05,570
We have a look at these error messages.

51
00:04:06,630 --> 00:04:13,170
We essentially get messages like Engy form is unknown but also a couple of material components are unknown.

52
00:04:13,200 --> 00:04:15,310
The reason for this is what I just said.

53
00:04:15,570 --> 00:04:22,890
The things you import into your app Marchal are not passed down to the off module they're not exchanged

54
00:04:22,890 --> 00:04:24,090
between modules.

55
00:04:24,150 --> 00:04:26,730
Each module works standalone.

56
00:04:27,030 --> 00:04:32,020
So what ever you need in the off module has to be added as an import there.

57
00:04:32,070 --> 00:04:39,110
Most importantly that's for example the and module a module that gives us access to NGF and so on.

58
00:04:39,210 --> 00:04:46,540
You imported from an angle or common now in the off module we have to sign up into loggin component

59
00:04:47,080 --> 00:04:48,850
and into log in component.

60
00:04:48,850 --> 00:04:54,150
We use the reactive form approach in the Sign-Up of component.

61
00:04:54,250 --> 00:04:57,270
We use the template driven forms approach.

62
00:04:57,280 --> 00:05:08,570
Now this means we also will need to add forms module and reactive forms module to our imports both it's

63
00:05:08,610 --> 00:05:15,450
imported from at Angola forums and we also use material components from angular material.

64
00:05:15,590 --> 00:05:18,930
That is why we also need to add the material module here.

65
00:05:19,170 --> 00:05:26,560
So make sure to add this in order at the top and additionally entry and the import cere here to now

66
00:05:26,630 --> 00:05:29,100
we go back.

67
00:05:29,320 --> 00:05:32,520
This looks better but the styling is off.

68
00:05:32,560 --> 00:05:40,800
The reason for this is that we also should import our flex lay out module this flex layout module here

69
00:05:41,470 --> 00:05:45,730
because we use this flex layout positioning here and we don't get an error.

70
00:05:45,850 --> 00:05:49,220
But still the directives will now not be recognized.

71
00:05:49,270 --> 00:05:58,820
So let's add the flex lay out module which you import from angular flex layout out if you do that.

72
00:05:58,920 --> 00:06:03,500
Now this looks much better if you have a look at the sign up and log and component.

73
00:06:03,810 --> 00:06:10,170
Now if you're worried about increasing your Bunuel size by importing some modules both here in the off

74
00:06:10,170 --> 00:06:13,310
module anti-particle this is not the case.

75
00:06:13,470 --> 00:06:16,730
Angular manages this cleverly behind the scenes.

76
00:06:16,950 --> 00:06:22,290
So the key takeaway is if you use something in a module you need to import there the things are not

77
00:06:22,290 --> 00:06:24,920
exchanged between modules.

78
00:06:24,960 --> 00:06:31,950
Now these adjustments also mean that we can get rid of the reactive forms module and the forms module

79
00:06:32,040 --> 00:06:39,780
from the app module because we only use Fordham's here in our off module and also in part of the training

80
00:06:40,200 --> 00:06:41,830
module once we created that.

81
00:06:41,880 --> 00:06:43,980
But this will all become a future module.

82
00:06:44,010 --> 00:06:47,760
So there's nothing Giddyap component where we would need this.

83
00:06:47,760 --> 00:06:56,010
Speaking off that in the next lecture we'll create our training module and also restructure our app

84
00:06:56,010 --> 00:06:57,130
for Daten.

85
00:06:57,150 --> 00:06:58,750
So let's move on to this.

