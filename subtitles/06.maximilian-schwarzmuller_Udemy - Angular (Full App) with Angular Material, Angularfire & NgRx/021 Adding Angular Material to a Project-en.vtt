WEBVTT
1

00:00:02.090 --> 00:00:09.830

So let's set up a project where we use the angle material package we can find all the steps we need



2

00:00:09.830 --> 00:00:11.910

to execute on this page.



3

00:00:12.080 --> 00:00:13.200

And important.



4

00:00:13.250 --> 00:00:17.510

You don't install the angular material package globally on your machine.



5

00:00:17.510 --> 00:00:21.690

It's not a tool it's not a global program on your computer.



6

00:00:21.990 --> 00:00:27.400

It's per project dependency which you can drop into any angular project.



7

00:00:27.400 --> 00:00:33.020

This of course means that you need an angle or project and I strongly recommend creating that project



8

00:00:33.140 --> 00:00:34.860

with the angular Seelye.



9

00:00:34.970 --> 00:00:36.980

This is what we will do in this course too.



10

00:00:37.100 --> 00:00:44.090

So let's first of all ensure that the seal is installed you install the seal I from within the command



11

00:00:44.090 --> 00:00:49.040

line tool or the terminal depending on whether you are on Mac and Windows the steps are to say to install



12

00:00:49.040 --> 00:00:49.650

the seal.



13

00:00:49.670 --> 00:00:55.550

You will need NPM know it's package manager which is a dependency management tool that's commonly used



14

00:00:55.550 --> 00:01:00.890

to install all kinds of dependencies both in a project as it will do it later with Angle a material



15

00:01:01.130 --> 00:01:02.970

or globally on your machine.



16

00:01:03.050 --> 00:01:10.370

Therefore you will need node J.S. not only for that package management tool it ships with but also because



17

00:01:10.370 --> 00:01:17.480

you will need no chase itself for the development server Seelye creates a server that hosts your application



18

00:01:17.480 --> 00:01:19.960

your angular application during development.



19

00:01:20.210 --> 00:01:25.610

We're not going to write any Nokia's code but we still will need a server to test everything.



20

00:01:25.640 --> 00:01:29.300

And that's just what we can host with no Chason what the seal I will give us.



21

00:01:29.300 --> 00:01:32.480

Out of the box without us writing any Chia's code.



22

00:01:32.780 --> 00:01:36.830

So download the latest version of Nokia's lined up for in my case.



23

00:01:36.830 --> 00:01:38.560

Or if you're facing any issues.



24

00:01:38.690 --> 00:01:45.320

Pick the long term stability where an 8.9 and like his here and try this one once you've got no chips



25

00:01:45.320 --> 00:01:46.060

installed.



26

00:01:46.100 --> 00:01:49.310

You've got a convenient installer where you simply walk through the steps.



27

00:01:49.460 --> 00:01:57.560

You install the seal either running NPM install Dashti at angular Selye anywhere on your machine.



28

00:01:57.590 --> 00:02:04.010

So anywhere in your terminal on your machine on Mac and Linux you might need to add a pseudo in front



29

00:02:04.010 --> 00:02:06.380

of this command to give it the right permissions.



30

00:02:06.380 --> 00:02:11.410

Thereafter you may or may not be prompted to enter a password and it will then stall the seal Eitel



31

00:02:11.450 --> 00:02:13.440

globally on your machine.



32

00:02:13.700 --> 00:02:18.130

This can take a couple of minutes and I'll be back once it's finished the installation of the seal I've



33

00:02:18.130 --> 00:02:22.060

finished and now you can use it to create a new angle or project.



34

00:02:22.070 --> 00:02:27.620

So for that you should navigate into the folder in the terminal where you want to create that project



35

00:02:28.010 --> 00:02:33.410

and then run Engy new to create a new project and then the name of the project since we're building



36

00:02:33.410 --> 00:02:39.510

a fitness tracker in this course all on the project fitness tracker but the name is totally up to you.



37

00:02:39.530 --> 00:02:48.170

You hit enter and now does will create a single project with the configuration files it needs with the



38

00:02:48.500 --> 00:02:52.660

default component it starts with and everything it requires.



39

00:02:52.670 --> 00:02:58.520

It will all install all the dependencies of the project both development dependencies like WEP pack



40

00:02:58.550 --> 00:03:00.680

which bundles and optimize your code.



41

00:03:00.770 --> 00:03:04.960

Or of course production dependencies like the angular packages itself.



42

00:03:05.090 --> 00:03:08.620

This can also take a couple of seconds and I'll be back once this is finished.



43

00:03:08.760 --> 00:03:16.500

So if the project is finished we can now navigate into it and finally install angular material Angelyn



44

00:03:16.580 --> 00:03:19.860

material is just a number dependency of our project then.



45

00:03:20.090 --> 00:03:21.680

So how do we install it.



46

00:03:21.830 --> 00:03:26.010

Well we can find all the steps in the Getting Started Guide on material to England.



47

00:03:26.060 --> 00:03:30.520

I know we can copy dead command here to use NPM.



48

00:03:30.560 --> 00:03:37.100

An alternative would be Arnon alternative to NPM but we will use NPM And of course to install both angular



49

00:03:37.100 --> 00:03:41.240

material anti-hunger or CDK on which material builds up.



50

00:03:41.360 --> 00:03:42.090

So we need both.



51

00:03:42.090 --> 00:03:44.670

So copy the entire command.



52

00:03:44.810 --> 00:03:46.400

So you simply run this command.



53

00:03:46.430 --> 00:03:49.250

Inside your project folder you just created.



54

00:03:49.490 --> 00:03:50.470

No it doesn't.



55

00:03:50.580 --> 00:03:54.190

This is really only needed as a dependency of angular material.



56

00:03:54.200 --> 00:03:56.810

You don't have to build your own components with it.



57

00:03:56.810 --> 00:04:02.150

We will build our own components but just normal components of which we compose our app in which we



58

00:04:02.150 --> 00:04:06.020

will in turn use Anglo material components.



59

00:04:06.020 --> 00:04:08.850

So now the two packages are installed.



60

00:04:09.060 --> 00:04:12.710

The next step would be here and you can skip it.



61

00:04:12.710 --> 00:04:17.140

An alternative basically to use the cutting edge latest version directly from get happen.



62

00:04:17.150 --> 00:04:22.710

We will do that so we will use the ones which are published 22:00 and can go to Step Two.



63

00:04:23.060 --> 00:04:29.950

Now here we need to install the angler any missions package because Ingela material uses that package.



64

00:04:29.960 --> 00:04:36.950

However before you run this command Let's open the project in some editor of your choice and see if



65

00:04:36.950 --> 00:04:42.380

we already got that package installed maybe because for new or word of the Seelye that should be the



66

00:04:42.380 --> 00:04:43.230

case.



67

00:04:43.670 --> 00:04:51.890

I hope the project in Visual Studio code and does this the angler's Seelye project was created for us.



68

00:04:51.890 --> 00:04:57.410

If you have a look at the package dodgiest and fall you can see that the angular animation package is



69

00:04:57.470 --> 00:05:01.950

already installed though so you don't need to install that again.



70

00:05:02.030 --> 00:05:03.350

It's already there.



71

00:05:03.350 --> 00:05:07.230

Here you can also see the CDK and the material package we just installed.



72

00:05:07.550 --> 00:05:11.050

So angular animations isn't Stoltze we can skip this step.



73

00:05:11.120 --> 00:05:17.400

We shouldn't skip the next step though where we import the browser animations module and added to our



74

00:05:17.420 --> 00:05:22.790

project setup so that we really can use a nations in our project in angular.



75

00:05:22.790 --> 00:05:28.400

You have to explicitly add all the features you want to use so that your code can be optimized.



76

00:05:28.400 --> 00:05:36.260

So let's go to the source app folder and there the app module and then there you now should import that



77

00:05:36.260 --> 00:05:45.230

browser animations module so import browser animations module from and then it's at a singular platform



78

00:05:45.230 --> 00:05:51.110

browser and there slash animations be out of it.



79

00:05:51.380 --> 00:05:54.430

This is the full import we need.



80

00:05:54.620 --> 00:06:02.640

And you simply need to add that browser animations module to your imports array in the app module that



81

00:06:02.660 --> 00:06:03.820

saved that file.



82

00:06:03.890 --> 00:06:06.720

And you got this step completed too.



83

00:06:06.950 --> 00:06:12.660

Now step three is to import the component modules you plan on using.



84

00:06:12.980 --> 00:06:16.510

Now this is important in angular material.



85

00:06:16.670 --> 00:06:22.970

Every component has its own module which you need to import to be able to use that component like for



86

00:06:22.970 --> 00:06:28.750

example the button component get its own module the checkbox to drop down and so on.



87

00:06:28.760 --> 00:06:33.000

The reason for this is simple by putting everything into its own module.



88

00:06:33.050 --> 00:06:37.600

Your code can be optimized and be made as small as possible.



89

00:06:37.610 --> 00:06:42.690

You're not importing all components of angular material by default but only what you need.



90

00:06:42.800 --> 00:06:47.490

Which means the code you ship to the user in the end is also only what your app needs.



91

00:06:47.570 --> 00:06:50.030

And therefore as small as possible.



92

00:06:50.030 --> 00:06:54.990

One thing you can do though to not put all these imports into your app marginal and therefore get a



93

00:06:55.010 --> 00:07:00.950

really fat and bake app Marchal you can create a separate module that you simply import into the app



94

00:07:00.950 --> 00:07:04.150

module but which you use to manage all the material.



95

00:07:04.280 --> 00:07:06.330

Module imports and exports therefore.



96

00:07:06.410 --> 00:07:12.950

And this is what I will do so next to the app module I will trade a material or module the TS file and



97

00:07:12.950 --> 00:07:20.360

simply export a new class in there which is named material module and this will be a modular angular



98

00:07:20.360 --> 00:07:26.630

module I use to manage all the material package imports and then also exports to make it available outside



99

00:07:26.630 --> 00:07:27.590

of this module.



100

00:07:27.860 --> 00:07:36.320

So we add DNG modules decorator Tudor's class here to turn it into a angular module and this decorator



101

00:07:36.440 --> 00:07:37.630

needs to be in order.



102

00:07:37.640 --> 00:07:43.360

So Engy module needs to be imported from at angular core.



103

00:07:43.430 --> 00:07:48.810

Now this is a single module and we want to declare components in there or something like that.



104

00:07:48.920 --> 00:07:55.160

We will simply import modules from the Anglo material package and these imported modules will do the



105

00:07:55.160 --> 00:07:56.760

declarations for us.



106

00:07:57.050 --> 00:08:03.080

So therefore we will need an import serrate where we will step by step and the packages or modules of



107

00:08:03.080 --> 00:08:04.670

the various components we use.



108

00:08:04.670 --> 00:08:10.760

However the goal of course is to simply import the material module into the Yapp module so did we just



109

00:08:10.760 --> 00:08:16.130

have the functionality outsourced we still want to use it in the app module and the components that



110

00:08:16.130 --> 00:08:17.990

belong to the app Marchal.



111

00:08:17.990 --> 00:08:24.940

Therefore we will also add a exports array where we will export all the imported material modules.



112

00:08:24.980 --> 00:08:29.920

Sounds strange but the idea really is to have an extra file or we managed imports.



113

00:08:30.020 --> 00:08:36.040

So these modules and we need to export that to make it available outside of this material module too.



114

00:08:36.200 --> 00:08:38.400

So we're really just shifting code.



115

00:08:38.570 --> 00:08:47.240

But with that we can go to the app module and there will add an import queue material module and point



116

00:08:47.270 --> 00:08:49.540

to that material to a module file.



117

00:08:49.940 --> 00:08:55.680

And now we can import the material modules here in the lab module by adding it to the imports array



118

00:08:56.060 --> 00:09:01.570

and we will get access to all the modules exported in the material module.



119

00:09:01.610 --> 00:09:03.660

Can you hear the word modules still.



120

00:09:03.890 --> 00:09:09.170

Well the idea simply is that we can manage our material imports in a separate file but still have access



121

00:09:09.170 --> 00:09:10.810

to them in the entire app.



122

00:09:11.360 --> 00:09:16.910

So this is the set up we will use and we will add all the component modules we need to that material



123

00:09:16.910 --> 00:09:18.230

module file.



124

00:09:18.260 --> 00:09:22.030

This is a pattern suggested in the official getting started guide.



125

00:09:22.090 --> 00:09:29.460

With that we can move forward two steps forward including a theme for that we should copy this in order



126

00:09:29.460 --> 00:09:38.800

here and import angular material people themes and go to the style Start CSSA file and add does import.



127

00:09:38.810 --> 00:09:41.830

This is important angular material components.



128

00:09:41.900 --> 00:09:43.090

Use a theme.



129

00:09:43.120 --> 00:09:49.020

FEMA is just a color combination of a primary color X and color and a warning color in its core.



130

00:09:49.040 --> 00:09:51.170

We will dive into theming later in the course.



131

00:09:51.260 --> 00:09:54.820

Now angular material ships with a couple of pre-build themes.



132

00:09:54.980 --> 00:10:01.250

You can actually see all of them by accessing node modules at Engler and their material and there as



133

00:10:01.300 --> 00:10:02.990

free both themes folder.



134

00:10:03.140 --> 00:10:05.090

You see we've got four pre-build themes.



135

00:10:05.180 --> 00:10:06.670

We're using the Indico pink.



136

00:10:06.700 --> 00:10:08.800

C s s one in this case.



137

00:10:08.870 --> 00:10:13.450

So these are the themes you could choose from and they will give you different color combinations.



138

00:10:13.610 --> 00:10:19.550

And by adding the import here all angular material components will automatically use that color combination.



139

00:10:19.580 --> 00:10:26.720

So that's really useful with that added We have to add gesture support this required to be able to use



140

00:10:26.720 --> 00:10:31.370

gestures on mobile devices like for example sliding with the finger.



141

00:10:31.370 --> 00:10:37.250

For that we will use an external library which is used behind the scenes by angle of material and that



142

00:10:37.250 --> 00:10:38.740

is hammer J.S..



143

00:10:38.960 --> 00:10:46.010

So you can copy this command and executed in the terminal navigate it into the project folder here using



144

00:10:46.010 --> 00:10:47.870

the one integrated into the ID.



145

00:10:47.930 --> 00:10:50.790

This is the normal operating system terminal though.



146

00:10:50.990 --> 00:10:53.630

Just navigate into the project already.



147

00:10:53.930 --> 00:10:55.670

Simply hit enter.



148

00:10:55.790 --> 00:10:58.470

And this will install Hamre genius.



149

00:10:58.520 --> 00:11:04.730

Now this will install it but to use it we need to include in our bundle and to include it we go to the



150

00:11:04.730 --> 00:11:12.650

main Katia's file and at the very top you simply add import Hamre J.S. and this will pull the dependency



151

00:11:12.770 --> 00:11:20.810

into our final bundle so that it is a whaleboat in the code we shipped to the user now that six step



152

00:11:20.870 --> 00:11:27.200

is to add angular material Aikins this is a special I can set you can find out more by clicking this



153

00:11:27.200 --> 00:11:32.380

link which allows you to use all these icons in your app with little effort.



154

00:11:32.420 --> 00:11:35.990

We will dive into icons and how you use them later in the course of course.



155

00:11:36.110 --> 00:11:42.170

But in order to be able to use them at all you need to add this link here to your index team of file



156

00:11:42.320 --> 00:11:46.010

in the head section right at the end of the head section for example.



157

00:11:46.010 --> 00:11:51.440

With that we import these icons from a CDN and can therefore later use them.



158

00:11:51.500 --> 00:11:54.080

Now you can skip the system JSM step.



159

00:11:54.110 --> 00:11:59.930

We're using a seal I project and therefore web page so does doesn't matter and therefore we are done



160

00:11:59.930 --> 00:12:00.720

with the set up.



161

00:12:00.770 --> 00:12:05.670

We now get a project where we imported angular material and where we can get started.



162

00:12:05.690 --> 00:12:11.710

So let's get started and let's dive into how to use angular material.



