1
00:00:02,620 --> 00:00:09,310
We created our very basic form which we can submit but where we get absolutely no validation.

2
00:00:09,310 --> 00:00:14,770
It would be nice if we could for one show some hints like for example passwords should be a minimum

3
00:00:14,770 --> 00:00:17,940
of six characters long and error messages.

4
00:00:17,950 --> 00:00:21,890
If the user does enter something wrong so that we can tell him.

5
00:00:22,210 --> 00:00:29,200
So let's implement validation now implementing validation is pretty straightforward and works exactly

6
00:00:29,200 --> 00:00:33,950
as you learned it in your favorite dangler course which hopefully is mine of course.

7
00:00:34,180 --> 00:00:39,910
No seriously I'll just distribute this over multiple lines here and then I add a validator to the email

8
00:00:39,910 --> 00:00:46,070
input by adding For example the e-mail directive which is built into angular not angular material.

9
00:00:46,090 --> 00:00:50,330
It's not related to angular material at all because that's important.

10
00:00:50,500 --> 00:00:57,250
We added Matt inport gift this material these signs style and adds this floating label functionality

11
00:00:57,460 --> 00:01:00,130
which is more than just some see is s.

12
00:01:00,310 --> 00:01:08,680
But then we use all the normal things like ngi model or dis built in e-mail directive to control is

13
00:01:08,830 --> 00:01:12,820
as we would control any input in any angular app.

14
00:01:12,820 --> 00:01:18,050
So at email here it'll add required and for the password.

15
00:01:18,190 --> 00:01:24,250
I also want to add some directives or some validation helpers.

16
00:01:24,460 --> 00:01:28,980
So there I will also distribute this over multiple lines.

17
00:01:28,990 --> 00:01:34,250
I will make this required and I want to set up a mean length for this.

18
00:01:34,250 --> 00:01:40,180
I'll add the min length attribute here and assign a value of 6.

19
00:01:40,190 --> 00:01:46,160
So now whatever we entered the password field should be at least six characters long to be treated as

20
00:01:46,160 --> 00:01:48,090
a valid.

21
00:01:48,100 --> 00:01:55,870
Now I want to show a hint to the user that informs him about this requirement of six characters because

22
00:01:55,870 --> 00:02:01,670
whilst you might be able to guess that Emaar password is required entity email should be e-mail.

23
00:02:01,750 --> 00:02:08,440
The fact that the password is six characters long at the minimum is something that is not obvious.

24
00:02:08,680 --> 00:02:16,720
So we should add a hint in our HMO code below the input here where we have this requirement or where

25
00:02:16,720 --> 00:02:18,780
we want to show ahint in general.

26
00:02:19,090 --> 00:02:23,780
I add a special component mad dash hint.

27
00:02:23,830 --> 00:02:30,060
Now this component here actually is part of the form field component.

28
00:02:30,190 --> 00:02:34,090
You don't need to add an extra import to the material module.

29
00:02:34,090 --> 00:02:35,600
Now how do you know that.

30
00:02:35,740 --> 00:02:43,450
Well from the official documentation simply there if we have a look click at Ford Field where we were

31
00:02:43,450 --> 00:02:47,870
at Hint labels already and there you see this matines component.

32
00:02:48,130 --> 00:02:58,670
So in our component code I will just add the hint in here should be at least six characters long.

33
00:02:58,840 --> 00:03:05,950
And the final is safe and we go back to our application we see this hint below our password field.

34
00:03:05,950 --> 00:03:07,730
Now the but does a little bit to close.

35
00:03:07,750 --> 00:03:09,250
We'll fix that in a second.

36
00:03:09,280 --> 00:03:13,990
This is our hint that this is actually only one of two ways of adding a hint.

37
00:03:14,740 --> 00:03:22,420
Besides using Matt here you can also add a special property binding to the mat form field components

38
00:03:22,430 --> 00:03:25,500
here which is called hint label.

39
00:03:25,510 --> 00:03:27,370
You can also enter the text here.

40
00:03:28,300 --> 00:03:37,090
So we could also just grab that text from there and place it here between the double quotation marks

41
00:03:37,090 --> 00:03:38,290
for hint label.

42
00:03:38,530 --> 00:03:43,290
If I say if doesn't go back we get the exact same output as before.

43
00:03:43,330 --> 00:03:47,870
Now which of the two solutions you choose is up to you.

44
00:03:47,890 --> 00:03:54,470
The cool thing is you can also combine them you can add a hint label and add a second hand.

45
00:03:54,730 --> 00:04:01,080
You then should specify a line and start would be an alternative start is to default to position it

46
00:04:01,090 --> 00:04:08,350
at the left basically but end will now put it all the way to the right and allows you to put a second

47
00:04:08,440 --> 00:04:09,150
hint.

48
00:04:09,160 --> 00:04:10,870
Now the cool thing is you can combine them.

49
00:04:10,990 --> 00:04:16,230
But for example showing the current character count here to help the user estimate how many characters

50
00:04:16,240 --> 00:04:17,600
he should still enter.

51
00:04:17,860 --> 00:04:25,720
So there for example you could define that all of the characters you expect he already got well whatever

52
00:04:25,720 --> 00:04:26,610
he got.

53
00:04:26,620 --> 00:04:35,500
So there for example we could add a local reference to this and put P.W. in put maybe and bind us to

54
00:04:35,500 --> 00:04:36,820
Engy model.

55
00:04:36,820 --> 00:04:42,970
This will now be bound to the underline object managed by angular and will automatically get access

56
00:04:42,970 --> 00:04:47,380
to that control and we can then output the value of the control here.

57
00:04:48,860 --> 00:04:57,660
So we could output P.W. input value questionmark length the question mark is required to not get an

58
00:04:57,660 --> 00:04:58,330
error.

59
00:04:58,470 --> 00:05:00,680
In cases where does this somehow No.

60
00:05:00,900 --> 00:05:07,090
Now with that if we save that and go back we see does hint here at the right.

61
00:05:07,250 --> 00:05:13,970
And if I start entering text here you'll see that this now well adds up and we can actually see how

62
00:05:13,970 --> 00:05:18,260
many characters we add it does how we can add a hint.

63
00:05:18,260 --> 00:05:24,290
Now you can also add an error message because as you see it turns red if I click in there and go out

64
00:05:24,290 --> 00:05:31,400
there out of there without entering a valid value there is some convenience functionality added by the

65
00:05:31,700 --> 00:05:38,600
form field component and it shows that angular components angular material components I should say are

66
00:05:38,600 --> 00:05:40,920
more than just some stylings.

67
00:05:41,210 --> 00:05:44,800
But of course just turning this red might not be all you want to do.

68
00:05:44,840 --> 00:05:51,020
Maybe you will want to show an error in this case and showing Erhard's is also possible.

69
00:05:51,320 --> 00:05:54,890
Let's say want to add an error message for the email input.

70
00:05:55,070 --> 00:06:02,180
We then add the mad dash error component which we also don't have to import separately it's all a part

71
00:06:02,180 --> 00:06:03,490
of math for that field.

72
00:06:03,860 --> 00:06:06,470
And then we can output any error message we want.

73
00:06:06,560 --> 00:06:11,560
Like for example e-mail is invalid.

74
00:06:13,100 --> 00:06:15,260
Now if I save this

75
00:06:18,160 --> 00:06:25,370
it click in there like out of there we get this error message whenever Actually whenever the whole form

76
00:06:25,370 --> 00:06:26,000
is invalid.

77
00:06:26,000 --> 00:06:27,420
And that's important.

78
00:06:27,440 --> 00:06:29,740
This might not be what you want.

79
00:06:29,840 --> 00:06:34,720
Maybe it is maybe Here it is because it pretty much is the only source though.

80
00:06:34,750 --> 00:06:40,790
For example if I click out there without entering anything the actual error also is that we didn't enter

81
00:06:40,790 --> 00:06:43,550
anything so we can display multiple errors.

82
00:06:43,550 --> 00:06:48,690
We can also say field must not be empty.

83
00:06:48,810 --> 00:06:55,840
We add this and we save this and I click in there and out of there we get both error messages.

84
00:06:56,040 --> 00:07:02,170
Typically you only want to show one though to not put too many error messages on the screen.

85
00:07:02,580 --> 00:07:07,800
You can control this with NGF of course because you're dealing with normal components in the end.

86
00:07:07,800 --> 00:07:13,140
Always keep in mind no matter what they look like and what their name is you're working with normal

87
00:07:13,390 --> 00:07:16,950
h t m l elements if you want to put it like this.

88
00:07:16,950 --> 00:07:24,060
So you can now use NGF to control whether you want to show this error or Diablo 1 and to do this we

89
00:07:24,060 --> 00:07:31,080
can get access to the e-mail input field e-mail input and bind this to entry model to get access to

90
00:07:31,080 --> 00:07:38,280
the underlying automatically created object and we could only show the field must not be empty or if

91
00:07:38,370 --> 00:07:47,330
e-mail input has an error or that is called required which is the automatically generated error message

92
00:07:47,340 --> 00:07:50,380
for the required validator.

93
00:07:50,470 --> 00:07:56,640
If we now save this and I click in there and out of there we get both.

94
00:07:56,820 --> 00:08:04,530
But if I start typing I only get e-mail it's invalid because the required error is no longer occurring.

95
00:08:04,680 --> 00:08:14,310
So we can also add Angi if here of course and say we only want to show that e-mail error if we don't

96
00:08:14,310 --> 00:08:21,030
have the required error and the field is still invalid somehow.

97
00:08:21,280 --> 00:08:26,820
So now if we save this what we get is if we click in there we only have to feel that this must not BMT

98
00:08:26,950 --> 00:08:27,560
error.

99
00:08:27,770 --> 00:08:33,010
But if I start typing something which is not a valid email we get this error.

100
00:08:33,260 --> 00:08:36,620
And as a side note error is over right hence.

101
00:08:36,620 --> 00:08:43,490
So if you also add the error message to the password field below met him for example you add math error

102
00:08:43,880 --> 00:08:55,780
and you say has to be at least six characters long then you will see you get the hint by default.

103
00:08:55,790 --> 00:08:59,320
But if you click in there it out of there it's overridden by the error.

104
00:08:59,600 --> 00:09:05,690
As soon as you start typing and fulfill the criteria or the hint comes back in.

105
00:09:05,690 --> 00:09:09,630
So this is how you can work with hints and errors.

106
00:09:09,950 --> 00:09:16,280
These are special functionalities which are part of math for any field and it hopefully shows the power

107
00:09:16,370 --> 00:09:26,900
of this component with a few simple to add components you turn your normal input into a nice input providing

108
00:09:26,900 --> 00:09:33,860
a good user experience with nice looking hints and errors without you writing any CSSA or javascript

109
00:09:33,860 --> 00:09:35,730
code to control all of that.

