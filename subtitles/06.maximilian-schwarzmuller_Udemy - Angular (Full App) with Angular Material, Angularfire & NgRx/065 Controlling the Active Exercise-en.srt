1
00:00:02,150 --> 00:00:03,410
What are you successful.

2
00:00:03,530 --> 00:00:07,580
Now let's try this out step by step in the training service.

3
00:00:07,640 --> 00:00:15,410
I want to meet an event as I said before that I don't use DA or event emitter as you learn but you are

4
00:00:15,410 --> 00:00:18,140
actually a subject so import

5
00:00:20,680 --> 00:00:27,020
subject from our exchange as Slash subject like that.

6
00:00:27,130 --> 00:00:31,590
I now want to create a new property here.

7
00:00:32,850 --> 00:00:37,960
Maybe right at the top which I'll name exercise changed

8
00:00:40,530 --> 00:00:47,850
which is a new subject that will eventually hold a payload of type exercise because I want to pass to

9
00:00:47,850 --> 00:00:54,510
select that exercise to whoever is listening so that whoever's listening knows which exercise was chosen.

10
00:00:54,930 --> 00:01:01,370
So exercise changed is now something I have to execute here in start exercise.

11
00:01:01,440 --> 00:01:02,960
This exercise changed.

12
00:01:02,970 --> 00:01:05,730
Next is the code that emits it.

13
00:01:05,730 --> 00:01:13,410
And here I will actually return a new object where I distribute all the properties of this writing exercise

14
00:01:13,860 --> 00:01:20,720
again for the simple reason that I don't want to return the same object I'm storing in the service.

15
00:01:20,740 --> 00:01:24,860
Now I admit this I call next.

16
00:01:24,910 --> 00:01:31,870
We can now subscribe to exercise changed and I want to subscribe in the training component in there.

17
00:01:31,880 --> 00:01:38,210
I will therefore First of all already import subscription from our exchange subscription so that we

18
00:01:38,210 --> 00:01:40,980
can also unsubscribe and therefore save memory.

19
00:01:43,170 --> 00:01:45,270
I'll then add a new property.

20
00:01:45,420 --> 00:01:50,890
The exercise subscription year which is of type A subscription

21
00:01:53,780 --> 00:01:56,760
and now I want to set up a subscription in NZ on it.

22
00:01:56,840 --> 00:02:04,040
Now for that I need to inject the training service so private training service of type training service

23
00:02:04,040 --> 00:02:10,850
is what I am here and for that you also need to add an import at the top which points to your training

24
00:02:10,850 --> 00:02:15,350
daat service file and pulls in the training service type.

25
00:02:15,720 --> 00:02:23,760
And now with that object that in NZ on in it I can store it in my subscription and it is whatever gets

26
00:02:23,760 --> 00:02:30,470
returned by the SUBSCRIBE method which I want to execute on training service exercise changed.

27
00:02:30,740 --> 00:02:35,020
This will fire when ever we got a new exercise.

28
00:02:35,160 --> 00:02:44,580
So here I actually get the exercise as a value instead of the SUBSCRIBE method and I want to do what

29
00:02:45,330 --> 00:02:47,590
I actually don't care about the exercise.

30
00:02:47,730 --> 00:02:53,700
But if it's not now then ongoing training should be set to true because of the exercise to select that

31
00:02:53,700 --> 00:02:55,800
exercise is not null.

32
00:02:55,860 --> 00:03:00,070
It means the user didn't pick one and that means were in the training.

33
00:03:00,450 --> 00:03:05,780
So here I will set this ongoing training equal to true.

34
00:03:05,820 --> 00:03:14,250
However I only want to do this if exercise is treated as truthy So if it is an object or something which

35
00:03:14,250 --> 00:03:22,540
is not null or undefined if it is null or undefined then I want to set this ongoing training to false.

36
00:03:22,740 --> 00:03:25,280
And of course you could also put this all into one line.

37
00:03:25,290 --> 00:03:27,030
But I guess this is a bit more readable.

38
00:03:28,350 --> 00:03:36,030
So now we're changing this whenever we're starting an exercise now in the training component template.

39
00:03:36,060 --> 00:03:41,050
This means that I can remove the training start listener on the app.

40
00:03:41,040 --> 00:03:45,900
New training component and inside the app new training component.

41
00:03:46,110 --> 00:03:51,240
I can now go to On-Star training and no longer emit this method.

42
00:03:51,410 --> 00:03:58,600
Instead I want to call this training service start exercise and important.

43
00:03:58,710 --> 00:04:02,880
I need to pass the idea of the exercise which was chosen.

44
00:04:02,910 --> 00:04:05,760
Now this is important how do I get this idea though.

45
00:04:06,210 --> 00:04:08,940
I get this idea from a forum.

46
00:04:09,030 --> 00:04:15,900
I have to create in this cart so that clicking this button actually submits the forum and we can read

47
00:04:15,960 --> 00:04:18,070
the selected ID from the forum.

48
00:04:18,360 --> 00:04:20,120
I will do this in the next lecture.

49
00:04:20,160 --> 00:04:26,460
For now let me simply clean up this event emitter and remove the unnecessary event emitter and output

50
00:04:26,520 --> 00:04:27,590
imports.

51
00:04:27,610 --> 00:04:31,360
Now with that we get a broken app right now will fix it in the next lecture.

52
00:04:31,440 --> 00:04:33,690
Let's add a forum to new training.

