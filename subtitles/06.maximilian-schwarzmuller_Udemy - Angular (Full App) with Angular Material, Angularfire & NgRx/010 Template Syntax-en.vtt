WEBVTT
1

00:00:02.420 --> 00:00:09.320

We added a bunch of components as I said The cool thing about component's is that we can output content.



2

00:00:09.620 --> 00:00:13.670

So let's go to the products component for example instead of outputting.



3

00:00:13.730 --> 00:00:17.680

Hi I'm a product component which is of course some static text.



4

00:00:17.750 --> 00:00:24.770

We could simply add a button that allows us to click it and then maybe add more dummy products to the



5

00:00:24.770 --> 00:00:25.910

list.



6

00:00:26.000 --> 00:00:34.000

So here we could output my products and bloated we could have a day off which represents a single product



7

00:00:34.180 --> 00:00:40.600

and let's say for now a product release is just a div with a name not beautifully styled not super powerful



8

00:00:40.930 --> 00:00:43.390

but showing how this works.



9

00:00:43.420 --> 00:00:49.660

So for dead we can output dynamic content with this double curly braces syntax.



10

00:00:49.660 --> 00:00:55.240

This is called strict interpellation and it allows us to refer to a property of our typescript class



11

00:00:55.480 --> 00:01:00.490

and output its content here in the template for example product name.



12

00:01:00.490 --> 00:01:02.340

Now we don't have that property yet.



13

00:01:02.380 --> 00:01:10.720

So let's go to the high school class and let's add in the class product name could be a book with that



14

00:01:10.720 --> 00:01:15.740

if you save both files and you go back you see a book on the screen here.



15

00:01:15.940 --> 00:01:17.980

Does this output dynamically.



16

00:01:17.980 --> 00:01:22.320

Of course the cool thing is that this name could also now be assigned dynamically.



17

00:01:22.330 --> 00:01:27.190

For example we could add a constructor which is a function that will be executed automatically when



18

00:01:27.190 --> 00:01:28.810

that component is created.



19

00:01:29.170 --> 00:01:35.530

And we could add set time out a default javascript function to do something after 40 seconds and here



20

00:01:35.750 --> 00:01:39.160

the arrow function which is next generation javascript syntax.



21

00:01:39.160 --> 00:01:44.550

It's like a normal javascript function word that this keyword is handled in a safer way though.



22

00:01:44.680 --> 00:01:48.480

But in the end this is a function that will be executed after three seconds.



23

00:01:48.490 --> 00:01:54.930

And there we could set this product name equal to a tree.



24

00:01:55.080 --> 00:01:58.440

And now if we save this we still will see a block.



25

00:01:58.500 --> 00:02:01.710

But after three seconds this becomes a treat.



26

00:02:01.980 --> 00:02:04.260

And this shows us the power of angular.



27

00:02:04.530 --> 00:02:10.230

Now besides string interpellation for outputting text we also can listen to events.



28

00:02:10.350 --> 00:02:16.530

So we could add a button where we could say change name on the back and we had a click listener with



29

00:02:16.530 --> 00:02:18.780

this syntax parentheses.



30

00:02:18.930 --> 00:02:27.570

So opening parentheses then the name of the event like click or mouse enter without D on at the beginning.



31

00:02:27.570 --> 00:02:31.120

So from normal javascript you might know on click and so on.



32

00:02:31.120 --> 00:02:38.410

Now here it's just click and then between the quotation marks of the value we assign we don't actually



33

00:02:38.410 --> 00:02:44.340

output text but we define a reference to a function that should be executed when this is clicked.



34

00:02:44.650 --> 00:02:47.220

Or we can also define short inline statements.



35

00:02:47.230 --> 00:02:51.910

Even so here we could set product name to tree.



36

00:02:52.180 --> 00:02:58.400

Please notice the single quotation marks here because the double quotation marks don't actually marked



37

00:02:58.420 --> 00:02:59.440

text here.



38

00:02:59.530 --> 00:03:05.740

Instead this is interpreted as typescript code so we need to define the string with quotation marks



39

00:03:05.800 --> 00:03:06.910

in there.



40

00:03:07.480 --> 00:03:12.490

Now I'll go back to the typescript file and comment out the time out functionality so that this doesn't



41

00:03:12.490 --> 00:03:14.340

interfere with our code.



42

00:03:14.860 --> 00:03:17.430

And with that let's save all these files.



43

00:03:17.830 --> 00:03:22.470

And now a book doesn't change unless we click this button.



44

00:03:22.540 --> 00:03:24.330

And now it's a treat.



45

00:03:24.370 --> 00:03:27.400

So this is how we can react to events now.



46

00:03:27.470 --> 00:03:34.270

Besides strict interpellation and event binding there also is something which is called Property binding



47

00:03:34.960 --> 00:03:39.310

properties are well like variables of object.



48

00:03:39.310 --> 00:03:46.600

You could say and every age DML element has an underlying Dom element which is just a javascript object



49

00:03:46.600 --> 00:03:50.100

with properties like for example the button here.



50

00:03:50.290 --> 00:03:56.090

The button has a property which is named disabled which determines whether it is disabled or not.



51

00:03:57.010 --> 00:04:04.130

We could at disabled like attribute and now the button would be disabled we conflict.



52

00:04:04.220 --> 00:04:11.900

However this attribute which is a normal age feature also just sets the value of a property of the underlying



53

00:04:11.930 --> 00:04:19.420

DOM object and we can directly bind to that property by adding brackets around this name here.



54

00:04:20.400 --> 00:04:25.410

And now we can assign the dynamic value here to like is disabled.



55

00:04:25.410 --> 00:04:29.460

Now this is not text but referring to a property in our typescript file.



56

00:04:29.460 --> 00:04:34.990

So if I go to the file and add a new property is disabled and set it to False.



57

00:04:35.010 --> 00:04:42.290

Initially she was me too true initially then if we go back the button is not clickable because that's



58

00:04:42.300 --> 00:04:48.480

true value is bound to that disable prompt hence disabling the button.



59

00:04:48.480 --> 00:04:52.370

Now of course we can change this dynamically like here and set timeout.



60

00:04:52.440 --> 00:04:54.340

We don't change the product name.



61

00:04:54.480 --> 00:04:58.860

But we said this is disabled to fault after 40 seconds.



62

00:04:58.860 --> 00:05:04.290

This should ensure that the button is disabled initially but gets enabled after a few seconds.



63

00:05:04.290 --> 00:05:10.560

So now I can click it and with that we learned about the most important syntax we have.



64

00:05:10.560 --> 00:05:13.710

Now there's one more syntax and that is called two way binding.



65

00:05:13.890 --> 00:05:19.230

It's used on inputs typically And it is used with the following syntax.



66

00:05:19.230 --> 00:05:22.300

We combine square brackets in parentheses.



67

00:05:22.410 --> 00:05:29.340

So we bind property binding and even binding and bind to ngi model which is a special directive provided



68

00:05:29.340 --> 00:05:30.590

by angular.



69

00:05:30.900 --> 00:05:33.580

We then assign a value which we want to bind.



70

00:05:33.720 --> 00:05:36.550

Like for example the product name.



71

00:05:36.840 --> 00:05:43.650

This now ensures that the value of this input is the value of the product name but that if we type into



72

00:05:43.650 --> 00:05:48.050

that input that product name is updated to whatever we entered.



73

00:05:48.240 --> 00:05:55.230

Now to enable this entry model directive we need to go to the app module and import an additional marshal



74

00:05:55.230 --> 00:05:56.050

into here.



75

00:05:56.250 --> 00:06:03.840

So an import statement at the top and the module name we need is named forms module because N-G module



76

00:06:03.960 --> 00:06:05.210

is used on imports.



77

00:06:05.370 --> 00:06:11.400

It's typically part of forums and these directives and features are stored in a separate package in



78

00:06:11.540 --> 00:06:16.570

at angular slash forms does import here isn't all we need.



79

00:06:16.680 --> 00:06:23.250

We also need to grab that module and add it to our list of imports to add that functionality to our



80

00:06:23.250 --> 00:06:26.630

app module and therefore to our angle or app.



81

00:06:27.030 --> 00:06:33.070

And with that we got this enabled and now we see the input which is pre-populated with our book.



82

00:06:33.180 --> 00:06:39.990

And if we type here and say a boat now does all the updates to text below it because it's binding in



83

00:06:39.990 --> 00:06:41.050

both directions.



84

00:06:41.100 --> 00:06:44.760

Listening to events and also storing the current value.



85

00:06:44.760 --> 00:06:51.180

So this is the syntax we use to dynamically output the content.



86

00:06:51.180 --> 00:06:58.550

Now the important part the sites that are directives Let's learn what's up with these in the next lecture.



