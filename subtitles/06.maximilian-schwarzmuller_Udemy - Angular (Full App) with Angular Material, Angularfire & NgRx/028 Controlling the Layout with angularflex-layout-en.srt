1
00:00:02,090 --> 00:00:06,750
In the last lecture I showed you how flexible X works in a very brief refresher.

2
00:00:06,840 --> 00:00:13,260
Let's now remove the C S S code and the javascript code and lets you as a number package and stat does

3
00:00:13,290 --> 00:00:17,920
flex layout package I was already mentioning it simply abstracts away.

4
00:00:17,940 --> 00:00:24,840
Does CSA s style set up I showed you in the last lecture and you use convenient to use directives to

5
00:00:24,840 --> 00:00:29,510
assign DCF as classes basically that's what's happening behind the scenes.

6
00:00:29,820 --> 00:00:35,460
Additionally it gives you a responsive API which simply means that you can combine these directives

7
00:00:35,820 --> 00:00:41,640
with certain responsive directive additions were you to find if a certain rule should only apply to

8
00:00:41,640 --> 00:00:43,190
certain screen sizes.

9
00:00:43,230 --> 00:00:45,360
We'll see this in action though.

10
00:00:45,450 --> 00:00:47,990
First of all we need to install it.

11
00:00:48,120 --> 00:00:53,880
You can click on using angular Selye here to see how to use that flex layout package.

12
00:00:54,060 --> 00:00:55,870
And they're important.

13
00:00:55,980 --> 00:00:57,470
You don't need to install the Seelye.

14
00:00:57,470 --> 00:00:58,300
We got this.

15
00:00:58,320 --> 00:01:04,800
You can start with the install flex layout step which is only about installing one package with NPM

16
00:01:04,800 --> 00:01:07,290
install dangler flex layout package.

17
00:01:07,380 --> 00:01:15,120
So let's copy that command and let's quit and serve for a second and run this command here NPM install

18
00:01:15,390 --> 00:01:24,910
angular slash flex dash layout dash dash se say once this is done we need to import flex layout to end

19
00:01:24,930 --> 00:01:28,050
you module to unlock all these directives.

20
00:01:28,590 --> 00:01:37,270
So let's restart and serve already and let's go to the app module and let's add in order at the top.

21
00:01:38,030 --> 00:01:43,340
Where I import does flex lay out module here.

22
00:01:44,470 --> 00:01:56,960
So Flex layout module from angular flex layout like this we now add this to Wirtz year flex layout module

23
00:01:57,170 --> 00:01:59,580
and now we can start using these directives.

24
00:01:59,600 --> 00:02:04,490
Let's go back to the Sign-Up component age female file and let's make sure that this form is actually

25
00:02:04,490 --> 00:02:06,450
positioned from top to bottom.

26
00:02:06,530 --> 00:02:12,230
We could do this manually with the flex boxes as classes I showed you but let's use this package to

27
00:02:12,230 --> 00:02:18,470
use these convenience directives Tuta for him which is my wrapping element and which therefore could

28
00:02:18,470 --> 00:02:20,040
be the flex container.

29
00:02:20,260 --> 00:02:25,180
I'll add F X lay out and actually set this to a value of Cullom.

30
00:02:25,340 --> 00:02:29,080
If you don't set a value here you will use the default of rope.

31
00:02:29,180 --> 00:02:32,100
But I want to position the elements from top to bottom.

32
00:02:32,150 --> 00:02:35,270
So I need to set this to column.

33
00:02:35,290 --> 00:02:38,910
Now we can also add another directive F X.

34
00:02:38,920 --> 00:02:43,650
Lay out a line to define the alignment of the elements.

35
00:02:43,780 --> 00:02:50,170
For now let's not use it then let's see how elements are aligned so I'll cut this and go back to the

36
00:02:50,170 --> 00:02:51,580
running application.

37
00:02:52,470 --> 00:02:57,450
And we see it's a line from top to bottom but they're stretching over to full width and they sit on

38
00:02:57,450 --> 00:03:00,570
the very left on very big screens.

39
00:03:00,570 --> 00:03:03,300
This is a really strange looking form.

40
00:03:03,810 --> 00:03:13,650
So instead let's change this by first of all making sure that our foreign fields don't take the full

41
00:03:13,650 --> 00:03:16,150
width for it at all.

42
00:03:16,170 --> 00:03:23,310
Add a class to my wrapping section here and I could also use that as a chest to the form and I will

43
00:03:23,310 --> 00:03:29,730
name this sign up form the name is up to you though in the C S S file and then defines I'm Stultz 40

44
00:03:29,760 --> 00:03:32,220
sign up for M C is this class.

45
00:03:32,520 --> 00:03:40,230
And for now a will simply set the width year to 300 pixels a with which will look good both on mobile

46
00:03:40,230 --> 00:03:43,510
devices as well as desktop devices.

47
00:03:43,530 --> 00:03:49,700
Now if I go back to the sign up form and save that to and we go back to the running application and

48
00:03:49,700 --> 00:03:55,750
reload as you see now with a smaller What nice to center everything though.

49
00:03:55,860 --> 00:04:02,010
And you learned how it works you add dead ethics layered a line directive to the same element where

50
00:04:02,010 --> 00:04:06,240
you added eFax layout and now you can assign center.

51
00:04:06,240 --> 00:04:12,010
This will target the main axis which in our case for Cullom is from top to bottom.

52
00:04:12,060 --> 00:04:16,250
So now it's centered in the middle of from top to bottom.

53
00:04:16,300 --> 00:04:18,100
What do you expect us to look like.

54
00:04:18,160 --> 00:04:19,770
Well let's have a look.

55
00:04:19,830 --> 00:04:21,240
It doesn't look the way we want.

56
00:04:21,240 --> 00:04:26,760
And we can reloaded as often as we want because it's centered word actually and just doesn't help us

57
00:04:26,830 --> 00:04:28,960
or we don't have a problem with that.

58
00:04:29,370 --> 00:04:33,540
And if you're wondering why it's not centered in the middle of the page because the wrapping container

59
00:04:33,540 --> 00:04:39,030
doesn't have a height of 100 percent so it only takes the height of the elements it contains.

60
00:04:39,030 --> 00:04:43,690
Instead we need to center on the cross axis and we do this by adding a second center.

61
00:04:43,710 --> 00:04:51,930
This will be assigned to the cross axis value and now it's centered a little bit for in the middle.

62
00:04:52,170 --> 00:05:00,180
But the problem we face is that of course the sign up form the wrapping class year simply has the width

63
00:05:00,180 --> 00:05:03,570
of three hundred pixels at the form sits inside of that.

64
00:05:03,570 --> 00:05:10,270
So it's centered inside of these three hundred pixels which is not the behavior we want to fix this.

65
00:05:10,320 --> 00:05:16,770
I will actually get rid of this sign up for class year and instead I can show you something else which

66
00:05:16,770 --> 00:05:18,390
is pretty interesting to note.

67
00:05:18,660 --> 00:05:27,550
You can directly target the component selectors of material design components all target map for field

68
00:05:27,960 --> 00:05:33,870
as I could target a normal aged female element and get data with a 300 pixels.

69
00:05:34,020 --> 00:05:37,500
And now the cool thing is this will now give it that with.

70
00:05:37,710 --> 00:05:43,790
But Centra everything in the middle because the container now still takes 100 percent of the width.

71
00:05:43,890 --> 00:05:48,530
And if we expect this on a mobile device you see it looks good there too.

72
00:05:48,960 --> 00:05:55,170
And with that we get this centered and we get our first look at angular flex layout.

73
00:05:55,170 --> 00:06:02,040
Now let's continue this road and let's continue working on this for him and add more than just the boring

74
00:06:02,100 --> 00:06:03,090
input fields.

