1
00:00:02,380 --> 00:00:08,380
We worked a lot on the code to get the available exercises and it was a great practice for that whole

2
00:00:08,460 --> 00:00:11,340
angle of fire and observable thing.

3
00:00:11,400 --> 00:00:18,280
Now of course our app is not just about getting data but also about storing data whenever we complete

4
00:00:18,490 --> 00:00:20,680
or cancel an exercise.

5
00:00:20,710 --> 00:00:25,810
We right now push that onto our local array of exercises here.

6
00:00:25,810 --> 00:00:33,490
This exercise is not the available exercises but the exercises in general and now do is nice but locally

7
00:00:33,820 --> 00:00:35,890
it's not of that much use.

8
00:00:35,890 --> 00:00:43,300
Whenever we relo deep this data will be gone it would be better to store it on fire store and of course

9
00:00:43,390 --> 00:00:44,130
we can do that.

10
00:00:44,140 --> 00:00:45,970
We can't just read data.

11
00:00:46,000 --> 00:00:48,330
We can also store data obviously.

12
00:00:48,340 --> 00:00:50,010
How does this work.

13
00:00:50,470 --> 00:00:59,960
Let's add a new method into service it a private method here at the bottom and I'll name it adds data

14
00:01:00,170 --> 00:01:04,540
to database to make it really clear what this is about in here.

15
00:01:04,550 --> 00:01:08,960
I want to connect to angular fires to work and save my data to it.

16
00:01:09,170 --> 00:01:12,940
So essentially uncancel exercise and complete exercise.

17
00:01:13,040 --> 00:01:22,880
I want to call this method so to do that I will accept an exercise which should be stored which should

18
00:01:22,880 --> 00:01:25,920
follow our exercise model as an input.

19
00:01:26,360 --> 00:01:29,150
And now it will call this method here.

20
00:01:30,290 --> 00:01:42,490
By calling this add data to database and this object is an exercise object the same cancel this as data

21
00:01:42,580 --> 00:01:43,620
database.

22
00:01:43,620 --> 00:01:46,610
This also is a valid exercise object.

23
00:01:46,670 --> 00:01:54,100
Now the code with running exercises so that's fine I want to keep that and now in add data to database

24
00:01:54,970 --> 00:01:57,550
I'll also reach out to this D-B.

25
00:01:57,550 --> 00:02:05,320
So to or inject that angle or fire or reference and reach out to a collection which we didn't even create

26
00:02:05,320 --> 00:02:05,970
yet.

27
00:02:05,980 --> 00:02:11,530
If you connect to a collection which doesn't exist yet it will be created for you automatically.

28
00:02:11,950 --> 00:02:13,780
So this is my collection.

29
00:02:13,780 --> 00:02:23,680
I want to create the finished exercises and that will include both complete that and the canceled ones.

30
00:02:23,680 --> 00:02:30,670
Now I'm connecting to this collection and I will call the add method and store my exercise just like

31
00:02:30,670 --> 00:02:31,180
that.

32
00:02:32,030 --> 00:02:35,940
Now this actually now returns as a promise.

33
00:02:36,990 --> 00:02:42,670
Where we can handle the success case with a Ben walk or catch any arrows we might get.

34
00:02:42,690 --> 00:02:46,680
I'll leave it as it is and simply check the database if it's exceeded.

35
00:02:46,890 --> 00:02:48,860
So let's save this.

36
00:02:49,020 --> 00:02:50,790
And let's find out if it works.

37
00:02:51,000 --> 00:02:58,020
Let's quickly log in again and pick an exercise once they're loaded like crunches.

38
00:02:58,020 --> 00:03:02,160
Start this and let's stop.

39
00:03:02,430 --> 00:03:05,580
Now we don't get an error or which I guess is a good sign.

40
00:03:05,800 --> 00:03:11,400
Hey let's look at our console and let's refresh this page.

41
00:03:11,400 --> 00:03:13,320
You should see a new collection.

42
00:03:13,320 --> 00:03:19,560
The finished exercise is as I said it's created on the fly if you try to access it and it doesn't exist

43
00:03:19,560 --> 00:03:24,980
yet in there we got one document and debt document is exercise.

44
00:03:24,980 --> 00:03:32,600
We finished crunches with the idea of the crunch just as it exists in a whaleboat exercises and all

45
00:03:32,600 --> 00:03:34,480
of the meta data we create it.

46
00:03:34,740 --> 00:03:36,200
So that's pretty cool.

47
00:03:36,390 --> 00:03:41,490
It's just one line of code that stores this on the database.

48
00:03:41,490 --> 00:03:49,890
Now in the next lecture we can actually connect our data table to that data we just stored to also populate

49
00:03:49,950 --> 00:03:54,530
the data table with data coming from our database.

