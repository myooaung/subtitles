1
00:00:02,230 --> 00:00:06,750
With lazy loading it I want to go to my training routing module.

2
00:00:06,850 --> 00:00:13,750
So delays in loaded routing module and remove the off guard from here because if we use it here we have

3
00:00:13,750 --> 00:00:17,550
one disadvantage if we use can actually wait here.

4
00:00:17,740 --> 00:00:25,180
We check whether we are allowed to enter this component is training component after we lazy loaded the

5
00:00:25,180 --> 00:00:26,860
whole module.

6
00:00:26,950 --> 00:00:30,870
Now we can simply save that and don't download the module.

7
00:00:30,940 --> 00:00:37,540
If we don't have access anyways so this is why checking it here is too late to have an optimal app at

8
00:00:37,540 --> 00:00:38,270
least.

9
00:00:38,500 --> 00:00:39,950
So I will remove the off guard.

10
00:00:39,950 --> 00:00:46,800
Importante can activate key here on detraining routing module and go to the app routing module.

11
00:00:46,960 --> 00:00:54,570
And here on this route on this lazy load route there is a special property can load which we can add.

12
00:00:54,610 --> 00:00:59,950
It works like can activate but it runs before the bundle is loaded.

13
00:01:00,190 --> 00:01:08,950
So here I am off guard and for this to work I need to go to my off guard file now here and actually

14
00:01:08,950 --> 00:01:15,240
implement the can load interface.

15
00:01:15,500 --> 00:01:19,600
It's imported from ET angular routers so let me add.

16
00:01:19,610 --> 00:01:20,990
Can load here.

17
00:01:21,280 --> 00:01:26,810
Now I have to add can load here and can load looks almost like connected way so I can copy that entire

18
00:01:26,810 --> 00:01:27,430
code.

19
00:01:27,570 --> 00:01:28,330
The differences.

20
00:01:28,340 --> 00:01:32,050
It doesn't have that second argument just the first one.

21
00:01:32,150 --> 00:01:38,500
We save this we get an error because the first one all has a different type it's of type route which

22
00:01:38,500 --> 00:01:40,620
we should import from the router.

23
00:01:40,660 --> 00:01:43,970
So just the route like this.

24
00:01:44,020 --> 00:01:49,530
Now with that it successfully compiles and now we have the same checks.

25
00:01:49,530 --> 00:01:54,770
We have the same check and both methods we're not using can activate anymore or we could remove that.

26
00:01:54,780 --> 00:01:56,920
But I'll leave it here for completeness sake.

27
00:01:57,060 --> 00:02:03,090
But now we have can load and we added this in the tray excuse me in the app routing module.

28
00:02:03,090 --> 00:02:11,160
So now we're checking this if we're allowed to access this route you're still before we exit before

29
00:02:11,160 --> 00:02:11,740
we entered.

30
00:02:11,790 --> 00:02:13,880
But also before we load the bundle.

31
00:02:14,160 --> 00:02:21,120
So if I log out I still can't access slash training as I can prove to you if I try to do that manually

32
00:02:21,810 --> 00:02:26,040
I'm still redirector to log in and it still works on the other way around.

33
00:02:26,040 --> 00:02:32,810
If I do log in but behind the scenes it will now only lazy load the package the training package.

34
00:02:32,880 --> 00:02:35,220
If we actually are allowed to enter this.

