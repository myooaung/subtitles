1
00:00:02,180 --> 00:00:04,430
Cmo funciona la autenticacin?

2
00:00:04,850 --> 00:00:05,940
Tenemos un servidor.

3
00:00:05,960 --> 00:00:10,460
Entonces firebase en nuestro caso el backend y obtenemos nuestra aplicacin de pesca.

4
00:00:10,460 --> 00:00:12,460
Ahora hacemos autenticaciones y hacemos logging.

5
00:00:12,500 --> 00:00:17,570
Enviamos las credenciales al servidor y las credenciales son validadas y obtenemos una

6
00:00:17,570 --> 00:00:24,320
respuesta que se nos indica ahora en la aplicacin web tradicional donde tenemos varias pginas que usaramos una

7
00:00:24,320 --> 00:00:25,300
sesin para almacenarla.

8
00:00:25,340 --> 00:00:29,400
La sesin se almacenara en el servidor y en el cliente obtendramos una cookie.

9
00:00:29,640 --> 00:00:34,120
Ahora, si las aplicaciones de una sola pgina nuestra parte posterior son aptridas.

10
00:00:34,220 --> 00:00:35,660
Es una API relajante.

11
00:00:35,750 --> 00:00:40,560
Firebase al final no parece uno, pero es como una API relajante.

12
00:00:40,670 --> 00:00:46,400
No le importa nuestra nica aplicacin firebase es un servicio que no almacena sesiones y no

13
00:00:46,400 --> 00:00:52,790
es solo Firebase, y usted se comunica desde un ngulo o la aplicacin es aptrida porque siempre se

14
00:00:52,790 --> 00:00:54,500
para detrs de las escenas.

15
00:00:54,500 --> 00:01:02,320
Ajax HTP solicita que solo obtenga una pgina y que no solicite pginas nuevas en el medio.

16
00:01:02,720 --> 00:01:05,400
Por lo tanto, el enfoque basado en la sesin no funciona.

17
00:01:05,420 --> 00:01:09,730
Usamos un token en lugar del token Jason weap si desea conocer los detalles.

18
00:01:09,980 --> 00:01:18,490
Bsicamente, hay una cadena larga que codifica no interrupciones solo codifica algunos datos sobre nuestros datos de

19
00:01:18,500 --> 00:01:22,900
estado de indicacin desactivada que no se pueden manipular.

20
00:01:23,000 --> 00:01:30,100
Porque si lo hiciramos, un token se detectara como manipulado en el servidor y no sera vlido.

21
00:01:30,290 --> 00:01:31,750
Pero ms de eso despus.

22
00:01:31,910 --> 00:01:34,100
As que obtenemos esta ficha del servidor.

23
00:01:34,220 --> 00:01:37,320
Entonces debemos almacenar esta ficha en la parte delantera.

24
00:01:37,400 --> 00:01:42,170
Entonces, en el navegador, un lugar de almacenamiento tpico es el almacenamiento local.

25
00:01:42,170 --> 00:01:47,150
Ahora cuando queremos acceder a algn recurso protegido en el servidor.

26
00:01:47,210 --> 00:01:53,420
Entonces, digamos que nuestra base de datos, que ahora mismo est abierta para todos, cambiaremos esto cuando queramos

27
00:01:53,420 --> 00:01:54,740
tener acceso a esto.

28
00:01:54,800 --> 00:01:57,300
Adjuntaremos a token a la solicitud.

29
00:01:57,320 --> 00:02:03,590
Ahora, como dije, el token est estructurado de manera que el servidor puede validar si todava es un

30
00:02:03,620 --> 00:02:04,340
token vlido.

31
00:02:04,340 --> 00:02:08,950
Entonces uno que fue enviado por el servidor o uno adjunto manipulado.

32
00:02:09,050 --> 00:02:11,480
Tiene como una huella digital nica que podra decir.

33
00:02:11,810 --> 00:02:17,870
Entonces, si sigue siendo el token original y an estamos bloqueados, el token an es vlido porque

34
00:02:17,870 --> 00:02:22,020
el token tambin caducar despus de un tiempo y luego tendremos acceso.

35
00:02:22,160 --> 00:02:23,770
De lo contrario, no lo hacemos.

36
00:02:23,960 --> 00:02:29,510
As es como funciona la indicacin en las aplicaciones de una sola pgina, este token es una parte

37
00:02:29,510 --> 00:02:35,360
crucial y lo bueno de la base de fuego y el ngulo de fuego es que ya obtenemos esta

38
00:02:35,360 --> 00:02:41,810
ficha y tambin podemos hacer toda la gestin de esta ficha a travs de firebase para que no nos pongamos No

39
00:02:41,810 --> 00:02:47,840
tenemos que almacenarlo y extraerlo manualmente para que no tengamos que preocuparnos por su vencimiento porque Firebase detrs de escena

40
00:02:47,840 --> 00:02:50,890
siempre nos dar un token nuevo con cada solicitud que enviemos.

41
00:02:50,990 --> 00:02:52,770
Entonces nunca tenemos que preocuparnos por esto.

42
00:02:52,850 --> 00:02:55,610
Y si terminamos la sesin destruir el tokened para nosotros.

43
00:02:55,640 --> 00:02:57,260
As que todo ha cambiado para nosotros.

44
00:02:57,320 --> 00:03:03,380
Pero es importante entender esto y esta es la razn por la cual un solo es autenticado Boullion no es suficiente.

45
00:03:03,380 --> 00:03:05,190
No podemos enviarlo al servidor.

46
00:03:05,300 --> 00:03:09,950
Afortunadamente, el servidor quiere algo ms que decir que estamos vindicados.

47
00:03:10,400 --> 00:03:13,910
Entonces, nuestro enfoque actual de indicacin no es ideal.

48
00:03:14,030 --> 00:03:17,950
No deberamos almacenar nuestro estado de autenticacin en solo un booleano.

49
00:03:18,110 --> 00:03:24,900
Deberamos trabajar con ese token y tambin deberamos proteger nuestro servidor en nuestra base de datos para ver

50
00:03:24,910 --> 00:03:31,350
si tenemos una autenticacin realmente funcional porque indicar en un ngulo o aplicacin es fcil, es solo javascript.

51
00:03:31,370 --> 00:03:33,550
Incluso podra manipular eso si lo desea.

52
00:03:33,680 --> 00:03:40,100
Son los recursos del lado del servidor los que tienen que protegerse porque se atreven a obtener sus datos razonables

53
00:03:40,100 --> 00:03:46,700
si manipula la aplicacin cliente de colgado, usted solo manipula su propia aplicacin, lo que no ve lo que est almacenado

54
00:03:46,700 --> 00:03:47,680
en el servidor.

55
00:03:47,990 --> 00:03:49,050
Entonces ese es el siguiente paso.

56
00:03:49,070 --> 00:03:52,790
Protejamos nuestra base de datos de firebase en el servidor.

57
00:03:52,940 --> 00:03:59,180
Y usemos el ngulo de fuego y las capacidades de autenticacin que nos da para usar el token de

58
00:03:59,180 --> 00:04:00,650
datos y administrar todo eso.

