1
00:00:02,140 --> 00:00:06,760
So we get that data in our firebase fire store database.

2
00:00:06,760 --> 00:00:11,010
We obviously want to use it in our angular application though.

3
00:00:11,320 --> 00:00:16,900
So to get it into the regular application we need to connect a single or two firebase and we will do

4
00:00:16,910 --> 00:00:19,490
this through a singular fire.

5
00:00:19,510 --> 00:00:26,470
Now you can check out the angular fire to get a page by simply googling for angular fire too.

6
00:00:26,480 --> 00:00:30,830
There you not only find the latest version but you'll also find some information.

7
00:00:30,940 --> 00:00:38,680
And if you click on installation and set up all the deep well installation and setup steps as well as

8
00:00:38,770 --> 00:00:44,220
at the end of this article the steps into deep more detailed documentation of all the features this

9
00:00:44,230 --> 00:00:45,500
package offers.

10
00:00:45,790 --> 00:00:47,710
Let's start with the setup though.

11
00:00:47,710 --> 00:00:50,570
Now here it starts actually with installation of the Seelye.

12
00:00:50,620 --> 00:00:58,020
We already did this so we can skip to step 3 where we installed the angular fire to package as well

13
00:00:58,020 --> 00:00:59,900
as the firebase package.

14
00:00:59,920 --> 00:01:05,440
So the official firebase SDK which is a dependency of angular fire too.

15
00:01:05,470 --> 00:01:11,710
So with that let's go back to our code here and in our project Acquisti leave open server and quickly

16
00:01:11,740 --> 00:01:18,670
execute this command and PM install angle of fire to add firebase both with dash dash save to all the

17
00:01:18,670 --> 00:01:25,300
store a reference and package what Jason does will now download and install these two dependencies which

18
00:01:25,300 --> 00:01:32,810
we can thereafter use to connect our or app to our firebase app if we already go back to the documentation.

19
00:01:32,890 --> 00:01:41,410
You can see that the next step is to connect our angler app to firebase by providing some API keys that

20
00:01:41,470 --> 00:01:44,890
are required to offend decayed our ourselves to firebase.

21
00:01:44,950 --> 00:01:45,940
So to say.

22
00:01:46,330 --> 00:01:55,840
So you can copy this firebase conflict object here and go back to your Seele project into the source

23
00:01:55,930 --> 00:01:59,160
environments folder and they are the environment dogs.

24
00:01:59,170 --> 00:02:05,110
TS file in here after production you should add this object.

25
00:02:05,110 --> 00:02:10,060
And of course replace dece values with the ones of your firebase project.

26
00:02:10,060 --> 00:02:11,600
Now where do you get ideas.

27
00:02:11,620 --> 00:02:16,220
Let's have a look at the console there.

28
00:02:16,300 --> 00:02:26,160
You can click on Project overview and at firebase your web app if you do this you get exactly this object

29
00:02:26,160 --> 00:02:32,060
here too to it's named differently but the key value pairs are the same ones and already populated with

30
00:02:32,060 --> 00:02:34,000
your project specific data.

31
00:02:34,280 --> 00:02:41,810
So you can't just copy that and then replace this data with the one you just copied.

32
00:02:41,810 --> 00:02:48,050
This now is the configuration which will successfully connect you to your firebase bacot that'll go

33
00:02:48,050 --> 00:02:50,530
back to the database so that we can have a look at it.

34
00:02:50,840 --> 00:02:56,810
But now we made an important step towards connecting our app to firebase.

35
00:02:56,810 --> 00:03:00,990
The next step already is to get angular fire started.

36
00:03:01,220 --> 00:03:07,760
And just like angular or material this requires us to actually import a module and added to our project

37
00:03:08,150 --> 00:03:14,120
so that we only import what we need and that we explicitly tell angular dat we need angular fire.

38
00:03:14,120 --> 00:03:23,810
Q So to add firebase to your project you should go to your app module file and there we will simply

39
00:03:23,990 --> 00:03:34,160
import this angular fire module from angle of fire to the exact name we import is a regular fire module.

40
00:03:34,160 --> 00:03:39,220
Now take that angle of fire module and add it to your imports array.

41
00:03:39,470 --> 00:03:42,500
You also have to execute a method on it.

42
00:03:42,860 --> 00:03:49,610
The initialize AB method to that method you have to pass this configuration to what is stored in this

43
00:03:49,610 --> 00:03:52,560
environment variable to get access to it.

44
00:03:52,580 --> 00:03:53,980
You simply import it.

45
00:03:54,140 --> 00:04:03,870
So you add an import to your import list here at the top import and worriment from.

46
00:04:03,900 --> 00:04:10,560
And now you go to the environment's folder and there the environment file does environment object year

47
00:04:10,800 --> 00:04:14,150
has is firebase key which you just added.

48
00:04:14,280 --> 00:04:22,160
So this key here and with that we initialize our anger for our module with our firebase data.

49
00:04:22,340 --> 00:04:26,270
You can now restart and she served to bring up the development server again.

50
00:04:26,820 --> 00:04:34,110
Now we connected our regular app to firebase kind of we can now import the different features angle

51
00:04:34,120 --> 00:04:38,610
of fire gives us thus far we only have the general set up.

52
00:04:38,640 --> 00:04:44,910
But just like angular material that different parts of it like the old real time database the new firestorm

53
00:04:44,990 --> 00:04:47,650
database is already off module.

54
00:04:47,790 --> 00:04:53,490
All these things have to be brought in on the Mont. so that you don't blow your package unnecessarily

55
00:04:53,610 --> 00:04:55,660
but only use what you need.

56
00:04:56,130 --> 00:05:02,010
Let's use what we want and let's say we want to get to angular firestorm module because obviously we

57
00:05:02,010 --> 00:05:08,290
want to connect to angular firestorm to get this we need to add an additional import.

58
00:05:08,400 --> 00:05:15,570
We do also import this from the angle of fire to package but there from a subfolder the fires store

59
00:05:15,630 --> 00:05:17,620
package from there.

60
00:05:18,650 --> 00:05:26,120
You can get the angular fires store module angular Firestone module from angular to slash fires.

61
00:05:27,080 --> 00:05:28,070
This model.

62
00:05:28,150 --> 00:05:34,070
Now is also added to him or it's sort of first one angle of fire marshall does the general set up with

63
00:05:34,070 --> 00:05:34,810
this one.

64
00:05:34,880 --> 00:05:42,870
We now enable the firestorm related functionalities you don't need to call a method there.

65
00:05:43,400 --> 00:05:50,330
Now with that or did finally we can use that to connect or to reach out to firebase.

66
00:05:50,360 --> 00:05:52,780
Now where do we want to reach out.

67
00:05:53,270 --> 00:06:00,320
Well remember we added data about the A-Whale exercises and we used that data in the new training component.

68
00:06:00,320 --> 00:06:05,030
Thus far we get the away little trainings in energy on it.

69
00:06:05,060 --> 00:06:08,190
Now I will remove this method call instead.

70
00:06:08,270 --> 00:06:11,010
Here I now want to use angular fire.

71
00:06:11,360 --> 00:06:19,430
So what we can do is add a new import at the top where we import from angular fire to slash firestorm.

72
00:06:19,910 --> 00:06:30,100
And what we do import is actually angular fire store like this does is something we can inject.

73
00:06:30,120 --> 00:06:37,290
So a class we can inject a service provided by this angular fired two package which we can inject that

74
00:06:37,320 --> 00:06:43,190
gives us methods that will automatically behind the scenes reach out to firebase.

75
00:06:43,350 --> 00:06:47,680
It can't do that because we provided our configuration.

76
00:06:47,850 --> 00:06:55,320
So now it will inject it here in the constructor or simply store it in a private property named DB for

77
00:06:55,350 --> 00:07:02,280
database maybe and assign a type angle or fire story doesn't actually should work because we provided

78
00:07:02,340 --> 00:07:05,010
all these modules in the module.

79
00:07:05,010 --> 00:07:10,250
The general fire module and precisely the angle of fire module.

80
00:07:10,480 --> 00:07:20,270
So now we can inject this database class here and now in energy on in it I can use it to call a method

81
00:07:21,470 --> 00:07:28,220
the method I want to call is collection collection allows me to reach out to a specific collection in

82
00:07:28,220 --> 00:07:36,530
my angular fire store and the collection I am interested in is of course my a way edible exercises collection

83
00:07:36,530 --> 00:07:37,020
here.

84
00:07:37,970 --> 00:07:42,880
So let's pass this as a string to the collection method.

85
00:07:43,310 --> 00:07:46,530
So now with that I get access to this collection.

86
00:07:46,790 --> 00:07:54,740
Now we get a couple of methods we can call it the simplest one is value changes value changes actually

87
00:07:54,740 --> 00:07:59,000
will give us an observable which is why we can now call subscribe.

88
00:07:59,540 --> 00:08:02,590
Let's do that all get summersault.

89
00:08:02,600 --> 00:08:03,990
I don't know which one.

90
00:08:04,220 --> 00:08:09,230
And I simply want to larget to the console that we can see what we fetched.

91
00:08:09,230 --> 00:08:15,020
So this is how our energy on init method now looks like in the new training component.

92
00:08:15,020 --> 00:08:17,230
We reach out to Angelfire store.

93
00:08:17,360 --> 00:08:19,250
We rechecked your collection.

94
00:08:19,250 --> 00:08:22,560
We subscribe to changes to the values in this collection.

95
00:08:22,670 --> 00:08:29,810
We subscribe here to be precise and whenever a new value is emitted we log it to the console.

96
00:08:29,810 --> 00:08:30,450
Let's have a look.

97
00:08:30,500 --> 00:08:31,800
Let's save this.

98
00:08:32,000 --> 00:08:36,690
Let's go back to our angular application and open our console log.

99
00:08:36,890 --> 00:08:42,700
And let's quickly log in so that we can get to the training component there.

100
00:08:42,790 --> 00:08:52,120
You'll see after a short while we get this array with our data with the four objects the four documents

101
00:08:52,240 --> 00:08:54,590
we placed in there.

102
00:08:54,760 --> 00:08:59,680
You will also see that the idea is missing here though we just got the index in the array which is not

103
00:08:59,680 --> 00:09:06,250
the ID in the firestorm that is the case because we use value changes which is a really simple Lisner

104
00:09:06,370 --> 00:09:12,720
that strips out all the meta data like the ID and only gives us the values of our documents.

105
00:09:12,730 --> 00:09:17,600
Will later also see our listeners but dessous how this works.

106
00:09:17,600 --> 00:09:20,710
This is how the fire store works.

107
00:09:20,710 --> 00:09:29,740
Now what we can do with that is we can not subscribe here and just set this up and store it is observable

108
00:09:29,740 --> 00:09:35,140
which value changes returns in a property in the exercise property.

109
00:09:35,140 --> 00:09:43,690
So this exercise is equals It is observable and we get an error because exercise is in our case is actually

110
00:09:44,080 --> 00:09:45,950
an array of exercises.

111
00:09:46,150 --> 00:09:51,760
We can't fix this by actually setting this to Taieb observable which I need to import.

112
00:09:51,760 --> 00:09:59,450
First of all so quickly add an import and import observable from our X-Trace like this.

113
00:09:59,670 --> 00:10:05,280
All now said exercises to absorbable and absorbable is a generic type.

114
00:10:05,500 --> 00:10:08,240
And I know I will get any data.

115
00:10:08,260 --> 00:10:15,170
I'd love to say we get exercice data but actually our exercise model is defined to have an ID and the

116
00:10:15,170 --> 00:10:19,800
data we get back doesn't have that Id at least not as part of the document we fetch right now.

117
00:10:19,810 --> 00:10:21,620
We'll work on this later.

118
00:10:21,640 --> 00:10:26,380
So now exercises of type observable and we assign it to an observable here.

119
00:10:26,590 --> 00:10:34,480
Now in our template we can output it here of course we are looping through all exercises and exercises.

120
00:10:34,480 --> 00:10:36,270
Now is an async value.

121
00:10:36,370 --> 00:10:38,220
It's undefined at the beginning.

122
00:10:38,260 --> 00:10:44,920
It only is a label once we fetch the data from the server so we can work around this by adding the async

123
00:10:44,920 --> 00:10:53,230
pipe a pipe provided by angular that simply automatically subscribes to an observable and extracts the

124
00:10:53,230 --> 00:10:55,780
data that observable returns.

125
00:10:55,810 --> 00:11:01,900
Therefore using exercise their offer is save we shouldn't existe the idea here though but maybe use

126
00:11:01,900 --> 00:11:09,130
the name because Id is temporarily not equatable and output the name here too if we know safety and

127
00:11:09,130 --> 00:11:13,810
we go back to our application and rerun it.

128
00:11:13,920 --> 00:11:23,710
We can quickly log in and now here on the exercise screen you still see these exercises even though

129
00:11:23,740 --> 00:11:26,120
we now change the way we load it.

130
00:11:26,290 --> 00:11:36,370
And if you now go back to your firebase fire store here and maybe let's say change touched hose to attached

131
00:11:36,380 --> 00:11:38,070
toast.

132
00:11:38,350 --> 00:11:45,370
Well alternative words and all of them you can go back to your angular app and without reloading you'll

133
00:11:45,420 --> 00:11:47,470
see touched toes here too.

134
00:11:47,810 --> 00:11:55,870
And this and I will just emphasize it never reload it it just updates because you changed it in firestorm.

135
00:11:55,960 --> 00:12:00,280
And because we set up this real time value change his listener.

136
00:12:00,490 --> 00:12:02,800
So let's change this back.

137
00:12:03,170 --> 00:12:06,470
I'll remove d e d here and have touched hose.

138
00:12:06,620 --> 00:12:11,140
And if we go back to the fitness tracker now it's touched toes again.

139
00:12:11,500 --> 00:12:18,100
And this is how this works and how we connect angular fire to a firebase and therefore how we connect

140
00:12:18,190 --> 00:12:21,830
angular to firebase through angular fire.

