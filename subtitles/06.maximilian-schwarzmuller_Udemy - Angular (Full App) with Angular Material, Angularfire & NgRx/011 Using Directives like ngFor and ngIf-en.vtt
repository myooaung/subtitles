WEBVTT
1

00:00:02.280 --> 00:00:07.090

In the last lecture we had a look at this whole binding syntax.



2

00:00:07.380 --> 00:00:09.750

Now let's look at directives.



3

00:00:09.870 --> 00:00:15.810

And here I want to focus on so-called structural directives which are directives that really change



4

00:00:15.810 --> 00:00:20.550

the structure of our page by adding and removing elements like your.



5

00:00:20.640 --> 00:00:24.010

It's called products but we actually only have one product.



6

00:00:24.360 --> 00:00:29.520

Let's change this behavior and let's say whenever we click the button we want to add a new product.



7

00:00:29.730 --> 00:00:35.880

Therefore when we clicked this I want to execute a function on add product maybe the name is up to you



8

00:00:36.570 --> 00:00:44.820

and I will remove that disabled binding here and give it as a caption of ad product.



9

00:00:45.210 --> 00:00:51.450

And now we need to add this on add product function to our typescript File here in the class we simply



10

00:00:51.450 --> 00:00:54.760

add on add product as a method to the class.



11

00:00:54.770 --> 00:00:57.720

This will be executed whenever we click the button now.



12

00:00:58.140 --> 00:00:59.800

Now here I want to add a product.



13

00:00:59.810 --> 00:01:05.760

And for this we want to manage a list of products sold add a new property called products which is an



14

00:01:05.770 --> 00:01:12.560

array and let's say a product is simply a string like a book or a tree.



15

00:01:12.900 --> 00:01:16.800

So we started with two products here in on ad product.



16

00:01:16.830 --> 00:01:24.970

I'll reach out to products and call Porsche to add a new product and here a want to add the product



17

00:01:25.020 --> 00:01:29.540

user entered which remember is bound to product name.



18

00:01:29.850 --> 00:01:34.600

So I want to push the value of this product name here.



19

00:01:34.970 --> 00:01:39.180

Now this will add the element to the array but we won't be able to see it.



20

00:01:39.210 --> 00:01:45.300

This is where directives come into play here we have a death and I want to repeat this Divx for every



21

00:01:45.300 --> 00:01:47.380

product in our array.



22

00:01:47.460 --> 00:01:50.890

We do this with Engy for it here.



23

00:01:51.060 --> 00:01:56.310

We use the following syntax but we need double quotation marks and also please note this to start in



24

00:01:56.310 --> 00:01:56.980

front of it.



25

00:01:57.030 --> 00:02:02.460

Does this an absolutely necessary part telling angular that this is a structural directive that will



26

00:02:02.460 --> 00:02:04.200

change the document.



27

00:02:04.510 --> 00:02:11.940

So we don't have to use is let like in next gen javascript where are you define variables.



28

00:02:12.210 --> 00:02:19.100

Let product though this name is totally up to you of products.



29

00:02:19.200 --> 00:02:24.770

This name is not up to you this name here is referring to debt products property here.



30

00:02:26.130 --> 00:02:32.200

This will now loop through all the products and creates debt Dave for every single one of them.



31

00:02:32.280 --> 00:02:36.170

Of course here I don't want to put the product in the user entered up here though.



32

00:02:36.390 --> 00:02:42.450

I want to output product which is just an element of the product array here and there for which is just



33

00:02:42.600 --> 00:02:44.690

a string.



34

00:02:44.760 --> 00:02:50.330

So with that if we now save this we actually see our list of two products.



35

00:02:50.340 --> 00:02:58.920

And if I add a new one like maybe a house and click add product you see it's added below it.



36

00:02:58.920 --> 00:03:04.420

Does this how we can change the structure of this element with this structural directive.



37

00:03:04.500 --> 00:03:05.920

Now both sides Engy forth.



38

00:03:06.000 --> 00:03:12.960

There also is energy if energy for outputs a list energy if allows us to conditionally render something.



39

00:03:13.230 --> 00:03:14.380

Let's say the button.



40

00:03:14.430 --> 00:03:21.530

We don't want to disable or enable it but we only want to show it once is disabled is false.



41

00:03:21.540 --> 00:03:24.410

It's true initially and after three seconds it's false.



42

00:03:24.600 --> 00:03:30.150

So let's go back here and let's say input and buttons should be shown only if it's false.



43

00:03:30.150 --> 00:03:35.880

So Angie if and that's all added with a star because it changes the document it adds or removes this



44

00:03:35.880 --> 00:03:42.000

element N-G if should only be shown if it's disabled is false.



45

00:03:42.000 --> 00:03:43.760

So here that we need quotation marks.



46

00:03:43.860 --> 00:03:45.450

We specify the condition.



47

00:03:45.660 --> 00:03:48.890

And this has to be something that returns true or false.



48

00:03:48.930 --> 00:03:53.740

For example is disabled should be false.



49

00:03:53.820 --> 00:04:00.600

So we have to add exclamation mark to reverse it and that's at the same condition to the button.



50

00:04:00.620 --> 00:04:05.020

Now with that if we save this we shouldn't see it put in but at the beginning.



51

00:04:05.030 --> 00:04:08.640

But after three seconds both appear here they are.



52

00:04:08.690 --> 00:04:10.480

And we can use it again.



53

00:04:10.640 --> 00:04:17.160

These are structural directive which will also see quite a bit in of course they are super useful and



54

00:04:17.180 --> 00:04:20.220

they allow us to manipulate our document at runtime.



