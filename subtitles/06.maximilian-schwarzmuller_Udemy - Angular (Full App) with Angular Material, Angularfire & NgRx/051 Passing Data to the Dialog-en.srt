1
00:00:02,130 --> 00:00:08,430
Let's say want to get some data into our dialogue we open it with the open method but let's say in the

2
00:00:08,430 --> 00:00:13,040
dialogue component we want to output some dynamic value.

3
00:00:13,140 --> 00:00:18,420
For example here we could add a number special component in there.

4
00:00:18,760 --> 00:00:22,470
Matt dialogue content.

5
00:00:24,870 --> 00:00:26,400
And then simply output

6
00:00:29,160 --> 00:00:39,110
some paragraph where we say you already got and then your progress percentages.

7
00:00:39,150 --> 00:00:43,610
Now how would we do this how would we get that data into our dialogue.

8
00:00:47,540 --> 00:00:51,420
It starts in the compound where we opened the dialogue there.

9
00:00:51,440 --> 00:00:57,830
Additionally tudy Capote and which should get opened in the dialogue we can pass an object with some

10
00:00:57,830 --> 00:00:59,560
additional configuration.

11
00:00:59,620 --> 00:01:06,050
Now all the details can be found in the official docs but one super important piece of documentation

12
00:01:06,470 --> 00:01:10,950
is data which we want to pass to the receiving or opening dialog.

13
00:01:11,120 --> 00:01:17,120
We do that by setting a date up property here which in turn can be a javascript object where we don't

14
00:01:17,120 --> 00:01:21,410
for example have to progress key which is equal to this progress.

15
00:01:21,410 --> 00:01:28,700
So to the progress we currently store encourage training and now we're passing this on the data property

16
00:01:28,910 --> 00:01:37,840
to our to be opened dialogue now in that dialogue we're opening we have to receive it and use it.

17
00:01:38,080 --> 00:01:43,920
And for this we use a mechanism that looks complicated but actually isn't.

18
00:01:44,000 --> 00:01:47,490
We have to inject something into our stop training component.

19
00:01:47,870 --> 00:01:49,860
So we'll add a constructor.

20
00:01:50,120 --> 00:01:57,680
And now here we don't use the normal Dependency Injection mechanism which you might know this mechanism

21
00:01:57,890 --> 00:02:04,850
where you basically assign some value to some property by defining the type of what you want to inject

22
00:02:05,630 --> 00:02:07,460
works in most cases.

23
00:02:07,460 --> 00:02:13,760
But here we're not injecting a class or something like that we're injecting an object an object managed

24
00:02:13,820 --> 00:02:21,680
internally by angular material we do inject that by adding the inject decorator which you might not

25
00:02:21,680 --> 00:02:31,490
have used that often it's imported from any angle or core and it has to be added in front of some argument.

26
00:02:31,790 --> 00:02:37,540
You can still use to have it cut to meet the binded argument to a property like here.

27
00:02:37,790 --> 00:02:47,390
All quickly adds my private data object or past data to make it really clear that this Knabe doesn't

28
00:02:47,390 --> 00:02:48,950
have to be named data.

29
00:02:49,310 --> 00:02:50,170
And this is of type.

30
00:02:50,210 --> 00:02:55,100
Any You could also precisely to find the type you're passing here.

31
00:02:55,130 --> 00:02:58,080
So object for properties property that's a number.

32
00:02:58,270 --> 00:02:59,810
Would be the alternative.

33
00:03:00,350 --> 00:03:07,190
So we get that but we need to pass an argument to the object decorator and debt argument is something

34
00:03:07,190 --> 00:03:10,230
we import from ET angular material.

35
00:03:10,610 --> 00:03:23,980
So let's import that something from at angular material and that something here is constant.

36
00:03:24,180 --> 00:03:27,080
It's called Matt dialog data.

37
00:03:27,450 --> 00:03:34,440
This is simply a constant storing some random number or ID which allows us to access to data which angle

38
00:03:34,490 --> 00:03:38,290
material internally stores when we call the open method.

39
00:03:38,610 --> 00:03:44,340
You can kind of think of that as our apps where we might use a service to store some data we want to

40
00:03:44,340 --> 00:03:50,340
pass between components angular material dastards internally for the data we pass here and it gives

41
00:03:50,340 --> 00:03:54,420
that an ID or it uses an ID to store them.

42
00:03:54,420 --> 00:03:55,200
So to say.

43
00:03:55,590 --> 00:04:01,920
And that idea some number which we all could use but since it's easier to remember text it mosques this

44
00:04:01,920 --> 00:04:09,900
idea with this text Matt dialogue data a so-called token we now pasters to inject to basically tell

45
00:04:09,900 --> 00:04:10,300
it.

46
00:04:10,600 --> 00:04:11,080
Yeah.

47
00:04:11,160 --> 00:04:16,980
In your reference of data where are you somehow stored the data off to currently open dialog.

48
00:04:17,040 --> 00:04:18,800
Please give me the data.

49
00:04:18,870 --> 00:04:20,060
This is what we're telling.

50
00:04:20,070 --> 00:04:22,090
Angular material with this syntax.

51
00:04:22,340 --> 00:04:24,770
And please give it to me and store it in the past.

52
00:04:24,780 --> 00:04:26,320
Data property.

53
00:04:26,760 --> 00:04:34,020
With that we can use the past data property anywhere in this component like here in the template of

54
00:04:34,020 --> 00:04:41,310
course and X-ists thought progress because that is something we'll have a way lable and this should

55
00:04:41,310 --> 00:04:42,630
be public here.

56
00:04:43,800 --> 00:04:50,760
So with that we got our past data and we now should be able to open that dialogue.

57
00:04:51,700 --> 00:04:57,430
And see the current percentage in there because we're successfully passing it into the dialogue with

58
00:04:57,430 --> 00:04:59,370
this complicated.

59
00:04:59,590 --> 00:05:04,000
But in the end not so complicated approach and it's always dead approach.

60
00:05:04,090 --> 00:05:07,540
So in the end you just have to remember this pattern.

61
00:05:07,670 --> 00:05:08,960
Now that's nice but we're clicking.

62
00:05:08,960 --> 00:05:15,830
True or false and we're passing a yes or no and we're passing true or false back to the opening component.

63
00:05:15,830 --> 00:05:17,690
How do we consume this value.

64
00:05:17,690 --> 00:05:19,850
How do we take this into account.

65
00:05:20,880 --> 00:05:28,560
So for this I'll actually store this dialogue at a constant named dialogue ref because this dialogue

66
00:05:28,590 --> 00:05:34,210
open will return a reference to the open dialogue and then on dialogue.

67
00:05:34,220 --> 00:05:41,400
RATH I'll add or execute the oft reclosed method which gives me an observable that's fired whenever

68
00:05:41,460 --> 00:05:42,990
this is closed.

69
00:05:43,230 --> 00:05:48,310
So I can simply subscribe to that observable you know and or uses a lot of observables.

70
00:05:48,330 --> 00:05:52,130
So it does here and it will get the result.

71
00:05:52,350 --> 00:05:54,660
And now we can do with the result whatever we want.

72
00:05:54,690 --> 00:05:57,870
For example decide whether we want to continue or not.

73
00:05:58,050 --> 00:06:02,250
So you're able to simply console log result for now.

74
00:06:02,820 --> 00:06:11,970
So with that if we again start this exercise stop this and hit no we return false as you can see the

75
00:06:11,970 --> 00:06:17,300
click yes we return true and that's exactly what we bound here.

76
00:06:17,400 --> 00:06:20,610
True true yes and false to know.

77
00:06:20,610 --> 00:06:26,980
Now we get that information and now we can use it to continue with the training or stop it.

78
00:06:27,180 --> 00:06:32,420
Now to do that let's implement some logic in the next lecture.

