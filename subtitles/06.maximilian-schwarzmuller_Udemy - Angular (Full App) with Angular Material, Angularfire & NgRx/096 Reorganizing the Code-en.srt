1
00:00:02,240 --> 00:00:04,920
Time to reorganize our code a bit more.

2
00:00:05,180 --> 00:00:08,980
Let's take advantage of a feature provided by angle of fire.

3
00:00:08,990 --> 00:00:13,650
We can listen to any changes in our authentication status.

4
00:00:13,760 --> 00:00:25,530
So let's do that and to do that all add a new method call it in that of listener.

5
00:00:25,610 --> 00:00:26,410
In there.

6
00:00:26,610 --> 00:00:32,970
All of which are two angular fire off and there's this off state object.

7
00:00:32,970 --> 00:00:35,940
This is actually an observable to which we can subscribe.

8
00:00:36,360 --> 00:00:40,650
And it will emit an event when Evergrey authentication status changes.

9
00:00:40,650 --> 00:00:45,290
So when we go from offene credit to unoffended hatred or the other way around.

10
00:00:45,570 --> 00:00:49,810
Now in there we will receive a user object.

11
00:00:49,920 --> 00:00:56,940
So ever that is NULL if we are unauthenticated or it is the currently locked in user.

12
00:00:56,970 --> 00:01:02,040
So what we can do here is we can check if user which will only be true if the user is set.

13
00:01:02,040 --> 00:01:08,760
So if we are affiliated in this case we can execute the code which we currently have in office successfully

14
00:01:08,990 --> 00:01:12,670
so catch it from there and added here.

15
00:01:14,090 --> 00:01:20,880
Else in the other case I want to execute the code I have in the log out function all the code.

16
00:01:20,940 --> 00:01:24,440
Besides this sign out line here.

17
00:01:24,600 --> 00:01:29,820
So here abuilding catch this code and put it into the else case.

18
00:01:31,090 --> 00:01:38,170
So if we are switching to it indicated we will redirect and we will emit an event and all the set is

19
00:01:38,180 --> 00:01:39,720
often equated to true.

20
00:01:40,090 --> 00:01:45,640
Otherwise we'll cancel subscriptions imit and event never navigate to the log in screen and said is

21
00:01:45,640 --> 00:01:48,690
authenticated to false with dad.

22
00:01:48,760 --> 00:01:52,860
We can get rid of off successfully and log out.

23
00:01:52,900 --> 00:02:01,720
Also Schrank we can remove D is successfully off successfully call here and just cancel log something

24
00:02:02,380 --> 00:02:04,710
or do nothing at all if you want.

25
00:02:04,750 --> 00:02:06,860
You can of course run any code you need.

26
00:02:07,330 --> 00:02:14,590
And now we just have to make sure that it all listener is called the best time to call it of course

27
00:02:14,680 --> 00:02:16,770
is when our app starts.

28
00:02:17,050 --> 00:02:21,880
So lets go to our app component for this.

29
00:02:21,880 --> 00:02:29,430
The cost is this the very first component that gets instantiated and lets simply implement the on in

30
00:02:29,440 --> 00:02:37,660
it interface year which you need to import from angular court and which of course forces us to add DNG

31
00:02:37,690 --> 00:02:38,930
on it.

32
00:02:39,080 --> 00:02:44,620
Methot now in this method I wanted to call this method in my office service.

33
00:02:44,770 --> 00:02:47,450
So what does I need to inject the office service of course.

34
00:02:47,800 --> 00:02:49,880
So I'll provide you or not provide.

35
00:02:49,890 --> 00:02:56,020
It's provided an app Marchal I'll simply inject you of the service by referring to my office service

36
00:02:56,020 --> 00:03:00,450
type which you need to import here at the top.

37
00:03:02,370 --> 00:03:10,220
And with it injected here in NZ on end it all reach out to all service and call my in it of Lisner method.

38
00:03:10,230 --> 00:03:12,040
Now let's save this and try it out.

39
00:03:12,300 --> 00:03:18,410
In theory we should now still be prevented from accessing training

40
00:03:21,090 --> 00:03:27,140
this fails and we should still be able to log in and then be redirected.

41
00:03:27,930 --> 00:03:38,460
Here we can still start our exercises and potentially cancel them and go to past exercises to see all

42
00:03:38,460 --> 00:03:47,780
our exercises which we can still sort we can navigate around here and we can simply log out in which

43
00:03:47,780 --> 00:03:55,420
case I should no longer be able to visit training that works.

44
00:03:55,480 --> 00:04:04,940
So now we improved our application by making sure that we have one global offstage listener in the off

45
00:04:04,940 --> 00:04:11,290
service which is initialized when our application starts and where we don't do whatever we have to do

46
00:04:11,500 --> 00:04:14,540
for Medicaid or unsophisticated users.

47
00:04:14,620 --> 00:04:20,390
And with that we got all the functionality in place that makes our application really amazing.

