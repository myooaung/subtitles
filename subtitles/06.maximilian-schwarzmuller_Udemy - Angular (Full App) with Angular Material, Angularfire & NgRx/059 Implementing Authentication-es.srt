1
00:00:02,240 --> 00:00:07,920
As que trabajemos en los datos y trabajemos en esos datos.

2
00:00:07,940 --> 00:00:09,950
Necesitamos principalmente dos cosas.

3
00:00:09,980 --> 00:00:17,660
Un par de servicios que nos permiten agregar por ahora, al menos, falsificar la autenticacin de un usuario

4
00:00:17,750 --> 00:00:24,620
y tambin administrar nuestros entrenamientos y modelos que nos permiten administrar los diferentes datos con los

5
00:00:24,710 --> 00:00:29,820
que estamos interactuando, como los datos educativos, los datos del usuario, como ese.

6
00:00:29,840 --> 00:00:36,410
Ms adelante en el curso, tambin conectaremos nuestra aplicacin a Internet para usar autenticaciones reales en.

7
00:00:36,560 --> 00:00:39,650
Pero comenzando con datos ficticios an.

8
00:00:39,680 --> 00:00:46,160
Pero al menos de una manera realmente interactiva es un gran avance y nos permite simular nuestra

9
00:00:46,160 --> 00:00:49,890
aplicacin cmo se ver cuando realmente tiene datos dinmicos.

10
00:00:49,910 --> 00:00:57,890
Comencemos con el rea de autenticacin en la carpeta off donde tenemos que iniciar sesin y registrar el componente.

11
00:00:58,160 --> 00:01:00,940
Quiero agregar dos modelos.

12
00:01:01,040 --> 00:01:03,040
El primero es el modelo de usuario.

13
00:01:03,050 --> 00:01:10,220
Voy a nombrar el modelo de usuario de archivo punto TS y al final tengo un objetivo simple

14
00:01:10,220 --> 00:01:18,190
aqu. Quiero crear una interfaz que pueda usar para definir bien cmo se ver un usuario en mi aplicacin.

15
00:01:18,590 --> 00:01:24,800
As que voy a exportar la interfaz aqu y la interfaz es una construccin de script de tipo especial

16
00:01:24,800 --> 00:01:30,980
que al final es solo nuestra definicin de tipo personalizado. Podra decir que todo es usuario y el usuario

17
00:01:30,980 --> 00:01:38,530
debera tener dos campos digamos y un correo electrnico que es una cadena y una identificacin de usuario digamos que debera ser una cadena.

18
00:01:38,540 --> 00:01:46,100
Ms adelante, cuando realmente agreguemos un servidor y el back-end, obtendremos ese usuario del servidor

19
00:01:46,100 --> 00:01:47,800
y podremos usarlo.

20
00:01:47,840 --> 00:01:56,210
Tambin agregar mi modelo de dardos dart data Ts para encontrar el tipo de datos que quiero obtener durante el registro y

21
00:01:56,210 --> 00:02:01,070
el inicio de sesin que planeo enviar al servidor para su validacin.

22
00:02:01,070 --> 00:02:06,160
As que voy a exportar la interfaz o dos de los datos parece un nombre apropiado.

23
00:02:06,160 --> 00:02:11,830
Y luego estn todos ellos tienen un correo electrnico, pero luego quiero tener una contrasea como segundo campo.

24
00:02:11,900 --> 00:02:18,640
As que estos son los datos que quiero obtener cuando un usuario est bien creado o conectado.

25
00:02:18,690 --> 00:02:22,220
Y con eso ahora podemos agregar un servicio.

26
00:02:22,220 --> 00:02:24,890
Voy a nombrar el archivo fuera de servicio pens.

27
00:02:24,940 --> 00:02:30,630
S, porque el servicio se llamar de servicio y luego exportar una clase nombrada.

28
00:02:30,710 --> 00:02:38,690
Bueno, todos los servicios han establecido el objetivo de este servicio. DN nos permite falsificar el inicio de sesin de un usuario en otras

29
00:02:38,900 --> 00:02:45,500
partes de la aplicacin a punto de iniciar sesin para que podamos, por ejemplo, ajustar el encabezado y solo mostrar

30
00:02:45,500 --> 00:02:46,770
cerrar sesin .

31
00:02:46,760 --> 00:02:50,280
Pero si el usuario puede desconectarse, etc.

32
00:02:50,300 --> 00:02:58,110
Esa es la idea con la que necesitamos un par de campos y mtodos en la deuda de servicio.

33
00:02:58,280 --> 00:03:03,920
Por ejemplo, quiero almacenar usuarios actualmente autenticados y convertir esto en un campo privado para

34
00:03:03,920 --> 00:03:07,190
que solo podamos salir desde el interior del servicio.

35
00:03:07,190 --> 00:03:12,400
Esto ser de tipo usuario y ese es el tipo que acabamos de crear en el archivo de modelo de datos de usuario.

36
00:03:12,440 --> 00:03:14,910
As que asegrese de agregar esta importacin.

37
00:03:15,140 --> 00:03:22,640
Ahora con eso agregar un usuario de registro de Methot que debera ser llamado cuando un usuario se registre all.

38
00:03:22,640 --> 00:03:27,430
Espero obtener algunos datos que deberan estar fuera de tipo de datos.

39
00:03:27,470 --> 00:03:30,860
Tambin debe importar esto desde ese archivo de modelo de datos.

40
00:03:30,860 --> 00:03:35,690
Creamos hace un segundo en el ao de mtodo de usuario de registro.

41
00:03:35,900 --> 00:03:38,130
Inicializaremos a nuestro usuario.

42
00:03:38,270 --> 00:03:42,350
Y una vez que nos conectamos a Internet, por supuesto, haremos ms que eso.

43
00:03:42,410 --> 00:03:46,420
De hecho, enviaremos la solicitud a un servidor y crearemos el usuario all.

44
00:03:46,430 --> 00:03:49,780
Todava no tenemos una encuesta, as que por ahora simplemente crear un usuario.

45
00:03:49,970 --> 00:03:57,420
As que cree un nuevo objeto y almacnelo y la propiedad del usuario, y esta propiedad de usuario debe ser de tipo usuario.

46
00:03:57,450 --> 00:04:02,760
Este objeto que estamos creando aqu debe tener una propiedad de correo electrnico aqu.

47
00:04:02,780 --> 00:04:05,310
Simplemente recibir el correo electrnico de datos.

48
00:04:05,330 --> 00:04:12,850
Recuerde que el modelo de datos inactivos tambin tena una propiedad de correo electrnico y tambin debemos tener una identificacin de usuario.

49
00:04:12,860 --> 00:04:16,560
Ahora, ms tarde, crearemos esto en un servidor.

50
00:04:16,760 --> 00:04:25,770
Por ahora falsificar una identificacin aleatoria al llamar a Moff alrededor de Moff al azar por 10000.

51
00:04:25,790 --> 00:04:29,030
Ahora, tenga en cuenta que esta no es una identificacin verdaderamente nica.

52
00:04:29,030 --> 00:04:34,740
En teora, puedes obtener la misma identificacin dos veces, pero ests por fingir esto.

53
00:04:34,760 --> 00:04:35,880
Lo hace el truco.

54
00:04:35,900 --> 00:04:39,330
Obtendremos ms tarde, por supuesto, uno del servidor.

55
00:04:39,740 --> 00:04:44,210
Entonces con eso estamos almacenando un nuevo usuario cuando registramos un usuario.

56
00:04:44,210 --> 00:04:47,370
Ahora agreguemos tambin un mtodo de inicio de sesin.

57
00:04:47,630 --> 00:04:51,710
Y en el mtodo de inicio de sesin tambin espero obtener algunos datos.

58
00:04:51,740 --> 00:04:55,760
Entonces un objeto con correo electrnico y contrasea de tipo de datos.

59
00:04:55,760 --> 00:05:00,170
Por lo tanto, aqu tambin crear un usuario.

60
00:05:00,440 --> 00:05:02,020
Entonces, ahora mismo es la misma lgica.

61
00:05:02,120 --> 00:05:03,280
Ms tarde esto cambiar.

62
00:05:03,290 --> 00:05:05,930
Enviaremos diferentes solicitudes a nuestro servidor.

63
00:05:05,930 --> 00:05:08,230
Es por eso que uso dos mtodos aqu.

64
00:05:08,300 --> 00:05:11,240
Podemos registrar un usuario e iniciar sesin.

65
00:05:11,340 --> 00:05:13,700
Ahora todo es para agregar un mtodo de cierre de sesin.

66
00:05:13,760 --> 00:05:20,980
Y aqu simplemente quiero configurar el usuario igual a nulo, as que reincielo no definido inicialmente.

67
00:05:21,040 --> 00:05:24,550
Es entonces un objeto despus de que nos registramos o iniciamos sesin.

68
00:05:24,620 --> 00:05:33,830
Ahora no est definido o, para ser precisos, nulos de nuevo, y todo ser para que el usuario obtenga acceso

69
00:05:33,830 --> 00:05:34,510
al usuario.

70
00:05:34,550 --> 00:05:35,690
Almacenamos aqu

71
00:05:35,840 --> 00:05:39,860
Tiene una fuente de acceso privado, por lo que no es accesible desde el exterior.

72
00:05:40,100 --> 00:05:46,730
Ahora podemos devolver este usuario y dado que es un objeto y, por lo tanto, un tipo de referencia.

73
00:05:46,740 --> 00:05:53,090
Otras partes de la aplicacin podran cambiar ese objeto y, por lo tanto, cambiar el objeto en

74
00:05:53,450 --> 00:06:01,640
el servicio para evitar que esto devuelva un nuevo objeto y usar el operador de dispersin de objetos para extender las

75
00:06:01,910 --> 00:06:06,910
propiedades del objeto de usuario almacenado en el servicio a este nuevo objeto.

76
00:06:06,920 --> 00:06:12,830
Esto romper esta referencia y realmente devolver un nuevo usuario que tiene las mismas propiedades pero

77
00:06:12,830 --> 00:06:14,470
como un objeto diferente.

78
00:06:14,480 --> 00:06:21,290
Entonces, si otras partes de la aplicacin comienzan a manipular este objeto que regresamos aqu, no manipularn a

79
00:06:21,440 --> 00:06:26,850
este usuario original, lo cual es una prctica mejor que regresar directamente al usuario.

80
00:06:26,860 --> 00:06:35,920
Tambin agregar que el mtodo de conveniencia est desactivado y aqu simplemente regresar donde sea que este usuario est ahora o no,

81
00:06:35,950 --> 00:06:45,460
si es una cita para m si no es igual con solo verificar la igualdad de valor si no es igual que el

82
00:06:45,520 --> 00:06:52,120
usuario. autenticado por lo que es de will devolver true si es igual a now.

83
00:06:52,150 --> 00:06:54,240
Esto devolver falso.

84
00:06:54,250 --> 00:06:56,340
Entonces con eso conseguimos el servicio fuera.

85
00:06:56,350 --> 00:07:03,540
Ahora, conctese a nuestra aplicacin y realmente llame al usuario de registro desde el componente de registro e inicie sesin desde

86
00:07:03,550 --> 00:07:06,120
el componente de inicio de sesin web.

87
00:07:06,130 --> 00:07:08,260
Comencemos con el componente de registro.

88
00:07:08,300 --> 00:07:14,800
Ah tenemos en enviar, que se ejecuta cuando presionamos ese botn de enviar y aqu es donde

89
00:07:14,800 --> 00:07:19,600
realmente quiero registrar mi usuario permiti cualquier acceso al servicio fuera de servicio.

90
00:07:19,780 --> 00:07:25,060
Y eso, por supuesto, significa que necesitamos inyectarlo en ese componente de registro.

91
00:07:25,330 --> 00:07:34,060
Ahora es importante que deseemos asegurarnos de que en toda la aplicacin usemos la misma clase de servicio, la misma instancia

92
00:07:34,120 --> 00:07:37,680
de esa clase de servicio que debera decir.

93
00:07:37,690 --> 00:07:41,140
Por lo tanto, una cosa es muy importante.

94
00:07:41,140 --> 00:07:43,190
Sabes qu cosa es?

95
00:07:45,150 --> 00:07:51,880
La pregunta donde proporcionamos ese servicio inyectndolo como una parte en un singular.

96
00:07:51,960 --> 00:07:59,110
Tambin debe proporcionar sus servicios y los proporciono en mi mdulo de aplicacin.

97
00:07:59,130 --> 00:08:06,940
Esto garantiza que a lo largo de toda la aplicacin siempre usemos la misma instancia de servicio de oficina.

98
00:08:06,970 --> 00:08:15,470
Entonces, en el modelo de la aplicacin, agregar el servicio a proveedores como este y tambin deber asegurarse de que est en el aeropuerto

99
00:08:15,470 --> 00:08:22,040
y en el mdulo de la aplicacin en el primer servicio de importacin fuera de la carpeta y el

100
00:08:22,070 --> 00:08:23,310
archivo del servicio offshore.

101
00:08:24,430 --> 00:08:30,610
Y con eso agregado, ahora podemos inyectar los servidores Avs en el componente de registro.

102
00:08:31,000 --> 00:08:37,750
Por lo tanto, en un componente de registro aqu en el constructor todos lo vinculan automticamente a una propiedad privada, que

103
00:08:37,750 --> 00:08:40,520
nombrar como servicio oficial, este nombre depende de usted.

104
00:08:40,870 --> 00:08:43,840
Y ese tipo va a ser de servicio.

105
00:08:43,990 --> 00:08:52,270
Tambin debe importar el servicio fuera del archivo del oficial en el componente de registro para que esto funcione.

106
00:08:52,270 --> 00:08:58,810
Ahora tenemos acceso al servicio de oficina y luego, en Enviar, me pondr en contacto para ofrecer el servicio y llamar

107
00:08:58,810 --> 00:09:00,070
al usuario de registro.

108
00:09:00,340 --> 00:09:09,430
Ahora, como aprendi en el registro fuera de servicio, el usuario espera obtener datos del tipo sin datos que, si echamos un vistazo

109
00:09:09,430 --> 00:09:17,090
al modelo, es un objeto con un correo electrnico y una propiedad de contrasea que contienen valores de cadena.

110
00:09:17,500 --> 00:09:20,520
Pasemos tal objeto al usuario del registro.

111
00:09:20,680 --> 00:09:28,600
Pasemos un objeto donde tenemos una propiedad de correo electrnico que extraemos de nuestro formulario enviado al acceder

112
00:09:28,600 --> 00:09:29,490
al formulario.

113
00:09:29,560 --> 00:09:40,480
Por lo tanto, este argumento que recibimos aqu y all es el valor y la propiedad de su correo electrnico y el nombre del componente de suscripcin de

114
00:09:40,520 --> 00:09:44,630
correo electrnico se registra aqu en la entrada del correo electrnico.

115
00:09:45,510 --> 00:09:53,370
Asignamos un nombre de correo electrnico aqu para la contrasea. Asignamos el nombre de la contrasea, que ser capaz de acceder

116
00:09:53,490 --> 00:09:55,800
a la contrasea en ese nombre.

117
00:09:55,920 --> 00:10:03,920
As que por correo electrnico para el correo electrnico y para el campo de contrasea, accedemos y valoramos la contrasea debido a esa asignacin de nombre.

118
00:10:03,930 --> 00:10:08,490
Lo mostr hace un segundo con eso estamos registrando un nuevo usuario.

119
00:10:08,610 --> 00:10:17,450
Ahora tambin asegurmonos de registrar usuarios en la base de datos para acceder al componente y al igual que en el componente

120
00:10:17,460 --> 00:10:21,330
de suscripcin, necesito inyectar el servicio fuera de servicio.

121
00:10:21,330 --> 00:10:26,400
Ahora ofrece servicio y compruebe que aqu habr exactamente la misma instancia que el componente de

122
00:10:26,630 --> 00:10:31,140
registro debido a que nosotros proporcionamos ese servicio en el mdulo de la aplicacin importante.

123
00:10:31,290 --> 00:10:37,190
Tambin debe importar el servicio fuera del archivo de servicio en el componente de inicio de sesin.

124
00:10:37,350 --> 00:10:38,630
Estamos usando para escribir aqu.

125
00:10:38,640 --> 00:10:43,950
As que tenemos que emplear esto con esa importacin agregarlo en el envo.

126
00:10:43,950 --> 00:10:52,860
Podemos comunicarnos con los das de servicio y llamar al inicio de sesin y as como el registro de inicio de sesin requiere un objeto donde tenemos un

127
00:10:52,860 --> 00:10:56,480
correo electrnico y dos aos desde que utilizo el enfoque reactivo.

128
00:10:56,490 --> 00:11:04,320
Simplemente me acerco para iniciar sesin en el valor y luego es el correo electrnico porque le di mi control un nombre de correo electrnico aqu

129
00:11:04,320 --> 00:11:08,770
y la contrasea va a ser el nombre de la contrasea que asign aqu.

130
00:11:08,910 --> 00:11:17,190
As que all tambin agregar una segunda contrasea de campo que es este inicio de sesin para l la contrasea de valor.

131
00:11:17,290 --> 00:11:24,180
Entonces, con un colega, inicias sesin en Meffert y estamos falsificando un registro all.

132
00:11:24,240 --> 00:11:28,670
El siguiente objetivo es ajustar el encabezado o el juego Dynevor.

133
00:11:28,680 --> 00:11:35,490
Y, en general, cada vez que ingresamos o cuando tenemos un usuario registrado en general en este momento, si echamos un vistazo

134
00:11:35,490 --> 00:11:41,280
a nuestra aplicacin, siempre vemos Registro de inicio de sesin, entrenamientos y cierre de sesin, sera bueno ver

135
00:11:41,280 --> 00:11:44,100
solo registrarse e iniciar sesin. si no estamos conectados

136
00:11:44,310 --> 00:11:47,650
Y solo vea el entrenamiento y cierre sesin si lo hacemos.

137
00:11:48,030 --> 00:11:58,310
Para hacer que esto funcione, una cosa que har es agregar un emisor de eventos en mi servicio de oficina.

138
00:11:58,590 --> 00:12:05,580
Esto se utiliza para que pueda informar a otras partes de la aplicacin sobre los cambios en el flujo de educacin o en el

139
00:12:05,580 --> 00:12:07,630
estado del paciente infractor que debo decir.

140
00:12:08,050 --> 00:12:13,800
No voy a utilizar el evento dimeter angular ships porque en su lugar solo debe usarlo

141
00:12:13,800 --> 00:12:17,020
para crear eventos personalizados que usted emita en componentes.

142
00:12:17,050 --> 00:12:22,670
Eres algo de un paquete diferente de nuestro X J. S. que es una dependencia de angular.

143
00:12:22,740 --> 00:12:25,800
Eso proporciona los llamados observables.

144
00:12:25,800 --> 00:12:36,270
Para eso, vamos al archivo TS fuera del servicio y luego estamos en la importacin en la parte superior de importacin desde nuestro X decir J como barras recortadas

145
00:12:36,600 --> 00:12:43,500
marcadas como el objeto es esencialmente lo mismo que un emisor de evento o podramos decir que es un

146
00:12:43,500 --> 00:12:49,810
objeto lo que permite al evento emite y se suscribe a l y a otras partes del mapa.

147
00:12:50,100 --> 00:12:58,700
Entonces, cada vez que registramos un usuario, quiero emitir un evento para el cual crear una nueva propiedad pblica sin

148
00:12:58,710 --> 00:12:59,650
cambios aqu.

149
00:12:59,700 --> 00:13:01,270
Por lo tanto, no agregar privacidad.

150
00:13:01,470 --> 00:13:05,570
Y este va a ser un nuevo tema que es un tipo genrico.

151
00:13:05,570 --> 00:13:11,340
As que eso significa que puede contener cargas tiles de diferente tipo y voy a pasar una carga

152
00:13:11,340 --> 00:13:16,660
til que ser booleana, ya sea verdadera o falsa, indicando si hemos iniciado sesin o no.

153
00:13:18,000 --> 00:13:19,790
Esto ser ejecutado.

154
00:13:19,920 --> 00:13:21,750
Cada vez que registramos un usuario.

155
00:13:21,780 --> 00:13:23,650
Entonces, suspender el cambio.

156
00:13:23,850 --> 00:13:27,210
Y ahora no se emite, sino que es el prximo.

157
00:13:27,480 --> 00:13:31,990
Aqu tenemos que pasar el valor y esto ser cierto porque el siguiente valor es verdadero.

158
00:13:32,040 --> 00:13:33,880
Recuerde que es una carga booleana.

159
00:13:34,140 --> 00:13:40,260
Tan muerto que quien se suscriba a todos los cambios obtendr estos datos y sabr si su

160
00:13:40,260 --> 00:13:45,950
cambio no est bloqueado en bloqueado o como en este caso desde bloqueado para bloquear.

161
00:13:45,990 --> 00:13:53,490
Y simplemente estoy definiendo que lo verdadero debera significar que ests encerrado ahora todos emiten lo mismo e

162
00:13:53,490 --> 00:13:59,650
inician sesin y despus de bloquear todos emiten falso porque ya no ests encerrado.

163
00:13:59,930 --> 00:14:02,350
As que ahora tenemos nuestros eventos establecidos aqu.

164
00:14:02,450 --> 00:14:08,900
Ahora podemos usarlo en los lugares donde queremos reaccionar ante dicho cambio y un buen ejemplo sera en

165
00:14:08,900 --> 00:14:10,500
nuestra cabeza o componente.

166
00:14:10,910 --> 00:14:15,880
As que vamos a la navegacin y luego al componente Hetrick aqu.

167
00:14:16,100 --> 00:14:24,890
Quiero inyectar el servicio off as que agreguemos el servicio fuera de este tipo de servicio y la importacin en la parte superior del archivo

168
00:14:24,920 --> 00:14:30,230
tal como lo hizo en los componentes promedio que est apuntando a ese archivo de

169
00:14:30,230 --> 00:14:35,810
servicio frecuente en la carpeta desactivada en el fuera de la seccin de la aplicacin.

170
00:14:36,090 --> 00:14:42,150
Y con eso Engy en l que se ejecuta cuando se crea el componente.

171
00:14:42,240 --> 00:14:50,750
Deseo configurar una suscripcin comunicndote con el cambio y llamando a suscribirse ahora aqu.

172
00:14:51,500 --> 00:14:54,260
Recibir estos datos admitidos.

173
00:14:54,260 --> 00:14:55,900
Tan verdadero o falso.

174
00:14:56,120 --> 00:14:58,480
Siempre que llamemos a continuacin.

175
00:14:58,610 --> 00:15:05,820
Entonces cada vez que ejecutemos este cdigo o este cdigo o este cdigo aqu en el inicio de sesin.

176
00:15:06,040 --> 00:15:14,260
Por lo tanto, en el componente de navegacin de Hetter que obtengo est desactivado el estado que es verdadero o falso y quiero

177
00:15:14,260 --> 00:15:18,130
configurarlo como una propiedad que est desactivada, que es un booleano.

178
00:15:18,130 --> 00:15:24,020
Digamos que dentro de aqu voy a establecer que est apagado como estado desactivado.

179
00:15:24,160 --> 00:15:30,490
Porque es verdad si estamos encerrados en su culpa si no somos ahora importantes si se est suscribiendo

180
00:15:30,490 --> 00:15:36,830
a un observable, ya que lo estamos haciendo aqu tambin debe darse de baja si ya no lo necesita.

181
00:15:36,850 --> 00:15:40,980
Esto borra una nueva memoria y evita fugas de memoria.

182
00:15:41,140 --> 00:15:45,040
Para hacer eso, realmente necesitas importar algo ms de nuestro.

183
00:15:45,220 --> 00:15:46,240
Y eso es otra cosa.

184
00:15:46,240 --> 00:15:49,490
Es una suscripcin que import de nuestra.

185
00:15:49,550 --> 00:16:00,610
S slash substraction Esto le permite crear una nueva propiedad de suscripcin, quizs de tipo suscripcin, que no est definida inicialmente,

186
00:16:02,960 --> 00:16:07,910
pero en la que se almacena la suscripcin por das.

187
00:16:08,030 --> 00:16:10,370
Usted est creando aqu.

188
00:16:10,520 --> 00:16:14,680
As que fuera del servicio suscribirse devolver una suscripcin de noticias.

189
00:16:15,290 --> 00:16:19,090
Debe darse de baja siempre que se destruya este componente.

190
00:16:19,100 --> 00:16:29,670
As que implementemos en el stroy lifecycle hook, ahora tambin necesita importar datos en el ncleo angular.

191
00:16:29,720 --> 00:16:32,520
As que all arriba deberas agregar el stroy.

192
00:16:33,050 --> 00:16:39,210
Y esto ahora te obliga a agregar un nuevo mtodo a tu energa componente en destruir.

193
00:16:41,340 --> 00:16:46,520
Donde simplemente se cancela esta suscripcin y se cancela la suscripcin.

194
00:16:46,530 --> 00:16:50,750
Esto borra la memoria innecesaria porque ya no necesita esa suscripcin.

195
00:16:50,760 --> 00:16:52,690
El componente est muerto de todos modos.

196
00:16:52,770 --> 00:16:54,660
Sin embargo, no se dara de baja por defecto.

197
00:16:54,750 --> 00:16:58,140
Entonces es por eso que tienes que hacer eso con todo lo establecido.

198
00:16:58,290 --> 00:17:05,460
Obtenemos un lingote que no est definido. Inicialmente, tambin podemos establecerlo en falso inicialmente, lo que nos permite eliminar

199
00:17:05,460 --> 00:17:11,620
la definicin del tipo de datos, pero que luego establecemos en verdadero o falso siempre que no

200
00:17:11,740 --> 00:17:13,630
haya cambios en el cambio.

201
00:17:13,630 --> 00:17:20,560
Entonces, con eso, lo que podemos hacer es ir al encabezado o plantilla de componentes y ahora definir

202
00:17:20,560 --> 00:17:22,900
qu queremos mostrar en qu circunstancias.

203
00:17:23,230 --> 00:17:25,860
As que el enlace de registro aqu.

204
00:17:25,870 --> 00:17:30,430
As que este elemento de la lista solo debera mostrarse si no estamos bloqueados.

205
00:17:30,430 --> 00:17:30,930
Derecha.

206
00:17:30,970 --> 00:17:37,000
As que vamos a agregar a Engy if y establecer que no est desactivado, queremos mostrarlo si no

207
00:17:37,000 --> 00:17:40,480
estamos ofendiendo odiamos lo mismo para iniciar sesin en el entrenamiento.

208
00:17:40,480 --> 00:17:41,710
Ocurre justo lo contrario.

209
00:17:41,800 --> 00:17:46,990
Esto solo debera mostrarse si a menudo se da el caso de que al mismo tiempo para el cierre

210
00:17:46,990 --> 00:17:50,140
de sesin tambin debera mostrarse solo si estamos justificados con eso.

211
00:17:50,350 --> 00:17:57,400
Si volvemos a la aplicacin, puede ver que solo vemos el inicio de sesin y el inicio de sesin, pero an as pude acceder a

212
00:17:57,400 --> 00:17:59,230
la capacitacin. Esto funcionar en un segundo.

213
00:17:59,620 --> 00:18:06,130
Pero si ahora voy a iniciar sesin y a ingresar algo aqu, no tenemos ningn control y envo.

214
00:18:06,130 --> 00:18:08,510
Ahora ves que el men cambia.

215
00:18:08,680 --> 00:18:10,150
No estamos siendo redirigidos.

216
00:18:10,150 --> 00:18:12,310
No estamos protegiendo nuestras otras rutas.

217
00:18:12,310 --> 00:18:13,840
Estas son cosas que podemos agregar.

218
00:18:14,110 --> 00:18:20,120
Pero por el momento tenemos una administracin estatal funcional del estado de la nacin infractora.

219
00:18:20,150 --> 00:18:28,240
Ahora, con eso fuera del camino, hagamos lo mismo para el lado neth porque all si inspeccionamos que tambin tenemos un

220
00:18:28,240 --> 00:18:32,680
par de elementos que no queremos mostrar si no estamos encerrados.

221
00:18:32,720 --> 00:18:35,350
Es este tu desafo en la prxima conferencia?

