WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.510
Hello guys and welcome to one more lesson.

00:00:03.510 --> 00:00:07.080
In the last lesson, we started in queuing our style sheet using

00:00:07.080 --> 00:00:11.880
the WP and Q style function inside the functions dot PHP file.

00:00:11.880 --> 00:00:15.795
In this lesson, you're gonna learn how to enqueue R scripts.

00:00:15.795 --> 00:00:18.510
As I want this license to be very effective,

00:00:18.510 --> 00:00:24.075
less learn how to enqueue both the stylesheet And the Bootstrap JavaScript file.

00:00:24.075 --> 00:00:28.330
I think most of you already know what Bootstrap is, don't you?

00:00:28.330 --> 00:00:32.135
For those who have never heard of it, Bootstrap,

00:00:32.135 --> 00:00:33.650
as its name suggests,

00:00:33.650 --> 00:00:38.825
is a kind of library that makes the creation of responsive sites very easy.

00:00:38.825 --> 00:00:42.065
As this course is not specific about Bootstrap,

00:00:42.065 --> 00:00:44.105
I will not teach details about it.

00:00:44.105 --> 00:00:47.030
Despite this fact, you end up knowing a lot

00:00:47.030 --> 00:00:50.570
about how this tool works as you move along the lessons,

00:00:50.570 --> 00:00:53.255
you see that it's nothing out of this world.

00:00:53.255 --> 00:00:55.625
Ok, in other ci include Bootstrap.

00:00:55.625 --> 00:00:58.310
We can use that same function we created in

00:00:58.310 --> 00:01:02.630
the previous lesson that we called load underscore scripts.

00:01:02.630 --> 00:01:06.230
You need to include the CSS file which is required,

00:01:06.230 --> 00:01:10.475
and at least one JavaScript file that it's optional.

00:01:10.475 --> 00:01:15.035
And it's used to include some Bootstrap plug-ins like model boxes,

00:01:15.035 --> 00:01:17.810
drop-down menus, carousels, Tooltips,

00:01:17.810 --> 00:01:19.355
and many other things.

00:01:19.355 --> 00:01:22.609
Although it's optional for learning purposes.

00:01:22.609 --> 00:01:26.510
We're going to teach how to include the JavaScript file In this lesson.

00:01:26.510 --> 00:01:27.305
Chu.

00:01:27.305 --> 00:01:31.605
Well, we are halfway there since we already know how to include

00:01:31.605 --> 00:01:36.230
stylesheet now which include the JavaScript file within WordPress.

00:01:36.230 --> 00:01:37.640
That is the question.

00:01:37.640 --> 00:01:38.825
But that's easy.

00:01:38.825 --> 00:01:42.950
We are going to use a function much like the one we used in the last lesson,

00:01:42.950 --> 00:01:44.660
WP and Q style.

00:01:44.660 --> 00:01:50.675
This time it will be called WP underscore, enqueue underscore scripts.

00:01:50.675 --> 00:01:56.000
One little detail is that you have chosen q Bootstrap before our main stylesheet.

00:01:56.000 --> 00:01:58.610
The reason is that if you want to override some of

00:01:58.610 --> 00:02:03.785
the bootstrap CSS rules using our main style sheet template that CSS file.

00:02:03.785 --> 00:02:08.525
You want to be able to do that if you include the Bootstrap CSS file here at the end,

00:02:08.525 --> 00:02:10.550
after the main CSS file.

00:02:10.550 --> 00:02:12.350
That's the nature of CSS,

00:02:12.350 --> 00:02:14.375
ok, that's how it works.

00:02:14.375 --> 00:02:16.880
If you want to be able to override something,

00:02:16.880 --> 00:02:19.955
that something must be included first NICU.

00:02:19.955 --> 00:02:23.090
That's not a real problem for the JavaScript file,

00:02:23.090 --> 00:02:25.279
but for the CSS is crucial.

00:02:25.279 --> 00:02:29.490
So let's just include both of them here at the beginning.

00:02:32.740 --> 00:02:36.455
Now this function has its own set of arguments.

00:02:36.455 --> 00:02:38.030
Let's go ahead and meet them.

00:02:38.030 --> 00:02:40.310
The first parameter is the handle.

00:02:40.310 --> 00:02:45.545
Let's call this handle bootstrap hyphen js.

00:02:45.545 --> 00:02:50.885
And the second parameter is also the path on which the file can be found.

00:02:50.885 --> 00:02:54.320
But like the example we used in the last lesson

00:02:54.320 --> 00:02:58.415
related to a file that was inside a folder of our own thing.

00:02:58.415 --> 00:03:03.560
This time, we can just type in a link for the Bootstrap JavaScript file.

00:03:03.560 --> 00:03:08.000
To get this link, we're gonna visit the official Bootstrap page ad,

00:03:08.000 --> 00:03:10.685
get Bootstrap that come.

00:03:10.685 --> 00:03:13.590
Let's click on get started.

00:03:14.470 --> 00:03:20.750
Here under quickstart, we have all the links we need for including bootstrap.

00:03:20.750 --> 00:03:25.115
The first one we are going to copy is the link for the JavaScript file.

00:03:25.115 --> 00:03:26.885
Let's copy this link here.

00:03:26.885 --> 00:03:34.170
Third one, and paste inside single quotation marks into our code.

00:03:34.210 --> 00:03:38.540
Okay, the third parameter is called dependency.

00:03:38.540 --> 00:03:44.315
And pay close attention to this bit of code because here we must type something out.

00:03:44.315 --> 00:03:46.310
It cannot be empty.

00:03:46.310 --> 00:03:48.260
And here's a quick explanation.

00:03:48.260 --> 00:03:51.245
Bootstrap depends on jQuery to work.

00:03:51.245 --> 00:03:56.450
That is, it doesn't work if jQuery hasn't been loaded before it.

00:03:56.450 --> 00:03:59.735
This way, it depends on jQuery.

00:03:59.735 --> 00:04:05.250
To indicate this, let's just type in jQuery inside an array.

00:04:05.680 --> 00:04:11.840
This instance of jQuery that we are indicating comes from the WordPress library itself.

00:04:11.840 --> 00:04:17.150
Thus, there is no need to write another line to enqueue any jQuery file.

00:04:17.150 --> 00:04:19.790
Wordpress has already done that for us.

00:04:19.790 --> 00:04:21.890
He just need to call it here.

00:04:21.890 --> 00:04:23.690
Just a tip for you guys.

00:04:23.690 --> 00:04:25.595
If are using Bootstrap five,

00:04:25.595 --> 00:04:31.040
be aware that there is no more need to use jQuery from version five and up,

00:04:31.040 --> 00:04:33.605
bootstrap no longer uses jQuery.

00:04:33.605 --> 00:04:35.000
If this is your case,

00:04:35.000 --> 00:04:37.040
just pass an empty array here.

00:04:37.040 --> 00:04:39.440
I already tested the files of this course.

00:04:39.440 --> 00:04:43.070
We bootstrap five and they still work like a charm.

00:04:43.070 --> 00:04:46.160
The first parameter is for the version.

00:04:46.160 --> 00:04:49.235
We can type in the version of Bootstrap here.

00:04:49.235 --> 00:04:51.680
In our case, as you're seeing here,

00:04:51.680 --> 00:04:55.355
the version will be 4,

00:04:55.355 --> 00:04:58.070
the first version in Bootstrap four.

00:04:58.070 --> 00:05:00.965
Nonetheless, perimeter is very important.

00:05:00.965 --> 00:05:06.440
It points out if you want to insert our JavaScript file within the photo tag before

00:05:06.440 --> 00:05:12.305
the closing of the body tag or inside the HTML head tag. What is it for?

00:05:12.305 --> 00:05:15.214
Let's take another very practical example.

00:05:15.214 --> 00:05:18.170
Everyone, once in lifetime needed to

00:05:18.170 --> 00:05:21.830
include the Google Analytics script on a site, right?

00:05:21.830 --> 00:05:28.655
Google always recommends that you include that script before the HTML closing head tag.

00:05:28.655 --> 00:05:30.590
But if you want, we can use

00:05:30.590 --> 00:05:34.400
this less perimeter and easily include scripts like ooh analytics,

00:05:34.400 --> 00:05:36.485
not before the closing head tag,

00:05:36.485 --> 00:05:38.585
but at the bottom of the page.

00:05:38.585 --> 00:05:41.810
Bootstrap will also be included on the footer.

00:05:41.810 --> 00:05:44.630
So let's type in true here.

00:05:44.630 --> 00:05:49.385
Notice that by default it's value is false.

00:05:49.385 --> 00:05:53.030
And we can also include the Bootstrap style sheet.

00:05:53.030 --> 00:05:54.950
To make this process easier,

00:05:54.950 --> 00:05:57.470
I'm gonna copy the example we created in

00:05:57.470 --> 00:06:00.485
the last lesson and replace the values where needed.

00:06:00.485 --> 00:06:02.405
I'm gonna change the handle,

00:06:02.405 --> 00:06:06.660
colonnade bootstrap, hyphened CSS.

00:06:08.680 --> 00:06:13.445
I'm going to copy the CSS file link from the Bootstrap site,

00:06:13.445 --> 00:06:15.900
which is this one here.

00:06:21.580 --> 00:06:24.830
There is no dependency this time.

00:06:24.830 --> 00:06:28.550
The version is also 4.

00:06:28.550 --> 00:06:32.780
And this file also refers to our media types.

00:06:32.780 --> 00:06:39.845
Okay, reading. Now these new files will be enqueued together with our last lessons file.

00:06:39.845 --> 00:06:44.339
We can now check if our files are actually enqueued.

00:06:49.480 --> 00:06:55.530
Let's check the source code of our site and search for Bootstrap.

00:06:59.470 --> 00:07:03.050
And look, we found this CSS file.

00:07:03.050 --> 00:07:07.320
Let's do a search now for the JavaScript file.

00:07:09.160 --> 00:07:14.825
But how strange how come the JavaScript file is missing?

00:07:14.825 --> 00:07:20.405
Well, do you remember the WP hat function we used in the last lesson?

00:07:20.405 --> 00:07:24.650
There is a counterpart of it that we can include in the footer

00:07:24.650 --> 00:07:29.630
dot PHP file and its name is WP underscore footer.

00:07:29.630 --> 00:07:36.390
Let's open up the footer.html file and add this function before the body ending tag.

00:07:38.920 --> 00:07:42.695
Now if we look for the JavaScript file, once again,

00:07:42.695 --> 00:07:47.790
we see that it's being loaded at the end of the file as we want it to be.

00:07:48.550 --> 00:07:51.200
Well, that's all for this lesson,

00:07:51.200 --> 00:07:52.565
and I hope you liked it.

00:07:52.565 --> 00:07:53.915
In the next lesson,

00:07:53.915 --> 00:07:57.110
we'll be passing out our first Bootstrap classes,

00:07:57.110 --> 00:07:59.000
so don't miss it.

00:07:59.000 --> 00:08:00.155
And see you then.

00:08:00.155 --> 00:08:01.950
Bye.
