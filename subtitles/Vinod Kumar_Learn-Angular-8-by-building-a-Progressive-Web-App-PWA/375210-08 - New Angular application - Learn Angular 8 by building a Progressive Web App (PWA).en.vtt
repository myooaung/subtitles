WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:10.260
to create a new angular application.

00:00:10.260 --> 00:00:11.500
First letters decide.

00:00:11.500 --> 00:00:13.330
Where do we keep our application?

00:00:13.330 --> 00:00:16.570
So I'm gonna create on desktop First,

00:00:16.570 --> 00:00:23.820
let's open a command prompt or terminal on Mac OS and Leaners City into our desktop and

00:00:23.820 --> 00:00:26.280
then issue the command N G new,

00:00:26.280 --> 00:00:28.850
followed by name off your project.

00:00:28.850 --> 00:00:32.900
The name of the project must be given in lower case letters,

00:00:32.900 --> 00:00:34.390
and if you have multiple words,

00:00:34.390 --> 00:00:37.970
you can separate them using hyphen instead of space.

00:00:37.970 --> 00:00:43.770
Or underscore some real type as movie browser press ender.

00:00:43.770 --> 00:00:46.610
And this is going toe ask you a few questions.

00:00:46.610 --> 00:00:47.420
It says.

00:00:47.420 --> 00:00:49.730
Would you like to add angular routing?

00:00:49.730 --> 00:00:54.070
Angular roading helps us clear single page applications,

00:00:54.070 --> 00:01:00.750
which means you have a single index truck HTML and then the content off the page change

00:01:00.750 --> 00:01:03.800
dynamically based on the Ural part.

00:01:03.800 --> 00:01:05.470
If you want to use routing,

00:01:05.470 --> 00:01:09.150
you can say no here and then at the voting features later.

00:01:09.150 --> 00:01:11.250
But if you say it s here,

00:01:11.250 --> 00:01:12.370
which we will do,

00:01:12.370 --> 00:01:15.340
angular adds the necessary court for us.

00:01:15.340 --> 00:01:16.780
So let's keep it as yes,

00:01:16.780 --> 00:01:17.780
press enter.

00:01:17.780 --> 00:01:21.340
Then you have few options for your CSS.

00:01:21.340 --> 00:01:27.980
Do you want to use the Rossi S is are We want to use other villians off CSS such as a CS is

00:01:27.980 --> 00:01:30.590
our SAS less stylus incident.

00:01:30.590 --> 00:01:33.150
I would like to keep it as CSS itself.

00:01:33.150 --> 00:01:35.240
We will be using bootstrap,

00:01:35.240 --> 00:01:39.310
which is one of the most popular CSS framework from to return.

00:01:39.310 --> 00:01:41.870
This creates a lot of fines,

00:01:41.870 --> 00:01:47.950
as you can see and then installs all the Norges dependencies on windows.

00:01:47.950 --> 00:01:49.630
This Mitic a lot of time.

00:01:49.630 --> 00:01:53.940
So have patients Until this is finished on Mac Hoyas,

00:01:53.940 --> 00:01:56.270
I've seen that this works much faster.

00:01:56.270 --> 00:01:57.020
Even then,

00:01:57.020 --> 00:01:58.550
it is taking a lot of time.

00:01:58.550 --> 00:02:00.110
Once this is complete,

00:02:00.110 --> 00:02:01.280
we will walk through.

00:02:01.280 --> 00:02:03.570
What is the actual court generated?

00:02:03.570 --> 00:02:06.130
Finally,

00:02:06.130 --> 00:02:07.470
after a couple of minutes,

00:02:07.470 --> 00:02:09.450
it has successfully initialized.

00:02:09.450 --> 00:02:10.490
You know,

00:02:10.490 --> 00:02:17.050
if you just do it de around windows or ls minus l on Lenox platform,

00:02:17.050 --> 00:02:19.990
you can see that you have the movie browser application.

00:02:19.990 --> 00:02:25.230
I can see the into that And then if you see what are the fighters that are there?

00:02:25.230 --> 00:02:32.610
There are some folders nor models is the folder that contains all your angular library

00:02:32.610 --> 00:02:33.590
dependencies.

00:02:33.590 --> 00:02:36.520
This is the one that took a lot of time for installation.

00:02:36.520 --> 00:02:42.100
Arrested them are some source scores one of the most important file as we go and check it

00:02:42.100 --> 00:02:44.020
out is the packaged or Jason,

00:02:44.020 --> 00:02:48.750
which consist off on the day as a less The production dependence is,

00:02:48.750 --> 00:02:52.270
and the most important one here is the angular door Jason,

00:02:52.270 --> 00:02:55.670
which is a configuration for for your angular application.

00:02:55.670 --> 00:02:59.000
We can run our application by typing N G,

00:02:59.000 --> 00:03:01.850
served on an optional dash,

00:03:01.850 --> 00:03:05.430
or will open the browser after the application is ready.

00:03:05.430 --> 00:03:08.500
So let's give it a try again for the first years.

00:03:08.500 --> 00:03:10.330
This may take a lot of time,

00:03:10.330 --> 00:03:11.850
especially on Windows,

00:03:11.850 --> 00:03:14.850
and in my case I made chrome as the before browser.

00:03:14.850 --> 00:03:17.950
So you should open Crume in a second.

00:03:17.950 --> 00:03:21.910
You'll see that it opens local host for two double zero,

00:03:21.910 --> 00:03:26.490
which is a local application being sold on the port for two,

00:03:26.490 --> 00:03:27.240
double zero.

00:03:27.240 --> 00:03:30.370
And it has some content over here,

00:03:30.370 --> 00:03:33.570
which is a vile appellate court which will get enough that soon.

00:03:33.570 --> 00:03:36.710
Let's open our application using visual studio cord.

00:03:36.710 --> 00:03:39.450
So I'm gonna take on the Visual studio court icon over here,

00:03:39.450 --> 00:03:44.160
and it is open folder so we can open our folder as a workspace.

00:03:44.160 --> 00:03:45.340
So I click on this,

00:03:45.340 --> 00:03:51.030
go to my desktop over here and then select the movie brother older that contains all of my

00:03:51.030 --> 00:03:51.880
application.

00:03:51.880 --> 00:03:57.910
I click on open Let's have a first looking toe packaged or J son and see what exactly it

00:03:57.910 --> 00:03:58.610
contains.

00:03:58.610 --> 00:04:02.140
So the package Georgeson contains your application just in case.

00:04:02.140 --> 00:04:05.650
If you're trying to publish this on NPM repository,

00:04:05.650 --> 00:04:07.670
this is the name that's going to be given to the C.

00:04:07.670 --> 00:04:08.080
Also,

00:04:08.080 --> 00:04:13.500
the devotion with 000 There are a couple of scripts here which can be run using something

00:04:13.500 --> 00:04:17.430
called N B M Start or NPM test.

00:04:17.430 --> 00:04:18.890
And for the rest of them,

00:04:18.890 --> 00:04:21.310
you might have to say NPM run,

00:04:21.310 --> 00:04:24.780
build NPM Run Lind In PM Ron E.

00:04:24.780 --> 00:04:25.480
Two e.

00:04:25.480 --> 00:04:25.920
R.

00:04:25.920 --> 00:04:28.920
You can use the command N G for a lot of things.

00:04:28.920 --> 00:04:29.610
For example,

00:04:29.610 --> 00:04:36.040
I can say Engy so n g build r N g test because we have access to the global commander,

00:04:36.040 --> 00:04:36.240
Col.

00:04:36.240 --> 00:04:36.420
N.

00:04:36.420 --> 00:04:36.850
G.

00:04:36.850 --> 00:04:39.620
We should be able to do all these things Anyways.

00:04:39.620 --> 00:04:41.060
There are some dependencies,

00:04:41.060 --> 00:04:41.670
as you can see,

00:04:41.670 --> 00:04:46.710
that there are basic dependence is this is the one that contains our basic requirement.

00:04:46.710 --> 00:04:48.880
If you want to work with forms,

00:04:48.880 --> 00:04:49.770
you have that.

00:04:49.770 --> 00:04:51.550
If you want to work with a routing,

00:04:51.550 --> 00:04:52.930
you have that over here.

00:04:52.930 --> 00:04:56.400
A few more original stuff hasn't when we require will come back and have a look into the

00:04:56.400 --> 00:04:56.790
same.

00:04:56.790 --> 00:04:59.410
A lot of depth dependencies such as,

00:04:59.410 --> 00:05:00.220
for example,

00:05:00.220 --> 00:05:03.450
all the testing Fremont's are required only during development,

00:05:03.450 --> 00:05:04.580
not getting production.

00:05:04.580 --> 00:05:12.030
So that's all they'll let's have a look at quickly on angular Georgeson as well.

00:05:12.030 --> 00:05:17.140
Now angular Jason is the one that is used by the Command N G.

00:05:17.140 --> 00:05:18.790
Whenever you're doing whether Engy,

00:05:18.790 --> 00:05:21.050
Selim or N G build Exeter,

00:05:21.050 --> 00:05:24.620
the name of the project is called movie browser.

00:05:24.620 --> 00:05:26.490
So that's what is the name over here.

00:05:26.490 --> 00:05:31.280
The movie browser application can have different architectures.

00:05:31.280 --> 00:05:32.210
For example,

00:05:32.210 --> 00:05:33.460
for building,

00:05:33.460 --> 00:05:37.150
there is one architecture for running their different architectures.

00:05:37.150 --> 00:05:40.200
So if I come down here and collapse this over here,

00:05:40.200 --> 00:05:42.120
you can see that the build there is.

00:05:42.120 --> 00:05:47.250
So there is extract I 18 n that for internationalisation.

00:05:47.250 --> 00:05:48.810
There is one called the test.

00:05:48.810 --> 00:05:51.870
There's one called Lind on one for E.

00:05:51.870 --> 00:05:52.480
Two e.

00:05:52.480 --> 00:05:57.260
So these are all the different configurations that are defined in angular that Jason.

00:05:57.260 --> 00:05:59.020
So when you're on N G.

00:05:59.020 --> 00:06:02.720
So this is a configuration that will be used on.

00:06:02.720 --> 00:06:04.200
If you expand the same,

00:06:04.200 --> 00:06:10.980
you'll see that it's actually going to use an option called US movie browser Colon build.

00:06:10.980 --> 00:06:16.890
That means it depends on the bill configuration with little bit of aliens over here.

00:06:16.890 --> 00:06:19.990
So if I explained the build configuration,

00:06:19.990 --> 00:06:25.460
you'll see that there are options that can be configured on these adoption that are very

00:06:25.460 --> 00:06:25.930
important,

00:06:25.930 --> 00:06:27.480
that we will have a look into that now.

00:06:27.480 --> 00:06:31.490
Number one is what is the home page off your applications,

00:06:31.490 --> 00:06:31.930
it says.

00:06:31.930 --> 00:06:34.430
SRC slash index or HTML.

00:06:34.430 --> 00:06:36.700
So if I happen toe,

00:06:36.700 --> 00:06:38.090
look at the SRC.

00:06:38.090 --> 00:06:40.410
There is an index or HTML,

00:06:40.410 --> 00:06:44.760
and you'll see that the index html consist off very basic structure.

00:06:44.760 --> 00:06:47.530
Html Ahead section A body,

00:06:47.530 --> 00:06:50.840
a body with an unknown HTML tag.

00:06:50.840 --> 00:06:54.750
But this is very well known toe angular as a component.

00:06:54.750 --> 00:06:58.790
We will discuss a lot of things about components as we go forward.

00:06:58.790 --> 00:07:02.970
But this is the H demon that is sold to the closer when you run the application.

00:07:02.970 --> 00:07:05.680
So which means if I go back to the chrome Onda right,

00:07:05.680 --> 00:07:09.210
click somewhere here and then say view paid source,

00:07:09.210 --> 00:07:14.530
the actual HTML you see here is the result off different TML.

00:07:14.530 --> 00:07:15.550
However,

00:07:15.550 --> 00:07:20.480
you can see that the body contains only one tag here called uproot slash Uproot.

00:07:20.480 --> 00:07:26.110
But here again see lot off other court is also included inside the body.

00:07:26.110 --> 00:07:30.610
Not this is what is happening during the wrong time when you do an N G.

00:07:30.610 --> 00:07:36.250
So it took this HTML file and added a lot of content.

00:07:36.250 --> 00:07:38.670
So the content comes from here.

00:07:38.670 --> 00:07:41.700
You can see that there is an entry year called me.

00:07:41.700 --> 00:07:49.800
It says that the SRC slash main dot ts so the SRC slash main tortillas is the entry point

00:07:49.800 --> 00:07:51.100
for our application.

00:07:51.100 --> 00:07:55.910
So all the condemned off main dirty years will be converted in tow.

00:07:55.910 --> 00:07:57.440
Main door Js.

00:07:57.440 --> 00:07:58.620
And that's what actually,

00:07:58.620 --> 00:08:04.610
we're going to see somewhere here there is a script whose SRC is main door chase.

00:08:04.610 --> 00:08:05.340
Apart from that,

00:08:05.340 --> 00:08:08.690
you can also see some of the other things like Polly Field are just.

00:08:08.690 --> 00:08:14.670
This is the one that actually used when you're using Internet Explorer or an older brother

00:08:14.670 --> 00:08:14.670
,

00:08:14.670 --> 00:08:21.250
which doesn't support the modern JavaScript that also as tile start Js noticed that the

00:08:21.250 --> 00:08:25.350
styles have been injected as a job loss could court over here.

00:08:25.350 --> 00:08:27.730
But when you do a production bill,

00:08:27.730 --> 00:08:33.970
this will be extracted into see assess and will be added over here in the index html itself

00:08:33.970 --> 00:08:33.970
.

00:08:33.970 --> 00:08:37.040
You also see some fights like rendered or genius.

00:08:37.040 --> 00:08:39.150
And then there is a runtime door chase.

00:08:39.150 --> 00:08:45.080
Now the runtime Georges and Window Dodges consists off angular compiler over here.

00:08:45.080 --> 00:08:45.720
Now,

00:08:45.720 --> 00:08:47.790
since we're running a development Web server,

00:08:47.790 --> 00:08:52.140
angular sits on your browser on interprets lots off court.

00:08:52.140 --> 00:08:53.790
But during production,

00:08:53.790 --> 00:08:56.070
the angular compel it is no longer required.

00:08:56.070 --> 00:08:58.090
This will be combined in tow.

00:08:58.090 --> 00:09:01.600
A single file cauldron timeto chase So at the wrong time,

00:09:01.600 --> 00:09:04.450
this is a file that manages your application,

00:09:04.450 --> 00:09:07.990
which is going to be in the main dark chase for itself.

00:09:07.990 --> 00:09:11.370
So let's go to see what is there in the main dot de eso.

00:09:11.370 --> 00:09:15.320
If I goto main dirty years under SRC over here,

00:09:15.320 --> 00:09:16.710
it simply does.

00:09:16.710 --> 00:09:17.690
Wanting here,

00:09:17.690 --> 00:09:20.270
which is called Boots top model.

00:09:20.270 --> 00:09:23.470
If I want to explain in simple English platform,

00:09:23.470 --> 00:09:29.880
Rosa Dynamic is an object that represents angular can say and toe angular were suggesting

00:09:29.880 --> 00:09:33.870
that here you have to do a bootstrapping off the model car after module.

00:09:33.870 --> 00:09:40.490
Now that model is a court that is coming from the current folder slash act slash abduct

00:09:40.490 --> 00:09:41.220
module.

00:09:41.220 --> 00:09:43.050
Whenever you see something like that,

00:09:43.050 --> 00:09:46.250
you can assume either dot es or dot Js.

00:09:46.250 --> 00:09:46.930
So right now,

00:09:46.930 --> 00:09:49.300
if you look out at the act folder year,

00:09:49.300 --> 00:09:50.570
if I expand,

00:09:50.570 --> 00:09:55.210
you see that there is an AB model ts now in the at model ts,

00:09:55.210 --> 00:09:59.860
you see one app model class has been created without any content.

00:09:59.860 --> 00:10:04.130
You see something called as a decorator engine model.

00:10:04.130 --> 00:10:10.350
So this is equal and off annotations in Java or attributes in C shop,

00:10:10.350 --> 00:10:13.690
which gives him metta later for this particular class.

00:10:13.690 --> 00:10:17.670
So basically what's happening is that from the main door tears,

00:10:17.670 --> 00:10:19.370
this particular model,

00:10:19.370 --> 00:10:20.220
the APP model,

00:10:20.220 --> 00:10:21.670
is being bootstrapped.

00:10:21.670 --> 00:10:27.230
That means angular is going toe look into the model and sees any meta data information

00:10:27.230 --> 00:10:30.130
given toe model and acts accordingly.

00:10:30.130 --> 00:10:34.030
So if I go to the APP model over here by control,

00:10:34.030 --> 00:10:34.750
click on that.

00:10:34.750 --> 00:10:37.330
The APP model is a empty plants,

00:10:37.330 --> 00:10:39.250
but it has got a lot of metadata.

00:10:39.250 --> 00:10:46.530
The metal leader engine module defines what score as a logical module often application so

00:10:46.530 --> 00:10:48.800
you can create a number of models.

00:10:48.800 --> 00:10:50.780
But this is gonna be the starting model,

00:10:50.780 --> 00:10:53.750
and this model may import other models.

00:10:53.750 --> 00:10:54.330
For example,

00:10:54.330 --> 00:10:57.370
you can see that there is something called browser module,

00:10:57.370 --> 00:10:58.770
a protein modules,

00:10:58.770 --> 00:10:59.270
etcetera.

00:10:59.270 --> 00:11:01.690
So if you want to add more models,

00:11:01.690 --> 00:11:02.280
for example,

00:11:02.280 --> 00:11:04.500
if I want to work with HTML forms,

00:11:04.500 --> 00:11:09.390
I might have to come and say You're forms model on so on and so forth.

00:11:09.390 --> 00:11:15.050
So you are additional model so that the content off that model becomes part of your

00:11:15.050 --> 00:11:18.210
application will come back to this section later.

00:11:18.210 --> 00:11:19.350
But for now,

00:11:19.350 --> 00:11:24.080
let's focus on the bootstrap because we want to see when the application is started.

00:11:24.080 --> 00:11:25.470
What is happening,

00:11:25.470 --> 00:11:29.490
So to come back again when your application starts.

00:11:29.490 --> 00:11:32.050
This is the first line of execution,

00:11:32.050 --> 00:11:35.160
so the execution says they're angular.

00:11:35.160 --> 00:11:36.060
Bootstrap,

00:11:36.060 --> 00:11:40.890
this model card at model on the APP model has a component,

00:11:40.890 --> 00:11:44.420
which is the visual your element often application.

00:11:44.420 --> 00:11:48.130
So it says that find this component and do a bootstrapping.

00:11:48.130 --> 00:11:51.390
So if I go to the APP component over here,

00:11:51.390 --> 00:11:54.280
which is a type stood classified here,

00:11:54.280 --> 00:11:57.670
which is called at component Importantly,

00:11:57.670 --> 00:12:00.460
it has a decorator called at Component,

00:12:00.460 --> 00:12:03.370
which provides metadata for this particular class.

00:12:03.370 --> 00:12:07.160
On one of the things that you can see here is called selector,

00:12:07.160 --> 00:12:09.060
which is ab dash route.

00:12:09.060 --> 00:12:14.040
And the abduction route is the one that is used in index HTML.

00:12:14.040 --> 00:12:19.250
So what angular is doing is so remember our main door,

00:12:19.250 --> 00:12:21.440
Jace will be injected over here.

00:12:21.440 --> 00:12:22.950
We saw that right here.

00:12:22.950 --> 00:12:23.760
Does that mean Doctor?

00:12:23.760 --> 00:12:24.180
Yes.

00:12:24.180 --> 00:12:28.120
So when the browser starts interpreting each off these lines,

00:12:28.120 --> 00:12:34.000
the last line that it encounters is running a script here which is commend are just on in

00:12:34.000 --> 00:12:35.170
the main Dodgers.

00:12:35.170 --> 00:12:40.680
What actually happens is that it is tryingto load a model called APP model.

00:12:40.680 --> 00:12:41.800
On in the at,

00:12:41.800 --> 00:12:47.010
Mordovia mentioned that the bootstrap component is at component and in the APP component,

00:12:47.010 --> 00:12:48.980
we said that the selector,

00:12:48.980 --> 00:12:51.250
meaning a tactical uproot,

00:12:51.250 --> 00:12:57.790
should be replaced with content off the HTML and apply the associated CSS.

00:12:57.790 --> 00:12:59.840
So the after component,

00:12:59.840 --> 00:13:04.850
or HTML which is right here contains lots of HTML course over here,

00:13:04.850 --> 00:13:08.450
which is what actually you see in this particular place.

00:13:08.450 --> 00:13:15.840
So if I just go here to this html select all get rid of everything and then at your h one

00:13:15.840 --> 00:13:17.690
on gets a hello world,

00:13:17.690 --> 00:13:19.050
save it.

00:13:19.050 --> 00:13:25.240
And if I come back to the browser Now you can see that it is a lower because now the APA

00:13:25.240 --> 00:13:25.840
route,

00:13:25.840 --> 00:13:31.590
the tag uproot is now going to be containing the HTM and that I have given.

00:13:31.590 --> 00:13:34.460
So if I go and do an inspect element here,

00:13:34.460 --> 00:13:38.150
limit a strike on this pitch and then say inspect,

00:13:38.150 --> 00:13:46.480
you should see that the apa root slash uproot that's over here body If I see uproot slash

00:13:46.480 --> 00:13:46.970
Uproot.

00:13:46.970 --> 00:13:47.790
If I expand that,

00:13:47.790 --> 00:13:49.970
you can see my hitch one with content.

00:13:49.970 --> 00:13:50.410
Hello.

00:13:50.410 --> 00:13:57.940
So basically all we did is that we said find the tag a put on inside that include the

00:13:57.940 --> 00:14:05.620
content of this HTML So let me recap everything again So I'm gonna go toe my angular dot

00:14:05.620 --> 00:14:12.980
Jason file where we say that the entry file for this application is an index html on the

00:14:12.980 --> 00:14:19.370
index html should be included with the content off Main Dark Dia's and the main Dirty Ears

00:14:19.370 --> 00:14:25.200
has a bootstrap instruction saying that we had to bootstrap a model called at Marty on the

00:14:25.200 --> 00:14:29.820
APP model says that there is a component called at component which has to be bootstrapped

00:14:29.820 --> 00:14:37.200
on the app component say's that wherever uproot element are html element called a protease

00:14:37.200 --> 00:14:44.240
found its content must be replaced with a content off at component HTML on up competent,

00:14:44.240 --> 00:14:48.340
each demon is now containing only Hitch one.

00:14:48.340 --> 00:14:49.350
Hello word.

00:14:49.350 --> 00:14:56.800
One other thing that you can also see here is that if I goto at component and I'll say hash

00:14:56.800 --> 00:14:56.800
,

00:14:56.800 --> 00:14:59.590
uproot and save my file now,

00:14:59.590 --> 00:15:00.020
in fact,

00:15:00.020 --> 00:15:02.940
I've done the file auto sale options.

00:15:02.940 --> 00:15:04.440
So every time I type something,

00:15:04.440 --> 00:15:05.950
it is automatically saved.

00:15:05.950 --> 00:15:08.410
So I've changes toe uproot.

00:15:08.410 --> 00:15:09.840
And if I go back to the browser,

00:15:09.840 --> 00:15:13.020
you'd see that my actual content is empty,

00:15:13.020 --> 00:15:20.810
primarily because angular is now looking for an element whose idea is uproot in the index

00:15:20.810 --> 00:15:21.330
html.

00:15:21.330 --> 00:15:26.250
And since it is not finding any element with idea off uproot,

00:15:26.250 --> 00:15:30.390
so it is actually not doing any injection off the court.

00:15:30.390 --> 00:15:36.470
So the absolute slash absolute is not handled by angular and neither by the browser,

00:15:36.470 --> 00:15:37.920
so it is being discarded.

00:15:37.920 --> 00:15:41.740
But if I go back to the HTML on instead off this,

00:15:41.740 --> 00:15:46.800
I can type your deal hash at route like this.

00:15:46.800 --> 00:15:47.550
And if I pressed,

00:15:47.550 --> 00:15:54.170
enter results to the court is going toe create a do with an idea off uproot like this on

00:15:54.170 --> 00:15:59.950
that we should see my html core comes back because now we are actually telling in the app

00:15:59.950 --> 00:16:07.330
component ts that whenever there is an element whose ideas uproot replace that with this

00:16:07.330 --> 00:16:10.550
content So you can play around with this For example,

00:16:10.550 --> 00:16:11.110
if you put it,

00:16:11.110 --> 00:16:17.850
don't it means that find an element who see ASUs class name is uproot which is currently

00:16:17.850 --> 00:16:20.080
not present So I don't see anything over here.

00:16:20.080 --> 00:16:27.940
But if I go back to the index html and then come in this one and type your dot uproot So we

00:16:27.940 --> 00:16:34.350
escort is going to give me a deal with a class off uproot like this says the fight I go

00:16:34.350 --> 00:16:41.500
back and you can see now Hello world embedded into the deal with a class off uproots inside

00:16:41.500 --> 00:16:43.850
that we will see our hedge one over here

