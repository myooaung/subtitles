WEBVTT
1
00:00:00.802 --> 00:00:03.302
If you're finished with a cluster and want to clean things up so

2
00:00:03.302 --> 00:00:05.451
you aren't getting charged for idle resources,

3
00:00:05.451 --> 00:00:11.407
you'll first delete the load balancer service by using kubectl delete service,

4
00:00:11.407 --> 00:00:14.300
then the name of the load balancer service.

5
00:00:14.300 --> 00:00:17.321
Next, you'll delete the cluster with az aks delete,

6
00:00:17.321 --> 00:00:21.282
name of the resource group, and name of the cluster.

7
00:00:21.282 --> 00:00:24.465
If you're no longer using the images you pushed to the registry,

8
00:00:24.465 --> 00:00:29.320
you'll want to delete those as well using the az acr repository delete command

9
00:00:29.320 --> 00:00:34.765
with the name of the repository and image as parameters.

10
00:00:34.765 --> 00:00:35.494
If you're really cleaning up,

11
00:00:35.494 --> 00:00:39.097
you can remove the entire resource group with az group

12
00:00:39.097 --> 00:00:42.017
delete and the name of the group.

13
00:00:42.017 --> 00:00:43.157
As part of deleting the resource group,

14
00:00:43.157 --> 00:00:45.847
it will automatically get rid of the container registry

15
00:00:45.847 --> 00:00:48.711
and container images in that group.

16
00:00:48.711 --> 00:00:54.386
Run kubectl get service to double check the name of your load balancer service.

17
00:00:54.386 --> 00:00:59.673
Then you can run kubectl delete service, then the name of the service.

18
00:00:59.673 --> 00:01:03.195
Next we'll run az aks delete to delete the demo

19
00:01:03.195 --> 00:01:05.596
cluster in the kube demo resource group.

20
00:01:05.596 --> 00:01:10.384
Again, this will probably take several minutes so I'm going to fast forward.

21
00:01:10.384 --> 00:01:13.149
A trip back to the portal under Kubernetes services

22
00:01:13.149 --> 00:01:15.880
will show there are no more clusters.

23
00:01:15.880 --> 00:01:20.329
Next, we'll take care of the 2.0 image from the repository.

24
00:01:20.329 --> 00:01:22.773
Yes, we want to delete it.

25
00:01:22.773 --> 00:01:26.373
Going back to the console, we can see the 1.0 tag is still there,

26
00:01:26.373 --> 00:01:28.542
but the 2.0 tag is gone.

27
00:01:28.542 --> 00:01:32.022
I'll go ahead and show deleting a resource group to take

28
00:01:32.022 --> 00:01:34.723
care of the registry and the 1.0 image.

29
00:01:34.723 --> 00:01:37.996
Keep in mind that you would only want to do this if you are

30
00:01:37.996 --> 00:01:39.928
completely done with the resource group.

31
00:01:39.928 --> 00:01:42.078
Let me say that again.

32
00:01:42.078 --> 00:01:45.318
Do not delete the resource group unless you are totally done

33
00:01:45.318 --> 00:01:48.829
with everything in the resource group.

34
00:01:48.829 --> 00:01:50.627
This may take a few minutes, but when it's done,

35
00:01:50.627 --> 00:01:57.130
we can go back to the container registries and see there is nothing there.

36
00:01:57.130 --> 00:01:57.465
Congratulations!

37
00:01:57.465 --> 00:02:00.389
You can now use the Azure Kubernetes Service.

38
00:02:00.389 --> 00:02:04.229
You've gone through an entire application lifecycle; creating,

39
00:02:04.229 --> 00:02:05.944
scaling, updating, and deleting.

40
00:02:05.944 --> 00:02:08.668
Now you can try it out with your own app.

41
00:02:08.668 --> 00:02:12.390
I encourage you to also check out the modules on AWS and

42
00:02:12.390 --> 00:02:19.000
Google so you can decide for yourself which cloud Kubernetes service makes the most sense for you.

