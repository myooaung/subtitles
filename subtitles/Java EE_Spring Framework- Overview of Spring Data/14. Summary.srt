1
00:00:01,001 --> 00:00:03,102
And that covers it for this module.

2
00:00:03,102 --> 00:00:05,385
We've learned that in order to query data,

3
00:00:05,385 --> 00:00:09,042
each Spring Data module makes use of the Repository interface.

4
00:00:09,042 --> 00:00:14,127
This is a data store agnostic interoperable way of executing queries.

5
00:00:14,127 --> 00:00:16,499
We will rarely have to write our own implementation code while

6
00:00:16,499 --> 00:00:20,300
making use of repositories as Spring Data does a great job of

7
00:00:20,300 --> 00:00:22,605
generating all the boilerplate we need.

8
00:00:22,605 --> 00:00:25,637
Basic CRUD operations come out of the box through

9
00:00:25,637 --> 00:00:27,226
the PagingAndSortingRepository,

10
00:00:27,226 --> 00:00:29,749
while the bespoke queries can be derived from Spring

11
00:00:29,749 --> 00:00:32,094
Data based on method signatures.

12
00:00:32,094 --> 00:00:35,356
And the paging and sorting of queries are abstracted.

13
00:00:35,356 --> 00:00:37,622
We can also fall back to creating custom

14
00:00:37,622 --> 00:00:40,663
implementations of queries if we need to.

15
00:00:40,663 --> 00:00:41,601
In the next module,

16
00:00:41,601 --> 00:00:49,000
we'll be using Spring Data with the @Transactional annotation in order to learn how we can manage our database transactions with Spring.

