WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.550
We've talked previously about how we can use

00:00:02.550 --> 00:00:06.885
the CSS flexbox to create different types of layouts.

00:00:06.885 --> 00:00:09.900
On a small screen view over on the right,

00:00:09.900 --> 00:00:14.325
we may typically want the content to be the full available width and

00:00:14.325 --> 00:00:19.665
stacked on top of each of a vertically by certainly flex direction to be column.

00:00:19.665 --> 00:00:23.940
When we have more screen space available like over on the left,

00:00:23.940 --> 00:00:26.490
we also often want to take advantage of

00:00:26.490 --> 00:00:31.305
this extra space and add our content be side-by-side.

00:00:31.305 --> 00:00:36.270
We know that the flexbox can do this by setting the direction to be row,

00:00:36.270 --> 00:00:41.349
but how do we apply this on different screen sizes using CSS?

00:00:41.349 --> 00:00:45.965
Well, the way to do this is to add a CSS media query,

00:00:45.965 --> 00:00:50.495
which is basically a way of creating a section of our CSS,

00:00:50.495 --> 00:00:53.660
which only applies to certain screen sizes,

00:00:53.660 --> 00:00:57.980
orientation or resolution, to name a few.

00:00:57.980 --> 00:01:01.280
Back over to the Mozilla Developer Network,

00:01:01.280 --> 00:01:04.130
well, in the Using Media Query section,

00:01:04.130 --> 00:01:06.800
and here we can find small examples of how we can use

00:01:06.800 --> 00:01:12.395
media queries to apply different style in depending on the device.

00:01:12.395 --> 00:01:14.780
First of all, if we scroll down,

00:01:14.780 --> 00:01:17.045
we have a media type section,

00:01:17.045 --> 00:01:21.155
and this is the first step to constructing a media query.

00:01:21.155 --> 00:01:25.705
Here we can set these CSS rules to apply depending on the device.

00:01:25.705 --> 00:01:30.484
We can apply this to things such as a speech synthesizer, a screen,

00:01:30.484 --> 00:01:31.970
the Print Preview mode,

00:01:31.970 --> 00:01:36.490
or we can select all to apply to all different devices.

00:01:36.490 --> 00:01:38.240
Further down in the next section,

00:01:38.240 --> 00:01:40.265
we have media features,

00:01:40.265 --> 00:01:43.580
and these features are generally more specific to the device,

00:01:43.580 --> 00:01:45.890
such as the width, the height,

00:01:45.890 --> 00:01:49.760
and also if the device is landscape or portrait.

00:01:49.760 --> 00:01:53.075
One of the most common uses for media queries,

00:01:53.075 --> 00:01:55.970
and what we're going to be using them for in this course

00:01:55.970 --> 00:01:59.885
is to change our style in based on the width of the screen,

00:01:59.885 --> 00:02:03.640
and we can see this down on the bottom of this section.

00:02:03.640 --> 00:02:08.975
We can set CSS rules based off the width of the viewport.

00:02:08.975 --> 00:02:14.090
Let's go over to our CSS file and we can add these to our projects.

00:02:14.090 --> 00:02:19.295
The first step is to decide what screen which we want to change the CSS,

00:02:19.295 --> 00:02:24.305
and starting over in the browser with the small screen view.

00:02:24.305 --> 00:02:29.500
We generally want to change things around when our content looks to stretch.

00:02:29.500 --> 00:02:32.630
For example, if we make this wider,

00:02:32.630 --> 00:02:36.295
we always get to a point where the content looks really stretched,

00:02:36.295 --> 00:02:38.865
and then we want to rearrange our layout.

00:02:38.865 --> 00:02:42.650
Once we get to a size where we want to change our content,

00:02:42.650 --> 00:02:45.670
we also need to detect how wide this is,

00:02:45.670 --> 00:02:48.410
so we can add this to a media query.

00:02:48.410 --> 00:02:53.075
Most browsers have certain plug-ins or extensions which are available,

00:02:53.075 --> 00:02:55.130
show the width of the screen,

00:02:55.130 --> 00:03:01.390
or another option is to go to right-click and inspect to open up the developer tools,

00:03:01.390 --> 00:03:04.565
and inside here as we stretch the browser,

00:03:04.565 --> 00:03:06.890
we can see in the top right-hand corner,

00:03:06.890 --> 00:03:09.620
the width of the browser is displayed.

00:03:09.620 --> 00:03:12.560
Once we get a little wider,

00:03:12.560 --> 00:03:16.565
and I'm going to go for somewhere around 860,

00:03:16.565 --> 00:03:20.345
but I'm going to change the layout to house them content side-by-side.

00:03:20.345 --> 00:03:22.490
Often in our style.css,

00:03:22.490 --> 00:03:26.615
we can begin by @media query with the at media rule.

00:03:26.615 --> 00:03:29.240
As we've seen before in the Mozilla websites,

00:03:29.240 --> 00:03:30.970
we can target the screen,

00:03:30.970 --> 00:03:35.120
and we can also combine this with some of the media features which we looked at,

00:03:35.120 --> 00:03:37.790
such as the minimum width of the browser,

00:03:37.790 --> 00:03:42.100
which I'm going to set to be 860 pixels.

00:03:42.100 --> 00:03:47.855
Now what we need to do inside of these curly braces is to add any CSS rules,

00:03:47.855 --> 00:03:50.050
just like we've used previously.

00:03:50.050 --> 00:03:55.445
Basically any of the style in which we have above will always apply to our project,

00:03:55.445 --> 00:03:58.340
but the ones in these curly braces will only apply when

00:03:58.340 --> 00:04:01.880
the screen reaches 860 pixels and above.

00:04:01.880 --> 00:04:07.790
[inaudible] the body section and we can create a real insider here.

00:04:07.790 --> 00:04:11.530
Let's set the background to be the color of red,

00:04:11.530 --> 00:04:14.505
set this and reload.

00:04:14.505 --> 00:04:17.235
You see the red background color,

00:04:17.235 --> 00:04:20.564
and then let's go below 860 pixels,

00:04:20.564 --> 00:04:23.655
and this rule will no longer apply.

00:04:23.655 --> 00:04:29.045
If you want to target all different sized devices and not just those screen,

00:04:29.045 --> 00:04:34.700
we can also simplify our media query just like this. Let's test this out.

00:04:34.700 --> 00:04:38.835
Reload the browser, and this still applies.

00:04:38.835 --> 00:04:41.300
Of course, we don't want this red background color just like

00:04:41.300 --> 00:04:43.700
this instead of now media query.

00:04:43.700 --> 00:04:48.475
We're going to begin at the top of our projects with our navigation links.

00:04:48.475 --> 00:04:51.000
If we take a look at the final version,

00:04:51.000 --> 00:04:53.570
this is going to be over on the right-hand side.

00:04:53.570 --> 00:04:57.290
Let's do this now. Instead of targeting the body section,

00:04:57.290 --> 00:04:59.620
we're going to target the navigation,

00:04:59.620 --> 00:05:02.235
and then the unordered list,

00:05:02.235 --> 00:05:05.300
and we can move these over to the right by justifying

00:05:05.300 --> 00:05:09.005
the contents to be the value of flex-end.

00:05:09.005 --> 00:05:14.730
If we take a look at the nav ul section by searching for this,

00:05:14.730 --> 00:05:18.720
this n minus currently on line 43.

00:05:18.720 --> 00:05:21.700
Well, here we can see we set the global styling.

00:05:21.700 --> 00:05:24.280
We've already set the display type to be flex,

00:05:24.280 --> 00:05:27.470
so this will always be the case throughout our project.

00:05:27.470 --> 00:05:32.105
Here we set the justify contents to be in a center for the small screens,

00:05:32.105 --> 00:05:35.920
but now inside of our larger media query at the bottom,

00:05:35.920 --> 00:05:39.055
we override this with flex-end.

00:05:39.055 --> 00:05:41.380
Now if we save this,

00:05:41.380 --> 00:05:46.475
reload the browser, this will be over on the right-hand side for the larger view.

00:05:46.475 --> 00:05:48.280
Then as we shrink the browser down,

00:05:48.280 --> 00:05:50.875
this will go back to the center.

00:05:50.875 --> 00:05:55.435
The next thing we need to do is to rotate the text of I make things,

00:05:55.435 --> 00:05:58.600
so we can also add this to the media query too.

00:05:58.600 --> 00:06:01.670
This has the class of rotates.

00:06:01.670 --> 00:06:04.545
First of all, I'm going to add some margin.

00:06:04.545 --> 00:06:08.260
We've looked at how to add margin to all four sides.

00:06:08.260 --> 00:06:12.610
We've also looked at how we can apply margin and padding to the top and bottom,

00:06:12.610 --> 00:06:14.915
and also the left and right.

00:06:14.915 --> 00:06:18.595
If we want to control the four individual values,

00:06:18.595 --> 00:06:21.055
we can also set these separately too.

00:06:21.055 --> 00:06:23.875
Inside here, we can set four different values,

00:06:23.875 --> 00:06:26.305
and this will be the value of the top, right,

00:06:26.305 --> 00:06:29.495
bottom, and left in a particular order.

00:06:29.495 --> 00:06:32.400
First of all, two rems on the top,

00:06:32.400 --> 00:06:35.265
zero on the right, bottom, and left.

00:06:35.265 --> 00:06:38.500
Next thing we're going to set the writing mode,

00:06:38.500 --> 00:06:43.539
which is going to be important for laying out our text horizontally or vertically.

00:06:43.539 --> 00:06:46.720
This is going to be a valuable vertical- lr.

00:06:46.720 --> 00:06:50.875
This will set our text to be vertical from left to right.

00:06:50.875 --> 00:06:53.550
The text is now vertical as expected,

00:06:53.550 --> 00:06:56.270
but if we take look at the final version,

00:06:56.270 --> 00:06:59.870
we see that the characters is also upright too.

00:06:59.870 --> 00:07:02.975
We can do this in our project by also setting

00:07:02.975 --> 00:07:07.920
the text orientation and the value of upright.

00:07:07.920 --> 00:07:10.310
We can make use of this property when

00:07:10.310 --> 00:07:13.760
our writing mode is set to vertical, and then finally,

00:07:13.760 --> 00:07:17.015
we can also set the font size to be a lot larger,

00:07:17.015 --> 00:07:19.180
so the value of five rem,

00:07:19.180 --> 00:07:22.420
save this unaltered to the browser.

00:07:23.520 --> 00:07:29.470
When LCL Vertical Text has spilled over into the parallax section,

00:07:29.470 --> 00:07:33.580
to fix this, we're going to add something else inside of our media query.

00:07:33.580 --> 00:07:37.630
We're going to target the header section and we're going to set

00:07:37.630 --> 00:07:42.640
the height to be 100 percent, save and reload.

00:07:42.640 --> 00:07:45.385
This now fixes our problem.

00:07:45.385 --> 00:07:50.230
I'm not going to do anything with our parallax section now if we scroll down,

00:07:50.230 --> 00:07:53.020
this looks pretty good on the larger screen too.

00:07:53.020 --> 00:07:55.885
Wee can move down to the recent work section.

00:07:55.885 --> 00:07:58.360
Since we now have more screen space available,

00:07:58.360 --> 00:08:02.720
we're going to place the text alongside the image on each row.

00:08:02.720 --> 00:08:05.820
We can do this by targeting the container,

00:08:05.820 --> 00:08:08.150
which is recent work.

00:08:08.150 --> 00:08:11.860
Then set the flex direction to the row,

00:08:11.860 --> 00:08:17.905
reload, placing the content inside of our rows side-by-side.

00:08:17.905 --> 00:08:24.640
The next thing we need to do is to set the sizing for our text area and also our image.

00:08:24.640 --> 00:08:28.900
We can do this by setting the flex property to be a value.

00:08:28.900 --> 00:08:34.840
For example, if the info section and the image had a flex value of one,

00:08:34.840 --> 00:08:37.630
these would take up an equal amount of space.

00:08:37.630 --> 00:08:40.660
But we want the image to be a little larger so we can set

00:08:40.660 --> 00:08:44.275
the flex value on the info section to the value of one.

00:08:44.275 --> 00:08:47.950
Then set the image to have a flex value of two,

00:08:47.950 --> 00:08:50.965
which will effectively take up twice the space.

00:08:50.965 --> 00:08:55.460
Let's do this now starting with the recent work info.

00:08:57.000 --> 00:09:02.560
Remember this is for the text we set the flex value

00:09:02.560 --> 00:09:08.035
to be one and also add some padding to the inside of one RAM.

00:09:08.035 --> 00:09:12.500
The image has the class of recent work image.

00:09:12.810 --> 00:09:18.130
Again, still making sure that this is still within our media query section,

00:09:18.130 --> 00:09:21.250
we would set the flex value to be two,

00:09:21.250 --> 00:09:25.510
taking over twice the available space as our info section.

00:09:25.510 --> 00:09:29.245
I'm also going to add a border around this image.

00:09:29.245 --> 00:09:33.910
I'm going to begin by setting the color to be light slight gray.

00:09:33.910 --> 00:09:39.355
The thickness of the border to be one RAM and also a solid line.

00:09:39.355 --> 00:09:42.310
Reload the browser, leaving the image to be

00:09:42.310 --> 00:09:45.880
taking up twice the available space as our info.

00:09:45.880 --> 00:09:48.175
Just before we wrap up this section,

00:09:48.175 --> 00:09:50.800
I'm also going to target the image so

00:09:50.800 --> 00:09:56.259
the recent work image and then the image element nested inside.

00:09:56.259 --> 00:09:59.380
Just to make sure that the width of the image and also

00:09:59.380 --> 00:10:04.280
the height stretches the full 100 percent of the container.

00:10:05.280 --> 00:10:09.860
Just in case our images are not sized correctly,

00:10:09.900 --> 00:10:12.190
as we discovered earlier,

00:10:12.190 --> 00:10:14.590
let's go to our final project and take

00:10:14.590 --> 00:10:18.985
a look at how our image and our content is alternated.

00:10:18.985 --> 00:10:22.660
One of the ways we can do this is to switch the order of

00:10:22.660 --> 00:10:26.440
our HTML so if we go to our index page,

00:10:26.440 --> 00:10:31.450
we could switch around the order of our image and our text.

00:10:31.450 --> 00:10:34.660
This is one approach which we can take and this will

00:10:34.660 --> 00:10:38.110
work fine for the larger screen view.

00:10:38.110 --> 00:10:43.720
However, if we go to the smaller screen view by stretching the browser,

00:10:43.720 --> 00:10:47.575
this will also affect the order for the small screen.

00:10:47.575 --> 00:10:49.945
Here we have the info,

00:10:49.945 --> 00:10:52.045
the image, the info,

00:10:52.045 --> 00:10:54.430
and then the image, this wouldn't be

00:10:54.430 --> 00:10:57.835
the case if we switched the source order of the HTML.

00:10:57.835 --> 00:11:01.900
Instead we can use a flex box property called order,

00:11:01.900 --> 00:11:06.880
which will allow us to change the order in which elements appear on the page with

00:11:06.880 --> 00:11:12.790
a lower or a negative number appearing first over in the HTML file.

00:11:12.790 --> 00:11:17.380
I'm going to add a class to the first recent work info section.

00:11:17.380 --> 00:11:22.225
Let's go to our first project and select the recent work info.

00:11:22.225 --> 00:11:25.810
We're going to add a second class of new right.

00:11:25.810 --> 00:11:29.020
Now I can use this class over in our style sheet to

00:11:29.020 --> 00:11:33.145
rearrange the source order. Let's target this.

00:11:33.145 --> 00:11:38.905
To move right, we can set the order to be a value of one.

00:11:38.905 --> 00:11:41.110
The default value is 0,

00:11:41.110 --> 00:11:42.805
so just before we save this file,

00:11:42.805 --> 00:11:45.965
let's take a look at what we currently have.

00:11:45.965 --> 00:11:47.910
At the moment we have,

00:11:47.910 --> 00:11:49.905
if we go to our projects,

00:11:49.905 --> 00:11:53.945
we have the info on the left and the image on the right.

00:11:53.945 --> 00:11:57.445
Save this file, reload,

00:11:57.445 --> 00:12:02.590
and now our info section has been moved to the right of our project.

00:12:02.590 --> 00:12:05.890
The reason this works is because our default value,

00:12:05.890 --> 00:12:09.340
our default order, is the value of 0.

00:12:09.340 --> 00:12:12.550
The image section will still have the value of 0,

00:12:12.550 --> 00:12:14.650
making this appear first.

00:12:14.650 --> 00:12:18.550
Then we'll set the info section to have a value of one.

00:12:18.550 --> 00:12:20.365
This is a higher number,

00:12:20.365 --> 00:12:23.200
this will appear last in the order.

00:12:23.200 --> 00:12:26.260
This is also still within the media query,

00:12:26.260 --> 00:12:30.415
so this order will only take effect on the larger screens.

00:12:30.415 --> 00:12:32.590
Let's now finish off the styling for

00:12:32.590 --> 00:12:36.520
this media query by moving down to the contact section.

00:12:36.520 --> 00:12:39.880
Currently, everything is aligned into the center and we also

00:12:39.880 --> 00:12:43.585
still need to re-introduce our rotated texts.

00:12:43.585 --> 00:12:45.520
Over in the index page,

00:12:45.520 --> 00:12:48.565
let's go down to the contact section.

00:12:48.565 --> 00:12:51.775
First of all, we have the class of contact heading.

00:12:51.775 --> 00:12:54.790
I'm going to make this even bigger for this section.

00:12:54.790 --> 00:12:57.415
We can then select the whole container,

00:12:57.415 --> 00:12:59.965
change the flex direction to the row,

00:12:59.965 --> 00:13:02.875
and then also add some space into.

00:13:02.875 --> 00:13:08.210
Let's start with the heading to the class of contact heading.

00:13:08.730 --> 00:13:13.300
I'm going to reset the margin to be a value of 0,

00:13:13.300 --> 00:13:20.140
set the font size to be even bigger of a RAM, reload.

00:13:20.140 --> 00:13:23.710
Next we are going to reintroduce the rotated text.

00:13:23.710 --> 00:13:27.745
Let's do this by overriding the display type from earlier.

00:13:27.745 --> 00:13:30.295
Let's select the contact section,

00:13:30.295 --> 00:13:32.530
the class of rotates.

00:13:32.530 --> 00:13:37.370
All we need to do here is to set the display type to be block.

00:13:37.440 --> 00:13:40.720
This will override these styles which we set earlier.

00:13:40.720 --> 00:13:43.240
If we scroll up, we set this action to have

00:13:43.240 --> 00:13:46.855
the display type of none on the small screen view,

00:13:46.855 --> 00:13:48.880
now we said this could be block.

00:13:48.880 --> 00:13:52.090
This will now display on the larger screens.

00:13:52.090 --> 00:13:54.640
We also want this section to be over on

00:13:54.640 --> 00:13:59.350
the right-hand side and the way we can do this is by setting the flex box.

00:13:59.350 --> 00:14:04.000
We can set the full contact section to have the flex direction of row,

00:14:04.000 --> 00:14:08.890
meaning that our vertical text will be alongside the section here.

00:14:08.890 --> 00:14:14.980
Select the contact, which is the full wrapper for our section.

00:14:14.980 --> 00:14:18.950
Set the display type to be the flex.

00:14:18.960 --> 00:14:23.275
Meaning we can set the flex direction to be row,

00:14:23.275 --> 00:14:28.480
reload the browser, place this alongside each other on the page.

00:14:28.480 --> 00:14:33.265
We can add some space in between by selecting and justifying contents.

00:14:33.265 --> 00:14:36.790
The property of space between which will

00:14:36.790 --> 00:14:40.704
distribute the available space between our two sections.

00:14:40.704 --> 00:14:43.975
I'm also going to set the text alignment be the left,

00:14:43.975 --> 00:14:47.270
rather near center, which it currently is.

00:14:49.200 --> 00:14:54.550
This will push all of the text over to the left of the browser on the larger screen.

00:14:54.550 --> 00:14:59.130
We'll still keep the centered text on the small screen view.
