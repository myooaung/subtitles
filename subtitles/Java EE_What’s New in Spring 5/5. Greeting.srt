1
00:00:01,840 --> 00:00:05,793
We can now add our greeting class that's going to return the

2
00:00:05,793 --> 00:00:09,680
JSON message to our UI or our calling client,

3
00:00:09,680 --> 00:00:12,616
but you'll notice the simplicity of this class,

4
00:00:12,616 --> 00:00:17,414
and that's one of the things that draws people to Kotlin and other languages,

5
00:00:17,414 --> 00:00:18,243
like Scala.

6
00:00:18,243 --> 00:00:21,437
On this slide, you can see the entire class definition.

7
00:00:21,437 --> 00:00:26,113
Notice there are no getters, no setters, no curly braces.

8
00:00:26,113 --> 00:00:28,487
There aren't even semicolons.

9
00:00:28,487 --> 00:00:33,830
Let's add a greeting class to our project now.

10
00:00:33,830 --> 00:00:36,100
I've already opened up the Greeting.

11
00:00:36,100 --> 00:00:41,249
kt file that we had created before, and I'm going to just paste in that code.

12
00:00:41,249 --> 00:00:45,963
And you can see that it's about as simple as we could get when defining a class.

13
00:00:45,963 --> 00:00:51,492
We have our package statement in there, and then we define what our class is,

14
00:00:51,492 --> 00:00:54,749
that it's just a data class, and its name is Greeting.

15
00:00:54,749 --> 00:00:59,858
It has a variable val id that's of type Long and a variable

16
00:00:59,858 --> 00:01:04,008
that is a name of content of a type String,

17
00:01:04,008 --> 00:01:05,282
and that's it.

18
00:01:05,282 --> 00:01:06,345
No getters, setters.

19
00:01:06,345 --> 00:01:08,471
We don't have to define constructors.

20
00:01:08,471 --> 00:01:11,195
No curly braces, no semicolons.

21
00:01:11,195 --> 00:01:17,671
This entire class defines a simple POJO that we would normally be

22
00:01:17,671 --> 00:01:21,964
right-clicking and generating to have all of those boilerplate

23
00:01:21,964 --> 00:01:30,000
methods produced for us so a lot tighter, a lot cleaner code in this POJO.

