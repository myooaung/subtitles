WEBVTT
1
00:00:01.835 --> 00:00:04.952
A lesser known fact is that Spring has actually been able

2
00:00:04.952 --> 00:00:09.489
to take advantage of default methods using Java 8 defined

3
00:00:09.489 --> 00:00:11.971
in interfaces since Spring 4.

4
00:00:11.971 --> 00:00:12.467
2.

5
00:00:12.467 --> 00:00:15.582
A lot of people didn't realize this feature had been added.

6
00:00:15.582 --> 00:00:19.622
It is notable though since Kotlin takes advantage of this feature,

7
00:00:19.622 --> 00:00:23.835
as well as will most likely become a new standard way to reuse and

8
00:00:23.835 --> 00:00:27.684
share configuration methods across implementations.

9
00:00:27.684 --> 00:00:28.551
In this example,

10
00:00:28.551 --> 00:00:31.442
we're going to look at and implement a default method

11
00:00:31.442 --> 00:00:38.000
that runs when a bean is instantiated. Let's dive into that code now.

