1
00:00:01,866 --> 00:00:07,200
Now that we have our build file configured, let's set up our application file.

2
00:00:07,200 --> 00:00:09,694
And this is the file that contains our main method,

3
00:00:09,694 --> 00:00:12,291
as well as what defines our Spring application.

4
00:00:12,291 --> 00:00:16,968
This should look pretty similar to what you've done using Java before.

5
00:00:16,968 --> 00:00:21,464
We signify our file as a Spring application by annotating

6
00:00:21,464 --> 00:00:24,530
our class as a SpringBootApplication.

7
00:00:24,530 --> 00:00:29,893
Let's add an application class to our project now.

8
00:00:29,893 --> 00:00:31,620
As I mentioned previously,

9
00:00:31,620 --> 00:00:36,095
I've already created the three empty Kotlin files out there,

10
00:00:36,095 --> 00:00:37,064
Application, Greeting,

11
00:00:37,064 --> 00:00:40,409
and GreetingController just so I had a placeholder for them.

12
00:00:40,409 --> 00:00:42,915
I'm going to go ahead and open up that Application.

13
00:00:42,915 --> 00:00:48,406
kt file, and we can go ahead and start entering our code in there.

14
00:00:48,406 --> 00:00:52,403
I'm going to paste the code in here as I've already written it

15
00:00:52,403 --> 00:00:54,982
and walk through each piece that we have.

16
00:00:54,982 --> 00:00:58,102
We have our package just like we would in Java.

17
00:00:58,102 --> 00:01:02,590
Notice there's a lack of a semicolon on the end of the line there.

18
00:01:02,590 --> 00:01:06,810
We also have our import statements just like we would.

19
00:01:06,810 --> 00:01:10,118
And then we have our annotation for our SpringBootApplication,

20
00:01:10,118 --> 00:01:13,976
and that's what tells this file that it is the class

21
00:01:13,976 --> 00:01:15,972
that runs our entire application,

22
00:01:15,972 --> 00:01:21,002
but notice we just have this function standing alone by itself.

23
00:01:21,002 --> 00:01:23,094
It's not inside curly braces.

24
00:01:23,094 --> 00:01:27,650
It's missing the public static void declarations.

25
00:01:27,650 --> 00:01:33,636
And it takes an array of strings in, and then it runs our Java application.

26
00:01:33,636 --> 00:01:34,760
It says SpringApplication.

27
00:01:34,760 --> 00:01:41,258
run, and this is kind of an interesting syntax where it says Application:class.

28
00:01:41,258 --> 00:01:41,958
java.

29
00:01:41,958 --> 00:01:45,919
So the Kotlin source code is getting compiled down,

30
00:01:45,919 --> 00:01:50,503
but it's telling it to run it as a Java file on the JVM

31
00:01:50,503 --> 00:01:52,986
and pass in any arguments that we have,

32
00:01:52,986 --> 00:01:55,800
and this is how our SpringApplication starts up.

33
00:01:55,800 --> 00:02:06,000
This is everything we need to signify that it is a Spring application and a main method inside of a Java application.

