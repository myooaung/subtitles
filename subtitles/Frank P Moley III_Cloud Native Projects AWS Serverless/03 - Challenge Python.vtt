WEBVTT
1
00:00:05.006 --> 00:00:07.000
- [Instructor] Now it's time for our first

2
00:00:07.000 --> 00:00:10.000
challenge exercise for this course.

3
00:00:10.000 --> 00:00:11.007
We're going to be using the Python language

4
00:00:11.007 --> 00:00:12.006
for this challenge.

5
00:00:12.006 --> 00:00:15.001
Now you're going to create a function that actually

6
00:00:15.001 --> 00:00:18.008
does some work and use it as a Lambda function

7
00:00:18.008 --> 00:00:20.004
that you deploy.

8
00:00:20.004 --> 00:00:24.001
Now, part of the steps that I'm going to ask you to implement

9
00:00:24.001 --> 00:00:26.005
as part of this challenge are as follows.

10
00:00:26.005 --> 00:00:30.007
So I want you this time to start with the local Python file

11
00:00:30.007 --> 00:00:34.007
instead of the code editor from AWS console.

12
00:00:34.007 --> 00:00:37.000
Now there's nothing wrong with the code editor.

13
00:00:37.000 --> 00:00:39.008
It's just a little bit more realistic to store your code

14
00:00:39.008 --> 00:00:42.008
in source control and to do that locally

15
00:00:42.008 --> 00:00:45.008
as opposed to doing it in their code editor.

16
00:00:45.008 --> 00:00:48.007
Now, in order to actually upload your zip file

17
00:00:48.007 --> 00:00:49.008
that you're going to create,

18
00:00:49.008 --> 00:00:52.008
you need to follow the instructions linked here.

19
00:00:52.008 --> 00:00:55.004
Then we'll tell you how to create a role

20
00:00:55.004 --> 00:00:57.004
in your AWS account.

21
00:00:57.004 --> 00:01:00.001
Now I'm assuming that you have AWS set up with credentials.

22
00:01:00.001 --> 00:01:04.006
If you do not, please stop and go do that first.

23
00:01:04.006 --> 00:01:06.009
But what you're going to do is you're going to create a zip file

24
00:01:06.009 --> 00:01:09.005
after you create a role and then you're going to upload

25
00:01:09.005 --> 00:01:12.006
that zip file using the CLI.

26
00:01:12.006 --> 00:01:15.007
You're going to create a coin-flip program.

27
00:01:15.007 --> 00:01:18.006
The coin-flip program is going to input a number

28
00:01:18.006 --> 00:01:24.000
from the JSON payload for the number of flips to execute.

29
00:01:24.000 --> 00:01:27.003
You will then randomize those results and generate

30
00:01:27.003 --> 00:01:32.001
either a heads or a tails based on that randomization.

31
00:01:32.001 --> 00:01:36.003
And then at the end in the actual response for the Python,

32
00:01:36.003 --> 00:01:41.003
I want you to spit out the number of flips and the results

33
00:01:41.003 --> 00:01:43.005
of those flips themselves.

34
00:01:43.005 --> 00:01:46.004
So, in addition to doing any logging that you want to do

35
00:01:46.004 --> 00:01:47.009
I actually want you to turn this

36
00:01:47.009 --> 00:01:51.003
into a response that you send outbound.

37
00:01:51.003 --> 00:01:53.004
So, you're on your own.

38
00:01:53.004 --> 00:01:56.002
On the next video I'm going to show you my solution

39
00:01:56.002 --> 00:01:58.000
to this problem.

