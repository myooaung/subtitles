WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.385
Hello everyone, Welcome back.

00:00:02.385 --> 00:00:04.380
Asset discussed in the previous video.

00:00:04.380 --> 00:00:09.255
We're gonna talk about three important usage also procured.

00:00:09.255 --> 00:00:11.325
The first one is super with variable.

00:00:11.325 --> 00:00:13.965
Let's create an example and I'll show you.

00:00:13.965 --> 00:00:18.385
So I'm going to create another mask.

00:00:18.385 --> 00:00:20.960
So my class name is going to be

00:00:20.960 --> 00:00:30.125
super variable example. Okay?

00:00:30.125 --> 00:00:37.190
So basically when you're talking about Super,

00:00:37.190 --> 00:00:40.280
of course, we need to have a parent and child class.

00:00:40.280 --> 00:00:41.255
Correct?

00:00:41.255 --> 00:00:46.595
So what I'm gonna do is I'm going to create a class called a.

00:00:46.595 --> 00:00:51.120
And I'm going to create a class called B.

00:00:53.920 --> 00:00:55.625
Got it.

00:00:55.625 --> 00:01:00.300
So in classe I have a variable called int.

00:01:00.700 --> 00:01:04.475
X is equal to 50.

00:01:04.475 --> 00:01:10.655
But unfortunately in class B also I have a variable called x,

00:01:10.655 --> 00:01:13.400
which contains different data.

00:01:13.400 --> 00:01:17.480
And in class B I have a method also wide show.

00:01:17.480 --> 00:01:19.775
So here what I'm gonna do,

00:01:19.775 --> 00:01:29.750
so this is 0, the x value is x.

00:01:29.750 --> 00:01:36.200
So now what I'm gonna do AB or is there.

00:01:36.200 --> 00:01:39.530
Okay, we already created previous examples,

00:01:39.530 --> 00:01:40.790
a and b, right?

00:01:40.790 --> 00:01:49.595
So I'm going to call A1 and b1 here a continuous, right?

00:01:49.595 --> 00:01:51.575
So now what we are going to do,

00:01:51.575 --> 00:01:53.075
I'm going to create,

00:01:53.075 --> 00:01:56.900
and basically it has to be base class and subclass,

00:01:56.900 --> 00:02:04.505
which means my class b1 extends class A1.

00:02:04.505 --> 00:02:06.570
Got it.

00:02:07.090 --> 00:02:14.460
So now I'm going to create a main method in my main file.

00:02:14.530 --> 00:02:20.180
So here I'm going to create object or reference name for B1.

00:02:20.180 --> 00:02:28.100
B1 is equal OBJ B1.

00:02:28.100 --> 00:02:30.800
So now what I'm gonna do, oh,

00:02:30.800 --> 00:02:33.680
b j dot show method.

00:02:33.680 --> 00:02:37.100
So basically I am trying to call the metadata inside the show,

00:02:37.100 --> 00:02:39.170
okay, it's pretty much a simple example.

00:02:39.170 --> 00:02:41.734
It's an ordinal inheritance.

00:02:41.734 --> 00:02:43.475
So my x value is 100.

00:02:43.475 --> 00:02:45.275
But basically that is scenario.

00:02:45.275 --> 00:02:48.230
I don't want to access my local.

00:02:48.230 --> 00:02:50.794
I'm in this class,

00:02:50.794 --> 00:02:53.015
this class instance variable.

00:02:53.015 --> 00:03:00.320
I want the x value from my baton class.

00:03:00.320 --> 00:03:02.975
So how we are going to do that?

00:03:02.975 --> 00:03:04.640
But whatever you are trying here,

00:03:04.640 --> 00:03:07.325
you always gets data available in a local.

00:03:07.325 --> 00:03:10.160
But I want to retrieve from the parent class.

00:03:10.160 --> 00:03:12.260
In those kind of scenario,

00:03:12.260 --> 00:03:14.165
the super will help us.

00:03:14.165 --> 00:03:16.805
Super dot x.

00:03:16.805 --> 00:03:19.370
So for example, in the previous,

00:03:19.370 --> 00:03:21.800
in the, in the previous programs, right?

00:03:21.800 --> 00:03:26.825
So what discover, right, so let me show you.

00:03:26.825 --> 00:03:31.145
So this using word Example 1 here,

00:03:31.145 --> 00:03:36.560
this keyword which will walk one layer instead of single class.

00:03:36.560 --> 00:03:37.760
Okay?

00:03:37.760 --> 00:03:39.500
So whatever you do, everything has happened.

00:03:39.500 --> 00:03:40.730
This will work with them.

00:03:40.730 --> 00:03:43.565
Instance level. This will work with the local methods.

00:03:43.565 --> 00:03:45.395
This will work with the local Kenosha paths.

00:03:45.395 --> 00:03:48.575
But when you come to super, pretty much,

00:03:48.575 --> 00:03:52.610
it's pretty much similar like this keyword,

00:03:52.610 --> 00:03:57.695
but this will work against subclass and the base class.

00:03:57.695 --> 00:04:00.815
So now I'm providing a super Ditech Superman's,

00:04:00.815 --> 00:04:02.600
I'm not referring this class,

00:04:02.600 --> 00:04:06.725
I'm referring the base class supermen space that is called super,

00:04:06.725 --> 00:04:09.935
super Sam is a leading everywhere.

00:04:09.935 --> 00:04:15.890
So supermen, so you're going to call the lead or the parent, or the base.

00:04:15.890 --> 00:04:18.410
Okay? So now we can run the code.

00:04:18.410 --> 00:04:22.430
We should be able to see the data from the class A1.

00:04:22.430 --> 00:04:25.445
So even the method is available in the child.

00:04:25.445 --> 00:04:31.610
I can still access my data from base class.

00:04:31.610 --> 00:04:33.005
All right?

00:04:33.005 --> 00:04:36.275
And or the other way to access, you have object, right?

00:04:36.275 --> 00:04:37.835
Object.

00:04:37.835 --> 00:04:42.740
So object naught x.

00:04:42.740 --> 00:04:47.520
Okay, now that I've been printed,

00:04:48.550 --> 00:04:51.170
so this is also other way of doing it,

00:04:51.170 --> 00:04:54.770
but because this is accessing directly through the object,

00:04:54.770 --> 00:04:57.380
but this is accessing through the super keyword.

00:04:57.380 --> 00:05:06.320
Correct? So, so this is how the super keyword is work with the variables.

00:05:06.320 --> 00:05:08.885
In the next example, the super will work with them methods.

00:05:08.885 --> 00:05:11.190
We'll see an example over there.
