WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.140 --> 00:00:02.175
Hello everyone.

00:00:02.175 --> 00:00:03.390
Welcome back.

00:00:03.390 --> 00:00:09.045
So we discussed a lot about what is Joe and what is things available in Java?

00:00:09.045 --> 00:00:11.505
I mean to say like variables,

00:00:11.505 --> 00:00:14.010
operators, different kinds of control statements.

00:00:14.010 --> 00:00:16.050
And important thing is that,

00:00:16.050 --> 00:00:18.315
oops, concepts, we discussed everything.

00:00:18.315 --> 00:00:19.950
But not only that,

00:00:19.950 --> 00:00:23.490
there are some additional things which we need to know

00:00:23.490 --> 00:00:28.095
in order to become a Java programmer there or something else also,

00:00:28.095 --> 00:00:30.690
you need to know, okay?

00:00:30.690 --> 00:00:34.985
So, so what are the concept or the change one?

00:00:34.985 --> 00:00:37.760
Okay, so you're supposed to the next slide.

00:00:37.760 --> 00:00:41.660
Okay, So the muscular concepts in Java,

00:00:41.660 --> 00:00:45.185
here is a list of the concept.

00:00:45.185 --> 00:00:47.900
The first thing is this keyword,

00:00:47.900 --> 00:00:53.690
because we use this particular keyword in our day we as examples,

00:00:53.690 --> 00:00:56.690
but we never discussed how the,

00:00:56.690 --> 00:00:58.190
this keyword is fair game.

00:00:58.190 --> 00:01:00.530
And then this will put Kiva.

00:01:00.530 --> 00:01:01.910
And super cute.

00:01:01.910 --> 00:01:03.110
We never used it before.

00:01:03.110 --> 00:01:06.815
And we're going to explore how and why we need a super keyword.

00:01:06.815 --> 00:01:10.594
And we're going to talk about one and interesting concept called wrapper classes,

00:01:10.594 --> 00:01:13.740
which contains a boxing and unboxing,

00:01:13.780 --> 00:01:19.205
recursion and call by value and common law arguments.

00:01:19.205 --> 00:01:22.730
These are the things you must know if your job or wherever, you should know.

00:01:22.730 --> 00:01:26.790
What is this super recursion call with Aligarh Muslim arguments.

00:01:27.040 --> 00:01:30.635
The first concept is this keyword.

00:01:30.635 --> 00:01:35.460
So why do we need the skewer to the first?

00:01:35.830 --> 00:01:41.930
There are a lot of advantages of using this keyword.

00:01:41.930 --> 00:01:47.660
And we're going to realize when you're implementing your real examples.

00:01:47.660 --> 00:01:51.905
And this can be referred to the current class instance variable.

00:01:51.905 --> 00:01:53.690
You know the instance variable, right?

00:01:53.690 --> 00:01:56.585
The variables are barred from metadata.

00:01:56.585 --> 00:02:00.740
So if you have a local method called add method inside you have

00:02:00.740 --> 00:02:04.895
some variable that is a local variable that is not the one which we are talking about.

00:02:04.895 --> 00:02:09.635
We're talking about the variables declared under the class.

00:02:09.635 --> 00:02:12.185
Those are called as an instance variable.

00:02:12.185 --> 00:02:17.780
And this keyword is help us do refer those keywords I'm in those variables.

00:02:17.780 --> 00:02:22.280
And pretty much this keyword results the problems of ambiguity.

00:02:22.280 --> 00:02:24.500
So what are the ambiguity, the precise, okay,

00:02:24.500 --> 00:02:30.935
this you don't understand when I'm explaining it because I'm going to show you, right.

00:02:30.935 --> 00:02:34.775
And also to implement this keyword,

00:02:34.775 --> 00:02:36.890
there are a lot of advantages.

00:02:36.890 --> 00:02:38.720
So the first thing we need to know,

00:02:38.720 --> 00:02:40.220
so I'm using this keyword,

00:02:40.220 --> 00:02:42.050
but what is the rule and what kind of

00:02:42.050 --> 00:02:45.050
R1 status I'm going to get since I'm using this keyword.

00:02:45.050 --> 00:02:47.795
And there are six different kinds of advantages.

00:02:47.795 --> 00:02:52.160
If you are a beginner, you don't have to go deeper.

00:02:52.160 --> 00:02:55.250
You can just go to the first three points at,

00:02:55.250 --> 00:02:56.270
in this particular image.

00:02:56.270 --> 00:02:58.175
I took it from one of the blog,

00:02:58.175 --> 00:02:59.615
which is a really good one.

00:02:59.615 --> 00:03:04.880
So the first, this can be used to refer the current class instance variable,

00:03:04.880 --> 00:03:06.740
which means our class level variable.

00:03:06.740 --> 00:03:11.390
And this will be used to invoke current class method,

00:03:11.390 --> 00:03:15.815
not a limit that you can call the constructor also using this keyword.

00:03:15.815 --> 00:03:19.880
And you can pass as an argument.

00:03:19.880 --> 00:03:24.050
And the Alpha one is argument in the constructor.

00:03:24.050 --> 00:03:25.280
But it's also possible.

00:03:25.280 --> 00:03:29.000
We're going to explore each and every point,

00:03:29.000 --> 00:03:32.690
and we are going to see a separate example for each and every point.

00:03:32.690 --> 00:03:37.190
We got this to expanding to 0.1.2.3.4.5 is not going to help.

00:03:37.190 --> 00:03:39.065
Okay? So for FY21,

00:03:39.065 --> 00:03:40.820
I'm going to show you an example for 0.2.

00:03:40.820 --> 00:03:42.200
I'm going to show you another example,

00:03:42.200 --> 00:03:43.490
but all of them is going to be

00:03:43.490 --> 00:03:48.620
a simple example so you can easily understand what are the concept.

00:03:48.620 --> 00:03:49.640
Right?

00:03:49.640 --> 00:03:51.680
So the next example we're going to talk about

00:03:51.680 --> 00:03:55.130
this keyword and we're going to perform the first operation.

00:03:55.130 --> 00:03:56.910
Thank you.
