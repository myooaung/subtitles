WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.050 --> 00:00:01.920
Hello everyone.

00:00:01.920 --> 00:00:02.970
Welcome back.

00:00:02.970 --> 00:00:05.070
We're discussing a lot about that,

00:00:05.070 --> 00:00:09.675
our upper classes and how we can use a wrapper class and why do we need them,

00:00:09.675 --> 00:00:14.730
and also how to convert rapidly into a primitive and primitive into wrapper.

00:00:14.730 --> 00:00:16.440
We discussed everything.

00:00:16.440 --> 00:00:19.990
Now that is the note that is a time for lunch.

00:00:19.990 --> 00:00:21.445
Another important thing.

00:00:21.445 --> 00:00:24.950
You might not use this particular function a lot,

00:00:24.950 --> 00:00:28.460
but just know that this particular functionality is important,

00:00:28.460 --> 00:00:30.395
which is nothing but recursion.

00:00:30.395 --> 00:00:35.645
So the kitchen is a process in which method calls itself continuously,

00:00:35.645 --> 00:00:38.105
if you want to call them at that continuously.

00:00:38.105 --> 00:00:40.745
What happened when you're creating a wire loop?

00:00:40.745 --> 00:00:44.699
And if you forget to add the incremental,

00:00:45.310 --> 00:00:49.340
particular loop will keep on running.

00:00:49.340 --> 00:00:52.310
So similar way, I haven't mattered.

00:00:52.310 --> 00:00:54.395
So I want that matter.

00:00:54.395 --> 00:00:59.000
Keep on executing on an odd continuously.

00:00:59.000 --> 00:01:03.720
So yeah, method in Java that calls itself,

00:01:03.720 --> 00:01:07.855
calls itself, is called acetic acid.

00:01:07.855 --> 00:01:14.995
And it makes the quote compact but complex to understand any way.

00:01:14.995 --> 00:01:17.949
To understand this particular concept.

00:01:17.949 --> 00:01:22.270
Let me create a simple example and show you what we are trying to do here.

00:01:22.270 --> 00:01:24.115
Let's go back to Eclipse.

00:01:24.115 --> 00:01:25.765
So now what we're going to do,

00:01:25.765 --> 00:01:28.180
I'm going to create a simple example, okay?

00:01:28.180 --> 00:01:34.270
Not only dad and I want to show you that the syntax,

00:01:34.270 --> 00:01:37.210
so return type which is not to eat them anyway, it's a method writes.

00:01:37.210 --> 00:01:41.155
A method contains the return type and the method name and somebody correct.

00:01:41.155 --> 00:01:44.560
Similar way we have a return type as usual, the metonym,

00:01:44.560 --> 00:01:49.250
but instead I'm going to call the same a name we will talk about in our example.

00:01:49.250 --> 00:01:55.010
Okay? So I'm going to create an, another example here.

00:01:55.010 --> 00:01:59.210
Second, okay, this is a different,

00:01:59.210 --> 00:02:02.015
let me switch back to the workspace.

00:02:02.015 --> 00:02:04.715
Let me create a simple example.

00:02:04.715 --> 00:02:07.640
So I can call them as adaptation example.

00:02:07.640 --> 00:02:15.364
One example, we will talk about the two different examples.

00:02:15.364 --> 00:02:17.000
There are a lot of ways to do it,

00:02:17.000 --> 00:02:19.670
but let's see why only few of them.

00:02:19.670 --> 00:02:21.560
So basically what I'm gonna do,

00:02:21.560 --> 00:02:23.885
I'm going to create a simple example.

00:02:23.885 --> 00:02:26.180
So first let's write them at that logic

00:02:26.180 --> 00:02:28.730
that we need to keep call the method again and again.

00:02:28.730 --> 00:02:36.150
Okay, So I'm going to call static wide recursion.

00:02:36.340 --> 00:02:42.230
Okay? So here I'm simply provide some assessable here or

00:02:42.230 --> 00:02:47.720
else the Christian example.

00:02:47.720 --> 00:02:50.225
So here, this is a bad battery.

00:02:50.225 --> 00:02:53.340
Provide better question.

00:02:53.770 --> 00:02:58.580
So what we're gonna do instead is I'm going to call

00:02:58.580 --> 00:03:03.380
the same method this medication matter, right?

00:03:03.380 --> 00:03:04.700
So I'm calling the same as that instead.

00:03:04.700 --> 00:03:09.305
So what will happen when this metal particular initiator,

00:03:09.305 --> 00:03:14.300
thus methodical call come here and then it will start executing this one.

00:03:14.300 --> 00:03:17.450
And then again the same method call I get and go back.

00:03:17.450 --> 00:03:18.815
It keep going.

00:03:18.815 --> 00:03:20.900
Okay, so there is no stop here.

00:03:20.900 --> 00:03:21.950
So what will happen?

00:03:21.950 --> 00:03:28.220
Obviously, we'll end up with stack overflow issue because that a lot of things,

00:03:28.220 --> 00:03:30.650
it'll be loaded in your console read so you'll get

00:03:30.650 --> 00:03:34.205
memory issues or it will end up with StackOverflow editor.

00:03:34.205 --> 00:03:36.455
Okay, So what we're gonna do,

00:03:36.455 --> 00:03:39.060
let's call the method first.

00:03:40.660 --> 00:03:44.930
So now I'm going to execute the code.

00:03:44.930 --> 00:03:49.925
We'll see how many times it is running and it'll finally end up with some error message.

00:03:49.925 --> 00:03:51.350
So I just started,

00:03:51.350 --> 00:03:53.660
uh, I mean executed a quote.

00:03:53.660 --> 00:03:58.055
Let's see what happened here.

00:03:58.055 --> 00:04:00.740
It may maximize this one

00:04:00.740 --> 00:04:07.730
and see the decoration example

00:04:07.730 --> 00:04:10.310
because I'm not able to see the full outcome here

00:04:10.310 --> 00:04:13.010
because my console has a limit of output.

00:04:13.010 --> 00:04:14.405
So if you want to change it,

00:04:14.405 --> 00:04:18.920
could windows and preference and type console here.

00:04:18.920 --> 00:04:21.365
And then you need to take out this one,

00:04:21.365 --> 00:04:23.840
liquid console output, apply and close.

00:04:23.840 --> 00:04:27.800
And let's undertake in deep learning.

00:04:27.800 --> 00:04:28.880
Now again, have an issue.

00:04:28.880 --> 00:04:30.890
So now we can use it, see,

00:04:30.890 --> 00:04:34.460
it was looking for a while and then eventually to end up

00:04:34.460 --> 00:04:38.495
with this is a, this is a problem,

00:04:38.495 --> 00:04:41.660
normally outliers, then we are using the cushion meant that we needed to have

00:04:41.660 --> 00:04:46.265
that proper implementation in order to control the flow.

00:04:46.265 --> 00:04:50.705
Okay, so we're going to talk abouta analytic example which will control the flow.

00:04:50.705 --> 00:04:53.160
Will talk over the next video.
