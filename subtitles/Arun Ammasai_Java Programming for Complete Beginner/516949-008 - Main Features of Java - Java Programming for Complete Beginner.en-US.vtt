WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.740
Hello everyone.

00:00:01.740 --> 00:00:06.930
Let's talk about some of the main features of Java, okay,

00:00:06.930 --> 00:00:09.510
so we know that when you have a Java program,

00:00:09.510 --> 00:00:12.495
you can compile them and you can learn them.

00:00:12.495 --> 00:00:16.470
So what will happen when you compile and urine?

00:00:16.470 --> 00:00:18.075
When you compile a program,

00:00:18.075 --> 00:00:24.270
Java C compiler will take place and which will convert dot Java file into bytecode file,

00:00:24.270 --> 00:00:28.145
which is a dot class file. Okay?

00:00:28.145 --> 00:00:29.945
So the Java file,

00:00:29.945 --> 00:00:34.970
it can be available in your mission, okay?

00:00:34.970 --> 00:00:38.210
And you can run the class L and you can see the output.

00:00:38.210 --> 00:00:41.720
So if you want to share the same to the other machine,

00:00:41.720 --> 00:00:43.670
you don't need to share that Java file,

00:00:43.670 --> 00:00:47.030
you just need to share the dark clouds fail.

00:00:47.030 --> 00:00:50.605
So dot class file which contains them by Allah,

00:00:50.605 --> 00:00:52.850
0 and 1s, the machine code.

00:00:52.850 --> 00:00:55.370
Okay? So you need to share the class fail

00:00:55.370 --> 00:00:59.435
so they can execute the code in their admission.

00:00:59.435 --> 00:01:02.765
And they don't need all the software it needs to be installed.

00:01:02.765 --> 00:01:05.150
They just need the GRE needs to be installed.

00:01:05.150 --> 00:01:07.985
That is what we discussed in the previous slide.

00:01:07.985 --> 00:01:12.740
So this is the shade forward to in this particular slide and

00:01:12.740 --> 00:01:14.780
the next slide we all talk about what we

00:01:14.780 --> 00:01:17.510
covered so far and what are the content we only know.

00:01:17.510 --> 00:01:20.555
Okay, so JVM execute the bytecode.

00:01:20.555 --> 00:01:24.020
Of course the having execute the bytecode and the bytecode generated by

00:01:24.020 --> 00:01:28.460
the competitor with the help of a Java C. Right?

00:01:28.460 --> 00:01:32.585
And that but bytecode, right?

00:01:32.585 --> 00:01:35.165
It can run in any platform.

00:01:35.165 --> 00:01:37.550
Like Windows, Linux, and Mac.

00:01:37.550 --> 00:01:40.580
Could see the ultimate goal for Java.

00:01:40.580 --> 00:01:46.865
Write once and run everywhere or anywhere.

00:01:46.865 --> 00:01:48.155
You can write in Windows,

00:01:48.155 --> 00:01:50.225
you can execute in Linux and Mac.

00:01:50.225 --> 00:01:52.805
You can write in Linux and Windows and Mac,

00:01:52.805 --> 00:01:56.570
or you can do it an Android operating system also.

00:01:56.570 --> 00:01:58.400
Right?

00:01:58.400 --> 00:02:02.420
So the last point that I mentioned,

00:02:02.420 --> 00:02:05.630
write once and run everywhere, creating compelling.

00:02:05.630 --> 00:02:07.490
Then you can run anywhere.

00:02:07.490 --> 00:02:12.920
Even if you want me to specifically tell me where all kinds of platforms,

00:02:12.920 --> 00:02:16.860
all kind of operating systems, including mobile devices.

00:02:17.530 --> 00:02:18.965
Okay?

00:02:18.965 --> 00:02:25.160
So there is another important thing which people going for Java, okay,

00:02:25.160 --> 00:02:27.050
So whenever we talked about Java,

00:02:27.050 --> 00:02:33.060
the first major concept comes into our mind is object oriented language.

00:02:33.270 --> 00:02:34.735
Okay?

00:02:34.735 --> 00:02:41.920
So Java is a high visible did oriented programming language.

00:02:41.920 --> 00:02:43.330
Right?

00:02:43.330 --> 00:02:46.600
So what do you mean by object oriented?

00:02:46.600 --> 00:02:51.550
So Object Oriented means it's a way of organizing your objects.

00:02:51.550 --> 00:02:55.450
So this is a way where you can RNAs programs as

00:02:55.450 --> 00:02:58.690
a collection into a bowl full model for example.

00:02:58.690 --> 00:03:01.360
Let's take an example of animals.

00:03:01.360 --> 00:03:02.500
Correct?

00:03:02.500 --> 00:03:06.415
Animals is a collection which contains a different kind of animals.

00:03:06.415 --> 00:03:09.595
Even though taken a human example.

00:03:09.595 --> 00:03:11.275
Take a human example.

00:03:11.275 --> 00:03:13.405
We have multiple collections, male,

00:03:13.405 --> 00:03:17.375
female, and transgender, right?

00:03:17.375 --> 00:03:19.655
So for example, under the men,

00:03:19.655 --> 00:03:23.135
we can have multiple persons with their different names.

00:03:23.135 --> 00:03:24.215
Correct.

00:03:24.215 --> 00:03:26.255
So the only door intervenes,

00:03:26.255 --> 00:03:29.495
It's a way of organizing your objects.

00:03:29.495 --> 00:03:32.430
Correct? So animal is an object,

00:03:32.620 --> 00:03:35.030
and human is an object.

00:03:35.030 --> 00:03:39.479
So everything has its one attribute.

00:03:39.850 --> 00:03:44.405
And another important thing when we talk about object-oriented language,

00:03:44.405 --> 00:03:47.014
it is pretty much all the languages.

00:03:47.014 --> 00:03:49.430
These four concepts will be available.

00:03:49.430 --> 00:03:52.340
The first one is abstraction,

00:03:52.340 --> 00:03:55.925
and the second one is encapsulation and

00:03:55.925 --> 00:04:00.560
inheritance and polymorphism and can include two more also,

00:04:00.560 --> 00:04:06.515
the class and the object that is only specifically belongs to our Java.

00:04:06.515 --> 00:04:09.800
These are the common oops,

00:04:09.800 --> 00:04:15.320
concept in Agra, all the languages, right?

00:04:15.320 --> 00:04:19.085
So we're going to talk a lot about

00:04:19.085 --> 00:04:22.010
the object oriented programming language and each

00:04:22.010 --> 00:04:25.040
and every concept separately like abstraction,

00:04:25.040 --> 00:04:27.230
encapsulation, inheritance and polymorphism.

00:04:27.230 --> 00:04:31.200
Okay, So let's meet each other in the next video thing.
