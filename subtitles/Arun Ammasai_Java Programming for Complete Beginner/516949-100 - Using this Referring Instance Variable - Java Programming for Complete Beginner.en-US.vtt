WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.890
Hello everyone, welcome back.

00:00:01.890 --> 00:00:04.725
So we're going to explore this keyword.

00:00:04.725 --> 00:00:08.850
So we are going to write a program to achieve the first,

00:00:08.850 --> 00:00:14.760
and this can be used to refer the current class instance variables, instance variable.

00:00:14.760 --> 00:00:16.950
Let's go and create an example too.

00:00:16.950 --> 00:00:19.755
I can show you exactly what it meant by.

00:00:19.755 --> 00:00:21.795
So let's create a class.

00:00:21.795 --> 00:00:25.515
So I'm going to create a class under non,

00:00:25.515 --> 00:00:29.310
oops, under miscellaneous concepts.

00:00:29.310 --> 00:00:29.865
Okay?

00:00:29.865 --> 00:00:32.010
So the class name, so what is a classic?

00:00:32.010 --> 00:00:32.970
Okay?

00:00:32.970 --> 00:00:37.660
This keyword, this keyword example.

00:00:37.880 --> 00:00:45.680
Keyword, example one, which means the first concept,

00:00:45.680 --> 00:00:48.665
current class instance variable.

00:00:48.665 --> 00:00:50.390
Right?

00:00:50.390 --> 00:00:53.480
So here's the deal.

00:00:53.480 --> 00:00:55.790
I have a class here,

00:00:55.790 --> 00:00:59.765
so for now I'm going to create a variable.

00:00:59.765 --> 00:01:00.560
Correct?

00:01:00.560 --> 00:01:02.240
Let's have a main method here.

00:01:02.240 --> 00:01:06.575
So I have int I is equal to 10.

00:01:06.575 --> 00:01:10.260
What is that? Which is local variable.

00:01:11.140 --> 00:01:14.780
I'm not going to worry about the local variables.

00:01:14.780 --> 00:01:17.570
So the one which we are talking about is the instance variable,

00:01:17.570 --> 00:01:20.270
or you can call them as a class level variables.

00:01:20.270 --> 00:01:26.540
So if you're creating a variable int here,

00:01:26.540 --> 00:01:29.255
this is instance variable.

00:01:29.255 --> 00:01:33.200
Okay, So using this keyword, we can access them.

00:01:33.200 --> 00:01:35.220
Correct?

00:01:35.350 --> 00:01:37.790
Let's do one thing.

00:01:37.790 --> 00:01:40.205
Okay, so I'm going to print them.

00:01:40.205 --> 00:01:43.650
Create another matter called wild show.

00:01:44.350 --> 00:01:52.805
So which will simply print down x to the x comma y.

00:01:52.805 --> 00:01:54.950
So I'm going to print

00:01:54.950 --> 00:01:59.660
the value

00:01:59.660 --> 00:02:08.065
x value.

00:02:08.065 --> 00:02:12.670
Why? They haven't talked over the strings.

00:02:12.670 --> 00:02:15.700
And we're going to talk about the strings,

00:02:15.700 --> 00:02:17.605
which we have a very big topic.

00:02:17.605 --> 00:02:18.625
Okay?

00:02:18.625 --> 00:02:20.470
So now we're pretty good to.

00:02:20.470 --> 00:02:25.270
So I have a two instance variable and I have a method to print them.

00:02:25.270 --> 00:02:27.625
So it doesn't have any valleys right now, right?

00:02:27.625 --> 00:02:29.065
So what I'm gonna do is here.

00:02:29.065 --> 00:02:35.455
So let's create a new object name for my class so I can call them at that.

00:02:35.455 --> 00:02:36.445
Great.

00:02:36.445 --> 00:02:40.190
So this gives an example, one dot OBJ.

00:02:40.740 --> 00:02:43.270
Let me get, I mean,

00:02:43.270 --> 00:02:45.055
neither the class name.

00:02:45.055 --> 00:02:47.230
So we know how to call them at the right.

00:02:47.230 --> 00:02:51.230
So OBJ Show.

00:02:51.230 --> 00:02:55.800
So let me run the example and I'll show you what is the outcome of it.

00:03:00.910 --> 00:03:04.745
It is 0 way. You might think why?

00:03:04.745 --> 00:03:09.425
Because I have a variable called x comma y in my class level.

00:03:09.425 --> 00:03:15.635
But that is no value has been assigned to that variable.

00:03:15.635 --> 00:03:17.945
So what I'm going to do now,

00:03:17.945 --> 00:03:19.640
so basically what I'm trying to do,

00:03:19.640 --> 00:03:21.650
I'm going to create a constructor here,

00:03:21.650 --> 00:03:24.500
and I'm going to use parameterized constructor.

00:03:24.500 --> 00:03:27.260
You remember right, how the controller is going to contract

00:03:27.260 --> 00:03:31.340
or it is same as the class name and no return type.

00:03:31.340 --> 00:03:35.420
And here we're going to take two inputs,

00:03:35.420 --> 00:03:39.785
so int x, int y.

00:03:39.785 --> 00:03:42.170
So what we can do here,

00:03:42.170 --> 00:03:44.120
we can simply overwrite the variable.

00:03:44.120 --> 00:03:47.045
So I'm going to, x is equal to x.

00:03:47.045 --> 00:03:48.785
Because what are the values coming?

00:03:48.785 --> 00:03:50.525
I'm already good here.

00:03:50.525 --> 00:03:53.345
Okay, through this x and y.

00:03:53.345 --> 00:03:54.125
Okay?

00:03:54.125 --> 00:03:56.730
So now let me run this.

00:03:58.210 --> 00:04:00.740
So what does enter here?

00:04:00.740 --> 00:04:04.890
Cancel this keyword.

00:04:05.230 --> 00:04:11.330
Okay, So since I creator a parameterized constructor,

00:04:11.330 --> 00:04:13.445
the default constructor is not visible.

00:04:13.445 --> 00:04:15.860
So we're using default constructor here, right?

00:04:15.860 --> 00:04:18.620
So just to resolve the compilation issue,

00:04:18.620 --> 00:04:20.975
I'm just creating the default constructor.

00:04:20.975 --> 00:04:22.025
Okay?

00:04:22.025 --> 00:04:24.470
So now let me run this.

00:04:24.470 --> 00:04:27.940
The value x is equal to 0, y is equal to 0.

00:04:27.940 --> 00:04:29.000
Why?

00:04:29.000 --> 00:04:31.220
Because the contract by which I called,

00:04:31.220 --> 00:04:33.425
it does nothing but my default constructor.

00:04:33.425 --> 00:04:35.885
So I don't want to use this anymore.

00:04:35.885 --> 00:04:37.385
Just delete.

00:04:37.385 --> 00:04:39.785
Okay, So you under forgetting error,

00:04:39.785 --> 00:04:42.320
the reason we are calling the default constructor, I don't want to call them.

00:04:42.320 --> 00:04:45.620
I can simply call the another country which contains two inputs,

00:04:45.620 --> 00:04:47.720
ten comment on denote error is gone.

00:04:47.720 --> 00:04:49.790
Okay, let me run it again.

00:04:49.790 --> 00:04:50.915
Now.

00:04:50.915 --> 00:04:55.415
Still I'm getting 00. What could be the reason?

00:04:55.415 --> 00:05:02.255
So we don't know why it is not picking the proper value because when I'm calling this,

00:05:02.255 --> 00:05:03.620
when I'm getting new object,

00:05:03.620 --> 00:05:07.880
this keyword will be, I mean this contrarian.

00:05:07.880 --> 00:05:09.810
But when I'm calling the show method,

00:05:09.810 --> 00:05:12.590
are it is still referring the index comma

00:05:12.590 --> 00:05:17.420
y because the value hour it is not happening because we have a similar,

00:05:17.420 --> 00:05:20.195
because we have the same benefit but in the index into it.

00:05:20.195 --> 00:05:22.580
And I also have intersex commonly.

00:05:22.580 --> 00:05:23.915
Excuse me.

00:05:23.915 --> 00:05:25.475
Let's try something new here.

00:05:25.475 --> 00:05:28.295
I'm providing X1 and Y1,

00:05:28.295 --> 00:05:31.610
and I'm am modifying them as they are now.

00:05:31.610 --> 00:05:33.890
So now if you run this,

00:05:33.890 --> 00:05:36.290
you will get 10 and 20 because

00:05:36.290 --> 00:05:39.275
competitive selves getting confused which one I need to call.

00:05:39.275 --> 00:05:41.765
So this is the ambiguity issue.

00:05:41.765 --> 00:05:46.625
So in order to resolve this issue that this keyword comes into place,

00:05:46.625 --> 00:05:50.030
so they switch back to the old one.

00:05:50.030 --> 00:05:56.510
So now what we can do when I'm providing dot x, what happened?

00:05:56.510 --> 00:06:01.850
This dot x, which will refer the class instance variable,

00:06:01.850 --> 00:06:03.170
that is the first right?

00:06:03.170 --> 00:06:08.225
Look at the first. This can be used to refer the current class instance variable.

00:06:08.225 --> 00:06:10.160
This is my current class, right?

00:06:10.160 --> 00:06:11.995
And this is my instance variable.

00:06:11.995 --> 00:06:14.315
So this will refer to this particular variables.

00:06:14.315 --> 00:06:17.960
So now I can use this dot here.

00:06:17.960 --> 00:06:21.300
Correct? Let me run it now.

00:06:21.430 --> 00:06:26.630
So now we've got the proper data because I have a proper implementation here.

00:06:26.630 --> 00:06:33.305
This is belongs to the instance variable in the class level,

00:06:33.305 --> 00:06:38.104
and this is coming from the input argument, the constructor.

00:06:38.104 --> 00:06:39.500
So this makes sense.

00:06:39.500 --> 00:06:42.980
But there are scenarios, you don't need them, right?

00:06:42.980 --> 00:06:44.450
So what are the scenario?

00:06:44.450 --> 00:06:46.025
So as I mentioned,

00:06:46.025 --> 00:06:49.670
you have a different kind of name here in the exponent.

00:06:49.670 --> 00:06:53.315
Do I have a different names in those kind of situation,

00:06:53.315 --> 00:06:56.390
you don't need the skewer. Okay?

00:06:56.390 --> 00:07:01.175
So this is the first which we need to keep it in mind.

00:07:01.175 --> 00:07:06.710
This keyword can be used to refer to the instance variable in the class.

00:07:06.710 --> 00:07:09.620
Okay, the next example we'll talk over this second.

00:07:09.620 --> 00:07:11.040
Thank you.
