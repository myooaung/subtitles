WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.785
Hello everyone, Welcome back.

00:00:01.785 --> 00:00:04.680
Let's explore a little bit more about Java nine.

00:00:04.680 --> 00:00:07.860
So I have a private method here, correct?

00:00:07.860 --> 00:00:10.830
So when I can access the private matter.

00:00:10.830 --> 00:00:12.705
So we have a default method right here,

00:00:12.705 --> 00:00:16.620
because the private method is only accessible inside the interface.

00:00:16.620 --> 00:00:22.335
So you can access it and said the default method like my third one,

00:00:22.335 --> 00:00:25.140
you can do that. Correct?

00:00:25.140 --> 00:00:28.470
So for example, I have a static method here.

00:00:28.470 --> 00:00:31.270
I can iterate acts the methadone here.

00:00:32.240 --> 00:00:38.240
You cannot access because that is a private static. So which is not possible.

00:00:38.240 --> 00:00:40.400
You cannot call this static,

00:00:40.400 --> 00:00:43.250
this particular, a private matter here.

00:00:43.250 --> 00:00:47.420
In this particular private static,

00:00:47.420 --> 00:00:48.845
the static void main dot.

00:00:48.845 --> 00:00:52.520
Okay, So let me create one more month or like let me create

00:00:52.520 --> 00:00:57.810
a method to and this is going to be static.

00:00:58.120 --> 00:01:00.860
And provide my name is Amanda.

00:01:00.860 --> 00:01:08.010
So this is a private method to kinda try to access this year in say, the static method.

00:01:08.290 --> 00:01:13.700
You can access the reason this is a static method and this is also a static method.

00:01:13.700 --> 00:01:16.880
And since both of them in the same inside the interface,

00:01:16.880 --> 00:01:19.415
they can access each of them.

00:01:19.415 --> 00:01:20.810
This is the building of MIT,

00:01:20.810 --> 00:01:22.160
can communicate to monkey.

00:01:22.160 --> 00:01:23.945
Dog can communicate her dog.

00:01:23.945 --> 00:01:27.350
Likewise, stat, they can communicate to the static.

00:01:27.350 --> 00:01:29.930
It just like that, right?

00:01:29.930 --> 00:01:36.410
So at the same time you're going to access the method2 inside from static method also,

00:01:36.410 --> 00:01:38.510
which is also possible.

00:01:38.510 --> 00:01:41.855
And then another thing, we have a private metadata year, right?

00:01:41.855 --> 00:01:43.640
So we have a private static method.

00:01:43.640 --> 00:01:44.210
Also.

00:01:44.210 --> 00:01:45.650
From the private method,

00:01:45.650 --> 00:01:49.055
you can access the private static void months or

00:01:49.055 --> 00:01:53.930
one month that which means you're going to access my true.

00:01:53.930 --> 00:01:55.325
Also.

00:01:55.325 --> 00:01:57.860
The other things. Right?

00:01:57.860 --> 00:02:01.715
So these are all the restriction when you're using the private.

00:02:01.715 --> 00:02:03.005
My thoughts.

00:02:03.005 --> 00:02:05.540
So basically where do we need a private methods?

00:02:05.540 --> 00:02:09.530
So when you have an interface,

00:02:09.530 --> 00:02:14.795
you have a multiple methods we reach you are exposing to the other clients, okay?

00:02:14.795 --> 00:02:20.570
And you can have your own private methods to internally test your other methods.

00:02:20.570 --> 00:02:27.350
The reason the interface alone can access those private method, nobody else can.

00:02:27.350 --> 00:02:29.765
Whoever is, for example,

00:02:29.765 --> 00:02:33.470
this particular wild dog implements for us gentleman, right?

00:02:33.470 --> 00:02:39.080
So again, we access the matters here at the private method is a method to write.

00:02:39.080 --> 00:02:40.370
Can you access the private method 1,

00:02:40.370 --> 00:02:42.980
method 2, let me try that.

00:02:42.980 --> 00:02:46.310
So since it's a static method, right?

00:02:46.310 --> 00:02:48.470
So it's private white matter one.

00:02:48.470 --> 00:02:52.010
So F dot mitre,

00:02:52.010 --> 00:02:54.980
we won't be able to see that method wouldn't a frenzy.

00:02:54.980 --> 00:02:57.755
You won't be able to call it here because there is a private method,

00:02:57.755 --> 00:02:59.255
okay, here is the static method.

00:02:59.255 --> 00:03:01.565
We know how to call the static methods, right?

00:03:01.565 --> 00:03:04.415
So using the class name dot,

00:03:04.415 --> 00:03:06.440
can you see my name here, method2?

00:03:06.440 --> 00:03:08.690
No, it is not possible because even though it is a static,

00:03:08.690 --> 00:03:10.850
that is a gray.

00:03:10.850 --> 00:03:14.405
So brave it, which means it's belongs to one particular interface.

00:03:14.405 --> 00:03:18.019
It cannot be accessed outside of the interface.

00:03:18.019 --> 00:03:21.110
If you have a private matter into the class,

00:03:21.110 --> 00:03:24.980
which means that particular method alone accessible for them.

00:03:24.980 --> 00:03:27.035
That particular class alone,

00:03:27.035 --> 00:03:29.255
not for the other classes.

00:03:29.255 --> 00:03:34.595
Okay, So these are the most important things about the Java concepts, okay?

00:03:34.595 --> 00:03:38.420
So you do practice a lot to have

00:03:38.420 --> 00:03:42.620
a better understanding and give it a try with

00:03:42.620 --> 00:03:47.390
a lot of examples and let me know if you guys have any issues or if you need any help.

00:03:47.390 --> 00:03:51.605
Okay, so the examples which we used pretty much very simple things.

00:03:51.605 --> 00:03:55.420
We're not, we're not passing any parameters and doing some complex programs.

00:03:55.420 --> 00:03:57.065
We are using very simple programs.

00:03:57.065 --> 00:04:00.740
Our ultimate goal is just to have a basic understanding of

00:04:00.740 --> 00:04:04.475
what Java programs and object-oriented programming system.

00:04:04.475 --> 00:04:06.060
Thank you.
