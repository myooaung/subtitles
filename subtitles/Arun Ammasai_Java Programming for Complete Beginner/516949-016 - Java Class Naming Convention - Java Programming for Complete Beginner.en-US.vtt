WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.965
Hello everyone.

00:00:01.965 --> 00:00:07.470
So we discuss about the key elements inside the Hello World program, right?

00:00:07.470 --> 00:00:13.125
So we need to know a few additional things also.

00:00:13.125 --> 00:00:15.450
So when you're creating a class,

00:00:15.450 --> 00:00:18.870
you are providing a name for the class, right?

00:00:18.870 --> 00:00:24.015
So for naming your particular class

00:00:24.015 --> 00:00:29.250
that are lot of restriction in physic and randomly create a class name, okay?

00:00:29.250 --> 00:00:31.875
So you need to create a class name.

00:00:31.875 --> 00:00:33.794
It should be a noun.

00:00:33.794 --> 00:00:37.980
It should have a proper meaning. Right?

00:00:37.980 --> 00:00:46.715
And another thing, in case when you have a class on ImageContent multiple words, right?

00:00:46.715 --> 00:00:52.055
So the class name always starts with a capital letter.

00:00:52.055 --> 00:00:56.420
The first letter of each interval has to be capitalized.

00:00:56.420 --> 00:00:59.390
For example, if we have an example

00:00:59.390 --> 00:01:04.610
called my program or even in my eye out our praise example,

00:01:04.610 --> 00:01:06.560
helloworld, which is a capital letter,

00:01:06.560 --> 00:01:08.045
and world isn't, etc.

00:01:08.045 --> 00:01:10.740
So W is also capitalize the right.

00:01:11.530 --> 00:01:15.725
And another thing, when you create a class name,

00:01:15.725 --> 00:01:19.355
make sure it is not starts with a number.

00:01:19.355 --> 00:01:20.930
Because if you're creating it,

00:01:20.930 --> 00:01:22.340
last name starts with a number,

00:01:22.340 --> 00:01:25.100
it will immediately throw an error.

00:01:25.100 --> 00:01:27.530
That's an a compilation error.

00:01:27.530 --> 00:01:34.340
And there are no special characters allowed inside. It.

00:01:34.340 --> 00:01:37.670
Lastname starts at the special characters,

00:01:37.670 --> 00:01:40.985
but there are two special characters allowed.

00:01:40.985 --> 00:01:44.450
And this curve and Joel, simple.

00:01:44.450 --> 00:01:46.670
I think this naming convention,

00:01:46.670 --> 00:01:50.870
it is applicable across all the naming.

00:01:50.870 --> 00:01:56.120
Naming a class, naming a method or naming your variable, naming an object.

00:01:56.120 --> 00:02:03.725
So this rule pretty much applicable for every attributes.

00:02:03.725 --> 00:02:07.250
Okay, let me give you a simple example.

00:02:07.250 --> 00:02:08.600
We seen the rules, right?

00:02:08.600 --> 00:02:10.640
Let's go back to our example.

00:02:10.640 --> 00:02:15.590
So let's try to verify that things, okay,

00:02:15.590 --> 00:02:17.075
so as I mentioned,

00:02:17.075 --> 00:02:19.490
that last names start with capital interconnect,

00:02:19.490 --> 00:02:21.965
done, and they interval word.

00:02:21.965 --> 00:02:24.320
I mean the next word starts with a calculator.

00:02:24.320 --> 00:02:29.100
But how we think about what will happen if you create Hello.

00:02:31.630 --> 00:02:35.660
Nothing will happen because it is not an issue.

00:02:35.660 --> 00:02:40.460
Because your last name starts with a capital T. It's a standard.

00:02:40.460 --> 00:02:42.320
But it doesn't mean if you're creating

00:02:42.320 --> 00:02:45.830
a class name started the smaller trade return an error.

00:02:45.830 --> 00:02:47.135
It will not throw an error.

00:02:47.135 --> 00:02:47.915
Okay?

00:02:47.915 --> 00:02:50.390
But for maintaining certain standards,

00:02:50.390 --> 00:02:52.505
we have to follow certain rules.

00:02:52.505 --> 00:02:56.330
And those rules will not end up with a compilation issue.

00:02:56.330 --> 00:03:01.350
But in case if you write a class name,

00:03:01.600 --> 00:03:08.705
helloworld, It's a invalid one because the class name cannot start with a number.

00:03:08.705 --> 00:03:11.120
Okay, Let's go to the command prompt.

00:03:11.120 --> 00:03:13.115
Let's try to recompile the program.

00:03:13.115 --> 00:03:18.590
See whenever you make a change in existing Java file unity recompile them again.

00:03:18.590 --> 00:03:21.665
So HelloWorld, that Java.

00:03:21.665 --> 00:03:24.635
Can you see what happened?

00:03:24.635 --> 00:03:27.125
It is truly an adder.

00:03:27.125 --> 00:03:30.890
Okay, so here, public class,

00:03:30.890 --> 00:03:34.130
HelloWorld, the beginning of the class, this line.

00:03:34.130 --> 00:03:38.150
This cannot start with a number.

00:03:38.150 --> 00:03:42.395
Okay, let me delete that and go back and recompile it again.

00:03:42.395 --> 00:03:45.905
Which will work because it is a valid scenario.

00:03:45.905 --> 00:03:47.015
Okay?

00:03:47.015 --> 00:03:48.320
And there's another thing.

00:03:48.320 --> 00:03:50.630
Java is case sensitive language.

00:03:50.630 --> 00:03:52.730
So class HelloWorld is

00:03:52.730 --> 00:03:56.075
different and similar type if you're writing another classical here,

00:03:56.075 --> 00:04:03.545
Hello world, both of them out of different classes.

00:04:03.545 --> 00:04:07.400
Because even though both spells the same,

00:04:07.400 --> 00:04:10.565
it doesn't mean both are same because it's the case entity language.

00:04:10.565 --> 00:04:14.555
Hello world is different and this hollow ball is different.

00:04:14.555 --> 00:04:15.890
Okay?

00:04:15.890 --> 00:04:18.170
So what are the rules which we discussed?

00:04:18.170 --> 00:04:20.570
So it has to start with

00:04:20.570 --> 00:04:24.320
a capital letter and the next word also start with the capitalised.

00:04:24.320 --> 00:04:28.625
And it cannot start with the number,

00:04:28.625 --> 00:04:37.085
or it cannot start with a special character like ADD or percentage.

00:04:37.085 --> 00:04:40.685
So let's go back to the command module titled recompile it again.

00:04:40.685 --> 00:04:46.625
Again, we'll end up with an issue because the method cannot start with them.

00:04:46.625 --> 00:04:48.920
Special characters, okay?

00:04:48.920 --> 00:04:50.600
But there are few aloud as I mentioned,

00:04:50.600 --> 00:04:51.860
and that's good. We can use it.

00:04:51.860 --> 00:04:52.490
Okay.

00:04:52.490 --> 00:04:54.560
So now recompile it again.

00:04:54.560 --> 00:04:57.335
Now you'll end up with the issue again.

00:04:57.335 --> 00:05:01.925
The reason is the class name.

00:05:01.925 --> 00:05:04.700
You saved a particular class name,

00:05:04.700 --> 00:05:08.240
ASA HelloWorld.java in order to execute

00:05:08.240 --> 00:05:10.520
this particular file unity save as an underscore

00:05:10.520 --> 00:05:13.250
HelloWorld.java because the naming convention,

00:05:13.250 --> 00:05:16.535
I mean, the way how we need to save that landfill, it's different, right?

00:05:16.535 --> 00:05:18.935
So keep all those things in your mind.

00:05:18.935 --> 00:05:19.565
Okay?

00:05:19.565 --> 00:05:23.390
So if you say that this same file as underscore HelloWorld.java,

00:05:23.390 --> 00:05:25.130
this program will work.

00:05:25.130 --> 00:05:29.640
Okay, Let's see each other in the next video. Thank you.
