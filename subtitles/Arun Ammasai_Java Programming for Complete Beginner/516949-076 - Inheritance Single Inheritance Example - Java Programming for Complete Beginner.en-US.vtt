WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.290
Hello everyone, welcome back.

00:00:02.290 --> 00:00:04.210
So as I mentioned, two important things,

00:00:04.210 --> 00:00:07.435
child class and parent class.

00:00:07.435 --> 00:00:08.755
What each child class,

00:00:08.755 --> 00:00:10.000
as I mentioned earlier,

00:00:10.000 --> 00:00:14.110
the child class, which extends future from another class is known a child's.

00:00:14.110 --> 00:00:19.134
Let's add a subclass and parent whoever is providing the functionality or properties.

00:00:19.134 --> 00:00:21.940
They are bad in class.

00:00:21.940 --> 00:00:23.140
Or you can sing Please,

00:00:23.140 --> 00:00:26.425
a superclass or base class also.

00:00:26.425 --> 00:00:27.250
Okay?

00:00:27.250 --> 00:00:33.445
So let me show you how to extend or use a property.

00:00:33.445 --> 00:00:34.945
Okay, so what I'm gonna do,

00:00:34.945 --> 00:00:37.675
I'm gonna create a new Java file here.

00:00:37.675 --> 00:00:39.805
Let me show you the syntax first.

00:00:39.805 --> 00:00:41.800
So how you can create a class.

00:00:41.800 --> 00:00:47.615
For example, I have a Class a here and its contains some methods and members,

00:00:47.615 --> 00:00:49.625
like methods and variables.

00:00:49.625 --> 00:00:52.440
So I have a class B.

00:00:53.530 --> 00:01:00.125
Okay, the syntax is I want to share the properties from class a.

00:01:00.125 --> 00:01:02.900
So the syntax is class B, extents.

00:01:02.900 --> 00:01:10.490
Extents is a keyword to extending or inheriting the properties from the classes.

00:01:10.490 --> 00:01:13.250
So here I'm going abroad, class B, okay.

00:01:13.250 --> 00:01:14.795
So what happened?

00:01:14.795 --> 00:01:20.435
Class B can access each and everything from class II.

00:01:20.435 --> 00:01:25.115
Correct? And you need to create the object for Class B.

00:01:25.115 --> 00:01:27.410
You can access all of them.

00:01:27.410 --> 00:01:28.490
Okay?

00:01:28.490 --> 00:01:31.370
So when you create objects for plus yj, what lab,

00:01:31.370 --> 00:01:35.390
and you will be able to only access class yay, not be.

00:01:35.390 --> 00:01:36.140
Okay.

00:01:36.140 --> 00:01:38.810
So let's, let me show you in

00:01:38.810 --> 00:01:40.700
a simple example how exactly these things are

00:01:40.700 --> 00:01:43.100
going to work and then you can easily understand.

00:01:43.100 --> 00:01:48.260
So let me go back to and I'm creating a new example here.

00:01:48.260 --> 00:01:55.740
Class inheritance example.

00:01:56.320 --> 00:01:58.010
Right?

00:01:58.010 --> 00:02:01.280
Okay, So this is my inheritance example.

00:02:01.280 --> 00:02:06.240
So I'm going to create another class here in class, parent class.

00:02:08.160 --> 00:02:10.540
Or I can simply say,

00:02:10.540 --> 00:02:11.800
okay, parent lattice, fine.

00:02:11.800 --> 00:02:18.025
So bad in class contains int x is equal to 10. It's a member, right?

00:02:18.025 --> 00:02:21.205
And also it has a method called Wired Add.

00:02:21.205 --> 00:02:25.600
And you'll provide something here, so useful.

00:02:25.600 --> 00:02:30.530
So message from AdMob.

00:02:31.050 --> 00:02:33.340
Okay.

00:02:33.340 --> 00:02:39.100
So and this particular class require some details from the parent class.

00:02:39.100 --> 00:02:43.460
Maybe they need the functionality which is implemented in the add method.

00:02:43.950 --> 00:02:47.815
Okay? So how they can access it.

00:02:47.815 --> 00:02:50.560
As I mentioned in the previous,

00:02:50.560 --> 00:02:59.575
an example here, the Class B extends from which glove they want to access the members.

00:02:59.575 --> 00:03:08.270
So here, inheritance example wants to extend data from parent class.

00:03:09.360 --> 00:03:11.005
Got it.

00:03:11.005 --> 00:03:12.865
So now I can create a main method.

00:03:12.865 --> 00:03:15.340
Which main method you use,

00:03:15.340 --> 00:03:18.835
you can create great objects for inheritance example,

00:03:18.835 --> 00:03:22.210
OBJ is equal to new class name.

00:03:22.210 --> 00:03:26.980
So now even, even though if you creating your object for inheritance example,

00:03:26.980 --> 00:03:28.195
you should be able to access,

00:03:28.195 --> 00:03:30.625
add Madonna and all to the x.

00:03:30.625 --> 00:03:36.980
Can you try that edge to that OBJ dot add and run it.

00:03:36.980 --> 00:03:42.844
See, we were able to access write the similar way you can access

00:03:42.844 --> 00:03:51.060
the members also variables like OBJ dot x, z.

00:03:51.220 --> 00:03:53.780
You are able to access, right?

00:03:53.780 --> 00:04:01.220
Not only access, you can modify also OBJ dot x is equal to,

00:04:01.220 --> 00:04:02.615
I don't want the den, I can,

00:04:02.615 --> 00:04:04.550
I need a 25-year.

00:04:04.550 --> 00:04:06.620
So when you run it right now,

00:04:06.620 --> 00:04:08.705
so it is becomes 25.

00:04:08.705 --> 00:04:09.875
But here's the thing.

00:04:09.875 --> 00:04:18.320
When you blow it final lab and you cannot override data because the final keyword,

00:04:18.320 --> 00:04:22.910
which will not allow when you define something as a final, which means it's final.

00:04:22.910 --> 00:04:24.945
You cannot do anything else, you can't modify.

00:04:24.945 --> 00:04:32.285
Okay? So you might ask what'll happen if I create parent class here.

00:04:32.285 --> 00:04:34.790
Okay, so let's do that also.

00:04:34.790 --> 00:04:39.170
I'm going to create a pattern class object.

00:04:39.170 --> 00:04:43.250
So OBJ one is equal to new reader one.

00:04:43.250 --> 00:04:51.185
Sorry, Pan class. So now we should be able to access only get one dot add method.

00:04:51.185 --> 00:04:54.695
Because you cannot access anything from inheritance example,

00:04:54.695 --> 00:04:57.665
because inherently exam doesn't have any methods here.

00:04:57.665 --> 00:05:00.140
Let's add mapped on one of them here.

00:05:00.140 --> 00:05:03.600
So void, show.

00:05:04.120 --> 00:05:11.010
So here I want to blow or something message from show mutton.

00:05:15.940 --> 00:05:18.710
So you won't be able to

00:05:18.710 --> 00:05:28.040
access the show method because you created object, we're parent class.

00:05:28.040 --> 00:05:33.185
But when you create an object for the child class,

00:05:33.185 --> 00:05:36.410
so you can access bad and glass at the same time you can

00:05:36.410 --> 00:05:39.755
access it's one method since like you can share,

00:05:39.755 --> 00:05:42.680
you can access your father's property at the same time.

00:05:42.680 --> 00:05:44.570
You can have your own properties also.

00:05:44.570 --> 00:05:49.280
So here I can access my own methods also.

00:05:49.280 --> 00:05:51.800
So which is pretty simple, right?

00:05:51.800 --> 00:05:56.405
So this is an example for single inheritance.

00:05:56.405 --> 00:05:59.450
So I have a one class which contains some data.

00:05:59.450 --> 00:06:02.405
I can overwrite the data or I can access them.

00:06:02.405 --> 00:06:07.490
And the object which I created is for the inheritance example,

00:06:07.490 --> 00:06:09.770
because this is a class is extending their properties, right?

00:06:09.770 --> 00:06:13.550
So through creating the object for this particular class,

00:06:13.550 --> 00:06:16.160
you should be able to access its own methods along

00:06:16.160 --> 00:06:18.995
with the parent class methods and the member.

00:06:18.995 --> 00:06:20.670
Thank you.
