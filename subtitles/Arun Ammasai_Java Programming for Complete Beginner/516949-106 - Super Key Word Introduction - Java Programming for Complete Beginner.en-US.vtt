WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.670
Hello everyone, Welcome back.

00:00:02.670 --> 00:00:09.585
So the another important topic which we need to know Java program is super keyword.

00:00:09.585 --> 00:00:14.234
This keyword super cure also, it's much important.

00:00:14.234 --> 00:00:18.075
Okay, so let's see why do we need them?

00:00:18.075 --> 00:00:22.860
All right, The first thing, the super keyword refers to base,

00:00:22.860 --> 00:00:25.305
our superclass object. Okay?

00:00:25.305 --> 00:00:26.685
It can be anything.

00:00:26.685 --> 00:00:31.410
So normally if you have a base and subclass our parent or child class,

00:00:31.410 --> 00:00:35.790
the super keyword is used to do call the base class met.

00:00:35.790 --> 00:00:38.520
That's our parent class methods not only

00:00:38.520 --> 00:00:41.635
meant that they can access the variables constructor also,

00:00:41.635 --> 00:00:43.970
and also help us to eliminate the confusion

00:00:43.970 --> 00:00:46.100
between super and sub class, okay, For example,

00:00:46.100 --> 00:00:49.190
you have a parent and child both have the same kind of

00:00:49.190 --> 00:00:53.045
variable names or both our same method names.

00:00:53.045 --> 00:00:56.135
And then those kind of scenarios using super keyword,

00:00:56.135 --> 00:01:01.040
you can distinguish between the child and the parent.

00:01:01.040 --> 00:01:02.930
Okay, if it is a same class,

00:01:02.930 --> 00:01:05.150
we can use this keyword.

00:01:05.150 --> 00:01:08.540
But if it is a subclass and the parent class,

00:01:08.540 --> 00:01:09.725
we had to go for Super.

00:01:09.725 --> 00:01:13.340
Okay, So basically one thing which we need to do, this and this loop,

00:01:13.340 --> 00:01:18.005
this will work predominantly with the single glass inside the class itself,

00:01:18.005 --> 00:01:22.100
but super, which would work with the base class and the subclass.

00:01:22.100 --> 00:01:25.010
So in order to understand the super keyword,

00:01:25.010 --> 00:01:27.230
you should hour of inheritance,

00:01:27.230 --> 00:01:29.580
okay, which we already covered.

00:01:30.520 --> 00:01:33.380
So what is the usage?

00:01:33.380 --> 00:01:36.410
The first wind super variables, okay,

00:01:36.410 --> 00:01:40.595
I have a base class and subclass both have the same variable name.

00:01:40.595 --> 00:01:46.415
So in those scenarios we can use the super are wrong with the variable name.

00:01:46.415 --> 00:01:48.785
And super width methods.

00:01:48.785 --> 00:01:51.695
Again, like, like variables,

00:01:51.695 --> 00:01:53.855
I have a methods also with the same name,

00:01:53.855 --> 00:01:55.805
which is the possible, right?

00:01:55.805 --> 00:02:01.100
So those kind of scenario we can use method along with the super keyword.

00:02:01.100 --> 00:02:04.085
And the final one, the super constructor.

00:02:04.085 --> 00:02:08.690
So when you have a patent and child using the child,

00:02:08.690 --> 00:02:11.705
you can call the bad and that's construct pass.

00:02:11.705 --> 00:02:15.800
Okay, So, and another important thing about the contract,

00:02:15.800 --> 00:02:18.755
or it can use that I'm a trick,

00:02:18.755 --> 00:02:23.720
also non-parametric, which means we can call normal constructor,

00:02:23.720 --> 00:02:26.870
which is empty constructor or default constructor.

00:02:26.870 --> 00:02:33.215
And parameter contract that contract out with some input parameters or arguments.

00:02:33.215 --> 00:02:33.965
Okay?

00:02:33.965 --> 00:02:36.530
So we are going to talk about

00:02:36.530 --> 00:02:40.550
three different examples of super with variables super intimate that subroutine.

00:02:40.550 --> 00:02:43.580
And we're going to create a simple example for each and every scenario.

00:02:43.580 --> 00:02:45.090
Thank you.
