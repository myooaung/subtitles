WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.995
Hello everyone. Welcome back.

00:00:01.995 --> 00:00:03.900
So before we move into the next one,

00:00:03.900 --> 00:00:07.950
let's say some real-time scenario using for loop.

00:00:07.950 --> 00:00:12.465
So basically what I want to do is I will give some range of data

00:00:12.465 --> 00:00:19.065
and I want to know the total sum of eta.

00:00:19.065 --> 00:00:20.355
Can do that.

00:00:20.355 --> 00:00:29.500
Okay, So let's create a new class here. So far loop.

00:00:29.630 --> 00:00:38.230
Calculate some water here.

00:00:42.220 --> 00:00:46.160
So for now, so my initial value,

00:00:46.160 --> 00:00:56.225
int I is equal to my

00:00:56.225 --> 00:01:03.590
left and

00:01:03.590 --> 00:01:08.340
my account here.

00:01:09.880 --> 00:01:19.775
So int count. Okay, So what I'm gonna do,

00:01:19.775 --> 00:01:24.540
I'm gonna create a for loop here for so what are the initial value here?

00:01:25.230 --> 00:01:31.370
So you can use in our account.

00:01:31.620 --> 00:01:34.315
We don't need this at all.

00:01:34.315 --> 00:01:39.410
What we can do is int.

00:01:43.440 --> 00:01:49.160
So n is equal to one.

00:02:03.960 --> 00:02:07.820
I is equal to one.

00:02:07.820 --> 00:02:15.620
And the limit, so the limit I less than or equal to the length.

00:02:15.620 --> 00:02:18.800
So I'm going to times you want to run up to them.

00:02:18.800 --> 00:02:22.550
And how we're going to increment the I plus plus.

00:02:22.550 --> 00:02:25.190
So basically what I need to do, some operation, right?

00:02:25.190 --> 00:02:32.405
We have a total daughter is equal to every dime is total plus the i data.

00:02:32.405 --> 00:02:36.350
So basically what will happen in the end, you of course,

00:02:36.350 --> 00:02:40.490
you'll find locally, okay?

00:02:40.490 --> 00:02:42.560
So the reason the local variable,

00:02:42.560 --> 00:02:46.070
you cannot leave it as an MD,

00:02:46.070 --> 00:02:49.190
you need to provide some initial, some data in it.

00:02:49.190 --> 00:02:50.810
So 0.

00:02:50.810 --> 00:02:54.485
So if it is, if it is in the class level,

00:02:54.485 --> 00:02:58.355
that initialization is not necessary but local variable you must.

00:02:58.355 --> 00:03:05.550
So now what we can do is we can simply print the total is.

00:03:10.660 --> 00:03:13.955
Let's run it and we'll say,

00:03:13.955 --> 00:03:16.370
what is the outcome of it?

00:03:16.370 --> 00:03:20.585
See the total between one to ten. It is 55.

00:03:20.585 --> 00:03:25.805
It is as simple as that, right?

00:03:25.805 --> 00:03:30.870
So there are other things to do.

00:03:31.270 --> 00:03:35.160
So we can find value.

00:03:35.230 --> 00:03:39.440
And like, do you remember the if condition?

00:03:39.440 --> 00:03:43.430
We try an example where the user can enter the input.

00:03:43.430 --> 00:03:46.865
The similar way, the program which we did here, right?

00:03:46.865 --> 00:03:51.845
The length total, you can get the input from the user like using scanner.

00:03:51.845 --> 00:03:54.155
And you can follow me were worn for loop here.

00:03:54.155 --> 00:03:58.460
So Linde because it is static here because I already given.

00:03:58.460 --> 00:04:00.530
But if we wanted to get from the user,

00:04:00.530 --> 00:04:02.900
so declared using the scanner,

00:04:02.900 --> 00:04:04.685
so usually provide the data here.

00:04:04.685 --> 00:04:07.970
And then what were the length here and the total also,

00:04:07.970 --> 00:04:11.555
you need to provide the initial value is 0.

00:04:11.555 --> 00:04:12.545
Correct?

00:04:12.545 --> 00:04:15.365
So we can, you want, you can give it a try.

00:04:15.365 --> 00:04:18.410
Okay, instead of passing all the data statically here,

00:04:18.410 --> 00:04:22.470
you can pass a bit dynamically. Okay, thank you.
