WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.020 --> 00:00:02.835
Hello everyone. Welcome back.

00:00:02.835 --> 00:00:04.350
So the for loop is done.

00:00:04.350 --> 00:00:06.690
So now let's talk about the while loop.

00:00:06.690 --> 00:00:09.150
See the whatever loop.

00:00:09.150 --> 00:00:15.345
I mean, we tried so far in for the everything can be done using while loop,

00:00:15.345 --> 00:00:19.365
also with the do-while. But what is the difference?

00:00:19.365 --> 00:00:20.190
In the for loop?

00:00:20.190 --> 00:00:25.950
We know that the limit to how many times this block needs to be executed.

00:00:25.950 --> 00:00:31.680
But in while loop, the user ID at the part of program several times like a for loop.

00:00:31.680 --> 00:00:35.070
But the difference between will not have the addition faced.

00:00:35.070 --> 00:00:38.080
So we don't know how many times it's going to be.

00:00:38.570 --> 00:00:41.980
The loop is given to you. It's going to run.

00:00:41.980 --> 00:00:44.735
So in while condition,

00:00:44.735 --> 00:00:46.970
the condition verified first.

00:00:46.970 --> 00:00:49.085
So while and that it's a condition.

00:00:49.085 --> 00:00:50.600
So once the condition is verified,

00:00:50.600 --> 00:00:53.360
then it will go inside and a leg that you decode.

00:00:53.360 --> 00:00:54.455
Okay.

00:00:54.455 --> 00:00:57.785
Increment and decrement to happen inside the while loop.

00:00:57.785 --> 00:01:00.170
Okay, but far loop while doing the for loop itself,

00:01:00.170 --> 00:01:01.925
we'll do that. We'll do the increment.

00:01:01.925 --> 00:01:05.735
But if it is a while, what do you need to do?

00:01:05.735 --> 00:01:08.930
You need to declare the condition first and then you'll provide

00:01:08.930 --> 00:01:12.575
that increment or decrement inside your for loop.

00:01:12.575 --> 00:01:16.850
So inside your while loop variable provide these statements.

00:01:16.850 --> 00:01:18.170
So how about this?

00:01:18.170 --> 00:01:20.420
What are the syntax for the while loop?

00:01:20.420 --> 00:01:23.360
See this also will do its content,

00:01:23.360 --> 00:01:26.390
all the elements which far loop contains four loop contents,

00:01:26.390 --> 00:01:28.565
the initial value condition and then increment, right?

00:01:28.565 --> 00:01:31.145
So here we have the initial value,

00:01:31.145 --> 00:01:32.945
but it is not inside the while.

00:01:32.945 --> 00:01:36.590
It is a boda inside, say it's a Buddha.

00:01:36.590 --> 00:01:38.855
So once a value is initialized,

00:01:38.855 --> 00:01:42.020
then you can open a while and you can primary condition here.

00:01:42.020 --> 00:01:48.559
So this while loop is keep on executing until this particular condition is false.

00:01:48.559 --> 00:01:53.930
So the increment and decrement a deal happen inside the while loop.

00:01:53.930 --> 00:01:57.185
So this particular data has been,

00:01:57.185 --> 00:02:00.590
having the condition has been false then that while loop a lot

00:02:00.590 --> 00:02:04.190
more will not work correctly.

00:02:04.190 --> 00:02:08.720
Okay, so let's go and see a simple example for that.

00:02:08.720 --> 00:02:17.669
So while example.

00:02:18.330 --> 00:02:20.560
So the first thing first,

00:02:20.560 --> 00:02:23.660
we need a main method.

00:02:25.440 --> 00:02:29.560
So what we did and now follow the first condition.

00:02:29.560 --> 00:02:35.680
We tried to print the data from one to ten, right?

00:02:35.680 --> 00:02:40.270
So let's try to do the same thing here.

00:02:40.270 --> 00:02:43.525
First thing, we know that kind of syntax, right?

00:02:43.525 --> 00:02:47.570
So while and here, condition.

00:02:48.030 --> 00:02:56.605
And inside we'll have the increment or decrement. Okay?

00:02:56.605 --> 00:03:00.080
So here initial value.

00:03:02.700 --> 00:03:04.060
Okay?

00:03:04.060 --> 00:03:07.120
So first thing first, the initial value,

00:03:07.120 --> 00:03:14.965
so int I is equal to I is equal to 1, right?

00:03:14.965 --> 00:03:17.845
So condition what kind of kind of scenario videos.

00:03:17.845 --> 00:03:19.780
So I am going to run this particular condition.

00:03:19.780 --> 00:03:22.580
Is I less than or equal to 10?

00:03:22.920 --> 00:03:27.140
And I'm going to increment are using I plus plus.

00:03:29.100 --> 00:03:32.320
And let me print the data here.

00:03:32.320 --> 00:03:34.795
So I'm pretty directly here.

00:03:34.795 --> 00:03:37.810
So it is pretty much similar like FOR loop.

00:03:37.810 --> 00:03:40.180
We have initial value, we have a condition we

00:03:40.180 --> 00:03:42.370
haven't given Abiraterone or different places.

00:03:42.370 --> 00:03:46.010
So how this code is going to work the first time while condition will come inside.

00:03:46.010 --> 00:03:47.930
So I, well is 11 less than or equal 10?

00:03:47.930 --> 00:03:48.950
It's true.

00:03:48.950 --> 00:03:51.260
So this block or an executor,

00:03:51.260 --> 00:03:55.280
and then I value incremented from one to two, and then value.

00:03:55.280 --> 00:03:57.845
Are you guys begun to do less analytical 10.

00:03:57.845 --> 00:04:00.500
So until then, until then,

00:04:00.500 --> 00:04:04.985
this loop will continue to exit at the point of when I is equal to 10.

00:04:04.985 --> 00:04:07.700
So 10 less than or equal 10, which is true.

00:04:07.700 --> 00:04:09.710
You come inside, then 10 plus 1,

00:04:09.710 --> 00:04:11.570
11, then it goes again.

00:04:11.570 --> 00:04:14.540
So 11 less than or equal to 10, which is a file.

00:04:14.540 --> 00:04:16.595
So it will come out of the loop.

00:04:16.595 --> 00:04:17.780
Right?

00:04:17.780 --> 00:04:22.505
So let's run it and see what's going to happen here.

00:04:22.505 --> 00:04:26.030
See 12345678910.

00:04:26.030 --> 00:04:30.680
Pretty much like our follow-up.

00:04:30.680 --> 00:04:33.080
Okay, so let's do the reverse order.

00:04:33.080 --> 00:04:40.010
So the initial value is equal to 10 and my values greater than or equal to one.

00:04:40.010 --> 00:04:42.065
So now i'm, I'm,

00:04:42.065 --> 00:04:44.120
I'm trying to do the descending order, right?

00:04:44.120 --> 00:04:47.885
So I'm going to decrement now. So let's run it now.

00:04:47.885 --> 00:04:52.580
So now 10987654321, so in the reverse order.

00:04:52.580 --> 00:04:54.980
So you might think what will happen if I don't

00:04:54.980 --> 00:05:00.510
provide delimiter became under, let's take a look.

00:05:00.880 --> 00:05:04.070
Nothing is happening. It will keep on C,

00:05:04.070 --> 00:05:06.500
C bar, it'll keep going.

00:05:06.500 --> 00:05:08.450
The program will not terminate.

00:05:08.450 --> 00:05:09.950
Keep on going.

00:05:09.950 --> 00:05:12.454
So you need to manually stop the JVM.

00:05:12.454 --> 00:05:18.690
So that doesn't happen when you're not providing decrement or increment.

00:05:20.920 --> 00:05:26.150
Next. So important thing

00:05:26.150 --> 00:05:29.810
is you need to make sure the loop is not going to be infinite loop.

00:05:29.810 --> 00:05:33.200
Okay, So this condition when I, when I do,

00:05:33.200 --> 00:05:34.700
when I comment out that decrement,

00:05:34.700 --> 00:05:36.935
our increment, it is keep on going.

00:05:36.935 --> 00:05:40.505
But that has scenarios even though if you provide the incrementer also,

00:05:40.505 --> 00:05:43.655
the conditional will go into infinite.

00:05:43.655 --> 00:05:46.235
How would you go? Okay?

00:05:46.235 --> 00:05:49.280
So initial value I is equal to ten and I greater

00:05:49.280 --> 00:05:52.150
than or equal to one and I'll keep incrementing.

00:05:52.150 --> 00:05:55.660
So what will happen? So I, valleys spin.

00:05:55.660 --> 00:05:57.565
So ten greater than one.

00:05:57.565 --> 00:05:58.660
So it's a true.

00:05:58.660 --> 00:06:02.875
So what will happen? Basically, the initial value itself is bigger than the value.

00:06:02.875 --> 00:06:05.020
So if you are keeping incrementing the data,

00:06:05.020 --> 00:06:08.395
if the condition is never becomes false because what,

00:06:08.395 --> 00:06:11.110
the company is always bigger than one.

00:06:11.110 --> 00:06:12.595
So let me run it again.

00:06:12.595 --> 00:06:16.405
We'll see it again goes like a fart.

00:06:16.405 --> 00:06:19.600
I mean, the infinite loop, it will not stop.

00:06:19.600 --> 00:06:23.065
So make sure while you're using the while condition,

00:06:23.065 --> 00:06:26.480
you're keeping it in a proper way.

00:06:28.950 --> 00:06:33.630
Okay, Then the next example we'll talk about dual.

00:06:33.630 --> 00:06:35.060
So see it's still keep going.

00:06:35.060 --> 00:06:38.795
You need to stop the JVM in order to stop the flow.

00:06:38.795 --> 00:06:41.720
These are the normal thing is one,

00:06:41.720 --> 00:06:46.160
so I less than or equal to

00:06:46.160 --> 00:06:53.615
1 plus now it'll look like a properly and so there's analytical ten, I'm sorry.

00:06:53.615 --> 00:06:57.290
I'm taking so now we're good to go.

00:06:57.290 --> 00:07:00.480
So the next segment we'll talk about the do-while.
