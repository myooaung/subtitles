WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.290 --> 00:00:03.375
Alright, let's talk
about releases.

00:00:03.375 --> 00:00:06.420
As per what GitHub has
to say about lasers.

00:00:06.420 --> 00:00:08.040
Here is what it says.

00:00:08.040 --> 00:00:11.490
You can create a release to
packet software along with

00:00:11.490 --> 00:00:13.800
the release notes and links to

00:00:13.800 --> 00:00:17.270
binary files for
other people to use.

00:00:17.270 --> 00:00:19.220
This call, you are
going to provide

00:00:19.220 --> 00:00:22.565
some technical documentation
about your release.

00:00:22.565 --> 00:00:24.350
So you'd want to list down

00:00:24.350 --> 00:00:26.780
all the changes that are
part of the new release.

00:00:26.780 --> 00:00:31.550
The installation steps,
binaries are executables, etc.

00:00:31.550 --> 00:00:33.830
You'd put all such
information as part of

00:00:33.830 --> 00:00:36.380
the release notes to
help your customers or

00:00:36.380 --> 00:00:38.750
the end-users
understand everything

00:00:38.750 --> 00:00:42.200
about the new release
that they need to know.

00:00:42.200 --> 00:00:44.735
So let's go ahead
and try to create

00:00:44.735 --> 00:00:46.924
a new release on GitHub.

00:00:46.924 --> 00:00:49.190
And by the way, your
organization might be using

00:00:49.190 --> 00:00:52.565
some other tool to
document the release.

00:00:52.565 --> 00:00:54.710
If you do not have
any such tool,

00:00:54.710 --> 00:00:58.050
we can use GitHub for the same.

00:00:58.960 --> 00:01:04.145
We can associate a tag
for a particular release.

00:01:04.145 --> 00:01:07.580
We can choose one of the
existing ones for instance.

00:01:07.580 --> 00:01:09.860
Or we can go ahead
and create a new tag.

00:01:09.860 --> 00:01:11.300
And that's how you're
going to create

00:01:11.300 --> 00:01:13.910
a new tag on GitHub.

00:01:13.910 --> 00:01:18.860
For example, maybe
you can say we one

00:01:18.860 --> 00:01:23.990
dot 0 dot two, or whatsoever.

00:01:23.990 --> 00:01:26.705
At the moment we do not
have any new changes.

00:01:26.705 --> 00:01:28.610
It doesn't make sense
for us to increase

00:01:28.610 --> 00:01:31.280
the version of our software.

00:01:31.280 --> 00:01:32.960
Instead, we're going to just

00:01:32.960 --> 00:01:35.510
use one of the existing tags.

00:01:35.510 --> 00:01:37.190
Like so.

00:01:37.190 --> 00:01:39.770
We're going to give it a name.

00:01:39.770 --> 00:01:46.460
Release V, one dot o
dot o for instance.

00:01:46.460 --> 00:01:53.420
Here. Your bicycle take

00:01:53.420 --> 00:01:57.260
some time to document
everything about the release.

00:01:57.260 --> 00:01:58.640
So maybe you'd list on

00:01:58.640 --> 00:02:00.305
all the issues that
were addressed,

00:02:00.305 --> 00:02:02.540
all the new features
that were introduced.

00:02:02.540 --> 00:02:04.790
If there are any
deprecated features,

00:02:04.790 --> 00:02:06.710
you'd want to list them as well.

00:02:06.710 --> 00:02:08.675
Maybe some installation steps,

00:02:08.675 --> 00:02:11.210
downloadable,
executable, It's etc.

00:02:11.210 --> 00:02:13.100
You'd put everything
that you want

00:02:13.100 --> 00:02:16.505
your end user to see and
understand about the release.

00:02:16.505 --> 00:02:18.845
And once you're done with that,

00:02:18.845 --> 00:02:23.510
you would go ahead and
publish the release.

00:02:23.510 --> 00:02:27.260
And this is how it looks.

00:02:27.260 --> 00:02:29.360
Obviously we haven't
populated this

00:02:29.360 --> 00:02:35.330
enough to really see
anything significant.

00:02:35.330 --> 00:02:39.540
But this is released for you.

00:02:40.060 --> 00:02:42.380
The customers can go through

00:02:42.380 --> 00:02:44.465
all the description
about the release.

00:02:44.465 --> 00:02:48.605
And guitar bass automatically
uploaded the source code.

00:02:48.605 --> 00:02:53.100
Would somebody can download
if they wanted to.

00:02:53.110 --> 00:02:57.780
So that's about it.
I'll see you next.
