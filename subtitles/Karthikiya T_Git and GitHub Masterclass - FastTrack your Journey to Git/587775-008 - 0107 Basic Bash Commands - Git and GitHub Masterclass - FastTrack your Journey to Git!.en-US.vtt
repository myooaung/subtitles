WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.380 --> 00:00:02.430
Let's take a look at some of the

00:00:02.430 --> 00:00:04.080
basic commands we can run on

00:00:04.080 --> 00:00:07.395
Git Bash to interact with
the Windows file system.

00:00:07.395 --> 00:00:10.800
Now, if you're coming from
a Unix or Linux background,

00:00:10.800 --> 00:00:13.230
you probably know
all these commands.

00:00:13.230 --> 00:00:14.850
Feel free to skip the video.

00:00:14.850 --> 00:00:17.220
You don't have to watch
the rest of the lecture.

00:00:17.220 --> 00:00:18.900
And for others you might be

00:00:18.900 --> 00:00:21.240
wondering why do we
have these commands?

00:00:21.240 --> 00:00:25.214
Well, on Windows,
we create folders.

00:00:25.214 --> 00:00:29.155
Take a look at what's inside
it, or delete folders.

00:00:29.155 --> 00:00:32.885
We do that graphically
that Windows provides us.

00:00:32.885 --> 00:00:36.230
However, if you want to do
the same from Git Bash,

00:00:36.230 --> 00:00:38.645
we need to use these
commands because

00:00:38.645 --> 00:00:41.419
Git Bash doesn't come with
a graphical user interface.

00:00:41.419 --> 00:00:43.550
Now you might be having
another question.

00:00:43.550 --> 00:00:45.860
Why do we need to interact
with the file system using

00:00:45.860 --> 00:00:49.790
these commands when we can
do the same on Windows?

00:00:49.790 --> 00:00:52.610
Well, the answer is, you
can do it either way.

00:00:52.610 --> 00:00:54.515
But if you learn these commands,

00:00:54.515 --> 00:00:56.825
it might be helpful
to you in the future.

00:00:56.825 --> 00:00:58.400
For example, if you were to work

00:00:58.400 --> 00:01:00.410
on Linux operating system,

00:01:00.410 --> 00:01:02.600
you don't have Windows OS there.

00:01:02.600 --> 00:01:04.370
You have to interact
with the file system

00:01:04.370 --> 00:01:05.930
using these commands.

00:01:05.930 --> 00:01:09.095
And these commands are not
difficult to learn either.

00:01:09.095 --> 00:01:11.420
They're actually pretty
self-explanatory.

00:01:11.420 --> 00:01:15.305
For example, we have MKDIR
stands for make directory.

00:01:15.305 --> 00:01:17.450
And as the name suggests,

00:01:17.450 --> 00:01:20.495
it will help you create
a directory or a folder.

00:01:20.495 --> 00:01:23.749
And then we have CD stands
for change directory.

00:01:23.749 --> 00:01:25.070
It will help you change from

00:01:25.070 --> 00:01:27.169
one directory to
other directory.

00:01:27.169 --> 00:01:29.240
And this is the
command we use to

00:01:29.240 --> 00:01:31.550
navigate within the file system.

00:01:31.550 --> 00:01:33.470
And then we have PWD stands

00:01:33.470 --> 00:01:35.300
for present working directory,

00:01:35.300 --> 00:01:38.240
which will just print the
dietary on which we're

00:01:38.240 --> 00:01:41.135
currently at while
working on Git Bash.

00:01:41.135 --> 00:01:43.895
If you ever wonder on which
directory you're working in,

00:01:43.895 --> 00:01:46.175
then this is the command to run.

00:01:46.175 --> 00:01:49.595
And then we have Ls
stands for list.

00:01:49.595 --> 00:01:50.900
And this would just list down

00:01:50.900 --> 00:01:53.240
all the files in a
particular directory.

00:01:53.240 --> 00:01:56.225
This command combined
with option hyphen a,

00:01:56.225 --> 00:01:57.905
list down all the files,

00:01:57.905 --> 00:01:59.900
including the hidden files.

00:01:59.900 --> 00:02:03.680
And then finally, we have
our M stands for remove.

00:02:03.680 --> 00:02:05.270
And as you might be guessing,

00:02:05.270 --> 00:02:08.015
this will help us delete
a folder or a file.

00:02:08.015 --> 00:02:09.770
Now, some of these
commands would

00:02:09.770 --> 00:02:11.525
go with certain options.

00:02:11.525 --> 00:02:14.460
We'll explore them
in just a while.

00:02:14.980 --> 00:02:18.605
I've created a test folder
for the sake of this lecture.

00:02:18.605 --> 00:02:20.090
And this is where we're going to

00:02:20.090 --> 00:02:22.370
experiment with all
those commands.

00:02:22.370 --> 00:02:25.355
First of all, let
us launch Git Bash.

00:02:25.355 --> 00:02:26.840
You can launch Git Bash

00:02:26.840 --> 00:02:28.565
either from the Start menu

00:02:28.565 --> 00:02:30.530
or you can just
simply right-click

00:02:30.530 --> 00:02:33.095
and click on Git Bash here,

00:02:33.095 --> 00:02:36.449
this would launch Git Bash
in the current directory.

00:02:36.870 --> 00:02:38.890
You're going to see a screen

00:02:38.890 --> 00:02:40.435
that looks something like this.

00:02:40.435 --> 00:02:43.540
Let us start off by
creating a new folder.

00:02:43.540 --> 00:02:46.045
So it gets the command
that I need to use.

00:02:46.045 --> 00:02:49.450
It's MKDIR stands
for make directory.

00:02:49.450 --> 00:02:52.090
And I'm going to provide
the name of the folder

00:02:52.090 --> 00:02:55.150
or the directory that
I wanted to create.

00:02:55.150 --> 00:02:59.320
Let's call it my
app or whatever.

00:02:59.320 --> 00:03:02.530
So this has created a new
directory in order to make

00:03:02.530 --> 00:03:05.710
sure that it has indeed
created a directory.

00:03:05.710 --> 00:03:08.290
Let us run the command ls to

00:03:08.290 --> 00:03:11.215
list down all the files
in the current directory.

00:03:11.215 --> 00:03:13.420
And sure enough we
see the directory

00:03:13.420 --> 00:03:15.324
that we just created.

00:03:15.324 --> 00:03:18.190
We can also append
an option hyphen

00:03:18.190 --> 00:03:20.810
a to list down all the files,

00:03:20.810 --> 00:03:22.355
including the hidden files.

00:03:22.355 --> 00:03:24.590
But at the moment,
in this territory,

00:03:24.590 --> 00:03:26.750
we don't have any
hidden files to show.

00:03:26.750 --> 00:03:29.300
But this command will
come in handy in future,

00:03:29.300 --> 00:03:31.295
especially when we
want to explore

00:03:31.295 --> 00:03:34.505
the gift directory,
which has hidden.

00:03:34.505 --> 00:03:37.715
Now let us get inside
the app directory.

00:03:37.715 --> 00:03:38.900
How do I do that?

00:03:38.900 --> 00:03:43.325
Because the command cd
to change the directory.

00:03:43.325 --> 00:03:46.160
And I wanted to mention
that directory,

00:03:46.160 --> 00:03:50.765
hit Enter and we're currently
inside the MyApp directory.

00:03:50.765 --> 00:03:53.435
To make sure that we're
inside this directory.

00:03:53.435 --> 00:03:54.815
Let us run the command

00:03:54.815 --> 00:03:58.745
PWD to check the present
working directory,

00:03:58.745 --> 00:04:02.285
and this would print
my app directory.

00:04:02.285 --> 00:04:06.860
Now let us go to the parent
directory of my app.

00:04:06.860 --> 00:04:08.510
So how do I do that?

00:04:08.510 --> 00:04:13.970
We do cd space, dot dot slash.

00:04:13.970 --> 00:04:16.384
If you want to go to
grandparent directory,

00:04:16.384 --> 00:04:19.325
then you just have one
more dot dot slash.

00:04:19.325 --> 00:04:21.710
And that will do the trick.

00:04:21.710 --> 00:04:26.610
However, I just would like to
go to the parent directory.

00:04:26.650 --> 00:04:31.790
Now let's do ls command to
list down all the files.

00:04:31.790 --> 00:04:34.325
Now let's say I want
to delete this folder,

00:04:34.325 --> 00:04:36.545
gets the command, it's RM,

00:04:36.545 --> 00:04:38.690
and the name of the folder.

00:04:38.690 --> 00:04:41.704
But this is not going
to delete the folder.

00:04:41.704 --> 00:04:44.585
Well, it doesn't
delete the folder

00:04:44.585 --> 00:04:48.260
because this user doesn't have
the permission to do that.

00:04:48.260 --> 00:04:51.605
Or this folder might
be having files in it.

00:04:51.605 --> 00:04:54.680
And it is asking us to
delete those files first.

00:04:54.680 --> 00:04:58.490
Only then will it allow
us to delete this folder?

00:04:58.490 --> 00:05:00.350
However, we know that

00:05:00.350 --> 00:05:02.495
this folder doesn't
have any files in it.

00:05:02.495 --> 00:05:04.895
So it has to be
the other reason.

00:05:04.895 --> 00:05:06.725
In order to work around this,

00:05:06.725 --> 00:05:10.535
we have to include an option
along with the RM command,

00:05:10.535 --> 00:05:13.250
and that is hyphen r,

00:05:13.250 --> 00:05:17.869
f. R stands for recursive
and F stands for force.

00:05:17.869 --> 00:05:20.720
Recursive would mean
that we are saying,

00:05:20.720 --> 00:05:23.450
not only do we want to
delete this folder,

00:05:23.450 --> 00:05:25.970
but also all the files in it?

00:05:25.970 --> 00:05:28.355
And effort mean force.

00:05:28.355 --> 00:05:30.320
In other words, we
want to force delete

00:05:30.320 --> 00:05:33.815
the folder regardless
of the permissions.

00:05:33.815 --> 00:05:36.590
I'm going to specify
the name of the folder.

00:05:36.590 --> 00:05:41.150
And this time it does
delete the folder.

00:05:41.150 --> 00:05:43.250
If we do ls now,

00:05:43.250 --> 00:05:46.714
it doesn't show that
folder anymore.

00:05:46.714 --> 00:05:49.910
So take five to ten
minutes and try to

00:05:49.910 --> 00:05:52.595
experiment and play
with these commands.

00:05:52.595 --> 00:05:54.770
Basically just try
to create folders,

00:05:54.770 --> 00:05:56.570
delete folders, take
a look at what's

00:05:56.570 --> 00:05:59.910
inside the folders, etc.
