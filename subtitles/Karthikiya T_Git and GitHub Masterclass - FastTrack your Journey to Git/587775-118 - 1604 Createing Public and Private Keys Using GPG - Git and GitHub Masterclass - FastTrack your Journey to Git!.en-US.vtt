WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.060 --> 00:00:02.290
Okay, let's see
how we can create

00:00:02.290 --> 00:00:03.820
public and private keys.

00:00:03.820 --> 00:00:06.490
Now assume that this is
Mr. Luke's computer,

00:00:06.490 --> 00:00:07.960
and he's now planning to

00:00:07.960 --> 00:00:09.550
create public and
private keys for

00:00:09.550 --> 00:00:11.380
himself so they can be used

00:00:11.380 --> 00:00:13.885
at later point in time
for verification.

00:00:13.885 --> 00:00:15.655
To create those keys,

00:00:15.655 --> 00:00:18.025
we are going to be using
a tool called GPG,

00:00:18.025 --> 00:00:19.945
stands for GNU Privacy guard.

00:00:19.945 --> 00:00:21.460
And it is something
that you don't

00:00:21.460 --> 00:00:22.915
have to install separately.

00:00:22.915 --> 00:00:24.640
If you already have
Git installed on

00:00:24.640 --> 00:00:26.350
your computer and get to already

00:00:26.350 --> 00:00:28.405
comes bundled with GPG tool.

00:00:28.405 --> 00:00:31.075
And you don't have to
install it separately.

00:00:31.075 --> 00:00:33.490
In case if you're
not using Git Bash,

00:00:33.490 --> 00:00:35.710
than with a quick Google search,

00:00:35.710 --> 00:00:37.720
you should be able to find
instructions on how to

00:00:37.720 --> 00:00:40.675
install GPG for your
operating system.

00:00:40.675 --> 00:00:42.340
However, in this case,
we're going to be

00:00:42.340 --> 00:00:44.570
using Git Bash for the same.

00:00:44.570 --> 00:00:46.940
And also make sure
that you don't run

00:00:46.940 --> 00:00:49.445
these commands on the
repository folder.

00:00:49.445 --> 00:00:52.700
For this purpose, I've actually
created a new folder on

00:00:52.700 --> 00:00:54.200
my desktop and this

00:00:54.200 --> 00:00:56.224
is where I'm going
to run the commands.

00:00:56.224 --> 00:01:00.035
So first of all, let us make
sure that GPG is indeed

00:01:00.035 --> 00:01:05.390
installed by running the
command GPG dash dash version.

00:01:05.390 --> 00:01:08.630
And this should show
an output like this.

00:01:08.630 --> 00:01:10.580
Now let's run the
command to create

00:01:10.580 --> 00:01:13.835
the public and private
keys for Mr. Luke.

00:01:13.835 --> 00:01:16.940
The command for
that is GPG, dash,

00:01:16.940 --> 00:01:22.535
dash, dash, generate key.

00:01:22.535 --> 00:01:25.700
This is going to prompt
us with few questions.

00:01:25.700 --> 00:01:28.010
Let's see what we
can answer them.

00:01:28.010 --> 00:01:30.260
Here we need to choose
the algorithm we want to

00:01:30.260 --> 00:01:32.345
use to generate the keys.

00:01:32.345 --> 00:01:36.680
Gpt supports all these
algorithms that are listed here.

00:01:36.680 --> 00:01:39.799
The default one
is RSA algorithm,

00:01:39.799 --> 00:01:43.325
and it is the algorithm
that I recommend to use.

00:01:43.325 --> 00:01:45.290
So I'm just simply going to hit

00:01:45.290 --> 00:01:47.690
Enter to choose the
default option,

00:01:47.690 --> 00:01:50.510
which in this case
is RSA algorithm.

00:01:50.510 --> 00:01:54.140
Next, we were prompted
to enter the key size.

00:01:54.140 --> 00:01:58.685
The maximum key size we
can enter is 4,096 bits.

00:01:58.685 --> 00:02:01.610
And this is the minimum
requirement for GitHub.

00:02:01.610 --> 00:02:07.250
So we're going to say
4,096. Hit Enter.

00:02:07.250 --> 00:02:08.960
Here it is asking us to

00:02:08.960 --> 00:02:12.080
enter how long the
case should be valid.

00:02:12.080 --> 00:02:14.960
I want it to be valid forever.

00:02:14.960 --> 00:02:17.960
I'm going to leave the
default option, which is 0.

00:02:17.960 --> 00:02:20.090
So k would never expire.

00:02:20.090 --> 00:02:22.370
And we should be able
to use these keys

00:02:22.370 --> 00:02:24.050
forever till the time we

00:02:24.050 --> 00:02:26.210
delete them or do
something with them.

00:02:26.210 --> 00:02:29.600
Let's hit Enter to use
the default option.

00:02:29.600 --> 00:02:32.630
Now it is asking us
to conform if we

00:02:32.630 --> 00:02:35.900
really intend to not
expired the key at all,

00:02:35.900 --> 00:02:40.265
I would type in y, just
say yes, hit Enter.

00:02:40.265 --> 00:02:43.490
Now it is asking us
to enter the User ID.

00:02:43.490 --> 00:02:44.375
Here.

00:02:44.375 --> 00:02:45.635
I'm going to provide

00:02:45.635 --> 00:02:48.905
the username of Mr.
Luke's GitHub account.

00:02:48.905 --> 00:02:50.360
I already have it handy.

00:02:50.360 --> 00:02:53.240
I'm just simply going
to copy paste it here.

00:02:53.240 --> 00:02:55.310
And of course, in your case,

00:02:55.310 --> 00:02:58.655
you need to enter
your GitHub username.

00:02:58.655 --> 00:03:00.470
In the next prompt, I'm going to

00:03:00.470 --> 00:03:02.900
provide Luke's email address.

00:03:02.900 --> 00:03:04.460
In your case, you
want to provide

00:03:04.460 --> 00:03:09.060
your email address that you
used to register for GitHub.

00:03:09.850 --> 00:03:13.100
So essentially what are the
name and email address you

00:03:13.100 --> 00:03:15.650
want to use to
make your commits?

00:03:15.650 --> 00:03:18.395
It should provide
them over here.

00:03:18.395 --> 00:03:21.305
We can optionally also
provide a comment,

00:03:21.305 --> 00:03:23.465
but I don't like to
provide anything.

00:03:23.465 --> 00:03:25.325
So I just hit Enter.

00:03:25.325 --> 00:03:27.200
Now it is asking us to verify

00:03:27.200 --> 00:03:29.660
the user ID that
we've just entered.

00:03:29.660 --> 00:03:33.560
So double-check and make
sure that it is correct.

00:03:33.560 --> 00:03:35.510
Once your shirt off it,

00:03:35.510 --> 00:03:38.930
just enter the
character o to say L

00:03:38.930 --> 00:03:45.330
K. Keys are being generated.

00:03:45.760 --> 00:03:48.365
Now you might get a prompt

00:03:48.365 --> 00:03:50.690
asking you to enter
the passphrase.

00:03:50.690 --> 00:03:52.970
This is just an
additional security

00:03:52.970 --> 00:03:54.845
to protect your private key.

00:03:54.845 --> 00:03:57.470
If somebody were to
steal your private key,

00:03:57.470 --> 00:03:59.930
they should be able to
know this passphrase

00:03:59.930 --> 00:04:02.150
to be able to use
your private key.

00:04:02.150 --> 00:04:05.240
This is just as an
additional security measure.

00:04:05.240 --> 00:04:08.885
You can just simply press OK
without entering anything.

00:04:08.885 --> 00:04:11.510
That way, you do not
have any passphrase.

00:04:11.510 --> 00:04:13.850
However, it's
obviously recommended

00:04:13.850 --> 00:04:16.070
that you provide a passphrase.

00:04:16.070 --> 00:04:19.400
In my case, I'm just simply
entering for cactus,

00:04:19.400 --> 00:04:21.275
which is not so secure.

00:04:21.275 --> 00:04:23.135
If you want it more secure,

00:04:23.135 --> 00:04:25.820
then give a very
strong passphrase with

00:04:25.820 --> 00:04:29.300
combination of characters,
numbers, symbols, etc.

00:04:29.300 --> 00:04:31.610
And my guess is just going to be

00:04:31.610 --> 00:04:35.809
four characters. It okay?

00:04:35.809 --> 00:04:39.200
You get another prompt warning

00:04:39.200 --> 00:04:42.095
you that the password
is not very secure,

00:04:42.095 --> 00:04:44.360
as it is very easy to guess.

00:04:44.360 --> 00:04:47.240
But I'd like to use
that one anyway.

00:04:47.240 --> 00:04:52.620
So I choose this option that
says take this one anyway.

00:04:54.460 --> 00:04:58.385
It is asking me to
re-enter the passphrase.

00:04:58.385 --> 00:05:01.620
I'm going to do just
that and hit Okay.

00:05:02.830 --> 00:05:06.620
Now, while the key
is being generated,

00:05:06.620 --> 00:05:08.990
it is recommended
that you perform

00:05:08.990 --> 00:05:11.735
some activities on your
computer like moving the mouse,

00:05:11.735 --> 00:05:14.420
are entering something
on keyboard, et cetera.

00:05:14.420 --> 00:05:17.360
And that's what is
being recommended here.

00:05:17.360 --> 00:05:21.530
It says, we need to generate
a lot of random bytes.

00:05:21.530 --> 00:05:23.720
It is a good idea to perform

00:05:23.720 --> 00:05:27.935
some other actions like
typing on the keyboard,

00:05:27.935 --> 00:05:31.460
moving the mouse,
utilize that, this, etc.

00:05:31.460 --> 00:05:36.299
So that the key that gets
generated is more random.

00:05:36.610 --> 00:05:40.100
So both are keys were generated.

00:05:40.100 --> 00:05:43.280
You can verify if they
got generated by running

00:05:43.280 --> 00:05:46.430
the GPG command with
the list case option.

00:05:46.430 --> 00:05:48.860
So I'm going to say GPG dash,

00:05:48.860 --> 00:05:53.030
dash, list, dash keys.

00:05:53.030 --> 00:05:57.125
So this has shown
the public key.

00:05:57.125 --> 00:06:01.650
And if you say list dash,

00:06:02.530 --> 00:06:05.990
secret case, this is

00:06:05.990 --> 00:06:08.960
going to display the details
about the private key.

00:06:08.960 --> 00:06:11.090
These are not the actual case.

00:06:11.090 --> 00:06:13.475
These are just the
details about the keys.

00:06:13.475 --> 00:06:18.480
This will come in handy in
just a bit. I'll see you next.
