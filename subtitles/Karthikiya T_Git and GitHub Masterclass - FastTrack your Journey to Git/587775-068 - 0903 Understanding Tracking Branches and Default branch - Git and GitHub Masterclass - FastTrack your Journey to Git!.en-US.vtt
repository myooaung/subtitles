WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.410 --> 00:00:03.870
Let's talk about
tracking branches.

00:00:03.870 --> 00:00:06.000
Imagine that this is
the current state

00:00:06.000 --> 00:00:07.815
of our project in GitHub.

00:00:07.815 --> 00:00:09.480
And now let's say
that I have run

00:00:09.480 --> 00:00:11.310
the git clone command to clone

00:00:11.310 --> 00:00:13.455
the project into
my local computer.

00:00:13.455 --> 00:00:15.360
Now, this is what is
going to happen in

00:00:15.360 --> 00:00:18.255
my local computer in
no particular order.

00:00:18.255 --> 00:00:21.540
Initially all the objects
would be downloaded and

00:00:21.540 --> 00:00:25.005
then get will create
so-called tracking branches.

00:00:25.005 --> 00:00:26.970
Now what is the tracking branch?

00:00:26.970 --> 00:00:29.055
Tracking branches,
a local branch

00:00:29.055 --> 00:00:31.199
that represents a remote branch.

00:00:31.199 --> 00:00:34.125
And it would always point
to the exact same commit.

00:00:34.125 --> 00:00:36.780
The remote branches
are pointing to there

00:00:36.780 --> 00:00:39.700
just representing
the remote branches.

00:00:39.700 --> 00:00:41.720
Just to recall, a branch is

00:00:41.720 --> 00:00:44.090
simply a pointer to
a specific commit.

00:00:44.090 --> 00:00:45.845
Now, these tracking branches

00:00:45.845 --> 00:00:47.810
won't be updated automatically.

00:00:47.810 --> 00:00:50.060
They will be updated
whenever we run

00:00:50.060 --> 00:00:53.090
certain commands like
git-fetch and git pull,

00:00:53.090 --> 00:00:56.030
which we're going to talk
about in coming lectures.

00:00:56.030 --> 00:00:59.525
And then by default
with clone operation,

00:00:59.525 --> 00:01:02.150
git checkout to the
default branch,

00:01:02.150 --> 00:01:04.279
which is the main branch.

00:01:04.279 --> 00:01:08.180
And so a local Min branch would
be created automatically.

00:01:08.180 --> 00:01:09.890
We can actually configure

00:01:09.890 --> 00:01:11.675
the default branch
in our GitHub,

00:01:11.675 --> 00:01:14.345
will explode that in
upcoming lectures.

00:01:14.345 --> 00:01:16.880
If you remember in
our previous lecture,

00:01:16.880 --> 00:01:19.055
when we run the
command git branch,

00:01:19.055 --> 00:01:21.215
it has listed just
the main branch,

00:01:21.215 --> 00:01:22.595
but not the feature branch.

00:01:22.595 --> 00:01:24.290
Well, this is the
reason for that.

00:01:24.290 --> 00:01:27.080
If you want to be able to see
the feature branch as well,

00:01:27.080 --> 00:01:29.540
we have to check out
to that branch so that

00:01:29.540 --> 00:01:31.730
a local feature branch
would be created

00:01:31.730 --> 00:01:34.490
by good and would
be able to see it.

00:01:34.490 --> 00:01:36.800
Now let's say that I've
made a commit local in

00:01:36.800 --> 00:01:38.975
the main branch like cell,

00:01:38.975 --> 00:01:41.840
the tracking branch
would remain as is,

00:01:41.840 --> 00:01:43.460
because that's what
even the remote

00:01:43.460 --> 00:01:45.590
main branch is pointing to.

00:01:45.590 --> 00:01:48.500
But the local main branch
would be updated to

00:01:48.500 --> 00:01:51.485
point to the latest commit
in our local machine.

00:01:51.485 --> 00:01:53.750
You'll understand the
significance of tracking

00:01:53.750 --> 00:01:56.765
branches when we explore
commands like git-fetch,

00:01:56.765 --> 00:01:59.285
git, pull, git push, et cetera.

00:01:59.285 --> 00:02:01.220
Another thing you
might have noticed is

00:02:01.220 --> 00:02:03.080
that all these
tracking branches are

00:02:03.080 --> 00:02:07.505
named as origin slash
main or origins feature.

00:02:07.505 --> 00:02:09.725
Well, what is origin here?

00:02:09.725 --> 00:02:11.960
It is essentially the
earliest created by

00:02:11.960 --> 00:02:15.035
get that represents
the remote repository.

00:02:15.035 --> 00:02:17.254
Basically whenever
we run commands,

00:02:17.254 --> 00:02:20.690
winter provide the URL of
the remote repository.

00:02:20.690 --> 00:02:23.135
It's really hard to
remember the URL.

00:02:23.135 --> 00:02:25.865
And that's why we have
this LES created.

00:02:25.865 --> 00:02:28.175
So that instead
of using the URL,

00:02:28.175 --> 00:02:29.510
we could just use this name.

00:02:29.510 --> 00:02:30.320
Instead.

00:02:30.320 --> 00:02:32.645
We can change this
name if we wish,

00:02:32.645 --> 00:02:34.610
or we can keep it as it is.

00:02:34.610 --> 00:02:36.380
We're going to talk more of it

00:02:36.380 --> 00:02:38.300
in upcoming lectures for sure.

00:02:38.300 --> 00:02:40.350
See you next.
