WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.230 --> 00:00:02.625
Currently we have
feature one branch

00:00:02.625 --> 00:00:04.200
which was created locally,

00:00:04.200 --> 00:00:06.795
and we've even made
bunch of comments in it.

00:00:06.795 --> 00:00:08.490
Now let's see how we can push

00:00:08.490 --> 00:00:11.355
all these commits to
the remote repository.

00:00:11.355 --> 00:00:13.800
But before you do anything,

00:00:13.800 --> 00:00:16.170
this is very important.

00:00:16.170 --> 00:00:19.635
You need to make
sure that you pull

00:00:19.635 --> 00:00:23.295
all the changes from the
repository and rebase,

00:00:23.295 --> 00:00:24.930
whichever the brand
that you want to

00:00:24.930 --> 00:00:26.880
merge your feature
one branch into.

00:00:26.880 --> 00:00:29.620
You'd want to pull all the
changes of that branch

00:00:29.620 --> 00:00:33.230
and rebuild your feature
one branch to that branch.

00:00:33.230 --> 00:00:35.855
So that will have a
linear commit history.

00:00:35.855 --> 00:00:38.570
And if you come across with
any kind of conflicts,

00:00:38.570 --> 00:00:40.310
Kindly resolve them so

00:00:40.310 --> 00:00:41.900
that you do not have
conflicts when you

00:00:41.900 --> 00:00:44.090
actually push all
your changes or

00:00:44.090 --> 00:00:46.819
upload all your changes
to the remote repository.

00:00:46.819 --> 00:00:48.470
We've already seen
how this can be

00:00:48.470 --> 00:00:51.260
done in our previous chapter.

00:00:51.260 --> 00:00:54.110
In our case though,
the main branch

00:00:54.110 --> 00:00:56.210
and the feature on
branch haven't divulged.

00:00:56.210 --> 00:00:59.284
It doesn't make sense for
me to actually rebase.

00:00:59.284 --> 00:01:00.980
Now let's see how we can push

00:01:00.980 --> 00:01:04.250
our changes to the
remote repository.

00:01:04.250 --> 00:01:09.120
Let's first see how we can
do that from Git Bash.

00:01:09.160 --> 00:01:12.330
Let me clear the screen.

00:01:12.460 --> 00:01:16.560
So let us first go
into that directory.

00:01:17.320 --> 00:01:20.000
And I'm currently in
feature one branch,

00:01:20.000 --> 00:01:21.815
as you can see here.

00:01:21.815 --> 00:01:24.050
But it doesn't really matter for

00:01:24.050 --> 00:01:25.865
the command that
we're about to run.

00:01:25.865 --> 00:01:29.630
I'm going to say git
push and get this

00:01:29.630 --> 00:01:31.430
saying the current
branch feature one

00:01:31.430 --> 00:01:33.905
has no upstream branch.

00:01:33.905 --> 00:01:35.960
In other words, it is
saying that we do not

00:01:35.960 --> 00:01:37.670
have feature one branch in

00:01:37.670 --> 00:01:39.920
the remote repository to push

00:01:39.920 --> 00:01:43.175
the current branch and set
the remote as upstream.

00:01:43.175 --> 00:01:46.190
Use this particular command.

00:01:46.190 --> 00:01:50.810
So let me copy it
and paste it here.

00:01:50.810 --> 00:01:52.820
So this command
would essentially

00:01:52.820 --> 00:01:56.705
create one branch in
the remote repository,

00:01:56.705 --> 00:01:59.495
pushing all the commits
we have in this branch.

00:01:59.495 --> 00:02:01.670
Origin is the
remote we're using.

00:02:01.670 --> 00:02:03.425
If you want to use
some other remote,

00:02:03.425 --> 00:02:06.000
you can specify the name here.

00:02:06.370 --> 00:02:09.710
And this option will
actually allow us to

00:02:09.710 --> 00:02:12.410
create the branch in
the remote repository.

00:02:12.410 --> 00:02:14.060
This command will also create

00:02:14.060 --> 00:02:16.580
the track main branch and
all local depository for

00:02:16.580 --> 00:02:18.380
feature one branch representing

00:02:18.380 --> 00:02:20.930
the feature one branch in
the remote repository.

00:02:20.930 --> 00:02:23.940
Let's try running this command.

00:02:25.600 --> 00:02:28.460
Git has essentially compressed

00:02:28.460 --> 00:02:31.070
all the objects and

00:02:31.070 --> 00:02:34.145
has uploaded them to
the remote repository.

00:02:34.145 --> 00:02:36.389
And this is the URI

00:02:36.389 --> 00:02:39.460
that it has used to
push all our commits.

00:02:39.460 --> 00:02:41.170
In addition to that,

00:02:41.170 --> 00:02:45.160
it has also created a
tracking branch for us.

00:02:45.160 --> 00:02:47.890
And it is also suggesting us to

00:02:47.890 --> 00:02:50.289
create so-called a pull request.

00:02:50.289 --> 00:02:52.315
By going to this URL.

00:02:52.315 --> 00:02:54.400
We're going to talk
about pull requests

00:02:54.400 --> 00:02:56.035
in upcoming lectures.

00:02:56.035 --> 00:02:58.240
But for now let us go to

00:02:58.240 --> 00:03:01.870
GitHub repository and see

00:03:01.870 --> 00:03:04.760
if things got
reflected over there.

00:03:05.490 --> 00:03:08.020
Let me refresh this page.

00:03:08.020 --> 00:03:12.140
And now you see two branches.

00:03:13.440 --> 00:03:18.685
And we can even switch to
feature one branch like so.

00:03:18.685 --> 00:03:20.815
And you see for comets here,

00:03:20.815 --> 00:03:23.485
two of them belong
to main branch.

00:03:23.485 --> 00:03:25.990
And then there are a couple of

00:03:25.990 --> 00:03:28.855
comments in feature one branch.

00:03:28.855 --> 00:03:32.530
Let us actually quickly
make one more comment and

00:03:32.530 --> 00:03:36.340
see how we can push our changes
using Visual Studio code.

00:03:36.340 --> 00:03:40.614
So let me just simply add
one more line of code

00:03:40.614 --> 00:03:46.090
or text. Like so.

00:03:46.090 --> 00:03:51.470
I'm going to use the same
text as the commit message.

00:03:52.440 --> 00:04:00.440
Let me save this file
and commit our changes.

00:04:04.470 --> 00:04:08.750
So we've just made
one more commit.

00:04:09.570 --> 00:04:12.895
This time I'm going to
use Visual Studio Code

00:04:12.895 --> 00:04:14.980
to push our changes.

00:04:14.980 --> 00:04:18.350
You see this option, push.

00:04:18.750 --> 00:04:21.415
Since we have just one remote,

00:04:21.415 --> 00:04:23.665
which is the name origin.

00:04:23.665 --> 00:04:25.600
By default, this has

00:04:25.600 --> 00:04:28.135
pushed to that only remote
which is available.

00:04:28.135 --> 00:04:30.580
If you had configure
multiple remotes,

00:04:30.580 --> 00:04:32.680
then you'd get an option

00:04:32.680 --> 00:04:34.090
to choose that remote
where you want to

00:04:34.090 --> 00:04:38.500
push all this changes
into 1 second.

00:04:38.500 --> 00:04:41.320
Let's go back to get up.

00:04:41.320 --> 00:04:43.900
And if I refresh the page,

00:04:43.900 --> 00:04:47.080
you're going to see that
new commit as well.

00:04:47.080 --> 00:04:49.630
There might be instances
where you want to push

00:04:49.630 --> 00:04:52.524
changes belonging to
multiple branches.

00:04:52.524 --> 00:04:55.870
In which case, you can use

00:04:55.870 --> 00:05:01.750
the option to push

00:05:01.750 --> 00:05:04.660
all the changes belonging
to multiple branches.

00:05:04.660 --> 00:05:06.835
However, it is not recommended.

00:05:06.835 --> 00:05:09.865
It's always a good idea to
handle one branch at a time.

00:05:09.865 --> 00:05:12.010
I also should mention that the

00:05:12.010 --> 00:05:14.005
first time you tried
to push changes,

00:05:14.005 --> 00:05:15.715
you might actually get a prompt

00:05:15.715 --> 00:05:17.815
to login to your GitHub account.

00:05:17.815 --> 00:05:19.765
In my case, I didn't
get that brown

00:05:19.765 --> 00:05:22.570
because I've already
logged in previously.

00:05:22.570 --> 00:05:24.805
Let me show you what I mean.

00:05:24.805 --> 00:05:26.890
Let me open up
Credential Manager on

00:05:26.890 --> 00:05:29.840
Windows by searching
on the start menu.

00:05:32.410 --> 00:05:35.810
And if I go to
Windows credentials,

00:05:35.810 --> 00:05:39.110
you'll see one for GitHub.

00:05:39.110 --> 00:05:45.080
And this has stored the
credentials of Luke's account.

00:05:45.080 --> 00:05:46.910
That's because I
had already logged

00:05:46.910 --> 00:05:49.220
in and Windows is able to store

00:05:49.220 --> 00:05:51.080
all those credentials so

00:05:51.080 --> 00:05:53.195
that I don't have to
enter these credentials.

00:05:53.195 --> 00:05:54.530
Every time I tried to interact

00:05:54.530 --> 00:05:56.360
with the remote repository.

00:05:56.360 --> 00:06:00.590
In case if you see a 403
while running the command,

00:06:00.590 --> 00:06:03.560
then try removing
these credentials

00:06:03.560 --> 00:06:05.855
and then try to run the
command once again.

00:06:05.855 --> 00:06:08.375
So what you'll be prompted
to login once again,

00:06:08.375 --> 00:06:10.310
login and you should be good to

00:06:10.310 --> 00:06:15.545
go. Let me actually remove it.

00:06:15.545 --> 00:06:20.400
And let me try
pushing the changes.

00:06:21.400 --> 00:06:29.010
And as you can see, I got this
prompt for authentication.

00:06:32.680 --> 00:06:37.610
Let me go to Luke's
GitHub account,

00:06:37.610 --> 00:06:46.320
github.com, login slash device.

00:06:46.630 --> 00:06:49.625
Let me enter this code here.

00:06:49.625 --> 00:06:53.270
Control C and
control V, continue.

00:06:53.270 --> 00:06:56.640
And arthritis.

00:06:56.680 --> 00:07:08.210
Let's entered the bus food
device got authenticated.

00:07:08.210 --> 00:07:11.345
And of course, since we do
not have anything to push,

00:07:11.345 --> 00:07:14.850
regard this message saying
everything is up-to-date.

00:07:16.990 --> 00:07:19.550
But if you go back here,

00:07:19.550 --> 00:07:22.070
you're going to see
this entry once

00:07:22.070 --> 00:07:27.570
again. I'll see you next.
