WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.090 --> 00:00:03.100
Earlier we had created
a GitHub account

00:00:03.100 --> 00:00:05.845
with the name Centre Corp 1996.

00:00:05.845 --> 00:00:08.665
And we've also created
couple of repositories.

00:00:08.665 --> 00:00:11.800
One is public, the other
one is private repository.

00:00:11.800 --> 00:00:14.020
Or public repository
should be available

00:00:14.020 --> 00:00:16.495
for anybody in the
world to view,

00:00:16.495 --> 00:00:19.225
download, flown, et cetera.

00:00:19.225 --> 00:00:23.140
Now let's say that I found a
guy with the name Luke and I

00:00:23.140 --> 00:00:27.415
wanted him to contribute
to my public repository.

00:00:27.415 --> 00:00:30.880
Now imagine that I'm inside
the Luke's computer.

00:00:30.880 --> 00:00:32.710
What you need to first do

00:00:32.710 --> 00:00:35.320
is basically to have
GitHub account.

00:00:35.320 --> 00:00:39.670
So for this purpose,

00:00:39.670 --> 00:00:42.040
I have actually created
a new Gmail account

00:00:42.040 --> 00:00:44.600
with the name look
Centre Corp at

00:00:44.600 --> 00:00:46.760
the red gmail.com and its

00:00:46.760 --> 00:00:49.805
corresponding GitHub
account as well.

00:00:49.805 --> 00:00:51.950
So this is Luke's account and

00:00:51.950 --> 00:00:53.990
now he's preparing
himself to contribute

00:00:53.990 --> 00:00:58.625
to the cylinder cop
1996 public repository.

00:00:58.625 --> 00:01:01.385
This is the URL of
that repository.

00:01:01.385 --> 00:01:03.470
And I'm able to view
the project and

00:01:03.470 --> 00:01:06.140
its content because this
is public repository.

00:01:06.140 --> 00:01:08.315
If this is a private repository,

00:01:08.315 --> 00:01:10.895
then I won't be
able to view this.

00:01:10.895 --> 00:01:14.870
In fact, anybody with this
link should be able to view

00:01:14.870 --> 00:01:16.640
the project and its content

00:01:16.640 --> 00:01:19.235
because it is public repository.

00:01:19.235 --> 00:01:21.290
Now the first thing
that loop needs to

00:01:21.290 --> 00:01:24.125
do to start contributing
to this project

00:01:24.125 --> 00:01:26.510
is to have local copy of

00:01:26.510 --> 00:01:29.420
this repository in
his local computer.

00:01:29.420 --> 00:01:32.645
What I'm talking
about is git clone.

00:01:32.645 --> 00:01:34.205
And as the name suggests,

00:01:34.205 --> 00:01:36.830
it would essentially cloned
the center repository or

00:01:36.830 --> 00:01:39.995
the project into your
local enrollment.

00:01:39.995 --> 00:01:43.055
So you click on this
button that says code.

00:01:43.055 --> 00:01:46.144
And we have multiple ways
to clone the project.

00:01:46.144 --> 00:01:49.025
We can do it
through, get up CLI.

00:01:49.025 --> 00:01:51.755
Get up CLI is a tool
offered by GitHub.

00:01:51.755 --> 00:01:55.010
It's an open source tool
and it would essentially

00:01:55.010 --> 00:01:56.060
allow you to interact with

00:01:56.060 --> 00:01:58.925
GitHub from your
computers command line.

00:01:58.925 --> 00:02:02.075
But this tool is originally
meant to save some time,

00:02:02.075 --> 00:02:05.180
but this is not a
mandatory tool as such.

00:02:05.180 --> 00:02:07.715
The other option is to use SSH,

00:02:07.715 --> 00:02:10.310
which is a lengthy
procedure because for this,

00:02:10.310 --> 00:02:13.310
you have to create public
and private keys and

00:02:13.310 --> 00:02:16.700
then store the public key in
the repository, et cetera.

00:02:16.700 --> 00:02:20.615
Talking about SSH should be
a topic of another course.

00:02:20.615 --> 00:02:22.370
If you're using SSH,

00:02:22.370 --> 00:02:24.005
then you can go
with this option.

00:02:24.005 --> 00:02:26.585
If not, then we have
a better option.

00:02:26.585 --> 00:02:30.065
In fact, this is option
recommended by even GitHub,

00:02:30.065 --> 00:02:33.320
which is to use HTTPS protocol.

00:02:33.320 --> 00:02:35.540
This is best option amongst all

00:02:35.540 --> 00:02:37.850
these for two good reasons.

00:02:37.850 --> 00:02:40.370
Number one, typically firewalls

00:02:40.370 --> 00:02:43.115
do not tend to stop
as HTTPS traffic.

00:02:43.115 --> 00:02:45.860
So we have an advantage there.

00:02:45.860 --> 00:02:48.470
Secondly, it will also help
the credential helper off

00:02:48.470 --> 00:02:50.420
your operating
system to be able to

00:02:50.420 --> 00:02:53.030
cache or stored the passwords,

00:02:53.030 --> 00:02:56.870
which is not the case with
the other two options.

00:02:56.870 --> 00:02:58.940
This is simplest of all,

00:02:58.940 --> 00:03:01.280
and we can blindly go
with this and don't have

00:03:01.280 --> 00:03:04.640
to worry about SSH
or get up CLI.

00:03:04.640 --> 00:03:08.660
We also have the option
to download the project.

00:03:08.660 --> 00:03:10.490
Well, if you download
the project is not

00:03:10.490 --> 00:03:12.320
going to download the
historical data or

00:03:12.320 --> 00:03:14.600
the version history
is just going to

00:03:14.600 --> 00:03:17.465
download the files
in the project.

00:03:17.465 --> 00:03:20.075
We can also open this
with GitHub Desktop.

00:03:20.075 --> 00:03:22.445
If you have the GitHub
Desktop installed,

00:03:22.445 --> 00:03:24.800
you can open it up and
then you get to choose

00:03:24.800 --> 00:03:27.290
the folder where you want
to clone this project.

00:03:27.290 --> 00:03:30.004
Since we're not using
this tool at the moment,

00:03:30.004 --> 00:03:31.655
we can ignore this.

00:03:31.655 --> 00:03:33.320
So what we're going
to do is just

00:03:33.320 --> 00:03:36.230
simply copy this HTTPS link.

00:03:36.230 --> 00:03:38.180
This is the exact link,

00:03:38.180 --> 00:03:40.100
as you're seeing here,

00:03:40.100 --> 00:03:42.380
which is the link
to the repository,

00:03:42.380 --> 00:03:47.255
That's github.com slash
username of this repository,

00:03:47.255 --> 00:03:48.875
the owner of the repository,

00:03:48.875 --> 00:03:51.875
slash the name of the
repository itself,

00:03:51.875 --> 00:03:55.590
and then dot get extension.

00:03:56.170 --> 00:03:59.810
This is essentially
what is this?

00:03:59.810 --> 00:04:02.400
You are literally just copied.

00:04:02.890 --> 00:04:08.285
Once we have this link copied
inside our local computer,

00:04:08.285 --> 00:04:10.710
I'm inside def directory.

00:04:11.530 --> 00:04:14.640
Let me copy it again.

00:04:15.070 --> 00:04:18.665
You can't imagine that
this is Luke's computer.

00:04:18.665 --> 00:04:21.980
I'm going to use the
command git clone.

00:04:21.980 --> 00:04:25.940
And then you're going
to paste that URL.

00:04:25.940 --> 00:04:31.580
So here it says cloning
into this folder.

00:04:31.580 --> 00:04:35.000
Essentially it has created
folder with this name,

00:04:35.000 --> 00:04:39.830
which is the exact name
of the depository.

00:04:39.830 --> 00:04:43.070
And the contents of
it would constitute

00:04:43.070 --> 00:04:44.900
exactly the contents that we've

00:04:44.900 --> 00:04:47.600
seen in GitHub repository.

00:04:47.600 --> 00:04:49.430
And if you notice it has

00:04:49.430 --> 00:04:52.834
actually compressed
all the objects.

00:04:52.834 --> 00:04:55.640
Basically to make
it easy to transfer

00:04:55.640 --> 00:04:58.445
all the files over the Internet
to your local computer.

00:04:58.445 --> 00:05:03.125
And then finally, it has
extracted all the objects.

00:05:03.125 --> 00:05:08.255
A total of nine objects
have been received.

00:05:08.255 --> 00:05:13.320
Let's take a look at the
content inside that directory.

00:05:14.880 --> 00:05:17.710
So here's my public cap.

00:05:17.710 --> 00:05:20.635
Let me enlarge it a little bit.

00:05:20.635 --> 00:05:23.680
As you can see, we have
been put out dxdy as

00:05:23.680 --> 00:05:26.905
well as Read Me dot TXT file.

00:05:26.905 --> 00:05:29.470
Inside dot git folder.

00:05:29.470 --> 00:05:31.915
You're going to see
what we usually see.

00:05:31.915 --> 00:05:34.315
You might have observed
couple of things

00:05:34.315 --> 00:05:37.195
which might look strange to
you at this point in time.

00:05:37.195 --> 00:05:40.510
We're going to talk about
them in coming lectures.

00:05:40.510 --> 00:05:43.284
For example, we have
so-called remotes,

00:05:43.284 --> 00:05:44.680
which weren't available when we

00:05:44.680 --> 00:05:47.080
locally created the repository.

00:05:47.080 --> 00:05:50.545
We'll talk about them
in coming lectures.

00:05:50.545 --> 00:05:54.145
This is as you have created
a local depository,

00:05:54.145 --> 00:05:56.810
except this time, we have

00:05:56.810 --> 00:05:59.720
actually cloned an existing
repository from GitHub.

00:05:59.720 --> 00:06:01.460
If you were to
download the project,

00:06:01.460 --> 00:06:03.545
you're not going to see
the dot git folder.

00:06:03.545 --> 00:06:06.950
You would only see these
two project files.

00:06:06.950 --> 00:06:09.110
Now this is the reason why it is

00:06:09.110 --> 00:06:12.350
called distributed
version control system.

00:06:12.350 --> 00:06:14.960
You have a copy of the
entire repository along with

00:06:14.960 --> 00:06:17.855
its version history in
your local machine.

00:06:17.855 --> 00:06:19.670
And you also have
a copy of it in

00:06:19.670 --> 00:06:22.220
the centralized repository,
which is get up.

00:06:22.220 --> 00:06:24.170
And everybody in the
organization or in

00:06:24.170 --> 00:06:25.970
your company would be having

00:06:25.970 --> 00:06:27.935
a copy of the entire repository.

00:06:27.935 --> 00:06:29.750
If one were to go down,

00:06:29.750 --> 00:06:31.340
then you have other systems

00:06:31.340 --> 00:06:32.975
from where you can recover them.

00:06:32.975 --> 00:06:36.600
That's distributed version
control system for you.

00:06:36.820 --> 00:06:40.190
Let's go back to Git Bash.

00:06:40.190 --> 00:06:44.810
Now if I run the
command git branch,

00:06:44.810 --> 00:06:48.935
we need to first go
inside that directory.

00:06:48.935 --> 00:06:54.980
My public CAP, git branch.

00:06:54.980 --> 00:06:57.395
You're only going to
see the main branch,

00:06:57.395 --> 00:06:58.610
although we have created

00:06:58.610 --> 00:07:02.030
feature branch in the
centralized repository GitHub,

00:07:02.030 --> 00:07:04.220
here we're only
seeing main branch.

00:07:04.220 --> 00:07:06.500
Why is that? Well, you will

00:07:06.500 --> 00:07:09.899
find answer to it in
upcoming lectures.
