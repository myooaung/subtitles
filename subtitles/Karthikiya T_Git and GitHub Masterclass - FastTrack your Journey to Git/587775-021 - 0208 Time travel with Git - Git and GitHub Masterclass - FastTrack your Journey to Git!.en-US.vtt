WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.470 --> 00:00:04.335
Let's see how we can
time travel would get.

00:00:04.335 --> 00:00:08.325
I mean, it I'm going to prove
it to you in just a while.

00:00:08.325 --> 00:00:11.820
Let's say that you walk
down feature one and you

00:00:11.820 --> 00:00:13.260
commit all those changes as

00:00:13.260 --> 00:00:15.105
part of your very first commit.

00:00:15.105 --> 00:00:17.040
And let's assume that
all those changes

00:00:17.040 --> 00:00:19.455
went inside one dot TXT.

00:00:19.455 --> 00:00:21.330
And then your client says he

00:00:21.330 --> 00:00:23.730
needed another feature
in his application.

00:00:23.730 --> 00:00:27.030
So you want to take and work
on it, make another commit,

00:00:27.030 --> 00:00:28.860
and assume that all
those changes went

00:00:28.860 --> 00:00:31.320
inside to dot TXT file.

00:00:31.320 --> 00:00:34.665
Once again, your client comes
up with a creative idea.

00:00:34.665 --> 00:00:37.090
He needed one more feature
in his application.

00:00:37.090 --> 00:00:38.930
And once again, you work on

00:00:38.930 --> 00:00:41.165
that feature, make
another commit.

00:00:41.165 --> 00:00:43.145
And then let's say
that you've introduced

00:00:43.145 --> 00:00:44.720
three dot TXT where you have

00:00:44.720 --> 00:00:46.850
all those feature three changes.

00:00:46.850 --> 00:00:49.580
Now let's say for some
reason client has

00:00:49.580 --> 00:00:53.300
decided not to have feature
three for whatever reason.

00:00:53.300 --> 00:00:54.650
And that he wanted to go

00:00:54.650 --> 00:00:57.785
back to previous version
of this application.

00:00:57.785 --> 00:01:00.950
So how do you revert all
the feature three changes?

00:01:00.950 --> 00:01:03.395
Well, in this example,
it's quite easy.

00:01:03.395 --> 00:01:05.585
You just delete
three dot TXT file

00:01:05.585 --> 00:01:07.445
and then you make
another commit.

00:01:07.445 --> 00:01:11.345
However, as we discussed in
one of our previous chapters,

00:01:11.345 --> 00:01:12.830
diverting changes is not

00:01:12.830 --> 00:01:16.340
an easy job because in
real-world applications,

00:01:16.340 --> 00:01:17.660
you might be having changes

00:01:17.660 --> 00:01:19.745
scattered across multiple files.

00:01:19.745 --> 00:01:21.350
And it's really hard to revert

00:01:21.350 --> 00:01:24.245
all those changes without
messing things up.

00:01:24.245 --> 00:01:25.580
You might end up breaking

00:01:25.580 --> 00:01:28.130
features which are
working earlier.

00:01:28.130 --> 00:01:31.460
Fortunately with get
would be able to go back

00:01:31.460 --> 00:01:35.090
to previous working
copy of our project.

00:01:35.090 --> 00:01:37.265
Now I should also mention that

00:01:37.265 --> 00:01:39.545
whatever the approach
I'm going to talk about

00:01:39.545 --> 00:01:40.940
to go to previous version of

00:01:40.940 --> 00:01:44.374
the project is not actually
the recommended approach.

00:01:44.374 --> 00:01:46.835
The recommended approach
is to use branches,

00:01:46.835 --> 00:01:48.995
which we'll talk about
in next chapter.

00:01:48.995 --> 00:01:50.465
And in the next
chapter, you will also

00:01:50.465 --> 00:01:51.740
understand why this is

00:01:51.740 --> 00:01:55.430
not the recommended approach
to divert your changes.

00:01:55.430 --> 00:01:59.940
But for now, let's take a
look at this in action.
