WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.080 --> 00:00:04.275
Let us see what it means to
get initialized a project.

00:00:04.275 --> 00:00:06.450
In order to understand
this better,

00:00:06.450 --> 00:00:09.000
let us assume that I've got
a freelancing contract,

00:00:09.000 --> 00:00:12.180
whereas asked to create a web
application for my client.

00:00:12.180 --> 00:00:13.980
Inside my system, I've created

00:00:13.980 --> 00:00:16.485
this folder with
the name my app,

00:00:16.485 --> 00:00:19.320
inside which I'm going to
introduce all the files

00:00:19.320 --> 00:00:20.730
required to create

00:00:20.730 --> 00:00:23.640
a minimal working
application up and running.

00:00:23.640 --> 00:00:25.860
Now I could create
all those files

00:00:25.860 --> 00:00:27.675
using the new option here.

00:00:27.675 --> 00:00:29.700
But I'm actually
going to do it using

00:00:29.700 --> 00:00:32.400
Git Bash just so that

00:00:32.400 --> 00:00:35.685
you'll be familiar with
all those Linux commands.

00:00:35.685 --> 00:00:39.105
And the commands that I need
to use is called touch.

00:00:39.105 --> 00:00:42.385
And then I'm going to specify
the name of the file.

00:00:42.385 --> 00:00:44.990
For simplicity, I'm
just simply going to

00:00:44.990 --> 00:00:48.395
call it as one dot TXT.

00:00:48.395 --> 00:00:50.960
Now, obviously it doesn't
make sense to have

00:00:50.960 --> 00:00:53.765
a TXT file to write
the source code.

00:00:53.765 --> 00:00:55.970
But we're not really
interested in creating

00:00:55.970 --> 00:00:58.055
applications here
we want to learn,

00:00:58.055 --> 00:01:01.430
get into, make
certain assumptions.

00:01:01.430 --> 00:01:05.450
Similarly, I'm going to
create two rod dxdy.

00:01:05.450 --> 00:01:07.770
I got the name wrong.

00:01:08.980 --> 00:01:13.925
And three dot dx, dy.

00:01:13.925 --> 00:01:19.820
Let's rename this
to two dot TXT.

00:01:19.820 --> 00:01:22.520
So I've got all
these files created.

00:01:22.520 --> 00:01:24.020
But currently none of

00:01:24.020 --> 00:01:26.750
these files are actually
managed by Git.

00:01:26.750 --> 00:01:28.850
For instance, if I were to run

00:01:28.850 --> 00:01:31.160
the command git commit now,

00:01:31.160 --> 00:01:34.190
it's going to throw a
message saying not a Git

00:01:34.190 --> 00:01:38.480
repository or any of the
parent directory is.

00:01:38.480 --> 00:01:40.595
So we need to let it know

00:01:40.595 --> 00:01:42.545
that it needs to
manage your project.

00:01:42.545 --> 00:01:44.780
And the way you
tell it is by using

00:01:44.780 --> 00:01:51.245
a command git in it stands
for initialization.

00:01:51.245 --> 00:01:54.320
Once we get initialize
the project,

00:01:54.320 --> 00:01:57.410
we're essentially asking
get to setup a written,

00:01:57.410 --> 00:01:58.580
it needs to set up inside

00:01:58.580 --> 00:02:01.805
our project to now start
managing a project.

00:02:01.805 --> 00:02:04.490
I'll create versions
on we ask it to.

00:02:04.490 --> 00:02:06.935
And if you notice, it
has actually created

00:02:06.935 --> 00:02:10.475
a hidden folder with
the name dot get.

00:02:10.475 --> 00:02:12.215
This is where we have

00:02:12.215 --> 00:02:14.915
this staging area that
we've talked earlier.

00:02:14.915 --> 00:02:16.100
And this is where we have

00:02:16.100 --> 00:02:19.340
the object database that
were talked earlier.

00:02:19.340 --> 00:02:22.145
In case if you're not
able to see this folder,

00:02:22.145 --> 00:02:24.170
then you need to
enable the option

00:02:24.170 --> 00:02:26.315
to show the hidden
files and folders.

00:02:26.315 --> 00:02:29.270
Inside Windows, you need
to go to the View tab,

00:02:29.270 --> 00:02:31.190
click on Options,

00:02:31.190 --> 00:02:34.760
click on Change folder
and search options.

00:02:34.760 --> 00:02:37.580
And once again
inside the view tab,

00:02:37.580 --> 00:02:39.950
you should be able to
locate that option

00:02:39.950 --> 00:02:42.410
to enable or show
the hidden files.

00:02:42.410 --> 00:02:43.700
And here it is.

00:02:43.700 --> 00:02:45.980
Click on this option
that says show

00:02:45.980 --> 00:02:48.050
hidden files,
folders and drives.

00:02:48.050 --> 00:02:49.955
Hit Apply and Okay,

00:02:49.955 --> 00:02:53.765
and you should be able
to now find this folder.

00:02:53.765 --> 00:02:56.855
Let's take a look at
what's inside it.

00:02:56.855 --> 00:03:00.170
Now, obviously, it's not
really worth going deep

00:03:00.170 --> 00:03:03.110
and trying to understand
everything what's inside here.

00:03:03.110 --> 00:03:05.330
We will explore some of
these in the rest of

00:03:05.330 --> 00:03:08.360
the course as and when
we find it appropriate.

00:03:08.360 --> 00:03:10.550
But for now, I'm just
going to give you

00:03:10.550 --> 00:03:13.535
some overview as to what's
inside this folder.

00:03:13.535 --> 00:03:16.010
We have this hooks
folder inside which we

00:03:16.010 --> 00:03:18.154
have bunch of scripts.

00:03:18.154 --> 00:03:20.480
These scripts would
defined what needs to be

00:03:20.480 --> 00:03:23.570
done before and after
a particular event.

00:03:23.570 --> 00:03:26.975
For example, we're already
aware of the commit event.

00:03:26.975 --> 00:03:29.630
And then we have the script
with the name pre-commit.

00:03:29.630 --> 00:03:31.325
As the name suggests,

00:03:31.325 --> 00:03:33.500
it does something prior to

00:03:33.500 --> 00:03:35.855
executing the actual
commit logic.

00:03:35.855 --> 00:03:38.090
So get my run this script

00:03:38.090 --> 00:03:41.000
prior to executing
the commit logic.

00:03:41.000 --> 00:03:43.715
So we might be
having things like

00:03:43.715 --> 00:03:47.300
validating the
syntax, et cetera.

00:03:47.300 --> 00:03:51.725
If you're really curious as
to what's inside the scripts,

00:03:51.725 --> 00:03:53.690
you can right-click and open it

00:03:53.690 --> 00:03:56.730
up with Notepad Plus, Plus.

00:03:56.770 --> 00:04:00.200
And just go through
all these comments

00:04:00.200 --> 00:04:03.125
and try to get a sense
of what it is doing.

00:04:03.125 --> 00:04:05.765
But I don't recommend
you doing it.

00:04:05.765 --> 00:04:08.670
Don't confuse yourself.

00:04:09.800 --> 00:04:12.980
Then we have the
input folder inside

00:04:12.980 --> 00:04:16.040
which we have this exclude file.

00:04:16.040 --> 00:04:19.835
Let's open it up with
Notepad Plus, Plus.

00:04:19.835 --> 00:04:21.440
If there are any files in

00:04:21.440 --> 00:04:24.469
your project that you
don't want to consider,

00:04:24.469 --> 00:04:27.170
this is where you
would list them down.

00:04:27.170 --> 00:04:29.120
You can also use patterns.

00:04:29.120 --> 00:04:32.645
For example, you can
say star dot log.

00:04:32.645 --> 00:04:37.115
And now get would ignore all
the files with any name,

00:04:37.115 --> 00:04:40.250
but has the dot log extension.

00:04:40.250 --> 00:04:43.910
Just an example. And by the way,

00:04:43.910 --> 00:04:46.969
exclude file is something
that is local to a computer.

00:04:46.969 --> 00:04:49.280
And whatever you add in here is

00:04:49.280 --> 00:04:51.830
only applicable within
your own depositor,

00:04:51.830 --> 00:04:53.645
inside your local system.

00:04:53.645 --> 00:04:55.835
If you want to have exclusions

00:04:55.835 --> 00:04:57.844
across all the team members,

00:04:57.844 --> 00:05:01.460
then there's a separate thing
for that called gitignore.

00:05:01.460 --> 00:05:04.980
We'll talk about it
in coming chapters.

00:05:07.450 --> 00:05:10.745
Next, we have the
objects folder.

00:05:10.745 --> 00:05:12.590
This is where good foods store

00:05:12.590 --> 00:05:15.905
all the historical data
or the version history.

00:05:15.905 --> 00:05:20.195
This is what we're referring
to as the object database.

00:05:20.195 --> 00:05:23.645
Well, currently this folder
does not have a lot of data.

00:05:23.645 --> 00:05:25.610
But once we make few comments,

00:05:25.610 --> 00:05:28.130
you're going to see this
folder getting populated.

00:05:28.130 --> 00:05:31.550
You're going to see a bunch
of folders getting created.

00:05:31.550 --> 00:05:34.890
Inside objects folder.

00:05:37.330 --> 00:05:39.710
We have the ribs folder,

00:05:39.710 --> 00:05:41.630
but that does not talk

00:05:41.630 --> 00:05:43.865
about it because to
understand this,

00:05:43.865 --> 00:05:46.355
you need to know what
is a commit object,

00:05:46.355 --> 00:05:48.185
hashing, et cetera.

00:05:48.185 --> 00:05:50.540
So we're going to
skip it for now.

00:05:50.540 --> 00:05:52.430
Conflict file is something we'll

00:05:52.430 --> 00:05:54.230
explore in the next lecture.

00:05:54.230 --> 00:05:57.950
The description file has
something to do with Git web.

00:05:57.950 --> 00:05:59.930
And since you don't
know get web,

00:05:59.930 --> 00:06:02.330
it doesn't make sense
for me to talk about it.

00:06:02.330 --> 00:06:07.865
Right now. The head has
something to do with branching.

00:06:07.865 --> 00:06:09.605
So we'll talk about it.

00:06:09.605 --> 00:06:13.010
When we talked about branches.

00:06:13.010 --> 00:06:15.360
Let's move on.

00:06:17.610 --> 00:06:20.200
One thing I should
also mention is

00:06:20.200 --> 00:06:24.265
that get in it is
a safe operation.

00:06:24.265 --> 00:06:26.470
Meaning that let's
assume that I've

00:06:26.470 --> 00:06:28.570
worked on my project
for a while and I've

00:06:28.570 --> 00:06:31.180
made a few comments
and then accidentally

00:06:31.180 --> 00:06:33.010
assume that I run

00:06:33.010 --> 00:06:35.860
the command once again,
inside our project.

00:06:35.860 --> 00:06:38.545
This is not going
to do any damage.

00:06:38.545 --> 00:06:40.510
Everything would
remain as it is,

00:06:40.510 --> 00:06:43.075
as if we didn't run
this command at all.

00:06:43.075 --> 00:06:46.570
However, if you
delete this folder,

00:06:46.570 --> 00:06:48.985
then that's going
to cause trouble.

00:06:48.985 --> 00:06:51.295
You're going to lose all
the historical data,

00:06:51.295 --> 00:06:53.380
all the version
history, et cetera.

00:06:53.380 --> 00:06:55.270
And then you would either

00:06:55.270 --> 00:06:56.980
need to reinitialize
the project,

00:06:56.980 --> 00:07:00.470
but running the git init
command and start from scratch.

00:07:00.470 --> 00:07:01.790
Or you need to check out

00:07:01.790 --> 00:07:03.935
the project from the
centralized repository,

00:07:03.935 --> 00:07:06.695
which we'll explore
in coming chapters.

00:07:06.695 --> 00:07:08.420
But as a rule of thumb,

00:07:08.420 --> 00:07:10.970
you should always
remember not to mess

00:07:10.970 --> 00:07:14.030
with this folder unless you
know what you're doing.

00:07:14.030 --> 00:07:17.450
The fact that it is hidden
by default should tell

00:07:17.450 --> 00:07:19.280
you that it is not intended

00:07:19.280 --> 00:07:21.710
to be used by developers
like you and me,

00:07:21.710 --> 00:07:24.710
but to be used by itself.

00:07:24.710 --> 00:07:27.740
However, there might be instances
where you might need to

00:07:27.740 --> 00:07:30.830
bring some edits or do
something inside this folder.

00:07:30.830 --> 00:07:32.840
For example, we've
already talked about

00:07:32.840 --> 00:07:35.090
the info exclude file,

00:07:35.090 --> 00:07:38.585
where you might want to
add some exclusions.

00:07:38.585 --> 00:07:42.500
But otherwise, in most

00:07:42.500 --> 00:07:46.085
of the cases you don't want
to mess with this folder.

00:07:46.085 --> 00:07:48.390
Just leave it to get.
