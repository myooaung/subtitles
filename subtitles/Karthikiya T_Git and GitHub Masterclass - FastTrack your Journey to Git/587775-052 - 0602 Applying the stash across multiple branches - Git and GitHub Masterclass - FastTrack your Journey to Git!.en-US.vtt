WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.280
There might come a time or a

00:00:02.280 --> 00:00:03.810
use case where you might need to

00:00:03.810 --> 00:00:07.290
apply the same changes
across multiple branches.

00:00:07.290 --> 00:00:10.950
In which case git stash pop
doesn't serve the purpose.

00:00:10.950 --> 00:00:12.510
When to use git stash,

00:00:12.510 --> 00:00:13.755
apply for the same.

00:00:13.755 --> 00:00:15.435
Let me show you what I mean.

00:00:15.435 --> 00:00:18.390
I'm currently in future
one branch and we

00:00:18.390 --> 00:00:22.540
have certain
uncommitted changes.

00:00:23.060 --> 00:00:25.905
Let me go back to Git Bash and

00:00:25.905 --> 00:00:29.140
stash all those
uncommitted changes.

00:00:33.260 --> 00:00:36.750
So we took a backup
of it and we would no

00:00:36.750 --> 00:00:40.985
longer see these changes.

00:00:40.985 --> 00:00:46.865
Now let's do git, stash, apply.

00:00:46.865 --> 00:00:50.435
And let's see what
it's going to do.

00:00:50.435 --> 00:00:53.735
Once again, good
has brought back

00:00:53.735 --> 00:00:57.380
all those uncommitted changes
from the temporary store.

00:00:57.380 --> 00:01:00.920
But this time it didn't
delete all those changes from

00:01:00.920 --> 00:01:05.375
the temporary store like it
did in gas off git stash pop.

00:01:05.375 --> 00:01:07.340
Which means we can apply

00:01:07.340 --> 00:01:09.590
those changes in
another branch as well.

00:01:09.590 --> 00:01:13.680
But before that, let me
commit all these changes.

00:01:14.800 --> 00:01:17.330
Let's say I'm done
with all the changes

00:01:17.330 --> 00:01:19.440
related to feature one.

00:01:22.990 --> 00:01:26.390
Stage those files first,

00:01:26.390 --> 00:01:30.079
and then commit the changes.

00:01:30.079 --> 00:01:35.120
Let me now switch to feature

00:01:35.120 --> 00:01:41.645
two branch git stash.

00:01:41.645 --> 00:01:43.910
I can now run

00:01:43.910 --> 00:01:48.410
the apply command to apply
all those stashed changes.

00:01:48.410 --> 00:01:50.570
Once again, currently we

00:01:50.570 --> 00:01:53.150
don't have all those changes
in future to branch.

00:01:53.150 --> 00:01:55.595
But once after I
run this command,

00:01:55.595 --> 00:01:59.460
you're going to see
those changes here.
