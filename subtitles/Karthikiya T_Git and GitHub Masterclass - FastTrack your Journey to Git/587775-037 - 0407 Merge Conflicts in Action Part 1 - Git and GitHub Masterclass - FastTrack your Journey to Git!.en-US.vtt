WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.885
Alright, let us take a look
at merge conflicts, inaction.

00:00:03.885 --> 00:00:05.685
And for this purpose I have

00:00:05.685 --> 00:00:08.250
a new folder which
currently has nothing.

00:00:08.250 --> 00:00:10.500
We're going to do
everything from scratch.

00:00:10.500 --> 00:00:12.120
In this video,
we'll try to create

00:00:12.120 --> 00:00:14.234
a scenario where
we have conflicts.

00:00:14.234 --> 00:00:15.810
And then in the next
video we'll actually

00:00:15.810 --> 00:00:17.370
see how we can resolve

00:00:17.370 --> 00:00:20.790
those conflicts to be able
to merge the branches.

00:00:20.790 --> 00:00:25.815
First things first, let us
get initialized the project.

00:00:25.815 --> 00:00:29.940
Now assume that I got a project
from one of the clients,

00:00:29.940 --> 00:00:33.390
whereas asked to create a
product management application.

00:00:33.390 --> 00:00:37.450
Inside the project, I might
be having these files.

00:00:38.200 --> 00:00:40.940
We might have a product
file which will

00:00:40.940 --> 00:00:43.745
have the product
related source code.

00:00:43.745 --> 00:00:47.790
And then we might have
an inventory file,

00:00:48.550 --> 00:00:53.060
and then maybe an
admin file as well.

00:00:53.060 --> 00:00:56.885
Now, obviously these files
cannot be dot TXT files.

00:00:56.885 --> 00:00:58.700
You need to make an
assumption that these are

00:00:58.700 --> 00:01:00.515
some kind of a source
file like Java,

00:01:00.515 --> 00:01:03.275
python, Node.JS or whatever.

00:01:03.275 --> 00:01:07.430
Now let's go ahead and populate
something in this file,

00:01:07.430 --> 00:01:10.685
simulating that we're
actually writing source code.

00:01:10.685 --> 00:01:14.340
Let's start with
product dot txt file.

00:01:23.170 --> 00:01:26.780
Like so. You need to
assume that this is

00:01:26.780 --> 00:01:30.420
actually some kind
of source code.

00:01:30.430 --> 00:01:32.825
Save the file and close it.

00:01:32.825 --> 00:01:34.295
And I'm going to do the same

00:01:34.295 --> 00:01:36.960
for the other two files as well.

00:01:44.950 --> 00:01:48.815
Save the file and close it.

00:01:48.815 --> 00:01:54.840
Let's do the same
for admin file.

00:01:55.630 --> 00:01:59.495
Save and close that. Let
us stage all these files.

00:01:59.495 --> 00:02:00.695
Git add.

00:02:00.695 --> 00:02:04.280
I'll use wildcard character
to stage all the files.

00:02:04.280 --> 00:02:08.010
And let's commit those changes.

00:02:13.600 --> 00:02:17.000
Whatever, some message.

00:02:17.000 --> 00:02:18.920
Now let us assume that I started

00:02:18.920 --> 00:02:20.750
working on another feature.

00:02:20.750 --> 00:02:22.790
And so I have to create
another branch to

00:02:22.790 --> 00:02:25.399
work on all those
features related changes.

00:02:25.399 --> 00:02:30.770
I'm going to use the command
git checkout hyphen b,

00:02:30.770 --> 00:02:33.695
and then the name of the branch.

00:02:33.695 --> 00:02:35.120
So this command
will create feature

00:02:35.120 --> 00:02:38.810
one branch as well
as switch to it.

00:02:38.810 --> 00:02:43.050
So we are currently inside
the feature one branch.

00:02:43.050 --> 00:02:46.720
Let us make some edits and these

00:02:46.720 --> 00:02:50.155
two files inventory as well
as product dot txt file.

00:02:50.155 --> 00:02:54.560
But we're going to leave the
admin dot TXT file as is.

00:02:55.440 --> 00:02:58.180
I'm just simply going to add

00:02:58.180 --> 00:03:00.970
a couple of more lines of code.

00:03:00.970 --> 00:03:05.620
But I'm going to say feature
at the start of these lines,

00:03:05.620 --> 00:03:07.435
just so that we'll know that

00:03:07.435 --> 00:03:10.270
these lines are introduced
in feature branch.

00:03:10.270 --> 00:03:14.030
You know the purpose
of this in just a bit.

00:03:20.730 --> 00:03:25.310
I'm going to do the same
for inventory dot txt file.

00:03:29.830 --> 00:03:33.990
Like so, save the
file and close it.

00:03:34.450 --> 00:03:38.640
Let us stage all these changes.

00:03:47.470 --> 00:03:51.245
Some message and commit
all the changes.

00:03:51.245 --> 00:03:54.720
Let me switch back to
master once again.

00:03:56.620 --> 00:04:00.320
Let's clear the screen and

00:04:00.320 --> 00:04:03.500
let us try to update
product dot TXT file.

00:04:03.500 --> 00:04:07.290
But leave these two file sizes.

00:04:08.140 --> 00:04:10.400
Obviously not going to see

00:04:10.400 --> 00:04:11.930
all those feature
related changes

00:04:11.930 --> 00:04:15.510
here because we switched
back to master branch.

00:04:23.920 --> 00:04:26.270
Let's close the file,

00:04:26.270 --> 00:04:33.600
stage these changes and
commit those changes.

00:04:48.400 --> 00:04:53.615
Like so. So just to
reiterate what we have done,

00:04:53.615 --> 00:04:56.810
we have all these three files
hadn't been filed demand

00:04:56.810 --> 00:05:00.290
as is as it is before
creating the branch.

00:05:00.290 --> 00:05:03.230
Inventory file is updated
in feature branch,

00:05:03.230 --> 00:05:04.595
but not in master branch

00:05:04.595 --> 00:05:06.710
since that time we
created the branch,

00:05:06.710 --> 00:05:08.930
but the product file has been

00:05:08.930 --> 00:05:11.240
modified in both the branches.

00:05:11.240 --> 00:05:13.010
Now can you make
a guess which of

00:05:13.010 --> 00:05:14.915
these files will have conflicts?

00:05:14.915 --> 00:05:16.205
When we tried to merge,

00:05:16.205 --> 00:05:21.180
the changes will continue
from next video.
