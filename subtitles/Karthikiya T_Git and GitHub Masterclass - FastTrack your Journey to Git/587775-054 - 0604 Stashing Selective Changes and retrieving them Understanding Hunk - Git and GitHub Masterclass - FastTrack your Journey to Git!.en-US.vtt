WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.969
It's not necessary that we
have to stash all the changes.

00:00:03.969 --> 00:00:05.650
We can also be select to ask to

00:00:05.650 --> 00:00:07.330
water all the changes we want

00:00:07.330 --> 00:00:10.825
to stash and changes that
we don't want to stash.

00:00:10.825 --> 00:00:13.285
And once again, for the
sake of this example,

00:00:13.285 --> 00:00:15.430
I've brought back the project to

00:00:15.430 --> 00:00:17.845
what it was at the
start of this chapter.

00:00:17.845 --> 00:00:21.295
So we do not have any
stashes at the moment.

00:00:21.295 --> 00:00:29.300
Let me edit couple
of files. Like so.

00:00:30.510 --> 00:00:36.370
I saved the file. But this time,

00:00:36.370 --> 00:00:39.860
let us stash partial changes.

00:00:40.890 --> 00:00:43.850
This time I'm going
to use the option

00:00:43.850 --> 00:00:46.775
hyphen P stands for partial.

00:00:46.775 --> 00:00:50.310
And let's see what
it allows us to do.

00:00:50.440 --> 00:00:54.020
It has provided us
bunch of options.

00:00:54.020 --> 00:00:56.840
If you don't know what
these options are about,

00:00:56.840 --> 00:00:59.615
you can just type
in question mark

00:00:59.615 --> 00:01:03.395
and you'll be able to
see a description of it.

00:01:03.395 --> 00:01:06.215
So basically this
command would prompt you

00:01:06.215 --> 00:01:09.095
all the changes that we
have done one by one.

00:01:09.095 --> 00:01:12.050
And we can tell what to
do with those changes

00:01:12.050 --> 00:01:16.140
based on these list of options.

00:01:16.420 --> 00:01:19.160
So currently it is pointing to

00:01:19.160 --> 00:01:22.580
this particular change belonging

00:01:22.580 --> 00:01:25.650
to inventory dot TXT file.

00:01:26.020 --> 00:01:30.425
If we type in y, it's
going to stash the hunk.

00:01:30.425 --> 00:01:32.540
You can think of
hunk as a change

00:01:32.540 --> 00:01:35.045
which is being presented here.

00:01:35.045 --> 00:01:39.180
So this is a new line of
texts would have just added.

00:01:39.430 --> 00:01:42.290
If you type in N,
That means you don't

00:01:42.290 --> 00:01:44.480
want include it
as part of stash.

00:01:44.480 --> 00:01:47.870
It means that you don't want
to stash these changes.

00:01:47.870 --> 00:01:49.760
Q as in quipped,

00:01:49.760 --> 00:01:54.155
do not stash this hunk or
any of the remaining ones.

00:01:54.155 --> 00:01:57.050
But what are all the hunks
that you might have said yes

00:01:57.050 --> 00:02:01.055
to what still be
stashed upon quitting.

00:02:01.055 --> 00:02:03.560
Essentially, we're going to
exit out of this operation

00:02:03.560 --> 00:02:05.840
while also stashing
all the changes that

00:02:05.840 --> 00:02:08.500
we said yes to here would mean

00:02:08.500 --> 00:02:12.565
stash this hunk and all
later hunks in the file.

00:02:12.565 --> 00:02:15.700
In the same file. D would

00:02:15.700 --> 00:02:17.170
mean they're not stashed

00:02:17.170 --> 00:02:19.960
this hunk or any of the
later hunks in the file,

00:02:19.960 --> 00:02:23.500
it is opposite to option a.

00:02:23.500 --> 00:02:27.445
He would mean manually
edit the current hunk.

00:02:27.445 --> 00:02:29.785
This is something
we would never use.

00:02:29.785 --> 00:02:31.465
I've personally never used it.

00:02:31.465 --> 00:02:34.240
I don t think of a
use case to use this.

00:02:34.240 --> 00:02:36.355
Basically, if we want
to edit anything,

00:02:36.355 --> 00:02:37.990
we would rather do
it in walking down

00:02:37.990 --> 00:02:40.675
a tree and then
stash the changes.

00:02:40.675 --> 00:02:44.260
So let's say that I'd like
to stash these changes.

00:02:44.260 --> 00:02:48.020
So I'm going to say y here.

00:02:49.060 --> 00:02:53.015
Then it's going to prompt
us with the second hunk,

00:02:53.015 --> 00:02:55.610
which belongs to
product dot TXT file.

00:02:55.610 --> 00:02:57.200
And these are the changes.

00:02:57.200 --> 00:02:59.315
Let's say that I
don't want to stash

00:02:59.315 --> 00:03:03.030
someone to say n to this.

00:03:03.400 --> 00:03:07.400
Let us do git restore

00:03:07.400 --> 00:03:10.849
dot to just clean our
working directory.

00:03:10.849 --> 00:03:12.770
Let's call it with this command.

00:03:12.770 --> 00:03:16.535
We are deleting all those
uncommitted changes.

00:03:16.535 --> 00:03:20.555
Let me try to
reapply that stash.

00:03:20.555 --> 00:03:22.730
This command would just apply

00:03:22.730 --> 00:03:26.060
the latest stash we
have in the list.

00:03:26.060 --> 00:03:28.235
But before I run that command,

00:03:28.235 --> 00:03:30.890
Let us make sure that
our changes are lost.

00:03:30.890 --> 00:03:35.405
As you can see, our
changes are not there.

00:03:35.405 --> 00:03:39.030
But once after run this command,

00:03:40.480 --> 00:03:43.520
we're going to see
changes applied

00:03:43.520 --> 00:03:46.430
in inventory dot TXT file.

00:03:46.430 --> 00:03:49.729
Because this hunk was stashed.

00:03:49.729 --> 00:03:52.025
Where does in product
dot TXT file,

00:03:52.025 --> 00:03:54.539
we don't see any changes.

00:03:57.160 --> 00:04:00.120
I'll see you next.
