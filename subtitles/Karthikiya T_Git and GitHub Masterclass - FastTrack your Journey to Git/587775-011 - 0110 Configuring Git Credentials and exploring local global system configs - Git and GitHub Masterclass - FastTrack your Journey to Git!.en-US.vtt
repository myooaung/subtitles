WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.200 --> 00:00:03.030
Okay, let us see how
we can configure

00:00:03.030 --> 00:00:07.830
Git credentials and try to
understand its actual purpose.

00:00:07.830 --> 00:00:10.170
We now have a project

00:00:10.170 --> 00:00:12.705
initialized by get
with a bunch of files.

00:00:12.705 --> 00:00:15.195
Let us now try to
run the command git

00:00:15.195 --> 00:00:17.325
commit and see what happens.

00:00:17.325 --> 00:00:18.360
You get 12.

00:00:18.360 --> 00:00:22.680
Kindly ask you, please
tell me who you are.

00:00:22.680 --> 00:00:24.705
Now. The water is asking

00:00:24.705 --> 00:00:27.750
local commit changes for you,
but who the **** are you?

00:00:27.750 --> 00:00:31.200
And it has also provided
instructions as to how we

00:00:31.200 --> 00:00:32.910
can introduce ourselves to

00:00:32.910 --> 00:00:35.200
get is by running this command.

00:00:35.200 --> 00:00:37.100
But this is not just about you

00:00:37.100 --> 00:00:38.945
introducing yourself to get

00:00:38.945 --> 00:00:40.835
this actually real purpose of

00:00:40.835 --> 00:00:43.355
you configuring
these credentials.

00:00:43.355 --> 00:00:46.130
For example, let's say that
one of your team members

00:00:46.130 --> 00:00:49.115
received a defect or a bug
assigned to their name,

00:00:49.115 --> 00:00:50.630
saying that we're
not, the feature is

00:00:50.630 --> 00:00:52.595
not working as expected.

00:00:52.595 --> 00:00:54.995
In the process of
analyzing the problem,

00:00:54.995 --> 00:00:56.360
they want to take
a look at all the

00:00:56.360 --> 00:00:58.460
historical changes on that file.

00:00:58.460 --> 00:01:00.260
And then they come across with

00:01:00.260 --> 00:01:02.284
a change introduced earlier,

00:01:02.284 --> 00:01:03.950
which seem to have caused

00:01:03.950 --> 00:01:06.650
the problem or would seem
to have broken a feature.

00:01:06.650 --> 00:01:09.710
Guess what? They're going
to get to know the name of

00:01:09.710 --> 00:01:11.360
the person and the
email address of

00:01:11.360 --> 00:01:13.850
the person who made
those changes.

00:01:13.850 --> 00:01:15.470
They're going to contact them

00:01:15.470 --> 00:01:18.090
and ask them to fix the bug.

00:01:18.090 --> 00:01:19.990
But how does get no.

00:01:19.990 --> 00:01:22.030
All this it is when you

00:01:22.030 --> 00:01:24.940
configure these credentials
inside, you get,

00:01:24.940 --> 00:01:26.965
when you make a commit and push

00:01:26.965 --> 00:01:29.695
all those changes to the
centralized repository,

00:01:29.695 --> 00:01:31.555
which is going to be GitHub.

00:01:31.555 --> 00:01:33.820
It will also store
this information as

00:01:33.820 --> 00:01:36.250
to who has done what changes,

00:01:36.250 --> 00:01:39.550
and it includes your name
as well as e-mail address.

00:01:39.550 --> 00:01:41.455
So if you introduce good code,

00:01:41.455 --> 00:01:43.705
somebody will come
back and praise you.

00:01:43.705 --> 00:01:45.595
Are. If you introduce bad code,

00:01:45.595 --> 00:01:47.485
somebody will come
back and blame you.

00:01:47.485 --> 00:01:50.170
In most cases it is
always the blame anyway,

00:01:50.170 --> 00:01:51.655
but no comments on that.

00:01:51.655 --> 00:01:53.950
So let us see how
we can configure

00:01:53.950 --> 00:01:56.080
the credentials and get has

00:01:56.080 --> 00:01:58.345
already provided
us how to do that.

00:01:58.345 --> 00:02:00.420
So let's use that command, git,

00:02:00.420 --> 00:02:05.090
config hyphen, hyphen global.

00:02:05.090 --> 00:02:07.310
When we set this global option,

00:02:07.310 --> 00:02:09.935
what this means is
these credentials

00:02:09.935 --> 00:02:12.605
are available across
all the projects,

00:02:12.605 --> 00:02:14.900
all the good projects
that you create inside

00:02:14.900 --> 00:02:19.580
your system pertaining
to this particular user.

00:02:19.580 --> 00:02:22.850
If you said this two
system, for example,

00:02:22.850 --> 00:02:27.080
then these credentials would
be a valuable system-wide.

00:02:27.080 --> 00:02:29.030
Meaning every user in

00:02:29.030 --> 00:02:32.745
the system will have all
these credentials applicable.

00:02:32.745 --> 00:02:36.440
We also have one more
option that says local.

00:02:36.440 --> 00:02:39.185
That means these convicts
are only available

00:02:39.185 --> 00:02:42.660
for the current repository
where you're working on.

00:02:42.660 --> 00:02:44.920
So first let's try with local.

00:02:44.920 --> 00:02:48.235
Maybe I'm going to
first set the name.

00:02:48.235 --> 00:02:50.305
You can set any name
of your choice,

00:02:50.305 --> 00:02:52.730
but it has to be your name.

00:02:54.540 --> 00:02:57.835
And I'm going to hit Enter.

00:02:57.835 --> 00:03:02.600
And I'm going to
set email as well.

00:03:08.670 --> 00:03:11.665
Okay, now let's take a look at

00:03:11.665 --> 00:03:14.305
where these are
actually populated.

00:03:14.305 --> 00:03:17.275
So that's inside the folder.

00:03:17.275 --> 00:03:19.885
Remember not earlier lecture,

00:03:19.885 --> 00:03:22.750
I mentioned that we'll talk
about this config file.

00:03:22.750 --> 00:03:30.510
Well, this is where all those
credentials would be set.

00:03:31.450 --> 00:03:33.890
Now let's try to set

00:03:33.890 --> 00:03:40.290
these credentials at
the global level.

00:03:51.640 --> 00:03:55.220
This time, this wouldn't
be populated under

00:03:55.220 --> 00:04:00.630
Users directory inside your C
Drive. Let me pull that up.

00:04:04.120 --> 00:04:07.355
So inside the user's directory,

00:04:07.355 --> 00:04:11.945
you should be able to
locate the Git config.

00:04:11.945 --> 00:04:15.720
And this would get
reflected over there.

00:04:17.170 --> 00:04:19.835
And similarly, if
you were to set

00:04:19.835 --> 00:04:23.975
the system-wide credentials,
you can do that.

00:04:23.975 --> 00:04:26.840
I don't expect your
computer to be used by

00:04:26.840 --> 00:04:28.430
multiple people and they're all

00:04:28.430 --> 00:04:31.085
contributing to your work.

00:04:31.085 --> 00:04:33.470
But anyway, let's set this

00:04:33.470 --> 00:04:38.374
up for system is that though
you need to have permission.

00:04:38.374 --> 00:04:41.420
So that doesn't launch get

00:04:41.420 --> 00:04:46.290
from the start menu
as an administrator.

00:04:46.750 --> 00:04:51.550
And then we'll be able to set

00:04:51.550 --> 00:04:57.080
the credentials, get config.

00:04:57.720 --> 00:05:00.265
I'm sorry, The supposed to be

00:05:00.265 --> 00:05:04.480
system-wide changes user name.

00:05:04.480 --> 00:05:12.340
I'm going to say this

00:05:12.340 --> 00:05:15.760
has walked and these

00:05:15.760 --> 00:05:20.360
would be reflected inside
the program files.

00:05:22.260 --> 00:05:25.400
Let me take you there.

00:05:27.660 --> 00:05:32.370
Inside Program Files,
get ETC directory.

00:05:32.370 --> 00:05:36.980
You're going to see
the Git config file.

00:05:36.980 --> 00:05:41.640
And this is where the
credentials would be populated.

00:05:44.740 --> 00:05:47.525
By the way, I should
also mention that

00:05:47.525 --> 00:05:51.725
local credentials will
override global credentials.

00:05:51.725 --> 00:05:53.900
And global credentials will

00:05:53.900 --> 00:05:57.470
override the system
level credentials.

00:05:57.470 --> 00:06:00.605
So get, we'll try to get
the local credentials fast.

00:06:00.605 --> 00:06:02.120
If they're not available.

00:06:02.120 --> 00:06:05.270
It will try to search
the global credentials.

00:06:05.270 --> 00:06:07.250
Otherwise, the last option would

00:06:07.250 --> 00:06:09.395
be this system credentials.

00:06:09.395 --> 00:06:10.970
If none of these are set,

00:06:10.970 --> 00:06:13.010
then obviously are
going to see an error.

00:06:13.010 --> 00:06:15.800
You can also take a look at
the credentials by running

00:06:15.800 --> 00:06:20.360
a command git config list.

00:06:20.360 --> 00:06:22.640
Somewhere here, you're going to

00:06:22.640 --> 00:06:29.250
see the name and
email like cell.

00:06:31.570 --> 00:06:33.950
You can also give an option to

00:06:33.950 --> 00:06:37.880
see a particular
level of credentials,

00:06:37.880 --> 00:06:39.784
let's say local for instance.

00:06:39.784 --> 00:06:41.945
And you can also be
more specific about

00:06:41.945 --> 00:06:43.999
what information inside Config.

00:06:43.999 --> 00:06:45.530
You want to take a look at,

00:06:45.530 --> 00:06:49.265
going to take a look at
username for instance.

00:06:49.265 --> 00:06:52.620
And it's going to
print the value of it.
