WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.880
We have theoretically
understood how good it actually

00:00:02.880 --> 00:00:06.014
manages and stores the data
inside the object database.

00:00:06.014 --> 00:00:07.290
Now let's take a look at it

00:00:07.290 --> 00:00:10.470
practically in order to
explain things better.

00:00:10.470 --> 00:00:11.865
I'm also going to show you

00:00:11.865 --> 00:00:14.190
a graphical representation
of what we're doing right

00:00:14.190 --> 00:00:16.260
now on the right-hand side of

00:00:16.260 --> 00:00:17.640
the screen so that you'll have

00:00:17.640 --> 00:00:19.800
a better picture as
to what we're doing.

00:00:19.800 --> 00:00:22.230
So currently we just
have one commit.

00:00:22.230 --> 00:00:23.790
Let's take a look at it.

00:00:23.790 --> 00:00:25.500
So I do git log

00:00:25.500 --> 00:00:28.095
to take a look at all
the list of commits.

00:00:28.095 --> 00:00:29.715
Currently we just have one.

00:00:29.715 --> 00:00:32.549
And as you can see, we
have author information,

00:00:32.549 --> 00:00:34.724
date, and even the
commit message.

00:00:34.724 --> 00:00:36.600
In addition to
that, we also have

00:00:36.600 --> 00:00:39.165
140 character hash code.

00:00:39.165 --> 00:00:42.515
Can you guess what this
hash code is all about?

00:00:42.515 --> 00:00:44.860
Well, here's the hashCode of

00:00:44.860 --> 00:00:47.815
the commit object
corresponding to this commit.

00:00:47.815 --> 00:00:49.330
Now how do we take a look at

00:00:49.330 --> 00:00:51.535
the content inside
this comet object?

00:00:51.535 --> 00:00:54.220
Well, this hashCode itself
will give a clue as to how

00:00:54.220 --> 00:00:56.845
we can navigate to
this commit object.

00:00:56.845 --> 00:00:59.030
Let me show you what I mean.

00:00:59.610 --> 00:01:03.770
I'm inside the
project directory.

00:01:05.160 --> 00:01:07.855
Let me enlarge it for you.

00:01:07.855 --> 00:01:11.245
I'm going to go inside
the dot git folder.

00:01:11.245 --> 00:01:15.400
And guess which folder
we need to get into.

00:01:15.400 --> 00:01:17.990
That's objects folder.

00:01:18.330 --> 00:01:21.550
Now here we have bunch of
folders which were not

00:01:21.550 --> 00:01:25.045
existing before we
committed the changes.

00:01:25.045 --> 00:01:27.430
Now if you look at the
hashCode and take out

00:01:27.430 --> 00:01:31.300
the first two
characters, it says 95.

00:01:31.300 --> 00:01:34.090
We need to go
inside that folder.

00:01:34.090 --> 00:01:37.165
And then you see a
file with the name,

00:01:37.165 --> 00:01:39.370
which is essentially the
remaining characters

00:01:39.370 --> 00:01:41.050
of the hashCode.

00:01:41.050 --> 00:01:45.550
So we have 95 ECE, so on.

00:01:45.550 --> 00:01:48.910
95 is the directory name

00:01:48.910 --> 00:01:52.225
and the rest of the characters
is the name of the file.

00:01:52.225 --> 00:01:56.005
And this is what we're referring
to as the commit object.

00:01:56.005 --> 00:01:58.570
If you try to take a
look at the content

00:01:58.570 --> 00:02:01.030
inside it using a
Notepad Plus, Plus,

00:02:01.030 --> 00:02:04.060
you won't be able to read
it because it will store

00:02:04.060 --> 00:02:07.560
it in a different format
that is not readable by us.

00:02:07.560 --> 00:02:10.490
The only way you can read the
content in it is by running

00:02:10.490 --> 00:02:14.045
the command get kept file.

00:02:14.045 --> 00:02:16.250
And then you're going to
provide the option hyphen

00:02:16.250 --> 00:02:18.575
P stands for pretty print.

00:02:18.575 --> 00:02:22.520
And going to provide the
hashCode of the object

00:02:22.520 --> 00:02:24.320
that you want to pretty print.

00:02:24.320 --> 00:02:26.570
I could copy the
entire hash code,

00:02:26.570 --> 00:02:29.330
or I could just copy the
first few characters

00:02:29.330 --> 00:02:31.385
and pasted here.

00:02:31.385 --> 00:02:35.855
And this would print Watson
inside the comet object.

00:02:35.855 --> 00:02:39.095
If you'd like to take a look
at the type of the object,

00:02:39.095 --> 00:02:43.955
the option for that is
hyphen d to print the type.

00:02:43.955 --> 00:02:46.530
And this has come at object.

00:02:49.120 --> 00:02:52.355
Let's pretty print that
object once again.

00:02:52.355 --> 00:02:55.235
So here, as I've
mentioned previously,

00:02:55.235 --> 00:02:56.630
you have information about

00:02:56.630 --> 00:02:59.780
the author computer and
even the commit message.

00:02:59.780 --> 00:03:02.945
In addition to that, we
also have a hashCode,

00:03:02.945 --> 00:03:07.924
which is actually the hashCode
of the parent tree object.

00:03:07.924 --> 00:03:12.150
So let's take a look at what's
inside the tree object.

00:03:12.160 --> 00:03:14.960
And I'm going to use
the same command

00:03:14.960 --> 00:03:16.160
to pretty print what's

00:03:16.160 --> 00:03:20.135
inside the tree object.

00:03:20.135 --> 00:03:23.195
I can just copy first
few characters.

00:03:23.195 --> 00:03:27.350
Paste it in here. And
if you hit Enter,

00:03:27.350 --> 00:03:30.785
you're going to see
what's inside it.

00:03:30.785 --> 00:03:36.875
Since we have to go back
to the root directory,

00:03:36.875 --> 00:03:41.370
we have one subdirectory
and couple of files.

00:03:41.800 --> 00:03:45.875
And if you take a look at
what's inside this tree object,

00:03:45.875 --> 00:03:47.825
you have couple of blobs.

00:03:47.825 --> 00:03:51.230
Each blob would correspond
to individual file.

00:03:51.230 --> 00:03:54.635
In this case it's one
dot dx dy and dx dy.

00:03:54.635 --> 00:03:57.920
And then it is also
pointing to another tree,

00:03:57.920 --> 00:03:59.780
or it is having hashCode

00:03:59.780 --> 00:04:02.135
off and other tree
or the subtree.

00:04:02.135 --> 00:04:06.080
So we can go inside
the sub tree as well.

00:04:06.080 --> 00:04:15.395
Let's do that. Gets the output.

00:04:15.395 --> 00:04:17.720
It's going to be the blobs off

00:04:17.720 --> 00:04:20.135
the two files inside
the subfolder.

00:04:20.135 --> 00:04:23.690
One sub dot takes
into sub dot TXT.

00:04:23.690 --> 00:04:25.460
And by the way, you can locate

00:04:25.460 --> 00:04:27.890
these objects inside
the objects folder.

00:04:27.890 --> 00:04:30.889
Just as you had located
the commit object.

00:04:30.889 --> 00:04:33.320
It is no different.

00:04:33.320 --> 00:04:36.900
Since I'm the objects folder.

00:04:36.940 --> 00:04:43.260
You will find a folder.

00:04:43.960 --> 00:04:49.070
So this is the sub tree
object we were talking about.

00:04:49.070 --> 00:04:53.090
And similarly, you can also
find the blob objects.

00:04:53.090 --> 00:04:56.180
For example, let's
talk about this blob.

00:04:56.180 --> 00:04:58.580
It starts with 99, so

00:04:58.580 --> 00:05:00.514
we're going to go
inside that directory.

00:05:00.514 --> 00:05:03.260
And this is a Blob object.

00:05:03.260 --> 00:05:07.160
Let us try to pretty
print this blob object

00:05:07.160 --> 00:05:11.465
and we should be able to
see the content inside it.

00:05:11.465 --> 00:05:14.720
And once again, if you were
to open it with Notepad Plus,

00:05:14.720 --> 00:05:18.360
Plus or something, you
wouldn't be able to read.

00:05:19.930 --> 00:05:23.975
And you see the text
that's inside this file.

00:05:23.975 --> 00:05:26.480
So that's how we
essentially get stores

00:05:26.480 --> 00:05:28.580
the data inside the
object database.

00:05:28.580 --> 00:05:31.310
And understanding of this is
very important for you to

00:05:31.310 --> 00:05:33.200
understand how the topics we're

00:05:33.200 --> 00:05:36.179
going to discuss and
coming chapters.
