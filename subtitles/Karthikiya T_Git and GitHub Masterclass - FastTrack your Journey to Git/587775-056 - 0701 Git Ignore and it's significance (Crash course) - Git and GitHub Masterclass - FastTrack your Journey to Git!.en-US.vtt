WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.705
Let us talk about gitignore
and its significance.

00:00:03.705 --> 00:00:05.250
There might be certain set of

00:00:05.250 --> 00:00:06.690
files which you do not want to

00:00:06.690 --> 00:00:08.820
commit or you do not want them

00:00:08.820 --> 00:00:11.295
to be available for others
to download and use.

00:00:11.295 --> 00:00:14.475
Some of the examples of
such files are as follows.

00:00:14.475 --> 00:00:16.260
We might have log files that

00:00:16.260 --> 00:00:18.015
are generated during runtime.

00:00:18.015 --> 00:00:21.180
And obviously we do not want
to commit them and make them

00:00:21.180 --> 00:00:22.920
available in
centralized repository

00:00:22.920 --> 00:00:24.480
for others to download.

00:00:24.480 --> 00:00:27.195
Similarly, we might
have compiled code like

00:00:27.195 --> 00:00:30.509
dot class files or dot
p-y, C files, etc.

00:00:30.509 --> 00:00:33.570
Or you might have local
dependency folders like

00:00:33.570 --> 00:00:36.900
Node modules in case
off node projects.

00:00:36.900 --> 00:00:39.540
But we can ignore these
files by simply not

00:00:39.540 --> 00:00:42.505
staging them and not
committing them.

00:00:42.505 --> 00:00:45.230
But there might be
instances where people tend

00:00:45.230 --> 00:00:48.035
to accidentally commit
some of these files,

00:00:48.035 --> 00:00:51.380
thereby creating a mess
which is not intended.

00:00:51.380 --> 00:00:55.055
So gitignore file
comes in handy there.

00:00:55.055 --> 00:00:57.020
Gitignore file will allow you

00:00:57.020 --> 00:00:58.939
to specify certain patterns.

00:00:58.939 --> 00:01:01.430
And all the files and
folders that match with

00:01:01.430 --> 00:01:03.140
those patterns would be

00:01:03.140 --> 00:01:05.749
ignored for staging
of accommodating.

00:01:05.749 --> 00:01:07.970
If you try to stay as the
files that match with

00:01:07.970 --> 00:01:10.310
these patterns specified
in dot ignore file,

00:01:10.310 --> 00:01:12.425
you would see an error.

00:01:12.425 --> 00:01:13.880
Let's take a look at a couple of

00:01:13.880 --> 00:01:16.595
examples of such patterns.

00:01:16.595 --> 00:01:19.670
When you say star dot
log for instance,

00:01:19.670 --> 00:01:22.490
star is considered a
wildcard character.

00:01:22.490 --> 00:01:25.640
That means you can
have any file in

00:01:25.640 --> 00:01:28.760
your repository or your
project with any name.

00:01:28.760 --> 00:01:31.310
As long as it has
dot log extension,

00:01:31.310 --> 00:01:33.410
those files would be ignored.

00:01:33.410 --> 00:01:36.470
So here are some of the
examples of files that would be

00:01:36.470 --> 00:01:37.850
ignored when you have

00:01:37.850 --> 00:01:40.865
this pattern specified in
the doubt ignore file.

00:01:40.865 --> 00:01:44.330
We have added dot log in
the root directory and

00:01:44.330 --> 00:01:48.150
then info dot log
under logs folder.

00:01:48.150 --> 00:01:50.950
Both these files
would be ignored.

00:01:50.950 --> 00:01:54.970
Let's take a look at one
more example of a pattern.

00:01:54.970 --> 00:01:57.280
We have lungs slash.

00:01:57.280 --> 00:01:59.080
When you specify a slash,

00:01:59.080 --> 00:02:00.915
that would mean a directory.

00:02:00.915 --> 00:02:04.090
This pattern would essentially
ignore all the contents,

00:02:04.090 --> 00:02:07.315
including sub-directories
of all the folders

00:02:07.315 --> 00:02:09.355
with the name logs.

00:02:09.355 --> 00:02:11.740
And here are some
of the examples of

00:02:11.740 --> 00:02:14.425
files that would be
ignored with that pattern.

00:02:14.425 --> 00:02:16.555
Pause the video, take a second

00:02:16.555 --> 00:02:18.985
and try to understand this.

00:02:18.985 --> 00:02:22.555
All these files belong
to Logs directory.

00:02:22.555 --> 00:02:25.614
And so all these files
would be ignored.

00:02:25.614 --> 00:02:27.130
We cannot stage them,

00:02:27.130 --> 00:02:29.810
and so we cannot
even come at them.

00:02:29.830 --> 00:02:33.184
Let's say that you have
this project structure.

00:02:33.184 --> 00:02:36.125
Typically we tend to
have one dot ignore file

00:02:36.125 --> 00:02:37.760
and that would go inside

00:02:37.760 --> 00:02:39.695
the root directory
of the project.

00:02:39.695 --> 00:02:42.170
However, it doesn't prevent
you to have dot ignore

00:02:42.170 --> 00:02:44.870
files in the
subdirectories as well.

00:02:44.870 --> 00:02:47.510
The dot ignore file
and it's patterns

00:02:47.510 --> 00:02:50.299
is applied on the folder
where it is residing,

00:02:50.299 --> 00:02:52.400
including its sub folders.

00:02:52.400 --> 00:02:53.810
So all the patterns in

00:02:53.810 --> 00:02:55.580
the dot ignore file
residing in sub

00:02:55.580 --> 00:02:59.105
one folder are only
applicable on sub one folder.

00:02:59.105 --> 00:03:01.040
And all its subdirectories,

00:03:01.040 --> 00:03:02.915
including all the files.

00:03:02.915 --> 00:03:05.690
But it's not applicable
on its parent folder,

00:03:05.690 --> 00:03:08.180
which in this case
is my app folder.

00:03:08.180 --> 00:03:10.100
There might be instances
where you might

00:03:10.100 --> 00:03:12.575
have conflicts of patterns.

00:03:12.575 --> 00:03:15.620
For example, we could be
having a pattern that might

00:03:15.620 --> 00:03:18.665
be conflicting in these
two dot ignore files.

00:03:18.665 --> 00:03:22.130
In which case the patterns
of sub one folder will have

00:03:22.130 --> 00:03:26.435
higher precedence over the
patterns in my app folder.

00:03:26.435 --> 00:03:29.315
We're going to take a look at
an example of this up next.

00:03:29.315 --> 00:03:31.849
And thereby you will
have better clarity.

00:03:31.849 --> 00:03:33.920
If you have any
patterns that are

00:03:33.920 --> 00:03:36.080
not applicable for
the entire team,

00:03:36.080 --> 00:03:38.885
but are only applicable
in your local enrollment.

00:03:38.885 --> 00:03:41.675
You can mention the mass
part of the exclude file.

00:03:41.675 --> 00:03:43.730
And the fact that
this file belongs to

00:03:43.730 --> 00:03:45.590
dot git folder means

00:03:45.590 --> 00:03:47.255
that this cannot be worsened

00:03:47.255 --> 00:03:49.624
or you cannot commit
these changes.

00:03:49.624 --> 00:03:51.290
And for all the
patterns that are

00:03:51.290 --> 00:03:53.015
applicable for entire team,

00:03:53.015 --> 00:03:55.070
that's a dot ignore
file would come into

00:03:55.070 --> 00:03:57.469
picture and it is versioned,

00:03:57.469 --> 00:04:00.260
meaning that once you make an
update in dot ignore file,

00:04:00.260 --> 00:04:01.805
you would commit them

00:04:01.805 --> 00:04:03.710
and actually push
all those changes to

00:04:03.710 --> 00:04:05.705
the centralized
repository so that

00:04:05.705 --> 00:04:08.165
everybody else would download
the Dart ignore file.

00:04:08.165 --> 00:04:09.620
And all the file patterns in

00:04:09.620 --> 00:04:12.605
that file would be
ignored for everyone.

00:04:12.605 --> 00:04:14.480
So nobody would be
able to commit all of

00:04:14.480 --> 00:04:16.010
those files which are not

00:04:16.010 --> 00:04:18.095
meant to be shared
across the team.

00:04:18.095 --> 00:04:21.770
You can also specify global
patterns that are applicable

00:04:21.770 --> 00:04:22.790
in all the projects are

00:04:22.790 --> 00:04:25.850
repositories in your
local enrollment.

00:04:25.850 --> 00:04:28.820
You can do that by running

00:04:28.820 --> 00:04:31.580
this command that
you're seeing here.

00:04:31.580 --> 00:04:32.900
This would essentially add

00:04:32.900 --> 00:04:35.090
one additional configuration in

00:04:35.090 --> 00:04:38.765
the Git config file residing
in the user's directory.

00:04:38.765 --> 00:04:41.040
I'll see you next.
