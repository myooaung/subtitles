WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.920
Every time you try to push

00:00:01.920 --> 00:00:04.350
your local changes to
the remote repository,

00:00:04.350 --> 00:00:06.990
git will actually try to
merge our local changes

00:00:06.990 --> 00:00:09.720
with the same branch in
the remote repository.

00:00:09.720 --> 00:00:12.060
But it will do so
only if it results in

00:00:12.060 --> 00:00:14.340
fast forward merge
or else it will

00:00:14.340 --> 00:00:16.440
fail to push our
changes and then

00:00:16.440 --> 00:00:19.140
way to work around
it to get it done.

00:00:19.140 --> 00:00:21.690
I know this sounds confusing
and that's why I've

00:00:21.690 --> 00:00:25.170
dedicated this video to
talk about just that.

00:00:25.170 --> 00:00:27.630
And to explain things better.

00:00:27.630 --> 00:00:30.629
I'm actually going to do
everything from scratch.

00:00:30.629 --> 00:00:32.790
Let me go to senders account and

00:00:32.790 --> 00:00:35.440
create a brand new depository.

00:00:36.200 --> 00:00:38.400
Let's give it some random name.

00:00:38.400 --> 00:00:39.795
It doesn't really matter.

00:00:39.795 --> 00:00:42.235
We're going to keep it
temporarily anyway.

00:00:42.235 --> 00:00:43.880
And let's also add one of

00:00:43.880 --> 00:00:46.250
these files just
so that we'll have

00:00:46.250 --> 00:00:47.855
one commit in the main branch

00:00:47.855 --> 00:00:50.970
once after we create
this repository.

00:00:53.230 --> 00:01:01.580
Let me also add feature
one branch are created.

00:01:01.580 --> 00:01:04.130
And then let's make

00:01:04.130 --> 00:01:06.185
a commit and feature
one branch as well,

00:01:06.185 --> 00:01:09.000
maybe by editing
the read me file.

00:01:12.880 --> 00:01:17.150
Line one, feature one.

00:01:17.150 --> 00:01:19.715
Let's call it line to.

00:01:19.715 --> 00:01:24.090
It doesn't really matter.
Let's make the commit.

00:01:24.640 --> 00:01:27.920
Let's go to Settings and Add

00:01:27.920 --> 00:01:31.410
Mr. Luke as one of
the collaborators.

00:01:37.810 --> 00:01:43.050
Alright, now let's go
to Luke's account.

00:01:45.520 --> 00:01:48.110
So Luke has just received

00:01:48.110 --> 00:01:51.875
an invite to contribute
to that project.

00:01:51.875 --> 00:01:54.425
Is going to view that invitation

00:01:54.425 --> 00:01:57.740
and accept the invitation.

00:01:57.740 --> 00:02:01.880
And then he's going to
clone the project onto

00:02:01.880 --> 00:02:03.770
his local machine to start

00:02:03.770 --> 00:02:08.030
contributing. In
one of the folders.

00:02:08.030 --> 00:02:11.070
I'm going to open up Git Bash.

00:02:11.800 --> 00:02:17.940
And let's do git
clone this project.

00:02:20.530 --> 00:02:25.800
Let's go inside that folder.

00:02:25.900 --> 00:02:30.470
And if I do git branch,

00:02:30.470 --> 00:02:33.560
all you see that we have

00:02:33.560 --> 00:02:36.530
a remote Rachman branch of
Maine as well as feature one,

00:02:36.530 --> 00:02:39.740
but we do not have the local
branch off feature one.

00:02:39.740 --> 00:02:41.885
So in order to get it,

00:02:41.885 --> 00:02:43.970
Let's switch to feature

00:02:43.970 --> 00:02:47.780
one branch or checkout
to feature one branch.

00:02:47.780 --> 00:02:51.950
So at now will have that
local branch created.

00:02:51.950 --> 00:02:55.080
And currently we're in
feature one branch.

00:02:55.360 --> 00:02:59.300
Let's actually do rest

00:02:59.300 --> 00:03:01.370
of the stuff from
Visual Studio code.

00:03:01.370 --> 00:03:04.355
So let's open this
project with VS Code.

00:03:04.355 --> 00:03:06.350
And let's say that I
would like to make

00:03:06.350 --> 00:03:10.085
one comment in the new
feature one branch.

00:03:10.085 --> 00:03:13.265
So we are currently in
feature one branch.

00:03:13.265 --> 00:03:15.590
Let me maybe this
time add one file,

00:03:15.590 --> 00:03:18.350
let's call it one dot dx, dy.

00:03:18.350 --> 00:03:21.630
I go to Source Control,

00:03:26.040 --> 00:03:31.360
give a message to the commit
and commit our changes.

00:03:31.360 --> 00:03:33.670
Now imagine that
somebody else in

00:03:33.670 --> 00:03:36.550
the team who is also
working on the same branch,

00:03:36.550 --> 00:03:39.415
pushed few changes to
the remote repository

00:03:39.415 --> 00:03:42.955
on the same branch to
simulate that behavior.

00:03:42.955 --> 00:03:44.650
Let us go back to senders

00:03:44.650 --> 00:03:50.980
account and actually
make a commit in feature

00:03:50.980 --> 00:03:54.760
one branch as if somebody

00:03:54.760 --> 00:03:59.600
has pushed the changes
to this branch.

00:03:59.670 --> 00:04:04.620
Let me this term
add another file,

00:04:04.620 --> 00:04:07.505
maybe two dot TXT.

00:04:07.505 --> 00:04:10.740
And let's commit our changes.

00:04:12.250 --> 00:04:15.875
Now basically both are
local feature on branch

00:04:15.875 --> 00:04:19.625
and its corresponding remote
branch or not diverged.

00:04:19.625 --> 00:04:21.860
Let us see what would
happen if I tried

00:04:21.860 --> 00:04:26.190
to push our local changes
to the remote repository.

00:04:26.830 --> 00:04:30.140
Git push, we can

00:04:30.140 --> 00:04:32.780
specify the remote and
feature one branch.

00:04:32.780 --> 00:04:34.925
But if you just
use this command,

00:04:34.925 --> 00:04:37.700
it is going to be the
default behavior anyway.

00:04:37.700 --> 00:04:44.000
So let's push our changes and
see what's going to happen.

00:04:44.000 --> 00:04:45.830
As you can see, we've
got an error that says

00:04:45.830 --> 00:04:48.110
failed to push some refs to

00:04:48.110 --> 00:04:51.440
that repository and
updates for rejected

00:04:51.440 --> 00:04:52.940
because the remote contents

00:04:52.940 --> 00:04:55.865
work that you do
not have locally.

00:04:55.865 --> 00:04:58.460
So as I've said before,

00:04:58.460 --> 00:05:00.290
when we push our
local changes kit

00:05:00.290 --> 00:05:01.520
will actually try to merge or

00:05:01.520 --> 00:05:04.100
local changes with
the same branch

00:05:04.100 --> 00:05:05.720
in the remote repository.

00:05:05.720 --> 00:05:08.690
In this case, this is
not resulting in a fast

00:05:08.690 --> 00:05:10.160
forward merge and that's

00:05:10.160 --> 00:05:12.244
what gets didn't
push our changes.

00:05:12.244 --> 00:05:14.840
So what we can do here now is

00:05:14.840 --> 00:05:17.285
we can use the git pull command.

00:05:17.285 --> 00:05:19.640
And by default it will
also try to perform

00:05:19.640 --> 00:05:23.000
merge of these both branches
in our local enrollment.

00:05:23.000 --> 00:05:27.170
So let me try git pull
to pull the changes.

00:05:27.170 --> 00:05:29.480
We could also do the same from

00:05:29.480 --> 00:05:33.180
Visual Studio code. If you wish.

00:05:34.360 --> 00:05:41.820
For example, I can say git
pull from there or from here.

00:05:47.170 --> 00:05:51.060
Let's try to view the graph now.

00:05:52.540 --> 00:05:55.355
And as you can see,

00:05:55.355 --> 00:05:57.350
git has tried to perform

00:05:57.350 --> 00:06:00.950
merge feature one branch

00:06:00.950 --> 00:06:03.110
with our local
teacher one branch.

00:06:03.110 --> 00:06:06.275
So this is essentially
the merge commit.

00:06:06.275 --> 00:06:08.210
Now if you try to perform

00:06:08.210 --> 00:06:10.955
a push operation,
it should succeed.

00:06:10.955 --> 00:06:12.920
And then we should be
able to see this merge

00:06:12.920 --> 00:06:15.230
commit in the remote
repository as well.

00:06:15.230 --> 00:06:18.260
But if you'd like to get
rid of this merge commit,

00:06:18.260 --> 00:06:20.795
you already know what to do.

00:06:20.795 --> 00:06:23.555
Rebase is the answer.

00:06:23.555 --> 00:06:26.705
So let us try to rebase
our current branch,

00:06:26.705 --> 00:06:29.390
which is the feature
one branch on

00:06:29.390 --> 00:06:32.660
top of the recent change
of the remote repository.

00:06:32.660 --> 00:06:35.030
Essentially I'm trying to
rebase a local feature

00:06:35.030 --> 00:06:38.285
one branch with the
remote tracking branch,

00:06:38.285 --> 00:06:39.830
which is essentially
representing

00:06:39.830 --> 00:06:41.660
the remote feature one branch.

00:06:41.660 --> 00:06:43.535
So this is the commit that

00:06:43.535 --> 00:06:45.950
the tracking branches
pointing to.

00:06:45.950 --> 00:06:48.305
I'm going to right-click on it.

00:06:48.305 --> 00:06:50.735
And then I'm going to
choose this option rebase,

00:06:50.735 --> 00:06:53.405
current branch on
this committee.

00:06:53.405 --> 00:06:56.855
And let's rebase as
part of rebirth,

00:06:56.855 --> 00:06:59.915
as we've discussed before in
one of our previous lecture.

00:06:59.915 --> 00:07:03.140
It will also get rid of
all the merge commits.

00:07:03.140 --> 00:07:04.820
Because essentially
we're rewriting

00:07:04.820 --> 00:07:06.215
all the commit history.

00:07:06.215 --> 00:07:08.480
And this sort of
solves the problem

00:07:08.480 --> 00:07:11.030
of not having much commits.

00:07:11.030 --> 00:07:14.210
So now we have linear
commit history.

00:07:14.210 --> 00:07:18.995
We're good to go and
push our changes.

00:07:18.995 --> 00:07:19.985
This time.

00:07:19.985 --> 00:07:22.400
This is going to result
in fast forward merge

00:07:22.400 --> 00:07:23.780
of both local feature on

00:07:23.780 --> 00:07:25.700
branch and the remote
feature one branch.

00:07:25.700 --> 00:07:27.110
And so we shouldn't
have any sort

00:07:27.110 --> 00:07:29.420
of problem or whatsoever.

00:07:29.420 --> 00:07:31.970
But generally
speaking, you should

00:07:31.970 --> 00:07:34.140
be careful with
rebase operation.

00:07:34.140 --> 00:07:37.105
And there are certain
best practices to follow,

00:07:37.105 --> 00:07:38.680
which is what we're
going to discuss

00:07:38.680 --> 00:07:40.345
in upcoming lectures.

00:07:40.345 --> 00:07:43.435
There is no problem as such
in having much commit.

00:07:43.435 --> 00:07:46.600
You can also push your
merge comment if you wish.

00:07:46.600 --> 00:07:48.190
And in fact, it is one of

00:07:48.190 --> 00:07:50.200
the popular choices because

00:07:50.200 --> 00:07:52.225
rebase might actually
mess things up.

00:07:52.225 --> 00:07:53.845
Which is again,
something we'll talk

00:07:53.845 --> 00:07:56.380
about in upcoming lectures.

00:07:56.380 --> 00:08:00.770
But for now, we're good to
go and push our changes.

00:08:02.790 --> 00:08:08.589
And it is successful to go
to the remote repository.

00:08:08.589 --> 00:08:13.870
Now, switch to
feature one branch.

00:08:13.870 --> 00:08:17.190
Should be seeing
all those comments,

00:08:17.190 --> 00:08:21.920
including the local commit
that we had made earlier.

00:08:21.920 --> 00:08:24.600
I'll see you next.
