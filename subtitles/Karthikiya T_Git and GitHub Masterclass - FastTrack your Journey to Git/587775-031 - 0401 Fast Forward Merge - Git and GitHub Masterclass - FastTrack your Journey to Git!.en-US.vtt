WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.200
The goal of having a feature
or a bug fixed branch is to

00:00:04.200 --> 00:00:06.000
eventually merge
all those changes

00:00:06.000 --> 00:00:08.399
inside the mainstream
of evolution,

00:00:08.399 --> 00:00:11.295
which would typically
be the master branch.

00:00:11.295 --> 00:00:13.155
In this video, let's talk about

00:00:13.155 --> 00:00:15.495
what is fast forward merge.

00:00:15.495 --> 00:00:18.000
Imagine that you
have a project with

00:00:18.000 --> 00:00:21.090
master branch and with
these three comments.

00:00:21.090 --> 00:00:22.965
And it is at this point in time,

00:00:22.965 --> 00:00:25.410
I have decided to
work on feature one.

00:00:25.410 --> 00:00:27.705
And so I have created
a feature one branch

00:00:27.705 --> 00:00:30.345
and I've also made a
bunch of commits in it.

00:00:30.345 --> 00:00:32.070
Now let's say that we don't have

00:00:32.070 --> 00:00:34.545
any other additional
comments in master branch.

00:00:34.545 --> 00:00:37.750
Once after I have created
the feature branch,

00:00:37.750 --> 00:00:39.845
Let's say that I'm
done with all the work

00:00:39.845 --> 00:00:41.990
I have to do inside the
feature one branch.

00:00:41.990 --> 00:00:44.030
I have tested all those changes.

00:00:44.030 --> 00:00:46.550
And I now want to
have all the feature

00:00:46.550 --> 00:00:49.760
one branch changes inside
the master branch.

00:00:49.760 --> 00:00:52.400
Or in other words, I
want to merge feature

00:00:52.400 --> 00:00:55.760
one branch into
the master branch.

00:00:55.760 --> 00:00:57.710
Now a question to you,

00:00:57.710 --> 00:01:01.100
what can I do in here
so that master branch,

00:01:01.100 --> 00:01:03.695
we'll have all the changes
of feature one branch.

00:01:03.695 --> 00:01:06.410
Pause the video and
try to figure it out.

00:01:06.410 --> 00:01:09.125
Well, let me give you a clue.

00:01:09.125 --> 00:01:11.870
I'm going to rewrite
this diagram from

00:01:11.870 --> 00:01:15.410
this to this. I've done nothing.

00:01:15.410 --> 00:01:19.760
I just lifted the feature
one branch but upwards.

00:01:19.760 --> 00:01:21.800
But this should give
you some clue as to

00:01:21.800 --> 00:01:23.630
what we can do to have

00:01:23.630 --> 00:01:25.520
all the changes of
feature one inside

00:01:25.520 --> 00:01:29.070
the master branch.
Give it a try.

00:01:29.170 --> 00:01:32.345
Well, I'll give
you another clue.

00:01:32.345 --> 00:01:35.945
We're calling this a fast
forward merge for the reason.

00:01:35.945 --> 00:01:39.390
What's the FastForward
part in that?

00:01:39.460 --> 00:01:42.110
Well, how about we asked

00:01:42.110 --> 00:01:44.030
Master to point to

00:01:44.030 --> 00:01:46.445
the latest commit or
feature one branch.

00:01:46.445 --> 00:01:48.560
Wouldn't it solve the problem?

00:01:48.560 --> 00:01:50.660
Essentially, master
branch has passed

00:01:50.660 --> 00:01:53.359
forwarded to bunch of comets.

00:01:53.359 --> 00:01:56.090
Master branch is now
pointing to a commit

00:01:56.090 --> 00:01:58.340
which has a snapshot that is

00:01:58.340 --> 00:01:59.630
pointing to all the changes of

00:01:59.630 --> 00:02:03.695
master branch plus all the
changes in feature one branch.

00:02:03.695 --> 00:02:06.320
And since we're done with
feature one branch and

00:02:06.320 --> 00:02:09.095
I've merged all those changes
inside the master branch.

00:02:09.095 --> 00:02:13.115
We can go ahead and delete
this branch altogether.

00:02:13.115 --> 00:02:16.910
Now fast forward merge would
only work if you do not make

00:02:16.910 --> 00:02:18.935
any comments inside
the master branch

00:02:18.935 --> 00:02:21.875
after creating the
feature branch.

00:02:21.875 --> 00:02:24.590
Now, another question to you.

00:02:24.590 --> 00:02:26.450
We've just seen how we can merge

00:02:26.450 --> 00:02:28.175
all the changes of
feature one branch

00:02:28.175 --> 00:02:31.670
into master branch using
fast-forward merge.

00:02:31.670 --> 00:02:34.955
Now would it make sense to
say that I wanted to merge

00:02:34.955 --> 00:02:37.100
all the changes of master branch

00:02:37.100 --> 00:02:39.755
into the feature one branch.

00:02:39.755 --> 00:02:41.975
It doesn't make sense

00:02:41.975 --> 00:02:43.700
because feature one
branch is already

00:02:43.700 --> 00:02:45.605
having all the commits

00:02:45.605 --> 00:02:48.440
are all the changes
of master branch.

00:02:48.440 --> 00:02:50.930
However, if you've
made any comments in

00:02:50.930 --> 00:02:53.690
master branch after you
created the feature branch,

00:02:53.690 --> 00:02:55.970
that's a different
story altogether.

00:02:55.970 --> 00:02:59.075
And we're going to talk
about it in coming lectures.

00:02:59.075 --> 00:03:00.845
In the next video though,

00:03:00.845 --> 00:03:03.559
we're going to take a look
at all this inaction.

00:03:03.559 --> 00:03:06.150
See you in the next one.
