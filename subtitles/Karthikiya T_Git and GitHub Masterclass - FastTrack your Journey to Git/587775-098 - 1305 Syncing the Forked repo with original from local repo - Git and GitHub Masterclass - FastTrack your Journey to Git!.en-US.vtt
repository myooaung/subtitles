WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.640
Let us take a look at
one another way to

00:00:02.640 --> 00:00:04.560
keep the forked repository and

00:00:04.560 --> 00:00:06.645
the local depository up-to-date

00:00:06.645 --> 00:00:09.165
with the original depository.

00:00:09.165 --> 00:00:12.150
For that, let us quickly
make one more comment.

00:00:12.150 --> 00:00:13.785
In the original depository,

00:00:13.785 --> 00:00:15.870
which is on bus window.

00:00:15.870 --> 00:00:18.330
Just to simulate the
behavior of having

00:00:18.330 --> 00:00:21.345
new updates in the main branch.

00:00:21.345 --> 00:00:24.580
I'm going to add a new file,

00:00:26.030 --> 00:00:28.485
something of that sort.

00:00:28.485 --> 00:00:31.545
Once again, sorry
for the funny names.

00:00:31.545 --> 00:00:34.000
Come with the new file.

00:00:34.420 --> 00:00:37.220
This time, what
we're going to do

00:00:37.220 --> 00:00:40.235
is we're going to actually pull

00:00:40.235 --> 00:00:43.730
all those changes into a local
repository and then push

00:00:43.730 --> 00:00:49.160
them to our forked repository.

00:00:49.160 --> 00:00:51.875
Let's see how we can do that.

00:00:51.875 --> 00:00:54.095
Let's do it from Git Bash.

00:00:54.095 --> 00:00:55.400
You can also do the same from

00:00:55.400 --> 00:00:57.845
Visual Studio code if you wish.

00:00:57.845 --> 00:01:00.260
First things first,
we need to pull

00:01:00.260 --> 00:01:02.615
in the changes from the
original Depository.

00:01:02.615 --> 00:01:04.820
How are we going to do that?

00:01:04.820 --> 00:01:07.265
If I say git pull,

00:01:07.265 --> 00:01:11.015
this would actually pull
from the origin remote,

00:01:11.015 --> 00:01:13.625
which is the forked repository.

00:01:13.625 --> 00:01:15.260
But we actually want to pull it

00:01:15.260 --> 00:01:17.150
from the original depository.

00:01:17.150 --> 00:01:19.310
How are we going to do that?

00:01:19.310 --> 00:01:22.685
First of all, we need
to add that remote.

00:01:22.685 --> 00:01:26.255
If I say git remote hyphen v,

00:01:26.255 --> 00:01:28.400
You see that we have
origin demote and

00:01:28.400 --> 00:01:30.590
is pointing to the
forked repository.

00:01:30.590 --> 00:01:37.025
Let us now add another
remote, git, remote add.

00:01:37.025 --> 00:01:40.550
And I'm going to
name it as upstream.

00:01:40.550 --> 00:01:42.290
As I've mentioned before.

00:01:42.290 --> 00:01:46.355
We're going to call the original
depository as upstream.

00:01:46.355 --> 00:01:48.230
And here we're going to provide

00:01:48.230 --> 00:01:52.410
the URL of the
original depository.

00:01:52.900 --> 00:01:56.195
So let me just copy this here.

00:01:56.195 --> 00:01:59.430
I can also use this
link if I wish.

00:02:03.220 --> 00:02:08.735
This command has just added
the upstream repository.

00:02:08.735 --> 00:02:10.910
If I run this
command once again,

00:02:10.910 --> 00:02:14.839
you see that we now
have couple of remarks.

00:02:14.839 --> 00:02:16.610
Now let us try to
pull in the changes

00:02:16.610 --> 00:02:19.220
from the upstream repository.

00:02:19.220 --> 00:02:26.750
Git pull then upstream main.

00:02:26.750 --> 00:02:30.780
So we want to keep our
main branch up to date.

00:02:33.160 --> 00:02:37.530
This has pulled in
all the changes.

00:02:37.570 --> 00:02:41.699
This is the file that
we've just created.

00:02:41.740 --> 00:02:46.325
You can see that in the
Visual Studio Code as well.

00:02:46.325 --> 00:02:49.970
However, these changes
are not yet available in

00:02:49.970 --> 00:02:53.690
our forked repository
or the origin server.

00:02:53.690 --> 00:02:58.175
So guess what we need
to do next. Git push.

00:02:58.175 --> 00:03:01.880
And this should push this

00:03:01.880 --> 00:03:05.945
new commits to the
forked repository.

00:03:05.945 --> 00:03:12.785
If you go to Luke's account
now and reload the page,

00:03:12.785 --> 00:03:15.990
you're going to
see those updates.
