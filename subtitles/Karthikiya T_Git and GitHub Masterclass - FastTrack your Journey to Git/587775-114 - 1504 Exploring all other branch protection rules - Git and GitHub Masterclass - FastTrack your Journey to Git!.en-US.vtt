WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.340
Let's talk about
all the remaining

00:00:02.340 --> 00:00:04.560
branch protection rules in here.

00:00:04.560 --> 00:00:06.389
These are pretty
easy to understand

00:00:06.389 --> 00:00:08.340
and already straightforward.

00:00:08.340 --> 00:00:12.285
And so we can fit all
these in this video alone.

00:00:12.285 --> 00:00:14.490
Exit this branch prediction rule

00:00:14.490 --> 00:00:17.175
would say is required
signed combats.

00:00:17.175 --> 00:00:18.900
This actually requires you to

00:00:18.900 --> 00:00:20.745
understand what are
assigned commits,

00:00:20.745 --> 00:00:24.195
how we can generate private
and public keys for signing,

00:00:24.195 --> 00:00:26.505
encryption,
decryption, et cetera.

00:00:26.505 --> 00:00:29.070
So this deserts at
chapter of its own.

00:00:29.070 --> 00:00:32.010
So we're going to talk
about this in next chapter.

00:00:32.010 --> 00:00:35.925
But let's wrap up this chapter
on branch prediction rule

00:00:35.925 --> 00:00:38.250
after quickly touching on

00:00:38.250 --> 00:00:42.275
all the other options
we have here.

00:00:42.275 --> 00:00:46.554
So we have this option that
says required linear history.

00:00:46.554 --> 00:00:48.190
And as the name suggest,

00:00:48.190 --> 00:00:51.415
it doesn't allow us to
have merge commits.

00:00:51.415 --> 00:00:52.945
If you have a merge commit,

00:00:52.945 --> 00:00:56.035
we would no longer be having
linear commit history.

00:00:56.035 --> 00:00:59.140
So let's say that I have
enabled this option.

00:00:59.140 --> 00:01:01.345
Let me save it real quick.

00:01:01.345 --> 00:01:08.750
If you go back to the pull
requests, let me click here.

00:01:09.780 --> 00:01:14.060
This is the pull requests
we had raised earlier.

00:01:14.100 --> 00:01:19.210
Now if I choose this option
to create a merge commit,

00:01:19.210 --> 00:01:21.850
you're going to see
this message saying,

00:01:21.850 --> 00:01:24.975
the Merge branch
requires linear history.

00:01:24.975 --> 00:01:29.640
That's because we had
enabled that option.

00:01:29.950 --> 00:01:32.090
But still we're able to see

00:01:32.090 --> 00:01:34.655
this option to
merge pull request.

00:01:34.655 --> 00:01:36.470
That's because I'm actually

00:01:36.470 --> 00:01:38.195
doing this from
this under second,

00:01:38.195 --> 00:01:40.790
who is the owner
of the repository?

00:01:40.790 --> 00:01:44.720
Let me edit this branch
prediction rule.

00:01:44.720 --> 00:01:49.325
We have yet another option
to not let that happen.

00:01:49.325 --> 00:01:51.260
So here it is.

00:01:51.260 --> 00:01:54.080
If we enable this option that

00:01:54.080 --> 00:01:57.545
says do not allow bypassing,
they're both settings.

00:01:57.545 --> 00:01:59.120
And the description of it says

00:01:59.120 --> 00:02:01.280
the elbow settings will apply to

00:02:01.280 --> 00:02:03.470
admins and custom roles with

00:02:03.470 --> 00:02:06.740
the bypass branch
protections permission.

00:02:06.740 --> 00:02:09.020
What this means is so far

00:02:09.020 --> 00:02:11.180
all the branch
production rules are

00:02:11.180 --> 00:02:13.369
not really applied for admins,

00:02:13.369 --> 00:02:15.230
are not really enforced for

00:02:15.230 --> 00:02:18.200
admins or to the owners
of the repository.

00:02:18.200 --> 00:02:19.775
By enabling this option,

00:02:19.775 --> 00:02:22.025
admins are the owner
of the repository,

00:02:22.025 --> 00:02:24.875
cannot really bypass the
branch production rules.

00:02:24.875 --> 00:02:28.550
Let me enable this option
and save the changes.

00:02:28.550 --> 00:02:32.550
Now if I go back
to pull request,

00:02:33.190 --> 00:02:36.590
Sender being the admin
of the repository,

00:02:36.590 --> 00:02:39.650
would no longer be able
to choose this option.

00:02:39.650 --> 00:02:43.530
This got grayed out. I
cannot click it either.

00:02:47.440 --> 00:02:51.635
If you take the organization
license of GitHub,

00:02:51.635 --> 00:02:54.875
you should be able to
create team of individuals.

00:02:54.875 --> 00:02:56.300
Some of them are Edmond,

00:02:56.300 --> 00:02:58.325
Some of them are maintainers.

00:02:58.325 --> 00:03:01.430
They might have different roles.

00:03:01.430 --> 00:03:05.465
And by enabling this option
year-old's enforcing

00:03:05.465 --> 00:03:07.850
branch prediction
rules given for

00:03:07.850 --> 00:03:10.940
admins are the maintenance
of the repository.

00:03:10.940 --> 00:03:12.710
In-between these two options,

00:03:12.710 --> 00:03:14.720
we have this option
that says required

00:03:14.720 --> 00:03:17.660
deployments to succeed
before merging.

00:03:17.660 --> 00:03:19.370
Well, you can use this rule to

00:03:19.370 --> 00:03:22.205
ensure that changes are
successfully deployed

00:03:22.205 --> 00:03:25.850
without an issues to this
staging or the testing and

00:03:25.850 --> 00:03:27.770
Romans before the changes can

00:03:27.770 --> 00:03:30.050
be merged to the default branch.

00:03:30.050 --> 00:03:31.880
Now this depends on
your organization

00:03:31.880 --> 00:03:33.380
that tools that you're using.

00:03:33.380 --> 00:03:36.785
Currently we do not have any
deployment and Roman setup.

00:03:36.785 --> 00:03:38.900
So we really cannot
demonstrate this.

00:03:38.900 --> 00:03:41.225
Maybe this is topic
of another course.

00:03:41.225 --> 00:03:43.085
So we're going to skip that.

00:03:43.085 --> 00:03:45.155
And we're left with couple of

00:03:45.155 --> 00:03:47.330
branch prediction rule options.

00:03:47.330 --> 00:03:49.955
And these options are applicable

00:03:49.955 --> 00:03:53.195
to everyone including
administrators.

00:03:53.195 --> 00:03:56.570
Hello, force pushes would mean

00:03:56.570 --> 00:03:58.220
that we want to load

00:03:58.220 --> 00:04:00.770
the force pushes to the
protected branches.

00:04:00.770 --> 00:04:03.755
And we can even choose
who can do that.

00:04:03.755 --> 00:04:06.860
Whether do we want to allow
everyone with push axis,

00:04:06.860 --> 00:04:08.930
like collaborators for instance?

00:04:08.930 --> 00:04:10.579
Or do we want to specifically

00:04:10.579 --> 00:04:13.865
choose whom we want
a low force pushes?

00:04:13.865 --> 00:04:15.710
For example, Luke
is already added

00:04:15.710 --> 00:04:18.480
as one of the collaborators.

00:04:19.600 --> 00:04:22.460
I can choose him,

00:04:22.460 --> 00:04:25.130
for instance, if I wanted to.

00:04:25.130 --> 00:04:28.880
And finally, we have
a load deletions.

00:04:28.880 --> 00:04:32.060
So by enabling this option,

00:04:32.060 --> 00:04:36.230
we're allowing people with
Bush Axis to be able to

00:04:36.230 --> 00:04:40.895
delete the branches that
match with this pattern.

00:04:40.895 --> 00:04:42.800
In this case, we're saying

00:04:42.800 --> 00:04:44.570
all this branch
prediction rules are

00:04:44.570 --> 00:04:47.360
applicable for main branch.

00:04:47.360 --> 00:04:49.745
And so by enabling this option,

00:04:49.745 --> 00:04:52.880
we're allowing people with
push access to be able to

00:04:52.880 --> 00:04:56.495
delete this particular
branch in this case.

00:04:56.495 --> 00:05:00.805
So that's all about
branch protection rules.

00:05:00.805 --> 00:05:04.220
Once again, we're going
to explode this option.

00:05:04.220 --> 00:05:09.810
In next chapter.
I'll see you next.
