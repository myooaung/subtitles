WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.850
So what's in there had
started to notice is that

00:00:02.850 --> 00:00:05.550
he didn't have backup
Office client websites.

00:00:05.550 --> 00:00:08.040
If you had a backup
of their websites,

00:00:08.040 --> 00:00:10.050
he will have opportunity to

00:00:10.050 --> 00:00:12.060
either go back to previous
working version of

00:00:12.060 --> 00:00:14.160
their website or at least n lies

00:00:14.160 --> 00:00:17.220
the problem by comparing
one version with the other.

00:00:17.220 --> 00:00:19.695
Cylinder came up with
a brilliant idea

00:00:19.695 --> 00:00:21.749
to sort of solve this problem.

00:00:21.749 --> 00:00:25.350
What you started to do
now is, for example,

00:00:25.350 --> 00:00:27.105
let's consider the
investment app

00:00:27.105 --> 00:00:29.160
that we were talking about.

00:00:29.160 --> 00:00:32.100
Cinder creates a folder
called investment

00:00:32.100 --> 00:00:34.950
app V1 and 14th March,

00:00:34.950 --> 00:00:36.510
which is the date on which

00:00:36.510 --> 00:00:39.430
this project was
delivered to customer.

00:00:39.430 --> 00:00:41.570
And then assume
that Bob had asked

00:00:41.570 --> 00:00:43.744
him to introduce couple
of new features.

00:00:43.744 --> 00:00:45.560
This time cylinder
is not going to make

00:00:45.560 --> 00:00:47.810
any changes in this
portion of the project.

00:00:47.810 --> 00:00:51.110
Instead is going to make
a copy of that project,

00:00:51.110 --> 00:00:55.220
name it as V2 and introduce
all the new features.

00:00:55.220 --> 00:00:57.590
And similarly, if Bob
were to ask some there

00:00:57.590 --> 00:00:59.780
to add even more features,

00:00:59.780 --> 00:01:01.190
he's going to make a copy of

00:01:01.190 --> 00:01:03.185
the latest version
of his project,

00:01:03.185 --> 00:01:05.840
name it as V3 for instance.

00:01:05.840 --> 00:01:08.270
And then make all the
necessary changes,

00:01:08.270 --> 00:01:09.800
so on and so forth.

00:01:09.800 --> 00:01:12.110
So every time he
introduced a new feature

00:01:12.110 --> 00:01:14.225
or introduce a huge
chunk of code,

00:01:14.225 --> 00:01:16.700
is just simply going
to copy the folder or

00:01:16.700 --> 00:01:19.295
the project and make
necessary changes.

00:01:19.295 --> 00:01:20.540
This time.

00:01:20.540 --> 00:01:23.270
Again, let's assume the
same case where Bob was

00:01:23.270 --> 00:01:25.670
complaining that
Washington before

00:01:25.670 --> 00:01:27.845
is not working as expected,

00:01:27.845 --> 00:01:30.605
and that he wished to go
back to Washington V3,

00:01:30.605 --> 00:01:33.170
which was working fine
so soon that doesn't

00:01:33.170 --> 00:01:36.050
have to take their foot off
reverting all the changes.

00:01:36.050 --> 00:01:39.200
He could just remove the
V4 folder from the server

00:01:39.200 --> 00:01:40.700
and replace it with

00:01:40.700 --> 00:01:43.835
V3 working version
of be-bops website.

00:01:43.835 --> 00:01:47.120
Or if Bob had insisted
him to fix the bug,

00:01:47.120 --> 00:01:50.000
that can actually compare
the files between v3 and

00:01:50.000 --> 00:01:53.000
v4 using a comparing software
like beyond compare,

00:01:53.000 --> 00:01:55.940
for instance, pinpoint
exactly the changes

00:01:55.940 --> 00:01:57.410
that were newly introduced,

00:01:57.410 --> 00:02:00.695
analyze the problem,
and fix the problem.

00:02:00.695 --> 00:02:03.425
While this has somewhat
solve the problem,

00:02:03.425 --> 00:02:05.510
suddenly started to
realize that this is

00:02:05.510 --> 00:02:08.210
taking up more
memory than needed.

00:02:08.210 --> 00:02:10.640
Because sender is not
only making a copy

00:02:10.640 --> 00:02:13.610
of all the files that
he had modified,

00:02:13.610 --> 00:02:16.505
but also the files
that he never touched.

00:02:16.505 --> 00:02:19.310
So this is going to take
up a lot of space and it's

00:02:19.310 --> 00:02:22.640
becoming really hard
for similar to manage.

00:02:22.640 --> 00:02:25.925
So suddenly came up with
a much better idea,

00:02:25.925 --> 00:02:28.745
which is actually
to create versions

00:02:28.745 --> 00:02:32.915
of the files inside the project.
What do I mean by that?

00:02:32.915 --> 00:02:34.940
So assume that you
once again have

00:02:34.940 --> 00:02:37.430
a project like this
with all these files.

00:02:37.430 --> 00:02:40.190
Now of course in this case
I named them as HTML,

00:02:40.190 --> 00:02:41.990
but this could be any file,

00:02:41.990 --> 00:02:43.400
this could be an image file,

00:02:43.400 --> 00:02:47.045
CSS file, JavaScript file,
java file, whatever.

00:02:47.045 --> 00:02:48.620
For the sake of this example,

00:02:48.620 --> 00:02:50.525
assume that we have
all these files.

00:02:50.525 --> 00:02:53.180
Now, assume that
center is introducing

00:02:53.180 --> 00:02:56.015
a new feature which
has something to do

00:02:56.015 --> 00:03:00.140
with file B and C. So instead
of creating a copy of

00:03:00.140 --> 00:03:02.990
the entire folder that
is going to make a copy

00:03:02.990 --> 00:03:06.050
of the latest version
of these two files.

00:03:06.050 --> 00:03:09.530
This is going to make a copy
of file B and file see,

00:03:09.530 --> 00:03:12.710
introduce all the code
required for feature one.

00:03:12.710 --> 00:03:15.420
And if you want to
introduce another feature,

00:03:15.420 --> 00:03:17.140
and this time assume that

00:03:17.140 --> 00:03:19.180
the changes needs to
go and file the file,

00:03:19.180 --> 00:03:21.790
see some of that is
going to simply make

00:03:21.790 --> 00:03:25.000
a copy of the latest
versions of file a and file.

00:03:25.000 --> 00:03:28.330
See, for example, in this case
it's going to make a copy

00:03:28.330 --> 00:03:32.200
of file here as well
as a copy of file C,

00:03:32.200 --> 00:03:35.665
version one, which has the
latest version of file C.

00:03:35.665 --> 00:03:39.385
And then he's going to introduce
the new feature in it.

00:03:39.385 --> 00:03:41.560
Once I can assume
that Bob had asked

00:03:41.560 --> 00:03:43.810
sunder to remove feature to

00:03:43.810 --> 00:03:46.030
altogether and
that we wish to go

00:03:46.030 --> 00:03:48.625
back to earlier version
of his walking website.

00:03:48.625 --> 00:03:51.055
Guess Watson, they
can just get it off

00:03:51.055 --> 00:03:53.200
the V2 files and only

00:03:53.200 --> 00:03:56.305
keep the V1 files
as simple as that.

00:03:56.305 --> 00:03:59.420
And if you want to
fix the bug instead,

00:03:59.420 --> 00:04:01.640
he can just compare the version

00:04:01.640 --> 00:04:04.010
one file with
Washington to File and

00:04:04.010 --> 00:04:06.620
pinpoint exactly
what's going wrong by

00:04:06.620 --> 00:04:09.935
using a comparing software
like Beyond Compare.

00:04:09.935 --> 00:04:12.380
However, Watson they started to

00:04:12.380 --> 00:04:14.330
notice is that even this is not

00:04:14.330 --> 00:04:17.000
feasible because it is
becoming incredibly

00:04:17.000 --> 00:04:20.555
complex to manage
multiple client projects.

00:04:20.555 --> 00:04:24.470
For example, sender needs to
rename all these files back

00:04:24.470 --> 00:04:26.000
to their original names before

00:04:26.000 --> 00:04:28.355
deploying them to
the remote server.

00:04:28.355 --> 00:04:30.200
And he's also started to notice

00:04:30.200 --> 00:04:32.720
that his files are
ever-increasing,

00:04:32.720 --> 00:04:34.490
which is creating a problem not

00:04:34.490 --> 00:04:36.635
only in terms of
organising the files,

00:04:36.635 --> 00:04:39.575
but also it is taking
a lot of space.

00:04:39.575 --> 00:04:43.190
At this time since I've
started to realize that

00:04:43.190 --> 00:04:46.730
it's time to let the
software do the job for him.

00:04:46.730 --> 00:04:49.415
A software that will
manage versions

00:04:49.415 --> 00:04:52.460
as software that will
track historical changes,

00:04:52.460 --> 00:04:57.290
create backups, and allow
reversal of changes, etc.

00:04:57.290 --> 00:05:01.055
This is the core reason
why somebody somewhere

00:05:01.055 --> 00:05:05.180
had to come up with the
software that will do this job.

00:05:05.180 --> 00:05:09.125
And that's the birth of get.

00:05:09.125 --> 00:05:13.505
Now, get does much
more than just this.

00:05:13.505 --> 00:05:15.350
But I'm not talking
about them right now

00:05:15.350 --> 00:05:17.510
because at this point in time,

00:05:17.510 --> 00:05:20.450
you don't know what is GitHub
team collaboration branch

00:05:20.450 --> 00:05:22.325
in merging and stuff like that.

00:05:22.325 --> 00:05:25.580
I'm going to preserve them
for upcoming lectures.

00:05:25.580 --> 00:05:27.170
And I'm pretty
sure you must also

00:05:27.170 --> 00:05:29.060
be having questions like,

00:05:29.060 --> 00:05:31.355
what is GitHub or GitLab,

00:05:31.355 --> 00:05:33.440
what is branching, etc.

00:05:33.440 --> 00:05:35.210
Well, you just have
to wait for that.

00:05:35.210 --> 00:05:37.295
I cannot fit everything
under single video,

00:05:37.295 --> 00:05:40.040
how patients and watch
the rest of the course.

00:05:40.040 --> 00:05:41.270
And you'll find answers to

00:05:41.270 --> 00:05:43.610
all the questions
you might be having.

00:05:43.610 --> 00:05:45.695
But truth be told.

00:05:45.695 --> 00:05:47.450
I like how soon
the maintenance is

00:05:47.450 --> 00:05:49.220
smiley expression
all throughout.

00:05:49.220 --> 00:05:51.740
No matter how his life
is turning around him.

00:05:51.740 --> 00:05:53.690
Something to learn
from, isn't it?

00:05:53.690 --> 00:05:56.420
What did you just say? No. No.

00:05:56.420 --> 00:05:58.910
I'm just saying that you have
a great sense of fashion.

00:05:58.910 --> 00:06:00.779
Okay.
