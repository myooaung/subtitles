WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.360
Let us see how we can
restrict Luke from merging

00:00:03.360 --> 00:00:05.190
the code unless there is

00:00:05.190 --> 00:00:08.430
at least one review
done by somebody else.

00:00:08.430 --> 00:00:12.490
For that, let me go to
some dusk GitHub account.

00:00:13.090 --> 00:00:15.945
I'm going to go to
the settings section

00:00:15.945 --> 00:00:18.250
of this repository.

00:00:19.030 --> 00:00:22.205
I got two branches section.

00:00:22.205 --> 00:00:24.560
And here I'm actually going to

00:00:24.560 --> 00:00:28.115
add so-called branch
protection rules.

00:00:28.115 --> 00:00:31.145
When I add at least one
branch prediction rule

00:00:31.145 --> 00:00:32.645
for a particular branch,

00:00:32.645 --> 00:00:35.975
that branch is called
as a protected branch.

00:00:35.975 --> 00:00:37.910
All the branches
where we do not have

00:00:37.910 --> 00:00:41.810
any branch prediction rules
or non-protected branches.

00:00:41.810 --> 00:00:43.730
Just be aware of
those terminologies.

00:00:43.730 --> 00:00:46.325
They will come in
handy in a while.

00:00:46.325 --> 00:00:48.725
So let me click on
this button that says

00:00:48.725 --> 00:00:51.870
Add Branch production rules.

00:00:52.120 --> 00:00:56.120
Here we can specify
the branch pattern.

00:00:56.120 --> 00:00:58.895
In this case, I'm just
simply going to say main.

00:00:58.895 --> 00:01:00.890
So all the branches
that match with

00:01:00.890 --> 00:01:04.135
this pattern would have

00:01:04.135 --> 00:01:07.070
all these production
rules applied.

00:01:07.920 --> 00:01:11.650
Of course, only the rules
that we enabled here would be

00:01:11.650 --> 00:01:15.160
applied on the branches that
match with that pattern.

00:01:15.160 --> 00:01:17.350
Now, we're going to
talk about some of

00:01:17.350 --> 00:01:19.420
these rules in
upcoming lectures.

00:01:19.420 --> 00:01:23.515
But for now, I would like
to put a restriction that

00:01:23.515 --> 00:01:25.480
atlas one review should be done

00:01:25.480 --> 00:01:28.825
before merging changes
into the main branch.

00:01:28.825 --> 00:01:31.300
So I'm going to enable
this option that says

00:01:31.300 --> 00:01:33.865
required a pull request
before merging.

00:01:33.865 --> 00:01:35.950
And the description of it says,

00:01:35.950 --> 00:01:37.795
when we enable this option,

00:01:37.795 --> 00:01:41.680
Hall commits must be made
to a non-protected branch.

00:01:41.680 --> 00:01:45.390
So in this case we're
targeting main branch.

00:01:45.390 --> 00:01:47.945
I'm going to apply this
branch protection rule

00:01:47.945 --> 00:01:49.475
on main branch.

00:01:49.475 --> 00:01:51.320
So when enable this,

00:01:51.320 --> 00:01:53.090
nobody would be able to commit

00:01:53.090 --> 00:01:54.875
directly in the main branch.

00:01:54.875 --> 00:01:57.230
What they have to
do is they have to

00:01:57.230 --> 00:02:00.230
first commit all the changes
in non-protected branch.

00:02:00.230 --> 00:02:04.010
For example, feature one
branch which is not protected,

00:02:04.010 --> 00:02:06.725
and then raise a pull request

00:02:06.725 --> 00:02:09.350
to merge all those changes
into the main branch.

00:02:09.350 --> 00:02:12.060
That's what this
option is saying.

00:02:12.280 --> 00:02:14.705
If this sounds confusing,

00:02:14.705 --> 00:02:16.820
I would request you to
just go back and watch

00:02:16.820 --> 00:02:19.985
this video once again
until you understand.

00:02:19.985 --> 00:02:21.680
And then we have this option

00:02:21.680 --> 00:02:23.660
that says required approvals.

00:02:23.660 --> 00:02:26.660
And here we get to choose
number of approvals.

00:02:26.660 --> 00:02:29.810
We need our number of
code review approvals we

00:02:29.810 --> 00:02:31.700
need before we can merge

00:02:31.700 --> 00:02:35.539
those changes under
the main branch.

00:02:35.539 --> 00:02:39.570
Let's leave it to
the default one.

00:02:40.450 --> 00:02:43.610
And let's click on Create.

00:02:43.610 --> 00:02:45.530
Once again, we're
going to talk about

00:02:45.530 --> 00:02:47.210
how the other branch
prediction rules

00:02:47.210 --> 00:02:49.010
in upcoming lectures.

00:02:49.010 --> 00:02:52.290
Let me quickly
enter the password.

00:02:56.470 --> 00:02:59.720
And we have a branch
prediction rule

00:02:59.720 --> 00:03:01.745
created for the main branch.

00:03:01.745 --> 00:03:06.030
Now let's go back to
Luke's GitHub account.

00:03:06.190 --> 00:03:09.870
If I reload the page this time,

00:03:10.360 --> 00:03:14.675
luke would no longer be able
to merge those changes.

00:03:14.675 --> 00:03:19.414
And look is now seeing
review required.

00:03:19.414 --> 00:03:23.450
Now by default, any
collaborator in the team or

00:03:23.450 --> 00:03:27.785
the repository owner can
actually do view the changes.

00:03:27.785 --> 00:03:30.500
If you wanted to
change that behavior,

00:03:30.500 --> 00:03:32.600
then we need to
actually take one of

00:03:32.600 --> 00:03:35.300
those enterprise memberships of

00:03:35.300 --> 00:03:37.265
GitHub so that we get

00:03:37.265 --> 00:03:40.280
all that fine grain
control. At the moment.

00:03:40.280 --> 00:03:42.780
We do not have control on that.
