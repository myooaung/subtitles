WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.350 --> 00:00:02.640
Okay, let us first
take a look at

00:00:02.640 --> 00:00:04.830
list of tracking branches.

00:00:04.830 --> 00:00:08.010
And the command for that is git.

00:00:08.010 --> 00:00:13.305
Branch. Hyphen r
stands for Remote.

00:00:13.305 --> 00:00:16.410
Here you can see
both the main branch

00:00:16.410 --> 00:00:18.570
as well as the new
feature branch.

00:00:18.570 --> 00:00:21.180
And these are the tracking
branches that will

00:00:21.180 --> 00:00:23.925
represent in the
remote branches.

00:00:23.925 --> 00:00:25.515
In GitHub.

00:00:25.515 --> 00:00:27.210
You can say that
these are tracking

00:00:27.210 --> 00:00:28.680
branches because they start

00:00:28.680 --> 00:00:33.090
with origin slash and then
the name of the branch.

00:00:33.090 --> 00:00:36.520
You can also locate this
in the Git repository.

00:00:36.520 --> 00:00:38.720
Let me go to the project.

00:00:38.720 --> 00:00:41.000
And inside dot git folder,

00:00:41.000 --> 00:00:42.950
you should be able to locate

00:00:42.950 --> 00:00:46.145
this file with the name
packed hyphen drifts.

00:00:46.145 --> 00:00:50.990
Open that up. And you

00:00:50.990 --> 00:00:54.959
can see that we have
these two branches.

00:00:55.030 --> 00:00:58.550
And the point into
specific comments.

00:00:58.550 --> 00:01:01.220
Let's take a look at what
they're pointing to.

00:01:01.220 --> 00:01:03.755
For that, let me go to get up.

00:01:03.755 --> 00:01:06.170
I'm currently inside
the main branch.

00:01:06.170 --> 00:01:10.460
And here you can see the
hashCode of the latest commit.

00:01:10.460 --> 00:01:14.120
It is E 0, triple six is seven.

00:01:14.120 --> 00:01:16.970
And we're in the main branch.

00:01:16.970 --> 00:01:20.810
And if you notice,
the tracking branch

00:01:20.810 --> 00:01:24.840
main is pointing to
the exact same comet.

00:01:24.940 --> 00:01:28.310
Let's check with new
feature branch as well.

00:01:28.310 --> 00:01:31.160
It should point to this

00:01:31.160 --> 00:01:35.820
commit that starts
with 855 D, D2.

00:01:36.430 --> 00:01:39.110
Let's go back and
switch to feature

00:01:39.110 --> 00:01:42.365
branch or new feature branch.

00:01:42.365 --> 00:01:45.560
And sure enough, it points to

00:01:45.560 --> 00:01:49.025
this commit with
the hashCode 855,

00:01:49.025 --> 00:01:51.600
double D to C.

00:01:53.410 --> 00:01:56.540
Even if you were to
make a local commit,

00:01:56.540 --> 00:01:59.000
this would still remain as is.

00:01:59.000 --> 00:02:00.950
This would only be updated

00:02:00.950 --> 00:02:03.110
when we actually run
certain commands like git,

00:02:03.110 --> 00:02:06.065
fetch, git pull, et cetera.

00:02:06.065 --> 00:02:09.899
We'll explore them
in coming lectures.

00:02:12.880 --> 00:02:18.755
Git branch would list down
list of local branches.

00:02:18.755 --> 00:02:21.680
And whichever is the default
branch and GitHub would

00:02:21.680 --> 00:02:23.030
be checked not automatically

00:02:23.030 --> 00:02:24.725
whenever we clone the project,

00:02:24.725 --> 00:02:28.865
the default branch happens
to be the main branch.

00:02:28.865 --> 00:02:33.365
The head here always points
to the default branch,

00:02:33.365 --> 00:02:35.315
which is the main branch.

00:02:35.315 --> 00:02:37.250
Let's go to get up
and take a look

00:02:37.250 --> 00:02:40.295
at where we can configure
the default branch.

00:02:40.295 --> 00:02:42.660
If you go to the settings.

00:02:43.200 --> 00:02:46.400
Under branches.

00:02:46.560 --> 00:02:49.420
Here you'll see that
the default branches,

00:02:49.420 --> 00:02:50.800
the main branch.

00:02:50.800 --> 00:02:54.340
If you wish, you can
switch to another branch.

00:02:54.340 --> 00:02:56.920
For example, I can
choose feature branch

00:02:56.920 --> 00:02:58.465
and click on update.

00:02:58.465 --> 00:03:00.594
But it's not a
recommended practice.

00:03:00.594 --> 00:03:01.975
I'm going to skip it.

00:03:01.975 --> 00:03:04.820
But you can do it if you wish.

00:03:04.860 --> 00:03:08.350
Inside the Git repository.

00:03:08.350 --> 00:03:15.340
If you go inside
refs remote origin

00:03:15.340 --> 00:03:19.285
and take a look at what's
inside the header file,

00:03:19.285 --> 00:03:26.400
it should point to the
default branch, like so.

00:03:26.400 --> 00:03:29.550
And that's what
we're seeing here.

00:03:30.340 --> 00:03:34.790
Now, to create a local branch
for the new feature branch,

00:03:34.790 --> 00:03:37.355
went to check out
to that branch.

00:03:37.355 --> 00:03:40.865
Let's do git checkout.

00:03:40.865 --> 00:03:44.160
New feature.

00:03:45.340 --> 00:03:49.414
Now if you do git branch,

00:03:49.414 --> 00:03:51.785
it's going to list down
all the local branches.

00:03:51.785 --> 00:03:55.595
And it now includes the new
feature branch as well.

00:03:55.595 --> 00:03:58.655
We can now start working
on this feature branch.

00:03:58.655 --> 00:04:00.920
You'll get better clarity
on what we've just

00:04:00.920 --> 00:04:03.905
talked as we progress
in this chapter.

00:04:03.905 --> 00:04:06.240
I'll see you next.
