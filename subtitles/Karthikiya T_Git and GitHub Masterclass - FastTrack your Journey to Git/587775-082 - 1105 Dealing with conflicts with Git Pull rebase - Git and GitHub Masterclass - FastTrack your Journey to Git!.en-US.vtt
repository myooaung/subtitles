WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.250
Let us see what would
happen if there are

00:00:02.250 --> 00:00:04.575
any conflicts while
performing it.

00:00:04.575 --> 00:00:08.820
For that, let me once
again edit this file.

00:00:08.820 --> 00:00:11.370
I'm just simply going
to add one more line

00:00:11.370 --> 00:00:14.490
of code, like so.

00:00:14.490 --> 00:00:17.430
And commit the changes.

00:00:17.430 --> 00:00:21.720
We have made edits an
info dot TXT file.

00:00:21.720 --> 00:00:24.060
Let me read the
same file even in

00:00:24.060 --> 00:00:28.735
my local repository or
in my local computer.

00:00:28.735 --> 00:00:33.095
Let me add one line of text
like so save the file,

00:00:33.095 --> 00:00:38.850
stage the file,
and make a commit.

00:00:41.380 --> 00:00:47.630
New edit, info file, whatever.

00:00:47.630 --> 00:00:51.680
Now let me try doing git

00:00:51.680 --> 00:00:55.625
pull and we should
get a conflict.

00:00:55.625 --> 00:00:57.920
I want to use rebase option

00:00:57.920 --> 00:01:02.520
because I didn't want to
see the merge commit.

00:01:03.700 --> 00:01:07.130
But it's up to you.
And as you can see,

00:01:07.130 --> 00:01:11.675
our repository went
into rebase state.

00:01:11.675 --> 00:01:14.225
If we do not provide
this option,

00:01:14.225 --> 00:01:17.300
then this would have
been merging state a.

00:01:17.300 --> 00:01:18.710
The way we have to resolve

00:01:18.710 --> 00:01:20.900
the conflicts in one
way or the other.

00:01:20.900 --> 00:01:22.340
We've already seen how we can

00:01:22.340 --> 00:01:24.185
resolve conflicts in gets off,

00:01:24.185 --> 00:01:27.349
merge as well as rebase
in our earlier chapters.

00:01:27.349 --> 00:01:29.255
Same applies here too.

00:01:29.255 --> 00:01:33.095
So you can either decide
to resolve the conflicts

00:01:33.095 --> 00:01:34.670
or you can use

00:01:34.670 --> 00:01:38.930
this command to skip the commit
that is causing conflict.

00:01:38.930 --> 00:01:41.195
I'm going to do just that.

00:01:41.195 --> 00:01:44.420
But if you want to edit
and resolve the conflicts,

00:01:44.420 --> 00:01:47.010
you already know how to do that.

00:01:50.080 --> 00:01:53.450
Rebase was successful.

00:01:53.450 --> 00:01:56.540
And when I do git log and
not seeing the commit

00:01:56.540 --> 00:01:59.090
that we've just made in
our local depository.

00:01:59.090 --> 00:02:02.330
That's because we had
provided the options skip to

00:02:02.330 --> 00:02:05.420
skip the commit which is
causing conflict ends.

00:02:05.420 --> 00:02:08.160
We're not seeing that come up.

00:02:10.930 --> 00:02:13.670
But if you notice the
tracking branches

00:02:13.670 --> 00:02:17.405
pointing to the latest
commit in remote repository,

00:02:17.405 --> 00:02:22.980
like so, I hope it makes
sense. I'll see you next.
