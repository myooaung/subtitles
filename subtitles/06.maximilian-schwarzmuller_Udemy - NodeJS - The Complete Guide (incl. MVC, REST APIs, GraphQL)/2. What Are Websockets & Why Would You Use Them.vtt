WEBVTT
1
00:00:02.180 --> 00:00:07.460
Mari kita mulai dengan status quo bagaimana cara kerja aplikasi kita berdua sejauh ini.

2
00:00:07.670 --> 00:00:13.370
Dan dengan itu saya tidak hanya merujuk pada API penangkapan itu tetapi ke toko yang kami bangun sebelumnya.

3
00:00:13.380 --> 00:00:18.630
T Bagaimana cara kerja aplikasi simpul atau simpul yang khas.

4
00:00:19.100 --> 00:00:24.890
Kami mendapat klien kami, kami mendapat server kami klien akan menjadi ponsel browser kami atau sesuatu seperti itu.

5
00:00:24.950 --> 00:00:29.530
Server tentu saja pada dasarnya apa yang kami bangun aplikasi simpul kami.

6
00:00:29.540 --> 00:00:32.620
Sejauh ini kami selalu mengirim permintaan dari klien.

7
00:00:32.750 --> 00:00:34.770
Kami menunggu permintaannya di server.

8
00:00:34.790 --> 00:00:38.170
Kami menyiapkan beberapa rute untuk menangani berbagai jenis permintaan.

9
00:00:38.360 --> 00:00:43.460
Dan begitu kami selesai melakukan sesuatu di server, misalnya menjangkau ke database, kami mengirim

10
00:00:43.460 --> 00:00:44.990
kembali respons kepada klien.

11
00:00:45.020 --> 00:00:48.470
Jadi pertama minta maka jawab.

12
00:00:48.470 --> 00:00:51.700
Nah, begitulah cara aplikasi kita bekerja sejauh ini.

13
00:00:51.700 --> 00:00:53.960
Dan inilah cara sebagian besar aplikasi web bekerja.

14
00:00:53.990 --> 00:00:58.580
Dan omong-omong kita sekarang tidak akan menggantinya dengan sesuatu yang sama sekali baru yang kemudian akan digunakan

15
00:00:58.580 --> 00:00:59.270
sepanjang waktu.

16
00:00:59.300 --> 00:01:07.600
Ini adalah pola yang baik karena banyak sumber daya di Internet harus tersedia dengan pendekatan tarikan biogas.

17
00:01:07.700 --> 00:01:14.040
Jadi, Anda menarik informasi dari klien Anda memberi tahu server bahwa Anda menginginkan sesuatu.

18
00:01:14.210 --> 00:01:17.700
Apakah pendekatan yang khas dan merupakan pendekatan yang baik.

19
00:01:17.930 --> 00:01:20.950
Tetapi terkadang Anda memiliki persyaratan yang berbeda.

20
00:01:21.140 --> 00:01:26.450
Bagaimana jika Anda ingin mengirim sesuatu dari server ke klien, jadi bagaimana jika sesuatu terjadi dan Anda

21
00:01:26.450 --> 00:01:28.010
ingin memberi tahu klien.

22
00:01:28.400 --> 00:01:37.190
Katakanlah Anda sedang membangun bantuan pengguna aplikasi obrolan di PCa atau di ponselnya mengirim pesan ke pengguna

23
00:01:37.190 --> 00:01:38.690
atau B.

24
00:01:39.080 --> 00:01:41.850
Sekarang jelas mereka tidak berbagi perangkat yang sama.

25
00:01:41.900 --> 00:01:45.200
Mereka mungkin berada di dua tempat yang sangat berbeda di dunia.

26
00:01:45.380 --> 00:01:51.830
Sekarang Pengguna A mengirimkan permintaan ke server yang berisi pesan dan mengabaikan mengembalikan pesan dalam

27
00:01:51.830 --> 00:01:55.880
database dan server dapat mengembalikan respons kepada pengguna.

28
00:01:56.060 --> 00:02:03.670
Tetapi Pengguna B orang dengan siapa obrolan pengguna tidak mengirim permintaan ke server meminta pesan atau

29
00:02:03.920 --> 00:02:06.380
setidaknya itu tidak mungkin terjadi.

30
00:02:06.380 --> 00:02:11.510
Anda tentu bisa menggunakan beberapa pola di mana Anda mengirim permintaan setiap detik untuk melihat apakah ada

31
00:02:11.510 --> 00:02:12.310
pesan baru.

32
00:02:12.440 --> 00:02:19.590
Tetapi Anda kemudian akan memalu server Anda dengan permintaan jika sebagian besar permintaan tidak akan menghasilkan pesan baru.

33
00:02:19.610 --> 00:02:26.120
Jadi sebagai gantinya akan menyenangkan untuk memiliki beberapa cara push off dan membentuk Pengguna B tentang pesan baru.

34
00:02:26.120 --> 00:02:29.300
Dan itulah skenario yang sedang kita lihat di sini.

35
00:02:29.450 --> 00:02:36.380
Bagaimana jika sesuatu berubah di server dan kami secara aktif ingin memberi tahu klien dengan baik maka kami

36
00:02:36.380 --> 00:02:39.080
dapat menggunakan soket web alih-alih HTP.

37
00:02:39.200 --> 00:02:42.110
Sekarang HTP adalah protokol yang kami gunakan sejauh ini.

38
00:02:42.230 --> 00:02:44.600
Di mana kami mengirim permintaan dan kami mendapat respons.

39
00:02:44.840 --> 00:02:48.050
Soket web dibangun di HTP.

40
00:02:48.080 --> 00:02:50.420
Mereka didirikan melalui HTP.

41
00:02:50.540 --> 00:02:57.950
Mereka menggunakan apa yang disebut jabat tangan HTP untuk memutakhirkan protokol HTP ke protokol soket Web dan protokol

42
00:02:57.950 --> 00:03:01.670
soket web yang hanya berbicara tentang bagaimana data dipertukarkan.

43
00:03:01.670 --> 00:03:01.910
Kanan.

44
00:03:01.910 --> 00:03:04.710
Jadi protokol ini adalah sesuatu yang tidak harus Anda kelola.

45
00:03:04.720 --> 00:03:12.980
Sebenarnya browser dan server berkomunikasi melalui protokol dan protokol menentukan bagaimana komunikasi dapat

46
00:03:12.980 --> 00:03:18.870
terjadi dengan HTP. Ini meminta respons dengan soket WEP.

47
00:03:18.920 --> 00:03:22.600
Sebenarnya data push itu adalah keduanya.

48
00:03:22.610 --> 00:03:25.890
Kami juga dapat mengirim data dari klien ke server apakah masih termasuk.

49
00:03:25.940 --> 00:03:29.480
Tetapi yang paling penting dan itulah fitur yang ingin saya soroti di sini.

50
00:03:29.570 --> 00:03:36.500
Kami dapat mendorong data dari server ke yang ditolak dan Anda bisa dan Anda biasanya akan menggunakan keduanya secara bersamaan dalam satu

51
00:03:36.500 --> 00:03:37.670
simpul yang sama.

52
00:03:37.790 --> 00:03:44.330
Jadi bukan berarti Anda harus memutuskan apakah saya membuat aplikasi dengan soket web atau membuat aplikasi dengan HDTV.

53
00:03:44.570 --> 00:03:49.180
Anda masih memiliki banyak tempat di mana Anda ingin menggunakan pola respons permintaan itu.

54
00:03:49.190 --> 00:03:53.810
Misalnya jika Anda mengirim pesan atau jika Anda membuat pengguna.

55
00:03:54.020 --> 00:03:59.320
Ini adalah operasi di mana Anda mengirim beberapa informasi dari browser ke server.

56
00:03:59.330 --> 00:04:03.360
Jadi ada respon permintaan sempit masuk akal.

57
00:04:03.500 --> 00:04:09.290
Tetapi jika Anda memiliki beberapa pemberitahuan aktif yang ingin Anda sampaikan kepada pengguna Anda, maka Anda semua ingin

58
00:04:09.290 --> 00:04:10.640
mengintegrasikan soket web.

59
00:04:10.640 --> 00:04:15.040
Sekarang izinkan saya menunjukkan kepada Anda cara menambahkan soket web ke proyek Anda di ELECTRESS berikutnya.
