WEBVTT
1
00:00:02.410 --> 00:00:03.680
Kita hampir selesai.

2
00:00:03.790 --> 00:00:05.400
Mari kita pastikan kita bisa.

3
00:00:05.440 --> 00:00:09.370
Anda juga adalah status pengguna dan menghapusnya.

4
00:00:09.430 --> 00:00:14.530
Dan seperti yang telah saya sebutkan di akhir kuliah terakhir ini lagi adalah latihan yang bagus untuk Anda.

5
00:00:14.530 --> 00:00:21.080
Jadi pasti merasa bebas untuk mencoba ini pada video posti pertama Anda sendiri sekarang dan kemudian menerapkan dua fungsi ini tentu

6
00:00:22.140 --> 00:00:22.700
saja.

7
00:00:22.710 --> 00:00:25.100
Kami juga akan melakukannya bersama setelah jeda singkat.

8
00:00:27.490 --> 00:00:29.400
Anda juga berhasil.

9
00:00:29.680 --> 00:00:34.070
Baiklah mari kita coba bersama dan saya akan melakukan keduanya sekaligus.

10
00:00:34.330 --> 00:00:35.670
Saya perlu menambahkan dua hal.

11
00:00:35.740 --> 00:00:40.310
Satu teori dan satu dekrit mutasi adalah untuk mendapatkan status.

12
00:00:40.420 --> 00:00:46.690
Dan sebenarnya karena kita tidak menggunakan pendekatan yang saya sebutkan sebelumnya di mana kita menambahkan titik akhir baru untuk

13
00:00:46.690 --> 00:00:52.420
semua yang harus kita ingat bahwa dengan kerajinan Anda saya dapat mengontrol data yang kami dapatkan kembali.

14
00:00:52.630 --> 00:00:57.070
Jadi saya akan menambahkan permintaan pengguna umum tanpa argumen.

15
00:00:57.070 --> 00:01:02.270
Semua ini untuk pengguna yang saat ini terkunci dan saya akan mengembalikan objek pengguna di sini.

16
00:01:02.560 --> 00:01:08.950
Sekarang dalam mutasi saya, saya akan menambahkan status pembaruan saya.

17
00:01:08.960 --> 00:01:16.330
Nutation Saya bisa menambahkan mutasi pengguna yang diperbarui jika saya secara umum akan baik-baik saja dengan perubahan pengguna karena saya tidak

18
00:01:16.330 --> 00:01:18.980
memiliki fungsionalitas yang direncanakan di aplikasi saya.

19
00:01:19.150 --> 00:01:23.040
Saya hanya akan menambahkan mutasi khusus untuk status keadilan.

20
00:01:23.050 --> 00:01:28.300
Kalau tidak, kita tentu saja bisa pergi dengan pendekatan yang lebih umum di sana-sini.

21
00:01:29.330 --> 00:01:36.040
Saya berharap mendapatkan status sebagai string dan saya akan mengembalikan pengguna yang diperbarui.

22
00:01:36.280 --> 00:01:40.430
Dengan itu kita bisa beralih ke Rhus yang telah kita tentukan.

23
00:01:40.560 --> 00:01:43.620
Biarkan saya menambahkan kode untuk mengembalikan pengguna.

24
00:01:43.620 --> 00:01:52.320
Jadi untuk pengguna ini di sana saya tidak mendapatkan argumen jadi saya mendapatkan objek itu tetapi saya tidak akan mengambil penawaran apa

25
00:01:52.530 --> 00:01:54.020
pun dari sana.

26
00:01:54.510 --> 00:02:01.370
Dan lagi saya akan menulis ini sebagai fungsi async untuk dapat menggunakan kata kunci D-Wade.

27
00:02:01.460 --> 00:02:03.620
Saya kemudian akan memeriksa apakah pengguna diautentikasi.

28
00:02:03.630 --> 00:02:08.920
Jika dia tidak baik maka Anda memiliki masalah dan itu tidak akan berlanjut.

29
00:02:09.390 --> 00:02:17.550
Kalau tidak, saya akan mendapatkan pengguna saya dengan menunggu pengguna menemukan dengan ID dan saya dapat menggunakan ID pengguna yang disimpan

30
00:02:17.550 --> 00:02:23.000
dalam permintaan dan pada pengguna itu di sini saya tertarik pada status yang benar.

31
00:02:23.030 --> 00:02:25.850
Itulah keadaan yang ingin saya kembalikan.

32
00:02:25.960 --> 00:02:34.120
Jadi, jika saya tidak menemukan pengguna untuk ID itu, maka pada dasarnya saya akan melakukan hal yang sama seperti yang saya lakukan

33
00:02:34.890 --> 00:02:39.320
ketika saya tidak menemukan posting tentang kesalahan yang tidak ditemukan pengguna.

34
00:02:39.340 --> 00:02:46.560
Jika saya memiliki pengguna, maka saya hanya akan mengembalikan respons dan itu adalah seluruh data pengguna saya.

35
00:02:46.780 --> 00:02:55.120
Saya hanya akan memastikan untuk mengganti ID dengan ID garis bawah pengguna ke string sehingga saya sekarang dapat secara teoritis mengambil semua data

36
00:02:55.120 --> 00:03:00.310
tentang pengguna yang saya minati tetapi jelas saya akan mengimplementasikannya dengan cara yang

37
00:03:00.310 --> 00:03:07.660
saya hanya mengambil status dan adalah sesuatu yang saya lakukan di sini di fitur Ya file depan saya bahwa aplikasi

38
00:03:08.390 --> 00:03:14.740
di sana dalam komponen melakukan MT Saya mengirim permintaan ke titik akhir yang tidak ada lagi.

39
00:03:14.980 --> 00:03:17.970
Sebaliknya kami sekarang tentu saja menargetkan korupsi ke L.

40
00:03:18.130 --> 00:03:22.330
Metode di sini sekarang akan dikirim.

41
00:03:22.410 --> 00:03:30.630
Saya akan mengirim token tetapi saya juga akan mengatur jenis konten ke aplikasi.

42
00:03:30.660 --> 00:03:39.370
Jason dan saya akan mengatur tubuh untuk Mike bervariasi dan permintaan itu adalah sesuatu yang saya perlu buat di sana.

43
00:03:39.440 --> 00:03:47.190
Permintaan Grafik Cuil adalah sebuah konstanta yang akan saya buat di sini yaitu objek dengan kunci corroboree.

44
00:03:48.390 --> 00:03:55.080
Sekali lagi yang dikelilingi oleh kutu dua kali lipat atau kutu tunggal tapi saya perlu membuka

45
00:03:56.090 --> 00:04:06.260
dan menutup dan di sini saya akan mengirimkan permintaan saya ke permintaan pengguna saya atau menggunakan permintaan pengguna dan semua data yang saya dapatkan kembali.

46
00:04:06.250 --> 00:04:08.660
Saya tidak tertarik dengan nama atau emailnya.

47
00:04:08.720 --> 00:04:16.520
Saya hanya tertarik pada status yang biografis Korea dan itulah yang akan saya kirim pada musim semi Anda

48
00:04:16.520 --> 00:04:17.200
bertarung.

49
00:04:17.210 --> 00:04:19.540
Werman Sampai di titik akhir.

50
00:04:19.730 --> 00:04:22.630
Sekali lagi menangani panah seperti ini tidak akan berhasil.

51
00:04:22.640 --> 00:04:29.990
Sebagai gantinya mari kita bungkus kode yang kita miliki di bawah sini di mana saya hanya memeriksa keberadaan kesalahan

52
00:04:30.290 --> 00:04:32.910
atau objek setelah mem-parsing tubuh permintaan.

53
00:04:34.230 --> 00:04:38.580
Jadi Anda mengambil status gagal akan menjadi pesan kesalahan saya.

54
00:04:38.700 --> 00:04:45.490
Dan ketika saya mengekstrak data, saya perlu menelusuri bidang data dan kemudian bidang status.

55
00:04:45.500 --> 00:04:47.870
Sekarang jika saya menyimpannya

56
00:04:50.790 --> 00:04:56.850
dan memuat ulang kesalahan internal di sini tidak dapat mengembalikan NULL.

57
00:04:56.930 --> 00:04:59.980
Mari kita cepat mengecek reserver kami Soler pengguna.

58
00:05:00.060 --> 00:05:02.740
Saya mengembalikan objek pengguna saya di sini.

59
00:05:03.230 --> 00:05:04.410
Tapi saya tidak menyimpannya.

60
00:05:04.430 --> 00:05:10.690
Saya kira ini sekarang terlihat lebih baik tetapi saya tidak melihat statusnya di sini.

61
00:05:10.710 --> 00:05:18.320
Dan saya mendapat kesalahan tentang yang akan mengurus kedua status saya di sini tidak ditemukan dalam data.

62
00:05:18.340 --> 00:05:20.910
Saya harus menelusuri bidang pengguna juga.

63
00:05:20.950 --> 00:05:26.590
Kita dapat melihat bahwa jika kita pergi ke tab jaringan dan melihat permintaan itu di mana

64
00:05:26.590 --> 00:05:33.310
kita mendapatkan data itu kita mendapatkan data dan di pengguna mereka yang merupakan nama permintaan kita tentu saja dan pernah

65
00:05:33.570 --> 00:05:39.370
mendapatkan itu tapi jelas nama Cuore selalu di mana data disimpan di dan bahwa Dan memiliki bidang status.

66
00:05:39.370 --> 00:05:41.610
Jadi ini adalah perubahan yang diperlukan.

67
00:05:41.830 --> 00:05:45.410
Dan sekarang kita melihat status dan pesan kesalahan ini juga hilang.

68
00:05:46.230 --> 00:05:47.040
Seperti mati.

69
00:05:47.340 --> 00:05:48.360
Jadi ini dia.

70
00:05:48.390 --> 00:05:54.030
Sekarang mari kita semua memastikan bahwa kita dapat memperbarui status dan untuk itu mari pertama-tama pastikan kita melakukan sesuatu

71
00:05:54.030 --> 00:05:54.930
untuk skema ini.

72
00:05:54.930 --> 00:06:00.150
Kami menambahkan untuk skema status pembaruan dalam file resolvers kami.

73
00:06:00.540 --> 00:06:05.720
Jadi ini adalah resolusi terakhir atau fungsional menambahkan status pembaruan di sini.

74
00:06:05.780 --> 00:06:15.000
Saya akan mendapatkan argumen status saya dan permintaan tentu saja dan saya akan bertanya sebelum saya menggunakan sintaks fungsi

75
00:06:15.000 --> 00:06:18.720
async saya dan yang lainnya di sini.

76
00:06:18.880 --> 00:06:22.350
Pertama-tama akan memeriksa apakah pengguna diautentikasi.

77
00:06:22.570 --> 00:06:29.420
Tapi bukan itu kasus kami melempar kesalahan dan kemudian semua mendapatkan pengguna saya dengan menunggu

78
00:06:29.430 --> 00:06:32.440
pengguna menemukan dengan ID untuk permintaan.

79
00:06:32.440 --> 00:06:33.410
Identitas pengguna.

80
00:06:33.520 --> 00:06:41.740
Jadi untuk pengguna yang terkunci jika saya tidak memiliki pengguna maka kita mendapatkan masalah jadi saya akan menyalin kode itu dari atas dan ke

81
00:06:41.770 --> 00:06:42.700
sana kemari.

82
00:06:42.720 --> 00:06:49.040
Jika itu masalahnya, maka saya akan mengatur status pengguna ke status baru yang saya dapatkan sebagai argumen.

83
00:06:49.330 --> 00:06:53.480
Dan kemudian saya akan menunggu pengguna menyimpan pembaruan keamanan.

84
00:06:53.500 --> 00:07:05.490
Pengguna Saya kemudian dapat mengembalikan objek tempat saya mengambil data dokumen pengguna saya dan tempat saya mengganti ID.

85
00:07:05.710 --> 00:07:09.900
Jadi ID pengguna dengan string yang Anda tembak tidak semuanya.

86
00:07:10.130 --> 00:07:13.000
Dan ini mutasi status pembaruan saya sekarang.

87
00:07:13.010 --> 00:07:16.670
Terakhir, saya juga harus mengedit ini di ujung depan.

88
00:07:18.290 --> 00:07:24.860
Jadi di aplikasi re-action saya dan di sana kami hanya mencari penangan pembaruan status di sini di mana

89
00:07:24.860 --> 00:07:29.660
kami tentu saja mengirim permintaan untuk menyusun Q L dan Datchet permintaan pos.

90
00:07:29.660 --> 00:07:34.280
Header baik-baik saja dan saya akan menentukan grafik saya semua permintaan.

91
00:07:34.280 --> 00:07:37.040
Ini sebuah objek.

92
00:07:37.160 --> 00:07:46.640
Tentu saja kunci kueri saya kembali dan yang kuatir sekarang adalah mutasi dengan status pembaruan nama atau apa pun

93
00:07:46.700 --> 00:07:51.900
yang Anda tetapkan dalam file skema ULS grafik Anda.

94
00:07:52.110 --> 00:07:54.720
Dan di sana saya harus lulus dalam status yang merupakan string.

95
00:07:54.780 --> 00:08:00.500
Jadi kita perlu tanda kutip ganda di sekitar nilai yang sekarang saya akan menyuntikkan di sini dan nilainya

96
00:08:00.660 --> 00:08:06.780
masih status status dessous di mana status disimpan dimana pengguna memasukkan ke dalam bidang input dan dari data yang

97
00:08:06.780 --> 00:08:08.020
saya dapatkan kembali.

98
00:08:08.040 --> 00:08:16.650
Saya hanya tertarik dengan statusnya maka kami ingin mengirim ini ke sini dalam string yang Anda lawan.

99
00:08:16.670 --> 00:08:19.900
Werman Dan sekali lagi kami tidak menangani panah di sini.

100
00:08:19.900 --> 00:08:27.010
Kami menanganinya seperti yang kami lakukan di sana memeriksa keberadaan objek kesalahan dalam data respons yang

101
00:08:27.070 --> 00:08:27.810
diurai.

102
00:08:29.950 --> 00:08:32.390
Dan itu sudah.

103
00:08:32.410 --> 00:08:36.220
Sekarang jika saya menyimpannya dan menyimpan bagian belakang juga.

104
00:08:36.310 --> 00:08:40.990
Jika saya menambahkan beberapa tanda seru dan saya klik Perbarui tampaknya berhasil.

105
00:08:41.130 --> 00:08:47.350
Jika kita dapat memvalidasi ini dengan memuat ulang jika saya sekarang login dengan pengguna lain di sana tentu saja kita tidak

106
00:08:47.350 --> 00:08:49.200
akan melihat status yang diperbarui.

107
00:08:49.210 --> 00:08:51.620
Di sana kita melihat status pengguna itu.

108
00:08:51.850 --> 00:08:58.870
Dan dengan itu, kami memindahkan seluruh API sisanya ke graft ke L dan saya harap

109
00:08:58.900 --> 00:09:06.190
Anda melihat alat grafik daya memberi Anda lebih fleksibel mengenai data yang Anda ambil dari backend dan

110
00:09:06.190 --> 00:09:13.280
karenanya pengembangan depan Anda dapat bergerak lebih cepat karena punggung dan memberi Anda seluruh bandwidth data.

111
00:09:13.330 --> 00:09:14.710
Anda mungkin tertarik.
