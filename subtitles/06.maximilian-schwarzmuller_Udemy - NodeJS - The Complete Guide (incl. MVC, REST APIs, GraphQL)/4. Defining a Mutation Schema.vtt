WEBVTT
1
00:00:02.460 --> 00:00:06.880
Kami mengedit grafik pertama kami, bunuh Querrey yang memungkinkan kami mendapatkan data.

2
00:00:07.170 --> 00:00:12.920
Sekarang mari kita tambahkan permintaan yang memungkinkan kita untuk menyimpan data dan untuk hutang.

3
00:00:13.050 --> 00:00:22.230
Mengapa kita tidak mulai dengan Front-End kami yang kami gunakan dan memastikan bahwa kami benar-benar dapat mendaftar pengguna sehingga kami

4
00:00:22.260 --> 00:00:27.970
dapat membuat pengguna karena itu terdengar seperti mutasi kepada saya untuk itu.

5
00:00:28.230 --> 00:00:33.760
Pertama-tama izinkan saya membersihkan bagian depan dan saya tidak lagi menggunakan Succot.

6
00:00:33.900 --> 00:00:36.540
Jadi pada janin J. S. file di atas.

7
00:00:36.540 --> 00:00:43.350
Hapus impor soket terbuka dan kemudian mari kita hapus logika itu dari komponen yang me-mount di mana saya membuat koneksi

8
00:00:43.350 --> 00:00:48.180
socket saya dan mari kita semua ruang bergerak menambahkan posting dan naik posting itu.

9
00:00:48.270 --> 00:00:52.830
Saya akan melakukannya secara berbeda nanti setelah mengubah ini.

10
00:00:52.840 --> 00:00:58.750
Mari kita benar-benar ya di mana kita mendaftar dan kami ingin memastikan bahwa meneruskan

11
00:00:58.750 --> 00:00:59.380
Handler.

12
00:00:59.500 --> 00:01:01.490
Kami sekarang mencapai salah satu mutasi kami.

13
00:01:01.690 --> 00:01:04.370
Dan untuk itu kita pertama-tama harus membuatnya.

14
00:01:04.420 --> 00:01:06.550
Sekarang bagaimana kita membuat mutasi.

15
00:01:06.730 --> 00:01:09.330
Saya akan menyingkirkan resolver ini yang nantinya akan ditambahkan.

16
00:01:09.340 --> 00:01:10.730
Bisakah kita selesaikan ini lagi.

17
00:01:10.930 --> 00:01:13.900
Untuk saat ini saya akan menyingkirkan pertanyaan saya di sini.

18
00:01:13.900 --> 00:01:21.790
Untuk saat ini saya hanya perlu mutasi dan kami menambahkan bahwa tidak ada skema dengan menambahkan mutasi di sini dan kemudian seperti

19
00:01:21.790 --> 00:01:28.650
halnya dengan kueri kami mendefinisikan jenis yang Anda dapat nama stasiun atau root mutasi apa pun yang Anda inginkan.

20
00:01:29.140 --> 00:01:31.750
Dan di sana Anda sekarang menemukan mutasi yang berbeda.

21
00:01:31.810 --> 00:01:33.100
Anda ingin mengizinkan.

22
00:01:33.100 --> 00:01:38.790
Jadi di sini saya hanya akan menunjuk pada mutasi root dan kemudian mutasi root.

23
00:01:38.820 --> 00:01:40.320
Saya akan menambahkan satu nama Witchell.

24
00:01:40.410 --> 00:01:45.840
Buat pengguna Anda bisa menamainya mendaftar Anda bisa menamainya apa pun yang Anda inginkan.

25
00:01:45.840 --> 00:01:53.190
Sekarang mutasi di sini akan benar-benar memerlukan input beberapa argumen dan itu adalah perbedaan dalam teks yang sekarang Anda

26
00:01:53.190 --> 00:01:55.010
belum pernah lihat sebelumnya.

27
00:01:55.080 --> 00:01:59.400
Anda dapat menambahkan tanda kurung setelah Anda membutuhkan namanya.

28
00:01:59.700 --> 00:02:05.010
Dan ini memungkinkan Anda untuk menentukan argumen yang harus diberikan kepada ayah resolder yang akan berjalan

29
00:02:05.010 --> 00:02:05.970
pada akhirnya.

30
00:02:06.000 --> 00:02:09.940
Dan di sini kita dapat menemukan bahwa kita memerlukan beberapa data input pengguna.

31
00:02:10.350 --> 00:02:12.720
Dan sekarang kita perlu menemukan tipe data itu.

32
00:02:12.720 --> 00:02:14.550
Jadi bagaimana data ini terlihat.

33
00:02:14.790 --> 00:02:20.040
Yah pertama-tama kita tentu saja kecuali judul tipe string dan kemudian argumen lain yang

34
00:02:20.040 --> 00:02:26.130
bukan judul email tipe string dan kemudian argumen nomor yang merupakan kata sandi tipe string yang

35
00:02:26.460 --> 00:02:27.820
akan bekerja juga.

36
00:02:28.110 --> 00:02:34.920
Atau kami membundelnya dalam satu objek yang kami harapkan dan untuk objek data kami dapat membuat tipe baru dan kami

37
00:02:34.920 --> 00:02:41.110
tidak melakukannya dengan jenis kata kunci tetapi ada kata kunci khusus untuk hari yang digunakan sebagai input.

38
00:02:41.160 --> 00:02:47.600
Jadi untuk data seperti digunakan sebagai argumen dan itu adalah kata kunci input dan Anda sekarang dapat dinamai seperti yang Anda

39
00:02:47.610 --> 00:02:48.150
inginkan.

40
00:02:48.260 --> 00:02:52.170
Saya akan menamainya data pengguna dan mereka.

41
00:02:52.260 --> 00:02:55.750
Bagaimana data pengguna saya terlihat atau saya beri nama

42
00:02:55.750 --> 00:02:58.510
Data input pengguna mungkin.

43
00:02:58.510 --> 00:02:59.840
Bagaimana itu terlihat.

44
00:03:00.280 --> 00:03:07.210
Nah itu akan menjadi objek yang memiliki bidang email yang merupakan string yang diperlukan.

45
00:03:07.220 --> 00:03:10.670
Saya ingin itu menjadi string dan saya perlu bidang itu ada di sana.

46
00:03:11.570 --> 00:03:19.720
Saya juga akan mendapatkan nama yang berupa string dan kata sandi.

47
00:03:19.720 --> 00:03:25.100
Sekarang ini adalah tipe data yang akan saya gunakan di sini untuk argumen saya untuk membuat pengguna.

48
00:03:25.480 --> 00:03:30.520
Dan sekarang pertanyaannya adalah apa yang saya dapatkan kembali setelah pengguna dibuat.

49
00:03:30.520 --> 00:03:33.460
Nah di sana saya ingin mendapatkan kembali objek pengguna.

50
00:03:33.460 --> 00:03:39.810
Jadi untuk itu semua mendefinisikan tipe baru bukan input tetapi tipe normal yang menamai pengguna.

51
00:03:40.170 --> 00:03:43.840
Di sana saya akan memiliki bidang ID garis bawah yang akan menjadi jenis ID.

52
00:03:43.990 --> 00:03:49.750
Ini adalah tipe khusus yang disediakan oleh graft UL yang hanya menandakan bahwa ini unik dan diperlakukan dengan

53
00:03:49.750 --> 00:03:50.750
baik sebagai ID.

54
00:03:51.240 --> 00:03:54.510
Saya kemudian juga akan memiliki nama pengguna yang merupakan string.

55
00:03:54.880 --> 00:03:57.510
Saya akan memiliki email yang merupakan string.

56
00:03:57.880 --> 00:04:03.820
Saya memiliki kata sandi yang merupakan string yang tidak saya perlukan katakanlah karena saya tidak

57
00:04:03.820 --> 00:04:13.230
perlu mengembalikan bahwa saya akan memiliki status yang merupakan string dan saya akan memiliki posting saya sekarang yang akan menjadi array dan untuk itu

58
00:04:13.240 --> 00:04:20.220
saya juga perlu mendefinisikan bagaimana posting saya akan terlihat seperti memilih saya untuk menemukan jenis lain untuk

59
00:04:20.410 --> 00:04:23.770
jenis posting dan yang akan memiliki ID.

60
00:04:25.100 --> 00:04:28.790
Itu kemudian juga akan memiliki judul saja.

61
00:04:28.790 --> 00:04:35.490
Sebuah posting juga akan memiliki konten yang kemudian akan memiliki gambar Anda el Dan tentu saja Anda

62
00:04:38.690 --> 00:04:42.370
mungkin melihat beberapa kesamaan dengan model luwak saya.

63
00:04:42.380 --> 00:04:46.150
Di sana saya juga mendefinisikan bagaimana data akan terlihat dan bagaimana itu terhubung.

64
00:04:46.190 --> 00:04:51.620
Kami pada dasarnya melakukan hal yang sama di sini karena ini akan memungkinkan kami untuk kemudian mengambil data secara efisien.

65
00:04:51.620 --> 00:04:58.850
Jadi sekarang saya punya posting saya di mana Anda semua kita dapat memiliki pencipta yang merupakan objek pengguna dan kita

66
00:04:58.850 --> 00:05:00.650
harus lincah di lapangan

67
00:05:00.680 --> 00:05:03.110
Sekarang butiran tidak tahu tanggal.

68
00:05:03.140 --> 00:05:07.170
Jadi saya akan menggunakan string di sini dan sama untuk diperbarui di.

69
00:05:07.190 --> 00:05:15.280
Ingat kami akan mendapatkan dua bidang ini karena dalam model luwak untuk pos kami mengaktifkan cap waktu.

70
00:05:15.380 --> 00:05:23.010
OK jadi itu adalah model posting yang kami butuhkan karena karena tipe pengguna kami sekarang akan memiliki array posting.

71
00:05:23.090 --> 00:05:28.040
Dan ini adalah bagaimana Anda memberi tahu Anda semua grafik bahwa Anda memiliki larik

72
00:05:28.040 --> 00:05:37.190
sesuatu yang Anda lampirkan dalam tanda kurung dan bahwa data pengguna sekarang adalah apa yang ingin saya kembalikan di sini ketika saya membuat pengguna yang merupakan skema

73
00:05:37.190 --> 00:05:38.130
yang ditentukan.

74
00:05:38.150 --> 00:05:40.580
Sekarang mari kita bekerja pada resolver untuk itu.
