1
00:00:02,200 --> 00:00:08,300
We're coming closer to the end of this module, only the order part is missing and I want to include that

2
00:00:08,330 --> 00:00:14,600
too because this will show you another way of creating relation. With the cart, we had like the middle

3
00:00:14,600 --> 00:00:15,110
way,

4
00:00:15,320 --> 00:00:21,500
the cart is an embedded document but the items on the cart then are a combination of references and

5
00:00:21,500 --> 00:00:22,780
extra metadata.

6
00:00:23,030 --> 00:00:26,330
Now for the orders, this will change.

7
00:00:26,330 --> 00:00:28,590
So let's work on the orders now

8
00:00:28,820 --> 00:00:36,920
and for that I'll go to my shop.js file where we post the order. Again I want to store orders on users,

9
00:00:36,920 --> 00:00:45,700
so in the user model, we can add an add order method and this doesn't take any arguments because the cart

10
00:00:45,730 --> 00:00:51,610
which will be passed as an order or as the data for the order is already registered on this user,

11
00:00:51,790 --> 00:00:59,330
so all I need to do here is I need to add the orders to my user or the other way around.

12
00:00:59,410 --> 00:01:05,950
You could also argue that you want to store the orders in a new collection because you might have thousands

13
00:01:05,950 --> 00:01:11,230
of orders and you don't want to embed them all into user objects because these objects will then

14
00:01:11,230 --> 00:01:12,840
get pretty quick,

15
00:01:12,970 --> 00:01:16,310
carts don't get that big but an order history,

16
00:01:16,420 --> 00:01:22,390
well often that can get very long so I will actually work with a new collection here.

17
00:01:22,480 --> 00:01:30,910
I'll still create order here as a method on my user though, so I'll reach out to my database client and

18
00:01:30,910 --> 00:01:35,430
then reach out to a new collection, orders. There

19
00:01:35,440 --> 00:01:44,500
I want to insert one new order now and I'll return the entire thing and that one new order will be well the

20
00:01:44,500 --> 00:01:45,080
cart

21
00:01:45,220 --> 00:01:46,320
I currently have, 

22
00:01:46,360 --> 00:01:46,660
right,

23
00:01:46,660 --> 00:01:54,640
that is essentially what I did before too when I added an order, I added my products in the order model,

24
00:01:54,670 --> 00:01:56,600
we had no special fields for that,

25
00:01:56,620 --> 00:02:00,850
we just had our products and then the quantity of every product

26
00:02:00,850 --> 00:02:03,410
and that is still the same I want to add here.

27
00:02:03,610 --> 00:02:09,200
So you could say I'll insert one and I'll insert my cart,

28
00:02:09,290 --> 00:02:20,000
so this cart which refers to the users cart. I insert this as an order and then when this succeeds, I set

29
00:02:20,010 --> 00:02:24,390
this cart equal to an object where items is an empty array,

30
00:02:24,390 --> 00:02:27,970
so I basically empty my cart at this point.

31
00:02:28,230 --> 00:02:30,350
Of course I don't just want to empty it here,

32
00:02:30,360 --> 00:02:33,660
I also want to clear it in the database,

33
00:02:33,840 --> 00:02:40,170
so we'll also copy that code for updating my user in the database and I will return that here in this

34
00:02:40,180 --> 00:02:49,400
then block and there, I will simply search for that user and set the cart equal to an object where

35
00:02:49,460 --> 00:02:52,710
items is an empty array.

36
00:02:52,720 --> 00:02:57,860
So now I cleared both in the user object as well as in the database

37
00:02:57,940 --> 00:03:02,720
but I also insert the cart into the orders collection before I clear it

38
00:03:02,800 --> 00:03:06,130
and that of course is the important part. With that,

39
00:03:06,130 --> 00:03:09,110
we already are adding the order. Now in shop.js,

40
00:03:09,120 --> 00:03:21,600
in post order where the order gets placed, I can therefore remove all the code up here and simply say

41
00:03:22,230 --> 00:03:26,420
add order, simply execute this method and then redirect

42
00:03:26,430 --> 00:03:33,630
once this is done and in add order, I will store my cart as a new order and you could of course also

43
00:03:33,630 --> 00:03:37,530
add some new fields like the total of value for example if you wanted to

44
00:03:38,070 --> 00:03:39,410
and that is it for now,

45
00:03:39,600 --> 00:03:41,550
so thereafter I redirect.

46
00:03:41,550 --> 00:03:42,890
Now let's see if that works

47
00:03:44,300 --> 00:03:52,900
by going to the shop.js file and re-adding that create order route and let's click order now here.

48
00:03:53,350 --> 00:04:00,940
Now I have page not found because orders, the orders page the route wasn't added again but let's refresh

49
00:04:01,180 --> 00:04:02,570
the entire page here

50
00:04:02,830 --> 00:04:11,710
and my items in the cart certainly are gone but I don't see new orders in the shop database,

51
00:04:11,800 --> 00:04:15,370
I don't see that collection here

52
00:04:15,570 --> 00:04:22,430
but here it is after updating this once with the update arrow in the top left corner and in orders,

53
00:04:22,650 --> 00:04:29,870
I have one order with indeed the items I had in my cart previously and the cart is now empty.

54
00:04:29,870 --> 00:04:34,770
So let's now make sure in the next lecture that we can see our orders page again.
