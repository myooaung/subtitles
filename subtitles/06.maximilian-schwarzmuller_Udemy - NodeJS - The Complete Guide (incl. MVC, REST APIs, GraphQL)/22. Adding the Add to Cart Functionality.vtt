WEBVTT
1
00:00:02.470 --> 00:00:08.300
So we're making progress on the add to cart functionality, at least a very basic first version of it,

2
00:00:08.620 --> 00:00:14.740
let's now go to app.js to wire it up. When finding a user, I'm storing it in the request like this and

3
00:00:14.830 --> 00:00:17.210
this actually should be

4
00:00:17.410 --> 00:00:18.950
all right,

5
00:00:18.970 --> 00:00:24.490
however it's important to understand that the user as I'm storing it here will just be an object with

6
00:00:24.490 --> 00:00:25.370
the properties,

7
00:00:25.390 --> 00:00:31.150
so the data we have in the database. All the methods of our user model will not be in there because the

8
00:00:31.150 --> 00:00:35.590
user I'm getting here is data I'm getting out of the database and the methods aren't stored there,

9
00:00:35.590 --> 00:00:37.370
they couldn't be stored there.

10
00:00:37.420 --> 00:00:45.940
So to have a real user object with which we can interact, I should actually create a new user here

11
00:00:47.060 --> 00:00:58.170
and then simply pass user.name which is my username, how it's a stored, user email, user cart and

12
00:00:58.170 --> 00:00:59.990
user_id,

13
00:01:00.000 --> 00:01:05.970
so I should create such a user object and store that in the request because now this enables me to really

14
00:01:06.090 --> 00:01:07.270
work with

15
00:01:07.440 --> 00:01:13.740
well all the user data or with the whole user model and this now allows me to also call all these methods

16
00:01:13.740 --> 00:01:16.020
like add to cart on it.

17
00:01:16.020 --> 00:01:23.140
So with this changed to app.js, we can go to the shop.js file in the controllers folder and then there,

18
00:01:23.280 --> 00:01:30.720
I want to work on the post cart method for now which allows me to add an element to the cart.

19
00:01:31.230 --> 00:01:33.630
I do get my product id here which is nice

20
00:01:33.780 --> 00:01:39.810
and then we have all the logic here for fetching what's inside the cart and for updating this,

21
00:01:40.050 --> 00:01:44.720
I will actually comment this out because for now we don't need that.

22
00:01:44.730 --> 00:01:49.250
So instead what I want to do is here I want to fetch the product I want to add here,

23
00:01:49.470 --> 00:01:57.370
so I will use my product constructor, my product model and I will use find by ID to find a product by

24
00:01:57.480 --> 00:02:05.680
the product ID I'm extracting here and I'll just add the then block here and in here, I should have the product that

25
00:02:05.680 --> 00:02:07.920
I want to add to the cart.

26
00:02:08.230 --> 00:02:15.460
Therefore in here, I will now use request user which now is our full user model and call add to cart

27
00:02:15.880 --> 00:02:22.690
and pass that product I fetched as an argument because in the user model, add to cart does expect

28
00:02:22.690 --> 00:02:27.450
a product and then I return the result of update one which will be a promise,

29
00:02:27.550 --> 00:02:33.890
so back in the shop.js controller, if I return that promise instead of then here, I can simply chain

30
00:02:33.980 --> 00:02:34.750
another then

31
00:02:34.760 --> 00:02:39.330
block where I get the result of in this case my update operation,

32
00:02:39.400 --> 00:02:43.110
so I'll just console log that result.

33
00:02:43.150 --> 00:02:51.090
Now with that, let me go to the shop.js routes and let me add that cart post route again.

34
00:02:51.370 --> 00:02:59.230
Let's now go back to products and let's give this add to cart button a try and I get an error here.

35
00:03:00.330 --> 00:03:08.260
The problem here should be that if we have a look at our view, at our product list.ejs file, that for

36
00:03:08.260 --> 00:03:15.910
add to cart, we have that add to cart ejs snippet that include where I pass my product to but

37
00:03:15.910 --> 00:03:20.940
in add to cart ejs, I still access product.id instead of _id,

38
00:03:21.160 --> 00:03:27.910
so I need to change this in order to pass on the ID correctly. So now if I reload that products page and

39
00:03:27.910 --> 00:03:30.200
I click add to cart,

40
00:03:30.240 --> 00:03:38.880
now we get stuck here but actually we were successful in a way. We did actually modify something as our

41
00:03:38.880 --> 00:03:44.130
result tells us here and if we quickly go to compass and have a look at our users, you see there is

42
00:03:44.190 --> 00:03:52.050
an embedded document, a cart document with items with an object which holds product data.

43
00:03:52.050 --> 00:03:57.570
Now that user ID here is a bit redundant because were already are in that user, we could strip that out

44
00:03:57.570 --> 00:04:01.270
and only store what we want but it also that doesn't matter too much.

45
00:04:01.410 --> 00:04:07.830
The important thing for us here simply is that we now store a whole product which we do also store in

46
00:04:07.830 --> 00:04:12.590
a separate collection as part of an embedded document in our user,

47
00:04:12.630 --> 00:04:14.910
so we clearly have duplicate data here,

48
00:04:14.970 --> 00:04:20.310
we have the same product here as an embedded document and we have it in products.

49
00:04:20.340 --> 00:04:24.840
So this is maybe something which we should change because if we change the product right now, if we

50
00:04:24.840 --> 00:04:30.170
change the title or the price, this will not be reflected in the cart and in the cart

51
00:04:30.180 --> 00:04:36.680
we should have correct data because if the price changes, we can show the wrong price in our cart,

52
00:04:36.720 --> 00:04:37.480
right.

53
00:04:37.530 --> 00:04:45.840
So actually we'll need to tweak this a little bit more. In our user model where I store product in add

54
00:04:45.840 --> 00:04:48.990
to cart, well

55
00:04:49.260 --> 00:04:53.580
I actually don't want to store all product data in this object

56
00:04:53.580 --> 00:04:54.920
and then the quantity,

57
00:04:55.230 --> 00:05:06.670
I just want to store the product ID by creating a new objectid here and passing product.ID, 

58
00:05:06.670 --> 00:05:09.090
._id as an argument and the quantity,

59
00:05:09.100 --> 00:05:13.590
so now only the reference and the quantity and not the rest of the data.

60
00:05:13.790 --> 00:05:19.320
If I now save this and I click add to cart again,

61
00:05:19.330 --> 00:05:20.360
it gets stuck again, it

62
00:05:20.380 --> 00:05:22.340
doesn't matter too much right now.

63
00:05:22.390 --> 00:05:24.970
If I now update my users,

64
00:05:28.010 --> 00:05:34.200
I get an error here, that should be Product_id, product_id, I forgot the t.

65
00:05:34.460 --> 00:05:44.810
So now again if I update this and I click add to cart again and I reload my users document here or

66
00:05:44.810 --> 00:05:46.160
my collection,

67
00:05:46.160 --> 00:05:51.190
now you see I'm only storing the reference and the quantity and this is exactly the information I want.

68
00:05:51.200 --> 00:05:56.840
If I now want to display information about the product, I have to fetch that manually because I only

69
00:05:56.840 --> 00:06:01.170
have the ID, that on the other hand is all I need for fetching information,

70
00:06:01.190 --> 00:06:02.380
so that is what it is.

71
00:06:02.390 --> 00:06:07.310
But on the other hand if I now do change my product, I don't have to change it in the products collection

72
00:06:07.460 --> 00:06:12.820
and my users because that would be a lot of work for data that might change quite a lot.
