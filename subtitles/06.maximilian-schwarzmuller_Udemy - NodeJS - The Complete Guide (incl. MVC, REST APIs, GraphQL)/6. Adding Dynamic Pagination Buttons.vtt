WEBVTT
1
00:00:02.360 --> 00:00:09.990
So let's now use all that information we get back from our backend when rendering our index.ejs page,

2
00:00:10.110 --> 00:00:16.290
we have all these utility information pieces, these utility variables like total products has next page

3
00:00:16.310 --> 00:00:20.720
and so on which hopefully should be helpful.

4
00:00:20.730 --> 00:00:22.090
So let's go back to index.ejs

5
00:00:22.130 --> 00:00:22.640
.

6
00:00:22.770 --> 00:00:28.980
and there instead of hardcoding this, we can now generate this dynamically.

7
00:00:29.010 --> 00:00:34.940
Now I always want to have page one here, that is something I absolutely need.

8
00:00:35.010 --> 00:00:37.950
Let's say the page next to it should be the current page,

9
00:00:38.190 --> 00:00:44.280
so actually instead of total products, I should return current page here which is simply the page

10
00:00:44.280 --> 00:00:49.760
number so that I always know what's the currently active page. So I'm returning current page as well

11
00:00:49.950 --> 00:00:57.140
and here, I can now output equals current page because I'm now getting that data in my view

12
00:00:57.310 --> 00:01:02.780
and here I therefore will load the current page number if I should click on that link again.

13
00:01:04.120 --> 00:01:08.860
And this current page will receive a css class of active because that will always be the active class

14
00:01:09.370 --> 00:01:16.550
and I'll quickly go to my main css file to give that the same style as when I hover over it.

15
00:01:16.570 --> 00:01:23.080
So here I'll have my pagination a class with an active class added to it with a single dot, a active will

16
00:01:23.080 --> 00:01:26.550
receive the same style as when I hover over it.

17
00:01:26.560 --> 00:01:32.170
Now I only want to render this one by the way if the current page is not one because otherwise I will already

18
00:01:32.170 --> 00:01:41.500
render it here, so we can add some ejs logic here to check if current page is equal to one or to be precise,

19
00:01:41.520 --> 00:01:43.660
if that is not the case.

20
00:01:43.770 --> 00:01:45.660
If that is not the case,

21
00:01:48.450 --> 00:01:54.560
then I will render this otherwise I will not render this. So I can now close that

22
00:01:54.590 --> 00:01:59.270
and now this will only get rendered if the current page is not equal to one, like this.

23
00:02:01.540 --> 00:02:04.290
This will always get rendered, the current page

24
00:02:04.290 --> 00:02:06.540
and I also want to render the next page

25
00:02:06.570 --> 00:02:13.690
let's say, so I will repeat this one more time here and this will be the next page.

26
00:02:13.690 --> 00:02:17.140
Remember the next page is some information which I return as well,

27
00:02:17.140 --> 00:02:24.080
next page here. So I will render the next page, only however if there is a next page and that is another

28
00:02:24.090 --> 00:02:28.350
piece of information I do return, has next page.

29
00:02:28.400 --> 00:02:39.290
So let me go back and here again if has next page, so if that is true, then I will render this, otherwise

30
00:02:39.320 --> 00:02:39.890
I won't,

31
00:02:40.000 --> 00:02:43.910
so here I just close that if statement.

32
00:02:43.990 --> 00:02:49.750
I also want to render the highest page, so I'll add another anchor

33
00:02:52.200 --> 00:02:56.670
tag here and that will use this last page information,

34
00:03:00.150 --> 00:03:04.750
by the way the active class here of course not be added here and also not be added here.

35
00:03:04.890 --> 00:03:10.530
So here I will render the last page and it will lead to last page, here

36
00:03:10.530 --> 00:03:14.150
it will lead to next page by the way so we have to adjust this link

37
00:03:14.160 --> 00:03:16.160
obviously, here it's the last page

38
00:03:20.130 --> 00:03:29.440
and this last page should also not always be rendered, it should only be rendered if last page is not

39
00:03:29.440 --> 00:03:30.520
equal to the current page,

40
00:03:30.520 --> 00:03:34.970
so if we are not already on the current page because then this link would already render the link to

41
00:03:34.970 --> 00:03:43.870
this last page and the next page should also not be equal to the last page because if it is, then this

42
00:03:43.870 --> 00:03:45.180
link will already be rendered

43
00:03:45.280 --> 00:03:48.420
and this is then the last and next page simultaneously

44
00:03:48.610 --> 00:03:54.620
but if both is not true, then I will render this.

45
00:03:54.620 --> 00:03:56.180
Now let's have a look at this

46
00:03:56.180 --> 00:04:06.250
and let's reload this and here I got an error, little logical error. Count used to be the function you should

47
00:04:06.250 --> 00:04:06.520
use,

48
00:04:06.520 --> 00:04:08.290
now it's count documents

49
00:04:08.530 --> 00:04:11.170
so change count to count documents here

50
00:04:11.620 --> 00:04:14.180
but this error is not coming from that

51
00:04:14.210 --> 00:04:19.940
but in the index.ejs here I got a dollar sign instead of a percentage sign which I should use.

52
00:04:20.970 --> 00:04:25.220
With that fixed, this looks a bit better

53
00:04:25.380 --> 00:04:28.710
but I got 11 here and then a two again

54
00:04:28.710 --> 00:04:31.550
so there seemed to be some issues.

55
00:04:31.610 --> 00:04:33.040
For one it's rendering

56
00:04:33.050 --> 00:04:37.890
the one here even though the current page is not equal to one,

57
00:04:37.910 --> 00:04:40.620
the problem here is really just the data format,

58
00:04:42.280 --> 00:04:44.290
we're comparing strings and numbers here

59
00:04:44.380 --> 00:04:48.480
so I should remove one equal sign

60
00:04:48.660 --> 00:04:50.020
and now this works. 

61
00:04:50.100 --> 00:05:00.780
And now regarding the 11, next page somehow is calculated to be 11.

62
00:05:00.790 --> 00:05:07.900
The reason for that is that page here is a string, not a number and therefore page plus one gets concatenated

63
00:05:07.990 --> 00:05:10.310
to 11, so to 11,

64
00:05:10.510 --> 00:05:19.220
this can be fixed by adding a plus here in front of request query page

65
00:05:19.450 --> 00:05:20.860
and now this looks better.

66
00:05:20.980 --> 00:05:26.860
Now I can switch between these two and this is looking all right now with that error, this format,

67
00:05:26.920 --> 00:05:29.110
this data type error fixed,

68
00:05:29.140 --> 00:05:34.870
now what happens if I load that page without the page query parameter and then I have this not a number

69
00:05:34.870 --> 00:05:35.700
issue here.

70
00:05:37.000 --> 00:05:40.120
And to fix this, I can add two pipe symbols here in that one

71
00:05:40.120 --> 00:05:47.340
and this means if this is undefined or if this does not hold a true-ish value, then we'll use this value

72
00:05:47.400 --> 00:05:49.480
instead. With that if I save that

73
00:05:53.180 --> 00:05:55.520
and I reload this page, I'll start on page 1

74
00:05:55.700 --> 00:05:57.940
and now I can jump around.

75
00:05:57.950 --> 00:05:59.180
Now let's also try this,

76
00:05:59.180 --> 00:06:04.060
when changing the items per page to one so that we should have one extra page.

77
00:06:04.100 --> 00:06:12.850
Now if I reload this with Page 1 being loaded, I can go to page 3 and 1, 2, 3.

78
00:06:12.860 --> 00:06:17.870
Now I don't see a two when I'm on page three because we have no logic for it in our template right now,

79
00:06:18.290 --> 00:06:26.060
I could of course add that logic to also show the previous page. For that I can replicate this and

80
00:06:26.060 --> 00:06:29.690
if I have a previous page,

81
00:06:32.560 --> 00:06:37.870
then I can show my previous page and link to it here.

82
00:06:37.870 --> 00:06:42.720
Now of course I want to avoid that I have two ones if I'm on page 2 because that would render this

83
00:06:42.730 --> 00:06:44.920
link and I would render this link,

84
00:06:45.100 --> 00:06:51.810
so I don't want to render this first page if I am on it already or if it's equal to the previous page.

85
00:06:51.910 --> 00:06:53.710
So I only want to render this first page

86
00:06:53.740 --> 00:07:06.570
if it's not equal to the current page and if the previous page is not equal to 1. Now by the way since

87
00:07:06.570 --> 00:07:13.610
I fixed that data type, we can also work with double equal signs here again. So now if I reload this

88
00:07:13.610 --> 00:07:14.910
page,

89
00:07:15.170 --> 00:07:19.090
it's in the wrong place, the previous page here should be before

90
00:07:19.290 --> 00:07:23.900
this current page so let's fix that.

91
00:07:24.930 --> 00:07:26.040
Reload again,

92
00:07:26.160 --> 00:07:27.210
now this is looking better,

93
00:07:27.210 --> 00:07:32.580
now I can go to page two, page one and that all seems to work.

94
00:07:32.580 --> 00:07:42.650
Now let's add another product, product4 with another deck again to see how it works with four products

95
00:07:42.680 --> 00:07:43.950
on the shop page

96
00:07:44.390 --> 00:07:49.970
and now I see the first page, the next page and the last page. If I go to the last page, I see the previous

97
00:07:49.970 --> 00:07:51.480
page and the first page,

98
00:07:51.650 --> 00:07:56.540
if I go to three, well then I have the previous and the next page which is the last page and the first

99
00:07:56.540 --> 00:07:57.110
page.

100
00:07:57.110 --> 00:08:02.120
So now this pagination is working and you can always of course tweak this to your requirements or your

101
00:08:02.120 --> 00:08:03.080
different needs

102
00:08:03.170 --> 00:08:05.400
but now this is looking good to me here.
