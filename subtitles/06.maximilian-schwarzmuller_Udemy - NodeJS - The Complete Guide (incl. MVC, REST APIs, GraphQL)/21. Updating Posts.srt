1
00:00:02,260 --> 00:00:04,230
Belum punya, kami dapat memuat satu posting.

2
00:00:04,240 --> 00:00:06,880
Mari kita pastikan kita juga bisa menambahkan postingan.

3
00:00:06,940 --> 00:00:13,870
Dan seperti biasa, perjalanan itu dimulai dari ujung belakang sana dalam skema kami ingin menambahkan mutasi baru

4
00:00:14,110 --> 00:00:17,000
karena jelas mengedit posting adalah mutasi.

5
00:00:17,740 --> 00:00:18,640
Saya akan menyebutkannya.

6
00:00:18,640 --> 00:00:23,710
Perbarui posting dan saya berharap mendapatkan gagasan tentang posting tersebut.

7
00:00:23,710 --> 00:00:32,220
Saya ingin mengedit dan kemudian beberapa input posting yang merupakan data input posting saya sehingga data yang sama persis

8
00:00:32,230 --> 00:00:38,690
saya harapkan untuk membuat posting baru sebagai hasilnya saya akan mengembalikan posting yang diperbarui.

9
00:00:38,890 --> 00:00:41,230
Jadi ini skema saya.

10
00:00:41,260 --> 00:00:51,660
Sekarang ke resolvers di mana saya akan menambahkan posting pembaruan sebagai fungsi async lagi di mana saya mendapatkan argumen saya.

11
00:00:51,660 --> 00:00:58,750
Saya akan memiliki ID dan input pos dan objek permintaan.

12
00:00:58,960 --> 00:01:00,420
Jadi ini adalah posting pembaruan saya.

13
00:01:00,460 --> 00:01:02,930
Resolder di sana.

14
00:01:02,960 --> 00:01:06,680
Pertama-tama saya ingin memeriksa status otentikasi dan melakukan kesalahan.

15
00:01:06,700 --> 00:01:08,330
Jika pengguna belum mengindikasikan.

16
00:01:08,410 --> 00:01:14,230
Oleh karena itu kita dapat menyalin kode dari fungsi resolder lama kami di mana kami memiliki

17
00:01:14,260 --> 00:01:22,840
pemeriksaan yang sama dan kemudian pertama-tama mendapatkan posting saya dengan menggunakan tunggu dan posting baik-baik oleh id dan menggunakan ekstrak ID itu sebagai argumen.

18
00:01:22,840 --> 00:01:25,610
Saya juga akan mengisi itu dengan Sang Pencipta.

19
00:01:25,620 --> 00:01:30,440
Kami juga memiliki data pengguna lengkap ketika kami mengembalikan pos pembaruan.

20
00:01:30,520 --> 00:01:38,970
Kemudian saya akan memeriksa apakah kita tidak menemukan posting dan saya dapat menyalin cek itu dari sana untuk mengembalikan kesalahan.

21
00:01:39,050 --> 00:01:45,740
Dalam hal ini dan jika kita memiliki posting saya tidak ingin memeriksa apakah pengguna yang mencoba mengeditnya adalah pengguna

22
00:01:45,740 --> 00:01:48,850
yang membuatnya dan untuk itu saya akan memeriksa.

23
00:01:48,860 --> 00:01:54,680
Jika Posting pencipta menggarisbawahi ID ke string.

24
00:01:54,680 --> 00:01:57,370
Jika itu sama dengan meminta ID

25
00:02:01,360 --> 00:02:04,260
pengguna dan itu juga dikonversi ke string.

26
00:02:04,600 --> 00:02:07,620
Jika keduanya cocok maka saya tahu pengguna ini adalah penciptanya.

27
00:02:07,690 --> 00:02:08,860
Jika mereka tidak cocok.

28
00:02:08,860 --> 00:02:14,890
Jadi jika saya menambahkan tanda seru di sini, maka kenalilah seseorang yang mencoba mengedit posting

29
00:02:14,890 --> 00:02:20,020
yang tidak ditawarkan untuk melakukannya dan itu adalah Kasal lagi membuat kesalahan.

30
00:02:20,080 --> 00:02:24,330
Tidak semua yang paling adil adalah pesan kesalahan.

31
00:02:24,400 --> 00:02:30,740
Saya akan menambahkan kode 403 dan saya akan membuang kesalahan itu dan kemudian kita dapat melanjutkan.

32
00:02:31,240 --> 00:02:40,430
Jika kita ingin menulis pengguna namun kita sekarang dapat mengedit posting dan mengatur judul sama dengan judul input tulisan.

33
00:02:40,570 --> 00:02:44,260
Kita sekarang juga dapat menambahkan validasi dan kita harus.

34
00:02:44,260 --> 00:02:50,820
Jadi saya bisa gulir ke fungsi Buat posting saya dan ambil logika validasi itu.

35
00:02:51,040 --> 00:02:57,490
Semua logika itu dimulai dari array kosong yang diatur ke salib diperiksa dan itu adalah sesuatu yang juga ingin

36
00:02:57,490 --> 00:03:00,430
saya lakukan sebelum saya mulai mengedit posting saya.

37
00:03:00,440 --> 00:03:01,510
Tidelands aktif.

38
00:03:01,750 --> 00:03:04,340
Tapi sekarang di sini saya tahu inputnya valid.

39
00:03:04,450 --> 00:03:07,810
Jadi sekarang saya akan mengedit judul saya.

40
00:03:08,110 --> 00:03:16,250
Saya akan menambahkannya konten saya dan sekarang saya juga akan menambahkan gambar saya Anda l.

41
00:03:16,250 --> 00:03:22,790
Jika itu berubah dan itu tidak dijamin karena pengguna tidak memilih gambar baru gambar tidak akan

42
00:03:22,790 --> 00:03:26,680
berubah jadi saya akan memeriksa apakah memposting gambar gambar.

43
00:03:26,720 --> 00:03:30,630
L Anda tidak sama dengan tidak terdefinisi.

44
00:03:30,830 --> 00:03:35,150
Dan sekarang ini harus diperiksa terhadap teks karena akan dikonversi ke teks.

45
00:03:35,150 --> 00:03:39,350
Ngomong-ngomong aku mengirimnya di ujung depan jadi jika ini ada di temukan.

46
00:03:39,380 --> 00:03:48,140
Dana akan melanjutkan tetapi jika tidak ditemukan maka saya juga akan menimpa gambar Anda dengan gambar baru

47
00:03:48,200 --> 00:03:50,360
dan Anda tentu saja.

48
00:03:50,510 --> 00:03:59,110
Kalau tidak, saya tidak akan menyentuh gambar Anda el dan kemudian saya akan memiliki posting saya diperbarui dengan menunggu posting

49
00:03:59,110 --> 00:04:05,590
aman dan saya kemudian akan mengembalikan posting saya yang diperbarui di sini atau beberapa data.

50
00:04:05,590 --> 00:04:17,620
Saya akan mengembalikan data dokumen posting saya yang diperbarui dan kembali mengganti ID IDE dengan ID posting yang diperbarui ke string dan sama

51
00:04:17,680 --> 00:04:26,370
untuk tanggal yang dibuat pada akan diganti dengan posting yang diperbarui dibuat pada 2 string Isel

52
00:04:26,380 --> 00:04:33,990
dan diperbarui pada akan diganti dengan posting yang diperbarui diperbarui pada 2 string Isel.

53
00:04:33,990 --> 00:04:39,790
Jadi ini adalah respons yang ingin saya kirim kembali ke klien saya di sini.

54
00:04:39,860 --> 00:04:43,780
Dengan itu kita mendapatkan resolver di tempat kita semoga mendapatkan semua yang kita butuhkan.

55
00:04:43,780 --> 00:04:52,800
Sekarang mari kita lanjutkan ke aplikasi aksi ulang kita dan di sana di Fida J. S. kita perlu menemukan bahasa Finlandia yang ditambahkan hÃ¤ndler

56
00:04:54,110 --> 00:04:55,280
jadi gulir

57
00:04:58,900 --> 00:05:08,780
ke bawah di fungsi ini dan fungsi pengeditan selesai kita akan selalu mengirim gambar kita ke Ayah dan menunjuk meskipun tentu saja itu bisa menjadi

58
00:05:09,110 --> 00:05:15,030
kasus bahwa tidak ada gambar untuk ditambahkan jika tidak ada gambar baru yang dipilih .

59
00:05:15,170 --> 00:05:16,310
Tapi itu tidak masalah.

60
00:05:16,310 --> 00:05:21,570
Kami menangani skenario itu di titik akhir kami tepat di gambar posting.

61
00:05:21,590 --> 00:05:26,380
Kami memeriksa keberadaan file dan kami mengirim respons jika tidak ada file yang diberikan.

62
00:05:26,840 --> 00:05:29,640
Jadi setelah itu di sini kita lanjutkan.

63
00:05:29,810 --> 00:05:36,350
Dan kita akan memiliki path file meskipun path file itu mungkin tidak terdefinisi dan itu sebabnya dalam grafik

64
00:05:36,380 --> 00:05:39,700
saya API saya memeriksa untuk itu tidak terdefinisi.

65
00:05:39,980 --> 00:05:47,090
Kita bisa menangani ini dengan cara yang berbeda tentu saja kita bisa juga dengan mudah mempertahankan jalur file lama di sini

66
00:05:47,140 --> 00:05:49,160
maka jika ini sedang ditemukan.

67
00:05:49,160 --> 00:05:53,320
Tapi saya akan pergi dengan pendekatan ini dan kemudian kami mengirim permintaan grafik Q out.

68
00:05:53,330 --> 00:06:00,500
Sekarang tentu saja tidak akan selalu membuat posting meskipun mungkin juga kita menambahkan posting.

69
00:06:00,710 --> 00:06:08,390
Jadi saya akan memeriksa apakah status Adut ini benar ish yang berarti kami mengedit dan mereka tidak mengatur semua permintaan

70
00:06:08,410 --> 00:06:10,550
RFQ ke permintaan yang berbeda.

71
00:06:10,620 --> 00:06:21,200
Jadi untuk objek di mana kueri saya kemudian terlihat berbeda, saya tidak akan menyalin kueri ini di

72
00:06:21,200 --> 00:06:30,570
jenderal atau menyalin semua kode antara pembukaan dan penutupan kembali saya mengambil seperti ini.

73
00:06:30,710 --> 00:06:38,920
Tapi tentu saja saya menargetkan posting pembaruan di sini dan tidak membuat posting jadi saya menargetkan mutasi ini di sana-sini saya

74
00:06:39,920 --> 00:06:42,530
juga perlu memasukkan data yang berbeda.

75
00:06:42,590 --> 00:06:44,610
Saya harus memasukkan

76
00:06:48,740 --> 00:06:55,280
ID saya yang saya dapatkan dari status ini menambahkan ID garis bawah.

77
00:06:55,580 --> 00:06:58,530
Saya tetap memasukkan input tulisan seperti sebelumnya.

78
00:06:58,550 --> 00:07:08,200
Itu tidak berubah dan saya masih ingin mendapatkan basis data yang sama sehingga juga tidak berubah.

79
00:07:08,260 --> 00:07:13,750
Kemudian kami mengirim permintaan data dan di handler dari permintaan.

80
00:07:13,900 --> 00:07:18,710
Saya sudah memiliki beberapa logika yang harus menangani ini dengan benar jika kami memperbarui.

81
00:07:19,090 --> 00:07:22,150
Jadi mari kita simpan itu semua dan mari kita coba.

82
00:07:22,270 --> 00:07:30,240
Mari memuat ulang dan mengedit dokumen lain dan menambahkan beberapa tanda seru tanpa menambahkan gambar baru.

83
00:07:30,430 --> 00:07:33,640
Dan saya mendapatkannya kesalahan di sini.

84
00:07:33,860 --> 00:07:37,010
Secara umum meskipun sepertinya itu berhasil.

85
00:07:37,010 --> 00:07:41,420
Saya memiliki tanda seru di sini dan gambar yang lama masih ada di sana.

86
00:07:41,420 --> 00:07:42,680
Saya juga masih bisa menggunakannya.

87
00:07:42,710 --> 00:07:46,870
Dan di sini saya melihat perubahan sekarang tentang kesalahan itu.

88
00:07:46,870 --> 00:07:52,230
Nah itu terkait dengan bagaimana kita mengekstrak data dari respons yang kita buat posting.

89
00:07:52,330 --> 00:07:59,920
Tetapi tentu saja jika kita mengirim permintaan posting pembaruan maka bidang ini tempat data respons kita disimpan akan

90
00:08:00,070 --> 00:08:03,100
dinamai posting pembaruan dan tidak membuat posting.

91
00:08:03,460 --> 00:08:05,290
Karena itu di sini dan kita bisa.

92
00:08:05,290 --> 00:08:06,650
Ngomong-ngomong, validasi kami di sini.

93
00:08:06,670 --> 00:08:08,770
Ini disimpan dalam pos pembaruan.

94
00:08:08,770 --> 00:08:16,270
Karena itu yang bisa kita lakukan adalah kita dapat menambahkan bidang data respons variabel baru atau apa pun yang ingin Anda beri

95
00:08:16,270 --> 00:08:16,630
nama.

96
00:08:16,840 --> 00:08:23,170
Dan secara default yang harus dibuat posting karena membuat posting juga adalah permintaan default kami di sana.

97
00:08:24,400 --> 00:08:35,380
Tapi kemudian saya akan menambahkan cek dan melihat apakah keadaan ini menambahkan postingan ish benar.

98
00:08:35,490 --> 00:08:41,750
Dalam hal ini bidang data tempat saya ingin mengekstrak data akan memperbarui pos.

99
00:08:41,760 --> 00:08:47,880
Dan sekarang kita hanya perlu menggunakan variabel itu di sini untuk mengambil data kita secara dinamis

100
00:08:47,880 --> 00:08:56,310
dan kita bisa melakukannya dengan memilih semua ini membuat contoh pos tahun dengan titik pertama dan menggantinya dengan tanda kurung siku di mana

101
00:08:56,550 --> 00:09:03,420
kita melewati keadaan diam di lapangan dan ini sekarang akan sekarang gunakan nilai di dalam bidang data lainnya

102
00:09:03,660 --> 00:09:08,520
untuk mengakses properti Well dengan nama nilai itu di objek data kami.

103
00:09:08,520 --> 00:09:16,380
Dan sekarang jika kita memuat kembali kita harus dapat menghapus tanda seru dan mencoba memilih cangkir sebagai

104
00:09:16,380 --> 00:09:17,480
belum matang.

105
00:09:17,490 --> 00:09:22,750
Kecuali tidak ada kesalahan dan kami melihat omong kosong di sini juga.

106
00:09:22,800 --> 00:09:29,900
Jadi ini sepertinya berfungsi status dan menghapus posting adalah hal-hal yang tersisa yang tidak berfungsi.
