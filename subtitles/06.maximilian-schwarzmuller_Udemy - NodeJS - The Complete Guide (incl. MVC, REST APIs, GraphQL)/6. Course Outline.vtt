WEBVTT
1
00:00:02.300 --> 00:00:08.270
Now that we had a look at the basics about nodejs, what we can do with it and now that we even used it,

2
00:00:08.270 --> 00:00:13.700
let me walk you through the content of this course and explain what's in the course and where you can

3
00:00:13.700 --> 00:00:18.830
find what. We're almost done getting started and in the next module,

4
00:00:18.830 --> 00:00:25.040
I will give you a brief javascript refresher, just to make sure we're all on the same page regarding

5
00:00:25.040 --> 00:00:31.520
the core javascript syntax but more importantly, about some next gen javascript features which we'll

6
00:00:31.520 --> 00:00:37.500
use in the course. Basic javascript knowledge is assumed and will not be taught in that module

7
00:00:37.580 --> 00:00:39.290
but if you just need a refresher,

8
00:00:39.350 --> 00:00:45.710
some additional information or this next gen javascript knowledge, then this is a module you should take

9
00:00:45.740 --> 00:00:47.800
otherwise it's optional.

10
00:00:48.020 --> 00:00:51.520
Now after this refresher or immediately after this module,

11
00:00:51.530 --> 00:00:55.440
if you don't need the refresher we'll dive into the nodejs basics, 

12
00:00:55.520 --> 00:01:01.400
how it generally works, how we can work with streams of data and some core nodejs modules,

13
00:01:01.400 --> 00:01:07.270
so really the nitty gritty details you need to know about the language, so to say.

14
00:01:07.640 --> 00:01:12.070
And we'll then dive into efficiently developing with nodejs

15
00:01:12.070 --> 00:01:12.810
.

16
00:01:12.860 --> 00:01:17.400
how you can debug your code, handle errors and so on.

17
00:01:17.450 --> 00:01:20.270
Now thereafter we'll dive into expressjs,

18
00:01:20.450 --> 00:01:24.390
the most popular framework you can use for nodejs.

19
00:01:24.440 --> 00:01:31.730
I'll explain why we use it and why we still in it's heart use nodejs, why we still learn about nodejs

20
00:01:32.030 --> 00:01:36.850
even though we use epressjs because using it makes sense, it makes things easier,

21
00:01:36.860 --> 00:01:43.120
you will use it if you are working with nodejs but still of course, we still use nodejs

22
00:01:43.130 --> 00:01:45.170
with all of that. Now

23
00:01:45.290 --> 00:01:50.930
thereafter we'll dive into templating engines. That are basically some tools you could say that allow

24
00:01:50.930 --> 00:01:57.900
you to generate html pages on the server with dynamic content encoded in them and that is how you can

25
00:01:57.910 --> 00:02:01.700
return different pages or pages with different content

26
00:02:01.700 --> 00:02:02.950
back to your users,

27
00:02:03.050 --> 00:02:05.250
so that will be an important module.

28
00:02:05.300 --> 00:02:10.070
Now thereafter, we'll dive into the model view controller pattern, what that is and why we use it

29
00:02:10.070 --> 00:02:14.910
and of course how we use it and we'll then have a look at some advanced routing concepts.

30
00:02:14.930 --> 00:02:20.750
Routing is something we'll also learn in the expressjs module and we'll dive deep into the models of

31
00:02:20.750 --> 00:02:23.180
the model view controller pattern.

32
00:02:23.180 --> 00:02:27.020
Now after we're done with that, it's time to dive into databases,

33
00:02:27.020 --> 00:02:31.300
I will start by connecting our node application with a SQL database,

34
00:02:31.400 --> 00:02:32.330
MySQL

35
00:02:32.360 --> 00:02:38.390
to be precise. As a next step, we'll dive deeper into that and use a package that makes working with SQL

36
00:02:38.410 --> 00:02:39.750
databases easier,

37
00:02:39.790 --> 00:02:47.480
Sequelize. Now and after having seen SQL, we'll continue with NoSQL and see how we would use that

38
00:02:47.900 --> 00:02:53.840
and I'll use Mongoose there to also make working with that easier and we'll then stick to NoSQL for the rest

39
00:02:53.840 --> 00:03:01.280
of the course but you'll thoroughly learn both SQL and NoSQL. Now after this, we'll dive into sessions

40
00:03:01.280 --> 00:03:01.920
and cookies,

41
00:03:01.920 --> 00:03:04.480
what it is, why you use it and how you use it.

42
00:03:04.730 --> 00:03:06.470
We'll have a look at authentication,

43
00:03:06.500 --> 00:03:13.540
so how we can make sure that users can sign up and sign in with our application. We'll dive into sending

44
00:03:13.550 --> 00:03:15.110
emails, how that would work,

45
00:03:15.110 --> 00:03:20.300
how can we auto-generate emails when a user signs up for example. 

46
00:03:20.420 --> 00:03:27.170
We'll also dive into advanced authentication features and also authorization which means that for

47
00:03:27.170 --> 00:03:31.850
example only a user who created a product can edit or delete it.

48
00:03:32.150 --> 00:03:38.480
We'll then have a look at user input validation which is a crucial part in any web application because

49
00:03:38.480 --> 00:03:44.390
you want to make sure that the data your users enter into your forms is correct and valid and you'll

50
00:03:44.390 --> 00:03:46.240
learn how you can do that efficiently

51
00:03:46.280 --> 00:03:52.520
in this module. And we'll then dive into error handling because errors will happen,

52
00:03:52.520 --> 00:03:58.640
for example if the user enters wrong input and I will show you how you can handle different kinds of

53
00:03:58.640 --> 00:04:00.920
errors in an elegant way.

54
00:04:01.370 --> 00:04:04.380
Now thereafter, we'll dive into something important,

55
00:04:04.430 --> 00:04:06.500
file up and downloads.

56
00:04:06.500 --> 00:04:08.140
How can you handle these,

57
00:04:08.150 --> 00:04:14.410
how can you write code that takes incoming files, stores them and is able to return files?

58
00:04:14.420 --> 00:04:20.630
I'll also show you how you can automatically generate pdf documents on the server in this module.

59
00:04:21.170 --> 00:04:22.790
Well then have a look at pagination,

60
00:04:22.820 --> 00:04:27.370
so how we can return our data in chunks instead of all the data at once

61
00:04:27.410 --> 00:04:29.810
which is not ideal for your bandwidth.

62
00:04:29.960 --> 00:04:35.060
We'll thereafter have a look at async request and I'll explain what that is and how we can handle it

63
00:04:35.150 --> 00:04:38.970
with nodejs and we'll then dive into payments,

64
00:04:38.990 --> 00:04:43.260
how can we accept payments through a service called stripejs,

65
00:04:43.280 --> 00:04:49.580
obviously something we'll need in any shop we build. And thereafter, we'll dive into a different kind of

66
00:04:49.580 --> 00:04:51.690
application you can build with nodejs,

67
00:04:51.890 --> 00:04:53.110
we'll dive into rest

68
00:04:53.120 --> 00:04:59.850
APIs and one module does not sound like a lot of content on this very important technology

69
00:05:00.050 --> 00:05:05.840
but actually I got two modules on that and we'll also dive into file uploads and rest APIs,

70
00:05:06.020 --> 00:05:08.800
authentication, pagination, all that stuff

71
00:05:08.870 --> 00:05:14.810
and additionally these modules will build up on the entire modules before that because you will learn

72
00:05:14.850 --> 00:05:20.480
that rest API does not differ that much from a normal node application

73
00:05:20.480 --> 00:05:26.480
and I will show you in detail which knowledge you still need and how you need to change some things,

74
00:05:26.480 --> 00:05:31.060
not that many actually to turn an existing application into a rest

75
00:05:31.070 --> 00:05:32.680
API. Now

76
00:05:32.750 --> 00:05:38.690
and once we're done with that, I will dive into a more modern javascript feature,

77
00:05:38.740 --> 00:05:44.570
async await and how you can use that in your node application and we'll dive into web socket and

78
00:05:44.570 --> 00:05:51.860
socket IO. This is a technology or a set of technologies that allows you to add real time functionalities

79
00:05:51.890 --> 00:05:52.570
to your app,

80
00:05:52.580 --> 00:05:59.270
so for example if one user sends a message and you instantly want to notify another user you can use

81
00:05:59.270 --> 00:06:00.370
web sockets for that

82
00:06:00.470 --> 00:06:06.930
and I will show how it works in this module. After this module, we'll dive into a different kind of API,

83
00:06:06.960 --> 00:06:13.700
we had a look at rest APIs, we'll then have a look at graphQL APIs. GraphQL is a very modern and

84
00:06:13.700 --> 00:06:16.370
popular way of building APIs,

85
00:06:16.610 --> 00:06:18.800
it has some advantages over rest

86
00:06:18.800 --> 00:06:21.480
APIs, also some disadvantages

87
00:06:21.620 --> 00:06:27.200
and I will dive into GraphQL and how it differs from rest APIs in this module and I will show

88
00:06:27.200 --> 00:06:34.340
you how to build a GraphQL API from scratch with nodejs and this will be quite a big module even

89
00:06:34.340 --> 00:06:37.020
though its only one block on this slide.

90
00:06:37.040 --> 00:06:39.580
Now thereafter, we'll have a look at deployment.

91
00:06:39.590 --> 00:06:43.720
How can you take your application you build, all your node code you build,

92
00:06:43.760 --> 00:06:49.110
how can you take that and move it to a real server in the web and ensure that it runs there?

93
00:06:49.280 --> 00:06:50.590
This will be shown there,

94
00:06:50.600 --> 00:06:56.420
there I'll also dive into things like setting up SSL encryption. And once were done with that, I'll have

95
00:06:56.420 --> 00:06:58.300
a short module on nodejs

96
00:06:58.330 --> 00:07:04.020
functionalities beyond creating web servers with it because you can use it for other things too

97
00:07:04.070 --> 00:07:05.350
as I will mention there.

98
00:07:05.750 --> 00:07:07.440
And then we're done,

99
00:07:07.440 --> 00:07:13.230
I'll end the course by giving you some next steps, potential ideas on how to continue and by then,

100
00:07:13.310 --> 00:07:20.720
you will have learned a lot about nodejs and express and the many other things we'll dive into in this

101
00:07:20.720 --> 00:07:21.840
course.

102
00:07:21.950 --> 00:07:27.500
I hope you are as excited as I am and with that, let's quickly move on so that we can quickly get to

103
00:07:27.500 --> 00:07:28.930
the point where we write code.
