WEBVTT
1
00:00:02.110 --> 00:00:09.130
That's it for this module. You learned that when moving from a classic node application which I don't

2
00:00:09.130 --> 00:00:14.830
mean in the sense of how you built it in the past, so simply just an application where you render 

3
00:00:14.830 --> 00:00:19.460
the views in the server, that is a classic application because it is what we started with in this course.

4
00:00:19.720 --> 00:00:25.540
So if you move from such a node application to a rest API, you'll learn that most of the server side

5
00:00:25.540 --> 00:00:27.380
code does not change,

6
00:00:27.410 --> 00:00:33.950
you work with validation files and so on in exactly the same way as you did with

7
00:00:33.970 --> 00:00:39.790
well the classic approach. Only request and response data changes because there you send json data,

8
00:00:39.940 --> 00:00:41.950
you don't render any views.

9
00:00:41.950 --> 00:00:50.170
You also got more http methods available which you can use to construct your endpoints, your API endpoints

10
00:00:50.380 --> 00:00:56.830
and the most important takeaway is that the rest API server does not care about the client.

11
00:00:56.950 --> 00:00:59.230
The requests are handled in isolation,

12
00:00:59.290 --> 00:01:03.750
so every request is treated as if it would arrive for the first time.

13
00:01:03.790 --> 00:01:06.940
So we don't use sessions, the server, the rest

14
00:01:06.940 --> 00:01:09.530
API does not store any sessions,

15
00:01:09.550 --> 00:01:12.670
it does not store any client data.

16
00:01:12.880 --> 00:01:18.550
Now that has important implications for authentication. Due to no sessions being used,

17
00:01:18.580 --> 00:01:20.350
the authentication works differently.

18
00:01:20.350 --> 00:01:27.010
Each request needs to be able to send some piece of data that proves that the request is authenticated

19
00:01:27.430 --> 00:01:33.090
and that is this json web token which we generated and worked with in this module.

20
00:01:33.100 --> 00:01:40.990
It's a common way of storing some authentication information in a token, a piece of data which you send

21
00:01:40.990 --> 00:01:47.020
to the client, which you store on the client and then which then gets attached to every outgoing request

22
00:01:47.260 --> 00:01:49.390
to a protected resource.

23
00:01:49.690 --> 00:01:55.420
Json web tokens are signed by the server and only the server can validate them by using a private

24
00:01:55.450 --> 00:01:57.940
key which is only known to the server,

25
00:01:57.970 --> 00:02:04.880
hence you can't fake or manipulate tokens on the client and that's it for this module.

26
00:02:04.890 --> 00:02:07.640
We now had a detailed look at building rest

27
00:02:07.640 --> 00:02:14.660
APIs, a common form of node application which you need and a lot of scenarios and now you have already

28
00:02:14.810 --> 00:02:22.750
a very broad toolset which allows you to build extremely versatile and powerful node applications.

29
00:02:22.880 --> 00:02:24.830
We're still not done with the course though,

30
00:02:24.870 --> 00:02:25.870
there's more to come.
