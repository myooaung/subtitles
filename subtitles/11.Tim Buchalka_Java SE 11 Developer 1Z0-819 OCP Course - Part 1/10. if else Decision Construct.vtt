WEBVTT
1
1

00:00:04.755  -->  00:00:06.830
<v Instructor>In this video, I'll be reviewing</v>
2

2

00:00:06.830  -->  00:00:08.472
Java's decision constructs.
3

3

00:00:08.472  -->  00:00:10.880
These are the if/else statements as well as
4

4

00:00:10.880  -->  00:00:12.480
the switch statement.
5

5

00:00:12.480  -->  00:00:14.080
The if statement allows conditional
6

6

00:00:14.080  -->  00:00:15.290
execution of a statement,
7

7

00:00:15.290  -->  00:00:16.316
or block of statements,
8

8

00:00:16.316  -->  00:00:19.331
or a choice of two statements or statement blocks.
9

9

00:00:19.331  -->  00:00:20.993
I'm sure you know it well.
10

10

00:00:22.150  -->  00:00:23.420
Some things to remember.
11

11

00:00:23.420  -->  00:00:26.066
The words 'then', and 'elseif' are not valid,
12

12

00:00:26.066  -->  00:00:27.596
these are from other languages.
13

13

00:00:27.596  -->  00:00:31.410
If you do not have a bracket after the if or else,
14

14

00:00:31.410  -->  00:00:33.320
then only one line of code is contained
15

15

00:00:33.320  -->  00:00:34.900
within the conditional block.
16

16

00:00:34.900  -->  00:00:37.730
You can have an empty statement block after the if or else
17

17

00:00:37.730  -->  00:00:39.449
as long as a semi-colon follows.
18

18

00:00:39.449  -->  00:00:42.850
Dangling elses are assumed to go with the inner most
19

19

00:00:42.850  -->  00:00:44.120
if statement.
20

20

00:00:44.120  -->  00:00:45.130
We'll actually be walking through
21

21

00:00:45.130  -->  00:00:46.380
some common including mistakes,
22

22

00:00:46.380  -->  00:00:47.740
and items that might find their way
23

23

00:00:47.740  -->  00:00:50.010
into an exam question as well.
24

24

00:00:50.010  -->  00:00:52.170
So let's start by creating a new project called "Decisions"
25

25

00:00:52.170  -->  00:00:53.300
which I've already done.
26

26

00:00:53.300  -->  00:00:54.590
Then I'm going to create a new class now
27

27

00:00:54.590  -->  00:00:56.290
called "IfElseExamples".
28

28

00:01:02.540  -->  00:01:05.370
Now what I'm gonna do here is paste some code
29

29

00:01:05.370  -->  00:01:06.270
to get us started.
30

30

00:01:08.428  -->  00:01:10.660
Note that line 12 is completely valid
31

31

00:01:10.660  -->  00:01:12.872
if flag in parentheses with a semi-colon.
32

32

00:01:12.872  -->  00:01:15.760
Just needs the semi-colon to make the line valid.
33

33

00:01:15.760  -->  00:01:18.190
So you might be a bit surprised by the fact that
34

34

00:01:18.190  -->  00:01:20.758
the lines 12 and 13 works.
35

35

00:01:20.758  -->  00:01:23.760
Looking at the code from lines 18 through 22
36

36

00:01:23.760  -->  00:01:25.954
the compiler is formatting the code nicely here
37

37

00:01:25.954  -->  00:01:28.200
indicating what is really going on.
38

38

00:01:28.200  -->  00:01:30.360
However look for similar code on the exam
39

39

00:01:30.360  -->  00:01:32.181
where it's not formatted neatly or you.
40

40

00:01:32.181  -->  00:01:34.583
So just to confirm let's actually run this code.
41

41

00:01:37.020  -->  00:01:38.780
You can see that we got "1. flag is false"
42

42

00:01:38.780  -->  00:01:41.713
and "2. flag is false" based on that code.
43

43

00:01:43.060  -->  00:01:45.310
Alright so let's look at the way you might see
44

44

00:01:45.310  -->  00:01:47.510
a nested if/else on an exam question.
45

45

00:01:47.510  -->  00:01:48.780
So I'm going to paste the code in now
46

46

00:01:48.780  -->  00:01:51.760
and I'm going to use a feature intended to help in pasting
47

47

00:01:51.760  -->  00:01:53.340
so that it doesn't paste formatted.
48

48

00:01:53.340  -->  00:01:56.040
So we actually see it as you might see it in the exam.
49

49

00:01:58.260  -->  00:02:00.985
I'm gonna do "Paste without Formatting".
50

50

00:02:00.985  -->  00:02:02.987
All right so as you can see the comment on line 24
51

51

00:02:02.987  -->  00:02:04.948
"Formatted to mislead..." now.
52

52

00:02:04.948  -->  00:02:07.550
I think particularly the code starting at line 30
53

53

00:02:07.550  -->  00:02:10.690
does look like its a possible compiler error, doesn't it?
54

54

00:02:10.690  -->  00:02:13.280
So notice nothing from the third if/else statement
55

55

00:02:13.280  -->  00:02:14.330
is actually printed.
56

56

00:02:14.330  -->  00:02:16.360
So that's the code starting on line 25.
57

57

00:02:16.360  -->  00:02:18.140
'Cause we've already established down at the bottom
58

58

00:02:18.140  -->  00:02:19.323
that flag is set to false.
59

59

00:02:19.323  -->  00:02:22.040
And when flag is false the else in this statement
60

60

00:02:22.040  -->  00:02:25.390
that prints 3 is false is actually part of the inner else
61

61

00:02:25.390  -->  00:02:28.330
which gets excused only if flag is true.
62

62

00:02:28.330  -->  00:02:30.953
Let's confirm this and run the code.
63

63

00:02:32.690  -->  00:02:35.520
You can see the error report we got is one, two, and four.
64

64

00:02:35.520  -->  00:02:37.592
And obviously we get our "4. Flag is false".
65

65

00:02:37.592  -->  00:02:39.739
So again that is an example of question
66

66

00:02:39.739  -->  00:02:41.886
you may get in the exam
67

67

00:02:41.886  -->  00:02:44.250
with the formatting designed to confuse you,
68

68

00:02:44.250  -->  00:02:46.717
and basically make you get the answer wrong.
69

69

00:02:46.717  -->  00:02:48.241
All right so moving on.
70

70

00:02:48.241  -->  00:02:50.300
I want to now try a code example that
71

71

00:02:50.300  -->  00:02:52.910
probably most of us have inadvertently coded
72

72

00:02:52.910  -->  00:02:54.072
at one time or another.
73

73

00:02:54.072  -->  00:02:56.543
So lets put that code in or paste that code in.
74

74

00:02:58.250  -->  00:02:59.430
Quickly run the code,
75

75

00:03:01.173  -->  00:03:03.360
And you can see flag is true there.
76

76

00:03:03.360  -->  00:03:04.560
So why's that happening when we know,
77

77

00:03:04.560  -->  00:03:07.211
I've made it very obvious that I want to be
78

78

00:03:07.211  -->  00:03:08.771
setting flag as false.
79

79

00:03:08.771  -->  00:03:09.830
Well flags true here because of the if statement
80

80

00:03:09.830  -->  00:03:12.100
condition was actually doing an assignment
81

81

00:03:12.100  -->  00:03:13.930
and not evaluating an expression.
82

82

00:03:13.930  -->  00:03:15.997
We felt where writing if flag is equal to true,
83

83

00:03:15.997  -->  00:03:18.410
but we typed if "flag = true"
84

84

00:03:18.410  -->  00:03:20.370
which assigns the value true to flag
85

85

00:03:20.370  -->  00:03:22.990
and so this condition is always true now.
86

86

00:03:22.990  -->  00:03:25.444
Some example questions look very simple.
87

87

00:03:25.444  -->  00:03:29.179
I'll paste this code in.
88

88

00:03:29.179  -->  00:03:30.600
You can see what the code is doing
89

89

00:03:30.600  -->  00:03:32.080
is testing precedence/assignment
90

90

00:03:32.080  -->  00:03:33.820
inside an if/else statement.
91

91

00:03:33.820  -->  00:03:35.170
So if we actually run this,
92

92

00:03:38.120  -->  00:03:40.930
We get true, false, and false.
93

93

00:03:40.930  -->  00:03:42.780
The expression in the if statement
94

94

00:03:42.780  -->  00:03:44.642
is evaluated left to right,
95

95

00:03:44.642  -->  00:03:47.286
so a is assigned true but everything to the right
96

96

00:03:47.286  -->  00:03:50.430
of the conditional or operator is ignored
97

97

00:03:50.430  -->  00:03:52.680
because the expression on the left evaluated true.
98

98

00:03:52.680  -->  00:03:54.650
A little bit sneaky.
99

99

00:03:54.650  -->  00:03:55.950
Let's try another example.
100

100

00:03:58.432  -->  00:04:00.123
All right so we run the code,
101

101

00:04:02.083  -->  00:04:04.850
and we get true, true, false here.
102

102

00:04:04.850  -->  00:04:06.140
The explanation for this,
103

103

00:04:06.140  -->  00:04:08.240
is that the conditional and statement
104

104

00:04:08.240  -->  00:04:10.960
needs to evaluate both statements to determine
105

105

00:04:10.960  -->  00:04:13.220
the resulting boolan which would be true
106

106

00:04:13.220  -->  00:04:16.480
and again the conditional or requires only the left side
107

107

00:04:16.480  -->  00:04:19.580
to be evaluated if it returns true.
108

108

00:04:19.580  -->  00:04:20.720
All right so lets end the video here.
109

109

00:04:20.720  -->  00:04:23.320
In the next video we'll start taking a look at
110

110

00:04:23.320  -->  00:04:26.090
the switch design construct in Java.
111

111

00:04:26.090  -->  00:04:27.390
See you in the next video.
