WEBVTT
1
1

00:00:05.620  -->  00:00:08.420
<v ->In the last video, we ended up creating this interface,</v>
2

2

00:00:08.420  -->  00:00:10.713
countable, in our org.pkg.util package,
3

3

00:00:11.980  -->  00:00:14.970
in our org.module.util module.
4

4

00:00:14.970  -->  00:00:16.830
So let's now implement this interface
5

5

00:00:16.830  -->  00:00:19.090
in a class in another module.
6

6

00:00:19.090  -->  00:00:21.530
So to do that, we're gonna create yet another module.
7

7

00:00:21.530  -->  00:00:23.900
(clicking)
8

8

00:00:23.900  -->  00:00:26.673
We'll call this one org.module.base.
9

9

00:00:26.673  -->  00:00:28.545
So org.module.base.
10

10

00:00:28.545  -->  00:00:30.795
(clicking)
11

11

00:00:31.960  -->  00:00:35.488
We're gonna create our module info file as per normal.
12

12

00:00:35.488  -->  00:00:36.321
(clicking)
13

13

00:00:36.321  -->  00:00:37.800
We're gonna make a change here,
14

14

00:00:37.800  -->  00:00:39.180
we're gonna require the module
15

15

00:00:39.180  -->  00:00:41.320
that has our interface that we just added.
16

16

00:00:41.320  -->  00:00:43.145
So, I'm going to type requires.
17

17

00:00:43.145  -->  00:00:44.920
(clicking)
18

18

00:00:44.920  -->  00:00:46.933
Org.module.util.
19

19

00:00:47.850  -->  00:00:49.590
We need to add the dependency that (mumbles)
20

20

00:00:49.590  -->  00:00:51.954
is asking us to add, for its own internal purposes.
21

21

00:00:51.954  -->  00:00:54.900
(clicking)
22

22

00:00:54.900  -->  00:00:55.900
Okay, now (mumbles).
23

23

00:00:57.270  -->  00:00:58.370
Now what we need to do,
24

24

00:00:58.370  -->  00:01:00.970
we need to actually export the package
25

25

00:01:00.970  -->  00:01:03.440
in org.module.util that has the interface.
26

26

00:01:03.440  -->  00:01:05.340
We need to do that before we can access that.
27

27

00:01:05.340  -->  00:01:07.800
So we're going to go back to our org.module.util,
28

28

00:01:07.800  -->  00:01:10.692
module-info.java, and you can see there that's that file.
29

29

00:01:10.692  -->  00:01:13.780
At the moment, we've got this requires transitive line, too,
30

30

00:01:13.780  -->  00:01:15.610
which we need to keep.
31

31

00:01:15.610  -->  00:01:19.190
So to export, we're gonna type exports,
32

32

00:01:19.190  -->  00:01:22.080
and it's gonna be org.pkg.util
33

33

00:01:23.330  -->  00:01:25.660
in the package we wanna export.
34

34

00:01:25.660  -->  00:01:27.030
All right, so we've done that now,
35

35

00:01:27.030  -->  00:01:28.760
next we need to create the class
36

36

00:01:28.760  -->  00:01:30.440
that implements the interface.
37

37

00:01:30.440  -->  00:01:34.120
We're goin' to go back to our org.module.base module here,
38

38

00:01:35.920  -->  00:01:37.712
we're gonna create it in there.
39

39

00:01:37.712  -->  00:01:38.700
(clicking)
40

40

00:01:38.700  -->  00:01:43.700
And we'll call this one org.pkg.entity.BaseEntity.
41

41

00:01:45.477  -->  00:01:47.727
(clicking)
42

42

00:01:48.780  -->  00:01:49.980
All right, we'll paste some coding.
43

43

00:01:49.980  -->  00:01:51.750
(clicking)
44

44

00:01:51.750  -->  00:01:54.030
So this code implements the countable interface,
45

45

00:01:54.030  -->  00:01:56.770
as you can see, and that interface, of course,
46

46

00:01:56.770  -->  00:01:59.850
comes from our package, org.pkg.util,
47

47

00:01:59.850  -->  00:02:02.819
but in the module org.module.util,
48

48

00:02:02.819  -->  00:02:04.155
we don't have a lot there
49

49

00:02:04.155  -->  00:02:06.155
because we've got to construct to there.
50

50

00:02:07.187  -->  00:02:08.755
And we can see that we're also accessing a method
51

51

00:02:08.755  -->  00:02:10.860
enfueled on the application constant's class
52

52

00:02:10.860  -->  00:02:13.910
on the package org.pkg.appglobals,
53

53

00:02:13.910  -->  00:02:16.827
in the module org.module.globals.
54

54

00:02:16.827  -->  00:02:20.100
And the main method there, just creates objects
55

55

00:02:20.100  -->  00:02:21.170
and prints out the count
56

56

00:02:21.170  -->  00:02:24.400
from the application constants static fuels.
57

57

00:02:24.400  -->  00:02:27.310
Now we have a look at our module info.java,
58

58

00:02:27.310  -->  00:02:29.180
you can see for org.module.base (mumbles)
59

59

00:02:29.180  -->  00:02:31.370
requires org.module.util.
60

60

00:02:31.370  -->  00:02:33.030
All right, so no errors here.
61

61

00:02:33.030  -->  00:02:34.890
So what we can do now, is execute this code,
62

62

00:02:34.890  -->  00:02:36.900
so I'll go back to my base entity,
63

63

00:02:36.900  -->  00:02:41.500
and I'll run this code, which (mumbles) compile it as well.
64

64

00:02:41.500  -->  00:02:42.768
Everything's working, you can see module test
65

65

00:02:42.768  -->  00:02:46.250
created five objects, we can scroll over.
66

66

00:02:46.250  -->  00:02:48.166
I've combined line, and we can see
67

67

00:02:48.166  -->  00:02:52.625
we're using the dash p, so we're running as a module
68

68

00:02:52.625  -->  00:02:55.350
and scrolling all over we're gonna dash m for the module.
69

69

00:02:55.350  -->  00:02:58.150
So everything's working, as module there, which is good.
70

70

00:02:59.000  -->  00:03:00.980
All right, so let's pause here again
71

71

00:03:00.980  -->  00:03:04.370
to use the (mumbles) dependencies.
72

72

00:03:04.370  -->  00:03:05.660
Now this time we're gonna do something a bit different,
73

73

00:03:05.660  -->  00:03:07.083
I'm gonna open a terminal session again.
74

74

00:03:07.083  -->  00:03:09.910
And I'm gonna open it, instead of being at the root,
75

75

00:03:09.910  -->  00:03:11.940
I'm gonna open it from the out production.
76

76

00:03:11.940  -->  00:03:14.878
It's directly into the out production folder.
77

77

00:03:14.878  -->  00:03:17.150
(clicking)
78

78

00:03:17.150  -->  00:03:19.970
If I do a directory there, you can see
79

79

00:03:19.970  -->  00:03:21.580
we've got a my first and second modules
80

80

00:03:21.580  -->  00:03:25.170
from previous videos, but also the three org.modules,
81

81

00:03:25.170  -->  00:03:27.110
base, global, and util, that we've been working on
82

82

00:03:27.110  -->  00:03:30.140
in this video and the previous one.
83

83

00:03:30.140  -->  00:03:32.310
So these are the exploded directories
84

84

00:03:32.310  -->  00:03:34.050
for each of those modules.
85

85

00:03:34.050  -->  00:03:35.620
So now that I'm in that folder,
86

86

00:03:35.620  -->  00:03:39.432
I can type jdeps org.module.global.
87

87

00:03:39.432  -->  00:03:41.682
(clicking)
88

88

00:03:42.670  -->  00:03:44.560
We can see the output for that.
89

89

00:03:44.560  -->  00:03:48.820
And we can also for our list (mumbles)
90

90

00:03:48.820  -->  00:03:52.266
dash list dash deps org.module.global.
91

91

00:03:52.266  -->  00:03:54.929
(clicking)
92

92

00:03:54.929  -->  00:03:57.770
And you can see that's producing java.base.
93

93

00:03:57.770  -->  00:04:00.710
All right, so let's now examine our second module.
94

94

00:04:00.710  -->  00:04:01.543
So (mumbles) here,
95

95

00:04:01.543  -->  00:04:04.010
that because we're actually in the right folder,
96

96

00:04:04.010  -->  00:04:06.070
we're not having to specify the module path,
97

97

00:04:06.070  -->  00:04:08.050
which is pretty handy, but let's now try
98

98

00:04:08.050  -->  00:04:11.963
typing jdeps org.module.util.
99

99

00:04:13.140  -->  00:04:14.980
So (mumbles) we've got an arrow here.
100

100

00:04:14.980  -->  00:04:17.113
So if we scroll up and have a look at the arrow,
101

101

00:04:18.200  -->  00:04:21.060
module org.module.global not found,
102

102

00:04:21.060  -->  00:04:23.830
required by org.module.util.
103

103

00:04:23.830  -->  00:04:24.830
So it's interesting to note that
104

104

00:04:24.830  -->  00:04:26.340
if your module has dependencies
105

105

00:04:26.340  -->  00:04:30.120
or module's not in java's standard edition, or the jdk,
106

106

00:04:30.120  -->  00:04:32.440
that you have to specify module path,
107

107

00:04:32.440  -->  00:04:34.730
even if the module path is in the current directory,
108

108

00:04:34.730  -->  00:04:36.110
which it currently is.
109

109

00:04:36.110  -->  00:04:37.440
So let's actually do that.
110

110

00:04:37.440  -->  00:04:40.410
So let's type jdeps dash dash
111

111

00:04:40.410  -->  00:04:45.210
module dash path.org.module.util.
112

112

00:04:47.620  -->  00:04:48.483
Now gettin' that that we're using
113

113

00:04:48.483  -->  00:04:50.630
dash dash module dash path for jdeps,
114

114

00:04:50.630  -->  00:04:53.020
and not dash p, which is the same
115

115

00:04:53.020  -->  00:04:54.540
as dash dash module dash path,
116

116

00:04:54.540  -->  00:04:57.160
in the java, java c, and (mumbles) commands.
117

117

00:04:57.160  -->  00:05:00.300
In jdeps, dash p, stands for package
118

118

00:05:00.300  -->  00:05:03.530
and is not synonymous with dash dash module dash path,
119

119

00:05:03.530  -->  00:05:05.258
so keep that in mind, because you may well see that
120

120

00:05:05.258  -->  00:05:07.830
crop up in an exam question.
121

121

00:05:07.830  -->  00:05:09.930
And that also, that we specify in the current directory here
122

122

00:05:09.930  -->  00:05:11.910
with a period, with a dot.
123

123

00:05:11.910  -->  00:05:13.470
All right, so press into there,
124

124

00:05:13.470  -->  00:05:16.290
and we get the required output, as you can see.
125

125

00:05:16.290  -->  00:05:17.123
And taking away the noise.
126

126

00:05:17.123  -->  00:05:19.364
(clicking)
127

127

00:05:21.880  -->  00:05:23.232
Using the list deps here.
128

128

00:05:23.232  -->  00:05:25.482
(clicking)
129

129

00:05:26.890  -->  00:05:28.300
Here, java.base.
130

130

00:05:28.300  -->  00:05:31.417
All right, so finally now, let's explore our third module.
131

131

00:05:31.417  -->  00:05:33.667
(clicking)
132

132

00:05:36.730  -->  00:05:40.273
Org.module.util, org.module.base I should say.
133

133

00:05:41.456  -->  00:05:43.606
All right, and there's our org.module.base.
134

134

00:05:48.840  -->  00:05:50.094
You can see that's got more information
135

135

00:05:50.094  -->  00:05:51.700
than the other two of our modules,
136

136

00:05:51.700  -->  00:05:53.250
actually printed out, per file.
137

137

00:05:54.480  -->  00:05:56.290
All right, so let's finish the video here,
138

138

00:05:56.290  -->  00:05:58.060
in the next video, we'll start looking
139

139

00:05:58.060  -->  00:06:00.950
at how to identify friend modules.
140

140

00:06:00.950  -->  00:06:02.623
See you in the next video.
