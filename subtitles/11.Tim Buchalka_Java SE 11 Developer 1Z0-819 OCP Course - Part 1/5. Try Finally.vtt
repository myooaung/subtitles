WEBVTT
1
1

00:00:05.080  -->  00:00:07.520
<v Tim>So continuing on with try/catch blocks</v>
2

2

00:00:07.520  -->  00:00:10.240
I want to now look at finally clause.
3

3

00:00:10.240  -->  00:00:13.140
So we need to create a new class in our exceptions project,
4

4

00:00:13.140  -->  00:00:15.270
and I'm gonna call it finally example.
5

5

00:00:15.270  -->  00:00:18.400
(mouse clicking)
6

6

00:00:18.400  -->  00:00:21.650
(typing on a keyboard)
7

7

00:00:26.288  -->  00:00:28.550
All right, now this class has a nested set
8

8

00:00:28.550  -->  00:00:30.990
of try/catch statements in the main method calling
9

9

00:00:30.990  -->  00:00:33.740
a method called getPropertyFromFile,
10

10

00:00:33.740  -->  00:00:35.333
and that's the method down there.
11

11

00:00:36.610  -->  00:00:38.070
Now, we're trying to get the property value
12

12

00:00:38.070  -->  00:00:41.053
we want first from a file named FinallyProperties.txt.
13

13

00:00:42.390  -->  00:00:44.210
When that fails we try with a file named,
14

14

00:00:44.210  -->  00:00:48.300
AnotherProperties.txt file, which should also fail.
15

15

00:00:48.300  -->  00:00:50.300
So the method gap property from file,
16

16

00:00:50.300  -->  00:00:53.660
looking at that again, that's got a try finally clause
17

17

00:00:53.660  -->  00:00:57.000
demonstrating that a catch clause is not required.
18

18

00:00:57.000  -->  00:00:59.950
The finally clause's purpose is to clean up resources.
19

19

00:00:59.950  -->  00:01:01.710
It'll always get executed whether
20

20

00:01:01.710  -->  00:01:05.120
an error occurs in the try clause or not.
21

21

00:01:05.120  -->  00:01:06.498
So let's execute this code.
22

22

00:01:06.498  -->  00:01:09.248
(mouse clicking)
23

23

00:01:11.507  -->  00:01:13.980
And there's the output, because the FinallyProperties.txt
24

24

00:01:13.980  -->  00:01:16.240
file doesn't exist we try to get the property value
25

25

00:01:16.240  -->  00:01:18.717
from the file, which fails because the file doesn't exist
26

26

00:01:18.717  -->  00:01:20.730
and try it, again, with another file
27

27

00:01:20.730  -->  00:01:21.930
the same thing happened.
28

28

00:01:22.935  -->  00:01:25.820
All right, so let's actually create one of these files.
29

29

00:01:25.820  -->  00:01:28.540
And you need to put this file in your project root.
30

30

00:01:28.540  -->  00:01:29.680
And in IntelliJ, I can just click
31

31

00:01:29.680  -->  00:01:31.050
on the project name at the top there,
32

32

00:01:31.050  -->  00:01:32.550
click on New, and select File.
33

33

00:01:33.720  -->  00:01:36.101
I'm gonna call this one FinallyProperties.txt
34

34

00:01:36.101  -->  00:01:39.351
(typing on a keyboard)
35

35

00:01:41.390  -->  00:01:42.390
And in there we need to add
36

36

00:01:42.390  -->  00:01:46.490
a single line, (typing on a keyboard) PROPERTY_1 and one.
37

37

00:01:46.490  -->  00:01:48.400
Literally just a single line there.
38

38

00:01:48.400  -->  00:01:49.850
So let's close that so that it's saved,
39

39

00:01:49.850  -->  00:01:53.059
You can see the file in the pane, in the project pane now.
40

40

00:01:53.059  -->  00:01:53.892
(mouse clicking)
41

41

00:01:53.892  -->  00:01:57.303
Let's execute the code again. (mouse clicking)
42

42

00:01:59.130  -->  00:02:01.700
And this time we get a different output.
43

43

00:02:01.700  -->  00:02:03.010
You can see we actually read the value,
44

44

00:02:03.010  -->  00:02:04.640
property value equals one.
45

45

00:02:04.640  -->  00:02:06.980
Let's now force an error, so we're gonna change
46

46

00:02:06.980  -->  00:02:08.530
the code that splits the line
47

47

00:02:08.530  -->  00:02:10.957
in the get property from file method.
48

48

00:02:10.957  -->  00:02:12.890
(mouse clicking)
49

49

00:02:12.890  -->  00:02:15.280
so we're gonna change this one, change line 38.
50

50

00:02:15.280  -->  00:02:17.997
We'll change the 1 there to a 2.
51

51

00:02:17.997  -->  00:02:18.970
(mouse clicking)
52

52

00:02:18.970  -->  00:02:22.680
Execute the code again, and now (mouse clicking)
53

53

00:02:23.800  -->  00:02:24.940
and you can see we've got an error
54

54

00:02:24.940  -->  00:02:27.180
in FinallyExample.java line 38,
55

55

00:02:27.180  -->  00:02:28.540
which of course is the line we changed
56

56

00:02:28.540  -->  00:02:32.650
and the call originally came from line 17, as you can see.
57

57

00:02:32.650  -->  00:02:36.290
And the output in the output pane confirms that.
58

58

00:02:36.290  -->  00:02:38.750
So the area is a runtime exception ultimately
59

59

00:02:38.750  -->  00:02:40.690
and is not caught by our catch clause,
60

60

00:02:40.690  -->  00:02:44.110
and that's because we specified an I/O exception.
61

61

00:02:44.110  -->  00:02:45.270
And the exception, of course, is
62

62

00:02:45.270  -->  00:02:47.660
an array index out of bounds exception.
63

63

00:02:47.660  -->  00:02:49.750
So let's change the catch exception,
64

64

00:02:49.750  -->  00:02:53.340
specifically these first two lines here, lines 18 and 19.
65

65

00:02:53.340  -->  00:02:55.940
I'm gonna replace those so the code now
66

66

00:02:55.940  -->  00:02:57.610
is looking for an I/O exception,
67

67

00:02:57.610  -->  00:03:00.450
or an array index out of bounds exception.
68

68

00:03:00.450  -->  00:03:03.970
Execute that code (mouse clicking)
69

69

00:03:07.930  -->  00:03:09.840
and, as you can see, we haven't got an error anymore.
70

70

00:03:09.840  -->  00:03:11.200
And that's because exception here
71

71

00:03:11.200  -->  00:03:13.090
in the code was called and the reason
72

72

00:03:13.090  -->  00:03:17.150
for that is that AnotherPrperties.txt doesn't exist.
73

73

00:03:17.150  -->  00:03:18.380
So, basically, the last line there
74

74

00:03:18.380  -->  00:03:20.620
Inner catch exception block starts here,
75

75

00:03:20.620  -->  00:03:24.460
was a result of the code executing on line 26.
76

76

00:03:24.460  -->  00:03:27.450
Let's now demonstrate what happens if that file does exist.
77

77

00:03:27.450  -->  00:03:29.130
So I'm gonna back to the project pane.
78

78

00:03:29.130  -->  00:03:32.210
I'm gonna take a copy of FinallyProperties.txt,
79

79

00:03:32.210  -->  00:03:34.570
copy that, and paste it.
80

80

00:03:34.570  -->  00:03:36.170
If you haven't got IntelliJ, or can't do it
81

81

00:03:36.170  -->  00:03:38.270
the way I'm doing it (mouse clicking)
82

82

00:03:38.270  -->  00:03:40.963
then just copy this file into your project root.
83

83

00:03:41.880  -->  00:03:44.032
I'm calling this one AnotherProperties.txt.
84

84

00:03:44.032  -->  00:03:45.130
(mouse clicking)
85

85

00:03:45.130  -->  00:03:47.500
You can see it's there, same values.
86

86

00:03:47.500  -->  00:03:49.283
Close that down, and run it again.
87

87

00:03:51.960  -->  00:03:54.710
And we've now, again, got an exception line 38,
88

88

00:03:54.710  -->  00:03:55.840
which is reading the property,
89

89

00:03:55.840  -->  00:03:59.710
and the code it's then executing from, line 23,
90

90

00:03:59.710  -->  00:04:02.100
which is consistent with the code being executed
91

91

00:04:02.100  -->  00:04:03.550
where we thought it was.
92

92

00:04:03.550  -->  00:04:05.660
And just to go back to what we had previously,
93

93

00:04:05.660  -->  00:04:06.520
all right what I'm gonna do then
94

94

00:04:06.520  -->  00:04:08.729
is just go back and rename that.
95

95

00:04:08.729  -->  00:04:11.190
(mouse clicking and typing on a keyboard)
96

96

00:04:11.190  -->  00:04:12.780
So I can see the error that occurred
97

97

00:04:12.780  -->  00:04:14.947
when the file didn't exist.
98

98

00:04:14.947  -->  00:04:16.670
(mouse clicking) I'm not gonna change any references
99

99

00:04:16.670  -->  00:04:19.530
I'm just gonna literally change that file.
100

100

00:04:19.530  -->  00:04:22.340
So we're still dealing with another Properties.txt.
101

101

00:04:22.340  -->  00:04:25.910
Run the code and, again, this time clearly
102

102

00:04:25.910  -->  00:04:29.050
you can see (mouse clicking) that we've actually caught
103

103

00:04:29.050  -->  00:04:31.103
the array index out of bounds exception.
104

104

00:04:32.270  -->  00:04:33.810
Basically, the code now demonstrating
105

105

00:04:33.810  -->  00:04:35.990
that the array index out of bounds exception was caught
106

106

00:04:35.990  -->  00:04:39.580
and handled in the same way and in the same clause
107

107

00:04:39.580  -->  00:04:42.340
as the outer I/O exception clause.
108

108

00:04:42.340  -->  00:04:44.190
So in this video and the previous one
109

109

00:04:45.460  -->  00:04:47.630
I showed multiple examples of try/catch blocks
110

110

00:04:47.630  -->  00:04:50.400
using generic and specific examples.
111

111

00:04:50.400  -->  00:04:51.800
We talked about the interruption
112

112

00:04:51.800  -->  00:04:54.150
of the flow of the executable thread.
113

113

00:04:54.150  -->  00:04:58.140
We hid exceptions, we created multiple catch blocks.
114

114

00:04:58.140  -->  00:05:00.650
We created nested try/catch blocks.
115

115

00:05:00.650  -->  00:05:03.210
And also I demonstrated the finally clause,
116

116

00:05:03.210  -->  00:05:05.650
which when declared will always get executed.
117

117

00:05:05.650  -->  00:05:07.450
Its purpose is to clean up resources
118

118

00:05:07.450  -->  00:05:10.720
in a uniform way, for example, closing files.
119

119

00:05:10.720  -->  00:05:12.590
And finally, I also demonstrated methods
120

120

00:05:12.590  -->  00:05:14.200
that throw exceptions.
121

121

00:05:14.200  -->  00:05:15.590
But, with that said, in the next video
122

122

00:05:15.590  -->  00:05:16.850
we're gonna delve deeper into
123

123

00:05:16.850  -->  00:05:19.700
the throws declaration of a method.
124

124

00:05:19.700  -->  00:05:21.000
See you in the next video.
