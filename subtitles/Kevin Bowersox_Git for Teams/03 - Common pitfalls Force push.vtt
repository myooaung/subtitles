WEBVTT
1
00:00:00.050 --> 00:00:02.020
- [Instructor] In this lesson were going to walk

2
00:00:02.020 --> 00:00:04.080
through another pitfall so that you can avoid it

3
00:00:04.080 --> 00:00:07.080
and stay within the good graces of your team.

4
00:00:07.080 --> 00:00:10.010
So, one of the errors you have to be careful

5
00:00:10.010 --> 00:00:12.070
when working with Git is using commands

6
00:00:12.070 --> 00:00:14.080
you might not be familiar with.

7
00:00:14.080 --> 00:00:16.070
One of the most dangerous commands

8
00:00:16.070 --> 00:00:21.020
that you can use is the push command with the force flag.

9
00:00:21.020 --> 00:00:24.040
This can cause you to overwrite commits

10
00:00:24.040 --> 00:00:26.050
and lose some of your work,

11
00:00:26.050 --> 00:00:28.020
and it gets a little bit awkward

12
00:00:28.020 --> 00:00:31.010
when you overwrite your team member's work.

13
00:00:31.010 --> 00:00:33.030
So let's walk through a demonstration

14
00:00:33.030 --> 00:00:35.020
so that you can avoid it.

15
00:00:35.020 --> 00:00:37.010
OK, so in this scenario,

16
00:00:37.010 --> 00:00:40.020
what's going to happen is user two is going

17
00:00:40.020 --> 00:00:43.060
to create a new file called demo2.

18
00:00:43.060 --> 00:00:45.090
They're then going to add that file

19
00:00:45.090 --> 00:00:50.050
to the stage then commit the file.

20
00:00:50.050 --> 00:00:52.040
And then push that file

21
00:00:52.040 --> 00:00:56.050
to the central repository that the team shares.

22
00:00:56.050 --> 00:00:59.000
OK, now at this point,

23
00:00:59.000 --> 00:01:03.030
user one wants to make a change to the demo file.

24
00:01:03.030 --> 00:01:06.000
So they enter vim,

25
00:01:06.000 --> 00:01:11.000
and they're going to add some changes to the demo file.

26
00:01:11.000 --> 00:01:15.030
OK, so those changes are in place,

27
00:01:15.030 --> 00:01:23.060
and now they are going to commit those changes.

28
00:01:23.060 --> 00:01:25.040
And then they're going to attempt

29
00:01:25.040 --> 00:01:28.060
to push them to the central repository.

30
00:01:28.060 --> 00:01:31.070
So what you'll notice is that Git warns them.

31
00:01:31.070 --> 00:01:34.070
It says, hey, there's changes in the central repository

32
00:01:34.070 --> 00:01:36.050
that you don't have locally.

33
00:01:36.050 --> 00:01:38.050
I can't allow you to push.

34
00:01:38.050 --> 00:01:41.030
So user one is a little bit stubborn,

35
00:01:41.030 --> 00:01:45.020
and they say, hey, I'm going to push anyway.

36
00:01:45.020 --> 00:01:48.090
And to do that, I need to use the force flag.

37
00:01:48.090 --> 00:01:51.070
So they throw the force flag on there

38
00:01:51.070 --> 00:01:53.030
and do their push anyway.

39
00:01:53.030 --> 00:01:57.030
So it gets pushed onto the central repository,

40
00:01:57.030 --> 00:02:01.050
and really they have done a lot of damage to the repository.

41
00:02:01.050 --> 00:02:03.050
In fact, as we're gonna see in a minute,

42
00:02:03.050 --> 00:02:06.080
they're going to lose some commits.

43
00:02:06.080 --> 00:02:11.030
So, I have the central repository sitting

44
00:02:11.030 --> 00:02:15.040
a few directories up in a directory called remote,

45
00:02:15.040 --> 00:02:17.020
and within that directory is

46
00:02:17.020 --> 00:02:20.070
the central repository named git-demo.

47
00:02:20.070 --> 00:02:22.060
So we're going to go there,

48
00:02:22.060 --> 00:02:27.000
and then I'm going to use the git ls-tree command

49
00:02:27.000 --> 00:02:32.060
so that we can take a look at that repository

50
00:02:32.060 --> 00:02:36.030
and see what files it contains.

51
00:02:36.030 --> 00:02:41.070
So, you'll notice that it doesn't contain the file

52
00:02:41.070 --> 00:02:44.000
that user two has committed.

53
00:02:44.000 --> 00:02:47.020
And that's because user one's use

54
00:02:47.020 --> 00:02:53.010
of push force has caused us to lose that commit.

55
00:02:53.010 --> 00:02:56.020
So this really just illustrates the danger

56
00:02:56.020 --> 00:02:59.020
of using push with the force flag.

57
00:02:59.020 --> 00:03:00.070
I don't want to discourage you

58
00:03:00.070 --> 00:03:03.060
from exploring different Git commands,

59
00:03:03.060 --> 00:03:05.030
but it's important you don't do them

60
00:03:05.030 --> 00:03:07.030
in your central repository.

61
00:03:07.030 --> 00:03:11.030
Always work on your own kinda local copy of a repository

62
00:03:11.030 --> 00:03:14.010
or in a safe repository when experimenting

63
00:03:14.010 --> 00:03:16.000
with new commands.

