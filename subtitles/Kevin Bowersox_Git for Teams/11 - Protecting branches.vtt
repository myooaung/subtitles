WEBVTT
1
00:00:00.050 --> 00:00:02.050
- [Instructor] In this lesson, we'll create and protect

2
00:00:02.050 --> 00:00:06.080
the branches required for using the GitFlow Workflow.

3
00:00:06.080 --> 00:00:09.050
You will learn how to create a long-running branch

4
00:00:09.050 --> 00:00:12.000
in GitLab and establish security to limit

5
00:00:12.000 --> 00:00:14.080
who can push to the branch.

6
00:00:14.080 --> 00:00:16.080
For our demonstration, we're going to

7
00:00:16.080 --> 00:00:20.060
log into GitLab as the maintainer user

8
00:00:20.060 --> 00:00:23.080
and we're going to be working with the flow project.

9
00:00:23.080 --> 00:00:26.020
So we'll click on the project to navigate

10
00:00:26.020 --> 00:00:28.020
into its area.

11
00:00:28.020 --> 00:00:31.090
From here, we're going to click on Repository

12
00:00:31.090 --> 00:00:35.060
and then select Branches.

13
00:00:35.060 --> 00:00:38.000
Within the Branches section, we can click the

14
00:00:38.000 --> 00:00:41.090
New Branch button to create our develop branch.

15
00:00:41.090 --> 00:00:44.080
Develop will be the long-running branch

16
00:00:44.080 --> 00:00:47.070
where we will merge all of our feature branches

17
00:00:47.070 --> 00:00:51.060
within the GitFlow Workflow.

18
00:00:51.060 --> 00:00:54.010
Once we've typed the branch name,

19
00:00:54.010 --> 00:00:56.050
we then select master.

20
00:00:56.050 --> 00:00:59.070
This means that, once we create the branch,

21
00:00:59.070 --> 00:01:03.080
develop will contain an exact copy of master.

22
00:01:03.080 --> 00:01:06.020
From there, develop can progress as we

23
00:01:06.020 --> 00:01:08.020
add our feature branches to it.

24
00:01:08.020 --> 00:01:10.030
Once satisfied with my selections,

25
00:01:10.030 --> 00:01:14.060
I go ahead and click on the Create Branch option.

26
00:01:14.060 --> 00:01:18.040
Now if I go to the Branches area on the sidebar,

27
00:01:18.040 --> 00:01:21.020
you can see the develop branch.

28
00:01:21.020 --> 00:01:23.020
Now there's one thing we need to notice here.

29
00:01:23.020 --> 00:01:25.050
The master branch is protected,

30
00:01:25.050 --> 00:01:28.070
however the develop branch is exposed.

31
00:01:28.070 --> 00:01:30.060
We need to change that.

32
00:01:30.060 --> 00:01:33.040
So let's scroll down on the sidebar

33
00:01:33.040 --> 00:01:38.010
and go to Settings, and then Repository.

34
00:01:38.010 --> 00:01:43.050
Within this area, you'll see the Protected Branches section

35
00:01:43.050 --> 00:01:45.020
that we can expand.

36
00:01:45.020 --> 00:01:48.000
Here's where we specify which of our branches

37
00:01:48.000 --> 00:01:49.060
that we would like to protect,

38
00:01:49.060 --> 00:01:52.030
or limit who can access.

39
00:01:52.030 --> 00:01:56.060
In this case, we need to select our develop branch.

40
00:01:56.060 --> 00:02:00.030
And then we're going to specify who can now

41
00:02:00.030 --> 00:02:02.030
merge to this branch.

42
00:02:02.030 --> 00:02:05.020
In our case, we only want to allow the maintainers

43
00:02:05.020 --> 00:02:07.060
to merge to this branch.

44
00:02:07.060 --> 00:02:08.080
The same for pushes.

45
00:02:08.080 --> 00:02:11.030
We only want to allow maintainers to push

46
00:02:11.030 --> 00:02:12.080
to this branch.

47
00:02:12.080 --> 00:02:15.070
Now we can go ahead and click on Protect

48
00:02:15.070 --> 00:02:18.070
in order to save that configuration.

49
00:02:18.070 --> 00:02:20.090
If we expand the section once again,

50
00:02:20.090 --> 00:02:24.020
you'll notice that develop is now protected.

51
00:02:24.020 --> 00:02:28.020
We can also see this within the Branches area.

52
00:02:28.020 --> 00:02:32.020
Now, let's test out our new configuration.

53
00:02:32.020 --> 00:02:36.000
So if we click on Project, you'll see that we can

54
00:02:36.000 --> 00:02:40.020
grab the url to our repository.

55
00:02:40.020 --> 00:02:43.060
I'm gonna go ahead and copy that to the clipboard,

56
00:02:43.060 --> 00:02:46.040
and then open a terminal.

57
00:02:46.040 --> 00:02:51.040
From the terminal, I am going to use the git clone command

58
00:02:51.040 --> 00:02:54.020
to clone the repository.

59
00:02:54.020 --> 00:02:57.010
Once I attempt a clone, it's going to ask me

60
00:02:57.010 --> 00:02:58.090
for my credentials.

61
00:02:58.090 --> 00:03:01.030
I'm actually at this point going to use

62
00:03:01.030 --> 00:03:03.050
the contributor account.

63
00:03:03.050 --> 00:03:06.060
Remember, the contributor does not have

64
00:03:06.060 --> 00:03:12.080
commit or push permissions on protected branches.

65
00:03:12.080 --> 00:03:16.040
So now that we're logged-in as the contributor,

66
00:03:16.040 --> 00:03:20.020
we can go ahead and enter the flow directory.

67
00:03:20.020 --> 00:03:24.020
And at this point, we're going to go ahead

68
00:03:24.020 --> 00:03:28.070
and build a local develop branch.

69
00:03:28.070 --> 00:03:32.040
To do that, we use the git checkout command

70
00:03:32.040 --> 00:03:35.090
with the dash b flag, and then we specify the name

71
00:03:35.090 --> 00:03:39.000
of the local branch, in our case, develop.

72
00:03:39.000 --> 00:03:41.080
From here, we're going to attempt to make a change

73
00:03:41.080 --> 00:03:44.000
to the README file.

74
00:03:44.000 --> 00:03:46.060
So here we see the contents of the README file.

75
00:03:46.060 --> 00:03:49.030
I'll just go ahead and delete that line

76
00:03:49.030 --> 00:03:51.070
and then write the file with vim.

77
00:03:51.070 --> 00:03:57.070
So now we can commit these changes.

78
00:03:57.070 --> 00:04:01.070
Now the contributor will attempt to push

79
00:04:01.070 --> 00:04:05.020
these changes to the development branch

80
00:04:05.020 --> 00:04:08.040
on the central repository.

81
00:04:08.040 --> 00:04:12.060
The repository's going to ask for our credentials,

82
00:04:12.060 --> 00:04:15.090
so I'm going to use the contributor account,

83
00:04:15.090 --> 00:04:18.010
and provide the password.

84
00:04:18.010 --> 00:04:21.030
You'll notice that due to our security

85
00:04:21.030 --> 00:04:26.000
that we've placed on the branch within GitLab,

86
00:04:26.000 --> 00:04:29.070
the contributor is not allowed to push these changes

87
00:04:29.070 --> 00:04:31.040
to the develop branch.

88
00:04:31.040 --> 00:04:35.000
So we have successfully protected our develop branch

89
00:04:35.000 --> 00:04:37.030
within our central repository.

90
00:04:37.030 --> 00:04:40.050
This is essential if we're going to practice GitFlow

91
00:04:40.050 --> 00:04:42.000
on our team.

