WEBVTT
1
00:00:00.050 --> 00:00:01.060
- [Instructor] A key contributor

2
00:00:01.060 --> 00:00:04.070
to successful team collaboration with Git

3
00:00:04.070 --> 00:00:07.030
is understanding the structure of your team

4
00:00:07.030 --> 00:00:10.020
and each team member's role within the team.

5
00:00:10.020 --> 00:00:12.020
Teams come in all shapes and sizes,

6
00:00:12.020 --> 00:00:14.000
so it's important that your team

7
00:00:14.000 --> 00:00:17.040
is ideally arranged for working with Git.

8
00:00:17.040 --> 00:00:20.010
In terms of Git, individuals participating

9
00:00:20.010 --> 00:00:22.050
on a software development team fall

10
00:00:22.050 --> 00:00:25.070
into two primary, different roles.

11
00:00:25.070 --> 00:00:27.010
The first of these roles

12
00:00:27.010 --> 00:00:30.080
is a repository integrator or maintainer.

13
00:00:30.080 --> 00:00:34.040
These individuals have commit access to the repository

14
00:00:34.040 --> 00:00:37.050
and are responsible for managing pull requests

15
00:00:37.050 --> 00:00:39.070
made by contributors.

16
00:00:39.070 --> 00:00:42.080
Contributors do not have direct commit access

17
00:00:42.080 --> 00:00:46.050
to the repository but are able to clone the repository

18
00:00:46.050 --> 00:00:50.020
and make commits to their own public copy.

19
00:00:50.020 --> 00:00:53.010
Once finished with a feature, they will request

20
00:00:53.010 --> 00:00:55.060
that an integrator or maintainer

21
00:00:55.060 --> 00:00:57.030
pull the most recent changes

22
00:00:57.030 --> 00:01:01.060
into the central repository via a pull request.

23
00:01:01.060 --> 00:01:04.080
Git is meant for teams of all sizes.

24
00:01:04.080 --> 00:01:06.080
However, the size and arrangement

25
00:01:06.080 --> 00:01:10.070
of a team will change how you work with the tool.

26
00:01:10.070 --> 00:01:13.050
Teams can be as simple as having one team member

27
00:01:13.050 --> 00:01:16.010
working on a small project or as complex

28
00:01:16.010 --> 00:01:19.010
as having a large, open-source community contributing

29
00:01:19.010 --> 00:01:21.050
to a large platform.

30
00:01:21.050 --> 00:01:22.070
In the middle, you'll find

31
00:01:22.070 --> 00:01:24.040
more traditional development teams

32
00:01:24.040 --> 00:01:27.040
that follow the seven plus or minus two rule.

33
00:01:27.040 --> 00:01:30.010
Depending on the size of your team,

34
00:01:30.010 --> 00:01:32.060
you'll need to adjust your approach to Git

35
00:01:32.060 --> 00:01:35.070
and how your team is composed.

36
00:01:35.070 --> 00:01:39.010
Let's talk a little bit more about team structure.

37
00:01:39.010 --> 00:01:42.030
For teams of one or two, it's pretty simple.

38
00:01:42.030 --> 00:01:45.010
Every member of the team or the lone member

39
00:01:45.010 --> 00:01:47.090
of the team will act as a maintainer.

40
00:01:47.090 --> 00:01:50.020
They will enjoy full read and write access

41
00:01:50.020 --> 00:01:52.050
to the repository.

42
00:01:52.050 --> 00:01:54.060
For normal-sized development teams,

43
00:01:54.060 --> 00:01:57.010
you'll most likely have at least two,

44
00:01:57.010 --> 00:02:00.000
but ideally three, integrators or maintainers

45
00:02:00.000 --> 00:02:04.000
that will merge contributions from contributors.

46
00:02:04.000 --> 00:02:06.090
These individuals are often the most senior members

47
00:02:06.090 --> 00:02:09.090
of the team and are responsible for performing a review

48
00:02:09.090 --> 00:02:13.030
of the contributing code prior to its merging.

49
00:02:13.030 --> 00:02:16.000
The remaining team members will act as contributors

50
00:02:16.000 --> 00:02:20.010
without direct commit access to the repository.

51
00:02:20.010 --> 00:02:22.030
For large software development teams such

52
00:02:22.030 --> 00:02:24.040
as massive open-source projects,

53
00:02:24.040 --> 00:02:26.080
for the large community of contributors,

54
00:02:26.080 --> 00:02:30.020
there will be many integrators with commit permissions.

55
00:02:30.020 --> 00:02:32.070
Often these integrators will be assigned

56
00:02:32.070 --> 00:02:35.060
to specific repositories for subprojects

57
00:02:35.060 --> 00:02:38.040
within an overarching project.

58
00:02:38.040 --> 00:02:40.050
Contributors will feed their changes

59
00:02:40.050 --> 00:02:44.030
to these integrators based upon pull requests.

60
00:02:44.030 --> 00:02:47.090
Additionally, in some communities, a benevolent dictator

61
00:02:47.090 --> 00:02:50.070
acts as a second-level approving authority

62
00:02:50.070 --> 00:02:53.030
merging contributions from the integrators

63
00:02:53.030 --> 00:02:56.000
for lieutenant repositories.

64
00:02:56.000 --> 00:02:59.030
This dictatorship model isn't frequently used

65
00:02:59.030 --> 00:03:01.040
but it does manage some large projects

66
00:03:01.040 --> 00:03:04.030
such as the Linux Project.

67
00:03:04.030 --> 00:03:06.090
When working in teams, it is a great practice

68
00:03:06.090 --> 00:03:10.070
to document expectations for maintainers and integrators

69
00:03:10.070 --> 00:03:12.090
within a repository.

70
00:03:12.090 --> 00:03:16.000
These repositories define workflows and make codes

71
00:03:16.000 --> 00:03:20.000
of conduct available to everyone working on the project.

72
00:03:20.000 --> 00:03:22.010
Let's take a look at the Zend Framework,

73
00:03:22.010 --> 00:03:24.080
which contains some excellent documentation

74
00:03:24.080 --> 00:03:27.070
for how to work in the community.

75
00:03:27.070 --> 00:03:30.090
So here we are within the maintainers' repository

76
00:03:30.090 --> 00:03:34.010
for the Zend Framework on GitHub.

77
00:03:34.010 --> 00:03:37.070
This repository provides a wealth of information

78
00:03:37.070 --> 00:03:42.030
for anyone looking to work on the Zend Framework.

79
00:03:42.030 --> 00:03:46.020
If we scroll down and look at the README file,

80
00:03:46.020 --> 00:03:48.010
you'll see that it's specifically

81
00:03:48.010 --> 00:03:51.020
for maintainers and contributors, so those folks

82
00:03:51.020 --> 00:03:53.090
that are going to be working on the code.

83
00:03:53.090 --> 00:03:58.010
Within the repository, you actually find a template

84
00:03:58.010 --> 00:04:01.030
that shows how to set up a new repository

85
00:04:01.030 --> 00:04:04.050
if you're adding to the Framework.

86
00:04:04.050 --> 00:04:06.050
If we scroll up, you'll see

87
00:04:06.050 --> 00:04:10.040
that there is actually a contributors' guide,

88
00:04:10.040 --> 00:04:13.040
which provides instructions for those

89
00:04:13.040 --> 00:04:17.020
without commit access to the repository.

90
00:04:17.020 --> 00:04:20.080
It provides an overview of the coding standards,

91
00:04:20.080 --> 00:04:26.010
shows where to go to get in contact with other team members

92
00:04:26.010 --> 00:04:29.010
on the Zend Frameworks, such as the forums in chat.

93
00:04:29.010 --> 00:04:34.000
And it also goes into the code of conduct for the team.

94
00:04:34.000 --> 00:04:36.030
So the code of conduct really governs

95
00:04:36.030 --> 00:04:39.020
how the team will interact, and collaborate,

96
00:04:39.020 --> 00:04:44.010
and sets up some boundaries so that team members know how

97
00:04:44.010 --> 00:04:45.090
to treat each other.

98
00:04:45.090 --> 00:04:49.050
If we return back to the main repository,

99
00:04:49.050 --> 00:04:53.040
you'll see that there's also a section specifically

100
00:04:53.040 --> 00:04:55.090
for the maintainers.

101
00:04:55.090 --> 00:05:00.060
This provides instructions for those with commit access.

102
00:05:00.060 --> 00:05:05.040
It will govern the Framework's branching strategy

103
00:05:05.040 --> 00:05:07.030
and their workflow.

104
00:05:07.030 --> 00:05:10.080
So it provides instructions for the maintainers

105
00:05:10.080 --> 00:05:15.040
that will be taking the contributors' code changes

106
00:05:15.040 --> 00:05:17.060
and pulling them into the Framework.

107
00:05:17.060 --> 00:05:20.000
I highly recommend you take some time to look

108
00:05:20.000 --> 00:05:24.030
at the Zend Framework maintainers' repository.

109
00:05:24.030 --> 00:05:28.080
It's a great example of how your team should provide

110
00:05:28.080 --> 00:05:33.000
information about working on the code base.

