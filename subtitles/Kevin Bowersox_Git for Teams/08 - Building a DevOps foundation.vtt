WEBVTT
1
00:00:00.050 --> 00:00:02.080
- [Instructor] Git can open many doors for your team

2
00:00:02.080 --> 00:00:05.090
because it's interoperable with many software development

3
00:00:05.090 --> 00:00:09.000
tools that enable automation and it allows

4
00:00:09.000 --> 00:00:11.000
for processes to be established

5
00:00:11.000 --> 00:00:13.080
that dictate your team's operations.

6
00:00:13.080 --> 00:00:17.020
The automated tooling and workflows surrounding Git

7
00:00:17.020 --> 00:00:19.010
put your team on the doorstep

8
00:00:19.010 --> 00:00:23.000
of embracing highly effective DevOps practices.

9
00:00:23.000 --> 00:00:26.040
We're going to spend some time discussing DevOps concepts

10
00:00:26.040 --> 00:00:29.050
and how your team can embrace them after implementing

11
00:00:29.050 --> 00:00:32.040
the recommendations in this course.

12
00:00:32.040 --> 00:00:35.040
First, let's talk about traditional development

13
00:00:35.040 --> 00:00:40.060
and operations practices before DevOps is introduced.

14
00:00:40.060 --> 00:00:44.020
Prior to DevOps, standard software development practices

15
00:00:44.020 --> 00:00:47.080
separate the teams who develop the software from those

16
00:00:47.080 --> 00:00:50.030
who deployed and operated it.

17
00:00:50.030 --> 00:00:52.090
This division created various obstacles

18
00:00:52.090 --> 00:00:56.030
that impeded the success of IT solutions.

19
00:00:56.030 --> 00:00:58.010
First, the software development

20
00:00:58.010 --> 00:01:02.020
and operations teams were often located in different parts

21
00:01:02.020 --> 00:01:05.010
of the organization, under different leadership,

22
00:01:05.010 --> 00:01:08.030
and often separated geographically.

23
00:01:08.030 --> 00:01:12.050
These factors often cause disfunction between the two teams,

24
00:01:12.050 --> 00:01:14.050
to the dismay of their customers.

25
00:01:14.050 --> 00:01:17.010
Finger-pointing and sour relationships were often

26
00:01:17.010 --> 00:01:20.050
the product of traditional software development practices.

27
00:01:20.050 --> 00:01:23.030
The concept of DevOps was introduced

28
00:01:23.030 --> 00:01:26.000
to remedy some of the cultural, organizational,

29
00:01:26.000 --> 00:01:28.010
and process related challenges

30
00:01:28.010 --> 00:01:30.080
that kept projects from succeeding.

31
00:01:30.080 --> 00:01:34.060
DevOps removed development and operation teams

32
00:01:34.060 --> 00:01:37.070
from their silos, placing them in the same team

33
00:01:37.070 --> 00:01:39.080
and geographic location.

34
00:01:39.080 --> 00:01:43.040
This built a more cohesive unit focused on a collaborative

35
00:01:43.040 --> 00:01:46.080
approach to creating and hosting software.

36
00:01:46.080 --> 00:01:49.020
DevOps heavily embraces tooling

37
00:01:49.020 --> 00:01:51.030
to automate software development tasks

38
00:01:51.030 --> 00:01:54.000
such as builds, tests, and deployments.

39
00:01:54.000 --> 00:01:57.010
Continuous integration and delivery is a must

40
00:01:57.010 --> 00:02:00.060
for organizations looking to practice DevOps.

41
00:02:00.060 --> 00:02:03.040
Automation creates standardized processes

42
00:02:03.040 --> 00:02:06.030
that are executed without deviation.

43
00:02:06.030 --> 00:02:08.070
In addition to continuous integration,

44
00:02:08.070 --> 00:02:12.020
DevOps assumes teams have already embraced an Agile

45
00:02:12.020 --> 00:02:14.080
software development methodology.

46
00:02:14.080 --> 00:02:18.020
The combination of cultural changes, process changes,

47
00:02:18.020 --> 00:02:21.080
and the introduction of automated tooling provide a climate

48
00:02:21.080 --> 00:02:25.070
where high-quality software can be delivered more rapidly.

49
00:02:25.070 --> 00:02:28.020
Teams are able to be more responsive

50
00:02:28.020 --> 00:02:31.070
to customer demands thanks to the tenets put in place

51
00:02:31.070 --> 00:02:33.030
by DevOps.

52
00:02:33.030 --> 00:02:35.080
So, let's quickly review what you have

53
00:02:35.080 --> 00:02:39.040
to have in place before adopting DevOps practices.

54
00:02:39.040 --> 00:02:42.040
Your team should have an Agile methodology in place,

55
00:02:42.040 --> 00:02:44.070
such as Scrum, XP, or Lean.

56
00:02:44.070 --> 00:02:47.050
Without a base methodology or development process,

57
00:02:47.050 --> 00:02:53.000
it's unlikely that your team can establish a DevOps culture.

58
00:02:53.000 --> 00:02:56.090
Your team should also have a CI/CD pipeline in place

59
00:02:56.090 --> 00:02:59.060
that uses a tool set to automate common

60
00:02:59.060 --> 00:03:02.020
software development tasks, such as builds, tests,

61
00:03:02.020 --> 00:03:03.030
and deployments.

62
00:03:03.030 --> 00:03:06.020
We've seen how to do that with GitLab.

63
00:03:06.020 --> 00:03:09.040
Finally, there should be a willingness from both teams

64
00:03:09.040 --> 00:03:12.030
and organizational leaders to change.

65
00:03:12.030 --> 00:03:15.080
Instilling DevOps practices requires some

66
00:03:15.080 --> 00:03:18.010
organizational transformation,

67
00:03:18.010 --> 00:03:21.050
so it's important to have a champion in your organization

68
00:03:21.050 --> 00:03:24.050
that can push for the changes you'll need to make.

69
00:03:24.050 --> 00:03:26.070
Once these building block are in place,

70
00:03:26.070 --> 00:03:28.090
your team will have the right foundation

71
00:03:28.090 --> 00:03:32.020
to push beyond Agile and automation

72
00:03:32.020 --> 00:03:36.040
to the optimized state delivered by DevOps.

73
00:03:36.040 --> 00:03:38.040
Now, let's go over a simple plan

74
00:03:38.040 --> 00:03:42.010
for adopting a DevOps approach to software development.

75
00:03:42.010 --> 00:03:44.050
The first place to start is with the culture.

76
00:03:44.050 --> 00:03:46.080
It's critical to your success.

77
00:03:46.080 --> 00:03:50.040
Culture change is really the core concept behind DevOps,

78
00:03:50.040 --> 00:03:52.050
so you'll need to ensure that leadership

79
00:03:52.050 --> 00:03:55.070
and the development and operation teams are supportive

80
00:03:55.070 --> 00:03:57.010
of the changes.

81
00:03:57.010 --> 00:03:59.040
Next, reorient the teams.

82
00:03:59.040 --> 00:04:01.040
I use the term reorient loosely

83
00:04:01.040 --> 00:04:03.020
because it's somewhat abstract.

84
00:04:03.020 --> 00:04:07.020
This could mean reorganizing, relocating, recomposing,

85
00:04:07.020 --> 00:04:09.050
or retooling the team.

86
00:04:09.050 --> 00:04:11.090
Basically, silos need to be destroyed

87
00:04:11.090 --> 00:04:14.060
and the walls that prevent good communication need

88
00:04:14.060 --> 00:04:16.010
to be torn down.

89
00:04:16.010 --> 00:04:18.090
This can be done via a variety of ways,

90
00:04:18.090 --> 00:04:21.030
but ultimately, you want to make sure a single team

91
00:04:21.030 --> 00:04:23.060
has the appropriate people, skillsets,

92
00:04:23.060 --> 00:04:27.030
and lines of communication to support both development

93
00:04:27.030 --> 00:04:29.050
and operations.

94
00:04:29.050 --> 00:04:32.020
Ideally, the team should fall under one manager

95
00:04:32.020 --> 00:04:35.020
so they have a single line of authority.

96
00:04:35.020 --> 00:04:37.060
The manager can then influence the activities

97
00:04:37.060 --> 00:04:39.040
of everyone involved.

98
00:04:39.040 --> 00:04:43.020
Central management can also establish shared goals

99
00:04:43.020 --> 00:04:45.080
for the teams that puts everyone heading

100
00:04:45.080 --> 00:04:47.090
in the same direction.

101
00:04:47.090 --> 00:04:50.070
Next, look at joining the processes used

102
00:04:50.070 --> 00:04:54.040
by the newly oriented team to ensure they will work

103
00:04:54.040 --> 00:04:56.010
under the new paradigm.

104
00:04:56.010 --> 00:04:59.070
Ideally, the shared process should be centered around rapid

105
00:04:59.070 --> 00:05:03.040
and flexible delivery of small units of work.

106
00:05:03.040 --> 00:05:05.050
This is another principle of Agile.

107
00:05:05.050 --> 00:05:08.010
Once established, look at the process

108
00:05:08.010 --> 00:05:09.080
for the weakest points.

109
00:05:09.080 --> 00:05:13.020
Basically, parts of the process that require manual tasks

110
00:05:13.020 --> 00:05:15.040
to be performed should be targeted

111
00:05:15.040 --> 00:05:17.030
and replaced with automation.

112
00:05:17.030 --> 00:05:19.070
Then start looking at your existing tool set

113
00:05:19.070 --> 00:05:22.020
to determine if it can remedy the weak spots

114
00:05:22.020 --> 00:05:23.060
in your process.

115
00:05:23.060 --> 00:05:26.010
If a particular tool is not available

116
00:05:26.010 --> 00:05:29.050
in the existing tool set, the teams should jointly

117
00:05:29.050 --> 00:05:32.020
identify a new tool that can automate

118
00:05:32.020 --> 00:05:35.030
the manual work performed.

119
00:05:35.030 --> 00:05:38.050
After identifying the tool, spend some time learning

120
00:05:38.050 --> 00:05:41.020
to use it before putting it in place.

121
00:05:41.020 --> 00:05:44.000
There's a lot of information available regarding tool sets

122
00:05:44.000 --> 00:05:48.050
that can support the various stages of DevOps processes.

123
00:05:48.050 --> 00:05:51.010
Luckily for you, you've already invested the time

124
00:05:51.010 --> 00:05:53.000
in learning one of the most common tools

125
00:05:53.000 --> 00:05:56.040
found in DevOps environments, and that's Git.

126
00:05:56.040 --> 00:05:58.060
Armed with this information and your knowledge

127
00:05:58.060 --> 00:06:01.010
of how teams can collaborate with Git,

128
00:06:01.010 --> 00:06:04.000
you'll be able to establish DevOps practices

129
00:06:04.000 --> 00:06:06.050
that allow your team to deliver code faster

130
00:06:06.050 --> 00:06:08.000
and more reliably.

