WEBVTT
1
00:00:00.050 --> 00:00:03.010
- [Instructor] This lesson will demonstrate how to set up

2
00:00:03.010 --> 00:00:06.060
and execute our first pipeline using GitLab Runner.

3
00:00:06.060 --> 00:00:09.070
To support our demonstration, we'll need a simple project

4
00:00:09.070 --> 00:00:13.090
that we can build using GitLab Runner in GitLab CI.

5
00:00:13.090 --> 00:00:16.020
I've created a simple Java application

6
00:00:16.020 --> 00:00:18.040
that we'll be using for that purpose.

7
00:00:18.040 --> 00:00:20.030
You can find the project

8
00:00:20.030 --> 00:00:22.080
within the working files for the course.

9
00:00:22.080 --> 00:00:26.080
Let's first set up that project within GitLab.

10
00:00:26.080 --> 00:00:32.010
So as an administrator, I'm going to create a new project.

11
00:00:32.010 --> 00:00:37.040
We're going to name this new project sample-ci.

12
00:00:37.040 --> 00:00:40.080
You can keep it as a private repository,

13
00:00:40.080 --> 00:00:44.050
and just go ahead and click on the Create Project button.

14
00:00:44.050 --> 00:00:47.030
Now here's the neat thing about GitLab.

15
00:00:47.030 --> 00:00:49.050
It always tells you what the next step is.

16
00:00:49.050 --> 00:00:51.080
So if we scroll down some,

17
00:00:51.080 --> 00:00:57.080
you'll see that it tells us how to set up our repository

18
00:00:57.080 --> 00:01:01.070
if we're building a new repository if we already have files.

19
00:01:01.070 --> 00:01:04.000
In our case, we already have a project,

20
00:01:04.000 --> 00:01:07.090
so what we want to do is just copy the line

21
00:01:07.090 --> 00:01:09.050
to add a remote.

22
00:01:09.050 --> 00:01:12.090
We can easily init the project and do the commit.

23
00:01:12.090 --> 00:01:17.020
It's just helpful to have the URL to your remote

24
00:01:17.020 --> 00:01:19.050
so that it can be established.

25
00:01:19.050 --> 00:01:22.020
Okay, so let's head over to the Terminal now,

26
00:01:22.020 --> 00:01:25.010
and we'll complete the setup of the project.

27
00:01:25.010 --> 00:01:27.050
So just to give you an idea

28
00:01:27.050 --> 00:01:29.060
of where I'm at,

29
00:01:29.060 --> 00:01:31.080
I've created a CI folder.

30
00:01:31.080 --> 00:01:34.030
And then, within that CI folder,

31
00:01:34.030 --> 00:01:36.080
I've placed our sample project.

32
00:01:36.080 --> 00:01:40.060
So I'm going to cd into the sample project.

33
00:01:40.060 --> 00:01:41.080
And then from there,

34
00:01:41.080 --> 00:01:46.060
we're going to initiate a Git repository,

35
00:01:46.060 --> 00:01:48.020
and we can then go ahead

36
00:01:48.020 --> 00:01:51.040
and paste the line to add the remote.

37
00:01:51.040 --> 00:01:54.030
At this point, we can then

38
00:01:54.030 --> 00:01:58.020
add all of the files to the stage,

39
00:01:58.020 --> 00:02:02.020
and now we're going to actually build out

40
00:02:02.020 --> 00:02:05.020
a new file within our project.

41
00:02:05.020 --> 00:02:10.050
This file is the gitlab-ci.yml file,

42
00:02:10.050 --> 00:02:12.050
so this is a YAML file.

43
00:02:12.050 --> 00:02:16.060
If you're familiar with Travis CI, it's very similar

44
00:02:16.060 --> 00:02:20.030
to their approach to continuous integration.

45
00:02:20.030 --> 00:02:23.010
Let's go ahead and create that file.

46
00:02:23.010 --> 00:02:28.090
So it's .gitlab-ci.yml.

47
00:02:28.090 --> 00:02:32.040
So we're going to create this file within Vim.

48
00:02:32.040 --> 00:02:35.080
And let's talk a little bit about what this file does.

49
00:02:35.080 --> 00:02:37.030
Inside of the file,

50
00:02:37.030 --> 00:02:41.090
we can build out our continuous integration pipeline.

51
00:02:41.090 --> 00:02:45.090
It's going to contain jobs that we would like to run

52
00:02:45.090 --> 00:02:49.060
as part of our pipeline that will build our application.

53
00:02:49.060 --> 00:02:54.010
So let's go ahead and create our first job,

54
00:02:54.010 --> 00:02:57.010
and we're going to name this job build.

55
00:02:57.010 --> 00:03:00.080
If you're familiar with YAML syntax, we use

56
00:03:00.080 --> 00:03:05.090
a nested structure with semicolons and indentation

57
00:03:05.090 --> 00:03:09.080
in order to build out this hierarchy for our commands.

58
00:03:09.080 --> 00:03:12.060
So once we have our job name build,

59
00:03:12.060 --> 00:03:15.050
we're going to use a script.

60
00:03:15.050 --> 00:03:19.060
And then that script is actually a shell script,

61
00:03:19.060 --> 00:03:22.070
so now we're working right on the command line.

62
00:03:22.070 --> 00:03:25.090
So we can leverage something like Maven,

63
00:03:25.090 --> 00:03:28.060
which is installed on our Ubuntu system,

64
00:03:28.060 --> 00:03:31.070
and we can execute its compile goal.

65
00:03:31.070 --> 00:03:35.070
So that's going to compile our project.

66
00:03:35.070 --> 00:03:39.000
That's enough for our first job within our pipeline.

67
00:03:39.000 --> 00:03:43.010
Let's go ahead and write this file out,

68
00:03:43.010 --> 00:03:46.050
and then we're going to add it to the project.

69
00:03:46.050 --> 00:03:49.050
And then let's commit these items.

70
00:03:49.050 --> 00:03:53.010
So we'll say this is our Initial Commit.

71
00:03:53.010 --> 00:03:55.030
And then what we're going to do

72
00:03:55.030 --> 00:03:57.090
is we're going to push

73
00:03:57.090 --> 00:03:59.000
to the master.

74
00:03:59.000 --> 00:04:02.070
I'll use the -u flag since it's our first push.

75
00:04:02.070 --> 00:04:05.070
And now we're going to supply the credentials.

76
00:04:05.070 --> 00:04:08.050
I'm just going to use the root credentials here.

77
00:04:08.050 --> 00:04:10.010
You need to make sure that this user

78
00:04:10.010 --> 00:04:13.020
does have permissions on the repository.

79
00:04:13.020 --> 00:04:16.050
Okay, so changes go up to the central repository.

80
00:04:16.050 --> 00:04:20.000
And now, if we navigate into GitLab

81
00:04:20.000 --> 00:04:23.040
and take a look at the CI/CD section,

82
00:04:23.040 --> 00:04:26.050
you can see that it's running our pipeline.

83
00:04:26.050 --> 00:04:31.020
That's because we've configured our pipeline to contain jobs

84
00:04:31.020 --> 00:04:37.080
within the gitlab-ci-yml file.

85
00:04:37.080 --> 00:04:40.040
So what we're looking at is a pipeline.

86
00:04:40.040 --> 00:04:45.090
If we want to drill down into the pipeline to see the jobs,

87
00:04:45.090 --> 00:04:50.050
all you need to do is click on the number for the pipeline.

88
00:04:50.050 --> 00:04:53.040
And then inside of the pipeline,

89
00:04:53.040 --> 00:04:57.040
we can take a look at the jobs that it consists of,

90
00:04:57.040 --> 00:04:59.080
and there we see our build job.

91
00:04:59.080 --> 00:05:04.010
We can also drill down into the job to see more details.

92
00:05:04.010 --> 00:05:06.080
In fact, there, we're seeing the command line,

93
00:05:06.080 --> 00:05:09.080
and we're able to be exposed

94
00:05:09.080 --> 00:05:13.020
to the work that Maven has performed.

95
00:05:13.020 --> 00:05:14.060
So you kinda get the hierarchy

96
00:05:14.060 --> 00:05:16.070
of how these things are nested.

97
00:05:16.070 --> 00:05:19.060
A pipeline contains many jobs,

98
00:05:19.060 --> 00:05:23.040
and the jobs do the work to build our project.

99
00:05:23.040 --> 00:05:26.030
The CI/CD pipeline is extremely valuable,

100
00:05:26.030 --> 00:05:28.000
and it will help your team automate

101
00:05:28.000 --> 00:05:30.000
the work of building software.

