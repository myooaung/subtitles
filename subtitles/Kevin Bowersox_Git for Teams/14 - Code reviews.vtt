WEBVTT
1
00:00:00.050 --> 00:00:02.080
- [Instructor] So after the code for an issue

2
00:00:02.080 --> 00:00:06.010
or feature has been placed into a feature branch

3
00:00:06.010 --> 00:00:08.050
and a merge request has been built,

4
00:00:08.050 --> 00:00:12.050
the next step in GitFlow is to do a code review

5
00:00:12.050 --> 00:00:16.080
of the changes that have been requested to be merged.

6
00:00:16.080 --> 00:00:21.010
So we're logged in to GitLab as the maintainer

7
00:00:21.010 --> 00:00:24.020
and it's up to the maintainer to review the code,

8
00:00:24.020 --> 00:00:27.040
so if they navigate to the Merge Request section

9
00:00:27.040 --> 00:00:30.030
they're going to see there's new work for them.

10
00:00:30.030 --> 00:00:32.070
They need to look at this merge request

11
00:00:32.070 --> 00:00:34.080
and perform a code review.

12
00:00:34.080 --> 00:00:37.080
So once you drill down into the merge request,

13
00:00:37.080 --> 00:00:41.030
you'll be able to see what changes

14
00:00:41.030 --> 00:00:43.010
are found in that request.

15
00:00:43.010 --> 00:00:46.080
You can see the commits, so here we see there's one commit

16
00:00:46.080 --> 00:00:48.040
within this merge request

17
00:00:48.040 --> 00:00:50.080
and to see the files that we need to review,

18
00:00:50.080 --> 00:00:53.020
you can click on the Changes tab.

19
00:00:53.020 --> 00:00:56.000
So the maintainer takes a look and we say

20
00:00:56.000 --> 00:00:59.040
"Well, we kind of wanted feature-a, not just feature."

21
00:00:59.040 --> 00:01:03.030
So if we hover over the line that we'd like to comment on,

22
00:01:03.030 --> 00:01:05.050
we can click on this Comment button

23
00:01:05.050 --> 00:01:10.060
and that allows us to communicate with the contributor

24
00:01:10.060 --> 00:01:13.090
regarding the change that they've provided

25
00:01:13.090 --> 00:01:15.020
for their merge request,

26
00:01:15.020 --> 00:01:20.050
so let's just say "This should have been feature-a

27
00:01:20.050 --> 00:01:23.020
"instead of feature."

28
00:01:23.020 --> 00:01:25.050
So you can see right within GitLab,

29
00:01:25.050 --> 00:01:29.010
we can communicate back and forth regarding the code

30
00:01:29.010 --> 00:01:32.080
and attach comments right to the line of code

31
00:01:32.080 --> 00:01:35.030
we'd like to provide our feedback on,

32
00:01:35.030 --> 00:01:38.020
so it's a great mechanism for code reviews.

33
00:01:38.020 --> 00:01:41.020
So let's go ahead and add this comment

34
00:01:41.020 --> 00:01:44.060
and now that's going to signal to the contributor

35
00:01:44.060 --> 00:01:46.030
that they need to make some changes

36
00:01:46.030 --> 00:01:50.080
before the maintainer is going to accept this code

37
00:01:50.080 --> 00:01:53.050
and integrate it into develop.

38
00:01:53.050 --> 00:01:57.070
So let's navigate now over to the terminal

39
00:01:57.070 --> 00:02:01.080
and what we're going to do is work as the contributor

40
00:02:01.080 --> 00:02:05.000
to apply those changes.

41
00:02:05.000 --> 00:02:10.020
Okay, so the contributor opens the feature-list file

42
00:02:10.020 --> 00:02:13.040
and they go in and apply the recommendations

43
00:02:13.040 --> 00:02:15.000
of the maintainer.

44
00:02:15.000 --> 00:02:19.090
They write the file and then they can commit the changes

45
00:02:19.090 --> 00:02:20.090
to the file.

46
00:02:20.090 --> 00:02:24.080
Once again, we're going to add that nifty Fix syntax

47
00:02:24.080 --> 00:02:27.070
with our issue number and then we'll just say

48
00:02:27.070 --> 00:02:30.060
"Recommendations applied".

49
00:02:30.060 --> 00:02:35.010
Okay, so the contributor has applied the changes

50
00:02:35.010 --> 00:02:38.090
from the code review and then they push those up

51
00:02:38.090 --> 00:02:42.050
for their feature branch

52
00:02:42.050 --> 00:02:47.020
and they'll need to provide their credentials

53
00:02:47.020 --> 00:02:49.070
and now at this point,

54
00:02:49.070 --> 00:02:52.050
they have answered the call of the code review

55
00:02:52.050 --> 00:02:54.060
and we have a better product.

56
00:02:54.060 --> 00:02:59.000
So if we go into GitLab now,

57
00:02:59.000 --> 00:03:02.050
the contributor should log in

58
00:03:02.050 --> 00:03:05.030
and update the merge request,

59
00:03:05.030 --> 00:03:09.020
so we'll log in with their credentials,

60
00:03:09.020 --> 00:03:12.000
we'll navigate into the project,

61
00:03:12.000 --> 00:03:15.030
and then we can go into the merge request

62
00:03:15.030 --> 00:03:19.090
and if we click on it, we can then provide some feedback

63
00:03:19.090 --> 00:03:23.020
back to the maintainer,

64
00:03:23.020 --> 00:03:28.070
so we can say "This feedback has been applied."

65
00:03:28.070 --> 00:03:32.090
and then we can actually use a quick action

66
00:03:32.090 --> 00:03:37.010
to say that we spent one hour making the fix.

67
00:03:37.010 --> 00:03:39.070
So we'll go ahead and make that comment.

68
00:03:39.070 --> 00:03:42.020
You'll notice that the time tracking updates

69
00:03:42.020 --> 00:03:47.020
to track that time that we spent on making this fix.

70
00:03:47.020 --> 00:03:50.090
You'll also notice that we get this history

71
00:03:50.090 --> 00:03:53.060
of the merge request and all the work

72
00:03:53.060 --> 00:03:56.030
that's been done towards it.

73
00:03:56.030 --> 00:04:00.000
So now we have completed our code review

74
00:04:00.000 --> 00:04:04.000
and we're ready for the next step in GitFlow.

