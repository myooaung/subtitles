WEBVTT
1
00:00:00.050 --> 00:00:02.050
- [Instructor] GitLab Runner is the workhorse

2
00:00:02.050 --> 00:00:05.060
of GitLab's approach to continuous integration.

3
00:00:05.060 --> 00:00:08.040
When code changes enter your repository,

4
00:00:08.040 --> 00:00:12.010
the runner executes jobs that help build our software

5
00:00:12.010 --> 00:00:15.020
and then notifies GitLab of the results.

6
00:00:15.020 --> 00:00:18.010
This interplay between GitLab's core and the runner

7
00:00:18.010 --> 00:00:21.070
is the foundation of the CI/CD strategy we'll be using.

8
00:00:21.070 --> 00:00:24.070
Before we start, though, we need to make sure

9
00:00:24.070 --> 00:00:28.060
some pre-requisite software has been installed.

10
00:00:28.060 --> 00:00:32.040
The application we'll be working with for CI/CD

11
00:00:32.040 --> 00:00:36.000
and GitLab is actually a Java application

12
00:00:36.000 --> 00:00:37.090
that's built using Maven.

13
00:00:37.090 --> 00:00:40.010
We need to make sure that Java 8

14
00:00:40.010 --> 00:00:44.010
and Maven are installed on your system before proceeding.

15
00:00:44.010 --> 00:00:46.030
We're not gonna walk through that in this course

16
00:00:46.030 --> 00:00:48.030
because there's many guides out there

17
00:00:48.030 --> 00:00:51.080
for installing these technologies on your system.

18
00:00:51.080 --> 00:00:54.070
Once you've installed the pre-requisite software,

19
00:00:54.070 --> 00:01:00.010
I recommend consulting the GitLab Runner documentation.

20
00:01:00.010 --> 00:01:03.050
You'll find the installation procedures

21
00:01:03.050 --> 00:01:06.020
for the different operating systems

22
00:01:06.020 --> 00:01:09.030
on the documentations webpage.

23
00:01:09.030 --> 00:01:12.070
In our case, we're going to be working on Linux,

24
00:01:12.070 --> 00:01:17.020
so let's consult the instructions and here's why.

25
00:01:17.020 --> 00:01:19.070
These instructions can change often.

26
00:01:19.070 --> 00:01:23.020
If they change that URL, the instructions I provide you

27
00:01:23.020 --> 00:01:24.060
are not going to be fresh,

28
00:01:24.060 --> 00:01:26.070
so always consult the documentation

29
00:01:26.070 --> 00:01:30.020
when you're looking for these installation instructions

30
00:01:30.020 --> 00:01:32.050
on GitLab Runner.

31
00:01:32.050 --> 00:01:37.040
So we're going to be working on the Linux distribution

32
00:01:37.040 --> 00:01:40.030
and I want this middle installation

33
00:01:40.030 --> 00:01:44.040
because I'm running on Linux X86.

34
00:01:44.040 --> 00:01:47.060
So I'm just going to go ahead and copy that command

35
00:01:47.060 --> 00:01:53.000
which is using wget and then head over to a terminal.

36
00:01:53.000 --> 00:01:58.040
Okay, so we can now paste the command from the website

37
00:01:58.040 --> 00:02:02.090
and this will pull down the GitLab Runner binaries

38
00:02:02.090 --> 00:02:05.070
for installation.

39
00:02:05.070 --> 00:02:09.000
So there we see the package being downloaded

40
00:02:09.000 --> 00:02:12.030
and once the download completes,

41
00:02:12.030 --> 00:02:16.010
we can then begin to open up the permissions

42
00:02:16.010 --> 00:02:19.090
on the directory that we've pulled the files down to.

43
00:02:19.090 --> 00:02:23.000
So I'm going to use the change mod command

44
00:02:23.000 --> 00:02:25.050
and we're going to open up that directory

45
00:02:25.050 --> 00:02:32.010
which was /usr/local/bin/gitlab-runner,

46
00:02:32.010 --> 00:02:34.090
and now that that directory's opened up

47
00:02:34.090 --> 00:02:38.050
what we'll do is we will create a new user,

48
00:02:38.050 --> 00:02:42.020
so we're going to use the useradd command

49
00:02:42.020 --> 00:02:47.010
as an administrator and we're going to build a home

50
00:02:47.010 --> 00:02:53.010
for this user that's going to be named gitlab-runner

51
00:02:53.010 --> 00:02:55.000
and then we're going to send this

52
00:02:55.000 --> 00:02:58.080
over to the shell and bash.

53
00:02:58.080 --> 00:03:01.090
Okay, so we created the new user

54
00:03:01.090 --> 00:03:05.020
and then at this point we're going to create a service

55
00:03:05.020 --> 00:03:09.000
to run GitLab Runner.

56
00:03:09.000 --> 00:03:14.080
So we use the sudo command and then we use gitlab-runner

57
00:03:14.080 --> 00:03:18.020
and we perform an install

58
00:03:18.020 --> 00:03:21.000
and we're going to set the service up

59
00:03:21.000 --> 00:03:25.060
to be ran with the GitLab Runner user

60
00:03:25.060 --> 00:03:28.080
and then we can specify a working directory

61
00:03:28.080 --> 00:03:37.030
for the service of /home/gitlab-runner

62
00:03:37.030 --> 00:03:39.050
and then at this point, all we need to do

63
00:03:39.050 --> 00:03:45.040
is use the GitLab Runner to start the service.

64
00:03:45.040 --> 00:03:49.080
Okay, so now GitLab Runner is installed on the machine

65
00:03:49.080 --> 00:03:54.020
as a service and we can use it to perform jobs

66
00:03:54.020 --> 00:03:58.000
with our builds as part of GitLab's CI strategy.

