WEBVTT
1
00:00:00.050 --> 00:00:02.020
- [Instructor] In this lesson, we'll walk through

2
00:00:02.020 --> 00:00:05.070
how a contributor establishes a feature branch

3
00:00:05.070 --> 00:00:08.000
to build out the code changes

4
00:00:08.000 --> 00:00:10.080
required to resolve an issue.

5
00:00:10.080 --> 00:00:13.070
Once the feature branch has been completed,

6
00:00:13.070 --> 00:00:17.020
we'll then see how to integrate that feature branch

7
00:00:17.020 --> 00:00:19.070
with the developed branch as defined

8
00:00:19.070 --> 00:00:22.000
by the GitFlow workflow.

9
00:00:22.000 --> 00:00:25.060
So here we are within GitLab

10
00:00:25.060 --> 00:00:29.090
as a contributor, and we're going to establish

11
00:00:29.090 --> 00:00:34.000
a new feature branch to resolve one of the issues

12
00:00:34.000 --> 00:00:36.050
that our contributor is going to work on,

13
00:00:36.050 --> 00:00:39.000
so there it is, Missing Feature A.

14
00:00:39.000 --> 00:00:42.020
We're gonna drill down into that issue

15
00:00:42.020 --> 00:00:44.050
and here you'll see this dropdown.

16
00:00:44.050 --> 00:00:48.050
We can click on that, and we can use the dropdown

17
00:00:48.050 --> 00:00:51.000
to create a new feature branch.

18
00:00:51.000 --> 00:00:53.060
You'll see that GitLab provides us

19
00:00:53.060 --> 00:00:56.080
with a default branch name that contains

20
00:00:56.080 --> 00:00:59.080
the issue number and the name of the issue.

21
00:00:59.080 --> 00:01:02.010
The next part's pretty important.

22
00:01:02.010 --> 00:01:05.070
It's asking us to define the branch

23
00:01:05.070 --> 00:01:08.090
that we would like to use

24
00:01:08.090 --> 00:01:11.090
as far as the source for our new feature branch,

25
00:01:11.090 --> 00:01:15.080
so we're going to branch off of develop.

26
00:01:15.080 --> 00:01:17.010
That's important.

27
00:01:17.010 --> 00:01:19.010
When we build feature branches in GitFlow,

28
00:01:19.010 --> 00:01:22.090
it's always off of the develop branch.

29
00:01:22.090 --> 00:01:26.070
So we'll go ahead, click on create branch,

30
00:01:26.070 --> 00:01:30.060
and at this point, if we look at the branches

31
00:01:30.060 --> 00:01:33.030
in our repository, you'll see that we have

32
00:01:33.030 --> 00:01:36.020
our new feature branch.

33
00:01:36.020 --> 00:01:39.030
Now I'm going to head to the project

34
00:01:39.030 --> 00:01:43.010
and I'll grab the URL for the repository,

35
00:01:43.010 --> 00:01:46.050
and this is so we can head over to the terminal

36
00:01:46.050 --> 00:01:49.030
and perform the work as the contributor

37
00:01:49.030 --> 00:01:52.030
of building out our new feature.

38
00:01:52.030 --> 00:01:56.080
So what I'll do is I will clone the repository,

39
00:01:56.080 --> 00:01:58.080
so I'll paste in that URL.

40
00:01:58.080 --> 00:02:01.070
It's going to ask us for credentials

41
00:02:01.070 --> 00:02:05.030
and we'll provide those of the contributor,

42
00:02:05.030 --> 00:02:10.020
and now we have the repository.

43
00:02:10.020 --> 00:02:12.080
Now that we've cloned the repository,

44
00:02:12.080 --> 00:02:14.060
we'll now change the directory

45
00:02:14.060 --> 00:02:18.040
into the new repository

46
00:02:18.040 --> 00:02:20.050
and from here, we can take a look

47
00:02:20.050 --> 00:02:23.080
at all the branches that are available.

48
00:02:23.080 --> 00:02:27.030
You'll see that we have the new feature branch,

49
00:02:27.030 --> 00:02:29.090
so what I'll do is

50
00:02:29.090 --> 00:02:32.070
create a new local branch

51
00:02:32.070 --> 00:02:34.060
for the feature branch,

52
00:02:34.060 --> 00:02:38.070
and this is where we're going to do all of our work.

53
00:02:38.070 --> 00:02:41.060
Inside the branch, I'm going to create

54
00:02:41.060 --> 00:02:45.000
a new file named feature list,

55
00:02:45.000 --> 00:02:49.010
and inside this file, we're just going to add a feature,

56
00:02:49.010 --> 00:02:52.040
and then we're going to write the file,

57
00:02:52.040 --> 00:02:55.040
and at this point, we can then add the file

58
00:02:55.040 --> 00:02:59.010
to the local repository, and then we'll commit

59
00:02:59.010 --> 00:03:01.050
and take a look at this commit message.

60
00:03:01.050 --> 00:03:05.010
I'm going to use the word fix,

61
00:03:05.010 --> 00:03:08.010
and then specify the issue number.

62
00:03:08.010 --> 00:03:10.020
That's going to be important later,

63
00:03:10.020 --> 00:03:13.000
that special syntax for GitLab,

64
00:03:13.000 --> 00:03:16.060
because when GitLab sees something like closes,

65
00:03:16.060 --> 00:03:20.060
close, fix, fixes, it's an indicator

66
00:03:20.060 --> 00:03:23.040
to the repository manager that it should

67
00:03:23.040 --> 00:03:27.020
look for the issue number following that keyword,

68
00:03:27.020 --> 00:03:30.030
and move the status of that issue,

69
00:03:30.030 --> 00:03:33.000
so we're basically indicating to GitLab

70
00:03:33.000 --> 00:03:35.050
via the commit message that we're going to

71
00:03:35.050 --> 00:03:38.020
fix issue number one.

72
00:03:38.020 --> 00:03:42.010
Okay, so we got that in place, let's make our commit,

73
00:03:42.010 --> 00:03:46.070
and then we're going to push to

74
00:03:46.070 --> 00:03:50.080
the remote repository our feature branch,

75
00:03:50.080 --> 00:03:55.010
and I'll use dash u, so we set up the track changes,

76
00:03:55.010 --> 00:03:59.050
and then we provide the credentials of the contributor,

77
00:03:59.050 --> 00:04:02.050
and now if we head over

78
00:04:02.050 --> 00:04:04.090
to GitLab,

79
00:04:04.090 --> 00:04:07.070
and we take a look

80
00:04:07.070 --> 00:04:11.010
within our merge request section, you're going to see

81
00:04:11.010 --> 00:04:13.030
that GitLab does something really nice for us.

82
00:04:13.030 --> 00:04:16.070
It picks up a change on the missing

83
00:04:16.070 --> 00:04:20.030
Feature A feature branch, and it says hey,

84
00:04:20.030 --> 00:04:22.050
would you like to create a merge request?

85
00:04:22.050 --> 00:04:24.080
And it gives us this convenient option.

86
00:04:24.080 --> 00:04:29.000
So we can click on that and it builds out a title for us,

87
00:04:29.000 --> 00:04:32.040
and it provides a quick description

88
00:04:32.040 --> 00:04:35.080
so we'll go ahead and assign this merge request

89
00:04:35.080 --> 00:04:39.050
to a maintainer so they know they have some work

90
00:04:39.050 --> 00:04:41.090
that they need to merge into develop,

91
00:04:41.090 --> 00:04:44.060
and then this is really important.

92
00:04:44.060 --> 00:04:47.060
You see it's defaulting to merge the changes

93
00:04:47.060 --> 00:04:50.060
from the feature branch into master.

94
00:04:50.060 --> 00:04:52.040
That's not what we want to do.

95
00:04:52.040 --> 00:04:57.030
Within the GitFlow workflow, we always merge

96
00:04:57.030 --> 00:05:00.070
from a feature branch back into master.

97
00:05:00.070 --> 00:05:05.030
So we need to set up develop as our target branch

98
00:05:05.030 --> 00:05:08.080
and the feature branch as our source branch.

99
00:05:08.080 --> 00:05:11.000
So with that in place, we can go ahead

100
00:05:11.000 --> 00:05:14.010
and compare the branches and continue,

101
00:05:14.010 --> 00:05:18.030
and then if we scroll down we can see the commits

102
00:05:18.030 --> 00:05:20.060
that will be in this merge request,

103
00:05:20.060 --> 00:05:23.040
and we can go ahead and submit it.

104
00:05:23.040 --> 00:05:27.060
And then if we take a look, you'll see the merge request

105
00:05:27.060 --> 00:05:30.020
now shows up in the queue,

106
00:05:30.020 --> 00:05:34.000
and it's there for a maintainer to work.

107
00:05:34.000 --> 00:05:36.010
If we drill down into that merge request,

108
00:05:36.010 --> 00:05:38.020
you'll notice that the contributor

109
00:05:38.020 --> 00:05:41.060
doesn't have the power to merge it into develop.

110
00:05:41.060 --> 00:05:44.060
That privilege is reserved for the maintainer

111
00:05:44.060 --> 00:05:47.020
as defined by GitFlow.

112
00:05:47.020 --> 00:05:51.010
So here we saw how to create a new feature branch

113
00:05:51.010 --> 00:05:54.000
off of an issue, perform some work in that branch,

114
00:05:54.000 --> 00:05:57.040
and then pull it back into the central repository

115
00:05:57.040 --> 00:05:59.080
and create a request for a maintainer

116
00:05:59.080 --> 00:06:04.000
to pull that code into the developed branch.

