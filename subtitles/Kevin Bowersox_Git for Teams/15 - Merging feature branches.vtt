WEBVTT
1
00:00:00.050 --> 00:00:02.010
- [Instructor] In this lesson, we'll walk through

2
00:00:02.010 --> 00:00:04.050
how we maintain our merge as a feature branch

3
00:00:04.050 --> 00:00:06.070
provided by a contributor.

4
00:00:06.070 --> 00:00:09.090
The merge is performed after code review has been completed

5
00:00:09.090 --> 00:00:12.050
and all suggestions have been applied.

6
00:00:12.050 --> 00:00:15.020
At this point, the contributor's work is complete

7
00:00:15.020 --> 00:00:18.090
so we will be logged in to the GitLab UI as a maintainer.

8
00:00:18.090 --> 00:00:20.080
The first thing the maintainer will notice

9
00:00:20.080 --> 00:00:26.030
is that the merge request has been added to GitLab,

10
00:00:26.030 --> 00:00:29.050
so let's enter the merge request section

11
00:00:29.050 --> 00:00:31.030
and we'll drill down into

12
00:00:31.030 --> 00:00:34.060
the Missing Feature A merge request.

13
00:00:34.060 --> 00:00:37.060
The maintainer has already performed a code review,

14
00:00:37.060 --> 00:00:40.090
so they are safe to perform the merge.

15
00:00:40.090 --> 00:00:43.030
This will merge the code changes

16
00:00:43.030 --> 00:00:47.080
in the Missing Feature A branch into develop.

17
00:00:47.080 --> 00:00:50.070
So let's go ahead and click on the Merge button

18
00:00:50.070 --> 00:00:53.000
and once the merge is complete,

19
00:00:53.000 --> 00:00:54.090
we can scroll down to the bottom

20
00:00:54.090 --> 00:00:57.030
and close the merge request.

21
00:00:57.030 --> 00:01:00.070
At this point, the changes are now in the Develop branch

22
00:01:00.070 --> 00:01:04.040
and we'd like to build a Release Candidate branch

23
00:01:04.040 --> 00:01:07.070
that can be merged into Master.

24
00:01:07.070 --> 00:01:10.010
To do that, we're going to navigate

25
00:01:10.010 --> 00:01:14.080
into the repository section and click on Branches.

26
00:01:14.080 --> 00:01:18.020
We'll click on the New Branch button

27
00:01:18.020 --> 00:01:20.090
at the top right hand corner of the screen

28
00:01:20.090 --> 00:01:24.040
and we're going to name our new branch

29
00:01:24.040 --> 00:01:28.000
version-1-release.

30
00:01:28.000 --> 00:01:32.020
It's important here that you select the Develop branch

31
00:01:32.020 --> 00:01:36.020
as the branch that we will create

32
00:01:36.020 --> 00:01:39.090
our new version-1-release branch from.

33
00:01:39.090 --> 00:01:42.090
So we're basically going to create a clone

34
00:01:42.090 --> 00:01:46.080
of develop named version-1-release.

35
00:01:46.080 --> 00:01:49.010
Remember, develop contains the changes

36
00:01:49.010 --> 00:01:50.040
from our feature branch.

37
00:01:50.040 --> 00:01:52.090
They're slowly being promoted.

38
00:01:52.090 --> 00:01:56.030
We'll go ahead and then click on the Create Branch button

39
00:01:56.030 --> 00:02:02.030
and now we have our new version-1-release branch.

40
00:02:02.030 --> 00:02:05.090
Now at this point, we would do some QA testing.

41
00:02:05.090 --> 00:02:09.060
Let's say that QA testing reveals we have an issue

42
00:02:09.060 --> 00:02:12.090
with the feature-list file.

43
00:02:12.090 --> 00:02:14.030
If it's a small issue,

44
00:02:14.030 --> 00:02:19.040
let's say instead of feature-a they want feature a,

45
00:02:19.040 --> 00:02:21.080
we can go in and edit the file

46
00:02:21.080 --> 00:02:25.050
right within the user interface of GitLab,

47
00:02:25.050 --> 00:02:29.050
so let's just replace that dash with a space.

48
00:02:29.050 --> 00:02:34.060
We can then, at this point, commit our changes

49
00:02:34.060 --> 00:02:36.070
and now that commit is sitting

50
00:02:36.070 --> 00:02:40.090
within the version-1-release branch,

51
00:02:40.090 --> 00:02:45.090
which is ready to be merged with our master branch.

52
00:02:45.090 --> 00:02:50.040
In order to perform that merge, we're going to navigate

53
00:02:50.040 --> 00:02:53.060
into the merge request section on the side bar

54
00:02:53.060 --> 00:02:58.030
and we can build a new merge request.

55
00:02:58.030 --> 00:03:00.000
A really nice feature of GitLab

56
00:03:00.000 --> 00:03:03.040
is how it picks up on recent branch changes

57
00:03:03.040 --> 00:03:07.050
and then gives you a quick link to make a merge request

58
00:03:07.050 --> 00:03:10.050
based upon those changes to a branch.

59
00:03:10.050 --> 00:03:14.000
So let's just click on Create Merge Request

60
00:03:14.000 --> 00:03:16.090
and here it's going to set up our merge request,

61
00:03:16.090 --> 00:03:18.040
it already gave it a name,

62
00:03:18.040 --> 00:03:20.020
and then if we look at the bottom

63
00:03:20.020 --> 00:03:23.070
it's going to merge our release candidate

64
00:03:23.070 --> 00:03:27.080
into the Master, which is exactly what we want to happen.

65
00:03:27.080 --> 00:03:29.080
So let's go ahead and click

66
00:03:29.080 --> 00:03:33.060
on the Submit Merge Request button

67
00:03:33.060 --> 00:03:38.010
and at this point, our new merge request is created

68
00:03:38.010 --> 00:03:40.050
and it's simply going to take those changes

69
00:03:40.050 --> 00:03:44.030
from the release candidate and apply them to Master.

70
00:03:44.030 --> 00:03:48.050
And remember, Master's a copy of the production code,

71
00:03:48.050 --> 00:03:51.080
so we will have completed our work

72
00:03:51.080 --> 00:03:55.070
from taking the feature a branch

73
00:03:55.070 --> 00:03:59.050
from the local work station all the way to production.

74
00:03:59.050 --> 00:04:01.080
Let's go ahead and we'll click on Merge

75
00:04:01.080 --> 00:04:06.010
in order to merge those changes into Master

76
00:04:06.010 --> 00:04:07.060
and then we're going to go ahead

77
00:04:07.060 --> 00:04:10.090
and close the merge request.

78
00:04:10.090 --> 00:04:13.070
That's going to complete our promotion

79
00:04:13.070 --> 00:04:16.070
of our feature branch changes into production

80
00:04:16.070 --> 00:04:18.000
via the GitFlow.

