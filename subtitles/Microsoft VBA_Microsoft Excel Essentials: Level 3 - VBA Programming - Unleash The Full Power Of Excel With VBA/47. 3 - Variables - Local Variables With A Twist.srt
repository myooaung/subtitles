1
00:00:00,000 --> 00:00:02,730
Okay,

2
00:00:02,730 --> 00:00:03,130
guys,

3
00:00:03,130 --> 00:00:03,950
welcome back.

4
00:00:03,950 --> 00:00:04,230
Now,

5
00:00:04,230 --> 00:00:04,990
in the last lecture,

6
00:00:04,990 --> 00:00:09,070
we have a look at local variables now going to move to this module,

7
00:00:09,070 --> 00:00:10,760
which is called modern underscore.

8
00:00:10,760 --> 00:00:12,730
20 underscored local level,

9
00:00:12,730 --> 00:00:13,660
and I've just done that.

10
00:00:13,660 --> 00:00:16,150
So they run in order of the demonstrations.

11
00:00:16,150 --> 00:00:20,420
Double click on we can see that we have all the general code written up here.

12
00:00:20,420 --> 00:00:21,460
All the aled,

13
00:00:21,460 --> 00:00:24,900
the remarks to help you understand it when you download the file.

14
00:00:24,900 --> 00:00:25,990
But for now,

15
00:00:25,990 --> 00:00:27,060
what I'm gonna do,

16
00:00:27,060 --> 00:00:29,940
it's copy all of someone cupping.

17
00:00:29,940 --> 00:00:33,930
I'm gonna paste it all into sub to So they go.

18
00:00:33,930 --> 00:00:34,940
That's almost well,

19
00:00:34,940 --> 00:00:37,460
that is exactly bar the comments at the top.

20
00:00:37,460 --> 00:00:40,320
Exactly what we have in the first sub.

21
00:00:40,320 --> 00:00:40,750
No,

22
00:00:40,750 --> 00:00:48,580
you'll remember that the variable lost its value as soon as we reach the end subsection of

23
00:00:48,580 --> 00:00:53,100
the the procedure the subroutine in which it was declared Well,

24
00:00:53,100 --> 00:00:58,850
there is something that you conduce with a locally declared sub that enables it to retain

25
00:00:58,850 --> 00:01:05,890
its value on what that is is utilizing something that we've seen 100 times already.

26
00:01:05,890 --> 00:01:07,650
But we've not yet discussed.

27
00:01:07,650 --> 00:01:15,290
And that is this little area here thes open and close brackets that appear after the sub's

28
00:01:15,290 --> 00:01:15,700
main.

29
00:01:15,700 --> 00:01:27,940
So what I'm gonna do is I'm gonna change sub two on Add the words s t r my string and just

30
00:01:27,940 --> 00:01:33,360
click off now because I've never added this to this subs name calling sub twos.

31
00:01:33,360 --> 00:01:34,060
Not gonna work.

32
00:01:34,060 --> 00:01:38,750
So what I'm gonna do is copy that name and paste that in here.

33
00:01:38,750 --> 00:01:46,650
So I am now calling sub to open brackets str my string and you'll remember that is the name

34
00:01:46,650 --> 00:01:47,870
of our variable.

35
00:01:47,870 --> 00:01:51,220
So now look what happens over here and notice.

36
00:01:51,220 --> 00:01:51,640
In fact,

37
00:01:51,640 --> 00:01:53,960
I'm gonna delete that watch if you need to.

38
00:01:53,960 --> 00:01:54,750
Dili to watch.

39
00:01:54,750 --> 00:01:55,890
Just literally right.

40
00:01:55,890 --> 00:01:58,010
Click it in the watches window hit,

41
00:01:58,010 --> 00:01:58,790
delete watch.

42
00:01:58,790 --> 00:02:03,610
And I'm gonna other watch to this version of str my string.

43
00:02:03,610 --> 00:02:04,740
Okay,

44
00:02:04,740 --> 00:02:05,530
so we can watch it.

45
00:02:05,530 --> 00:02:06,550
What's happening down here?

46
00:02:06,550 --> 00:02:08,280
So let's f eight through that.

47
00:02:08,280 --> 00:02:11,150
So the sheet select a one.

48
00:02:11,150 --> 00:02:12,270
Clear the old contents.

49
00:02:12,270 --> 00:02:13,210
Fantastic.

50
00:02:13,210 --> 00:02:20,010
Read the value of str my string from range A $1 value hovering over.

51
00:02:20,010 --> 00:02:22,110
This is my data we can see down here.

52
00:02:22,110 --> 00:02:24,380
This is my data organ so far.

53
00:02:24,380 --> 00:02:31,360
Call sub to on may go We're calling sub to my string and you can see already If we hover

54
00:02:31,360 --> 00:02:32,000
over that,

55
00:02:32,000 --> 00:02:39,450
the value has bean retained because of the way we've worded this sub on because we added

56
00:02:39,450 --> 00:02:41,640
the name of our variable in here.

57
00:02:41,640 --> 00:02:49,190
So f eight now this time C three should be populated with the current value of str my

58
00:02:49,190 --> 00:02:55,700
string So eight Fantastic that's worked beautifully up to end sub f ace and no,

59
00:02:55,700 --> 00:02:57,140
we go out of context.

60
00:02:57,140 --> 00:02:59,710
So if you declare a sub locally,

61
00:02:59,710 --> 00:03:06,870
but you want to pass the value of a variable declared in that sub to another subroutine on

62
00:03:06,870 --> 00:03:12,250
the name of the variable after the subroutine aim of the one you want to call just as we

63
00:03:12,250 --> 00:03:12,890
did here.

64
00:03:12,890 --> 00:03:14,080
When you call it,

65
00:03:14,080 --> 00:03:19,890
make sure you include that sometimes you'll see code where you have multiple things,

66
00:03:19,890 --> 00:03:25,730
so you'll have str my sub comma my value.

67
00:03:25,730 --> 00:03:26,760
I'm just making this up now,

68
00:03:26,760 --> 00:03:34,460
but you can have multiple names after all of the so you can pass the variable values to any

69
00:03:34,460 --> 00:03:38,150
other subroutine as long as you name the variable in here

