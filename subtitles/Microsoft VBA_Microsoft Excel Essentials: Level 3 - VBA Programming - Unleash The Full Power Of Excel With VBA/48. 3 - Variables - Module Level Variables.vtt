WEBVTT
ï»¿1
00:00:00.000 --> 00:00:03.010
Okay,

2
00:00:03.010 --> 00:00:03.380
guys,

3
00:00:03.380 --> 00:00:04.530
welcome back now,

4
00:00:04.530 --> 00:00:07.350
Demo Three of the variable section.

5
00:00:07.350 --> 00:00:10.370
We're gonna have a look at simple module level,

6
00:00:10.370 --> 00:00:15.590
valuable written lows of comments up here so you can have a read through The key bits are

7
00:00:15.590 --> 00:00:22.300
that module level variable module level variables are declared in the general declarations

8
00:00:22.300 --> 00:00:22.900
area.

9
00:00:22.900 --> 00:00:23.350
No,

10
00:00:23.350 --> 00:00:27.960
nothing points you to what the General Declarations area is,

11
00:00:27.960 --> 00:00:29.160
but it's very simple.

12
00:00:29.160 --> 00:00:34.550
It's the area immediately above your very first subroutine,

13
00:00:34.550 --> 00:00:35.450
hence sarees.

14
00:00:35.450 --> 00:00:39.000
And we are declaring he at above sub one.

15
00:00:39.000 --> 00:00:39.850
Okay,

16
00:00:39.850 --> 00:00:43.180
It can be used by all the subs in the current module.

17
00:00:43.180 --> 00:00:47.970
So you remember from the local level variable Once we passed to another subroutine.

18
00:00:47.970 --> 00:00:48.800
Essentially,

19
00:00:48.800 --> 00:00:53.090
there was nothing we could do with the variable because it was local to the sub in which it

20
00:00:53.090 --> 00:00:53.910
was declared.

21
00:00:53.910 --> 00:01:01.400
We are again going to use the dim statement as you can see that dim str my string to the

22
00:01:01.400 --> 00:01:02.020
scope.

23
00:01:02.020 --> 00:01:05.890
It is only available in the module in which its declared,

24
00:01:05.890 --> 00:01:09.660
which means we can use it module mod 30 model level,

25
00:01:09.660 --> 00:01:11.710
but you can use it in any of the others.

26
00:01:11.710 --> 00:01:12.380
Andi,

27
00:01:12.380 --> 00:01:17.850
near the lifetime is an interesting thing with module level variables declared as dim.

28
00:01:17.850 --> 00:01:25.160
They retain their value in memory until work clothes stop is hit in the visual basic editor

29
00:01:25.160 --> 00:01:25.160
.

30
00:01:25.160 --> 00:01:27.220
That's just they just stop.

31
00:01:27.220 --> 00:01:29.670
A new sub is agile.

32
00:01:29.670 --> 00:01:34.990
Added to this module or the end statement is reached just as we looked at a little while

33
00:01:34.990 --> 00:01:35.270
again.

34
00:01:35.270 --> 00:01:36.350
Okay,

35
00:01:36.350 --> 00:01:39.350
Now we're gonna do is I'm gonna delete that watch.

36
00:01:39.350 --> 00:01:41.420
So we were not interested in that one anymore.

37
00:01:41.420 --> 00:01:44.540
And I'm going to add a new watch to this one.

38
00:01:44.540 --> 00:01:45.140
Okay?

39
00:01:45.140 --> 00:01:46.910
And you can see appears down here,

40
00:01:46.910 --> 00:01:48.870
so I'm just going to step through this code.

41
00:01:48.870 --> 00:01:49.870
One of the thing.

42
00:01:49.870 --> 00:01:52.150
Slight modification here.

43
00:01:52.150 --> 00:01:53.520
We're gonna call sub two,

44
00:01:53.520 --> 00:01:55.610
and we're also gonna call sub three,

45
00:01:55.610 --> 00:01:59.310
which is living in a different module over here.

46
00:01:59.310 --> 00:02:03.030
So that would explain their let's move through this fate.

47
00:02:03.030 --> 00:02:04.000
A fate of eight.

48
00:02:04.000 --> 00:02:04.950
Select the current.

49
00:02:04.950 --> 00:02:06.160
The correct sheet bites.

50
00:02:06.160 --> 00:02:06.840
VB name.

51
00:02:06.840 --> 00:02:07.360
Very good.

52
00:02:07.360 --> 00:02:08.390
Program in practice.

53
00:02:08.390 --> 00:02:09.520
Select a one.

54
00:02:09.520 --> 00:02:10.660
Clear the contents.

55
00:02:10.660 --> 00:02:15.370
Load the value from range A one into the variable.

56
00:02:15.370 --> 00:02:16.100
My shrinking.

57
00:02:16.100 --> 00:02:16.540
There you go.

58
00:02:16.540 --> 00:02:17.520
You can see down here.

59
00:02:17.520 --> 00:02:19.950
This is my data on a hover over it anywhere.

60
00:02:19.950 --> 00:02:21.450
And it will tell you this is my data,

61
00:02:21.450 --> 00:02:22.390
right?

62
00:02:22.390 --> 00:02:24.380
it to see one which is here.

63
00:02:24.380 --> 00:02:25.730
Fantastic network.

64
00:02:25.730 --> 00:02:29.710
Beautifully call sub to a nail notice.

65
00:02:29.710 --> 00:02:31.000
Last time we tried to do this,

66
00:02:31.000 --> 00:02:31.880
it didn't work.

67
00:02:31.880 --> 00:02:35.610
But we can hover over here and immediately see that.

68
00:02:35.610 --> 00:02:35.920
Actually,

69
00:02:35.920 --> 00:02:40.960
we've successfully retained the value of my string to even though we've passed to another

70
00:02:40.960 --> 00:02:42.410
sub f eight.

71
00:02:42.410 --> 00:02:44.190
And here's the really interesting part.

72
00:02:44.190 --> 00:02:45.860
Now we're gonna call sub three,

73
00:02:45.860 --> 00:02:47.950
which lives in this module,

74
00:02:47.950 --> 00:02:54.550
so you can see we've selected module for sub three hover over it currently empty.

75
00:02:54.550 --> 00:02:56.480
So when I stepped through,

76
00:02:56.480 --> 00:02:58.300
I'm attempt to write c five.

77
00:02:58.300 --> 00:02:59.610
Nothing happened.

78
00:02:59.610 --> 00:03:01.450
Andi F five again.

79
00:03:01.450 --> 00:03:10.570
And that is because you can only use a dimmed variable at a module level in the module in

80
00:03:10.570 --> 00:03:11.840
which you created it.

81
00:03:11.840 --> 00:03:13.820
Now you'll notice that we reach the end.

82
00:03:13.820 --> 00:03:14.330
So there.

83
00:03:14.330 --> 00:03:16.720
But look what's happened Value.

84
00:03:16.720 --> 00:03:18.230
This is my data.

85
00:03:18.230 --> 00:03:21.530
And that's because it is retained in memory.

86
00:03:21.530 --> 00:03:23.260
Until the workbook closes.

87
00:03:23.260 --> 00:03:29.160
We hit stop in the V B A a new so bizarrely to the module or the end statement is reached.

88
00:03:29.160 --> 00:03:31.120
So just remove that from memory.

89
00:03:31.120 --> 00:03:32.750
I'm just going to hit Stop,

90
00:03:32.750 --> 00:03:33.660
okay?

91
00:03:33.660 --> 00:03:35.330
And the next lecture we're gonna have a look.

92
00:03:35.330 --> 00:03:39.350
The procedure level burial offer you in the next lecture

