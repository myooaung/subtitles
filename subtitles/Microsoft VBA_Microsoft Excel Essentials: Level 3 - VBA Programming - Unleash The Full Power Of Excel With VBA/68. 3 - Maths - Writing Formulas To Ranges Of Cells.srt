1
00:00:00,000 --> 00:00:03,100
Okay,

2
00:00:03,100 --> 00:00:03,510
guys,

3
00:00:03,510 --> 00:00:03,600
um,

4
00:00:03,600 --> 00:00:04,500
welcome back.

5
00:00:04,500 --> 00:00:04,960
Now,

6
00:00:04,960 --> 00:00:05,540
in this leg's,

7
00:00:05,540 --> 00:00:09,840
we're gonna have a look at writing formulas to a range off cells.

8
00:00:09,840 --> 00:00:10,190
Now,

9
00:00:10,190 --> 00:00:12,200
you may think we could do this with a loop.

10
00:00:12,200 --> 00:00:16,460
Obviously on you'll remember the drawback that we had when we tried to write it.

11
00:00:16,460 --> 00:00:17,480
In plain old,

12
00:00:17,480 --> 00:00:20,010
I can understand that sort of language,

13
00:00:20,010 --> 00:00:20,860
This one here,

14
00:00:20,860 --> 00:00:23,330
that if we did it in this cell,

15
00:00:23,330 --> 00:00:24,420
it works beautifully.

16
00:00:24,420 --> 00:00:26,060
But if we did it in any of the cell,

17
00:00:26,060 --> 00:00:28,800
it was still looking here ugly.

18
00:00:28,800 --> 00:00:34,650
If you write in exactly the same format to a bunch of cells all together.

19
00:00:34,650 --> 00:00:38,740
So we were saying here range H two to H 20 right?

20
00:00:38,740 --> 00:00:43,360
The formula in plain old English 65 minus G two.

21
00:00:43,360 --> 00:00:44,310
So let's have a look.

22
00:00:44,310 --> 00:00:46,250
What happens when we execute that code?

23
00:00:46,250 --> 00:00:47,440
They go.

24
00:00:47,440 --> 00:00:50,060
All of our code has been written automatically,

25
00:00:50,060 --> 00:00:53,370
all in one shot with the executed one line of code.

26
00:00:53,370 --> 00:00:58,270
But if we actually look at what's being written 65 minus G to quite right,

27
00:00:58,270 --> 00:01:00,490
65 minus g three.

28
00:01:00,490 --> 00:01:04,190
And then we come down here 65 minus g 12.

29
00:01:04,190 --> 00:01:10,470
So it seems if you write a range so you're writing to a range of cells all at once.

30
00:01:10,470 --> 00:01:11,850
Using the doctor formula,

31
00:01:11,850 --> 00:01:15,380
you can actually write them in a language that you can understand.

32
00:01:15,380 --> 00:01:16,710
And it works perfectly.

33
00:01:16,710 --> 00:01:17,430
OK,

34
00:01:17,430 --> 00:01:19,780
so you may be wondering one is the difference.

35
00:01:19,780 --> 00:01:23,270
And what is the point of having two different types of formula?

36
00:01:23,270 --> 00:01:31,990
While the don't formula generally is sent to be less efficient than the formula R one C one

37
00:01:31,990 --> 00:01:32,640
style.

38
00:01:32,640 --> 00:01:35,150
We just did 20 calculations just there,

39
00:01:35,150 --> 00:01:38,060
So it makes absolutely no odds whatsoever.

40
00:01:38,060 --> 00:01:40,390
But here's a quick demonstration for you.

41
00:01:40,390 --> 00:01:41,400
Now,

42
00:01:41,400 --> 00:01:45,850
I'm just gonna pause while I unhygienic all the days that survey me one second.

43
00:01:45,850 --> 00:01:47,240
Okay,

44
00:01:47,240 --> 00:01:48,070
welcome back.

45
00:01:48,070 --> 00:01:52,340
Now have a look at these two bits of code terribly ugly,

46
00:01:52,340 --> 00:01:54,190
but this does the job perfectly.

47
00:01:54,190 --> 00:02:00,180
What this is going to do is copy all of this data and paste it immediately below itself.

48
00:02:00,180 --> 00:02:02,100
Just ordinary huge data sets,

49
00:02:02,100 --> 00:02:06,500
and it's going to run 1999 times.

50
00:02:06,500 --> 00:02:10,290
Now that's going to take a few seconds while it's executing that.

51
00:02:10,290 --> 00:02:12,240
We're not even sure that I did that Then,

52
00:02:12,240 --> 00:02:12,520
um,

53
00:02:12,520 --> 00:02:12,980
I on it.

54
00:02:12,980 --> 00:02:13,240
Yes,

55
00:02:13,240 --> 00:02:13,580
I am.

56
00:02:13,580 --> 00:02:14,000
Okay,

57
00:02:14,000 --> 00:02:14,350
Go.

58
00:02:14,350 --> 00:02:15,430
So they go.

59
00:02:15,430 --> 00:02:19,320
It's happily populating were down to 10,000 lines of data.

60
00:02:19,320 --> 00:02:20,040
Now,

61
00:02:20,040 --> 00:02:21,040
in theory,

62
00:02:21,040 --> 00:02:24,780
if we use the R one C one style on,

63
00:02:24,780 --> 00:02:31,630
we re using it on 100,000 records and you can see that we're already up to 45 4 to 6000

64
00:02:31,630 --> 00:02:32,320
records.

65
00:02:32,320 --> 00:02:39,500
Then you should see a noticeable difference between the R one c one style on the just plain

66
00:02:39,500 --> 00:02:41,380
old vanilla formula style.

67
00:02:41,380 --> 00:02:47,340
So one of programmed here very crudely is a speed test.

68
00:02:47,340 --> 00:02:48,450
And what that's going to do,

69
00:02:48,450 --> 00:02:51,370
it's populate that cell that we just looked at.

70
00:02:51,370 --> 00:02:53,390
That 65 minus g two,

71
00:02:53,390 --> 00:02:57,140
which we know changes depending on which cell it gets written,

72
00:02:57,140 --> 00:02:57,480
too.

73
00:02:57,480 --> 00:03:05,000
So we're going to write all that 101,000 times down this data set,

74
00:03:05,000 --> 00:03:07,080
which is essentially the same data set.

75
00:03:07,080 --> 00:03:11,950
So we're going to write this 101,000 times,

76
00:03:11,950 --> 00:03:16,740
and then we're going to write the start time whether to put it out well,

77
00:03:16,740 --> 00:03:17,010
right,

78
00:03:17,010 --> 00:03:18,660
this start time in here.

79
00:03:18,660 --> 00:03:19,250
Well,

80
00:03:19,250 --> 00:03:19,510
right.

81
00:03:19,510 --> 00:03:21,240
The stop time in here.

82
00:03:21,240 --> 00:03:27,950
So have this code work says I am going to record the value of now in l one execute the code

83
00:03:27,950 --> 00:03:28,360
on,

84
00:03:28,360 --> 00:03:30,370
then recalled the value of now,

85
00:03:30,370 --> 00:03:33,150
which will be a little bit later in l two.

86
00:03:33,150 --> 00:03:36,290
And then we can subtract one from the other and see how fast it ran.

87
00:03:36,290 --> 00:03:38,080
So are you ready?

88
00:03:38,080 --> 00:03:40,030
Speed test underway.

89
00:03:40,030 --> 00:03:44,260
Let's just scroll over a little bit so you can see What are we on?

90
00:03:44,260 --> 00:03:44,950
Aging?

91
00:03:44,950 --> 00:03:46,240
Experts think I remember.

92
00:03:46,240 --> 00:03:47,870
Were working at years from retirement.

93
00:03:47,870 --> 00:03:48,280
That was it,

94
00:03:48,280 --> 00:03:48,710
wasn't it?

95
00:03:48,710 --> 00:03:49,790
Uh,

96
00:03:49,790 --> 00:03:50,830
Okay,

97
00:03:50,830 --> 00:03:51,580
Andi,

98
00:03:51,580 --> 00:03:51,920
go.

99
00:03:51,920 --> 00:03:52,600
Okay.

100
00:03:52,600 --> 00:03:53,310
There you go.

101
00:03:53,310 --> 00:03:54,240
We can stop.

102
00:03:54,240 --> 00:04:00,950
So we just wrote 101,000 calculations and you can see up here.

103
00:04:00,950 --> 00:04:04,000
We're looking at 65 miles streets and wailing on the bottom.

104
00:04:04,000 --> 00:04:09,420
It's 65 minus 100,000 on one now.

105
00:04:09,420 --> 00:04:14,180
There was no trickery used in this in this demonstration whatsoever,

106
00:04:14,180 --> 00:04:16,300
but just looking at the numbers,

107
00:04:16,300 --> 00:04:17,230
we don't even t.

108
00:04:17,230 --> 00:04:20,000
We don't even need to do maths on this.

109
00:04:20,000 --> 00:04:28,190
We can see that we started that code were basically essentially looking at these these last

110
00:04:28,190 --> 00:04:29,530
three decimals after it.

111
00:04:29,530 --> 00:04:31,020
So we started the code at 11.

112
00:04:31,020 --> 00:04:34,750
48 45 and we finish the code at 11.

113
00:04:34,750 --> 00:04:36,450
48 45.

114
00:04:36,450 --> 00:04:42,060
So we could not even measure how fast that Waas using merely seconds.

115
00:04:42,060 --> 00:04:47,480
And that's on 101,000 lines of data.

116
00:04:47,480 --> 00:04:50,440
So it may well be faster to use the formula.

117
00:04:50,440 --> 00:04:52,080
I want to see one format.

118
00:04:52,080 --> 00:04:53,200
But generally,

119
00:04:53,200 --> 00:04:55,240
if you're happy with something that's that fast,

120
00:04:55,240 --> 00:04:56,000
you can't measure it.

121
00:04:56,000 --> 00:04:57,100
Milliseconds.

122
00:04:57,100 --> 00:05:02,140
I would suggest you stick to the dock formula on right in a formula format that you can

123
00:05:02,140 --> 00:05:03,230
actually understand.

124
00:05:03,230 --> 00:05:04,050
Okay.

125
00:05:04,050 --> 00:05:07,780
I'll see you in the next lecture when we're gonna have a look at port in some of those

126
00:05:07,780 --> 00:05:13,870
really powerful excel built in functions and using them in our visual basic for

127
00:05:13,870 --> 00:05:14,910
applications.

128
00:05:14,910 --> 00:05:15,660
Okay,

129
00:05:15,660 --> 00:05:17,080
I'll see you in the next lecture.

