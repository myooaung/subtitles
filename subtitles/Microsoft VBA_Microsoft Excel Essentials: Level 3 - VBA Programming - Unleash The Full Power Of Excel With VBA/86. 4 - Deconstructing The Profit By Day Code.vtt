WEBVTT
ï»¿1
00:00:00.000 --> 00:00:02.320
Okay,

2
00:00:02.320 --> 00:00:02.770
guys,

3
00:00:02.770 --> 00:00:02.890
um,

4
00:00:02.890 --> 00:00:03.840
welcome back.

5
00:00:03.840 --> 00:00:08.520
Never gonna have a look at deconstructing this profit by day subroutine.

6
00:00:08.520 --> 00:00:08.940
Now,

7
00:00:08.940 --> 00:00:10.480
the code is notice and compact,

8
00:00:10.480 --> 00:00:11.580
which is encouraging,

9
00:00:11.580 --> 00:00:14.790
but we still have distinct elements in there.

10
00:00:14.790 --> 00:00:17.780
If I look here with selected range A six,

11
00:00:17.780 --> 00:00:19.650
we went to the bottom of that range,

12
00:00:19.650 --> 00:00:25.080
hell controlling of two g six and then selected the range down from there.

13
00:00:25.080 --> 00:00:31.840
So this block of code is all to do with capturing or selecting the range of data that we

14
00:00:31.840 --> 00:00:33.750
want to produce our chart from.

15
00:00:33.750 --> 00:00:40.770
So if I moved in to hear the active chart dot parent duck cut is where we cut the charts.

16
00:00:40.770 --> 00:00:42.210
I'm just going to hit a new line.

17
00:00:42.210 --> 00:00:47.170
So the code in the middle is all to do with creating the chart.

18
00:00:47.170 --> 00:00:52.350
Now we had cut sheet one select Do we can change that in a bit.

19
00:00:52.350 --> 00:00:57.630
Change this because we've no dynamically captured the name of our new sheet.

20
00:00:57.630 --> 00:00:57.980
There,

21
00:00:57.980 --> 00:01:00.640
select a five and paste.

22
00:01:00.640 --> 00:01:04.090
So there we have our four distinct areas data capture,

23
00:01:04.090 --> 00:01:05.520
chart creation,

24
00:01:05.520 --> 00:01:09.930
cutting on copying and pasting it into the right cheats on this bit.

25
00:01:09.930 --> 00:01:11.750
Here is where we scaled it.

26
00:01:11.750 --> 00:01:12.490
Okay.

27
00:01:12.490 --> 00:01:14.580
Now What we're gonna do is firstly,

28
00:01:14.580 --> 00:01:19.360
we're gonna build in some more variables and then we're gonna build a string which is very

29
00:01:19.360 --> 00:01:24.450
similar to can Cassin eight in an Excel to replicate this string.

30
00:01:24.450 --> 00:01:25.490
Exactly.

31
00:01:25.490 --> 00:01:29.500
But what we needed to do is be completely dynamic.

32
00:01:29.500 --> 00:01:31.350
So if we have a look at this,

33
00:01:31.350 --> 00:01:33.620
we have this sheet name just here,

34
00:01:33.620 --> 00:01:36.450
so we're gonna need to capture the sheet name.

35
00:01:36.450 --> 00:01:43.660
We also have this range a six to a 466 which works perfectly well on this particular data

36
00:01:43.660 --> 00:01:44.050
set,

37
00:01:44.050 --> 00:01:47.920
but may not be exactly the same on the subsequent data sets.

38
00:01:47.920 --> 00:01:51.770
Perhaps they don't go down Tow line 466 again.

39
00:01:51.770 --> 00:01:53.430
We have the sheet name on there.

40
00:01:53.430 --> 00:01:56.260
We have this G 60 g 466 and again,

41
00:01:56.260 --> 00:01:59.660
it may not be down to 466 So in the next lecture,

42
00:01:59.660 --> 00:02:04.680
we're just gonna have a quick look at building a concatenation string to replicate that.

43
00:02:04.680 --> 00:02:05.390
Precisely.

44
00:02:05.390 --> 00:02:05.960
Okay,

45
00:02:05.960 --> 00:02:07.370
I'll see you in the next lecture.

