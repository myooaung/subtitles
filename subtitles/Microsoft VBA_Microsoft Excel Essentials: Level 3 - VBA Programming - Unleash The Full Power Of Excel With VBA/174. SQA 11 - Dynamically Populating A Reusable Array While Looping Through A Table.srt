1
00:00:00,000 --> 00:00:02,210
Okay,

2
00:00:02,210 --> 00:00:02,580
guys.

3
00:00:02,580 --> 00:00:04,770
And welcome back to another student.

4
00:00:04,770 --> 00:00:08,200
Questions answered these questions from Katrina.

5
00:00:08,200 --> 00:00:15,220
Katrina has I would imagine a huge data table that sorted something like this simple data

6
00:00:15,220 --> 00:00:20,250
table that you can see here that you can download this file complete with all the code from

7
00:00:20,250 --> 00:00:21,650
this particular lecture.

8
00:00:21,650 --> 00:00:22,080
Now,

9
00:00:22,080 --> 00:00:27,950
the challenge here is that Katrina has written some code that she wants toe act on day sad

10
00:00:27,950 --> 00:00:29,740
that's being read into an array.

11
00:00:29,740 --> 00:00:34,620
So the element of the all the flavor of the question is with a data set that looks like

12
00:00:34,620 --> 00:00:41,550
this read Group One into the array and then go into the other clever stuff with it and then

13
00:00:41,550 --> 00:00:47,380
loop down and read Group Two into the same array over right in the original data,

14
00:00:47,380 --> 00:00:47,800
obviously.

15
00:00:47,800 --> 00:00:52,900
So we're going to reuse the array for this particular block of dates and this particular

16
00:00:52,900 --> 00:00:53,750
block of data,

17
00:00:53,750 --> 00:00:58,190
this particular block of days of this particular block of data and so on and so forth.

18
00:00:58,190 --> 00:01:00,620
Now we know we can simply loading array,

19
00:01:00,620 --> 00:01:02,800
using a medico just like this.

20
00:01:02,800 --> 00:01:05,780
My tester equals range 82 c three.

21
00:01:05,780 --> 00:01:11,050
And if I had a watch to that on just step through that code we see bum bum bump.

22
00:01:11,050 --> 00:01:12,690
And when we have a look down here,

23
00:01:12,690 --> 00:01:18,430
we have two elements from a to two C three And when we expand because see that we have one

24
00:01:18,430 --> 00:01:23,920
absolutely absolute to one absolutely absolute to absolute see absolute to In our first

25
00:01:23,920 --> 00:01:24,450
element,

26
00:01:24,450 --> 00:01:26,360
the 2nd 2nd elements,

27
00:01:26,360 --> 00:01:27,880
we have the next line down.

28
00:01:27,880 --> 00:01:31,070
So the trick is we want to be able to do that,

29
00:01:31,070 --> 00:01:35,230
but build this string dynamically at runtime.

30
00:01:35,230 --> 00:01:40,390
So what I'm gonna do is delete that watch on was up to here,

31
00:01:40,390 --> 00:01:42,710
and here's from Kodo prepared earlier.

32
00:01:42,710 --> 00:01:48,150
Now it's basically sin option based one survivor array will always begin a tele mint,

33
00:01:48,150 --> 00:01:49,940
one rather elements hero.

34
00:01:49,940 --> 00:01:51,880
And we have to variables.

35
00:01:51,880 --> 00:01:52,980
We have my camped,

36
00:01:52,980 --> 00:01:59,280
which we're gonna load the count of this particular cell value from column A using the

37
00:01:59,280 --> 00:02:04,430
application worksheet function count if a my array which we're just gonna declares a very

38
00:02:04,430 --> 00:02:07,850
and because we actually don't know what kind of data we're going to be holding.

39
00:02:07,850 --> 00:02:09,970
So there are two variables.

40
00:02:09,970 --> 00:02:13,170
First line of code pick the first cell.

41
00:02:13,170 --> 00:02:17,010
So a two and that's that in here we have our loop,

42
00:02:17,010 --> 00:02:21,850
so Let me just let me just add a watch to this so we can see what it does.

43
00:02:21,850 --> 00:02:22,820
Okay,

44
00:02:22,820 --> 00:02:23,150
Right.

45
00:02:23,150 --> 00:02:23,860
So here we go.

46
00:02:23,860 --> 00:02:24,710
Let's step through.

47
00:02:24,710 --> 00:02:30,370
So range A to select do While the act itself doesn't equal blank.

48
00:02:30,370 --> 00:02:32,330
We've used that many times throughout the course.

49
00:02:32,330 --> 00:02:33,060
So basically,

50
00:02:33,060 --> 00:02:35,070
it's right through the whole of this dates table.

51
00:02:35,070 --> 00:02:38,150
However long it is until we get to the first blank on,

52
00:02:38,150 --> 00:02:39,000
then stop.

53
00:02:39,000 --> 00:02:42,240
So this is the code that we want it to look like.

54
00:02:42,240 --> 00:02:48,380
So my array equals range A to C three dot about you that will read the hall of that data

55
00:02:48,380 --> 00:02:50,750
block the whole of that range into our array.

56
00:02:50,750 --> 00:02:51,300
Now,

57
00:02:51,300 --> 00:02:58,010
what we're gonna do now is get the count of how many times the active cell value one

58
00:02:58,010 --> 00:03:00,590
appears in Column A.

59
00:03:00,590 --> 00:03:03,280
So we're going to use the application work sheep function.

60
00:03:03,280 --> 00:03:04,320
When I step through,

61
00:03:04,320 --> 00:03:08,970
we can see that it appears twice now the data assorted perfectly.

62
00:03:08,970 --> 00:03:10,340
So that's perfectly fine.

63
00:03:10,340 --> 00:03:11,480
And that will work here.

64
00:03:11,480 --> 00:03:12,290
Next.

65
00:03:12,290 --> 00:03:15,060
We're going to build this string dynamically.

66
00:03:15,060 --> 00:03:17,700
So we're going to say range the active cell address,

67
00:03:17,700 --> 00:03:19,950
which is absolutely absolute too.

68
00:03:19,950 --> 00:03:20,570
Andi.

69
00:03:20,570 --> 00:03:23,710
So we can Katyn eight in the separator colon.

70
00:03:23,710 --> 00:03:24,640
See?

71
00:03:24,640 --> 00:03:31,320
So absolute absolute to to see Andi the active cell dot ro.

72
00:03:31,320 --> 00:03:34,720
So we're on row two plus my count,

73
00:03:34,720 --> 00:03:35,580
which is two.

74
00:03:35,580 --> 00:03:38,780
And then we're gonna subtract one to get us back to three.

75
00:03:38,780 --> 00:03:42,650
So we're going to go a to two C three,

76
00:03:42,650 --> 00:03:44,910
and then we're gonna read all that into my array.

77
00:03:44,910 --> 00:03:45,990
And when I hit her fate,

78
00:03:45,990 --> 00:03:47,930
I can have a look there,

79
00:03:47,930 --> 00:03:54,160
and you can see that that's pulled this road on this road into our rate on this bit.

80
00:03:54,160 --> 00:03:54,510
Here,

81
00:03:54,510 --> 00:03:56,290
the ad Your own clever code here.

82
00:03:56,290 --> 00:04:00,670
That's where Katrina is going to use this array to do some other clever things with,

83
00:04:00,670 --> 00:04:03,460
and then we're going to move down to the next group by using.

84
00:04:03,460 --> 00:04:04,490
The active cells are tough.

85
00:04:04,490 --> 00:04:06,070
Set my counts.

86
00:04:06,070 --> 00:04:06,550
Remember,

87
00:04:06,550 --> 00:04:08,350
we've already captured my count here.

88
00:04:08,350 --> 00:04:13,510
So any hits F eight were instantly gonna jump down to the next group and we're gonna go

89
00:04:13,510 --> 00:04:14,760
through our loop again.

90
00:04:14,760 --> 00:04:20,140
How many times just to appear in column a while this summit appears three times.

91
00:04:20,140 --> 00:04:29,870
So now we want to load into my IRA range a four to C four plus three minus one and Now we

92
00:04:29,870 --> 00:04:32,540
can see that all three have bean loaded.

93
00:04:32,540 --> 00:04:35,020
So this only captured this line of data.

94
00:04:35,020 --> 00:04:37,590
This line of data on this line of data again,

95
00:04:37,590 --> 00:04:38,680
we're going to use the my count,

96
00:04:38,680 --> 00:04:40,390
offset once more F eight.

97
00:04:40,390 --> 00:04:42,120
And then we're down to block three.

98
00:04:42,120 --> 00:04:43,260
So when we stepped through,

99
00:04:43,260 --> 00:04:44,700
my can't equals one.

100
00:04:44,700 --> 00:04:52,940
So this time it will be from a seven to see seven plus one minus one.

101
00:04:52,940 --> 00:04:53,800
At this time,

102
00:04:53,800 --> 00:04:54,270
I can't.

103
00:04:54,270 --> 00:04:55,190
Eagle three.

104
00:04:55,190 --> 00:04:59,370
And there We have one to on day three.

105
00:04:59,370 --> 00:05:00,100
Okay.

106
00:05:00,100 --> 00:05:01,710
And then when we get down to the bottom,

107
00:05:01,710 --> 00:05:03,110
obviously that's going to end.

108
00:05:03,110 --> 00:05:04,040
Okay,

109
00:05:04,040 --> 00:05:04,730
so that's hey,

110
00:05:04,730 --> 00:05:11,270
can use a simple loop to read blocks of data providing these organized in this way by using

111
00:05:11,270 --> 00:05:16,800
the application worksheet function count if toe work out how big that range is.

112
00:05:16,800 --> 00:05:17,190
Okay,

113
00:05:17,190 --> 00:05:18,150
Hopefully that helped.

114
00:05:18,150 --> 00:05:18,940
And as always,

115
00:05:18,940 --> 00:05:19,960
if you have any questions,

116
00:05:19,960 --> 00:05:21,880
do let me know and I'll be happy to help you.

117
00:05:21,880 --> 00:05:22,850
Have a great day

