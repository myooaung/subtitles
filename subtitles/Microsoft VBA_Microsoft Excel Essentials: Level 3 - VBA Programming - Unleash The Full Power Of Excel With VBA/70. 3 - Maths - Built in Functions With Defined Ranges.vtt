WEBVTT
ï»¿1
00:00:00.000 --> 00:00:02.420
Okay,

2
00:00:02.420 --> 00:00:02.860
guys.

3
00:00:02.860 --> 00:00:07.110
And welcome back there just to wrap up the math section and particularly the part on using

4
00:00:07.110 --> 00:00:08.590
the worksheet functions.

5
00:00:08.590 --> 00:00:11.420
If you have a V look up now,

6
00:00:11.420 --> 00:00:12.900
I'm going to do what we did in the last one.

7
00:00:12.900 --> 00:00:14.360
I'm just gonna hit space on school.

8
00:00:14.360 --> 00:00:15.530
Oops.

9
00:00:15.530 --> 00:00:15.860
OK,

10
00:00:15.860 --> 00:00:16.790
reset my project.

11
00:00:16.790 --> 00:00:17.400
I don't mind.

12
00:00:17.400 --> 00:00:20.180
Make that so we can actually see all the mom window.

13
00:00:20.180 --> 00:00:20.850
Much better.

14
00:00:20.850 --> 00:00:21.480
Okay,

15
00:00:21.480 --> 00:00:22.150
Now,

16
00:00:22.150 --> 00:00:28.040
if you want to use excels built in the look up function But you want to use it with named

17
00:00:28.040 --> 00:00:28.870
range,

18
00:00:28.870 --> 00:00:31.260
you conduce it this way.

19
00:00:31.260 --> 00:00:31.530
Now,

20
00:00:31.530 --> 00:00:33.640
we could have a name range over here,

21
00:00:33.640 --> 00:00:41.530
but what we could do is set up a temporary named range in our code itself and that will be

22
00:00:41.530 --> 00:00:43.350
built when the code executes,

23
00:00:43.350 --> 00:00:44.970
which is called a runtime.

24
00:00:44.970 --> 00:00:47.360
So this is going to be completely dynamic.

25
00:00:47.360 --> 00:00:51.230
It will build the named range at wrong time.

26
00:00:51.230 --> 00:00:53.410
It will use it and then destroyed.

27
00:00:53.410 --> 00:00:58.700
So none of our memories being eaten up on the ridge two ways to do this.

28
00:00:58.700 --> 00:01:00.650
I find this is the simplest.

29
00:01:00.650 --> 00:01:06.510
We will just say my look up range that's going to be the name of our named range equals

30
00:01:06.510 --> 00:01:07.230
range.

31
00:01:07.230 --> 00:01:08.840
08 to peak.

32
00:01:08.840 --> 00:01:09.130
Sorry.

33
00:01:09.130 --> 00:01:10.590
04 to p four.

34
00:01:10.590 --> 00:01:12.550
Which is this area just here.

35
00:01:12.550 --> 00:01:13.450
Onda,

36
00:01:13.450 --> 00:01:16.230
we're going to do exactly the same thing we're going to read into attempt,

37
00:01:16.230 --> 00:01:21.960
but notice how much easier this is to read so we don't have that range and then the range

38
00:01:21.960 --> 00:01:23.820
specified there or we're gonna say,

39
00:01:23.820 --> 00:01:28.680
is rangy to have a look at what's in me to This is my range,

40
00:01:28.680 --> 00:01:34.490
which we have now read into this variable coming to Comer Falls on Return.

41
00:01:34.490 --> 00:01:35.060
The answer.

42
00:01:35.060 --> 00:01:36.710
So that's the first way of doing.

43
00:01:36.710 --> 00:01:39.360
I'm just gonna press f eight and they go,

44
00:01:39.360 --> 00:01:41.170
you can see that that's worked perfectly.

45
00:01:41.170 --> 00:01:50.500
The other way to do this is by dimension ing your my look up range the variable as a range

46
00:01:50.500 --> 00:01:50.500
.

47
00:01:50.500 --> 00:01:51.470
But to do that,

48
00:01:51.470 --> 00:01:56.230
you then must do set on your mile Look up,

49
00:01:56.230 --> 00:01:58.950
So I'm gonna show you how to do that.

50
00:01:58.950 --> 00:02:01.110
But I think it's more complicated than it needs to be.

51
00:02:01.110 --> 00:02:08.430
So what we would need to do is saying dim my look up range completely messing up the case

52
00:02:08.430 --> 00:02:08.880
in on this.

53
00:02:08.880 --> 00:02:09.750
So But don't worry,

54
00:02:09.750 --> 00:02:09.970
man,

55
00:02:09.970 --> 00:02:13.750
It didn't my look of range as groups as range.

56
00:02:13.750 --> 00:02:15.270
And that tells Excel.

57
00:02:15.270 --> 00:02:16.770
We are dealing with a range.

58
00:02:16.770 --> 00:02:21.580
And then here we would write set and we would say,

59
00:02:21.580 --> 00:02:28.260
Set my look up range equals that no still work But I think it's just too many steps.

60
00:02:28.260 --> 00:02:30.220
There are other uses for set.

61
00:02:30.220 --> 00:02:33.430
I must admit I use them so infrequently.

62
00:02:33.430 --> 00:02:35.240
I can't remember in the last time,

63
00:02:35.240 --> 00:02:37.500
Waas But that's the other way of doing it.

64
00:02:37.500 --> 00:02:38.900
My personal preference.

65
00:02:38.900 --> 00:02:40.630
Avoid the sense.

66
00:02:40.630 --> 00:02:44.890
Avoid dimension in as a range and just stick to this.

67
00:02:44.890 --> 00:02:46.670
My look of range equals.

68
00:02:46.670 --> 00:02:49.180
Tell you what the range is that you're looking at on.

69
00:02:49.180 --> 00:02:49.350
Ben.

70
00:02:49.350 --> 00:02:54.750
You're good to go when you can just call him by that name in any of your V lookups on.

71
00:02:54.750 --> 00:02:55.270
Obviously,

72
00:02:55.270 --> 00:02:56.890
we've been reading these two temp,

73
00:02:56.890 --> 00:02:58.780
but if we wanted to write them to a cell,

74
00:02:58.780 --> 00:03:00.110
we could So for argument's sake,

75
00:03:00.110 --> 00:03:01.070
place to speak yourself.

76
00:03:01.070 --> 00:03:02.600
L six.

77
00:03:02.600 --> 00:03:11.520
So what we could say here if we want to think Rose Range l six And then when we executed

78
00:03:11.520 --> 00:03:12.260
that code bump,

79
00:03:12.260 --> 00:03:12.440
bump,

80
00:03:12.440 --> 00:03:12.640
bump,

81
00:03:12.640 --> 00:03:12.780
bump,

82
00:03:12.780 --> 00:03:13.150
bump,

83
00:03:13.150 --> 00:03:15.480
they get 15 in l six.

84
00:03:15.480 --> 00:03:16.270
Okay,

85
00:03:16.270 --> 00:03:21.500
that concludes everything you need to know about doing mathematical operations in code.

86
00:03:21.500 --> 00:03:23.250
I'll see you in the next lecture

