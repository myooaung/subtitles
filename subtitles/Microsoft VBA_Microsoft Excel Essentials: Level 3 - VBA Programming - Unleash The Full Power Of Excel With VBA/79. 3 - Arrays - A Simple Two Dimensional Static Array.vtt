WEBVTT
ï»¿1
00:00:00.000 --> 00:00:02.680
Okay,

2
00:00:02.680 --> 00:00:03.040
guys.

3
00:00:03.040 --> 00:00:03.990
And welcome back.

4
00:00:03.990 --> 00:00:04.850
And in this letch,

5
00:00:04.850 --> 00:00:09.120
we're gonna have a look at a two dimensional static array.

6
00:00:09.120 --> 00:00:12.550
Now you'll remember that a static array has a couple of limitations,

7
00:00:12.550 --> 00:00:16.620
one that the dimensions of it are hard coded.

8
00:00:16.620 --> 00:00:17.260
That is,

9
00:00:17.260 --> 00:00:18.460
we cannot change them.

10
00:00:18.460 --> 00:00:19.240
Run time.

11
00:00:19.240 --> 00:00:22.210
However big we set it up is how big it is.

12
00:00:22.210 --> 00:00:22.580
Andi.

13
00:00:22.580 --> 00:00:28.250
It's permanent on The other drawback is that it is not destroyed when the code ends.

14
00:00:28.250 --> 00:00:32.110
Even if you add on erase array statement,

15
00:00:32.110 --> 00:00:35.150
it still gobbles up your computer's memory.

16
00:00:35.150 --> 00:00:36.300
But just for completeness,

17
00:00:36.300 --> 00:00:37.290
we're going to do it here.

18
00:00:37.290 --> 00:00:44.920
So what we have is a statement here that says Dim Mireille seven by two.

19
00:00:44.920 --> 00:00:46.690
So seven comma two.

20
00:00:46.690 --> 00:00:50.360
And what that means is that we have seven draws,

21
00:00:50.360 --> 00:00:52.310
each with two elements.

22
00:00:52.310 --> 00:00:53.930
So in our first drawer,

23
00:00:53.930 --> 00:00:55.440
that is number one of seven.

24
00:00:55.440 --> 00:00:59.230
We will have 12 boxes of data,

25
00:00:59.230 --> 00:01:00.350
and that's the two here.

26
00:01:00.350 --> 00:01:02.070
In a second drawer,

27
00:01:02.070 --> 00:01:04.640
we will have one two bits of data,

28
00:01:04.640 --> 00:01:09.030
so that would be 22 and then in our third drawer,

29
00:01:09.030 --> 00:01:11.340
we'll have two bits of data in our fourth row.

30
00:01:11.340 --> 00:01:17.880
So the lines or the rose here are the first part of the declaration.

31
00:01:17.880 --> 00:01:22.590
The seven on the two is because we have two columns of data.

32
00:01:22.590 --> 00:01:23.510
Obviously,

33
00:01:23.510 --> 00:01:26.540
we could have as many columns of dangerous who wanted to,

34
00:01:26.540 --> 00:01:27.780
because this is excel.

35
00:01:27.780 --> 00:01:32.510
And then excel Sheet is essentially a two dimensional array.

36
00:01:32.510 --> 00:01:34.640
So no matter Hamli draws,

37
00:01:34.640 --> 00:01:39.740
you have Which is the Rose down here or how many boxes within those draws?

38
00:01:39.740 --> 00:01:42.290
It's still a two dimensional array.

39
00:01:42.290 --> 00:01:42.910
Okay,

40
00:01:42.910 --> 00:01:44.480
so let's take a look at this in action.

41
00:01:44.480 --> 00:01:50.750
I'm just gonna I think I got some typos in here that wouldn't work.

42
00:01:50.750 --> 00:01:51.940
That will work now.

43
00:01:51.940 --> 00:01:52.350
Okay,

44
00:01:52.350 --> 00:01:53.710
So what we're going to need to do,

45
00:01:53.710 --> 00:01:56.480
is is because we have two dimensions.

46
00:01:56.480 --> 00:01:59.440
We're gonna have toe have a loop within a loop,

47
00:01:59.440 --> 00:02:06.000
the outer loop to increment this number on the inner loop to increment this number.

48
00:02:06.000 --> 00:02:09.820
So I'm just going to step straight the way through to the code here,

49
00:02:09.820 --> 00:02:10.680
to the loop,

50
00:02:10.680 --> 00:02:12.620
every room where we write the data.

51
00:02:12.620 --> 00:02:13.840
So I'm just gonna hit d bogan,

52
00:02:13.840 --> 00:02:15.690
run to cursor now,

53
00:02:15.690 --> 00:02:18.830
added a watch in here so we can see what's happening.

54
00:02:18.830 --> 00:02:23.210
And you can see that there's another plus now by my r a C one.

55
00:02:23.210 --> 00:02:24.330
And when I hit that,

56
00:02:24.330 --> 00:02:30.970
you can see that we have C +11 is empty and see +12 is empty.

57
00:02:30.970 --> 00:02:38.200
Now the 1st 1 is going to be the row number on the 2nd 1 On the second to are going to be

58
00:02:38.200 --> 00:02:38.820
this book.

59
00:02:38.820 --> 00:02:39.950
It's on this book.

60
00:02:39.950 --> 00:02:41.650
It all these boxes.

61
00:02:41.650 --> 00:02:43.500
So notice what happens here.

62
00:02:43.500 --> 00:02:49.980
My OTA loop equals 1 to 7 because we have 1234567 lines in here.

63
00:02:49.980 --> 00:02:57.200
So our outer loop we're gonna hit F eight on the outer loop now becomes a value off one.

64
00:02:57.200 --> 00:03:04.280
Now in a loop is gonna loot from 1 to 2 because we have 12 columns of data I can click over

65
00:03:04.280 --> 00:03:06.610
here in Excel because we use in cells,

66
00:03:06.610 --> 00:03:08.600
which means it doesn't matter where the cursory is.

67
00:03:08.600 --> 00:03:09.310
In excel,

68
00:03:09.310 --> 00:03:11.190
the cells reference to sell.

69
00:03:11.190 --> 00:03:17.170
Absolutely so on the first pass through the outer loop is going to be worth one on the

70
00:03:17.170 --> 00:03:19.100
inner loop is going to be worth one.

71
00:03:19.100 --> 00:03:20.650
So here we go.

72
00:03:20.650 --> 00:03:22.220
My absolute peace.

73
00:03:22.220 --> 00:03:23.930
1 may in a loop is one.

74
00:03:23.930 --> 00:03:31.360
So my array one one is gonna equals sells 11 dot value.

75
00:03:31.360 --> 00:03:35.000
So it's gonna be looking here and notice what happens down here.

76
00:03:35.000 --> 00:03:37.790
F eight read as being read.

77
00:03:37.790 --> 00:03:38.170
And now,

78
00:03:38.170 --> 00:03:40.630
because we're still on the inner loop,

79
00:03:40.630 --> 00:03:44.930
I'm just gonna hit F eight on the inner loop is now worth two.

80
00:03:44.930 --> 00:03:52.300
So when they're looking at Row one column to Ana Array is in the outer loop one.

81
00:03:52.300 --> 00:03:54.050
So we're still on the first roll,

82
00:03:54.050 --> 00:03:59.270
but the inner loop is no to So it's gonna be looking at this box and then repress f eight

83
00:03:59.270 --> 00:04:00.450
and notice what happens here.

84
00:04:00.450 --> 00:04:03.090
We've no successfully read a.

85
00:04:03.090 --> 00:04:05.930
Now we're going to go to our outer loop again.

86
00:04:05.930 --> 00:04:07.250
So we're going to come up here.

87
00:04:07.250 --> 00:04:09.690
A little loop is now worth two.

88
00:04:09.690 --> 00:04:11.850
So in no loading into here,

89
00:04:11.850 --> 00:04:13.590
I'm just going to step through.

90
00:04:13.590 --> 00:04:14.970
On they go.

91
00:04:14.970 --> 00:04:16.510
I can just keep clicking these.

92
00:04:16.510 --> 00:04:16.840
In fact,

93
00:04:16.840 --> 00:04:19.350
let's open all of these and you can see them as they go.

94
00:04:19.350 --> 00:04:23.180
So there we go on now,

95
00:04:23.180 --> 00:04:24.250
as we looked through,

96
00:04:24.250 --> 00:04:30.860
you can see that we're reading Column a here column B here column a here column B here,

97
00:04:30.860 --> 00:04:31.860
step over,

98
00:04:31.860 --> 00:04:33.570
May through I'm happy That's gonna work.

99
00:04:33.570 --> 00:04:35.150
So I'm just gonna hit the book on drums.

100
00:04:35.150 --> 00:04:38.500
Cursor on there we have all of our data loaded,

101
00:04:38.500 --> 00:04:45.200
so we have our first I mentioned 11 2131 is reading column A.

102
00:04:45.200 --> 00:04:51.100
On the second dimension is reading a be see on.

103
00:04:51.100 --> 00:04:54.240
Then we just reverse that process to write it back here.

104
00:04:54.240 --> 00:04:58.730
So again we have a now toe loop that's going to reiterate from one through seven and in a

105
00:04:58.730 --> 00:05:02.740
loop that's going to rates from 1 to 2 and just write that data over here.

106
00:05:02.740 --> 00:05:06.660
So I'm just going to step through and you can see that that's right in beautifully.

107
00:05:06.660 --> 00:05:11.280
There's no point in adding on a raise a ray statement at the end of this,

108
00:05:11.280 --> 00:05:13.970
because it's static until you close excel.

109
00:05:13.970 --> 00:05:16.620
It is going to continue to be held in memory.

110
00:05:16.620 --> 00:05:19.120
So I'm just going to run that out and they go.

111
00:05:19.120 --> 00:05:24.000
That's how you read on right on Baltic Dimensional Array again.

112
00:05:24.000 --> 00:05:24.640
The next lecture,

113
00:05:24.640 --> 00:05:26.960
we're gonna have a look at how we make that dynamic,

114
00:05:26.960 --> 00:05:28.650
and it's a lot simpler than you may think.

115
00:05:28.650 --> 00:05:29.200
Okay,

116
00:05:29.200 --> 00:05:30.550
I'll see you in the next lecture

