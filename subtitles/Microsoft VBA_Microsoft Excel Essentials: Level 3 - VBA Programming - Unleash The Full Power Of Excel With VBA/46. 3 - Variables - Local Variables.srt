1
00:00:00,000 --> 00:00:02,450
Okay,

2
00:00:02,450 --> 00:00:02,950
guys.

3
00:00:02,950 --> 00:00:08,880
And welcome to the learning how to program properly section off this course now.

4
00:00:08,880 --> 00:00:11,420
Recording macros is going to get you so far,

5
00:00:11,420 --> 00:00:12,740
but it's really useful.

6
00:00:12,740 --> 00:00:18,240
If you have a bunch of programming techniques in your toolbox that will allow you to be

7
00:00:18,240 --> 00:00:21,110
able to program anything that you can think of them.

8
00:00:21,110 --> 00:00:23,470
We're going to cover all of those in this section.

9
00:00:23,470 --> 00:00:24,480
Okay,

10
00:00:24,480 --> 00:00:24,680
Now,

11
00:00:24,680 --> 00:00:26,840
this is gonna be a downloadable resource.

12
00:00:26,840 --> 00:00:31,700
It's in a file called variables dot XLs X now,

13
00:00:31,700 --> 00:00:34,860
because I can't upload files with Mac Rose in them.

14
00:00:34,860 --> 00:00:39,060
What I'm gonna do is add a tab to this sheet with all the code that we're about to go

15
00:00:39,060 --> 00:00:39,510
through,

16
00:00:39,510 --> 00:00:41,960
just create modules in the V B A,

17
00:00:41,960 --> 00:00:44,800
which we've done before on pace all the code in there.

18
00:00:44,800 --> 00:00:48,460
And then you'll be able to see it working exactly as you are in these lectures.

19
00:00:48,460 --> 00:00:49,280
Okay,

20
00:00:49,280 --> 00:00:51,250
so one is a variable.

21
00:00:51,250 --> 00:00:51,630
Well,

22
00:00:51,630 --> 00:00:58,840
you can think of a variable as a box that contains a certain value or certain values,

23
00:00:58,840 --> 00:01:03,270
but there is a lot of technical detail behind variables on.

24
00:01:03,270 --> 00:01:03,720
Hopefully,

25
00:01:03,720 --> 00:01:04,990
we're gonna have a look at that now,

26
00:01:04,990 --> 00:01:07,390
and it's all gonna be very simple to you.

27
00:01:07,390 --> 00:01:12,010
Don't worry if you're not fully grasping it as you work through the first few lectures

28
00:01:12,010 --> 00:01:13,690
because they'll be a summary electorate.

29
00:01:13,690 --> 00:01:14,400
The end of them.

30
00:01:14,400 --> 00:01:15,090
Okay,

31
00:01:15,090 --> 00:01:16,090
variables.

32
00:01:16,090 --> 00:01:19,860
Here's our first bit of code and we can see this is demo number one,

33
00:01:19,860 --> 00:01:22,470
a simple local variable.

34
00:01:22,470 --> 00:01:23,390
Now,

35
00:01:23,390 --> 00:01:23,810
look,

36
00:01:23,810 --> 00:01:26,260
this is a local week declared variable.

37
00:01:26,260 --> 00:01:31,250
Locally declared variables are declared inside a sub,

38
00:01:31,250 --> 00:01:32,840
and you can see here,

39
00:01:32,840 --> 00:01:35,370
this is our variable declaration.

40
00:01:35,370 --> 00:01:39,110
So it sits between sub and n sub.

41
00:01:39,110 --> 00:01:42,150
So that means it is locally declared.

42
00:01:42,150 --> 00:01:49,640
It is declared using the dim statement which you can see just here and dim is short for

43
00:01:49,640 --> 00:01:50,740
dimension.

44
00:01:50,740 --> 00:01:52,890
So dim is dimension,

45
00:01:52,890 --> 00:01:56,070
and it's just one of the declaration statements that we can use.

46
00:01:56,070 --> 00:01:59,950
There are all this will come to them scope near the scope.

47
00:01:59,950 --> 00:02:06,820
This is only available in the subroutine in which it is declared so as it is declared in

48
00:02:06,820 --> 00:02:08,090
sub one.

49
00:02:08,090 --> 00:02:08,920
Here,

50
00:02:08,920 --> 00:02:11,750
we can only use it in sub one here.

51
00:02:11,750 --> 00:02:15,220
Now you'll notice here we have a call to sub,

52
00:02:15,220 --> 00:02:20,810
to which we've also done before on we're going to attempt to use this variable down here

53
00:02:20,810 --> 00:02:21,220
too.

54
00:02:21,220 --> 00:02:21,870
Okay,

55
00:02:21,870 --> 00:02:26,930
so the scope is is only available in the sub in which it is declared,

56
00:02:26,930 --> 00:02:31,410
and the other key characteristic of a variable is its lifetime palace.

57
00:02:31,410 --> 00:02:34,490
How long does it stay in your computer's memory?

58
00:02:34,490 --> 00:02:34,980
Well,

59
00:02:34,980 --> 00:02:36,350
this particular type,

60
00:02:36,350 --> 00:02:37,860
a locally declared sub,

61
00:02:37,860 --> 00:02:40,150
is destroyed at N sub.

62
00:02:40,150 --> 00:02:40,740
Now,

63
00:02:40,740 --> 00:02:45,380
one of the things that you may want to use that's included in the visual basic and it's on

64
00:02:45,380 --> 00:02:49,440
a really powerful tool is called the Watches Window.

65
00:02:49,440 --> 00:02:56,250
Now we're going to do just click on the name of your variable right click and come down to

66
00:02:56,250 --> 00:02:59,160
here and choose and watch.

67
00:02:59,160 --> 00:03:01,310
Then this little window will pop up.

68
00:03:01,310 --> 00:03:04,750
Just click OK and notice what happens at the bottom of the screen.

69
00:03:04,750 --> 00:03:06,980
We get a new window on.

70
00:03:06,980 --> 00:03:12,850
This is called the Watches window and you can see str My string is listed there.

71
00:03:12,850 --> 00:03:15,200
It is currently out of context.

72
00:03:15,200 --> 00:03:17,020
Don't worry too much about that at the moment.

73
00:03:17,020 --> 00:03:20,510
That just means we are not using it and there is nothing stored in it.

74
00:03:20,510 --> 00:03:22,350
Type is empty.

75
00:03:22,350 --> 00:03:25,550
On the context is the module in which it lives.

76
00:03:25,550 --> 00:03:30,290
This is the area you want to be watching the value.

77
00:03:30,290 --> 00:03:31,120
Okay,

78
00:03:31,120 --> 00:03:36,230
so let me just drag this back And here's a sheet I carefully prepared earlier.

79
00:03:36,230 --> 00:03:38,550
So then we go.

80
00:03:38,550 --> 00:03:39,490
Okay,

81
00:03:39,490 --> 00:03:42,160
let's execute this code and have a look at what it does.

82
00:03:42,160 --> 00:03:46,310
So I'm just going to click in here and hit F eight on step through the code.

83
00:03:46,310 --> 00:03:47,370
There you go.

84
00:03:47,370 --> 00:03:49,410
Are variable is no declared.

85
00:03:49,410 --> 00:03:53,080
And you can see that it has a value off double quotes.

86
00:03:53,080 --> 00:03:53,260
Now,

87
00:03:53,260 --> 00:03:56,550
that is because it is a string type variable,

88
00:03:56,550 --> 00:04:00,020
which means it is designed to hold text on.

89
00:04:00,020 --> 00:04:02,120
There's currently nothing in it.

90
00:04:02,120 --> 00:04:03,960
So good code in practice,

91
00:04:03,960 --> 00:04:06,980
I am going to sheet select by visual.

92
00:04:06,980 --> 00:04:08,040
Basic name.

93
00:04:08,040 --> 00:04:10,110
The sheet that I want to work in,

94
00:04:10,110 --> 00:04:11,490
which is this sheet here,

95
00:04:11,490 --> 00:04:17,150
which is called local level on its Phoebe code name is shit one local.

96
00:04:17,150 --> 00:04:19,030
Okay,

97
00:04:19,030 --> 00:04:19,860
so step in three.

98
00:04:19,860 --> 00:04:22,120
The right sheet has been selected.

99
00:04:22,120 --> 00:04:23,680
Range a one select.

100
00:04:23,680 --> 00:04:26,570
I am picking the range that I want to grab my data from.

101
00:04:26,570 --> 00:04:31,720
I'm going to clear the contents of column C because we,

102
00:04:31,720 --> 00:04:33,010
as we work through this code,

103
00:04:33,010 --> 00:04:34,180
is going to get populated.

104
00:04:34,180 --> 00:04:36,180
So before I execute the code,

105
00:04:36,180 --> 00:04:41,440
I want to make sure it's clear now what I'm gonna do here is read the value from the

106
00:04:41,440 --> 00:04:49,680
specified range A one into my variable str my strings so hovering over it or looking down

107
00:04:49,680 --> 00:04:50,250
here,

108
00:04:50,250 --> 00:04:56,000
you can see it's currently empty until I hit F eight and now you'll notice it has a value.

109
00:04:56,000 --> 00:04:59,280
This is my data which is just read from a one.

110
00:04:59,280 --> 00:05:00,140
So far,

111
00:05:00,140 --> 00:05:00,660
so good.

112
00:05:00,660 --> 00:05:02,150
Let's just screw all of Tibet,

113
00:05:02,150 --> 00:05:03,170
right?

114
00:05:03,170 --> 00:05:06,210
The value in the variable to specified range.

115
00:05:06,210 --> 00:05:09,230
So now I want to say range C $1 value,

116
00:05:09,230 --> 00:05:10,860
which is currently empty,

117
00:05:10,860 --> 00:05:13,240
will have a value off my string.

118
00:05:13,240 --> 00:05:15,890
So when I press f eight fantastic,

119
00:05:15,890 --> 00:05:16,330
bigger.

120
00:05:16,330 --> 00:05:23,450
This is my date with just successfully written str my string variables data into cell C one

121
00:05:23,450 --> 00:05:25,140
Now look what happens.

122
00:05:25,140 --> 00:05:27,910
I'm gonna call to sub two on.

123
00:05:27,910 --> 00:05:28,790
We've done this before.

124
00:05:28,790 --> 00:05:32,130
When we did the run in order a little earlier answer is gonna press f eight.

125
00:05:32,130 --> 00:05:35,200
We're going to jump strength down sub to,

126
00:05:35,200 --> 00:05:42,320
but I'm gonna hover over str my string here and you'll notice that it's completely empty.

127
00:05:42,320 --> 00:05:50,200
And that's because this str my string is a different variable to this one because it's

128
00:05:50,200 --> 00:05:50,770
local,

129
00:05:50,770 --> 00:05:53,150
It can only be used within that sub,

130
00:05:53,150 --> 00:05:56,150
so we'll carry on well hit f eight on,

131
00:05:56,150 --> 00:05:56,600
I'm know,

132
00:05:56,600 --> 00:05:58,760
going to attempt to write the value of that.

133
00:05:58,760 --> 00:06:00,870
To see three union See,

134
00:06:00,870 --> 00:06:03,060
from that's from sub to No,

135
00:06:03,060 --> 00:06:04,950
absolutely nothing happens.

136
00:06:04,950 --> 00:06:09,150
Because although this is still in the memory as it is a locally declared,

137
00:06:09,150 --> 00:06:12,940
we can actually use it in any other sub.

138
00:06:12,940 --> 00:06:13,370
Now,

139
00:06:13,370 --> 00:06:15,220
I'm just gonna press f eight.

140
00:06:15,220 --> 00:06:20,230
I'm gonna come toe end sub and notice what happens here now,

141
00:06:20,230 --> 00:06:21,350
out of context,

142
00:06:21,350 --> 00:06:28,050
because the lifetime of a locally declared variable is only good until you reach end sub or

143
00:06:28,050 --> 00:06:30,890
you finish it and council it with an end.

144
00:06:30,890 --> 00:06:34,280
Statement on 11 statements is literally just end.

145
00:06:34,280 --> 00:06:36,190
And that will cause your crew to end.

146
00:06:36,190 --> 00:06:37,160
OK,

147
00:06:37,160 --> 00:06:39,650
but there is an exception.

148
00:06:39,650 --> 00:06:42,650
And that's what we're gonna have a look at in the next lecture.

149
00:06:42,650 --> 00:06:43,230
Okay,

150
00:06:43,230 --> 00:06:43,660
I'll see you.

151
00:06:43,660 --> 00:06:43,950
That

