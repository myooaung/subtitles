WEBVTT
1
00:00:00.095 --> 00:00:05.085
So, the first thing we do, is add a ServletContextEvent.

2
00:00:05.085 --> 00:00:07.105
This is the application listener.

3
00:00:07.105 --> 00:00:10.387
We'll have a simple class that implements ServletContextListener and

4
00:00:10.387 --> 00:00:13.105
add some simple logging to see what is going on.

5
00:00:13.105 --> 00:00:17.135
We'll add an entry to the web.xml file to make this an event.

6
00:00:17.135 --> 00:00:22.055
To do that in the project, in the com.mantiso package,

7
00:00:22.055 --> 00:00:26.085
let's add an event package.

8
00:00:26.085 --> 00:00:31.085
Inside here, add a new Java class, we'll call this AppListener,

9
00:00:31.085 --> 00:00:38.065
and we'll have this class implement ServletContextListener.

10
00:00:38.065 --> 00:00:40.912
The first thing to notice here is that even though we're

11
00:00:40.912 --> 00:00:44.045
implementing the ServletContextListener interface,

12
00:00:44.045 --> 00:00:48.135
we do not have to implement any of the methods on that interface.

13
00:00:48.135 --> 00:00:51.065
If we look at the ServletContextListener,

14
00:00:51.065 --> 00:00:53.115
both those methods are marked as default.

15
00:00:53.115 --> 00:00:57.092
That means that in this case, we don't need to implement all the methods,

16
00:00:57.092 --> 00:01:00.709
or in fact any of them, just those that we care about,

17
00:01:00.709 --> 00:01:07.095
which means in this case just the contextInitialized method.

18
00:01:07.095 --> 00:01:13.135
We can copy the method over and make it public rather than default.

19
00:01:13.135 --> 00:01:17.105
This method gets called when the application is loaded.

20
00:01:17.105 --> 00:01:23.135
In here, we can log out when the context has been initialized.

21
00:01:23.135 --> 00:01:27.085
We do that by using the ServletContextEvent.

22
00:01:27.085 --> 00:01:30.693
This is a getServletContext method that returns the ServletContext,

23
00:01:30.693 --> 00:01:33.075
and that is a log method.

24
00:01:33.075 --> 00:01:40.045
Inside the log method, we'll add the message Context initialized.

25
00:01:40.045 --> 00:01:43.125
The next thing to do is to add the entry to the web.xml file.

26
00:01:43.125 --> 00:01:50.095
So if we open that file in the webapp, WEB-INF directory,

27
00:01:50.095 --> 00:01:53.115
inside here we can add a listener entry,

28
00:01:53.115 --> 00:02:01.125
this is a listener-class, and this class is com.mantiso .events .AppListener.

29
00:02:01.125 --> 00:02:06.075
And adding this entry tells the servlet container that this is a listener.

30
00:02:06.075 --> 00:02:10.115
When it loads the class, it sees that it implements ServletContextListener,

31
00:02:10.115 --> 00:02:17.065
and so it knows to call Context initialized when the context is loaded.

32
00:02:17.065 --> 00:02:21.115
So we can now deploy the application.

33
00:02:21.115 --> 00:02:27.105
If we look in Tomcat's log file, we will see that it's currently empty.

34
00:02:27.105 --> 00:02:31.125
If we now browse the website and refresh the page,

35
00:02:31.125 --> 00:02:38.075
and go back to the log files, we see a line which says Context initialized.

36
00:02:38.075 --> 00:02:41.095
So this shows that the context was loaded.

37
00:02:41.095 --> 00:02:44.085
This called the contextInitialized event in our class,

38
00:02:44.085 --> 00:02:47.125
and we logged this message to the file.

39
00:02:47.125 --> 00:02:51.099
Servlet context listeners will often want to access context parameters,

40
00:02:51.099 --> 00:02:55.075
and we have some of those set up.

41
00:02:55.075 --> 00:03:01.055
Inside the web.xml files, you can see the context parameters we already have.

42
00:03:01.055 --> 00:03:03.085
The one we have is the ProductName,

43
00:03:03.085 --> 00:03:07.075
and we've used that in the application where we grab this

44
00:03:07.075 --> 00:03:11.095
name and display it on the web page.

45
00:03:11.095 --> 00:03:16.065
So if we go back to the listener code and change it slightly,

46
00:03:16.065 --> 00:03:18.105
we'll make multiple use of the ServletContext,

47
00:03:18.105 --> 00:03:22.065
so let's grab that and save it to a variable.

48
00:03:22.065 --> 00:03:25.095
We can then use it to print the log message.

49
00:03:25.095 --> 00:03:28.439
We can then use the ServletContext to get a ProductName from

50
00:03:28.439 --> 00:03:31.125
the context parameter and print it out.

51
00:03:31.125 --> 00:03:35.075
If we deploy the application, hit the browser and refresh,

52
00:03:35.075 --> 00:03:39.125
then go back to the log file, we can see the two entries.

53
00:03:39.125 --> 00:03:45.000
The first is the original message, and the second shows the use of the context parameter.

