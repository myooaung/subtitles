WEBVTT
1
00:00:00.000 --> 00:00:02.642
So in a similar way to the application listener,

2
00:00:02.642 --> 00:00:05.642
we can add request listeners and session listeners,

3
00:00:05.642 --> 00:00:08.632
so let's add those in one go here.

4
00:00:08.632 --> 00:00:14.682
We'll add a new Java class, and we'll call it SimpleRequestListener,

5
00:00:14.682 --> 00:00:17.632
and we'll use annotations for this.

6
00:00:17.632 --> 00:00:20.662
This class implements ServletRequestListener,

7
00:00:20.662 --> 00:00:23.941
we implement the requestInitialized and requestDestroyed methods,

8
00:00:23.941 --> 00:00:31.622
and log two messages, Request Initialized and Request Destroyed.

9
00:00:31.622 --> 00:00:34.602
We can do the same for the SimpleSessionListener.

10
00:00:34.602 --> 00:00:38.632
Again add a new class, we'll call this SimpleSessionListener,

11
00:00:38.632 --> 00:00:43.652
and here we implement HttpSessionListener.

12
00:00:43.652 --> 00:00:47.632
It has a sessionCreated method and a sessionDestroyed method,

13
00:00:47.632 --> 00:00:51.682
and again we log out two messages.

14
00:00:51.682 --> 00:00:57.682
Sessions normally last around 20 to 30 minutes,

15
00:00:57.682 --> 00:01:00.612
so to see the sessionDestroyed event,

16
00:01:00.612 --> 00:01:04.672
we need to make sure the session times out in a reasonable time.

17
00:01:04.672 --> 00:01:10.612
We can change that time in the web.xml file by adding a session-config section,

18
00:01:10.612 --> 00:01:17.632
and in there adding a session-timeout of 1; that's in minutes.

19
00:01:17.632 --> 00:01:19.652
So again if you redeploy the application,

20
00:01:19.652 --> 00:01:23.622
refresh the browser, and look in the logs.

21
00:01:23.622 --> 00:01:26.652
Now we see the two Context initialized events,

22
00:01:26.652 --> 00:01:29.652
we see a Request Initialized and Request Destroyed,

23
00:01:29.652 --> 00:01:35.652
and we see a Session Initialized, but not a Session Destroyed event.

24
00:01:35.652 --> 00:01:38.612
If we go back to the browser and refresh,

25
00:01:38.612 --> 00:01:43.662
you see another Request Initialized and Request Destroyed event pair,

26
00:01:43.662 --> 00:01:47.459
and if we wait a minute, we'll see the sessionDestroyed event,

27
00:01:47.459 --> 00:01:49.672
and there it is.

28
00:01:49.672 --> 00:01:53.672
Now if you notice, the two session events come from different sources.

29
00:01:53.672 --> 00:01:57.292
The sessionInitialized event comes from the Tomcat

30
00:01:57.292 --> 00:02:00.612
web pool that handles the request,

31
00:02:00.612 --> 00:02:08.000
but the sessionDestroyed event is fired by Tomcat on some timer, so it comes from a background thread.

