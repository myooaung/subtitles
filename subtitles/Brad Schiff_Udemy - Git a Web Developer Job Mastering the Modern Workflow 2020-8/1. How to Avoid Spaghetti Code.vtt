WEBVTT
1
00:00:04.860 --> 00:00:06.190
Hello everyone.

2
00:00:06.300 --> 00:00:12.600
In this lesson we are going to begin applying our newly acquired javascript knowledge or in other words

3
00:00:12.870 --> 00:00:17.330
let's get back to building out our travel Web site to be more specific.

4
00:00:17.340 --> 00:00:21.090
Let's work on the mobile view of our header navigation.

5
00:00:21.090 --> 00:00:23.550
Let's dive right in and get started.

6
00:00:23.550 --> 00:00:24.120
All right.

7
00:00:24.150 --> 00:00:28.740
So several lessons ago we created this top blue bar header.

8
00:00:29.070 --> 00:00:35.610
And if we take a look at smaller screens you will remember that we decided to hide the header navigation

9
00:00:35.610 --> 00:00:42.530
links initially and we will only display them if a user taps on this top right menu icon.

10
00:00:42.540 --> 00:00:47.550
Well I'm currently clicking and tapping on this icon and nothing's happening.

11
00:00:47.550 --> 00:00:50.430
That's because we never set up that functionality.

12
00:00:50.430 --> 00:00:55.650
Well now that we know how to write organized javascript let's go ahead and bring that functionality

13
00:00:55.650 --> 00:00:56.660
to life.

14
00:00:56.670 --> 00:00:58.820
Let's jump over to our text editor.

15
00:00:59.010 --> 00:01:06.840
Let's open our main JavaScript file which lives in the app assets scripts folder and its name is app

16
00:01:06.930 --> 00:01:08.020
J.S..

17
00:01:08.040 --> 00:01:13.710
Now the person class in the adult class and the john and jane objects from our previous lessons we're

18
00:01:13.710 --> 00:01:15.650
just hypothetical examples.

19
00:01:15.660 --> 00:01:17.840
So at this point let's delete all of this.

20
00:01:17.940 --> 00:01:20.190
So delete the john and jane code.

21
00:01:20.520 --> 00:01:22.630
Also we can delete our adult class.

22
00:01:22.650 --> 00:01:28.430
Essentially we can delete this lesson example code below this line comment and everything below it.

23
00:01:28.800 --> 00:01:33.350
Also up at the top we can delete this line where we include the person file.

24
00:01:33.880 --> 00:01:34.250
OK.

25
00:01:34.260 --> 00:01:41.610
And while we're at it let's also delete the person dot J.S. file.

26
00:01:41.630 --> 00:01:42.240
All right.

27
00:01:42.240 --> 00:01:47.850
And if our goal for this lesson is to create this mobile menu functionality why don't we go ahead and

28
00:01:47.850 --> 00:01:52.890
stay organized by creating a new module file dedicated to the mobile menu.

29
00:01:53.370 --> 00:02:02.680
So within these scripts modules folder let's create a new file let's name this new file mobile menu

30
00:02:03.190 --> 00:02:11.860
dot J.S. let's begin by creating a class and let's name it mobile menu.

31
00:02:12.020 --> 00:02:17.480
And we know that we are going to want to import this file from within our main app J.S. file.

32
00:02:17.480 --> 00:02:21.500
So within this file let's be sure to export this class.

33
00:02:21.500 --> 00:02:28.350
So let's say export default and then the name of the class mobile menu.

34
00:02:28.370 --> 00:02:28.730
All right.

35
00:02:28.730 --> 00:02:35.060
Now within this class let's add a constructor function constructor.

36
00:02:35.060 --> 00:02:40.190
This function will be ran immediately when a new object is created with this class.

37
00:02:40.190 --> 00:02:44.740
So for now let's just try a test to make sure that everything's working correctly.

38
00:02:44.810 --> 00:02:52.740
Let's alert a message that says testing from Mobile menu.

39
00:02:52.760 --> 00:03:00.050
All right let's go ahead and save this file and then jump back to our main app J.S. file and we want

40
00:03:00.050 --> 00:03:03.440
to go ahead and import in the mobile menu module.

41
00:03:03.440 --> 00:03:07.590
So let's say import mobile menu.

42
00:03:07.850 --> 00:03:11.300
And this is really just a variable name that we are creating.

43
00:03:11.330 --> 00:03:15.290
So this could be anything we could call this magical variable.

44
00:03:15.290 --> 00:03:19.830
But just to stay organized why don't we have it match the actual name of the class.

45
00:03:19.910 --> 00:03:26.460
So import mobile menu from and then we just provide a path to the module file.

46
00:03:26.780 --> 00:03:31.790
So go into the modules folder and grab mobile menu.

47
00:03:31.790 --> 00:03:36.870
Now simply importing a module file like this in and of itself won't do anything.

48
00:03:36.890 --> 00:03:41.560
We also need to create a new object that uses this class as a blueprint.

49
00:03:41.900 --> 00:03:47.230
So on a new line let's say new mobile menu.

50
00:03:47.270 --> 00:03:49.380
Now technically this code will work.

51
00:03:49.430 --> 00:03:52.330
This will create a new object that uses this class.

52
00:03:52.430 --> 00:03:57.500
But I would say that nine times out of ten when you create a new object you probably want to save it

53
00:03:57.500 --> 00:04:01.310
to a variable so that you can access or reference it later on.

54
00:04:01.580 --> 00:04:07.240
So at the beginning of this line let's say let and we can come up with any name we like.

55
00:04:07.280 --> 00:04:10.650
How about we name this variable mobile menu.

56
00:04:10.970 --> 00:04:13.640
But we begin with a lowercase m.

57
00:04:13.760 --> 00:04:15.740
So this code should look familiar.

58
00:04:15.740 --> 00:04:22.430
In our previous examples this is very similar to saying that the John object was a new instance of the

59
00:04:22.430 --> 00:04:23.840
Person class.

60
00:04:23.840 --> 00:04:29.070
Now if we save this file over in the browser we see that test alert message pop up

61
00:04:31.910 --> 00:04:37.850
so at this point we are ready to jump back into the mobile menu module file and begin building the actual

62
00:04:37.850 --> 00:04:39.250
functionality.

63
00:04:39.380 --> 00:04:45.830
So let's delete this test alert message and let's think about what our first steps should be.

64
00:04:45.830 --> 00:04:52.730
So before we worry about actually revealing or expanding the navigation links let's first focus on responding

65
00:04:52.730 --> 00:04:57.500
at all to the event of this top right icon being clicked or tapped.

66
00:04:57.500 --> 00:05:03.170
So let's jump over to our text editor and within the constructor function let's write a bit of code

67
00:05:03.170 --> 00:05:09.650
that logs out a bit of dummy text to the console whenever this top right icon is clicked or tapped.

68
00:05:09.650 --> 00:05:13.970
And I'm actually going to begin by showing you what we should not do.

69
00:05:14.000 --> 00:05:18.600
I'm going to code this the way that I used to write JavaScript in the past.

70
00:05:18.620 --> 00:05:21.970
This code will technically work and it might look familiar to you.

71
00:05:22.070 --> 00:05:26.930
But I want to take the time to point out all of the problems with this style of coding.

72
00:05:26.930 --> 00:05:29.270
I call this spaghetti code.

73
00:05:29.270 --> 00:05:36.050
So within our constructor let's begin by selecting that element that gets clicked on so document dot

74
00:05:36.590 --> 00:05:41.960
query selector quotes and then a dot to select a class.

75
00:05:42.020 --> 00:05:48.670
And it had a class of site header underscore underscore menu icon.

76
00:05:48.930 --> 00:05:49.290
Okay.

77
00:05:49.310 --> 00:05:51.230
So that selects the element that gets clicked on.

78
00:05:51.230 --> 00:06:00.620
Then at the end of that we can say dot and add an event listener add event listener within these parentheses

79
00:06:00.980 --> 00:06:06.610
quotes the event that we're listening for is a click or tap event still within the parentheses.

80
00:06:06.620 --> 00:06:11.110
But after those quotes it's a comma and then include a function.

81
00:06:11.270 --> 00:06:18.200
So the word function parentheses curly brackets within those curly brackets lets dropdown and remember

82
00:06:18.200 --> 00:06:25.850
we just wanted to log a test message to the consoles or console log the top right.

83
00:06:25.850 --> 00:06:28.040
Icon was clicked.

84
00:06:28.040 --> 00:06:29.830
Let's go ahead and save this.

85
00:06:29.960 --> 00:06:35.780
And if we jump over to the browser and I open my console we see that as soon as I click this top right

86
00:06:35.780 --> 00:06:40.010
icon our dummy text is logged out to the console.

87
00:06:40.010 --> 00:06:43.430
Which means our messy spaghetti code is working.

88
00:06:43.430 --> 00:06:46.240
So if this code works what's my problem with it.

89
00:06:46.280 --> 00:06:48.080
Why do I think we should avoid it.

90
00:06:48.080 --> 00:06:54.740
Well I call this spaghetti code because like a plate of noodles everything is sort of tangled and intertwined

91
00:06:54.740 --> 00:06:55.790
together.

92
00:06:55.790 --> 00:07:00.740
Another way of thinking about this is that in your home you don't just throw all of your spoons and

93
00:07:00.740 --> 00:07:03.740
forks and knives into one big messy jar.

94
00:07:03.740 --> 00:07:06.050
But that's exactly what this code is doing.

95
00:07:06.440 --> 00:07:12.080
It's all smushed together even though it's using three different tools to perform three different actions.

96
00:07:12.110 --> 00:07:21.110
So a we are selecting an element from the DOM B we are event handling and c we are defining our functionality.

97
00:07:21.140 --> 00:07:27.800
Now this chunk of code may seem manageable in this simple example but as we begin working on more and

98
00:07:27.800 --> 00:07:34.440
more complex features this coding style quickly becomes a dirty filthy mess.

99
00:07:34.490 --> 00:07:39.920
So let's delete this and instead I want to show you a way that we can structure our code so that our

100
00:07:39.920 --> 00:07:45.680
forks spoons and knives each fit into their own little organized compartments.

101
00:07:45.680 --> 00:07:51.440
So within our constructor function the only thing that I'm going to include is a property or shortcut

102
00:07:51.860 --> 00:07:56.000
that stores our Dom selection for the menu icon element.

103
00:07:56.000 --> 00:08:01.940
So let's say this dot menu icon equals.

104
00:08:01.970 --> 00:08:09.170
And then to select that Dom element we just say document dot query selector within these parentheses

105
00:08:09.170 --> 00:08:18.690
it's quotes a dot for a class and it had a class of site header underscore underscore menu icon.

106
00:08:18.950 --> 00:08:19.400
All right.

107
00:08:19.400 --> 00:08:25.980
Now below this constructor function let's create a new method named events.

108
00:08:26.840 --> 00:08:31.820
And within this method let's list any and all events that we want to watch for.

109
00:08:31.820 --> 00:08:37.310
So for example we know that we want to be on the lookout for this menu icon element being clicked.

110
00:08:37.700 --> 00:08:46.070
So within this events method let's say this dot menu icon and then a dot and then we want to add an

111
00:08:46.070 --> 00:08:47.180
event listener to it.

112
00:08:47.210 --> 00:08:56.240
So add event listener within these parentheses the type of event we want to listen for is a click then

113
00:08:56.240 --> 00:09:01.460
read after the quotes a comma and then this is where we include a function or what we want to happen

114
00:09:01.460 --> 00:09:03.500
in response to that click.

115
00:09:03.500 --> 00:09:08.690
Only this time we are not going to spell out and define our functionality of what we want to actually

116
00:09:08.690 --> 00:09:13.240
happen within these parentheses instead below.

117
00:09:13.250 --> 00:09:22.580
This events method let's create a brand new method named toggle the menu and for the time being let's

118
00:09:22.580 --> 00:09:31.460
just have this method log out a bit of dummy text to the console array the icon was clicked and then

119
00:09:31.460 --> 00:09:37.550
within our event handler what do we want to do in the icon is clicked we want to respond by calling

120
00:09:37.550 --> 00:09:40.200
or running the toggle the menu method.

121
00:09:40.250 --> 00:09:46.210
So after this comma here we could just list a reference directly to this method.

122
00:09:46.250 --> 00:09:53.390
However when add event listener runs whatever function we list here it's going to modify the value of

123
00:09:53.410 --> 00:09:55.280
this keyword.

124
00:09:55.280 --> 00:10:01.010
Now you and I are used to the this keyword pointing towards the current object that this blueprint is

125
00:10:01.010 --> 00:10:01.640
creating.

126
00:10:02.060 --> 00:10:08.420
However add event listener wants to modify the this keyword to point towards the DOM element that was

127
00:10:08.420 --> 00:10:09.710
just clicked on.

128
00:10:09.800 --> 00:10:15.470
So to get around this instead of just listing a simple reference directly to our method here what we're

129
00:10:15.470 --> 00:10:19.150
going to do is provide an arrow function here.

130
00:10:19.220 --> 00:10:23.990
So right after the comma typed this in with me an empty set of parentheses.

131
00:10:24.020 --> 00:10:30.110
And then after that new set of parentheses include an equal sign and a greater than symbol and then

132
00:10:30.110 --> 00:10:36.470
a space and then say this dot toggle the menu.

133
00:10:36.470 --> 00:10:40.940
And finally an extra set of parentheses to actually call that method.

134
00:10:40.940 --> 00:10:43.980
So what we just created here is an arrow function.

135
00:10:44.120 --> 00:10:50.600
One of the nice things about an arrow function is that it does not manipulate the value of this keyword.

136
00:10:50.600 --> 00:10:55.970
In other words out event listener is not receiving a direct reference to our method.

137
00:10:56.000 --> 00:11:02.290
Instead we're passing out event listener arrow function that it's going to call and then it's our arrow

138
00:11:02.290 --> 00:11:08.350
function that is actually going to execute toggle the menu and since an arrow function does not manipulate

139
00:11:08.450 --> 00:11:09.670
this keyword.

140
00:11:09.670 --> 00:11:15.440
When this code runs the this keyword will still be pointing towards our overall object.

141
00:11:15.550 --> 00:11:20.590
If that doesn't make perfect sense or even if that doesn't make any sense at all that's OK.

142
00:11:20.590 --> 00:11:26.590
Once we select a few more dom elements I think things will become clear before we get too far ahead

143
00:11:26.590 --> 00:11:27.470
of ourselves.

144
00:11:27.520 --> 00:11:33.640
And actually before we save this file I do want to point out that the web browser is not going to be

145
00:11:33.640 --> 00:11:36.980
on the lookout for a special method named events.

146
00:11:37.090 --> 00:11:39.070
We could have named this anything.

147
00:11:39.340 --> 00:11:44.140
The reason I bring this up is because if we want to begin listening for this click event as soon as

148
00:11:44.140 --> 00:11:49.300
the page loads we need to make sure that our events method is called at some point.

149
00:11:49.300 --> 00:11:55.660
So do this with me in our constructor let's just be sure to call this dot events.

150
00:11:56.350 --> 00:11:56.880
All right.

151
00:11:56.980 --> 00:12:02.860
With this in place let's go ahead and save this file and see if we can find this test message in the

152
00:12:02.860 --> 00:12:09.190
browser's console back in the browser with a small screen to simulate a smartphone.

153
00:12:09.190 --> 00:12:16.250
If you go ahead and click on the top right menu icon here cool in my console we see Hurray.

154
00:12:16.270 --> 00:12:23.310
The icon was clicked but logging a message to the console is not what we truly want to do.

155
00:12:23.620 --> 00:12:29.620
Instead now that we know this is working let's set things up so that when you click on this icon we

156
00:12:29.620 --> 00:12:36.730
add a new CSX class to the element that is currently hidden right the element with the navigation links

157
00:12:36.970 --> 00:12:41.200
and that new CSX class will make that div visible again.

158
00:12:41.230 --> 00:12:42.340
Let me show you what I mean.

159
00:12:42.490 --> 00:12:49.630
So back in our text editor let's begin in our constructor by adding another property that selects that

160
00:12:49.630 --> 00:12:54.460
div element right the element that contains that content that's hidden for small screens.

161
00:12:55.000 --> 00:13:03.910
So on a new line in the constructor we can say this dot menu content should equal document dot query

162
00:13:04.060 --> 00:13:14.040
selected quotes and it had a class of site header underscore underscore menu content.

163
00:13:14.650 --> 00:13:15.070
OK.

164
00:13:15.100 --> 00:13:21.520
Now down in our toggle the menu method we don't actually want to log a message to the console get rid

165
00:13:21.520 --> 00:13:22.050
of that.

166
00:13:22.090 --> 00:13:27.550
Instead we want to add a class to this element that makes it visible.

167
00:13:27.550 --> 00:13:39.630
So in toggle the menu we can just say this dot menu content dot class list dot toggle within these parentheses.

168
00:13:39.640 --> 00:13:47.050
Let's provide a pair of quotes and the toggle method that belongs to class list will add a new CSF class

169
00:13:47.050 --> 00:13:49.470
to an element if it doesn't already have it.

170
00:13:49.630 --> 00:13:54.550
And if the element does already have whatever class you list here it will remove the class.

171
00:13:54.670 --> 00:13:56.590
Hence the name toggle.

172
00:13:56.590 --> 00:14:06.130
So within these quotes let's toggle a CSF class of site header underscore underscore menu content and

173
00:14:06.130 --> 00:14:13.450
then for a bear modifier class let's say Dash Dash is Dash visible.

174
00:14:13.450 --> 00:14:18.910
Now before we hit save and test this out I do want to talk for just a moment about the this keyword.

175
00:14:19.200 --> 00:14:24.580
If we did not provide an arrow function here and instead listed a direct reference to the toggle the

176
00:14:24.580 --> 00:14:31.300
menu method then add event listener would have ran this code within a context where this would be pointing

177
00:14:31.300 --> 00:14:33.130
towards the element that got clicked on.

178
00:14:33.820 --> 00:14:38.680
However because we provided an arrow function so that this keyword doesn't change.

179
00:14:38.710 --> 00:14:45.730
Well when this line of code runs this is still pointing towards our overall object which lets us easily

180
00:14:45.730 --> 00:14:48.730
access our menu content property.

181
00:14:48.910 --> 00:14:52.570
So let's save this and check things out in the browser.

182
00:14:52.570 --> 00:15:00.770
And before I click on this top right icon let's actually right click on it and choose inspect this will

183
00:15:00.770 --> 00:15:06.440
switch your dev tools from the console view to the elements view and right below the selected element

184
00:15:06.770 --> 00:15:08.960
we see our menu content Dev.

185
00:15:09.050 --> 00:15:11.950
And this is the element that we wanted to add a class to.

186
00:15:11.960 --> 00:15:18.560
So with this in view let's go ahead and test things out and click the icon perfect.

187
00:15:18.610 --> 00:15:24.910
So we see that it added an extra modifier class that ends in is visible.

188
00:15:24.910 --> 00:15:29.770
If you don't see this class added in you're sure that you typed out the code correctly in this lesson.

189
00:15:29.770 --> 00:15:35.800
You might just need to manually refresh your web browser since web pack is loading our javascript into

190
00:15:35.800 --> 00:15:38.600
the browser on the fly without a page refresh.

191
00:15:38.620 --> 00:15:45.400
That means all of our old or outdated event listeners will still be attached to Dom elements and in

192
00:15:45.400 --> 00:15:51.100
this particular case if you've saved the file an even number of times well you might have two event

193
00:15:51.100 --> 00:15:55.780
listeners that are trying to both add and remove a class at the same time.

194
00:15:55.930 --> 00:16:00.520
So if things are not working as you would expect just refresh the browser and then try tapping on the

195
00:16:00.520 --> 00:16:02.520
top right icon once again.

196
00:16:02.590 --> 00:16:08.250
And if I click the top right icon again that extra class gets removed.

197
00:16:08.290 --> 00:16:14.770
So now revealing and hiding the navigation links for small screens is as simple as adjusting our CSF

198
00:16:14.800 --> 00:16:18.010
to target that is visible modifier class.

199
00:16:18.010 --> 00:16:27.850
So back in our text editor let's open up our header CSX file so it lives in app assets styles modules

200
00:16:28.120 --> 00:16:30.340
and its name is site header.

201
00:16:30.460 --> 00:16:33.590
Let's go ahead and scroll down to the very bottom of this file.

202
00:16:33.640 --> 00:16:36.980
Here is the rule that's targeting our menu content element.

203
00:16:37.090 --> 00:16:42.220
So currently the baseline style is to be hidden for small screens and then we are telling medium sized

204
00:16:42.220 --> 00:16:44.330
screens to display it once again.

205
00:16:44.320 --> 00:16:48.340
So within this rule let's add a modifier class.

206
00:16:48.340 --> 00:16:54.280
Let's use the ampersand symbol so we don't have to type this out again and then we can simply say Dash

207
00:16:54.310 --> 00:16:58.390
Dash is visible and to make it visible.

208
00:16:58.450 --> 00:17:01.030
Let's just set it to display block.

209
00:17:01.030 --> 00:17:04.930
Let's go ahead and save this file and check things out in the browser.

210
00:17:05.110 --> 00:17:10.720
And if we click this top right icon we see our navigation elements are visible and we can tap it again

211
00:17:10.720 --> 00:17:11.950
to hide them.

212
00:17:11.950 --> 00:17:14.860
And at this point our functionality is in place.

213
00:17:14.860 --> 00:17:20.770
Now it's just a matter of using CSF to make things look nice and that is exactly what we will be doing

214
00:17:20.830 --> 00:17:22.300
in our next lesson.

215
00:17:22.390 --> 00:17:27.610
Right now I will overlay some footage of the styling that I have in mind and in our next lesson we will

216
00:17:27.610 --> 00:17:29.850
work together to bring this to life.

217
00:17:29.890 --> 00:17:31.380
It should be a lot of fun.

218
00:17:31.390 --> 00:17:34.900
Let's keep rolling and I will see you in the next lesson.
