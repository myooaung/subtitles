WEBVTT
1
00:00:05.010 --> 00:00:06.570
Welcome back everyone.

2
00:00:06.630 --> 00:00:07.990
In part two of this lesson.

3
00:00:08.010 --> 00:00:13.590
Let's pick up right where we left off in part one that means we want to continue improving the layout

4
00:00:13.650 --> 00:00:16.840
of the our features section for small screens.

5
00:00:17.130 --> 00:00:22.620
So the next adjustment that I think we should make for small screens is to let this content use the

6
00:00:22.620 --> 00:00:27.480
full available width and to stack its corresponding icon above it.

7
00:00:27.480 --> 00:00:34.890
So to make that change let's jump over to the CSSA file for our feature item block and we want to adjust

8
00:00:34.890 --> 00:00:36.720
things so that there's padding left.

9
00:00:36.720 --> 00:00:41.400
Value is only applied to screens that are a certain size or larger.

10
00:00:41.400 --> 00:00:49.860
Let's go ahead and cut this line and then let's create a media query mix in mix in at small paste that

11
00:00:49.860 --> 00:00:51.240
value back in.

12
00:00:51.240 --> 00:00:56.370
All right so if we save that we are halfway there that got rid of the indentation.

13
00:00:56.370 --> 00:01:00.150
Now we just need to tell small screens to stop positioning the icon.

14
00:01:00.150 --> 00:01:01.250
Absolutely.

15
00:01:01.290 --> 00:01:09.720
So within the icon rule let's cut both of these lines positioned left and let's create a mixin at small

16
00:01:10.020 --> 00:01:13.760
paste those lines back in.

17
00:01:13.760 --> 00:01:14.240
All right.

18
00:01:14.240 --> 00:01:19.670
And I think this would look better if the icon was centered horizontally for small screens.

19
00:01:19.850 --> 00:01:28.280
So within the baseline styles for this icon rule let's just say display block margin.

20
00:01:28.280 --> 00:01:32.460
0 auto perfect.

21
00:01:32.620 --> 00:01:38.410
Next I think we should reduce the font size of this element just a little bit and also reduce its top

22
00:01:38.410 --> 00:01:40.160
margin for small screens.

23
00:01:40.210 --> 00:01:45.010
So there is a bit less of a vertical gap between the icon and the text.

24
00:01:45.010 --> 00:01:49.440
So within our SS Here is the rule for that element.

25
00:01:49.690 --> 00:01:56.300
Let's go ahead and cut this font size and place it within a mixin at small.

26
00:01:56.770 --> 00:02:05.180
Let's set the baseline font size to just 1.6 ram that looks better and let's reduce the top margin just

27
00:02:05.180 --> 00:02:06.380
a tiny bit.

28
00:02:06.380 --> 00:02:17.700
So we can say margin top points seven E-M and within our mixin we can reset that back to 1 E-M.

29
00:02:18.080 --> 00:02:20.170
I think that looks nice next.

30
00:02:20.210 --> 00:02:27.410
Why don't we go ahead and set these titles to be centered horizontally for small screens but keep them

31
00:02:27.410 --> 00:02:29.870
left aligned on larger screens.

32
00:02:29.980 --> 00:02:36.500
So within our title role we can simply say text align center and then within our mix in media query

33
00:02:36.530 --> 00:02:39.560
we can just say text align.

34
00:02:39.660 --> 00:02:43.280
Left looks good.

35
00:02:43.600 --> 00:02:48.640
So now the styling for our section is complete both for large and small screens.

36
00:02:48.880 --> 00:02:54.670
At this point in the lesson I'd like to change gears and talk about merging the our features get branch

37
00:02:54.790 --> 00:02:57.000
back into our master branch.

38
00:02:57.130 --> 00:03:01.700
Now if you'd like to take a few moments to finish up your styling efforts that's ok.

39
00:03:01.900 --> 00:03:04.540
Feel free to pause this lesson right now.

40
00:03:04.630 --> 00:03:09.610
And if you need to re watched the past few minutes or even reference something back in part one of the

41
00:03:09.610 --> 00:03:10.400
lesson.

42
00:03:10.510 --> 00:03:12.400
By all means take your time.

43
00:03:12.430 --> 00:03:18.490
Once your copy of the travel site project has all of the our features styles in place go ahead and resume

44
00:03:18.490 --> 00:03:23.530
this part of the lesson at about the three minute and 20 second mark at that point.

45
00:03:23.530 --> 00:03:27.270
You and I can tackle the guilt component of the lesson together.

46
00:03:27.520 --> 00:03:27.940
All right.

47
00:03:27.940 --> 00:03:31.440
So we've completed the our feature section at this point.

48
00:03:31.450 --> 00:03:36.130
I'm going to jump to my command line and commit my changes to my get repo.

49
00:03:36.600 --> 00:03:41.020
Let's press control-C to tell the golpe watch task it can stop running.

50
00:03:41.590 --> 00:03:44.570
Let's run a get status to see what has changed.

51
00:03:44.830 --> 00:03:46.700
All of these changes look good to me.

52
00:03:46.750 --> 00:03:55.600
So I want to add all changes to the staging area so get ad dash uppercase a and then I want to go ahead

53
00:03:55.630 --> 00:03:57.520
and commit the staging area.

54
00:03:57.730 --> 00:04:05.030
Let's make our message completed the our features section.

55
00:04:05.100 --> 00:04:10.540
All right so now that we've committed those changes to the our features branch the next thing we want

56
00:04:10.540 --> 00:04:13.500
to do is merge that branch back in the master.

57
00:04:13.690 --> 00:04:16.640
Right because the our feature section is complete.

58
00:04:16.870 --> 00:04:19.380
It's no longer a work in progress.

59
00:04:19.390 --> 00:04:22.840
This is definitely safe to merge into the master branch.

60
00:04:23.080 --> 00:04:27.500
So let's go ahead and use the command line to merge that branch into a master.

61
00:04:27.520 --> 00:04:30.830
First thing we want to do is to check out the master branch.

62
00:04:30.970 --> 00:04:35.210
So get check out master.

63
00:04:35.920 --> 00:04:42.700
All right so now that we've checked out the master branch if I go ahead and open up a new tab and fire

64
00:04:42.700 --> 00:04:46.870
up our browser St preview by running golpe watch.

65
00:04:47.120 --> 00:04:54.770
If we scroll down a bit we see that the our feature section doesn't have any of our progress because

66
00:04:54.770 --> 00:04:58.510
that code only lives in our features branch.

67
00:04:58.550 --> 00:05:02.490
So let's go ahead and merge that branch into Master.

68
00:05:02.510 --> 00:05:07.970
So back in my other tab let me run a clear so we are typing at the top of the command line instead of

69
00:05:07.970 --> 00:05:09.410
the bottom.

70
00:05:09.410 --> 00:05:13.450
You don't have to do that it just to make the lesson easier to read on your screen.

71
00:05:13.490 --> 00:05:20.270
So let's merge the branch in the master get merge and then the name of the branch that we want to merge

72
00:05:20.270 --> 00:05:24.470
into master our dash Beecher's.

73
00:05:24.500 --> 00:05:28.530
Now we already practice merging a branch this way in an earlier lesson.

74
00:05:28.700 --> 00:05:34.700
But right now I want to show you an option you can use to merge branches in a slightly different way.

75
00:05:34.790 --> 00:05:44.540
We can include an option named dash dash no dash f f this stands for no fast forward certain teams and

76
00:05:44.540 --> 00:05:48.110
certain employers will want you to merge using this option.

77
00:05:48.320 --> 00:05:51.120
We will take a look at what this option does in just a moment.

78
00:05:51.140 --> 00:05:54.300
But for now let's go ahead and press enter.

79
00:05:54.300 --> 00:05:54.760
All right.

80
00:05:54.760 --> 00:06:01.440
So when you use the no fast forward option it gives you a chance to include a merge commit message.

81
00:06:01.550 --> 00:06:08.970
Now nine times out of 10 I would say that this default message of merge branch our features is A-OK.

82
00:06:09.020 --> 00:06:16.250
So to use that you can just hit the escape key on your keyboard and then type in a colon not a semi-colon

83
00:06:16.370 --> 00:06:25.310
but a colon and then type w q and press enter that little bit of keyboard wizardry that we just performed

84
00:06:25.550 --> 00:06:27.630
is beyond the scope of this course.

85
00:06:27.710 --> 00:06:33.120
We were basically editing a text message using vim but that's not important for right now.

86
00:06:33.140 --> 00:06:38.660
So now that we completed that merge Let's go ahead and push our master branch up to get hub.

87
00:06:38.930 --> 00:06:44.420
So I can show you a visual example of what the no f f option really does.

88
00:06:44.630 --> 00:06:54.090
So to push master up to get hub lets just type get push Orjan master.

89
00:06:54.220 --> 00:07:00.020
And now if we check out get have dot com and go to the main page for your travel site Ribault.

90
00:07:00.160 --> 00:07:04.890
If you click on commits Here's the commit.

91
00:07:04.890 --> 00:07:12.690
When we completed the our feature section and because we used the no fast forward option we see a dedicated

92
00:07:12.690 --> 00:07:14.780
commit just for the merge.

93
00:07:14.790 --> 00:07:20.550
Now if you think back to a few lessons ago when we were first learning how to merge and we were working

94
00:07:20.580 --> 00:07:26.440
on our count to ten example you will notice that there is no dedicated commit for the merge.

95
00:07:26.670 --> 00:07:32.910
So if you remember we made each of these three commits to the count to 10 branch and when we merge that

96
00:07:32.910 --> 00:07:39.720
branch back into Master because we didn't include the no fast forward option get simply fast forward

97
00:07:39.720 --> 00:07:45.850
the master's branch history to point towards the last commit from the count to 10 branch.

98
00:07:45.960 --> 00:07:48.670
Now there is no right or wrong way to merge a branch.

99
00:07:48.690 --> 00:07:53.220
I just want you to be aware of the differences because certain teams that you are on will have certain

100
00:07:53.220 --> 00:07:54.300
preferences.

101
00:07:54.330 --> 00:08:00.710
So if we scroll back up to the top and click on this dedicated commit for the merge this will show us

102
00:08:00.770 --> 00:08:01.670
the diff.

103
00:08:01.670 --> 00:08:06.440
Basically what changed in which phials when we performed the merge.

104
00:08:06.470 --> 00:08:10.010
Now in this case we only merged in this one commit.

105
00:08:10.220 --> 00:08:15.950
But if this was a larger feature and maybe it took us a week to complete it and maybe our progress was

106
00:08:15.950 --> 00:08:22.340
broken up into 10 commits most people on our team are not going to want to have to dig through 10 separate

107
00:08:22.340 --> 00:08:24.700
commits to see what changed.

108
00:08:24.860 --> 00:08:31.310
In a case like that it is much much easier to just look at the Consolidated merge comment which will

109
00:08:31.310 --> 00:08:37.700
show all of the changes from all 10 of those hypothetical comments in one convenient location.

110
00:08:37.850 --> 00:08:40.960
One convenient diff that you can scroll through.

111
00:08:41.180 --> 00:08:45.970
So hopefully that gives you an idea of what the no fast forward option does.

112
00:08:46.040 --> 00:08:52.370
It creates a dedicated commit in your repots history which is a consolidated place to see all of the

113
00:08:52.370 --> 00:08:58.540
changes in all of the commits for that branch if you're still not 100 percent clear on what the no fast

114
00:08:58.530 --> 00:08:59.780
forward option does.

115
00:08:59.900 --> 00:09:04.760
It's not a big deal at the end of the day you can merge branches using that option or not.

116
00:09:04.760 --> 00:09:07.280
It's up to you or the team that you're working on.

117
00:09:07.280 --> 00:09:10.720
The important thing is that I want to at least be on your radar.

118
00:09:10.880 --> 00:09:15.220
Now that's going to bring this lesson to a close in our next lesson.

119
00:09:15.230 --> 00:09:20.190
We will begin working on the testimonial section of the design.

120
00:09:20.270 --> 00:09:21.470
It's going to be a lot of fun.

121
00:09:21.530 --> 00:09:22.780
Let's keep rolling along.

122
00:09:22.820 --> 00:09:25.370
And I will see you in the next lesson.
