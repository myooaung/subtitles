WEBVTT
1
00:00:05.190 --> 00:00:11.690
Hello everyone in this lesson we will continue to build out the styles for our travel website.

2
00:00:11.970 --> 00:00:13.770
Let's dive right in.

3
00:00:13.800 --> 00:00:18.300
So in this lesson we are going to continue styling this content.

4
00:00:18.460 --> 00:00:23.890
If we look at the design file we see that that content is supposed to look like this.

5
00:00:23.890 --> 00:00:29.400
So in this lesson let's begin with this type margravine the textiles for these headlines.

6
00:00:29.710 --> 00:00:32.740
Let's begin by finding these elements in our.

7
00:00:32.770 --> 00:00:37.340
TMF How we can find them by searching for the first trip.

8
00:00:37.720 --> 00:00:44.890
So over in our text editor in the HMO file I will push Command F if you're using Windows you could try

9
00:00:44.890 --> 00:00:49.200
control F and then just search for the first trip.

10
00:00:49.650 --> 00:00:49.980
All right.

11
00:00:49.990 --> 00:00:55.740
So here are those elements we want to give them classes so we can begin styling them.

12
00:00:55.750 --> 00:00:57.780
So what should we name these classes.

13
00:00:57.940 --> 00:01:04.660
Well instead of treating this like a unique section I'm going to create a generic reusable headline

14
00:01:04.660 --> 00:01:10.620
block because we see these headlines and if we scroll down a bit we also see a very similar headline

15
00:01:10.630 --> 00:01:11.280
here.

16
00:01:11.470 --> 00:01:13.130
So in our HMO.

17
00:01:13.540 --> 00:01:19.050
Let's go ahead and give all three of those elements a class of headline.

18
00:01:19.150 --> 00:01:22.920
Let me just copy and paste this onto this element.

19
00:01:23.050 --> 00:01:25.970
And also this heading.

20
00:01:26.230 --> 00:01:26.660
All right.

21
00:01:26.680 --> 00:01:34.450
Now let's go ahead and create a new CSSA file that is dedicated to our new headline block in the app

22
00:01:34.540 --> 00:01:39.640
assets folder within the styles folder and then within the modules folder.

23
00:01:40.030 --> 00:01:42.140
Let's create a new file.

24
00:01:42.460 --> 00:01:49.270
And let's name this new file underscore headline CSX.

25
00:01:49.540 --> 00:01:54.430
Let's create a class named headline And let's begin styling.

26
00:01:54.820 --> 00:02:02.020
So let's treat this style as our base line for the headline block and then we can just use a few modifier

27
00:02:02.020 --> 00:02:04.590
clauses to create these styles.

28
00:02:04.840 --> 00:02:11.350
So if we compare this to what we see in the browser I think the first thing that we should change is

29
00:02:11.350 --> 00:02:12.180
make the headings.

30
00:02:12.190 --> 00:02:13.870
So it's not so bold.

31
00:02:14.200 --> 00:02:18.650
So in our text editor let's say font weight 300.

32
00:02:18.820 --> 00:02:20.020
Let's save this.

33
00:02:20.020 --> 00:02:25.680
But before we can expect this change to show up in the browser we need to go into our main styles that

34
00:02:25.690 --> 00:02:35.130
CSSA file and import this new headline file lives in the modules folder and names underscore Hadleigh

35
00:02:36.410 --> 00:02:37.370
that save this.

36
00:02:37.390 --> 00:02:38.720
And check out the browser.

37
00:02:38.960 --> 00:02:39.310
All right.

38
00:02:39.310 --> 00:02:40.430
That looks a lot better.

39
00:02:40.660 --> 00:02:45.670
I think the next thing we should change is to increase the font size to match the design file.

40
00:02:45.850 --> 00:02:50.540
So let's go ahead and measure the font size on this baseline headline block style.

41
00:02:50.560 --> 00:02:55.900
I will measure from the top of a capital letter down to the bottom of the letter that has a descender

42
00:02:57.340 --> 00:03:00.250
So that looks like about 46 pixels tall.

43
00:03:00.250 --> 00:03:04.210
But remember we want to define our font sizes in terms of Renn.

44
00:03:04.210 --> 00:03:09.740
So let's open our calculator and take 46 and divide it by 16.

45
00:03:09.790 --> 00:03:13.070
So that gives us two point eight seven five REM.

46
00:03:13.120 --> 00:03:19.900
So I would copy that value into my clipboard and then back in our headline at CSSA file that same font

47
00:03:19.900 --> 00:03:22.390
size pasted in red.

48
00:03:22.540 --> 00:03:24.010
Let's save this.

49
00:03:24.010 --> 00:03:25.300
And check out the browser.

50
00:03:25.510 --> 00:03:26.880
That looks a lot better.

51
00:03:26.920 --> 00:03:33.150
Next let's make the baseline color for this block blue instead of black color.

52
00:03:33.430 --> 00:03:36.730
Let's use our main blue variable.

53
00:03:36.790 --> 00:03:37.600
Perfect.

54
00:03:37.600 --> 00:03:43.110
Now let's start working on modifier classes for these two elements.

55
00:03:43.180 --> 00:03:49.280
So if we look at our design file we see that the two of those headlines should be centered horizontally.

56
00:03:49.540 --> 00:04:02.070
So in our age DML on those two elements let's add a modifier class of headline dash dash centered.

57
00:04:02.160 --> 00:04:02.580
All right.

58
00:04:02.580 --> 00:04:13.750
And then in our CSSA file let's create a modifier rule centered text align center perfect.

59
00:04:13.830 --> 00:04:17.930
If we look at our design file we see that the second headline should be orange.

60
00:04:18.150 --> 00:04:27.700
So in our HMO Let's add another modifier class on this element named headline dash dash orange and then

61
00:04:27.700 --> 00:04:36.660
in our CSSA file we can create another modifier rule dash dash orange color should use our main orange

62
00:04:36.790 --> 00:04:44.580
var. perfect and when we compare this to the design file we see that this headline should also have

63
00:04:44.610 --> 00:04:47.870
a bit smaller of a font size than the others.

64
00:04:47.880 --> 00:04:56.760
So in our age TMM Let's create another modifier class named head line dash dash small and then in our

65
00:04:56.760 --> 00:04:58.010
CSSA file.

66
00:04:58.230 --> 00:05:03.060
Let's create another modifier rule font size.

67
00:05:03.060 --> 00:05:07.890
And let's go to our design file and measure the font size for this element.

68
00:05:07.890 --> 00:05:14.310
So I will measure from the top of this B letter to the bottom of a descender in the letter Y and that

69
00:05:14.310 --> 00:05:16.330
looks like about 30 pixels tall.

70
00:05:16.500 --> 00:05:18.420
But we want that in terms of REM.

71
00:05:18.480 --> 00:05:22.530
So in our calculator let's clear that out and take 30.

72
00:05:22.530 --> 00:05:29.790
Divide it by 16 with let's copy that value to our clipboard and then in our CSSA let's paste it in and

73
00:05:29.790 --> 00:05:32.160
say REM save that.

74
00:05:32.160 --> 00:05:33.680
Check it out in the browser.

75
00:05:33.990 --> 00:05:34.970
Excellent.

76
00:05:35.040 --> 00:05:42.120
If we compare this to the design file we see that the small orange headline should also be wrapped onto

77
00:05:42.130 --> 00:05:43.610
a second one.

78
00:05:43.720 --> 00:05:49.220
So to create that effect we can simply apply a maximum with this element.

79
00:05:49.510 --> 00:05:53.180
So let's give it a max width of about 500 pixels.

80
00:05:53.260 --> 00:05:54.810
So in each DML.

81
00:05:55.000 --> 00:06:03.640
Let's add another modifier class to that element of headline dash dash narrow and then our CSSA let's

82
00:06:03.640 --> 00:06:12.600
create a modifier rule narrow maps with 500 pixels save that.

83
00:06:12.650 --> 00:06:15.390
All right so that drop the text down to a second line.

84
00:06:15.410 --> 00:06:23.570
But now we want this 500 pixel element to be horizontally centered itself so we can just say margin

85
00:06:23.570 --> 00:06:24.200
left.

86
00:06:24.200 --> 00:06:25.160
Auto.

87
00:06:25.160 --> 00:06:26.030
Margin right.

88
00:06:26.030 --> 00:06:26.450
Auto

89
00:06:30.170 --> 00:06:31.350
excellent.

90
00:06:31.370 --> 00:06:34.240
Let's compare this to the design file once again.

91
00:06:34.250 --> 00:06:41.090
So if you look really closely you can see that these two headlines use a slightly lighter or thinner

92
00:06:41.270 --> 00:06:48.770
font weight than this headline so to implement that difference let's add a modifier class to the top

93
00:06:48.770 --> 00:06:55.340
two headlines of headline dash dash light.

94
00:06:55.460 --> 00:06:58.950
So copy this pasted onto this headline as well.

95
00:06:59.540 --> 00:07:08.330
And in our CSSA Let's create another modifier rule dash dash light find wait 100.

96
00:07:08.500 --> 00:07:11.120
So this is a super thin white font weight.

97
00:07:11.140 --> 00:07:12.510
Let's save that.

98
00:07:12.940 --> 00:07:14.270
And check out the browser.

99
00:07:14.410 --> 00:07:15.350
Perfect.

100
00:07:15.370 --> 00:07:17.450
Let's compare this to the design file.

101
00:07:17.800 --> 00:07:22.750
And the only thing left that I see is that certain words need to be bold.

102
00:07:22.810 --> 00:07:31.660
So let's go ahead and bold these key phrases in our H.T. amount we want to bold The phrase was our own.

103
00:07:31.660 --> 00:07:35.140
So let's wrap up in a strong tack.

104
00:07:35.200 --> 00:07:35.620
All right.

105
00:07:35.620 --> 00:07:41.440
And then within this headline we want to make the phrase better for everyone bolts let's you wrap that

106
00:07:41.530 --> 00:07:43.780
in a strong tag as well.

107
00:07:44.570 --> 00:07:45.340
Let's save that.

108
00:07:45.340 --> 00:07:46.920
And check out the browser.

109
00:07:47.080 --> 00:07:47.940
Looks good.

110
00:07:48.160 --> 00:07:53.140
And one other thing that I'm noticing is that I think we should decrease the margin below the first

111
00:07:53.140 --> 00:07:54.050
headline.

112
00:07:54.490 --> 00:08:00.100
And I think we should increase the margin below the second headline so to do that let's add on a few

113
00:08:00.100 --> 00:08:01.750
new modifier classes.

114
00:08:01.870 --> 00:08:09.540
So in our HTL Mel on the first headline let's add a new modifier class named headline dash dash.

115
00:08:09.620 --> 00:08:13.380
The margin for bottom margin be margin small.

116
00:08:13.660 --> 00:08:19.900
And on the second headline let's add a modifier class of headline dash dash B.

117
00:08:19.930 --> 00:08:21.660
Margin bar.

118
00:08:21.910 --> 00:08:26.970
Let's save this and create those two modifier classes in our headline CSSA file.

119
00:08:28.410 --> 00:08:33.550
So be margins small margin bottom.

120
00:08:33.770 --> 00:08:36.210
Let's go with point five E-M.

121
00:08:36.320 --> 00:08:40.830
I like to define margin on my text elements in E-M instead of Renn.

122
00:08:40.850 --> 00:08:46.820
The nice thing about using E-M in this context is that it's relative to the font size of the element

123
00:08:46.910 --> 00:08:52.640
itself which means we can reuse this class on headlines that have different font sizes and this will

124
00:08:52.640 --> 00:08:55.250
always scale with it really nicely.

125
00:08:55.250 --> 00:09:03.110
Let's create another modifier class or we add extra bottom margins so the margin large but say margin

126
00:09:03.110 --> 00:09:05.880
bottom 1.6 enim.

127
00:09:06.020 --> 00:09:11.620
And before I say this let me resize my text editor so we can see the change happen in real time.

128
00:09:11.630 --> 00:09:18.140
So as soon as I save you saw the spacing change here it's subtle but I think it looks a lot better now.

129
00:09:18.350 --> 00:09:21.880
So at this point we've completed the styling for the headlines.

130
00:09:22.040 --> 00:09:23.700
Now let's change gears.

131
00:09:23.700 --> 00:09:28.940
I think the next thing we should do is center this image horizontally but really quickly before we do

132
00:09:28.940 --> 00:09:34.700
that I want to address a potential concern you might have with all of the modifier classes we created

133
00:09:34.700 --> 00:09:36.130
for the headlines.

134
00:09:36.140 --> 00:09:42.050
So for example you might be thinking wow that is a lot of modifier classes that we just created instead

135
00:09:42.050 --> 00:09:47.030
of creating all of those modifier classes couldn't we have just created a unique class just for this

136
00:09:47.030 --> 00:09:52.770
heading and a unique class just for this heading and a unique class just for this heading.

137
00:09:53.030 --> 00:09:55.140
Well my answer to that is yes absolutely.

138
00:09:55.160 --> 00:09:56.310
We could have done that.

139
00:09:56.300 --> 00:10:02.030
There's no right or wrong way to structure your success but I do want to give you a little bit of insight

140
00:10:02.060 --> 00:10:05.990
into why I think this modifier system makes sense.

141
00:10:05.990 --> 00:10:10.850
So for example on a larger web site that might have hundreds and hundreds of pages.

142
00:10:10.970 --> 00:10:16.610
The designer on our team might regularly send us new styles for us to develop and if we are not using

143
00:10:16.610 --> 00:10:22.550
the modifier system I feel like it can become a bit exhausting to continually come up with new unique

144
00:10:22.640 --> 00:10:23.870
class names.

145
00:10:23.870 --> 00:10:27.360
Now in the example that we were just working on it wouldn't have been that bad.

146
00:10:27.440 --> 00:10:30.240
We could have named this one maybe main heading.

147
00:10:30.410 --> 00:10:37.010
We could have named this one subheading and maybe named this one alternate heading but on larger web

148
00:10:37.010 --> 00:10:44.000
sites that have more pages and more headline styles I feel like creating single monolithic unique classes

149
00:10:44.000 --> 00:10:48.320
like that can become exhausting and result in disorganized code.

150
00:10:48.320 --> 00:10:48.640
Right.

151
00:10:48.650 --> 00:10:52.240
Because as those headline classes add up over time.

152
00:10:52.250 --> 00:10:57.980
Main headings subheading alternate heading impact heading emphasis heading tiny heading.

153
00:10:57.980 --> 00:11:02.480
Eventually you will reach a point where those class names don't mean anything to you.

154
00:11:02.690 --> 00:11:04.200
There are just too many of them.

155
00:11:04.340 --> 00:11:10.010
And if in six months or a year from now the designer on your team comes to you with a new style for

156
00:11:10.010 --> 00:11:11.110
you to develop.

157
00:11:11.120 --> 00:11:16.790
You might recognize one of the headlines as a style that you've coded in the past but you can't remember

158
00:11:16.790 --> 00:11:18.860
which class name that even was.

159
00:11:18.950 --> 00:11:23.990
And you don't want to be in a situation where it takes you more time to dig through all of your class

160
00:11:23.990 --> 00:11:25.510
names to find the right one.

161
00:11:25.640 --> 00:11:31.250
Then it would take you to just create a brand new class name super awesome magic setting and just rewrite

162
00:11:31.250 --> 00:11:33.720
the necessary CSSA right then and there.

163
00:11:33.740 --> 00:11:40.550
That is how huge disorganized spaghetti CSSA files that are impossible to maintain are created.

164
00:11:40.700 --> 00:11:46.130
But if we were using the modifier system the designer could come to us a year or even two years down

165
00:11:46.130 --> 00:11:51.140
the road with a new style for us to develop and we could just look at the new headline style and say

166
00:11:51.170 --> 00:11:57.140
OK can we create this new style by mixing and matching and combining any of our existing modifiers.

167
00:11:57.320 --> 00:11:58.210
If we can.

168
00:11:58.280 --> 00:11:58.870
Excellent.

169
00:11:58.910 --> 00:12:01.850
If we can't we'll just create a new modifier or two.

170
00:12:01.880 --> 00:12:04.460
We know exactly where to write that new code.

171
00:12:04.460 --> 00:12:06.050
We will know exactly where to find it.

172
00:12:06.050 --> 00:12:10.170
Down the road and our class names have inherent meaning right.

173
00:12:10.190 --> 00:12:17.750
So which one of these naming systems is easier to understand high impact headline or headline headline

174
00:12:17.750 --> 00:12:19.390
large headline orange.

175
00:12:19.670 --> 00:12:25.220
I feel like the modifier system will make sense to us even if we have to revisit the project years down

176
00:12:25.220 --> 00:12:25.970
the road.

177
00:12:26.000 --> 00:12:30.980
Those class names will always make sense and they're easy to reuse and recycle all right.

178
00:12:30.980 --> 00:12:35.000
So my apologies for the huge tangent on class names.

179
00:12:35.000 --> 00:12:41.060
Again there's no right or wrong way to structure your success but I do encourage you to give the whole

180
00:12:41.210 --> 00:12:44.450
block element modifier way of thinking about things.

181
00:12:44.570 --> 00:12:47.480
A real try before you dismiss it for the time being.

182
00:12:47.480 --> 00:12:49.440
Let's get back to the task at hand.

183
00:12:49.700 --> 00:12:54.360
We want to horizontally center this image now in our previous lesson.

184
00:12:54.410 --> 00:13:00.740
We already created a class named wrapper that centers our content in the middle twelve hundred pixels

185
00:13:00.740 --> 00:13:01.610
of the page.

186
00:13:01.730 --> 00:13:09.080
So why don't we go ahead and wrap this image in the wrapper class and then create a new modifier to

187
00:13:09.080 --> 00:13:10.970
make it a bit narrower.

188
00:13:10.970 --> 00:13:15.810
So in our HMO here is that image.

189
00:13:16.400 --> 00:13:21.230
Let's go ahead and wrap it in a div with a class of wrapper.

190
00:13:24.690 --> 00:13:28.580
Be sure to indent this all right now if we save this.

191
00:13:28.710 --> 00:13:34.660
We see that the base line wrapper class only indented it about 18 pixels right.

192
00:13:34.680 --> 00:13:43.020
So let's just add a modifier class of wrapper dash dash medium that will be a bit narrower than the

193
00:13:43.020 --> 00:13:45.010
default twelve hundred pixels.

194
00:13:45.210 --> 00:13:46.470
So let's save this.

195
00:13:46.500 --> 00:13:48.590
And then within the modules folder.

196
00:13:48.690 --> 00:13:50.520
Let's open up the wrapper.

197
00:13:50.560 --> 00:13:52.250
CSSA file.

198
00:13:52.800 --> 00:13:56.530
Let's create a modifier rule medium.

199
00:13:57.000 --> 00:14:02.840
So instead of having a max width of twelve hundred pixels if we look at our design file for just a moment.

200
00:14:03.150 --> 00:14:15.640
Let's go ahead and give this modifier class a max width of about 976 say Max with 976 pixels.

201
00:14:15.900 --> 00:14:18.940
And if we check out the browser there you have it.

202
00:14:18.960 --> 00:14:22.340
So the styling for this section is now complete.

203
00:14:22.470 --> 00:14:28.710
But before we bring this lesson to a close let's see how things look on a mobile or smaller screen.

204
00:14:30.750 --> 00:14:36.640
So the first thing that I noticed is that this gap is too large.

205
00:14:36.730 --> 00:14:38.130
On a smaller screen.

206
00:14:38.230 --> 00:14:38.470
Right.

207
00:14:38.470 --> 00:14:44.560
So I like this amount of spacing on large screens but let's tone it down a bit for smaller screens.

208
00:14:44.590 --> 00:14:51.860
So in our text editor in the modules folder Let's open the file named page section of CSX.

209
00:14:52.120 --> 00:14:56.060
So this amount of vertical padding works well on larger screens.

210
00:14:56.080 --> 00:15:02.650
So let's wrap it in a media query mix in let's say once the screen is large enough to be considered

211
00:15:02.650 --> 00:15:13.020
medium Let's go ahead and use that value of 4.5 REM but let's set a smaller baseline padding.

212
00:15:13.210 --> 00:15:19.480
Let's try to ram then resize my text editor so we can see the mobile simulator.

213
00:15:19.490 --> 00:15:21.540
And let me hit save.

214
00:15:21.610 --> 00:15:24.500
I think we can reduce that even a bit further.

215
00:15:24.610 --> 00:15:27.440
Let's try one point two.

216
00:15:27.610 --> 00:15:29.110
I think that looks better.

217
00:15:29.200 --> 00:15:36.420
Next up I think the font size for this element is way too large on a small screen so to adjust that.

218
00:15:36.430 --> 00:15:39.790
Let's go into our head lined up CSSA file.

219
00:15:40.150 --> 00:15:45.670
All right so this font size of two point eight seven five ram looks great on larger screens.

220
00:15:45.670 --> 00:15:51.220
So what I want to do is copy that line and let's place it within a media query that only gets applied

221
00:15:51.220 --> 00:15:52.720
to larger screens.

222
00:15:52.750 --> 00:15:59.790
So mix in let's say at small and then paste it in.

223
00:15:59.800 --> 00:16:00.040
All right.

224
00:16:00.040 --> 00:16:03.460
And let's set a smaller baseline font size.

225
00:16:03.730 --> 00:16:06.970
I think we could afford to almost cut this size in half.

226
00:16:07.030 --> 00:16:11.490
So let's try one 1.9 round.

227
00:16:11.530 --> 00:16:12.330
I like that.

228
00:16:12.640 --> 00:16:17.470
But we do still want this headline to have a larger font size than this headline.

229
00:16:17.470 --> 00:16:22.520
So remember this headline uses the modifier class of dash dash small.

230
00:16:22.630 --> 00:16:26.080
So let's decrease it a bit as well for small screens.

231
00:16:26.260 --> 00:16:28.090
So here is that modifying rule.

232
00:16:28.300 --> 00:16:36.670
Let's move this original font size into a media query mix at small paste that in and lets decrease the

233
00:16:36.670 --> 00:16:42.370
baseline font size to 1 point to REM.

234
00:16:42.430 --> 00:16:43.800
I think that works.

235
00:16:43.870 --> 00:16:49.600
The next thing that I want to adjust is the way that this image is being positioned incised on small

236
00:16:49.600 --> 00:16:50.540
screens.

237
00:16:50.620 --> 00:16:56.410
So on large screens I think having that image be less than full width and being horizontally centered

238
00:16:56.770 --> 00:17:01.160
looks all right but on tiny screens I just think this looks odd.

239
00:17:01.210 --> 00:17:06.410
I think it will look better for small screens if this image just used the full available way.

240
00:17:06.460 --> 00:17:12.060
Now the reason this extra spacing exists is because we have a wrapper wrapped inside a wrapper.

241
00:17:12.280 --> 00:17:18.460
Right so for example if we look at our HTL Now here is the div surrounding that image has a class A

242
00:17:18.460 --> 00:17:23.880
wrapper and this div is nested within another day of that has a class of wrapper.

243
00:17:23.890 --> 00:17:29.570
Now I can't imagine a situation where we want that nested padding effect to actually take place.

244
00:17:29.710 --> 00:17:32.460
So what we can do is go into up.

245
00:17:32.590 --> 00:17:41.290
SS And let's just say that any wrapper that is nested within another wrapper should no longer have any

246
00:17:41.290 --> 00:17:42.530
horizontal padding.

247
00:17:42.670 --> 00:17:49.020
So it's just offset these values by saying padding left zero padding right zero.

248
00:17:49.510 --> 00:17:50.980
But save that.

249
00:17:51.640 --> 00:17:58.390
So now we still keep this nice original 18 pixels of horizontal padding but it doesn't get applied to

250
00:17:58.390 --> 00:18:00.100
any nested wrappers.

251
00:18:00.190 --> 00:18:05.850
And I think that looks a lot cleaner and we still maintain the desired layout on larger screens.

252
00:18:06.070 --> 00:18:07.110
Perfect.

253
00:18:07.130 --> 00:18:12.210
That's actually going to bring this lesson to a close in our next lesson.

254
00:18:12.220 --> 00:18:19.670
We will begin transforming this content into the two call them layer that we see in the design file.

255
00:18:19.690 --> 00:18:26.020
This is going to be a lot of fun because we can reuse that column layout pattern down below in the other

256
00:18:26.020 --> 00:18:27.460
sections of the site.

257
00:18:27.490 --> 00:18:30.940
It's going to be a great exercise in writing reusable code.

258
00:18:31.150 --> 00:18:32.530
Let's keep rolling along.

259
00:18:32.560 --> 00:18:35.250
And I will see you in the next lesson.
