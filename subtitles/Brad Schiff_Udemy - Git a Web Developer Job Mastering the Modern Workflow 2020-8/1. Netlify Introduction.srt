1
00:00:02,370 --> 00:00:03,620
Hello everyone.

2
00:00:03,720 --> 00:00:07,140
In this lesson we are going to get started with net flying.

3
00:00:07,200 --> 00:00:10,110
So right now I want you to follow along with me.

4
00:00:10,140 --> 00:00:14,550
Our first step is to sign up for a completely free Net lift account.

5
00:00:14,550 --> 00:00:17,720
We don't even need to enter a credit card so you can visit.

6
00:00:17,730 --> 00:00:24,840
Net Lafite dot com or you can just google for net LA fi by the end of this video you'll understand what

7
00:00:24,840 --> 00:00:26,370
net LA Fi is.

8
00:00:26,370 --> 00:00:32,420
But for now all you need to know is that it's sort of an alternative to traditional web hosting right.

9
00:00:32,430 --> 00:00:37,180
They host our Web site files for us and make our Web site available to the public.

10
00:00:37,380 --> 00:00:43,170
Anyways right now all we need to know is that we are interested in their completely free plan so you

11
00:00:43,170 --> 00:00:46,000
can either click on sign up or use the.

12
00:00:46,020 --> 00:00:48,150
Get started for free button.

13
00:00:48,150 --> 00:00:54,240
Now you are free to sign up with your GitHub get lab or bit bucket account but if you're like me you

14
00:00:54,240 --> 00:00:57,800
usually just sign up with a traditional email registration.

15
00:00:58,080 --> 00:01:00,090
So that's what I'm going to click on email.

16
00:01:01,110 --> 00:01:01,370
OK.

17
00:01:01,380 --> 00:01:06,420
And then obviously just pause this video lesson while you're entering your new email and password to

18
00:01:06,420 --> 00:01:12,630
sign up once you submit that form you should see a screen saying that net lo fi is e-mailing you.

19
00:01:12,630 --> 00:01:14,230
So just go to your email inbox.

20
00:01:14,250 --> 00:01:19,200
You might need to check your spam folder but there will be an e-mail from nettled fi with a link that

21
00:01:19,200 --> 00:01:22,560
you click on to activate or verify your account.

22
00:01:22,680 --> 00:01:26,370
Once you click on that link you should be taken to a screen that looks something like this.

23
00:01:26,460 --> 00:01:29,670
I'm going to close this quick start guide.

24
00:01:29,670 --> 00:01:30,120
OK.

25
00:01:30,120 --> 00:01:35,190
And from here we have a few different ways to create our first site with net lo fi.

26
00:01:35,440 --> 00:01:41,550
So one way would be to literally just drag and drop a folder from your computer into this area of the

27
00:01:41,550 --> 00:01:42,360
screen.

28
00:01:42,360 --> 00:01:46,530
We're not going to do that because that's not a very powerful workflow.

29
00:01:46,530 --> 00:01:56,050
Instead we want to create a new site from get so click this new site from get button from the screen.

30
00:01:56,060 --> 00:01:58,870
You can choose where your repo lives.

31
00:01:58,880 --> 00:02:04,940
So you need to already have an account with either get hub get lab or bit bucket.

32
00:02:04,940 --> 00:02:09,490
Now if you've made it this far in the course you already have a get hub account.

33
00:02:09,650 --> 00:02:15,660
So let's click on get hub that should open a new pop up window.

34
00:02:15,660 --> 00:02:20,880
So make sure that your browser didn't automatically block the pop up window but essentially this window

35
00:02:20,910 --> 00:02:28,670
is GitHub dot com and it's asking us Do we really want to give net low fi access to our github account.

36
00:02:28,680 --> 00:02:30,390
We absolutely do.

37
00:02:30,390 --> 00:02:31,640
So you have a couple of options.

38
00:02:31,650 --> 00:02:39,120
You can grant Nettlefold access to all repositories in your get up account or you can just select specific

39
00:02:39,120 --> 00:02:40,050
repos.

40
00:02:40,050 --> 00:02:41,650
So I'll leave that up to you.

41
00:02:41,730 --> 00:02:48,210
But if you do select these specific repo option be sure to choose the travel site repo that you just

42
00:02:48,210 --> 00:02:51,230
pushed to in the previous lesson.

43
00:02:51,240 --> 00:02:51,480
OK.

44
00:02:51,480 --> 00:02:58,070
Down at the very bottom of this pop up I'm going to click the install button cool.

45
00:02:58,090 --> 00:03:04,450
So back in this net lift window or net the fly account now has permission to talk to and get data from

46
00:03:04,510 --> 00:03:08,590
our get hub account for this new project we're setting up a net lift.

47
00:03:08,740 --> 00:03:12,490
We need to choose which GitHub repo it's associated with.

48
00:03:13,330 --> 00:03:15,770
So for me that is the travel site repo.

49
00:03:15,790 --> 00:03:19,980
So I will click on that OK.

50
00:03:19,980 --> 00:03:22,410
We can leave these options the way they are.

51
00:03:22,470 --> 00:03:25,590
You are the owner and we want to work with our master branch

52
00:03:28,320 --> 00:03:32,940
this is where things get interesting basic build settings.

53
00:03:32,940 --> 00:03:40,920
So we see there is a field here titled Build the command click into this field and type NPM run build.

54
00:03:41,610 --> 00:03:44,040
We also see published directory.

55
00:03:44,460 --> 00:03:50,730
So in this field go ahead and type in Docs a little bit later in the video we will circle back to why

56
00:03:50,730 --> 00:03:52,800
this is so cool and powerful.

57
00:03:52,800 --> 00:03:58,950
But for now all you need to know is that if net lift is aware of our build command that can create some

58
00:03:58,950 --> 00:04:04,380
very powerful automation anyways we can circle back to that later for now.

59
00:04:04,410 --> 00:04:06,870
Go ahead and click the deploy site button

60
00:04:09,850 --> 00:04:11,830
so this is a randomly generated name.

61
00:04:11,830 --> 00:04:16,840
Yours will be different but you should see site deploy in progress.

62
00:04:17,110 --> 00:04:22,000
Now through the magic of video editing and post-production I actually just sat here and waited maybe

63
00:04:22,300 --> 00:04:28,900
20 to 40 seconds and this turned into a link that is ready to be clicked on again your name will be

64
00:04:28,900 --> 00:04:29,350
different.

65
00:04:29,350 --> 00:04:30,690
This is randomly generated.

66
00:04:30,700 --> 00:04:34,000
But go ahead and click on your link or open it in a new tab.

67
00:04:35,370 --> 00:04:41,250
Awesome and there is our Web site and you can share this link with anyone in the world your friends

68
00:04:41,250 --> 00:04:43,240
your family your colleagues.

69
00:04:43,260 --> 00:04:47,860
Now you might be thinking to yourself didn't we already set this up with GitHub pages.

70
00:04:47,980 --> 00:04:48,150
Right.

71
00:04:48,150 --> 00:04:52,120
You already had a public GitHub pages linked that you could share with the world.

72
00:04:52,560 --> 00:04:54,020
Well yes that's true.

73
00:04:54,120 --> 00:04:59,000
But our net lo fi powered site has so many extra features.

74
00:04:59,070 --> 00:05:04,470
So right now let's circle back and I want to show you one of the biggest reasons I'm a huge fan of net

75
00:05:04,470 --> 00:05:08,370
lo fi and that is automated builds.

76
00:05:08,370 --> 00:05:13,760
Now before we worry about what that means or how it works let's first give ourselves a goal.

77
00:05:13,980 --> 00:05:20,400
Let's imagine that our goal is to update our public Web site so that this headline ends with an exclamation

78
00:05:20,400 --> 00:05:21,500
point.

79
00:05:21,600 --> 00:05:23,250
So let's make that happen.

80
00:05:23,250 --> 00:05:29,100
We know that we would need to jump back to our text editor and within our app folder jump and index

81
00:05:29,110 --> 00:05:30,830
on HDMI all.

82
00:05:30,960 --> 00:05:33,000
For me it's around line number 47.

83
00:05:33,060 --> 00:05:36,200
So I will add an exclamation point right here.

84
00:05:37,200 --> 00:05:39,560
Let's go ahead and save this file.

85
00:05:39,660 --> 00:05:44,940
However before we commit this into get and push it to get hub I first want to do something that might

86
00:05:44,940 --> 00:05:46,510
seem a bit extreme.

87
00:05:46,530 --> 00:05:55,680
So not only am I not going to run NPM run build I'm also going to delete the entire docs folder.

88
00:05:55,680 --> 00:06:01,770
I want you to do this as well so you can either delete it within your text editor or just within your

89
00:06:01,770 --> 00:06:09,370
computer's file explorer going to travel site and delete this entire public docs folder so I'm just

90
00:06:09,370 --> 00:06:10,590
moving it to the trash.

91
00:06:11,380 --> 00:06:13,770
OK now let's commit those changes.

92
00:06:13,930 --> 00:06:20,210
So if I run get status here are all of the changes.

93
00:06:20,310 --> 00:06:23,190
So yes I modified the index on each to AML.

94
00:06:23,220 --> 00:06:28,600
But you can see I also deleted every single file that was in the docs folder.

95
00:06:28,890 --> 00:06:39,010
So I want to stage all of those changes so type this in with me get add dash uppercase a OK then let's

96
00:06:39,040 --> 00:06:41,120
commit that so get commit.

97
00:06:41,830 --> 00:06:42,820
Let's leave a message.

98
00:06:42,880 --> 00:06:56,030
So dash a lowercase M and then space in quotes let's say changed headline and deleted docs folder as

99
00:06:56,090 --> 00:07:01,690
net lo fi will now take care of bills.

100
00:07:01,820 --> 00:07:03,160
Be sure to end that with a quote.

101
00:07:03,200 --> 00:07:04,120
Let's push enter.

102
00:07:04,840 --> 00:07:05,260
OK.

103
00:07:05,260 --> 00:07:08,960
And then let's push our repo up to get hub.

104
00:07:08,960 --> 00:07:15,190
So get push origin master now.

105
00:07:15,200 --> 00:07:16,050
Here's the cool part.

106
00:07:16,070 --> 00:07:22,250
If we go back into our net lo fi control panel or just the overview screen for this project I just had

107
00:07:22,250 --> 00:07:27,950
to manually refresh the screen usually I don't think you need to manually refresh but now you can see

108
00:07:28,340 --> 00:07:34,970
net lo fi detected that we pushed a new change to our github and net lo fi has published the newest

109
00:07:34,970 --> 00:07:35,870
version of our site.

110
00:07:35,870 --> 00:07:41,370
So if I go back to the net defy U.R.L. and refresh awesome.

111
00:07:41,370 --> 00:07:43,730
There we see that exclamation point.

112
00:07:43,830 --> 00:07:45,180
Now this is pretty cool.

113
00:07:45,180 --> 00:07:52,230
This means that when we push our latest changes to our github repo not only does net lift I detect that

114
00:07:52,230 --> 00:08:01,350
change but net lo fi also runs the NPM run build task for us right that task that optimizes our files

115
00:08:01,590 --> 00:08:07,570
to be delivered to the public so whenever net Lafite detects that we push a change to get hub net lift

116
00:08:07,580 --> 00:08:17,760
I will see our package dot Jason File and the net lo fi hardware actually downloads all of the NPM dependencies.

117
00:08:17,910 --> 00:08:25,190
Once it's done then it actually runs the NPM run build task on their net lifting hardware.

118
00:08:25,440 --> 00:08:32,660
And since we told Nettlefold that our public directory is the docs directory it all just works flawlessly.

119
00:08:32,700 --> 00:08:40,590
Big picture this means that our workflow is now super smooth so locally on your computer you can run

120
00:08:40,680 --> 00:08:48,060
NPM run dev to spin up your local web packet dev server right so you get on the fly live reloads for

121
00:08:48,060 --> 00:08:54,690
CSX as javascript and HDMI out once you're done working you just commit your changes to get push that

122
00:08:54,690 --> 00:08:56,800
up to get hub and that's it.

123
00:08:56,870 --> 00:09:01,320
Net LA Fi will copy your files and run your build task for you.

124
00:09:01,320 --> 00:09:06,120
And it goes without saying MetLife I also hosts those files for you.

125
00:09:06,270 --> 00:09:12,490
So net lo fi is like a web hosting company that actually understands modern web development.

126
00:09:12,510 --> 00:09:18,630
Now I will point out that because we deleted our docs folder from our repo our github pages site will

127
00:09:18,630 --> 00:09:20,380
no longer work right.

128
00:09:20,400 --> 00:09:26,430
So if I go back into GitHub and click on settings for this repo down in the github pages area it says

129
00:09:26,760 --> 00:09:32,280
your side is having trouble building because there is no docs folder that's fine if you want to use

130
00:09:32,280 --> 00:09:38,490
get up pages instead of net lift by then obviously just don't delete your docs folder but if you're

131
00:09:38,490 --> 00:09:43,700
like me and you want to use Net LA fi we could even take things one step further.

132
00:09:43,850 --> 00:09:50,250
So back in our text editor even though net LA I will take care of builds for us there may come a time

133
00:09:50,250 --> 00:09:54,580
in the future where we need to adjust our build process.

134
00:09:54,630 --> 00:09:59,850
So imagine if we had to go into web page config and update or change the way that our site was being

135
00:09:59,850 --> 00:10:01,310
generated.

136
00:10:01,440 --> 00:10:08,780
In that case we would want to test the build process locally to make sure that it works as we'd expect.

137
00:10:08,970 --> 00:10:12,890
However and this is just personal preference for organization reasons.

138
00:10:12,900 --> 00:10:18,470
But I still wouldn't want that docs folder to be committed into the get repo.

139
00:10:18,600 --> 00:10:25,010
I really only want my source code in the repository so here's what I would do I would go into our get

140
00:10:25,020 --> 00:10:31,650
ignore file and it doesn't matter where in the get ignore file but you can see we're already ignoring

141
00:10:31,950 --> 00:10:33,740
node modules folder.

142
00:10:34,020 --> 00:10:39,290
So I would just add a new line and ignore the docs folder.

143
00:10:39,510 --> 00:10:40,910
Go ahead and save that.

144
00:10:40,920 --> 00:10:47,250
So now even if I did make changes to my Web patch config and I wanted to test my build process locally

145
00:10:47,850 --> 00:10:49,770
I could say NPM run build

146
00:10:53,150 --> 00:10:59,320
and yes that generates the docs folder however get isn't going to pay attention to that.

147
00:10:59,320 --> 00:11:05,440
So if I say get status the only change that it notices is that I modified get ignore.

148
00:11:05,540 --> 00:11:06,010
Cool.

149
00:11:06,010 --> 00:11:12,880
This way our get repository that's hosted on GitHub stays clean it only contains the actual source code.

150
00:11:12,940 --> 00:11:18,040
We don't even need to worry about the docs or the public folder because Nettlefold takes care of all

151
00:11:18,040 --> 00:11:21,720
of that before I commit and push this get ignore change.

152
00:11:21,730 --> 00:11:28,150
Why don't we also set this back to end with a period instead of an exclamation point.

153
00:11:28,180 --> 00:11:35,170
So back in index dot HD demo I will just change that back to a period save it if I run get status once

154
00:11:35,170 --> 00:11:36,130
again.

155
00:11:36,130 --> 00:11:36,490
Cool.

156
00:11:36,490 --> 00:11:39,980
Those are the only two changes that I want in the repository.

157
00:11:40,060 --> 00:11:50,920
I indeed do want to ignore my local copy of docs folder so get add dash a git commit changed headline

158
00:11:51,760 --> 00:11:57,450
and ignored the docs folder.

159
00:11:57,500 --> 00:12:06,720
Let's push that up to get up get push origin master we can jump back over to the net the fi Web site

160
00:12:07,180 --> 00:12:13,300
and if you click on the deploys tab you can actually see real time updates so you can see it's in the

161
00:12:13,300 --> 00:12:16,680
process of building right now as I'm watching this right.

162
00:12:16,720 --> 00:12:22,000
We see that commit message changed headline and ignored the docs folder and again through the magic

163
00:12:22,000 --> 00:12:27,910
of video editing I just sat here and waited maybe 20 seconds but you can see in real time it's updated

164
00:12:27,910 --> 00:12:29,710
to say published.

165
00:12:29,710 --> 00:12:33,520
So back at my net lo fi websites you are Elif I refresh.

166
00:12:33,520 --> 00:12:39,730
This is back to a period awesome if you want to try to make a minor CSX or JavaScript change just to

167
00:12:39,730 --> 00:12:41,650
make sure that things are working that's OK.

168
00:12:42,070 --> 00:12:47,310
But at this point we can rest assured that our workflow is now silky smooth.

169
00:12:47,500 --> 00:12:53,920
Now this automated build feature is just one of two main reasons I'm a huge fan of net lo fi and we're

170
00:12:53,920 --> 00:12:58,100
going to learn about reason number two in our very next lesson.

171
00:12:58,210 --> 00:12:59,300
I'll give you a hint.

172
00:12:59,320 --> 00:13:07,310
Net low fi makes it incredibly easy to begin working with cloud functions or we might call them a W.S.

173
00:13:07,330 --> 00:13:09,020
lambda functions.

174
00:13:09,070 --> 00:13:13,360
This next lesson is going to open up so many possibilities.

175
00:13:13,360 --> 00:13:20,740
We're going to be able to add backend or server side functionality to our otherwise static or front

176
00:13:20,740 --> 00:13:22,320
end based Web site.

177
00:13:22,330 --> 00:13:23,670
This is going to be a lot of fun.

178
00:13:23,770 --> 00:13:27,780
So let's keep things rolling and I will see you in the next lesson.
