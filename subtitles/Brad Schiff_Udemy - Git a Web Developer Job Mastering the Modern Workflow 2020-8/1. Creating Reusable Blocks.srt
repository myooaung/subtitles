1
00:00:05,180 --> 00:00:11,750
Hello everyone in this lesson we will get back to writing C Ss to be more specific.

2
00:00:11,750 --> 00:00:18,350
We will clean up the styling for this large hero block down at the mobile small screen view and also

3
00:00:18,350 --> 00:00:20,140
for all screen sizes.

4
00:00:20,150 --> 00:00:25,750
We will begin working on this intro section if we look at our design file.

5
00:00:25,760 --> 00:00:29,620
We see that that section is supposed to look like this.

6
00:00:29,660 --> 00:00:31,630
All right so let's get started.

7
00:00:31,640 --> 00:00:36,890
The first thing that I want to work on is cleaning up the mobile styles for this section.

8
00:00:36,920 --> 00:00:42,710
So the first problem that I noticed aside from these font sizes needing a bit of attention is the fact

9
00:00:42,710 --> 00:00:48,280
that this text is pushed up against the very far left and right edges of the device.

10
00:00:48,350 --> 00:00:53,080
And from a design perspective that is something that you want to avoid at all costs.

11
00:00:53,090 --> 00:00:59,090
So let's work on adding a bit of spacing or padding on the left and right sides.

12
00:00:59,330 --> 00:01:02,680
So let's jump into our text editor and make that happen.

13
00:01:02,780 --> 00:01:09,320
Now our first instinct might be to open up the large hero CSSA file since that is the block that we

14
00:01:09,320 --> 00:01:10,460
are looking at.

15
00:01:10,490 --> 00:01:16,370
However we need to ask ourselves is wanting content to not push up against the very edges of the screen

16
00:01:16,610 --> 00:01:22,540
unique to this block or is that a pattern that we could use again and again throughout the page.

17
00:01:22,670 --> 00:01:28,310
Well I think we can answer that by moving our eyes down the page about 100 pixels to this section.

18
00:01:28,370 --> 00:01:31,930
We don't want this content to push up against the far edges either.

19
00:01:32,060 --> 00:01:35,540
So clearly this is a design pattern that we're dealing with.

20
00:01:35,540 --> 00:01:41,690
So because this isn't unique to the large hero block instead of writing CSSA in this large high profile

21
00:01:41,900 --> 00:01:45,530
Let's go ahead and create a new module.

22
00:01:45,620 --> 00:01:51,390
Let's name this new file underscore wrapper dot CSX.

23
00:01:51,510 --> 00:01:58,770
Let's create a class named wrapper and let's give it a bit of padding on the left let's say 18 pixels.

24
00:01:58,830 --> 00:02:04,410
And let's also give it a bit of padding on the right so we can save this file and be sure to go into

25
00:02:04,410 --> 00:02:11,690
our main styles does CSSA file and include an import that points towards the new wrapper file.

26
00:02:11,790 --> 00:02:16,160
So go into the modules folder and grab underscore wrapper.

27
00:02:16,440 --> 00:02:17,970
Go ahead and save this file.

28
00:02:18,000 --> 00:02:22,220
And now we can use this new wrapper class in our HMO.

29
00:02:22,370 --> 00:02:25,570
So let's open up our index that each TNL file.

30
00:02:25,740 --> 00:02:28,680
Let's scroll down a bit to find the large heroes section.

31
00:02:28,680 --> 00:02:29,940
Here it is.

32
00:02:29,940 --> 00:02:34,230
So where do we want to add that new wrapper class to add left and right padding.

33
00:02:34,410 --> 00:02:40,740
Well we know that we want the picture itself to be full width so we don't want to apply any padding

34
00:02:40,890 --> 00:02:43,050
to this main parent element.

35
00:02:43,050 --> 00:02:51,530
We only want to apply the padding to the text content so down here this div that houses all of the text

36
00:02:51,530 --> 00:02:52,430
content.

37
00:02:52,430 --> 00:02:54,530
Let's go ahead and wrap these elements.

38
00:02:54,530 --> 00:02:57,330
So starting with the H one and ending with the paragraph.

39
00:02:57,350 --> 00:03:00,940
Let's wrap these within a new div an extra div.

40
00:03:00,980 --> 00:03:08,810
So right before the H-1 and create a new div and give it a class of room for and then right after this

41
00:03:08,810 --> 00:03:11,770
paragraph add the closing DIV tag.

42
00:03:11,900 --> 00:03:17,900
And then let's be sure to select from the paragraph to the age 1 and indent just to stay organised.

43
00:03:17,930 --> 00:03:19,670
So go ahead and say this.

44
00:03:19,820 --> 00:03:23,840
And if we check the browser We now have the spacing that we wanted.

45
00:03:23,840 --> 00:03:27,950
Next let's fine tune the font sizes for these elements.

46
00:03:28,220 --> 00:03:35,510
So to do that let's open up the large hero does CSSA file and I'm going to resize my text editor so

47
00:03:35,510 --> 00:03:38,170
we can see the browser in the background.

48
00:03:38,210 --> 00:03:42,290
So let's begin by fine tuning the font size for this your clarity element.

49
00:03:42,380 --> 00:03:44,950
Here is the CSA as rule for that element.

50
00:03:44,960 --> 00:03:50,300
So right now it has a baseline font size of 1.1 Renn and that is clearly too small.

51
00:03:50,330 --> 00:03:54,080
I think we can afford to have a larger font size even at the Mobile view.

52
00:03:54,080 --> 00:03:59,740
So let's try to round let's increase that just a little bit with 2.4.

53
00:03:59,780 --> 00:04:00,830
Looks good to me.

54
00:04:00,950 --> 00:04:05,430
And we can obviously afford to use a larger font size for larger screens.

55
00:04:05,780 --> 00:04:11,270
Now in an earlier lesson we set up three media queries for this element because we were really trying

56
00:04:11,270 --> 00:04:16,250
to drive home the point of how to use a mixin but in reality I think this is overkill.

57
00:04:16,400 --> 00:04:23,890
I think as soon as the screen gets to this at small size we can begin to use the full 4.8 size.

58
00:04:23,900 --> 00:04:29,580
So let's change this to four point eight RAM and let's just delete this at medium.

59
00:04:29,810 --> 00:04:32,800
And this at large mixing.

60
00:04:33,820 --> 00:04:34,250
All right.

61
00:04:34,280 --> 00:04:39,320
Next I think we can afford to bump up the font size of this one chip away element.

62
00:04:39,320 --> 00:04:41,570
So here is the rule for that element.

63
00:04:41,720 --> 00:04:46,200
Let's change the font size from 1.1 to 1.5.

64
00:04:46,220 --> 00:04:47,150
Looks good.

65
00:04:47,150 --> 00:04:50,730
Next let's shrink this font size quite a bit.

66
00:04:50,960 --> 00:04:51,830
But scroll down.

67
00:04:51,830 --> 00:04:55,910
In our CSSA file here is the rule for that element.

68
00:04:55,910 --> 00:05:03,500
Now we want to leave this font size in place for desktop large screens but we do want to set a smaller

69
00:05:03,500 --> 00:05:05,140
baseline font size.

70
00:05:05,210 --> 00:05:08,720
So let's copy this line down here.

71
00:05:08,740 --> 00:05:13,590
Let's use a mix in mix in as small.

72
00:05:13,630 --> 00:05:20,260
So once a browser window is large enough to at least be considered small instead of microscopic or tiny

73
00:05:20,260 --> 00:05:27,550
which is our baseline then we can use a font size of 1.8 But let's lower the baseline to something like

74
00:05:27,750 --> 00:05:31,980
1.1 that looks a lot better.

75
00:05:32,030 --> 00:05:36,260
Next let's lower the font size of this button for small screens.

76
00:05:36,440 --> 00:05:42,740
So the CSSA for this button element lives in the modules folder in the button CSSA file.

77
00:05:43,040 --> 00:05:49,350
And if we look in our HVM DML to find that button so I can search for get started today.

78
00:05:49,620 --> 00:05:56,570
Here is that element and we see that it is using a ben modifier class of button dash dash large.

79
00:05:56,570 --> 00:06:00,890
So back in the button file we want to edit this rule.

80
00:06:00,890 --> 00:06:04,590
So I think this font size is OK for larger screens.

81
00:06:04,940 --> 00:06:09,220
So let's create a mix in and say at small.

82
00:06:09,230 --> 00:06:15,920
Go ahead and use that font size but for smaller screens or for our line I don't think we even need to

83
00:06:15,920 --> 00:06:18,200
define a font size at all.

84
00:06:18,260 --> 00:06:20,960
So that will just default to one run.

85
00:06:21,080 --> 00:06:22,990
I think that looks a bit better.

86
00:06:23,000 --> 00:06:28,580
All right so at this point I think the large hero block looks excellent on a smartphone and all of our

87
00:06:28,580 --> 00:06:31,730
styles that target larger screens are still in place.

88
00:06:31,880 --> 00:06:35,740
Let's check the design files to see if we forgot anything for this block.

89
00:06:36,020 --> 00:06:39,800
I think the only thing we're missing is this blue bar that runs along the bottom.

90
00:06:39,920 --> 00:06:46,440
So let's add that in really quickly in our large hero does CSSA file that scroll to the very top.

91
00:06:46,970 --> 00:06:53,180
And within this main large hero role puts out a new line and we can create this bar by using the border

92
00:06:53,180 --> 00:06:54,830
property.

93
00:06:54,980 --> 00:06:57,600
So let's say border bottom.

94
00:06:57,860 --> 00:06:59,290
How thick should the border be.

95
00:06:59,330 --> 00:07:03,440
Let's see.

96
00:07:04,030 --> 00:07:06,120
That looks like about 10 pixels to me.

97
00:07:06,240 --> 00:07:12,150
So it's a border bottom 10 pixels solid and what color do we want to be.

98
00:07:12,390 --> 00:07:15,350
We can just use our main blue variable.

99
00:07:15,360 --> 00:07:22,050
Let me open the browser in the background and then save this CSSA file and we see that the blue bar

100
00:07:22,050 --> 00:07:27,320
was added but there's this tiny white gap in between the image and the blue bar.

101
00:07:27,480 --> 00:07:29,130
And we don't want that gap.

102
00:07:29,130 --> 00:07:36,090
The reason this gap exists is because our image element is an in line level element instead of a block

103
00:07:36,090 --> 00:07:37,210
level element.

104
00:07:37,440 --> 00:07:42,990
I will explain what that means in just a moment but first let's switch the image to be a block level

105
00:07:42,990 --> 00:07:45,240
element so we can get rid of the gap.

106
00:07:45,270 --> 00:07:52,830
So in our C Ss for the large block we don't currently have a rule that targets the image file.

107
00:07:52,890 --> 00:08:00,900
So in our each T.M. how let's scroll up a bit here is the picture element and we want to add a class

108
00:08:01,530 --> 00:08:06,530
on this image element that it contains so that we can select it with RC SS.

109
00:08:06,540 --> 00:08:12,350
So let's give it a class of large hero because that is the block that it belongs to.

110
00:08:12,630 --> 00:08:18,570
And using the Bembe system to signify that this is an element we use to underscores and let's name this

111
00:08:18,570 --> 00:08:20,610
element image.

112
00:08:20,610 --> 00:08:20,900
All right.

113
00:08:20,910 --> 00:08:27,760
Now back in our CSSA file we can select the image by creating a new rule.

114
00:08:27,900 --> 00:08:30,910
And let's just tell it to be a block level element.

115
00:08:31,110 --> 00:08:33,900
So as soon as I save this file the gap will disappear.

116
00:08:34,930 --> 00:08:36,070
And there you have it.

117
00:08:36,070 --> 00:08:37,810
Now if you're wondering how this works.

118
00:08:37,840 --> 00:08:44,960
Here's a quick explanation by default web browsers treat image elements as line level elements.

119
00:08:45,160 --> 00:08:45,880
What does that mean.

120
00:08:45,880 --> 00:08:47,510
What is an inline level element.

121
00:08:47,560 --> 00:08:53,140
Well it basically means that the browser thinks the image is similar to a line of text.

122
00:08:53,170 --> 00:08:59,620
Right so if we change this to in line the gap comes back and that's because when the browser thinks

123
00:08:59,620 --> 00:09:05,110
that this might be a line of text it wants to leave a little bit of room for the bottom part of certain

124
00:09:05,110 --> 00:09:07,050
letters that hang below the rule.

125
00:09:07,090 --> 00:09:10,750
So if you think of a G or a Y you get the idea.

126
00:09:10,750 --> 00:09:15,910
So by declaring that the image should be a block level element we are telling the web browser that it

127
00:09:15,910 --> 00:09:22,090
should treat the image almost as a div right so it treats it as a rectangle that can align perfectly

128
00:09:22,390 --> 00:09:26,260
without worrying about leaving any room for bottom parts of letters.

129
00:09:26,260 --> 00:09:28,210
All right let's change gears.

130
00:09:28,270 --> 00:09:32,400
So at this point our large hero block is complete.

131
00:09:32,470 --> 00:09:36,730
Now let's move on and begin styling this intro area.

132
00:09:36,970 --> 00:09:42,420
If we check out the design once again we see that that section should look like this.

133
00:09:42,430 --> 00:09:45,150
So the question becomes where do we begin.

134
00:09:45,310 --> 00:09:49,880
How do we begin to transform this into this.

135
00:09:50,150 --> 00:09:53,700
Well let's just work our way down from the top to the bottom.

136
00:09:53,740 --> 00:09:59,860
So the first piece of the design that I see is this empty space this white space here.

137
00:09:59,890 --> 00:10:07,030
So if we look in the browser that space doesn't exist now to create the vertical spacing that we want.

138
00:10:07,240 --> 00:10:14,570
Our first instinct might be to add bottom margin to the large block or to add top margin to this heading.

139
00:10:14,890 --> 00:10:20,660
But before we do either of those things I think we need to stop and ask ourselves a question is wanting

140
00:10:20,740 --> 00:10:28,480
vertical spacing between sections of the page unique to this area of content or is that a design pattern

141
00:10:28,480 --> 00:10:31,590
that we could reuse throughout the entire page.

142
00:10:31,810 --> 00:10:36,130
Well if we look at the design file we already noticed the spacing here.

143
00:10:36,170 --> 00:10:44,640
And if we scroll down a bit the next big section of the page is this our features area and it also features

144
00:10:44,670 --> 00:10:48,010
a fair amount of top padding or vertical spacing.

145
00:10:48,240 --> 00:10:54,270
And if we scroll down further the next big section of the page is this testimonials area and it also

146
00:10:54,270 --> 00:10:56,760
includes a fair bit of top padding or spacing.

147
00:10:57,000 --> 00:11:00,030
So I think it's fair to say that this is a design pattern.

148
00:11:00,030 --> 00:11:06,460
So to create spacing between the large block and this content let's create a new block.

149
00:11:06,510 --> 00:11:12,400
So in our text editor within the modules folder let's create a new file.

150
00:11:12,620 --> 00:11:20,170
Let's name this file underscore page dash section CSX.

151
00:11:20,250 --> 00:11:27,480
So let's create a class named page section and if we look at our design file this new class will have

152
00:11:27,480 --> 00:11:37,260
the responsibility of adding top padding and bottom padding for each section on the page so we can just

153
00:11:37,260 --> 00:11:38,610
say padding.

154
00:11:38,910 --> 00:11:42,670
Let's try four and a half rim space zero.

155
00:11:42,690 --> 00:11:48,030
So this is C-s a shorthand this value will be used for the top and bottom padding values and we don't

156
00:11:48,030 --> 00:11:52,890
want any horizontal padding so we add a zero for the left and right values.

157
00:11:52,890 --> 00:12:01,380
So let's say this and let's be sure to open up our main styles that CSSA file and import in this new

158
00:12:01,560 --> 00:12:03,550
page section module.

159
00:12:03,650 --> 00:12:08,030
So modules folder underscore page section.

160
00:12:08,130 --> 00:12:09,460
So let's save this.

161
00:12:09,480 --> 00:12:14,920
And now we can use the new page section class in our HVM.

162
00:12:15,240 --> 00:12:18,680
So scroll down and are h DML.

163
00:12:18,930 --> 00:12:24,800
We see that there is already a div that is wrapped around all of the content that begins here.

164
00:12:25,940 --> 00:12:29,760
It ends here right before the our features section begins.

165
00:12:29,760 --> 00:12:35,420
So this is the perfect div to add our page section class too.

166
00:12:35,790 --> 00:12:39,860
So let's save this and check out the browser.

167
00:12:40,530 --> 00:12:42,560
And there is our vertical spacing.

168
00:12:42,600 --> 00:12:48,090
All right the next thing that I think we should address is the fact that this content is pushed up against

169
00:12:48,090 --> 00:12:50,660
the very far left edge of the screen.

170
00:12:50,880 --> 00:12:56,490
Now earlier in the lesson we already created a block named wrapper that can help us out here.

171
00:12:56,700 --> 00:13:03,810
So in our age TNL within the div that we just added a class of page section to let's create another

172
00:13:03,860 --> 00:13:09,820
inner div with a class of wrapper let's indent all of this content

173
00:13:12,870 --> 00:13:16,640
and after it be sure to include a closing div tag.

174
00:13:17,120 --> 00:13:24,840
So if we save this in the browser we see that the content is no longer flush against the left edge.

175
00:13:24,840 --> 00:13:30,750
Now while I think that's enough on a smartphone or a small screen I think we need to take things one

176
00:13:30,750 --> 00:13:31,610
step further.

177
00:13:31,620 --> 00:13:33,100
For large screens.

178
00:13:33,270 --> 00:13:39,660
So for example if we look at the design file we see that throughout the design there seems to be a max

179
00:13:39,720 --> 00:13:44,770
width of about twelve hundred pixels.

180
00:13:45,000 --> 00:13:51,810
So back in the browser We don't want the content to be as wide as the screen because if I had a 30 inch

181
00:13:51,810 --> 00:13:58,290
monitor in my browser window was full screen it would result in text lines that are way too long for

182
00:13:58,290 --> 00:14:00,500
the human eye to comfortably read.

183
00:14:00,690 --> 00:14:03,520
So lets do this within our.

184
00:14:03,520 --> 00:14:07,500
SS in the wrapper of CSSA file.

185
00:14:07,740 --> 00:14:12,740
Let's add a max width of twelve hundred pixels.

186
00:14:13,810 --> 00:14:21,160
So we see that that creates a maximum width but we want it to be horizontally centered in the screen.

187
00:14:21,160 --> 00:14:24,640
So let's also say margin left.

188
00:14:24,640 --> 00:14:25,630
Auto.

189
00:14:25,660 --> 00:14:26,470
Margin right.

190
00:14:26,500 --> 00:14:28,990
Audio.

191
00:14:29,150 --> 00:14:30,700
There we have it.

192
00:14:30,740 --> 00:14:36,380
Now I know we are supposed to be focusing on this section of content but really quickly I want to show

193
00:14:36,380 --> 00:14:43,220
you an example of why it's worth our energy and effort to think of our design in terms of reusable blocks

194
00:14:43,460 --> 00:14:45,590
and repeatable design patterns.

195
00:14:45,590 --> 00:14:50,840
So for example let's look at the design file and let's scroll down a bit and change gears and look at

196
00:14:50,840 --> 00:14:58,930
the our features section watch how far we can get styling this section by simply reusing existing blocks.

197
00:14:59,060 --> 00:15:03,810
Let's find this content in our each TNL.

198
00:15:03,890 --> 00:15:09,890
So if I search for our features we see that there is already a div with an idea of features.

199
00:15:09,920 --> 00:15:19,790
Let's give this div a class of page section so in the browser we see that that creates the vertical

200
00:15:19,790 --> 00:15:25,010
padding above and below our feature section.

201
00:15:25,010 --> 00:15:28,420
Next let's give the section a blue background.

202
00:15:28,430 --> 00:15:35,730
Let's go ahead and give this section a modifier class named page section dash dash blue.

203
00:15:36,140 --> 00:15:39,600
And then in our page section CSSA file.

204
00:15:39,740 --> 00:15:48,480
Let's create a new rule that targets that blue modifier class and we can just say background color mean

205
00:15:48,480 --> 00:15:54,890
blue variable and let's make the text white.

206
00:15:54,910 --> 00:16:01,210
So now in the browser We now have a full with blue background section just like the design file and

207
00:16:01,210 --> 00:16:05,080
we can use the wrapper class to limit the content to this middle.

208
00:16:05,080 --> 00:16:09,320
Twelve hundred pixels instead of using the full screen.

209
00:16:09,340 --> 00:16:19,300
So in our HVM out within this div Let's create another inner div give it a class of wrapper let's indent

210
00:16:19,360 --> 00:16:20,580
all of this content

211
00:16:23,280 --> 00:16:31,200
and close out that div that we began and in the browser we have now centered the content.

212
00:16:31,200 --> 00:16:31,640
All right.

213
00:16:31,650 --> 00:16:37,950
So hopefully that gives you an idea of just how useful it can be to identify patterns and create reusable

214
00:16:37,950 --> 00:16:39,210
blocks.

215
00:16:39,210 --> 00:16:44,020
Now let's shift our focus back up to the content that we were working on earlier.

216
00:16:44,100 --> 00:16:50,550
This will actually bring this particular lesson to a close but in our next lesson we will pick up right

217
00:16:50,550 --> 00:16:51,770
where we left off.

218
00:16:52,050 --> 00:16:56,190
Let's keep rolling along and I will see you in the next lesson.
