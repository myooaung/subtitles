WEBVTT
1
00:00:04.860 --> 00:00:05.810
Hello everyone.

2
00:00:06.240 --> 00:00:11.820
In this lesson we will begin styling our header navigation menu for small screens.

3
00:00:11.820 --> 00:00:15.980
Let's dive right in and get started in our previous lesson.

4
00:00:15.990 --> 00:00:22.410
We wrote javascript so that when we tap on this top right icon the navigation is revealed.

5
00:00:22.410 --> 00:00:28.770
Our goal for this lesson is to use CSX and adjust the design so that the layout for this content doesn't

6
00:00:28.770 --> 00:00:30.740
look broken and really quickly.

7
00:00:30.740 --> 00:00:32.670
Just so you and I are on the same page.

8
00:00:32.850 --> 00:00:36.250
Here's a preview of what I want it to look like.

9
00:00:36.280 --> 00:00:38.250
Let's go ahead and get to work.

10
00:00:38.410 --> 00:00:43.390
The first thing we should do is to push the navigation content down further from the top of the page

11
00:00:43.690 --> 00:00:47.000
so that it's no longer being overlapped by our logo.

12
00:00:47.080 --> 00:00:53.800
To do that let's jump over to our text editor and let's open up our site header CSX file which lives

13
00:00:53.860 --> 00:00:59.060
in app assets styles modules.

14
00:00:59.110 --> 00:01:01.460
And here it is site header.

15
00:01:01.510 --> 00:01:04.230
Let's scroll down to the very bottom of the file.

16
00:01:04.290 --> 00:01:06.970
Here is the menu content rule that we are looking for.

17
00:01:07.330 --> 00:01:13.380
Let's adjust the baseline style to give it padding top of 100 pixels.

18
00:01:13.390 --> 00:01:16.330
Let's save this and see how it looks in the browser.

19
00:01:16.330 --> 00:01:16.750
All right.

20
00:01:16.750 --> 00:01:22.840
So for small screens that push this content down so it's no longer hidden behind the logo but that 100

21
00:01:22.960 --> 00:01:28.020
pixels of top padding was also applied on larger screens which we don't want.

22
00:01:28.030 --> 00:01:35.350
So over in our CSX within this menu content rule we already have a mix in targeting medium screens and

23
00:01:35.350 --> 00:01:36.250
larger.

24
00:01:36.250 --> 00:01:44.030
So within there let's say padding top zero so desktop is looking good again.

25
00:01:44.130 --> 00:01:46.960
And now we can move on to our next step for mobile.

26
00:01:46.980 --> 00:01:51.990
Currently the get in touch button and the navigation links are floated to the right.

27
00:01:51.990 --> 00:01:57.900
This is easier to see on the large desktop version but for mobile I think we should remove those floats

28
00:01:57.960 --> 00:02:01.010
so that the content is just positioned naturally.

29
00:02:01.020 --> 00:02:03.300
Let's begin with the get in touch button.

30
00:02:03.300 --> 00:02:10.210
So back in our text editor if we scroll to the top of this file we see a rule for the button container

31
00:02:10.240 --> 00:02:11.110
element.

32
00:02:11.210 --> 00:02:14.470
Let's just wrap this float right property within a media query.

33
00:02:15.140 --> 00:02:27.000
So let's say app Mixon in at medium and then let's just cut and paste float right into that mix in let's

34
00:02:27.000 --> 00:02:30.030
go ahead and save this.

35
00:02:30.120 --> 00:02:35.850
All right now before we remove the float from the navigation links let's first set this entire menu

36
00:02:35.850 --> 00:02:39.090
content div to be text aligned center.

37
00:02:39.300 --> 00:02:50.670
So within our CSX if we scroll back down within the menu content rule let's simply say text align center.

38
00:02:50.790 --> 00:02:52.240
I think that looks better.

39
00:02:52.320 --> 00:02:57.720
Now let's go and remove the float from these navigation links the styles for those navigation links

40
00:02:57.750 --> 00:03:03.210
live within a different CSX module file which is named primary nav.

41
00:03:03.210 --> 00:03:09.020
Now currently this entire primary nav element is being floated to the right with this modifier class.

42
00:03:09.030 --> 00:03:14.490
Now if we want to remove this float for small screens we can simply wrap this declaration with an immediate

43
00:03:14.490 --> 00:03:19.450
query so we can say at Mixon at medium.

44
00:03:20.070 --> 00:03:24.320
And then just cut and paste float right to live within the media query.

45
00:03:24.330 --> 00:03:29.490
Now before we save this why don't we also adjust these primary nav lengths so that they all fit on a

46
00:03:29.490 --> 00:03:30.280
single line.

47
00:03:30.300 --> 00:03:35.340
And so that they are horizontally centered in order to horizontally center these links we need to tell

48
00:03:35.400 --> 00:03:39.480
each allied list item to no longer be floated to the left.

49
00:03:39.480 --> 00:03:47.110
So back in our text editor within this rule that selects the fly elements let's create a media query.

50
00:03:47.190 --> 00:03:55.170
So at Mixon at medium and only within this media query do we want to float the list items to the left.

51
00:03:55.170 --> 00:04:01.800
So float left and then we want to delete float left from the baseline styles and let's set the list

52
00:04:01.800 --> 00:04:04.880
items by default to be inline block.

53
00:04:04.920 --> 00:04:07.190
So display inline block.

54
00:04:07.320 --> 00:04:12.930
This will allow them to be horizontally centered but then within our media query we can reset that by

55
00:04:12.930 --> 00:04:14.830
saying display block.

56
00:04:15.240 --> 00:04:21.930
Let's go ahead and save this so we can see that these links are attempting to be center aligned.

57
00:04:21.930 --> 00:04:27.840
Now we just need to free up a bit of space so that the third link testimonials can fit on the same line.

58
00:04:27.870 --> 00:04:30.980
So back in RC SS there's padding right.

59
00:04:30.990 --> 00:04:36.390
Twenty pixels is what's creating the horizontal gap between each of our three links.

60
00:04:36.390 --> 00:04:41.520
However if we stop and think about it for a second the final link doesn't need to create a gap to its

61
00:04:41.520 --> 00:04:43.800
right because it's the final item.

62
00:04:43.800 --> 00:04:46.710
There isn't going to be another link sitting to its right.

63
00:04:46.710 --> 00:04:53.290
So what we can do to save space for small screens is say the list item that is the last child.

64
00:04:53.310 --> 00:04:59.000
So the final list item in the list it should have padding right of zero.

65
00:04:59.040 --> 00:05:03.460
Now while this is what we want for small screens we do want to leave that padding right intact.

66
00:05:03.480 --> 00:05:12.240
Even for this final list item for larger screens so we can say at Mixon at medium go ahead and reapply

67
00:05:12.300 --> 00:05:14.400
the 20 pixels of right padding.

68
00:05:14.400 --> 00:05:19.740
Now if we save this and check out the browser we see that that still didn't free up enough horizontal

69
00:05:19.740 --> 00:05:23.770
space to have the third link testimonials fit on the same line.

70
00:05:23.790 --> 00:05:30.240
So what we can do within our main list item rule is lower this 20 pixels padding right to something

71
00:05:30.240 --> 00:05:36.690
like 7 and this will be applied for small screens and then within this media query we can say that larger

72
00:05:36.690 --> 00:05:40.690
screens can continue to use our original 20 pixels.

73
00:05:40.800 --> 00:05:46.700
So let's save this and now we see that all three links fit on the same line.

74
00:05:46.710 --> 00:05:52.380
Now before we continue to fine tune the spacing and styling of these links I think we should first work

75
00:05:52.440 --> 00:05:58.950
on making this navigation content easier to read meaning let's add a semi transparent background color

76
00:05:59.190 --> 00:06:01.030
to this entire header area.

77
00:06:01.110 --> 00:06:07.260
When the mobile menu is expanded to do this we can modify our javascript from our previous lesson to

78
00:06:07.260 --> 00:06:12.870
also add a modifier class to the entire site header and then we can target that modified class with

79
00:06:12.870 --> 00:06:15.290
our C Ss to add the background color.

80
00:06:15.300 --> 00:06:20.540
So let's go ahead and open up the mobile menu JavaScript file so over in our text editor.

81
00:06:20.580 --> 00:06:25.960
It lives in app assets Scripps modules.

82
00:06:26.010 --> 00:06:26.490
Here it is.

83
00:06:26.490 --> 00:06:27.750
Mobile menu.

84
00:06:27.930 --> 00:06:33.420
So first within our constructor let's add a new property that selects the entire site header element

85
00:06:33.420 --> 00:06:34.560
from the dom.

86
00:06:34.620 --> 00:06:40.080
So let's name this property site header and that should equal.

87
00:06:40.080 --> 00:06:43.830
Document doc query selector.

88
00:06:43.830 --> 00:06:46.610
And it has a class of site header.

89
00:06:47.010 --> 00:06:47.400
All right.

90
00:06:47.400 --> 00:06:51.350
Now we can use this property down within the toggle the menu method.

91
00:06:51.600 --> 00:07:03.150
Let's create a new line and say this dot site header dot class list dot toggle and let's use a CSX class

92
00:07:03.150 --> 00:07:05.780
name of site header Dash.

93
00:07:05.820 --> 00:07:08.920
Dash is expanded.

94
00:07:09.240 --> 00:07:15.300
Let's go ahead and save this file and then jump back into our site header CSX file and let's scroll

95
00:07:15.300 --> 00:07:19.600
back to the top now towards the top of this main site header rule.

96
00:07:19.710 --> 00:07:25.200
Let's create a new modifier we can use the ampersand symbol so we don't have to type out site header

97
00:07:25.200 --> 00:07:29.880
again and then we can just type Dash Dash is expanded.

98
00:07:29.880 --> 00:07:30.290
All right.

99
00:07:30.300 --> 00:07:35.340
And when the site header has this modified class applied to it we want to give it a semi transparent

100
00:07:35.340 --> 00:07:36.650
background color.

101
00:07:36.870 --> 00:07:40.900
So let's say background color are GPA.

102
00:07:41.130 --> 00:07:43.560
Let's use our main blue variable.

103
00:07:43.560 --> 00:07:48.910
And in terms of transparency let's say that this background color should be fifty five percent visible.

104
00:07:48.930 --> 00:07:52.560
Let's go ahead and save this and check things out in the browser.

105
00:07:52.560 --> 00:07:58.980
If we click this top right icon this looks nice but I think it would be even better if the menu faded

106
00:07:58.980 --> 00:08:00.720
into view gradually.

107
00:08:00.720 --> 00:08:08.010
So back in our CSX within the baseline rule for the site header element let's add the transition property

108
00:08:08.460 --> 00:08:14.280
and we can say that when this elements background color changes we want it to gradually transition to

109
00:08:14.280 --> 00:08:17.740
the new value over the course of a certain period of time.

110
00:08:17.760 --> 00:08:20.380
So I want the transition or fade to be fairly quick.

111
00:08:20.430 --> 00:08:22.770
So let's say point three seconds.

112
00:08:22.770 --> 00:08:26.380
So this is about a third of a second or 300 milliseconds.

113
00:08:26.430 --> 00:08:29.430
And by default this transition will be linear.

114
00:08:29.580 --> 00:08:34.500
But I think transition style of ease out looks especially nice.

115
00:08:34.560 --> 00:08:38.970
So let's go ahead and save this and then take it for a spin in the browser.

116
00:08:39.000 --> 00:08:45.730
So now when we click this top right icon the blue background of the menu gradually fades into view.

117
00:08:45.780 --> 00:08:50.980
Let's also set up the actual menu content itself to also gradually fade in.

118
00:08:51.120 --> 00:08:54.540
So back in RC SS within our site header file.

119
00:08:54.570 --> 00:09:02.460
Let's scroll down and within our menu content rule we are currently using display none to initially

120
00:09:02.460 --> 00:09:09.850
hide the content but let's actually delete this and replace it with opacity 0.

121
00:09:09.870 --> 00:09:16.170
So this way the content will still be hidden initially but once our is visible modifier class is added

122
00:09:16.470 --> 00:09:24.540
Let's delete this display block and we can gradually fade to an opacity of 1 which is fully visible

123
00:09:24.900 --> 00:09:30.630
and then back within our baseline rule for this element we do want to specify that we want the transition

124
00:09:31.050 --> 00:09:37.290
for the opacity property to gradually change over the course of about a third of a second and let's

125
00:09:37.290 --> 00:09:40.080
use the easy out transition style again.

126
00:09:40.080 --> 00:09:44.370
And before we save this and check things out in the browser I want to point out that because we are

127
00:09:44.370 --> 00:09:50.970
no longer using display none to hide this content and we are instead using opacity This means that even

128
00:09:50.970 --> 00:09:56.130
though the content will be invisible initially it will still exist in the browser and it could be clicked

129
00:09:56.130 --> 00:10:01.570
on and we don't want the user to be able to accidentally click on invisible content.

130
00:10:01.590 --> 00:10:08.550
So what we can do is use z index and provide a negative value to ensure that this menu content when

131
00:10:08.550 --> 00:10:14.190
it's hidden sits beneath all the other content on the page so that it can't be accidentally clicked

132
00:10:14.190 --> 00:10:14.400
on.

133
00:10:14.730 --> 00:10:21.060
And if we're going to use the index we also need to say that this element is positioned relative.

134
00:10:21.060 --> 00:10:23.970
Otherwise the browser won't acknowledge our z index value.

135
00:10:24.510 --> 00:10:24.810
All right.

136
00:10:24.840 --> 00:10:30.150
And then down within our is visible class when the content is ready to be visible we simply give it

137
00:10:30.240 --> 00:10:32.250
a z index of 1.

138
00:10:32.340 --> 00:10:37.110
And remember we only wanted the content to be hidden initially for small screens.

139
00:10:37.140 --> 00:10:42.570
So within this media query for medium screens and larger instead of making the content visible with

140
00:10:42.630 --> 00:10:43.510
display block.

141
00:10:43.530 --> 00:10:50.130
Let's update this to use opacity 1 and let's also tell medium screens and larger that they can use as

142
00:10:50.130 --> 00:10:53.120
the index value of one from the get go.

143
00:10:53.130 --> 00:10:54.830
All right now before we save this.

144
00:10:54.870 --> 00:11:00.780
Now that we are changing multiple properties on this element both its opacity and its Zi index in this

145
00:11:00.780 --> 00:11:01.710
transition line.

146
00:11:01.710 --> 00:11:08.900
Let's change this from opacity to say that we simply want to transition all properties or everything.

147
00:11:08.940 --> 00:11:12.030
All right let's go ahead and save this and check out the browser.

148
00:11:12.150 --> 00:11:18.220
And when we click the top right icon not only does the blue background fade in gradually but now our

149
00:11:18.220 --> 00:11:20.530
actual content fades in as well.

150
00:11:20.530 --> 00:11:24.440
Let's take things a step further and add a neat zoom out effect.

151
00:11:24.520 --> 00:11:29.080
So check this out within the baseline rule for this menu content element.

152
00:11:29.530 --> 00:11:35.470
Let's give it a new property of Transform and let's initially make the content look a bit bigger than

153
00:11:35.470 --> 00:11:38.830
we want it to end up so we can say scale.

154
00:11:38.830 --> 00:11:41.760
Now one is the elements natural size.

155
00:11:41.770 --> 00:11:47.200
So if we say one point to the content will be 20 percent larger than it naturally would.

156
00:11:47.200 --> 00:11:47.580
All right.

157
00:11:47.590 --> 00:11:54.760
And then down within our is visible modifier class we can simply say transform scale and place it back

158
00:11:54.760 --> 00:11:56.470
to its natural size.

159
00:11:56.470 --> 00:12:00.670
And we only want this neat zoom out effect to happen for small screens.

160
00:12:00.670 --> 00:12:08.940
So within this media query we can say that larger screens should always use this scale of simply one.

161
00:12:08.940 --> 00:12:12.730
So let's go ahead and save this and check it out in the browser.

162
00:12:12.730 --> 00:12:17.880
When we click the top right icon we see a nice little zoom out fade effect.

163
00:12:17.910 --> 00:12:22.750
There's only one problem when I try to tap on this icon again to close the menu.

164
00:12:22.780 --> 00:12:24.160
It's not working.

165
00:12:24.210 --> 00:12:28.630
This is because we adjusted the z index value of the menu content div.

166
00:12:28.660 --> 00:12:33.460
This means that once the menu content is visible it's overlapping this icon.

167
00:12:33.460 --> 00:12:35.370
So we can't click on the icon.

168
00:12:35.410 --> 00:12:39.510
We can fix this by giving that top right icon a larger z index value.

169
00:12:40.090 --> 00:12:43.280
So within our CSX let's scroll up a bit.

170
00:12:43.630 --> 00:12:45.960
And within this menu icon rule.

171
00:12:46.090 --> 00:12:49.620
Let's give it a z index of 10.

172
00:12:49.660 --> 00:12:50.950
Let's save this.

173
00:12:50.950 --> 00:12:56.590
And now when we click on this icon our menu closes again and we saw that when it closes we even get

174
00:12:56.590 --> 00:13:04.130
a nice little zoom in fade effect now before we bring this lesson to a close let's adjust the styling

175
00:13:04.130 --> 00:13:09.620
for these three links so that they each have a subtle background and a bit of padding just to make them

176
00:13:09.620 --> 00:13:12.260
feel that much more tangible or clickable.

177
00:13:12.290 --> 00:13:19.770
So back in our CSX let's jump over to our primary nav CSX file it down at the very bottom.

178
00:13:19.790 --> 00:13:22.040
Let's work on this link rule.

179
00:13:22.040 --> 00:13:28.790
Let's begin by creating a media query so we can send different styles to small screens and larger screens.

180
00:13:28.790 --> 00:13:32.900
So let's say at mix in at medium.

181
00:13:32.990 --> 00:13:33.250
All right.

182
00:13:33.260 --> 00:13:38.690
So for medium screens let's go ahead and continue to use these padding settings so let's just copy and

183
00:13:38.690 --> 00:13:39.520
paste that.

184
00:13:39.650 --> 00:13:43.210
But within the baseline rule that will be applied for small screens.

185
00:13:43.220 --> 00:13:50.180
Let's change this to use five pixels of vertical padding and eight pixels of horizontal padding.

186
00:13:50.180 --> 00:13:54.100
Let's also use a slightly smaller font size for small screens.

187
00:13:54.200 --> 00:13:55.840
So let's say font size.

188
00:13:55.910 --> 00:13:57.500
Point eight Ram.

189
00:13:57.620 --> 00:14:03.140
And then within our media query we can say that larger screens should use a standard font size of one

190
00:14:03.140 --> 00:14:05.300
Ram within our baseline styles.

191
00:14:05.300 --> 00:14:11.030
Let's also add a really subtle transparent background background color.

192
00:14:11.240 --> 00:14:12.500
Let's say RGA.

193
00:14:12.530 --> 00:14:18.650
Let's use our main blue color and let's have it just be 30 percent visible.

194
00:14:18.650 --> 00:14:24.020
And then within our media query let's tell larger screens that they shouldn't apply a background color

195
00:14:24.020 --> 00:14:29.060
at all to the links so they can just use a background color of transparent.

196
00:14:29.060 --> 00:14:33.900
All right let's go ahead and save this and check it out in the browser.

197
00:14:33.980 --> 00:14:34.720
This looks OK.

198
00:14:34.730 --> 00:14:41.570
But I think we could afford to make the backgrounds for each of the three links a bit darker so within

199
00:14:41.570 --> 00:14:47.490
our RGA value let's bump this up to maybe point five.

200
00:14:47.550 --> 00:14:48.930
I think that looks better.

201
00:14:48.990 --> 00:14:54.850
Now we just need to add a bit of vertical spacing between the get in touch button and these three links.

202
00:14:54.870 --> 00:15:00.210
So let's jump back to our CSX and at the very top of this primary nav file.

203
00:15:00.450 --> 00:15:07.260
Let's say padding top 10 pixels but we don't want to create this vertical gap for larger screens.

204
00:15:07.350 --> 00:15:09.330
So let's create a media query.

205
00:15:09.360 --> 00:15:14.910
So at Mixon at medium and then we just want to offset this value.

206
00:15:14.910 --> 00:15:16.890
So padding top 0.

207
00:15:17.370 --> 00:15:20.100
Let's save this and check it out.

208
00:15:20.100 --> 00:15:21.270
That looks a lot better.

209
00:15:21.450 --> 00:15:27.070
But now I'm noticing that maybe this vertical gap between the logo and this button is a bit too much.

210
00:15:27.120 --> 00:15:30.300
So let's reduce this maybe by 10 pixels.

211
00:15:30.300 --> 00:15:37.440
So to do that back in our text editor let's jump over to our site header CSX file and if we scroll down

212
00:15:37.440 --> 00:15:45.000
to the very bottom within our menu content rule we can adjust this padding top value so let's reduce

213
00:15:45.000 --> 00:15:49.200
this from 100 pixels to maybe 90 pixels.

214
00:15:49.200 --> 00:15:53.900
Let's save this and I think that looks a lot better.

215
00:15:54.140 --> 00:15:59.200
And that's actually going to bring this lesson to a close in our next lesson.

216
00:15:59.210 --> 00:16:02.310
We will be focusing on this top right menu icon.

217
00:16:02.330 --> 00:16:04.700
We will be giving it a beauty makeover.

218
00:16:04.700 --> 00:16:09.460
We will customize it so that instead of a square it looks like a hamburger menu icon.

219
00:16:09.470 --> 00:16:15.110
We will also learn how to smoothly transform it into an X icon once it's been tapped.

220
00:16:15.110 --> 00:16:17.090
Just so we're on the same page right now.

221
00:16:17.090 --> 00:16:22.210
I will overlay some footage of the finished product that I have in mind setting those styles up should

222
00:16:22.220 --> 00:16:23.400
be a ton of fun.

223
00:16:23.420 --> 00:16:27.140
Let's keep things rolling and I will see you in the next lesson.
