WEBVTT
1
00:00:02.230 --> 00:00:03.500
Hello everyone.

2
00:00:03.580 --> 00:00:08.260
In this lesson we are going to get ready to push our Web site up onto the Web.

3
00:00:08.860 --> 00:00:13.520
So as of this moment our workflow is set up in a way that benefits us.

4
00:00:13.690 --> 00:00:20.920
The developer or creator of the Web site but in this lesson we need to take a moment to create an alternate

5
00:00:20.920 --> 00:00:27.340
version of our Web site that is optimized for the public or that is created in a way that can easily

6
00:00:27.340 --> 00:00:29.170
be delivered to a web host.

7
00:00:29.800 --> 00:00:31.450
If that doesn't make sense that's OK.

8
00:00:31.450 --> 00:00:32.590
Let me show you what I mean.

9
00:00:32.620 --> 00:00:37.320
So right now I want you to find wherever your project lives on your computer.

10
00:00:37.320 --> 00:00:42.620
So for me it's in this site's folder and then it's in travel site.

11
00:00:42.790 --> 00:00:46.190
So the app folder is our source code.

12
00:00:46.280 --> 00:00:49.460
It's where we work as the developer of the project.

13
00:00:49.600 --> 00:00:55.850
But we can't really deliver the files of the app folder to a web post for the public to view.

14
00:00:56.080 --> 00:00:56.260
Right.

15
00:00:56.260 --> 00:01:02.680
Because if you go into the app folder and then if you drag index dot HDMI all on top of a web browser

16
00:01:02.680 --> 00:01:09.120
window to open it you can see right away that it's not loading our SS or JavaScript.

17
00:01:09.370 --> 00:01:17.430
Remember this is because we configured web back to not actually save the bundled file to our file disk.

18
00:01:17.470 --> 00:01:23.260
So when Web pack bundles up all of our CSX and JavaScript we configured it in a way so that it just

19
00:01:23.260 --> 00:01:24.850
stores it in memory.

20
00:01:25.000 --> 00:01:32.680
And then when we run NPM run Dev write that fires up web pack dev server and then you can access the

21
00:01:32.680 --> 00:01:40.910
bundle just from a U.R.L. of local host colon three thousand slash bundled the DOT J Yes.

22
00:01:41.070 --> 00:01:41.260
Right.

23
00:01:41.260 --> 00:01:44.560
And then this contains all of the CSA and JavaScript.

24
00:01:44.590 --> 00:01:46.390
Well this is great for us.

25
00:01:46.450 --> 00:01:52.720
The developer or creator of the Web site on our local machine but it doesn't work at all in terms of

26
00:01:52.720 --> 00:01:55.070
delivering our files to a web host.

27
00:01:55.150 --> 00:01:57.220
So the public can view our Web site.

28
00:01:58.070 --> 00:02:04.450
So to get back to our files right now let me go back up a folder in this lesson we're going to set things

29
00:02:04.450 --> 00:02:10.090
up so that we still have the app folder just the same as it's always been that's for us the developer

30
00:02:10.390 --> 00:02:15.970
but we're also going to have web back automatically generate another copy of our Web site.

31
00:02:16.630 --> 00:02:23.740
So it's going to create a new folder in this directory named dist short for distribution and that will

32
00:02:23.740 --> 00:02:30.250
be the copy of the Web site that we actually deliver to a web host intended for the public to view.

33
00:02:30.250 --> 00:02:37.030
So again the app folder is for us the developer the source code and then the dist folder that we're

34
00:02:37.030 --> 00:02:39.840
going to create is for the public.

35
00:02:40.240 --> 00:02:46.420
This process of creating a copy of your project that is ready to distribute is often referred to as

36
00:02:46.420 --> 00:02:48.690
your build process.

37
00:02:48.760 --> 00:02:57.000
And luckily for us Westpac is arguably the best tool in the world to create a build process with.

38
00:02:57.190 --> 00:02:58.530
So let's get to work.

39
00:02:58.690 --> 00:03:05.410
Well actually before we start working on our build process let's first take care of our get branches.

40
00:03:05.410 --> 00:03:09.280
So this lazy loading branch is ready to be merged into Master.

41
00:03:09.400 --> 00:03:12.340
Let's run and get status to see what's changed.

42
00:03:12.340 --> 00:03:13.450
These changes look good.

43
00:03:13.510 --> 00:03:22.630
Let's add them all to our staging area and then let's commit that staging area and say completed lazy

44
00:03:22.630 --> 00:03:25.780
loading of images.

45
00:03:25.780 --> 00:03:31.750
Now that we've committed those changes we can safely jump back to the master branch so get check out

46
00:03:32.070 --> 00:03:33.440
master.

47
00:03:33.760 --> 00:03:40.740
And now we just want to merge in the lazy loading branch so get merge lazy loading.

48
00:03:40.810 --> 00:03:41.170
All right.

49
00:03:41.170 --> 00:03:43.510
So our master branch has now updated.

50
00:03:43.510 --> 00:03:52.540
Let's go ahead and create a new branch for our build process so we can just say get branch let's name

51
00:03:52.540 --> 00:04:00.400
it build dash process press enter and then let's switch over or check out that branch.

52
00:04:00.460 --> 00:04:06.800
So get check out build dash process.

53
00:04:06.820 --> 00:04:07.210
Cool.

54
00:04:07.300 --> 00:04:08.670
Let's get to work.

55
00:04:08.860 --> 00:04:14.500
So whenever we want to get work done we know that we go into the command line and run our NPM run Dev

56
00:04:14.500 --> 00:04:18.760
task right that spins up our Web pack dev server.

57
00:04:18.820 --> 00:04:26.440
Well right now let's create another command that we can run named NPM run build that will generate the

58
00:04:26.470 --> 00:04:28.300
copy of our website for the public.

59
00:04:28.920 --> 00:04:36.980
So to create a new NPM script or command like that we can just jump into our package dot Jason File.

60
00:04:37.570 --> 00:04:37.830
Okay.

61
00:04:37.840 --> 00:04:41.290
We are looking for these scripts area.

62
00:04:41.290 --> 00:04:45.520
So here is that NPM run Dev script.

63
00:04:45.580 --> 00:04:49.330
So at the end of this line there's a comma or if there's not already a comma.

64
00:04:49.330 --> 00:04:55.870
Be sure to add one but let's drop down to a new line and let's say quotes you could name it anything

65
00:04:55.870 --> 00:04:57.970
but just so you and I are on the same page.

66
00:04:58.000 --> 00:05:06.320
Let's name it build quotes build coal in quotes and then we just need to call Web pack.

67
00:05:06.700 --> 00:05:11.560
And if this is not the last script for you so you can see I have this one name test then.

68
00:05:11.560 --> 00:05:14.620
Be sure to include a comma at the very end of this line.

69
00:05:15.280 --> 00:05:15.520
OK.

70
00:05:15.550 --> 00:05:22.060
So big picture when we want to work on our Web site we run NPM run Dev.

71
00:05:22.060 --> 00:05:26.980
That's an ongoing task that's going to stay open and running until we tell it to stop.

72
00:05:27.490 --> 00:05:33.130
However NPM run build will be a task that just runs once.

73
00:05:33.310 --> 00:05:37.550
It's going to generate the alternate copy of our Web site and then it's done.

74
00:05:37.600 --> 00:05:45.550
So let's go ahead and save this file and now we need to jump into our web pack config dot J.S. file.

75
00:05:45.550 --> 00:05:53.800
Now within this config file we need to be able to determine which NPM script just ran was it NPM run

76
00:05:53.800 --> 00:05:56.740
Dev or was it NPM run build.

77
00:05:56.740 --> 00:06:01.750
Because we need to do drastically different things depending on the situation.

78
00:06:01.830 --> 00:06:02.080
Right.

79
00:06:02.080 --> 00:06:06.180
One is optimized for our convenience and workflow as a developer.

80
00:06:06.280 --> 00:06:10.540
The other is optimized for publicly deliverable files.

81
00:06:10.570 --> 00:06:16.560
So do this with me up at the very top of our Web pack config file it's start a brand new line of code

82
00:06:16.990 --> 00:06:22.820
and let's say a concert and we can name this anything but just so you and I are on the same page.

83
00:06:22.840 --> 00:06:32.170
Let's name it current task and let's set it to equal whatever the name of the current NPM script.

84
00:06:32.170 --> 00:06:43.750
That was just executed is to grab that value we can just say process dot e envy dot NPM underscore life

85
00:06:43.810 --> 00:06:49.310
cycle underscore event this is super useful.

86
00:06:49.600 --> 00:06:57.240
So now our constant variable named current task will equal either Dev or build.

87
00:06:57.240 --> 00:06:57.430
Right.

88
00:06:57.430 --> 00:07:00.820
Because those are the names of our two scripts Dev or build.

89
00:07:01.420 --> 00:07:03.440
So now we can do different things.

90
00:07:03.490 --> 00:07:09.420
We can configure web Park differently depending on whether it's Dev or build.

91
00:07:09.460 --> 00:07:14.890
Now from this point there are a million different ways you could organize this code to be different

92
00:07:15.070 --> 00:07:16.690
for the two scenarios.

93
00:07:16.750 --> 00:07:19.590
But let me show you how I would do it.

94
00:07:19.630 --> 00:07:26.320
So right below our collection of posts CSX plug ins or right above where we say module that exports

95
00:07:26.350 --> 00:07:32.410
equals I would add a new line and I would create a variable we can name it anything but to be on the

96
00:07:32.410 --> 00:07:33.110
same page.

97
00:07:33.130 --> 00:07:33.850
Let's name it.

98
00:07:33.850 --> 00:07:34.790
Config.

99
00:07:35.360 --> 00:07:39.880
So let config equal a new or empty object.

100
00:07:40.120 --> 00:07:42.180
We will circle back to this in just a moment.

101
00:07:42.250 --> 00:07:49.120
Now after that I would set up an if statement and I would say if parentheses curly brackets for the

102
00:07:49.120 --> 00:07:59.590
condition if current task double equal sign to check for equality if that equals Dev well then this

103
00:07:59.590 --> 00:08:06.460
is where we can customize the config object for Dev and then let's just copy and paste this if statement

104
00:08:06.590 --> 00:08:12.210
and right below it just paste it in again and check to see if an equals built.

105
00:08:12.290 --> 00:08:12.810
Okay.

106
00:08:12.850 --> 00:08:14.870
Now this configuration object.

107
00:08:14.890 --> 00:08:21.570
This is no longer what we want this file to export but I don't want to just delete this code right away

108
00:08:21.600 --> 00:08:24.150
because we can use this as reference code.

109
00:08:24.150 --> 00:08:28.260
We know that this works perfectly for our dev environment.

110
00:08:28.260 --> 00:08:35.370
So just to keep this code around let's change this from module dot exports to SKU a variable and let's

111
00:08:35.370 --> 00:08:39.680
just call it delete me later.

112
00:08:39.720 --> 00:08:44.670
So by the end of this lesson we can delete all of this but for now it's a good reference and then down

113
00:08:44.670 --> 00:08:47.470
at the very very bottom of this file.

114
00:08:47.640 --> 00:08:55.990
Let's add a new line and say module dot exports equals that config object that we created.

115
00:08:56.040 --> 00:09:02.570
So let's scroll back up to where we first created config so the idea is that any configuration that

116
00:09:02.570 --> 00:09:10.100
can be the same or shared between dev and build will live in this object here and then any code that's

117
00:09:10.130 --> 00:09:11.900
specific to Dev.

118
00:09:11.900 --> 00:09:18.500
Well we can modify the config object in this if statement and we can setup unique things for the build

119
00:09:18.500 --> 00:09:21.120
task within this if statement.

120
00:09:21.260 --> 00:09:25.920
Let's start with a piece of configuration that's the same for both dev and build.

121
00:09:26.000 --> 00:09:28.750
And that is our entry point right.

122
00:09:28.750 --> 00:09:36.320
No matter what the entry point into our application is always going to be that main app dot J.S. file.

123
00:09:36.390 --> 00:09:44.820
So let's just copy this entry line endure clipboard and then within this let config equals within these

124
00:09:44.820 --> 00:09:48.370
curly brackets you can drop down and then paste in your clipboard.

125
00:09:48.480 --> 00:09:49.000
Cool.

126
00:09:49.020 --> 00:09:55.680
Now we no longer need that within this reference code so we can get rid of that down here and now output

127
00:09:55.740 --> 00:10:00.780
is an example of something that should be different depending on whether it's for Dev or build.

128
00:10:00.780 --> 00:10:03.890
So regarding the bundled file that Web pack generates.

129
00:10:03.960 --> 00:10:05.790
Where do we want it to live.

130
00:10:05.790 --> 00:10:08.000
Well this could make sense for Dev right.

131
00:10:08.010 --> 00:10:15.990
It's going to add it to the app folder but for our bill the task we would want this to be the dist folder.

132
00:10:16.140 --> 00:10:17.940
So let's do this.

133
00:10:17.940 --> 00:10:22.170
Go ahead and select these curly brackets for the output value.

134
00:10:22.230 --> 00:10:27.870
We don't need to select the output property name we just want the curly brackets for this object and

135
00:10:27.870 --> 00:10:32.750
go ahead and copy this into your clipboard OK.

136
00:10:32.780 --> 00:10:44.980
Now up in the if statement for Dev let's say config dot out put equals and then just paste in your clipboard.

137
00:10:45.770 --> 00:10:46.190
OK.

138
00:10:46.190 --> 00:10:54.650
And then within the if statement for build then the curly brackets we can say config dot output equals.

139
00:10:54.770 --> 00:10:57.050
And once again just paste in your clipboard.

140
00:10:57.980 --> 00:11:04.700
Only this time instead of outputting the bundle to AB we would want this to be.

141
00:11:05.060 --> 00:11:10.590
OK so now down in our reference code we no longer need the output.

142
00:11:10.640 --> 00:11:13.060
Next up we see dev server.

143
00:11:13.100 --> 00:11:18.080
Now this entire bit of dev server code that is entirely only for the dev task.

144
00:11:18.080 --> 00:11:20.800
We don't need this at all for the build task.

145
00:11:21.020 --> 00:11:25.860
So just begin selecting from this curly bracket down to the closing curly bracket here.

146
00:11:25.910 --> 00:11:31.270
You don't need to select the property name just the actual object itself.

147
00:11:31.280 --> 00:11:33.020
So from curly bracket to curly bracket.

148
00:11:33.020 --> 00:11:41.030
Copy that into your clipboard and then up within our if statement for Dev after this chunk of code for

149
00:11:41.030 --> 00:11:47.600
output we can just say config dot dev server should equal.

150
00:11:47.600 --> 00:11:50.870
And then just paste in your clipboard.

151
00:11:50.880 --> 00:11:56.300
OK let's go ahead and get rid of that down in our reference code.

152
00:11:56.410 --> 00:12:03.880
Next up we see a property named mode obviously for Dev we would want this to be development before build

153
00:12:03.940 --> 00:12:08.500
we would want this to be set to production essentially during development.

154
00:12:08.500 --> 00:12:13.600
There are different things that web patch can do for us to make our life as a developer easier.

155
00:12:13.600 --> 00:12:19.060
But when we're just delivering code to the public we don't need to do those things any longer.

156
00:12:19.060 --> 00:12:28.420
So backup in the if statement for Dev after the object for config got dev server we can just say config

157
00:12:28.870 --> 00:12:34.940
dot mode equals quotes development.

158
00:12:36.100 --> 00:12:37.900
OK then let's go set it up for build.

159
00:12:37.930 --> 00:12:47.970
So within the if statement for build after config output to say config Dom mode equals quotes production.

160
00:12:48.870 --> 00:12:57.160
OK so now down in our reference code we no longer need mode and now all that's left is the module property.

161
00:12:57.160 --> 00:13:03.370
Now a bit later we will indeed want this to be different for Dev and build but for now just so we can

162
00:13:03.370 --> 00:13:05.920
move forward and test our two tasks.

163
00:13:05.920 --> 00:13:11.290
Let's consider this to be shared or that it can be the same between the two tasks.

164
00:13:11.290 --> 00:13:15.040
So this time we do want to select the property name.

165
00:13:15.040 --> 00:13:19.150
So just select from module down to this closing curly bracket.

166
00:13:19.150 --> 00:13:25.330
Make sure you do not accidentally select the additional closing curly bracket so your selection should

167
00:13:25.330 --> 00:13:29.600
end with a ending square bracket and then just one ending curly bracket.

168
00:13:30.040 --> 00:13:34.980
Let's go ahead and we can even cut this into our clipboard instead of copying it.

169
00:13:35.200 --> 00:13:41.290
And as you can see this is now completely empty so it can live up to its name right of delete me later.

170
00:13:41.410 --> 00:13:43.190
This is that moment let's just delete it.

171
00:13:44.630 --> 00:13:51.080
OK now with that code in our clipboard let's go up to our config object right.

172
00:13:51.100 --> 00:13:53.990
This is the shared code for Devin build.

173
00:13:53.990 --> 00:13:59.720
Now after this line of entry and it ends with a comma we can just drop down and paste in our clipboard.

174
00:14:00.940 --> 00:14:01.430
OK.

175
00:14:01.540 --> 00:14:08.410
At this point let's go ahead and save this file and let's test out our two NPM scripts.

176
00:14:08.530 --> 00:14:15.040
So in our command line let's first test and make sure that our dev task is still running as it has been

177
00:14:15.040 --> 00:14:16.510
throughout the course.

178
00:14:16.570 --> 00:14:18.140
Let's make sure we didn't break anything.

179
00:14:18.140 --> 00:14:26.360
So NPM run dev that should fire up our web pack dev server back in the browser.

180
00:14:26.380 --> 00:14:31.880
Our website should be available from local host colon three thousand looks good to me.

181
00:14:31.960 --> 00:14:36.780
If you really want to test to make sure that it's still working you could go into your main app dot

182
00:14:36.820 --> 00:14:43.110
J.S. file and maybe just add an alert line that says hello.

183
00:14:43.110 --> 00:14:45.210
This is a test.

184
00:14:45.210 --> 00:14:50.040
Give that a save and you should see that pop up in the browser.

185
00:14:50.040 --> 00:14:50.670
Cool.

186
00:14:50.670 --> 00:14:56.700
Let me get rid of that alert text message so we know that our dev task is working so we can stop that

187
00:14:56.700 --> 00:15:02.070
task in the command line press control see we know that it's working properly and this is the moment

188
00:15:02.070 --> 00:15:02.780
of truth.

189
00:15:02.790 --> 00:15:11.660
Let's test out our build task so to run that we just say NPM run build

190
00:15:15.480 --> 00:15:17.940
now how do we know if that was successful.

191
00:15:17.940 --> 00:15:25.050
Well if you open up your project folder well in the directory where you would find your app folder we

192
00:15:25.050 --> 00:15:31.480
should now also see a brand new automatically generated folder named dist.

193
00:15:31.620 --> 00:15:34.090
And if we go into the disk folder.

194
00:15:34.300 --> 00:15:34.840
Perfect.

195
00:15:34.840 --> 00:15:41.740
So this is our main bundled file with all of our javascript and CSX and this little lonely file is our

196
00:15:41.740 --> 00:15:43.380
modal javascript.

197
00:15:43.480 --> 00:15:46.300
Remember we set that up so it loads on the fly.

198
00:15:47.260 --> 00:15:52.810
Or on demand only when the user actually clicks on the button to open the modal.

199
00:15:52.810 --> 00:15:58.120
So we still have a bit of work to do we still need to set up Web pack so that it also copies over our

200
00:15:58.120 --> 00:15:59.450
HDD PML.

201
00:15:59.620 --> 00:16:07.060
And so it splits the CSX out of this file into its own traditional CSX file and so it also copies over

202
00:16:07.300 --> 00:16:11.070
all of our images and photographs into the disk folder.

203
00:16:11.070 --> 00:16:12.970
Now all of those things that I just mentioned.

204
00:16:13.150 --> 00:16:17.810
That's exactly what we're going to work on in the next part of this lesson.

205
00:16:17.950 --> 00:16:24.580
Once we finish up those details we will have a copy of our Web site that we can very easily send to

206
00:16:24.580 --> 00:16:28.270
a web host and have it be served up to the public.

207
00:16:28.330 --> 00:16:34.270
We are so close to being able to share this Web site with our friends family and colleagues.

208
00:16:34.270 --> 00:16:38.470
So let's keep things rolling and I will see you in the next video.
