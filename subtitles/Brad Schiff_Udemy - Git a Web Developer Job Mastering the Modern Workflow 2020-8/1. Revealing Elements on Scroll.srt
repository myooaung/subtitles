1
00:00:01,320 --> 00:00:02,640
Hello everyone.

2
00:00:02,760 --> 00:00:07,560
In this lesson we will learn how to reveal an element when it's been scrolled to.

3
00:00:07,560 --> 00:00:11,350
Why don't I share my screen so we can make sure that we're on the same page.

4
00:00:11,370 --> 00:00:12,800
So here's what I'm referring to.

5
00:00:12,900 --> 00:00:20,910
If we scroll down our page a bit down within this our features section in this lesson we are going to

6
00:00:20,910 --> 00:00:29,050
initially hide these four items and as a user scrolls down the page once they scroll down to the point

7
00:00:29,050 --> 00:00:33,750
that just the very top of these items would begin to display at that point.

8
00:00:33,760 --> 00:00:41,170
These two items will gradually fade into view and once a user scrolls down about this far then these

9
00:00:41,170 --> 00:00:43,720
two items will gradually fade into view.

10
00:00:43,720 --> 00:00:48,850
This is a very popular effect that I'm sure you've seen on many Web sites before and believe it or not

11
00:00:48,910 --> 00:00:50,590
it's pretty simple to set up.

12
00:00:50,590 --> 00:00:50,860
All right.

13
00:00:50,860 --> 00:00:53,290
So now we know what our goal for this lesson is.

14
00:00:53,350 --> 00:00:56,050
Without further ado let's get started.

15
00:00:56,050 --> 00:01:00,850
The first thing we should do is create a new get branch for this functionality.

16
00:01:00,850 --> 00:01:06,520
So let's jump over to the command line and before we create a new branch let's first take care of the

17
00:01:06,520 --> 00:01:11,620
branch that we currently have checked out which is the header branch in our previous lesson.

18
00:01:11,620 --> 00:01:16,930
We completed the header of our website which means this branch is ready to be merged back into master

19
00:01:17,380 --> 00:01:18,700
before we perform the merge.

20
00:01:18,700 --> 00:01:24,390
Let's check for any uncommitted changes so let's run get status.

21
00:01:24,460 --> 00:01:24,760
All right.

22
00:01:24,760 --> 00:01:28,330
So quite a few files have been changed since my last comment.

23
00:01:28,390 --> 00:01:29,730
All of these changes look good.

24
00:01:29,740 --> 00:01:33,880
They all look header related so I will add everything to my staging area.

25
00:01:33,910 --> 00:01:37,730
So get add dash uppercase a.

26
00:01:38,440 --> 00:01:38,670
All right.

27
00:01:38,680 --> 00:01:43,680
So if we run get status again all of the changes have been added to our staging area.

28
00:01:43,690 --> 00:01:48,670
We are now ready to commit this so we can just type get commit.

29
00:01:48,670 --> 00:01:59,210
Let's include a message so dash M and then quotes let's say completed desktop and mobile header styles.

30
00:01:59,230 --> 00:02:01,230
And the quote push enter.

31
00:02:01,420 --> 00:02:06,160
And now if we run get status once again we see working directory clean.

32
00:02:06,610 --> 00:02:14,290
So at this point we can now jump back to our master branch so we can say get check out master.

33
00:02:14,620 --> 00:02:21,240
Now with the master branch checked out if we look at the browser we see that none of our header changes

34
00:02:21,330 --> 00:02:22,510
are in place.

35
00:02:22,680 --> 00:02:28,230
So we want to go ahead and merge the header branch into the master branch.

36
00:02:28,230 --> 00:02:37,500
So we simply type get merge header and now if we look at the browser we see that our master branch has

37
00:02:37,500 --> 00:02:44,010
been updated to include our header and this makes me think that now is a good time to push our repo

38
00:02:44,100 --> 00:02:50,880
up to get hub that way even if our computer blows up tonight we won't lose any of our website's progress.

39
00:02:50,940 --> 00:02:55,560
So over in the command line let's type git and what do we want to do.

40
00:02:55,590 --> 00:03:00,160
We want to push and where do we want to push our repo to.

41
00:03:00,300 --> 00:03:05,030
We want to push it to get hub which we've saved as a remote named origin.

42
00:03:05,130 --> 00:03:08,560
And just to be safe let's spell out which branch we want to push.

43
00:03:08,690 --> 00:03:17,620
Master let's go ahead and press enter and now if we pull up our github repo page in a browser here we

44
00:03:17,620 --> 00:03:22,480
see the latest commit completed desktop and mobile header styles.

45
00:03:22,510 --> 00:03:27,130
This means we can rest easy knowing that our files have been backed up on github.

46
00:03:27,130 --> 00:03:29,840
So at this point let's get back to the task at hand.

47
00:03:29,920 --> 00:03:36,400
We want to create a new get branch for our Reveal on scroll feature so to create a new branch Let's

48
00:03:36,400 --> 00:03:45,820
type get check out dash B and then the name of the branch we want to create let's call it reveal on

49
00:03:46,200 --> 00:03:47,210
scroll.

50
00:03:47,430 --> 00:03:51,090
Let's press enter and now we've checked out a new branch.

51
00:03:51,220 --> 00:03:52,450
So we're good to go.

52
00:03:52,540 --> 00:03:58,060
Let's begin working on this new feature by jumping to the text editor and let's create a new module

53
00:03:58,060 --> 00:04:01,590
file where we can write the javascript to bring this feature to life.

54
00:04:02,050 --> 00:04:14,830
So within our app Assets Scripts modules folder let's create a new file let's name this new file reveal

55
00:04:15,370 --> 00:04:27,520
on scroll dot J.S. let's begin by creating a class and let's name the class reveal on scroll.

56
00:04:27,730 --> 00:04:33,430
Open up a pair of curly brackets and below this class let's add a line down here at the very bottom

57
00:04:33,820 --> 00:04:36,140
and let's go ahead and export this class.

58
00:04:36,160 --> 00:04:38,650
So export default.

59
00:04:39,040 --> 00:04:43,120
And then the name of the class reveal on scroll.

60
00:04:43,180 --> 00:04:45,100
All right let's go ahead and save this file.

61
00:04:45,100 --> 00:04:51,100
And before we forget let's include or import this file within our main JavaScript file.

62
00:04:51,250 --> 00:04:59,130
So within our app assets scripts folder let's open up app dot J.S. after the second line of code.

63
00:04:59,140 --> 00:05:10,000
Let's create a new line and say import reveal on scroll from open a pair of quotes dot forward slash

64
00:05:10,060 --> 00:05:11,800
so we can point into a folder.

65
00:05:11,830 --> 00:05:16,750
Let's go into the modules folder and then let's point towards that new file we just created.

66
00:05:16,750 --> 00:05:21,220
So reveal on scroll all right.

67
00:05:21,220 --> 00:05:26,630
Our next step is to create an object that is a new instance of this class.

68
00:05:26,860 --> 00:05:33,330
So down on a new line let's create an object and name it reveal on scroll.

69
00:05:33,460 --> 00:05:40,360
Notice we are beginning this with a lower case r and let's say that this equals a new instance of the

70
00:05:40,420 --> 00:05:44,260
reveal on scroll class or blueprint.

71
00:05:44,290 --> 00:05:49,630
Let's go ahead and save this file and then jump back into our Reveal on scroll module.

72
00:05:49,630 --> 00:05:53,650
And within this class we know that we are going to need a constructor function.

73
00:05:53,650 --> 00:06:01,270
So let's say constructor and let's begin by selecting the elements that we want to reveal.

74
00:06:01,270 --> 00:06:07,910
So let's create a property within this object and name it items to reveal.

75
00:06:08,050 --> 00:06:12,900
And this property should equal or point to the DOM elements that we want to reveal.

76
00:06:12,970 --> 00:06:18,910
And just to refresh your memory the elements that we want to reveal are down here within the hour feature

77
00:06:18,910 --> 00:06:19,810
section.

78
00:06:19,810 --> 00:06:25,830
These four items and each of these items has a class of feature item.

79
00:06:25,900 --> 00:06:31,330
So back in the text editor our items to reveal properties should equal.

80
00:06:31,330 --> 00:06:41,470
Document dot query selector quotes and then to select the class it's a dot and then feature item however

81
00:06:41,650 --> 00:06:46,140
query selector will only select the first element that matches this.

82
00:06:46,300 --> 00:06:52,720
If we want to select multiple elements well we want to use a method named query selector all.

83
00:06:53,140 --> 00:06:59,170
So right after the are here after selector just add in all just like this.

84
00:06:59,170 --> 00:07:03,480
So we've selected the elements that we want to reveal once they are scrolled to.

85
00:07:03,490 --> 00:07:07,340
But let me point out that you can't reveal that which isn't hidden.

86
00:07:07,360 --> 00:07:11,980
So our first step is to actually go ahead and hide these elements initially.

87
00:07:11,980 --> 00:07:15,930
So within our code let's actually create a new method.

88
00:07:16,000 --> 00:07:25,270
So below the constructor function let's create a method named hide initially and let's begin by referencing

89
00:07:25,270 --> 00:07:27,810
the property that points towards our elements.

90
00:07:27,820 --> 00:07:38,500
So this dot items to reveal however this property is not a single dom element it's a collection of multiple

91
00:07:38,500 --> 00:07:39,820
elements.

92
00:07:39,820 --> 00:07:46,750
So at the end of this line let's include a dot for each and then within these parentheses we can provide

93
00:07:46,750 --> 00:07:52,300
a function that will run once for each of the elements in this collection.

94
00:07:52,330 --> 00:07:58,980
Let's start with a traditional anonymous functions function parentheses curly brackets.

95
00:07:59,320 --> 00:08:02,410
Let's dropdown within these parentheses.

96
00:08:02,410 --> 00:08:04,570
Let's include a parameter of l.

97
00:08:04,690 --> 00:08:06,370
This will stand for element.

98
00:08:06,370 --> 00:08:08,160
We could have chose any name.

99
00:08:08,350 --> 00:08:12,280
And then within the body of this function we will just take that current element that's been looped

100
00:08:12,280 --> 00:08:22,580
to say element dot class list dot add and let's give the element a class of reveal dash item.

101
00:08:22,590 --> 00:08:22,920
All right.

102
00:08:22,920 --> 00:08:25,560
Now this is a traditional anonymous function.

103
00:08:25,650 --> 00:08:27,570
Let's turn it into an arrow function.

104
00:08:27,570 --> 00:08:34,740
So our code feels a bit cleaner to do that we can get rid of the word function and since we have exactly

105
00:08:34,740 --> 00:08:40,440
one parameter we don't need the parentheses around this parameter so we can get rid of this opening

106
00:08:40,440 --> 00:08:43,570
parentheses and this closing parentheses.

107
00:08:43,580 --> 00:08:44,040
All right.

108
00:08:44,040 --> 00:08:47,160
And now after our parameter let's include the arrow symbol.

109
00:08:47,160 --> 00:08:50,030
So that's equal sign greater than.

110
00:08:50,070 --> 00:08:55,410
And since our function only has one line we can actually get rid of the whitespace so it sits on a single

111
00:08:55,410 --> 00:08:57,080
line like this.

112
00:08:57,150 --> 00:09:01,420
And if you only have one statement in your function you don't need the curly brackets either.

113
00:09:01,500 --> 00:09:06,300
So we can get rid of this opening curly bracket here and also get rid of this closing curly bracket

114
00:09:06,300 --> 00:09:07,580
here.

115
00:09:07,770 --> 00:09:08,140
All right.

116
00:09:08,160 --> 00:09:11,400
And we want this method to run as soon as the page loads.

117
00:09:11,400 --> 00:09:15,630
So within our constructor function let's actually call or run the method.

118
00:09:15,930 --> 00:09:26,070
So this dot Hyde initially let's go ahead and save this file and next let's create a new CSF file where

119
00:09:26,070 --> 00:09:31,500
we can setup the styling for this new reveal item class that should hide the elements.

120
00:09:31,500 --> 00:09:40,440
So within our app assets styles folder within the modules folder let's create a new file let's name

121
00:09:40,440 --> 00:09:48,790
this new file underscore revealed dash item dot c SS All right.

122
00:09:48,790 --> 00:09:55,080
And before we forget let's jump in to our main styles Doc CSX file and down at the bottom.

123
00:09:55,090 --> 00:09:57,800
Let's import in the brand new CSX file.

124
00:09:57,940 --> 00:10:05,860
So import go into the modules folder and look for the file underscore reveal item.

125
00:10:06,010 --> 00:10:11,850
Let's save this and then jump back into the new CSX file and let's begin with a class selector.

126
00:10:11,860 --> 00:10:19,100
So reveal item and let's hide the element initially by setting its opacity to 0.

127
00:10:19,120 --> 00:10:25,000
So if we go ahead and save this file and jump over to the browser our four items are now hidden.

128
00:10:25,000 --> 00:10:30,370
And while we still have our CSX file open why don't we go ahead and create the modifier class that we

129
00:10:30,370 --> 00:10:32,990
can add to the elements to reveal them.

130
00:10:33,010 --> 00:10:36,130
So within this rule let's create a new rule.

131
00:10:36,190 --> 00:10:40,700
Let's begin with the ampersand symbol which will give us dot reveal item.

132
00:10:40,870 --> 00:10:46,800
And then we can just add on a modifier Dash Dash is visible.

133
00:10:46,900 --> 00:10:52,360
So within this class let's go ahead and set the opacity to 1 or fully visible.

134
00:10:52,360 --> 00:10:57,760
And remember when we reveal an element we don't want it to go from completely hidden to completely revealed

135
00:10:58,000 --> 00:10:59,300
in one millisecond.

136
00:10:59,440 --> 00:11:04,070
We want it to gradually fade in so within the baseline rule.

137
00:11:04,090 --> 00:11:10,630
Let's set the transition and say that the opacity property should gradually change over the course of

138
00:11:10,630 --> 00:11:12,530
one and a half seconds.

139
00:11:12,760 --> 00:11:15,880
And let's use the ease out transition style.

140
00:11:15,880 --> 00:11:22,120
Now at this point we just need to use javascript to programmatically add this is visible class to the

141
00:11:22,120 --> 00:11:26,820
hidden elements at precisely the right moment when they're scrolled to.

142
00:11:26,830 --> 00:11:33,850
So let's go ahead and save this file and then jump into our Reveal on scroll JavaScript file and let's

143
00:11:33,850 --> 00:11:37,960
begin listening for the scroll event in the browser.

144
00:11:37,960 --> 00:11:43,990
So below our constructor and above our height initially method let's create a new method named events

145
00:11:47,940 --> 00:11:48,390
OK.

146
00:11:48,390 --> 00:11:51,630
And we know that we want our events method to fire right away.

147
00:11:51,630 --> 00:11:54,030
So within our constructor let's just be sure to call it.

148
00:11:54,570 --> 00:11:57,870
So this dot events.

149
00:11:57,870 --> 00:11:58,140
OK.

150
00:11:58,140 --> 00:12:05,430
Now in our events method let's begin listening on the window or the overall browser element so window

151
00:12:05,430 --> 00:12:13,710
dot and then let's add an event listener and the type of event that we want to listen for is a scroll

152
00:12:13,800 --> 00:12:14,850
event.

153
00:12:14,910 --> 00:12:21,180
So whenever the user scrolls then still within these parentheses but after the quotes comma and let's

154
00:12:21,180 --> 00:12:24,830
include a function let's start with a simple arrow function.

155
00:12:24,840 --> 00:12:26,810
So empty set of parentheses.

156
00:12:26,970 --> 00:12:31,560
And then the equal greater than arrow symbol and then pair of curly brackets.

157
00:12:31,560 --> 00:12:32,600
Let's dropdown.

158
00:12:33,480 --> 00:12:39,840
And now as we are scrolling we want to check to see if any of our four item to review elements have

159
00:12:39,840 --> 00:12:40,920
been scrolled to yet.

160
00:12:41,430 --> 00:12:45,210
So we'd want to run a calculation once for each of those items.

161
00:12:45,240 --> 00:12:47,840
So let's start working with those four items.

162
00:12:47,910 --> 00:12:54,630
This dot items to reveal dot and let's do something once for each of them.

163
00:12:54,720 --> 00:13:03,130
So dot for each within the parentheses let's give it an arrow function that just has exactly one parameter.

164
00:13:03,270 --> 00:13:08,370
So let's go the parameter name of L. short for the current element we've looped to.

165
00:13:08,580 --> 00:13:15,780
And then the arrow symbol and then curly brackets let's dropdown inside these curly brackets now instead

166
00:13:15,780 --> 00:13:20,130
of trying to calculate if the current element has been scrolled to right here.

167
00:13:20,130 --> 00:13:25,580
Well why don't we include that logic in a separate method and just call that method here.

168
00:13:25,620 --> 00:13:26,730
Let me show you what I mean.

169
00:13:26,760 --> 00:13:35,110
So let's pretend we have a method named calculate if scrolled to so let's call it this dot calculate

170
00:13:35,470 --> 00:13:43,930
if scrolled to parentheses to call it and now within these parentheses let's pass it the current element

171
00:13:44,110 --> 00:13:45,160
that we've looped to.

172
00:13:45,790 --> 00:13:52,810
So now let's go create a method with this matching name maybe right above height initially calculate

173
00:13:53,410 --> 00:14:01,930
if sprawled to parentheses curly brackets within these parentheses let's received that incoming argument

174
00:14:01,930 --> 00:14:03,180
with a parameter.

175
00:14:03,970 --> 00:14:04,390
OK.

176
00:14:04,390 --> 00:14:07,330
And now in the body of this function try this out with me.

177
00:14:07,330 --> 00:14:14,530
Let's log a message to the console console dot log and we know that we can say E L to work with the

178
00:14:14,530 --> 00:14:24,040
current element and let's say dot get bounding client rect parentheses to call that.

179
00:14:24,070 --> 00:14:27,090
And then finally at the end of it say dot why.

180
00:14:27,140 --> 00:14:32,080
So this is a property that all modern web browsers make available to us.

181
00:14:32,230 --> 00:14:35,510
We will see firsthand what it does in just a couple of seconds.

182
00:14:35,530 --> 00:14:42,410
Let's go ahead and save this file and jump into the browser you can pull up your console and resize

183
00:14:42,410 --> 00:14:48,860
your window so you can see the console as you scroll but notice that as I begin scrolling we see all

184
00:14:48,860 --> 00:14:52,190
sorts of values being output to the console.

185
00:14:52,190 --> 00:14:57,620
So the question becomes what in the world does this get bounding client wrecked.

186
00:14:57,800 --> 00:14:59,420
And then it's why property.

187
00:14:59,420 --> 00:15:00,890
What in the world does that mean.

188
00:15:00,890 --> 00:15:02,600
What are these numbers that we're seeing.

189
00:15:03,080 --> 00:15:05,650
Well we know they're in some way tied to the.

190
00:15:05,750 --> 00:15:07,950
Our feature elements that are currently hidden.

191
00:15:07,970 --> 00:15:11,590
So let's scroll down to where those elements would live.

192
00:15:11,600 --> 00:15:14,270
So the first one would be about right here.

193
00:15:14,390 --> 00:15:21,950
And notice that as I scroll to where the top of that element would hit the top of our browser viewport

194
00:15:24,880 --> 00:15:26,340
so right about here.

195
00:15:26,350 --> 00:15:31,530
Notice that the number again there are four numbers because there are four our feature Divs.

196
00:15:31,540 --> 00:15:35,740
But the first one is now very close to being zero.

197
00:15:35,800 --> 00:15:41,920
So to answer the question of what is this value what is get bounding client rect and then in particular

198
00:15:41,920 --> 00:15:43,270
the why property.

199
00:15:43,270 --> 00:15:51,010
Well it's a measure of how far the top edge of an element is from the top edge of the current bounding

200
00:15:51,010 --> 00:15:53,920
rectangle in this case the browser's viewport.

201
00:15:53,920 --> 00:15:59,320
So if I scrolled to where the top edge of this hidden element was perfectly hitting the edge of our

202
00:15:59,320 --> 00:16:02,810
viewport Well that would be zero.

203
00:16:02,830 --> 00:16:04,990
Now the value is measured in pixels.

204
00:16:04,990 --> 00:16:11,500
So if we just barely scroll to where the first item would be touching the bottom of the browser's viewport

205
00:16:12,040 --> 00:16:17,100
well then the value would be the height of our browser window in pixels.

206
00:16:17,110 --> 00:16:22,290
So with those numbers in mind we can now get a bit creative and come up with a solution.

207
00:16:22,300 --> 00:16:24,160
Let me show you what I have in mind.

208
00:16:24,160 --> 00:16:26,800
And again remember we want to reveal the items.

209
00:16:26,920 --> 00:16:33,340
Once you've scrolled to them a bit let's say maybe once the top of an item has been scrolled into the

210
00:16:33,340 --> 00:16:36,100
bottom 25 percent of our browser screen.

211
00:16:36,100 --> 00:16:38,720
Then we would want to slowly faded into view.

212
00:16:38,740 --> 00:16:39,120
Right.

213
00:16:39,490 --> 00:16:44,980
So back in our text editor within our calculate method let's get rid of this current line and start

214
00:16:44,980 --> 00:16:45,590
fresh.

215
00:16:46,090 --> 00:16:54,720
Let's create a variable and let's call it scroll percent and let's set it to equal.

216
00:16:54,720 --> 00:16:57,080
And then we're going to perform a bit of math.

217
00:16:57,120 --> 00:17:01,410
I'm going to open up with a bit of parentheses because I want what I'm going to place in here to happen

218
00:17:01,410 --> 00:17:05,690
first and then I want to multiply that by a hundred.

219
00:17:05,700 --> 00:17:06,190
OK.

220
00:17:06,240 --> 00:17:12,590
Now within these parentheses what I want to do is take that bounding rectangle number and then divide

221
00:17:12,590 --> 00:17:15,880
it by the height of the browser window.

222
00:17:15,960 --> 00:17:24,540
So let's do this within the parentheses we can say element dot get bounding client rect parentheses

223
00:17:24,540 --> 00:17:31,320
to call that and then after those parentheses dot y and then we want to divide that so forward slash

224
00:17:31,500 --> 00:17:36,590
divided by the web browsers height so window dot inner height.

225
00:17:37,570 --> 00:17:37,820
OK.

226
00:17:37,860 --> 00:17:44,610
Now altogether this is going to give us how far into the browser viewport the element has been scrolled

227
00:17:44,610 --> 00:17:44,970
to.

228
00:17:45,840 --> 00:17:49,000
So for example imagine if our first item lives here.

229
00:17:49,100 --> 00:17:51,680
So I'm scrolling I'm scrolling I haven't saved yet.

230
00:17:51,690 --> 00:17:57,780
So these numbers still don't make sense yet but if I scroll to about here our number would be about

231
00:17:57,780 --> 00:18:04,810
75 percent or just seventy five because this is about 25 percent of the browsers height.

232
00:18:04,950 --> 00:18:08,540
So let's do this right after our new line of code here.

233
00:18:08,550 --> 00:18:18,930
Let's drop down and say if parentheses curly brackets for our if condition let's say if scroll percent

234
00:18:20,040 --> 00:18:25,430
is less then and we can tweak this value later but for now let's just say seventy five.

235
00:18:25,710 --> 00:18:28,700
Only if that's the case then let's reveal the item.

236
00:18:28,710 --> 00:18:30,140
Let's make it visible.

237
00:18:30,510 --> 00:18:38,430
So yell to work with the element and then let's say dot class list dot add and we give it a class of

238
00:18:38,640 --> 00:18:43,940
reveal item Dash Dash is visible.

239
00:18:44,040 --> 00:18:45,920
Let's go ahead and save this.

240
00:18:45,990 --> 00:18:52,170
And now I know web pack inserts the new javascript on the fly but let's actually perform a refresh because

241
00:18:52,170 --> 00:18:57,060
we don't want our old event handler still firing after you refresh.

242
00:18:57,060 --> 00:19:05,940
If we scroll down and scroll very slowly just so we can see this in action noticed that as the item

243
00:19:06,480 --> 00:19:12,990
crosses the 75 or depending on how you're looking at it the 25 percent threshold of our viewport it

244
00:19:12,990 --> 00:19:16,330
slowly fades into view.

245
00:19:16,320 --> 00:19:22,260
However even though the feature is up and running it is far from complete because as of this moment

246
00:19:22,500 --> 00:19:28,160
the code that we have written is terribly horrendously inefficient.

247
00:19:28,200 --> 00:19:34,140
So in our next lesson we are going to make our code much more efficient so it doesn't waste the computing

248
00:19:34,140 --> 00:19:36,210
horsepower of the browser.

249
00:19:36,210 --> 00:19:42,990
Also we will learn how to make our module recyclable so that we can use it to reveal the testimonials

250
00:19:43,230 --> 00:19:44,910
once they are scrolled to.

251
00:19:44,910 --> 00:19:50,700
It should be a lot of fun to set up so let's keep things rolling and I will see you in the next lesson.
