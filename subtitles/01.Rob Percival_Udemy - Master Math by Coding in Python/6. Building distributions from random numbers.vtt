WEBVTT
1
00:00:03.370 --> 00:00:11.500
In this video we are going to continue our discussion on building distributions and histogram from random

2
00:00:11.680 --> 00:00:17.170
processes as opposed to discrete processes which you've been learning about so far.

3
00:00:17.290 --> 00:00:24.310
So I'm going to start the video by talking about the distinction between a random process and a discrete

4
00:00:24.310 --> 00:00:25.150
process.

5
00:00:25.330 --> 00:00:31.300
And in Python you're going to get to see several different shapes of distributions of random numbers

6
00:00:31.810 --> 00:00:36.930
and in the exercise which is probably going to be in the separate video.

7
00:00:37.080 --> 00:00:44.710
You are going to learn how to change the shape of distribution so to normalize the shape of any distribution

8
00:00:44.830 --> 00:00:48.070
into a galaxy and distribution.

9
00:00:48.070 --> 00:00:55.480
Now so far in this section of the course most of the distributions that we've been working with with

10
00:00:55.540 --> 00:01:01.540
some exceptions are those mathematical functions so X X squared and X cubed but most of the data sets

11
00:01:01.540 --> 00:01:07.690
that we've been working with are discrete in the sense that there are individual elements unique elements

12
00:01:07.780 --> 00:01:15.640
in the distribution like letters or some binary outcome or the result of rolling a die but not everything

13
00:01:15.700 --> 00:01:17.800
in the world is discrete like this.

14
00:01:17.800 --> 00:01:20.770
There is also for example links.

15
00:01:20.830 --> 00:01:26.810
So let's imagine you wanted to create a distribution of the length of a bunch of blades of grass.

16
00:01:26.810 --> 00:01:27.550
So that's what these are.

17
00:01:27.550 --> 00:01:32.860
These are all individual blades of grass and maybe I don't know you're really bored on the weekends

18
00:01:32.860 --> 00:01:38.740
and you don't have any friends so you go out and you just measure the lengths of blades of grass.

19
00:01:38.740 --> 00:01:40.220
Actually I shouldn't be disparaging.

20
00:01:40.240 --> 00:01:47.830
Perhaps it's a really interesting hobby to measure all these lengths anyway but how do you build a distribution

21
00:01:47.830 --> 00:01:48.220
of these.

22
00:01:48.220 --> 00:01:54.490
You can say something like you know let's count the number of blades of grass that were two centimeters

23
00:01:54.490 --> 00:01:58.190
long 4 centimeters long five point three centimeters long.

24
00:01:58.270 --> 00:02:04.650
But the thing is you're really never going to find a blade of grass that is exactly three centimeters.

25
00:02:04.660 --> 00:02:10.690
So three point 0 0 0 0 0 0 0 centimeters is always gonna be some range.

26
00:02:10.690 --> 00:02:15.760
So these are called discrete processes or discrete sets discrete numbers.

27
00:02:16.120 --> 00:02:22.450
And these are random now they're called random not because they're totally random and unpredictable

28
00:02:22.600 --> 00:02:28.000
but because the values in this particular example of the length of a blade of grass.

29
00:02:28.120 --> 00:02:35.470
Those values can take any possible range or any value in the real numbers given of course some physical

30
00:02:35.470 --> 00:02:36.650
constraints.

31
00:02:36.670 --> 00:02:36.910
OK.

32
00:02:36.940 --> 00:02:42.490
So to create a histogram of a dataset like this you just count the number of A's.

33
00:02:42.640 --> 00:02:48.320
So there are two A's too BS and foresees for a random process like this.

34
00:02:48.330 --> 00:02:55.780
But you have to do is set up a range of numbers so you would say how many blades of grass are between

35
00:02:56.110 --> 00:03:03.280
1 and 2 centimeters not exactly one centimeter or exactly one point five centimeters but between 1 and

36
00:03:03.280 --> 00:03:06.590
2 centimeters how many are between 2 and 3 centimeters.

37
00:03:06.670 --> 00:03:09.550
And how many are between 3 and 4 and so on.

38
00:03:09.550 --> 00:03:15.430
Now you've already been introduced to this idea in the first video of this course.

39
00:03:15.430 --> 00:03:20.500
But here I'm talking about it in a little bit more detail and I'm going to explain a little bit more

40
00:03:20.830 --> 00:03:24.570
how the Hist and histogram functions work in Python.

41
00:03:24.610 --> 00:03:31.600
Now what's interesting about this approach of generating histogram from random processes is that you

42
00:03:31.600 --> 00:03:37.510
have more control over the kinds of histogram results that you're going to get.

43
00:03:37.510 --> 00:03:44.560
So for example you can say that I want exactly three bins that are evenly spaced between the numbers

44
00:03:44.560 --> 00:03:45.540
1 and 4.

45
00:03:45.550 --> 00:03:49.770
And that's what you get here or you can specify the exact ranges.

46
00:03:49.780 --> 00:03:53.800
Now in this case the ranges are all exactly the same with.

47
00:03:53.860 --> 00:04:00.120
So it's always you know one centimeter but you can also create these ranges to have different lengths.

48
00:04:00.120 --> 00:04:06.700
So let's say this would be one to one point five and this bean would be one point five to three.

49
00:04:06.730 --> 00:04:11.320
So I'm going to show you all these possibilities in Python.

50
00:04:11.420 --> 00:04:18.950
I'm going to start by creating a normal distribution so you will recall that a normal distribution has

51
00:04:18.950 --> 00:04:19.880
two parameters.

52
00:04:19.880 --> 00:04:23.030
There is the shift parameter and let's set that to.

53
00:04:23.030 --> 00:04:29.000
I don't know how about five and then we have a stressed parameter and maybe set that too and then I

54
00:04:29.000 --> 00:04:31.750
will specify the N to be a thousand.

55
00:04:31.760 --> 00:04:35.270
So it's gonna be 1000 data points that I'm going to generate.

56
00:04:35.660 --> 00:04:42.350
So now let's generate those data points so none Pieta random that Rand and now if I just write the code

57
00:04:42.350 --> 00:04:49.580
like this then this is going to generate not a normal distribution of random numbers with a mean of

58
00:04:49.640 --> 00:04:52.760
zero and a variance of 1.

59
00:04:52.910 --> 00:05:02.660
So to apply these two parameters you multiply by the stretch parameter and then add the shift parameter

60
00:05:03.500 --> 00:05:06.230
and then let's just make sure that this is correct.

61
00:05:06.260 --> 00:05:15.870
So I'm going to print out the mean of the distribution is that maybe I'll say the mean is % G.

62
00:05:15.920 --> 00:05:19.940
And the standard deviation is percent G.

63
00:05:19.940 --> 00:05:24.570
And then here we replace the first percent g with NUM pi.

64
00:05:24.630 --> 00:05:35.170
I mean of all the points and then the standard deviation of all of the points OK I made a mistake here

65
00:05:35.260 --> 00:05:42.010
and I wonder if you can also spot my mistake so my mistake is that I didn't provide any inputs into

66
00:05:42.010 --> 00:05:47.850
the rand and function which means that it was only generating a single number here.

67
00:05:48.040 --> 00:05:52.850
So I can show that you here I can say print P.A. us and it's only one number.

68
00:05:52.960 --> 00:05:56.590
So of course the mean is that number and the standard deviation is zero.

69
00:05:56.590 --> 00:05:59.140
There is no variability at all.

70
00:05:59.140 --> 00:06:03.030
All right let's try this again.

71
00:06:03.070 --> 00:06:03.820
There we go.

72
00:06:03.820 --> 00:06:10.200
So the mean is 5 and the standard deviation is 1 point 9 7 which is pretty close to 2.

73
00:06:10.210 --> 00:06:10.450
Okay.

74
00:06:10.480 --> 00:06:17.590
So then what I'm going to do is generate a figure peyote with subplots.

75
00:06:17.590 --> 00:06:27.310
Let's go for how about a one by two geometry and I'm gonna specify that the figure size should be six

76
00:06:27.310 --> 00:06:29.750
by four inches.

77
00:06:29.750 --> 00:06:30.480
And let's see.

78
00:06:30.490 --> 00:06:37.990
So then in the first subplot I want to draw a plot of the numbers that's gonna be points and let's see.

79
00:06:37.990 --> 00:06:43.120
I'm going to just to make this look I think it'll look a little bit nicer if we add a little bit of

80
00:06:43.540 --> 00:06:45.080
transparency here.

81
00:06:45.310 --> 00:06:45.570
Okay.

82
00:06:45.580 --> 00:06:51.640
And then in the second subplot which is gonna be to the right I'm going to create a histogram of all

83
00:06:51.640 --> 00:06:53.300
of the points.

84
00:06:53.440 --> 00:06:58.300
So let's see what this looks like so that looks pretty good.

85
00:06:58.300 --> 00:07:03.270
I think I might change this from four to three that I think that looks a little bit better.

86
00:07:03.280 --> 00:07:03.570
Okay.

87
00:07:03.640 --> 00:07:08.770
So what I would like to do now is make this histogram be a little bit finer.

88
00:07:08.770 --> 00:07:11.280
So I want more resolution in this histogram.

89
00:07:11.290 --> 00:07:18.920
So I'm going to provide a second input into the Hist function and that's going to be let's say one hundred.

90
00:07:19.060 --> 00:07:27.070
So now we get 100 bins between the smallest value and the largest value and you can see that the center

91
00:07:27.070 --> 00:07:30.480
of this distribution is indeed around 5.

92
00:07:30.490 --> 00:07:32.820
Now what would happen if you make this larger.

93
00:07:32.920 --> 00:07:36.000
Let's try for like 500.

94
00:07:36.100 --> 00:07:38.830
So it's starting to look a little bit less nice.

95
00:07:38.830 --> 00:07:40.850
Let's go for a thousand.

96
00:07:40.850 --> 00:07:48.020
So now when there's 1000 bins that actually corresponds to the same as the total number of points.

97
00:07:48.100 --> 00:07:54.340
Now it's not necessarily going to correspond to one bin per point because there could be some points

98
00:07:54.340 --> 00:07:55.830
that are really really close together.

99
00:07:55.840 --> 00:08:01.240
So they still end up in the same bin but you can see that the largest bin which is right around the

100
00:08:01.240 --> 00:08:06.310
center of the Gaussian distribution has only seven numbers in there.

101
00:08:06.340 --> 00:08:07.840
So this is actually too much.

102
00:08:08.230 --> 00:08:16.090
Now there are all sorts of guidelines to know what is an appropriate number of bins for a particular

103
00:08:16.120 --> 00:08:17.380
distribution.

104
00:08:17.380 --> 00:08:19.780
However those are all basically guidelines.

105
00:08:19.780 --> 00:08:26.800
There is no real hard and fast rules to know with certainty what is the right or the correct number

106
00:08:26.800 --> 00:08:29.030
of bins for a distribution.

107
00:08:29.050 --> 00:08:33.580
So usually you just play around guess a few different numbers and see what looks good.

108
00:08:34.000 --> 00:08:36.950
So I am pretty happy with 50 here.

109
00:08:36.970 --> 00:08:41.020
The next distribution I want to show is a uniform distribution.

110
00:08:41.020 --> 00:08:46.300
Now of course you remember what a uniform distribution is.

111
00:08:46.540 --> 00:08:50.840
It is a distribution that is given first of all by the function Rand.

112
00:08:50.860 --> 00:08:55.280
So not Rand N but just Rand and the distribution like this.

113
00:08:55.280 --> 00:09:00.430
So if we just write the code like this that's going to give us uniformly distributed numbers between

114
00:09:00.490 --> 00:09:02.480
0 and 1.

115
00:09:02.620 --> 00:09:09.120
And so if you want to stretch and shift this distribution the formula is a little bit more complicated.

116
00:09:09.130 --> 00:09:16.220
So we'd say times stretch and actually it's already interesting to look at this so far.

117
00:09:16.570 --> 00:09:23.050
So now we've done a stretch this distribution to go from zero to two and now what I want to do is shift

118
00:09:23.050 --> 00:09:26.100
it so that the mean is around five.

119
00:09:26.110 --> 00:09:30.370
Now you can try doing something like what we did with the normal distribution.

120
00:09:30.370 --> 00:09:35.280
So just adding the shift parameter but that is not going to work.

121
00:09:35.290 --> 00:09:38.320
That's not going to be accurate which you can see here.

122
00:09:38.380 --> 00:09:45.370
And the reason why this isn't accurate is because this distribution on its own doesn't already have

123
00:09:45.700 --> 00:09:48.150
a mean value of zero.

124
00:09:48.160 --> 00:09:53.980
So by shifting it by adding this well we're actually adding is whatever is the mean of this distribution

125
00:09:54.670 --> 00:10:00.880
not just this distribution and the mean of this stretched distribution is basically going to be half

126
00:10:00.880 --> 00:10:01.730
of this.

127
00:10:01.810 --> 00:10:11.880
So therefore we say plus shift minus one half or I'll say point five times the stretch parameter loops

128
00:10:11.950 --> 00:10:19.390
that should be spelled like this okay and then another difference is that for a uniform distribution

129
00:10:19.690 --> 00:10:23.710
the standard deviation is actually less relevant than the range.

130
00:10:23.710 --> 00:10:28.930
And that's because the size of the variance is the same for the entire distribution.

131
00:10:28.930 --> 00:10:31.450
The variance is the same everywhere.

132
00:10:31.450 --> 00:10:34.420
So what we actually care about here is the range.

133
00:10:34.420 --> 00:10:39.810
So therefore instead of computing the standard deviation I'm going to report the range.

134
00:10:39.820 --> 00:10:43.620
So I will say the range is.

135
00:10:43.620 --> 00:10:49.120
And then what we need to do here is say instead of standard deviation the range is just the largest

136
00:10:49.120 --> 00:10:51.040
value minus the smallest value.

137
00:10:51.070 --> 00:10:55.010
So none paid out Max minus none piled up.

138
00:10:55.030 --> 00:10:57.450
Men of P.A. yes.

139
00:10:57.460 --> 00:10:58.540
And there you go.

140
00:10:58.540 --> 00:11:05.590
Now we get the requested parameters I mentioned in the slides a few moments ago that you can specify

141
00:11:05.590 --> 00:11:06.360
a histogram.

142
00:11:06.400 --> 00:11:13.110
Not only according to the number of bins but also according to the exact boundaries of the bins.

143
00:11:13.120 --> 00:11:18.370
And again this is something that I introduced you to in the very beginning of this section but now I'm

144
00:11:18.370 --> 00:11:20.830
going to talk about it in more detail.

145
00:11:20.830 --> 00:11:28.510
So I'm gonna say bins equals and now instead of just specifying a number like 50 I'm going to specify

146
00:11:28.780 --> 00:11:31.200
the exact boundaries of the bins.

147
00:11:31.200 --> 00:11:40.410
So let's say 4 and 4.5 and 5 5.5 and 6.

148
00:11:40.470 --> 00:11:45.310
And now keep in mind that this last number here is actually exclusive.

149
00:11:45.310 --> 00:11:49.480
So that means that the last bin is gonna go up to 6.

150
00:11:49.480 --> 00:11:55.810
So therefore if you also have numbers in this distribution that are higher than six you'll want to have

151
00:11:55.930 --> 00:11:58.180
another boundary that is larger.

152
00:11:58.180 --> 00:12:00.860
Now in this particular case we don't need that.

153
00:12:00.850 --> 00:12:03.090
There's no numbers higher than six.

154
00:12:03.100 --> 00:12:05.690
So this bin ends up being empty.

155
00:12:05.690 --> 00:12:05.970
Okay.

156
00:12:05.980 --> 00:12:11.870
Now I have just illustrated to you creating these bins to be all equally sized.

157
00:12:11.980 --> 00:12:19.090
So the spacing between each bin boundary is exactly the same but that is just an option.

158
00:12:19.120 --> 00:12:28.330
So for example you can say four four point one and then maybe let's go up to five point four and then

159
00:12:28.440 --> 00:12:33.700
5.5 and six loops one too many comments in there.

160
00:12:33.850 --> 00:12:34.120
Okay.

161
00:12:34.150 --> 00:12:39.490
So then we get this kind of funny looking distribution and I think to be able to see this a little bit

162
00:12:39.490 --> 00:12:48.490
better to visualize this better what I'm going to do is set the edge color to be black and that's going

163
00:12:48.490 --> 00:12:55.330
to draw boundaries around each of these boxes so you can see this is still a histogram but the sizes

164
00:12:55.330 --> 00:12:57.150
of the bins are different.

165
00:12:57.340 --> 00:13:01.540
Now I would like to point out something and I hope that I'm very very clear about this.

166
00:13:01.630 --> 00:13:03.880
This is generally not a good idea.

167
00:13:03.910 --> 00:13:09.830
So having histogram bins of different widths is usually not a good idea.

168
00:13:09.910 --> 00:13:14.470
And the reason is that it can skew the appearance of the results.

169
00:13:14.620 --> 00:13:20.590
So you might look at this histogram and say oh most of the values are between four point one and five

170
00:13:20.590 --> 00:13:24.550
point four and there's fewer values above 5.5.

171
00:13:24.550 --> 00:13:29.980
Now that is kind of correct because that's how the histogram boundaries are created.

172
00:13:30.340 --> 00:13:36.790
However that is not really an appropriate interpretation or I should say it's very very easy to misinterpret

173
00:13:37.030 --> 00:13:37.690
the data.

174
00:13:37.690 --> 00:13:40.590
The characteristics of the data based on this histogram.

175
00:13:40.600 --> 00:13:46.720
And that's because this isn't really the case in the in the data the data are evenly distributed between

176
00:13:46.720 --> 00:13:47.900
4 and 6.

177
00:13:47.950 --> 00:13:54.910
But this histogram while not being technically incorrect this is actually correct but it is misleading

178
00:13:54.940 --> 00:13:56.860
and a little bit confusing.

179
00:13:56.890 --> 00:13:57.120
Okay.

180
00:13:57.130 --> 00:14:02.710
So I wanted to show you that this is possible but in general I don't recommend doing something like

181
00:14:02.710 --> 00:14:09.060
this much better just to have all of the bin boundaries have equal width.

182
00:14:09.220 --> 00:14:15.910
There is one more distribution that I want to introduce you to and it's a pretty interesting distribution

183
00:14:15.940 --> 00:14:20.680
and I'm going to put that in a new cell because I'm gonna be changing quite a few things.

184
00:14:20.830 --> 00:14:21.520
So let's see.

185
00:14:21.520 --> 00:14:29.950
So first of all the points are going to be drawn from a distribution that's called a plus on plus on

186
00:14:29.950 --> 00:14:31.870
distribution.

187
00:14:31.870 --> 00:14:38.300
And now we don't need any of these parameters the price on distribution has one parameter which is lambda.

188
00:14:38.300 --> 00:14:45.320
It's typically given as the Greek letter lambda I'm gonna specify this to be three point four.

189
00:14:45.520 --> 00:14:53.050
And so in the plus on function we input the lambda parameter and then the number of numbers that we

190
00:14:53.050 --> 00:14:58.750
want to extract and let's see I think all of this can stay the same.

191
00:14:58.750 --> 00:15:00.070
So let's see what this looks like.

192
00:15:01.060 --> 00:15:05.010
So here you see a plus on distributed random numbers.

193
00:15:05.020 --> 00:15:07.820
You can see they're all integers which is pretty interesting.

194
00:15:07.870 --> 00:15:13.480
And here you see the distribution which almost looks a little bit Gaussian but it's shifted off to the

195
00:15:13.480 --> 00:15:14.460
right.

196
00:15:14.460 --> 00:15:16.920
So what is this lambda parameter here.

197
00:15:16.950 --> 00:15:24.120
So the lambda parameter actually encodes both the mean and the variance so to show you that I'm going

198
00:15:24.120 --> 00:15:30.280
to say mean is percent G and variance is percent G.

199
00:15:30.420 --> 00:15:38.730
So now replace the present GS with NUM piled up mean P.A. us and num PI that mean some Pi the variance

200
00:15:39.390 --> 00:15:41.830
p and t us.

201
00:15:42.060 --> 00:15:42.740
All right.

202
00:15:42.810 --> 00:15:49.200
So I specified lambda to be three point four and what we got was a bunch of integers where the mean

203
00:15:49.200 --> 00:15:54.100
is three point four and the variance is also okay not exactly three point four.

204
00:15:54.160 --> 00:16:00.510
But if we keep running this over and over it's going to converge to three point four in theory that

205
00:16:00.510 --> 00:16:08.250
is a pretty remarkable feature of the plus on distribution that the mean is equal to the variance.

206
00:16:08.250 --> 00:16:13.860
So for example if you have small numbers then you're only going to have a few different integers and

207
00:16:13.860 --> 00:16:17.520
you can make this larger make the lambda parameter larger.

208
00:16:17.520 --> 00:16:20.490
And that changes the shape of the distribution.

209
00:16:20.490 --> 00:16:20.690
OK.

210
00:16:20.730 --> 00:16:23.630
So let's set this back to about 4.

211
00:16:23.880 --> 00:16:30.390
And now the thing is that with 50 bins for this distribution we end up with a lot of beans in here that

212
00:16:30.390 --> 00:16:31.920
are zero.

213
00:16:31.920 --> 00:16:35.490
That's why this bar plot has such thin bars.

214
00:16:35.490 --> 00:16:41.910
In fact there are you know there's there might be one or two spaces in between each of these bars where

215
00:16:41.910 --> 00:16:43.280
there are no values.

216
00:16:43.310 --> 00:16:47.320
So there is no value in between one and two.

217
00:16:47.340 --> 00:16:54.000
So therefore what I'm going to do is show you another trick for specifying the bins of the histogram.

218
00:16:54.000 --> 00:17:00.260
And this is a useful trick for cases like what we have here where you have integer numbers.

219
00:17:00.720 --> 00:17:10.200
So num pi dot a range and we are going to range from zero to the maximum of the points.

220
00:17:10.200 --> 00:17:12.780
So that specifies the bean edges.

221
00:17:12.810 --> 00:17:20.100
And now this looks a lot nicer except one more thing that we need to change here which is that I said

222
00:17:20.370 --> 00:17:25.410
earlier that this top value for the bins is going to be exclusive.

223
00:17:25.410 --> 00:17:32.190
So in fact what we really want to make this a complete histogram is the maximum value plus one so that

224
00:17:32.190 --> 00:17:37.240
we make sure we get the maximum value of this distribution inside this histogram.

225
00:17:37.940 --> 00:17:38.500
OK.

226
00:17:38.520 --> 00:17:45.950
And then let's try changing this to white because I think that also looks pretty nice I hope you found

227
00:17:45.950 --> 00:17:47.350
this video instructive.

228
00:17:47.360 --> 00:17:54.080
I told you a lot more about using the histogram function and the extra parameters that you can apply

229
00:17:54.140 --> 00:17:59.590
for the Hist function actually but the number pi histogram function works the same way.

230
00:17:59.690 --> 00:18:06.740
The next video is going to contain the exercise from this video is going to be super enlightening because

231
00:18:06.740 --> 00:18:12.450
you will learn how to transform any distribution from a non normal distribution.

232
00:18:12.450 --> 00:18:16.550
It doesn't matter what the shape is into a Gaussian distribution.

233
00:18:16.640 --> 00:18:17.920
So I will see you soon.
