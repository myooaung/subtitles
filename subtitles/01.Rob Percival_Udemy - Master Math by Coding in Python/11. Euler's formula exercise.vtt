WEBVTT
1
00:00:04.110 --> 00:00:11.280
This video is for the exercise that accompanies the previous video on Oilers formula.

2
00:00:11.560 --> 00:00:19.050
But you want to do in this exercise is right a function I call it Euler from costs sign and the idea

3
00:00:19.140 --> 00:00:26.370
is that this function will ask the user for two inputs one number corresponding to the cosine part and

4
00:00:26.400 --> 00:00:28.860
one number corresponding to the sine part.

5
00:00:29.010 --> 00:00:31.890
And then you want to generate a graph that looks like this.

6
00:00:31.890 --> 00:00:40.140
So we have the line so this vector here that corresponds to the vector that comes from having a cosine

7
00:00:40.140 --> 00:00:42.650
part of 3 and a sine part of 4.

8
00:00:42.840 --> 00:00:50.520
And then in the title of this polar plot you should also write out m e to the AI theta actually looks

9
00:00:50.520 --> 00:00:56.700
like here I'm using the great character fee but you know people use fee or theta to indicate angles

10
00:00:57.090 --> 00:01:04.020
so fee or theta and then you write m equals whatever it ends up being and theta and is also Whatever

11
00:01:04.020 --> 00:01:10.800
this ends up being and I don't notice that this graph has angled tick marks at kind of random looking

12
00:01:10.800 --> 00:01:11.580
places.

13
00:01:11.700 --> 00:01:20.710
So there is actually a way to specify using a polar plot which theta grids you want to have indicated.

14
00:01:20.730 --> 00:01:25.320
Now I haven't yet shown you how to do that so that's gonna be something that you will have to figure

15
00:01:25.320 --> 00:01:32.770
out how to get these theta grid lines to show at whatever angles you want them to be.

16
00:01:32.850 --> 00:01:33.150
All right.

17
00:01:33.150 --> 00:01:37.050
So now is your chance to pause the videos switch to Python.

18
00:01:37.050 --> 00:01:40.980
Write some code get a function that will reproduce this output.

19
00:01:40.980 --> 00:01:47.020
And now I am going to switch to Python and you can watch me solve this all right.

20
00:01:47.050 --> 00:01:50.950
So let's start down on a new cell over here.

21
00:01:50.950 --> 00:01:59.950
So as I mentioned I called my function Euler from costs sine and again we don't need any inputs into

22
00:01:59.950 --> 00:02:04.760
this function because we are going to get them from the user.

23
00:02:04.900 --> 00:02:05.790
So let's see.

24
00:02:05.800 --> 00:02:16.510
I will take the real part and that's going to be input cosine part and then the imaginary part which

25
00:02:16.510 --> 00:02:22.690
corresponds to the signs of the real part always corresponds the cosine the imaginary part corresponds

26
00:02:22.690 --> 00:02:23.570
to the sine.

27
00:02:23.650 --> 00:02:27.520
That's going to be input sine part.

28
00:02:27.670 --> 00:02:28.000
OK.

29
00:02:28.060 --> 00:02:34.300
Now you already know from previous videos in this section and in previous sections that this is not

30
00:02:34.300 --> 00:02:36.430
really going to work as is.

31
00:02:36.430 --> 00:02:41.270
And that's because the output of this function is going to be a string.

32
00:02:41.380 --> 00:02:43.790
But we need to be working with numbers.

33
00:02:43.900 --> 00:02:47.330
So therefore you could write something like this float.

34
00:02:47.980 --> 00:02:55.360
However you also learned in a previous video in this section that this will only work if you actually

35
00:02:55.360 --> 00:02:56.470
input numbers.

36
00:02:56.470 --> 00:03:04.510
If you input Pi which is a pretty reasonable input to make here in this case then this is going to lead

37
00:03:04.510 --> 00:03:04.990
to an error.

38
00:03:05.020 --> 00:03:08.910
So in fact the best way to set this up is with eval.

39
00:03:08.940 --> 00:03:15.640
So we will evaluate whatever the input is and of course we need in parentheses over here.

40
00:03:16.860 --> 00:03:17.250
Okay.

41
00:03:17.280 --> 00:03:23.920
So just to make sure that this part is working I'm just going to print out the real part and the imaginary

42
00:03:23.920 --> 00:03:29.500
part and then I'm already going to run this with a couple of different inputs.

43
00:03:29.500 --> 00:03:30.390
So.

44
00:03:30.730 --> 00:03:35.140
So the cosine part let's just uh let's say 5 and 5.

45
00:03:35.140 --> 00:03:35.790
Okay.

46
00:03:35.800 --> 00:03:40.590
So when the inputs work as expected we get the appropriate outputs.

47
00:03:40.600 --> 00:03:41.890
Let's try it again.

48
00:03:41.890 --> 00:03:44.340
Now I'm gonna make sure this works with pi.

49
00:03:44.350 --> 00:03:49.140
Let's say pi and pi over whatever some number.

50
00:03:49.210 --> 00:03:54.530
Okay so here we get Pi and I don't know what this number is but it's a pretty small number.

51
00:03:54.610 --> 00:03:59.310
And that's to be expected because I made the denominator exceedingly large here.

52
00:03:59.530 --> 00:04:00.880
Let's try one more thing.

53
00:04:00.880 --> 00:04:05.740
How about uh if I set this to be text 0.

54
00:04:05.860 --> 00:04:06.870
Now we get an error.

55
00:04:06.910 --> 00:04:07.500
Okay.

56
00:04:07.600 --> 00:04:09.970
It says Name A S J.

57
00:04:09.970 --> 00:04:13.130
D H F is not defined.

58
00:04:13.210 --> 00:04:21.190
Now the reason why we get this error is that Python is trying to evaluate this input whatever this input

59
00:04:21.190 --> 00:04:21.690
is.

60
00:04:21.700 --> 00:04:27.840
So this is basically the same thing as saying insert so below.

61
00:04:28.000 --> 00:04:35.350
It's as if we would just write this down here and then run this cell and then we get exactly the same

62
00:04:35.380 --> 00:04:39.430
error is a name error because this name is not defined.

63
00:04:39.430 --> 00:04:45.940
Now I'm not going to worry about this but it's something to be aware of that if you are writing functions

64
00:04:45.940 --> 00:04:52.820
for your own personal use then it's fine to make some assumptions about what the user will input.

65
00:04:53.020 --> 00:04:59.320
But if you are going to be using these kinds of functions for production quality code that is code that

66
00:04:59.320 --> 00:05:05.350
you're going to be giving to other people sharing with other people maybe posting online for anyone

67
00:05:05.350 --> 00:05:11.620
else in the world to use then it is important to think about what can happen if someone would provide

68
00:05:11.620 --> 00:05:14.250
some really weird input that you don't expect.

69
00:05:14.310 --> 00:05:21.500
Okay so I just wanted to say that and make that clear but I'm going to ignore this issue for now anyway.

70
00:05:21.520 --> 00:05:24.090
So now the question is how do we get.

71
00:05:24.100 --> 00:05:32.710
So we need to get m and K to build up Oilers formula from the here I call it the real part the imaginary

72
00:05:32.710 --> 00:05:36.320
part but that's corresponding to the cosine part and the sine part.

73
00:05:36.370 --> 00:05:39.760
So how do we get m and K out of these two parts.

74
00:05:39.760 --> 00:05:47.020
Well you might remember from the section on algebra 2 that the way to extract the magnitude the distance

75
00:05:47.020 --> 00:05:51.080
from the origin is to use the Pythagorean theorem.

76
00:05:51.160 --> 00:05:58.840
And so that is going to be the square root of the real part squared plus the imaginary part squared.

77
00:05:58.840 --> 00:06:03.910
In other words the cosine part squared plus the sine part squared.

78
00:06:03.910 --> 00:06:08.290
And then K the angle K we extract using the arc tangent.

79
00:06:08.290 --> 00:06:15.820
So the inverse of the tangent function and then we input the imaginary part and the real part again

80
00:06:15.820 --> 00:06:19.990
that corresponds to these sine part and the cosine part.

81
00:06:20.400 --> 00:06:20.650
OK.

82
00:06:20.680 --> 00:06:23.080
So now we are ready to make a plot.

83
00:06:23.080 --> 00:06:26.250
So let's say BLT dot puller.

84
00:06:26.320 --> 00:06:37.000
And now this first input is gonna be 0 K and then the second input is going to be 0 m and then P L T

85
00:06:37.000 --> 00:06:37.870
that show.

86
00:06:37.930 --> 00:06:42.880
Now there's already a couple more things that we need to to do in this formula but I want to run this

87
00:06:43.180 --> 00:06:50.290
now just to make sure that it's working so input the cosine part let's say three and a sine part is

88
00:06:50.290 --> 00:06:54.090
four and we get an angle over here.

89
00:06:54.160 --> 00:06:56.050
So how do we know that this is correct.

90
00:06:56.050 --> 00:07:01.990
Well it's probably a good idea to run this again with some known results so we can double check.

91
00:07:01.990 --> 00:07:06.760
So let's make the cosine Part B 1 and the sine Part B zero.

92
00:07:07.150 --> 00:07:12.940
And then you see that we have a unit vector that's exactly along the coastline axis.

93
00:07:12.970 --> 00:07:14.860
So that's pretty good.

94
00:07:14.860 --> 00:07:20.940
And maybe I'll say the cosine part is minus one the sine part is minus one.

95
00:07:21.010 --> 00:07:29.170
And I know for sure that this line this vector here has to lie on a diagonal because the cosine and

96
00:07:29.170 --> 00:07:35.320
the sine part are equal so when the cosine and sine parts are equal we have vectors on the diagonal

97
00:07:35.320 --> 00:07:38.350
in the 45 degree or two twenty five diagonal.

98
00:07:38.350 --> 00:07:44.610
And if these two are equal in magnitude but different in sine then the vector would be across this diagonal

99
00:07:44.620 --> 00:07:45.940
over here.

100
00:07:45.940 --> 00:07:46.180
All right.

101
00:07:46.210 --> 00:07:48.460
So this is pretty good we're getting somewhere.

102
00:07:48.550 --> 00:07:57.110
But I want to do next is write the titles so P L T the title and now this is going to say m e to the.

103
00:07:57.130 --> 00:07:59.900
Now I need to use later coding to have powers here.

104
00:07:59.920 --> 00:08:07.420
So I'm going to write to Dollar Signs and in between them use a carrot to indicate exponential nation.

105
00:08:07.600 --> 00:08:09.600
And then this is going to be I.

106
00:08:09.670 --> 00:08:10.660
And then fee.

107
00:08:11.530 --> 00:08:17.950
So m e to the Ike comma m equals and then we'll need a substitution here.

108
00:08:18.040 --> 00:08:18.930
Percent G.

109
00:08:18.970 --> 00:08:24.720
And then I also want this to be in later coding so I'm going to write.

110
00:08:24.790 --> 00:08:27.700
Fee equals.

111
00:08:27.700 --> 00:08:30.790
And then another percent G over here.

112
00:08:30.790 --> 00:08:31.150
All right.

113
00:08:31.150 --> 00:08:37.550
So then these substitutions are M and K so let's do one and one.

114
00:08:37.840 --> 00:08:39.480
And here we go.

115
00:08:39.940 --> 00:08:41.260
M e to Ike.

116
00:08:41.320 --> 00:08:42.900
M equals one point four.

117
00:08:42.900 --> 00:08:49.240
And we can confirm on the graph that is consistent with what we see on this plot and fee equals point

118
00:08:49.240 --> 00:08:51.270
seven eight radians.

119
00:08:51.310 --> 00:08:56.740
And now I don't actually know what point seven eight radians means but looking at this vector I know

120
00:08:56.740 --> 00:09:04.780
that this should be pi over four and that's because this right angle here would be pi over 2 and this

121
00:09:04.780 --> 00:09:05.320
is pi.

122
00:09:05.620 --> 00:09:08.710
So this is pi over to then this has to be pi over four.

123
00:09:08.740 --> 00:09:16.120
So let's see NPD up pi divided by 4 indeed equals point 7 8 5 3 9.

124
00:09:16.180 --> 00:09:16.360
Yeah.

125
00:09:16.390 --> 00:09:17.470
So this is legit.

126
00:09:17.470 --> 00:09:18.940
That's correct.

127
00:09:18.940 --> 00:09:19.210
All right.

128
00:09:19.210 --> 00:09:27.260
So now all of the grid lines here for the angles are equally spaced but that is not what I want.

129
00:09:27.280 --> 00:09:34.720
I want to be able to control exactly which vectors get drawn or which guide angles get drawn.

130
00:09:34.720 --> 00:09:37.300
So to do that I hope you discovered this on your own.

131
00:09:37.420 --> 00:09:39.590
The function name is called theta.

132
00:09:39.700 --> 00:09:41.880
Or the property name is theta grids.

133
00:09:42.130 --> 00:09:47.530
And then you input a list that says which angles should get drawn.

134
00:09:47.560 --> 00:09:56.240
So for example if I leave that list blank then I get no indicators at all anywhere.

135
00:09:56.470 --> 00:09:59.910
And then basically whatever numbers you put in here are going to be drawn here.

136
00:09:59.920 --> 00:10:05.690
So I forget exactly what I showed in the picture in the slides but it was something like forty five

137
00:10:05.710 --> 00:10:16.820
maybe it was one thirty and two hundred and two twenty one two point two about that whoops.

138
00:10:16.950 --> 00:10:19.890
A typical mistake.

139
00:10:19.890 --> 00:10:26.640
I think this is in one of the bug hands from earlier as well that I didn't use commas I use spaces in

140
00:10:26.640 --> 00:10:28.280
here instead of comments.

141
00:10:28.570 --> 00:10:28.990
Okay.

142
00:10:29.010 --> 00:10:31.050
So let's see.

143
00:10:31.080 --> 00:10:31.370
All right.

144
00:10:31.380 --> 00:10:34.080
So it looks like the uh my colonel got stuck.

145
00:10:34.110 --> 00:10:41.100
You can see that happening when the the little ball over here to the left of Python 3 is busy and sometimes

146
00:10:41.100 --> 00:10:47.550
you can press this stop button here to interrupt the colonel sometimes that works sometimes it's actually

147
00:10:47.550 --> 00:10:50.890
best just to restart the kernel.

148
00:10:51.000 --> 00:10:54.150
That does mean that all of your variables will be lost.

149
00:10:54.150 --> 00:10:57.170
However that's not such a problem for us.

150
00:10:57.350 --> 00:10:57.630
Okay.

151
00:10:57.660 --> 00:11:00.890
So now you can see that this circle is empty again.

152
00:11:00.930 --> 00:11:06.750
So now I need to rerun basically everything that's really important which is just that top line and

153
00:11:06.750 --> 00:11:12.770
then this function and then I can run the function OK.

154
00:11:12.810 --> 00:11:20.880
So here you see we get these theta guidelines at zero forty five one thirty two hundred and two twenty

155
00:11:20.880 --> 00:11:22.350
two.

156
00:11:22.410 --> 00:11:23.090
Very nice.

157
00:11:23.100 --> 00:11:29.940
I hope you enjoyed this video and the previous video on Oilers formula and it also ended up being serendipitous

158
00:11:29.940 --> 00:11:36.480
that you learned about what to do when the kernel gets stuck in Python how to restart it in the next

159
00:11:36.480 --> 00:11:37.260
couple of videos.

160
00:11:37.270 --> 00:11:45.000
We are going to continue using Oilers formula and cosine and sign and trigonometry to create some pretty

161
00:11:45.000 --> 00:11:45.950
looking art.

162
00:11:45.960 --> 00:11:47.280
So stay tuned.
