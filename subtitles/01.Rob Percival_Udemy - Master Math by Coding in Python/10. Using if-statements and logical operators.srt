0
1
00:00:02,550 --> 00:00:05,560
I am really excited for this video.
1

2
00:00:05,580 --> 00:00:11,520
I mean, I am excited about all these videos, but this one in particular is going to be great because you
2

3
00:00:11,520 --> 00:00:15,450
are going to learn about if statements in Python.
3

4
00:00:15,450 --> 00:00:22,230
If statements are one of the most important control functions in all of programming. So you're going
4

5
00:00:22,230 --> 00:00:27,690
to learn how to use and how to interpret if statements in Python. And along the way,
5

6
00:00:27,690 --> 00:00:33,900
you will also see how to use AND and OR, these are called logical operations.
6

7
00:00:33,900 --> 00:00:39,840
Now you must be thinking that because if statements are so important in programming then they must be
7

8
00:00:39,840 --> 00:00:42,080
really hard and really confusing.
8

9
00:00:42,600 --> 00:00:44,050
Well you are wrong.
9

10
00:00:44,190 --> 00:00:50,880
If statements are actually really really easy because you use if statements all the time in your normal
10

11
00:00:50,880 --> 00:00:52,140
human language.
11

12
00:00:52,260 --> 00:00:58,950
So I'm going to first introduce you to if statements in the human language you say something like if
12

13
00:00:58,950 --> 00:01:05,850
it's raining then I will bring an umbrella or if it's sunny I'll buy an ice cream cone.
13

14
00:01:05,850 --> 00:01:11,640
Otherwise if neither of these is true then I'll start learning math using python.
14

15
00:01:11,640 --> 00:01:11,930
All right.
15

16
00:01:11,960 --> 00:01:18,180
So this is kind of the way you would go through it if you are a human and I assume you're a human.
16

17
00:01:18,240 --> 00:01:24,330
The formatting is only slightly different in Python so here's how it looks in Python.
17

18
00:01:24,330 --> 00:01:32,730
We say if raining and raining here or whatever goes in here after the if and before the colon here this
18

19
00:01:32,820 --> 00:01:34,710
needs to be a boolean.
19

20
00:01:34,710 --> 00:01:38,680
So this needs to evaluate to True or false.
20

21
00:01:38,850 --> 00:01:41,760
So if this is true then you run this code.
21

22
00:01:41,820 --> 00:01:50,390
If this is false if this statement in here is false then python is going to go to the next piece, which
22

23
00:01:50,390 --> 00:01:54,590
here it says elif but that's... elif stands for
23

24
00:01:54,590 --> 00:01:56,900
Else if. sunny.
24

25
00:01:56,930 --> 00:01:59,380
So again this has to be a Boolean true or false.
25

26
00:01:59,540 --> 00:02:01,980
And if this is true then I run this code.
26

27
00:02:02,210 --> 00:02:05,550
And if this is false then I run this code.
27

28
00:02:05,630 --> 00:02:09,470
So this is the full format of an if statement.
28

29
00:02:09,470 --> 00:02:16,970
So you have if and then a boolean so true or false and if this is true this code gets run and all of
29

30
00:02:16,970 --> 00:02:23,620
this code gets skipped but if this is false then python will test the next thing here and then the next
30

31
00:02:23,620 --> 00:02:24,450
thing here.
31

32
00:02:24,460 --> 00:02:30,510
Now if both of these are false then else gets run, no matter what. You will see in a moment,
32

33
00:02:30,520 --> 00:02:37,030
when I switched to Python, that if is important that's the necessary part of the if statement, Elif and
33

34
00:02:37,030 --> 00:02:38,320
else are optional.
34

35
00:02:38,320 --> 00:02:39,970
You can include them if you want.
35

36
00:02:39,970 --> 00:02:42,620
They are not necessary.
36

37
00:02:42,770 --> 00:02:47,610
So this is for a single conditionals so raining has to be true or false.
37

38
00:02:47,660 --> 00:02:55,190
But what if we wanted to include multiple conditionals? That can be done by basically stacking multiple
38

39
00:02:55,190 --> 00:02:56,210
logical operators.
39

40
00:02:56,200 --> 00:02:57,620
So let me show you what that looks like.
40

41
00:02:58,190 --> 00:03:04,140
So you might have if raining or snowing then that's what these two call it.
41

42
00:03:04,160 --> 00:03:06,190
That's what this colon indicates here.
42

43
00:03:06,260 --> 00:03:08,030
Learn Python at home.
43

44
00:03:08,090 --> 00:03:15,740
So this means that this code gets evaluated if it's raining or if it's snowing. So the or means if this
44

45
00:03:15,740 --> 00:03:20,170
is true or this is true both of these don't have to be true.
45

46
00:03:20,330 --> 00:03:25,880
If you want to setup an if conditionals so that both statements must be true for this code to be run
46

47
00:03:26,240 --> 00:03:27,530
then that looks like this.
47

48
00:03:27,530 --> 00:03:33,790
You would say if it's sunny and it's warm then learn Python at the beach.
48

49
00:03:33,830 --> 00:03:36,580
That sounds like a great idea.
49

50
00:03:36,620 --> 00:03:41,570
Now this code is only run when both of these conditionals are true.
50

51
00:03:41,600 --> 00:03:44,570
So it has to be sunny and it has to be warm.
51

52
00:03:45,570 --> 00:03:45,830
OK.
52

53
00:03:45,860 --> 00:03:49,730
Well, the best way to learn programming is to see lots of examples.
53

54
00:03:49,730 --> 00:03:56,870
So now I'm going to switch to Python and show you some examples.
54

55
00:03:56,890 --> 00:03:57,280
All right.
55

56
00:03:57,280 --> 00:04:03,670
So because the goal here is to learn how to use Python to help you learn math I'm going to start with
56

57
00:04:03,670 --> 00:04:05,710
a simple math equation.
57

58
00:04:05,710 --> 00:04:11,030
So let's say if four plus two equals equals six.
58

59
00:04:11,320 --> 00:04:17,920
Now you will remember from the previous video on equality and inequalities that this double equals sign
59

60
00:04:17,950 --> 00:04:24,700
is not a variable assignment, so we're not trying to assign six to some variable called four plus
60

61
00:04:24,700 --> 00:04:32,190
two, which is not even a legal name for a variable. Instead, with the double equals sign we are asking
61

62
00:04:32,190 --> 00:04:39,180
python a question, and the question is whether what's on the left hand side is equal to what's on the
62

63
00:04:39,180 --> 00:04:40,240
right hand side.
63

64
00:04:40,260 --> 00:04:44,270
Now in this case we know the answer is true but let's print out true anyway.
64

65
00:04:44,480 --> 00:04:49,160
So I'm going to say print true okay.
65

66
00:04:49,170 --> 00:04:54,580
And now if I run this code by pressing control enter we actually get an error.
66

67
00:04:54,660 --> 00:04:59,280
Now the error is not with anything that I wrote here and the error is not with anything that I wrote
67

68
00:04:59,280 --> 00:04:59,960
here.
68

69
00:05:00,030 --> 00:05:07,140
It's actually something that I left out, which I mentioned in the slides a moment ago. And that is this
69

70
00:05:07,140 --> 00:05:07,600
colon.
70

71
00:05:07,610 --> 00:05:13,380
So these two vertical dots here the colon that is really important you need that colon there.
71

72
00:05:13,380 --> 00:05:20,930
Otherwise your code is not going to run and you can also tell that there was an error because normally
72

73
00:05:21,290 --> 00:05:28,640
if you've put it in this colon accurately then as soon as you press Enter you can see that python will
73

74
00:05:28,670 --> 00:05:33,490
automatically put you on the next line four spaces in.
74

75
00:05:33,680 --> 00:05:36,670
So let's bring this up here like this.
75

76
00:05:36,830 --> 00:05:44,230
And now this prints out true so if and then a conditional and this conditional is true.
76

77
00:05:44,380 --> 00:05:46,690
So then all the code after here gets run.
77

78
00:05:46,690 --> 00:05:48,990
You can put in multiple lines of code.
78

79
00:05:49,000 --> 00:05:50,030
You can say...
79

80
00:05:50,050 --> 00:05:57,640
Four plus two and... let me put that in print. Print four plus two.
80

81
00:05:58,810 --> 00:06:01,150
And this also gets run.
81

82
00:06:01,180 --> 00:06:06,070
So the question is how does Python know when to stop this if statement?
82

83
00:06:06,850 --> 00:06:09,130
And the answer has to do with spacing.
83

84
00:06:09,820 --> 00:06:13,390
So you'll notice that this has four spaces in front of it.
84

85
00:06:13,390 --> 00:06:15,800
This has four spaces in front of it.
85

86
00:06:15,820 --> 00:06:19,240
Now if I were to delete all of those spaces.
86

87
00:06:19,450 --> 00:06:27,210
So this is no longer indented then only this text here is part of the if statement.
87

88
00:06:27,390 --> 00:06:31,610
And to prove that to you I'm going to change this to five.
88

89
00:06:31,660 --> 00:06:34,340
So now this is false.
89

90
00:06:34,570 --> 00:06:36,210
This conditional is false.
90

91
00:06:36,250 --> 00:06:38,440
So this code is not going to be run.
91

92
00:06:38,440 --> 00:06:41,800
However this code here print four plus two.
92

93
00:06:41,830 --> 00:06:47,760
This is not part of the if-statement because it doesn't have the indentation here.
93

94
00:06:47,790 --> 00:06:54,690
So let's run this and now -- as I predicted -- this statement true does not get printed out, but this does
94

95
00:06:54,690 --> 00:07:02,450
get printed out. And now I'm going to press a few spaces you can see now that the word print is appearing
95

96
00:07:02,450 --> 00:07:03,550
in red font.
96

97
00:07:03,710 --> 00:07:05,390
And that's because Python doesn't like it.
97

98
00:07:05,390 --> 00:07:10,490
And in fact, if I press control enter you can even see we get an indentation error.
98

99
00:07:10,490 --> 00:07:13,410
It does not match any indentation level.
99

100
00:07:13,490 --> 00:07:17,990
So this needs to be zero spaces or four spaces.
100

101
00:07:18,420 --> 00:07:18,920
Okay.
101

102
00:07:18,950 --> 00:07:22,750
Now it prints nothing because this conditional is false.
102

103
00:07:22,790 --> 00:07:27,610
And so neither of these two lines get run.
103

104
00:07:27,610 --> 00:07:37,640
And now I'm going to say... else I'm going to add an else statement. And what this else statement does is if all
104

105
00:07:37,640 --> 00:07:41,450
of the previous conditionals are false then whatever comes after
105

106
00:07:41,450 --> 00:07:42,800
else gets run.
106

107
00:07:42,950 --> 00:07:47,570
Notice that there isn't another conditional in here.
107

108
00:07:47,600 --> 00:07:53,860
So this is different from saying elif here we would need to add another conditional so here I could
108

109
00:07:53,860 --> 00:08:04,530
say elif four plus two equals six. So with if and with elif, you need a conditional and if you don't want
109

110
00:08:04,530 --> 00:08:11,370
to have a conditional you just want to have some option at the end that will run whenever all the previous
110

111
00:08:11,370 --> 00:08:19,590
conditionals are false, then you just use else. I'd like to show you another example, this time using
111

112
00:08:19,650 --> 00:08:23,430
variables and soft coding for printing.
112

113
00:08:23,430 --> 00:08:29,630
So let's say x 1 equals 3 and let's set x 2 to be equal to 4.
113

114
00:08:29,670 --> 00:08:36,810
So I want to run some tests I want to say if X 1 is greater than x 2 then it should say something like
114

115
00:08:36,870 --> 00:08:37,740
print.
115

116
00:08:37,740 --> 00:08:45,840
And now what I want to do is say three is greater than four.
116

117
00:08:45,960 --> 00:08:50,400
However this is not really great programming because this is hardcoded.
117

118
00:08:50,420 --> 00:09:01,150
So right now this part works however if I change this to five then x 2 x 1 actually is greater than
118

119
00:09:01,540 --> 00:09:02,010
x 2.
119

120
00:09:02,020 --> 00:09:06,400
However it prints out 3 is greater than 4, which is incorrect.
120

121
00:09:07,500 --> 00:09:07,740
Okay.
121

122
00:09:07,790 --> 00:09:13,580
So the way that I'm going to do this is using more flexible printing that I have already introduced
122

123
00:09:13,580 --> 00:09:22,840
you to. So I'm going say %G is greater than percent G and then here I say percent sign and in parentheses
123

124
00:09:23,180 --> 00:09:25,830
x 1 comma x 2.
124

125
00:09:25,840 --> 00:09:27,730
So now we see 5 is greater than 4.
125

126
00:09:27,730 --> 00:09:31,470
I can set this to be 50 it's gonna say 50 is greater than 4.
126

127
00:09:31,630 --> 00:09:32,120
And so on.
127

128
00:09:32,140 --> 00:09:37,080
Now if I set this back to 3 we should get nothing printing out.
128

129
00:09:38,050 --> 00:09:49,810
So now let's say elif x 2 is actually x 1 is less than X 2 and now I want to say the opposite. I want
129

130
00:09:49,810 --> 00:09:54,640
to say x 1 is less than x 2.
130

131
00:09:54,650 --> 00:10:00,410
So actually, you know, because I'm copying and pasting here I think I'll leave it as greater than but now
131

132
00:10:00,410 --> 00:10:06,240
I'll put x 2 and then x 1 here.
132

133
00:10:06,800 --> 00:10:12,710
So this is still correct perhaps it's a little bit awkward because we're testing for X one is less than
133

134
00:10:12,710 --> 00:10:18,270
X 2 but we're printing out x 2 is greater than 3 x 1.
134

135
00:10:18,440 --> 00:10:20,180
Of course those are equivalent statements.
135

136
00:10:20,180 --> 00:10:22,940
It just looks a little bit awkward.
136

137
00:10:22,970 --> 00:10:24,680
And so what else should we include in here?
137

138
00:10:24,710 --> 00:10:35,300
So if X 1 is not greater than x 2 and if x 1 is not less than X 2 then what could that possibly mean?
138

139
00:10:35,300 --> 00:10:40,410
Well it would have to mean that x 1 is equal to x 2, so let's also include that.
139

140
00:10:40,460 --> 00:10:50,150
So let's say else print and then I think I'll copy and paste this as well.
140

141
00:10:50,160 --> 00:10:55,710
Now you always have to be really really careful when you are copying and pasting code because there's
141

142
00:10:55,710 --> 00:10:57,920
always going to be something that needs to be changed.
142

143
00:10:57,930 --> 00:11:06,240
And if you're not careful then you might forget to change something so equal to this.
143

144
00:11:06,270 --> 00:11:11,330
Okay so now it's always good when you're writing code it's always good to test out all the possibilities.
144

145
00:11:11,340 --> 00:11:19,700
So let's set these both to be three and we get three is equal to three. So here is your exercise for
145

146
00:11:19,700 --> 00:11:20,690
this video.
146

147
00:11:20,810 --> 00:11:28,420
What you want to do is loop over numbers from 0 to 3, call that variable i.
147

148
00:11:28,760 --> 00:11:34,730
And then inside that loop you have another loop that goes over the numbers 0 through 4 -- and they should
148

149
00:11:34,730 --> 00:11:35,840
all be integers by the way.
149

150
00:11:35,870 --> 00:11:44,330
So this should be 0 1 2 3 0 1 2 3 4 and you can call this inner loop variable j.
150

151
00:11:44,600 --> 00:11:49,810
And then what you want to do is print i to the power of minus J.
151

152
00:11:50,000 --> 00:11:55,230
But not all the time, not for every iteration this loop. You want to print i to the minus J
152

153
00:11:55,310 --> 00:11:59,280
Only for iterations in this loop where i is greater than J.
153

154
00:11:59,450 --> 00:12:06,590
And where J or sorry I is greater than 0 I misspoke. Where I is greater than 0 and where J is greater
154

155
00:12:06,590 --> 00:12:14,360
than 0. I recommend you to use the display math functions that you've learned about in previous videos
155

156
00:12:14,660 --> 00:12:21,080
in order to get this really nice formatting in particular with the exponents up here.
156

157
00:12:21,080 --> 00:12:28,520
So when you successfully complete this exercise you should get an output that looks like this.
157

158
00:12:28,520 --> 00:12:36,680
So now is your opportunity to pause the video, show off your skills at using for loops and also if statements,
158

159
00:12:37,660 --> 00:12:43,180
and when you're finished or when you get stuck then come back, unpause the video, and then you can watch
159

160
00:12:43,180 --> 00:12:48,550
me solve this exercise.
160

161
00:12:48,630 --> 00:12:48,990
All right.
161

162
00:12:49,020 --> 00:12:50,810
So let's get started.
162

163
00:12:50,830 --> 00:12:55,430
First thing we need to do is import the display and math modules.
163

164
00:12:56,430 --> 00:12:58,190
So perhaps you remember that.
164

165
00:12:58,200 --> 00:12:59,210
How to set that up.
165

166
00:12:59,220 --> 00:13:03,180
Or maybe you need to check back with your notes from previous lectures.
166

167
00:13:03,210 --> 00:13:15,810
So was import from IPython dot display, import display and lowercase and math was an upper case.
167

168
00:13:15,850 --> 00:13:16,240
That's good.
168

169
00:13:16,240 --> 00:13:26,200
So now we need to have a loop that's going to go for I in range 0 to 4 and this was one of the funny things
169

170
00:13:26,200 --> 00:13:32,470
about Python that when you use this range function it's actually going to go from the first number up
170

171
00:13:32,470 --> 00:13:36,040
to one minus the second number.
171

172
00:13:36,040 --> 00:13:41,260
So if you want to print out numbers or loop through numbers 0 through 3, which were the instructions,
172

173
00:13:41,590 --> 00:13:45,120
then you have to type range zero comma four.
173

174
00:13:45,460 --> 00:13:53,760
So then I type for J in range zero comma five and then what do we want to do here.
174

175
00:13:53,770 --> 00:14:04,670
So we want to say something like display and then this is going to be basically I raised to the minus
175

176
00:14:04,670 --> 00:14:05,060
J
176

177
00:14:05,060 --> 00:14:09,650
power equals whatever this happens to equal.
177

178
00:14:09,680 --> 00:14:09,920
Okay.
178

179
00:14:09,950 --> 00:14:18,710
I like to write things out in text like this before writing it properly in either code or in this
179

180
00:14:18,710 --> 00:14:23,930
case is going to be in some combination of latex and Python code.
180

181
00:14:24,980 --> 00:14:25,250
Okay.
181

182
00:14:25,280 --> 00:14:26,330
So now let's...
182

183
00:14:26,330 --> 00:14:29,990
Now that I've written out the basic idea, I'm going to go back and replace these.
183

184
00:14:29,990 --> 00:14:33,050
So this is going to be % G to the.
184

185
00:14:33,050 --> 00:14:38,600
And then this has to be in curly brackets because it's going to be multiple pieces of text so it's not
185

186
00:14:38,600 --> 00:14:42,100
just the minus sign It's the minus sign percent g
186

187
00:14:42,110 --> 00:14:46,760
equals another percent G.
187

188
00:14:46,760 --> 00:14:47,030
Okay.
188

189
00:14:47,060 --> 00:14:52,030
So now we need percent sign and then parentheses.
189

190
00:14:52,040 --> 00:14:56,740
So the three replacements for G here are going to be I.
190

191
00:14:56,750 --> 00:14:57,890
And then J.
191

192
00:14:58,160 --> 00:14:59,380
And then we have I.
192

193
00:14:59,390 --> 00:15:02,510
To the power of minus J.
193

194
00:15:02,510 --> 00:15:09,280
Now if you got a little bit confused on this formatting I bet it was probably with this caret because
194

195
00:15:09,280 --> 00:15:17,770
in latex, caret indicates the exponent whereas in Python code you have to use a double asterisk.
195

196
00:15:17,780 --> 00:15:21,570
Okay so let's check if this works.
196

197
00:15:21,680 --> 00:15:22,100
Huh.
197

198
00:15:22,120 --> 00:15:22,920
It doesn't work.
198

199
00:15:22,930 --> 00:15:24,550
We get an error message.
199

200
00:15:24,550 --> 00:15:28,810
It says zero division zero cannot be raised with negative power.
200

201
00:15:28,810 --> 00:15:36,490
So essentially what I'm trying to do here is divide zero by zero and you're not allowed to divide by
201

202
00:15:36,490 --> 00:15:40,930
zero and you're certainly not allowed to take zero divided by zero.
202

203
00:15:40,960 --> 00:15:44,640
So why do we get this error if it seems like the code is correct?
203

204
00:15:44,660 --> 00:15:51,100
Now, you might remember from the exercise instructions that actually we needed to do a little bit more
204

205
00:15:51,100 --> 00:15:51,430
than this.
205

206
00:15:51,460 --> 00:15:59,440
So there's part of this code that I have left out and that is that we print this statement only when
206

207
00:15:59,500 --> 00:16:01,580
I is greater than zero.
207

208
00:16:01,600 --> 00:16:03,610
And when J is greater than zero.
208

209
00:16:04,030 --> 00:16:14,860
So I'm going to say if I is greater than zero and J is greater than zero and now there's two more things
209

210
00:16:14,860 --> 00:16:23,710
that I need to do here I need to have a colon at the end here and then I need this line here to be printed
210

211
00:16:23,800 --> 00:16:27,690
four spaces in so one two three four.
211

212
00:16:27,700 --> 00:16:31,210
Okay now let's see how this looks.
212

213
00:16:31,380 --> 00:16:34,620
This is looking much much better.
213

214
00:16:34,620 --> 00:16:41,160
And this is also pretty interesting to see that for example three to the power of minus four which means
214

215
00:16:41,160 --> 00:16:49,170
one over three to the power of four is equal to point 0 1 2 3 4 5 7.
215

216
00:16:49,170 --> 00:16:50,490
That's really unfortunate.
216

217
00:16:50,490 --> 00:16:58,510
I really would have liked to have a six here but that's just the way it goes. I hope you enjoyed watching
217

218
00:16:58,540 --> 00:16:59,790
and learning from this video.
218

219
00:16:59,800 --> 00:17:01,130
I enjoyed making it.
219

220
00:17:01,210 --> 00:17:08,980
You learned about if statements, you learned about logical operators like AND and OR. As I mentioned
220

221
00:17:08,980 --> 00:17:13,990
in the beginning of this video if statements are really really important in programming.
221

222
00:17:13,990 --> 00:17:19,540
If you are not totally comfortable with using statements in python just yet, then don't worry -- you will
222

223
00:17:19,540 --> 00:17:23,320
get plenty more experience throughout the next videos.
