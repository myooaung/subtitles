0
1
00:00:03,800 --> 00:00:11,390
At the end of the previous video you saw some of the limitations of just trying to print directly sympy
1

2
00:00:11,570 --> 00:00:17,890
variables, and that motivated doing something extra, which is going to be latex coding.
2

3
00:00:17,900 --> 00:00:25,910
So this video is a more thorough introduction to the integration of latex coding and python.
3

4
00:00:25,910 --> 00:00:32,420
Now the good news is that you don't already need to know anything about latex coding in order to print
4

5
00:00:32,420 --> 00:00:39,340
out nice looking equations and mathematical expressions in Python and in Ipython in particular.
5

6
00:00:39,530 --> 00:00:45,770
And of course I already introduced you to some of the concepts of latex coding in Python in the previous
6

7
00:00:45,770 --> 00:00:47,900
section of the course on arithmetic.
7

8
00:00:47,900 --> 00:00:54,080
So in this video and the next several videos, you're going to get a more thorough introduction of using
8

9
00:00:54,110 --> 00:00:58,280
LaTeX in the context of Python programming.
9

10
00:00:58,280 --> 00:01:03,650
The good news is that you don't need to be an expert in coding in latex, in fact you don't need to know
10

11
00:01:03,680 --> 00:01:06,900
anything about latex before getting started.
11

12
00:01:07,910 --> 00:01:14,450
So let me first explain why latex is so useful when you are writing about mathematics, in particular
12

13
00:01:14,450 --> 00:01:17,990
writing expressions and equations in mathematics.
13

14
00:01:17,990 --> 00:01:24,200
Essentially, what latex is going to allow you to do is to convert a sentence like this -- the square root
14

15
00:01:24,290 --> 00:01:28,470
of two -- into an expression like this.
15

16
00:01:28,490 --> 00:01:34,760
Likewise, here you know if someone says write down pi in a document you want to be able to have a PI
16

17
00:01:34,760 --> 00:01:37,940
character that looks really nice and fancy like this.
17

18
00:01:38,000 --> 00:01:43,940
You don't want to have to write out something that's long and potentially ambiguous in your text or
18

19
00:01:43,940 --> 00:01:45,680
in your python code.
19

20
00:01:45,680 --> 00:01:45,940
All right.
20

21
00:01:45,950 --> 00:01:52,970
So let's switch to Python and let's see what we can do with latex. So let's say we want to print out
21

22
00:01:53,630 --> 00:01:56,450
the equation four plus three equals seven.
22

23
00:01:56,450 --> 00:01:59,750
You could write it like this four plus three equals seven.
23

24
00:02:00,050 --> 00:02:08,510
However, that's going to give you an error because a single equals sign in Python is interpreted as assignment.
24

25
00:02:08,540 --> 00:02:13,790
So this kind of means that we're trying to create a variable four plus three and that's not a legal
25

26
00:02:14,090 --> 00:02:16,070
variable; we can't create a variable like that.
26

27
00:02:16,100 --> 00:02:17,910
and set it equal to seven.
27

28
00:02:18,170 --> 00:02:21,010
Now what you can do is say print.
28

29
00:02:21,880 --> 00:02:27,080
And in case this in the print function, however, that also doesn't work.
29

30
00:02:27,080 --> 00:02:33,710
But you probably know by now that what does work is putting this inside a single quotes (double quotes
30

31
00:02:33,710 --> 00:02:34,910
will also work).
31

32
00:02:34,910 --> 00:02:39,560
And this is just printing out the text four plus three equals seven.
32

33
00:02:39,680 --> 00:02:46,010
Now for very simple expressions like this, that's fine, but to go further in mathematics you will need
33

34
00:02:46,010 --> 00:02:51,130
to print out Greek characters and fractions and exponents and all sorts of things.
34

35
00:02:51,140 --> 00:02:56,550
So for that we are going to use the display and then the math functions.
35

36
00:02:56,660 --> 00:02:59,690
And again, you've already been introduced to these ideas.
36

37
00:02:59,720 --> 00:03:03,630
So notice how this looks here in fixed width font.
37

38
00:03:04,160 --> 00:03:04,400
OK.
38

39
00:03:04,430 --> 00:03:10,610
So in a moment I'm going to press control enter on my keyboard to run this code but I would like you
39

40
00:03:10,610 --> 00:03:16,310
to predict what's going to happen -- what information we are going to see printed out here given that this
40

41
00:03:16,310 --> 00:03:19,510
is a fresh instance of Python.
41

42
00:03:20,260 --> 00:03:20,470
OK.
42

43
00:03:20,510 --> 00:03:25,130
So the answer is that we get an error, and we get an error it says name
43

44
00:03:25,130 --> 00:03:34,450
Math is not defined and that's because we haven't yet imported the math function from Ipython. So you
44

45
00:03:34,450 --> 00:03:43,510
will remember this from previous sections of the course. We have to say from IPython dot display import
45

46
00:03:43,780 --> 00:03:47,070
math and also import display.
46

47
00:03:47,320 --> 00:03:48,300
And now this works.
47

48
00:03:48,330 --> 00:03:49,840
Now this looks a little bit nicer.
48

49
00:03:49,840 --> 00:03:50,910
Now you think OK.
49

50
00:03:50,950 --> 00:03:54,940
So you know this looked fine as it was.
50

51
00:03:54,940 --> 00:04:00,430
And so do we really need this fancy stuff to make it look basically just a tiny bit nicer?
51

52
00:04:00,430 --> 00:04:01,470
In this case we don't.
52

53
00:04:01,500 --> 00:04:07,360
But you will see soon that we are going to move beyond just printing individual numbers in a way that
53

54
00:04:07,360 --> 00:04:12,550
is not possible when just using the print function. But before moving on,
54

55
00:04:12,550 --> 00:04:14,980
I would like to just note that in here.
55

56
00:04:14,980 --> 00:04:16,730
So this is actually latex code.
56

57
00:04:16,840 --> 00:04:19,370
You will see it more in a moment.
57

58
00:04:19,510 --> 00:04:25,930
But this is not actually evaluating any math, so I could say four plus three equals 17 and python will
58

59
00:04:25,930 --> 00:04:28,750
print out four plus three equals 17.
59

60
00:04:28,750 --> 00:04:34,540
Now Python is not actually checking whether this is an accurate mathematical expression.
60

61
00:04:34,660 --> 00:04:39,050
It is simply printing out the text that I have implemented here.
61

62
00:04:39,100 --> 00:04:40,990
So that's just something to keep in mind.
62

63
00:04:41,050 --> 00:04:43,640
In fact I'm even going to change this back.
63

64
00:04:43,660 --> 00:04:45,550
I don't like the way that looks.
64

65
00:04:45,580 --> 00:04:45,880
OK.
65

66
00:04:45,910 --> 00:04:52,030
Now what I would like to do is illustrate to you some of the possibilities for the kinds of special
66

67
00:04:52,030 --> 00:04:55,170
characters that you can print out using LaTeX coding.
67

68
00:04:55,240 --> 00:05:01,960
So if you want to write a Greek character such as Sigma, you can type slash slash -- you need two slashes here --
68

69
00:05:02,350 --> 00:05:05,050
and then the word sigma.
69

70
00:05:05,050 --> 00:05:10,010
And now when I press control enter I see an actual Sigma character here.
70

71
00:05:10,120 --> 00:05:16,660
If you are not familiar with this this is a Greek lowercase character called Sigma so I can say sigma
71

72
00:05:16,750 --> 00:05:17,350
equals.
72

73
00:05:17,350 --> 00:05:20,380
And then there's all sorts of Greek characters that you can use here.
73

74
00:05:20,380 --> 00:05:27,610
So let's say mu, and then I will say times and then let's say the square root of five.
74

75
00:05:27,610 --> 00:05:28,900
How about that.
75

76
00:05:28,900 --> 00:05:34,120
So now we get this nice expression that says sigma equals mu times the square root of 5.
76

77
00:05:34,120 --> 00:05:35,800
Now I have no idea what this means.
77

78
00:05:35,800 --> 00:05:42,070
Maybe this is relevant somehow, but for now I'm just illustrating to you what you can do with latex code.
78

79
00:05:42,080 --> 00:05:50,380
So this is all latex code that goes inside the math function, which then goes inside the display function.
79

80
00:05:50,380 --> 00:05:54,910
Next I'm going to show you how to write subscript and superscripts.
80

81
00:05:54,910 --> 00:05:57,490
So it's display math.
81

82
00:05:57,490 --> 00:06:04,630
Now a subscript is a little character that is below the main character, so let's say X and then I use an underscore
82

83
00:06:04,630 --> 00:06:05,520
here.
83

84
00:06:05,530 --> 00:06:11,680
Notice this is an underscore and then whatever comes after the underscore is going to be printed below
84

85
00:06:11,710 --> 00:06:13,720
in these subscript.
85

86
00:06:13,720 --> 00:06:15,690
So I can say X M.
86

87
00:06:15,730 --> 00:06:19,420
Now notice what happens if I put another M in here.
87

88
00:06:19,990 --> 00:06:25,600
That second M is not in the subscript; that just becomes a normal letter.
88

89
00:06:25,600 --> 00:06:32,740
So that means that this subscript applies only to the character that immediately follows that subscript.
89

90
00:06:32,740 --> 00:06:39,310
So you might be thinking that if you want to get both M's into the subscript underneath X then you
90

91
00:06:39,310 --> 00:06:44,260
have to use another underscore character like this.
91

92
00:06:44,260 --> 00:06:47,130
So it turns out that is not a good solution.
92

93
00:06:47,170 --> 00:06:52,420
The better solution is to use curly brackets.
93

94
00:06:52,710 --> 00:06:58,680
So the idea here is that you have an underscore and then curly brackets and everything that's inside
94

95
00:06:58,680 --> 00:07:04,590
the curly brackets is going to go into the subscript of this letter here.
95

96
00:07:04,590 --> 00:07:09,220
So now we get X underscore m m in the superscript.
96

97
00:07:09,220 --> 00:07:12,450
So I've also introduced you to previously in the course.
97

98
00:07:12,450 --> 00:07:21,600
So just to give you a reminder, let's say x underscore m m and let's say I have a plus and then the caret
98

99
00:07:21,600 --> 00:07:30,870
symbol for superscript, and let's make that nk. Now if I want both the N and the K to be in the superscript
99

100
00:07:30,870 --> 00:07:37,850
to be in the power of y then just having one caret like this is not going to do it.
100

101
00:07:37,860 --> 00:07:41,160
That's only going to put the N into the superscript.
101

102
00:07:41,190 --> 00:07:48,630
So the solution, which you've already guessed I'm sure, is to use curly brackets just like with the subscript
102

103
00:07:48,630 --> 00:07:59,480
over here. And you can also make these longer. Let's say I wanted this to be N plus two K minus 15.
103

104
00:08:00,250 --> 00:08:06,810
So now we have an entire expression that's in the superscript of this variable Y.
104

105
00:08:08,320 --> 00:08:11,610
So you can see that these curly brackets here are very important
105

106
00:08:11,610 --> 00:08:17,730
operators in latex. They're used in two ways for coding math and latex.
106

107
00:08:17,740 --> 00:08:24,460
One is the way that I've shown you here where you can apply some text operation, some context operation
107

108
00:08:24,460 --> 00:08:29,860
like superscript or a subscript to multiple letters like you see here.
108

109
00:08:30,100 --> 00:08:35,770
The other way to use curly brackets in Python is for getting a special function like this.
109

110
00:08:35,770 --> 00:08:37,650
So we have slash slash square root.
110

111
00:08:38,110 --> 00:08:45,750
And then inside the square, the curly brackets here is whatever you want to be underneath the square
111

112
00:08:45,750 --> 00:08:45,990
root.
112

113
00:08:45,990 --> 00:08:52,890
So if I say five x plus three Z minus 17.
113

114
00:08:52,910 --> 00:08:54,170
u.
114

115
00:08:54,560 --> 00:09:00,750
So now we get this entire expression underneath the square root indicator here.
115

116
00:09:01,040 --> 00:09:06,650
And this also shows you how to solve one of the problems in the exercises of the previous video that
116

117
00:09:06,650 --> 00:09:09,120
I highlighted as a limitation.
117

118
00:09:09,170 --> 00:09:12,680
I've just printing directly from sympy.
118

119
00:09:13,130 --> 00:09:19,040
So you might remember that the goal there was to print out the square root of x times the square root
119

120
00:09:19,040 --> 00:09:25,100
of X, but in fact python just printed out the answer x, because that is really the answer of the square
120

121
00:09:25,100 --> 00:09:27,190
root of x times the square root of x.
121

122
00:09:27,380 --> 00:09:35,160
But if you actually want to print out the square root of x times the square root of X, then this would
122

123
00:09:35,160 --> 00:09:37,370
be the way to do it.
123

124
00:09:37,500 --> 00:09:37,740
All right.
124

125
00:09:37,770 --> 00:09:42,230
So along these lines, I'm now going to show you how to create fractions.
125

126
00:09:42,240 --> 00:09:45,970
So let's say display math.
126

127
00:09:46,000 --> 00:09:50,590
And now the latex function you need is slash slash frac.
127

128
00:09:50,620 --> 00:09:54,570
And then in this case you need actually two sets of curly brackets.
128

129
00:09:54,580 --> 00:09:56,740
The first set is for the numerator.
129

130
00:09:56,740 --> 00:09:59,320
The second set is for the denominator.
130

131
00:09:59,410 --> 00:10:02,680
So let's make our fraction 1 plus X.
131

132
00:10:02,680 --> 00:10:13,160
And how about the denominator is to 2 v minus X to the power of T plus four.
132

133
00:10:13,180 --> 00:10:14,120
okay.
133

134
00:10:14,200 --> 00:10:16,460
I'm just making this up as I go along.
134

135
00:10:16,510 --> 00:10:25,360
But I went to highlight to the way of integrating multiple expressions in latex using embedded curly
135

136
00:10:25,360 --> 00:10:25,800
brackets.
136

137
00:10:25,810 --> 00:10:31,930
So here I have curly brackets and this corresponds to the superscript for the s.
137

138
00:10:32,020 --> 00:10:39,420
And here I have curly brackets and that corresponds to the denominator of the fraction or frac function.
138

139
00:10:39,450 --> 00:10:45,940
So when we print this out, you see the numerator is one plus X here and the entire denominator is 2 v
139

140
00:10:45,940 --> 00:10:55,620
minus s to the power of -- or in superscript -- T plus four R. Now, embedding latex coding into the math
140

141
00:10:55,620 --> 00:11:00,000
function like this is really all about mathematical expressions.
141

142
00:11:00,000 --> 00:11:04,800
If you want to have normal text also display inside the math function.
142

143
00:11:04,800 --> 00:11:09,580
Then you need a special function like this for a fraction or a square root.
143

144
00:11:09,720 --> 00:11:14,720
You need a special function to indicate that you want to have normal plain text.
144

145
00:11:14,760 --> 00:11:17,130
And let me show you what that means.
145

146
00:11:17,650 --> 00:11:25,930
So if I would type in, the answer to this equation is, now when you write it here it seems like this should
146

147
00:11:25,930 --> 00:11:27,750
be the right thing to do.
147

148
00:11:27,760 --> 00:11:34,540
However, when you run this cell you'll find that we get something that has no spaces and it's a little
148

149
00:11:34,540 --> 00:11:36,740
bit difficult to parse.
149

150
00:11:36,880 --> 00:11:43,660
So we need to tell latex coding explicitly that this is supposed to be text embedded inside this
150

151
00:11:43,660 --> 00:11:45,070
mathematical formula.
151

152
00:11:45,910 --> 00:11:54,460
So we say slash slash text and then all of the text that you want including these spaces has to go inside
152

153
00:11:54,490 --> 00:11:57,000
curly brackets like this.
153

154
00:11:57,300 --> 00:12:04,740
And now it says the answer to this equation is you know whatever this answer means. There is one more
154

155
00:12:04,740 --> 00:12:12,270
concept that I want to introduce you to here in this video, which is markdown code. Markdown is essentially
155

156
00:12:12,270 --> 00:12:19,910
a way of printing out a message that is not explicitly related to code or related to math.
156

157
00:12:20,010 --> 00:12:26,340
So I'm going to say hash and then this is a markdown.
157

158
00:12:26,340 --> 00:12:29,820
So now if I just run this code nothing happens.
158

159
00:12:29,820 --> 00:12:36,210
And that should be no big surprise because this is a comment. I've used the hash mark to indicate a comment.
159

160
00:12:36,240 --> 00:12:42,780
So this code doesn't get interpreted by Python and now follow along with me I'm going to go up here
160

161
00:12:43,110 --> 00:12:49,490
to this menu option up here where it says code, and I'm going to select markdown.
161

162
00:12:49,490 --> 00:12:53,840
And now immediately this changed all this in the font became huge and blue.
162

163
00:12:53,940 --> 00:12:58,990
And now when I run this cell you see it's a big bold face header.
163

164
00:12:59,040 --> 00:13:05,040
So now I double click so I can edit this again. And now watch what happens if I put a second hash mark.
164

165
00:13:05,070 --> 00:13:06,840
You can see it just got smaller.
165

166
00:13:06,840 --> 00:13:07,300
Actually you know,
166

167
00:13:07,320 --> 00:13:16,430
maybe the I'll do it this way. This one here and then I'll put two here.. a subcell. And then I'll do
167

168
00:13:16,940 --> 00:13:22,260
one with three here even smaller text.
168

169
00:13:22,310 --> 00:13:23,420
Now this is Markdown.
169

170
00:13:23,410 --> 00:13:24,910
This is actually just regular code.
170

171
00:13:24,920 --> 00:13:31,220
So I have to select and make this markdown and here I'm going to change this code from being Python
171

172
00:13:31,220 --> 00:13:32,720
code to markdown.
172

173
00:13:33,350 --> 00:13:38,810
But now I'm going to do it with a keyboard shortcut so I'm going to type escape, I press the escape key,
173

174
00:13:38,900 --> 00:13:41,940
and then I press the M key for markdown.
174

175
00:13:42,170 --> 00:13:49,570
notice that also change the menu option up here. And now I can press control enter or shift enter and
175

176
00:13:49,570 --> 00:13:50,480
I'll do that here as well.
176

177
00:13:51,340 --> 00:13:51,690
OK.
177

178
00:13:51,700 --> 00:13:55,300
So this is markdown. You will see this often when people share code.
178

179
00:13:55,300 --> 00:14:00,190
It's a way of demarcating different major sections of the code.
179

180
00:14:00,190 --> 00:14:07,480
Now once you have indicated that a cell is down and not regular code, you can actually start typing things
180

181
00:14:07,480 --> 00:14:08,830
that are not Python code.
181

182
00:14:08,860 --> 00:14:19,950
So for example you know this cell is not for running actual Python code.
182

183
00:14:20,040 --> 00:14:21,490
Now I just get normal text.
183

184
00:14:21,510 --> 00:14:26,980
So this would be a great way to write some text that explains a little bit more about what the rest
184

185
00:14:26,980 --> 00:14:29,050
of the code does.
185

186
00:14:29,050 --> 00:14:35,920
Now the reason why I'm telling you about this markdown option here is that you can also put latex coding
186

187
00:14:35,950 --> 00:14:37,490
directly in here.
187

188
00:14:37,540 --> 00:14:39,280
Now the format is slightly different.
188

189
00:14:39,280 --> 00:14:41,890
You don't need to use display math.
189

190
00:14:41,890 --> 00:14:46,060
Instead you use a double dollar sign like this.
190

191
00:14:46,120 --> 00:14:50,700
So double dollar sign, that indicates the start of latex coding.
191

192
00:14:50,740 --> 00:14:54,740
It doesn't mean that it's going to be a very expensive line of code.
192

193
00:14:54,780 --> 00:15:03,200
Now here we can write... let's say I'm going to write the same fraction here that I had up there.
193

194
00:15:03,230 --> 00:15:08,510
Here was a double dollar sign to indicate the start of the latex code.
194

195
00:15:08,510 --> 00:15:13,690
So then you need another double dollar sign here to indicate the end of the latex code.
195

196
00:15:14,510 --> 00:15:17,840
So now I press control enter and... huh.
196

197
00:15:17,990 --> 00:15:24,950
This is kind of funny, it's a little bit strange, because up here this code which I said was latex coding
197

198
00:15:24,950 --> 00:15:27,360
that produced this really nice fraction here.
198

199
00:15:27,590 --> 00:15:33,740
But here it was exactly the same code and now it looks... well it doesn't quite look right.
199

200
00:15:33,740 --> 00:15:36,710
Also it says the word frac in here.
200

201
00:15:36,710 --> 00:15:45,140
So what's actually going on here is that in real latex code, you only need one backslash here for the
201

202
00:15:45,410 --> 00:15:50,190
fraction function and also for text and square roots and all these other things.
202

203
00:15:50,360 --> 00:15:57,980
The reason why you need a double backslash up here inside the python code is that the first slash actually
203

204
00:15:57,980 --> 00:16:00,980
means something different from the second Slash.
204

205
00:16:00,980 --> 00:16:04,940
So the first backslash is like an escape operator.
205

206
00:16:05,000 --> 00:16:11,710
It tells Python that the next piece of code is going to be something other than just a regular Slash.
206

207
00:16:11,900 --> 00:16:15,230
So it gets a little bit confusing but you'll get the hang of it soon.
207

208
00:16:15,260 --> 00:16:23,690
Essentially, when you are using LaTeX code embedded into the math function, you type slash slash and otherwise
208

209
00:16:23,720 --> 00:16:31,730
when you're using LaTeX outside of Python code cells you only need one slash as you see here. Finally,
209

210
00:16:31,820 --> 00:16:38,870
if you  use double dollar signs like this, you get the latex code to be in it's own line and if you have only
210

211
00:16:38,870 --> 00:16:45,520
a single dollar sign like this then the mathematical expression will evaluate in the same lines.
211

212
00:16:45,530 --> 00:16:47,540
So let's say Python code,
212

213
00:16:47,750 --> 00:16:56,160
we can make the following math expression.
213

214
00:16:56,360 --> 00:16:58,340
So now this looks a little bit more sensible.
214

215
00:17:00,840 --> 00:17:04,920
So here are the exercises for this video.
215

216
00:17:04,920 --> 00:17:10,410
Basically what you want to do is get these expressions to all print out exactly how you see them here
216

217
00:17:10,800 --> 00:17:13,560
using LaTeX coding in Python.
217

218
00:17:16,880 --> 00:17:17,220
All right.
218

219
00:17:17,250 --> 00:17:18,720
So we had... the first one
219

220
00:17:22,190 --> 00:17:31,370
was... so I'll do display and then math, and then this one was pretty easy: that was four X plus five Y minus A
220

221
00:17:31,520 --> 00:17:38,900
Z equals seventeen. OK so now we get this nice expression.
221

222
00:17:38,980 --> 00:17:43,530
Now it may look like there is an extra space in here and I didn't put one in here.
222

223
00:17:43,600 --> 00:17:47,470
In fact in latex spaces are not counted.
223

224
00:17:47,470 --> 00:17:55,440
So even though I've typed all of these spaces in here, when I run the code I get exactly the same result.
224

225
00:17:55,480 --> 00:17:59,990
So the second one was display math.
225

226
00:18:00,010 --> 00:18:03,520
And then this was the signed formula.
226

227
00:18:03,550 --> 00:18:10,490
So that was now you could try like this sine of two times pi.
227

228
00:18:10,510 --> 00:18:23,760
This needs to be in single quotes here: sine of two pi F T plus theta. Now that isn't really wrong.
228

229
00:18:23,790 --> 00:18:26,930
But the sine is in italics.
229

230
00:18:26,970 --> 00:18:34,460
And really this is a sine function, so we don't want that to be italicized. So let's try with two backslashes
230

231
00:18:34,460 --> 00:18:42,480
like this, and now we get a nicer result that someone who is familiar with reading math expressions
231

232
00:18:42,480 --> 00:18:44,730
might expect.
232

233
00:18:44,830 --> 00:18:47,280
All right on to the third one.
233

234
00:18:47,400 --> 00:18:49,780
This one was actually pretty straightforward.
234

235
00:18:49,830 --> 00:18:51,920
So display math.
235

236
00:18:51,990 --> 00:18:58,740
And then we needed E equals m c. And then the main thing here was to remember how to indicate a superscript,
236

237
00:18:58,770 --> 00:19:05,700
which is with the caret symbol here. And then the last one was a fraction.
237

238
00:19:05,790 --> 00:19:07,680
So let's see that was
238

239
00:19:10,290 --> 00:19:12,510
display and then math.
239

240
00:19:13,050 --> 00:19:15,590
So now we need slash slash frac.
240

241
00:19:15,600 --> 00:19:19,360
And then here's for the numerator here is for the denominator.
241

242
00:19:19,590 --> 00:19:24,330
It was four plus five X squared.
242

243
00:19:24,330 --> 00:19:34,530
And then in the denominator was 1 plus X times one minus X.
243

244
00:19:34,560 --> 00:19:41,550
So I think this is all looking pretty good. I hope you enjoyed this lecture.
244

245
00:19:41,560 --> 00:19:48,490
I hope you feel like you have a little bit better grasp of integrating latex coding with Python coding
245

246
00:19:48,850 --> 00:19:53,620
in order to write out equations, mathematically equations, and special characters.
246

247
00:19:53,620 --> 00:19:59,960
I also told you a little bit about markdown code versus regular code in Python.
247

248
00:20:00,130 --> 00:20:06,750
You will get lots and lots of more practice with latex and Python later through the course.
248

249
00:20:06,760 --> 00:20:13,600
But I believe that by now you have a pretty good solid foundation to print out beautiful equations in
249

250
00:20:13,600 --> 00:20:16,630
your python notebooks. In the next video,
250

251
00:20:16,630 --> 00:20:19,340
We are going to continue learning about sympy.
