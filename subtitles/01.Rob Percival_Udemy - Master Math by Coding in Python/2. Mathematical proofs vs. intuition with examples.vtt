WEBVTT
1
00:00:03.660 --> 00:00:11.010
Before getting too much further in this course I want to say a few quick words about mathematical proofs

2
00:00:11.130 --> 00:00:20.790
vs. intuitions now proofs formal rigorous proofs don't really play a large role in kind of earlier stages

3
00:00:20.820 --> 00:00:27.720
of mathematics but once you get to higher studies in mathematics like in calculus and linear algebra

4
00:00:28.200 --> 00:00:35.250
differential equations multi variable calculus and so on proofs become more and more important.

5
00:00:35.370 --> 00:00:42.570
On the other hand I focus in this course a lot more on intuition and using python as a tool to build

6
00:00:42.570 --> 00:00:45.600
intuition relative to proofs.

7
00:00:45.600 --> 00:00:47.580
And so I just want to say a few words about this.

8
00:00:47.580 --> 00:00:48.710
So what is a proof.

9
00:00:48.720 --> 00:00:56.640
Even so a mathematical proof is a rigorous demonstration that an hypothesis or some claim about how

10
00:00:56.640 --> 00:01:04.080
something works in mathematics or a mathematical operation is true and that rigorous demonstration is

11
00:01:04.080 --> 00:01:08.460
built on axioms it's built on previously proven claims.

12
00:01:08.460 --> 00:01:15.450
Now the thing is that proving something in mathematics requires intellect it requires some creativity

13
00:01:15.480 --> 00:01:17.320
and some problem solving.

14
00:01:17.370 --> 00:01:23.190
These are things that humans are really good at and computers are not necessarily so good at.

15
00:01:23.250 --> 00:01:31.140
So when it comes to formal rigorous demonstrations of mathematical proofs I think computers or Python

16
00:01:31.140 --> 00:01:34.510
or any other program are kind of of limited benefit.

17
00:01:34.530 --> 00:01:36.730
And you really need to be using your brain.

18
00:01:36.990 --> 00:01:44.670
In contrast what Python or other numerical processing softwares can really help you with is building

19
00:01:44.760 --> 00:01:52.830
intuition in particular intuition with graphics with visualization with running through lots and lots

20
00:01:52.830 --> 00:01:55.410
and lots of examples.

21
00:01:55.470 --> 00:02:01.410
And the idea here which I also mentioned at the very beginning of this course is that we trust that

22
00:02:01.410 --> 00:02:08.550
computers are implementing the mathematical details all the arithmetic and things accurately and so

23
00:02:08.550 --> 00:02:11.840
therefore we let the computers deal with the details.

24
00:02:11.970 --> 00:02:20.300
And that frees up you your your mind to think about intuition think about important concepts.

25
00:02:20.310 --> 00:02:27.560
Now when you're going through specific examples it's a good idea to test several examples to avoid overgeneralizing

26
00:02:27.600 --> 00:02:29.190
from special cases.

27
00:02:29.190 --> 00:02:35.730
So that is to say whenever you see a claim you come across a claim in mathematics and you want to implement

28
00:02:35.730 --> 00:02:42.060
it in Python in order to understand it better then it's a good idea to test different examples with

29
00:02:42.060 --> 00:02:47.770
different parameters or different variable values different kinds of functions and so on.

30
00:02:47.970 --> 00:02:54.690
And the reason why I'm bringing all this up is because going through mathematical proofs is really important.

31
00:02:54.690 --> 00:03:01.380
In mathematics it becomes more important as you get into areas like calculus and linear algebra.

32
00:03:01.380 --> 00:03:07.290
However in this course for the rest of this course I'm not really focusing on mathematical proofs.

33
00:03:07.290 --> 00:03:15.960
Instead I'm going to just make claims that are proven in theory but I am focusing more on how you can

34
00:03:15.960 --> 00:03:23.850
use python as a tool to build intuition about what those proofs actually mean as opposed to walking

35
00:03:23.850 --> 00:03:29.880
through the detailed steps of building up those proofs from scratch from first principles.

36
00:03:30.380 --> 00:03:30.730
Okay.

37
00:03:30.750 --> 00:03:39.000
So with that said it is now time to begin our exploration of using Python to understand concepts in

38
00:03:39.060 --> 00:03:39.900
calculus.
