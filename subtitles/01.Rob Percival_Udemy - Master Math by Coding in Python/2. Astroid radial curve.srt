1
00:00:03,820 --> 00:00:07,700
I am guessing that you and I have never met in person.

2
00:00:07,720 --> 00:00:14,770
However I believe that by this point in the course you know me well enough to know that I really like

3
00:00:14,770 --> 00:00:22,390
to use art and visualizations and aesthetics basically pretty looking things to illustrate concepts

4
00:00:22,480 --> 00:00:25,210
in math and in programming.

5
00:00:25,210 --> 00:00:29,020
And that is the whole point of this section of the course.

6
00:00:29,050 --> 00:00:35,560
This is a follow up to the previous section on trigonometry and the goal is basically to construct a

7
00:00:35,560 --> 00:00:42,460
bunch of pretty looking things using trigonometric functions and that's going to provide the opportunity

8
00:00:42,460 --> 00:00:49,090
for you to get more comfortable with thinking about and working with trig functions in particular signs

9
00:00:49,090 --> 00:00:56,320
and coastlines and things like parameters nations and powers and of course this isn't only about math.

10
00:00:56,350 --> 00:01:01,600
You are going to learn new things about Python coding in the process.

11
00:01:01,600 --> 00:01:01,920
All right.

12
00:01:01,930 --> 00:01:08,710
So the goal of this particular video is to create something called an asteroid radial curve.

13
00:01:08,710 --> 00:01:12,490
So what on earth is an asteroid radial curve.

14
00:01:12,490 --> 00:01:19,630
Well you'll probably more likely to find them in outer space but an asteroid radial curve is a function

15
00:01:19,720 --> 00:01:21,920
that looks something like this.

16
00:01:21,940 --> 00:01:26,140
So you know it's pretty neat looking it's curvy it's a little bit like a diamond.

17
00:01:26,140 --> 00:01:28,090
So how do you create this thing.

18
00:01:28,090 --> 00:01:30,250
Well it's actually fairly straightforward.

19
00:01:30,310 --> 00:01:32,650
You plot X by Y.

20
00:01:32,830 --> 00:01:41,650
So this is just a function of x and y and then you set X to be some parameter a or a vector A times

21
00:01:41,680 --> 00:01:47,380
the cosine of T and T is you know a time vector or a particle vector cubed.

22
00:01:47,380 --> 00:01:56,830
So X is a times cosine of T cubed Y is a Times the sign of T cubed and then in this particular case

23
00:01:56,860 --> 00:02:00,520
we are just going to set a to be equal to T.

24
00:02:00,670 --> 00:02:08,140
You'll see in the exercise for this video we are going to change the parameter a but for now a is simply

25
00:02:08,140 --> 00:02:11,470
equal to t the same t that appears here.

26
00:02:11,470 --> 00:02:13,930
So this is already pretty straightforward.

27
00:02:13,930 --> 00:02:20,140
I think you could basically already arrive at this kind of a graph based on these equations in Python

28
00:02:20,410 --> 00:02:22,620
pretty much in your sleep.

29
00:02:22,720 --> 00:02:28,830
The only thing that I haven't told you yet is what to set t to so what the boundaries of T should be.

30
00:02:29,050 --> 00:02:34,770
And if you're curious if you would like a little bit of a bonus challenge then you can pause the video.

31
00:02:34,780 --> 00:02:40,090
Now switch to Python and see if you can reproduce this thing by figuring out or you know just kind of

32
00:02:40,090 --> 00:02:43,360
guessing with trial and error what t should be.

33
00:02:43,510 --> 00:02:49,050
Okay but now I'm going to switch to Python and we are going to produce this graph.

34
00:02:49,300 --> 00:02:59,330
We are going to need the NUM pi so import num pi as MP and we're going to need for plotting of course

35
00:02:59,350 --> 00:03:06,330
Matt plot lib dot pi plot as P L T.

36
00:03:06,430 --> 00:03:07,300
All right.

37
00:03:07,330 --> 00:03:09,850
So now we are going to define T.

38
00:03:09,850 --> 00:03:11,790
So again this is the only thing I haven't really told you.

39
00:03:11,800 --> 00:03:16,840
So there is no real correct answer you could try a variety of boundaries.

40
00:03:16,840 --> 00:03:27,340
I'm going to use minus six times pi to six times pi so minus six pi plus six pi and I'm going to go

41
00:03:27,400 --> 00:03:33,820
in a thousand steps so one thousand steps between this number and this number.

42
00:03:33,850 --> 00:03:36,780
Okay so then we set a equals T.

43
00:03:36,790 --> 00:03:41,230
Now you're probably thinking that you know we don't even need this line of code we can just write to

44
00:03:41,230 --> 00:03:48,250
you in the equations but this is just a little bit more formal and it also helps set us up for the exercises

45
00:03:48,250 --> 00:03:49,280
to come.

46
00:03:49,300 --> 00:03:49,650
All right.

47
00:03:49,660 --> 00:04:01,240
So a equals our X equals A times num pi cosine of T and then of course this needs to be cubed and I

48
00:04:01,240 --> 00:04:05,380
think I will copy and paste here for Y.

49
00:04:05,380 --> 00:04:09,860
So this is going to be sine and that's why.

50
00:04:09,970 --> 00:04:15,310
All right so I'm already going to run let's say I run the salaries I'm just gonna run this so it's not

51
00:04:15,310 --> 00:04:21,010
going to produce any outputs or graphics of course but just to make sure that I haven't already made

52
00:04:21,010 --> 00:04:23,530
some silly typo or something like that.

53
00:04:23,530 --> 00:04:25,480
OK so people tweet out plots.

54
00:04:25,480 --> 00:04:33,570
Now we just plot X comma Y and I want to spend a moment to make this plot look a little nicer but just

55
00:04:33,580 --> 00:04:36,180
make sure we that we can already produce this graph.

56
00:04:36,190 --> 00:04:37,550
So this looks good.

57
00:04:37,630 --> 00:04:37,930
Let's see.

58
00:04:37,930 --> 00:04:45,020
So I want this to be a magenta line because I happen to like purple a lot and make this slightly thicker.

59
00:04:45,100 --> 00:04:46,010
That looks good.

60
00:04:46,030 --> 00:04:52,640
And then I went to set the Axis off and almost perfect.

61
00:04:52,660 --> 00:04:56,720
I'm just going to say P L T that axis square.

62
00:04:56,770 --> 00:04:57,720
There you go.

63
00:04:57,730 --> 00:05:06,750
Now we have successfully created an asteroid radial curve so that was pretty cosmically cool but it

64
00:05:06,750 --> 00:05:14,790
gets even better because it turns out that this asteroid radial curve that we created here is one member

65
00:05:14,790 --> 00:05:16,090
of a family.

66
00:05:16,200 --> 00:05:21,190
It's a family of curves that is defined by parameter arising.

67
00:05:21,210 --> 00:05:25,920
This variable a and in particular what we do to t over here.

68
00:05:25,920 --> 00:05:30,730
So here you see other members of the families so this is nine members of the family.

69
00:05:30,750 --> 00:05:32,810
This is the one we've already created.

70
00:05:32,820 --> 00:05:34,290
So how do we get all of these.

71
00:05:34,290 --> 00:05:40,920
Well you follow your you define x and y according to exactly these same equations here.

72
00:05:40,920 --> 00:05:43,130
So this part doesn't change at all.

73
00:05:43,170 --> 00:05:50,700
We are going to change this parameter here a and in particular we are going to set a to b equal to t

74
00:05:50,700 --> 00:05:56,840
to the power of n where n is drawn from this set of integers here.

75
00:05:56,850 --> 00:06:02,090
And I see now as I'm looking at this that I made a mistake when I made this light.

76
00:06:02,120 --> 00:06:04,090
So my apologies for this error.

77
00:06:04,140 --> 00:06:09,460
This too here is confusing because when you look at this it looks like it's supposed to be just that

78
00:06:09,480 --> 00:06:12,060
even numbers so 0 2 4 6 8.

79
00:06:12,090 --> 00:06:19,070
In fact this should be a one so n is drawn from zero one two three four five six seven eight.

80
00:06:19,110 --> 00:06:25,120
So the natural numbers non negative counting numbers from zero up to eight.

81
00:06:25,170 --> 00:06:31,920
And when you insert these ends into this parameter a that's going to give you these nine different graphs.

82
00:06:31,920 --> 00:06:35,520
So this is N equals zero.

83
00:06:35,520 --> 00:06:39,650
And when n equals zero of course anything to the power of zero is one.

84
00:06:39,690 --> 00:06:42,610
So in fact a is just all ones here.

85
00:06:42,810 --> 00:06:45,020
And then this is t to the power of one.

86
00:06:45,030 --> 00:06:46,520
This is what we already created.

87
00:06:46,740 --> 00:06:48,750
And then this is T squared and so on.

88
00:06:49,260 --> 00:06:55,090
So you can see they'll look a little bit similar and some of them look a little wobbly or a little weird.

89
00:06:55,110 --> 00:07:01,090
So these are all different idiosyncratic members of this family of asteroid radial curves.

90
00:07:01,140 --> 00:07:02,880
So this is your assignment.

91
00:07:02,910 --> 00:07:03,990
This is your exercise.

92
00:07:04,050 --> 00:07:06,960
Create this series of nine plots.

93
00:07:06,960 --> 00:07:12,660
Now the thing is if all you had to do was modify this equation that would be way too easy.

94
00:07:12,660 --> 00:07:19,680
You guys are way too smart way too good for an exercise that only asks you to do this one tiny little

95
00:07:19,680 --> 00:07:20,840
manipulation.

96
00:07:20,880 --> 00:07:29,190
So instead what you should do is figure out how to construct a three by three subplot geometry so that

97
00:07:29,280 --> 00:07:37,350
inside a for loop where you're looping over these end values you can put each member of this curve family

98
00:07:37,410 --> 00:07:39,950
into its own subplot like this.

99
00:07:39,990 --> 00:07:41,610
So that means so let me show you.

100
00:07:41,610 --> 00:07:43,760
So I did this using axis.

101
00:07:43,830 --> 00:07:49,340
So this is axis 0 0 which means it's the first row or rows 0 column 0.

102
00:07:49,410 --> 00:07:51,300
This is row 0 column 1.

103
00:07:51,390 --> 00:07:57,330
And for example this is the axis that is contained in row one as well.

104
00:07:57,630 --> 00:07:59,640
Yeah row number one which means the second row.

105
00:07:59,670 --> 00:08:06,060
So the first row the second row the third row and column number two which means the third column here.

106
00:08:06,080 --> 00:08:12,810
Okay but how do you get these numbers one comma two for example from this parameter n which is what

107
00:08:12,810 --> 00:08:19,100
we are raising to the power this parameter n is gonna go zero one two three four five six seven eight.

108
00:08:19,110 --> 00:08:22,580
So this is the challenging part of this exercise.

109
00:08:22,590 --> 00:08:29,220
You have to figure out how to convert this linear index that goes from zero to one and then two three

110
00:08:29,220 --> 00:08:36,360
four five six seven eight into this pair of numbers that gives you coordinates of this three by three

111
00:08:36,660 --> 00:08:38,630
subplot geometry.

112
00:08:38,640 --> 00:08:44,870
Now if you would like to figure this out on your own then now is your chance to pause the video.

113
00:08:44,880 --> 00:08:49,820
I'm gonna give you a hint if you don't want the hint and pause the video now.

114
00:08:49,860 --> 00:08:50,250
All right.

115
00:08:50,250 --> 00:08:53,430
The hint is you can use a method.

116
00:08:53,430 --> 00:08:56,260
Figure out how to use a method called Ravel.

117
00:08:56,350 --> 00:08:58,950
It is a Ravel method.

118
00:08:58,950 --> 00:09:04,950
Now this isn't much of a really great hint because you still have to figure out how exactly to use this

119
00:09:04,970 --> 00:09:11,100
this is just a little bit of like a flashlight in the dark to tell you kind of give you a directional

120
00:09:11,100 --> 00:09:12,800
vector here.

121
00:09:12,810 --> 00:09:16,550
Now I also want to say that there are multiple ways to solve this problem.

122
00:09:16,560 --> 00:09:20,660
So the solution I am going to show you is using the Ravel method.

123
00:09:20,670 --> 00:09:26,110
If you come up with a different solution that still gets you to this plot then that's totally great.

124
00:09:26,130 --> 00:09:28,440
It doesn't matter exactly how you solve it.

125
00:09:29,010 --> 00:09:29,850
All right.

126
00:09:29,850 --> 00:09:37,000
Now is your last opportunity to pause the video switch to Python and produce this graph on your own.

127
00:09:37,020 --> 00:09:46,110
Now I'm going to switch to Python All right so let me get a new cell down here and we've got insert

128
00:09:46,110 --> 00:09:51,370
a few more cells just so you know we can put this in the middle of the screen here.

129
00:09:51,420 --> 00:09:58,050
Now what I want to do is make all of these individual plots first and then worry about how to put them

130
00:09:58,050 --> 00:10:00,690
together into a subplot geometry.

131
00:10:00,720 --> 00:10:02,150
So I'm going to make a for loop.

132
00:10:02,160 --> 00:10:08,030
I'll call it the looping variable I and it's going to be in range 9.

133
00:10:08,060 --> 00:10:13,730
So that's gonna go from 0 up through 8 in integers so we specify let's see.

134
00:10:13,750 --> 00:10:21,280
I think I will actually copy and paste some of this code down here.

135
00:10:21,280 --> 00:10:24,130
So let's see.

136
00:10:24,130 --> 00:10:31,930
So this is all correct this is going to be d to the power of AI and then we don't need to change those

137
00:10:31,930 --> 00:10:32,110
things.

138
00:10:32,110 --> 00:10:39,520
So what I'm gonna do first is just say P L T dot plot x comma Y and then peel T dot show.

139
00:10:39,520 --> 00:10:45,640
So this is not the correct solution to the exercise it's going to put each of these individual plots

140
00:10:45,760 --> 00:10:48,240
in it's own figure in its own axis.

141
00:10:48,250 --> 00:10:49,890
That's not what we need to do.

142
00:10:49,900 --> 00:10:55,450
However it's good just to make sure that we are doing this correctly so we don't see any error messages

143
00:10:55,480 --> 00:10:57,250
or any warning messages.

144
00:10:57,250 --> 00:11:02,570
And this looks like all the individual figures that I already showed in the slides.

145
00:11:02,590 --> 00:11:02,950
Okay.

146
00:11:03,010 --> 00:11:03,430
Very good.

147
00:11:03,430 --> 00:11:06,040
So now let me get rid of this thing here.

148
00:11:07,410 --> 00:11:09,850
So now we can just worry about the plotting code.

149
00:11:09,870 --> 00:11:17,240
I'm going to begin by creating a figure that contains a three by three geometry of subplots.

150
00:11:17,280 --> 00:11:24,300
Fig comma X equals BLT the subplots three comma three.

151
00:11:24,300 --> 00:11:33,090
So this is going to give me a pointer to figure and a variable for the axes for all of the subplots

152
00:11:33,180 --> 00:11:36,000
in this three by three geometry.

153
00:11:36,010 --> 00:11:43,110
So then down here it's gonna be something like X and we are going to need to access individual elements

154
00:11:43,290 --> 00:11:44,950
from this X matrix.

155
00:11:44,950 --> 00:11:49,650
So it's gonna be something like you know I'll just start with zero zero dot plot and then it's gonna

156
00:11:49,650 --> 00:12:04,470
be x zero comma zero dot axis off and then axis square OK so let me try running this code.

157
00:12:04,870 --> 00:12:07,380
Now we are slowly getting somewhere.

158
00:12:07,390 --> 00:12:14,140
What we've done is create this figure with a three by three geometry but of course we are plotting everything

159
00:12:14,230 --> 00:12:15,610
into the first subplot.

160
00:12:15,610 --> 00:12:15,890
So.

161
00:12:16,030 --> 00:12:21,080
So basically we need to figure out how to replace these zeros the 0 0 things.

162
00:12:21,160 --> 00:12:21,360
OK.

163
00:12:21,400 --> 00:12:27,520
So what I'm going to do is just show you a little bit of code down here before we apply that code to

164
00:12:27,580 --> 00:12:29,370
the subplot geometry.

165
00:12:29,470 --> 00:12:36,310
So I'm going to say Rho comma call equals num PI that indices three comma three.

166
00:12:36,340 --> 00:12:37,960
So what am I doing here.

167
00:12:37,960 --> 00:12:39,400
What is this function doing.

168
00:12:39,400 --> 00:12:46,650
Let us display our silent print row and print call.

169
00:12:46,750 --> 00:12:51,500
So what this function indices is doing is converting a major.

170
00:12:51,500 --> 00:12:58,810
Are these numbers these sizes of matrix into a matrix of X coordinates and y coordinates.

171
00:12:58,810 --> 00:13:01,990
So this is 0 0 0 1 1 1 2 2 2.

172
00:13:01,990 --> 00:13:05,530
So this is Rose 0 row 1 and row 2.

173
00:13:05,530 --> 00:13:11,470
And this is column 0 column 1 and column 2 and then that gets repeated for each of these rows.

174
00:13:11,470 --> 00:13:13,150
Now this should look a bit familiar.

175
00:13:13,150 --> 00:13:19,300
We learned about things like this with creating images and using mesh grid.

176
00:13:19,300 --> 00:13:19,560
Okay.

177
00:13:19,600 --> 00:13:23,710
So that isn't exactly what we need but we are getting close.

178
00:13:23,740 --> 00:13:28,660
So what we want to do is access for example this element here.

179
00:13:28,660 --> 00:13:37,030
So we want to know that this element over here which corresponds to this subplot here is row 1 and column

180
00:13:37,090 --> 00:13:38,580
number 2.

181
00:13:38,590 --> 00:13:39,710
So how do we do that.

182
00:13:39,730 --> 00:13:43,750
That is where the Ravel method comes into play.

183
00:13:43,780 --> 00:13:44,080
Let's see.

184
00:13:44,110 --> 00:13:50,410
So I'll leave these printed out here and maybe just to make this a little bit easier to look at.

185
00:13:50,440 --> 00:13:52,960
I will put a space in between them.

186
00:13:53,170 --> 00:14:01,850
So I'm going to apply the method Ravel Ravel and let's say let's start with zero.

187
00:14:01,940 --> 00:14:02,200
Okay.

188
00:14:02,210 --> 00:14:03,800
So this tells me zero.

189
00:14:03,800 --> 00:14:06,580
Well let me try one and let's see what happens when I do one.

190
00:14:06,580 --> 00:14:06,890
Mm hmm.

191
00:14:06,890 --> 00:14:08,260
It's still zero.

192
00:14:08,270 --> 00:14:11,730
And what happens when I do to still zero.

193
00:14:11,740 --> 00:14:14,170
And now here's where it's going to start getting interesting.

194
00:14:14,180 --> 00:14:15,920
I'm going to write three.

195
00:14:16,100 --> 00:14:17,360
So now I said three.

196
00:14:17,360 --> 00:14:20,300
This corresponds actually to the fourth index.

197
00:14:20,300 --> 00:14:25,460
So index number three which is the fourth element and that is actually returning a one.

198
00:14:25,460 --> 00:14:26,690
And what does that mean.

199
00:14:26,690 --> 00:14:28,220
So that is zero.

200
00:14:28,250 --> 00:14:33,170
So this is location in the matrix 0 1 2 3.

201
00:14:33,170 --> 00:14:40,580
So this is going to be 4 5 and my prediction is that if I replace this with 6 the output is going to

202
00:14:40,580 --> 00:14:42,200
be 2.

203
00:14:42,770 --> 00:14:43,680
So there you go.

204
00:14:43,790 --> 00:14:49,120
But now if I say call that Ravel what is that going to return.

205
00:14:49,240 --> 00:14:57,020
That's going to return 0 1 2 3 4 5 6 so that should actually return 0.

206
00:14:57,100 --> 00:14:59,750
And that is the key insight here.

207
00:14:59,770 --> 00:15:09,950
So let me move this code up here and then what we want to do is say I'm gonna say ah for the row that

208
00:15:09,950 --> 00:15:10,630
we want.

209
00:15:10,680 --> 00:15:21,620
This is row dot Ravel and then we want to input or extract the index corresponding to the ISF element.

210
00:15:21,680 --> 00:15:25,490
And then this is going to be C for column and that's call.

211
00:15:25,550 --> 00:15:32,130
And now I just have to replace this with R C for row column.

212
00:15:32,150 --> 00:15:32,930
All right.

213
00:15:32,930 --> 00:15:33,380
Let's see.

214
00:15:33,380 --> 00:15:33,930
Huh.

215
00:15:33,950 --> 00:15:34,940
This looks great.

216
00:15:34,940 --> 00:15:36,410
This is really beautiful.

217
00:15:36,410 --> 00:15:40,410
The last thing I want to do is I'm just kind of set this to be black.

218
00:15:40,460 --> 00:15:43,720
I think that looks a little bit nicer actually.

219
00:15:43,730 --> 00:15:48,230
You know there is one more final final thing I want to do here and that's just to make this figure a

220
00:15:48,230 --> 00:15:49,350
little bit bigger.

221
00:15:49,370 --> 00:15:54,620
This looks a little bit small maybe you know I'm getting older my eyes aren't what they aren't as good

222
00:15:54,620 --> 00:15:55,490
as what they used to be.

223
00:15:55,490 --> 00:15:58,120
So I'm going to say fig size.

224
00:15:58,130 --> 00:15:59,030
I'm just kidding by the way.

225
00:15:59,030 --> 00:16:00,200
I'm really really young.

226
00:16:00,920 --> 00:16:10,440
Let's say 10 by six inches and that alone makes this figure quite a bit bigger so in this video you

227
00:16:10,440 --> 00:16:17,340
learned how to create an asteroid radial curve both the kind of basic one and also a parameter sized

228
00:16:17,340 --> 00:16:17,810
one.

229
00:16:18,030 --> 00:16:22,050
And you learned about converting linear indices into subscript.

230
00:16:22,440 --> 00:16:27,090
I'm really looking forward to the rest of the videos in this section and I hope you are too.
