WEBVTT
1
1

00:00:00.260  -->  00:00:02.730
<v ->Hello and welcome to this Python tutorial.</v>
2

2

00:00:02.730  -->  00:00:04.410
So in the previous tutorial we prepared
3

3

00:00:04.410  -->  00:00:06.240
the training set and the test set
4

4

00:00:06.240  -->  00:00:07.760
and today in this quick tutorial,
5

5

00:00:07.760  -->  00:00:10.960
we're gonna get the total number of users and movies.
6

6

00:00:10.960  -->  00:00:12.470
So why do we need to do that?
7

7

00:00:12.470  -->  00:00:14.440
Well that is because of what we're gonna do
8

8

00:00:14.440  -->  00:00:15.850
in the next tutorial.
9

9

00:00:15.850  -->  00:00:16.770
In the next tutorial,
10

10

00:00:16.770  -->  00:00:20.150
we are going to convert our training sets and test set
11

11

00:00:20.150  -->  00:00:22.070
that we just imported previously
12

12

00:00:22.070  -->  00:00:24.540
and we're going to convert them into a matrix
13

13

00:00:24.540  -->  00:00:26.750
where the line are going to be the users,
14

14

00:00:26.750  -->  00:00:28.750
the columns are going to be the movies,
15

15

00:00:28.750  -->  00:00:31.750
and the cells are going to be the ratings.
16

16

00:00:31.750  -->  00:00:33.730
And we are going to create such a matrix
17

17

00:00:33.730  -->  00:00:36.770
for the training set and another one for the test set.
18

18

00:00:36.770  -->  00:00:39.240
And besides, in each of these two matrices,
19

19

00:00:39.240  -->  00:00:41.190
we want to include all the users
20

20

00:00:41.190  -->  00:00:44.120
and all the movies from the original data set.
21

21

00:00:44.120  -->  00:00:47.080
And if in the training set that we just imported,
22

22

00:00:47.080  -->  00:00:48.960
a user didn't rate a movie,
23

23

00:00:48.960  -->  00:00:51.670
well we'll put a zero into the cell of the matrix
24

24

00:00:51.670  -->  00:00:54.730
that corresponds to this user and that movie.
25

25

00:00:54.730  -->  00:00:57.440
So to recap, we're gonna make two matrices,
26

26

00:00:57.440  -->  00:01:00.080
one for the training set and one for the test set.
27

27

00:01:00.080  -->  00:01:02.460
These matrices will have the same number of users
28

28

00:01:02.460  -->  00:01:03.720
and the same number of movies
29

29

00:01:03.720  -->  00:01:05.730
so they will have the same number of lines
30

30

00:01:05.730  -->  00:01:07.420
and the same number of columns
31

31

00:01:07.420  -->  00:01:11.620
and in these two matrices, each cell of indexes U, I,
32

32

00:01:11.620  -->  00:01:14.560
where U is the user and I is the movie,
33

33

00:01:14.560  -->  00:01:17.590
each cell UI will get a rating of the movie I
34

34

00:01:17.590  -->  00:01:20.940
by the user U and if this user U
35

35

00:01:20.940  -->  00:01:24.070
didn't rate the movie I, we'll put a zero.
36

36

00:01:24.070  -->  00:01:27.390
So that's what we're gonna make in the next tutorial
37

37

00:01:27.390  -->  00:01:29.390
and we're gonna make a function to do this
38

38

00:01:29.390  -->  00:01:32.110
and so as you understood, since these two matrices
39

39

00:01:32.110  -->  00:01:34.660
will each one contain the total number of users
40

40

00:01:34.660  -->  00:01:36.270
and the total number of movies,
41

41

00:01:36.270  -->  00:01:38.460
well in this tutorial, we need to get
42

42

00:01:38.460  -->  00:01:41.560
this total number of users and this total number of movies.
43

43

00:01:41.560  -->  00:01:43.540
And so now, you might be wondering,
44

44

00:01:43.540  -->  00:01:45.770
well it's easy to get the total number of users.
45

45

00:01:45.770  -->  00:01:48.000
We just need to click on the training set,
46

46

00:01:48.000  -->  00:01:52.620
scroll down to the bottom and take 943
47

47

00:01:52.620  -->  00:01:55.090
because it corresponds to the last user
48

48

00:01:55.090  -->  00:01:57.860
and same for the movie, to get the total number of movie,
49

49

00:01:57.860  -->  00:02:00.640
we need to get this 1330
50

50

00:02:00.640  -->  00:02:02.750
because it corresponds to the last movie.
51

51

00:02:02.750  -->  00:02:05.080
Indeed, if I also open the test set,
52

52

00:02:05.080  -->  00:02:07.060
and if I scroll down to the end,
53

53

00:02:07.060  -->  00:02:09.220
well we can check that the total number of users
54

54

00:02:09.220  -->  00:02:14.220
is still 943 because here in the test set it goes up to 462.
55

55

00:02:15.440  -->  00:02:17.510
So for the number of users, it would be tempting
56

56

00:02:17.510  -->  00:02:21.400
to say that the total number of users is 943.
57

57

00:02:21.400  -->  00:02:23.160
So okay, we could do that
58

58

00:02:23.160  -->  00:02:25.740
but the code we are making right now,
59

59

00:02:25.740  -->  00:02:30.580
I want it to be applicable to the five train test folds
60

60

00:02:30.580  -->  00:02:32.140
that are in the database.
61

61

00:02:32.140  -->  00:02:34.220
Not only for this first one here,
62

62

00:02:34.220  -->  00:02:35.730
you want base and you want test.
63

63

00:02:35.730  -->  00:02:40.480
I want also this code to be applicable to U2, U3, U4 and U5.
64

64

00:02:40.480  -->  00:02:41.410
And why is that?
65

65

00:02:41.410  -->  00:02:42.900
It's in case you wanna practice
66

66

00:02:42.900  -->  00:02:46.680
and do K fold cross validation with these other sets.
67

67

00:02:46.680  -->  00:02:50.680
And if we put the number of users equal to 943,
68

68

00:02:50.680  -->  00:02:52.290
well that won't work for the other sets,
69

69

00:02:52.290  -->  00:02:54.510
because the users and the movies
70

70

00:02:54.510  -->  00:02:56.560
are not distributed the same way.
71

71

00:02:56.560  -->  00:03:00.100
So not only we're gonna take the max of the users
72

72

00:03:00.100  -->  00:03:02.560
in the training set, but that's not enough
73

73

00:03:02.560  -->  00:03:04.640
because actually in these splits, well it could be
74

74

00:03:04.640  -->  00:03:07.330
totally possible that the user that has the highest
75

75

00:03:07.330  -->  00:03:11.070
user ID could be in the test set as opposed to
76

76

00:03:11.070  -->  00:03:13.640
what we observe here where the highest user ID
77

77

00:03:13.640  -->  00:03:16.230
is in the training set, but actually the splits
78

78

00:03:16.230  -->  00:03:18.450
are random and so we could totally have
79

79

00:03:18.450  -->  00:03:20.370
the highest user ID in the test set
80

80

00:03:20.370  -->  00:03:24.050
for one of these pairs of training and test sets.
81

81

00:03:24.050  -->  00:03:27.060
So that's why now what we're gonna do to get the total
82

82

00:03:27.060  -->  00:03:29.500
number of users and the total number of movies
83

83

00:03:29.500  -->  00:03:32.660
is take the maximum of the maximum user ID
84

84

00:03:32.660  -->  00:03:36.130
in the training set and the maximum user ID in the test set.
85

85

00:03:36.130  -->  00:03:39.000
And by doing that you will be sure that we get the total
86

86

00:03:39.000  -->  00:03:41.570
number of users and the total number of movies
87

87

00:03:41.570  -->  00:03:43.900
that we will need in the next tutorial to make
88

88

00:03:43.900  -->  00:03:48.150
this matrix of users in lines and movies in columns.
89

89

00:03:48.150  -->  00:03:49.070
So let's do this.
90

90

00:03:49.070  -->  00:03:51.270
Now that we get it, it's going to be very simple.
91

91

00:03:51.270  -->  00:03:53.270
I'm going back to variable explorer
92

92

00:03:53.270  -->  00:03:55.640
and so we're gonna make two new variables
93

93

00:03:55.640  -->  00:04:00.613
nb_users which is going to be the total number of users and
94

94

00:04:01.708  -->  00:04:04.430
nb_movies which is going to be
95

95

00:04:04.430  -->  00:04:06.100
the total number of movies
96

96

00:04:06.100  -->  00:04:09.040
and so as I just said, for the total number of users,
97

97

00:04:09.040  -->  00:04:13.580
we're gonna take the max of the maximum user ID
98

98

00:04:13.580  -->  00:04:16.560
in the training set and so that is the max of
99

99

00:04:16.560  -->  00:04:20.530
training set and then in brackets we need to input
100

100

00:04:20.530  -->  00:04:24.220
the index of the user column and that is index zero
101

101

00:04:24.220  -->  00:04:26.570
and we need to take all the lines so we're gonna add here
102

102

00:04:26.570  -->  00:04:30.910
column and comma so this training set, column, comma, zero
103

103

00:04:30.910  -->  00:04:33.190
is the first column of the training set,
104

104

00:04:33.190  -->  00:04:37.300
that is the users, all the users,
105

105

00:04:37.300  -->  00:04:40.987
and we're taking the max so we're definitely taking
106

106

00:04:40.987  -->  00:04:45.490
the maximum user ID of this column.
107

107

00:04:45.490  -->  00:04:49.050
So okay, and now we need to do the same for the test set
108

108

00:04:49.050  -->  00:04:51.810
because the maximum user ID might be in the test set.
109

109

00:04:51.810  -->  00:04:53.450
So we're gonna do the same.
110

110

00:04:53.450  -->  00:04:57.310
We're gonna take this maximum of the training set,
111

111

00:04:57.310  -->  00:05:01.990
paste that here, and replace training set by test set.
112

112

00:05:01.990  -->  00:05:02.990
Here we go.
113

113

00:05:02.990  -->  00:05:05.740
Okay, and now we need to add something very important,
114

114

00:05:05.740  -->  00:05:09.760
it's to force this maximum number here to be an integer.
115

115

00:05:09.760  -->  00:05:11.220
Otherwise we'll get an error.
116

116

00:05:11.220  -->  00:05:15.300
I actually experienced that so we have to convert
117

117

00:05:15.300  -->  00:05:18.360
this number into an integer and do this we're going to use
118

118

00:05:18.360  -->  00:05:22.640
the int function and put all these maximums inside
119

119

00:05:22.640  -->  00:05:24.040
this int function.
120

120

00:05:24.040  -->  00:05:26.130
Okay and now that should be okay.
121

121

00:05:26.130  -->  00:05:29.240
I'm going to select this line and execute
122

122

00:05:29.240  -->  00:05:31.640
and as expected we get that the
123

123

00:05:31.640  -->  00:05:35.260
total number of users is 943.
124

124

00:05:35.260  -->  00:05:37.580
But it might not be work the same way for the other
125

125

00:05:37.580  -->  00:05:40.470
train test splits so we have to use this in case
126

126

00:05:40.470  -->  00:05:42.470
you want to apply this code for the
127

127

00:05:42.470  -->  00:05:44.190
other training and test sets.
128

128

00:05:44.190  -->  00:05:46.280
Okay so now we're gonna do the same for
129

129

00:05:46.280  -->  00:05:48.150
the total number of movies and actually
130

130

00:05:48.150  -->  00:05:49.880
this is going to be very simple.
131

131

00:05:49.880  -->  00:05:53.060
We just need to copy this part of line,
132

132

00:05:53.060  -->  00:05:55.830
copy, and then paste that here
133

133

00:05:55.830  -->  00:05:58.050
and of course here what we're gonna do is
134

134

00:05:58.050  -->  00:06:01.480
replace the index of the column of the users here,
135

135

00:06:01.480  -->  00:06:05.730
that is zero and here by the index of column of the movies
136

136

00:06:05.730  -->  00:06:08.930
and if we go back to our training set or test set
137

137

00:06:08.930  -->  00:06:10.680
we all remember that the column that corresponds
138

138

00:06:10.680  -->  00:06:13.140
to the movies is the second column
139

139

00:06:13.140  -->  00:06:15.140
and so it has index one.
140

140

00:06:15.140  -->  00:06:18.210
So what we simply need to do is to replace
141

141

00:06:18.210  -->  00:06:21.820
the index zero her by one and same for here,
142

142

00:06:21.820  -->  00:06:25.050
we replace the index zero by one.
143

143

00:06:25.050  -->  00:06:26.110
And that's actually all.
144

144

00:06:26.110  -->  00:06:28.820
We are ready to get the total number of movies.
145

145

00:06:28.820  -->  00:06:33.200
Let's see if this was 1330.
146

146

00:06:33.200  -->  00:06:35.940
Maybe that in the test set, some user rated a movie
147

147

00:06:35.940  -->  00:06:37.640
of higher index than this one.
148

148

00:06:37.640  -->  00:06:40.310
If that's the case that will give you even more motivation
149

149

00:06:40.310  -->  00:06:42.800
to do this, taking the max of the max.
150

150

00:06:42.800  -->  00:06:44.610
So I'm gonna press okay.
151

151

00:06:44.610  -->  00:06:47.210
Let's remember 1330.
152

152

00:06:47.210  -->  00:06:50.830
I'm going to select this line and execute
153

153

00:06:50.830  -->  00:06:55.380
and see the maximum movie ID is 1682.
154

154

00:06:55.380  -->  00:06:58.000
So we had to take the max of the max because we don't know
155

155

00:06:58.000  -->  00:07:02.040
if this movie ID was in the training set or in the test set
156

156

00:07:02.040  -->  00:07:03.680
and actually we can check it out.
157

157

00:07:03.680  -->  00:07:07.350
We just need to select this to get the maximum movie ID
158

158

00:07:07.350  -->  00:07:12.040
in the training set and that is 1682 so that's the one.
159

159

00:07:12.040  -->  00:07:14.480
The maximum movie ID was in the training set
160

160

00:07:14.480  -->  00:07:16.750
and if you want to look at the maximum movie ID
161

161

00:07:16.750  -->  00:07:21.650
in the test set, that was 1591.
162

162

00:07:21.650  -->  00:07:23.500
So it could have been in the test set.
163

163

00:07:23.500  -->  00:07:26.420
That's not the case for this first train test split but it
164

164

00:07:26.420  -->  00:07:28.620
could be the other way for the other train test splits.
165

165

00:07:28.620  -->  00:07:31.140
So that's absolutely necessary to do it this way
166

166

00:07:32.063  -->  00:07:34.260
if you want to apply five fold cross validation
167

167

00:07:34.260  -->  00:07:36.510
which I would highly encourage if you want to make
168

168

00:07:36.510  -->  00:07:38.710
your model even more robust when applying
169

169

00:07:38.710  -->  00:07:40.403
some parameter tuning next to it.
170

170

00:07:41.950  -->  00:07:44.850
Alright so we get what we wanted and so now
171

171

00:07:44.850  -->  00:07:46.610
we're ready to move on to the next step
172

172

00:07:46.610  -->  00:07:51.030
which is to convert our training set and our test set
173

173

00:07:51.030  -->  00:07:54.710
which so far has the format of the first column
174

174

00:07:54.710  -->  00:07:57.400
being the users, the second column being the movies,
175

175

00:07:57.400  -->  00:07:59.000
the third column being the ratings,
176

176

00:07:59.000  -->  00:08:01.160
and the fourth column being the time stamps,
177

177

00:08:01.160  -->  00:08:04.500
into a matrix where the lines are the users,
178

178

00:08:04.500  -->  00:08:08.070
the columns are the movies and the timestamps are gone
179

179

00:08:08.070  -->  00:08:10.060
because we don't care of the timestamps.
180

180

00:08:10.060  -->  00:08:11.830
And each cell will contain the rating
181

181

00:08:11.830  -->  00:08:13.720
of the movie I by the user U
182

182

00:08:13.720  -->  00:08:16.000
and if the user U didn't rate the movie I,
183

183

00:08:16.000  -->  00:08:17.440
we'll put a zero.
184

184

00:08:17.440  -->  00:08:19.310
So we'll do all this in the next tutorial
185

185

00:08:19.310  -->  00:08:20.953
and until then, enjoy learning.
