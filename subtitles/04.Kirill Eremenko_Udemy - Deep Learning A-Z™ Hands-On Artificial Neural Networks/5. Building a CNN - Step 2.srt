1
1

00:00:00,260  -->  00:00:02,740
<v Instructor>Hello and welcome to this Python tutorial.</v>
2

2

00:00:02,740  -->  00:00:05,030
So, we are ready to start building our
3

3

00:00:05,030  -->  00:00:06,650
convolutional neural network.
4

4

00:00:06,650  -->  00:00:09,780
I'm super excited to start, and I hope you are too.
5

5

00:00:09,780  -->  00:00:11,800
This is going to be quite a long journey.
6

6

00:00:11,800  -->  00:00:14,160
We're not making the most simple model here,
7

7

00:00:14,160  -->  00:00:16,860
so we're gonna make it step-by-step.
8

8

00:00:16,860  -->  00:00:19,900
And the first step is to import all the Keras packages
9

9

00:00:19,900  -->  00:00:22,750
that we will need to make our CNN model.
10

10

00:00:22,750  -->  00:00:24,580
So, I've prepared them here;
11

11

00:00:24,580  -->  00:00:26,320
there are five of them as you can see.
12

12

00:00:26,320  -->  00:00:30,160
And these are the only packages we'll need to make our
13

13

00:00:30,160  -->  00:00:31,690
convolutional neural network.
14

14

00:00:31,690  -->  00:00:34,030
So, let's get these imports done
15

15

00:00:34,030  -->  00:00:37,120
so that we can mostly focus on the CNN.
16

16

00:00:37,120  -->  00:00:38,610
So, let's just see what they are.
17

17

00:00:38,610  -->  00:00:42,050
The first package is Sequential, and we already saw this
18

18

00:00:42,050  -->  00:00:45,120
package in the previous section when making the ANN.
19

19

00:00:45,120  -->  00:00:48,070
This Sequential package is the one that we'll use to
20

20

00:00:48,070  -->  00:00:51,120
initialize our neural network because, remember, there are
21

21

00:00:51,120  -->  00:00:53,660
two ways of initializing the neural network,
22

22

00:00:53,660  -->  00:00:57,100
either as a sequence of layers or as a graph.
23

23

00:00:57,100  -->  00:00:59,770
And since a convolutional neural network is still a
24

24

00:00:59,770  -->  00:01:03,110
sequence of layers, well, we use the Sequential package
25

25

00:01:03,110  -->  00:01:06,100
to initialize our neural network.
26

26

00:01:06,100  -->  00:01:09,052
Alright, then second package, Convolution2D.
27

27

00:01:09,052  -->  00:01:11,820
So, Convolution2D, as you might have guessed, is the package
28

28

00:01:11,820  -->  00:01:15,150
that we'll use for the first step of making the CNN,
29

29

00:01:15,150  -->  00:01:18,030
that is the Convolution Step, in which we add
30

30

00:01:18,030  -->  00:01:20,020
the convolutional layers.
31

31

00:01:20,020  -->  00:01:23,710
And, here, since we're working on images and since images
32

32

00:01:23,710  -->  00:01:26,860
are in two dimensions unlike, for example, videos that are
33

33

00:01:26,860  -->  00:01:30,406
in three dimensions with the time, well, we use this
34

34

00:01:30,406  -->  00:01:34,003
Convolution2D package to deal with images.
35

35

00:01:34,880  -->  00:01:38,930
Then, next package is MaxPooling2D, and, as you might have
36

36

00:01:38,930  -->  00:01:41,740
guessed as well, this package will be the package that we'll
37

37

00:01:41,740  -->  00:01:45,550
use to proceed to step two, the Pooling Step,
38

38

00:01:45,550  -->  00:01:47,860
that will add our pooling layers.
39

39

00:01:47,860  -->  00:01:50,550
Alright, the next package, Flatten.
40

40

00:01:50,550  -->  00:01:53,500
So, this is the package that we'll use for step three,
41

41

00:01:53,500  -->  00:01:57,690
Flattening, in which we convert all the pooled feature maps
42

42

00:01:57,690  -->  00:02:00,930
that we created through Convolution and MaxPooling into
43

43

00:02:00,930  -->  00:02:04,650
this large feature vector that is then becoming the input
44

44

00:02:04,650  -->  00:02:07,120
of our fully connected layers.
45

45

00:02:07,120  -->  00:02:10,600
And then finally last package, the Dense package, you know
46

46

00:02:10,600  -->  00:02:13,730
this package, we already used it in the ANN section.
47

47

00:02:13,730  -->  00:02:17,320
This is the package we use to add the fully connected layers
48

48

00:02:17,320  -->  00:02:20,530
in a classic artificial neural network.
49

49

00:02:20,530  -->  00:02:24,530
Alright, so basically each package corresponds to one step
50

50

00:02:24,530  -->  00:02:27,040
of the construction of the CNN.
51

51

00:02:27,040  -->  00:02:28,000
Alright, perfect.
52

52

00:02:28,000  -->  00:02:30,040
So, now let's import the packages.
53

53

00:02:30,040  -->  00:02:32,103
I'm going to select all these lines here and
54

54

00:02:32,103  -->  00:02:36,520
press Command and Control + Enter to import the package.
55

55

00:02:36,520  -->  00:02:38,550
And here we're reminded that we're using the
56

56

00:02:38,550  -->  00:02:41,910
TensorFlow backend, which I recommend to use since
57

57

00:02:41,910  -->  00:02:45,140
the computations are gonna be a little faster.
58

58

00:02:45,140  -->  00:02:47,150
Alright, so that's done for this first step.
59

59

00:02:47,150  -->  00:02:49,090
Now, let's move on to the second step,
60

60

00:02:49,090  -->  00:02:52,820
which is to initialize our convolutional neural network.
61

61

00:02:52,820  -->  00:02:55,040
And, to initialize it, we're gonna use the Sequential
62

62

00:02:55,040  -->  00:02:58,500
package, and that's what we'll do in the next tutorial.
63

63

00:02:58,500  -->  00:03:00,153
Until then, enjoy deep learning.
