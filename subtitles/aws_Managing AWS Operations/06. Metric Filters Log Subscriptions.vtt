WEBVTT
1
00:00:00.900 --> 00:00:01.160
[Autogenerated] Okay.

2
00:00:01.160 --> 00:00:01.910
Welcome back.

3
00:00:01.910 --> 00:00:02.930
Now, in this clip,

4
00:00:02.930 --> 00:00:05.210
we're going to start looking at metric filters in

5
00:00:05.210 --> 00:00:07.520
subscriptions for our log groups.

6
00:00:07.520 --> 00:00:08.000
Well,

7
00:00:08.000 --> 00:00:12.340
a metric filter allows us to scan or filter are log

8
00:00:12.340 --> 00:00:15.260
group for specific messages in our logs.

9
00:00:15.260 --> 00:00:15.460
Now,

10
00:00:15.460 --> 00:00:17.980
a good use case for this would be if we wanted to pick

11
00:00:17.980 --> 00:00:21.180
something up and then maybe pass it to a subscription or

12
00:00:21.180 --> 00:00:23.020
some type of monitoring service.

13
00:00:23.020 --> 00:00:24.350
So it's looking an example.

14
00:00:24.350 --> 00:00:27.830
I'm gonna add a metric filter for this get SSN parameter function.

15
00:00:27.830 --> 00:00:30.190
And what I'm gonna do here is I'm gonna go over to

16
00:00:30.190 --> 00:00:32.620
Lambda and let's edit this function.

17
00:00:32.620 --> 00:00:35.210
I'm gonna add in a custom logging statement here,

18
00:00:35.210 --> 00:00:37.000
and we can see we have a warrant statement.

19
00:00:37.000 --> 00:00:40.940
So this basically is kind of like mimicking a warrant statement from an

20
00:00:40.940 --> 00:00:45.240
application that you might be pushing logs in the cloudwatch for So what

21
00:00:45.240 --> 00:00:49.170
we'll do is we'll scan our log or a filter are logged,

22
00:00:49.170 --> 00:00:53.830
group for this, warn syntax, and that's gonna pick up this entire message.

23
00:00:53.830 --> 00:00:55.150
So it's going to give this a go.

24
00:00:55.150 --> 00:00:58.780
I'm gonna click on save here and let me click on test a few times,

25
00:00:58.780 --> 00:01:00.720
and then I'm gonna go back to Cloudwatch.

26
00:01:00.720 --> 00:01:03.260
And what I have to do here is cancel out because I need

27
00:01:03.260 --> 00:01:04.690
to make sure this log stream is there.

28
00:01:04.690 --> 00:01:06.340
Let me go back to log groups.

29
00:01:06.340 --> 00:01:08.220
I'm gonna go in here and we can see.

30
00:01:08.220 --> 00:01:09.910
Here's our latest log stream.

31
00:01:09.910 --> 00:01:12.510
So let me verify it's in there and it ISS so I'm

32
00:01:12.510 --> 00:01:14.270
going to do is go back to law groups.

33
00:01:14.270 --> 00:01:17.490
I'm gonna click on metric filters here.

34
00:01:17.490 --> 00:01:18.530
I'm gonna add one,

35
00:01:18.530 --> 00:01:22.370
and I'm actually going to scan or filter for that warren pattern.

36
00:01:22.370 --> 00:01:22.870
And there we go.

37
00:01:22.870 --> 00:01:25.520
So now I'm filtering for any warn patterns.

38
00:01:25.520 --> 00:01:28.070
So anything matching this particular example?

39
00:01:28.070 --> 00:01:31.340
So what I'm gonna do here is select the most recent log stream and

40
00:01:31.340 --> 00:01:33.520
I'm gonna test this pattern and you can see down.

41
00:01:33.520 --> 00:01:34.460
Here are results.

42
00:01:34.460 --> 00:01:37.950
We found two matches out of 12 events in this log.

43
00:01:37.950 --> 00:01:39.700
So if I show the test results here,

44
00:01:39.700 --> 00:01:43.470
we can see line number four in line number 10 and you can see

45
00:01:43.470 --> 00:01:45.970
that it picked up our entire line content.

46
00:01:45.970 --> 00:01:48.920
So this is how we can filter for certain messages that are

47
00:01:48.920 --> 00:01:51.720
getting spit into our cloudwatch log groups.

48
00:01:51.720 --> 00:01:54.510
Now it is important to note that when they say events,

49
00:01:54.510 --> 00:01:57.620
they mean each line in a log group log stream.

50
00:01:57.620 --> 00:02:00.480
So let me go back here and let's look at all this.

51
00:02:00.480 --> 00:02:04.100
Every single one of these lines in this log stream is an event.

52
00:02:04.100 --> 00:02:10.300
So if we look at our results line for which is 1234 there's our warn message,

53
00:02:10.300 --> 00:02:14.740
and then line 10 which is right down here so we can see that this is how they

54
00:02:14.740 --> 00:02:19.620
measure lines and correlate that to events within cloudwatch.

55
00:02:19.620 --> 00:02:22.580
Let me go down here, and I'm actually gonna assign this metric,

56
00:02:22.580 --> 00:02:25.680
and now we can give it a filter name so we'll just leave.

57
00:02:25.680 --> 00:02:27.760
This is worn because it is a worn.

58
00:02:27.760 --> 00:02:30.510
And then the next thing we do is provide metric details.

59
00:02:30.510 --> 00:02:33.550
So the metric name space will leave his log metrics here.

60
00:02:33.550 --> 00:02:37.310
But you can see it's something that allows us to group similar metrics,

61
00:02:37.310 --> 00:02:39.170
and then we give it a metric name.

62
00:02:39.170 --> 00:02:42.140
So this is gonna identify what's being published when

63
00:02:42.140 --> 00:02:43.970
our filter pattern here is match.

64
00:02:43.970 --> 00:02:46.420
So let me just go ahead and call this warn log,

65
00:02:46.420 --> 00:02:47.100
and if we want,

66
00:02:47.100 --> 00:02:49.880
we can show advanced settings here where it gives us a metric

67
00:02:49.880 --> 00:02:52.240
value and then it gives us a default value.

68
00:02:52.240 --> 00:02:55.500
So I'll leave those as they are and I'll create this filter and there we go.

69
00:02:55.500 --> 00:02:59.270
We now have a measure filter for this log group.

70
00:02:59.270 --> 00:03:00.260
Now, if we wanted to,

71
00:03:00.260 --> 00:03:04.230
we can actually create an alarm based on this which is within cloudwatch.

72
00:03:04.230 --> 00:03:08.940
And any time our metric is breaching our period for our statistic,

73
00:03:08.940 --> 00:03:11.690
we can set a similar notification here.

74
00:03:11.690 --> 00:03:15.820
So whenever we see maybe greater than zero warn statements,

75
00:03:15.820 --> 00:03:19.340
maybe we want to send a notification to our SNS topic.

76
00:03:19.340 --> 00:03:23.290
So that just kind of shows you how you can utilize thes log metric

77
00:03:23.290 --> 00:03:27.580
filters to monitor your applications at a deeper level than what's

78
00:03:27.580 --> 00:03:30.500
offered to you by a W s by default.

79
00:03:30.500 --> 00:03:33.900
Now let's go back here to log groups and let me select get

80
00:03:33.900 --> 00:03:36.640
SSN parameter and under the actions menu,

81
00:03:36.640 --> 00:03:39.160
we can see that we can add subscriptions here.

82
00:03:39.160 --> 00:03:39.350
Now,

83
00:03:39.350 --> 00:03:44.120
a subscription is basically going to be taking in every log stream in log

84
00:03:44.120 --> 00:03:48.770
event that happens to go into this law group so we can stream to

85
00:03:48.770 --> 00:03:52.360
elasticsearch service in a W s or weaken stream to a lambda.

86
00:03:52.360 --> 00:03:56.740
So if I stream to a lambda here, we would select the Lambda that we want to do,

87
00:03:56.740 --> 00:03:57.650
and then we would slick.

88
00:03:57.650 --> 00:04:00.100
Next, we would select our log format here.

89
00:04:00.100 --> 00:04:02.290
So let's do it A lambda format.

90
00:04:02.290 --> 00:04:05.310
And this is where we can specify more filter patterns.

91
00:04:05.310 --> 00:04:07.400
So this is similar to the metric filter,

92
00:04:07.400 --> 00:04:11.290
except we're specifying the long event structure in filtering on

93
00:04:11.290 --> 00:04:14.210
those for this particular stream to this function.

94
00:04:14.210 --> 00:04:17.260
So Onley anything that matches our filter is going to be

95
00:04:17.260 --> 00:04:20.910
streamed to the subscribing function, not gonna cancel out.

96
00:04:20.910 --> 00:04:24.910
But that's how you can kind of stream certain law groups to other places.

97
00:04:24.910 --> 00:04:25.100
Now,

98
00:04:25.100 --> 00:04:27.980
an example of using this would be maybe you're collecting

99
00:04:27.980 --> 00:04:30.810
logging information in a separate function.

100
00:04:30.810 --> 00:04:34.820
Or maybe you want to push that to elasticsearch so you can query What

101
00:04:34.820 --> 00:04:38.640
kind of alarms or logging statements are more common in?

102
00:04:38.640 --> 00:04:41.620
The last thing I actually want to show you under this actions menu

103
00:04:41.620 --> 00:04:44.530
is that we can actually export data to s three.

104
00:04:44.530 --> 00:04:45.650
So what I can do here,

105
00:04:45.650 --> 00:04:49.810
select this to go back in the actions and I can export my data from

106
00:04:49.810 --> 00:04:53.280
certain data points so from the state to this date.

107
00:04:53.280 --> 00:04:55.640
And then we choose a bucket and we can look at advance

108
00:04:55.640 --> 00:04:59.310
here where we can provide a prefix, and then we can export our data.

109
00:04:59.310 --> 00:05:02.630
Now, I don't have permissions set up for this, so I'm not going to do this now.

110
00:05:02.630 --> 00:05:06.750
But this shows you how you can export all of your log data into s three,

111
00:05:06.750 --> 00:05:09.910
which is more of a long term solution for data retention.

112
00:05:09.910 --> 00:05:12.070
Obviously, I'm gonna cancel this,

113
00:05:12.070 --> 00:05:14.560
and that's actually gonna go ahead and wrap this clip up

114
00:05:14.560 --> 00:05:20.000
and I'm gonna see you in the next one. We're going to start talking about Amazon cloudwatch events.

