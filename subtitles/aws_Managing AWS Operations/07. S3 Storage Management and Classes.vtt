WEBVTT
1
00:00:00.940 --> 00:00:02.820
[Autogenerated] All right, so in this section,

2
00:00:02.820 --> 00:00:07.160
we're actually going to start diving into A W s storage management.

3
00:00:07.160 --> 00:00:07.410
Now,

4
00:00:07.410 --> 00:00:11.860
AWS offers us several tools that we are able to use

5
00:00:11.860 --> 00:00:16.490
to manage our storage in a W s, most of which are free.

6
00:00:16.490 --> 00:00:19.590
And the ones that are not free are extremely cheap.

7
00:00:19.590 --> 00:00:21.190
So in this next,

8
00:00:21.190 --> 00:00:24.510
SYRIZA clips were actually going to take a look at several

9
00:00:24.510 --> 00:00:27.300
key technologies and services offered.

10
00:00:27.300 --> 00:00:30.240
This is going to include different storage classes.

11
00:00:30.240 --> 00:00:33.200
We're gonna look at version ing encryption.

12
00:00:33.200 --> 00:00:35.660
We're gonna play around with life cycle rules as

13
00:00:35.660 --> 00:00:38.020
well as cross region replication.

14
00:00:38.020 --> 00:00:40.660
And then we're gonna finish up with storage metrics

15
00:00:40.660 --> 00:00:43.160
and intelligent storage tearing.

16
00:00:43.160 --> 00:00:49.100
So let's actually go ahead and dive into looking at storage classes in AWS.

17
00:00:49.100 --> 00:00:53.060
Now you can see I have a bucket already created for all of these demos,

18
00:00:53.060 --> 00:00:56.310
but I'm actually going to go ahead and create another bucket,

19
00:00:56.310 --> 00:00:59.370
and I'm gonna call this the same bucket Dash one,

20
00:00:59.370 --> 00:01:03.180
and we're gonna walk through creating a bucket step by step really

21
00:01:03.180 --> 00:01:05.730
quick so you can see you specify the region.

22
00:01:05.730 --> 00:01:08.820
Now, bucket names have to be globally unique,

23
00:01:08.820 --> 00:01:11.870
even though they belong in specific regions.

24
00:01:11.870 --> 00:01:15.420
And this is because this is where your data is actually being stored.

25
00:01:15.420 --> 00:01:17.640
But the names themselves are global.

26
00:01:17.640 --> 00:01:20.980
If we wanted to weaken copy existing settings from another bucket,

27
00:01:20.980 --> 00:01:22.350
we're not gonna do that.

28
00:01:22.350 --> 00:01:24.050
I'm gonna click on next,

29
00:01:24.050 --> 00:01:27.260
and we can see that we can enable version ing server access,

30
00:01:27.260 --> 00:01:27.800
logging.

31
00:01:27.800 --> 00:01:29.620
So if you want a log requests,

32
00:01:29.620 --> 00:01:33.100
we can add tags here we can do object level logging,

33
00:01:33.100 --> 00:01:34.290
which is cloud trail.

34
00:01:34.290 --> 00:01:36.330
If you remember in those clips that we talked about

35
00:01:36.330 --> 00:01:39.390
enabling cloud trail ap I activity,

36
00:01:39.390 --> 00:01:43.170
we could enable default encryption and then underneath advanced settings.

37
00:01:43.170 --> 00:01:45.830
Here we have that we can actually do an object block,

38
00:01:45.830 --> 00:01:48.830
so allows objects to be locked in the bucket.

39
00:01:48.830 --> 00:01:50.520
The next thing we see is management,

40
00:01:50.520 --> 00:01:55.150
so we can actually send cloudwatch request metrics for an additional cost.

41
00:01:55.150 --> 00:01:58.460
And we're actually going to talk about most of these in the upcoming clips.

42
00:01:58.460 --> 00:02:01.080
So I'm gonna skip all these for now and click on next.

43
00:02:01.080 --> 00:02:04.230
And then this brings us to our public access settings page.

44
00:02:04.230 --> 00:02:09.070
So this is where we can block all public access settings from being enabled.

45
00:02:09.070 --> 00:02:09.210
Now,

46
00:02:09.210 --> 00:02:12.460
this is a recommended practice because you normally do not want

47
00:02:12.460 --> 00:02:15.570
to have a public bucket unless you're very sure that you want to

48
00:02:15.570 --> 00:02:19.580
provide access toe pretty much anybody unless you have a very

49
00:02:19.580 --> 00:02:21.210
specific reason to do so.

50
00:02:21.210 --> 00:02:24.720
So I'm gonna leave all of these checks so it doesn't make anything public.

51
00:02:24.720 --> 00:02:28.180
And I'm not going to grant that log delivery group right access.

52
00:02:28.180 --> 00:02:30.890
And that's because I'm not pushing logs to this bucket.

53
00:02:30.890 --> 00:02:32.360
So I'm gonna click on next,

54
00:02:32.360 --> 00:02:35.370
and we get our reviews screen here so we can review

55
00:02:35.370 --> 00:02:37.120
all of the settings that we set.

56
00:02:37.120 --> 00:02:39.300
So let me go and create bucket And there we go.

57
00:02:39.300 --> 00:02:40.720
We now have our new bucket.

58
00:02:40.720 --> 00:02:42.210
Now that we've created our bucket,

59
00:02:42.210 --> 00:02:45.080
let's actually take a look at the different storage classes.

60
00:02:45.080 --> 00:02:46.480
Salami, open this up.

61
00:02:46.480 --> 00:02:49.680
I'm gonna click on upload here, and I'm gonna go in added files.

62
00:02:49.680 --> 00:02:53.330
Let me add that service catalog product Yamil file that we did earlier.

63
00:02:53.330 --> 00:02:54.410
I'll click on next.

64
00:02:54.410 --> 00:02:59.050
I'm gonna leave the defaults for the file permissions and click on next again,

65
00:02:59.050 --> 00:03:02.710
and you can see we have our storage classes to find for us.

66
00:03:02.710 --> 00:03:06.200
So let me scroll this for better viewing and you can see there's actually

67
00:03:06.200 --> 00:03:10.650
several to choose from here that are offered to us by a W s.

68
00:03:10.650 --> 00:03:13.550
Now standard is usually the one that's used the most.

69
00:03:13.550 --> 00:03:17.800
It's frequently accessed data, but some people will use intelligent tearing,

70
00:03:17.800 --> 00:03:20.520
so it's gonna automatically here, and we'll discuss that later on.

71
00:03:20.520 --> 00:03:23.730
In the clips, you can do standard infrequent access.

72
00:03:23.730 --> 00:03:26.110
So if it's not access very frequently,

73
00:03:26.110 --> 00:03:30.750
you can get a break on costs by choosing this particular class.

74
00:03:30.750 --> 00:03:33.040
And then they build off of that and actually have something

75
00:03:33.040 --> 00:03:35.780
called one's own infrequently access.

76
00:03:35.780 --> 00:03:39.360
And this is for your long lived in frequently access,

77
00:03:39.360 --> 00:03:44.420
non critical data, and that is a very important piece to keep in mind.

78
00:03:44.420 --> 00:03:48.160
It lives in one's own, so you're really taking a chance.

79
00:03:48.160 --> 00:03:51.840
And depending on that one's own staying up at all times.

80
00:03:51.840 --> 00:03:54.350
All of these other ones have more than one zone,

81
00:03:54.350 --> 00:03:56.600
so that means they're going to be automatically

82
00:03:56.600 --> 00:03:58.640
redundant in highly available now.

83
00:03:58.640 --> 00:04:01.560
The next thing we see is glacier in Glacier allows us toe

84
00:04:01.560 --> 00:04:04.660
archive data at a extremely cheap cost.

85
00:04:04.660 --> 00:04:06.620
It's cold storage now.

86
00:04:06.620 --> 00:04:10.790
One thing to keep in mind here is that when you archive data with Glacier,

87
00:04:10.790 --> 00:04:15.980
your retrieval times can range from minutes all the way up to ours.

88
00:04:15.980 --> 00:04:20.340
So essentially you have to request that the archive data is retrieved as

89
00:04:20.340 --> 00:04:24.020
opposed to being able to just access it with standard storage.

90
00:04:24.020 --> 00:04:26.120
And then we see Glacier Deep archives.

91
00:04:26.120 --> 00:04:29.650
So that's data that is rarely, if ever needed.

92
00:04:29.650 --> 00:04:31.700
So this is for stuff that you just need to keep,

93
00:04:31.700 --> 00:04:35.170
maybe for auditing purposes for the last 10 years of data,

94
00:04:35.170 --> 00:04:37.540
and you really, never, ever gonna look at it.

95
00:04:37.540 --> 00:04:40.730
But you need to have it on hand as a just in case.

96
00:04:40.730 --> 00:04:43.160
This is gonna be one of the cheapest ways that you can

97
00:04:43.160 --> 00:04:45.610
assure your data is going to be safe,

98
00:04:45.610 --> 00:04:50.240
secured and available at all times with a little bit of a lead time.

99
00:04:50.240 --> 00:04:52.270
And then you can see they actually have a non

100
00:04:52.270 --> 00:04:54.640
recommended one called reduced redundancy.

101
00:04:54.640 --> 00:04:58.560
So this is going to be frequently accessed but non critical data.

102
00:04:58.560 --> 00:05:01.450
So basically what this class does, is it saying,

103
00:05:01.450 --> 00:05:04.640
Hey, if we lose one of these objects in this storage class,

104
00:05:04.640 --> 00:05:05.210
that's OK.

105
00:05:05.210 --> 00:05:08.480
It's not critical to our functioning of our service or our company,

106
00:05:08.480 --> 00:05:13.500
and they actually just up the price on this to make this reduced redundancy

107
00:05:13.500 --> 00:05:16.870
storage class more expensive than all of the other ones.

108
00:05:16.870 --> 00:05:20.880
So that's their way of kind of forcing people off from using that in the future.

109
00:05:20.880 --> 00:05:24.040
So for this one, let's just do one's own infrequently accessed.

110
00:05:24.040 --> 00:05:27.540
I'm gonna click on next here, and then I'm gonna click on upload.

111
00:05:27.540 --> 00:05:28.110
And there we go.

112
00:05:28.110 --> 00:05:31.470
We now have our new object in our bucket with our

113
00:05:31.470 --> 00:05:33.520
storage class over here on the right.

114
00:05:33.520 --> 00:05:36.110
Now that's gonna go ahead and wrap this clip up.

115
00:05:36.110 --> 00:05:42.000
I'll see you in the next one where we're going to start diving into version ing within our buckets.

