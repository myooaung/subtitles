WEBVTT
1
00:00:01.000 --> 00:00:04.450
[Autogenerated] Okay, so let's start talking about creating cloudwatch alarms.

2
00:00:04.450 --> 00:00:05.840
Now, before we dive into this,

3
00:00:05.840 --> 00:00:08.840
there are three pieces of information that I want you to know.

4
00:00:08.840 --> 00:00:10.780
The first is period now,

5
00:00:10.780 --> 00:00:14.850
period is the length of time that it takes to evaluate our metrics.

6
00:00:14.850 --> 00:00:18.440
And this ties into the next one, which is evaluation, period.

7
00:00:18.440 --> 00:00:21.470
So this is the number of your most recent periods,

8
00:00:21.470 --> 00:00:23.390
which you remember the length of time that we're

9
00:00:23.390 --> 00:00:26.140
evaluating that you want cloudwatch to measure.

10
00:00:26.140 --> 00:00:28.980
So it's monitoring the most recent configured amount of

11
00:00:28.980 --> 00:00:31.860
periods in that equals your evaluation period.

12
00:00:31.860 --> 00:00:34.670
So if you want an alarm to be a little bit less sensitive,

13
00:00:34.670 --> 00:00:38.080
you might set this for a higher number of evaluation periods and

14
00:00:38.080 --> 00:00:40.210
then change your thresholds around a little bit.

15
00:00:40.210 --> 00:00:43.110
The last time we have here is our data points to alarm.

16
00:00:43.110 --> 00:00:43.350
Now,

17
00:00:43.350 --> 00:00:47.110
this is the number of data points within an evaluation period

18
00:00:47.110 --> 00:00:49.690
that must be breached to trigger your alarm.

19
00:00:49.690 --> 00:00:51.890
Now you can see how all of these tie together.

20
00:00:51.890 --> 00:00:53.720
So let's go ahead and go to the consul here,

21
00:00:53.720 --> 00:00:56.430
and we're actually gonna load up this alarms section

22
00:00:56.430 --> 00:00:58.510
underneath the cloudwatch page.

23
00:00:58.510 --> 00:01:01.150
You can see we have three alarms already defined.

24
00:01:01.150 --> 00:01:03.930
But for this clip, let's go and create a new one.

25
00:01:03.930 --> 00:01:06.110
So I'm gonna click up here on create alarm,

26
00:01:06.110 --> 00:01:08.500
and this brings us to the create new alarm screen.

27
00:01:08.500 --> 00:01:08.850
Now,

28
00:01:08.850 --> 00:01:11.850
this is where we are first going to select a metric

29
00:01:11.850 --> 00:01:13.680
that we want to set an alarm force.

30
00:01:13.680 --> 00:01:17.580
I click select Metric, and this brings us to a familiar screen.

31
00:01:17.580 --> 00:01:19.980
We actually just saw this screen in the last clip.

32
00:01:19.980 --> 00:01:22.190
This is where we're actually setting up a graft

33
00:01:22.190 --> 00:01:24.390
metric for cloudwatch to measure.

34
00:01:24.390 --> 00:01:26.270
So let's go and set one of these up.

35
00:01:26.270 --> 00:01:29.700
I'm gonna scroll down here and let's do lambda us.

36
00:01:29.700 --> 00:01:31.060
I'm gonna click on Lambda.

37
00:01:31.060 --> 00:01:33.770
I'll do by function name because we only have one.

38
00:01:33.770 --> 00:01:35.620
I'll do indications here,

39
00:01:35.620 --> 00:01:38.450
and what I'm gonna do is I'm gonna go up the graft metrics.

40
00:01:38.450 --> 00:01:42.050
Let's configure this to be a some with a period of will.

41
00:01:42.050 --> 00:01:44.850
Set it for one minute and I'll select this metric.

42
00:01:44.850 --> 00:01:47.430
So now you can see here are name spaces.

43
00:01:47.430 --> 00:01:53.260
AWS lambda were measuring the number of indications were using this function.

44
00:01:53.260 --> 00:01:54.540
Get SSN parameter.

45
00:01:54.540 --> 00:01:58.710
Here we have a period of one minute and then our statistic is there some?

46
00:01:58.710 --> 00:02:02.350
So the number total number of indications on this function.

47
00:02:02.350 --> 00:02:03.500
So I scrolled down here.

48
00:02:03.500 --> 00:02:05.470
We're going to see our alarm details now.

49
00:02:05.470 --> 00:02:06.860
Now, this is where we give it a name.

50
00:02:06.860 --> 00:02:10.800
So let's just give this a name of too many invocations

51
00:02:10.800 --> 00:02:12.300
and the description will do the same.

52
00:02:12.300 --> 00:02:15.290
So let me just copy this and paste this and description and you

53
00:02:15.290 --> 00:02:17.840
can see we not specify the whenever peace.

54
00:02:17.840 --> 00:02:22.040
So whenever indications for this resource is and this is

55
00:02:22.040 --> 00:02:24.300
where we select four different options,

56
00:02:24.300 --> 00:02:27.900
that could be greater than or equal to less than equal to greater

57
00:02:27.900 --> 00:02:30.860
than or less than and then we set our number here.

58
00:02:30.860 --> 00:02:34.410
So for this one, let's just go ahead and greater than or equal to two,

59
00:02:34.410 --> 00:02:35.790
and we'll make this pretty sensitive.

60
00:02:35.790 --> 00:02:38.720
We'll send it for one out of every one data point.

61
00:02:38.720 --> 00:02:40.440
And if you click this little info button here,

62
00:02:40.440 --> 00:02:43.760
you can see for a one minute period, which is what we have.

63
00:02:43.760 --> 00:02:45.940
There's only one data point every minute,

64
00:02:45.940 --> 00:02:48.360
and you can see they talk about how I was mentioning If you

65
00:02:48.360 --> 00:02:51.050
wanna have it to be a little bit more sensitive,

66
00:02:51.050 --> 00:02:53.980
you're gonna have this trigger on less data points out

67
00:02:53.980 --> 00:02:55.310
of your total that you're measuring.

68
00:02:55.310 --> 00:02:58.410
So if you want a trigger on one out of five data points,

69
00:02:58.410 --> 00:03:00.150
it's gonna be a sensitive alarm.

70
00:03:00.150 --> 00:03:01.780
So we'll leave this now.

71
00:03:01.780 --> 00:03:05.400
So any time we have indications greater or equal to two

72
00:03:05.400 --> 00:03:10.650
for this get SSN parameter function, we're gonna go ahead and cause an alarm.

73
00:03:10.650 --> 00:03:10.980
Now,

74
00:03:10.980 --> 00:03:14.180
the next thing we see is additional settings so we can treat

75
00:03:14.180 --> 00:03:16.910
are missing data as several options missing.

76
00:03:16.910 --> 00:03:18.240
We can ignore it.

77
00:03:18.240 --> 00:03:19.850
We can treat it as bad.

78
00:03:19.850 --> 00:03:23.470
So this breaches are threshold and causes an alarm, or we can just set it too.

79
00:03:23.470 --> 00:03:24.000
Good.

80
00:03:24.000 --> 00:03:25.260
Now the default is missing,

81
00:03:25.260 --> 00:03:28.290
and this will just say insufficient data and then nothing will happen.

82
00:03:28.290 --> 00:03:30.570
So we'll leave this right now and we'll move on down

83
00:03:30.570 --> 00:03:32.620
to the bottom where we see actions.

84
00:03:32.620 --> 00:03:35.630
So what actions do we want to take and you can actually see here?

85
00:03:35.630 --> 00:03:39.010
There are three different options begin to a notification,

86
00:03:39.010 --> 00:03:40.500
which is what we see here.

87
00:03:40.500 --> 00:03:42.160
We can do an auto scaling action.

88
00:03:42.160 --> 00:03:44.230
So if we had an auto scaling group,

89
00:03:44.230 --> 00:03:48.230
we could select it from there and then take a certain action like expand or

90
00:03:48.230 --> 00:03:51.870
maybe shrink back in this auto scaling group and then the last one we have

91
00:03:51.870 --> 00:03:56.560
here is our ec2 action so we can spin up other resource is or do something

92
00:03:56.560 --> 00:03:58.940
else related to easy to metrics.

93
00:03:58.940 --> 00:04:02.480
But since we're doing a Lambda metric, this is not coming into play.

94
00:04:02.480 --> 00:04:06.260
So we're gonna go and use this default notification action here.

95
00:04:06.260 --> 00:04:10.080
And whenever this alarm is moved to a state of alarm,

96
00:04:10.080 --> 00:04:12.340
which we can change too okay or insufficient.

97
00:04:12.340 --> 00:04:13.960
But we'll leave it at alarm.

98
00:04:13.960 --> 00:04:19.540
We want cloudwatch to send a notification to my SNS topic.

99
00:04:19.540 --> 00:04:23.240
So this is going to send me a text via a message that's

100
00:04:23.240 --> 00:04:26.590
sent to us from cloudwatch toe s and s and then to my

101
00:04:26.590 --> 00:04:28.450
phone whenever this is an alarm.

102
00:04:28.450 --> 00:04:31.640
So I'm gonna go ahead and down here and I'm gonna click on create alarm.

103
00:04:31.640 --> 00:04:35.160
So we've now made are too many indications alarm here,

104
00:04:35.160 --> 00:04:37.040
so we can see it's insufficient data,

105
00:04:37.040 --> 00:04:41.020
and what I'm actually gonna do is I'm gonna go ahead in pause this video for

106
00:04:41.020 --> 00:04:43.570
a little bit and let this catch up and then I'll resume.

107
00:04:43.570 --> 00:04:46.810
And once I resume will actually start trying to trigger this alarm.

108
00:04:46.810 --> 00:04:47.060
Okay,

109
00:04:47.060 --> 00:04:49.150
so I gave it a few minutes just to make sure we weren't

110
00:04:49.150 --> 00:04:51.440
gonna experience any funky behavior.

111
00:04:51.440 --> 00:04:52.090
And you can see it.

112
00:04:52.090 --> 00:04:53.380
Set it insufficient data.

113
00:04:53.380 --> 00:04:53.920
Still.

114
00:04:53.920 --> 00:04:57.330
So what I'm gonna do here is I'm gonna go over to my lame to console.

115
00:04:57.330 --> 00:04:58.460
I loaded this function,

116
00:04:58.460 --> 00:05:02.900
and I'm just gonna go and start testing and indicating this lame to function.

117
00:05:02.900 --> 00:05:04.740
So I'm gonna click this several times here,

118
00:05:04.740 --> 00:05:07.940
and I'm gonna pause this video all I do this and then I'll go back.

119
00:05:07.940 --> 00:05:09.650
Okay, so I've tested it several times.

120
00:05:09.650 --> 00:05:13.590
Let me go and close this, and I'm gonna refresh this alarms page,

121
00:05:13.590 --> 00:05:16.900
and what I'm gonna go and do is I'm gonna pause this one last time here,

122
00:05:16.900 --> 00:05:19.420
and I'm gonna let this catch up and then we'll see

123
00:05:19.420 --> 00:05:21.070
that it moves to an alarm state.

124
00:05:21.070 --> 00:05:21.330
All right?

125
00:05:21.330 --> 00:05:22.940
You can actually see that.

126
00:05:22.940 --> 00:05:25.330
It's now picked it up on the graph that we have

127
00:05:25.330 --> 00:05:27.390
invoked this function eight times.

128
00:05:27.390 --> 00:05:30.620
So in a second, we should see this switch to alarm,

129
00:05:30.620 --> 00:05:32.880
because this has now breached this threshold.

130
00:05:32.880 --> 00:05:34.120
That was set at two.

131
00:05:34.120 --> 00:05:34.960
And there we go.

132
00:05:34.960 --> 00:05:37.160
It's now moved toe in alarm state.

133
00:05:37.160 --> 00:05:41.530
What this did was actually text me with the topic name and then the alarm name.

134
00:05:41.530 --> 00:05:44.410
So I see on my phone this little picture right here,

135
00:05:44.410 --> 00:05:48.530
which mentions the alarm name in the region that it's being triggered from.

136
00:05:48.530 --> 00:05:50.790
So now if we give this another minute or two,

137
00:05:50.790 --> 00:05:53.770
this had actually moved back out of the alarm status

138
00:05:53.770 --> 00:05:55.660
because the period that were measuring,

139
00:05:55.660 --> 00:05:58.590
which is one minute is going to have zero indications.

140
00:05:58.590 --> 00:06:01.880
Because I only invoke this during that one period of this

141
00:06:01.880 --> 00:06:03.690
clip where I was trying to test this alarm.

142
00:06:03.690 --> 00:06:06.150
States all pause this for now and then will resume

143
00:06:06.150 --> 00:06:07.800
when it's out of this alarm state.

144
00:06:07.800 --> 00:06:08.150
Okay,

145
00:06:08.150 --> 00:06:12.660
We can see now that it's moved out of alarm state back to insufficient data.

146
00:06:12.660 --> 00:06:17.280
So this alarm has moved into the insufficient data stage because the data

147
00:06:17.280 --> 00:06:19.840
is missing and you can see that here at the bottom.

148
00:06:19.840 --> 00:06:20.040
Now,

149
00:06:20.040 --> 00:06:22.480
the last thing I want to show you in this clip before we really

150
00:06:22.480 --> 00:06:24.790
move on here is over here on the left side.

151
00:06:24.790 --> 00:06:27.520
You can see we have where we can shortcut to our alarms

152
00:06:27.520 --> 00:06:29.490
that are currently in alarm state.

153
00:06:29.490 --> 00:06:33.380
We can see are insufficient ones, and we can even see ROK ones.

154
00:06:33.380 --> 00:06:35.170
So what I'll do here is I'll go into this.

155
00:06:35.170 --> 00:06:39.950
Let me modify this alarm, and I want to treat missing data here as good.

156
00:06:39.950 --> 00:06:41.820
So we'll go and save changes here.

157
00:06:41.820 --> 00:06:44.720
Now, the last thing on this page is building.

158
00:06:44.720 --> 00:06:47.870
So this allows us to create a shortcut here or take a shortcut toe,

159
00:06:47.870 --> 00:06:52.400
look at billing related alarms or create billing related alarms.

160
00:06:52.400 --> 00:06:55.530
And you can see that I created to hear when that measures for

161
00:06:55.530 --> 00:06:59.610
anything over $10 within one data point for every six hours or

162
00:06:59.610 --> 00:07:01.490
anything where it goes over free.

163
00:07:01.490 --> 00:07:04.020
And this is a very typical set up for people that are

164
00:07:04.020 --> 00:07:07.150
just trying to dive into a ws and be OK.

165
00:07:07.150 --> 00:07:10.690
Now we can see here that one of these switch to Okay,

166
00:07:10.690 --> 00:07:16.000
so if I refresh this, we can see our too many indications has switched to Okay,

167
00:07:16.000 --> 00:07:20.210
so this allows us to very quickly navigate what alarms are being triggered.

168
00:07:20.210 --> 00:07:21.940
Now that's gonna do it for this clip.

169
00:07:21.940 --> 00:07:27.000
I'll see you in the next one. We're going to start talking about cloudwatch logging

