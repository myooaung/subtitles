1
00:00:01,240 --> 00:00:03,130
Hi, my name is Nertil,

2
00:00:03,130 --> 00:00:05,630
and in this module I'm going to teach you how to

3
00:00:05,630 --> 00:00:10,140
extend the capabilities of AppSync, customize and create faster APIs,

4
00:00:10,140 --> 00:00:11,910
and a better user experience.

5
00:00:11,910 --> 00:00:13,490
Throughout this module,

6
00:00:13,490 --> 00:00:18,670
we'll start by learning how to make use of AppSync subscriptions so we can get

7
00:00:18,670 --> 00:00:23,590
notified in real time about data changes on our back end and show the changes

8
00:00:23,590 --> 00:00:26,240
on our task manager application in real time.

9
00:00:26,240 --> 00:00:30,540
Next, we are going to implement server side caching on our AppSync back end.

10
00:00:30,540 --> 00:00:35,140
This way we are going to cache user requests so we can return,

11
00:00:35,140 --> 00:00:40,440
cache the results, and reduce API call latency to improve our user experience.

12
00:00:40,440 --> 00:00:42,420
After implementing server‑side caching,

13
00:00:42,420 --> 00:00:45,870
we are going to look at implementing client‑side caching, which is

14
00:00:45,870 --> 00:00:49,550
powered by our AppSync client and the amplify.store.

15
00:00:49,550 --> 00:00:52,740
This way, while the data from the server is still loading,

16
00:00:52,740 --> 00:00:56,120
we are going to show the user cached results, which will make

17
00:00:56,120 --> 00:00:59,440
our task manager application more responsive.

18
00:00:59,440 --> 00:01:02,780
You will learn how to implement offline capabilities to your

19
00:01:02,780 --> 00:01:07,800
applications by allowing users to continue working while offline and

20
00:01:07,800 --> 00:01:12,870
then sync the data back when an internet connection becomes available so

21
00:01:12,870 --> 00:01:16,240
our users can continue working uninterrupted.

22
00:01:16,240 --> 00:01:20,110
And finally you'll learn how to use Pipeline Resolvers to

23
00:01:20,110 --> 00:01:22,740
customize application data at multiple levels,

24
00:01:22,740 --> 00:01:30,000
using Lambda functions to support different application scenarios. Let's get started.

