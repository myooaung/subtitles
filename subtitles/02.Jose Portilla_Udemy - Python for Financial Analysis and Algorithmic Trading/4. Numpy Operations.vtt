WEBVTT
1
00:00:05.490 --> 00:00:06.510
Welcome back everyone.

2
00:00:06.570 --> 00:00:11.430
And this lecture will finish off our discussion about pi by talking about non-pay operations.

3
00:00:11.430 --> 00:00:14.320
Let's open up a Jupiter notebook and get started.

4
00:00:14.400 --> 00:00:18.480
The first thing I'll do in the Jupiter notebook is just important up-I as an.

5
00:00:18.960 --> 00:00:27.500
And then we'll create an array called a r r and this will be empire that arr. say 0 comet 10.

6
00:00:27.510 --> 00:00:28.780
So we get 0 3 9.

7
00:00:28.780 --> 00:00:30.890
There let's talk about arithmetic.

8
00:00:30.900 --> 00:00:36.420
So you can actually easily perform array of 4:8 arithmetic or scalar with arithmetic where a scalar

9
00:00:36.420 --> 00:00:38.480
number is just the single value number.

10
00:00:38.490 --> 00:00:40.050
Let's actually see some examples of this.

11
00:00:40.060 --> 00:00:47.370
If I take my array and I add it to an array what it ends up doing is does the addition element by element

12
00:00:47.460 --> 00:00:49.630
basis based after index position.

13
00:00:49.830 --> 00:00:55.560
So it takes index at 0 as its index at zero takes an X that one adds to and so on X cetera.

14
00:00:55.560 --> 00:00:59.930
So you can see this basically just doubled every number because essentially times 2.

15
00:00:59.940 --> 00:01:06.480
So you could also do something like array multiplied by an array and that is an element by element.

16
00:01:06.480 --> 00:01:08.690
So you can see every number is basically now squared.

17
00:01:08.730 --> 00:01:13.960
So two times two is four three times three is nine extra you can do this with subtraction as well.

18
00:01:14.810 --> 00:01:18.230
So this should just produce all zeros and you can even do this division.

19
00:01:18.260 --> 00:01:25.540
Now a quick no on division if you have a zero in your array and you'll get a warning that says runtime

20
00:01:25.540 --> 00:01:29.140
warning invalid value encountered in true divide.

21
00:01:29.180 --> 00:01:33.560
What that actually means is it doesn't really make sense to do zero divided by zero.

22
00:01:33.590 --> 00:01:36.490
Doesn't make sense to divide by zero or have zero divided by something.

23
00:01:36.650 --> 00:01:41.110
So instead of actually producing a full error you get this warning here so keep that in mind.

24
00:01:41.130 --> 00:01:44.940
No pi won't just basically have an error and stop the program.

25
00:01:44.970 --> 00:01:49.420
We'll just release a warning for you and instead what it does it replaces it with this.

26
00:01:49.670 --> 00:01:53.150
And eyin value or non-applicable value.

27
00:01:53.350 --> 00:01:59.290
Now this law also do something like If you do one divided by the array you'll get a warning as well.

28
00:01:59.290 --> 00:02:02.690
But it's that or place place by infinity because one divided by zero.

29
00:02:02.830 --> 00:02:07.000
The close thinks that is technically infinity so there's kind of this infinity hold there there but

30
00:02:07.000 --> 00:02:08.440
again it's going to warn you.

31
00:02:08.500 --> 00:02:12.580
And usually you don't really want to feel like this especially when we're dealing with real values such

32
00:02:12.580 --> 00:02:15.580
as stock data or securities data.

33
00:02:15.580 --> 00:02:16.440
So keep that in mind.

34
00:02:16.450 --> 00:02:17.730
It won't produce a true error.

35
00:02:17.790 --> 00:02:20.320
We'll just get some sort of warning here.

36
00:02:20.320 --> 00:02:23.740
And lastly we can actually do exponentials as well.

37
00:02:23.740 --> 00:02:28.150
You can do anything with scalars so if you want to do everything to the power of three in your array

38
00:02:28.270 --> 00:02:29.620
you get something like this.

39
00:02:29.710 --> 00:02:33.130
And if you want to add the number 100 it's everything in.

40
00:02:33.190 --> 00:02:34.690
You can just do something like that.

41
00:02:34.690 --> 00:02:39.490
So what this means is this will broadcast this to every single element in the array and that's going

42
00:02:39.490 --> 00:02:40.830
to be really useful later on.

43
00:02:41.840 --> 00:02:46.040
Now there are certain mathematical functions that aren't going to be as simple as just an addition or

44
00:02:46.040 --> 00:02:46.950
subtraction.

45
00:02:47.120 --> 00:02:51.230
So numb pie actually comes with many universal array functions and there's a linking of Jupiter note

46
00:02:51.240 --> 00:02:53.000
book for the documentation for that.

47
00:02:53.000 --> 00:02:57.380
And essentially what they are is just mathematical operations that you can use to perform the operation

48
00:02:57.380 --> 00:02:59.060
across every element in the array.

49
00:02:59.090 --> 00:03:03.710
So some really common ones can be something like taking the square root so you can say that and if you

50
00:03:03.710 --> 00:03:06.340
see tab you'll see a bunch of different methods.

51
00:03:06.360 --> 00:03:09.750
Now all of these are universal array functions but a lot of them are.

52
00:03:09.800 --> 00:03:16.250
So you can do something like that as security and take the square root of everything in that array.

53
00:03:16.280 --> 00:03:22.070
You can even do things like calculating the exponential so that can be XP that is E to the power of

54
00:03:22.790 --> 00:03:23.830
everything in the array.

55
00:03:23.840 --> 00:03:25.150
You get something like that.

56
00:03:25.190 --> 00:03:28.550
You can also do things like figure out what's the maximum value in an array.

57
00:03:28.820 --> 00:03:31.070
So there's that Max.

58
00:03:31.400 --> 00:03:34.960
And as we saw earlier we could also just call this as a method off the array.

59
00:03:35.150 --> 00:03:39.320
And what's interesting to note is that when you call this method under the hood what it's actually doing

60
00:03:39.320 --> 00:03:41.410
is just calling this universal array function.

61
00:03:41.570 --> 00:03:43.590
It's just a different way of calling it.

62
00:03:43.760 --> 00:03:45.970
And you can do the same thing with other things.

63
00:03:46.010 --> 00:03:49.350
Anything you need basic mathematical function you can think of is available.

64
00:03:49.370 --> 00:03:53.850
So for some reason I want to take the side use Sudol of every thing in the array or the sign of it.

65
00:03:53.880 --> 00:03:58.260
It is available for you if you want to take the log of everything in the array that's available to you

66
00:03:58.250 --> 00:03:58.910
as well.

67
00:03:58.910 --> 00:04:02.870
Just keep in mind if you have a zero and that doesn't really make sense to take a log of 0 you'll get

68
00:04:02.960 --> 00:04:05.230
a warning and I'll say something like negative infinity.

69
00:04:05.480 --> 00:04:05.720
All right.

70
00:04:05.720 --> 00:04:09.050
So there's a lot of these that are available to you as you continue on throughout the course.

71
00:04:09.050 --> 00:04:12.980
The most common ones that we end up using are the things that will show up more often.

72
00:04:13.230 --> 00:04:13.670
OK.

73
00:04:13.880 --> 00:04:14.690
Thanks everyone.

74
00:04:14.690 --> 00:04:15.630
I'll see you at the next lecture.

75
00:04:15.640 --> 00:04:18.670
We we'll go over the exercises for the pie section of the course.
