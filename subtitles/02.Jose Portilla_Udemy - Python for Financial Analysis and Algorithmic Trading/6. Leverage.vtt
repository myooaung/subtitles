WEBVTT
1
00:00:05.490 --> 00:00:11.770
Welcome back everyone to this lecture on leverage leverage is the ability to borrow money for use in

2
00:00:11.770 --> 00:00:12.940
investing.

3
00:00:12.940 --> 00:00:17.140
A simple example you're probably already familiar with as far as leverage is concerned would be something

4
00:00:17.140 --> 00:00:21.260
like taking on a mortgage when purchasing real estate.

5
00:00:21.350 --> 00:00:26.870
Now for algorithmic trading in our particular case we can define leverage as reinvesting debt to gain

6
00:00:26.870 --> 00:00:29.520
a greater return on our investments.

7
00:00:29.540 --> 00:00:33.560
Keep in mind you would only do this if you were very confident in your strategy and believed it to be

8
00:00:33.560 --> 00:00:35.530
low risk.

9
00:00:35.700 --> 00:00:39.870
The real world leverage is going to be provided by your broker and it's going to be highly dependent

10
00:00:39.870 --> 00:00:44.850
on your particular strategy how risky it is how much money you have with the broker so what your account

11
00:00:44.850 --> 00:00:48.710
size is previous payments fees whether or not you pay your debts on time.

12
00:00:48.710 --> 00:00:49.550
That kind of thing.

13
00:00:50.890 --> 00:00:54.120
Now typically we can actually measure leverage in terms of a ratio.

14
00:00:54.280 --> 00:01:00.340
And we defined this as the leverage ratio where it's just equal to the debt you have plus your capital

15
00:01:00.340 --> 00:01:02.890
base divided by your total capital base.

16
00:01:02.890 --> 00:01:07.730
That's the sum of your capital base divided by your capital base.

17
00:01:07.730 --> 00:01:12.590
Now let's go ahead and explore leverage in Quanto in will work with both the research note book and

18
00:01:12.590 --> 00:01:13.460
the ID.

19
00:01:13.580 --> 00:01:18.310
So open up two tabs in your browser and make sure to reference the notebook for the code used here.

20
00:01:18.350 --> 00:01:24.810
I'm going to hop over to my browser Now OK so here am my browser I have an idea algorithm ready to go.

21
00:01:24.840 --> 00:01:28.260
Right now it's blank as well as a new notebook ready to go.

22
00:01:28.280 --> 00:01:32.620
So we're going to do is in this algorithm if you go to the notebook provided.

23
00:01:32.630 --> 00:01:34.800
I've already created a simple algorithm for you.

24
00:01:34.830 --> 00:01:39.890
So you're going to go ahead and copy that and paste it here and let me go ahead and just zoom out a

25
00:01:39.890 --> 00:01:44.750
little bit so we can see the algorithm without any kind of weird formatting and this algorithm is really

26
00:01:44.750 --> 00:01:48.800
simple and it's an algorithm we've actually seen before much earlier in the course where we essentially

27
00:01:48.800 --> 00:01:51.640
go long on Amazon and short IBM.

28
00:01:51.680 --> 00:01:54.790
So all we're doing is half of our portfolio goes along and Amazon.

29
00:01:54.830 --> 00:01:55.410
The other half.

30
00:01:55.410 --> 00:01:59.450
Schwartz IBM and you notice that we have two functions here.

31
00:01:59.450 --> 00:02:01.940
The rebalance function which is what I just described.

32
00:02:01.940 --> 00:02:03.740
And we also have the record function.

33
00:02:03.740 --> 00:02:09.110
Remember we can record variables and we're going to be recording is not just the Amazon close price

34
00:02:09.140 --> 00:02:11.040
as well as the IBM close price.

35
00:02:11.050 --> 00:02:16.640
You'll also be recording leverage and exposure and those are two ways you can actually grab how much

36
00:02:16.640 --> 00:02:21.770
leverage and how much exposure you have off your particular portfolio and the way you do that is off.

37
00:02:21.770 --> 00:02:26.010
Any context object you say contex account leverage.

38
00:02:26.230 --> 00:02:30.010
And that's going to return back the actual leverage to that gross exposure.

39
00:02:30.140 --> 00:02:36.230
It by net liquidation and the exposure itself which is net underscore leverage and that's net exposure

40
00:02:36.290 --> 00:02:38.120
divided by net liquidation.

41
00:02:38.180 --> 00:02:40.990
So we're going to go ahead and run this algorithm.

42
00:02:41.060 --> 00:02:44.140
So let's go ahead and back backtesting for let's say a year.

43
00:02:44.180 --> 00:02:47.190
So we'll say 2016.

44
00:02:47.240 --> 00:02:50.130
And right now for my case it's August 4th.

45
00:02:50.140 --> 00:02:54.890
So it doesn't really totally matter what time you back to us we just need to go ahead and build that

46
00:02:54.920 --> 00:02:55.830
algorithm.

47
00:02:55.880 --> 00:02:56.930
It should be pretty quick.

48
00:02:56.930 --> 00:03:02.740
So I'm going to quickly help forward in time for this to finish backtesting okay.

49
00:03:02.740 --> 00:03:05.370
Once that is done back testing you should see the results.

50
00:03:05.380 --> 00:03:10.540
In my case I performed a little better than the actual benchmark and that's mainly due to Amazon's huge

51
00:03:10.540 --> 00:03:11.190
growth.

52
00:03:11.380 --> 00:03:16.630
But you'll notice up here in the euro you have algorithms and then some sort of hash.

53
00:03:16.690 --> 00:03:22.900
So we're going to do is if we click over here on run a full back test you'll notice something happens.

54
00:03:22.900 --> 00:03:26.200
You end up getting two hash codes here.

55
00:03:26.200 --> 00:03:32.350
The first one is the algorithms code and the second one is your back test code and that's why it's marked

56
00:03:32.350 --> 00:03:34.110
with hash tag back to us.

57
00:03:34.120 --> 00:03:37.600
So this is the code this back test code right here.

58
00:03:37.600 --> 00:03:42.370
After that forward slash is the one we're going to need in order to actually reference this back test

59
00:03:42.400 --> 00:03:44.140
information in our notebook.

60
00:03:44.170 --> 00:03:46.330
So you need to run a full back test to really get this.

61
00:03:46.330 --> 00:03:52.660
So again we go ahead and copy the algorithm run a full back test and at your your all you should see

62
00:03:52.660 --> 00:03:54.370
the algorithms hash code.

63
00:03:54.370 --> 00:03:56.920
And then this back test test code.

64
00:03:56.920 --> 00:04:02.400
And keep in mind you're only entitled to view the back test that either one you have created or two

65
00:04:02.430 --> 00:04:03.900
you're a collaborator on.

66
00:04:04.060 --> 00:04:08.070
So the hash set are the hash number that I have up here it won't work for you.

67
00:04:08.070 --> 00:04:11.170
You're going to need to grab your own unique code so keep that in mind.

68
00:04:11.260 --> 00:04:14.970
So I will go ahead and grab this and then copy that.

69
00:04:15.040 --> 00:04:17.090
I'm going to come back to my notebook.

70
00:04:17.440 --> 00:04:22.100
Let me zoom in one more level here and there's a function I can call called Get back to us.

71
00:04:22.120 --> 00:04:25.620
So we say B.T. is equal to get back test.

72
00:04:25.720 --> 00:04:28.360
And then as a string I pass in the hash code.

73
00:04:28.540 --> 00:04:33.230
And again just to reiterate here you will have your own unique hash code you can't just copy and paste

74
00:04:33.230 --> 00:04:34.390
the one in the notebook.

75
00:04:35.300 --> 00:04:36.470
So I'm going to run this.

76
00:04:36.530 --> 00:04:39.110
And essentially it's going to grab that back test for me.

77
00:04:39.380 --> 00:04:45.860
And then if I say Beati dots and I hit tab here I have a bunch of attributes related to this things

78
00:04:45.860 --> 00:04:46.670
like I can ask.

79
00:04:46.850 --> 00:04:51.110
What was the benchmark security I was testing against and will tell you Well it was 8 5 5 4 which we

80
00:04:51.110 --> 00:04:52.780
know is the S&amp;P 500.

81
00:04:52.870 --> 00:04:58.340
And I can also do things like well what algorithm was I testing again and return back the hash code

82
00:04:58.340 --> 00:05:04.250
for the algorithm ID and then I can also ask well what variables was I recording.

83
00:05:04.250 --> 00:05:08.280
You can say Beati recorded variables and it all essentially turnback back a data frame very thing you

84
00:05:08.280 --> 00:05:09.200
were recording.

85
00:05:09.200 --> 00:05:13.910
So if you come back up here these were the things I was recording leverage Amazon close price IBM close

86
00:05:13.910 --> 00:05:14.630
price et cetera.

87
00:05:14.630 --> 00:05:19.370
So that second plot right here when you come back down and we see we have all that information in a

88
00:05:19.370 --> 00:05:21.550
data frame so we can plot that out ourselves.

89
00:05:21.560 --> 00:05:28.460
So for example if we kind of scroll down here I could say BT recorded variables remember that this is

90
00:05:28.460 --> 00:05:34.040
a data frame so I can index it and I can grab something like de-leverage column and then plot that out.

91
00:05:36.750 --> 00:05:41.710
So now on this plot we can see the leverage ratio calculated as a function of time.

92
00:05:41.820 --> 00:05:47.390
And remember the leverage ratio is your debt plus your capital base divided by your capital base.

93
00:05:47.520 --> 00:05:50.840
So we can see here when it's above 1 that means we have higher that values.

94
00:05:50.850 --> 00:05:53.570
So it looks like it peaks around 1 point 0 3.

95
00:05:53.610 --> 00:05:59.310
So that's essentially allowing us a 3 percent leverage here if we compare it back to our original capital

96
00:05:59.310 --> 00:06:00.060
base.

97
00:06:00.090 --> 00:06:05.670
So our algorithm is pretty calm since we're not really doing a whole lot of leverage but we could basically

98
00:06:05.730 --> 00:06:10.170
juice the amount of leverage it has by editing the order target percent.

99
00:06:10.170 --> 00:06:11.950
So let me go ahead and show you how we could do that.

100
00:06:12.090 --> 00:06:15.510
I would not recommend this but let's show you just for example sake.

101
00:06:15.710 --> 00:06:19.770
So we'll come back to the ITC and then come back to the algorithm.

102
00:06:19.980 --> 00:06:26.760
And over here where we have 0.5 so half our portfolio to Amazon half of it to shore IBM we're going

103
00:06:26.760 --> 00:06:35.040
to do is we can actually borrow money and we can do that by specifying greater than 1.0.

104
00:06:35.040 --> 00:06:40.140
So remember typically we don't order target percents to all sum up to one or negative one the penny

105
00:06:40.140 --> 00:06:41.220
if you're going to short stuff.

106
00:06:41.460 --> 00:06:46.140
But here we're actually saying okay double the amount of money I have as my capital base and put it

107
00:06:46.140 --> 00:06:46.800
into Amazon.

108
00:06:46.800 --> 00:06:48.910
So basically borrow money in order to do this.

109
00:06:48.930 --> 00:06:51.810
And I could do the same thing for something like IBM.

110
00:06:51.810 --> 00:06:56.980
So essentially now four times the amount of my capital base is being used here.

111
00:06:57.030 --> 00:06:58.600
So I'm doing this on margin.

112
00:06:58.800 --> 00:07:05.340
And then I'm going to say this and let's run the full back test again and let's jump forward in time

113
00:07:05.340 --> 00:07:09.210
for this is finished back testing.

114
00:07:09.230 --> 00:07:14.390
So once this back test is done you'll notice that it actually has much higher returns than our previous

115
00:07:14.390 --> 00:07:18.630
algorithm and we'll rerun the previous algorithm in just a second to show you what I'm talking about.

116
00:07:18.620 --> 00:07:23.360
And notice we have almost 90 percent returns here and there is kind of some erratic behavior over here

117
00:07:23.360 --> 00:07:23.790
in the middle.

118
00:07:23.790 --> 00:07:28.700
We can see towards the end just has a huge jump and that's because we were actually able to borrow money

119
00:07:28.760 --> 00:07:31.720
in order to make some of our shortfalls in our long calls here.

120
00:07:31.730 --> 00:07:36.230
So if you go over here it's a daily position in gains at the back test starts you'll see our position

121
00:07:36.230 --> 00:07:40.340
values and it's basically $2000000 and one $2000000 neither.

122
00:07:40.580 --> 00:07:45.860
And that makes sense because we asked for a million dollars in initial capital and we said essentially

123
00:07:45.980 --> 00:07:51.570
half our portfolio goes into Amazon or two times our portfolio value goes and Amazon excuse me and 2

124
00:07:51.620 --> 00:07:54.320
times portfolio value goes into shorting IBM.

125
00:07:54.720 --> 00:07:54.990
OK.

126
00:07:55.010 --> 00:07:58.320
So those are the back test starts and gains.

127
00:07:58.350 --> 00:08:01.210
Now notice here I only did this for a year.

128
00:08:01.220 --> 00:08:05.570
So if we come back over here the results overview we can see we have eighty seven point nine percent

129
00:08:05.570 --> 00:08:06.440
returns.

130
00:08:06.530 --> 00:08:11.330
So we're going to do is come back to the algorithm and then I'm going to change this to what we initially

131
00:08:11.330 --> 00:08:16.820
had which was 0.5 and negative 0.5.

132
00:08:16.820 --> 00:08:21.100
So trying to keep close to 1.0 ratio for our leverage.

133
00:08:21.170 --> 00:08:26.480
So I'm going to go ahead and build that algorithm and let's actually come back to the back to us let

134
00:08:26.480 --> 00:08:27.710
me cancel this right here.

135
00:08:27.710 --> 00:08:35.770
So Angela back to us and let's click on run Fulbeck test here so we can see all that information.

136
00:08:36.190 --> 00:08:36.440
Okay.

137
00:08:36.440 --> 00:08:42.770
So again same 2016 August 4 to 2017 Aug. 4 notice we start for a million dollars in capital.

138
00:08:42.770 --> 00:08:47.420
And here we only get 20 percent returns and that's because we're not borrowing any money to make some

139
00:08:47.420 --> 00:08:47.960
of these calls.

140
00:08:47.960 --> 00:08:52.820
So then look at the position gains we can see if we have half a million dollars in each which is closer

141
00:08:52.820 --> 00:08:54.940
to our initial capital.

142
00:08:55.130 --> 00:09:00.410
And these are the daily positions in gains so we can also do things like group by day or if you click

143
00:09:00.410 --> 00:09:05.900
on this you can filter by day etc. but hopefully you can see here the difference of just how effective

144
00:09:05.900 --> 00:09:08.160
it is to borrow money on leverage.

145
00:09:08.180 --> 00:09:13.730
Now keep in mind it is extremely risky because you could even owe more money than you actually had to

146
00:09:13.730 --> 00:09:14.270
start with.

147
00:09:14.270 --> 00:09:15.840
So definitely keep that in mind.

148
00:09:15.980 --> 00:09:20.570
And again in real world situations this really has to do more if your relationship with your broker

149
00:09:20.810 --> 00:09:26.480
your broker is not just going to let you borrow $4 billion with no questions asked so keep that in mind.

150
00:09:26.510 --> 00:09:29.530
Now we're going to come back to the algorithm.

151
00:09:29.540 --> 00:09:35.660
Let's go back to our high leverage situation where you basically say borrow a ton of money to do some

152
00:09:35.660 --> 00:09:39.070
of these calls save that and then run the full back to us.

153
00:09:39.440 --> 00:09:44.870
And what we're going to do is we're going to copy and paste this hash right here for this back to us.

154
00:09:45.080 --> 00:09:52.630
So I'm going to appear your L I'm going to copy this and this is done back to us now so we'll come back

155
00:09:52.630 --> 00:09:59.500
over the notebook and we're going to say Beattie is equal to get back to us.

156
00:09:59.680 --> 00:10:04.430
And now keep in mind this is my kind of high leverage situation.

157
00:10:04.480 --> 00:10:08.530
So now we have a high leverage situation so we can go ahead and plot out our leverage here.

158
00:10:08.530 --> 00:10:09.880
So let's go ahead and do that.

159
00:10:10.110 --> 00:10:14.210
We'll say BT dot member we call Ricordi variables.

160
00:10:14.380 --> 00:10:16.170
And in here we have a Leveridge column.

161
00:10:16.180 --> 00:10:17.450
So let's plot that out.

162
00:10:19.660 --> 00:10:22.380
And when we plot that out we can see our leverage is much worse.

163
00:10:22.390 --> 00:10:29.650
And it basically defaults around 4.0 which makes sense because we had double our portfolio in long Amazon

164
00:10:29.770 --> 00:10:33.760
and then double our portfolio in shorting IBM.

165
00:10:33.760 --> 00:10:36.880
So that's essentially four times as much money as we initially had.

166
00:10:36.880 --> 00:10:43.420
So now using leverage I'm kind of trading around $4 billion worth of stocks initially at least and then

167
00:10:43.450 --> 00:10:44.670
kind of messing around there.

168
00:10:44.710 --> 00:10:50.810
You can see how inherently this is going to be a lot riskier if my algorithm doesn't really work.

169
00:10:52.730 --> 00:10:57.230
So now finally as a last note here you're probably wondering well how do I actually set some sort of

170
00:10:57.230 --> 00:10:58.370
hard limit on leverage.

171
00:10:58.370 --> 00:11:00.530
I don't want to expose myself too much.

172
00:11:00.530 --> 00:11:04.560
And that's actually really easing the I.T. just come over here.

173
00:11:04.830 --> 00:11:11.580
Come back to your algorithm and initialize what you can do is there's a built in function called set

174
00:11:12.230 --> 00:11:12.820
max.

175
00:11:12.840 --> 00:11:16.330
And you notice you can actually set max position sizes for certain securities.

176
00:11:16.470 --> 00:11:21.090
How many orders of stock you want for that particular security etc. but we're actually going to use

177
00:11:21.090 --> 00:11:27.740
set max leverage and this is initially are essentially a hard stop and this will cause an error.

178
00:11:27.960 --> 00:11:31.510
If you go beyond whatever leverage you specified.

179
00:11:31.510 --> 00:11:37.080
Now for most typical algorithms that are kind of hovering around one point zero leverage you probably

180
00:11:37.080 --> 00:11:41.840
want to give a little bit of leeway maybe like 5 percent or something like 1.0 or 5.

181
00:11:41.910 --> 00:11:46.580
But notice this one is going to immediately fail because I specifically ask for more leverage down here.

182
00:11:46.620 --> 00:11:49.440
So if I try to save this and build the algorithm I should get an air

183
00:11:52.340 --> 00:11:56.380
so running forward in time it says hey there was a runtime error.

184
00:11:56.450 --> 00:12:01.620
The account violates some constraint and your constraint was made Max leverage can't be more than 1

185
00:12:01.620 --> 00:12:02.690
point zero or five.

186
00:12:02.960 --> 00:12:05.090
So that automatically triggers an error.

187
00:12:05.140 --> 00:12:11.070
And it will stop your album from running if you happen to violate whatever Max leverage you said.

188
00:12:11.270 --> 00:12:16.790
Now if we come back here and set the sequel back to kind of our initial values where we say half our

189
00:12:16.790 --> 00:12:22.100
portfolio long on Amazon half of that short are on IBM and then we build this algorithm with that 5

190
00:12:22.100 --> 00:12:25.030
percent extra on the max leverage.

191
00:12:25.040 --> 00:12:26.060
It should be fine.

192
00:12:26.060 --> 00:12:28.960
And you can click here less to see the back to us ran fine.

193
00:12:28.970 --> 00:12:31.960
So it never went above 1 point 0 5 ratio.

194
00:12:32.090 --> 00:12:39.430
So you can set your max leverage value that way in case you're concerned about any extensive borrowing.

195
00:12:39.830 --> 00:12:40.430
All right.

196
00:12:40.430 --> 00:12:43.550
That's really all there is to discuss about leverage as far as we're concerned.

197
00:12:43.610 --> 00:12:46.370
I will see you in the next lecture where we discuss hedging.

198
00:12:46.370 --> 00:12:47.180
Thanks everyone.

199
00:12:47.180 --> 00:12:47.800
I'll see you there.
