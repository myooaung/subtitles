WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.590
all right.

00:00:01.590 --> 00:00:02.170
Up until now,

00:00:02.170 --> 00:00:04.490
we've learned about true false,

00:00:04.490 --> 00:00:05.710
if else statements else.

00:00:05.710 --> 00:00:08.050
If statements all that good stuff,

00:00:08.050 --> 00:00:10.200
which is actually all very,

00:00:10.200 --> 00:00:10.560
very,

00:00:10.560 --> 00:00:14.400
very important in computer programming now.

00:00:14.400 --> 00:00:18.180
The reason that's important is because when you give a command to ah,

00:00:18.180 --> 00:00:19.490
program or a script,

00:00:19.490 --> 00:00:22.180
you're saying if something is true,

00:00:22.180 --> 00:00:24.250
executes some additional code.

00:00:24.250 --> 00:00:26.700
So if someone likes your post,

00:00:26.700 --> 00:00:28.350
send a notification.

00:00:28.350 --> 00:00:33.190
That's sort of the logic one that's not sort of that is the logic behind all programming,

00:00:33.190 --> 00:00:33.690
really.

00:00:33.690 --> 00:00:36.340
But there is a shortcut,

00:00:36.340 --> 00:00:40.680
and this one might be a little bit mind blowing and might be a little bit hard to grasp it

00:00:40.680 --> 00:00:40.980
first,

00:00:40.980 --> 00:00:44.510
So don't feel the need to master this right away.

00:00:44.510 --> 00:00:47.310
Continue writing if else statements a long way.

00:00:47.310 --> 00:00:49.380
But here's what turn Eri Logic looks like.

00:00:49.380 --> 00:00:50.910
Turn Eri logic is basically,

00:00:50.910 --> 00:00:52.010
if something is true,

00:00:52.010 --> 00:00:53.020
set a value.

00:00:53.020 --> 00:00:54.350
Otherwise it's not true.

00:00:54.350 --> 00:00:55.040
And really,

00:00:55.040 --> 00:00:59.650
what we're looking at here is name or let's do something easier.

00:00:59.650 --> 00:01:06.200
Age age is equal to 30 and then we could say is allowed to actually do it.

00:01:06.200 --> 00:01:10.550
Let's do lets you 18 and let's change us too.

00:01:10.550 --> 00:01:13.970
Can counts,

00:01:13.970 --> 00:01:19.950
can drink is equal to And we could set this to true Or we could set this to false,

00:01:19.950 --> 00:01:21.360
but we don't really know yet.

00:01:21.360 --> 00:01:21.880
And what is that?

00:01:21.880 --> 00:01:24.250
What is the determining factor here?

00:01:24.250 --> 00:01:25.150
It's your age.

00:01:25.150 --> 00:01:33.100
So we can say if your age is equal to or greater than 18.

00:01:33.100 --> 00:01:34.280
True,

00:01:34.280 --> 00:01:35.380
otherwise false.

00:01:35.380 --> 00:01:35.520
Now,

00:01:35.520 --> 00:01:36.880
if this looks complicated,

00:01:36.880 --> 00:01:38.100
it's because it kind of is.

00:01:38.100 --> 00:01:43.570
And so what I like to do is rap some brackets around here just to make this look a little

00:01:43.570 --> 00:01:46.970
nicer so that we know that this can drink.

00:01:46.970 --> 00:01:48.750
This can drink alcohol,

00:01:48.750 --> 00:01:50.410
variable.

00:01:50.410 --> 00:01:51.440
What it is doing,

00:01:51.440 --> 00:01:54.230
it is assigning a value of whatever this is.

00:01:54.230 --> 00:01:54.380
Now,

00:01:54.380 --> 00:01:58.290
if you remember back in high school there was the order of operations.

00:01:58.290 --> 00:01:59.510
It was bed,

00:01:59.510 --> 00:02:00.450
miss um,

00:02:00.450 --> 00:02:05.610
or something along these lines of algebra where you had you did your brackets first,

00:02:05.610 --> 00:02:06.850
then your exponents,

00:02:06.850 --> 00:02:11.050
exponents and then ah,

00:02:11.050 --> 00:02:14.370
division or multiplication,

00:02:14.370 --> 00:02:15.650
which everyone came first.

00:02:15.650 --> 00:02:16.590
Yikes!

00:02:16.590 --> 00:02:17.960
I cannot spell it all.

00:02:17.960 --> 00:02:18.910
Ah,

00:02:18.910 --> 00:02:22.420
and then you had your addition and your subtraction.

00:02:22.420 --> 00:02:23.680
Whichever one's came first.

00:02:23.680 --> 00:02:26.050
And in the very front of that we see brackets,

00:02:26.050 --> 00:02:31.190
and so that's sort of the logic here.

00:02:31.190 --> 00:02:32.690
You don't necessarily need your brackets,

00:02:32.690 --> 00:02:35.350
But this is the way I said it out because it looks a little nicer.

00:02:35.350 --> 00:02:41.370
And so this is your if else statement If this is true question mark set the value to true.

00:02:41.370 --> 00:02:46.550
If it's false or what you're else statement would be set this to false.

00:02:46.550 --> 00:02:48.360
And now we can say,

00:02:48.360 --> 00:02:54.150
if can drink echo you,

00:02:54.150 --> 00:02:57.210
um we're going to hear Yeah,

00:02:57.210 --> 00:02:59.250
you can drink.

00:02:59.250 --> 00:03:02.360
There we go.

00:03:02.360 --> 00:03:03.000
You can drink.

00:03:03.000 --> 00:03:08.930
But if I change this value to and let's just let's use a detriment a detrimental operator

00:03:08.930 --> 00:03:10.320
to lower that value by one.

00:03:10.320 --> 00:03:12.550
So now this is actually 17.

00:03:12.550 --> 00:03:17.370
You cannot drink because that value is false.

00:03:17.370 --> 00:03:25.150
And let's take a look at this var dump can drink.

00:03:25.150 --> 00:03:29.650
Can three Yunque there.

00:03:29.650 --> 00:03:31.050
I'm gonna roll today with,

00:03:31.050 --> 00:03:31.370
like,

00:03:31.370 --> 00:03:33.150
not being able to type anything.

00:03:33.150 --> 00:03:35.040
So there you have it.

00:03:35.040 --> 00:03:38.650
Line 15 on index dot PHP is a Boolean.

00:03:38.650 --> 00:03:39.870
Look at that.

00:03:39.870 --> 00:03:42.150
We've said billions and it is currently false.

00:03:42.150 --> 00:03:48.150
What if What if we just comment this whole thing out and my age goes back to being 18?

00:03:48.150 --> 00:03:49.990
Look,

00:03:49.990 --> 00:03:50.720
you can drink.

00:03:50.720 --> 00:03:55.250
What if I var dumped both age and can drink now we can see.

00:03:55.250 --> 00:03:57.440
Look at this online 15.

00:03:57.440 --> 00:03:58.780
We've an integer 18.

00:03:58.780 --> 00:04:01.980
Boolean is true uncommon.

00:04:01.980 --> 00:04:04.400
It's that Decker mentor and Fabio.

00:04:04.400 --> 00:04:06.950
Look at that age is 17 can no longer drink.

00:04:06.950 --> 00:04:07.970
But you know what?

00:04:07.970 --> 00:04:09.410
Let's let's make this more advanced.

00:04:09.410 --> 00:04:13.890
Let's say your age is going to be We're gonna typecast this.

00:04:13.890 --> 00:04:18.220
Get age now you don't know what get is yet.

00:04:18.220 --> 00:04:18.940
Technically,

00:04:18.940 --> 00:04:22.920
you might have an idea because we've already worked with us a little bit.

00:04:22.920 --> 00:04:23.460
Um,

00:04:23.460 --> 00:04:23.810
and again,

00:04:23.810 --> 00:04:27.170
I'm just using this toe kind of show you how dynamic PHP can be.

00:04:27.170 --> 00:04:30.950
But if I said the age with 17 it'll tell me my age of 17.

00:04:30.950 --> 00:04:33.530
If I tell you that my age is,

00:04:33.530 --> 00:04:43.430
um 819,000 that opened up the wrong window.

00:04:43.430 --> 00:04:53.560
Now if I told you that my age was 819,000 the Rio integer 819,000 Boolean is true.

00:04:53.560 --> 00:04:55.900
And what if we did not type cast this.

00:04:55.900 --> 00:04:59.040
Let's just show you what typecasting really does.

00:04:59.040 --> 00:05:01.350
See how this is an integer right here.

00:05:01.350 --> 00:05:03.130
It's now a string.

00:05:03.130 --> 00:05:08.850
Although PHP is loosely written so it understands at the string can also be understood as a

00:05:08.850 --> 00:05:11.550
number and so it still comes back is true.

00:05:11.550 --> 00:05:14.750
So let's typecast that.

00:05:14.750 --> 00:05:15.850
And,

00:05:15.850 --> 00:05:16.740
um,

00:05:16.740 --> 00:05:20.630
in a throw this into some notes here,

00:05:20.630 --> 00:05:21.650
some documentation.

00:05:21.650 --> 00:05:24.710
So that's really all there is to turn Eri logic.

00:05:24.710 --> 00:05:30.220
It's a shorthand method for if else statements it does not really handle else.

00:05:30.220 --> 00:05:30.890
If statements,

00:05:30.890 --> 00:05:34.100
it's really just Are we breaking something down to true or false?

00:05:34.100 --> 00:05:36.850
Can it be easily broken down and easily understood?

00:05:36.850 --> 00:05:41.910
Now I see a lot of people a lot of new PHP Debs will be like,

00:05:41.910 --> 00:05:42.190
Oh,

00:05:42.190 --> 00:05:43.180
this is so cool.

00:05:43.180 --> 00:05:45.400
Let me write another one inside of another one.

00:05:45.400 --> 00:05:49.060
Let's make this overly complicated.

00:05:49.060 --> 00:05:53.540
Remember a few lessons ago where I was saying Don't make things overly complicated.

00:05:53.540 --> 00:05:54.480
I'm not kidding.

00:05:54.480 --> 00:05:55.070
Don't do this.

00:05:55.070 --> 00:05:57.950
And this is why some my name is equal to Caleb.

00:05:57.950 --> 00:06:00.490
And I'm gonna move us on to a new line,

00:06:00.490 --> 00:06:02.450
make a smaller Seacon see it,

00:06:02.450 --> 00:06:04.890
and I'm gonna add another turn.

00:06:04.890 --> 00:06:05.970
Eri operator in here.

00:06:05.970 --> 00:06:06.650
Okay.

00:06:06.650 --> 00:06:07.300
My turn,

00:06:07.300 --> 00:06:10.850
Mary Operator is Name is equal to Caleb.

00:06:10.850 --> 00:06:12.240
Ah yeah.

00:06:12.240 --> 00:06:14.360
Lets that killed urinary operator.

00:06:14.360 --> 00:06:15.650
If my name is equal to Caleb,

00:06:15.650 --> 00:06:17.370
I'm going to return true.

00:06:17.370 --> 00:06:22.560
Otherwise I'm going to return false because even smaller.

00:06:22.560 --> 00:06:23.440
So it all fits on one line,

00:06:23.440 --> 00:06:25.670
and I apologize if you can't see that very well.

00:06:25.670 --> 00:06:29.050
I don't usually like to make my lines of small so that after zoom out.

00:06:29.050 --> 00:06:35.760
But what this is saying here is if my age is greater than 18 it also wants to check another

00:06:35.760 --> 00:06:36.690
turn Eri operator.

00:06:36.690 --> 00:06:36.910
Now,

00:06:36.910 --> 00:06:41.710
if my name is Caleb and my age is older than 18 is going to be true.

00:06:41.710 --> 00:06:43.250
Otherwise is going to be false.

00:06:43.250 --> 00:06:46.640
And if my age is less than 18 is going to be false.

00:06:46.640 --> 00:06:49.150
So let's go ahead and refresh the page.

00:06:49.150 --> 00:06:54.750
And let's change that age to 18 and we get false.

00:06:54.750 --> 00:06:55.920
So you might be thinking,

00:06:55.920 --> 00:06:56.450
Why?

00:06:56.450 --> 00:06:57.870
Why is it false?

00:06:57.870 --> 00:06:59.460
Because my name is Caleb.

00:06:59.460 --> 00:07:00.230
It's Caleb.

00:07:00.230 --> 00:07:03.010
My age is over 18 or it's equal to or over then 18.

00:07:03.010 --> 00:07:03.560
Ah,

00:07:03.560 --> 00:07:04.530
it should not be false.

00:07:04.530 --> 00:07:05.530
Everything should be true.

00:07:05.530 --> 00:07:06.050
Well,

00:07:06.050 --> 00:07:12.150
this is the complication behind using multiple turn Aires and with all due respect and And

00:07:12.150 --> 00:07:18.790
I'm saying this not only as your teacher but as a PHP developer and your peer as a

00:07:18.790 --> 00:07:19.640
colleague.

00:07:19.640 --> 00:07:23.730
Don't write these don't write turn areas inside of turn,

00:07:23.730 --> 00:07:25.350
Aires This is terrible,

00:07:25.350 --> 00:07:26.230
terrible logic.

00:07:26.230 --> 00:07:26.370
Now,

00:07:26.370 --> 00:07:28.420
the problem here is the capital.

00:07:28.420 --> 00:07:28.860
Okay,

00:07:28.860 --> 00:07:29.750
that's all it was.

00:07:29.750 --> 00:07:33.560
But now what happens if we add another one?

00:07:33.560 --> 00:07:34.100
Right.

00:07:34.100 --> 00:07:38.740
And what happens if I have a strict rule that my agency to only ever have,

00:07:38.740 --> 00:07:43.470
like 7 79 characters per line or 80 characters per line?

00:07:43.470 --> 00:07:43.950
Right.

00:07:43.950 --> 00:07:45.320
So now we have to come back up here,

00:07:45.320 --> 00:07:46.850
and I'm going to do this.

00:07:46.850 --> 00:07:54.200
And so this already looks terrible,

00:07:54.200 --> 00:07:54.540
actually.

00:07:54.540 --> 00:07:54.800
Know what?

00:07:54.800 --> 00:07:56.350
Let's make this look nicer.

00:07:56.350 --> 00:08:02.330
Just bear with me while I just sizes and stuff.

00:08:02.330 --> 00:08:05.400
So if your age is over 18 this is your true statement.

00:08:05.400 --> 00:08:06.700
This is your false statement.

00:08:06.700 --> 00:08:12.060
We get at another veterinary logic in here and like,

00:08:12.060 --> 00:08:13.450
this isn't making much sense,

00:08:13.450 --> 00:08:13.750
is it?

00:08:13.750 --> 00:08:17.050
Now,

00:08:17.050 --> 00:08:19.170
you should understand what this means,

00:08:19.170 --> 00:08:24.450
but it should also take you a few seconds to actually digest this Because this honestly is

00:08:24.450 --> 00:08:24.870
okay,

00:08:24.870 --> 00:08:25.430
code.

00:08:25.430 --> 00:08:28.750
But it is becoming too complicated,

00:08:28.750 --> 00:08:29.680
right?

00:08:29.680 --> 00:08:36.560
If my name is Nathan knows and I'm younger than 18 then this is going to return.

00:08:36.560 --> 00:08:39.130
True meaning.

00:08:39.130 --> 00:08:42.610
Basically the only person he was under the age 18 has to have the name Nathaniel's,

00:08:42.610 --> 00:08:43.450
and they can't drink.

00:08:43.450 --> 00:08:48.150
Now the only reason I can keep track of this very easily is first of all,

00:08:48.150 --> 00:08:51.210
I've done a lot of coronary logic in my lifetime.

00:08:51.210 --> 00:08:54.100
But I've also just written this and I had to explain it,

00:08:54.100 --> 00:08:56.240
so I had to make sure that I understood this.

00:08:56.240 --> 00:08:56.780
Otherwise,

00:08:56.780 --> 00:08:58.070
have someone just threw this at me,

00:08:58.070 --> 00:09:00.560
I would have to stop and read it very closely.

00:09:00.560 --> 00:09:01.180
Okay.

00:09:01.180 --> 00:09:02.760
If the ages over 18.

00:09:02.760 --> 00:09:03.340
Okay,

00:09:03.340 --> 00:09:04.750
this is my if statements,

00:09:04.750 --> 00:09:06.340
This is my else statement.

00:09:06.340 --> 00:09:07.150
And inside there,

00:09:07.150 --> 00:09:08.860
I also have an if else statement,

00:09:08.860 --> 00:09:10.910
which is the equivalent of saying,

00:09:10.910 --> 00:09:16.550
if some condition in here and then if some condition in here,

00:09:16.550 --> 00:09:17.480
right,

00:09:17.480 --> 00:09:22.610
you got code else other code.

00:09:22.610 --> 00:09:23.240
And in here,

00:09:23.240 --> 00:09:24.550
we've got if else,

00:09:24.550 --> 00:09:25.350
uh,

00:09:25.350 --> 00:09:29.590
if code in here and and we've got more coding here,

00:09:29.590 --> 00:09:30.080
right?

00:09:30.080 --> 00:09:31.280
This is the equivalent.

00:09:31.280 --> 00:09:32.900
Now,

00:09:32.900 --> 00:09:34.090
this might be more compact,

00:09:34.090 --> 00:09:35.950
but it's not necessarily better code.

00:09:35.950 --> 00:09:37.330
This,

00:09:37.330 --> 00:09:37.980
in my opinion,

00:09:37.980 --> 00:09:40.450
is better coat because it's easier to read.

00:09:40.450 --> 00:09:41.730
If one condition is true,

00:09:41.730 --> 00:09:42.640
check for another one.

00:09:42.640 --> 00:09:43.760
If if it's false,

00:09:43.760 --> 00:09:44.580
check for another one.

00:09:44.580 --> 00:09:47.290
You don't have to worry about struggling with all of this stuff.

00:09:47.290 --> 00:09:49.020
So that was an example,

00:09:49.020 --> 00:09:52.290
and this was not even a complicated example.

00:09:52.290 --> 00:09:56.570
This was a very basic example of when two and two not used coronary logic.

00:09:56.570 --> 00:10:02.850
So none do all this elevator music.

00:10:02.850 --> 00:10:02.980
Oh,

00:10:02.980 --> 00:10:03.250
yeah.

00:10:03.250 --> 00:10:05.560
Still find elevator music.

00:10:05.560 --> 00:10:08.320
So that's turn eri logic for you.

00:10:08.320 --> 00:10:08.570
Now.

00:10:08.570 --> 00:10:11.510
What I would like you to do is I want you to practice writing coronary logic.

00:10:11.510 --> 00:10:12.200
Great.

00:10:12.200 --> 00:10:13.350
Do something like this.

00:10:13.350 --> 00:10:15.860
Doesn't have to be overly complicated,

00:10:15.860 --> 00:10:16.440
right?

00:10:16.440 --> 00:10:16.940
Remember,

00:10:16.940 --> 00:10:17.690
always keep it simple.

00:10:17.690 --> 00:10:19.320
Keep the simpler it gets,

00:10:19.320 --> 00:10:24.710
the better it is for you and your peers and your colleagues and your co workers and

00:10:24.710 --> 00:10:27.250
instructors like me so I can read your code easier.

00:10:27.250 --> 00:10:30.130
It's just better for everybody to keep it simple.

00:10:30.130 --> 00:10:32.650
You've got your if condition.

00:10:32.650 --> 00:10:33.600
If it's true,

00:10:33.600 --> 00:10:34.380
if it's false,

00:10:34.380 --> 00:10:36.950
that is your turn area logic.

00:10:36.950 --> 00:10:41.780
Give that a shot when you're done that head on over to the next video and we'll see over

00:10:41.780 --> 00:10:42.050
there

