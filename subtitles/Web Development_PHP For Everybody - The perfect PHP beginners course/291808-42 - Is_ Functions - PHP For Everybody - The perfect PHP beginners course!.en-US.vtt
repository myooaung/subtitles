WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.620
Hello.

00:00:01.620 --> 00:00:03.850
Welcome to another lesson of while.

00:00:03.850 --> 00:00:07.150
I guess you're learning PHP so PHP surprise.

00:00:07.150 --> 00:00:07.770
Uh,

00:00:07.770 --> 00:00:08.060
okay.

00:00:08.060 --> 00:00:08.650
So when this last,

00:00:08.650 --> 00:00:10.940
we're going to learn about a few functions called,

00:00:10.940 --> 00:00:11.880
isn't it?

00:00:11.880 --> 00:00:13.840
String is array and is numeric.

00:00:13.840 --> 00:00:16.850
There are a ton of these functions called is functions,

00:00:16.850 --> 00:00:21.220
But we're just going to tackle the 1st 4 because they are Wow,

00:00:21.220 --> 00:00:22.120
they're really popular.

00:00:22.120 --> 00:00:23.660
And you're eventually going to need them.

00:00:23.660 --> 00:00:26.520
And especially since I've taught you about data types,

00:00:26.520 --> 00:00:30.390
I would really prefer if you could use proper data types because that's going to help you

00:00:30.390 --> 00:00:31.270
out in the future.

00:00:31.270 --> 00:00:32.250
Immensely.

00:00:32.250 --> 00:00:35.660
Now your work after work with other PHP developers.

00:00:35.660 --> 00:00:38.550
Eventually someone's going to hand off some code to you.

00:00:38.550 --> 00:00:42.670
You're gonna take over a client for someone you gonna redo someone's website and you're

00:00:42.670 --> 00:00:44.490
gonna have to redo someone else's coating.

00:00:44.490 --> 00:00:47.340
And chances are they're not going to write proper code.

00:00:47.340 --> 00:00:49.130
They're not going to use the proper data types.

00:00:49.130 --> 00:00:52.480
And so it's your job to basically figure out what data types are.

00:00:52.480 --> 00:00:52.850
What?

00:00:52.850 --> 00:00:55.050
So whenever you can typecast.

00:00:55.050 --> 00:01:02.580
So whenever you see a very well that says something like age is equal to ah 12 typecast it

00:01:02.580 --> 00:01:06.030
typecast it to an integer so that you always know that it's an integer.

00:01:06.030 --> 00:01:09.560
But there are times where you don't know what this is,

00:01:09.560 --> 00:01:17.650
so let's pretend that we don't know pretend we don't know that this is a string.

00:01:17.650 --> 00:01:19.620
Okay,

00:01:19.620 --> 00:01:22.170
so now how do we check if this is a string?

00:01:22.170 --> 00:01:24.270
Or if this is an integer or if this is numeric,

00:01:24.270 --> 00:01:25.050
it's really easy.

00:01:25.050 --> 00:01:25.570
We say,

00:01:25.570 --> 00:01:30.250
If is int and we put a gin there echo,

00:01:30.250 --> 00:01:33.390
it's an it.

00:01:33.390 --> 00:01:35.780
Okay,

00:01:35.780 --> 00:01:36.590
that didn't work.

00:01:36.590 --> 00:01:37.530
So let's see what else?

00:01:37.530 --> 00:01:43.950
If else If is String Age echo,

00:01:43.950 --> 00:01:47.260
it's a string.

00:01:47.260 --> 00:01:49.160
Okay,

00:01:49.160 --> 00:01:49.520
there we go.

00:01:49.520 --> 00:01:50.040
It's a strength,

00:01:50.040 --> 00:01:50.950
so we know that one works.

00:01:50.950 --> 00:01:53.460
Let's go ahead and duplicate this,

00:01:53.460 --> 00:02:00.830
but instead of strings to is array cubes lower case echo,

00:02:00.830 --> 00:02:02.750
it's an array.

00:02:02.750 --> 00:02:05.960
Nope.

00:02:05.960 --> 00:02:06.890
Still says it's a string.

00:02:06.890 --> 00:02:07.140
OK,

00:02:07.140 --> 00:02:08.050
let's try one more or less.

00:02:08.050 --> 00:02:13.730
Try is numeric is numeric echo.

00:02:13.730 --> 00:02:15.150
It's numeric.

00:02:15.150 --> 00:02:18.600
Okay,

00:02:18.600 --> 00:02:19.090
it's numeric.

00:02:19.090 --> 00:02:20.540
So in this sense,

00:02:20.540 --> 00:02:22.720
PHP understands that not only is this a string,

00:02:22.720 --> 00:02:24.070
but it is also numeric.

00:02:24.070 --> 00:02:26.090
Did it say that it's an ent?

00:02:26.090 --> 00:02:26.660
No,

00:02:26.660 --> 00:02:32.710
because it's data type is not an integer isn't is looking for the data type of an integer,

00:02:32.710 --> 00:02:35.990
whereas is numeric is simply saying,

00:02:35.990 --> 00:02:38.020
Is this a number in any degree?

00:02:38.020 --> 00:02:38.700
Is this a number?

00:02:38.700 --> 00:02:44.750
So if we said 12.123 it's still going to say it's numeric now,

00:02:44.750 --> 00:02:47.600
does this help while we can then say in here,

00:02:47.600 --> 00:02:58.850
if is in or actually rather because if is not in and then we can typecast it age.

00:02:58.850 --> 00:03:07.070
And now let's do a vier dump of age and let's do one up here is well so we can see before

00:03:07.070 --> 00:03:07.750
and after.

00:03:07.750 --> 00:03:11.350
So we've got up here.

00:03:11.350 --> 00:03:12.450
Let me make that smaller.

00:03:12.450 --> 00:03:14.160
The wages,

00:03:14.160 --> 00:03:15.640
Ma Okay,

00:03:15.640 --> 00:03:19.800
so we've got string 12.123 and then we said,

00:03:19.800 --> 00:03:20.250
Ah,

00:03:20.250 --> 00:03:22.930
you can't be 0.123 of a year old,

00:03:22.930 --> 00:03:26.750
So type cast it to an integer and we're going to say that is 12.

00:03:26.750 --> 00:03:27.640
We could also,

00:03:27.640 --> 00:03:31.120
if we wanted to support the 120.23 casted to afloat.

00:03:31.120 --> 00:03:35.850
And now this is afloat because it's a floating decimal point and there is a string as well

00:03:35.850 --> 00:03:35.850
.

00:03:35.850 --> 00:03:40.130
Now,

00:03:40.130 --> 00:03:41.240
why would you ever need this?

00:03:41.240 --> 00:03:42.120
That's a good question.

00:03:42.120 --> 00:03:43.060
Again,

00:03:43.060 --> 00:03:45.790
you're gonna be working with other people's code and eventually people are going to get

00:03:45.790 --> 00:03:46.060
lazy,

00:03:46.060 --> 00:03:47.580
you're going to run into bad programming.

00:03:47.580 --> 00:03:49.940
It happens all the time in every programming language,

00:03:49.940 --> 00:03:51.310
some more than others.

00:03:51.310 --> 00:03:55.740
And PHP is one of those ones where they're just so many PHP developers that there are not a

00:03:55.740 --> 00:03:59.550
lot of standards that people follow and they write some pretty poor code.

00:03:59.550 --> 00:04:01.420
And so whenever you see something like this,

00:04:01.420 --> 00:04:03.950
you don't want it to be a string.

00:04:03.950 --> 00:04:06.910
An age should ever be,

00:04:06.910 --> 00:04:07.650
Ah,

00:04:07.650 --> 00:04:08.810
an end,

00:04:08.810 --> 00:04:14.950
an integer so and or afloat should never really be anything else.

00:04:14.950 --> 00:04:18.700
So now that I've type casted that and put it in here,

00:04:18.700 --> 00:04:19.750
this is a float.

00:04:19.750 --> 00:04:22.950
It still says it's numeric.

00:04:22.950 --> 00:04:25.980
So let's add one more in here.

00:04:25.980 --> 00:04:29.550
Let's a is This is float.

00:04:29.550 --> 00:04:33.650
It's afloat.

00:04:33.650 --> 00:04:35.870
Look at that.

00:04:35.870 --> 00:04:36.490
It's afloat.

00:04:36.490 --> 00:04:39.160
And to be totally honest Ah,

00:04:39.160 --> 00:04:45.080
I actually had only intended on teaching you isn't a string is array and is numeric.

00:04:45.080 --> 00:04:47.280
But you know what is float is so simple.

00:04:47.280 --> 00:04:49.150
It's the same as all these other ones.

00:04:49.150 --> 00:04:51.090
I just threw it in there and,

00:04:51.090 --> 00:04:51.450
like,

00:04:51.450 --> 00:04:52.040
boom!

00:04:52.040 --> 00:04:52.520
Just like that.

00:04:52.520 --> 00:04:53.450
Within seconds,

00:04:53.450 --> 00:04:55.680
you learned about another function just like that.

00:04:55.680 --> 00:04:56.710
Okay,

00:04:56.710 --> 00:04:58.360
so that's not necessarily what we want.

00:04:58.360 --> 00:04:59.650
If we want this 1st 1 to be triggered,

00:04:59.650 --> 00:05:01.650
we need to make sure that this is an integer.

00:05:01.650 --> 00:05:04.110
And so we're gonna typecast age to an integer,

00:05:04.110 --> 00:05:04.930
Save the page,

00:05:04.930 --> 00:05:05.510
Refresh.

00:05:05.510 --> 00:05:07.890
And now it's an int again.

00:05:07.890 --> 00:05:11.920
The reason that you're going to need to do this eventually is because you're going to be

00:05:11.920 --> 00:05:13.810
working with much stricter code.

00:05:13.810 --> 00:05:17.310
As you get more and more experience with PHP,

00:05:17.310 --> 00:05:19.050
you're going to write better and better code.

00:05:19.050 --> 00:05:23.110
And better code means you were following standards.

00:05:23.110 --> 00:05:29.640
And so the ability to typecast the ability to check if something is an integer or afloat or

00:05:29.640 --> 00:05:34.640
is numeric at the very least or is an array because you might not even know if ages in a

00:05:34.640 --> 00:05:34.900
rain.

00:05:34.900 --> 00:05:44.300
If someone miss types the variable name and they called it ages well,

00:05:44.300 --> 00:05:45.180
ages is plural,

00:05:45.180 --> 00:05:46.950
so you might think that that's an array,

00:05:46.950 --> 00:05:48.240
so you could say,

00:05:48.240 --> 00:05:49.040
Ah,

00:05:49.040 --> 00:05:53.880
if is array and then you could possibly count the length of the arraign.

00:05:53.880 --> 00:05:54.870
If there's only one in there,

00:05:54.870 --> 00:05:56.270
you could turn it into an integer.

00:05:56.270 --> 00:06:00.590
You can do all of this stuff just right out of the box with PHP.

00:06:00.590 --> 00:06:07.470
Now what I would like you to Dio for your task for this lesson is I would like you to

00:06:07.470 --> 00:06:10.410
creative variable called age.

00:06:10.410 --> 00:06:13.400
Make it a string and then I want you to check.

00:06:13.400 --> 00:06:17.440
The isn't is float is numeric is array and is string,

00:06:17.440 --> 00:06:19.040
and I want you to see which ones work.

00:06:19.040 --> 00:06:20.070
Don't put them in else.

00:06:20.070 --> 00:06:21.210
If either do this,

00:06:21.210 --> 00:06:24.100
do do as I say,

00:06:24.100 --> 00:06:25.160
not as I do kind of thing.

00:06:25.160 --> 00:06:27.560
They re Oh,

00:06:27.560 --> 00:06:29.330
so these are all on their own lines now.

00:06:29.330 --> 00:06:32.100
So isn't look,

00:06:32.100 --> 00:06:32.550
it's new,

00:06:32.550 --> 00:06:32.990
Eric.

00:06:32.990 --> 00:06:35.680
But if we also said int,

00:06:35.680 --> 00:06:37.920
this will show up with both,

00:06:37.920 --> 00:06:39.950
It's both an end and it is numeric.

00:06:39.950 --> 00:06:43.330
Or if we forced this to be an array,

00:06:43.330 --> 00:06:44.260
look at that.

00:06:44.260 --> 00:06:44.850
It's an array,

00:06:44.850 --> 00:06:45.830
but it's not numeric,

00:06:45.830 --> 00:06:47.280
because it can't be.

00:06:47.280 --> 00:06:51.090
But if we said age zero,

00:06:51.090 --> 00:06:52.740
the first index in the array,

00:06:52.740 --> 00:06:54.050
it's numeric.

00:06:54.050 --> 00:06:58.490
And don't forget we also typecast of that age.

00:06:58.490 --> 00:06:59.380
So okay,

00:06:59.380 --> 00:07:00.320
there we go.

00:07:00.320 --> 00:07:01.820
Now it's numeric and it's an array.

00:07:01.820 --> 00:07:03.250
It's now we're checking for different things,

00:07:03.250 --> 00:07:05.790
so have a little bit of fun with that.

00:07:05.790 --> 00:07:07.870
Make sure you get the feel for Ah,

00:07:07.870 --> 00:07:09.990
what an array is what America is.

00:07:09.990 --> 00:07:11.590
Float is what an integer is.

00:07:11.590 --> 00:07:12.850
If you have any questions,

00:07:12.850 --> 00:07:14.520
don't forget Facebook group learning to code.

00:07:14.520 --> 00:07:16.140
We also have Ah,

00:07:16.140 --> 00:07:17.950
lot of documentation on PHP dot net.

00:07:17.950 --> 00:07:19.040
I mean,

00:07:19.040 --> 00:07:22.950
that's available literally 24 7 If you can't get an answer from someone fast enough on our

00:07:22.950 --> 00:07:23.350
group,

00:07:23.350 --> 00:07:25.260
go straight to the docks.

00:07:25.260 --> 00:07:28.530
There's no better source than the source,

00:07:28.530 --> 00:07:30.040
All right,

00:07:30.040 --> 00:07:31.500
Once year old done that,

00:07:31.500 --> 00:07:33.700
let's head on over to the next lesson and,

00:07:33.700 --> 00:07:34.070
ah,

00:07:34.070 --> 00:07:35.750
and we'll learn something cool.

