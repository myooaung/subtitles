WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.500
there are going to be lots of times in your programming future where you need to replace

00:00:05.500 --> 00:00:06.790
just a part of a string.

00:00:06.790 --> 00:00:07.670
So,

00:00:07.670 --> 00:00:08.190
for example,

00:00:08.190 --> 00:00:09.160
if someone's name,

00:00:09.160 --> 00:00:09.930
um,

00:00:09.930 --> 00:00:15.100
has an invalid character in it or if someone leaves a comment but has a swear in it and you

00:00:15.100 --> 00:00:15.770
want to remove,

00:00:15.770 --> 00:00:19.610
that's where you can use something called string replace known PHP.

00:00:19.610 --> 00:00:24.950
We don't type the word S t r I N g string we type esti are generally speaking.

00:00:24.950 --> 00:00:29.930
So let's go ahead and dive right into this with a real example.

00:00:29.930 --> 00:00:31.180
I'm gonna make this bit bigger here.

00:00:31.180 --> 00:00:44.150
Sentence is equal to hello world and echo sentence and it'll say hello world as expected.

00:00:44.150 --> 00:00:49.720
I'm going to comment this out and I'm gonna do something a little bit different Echo str

00:00:49.720 --> 00:00:52.330
replace And what is it looking for?

00:00:52.330 --> 00:00:52.660
Well,

00:00:52.660 --> 00:00:54.590
this is a function that you have never seen before,

00:00:54.590 --> 00:00:56.420
So this is a good time to hop on Google,

00:00:56.420 --> 00:01:00.210
hop on PHP dot net and look at the documentation.

00:01:00.210 --> 00:01:05.270
So now we know that it's going to be looking for the word to replace what to replace it

00:01:05.270 --> 00:01:08.820
with where to replace it and the number of times to replace it.

00:01:08.820 --> 00:01:12.110
I know that off the top of my head so we can do this Repeal.

00:01:12.110 --> 00:01:12.830
Replace him.

00:01:12.830 --> 00:01:14.630
Have to make the smaller against this fits on one line.

00:01:14.630 --> 00:01:15.710
Apologize about this.

00:01:15.710 --> 00:01:17.450
If that gets little bit hard to see,

00:01:17.450 --> 00:01:19.770
so string replaced.

00:01:19.770 --> 00:01:22.390
First argument is we want to replace world,

00:01:22.390 --> 00:01:25.150
not with the exclamation mark.

00:01:25.150 --> 00:01:27.750
We want to replace it with Caleb.

00:01:27.750 --> 00:01:33.660
We want to replace it in the sentence and how many times we want to replace it.

00:01:33.660 --> 00:01:35.290
That one is an optional parameter.

00:01:35.290 --> 00:01:36.310
So let's leave it at this.

00:01:36.310 --> 00:01:37.310
And boom.

00:01:37.310 --> 00:01:37.630
Hello,

00:01:37.630 --> 00:01:38.150
Caleb.

00:01:38.150 --> 00:01:39.110
No,

00:01:39.110 --> 00:01:40.390
the variable sentence.

00:01:40.390 --> 00:01:40.700
Hello.

00:01:40.700 --> 00:01:42.190
World does not say Caleb in it.

00:01:42.190 --> 00:01:44.230
What we've done is we've successfully replaced this.

00:01:44.230 --> 00:01:45.360
Now we can go ahead,

00:01:45.360 --> 00:01:48.870
and we can actually turn this into a sentence as well.

00:01:48.870 --> 00:01:51.460
A sentence variable.

00:01:51.460 --> 00:01:57.960
And over doing here is we're overriding the old sentence with a new sentence Info or data?

00:01:57.960 --> 00:01:58.210
Rather,

00:01:58.210 --> 00:02:02.840
it's not influence data and voila,

00:02:02.840 --> 00:02:03.550
that still works.

00:02:03.550 --> 00:02:04.150
Cool beans.

00:02:04.150 --> 00:02:06.620
Now,

00:02:06.620 --> 00:02:08.660
what if we have another sentence in here?

00:02:08.660 --> 00:02:09.270
Um,

00:02:09.270 --> 00:02:15.950
did ah echo HR cause I like to be visually different in the example code.

00:02:15.950 --> 00:02:16.350
Over here.

00:02:16.350 --> 00:02:22.610
Eso Let's say another one What if we wanted to replace?

00:02:22.610 --> 00:02:24.100
Hey,

00:02:24.100 --> 00:02:30.000
let's say let's say we wanted to replace all the letter goes with zeros,

00:02:30.000 --> 00:02:31.590
so they look sort of similar.

00:02:31.590 --> 00:02:32.050
But,

00:02:32.050 --> 00:02:33.070
you know,

00:02:33.070 --> 00:02:35.460
we just wanna make a little hackery ish.

00:02:35.460 --> 00:02:37.480
I guess we could say,

00:02:37.480 --> 00:02:38.330
Ah,

00:02:38.330 --> 00:02:41.290
the new sentence because we're just gonna overwrite the old one is equal to,

00:02:41.290 --> 00:02:52.020
um this sentence will have zero zero's and oh,

00:02:52.020 --> 00:02:53.740
my gosh,

00:02:53.740 --> 00:02:57.980
it has a few zeros.

00:02:57.980 --> 00:02:58.710
Something like that.

00:02:58.710 --> 00:03:01.950
It doesn't have to make sense causes for demonstration purposes only.

00:03:01.950 --> 00:03:02.730
Now,

00:03:02.730 --> 00:03:05.240
if I say echo the sentence,

00:03:05.240 --> 00:03:08.590
refresh this sentence will have zero zero's and oh,

00:03:08.590 --> 00:03:09.060
my gosh,

00:03:09.060 --> 00:03:10.050
it has a few zeros.

00:03:10.050 --> 00:03:18.040
But if we wanted to replace all of these zeros uh,

00:03:18.040 --> 00:03:18.240
no.

00:03:18.240 --> 00:03:18.460
Sorry.

00:03:18.460 --> 00:03:19.000
Not zeros.

00:03:19.000 --> 00:03:20.500
Those a rose.

00:03:20.500 --> 00:03:21.130
Um,

00:03:21.130 --> 00:03:23.760
So if we wanted to place all these owes with zeros,

00:03:23.760 --> 00:03:24.350
we say,

00:03:24.350 --> 00:03:25.670
ah,

00:03:25.670 --> 00:03:30.360
sentence is equal to string.

00:03:30.360 --> 00:03:30.990
Replace.

00:03:30.990 --> 00:03:33.570
And now we're looking for What are we replacing?

00:03:33.570 --> 00:03:41.220
We're replacing all the O's with zeros in the sentence variable.

00:03:41.220 --> 00:03:42.890
And how many times do we want to do this?

00:03:42.890 --> 00:03:43.630
Wow.

00:03:43.630 --> 00:03:45.850
Let's see what happens when we don't set that parameter.

00:03:45.850 --> 00:03:48.120
They all turned into zeros.

00:03:48.120 --> 00:03:51.570
And now what happens if we wanted to get the number of replacements.

00:03:51.570 --> 00:03:52.730
That's the count.

00:03:52.730 --> 00:03:55.500
We're gonna put this in here as a variable called Count.

00:03:55.500 --> 00:03:58.750
And let's just split this onto a new line so you can see this a little bit easier.

00:03:58.750 --> 00:04:01.680
What are we looking for?

00:04:01.680 --> 00:04:03.180
What are we replacing it with?

00:04:03.180 --> 00:04:04.820
Where are we were replacing it?

00:04:04.820 --> 00:04:07.290
And how many times has this been replaced?

00:04:07.290 --> 00:04:08.250
So we can say,

00:04:08.250 --> 00:04:09.470
Ah,

00:04:09.470 --> 00:04:10.320
Echo sentence.

00:04:10.320 --> 00:04:11.220
Nothing will change.

00:04:11.220 --> 00:04:12.130
And after it,

00:04:12.130 --> 00:04:12.950
we will,

00:04:12.950 --> 00:04:14.070
captain eight.

00:04:14.070 --> 00:04:18.140
Uh oh.

00:04:18.140 --> 00:04:21.420
Was replaced with zero.

00:04:21.420 --> 00:04:26.750
How many times count times?

00:04:26.750 --> 00:04:28.950
Oh,

00:04:28.950 --> 00:04:31.350
was replaced with 04 times,

00:04:31.350 --> 00:04:33.950
one to three.

00:04:33.950 --> 00:04:38.360
Before there we go notice my concatenation as well.

00:04:38.360 --> 00:04:44.240
And the fact that I'm using the apostrophes instead of the quotations,

00:04:44.240 --> 00:04:47.150
I could have used a quotations as well and not had to can cabinet in here.

00:04:47.150 --> 00:04:51.100
Your task for this lesson is to create a sentence.

00:04:51.100 --> 00:04:51.460
Hello,

00:04:51.460 --> 00:04:56.960
world Some gibberish sentence Like what I made and do some sort of string replacement.

00:04:56.960 --> 00:05:00.810
And then I want you to count the number of times that it was replaced An echo that back to

00:05:00.810 --> 00:05:01.530
the screen as well.

00:05:01.530 --> 00:05:02.780
So echo your new sentence.

00:05:02.780 --> 00:05:04.910
The one with replace stuff and echo the number of times.

00:05:04.910 --> 00:05:05.390
Ah,

00:05:05.390 --> 00:05:06.450
something was replaced.

00:05:06.450 --> 00:05:11.880
And then I wanted to do one more thing.

00:05:11.880 --> 00:05:18.540
I want you to hop on Google and rather hop on peach pit on it.

00:05:18.540 --> 00:05:20.440
Or you could google it and type in string.

00:05:20.440 --> 00:05:21.050
Replace,

00:05:21.050 --> 00:05:23.490
and I want you to look at the docks for this one.

00:05:23.490 --> 00:05:31.500
This one tells me that it works with peach before five and seven string replace.

00:05:31.500 --> 00:05:35.080
Replace all occurences of the search string within the replacement string.

00:05:35.080 --> 00:05:36.720
It gives us,

00:05:36.720 --> 00:05:37.310
Ah,

00:05:37.310 --> 00:05:39.420
little detailed example here,

00:05:39.420 --> 00:05:41.720
and then let's scroll down gives us our parameters,

00:05:41.720 --> 00:05:44.950
what to search for what's replaced with where to replace it,

00:05:44.950 --> 00:05:47.800
the subject and count,

00:05:47.800 --> 00:05:48.660
which is optional,

00:05:48.660 --> 00:05:52.250
which we can see up here because it's in this little bracket E section.

00:05:52.250 --> 00:05:55.450
I didn't like that right in this little bracket E section,

00:05:55.450 --> 00:06:01.440
and we have examples down here as well.

00:06:01.440 --> 00:06:03.050
So take a look at the documentation as well.

00:06:03.050 --> 00:06:04.750
It's always a good idea to look at the docks,

00:06:04.750 --> 00:06:06.690
replace your sentence,

00:06:06.690 --> 00:06:09.680
echo account and check this page out on the docks

