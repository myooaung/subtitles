WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.830
Okay,

00:00:01.830 --> 00:00:02.390
by now,

00:00:02.390 --> 00:00:05.960
you should have realized that when I type something into the URL here for a PHP file,

00:00:05.960 --> 00:00:07.830
it goes index dot PHP.

00:00:07.830 --> 00:00:08.620
Now what?

00:00:08.620 --> 00:00:13.170
Actually is that so you have an index file here?

00:00:13.170 --> 00:00:15.000
Let's make this little bigger so you can see it's easier.

00:00:15.000 --> 00:00:17.510
We have index dot PHP.

00:00:17.510 --> 00:00:22.560
What index means is when there are no other files or even if there are other files,

00:00:22.560 --> 00:00:27.060
your browser is always going to try to figure out what the 1st 1 it should load.

00:00:27.060 --> 00:00:33.860
So if if you have index dot PHP and home dot PHP and home page dot PHP,

00:00:33.860 --> 00:00:38.650
Which one should be loaded first when there is no index dot PHP file.

00:00:38.650 --> 00:00:39.840
Now,

00:00:39.840 --> 00:00:41.910
bear with me because this will make sense in just a moment.

00:00:41.910 --> 00:00:44.500
You notice I've changed the URL here.

00:00:44.500 --> 00:00:46.680
There's nothing there now.

00:00:46.680 --> 00:00:49.150
What this means is because there's nothing there.

00:00:49.150 --> 00:00:50.620
My my server,

00:00:50.620 --> 00:00:56.410
that's running PHP is going to say the 1st 1 I'm looking for is index dot PHP.

00:00:56.410 --> 00:00:58.220
Does this file exist?

00:00:58.220 --> 00:00:59.510
If it does,

00:00:59.510 --> 00:01:00.310
it will show it.

00:01:00.310 --> 00:01:01.100
And this file,

00:01:01.100 --> 00:01:02.320
as you can see right up here,

00:01:02.320 --> 00:01:06.830
is called index dot PHP and it shows up in here as we would expect.

00:01:06.830 --> 00:01:10.220
Now I'll save this and refresh just so you can see that I'm not lying.

00:01:10.220 --> 00:01:11.000
Look,

00:01:11.000 --> 00:01:13.400
my text showed up just as we thought it would.

00:01:13.400 --> 00:01:14.900
Now,

00:01:14.900 --> 00:01:19.060
what do you need to actually serve a PHP file?

00:01:19.060 --> 00:01:19.320
Well,

00:01:19.320 --> 00:01:20.040
as you can see,

00:01:20.040 --> 00:01:22.370
I have no Ph b in this file at all.

00:01:22.370 --> 00:01:23.150
In fact,

00:01:23.150 --> 00:01:24.730
it's peer html.

00:01:24.730 --> 00:01:26.760
And when I go and view the source,

00:01:26.760 --> 00:01:30.750
we can see that these are the exact same thing here.

00:01:30.750 --> 00:01:33.350
I make this bigger so you can see this as well.

00:01:33.350 --> 00:01:37.020
And so this says each one What is a dot PHP file?

00:01:37.020 --> 00:01:39.780
And in my sublime editor,

00:01:39.780 --> 00:01:41.250
it says the exact same thing.

00:01:41.250 --> 00:01:44.670
Now,

00:01:44.670 --> 00:01:47.140
could I have named this index dot html?

00:01:47.140 --> 00:01:49.790
Could I have named this index dot CSS?

00:01:49.790 --> 00:01:50.280
Yes,

00:01:50.280 --> 00:01:50.860
absolutely.

00:01:50.860 --> 00:01:51.330
I could have.

00:01:51.330 --> 00:01:51.680
And what,

00:01:51.680 --> 00:01:54.510
it that have changed anything at this point?

00:01:54.510 --> 00:01:54.860
No,

00:01:54.860 --> 00:01:57.180
because we're not running any PHP.

00:01:57.180 --> 00:01:57.630
Now,

00:01:57.630 --> 00:01:59.450
let's take a look at an example here.

00:01:59.450 --> 00:02:02.220
Let's type a little bit of PHP now.

00:02:02.220 --> 00:02:04.710
You don't need to understand what this PHP is yet.

00:02:04.710 --> 00:02:09.410
I'm just showing you that dot PHP in the file name extension is actually really important,

00:02:09.410 --> 00:02:11.950
so I type echo test.

00:02:11.950 --> 00:02:14.110
And when I refresh the page,

00:02:14.110 --> 00:02:15.610
it says test perfect.

00:02:15.610 --> 00:02:25.690
But if I duplicate this page jazz bear with me as I duplicate this page and I'm gonna call

00:02:25.690 --> 00:02:32.700
this one dot html so you can see that my syntax highlighting is has already changed.

00:02:32.700 --> 00:02:36.250
That's because I'm using a plug in in sublime.

00:02:36.250 --> 00:02:37.000
Now,

00:02:37.000 --> 00:02:42.960
if I go to it slash index dot html nothing shows up here,

00:02:42.960 --> 00:02:45.320
So I've got this whole PHP echo test.

00:02:45.320 --> 00:02:46.900
Nothing is showing up now.

00:02:46.900 --> 00:02:48.420
If I go in view this source,

00:02:48.420 --> 00:02:49.430
it will show up.

00:02:49.430 --> 00:02:49.990
Watch this.

00:02:49.990 --> 00:02:50.880
Look,

00:02:50.880 --> 00:02:51.400
there it is.

00:02:51.400 --> 00:02:52.120
Now,

00:02:52.120 --> 00:02:53.940
why does it not show up on the front page?

00:02:53.940 --> 00:02:58.540
Why does test not show up here but showed up in the index dot PHP file And again,

00:02:58.540 --> 00:03:02.110
I'll just show you as a demonstration that boom There it is.

00:03:02.110 --> 00:03:02.960
It's says test.

00:03:02.960 --> 00:03:04.560
And when I go to html file,

00:03:04.560 --> 00:03:05.890
it doesn't say anything,

00:03:05.890 --> 00:03:08.080
but in the source,

00:03:08.080 --> 00:03:08.730
it's there.

00:03:08.730 --> 00:03:09.070
Now.

00:03:09.070 --> 00:03:13.530
The reason for this is because your browser is looking for these opening and closing

00:03:13.530 --> 00:03:16.050
brackets these greater than less than symbols.

00:03:16.050 --> 00:03:19.570
It's trying to interpret that this is HTML,

00:03:19.570 --> 00:03:22.030
but it doesn't understand what it is so it's not showing it,

00:03:22.030 --> 00:03:23.720
but it's still in the source.

00:03:23.720 --> 00:03:25.010
Okay,

00:03:25.010 --> 00:03:29.740
so jumping back to the index dot PHP farms and close these down real quick and go back to

00:03:29.740 --> 00:03:31.150
the PHP file.

00:03:31.150 --> 00:03:32.530
Boom.

00:03:32.530 --> 00:03:33.160
There it is.

00:03:33.160 --> 00:03:34.340
Now,

00:03:34.340 --> 00:03:35.340
our server.

00:03:35.340 --> 00:03:35.750
Ah,

00:03:35.750 --> 00:03:37.270
whether you run example map,

00:03:37.270 --> 00:03:37.680
doctor,

00:03:37.680 --> 00:03:38.130
whatever.

00:03:38.130 --> 00:03:43.290
Whatever is running PHP on your computer right now is looking for that dot PHP file

00:03:43.290 --> 00:03:43.820
extension.

00:03:43.820 --> 00:03:44.480
Without it,

00:03:44.480 --> 00:03:45.330
it doesn't run.

00:03:45.330 --> 00:03:47.080
It just renders as regular HTML.

00:03:47.080 --> 00:03:47.230
Now,

00:03:47.230 --> 00:03:49.650
when we look at the source of this PHP file,

00:03:49.650 --> 00:03:56.150
we don't see this PHP echo this closing syntax again.

00:03:56.150 --> 00:03:57.050
Don't worry about what that is.

00:03:57.050 --> 00:03:58.280
We don't see any of that.

00:03:58.280 --> 00:04:01.290
All we see is test.

00:04:01.290 --> 00:04:01.840
Now,

00:04:01.840 --> 00:04:03.740
this is part of the power behind PHP.

00:04:03.740 --> 00:04:04.910
When you write Ph.

00:04:04.910 --> 00:04:06.740
B inside of an HTML file,

00:04:06.740 --> 00:04:08.270
recall this a template.

00:04:08.270 --> 00:04:11.620
It doesn't show your PHP code at all.

00:04:11.620 --> 00:04:12.880
In fact,

00:04:12.880 --> 00:04:15.360
it's only going to show what it's supposed to show.

00:04:15.360 --> 00:04:20.530
And that hides what's called your source code so people can't just open up your website and

00:04:20.530 --> 00:04:23.650
steal your code because they don't know what is running in here.

00:04:23.650 --> 00:04:30.660
They don't know if it's checking to see if someone is signed in or locked out.

00:04:30.660 --> 00:04:32.740
Or if they have a certain permission,

00:04:32.740 --> 00:04:37.050
or if they're allowed to do something or not allowed to do something or if they have a

00:04:37.050 --> 00:04:41.480
certain gender or if they're older than 18 or any sort of website verification.

00:04:41.480 --> 00:04:46.560
They don't know that in the code because your source code is hidden with this beautiful PHP

00:04:46.560 --> 00:04:46.840
tag.

00:04:46.840 --> 00:04:48.490
So essentially,

00:04:48.490 --> 00:04:51.020
this is what a PHP file is.

00:04:51.020 --> 00:04:52.750
Don't sweat it too much.

00:04:52.750 --> 00:04:55.100
You're going to get used to all of this again.

00:04:55.100 --> 00:04:56.290
If you're feeling a little overwhelmed,

00:04:56.290 --> 00:05:01.480
just bear with be once we actually start digging into this and starts typing our own html

00:05:01.480 --> 00:05:02.750
not html rather.

00:05:02.750 --> 00:05:04.460
I mean PHP.

00:05:04.460 --> 00:05:05.330
Sorry about that one.

00:05:05.330 --> 00:05:07.210
Once we start writing our own PHP,

00:05:07.210 --> 00:05:09.140
this is going to make a lot more sense to you,

00:05:09.140 --> 00:05:09.790
I promise.

00:05:09.790 --> 00:05:11.050
But for now,

00:05:11.050 --> 00:05:14.950
what you need to know is that every time you write a PHP file,

00:05:14.950 --> 00:05:24.170
it needs to end in dot PHP not dot txt not dot html not dot abc not 0.0.0.0.0.123 not dot

00:05:24.170 --> 00:05:28.210
CS s not dot Js every file and let me write this down.

00:05:28.210 --> 00:05:32.980
Every file must end in dot PHP.

00:05:32.980 --> 00:05:36.080
That extension is incredibly important.

00:05:36.080 --> 00:05:37.740
That's how Apache,

00:05:37.740 --> 00:05:39.760
which is like the middle man on your server.

00:05:39.760 --> 00:05:41.670
It's the one that reads the PHP files and says,

00:05:41.670 --> 00:05:42.330
Okay.

00:05:42.330 --> 00:05:43.050
Ah,

00:05:43.050 --> 00:05:44.150
I'm gonna read what this is.

00:05:44.150 --> 00:05:50.150
And I'm only going to actually help you display the word test so Apache and again we'll

00:05:50.150 --> 00:05:51.240
talk about Apache much,

00:05:51.240 --> 00:05:51.470
much,

00:05:51.470 --> 00:05:52.310
much down the road.

00:05:52.310 --> 00:05:53.650
You don't need to know too much about that.

00:05:53.650 --> 00:05:56.300
But Apache is the guy that says,

00:05:56.300 --> 00:05:56.850
Oh,

00:05:56.850 --> 00:05:57.960
your PHP file.

00:05:57.960 --> 00:05:58.620
Guess what?

00:05:58.620 --> 00:05:59.730
I know how to handle us.

00:05:59.730 --> 00:06:00.690
This is PHP.

00:06:00.690 --> 00:06:01.860
This is what I do.

00:06:01.860 --> 00:06:02.860
This is my thing.

00:06:02.860 --> 00:06:05.260
I'm only going to show you the PHP.

00:06:05.260 --> 00:06:07.470
I'm not gonna render this like HTML like you normally would.

00:06:07.470 --> 00:06:10.200
I'm gonna render this like PHP because that's what this file is.

00:06:10.200 --> 00:06:18.060
So that is the long winded explanation off what a PHP file essentially is.

00:06:18.060 --> 00:06:20.500
So just remember,

00:06:20.500 --> 00:06:22.700
if you're gonna takes one thing away from this lesson,

00:06:22.700 --> 00:06:26.610
that all your PHP files need to end in dot p h p

