WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.510
Hello.

00:00:01.510 --> 00:00:02.150
Welcome back.

00:00:02.150 --> 00:00:04.750
First I want to start off with a joke.

00:00:04.750 --> 00:00:07.290
If Harrison Ford was a programmer,

00:00:07.290 --> 00:00:09.270
we would probably call him compares.

00:00:09.270 --> 00:00:11.530
And Ford want,

00:00:11.530 --> 00:00:12.750
want Want?

00:00:12.750 --> 00:00:13.350
Uh,

00:00:13.350 --> 00:00:14.440
okay.

00:00:14.440 --> 00:00:16.850
Comparison operators we actually know about already.

00:00:16.850 --> 00:00:17.980
Remember,

00:00:17.980 --> 00:00:20.430
in last several episodes or lessons,

00:00:20.430 --> 00:00:22.350
we said if age is equal to something,

00:00:22.350 --> 00:00:22.570
something,

00:00:22.570 --> 00:00:23.010
something.

00:00:23.010 --> 00:00:23.890
Right.

00:00:23.890 --> 00:00:26.260
This here is your comparison operator.

00:00:26.260 --> 00:00:26.420
Well,

00:00:26.420 --> 00:00:26.690
actually,

00:00:26.690 --> 00:00:28.340
this is called your conditional statement.

00:00:28.340 --> 00:00:29.890
And this is your comparison,

00:00:29.890 --> 00:00:30.350
operator.

00:00:30.350 --> 00:00:34.130
Is it equal to Is a greater then is that less than is a greater than or equal to?

00:00:34.130 --> 00:00:34.990
And we said,

00:00:34.990 --> 00:00:35.430
Okay,

00:00:35.430 --> 00:00:38.300
if the age is greater than or equal to 18 do something.

00:00:38.300 --> 00:00:38.920
Otherwise,

00:00:38.920 --> 00:00:39.910
you are still a child.

00:00:39.910 --> 00:00:41.380
You are still,

00:00:41.380 --> 00:00:42.460
kiddo.

00:00:42.460 --> 00:00:44.680
Cool.

00:00:44.680 --> 00:00:46.650
So we know all about that stuff now.

00:00:46.650 --> 00:00:49.620
But there are some other ways we can do things to.

00:00:49.620 --> 00:00:51.240
Because what happens if we want to check?

00:00:51.240 --> 00:00:55.450
If someone's age is less than 18 now,

00:00:55.450 --> 00:00:56.480
there's something else we can do.

00:00:56.480 --> 00:00:59.350
Let's say we want to check to see if someone's age was 18.

00:00:59.350 --> 00:01:00.830
Okay,

00:01:00.830 --> 00:01:03.550
you are 18 years old.

00:01:03.550 --> 00:01:05.250
All right.

00:01:05.250 --> 00:01:06.610
Simple enough.

00:01:06.610 --> 00:01:09.540
But what if we want to check to see if someone's age was not 18.

00:01:09.540 --> 00:01:10.400
Literally.

00:01:10.400 --> 00:01:16.820
Anything else we would have to say if age is equal to you 18 but nothing in here and just

00:01:16.820 --> 00:01:18.260
execute everything in an else statement.

00:01:18.260 --> 00:01:18.870
So essentially,

00:01:18.870 --> 00:01:20.650
what that would look like is this.

00:01:20.650 --> 00:01:25.550
I don't even know how to do this because they look so weird.

00:01:25.550 --> 00:01:27.670
Okay,

00:01:27.670 --> 00:01:29.380
let's Ah,

00:01:29.380 --> 00:01:31.640
I get Yeah,

00:01:31.640 --> 00:01:31.930
I don't know.

00:01:31.930 --> 00:01:32.900
I guess something like this.

00:01:32.900 --> 00:01:33.470
Anyways,

00:01:33.470 --> 00:01:34.830
we don't do that in programming.

00:01:34.830 --> 00:01:37.720
The reason for that is because this is far too much code.

00:01:37.720 --> 00:01:39.370
And if you ever thinking Wow,

00:01:39.370 --> 00:01:40.950
this is actually not that much code.

00:01:40.950 --> 00:01:42.550
It's only a few characters of typing.

00:01:42.550 --> 00:01:44.120
Don't be so lazy,

00:01:44.120 --> 00:01:44.540
Caleb.

00:01:44.540 --> 00:01:44.710
Well,

00:01:44.710 --> 00:01:45.130
guess what.

00:01:45.130 --> 00:01:45.860
Here's a secret.

00:01:45.860 --> 00:01:50.280
Programmers write reusable code because ultimately we are lazy.

00:01:50.280 --> 00:01:52.650
We do not want to do more typing than we have to.

00:01:52.650 --> 00:01:59.480
And this has been a programming sort of concept of fallacy.

00:01:59.480 --> 00:01:59.550
Oh,

00:01:59.550 --> 00:02:07.190
rule that we have been doing for well since the first programming language came out decades

00:02:07.190 --> 00:02:08.290
and decades and decades ago.

00:02:08.290 --> 00:02:13.130
So what if we said we want to get someone's age who is not 18 while we need a different

00:02:13.130 --> 00:02:16.850
comparison operator for this one we need is not 18.

00:02:16.850 --> 00:02:19.580
So I'm gonna go ahead,

00:02:19.580 --> 00:02:21.050
scrap this real quick.

00:02:21.050 --> 00:02:25.690
And now I'm going to say age is equal to 18.

00:02:25.690 --> 00:02:26.190
Okay.

00:02:26.190 --> 00:02:27.440
I wish I was still 18.

00:02:27.440 --> 00:02:28.950
Would never nice.

00:02:28.950 --> 00:02:31.280
And and now I want to say,

00:02:31.280 --> 00:02:33.540
if my age is not 18 do something.

00:02:33.540 --> 00:02:35.030
So in this case,

00:02:35.030 --> 00:02:36.480
we're not going to type.

00:02:36.480 --> 00:02:40.890
If age is equal to 18 ignore this else.

00:02:40.890 --> 00:02:41.900
Do something in here.

00:02:41.900 --> 00:02:42.930
We're not going to do that.

00:02:42.930 --> 00:02:43.650
That's gross.

00:02:43.650 --> 00:02:45.170
And also,

00:02:45.170 --> 00:02:46.200
that's no way to live your life.

00:02:46.200 --> 00:02:46.610
So what?

00:02:46.610 --> 00:02:49.390
You saw me just right there is the not operator.

00:02:49.390 --> 00:02:51.490
This is not equal to 18.

00:02:51.490 --> 00:02:55.790
So that's just take a look at this.

00:02:55.790 --> 00:02:59.360
So equals means is equal to,

00:02:59.360 --> 00:03:05.760
and this one means is not equal to And in fact,

00:03:05.760 --> 00:03:07.550
those should not be in the bottom should be up here.

00:03:07.550 --> 00:03:09.140
If age is not equal.

00:03:09.140 --> 00:03:17.050
Dio you are not 18 and in fact nothing shows up because this is actually false.

00:03:17.050 --> 00:03:20.040
That's this is what the computer is looking at.

00:03:20.040 --> 00:03:22.290
The computer that is executing this code right now is saying,

00:03:22.290 --> 00:03:27.650
if 18 is not 18 execute some code.

00:03:27.650 --> 00:03:28.450
Ah,

00:03:28.450 --> 00:03:34.710
but in fact 18 is 18 year because 18 can only ever be one number that can only ever be

00:03:34.710 --> 00:03:35.350
itself.

00:03:35.350 --> 00:03:37.810
This is false.

00:03:37.810 --> 00:03:41.500
This is where the ah,

00:03:41.500 --> 00:03:43.540
the true and false logic.

00:03:43.540 --> 00:03:45.460
It gets a little bit tricky at first.

00:03:45.460 --> 00:03:45.790
Once,

00:03:45.790 --> 00:03:48.510
once you start learning about this kind of logic,

00:03:48.510 --> 00:03:49.740
okay,

00:03:49.740 --> 00:03:50.910
age is not equal dating.

00:03:50.910 --> 00:03:53.930
So what I'm gonna do is understand to go through a bunch of examples here,

00:03:53.930 --> 00:03:57.030
and I am going to kill this thing,

00:03:57.030 --> 00:03:58.860
and I'm just gonna drill it into your head.

00:03:58.860 --> 00:04:00.110
And once you've got it,

00:04:00.110 --> 00:04:01.330
you could probably just turn the video often.

00:04:01.330 --> 00:04:02.640
Go over to the next one if you want to.

00:04:02.640 --> 00:04:07.080
But if you don't necessarily understand all of it or you feel like you want,

00:04:07.080 --> 00:04:07.640
um,

00:04:07.640 --> 00:04:10.710
a better understanding feel free to hang around for a couple more minutes.

00:04:10.710 --> 00:04:12.160
Okay,

00:04:12.160 --> 00:04:13.250
So I refresh the page and says,

00:04:13.250 --> 00:04:17.960
You're not 18 because my age is now 20 and in the opposite,

00:04:17.960 --> 00:04:20.480
I could say you are 18.

00:04:20.480 --> 00:04:20.880
Nope,

00:04:20.880 --> 00:04:22.390
that's 1918.

00:04:22.390 --> 00:04:28.190
That's 1 81 and still says you were not 18.

00:04:28.190 --> 00:04:29.650
That is okay.

00:04:29.650 --> 00:04:30.490
In fact,

00:04:30.490 --> 00:04:31.380
that's actually what we want.

00:04:31.380 --> 00:04:32.550
Your age is not 18.

00:04:32.550 --> 00:04:36.410
If we said your age is 18 well,

00:04:36.410 --> 00:04:41.890
this will give us the wrong answer because this should actually say you are in fact 18.

00:04:41.890 --> 00:04:45.250
See,

00:04:45.250 --> 00:04:49.650
you are not 18 but in fact you are 18.

00:04:49.650 --> 00:04:51.890
So here's where it gets blurry.

00:04:51.890 --> 00:04:53.950
Because I changed one number.

00:04:53.950 --> 00:04:59.450
And now the text that is being output to my browser is backwards.

00:04:59.450 --> 00:05:02.350
So I'm gonna refresh this so it comes back to normal.

00:05:02.350 --> 00:05:10.310
Says you are 18 and let's undo this one.

00:05:10.310 --> 00:05:13.050
So it's checking to see if I am not 18.

00:05:13.050 --> 00:05:15.550
You are not 18.

00:05:15.550 --> 00:05:16.830
Cool.

00:05:16.830 --> 00:05:17.080
Okay,

00:05:17.080 --> 00:05:18.000
so let's check another one.

00:05:18.000 --> 00:05:19.450
Let's let's do a name.

00:05:19.450 --> 00:05:21.350
Let's do Caleb.

00:05:21.350 --> 00:05:28.680
If name does not equal Caleb Echo,

00:05:28.680 --> 00:05:31.150
you are not the teacher.

00:05:31.150 --> 00:05:34.840
It doesn't show up.

00:05:34.840 --> 00:05:35.140
Why?

00:05:35.140 --> 00:05:36.460
Because I'm the teacher.

00:05:36.460 --> 00:05:37.770
But what if my name was not killed?

00:05:37.770 --> 00:05:41.370
Would what if my name was Iron Man?

00:05:41.370 --> 00:05:42.780
Is it?

00:05:42.780 --> 00:05:43.470
Is it two words?

00:05:43.470 --> 00:05:45.350
Is that Iron Man or is it Iron Man?

00:05:45.350 --> 00:05:47.040
I don't know.

00:05:47.040 --> 00:05:47.600
Ok,

00:05:47.600 --> 00:05:49.110
so my name is now Iron Man.

00:05:49.110 --> 00:05:51.650
And it is saying if your name is not Caleb,

00:05:51.650 --> 00:05:51.980
guess what?

00:05:51.980 --> 00:05:52.850
You're not the teacher,

00:05:52.850 --> 00:05:54.400
and here it is.

00:05:54.400 --> 00:05:58.490
You are not the teacher because your name is not Caleb.

00:05:58.490 --> 00:06:03.310
The only person that could be killed the only the one condition that will execute this code

00:06:03.310 --> 00:06:05.240
is using the not operator,

00:06:05.240 --> 00:06:06.710
the opposite operator.

00:06:06.710 --> 00:06:09.850
It is using the not equal to operator.

00:06:09.850 --> 00:06:14.730
Now we've already learned about a bunch of other ones,

00:06:14.730 --> 00:06:18.390
so we know about greater than less than and greater than equal to less than or equal to

00:06:18.390 --> 00:06:20.420
equal to not equal Teoh.

00:06:20.420 --> 00:06:21.780
And there's one more.

00:06:21.780 --> 00:06:22.500
And this one is very,

00:06:22.500 --> 00:06:22.990
very tricky.

00:06:22.990 --> 00:06:25.780
And this is where you need to know your data types.

00:06:25.780 --> 00:06:27.580
So let's do this.

00:06:27.580 --> 00:06:32.680
Data types are important now,

00:06:32.680 --> 00:06:33.200
granted,

00:06:33.200 --> 00:06:35.170
they are less important in PHP,

00:06:35.170 --> 00:06:37.110
but and pretty much every other language in the world,

00:06:37.110 --> 00:06:38.450
they are wildly important.

00:06:38.450 --> 00:06:40.070
And if you want more efficient code,

00:06:40.070 --> 00:06:43.410
if you want something to be faster even in your JavaScript,

00:06:43.410 --> 00:06:46.630
you're gonna want to use this bad boy.

00:06:46.630 --> 00:06:47.680
Three equal signs.

00:06:47.680 --> 00:06:49.750
It means not only is the equal to,

00:06:49.750 --> 00:06:52.150
but it is the same data type.

00:06:52.150 --> 00:06:55.040
Now let's let's take a look at this.

00:06:55.040 --> 00:06:58.760
I'm gonna create a bunch of room here so that we can see what we're working with.

00:06:58.760 --> 00:07:04.740
And I'm gonna split this up with a horizontal rule because I like doing that visually and

00:07:04.740 --> 00:07:05.950
this next section here.

00:07:05.950 --> 00:07:08.600
Ah,

00:07:08.600 --> 00:07:12.210
let's put this as Baba Baba.

00:07:12.210 --> 00:07:13.180
What should we do?

00:07:13.180 --> 00:07:14.660
Number of books.

00:07:14.660 --> 00:07:15.890
How many books do you have?

00:07:15.890 --> 00:07:16.460
OK,

00:07:16.460 --> 00:07:18.250
you have got three books.

00:07:18.250 --> 00:07:24.150
If books is equal to three Echo,

00:07:24.150 --> 00:07:26.450
you have three books.

00:07:26.450 --> 00:07:27.190
Remember,

00:07:27.190 --> 00:07:30.890
this is using Think of this as a soft comparison,

00:07:30.890 --> 00:07:32.800
so it's not only checking to see if this is three,

00:07:32.800 --> 00:07:34.400
but this will also match.

00:07:34.400 --> 00:07:37.020
And let's do it else.

00:07:37.020 --> 00:07:46.620
If else if books is equal to three Echo books,

00:07:46.620 --> 00:07:55.350
is three and let's put this in here into Let's put this one in here string and else echo

00:07:55.350 --> 00:07:58.310
something else just as sort of a catch.

00:07:58.310 --> 00:08:02.230
All right now on that failed.

00:08:02.230 --> 00:08:03.130
Here we go.

00:08:03.130 --> 00:08:04.030
Put that back in there.

00:08:04.030 --> 00:08:04.440
There we go.

00:08:04.440 --> 00:08:05.600
It says You have three books.

00:08:05.600 --> 00:08:06.450
It's a string.

00:08:06.450 --> 00:08:07.330
Well,

00:08:07.330 --> 00:08:09.110
that's because remember,

00:08:09.110 --> 00:08:10.800
PHP is a loosely written language.

00:08:10.800 --> 00:08:12.790
So three ah,

00:08:12.790 --> 00:08:14.300
with quotations around,

00:08:14.300 --> 00:08:15.430
it is technically a string,

00:08:15.430 --> 00:08:16.950
but also matches three.

00:08:16.950 --> 00:08:19.160
And so when you refresh the page,

00:08:19.160 --> 00:08:19.800
nothing changes.

00:08:19.800 --> 00:08:22.510
But let's talk about a strict comparison.

00:08:22.510 --> 00:08:25.270
A strict comparison is checking not only the value,

00:08:25.270 --> 00:08:26.520
so the value has to be three,

00:08:26.520 --> 00:08:29.090
but the data type has to be the same.

00:08:29.090 --> 00:08:32.150
So the data type of books has to match the data type of this.

00:08:32.150 --> 00:08:36.250
Now we know that this is a string and this is an int.

00:08:36.250 --> 00:08:41.550
So this is the exact same as saying Ah,

00:08:41.550 --> 00:08:50.300
if and is equal to string executes encoding here.

00:08:50.300 --> 00:08:52.030
That's essentially what this is saying.

00:08:52.030 --> 00:08:53.370
So this will no longer run.

00:08:53.370 --> 00:08:54.370
And when I refresh,

00:08:54.370 --> 00:08:56.020
the page says Books is equal to three,

00:08:56.020 --> 00:08:58.800
and now that's because this match is now.

00:08:58.800 --> 00:09:00.690
This is also a soft comparison.

00:09:00.690 --> 00:09:02.460
If we wanted to do a strict comparison,

00:09:02.460 --> 00:09:04.350
this will still follow through,

00:09:04.350 --> 00:09:07.710
and I'm refreshing the page.

00:09:07.710 --> 00:09:12.450
You might be able to hear me just slamming on that command are there and refreshingly crazy

00:09:12.450 --> 00:09:13.550
and nothing is changing.

00:09:13.550 --> 00:09:17.070
And that's because this is saying,

00:09:17.070 --> 00:09:18.050
essentially,

00:09:18.050 --> 00:09:20.160
let's do this.

00:09:20.160 --> 00:09:21.550
Ah,

00:09:21.550 --> 00:09:26.220
create a comment here just so we can sort of see ah,

00:09:26.220 --> 00:09:30.650
the difference Bear with me While I learned how to use my keyboard,

00:09:30.650 --> 00:09:33.220
this is saying if books,

00:09:33.220 --> 00:09:34.970
which is an end,

00:09:34.970 --> 00:09:35.870
is equal to three,

00:09:35.870 --> 00:09:37.210
which is also an end,

00:09:37.210 --> 00:09:40.650
an integer then execute this code.

00:09:40.650 --> 00:09:46.050
Know what this is also saying is if three is equal to three,

00:09:46.050 --> 00:09:50.990
it's also checking to see if three is not equal to three.

00:09:50.990 --> 00:09:52.630
It's doing all of these things.

00:09:52.630 --> 00:09:59.140
So the three equal signs have to be a perfect match now in PHP.

00:09:59.140 --> 00:10:03.760
A lot of the times you're not going to see this triple equal signs the strict comparison.

00:10:03.760 --> 00:10:06.850
Too often it's It's a lot more rare than you think in PHP,

00:10:06.850 --> 00:10:11.400
but it is making huge strides in last couple of years.

00:10:11.400 --> 00:10:12.750
A lot of people are starting to use it.

00:10:12.750 --> 00:10:15.790
And with the accelerated growth of JavaScript,

00:10:15.790 --> 00:10:19.450
which uses the strict comparison quite a bit,

00:10:19.450 --> 00:10:25.500
you will see yourself using the strict comparison more and more as as the years go on.

00:10:25.500 --> 00:10:30.010
So I'm just gonna do some of this stuff because that's making the code real ugly.

00:10:30.010 --> 00:10:36.890
And so here is the difference between district and not strict.

00:10:36.890 --> 00:10:37.150
Now,

00:10:37.150 --> 00:10:38.660
if you didn't fully understand that,

00:10:38.660 --> 00:10:43.250
what I would suggest for you to do is to write this code out manually.

00:10:43.250 --> 00:10:44.980
Don't copy and pasted,

00:10:44.980 --> 00:10:47.750
don't grab the source code in and just try to edit my code.

00:10:47.750 --> 00:10:52.220
I want you to write it opened manually because there's something about getting your hands

00:10:52.220 --> 00:10:57.380
dirty and getting in there and just trying to figure something out on your own.

00:10:57.380 --> 00:10:59.400
That sort of makes it clicking your brand.

00:10:59.400 --> 00:11:00.080
Mexico.

00:11:00.080 --> 00:11:00.590
Oh,

00:11:00.590 --> 00:11:01.550
I get it now.

00:11:01.550 --> 00:11:02.640
Now,

00:11:02.640 --> 00:11:05.550
if you are still confused about all of this,

00:11:05.550 --> 00:11:09.640
please go back to the comparison lesson.

00:11:09.640 --> 00:11:11.130
I guess this is a comparison.

00:11:11.130 --> 00:11:11.390
Listen,

00:11:11.390 --> 00:11:13.880
go back to the lesson on Ah,

00:11:13.880 --> 00:11:15.120
where was it?

00:11:15.120 --> 00:11:15.720
Uh,

00:11:15.720 --> 00:11:18.250
if statements we talked about,

00:11:18.250 --> 00:11:22.110
um conditional Greater than less than equal to.

00:11:22.110 --> 00:11:24.290
We talked about those in the if statements lesson.

00:11:24.290 --> 00:11:33.880
And if you still don't understand the difference between the ah strict comparison and the I

00:11:33.880 --> 00:11:37.380
call it soft comparison but the less strict comparison where there's only two equal signs

00:11:37.380 --> 00:11:38.130
um,

00:11:38.130 --> 00:11:39.820
go back to the data types lesson.

00:11:39.820 --> 00:11:40.180
That's,

00:11:40.180 --> 00:11:41.150
ah lesson.

00:11:41.150 --> 00:11:42.360
I've got as 1 30 here.

00:11:42.360 --> 00:11:43.800
So less than 13 ish,

00:11:43.800 --> 00:11:45.250
depending on which platform your,

00:11:45.250 --> 00:11:50.150
uh you're learning depending on what platform you're taking this course on.

00:11:50.150 --> 00:11:51.820
Ah,

00:11:51.820 --> 00:11:53.590
but there we have it in here as well.

00:11:53.590 --> 00:11:56.050
We've got inst floats.

00:11:56.050 --> 00:11:56.750
Ah,

00:11:56.750 --> 00:11:56.850
well,

00:11:56.850 --> 00:11:58.250
that stuff is in here for you.

00:11:58.250 --> 00:12:01.530
So go ahead.

00:12:01.530 --> 00:12:02.570
Give that a shot.

00:12:02.570 --> 00:12:05.270
You don't have to master this one either.

00:12:05.270 --> 00:12:07.020
You don't have to be Ah,

00:12:07.020 --> 00:12:08.340
professional or an expert.

00:12:08.340 --> 00:12:13.330
You don't have to be able to have full conversations about this yet because in the future

00:12:13.330 --> 00:12:16.710
is going to be writing so many of these that it's just going to be second nature for you.

00:12:16.710 --> 00:12:18.130
So go ahead,

00:12:18.130 --> 00:12:19.470
Give some of this a shot,

00:12:19.470 --> 00:12:20.620
check it out.

00:12:20.620 --> 00:12:24.250
Definitely learned the is not equal to this part is vital.

00:12:24.250 --> 00:12:27.730
You need to know this one the is not equal to is very,

00:12:27.730 --> 00:12:28.530
very important.

00:12:28.530 --> 00:12:29.680
And just as a reminder,

00:12:29.680 --> 00:12:31.750
why does this work?

00:12:31.750 --> 00:12:39.790
Because name is not Caleb.

00:12:39.790 --> 00:12:41.290
It's the same thing,

00:12:41.290 --> 00:12:42.030
right?

00:12:42.030 --> 00:12:43.150
This is true.

00:12:43.150 --> 00:12:47.850
The statement is true because Iron Man is not equal to Caleb because,

00:12:47.850 --> 00:12:48.580
um,

00:12:48.580 --> 00:12:51.950
in here 20 is not equal to 18.

00:12:51.950 --> 00:12:54.460
These are true.

00:12:54.460 --> 00:12:56.860
It's sort of like a backwards logic here,

00:12:56.860 --> 00:13:01.670
but it's not really backwards in the sense that sort of just in versed in the sense that

00:13:01.670 --> 00:13:03.300
this statement always has to be true.

00:13:03.300 --> 00:13:06.450
So I'm gonna undo those,

00:13:06.450 --> 00:13:07.290
um,

00:13:07.290 --> 00:13:07.820
and again,

00:13:07.820 --> 00:13:08.400
yet your task.

00:13:08.400 --> 00:13:11.610
Just get some hands on experience with that is not equal to operator.

00:13:11.610 --> 00:13:12.080
Um,

00:13:12.080 --> 00:13:15.770
and maybe try to play around with the strict comparison.

00:13:15.770 --> 00:13:18.130
And if you don't get it reference other lessons,

00:13:18.130 --> 00:13:19.030
and if you still don't get it,

00:13:19.030 --> 00:13:19.420
you know what?

00:13:19.420 --> 00:13:19.920
That's okay?

00:13:19.920 --> 00:13:21.550
Because eventually you will get it.

00:13:21.550 --> 00:13:23.550
It'll just click for you.

00:13:23.550 --> 00:13:24.460
Alright,

00:13:24.460 --> 00:13:26.450
that's enough of this lesson I'll see in the next one.

