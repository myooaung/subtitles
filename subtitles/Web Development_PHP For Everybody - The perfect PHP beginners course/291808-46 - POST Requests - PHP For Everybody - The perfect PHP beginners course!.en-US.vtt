WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.650
Hello.

00:00:01.650 --> 00:00:02.850
Welcome back in that last lesson,

00:00:02.850 --> 00:00:06.840
we talked about a get request form and you can actually see that I've still got the code.

00:00:06.840 --> 00:00:08.900
In there they get is the method.

00:00:08.900 --> 00:00:11.650
There's another super global variable called Post,

00:00:11.650 --> 00:00:14.950
and this one submits data a little bit differently from your form.

00:00:14.950 --> 00:00:19.800
Now there is a reason why we use the difference between get and post get.

00:00:19.800 --> 00:00:22.650
As we learned in that last lesson,

00:00:22.650 --> 00:00:24.980
all get requests are visible in the U.

00:00:24.980 --> 00:00:25.240
L.

00:00:25.240 --> 00:00:26.900
So if you were to type in your password,

00:00:26.900 --> 00:00:27.510
guess what?

00:00:27.510 --> 00:00:30.680
I would be able to see your password in a get request.

00:00:30.680 --> 00:00:32.050
You can see everything in the URL.

00:00:32.050 --> 00:00:34.260
So if you type someone's password or a credit card,

00:00:34.260 --> 00:00:34.590
guess what?

00:00:34.590 --> 00:00:35.170
That's terrible.

00:00:35.170 --> 00:00:37.250
Because not only can Google now index that,

00:00:37.250 --> 00:00:41.610
but that is actually visible and certain information like passwords,

00:00:41.610 --> 00:00:42.650
credit card numbers.

00:00:42.650 --> 00:00:43.130
Ah,

00:00:43.130 --> 00:00:44.270
social security number,

00:00:44.270 --> 00:00:45.430
social insurance numbers.

00:00:45.430 --> 00:00:49.500
Sensitive information should never be purely visible to the eye.

00:00:49.500 --> 00:00:53.520
And it should definitely never be accessible through the earl.

00:00:53.520 --> 00:00:54.020
Never,

00:00:54.020 --> 00:00:55.090
ever should that happen.

00:00:55.090 --> 00:01:01.440
And so to get around that we use this method called post and I'm gonna change this from get

00:01:01.440 --> 00:01:07.250
to post and what this does is instead of putting all of your data in the U.

00:01:07.250 --> 00:01:07.680
R L.

00:01:07.680 --> 00:01:11.230
What it does is it grabs that data and makes it invisible,

00:01:11.230 --> 00:01:12.760
but it's still accessible.

00:01:12.760 --> 00:01:15.280
So let's go ahead and give this a shot.

00:01:15.280 --> 00:01:16.870
I'm gonna type in my city name,

00:01:16.870 --> 00:01:18.970
so I gotta refresh here,

00:01:18.970 --> 00:01:21.440
type in my city named Edmonton and hit.

00:01:21.440 --> 00:01:21.910
Submit,

00:01:21.910 --> 00:01:23.760
and there's nothing in the well,

00:01:23.760 --> 00:01:26.760
there's nothing on the page because there's no PHP logic in here.

00:01:26.760 --> 00:01:33.390
But if I try to refresh the page so I command are or just click refresh even it says the

00:01:33.390 --> 00:01:34.550
page that you're looking for.

00:01:34.550 --> 00:01:34.990
Ah,

00:01:34.990 --> 00:01:36.230
use information that you entered.

00:01:36.230 --> 00:01:38.070
So it knows that we submitted the formal ready,

00:01:38.070 --> 00:01:41.730
and returning to that page might cause any action you took to be repeated.

00:01:41.730 --> 00:01:43.450
So if you ever see this,

00:01:43.450 --> 00:01:44.530
it's basically saying,

00:01:44.530 --> 00:01:46.300
if you hit continue,

00:01:46.300 --> 00:01:50.820
you might submit twice eso whether that's paying for something like You don't want to pay

00:01:50.820 --> 00:01:51.650
for something twice,

00:01:51.650 --> 00:01:52.050
do you?

00:01:52.050 --> 00:01:53.750
So you usually had council.

00:01:53.750 --> 00:01:55.030
In this case,

00:01:55.030 --> 00:01:57.030
it's totally fine because we're not using anything,

00:01:57.030 --> 00:01:57.980
actually,

00:01:57.980 --> 00:02:00.060
not using any logic at all with PHP yet,

00:02:00.060 --> 00:02:05.380
So we hit continue and nothing seems to change.

00:02:05.380 --> 00:02:05.830
Now.

00:02:05.830 --> 00:02:10.220
I'm just gonna refresh this page by going to the CRL instead of actually hitting Refresh.

00:02:10.220 --> 00:02:11.570
I just go up here and hit,

00:02:11.570 --> 00:02:11.980
Enter,

00:02:11.980 --> 00:02:13.890
um and that just reloads my page for me.

00:02:13.890 --> 00:02:15.410
So it doesn't give you that warning anymore.

00:02:15.410 --> 00:02:15.830
Now,

00:02:15.830 --> 00:02:18.600
like in that last lesson where we check the value,

00:02:18.600 --> 00:02:19.750
we could do the same thing here,

00:02:19.750 --> 00:02:21.850
and we are actually going to do the same thing,

00:02:21.850 --> 00:02:23.120
and then we're going to re factor.

00:02:23.120 --> 00:02:29.450
So PHP if is set post And the name,

00:02:29.450 --> 00:02:32.130
uh is city.

00:02:32.130 --> 00:02:32.240
Oh,

00:02:32.240 --> 00:02:37.990
this is something that I actually forgot to cover in the last lesson echo Post City.

00:02:37.990 --> 00:02:42.490
So what we're looking at here is,

00:02:42.490 --> 00:02:43.590
in fact,

00:02:43.590 --> 00:02:45.370
that's far too messy for anyone to read.

00:02:45.370 --> 00:02:49.880
So if we have did it did it did just making them space bear with me.

00:02:49.880 --> 00:02:51.030
Um,

00:02:51.030 --> 00:02:54.740
city is equal to post city.

00:02:54.740 --> 00:02:55.980
Okay,

00:02:55.980 --> 00:02:58.750
so we know that's post method comes from the method in the post form.

00:02:58.750 --> 00:03:05.220
But where the heck did we get city from what we got City from If we look in here,

00:03:05.220 --> 00:03:08.250
we've got this name is equal to when we can change just anything we want.

00:03:08.250 --> 00:03:11.510
We changes to city name if we want to use Camel case,

00:03:11.510 --> 00:03:11.980
uh,

00:03:11.980 --> 00:03:16.450
or if we want you snake case city name or really anything we want,

00:03:16.450 --> 00:03:17.170
don't you,

00:03:17.170 --> 00:03:17.830
spaces?

00:03:17.830 --> 00:03:19.750
Because it's just a terrible practice.

00:03:19.750 --> 00:03:20.160
Ah,

00:03:20.160 --> 00:03:24.920
and things can go terribly wrong on certain versions of PHP or certain server set ups.

00:03:24.920 --> 00:03:25.970
So never use that.

00:03:25.970 --> 00:03:27.430
Never use special characters.

00:03:27.430 --> 00:03:30.010
Just stick with plain old variable rules.

00:03:30.010 --> 00:03:30.750
So you can say,

00:03:30.750 --> 00:03:32.640
in fact,

00:03:32.640 --> 00:03:34.750
let's do that snake case city name,

00:03:34.750 --> 00:03:36.650
city name.

00:03:36.650 --> 00:03:41.070
And what I'm gonna do is I'm gonna comment this out because I just want to show you what

00:03:41.070 --> 00:03:41.450
this does.

00:03:41.450 --> 00:03:43.430
So if there is an air in there,

00:03:43.430 --> 00:03:44.500
so if its set,

00:03:44.500 --> 00:03:45.290
uh,

00:03:45.290 --> 00:03:46.340
did it did it did,

00:03:46.340 --> 00:03:46.850
uh,

00:03:46.850 --> 00:03:50.090
s we did if is set Post city.

00:03:50.090 --> 00:03:50.840
Ah,

00:03:50.840 --> 00:03:55.110
that actually use a change to city name Echo Post City.

00:03:55.110 --> 00:03:57.450
That's also needs to change city name.

00:03:57.450 --> 00:03:59.150
Um,

00:03:59.150 --> 00:04:01.830
so this is actually not going to fix anything.

00:04:01.830 --> 00:04:02.570
And in fact,

00:04:02.570 --> 00:04:05.430
let's let's use this as an example.

00:04:05.430 --> 00:04:05.740
Okay,

00:04:05.740 --> 00:04:10.290
so we've got code and granted when you're using your editor is gonna look a lot cleaner

00:04:10.290 --> 00:04:12.900
because your lines are going to be a lot smaller.

00:04:12.900 --> 00:04:14.810
I've got mine zoomed in so that you can see things.

00:04:14.810 --> 00:04:15.360
Ah,

00:04:15.360 --> 00:04:17.150
little more clearly for it.

00:04:17.150 --> 00:04:18.520
In a lot of PHP,

00:04:18.520 --> 00:04:21.510
you're going to see things like this and it gets so hard to read.

00:04:21.510 --> 00:04:25.680
So what I like to do is I like I call it re factoring a lot of depth scullery factory.

00:04:25.680 --> 00:04:30.890
But essentially what you're doing is you're taking the logic out of this one attributes and

00:04:30.890 --> 00:04:36.050
you're just going to say Echo City named We did this in the last lesson as well.

00:04:36.050 --> 00:04:39.980
It's make this little nicer because we have all the free space in the world.

00:04:39.980 --> 00:04:40.820
So bam,

00:04:40.820 --> 00:04:41.450
there we go.

00:04:41.450 --> 00:04:42.320
Okay,

00:04:42.320 --> 00:04:43.970
so we've got input value type,

00:04:43.970 --> 00:04:46.010
value city.

00:04:46.010 --> 00:04:47.120
Name it.

00:04:47.120 --> 00:04:48.170
Save on this file.

00:04:48.170 --> 00:04:50.470
I'm close that other one because that was from last lesson.

00:04:50.470 --> 00:04:51.270
Refresh.

00:04:51.270 --> 00:04:52.050
Cool.

00:04:52.050 --> 00:04:54.110
But city name doesn't actually exist.

00:04:54.110 --> 00:04:56.120
And if you've got D buggers,

00:04:56.120 --> 00:04:58.580
you've got errors on this will throw you an error.

00:04:58.580 --> 00:05:01.450
Saying city aim has not been defined yet.

00:05:01.450 --> 00:05:08.190
So let's go ahead and to find that we've got City City named by default is always blank

00:05:08.190 --> 00:05:10.900
because we don't know if someone submitted the form or not.

00:05:10.900 --> 00:05:15.240
And that's the kind of logic that we're going to start employing throughout future lessons

00:05:15.240 --> 00:05:15.990
in PHP.

00:05:15.990 --> 00:05:18.200
And so now we can say,

00:05:18.200 --> 00:05:22.230
if is set post city underscore name.

00:05:22.230 --> 00:05:26.150
And remember that that city underscore name matches the name in here.

00:05:26.150 --> 00:05:36.120
We can overwrite the city named Variable with post city name save.

00:05:36.120 --> 00:05:37.010
And if I refresh,

00:05:37.010 --> 00:05:37.740
nothing's gonna happen.

00:05:37.740 --> 00:05:38.970
But if I type admittance,

00:05:38.970 --> 00:05:40.270
there we go,

00:05:40.270 --> 00:05:41.020
it stays in there.

00:05:41.020 --> 00:05:44.540
Now it's hard to tell because the page actually load so fast.

00:05:44.540 --> 00:05:46.920
You can't actually tell that anything has happened.

00:05:46.920 --> 00:05:49.400
So let's let's add some additional logic in here.

00:05:49.400 --> 00:05:53.110
Create some room for our code on we say,

00:05:53.110 --> 00:05:57.350
if is not empty city name.

00:05:57.350 --> 00:05:59.150
So it's not the default.

00:05:59.150 --> 00:06:02.120
The default is basically when you load the page,

00:06:02.120 --> 00:06:03.170
there is no city name.

00:06:03.170 --> 00:06:04.150
We know that from here,

00:06:04.150 --> 00:06:13.580
and we're going to get very PHP e with this and we're going to actually you know what?

00:06:13.580 --> 00:06:15.060
I like this on different lines,

00:06:15.060 --> 00:06:17.850
so it gives us some more somewhere reading room.

00:06:17.850 --> 00:06:21.260
Um I mean,

00:06:21.260 --> 00:06:22.000
it's a little uglier,

00:06:22.000 --> 00:06:22.780
but that's okay,

00:06:22.780 --> 00:06:24.180
s so basically,

00:06:24.180 --> 00:06:25.760
we've got some PHP logic in here.

00:06:25.760 --> 00:06:27.310
Let's put that on its own line.

00:06:27.310 --> 00:06:28.880
Let's put this on its own line.

00:06:28.880 --> 00:06:31.850
And now if there is a city name,

00:06:31.850 --> 00:06:35.670
we can put any sort of HTML in here because we've got our opening PHP logic.

00:06:35.670 --> 00:06:37.060
We've got a closing PHP logic,

00:06:37.060 --> 00:06:39.850
and now we can put in some HTML.

00:06:39.850 --> 00:06:40.210
So let's go,

00:06:40.210 --> 00:06:44.660
Div style background color.

00:06:44.660 --> 00:06:48.010
It would help if I could type background color,

00:06:48.010 --> 00:06:49.850
red color white.

00:06:49.850 --> 00:06:54.620
And that's,

00:06:54.620 --> 00:06:55.030
you know,

00:06:55.030 --> 00:06:57.250
let's make that font size big fun size.

00:06:57.250 --> 00:06:58.750
Let's make it like 45 pixels.

00:06:58.750 --> 00:06:59.580
That's pretty big,

00:06:59.580 --> 00:06:59.950
I think.

00:06:59.950 --> 00:07:08.450
And we can type echo groups City name refresh Its going to say,

00:07:08.450 --> 00:07:08.740
Oh,

00:07:08.740 --> 00:07:08.960
hey,

00:07:08.960 --> 00:07:10.330
you've already submitted this data.

00:07:10.330 --> 00:07:11.150
Do you want to do it again?

00:07:11.150 --> 00:07:11.700
In this case,

00:07:11.700 --> 00:07:11.910
Yes.

00:07:11.910 --> 00:07:12.510
Let's do it again.

00:07:12.510 --> 00:07:13.220
Oh,

00:07:13.220 --> 00:07:13.670
hello,

00:07:13.670 --> 00:07:14.510
There it is.

00:07:14.510 --> 00:07:22.960
And if we wanted to type a different city name So let's do like San Francisco or Frisco or

00:07:22.960 --> 00:07:23.780
Ah,

00:07:23.780 --> 00:07:28.110
Los Angeles or if we wanted to do really anything,

00:07:28.110 --> 00:07:29.450
it doesn't have to be a city name either.

00:07:29.450 --> 00:07:33.440
The only reason that we're using sitting name is because of label is specifying a city name

00:07:33.440 --> 00:07:33.440
,

00:07:33.440 --> 00:07:36.420
but we could put Caleb and look,

00:07:36.420 --> 00:07:37.450
this shows up for us now.

00:07:37.450 --> 00:07:43.260
So there we go when we're talking about the difference between get and post post.

00:07:43.260 --> 00:07:44.460
If you look up in the URL,

00:07:44.460 --> 00:07:45.510
it says nothing,

00:07:45.510 --> 00:07:47.260
there's nothing visible there.

00:07:47.260 --> 00:07:49.940
It is a lot more secure for using passwords,

00:07:49.940 --> 00:07:51.330
credit card numbers,

00:07:51.330 --> 00:07:52.130
all that stuff bolt.

00:07:52.130 --> 00:07:54.000
Although if you are using passwords,

00:07:54.000 --> 00:07:55.430
make sure use a proper hash.

00:07:55.430 --> 00:07:59.370
Should be one way encrypted should never be in plain text credit cards.

00:07:59.370 --> 00:07:59.820
Honestly,

00:07:59.820 --> 00:08:02.950
just never store those those air A terrible nightmare for most developers.

00:08:02.950 --> 00:08:06.520
Social insurance number Social Security number is also very sensitive.

00:08:06.520 --> 00:08:07.600
If you don't have to store it,

00:08:07.600 --> 00:08:11.240
don't store it again should never be stored in plain text.

00:08:11.240 --> 00:08:15.930
And the last thing I want to talk about here is just this method.

00:08:15.930 --> 00:08:18.580
So in the last lesson we talked about get in this last,

00:08:18.580 --> 00:08:19.590
we talked about post.

00:08:19.590 --> 00:08:32.020
So we know that when we have method is equal to yet we're post and that we can basically

00:08:32.020 --> 00:08:33.370
say that is going to be,

00:08:33.370 --> 00:08:35.250
get post or get.

00:08:35.250 --> 00:08:37.750
So we know that when the method is equal to get,

00:08:37.750 --> 00:08:41.080
we can use to get super global variable and when the method is equal to post,

00:08:41.080 --> 00:08:42.640
we can use the post super global variable.

00:08:42.640 --> 00:08:44.780
Now there's one more called request,

00:08:44.780 --> 00:08:47.900
and it will look for either get or a post.

00:08:47.900 --> 00:08:48.360
Ah,

00:08:48.360 --> 00:08:48.850
but honestly,

00:08:48.850 --> 00:08:53.560
don't use that because it's far too vague and nobody really knows if the request is get or

00:08:53.560 --> 00:08:54.100
a post.

00:08:54.100 --> 00:08:54.500
Um,

00:08:54.500 --> 00:08:56.010
and it's terrible for security.

00:08:56.010 --> 00:08:59.530
Nobody again knows if this request,

00:08:59.530 --> 00:09:03.330
Let's say password is in plain text or not.

00:09:03.330 --> 00:09:06.390
We like we don't know if this is coming in from the u L.

00:09:06.390 --> 00:09:09.130
But if we'd say Post,

00:09:09.130 --> 00:09:10.600
we know that it's not being stored in the u.

00:09:10.600 --> 00:09:10.980
R L.

00:09:10.980 --> 00:09:13.550
We can safely continue coding with the password.

00:09:13.550 --> 00:09:15.320
So there we go.

00:09:15.320 --> 00:09:19.350
We now know about get and post forms What I would like you to do.

00:09:19.350 --> 00:09:25.460
Your task for this lesson is create a post form just like what we have here.

00:09:25.460 --> 00:09:27.360
You don't have to worry about the re factoring,

00:09:27.360 --> 00:09:31.240
but I would suggest re factoring anyways just because it keeps your code a little cleaner.

00:09:31.240 --> 00:09:31.740
Ah,

00:09:31.740 --> 00:09:33.630
and it's easier to work with down the road.

00:09:33.630 --> 00:09:39.410
And then I want you to also write some PHP logic like this where you're you're not only

00:09:39.410 --> 00:09:42.280
mixing your PHP and your HTML,

00:09:42.280 --> 00:09:43.770
but you're going to open.

00:09:43.770 --> 00:09:44.170
Ah,

00:09:44.170 --> 00:09:45.280
your PHP syntax,

00:09:45.280 --> 00:09:45.700
right?

00:09:45.700 --> 00:09:47.260
Some logic and they're an if statement,

00:09:47.260 --> 00:09:48.050
you know all about those.

00:09:48.050 --> 00:09:48.350
Now,

00:09:48.350 --> 00:09:49.910
close your logic.

00:09:49.910 --> 00:09:52.260
Put some html in here.

00:09:52.260 --> 00:09:54.630
You put some more PHP in there as well on.

00:09:54.630 --> 00:09:59.600
Then you need to close it with your opening and closing PHP syntax so that this and this

00:09:59.600 --> 00:10:05.830
match as if it was a nicely flowing if statement with the brackets,

00:10:05.830 --> 00:10:07.030
cool beans.

00:10:07.030 --> 00:10:09.700
So once that's done had on overtime next lesson.

