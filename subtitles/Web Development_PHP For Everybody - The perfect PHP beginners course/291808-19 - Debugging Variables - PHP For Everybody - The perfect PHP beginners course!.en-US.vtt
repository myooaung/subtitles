WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.430
All right,

00:00:01.430 --> 00:00:03.370
welcome to another lesson on PHP.

00:00:03.370 --> 00:00:05.620
In this video,

00:00:05.620 --> 00:00:08.200
we're going to learn about the print our function.

00:00:08.200 --> 00:00:08.300
Now,

00:00:08.300 --> 00:00:08.720
this print,

00:00:08.720 --> 00:00:09.890
our function is actually very,

00:00:09.890 --> 00:00:14.590
very important because while you're learning PHP and while you're coding peach,

00:00:14.590 --> 00:00:17.370
but you're going to need to figure out how to debug.

00:00:17.370 --> 00:00:24.250
Debug is the act of basically running into a problem and coming up with a solution to Teoh

00:00:24.250 --> 00:00:26.750
mitigate or to remove that problem.

00:00:26.750 --> 00:00:28.210
Now,

00:00:28.210 --> 00:00:32.760
sometimes you'll write a variable or you have a typo and something just won't work and you

00:00:32.760 --> 00:00:33.660
don't really know why.

00:00:33.660 --> 00:00:38.970
And sometimes you don't have all the error logging turned on which you can turn on.

00:00:38.970 --> 00:00:42.450
We don't really get into error logging too much in this in this course,

00:00:42.450 --> 00:00:44.740
but you can turn your air logging on.

00:00:44.740 --> 00:00:47.990
Just remember that when you're in production on a live website to turn it off so that

00:00:47.990 --> 00:00:49.750
you're users never see those Ugly Evers.

00:00:49.750 --> 00:00:51.620
And so as an example,

00:00:51.620 --> 00:00:53.650
let's open up our PHP tags here,

00:00:53.650 --> 00:01:00.260
close them automatically like it's just a little bit bigger so you can see this and we can

00:01:00.260 --> 00:01:01.890
echo anything.

00:01:01.890 --> 00:01:02.730
We know how to do this.

00:01:02.730 --> 00:01:05.050
We know this is going to echo anything cool,

00:01:05.050 --> 00:01:06.950
boring stuff by now.

00:01:06.950 --> 00:01:12.020
So let's just jump right into printer That's type in.

00:01:12.020 --> 00:01:17.710
A name is equal to My name is Caleb.

00:01:17.710 --> 00:01:18.960
And if I type,

00:01:18.960 --> 00:01:21.850
print are and I put the variable in here,

00:01:21.850 --> 00:01:27.370
you see not a whole lot,

00:01:27.370 --> 00:01:30.850
because all that's doing is printing this name.

00:01:30.850 --> 00:01:33.570
Not incredibly useful,

00:01:33.570 --> 00:01:34.210
I know.

00:01:34.210 --> 00:01:36.810
But what if we have an array?

00:01:36.810 --> 00:01:38.030
So we have an array?

00:01:38.030 --> 00:01:40.850
We should be somewhat familiar with a raised by now.

00:01:40.850 --> 00:01:42.110
Really,

00:01:42.110 --> 00:01:44.940
It's just a fancy way of saying this is a list of things.

00:01:44.940 --> 00:01:53.150
So let's create Caleb and John and Zephyr.

00:01:53.150 --> 00:01:54.810
So we've gotten array.

00:01:54.810 --> 00:01:56.440
It's going here and changes to an eraser.

00:01:56.440 --> 00:01:57.850
We're going to print our this an array,

00:01:57.850 --> 00:02:02.450
and now we see something a lot different.

00:02:02.450 --> 00:02:06.030
So if I go into the source code here and refresh,

00:02:06.030 --> 00:02:10.660
you can see that it tells me that the array variable is an array.

00:02:10.660 --> 00:02:14.020
It's not giving me the name of the array variable.

00:02:14.020 --> 00:02:15.340
It just happens to be the same name.

00:02:15.340 --> 00:02:16.690
But we could changes to anything else,

00:02:16.690 --> 00:02:17.570
literally.

00:02:17.570 --> 00:02:18.450
Anything else.

00:02:18.450 --> 00:02:21.110
Nothing changes here.

00:02:21.110 --> 00:02:22.420
I refresh in this still sensory.

00:02:22.420 --> 00:02:24.020
So this tells me that my data type.

00:02:24.020 --> 00:02:27.110
Remember that lesson from a little while ago we were talking about data types.

00:02:27.110 --> 00:02:35.180
It tells me that anything else is now an array and that the zero index or the 1st 2nd and

00:02:35.180 --> 00:02:37.850
third items are Caleb joins effort now,

00:02:37.850 --> 00:02:44.680
knowing that and being able to see that I can say echo anything else.

00:02:44.680 --> 00:02:46.810
And if I wanted to echo Zephyrs name,

00:02:46.810 --> 00:02:49.750
I would type in two because that's the index that we see here.

00:02:49.750 --> 00:02:58.680
And when I whips and when I save the proper of age and refresh,

00:02:58.680 --> 00:02:59.650
we see his effort.

00:02:59.650 --> 00:03:00.210
And now,

00:03:00.210 --> 00:03:02.150
if I ever wanted to get John,

00:03:02.150 --> 00:03:04.540
I could also change.

00:03:04.540 --> 00:03:07.850
That's to a one save refresh and it says John.

00:03:07.850 --> 00:03:10.010
So now this is helping me debug things.

00:03:10.010 --> 00:03:12.560
Now this is actually a terrible example,

00:03:12.560 --> 00:03:14.150
because I can see the array.

00:03:14.150 --> 00:03:17.350
I can see that this is Index zero index one index to,

00:03:17.350 --> 00:03:20.140
so that's not helpful.

00:03:20.140 --> 00:03:22.980
But if you have a larger application,

00:03:22.980 --> 00:03:27.320
let's say there's 50 PHP files and you don't know where anything else is coming from.

00:03:27.320 --> 00:03:32.780
Anything else being the array and I was going to actually rename that just for simplicity

00:03:32.780 --> 00:03:33.180
sake,

00:03:33.180 --> 00:03:35.350
we don't know where this array is coming from.

00:03:35.350 --> 00:03:36.900
It could be from any other file.

00:03:36.900 --> 00:03:38.320
We could spend some time debugging it.

00:03:38.320 --> 00:03:43.860
We could spend some time looking in other files to figure out exactly what is in here.

00:03:43.860 --> 00:03:44.950
But really,

00:03:44.950 --> 00:03:48.160
all we need to know is what the values are in this array.

00:03:48.160 --> 00:03:49.550
And we could say,

00:03:49.550 --> 00:03:50.850
um,

00:03:50.850 --> 00:03:51.420
actually,

00:03:51.420 --> 00:03:53.570
it's sort of create a new example here.

00:03:53.570 --> 00:04:01.110
So all the way down and I'm gonna comment this out and so,

00:04:01.110 --> 00:04:02.200
you know,

00:04:02.200 --> 00:04:05.710
pretend we're in,

00:04:05.710 --> 00:04:06.090
Ah,

00:04:06.090 --> 00:04:09.550
pretend we're in a new file.

00:04:09.550 --> 00:04:09.950
Okay,

00:04:09.950 --> 00:04:15.650
now we know that we have access to this thing is variable called Array,

00:04:15.650 --> 00:04:17.760
but we don't know what this is now.

00:04:17.760 --> 00:04:19.080
We could say echo,

00:04:19.080 --> 00:04:19.650
array,

00:04:19.650 --> 00:04:21.070
Refresh your page.

00:04:21.070 --> 00:04:21.790
It just says array.

00:04:21.790 --> 00:04:22.650
That's not helpful.

00:04:22.650 --> 00:04:24.580
We could try to look through it,

00:04:24.580 --> 00:04:26.650
but we don't really know about loops yet,

00:04:26.650 --> 00:04:32.560
or we could skip all that heartbreak and just just tell us what's in it.

00:04:32.560 --> 00:04:36.900
Refresh again.

00:04:36.900 --> 00:04:38.170
It tells us exactly what's in it.

00:04:38.170 --> 00:04:46.630
Then I can say echo array to I know that array Index number two is going to be Zephyr save

00:04:46.630 --> 00:04:47.060
Refresh.

00:04:47.060 --> 00:04:47.570
I can see it.

00:04:47.570 --> 00:04:49.340
And now I can get rid of this printer race.

00:04:49.340 --> 00:04:51.750
So now we're actually getting into debugging a little bit,

00:04:51.750 --> 00:04:58.090
and this is what print are is four.

00:04:58.090 --> 00:05:03.690
It tells you everything that is in an object or an array or a list.

00:05:03.690 --> 00:05:07.750
Or if it's just a plain text variable a string.

00:05:07.750 --> 00:05:08.930
It'll tell you that,

00:05:08.930 --> 00:05:09.350
too.

00:05:09.350 --> 00:05:13.880
So your task for this lesson is to create an array.

00:05:13.880 --> 00:05:17.340
Give it 234 items in there,

00:05:17.340 --> 00:05:19.960
make it names off you and your friends.

00:05:19.960 --> 00:05:28.860
Maybe some of your family and then I want you to print are so print are family members and

00:05:28.860 --> 00:05:30.910
then open up your source code.

00:05:30.910 --> 00:05:34.000
So don't just view it in here because you're gonna see something like this.

00:05:34.000 --> 00:05:35.540
But if you viewed in your source code,

00:05:35.540 --> 00:05:43.040
which as a reminder if you right click and go into not inspect but view page source,

00:05:43.040 --> 00:05:47.220
you'll see that you can actually see the source code,

00:05:47.220 --> 00:05:50.120
and that gives us something that looks just a little nicer,

00:05:50.120 --> 00:05:50.450
you know.

00:05:50.450 --> 00:05:54.990
So again,

00:05:54.990 --> 00:05:56.040
go ahead,

00:05:56.040 --> 00:06:00.100
create create a an array prints are it,

00:06:00.100 --> 00:06:03.720
and then really just take note of what it's doing here.

00:06:03.720 --> 00:06:05.690
Maybe make a mental note as well,

00:06:05.690 --> 00:06:06.890
or if you're taking physical notes.

00:06:06.890 --> 00:06:07.310
Ah,

00:06:07.310 --> 00:06:10.060
make a note that it also lists out your indices.

00:06:10.060 --> 00:06:11.530
So this is an array.

00:06:11.530 --> 00:06:13.380
This is the 1st 1 second,

00:06:13.380 --> 00:06:14.480
1/3 1 And remember,

00:06:14.480 --> 00:06:16.560
when computers list things generally,

00:06:16.560 --> 00:06:22.120
they start at the number zero because zero to a computer is a number zero to human means.

00:06:22.120 --> 00:06:22.850
There's nothing.

00:06:22.850 --> 00:06:24.150
Those are different.

00:06:24.150 --> 00:06:25.160
All right,

00:06:25.160 --> 00:06:26.260
so once you've done your task,

00:06:26.260 --> 00:06:27.450
head on over the next lesson,

00:06:27.450 --> 00:06:28.250
I'll see you over there.

