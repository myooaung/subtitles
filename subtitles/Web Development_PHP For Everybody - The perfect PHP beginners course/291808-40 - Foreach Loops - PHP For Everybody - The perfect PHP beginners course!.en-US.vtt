WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.680
Hello.

00:00:01.680 --> 00:00:02.870
Welcome back in this lesson.

00:00:02.870 --> 00:00:08.630
We're going to be learning about the most popular and probably the most useful loop in PHP

00:00:08.630 --> 00:00:08.630
.

00:00:08.630 --> 00:00:10.490
And this one is called before each loop.

00:00:10.490 --> 00:00:11.110
Now,

00:00:11.110 --> 00:00:16.820
why this one is useful is because it will automatically generate or loop through each of

00:00:16.820 --> 00:00:21.260
your items in an array in some sort of object in some sort of terrible fashion.

00:00:21.260 --> 00:00:27.360
And the best example is just a simple array.

00:00:27.360 --> 00:00:28.740
So let's do names again.

00:00:28.740 --> 00:00:30.190
We're pretty familiar with these.

00:00:30.190 --> 00:00:31.260
So we've got names.

00:00:31.260 --> 00:00:33.940
This is an array close that with my semi colon.

00:00:33.940 --> 00:00:37.350
And in here I'm gonna have the name Caleb.

00:00:37.350 --> 00:00:42.160
And in here I'm gonna have the name Nathan.

00:00:42.160 --> 00:00:46.250
And in here I will have Zephyr my cat.

00:00:46.250 --> 00:00:47.790
And,

00:00:47.790 --> 00:00:48.660
um,

00:00:48.660 --> 00:00:50.430
do we want a superhero for this one?

00:00:50.430 --> 00:00:51.720
Maybe.

00:00:51.720 --> 00:00:52.280
Let's go,

00:00:52.280 --> 00:00:52.880
Spider Man.

00:00:52.880 --> 00:00:54.550
Mr Spiderman.

00:00:54.550 --> 00:00:56.080
Okay,

00:00:56.080 --> 00:00:57.410
so that's far.

00:00:57.410 --> 00:00:58.690
Dump this far Dump names.

00:00:58.690 --> 00:01:03.060
You should already be familiar with this stuff.

00:01:03.060 --> 00:01:04.590
This looks pretty straightforward.

00:01:04.590 --> 00:01:05.860
Okay.

00:01:05.860 --> 00:01:06.090
Now,

00:01:06.090 --> 00:01:10.760
to loop through each of these e type for each and what it is is ah,

00:01:10.760 --> 00:01:15.600
your array as value and then you can use value,

00:01:15.600 --> 00:01:17.060
which would be each one of these.

00:01:17.060 --> 00:01:20.110
So each one of these will become that value variable.

00:01:20.110 --> 00:01:21.020
Now,

00:01:21.020 --> 00:01:23.790
we're not going to loop through array because that variable does not exist.

00:01:23.790 --> 00:01:28.300
We have it as names and we don't have to use the variable called value.

00:01:28.300 --> 00:01:31.490
We could just as easily use the variable called name.

00:01:31.490 --> 00:01:35.280
So for each name as in it or each of the names as a name,

00:01:35.280 --> 00:01:43.760
we can say echo name and be our and comment that dump out and refresh the page.

00:01:43.760 --> 00:01:46.880
And there we have name is Caleb,

00:01:46.880 --> 00:01:48.890
Nathan Zephyr and Spiderman.

00:01:48.890 --> 00:01:52.860
And we could also if we wanted to have like,

00:01:52.860 --> 00:01:53.410
Ah,

00:01:53.410 --> 00:01:57.090
I need to know about bullet in here so it looks like a list.

00:01:57.090 --> 00:01:59.560
Or we could actually put riel html in there and put like,

00:01:59.560 --> 00:02:00.090
Ah,

00:02:00.090 --> 00:02:01.050
a list item,

00:02:01.050 --> 00:02:02.990
something like that if we wanted to.

00:02:02.990 --> 00:02:05.150
And now we can actually manipulate this list.

00:02:05.150 --> 00:02:07.940
And this is where a raise actually really come in handy.

00:02:07.940 --> 00:02:10.310
And so we've learned all about a raise up until this point.

00:02:10.310 --> 00:02:11.630
But we don't really,

00:02:11.630 --> 00:02:14.840
Or I guess we didn't fully understand how to use them.

00:02:14.840 --> 00:02:16.620
We understood that we could write them.

00:02:16.620 --> 00:02:18.820
They're good way to organize data,

00:02:18.820 --> 00:02:22.550
but we don't fully understand how these air supposed to help us.

00:02:22.550 --> 00:02:30.680
So when you pair an array with the four each loop ah,

00:02:30.680 --> 00:02:32.990
your life becomes significantly better.

00:02:32.990 --> 00:02:36.720
You're able to loop through each array and get certain values.

00:02:36.720 --> 00:02:37.040
Now,

00:02:37.040 --> 00:02:38.160
there's another way to do this.

00:02:38.160 --> 00:02:42.850
So what I'm gonna do is undo this and we're gonna keep that there echo,

00:02:42.850 --> 00:02:46.980
which are refresh.

00:02:46.980 --> 00:02:48.470
We've got a little line in their cool cool.

00:02:48.470 --> 00:02:59.420
So now let's look through these again for itch names as key Fat arrow value echo.

00:02:59.420 --> 00:03:00.790
Let's do it this way.

00:03:00.790 --> 00:03:09.820
Let's go Key value we are now I save and I've got remember these indices,

00:03:09.820 --> 00:03:13.410
and this is going to look a lot like this.

00:03:13.410 --> 00:03:17.250
So I'm just gonna do a quick little far dumping here Names.

00:03:17.250 --> 00:03:19.230
Look at that.

00:03:19.230 --> 00:03:20.190
Zero is Caleb.

00:03:20.190 --> 00:03:21.520
One is Nathan to his effort.

00:03:21.520 --> 00:03:23.260
Three a Spiderman zeros.

00:03:23.260 --> 00:03:23.630
Caleb.

00:03:23.630 --> 00:03:24.940
One is Nathan to his effort.

00:03:24.940 --> 00:03:25.870
Three a Spiderman,

00:03:25.870 --> 00:03:26.780
huh?

00:03:26.780 --> 00:03:28.940
What could it possibly be printing?

00:03:28.940 --> 00:03:32.000
So this key is your index?

00:03:32.000 --> 00:03:33.420
That's this number in here.

00:03:33.420 --> 00:03:33.700
Now,

00:03:33.700 --> 00:03:35.800
if we have a multi Ah,

00:03:35.800 --> 00:03:36.990
not a multi dimensional ray,

00:03:36.990 --> 00:03:38.370
but associative array,

00:03:38.370 --> 00:03:44.280
where instead of instead of just having a value in here,

00:03:44.280 --> 00:03:45.800
we also have these fat arrows.

00:03:45.800 --> 00:03:47.080
Remember how we did this before?

00:03:47.080 --> 00:03:49.950
Where we've got ages and let's do this.

00:03:49.950 --> 00:03:56.180
26 was Effort is to and Spiderman is Brad of 17 ish.

00:03:56.180 --> 00:03:57.650
Ah,

00:03:57.650 --> 00:04:05.150
and then what this is saying is the key is now this column and let's line us up.

00:04:05.150 --> 00:04:09.900
And the value is the age.

00:04:09.900 --> 00:04:15.100
So what this is going to say is Caleb 0.28 Nathan 0.26.

00:04:15.100 --> 00:04:19.310
And here we have Caleb 28 Nathan 280.26 zephyr dot to.

00:04:19.310 --> 00:04:21.170
And so it's exactly what we thought,

00:04:21.170 --> 00:04:23.350
but it actually get significantly better.

00:04:23.350 --> 00:04:27.790
So let's create another horizontal rule.

00:04:27.790 --> 00:04:30.450
I'm going to make a bunch of space to do.

00:04:30.450 --> 00:04:31.030
Here we go,

00:04:31.030 --> 00:04:36.860
and let's make an even bigger array.

00:04:36.860 --> 00:04:37.430
Um,

00:04:37.430 --> 00:04:38.860
one thing you want to be careful over,

00:04:38.860 --> 00:04:39.070
though,

00:04:39.070 --> 00:04:41.290
is what I'm doing here is copying and pasting.

00:04:41.290 --> 00:04:42.600
Just be careful,

00:04:42.600 --> 00:04:45.690
because when you copy and paste you were guaranteed to make mistakes.

00:04:45.690 --> 00:04:46.730
It will happen.

00:04:46.730 --> 00:04:49.190
It will happen probably once a week,

00:04:49.190 --> 00:04:50.590
even once you become very,

00:04:50.590 --> 00:04:52.410
very skilled,

00:04:52.410 --> 00:04:53.450
it it just happens.

00:04:53.450 --> 00:04:54.220
You copy and paste,

00:04:54.220 --> 00:04:57.160
and you don't realize that you made a mistake somewhere or you didn't change something you

00:04:57.160 --> 00:04:57.950
should have changed them.

00:04:57.950 --> 00:05:01.010
Just a heads up copy and paste can be a little bit of a butter.

00:05:01.010 --> 00:05:06.300
So now I'm going to use a multi dimensional array with an associative array.

00:05:06.300 --> 00:05:09.520
What that means is,

00:05:09.520 --> 00:05:10.820
Caleb is going to be a key,

00:05:10.820 --> 00:05:14.030
and he's also going to have some other properties.

00:05:14.030 --> 00:05:15.700
So he's gonna have an age.

00:05:15.700 --> 00:05:17.680
And that age is going to be 28.

00:05:17.680 --> 00:05:19.140
He's going to have a height,

00:05:19.140 --> 00:05:24.450
and that height is going to be one point 83 meters.

00:05:24.450 --> 00:05:25.850
Um,

00:05:25.850 --> 00:05:26.750
and in fact,

00:05:26.750 --> 00:05:28.250
let's keep that as a string.

00:05:28.250 --> 00:05:29.850
Um,

00:05:29.850 --> 00:05:32.610
and let's do another one height in feet,

00:05:32.610 --> 00:05:34.410
but we need that as a string.

00:05:34.410 --> 00:05:35.650
So height,

00:05:35.650 --> 00:05:39.850
feet and six foot.

00:05:39.850 --> 00:05:41.640
But that's not gonna work.

00:05:41.640 --> 00:05:42.950
So we need to escape that one.

00:05:42.950 --> 00:05:45.520
Ah,

00:05:45.520 --> 00:05:46.270
and,

00:05:46.270 --> 00:05:47.080
uh,

00:05:47.080 --> 00:05:47.380
I don't know.

00:05:47.380 --> 00:05:48.120
Let's do wait.

00:05:48.120 --> 00:05:49.330
Don't laugh at my weight,

00:05:49.330 --> 00:05:49.850
please.

00:05:49.850 --> 00:05:51.050
Um,

00:05:51.050 --> 00:05:59.110
about Â£175 so we can to do to Do you know what?

00:05:59.110 --> 00:06:04.020
I'm actually to copy all of these just cause I don't want I don't want you to have to watch

00:06:04.020 --> 00:06:06.150
me type all these out every single time.

00:06:06.150 --> 00:06:13.080
23 for So we've got Nathan his age is 26.

00:06:13.080 --> 00:06:15.840
We have got Zephyr.

00:06:15.840 --> 00:06:17.560
His age is too.

00:06:17.560 --> 00:06:22.120
And we have got Spiderman and his age is 17.

00:06:22.120 --> 00:06:23.300
So now we have,

00:06:23.300 --> 00:06:23.890
like,

00:06:23.890 --> 00:06:25.660
this pretty big array,

00:06:25.660 --> 00:06:28.100
and I'm going to keep that height,

00:06:28.100 --> 00:06:30.630
the height and feet and the weight all the same.

00:06:30.630 --> 00:06:31.830
Don't judge my fat cat.

00:06:31.830 --> 00:06:33.550
He's not actually Â£175.

00:06:33.550 --> 00:06:38.260
Var dump names exit.

00:06:38.260 --> 00:06:39.210
I'll tell you what exit doesn't.

00:06:39.210 --> 00:06:39.950
Just a moment.

00:06:39.950 --> 00:06:40.950
All right,

00:06:40.950 --> 00:06:41.550
look at this.

00:06:41.550 --> 00:06:45.130
We have an array with an array inside of it and rain side of it and raise side of it and

00:06:45.130 --> 00:06:46.420
another array inside of it.

00:06:46.420 --> 00:06:48.490
And each one has a different age.

00:06:48.490 --> 00:06:50.280
Now,

00:06:50.280 --> 00:06:51.960
how do we get the age of each one?

00:06:51.960 --> 00:06:57.590
While we know from a prior lesson about a raise that we can at any point in time to do

00:06:57.590 --> 00:06:58.450
names,

00:06:58.450 --> 00:07:05.500
Caleb age and this Ah.

00:07:05.500 --> 00:07:06.250
Ah,

00:07:06.250 --> 00:07:08.290
Well,

00:07:08.290 --> 00:07:10.550
spit out the number 28 right there.

00:07:10.550 --> 00:07:12.580
Okay,

00:07:12.580 --> 00:07:15.640
so we know all about that.

00:07:15.640 --> 00:07:18.480
Um I said I was gonna tell you what that exit thing does.

00:07:18.480 --> 00:07:20.000
Exit is actually really cool.

00:07:20.000 --> 00:07:22.990
What it does is it prevents any code below it from executing,

00:07:22.990 --> 00:07:25.610
so it exits the script completely.

00:07:25.610 --> 00:07:30.520
So it will break things if you have any sort of included files which we'll get to in the

00:07:30.520 --> 00:07:32.650
future about including and requiring files.

00:07:32.650 --> 00:07:36.940
But what this will do is watch this echo Don't show up,

00:07:36.940 --> 00:07:39.470
and there's nothing here.

00:07:39.470 --> 00:07:45.280
It doesn't show up because once the code gets down to line 61 it says exit and PHP says,

00:07:45.280 --> 00:07:45.840
Oh,

00:07:45.840 --> 00:07:46.550
okay.

00:07:46.550 --> 00:07:46.830
Well,

00:07:46.830 --> 00:07:47.510
I'm done here,

00:07:47.510 --> 00:07:49.110
so I'm not gonna do anything else.

00:07:49.110 --> 00:07:54.100
I use that often for debugging stuff or just for showing things,

00:07:54.100 --> 00:07:56.990
and I don't want to necessarily show everything else underneath it.

00:07:56.990 --> 00:07:59.350
Just don't forget to remove them when you're done.

00:07:59.350 --> 00:08:01.290
All right,

00:08:01.290 --> 00:08:03.770
So let's take a look at this one.

00:08:03.770 --> 00:08:05.180
Uh,

00:08:05.180 --> 00:08:05.480
no,

00:08:05.480 --> 00:08:05.640
no,

00:08:05.640 --> 00:08:05.820
no,

00:08:05.820 --> 00:08:06.020
no,

00:08:06.020 --> 00:08:06.740
don't don't,

00:08:06.740 --> 00:08:08.210
because that makes too much of a mess.

00:08:08.210 --> 00:08:09.140
There we go.

00:08:09.140 --> 00:08:11.990
So now we're we're echoing the key,

00:08:11.990 --> 00:08:13.870
which is Spiderman's effort,

00:08:13.870 --> 00:08:15.270
Nathan and Caleb.

00:08:15.270 --> 00:08:18.230
And that's the key.

00:08:18.230 --> 00:08:18.950
We can see it there.

00:08:18.950 --> 00:08:19.970
And the value isn't right.

00:08:19.970 --> 00:08:23.670
Just like tryingto echoing array like we've done a dozen times already.

00:08:23.670 --> 00:08:25.270
It's not going to show anything,

00:08:25.270 --> 00:08:30.550
but what we can do because we know the structure of how this array is set up,

00:08:30.550 --> 00:08:36.700
we can say echo uhm ki being the name So in fact,

00:08:36.700 --> 00:08:38.350
we can change that name.

00:08:38.350 --> 00:08:43.550
Echo name is Ah,

00:08:43.550 --> 00:08:44.900
and then we can put the,

00:08:44.900 --> 00:08:45.650
um,

00:08:45.650 --> 00:08:51.120
the value in here so that value is it's pointing to this array.

00:08:51.120 --> 00:08:52.160
It's not technically a value.

00:08:52.160 --> 00:08:52.600
So you know what?

00:08:52.600 --> 00:08:54.390
Let's change that to array,

00:08:54.390 --> 00:08:58.120
and all we're looking for is age.

00:08:58.120 --> 00:09:03.060
Go ahead,

00:09:03.060 --> 00:09:04.570
clean that shrink the text of it.

00:09:04.570 --> 00:09:05.680
So it fits on one line.

00:09:05.680 --> 00:09:06.420
Apologize again.

00:09:06.420 --> 00:09:07.960
If you can't see that very well.

00:09:07.960 --> 00:09:08.850
Um,

00:09:08.850 --> 00:09:12.250
nothing too much I can do about that at the moment.

00:09:12.250 --> 00:09:15.590
And when I refresh the page,

00:09:15.590 --> 00:09:18.880
it breaks because I don't have ah semicolon.

00:09:18.880 --> 00:09:21.210
The Rio Keller was 28.

00:09:21.210 --> 00:09:22.420
Nathan is 26 efforts to you.

00:09:22.420 --> 00:09:23.390
Spider Man is 17.

00:09:23.390 --> 00:09:24.040
Look at that.

00:09:24.040 --> 00:09:31.400
So now we have a multi dimensional associative array with information that we can access

00:09:31.400 --> 00:09:36.410
and in just three lines of code were able to not only print out the name but get the ages

00:09:36.410 --> 00:09:37.070
of them as well.

00:09:37.070 --> 00:09:43.440
So now where data is nicely organized and at any point time we can access any of these and

00:09:43.440 --> 00:09:44.310
we can loop through this.

00:09:44.310 --> 00:09:48.100
We could even say in this loop because continue and break Also work,

00:09:48.100 --> 00:09:51.950
we could say If name is not Caleb,

00:09:51.950 --> 00:09:58.340
continue and we'll do that primarily our first rather.

00:09:58.340 --> 00:10:02.430
So that's nothing else is executed and voila!

00:10:02.430 --> 00:10:03.490
It only shows me.

00:10:03.490 --> 00:10:07.300
Or if I wanted to only show Mr Spiderman Mr Peter Parker,

00:10:07.300 --> 00:10:09.360
it is Spider Man of 17.

00:10:09.360 --> 00:10:15.630
Or if I only wanted to show people whose age is over a certain threshold.

00:10:15.630 --> 00:10:18.670
So let's say only people who can who can vote.

00:10:18.670 --> 00:10:28.020
We can say if array age is greater than or equal to 18 continue,

00:10:28.020 --> 00:10:30.380
which is actually the exact opposite of what we want,

00:10:30.380 --> 00:10:33.550
because this will target everyone who is over 18.

00:10:33.550 --> 00:10:35.500
So let's do under 18.

00:10:35.500 --> 00:10:40.210
Caleb is 28.

00:10:40.210 --> 00:10:42.780
Nathan is 26 both of these people are old enough to vote.

00:10:42.780 --> 00:10:43.860
There we go.

00:10:43.860 --> 00:10:45.100
That's a four each loop.

00:10:45.100 --> 00:10:50.370
It handles that increment for you that the wild loop and the four loop actually needs this

00:10:50.370 --> 00:10:51.330
one already knows,

00:10:51.330 --> 00:10:52.050
because this one,

00:10:52.050 --> 00:10:55.500
if we do this var dump names,

00:10:55.500 --> 00:10:56.550
I'll show you real quick.

00:10:56.550 --> 00:10:58.890
This one has a size of four,

00:10:58.890 --> 00:11:00.200
so it already has that number.

00:11:00.200 --> 00:11:01.540
It knows that it's gonna go from,

00:11:01.540 --> 00:11:05.690
uh 123 and four or in computer languages and computer indices.

00:11:05.690 --> 00:11:07.890
It 0123 size of four.

00:11:07.890 --> 00:11:12.480
And it's only ever going to loop through all of this stuff.

00:11:12.480 --> 00:11:15.580
And this is why this is the most common one in PHP.

00:11:15.580 --> 00:11:22.670
So there you haven't you are now fully aware of three of the four types of loops and PHP.

00:11:22.670 --> 00:11:24.630
There's also another one called a Do Wild Loop.

00:11:24.630 --> 00:11:26.330
We're not gonna get into that one,

00:11:26.330 --> 00:11:26.580
because,

00:11:26.580 --> 00:11:27.100
honestly,

00:11:27.100 --> 00:11:28.830
it's hardly ever used.

00:11:28.830 --> 00:11:29.650
Um,

00:11:29.650 --> 00:11:32.000
in my many,

00:11:32.000 --> 00:11:32.310
many,

00:11:32.310 --> 00:11:36.450
many years of writing PHP I have only seen to come up a handful of times,

00:11:36.450 --> 00:11:38.170
usually is by very,

00:11:38.170 --> 00:11:40.320
very clever programmers.

00:11:40.320 --> 00:11:42.640
But for the most part it doesn't come up.

00:11:42.640 --> 00:11:44.680
So I don't think we really need to learn about it.

00:11:44.680 --> 00:11:45.710
But you should know about it.

00:11:45.710 --> 00:11:46.200
Um,

00:11:46.200 --> 00:11:49.250
just so you know that last one is called a do wild loop.

00:11:49.250 --> 00:11:51.450
And if you just type in to Google,

00:11:51.450 --> 00:11:53.680
do wild PHP loops,

00:11:53.680 --> 00:11:55.340
you'll find all sorts of stuff about it.

00:11:55.340 --> 00:11:56.210
Personally,

00:11:56.210 --> 00:11:58.150
I don't think it's worth learning if it does.

00:11:58.150 --> 00:12:00.050
If it does come up,

00:12:00.050 --> 00:12:02.670
simply do a little bit of Google,

00:12:02.670 --> 00:12:03.090
Um,

00:12:03.090 --> 00:12:06.300
and you'll learn it within like 10 seconds It's very,

00:12:06.300 --> 00:12:06.950
very simple.

00:12:06.950 --> 00:12:14.180
So your task for this lesson is to create a multi dimensional associative array.

00:12:14.180 --> 00:12:15.490
That's that's a mouthful.

00:12:15.490 --> 00:12:18.970
So a big array like this with a raisins Ivan array.

00:12:18.970 --> 00:12:21.960
And then I want you to loop through each one.

00:12:21.960 --> 00:12:23.770
I want you to not only print the key,

00:12:23.770 --> 00:12:27.350
so for each name as name Fat Errol Array,

00:12:27.350 --> 00:12:35.010
or how we often see it for each array as key value.

00:12:35.010 --> 00:12:42.240
I would like you to print out not only the the key,

00:12:42.240 --> 00:12:43.080
which is the name,

00:12:43.080 --> 00:12:47.060
but I also want you to print out something that's inside of that multi dimensional race.

00:12:47.060 --> 00:12:47.930
So it could be the age,

00:12:47.930 --> 00:12:48.440
the height,

00:12:48.440 --> 00:12:48.890
the weight.

00:12:48.890 --> 00:12:50.910
It could be something custom you added in there.

00:12:50.910 --> 00:12:51.920
Whatever it is,

00:12:51.920 --> 00:12:54.700
I want you to sort of create something along these lines.

00:12:54.700 --> 00:12:58.210
This is the most complicated loop that you can possibly create.

00:12:58.210 --> 00:12:58.690
Um,

00:12:58.690 --> 00:13:02.860
and this is probably the most complicated logic you're going to create for a little while

00:13:02.860 --> 00:13:03.290
as well.

00:13:03.290 --> 00:13:05.980
Not only that,

00:13:05.980 --> 00:13:07.080
but this is actually really,

00:13:07.080 --> 00:13:09.780
really good practice for when you get into ah,

00:13:09.780 --> 00:13:13.390
raise inside of a raise inside of a raise and you have to start looping through all sorts

00:13:13.390 --> 00:13:13.920
of things.

00:13:13.920 --> 00:13:15.180
Eventually,

00:13:15.180 --> 00:13:17.610
at one point in your in your development career,

00:13:17.610 --> 00:13:23.550
you're going to start looping through loops inside of a loop inside of multi dimensional

00:13:23.550 --> 00:13:23.800
raise.

00:13:23.800 --> 00:13:27.610
And it's just going to be this crazy mess inside of your head.

00:13:27.610 --> 00:13:30.060
And then one day it just fam it works.

00:13:30.060 --> 00:13:32.970
And sometimes you understand why it works,

00:13:32.970 --> 00:13:34.220
and sometimes you don't.

00:13:34.220 --> 00:13:36.930
But eventually you'll get to the point where your brain just says,

00:13:36.930 --> 00:13:37.290
You know what?

00:13:37.290 --> 00:13:38.850
I know exactly how to deal with this.

00:13:38.850 --> 00:13:45.760
I'm going to use a four h inside of a four loop tour before agents out of a four for each,

00:13:45.760 --> 00:13:48.100
instead of a four h or a while inside of a four each.

00:13:48.100 --> 00:13:48.360
Or,

00:13:48.360 --> 00:13:48.910
you know,

00:13:48.910 --> 00:13:51.900
mix and match room generally is going to be a four each inside of a for each,

00:13:51.900 --> 00:13:52.030
though,

00:13:52.030 --> 00:13:55.170
because you're looping through an array which also has an array to loop through,

00:13:55.170 --> 00:13:56.130
such as this one.

00:13:56.130 --> 00:13:56.940
Actually,

00:13:56.940 --> 00:13:57.390
in fact,

00:13:57.390 --> 00:13:58.090
I want to show you,

00:13:58.090 --> 00:13:58.680
um,

00:13:58.680 --> 00:13:59.740
so that was your task.

00:13:59.740 --> 00:14:01.350
Basically mimic what I did here,

00:14:01.350 --> 00:14:04.550
But I'm gonna make this one step harder.

00:14:04.550 --> 00:14:05.680
Not for you,

00:14:05.680 --> 00:14:06.200
for me,

00:14:06.200 --> 00:14:07.610
Um,

00:14:07.610 --> 00:14:08.710
and you don't have to do this one.

00:14:08.710 --> 00:14:10.400
So I'm gonna go in here,

00:14:10.400 --> 00:14:19.660
copy all this and what I'm going to Dio is I'm going to loop through each person and then

00:14:19.660 --> 00:14:21.920
I'm going to loop through each value in here.

00:14:21.920 --> 00:14:23.230
So we've got for you.

00:14:23.230 --> 00:14:26.140
I get that care that one up here,

00:14:26.140 --> 00:14:26.360
too,

00:14:26.360 --> 00:14:28.850
because that's gonna clutter up what this looks like on the side.

00:14:28.850 --> 00:14:36.050
And so it's gonna loop through each one and going to say echo H three name.

00:14:36.050 --> 00:14:39.900
So that's the name.

00:14:39.900 --> 00:14:44.010
And each property is also going to have you,

00:14:44.010 --> 00:14:44.510
uh,

00:14:44.510 --> 00:14:46.600
echo you.

00:14:46.600 --> 00:14:46.890
Also,

00:14:46.890 --> 00:14:48.820
you can see that I'm writing html inside of my PHP.

00:14:48.820 --> 00:14:50.100
This is not the cleanest way to do it,

00:14:50.100 --> 00:14:51.860
but it is certainly one way to do it.

00:14:51.860 --> 00:14:53.420
And then here we're going to say,

00:14:53.420 --> 00:14:58.050
for each array as key value.

00:14:58.050 --> 00:15:01.060
So what we're looping through here is this one,

00:15:01.060 --> 00:15:02.850
and we're going to say for each key,

00:15:02.850 --> 00:15:04.890
there's a value and echo that.

00:15:04.890 --> 00:15:07.650
And so we're going to say echo,

00:15:07.650 --> 00:15:08.830
Ally,

00:15:08.830 --> 00:15:18.050
we're gonna close that And in here we're gonna say echo,

00:15:18.050 --> 00:15:27.780
You know it Just because I'm running out of space that's use the regular quotations key is

00:15:27.780 --> 00:15:30.950
equal to value and that's it.

00:15:30.950 --> 00:15:36.910
Do going to go and get rid of that stuff there with me?

00:15:36.910 --> 00:15:37.290
Said,

00:15:37.290 --> 00:15:37.640
Uh,

00:15:37.640 --> 00:15:37.970
OK,

00:15:37.970 --> 00:15:40.370
so we've got Caleb Nathan Zephyr,

00:15:40.370 --> 00:15:41.040
Spiderman.

00:15:41.040 --> 00:15:42.410
We've got their ages.

00:15:42.410 --> 00:15:43.600
We've got their heights.

00:15:43.600 --> 00:15:44.680
We've got their weights.

00:15:44.680 --> 00:15:48.390
If we change anything in here like Zephyr is not actually Â£175.

00:15:48.390 --> 00:15:49.560
He's a big,

00:15:49.560 --> 00:15:50.190
big cat,

00:15:50.190 --> 00:15:50.760
not fat,

00:15:50.760 --> 00:15:52.470
but just large is about Â£13.

00:15:52.470 --> 00:15:55.170
He's definitely not six feet.

00:15:55.170 --> 00:15:56.000
That would be fantastic,

00:15:56.000 --> 00:15:59.020
but he's probably more along the lines of like,

00:15:59.020 --> 00:15:59.400
I don't know,

00:15:59.400 --> 00:16:00.800
11 inches or something.

00:16:00.800 --> 00:16:02.550
I don't really know the height of them.

00:16:02.550 --> 00:16:03.230
Ah,

00:16:03.230 --> 00:16:05.440
but we could see heightened feet meters.

00:16:05.440 --> 00:16:08.230
This one could be that said this one,

00:16:08.230 --> 00:16:08.330
too.

00:16:08.330 --> 00:16:08.800
No,

00:16:08.800 --> 00:16:09.590
no,

00:16:09.590 --> 00:16:10.760
is also a data type,

00:16:10.760 --> 00:16:12.430
So let's check this out.

00:16:12.430 --> 00:16:14.220
There's nothing in there.

00:16:14.220 --> 00:16:15.900
No means that there is nothing.

00:16:15.900 --> 00:16:17.450
It's the same as Void it.

00:16:17.450 --> 00:16:18.660
It's the same as,

00:16:18.660 --> 00:16:19.460
um,

00:16:19.460 --> 00:16:20.500
outer space.

00:16:20.500 --> 00:16:21.650
There's nothing out there.

00:16:21.650 --> 00:16:23.350
It's just no.

00:16:23.350 --> 00:16:28.240
And so you can see that as efforts height,

00:16:28.240 --> 00:16:29.120
um,

00:16:29.120 --> 00:16:31.880
in regular height is no,

00:16:31.880 --> 00:16:32.650
there's nothing in there.

00:16:32.650 --> 00:16:36.450
And so what I've done here is I've looped through each one.

00:16:36.450 --> 00:16:37.400
I've gotten the names in here,

00:16:37.400 --> 00:16:40.910
and then for each attribute of each person or cat.

00:16:40.910 --> 00:16:41.490
In this case,

00:16:41.490 --> 00:16:43.040
I have also looked through those.

00:16:43.040 --> 00:16:44.110
So there you go.

00:16:44.110 --> 00:16:45.040
That is the for each loop.

00:16:45.040 --> 00:16:45.870
That is very,

00:16:45.870 --> 00:16:47.910
very in depth for each loop again.

00:16:47.910 --> 00:16:49.430
This is incredibly important.

00:16:49.430 --> 00:16:50.510
Definitely.

00:16:50.510 --> 00:16:52.260
Spend some time learning this one.

00:16:52.260 --> 00:16:54.070
If you get stuck,

00:16:54.070 --> 00:16:55.690
we've got a group learning to code.

00:16:55.690 --> 00:16:56.730
It's on Facebook.

00:16:56.730 --> 00:16:57.830
Just type in the search bar,

00:16:57.830 --> 00:16:59.170
learning to code.

00:16:59.170 --> 00:17:00.020
You'll find us.

00:17:00.020 --> 00:17:01.360
We're probably the first result.

00:17:01.360 --> 00:17:02.440
We've got a big banner that says,

00:17:02.440 --> 00:17:03.150
Learning to code.

00:17:03.150 --> 00:17:05.790
Ask questions in there.

00:17:05.790 --> 00:17:06.580
We're here to help.

00:17:06.580 --> 00:17:07.260
All right.

00:17:07.260 --> 00:17:09.750
Once you have ah,

00:17:09.750 --> 00:17:12.070
major for each loop and and things were working well,

00:17:12.070 --> 00:17:14.210
let's move on to the next thing.

