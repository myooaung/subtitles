WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.330
Hey there.

00:00:02.330 --> 00:00:08.600
Welcome to another lesson on PHP and this lesson We're going to learn about data types.

00:00:08.600 --> 00:00:11.630
Now we know how to echo something.

00:00:11.630 --> 00:00:12.820
We know how to comment stuff.

00:00:12.820 --> 00:00:14.790
We know how to create a variable in echo that out.

00:00:14.790 --> 00:00:19.280
But when we were writing a variable Oh,

00:00:19.280 --> 00:00:19.750
actually,

00:00:19.750 --> 00:00:25.160
I Here's something that I forgot to mention You can have multiple opening and closing PHP

00:00:25.160 --> 00:00:29.050
tags throughout your PHP file as many times as you want.

00:00:29.050 --> 00:00:32.680
So where I have PHP opens,

00:00:32.680 --> 00:00:34.820
PHP closes PHP open speech.

00:00:34.820 --> 00:00:35.430
We closes.

00:00:35.430 --> 00:00:36.420
I could put some stuff online,

00:00:36.420 --> 00:00:36.590
too,

00:00:36.590 --> 00:00:40.020
if I wanted to write stuff to refresh the page.

00:00:40.020 --> 00:00:40.740
There we go.

00:00:40.740 --> 00:00:42.330
I have as many of those as I want.

00:00:42.330 --> 00:00:48.780
So the fact that I'm not using one big PHP opening and closing block that's totally okay.

00:00:48.780 --> 00:00:52.960
Let's look at data types.

00:00:52.960 --> 00:00:53.980
No data types.

00:00:53.980 --> 00:00:57.160
There are several different kinds of data types.

00:00:57.160 --> 00:00:58.180
There are strings,

00:00:58.180 --> 00:01:00.920
so a string is a sentence.

00:01:00.920 --> 00:01:02.410
Think of a sentence like a string.

00:01:02.410 --> 00:01:05.010
So anything that has letters in it,

00:01:05.010 --> 00:01:07.690
anything that could have a space in it,

00:01:07.690 --> 00:01:13.250
anything that could have special characters like an apostrophe quotation exclamation mark.

00:01:13.250 --> 00:01:17.700
You know Caleb would be a string and let's let's do another one.

00:01:17.700 --> 00:01:18.190
Um,

00:01:18.190 --> 00:01:20.750
my name is Caleb.

00:01:20.750 --> 00:01:22.330
Look,

00:01:22.330 --> 00:01:23.710
that would be a string OK?

00:01:23.710 --> 00:01:24.350
And in fact,

00:01:24.350 --> 00:01:25.290
let's do this.

00:01:25.290 --> 00:01:28.050
Let's let's do it this way so you can see what's going on.

00:01:28.050 --> 00:01:31.260
String is equal to Let's call it the end of the line at that semi colon.

00:01:31.260 --> 00:01:32.650
Never forget that semicolon.

00:01:32.650 --> 00:01:34.520
So that's a string.

00:01:34.520 --> 00:01:35.240
Up until now,

00:01:35.240 --> 00:01:36.950
we've only been writing strings.

00:01:36.950 --> 00:01:42.570
If we said age was 30 well,

00:01:42.570 --> 00:01:44.190
that's not technically incorrect,

00:01:44.190 --> 00:01:46.440
but there is a better way to do it now.

00:01:46.440 --> 00:01:50.350
This one can just be a straight number as long as there's no letters,

00:01:50.350 --> 00:01:51.240
no special characters.

00:01:51.240 --> 00:01:52.910
So no exclamation marks,

00:01:52.910 --> 00:01:53.950
no periods,

00:01:53.950 --> 00:01:56.620
no dashes or anything like this.

00:01:56.620 --> 00:01:57.370
So ah,

00:01:57.370 --> 00:02:01.660
formatted phone number where it's like 555555 level of level.

00:02:01.660 --> 00:02:02.550
I was something like that.

00:02:02.550 --> 00:02:04.080
Unacceptable.

00:02:04.080 --> 00:02:05.870
That does not count for this data.

00:02:05.870 --> 00:02:08.400
Put this data type now.

00:02:08.400 --> 00:02:11.450
This data type is called an integer int for short,

00:02:11.450 --> 00:02:13.260
and this one,

00:02:13.260 --> 00:02:13.940
as you can see,

00:02:13.940 --> 00:02:16.680
does not require quotations or apostrophes around it.

00:02:16.680 --> 00:02:17.270
On Lee,

00:02:17.270 --> 00:02:18.400
strings require those,

00:02:18.400 --> 00:02:21.050
and that's because it has to account for things like spaces,

00:02:21.050 --> 00:02:21.770
numbers,

00:02:21.770 --> 00:02:22.580
special characters,

00:02:22.580 --> 00:02:23.150
etcetera.

00:02:23.150 --> 00:02:27.120
Next one we have is a float.

00:02:27.120 --> 00:02:29.940
Now this is basically an integer.

00:02:29.940 --> 00:02:30.290
In fact,

00:02:30.290 --> 00:02:31.810
let's not use age.

00:02:31.810 --> 00:02:34.930
Let's call that into Ah,

00:02:34.930 --> 00:02:39.370
float is essentially an integer with a decimal.

00:02:39.370 --> 00:02:47.910
So 30.0 30.1 30.12 Anything that has a decimal in it would be considered afloat.

00:02:47.910 --> 00:02:48.960
So let's do this.

00:02:48.960 --> 00:02:54.650
Let's do 3.14 the float number that we all know about.

00:02:54.650 --> 00:02:57.930
And this is called a float in some programming languages.

00:02:57.930 --> 00:03:00.150
This is also called a decimal.

00:03:00.150 --> 00:03:01.080
Now,

00:03:01.080 --> 00:03:04.650
the next one we have would be a Boolean,

00:03:04.650 --> 00:03:07.250
and this one could be true.

00:03:07.250 --> 00:03:08.770
Good to do.

00:03:08.770 --> 00:03:10.050
True,

00:03:10.050 --> 00:03:11.310
false.

00:03:11.310 --> 00:03:13.550
I am just butchering this code here.

00:03:13.550 --> 00:03:14.850
They're with me.

00:03:14.850 --> 00:03:16.990
Good thing I didn't refresh my page.

00:03:16.990 --> 00:03:18.850
Otherwise I would have seen an error.

00:03:18.850 --> 00:03:22.090
So Boolean is a true or false.

00:03:22.090 --> 00:03:24.150
You're going to see a lot of these in programming.

00:03:24.150 --> 00:03:28.800
Essentially conditional statements is what makes the world go round.

00:03:28.800 --> 00:03:30.860
For example,

00:03:30.860 --> 00:03:33.170
if my age is 30 or higher,

00:03:33.170 --> 00:03:34.300
take a certain action.

00:03:34.300 --> 00:03:36.850
If my age is 18 or under,

00:03:36.850 --> 00:03:38.050
take another action.

00:03:38.050 --> 00:03:44.050
I could say something along the lines of Actually I also made a table there.

00:03:44.050 --> 00:03:47.710
Lower case T is generally the one that we use.

00:03:47.710 --> 00:03:52.710
I could also say if float Ah,

00:03:52.710 --> 00:03:57.750
if I could If I said pi is equal to 3.14 then make a circle.

00:03:57.750 --> 00:03:59.830
Otherwise don't make a circle right.

00:03:59.830 --> 00:04:01.850
These are conditional statements.

00:04:01.850 --> 00:04:05.170
We'll talk all about conditional statements in a bit.

00:04:05.170 --> 00:04:06.220
I know I keep saying this.

00:04:06.220 --> 00:04:08.580
I keep saying we're gonna learn about We're gonna learn about it.

00:04:08.580 --> 00:04:10.550
But we have to learn things one step at a time.

00:04:10.550 --> 00:04:14.160
So a boolean is Is something true or something false?

00:04:14.160 --> 00:04:15.460
Is the sky blue?

00:04:15.460 --> 00:04:15.860
Well,

00:04:15.860 --> 00:04:17.680
I'm looking outside right now and this guy is great,

00:04:17.680 --> 00:04:18.800
so that would be false.

00:04:18.800 --> 00:04:20.570
But it's on a nice day.

00:04:20.570 --> 00:04:28.750
The sky might be blue so we could say sky blue True if the sky is blue or we could say Sky

00:04:28.750 --> 00:04:37.500
blue is false If this guy is not blue now a Boolean is you have heard this term before

00:04:37.500 --> 00:04:38.280
binary.

00:04:38.280 --> 00:04:39.670
There's only two options.

00:04:39.670 --> 00:04:40.750
It's yes or no.

00:04:40.750 --> 00:04:41.850
It's true or false.

00:04:41.850 --> 00:04:43.070
On the last one.

00:04:43.070 --> 00:04:48.750
I want to go over with you quickly is an array and a ray.

00:04:48.750 --> 00:04:50.920
Now this is ah,

00:04:50.920 --> 00:04:54.650
list of variables or list of well,

00:04:54.650 --> 00:04:55.190
values,

00:04:55.190 --> 00:04:55.530
actually,

00:04:55.530 --> 00:04:57.750
cause they don't necessarily need to be variables,

00:04:57.750 --> 00:05:00.700
and this one has crack it.

00:05:00.700 --> 00:05:09.310
So one groups two and three and let's just make that wee bit smaller.

00:05:09.310 --> 00:05:09.950
There we go.

00:05:09.950 --> 00:05:12.100
Now we can see we have different data types.

00:05:12.100 --> 00:05:13.600
We've got a string uses quotes.

00:05:13.600 --> 00:05:17.460
An integer is just a flat number 12345 Something like that.

00:05:17.460 --> 00:05:17.820
Ah,

00:05:17.820 --> 00:05:19.280
float has a decimal.

00:05:19.280 --> 00:05:21.550
A Boolean can ever be true or false.

00:05:21.550 --> 00:05:26.190
And an array is a list now an array.

00:05:26.190 --> 00:05:28.010
I forgot about this,

00:05:28.010 --> 00:05:28.570
actually,

00:05:28.570 --> 00:05:29.050
um,

00:05:29.050 --> 00:05:34.730
I wanted to mention about 35 seconds ago that it doesn't necessarily need to be of value

00:05:34.730 --> 00:05:35.150
either.

00:05:35.150 --> 00:05:40.250
A value being basically a string you could write anything you want in here into which

00:05:40.250 --> 00:05:43.060
references the number 30.

00:05:43.060 --> 00:05:45.900
We could also type in pie if we wanted to,

00:05:45.900 --> 00:05:50.340
as in 3.144 float,

00:05:50.340 --> 00:05:51.350
which would be the same thing.

00:05:51.350 --> 00:05:52.810
Ah,

00:05:52.810 --> 00:05:57.650
we had type in Boolean And let's just move this to a new line.

00:05:57.650 --> 00:06:01.700
So we've got a strength for an integer We've gotta float.

00:06:01.700 --> 00:06:05.250
We've got a Boolean in there and all of this combined makes an array,

00:06:05.250 --> 00:06:07.140
so save that refresh the page.

00:06:07.140 --> 00:06:07.830
Wow,

00:06:07.830 --> 00:06:08.160
Caleb,

00:06:08.160 --> 00:06:09.030
there's nothing there.

00:06:09.030 --> 00:06:09.830
Obviously,

00:06:09.830 --> 00:06:14.120
there's nothing there because we have not echoed anything back to the page.

00:06:14.120 --> 00:06:16.560
All we have done is assigned a bunch of variables.

00:06:16.560 --> 00:06:18.630
Now these are all variables.

00:06:18.630 --> 00:06:20.050
They have different data types.

00:06:20.050 --> 00:06:23.250
So if I wrote,

00:06:23.250 --> 00:06:27.760
I go string and let's Ah,

00:06:27.760 --> 00:06:30.250
let's add a B are in here.

00:06:30.250 --> 00:06:32.850
My name is Caleb.

00:06:32.850 --> 00:06:35.220
Copy that line,

00:06:35.220 --> 00:06:37.250
and if I wrote it,

00:06:37.250 --> 00:06:39.180
this is going to say 30.

00:06:39.180 --> 00:06:42.750
And if I copy that line again,

00:06:42.750 --> 00:06:48.010
next one will be float 3.14 as expected.

00:06:48.010 --> 00:06:48.680
Okay,

00:06:48.680 --> 00:06:50.100
but here are some tricky ones.

00:06:50.100 --> 00:06:51.310
What about Boolean?

00:06:51.310 --> 00:06:53.050
What do we think Julian's going to display?

00:06:53.050 --> 00:06:56.010
Boolean doesn't have quotes around it,

00:06:56.010 --> 00:06:57.210
so we know it's not a string.

00:06:57.210 --> 00:06:58.570
It's not afloat.

00:06:58.570 --> 00:06:59.750
It's not an integer.

00:06:59.750 --> 00:07:01.510
It is technically a word,

00:07:01.510 --> 00:07:03.650
and it breaks a whole string rule being a word.

00:07:03.650 --> 00:07:04.930
Well,

00:07:04.930 --> 00:07:05.700
let's take a look.

00:07:05.700 --> 00:07:09.350
It showed up as one.

00:07:09.350 --> 00:07:14.410
What if we turn that to false shows up?

00:07:14.410 --> 00:07:16.350
Has nothing interesting.

00:07:16.350 --> 00:07:18.080
We'll talk more about that in the future.

00:07:18.080 --> 00:07:18.710
Interesting.

00:07:18.710 --> 00:07:19.910
We'll talk more about that in the future,

00:07:19.910 --> 00:07:22.000
so I turn that back to true.

00:07:22.000 --> 00:07:24.660
And as one more example,

00:07:24.660 --> 00:07:30.650
let's echo the array and it just says array.

00:07:30.650 --> 00:07:31.840
Now,

00:07:31.840 --> 00:07:33.450
why does a race a Array wants?

00:07:33.450 --> 00:07:35.050
Because it doesn't know which value to echo.

00:07:35.050 --> 00:07:36.430
It has no idea.

00:07:36.430 --> 00:07:40.000
It has a ton of different options in here to pick.

00:07:40.000 --> 00:07:41.160
And really,

00:07:41.160 --> 00:07:41.700
you don't.

00:07:41.700 --> 00:07:43.730
You haven't specified which one is more important.

00:07:43.730 --> 00:07:45.520
Which one has a priority over other ones?

00:07:45.520 --> 00:07:47.450
You haven't told it to do anything?

00:07:47.450 --> 00:07:53.250
All we have told this array to Dio is store four pieces of information in it.

00:07:53.250 --> 00:07:54.710
Now,

00:07:54.710 --> 00:07:57.560
I'm going to create a lesson a little bit later about how we can access all that

00:07:57.560 --> 00:08:00.260
information from an array so that we can actually make sense of this.

00:08:00.260 --> 00:08:01.160
But for now,

00:08:01.160 --> 00:08:03.250
But I would like you to do as your task.

00:08:03.250 --> 00:08:05.860
I would like you to write a string variable,

00:08:05.860 --> 00:08:06.980
an integer variable,

00:08:06.980 --> 00:08:09.380
afloat variable and a boolean variable.

00:08:09.380 --> 00:08:13.710
The array one you can leave out because we're gonna talk about a raise specifically a

00:08:13.710 --> 00:08:14.450
little bit later,

00:08:14.450 --> 00:08:17.950
and then I want you to echo all of these out.

00:08:17.950 --> 00:08:22.120
And in fact,

00:08:22.120 --> 00:08:31.530
what I'm going to do is I'm going to get rid of all of these and keep it like that.

00:08:31.530 --> 00:08:33.860
I was using some canned Cat Nation in there again.

00:08:33.860 --> 00:08:35.550
That's another lesson we're going to talk about.

00:08:35.550 --> 00:08:42.250
Concatenation is essentially how we merged two strings together so that we can echo things

00:08:42.250 --> 00:08:44.840
without having to write echo over and over and over again.

00:08:44.840 --> 00:08:51.000
We could just type like something string dot int and that will basically merge the two

00:08:51.000 --> 00:08:54.440
together and display both of them side by side again.

00:08:54.440 --> 00:08:55.090
We'll talk about that later.

00:08:55.090 --> 00:08:55.820
Don't worry about that.

00:08:55.820 --> 00:08:56.370
For now.

00:08:56.370 --> 00:09:01.310
Your task is to create a string in flute and Boolean and echo each of them to the page.

00:09:01.310 --> 00:09:04.710
Once you have got that figured out,

00:09:04.710 --> 00:09:06.950
how don't over the next video and I'll see you over there.

