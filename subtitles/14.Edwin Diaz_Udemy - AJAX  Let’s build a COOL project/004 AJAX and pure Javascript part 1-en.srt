1
00:00:00,480 --> 00:00:02,430
All right welcome back my student.

2
00:00:02,430 --> 00:00:07,950
Now this is Edwin from the future so you might see some files in this lecture that you don't have yet.

3
00:00:07,950 --> 00:00:09,480
Don't worry.

4
00:00:09,480 --> 00:00:12,210
I'm here because I'm adding lectures to the course.

5
00:00:12,390 --> 00:00:20,040
I think it's very important for you to find out exactly how to code Ajax with pure javascript.

6
00:00:20,040 --> 00:00:25,050
I want to give you the foundation so that you can understand how things work and how to even do it with

7
00:00:25,050 --> 00:00:29,820
javascript even though most of the time you're not going to be using javascript you're going to be using

8
00:00:29,820 --> 00:00:36,540
Jake where we or something similar to it because he's easier and is very compatible with a lot of browsers

9
00:00:36,540 --> 00:00:37,250
out there.

10
00:00:37,250 --> 00:00:37,830
All right.

11
00:00:38,010 --> 00:00:42,780
It's a lot of stuff that goes behind the scenes that sometimes if you use just pure javascript you're

12
00:00:42,780 --> 00:00:45,000
not going to get it working in all browsers.

13
00:00:45,000 --> 00:00:52,350
But anyway so in Ajax we have something called the red states and these red states are coming from the

14
00:00:52,350 --> 00:00:52,710
server.

15
00:00:52,710 --> 00:00:56,220
These are responses that we're getting when we're trying to communicate with a server.

16
00:00:56,460 --> 00:00:57,440
So they're ready stories.

17
00:00:57,480 --> 00:01:03,190
There are four red states now as you can see right now 0 is requested by initialize.

18
00:01:03,270 --> 00:01:10,770
One is server connection stablish to request received processing requests and four is the most important

19
00:01:10,770 --> 00:01:14,850
one when the request is finished and the response is ready.

20
00:01:15,720 --> 00:01:16,160
All right.

21
00:01:16,260 --> 00:01:20,610
And then we have statuses We've got 200 and 400 which are the most important thing.

22
00:01:20,760 --> 00:01:26,760
If you don't have that file for some reason the server cannot reach it will give you that for for now.

23
00:01:26,760 --> 00:01:32,250
Found page error on the screen and you probably seen that before that 200 is the one that we care about

24
00:01:32,250 --> 00:01:38,060
which is everything went OK and you're going to see the functionality happening or the web page right.

25
00:01:38,370 --> 00:01:44,070
So that's what two hundred and four do is just way everything is ready and everything is good to go.

26
00:01:44,190 --> 00:01:47,420
We were getting this responses for 200.

27
00:01:47,580 --> 00:01:51,980
I want you to know that because later on we are going to be using that right.

28
00:01:52,020 --> 00:01:53,340
So I made a file.

29
00:01:53,340 --> 00:02:00,410
I want you to create a file called javascript up BHB and another one javascript DML mail.

30
00:02:00,420 --> 00:02:08,160
All right let's go to javascript Deitsch the mailing list create some boilerplate or some ex-teammates

31
00:02:08,170 --> 00:02:11,390
skeleton if you want to call it that.

32
00:02:11,590 --> 00:02:15,430
And here I'm going to try to do everything on this lecture so this lecture might be a little longer

33
00:02:15,430 --> 00:02:17,030
than the rest.

34
00:02:17,050 --> 00:02:23,640
So in order for us to initialize Ageod's right to to have everything work and we need to create an object.

35
00:02:23,670 --> 00:02:24,160
All right.

36
00:02:24,310 --> 00:02:28,450
So objects is like a blueprint for those of you that don't know what an object is.

37
00:02:28,450 --> 00:02:32,750
In programming it's like a blueprint so it can be something like this.

38
00:02:32,850 --> 00:02:40,060
Let me show you this is how you can do an object in BHB and most languages objects are the same and

39
00:02:40,060 --> 00:02:44,940
you have a language programming language so let me give you a little introduction here so you can create

40
00:02:44,940 --> 00:02:46,910
an object called user.

41
00:02:46,930 --> 00:02:47,730
All right.

42
00:02:48,150 --> 00:02:54,150
And then here you would have functions this would be an example function.

43
00:02:55,080 --> 00:02:55,930
All right.

44
00:02:56,460 --> 00:02:58,940
And then you can just execute whatever you want in here.

45
00:02:59,010 --> 00:02:59,310
Right.

46
00:02:59,310 --> 00:03:01,280
Of course it's a function.

47
00:03:01,290 --> 00:03:01,680
Right.

48
00:03:01,770 --> 00:03:04,920
Well this this is that object because it's a blueprint.

49
00:03:04,920 --> 00:03:07,740
This is like the container of method.

50
00:03:07,770 --> 00:03:11,770
Now inside a class or inside an object right inside this blueprint.

51
00:03:11,970 --> 00:03:17,430
This is called a method instead of a function even though this function is called a method.

52
00:03:17,490 --> 00:03:21,020
So that's a method and I want to show you properties and this would be a property.

53
00:03:21,060 --> 00:03:29,500
This is using BHB but just don't mind the way you write it the user name.

54
00:03:29,510 --> 00:03:33,570
All right this just do a javascript.

55
00:03:33,660 --> 00:03:34,250
All right.

56
00:03:34,350 --> 00:03:36,780
So this will be a natural view.

57
00:03:36,780 --> 00:03:45,160
Some people call each of you some people call it properties or right or variable a class or a blueprint.

58
00:03:45,180 --> 00:03:48,840
Now down here is where you create the object.

59
00:03:48,850 --> 00:03:53,750
So you've got the blueprint with the methods and propert and you can have as many as you want.

60
00:03:53,960 --> 00:04:01,150
And down here is where you create this new object you say new and you use the object name parentheses

61
00:04:01,240 --> 00:04:01,770
and that's it.

62
00:04:01,790 --> 00:04:08,850
You created this object and you assign it any name you want object 10.

63
00:04:08,870 --> 00:04:09,380
There we go.

64
00:04:09,380 --> 00:04:15,340
And now here in this variable you are going to have all the functionalities of your functions inside

65
00:04:15,410 --> 00:04:19,460
methods and all the properties available.

66
00:04:19,600 --> 00:04:27,240
And every time you want to use that object all you have to do is use the name of that object dot whatever.

67
00:04:27,260 --> 00:04:30,160
It depends on what language you are using.

68
00:04:30,160 --> 00:04:38,490
All right so that whatever function you have like this and that will add to Q function because you are

69
00:04:38,490 --> 00:04:46,540
using the object now to add to queue whatever is inside that class or that you know blueprint and you

70
00:04:46,540 --> 00:04:51,500
can access it very well and you can assign them different values as well.

71
00:04:51,870 --> 00:04:56,930
All right so that user name and you can assign this different.

72
00:04:57,210 --> 00:05:01,810
So now you create an object and you can create as many objects as you want.

73
00:05:02,100 --> 00:05:05,800
You can create object 12 in Object 12.

74
00:05:05,870 --> 00:05:12,080
You can assign the user name property to something else like Maria.

75
00:05:12,090 --> 00:05:16,890
So now this object has a different property value.

76
00:05:17,070 --> 00:05:17,840
You see what I mean.

77
00:05:17,940 --> 00:05:20,130
So you can can create on limited objects.

78
00:05:20,130 --> 00:05:24,750
Now this is not a object class or anything like that.

79
00:05:24,750 --> 00:05:31,050
I just wanted you to have some type of idea on what object and method and properties are before we start.

80
00:05:31,050 --> 00:05:31,800
All right.

81
00:05:32,010 --> 00:05:34,500
So I try my best Hopefully you understand.

82
00:05:34,500 --> 00:05:37,190
If not rewind the video and try to understand it.

83
00:05:37,410 --> 00:05:39,990
You don't need to understand it to follow along.

84
00:05:40,050 --> 00:05:41,750
But I just wanted you to know that.

85
00:05:41,760 --> 00:05:44,330
So anyways how how do we initialize agents.

86
00:05:44,390 --> 00:05:49,520
Very simple we create an object and the object name is already defined.

87
00:05:49,800 --> 00:05:53,560
It's in mail H.

88
00:05:53,890 --> 00:05:58,900
TTP requests and you can see right here right.

89
00:05:59,010 --> 00:06:02,040
It needs to be everything exactly the way I'm doing it right now.

90
00:06:02,040 --> 00:06:04,040
And then the parentheses.

91
00:06:04,380 --> 00:06:04,910
All right.

92
00:06:05,070 --> 00:06:10,080
And then we can assign it to a variable that we can assign it to let's say whatever variable I want

93
00:06:10,370 --> 00:06:12,270
the object I'm going to call it the object.

94
00:06:12,270 --> 00:06:17,760
And of course we need a timing operator there and that's how you initialize everything.

95
00:06:17,790 --> 00:06:26,310
And now you start using this object to access methods and properties of the agents of Ageod's so that

96
00:06:26,310 --> 00:06:28,420
where you can communicate with the server.

97
00:06:28,430 --> 00:06:28,740
All right.

98
00:06:28,740 --> 00:06:30,300
This is all the final ready for you.

99
00:06:30,300 --> 00:06:36,730
You don't have to do anything special here you don't have to do custom's objects or anything like that.

100
00:06:36,870 --> 00:06:37,500
All right.

101
00:06:38,040 --> 00:06:44,490
So now that I explained to you how I worked on the next lecture I'm going to show you this working and

102
00:06:44,490 --> 00:06:47,090
hopefully we can finish in the next lecture.

103
00:06:47,310 --> 00:06:49,650
Everything that we have to do we can finish everything we have to do.

104
00:06:49,650 --> 00:06:50,010
All right.

105
00:06:50,020 --> 00:06:54,260
So again if you do not understand or worry about it you don't need it.

106
00:06:55,000 --> 00:06:59,230
But I want you to know it and you can always rewind the video and watch it a hundred times if you need

107
00:06:59,230 --> 00:06:59,680
to.

108
00:06:59,920 --> 00:07:03,130
Thank you so much and I'll see you in the next lecture.

