WEBVTT
1
00:00:00.420 --> 00:00:07.170
Hello and welcome again to Mudgal to do them we will now get us ready to start the implementation of

2
00:00:07.170 --> 00:00:07.910
our AI.

3
00:00:08.040 --> 00:00:13.610
And as usual the first thing that we need to do is set the right father as working directory.

4
00:00:13.600 --> 00:00:17.360
So let's do this now so that we can move on to what's more interesting.

5
00:00:17.610 --> 00:00:24.240
So as usual I start on my desktop then I go to my artificial intelligence that folder then module to

6
00:00:24.240 --> 00:00:25.450
now do.

7
00:00:25.650 --> 00:00:29.240
And there we go to the that we have to set as a working directory.

8
00:00:29.520 --> 00:00:34.890
So let's do this now we click on these two but here then restart kernel and then yes.

9
00:00:35.100 --> 00:00:35.990
And here we go.

10
00:00:36.090 --> 00:00:39.070
We now have the right folder as a working directory.

11
00:00:39.480 --> 00:00:45.450
So now you can see we have four foules well actually three thousand one folder in this working directory

12
00:00:45.450 --> 00:00:46.250
folder.

13
00:00:46.260 --> 00:00:47.640
So let's start with the first one.

14
00:00:47.640 --> 00:00:50.080
The first one is a either way.

15
00:00:50.260 --> 00:00:55.910
That's of course the file that will contain our artificial intelligence and that's nothing else than

16
00:00:55.920 --> 00:00:56.710
this file here.

17
00:00:56.910 --> 00:01:04.710
That is the AIW I fell in which will implement everything that is related to building an AI and especially

18
00:01:04.710 --> 00:01:07.130
building an AI AI with the deep convolutional.

19
00:01:07.130 --> 00:01:08.740
Q learning more.

20
00:01:09.080 --> 00:01:12.200
So basically that's where we'll have the big adventure.

21
00:01:12.240 --> 00:01:17.210
Then we have some other Feltz we have the second floor which is experience we play that way.

22
00:01:17.460 --> 00:01:23.970
And so this time I put experience to play separately just because we already implemented it and now

23
00:01:23.970 --> 00:01:25.870
we want to focus on what's new.

24
00:01:25.980 --> 00:01:32.370
And trust me we have a lot of new things to do with this new artificial intelligence because not only

25
00:01:32.370 --> 00:01:36.620
we want to build an AI AI but we want to build any AI to beat doom.

26
00:01:36.690 --> 00:01:42.540
So you can imagine that this will require some quite advanced code so no worries.

27
00:01:42.540 --> 00:01:46.850
We have a big code waiting for us and you will learn a lot of new tricks.

28
00:01:46.860 --> 00:01:53.450
That's why this experience replay trick that you already know and that I remind improves a lot the training.

29
00:01:53.640 --> 00:01:59.550
Well let's put it separately in this experience we played that I found so that we can now focus on all

30
00:01:59.550 --> 00:02:02.950
the new concepts techniques and tricks that are waiting for us.

31
00:02:03.060 --> 00:02:06.890
All right and then we have the image pre-processing that I found.

32
00:02:06.930 --> 00:02:12.510
So that's another python file which will take care of pre-processing or images because you know this

33
00:02:12.510 --> 00:02:18.890
time or I will have eyes and that's because the input states are no longer encoded by a vector.

34
00:02:18.960 --> 00:02:21.560
But this time the input states are the images.

35
00:02:21.570 --> 00:02:27.960
So the first layer of the big neural network that will make will be the eyes and that will be the convolutional

36
00:02:27.960 --> 00:02:34.830
layers of the convolutional new network to make sure these images can be accepted as inputs of the convolutional

37
00:02:34.830 --> 00:02:35.710
neural network.

38
00:02:35.850 --> 00:02:42.270
Well we need to preprocess them and so this fout will take care of pre-processing these images so that

39
00:02:42.270 --> 00:02:44.220
they can go into the neural network.

40
00:02:44.220 --> 00:02:48.850
And so I separated this valve because this is not directly related to AI.

41
00:02:48.960 --> 00:02:55.350
And again we want to keep the maximum of our brain in our memory and our focus on everything that is

42
00:02:55.350 --> 00:02:56.530
related to AI.

43
00:02:56.700 --> 00:03:02.430
So we are putting this separately so that we can preprocess even just in a flash light and save some

44
00:03:02.430 --> 00:03:03.860
energy for the rest.

45
00:03:03.910 --> 00:03:07.690
You can have a look at it if you want and you also have the deep cores.

46
00:03:07.740 --> 00:03:10.490
Well you can have a look at the practical tutorials.

47
00:03:10.560 --> 00:03:12.690
We talk about image processing.

48
00:03:12.840 --> 00:03:15.410
Well here again we really want to focus on the eye.

49
00:03:15.420 --> 00:03:19.770
Trust me we have a lot to do and eventually the last folder.

50
00:03:19.890 --> 00:03:21.660
Well that's the videos folder.

51
00:03:21.720 --> 00:03:24.650
So right now this folder is empty as you can see.

52
00:03:24.780 --> 00:03:31.190
But when we execute the code some videos of the apelin doom will be added to this folder.

53
00:03:31.290 --> 00:03:36.770
So that will be very exciting because we will see on some videos how well the AI is doing.

54
00:03:36.870 --> 00:03:42.070
So we will literally see the AI killing the monsters and trying to run towards the goal.

55
00:03:42.220 --> 00:03:44.410
You're going to see this will be pretty exciting.

56
00:03:44.580 --> 00:03:50.790
So of course the first videos will be very bad because the eye will not be trained much yet and so it

57
00:03:50.790 --> 00:03:56.940
will get killed very fast but then you will see that as the training is progressing well the eye will

58
00:03:56.940 --> 00:04:02.330
get better and better and eventually it will manage to kill some monsters not getting killed.

59
00:04:02.430 --> 00:04:06.660
And hopefully we will be able to make it reached to go.

60
00:04:06.660 --> 00:04:10.720
All right so let's go back to our AFL which is just one.

61
00:04:10.860 --> 00:04:16.710
And as you can see I already took care of importing all the central libraries and packages that we need

62
00:04:17.040 --> 00:04:17.870
to play them.

63
00:04:18.060 --> 00:04:23.160
So let's quickly have a look at them one by one we have of course none by because we'll be working with

64
00:04:23.160 --> 00:04:23.920
arrays.

65
00:04:24.090 --> 00:04:25.740
That's inevitable.

66
00:04:25.740 --> 00:04:29.500
Then we have talked of course because we're implementing the AI with a torch.

67
00:04:29.580 --> 00:04:35.220
Then we have the torch that and a module which contains all the tools to implement a neural network.

68
00:04:35.220 --> 00:04:40.740
So for example the module will contain the convolutional layers that will be part of our future neural

69
00:04:40.740 --> 00:04:41.790
network.

70
00:04:41.790 --> 00:04:49.110
Then we have that and then that functional package which has a shortcut and that contains all the functions

71
00:04:49.110 --> 00:04:50.840
that are used in a neural network.

72
00:04:50.970 --> 00:04:57.480
So typically the activation functions will be using some rectifying activation functions but also some

73
00:04:57.790 --> 00:05:04.010
pooling function for the company neural networks and all these functions are contained in functional.

74
00:05:04.240 --> 00:05:10.990
Then we have up to him which is of course for optimizer I think we'll be using an addon optimizer and

75
00:05:10.990 --> 00:05:18.250
this optimizer is contained in up to him and then the best of the best by torche the variable class

76
00:05:18.250 --> 00:05:24.400
from the autograph module and that's all the power of it all because that's what contains the dynamic

77
00:05:24.400 --> 00:05:29.860
graphs allowing to perform very fast computations of the gradients even the gradient of composition

78
00:05:29.860 --> 00:05:30.820
functions.

79
00:05:30.850 --> 00:05:32.870
So we will definitely be using it.

80
00:05:32.890 --> 00:05:34.400
As for the soldier in car.

81
00:05:34.510 --> 00:05:37.890
But trust me for Dume we will be needing it very bad.

82
00:05:38.260 --> 00:05:45.080
I guess that's all for the essential libraries then we need to import some packages related to open

83
00:05:45.090 --> 00:05:46.680
agent and doom.

84
00:05:46.810 --> 00:05:53.560
So of course we import Jim then we import some wrappers module of the gene library and one of these

85
00:05:53.560 --> 00:05:55.340
wrappers is Kyp wrapper.

86
00:05:55.380 --> 00:05:59.170
So that's basically to import all the tools and environments of Jim.

87
00:05:59.230 --> 00:06:04.390
And finally we have this package that we need to import and which is directly related to do.

88
00:06:04.510 --> 00:06:11.470
And that's the actual space and two discrete of the doom wrapper that basically contains the environment

89
00:06:11.470 --> 00:06:15.330
of doom and more specifically the actions that can be played.

90
00:06:15.340 --> 00:06:19.620
The number of actions for this specific game we're going to play.

91
00:06:19.750 --> 00:06:25.450
And I remind that there are six sections move left move right turn left turn right move forward and

92
00:06:25.450 --> 00:06:27.300
shoot attack.

93
00:06:27.440 --> 00:06:30.780
All right so that's basically what you need to import for doom.

94
00:06:30.820 --> 00:06:36.950
And then finally we of course need to import our two internal files experience.

95
00:06:36.970 --> 00:06:38.430
We played a pure Whyfor experience.

96
00:06:38.440 --> 00:06:45.220
We play an image pre-processing to preprocess the images that are nothing else than the images of the

97
00:06:45.220 --> 00:06:45.950
screen.

98
00:06:46.060 --> 00:06:52.810
When playing the game and these images will be pre-processed converted into non-payers reshaped to a

99
00:06:52.810 --> 00:06:58.680
certain format and then they will go to the new one that was the convolutional on one that was all right.

100
00:06:58.680 --> 00:07:07.710
So I guess now that we were ready to start the big implementation of this AI and now it's very important

101
00:07:07.710 --> 00:07:13.890
for me to tell you that that leads me to the very important point of this Munjal is that since you know

102
00:07:13.890 --> 00:07:17.370
I told you we have a big implementation waiting for us.

103
00:07:17.490 --> 00:07:21.720
Well in order to not get lost in all this we need a good structure.

104
00:07:21.930 --> 00:07:24.950
And so I already highlighted the structure.

105
00:07:25.170 --> 00:07:28.020
We will be implementing this in two parts.

106
00:07:28.020 --> 00:07:30.920
The first part will be about building the AI.

107
00:07:31.110 --> 00:07:35.260
So that's where we will make the brain of the ai ai in the brain.

108
00:07:35.280 --> 00:07:38.260
As you understood it's nothing else than the neural network.

109
00:07:38.370 --> 00:07:45.390
You know this big CNN composed of some convolutional layers and then some fully connected layers to

110
00:07:45.390 --> 00:07:46.710
predict the outputs.

111
00:07:46.710 --> 00:07:50.430
There are still the key values and then we'll make the body of the AI.

112
00:07:50.550 --> 00:07:53.270
And that's the new representation I'm bringing to you.

113
00:07:53.400 --> 00:07:55.490
And that's again not to get lost.

114
00:07:55.620 --> 00:08:01.260
You will see that the further we progress with the code the more we will see the structure and everything

115
00:08:01.260 --> 00:08:02.590
will make sense in the end.

116
00:08:02.880 --> 00:08:06.480
And to make sure that makes sense we need a representation of the AI.

117
00:08:06.690 --> 00:08:12.840
And basically this first part of building the AI will be composed of three sections.

118
00:08:12.840 --> 00:08:17.370
First section will be about making the brain that is the neural network.

119
00:08:17.430 --> 00:08:20.200
The second section will be about making the body.

120
00:08:20.400 --> 00:08:25.200
And I'm calling it the body because this is the part that will tell the AI how to play the action.

121
00:08:25.200 --> 00:08:30.590
So you know first you have the brain that detects the images and predicts the q values.

122
00:08:30.660 --> 00:08:36.480
But then you need to specify how the AI should play the action and that it does it with its value like

123
00:08:36.480 --> 00:08:37.790
a human body would do.

124
00:08:38.040 --> 00:08:44.010
So the body will be the part where we will specify the method of playing the action.

125
00:08:44.010 --> 00:08:50.280
So for example with our self-driving car the brain was a neural network we made and the body was how

126
00:08:50.280 --> 00:08:51.500
the action was played.

127
00:08:51.570 --> 00:08:53.540
That is with the Saft next method.

128
00:08:53.700 --> 00:08:58.290
And here that's the same we're going to make a brain and we're going to make a body which will play

129
00:08:58.290 --> 00:08:59.080
the action.

130
00:08:59.190 --> 00:09:00.320
I will let you find out.

131
00:09:00.520 --> 00:09:06.180
But the key point in all this is that we will have a very structured code so that not only you can take

132
00:09:06.180 --> 00:09:11.610
a step back and really understand what's going on but also you will be able to use it as a framework

133
00:09:11.850 --> 00:09:15.360
whenever you want to build the AI for other purposes.

134
00:09:15.360 --> 00:09:15.970
All right.

135
00:09:15.990 --> 00:09:17.540
And after building the.

136
00:09:17.640 --> 00:09:24.810
In part one we will move on to part 2 which will be about implementing the convolutional here and there

137
00:09:24.810 --> 00:09:26.820
again will have different sections.

138
00:09:26.910 --> 00:09:29.850
And one of them will be of course to train the AI.

139
00:09:30.240 --> 00:09:32.560
So I can't wait to dive into it now.

140
00:09:32.580 --> 00:09:38.950
We're going to start with one obviously and we're going to start by making the brain of our AI.

141
00:09:39.330 --> 00:09:41.580
So I can't wait until then.

142
00:09:41.680 --> 00:09:42.090
AI.
