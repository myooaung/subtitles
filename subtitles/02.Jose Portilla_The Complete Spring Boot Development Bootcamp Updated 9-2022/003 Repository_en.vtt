WEBVTT
1
00:00:00.450 --> 00:00:04.650
You should place every crud operation inside the repository class.

2
00:00:07.660 --> 00:00:14.050
Crud is any operation that creates, retrieves updates or deletes data from a data store.

3
00:00:16.350 --> 00:00:20.040
Every CRUD operation should be inside the repository class.

4
00:00:22.190 --> 00:00:26.750
In this lesson, you're going to move every crud operation from the controller to the repository.

5
00:00:30.900 --> 00:00:36.930
Step one of the process is that the controller, service and repository should be in separate folders.

6
00:00:36.960 --> 00:00:40.920
This is going to be your first step when dividing your code base into three layers.

7
00:00:44.510 --> 00:00:48.290
In step two, only the repository can access the data store.

8
00:00:57.800 --> 00:01:02.720
And then step three, you need to move every crud operation from the controller to the repository.

9
00:01:05.030 --> 00:01:09.290
The controller class is only concern should be managing the model and presenting the view.

10
00:01:09.350 --> 00:01:15.200
Any operation that involves creating, retrieving, updating or deleting data from the data store should

11
00:01:15.200 --> 00:01:16.970
happen inside repository.

12
00:01:22.250 --> 00:01:27.980
Step one is to create a repository class and a service class and then place each one in a separate folder.

13
00:01:30.050 --> 00:01:32.660
So create a new folder called Controller.

14
00:01:33.750 --> 00:01:36.150
And put the controller class inside.

15
00:01:38.640 --> 00:01:39.870
We're going to move it.

16
00:01:39.870 --> 00:01:44.640
And if you're using VS code, make sure to press okay on refactoring changes.

17
00:01:44.640 --> 00:01:50.100
That way it performs all of the necessary imports for you so that you don't have to do it yourself.

18
00:01:55.720 --> 00:01:56.020
Okay.

19
00:01:56.080 --> 00:01:58.600
Now create a new folder called Repository.

20
00:02:00.860 --> 00:02:04.490
And inside create a class called grade repository.

21
00:02:05.810 --> 00:02:06.680
Dot Java.

22
00:02:08.830 --> 00:02:11.500
And now create a new folder called Service.

23
00:02:13.020 --> 00:02:17.160
And inside create a class called Grade Service Java.

24
00:02:22.810 --> 00:02:27.250
Now, step two is that only the repository can access the data store.

25
00:02:27.910 --> 00:02:33.640
In our case, the data store is an array list and we need to remove it from the controller and place

26
00:02:33.640 --> 00:02:35.680
it inside the repository class.

27
00:02:38.600 --> 00:02:40.850
Perform the necessary imports.

28
00:02:48.730 --> 00:02:55.270
Remove this extra brackets and now make the ArrayList private so that no other class can access it.

29
00:02:59.030 --> 00:03:02.570
The controller class needs to get its data from grid repository.

30
00:03:02.570 --> 00:03:07.850
So inside the controller class, we need to create a new instance of grade repo.

31
00:03:08.420 --> 00:03:09.530
Grade repo.

32
00:03:11.370 --> 00:03:16.560
Grade repo is equal to a new instance of grade repository.

33
00:03:16.770 --> 00:03:17.910
All right.

34
00:03:23.360 --> 00:03:28.850
Now step three is to move every CRUD operation from controller to repository.

35
00:03:29.360 --> 00:03:35.390
Remember that only the repository is allowed to create, retrieve, update or delete data from the data

36
00:03:35.390 --> 00:03:35.990
store.

37
00:03:37.520 --> 00:03:41.210
You need to remove all CRUD operations from the controller class.

38
00:03:42.380 --> 00:03:47.660
The grade form method attempts to retrieve an object at a certain index.

39
00:03:48.170 --> 00:03:54.650
This is the are in crud and all crud operations made against the data store should be inside repository.

40
00:03:54.770 --> 00:04:01.640
So inside grade repository create a method that receives an index and returns an object.

41
00:04:01.880 --> 00:04:03.290
Public grade.

42
00:04:04.160 --> 00:04:07.130
Get grade that receives an index.

43
00:04:08.000 --> 00:04:15.410
And it's going to return the object at that index, return student grades, get the object at the index

44
00:04:15.410 --> 00:04:16.370
that gets passed in.

45
00:04:17.300 --> 00:04:22.580
And now the service class should be the middleman between controller and repository.

46
00:04:22.610 --> 00:04:24.700
But for now, forget about the service class.

47
00:04:24.710 --> 00:04:28.010
We're going to make direct calls from the controller to the repository.

48
00:04:30.930 --> 00:04:32.010
So here we'll say.

49
00:04:32.040 --> 00:04:33.450
Great repository.

50
00:04:33.480 --> 00:04:37.470
Dot get grade at the index that we need.

51
00:04:38.280 --> 00:04:43.740
And now if we go down, the submit method tries to add an object to the data store.

52
00:04:43.770 --> 00:04:46.770
This represents the create operation in CRUD.

53
00:04:47.010 --> 00:04:54.510
So inside the repository class we're going to create a method public void add grade that receives an

54
00:04:54.510 --> 00:05:00.690
object grade grade and add it to the data store grades.

55
00:05:00.690 --> 00:05:05.940
Or I should say student grades dot add the grade that gets passed in.

56
00:05:10.350 --> 00:05:15.000
If you took my Java course, you might be wondering, shouldn't I add a copy of the grade object?

57
00:05:15.030 --> 00:05:20.600
Well, typically in a real life scenario, you would not be using an array list to store your data.

58
00:05:20.610 --> 00:05:22.800
You'd be using an actual database.

59
00:05:22.800 --> 00:05:25.050
So I wouldn't worry too much about that right now.

60
00:05:25.050 --> 00:05:26.550
Anyways, not important.

61
00:05:26.580 --> 00:05:28.500
Go back here and call.

62
00:05:29.940 --> 00:05:31.140
Great repository.

63
00:05:31.810 --> 00:05:33.760
Dot ad grade.

64
00:05:35.890 --> 00:05:39.790
The Submit method also tries to update an object inside the data store.

65
00:05:39.820 --> 00:05:42.660
This represents the update operation in CRUD.

66
00:05:42.670 --> 00:05:47.830
So inside repository create a new method called update grade.

67
00:05:49.240 --> 00:05:51.880
That receives a great object.

68
00:05:52.770 --> 00:05:54.360
As well as an index.

69
00:05:55.440 --> 00:06:00.300
And it's going to update the array list with a grade at a particular index.

70
00:06:07.110 --> 00:06:07.370
Okay.

71
00:06:07.500 --> 00:06:13.200
And now here we can just say great repository, dot update grade.

72
00:06:19.170 --> 00:06:22.440
Also tries to retrieve every great object from the data store.

73
00:06:22.470 --> 00:06:30.090
This represents the retrieve operation in CRUD, also known as the read operation so inside repository.

74
00:06:31.120 --> 00:06:35.710
We're going to create another method that returns every single great object.

75
00:06:35.710 --> 00:06:39.100
The entire list will call it get grades.

76
00:06:40.740 --> 00:06:43.530
And it will simply return the student grades.

77
00:06:48.520 --> 00:06:54.550
And now back here call great repository dot get grades.

78
00:07:00.840 --> 00:07:03.090
And inside of get grade index.

79
00:07:09.220 --> 00:07:12.730
The last step is to rerun your code to make sure that everything still works.

80
00:07:19.600 --> 00:07:21.790
All right, we'll say local host, 80.

81
00:07:21.790 --> 00:07:22.360
80.

82
00:07:25.660 --> 00:07:27.400
We will submit a grade.

83
00:07:28.120 --> 00:07:28.840
Harry.

84
00:07:29.700 --> 00:07:32.240
A minus potions.

85
00:07:33.030 --> 00:07:35.430
We will try to update that student's grade.

86
00:07:35.700 --> 00:07:37.380
We'll give them a C minus.

87
00:07:38.190 --> 00:07:40.470
We'll give them an invalid grade.

88
00:07:42.470 --> 00:07:43.070
All right.

89
00:07:43.070 --> 00:07:44.330
Everything still works.

90
00:07:44.330 --> 00:07:50.390
Refactoring your code obviously does not change any of its logic, but it does make your code a lot

91
00:07:50.390 --> 00:07:52.340
cleaner and easier to scale.

92
00:07:56.130 --> 00:08:01.110
So to recap, you moved related operations to the repository class.

93
00:08:01.410 --> 00:08:05.120
The repository represents the data access layer only.

94
00:08:05.130 --> 00:08:07.350
It has access to the data store.

95
00:08:07.710 --> 00:08:13.560
Also only it is allowed to create, retrieve, update or delete data from the data store.

96
00:08:13.860 --> 00:08:18.600
That's why we moved every CRUD operation from the controller to the repository.

