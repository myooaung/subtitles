WEBVTT
1
00:00:00.880 --> 00:00:05.830
You can also achieve dependency injection with the service and repository annotations.

2
00:00:09.050 --> 00:00:11.510
The component annotation is too generic.

3
00:00:11.750 --> 00:00:15.410
You should use the service and repository annotations instead.

4
00:00:18.660 --> 00:00:20.580
In this lesson, you will do just that.

5
00:00:20.580 --> 00:00:23.580
You will use the service and repository annotations.

6
00:00:27.520 --> 00:00:29.530
Now service repository component.

7
00:00:29.530 --> 00:00:31.000
They are all the same.

8
00:00:31.390 --> 00:00:34.750
Service and repository are no different than components.

9
00:00:37.530 --> 00:00:41.100
Any of these annotations will turn a class into a bean.

10
00:00:45.180 --> 00:00:49.320
We use the component annotation everywhere and it worked fine.

11
00:00:49.800 --> 00:00:54.690
But it's good practice to mark the service class using the service annotation.

12
00:00:58.020 --> 00:01:02.340
And the repository class using the repository annotation.

13
00:01:10.430 --> 00:01:12.320
It makes your code easier to read.

14
00:01:12.620 --> 00:01:18.740
I can quickly look at the annotation and know that this is the service layer and this is the repository

15
00:01:18.740 --> 00:01:19.220
layer.

16
00:01:22.680 --> 00:01:26.940
Now fun fact controller also derives from component.

17
00:01:30.480 --> 00:01:36.630
Spring Boots scans your project for component classes because controller derives from component.

18
00:01:36.660 --> 00:01:40.860
It turns great controller into a been the great controller.

19
00:01:40.860 --> 00:01:46.410
Bean is just an object that lives inside of the spring container and from the spring container, spring

20
00:01:46.410 --> 00:01:51.570
boot manages the great controller being behind the scenes and that's why it seems like magic when it's

21
00:01:51.570 --> 00:01:53.610
able to handle web requests.

22
00:01:53.850 --> 00:01:58.650
Great controller uses its specialized handler methods to serve web requests.

23
00:01:59.700 --> 00:02:01.380
Great service is a been.

24
00:02:03.500 --> 00:02:05.420
Great repository is a been.

25
00:02:10.850 --> 00:02:15.530
Idle Wired injects the grade service bean into one of great controllers fields.

26
00:02:16.670 --> 00:02:22.340
And in turn, Auto Wired injects the great repository bean into one of the great services fields.

27
00:02:28.160 --> 00:02:32.480
So to recap, you use service and repository instead of component.

28
00:02:32.720 --> 00:02:35.930
Service and repository are no different than components.

29
00:02:35.960 --> 00:02:39.620
Any of these annotations will register their classes a bean.

30
00:02:40.220 --> 00:02:42.800
Although we could use components for every class.

31
00:02:42.830 --> 00:02:48.620
It's good practice to use service for the business logic layer and repository for the data access layer.

