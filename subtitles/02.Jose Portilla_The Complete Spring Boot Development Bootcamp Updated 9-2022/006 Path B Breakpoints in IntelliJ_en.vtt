WEBVTT
1
00:00:00.430 --> 00:00:03.370
In this lesson, you will learn how to use breakpoints.

2
00:00:03.400 --> 00:00:07.270
The first thing I want you to do is open a new project.

3
00:00:07.390 --> 00:00:11.250
You're going to start from your spring boot to boot camp resources.

4
00:00:11.260 --> 00:00:16.270
You will go to Appendix A and you're going to open the breakpoints folder.

5
00:00:17.890 --> 00:00:23.410
This folder is going to contain only one Java file and if for some reason it shows you errors, you

6
00:00:23.410 --> 00:00:27.590
might have a message on top that says Set up JDK or something.

7
00:00:27.610 --> 00:00:28.810
Just keep clicking.

8
00:00:28.810 --> 00:00:29.290
Okay.

9
00:00:29.320 --> 00:00:36.400
Choose whatever Java distribution you have installed and eventually you should be rid of all these errors

10
00:00:36.400 --> 00:00:38.470
and have to run buttons over here.

11
00:00:38.830 --> 00:00:42.940
If you right click on the run button, it gives you the option to run and debug.

12
00:00:42.940 --> 00:00:50.530
Before we choose to debug our app, we're going to add a breakpoint and I'm also going to add a print

13
00:00:50.530 --> 00:00:52.420
statement to right over here.

14
00:00:52.600 --> 00:00:54.100
That's out and here.

15
00:00:54.100 --> 00:00:55.870
We're just going to print the receipt.

16
00:00:56.960 --> 00:00:57.150
Oh.

17
00:00:57.250 --> 00:00:58.250
All right.

18
00:00:58.280 --> 00:01:02.450
Let's add another breakpoint right here and run the application and debug mode.

19
00:01:06.990 --> 00:01:07.470
All right.

20
00:01:07.470 --> 00:01:10.410
The first thing I want to address is the continue button.

21
00:01:10.980 --> 00:01:15.330
Continue just goes from one breakpoint to the next.

22
00:01:18.080 --> 00:01:21.160
And here I can monitor the state of my variables.

23
00:01:21.170 --> 00:01:23.510
So right now we just ran the line of code.

24
00:01:23.510 --> 00:01:30.710
String receipt is equal to get receipts and at this point in our runtime receipt equals the following

25
00:01:30.710 --> 00:01:31.370
value.

26
00:01:31.370 --> 00:01:33.440
The total is $5.

27
00:01:34.150 --> 00:01:41.140
And if I press continue again because there are no more breakpoints that follow, the program will terminate

28
00:01:41.140 --> 00:01:44.410
and it will effectively print your message.

29
00:01:45.890 --> 00:01:48.350
Och, we're not done just yet.

30
00:01:48.380 --> 00:01:51.470
Let us re run our application and debug mode.

31
00:01:54.650 --> 00:01:55.300
Okay.

32
00:01:55.310 --> 00:01:59.920
Now, what I'm going to do is I'm going to step inside of get a receipt.

33
00:01:59.930 --> 00:02:03.110
I want to see exactly what's happening inside of this function.

34
00:02:03.110 --> 00:02:05.720
How are we getting back at this return value?

35
00:02:05.720 --> 00:02:09.560
So I will use the button called step into.

36
00:02:10.789 --> 00:02:16.910
And again, here we can monitor the state of our variables, the parameters, price one and price to

37
00:02:16.910 --> 00:02:18.320
equal 2.5.

38
00:02:18.350 --> 00:02:20.480
You can also see this on the side.

39
00:02:22.260 --> 00:02:24.540
If I keep stepping inside the function.

40
00:02:25.780 --> 00:02:28.600
Here we see the message equals a string value.

41
00:02:28.600 --> 00:02:30.520
The total is a dollar sign.

42
00:02:30.880 --> 00:02:36.580
And now if I press step inside again, it's going to step into the sum function.

43
00:02:38.260 --> 00:02:40.240
It steps into the sum function.

44
00:02:40.270 --> 00:02:44.200
The parameter is equal to 2.5 and 2.5 respectively.

45
00:02:45.940 --> 00:02:51.790
If we keep stepping inside and go again here, we can see the value that was returned back from the

46
00:02:51.790 --> 00:02:56.080
sum function is five, so the total now equals five.

47
00:02:57.050 --> 00:03:03.830
And the value that this function is going to return is the string message, plus whatever total we just

48
00:03:03.830 --> 00:03:04.790
evaluated.

49
00:03:05.390 --> 00:03:06.220
All right.

50
00:03:06.230 --> 00:03:07.640
Keep stepping into.

51
00:03:08.690 --> 00:03:12.820
Now the receipt equals the string that was returned.

52
00:03:12.830 --> 00:03:14.540
The total is $5.

53
00:03:17.600 --> 00:03:21.290
And then here I can just press continue and terminate execution.

54
00:03:22.190 --> 00:03:25.160
There's only one last thing I want to show you.

55
00:03:25.670 --> 00:03:27.800
We run the application in debug mode.

56
00:03:28.070 --> 00:03:30.050
If you're getting annoyed, I do apologize.

57
00:03:30.050 --> 00:03:31.490
But this is important.

58
00:03:32.870 --> 00:03:34.130
Again, let's step inside of.

59
00:03:34.130 --> 00:03:35.060
Get your receipt.

60
00:03:36.290 --> 00:03:37.070
Now.

61
00:03:37.070 --> 00:03:38.090
Let's keep going.

62
00:03:38.990 --> 00:03:39.120
Okay.

63
00:03:39.300 --> 00:03:45.270
Now, I want to keep stepping inside of this function, but I don't want to step inside of some.

64
00:03:45.630 --> 00:03:47.310
How can I avoid this?

65
00:03:47.520 --> 00:03:52.800
If I press step into, it's going to go inside of some and assume this function was like millions of

66
00:03:52.800 --> 00:03:53.630
lines long.

67
00:03:53.640 --> 00:03:59.160
This would get annoying real quick, but if I were to press continue, it would skip everything and

68
00:03:59.160 --> 00:04:00.690
just go to the next breakpoint.

69
00:04:00.690 --> 00:04:03.060
So clearly that's not what we want to do.

70
00:04:03.090 --> 00:04:06.900
Let's rerun our application and debug mode.

71
00:04:07.650 --> 00:04:08.010
Oh yeah.

72
00:04:08.040 --> 00:04:11.640
You can rerun your app in debug mode by just pressing the following button.

73
00:04:11.640 --> 00:04:12.930
Should be very handy.

74
00:04:12.930 --> 00:04:14.220
So let's go back.

75
00:04:16.240 --> 00:04:23.290
And now I can keep stepping inside of my function, but I can step over this line and get a receipt

76
00:04:23.290 --> 00:04:25.390
by pressing the step over button.

77
00:04:27.920 --> 00:04:31.490
And having stepped over this function, I can keep stepping into.

78
00:04:32.920 --> 00:04:37.600
It returns a receipt and then that receipt is being printed.

79
00:04:38.670 --> 00:04:39.540
All right.

80
00:04:39.540 --> 00:04:41.630
There is one last thing I want to show you.

81
00:04:41.640 --> 00:04:45.670
I promise I'll run the application and debug mode.

82
00:04:45.690 --> 00:04:50.040
You can also enable and disable your breakpoints.

83
00:04:50.040 --> 00:04:56.940
So here, if I mute the breakpoints and press next, it's just going to skip them and run the app as

84
00:04:56.940 --> 00:04:57.510
normal.

85
00:05:00.400 --> 00:05:02.650
You can also view the breakpoints.

86
00:05:04.970 --> 00:05:08.570
And disable them or enable them as needed.

87
00:05:09.370 --> 00:05:10.180
All right.

88
00:05:10.180 --> 00:05:13.430
That is all I wanted to teach you about to break points.

89
00:05:13.450 --> 00:05:16.270
I will see you in the next break point session.

