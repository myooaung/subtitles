WEBVTT
1
00:00:00.330 --> 00:00:02.100
Welcome to Workbook 1.2.

2
00:00:02.100 --> 00:00:06.000
And this workbook you will create a simple web app using Spring Boot.

3
00:00:06.030 --> 00:00:10.920
The first task is to launch the spring initialize from VS code because that's what we're going to use

4
00:00:10.920 --> 00:00:12.960
to create a MAVEN project.

5
00:00:12.960 --> 00:00:17.190
So I'll press command shift P because I'm using Mac.

6
00:00:17.190 --> 00:00:23.520
If you're using Windows Press Control Shift P, click on the Spring Analyzer to create a Maven project.

7
00:00:23.550 --> 00:00:28.020
The version that I'll be using is the stable 2.7.0.

8
00:00:28.020 --> 00:00:33.060
By the time you're watching this video, the stable version might be newer and something else, so make

9
00:00:33.060 --> 00:00:34.440
sure to choose that.

10
00:00:34.980 --> 00:00:42.540
Obviously Java, the fully qualified domain name that I'm going to choose as come dot learn the part

11
00:00:42.900 --> 00:00:46.620
the artifact ID was there an instruction for that?

12
00:00:47.190 --> 00:00:50.910
We can call it whatever we want as long as we follow the conventions.

13
00:00:50.910 --> 00:00:54.870
It cannot contain capital letters and must join words with a hyphen.

14
00:00:54.870 --> 00:00:59.850
So based on this, I'll just call it.

15
00:01:01.430 --> 00:01:02.050
You know what?

16
00:01:02.060 --> 00:01:03.470
Let's just call it workbook.

17
00:01:05.410 --> 00:01:07.540
The packaging type will be jar.

18
00:01:07.630 --> 00:01:10.900
The version of Java that I'm using is version 11.

19
00:01:10.900 --> 00:01:16.300
So please, please, please make sure to choose a version that matches whatever version of Java you

20
00:01:16.300 --> 00:01:17.890
have installed in your machine.

21
00:01:19.290 --> 00:01:20.400
All right.

22
00:01:21.150 --> 00:01:26.160
Because we're building a web application, we will need the spring web dependency.

23
00:01:26.800 --> 00:01:28.540
And that's about it.

24
00:01:30.280 --> 00:01:31.810
Select this dependency.

25
00:01:32.560 --> 00:01:35.950
Now you can generate this in a directory of your choice.

26
00:01:35.950 --> 00:01:39.170
Could be desktop, could be your home directory.

27
00:01:39.170 --> 00:01:44.230
It wouldn't recommend that I'm going to generate this project inside of a folder called Spring Boot

28
00:01:44.230 --> 00:01:48.580
Course that I had already created before this recording.

29
00:01:50.840 --> 00:01:51.500
Okay.

30
00:01:55.030 --> 00:02:00.190
Instead of our application dot properties, it's telling us to configure the settings of our app such

31
00:02:00.190 --> 00:02:03.620
that it listens for requests on Port 1990.

32
00:02:03.640 --> 00:02:11.560
So we'll go inside of our application properties and we'll say our server will be listening on Port

33
00:02:11.560 --> 00:02:12.880
9090.

34
00:02:13.670 --> 00:02:14.660
All right.

35
00:02:15.330 --> 00:02:22.290
And the static folder contains static HTML images or CSS files because we're going to be returning a

36
00:02:22.290 --> 00:02:24.720
static web page back to the client.

37
00:02:24.750 --> 00:02:28.320
We're going to create an HTML under the static folder.

38
00:02:29.090 --> 00:02:35.840
So under static, I'll create a new file, call it indexed HTML.

39
00:02:37.490 --> 00:02:46.460
And we're going to use the HTML extension to generate a boilerplate HTML template.

40
00:02:46.880 --> 00:02:49.520
We're not going to need anything here.

41
00:02:49.550 --> 00:02:50.780
We'll leave the title.

42
00:02:50.780 --> 00:02:52.130
We'll just say a workbook.

43
00:02:54.040 --> 00:02:55.900
No scripts are necessary.

44
00:02:56.290 --> 00:03:03.640
The only thing we need are a bunch of header elements that display the following text.

45
00:03:04.000 --> 00:03:07.140
So I'll just copy and paste this into my HTML.

46
00:03:07.150 --> 00:03:13.240
And if you don't know what header elements are, they are defined in the HTML cheat sheet.

47
00:03:13.420 --> 00:03:18.610
So in upcoming workbooks, if you end up having trouble with HTML, just visit the cheat sheet.

48
00:03:19.090 --> 00:03:22.090
All right, I'll create four headers.

49
00:03:24.550 --> 00:03:25.420
Each one.

50
00:03:26.470 --> 00:03:31.900
Copy this four times and each header will display a message.

51
00:03:39.620 --> 00:03:40.280
Awesome.

52
00:03:41.780 --> 00:03:43.850
Now I can go ahead and spin up a new term.

53
00:03:43.910 --> 00:03:48.560
Oh, and make sure before you run your code to delete these comments.

54
00:03:49.400 --> 00:03:51.560
And now I can go ahead and spin up a new terminal.

55
00:03:53.970 --> 00:03:55.360
Run the familiar maven.

56
00:03:55.360 --> 00:03:56.830
Clean spring boots run.

57
00:03:58.250 --> 00:04:02.810
Ah, by the way, you can use the up key to on previous terminal commands in case you're not familiar

58
00:04:02.810 --> 00:04:03.650
with it by now.

59
00:04:10.400 --> 00:04:10.970
Sweet.

60
00:04:10.970 --> 00:04:17.720
Our server is listening on Port 1990, which means I can make a request on Port 1990.

61
00:04:20.959 --> 00:04:21.890
And beautiful.

62
00:04:21.890 --> 00:04:29.120
A client made a request on local host 1990 and the server, which happens to be listening on that port,

63
00:04:29.120 --> 00:04:33.500
returned an indexed HTML to populate the client's web page.

64
00:04:34.850 --> 00:04:36.620
And I think that should be it.

65
00:04:36.650 --> 00:04:37.220
All right.

66
00:04:37.220 --> 00:04:39.020
I'll see you in the next lesson.

