WEBVTT
1
00:00:00.270 --> 00:00:03.230
Right now, I can give her mini an A-plus and potions.

2
00:00:03.240 --> 00:00:04.620
Let me just go and do that.

3
00:00:09.880 --> 00:00:13.690
And then I can go and give her an A-minus in that same grade.

4
00:00:19.370 --> 00:00:21.350
Well, that doesn't make any sense.

5
00:00:21.380 --> 00:00:23.350
Which one is her actual grade?

6
00:00:23.360 --> 00:00:26.620
Did she get an A-minus in potions or did she get an A-plus?

7
00:00:26.630 --> 00:00:33.260
We will consider a duplicate grade to be one that repeats the course ID as well as the student ID.

8
00:00:33.470 --> 00:00:37.790
A student cannot have more than one grade for the same course.

9
00:00:38.240 --> 00:00:42.590
So to our table annotation, we're going to apply some unique constraints.

10
00:00:52.450 --> 00:00:55.090
And here I can specify a set of constraints.

11
00:00:55.090 --> 00:00:57.910
We're only going to have one unique constraint.

12
00:00:58.630 --> 00:01:03.850
And this constraint is going to be a multi column constraint because it's going to be based on the course

13
00:01:03.850 --> 00:01:06.100
ID and the student ID columns.

14
00:01:06.460 --> 00:01:11.530
So here we'll say the unique constraint is based on the column names.

15
00:01:12.780 --> 00:01:14.010
Student ID.

16
00:01:16.090 --> 00:01:18.430
As well as course I'd.

17
00:01:19.950 --> 00:01:27.090
Overall, we're imposing a constraint such that every student ID and course ID pair needs to be unique.

18
00:01:27.810 --> 00:01:30.810
Please make sure these actually match your column names.

19
00:01:31.080 --> 00:01:32.220
All right.

20
00:01:32.640 --> 00:01:35.730
I'm going to try duplicating a grade for her money.

21
00:01:35.730 --> 00:01:38.250
So first I'll give her an A minus.

22
00:01:40.000 --> 00:01:43.270
And then I'll try to give her an A-plus for that same grade.

23
00:01:43.840 --> 00:01:46.960
And we get back a data integrity violation exception.

24
00:01:47.930 --> 00:01:49.070
This is perfect.

25
00:01:50.910 --> 00:01:51.180
Okay.

26
00:01:51.240 --> 00:01:54.010
Now, here's another constraint that we have to impose.

27
00:01:54.030 --> 00:01:58.410
You cannot have two courses with the exact same course code.

28
00:01:58.590 --> 00:02:06.210
So back to our course entity, because this constraint of ours only spans one column, we can go over

29
00:02:06.210 --> 00:02:08.130
here and just say unique.

30
00:02:09.300 --> 00:02:10.350
Is equal to true.

31
00:02:13.690 --> 00:02:18.840
Now I'm going to try to submit a course that has the same course code as history of magic.

32
00:02:18.850 --> 00:02:26.470
So I will go to create course and whatever JSON that says, I'm going to submit a course that has the

33
00:02:26.470 --> 00:02:29.770
exact same code as one of our pre-existing records.

34
00:02:29.800 --> 00:02:31.540
Let's try to make that request.

35
00:02:32.140 --> 00:02:39.100
And once again, we get a data integrity violation exception, and that's it with all of these exceptions

36
00:02:39.100 --> 00:02:46.120
that are being thrown, the exceptions from JPA, the exceptions that we are throwing ourselves, it's

37
00:02:46.120 --> 00:02:49.210
time to apply some exception handling and we will do that.

38
00:02:49.210 --> 00:02:51.490
And then next workbook, see you in there.

