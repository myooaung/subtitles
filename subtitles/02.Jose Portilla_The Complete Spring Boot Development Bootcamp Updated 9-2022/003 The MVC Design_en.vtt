WEBVTT
1
00:00:00.490 --> 00:00:04.810
MVC is a design that lets you build flexible applications that scale.

2
00:00:07.740 --> 00:00:11.430
Spring Boot Web applications follow the model view controller design.

3
00:00:13.900 --> 00:00:18.160
So in this lesson you will understand the model of you controller design.

4
00:00:20.740 --> 00:00:23.200
The view is what the user sees.

5
00:00:25.750 --> 00:00:29.650
When a user makes a request, the server sends back HTML.

6
00:00:35.960 --> 00:00:38.760
That HTML populates the user's web page.

7
00:00:38.780 --> 00:00:40.190
This is the view.

8
00:00:43.510 --> 00:00:46.330
The model is data needed by the view.

9
00:00:47.700 --> 00:00:49.170
The view is a skeleton.

10
00:00:49.200 --> 00:00:54.420
The view needs data to become meaningful, and the data that populates the grade table in this case

11
00:00:54.420 --> 00:00:55.380
is the model.

12
00:01:00.200 --> 00:01:03.140
The controller essentially glues the model and view together.

13
00:01:03.140 --> 00:01:05.690
It manages the model and presents the view.

14
00:01:07.850 --> 00:01:09.770
The model represents the data.

15
00:01:11.270 --> 00:01:14.600
The view represents the visual elements of a web page.

16
00:01:16.330 --> 00:01:19.010
And the controller allows them to interact.

17
00:01:19.030 --> 00:01:21.340
It takes the data and it sends it to the view.

18
00:01:23.640 --> 00:01:28.290
So to paint a full picture, the controller handles every Web request.

19
00:01:30.590 --> 00:01:35.120
When a user makes a request, the controller maps the request to a handler method.

20
00:01:35.270 --> 00:01:39.530
The handler method in this case called get grades, fetches data.

21
00:01:42.240 --> 00:01:44.430
It stores the data inside the model.

22
00:01:49.390 --> 00:01:54.100
The View is a template that represents the visual element of a web page alone.

23
00:01:54.130 --> 00:01:58.180
The view is meaningless, so the controller sends the model to the view.

24
00:02:01.050 --> 00:02:03.810
The model populates the view with meaningful data.

25
00:02:07.150 --> 00:02:10.419
And finally, the handler method returns the updated view.

26
00:02:14.610 --> 00:02:19.110
So to recap, spring boot applications follow the model of controller design.

27
00:02:20.790 --> 00:02:23.070
The view is what the user sees.

28
00:02:24.430 --> 00:02:26.920
The muddle is data needed by the view.

29
00:02:27.890 --> 00:02:33.380
And the controller responds to requests by managing the model and presenting the view.

