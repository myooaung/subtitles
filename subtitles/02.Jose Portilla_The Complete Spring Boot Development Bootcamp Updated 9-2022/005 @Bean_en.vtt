WEBVTT
1
00:00:00.990 --> 00:00:04.260
You can also register beans with the bean annotation.

2
00:00:04.950 --> 00:00:11.370
You can register a bean with two types of annotations component and component derivatives like service

3
00:00:11.370 --> 00:00:12.450
or repo.

4
00:00:15.480 --> 00:00:16.530
And being.

5
00:00:19.060 --> 00:00:22.450
In this lesson, you will register a bean with a bean definition.

6
00:00:26.060 --> 00:00:30.500
So going through the process, step one is to create a B definition.

7
00:00:33.290 --> 00:00:36.080
A B definition is an annotated method.

8
00:00:38.470 --> 00:00:40.240
That returns a dependency.

9
00:00:43.290 --> 00:00:47.340
Configuration marks the class as a source for being definitions.

10
00:00:48.840 --> 00:00:54.060
So spring is going to know to find the beans here, create them and add them to the spring container.

11
00:01:06.100 --> 00:01:10.660
And then, as always, auto wired wires the bean into the class that needs it.

12
00:01:13.760 --> 00:01:15.260
For the time being.

13
00:01:15.290 --> 00:01:17.750
Remove the repository annotation.

14
00:01:18.350 --> 00:01:22.550
We can register the repository as a bean using the bean definition.

15
00:01:22.850 --> 00:01:27.890
So first, what you must do is create a class called app config.

16
00:01:27.920 --> 00:01:31.160
So first, create a file called app config java.

17
00:01:32.270 --> 00:01:35.690
And this class is responsible for registering beans.

18
00:01:36.540 --> 00:01:43.500
First we will create a method that returns a greater repository object grade repo.

19
00:01:44.870 --> 00:01:46.430
This method will return.

20
00:01:48.520 --> 00:01:51.820
A new object of the grade repository class.

21
00:01:54.920 --> 00:01:58.070
We're going to mark this method as a beam definition.

22
00:02:00.730 --> 00:02:05.620
The last step is to annotate the app config class with add configuration.

23
00:02:09.270 --> 00:02:14.400
Spring adds the object that the bean definition returns inside the spring container.

24
00:02:18.310 --> 00:02:22.630
And then, as always, auto wired wires the bean wherever it's needed.

25
00:02:23.290 --> 00:02:27.460
So if you run your application, let's make sure everything still works.

26
00:02:27.640 --> 00:02:29.260
We'll go back to the form.

27
00:02:30.410 --> 00:02:33.950
We'll say Harry a plus potions.

28
00:02:34.580 --> 00:02:36.350
Everything is still fine.

29
00:02:37.350 --> 00:02:38.400
All right.

30
00:02:41.160 --> 00:02:41.490
Now.

31
00:02:41.490 --> 00:02:45.210
This is great, but I don't really like registering beans like this.

32
00:02:45.540 --> 00:02:50.670
It's so much work for something we can easily accomplish with the component annotation.

33
00:02:51.060 --> 00:02:53.820
So I'm actually going to delete app config.

34
00:02:54.630 --> 00:03:01.500
And restore the component annotation or the component derivative in this case repository.

35
00:03:03.460 --> 00:03:06.610
So you might be wondering, why did I show you this method?

36
00:03:06.640 --> 00:03:09.980
It's good to be familiar with more than one way of doing something.

37
00:03:10.000 --> 00:03:11.950
You never know when you'll need it.

38
00:03:14.160 --> 00:03:17.910
So to recap, you register to be using a Bing definition.

39
00:03:20.090 --> 00:03:24.140
Configuration marks the class as a source for being definitions.

40
00:03:24.590 --> 00:03:29.810
So spring is going to know to find the beans here, create them and add them to the spring container.

41
00:03:30.550 --> 00:03:35.110
And then, as always, auto wire to wires the bean into the class that needs it.

