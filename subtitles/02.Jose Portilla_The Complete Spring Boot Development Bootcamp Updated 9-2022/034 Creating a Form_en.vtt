WEBVTT
1
00:00:00.090 --> 00:00:05.430
No application is complete unless we have some kind of form that allows the user to enter data.

2
00:00:05.460 --> 00:00:08.790
So in this lesson, we'll go through the process of creating a form.

3
00:00:08.820 --> 00:00:12.180
Step one is to bind the form to an object.

4
00:00:13.590 --> 00:00:20.880
So as always, you've got your HTML template form that HTML and you're going to need a handler method

5
00:00:20.880 --> 00:00:24.350
that returns the form view when a user makes a get request.

6
00:00:24.360 --> 00:00:28.170
But before we do that, we need to add some data to the model.

7
00:00:28.170 --> 00:00:31.830
Namely, we're going to add an empty grade object to the model.

8
00:00:31.830 --> 00:00:39.720
And what we're going to do is bind this entire object to our form using the leaf attribute object.

9
00:00:42.960 --> 00:00:49.710
And once we perform this bind, then we can bind each form input to a field in the model object.

10
00:00:52.990 --> 00:00:59.380
So now every single input can use a selection expression and bind to a field in the model object.

11
00:00:59.410 --> 00:01:02.470
The name input will bind to the name field.

12
00:01:03.130 --> 00:01:10.030
The score input will bind to the score field and the subject input will bind to the subject field.

13
00:01:10.390 --> 00:01:13.960
And after we've done all that, we can return the form view.

14
00:01:20.600 --> 00:01:22.220
As we return the form view.

15
00:01:22.250 --> 00:01:25.760
Each input is going to be attached to a field.

16
00:01:25.850 --> 00:01:30.020
This is going to be very important as we submit our form.

17
00:01:32.830 --> 00:01:40.390
When a user makes a get request on an empty path, what we want to do is map that request to a handler

18
00:01:40.390 --> 00:01:42.190
method called grade form.

19
00:01:42.640 --> 00:01:49.480
Every handler method can access the model, and when a request is made on this path, what we're going

20
00:01:49.480 --> 00:01:53.440
to do is return defined leaf template form.

21
00:01:54.480 --> 00:02:01.290
Now, before we return the form for you, what we need to do is bind this entire form to a model object.

22
00:02:01.500 --> 00:02:06.390
So back here we're going to say model dot add attribute.

23
00:02:07.560 --> 00:02:12.750
You're going to add a great attribute that maps to an empty grade object.

24
00:02:14.620 --> 00:02:15.580
All right.

25
00:02:15.970 --> 00:02:18.220
And back inside a form that XHTML.

26
00:02:18.220 --> 00:02:25.060
I can bind this entire form to an object by using the leaf attribute object.

27
00:02:27.790 --> 00:02:31.030
And we're going to bind it to the model object grade.

28
00:02:31.750 --> 00:02:36.400
The variable expression retrieves the grade object that's in our model.

29
00:02:36.910 --> 00:02:42.730
And this time leaf attribute is going to bind the object that results from this expression to this entire

30
00:02:42.730 --> 00:02:43.330
form.

31
00:02:45.290 --> 00:02:49.490
The life attribute field binds a form element to an object.

32
00:02:49.520 --> 00:02:53.690
This is going to be very important as we submit our form.

33
00:02:56.880 --> 00:03:04.020
Because the entire form is bound to this object, then each input can use a selection expression.

34
00:03:04.050 --> 00:03:08.400
Finally, field is equal to a selection expression.

35
00:03:08.880 --> 00:03:11.580
This one is going to bind to the name field.

36
00:03:12.930 --> 00:03:15.690
This one will bind to the score field.

37
00:03:17.260 --> 00:03:20.650
And this one is going to bind to the subject field.

38
00:03:22.280 --> 00:03:22.830
Okay.

39
00:03:23.750 --> 00:03:27.020
Now I'm actually going to run this in debug mode.

40
00:03:30.520 --> 00:03:37.150
I'll have to go over here, press run and debug, and I will add some breakpoints to our getters.

41
00:03:45.340 --> 00:03:46.220
Not the setter.

42
00:03:46.240 --> 00:03:47.170
The getters.

43
00:03:48.710 --> 00:03:51.590
Now I'm going to make a request to local host 1880.

44
00:03:54.190 --> 00:03:56.440
Here the getter gets to name executes.

45
00:03:56.470 --> 00:04:03.010
Your getters are being used to pre populate each input with a field from the model object.

46
00:04:03.010 --> 00:04:07.090
So here we're using the getter get name to return the name value.

47
00:04:10.490 --> 00:04:12.410
Then we're using the get or get score.

48
00:04:14.600 --> 00:04:22.010
Then we're using the getter get subject and because every single field in this great object is null,

49
00:04:22.040 --> 00:04:25.670
it follows that every single input is going to start off as empty.

50
00:04:29.860 --> 00:04:32.260
Well, right now, if I were to do the same thing.

51
00:04:33.320 --> 00:04:35.330
And pass in a populated grade object.

52
00:04:35.330 --> 00:04:36.620
So we'll say new grade.

53
00:04:41.420 --> 00:04:44.330
Well, we'll just pass in the following grade.

54
00:04:53.460 --> 00:04:54.180
Okay.

55
00:04:55.350 --> 00:04:57.450
We'll go back to local host 8080.

56
00:05:02.160 --> 00:05:04.380
Oh, I stop the runtime.

57
00:05:04.380 --> 00:05:07.020
I'm just going to rerun this using Maven clean spring boot run.

58
00:05:07.020 --> 00:05:08.060
I got my point across.

59
00:05:08.070 --> 00:05:09.570
No more need for breakpoints.

60
00:05:22.790 --> 00:05:26.450
And now each form input is pre-populated with field values.

61
00:05:26.450 --> 00:05:33.740
So because the entire form is bound to an object and each input is bound to a field in the object,

62
00:05:33.740 --> 00:05:38.150
then it follows that each input is going to be pre-populated with a value.

63
00:05:41.060 --> 00:05:44.000
Every single input is attached to a field.

64
00:05:44.000 --> 00:05:47.900
And this is going to be very important when we submit our form.

