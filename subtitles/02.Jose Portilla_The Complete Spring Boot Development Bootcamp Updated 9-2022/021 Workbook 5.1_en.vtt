WEBVTT
1
00:00:00.240 --> 00:00:02.100
Welcome to work Book 5.1.

2
00:00:02.100 --> 00:00:05.730
By this point, you learn about two different ways to configure beans.

3
00:00:05.790 --> 00:00:12.990
The easiest way to do it is to just annotate your classes with component or component derivative annotations,

4
00:00:12.990 --> 00:00:17.520
and as soon as you run your app it will perform a component scan.

5
00:00:17.520 --> 00:00:23.550
It's going to create objects out of these classes and store these objects inside of the spring container.

6
00:00:23.940 --> 00:00:30.510
There they are going to live as beans and then you can use auto wire to inject these beans into your

7
00:00:30.510 --> 00:00:31.950
variables as needed.

8
00:00:31.950 --> 00:00:38.580
And so this prevents tight coupling because now great service instead of creating its own dependency,

9
00:00:38.580 --> 00:00:43.560
what it's doing is it's using an object that already lives inside of the spring container.

10
00:00:43.560 --> 00:00:45.270
It's using a bean.

11
00:00:45.570 --> 00:00:51.360
And the second way that you learn to configure beans was to register them as bean definitions inside

12
00:00:51.360 --> 00:00:52.710
of an app config file.

13
00:00:52.710 --> 00:00:59.580
But this app config was configured to scan for beans inside of an XML file, and that's what we will

14
00:00:59.580 --> 00:01:01.610
be doing in Workbook 5.1.

15
00:01:01.620 --> 00:01:06.690
That being said, in the olden days it was only possible to configure beans using XML and you might

16
00:01:06.690 --> 00:01:08.850
think, hey, XML is really, really gross.

17
00:01:08.850 --> 00:01:14.520
I don't want to use it and I agree with you, but I had to use XML in the past and now so will you.

18
00:01:14.730 --> 00:01:15.360
I'm just kidding.

19
00:01:15.360 --> 00:01:17.100
That's not the reason why I'm teaching it.

20
00:01:17.100 --> 00:01:21.630
The reason why I'm teaching it is because you never know what code base you'll be working on and how

21
00:01:21.630 --> 00:01:23.070
they configure their beans.

22
00:01:23.070 --> 00:01:28.320
So it's good to be versatile and have as many tools under your belt as possible.

23
00:01:28.860 --> 00:01:35.880
So the first step is to create an app config that XML file inside of source slash main slash resources.

24
00:01:36.570 --> 00:01:40.680
Let's do just that app config XML.

25
00:01:41.190 --> 00:01:44.430
And here is where we're going to configure our beans.

26
00:01:44.430 --> 00:01:47.700
Let's just copy the XML frame, learn the part.

27
00:01:48.870 --> 00:01:51.660
And the template is usually always the same.

28
00:01:51.660 --> 00:01:53.250
You've got your bing ID.

29
00:01:53.280 --> 00:01:56.250
I'm going to call this one great repository.

30
00:01:57.140 --> 00:01:59.930
And I will call this one great service.

31
00:02:00.170 --> 00:02:03.980
The path to the bean is specified as follows.

32
00:02:04.490 --> 00:02:06.260
I start from the group ID.

33
00:02:07.780 --> 00:02:13.900
So come dot ltb in this case dot great submission your artifact.

34
00:02:14.620 --> 00:02:19.420
And then our grade repo is inside of repository.

35
00:02:21.180 --> 00:02:24.690
Then we'll say dot grade repository.

36
00:02:26.070 --> 00:02:29.550
And then here we'll say the path is almost the same.

37
00:02:29.550 --> 00:02:30.750
Let's just copy it.

38
00:02:35.110 --> 00:02:40.240
Com lip service down to great service.

39
00:02:42.080 --> 00:02:43.040
All right.

40
00:02:44.390 --> 00:02:46.590
And that's pretty much it.

41
00:02:46.610 --> 00:02:52.290
Before you run your code, make sure to remove the component annotations.

42
00:02:52.310 --> 00:02:55.620
We're already creating the beans inside of app config.

43
00:02:55.640 --> 00:02:57.440
We don't want to create them again.

44
00:02:57.440 --> 00:03:03.290
And actually I think it would throw an error anyways, so make sure to remove it.

45
00:03:03.530 --> 00:03:08.000
I'll spin up a new terminal and make sure that everything works as it should.

46
00:03:17.910 --> 00:03:24.240
So what's ultimately happening is app config is looking inside of our opti XML file for beans.

47
00:03:24.240 --> 00:03:29.700
And so what it will do is it will create a bean for greater repository and it will create a bean for

48
00:03:29.700 --> 00:03:30.780
great service.

49
00:03:30.780 --> 00:03:36.000
And then in auto wired, we are injecting these beans as needed.

50
00:03:38.100 --> 00:03:38.940
All right.

51
00:03:38.940 --> 00:03:42.900
So let's go ahead and just test the app, make sure everything works as it should.

52
00:03:44.750 --> 00:03:46.880
We're off to a very good start.

53
00:03:46.910 --> 00:03:53.660
We'll say, Harry, a minus potions update as grade should be a C minus.

54
00:03:53.900 --> 00:03:54.830
All right.

55
00:03:56.400 --> 00:03:58.710
Then we'll see her mini a plus.

56
00:03:59.630 --> 00:04:02.360
We'll just test everything before we move on.

57
00:04:04.410 --> 00:04:05.280
Looking good.

58
00:04:05.700 --> 00:04:10.080
So this was another way that you can configure beans in spring boot.

59
00:04:10.080 --> 00:04:15.750
You looked at three ways using component annotations, registering them as being definitions directly

60
00:04:15.750 --> 00:04:17.820
inside of your app config file.

61
00:04:17.850 --> 00:04:24.190
Or you can connect your app config to an app config XML and configure your beans here.

62
00:04:24.210 --> 00:04:31.980
Personally, I prefer the path of least resistance, which is to just use your component annotations.

63
00:04:32.670 --> 00:04:33.270
All right.

64
00:04:33.270 --> 00:04:35.190
That's all for Workbook 5.1.

65
00:04:35.190 --> 00:04:37.890
I hope you enjoyed it and I will see you in the next one.

