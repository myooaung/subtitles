WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.210
in this lecture,

00:00:01.210 --> 00:00:07.990
let's try toe insert a card from our Gela application into the table that we created that

00:00:07.990 --> 00:00:08.920
the product stable.

00:00:08.920 --> 00:00:11.550
But before going into writing a program,

00:00:11.550 --> 00:00:12.900
let's say you till,

00:00:12.900 --> 00:00:13.230
Plus,

00:00:13.230 --> 00:00:15.280
to accept the details from the user.

00:00:15.280 --> 00:00:18.230
So I'm gonna right click on my package here.

00:00:18.230 --> 00:00:21.980
Andi created a new class called Keyboard Util.

00:00:21.980 --> 00:00:23.350
Click Finish on.

00:00:23.350 --> 00:00:29.590
This is gonna be also a final plus because it's a utility class that's also make a private

00:00:29.590 --> 00:00:35.370
constructor only to ensure that you cannot inst ensure this class in any way possible,

00:00:35.370 --> 00:00:39.160
and then we're gonna write their public static function.

00:00:39.160 --> 00:00:44.730
So the intention of this particular function is toe except value from the user,

00:00:44.730 --> 00:00:47.300
probably by displaying a message,

00:00:47.300 --> 00:00:50.050
I'm going to start by using a string function.

00:00:50.050 --> 00:00:52.880
So I'm gonna say you're public static string,

00:00:52.880 --> 00:00:57.500
get string and then I'll say your string message.

00:00:57.500 --> 00:00:59.360
I want to show that message to the user.

00:00:59.360 --> 00:01:06.300
So I'm gonna tape your system dot out dot print aan den passed the message.

00:01:06.300 --> 00:01:11.760
It's just gonna tell the user like inter name for the product or enter the idea etcetera.

00:01:11.760 --> 00:01:17.500
And then I want talks up the date off on the user for this.

00:01:17.500 --> 00:01:18.780
Emily use scanner.

00:01:18.780 --> 00:01:21.800
SC equals toe new scanner.

00:01:21.800 --> 00:01:26.340
But my scanner object would now represent system dot in.

00:01:26.340 --> 00:01:26.820
So,

00:01:26.820 --> 00:01:27.390
basically,

00:01:27.390 --> 00:01:33.430
I want to accept from the keyboard on scanner is supposed to be imported from you till you

00:01:33.430 --> 00:01:34.610
can press command shift.

00:01:34.610 --> 00:01:34.950
Oh,

00:01:34.950 --> 00:01:41.010
our control shift on windows toe automatically import our village The imports that are not

00:01:41.010 --> 00:01:41.550
used.

00:01:41.550 --> 00:01:43.290
Now that I have the scanner,

00:01:43.290 --> 00:01:47.100
I can simply say s a dot Next to line on.

00:01:47.100 --> 00:01:52.750
This is the function that reached the entire line from the keyboard and then returns the

00:01:52.750 --> 00:01:53.270
same thing.

00:01:53.270 --> 00:01:58.990
I notice we have one warning message over here that says that there is a possible resource

00:01:58.990 --> 00:01:58.990
,

00:01:58.990 --> 00:01:59.120
Lee,

00:01:59.120 --> 00:02:04.550
because behind the thing scanner might have used some native court which might have used

00:02:04.550 --> 00:02:06.330
some memory area.

00:02:06.330 --> 00:02:07.700
So obviously,

00:02:07.700 --> 00:02:09.430
if you're not closing the scanner,

00:02:09.430 --> 00:02:10.270
though,

00:02:10.270 --> 00:02:14.250
there is a possibility off the memory leak from c++ school.

00:02:14.250 --> 00:02:19.150
So we know that we don't want to close the scanner because the closing off scanner will

00:02:19.150 --> 00:02:22.360
also close the input stream from the keyboard.

00:02:22.360 --> 00:02:26.050
We don't want to do that because their numbers you won't be able to accept anything.

00:02:26.050 --> 00:02:26.620
So what?

00:02:26.620 --> 00:02:32.290
Aiken Goto a wide that is toe add a suppress warning toe this particular function and

00:02:32.290 --> 00:02:35.370
because I'm gonna write one more function or two more functions,

00:02:35.370 --> 00:02:37.150
they also have to write this.

00:02:37.150 --> 00:02:39.030
I can cut this from here on,

00:02:39.030 --> 00:02:41.440
then paste it at the class level,

00:02:41.440 --> 00:02:46.100
saying that inside the class ignore about the resource leak.

00:02:46.100 --> 00:02:47.180
Anyway,

00:02:47.180 --> 00:02:49.570
we now have one function that's right,

00:02:49.570 --> 00:02:50.850
a similar functions.

00:02:50.850 --> 00:02:53.260
I'm gonna write public static int.

00:02:53.260 --> 00:02:54.160
Let's call it us.

00:02:54.160 --> 00:02:55.040
Get int.

00:02:55.040 --> 00:02:58.590
I think from here till here it's the same thing.

00:02:58.590 --> 00:02:59.580
So there's no change.

00:02:59.580 --> 00:03:00.160
Sangro,

00:03:00.160 --> 00:03:00.590
right?

00:03:00.590 --> 00:03:01.160
The same.

00:03:01.160 --> 00:03:05.980
And then I'll say your return stayed out next inch and close the bracket.

00:03:05.980 --> 00:03:11.550
So one last function that we want to right here at this time is public static Double.

00:03:11.550 --> 00:03:12.950
Let's call it us.

00:03:12.950 --> 00:03:13.730
Get double.

00:03:13.730 --> 00:03:14.820
Once again,

00:03:14.820 --> 00:03:17.750
this up to here remains the same thing.

00:03:17.750 --> 00:03:18.160
In fact,

00:03:18.160 --> 00:03:20.060
up to here remains the same thing.

00:03:20.060 --> 00:03:21.470
I'm gonna copy and paste that,

00:03:21.470 --> 00:03:22.490
But then,

00:03:22.490 --> 00:03:22.860
of course,

00:03:22.860 --> 00:03:24.560
it's the next to double,

00:03:24.560 --> 00:03:30.860
so I'm gonna call the next double function on my util class is ready.

00:03:30.860 --> 00:03:36.190
So let's quickly move away from here and write the program where I can accept the values

00:03:36.190 --> 00:03:39.840
from the user and then add that as a record to the database table,

00:03:39.840 --> 00:03:43.200
right click on my package on a new class.

00:03:43.200 --> 00:03:44.320
Let's call it us.

00:03:44.320 --> 00:03:48.850
Insert new record at a public static y main.

00:03:48.850 --> 00:03:50.410
First,

00:03:50.410 --> 00:03:56.010
let's accept all the values that we want toe pass it on to the database table as Rick our

00:03:56.010 --> 00:03:56.680
values.

00:03:56.680 --> 00:04:04.550
So I'll type your int ID equals toe keyboard util dot get in and then I type your ender i d

00:04:04.550 --> 00:04:04.550
.

00:04:04.550 --> 00:04:09.690
And whatever the user enters will be converted into int and will be assigned over here if

00:04:09.690 --> 00:04:10.590
it is successful.

00:04:10.590 --> 00:04:13.590
Otherwise you get another like type mismatch and so on.

00:04:13.590 --> 00:04:17.650
So the 2nd 1 would be string name off the product,

00:04:17.650 --> 00:04:25.410
so type your keyboard util dot gets ching enter name on the next two to off them are also

00:04:25.410 --> 00:04:26.680
string on.

00:04:26.680 --> 00:04:28.690
The 2nd 1 is gonna be description.

00:04:28.690 --> 00:04:29.910
That's call it There's desk.

00:04:29.910 --> 00:04:34.000
So let's type here as description on this one is going to be cared.

00:04:34.000 --> 00:04:41.770
A goody let's give here in category and one lost is the double price equals toe keyboard

00:04:41.770 --> 00:04:47.370
Util don't get double end up price Now that I have this,

00:04:47.370 --> 00:04:53.300
we have to create an SQL command such that entire skill command is ready for execution.

00:04:53.300 --> 00:04:57.770
So this is the main drawback as well as a very,

00:04:57.770 --> 00:05:00.250
very big security issue.

00:05:00.250 --> 00:05:03.300
We will discuss about this in the next lecture.

00:05:03.300 --> 00:05:04.280
However,

00:05:04.280 --> 00:05:05.730
let's try toe say,

00:05:05.730 --> 00:05:06.180
here,

00:05:06.180 --> 00:05:07.790
string SQL equals two.

00:05:07.790 --> 00:05:15.930
I can probably say here string dot format and then use a formal itching and followed by

00:05:15.930 --> 00:05:24.470
idee name description category and then price on the former listing here can be something

00:05:24.470 --> 00:05:24.890
like this.

00:05:24.890 --> 00:05:31.810
Let me full screen this insert into products and then say your values.

00:05:31.810 --> 00:05:35.080
The 1st 1 is simply a integer,

00:05:35.080 --> 00:05:37.400
so I can say percent d comma.

00:05:37.400 --> 00:05:41.610
2nd 1 is a string allowed to save percentage s notice,

00:05:41.610 --> 00:05:46.300
the use of single courts there and then again a percentages and then another percentages

00:05:46.300 --> 00:05:49.930
and then percentage f for the double.

00:05:49.930 --> 00:05:53.040
So we have your a former that string.

00:05:53.040 --> 00:05:55.920
So if I just go and print this SQL,

00:05:55.920 --> 00:06:00.170
you will actually see the skill command that would be passed on to the baby.

00:06:00.170 --> 00:06:01.000
Now,

00:06:01.000 --> 00:06:04.460
this is actually vulnerable as far as security is concerned,

00:06:04.460 --> 00:06:06.110
because I might want oh,

00:06:06.110 --> 00:06:08.290
you do something called SQL injection.

00:06:08.290 --> 00:06:11.230
While I don't want to go to detail in tow,

00:06:11.230 --> 00:06:13.070
What is a skill injection Allah boat.

00:06:13.070 --> 00:06:20.830
It actually allows the end user toe hack into your database and insert record not only

00:06:20.830 --> 00:06:26.830
inserting but also all those hackers toe log in without having the proper credentials.

00:06:26.830 --> 00:06:31.330
I would like you to explore something on SQL injection anyways.

00:06:31.330 --> 00:06:33.030
Now we have our SQL Command.

00:06:33.030 --> 00:06:33.400
Really?

00:06:33.400 --> 00:06:35.080
Let's use the same try.

00:06:35.080 --> 00:06:35.970
Catch block.

00:06:35.970 --> 00:06:38.350
Using the resources on here,

00:06:38.350 --> 00:06:42.740
I will say Catch any exception we have this time,

00:06:42.740 --> 00:06:43.940
I'll say extort.

00:06:43.940 --> 00:06:45.080
Rinsed actress.

00:06:45.080 --> 00:06:47.980
So that's another way of printing the stack.

00:06:47.980 --> 00:06:49.250
Details of the exception.

00:06:49.250 --> 00:06:53.550
Let's use this bracket to declare a connection.

00:06:53.550 --> 00:06:58.430
Gone equals toe debut till start get connection.

00:06:58.430 --> 00:07:07.160
Let's import the connection statement S t m t equals toe conduct yet Statement Once again,

00:07:07.160 --> 00:07:09.590
statement needs to be imported from Java.

00:07:09.590 --> 00:07:10.750
Eskil package.

00:07:10.750 --> 00:07:12.080
We got data.

00:07:12.080 --> 00:07:12.400
Really?

00:07:12.400 --> 00:07:16.950
Now All I have to do is to say s t empty dot Execute update.

00:07:16.950 --> 00:07:21.590
Now the executive update is the better suited Among the other execute variants.

00:07:21.590 --> 00:07:22.080
As for S.

00:07:22.080 --> 00:07:23.320
D M a Wisconsin.

00:07:23.320 --> 00:07:27.510
Because if you are having Deimel such as update or delete,

00:07:27.510 --> 00:07:28.300
for example,

00:07:28.300 --> 00:07:30.630
how many records got affected?

00:07:30.630 --> 00:07:33.120
You can get it as a return value over here,

00:07:33.120 --> 00:07:36.970
and that's the reason this is preferred when it comes to d.

00:07:36.970 --> 00:07:37.170
M.

00:07:37.170 --> 00:07:37.300
A.

00:07:37.300 --> 00:07:38.240
However,

00:07:38.240 --> 00:07:38.820
in our case,

00:07:38.820 --> 00:07:41.500
we're executing only one insert statement,

00:07:41.500 --> 00:07:44.140
which is only inserting a single record.

00:07:44.140 --> 00:07:50.650
Although DB is like H two on my SQL allow you to pass on multiple values in the same insert

00:07:50.650 --> 00:07:54.550
statement so we can still get the number of records being inserted.

00:07:54.550 --> 00:07:56.020
But in most cases,

00:07:56.020 --> 00:07:57.160
this is gonna be one.

00:07:57.160 --> 00:08:00.290
So I'll use this SQL command right now.

00:08:00.290 --> 00:08:01.630
If everything is okay,

00:08:01.630 --> 00:08:04.890
let's print out a message saying that record inserted.

00:08:04.890 --> 00:08:08.150
So if you run this scored with some values,

00:08:08.150 --> 00:08:08.920
ideally,

00:08:08.920 --> 00:08:10.950
it should be successfully insulted.

00:08:10.950 --> 00:08:11.810
However,

00:08:11.810 --> 00:08:13.150
if you pass on,

00:08:13.150 --> 00:08:14.170
for example,

00:08:14.170 --> 00:08:15.670
the same i d.

00:08:15.670 --> 00:08:16.520
Once again,

00:08:16.520 --> 00:08:20.740
you may get an adult because it's a primary violation and then you will get into this

00:08:20.740 --> 00:08:21.190
section,

00:08:21.190 --> 00:08:23.950
so that's going to run the same thing and check it out.

00:08:23.950 --> 00:08:25.550
So I'm gonna run this,

00:08:25.550 --> 00:08:28.190
it says here in the console ender,

00:08:28.190 --> 00:08:28.630
I d.

00:08:28.630 --> 00:08:30.090
I'm gonna take it us one.

00:08:30.090 --> 00:08:34.910
Let's type Lenovo laptop description.

00:08:34.910 --> 00:08:41.100
Lino Zed 5 60 Travel Mint The category Let's say,

00:08:41.100 --> 00:08:41.780
for example,

00:08:41.780 --> 00:08:42.850
this comes under.

00:08:42.850 --> 00:08:46.630
Let's call it as electron ICS and then the prize.

00:08:46.630 --> 00:08:49.840
Let's give around ₹45,000.

00:08:49.840 --> 00:08:51.290
I press enter.

00:08:51.290 --> 00:08:53.200
It is record inserted.

00:08:53.200 --> 00:08:55.900
If I go and check out over here,

00:08:55.900 --> 00:09:02.150
I execute this run once again You can t know I get the record properly inserted.

00:09:02.150 --> 00:09:03.190
However,

00:09:03.190 --> 00:09:05.840
if I go back on the wrong this again,

00:09:05.840 --> 00:09:10.260
notice that it has been terminated Over here I can click on this job done and say in

00:09:10.260 --> 00:09:11.160
certain you're a car.

00:09:11.160 --> 00:09:12.130
Once again,

00:09:12.130 --> 00:09:13.650
I'm gonna type the same thing.

00:09:13.650 --> 00:09:15.520
One think this is gonna fail?

00:09:15.520 --> 00:09:22.030
I'm gonna simply type a s d a S d A S d and some number since there's gonna fail because of

00:09:22.030 --> 00:09:23.040
the primary key value.

00:09:23.040 --> 00:09:25.170
The rest of the values gin matter anyway,

00:09:25.170 --> 00:09:26.590
So when I press enter,

00:09:26.590 --> 00:09:30.600
you'll see that it gave me an exception saying Unique index,

00:09:30.600 --> 00:09:35.480
our primary care violation primary key on public dot products idee.

00:09:35.480 --> 00:09:39.010
So we are able to get appropriate at our messages.

00:09:39.010 --> 00:09:43.590
You can also go back and verify once again that there is no duplicate record.

00:09:43.590 --> 00:09:50.550
So I hope you understood the way I can execute an STL insert command using the statement

00:09:50.550 --> 00:09:51.370
into fists.

00:09:51.370 --> 00:09:54.840
Although this has got lots of drawbacks,

00:09:54.840 --> 00:09:57.830
we don't use this in practice in the next lecture,

00:09:57.830 --> 00:10:01.550
let's understand the actual problems in the world in the statement on,

00:10:01.550 --> 00:10:05.650
how do we or come the same thing using something called a prepared statement.

