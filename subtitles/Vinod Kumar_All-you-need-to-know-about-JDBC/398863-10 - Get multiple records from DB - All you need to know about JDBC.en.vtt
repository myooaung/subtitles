WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.900
Now let us look at help for it to data from the database using SQL Select Statement.

00:00:05.900 --> 00:00:07.290
For that,

00:00:07.290 --> 00:00:09.270
let me create a new jobs program.

00:00:09.270 --> 00:00:11.050
So I'm gonna right click on the package.

00:00:11.050 --> 00:00:13.230
New claws,

00:00:13.230 --> 00:00:14.860
the name of the class.

00:00:14.860 --> 00:00:17.650
Let's say get all products.

00:00:17.650 --> 00:00:21.750
It's also at a public static water main Click finish.

00:00:21.750 --> 00:00:25.260
Get it off this studio and then make this full screen.

00:00:25.260 --> 00:00:26.350
First,

00:00:26.350 --> 00:00:29.340
let's declare a SQL command toe,

00:00:29.340 --> 00:00:30.230
get all the data.

00:00:30.230 --> 00:00:30.460
Also,

00:00:30.460 --> 00:00:32.950
I have to say Select star from products.

00:00:32.950 --> 00:00:37.760
You can do any complicated SQL Select statements over here,

00:00:37.760 --> 00:00:41.010
but we'll begin with a simple one by default.

00:00:41.010 --> 00:00:45.120
It Richter's all the values in the order in which it has been store.

00:00:45.120 --> 00:00:49.480
So if I copy this command and then go over here and then execute,

00:00:49.480 --> 00:00:50.770
which is already over here,

00:00:50.770 --> 00:00:53.650
this is the order in which I'm gonna get the records.

00:00:53.650 --> 00:00:57.420
So whenever you execute this select start from products,

00:00:57.420 --> 00:01:02.350
you will receive all the records in the form of an object called results it and let's see

00:01:02.350 --> 00:01:03.330
how to handle that.

00:01:03.330 --> 00:01:04.570
Let's go back or here.

00:01:04.570 --> 00:01:05.940
And as usual,

00:01:05.940 --> 00:01:06.980
let's put a try,

00:01:06.980 --> 00:01:10.090
catch block and then in the catch section.

00:01:10.090 --> 00:01:13.880
I'm going to simply bring the stack tress in the try block.

00:01:13.880 --> 00:01:16.270
This time we're going to declare three variables.

00:01:16.270 --> 00:01:17.690
Number one variable is,

00:01:17.690 --> 00:01:18.390
as usual,

00:01:18.390 --> 00:01:19.290
the connection,

00:01:19.290 --> 00:01:23.060
which is nothing but debut till don't get connection.

00:01:23.060 --> 00:01:29.810
Let's import the same Then either you can use a statement are prepared Statement.

00:01:29.810 --> 00:01:30.970
In this case,

00:01:30.970 --> 00:01:34.810
it doesn't matter because we don't have any values accepted from the user.

00:01:34.810 --> 00:01:38.520
So there is no possibility off SQL injection over here.

00:01:38.520 --> 00:01:39.480
However,

00:01:39.480 --> 00:01:40.950
for better practice,

00:01:40.950 --> 00:01:43.870
we always would like to prefer prepared statement.

00:01:43.870 --> 00:01:46.040
So make it a habit to use prepared statement.

00:01:46.040 --> 00:01:47.670
You will never have a problem.

00:01:47.670 --> 00:01:51.690
Someone who create here a variable off type prepared statement.

00:01:51.690 --> 00:01:53.540
Let's call it as S T m t.

00:01:53.540 --> 00:01:57.750
And then I say con dog prepared statement.

00:01:57.750 --> 00:01:59.990
We need to supply the steel commander.

00:01:59.990 --> 00:02:02.100
That's import prepared statement.

00:02:02.100 --> 00:02:06.520
And then we now collect the result off Eskil executions.

00:02:06.520 --> 00:02:08.340
So we're gonna say your results.

00:02:08.340 --> 00:02:14.520
Set artist equals toe s t emptied or execute quieting once again.

00:02:14.520 --> 00:02:16.420
Let's import results it from Joe,

00:02:16.420 --> 00:02:17.950
our SQL package.

00:02:17.950 --> 00:02:23.800
So at this line we have already sent the command to the backend on on the H two server.

00:02:23.800 --> 00:02:24.900
It has been compiling,

00:02:24.900 --> 00:02:26.870
kept ready for execution.

00:02:26.870 --> 00:02:32.860
But the actual execution happens when you do this and then the server will send all the

00:02:32.860 --> 00:02:34.650
records corresponding to this quality.

00:02:34.650 --> 00:02:39.080
And that is now held with an object off type isn't sent.

00:02:39.080 --> 00:02:39.800
Artists,

00:02:39.800 --> 00:02:45.070
you can think off orders is a reference to a collection off rules.

00:02:45.070 --> 00:02:47.900
But it points toe recorded before the first row,

00:02:47.900 --> 00:02:53.080
so we call it at their position before first we have to move the record pointer to the

00:02:53.080 --> 00:02:57.040
first record or the next to record on the last record,

00:02:57.040 --> 00:03:00.720
all to a given record number to move a record.

00:03:00.720 --> 00:03:01.100
I missed.

00:03:01.100 --> 00:03:02.650
They are gonna start next.

00:03:02.650 --> 00:03:07.230
I notice that the others don't next gives you a bullion to indicate whether it was

00:03:07.230 --> 00:03:09.370
successfully moved to the next record or not.

00:03:09.370 --> 00:03:13.890
We can use this return value toe check if we really have to go and fetch.

00:03:13.890 --> 00:03:14.780
The values are not.

00:03:14.780 --> 00:03:18.050
If the return value off or is start next is false.

00:03:18.050 --> 00:03:20.510
That means we're not able to moto any record,

00:03:20.510 --> 00:03:22.490
so we don't have to access the data.

00:03:22.490 --> 00:03:24.110
But if it is true,

00:03:24.110 --> 00:03:29.190
that means we were ableto successfully boot a particular card and now we can access the

00:03:29.190 --> 00:03:29.580
value.

00:03:29.580 --> 00:03:30.970
So generally,

00:03:30.970 --> 00:03:35.320
when you have a collection off rose that come back from the serval,

00:03:35.320 --> 00:03:36.630
we use a loop.

00:03:36.630 --> 00:03:40.650
The loop can be done something like while orders start next,

00:03:40.650 --> 00:03:46.270
because this artist dot next will decide whether the loop should continue or not.

00:03:46.270 --> 00:03:49.350
So since we have four records at this time,

00:03:49.350 --> 00:03:50.340
when this is called,

00:03:50.340 --> 00:03:54.220
first time it moves to the first trick are on also returns.

00:03:54.220 --> 00:03:56.520
True on because it returned true,

00:03:56.520 --> 00:03:58.150
we're inside the loop now.

00:03:58.150 --> 00:04:00.680
I can actually access the values and print the same thing.

00:04:00.680 --> 00:04:05.350
Let's at this time we want to print the name and praise off each product.

00:04:05.350 --> 00:04:08.710
So let's type your string name equals toe,

00:04:08.710 --> 00:04:10.150
others don't get.

00:04:10.150 --> 00:04:12.120
And since name is a string,

00:04:12.120 --> 00:04:15.690
we can say Get string on notice to Waiting's over here.

00:04:15.690 --> 00:04:18.290
I can give the column index.

00:04:18.290 --> 00:04:21.320
So start indicates all columns.

00:04:21.320 --> 00:04:24.400
So in that the second column is the name,

00:04:24.400 --> 00:04:26.230
so you can go back and verify here.

00:04:26.230 --> 00:04:29.830
So this is the column number two column number 34 and five,

00:04:29.830 --> 00:04:36.550
so either the number representing the column position or the name of the column can be used

00:04:36.550 --> 00:04:36.550
.

00:04:36.550 --> 00:04:39.180
I generally prefer to use the name of the column,

00:04:39.180 --> 00:04:41.970
so we don't have to worry about column positions.

00:04:41.970 --> 00:04:46.980
Because tomorrow somebody without your knowledge might have inserted a new column or Billy

00:04:46.980 --> 00:04:47.710
to the column.

00:04:47.710 --> 00:04:50.280
Your application may start giving editors,

00:04:50.280 --> 00:04:51.610
so to avoid that,

00:04:51.610 --> 00:04:54.180
we always prefer to use the column needs.

00:04:54.180 --> 00:04:55.560
I'm gonna say your name,

00:04:55.560 --> 00:04:57.860
and the 2nd 1 is the price.

00:04:57.860 --> 00:04:59.990
I want a double sided double.

00:04:59.990 --> 00:05:01.160
Price equals toe.

00:05:01.160 --> 00:05:03.870
Artists are get double again.

00:05:03.870 --> 00:05:08.880
You have these two aliens you can actually give column number five just for the sake of

00:05:08.880 --> 00:05:10.160
demonstration I will give.

00:05:10.160 --> 00:05:16.340
But my person prevents is always the column names so and add a comment over here and say

00:05:16.340 --> 00:05:20.390
it's supposed to be get double off price something like this.

00:05:20.390 --> 00:05:22.000
But this works anyways.

00:05:22.000 --> 00:05:24.860
And now that we have the name and price,

00:05:24.860 --> 00:05:26.160
let's just bring them.

00:05:26.160 --> 00:05:31.050
So I'm gonna say system dot out dot Prindle in Let's type your name,

00:05:31.050 --> 00:05:35.200
plus something like rupees plus price.

00:05:35.200 --> 00:05:37.510
Since we actually move one time,

00:05:37.510 --> 00:05:39.720
it is actually printing the first record,

00:05:39.720 --> 00:05:42.680
and after printing its end of this loop,

00:05:42.680 --> 00:05:48.230
it's going back to the loop and artist Art next will try to move the record point or to the

00:05:48.230 --> 00:05:49.640
second record this time,

00:05:49.640 --> 00:05:51.000
which is successful.

00:05:51.000 --> 00:05:55.650
So because of this successful treatments through the whole thing happens once again.

00:05:55.650 --> 00:05:58.120
But this time it's the second record that's being printed,

00:05:58.120 --> 00:06:01.180
and then the third record is also printed.

00:06:01.180 --> 00:06:01.810
Then,

00:06:01.810 --> 00:06:03.380
when it comes to the fourth record,

00:06:03.380 --> 00:06:04.270
it is true,

00:06:04.270 --> 00:06:05.630
and it prints the fourth record,

00:06:05.630 --> 00:06:09.870
goes back and from the fourth recorded is trained to go to the next record,

00:06:09.870 --> 00:06:10.950
which doesn't exist.

00:06:10.950 --> 00:06:12.750
And because it doesn't exist,

00:06:12.750 --> 00:06:18.910
it to transforms on because off that the loop is skipped on your back over here you can

00:06:18.910 --> 00:06:22.320
probably give a message something like That's all what we have.

00:06:22.320 --> 00:06:24.520
So it's a system that dot printer land,

00:06:24.520 --> 00:06:25.710
that's all.

00:06:25.710 --> 00:06:27.050
Folks save it.

00:06:27.050 --> 00:06:28.750
And if I run the court,

00:06:28.750 --> 00:06:33.470
you should be able toe get the four records that we have in our database table.

00:06:33.470 --> 00:06:34.970
In the next lecture,

00:06:34.970 --> 00:06:38.900
let's see how we country to a single record on handle the same

