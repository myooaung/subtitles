1
00:00:02,300 --> 00:00:08,450
Hello, everyone, in this video we're going to pick up right where we left off and continue styling

2
00:00:08,450 --> 00:00:09,200
our blog.

3
00:00:09,740 --> 00:00:11,130
Let's jump into the action.

4
00:00:11,150 --> 00:00:16,670
So the first thing I want to point out is that in the previous video, I mixed up the background, color

5
00:00:16,670 --> 00:00:20,640
and border color, these two gray values that we see here.

6
00:00:21,170 --> 00:00:27,050
So back in the text editor in our Sarsae folder, let's jump in to Indexers Success.

7
00:00:27,560 --> 00:00:30,910
And I mixed up this color with this color.

8
00:00:31,340 --> 00:00:32,960
So let's just swap those two.

9
00:00:32,970 --> 00:00:37,850
So this should be the EF1 and this should be the Desex.

10
00:00:39,770 --> 00:00:44,510
Let's give that to save and let's make sure our task is running, so in the command line, npm run,

11
00:00:44,510 --> 00:00:45,020
start.

12
00:00:45,770 --> 00:00:52,100
OK, and if we refresh the edit screen, cool, that looks so much better at this point.

13
00:00:52,100 --> 00:00:54,880
Let's focus on the details of this area.

14
00:00:55,190 --> 00:01:02,870
So this star should be yellow or gold instead of black and the delete button should be red and maybe

15
00:01:02,870 --> 00:01:04,070
have an underline.

16
00:01:04,670 --> 00:01:07,220
Also, let's fine tune the vertical alignment.

17
00:01:07,220 --> 00:01:11,090
You can see the stars should probably set up about three or four pixels higher.

18
00:01:11,660 --> 00:01:17,650
So to get started, let's give this star icon a class so that we can target it with success.

19
00:01:18,230 --> 00:01:21,850
So let's jump into our SIRC folder and open up index.

20
00:01:22,310 --> 00:01:29,390
James, let's go down to our James and here is the icon with Star Empty.

21
00:01:30,020 --> 00:01:39,020
Let's just give this a class name of you can make up anything, but I'll call it Mark as correct.

22
00:01:39,860 --> 00:01:40,880
Let's give that a save.

23
00:01:40,880 --> 00:01:48,170
And then in our SCC file, I'm going to create a nested rule and you don't need to do this.

24
00:01:48,170 --> 00:01:54,440
But I like to do this to make sure that my system isn't going to accidentally target anything else in

25
00:01:54,440 --> 00:01:56,180
the WordPress admin screen.

26
00:01:56,600 --> 00:02:02,660
So you could achieve this exact same feature by just choosing a super unique class name here.

27
00:02:03,020 --> 00:02:07,550
But I chose a name that, who knows, maybe WordPress is using this class name somewhere else.

28
00:02:07,550 --> 00:02:11,540
And I don't want to accidentally add random styling to it.

29
00:02:11,930 --> 00:02:14,490
So by nesting inside this selector.

30
00:02:14,540 --> 00:02:20,540
So maybe after this line we can say dot mark as correct curly brackets.

31
00:02:21,260 --> 00:02:26,600
Well, SPSS or SAS is going to output this selector like this.

32
00:02:26,600 --> 00:02:27,770
You don't need to type this out.

33
00:02:28,160 --> 00:02:34,370
But when it converts our SAS access to regular CSFs, it's going to create a selector that looks like

34
00:02:34,370 --> 00:02:34,850
this.

35
00:02:35,870 --> 00:02:41,320
So it would only select Mark as correct if it lives inside of this element.

36
00:02:41,990 --> 00:02:44,420
So this is just something I like to do with personal preference.

37
00:02:44,420 --> 00:02:48,910
But inside this class, let's tell it to have a yellow or golden color.

38
00:02:48,920 --> 00:02:51,020
So color hash tag.

39
00:02:51,620 --> 00:02:53,690
Fifty seven hundred.

40
00:02:54,410 --> 00:02:58,200
Let's tell it to look like a link and have the pointer hand when you hover over it.

41
00:02:58,310 --> 00:03:00,960
So cursor should be a pointer.

42
00:03:01,400 --> 00:03:07,190
Let's pull it up a few pixels to fix the vertical alignments, all state position, relative and then

43
00:03:07,190 --> 00:03:09,860
top, maybe negative three pixels.

44
00:03:10,790 --> 00:03:12,780
Let's give this a save and see what it looks like.

45
00:03:12,800 --> 00:03:13,940
So if we refresh.

46
00:03:16,620 --> 00:03:21,780
Cool, it might not show up in this video recording, but you should be able to see it in your actual

47
00:03:21,780 --> 00:03:22,590
Web browser.

48
00:03:23,190 --> 00:03:24,460
There's the Yellow Star.

49
00:03:24,720 --> 00:03:27,120
Let's go ahead and fine tune the delete button.

50
00:03:27,840 --> 00:03:32,550
Actually, I'm noticing that the button already looks like a link with the cursor pointer hand, so

51
00:03:32,580 --> 00:03:33,840
we didn't need that prop..

52
00:03:33,840 --> 00:03:35,570
We can actually get rid of that here.

53
00:03:35,610 --> 00:03:36,930
We didn't need cursor pointer.

54
00:03:38,100 --> 00:03:42,180
OK, but let's go ahead and give the delete button a class so that we can target it.

55
00:03:42,180 --> 00:03:51,210
So in our X on this delete button, I'm just going to say class name equals and only maybe attention

56
00:03:51,210 --> 00:03:51,840
delete.

57
00:03:52,660 --> 00:04:01,740
Give that a save back in our success, I'll create a nested rule for dot attention, delete curly brackets.

58
00:04:02,430 --> 00:04:03,900
Let's tell it to be red.

59
00:04:03,900 --> 00:04:08,330
So a color of hashtag FNF and then four zeros.

60
00:04:10,050 --> 00:04:16,380
Let's also fix its vertical alignments, maybe position relative and then pull it up from the top negative

61
00:04:16,380 --> 00:04:17,340
five pixels.

62
00:04:18,130 --> 00:04:19,440
Let's see what that looks like.

63
00:04:19,920 --> 00:04:21,720
OK, that's starting to look a lot better.

64
00:04:21,900 --> 00:04:26,610
However, you'll notice that even if your mouse is nowhere near the word delete, it starts to be treated

65
00:04:26,610 --> 00:04:27,270
as a link.

66
00:04:27,900 --> 00:04:34,350
So maybe to reduce some of that vertical padding back in our JSA X on the button element we can give

67
00:04:34,350 --> 00:04:36,660
it a prop of just is link.

68
00:04:37,260 --> 00:04:42,090
And you don't even need to set it to equal anything, just including this if we save that and reload.

69
00:04:42,930 --> 00:04:43,200
Cool.

70
00:04:43,200 --> 00:04:44,700
So that gives us an underline.

71
00:04:44,700 --> 00:04:45,300
I like that.

72
00:04:45,300 --> 00:04:47,970
And I think it also fixed the vertical padding a little bit.

73
00:04:48,570 --> 00:04:52,890
Next up, let's change things so that when you hover over it instead of turning blue, maybe it just

74
00:04:52,890 --> 00:04:54,540
turns a darker shade of red.

75
00:04:55,080 --> 00:05:04,310
So back in our success nested within this rule, we can just say ampersand, colon hover.

76
00:05:05,310 --> 00:05:11,430
So in sasy ampersand will give you sort of the top level rule that you're nested in.

77
00:05:11,430 --> 00:05:17,010
So just the ampersand will give us dot attention, delete, and then we're just adding on the hover

78
00:05:17,010 --> 00:05:24,810
pseudo selector to that so we can just say color hash tag, see two and then four zeros.

79
00:05:25,890 --> 00:05:28,050
Let's give that a save and test it out.

80
00:05:29,440 --> 00:05:34,650
So you can see it's still turning blue when I hover over it, so WordPress has its own hover selector.

81
00:05:34,690 --> 00:05:41,230
So to make sure we override that, we can just add on exclamation important at the end of our value.

82
00:05:42,790 --> 00:05:48,550
Cool now in a hover over it, we see the darker red while we're at it, why don't we add a hover effect

83
00:05:48,550 --> 00:05:49,570
for the star?

84
00:05:50,540 --> 00:05:56,270
Maybe when you hover over the star, it should enlarge or zoom in a little bit and maybe rotate a couple

85
00:05:56,270 --> 00:05:57,650
of degrees clockwise.

86
00:05:58,370 --> 00:06:07,370
So within this mark as correct nested inside it, we can just say ampersand hover and let's say transform

87
00:06:07,970 --> 00:06:13,400
and call the scale function, give it a value of maybe one point two five so it becomes twenty five

88
00:06:13,400 --> 00:06:14,660
percent larger than normal.

89
00:06:14,960 --> 00:06:17,030
Be sure to end that line with a semicolon.

90
00:06:17,480 --> 00:06:23,480
And then within the baseline rule from Mark as correct, we can say transition the transform property

91
00:06:23,720 --> 00:06:28,420
over the course of zero point three seconds and we'll use the easy out timing function.

92
00:06:28,880 --> 00:06:35,480
And then if we want to rotate it clockwise a little bit, we could say rotate and maybe just try 12

93
00:06:35,480 --> 00:06:36,200
degrees.

94
00:06:37,790 --> 00:06:38,960
Let's see what that looks like.

95
00:06:43,130 --> 00:06:47,720
Cool, so now when you hover over the star again, this might be small in the video recording, but

96
00:06:47,720 --> 00:06:51,860
if you try it in your actual Web browser, you can see it sort of zooms in and rotates a little bit.

97
00:06:52,190 --> 00:06:54,270
I like that at this point.

98
00:06:54,290 --> 00:06:55,400
Let's do two things.

99
00:06:55,400 --> 00:06:58,250
Let's make this TextField for the question text.

100
00:06:58,490 --> 00:07:00,140
Let's make it larger.

101
00:07:00,890 --> 00:07:06,060
Right, to show a bit of hierarchy like it's the most important thing because there's only one question.

102
00:07:06,200 --> 00:07:09,650
So answers should be smaller because there's multiple answers.

103
00:07:09,650 --> 00:07:14,830
So it will make this field a bit larger and then we'll make this label text a good bit smaller.

104
00:07:15,740 --> 00:07:23,280
So to increase the font size for the question input, you could give this a class and then use success.

105
00:07:23,610 --> 00:07:31,430
However, when I only need to modify one single property, in this case only font size, I like to actually

106
00:07:31,430 --> 00:07:34,400
just declare it inline in my JS X.

107
00:07:34,650 --> 00:07:37,570
I don't want to create a class for just one property.

108
00:07:38,030 --> 00:07:42,150
So here's how you can do that in X back in our JavaScript file.

109
00:07:42,770 --> 00:07:48,860
Let's find that text control component right with the label of question so we can just give it a prop

110
00:07:48,860 --> 00:07:55,310
of style, just like you would in HTML equals only in HTML.

111
00:07:55,310 --> 00:07:56,750
You would give it a string of text.

112
00:07:56,750 --> 00:07:57,050
Right.

113
00:07:57,050 --> 00:08:06,020
But in JSM we say equals an object to give it a dynamic value and then nested inside here we want another

114
00:08:06,020 --> 00:08:10,330
pair of curly brackets for an object with different properties.

115
00:08:10,670 --> 00:08:14,240
So now we only need to give it the property for font size.

116
00:08:14,840 --> 00:08:19,790
Now you'll notice that in real access this would be font dash size.

117
00:08:19,790 --> 00:08:21,880
But this isn't real success.

118
00:08:22,100 --> 00:08:28,580
This is James X, so a habit you need to get into is when you're writing Gests, you can usually guess

119
00:08:28,580 --> 00:08:35,780
the appropriate CSS property name by just instead of using dashes by using capitalization on secondary

120
00:08:35,780 --> 00:08:36,830
words like this.

121
00:08:37,340 --> 00:08:43,160
So font size Colen and then just give it a value string attacks, let's say 20 pixels, 20 x.

122
00:08:43,870 --> 00:08:45,710
Let's give that a save if we reload.

123
00:08:47,320 --> 00:08:47,800
Cool.

124
00:08:48,670 --> 00:08:55,300
OK, next up, let's try to shrink this text where it says answers because a standard paragraph like

125
00:08:55,300 --> 00:09:00,850
we're using right now, not only is this text too large, but it's also creating too much of a vertical

126
00:09:00,850 --> 00:09:01,810
margin here.

127
00:09:02,560 --> 00:09:05,500
So to adjust that, let's just find the paragraph in our.

128
00:09:06,580 --> 00:09:07,290
Here it is.

129
00:09:07,660 --> 00:09:14,830
And on the opening tag, we can just say style equals curly brackets for a dynamic value and then we

130
00:09:14,830 --> 00:09:16,120
want to give it an object.

131
00:09:16,130 --> 00:09:24,000
So another pair of curly brackets, let's give it a property of font size colon, maybe 13 pixels comma.

132
00:09:24,400 --> 00:09:28,200
Let's adjust the margins of margin call and give it a string of text.

133
00:09:28,540 --> 00:09:35,080
How about twenty pixels on the top, zero on the right, eight on the bottom and zero on the left.

134
00:09:35,840 --> 00:09:38,140
Give that to save if we reload.

135
00:09:38,890 --> 00:09:39,280
Cool.

136
00:09:39,280 --> 00:09:42,130
I think that looks a lot better at this point.

137
00:09:42,130 --> 00:09:46,020
If we look at the finished product, ours is starting to look very similar.

138
00:09:46,660 --> 00:09:50,620
Let's go ahead and add this button towards the bottom that says add another answer.

139
00:09:52,560 --> 00:09:53,820
So back on our Kopi.

140
00:09:55,320 --> 00:10:02,580
And then back in our code at the very bottom, below the closing flex tag, but still in the overall

141
00:10:02,580 --> 00:10:11,430
wrapper, Divx, let's say button and then hit tab inside, let's say add another answer in just this

142
00:10:11,430 --> 00:10:12,060
on its own.

143
00:10:12,060 --> 00:10:17,340
If we save that, you'll see that that doesn't create sort of the standard WordPress blue button.

144
00:10:17,790 --> 00:10:18,040
Right.

145
00:10:18,060 --> 00:10:21,540
We want sort of this style that says update in the top right corner.

146
00:10:21,870 --> 00:10:28,460
So to fix that on the opening button tag, we just give it a prop of is primary.

147
00:10:29,460 --> 00:10:29,870
That's it.

148
00:10:29,880 --> 00:10:31,470
You don't need to set it to equal anything.

149
00:10:31,470 --> 00:10:33,270
Just saying is primary.

150
00:10:33,510 --> 00:10:35,430
If we save that and refresh.

151
00:10:36,030 --> 00:10:40,680
Perfect, OK, for the time being, that wraps up our styling job.

152
00:10:40,890 --> 00:10:44,370
Now, in our very next lesson, we're going to start bringing this to life.

153
00:10:44,940 --> 00:10:49,230
In other words, actually storing the values that the user types in here.

154
00:10:49,470 --> 00:10:55,590
And when the user clicks this button, we should dynamically add another Ansaru on the fly.

155
00:10:56,130 --> 00:11:01,680
And then obviously we also need to hook up the star button to mark one as the correct answer and also

156
00:11:01,680 --> 00:11:04,640
make the delete button actually delete the current row.

157
00:11:05,040 --> 00:11:10,350
I think the next lesson will be one of the most exciting ones in the entire chapter, because really

158
00:11:10,350 --> 00:11:18,060
this is where our knowledge is going to mix with our WordPress attributes and saving it in the database

159
00:11:18,060 --> 00:11:18,690
knowledge.

160
00:11:18,900 --> 00:11:20,610
So we're going to connect a lot of dots.

161
00:11:20,730 --> 00:11:21,800
Should be a lot of fun.

162
00:11:22,170 --> 00:11:24,420
Let's keep things rolling and I'll see you then.
