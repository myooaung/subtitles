WEBVTT
1
00:00:02.360 --> 00:00:03.390
Hello, everyone.

2
00:00:03.710 --> 00:00:09.230
In this lesson, we're going to start a brand new type just for a quick review.

3
00:00:09.270 --> 00:00:13.350
Here's a sneak preview of the finished product of what we're going to build together.

4
00:00:13.730 --> 00:00:19.670
So from the edit post screen, if I try to add a new block right about here, there's one called Professor

5
00:00:19.670 --> 00:00:20.440
Call-out.

6
00:00:21.050 --> 00:00:23.180
The idea here is within a blog post.

7
00:00:23.180 --> 00:00:26.720
This will let me sort of feature or highlight a professor.

8
00:00:26.720 --> 00:00:26.950
Right.

9
00:00:26.960 --> 00:00:30.070
One of our posts of the professor post type.

10
00:00:30.860 --> 00:00:36.530
So as soon as I click to add that this new area appears, there's just this select dropdown.

11
00:00:36.530 --> 00:00:42.230
And if I click on it, there's only three because I only have three professor posts on my website.

12
00:00:42.230 --> 00:00:48.080
But if you had 20 or 50, it would show all of them here and then you just select the one that you want

13
00:00:48.080 --> 00:00:49.640
to highlight or feature here.

14
00:00:50.390 --> 00:00:51.950
I'll click Dr. Rogerson.

15
00:00:52.250 --> 00:00:55.430
And now we see a live preview appear right here.

16
00:00:55.670 --> 00:00:59.540
And if I click update and then we go view this on the front end.

17
00:01:01.090 --> 00:01:06.550
Well, if we scroll down to that area, cool, there it is, and I do want to point out that it's not

18
00:01:06.550 --> 00:01:14.800
as if we pulled the data for Rogerson and then store a static snapshot of it within this blog post instead.

19
00:01:15.010 --> 00:01:20.520
This is actually pulling the real current values from the Frog Grayson post.

20
00:01:20.770 --> 00:01:27.130
So if we went in and edited the professor post for frogs and change the text here, if we reloaded this

21
00:01:27.130 --> 00:01:29.900
blog page, we would see that change reflected here.

22
00:01:30.370 --> 00:01:37.300
So really, this blog post is just storing the I.D. of the Professor Post as a piece of metadata for

23
00:01:37.300 --> 00:01:38.380
this blog post.

24
00:01:38.650 --> 00:01:43.940
And then we just run a query to load in the actual post data for that professor.

25
00:01:44.470 --> 00:01:50.500
That way it's all truly dynamic and we're learning how to create a real relationship between two pieces

26
00:01:50.500 --> 00:01:51.280
of content.

27
00:01:51.610 --> 00:01:54.730
And we do want to make sure that that relationship is a two way street.

28
00:01:55.060 --> 00:02:00.940
What I mean is if we click this link to view the professor detail screen, well, if we scroll down

29
00:02:00.940 --> 00:02:06.350
a bit, we can see this new area, doctor frog person is mentioned in the following posts.

30
00:02:06.760 --> 00:02:12.190
So this will be a good bit of practice to make sure we know how to display the relationship from both

31
00:02:12.190 --> 00:02:14.020
sides, from both angles.

32
00:02:14.380 --> 00:02:19.990
OK, at this point, let me switch back to the tab where I have not built the featured professor post

33
00:02:19.990 --> 00:02:20.350
type.

34
00:02:20.680 --> 00:02:22.800
And let's start moving forward together.

35
00:02:23.290 --> 00:02:28.560
Now, at this point in the course, you and I have created at least three plug ins together.

36
00:02:28.930 --> 00:02:35.710
So to save a bit of the boilerplate typing of code that has zero new concepts to explain and understand,

37
00:02:36.040 --> 00:02:43.090
I actually want you to pause the video right now and download the zip file associated with this lesson

38
00:02:43.240 --> 00:02:45.780
called Starter Dot Zip.

39
00:02:46.450 --> 00:02:47.980
So please follow along with me.

40
00:02:47.980 --> 00:02:53.710
Do that right now, pause the video, go download this file, and then when you extract the zip file,

41
00:02:54.640 --> 00:02:57.430
it should create a folder named Feature Dash.

42
00:02:57.430 --> 00:03:02.710
Professor, if it doesn't if it creates a folder named starter, you can just rename the folder to be

43
00:03:03.040 --> 00:03:04.640
featured dash professor.

44
00:03:05.110 --> 00:03:08.950
Also make sure that it doesn't have a folder nested inside a folder.

45
00:03:08.950 --> 00:03:11.560
So it should just be featured Professor.

46
00:03:11.560 --> 00:03:17.350
And then inside it there should be one file and one folder called SIRC.

47
00:03:18.010 --> 00:03:24.340
Anyways, we just want to move this folder into the WordPress plugins folder and don't worry, we will

48
00:03:24.340 --> 00:03:26.800
review the code that is in these starter files.

49
00:03:27.340 --> 00:03:32.440
I just think it's a good idea to avoid typing out some of this boilerplate again and again.

50
00:03:32.890 --> 00:03:38.290
So to move this into your WordPress plug ins folder, just find where your WordPress is installed,

51
00:03:38.560 --> 00:03:44.200
go into the WP content folder and then go into the plugins folder.

52
00:03:44.440 --> 00:03:48.610
And then I'm just going to drag featured professor into this folder.

53
00:03:48.880 --> 00:03:52.110
OK, then let's open up this folder in LVS code.

54
00:03:53.170 --> 00:03:55.710
Let's start by looking at the file.

55
00:03:55.930 --> 00:04:00.760
So if we open that up, it's just going into it has the basic comment.

56
00:04:00.760 --> 00:04:02.780
You can add your name here if you want to.

57
00:04:03.190 --> 00:04:07.840
This line of code prevents executing this file directly by visiting its euro.

58
00:04:08.230 --> 00:04:11.710
And then just like all of our other plugins, I'm creating a class.

59
00:04:11.950 --> 00:04:16.390
I have my constructor function, I'm using the init action hook.

60
00:04:16.390 --> 00:04:22.330
And then I'm giving it a method right here where I'm registering a script, registering a style, and

61
00:04:22.330 --> 00:04:25.630
then most importantly, registering a block type.

62
00:04:25.960 --> 00:04:29.980
So this should look very familiar from our quiz block type.

63
00:04:30.550 --> 00:04:35.380
Right now I just have the render callback as a function that returns a paragraph.

64
00:04:35.380 --> 00:04:37.630
We will obviously work on this together.

65
00:04:38.020 --> 00:04:42.190
And then down at the very bottom, I'm just creating a new instance from our class.

66
00:04:42.580 --> 00:04:45.790
So that's it for that file in our Sarsae folder.

67
00:04:45.970 --> 00:04:48.640
We don't need to go into the SCC file.

68
00:04:48.640 --> 00:04:55.990
It's just a bit of basic access because this course really is about WordPress and JavaScript, not success.

69
00:04:56.380 --> 00:04:59.290
But this will give us a bit of basic styling for the block.

70
00:04:59.530 --> 00:05:03.820
And then inside the source folder, we also have index dot js.

71
00:05:04.660 --> 00:05:11.440
So I'm just importing the SAS text file so that the WordPress JavaScript package will extract it into

72
00:05:11.440 --> 00:05:12.130
its own file.

73
00:05:12.130 --> 00:05:16.270
But we do want to include it in sort of the file tree within our JavaScript here.

74
00:05:16.510 --> 00:05:20.950
And then just like before, I'm registering the block type on the JavaScript side of things.

75
00:05:21.340 --> 00:05:24.760
And then for the edit component, that's what you see in the admin area.

76
00:05:25.060 --> 00:05:27.610
Well, for now, the function just returns a bit of JSM.

77
00:05:28.270 --> 00:05:31.630
That's just an overall div with two divs inside it.

78
00:05:31.930 --> 00:05:38.410
Now, this class name here does need to be exactly this just for a bit of CSC reasoning, but hopefully

79
00:05:38.410 --> 00:05:41.290
now you feel a bit at ease using this boilerplate code.

80
00:05:41.440 --> 00:05:43.690
There's nothing advanced or magical going on.

81
00:05:43.870 --> 00:05:46.150
So at this point we can start to work together.

82
00:05:46.510 --> 00:05:51.910
The first thing we need to do is install the official WordPress JavaScript package, write the workflow

83
00:05:51.910 --> 00:05:52.300
tool.

84
00:05:52.720 --> 00:05:54.280
So open up your command line.

85
00:05:55.360 --> 00:05:59.860
That's Control J on Windows or command John Mac and run this command.

86
00:05:59.860 --> 00:06:00.220
It's.

87
00:06:00.780 --> 00:06:01.710
NPM.

88
00:06:02.860 --> 00:06:06.610
Innit, and then a space dash y.

89
00:06:07.980 --> 00:06:13.950
Press enter, so that will create our package JSON file, it will keep track of our ingredients, but

90
00:06:13.950 --> 00:06:15.720
for now we only need one ingredient.

91
00:06:16.080 --> 00:06:18.240
So the only thing we need to install is this.

92
00:06:18.480 --> 00:06:27.120
We say NPM install at Simbel, WordPress slash scripts and that's it.

93
00:06:27.120 --> 00:06:28.230
Go ahead and press enter.

94
00:06:28.440 --> 00:06:33.200
And that will take perhaps a minute or two or maybe even a little bit longer.

95
00:06:33.600 --> 00:06:37.650
So please feel free to pause the video until your installation completes.

96
00:06:38.160 --> 00:06:43.710
Once it completes will want to run our NPM Run Start command, but we first need to set that up.

97
00:06:43.950 --> 00:06:44.700
So really quick.

98
00:06:44.700 --> 00:06:50.460
Just jump into your package, JSON file with me and you could actually just copy and paste and borrow

99
00:06:50.460 --> 00:06:53.790
this code from the previous plugin we worked on together.

100
00:06:54.300 --> 00:06:57.750
But inside of scripts, we just want to add two extra lines here.

101
00:06:57.750 --> 00:07:06.270
So right above the test line, we'll say quotes, build Colen, give it a string of text WP dash scripts

102
00:07:06.660 --> 00:07:07.380
build.

103
00:07:07.740 --> 00:07:10.560
Be sure to end that line with a comma on a new line.

104
00:07:10.560 --> 00:07:17.550
Let's say quotes start Colen quotes, WP scripts start and again.

105
00:07:17.550 --> 00:07:18.990
Be sure to end that with comma.

106
00:07:19.530 --> 00:07:23.310
Let's give that a save and now we can indeed start running our task.

107
00:07:23.340 --> 00:07:27.030
So it's just npm run start.

108
00:07:29.370 --> 00:07:34.230
OK, you'll know that it's working if all of a sudden you see a new folder on the left hand side here

109
00:07:34.230 --> 00:07:40.590
called Build Right, and it should have our access and our JavaScript cool.

110
00:07:40.590 --> 00:07:47.310
So our boilerplate code in the file is already loading the JavaScript in txt from the build folder.

111
00:07:47.640 --> 00:07:52.260
So now let's just go into the admin side of WordPress and activate our plug in.

112
00:07:52.260 --> 00:07:54.180
So under plug ins.

113
00:07:55.450 --> 00:08:01.150
Just look for the new plug in, so it's called featured Professor Blacktip, let's go ahead and activate

114
00:08:01.150 --> 00:08:01.540
that.

115
00:08:03.280 --> 00:08:06.790
And let's go test it out, so I will go into one of my blog posts.

116
00:08:08.410 --> 00:08:13.570
And you can try to add it anywhere, but for me, I'll add it maybe down here, I immediately see this

117
00:08:13.570 --> 00:08:19.380
option called Professor Call-out and if I click on that perfect, it should look like this for you.

118
00:08:19.390 --> 00:08:24.250
So there's this gray area that says we will have a select dropdown form element here.

119
00:08:24.490 --> 00:08:29.020
And then also the HTML preview of the selected professor will appear here.

120
00:08:29.500 --> 00:08:30.820
So where do we start from here?

121
00:08:31.120 --> 00:08:36.360
Well, let's just start building the actual select dropdown element right here.

122
00:08:36.700 --> 00:08:42.310
I think once that's actually in place here, even if it's just empty, it'll give us something to sink

123
00:08:42.310 --> 00:08:44.680
our teeth into and to build towards.

124
00:08:45.160 --> 00:08:54.190
So back in our SIRC folder, jump into index jazz, down in the jazz acts, we're looking for this div

125
00:08:54.190 --> 00:08:57.780
that has a class of professor select container.

126
00:08:58.210 --> 00:09:04.540
So inside that, let's get rid of this placeholder text and let's instead have you can just type select

127
00:09:04.540 --> 00:09:05.930
and then hit the tab key.

128
00:09:06.850 --> 00:09:11.530
We actually don't need a name or ID, we just want opening and closing select tags.

129
00:09:12.130 --> 00:09:12.430
OK.

130
00:09:12.520 --> 00:09:15.130
For now let's just hard code, a few fake options.

131
00:09:15.140 --> 00:09:21.970
So inside the select tag, let's say option hit tab for now, let's just say value of one and the readable

132
00:09:21.970 --> 00:09:25.380
text is one and then you can just duplicate that line two more times.

133
00:09:25.390 --> 00:09:27.780
So let's just have a fake one, two, three.

134
00:09:27.820 --> 00:09:28.600
So that's two.

135
00:09:28.610 --> 00:09:30.180
This one's three.

136
00:09:31.090 --> 00:09:34.140
OK, so if we save that and then refresh.

137
00:09:34.690 --> 00:09:39.040
Well I actually forgot to save this post, so I'll need to insert the block type again.

138
00:09:39.580 --> 00:09:43.380
Professor Call-out, so now we have this select dropdown.

139
00:09:43.390 --> 00:09:51.070
Now imagine instead of just one, two, three, if this was a list of all professor posts and the actual

140
00:09:51.070 --> 00:09:54.100
readable text values were Dr. Miaows a lot.

141
00:09:54.100 --> 00:09:56.200
Dr. Bark's a lot Frogh person.

142
00:09:56.500 --> 00:09:57.940
But then here's the crucial point.

143
00:09:58.300 --> 00:10:03.190
The actual value for each one was just their post ID, right.

144
00:10:03.190 --> 00:10:04.120
Which is just a number.

145
00:10:04.120 --> 00:10:10.120
So maybe Dr. MIAOWS A lot is number forty seven and bark's a lot is forty eight and Frogh person is

146
00:10:10.120 --> 00:10:10.810
forty nine.

147
00:10:11.050 --> 00:10:13.300
Everyone will have different post ID values.

148
00:10:13.300 --> 00:10:19.360
But the point here is that whatever that post ID that they select is, we just want to store that as

149
00:10:19.360 --> 00:10:22.060
an attribute for this block type.

150
00:10:22.690 --> 00:10:24.790
So let's go set up an attribute for that.

151
00:10:24.980 --> 00:10:29.770
So if we scroll up just a little bit, when we're registering our block type, we have title description,

152
00:10:29.770 --> 00:10:34.330
icon category, edit save well, maybe right above the edit line.

153
00:10:34.330 --> 00:10:39.640
So below the category line, let's say attributes to Ts at the start.

154
00:10:40.240 --> 00:10:41.920
So attributes Colen.

155
00:10:41.920 --> 00:10:46.480
Give it an object, be sure to have a comma right after that inside the object.

156
00:10:46.480 --> 00:10:47.770
I'm going to drop down now.

157
00:10:47.770 --> 00:10:51.040
We can make up any name we want for this attribute.

158
00:10:51.430 --> 00:10:53.290
I'm going to name it Proff.

159
00:10:53.560 --> 00:10:59.050
I'd call in curly brackets and let's say the type is a string.

160
00:10:59.470 --> 00:11:05.320
We know the post ID is actually a number, but in terms of how WordPress actually loads data out of

161
00:11:05.350 --> 00:11:11.440
the database and just for general string comparison, I've had better luck using a string as the type

162
00:11:11.440 --> 00:11:11.740
here.

163
00:11:12.330 --> 00:11:18.490
OK, with this in place, let's go back down to our select element and make it work with that attribute.

164
00:11:18.970 --> 00:11:24.550
First of all, before we forget when we have our function definition for edit component here within

165
00:11:24.550 --> 00:11:28.540
the parentheses for edit component, be sure to include a parameter.

166
00:11:28.690 --> 00:11:31.390
And remember, the industry standard is called props.

167
00:11:31.630 --> 00:11:36.700
I should have included this in the boilerplate code for us, but this is a good example, a good lesson

168
00:11:36.910 --> 00:11:38.650
to remember to include that here.

169
00:11:39.100 --> 00:11:46.150
Anyways, on the opening select tag, let's just give it an on change prop so equals curly brackets

170
00:11:46.630 --> 00:11:49.450
and we can just include an S6 Arrow function.

171
00:11:49.900 --> 00:11:55.930
So I'll say ee short for event arrow symbol don't need curly brackets.

172
00:11:55.930 --> 00:12:02.350
We can just say props dot set attributes parentheses to actually call it, give it an object.

173
00:12:02.770 --> 00:12:06.220
We just want to change the property or attribute that's named Prof.

174
00:12:06.400 --> 00:12:12.070
IDE Colon and then it would just be e target value.

175
00:12:12.520 --> 00:12:16.390
OK, inside our options, why don't we actually have a very first option.

176
00:12:16.390 --> 00:12:23.440
So I'll just say option one more time and let's have it's readable text say select a professor.

177
00:12:24.220 --> 00:12:30.370
OK, finally let's set things up so that once you select one, even if you reload the page, it will

178
00:12:30.370 --> 00:12:36.460
take the existing value from the database and it will know which one to sort of mark as selected so

179
00:12:36.460 --> 00:12:39.310
that when you revisit the page, it already appears highlighted.

180
00:12:39.640 --> 00:12:42.220
So first, let's set that up for this number one entry.

181
00:12:42.820 --> 00:12:45.130
You would just say selected equals.

182
00:12:45.310 --> 00:12:49.900
And then if you give it a value of true, it will appear to be the selected option.

183
00:12:50.290 --> 00:12:52.600
But we don't want to just hard code it to true.

184
00:12:53.080 --> 00:12:57.760
Instead, we can compare props, dot attributes, dot prof.

185
00:12:57.760 --> 00:13:04.360
IDE double sided check for equality if that equals well for this case just number one.

186
00:13:04.360 --> 00:13:07.660
So then if you wanted to you could just copy that.

187
00:13:07.950 --> 00:13:12.060
And use that here as well on the third line as well, and just change these values that we're checking

188
00:13:12.060 --> 00:13:13.710
for to two and three.

189
00:13:14.670 --> 00:13:19.830
Let's give this a save and test it out, so back in the admin panel, I'm going to remember to save

190
00:13:19.830 --> 00:13:22.560
this post so I don't have to insert that block type again.

191
00:13:22.560 --> 00:13:24.360
But now if I refresh.

192
00:13:27.200 --> 00:13:35.180
And if I find that block a professor, if I pick professor number two and then actually save and update

193
00:13:35.180 --> 00:13:40.730
the post and then reload the page, I'm just trying to make sure that WordPress is actually remembering

194
00:13:40.730 --> 00:13:41.480
that value.

195
00:13:41.660 --> 00:13:44.510
And if we scroll back down, perfect.

196
00:13:44.510 --> 00:13:46.070
It remembered number two.

197
00:13:46.490 --> 00:13:52.340
Now, it might not seem like a big deal to have just a hardcoded list of one, two and three that remembers

198
00:13:52.340 --> 00:13:53.000
your preference.

199
00:13:53.000 --> 00:13:58.520
But we're actually further along than you might realize because now we are laser focused on what our

200
00:13:58.520 --> 00:14:00.440
next step needs to be.

201
00:14:01.070 --> 00:14:08.120
We need a way using client side JavaScript to load a list of all of our professor posts.

202
00:14:08.660 --> 00:14:14.900
Right, so that we can visibly display their names, but also have their posted numbers as the value

203
00:14:14.900 --> 00:14:15.230
here.

204
00:14:15.860 --> 00:14:20.020
Well, that's exactly what we're going to learn how to do in our very next lesson.

205
00:14:20.450 --> 00:14:22.820
Let's keep things rolling and I'll see you then.
