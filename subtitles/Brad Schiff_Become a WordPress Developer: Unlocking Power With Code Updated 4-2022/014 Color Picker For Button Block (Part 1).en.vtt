WEBVTT
1
00:00:02.430 --> 00:00:03.300
Hello, everyone.

2
00:00:03.600 --> 00:00:08.190
In this lesson, we're going to add a color picker to our custom button block.

3
00:00:08.640 --> 00:00:09.990
Let's jump into the action.

4
00:00:10.470 --> 00:00:16.170
And actually, super quickly before we add the color picker, I do want to fix a bug that we should

5
00:00:16.170 --> 00:00:17.880
have addressed in the previous video.

6
00:00:18.330 --> 00:00:23.460
Essentially, if you add a button and do not give it a link value.

7
00:00:24.210 --> 00:00:25.470
So let me show you what I'm referring to.

8
00:00:25.470 --> 00:00:31.890
If I delete this instance of my button and then add in a new instance of the button and say, learn

9
00:00:31.890 --> 00:00:32.460
more.

10
00:00:32.460 --> 00:00:38.610
But I don't bother to click this icon to actually assign a link value and then I click Save.

11
00:00:38.910 --> 00:00:42.390
Well, you might expect that the button would appear on the front end.

12
00:00:42.390 --> 00:00:44.550
It just wouldn't take you anywhere if you click on it.

13
00:00:44.730 --> 00:00:47.910
However, if I refresh the button doesn't appear at all.

14
00:00:48.720 --> 00:00:53.160
I'm sure there are many different ways you could fix this issue, but let me show you what I would do.

15
00:00:53.610 --> 00:01:01.020
So within our blocks, in our generic button, yes, the issue has to do with our save component.

16
00:01:01.980 --> 00:01:08.730
Essentially, we're outputting this link element only if you haven't selected a link object yet, this

17
00:01:08.730 --> 00:01:11.610
would be trying to use a value that doesn't exist.

18
00:01:12.120 --> 00:01:12.330
Now.

19
00:01:12.330 --> 00:01:15.000
Again, there's probably ten different ways you could solve this issue.

20
00:01:15.180 --> 00:01:21.570
I'm sure you could get creative with the G6 here, but what I'll do to fix this is just up in our attributes

21
00:01:21.930 --> 00:01:23.820
for the link object attribute.

22
00:01:24.150 --> 00:01:31.320
Let's just give it some karma a default value of an object with just a property called URL and have

23
00:01:31.320 --> 00:01:35.370
it just be an empty string of text so we can save this file.

24
00:01:35.370 --> 00:01:43.410
Make sure you have npm run, start up and running and then if I go back and refresh attempt block recovery,

25
00:01:43.410 --> 00:01:45.780
let me actually delete that instance of the block.

26
00:01:45.780 --> 00:01:54.150
Add in a new fresh instance and say Learn more, dot, dot, dot, click save by refresh.

27
00:01:54.510 --> 00:01:54.930
Cool.

28
00:01:54.960 --> 00:01:58.170
Even though I didn't choose a link value, the button still appears.

29
00:01:58.650 --> 00:02:03.930
And then if I did want to link to something, for example, if I wanted to link to my About US page

30
00:02:04.890 --> 00:02:07.950
confirmed link, go ahead and save that refresh.

31
00:02:08.340 --> 00:02:08.760
Perfect.

32
00:02:08.760 --> 00:02:13.470
When I hover over, it might not show up in the screen recording, but in the bottom left corner I can

33
00:02:13.470 --> 00:02:15.720
see that it's pointing to Slash about us.

34
00:02:16.080 --> 00:02:16.470
Cool.

35
00:02:16.920 --> 00:02:22.980
Now that we fixed that bug, let's actually work on the color picker feature to get started.

36
00:02:22.980 --> 00:02:26.520
Let's focus on how we would add a right hand menu option.

37
00:02:26.790 --> 00:02:31.410
So in other words, when you click on the button and then if you have this icon selected right to have

38
00:02:31.410 --> 00:02:37.920
the right hand menu, we would want an area right about here that you click on to change the color.

39
00:02:38.430 --> 00:02:44.430
So to make that happen up at the top of our generic button dot JS file, we need to import a few things

40
00:02:44.430 --> 00:02:45.390
from WordPress.

41
00:02:45.870 --> 00:02:50.880
So first of all, on the line where we're importing items from block editor.

42
00:02:51.240 --> 00:02:56.370
So on that line of code, let's add something maybe right before block controls, we want to add something

43
00:02:56.370 --> 00:03:00.330
called inspector controls comma.

44
00:03:00.930 --> 00:03:01.290
Okay.

45
00:03:01.290 --> 00:03:09.930
Then on this line where we're importing items from components, let's add a comma, panel, body, comma,

46
00:03:10.140 --> 00:03:15.270
panel, row, comma, color palette.

47
00:03:16.770 --> 00:03:19.860
For some reason it's really easy for me to misspell the word palette.

48
00:03:19.860 --> 00:03:22.500
So it's one L but two TS.

49
00:03:23.100 --> 00:03:27.060
Okay, now that we've imported these for new items, let's go use them.

50
00:03:27.330 --> 00:03:35.340
So down in our edit component, let's look for our JS X, maybe right after the closing block controls

51
00:03:35.340 --> 00:03:35.780
tags.

52
00:03:35.780 --> 00:03:41.760
So right here let's add in inspector controls.

53
00:03:42.510 --> 00:03:43.560
Oops, I misspelled that.

54
00:03:43.560 --> 00:03:46.020
There should be a t the opening and closing.

55
00:03:46.020 --> 00:03:49.980
So Inspector controls inside of Inspector Controls.

56
00:03:49.980 --> 00:03:52.110
Let's have a panel body.

57
00:03:52.560 --> 00:03:56.220
So panel body on the opening tag.

58
00:03:56.220 --> 00:03:57.900
Let's give it a prop of title.

59
00:03:57.900 --> 00:03:59.670
Say title equals color.

60
00:03:59.670 --> 00:04:03.120
You could make up anything but this makes sense, writes the color chooser.

61
00:04:03.630 --> 00:04:07.830
Let's also give it a prop of initial open equals curly brackets.

62
00:04:07.830 --> 00:04:10.410
True inside of panel body.

63
00:04:10.410 --> 00:04:12.930
Let's nest a panel row.

64
00:04:12.930 --> 00:04:14.610
So panel row.

65
00:04:15.210 --> 00:04:19.050
And just for now, before we actually add the color picker, just to test that this is working, you

66
00:04:19.050 --> 00:04:23.490
can simply add the word hello, let's give that a save and test it out.

67
00:04:23.610 --> 00:04:25.800
So if I refresh the template editor.

68
00:04:27.090 --> 00:04:28.530
And click on our button.

69
00:04:28.770 --> 00:04:29.340
Perfect.

70
00:04:29.610 --> 00:04:31.860
In the right hand sidebar, we have this color option.

71
00:04:32.040 --> 00:04:36.330
So now, instead of the word hello, we just want a color picker tool.

72
00:04:36.990 --> 00:04:38.160
So back in our code.

73
00:04:39.090 --> 00:04:39.760
Let's get rid of this.

74
00:04:39.780 --> 00:04:40.380
Hello?

75
00:04:40.740 --> 00:04:46.980
Drop back down and we'll just have color palette, self-closing.

76
00:04:47.460 --> 00:04:49.490
And now let's give it a few basic props.

77
00:04:49.590 --> 00:04:51.730
So colors equals curly brackets.

78
00:04:51.750 --> 00:04:54.780
Let's also give it a prop of value equals curly brackets.

79
00:04:55.170 --> 00:04:58.260
Finally, on change equals curly brackets.

80
00:04:58.830 --> 00:04:59.960
Let's walk through each of these.

81
00:04:59.970 --> 00:05:01.260
So we'll start with colors.

82
00:05:01.500 --> 00:05:05.700
You give this an array of colors that you want your users to be able to choose between.

83
00:05:06.180 --> 00:05:09.420
So let's point towards a variable that doesn't exist, but we can go create it.

84
00:05:09.720 --> 00:05:12.150
Let's make up a name of our colors.

85
00:05:12.900 --> 00:05:16.260
Then if we scroll up just a little bit above the return line.

86
00:05:16.260 --> 00:05:22.260
So still in our edit component function, just above return, we can say contrast our colors equals

87
00:05:22.260 --> 00:05:24.380
an array in the array.

88
00:05:24.390 --> 00:05:29.220
Each color is an object, so you give it a name, let's say blue, right?

89
00:05:29.220 --> 00:05:30.960
And then you give it a property of color.

90
00:05:31.170 --> 00:05:33.020
And that's the actual color code.

91
00:05:33.030 --> 00:05:36.030
So hash tag for the fictional university blue.

92
00:05:36.030 --> 00:05:39.420
It's zero, D three, b66.

93
00:05:40.020 --> 00:05:43.620
Let's set up orange and dark orange so you can just copy that line.

94
00:05:44.130 --> 00:05:45.150
Be sure to have a comma.

95
00:05:45.150 --> 00:05:45.540
After that.

96
00:05:45.540 --> 00:05:47.940
One color would be orange.

97
00:05:48.720 --> 00:05:54.660
The code is 964b comma finally pasted in.

98
00:05:54.660 --> 00:05:57.240
Let's set up dark dash orange.

99
00:05:57.720 --> 00:06:03.390
I'm choosing these names because these correspond to the six class names that I've already set up.

100
00:06:04.020 --> 00:06:09.210
We'll talk more about my six s approach and how I'm working with colors a little bit later in the video.

101
00:06:09.270 --> 00:06:15.480
But for now, the dark orange code is f95738.

102
00:06:16.080 --> 00:06:16.410
Cool.

103
00:06:16.410 --> 00:06:20.970
Let's go back down to the color palette component and talk about the value.

104
00:06:21.150 --> 00:06:24.720
So this would just be the attribute that stores the color choice.

105
00:06:25.260 --> 00:06:31.380
So imagine you choose a color you hit save on the template or blogpost, and then a week later you reopen

106
00:06:31.380 --> 00:06:32.250
that page.

107
00:06:32.730 --> 00:06:38.040
Well, we need to tell the color palette which value is being used so it knows which one to select or

108
00:06:38.040 --> 00:06:40.950
highlight, as if that's your choice that you've already made.

109
00:06:41.430 --> 00:06:44.280
So I would just go up into our block attributes.

110
00:06:45.090 --> 00:06:47.970
So attributes we have a text size link object.

111
00:06:48.420 --> 00:06:49.350
Let's just add a comma.

112
00:06:49.350 --> 00:06:50.190
Add one more.

113
00:06:50.490 --> 00:06:52.380
Let's call it color name.

114
00:06:52.890 --> 00:06:54.120
I'm totally making this up.

115
00:06:54.120 --> 00:06:57.000
You could literally name the attribute pizza or unicorn.

116
00:06:57.300 --> 00:07:00.120
Or an obvious choice would simply be color.

117
00:07:00.510 --> 00:07:03.690
But I'll explain a bit later on what I'm going to name, color, name.

118
00:07:04.320 --> 00:07:06.360
It's just my own personal preference and approach.

119
00:07:06.360 --> 00:07:11.940
But anyways, that would be a type of a string of text.

120
00:07:12.600 --> 00:07:15.140
Anyways, this is what we would use for the value prop.

121
00:07:15.150 --> 00:07:22.680
So if we go back down into our color palette value, this would be props dot attributes, dot color

122
00:07:22.680 --> 00:07:23.250
name.

123
00:07:23.940 --> 00:07:28.470
Finally, let's set up the on change value a bit later in the video.

124
00:07:28.470 --> 00:07:31.290
We're actually going to have a little bit of logic in this function.

125
00:07:31.590 --> 00:07:37.020
So let's point towards a separate function just to stay organized instead of having too much code right

126
00:07:37.020 --> 00:07:38.310
here in the JS acts.

127
00:07:38.520 --> 00:07:40.140
So let's make up a function name.

128
00:07:40.380 --> 00:07:40.980
How about.

129
00:07:42.110 --> 00:07:44.120
Handle color change.

130
00:07:44.420 --> 00:07:46.640
Let's go create a function with this matching name.

131
00:07:46.640 --> 00:07:55.010
So right up above our return line it's a function handle, color change, parentheses, curly brackets.

132
00:07:55.460 --> 00:08:00.950
Now, regardless of the way that I want to work with human readable CSS class names, we need to ask

133
00:08:00.950 --> 00:08:06.560
ourselves, well, what does the color palette actually return when you change the color you've chosen?

134
00:08:06.830 --> 00:08:09.320
In other words, we need to have a parameter here, right?

135
00:08:09.320 --> 00:08:14.720
You could call it X, but what it's actually going to give us is a new color code value.

136
00:08:14.990 --> 00:08:20.990
So whichever color the user clicks on to select, it's just going to return the actual color code value

137
00:08:21.230 --> 00:08:22.460
into our function here.

138
00:08:22.520 --> 00:08:25.820
So why don't we call it color code now?

139
00:08:25.880 --> 00:08:28.280
We can do anything we want with this color code.

140
00:08:28.400 --> 00:08:33.320
But just to set up a quick proof of concept of how everything works together, let's just update our

141
00:08:33.320 --> 00:08:36.470
attribute called color name to include the color code.

142
00:08:37.100 --> 00:08:42.560
Even though that's not what I personally want, I think once we visualize this in the database, then

143
00:08:42.560 --> 00:08:46.280
I can explain the reasoning for why I'm doing things the way I'm doing them.

144
00:08:46.610 --> 00:08:51.620
But we would just say props dot set attributes an object.

145
00:08:51.620 --> 00:08:55.220
Let's change the color name to simply be color code.

146
00:08:55.400 --> 00:09:01.280
So in reality, we would want to set this to something like blue or orange or dark orange.

147
00:09:01.790 --> 00:09:06.050
But before we get too many steps ahead of ourselves, that's not what the color palette is going to

148
00:09:06.050 --> 00:09:06.530
give us.

149
00:09:06.530 --> 00:09:08.090
It's going to give us the color code.

150
00:09:08.330 --> 00:09:12.260
So just to make sure that this is working, let's visualize it in the database.

151
00:09:12.980 --> 00:09:19.130
So with all of this put together, let's click save, make sure your NPM run start task is running and

152
00:09:19.130 --> 00:09:20.210
let's go give it a test.

153
00:09:20.510 --> 00:09:21.560
So if I refresh.

154
00:09:23.900 --> 00:09:24.890
I click on the button.

155
00:09:25.400 --> 00:09:25.960
Perfect.

156
00:09:25.970 --> 00:09:28.220
There are the three fictional university colors.

157
00:09:28.490 --> 00:09:30.270
So imagine I choose dark orange.

158
00:09:30.290 --> 00:09:35.750
Now, obviously, we have not set up any connection to the way that you actually display the button

159
00:09:35.750 --> 00:09:36.080
here.

160
00:09:36.120 --> 00:09:36.310
Right.

161
00:09:36.320 --> 00:09:39.350
We haven't connected the dots to our access yet.

162
00:09:39.710 --> 00:09:45.440
But let's just go ahead and save this to prove to ourselves that it's at least being stored in the database

163
00:09:45.710 --> 00:09:48.210
and the correct value is being selected.

164
00:09:48.230 --> 00:09:53.930
So if we refresh this page, I select selected Dark Orange, by the way, just for a test if I click

165
00:09:53.930 --> 00:09:54.470
on the button.

166
00:09:54.770 --> 00:09:55.370
Perfect.

167
00:09:55.580 --> 00:09:58.280
So it's remembering it's looking at that attribute.

168
00:09:58.280 --> 00:10:01.340
It remembers that I chose the dark orange value.

169
00:10:01.670 --> 00:10:03.260
Now let's go look at our database.

170
00:10:03.680 --> 00:10:09.050
So if we dig into posts, select data, go to the last page, go to the very last item.

171
00:10:09.050 --> 00:10:09.680
Click edit.

172
00:10:10.490 --> 00:10:11.720
Here's our banner block.

173
00:10:11.750 --> 00:10:12.530
Towards the bottom.

174
00:10:12.530 --> 00:10:13.570
We should see our button.

175
00:10:13.580 --> 00:10:13.880
Yes.

176
00:10:13.880 --> 00:10:14.750
Generic button.

177
00:10:15.410 --> 00:10:15.890
Aha.

178
00:10:15.920 --> 00:10:17.030
Color name.

179
00:10:17.360 --> 00:10:22.670
And as you might have guessed, there is the hexadecimal color code for the dark orange that I selected.

180
00:10:23.030 --> 00:10:23.840
At this point.

181
00:10:23.840 --> 00:10:28.460
For some of you watching this lesson, you can consider the lesson completed and move on to the next

182
00:10:28.460 --> 00:10:28.910
lesson.

183
00:10:29.210 --> 00:10:35.630
In other words, you learned how to add the color palette tool and you've learned how to save the hexadecimal

184
00:10:35.630 --> 00:10:36.650
color code value.

185
00:10:36.920 --> 00:10:40.820
And really, it's up to you to use that however you see fit.

186
00:10:41.480 --> 00:10:42.840
So just a fair warning.

187
00:10:42.860 --> 00:10:48.560
The remainder of this video lesson is now just all of my own personal preference and my own personal

188
00:10:48.560 --> 00:10:49.370
philosophy.

189
00:10:49.640 --> 00:10:53.810
Essentially, I don't want to store the hexadecimal color code.

190
00:10:54.230 --> 00:10:56.420
I want an extra layer of abstraction.

191
00:10:56.450 --> 00:10:57.620
Let me explain what I mean.
