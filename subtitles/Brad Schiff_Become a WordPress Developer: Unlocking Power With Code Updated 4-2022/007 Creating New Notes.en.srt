1
00:00:01,950 --> 00:00:03,040
Hello, everyone.

2
00:00:03,420 --> 00:00:10,740
In this lesson, we will learn how to create brand new posts by using the rest API.

3
00:00:11,130 --> 00:00:14,200
Without further ado, let's jump right into the action.

4
00:00:14,640 --> 00:00:15,270
All right.

5
00:00:15,270 --> 00:00:23,070
So if we visit the my notes page in our previous lesson, we set up edit and delete functionality.

6
00:00:23,460 --> 00:00:29,610
And now in this lesson, I want to cover the missing piece of the puzzle, which is the ability to create

7
00:00:29,610 --> 00:00:31,350
an entirely new node.

8
00:00:31,620 --> 00:00:39,680
So maybe right about here, let's add a form that users can fill out to create a brand new note post.

9
00:00:40,080 --> 00:00:46,920
So in order to add that form to this page, let's jump into our text editor and within our theme folder,

10
00:00:46,920 --> 00:00:50,960
let's jump in to page my notes, dot BHP.

11
00:00:51,360 --> 00:00:57,000
And how about right above the unordered list that contains all of our note posts?

12
00:00:57,450 --> 00:01:00,630
Right above that, but still within the container div.

13
00:01:01,260 --> 00:01:11,160
Why don't we create a new div and let's give it a class of create note, OK, and then within this div,

14
00:01:11,160 --> 00:01:12,990
let's add a few different elements.

15
00:01:13,320 --> 00:01:20,250
So first let's add a heading level two and it can read create a new note.

16
00:01:20,820 --> 00:01:28,050
OK, and then right below this heading, let's also add an input and right below that let's add a text

17
00:01:28,050 --> 00:01:28,550
area.

18
00:01:29,760 --> 00:01:34,770
The input will be the field where they type in the title and this will be the field where they type

19
00:01:34,770 --> 00:01:36,200
in the body content.

20
00:01:36,540 --> 00:01:45,210
So with that in mind on the input, why don't we give it a placeholder of title and for the text area,

21
00:01:45,210 --> 00:01:50,170
give that a placeholder of your note here.

22
00:01:51,360 --> 00:01:56,450
OK, then for success or design reasons, why don't we give these elements classes?

23
00:01:57,060 --> 00:02:04,830
So on the heading, I will give it a class of headline and headline Dash, Dash Med..

24
00:02:05,580 --> 00:02:18,870
I will give the input a class of new note title and I will give the text area a class of new note body.

25
00:02:19,380 --> 00:02:23,460
OK, and finally, before we save this, why don't we add a submit button?

26
00:02:23,940 --> 00:02:32,880
So right below the text area element, I will create a span and it will read, create note and for styling

27
00:02:32,880 --> 00:02:37,290
reasons, let's give that a class of submit note.

28
00:02:37,800 --> 00:02:43,080
Actually, I should mention that these class names are not only for styling purposes.

29
00:02:43,350 --> 00:02:47,820
We can also use these class names to target the elements with our JavaScript.

30
00:02:48,210 --> 00:02:54,450
Anyways, with this in place, let's go ahead and save and then back on the front end, that gives us

31
00:02:54,450 --> 00:02:55,760
this brand new form.

32
00:02:56,280 --> 00:03:00,780
Now, at the moment, nothing happens when you click the orange create note button.

33
00:03:01,200 --> 00:03:07,800
So for the next step, let's write JavaScript so that when you click this button, we send off a request

34
00:03:07,800 --> 00:03:09,420
to a rest API.

35
00:03:09,420 --> 00:03:10,220
You are well.

36
00:03:10,530 --> 00:03:14,220
So let's go set up that JavaScript back in the text editor.

37
00:03:14,610 --> 00:03:21,720
Let's look within our G.S. modules folder and then hop into my notes Jass.

38
00:03:22,320 --> 00:03:28,620
And let's begin by setting up a new event that watches for clicks on the new create note button.

39
00:03:30,090 --> 00:03:31,830
In order to save a bit of typing.

40
00:03:31,830 --> 00:03:35,910
I'm just going to copy and duplicate one of these existing event lines.

41
00:03:36,510 --> 00:03:44,880
And on this new copy, let's change the selector from update note to submit note, because this is the

42
00:03:44,880 --> 00:03:48,360
class of this orange button down here, OK?

43
00:03:48,360 --> 00:03:53,010
And then when that button gets clicked on, what do we want to do in response?

44
00:03:53,460 --> 00:03:59,520
Well, instead of running a method named update note, why don't we set up a brand new method named

45
00:03:59,790 --> 00:04:01,260
create note?

46
00:04:01,780 --> 00:04:09,480
OK, now let's go set up a new method with this exact matching name, create note and to save a ton

47
00:04:09,480 --> 00:04:16,410
of typing, I'm just going to scroll down and find our update note method and we can just duplicate

48
00:04:16,410 --> 00:04:17,520
this and rename it.

49
00:04:18,180 --> 00:04:24,080
So I'm going to select from the beginning of update note all the way down to the end of the method here.

50
00:04:25,020 --> 00:04:30,900
Copy that into my clipboard and then right below it pasted in on this new copy.

51
00:04:30,900 --> 00:04:36,210
Let's change the name from update note to create note.

52
00:04:36,870 --> 00:04:37,410
All right.

53
00:04:37,410 --> 00:04:43,620
We no longer need this variable because in this case, we don't need a reference to the parent list

54
00:04:43,620 --> 00:04:46,020
item of the element that got clicked on.

55
00:04:46,320 --> 00:04:46,710
Right.

56
00:04:46,710 --> 00:04:54,270
That element in this variable was necessary when we were dealing with multiple posts and multiple copies

57
00:04:54,270 --> 00:04:56,280
of the same edit and delete button.

58
00:04:56,790 --> 00:05:01,350
But now that we're just dealing with this one single create form, we don't.

59
00:05:01,400 --> 00:05:04,310
Need this variable anymore, so let's delete that line.

60
00:05:06,750 --> 00:05:13,980
We can keep this because we still need to construct an object that contains the title and body contents,

61
00:05:14,400 --> 00:05:17,230
but we do need to update these two values here.

62
00:05:17,430 --> 00:05:24,450
So instead, let's say title equals and then it should just be the value of whatever they've typed into

63
00:05:24,450 --> 00:05:25,290
this field.

64
00:05:26,930 --> 00:05:35,840
So let's delete this this note find and instead we can just use Jake Query to select an element that

65
00:05:35,840 --> 00:05:45,500
has a class of new note title and then tack on dot vowel to get the value and then let's do the same

66
00:05:45,500 --> 00:05:46,640
thing for content.

67
00:05:46,910 --> 00:05:51,410
The content properties should equal whatever someone is typed in to this field.

68
00:05:53,000 --> 00:06:01,550
So let's delete this and instead use J query to select the element that has a class of new note body.

69
00:06:02,390 --> 00:06:09,080
And then you got Val to get the actual value and the name of this variable does not matter.

70
00:06:09,410 --> 00:06:18,410
But just so our code makes sense to us instead of our updated post, why don't we name it our new post?

71
00:06:18,920 --> 00:06:24,680
And if we're going to change the name of this variable here, then down in our AJAX request, when we

72
00:06:24,680 --> 00:06:29,170
say data equals, we want to be sure to update the reference to it here.

73
00:06:29,810 --> 00:06:36,350
So instead of our updated post, let's say our new post, OK, and perhaps the most important change

74
00:06:36,350 --> 00:06:40,760
of all is the Eurail property of our AJAX request.

75
00:06:41,150 --> 00:06:41,980
At the moment.

76
00:06:41,990 --> 00:06:49,040
This code is set up to update an existing post, because if you include an ID at the end of the euro

77
00:06:49,040 --> 00:06:55,440
like this, WordPress interprets that as you wanting to only work with that one existing post.

78
00:06:55,910 --> 00:07:02,360
So in this case, let's delete this code that would grab the ID and let's delete the plus symbol as

79
00:07:02,360 --> 00:07:02,780
well.

80
00:07:03,230 --> 00:07:08,150
And just this in and of itself is all it takes to create a brand new post.

81
00:07:08,420 --> 00:07:13,640
Now, obviously, we want to create a post with the post type of note, but if you wanted to create

82
00:07:13,640 --> 00:07:15,890
a blog post, you could say posts.

83
00:07:16,200 --> 00:07:18,830
You wanted to create a page, you could say pages.

84
00:07:19,760 --> 00:07:26,720
But we're just going to say note singular because that's the short name or variable name for this custom

85
00:07:26,720 --> 00:07:27,550
post type.

86
00:07:27,860 --> 00:07:33,560
And before we move on, you might be scratching your head and saying, isn't this the rest API you RL

87
00:07:33,710 --> 00:07:37,170
that would normally fetch the ten most recent posts?

88
00:07:37,550 --> 00:07:42,230
Well, yes, that would be the case if we were sending a get request.

89
00:07:42,500 --> 00:07:47,960
But remember, there are different types of requests and we're saying the type that we want to send

90
00:07:47,960 --> 00:07:51,080
is a post request, not a request.

91
00:07:51,330 --> 00:07:58,460
So we are posting or sending data and WordPress will interpret this as us wanting to create a brand

92
00:07:58,460 --> 00:07:59,330
new post.

93
00:07:59,660 --> 00:08:05,720
OK, now, before we save this and test it out, let's just take care of one more thing, and that is

94
00:08:05,720 --> 00:08:07,280
our success function.

95
00:08:07,820 --> 00:08:14,510
So if our request is successful and WordPress actually creates a brand new post, I think it would be

96
00:08:14,510 --> 00:08:19,090
cool if we dynamically added it to this list of notes on the fly.

97
00:08:19,970 --> 00:08:25,010
So, for example, you fill out the title and fill out the body and then when you click this button,

98
00:08:25,520 --> 00:08:31,160
if the request is successful, I think we should automatically clear out these fields so they get reset

99
00:08:31,160 --> 00:08:32,510
back to their empty state.

100
00:08:32,900 --> 00:08:36,950
And I think we should slide down the new note post down here.

101
00:08:37,400 --> 00:08:43,670
So in order to make that happen within our success function, we can leave the console log.

102
00:08:43,670 --> 00:08:45,410
Congrats and response.

103
00:08:45,410 --> 00:08:49,850
But let's delete this line where we were making the fields read only again.

104
00:08:50,180 --> 00:08:53,750
That only makes sense in the context of editing an existing note.

105
00:08:53,750 --> 00:08:56,240
We don't need it here when we are creating a node.

106
00:08:57,260 --> 00:09:03,170
OK, and let's begin by emptying out these two fields if the creation was successful.

107
00:09:04,160 --> 00:09:07,460
So I will use query to select those two fields.

108
00:09:08,090 --> 00:09:10,580
New node title comma.

109
00:09:11,210 --> 00:09:14,570
The other one had a class of new note body.

110
00:09:15,170 --> 00:09:21,620
OK then for both of those elements we want to target their value and just set it to a completely empty

111
00:09:21,620 --> 00:09:25,340
string and let's include a semicolon at the end of that line.

112
00:09:25,700 --> 00:09:31,250
OK, and then next, let's add a new item to this list of note posts.

113
00:09:31,760 --> 00:09:38,990
So remember, each one of the notes is a list item or elai element, and they all live within a container

114
00:09:39,140 --> 00:09:41,900
unordered list or UL element.

115
00:09:42,170 --> 00:09:49,100
So if we want to add on a new list item to that list, we can just use GE query and let's say single

116
00:09:49,100 --> 00:09:53,750
quotes and we can spell out a little bit of each HTML that we want to create here.

117
00:09:54,180 --> 00:10:02,690
Let's create a list item and within it for now, let's just say imagine real data here.

118
00:10:03,680 --> 00:10:05,990
We can update this in just a couple of minutes.

119
00:10:06,420 --> 00:10:09,140
OK, but this is the data that we want to work with.

120
00:10:09,140 --> 00:10:18,470
And then after that we can say dot prepend two and then you can say which element you want to add this

121
00:10:18,470 --> 00:10:18,860
to.

122
00:10:19,550 --> 00:10:26,390
So let's add this HTML to an element that has an idea of my notes.

123
00:10:27,050 --> 00:10:32,360
Because in an earlier lesson, that's the idea that we gave to the parent unordered list.

124
00:10:32,690 --> 00:10:33,190
All right.

125
00:10:33,200 --> 00:10:40,250
And if we want to animate this new content interview gradually, instead of just having it appear immediately,

126
00:10:40,550 --> 00:10:44,420
what we can do is say hide it to begin with.

127
00:10:44,960 --> 00:10:52,910
And then right after that chain on slide down and be sure to include a semicolon at the end of this

128
00:10:52,910 --> 00:10:53,390
line.

129
00:10:54,260 --> 00:11:00,830
With all of this in place, let's go ahead and save this file and then back on the front end, let's

130
00:11:00,830 --> 00:11:01,730
test it out.

131
00:11:02,090 --> 00:11:10,610
So for the title, I will say front end test for the body text to say lorem ipsum and let's click create

132
00:11:10,610 --> 00:11:11,090
note.

133
00:11:12,830 --> 00:11:13,250
Cool.

134
00:11:13,250 --> 00:11:19,400
So we see that immagine real data slid down and our script also cleared out these fields.

135
00:11:19,400 --> 00:11:21,290
So we are free to create a new one.

136
00:11:21,930 --> 00:11:23,720
Another new post.

137
00:11:25,070 --> 00:11:26,330
Hello World.

138
00:11:28,630 --> 00:11:35,470
Perfect, except we don't actually want it to say imagine real data here, we want it to use the same

139
00:11:35,470 --> 00:11:38,650
format as the other note posts, right.

140
00:11:38,650 --> 00:11:42,360
With a large title headline and edit and delete buttons.

141
00:11:42,760 --> 00:11:48,910
However, before we get to that, I want to address something even more important, which is if we manually

142
00:11:48,910 --> 00:11:57,400
refresh the page, those two new posts that we created are completely gone, or at least it seems that

143
00:11:57,400 --> 00:11:58,770
way from the front end.

144
00:11:59,080 --> 00:12:01,540
But trust me, those posts exist.

145
00:12:01,960 --> 00:12:05,320
We can prove it by jumping into the admin dashboard.

146
00:12:07,120 --> 00:12:13,960
And if I click notes in the sidebar here, we see those two posts that we created from the front end.

147
00:12:13,960 --> 00:12:21,310
But you'll notice that they both say draft draft as the default post status when you create a post through

148
00:12:21,310 --> 00:12:22,630
the rest API.

149
00:12:22,930 --> 00:12:27,720
But draft posts do not show up in a typical query for posts.

150
00:12:28,030 --> 00:12:35,320
So, for example, if I go into this front end test post and then over in the right hand column, if

151
00:12:35,320 --> 00:12:41,710
instead of clicking save draft, I actually click publish, well, that's going to sort of finalize

152
00:12:41,710 --> 00:12:43,270
the post right now.

153
00:12:43,270 --> 00:12:46,160
Its status is published instead of draft.

154
00:12:46,510 --> 00:12:53,480
So now back on the front end, if I refresh, we do indeed see that new front end test post.

155
00:12:53,950 --> 00:13:00,220
Now, obviously, we don't want to have to go into the admin dashboard and manually adjust each post

156
00:13:00,220 --> 00:13:01,270
that's getting created.

157
00:13:01,300 --> 00:13:04,170
So what is a programmatic way of doing that?

158
00:13:04,330 --> 00:13:11,290
Well, back in our JavaScript, within our create note method, within this our new post object where

159
00:13:11,290 --> 00:13:16,060
we've set title and content, let's just set a third property.

160
00:13:16,390 --> 00:13:22,930
So include a comma at the end of this line and let's create a new property named Statis.

161
00:13:23,620 --> 00:13:32,650
Well, by default it has a value of Drapht, but instead you and I can set it to publish now in a future

162
00:13:32,650 --> 00:13:32,910
less.

163
00:13:32,920 --> 00:13:39,010
And we are actually going to make all of the note posts private, not only because I think that fits

164
00:13:39,010 --> 00:13:42,730
the nature of a note, but also for security reasons.

165
00:13:43,000 --> 00:13:45,580
So eventually we will be setting this to private.

166
00:13:45,790 --> 00:13:47,610
Let's not worry about that for now.

167
00:13:47,860 --> 00:13:48,280
For now.

168
00:13:48,280 --> 00:13:55,660
Let's just set it to publish status, publish, OK, if we save that now, if we take our front end

169
00:13:55,660 --> 00:14:06,670
for another test drive and say testing, once again, this is a super amazing note and click create.

170
00:14:08,050 --> 00:14:10,120
So we still need to update immagine.

171
00:14:10,120 --> 00:14:12,790
Real data here that gets added on the fly.

172
00:14:12,790 --> 00:14:16,690
But if we refresh the page, cool.

173
00:14:16,690 --> 00:14:19,590
There we see our brand new testing once again post.

174
00:14:20,140 --> 00:14:25,150
Now, at this point, let's change gears and focus on that immagine real data here.

175
00:14:25,150 --> 00:14:26,230
Text, right.

176
00:14:26,300 --> 00:14:28,570
So if I create another sample post.

177
00:14:30,740 --> 00:14:32,170
Hi, hey, hello.

178
00:14:33,080 --> 00:14:39,110
Go ahead and create let's adjust things so that there's content that gets added to the page in real

179
00:14:39,110 --> 00:14:44,770
time on the fly perfectly matches the formatting for the other note posts.

180
00:14:44,930 --> 00:14:49,250
And that's exactly what we're going to cover in part two of this lesson.

181
00:14:49,610 --> 00:14:52,370
So let's keep things rolling and I will see you then.
