1
00:00:02,290 --> 00:00:03,250
Hello, everyone.

2
00:00:03,610 --> 00:00:10,600
In this lesson, we're going to add the ability to both create a pet and delete a pet from our front

3
00:00:10,600 --> 00:00:10,970
end.

4
00:00:11,410 --> 00:00:12,850
Let's jump into the action.

5
00:00:12,850 --> 00:00:20,020
So we're on our slash pet adoption page and maybe down at the very bottom below the table.

6
00:00:20,500 --> 00:00:27,580
Let's add a form where you can type in the name for a new pet and then submit the form and it will actually

7
00:00:27,580 --> 00:00:29,060
get added to the database.

8
00:00:29,650 --> 00:00:35,110
Now, to reduce the amount of boilerplate busywork we need to do, I'm not going to have fields where

9
00:00:35,110 --> 00:00:38,880
we choose the species and the weight and the hobby.

10
00:00:39,220 --> 00:00:44,590
I'm just going to have a field where you enter their name and then we can use our generate pet function

11
00:00:44,590 --> 00:00:48,190
to sort of fill in random values for all of the other fields.

12
00:00:48,430 --> 00:00:53,500
The point is, once you learn how to do this for one field, you can make the form as complex as you

13
00:00:53,500 --> 00:00:55,330
want to to get started.

14
00:00:55,340 --> 00:00:57,520
Let's jump into our template file.

15
00:00:57,820 --> 00:01:06,340
So in VS Code in our ANC folder template pitstop, let's scroll down and look for the closing table

16
00:01:06,340 --> 00:01:06,880
tag.

17
00:01:06,880 --> 00:01:11,410
So after the table, I will say, well, let's go into PPY.

18
00:01:12,850 --> 00:01:18,760
I'm going to begin with an if statement to check to see if the current user has admin privileges.

19
00:01:19,150 --> 00:01:19,330
Right.

20
00:01:19,420 --> 00:01:25,730
Only admin users and not just random guests should be able to even see this form to create a new pet.

21
00:01:25,780 --> 00:01:33,340
So I'll see if parentheses curly brackets, the condition would just be if current user can.

22
00:01:33,850 --> 00:01:35,230
And let's give it quotes.

23
00:01:35,230 --> 00:01:36,670
Administrator.

24
00:01:37,270 --> 00:01:45,670
OK, now I want to include HTML here, so I'll exit here and enter here inside.

25
00:01:45,670 --> 00:01:47,880
Let's type form and then hit tab.

26
00:01:48,430 --> 00:01:51,550
We will absolutely circle back to the action value here.

27
00:01:51,550 --> 00:01:53,410
So let's leave that blank for the moment.

28
00:01:53,770 --> 00:01:56,680
But first let's get the form up and running visually.

29
00:01:57,220 --> 00:02:01,330
So let's give it a class of create pet form.

30
00:02:02,080 --> 00:02:06,550
And while we're here so we don't forget, let's give it a method of equals.

31
00:02:06,790 --> 00:02:14,350
All caps post OK, inside the opening and closing form tags, let's have a paragraph.

32
00:02:14,350 --> 00:02:18,730
So just P tab and say enter just the name for a new pet.

33
00:02:19,330 --> 00:02:25,630
It's species weight and other details will be randomly generated.

34
00:02:27,040 --> 00:02:31,150
Maybe below this paragraph we can have an input, so just input it.

35
00:02:31,150 --> 00:02:33,430
Tab type can be text.

36
00:02:33,430 --> 00:02:39,520
Let's give it a name, you can name it anything, but maybe just incoming pet name.

37
00:02:40,060 --> 00:02:45,760
We can give it a placeholder and just say name, dot, dot, dot below that.

38
00:02:45,760 --> 00:02:47,080
Let's have a submit button.

39
00:02:47,080 --> 00:02:50,650
So button hit tab and just type add pet.

40
00:02:51,280 --> 00:02:53,890
Let's give this a save just for a quick visual test.

41
00:02:53,890 --> 00:02:59,950
And if we refresh down at the bottom, I'm not logged in as an admin user, so I don't see anything.

42
00:03:00,100 --> 00:03:01,360
You might need to do this too.

43
00:03:01,360 --> 00:03:06,520
But I'm going to pause the recording and log in, OK, now that I'm logged in with my admin account,

44
00:03:06,520 --> 00:03:07,120
perfect.

45
00:03:07,300 --> 00:03:09,060
I do see this form area.

46
00:03:09,400 --> 00:03:13,270
Now let's talk about what should actually happen when you submit the form.

47
00:03:13,690 --> 00:03:16,150
There are a few different ways that you could handle this.

48
00:03:16,540 --> 00:03:20,410
So by default in HTML form will sort of submit to its own.

49
00:03:20,410 --> 00:03:27,070
You RL you might remember back in the first chapter of this plug in section, we had a settings page

50
00:03:27,070 --> 00:03:33,640
that used to sort of submit to its own Eurail and we checked to see if a certain variable had been set

51
00:03:33,970 --> 00:03:39,910
so you could use that same strategy here and just include code to handle the processing within our template.

52
00:03:40,180 --> 00:03:43,510
However, I want to show you what I like to do in this situation.

53
00:03:43,930 --> 00:03:48,820
Back in our code on the opening form tag, let's talk about the action value.

54
00:03:48,820 --> 00:03:51,870
So which you are l do we want to submit the form to.

55
00:03:52,300 --> 00:03:58,240
Well, in these quotes drop into P and we're going to echo and let's use escape.

56
00:03:58,240 --> 00:04:04,990
You throw in these parentheses, let's give it admin U RL, which is a function itself and finally give

57
00:04:04,990 --> 00:04:09,950
it a value of admin Dasch post P.

58
00:04:10,450 --> 00:04:12,970
So we're posting to a WordPress system file.

59
00:04:13,180 --> 00:04:17,350
Now when most people see the name of this file or address, they get a bit scared.

60
00:04:17,380 --> 00:04:24,280
They think, oh, for security reasons, we should never have the front end post to an admin file.

61
00:04:24,280 --> 00:04:24,640
Right.

62
00:04:25,270 --> 00:04:31,120
Well, if you do a bit of research, the WordPress team fully expects us to use this on our front end,

63
00:04:31,540 --> 00:04:33,910
as we'll see when we set this up in just a moment.

64
00:04:34,120 --> 00:04:40,780
This is a very flexible way of having server side code run when a specific event happens.

65
00:04:41,140 --> 00:04:47,350
This way, we can keep our code tucked away in our main maybe index plug in file instead of in this

66
00:04:47,350 --> 00:04:48,430
template file.

67
00:04:48,820 --> 00:04:49,060
Right.

68
00:04:49,090 --> 00:04:53,890
I don't want to have to litter this file with code up at the top that checks to see if a certain value

69
00:04:53,890 --> 00:04:54,460
is set.

70
00:04:54,760 --> 00:05:01,210
I would want to keep that handling or processing code somewhere else before we save this file and see

71
00:05:01,210 --> 00:05:01,630
how in the.

72
00:05:01,710 --> 00:05:08,450
World admin post VP works, we just need to add one more detail to our form, so maybe right above this

73
00:05:08,450 --> 00:05:10,550
input, let's have another input.

74
00:05:10,550 --> 00:05:12,560
So input tab on your keyboard.

75
00:05:12,740 --> 00:05:15,130
Let's change the type to hidden.

76
00:05:15,680 --> 00:05:18,020
We need to give it a name of exactly.

77
00:05:18,320 --> 00:05:20,450
Action so we're not making this up.

78
00:05:20,450 --> 00:05:25,220
WordPress will be specifically looking for this value or name of exactly.

79
00:05:25,220 --> 00:05:25,940
Action.

80
00:05:26,660 --> 00:05:29,750
And now the value that we give it, we can make this up.

81
00:05:30,110 --> 00:05:32,880
So I'll make up a value of create pet.

82
00:05:33,530 --> 00:05:37,310
OK, now let's save this and let me explain how admin post works.

83
00:05:37,640 --> 00:05:39,710
Essentially, when we post to this U.

84
00:05:39,710 --> 00:05:47,390
RL WordPress, we'll see our field that has a name of action and it's going to use this value to create

85
00:05:47,390 --> 00:05:52,090
a specific hook that we can hook on to in our main plug in file.

86
00:05:52,460 --> 00:05:54,860
So remember this create pet value.

87
00:05:55,100 --> 00:06:01,550
And right now I want you to jump in in our sidebar to our main plugin file, which is named New Database

88
00:06:01,550 --> 00:06:01,940
Tables.

89
00:06:03,770 --> 00:06:08,830
So up towards the very top of this file where we're adding different actions and filters.

90
00:06:09,170 --> 00:06:09,890
Check this out.

91
00:06:09,890 --> 00:06:11,750
We can just add a new actions.

92
00:06:11,750 --> 00:06:16,630
Also add action, parentheses, semicolon, just like always.

93
00:06:16,670 --> 00:06:18,140
We're going to give this to arguments.

94
00:06:18,140 --> 00:06:21,080
The first argument is the name of the action hook.

95
00:06:21,410 --> 00:06:22,670
So we would just give it a value.

96
00:06:22,670 --> 00:06:29,840
So string of text of admin, underscore, post, underscore, and then whatever name we gave it.

97
00:06:29,840 --> 00:06:34,250
So we gave it a name of create pet in that hidden field.

98
00:06:34,610 --> 00:06:42,050
So now admin post P will recognize that we've hooked on to this action and it will simply call whatever

99
00:06:42,050 --> 00:06:44,210
function we provide here for us.

100
00:06:44,630 --> 00:06:47,780
Within that function, we can do whatever we want.

101
00:06:47,780 --> 00:06:54,380
We have complete freedom and then when we're done, we can perhaps just redirect the user right back

102
00:06:54,380 --> 00:06:55,910
to this same template screen.

103
00:06:56,660 --> 00:07:01,490
So do this with me instead of the placeholder B, let's make up a method name that we can create in

104
00:07:01,490 --> 00:07:02,150
just a moment.

105
00:07:02,150 --> 00:07:06,180
So I'll use the array callable syntax first argument dollar.

106
00:07:06,230 --> 00:07:06,950
Sign this.

107
00:07:07,310 --> 00:07:11,510
Let's make up a name of maybe create uppercase pet.

108
00:07:12,230 --> 00:07:14,870
OK, now I'll just create a function with that name.

109
00:07:14,870 --> 00:07:19,190
So function create pet parentheses, curly brackets.

110
00:07:20,120 --> 00:07:24,950
Within this function, the first thing I want to do is check to make sure that the current user actually

111
00:07:24,950 --> 00:07:26,990
has admin privileges.

112
00:07:26,990 --> 00:07:31,940
So if parentheses curly brackets I'll even have an else curly brackets.

113
00:07:32,270 --> 00:07:38,840
So the condition would just be if again current user can give it a value of administrator.

114
00:07:39,380 --> 00:07:41,180
So it include the real code here.

115
00:07:41,180 --> 00:07:46,250
But if they're not an admin user, I would just redirect them to our homepage.

116
00:07:46,250 --> 00:07:53,750
So WP redirect semicolon and to get the homepage URL, it's just a function of site.

117
00:07:53,750 --> 00:07:58,010
You URL if they do have admin privileges, what do we want to do.

118
00:07:58,490 --> 00:08:04,430
Well, let's use our generate pet to randomly generate a pet object or pet array, so I'll just create

119
00:08:04,430 --> 00:08:12,620
a variable so it's equal generate pet but then I'll overwrite the pet name with whatever value the user

120
00:08:12,620 --> 00:08:14,030
typed into this field.

121
00:08:14,660 --> 00:08:22,340
So I could just say I'm pet look inside that array for the pet name item and then just set it to equal.

122
00:08:22,880 --> 00:08:28,280
I'll start by using the sanitized text field function semicolon inside here.

123
00:08:28,520 --> 00:08:35,180
Well because our form was submitted using a post request and you can just say dollar sign, underscore

124
00:08:35,180 --> 00:08:37,640
post, look inside that array.

125
00:08:38,090 --> 00:08:41,780
And remember we named our input that you'll actually type the name into.

126
00:08:42,050 --> 00:08:45,350
We gave it a name of incoming pet name.

127
00:08:45,800 --> 00:08:47,630
So that's what we would include here.

128
00:08:47,630 --> 00:08:50,630
Just quote incoming pet name.

129
00:08:51,140 --> 00:08:51,530
Cool.

130
00:08:51,530 --> 00:08:55,640
So now we would just want to save this pet array into the database.

131
00:08:56,180 --> 00:09:00,980
So on a new line, I would just say Global Dollar Sign WP DB.

132
00:09:01,520 --> 00:09:04,220
We can now look inside that for its insert function.

133
00:09:04,220 --> 00:09:09,020
So dollar sign WP DB look inside it for insert semicolon.

134
00:09:09,410 --> 00:09:11,000
We give this to arguments.

135
00:09:11,000 --> 00:09:17,000
The first is the table that we want to insert into which we can just look on our class for table name.

136
00:09:18,170 --> 00:09:20,390
Second argument is just dollar sign pay.

137
00:09:21,320 --> 00:09:26,630
OK, once we've done that, let's redirect the user back to the pet adoption page.

138
00:09:26,870 --> 00:09:30,650
So it's just our home page URL and then slash pet adoption.

139
00:09:31,250 --> 00:09:36,410
So WP redirect parentheses to call it site.

140
00:09:36,410 --> 00:09:38,330
You rl inside there.

141
00:09:38,330 --> 00:09:42,320
Just give it a value of slash pets dash adoption.

142
00:09:42,920 --> 00:09:49,070
Before we save this and test it out, I'll let you know that WordPress will actually only run this exact

143
00:09:49,070 --> 00:09:51,740
hook if the current user is logged in.

144
00:09:52,040 --> 00:09:57,110
Now it doesn't check to see that they're an administrative user, just that they're logged in with any

145
00:09:57,110 --> 00:10:00,020
even just a guest or basic editor account.

146
00:10:00,410 --> 00:10:01,610
So here's what we can do.

147
00:10:01,680 --> 00:10:07,530
You can duplicate this exact line of code, just copy and paste it on this copy, change the hook name

148
00:10:07,530 --> 00:10:13,930
to admin post, underscore, no priv underscore and then whatever your name is.

149
00:10:13,950 --> 00:10:14,880
So create pet.

150
00:10:15,480 --> 00:10:18,750
So I didn't make up this no priv no privileges portion.

151
00:10:19,020 --> 00:10:23,820
WordPress will now call this function if a user isn't logged in at all.

152
00:10:24,150 --> 00:10:30,030
In both cases we're calling the exact same create pet function, which is fine because we're making

153
00:10:30,030 --> 00:10:33,840
sure that the user is an administrator actually within that function.

154
00:10:34,420 --> 00:10:40,980
Anyways, let's save this and test it out so I'll refresh the front end just to make sure the form is

155
00:10:40,980 --> 00:10:47,130
submitting to the correct you URL and I'll give it a test name of miaows a lot and submit.

156
00:10:48,030 --> 00:10:54,570
It redirected me back to this page, but because I have over 100000 pets, there's no easy way for me

157
00:10:54,570 --> 00:10:57,420
to see that pet in these results.

158
00:10:57,780 --> 00:11:04,350
However, if we go into Add Mynor and click on our table, click select data and then go to the very

159
00:11:04,350 --> 00:11:06,710
last page of results.

160
00:11:08,040 --> 00:11:08,490
Perfect.

161
00:11:08,490 --> 00:11:13,620
You can see the very last row has a name of miaows a lot at this point.

162
00:11:13,620 --> 00:11:14,850
Let's use the strategy.

163
00:11:14,850 --> 00:11:21,600
We just learned to add a delete option for each row so you can imagine there's an extra column here

164
00:11:21,600 --> 00:11:25,080
with maybe a red X that you click on to delete that pet.
