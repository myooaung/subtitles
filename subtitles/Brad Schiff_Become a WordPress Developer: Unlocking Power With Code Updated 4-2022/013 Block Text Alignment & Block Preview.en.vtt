WEBVTT
1
00:00:02.400 --> 00:00:03.430
Hello, everyone.

2
00:00:03.780 --> 00:00:09.760
In this lesson, we're going to finish our quiz block type, let's jump right into the action.

3
00:00:10.110 --> 00:00:15.810
Let's begin by letting the owner of the site choose the text alignment for our block type.

4
00:00:16.170 --> 00:00:21.630
So perhaps instead of aligning it to the left, they would want it to be center aligned or right aligned.

5
00:00:22.020 --> 00:00:26.450
So on the admin side of things, you would control this once you click onto the block?

6
00:00:26.820 --> 00:00:29.220
Well, you see, this menu appears right above it.

7
00:00:29.430 --> 00:00:34.050
So we just want a text alignment option right in here to make this happen.

8
00:00:34.050 --> 00:00:41.430
Let's jump into our text editor within our Sarsae folder, jump into indexed JS, write the admin or

9
00:00:41.700 --> 00:00:43.530
editor copy of our component.

10
00:00:44.510 --> 00:00:50.540
Now, up towards the top on this line, when we're importing from WordPress block editor, I want you

11
00:00:50.540 --> 00:00:52.520
to add two more things that we're importing.

12
00:00:52.520 --> 00:00:54.110
So maybe a comma right here.

13
00:00:54.410 --> 00:01:03.020
Let's import block controls, comma and also import alignment toolbar.

14
00:01:04.040 --> 00:01:10.040
OK, now, before we go leverage these, let's first add a new attribute that will store in the database,

15
00:01:10.040 --> 00:01:12.660
right, if you want, left, center or right.

16
00:01:13.160 --> 00:01:18.710
So if we scroll down just a little bit inside our register block type call, we have our attributes

17
00:01:18.980 --> 00:01:20.320
right after B.G. color.

18
00:01:20.330 --> 00:01:21.470
Let's just say comma.

19
00:01:21.770 --> 00:01:23.560
You make up any name you want.

20
00:01:23.600 --> 00:01:29.090
I'll use the alignment column, give it an object.

21
00:01:29.540 --> 00:01:35.780
Let's set the type to be string comma and let's set the default to be left.

22
00:01:36.260 --> 00:01:43.070
OK, now watch how easy it is to actually add this down in our JS acts within our overall div, maybe

23
00:01:43.070 --> 00:01:45.200
just right above inspector controls.

24
00:01:45.200 --> 00:01:53.450
So right about here, let's just say block controls and then hit tab inside the opening and closing

25
00:01:53.450 --> 00:01:53.870
tags.

26
00:01:53.880 --> 00:02:00.500
Let's drop down and then let's have a self-closing tag called Alignment Toolbar.

27
00:02:01.370 --> 00:02:03.140
So self-closing just like this.

28
00:02:03.140 --> 00:02:04.890
And now we just give it a couple of props.

29
00:02:04.940 --> 00:02:09.900
So let's say value equals curly brackets and we would just pull in that attribute.

30
00:02:09.920 --> 00:02:14.960
So props, dot attributes dot the alignment.

31
00:02:15.680 --> 00:02:18.790
And then we also want to tell it what to do each time it changes.

32
00:02:18.800 --> 00:02:22.130
So on change equals curly brackets.

33
00:02:22.700 --> 00:02:24.950
Let's just give it an six arrow function.

34
00:02:24.950 --> 00:02:31.010
So X as our one parameter arrow symbol, we don't need curly brackets for just one statement and let's

35
00:02:31.010 --> 00:02:36.860
say props, dot set attributes, parentheses to call it.

36
00:02:36.860 --> 00:02:38.300
We give that an object.

37
00:02:38.300 --> 00:02:42.500
The name of the attribute we want to change is the alignment.

38
00:02:42.890 --> 00:02:50.330
It helps if you spell it correctly, the alignment colon and we we just set that to X. So whatever the

39
00:02:50.330 --> 00:02:52.250
current value is just changed to.

40
00:02:53.280 --> 00:02:58.590
So to review, just like in the last lesson, how we added inspector controls and that controls the

41
00:02:58.590 --> 00:02:59.670
right hand side.

42
00:02:59.880 --> 00:03:05.670
Well, we can add bloc controls and that will appear in sort of the inline toolbar that appears right

43
00:03:05.670 --> 00:03:06.570
over the content.

44
00:03:06.990 --> 00:03:10.890
So if we save this and refresh the edit screen.

45
00:03:12.110 --> 00:03:19.070
If we actually click on our block type, cool, there is the alignment icon and if I click on it and

46
00:03:19.070 --> 00:03:21.410
set it to align center.

47
00:03:22.610 --> 00:03:28.700
And click update, let's refresh and see if that was actually remembered or stored, so if we go back

48
00:03:29.150 --> 00:03:32.550
and check the icon, you can see it was remembered cool.

49
00:03:32.570 --> 00:03:37.750
Now, I don't think we should actually change the text alignment on this edit admin copy.

50
00:03:37.910 --> 00:03:41.000
I think these text fields will look a bit awkward if we did that.

51
00:03:41.330 --> 00:03:45.350
But let's go actually use that alignment value on the front end.

52
00:03:45.920 --> 00:03:46.140
Right.

53
00:03:46.220 --> 00:03:48.680
So to do that, we would just open up.

54
00:03:49.070 --> 00:03:53.060
We look in our Sarsae folder, we would open up front end gess.

55
00:03:53.960 --> 00:03:58.990
So down when we're returning the parentheses with multiline joysticks, we have our opening div tag.

56
00:03:59.180 --> 00:04:02.980
We already gave it a style prop inside this object.

57
00:04:02.990 --> 00:04:04.400
Let's just give it another prop..

58
00:04:04.400 --> 00:04:11.180
So right after B.G. color here, I would just say comma and in real access it would be text dash a line.

59
00:04:11.180 --> 00:04:14.780
But this is JavaScript pretending to be access.

60
00:04:14.780 --> 00:04:17.330
So it would be text uppercase A..

61
00:04:17.500 --> 00:04:21.830
A line like this colon and then it would just be props.

62
00:04:21.830 --> 00:04:24.760
Dot the alignment.

63
00:04:25.580 --> 00:04:28.100
Give that a save if we refresh the front end.

64
00:04:28.910 --> 00:04:31.400
Perfect center aligned now.

65
00:04:31.400 --> 00:04:38.210
Yes, this was just one simple example of working with this toolbar, but this chapter isn't meant to

66
00:04:38.210 --> 00:04:40.990
be an exhaustive Wikipedia type of resource.

67
00:04:41.240 --> 00:04:46.640
So from here you can look through the official WordPress documentation.

68
00:04:47.210 --> 00:04:51.920
And if there's something super specific that you want to set up, this should point you in the right

69
00:04:51.920 --> 00:04:52.520
direction.

70
00:04:52.790 --> 00:04:58.760
But our chapter here did give you the general idea of how you work with this menu.

71
00:04:59.300 --> 00:05:04.520
OK, now, before we bring this lesson to a close, there are just a couple more small details I do

72
00:05:04.520 --> 00:05:05.250
want to set up.

73
00:05:05.660 --> 00:05:11.930
So first of all, instead of using the inline block insert tool right here, if instead we use this

74
00:05:11.930 --> 00:05:18.980
tool up here, Adblock, well, you'll notice that if you hover over our block type, it says no preview

75
00:05:18.980 --> 00:05:19.630
available.

76
00:05:20.000 --> 00:05:26.320
However, if we hover over one of the default block types, you can see those do have a preview.

77
00:05:26.750 --> 00:05:30.800
Now, luckily, it's very easy to add a preview to our block type.

78
00:05:31.250 --> 00:05:35.360
All we need to do is jump into our index file.

79
00:05:36.390 --> 00:05:42.480
And when we're calling the register block type function, where we're giving it a title icon category

80
00:05:42.480 --> 00:05:49.710
and attributes write and edit and save, we just give it another property called example and that's

81
00:05:49.710 --> 00:05:49.860
it.

82
00:05:49.860 --> 00:05:51.110
WordPress will do the rest.

83
00:05:51.120 --> 00:05:57.660
So if we just write here, maybe after attributes, comma, if we say a new top level property called

84
00:05:57.660 --> 00:06:02.040
example Colon, and then you just give it an object.

85
00:06:02.280 --> 00:06:04.860
So curly brackets, be sure to have a comma after that.

86
00:06:05.010 --> 00:06:06.720
So our properties down below work.

87
00:06:06.870 --> 00:06:14.400
But inside this object, you're just going to give it a property of attributes, colon and then you

88
00:06:14.400 --> 00:06:19.200
would just give it an object, just like we did when we're actually defining sort of the hollowed out

89
00:06:19.200 --> 00:06:19.890
structure.

90
00:06:20.190 --> 00:06:25.230
Only in this object you're actually providing example values for each property.

91
00:06:25.560 --> 00:06:27.600
So I won't bore you by typing this out.

92
00:06:27.600 --> 00:06:30.060
But let me just paste this in as a quick reference.

93
00:06:30.390 --> 00:06:34.380
So if you want to pause the video and type this out, you can, but.

94
00:06:34.380 --> 00:06:34.560
Right.

95
00:06:34.650 --> 00:06:37.350
It's just an object with the exact same attributes.

96
00:06:37.650 --> 00:06:40.470
But you give a placeholder example values.

97
00:06:40.800 --> 00:06:49.670
So if I save this and refresh now, if I use this tool, if I hover over, are you paying attention?

98
00:06:50.040 --> 00:06:50.400
Cool.

99
00:06:50.400 --> 00:06:52.010
We have a real time preview.

100
00:06:52.320 --> 00:06:53.660
I think this is really neat.

101
00:06:53.670 --> 00:06:55.920
So it's not a punchier JPEG.

102
00:06:55.920 --> 00:07:03.420
Screenshot WordPress and react or actually in real time creating what it would look like if you used

103
00:07:03.420 --> 00:07:04.650
these values.

104
00:07:05.130 --> 00:07:10.290
So it's actually rendering our code RSX with those values in place.

105
00:07:10.290 --> 00:07:11.560
I think that's super cool.

106
00:07:12.160 --> 00:07:18.060
OK, the other detail that I wanted to show you is once you actually click on our block type and you

107
00:07:18.060 --> 00:07:23.220
have the right hand side bar open, a lot of blocks will offer a description of the block here.

108
00:07:23.370 --> 00:07:28.590
Now, you don't need to include this, but if you wanted to back in our code, you would just provide

109
00:07:28.590 --> 00:07:34.890
another top level property called description colon and then just give it a string of text.

110
00:07:34.890 --> 00:07:36.240
Be sure to end with a comma here.

111
00:07:36.420 --> 00:07:42.960
So, for example, if I just paste in this string of text and refresh now when I actually click on the

112
00:07:42.960 --> 00:07:46.590
block type, you see that little bit of description text right here.

113
00:07:47.170 --> 00:07:52.890
OK, and that is going to bring this lesson and this block type to a close.

114
00:07:53.250 --> 00:07:54.500
Where do we go from here?

115
00:07:54.510 --> 00:07:58.980
Well, in our very next lesson, let me show you the sneak preview.

116
00:07:59.700 --> 00:08:03.780
We're going to begin working on the featured Professor Block type.

117
00:08:04.110 --> 00:08:11.280
This block type is perhaps less about react and client side JavaScript and more about really getting

118
00:08:11.280 --> 00:08:17.290
custom behavior with metadata and creating relationships between different pieces of content.

119
00:08:17.940 --> 00:08:24.120
I had a lot of fun building this block type because it really merges together both the front end and

120
00:08:24.120 --> 00:08:25.590
the back end of WordPress.

121
00:08:26.040 --> 00:08:29.820
Let's keep things rolling and I will see you in the next lesson.
