1
00:00:00,180 --> 00:00:05,790
When you're working with a blog post or page, I want the content to only take up sort of the middle

2
00:00:06,090 --> 00:00:07,560
800 pixels or so.

3
00:00:08,160 --> 00:00:09,730
So how do we customize this?

4
00:00:09,750 --> 00:00:10,800
How do we change this?

5
00:00:11,100 --> 00:00:13,770
Well, that's where Theme Jason comes into play.

6
00:00:14,340 --> 00:00:19,880
So in our brand new empty theme dot JSON file, let's add curly brackets inside there.

7
00:00:19,890 --> 00:00:22,350
Let's add a property called version.

8
00:00:22,860 --> 00:00:23,970
Set it to two.

9
00:00:24,630 --> 00:00:25,350
In the future.

10
00:00:25,350 --> 00:00:28,170
I'm sure this will get bumped up to version three, version four.

11
00:00:28,170 --> 00:00:34,230
But as I'm recording this in the early middle portion of 2022, this is the current number.

12
00:00:34,650 --> 00:00:42,270
The reason we need this is because the block editor is changing so much, so quickly and so drastically

13
00:00:42,540 --> 00:00:47,790
that WordPress really needs some sort of version system in order for everything to not just break and

14
00:00:47,790 --> 00:00:48,930
be super confusing.

15
00:00:49,470 --> 00:00:49,740
Right?

16
00:00:49,860 --> 00:00:55,410
WordPress is currently in the process of changing so many different settings and the way that the block

17
00:00:55,410 --> 00:00:58,350
editor works and the way that full sized editing works.

18
00:00:58,650 --> 00:01:01,500
So it makes sense that you would need to specify a version.

19
00:01:02,070 --> 00:01:10,500
Anyways, let's add another property called Settings Colon curly brackets inside of that object.

20
00:01:11,070 --> 00:01:17,010
Let's set a property called layout call in curly brackets inside of that.

21
00:01:17,460 --> 00:01:22,950
We can have a property called content size and the essence size is capitalized.

22
00:01:23,460 --> 00:01:27,660
And let's give this a value of 800 pixels.

23
00:01:28,860 --> 00:01:35,370
So as soon as we save this file and then go back into WordPress, if you refresh or blog post or page

24
00:01:35,370 --> 00:01:35,850
editor.

25
00:01:37,460 --> 00:01:37,760
Cool.

26
00:01:37,760 --> 00:01:38,390
Let me zoom in.

27
00:01:38,840 --> 00:01:41,270
You can measure if you want to, but it's only taking up.

28
00:01:41,720 --> 00:01:45,080
You know, you can see the content is using the middle 800 pixels.

29
00:01:45,830 --> 00:01:52,190
But if we go to the full site editor and refresh, it will continue to use the full available width

30
00:01:52,610 --> 00:01:53,990
and it's just personal preference.

31
00:01:53,990 --> 00:01:56,450
But this is the way that I like to configure things.

32
00:01:56,960 --> 00:02:04,310
If you're curious, as of today, I believe WordPress uses a value of 840 as the default sort of standard

33
00:02:04,310 --> 00:02:05,420
fallback value.

34
00:02:06,080 --> 00:02:06,360
Cool.

35
00:02:06,410 --> 00:02:07,490
So we can give that a save.

36
00:02:07,490 --> 00:02:09,680
Go back into the blog post screen refresh.

37
00:02:09,950 --> 00:02:10,910
You get the idea.

38
00:02:11,870 --> 00:02:15,410
Now, in just a minute or two, we will learn more about themed JSON.

39
00:02:15,590 --> 00:02:21,260
For example, we'll learn how to define a color palette, provide default styles for WordPress core

40
00:02:21,260 --> 00:02:24,470
blocks, disable certain features, so on and so forth.

41
00:02:24,680 --> 00:02:27,860
But before we get to that, let's take a break from theme dot JSON.

42
00:02:28,220 --> 00:02:35,570
And I want to talk about how you could make a block, take up the available full width if you wanted

43
00:02:35,570 --> 00:02:35,930
to.

44
00:02:36,260 --> 00:02:42,530
So for example, I don't want paragraphs and headings and most blocks to take up the full width in the

45
00:02:42,530 --> 00:02:43,850
post or page editor.

46
00:02:44,150 --> 00:02:47,420
However, what if you inserted our banner block?

47
00:02:47,570 --> 00:02:50,780
So what if I added a block and I added the banner block?

48
00:02:51,200 --> 00:02:52,400
And what if I did?

49
00:02:52,400 --> 00:02:59,150
Indeed, even though we're in the poster page editor, what if I wanted it to take up the full available

50
00:02:59,150 --> 00:02:59,600
width?

51
00:03:00,170 --> 00:03:01,400
Well, here's what you can do.

52
00:03:01,910 --> 00:03:03,470
Jump in to your text editor.

53
00:03:03,620 --> 00:03:06,160
Let's go into our blocks, jump into banner dot.

54
00:03:06,170 --> 00:03:12,830
Jess, when we're using register block type and we're providing properties like title, edit and save,

55
00:03:13,010 --> 00:03:19,040
we can just add another property named supports colon curly brackets.

56
00:03:19,040 --> 00:03:22,070
Be sure to include a comma after that in the curly brackets.

57
00:03:23,110 --> 00:03:28,510
We can just say that we support the A-line property, give it an array, and the only option we want

58
00:03:28,510 --> 00:03:29,800
to give it is full.

59
00:03:30,490 --> 00:03:34,510
Then let's also set that to be the default choice before you even select it.

60
00:03:35,050 --> 00:03:39,400
So we would just give our block and attributes property.

61
00:03:40,780 --> 00:03:42,460
Comma in the curly brackets.

62
00:03:42,910 --> 00:03:45,010
Let's have a property named a line.

63
00:03:45,400 --> 00:03:46,330
Curly brackets.

64
00:03:46,330 --> 00:03:52,690
So its type would be a string of tax, but most importantly, its default value should be four.

65
00:03:53,020 --> 00:03:56,170
So you don't even need to select it manually as the user.

66
00:03:56,590 --> 00:04:01,640
Let's give this a save and be sure to have your NPM run start task up and running.

67
00:04:02,500 --> 00:04:02,830
Cool.

68
00:04:03,220 --> 00:04:08,860
So if I go back into WordPress and refresh and keep in mind I'm in the post and page editor if I refresh.

69
00:04:11,040 --> 00:04:16,410
Well, I forgot to save the post with the banner, but if you just add in the banner block once again.

70
00:04:17,010 --> 00:04:17,460
Cool.

71
00:04:17,640 --> 00:04:20,400
Now it is indeed taking up the full width.

72
00:04:21,180 --> 00:04:21,570
Okay.

73
00:04:21,570 --> 00:04:25,080
At this point, let's get back to the theme dot JSON file.

74
00:04:25,380 --> 00:04:31,770
For example, let's learn how to use this file to define color palette starter values for our theme.

75
00:04:32,310 --> 00:04:34,560
So inside these settings object.

76
00:04:35,010 --> 00:04:41,760
So maybe right above the layout property, we can have a property called color code in curly brackets.

77
00:04:41,770 --> 00:04:44,860
Be sure to include a comma inside this object.

78
00:04:44,880 --> 00:04:50,270
There are many different properties we can set, but the first one I want to talk about is palette.

79
00:04:51,140 --> 00:04:53,740
So Colon and set this to an array.

80
00:04:53,750 --> 00:04:55,200
So square brackets.

81
00:04:55,770 --> 00:04:58,950
In the square brackets we can just list multiple colors.

82
00:04:59,130 --> 00:05:02,760
So each color is an object to define a color.

83
00:05:02,760 --> 00:05:04,710
You give it a property called slug.

84
00:05:04,890 --> 00:05:06,900
So this is where you make up a name.

85
00:05:07,290 --> 00:05:09,840
Let's make up a name of maybe primary.

86
00:05:10,050 --> 00:05:12,180
That's our primary color, comma.

87
00:05:12,300 --> 00:05:14,250
Then you give it a property of color.

88
00:05:14,700 --> 00:05:18,480
And then this would be the actual color code, the hexadecimal value.

89
00:05:18,480 --> 00:05:23,460
So hash tag, I'm just going to use the primary blue from fictional university.

90
00:05:23,460 --> 00:05:29,610
So it's hashtag 0d3, B six, six, okay, comma.

91
00:05:29,610 --> 00:05:31,470
And then you give it a property of name.

92
00:05:31,740 --> 00:05:36,510
And the idea here is the slug is sort of the computer friendly name for your color.

93
00:05:37,170 --> 00:05:40,680
This is the human friendly or human readable name.

94
00:05:40,680 --> 00:05:45,990
So you can say uppercase primary or primary blue, but I'll just go with primary.

95
00:05:46,440 --> 00:05:46,850
Okay.

96
00:05:46,860 --> 00:05:51,090
Now, in a palette, you would want more than one color so you can just duplicate this object.

97
00:05:51,480 --> 00:05:53,010
Have a comma pasted in.

98
00:05:53,340 --> 00:05:56,850
I won't bore you with this, so I'm going to add in three additional colors.

99
00:05:56,850 --> 00:06:00,240
And then if you want to follow along, you can pause the video once I have them in.

100
00:06:00,900 --> 00:06:01,230
Okay.

101
00:06:01,230 --> 00:06:03,500
If you want to, you can pause the video and type these in.

102
00:06:03,510 --> 00:06:06,900
So primary is the blue color in fictional university.

103
00:06:07,410 --> 00:06:09,570
Secondary is the orange color.

104
00:06:09,780 --> 00:06:12,060
And then I just have background in foreground.

105
00:06:12,060 --> 00:06:15,180
So this is white and this is a sort of medium dark gray.

106
00:06:15,780 --> 00:06:20,250
You can also find this file as a downloadable zip at the end of the lesson for your reference.

107
00:06:20,250 --> 00:06:22,200
But let's go ahead and save this.

108
00:06:22,620 --> 00:06:28,290
And now back in The Post Editor, if we refresh any block where you can customize the color, you're

109
00:06:28,290 --> 00:06:30,410
going to see those palette options now.

110
00:06:30,420 --> 00:06:35,850
So if I click on this paragraph and then use this icon to show the right hand menu, you can go into

111
00:06:35,850 --> 00:06:36,780
the color menu.

112
00:06:37,840 --> 00:06:42,910
If you wanted to change the text color for this paragraph, click on that and your theme palette colors

113
00:06:42,910 --> 00:06:43,720
show up there.

114
00:06:43,720 --> 00:06:43,980
Right.

115
00:06:43,990 --> 00:06:46,270
There's the fictional university Blue Orange.

116
00:06:46,660 --> 00:06:49,990
There's the human readable label name when you hover over one.

117
00:06:50,530 --> 00:06:51,460
You get the idea.

118
00:06:51,850 --> 00:06:56,890
Let's take things a step further, though, because, yes, it's useful to have theme palette color

119
00:06:56,920 --> 00:06:57,610
options here.

120
00:06:57,850 --> 00:07:04,780
But I think it would be even better if we could define default values that specific blocks should use.

121
00:07:04,930 --> 00:07:08,240
So let me give you a real world example below this paragraph.

122
00:07:08,260 --> 00:07:11,560
Let's imagine we add the default core buttons.

123
00:07:11,560 --> 00:07:12,610
BLOCK Right.

124
00:07:12,610 --> 00:07:18,370
So WordPress has a block type called buttons and then let's just say click me.

125
00:07:18,700 --> 00:07:25,000
So what if we wanted our theme dot JSON file to say that by default, if you use the core WordPress

126
00:07:25,000 --> 00:07:29,980
button block, you know, this background color of the button should be our fictional university blue

127
00:07:29,980 --> 00:07:31,840
or fictional university orange.

128
00:07:32,530 --> 00:07:33,780
Well, let's go set that up.

129
00:07:33,790 --> 00:07:37,750
Let's spell out that style within theme dot JSON.

130
00:07:38,410 --> 00:07:43,810
So back in our text editor, if we scroll up to the top, so far everything we've been adding lives

131
00:07:43,810 --> 00:07:45,700
in the settings object.

132
00:07:45,970 --> 00:07:53,020
However, right now we can add another top level property called Styles Colon, curly brackets, comma.

133
00:07:53,830 --> 00:07:59,890
Inside of this object, let's have a property called blocks, colon and curly brackets.

134
00:08:00,310 --> 00:08:04,750
In this object you can now provide styles for specific blocks.

135
00:08:04,990 --> 00:08:06,670
Now we're only going to write out one.

136
00:08:06,670 --> 00:08:11,680
So its name would be core slash button colon curly brackets.

137
00:08:11,680 --> 00:08:16,810
But the idea is you can have a comma here and then spell out styles for as many of the core blocks as

138
00:08:16,810 --> 00:08:17,530
you want to.

139
00:08:17,800 --> 00:08:20,410
We're just going to have this one so we don't need the column at the end.

140
00:08:20,560 --> 00:08:28,300
Now, in this object, let's drop down and let's have a property called Color Colon for the brackets.

141
00:08:28,570 --> 00:08:31,060
And now we'll have one property called text.

142
00:08:31,060 --> 00:08:33,400
And imagine we want the text color to be white.

143
00:08:33,400 --> 00:08:38,350
So hash tag and then three FS or six FS comma.

144
00:08:38,560 --> 00:08:40,610
But now let's set the background color.

145
00:08:40,630 --> 00:08:42,280
Now, here's where things get interesting.

146
00:08:42,610 --> 00:08:43,840
Sure you could.

147
00:08:43,840 --> 00:08:47,680
Hard code this to a color code value for blue or orange.

148
00:08:48,070 --> 00:08:51,910
But what if we want to point towards one of the colors from our palette?

149
00:08:52,480 --> 00:08:55,930
For example, let's imagine we want to use the primary blue color.

150
00:08:56,140 --> 00:09:03,760
So our primary palette color, you would just say in these quotes, var for variable parentheses and

151
00:09:03,760 --> 00:09:05,530
then it's dash dash.

152
00:09:05,530 --> 00:09:06,370
WP.

153
00:09:06,670 --> 00:09:08,530
Dash dash preset.

154
00:09:08,860 --> 00:09:10,480
Dash dash color.

155
00:09:10,750 --> 00:09:11,260
Dash.

156
00:09:11,260 --> 00:09:11,710
Dash.

157
00:09:11,920 --> 00:09:15,010
And then whatever slug name you want to choose.

158
00:09:15,160 --> 00:09:17,470
So in our case, it would be primary.

159
00:09:17,950 --> 00:09:22,060
However, I want to make it clear that you're free to make up any names you want here.

160
00:09:22,070 --> 00:09:24,400
There was nothing special about the name Primary.

161
00:09:24,700 --> 00:09:30,880
So just to prove a point here, I could change this slug name for our primary blue to be pizza.

162
00:09:31,850 --> 00:09:33,650
And then that's what you would reference here.

163
00:09:33,650 --> 00:09:36,470
So it would be dash dash pizza.

164
00:09:36,470 --> 00:09:38,450
So you're free to make up slug names.

165
00:09:38,930 --> 00:09:42,440
WordPress will make them available as CSS, as variables like this.

166
00:09:42,770 --> 00:09:44,540
So let's give this a save and test it out.

167
00:09:45,290 --> 00:09:51,890
We refresh the post edit screen where I'm editing this blog post and if I try to insert the buttons

168
00:09:51,890 --> 00:09:52,840
block once again.

169
00:09:52,850 --> 00:09:54,940
So say buttons.

170
00:09:54,950 --> 00:09:55,550
There it is.

171
00:09:56,510 --> 00:09:56,870
Cool.

172
00:09:56,900 --> 00:09:59,140
Notice the button is blue by default.

173
00:09:59,150 --> 00:10:00,410
We didn't have to set that.

174
00:10:00,800 --> 00:10:06,740
You say Click me and then we can go ahead and save this blog post and WordPress will go ahead and viewed

175
00:10:06,740 --> 00:10:07,760
on the front end as well.

176
00:10:07,970 --> 00:10:17,000
So WordPress is going to generate the CC for us on both the admin editor side and the front end side.

177
00:10:17,300 --> 00:10:20,180
If you're curious how this works, you can right click on that button.

178
00:10:20,330 --> 00:10:22,280
So I'm on the front end of my website right now.

179
00:10:22,580 --> 00:10:23,630
Click inspect.

180
00:10:24,290 --> 00:10:25,820
There's the button, the element.

181
00:10:25,820 --> 00:10:32,240
It has a class of WP button, block link, and there you can see the actual CC powering that.

182
00:10:32,810 --> 00:10:38,780
So from a technical perspective, it's just a CC variable, but WordPress does the work of making those

183
00:10:38,780 --> 00:10:42,650
variables available on the front end and the admin side.

184
00:10:43,010 --> 00:10:48,170
So that allows us to sort of set these starter default values in themed JSON.

185
00:10:48,410 --> 00:10:51,200
But the owner of the website is free to override them.

186
00:10:51,590 --> 00:10:56,090
So let's pretend we're not a web developer and we're just, you know, the non-technical owner of the

187
00:10:56,090 --> 00:10:56,660
website.

188
00:10:57,650 --> 00:11:02,330
What you can do if you go into the full site editor screen rights or not.

189
00:11:02,330 --> 00:11:05,270
The blog post editor, but the full site editor.

190
00:11:05,930 --> 00:11:06,230
Woops.

191
00:11:06,260 --> 00:11:08,210
You can go ahead and click Attempt BLOCK Recovery.

192
00:11:08,210 --> 00:11:09,350
That's not the point right now.

193
00:11:09,650 --> 00:11:14,540
When you have a block type that's a work in progress that you're continually writing new code for,

194
00:11:14,690 --> 00:11:20,480
you're going to see this message anyways in the full site template editor you can click on this icon

195
00:11:20,480 --> 00:11:26,090
if you hover over it, it says Styles and now we can click on Colors.

196
00:11:27,080 --> 00:11:31,250
Down here, you could set options like the entire background page color or, you know, sort of the

197
00:11:31,250 --> 00:11:32,870
default body text color.

198
00:11:33,320 --> 00:11:36,920
I'm not interested in those settings, but I want to show you right now is the palette option right

199
00:11:36,920 --> 00:11:37,210
here.

200
00:11:37,220 --> 00:11:42,590
So if you click on palette, there are the colors we set up in our themed JSON file.

201
00:11:42,770 --> 00:11:47,240
If you click the three arrows right above them, you can click edit colors.

202
00:11:48,490 --> 00:11:53,050
So now the owner of the website can say, you know what, I don't want Primary to be this dark blue

203
00:11:53,050 --> 00:11:57,550
so they can click on it and choose, you know, a neon green.

204
00:11:57,820 --> 00:12:00,250
Whether that's good or bad, that's not up for us to decide.

205
00:12:01,300 --> 00:12:02,890
Let's go ahead and save that.

206
00:12:04,870 --> 00:12:07,610
And now if you refresh, you can see your button.

207
00:12:07,960 --> 00:12:12,300
It's just going to use whatever the primary slug colour has been set to.

208
00:12:12,760 --> 00:12:18,850
Now, I do want to point out that it's not as if our themed JSON file got automagically updated.

209
00:12:19,090 --> 00:12:22,240
It's still claiming that the primary color is the dark blue.

210
00:12:22,840 --> 00:12:28,870
To really understand what's going on here, you can open up your database, click on to the post table,

211
00:12:29,320 --> 00:12:30,430
click select data.

212
00:12:30,440 --> 00:12:32,560
Go to the very last page of results.

213
00:12:32,710 --> 00:12:34,930
Scroll down to the very last item.

214
00:12:35,740 --> 00:12:41,140
Well, actually, for me, it's the second to last item, but you can see if I go into edit it to look

215
00:12:41,140 --> 00:12:42,820
at it, you can see post content.

216
00:12:43,420 --> 00:12:48,220
WordPress has saved the same content that would normally live in our themed JSON file.

217
00:12:48,550 --> 00:12:53,050
It's saved that into the database so you can see the settings that have actually been changed.

218
00:12:53,050 --> 00:12:59,120
So settings, color palette in that primary or pizza color, right.

219
00:12:59,140 --> 00:13:01,570
That is the custom value, the neon green.

220
00:13:02,350 --> 00:13:07,120
So this is very similar to the way that WordPress handles customizations to templates.

221
00:13:07,150 --> 00:13:07,360
Right?

222
00:13:07,420 --> 00:13:13,600
It stores the user customizations in the database and then the files on the actual hard drive.

223
00:13:13,900 --> 00:13:18,670
They always serve as sort of, you know, a way to get back home base that you can revert to.

224
00:13:19,360 --> 00:13:25,120
So for example, the non web developer user could go into the styles and then you can always click these

225
00:13:25,120 --> 00:13:28,330
three dots appearance click reset to defaults.

226
00:13:29,140 --> 00:13:33,730
As soon as you do that you see it's back to the values from theme dot Jason so you can click save.

227
00:13:34,810 --> 00:13:37,630
And now the button is no longer hideous neon green.

228
00:13:37,870 --> 00:13:40,540
It's back to the value that we chose as a professional.

229
00:13:41,020 --> 00:13:42,430
Okay, let's change gears now.

230
00:13:42,610 --> 00:13:45,490
So that's enough about this style's object.

231
00:13:45,730 --> 00:13:48,430
Let's get back to the settings object.

232
00:13:48,820 --> 00:13:54,190
I want to show you how you can set both global settings and per block settings.

233
00:13:54,970 --> 00:13:56,260
So let's walk through an example.

234
00:13:56,500 --> 00:13:59,260
Let's imagine back on the blog post edit screen.

235
00:13:59,560 --> 00:14:03,100
Let's imagine when you click on the core WordPress Buttons block.

236
00:14:03,670 --> 00:14:09,260
Imagine we did not want there to be a border option in this right hand menu.

237
00:14:09,340 --> 00:14:09,590
Right.

238
00:14:09,610 --> 00:14:12,550
So what if we just want to disable the border setting completely?

239
00:14:12,910 --> 00:14:20,680
Well, in themed json within our settings object not styles, but settings we can just add another property.

240
00:14:20,680 --> 00:14:25,330
So maybe above color we can have a property called blocs colon or the brackets comma.

241
00:14:25,690 --> 00:14:28,800
As you might have guessed, you spell out which block you're interested in.

242
00:14:28,810 --> 00:14:32,710
So core slash button colon, curly brackets.

243
00:14:33,010 --> 00:14:39,850
And now the thing we're interested in is not color, but it's border, colon, curly brackets.

244
00:14:40,570 --> 00:14:43,330
In this object, there's multiple border properties.

245
00:14:43,330 --> 00:14:45,640
And I just want to set all of them to false.

246
00:14:46,450 --> 00:14:49,270
So color, right.

247
00:14:49,270 --> 00:14:50,170
The color of the border.

248
00:14:50,170 --> 00:14:51,550
I want to set that to false.

249
00:14:51,550 --> 00:14:55,240
I don't want you to be able to set that same thing with the radius of the border.

250
00:14:55,540 --> 00:14:57,460
Same thing with the style of the border.

251
00:14:57,460 --> 00:14:57,730
Right.

252
00:14:57,760 --> 00:14:58,360
Is it solid?

253
00:14:58,360 --> 00:15:02,140
Is it dotted set that the false and finally the width of the border.

254
00:15:02,830 --> 00:15:05,920
So we can save that if we go back and refresh.

255
00:15:08,120 --> 00:15:09,320
If I click on that button.

256
00:15:09,590 --> 00:15:14,570
Notice there is no longer any mention of border in the settings that we can customize.

257
00:15:15,050 --> 00:15:15,380
Okay.

258
00:15:15,380 --> 00:15:17,600
So that's a per block setting example.

259
00:15:17,840 --> 00:15:19,880
What if we wanted the global setting change?

260
00:15:19,880 --> 00:15:27,920
So what if for every single block we wanted to disable the ability to change the color and maybe the

261
00:15:28,040 --> 00:15:29,930
typography or font size?

262
00:15:30,620 --> 00:15:35,420
Well, back in theme dot Jason within settings, but not within blocks.

263
00:15:35,690 --> 00:15:39,400
Blocks is where you set up specific settings for that particular block.

264
00:15:39,410 --> 00:15:41,090
So above the blocks line.

265
00:15:41,090 --> 00:15:48,770
But inside settings we can have something called typography, colon for the brackets, comma in there

266
00:15:48,980 --> 00:15:54,770
we can start saying, you know, font sizes and just set that to an empty array.

267
00:15:55,460 --> 00:15:58,370
We give that a save and then refresh.

268
00:15:59,510 --> 00:16:06,020
Now if I click on the button in the right hand sidebar, we no longer see the option to change the font

269
00:16:06,020 --> 00:16:06,560
size.

270
00:16:07,100 --> 00:16:11,810
And actually, instead of walking through how you would disable this color menu, I think we need to

271
00:16:11,810 --> 00:16:15,800
talk about a larger point here, and you've probably been yelling at the screen for the last minute

272
00:16:15,800 --> 00:16:21,680
or two, wondering, Brad, how in the world am I supposed to know the names of these properties and

273
00:16:21,680 --> 00:16:23,180
the names of these options?

274
00:16:23,810 --> 00:16:24,680
That's a great question.

275
00:16:24,680 --> 00:16:29,860
And I think it actually brings us to the end of this lesson, and that is working with this theme dot

276
00:16:29,900 --> 00:16:30,740
JSON file.

277
00:16:30,860 --> 00:16:33,590
There's not really any educational concepts.

278
00:16:33,710 --> 00:16:36,890
What I mean by that is there are no ideas to explain.

279
00:16:37,190 --> 00:16:42,980
It's really just JSON property names and values, and I don't think there's really any value in memorizing

280
00:16:42,980 --> 00:16:43,820
everything here.

281
00:16:44,060 --> 00:16:49,580
It's more of a situation where you Google for the thing you're trying to accomplish and you dig through

282
00:16:49,580 --> 00:16:52,130
the WordPress documentation to find what you need.

283
00:16:52,610 --> 00:16:57,710
So if you're wondering how I found out the names of these properties and you know what sort of values

284
00:16:57,710 --> 00:17:03,260
you're supposed to be giving them, well, if you just go to developer dot WordPress dot org, it's

285
00:17:03,260 --> 00:17:07,610
still early days for full site editing and deemed JSON.

286
00:17:07,760 --> 00:17:11,300
So the useful information is still spread out across multiple pages.

287
00:17:11,600 --> 00:17:18,080
But all I did was look around and in the official documentation you'll find examples of the property

288
00:17:18,080 --> 00:17:20,390
names, the different values that you can provide.

289
00:17:21,080 --> 00:17:25,370
So I encourage you to check out the documentation if there's something specific that you're trying to

290
00:17:25,370 --> 00:17:25,910
achieve.

291
00:17:26,240 --> 00:17:31,460
But it's not something that I would worry about, you know, experimenting and studying preemptively

292
00:17:31,610 --> 00:17:34,850
if there's not something you really want to set up right here, right now.

293
00:17:35,390 --> 00:17:38,000
In fact, this ties into our very next lesson.

294
00:17:38,270 --> 00:17:44,360
So depending on the way that you're going to be using WordPress, you might use theme dot JSON more

295
00:17:44,360 --> 00:17:45,020
or less.

296
00:17:45,290 --> 00:17:51,260
In other words, if you're going to use WordPress as a content management system, right, where you

297
00:17:51,260 --> 00:17:56,630
don't expect your clients to change the design of the website, you're probably not going to rely on

298
00:17:56,630 --> 00:17:58,070
this file all that much.

299
00:17:58,520 --> 00:18:04,370
If, however, you're going to use WordPress where the clients or the end users are indeed using WordPress

300
00:18:04,370 --> 00:18:10,640
as a page builder or a design builder, well then you might want to study this file a bit more in-depth.

301
00:18:11,030 --> 00:18:16,160
Anyways, in our next lesson, we're going to start building our custom button block type.

302
00:18:16,730 --> 00:18:18,140
So remember our banner block.

303
00:18:18,140 --> 00:18:19,880
We've already created generic heading.

304
00:18:20,090 --> 00:18:22,040
Now we're going to create a generic button.

305
00:18:22,550 --> 00:18:27,980
And when we code the option to let the user choose what color the button should be, you'll actually

306
00:18:27,980 --> 00:18:30,680
see that I don't want to use themed JSON.

307
00:18:31,070 --> 00:18:35,720
I want to code those color options myself in our custom block.

308
00:18:36,080 --> 00:18:43,010
The reason for this is because I don't want the end user to have any ability whatsoever to actually

309
00:18:43,010 --> 00:18:45,260
change the custom color values.

310
00:18:45,620 --> 00:18:52,460
And as of right now, I'm speaking at the end of February or the beginning of March 2022, I can't find

311
00:18:52,460 --> 00:19:00,530
an easy way to completely 100% lock down certain settings in this file so that the end user can't just

312
00:19:00,560 --> 00:19:01,370
override it.

313
00:19:01,880 --> 00:19:05,930
Now, again, depending on the type of website you're building, maybe that's okay.

314
00:19:06,170 --> 00:19:07,070
Maybe it's not.

315
00:19:07,310 --> 00:19:13,010
In other words, there's no one right or wrong way to handle all of these new technologies that we're

316
00:19:13,010 --> 00:19:13,550
covering.

317
00:19:13,910 --> 00:19:18,200
I'm just trying to show you a bird's eye view of the different technology pieces that exist.

318
00:19:18,560 --> 00:19:25,070
And it's really up to you to form your own opinion, you know, your own philosophy of how you want

319
00:19:25,070 --> 00:19:26,720
to use these technologies.

320
00:19:27,170 --> 00:19:28,550
Anyways, that's enough rambling.

321
00:19:28,550 --> 00:19:32,360
In our next lesson, we're going to start building our custom button block.

322
00:19:32,780 --> 00:19:34,910
Let's keep things rolling and I'll see you then.
