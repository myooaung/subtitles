1
00:00:02,040 --> 00:00:03,090
Hello, everyone.

2
00:00:03,510 --> 00:00:10,920
In this lesson, we will begin building a feature that will allow Sinding users to manage their own

3
00:00:10,920 --> 00:00:13,610
personal my notes section.

4
00:00:14,100 --> 00:00:20,280
So if a user takes their laptop into one of their university classes, they can create a new note,

5
00:00:20,600 --> 00:00:23,520
maybe title it biology, lecture number four.

6
00:00:24,240 --> 00:00:28,410
And then within the main body field, they can type out any notes they want to take.

7
00:00:28,920 --> 00:00:34,980
Users will also be able to update or edit an existing note, as well as delete one of their notes.

8
00:00:35,370 --> 00:00:40,920
The reason we're going to do this is because it's a great exercise to learn about the other three letters

9
00:00:41,010 --> 00:00:41,760
in CRUD.

10
00:00:42,240 --> 00:00:47,430
Remember, the CRUD acronym stands for Create, Read, Update and Delete.

11
00:00:47,910 --> 00:00:54,330
Up until this point in the course, we've only learned about the ah how to read or load in data from

12
00:00:54,330 --> 00:00:55,290
the database.

13
00:00:55,500 --> 00:01:00,270
Well, now it's time to learn about creating, updating and deleting.

14
00:01:00,750 --> 00:01:05,190
So without further ado, let's begin building our my notes feature.

15
00:01:05,790 --> 00:01:06,240
All right.

16
00:01:06,290 --> 00:01:07,470
So where do we begin?

17
00:01:08,040 --> 00:01:13,830
Well, we want users to be able to manage their notes right from the front end of our Web site.

18
00:01:14,370 --> 00:01:15,570
So for the first step.

19
00:01:15,630 --> 00:01:19,740
Why don't we create a brand new page and name it my notes.

20
00:01:20,100 --> 00:01:22,890
And then we can link to it up in the header navigation.

21
00:01:23,340 --> 00:01:29,190
So over in the admen dashboard under pages, let's select add new.

22
00:01:30,320 --> 00:01:33,680
For the title, I will say my notes.

23
00:01:34,190 --> 00:01:36,140
It doesn't leave any body content.

24
00:01:36,500 --> 00:01:38,270
Then let's go ahead and publish that.

25
00:01:39,380 --> 00:01:42,350
We can view it on the front end by using this permalink here.

26
00:01:44,680 --> 00:01:45,070
OK.

27
00:01:45,130 --> 00:01:50,710
And before we add a link that points towards this new page up in the header, why don't we first go

28
00:01:50,710 --> 00:01:55,660
create a unique page template in our theme folder to power this screen?

29
00:01:55,930 --> 00:01:59,140
Because right now it's powered by page dot BHP.

30
00:01:59,440 --> 00:02:05,050
But we know that we are going to need custom code here to allow users to manage their notes.

31
00:02:05,500 --> 00:02:12,460
So over in our text editor, just in the root of our theme folder, let's create a brand new file and

32
00:02:12,460 --> 00:02:15,160
let's name it Page Dash.

33
00:02:15,640 --> 00:02:23,290
And then we just want a perfectly matched the slug of the new page, which was my dash notes and then

34
00:02:23,290 --> 00:02:24,790
dot p HP.

35
00:02:26,300 --> 00:02:26,600
OK.

36
00:02:26,660 --> 00:02:33,200
And in order to save a ton of typing, why don't we just copy and paste everything from Page Dot BHP

37
00:02:33,590 --> 00:02:36,860
as a starter template and then customize it as necessary?

38
00:02:37,580 --> 00:02:43,280
So in page, let's just copy everything into our clipboard and then back in our brand new file.

39
00:02:43,280 --> 00:02:44,090
Paste it in.

40
00:02:44,630 --> 00:02:50,060
And then let's scroll up to the very top and we can actually get rid of most of this code.

41
00:02:50,450 --> 00:02:53,540
So we want to keep this div with a class of container.

42
00:02:53,960 --> 00:02:58,850
But right below it, let's start deleting from the beginning of this BHP block here.

43
00:02:59,180 --> 00:03:01,430
And let's just select all the way down.

44
00:03:03,240 --> 00:03:08,280
To include this d'Hiv with a class of generic content, let's just delete all of that.

45
00:03:08,610 --> 00:03:10,050
So all that we are left with.

46
00:03:10,350 --> 00:03:11,340
Let me indent here.

47
00:03:12,010 --> 00:03:16,350
All that we are left with is the generic header code, generic footer code.

48
00:03:16,680 --> 00:03:19,680
And this one, empty div with a class of container.

49
00:03:20,340 --> 00:03:26,220
So within it, just as a temporary place holder, you can say custom code will go here.

50
00:03:27,030 --> 00:03:29,790
And then if we give that a save and refresh.

51
00:03:30,720 --> 00:03:31,320
Perfect.

52
00:03:32,010 --> 00:03:32,310
OK.

53
00:03:32,370 --> 00:03:38,700
Now before we actually build out the user interface for the My Notes feature, why don't we first create

54
00:03:38,760 --> 00:03:42,140
a link to this new page up in our header navigation.

55
00:03:42,690 --> 00:03:48,180
Let's set things up so that if you're not logged in, you do not see a link to my notes.

56
00:03:48,360 --> 00:03:54,660
But once you are logged in, maybe directly to the left of the log out button, we can have a light

57
00:03:54,720 --> 00:03:57,000
orange button named my notes.

58
00:03:57,390 --> 00:04:05,760
So to make that happen back in our editor, let's jump in to header dot BHP and let's scroll down to

59
00:04:05,760 --> 00:04:06,330
the bottom.

60
00:04:06,930 --> 00:04:09,040
Remember, we've got this if statement here.

61
00:04:09,060 --> 00:04:12,060
So if someone is logged in, they see this.

62
00:04:12,720 --> 00:04:15,210
If someone is not logged in, they see this.

63
00:04:15,660 --> 00:04:18,030
So we want to add new code to this section.

64
00:04:18,060 --> 00:04:24,720
But why don't we go ahead and use the light orange log in button as a template so we can just copy that.

65
00:04:26,370 --> 00:04:32,200
And then up in this block for logged in users, let's just add a new line and paste in our clipboard.

66
00:04:32,640 --> 00:04:34,410
And within this code that we just pasted.

67
00:04:34,440 --> 00:04:41,400
Let's change the word log in to say my notes and then let's just update the ATRA value.

68
00:04:41,790 --> 00:04:44,580
So we'll keep the P p block and keep the echo.

69
00:04:45,390 --> 00:04:47,730
But let's delete this WP logging.

70
00:04:47,730 --> 00:04:58,340
You are L and instead let's say site you are L and just point someone towards slash my notes.

71
00:04:59,020 --> 00:04:59,240
OK.

72
00:04:59,320 --> 00:05:03,450
And remember to keep things extra secure, you can wrap this within escape.

73
00:05:03,510 --> 00:05:08,490
You are well open parentheses here.

74
00:05:08,760 --> 00:05:11,100
Close the sandwich of parentheses here.

75
00:05:11,780 --> 00:05:11,990
OK.

76
00:05:12,060 --> 00:05:13,200
Let's give that a save.

77
00:05:14,890 --> 00:05:15,400
Perfect.

78
00:05:15,460 --> 00:05:20,910
So if I go back to the home page now, I can get back to the my notes screen by clicking up here.

79
00:05:22,660 --> 00:05:28,480
But if someone visits our Web site and they are not logged in like we see in this private window here,

80
00:05:28,780 --> 00:05:32,350
they don't see the my notes button, they just see a log in button.

81
00:05:32,800 --> 00:05:33,280
Cool.

82
00:05:33,310 --> 00:05:42,100
But what if a logged out user just goes right up to the address bar and manually types in my notes?

83
00:05:43,360 --> 00:05:49,720
Well, since this page is going to contain data that's specific to a logging user, it doesn't make

84
00:05:49,720 --> 00:05:53,410
sense for a logged out user to even be able to visit this.

85
00:05:53,410 --> 00:05:54,050
You are.

86
00:05:54,700 --> 00:06:01,420
So right now, let's go right a bit of code in our new page template so that if a visitor is not logged

87
00:06:01,420 --> 00:06:04,450
in, we just redirect them to the home page.

88
00:06:04,870 --> 00:06:10,030
So to do that, back in our text editor, back in our page, my notes template.

89
00:06:10,720 --> 00:06:12,130
Up at the very top here.

90
00:06:12,160 --> 00:06:14,410
Let's just write a new if statement.

91
00:06:14,980 --> 00:06:25,390
So if parentheses, curly brackets and for the condition check, let's say, is user logged in, which

92
00:06:25,390 --> 00:06:28,330
is a function, so it gets its own set of parentheses.

93
00:06:28,660 --> 00:06:31,660
So this will return true if a user is logged in.

94
00:06:31,810 --> 00:06:37,060
But if we want to check for the opposite of that, we can just begin with an exclamation point.

95
00:06:37,480 --> 00:06:42,100
So now if a user is not logged in, this will evaluate to true.

96
00:06:42,760 --> 00:06:45,400
And if that's the case, let's just redirect them.

97
00:06:46,060 --> 00:06:51,400
So WP redirect within these parentheses.

98
00:06:51,400 --> 00:06:53,440
Where do we want to redirect them to.

99
00:06:54,010 --> 00:06:55,090
Let's just say site.

100
00:06:55,120 --> 00:06:55,940
You are URL.

101
00:06:56,590 --> 00:06:59,500
Send them back to the home page or just a slash.

102
00:06:59,830 --> 00:07:03,130
And then if you wanted to you could wrap this within escape.

103
00:07:03,160 --> 00:07:03,940
You are URL.

104
00:07:08,480 --> 00:07:08,710
OK.

105
00:07:08,810 --> 00:07:15,200
Now, after this redirect line, we want to be sure to run exit so that once it performs the redirect,

106
00:07:15,260 --> 00:07:18,980
it can stop and rest and not use server resources.

107
00:07:19,430 --> 00:07:19,640
All right.

108
00:07:19,670 --> 00:07:21,920
Let's go ahead and save that and test it out.

109
00:07:21,950 --> 00:07:28,910
So in the window where I'm not logged in, you can see it automatically redirected me to the home page.

110
00:07:28,970 --> 00:07:33,710
So if I go to my notes manually, it just kicks me back to the home page.

111
00:07:33,980 --> 00:07:38,270
So with that in place, let's jump back into the window where we are logged in.

112
00:07:38,720 --> 00:07:45,470
And now let's ask ourselves the question, where are we actually going to save the notes that we create?

113
00:07:45,950 --> 00:07:49,330
Well, we want to save them into the WordPress database.

114
00:07:49,370 --> 00:07:54,750
So why don't we just create a new custom post type and name it note?

115
00:07:55,220 --> 00:07:56,870
So we've been through this before.

116
00:07:57,110 --> 00:08:00,650
We know exactly how to create a new custom post type.

117
00:08:01,070 --> 00:08:08,420
Jump over to your text editor and instead of your theme folder, look within your must use or MCU plugins

118
00:08:08,420 --> 00:08:09,140
folder.

119
00:08:09,590 --> 00:08:14,840
And within this file where we've registered all of our other custom post types, why don't we scroll

120
00:08:14,840 --> 00:08:16,130
down to the very bottom?

121
00:08:17,030 --> 00:08:22,910
And in order to save a bunch of extra typing, I'm just going to copy and paste the professor post type

122
00:08:22,910 --> 00:08:24,230
and use it as a template.

123
00:08:24,950 --> 00:08:25,760
So copy.

124
00:08:25,790 --> 00:08:26,770
And then right below it.

125
00:08:26,810 --> 00:08:27,680
Paste it in.

126
00:08:28,940 --> 00:08:29,190
All right.

127
00:08:29,240 --> 00:08:32,780
Let's update the comment to note post type.

128
00:08:33,170 --> 00:08:38,240
Let's change the short name or variable name for the post type two note.

129
00:08:38,780 --> 00:08:39,010
OK.

130
00:08:39,080 --> 00:08:41,870
Then let's go through each of these properties one by one.

131
00:08:42,290 --> 00:08:44,720
So for starters, show in rest.

132
00:08:44,960 --> 00:08:50,990
We definitely want that so that we can work with the custom post type from the rest API.

133
00:08:51,350 --> 00:08:56,820
So make sure that you've got show in rest equals true for supports.

134
00:08:56,930 --> 00:09:02,880
Let's keep title an editor, but we do not need thumbnail for public.

135
00:09:02,930 --> 00:09:11,000
Let's be sure to set this to false because we want our notes to be private and specific to each user

136
00:09:11,000 --> 00:09:11,600
account.

137
00:09:11,840 --> 00:09:16,880
We don't want a note post to show up in public queries or in search results.

138
00:09:17,330 --> 00:09:20,090
So setting public defaults will take care of that.

139
00:09:20,480 --> 00:09:26,060
However, public false will also hide the post type in the admin dashboard.

140
00:09:26,450 --> 00:09:34,160
So to get the best of both worlds on a new line, we can say show UI equals true.

141
00:09:34,940 --> 00:09:36,680
I know this name is a bit confusing.

142
00:09:36,740 --> 00:09:41,900
It would be more intuitive if it read show in the admen dashboard UI.

143
00:09:42,320 --> 00:09:42,500
OK.

144
00:09:42,610 --> 00:09:44,690
Next, let's update our labels.

145
00:09:44,990 --> 00:09:49,190
So I'm just going to select the base word of Professor Leave off the S.

146
00:09:49,610 --> 00:09:56,270
And then remember you can press command or control D if you're using the Adam text editor or sublime

147
00:09:56,270 --> 00:09:56,870
text.

148
00:09:57,320 --> 00:09:59,600
And that will select the next instance.

149
00:09:59,930 --> 00:10:01,010
And then you can just type.

150
00:10:01,070 --> 00:10:03,440
And it will modify all of them at once.

151
00:10:04,160 --> 00:10:04,520
OK.

152
00:10:04,580 --> 00:10:10,790
And then finally, let's choose a unique icon that will be used in the Admon dashboard for this post

153
00:10:10,790 --> 00:10:11,230
type.

154
00:10:11,690 --> 00:10:15,050
Let's keep Dasch icons welcome, but let's delete the.

155
00:10:15,110 --> 00:10:16,010
Learn more.

156
00:10:16,470 --> 00:10:18,380
Now let's say Dash Yukon's dash.

157
00:10:18,380 --> 00:10:19,910
Welcome Dash.

158
00:10:20,500 --> 00:10:22,030
Right blog.

159
00:10:22,640 --> 00:10:25,760
And this should give us an icon that looks like you're writing a note.

160
00:10:26,090 --> 00:10:26,250
OK.

161
00:10:26,300 --> 00:10:28,170
So let's go ahead and say this.

162
00:10:28,640 --> 00:10:31,010
And then back in the Admon dashboard.

163
00:10:33,380 --> 00:10:33,650
Cool.

164
00:10:33,680 --> 00:10:35,370
There is our new custom post.

165
00:10:35,390 --> 00:10:36,560
Type notes.

166
00:10:37,250 --> 00:10:43,190
Now, I do want to point out that as of this moment, subscriber accounts cannot create a note.

167
00:10:43,700 --> 00:10:48,160
And this is because we have not setup custom permissions for the post type yet.

168
00:10:48,530 --> 00:10:50,720
Don't worry, we will get to that shortly.

169
00:10:50,750 --> 00:10:54,790
But for now, make sure that you're signed in with your admen account.

170
00:10:55,220 --> 00:11:01,880
And let's get things up and running before we worry about giving subscriber accounts the necessary permissions.

171
00:11:02,360 --> 00:11:02,600
OK.

172
00:11:02,660 --> 00:11:09,080
Now, before we learn how to create a note post from the front end of our Web site before we do that,

173
00:11:09,080 --> 00:11:14,160
why don't we cheat a bit and create a note or two from the admin back end?

174
00:11:14,660 --> 00:11:17,110
So under notes, I will say add new.

175
00:11:17,690 --> 00:11:22,530
I will give it a title of biology, lecture number four.

176
00:11:22,880 --> 00:11:30,140
And for the body, let's just say I learned 5000 amazing things in class today.

177
00:11:30,980 --> 00:11:34,910
This was the best biology lecture ever.

178
00:11:35,990 --> 00:11:37,660
Kevin, let's go ahead and save that.

179
00:11:38,990 --> 00:11:42,650
And just for good measure, why don't we create a second dummy post?

180
00:11:42,710 --> 00:11:44,300
So click add new again.

181
00:11:45,080 --> 00:11:51,540
Let's say math lecture number one, math class was great.

182
00:11:51,560 --> 00:12:01,400
Today I learned that two plus two equals four and I got an A plus on my test.

183
00:12:02,510 --> 00:12:04,260
Go ahead and save that, OK.

184
00:12:04,340 --> 00:12:11,870
And now back on the front end of our Web site within the my notes page, let's create each TMF form

185
00:12:11,900 --> 00:12:18,200
elements right about here that would let the user make edits to those existing notes of theirs.

186
00:12:18,620 --> 00:12:19,820
Let me show you what I mean.

187
00:12:19,940 --> 00:12:25,940
So back in our text editor for now, let's forget about the Ammu Plugins folder and jumped back to our

188
00:12:25,940 --> 00:12:27,080
theme folder.

189
00:12:27,530 --> 00:12:30,960
And I want you to jump in to the page, my notes template.

190
00:12:31,730 --> 00:12:32,060
OK.

191
00:12:32,120 --> 00:12:38,060
And remember, we've got this container, Dave, where at the moment it just says custom code will go

192
00:12:38,060 --> 00:12:38,460
here.

193
00:12:38,870 --> 00:12:44,450
So let's delete that and instead create an unordered list element.

194
00:12:45,440 --> 00:12:45,710
OK.

195
00:12:45,770 --> 00:12:49,220
And on the opening, you all tag just for styling reasons.

196
00:12:49,250 --> 00:12:55,340
Let's give it a class of men list as well as link list.

197
00:12:56,210 --> 00:13:01,820
And while we're at it, why don't we also give this element an I.D. so that we can easily select it

198
00:13:01,820 --> 00:13:04,130
with our JavaScript code later on?

199
00:13:04,640 --> 00:13:07,850
Let's give it an idea of my notes.

200
00:13:08,420 --> 00:13:08,830
All right.

201
00:13:08,870 --> 00:13:15,410
Then within the unordered list, we want to create one list item for each note post.

202
00:13:15,770 --> 00:13:20,840
So let's query the WordPress database to retrieve any relevant note posts.

203
00:13:21,290 --> 00:13:31,460
So drop into BHP and let's create a variable and name it user notes and set it equal.

204
00:13:31,490 --> 00:13:34,580
A new instance of WP query.

205
00:13:35,270 --> 00:13:35,450
Right.

206
00:13:35,510 --> 00:13:40,970
This is how we can ask the database for only the exact posts that we're interested in.

207
00:13:41,420 --> 00:13:44,510
So within these parentheses, let's create an array.

208
00:13:44,930 --> 00:13:47,600
And this is where we spell out what we're looking for.

209
00:13:47,990 --> 00:13:50,960
So first of all, we only want a certain post type.

210
00:13:51,560 --> 00:13:54,710
So let's set post type two equal note.

211
00:13:55,100 --> 00:13:55,400
OK.

212
00:13:55,460 --> 00:13:59,730
And then we want to gather all nodes, not just the most recent 10.

213
00:14:00,230 --> 00:14:06,540
So let's say posts per page equals negative one.

214
00:14:06,560 --> 00:14:08,180
To give us all of them.

215
00:14:08,630 --> 00:14:16,790
And then finally, and most importantly, let's be sure to set author to only give us posts that were

216
00:14:16,790 --> 00:14:19,970
created by the currently logged in user.

217
00:14:20,480 --> 00:14:27,080
So we can just say get current user I.D., which is a function.

218
00:14:27,470 --> 00:14:27,810
Cool.

219
00:14:27,830 --> 00:14:31,190
And this is the line that makes things user specific.

220
00:14:31,520 --> 00:14:38,240
So now that we've got this collection of posts named user notes, we just want to loop through the collection

221
00:14:38,300 --> 00:14:39,560
and display each one.

222
00:14:39,920 --> 00:14:45,740
So right after this semicolon, let's just add a new line and let's create a while loop.

223
00:14:45,830 --> 00:14:54,070
So while parentheses curly brackets and for the condition, we'll say while user notes.

224
00:14:54,560 --> 00:14:56,240
And then we can just look inside it.

225
00:14:56,720 --> 00:14:59,210
And as long as have posts.

226
00:14:59,240 --> 00:14:59,810
Returns.

227
00:14:59,810 --> 00:15:00,380
True.

228
00:15:00,770 --> 00:15:01,760
Keep on looping.

229
00:15:02,480 --> 00:15:02,690
OK.

230
00:15:02,750 --> 00:15:09,800
Then within the loop the first thing we want to do is call user notes that post to get the relevant

231
00:15:09,800 --> 00:15:13,190
data ready for that particular post that's been looped through.

232
00:15:13,640 --> 00:15:20,300
And now after this, I want to write out a bit of H.T. demo so I can just drop out of P HP here.

233
00:15:21,140 --> 00:15:25,640
And then right before the closing curly bracket, we can jump back into P HP.

234
00:15:26,810 --> 00:15:30,360
And now in between these two lines, we can write HDMI out.

235
00:15:31,010 --> 00:15:32,660
So let's just create a list.

236
00:15:32,790 --> 00:15:35,410
Item for each note post.

237
00:15:35,970 --> 00:15:39,090
And within the list item, let's create two elements.

238
00:15:39,780 --> 00:15:41,850
First, let's create an input.

239
00:15:42,570 --> 00:15:45,270
And then below that, let's create a text area.

240
00:15:46,310 --> 00:15:52,410
OK, we're going to use the input to display the title of each post, and we can use the text area to

241
00:15:52,410 --> 00:15:54,450
display the main body content.

242
00:15:54,930 --> 00:16:03,390
So on the input, let's say value equals and then let's drop into P HP to go fetch the title.

243
00:16:03,750 --> 00:16:08,940
So let's echo out the results of get the title.

244
00:16:09,840 --> 00:16:13,320
And just to keep things extra secure in WordPress.

245
00:16:13,380 --> 00:16:20,370
Whenever you're using information from the database as the value for an H t Amelle attribute, you want

246
00:16:20,370 --> 00:16:26,880
to wrap it within a function named Escape a TTR, which is short for an attribute.

247
00:16:27,630 --> 00:16:30,660
So then I will close out the parentheses san, which right here.

248
00:16:31,290 --> 00:16:31,530
OK.

249
00:16:31,580 --> 00:16:35,760
And then let's do the same thing for the body field or the main content.

250
00:16:36,390 --> 00:16:38,660
So in between the text area sandwich.

251
00:16:38,730 --> 00:16:46,230
Let's drop in to BHP and let's echo out, get the content.

252
00:16:46,800 --> 00:16:52,080
And again, we want to escape this using a escape attribute.

253
00:16:54,060 --> 00:16:54,420
Cool.

254
00:16:54,450 --> 00:17:00,690
Now, before we save this and see what it looks like, let's give each of these elements a class just

255
00:17:00,690 --> 00:17:03,720
for CSX styling and design reasons.

256
00:17:04,140 --> 00:17:17,360
Let's give the input a class of note title field and let's give the text area a class of note body field.

257
00:17:18,600 --> 00:17:18,870
OK.

258
00:17:18,930 --> 00:17:21,810
Now let's go ahead and save this cool.

259
00:17:21,840 --> 00:17:26,280
We see our two note posts, math lecture and biology lecture.

260
00:17:26,730 --> 00:17:34,290
However, in the content we see P four paragraph h t AML tags as well as WordPress comments.

261
00:17:34,770 --> 00:17:39,300
Let me show you what we can do to get rid of those on that text area element.

262
00:17:39,660 --> 00:17:43,650
When we are outputting the value inside these parentheses.

263
00:17:43,680 --> 00:17:47,250
So right before the letter G, forget the content we can use.

264
00:17:47,250 --> 00:17:58,350
Another WordPress function named WP underscore strip, underscore all underscore tags, opening parentheses

265
00:17:58,350 --> 00:18:02,730
and then be sure to add a closing parentheses right here.

266
00:18:03,750 --> 00:18:06,480
Now if we save that back in the browser.

267
00:18:06,840 --> 00:18:07,380
Perfect.

268
00:18:07,590 --> 00:18:16,410
Next, why don't we add to UI buttons right about here and here that read, edit, note and delete note.

269
00:18:16,980 --> 00:18:22,050
So back in our code in between our input and text area elements.

270
00:18:22,080 --> 00:18:28,380
Let's add a new line and create a span element within the span, let's say.

271
00:18:28,470 --> 00:18:31,230
Edit just for CSF reasons.

272
00:18:31,260 --> 00:18:36,630
Let's give it a class of edit note and right before the word edit.

273
00:18:36,690 --> 00:18:38,640
Why don't we include an icon.

274
00:18:38,970 --> 00:18:40,860
So since we're using font, awesome.

275
00:18:40,920 --> 00:18:46,050
We can just create an eye tag or AI element and give the opening.

276
00:18:46,120 --> 00:18:56,640
I tag a class of F.A.A. for font awesome as well as F.A.A. dash pencil for a nice edit looking icon

277
00:18:57,270 --> 00:18:59,040
still within the opening eye tag.

278
00:18:59,070 --> 00:19:04,080
Let's also say area hidden equals true.

279
00:19:04,420 --> 00:19:04,560
OK.

280
00:19:04,650 --> 00:19:06,420
So this gives us an edit button.

281
00:19:06,660 --> 00:19:09,270
Now why don't we just copy and paste this span.

282
00:19:10,140 --> 00:19:12,510
And then right below it pasted into duplicate it.

283
00:19:12,930 --> 00:19:15,300
And let's make the second one the delete button.

284
00:19:15,930 --> 00:19:19,440
So change the word edit to delete.

285
00:19:20,010 --> 00:19:23,830
And then let's change the class to delete note.

286
00:19:24,900 --> 00:19:27,300
And instead of F.A.A. dash pencil.

287
00:19:27,300 --> 00:19:31,070
Let's say F.A.A. dash trash dash.

288
00:19:31,260 --> 00:19:31,770
Oh.

289
00:19:32,250 --> 00:19:32,460
OK.

290
00:19:32,550 --> 00:19:34,640
Now if I save that cool.

291
00:19:34,680 --> 00:19:37,200
Now we have these edit and delete buttons.

292
00:19:37,710 --> 00:19:42,540
Now at the moment you can click these buttons all day long and nothing will happen.

293
00:19:42,990 --> 00:19:50,670
So our goal now is to hook all of this up to the WordPress rest API so that we can actually manipulate

294
00:19:50,730 --> 00:19:54,080
our post content from the front end of our Web site.

295
00:19:54,540 --> 00:19:58,920
And that's exactly what we're going to learn how to do in our very next lesson.
