WEBVTT
1
00:00:02.190 --> 00:00:03.090
Hello, everyone.

2
00:00:03.390 --> 00:00:09.150
In this lesson, we're going to create our first plug in now before we worry about making our plug in,

3
00:00:09.150 --> 00:00:12.790
do anything that's actually useful or complex.

4
00:00:13.260 --> 00:00:19.360
Let's first just learn the basics of how and where to create a plug in in the first place.

5
00:00:19.800 --> 00:00:27.150
So in this video, let's imagine our goal is to create a plug in that dynamically adds an extra sentence

6
00:00:27.510 --> 00:00:30.390
at the end of a blog post detail screen.

7
00:00:30.420 --> 00:00:38.580
So if I go into this single post, so imagine we want our plug in to dynamically add an extra sentence

8
00:00:38.580 --> 00:00:40.530
at the end of a blog post.

9
00:00:40.770 --> 00:00:42.760
That's our goal in this video.

10
00:00:43.140 --> 00:00:48.600
OK, and then once we're familiar with just creating a super basic plug in, then we can learn how to

11
00:00:48.600 --> 00:00:50.730
do actually useful things.

12
00:00:51.150 --> 00:00:52.100
So do this with me.

13
00:00:52.110 --> 00:00:55.530
Let's go create a new folder for a new plug in.

14
00:00:56.430 --> 00:01:01.840
At this point in the course, you know how to find the folder with your WordPress installation in it.

15
00:01:02.550 --> 00:01:06.030
So this would be where there's the folder called WP content.

16
00:01:06.330 --> 00:01:11.970
Let's look inside WP content and then there will be a folder named plug ins.

17
00:01:11.970 --> 00:01:18.420
Let's go inside the plug ins folder, OK, and then just create a brand new folder for this plug in

18
00:01:18.420 --> 00:01:20.640
that we're about to create a new folder.

19
00:01:20.880 --> 00:01:27.090
You can name it whatever you'd like, but give it a unique name that you don't think any other plugin

20
00:01:27.090 --> 00:01:28.660
has ever used before.

21
00:01:29.160 --> 00:01:34.080
So, for example, I will name it our first unique plug in.

22
00:01:34.890 --> 00:01:39.960
OK, then go ahead and open this up in voice code or your text editor of Choice.

23
00:01:40.860 --> 00:01:44.490
Next, let's create a new file in this folder.

24
00:01:44.760 --> 00:01:48.060
You can name this file after the folder name for your plug in.

25
00:01:48.070 --> 00:01:56.670
So, for example, you could call it our first unique plug in dot p, but it will also work if you just

26
00:01:56.670 --> 00:02:01.650
name this just about anything, you could name it, test B, but just as a best practice, you could

27
00:02:01.650 --> 00:02:04.310
give it a relevant name to your plug in folder as well.

28
00:02:04.920 --> 00:02:06.000
So that's what I'll go with.

29
00:02:06.300 --> 00:02:09.270
Now inside this file, let's open up.

30
00:02:10.950 --> 00:02:18.090
And then right after that opening line, let's jump into a comment so forward slash asterisk and then

31
00:02:18.090 --> 00:02:22.560
down on a new line, you can close out of the comment with asterisk forward slash.

32
00:02:22.950 --> 00:02:28.710
Now, in between that right about here, we can just start giving WordPress a little bit of info about

33
00:02:28.710 --> 00:02:35.550
our plugin so we can say plug in name Colen and then you can name it whatever you want.

34
00:02:35.850 --> 00:02:38.490
Let's call it our test plug in.

35
00:02:39.030 --> 00:02:44.720
Now, while this can be whatever you want, this does need to be exactly plug in name, right.

36
00:02:44.730 --> 00:02:47.400
This is an attribute that WordPress is looking for.

37
00:02:47.970 --> 00:02:54.060
We can also give it a quick description, a truly amazing plug in.

38
00:02:54.840 --> 00:02:58.410
We can say that its version lets go with 1.0.

39
00:02:58.950 --> 00:03:00.690
We can say who the author is.

40
00:03:01.560 --> 00:03:09.180
You can add a link to your website or the plug ins website by saying author you r.i calling and then

41
00:03:09.180 --> 00:03:11.040
just paste in a U rl.

42
00:03:11.670 --> 00:03:15.450
OK, and for now that's all of the properties that we need in the future.

43
00:03:15.450 --> 00:03:20.490
We'll learn about how to make our plugin easy to translate into other languages.

44
00:03:20.700 --> 00:03:26.880
And when we get to that, we will circle back and add a few additional properties in this comment section.

45
00:03:27.090 --> 00:03:30.000
For now though, let's just go ahead and save this file.

46
00:03:30.810 --> 00:03:34.710
And then back in WordPress if we go into the admin dashboard.

47
00:03:35.750 --> 00:03:38.810
And then in the sidebar, look for plug ins.

48
00:03:40.140 --> 00:03:47.100
Well, now in this list of plug ins, we see our test plug in and there's the description, there's

49
00:03:47.100 --> 00:03:49.020
the version number and there's the author.

50
00:03:49.470 --> 00:03:54.090
So just like any other plug in, let's go ahead and activate it.

51
00:03:55.520 --> 00:04:02.600
Now, we activated our plug in, but our plug in doesn't do anything yet, so let's actually add a bit

52
00:04:02.600 --> 00:04:03.960
of useful code now.

53
00:04:04.370 --> 00:04:11.330
So remember, in this video, we just want to dynamically add a sentence to the very end of a blog post

54
00:04:11.840 --> 00:04:14.590
for the permalink or single view of posts.

55
00:04:15.200 --> 00:04:17.990
So here's how we can do that right below this.

56
00:04:17.990 --> 00:04:19.460
Let's add a filter.

57
00:04:19.580 --> 00:04:21.800
So add filter.

58
00:04:22.610 --> 00:04:27.860
Be sure to have a semicolon after we call that, and then we're just going to give it to arguments here.

59
00:04:27.860 --> 00:04:29.770
So A comma, B as placeholders.

60
00:04:30.050 --> 00:04:37.610
The first argument instead of this a placeholder would be quotes, the underscore content.

61
00:04:38.240 --> 00:04:42.440
WordPress has all sorts of different filters that we can hook on to.

62
00:04:42.950 --> 00:04:44.480
This one is aptly named.

63
00:04:44.480 --> 00:04:46.340
I think you can guess what it's going to do.

64
00:04:46.340 --> 00:04:50.480
It's going to allow us to filter or change the content for a post.

65
00:04:50.840 --> 00:04:53.630
So for the second argument, we just give it a function.

66
00:04:54.060 --> 00:04:59.390
You could include an inline or anonymous function here, but instead just to stay organized right below

67
00:04:59.390 --> 00:05:03.280
this, we could create a named function, give it whatever name you want.

68
00:05:03.290 --> 00:05:10.640
Let's go with ADD to end of post parentheses curly brackets.

69
00:05:10.790 --> 00:05:16.640
Now, a quick note that I want to add about function names here is that you do want to choose function

70
00:05:16.640 --> 00:05:21.900
names that won't conflict with other plug ins or even the core of WordPress itself.

71
00:05:22.310 --> 00:05:24.890
So for right now, be sure to choose a unique name.

72
00:05:24.920 --> 00:05:32.510
However, I do want to let you know that in a future lesson I will show you how to use classes in PHP,

73
00:05:32.750 --> 00:05:38.810
and this will allow us to avoid that issue of having to choose super unique function names.

74
00:05:39.260 --> 00:05:41.570
But we need to learn how to walk before we can run.

75
00:05:41.570 --> 00:05:42.890
So we'll get to that later.

76
00:05:43.430 --> 00:05:45.470
Anyways, for now, let's adjust this line.

77
00:05:45.470 --> 00:05:49.670
So instead of B, we would just give it a reference to our functions of quotes.

78
00:05:50.040 --> 00:05:54.290
I named it add to end of post.

79
00:05:54.530 --> 00:05:56.090
You might have named it something different.

80
00:05:56.090 --> 00:05:57.440
Just make sure it lines up.

81
00:05:57.770 --> 00:06:02.450
OK, now in our function definition, in these parentheses, we do want to receive a parameter.

82
00:06:02.450 --> 00:06:05.240
So let's say a dollar sign content.

83
00:06:05.810 --> 00:06:12.350
Now inside the body of this function, we can use the incoming content and we can use that to create

84
00:06:12.350 --> 00:06:14.720
a new string of text that we return.

85
00:06:15.540 --> 00:06:18.470
So, for example, return now.

86
00:06:18.470 --> 00:06:23.150
We don't want to return just literally the exact same version of the blog post content.

87
00:06:23.390 --> 00:06:30.320
Instead, we would want to return that plus so we could use a period to concatenate on something else.

88
00:06:30.830 --> 00:06:32.990
And let's just add on a string of text.

89
00:06:32.990 --> 00:06:41.690
So quotes and maybe let's add on an HTML paragraph that says My name is Brad and you could use your

90
00:06:41.690 --> 00:06:42.040
name.

91
00:06:42.440 --> 00:06:44.420
Let's give this a save and test it out.

92
00:06:44.420 --> 00:06:51.890
So if I go back to the front end of my site and view a blog post, details screen cool down at the bottom

93
00:06:51.890 --> 00:06:53.540
we see my name is Brad.

94
00:06:53.930 --> 00:06:59.720
Now, just to make it clear how this is working, if you removed dollar sign content and the dot here

95
00:06:59.720 --> 00:07:04.390
and you just returned that string of text, that's all you would see.

96
00:07:05.360 --> 00:07:10.640
So the idea's content is the content that's actually being stored in the database for that real blog

97
00:07:10.640 --> 00:07:11.150
post.

98
00:07:11.420 --> 00:07:16.760
And then you can use that to create whatever string you want to create and then you just return that

99
00:07:16.760 --> 00:07:17.480
as a whole.

100
00:07:17.480 --> 00:07:24.710
And that's what WordPress is going to use when your front end template calls the content and you put

101
00:07:24.710 --> 00:07:26.420
that back refresh.

102
00:07:26.780 --> 00:07:27.160
Cool.

103
00:07:27.770 --> 00:07:33.740
One last thing that I do want to cover in this video is what if we only wanted to add this extra sentence

104
00:07:34.040 --> 00:07:36.890
on a detail view for a blog post?

105
00:07:37.070 --> 00:07:43.220
For example, if you had other pages that use the content to display the content, maybe you don't want

106
00:07:43.220 --> 00:07:45.160
to use this filter everywhere.

107
00:07:45.710 --> 00:07:50.660
So a common technique here would just be to wrap this line within an if statement.

108
00:07:50.990 --> 00:07:52.670
So within our function, here's what I would do.

109
00:07:52.670 --> 00:07:55.970
Take this return line and cut it into your clipboard.

110
00:07:56.660 --> 00:07:58.520
And then I would just write an if statement.

111
00:07:58.520 --> 00:08:02.690
I would say if parentheses curly brackets for the condition.

112
00:08:02.690 --> 00:08:13.160
I would say if is underscore single parentheses to call it, and so double ampersand and only if this

113
00:08:13.160 --> 00:08:14.330
is the main query.

114
00:08:14.330 --> 00:08:18.250
So is main query parentheses to call that.

115
00:08:18.710 --> 00:08:26.030
So this is just my way of saying only if you're on a single screen for a post and only if it's the main

116
00:08:26.030 --> 00:08:32.570
query, because sometimes a template might load or loop through other secondary posts, maybe down in

117
00:08:32.570 --> 00:08:34.070
the footer or in the sidebar.

118
00:08:34.070 --> 00:08:37.550
So this is just saying only for the main or primary post for this U.

119
00:08:37.550 --> 00:08:43.970
RL So in the if block you could just paste back in your clipboard and then if this is not true, we

120
00:08:43.970 --> 00:08:47.510
would just want to return content without manipulating it at all.

121
00:08:48.590 --> 00:08:51.380
Now we don't even really need an else block here.

122
00:08:51.680 --> 00:08:54.650
A function will end as soon as you return something.

123
00:08:54.720 --> 00:09:01.020
So if this is true, this will end from this return, so then below this if statement, we can just

124
00:09:01.290 --> 00:09:04.500
return dollars and content, right?

125
00:09:04.540 --> 00:09:10.440
If this is not the case, so we can go ahead and save that and it's going to work just the same if you

126
00:09:10.440 --> 00:09:15.450
really want it to be able to test things to see if that conditional logic is working, you could try

127
00:09:15.450 --> 00:09:22.590
instead of is single is page so is single, will work for any detail screen for any post type except

128
00:09:22.590 --> 00:09:23.910
for page and attachment.

129
00:09:23.920 --> 00:09:26.950
So if I say is page, this is going to be false.

130
00:09:26.970 --> 00:09:30.600
So if I refresh, we no longer see the bonus sentence.

131
00:09:30.600 --> 00:09:33.810
But if you went to a individual page.

132
00:09:33.810 --> 00:09:34.000
Right.

133
00:09:34.020 --> 00:09:38.270
So if I went to the about us page now we do see my name is Brad.

134
00:09:38.910 --> 00:09:39.380
Cool.

135
00:09:39.390 --> 00:09:47.820
So really that's all a plug in is you're leveraging the different action hooks and filter hooks that

136
00:09:47.850 --> 00:09:49.950
WordPress makes available to us.

137
00:09:50.460 --> 00:09:56.520
Trust me, there are so many different actions and filters that we can leverage, that you can customize

138
00:09:56.520 --> 00:09:59.850
WordPress in just about any way you can imagine.

139
00:10:00.480 --> 00:10:03.990
This was just a quick example to get your first plug in up and running.

140
00:10:03.990 --> 00:10:09.180
But now that we're familiar with these basics, we can try to do something more useful.

141
00:10:09.570 --> 00:10:17.580
So in our very next lesson, let's begin building the post statistics or word count plug in.

142
00:10:18.060 --> 00:10:18.300
Right.

143
00:10:18.300 --> 00:10:23.040
We saw this in the previous video where it shows you how many words the current post has, how many

144
00:10:23.040 --> 00:10:26.910
characters it has, and about how long it will take to read.

145
00:10:27.240 --> 00:10:32.460
I think building something a bit more useful in real world like this should be a lot of fun and should

146
00:10:32.460 --> 00:10:34.050
be a great learning experience.

147
00:10:34.390 --> 00:10:36.690
Let's keep things rolling and I'll see you then.
