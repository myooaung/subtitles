1
00:00:01,460 --> 00:00:02,480
Hello, everyone.

2
00:00:02,810 --> 00:00:10,400
In this lesson, we will learn how to display relationships between posts on the front end of our website.

3
00:00:10,700 --> 00:00:14,930
So for an example, here we see the Science of Cats event.

4
00:00:15,150 --> 00:00:20,570
And if I click on it and then use the edit event button up here towards the top menu bar.

5
00:00:22,410 --> 00:00:29,520
You'll remember that we used this new custom field related programs to create a relationship between

6
00:00:29,700 --> 00:00:34,650
the biology program and this current Science of Cats event.

7
00:00:34,890 --> 00:00:40,950
So the question is, now that we've saved that relationship value into this field and into the database,

8
00:00:41,400 --> 00:00:45,440
how do we actually display that relationship on the front end?

9
00:00:45,810 --> 00:00:46,050
Right.

10
00:00:46,100 --> 00:00:52,140
So if I go back to the Science of Cats detail screen, how can we output a bit of content down here

11
00:00:52,140 --> 00:00:57,520
that reads related programs and then have a link to the biology program?

12
00:00:57,810 --> 00:01:00,880
Well, starting right now, let me show you how to do that.

13
00:01:01,200 --> 00:01:09,720
So in our text editor, jump in to the theme folder and let's open up the single event file and let's

14
00:01:09,720 --> 00:01:12,390
scroll down to the very bottom towards the bottom.

15
00:01:12,390 --> 00:01:15,410
We see a div with the class of generic content.

16
00:01:15,900 --> 00:01:19,200
So right below that div, let's just drop down.

17
00:01:19,200 --> 00:01:21,810
And as a test, we could say hello.

18
00:01:21,820 --> 00:01:22,770
One, two, three.

19
00:01:23,430 --> 00:01:24,950
OK, and there we see hello.

20
00:01:24,960 --> 00:01:25,840
One, two, three.

21
00:01:26,340 --> 00:01:29,580
So we know that we are editing the right location of the right file.

22
00:01:29,610 --> 00:01:33,930
Let's delete that test and instead let's drop in to P.

23
00:01:34,560 --> 00:01:38,460
And the first thing I want us to do is create a new variable.

24
00:01:38,670 --> 00:01:40,590
So dollar sign to create a variable.

25
00:01:40,770 --> 00:01:42,390
You could name it whatever you want.

26
00:01:42,390 --> 00:01:45,210
Unicorn pizza, the name doesn't matter.

27
00:01:45,510 --> 00:01:50,340
But just to make sense, I'm going to name it related programs.

28
00:01:50,550 --> 00:01:56,360
And let's set this to equal the results of the get field function.

29
00:01:56,640 --> 00:02:03,140
Remember, our advanced custom fields plugin gives us access to this function get field.

30
00:02:03,420 --> 00:02:10,080
So now within the argument we just tell it which field name, which custom field name we want to retrieve.

31
00:02:10,320 --> 00:02:16,230
Now, if you can't remember the exact field name of our related programs Field, let's just go back

32
00:02:16,230 --> 00:02:21,210
into the WordPress admin, click on Custom Fields towards the Bottom here.

33
00:02:21,960 --> 00:02:24,600
Let's click on our related program, Field Group.

34
00:02:25,140 --> 00:02:31,350
At the moment, this field group only has one field, and in this column we can see that its name is

35
00:02:31,350 --> 00:02:34,260
related, underscore programs.

36
00:02:34,650 --> 00:02:42,360
So back in our text editor, let's get the field that is named related underscore programs.

37
00:02:42,660 --> 00:02:46,770
OK, so we are saving the value of that field into our variable.

38
00:02:46,950 --> 00:02:52,730
And at this point, we might be wondering what exactly lives within this variable now, right?

39
00:02:52,740 --> 00:02:53,930
Is it an object?

40
00:02:53,940 --> 00:02:55,160
Is it a string of text?

41
00:02:55,170 --> 00:02:56,100
Is it a number?

42
00:02:56,100 --> 00:02:57,110
Is it an array?

43
00:02:57,270 --> 00:02:58,050
What is it?

44
00:02:58,260 --> 00:02:59,730
Well, let me show you a little trick.

45
00:02:59,850 --> 00:03:06,420
Maybe down on the next line, if you're ever curious, what lives inside a variable or a piece of data

46
00:03:07,590 --> 00:03:15,120
has a built in function named print underscore are and within its parentheses, you can just pass it

47
00:03:15,120 --> 00:03:16,770
whatever data you're curious about.

48
00:03:17,010 --> 00:03:18,690
So let's type in this variable name.

49
00:03:18,700 --> 00:03:23,280
So print are related programs.

50
00:03:23,850 --> 00:03:25,230
OK, let's save that.

51
00:03:26,430 --> 00:03:33,810
Go back to the front end of our website and P P outputs all sorts of information about that variable.

52
00:03:34,410 --> 00:03:38,180
But most importantly, you can see that it begins with the word array.

53
00:03:38,460 --> 00:03:44,320
So back in our code we can delete this, print our line, because now we know that this variable, or

54
00:03:44,370 --> 00:03:48,450
I guess we should say that what this field returns is an array.

55
00:03:48,690 --> 00:03:52,900
And you and I know that an array can contain multiple values.

56
00:03:53,250 --> 00:03:58,530
Now, in this example, at the moment, we are only going to have one single related program.

57
00:03:58,650 --> 00:03:59,000
Right.

58
00:03:59,010 --> 00:04:05,070
Buyology But just to make the code that we are about to write a bit more understandable, why don't

59
00:04:05,070 --> 00:04:08,360
we assign another related program to this event?

60
00:04:08,670 --> 00:04:10,020
So back to our website.

61
00:04:10,020 --> 00:04:12,090
I'm still on the Science of Cats page.

62
00:04:12,330 --> 00:04:15,390
Let's use this edit event button up here in the header.

63
00:04:17,550 --> 00:04:23,820
And down in our related programs, custom field, why don't we also say that this event is related to

64
00:04:23,820 --> 00:04:25,270
the math program?

65
00:04:26,130 --> 00:04:29,730
OK, so now we're saying that the event is related to two programs.

66
00:04:30,440 --> 00:04:34,860
So let me save that and then use this permalink to go back to the front end.

67
00:04:35,520 --> 00:04:37,680
And I forgot to hit save in my text.

68
00:04:37,680 --> 00:04:43,110
Ed so this is still showing the results of the print R function, and you'll notice that this output

69
00:04:43,110 --> 00:04:50,190
is now twice as big as it was before, because now this contains information about two related programs

70
00:04:50,310 --> 00:04:51,660
instead of just one.

71
00:04:51,990 --> 00:04:57,920
OK, so we've got this array that contains information about multiple other posts.

72
00:04:58,200 --> 00:05:03,630
So all we need to do now is loop through the array and do something once for each item in it.

73
00:05:03,810 --> 00:05:09,590
So right below this line, let's drop down and let's use something called A for each loop.

74
00:05:10,050 --> 00:05:16,890
So for each parentheses and then curly brackets within the parentheses, we begin with the array that

75
00:05:16,890 --> 00:05:18,000
we want to work with.

76
00:05:18,180 --> 00:05:21,820
So related programs.

77
00:05:21,840 --> 00:05:26,990
And then right after that you say as and then you can make up a keyword variable.

78
00:05:27,000 --> 00:05:29,120
So let's just say as program.

79
00:05:29,640 --> 00:05:32,030
But this could also be pizza, right?

80
00:05:32,050 --> 00:05:34,280
The name here definitely does not matter.

81
00:05:35,280 --> 00:05:41,130
What does matter is that now within the curly brackets or the body of this for each loop, we can use

82
00:05:41,130 --> 00:05:46,410
this program, keyword or variable, to access each individual related program.

83
00:05:46,890 --> 00:05:48,440
So let's give ourselves a goal.

84
00:05:48,690 --> 00:05:53,060
Let's imagine that we want to output the title for each related program.

85
00:05:53,310 --> 00:05:58,200
Our first instinct might be to run the the title function.

86
00:05:58,440 --> 00:06:04,950
However, that only works when you're within a main WordPress loop with a WordPress query and there

87
00:06:04,980 --> 00:06:10,930
are WordPress functions like have posts and the posts to get a lot of the data ready for you.

88
00:06:11,190 --> 00:06:17,280
So instead, in this case, let's call the function named, get the title.

89
00:06:18,150 --> 00:06:24,570
And then within these parentheses, we need to either give WordPress the ID, write the numerical ID

90
00:06:24,600 --> 00:06:30,750
of a certain post that we are interested in, or we need to give it a WordPress post object.

91
00:06:30,900 --> 00:06:33,330
Well, that's exactly what program is.

92
00:06:33,480 --> 00:06:39,750
Each item that lives in our array that this custom field returns is a WordPress post object.

93
00:06:40,230 --> 00:06:46,980
So within these parentheses we can just say program because that's the keyword that we chose to represent

94
00:06:46,980 --> 00:06:49,270
each item that lives in this array.

95
00:06:49,740 --> 00:06:55,710
Let's also be sure to echo that out because functions that begin with git won't handle the echoing for

96
00:06:55,710 --> 00:06:56,060
you.

97
00:06:56,310 --> 00:07:01,410
Let's also be sure to end this line when the semicolon and then go ahead and save.

98
00:07:02,160 --> 00:07:06,270
And then back on our website we can see biology and math.

99
00:07:06,780 --> 00:07:07,110
Cool.

100
00:07:07,110 --> 00:07:09,700
So we have the exact data that we were looking for.

101
00:07:09,960 --> 00:07:12,840
Now let's just work on the formatting and design.

102
00:07:12,990 --> 00:07:19,500
So instead of just having them side by side, let's output an HTML list item for each one.

103
00:07:19,740 --> 00:07:22,500
So let's delete this entire echo line we just wrote.

104
00:07:22,770 --> 00:07:30,570
And because I want to write HTML, let's close out of at the end of this line and then we can enter

105
00:07:30,570 --> 00:07:32,750
back into P on this line.

106
00:07:34,020 --> 00:07:37,460
So that way on this line we are free to write HTML.

107
00:07:38,010 --> 00:07:43,930
So let's begin with a list item and then we want to create a link to each program page.

108
00:07:43,950 --> 00:07:48,480
So an element inside the link is where we want to output the title.

109
00:07:48,490 --> 00:07:57,630
So let's go into B and say Echo, get the title pass at our program variable and then let's be sure

110
00:07:57,630 --> 00:08:00,500
to give our link element and HCF value.

111
00:08:01,200 --> 00:08:09,810
So when someone clicks on the link, let's drop into P and echo out the results of Get the Permalink.

112
00:08:12,470 --> 00:08:18,070
So get the permalink for our program item cool, let's go ahead and save this, test it out.

113
00:08:18,620 --> 00:08:24,080
We see a list one Perreault and if I click on Buyology, takes me to that page.

114
00:08:24,110 --> 00:08:24,490
Cool.

115
00:08:24,710 --> 00:08:29,600
Let's go back to our Vente page and work on this formatting just a little bit more.

116
00:08:29,840 --> 00:08:30,070
Right.

117
00:08:30,080 --> 00:08:31,720
Let's improve the graphic design.

118
00:08:32,060 --> 00:08:38,800
So back in our text editor, we probably want all of our list items to live within an HTML you well

119
00:08:38,810 --> 00:08:40,660
or unordered list element.

120
00:08:40,940 --> 00:08:50,780
So right before our for each loop, let's just echo out a ULLE tag and then right after the for each

121
00:08:50,780 --> 00:08:57,740
loop we can echo out a closing tag and up on the opening you'll tag.

122
00:08:57,740 --> 00:09:04,550
Let's give it a class of linked list and min list just for styling.

123
00:09:06,170 --> 00:09:06,530
Cool.

124
00:09:06,530 --> 00:09:10,750
So that looks a lot better but we need to let the visitors of the site know what these are.

125
00:09:10,760 --> 00:09:11,050
Right.

126
00:09:11,060 --> 00:09:14,480
We need a headline that reads related programs.

127
00:09:14,870 --> 00:09:27,530
So right above the opening up line, we can echo out maybe a heading level two that reads related programs.

128
00:09:27,860 --> 00:09:35,990
And just for styling, let's give the H to a class of headline and headline Dash Dash Medium.

129
00:09:39,020 --> 00:09:44,930
OK, and then we probably want a bit of vertical spacing in between the headline in the main content

130
00:09:44,930 --> 00:09:55,340
field, so right above the two, let's just go out a horizontal rule and give it a class section and

131
00:09:55,340 --> 00:09:55,940
break.

132
00:09:58,900 --> 00:10:05,350
Perfect, however, I do want to point out that this looks good for an event that does have a related

133
00:10:05,350 --> 00:10:10,660
program, but what if we were looking at an event that didn't have any related programs?

134
00:10:10,990 --> 00:10:18,400
So, for example, if I just pull up the math meetup event, we still see the horizontal rule and the

135
00:10:18,400 --> 00:10:24,790
headline and we even see an error because he is not happy about the fact that we are trying to use a

136
00:10:24,790 --> 00:10:30,380
for each loop to loop through an array that doesn't even exist or contain any contents.

137
00:10:30,430 --> 00:10:37,810
So back in our code, we don't want to run any of this highlighted code unless an event does indeed

138
00:10:37,810 --> 00:10:40,210
have at least one related program.

139
00:10:40,540 --> 00:10:44,990
So to accomplish that, all we need to do is wrap that code within an IF statement.

140
00:10:45,700 --> 00:10:50,500
So check this out right below the line where we create our related programs variable.

141
00:10:51,100 --> 00:10:56,890
Let's begin an if statement and within the parentheses for the condition check.

142
00:10:57,190 --> 00:11:05,380
We can literally just type out the name of this variable related programs, because if this variable

143
00:11:05,380 --> 00:11:08,370
is blank, this will evaluate to false.

144
00:11:08,380 --> 00:11:13,400
But as long as the field contains at least one item in it, it will evaluate to true.

145
00:11:14,170 --> 00:11:16,960
So then let's just cut and paste all of this code.

146
00:11:17,360 --> 00:11:23,250
So cut that into your clipboard and then paste it to live within the if statements curly brackets.

147
00:11:24,250 --> 00:11:30,460
And then if I save that now, things look good on this event that doesn't have a related program.

148
00:11:30,820 --> 00:11:34,920
And if I go back to the science of cats, things also look good.

149
00:11:35,260 --> 00:11:36,370
Cool at this point.

150
00:11:36,370 --> 00:11:37,750
Let's change gears a bit.

151
00:11:38,020 --> 00:11:43,870
And if we click on to the biology program page, you could imagine that we would want a section down

152
00:11:43,870 --> 00:11:47,410
here that reads upcoming biology events.

153
00:11:47,710 --> 00:11:53,110
So basically, when it comes to the relationship between an event and a program, we want it to be a

154
00:11:53,110 --> 00:11:56,020
two way street instead of just a one way street.

155
00:11:56,470 --> 00:11:59,950
We've set the event to be able to point towards the program.

156
00:12:00,130 --> 00:12:06,460
But now how do we tell the program to point back to a related event displaying the relationship from

157
00:12:06,460 --> 00:12:10,630
this direction or this angle is definitely a bit trickier.

158
00:12:10,960 --> 00:12:17,410
So, for example, if I use this edit program link up here in the menubar, you'll notice that there's

159
00:12:17,410 --> 00:12:21,280
no custom field to relate this program to an event.

160
00:12:21,590 --> 00:12:27,420
Now, technically, we could go into custom fields and create a new field group and field and name it

161
00:12:27,430 --> 00:12:32,590
related events, but that would require our users to do double the work.

162
00:12:32,860 --> 00:12:33,190
Right.

163
00:12:33,190 --> 00:12:38,070
And you shouldn't have to set the relationship between two posts more than once.

164
00:12:38,470 --> 00:12:39,520
So what should we do?

165
00:12:39,880 --> 00:12:47,320
Because right now you might be scratching your head and thinking this biology program post is not aware

166
00:12:47,350 --> 00:12:48,940
of any related events.

167
00:12:49,240 --> 00:12:49,580
Right.

168
00:12:49,650 --> 00:12:53,560
This post is only aware of its own title and its own content.

169
00:12:54,040 --> 00:12:55,630
But do you know what I'm aware of?

170
00:12:55,630 --> 00:12:56,380
Everything.

171
00:12:56,890 --> 00:12:59,110
Our database, the WordPress database.

172
00:12:59,290 --> 00:13:01,600
And how do we communicate with the database?

173
00:13:02,110 --> 00:13:02,770
That's right.

174
00:13:02,770 --> 00:13:05,770
Through our good old friend custom queries.

175
00:13:06,100 --> 00:13:12,100
So right now, let's jump back into the text editor and we can close this single event file.

176
00:13:12,400 --> 00:13:16,150
And right now, let's jump into single program DOT.

177
00:13:17,560 --> 00:13:24,130
If we scroll down to the bottom here, we see a div with the class of generic content and right below

178
00:13:24,130 --> 00:13:29,230
that div you can type out below three to one or just a bit of sample text.

179
00:13:29,380 --> 00:13:31,660
And let me go back to the front end of my website.

180
00:13:32,470 --> 00:13:32,740
Cool.

181
00:13:32,770 --> 00:13:34,900
So here we can see that Halo three, two, one.

182
00:13:34,900 --> 00:13:38,020
So we know we are editing the right location of this file.

183
00:13:38,410 --> 00:13:42,580
And instead of this dummy text, let's begin to write a custom query.

184
00:13:42,850 --> 00:13:49,000
I always begin by asking myself, do I need to write a brand new custom query or is this similar to

185
00:13:49,000 --> 00:13:51,990
something I've already done elsewhere on the website?

186
00:13:52,150 --> 00:13:59,410
And if you think about it, our homepage is already querying for upcoming events so we can recycle most

187
00:13:59,410 --> 00:14:05,740
of that custom query and then just add on one extra filter that will only return posts that mention

188
00:14:05,740 --> 00:14:07,790
a relationship to the current program.

189
00:14:07,990 --> 00:14:11,950
I realized that was a lot of rambling and it might have been difficult to understand.

190
00:14:11,980 --> 00:14:15,640
So now let's just get into the action and follow along with me.

191
00:14:15,880 --> 00:14:23,080
So I'm going to begin by jumping into front page P and in this template file, the first real block

192
00:14:23,080 --> 00:14:26,730
of P is a custom query that we've already written.

193
00:14:27,130 --> 00:14:27,420
Right.

194
00:14:27,460 --> 00:14:31,510
This will pull in the two most rapidly approaching upcoming events.

195
00:14:31,750 --> 00:14:37,840
So to avoid tons of typing, why don't we just copy this and not only the query, but let's also even

196
00:14:37,840 --> 00:14:42,910
copy the while loop that handles the outputting or displaying of the events.

197
00:14:43,360 --> 00:14:50,200
So I'm going to begin by placing my cursor at the start of this block up here and then let's just select

198
00:14:50,200 --> 00:14:52,960
all the way until the end of this while loop.

199
00:14:54,570 --> 00:15:00,750
Down here, so copy that into your clipboard and then we can close out of the home page, then back

200
00:15:00,750 --> 00:15:06,510
in our single dash program file right underneath this generic div, just go ahead and paste in your

201
00:15:06,510 --> 00:15:07,140
clipboard.

202
00:15:10,470 --> 00:15:12,060
OK, so if we save this.

203
00:15:14,070 --> 00:15:20,220
This is going to display the two most rapidly approaching events, regardless of which ones are actually

204
00:15:20,220 --> 00:15:23,170
related to the current program of biology.

205
00:15:23,490 --> 00:15:30,060
So all we need to do to fix things is add on another filter that looks for references to the current

206
00:15:30,060 --> 00:15:31,230
program post.

207
00:15:31,470 --> 00:15:34,470
And the way we do this is through media queries.

208
00:15:34,710 --> 00:15:40,920
So you might have remembered that we set meta query to equal an array and then within this top level

209
00:15:40,920 --> 00:15:43,140
array we nested another array.

210
00:15:43,320 --> 00:15:48,900
I want you to think of the inner array as a filter and you can have multiple filters.

211
00:15:49,140 --> 00:15:55,740
So right after this first enter array or filter, let's just add a comma and then drop down to a new

212
00:15:55,740 --> 00:15:57,790
line and create another array.

213
00:15:58,050 --> 00:16:00,360
So we've got an array inception going on here.

214
00:16:00,510 --> 00:16:04,320
Our top level array contains this array and our brand new one.

215
00:16:04,710 --> 00:16:05,720
Let me scroll down a bit.

216
00:16:06,060 --> 00:16:12,570
So within this new array, let's drop down just to stay organized and we're going to want a key.

217
00:16:12,990 --> 00:16:16,200
And let's just set that to X as a temporary placeholder.

218
00:16:16,680 --> 00:16:21,570
And we're going to need to compare and we're going to need a value.

219
00:16:23,220 --> 00:16:26,010
Now, let's actually fill in these X placeholders.

220
00:16:26,340 --> 00:16:29,510
So the key is the custom field that we are looking in.

221
00:16:29,880 --> 00:16:38,370
So instead of X here, let's say related underscore programs, and we only want events where the value

222
00:16:38,370 --> 00:16:46,320
of this custom field is like the numerical ID of the current program post.

223
00:16:46,830 --> 00:16:52,110
So instead of trying to hard code a number here, we want this to be dynamic and we want it to be whatever

224
00:16:52,110 --> 00:16:53,700
you RL you're currently viewing.

225
00:16:53,910 --> 00:16:59,370
So instead of hard coding this to the idea of the biology program, instead of a number here, if we

226
00:16:59,370 --> 00:17:06,900
just say get the I.D. and that's a function, so include parentheses, then this will be dynamic.

227
00:17:07,050 --> 00:17:15,840
So altogether our new filter is saying if the array of related programs contains or like basically means

228
00:17:15,840 --> 00:17:21,640
contains the ID number of the current program post, well then that's what we're looking for.

229
00:17:21,990 --> 00:17:24,540
However, there's only one problem with this code.

230
00:17:24,750 --> 00:17:31,650
When WordPress saves this array of related programs into its database, it first has to serialize the

231
00:17:31,650 --> 00:17:33,900
data or serialize the array.

232
00:17:34,230 --> 00:17:35,220
So what does that mean?

233
00:17:35,640 --> 00:17:39,480
Well, I don't want you to type what I'm about to type, because this is just a quick demo.

234
00:17:39,720 --> 00:17:45,240
But let's imagine on one of our events, we said that it was related to three programs.

235
00:17:45,540 --> 00:17:52,620
So our custom field would be an array that had references to the posted values of twelve, one hundred

236
00:17:52,620 --> 00:17:55,680
and twenty and maybe twelve hundred and fifty.

237
00:17:55,980 --> 00:18:03,540
Well, WordPress cannot save a true array to a database value, so instead is going to first serialize

238
00:18:03,570 --> 00:18:07,450
this array, which will convert it into something that looks like this.

239
00:18:07,860 --> 00:18:14,250
So now that this is not a true array, there's no easy way for us to look in it and say, does the array

240
00:18:14,250 --> 00:18:16,890
contain the number 12, for example?

241
00:18:17,200 --> 00:18:20,430
Instead, this is just a big, messy string of text.

242
00:18:20,610 --> 00:18:26,250
And you could imagine that if the value we were looking for, let's say the current program had an ID

243
00:18:26,250 --> 00:18:32,070
of twelve, well, if we tried to search this string of text for 12, it would pull in a bunch of false

244
00:18:32,070 --> 00:18:32,910
positives.

245
00:18:33,180 --> 00:18:39,030
12 would obviously match, but also a hundred and twenty would match because it begins with twelve and

246
00:18:39,030 --> 00:18:42,970
also twelve hundred would match because it begins with twelve.

247
00:18:43,170 --> 00:18:48,600
However, luckily for us, WordPress wraps each one of these values in quotations.

248
00:18:48,840 --> 00:18:55,020
So long story short, when we tell WordPress the value that we are searching for down here, we don't

249
00:18:55,020 --> 00:18:57,270
literally just want to search for 12.

250
00:18:57,600 --> 00:19:02,000
We want to search for quotation twelve and quotation.

251
00:19:02,460 --> 00:19:07,800
So what we need to do and this is where you can start typing and following along with me again is right

252
00:19:07,800 --> 00:19:09,480
before the we call this function.

253
00:19:09,960 --> 00:19:14,370
Let's begin with a pair of single quotes and now we can type a string of text in here.

254
00:19:14,670 --> 00:19:17,610
And really all we want the type is a double quote.

255
00:19:17,970 --> 00:19:22,830
OK, and then let's concatenate on the results of our get the ID function.

256
00:19:23,190 --> 00:19:28,780
So a period here and then right after it, we want to concatenate on another closing quote.

257
00:19:29,580 --> 00:19:36,210
So a period to add on a single quote so we can type out a string of text and all we want is a double

258
00:19:36,210 --> 00:19:36,570
quote.

259
00:19:36,990 --> 00:19:38,970
So let's go ahead and save this.

260
00:19:39,300 --> 00:19:39,900
Perfect.

261
00:19:40,080 --> 00:19:46,290
Now, the only event we see is the one that has a relationship with the biology program that's going

262
00:19:46,290 --> 00:19:48,150
to bring this lesson to a close.

263
00:19:48,300 --> 00:19:54,180
But in our next lesson, we will pick up right where we left off here and fix the formatting and graphic

264
00:19:54,180 --> 00:19:55,690
design of this area.

265
00:19:55,950 --> 00:19:58,050
Let's keep it rolling and I will see you then.
