1
00:00:01,950 --> 00:00:03,030
Hello, everyone.

2
00:00:03,390 --> 00:00:09,510
In this lesson, we are going to work on opening and closing our search overlay.

3
00:00:09,900 --> 00:00:16,350
So in other words, when someone clicks on this search icon in the top right corner, we want to respond

4
00:00:16,350 --> 00:00:23,610
by opening up a full screen, semi transparent overlay with a text field where users can begin typing

5
00:00:23,610 --> 00:00:24,780
in what they're looking for.

6
00:00:25,080 --> 00:00:31,770
Now, in order to respond to the event of this icon getting clicked on, we will need to write JavaScript.

7
00:00:32,160 --> 00:00:39,010
But before we write that JavaScript, let's first write the HDMI URL that will control what the overlay

8
00:00:39,010 --> 00:00:39,990
should look like.

9
00:00:40,440 --> 00:00:41,170
So check this out.

10
00:00:41,190 --> 00:00:46,470
Follow along with me over in our text editor within our theme folder.

11
00:00:46,740 --> 00:00:50,160
I want you to open up footer dot p HP.

12
00:00:51,090 --> 00:00:52,980
Let's scroll down to the very bottom.

13
00:00:53,880 --> 00:00:59,860
And right before the closing body tag and this WP footer line right above that.

14
00:00:59,880 --> 00:01:02,360
Let's create a brand new div.

15
00:01:03,660 --> 00:01:09,540
And let's give this div a class of search dash overlay.

16
00:01:10,440 --> 00:01:10,640
OK.

17
00:01:10,740 --> 00:01:14,430
And then within that div just as a test let's say hello.

18
00:01:14,460 --> 00:01:15,390
One, two, three.

19
00:01:15,780 --> 00:01:20,940
Now if we save that and refresh our Web site, we don't see anything.

20
00:01:21,270 --> 00:01:21,660
Woops.

21
00:01:21,720 --> 00:01:24,780
Here's our search JavaScript test from the previous lesson.

22
00:01:25,350 --> 00:01:31,020
But you'll notice that we don't see the hello one, two, three anywhere towards the bottom of the page.

23
00:01:31,530 --> 00:01:38,880
And that's because I've written CSX that targets this class and it will hide this div unless we give

24
00:01:38,880 --> 00:01:42,960
it another class of search overlay.

25
00:01:44,110 --> 00:01:44,640
Dash.

26
00:01:44,670 --> 00:01:45,320
Dash.

27
00:01:45,480 --> 00:01:46,350
Active.

28
00:01:47,040 --> 00:01:49,290
So the overlay is hidden by default.

29
00:01:49,380 --> 00:01:52,440
And then if we add this class, it becomes visible.

30
00:01:52,800 --> 00:01:58,920
So as soon as we save this and refresh now you can see this semi transparent overlay.

31
00:01:59,250 --> 00:01:59,790
And we see.

32
00:01:59,820 --> 00:02:00,270
Hello.

33
00:02:00,300 --> 00:02:01,230
One, two, three.

34
00:02:01,710 --> 00:02:08,640
So what we're going to do is let the search overlay be hidden by default and then we can add this class

35
00:02:08,640 --> 00:02:11,100
to it dynamically with JavaScript.

36
00:02:11,640 --> 00:02:13,380
So let me show you what I'm talking about.

37
00:02:14,280 --> 00:02:21,330
Once someone clicks on this search icon in the top right, we can then use JavaScript to add this secondary

38
00:02:21,330 --> 00:02:22,800
class in real time.

39
00:02:23,250 --> 00:02:23,510
OK.

40
00:02:23,580 --> 00:02:28,420
And then once someone has that full screen overlay visible, what if they want to close it?

41
00:02:28,440 --> 00:02:30,720
To go back to the regular part of the page?

42
00:02:31,110 --> 00:02:34,830
Well, within the overlay, let's add a few things instead of hello.

43
00:02:34,830 --> 00:02:35,790
One, two, three.

44
00:02:36,120 --> 00:02:40,110
Let's add a text field where users can type in what they're searching for.

45
00:02:40,620 --> 00:02:46,170
And let's also add a large X icon that you can click on to close the overlay.

46
00:02:46,680 --> 00:02:50,040
So within this div, let's add another interior div.

47
00:02:50,940 --> 00:02:57,570
And let's give this div a class of search dash overlay.

48
00:02:58,140 --> 00:02:59,910
Underscore, underscore, top.

49
00:03:00,450 --> 00:03:00,660
OK.

50
00:03:00,720 --> 00:03:06,040
And then within that new div, let's create one more div with a class of container.

51
00:03:08,340 --> 00:03:12,960
And anything that lives within this div will be horizontally centered on the screen.

52
00:03:13,320 --> 00:03:13,530
OK.

53
00:03:13,590 --> 00:03:19,260
And now within this container div let's first create a text field where users can type what they're

54
00:03:19,260 --> 00:03:21,750
searching for code input.

55
00:03:22,560 --> 00:03:25,290
And let's give it a type of text.

56
00:03:25,680 --> 00:03:27,420
And just for CSF styling.

57
00:03:27,450 --> 00:03:30,930
Let's give it a class of search term.

58
00:03:31,740 --> 00:03:33,900
And why don't we give it a default value.

59
00:03:34,410 --> 00:03:36,420
So place holder equals.

60
00:03:36,780 --> 00:03:39,330
So when you first see the field that already reads.

61
00:03:39,390 --> 00:03:42,270
What are you looking for?

62
00:03:42,930 --> 00:03:47,940
And then while we're at it, why don't we also give this input an idea of search term?

63
00:03:48,360 --> 00:03:53,370
So that way, later on, we can have a unique hook to look for with our JavaScript.

64
00:03:53,730 --> 00:03:53,940
OK.

65
00:03:54,000 --> 00:03:56,190
So if we go ahead and save this.

66
00:03:57,390 --> 00:04:01,680
That creates the full screen overlay with this top portion, that's a slightly different color.

67
00:04:01,950 --> 00:04:05,550
We've got to input field and if you click on it, you can start typing.

68
00:04:06,030 --> 00:04:13,530
Next, let's add a large search icon right about here and let's add a large X or close icon right about

69
00:04:13,530 --> 00:04:13,890
here.

70
00:04:14,370 --> 00:04:20,520
So back in the text editor right before the input, let's create an eye element.

71
00:04:21,480 --> 00:04:26,190
Since we are using the font awesome library, this is how you can create an icon.

72
00:04:26,550 --> 00:04:29,820
Let's just give it a class of F.A.A. for font.

73
00:04:29,850 --> 00:04:30,420
Awesome.

74
00:04:30,990 --> 00:04:34,820
And then give it another class of F.A.A. dash search.

75
00:04:35,500 --> 00:04:37,020
Okay, so that will pull in the font.

76
00:04:37,050 --> 00:04:42,950
Awesome magnifying search icon and then let's give it another class that will give it the right color

77
00:04:42,960 --> 00:04:44,490
and also the right positioning.

78
00:04:44,790 --> 00:04:50,220
So let's say search overlay, underscore, underscore icon.

79
00:04:50,640 --> 00:04:55,800
And then whenever you create a font awesome icon, you also want to add another attribute instead of

80
00:04:55,800 --> 00:04:59,640
class names area hidden.

81
00:05:00,120 --> 00:05:01,500
And let's set that to equal.

82
00:05:01,500 --> 00:05:02,010
True.

83
00:05:02,940 --> 00:05:07,590
So this way, if someone comes to our Web site and they don't have perfect vision and they are using

84
00:05:07,590 --> 00:05:12,570
a screen reader, it will not try to read this element out loud to that visitor.

85
00:05:13,410 --> 00:05:14,790
Let's go ahead and save that.

86
00:05:16,020 --> 00:05:16,590
Okay, cool.

87
00:05:16,620 --> 00:05:18,360
There's the large search icon.

88
00:05:18,600 --> 00:05:21,960
Now, let's just add the x forclose icon over here.

89
00:05:22,440 --> 00:05:27,540
We can actually just copy and paste this eye element to copy it into our clipboard.

90
00:05:27,600 --> 00:05:30,150
And then right below this input element.

91
00:05:30,180 --> 00:05:32,130
Just paste in your clipboard.

92
00:05:32,820 --> 00:05:39,120
And instead of F.A.A. dash search, let's change that to F.A.A. dash window.

93
00:05:39,120 --> 00:05:40,610
Dash close.

94
00:05:41,220 --> 00:05:44,130
And then let's change this class from search overlay.

95
00:05:44,250 --> 00:05:49,410
Underscore, underscore, icon to underscore, underscore, close.

96
00:05:49,980 --> 00:05:50,940
Give that a save.

97
00:05:51,900 --> 00:05:52,320
Cool.

98
00:05:52,890 --> 00:05:58,620
Now, at the moment, if we click the close icon, nothing happens because all we've done so far is

99
00:05:58,620 --> 00:05:58,800
right.

100
00:05:58,860 --> 00:06:05,040
A bit of boring HDMI smell, but you can imagine that we want to use JavaScript so that when you click

101
00:06:05,070 --> 00:06:10,350
this close icon, we remove this active class from the search overlay.

102
00:06:10,380 --> 00:06:12,240
So then it becomes invisible again.

103
00:06:12,880 --> 00:06:13,140
OK.

104
00:06:13,230 --> 00:06:16,020
Now, at this point, now that we've got this basic H.

105
00:06:16,020 --> 00:06:20,970
Temel skeleton complete, let's go ahead and delete the active class.

106
00:06:21,930 --> 00:06:22,170
Right.

107
00:06:22,200 --> 00:06:25,890
So the search will be invisible by default on page load.

108
00:06:26,310 --> 00:06:32,070
And right now, let's begin writing JavaScript to make the opening and closing of this dynamic.

109
00:06:32,400 --> 00:06:36,030
So in our theme folder, let's look inside the JSC folder.

110
00:06:36,870 --> 00:06:38,890
And then the modules subfolder.

111
00:06:39,300 --> 00:06:42,060
And let's open up search dot J.S..

112
00:06:43,020 --> 00:06:49,290
Now, I want to begin by giving you an overview of how I approach object oriented JavaScript.

113
00:06:49,590 --> 00:06:55,260
I like to break everything down into three main sections or three main areas.

114
00:06:55,800 --> 00:06:58,080
So follow along with me and type this out.

115
00:06:58,440 --> 00:07:01,200
The constructor function is area number one.

116
00:07:01,290 --> 00:07:04,170
So let's add a comment just to stay organized.

117
00:07:04,480 --> 00:07:09,210
Write comments are just notes to ourselves that the computer won't actually run.

118
00:07:09,630 --> 00:07:17,920
So we'll say section number one, the constructor is where we describe our object or I should say.

119
00:07:17,940 --> 00:07:21,750
Describe and create or initiate.

120
00:07:22,080 --> 00:07:22,550
Don't worry.

121
00:07:22,560 --> 00:07:24,870
We will review what this means a bit later on.

122
00:07:25,440 --> 00:07:31,050
But the constructor is section number one and then right below the constructor function.

123
00:07:31,290 --> 00:07:33,300
I like to have area number two.

124
00:07:33,630 --> 00:07:36,900
And this is where I list all of my different events.

125
00:07:37,290 --> 00:07:43,680
So an example of an event would be when this top right search icon gets clicked on or when the search

126
00:07:43,740 --> 00:07:46,470
overlays big X icon gets clicked on.

127
00:07:47,080 --> 00:07:47,280
Right.

128
00:07:47,340 --> 00:07:52,680
Each of those would be an event and we want to be able to respond to those events.

129
00:07:53,070 --> 00:07:53,320
OK.

130
00:07:53,390 --> 00:07:58,110
And then section number three is where our methods will live.

131
00:07:58,560 --> 00:08:02,850
A method is just another way of saying a function or an action.

132
00:08:04,140 --> 00:08:06,930
It helps to think of our methods as verbs.

133
00:08:07,320 --> 00:08:07,570
Right.

134
00:08:07,680 --> 00:08:08,910
Action words.

135
00:08:09,210 --> 00:08:13,800
So before we even write any real code, we can go ahead and write a few skeleton methods.

136
00:08:14,160 --> 00:08:14,340
Right.

137
00:08:14,370 --> 00:08:19,110
Because we know that our search overlay needs to be able to open up and reveal itself.

138
00:08:19,440 --> 00:08:22,740
And it also needs to be able to close down or hide itself.

139
00:08:23,040 --> 00:08:28,260
So why don't we create one method or function named open overlay?

140
00:08:30,180 --> 00:08:30,330
OK.

141
00:08:30,450 --> 00:08:35,520
And then right below that, we could create another method named close overlay.

142
00:08:37,020 --> 00:08:39,270
Now we are creating a search object.

143
00:08:39,300 --> 00:08:46,230
But if you imagined we were creating a person object or a human being object, the actions that a human

144
00:08:46,230 --> 00:08:48,270
being can perform would live here.

145
00:08:48,330 --> 00:08:48,590
Right.

146
00:08:48,630 --> 00:08:51,920
Things like run, jump, walk, speak.

147
00:08:52,470 --> 00:08:52,800
OK.

148
00:08:52,860 --> 00:08:56,520
And to continue with that metaphor of creating a person or human being.

149
00:08:56,660 --> 00:09:02,300
Object, the constructor is where we would define things like the person's name or their eye color.

150
00:09:02,630 --> 00:09:02,840
Right.

151
00:09:02,870 --> 00:09:08,420
So instead of this alert test message in the constructor function, we could create different properties

152
00:09:08,510 --> 00:09:09,650
about the object.

153
00:09:09,920 --> 00:09:13,700
So we would say this to refer to the current object or person.

154
00:09:14,090 --> 00:09:18,770
And then we can go inside it with a period and then create whatever property names we want.

155
00:09:19,130 --> 00:09:21,180
So we could say, name this dot.

156
00:09:21,200 --> 00:09:23,640
Name equals Jane.

157
00:09:24,650 --> 00:09:26,180
And we could say this dot.

158
00:09:26,300 --> 00:09:28,740
Eye color equals green.

159
00:09:30,230 --> 00:09:36,800
And maybe this dot head equals some sort of object that creates a human head.

160
00:09:37,400 --> 00:09:38,890
And this dot brain.

161
00:09:38,930 --> 00:09:41,540
Some sort of object that creates a human brain.

162
00:09:41,990 --> 00:09:42,170
OK.

163
00:09:42,230 --> 00:09:47,060
So the constructor is where you create and describe and sort of give birth to your object.

164
00:09:47,900 --> 00:09:54,020
And then the events area is where you connect the dots between your object and the different actions

165
00:09:54,020 --> 00:09:54,950
that it can perform.

166
00:09:55,340 --> 00:09:59,390
So for an example of an event, I'm not going to write any real JavaScript.

167
00:09:59,420 --> 00:10:02,780
But let's just write pseudo fake code in plain English.

168
00:10:02,810 --> 00:10:13,310
We might say on the event that this dot head feels cold, maybe we respond by running a method named

169
00:10:13,390 --> 00:10:14,590
Wheres Hat?

170
00:10:15,140 --> 00:10:19,770
And then you could imagine that down here we would have a method named Where's Hacked.

171
00:10:20,870 --> 00:10:27,410
So the events area is sort of like the dispatcher or it's the main central office that takes an incoming

172
00:10:27,470 --> 00:10:28,010
event.

173
00:10:28,190 --> 00:10:33,050
Maybe if the head of someone feels cold, you respond by putting on a hat.

174
00:10:33,290 --> 00:10:36,320
Or another example would be on this dot.

175
00:10:36,350 --> 00:10:38,300
Brain feels hot.

176
00:10:38,660 --> 00:10:42,580
Maybe you respond by going swimming, OK?

177
00:10:42,830 --> 00:10:47,750
And then that calls or dispatches or method named going swimming.

178
00:10:48,840 --> 00:10:49,060
OK.

179
00:10:49,130 --> 00:10:51,860
Now that's enough with our person or human metaphore.

180
00:10:52,220 --> 00:10:57,440
Let's get back to the real world where what we want to do is respond to the event of this top right

181
00:10:57,500 --> 00:10:58,940
icon getting clicked on.

182
00:10:59,180 --> 00:11:04,100
So back in our code, let's delete all of this human person metaphore code.

183
00:11:04,460 --> 00:11:08,240
So I will delete the name I color, head and brain in the constructor.

184
00:11:08,720 --> 00:11:15,350
And then we can also delete these two fake event lines and let's delete the going swimming and wears

185
00:11:15,350 --> 00:11:16,250
a hat method.

186
00:11:17,060 --> 00:11:22,730
And let's begin up in the constructor by selecting this icon element.

187
00:11:23,420 --> 00:11:29,600
So back in our code inside the constructor, let's create a property about this object.

188
00:11:29,960 --> 00:11:33,680
So let's say this dot and then we can make up a property name.

189
00:11:34,100 --> 00:11:36,230
Let's call it open button.

190
00:11:37,070 --> 00:11:37,820
Equals.

191
00:11:38,060 --> 00:11:41,180
And then we just want to point towards this element.

192
00:11:41,780 --> 00:11:47,300
Now, selecting an element with JavaScript is simple enough, but we are actually going to leverage

193
00:11:47,390 --> 00:11:48,760
a library named J.

194
00:11:48,800 --> 00:11:50,870
Query to make it even easier.

195
00:11:51,170 --> 00:11:51,380
J.

196
00:11:51,410 --> 00:11:53,690
Query is no longer the cool kid on the block.

197
00:11:53,750 --> 00:11:55,850
So I wouldn't necessarily use J.

198
00:11:55,880 --> 00:11:58,220
Query on every single new project.

199
00:11:58,430 --> 00:12:03,050
But considering the nature of this fictional university Web site, I think J.

200
00:12:03,080 --> 00:12:07,760
Query is a decent fit and will save us a lot of extra coding in the long run.

201
00:12:08,060 --> 00:12:11,040
So back in our ED, if we want to use the J.

202
00:12:11,060 --> 00:12:15,860
Query library, what we can do is just up at the very, very top of this file.

203
00:12:16,220 --> 00:12:22,620
We can say import dollar sign from single quotes J.

204
00:12:22,670 --> 00:12:23,150
Query.

205
00:12:24,140 --> 00:12:25,370
We want to use J.

206
00:12:25,400 --> 00:12:28,850
Query to select this top right search icon.

207
00:12:29,450 --> 00:12:32,750
So what we can do is dollar sign to begin using J.

208
00:12:32,780 --> 00:12:35,270
Query parentheses quotes.

209
00:12:35,600 --> 00:12:43,230
And then we can just use a C SS like selector to select the element meaning a dot for a class or a hash

210
00:12:43,230 --> 00:12:44,690
tag for an I.D..

211
00:12:45,140 --> 00:12:53,740
Now I can tell you that that top right icon has a class of J.S. Dash, search, dash, trigger.

212
00:12:55,640 --> 00:12:57,230
Let's drop down to a new line.

213
00:12:57,290 --> 00:13:02,420
And next, let's select the close icon that exists in the search overlay.

214
00:13:02,780 --> 00:13:06,110
So this dot, we can name the property, whatever we want.

215
00:13:06,260 --> 00:13:08,540
Let's call it close button.

216
00:13:09,410 --> 00:13:12,810
And then we want to select that close icon so we can use J.

217
00:13:12,860 --> 00:13:14,600
Query to select an element.

218
00:13:14,930 --> 00:13:22,760
And I can tell you that the X icon has a class of search, dash, overlay, underscore, underscore,

219
00:13:22,790 --> 00:13:23,700
close.

220
00:13:24,600 --> 00:13:24,860
OK.

221
00:13:24,980 --> 00:13:27,290
And let's create one more property for now.

222
00:13:27,680 --> 00:13:31,700
Let's say this dot search overlay.

223
00:13:31,970 --> 00:13:32,210
Right.

224
00:13:32,240 --> 00:13:38,810
Let's select the actual div that we want to add and remove the active class two to hide and show the

225
00:13:38,810 --> 00:13:42,560
div the div that we added to our footer at the beginning of this lesson.

226
00:13:42,590 --> 00:13:43,160
So J.

227
00:13:43,190 --> 00:13:44,400
Query to select it.

228
00:13:44,900 --> 00:13:48,200
And it has a class of search dash overlay.

229
00:13:49,050 --> 00:13:49,370
All right.

230
00:13:49,430 --> 00:13:52,580
Now at this point we've got all of the different properties that we need.

231
00:13:52,940 --> 00:13:56,270
Now let's go ahead and connect the dots between these elements.

232
00:13:56,730 --> 00:14:01,830
The events of them getting clicked on and then the appropriate methods that we want to respond with.

233
00:14:01,990 --> 00:14:06,300
So in our events section, let's create a method named events.

234
00:14:06,610 --> 00:14:13,710
So events, parentheses, curly brackets, and within these curly brackets, we want to be on the lookout

235
00:14:13,710 --> 00:14:15,150
for two events.

236
00:14:15,450 --> 00:14:21,450
The first is when the open button element gets clicked on, and the second event is when the close button

237
00:14:21,450 --> 00:14:22,260
gets clicked.

238
00:14:22,650 --> 00:14:29,580
So let's start with the open button first so we can say this dot open button, right.

239
00:14:29,610 --> 00:14:33,060
That will select the element that we have stored in this property.

240
00:14:33,770 --> 00:14:36,360
And then we can just say dot on.

241
00:14:36,750 --> 00:14:37,360
And then the J.

242
00:14:37,380 --> 00:14:39,960
Query on method takes two arguments.

243
00:14:40,320 --> 00:14:44,190
The first argument is the event that we want to be on the lookout for.

244
00:14:44,640 --> 00:14:46,830
In this case, it's the click event.

245
00:14:47,340 --> 00:14:53,250
And then the second argument is the name of the function or method that you want to call in response.

246
00:14:53,490 --> 00:14:57,990
So when this button gets clicked, we want to fire our open overlay method.

247
00:14:58,380 --> 00:15:04,860
So to point towards this method, we just say this to refer to the object and then dot and then the

248
00:15:04,860 --> 00:15:05,670
name of the method.

249
00:15:05,700 --> 00:15:07,940
So open overlay.

250
00:15:08,460 --> 00:15:13,170
Now, before we write the actual code for these methods, let's just go ahead and write the other event

251
00:15:13,170 --> 00:15:14,700
line for the close button.

252
00:15:15,390 --> 00:15:23,670
So new line, let's say this dot, close button and on the event that it gets clicked on.

253
00:15:24,150 --> 00:15:24,910
What do we want to do?

254
00:15:24,930 --> 00:15:27,790
We want to fire our close overlay method.

255
00:15:28,530 --> 00:15:31,500
So this dot close overlay.

256
00:15:32,130 --> 00:15:32,470
All right.

257
00:15:32,490 --> 00:15:38,250
Now that we've spelled out those two events, let's actually write the code that adds and removes the

258
00:15:38,250 --> 00:15:40,800
active class to the search overlay div.

259
00:15:41,190 --> 00:15:47,460
So in our open overlay method, let's begin by targeting our main search overlay div.

260
00:15:48,720 --> 00:15:55,320
So this dot search overlay and we just want to add a class to it.

261
00:15:55,680 --> 00:15:58,010
So + class is a J.

262
00:15:58,040 --> 00:15:59,520
Query method or function.

263
00:15:59,880 --> 00:16:02,070
And then we just provide the name of the class.

264
00:16:02,550 --> 00:16:08,130
So remember it's search dash, overlay, dash, dash active.

265
00:16:08,670 --> 00:16:12,840
And then for the close overlay method, we can just do the same thing but reverse it.

266
00:16:13,290 --> 00:16:15,270
So let's copy and paste this line.

267
00:16:15,810 --> 00:16:16,350
Copy it.

268
00:16:16,850 --> 00:16:18,600
Paste it into close overlay.

269
00:16:19,110 --> 00:16:21,360
Except this time we don't want to add a class.

270
00:16:21,390 --> 00:16:23,040
We want to remove a class.

271
00:16:23,310 --> 00:16:24,580
So just change this Jake.

272
00:16:24,590 --> 00:16:27,450
Wery method name to remove class.

273
00:16:27,690 --> 00:16:27,990
All right.

274
00:16:28,020 --> 00:16:32,400
Now, before we save this and test it out, there's only one last thing we need to do.

275
00:16:32,700 --> 00:16:36,090
We want the Web browser to be on the lookout for these events.

276
00:16:36,420 --> 00:16:41,730
As soon as the page is loaded or in other words, as soon as our object is created or born.

277
00:16:42,180 --> 00:16:45,840
So within the constructor, let's just call the events method.

278
00:16:46,140 --> 00:16:52,470
So we can just say this dot events parentheses to actually call the method or function.

279
00:16:52,800 --> 00:16:56,940
And that will make sure that these event listeners get added to the page right away.

280
00:16:57,240 --> 00:16:57,500
Okay.

281
00:16:57,570 --> 00:16:59,760
Now, at this point, let's save this file.

282
00:16:59,970 --> 00:17:03,570
And then if you go back to your browser now, if we click on this icon in the top.

283
00:17:03,570 --> 00:17:03,930
Right.

284
00:17:04,620 --> 00:17:06,480
Woops, that's actually not working yet.

285
00:17:06,600 --> 00:17:07,740
I know what the problem is.

286
00:17:08,100 --> 00:17:11,160
Back in our text editor in our events section.

287
00:17:11,490 --> 00:17:12,780
By default, the J.

288
00:17:12,840 --> 00:17:19,410
Query on method when it called the method name that we list here, it's going to change the value of

289
00:17:19,410 --> 00:17:21,010
the JavaScript keyword.

290
00:17:21,150 --> 00:17:21,990
This.

291
00:17:22,470 --> 00:17:28,140
So then in our open and close overlay methods, when we are saying this dot search overlay to try to

292
00:17:28,140 --> 00:17:31,430
target that main div, we think the keyword.

293
00:17:31,440 --> 00:17:34,050
This is referencing our main object.

294
00:17:34,290 --> 00:17:34,500
Right.

295
00:17:34,500 --> 00:17:36,840
The object that contains these properties.

296
00:17:37,110 --> 00:17:44,130
But the on method changes the value of the this keyword to point towards the H t AML element that got

297
00:17:44,130 --> 00:17:44,910
clicked on.

298
00:17:45,210 --> 00:17:50,490
So what we can do to solve this confusion is right after we list the name of the method that we want

299
00:17:50,490 --> 00:17:51,030
to call.

300
00:17:51,360 --> 00:17:57,900
We can just say dot bind, which is a function, and then just include this as the value.

301
00:17:58,860 --> 00:18:00,710
So Dot, find this.

302
00:18:01,070 --> 00:18:01,240
Okay.

303
00:18:01,350 --> 00:18:03,870
Let's go ahead and save this and test it out.

304
00:18:04,230 --> 00:18:05,640
So now when I click the top right.

305
00:18:05,640 --> 00:18:06,510
Search icon.

306
00:18:06,960 --> 00:18:07,350
Cool.

307
00:18:07,380 --> 00:18:09,150
And if I click the close icon.

308
00:18:09,660 --> 00:18:10,260
Perfect.

309
00:18:10,560 --> 00:18:12,510
That's going to bring this lesson to a close.

310
00:18:12,600 --> 00:18:16,380
In our next lesson, we will keep on rolling with the JavaScript.
