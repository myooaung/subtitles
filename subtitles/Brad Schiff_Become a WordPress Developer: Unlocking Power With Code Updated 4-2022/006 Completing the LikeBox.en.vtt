WEBVTT
1
00:00:02.050 --> 00:00:03.160
Hello, everyone.

2
00:00:03.520 --> 00:00:09.700
I think this lesson should be a lot of fun because we've already done all of the heavy lifting and now

3
00:00:09.700 --> 00:00:12.290
we just get to bring all of the pieces together.

4
00:00:12.610 --> 00:00:13.860
Let me show you what I mean.

5
00:00:13.900 --> 00:00:19.930
So in this lesson, we're going to set things up so that when you like a professor, if your request

6
00:00:19.930 --> 00:00:26.680
is successful, we're going to update the like box in real time so the heart will fill in and the count

7
00:00:26.680 --> 00:00:29.290
will be increased by one on the fly.

8
00:00:29.290 --> 00:00:37.540
And then if you click the box again, we will set up the server side to delete or remove a like, OK.

9
00:00:37.570 --> 00:00:41.940
So right now, let's begin writing JavaScript to make that happen.

10
00:00:42.340 --> 00:00:47.720
But first, I do want you to navigate to a professor page that you have not yet liked.

11
00:00:47.950 --> 00:00:53.710
So if that means you need to go into your admin dashboard and delete a few light posts, that's OK.

12
00:00:53.950 --> 00:00:59.320
Either way, once you've navigated to a professor that you have not like yet, we are ready to jump

13
00:00:59.320 --> 00:01:07.030
into our JavaScript over in the text editor within our theme folders, JS modules folder I will hop

14
00:01:07.030 --> 00:01:15.790
into like J.S. Let's find our method that is named create like and within its Ajax call, let's focus

15
00:01:15.790 --> 00:01:18.310
on our success callback function.

16
00:01:18.700 --> 00:01:22.000
So maybe right above the console log line.

17
00:01:22.970 --> 00:01:26.430
Let's say if our request is successful, what do we want to do?

18
00:01:26.530 --> 00:01:29.650
First, let's fill in the outline of the heart.

19
00:01:31.260 --> 00:01:39.540
So let's say current like Fox, remember, this is the variable that we created up here that will always

20
00:01:39.540 --> 00:01:44.070
point towards the actual parent span element with a class of lightbox.

21
00:01:44.470 --> 00:01:50.970
OK, so again, down in our success function, I'm saying current like box and then I just want to adjust

22
00:01:50.970 --> 00:01:54.570
its data attribute, which is named data exists.

23
00:01:54.820 --> 00:01:57.990
I want to update it to have a value of yes.

24
00:01:58.380 --> 00:02:01.850
So let's say dot 8r for an attribute.

25
00:02:02.580 --> 00:02:06.390
OK, and then within these parentheses we provide two arguments.

26
00:02:06.600 --> 00:02:10.030
The first is the name of the attribute that you want to work with.

27
00:02:10.890 --> 00:02:14.130
So let's say data, Dasch exists.

28
00:02:15.210 --> 00:02:18.200
And the second argument is what you want to set the value to.

29
00:02:18.630 --> 00:02:20.280
So let's say yes.

30
00:02:20.620 --> 00:02:20.940
Oops.

31
00:02:20.940 --> 00:02:22.500
And it looks like I have a typo here.

32
00:02:22.500 --> 00:02:26.190
I have three hours instead of just two in the word current.

33
00:02:26.730 --> 00:02:32.770
OK, so this line of code will update the hollow outline of a heart to be a solid filled in hard.

34
00:02:33.660 --> 00:02:37.080
Next, we want to increment the count number by one.

35
00:02:37.770 --> 00:02:39.570
So let me show you how I would do that.

36
00:02:40.440 --> 00:02:48.870
Right below this new line that we just wrote, let's create a variable named like Count, you could

37
00:02:48.870 --> 00:02:52.400
name it whatever you want, but let's set that to equal.

38
00:02:52.800 --> 00:02:57.770
And first, let's use query to fetch whatever the current number says.

39
00:02:58.170 --> 00:03:07.620
So to do that, I'll set this variable to equal current like box, which is the overall parent span

40
00:03:07.620 --> 00:03:10.560
element, and then let's say find.

41
00:03:11.040 --> 00:03:18.510
And that actual count number lives within an inner span that has a class of like Dasch count.

42
00:03:18.960 --> 00:03:24.720
OK, and then to fetch that number, we just want to get the HTML for that element.

43
00:03:25.080 --> 00:03:27.600
This line of code could potentially get fairly long.

44
00:03:27.630 --> 00:03:30.570
So right now, let's be sure to end the line with a semicolon.

45
00:03:30.900 --> 00:03:37.360
OK, so this code at the moment will indeed fetch the HTML value of zero.

46
00:03:37.590 --> 00:03:44.620
However, it's going to fetch zero as a string of text instead of an actual number or integer.

47
00:03:44.940 --> 00:03:51.630
So what we can do to convert this from a string of text into an actual number that we can perform mathematical

48
00:03:51.630 --> 00:03:57.450
operations on, is this right before this, let's say pass?

49
00:03:58.140 --> 00:04:04.920
And this is a JavaScript tool that will pass a string of text as a number within its parentheses.

50
00:04:04.930 --> 00:04:06.330
We want to give it to things.

51
00:04:06.330 --> 00:04:12.350
So A and B, the first argument is a string of text that you want to interpret as a number.

52
00:04:12.630 --> 00:04:16.580
And the second argument is a number that you want to use as your base.

53
00:04:16.890 --> 00:04:22.380
I won't get into the details of this argument, but I will tell you that almost nine times out of ten

54
00:04:22.680 --> 00:04:28.980
we want to set this to ten, because you and I are humans and humans tend to use a number system that

55
00:04:28.980 --> 00:04:30.580
is based around ten.

56
00:04:31.020 --> 00:04:35.910
OK, now back to the first argument, which is the string of text you want to interpret as a number.

57
00:04:36.330 --> 00:04:43.530
Let's just cut and paste this code to live here so I will select from the beginning of current all the

58
00:04:43.530 --> 00:04:46.570
way to the end of parentheses right after HTML.

59
00:04:47.070 --> 00:04:51.810
Let me cut that into my clipboard and then just replace the A placeholder.

60
00:04:53.250 --> 00:04:59.850
OK, so now we've got this variable named like Count, which is an actual number that represents the

61
00:04:59.850 --> 00:05:01.650
current number of likes.

62
00:05:01.890 --> 00:05:09.380
But if we just successfully created a new like post, now we want to increment or add one to that number.

63
00:05:09.690 --> 00:05:18.570
So on a new line right below that, let's just say like count plus plus in most programming languages,

64
00:05:18.570 --> 00:05:23.010
if you include plus plus after a number, that will increment it by one.

65
00:05:23.280 --> 00:05:28.680
OK, now finally, we want to output that new number into the HTML, right.

66
00:05:28.680 --> 00:05:30.690
We want to update the current number.

67
00:05:31.530 --> 00:05:40.800
So to do that, let's say current like box and let's look inside it and find the element that has a

68
00:05:40.800 --> 00:05:50.370
class of like Dasch count and then we want to update its HTML and what do we want to update it to our

69
00:05:50.370 --> 00:05:51.270
life count.

70
00:05:51.660 --> 00:05:51.960
Right.

71
00:05:51.960 --> 00:05:53.790
That variable that we've been creating.

72
00:05:54.480 --> 00:05:56.580
OK, let's go ahead and save this.

73
00:05:57.180 --> 00:06:02.910
Make sure that your JavaScript is getting rebundled and then back on the front end, be sure to perform

74
00:06:02.910 --> 00:06:04.470
a hard refresh.

75
00:06:05.710 --> 00:06:08.620
And let's test it out, so if I click the lightbox.

76
00:06:09.830 --> 00:06:10.490
Awesome.

77
00:06:10.940 --> 00:06:18.620
Now let's change gears and work on the ability to click on the box again to toggle or remove or delete

78
00:06:18.620 --> 00:06:24.530
your like for the current professor in the first step towards making that happen is for us to review

79
00:06:24.530 --> 00:06:27.810
our JavaScript that sends off the delete request.

80
00:06:28.220 --> 00:06:35.740
So back in our JavaScript, right below our create like method is our delete like method.

81
00:06:36.230 --> 00:06:40.730
So we've got an Ajax call that sending off a request to the same you URL.

82
00:06:41.060 --> 00:06:44.300
But this time the type of request is a delete.

83
00:06:44.760 --> 00:06:49.360
But the important question here is what exactly are we trying to delete?

84
00:06:49.760 --> 00:06:54.370
So we need to send along some sort of data concerning what we want to delete.

85
00:06:54.710 --> 00:07:02.030
So maybe right above this typed line, let's add a new line and say data column and then let's create

86
00:07:02.030 --> 00:07:07.030
a JavaScript object with curly brackets and be sure to end the line with a comma.

87
00:07:07.370 --> 00:07:12.320
And this is where we can send along a property to the server so we could make up whatever property name

88
00:07:12.320 --> 00:07:12.830
we want.

89
00:07:12.830 --> 00:07:16.250
But why don't we just say, like Colon?

90
00:07:16.250 --> 00:07:22.160
And then this is where we will include the ID number of the lightpost that we want to delete.

91
00:07:22.670 --> 00:07:29.930
But at the moment, our JavaScript has no way of magically knowing which like post or which ID we should

92
00:07:29.930 --> 00:07:30.450
delete.

93
00:07:30.800 --> 00:07:39.560
So let's go update our HTML so that the lightbox contains a data attribute, maybe named data dash like,

94
00:07:39.830 --> 00:07:44.570
and its value should be the ID number of the corresponding like post.

95
00:07:44.960 --> 00:07:52.450
So to edit this HTML, let's jump back into our text editor and open up a single dash.

96
00:07:52.460 --> 00:07:54.520
Professor P.

97
00:07:55.590 --> 00:08:02.600
And let's scroll down until we find the main span with a class of lightbox and maybe right after class,

98
00:08:02.610 --> 00:08:04.650
let's just give it another data attribute.

99
00:08:05.280 --> 00:08:12.560
So I will say data dash and you can name it whatever you want, but let's say like equals.

100
00:08:12.960 --> 00:08:20.250
And then within the quotes, let's drop in to BHP and echo out our exist query.

101
00:08:22.020 --> 00:08:22.380
Right.

102
00:08:22.380 --> 00:08:27.090
Because this will contain results if the current user has liked the current professor.

103
00:08:27.450 --> 00:08:31.620
And then let's look inside it for an array named posts.

104
00:08:32.130 --> 00:08:34.860
And we are interested in the first post in that array.

105
00:08:34.860 --> 00:08:36.870
So square brackets, zero.

106
00:08:37.200 --> 00:08:43.920
And then we want to look inside that post for the IDE and be sure to end this with a semicolon.

107
00:08:44.370 --> 00:08:46.040
OK, let's go ahead and save that.

108
00:08:46.500 --> 00:08:49.770
And now if I jump back to the front end and refresh.

109
00:08:50.890 --> 00:08:57.460
And then if I right, click on the like box and inspect, cool, there's our new data attribute data

110
00:08:57.460 --> 00:09:03.280
dash like if you have liked the current professor, this will contain a number that just happens to

111
00:09:03.280 --> 00:09:11.050
be the I.D. for the relevant like post or in other words, this is the ID number of the post that we

112
00:09:11.050 --> 00:09:12.070
want to delete.

113
00:09:12.520 --> 00:09:19.930
So with that in place back in our JavaScript are like JS file within our delete, like Ajax request

114
00:09:19.930 --> 00:09:23.680
for the data, let's say like should equal.

115
00:09:25.110 --> 00:09:33.840
Current like box, and then we are interested in an attribute, so dot 8r and the attribute is named

116
00:09:33.840 --> 00:09:42.150
data dash like, OK, and before we save this, if we are going to use the current lightbox variable

117
00:09:42.150 --> 00:09:47.960
within this method, we want to be sure to include it as a parameter within our function definition.

118
00:09:47.970 --> 00:09:52.740
So within these parentheses I will say current like box.

119
00:09:53.100 --> 00:09:54.540
OK, we can go ahead and save.

120
00:09:54.540 --> 00:10:01.440
Now, however, before we test out the ability to actually delete a post, I first want to cover something

121
00:10:01.440 --> 00:10:01.910
else.

122
00:10:02.280 --> 00:10:05.310
So if you manually refresh this page.

123
00:10:06.620 --> 00:10:12.800
And then if I right, click on the light box and choose, inspect, obviously our server side page template

124
00:10:13.940 --> 00:10:20.330
is responsible for outputting the lightpost ID, but what if we view a professor that we have not yet

125
00:10:20.330 --> 00:10:21.000
liked?

126
00:10:21.230 --> 00:10:27.320
So just as a quick example, if I go back into my admin dashboard and delete my existing like just as

127
00:10:27.320 --> 00:10:29.720
a quick test, so move them to the trash.

128
00:10:31.360 --> 00:10:33.160
Then I can even empty my trash.

129
00:10:34.920 --> 00:10:41.490
OK, in that case, if I refresh the page, obviously, since I have not liked this professor yet,

130
00:10:41.910 --> 00:10:47.930
when the page first loads that data attribute of data dash like is not going to contain a value.

131
00:10:48.180 --> 00:10:51.480
The reason that's a problem is if I like a professor.

132
00:10:52.560 --> 00:11:00.160
That updates are lightbox on the fly in real time, however, if I wanted to toggle or remove my like

133
00:11:00.300 --> 00:11:06.180
right now, again without refreshing the page, well, that's where the problem comes into play because

134
00:11:06.180 --> 00:11:09.310
that data dash like attribute is still empty.

135
00:11:09.510 --> 00:11:16.530
So what we need to do in order to let users toggle back and forth between liking and unlike in is when

136
00:11:16.530 --> 00:11:20.010
we create a like post within our success function.

137
00:11:20.010 --> 00:11:24.290
Let's just update this data dash like value on the fly.

138
00:11:24.600 --> 00:11:31.740
So to do that, back in our JavaScript, if we scroll up a bit back to our create like method within

139
00:11:31.740 --> 00:11:35.970
its Ajax call, let's focus on the success callback function.

140
00:11:36.240 --> 00:11:42.440
If a like post is successfully created, we are already filling in the heart, updating the number.

141
00:11:42.720 --> 00:11:49.020
So now below those lines and maybe right above the console log, let's add a new line and let's just

142
00:11:49.020 --> 00:11:54.930
say current like box and we want to work with one of its attributes.

143
00:11:54.930 --> 00:12:00.060
So dot a TTR first argument is the name of the attribute.

144
00:12:00.360 --> 00:12:06.210
So it's data dash like second argument is what you want to set its value to.

145
00:12:06.570 --> 00:12:13.410
And we can just say response because remember, if we successfully create a like post, the WordPress

146
00:12:13.410 --> 00:12:17.640
server sends back the ID number of that new post.

147
00:12:17.880 --> 00:12:20.910
That will be the response so we can go ahead and use that here.

148
00:12:21.150 --> 00:12:28.740
OK, and now why don't we set up an equal but opposite action within our delete like method, right?

149
00:12:28.740 --> 00:12:33.990
If we successfully delete the relevant like instead of changing the heart to be filled, then we would

150
00:12:33.990 --> 00:12:36.420
want to change the heart, to be a hollow outline.

151
00:12:36.690 --> 00:12:41.460
And instead of increasing the number by one, we would want to decrease the number by one.

152
00:12:42.000 --> 00:12:44.520
Basically just do the opposite of all of this.

153
00:12:45.120 --> 00:12:46.440
So here's what I'm going to do.

154
00:12:46.800 --> 00:12:52.760
Let's select from the beginning of this line down to the line, right above the console dialog.

155
00:12:53.280 --> 00:12:55.170
OK, let's copy that into our clipboard.

156
00:12:55.320 --> 00:13:01.710
And then if we scroll down to our delete like method within this Ajax call, let's focus on the success

157
00:13:01.710 --> 00:13:02.430
callback.

158
00:13:02.670 --> 00:13:09.060
So if we successfully delete a post right above this console, that log, let's just add a new line

159
00:13:09.270 --> 00:13:10.860
and paste in our clipboard.

160
00:13:11.940 --> 00:13:14.730
OK, then we just want to do the opposite of all of this, right.

161
00:13:14.730 --> 00:13:23.130
So we want to set data exists to know we want to get the current like amount, but then instead of increasing

162
00:13:23.130 --> 00:13:26.670
it by one, we want to decrease it by one.

163
00:13:26.670 --> 00:13:28.020
So minus minus.

164
00:13:28.260 --> 00:13:29.610
OK, this line is OK.

165
00:13:29.610 --> 00:13:36.360
We just want to update the HTML like count and then for the data dash like attribute instead of setting

166
00:13:36.360 --> 00:13:37.200
it to response.

167
00:13:37.200 --> 00:13:41.550
In this context, let's just set it to an empty pair of quotes, OK?

168
00:13:41.550 --> 00:13:47.310
And now the only thing are delete like method is missing is we need to give our Ajax called the secret

169
00:13:47.310 --> 00:13:50.370
non's code so that WordPress can trust us.

170
00:13:50.520 --> 00:13:56.670
So let's just scroll up to our create like method and within the Ajax call, just copy and paste the

171
00:13:56.670 --> 00:14:04.920
entire before send property then down in our delete like Ajax call maybe right before the URL line paste

172
00:14:04.920 --> 00:14:05.730
in your clipboard.

173
00:14:06.120 --> 00:14:12.630
OK, and now we only have one more minor JavaScript change before we can finally set up the server side

174
00:14:13.500 --> 00:14:14.610
delete function.

175
00:14:15.000 --> 00:14:16.110
So hang in there with me.

176
00:14:16.260 --> 00:14:22.980
If we scroll up to the very top of this JavaScript file within our hour click despatcher method.

177
00:14:23.250 --> 00:14:29.520
I do need to point out that the query data method only looks at the data attribute values once when

178
00:14:29.520 --> 00:14:31.160
the page first loads.

179
00:14:31.440 --> 00:14:37.620
So if we want our users to be able to toggle back and forth between liking and on liking, liking and

180
00:14:37.620 --> 00:14:41.130
unlike in the query, data method is not going to work here.

181
00:14:41.550 --> 00:14:45.720
So instead, let's delete that and just use the 8R method.

182
00:14:45.930 --> 00:14:52.710
And the only difference is that instead of looking for exists, we want to look for data dash exists.

183
00:14:53.010 --> 00:14:55.170
OK, so that's just a quick J query tip.

184
00:14:55.470 --> 00:15:01.230
If you want to pull in fresh updated attribute values, always use the 8R method.

185
00:15:01.500 --> 00:15:05.730
OK, now as promised, let's go ahead and save this JavaScript file.

186
00:15:06.090 --> 00:15:11.910
And now the final piece of our puzzle is to set up the server side delete function.

187
00:15:12.120 --> 00:15:18.870
So within our theme folders I n c folder, let's jump into like Dasch route and if we scroll down to

188
00:15:18.870 --> 00:15:22.590
the very bottom, we can find our delete like function.

189
00:15:23.040 --> 00:15:28.980
Lets go ahead and delete this placeholder return line and let's begin by setting up a variable.

190
00:15:29.250 --> 00:15:36.150
The name does not matter, but I'm going to name it like I said, and I'm going to set this to equal

191
00:15:36.330 --> 00:15:40.950
whatever ide the incoming JavaScript request has sent along.

192
00:15:40.980 --> 00:15:43.980
But first I want to sanitize it before working with it.

193
00:15:43.980 --> 00:15:50.250
So sanitized text field and what do I want to sanitize.

194
00:15:51.210 --> 00:15:51.930
Data.

195
00:15:52.170 --> 00:15:59.340
Which is a rare look inside the array for like you just want this to match the name of the property

196
00:15:59.520 --> 00:16:01.470
that you're sending from your JavaScript.

197
00:16:01.680 --> 00:16:06.990
OK, and if I want to be able to access the data array from within this function, I want to be sure

198
00:16:06.990 --> 00:16:08.640
to include it as a parameter.

199
00:16:09.150 --> 00:16:10.260
So say data.

200
00:16:11.440 --> 00:16:17.260
OK, cool, so now we've got the idea of the post that we want to delete, so on a new line we can just

201
00:16:17.260 --> 00:16:24.550
say WPE delete posts, then these parentheses, we give it to arguments.

202
00:16:24.820 --> 00:16:29.080
The first argument is obviously the idea of the post that you want to delete.

203
00:16:29.440 --> 00:16:34.360
And the second argument is if you want to send it to the trash first or if you just want to skip the

204
00:16:34.360 --> 00:16:36.190
trash and completely delete it.

205
00:16:36.580 --> 00:16:39.810
If you say true, you are skipping the trash step.

206
00:16:40.180 --> 00:16:46.360
Now, I need to point out that this is the most insecure code perhaps ever written in the history of

207
00:16:46.360 --> 00:16:47.150
WordPress.

208
00:16:47.410 --> 00:16:54.520
So before we save this, we definitely need to wrap this line of code within an IF statement because

209
00:16:54.520 --> 00:17:01.000
we are creating a custom API endpoint, which means the rest API is not going to babysit permissions

210
00:17:01.000 --> 00:17:01.710
for us.

211
00:17:01.990 --> 00:17:04.580
We need to set up our own basic permission check.

212
00:17:04.780 --> 00:17:05.930
Let me show you what I mean.

213
00:17:05.950 --> 00:17:11.260
So go ahead and cut this line into your clipboard so that we have it ready, but we are temporarily

214
00:17:11.260 --> 00:17:12.040
removing it.

215
00:17:13.090 --> 00:17:14.620
And let's write an if statement.

216
00:17:14.630 --> 00:17:25.240
So if parentheses, curly brackets and for the condition check, let's say only if we get current user

217
00:17:25.240 --> 00:17:32.700
I.D. equals and then let's say the author ID of the post that they are trying to delete.

218
00:17:32.920 --> 00:17:37.060
So that way a malicious user can't just go around deleting whatever post they feel like.

219
00:17:37.180 --> 00:17:40.730
Instead they can only delete something if they're the one who created it.

220
00:17:41.110 --> 00:17:49.930
So if the current user ID matches and then let's say get post field and you give this to arguments,

221
00:17:50.110 --> 00:17:54.850
the second argument is the idea of the post that you want information about.

222
00:17:55.300 --> 00:18:02.860
So let's say like I'd write that variable we created and the first argument is what information you

223
00:18:02.860 --> 00:18:04.200
want about that post.

224
00:18:04.900 --> 00:18:11.950
So let's just say post author and we could even be a bit more restrictive with the if statement.

225
00:18:12.190 --> 00:18:19.780
And in between these two closing parentheses, we could say, and let's make sure that we get post type

226
00:18:20.830 --> 00:18:23.260
of whatever ide they're trying to delete.

227
00:18:23.530 --> 00:18:30.070
Let's make sure that that equals like OK, so if both of those things are true, then within the if

228
00:18:30.070 --> 00:18:35.980
statement we can paste in our clipboard and then right after the if closing curly brackets let's say

229
00:18:35.980 --> 00:18:40.000
else, otherwise let's cancel the current request.

230
00:18:40.000 --> 00:18:47.110
So die and return a message of you do not have permission to delete that.

231
00:18:47.590 --> 00:18:52.500
And just as a best practice, why don't we make sure to return something within the success area?

232
00:18:52.720 --> 00:18:59.920
So after we delete the post right below that line, we can say return congrats like deleted.

233
00:19:00.670 --> 00:19:05.140
Be sure to end the line with a semicolon and let's save this and test it out.

234
00:19:05.650 --> 00:19:08.200
So perform a hard refresh on the front end.

235
00:19:08.650 --> 00:19:13.360
I've already liked Dr. Rogerson's, so if I click on the box, cool.

236
00:19:13.360 --> 00:19:17.950
It deletes my like but I could click it again to add the like back.

237
00:19:18.190 --> 00:19:23.830
And now if I open this same page and another window where I'm logged in with my subscriber account,

238
00:19:24.160 --> 00:19:27.370
we see a count of one because the admin account liked it.

239
00:19:27.370 --> 00:19:32.230
And if I click on it with my subscriber account that boosts it up to two.

240
00:19:32.710 --> 00:19:35.950
Or I could click it again to toggle it back down to one.

241
00:19:36.310 --> 00:19:37.060
Beautiful.

242
00:19:37.180 --> 00:19:41.380
And that's going to bring this lesson and this section to a close.

243
00:19:41.680 --> 00:19:45.010
Let's keep things rolling and I will see you in the next section.
