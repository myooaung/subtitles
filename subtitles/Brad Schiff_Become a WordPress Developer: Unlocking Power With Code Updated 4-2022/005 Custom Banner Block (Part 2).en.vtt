WEBVTT
1
00:00:00.300 --> 00:00:00.650
Cool.

2
00:00:00.660 --> 00:00:07.500
So right now let's move forward and let's start creating our first custom block in our fictional block

3
00:00:07.500 --> 00:00:08.310
theme folder.

4
00:00:09.030 --> 00:00:11.400
Let's go ahead and create a subfolder.

5
00:00:11.580 --> 00:00:12.720
Now the name doesn't matter.

6
00:00:12.720 --> 00:00:19.140
You could make up any name, but just so we're on the same page, let's name this subfolder our dash

7
00:00:19.410 --> 00:00:20.310
blocks.

8
00:00:21.150 --> 00:00:24.330
So inside the our blocks folder, let's create a new file.

9
00:00:25.500 --> 00:00:28.950
Why don't we make up a name of banner dot js?

10
00:00:29.850 --> 00:00:33.780
From here, let's write a little bit of boilerplate code to set up a new block.

11
00:00:33.780 --> 00:00:34.980
So wp.

12
00:00:35.190 --> 00:00:41.700
Now I want to type wp dot but vs code is trying to auto suggest different things so you actually have

13
00:00:41.700 --> 00:00:44.820
to press escape and then dot.

14
00:00:45.540 --> 00:00:45.720
So.

15
00:00:45.720 --> 00:00:46.350
WP.

16
00:00:46.350 --> 00:00:47.520
Dot blocks.

17
00:00:47.850 --> 00:00:50.190
Dot register.

18
00:00:50.760 --> 00:00:51.750
BLOCK type.

19
00:00:52.380 --> 00:00:54.300
We're calling that function in the parentheses.

20
00:00:54.300 --> 00:00:55.530
We're going to give it two things.

21
00:00:55.530 --> 00:00:56.690
So a comma B.

22
00:00:57.180 --> 00:00:59.310
The first thing we're going to give it is a name.

23
00:00:59.460 --> 00:01:00.330
So quotes.

24
00:01:00.510 --> 00:01:04.020
Now let's make up a name space that all of our blocks will use.

25
00:01:04.350 --> 00:01:08.250
I'm going to make up a name space of maybe our block theme.

26
00:01:08.520 --> 00:01:14.400
So that's the name space and then forward slash and now the name of this specific block.

27
00:01:14.490 --> 00:01:16.530
So how about just banner?

28
00:01:17.310 --> 00:01:17.670
Cool.

29
00:01:17.850 --> 00:01:22.830
Now the second argument that we provide here, so instead of the B placeholder, it would just be an

30
00:01:22.830 --> 00:01:24.790
object with a few options.

31
00:01:24.810 --> 00:01:27.030
So in the curly brackets, let's drop down.

32
00:01:27.030 --> 00:01:29.040
Let's give it a title property.

33
00:01:29.430 --> 00:01:32.370
How about just banner comma?

34
00:01:33.030 --> 00:01:34.830
Let's give it a property of edit.

35
00:01:35.880 --> 00:01:40.830
Let's point towards a function that doesn't exist, but a function that we'll set up and create in about

36
00:01:40.980 --> 00:01:42.090
20 seconds from now.

37
00:01:42.270 --> 00:01:45.750
Let's call it edit component comma.

38
00:01:46.320 --> 00:01:49.020
Let's have a property named Save Colon.

39
00:01:49.050 --> 00:01:52.860
Let's also set that to a function that doesn't exist yet, but we can create in just a moment.

40
00:01:52.860 --> 00:01:55.470
So maybe save component.

41
00:01:55.680 --> 00:01:56.100
Cool.

42
00:01:56.310 --> 00:01:57.860
Now let's go create those functions.

43
00:01:57.870 --> 00:02:00.920
So down below all of the other code function.

44
00:02:01.560 --> 00:02:04.110
Edit component parentheses.

45
00:02:04.110 --> 00:02:12.540
Curly brackets do the same thing for function save component in terms of what our block outputs or saves

46
00:02:12.540 --> 00:02:12.750
for.

47
00:02:12.750 --> 00:02:15.750
Now, we can circle back to this later, but for now let's just have it.

48
00:02:15.750 --> 00:02:17.940
Return a paragraph.

49
00:02:17.940 --> 00:02:18.750
So a p tag.

50
00:02:18.780 --> 00:02:22.890
Opening and closing that says this is from our block.

51
00:02:23.580 --> 00:02:27.780
Again, we will circle back to this and actually return or generate HTML.

52
00:02:27.780 --> 00:02:30.780
That makes sense, but this will just be a placeholder for now.

53
00:02:31.200 --> 00:02:31.530
Cool.

54
00:02:31.740 --> 00:02:37.950
Now, in terms of the edit component, we want this to return a bit of HTML or js.

55
00:02:38.700 --> 00:02:41.700
That will create this visual appearance.

56
00:02:41.730 --> 00:02:42.720
Mean go back to the homepage.

57
00:02:42.870 --> 00:02:44.720
That will create this appearance.

58
00:02:45.660 --> 00:02:45.960
Right.

59
00:02:45.960 --> 00:02:46.560
The banner.

60
00:02:47.220 --> 00:02:50.340
So let me show you what I would do inside the edit component function.

61
00:02:50.340 --> 00:02:54.120
This is what's going to show up in the admin editor, the block editor screen.

62
00:02:54.120 --> 00:02:59.100
Let's just say return now parentheses for multiple lines of x.

63
00:02:59.430 --> 00:03:03.780
In between the parentheses we can drop down and now we don't need to reinvent the wheel.

64
00:03:04.140 --> 00:03:11.460
We already have this HTML laying around, so let's just copy and paste it and then adjust it to work

65
00:03:11.460 --> 00:03:12.660
as JSA X.

66
00:03:13.230 --> 00:03:19.350
So within the WordPress directory for this website, if we go into WB content themes, you and I have

67
00:03:19.350 --> 00:03:23.550
already created a fictional university theme together, step by step.

68
00:03:23.730 --> 00:03:25.620
So let's just dig in to that folder.

69
00:03:26.790 --> 00:03:30.510
Or better yet, let's just open up that folder entirely in verse code.

70
00:03:31.230 --> 00:03:31.590
Cool.

71
00:03:31.590 --> 00:03:35.970
So this window is the traditional fictional university theme in this folder.

72
00:03:35.970 --> 00:03:38.790
Just jump into front page, top up.

73
00:03:39.480 --> 00:03:44.730
And my point here is that we've already set this up, this page banner area, right?

74
00:03:44.730 --> 00:03:47.340
So from lines three, two lines 11.

75
00:03:47.700 --> 00:03:54.090
Just copy that into your clipboard and then back in the JavaScript file that we're creating together.

76
00:03:55.140 --> 00:03:56.010
When we're returning.

77
00:03:56.010 --> 00:03:58.950
And then inside the parentheses, just paste in your clipboard.

78
00:03:59.640 --> 00:04:05.190
And now we just need to adjust this a little bit so that it works as just X instead of HTML.

79
00:04:05.640 --> 00:04:07.170
So, first of all, enjoy sex.

80
00:04:07.170 --> 00:04:08.820
You can't say class equals.

81
00:04:08.850 --> 00:04:10.270
It needs to be class.

82
00:04:10.290 --> 00:04:11.640
Name equals.

83
00:04:12.150 --> 00:04:17.820
So what I like to do is just select the first instance of class and then you can press control D on

84
00:04:17.820 --> 00:04:24.090
windows or command D on Mac and just press that again and again and again until you've selected all

85
00:04:24.090 --> 00:04:26.310
instances of class like this.

86
00:04:26.910 --> 00:04:31.380
At this point, you could retype in class, or you can just press the right facing arrow key on your

87
00:04:31.380 --> 00:04:33.930
keyboard and then type in uppercase name.

88
00:04:34.930 --> 00:04:35.200
Well.

89
00:04:35.470 --> 00:04:36.940
So all of those have been fixed.

90
00:04:37.360 --> 00:04:41.140
Next, right before the closing, divs, we see an element, a link.

91
00:04:41.440 --> 00:04:45.520
Let's just change the ref to no longer use P for now.

92
00:04:45.520 --> 00:04:49.390
Just change the ref value to be a hashtag placeholder like this.

93
00:04:50.110 --> 00:04:55.720
And then finally, I believe the only other change we need to make is on this second opening div with

94
00:04:55.720 --> 00:04:57.220
a class of page banner.

95
00:04:57.220 --> 00:04:57.940
Big image.

96
00:04:58.120 --> 00:05:02.140
We need to address an inline style syntax in gsx.

97
00:05:02.860 --> 00:05:06.730
First of all, let's hollow this out so that it no longer uses PE at all.

98
00:05:06.760 --> 00:05:10.800
So inside the URL, get rid of this opening p tag.

99
00:05:10.840 --> 00:05:12.910
Get rid of the echo and the git theme file.

100
00:05:12.920 --> 00:05:15.370
You are right in the opening parentheses.

101
00:05:16.000 --> 00:05:16.980
I'm getting rid of that.

102
00:05:16.990 --> 00:05:20.470
So now it's just you URL opening parentheses quotes.

103
00:05:20.860 --> 00:05:27.520
And then after the dot jpeg quote, get rid of this closing parentheses and this closing p tag.

104
00:05:28.390 --> 00:05:31.900
So now this is just valid CSS that isn't using PHP at all.

105
00:05:32.320 --> 00:05:38.950
However, now we need to convert it from literal CC into a JavaScript object that will work with JSF.

106
00:05:39.640 --> 00:05:43.600
So let's get rid of the semicolon at the end of the line of CC here.

107
00:05:44.080 --> 00:05:44.530
Okay.

108
00:05:44.560 --> 00:05:45.280
Next.

109
00:05:45.460 --> 00:05:49.140
Instead of this being a string of text, we need it to be an object.

110
00:05:49.150 --> 00:05:52.860
So when it says style equals, it's no longer quotes.

111
00:05:52.870 --> 00:05:54.040
Get rid of the opening quote.

112
00:05:54.370 --> 00:05:56.620
It's to opening curly brackets.

113
00:05:56.800 --> 00:06:00.820
So the first is to just include JavaScript data in JSF.

114
00:06:01.390 --> 00:06:04.210
The second is for an object of styles.

115
00:06:04.630 --> 00:06:10.240
So at the end here, get rid of the closing double quote and just have two closing curly brackets.

116
00:06:10.870 --> 00:06:11.230
Okay.

117
00:06:11.470 --> 00:06:15.550
Next, there is no such thing as background dash image in JSF.

118
00:06:15.820 --> 00:06:20.120
Instead it's background squished together all one word uppercase.

119
00:06:20.140 --> 00:06:23.410
I image like this background image.

120
00:06:23.800 --> 00:06:26.960
Next for the value it needs to be a string of text.

121
00:06:27.700 --> 00:06:35.770
So I'm going to place a double quote at the start of the URL and then after the dot jpeg quote parentheses

122
00:06:35.770 --> 00:06:37.990
right here, I'll have a double quote.

123
00:06:38.260 --> 00:06:42.640
Now, in terms of the path where we're actually trying to point towards to find this image.

124
00:06:43.480 --> 00:06:48.140
Right, this background image here, well, let's just look in our theme folder.

125
00:06:48.160 --> 00:06:54.100
Now, we don't have that image in our current theme folder, but let's just borrow it from the fictional

126
00:06:54.100 --> 00:06:56.320
university theme that we've already created.

127
00:06:56.740 --> 00:07:01.570
So in other words, in about 30 seconds from now, we can create a folder named images that will be

128
00:07:01.570 --> 00:07:05.470
sitting right here and they will have a JPEG named Library Hero.

129
00:07:06.070 --> 00:07:10.830
But to make that work at the start of this path, we would just point to the beginning of our domain

130
00:07:10.840 --> 00:07:15.460
and then WP dash content slash themes and then the name of your theme.

131
00:07:15.460 --> 00:07:17.590
So fictional block theme.

132
00:07:18.010 --> 00:07:18.730
Now don't worry.

133
00:07:19.120 --> 00:07:25.630
Later on we will make this dynamic so that the user can upload a new image in the editor screen or choose

134
00:07:25.630 --> 00:07:27.640
an image that's in their media library.

135
00:07:27.940 --> 00:07:31.780
But for this lesson, just to get something up and running, this should do the trick.

136
00:07:32.470 --> 00:07:37.360
If your installation of WordPress doesn't live at the root of your domain and it lives in a subfolder,

137
00:07:37.540 --> 00:07:43.300
then obviously account for that at the beginning of this URL path that we're temporarily hard coding.

138
00:07:43.750 --> 00:07:43.960
Right?

139
00:07:43.970 --> 00:07:46.720
This is not production ready code, but for now, that's okay.

140
00:07:47.260 --> 00:07:47.620
Cool.

141
00:07:47.620 --> 00:07:48.970
Let's go ahead and give that a save.

142
00:07:49.210 --> 00:07:50.890
And now we need to do two things.

143
00:07:51.280 --> 00:07:55.090
Number one, we need to have an images folder in our theme now.

144
00:07:55.660 --> 00:08:03.370
But number two, we need a way to transport all this gsx into regular JavaScript that the web browser

145
00:08:03.370 --> 00:08:07.210
can understand in order to accomplish both of those things.

146
00:08:07.450 --> 00:08:12.610
Let's just go borrow some files and folders from our traditional fictional university theme.

147
00:08:13.300 --> 00:08:18.640
So in WP content themes, here is the original traditional theme that we built together.

148
00:08:18.970 --> 00:08:20.770
Let's just dig into that folder.

149
00:08:21.280 --> 00:08:21.700
Okay.

150
00:08:21.850 --> 00:08:25.990
Now, in this window, this is the new theme, the block theme that we're building.

151
00:08:25.990 --> 00:08:32.680
We only have these basic files so far, and we just want to move over a few files and folders into the

152
00:08:32.680 --> 00:08:33.340
new folder.

153
00:08:33.820 --> 00:08:36.280
So do this with me in our traditional theme folder.

154
00:08:36.280 --> 00:08:43.990
Let's move over the build folder, the CSC folder, the images folder, the I.N.S. folder template parts

155
00:08:43.990 --> 00:08:46.180
folder and the SRT folder.

156
00:08:46.180 --> 00:08:53.350
So just every single subfolder in our original theme, just move those over or copy and paste or duplicate

157
00:08:53.350 --> 00:08:55.330
those over into our new theme.

158
00:08:55.930 --> 00:09:00.130
So I'm just going to alt drag those into my new theme folder.

159
00:09:00.700 --> 00:09:00.940
Right.

160
00:09:00.940 --> 00:09:05.350
So in our new block theme now all those folders show up in the sidebar.

161
00:09:05.920 --> 00:09:11.020
I also want you to move over to individual files from the old original theme.

162
00:09:11.500 --> 00:09:15.610
So, number one, I want you to move over functions, TCP IP.

163
00:09:16.000 --> 00:09:20.350
And number two, I want you to move over package JSON.

164
00:09:20.680 --> 00:09:25.370
So those two files package that JSON functions dot B, I'll move those over as well.

165
00:09:25.930 --> 00:09:26.230
Okay.

166
00:09:26.230 --> 00:09:28.870
Now, those are all of the files that we need to move at this point.

167
00:09:28.870 --> 00:09:32.170
I know there's a lot of moving pieces, so let me discuss what everything is.

168
00:09:32.590 --> 00:09:34.510
First of all, in package dot JSON.

169
00:09:34.900 --> 00:09:39.700
If you were starting fresh and you weren't converting an existing traditional theme, you wouldn't need

170
00:09:39.700 --> 00:09:42.550
to copy over an existing packaged JSON file.

171
00:09:42.880 --> 00:09:46.300
I'm just copying this over because it has basic scripts.

172
00:09:46.510 --> 00:09:49.360
For example, this powers the home page slideshow.

173
00:09:49.900 --> 00:09:51.610
This is the base of my CSA.

174
00:09:51.880 --> 00:09:55.470
This is what I'm using to perform network requests, so on and so forth.

175
00:09:55.480 --> 00:09:57.490
But these are all opinionated choices.

176
00:09:57.880 --> 00:10:04.390
The only package that you truly need here is at simple WordPress slash scripts.

177
00:10:05.110 --> 00:10:09.610
But I brought over the entire file because we're working on the same theme, right?

178
00:10:09.610 --> 00:10:11.770
So we're going to want these same dependencies.

179
00:10:12.340 --> 00:10:12.710
Okay.

180
00:10:12.730 --> 00:10:15.460
Other than that, you might be wondering, hey, why did we move over?

181
00:10:15.580 --> 00:10:19.750
Functions dot php don't block themes not use php.

182
00:10:20.050 --> 00:10:22.270
Well, no, they absolutely use PHP.

183
00:10:22.450 --> 00:10:28.600
In fact, if you go in to the official 2022 theme, you'll see that it indeed has a functioning TCP

184
00:10:28.960 --> 00:10:29.620
IP file.

185
00:10:29.980 --> 00:10:35.830
Just like always, that's how you can run certain actions or certain filters you can hook on to all

186
00:10:35.830 --> 00:10:37.720
sorts of different WordPress events.

187
00:10:38.230 --> 00:10:38.450
Right.

188
00:10:38.470 --> 00:10:40.270
That's where you enable certain features.

189
00:10:40.540 --> 00:10:40.870
Really?

190
00:10:40.870 --> 00:10:43.210
That's where you customize anything and everything.

191
00:10:43.210 --> 00:10:48.340
So that hasn't changed at all in the move from a traditional theme to a block theme.

192
00:10:48.880 --> 00:10:49.270
Cool.

193
00:10:49.570 --> 00:10:50.470
Now let's move forward.

194
00:10:50.800 --> 00:10:51.970
So here's what we want to do.

195
00:10:52.360 --> 00:10:56.080
We can get rid of the build task within our package dot JSON file.

196
00:10:56.110 --> 00:10:58.510
So jump into packages that JSON if you haven't already.

197
00:10:58.930 --> 00:11:00.340
Get rid of the build task.

198
00:11:00.670 --> 00:11:03.050
The only reason we're getting rid of it is just temporarily.

199
00:11:03.280 --> 00:11:06.490
And that's because we want to start modifying the START script.

200
00:11:07.180 --> 00:11:09.220
Let me explain what in the world I'm talking about.

201
00:11:09.430 --> 00:11:16.960
So by default, the app WordPress Scripts package is going to look in your CRC folder for a file named

202
00:11:16.960 --> 00:11:17.830
index dot.

203
00:11:17.830 --> 00:11:19.000
Jess Right.

204
00:11:19.000 --> 00:11:21.880
And it's going to do trans pile it, bundle it up.

205
00:11:22.270 --> 00:11:23.740
It'll take care of everything for you.

206
00:11:23.950 --> 00:11:30.820
However, we also want to tell it to look in our custom folder of our blocks and we want it to look

207
00:11:30.820 --> 00:11:32.440
at our banner dot JSE file.

208
00:11:32.800 --> 00:11:35.860
So here's what you can do on the start task.

209
00:11:36.280 --> 00:11:42.850
Let's say WP scripts start, but then we want to manually spell out which files to work with.

210
00:11:43.180 --> 00:11:49.630
So yes, we do still want to look in the CRC folder for index JS, but then a space.

211
00:11:49.870 --> 00:11:55.490
We also want to work with our dash blocks slash banner dot Jess.

212
00:11:55.930 --> 00:12:02.080
This way we're getting all of that great automatic WordPress scripts functionality, but we can have

213
00:12:02.080 --> 00:12:07.630
multiple files, multiple entry points leading to multiple output files.

214
00:12:07.900 --> 00:12:13.870
So check this out if we save this file, but now we just need to run NPM install, so we just need to

215
00:12:13.870 --> 00:12:14.890
run that once.

216
00:12:15.220 --> 00:12:19.030
It's going to install all of the dependencies from our package, that JSON file.

217
00:12:19.780 --> 00:12:22.970
Once that finishes now we can just run the start task.

218
00:12:22.990 --> 00:12:26.290
So just NPM run start.

219
00:12:27.280 --> 00:12:31.390
Now as soon as that finishes, well, it's going to continue to run in the background, watching for

220
00:12:31.390 --> 00:12:31.870
changes.

221
00:12:31.870 --> 00:12:34.430
But as soon as the initial processing finishes.

222
00:12:34.750 --> 00:12:40.570
Now you can look in the build folder and you'll see that there's a file named -- Dot Jess.

223
00:12:40.870 --> 00:12:47.500
So this has trans piled our JS acts into regular JavaScript that the browser can understand.

224
00:12:47.920 --> 00:12:56.350
So now we just need to register our custom block type to use this JavaScript asset in the editor to

225
00:12:56.350 --> 00:12:57.310
make that happen.

226
00:12:57.490 --> 00:13:00.820
We just need to jump in to our functions dot AP file.

227
00:13:01.210 --> 00:13:03.250
So functions dot b.

228
00:13:03.850 --> 00:13:11.830
Let's scroll down to the very, very bottom and we want to add an action on the init hook and let's

229
00:13:11.830 --> 00:13:18.930
just name the function banner block semicolon, create a function with that names or function banner

230
00:13:18.940 --> 00:13:19.570
block.

231
00:13:20.410 --> 00:13:24.400
First we want to register a JavaScript file, then we want to register a block type.

232
00:13:24.400 --> 00:13:28.510
So WP register script semicolon.

233
00:13:29.050 --> 00:13:31.320
In the parentheses we're going to give it three things.

234
00:13:31.330 --> 00:13:33.430
So first we give it a name.

235
00:13:33.700 --> 00:13:37.510
And this is not the name of the block, this is the name of just the JavaScript asset.

236
00:13:37.510 --> 00:13:40.450
So we could call it banner block script.

237
00:13:41.020 --> 00:13:43.840
The second thing we give it is a path to the JavaScript file.

238
00:13:43.870 --> 00:13:52.540
So let's say get style sheet directory, you try parentheses to call that concatenate on.

239
00:13:52.550 --> 00:14:00.640
So period quotes look inside the build folder slash build slash banner dot Jess.

240
00:14:01.060 --> 00:14:04.440
The third and final thing we give it is an array of dependencies.

241
00:14:04.450 --> 00:14:12.280
So array lets say quotes wp dash blocks, comma quotes wp dash editor.

242
00:14:12.820 --> 00:14:14.200
Then on a new line of code.

243
00:14:14.200 --> 00:14:17.710
Now that we've registered the JavaScript file, we can register our block type.

244
00:14:17.710 --> 00:14:21.850
So register block type semicolon.

245
00:14:22.030 --> 00:14:23.410
We're going to give it two things.

246
00:14:23.410 --> 00:14:26.080
The first thing we give it is the name, space and a name.

247
00:14:26.110 --> 00:14:33.220
So let's say our block theme, remember, that's the namespace we chose earlier, slash the name of

248
00:14:33.220 --> 00:14:34.330
this specific block.

249
00:14:34.510 --> 00:14:35.020
Banner.

250
00:14:35.740 --> 00:14:37.660
The second thing we give it is an array.

251
00:14:37.780 --> 00:14:40.810
So array parentheses you can drop down.

252
00:14:40.810 --> 00:14:47.890
We only need to give it one property of editor script and just set that to equal the name we chose here.

253
00:14:47.890 --> 00:14:51.430
So quotes banner block script.

254
00:14:52.090 --> 00:14:57.910
We can give this a save and then back in the admin dashboard, we need to switch to our new theme because

255
00:14:57.910 --> 00:14:59.650
I was still using the traditional theme.

256
00:14:59.650 --> 00:15:00.400
So appearance.

257
00:15:00.400 --> 00:15:02.590
Let me switch to the block theme activated.

258
00:15:03.160 --> 00:15:06.970
Go and do a blog post and just start creating a post or editing a post.

259
00:15:07.480 --> 00:15:13.000
And if I try to add a new block here and type slash and start searching for banner, there you see it

260
00:15:13.000 --> 00:15:15.250
in if I try to use it, cool.

261
00:15:15.250 --> 00:15:18.220
There is the content, but it's missing our styling.

262
00:15:18.220 --> 00:15:21.340
R c ss This is really easy to fix.

263
00:15:21.340 --> 00:15:27.730
We just go back into functions dot b search for our function named university features.

264
00:15:28.210 --> 00:15:34.960
Within this function, let's add a new line and say add theme support semicolon.

265
00:15:35.350 --> 00:15:39.940
The thing we want to enable is called quotes editor dash styles.

266
00:15:40.480 --> 00:15:45.310
Now again, if you were building a separate plug in instead of this unified theme approach I'm taking,

267
00:15:45.520 --> 00:15:50.170
you wouldn't load your site wide cc in the admin like this, right?

268
00:15:50.170 --> 00:15:57.280
You would take the time to split out just the success that you need just to power this one block Right.

269
00:15:57.280 --> 00:16:01.780
And then you would load the assets individually, just like we did in the chapter when we built our

270
00:16:01.780 --> 00:16:05.140
independent standalone plug ins with of a block type.

271
00:16:05.590 --> 00:16:11.560
In this case, we don't want to take the time to split out all of the success that has already been

272
00:16:11.560 --> 00:16:14.230
written for this existing theme, right?

273
00:16:14.230 --> 00:16:18.610
We already have perfect CC that has all of the styles we want.

274
00:16:18.850 --> 00:16:23.320
So I'm just going to load that entire bit of CC in the admin block.

275
00:16:23.320 --> 00:16:30.460
Editor So to do this right below this line we just added, you say add editor style, parentheses,

276
00:16:30.460 --> 00:16:33.070
semicolon, and now we can give this an array.

277
00:16:33.550 --> 00:16:34.210
So quotes.

278
00:16:34.270 --> 00:16:41.350
The first item will be look in the build folder for style dash index access comma quotes, look in the

279
00:16:41.350 --> 00:16:44.590
build folder for simply indexed.

280
00:16:44.800 --> 00:16:51.370
But then at the very beginning, let's add in a Google address that will pull in the custom Google fonts

281
00:16:52.030 --> 00:16:54.520
to find the Google address you want to copy and paste.

282
00:16:54.670 --> 00:17:00.280
Just scroll up a bit and you're just looking for this custom Google Fonts line around line 51, and

283
00:17:00.280 --> 00:17:01.990
this is the address we're interested in.

284
00:17:01.990 --> 00:17:04.210
So it begins with slash slash.

285
00:17:04.720 --> 00:17:06.580
Just highlight to the end of that address.

286
00:17:06.580 --> 00:17:09.820
It ends in 700 I so I'll copy that.

287
00:17:10.510 --> 00:17:14.830
Then back down in the array of styles we're trying to load, we want the very first one.

288
00:17:14.830 --> 00:17:20.320
So another pair of quotes, comma, just paste in that value, but make sure that the beginning of it

289
00:17:20.320 --> 00:17:25.480
begins with each piece colon, slash, slash, just like this.

290
00:17:26.810 --> 00:17:30.950
If we give that a save, we can then refresh the block editor screen.

291
00:17:34.660 --> 00:17:34.960
Woops.

292
00:17:34.960 --> 00:17:36.250
Let me add in that block again.

293
00:17:36.250 --> 00:17:37.450
I didn't save my content.

294
00:17:37.450 --> 00:17:40.450
So if I add in the banner block, perfect.

295
00:17:41.140 --> 00:17:46.660
We loaded our entire global stylesheet that already existed and it's already perfect and it's not being

296
00:17:46.660 --> 00:17:49.810
applied to the outer shell, the outer UI of the admin.

297
00:17:50.050 --> 00:17:53.740
It's only being applied to the actual editor content.

298
00:17:54.220 --> 00:17:58.930
So while I wouldn't use this approach if I was creating actual, you know, plug in block types to be

299
00:17:58.930 --> 00:18:05.080
distributed to a wide audience, I really like this approach for building sort of a content management

300
00:18:05.080 --> 00:18:10.930
system, bespoke website for a client, right, where maybe you're using something like Tailwind CC

301
00:18:10.960 --> 00:18:13.000
and you're really authoring custom.

302
00:18:13.000 --> 00:18:14.530
CC Right.

303
00:18:14.530 --> 00:18:16.660
And you're not styling everything for each block.

304
00:18:16.660 --> 00:18:22.600
You have a lot of reusable utility classes, so you're just going to end up with one global CSV file

305
00:18:22.750 --> 00:18:27.190
that you can use on both the front end and the what you see is what you get.

306
00:18:27.190 --> 00:18:32.140
Ed I've had really good luck with this approach, but as always, there's ten or 100 different ways

307
00:18:32.140 --> 00:18:37.540
to achieve something in WordPress anyways that's going to bring this lesson to a close.

308
00:18:37.720 --> 00:18:43.420
In our very next lesson, we're going to begin to make this content so that you can actually click on

309
00:18:43.420 --> 00:18:49.000
it and begin, you know, back spacing and typing in custom values, choosing custom colors or a custom

310
00:18:49.000 --> 00:18:51.430
background image, so on and so forth.

311
00:18:51.730 --> 00:18:53.950
Let's keep things rolling and I'll see you then.
