WEBVTT
1
00:00:02.040 --> 00:00:09.360
Hello, everyone, this challenge video has less to do with programming and coding and more to do with

2
00:00:09.360 --> 00:00:12.580
the big picture of maintaining your live Web site.

3
00:00:12.840 --> 00:00:19.950
I'm challenging you to make sure you have an update plan in place because keeping a WordPress website

4
00:00:19.950 --> 00:00:23.520
updated is 99 percent of the security battle.

5
00:00:23.880 --> 00:00:29.540
Sometimes WordPress gets an unfair reputation of being insecure and easy to hack.

6
00:00:29.850 --> 00:00:35.220
However, I would say that WordPress is incredibly secure, but only if you keep it updated.

7
00:00:35.490 --> 00:00:43.530
The moment a live WordPress website becomes outdated, it's almost a 100 percent guarantee that it will

8
00:00:43.530 --> 00:00:44.280
get hacked.

9
00:00:44.520 --> 00:00:46.110
It's not even a question of if.

10
00:00:46.110 --> 00:00:47.310
It's a question of when.

11
00:00:47.730 --> 00:00:49.950
I can speak from personal experience.

12
00:00:50.280 --> 00:00:58.350
I've used WordPress for about 12 years and I have never once had an updated WordPress website get hacked.

13
00:00:58.680 --> 00:01:05.550
The few times that the security of one of my sites was compromised, it was always because I got lazy

14
00:01:05.550 --> 00:01:07.660
and let the website become outdated.

15
00:01:07.980 --> 00:01:12.660
Now, security in and of itself could be its own 10 to 20 hour course.

16
00:01:12.900 --> 00:01:19.320
But in my opinion, keeping your website updated is so important to security that I figured I'd be doing

17
00:01:19.320 --> 00:01:22.380
you a disservice if I didn't include this in the course.

18
00:01:22.620 --> 00:01:29.040
So the entire point of this challenge is to present you with the two main plans or strategies to keeping

19
00:01:29.040 --> 00:01:30.360
your site updated.

20
00:01:30.630 --> 00:01:39.480
Let's say update plan A and update Plan B, plan A is to leave automatic updates enabled for your live

21
00:01:39.480 --> 00:01:41.490
Web hosting copy of WordPress.

22
00:01:41.730 --> 00:01:46.260
And this is the plan that I recommend for 99 percent of people and sites.

23
00:01:46.770 --> 00:01:55.020
And update Plan B is to be a control freak and disable auto updates because you're worried that an update

24
00:01:55.020 --> 00:01:57.650
might break a certain feature on your website.

25
00:01:57.960 --> 00:02:03.840
So the idea here is that when you see that the core or security team of WordPress has pushed out an

26
00:02:03.840 --> 00:02:08.610
update, you first test that update within your local dev environment.

27
00:02:08.880 --> 00:02:11.400
You check to see if the update breaks anything.

28
00:02:11.610 --> 00:02:18.420
And if it doesn't and things look good, then you manually push those updates onto the live Web hosting

29
00:02:18.420 --> 00:02:19.420
copy of your site.

30
00:02:19.800 --> 00:02:26.400
Now, before we go any further, I want to point out that both myself and the documentation of the official

31
00:02:26.400 --> 00:02:32.580
WordPress website strongly discourage this disabling of auto updates.

32
00:02:32.950 --> 00:02:37.560
So, like I said, I recommend Plan A for 99 percent of projects.

33
00:02:37.800 --> 00:02:44.790
The only way I would ever go with Plan B is if a project had a really large budget and you had a person

34
00:02:44.790 --> 00:02:48.420
that was devoted to maintaining that one live site.

35
00:02:48.720 --> 00:02:51.720
So that way they could really be on top of updates.

36
00:02:51.960 --> 00:02:57.960
And as soon as WordPress puts out a security update within that same 24 hour period, they could test

37
00:02:57.960 --> 00:03:00.870
things locally and then push the updates live.

38
00:03:01.090 --> 00:03:06.840
If you do not have someone that can really be on top of things, I would never go with Plan B, because

39
00:03:06.840 --> 00:03:13.170
even if your live website is only outdated for a day or a few days or a week, there is a very, very

40
00:03:13.170 --> 00:03:15.000
good chance you will get hacked.

41
00:03:15.450 --> 00:03:20.310
This idea of wanting to manually manage your updates comes from a good place.

42
00:03:20.670 --> 00:03:23.880
And with most software, that approach makes sense.

43
00:03:24.090 --> 00:03:29.730
But when it comes to WordPress, I feel like this idea of trying to manually manage your updates is

44
00:03:29.730 --> 00:03:31.260
completely misplaced.

45
00:03:31.590 --> 00:03:33.750
WordPress is a unique monster.

46
00:03:34.020 --> 00:03:41.700
As of today, it powers about 28 percent of the entire Web and its source code is completely open source.

47
00:03:41.940 --> 00:03:51.480
So we need to realize that 24/7, 365, there are people studying the WordPress code both for good and

48
00:03:51.480 --> 00:03:52.260
for evil.

49
00:03:52.530 --> 00:03:57.900
Every day around the clock, there are people making improvements to WordPress to make it more secure.

50
00:03:58.110 --> 00:04:03.900
But there are also malicious people and hackers who are trying to find a security hole in WordPress.

51
00:04:04.290 --> 00:04:08.820
And if I was an evil hacker, WordPress would definitely be one of my targets as well.

52
00:04:09.120 --> 00:04:15.090
Because if you do find a security hole, you just found a back door into the software that powers over

53
00:04:15.090 --> 00:04:22.470
a quarter, almost a third of the entire Web for an open source project of this magnitude, it's my

54
00:04:22.470 --> 00:04:28.650
opinion that you should just always leave auto updates enabled, for example, if you're trying to decide

55
00:04:28.650 --> 00:04:33.630
between plan A and B, why don't we do a quick risk analysis for both?

56
00:04:33.960 --> 00:04:40.320
So if you leave auto updates on what is the percent chance that an update will break a feature on your

57
00:04:40.320 --> 00:04:43.110
site, I would call it a one percent risk.

58
00:04:43.290 --> 00:04:47.040
To be generous, we could say anywhere from one to 10 percent risk.

59
00:04:47.250 --> 00:04:53.220
On the other hand, if you disable auto updates and you're not on top of things and you get lazy and

60
00:04:53.220 --> 00:04:58.410
you don't update your site for maybe a week or longer, what chance or what risk is there of getting

61
00:04:58.410 --> 00:04:58.980
hacked?

62
00:04:59.280 --> 00:05:01.590
I would say there's a 99 to a one.

63
00:05:01.820 --> 00:05:07.760
100 percent chance that you will be hacked, your site will become infested with adware and malware.

64
00:05:08.020 --> 00:05:10.760
I don't know about you, but plan looks a lot better to me.

65
00:05:11.050 --> 00:05:16.450
I will take my chances that there's a one percent risk, that an update will break a feature.

66
00:05:16.810 --> 00:05:22.000
And even if it does, hopefully you're checking your website every day or two and you notice if something's

67
00:05:22.000 --> 00:05:27.340
broken, you can just go in and update your code to work with the updated version of WordPress.

68
00:05:27.670 --> 00:05:32.800
Sure, your website might have looked a bit funny for a day or two or even worst case, it was entirely

69
00:05:32.800 --> 00:05:33.370
broken.

70
00:05:33.580 --> 00:05:34.960
But what's the alternative?

71
00:05:35.140 --> 00:05:40.690
Having your website completely hacked that could completely destroy your entire brand image.

72
00:05:40.930 --> 00:05:46.390
If people find out that your website was installing viruses on people's computer or that a hacker was

73
00:05:46.390 --> 00:05:49.060
able to get someone's email address from your database.

74
00:05:49.360 --> 00:05:54.370
I feel like that would do way more damage to your brand than if your website looked weird for a day

75
00:05:54.370 --> 00:05:54.840
or so.

76
00:05:55.150 --> 00:05:58.570
So clearly I am a big fan of auto updates.

77
00:05:58.900 --> 00:06:05.560
Now, by default, WordPress only enables minor updates for large, major updates.

78
00:06:05.560 --> 00:06:10.610
You will need to manually click the update button from within the admin dashboard.

79
00:06:10.960 --> 00:06:17.350
However, as we can see on the official WordPress documentation here with just a little bit of code,

80
00:06:17.800 --> 00:06:21.480
you can set even major updates to happen automatically.

81
00:06:21.820 --> 00:06:25.210
That's completely personal preference and is a bit controversial.

82
00:06:25.210 --> 00:06:27.130
So I will leave that one up to you.

83
00:06:27.370 --> 00:06:29.470
OK, now, moving on to our next topic.

84
00:06:29.800 --> 00:06:36.700
Whether you choose Plan A or Plan B, your choice here is going to affect how you should structure your

85
00:06:37.030 --> 00:06:40.030
repository with all of your WordPress files.

86
00:06:40.330 --> 00:06:46.630
What I mean by this is if you are going to allow your live Web hosting copy of WordPress to perform

87
00:06:46.630 --> 00:06:53.500
automatic updates, there's really no sense in keeping all of the WordPress system files within your

88
00:06:53.500 --> 00:06:54.450
git repo.

89
00:06:54.790 --> 00:07:00.640
So, for example, if you were going with Plan A and leaving automatic updates enabled within your git

90
00:07:00.640 --> 00:07:09.370
repo, if I go into my app and then WP content, you would really only need to have your theme folder

91
00:07:09.370 --> 00:07:10.750
within version control.

92
00:07:11.230 --> 00:07:17.470
Right, because all of the other WordPress system files would be automatically maintained updated on

93
00:07:17.470 --> 00:07:18.490
your server level.

94
00:07:18.880 --> 00:07:25.540
Or you could keep your entire WordPress installation in GIT, but then configure your deploy service

95
00:07:25.990 --> 00:07:30.030
to only deploy certain folders like your theme folder.

96
00:07:30.370 --> 00:07:38.740
Or you could set up your deploy tool to exclude certain folders like the WP admin and the WP includes

97
00:07:38.740 --> 00:07:39.400
folders.

98
00:07:39.400 --> 00:07:42.840
Right, because those would get automatically maintained by the server.

99
00:07:43.330 --> 00:07:46.750
There is no objectively right or wrong way of doing this.

100
00:07:46.960 --> 00:07:50.620
It's all just personal preference and finding something that works for you.

101
00:07:50.890 --> 00:07:57.310
Big picture whether you choose auto updates or you choose the more controversial path of disabling auto

102
00:07:57.310 --> 00:08:02.860
updates, you just want to make sure that your git structure and deploy tool is doing what you would

103
00:08:02.860 --> 00:08:08.740
expect and is in sync with your update plan that's going to bring this challenge video to a close.

104
00:08:09.070 --> 00:08:12.040
Let's keep things rolling and I will see you in the next one.
