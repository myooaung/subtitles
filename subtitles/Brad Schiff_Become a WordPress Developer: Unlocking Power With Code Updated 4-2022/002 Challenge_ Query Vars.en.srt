1
00:00:02,100 --> 00:00:10,200
Hello, everyone, in this challenge video, we are going to learn about custom query vars or variables.

2
00:00:10,450 --> 00:00:12,750
So what in the world does that phrase mean?

3
00:00:13,110 --> 00:00:15,490
What is a custom query variable?

4
00:00:15,870 --> 00:00:22,050
Well, way back in the course, when we set up our basic search that users would only see if they had

5
00:00:22,050 --> 00:00:28,230
JavaScript disabled, you might remember that I promised I would point you in the right direction of

6
00:00:28,230 --> 00:00:33,730
implementing custom search logic for a basic old fashioned search like this.

7
00:00:34,050 --> 00:00:38,540
Well, the key to making that happen is custom query variables.

8
00:00:38,970 --> 00:00:42,210
Now, query VARs are not just limited to searches.

9
00:00:42,660 --> 00:00:44,070
They are much bigger than that.

10
00:00:44,250 --> 00:00:49,980
They are very flexible and we can use them in so many different ways throughout WordPress.

11
00:00:50,400 --> 00:00:56,790
Now, in order to show you the simplest possible example of what a query var is, why don't we jump

12
00:00:56,790 --> 00:01:01,950
to our About US page and up in the address bar?

13
00:01:02,190 --> 00:01:11,010
It might be nice if we could add on to the end of it and say questionmark, sky color equals blue.

14
00:01:11,490 --> 00:01:17,430
And then it would be nice if on the server side we could check to see if this Eurail parameter exists

15
00:01:17,430 --> 00:01:17,880
or not.

16
00:01:18,340 --> 00:01:26,040
So maybe we could write a bit of code within our page template and say if the current URL has a parameter

17
00:01:26,040 --> 00:01:33,810
named sky color and only if its value is set to blue, if that evaluates to true, then maybe we want

18
00:01:33,810 --> 00:01:37,620
to add some special conditional content down here.

19
00:01:37,980 --> 00:01:38,320
Right.

20
00:01:38,340 --> 00:01:40,500
We see websites do this all the time.

21
00:01:40,710 --> 00:01:47,640
There are different flags or parameters up in the all that control how the page gets output and displayed.

22
00:01:47,910 --> 00:01:56,340
Well, this is where query vars come into play because by default, WordPress completely ignores anything

23
00:01:56,340 --> 00:01:58,770
extra we include in the address bar.

24
00:01:59,100 --> 00:02:05,490
So when we visit this, you are out as far as WordPress is concerned, it's only seeing this the highlighted

25
00:02:05,490 --> 00:02:13,470
part, because by default, WordPress only pays attention to special you URL parameters like the letter

26
00:02:13,470 --> 00:02:18,390
S for search and page for pagination, so on and so forth.

27
00:02:18,750 --> 00:02:25,170
And this means that if we want to use our own custom property names like this, we need to register

28
00:02:25,170 --> 00:02:27,420
them manually with a bit of code.

29
00:02:27,810 --> 00:02:35,100
In other words, in this case, we need to register sky color as a query var so that way WordPress doesn't

30
00:02:35,100 --> 00:02:41,330
just completely ignore it and this way we can actually access its value on the server side.

31
00:02:41,760 --> 00:02:48,510
Luckily this is very simple to do so right now let's jump into our text editor and within our theme

32
00:02:48,510 --> 00:02:49,140
folder.

33
00:02:49,140 --> 00:02:54,750
I want you to jump into functions dot p and write up at the top here.

34
00:02:54,750 --> 00:02:59,070
Let's add a new line and say add filter.

35
00:03:01,050 --> 00:03:06,300
And the name of the filter hook that we want to target is query vars.

36
00:03:07,020 --> 00:03:11,490
OK, then the second argument is just a custom function that we get to invent.

37
00:03:11,910 --> 00:03:18,210
The name doesn't matter, but why don't we name it university query vars.

38
00:03:18,570 --> 00:03:28,440
OK then let's create a function with this matching name function, university query vars, parentheses

39
00:03:28,440 --> 00:03:35,850
curly brackets and WordPress is going to pass all of the current query vars into our function.

40
00:03:36,540 --> 00:03:43,080
So within these parentheses as a parameter we could say VARs and then within our filter function we

41
00:03:43,080 --> 00:03:45,030
would just want to return that data.

42
00:03:46,410 --> 00:03:51,190
But the idea is that before we return it, we want to manipulate it in some way.

43
00:03:51,870 --> 00:03:57,330
So right above this return line, if we want to register a new query, var write.

44
00:03:57,330 --> 00:04:04,350
If we want to be on the lookout for sky color, we can just say vars and it's an array.

45
00:04:04,350 --> 00:04:10,980
So square brackets, it's an array of all sorts of different variables about the current you rl and

46
00:04:10,980 --> 00:04:18,990
if we just say vars empty square brackets equals this is how we can register a new query var so then

47
00:04:18,990 --> 00:04:22,290
I will just say sky color and that's it.

48
00:04:22,290 --> 00:04:23,460
That's all we need to do.

49
00:04:23,640 --> 00:04:28,380
Now WordPress will be on the lookout for sky color up in the address bar.

50
00:04:28,710 --> 00:04:30,990
So let's go ahead and save this file.

51
00:04:31,380 --> 00:04:39,750
And now why don't we jump into our page template and write a bit of conditional code and say only if

52
00:04:39,750 --> 00:04:45,540
sky color equals blue then maybe we want to output some special content down here.

53
00:04:45,930 --> 00:04:52,680
So back in our theme folder, let's jump into page P and let's scroll down.

54
00:04:54,220 --> 00:05:00,490
Towards the bottom, maybe right below this generic, the content, maybe right before this closing

55
00:05:01,180 --> 00:05:02,980
tag, we can add a bit of code.

56
00:05:04,870 --> 00:05:11,710
Let's write an if statement, let's say, if parentheses, curly brackets and for our condition check.

57
00:05:11,710 --> 00:05:17,560
Let's say if I get query var and that's a function.

58
00:05:17,560 --> 00:05:19,450
So it gets its own parentheses.

59
00:05:19,690 --> 00:05:22,900
And within those, let's just say sky color.

60
00:05:23,920 --> 00:05:26,950
So this code will fetch the value of sky color.

61
00:05:26,950 --> 00:05:35,770
And let's just say if that double equals sign, if that equals blue and only if that evaluates to true,

62
00:05:35,770 --> 00:05:37,020
then let's do something.

63
00:05:37,750 --> 00:05:44,230
So maybe we want to echo out a paragraph that says the sky is blue today.

64
00:05:45,160 --> 00:05:47,450
Be sure to end that line with a semicolon.

65
00:05:47,860 --> 00:05:49,300
Let's go ahead and save that.

66
00:05:49,960 --> 00:05:52,270
And now if I refresh cool.

67
00:05:52,270 --> 00:05:54,090
I can see the sky is blue today.

68
00:05:54,460 --> 00:06:02,140
However, if I go up into the address bar and say sky color equals orange, well, then I no longer

69
00:06:02,140 --> 00:06:03,740
see that secret message.

70
00:06:04,090 --> 00:06:07,270
Well, it's not exactly a secret message, but you get the point.

71
00:06:07,540 --> 00:06:09,790
Now, just a quick note on security.

72
00:06:10,090 --> 00:06:15,820
Before we actually use the value of this query bar, we should always sanitize it first.

73
00:06:16,210 --> 00:06:28,210
So maybe up here we could say sanitize text field and within those parentheses say get query var sky

74
00:06:28,220 --> 00:06:31,390
color and that line with a semicolon.

75
00:06:31,780 --> 00:06:36,060
But then at the very beginning of this line, we could just assign this to a variable.

76
00:06:36,370 --> 00:06:44,800
So I could say sky color value equals the sanitized, secure version of whatever is up in the address

77
00:06:44,800 --> 00:06:45,220
bar.

78
00:06:45,610 --> 00:06:53,590
And then we could use this variable within our if check so we could say if sky color value equals blue

79
00:06:54,400 --> 00:06:56,680
so we can test this out it to save.

80
00:06:57,730 --> 00:07:00,970
If sky color equals orange, we don't see the message.

81
00:07:00,970 --> 00:07:05,830
But if I go back to sky color equals blue, we're back in business.

82
00:07:06,100 --> 00:07:11,770
And really quick, I just want to show you how you could add a second or third query var so maybe up

83
00:07:11,770 --> 00:07:18,820
in the address bar you wanted to say and grass color equals green.

84
00:07:20,140 --> 00:07:23,860
So the question becomes how would you register another query.

85
00:07:23,860 --> 00:07:26,920
VAR Well let's jump back into our functions.

86
00:07:27,700 --> 00:07:31,420
B And remember, within our filter function we have this line.

87
00:07:31,720 --> 00:07:37,510
You could just duplicate that line and this time say grass color.

88
00:07:38,740 --> 00:07:39,780
That's all you need to do.

89
00:07:40,150 --> 00:07:41,440
Go ahead and save that.

90
00:07:41,440 --> 00:07:48,850
And then back in our page P just as a test, why don't we adjust our if statement to say if the sky

91
00:07:48,850 --> 00:07:52,510
color is blue and if the grass color is green.

92
00:07:53,080 --> 00:08:00,220
So first I would sanitize that value so you could just duplicate that line and say grass color value

93
00:08:01,690 --> 00:08:05,830
and then sanitize the query var that is named graph color.

94
00:08:07,930 --> 00:08:18,310
And then within our if statement we can add on a secondary check, say, and if grass color value equals

95
00:08:18,490 --> 00:08:25,900
green and then maybe in our test message we would say the sky is blue today and the grass is green,

96
00:08:27,070 --> 00:08:27,990
life is good.

97
00:08:29,170 --> 00:08:30,340
Go ahead and save that.

98
00:08:30,820 --> 00:08:37,180
OK, now if we refresh we see that message because both of our parameters are set to the special values.

99
00:08:38,020 --> 00:08:46,240
But if I changed grass color to purple or if statement no longer evaluates to true, so we don't see

100
00:08:46,240 --> 00:08:47,830
the message cool.

101
00:08:48,040 --> 00:08:55,450
So now that we have a general understanding of what a query var is and how to register new custom query

102
00:08:55,450 --> 00:09:02,560
vars, now we can move on to the fun or the applied part of this lesson because you might be wondering

103
00:09:02,830 --> 00:09:06,340
what is the point of having these options in the euro bar?

104
00:09:06,370 --> 00:09:10,180
Can we really expect the average visitor to type stuff in like this?

105
00:09:10,390 --> 00:09:12,430
Well, no, but check this out.

106
00:09:12,730 --> 00:09:19,690
I think this will really get the gears in your mind, turning back in our page template, maybe right

107
00:09:19,690 --> 00:09:25,840
after this closing tag right about here so we can write good old fashioned HTML.

108
00:09:26,590 --> 00:09:29,020
Let's add a form element.

109
00:09:29,920 --> 00:09:33,550
And within this form, let's add two text fields.

110
00:09:34,000 --> 00:09:43,600
So input and let's give the first one a name of scheide color and just a placeholder of scheide color.

111
00:09:43,630 --> 00:09:46,600
This is what people will see when they first see the text field.

112
00:09:47,230 --> 00:09:47,390
Sure.

113
00:09:47,440 --> 00:09:50,980
To close this tag on a new line, let's add another input.

114
00:09:51,310 --> 00:09:52,540
Give it a name of.

115
00:09:52,730 --> 00:10:04,970
Grass color placeholder of human readable grass color, and let's give this form a submit button button,

116
00:10:06,530 --> 00:10:11,370
submit close out the button and on our opening form tag.

117
00:10:11,390 --> 00:10:14,840
Let's be sure to say method equals gift.

118
00:10:15,950 --> 00:10:20,510
That way we can actually visually see our values up in the address bar.

119
00:10:20,870 --> 00:10:23,050
OK, let's go ahead and save this.

120
00:10:23,360 --> 00:10:28,900
And then back on the front end, let's get rid of all of the extra information in the address bar.

121
00:10:29,060 --> 00:10:32,060
Just visit the base of your about us page.

122
00:10:32,580 --> 00:10:36,510
OK, and here we see that new form and let's fill it out.

123
00:10:36,530 --> 00:10:43,610
So if I say that the sky color is purple and the grass color is orange, check out my YORO.

124
00:10:44,240 --> 00:10:48,620
That's the exact syntax and structure that will work with query Evars.

125
00:10:49,100 --> 00:10:52,040
So at the moment we do not see our custom message.

126
00:10:52,040 --> 00:11:00,410
But if I do say that sky color is blue and grass color is green, well then our if statement evaluates

127
00:11:00,410 --> 00:11:00,970
to true.

128
00:11:00,980 --> 00:11:02,170
And there's the message.

129
00:11:02,450 --> 00:11:05,390
Now that's as far as I'm going to take you on this topic.

130
00:11:05,510 --> 00:11:11,210
But hopefully this really gets your imagination going and you can think up all sorts of different ways

131
00:11:11,210 --> 00:11:12,470
that you can use this.

132
00:11:12,800 --> 00:11:20,750
For example, you could use these values within a new custom WordPress query to query for certain posts

133
00:11:20,750 --> 00:11:24,860
with certain values, for certain fields or for certain relationships.

134
00:11:25,160 --> 00:11:27,320
The possibilities are endless.

135
00:11:27,590 --> 00:11:31,060
Now, really quick, one more detail before we end this lesson.

136
00:11:31,460 --> 00:11:38,090
The reason you would want to include method equals get on your form is so that these properties actually

137
00:11:38,090 --> 00:11:39,590
appear in the address bar.

138
00:11:40,010 --> 00:11:45,830
So that way if someone reaches a unique results page and they want to share the resulting page that

139
00:11:45,830 --> 00:11:48,500
they see, they can just copy and paste this.

140
00:11:48,500 --> 00:11:50,750
You are to a friend or family member.

141
00:11:51,020 --> 00:11:59,870
So if instead I set this two method equals post, save that visit just the base of my about us page

142
00:11:59,870 --> 00:12:00,230
again.

143
00:12:00,680 --> 00:12:08,780
So the URL is clean and now if I say scheide color is blue, grass color is green, we can see that

144
00:12:08,780 --> 00:12:10,580
our solution still works.

145
00:12:10,880 --> 00:12:11,180
Right.

146
00:12:11,180 --> 00:12:14,390
Our template was still able to access those values.

147
00:12:14,720 --> 00:12:21,500
But now the visitor has no way of sharing this unique page because the Eurail doesn't include any of

148
00:12:21,500 --> 00:12:22,190
that data.

149
00:12:22,460 --> 00:12:24,800
So it's totally up to you, which you use.

150
00:12:24,800 --> 00:12:31,840
But as long as the data that someone is submitting is not in any way private or sensitive, I like using

151
00:12:31,850 --> 00:12:32,180
it.

152
00:12:32,870 --> 00:12:38,670
So that way people can share their results and that's going to bring this challenge to a close.

153
00:12:39,080 --> 00:12:40,280
Your challenge is simple.

154
00:12:40,580 --> 00:12:43,580
Go ahead and experiment with query vars.

155
00:12:44,090 --> 00:12:46,910
Let's keep things rolling and I will see you in the next one.
