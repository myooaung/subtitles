WEBVTT
1
00:00:02.280 --> 00:00:03.250
Hello, everyone.

2
00:00:03.690 --> 00:00:09.900
In this lesson, we're going to work on the professor detail screen and we want to display any related

3
00:00:09.900 --> 00:00:10.720
posts.

4
00:00:11.160 --> 00:00:12.040
Let me explain.

5
00:00:12.060 --> 00:00:18.570
So currently, if we're on a blog post that uses the featured Professor Blacktip, there's a link to

6
00:00:18.570 --> 00:00:25.800
their detailed screen and on the professor detail screen down here, we just would want to link to any

7
00:00:25.800 --> 00:00:28.440
blog posts that have featured this professor.

8
00:00:28.980 --> 00:00:33.210
So, for example, this is what the finished product will look like just down at the very bottom of

9
00:00:33.240 --> 00:00:34.440
the regular content.

10
00:00:34.690 --> 00:00:38.920
We're going to dynamically add this to the content from within our plugin.

11
00:00:39.420 --> 00:00:43.100
OK, so to make that happen, let's jump into our text editor.

12
00:00:43.530 --> 00:00:50.340
We're interested in our main file so featured, Professor, be within our construct function.

13
00:00:50.350 --> 00:00:53.010
We're going to add a filter to the content.

14
00:00:53.370 --> 00:00:59.400
So below these add action lines, we'll just say add filter semicolon.

15
00:00:59.850 --> 00:01:06.090
The name of the filter hooks or quotes is the underscore content and then comma, we just give it a

16
00:01:06.090 --> 00:01:06.760
function.

17
00:01:06.810 --> 00:01:10.560
So let's use the array callable syntax dollar.

18
00:01:10.560 --> 00:01:11.340
Sign this.

19
00:01:11.340 --> 00:01:17.940
We get to make up a method name, maybe I'll call it add related posts.

20
00:01:18.510 --> 00:01:22.090
OK, now let's just go create a method with that matching name.

21
00:01:22.110 --> 00:01:30.540
So right here we can just say function, add related posts, parentheses, curly brackets in the parentheses.

22
00:01:30.540 --> 00:01:37.110
We want to be sure to include a parameter because WordPress is going to pass the original content into

23
00:01:37.110 --> 00:01:39.420
our function and then that's how we can modify it.

24
00:01:39.430 --> 00:01:41.370
So right here we'll say dollar sign.

25
00:01:41.700 --> 00:01:43.200
I'll just call it content.

26
00:01:43.920 --> 00:01:50.160
OK, and now in the body of our function, we only want to modify the content and add something onto

27
00:01:50.160 --> 00:01:53.160
the end of it, only if several conditions are true.

28
00:01:53.170 --> 00:01:56.790
So we would want to be on a single detail screen for a professor.

29
00:01:57.060 --> 00:02:00.330
We would want to be in the loop and we would want it to be the main query.

30
00:02:00.750 --> 00:02:06.180
So in our function, I would just write an if statement parentheses curly brackets for the condition.

31
00:02:06.180 --> 00:02:14.150
I would just say if is singular in these parentheses, we can even say quotes, professor.

32
00:02:14.400 --> 00:02:20.660
So this will only return true if you're on the details single screen and it's the professor post type.

33
00:02:21.120 --> 00:02:23.940
So this is a useful check after that, let's say.

34
00:02:23.940 --> 00:02:33.330
And and if you're in the loop and and is main query cool.

35
00:02:33.510 --> 00:02:39.630
So if all of those things are true, then I would just want to return dollar content and then I would

36
00:02:39.630 --> 00:02:41.850
want to concatenate on to the end of it.

37
00:02:42.270 --> 00:02:46.790
Are related blog posts or the posts that have featured this professor?

38
00:02:47.160 --> 00:02:53.820
Now the code that's going to actually output this will require us to write a query and then output a

39
00:02:53.820 --> 00:02:55.170
little bit of HTML.

40
00:02:55.170 --> 00:03:02.220
So it's going to be a fair amount of code and I don't necessarily want to include that in this top level

41
00:03:02.220 --> 00:03:02.820
file.

42
00:03:03.480 --> 00:03:07.410
So I actually want to tuck that away in a separate file just to stay organized.

43
00:03:07.740 --> 00:03:12.540
So right here, I'm just going to call a function that doesn't even exist yet, but we can add it to

44
00:03:12.540 --> 00:03:13.430
a new file.

45
00:03:13.440 --> 00:03:20.580
So let's say maybe related posts, HTML parentheses to call it semicolon.

46
00:03:21.060 --> 00:03:21.250
Right.

47
00:03:21.280 --> 00:03:26.280
So overall, we're just returning the incoming starter content and then we're adding on something to

48
00:03:26.280 --> 00:03:26.910
the end of it.

49
00:03:26.910 --> 00:03:32.850
So this function that we're going to create should return a string of HTML while we're here in these

50
00:03:32.850 --> 00:03:39.780
parentheses, why don't we pass the idea of the current professor post into this function so it can

51
00:03:39.780 --> 00:03:40.590
do its job.

52
00:03:40.860 --> 00:03:47.430
So in these parentheses we could just say get the IDE right so it will know which professor to look

53
00:03:47.430 --> 00:03:48.750
up relationships for.

54
00:03:49.030 --> 00:03:54.870
OK, finally, if this is not true, then just right below the if statement is still in our function,

55
00:03:54.870 --> 00:03:57.900
we can just return the default content.

56
00:03:58.560 --> 00:03:59.040
Cool.

57
00:03:59.040 --> 00:04:04.920
At this point, let's go create a new separate file and create this function that we made up called

58
00:04:04.920 --> 00:04:06.990
Related Posts HTML.

59
00:04:07.260 --> 00:04:08.250
So I'll save this.

60
00:04:08.250 --> 00:04:15.460
And in our plugin folder in the eye and see folder, I'll just create a new file, I'll name it.

61
00:04:15.480 --> 00:04:19.620
Related posts html dot p p.

62
00:04:20.490 --> 00:04:22.260
Let's jump into that brand new file.

63
00:04:23.550 --> 00:04:24.300
He will enter.

64
00:04:25.620 --> 00:04:32.070
Let's create a function with that name, so it was related posts, HTML parentheses, curly brackets

65
00:04:32.490 --> 00:04:33.570
in the parentheses.

66
00:04:33.600 --> 00:04:39.450
Let's have a parameter, I'll call it dollar sign I.D. So this will be the professor post that we want

67
00:04:39.480 --> 00:04:41.190
to look up relationships for.

68
00:04:41.520 --> 00:04:46.800
But before we go too far, let's first test things out to make sure that what we have so far is working

69
00:04:47.070 --> 00:04:48.960
so within our function just as a test.

70
00:04:48.960 --> 00:04:56.840
Let's return just a string of text and say hello from related file semicolon.

71
00:04:57.180 --> 00:04:58.680
OK, let's save this.

72
00:04:58.680 --> 00:05:05.490
And then we do need to go back into our main file and just require or loading this file up towards the

73
00:05:05.490 --> 00:05:05.910
top.

74
00:05:06.450 --> 00:05:11.040
So back in our main, up at the top, you can actually just duplicate this line.

75
00:05:11.040 --> 00:05:15.750
We've already written this for the previous file that we included, so I'll just copy that.

76
00:05:16.020 --> 00:05:17.910
You just need to change the file name.

77
00:05:18.300 --> 00:05:24.290
So instead of generate Professor HTML, it's related posts html.

78
00:05:24.930 --> 00:05:27.000
Let's give this a save and go test it out.

79
00:05:27.210 --> 00:05:32.120
So if I refresh the professor detail screen, I'm hoping to see something right about here.

80
00:05:32.580 --> 00:05:33.310
Very fresh.

81
00:05:33.840 --> 00:05:34.590
Perfect.

82
00:05:35.340 --> 00:05:38.510
Now we can work on outputting what we actually want.

83
00:05:38.970 --> 00:05:44.370
So back in that new related posts HTML file, let's empty out our function.

84
00:05:44.370 --> 00:05:45.840
We don't really want to return that.

85
00:05:46.290 --> 00:05:48.540
And instead, let's begin with the query.

86
00:05:49.110 --> 00:05:56.040
I'll create a variable you could name, but anything but I'll call it posts about this prof equals a

87
00:05:56.040 --> 00:05:59.370
new instance of the WordPress class WP query.

88
00:06:00.150 --> 00:06:02.790
We give that an array, let's drop down.

89
00:06:02.790 --> 00:06:06.180
So I'm going to begin by saying posts per page.

90
00:06:07.130 --> 00:06:13.610
And Arrow symbol set that to negative one, so just give me all of the posts in one trip karma, let's

91
00:06:13.610 --> 00:06:18.300
say post type should just be the standard post type, right.

92
00:06:18.440 --> 00:06:24.440
For blog posts, karma, let's say meta query, arrow symbol.

93
00:06:24.440 --> 00:06:29.060
And you give that an array inside those parentheses, we can drop down.

94
00:06:29.180 --> 00:06:34.840
And now really what you're giving, this is an array of other arrays, right.

95
00:06:34.850 --> 00:06:37.360
Because you can query for multiple things at once.

96
00:06:37.400 --> 00:06:41.690
So inside here, we only need to have one query, so we'll have one array.

97
00:06:42.320 --> 00:06:47.690
And now before we write any further code, let's go look at our database so that it's crystal clear

98
00:06:47.690 --> 00:06:48.990
what we're trying to do here.

99
00:06:49.400 --> 00:06:56.180
So in the database, I'll go into the post metastable, select data, go to the very last page down

100
00:06:56.210 --> 00:06:56.750
at the bottom.

101
00:06:56.770 --> 00:06:59.080
OK, so I have featured Professor this row.

102
00:06:59.390 --> 00:07:03.260
This is the blog post ID, this is the Professor Post ID.

103
00:07:03.470 --> 00:07:10.640
So all together we're saying, hey, WordPress, give to us any blog posts right.

104
00:07:10.850 --> 00:07:18.920
Where they have a piece of metadata associated with them, where the name of the meta is featured,

105
00:07:18.920 --> 00:07:19.670
professor.

106
00:07:19.970 --> 00:07:24.260
And its value is whatever the current professor posted is.

107
00:07:24.770 --> 00:07:31.340
So the code way of phrasing everything that I just said inside this array would be to say Key should

108
00:07:31.340 --> 00:07:32.960
be featured.

109
00:07:33.140 --> 00:07:42.590
Professor comma, we're looking for an exact match so we can say compare arrow symbol should be equal

110
00:07:42.950 --> 00:07:45.770
comma and then value arrow symbol.

111
00:07:45.980 --> 00:07:49.100
This would just be dollar sign I'd write.

112
00:07:49.700 --> 00:07:52.660
Whatever professor posted was passed into this function.

113
00:07:53.690 --> 00:07:54.080
Cool.

114
00:07:54.080 --> 00:08:00.590
So WP query will give us a list of any blog posts for this professor and now we just need to loop through

115
00:08:00.590 --> 00:08:00.920
them.

116
00:08:01.280 --> 00:08:05.300
Let's be sure to add a semicolon after these two closing parentheses here.

117
00:08:05.960 --> 00:08:08.930
Woops, because Eve's code got confused and tried to indent.

118
00:08:08.930 --> 00:08:14.240
So just like this below this, let's begin looping through that collection of posts.

119
00:08:14.570 --> 00:08:20.870
I'll actually call Obbie start here, because remember, the job of this function is to return a string

120
00:08:20.870 --> 00:08:21.950
of HTML.

121
00:08:22.340 --> 00:08:32.450
So Obbie start and then we can also say WP reset post data call that finally we would return Obbie get

122
00:08:32.450 --> 00:08:33.080
clean.

123
00:08:33.800 --> 00:08:39.020
And then in between these two lines after Obbie start, we just actually start outputting something.

124
00:08:39.060 --> 00:08:41.330
So let's begin with an if statement.

125
00:08:41.900 --> 00:08:47.630
So we only want to output anything at all if there are related blog posts for this professor.

126
00:08:48.020 --> 00:08:52.580
So I would say dollar sign posts about this prof.

127
00:08:52.940 --> 00:08:53.810
Look inside it.

128
00:08:54.140 --> 00:09:00.380
And again, that's Dasch greater than not equal greater than four found posts.

129
00:09:00.800 --> 00:09:03.800
So this will only evaluate to true if there are posts.

130
00:09:04.250 --> 00:09:07.520
If it is true, I want to output a bit of HTML here.

131
00:09:07.520 --> 00:09:09.980
So let's exit here.

132
00:09:10.520 --> 00:09:12.950
Enter here inside.

133
00:09:12.950 --> 00:09:20.300
We can just have a paragraph tag and we'll say that the professor's name is mentioned in the following

134
00:09:20.300 --> 00:09:21.170
posts.

135
00:09:21.770 --> 00:09:27.230
We'd want their name to be dynamic so you could drop in to and just call the title.

136
00:09:28.160 --> 00:09:31.460
OK, below the paragraph we would have an unordered list.

137
00:09:31.460 --> 00:09:34.850
So you'll hit tab inside the unordered list.

138
00:09:34.850 --> 00:09:38.900
We just want to loop through this and create one list item for each post.

139
00:09:39.530 --> 00:09:49.730
So I would just go into PHP and while we're inside it, use while that while parentheses curly brackets

140
00:09:49.730 --> 00:09:51.110
inside the while parentheses.

141
00:09:51.110 --> 00:09:58.130
We can just say posts about this prof look inside it for have posts.

142
00:09:58.640 --> 00:10:04.100
And as long as there are still more post to loop through than inside the while Loop will call posts

143
00:10:04.100 --> 00:10:05.720
about this prof.

144
00:10:06.290 --> 00:10:12.890
Look inside it for the post which is going to get all of the the title and the content, those types

145
00:10:12.890 --> 00:10:13.850
of functions ready.

146
00:10:14.160 --> 00:10:17.510
OK, now we're ready to actually spell out the elai tag.

147
00:10:17.510 --> 00:10:21.290
So I would exit, we can go back into it here.

148
00:10:21.800 --> 00:10:28.160
But on this line now I'll just say Elai hit tab inside there I'll have an HTML link.

149
00:10:28.160 --> 00:10:30.230
So just a hit tab.

150
00:10:30.770 --> 00:10:38.090
The ATRA value would just be the permalink so we could go into PHP called the permalink and then in

151
00:10:38.090 --> 00:10:41.180
between the tags, this is the readable clickable text.

152
00:10:41.180 --> 00:10:43.400
So that would just be the title of the blog post.

153
00:10:43.430 --> 00:10:46.940
So go into B and call the title.

154
00:10:48.110 --> 00:10:49.850
So this is what it looks like altogether.

155
00:10:49.850 --> 00:10:53.120
If you want to pause the video for a moment to type this out, that's OK.

156
00:10:53.120 --> 00:10:56.390
But I'm going to click save and test this out.

157
00:10:56.900 --> 00:11:01.010
So back on my front end for the professor detail screen if I refresh.

158
00:11:01.580 --> 00:11:02.000
Cool.

159
00:11:02.000 --> 00:11:02.720
Dr. Barks.

160
00:11:02.720 --> 00:11:04.880
A lot is mentioned in the following posts.

161
00:11:05.150 --> 00:11:06.410
There's just one link.

162
00:11:06.620 --> 00:11:12.440
Yet another post, but off camera, let me go back off camera, let me go add barks a lot to another

163
00:11:12.440 --> 00:11:14.450
blog post so we can test this out.

164
00:11:14.750 --> 00:11:18.170
OK, so I just added barks a lot to another one of my blog posts.

165
00:11:18.170 --> 00:11:23.660
And if I go back to the barks lot detail, screen and refresh perfect.

166
00:11:24.380 --> 00:11:30.770
We have a multi item list and that is going to bring not only this lesson, but this featured Professor

167
00:11:30.770 --> 00:11:33.830
plug in to a close in our next lesson.

168
00:11:33.830 --> 00:11:40.520
We're going to close out this JavaScript chapter by learning about localization or translations within

169
00:11:40.520 --> 00:11:41.460
JavaScript.

170
00:11:41.690 --> 00:11:48.320
Remember, in an earlier lesson, we already learned how to make our HP within our plugin easy to translate

171
00:11:48.320 --> 00:11:49.540
into other languages.

172
00:11:49.970 --> 00:11:53.900
Remember, for example, I translated a little bit of my into Spanish.

173
00:11:54.240 --> 00:11:58.880
Well, we want to learn how to do that same thing from our JavaScript code.

174
00:11:59.270 --> 00:11:59.530
Right.

175
00:11:59.540 --> 00:12:00.770
And make it flexible.

176
00:12:01.160 --> 00:12:03.180
So that's what we're going to cover in the next video.

177
00:12:03.350 --> 00:12:05.600
Let's keep things rolling and I'll see you then.
