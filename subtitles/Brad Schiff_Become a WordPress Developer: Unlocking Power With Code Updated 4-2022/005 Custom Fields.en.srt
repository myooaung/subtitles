1
00:00:00,850 --> 00:00:01,810
Hello, everyone.

2
00:00:02,290 --> 00:00:10,090
In this lesson, we will learn about custom fields, you might be wondering what is a custom field?

3
00:00:10,540 --> 00:00:16,000
Well, let's dive right into an example so we can answer that question organically.

4
00:00:16,600 --> 00:00:22,780
So in a previous lesson, we wrote code on the home page here to pull in to events.

5
00:00:23,050 --> 00:00:23,320
Right.

6
00:00:23,410 --> 00:00:31,090
These are using our custom post type named event and the title and the text and the permalink is real

7
00:00:31,090 --> 00:00:32,820
dynamic WordPress data.

8
00:00:33,340 --> 00:00:35,590
But this date is still fake.

9
00:00:35,710 --> 00:00:38,310
Hardcoded, static H.T. email.

10
00:00:38,830 --> 00:00:44,530
Now, you might remember that when we set up this section, the most recent blog posts, these dates

11
00:00:44,620 --> 00:00:46,870
are indeed real dynamic data.

12
00:00:47,230 --> 00:00:49,900
These are the dates that each post was created on.

13
00:00:50,200 --> 00:00:56,950
But if you stop and think about it when it comes to upcoming events, no one cares what date the event

14
00:00:56,950 --> 00:00:58,330
post was created on.

15
00:00:58,630 --> 00:01:03,010
People want to know what date the event is actually going to take place on.

16
00:01:03,490 --> 00:01:06,370
Let's use this Poetry Day event as an example.

17
00:01:06,820 --> 00:01:12,700
So if I go into the WordPress admin to edit that post, we look over here on the right hand side bar.

18
00:01:13,060 --> 00:01:17,410
What I'm trying to say is that no one cares what date the Post was published on.

19
00:01:17,710 --> 00:01:20,530
That date is irrelevant to the general public.

20
00:01:20,860 --> 00:01:27,340
Instead, what we need is a new field entirely where we can select the date that the event will take

21
00:01:27,340 --> 00:01:28,030
place on.

22
00:01:28,450 --> 00:01:31,330
So, for example, we have a field for the title.

23
00:01:31,630 --> 00:01:33,490
We have a field for the content.

24
00:01:33,820 --> 00:01:35,440
We have a field for the excerpt.

25
00:01:35,830 --> 00:01:40,750
Wouldn't it be nice if there is another field down here where we can select an event date?

26
00:01:41,230 --> 00:01:44,980
Well, that's exactly what custom fields enable us to do.

27
00:01:45,280 --> 00:01:51,880
So right now, why don't we go tell our event post type that it should support custom fields?

28
00:01:52,330 --> 00:01:57,610
So in your text editor, go ahead and open up the must use plugins folder.

29
00:01:58,000 --> 00:02:02,710
Remember, this is the file where we describe our custom post type of event.

30
00:02:03,160 --> 00:02:05,800
And then remember this parameter named supports.

31
00:02:06,130 --> 00:02:08,980
This is where we added on the excerpt feature.

32
00:02:09,340 --> 00:02:10,270
Well, right after.

33
00:02:10,300 --> 00:02:10,960
Excerpt.

34
00:02:11,020 --> 00:02:16,990
Why don't we just add a comma and then say custom dash fields.

35
00:02:17,540 --> 00:02:17,870
OK.

36
00:02:17,980 --> 00:02:24,280
Now as soon as you save that file and jump back into the ad men edit screen for one of your events.

37
00:02:24,760 --> 00:02:30,880
Now let me show you how we can view custom fields up in the very top right corner.

38
00:02:30,910 --> 00:02:32,030
We see this icon.

39
00:02:32,050 --> 00:02:33,100
That's three dots.

40
00:02:33,490 --> 00:02:39,310
If we click on that, then at the very bottom of this menu, we see options.

41
00:02:39,520 --> 00:02:41,080
So let's click on options.

42
00:02:41,650 --> 00:02:48,490
And then at the very bottom of this Pop-Up menu, we see advanced panels and we can check this checkbox

43
00:02:48,520 --> 00:02:50,800
next to custom fields.

44
00:02:51,100 --> 00:02:51,980
So let's do that.

45
00:02:53,030 --> 00:02:55,510
It's going to say that you need to enable and reload.

46
00:02:55,550 --> 00:02:57,590
So go ahead and click, enable and reload.

47
00:02:59,570 --> 00:02:59,910
OK.

48
00:02:59,960 --> 00:03:05,300
And now Downbelow, our title and body content, we see custom fields.

49
00:03:05,720 --> 00:03:06,950
We have two inputs.

50
00:03:07,100 --> 00:03:08,660
Name and value.

51
00:03:09,140 --> 00:03:13,260
So, for example, we could say something like name is event date.

52
00:03:13,850 --> 00:03:16,040
And then for the value, we could just give it a date.

53
00:03:16,160 --> 00:03:16,460
Right.

54
00:03:16,490 --> 00:03:18,940
July 1st, 2017.

55
00:03:19,490 --> 00:03:21,380
And you could add another custom field.

56
00:03:22,250 --> 00:03:25,280
So then that gives us another empty pair of name and value.

57
00:03:25,760 --> 00:03:29,170
So you could say mood equals happy.

58
00:03:29,720 --> 00:03:34,880
And you could add another field and say name equals event type.

59
00:03:35,180 --> 00:03:37,430
And the value equals speech.

60
00:03:37,850 --> 00:03:38,750
You get the idea.

61
00:03:39,170 --> 00:03:40,280
But stop the train.

62
00:03:40,370 --> 00:03:40,910
Stop.

63
00:03:41,240 --> 00:03:47,030
This is a terrible, terrible user experience for about 50 different reasons.

64
00:03:47,450 --> 00:03:47,720
Right.

65
00:03:47,750 --> 00:03:54,830
Can we honestly expect the authors and editors of our Web site to have to type in the field name itself?

66
00:03:55,130 --> 00:03:58,250
The authors of our Web site should just get to choose a date.

67
00:03:58,640 --> 00:04:05,000
They shouldn't have to memorize the secret field names of event dash date or whatever other fields we

68
00:04:05,000 --> 00:04:05,450
have.

69
00:04:05,870 --> 00:04:06,080
Right.

70
00:04:06,110 --> 00:04:07,100
Because out of sight.

71
00:04:07,160 --> 00:04:07,940
Out of mind.

72
00:04:08,210 --> 00:04:14,660
So when someone creates or edits an event, all they're going to see is just two empty fields.

73
00:04:15,230 --> 00:04:17,600
And this is not intuitive in the slightest.

74
00:04:17,990 --> 00:04:22,970
You would almost have to give the authors of your Web site a cheat sheet that they could print out and

75
00:04:22,970 --> 00:04:27,110
keep on their desk with the exact field names that they need to use.

76
00:04:27,290 --> 00:04:29,090
And that wouldn't be fun for anyone.

77
00:04:29,360 --> 00:04:31,310
So how can we solve this problem?

78
00:04:31,580 --> 00:04:37,850
Well, you and I could try to write code to improve the custom field user experience.

79
00:04:38,270 --> 00:04:38,450
Right.

80
00:04:38,480 --> 00:04:44,570
We could try to customize the WordPress admen, but we could also try to reinvent the wheel.

81
00:04:44,660 --> 00:04:45,860
It's probably not a good idea.

82
00:04:45,920 --> 00:04:52,370
It wouldn't be a very efficient use of our time because other super talented people have already spent

83
00:04:52,580 --> 00:04:59,240
hundreds, if not thousands of hours creating the perfect custom field solutions.

84
00:04:59,560 --> 00:05:02,480
And they've shared those solutions as plug ins.

85
00:05:02,780 --> 00:05:06,950
There are two main plug ins when it comes to custom fields.

86
00:05:07,340 --> 00:05:10,580
I would say to industry standard plug ins.

87
00:05:10,850 --> 00:05:14,600
Number one is advanced custom fields.

88
00:05:14,990 --> 00:05:21,190
And number two is CMB two, which stands for custom metal boxes two.

89
00:05:21,620 --> 00:05:26,150
Now, if you know me, you know that I normally do not like plugins at all.

90
00:05:26,480 --> 00:05:30,080
I always try to use as few of plugins as possible on a site.

91
00:05:30,440 --> 00:05:35,480
And yet I still use one of these two plugins on almost every Web site I build.

92
00:05:35,840 --> 00:05:36,950
They're just that good.

93
00:05:37,460 --> 00:05:38,690
Now, you don't need both.

94
00:05:38,780 --> 00:05:42,250
You can just use one or the other in this course.

95
00:05:42,500 --> 00:05:46,430
You and I are going to be using advanced custom fields.

96
00:05:46,760 --> 00:05:53,180
I wouldn't say that it's, quote, better than CMB too, but I would say that it's a bit easier to use

97
00:05:53,240 --> 00:05:54,350
and get started with.

98
00:05:54,710 --> 00:05:57,320
Now, before we go ahead and install the new plugin.

99
00:05:57,740 --> 00:06:01,460
I first want to go back into our must use plugins folder.

100
00:06:01,910 --> 00:06:06,710
And on this supports line, we do not need custom fields here.

101
00:06:08,300 --> 00:06:11,780
Instead, the plug in is going to take care of everything on its own.

102
00:06:12,170 --> 00:06:15,950
So go ahead and delete custom fields from that line and then save again.

103
00:06:16,820 --> 00:06:20,570
And now let's go ahead and install a new plug in.

104
00:06:21,080 --> 00:06:25,610
So in the word press, admen, let's go ahead and click on plug ins in the sidebar.

105
00:06:26,480 --> 00:06:29,770
And then click add new either up here or in the sidebar.

106
00:06:30,740 --> 00:06:39,370
OK, let's use this top right field to search for advanced cust dumb fields.

107
00:06:41,690 --> 00:06:42,320
Here it is.

108
00:06:42,410 --> 00:06:44,250
You'll know you're looking at the right plug in.

109
00:06:44,270 --> 00:06:47,780
If it has over a million active installs.

110
00:06:48,170 --> 00:06:51,310
Also, the author of this plug in is named Eliot.

111
00:06:51,650 --> 00:06:51,890
OK.

112
00:06:51,950 --> 00:06:55,490
So once you find that specific plug in, let's click install now.

113
00:06:55,970 --> 00:06:59,960
But once it installs, then let's be sure to activate the plug in.

114
00:07:01,400 --> 00:07:07,070
And now with it activated, you'll see a new option down here towards the bottom of the sidebar named

115
00:07:07,070 --> 00:07:08,300
Custom Fields.

116
00:07:08,660 --> 00:07:09,950
So go ahead and click on that.

117
00:07:11,660 --> 00:07:16,310
And in this plug in, everything revolves around field groups.

118
00:07:16,580 --> 00:07:19,520
You can see that at the moment we don't have any field groups.

119
00:07:19,550 --> 00:07:21,770
So our first step is to create one.

120
00:07:22,130 --> 00:07:23,090
So add new.

121
00:07:23,570 --> 00:07:23,780
OK.

122
00:07:23,840 --> 00:07:26,120
What do we want to name this first field group?

123
00:07:26,570 --> 00:07:29,420
Why don't we just call it a vent date.

124
00:07:29,990 --> 00:07:30,320
OK.

125
00:07:30,380 --> 00:07:36,440
And even though we call it a field group, it doesn't need to contain multiple fields.

126
00:07:36,710 --> 00:07:41,870
So in this case, we just want to create one single field named Event Day.

127
00:07:42,170 --> 00:07:45,770
So to do that, let's use this button here that says add field.

128
00:07:47,370 --> 00:07:54,180
This first field is the human readable or human friendly label that basically just means that you're

129
00:07:54,180 --> 00:07:56,310
allowed to have spaces in the name.

130
00:07:56,850 --> 00:08:01,260
And then this second field is sort of the computer friendly variable name.

131
00:08:01,660 --> 00:08:06,720
It'll automatically convert your human friendly name into a variable name with an underscore instead

132
00:08:06,720 --> 00:08:07,590
of a space.

133
00:08:08,040 --> 00:08:10,230
But you're free to customize this if you want.

134
00:08:10,620 --> 00:08:15,060
OK, the next option is what type of field we want to create.

135
00:08:15,480 --> 00:08:21,420
So we could just create a simple, plain text field where users type in the date.

136
00:08:22,110 --> 00:08:26,220
But instead, if we choose date picker down here.

137
00:08:28,050 --> 00:08:31,860
It'll create a much more intuitive experience for our authors.

138
00:08:32,190 --> 00:08:33,690
And we will see that in just a moment.

139
00:08:33,720 --> 00:08:35,820
When we take it for a test drive, OK?

140
00:08:35,910 --> 00:08:38,130
We don't need any field instructions.

141
00:08:38,370 --> 00:08:40,260
Should this field be required.

142
00:08:40,560 --> 00:08:41,130
It's up to you.

143
00:08:41,160 --> 00:08:45,810
But I'm going to say, yes, an event should indeed require an event date.

144
00:08:46,230 --> 00:08:46,600
OK.

145
00:08:46,650 --> 00:08:50,250
Next, we can leave display format with the default selection.

146
00:08:50,550 --> 00:08:58,890
However, for the return format of the date, I need you to select this Y and D. option here.

147
00:08:59,940 --> 00:09:02,400
This way it will play nicely with the P HP.

148
00:09:02,400 --> 00:09:04,050
We're going to write in just a bit.

149
00:09:04,710 --> 00:09:05,040
OK.

150
00:09:05,100 --> 00:09:06,840
All of these other options for now look.

151
00:09:06,840 --> 00:09:07,170
OK.

152
00:09:07,230 --> 00:09:08,820
We can continue to scroll down.

153
00:09:11,450 --> 00:09:15,550
As you scroll down a bit further, you will see a box named location.

154
00:09:16,010 --> 00:09:17,360
And this is very important.

155
00:09:17,780 --> 00:09:23,990
This controls when and where the authors of our Web site will see this field group.

156
00:09:24,260 --> 00:09:32,570
So, for example, show this field group only if the current post type of whatever your editing is equal

157
00:09:32,570 --> 00:09:33,080
to.

158
00:09:33,320 --> 00:09:36,830
And then we could change this from post to event.

159
00:09:38,030 --> 00:09:42,200
So that way this field will not show up on generic posts and pages.

160
00:09:42,530 --> 00:09:45,220
It will only show up for our custom post time.

161
00:09:45,740 --> 00:09:47,720
Now, that's all we need to set at the moment.

162
00:09:47,750 --> 00:09:51,620
So let's scroll back up to the top and click publish here.

163
00:09:53,430 --> 00:09:53,700
Cool.

164
00:09:53,760 --> 00:09:56,760
So we successfully created our first field group.

165
00:09:57,180 --> 00:09:59,430
And now let's go try to edit an event again.

166
00:09:59,650 --> 00:10:01,620
So in the sidebar, click on events.

167
00:10:02,040 --> 00:10:04,050
I'm going to try to edit poetry de.

168
00:10:05,260 --> 00:10:10,570
And underneath the main content field, we see this brand new event, date field.

169
00:10:11,020 --> 00:10:15,370
And as soon as I click on that field, a little mini calendar pops up.

170
00:10:15,760 --> 00:10:18,430
And now I'm free to choose whatever date I want.

171
00:10:18,970 --> 00:10:20,120
So maybe I will choose.

172
00:10:20,140 --> 00:10:21,520
July 20th.

173
00:10:22,870 --> 00:10:24,730
You can choose whatever date you want.

174
00:10:25,300 --> 00:10:27,340
But let's go ahead and save that.

175
00:10:28,570 --> 00:10:35,560
And now the next logical step is to find out how can we use that custom field data on the front end

176
00:10:35,560 --> 00:10:36,310
of our Web site.

177
00:10:36,370 --> 00:10:36,640
Right.

178
00:10:36,670 --> 00:10:40,120
How can we use that here instead of the fake hardcoded D?

179
00:10:40,540 --> 00:10:44,380
Well, let's jump into our text editor right now and I will show you.

180
00:10:44,740 --> 00:10:49,040
So for now, we can forget about our must use plugins folder instead.

181
00:10:49,180 --> 00:10:55,780
I want you to go into your theme folder and jump in to the front page dot p HP file.

182
00:10:56,380 --> 00:11:00,190
So if we scroll down just a little bit here, we see the custom query.

183
00:11:00,610 --> 00:11:01,960
Here is the while loop.

184
00:11:02,470 --> 00:11:07,990
And within this link, that's where we see the span's one with the month and one with the day.

185
00:11:08,410 --> 00:11:10,360
Let's begin with the month first.

186
00:11:10,720 --> 00:11:17,560
So let's delete these static, hardcoded MHR and instead let's drop in to P HP.

187
00:11:18,310 --> 00:11:24,700
And you know how normally we have access to functions like the title or the permalink?

188
00:11:25,450 --> 00:11:33,190
Well, in this case, that new plugin gives us access to a new function named the field.

189
00:11:33,720 --> 00:11:33,890
OK.

190
00:11:34,000 --> 00:11:39,130
And then within the parentheses for that function, we just tell it which field in particular we are

191
00:11:39,130 --> 00:11:39,880
looking for.

192
00:11:40,180 --> 00:11:45,580
Now, if you forgot the name of the field, you can always just go into your WordPress admen and down

193
00:11:45,580 --> 00:11:46,540
here towards the bottom.

194
00:11:46,560 --> 00:11:50,620
Click on Custom Fields, select the field group.

195
00:11:51,790 --> 00:11:58,390
This particular field group only has one field, but you can see this column named Field Deyn is what

196
00:11:58,390 --> 00:11:59,170
we're looking for.

197
00:11:59,530 --> 00:12:03,970
So it's all lower case and it uses an underscore instead of a space.

198
00:12:05,050 --> 00:12:14,350
So back in our code, when we call this function the field for the argument, let's say event underscore

199
00:12:14,350 --> 00:12:14,730
day.

200
00:12:15,350 --> 00:12:21,640
Now, if I save that and go check out the front end of my Web site, if I select or highlight it, we

201
00:12:21,640 --> 00:12:22,990
can read the entire thing.

202
00:12:23,410 --> 00:12:26,770
It begins with the year and then the month and then the day.

203
00:12:27,070 --> 00:12:32,290
But in this context, we don't want the full day right within that span.

204
00:12:32,590 --> 00:12:34,120
We just want the month.

205
00:12:34,750 --> 00:12:38,170
And then within this span, we only want the two digit day.

206
00:12:38,530 --> 00:12:44,500
So the question right now is, how can we convert this string of the entire day, year, month and day?

207
00:12:44,770 --> 00:12:50,830
How can we convert that into just a three letter representation of a month like we see over here, like

208
00:12:51,220 --> 00:12:52,690
June or May?

209
00:12:53,140 --> 00:12:55,720
Well, let's go on a bit of a P HP journey.

210
00:12:56,260 --> 00:12:59,920
So just for a moment, let's forget about the field function.

211
00:13:00,040 --> 00:13:01,550
Let's actually delete that.

212
00:13:02,030 --> 00:13:02,190
OK.

213
00:13:02,380 --> 00:13:05,110
We've got to empty BHP canvas here again.

214
00:13:05,590 --> 00:13:07,380
And inside the P p tags.

215
00:13:07,480 --> 00:13:12,610
I'm actually going to drop down to a new line just so it's easier to see what's going on.

216
00:13:13,030 --> 00:13:15,760
And let's begin by creating a new variable.

217
00:13:16,030 --> 00:13:17,850
We could name it whatever we want.

218
00:13:18,250 --> 00:13:20,580
Let's call it event day.

219
00:13:21,220 --> 00:13:29,080
And let's set it to equal a new instance of a class that is part of P HP and not WordPress in particular

220
00:13:29,590 --> 00:13:33,340
named Date Time, OK.

221
00:13:33,700 --> 00:13:40,630
So now we've got this new variable or I should say this new object named Event Date, and it's using

222
00:13:40,630 --> 00:13:42,460
this class as a blueprint.

223
00:13:42,880 --> 00:13:44,830
So now check this out on a new line.

224
00:13:45,070 --> 00:13:47,290
We can look inside that object.

225
00:13:47,350 --> 00:13:49,820
So event date and then a dash.

226
00:13:49,870 --> 00:13:52,720
Greater than symbol to look inside the object.

227
00:13:53,140 --> 00:13:57,320
And it contains a method or function named format.

228
00:13:57,890 --> 00:14:02,050
And this is our chance to say if we want the month or the day or the year.

229
00:14:02,380 --> 00:14:02,590
Right.

230
00:14:02,650 --> 00:14:08,000
So remember, the code for the three letter abbreviation of a month is uppercase M.

231
00:14:08,380 --> 00:14:11,870
So at the beginning of this line, if we echo it out.

232
00:14:12,490 --> 00:14:13,480
Let's save that.

233
00:14:14,770 --> 00:14:16,030
And we see June.

234
00:14:16,570 --> 00:14:19,330
And that's because at this moment that I'm recording this lesson.

235
00:14:19,360 --> 00:14:21,220
That's the current month of today.

236
00:14:21,550 --> 00:14:22,630
So back to the code.

237
00:14:22,870 --> 00:14:25,870
This class and BHP named date time.

238
00:14:26,200 --> 00:14:31,510
If we don't give it anything within its parentheses, it will default to the current date.

239
00:14:31,930 --> 00:14:37,570
So this line of code creates an object that is a representation of the current date.

240
00:14:37,900 --> 00:14:44,380
But instead, if in these parentheses we provide an argument of a date in the future or in the past.

241
00:14:44,650 --> 00:14:47,020
Well, then that's what our object will represent.

242
00:14:47,500 --> 00:14:49,330
So I think you can guess what we want to do.

243
00:14:49,570 --> 00:14:53,140
We want to use our custom field within these parentheses.

244
00:14:53,380 --> 00:14:58,540
So remember, we had access to that new function named the field.

245
00:14:59,020 --> 00:15:04,570
And then within those parentheses, the name of our custom field is event underscored.

246
00:15:04,730 --> 00:15:05,080
Date.

247
00:15:05,630 --> 00:15:08,510
But before we save this code, I want to point something out.

248
00:15:09,290 --> 00:15:15,590
The function named the field is going to handle the echoing and outputting onto the page for us.

249
00:15:15,950 --> 00:15:18,740
In this case, we just want to return this value.

250
00:15:19,100 --> 00:15:23,870
So instead of the field, we can run a function named get field.

251
00:15:24,380 --> 00:15:24,620
OK.

252
00:15:24,680 --> 00:15:27,320
So this will return that string of text.

253
00:15:27,350 --> 00:15:28,130
That is the year.

254
00:15:28,130 --> 00:15:28,430
Year.

255
00:15:28,430 --> 00:15:29,270
Year, month.

256
00:15:29,270 --> 00:15:29,690
Month.

257
00:15:29,780 --> 00:15:30,110
Day.

258
00:15:30,110 --> 00:15:30,630
Day.

259
00:15:30,980 --> 00:15:34,430
And we're creating an object that represents that date.

260
00:15:34,730 --> 00:15:39,320
And then on this line, we're saying, hey, look inside that object and format things.

261
00:15:39,440 --> 00:15:43,220
So we just return the three letter representation of the month.

262
00:15:43,790 --> 00:15:45,950
And then we're echoing that out onto the page.

263
00:15:46,310 --> 00:15:47,480
So let's say that.

264
00:15:48,690 --> 00:15:49,000
Cool.

265
00:15:49,040 --> 00:15:54,770
And now instead of June, we see July because remember, I set my event date to July 20th.

266
00:15:55,160 --> 00:15:58,010
So next, let's just do the same thing for the day.

267
00:15:58,310 --> 00:16:02,720
So back in our code, we can just copy and paste this echo line here.

268
00:16:02,840 --> 00:16:05,420
So let's select that, copy it into our clipboard.

269
00:16:06,140 --> 00:16:10,370
And then within this span where we just want the two digit representation of the day.

270
00:16:10,790 --> 00:16:15,020
Let's delete the hardcoded twenty five and then paste in your clipboard.

271
00:16:15,830 --> 00:16:18,400
Now remember what we just pasted in is p HP.

272
00:16:18,710 --> 00:16:23,150
So right before what we just pasted in, we want to be sure to open up a P HP tag.

273
00:16:24,050 --> 00:16:28,640
And then right after what we pasted in, let's add a closing P HP tag.

274
00:16:28,980 --> 00:16:31,820
So question mark greater than symbol.

275
00:16:32,120 --> 00:16:32,420
All right.

276
00:16:32,480 --> 00:16:36,110
And this time for the format instead of an uppercase M.

277
00:16:36,200 --> 00:16:38,360
Which gives us the three letters for a month.

278
00:16:38,690 --> 00:16:41,720
Let's use a lowercase D for day.

279
00:16:42,410 --> 00:16:43,520
So let's save that.

280
00:16:44,660 --> 00:16:45,230
Perfect.

281
00:16:45,290 --> 00:16:48,890
July 20th, which is the date that I set for Poetry Day.

282
00:16:49,400 --> 00:16:53,450
You'll notice, though, that for the science of cats, it says June twenty seventh.

283
00:16:53,810 --> 00:16:56,240
And as I'm recording this, that's the current day.

284
00:16:56,570 --> 00:17:02,540
And that's because we didn't retroactively go into the science of Cats post and set the event date.

285
00:17:02,990 --> 00:17:09,500
Remember that by default, this P HP date time class will return the current day if you don't give it

286
00:17:09,530 --> 00:17:11,270
anything within the parentheses.

287
00:17:11,600 --> 00:17:16,430
Now, luckily, when we created that custom field, we said that it was required.

288
00:17:16,700 --> 00:17:22,700
Remember back in the admen click on Custom Fields in the sidebar and then click on your event group.

289
00:17:24,080 --> 00:17:31,190
And this field group only has one field, but if you click on it right here, it will drop down and

290
00:17:31,190 --> 00:17:34,490
you'll remember that we set the required attribute to yes.

291
00:17:34,820 --> 00:17:40,940
So in the future, whenever I create a new event post, it will force me to select a date so that this

292
00:17:40,940 --> 00:17:41,750
doesn't happen.

293
00:17:42,050 --> 00:17:47,510
But it's not going to retroactively go back in time and yell at me to enter dates.

294
00:17:47,810 --> 00:17:53,030
So if you want to be thorough, you could go back through right now and set event dates for all of your

295
00:17:53,030 --> 00:17:54,200
event posts.

296
00:17:54,590 --> 00:17:56,570
So we've already set one for Poetry Day.

297
00:17:56,870 --> 00:17:58,900
Let's go into the science of cats.

298
00:18:00,140 --> 00:18:01,550
Here's the event date field.

299
00:18:02,300 --> 00:18:04,310
I will set it to June 30th.

300
00:18:05,820 --> 00:18:12,060
Let's click update and let's go back to my list of events and I will edit the math meetup event.

301
00:18:13,110 --> 00:18:15,270
And let me set the event date to June.

302
00:18:15,270 --> 00:18:16,260
Twenty ninth.

303
00:18:17,700 --> 00:18:18,360
Save that.

304
00:18:18,990 --> 00:18:19,230
Cool.

305
00:18:19,260 --> 00:18:25,050
So now if we go back and refresh, we see that the science of cats gets the proper date June 30th.

306
00:18:25,410 --> 00:18:30,420
Now, at this point, let's change gears and talk about what we're going to work on in our next lesson.

307
00:18:30,840 --> 00:18:32,190
Let me ask you a question.

308
00:18:32,670 --> 00:18:35,040
So we are pulling in two posts here.

309
00:18:35,190 --> 00:18:41,490
But my question is, how are we deciding which two to pull in right when it comes to our blog?

310
00:18:41,760 --> 00:18:47,610
It makes sense to pull in the two most recently created or recently published posts.

311
00:18:48,030 --> 00:18:55,020
But when it comes to upcoming events, it makes more sense to load in the two most rapidly approaching

312
00:18:55,080 --> 00:18:55,800
events.

313
00:18:56,090 --> 00:18:57,750
Right, based on their event date.

314
00:18:58,170 --> 00:19:04,260
So in our next lesson, we are going to learn how to take our custom query skills to another level.

315
00:19:04,590 --> 00:19:05,700
Let's keep things rolling.

316
00:19:05,790 --> 00:19:08,400
And I will see you in the next lesson.
