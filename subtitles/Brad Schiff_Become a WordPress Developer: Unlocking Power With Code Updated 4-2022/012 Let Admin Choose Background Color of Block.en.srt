1
00:00:02,340 --> 00:00:03,300
Hello, everyone.

2
00:00:03,770 --> 00:00:10,260
In this lesson, we're going to jump back into the admin side of things and learn how to add custom

3
00:00:10,260 --> 00:00:12,490
options to our block type.

4
00:00:12,870 --> 00:00:14,640
Let me explain what I'm referring to.

5
00:00:14,670 --> 00:00:19,140
So right now, we're looking at the finished product version of the block type.

6
00:00:19,440 --> 00:00:22,650
And you'll notice that as soon as I click onto the block.

7
00:00:23,310 --> 00:00:28,590
Well, in the right hand column, we now have this tool that lets us choose the background color.

8
00:00:29,340 --> 00:00:35,910
And thanks to the real time nature of the React library, you can see as you choose that color, the

9
00:00:35,940 --> 00:00:37,200
block gets updated.

10
00:00:37,890 --> 00:00:41,910
And then obviously, if I choose this color and view it on the front end.

11
00:00:43,760 --> 00:00:44,430
Perfect.

12
00:00:44,990 --> 00:00:51,380
So in this lesson, we're going to learn how to set up this right hand inspector or customize panel

13
00:00:51,740 --> 00:00:52,880
for our block type.

14
00:00:53,480 --> 00:00:56,960
Let me jump back to the tab that you and I are working on together.

15
00:00:57,260 --> 00:00:58,980
And let's move forward from here.

16
00:00:59,390 --> 00:01:05,030
So in our text, Ed, for the last several lessons we've been working in front end.

17
00:01:05,540 --> 00:01:05,780
Yes.

18
00:01:05,870 --> 00:01:10,400
But right now we want to make sure that we're back in Index J.S..

19
00:01:10,910 --> 00:01:17,810
Right, because this is the copy that controls the ED or admin side for our block type to get started

20
00:01:17,810 --> 00:01:18,820
up at the very top.

21
00:01:18,830 --> 00:01:25,460
We want to import something new from WordPress that will make this process very easy for us only instead

22
00:01:25,460 --> 00:01:30,680
of adding it to this line where we're importing from WordPress components, we actually want a brand

23
00:01:30,680 --> 00:01:39,950
new line, maybe right below that one, where we say import curly brackets from quotes at WordPress

24
00:01:40,220 --> 00:01:43,280
slash block dash editor.

25
00:01:43,910 --> 00:01:48,830
And again, just like with this line of code, it doesn't matter that you and I didn't actually install

26
00:01:48,830 --> 00:01:50,420
this package from NPM.

27
00:01:50,840 --> 00:01:56,960
The Web pack configuration that our automated JavaScript package is using is smart enough to look for

28
00:01:56,960 --> 00:01:59,660
this in the browsers global scope.

29
00:01:59,840 --> 00:02:07,060
Anyways, in these curly brackets, we're trying to import something called inspector controls.

30
00:02:07,640 --> 00:02:12,950
OK, now that we have this line of code in place, there are two more things I want to load within this

31
00:02:12,950 --> 00:02:16,340
line of code, this line where we're pulling from the components.

32
00:02:16,340 --> 00:02:24,700
So just add on comma, panel, body, comma, panel, row.

33
00:02:25,460 --> 00:02:30,410
So with panel body and panel row from components and inspector controls from the block.

34
00:02:30,410 --> 00:02:36,680
Ed, we have everything we need to create a right hand options area at this point.

35
00:02:36,680 --> 00:02:38,570
Let's go down into our X..

36
00:02:39,080 --> 00:02:45,130
So here we are returning our multiline JSC X and right within the opening div tag.

37
00:02:45,170 --> 00:02:46,930
So right inside it right here.

38
00:02:47,240 --> 00:02:53,870
This might seem unintuitive at first, but right here we're just going to include inspector controls

39
00:02:53,870 --> 00:02:57,680
and hit tab inside the opening and closing tags.

40
00:02:57,680 --> 00:03:04,910
We can drop down and now let's say panel body hit tab on the opening tag.

41
00:03:04,910 --> 00:03:05,990
Let's give it a title.

42
00:03:05,990 --> 00:03:13,520
Propp So title equals we could call it anything but maybe background color inside the opening and closing

43
00:03:13,520 --> 00:03:14,060
tags.

44
00:03:14,060 --> 00:03:19,490
Let's drop down and finally let's have something called Panel Row It tab.

45
00:03:19,670 --> 00:03:25,670
And inside here just for a quick test, we can say hello, let's give this a save and test it out.

46
00:03:26,480 --> 00:03:29,870
So back in the admin dashboard, if I refresh the edit screen.

47
00:03:30,850 --> 00:03:37,360
Now, you do have to actually select or click on your block type instance, but as soon as I do here

48
00:03:37,360 --> 00:03:39,340
we see background color.

49
00:03:39,970 --> 00:03:40,430
Hello.

50
00:03:40,990 --> 00:03:44,920
Yours might not be opened by default, so you can just click this arrow to open it.

51
00:03:45,160 --> 00:03:54,760
Or better yet, on the panel body opening tag, we can give it a prop of initial open equals curly brackets

52
00:03:54,760 --> 00:03:56,770
and then just give it either true or false.

53
00:03:56,800 --> 00:04:00,300
So if you said it's true, then it should be open by default.

54
00:04:00,790 --> 00:04:05,640
So I don't know about you, but the first time I saw this in action, I was pleasantly surprised.

55
00:04:05,980 --> 00:04:11,670
I thought it would be a lot more involved or complicated to create sort of a right hand area.

56
00:04:12,040 --> 00:04:17,290
So we just include inspector controls within the four hour block type.

57
00:04:17,590 --> 00:04:20,050
And WordPress will know what to do with this.

58
00:04:20,350 --> 00:04:20,530
Right.

59
00:04:20,610 --> 00:04:23,980
It's not going to render it on the main left hand column.

60
00:04:24,220 --> 00:04:26,410
It knows exactly where to place this.

61
00:04:26,890 --> 00:04:30,970
Now, we don't actually want the word hello instead right here.

62
00:04:31,150 --> 00:04:33,440
We want the color picker component.

63
00:04:33,820 --> 00:04:37,870
Luckily for us, we don't need to program a color picker from scratch.

64
00:04:38,200 --> 00:04:44,320
So check this out up at the very top of our code on this line where we're importing a bunch of different

65
00:04:44,320 --> 00:04:45,970
components from WordPress.

66
00:04:46,450 --> 00:04:47,740
Let's add one more.

67
00:04:47,740 --> 00:04:52,840
So maybe after panel row, I'll say comma, color picker.

68
00:04:54,850 --> 00:05:01,470
And now let's go leverage color picker, so back down in our J.C. Watts instead of hello exclamation,

69
00:05:01,480 --> 00:05:07,590
this is where we could just have a self-closing color picker tag just like this.

70
00:05:08,200 --> 00:05:13,120
Now, before we truly learn how to work with the color picker component, let's make sure that we have

71
00:05:13,120 --> 00:05:19,390
an attribute or something that's going to save the value that the user chooses into the database.

72
00:05:19,900 --> 00:05:20,780
Let me explain.

73
00:05:20,800 --> 00:05:27,850
So if we scroll up just a bit, when we're using WP blocks, register, block type, remember, we spelled

74
00:05:27,850 --> 00:05:31,690
out the attributes that this block has right now.

75
00:05:31,690 --> 00:05:34,200
We have question answers and correct answer.

76
00:05:34,210 --> 00:05:38,890
So let's just add a comma at the end of this line and add on another attribute.

77
00:05:39,100 --> 00:05:45,420
You could name it anything, but I'll call it BGI color, colon, curly brackets.

78
00:05:46,000 --> 00:05:52,900
Let's say that it's type should be a string and let's give it a default value of string text, hash

79
00:05:52,930 --> 00:05:55,200
tag, Ebbe.

80
00:05:56,140 --> 00:05:58,300
So just a light gray by default.

81
00:05:58,730 --> 00:06:04,570
OK, now with this attribute in place, it's very easy to bring the color picker component to life.

82
00:06:04,870 --> 00:06:11,890
So if we scroll back down on the color picker component, we just say color equals curly brackets and

83
00:06:11,890 --> 00:06:13,360
then just give it that attribute.

84
00:06:13,390 --> 00:06:17,100
So props, dot attributes dot big color.

85
00:06:17,680 --> 00:06:22,120
So that will populated with the value initially when you first load the page.

86
00:06:22,540 --> 00:06:28,420
But we also want to tell it what it should do every time the user selects a new color in real time.

87
00:06:28,420 --> 00:06:30,580
So every time it changes its value.

88
00:06:30,850 --> 00:06:35,680
So we just give it something called on change comp..

89
00:06:36,340 --> 00:06:40,180
So this prop name is different than the usual on change.

90
00:06:40,540 --> 00:06:46,450
So that is something to keep in mind when you're using the color picker component, it's on change comp.

91
00:06:46,810 --> 00:06:52,450
But we just set it to equal curly brackets and give it a function instead of giving it a separate named

92
00:06:52,450 --> 00:06:53,020
function.

93
00:06:53,020 --> 00:06:56,830
Let's just write out an Essex arrow function right here.

94
00:06:57,220 --> 00:07:03,220
So I'll include X as my one parameter that includes information about what just happened and then arrow

95
00:07:03,220 --> 00:07:03,760
symbol.

96
00:07:03,910 --> 00:07:09,940
If we just have one statement, we don't even need curly brackets and let's just use the WordPress set

97
00:07:09,940 --> 00:07:11,290
attributes function.

98
00:07:11,290 --> 00:07:19,450
So that's props, dot set attributes, parentheses to call it in those parentheses we give it an object

99
00:07:19,450 --> 00:07:23,320
so curly brackets and then this will get merged into the other attributes.

100
00:07:23,620 --> 00:07:28,330
So the attribute we want to change is BGI, color, colon and then X.

101
00:07:28,330 --> 00:07:28,560
Right.

102
00:07:28,570 --> 00:07:30,850
That contains information about what just happened.

103
00:07:30,850 --> 00:07:32,620
And then we're going to look inside that.

104
00:07:32,620 --> 00:07:40,030
So X dot and then I want the hexadecimal color code and the WordPress color picker component is going

105
00:07:40,030 --> 00:07:42,430
to offer something just called hex.

106
00:07:42,430 --> 00:07:46,630
So X hex, let's give this a save and test it out.

107
00:07:46,660 --> 00:07:53,980
So if I refresh and click on the block type and if I choose maybe a light blue or teal.

108
00:07:55,420 --> 00:08:01,120
And click update, so nothing changed over here yet, that's OK, we'll get to that in just a moment.

109
00:08:01,120 --> 00:08:02,950
But if I refresh this page.

110
00:08:04,720 --> 00:08:10,470
And click back on the blog type, cool, you can see that it remembered or stored that value.

111
00:08:10,810 --> 00:08:13,720
So it's persisting now at this point, it's very easy.

112
00:08:13,720 --> 00:08:17,910
Let's just go back to our actual blog type here and make it use that color.

113
00:08:18,460 --> 00:08:21,520
So let's find the overall opening div tag.

114
00:08:21,530 --> 00:08:21,720
Right.

115
00:08:21,750 --> 00:08:27,820
So at the very start of the gests that we're returning, we have this div maybe after class name, let's

116
00:08:27,820 --> 00:08:34,930
give it a prop of style equals one set of curly brackets for a dynamic value or just something other

117
00:08:34,930 --> 00:08:40,480
than a literal string of text and then another set of curly brackets for an object of styles.

118
00:08:40,930 --> 00:08:45,820
So background uppercase C for color.

119
00:08:46,210 --> 00:08:46,410
Right.

120
00:08:46,480 --> 00:08:52,640
Normally insists it would be background dash color, but this is JavaScript sort of pretending to be

121
00:08:52,660 --> 00:08:53,380
fixed.

122
00:08:53,400 --> 00:08:57,990
So it's background, color, Kohlman, and then we would just pull it from our attribute.

123
00:08:58,000 --> 00:09:02,080
So props, dot attributes, dot BGU color.

124
00:09:02,890 --> 00:09:04,930
Let's give that to save and test it out.

125
00:09:05,230 --> 00:09:06,670
So now as soon as I refresh.

126
00:09:07,000 --> 00:09:07,660
Awesome.

127
00:09:07,660 --> 00:09:09,720
It's using our custom value.

128
00:09:10,000 --> 00:09:11,310
Let me tone that down a bit.

129
00:09:13,240 --> 00:09:19,750
Now, before we adjust the front end of our blacktip to also use the custom background color, I first

130
00:09:19,750 --> 00:09:23,910
want to address a little styling detail on the admin side of things.

131
00:09:24,250 --> 00:09:31,150
I'm getting this awkward horizontal scroll bar in the right hand toolbar and the color picker is what's

132
00:09:31,150 --> 00:09:33,640
causing that awkward scrollbar.

133
00:09:34,060 --> 00:09:38,760
Also, you'll notice there's not enough room or space for this icon right here.

134
00:09:38,800 --> 00:09:43,570
And if you click on it, well, I just think it looks like it should be sitting here instead of down

135
00:09:43,570 --> 00:09:44,030
below.

136
00:09:44,350 --> 00:09:50,800
So all in all, I'm not very happy with the way that the default WordPress color picker is sort of squishing

137
00:09:50,800 --> 00:09:52,750
down to fit in this area.

138
00:09:52,990 --> 00:09:55,770
And there's nothing wrong with using the default color picker.

139
00:09:56,020 --> 00:10:00,070
Maybe you could even adjust it so that it does properly fit in this area.

140
00:10:00,550 --> 00:10:07,270
But instead, I want to use sort of a third party react component, not just for this tiny horizontal

141
00:10:07,270 --> 00:10:15,700
scrollbar detail, but really just to show you how easy it is to use third party community react packages

142
00:10:15,700 --> 00:10:17,050
inside of WordPress here.

143
00:10:17,590 --> 00:10:24,730
So, for example, there is a package in the react community called React Color, and this has nothing

144
00:10:24,730 --> 00:10:26,050
to do with WordPress.

145
00:10:26,380 --> 00:10:31,150
However, we can see that it offers many different types or styles of color pickers.

146
00:10:31,510 --> 00:10:33,190
So this one looks like Photoshop.

147
00:10:33,190 --> 00:10:36,560
This one looks like sketch, GitHub, Twitter.

148
00:10:36,580 --> 00:10:39,550
This one looks like the default Chrome browser color picker.

149
00:10:39,880 --> 00:10:40,860
You get the idea.

150
00:10:41,170 --> 00:10:46,510
So right now, I want to show you how you can use this package that has nothing to do with WordPress

151
00:10:46,810 --> 00:10:49,180
within our block type in particular.

152
00:10:49,180 --> 00:10:53,860
I want to use this version of the color picker and I want this to be placed right here.

153
00:10:54,250 --> 00:10:55,240
So do this with me.

154
00:10:55,990 --> 00:10:56,800
Voice code.

155
00:10:56,800 --> 00:10:59,680
Let's open up our command line and press control.

156
00:10:59,680 --> 00:11:01,510
See to stop the current task.

157
00:11:01,900 --> 00:11:05,590
Or you could leave it running and open up a secondary command line.

158
00:11:06,130 --> 00:11:12,460
But just for simplicity, let's stop that task so we can stay in this one single command line and run

159
00:11:12,460 --> 00:11:13,450
this command with me.

160
00:11:13,450 --> 00:11:17,530
So we're just going to install that react color package from NPM.

161
00:11:17,530 --> 00:11:25,930
So we just say NPM install in the name was React Dasch, color press, enter.

162
00:11:26,900 --> 00:11:33,770
OK, then we can start our task up again that watches us so that npm run, start cool.

163
00:11:34,100 --> 00:11:38,770
So now back in our code, up at the very top, let's import that package.

164
00:11:39,170 --> 00:11:44,660
So on a new line towards the top, I'll say import curly brackets from string of text.

165
00:11:44,990 --> 00:11:47,940
And the package name was react dash color.

166
00:11:48,500 --> 00:11:51,170
Now, inside the curly brackets, what do we want to import?

167
00:11:51,440 --> 00:11:55,000
Well, that package has many, many different color pictures, right?

168
00:11:55,010 --> 00:11:56,420
There's the Photoshop version.

169
00:11:56,420 --> 00:11:58,790
There's the sketch version, so on and so forth.

170
00:11:59,030 --> 00:12:03,400
In particular, I want the one that's called chrome picker.

171
00:12:04,670 --> 00:12:06,980
OK, now let's go use or leverage this.

172
00:12:06,980 --> 00:12:09,080
So back down in our JSA X.

173
00:12:10,340 --> 00:12:12,440
Instead of color picker.

174
00:12:13,590 --> 00:12:23,010
Let's just change this to chrome picker, we can leave the exact same color prop and unchanged complete

175
00:12:23,010 --> 00:12:25,230
prop, but maybe at the end.

176
00:12:25,920 --> 00:12:33,720
So right before the end of the self-closing tag, let's have one more prop and just say disable alpha

177
00:12:34,350 --> 00:12:35,700
equals curly brackets.

178
00:12:35,700 --> 00:12:36,140
True.

179
00:12:36,450 --> 00:12:40,370
So I don't want to let the admin users change the alpha transparency.

180
00:12:40,920 --> 00:12:42,390
Let's go ahead and save that.

181
00:12:42,780 --> 00:12:47,370
And if we refresh and then click on the block, perfect.

182
00:12:47,370 --> 00:12:51,060
So we no longer have the awkward horizontal scroll bar.

183
00:12:51,630 --> 00:12:56,600
And I just think this color picker looks a bit cleaner, a bit more minimal and it works just the same.

184
00:12:56,610 --> 00:13:03,540
So if I pick sort of a maybe light purple value and click update, I can go ahead and refresh the page

185
00:13:03,540 --> 00:13:08,560
just to prove that it is persisting or storing that data perfect at this point.

186
00:13:08,580 --> 00:13:14,040
Let's change gears and work on displaying the custom background color on the actual front end.

187
00:13:14,220 --> 00:13:16,590
So if we view this on the front end of our site.

188
00:13:18,700 --> 00:13:21,860
Currently, it's still displaying as just the default grey.

189
00:13:22,240 --> 00:13:28,510
This is super easy to fix, so actually to save a bit of typing, we can just take on the opening div

190
00:13:28,540 --> 00:13:29,910
that we just were working with.

191
00:13:30,370 --> 00:13:34,980
Just take this style equals curly brackets, so we don't have to type that out again.

192
00:13:35,000 --> 00:13:36,970
So just copy that into your clipboard.

193
00:13:37,600 --> 00:13:43,270
And then in our file Explorer sidebar, just jump into front end, James.

194
00:13:44,450 --> 00:13:47,250
OK, let's go down into the JSE, towards the bottom.

195
00:13:47,390 --> 00:13:53,590
Here's the overall opening div tag and just paste in your clipboard right about here.

196
00:13:53,930 --> 00:13:59,800
So we have style equals because that exact same attribute will be available to this component.

197
00:14:00,290 --> 00:14:04,040
So if we save that and then refresh the front end.

198
00:14:05,220 --> 00:14:07,980
Woops, you can see that didn't work, I know what the issue here is.

199
00:14:08,160 --> 00:14:15,900
So instead of props attributes, big color now it would just be props, big color, because on the front

200
00:14:15,900 --> 00:14:19,440
end version of our component, there is no attributes object.

201
00:14:19,620 --> 00:14:24,090
We just directly destruction of the properties and pass them in as props.

202
00:14:24,270 --> 00:14:27,180
So just props dot big color for the front end.

203
00:14:27,180 --> 00:14:30,360
If we give that a save refresh perfect.

204
00:14:30,930 --> 00:14:33,540
And that is going to bring this video to a close.

205
00:14:33,900 --> 00:14:38,090
In our next lesson, we'll learn how to change the text alignment.

206
00:14:38,580 --> 00:14:43,960
So, for example, when you click on this block type, we see this menu up here, right about here.

207
00:14:44,370 --> 00:14:49,740
Well, wouldn't it be nice if there was a text alignment icon and you could just click on it and easily

208
00:14:49,740 --> 00:14:56,550
say that the text for our block type should be perhaps center aligned or right aligned, should be a

209
00:14:56,550 --> 00:14:57,450
lot of fun to set up.

210
00:14:57,450 --> 00:15:01,380
And this will be the final lesson for this block type.

211
00:15:01,530 --> 00:15:05,850
Before we change gears, let's keep the momentum rolling and I'll see you then.
