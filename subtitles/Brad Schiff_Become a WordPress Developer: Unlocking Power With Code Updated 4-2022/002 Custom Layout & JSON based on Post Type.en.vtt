WEBVTT
1
00:00:01.470 --> 00:00:02.610
Hello, everyone.

2
00:00:02.940 --> 00:00:10.490
In this lesson, we will work on the search overlay results for the professor and event post types.

3
00:00:10.920 --> 00:00:12.200
Let me show you what I mean.

4
00:00:12.240 --> 00:00:19.800
So if someone searches for something in our previous lesson, we set up results for general info programs

5
00:00:19.800 --> 00:00:20.880
and campuses.

6
00:00:21.150 --> 00:00:25.950
And now in this lesson, we're going to output results for professors and events.

7
00:00:26.340 --> 00:00:27.860
Let's start with professors.

8
00:00:28.200 --> 00:00:32.970
I don't want to just output simple text like we're doing for these other post types.

9
00:00:33.210 --> 00:00:34.100
For professors.

10
00:00:34.110 --> 00:00:40.230
I want to output a small image or photograph of the professor, and then I want to overlay their name

11
00:00:40.230 --> 00:00:41.470
on top of the image.

12
00:00:41.700 --> 00:00:43.260
Now, we've already done this.

13
00:00:43.270 --> 00:00:50.970
If we close the overlay and go to the programs page and then if I click on to my biology program in

14
00:00:50.970 --> 00:00:55.980
this section, you can see that we've already created that exact styling and that exact feature.

15
00:00:56.280 --> 00:00:56.550
Right.

16
00:00:56.550 --> 00:00:59.690
We have a photo for each professor with their name overlaid.

17
00:01:00.030 --> 00:01:08.890
So I just want to use this HTML and CSA structure in our search overlay for any professor results.

18
00:01:09.180 --> 00:01:11.690
So without further ado, let's make this happen.

19
00:01:12.060 --> 00:01:17.040
The first step is over in our text editor within our JavaScript modules folder.

20
00:01:17.050 --> 00:01:23.860
Let's hop in to Search Jass and then let's scroll down to our method that is named Get Results.

21
00:01:24.420 --> 00:01:25.230
Here it is.

22
00:01:25.560 --> 00:01:29.180
And here we see the heading level to four professors.

23
00:01:29.460 --> 00:01:34.220
Now, in order to save some typing, we can recycle the three lines right above it.

24
00:01:34.560 --> 00:01:37.530
These three lines will help us loop through the results.

25
00:01:37.830 --> 00:01:40.140
So I'm just going to copy this into my clipboard.

26
00:01:40.140 --> 00:01:43.650
And then right below, the professors had line pasted in.

27
00:01:44.110 --> 00:01:49.080
OK, now within our new code, we don't want to look for a submarine named programs.

28
00:01:49.380 --> 00:01:51.000
Instead, we want Prof's.

29
00:01:51.270 --> 00:01:56.250
So let's change this and do the same thing for these two lines as well.

30
00:01:57.360 --> 00:01:59.340
Programs to professors.

31
00:02:00.420 --> 00:02:00.840
All right.

32
00:02:00.840 --> 00:02:07.500
And then on this first line, when we are creating the opening unordered list tag, these success classes

33
00:02:07.500 --> 00:02:10.950
make sense if we want to output a plain text list.

34
00:02:11.130 --> 00:02:15.840
But remember, for professors, I want to output a photograph for each professor.

35
00:02:15.930 --> 00:02:24.150
So let's delete this class of men list and linked list and instead let's give it a class of Professor

36
00:02:24.150 --> 00:02:25.770
Dasht cards.

37
00:02:26.220 --> 00:02:26.700
All right, then.

38
00:02:26.700 --> 00:02:31.590
If we scroll over a little bit to the right, this is the message that will display if there are no

39
00:02:31.590 --> 00:02:33.090
resulting professors.

40
00:02:33.420 --> 00:02:37.170
So let's change this from programs to professors.

41
00:02:37.410 --> 00:02:42.720
And if there are no professors, we don't want to display a link anywhere like we did for programs.

42
00:02:43.050 --> 00:02:43.350
Right.

43
00:02:43.350 --> 00:02:46.170
Because we don't have an all professors page.

44
00:02:46.410 --> 00:02:49.200
So I'm just going to delete this tag entirely.

45
00:02:50.910 --> 00:02:51.540
All right.

46
00:02:53.150 --> 00:02:55.490
Now, next, let's customize this line.

47
00:02:55.910 --> 00:03:02.180
This is the line where we actually spell out the HTML that we want for each result item or for each

48
00:03:02.180 --> 00:03:03.230
professor post.

49
00:03:03.380 --> 00:03:06.260
Now, in this case, I'm going to delete all of this.

50
00:03:06.270 --> 00:03:07.790
I want a clean slate.

51
00:03:08.090 --> 00:03:12.640
So let's just completely hollow out this template, literal right after the back tick.

52
00:03:12.650 --> 00:03:15.410
So right at the beginning of the opening line tag.

53
00:03:16.070 --> 00:03:19.690
And I'm just going to select all the way to the closing line tag and delete.

54
00:03:20.400 --> 00:03:20.720
All right.

55
00:03:20.750 --> 00:03:23.000
So now we've got an empty pair of back ticks.

56
00:03:23.000 --> 00:03:29.270
And in between them, I'm actually going to drop down to a new line so I can stay organized.

57
00:03:29.660 --> 00:03:30.020
All right.

58
00:03:30.050 --> 00:03:37.100
Now, the question becomes, what HTML do I want to output in order to generate this styling in this

59
00:03:37.100 --> 00:03:37.760
structure?

60
00:03:38.030 --> 00:03:40.370
Well, there's no sense in reinventing the wheel.

61
00:03:40.520 --> 00:03:47.990
So why don't we just find this template and then we can literally just copy and paste the HTML that

62
00:03:47.990 --> 00:03:50.810
generates the styling into our JavaScript.

63
00:03:51.140 --> 00:03:56.270
So the page that I'm viewing at the moment is a single dash program.

64
00:03:56.630 --> 00:03:58.710
That's what's allowing me to see this section.

65
00:03:58.730 --> 00:04:03.680
So over in our text editor, let's just jump into a single dash program.

66
00:04:05.390 --> 00:04:10.550
And if we scroll down a bit underneath this first WP query that we see.

67
00:04:12.480 --> 00:04:19.320
Here we see the opening unordered list with a class of professor cards and then most importantly, here

68
00:04:19.320 --> 00:04:22.510
is the list item that's getting generated for each professor.

69
00:04:22.800 --> 00:04:26.930
So this is what has the photo for each professor and the overlay text.

70
00:04:27.720 --> 00:04:28.950
So here's what I'm going to do.

71
00:04:28.950 --> 00:04:31.490
I'm just going to select this entire list item.

72
00:04:31.800 --> 00:04:37.650
So from the opening line to the closing line tablets, copy that into my clipboard and then back in

73
00:04:37.650 --> 00:04:43.290
our search jass file in this space where we just hollowed out the template literal, let's just paste

74
00:04:43.290 --> 00:04:50.340
in our clipboard and now we just need to go through and anywhere we see, we need to get rid of it and

75
00:04:50.340 --> 00:04:53.400
replace it with a JavaScript expression instead.

76
00:04:53.820 --> 00:04:59.160
So, for example, the first bit of we see is right here for the RF value.

77
00:04:59.380 --> 00:05:06.690
So let's delete this entire block that is outputting the permalink and in its place, let's use a JavaScript

78
00:05:06.690 --> 00:05:07.410
expression.

79
00:05:07.410 --> 00:05:13.080
So dollar sign curly brackets and then we can just say Eitam dot permalink.

80
00:05:13.770 --> 00:05:20.010
We can use permalink because remember back in Postman here, I've sent an example request to our custom

81
00:05:20.010 --> 00:05:25.860
API URL and remember that our JSON results will contain a property named Permalink.

82
00:05:26.180 --> 00:05:26.550
All right.

83
00:05:26.550 --> 00:05:31.550
Now back in our code, the next bit of week is on this image line.

84
00:05:31.770 --> 00:05:38.010
So we see that for the source attribute of the image we were using to give us a U.

85
00:05:38.010 --> 00:05:42.330
RL of this featured image at a very specific size and crop.

86
00:05:42.570 --> 00:05:49.140
Now, before we go ahead and delete this block of IP, if we jump over to postmen, it's clear to see

87
00:05:49.140 --> 00:05:55.270
that our Jason does not contain a property with a Eurail that points towards a thumbnail image.

88
00:05:55.440 --> 00:06:01.680
So what we need to do right now is modify our Jason output to include a property we can name it whatever

89
00:06:01.680 --> 00:06:06.690
we want, maybe image, and it should contain a Eurail to a JPEG.

90
00:06:06.930 --> 00:06:12.840
So to do that, back in our text editor in our theme folder, let's look inside our eye and see folder

91
00:06:13.110 --> 00:06:21.000
and jump in to search Rutka P and let's scroll down until we see the if block for the professor post

92
00:06:21.000 --> 00:06:21.420
type.

93
00:06:21.660 --> 00:06:27.630
So if gatepost type equals professor and within this associative array that we are building, let's

94
00:06:27.630 --> 00:06:29.790
just add on a new property.

95
00:06:29.790 --> 00:06:35.370
So maybe at the end of this permalink line we could say Kamma and on the new line we could make up whatever

96
00:06:35.370 --> 00:06:36.800
property name we want.

97
00:06:36.810 --> 00:06:38.610
I'm going to call it image.

98
00:06:39.240 --> 00:06:48.780
And then let's just set it to equal the results of a WordPress function named Get the post thumbnail.

99
00:06:48.900 --> 00:06:52.500
You are now we want to pass this WordPress function.

100
00:06:52.500 --> 00:06:53.430
Two things.

101
00:06:53.760 --> 00:06:57.470
The first is which post you want to get the thumbnail image for.

102
00:06:57.810 --> 00:07:02.430
You can just say zero, which is WordPress code for saying the current post.

103
00:07:03.180 --> 00:07:07.680
And then the second argument is the size that you want to use.

104
00:07:08.070 --> 00:07:13.430
So remember, way back in the course we learned how to create different cropped versions of images.

105
00:07:13.530 --> 00:07:16.410
Maybe one is portrait and another is landscape.

106
00:07:16.410 --> 00:07:22.620
So to refresh our memory of which size we want, if we jump back into our JavaScript, you can see that

107
00:07:22.620 --> 00:07:26.250
we are looking for the size named Professor Landscape.

108
00:07:26.460 --> 00:07:34.060
So back in our search route instead of size, let's say Professor Landscape.

109
00:07:35.010 --> 00:07:40.860
OK, now if I save this and refresh postman perfect.

110
00:07:40.860 --> 00:07:47.120
We've now got a property named Image with an absolute Eurail to a perfectly cropped jpeg.

111
00:07:47.310 --> 00:07:51.140
So now we can go ahead and use this property in our front end JavaScript.

112
00:07:51.360 --> 00:07:59.220
So back in search J.S. Right after the source attribute equals quotes, let's delete this entire block.

113
00:08:02.800 --> 00:08:08.410
And in its place, use a JavaScript expression and let's say Eitam dot image.

114
00:08:09.010 --> 00:08:15.190
OK, and then finally, we want to update the actual name of the professor or the title of the post

115
00:08:15.520 --> 00:08:17.710
that's being output in this span here.

116
00:08:17.710 --> 00:08:25.000
So let's delete this block of PHP and then create an expression and just say item dot title.

117
00:08:25.750 --> 00:08:26.110
OK.

118
00:08:26.140 --> 00:08:31.810
Now, if we save this and make sure that your JavaScript is getting compiled and bundled up, and if

119
00:08:31.810 --> 00:08:38.140
we jump over to the front end and if I search for Bachs a lot, I know that should have a professor

120
00:08:38.140 --> 00:08:38.590
result.

121
00:08:38.710 --> 00:08:39.130
Cool.

122
00:08:39.310 --> 00:08:40.050
There we have it.

123
00:08:40.390 --> 00:08:45.690
And if I try to open that in a new tab, you can see that it successfully takes us to that professor.

124
00:08:46.120 --> 00:08:51.620
Or better yet, if I searched for lorem as in lorem ipsum, that should give us multiple results.

125
00:08:52.180 --> 00:08:52.630
Cool.

126
00:08:53.050 --> 00:08:56.030
This looks pretty nice at this point.

127
00:08:56.050 --> 00:09:01.300
Let's change gears and let's work on outputting results for the event post type.

128
00:09:01.450 --> 00:09:07.070
So back in our JavaScript, let's find the heading level to that reads events.

129
00:09:08.290 --> 00:09:09.060
Here it is.

130
00:09:09.520 --> 00:09:15.130
So right below this, we just want to loop through any resulting posts to avoid a bit of extra typing.

131
00:09:15.130 --> 00:09:17.140
We can recycle these lines up here.

132
00:09:17.350 --> 00:09:20.260
In this case, we actually do not need the bottom line.

133
00:09:20.560 --> 00:09:22.990
We can just grab and copy these two lines.

134
00:09:23.350 --> 00:09:26.500
So let me scroll all the way over to the right to the end of that line.

135
00:09:27.070 --> 00:09:28.150
Go ahead and copy it.

136
00:09:29.320 --> 00:09:32.970
And then back underneath the event's headline, let's paste that in.

137
00:09:33.550 --> 00:09:39.440
Now, events are a little bit different because they don't need an opening unordered list tag.

138
00:09:39.730 --> 00:09:45.040
Now, this is a tiny, random detail that has nothing to do with WordPress or JavaScript in general.

139
00:09:45.280 --> 00:09:49.540
This just has to do with the way that I coded the event styling in the first place.

140
00:09:49.700 --> 00:09:56.890
So to refresh your memory of what we're trying to do here, back on our home page, I want to use this

141
00:09:56.890 --> 00:10:03.310
custom format and styling for the events in our search overlay instead of just plain text like we're

142
00:10:03.310 --> 00:10:05.860
using for general info or programs.

143
00:10:06.220 --> 00:10:08.400
So visually, this is our goal.

144
00:10:08.950 --> 00:10:14.380
So back in our JavaScript, first of all, the sub array that we are looking for within results should

145
00:10:14.380 --> 00:10:15.820
no longer be campuses.

146
00:10:16.360 --> 00:10:17.680
It should be events.

147
00:10:19.240 --> 00:10:20.380
Update this as well.

148
00:10:21.040 --> 00:10:27.160
OK, and now if the array has a length greater than zero, if that's true, we do not need to output

149
00:10:27.160 --> 00:10:28.810
this unordered list tag.

150
00:10:29.440 --> 00:10:33.160
So instead let's just output a completely blank pair of quotes.

151
00:10:33.520 --> 00:10:39.160
But if the array is empty, we still want a bit of text that says nothing matches that search.

152
00:10:39.370 --> 00:10:46.690
So let's just change this to say no events match that search and then we can link them to the all events

153
00:10:46.690 --> 00:10:47.260
page.

154
00:10:47.920 --> 00:10:55.600
So let's change this attribute to B slash events instead of campuses and change this to, say, view

155
00:10:55.600 --> 00:10:56.830
all events.

156
00:10:57.580 --> 00:10:57.940
Cool.

157
00:10:58.270 --> 00:11:04.620
Now, next up, we need to customize this line that generates the HTML for each item.

158
00:11:04.780 --> 00:11:10.870
I just want a clean slate, so I'm just going to completely delete this list item from beginning to

159
00:11:10.870 --> 00:11:11.380
end.

160
00:11:12.520 --> 00:11:15.430
OK, so now we've just got a blank template literal.

161
00:11:15.880 --> 00:11:19.930
And within that I'm going to dropdown just to stay organized.

162
00:11:20.470 --> 00:11:24.100
And now the question is what each HTML do we want to generate?

163
00:11:24.280 --> 00:11:26.290
Well, we don't need to reinvent the wheel.

164
00:11:26.500 --> 00:11:31.660
We can just find the HTML that generates this format and copy and paste it.

165
00:11:31.930 --> 00:11:39.220
So I know that the HTML template to generate an event like this lives within a very specific file within

166
00:11:39.220 --> 00:11:40.390
our theme folder.

167
00:11:40.420 --> 00:11:47.050
Earlier in the course, we created a sub folder named Template Parts, and if we look inside it, we

168
00:11:47.050 --> 00:11:56.110
have a file named Content Dash event and this is the HTML that gives us this formatting so we can literally

169
00:11:56.110 --> 00:12:02.590
just copy all of this, select all copy, and then back in our JavaScript within our blank template,

170
00:12:02.590 --> 00:12:03.820
literal pasted in.

171
00:12:04.090 --> 00:12:10.030
And now we just need to hollow out any of the P and replace it with JavaScript expressions.

172
00:12:10.330 --> 00:12:16.870
Actually, the first thing I'm noticing is that on this opening tag, the ATRA value is just a hash

173
00:12:16.870 --> 00:12:17.320
tag.

174
00:12:17.620 --> 00:12:18.910
So let's get rid of that.

175
00:12:19.390 --> 00:12:24.610
And in its place, create an expression and just say item dot permalink.

176
00:12:25.420 --> 00:12:32.290
OK, the next thing we need to work on is outputting the three letter month abbreviation and the date.

177
00:12:32.650 --> 00:12:38.860
So back in our code, here's a block of speed that is getting the date field and then echoing out the

178
00:12:38.860 --> 00:12:39.340
month.

179
00:12:39.910 --> 00:12:42.400
And then down here we are echoing out the day.

180
00:12:42.730 --> 00:12:49.330
Now, if we look at Postman and if I search for something that should return an event like poetry for

181
00:12:49.330 --> 00:12:55.330
Poetry Day, we clearly do not have properties that will give us the month and day.

182
00:12:55.540 --> 00:12:57.660
So we need to go add those right now.

183
00:12:58.090 --> 00:13:01.840
So back in our code within our I n c folder, let's jump in to.

184
00:13:01.900 --> 00:13:10.060
Search route, and if we scroll down a bit, here's the if block, if the post type is a vent and let's

185
00:13:10.060 --> 00:13:12.270
just add on to this associative array.

186
00:13:12.520 --> 00:13:18.040
So at the end of this permalink line, we can add comma and then dropdown and let's create a property

187
00:13:18.040 --> 00:13:19.130
named month.

188
00:13:20.200 --> 00:13:26.830
For now, we can just set it's equal X as a placeholder and let's also say a day and set that to be

189
00:13:26.830 --> 00:13:27.490
X.

190
00:13:27.860 --> 00:13:32.050
OK, now we just need to actually get the month and day values again.

191
00:13:32.050 --> 00:13:35.140
We do not need to reinvent the wheel and write new code.

192
00:13:35.140 --> 00:13:41.440
We can just go back into our search JavaScript and we've already got the code here that will fetch the

193
00:13:41.440 --> 00:13:45.110
overall event field and then generate the month and the day.

194
00:13:45.430 --> 00:13:46.900
So here's what I'm going to do.

195
00:13:47.050 --> 00:13:51.880
This line of code that says event date equals new instance of date time.

196
00:13:52.240 --> 00:14:00.670
Let me just copy that entire line and then over in our search route file right above this array push

197
00:14:00.670 --> 00:14:01.030
line.

198
00:14:01.030 --> 00:14:05.920
So right underneath this if line, we can just paste in our clipboard.

199
00:14:06.100 --> 00:14:06.520
All right.

200
00:14:06.550 --> 00:14:09.160
So now we've got this variable named Event Date.

201
00:14:09.460 --> 00:14:15.100
And now down here for month and day, we can just look inside of event date instead of these placeholder

202
00:14:15.100 --> 00:14:16.150
X values.

203
00:14:16.480 --> 00:14:18.040
For an example of how to do that.

204
00:14:18.040 --> 00:14:23.680
Back in our JavaScript, you can see that we were echoing the month by just looking inside event date

205
00:14:23.860 --> 00:14:29.920
dash greater than is how you look within an object and p and then we were using the format, method

206
00:14:29.920 --> 00:14:34.570
and capital M is the code for a three letter month abbreviation.

207
00:14:34.840 --> 00:14:38.400
So we can actually just copy and paste this block of code here.

208
00:14:38.650 --> 00:14:39.820
We don't need the echo.

209
00:14:39.820 --> 00:14:40.860
We just want this.

210
00:14:41.230 --> 00:14:41.920
Copy that.

211
00:14:42.250 --> 00:14:47.770
Back in our search route for month, get rid of the placeholder, say this and then for day we can do

212
00:14:47.770 --> 00:14:52.800
the same thing pasted in and the code for day is lowercase d cool.

213
00:14:52.810 --> 00:14:59.890
Now if we save this and refresh postman perfect within our JSON, we now have a month property and a

214
00:14:59.890 --> 00:15:00.790
day property.

215
00:15:01.040 --> 00:15:06.970
So now back in our front end JavaScript, we are free to completely delete all of this PHP here.

216
00:15:07.150 --> 00:15:13.420
So the block begins here and ends here and in its place.

217
00:15:13.420 --> 00:15:15.990
Within this span we just want to output the month.

218
00:15:16.480 --> 00:15:20.780
So JavaScript expression and then Eitam dot month.

219
00:15:21.610 --> 00:15:23.560
Now let's do the same thing for the day.

220
00:15:23.920 --> 00:15:27.310
So the P block begins here and ends here.

221
00:15:28.510 --> 00:15:32.020
Let's open up a JavaScript expression and say item dot day.

222
00:15:32.500 --> 00:15:32.940
All right.

223
00:15:32.950 --> 00:15:37.000
Next up, we see being used to output the permalink.

224
00:15:37.510 --> 00:15:41.230
So let's delete that starts here and ends here.

225
00:15:42.190 --> 00:15:50.200
JavaScript item, dot permalink and then inside the tag we are using to output the title.

226
00:15:50.560 --> 00:15:56.260
So let's delete that chunk of BHP item dot title.

227
00:15:57.280 --> 00:16:05.170
OK, and then finally, we are using to generate a brief description or excerpt right on our homepage.

228
00:16:05.170 --> 00:16:10.060
You can see that if an event has a custom excerpt, we display that.

229
00:16:10.630 --> 00:16:16.420
But if it doesn't have a handcrafted excerpt, then as a fallback we just display in the first twenty

230
00:16:16.420 --> 00:16:18.310
or thirty words of the post.

231
00:16:18.640 --> 00:16:25.720
So back in our code, we can literally just copy and paste this if logic out of this JavaScript template

232
00:16:25.720 --> 00:16:27.370
and into our search route.

233
00:16:28.540 --> 00:16:29.730
Let me show you what I mean.

234
00:16:29.770 --> 00:16:36.000
So let's begin selecting at the start of the IF statement and then the if else combo ends right here.

235
00:16:37.090 --> 00:16:44.020
So let's copy that into our clipboard and then over in our search route file within this array that

236
00:16:44.020 --> 00:16:45.280
we are building after this.

237
00:16:45.280 --> 00:16:49.630
Daylin, let's add a comma and let's create a brand new property.

238
00:16:49.630 --> 00:16:51.100
We could name it whatever we want.

239
00:16:51.200 --> 00:16:55.990
I'm going to call it description and let's set it to equal.

240
00:16:56.200 --> 00:16:58.180
And now this is the part that's a little bit tricky.

241
00:16:58.420 --> 00:17:02.730
I'm not just going to paste in my clipboard here because that could get quite messy.

242
00:17:02.980 --> 00:17:06.790
Instead, let's do this up above this array push line.

243
00:17:07.030 --> 00:17:14.060
Let's create a new variable and name it description and let's set it to equal no.

244
00:17:14.590 --> 00:17:20.830
So now we've got this empty placeholder variable and now right below that, we can paste in our clipboard

245
00:17:21.100 --> 00:17:24.820
and now we can just adapt and clean up this if else statement.

246
00:17:25.070 --> 00:17:27.280
So I don't need all of this extra space.

247
00:17:32.040 --> 00:17:37.830
OK, now we don't actually want to echo anything, instead, we just want to update the value of our

248
00:17:37.830 --> 00:17:39.150
description variable.

249
00:17:39.390 --> 00:17:41.700
So this is the case in this code runs.

250
00:17:41.700 --> 00:17:48.420
Let's get rid of the echo and just say description equals this else.

251
00:17:48.420 --> 00:17:54.420
If this is the case, get rid of the echo, say a description equals this.

252
00:17:54.990 --> 00:17:55.310
Cool.

253
00:17:55.320 --> 00:18:02.100
So now down here within this array that we are building, let's just say this property equals our description

254
00:18:02.100 --> 00:18:02.700
variable.

255
00:18:02.940 --> 00:18:09.840
OK, so if we save that and then refresh postman beautiful, we can see we've got a new property named

256
00:18:09.840 --> 00:18:10.630
description.

257
00:18:11.490 --> 00:18:17.580
So now back in our front end JavaScript code, we can go ahead and delete this entire block that was

258
00:18:17.580 --> 00:18:26.200
surrounding the NFL's logic and in its place, use an expression and say Eitam dot description, OK?

259
00:18:26.220 --> 00:18:29.070
And then finally, let's not forget about the read more link.

260
00:18:29.220 --> 00:18:30.120
So let's get rid of this.

261
00:18:30.960 --> 00:18:34.610
Replace it with a permalink item dot permalink.

262
00:18:35.580 --> 00:18:35.900
Cool.

263
00:18:36.240 --> 00:18:43.170
Now, if we go ahead and save that and then back in the browser, if I search for poetry, as in Poetry

264
00:18:43.170 --> 00:18:45.210
Day, there should be a result.

265
00:18:45.360 --> 00:18:45.750
Yep.

266
00:18:46.320 --> 00:18:47.190
Looks perfect.

267
00:18:47.550 --> 00:18:53.610
Or if I search for science of cats, I know that's another event that I have.

268
00:18:53.610 --> 00:18:54.270
Perfect.

269
00:18:54.480 --> 00:19:00.060
And you can click the link and it takes you to that event and that's going to bring this lesson to a

270
00:19:00.060 --> 00:19:00.720
close.

271
00:19:00.930 --> 00:19:06.270
In our next lesson, we will work on the main reason why we created a custom API.

272
00:19:06.270 --> 00:19:08.180
You are out in the first place.

273
00:19:08.430 --> 00:19:16.080
What I'm referring to is implementing custom search logic so that when you search for biology, it should

274
00:19:16.080 --> 00:19:21.150
pull in any professors that have a relationship to the biology program.

275
00:19:21.150 --> 00:19:26.340
And it should also pull in any campuses or events that are related to biology.

276
00:19:26.610 --> 00:19:28.780
Setting up that logic should be a lot of fun.

277
00:19:28.890 --> 00:19:33.060
So let's keep things rolling and I will see you in the next lesson.
