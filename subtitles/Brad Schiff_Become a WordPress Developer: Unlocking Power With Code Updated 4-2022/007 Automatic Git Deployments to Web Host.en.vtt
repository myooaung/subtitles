WEBVTT
1
00:00:07.120 --> 00:00:13.100
Anyways, go ahead and pause this video and then resume it once you've signed up for a deploy HQ account.

2
00:00:13.630 --> 00:00:14.260
All right.

3
00:00:14.260 --> 00:00:20.590
So once you've logged in to deploy HQ, let's go ahead and set up a new project.

4
00:00:21.960 --> 00:00:24.540
Go ahead and give it a name, the name doesn't matter.

5
00:00:25.320 --> 00:00:29.130
I will say fictional university, what does matter?

6
00:00:29.130 --> 00:00:32.420
What is important is which service you choose here.

7
00:00:32.730 --> 00:00:36.060
I hosted my repo on GitHub, so that's what I will click.

8
00:00:36.450 --> 00:00:39.840
OK, then let's click Create Project next.

9
00:00:39.840 --> 00:00:46.560
It takes me to a GitHub dotcom screen that's asking do I want to authorize deploy HQ to be able to access

10
00:00:46.560 --> 00:00:47.580
my GitHub account.

11
00:00:47.970 --> 00:00:51.900
I do indeed want to authorize it, so I will click the screen, authorize button.

12
00:00:52.440 --> 00:00:55.290
GitHub will ask for your password, go ahead and enter it.

13
00:00:55.680 --> 00:01:01.620
After that, it should take you back to the Deploy HQ website and now it's showing you a list of all

14
00:01:01.620 --> 00:01:03.510
the repos in your GitHub account.

15
00:01:03.810 --> 00:01:07.980
So just look for the new repo you created for our WordPress project.

16
00:01:08.310 --> 00:01:14.970
For example, I named my new project on GitHub WP Deploy Test, so just click on your repo.

17
00:01:17.450 --> 00:01:24.490
OK, so now our deployed HQ project has a repo associated with it, now we just need to set up a server.

18
00:01:24.800 --> 00:01:30.020
So this is where we tell Deploy HQ how it can connect to our Web host.

19
00:01:30.200 --> 00:01:31.580
So create new server.

20
00:01:31.580 --> 00:01:32.600
Let's give it a name.

21
00:01:32.600 --> 00:01:35.660
The name doesn't matter, but I will just say site ground.

22
00:01:36.080 --> 00:01:38.140
OK, down here we see protocol.

23
00:01:38.390 --> 00:01:41.530
So how do we technically want to connect to the web host?

24
00:01:41.960 --> 00:01:48.800
Well, in a perfect world, we'd want to use the S.H. or FTP option, but every Web host is different.

25
00:01:49.070 --> 00:01:54.400
Some might make that very easy to configure and others might make it very difficult or confusing.

26
00:01:54.860 --> 00:01:59.990
So you'll need to perform a bit of research with your particular Web hosting company and figure out

27
00:01:59.990 --> 00:02:07.640
where you can create either an S.H. user or an FTP user, or if that's too challenging, you can always

28
00:02:07.640 --> 00:02:10.480
use the FTP, the standard FTP option.

29
00:02:10.940 --> 00:02:17.120
It's potentially less secure, but as long as deploy HQ is handling things in a smart way, you should

30
00:02:17.120 --> 00:02:17.770
be OK.

31
00:02:18.260 --> 00:02:23.480
Either way, whichever option you choose, you will need to do a bit of research on your web host here.

32
00:02:25.100 --> 00:02:30.320
With that click, if we scroll down a bit, you're probably wondering how are we supposed to know what

33
00:02:30.320 --> 00:02:35.240
to enter for these fields like hostname port username and password?

34
00:02:35.630 --> 00:02:37.430
Well, once again, there's no way around it.

35
00:02:37.430 --> 00:02:42.230
You'll need to do a bit of research on your particular Web host with most hosts.

36
00:02:42.230 --> 00:02:48.230
If you go into the control panel or the dashboard, you can find either S.H. or FTP or just standard

37
00:02:48.230 --> 00:02:55.400
FTP, and you'll just want to either create a new user if one doesn't already exist or if one already

38
00:02:55.400 --> 00:03:01.310
exists and you can't remember what the password is, you might just need to set a new password right

39
00:03:01.310 --> 00:03:01.970
then and there.

40
00:03:02.300 --> 00:03:07.460
But either way, you're just trying to move over those values into deploy HQ.

41
00:03:08.060 --> 00:03:14.420
Now, the fields will be different depending on whether you chose S.H. and safety or standard FTP and

42
00:03:14.420 --> 00:03:16.790
your values will be different depending on your host.

43
00:03:16.790 --> 00:03:23.750
But in particular, one field that I want to draw your attention to is this deployment path field.

44
00:03:24.140 --> 00:03:28.070
This field in particular is one of the most common sources of frustration.

45
00:03:28.460 --> 00:03:35.180
Essentially, if you go to your Web hosting file manager or you did use a manual FTP program, well,

46
00:03:35.180 --> 00:03:40.370
when you first start digging through that folder structure, it might show you the different domains

47
00:03:40.370 --> 00:03:46.430
and then there might be a folder called Public or public underscore HTML or w WW.

48
00:03:46.550 --> 00:03:53.630
Again, every host is different, but essentially you really just need to make sure that your SSA address,

49
00:03:53.630 --> 00:03:58.880
FTP or FTP user, that it's pushing files to the correct path.

50
00:03:59.390 --> 00:04:04.670
And to get a frame of reference here for how your host works, you can always create a WordPress website

51
00:04:04.670 --> 00:04:11.420
on your host using the easy one click installer and then look in your file manager and sort of track

52
00:04:11.420 --> 00:04:15.440
down the file path of where the WordPress files actually live.

53
00:04:15.680 --> 00:04:15.900
Right.

54
00:04:15.980 --> 00:04:22.040
Like, do you first need to dig into a domain folder and then a public underscore HTML folder, so on

55
00:04:22.040 --> 00:04:22.730
and so forth.

56
00:04:22.730 --> 00:04:27.320
So if you think that you have everything else set up correctly and it's still not working.

57
00:04:27.680 --> 00:04:32.900
Well, in just a moment when we actually perform our first deployment, go dig through your Web hosting

58
00:04:32.900 --> 00:04:37.850
file manager and pay attention to where Deploy HQ is pushing those files to.

59
00:04:38.120 --> 00:04:41.720
Perhaps it's not pushing it into the correct path on your server.

60
00:04:42.090 --> 00:04:43.090
OK, and that's it.

61
00:04:43.220 --> 00:04:46.100
All of these other default options are OK for now.

62
00:04:46.430 --> 00:04:48.710
Let's go ahead and click create server.

63
00:04:50.040 --> 00:04:56.130
On this next screen, I don't necessarily agree with all of these suggestions, so I'm actually just

64
00:04:56.130 --> 00:04:58.500
going to click skip this step.

65
00:05:00.220 --> 00:05:04.340
OK, and cool, this is the screen we've all been waiting for.

66
00:05:04.690 --> 00:05:07.810
This is where we can actually make a deployment.

67
00:05:08.260 --> 00:05:12.340
So for the server, yes, I want to use the site ground server we just set up.

68
00:05:12.640 --> 00:05:16.840
I do want to use the main or master branch on my GitHub repo.

69
00:05:17.260 --> 00:05:18.360
Keep scrolling down.

70
00:05:18.370 --> 00:05:19.240
This looks great.

71
00:05:19.960 --> 00:05:24.550
I'm going to use the start immediately option and let's go ahead and click deploy.

72
00:05:25.850 --> 00:05:31.880
Now, normally, this will only take a few seconds, however, the very first deploy is going to take

73
00:05:31.880 --> 00:05:37.900
a good amount of time because it has to transfer every single file, right.

74
00:05:37.910 --> 00:05:41.090
All of the world press system files everything.

75
00:05:41.360 --> 00:05:47.600
Now, in the future, though, when we make a deployment, it only has to send the actual few files

76
00:05:47.600 --> 00:05:50.240
that we changed and pushed up to our repo.

77
00:05:50.690 --> 00:05:56.630
So for this first deploy, you might want to go get a coffee or step away from your computer for five

78
00:05:56.630 --> 00:06:02.390
minutes or maybe even 10 or 15 minutes, but eventually it will complete.

79
00:06:02.630 --> 00:06:08.820
So through the magic of video editing, I fast forwarded and you can see that my deployment has finished.

80
00:06:09.320 --> 00:06:13.730
This means that our site Ground Public Web hosted site should now work.

81
00:06:14.360 --> 00:06:21.050
So previously in this tab, you can see I was trying to visit Brad Asphaug Edwards site and it was a

82
00:06:21.050 --> 00:06:22.120
403 error.

83
00:06:22.370 --> 00:06:26.740
However, now that the deployment has finished, the files exist.

84
00:06:26.750 --> 00:06:28.100
So if I refresh.

85
00:06:29.830 --> 00:06:37.900
Cool, all of those files from our GitHub repository have been pushed to our site ground Web host Couso.

86
00:06:37.900 --> 00:06:42.890
In our previous lesson, we set up the database and now in this lesson, we set up the files.

87
00:06:43.240 --> 00:06:45.630
This means our public website is ready to go.

88
00:06:46.090 --> 00:06:47.200
Well, almost.

89
00:06:47.350 --> 00:06:50.880
If you try to visit any of the links, you'll likely see an error screen.

90
00:06:51.070 --> 00:06:54.460
And that's just because we need to rebuild our permalink structure.

91
00:06:54.730 --> 00:06:59.200
So to do that, go ahead and log in with your WordPress admin account.

92
00:07:00.590 --> 00:07:01.610
Go ahead and log in.

93
00:07:02.150 --> 00:07:07.010
OK, then in the left hand sidebar under settings, click on Permalink.

94
00:07:08.400 --> 00:07:11.100
Just scroll down to the bottom and click save changes.

95
00:07:12.440 --> 00:07:17.240
Now that we've done that, if we jump back to the front end of our website, we should be able to use

96
00:07:17.240 --> 00:07:18.110
the navigation.

97
00:07:18.440 --> 00:07:18.770
Yep.

98
00:07:18.770 --> 00:07:21.830
And we can successfully navigate around our website.

99
00:07:22.100 --> 00:07:24.920
And you can share these URLs with your friends and family.

100
00:07:24.920 --> 00:07:25.200
Right.

101
00:07:25.310 --> 00:07:27.940
This website is live up on the Web.

102
00:07:28.340 --> 00:07:35.780
And now that we've made that first one time big deployment of all of our files, now let's set up automatic

103
00:07:35.780 --> 00:07:42.980
deployments so that any time we update the master branch on our GitHub or BitBucket account, a deployment

104
00:07:42.980 --> 00:07:48.580
automatically occurs and only uploads the changed files to our Web host.

105
00:07:48.940 --> 00:07:52.160
So let's jump back into our Deploy HQ account.

106
00:07:52.610 --> 00:07:58.410
And in the left hand side bar, we're looking for something named automatic deployments.

107
00:07:58.850 --> 00:08:00.320
Let's go ahead and click on that.

108
00:08:01.100 --> 00:08:07.430
If I scroll down just a little bit, we see this area with the subedar named enabled servers and groups

109
00:08:07.820 --> 00:08:11.590
and it says select which servers should have auto deployment enabled.

110
00:08:11.900 --> 00:08:15.110
So I'm just going to check this or enable this.

111
00:08:15.620 --> 00:08:19.490
And I do indeed want these site ground server setup to also be enabled.

112
00:08:20.180 --> 00:08:23.060
And I will point out that regarding this Web hook, U.

113
00:08:23.060 --> 00:08:28.520
RL sometimes deploy HQ can successfully add this to your GitHub repo.

114
00:08:28.700 --> 00:08:33.130
However, I also have firsthand experience with that, not working automatically.

115
00:08:33.140 --> 00:08:38.420
So just to play it safe, go ahead and copy your web, hook you earlier into your clipboard.

116
00:08:38.660 --> 00:08:44.450
Yours will be different than mine, obviously, but copy that into your clipboard and then back in your

117
00:08:44.450 --> 00:08:48.920
GitHub repo your overview screen, click on settings.

118
00:08:49.900 --> 00:08:52.660
In the left hand side bar, click on Web Hooke's.

119
00:08:53.840 --> 00:08:59.660
In the payload Eurail field, just paste in your clipboard, I will leave all of the other settings

120
00:08:59.660 --> 00:09:02.750
set to their default and then just click add web hook.

121
00:09:03.530 --> 00:09:10.610
OK, now that we've done that, you can jump back to deploy HQ and we have successfully set up automatic

122
00:09:10.610 --> 00:09:18.080
deployments, meaning the next time we push a comet to our GitHub or BitBucket repo, those specifically

123
00:09:18.080 --> 00:09:22.520
changed files should just get automatically sent over to our Web host.

124
00:09:23.000 --> 00:09:29.270
I'm going to jump back to my local dev environment website and let's imagine I want to make two changes.

125
00:09:29.630 --> 00:09:36.710
Maybe I want to change this headline to read Hello World instead of just hello and maybe up in my head

126
00:09:36.710 --> 00:09:39.260
or navigation instead of campuses.

127
00:09:39.260 --> 00:09:43.700
I want to say locations so we know exactly what to do.

128
00:09:43.910 --> 00:09:50.060
We just jump into our text editor and to be more specific, make sure that you've opened our fictional

129
00:09:50.060 --> 00:09:52.140
university theme folder.

130
00:09:52.640 --> 00:09:55.520
OK, first, let's jump into front page.

131
00:09:58.060 --> 00:10:05.710
And up at the top here, we see hello, let's change that to hello, karma world, give that save back

132
00:10:05.710 --> 00:10:08.530
on the homepage of our local dev environment.

133
00:10:08.530 --> 00:10:09.640
We see that change.

134
00:10:09.910 --> 00:10:12.970
Let's also change campuses up in the navigation.

135
00:10:13.630 --> 00:10:18.850
So in our theme folder, jump into header BHP.

136
00:10:20.040 --> 00:10:25.800
We're looking for the unordered list with the list items, here's the one for campus.

137
00:10:27.270 --> 00:10:35.130
So I'm just going to scroll to the right and change the word inside the element from campuses to locations,

138
00:10:35.610 --> 00:10:38.390
give that a safe back in our dev environment.

139
00:10:38.640 --> 00:10:39.080
Cool.

140
00:10:39.330 --> 00:10:40.920
We see that taking effect.

141
00:10:41.430 --> 00:10:44.160
So now let's imagine I'm happy with these changes.

142
00:10:44.710 --> 00:10:47.490
I've had a chance to test them out, make sure they look good.

143
00:10:47.700 --> 00:10:52.460
And now I want to go live with these changes now, thanks to our new workflow.

144
00:10:52.650 --> 00:10:57.480
Watch how easy it is to update our live Web site up on our Web host.

145
00:10:57.690 --> 00:11:02.830
All we need to do is commit and push our changes up to GitHub or BitBucket.

146
00:11:03.120 --> 00:11:07.170
So back in VST code, I have my theme folder open right now.

147
00:11:07.170 --> 00:11:12.270
So if I open up the command line, my NPM run dev task is running.

148
00:11:12.660 --> 00:11:19.740
We can actually leave this running if we want to and instead use this icon here to open a second terminal

149
00:11:19.740 --> 00:11:20.610
or command line.

150
00:11:22.020 --> 00:11:25.090
And then this menu lets you switch between your two terminals.

151
00:11:25.530 --> 00:11:31.260
So in this second command line, I'm just going to commit my files into my git repo and then push it

152
00:11:31.260 --> 00:11:42.990
up to GitHub so I get add everything I'm going to commit them changed on page and header and navigation.

153
00:11:45.530 --> 00:11:50.090
Now that I've committed that to get on my computer, I'm just going to push it up to GitHub, so get

154
00:11:50.450 --> 00:11:52.850
push origin master.

155
00:11:58.060 --> 00:12:04.240
And that's it, I literally do not need to do anything else, so right now in the background, deploy

156
00:12:04.240 --> 00:12:05.940
HQ is doing its thing.

157
00:12:06.250 --> 00:12:11.530
We only needed to set it up that one time, that little bit of configuration, and now we don't ever

158
00:12:11.530 --> 00:12:14.180
need to deal with it, look at it or touch it again.

159
00:12:14.500 --> 00:12:20.860
So back in the Deploy HQ tab, if I click on deployments in the sidebar, if you switch to the screen

160
00:12:20.860 --> 00:12:24.070
quickly enough, you'll see the deployment in progress.

161
00:12:24.070 --> 00:12:27.130
But you can see in my case, it's already completed.

162
00:12:27.430 --> 00:12:31.660
So there's my get commit message home page and header navigation changes.

163
00:12:32.020 --> 00:12:33.490
So it's been deployed.

164
00:12:33.700 --> 00:12:38.140
If I go over to my Brad Estcourt SGU site and refresh.

165
00:12:39.160 --> 00:12:46.990
Awesome, we see hello, world change, and we also see locations in the navigation perfect deploy HQ

166
00:12:47.020 --> 00:12:50.990
only uploaded those two new files that actually changed.

167
00:12:51.310 --> 00:12:56.440
Now, I know this might not seem like a big deal, but to me and so many other developers, this is

168
00:12:56.440 --> 00:12:58.420
such a luxurious workflow.

169
00:12:58.630 --> 00:13:04.510
Now, you don't need to mentally keep track of which files you've changed, because if you're developing

170
00:13:04.510 --> 00:13:10.180
a fairly big new feature, you might have changed seven or eight or 12 different files.

171
00:13:10.420 --> 00:13:14.880
And it can be hard to keep track of which files change, in which files didn't change.

172
00:13:14.890 --> 00:13:19.180
And normally you would have to manually upload all of your changed files.

173
00:13:19.450 --> 00:13:21.790
So we don't have to mess with any of that anymore.

174
00:13:21.970 --> 00:13:26.800
And we don't ever need to manually open up an FTP program ever again.

175
00:13:27.070 --> 00:13:32.890
And just in case you're curious, you can always jump over to deploy HQ, click on deployments in the

176
00:13:32.890 --> 00:13:37.660
sidebar, and here you can see a history of your most recent deployment.

177
00:13:38.080 --> 00:13:41.080
You can even click View to see the details.

178
00:13:42.700 --> 00:13:47.980
Every deployment service is different, but with deploying HQ, you can click on the transferring icon

179
00:13:48.760 --> 00:13:54.880
and it will show you exactly the files that got updated and we can see that we are in business and that's

180
00:13:54.880 --> 00:13:58.470
actually going to bring this section of the course to a close.

181
00:13:58.750 --> 00:14:05.440
Now, on a related note, you might have a few questions about exactly which files you should keep within

182
00:14:05.440 --> 00:14:06.590
your repository.

183
00:14:06.760 --> 00:14:12.400
So, for example, if I look at my file tree, there's no right or wrong way of setting up a WordPress

184
00:14:12.400 --> 00:14:13.270
repository.

185
00:14:13.270 --> 00:14:18.690
But a lot of people like to ignore the WP content uploads folder.

186
00:14:18.940 --> 00:14:24.250
So that way, if you're just experimenting and uploading different jpeg within your local dev copy,

187
00:14:24.460 --> 00:14:28.420
those files will not get automatically pushed to your web host.

188
00:14:28.630 --> 00:14:30.170
It's just personal preference.

189
00:14:30.460 --> 00:14:36.450
Other developers like to take it a step further and only have their theme folder within version control.

190
00:14:36.700 --> 00:14:42.550
There is no right or wrong way of doing this, but depending on how you set things up, it will affect

191
00:14:42.550 --> 00:14:45.810
how you handle WordPress core updates.

192
00:14:46.090 --> 00:14:51.490
I will touch on that topic in greater detail in the extra credit section of this course.

193
00:14:51.790 --> 00:14:54.580
But for now, that's going to bring this lesson to a close.

194
00:14:54.850 --> 00:14:58.510
So let's keep things rolling and I will see you in the next lesson.
