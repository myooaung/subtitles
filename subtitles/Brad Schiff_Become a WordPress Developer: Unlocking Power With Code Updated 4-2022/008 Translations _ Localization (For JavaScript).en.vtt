WEBVTT
1
00:00:02.290 --> 00:00:03.260
Hello, everyone.

2
00:00:03.610 --> 00:00:10.390
In this lesson, we're going to learn how to add localization or translations to our JavaScript.

3
00:00:10.960 --> 00:00:12.220
Let me explain what I mean.

4
00:00:12.230 --> 00:00:20.890
So you might remember in an earlier lesson, we used the logo translate plugin to make the output or

5
00:00:20.890 --> 00:00:25.000
content of our files flexible from a language perspective.

6
00:00:25.660 --> 00:00:29.980
You might remember if I click into here, I had a plugin called Test Plugin.

7
00:00:30.130 --> 00:00:35.890
And remember, I set up a Spanish translation just for a few phrases for that plugin.

8
00:00:36.340 --> 00:00:40.940
So we've already learned how to make our flexible in terms of translations.

9
00:00:41.410 --> 00:00:43.480
Well, now in this video, we want to do the same thing.

10
00:00:43.480 --> 00:00:44.830
But for JavaScript.

11
00:00:45.310 --> 00:00:46.300
So let's do this.

12
00:00:46.570 --> 00:00:52.330
Let's continue to work on our featured professor, plug in and just add one more detail to it.

13
00:00:52.780 --> 00:00:54.970
So right now, I'm editing a blog post.

14
00:00:55.240 --> 00:01:02.080
And if you add a new instance, so a new fresh copy of the Professor Call-out, see this message right

15
00:01:02.080 --> 00:01:05.080
here that says select a professor, imagine.

16
00:01:05.080 --> 00:01:07.430
I want that to be easy to translate.

17
00:01:07.630 --> 00:01:14.110
So imagine I want to translate my plugin into Spanish and provide a Spanish translation for select a

18
00:01:14.110 --> 00:01:14.780
professor.

19
00:01:15.430 --> 00:01:20.800
Now, the whole point of this video is that this text is being output with JavaScript not.

20
00:01:21.670 --> 00:01:22.890
So how would we do this?

21
00:01:22.900 --> 00:01:24.230
How would we accomplish this?

22
00:01:24.730 --> 00:01:31.690
Well, even though this element is powered by JavaScript, we do still need to begin with PHP, just

23
00:01:31.690 --> 00:01:37.060
in terms of telling WordPress that our plugin supports translations at all in the first place.

24
00:01:37.450 --> 00:01:42.460
Now, we've already done this once earlier in the course, but practice makes perfect, so let's try

25
00:01:42.460 --> 00:01:42.890
it again.

26
00:01:43.300 --> 00:01:52.570
So in our main file, so featured Professor P up in the very top comment area, we just need to provide

27
00:01:52.570 --> 00:01:56.460
a domain path and a text domain.

28
00:01:56.470 --> 00:02:06.150
So let's first say text domain Colen and let's just call it featured Dasch Professor.

29
00:02:06.790 --> 00:02:12.220
OK, dropdown, let's say domain path, colon slash languages.

30
00:02:12.580 --> 00:02:15.850
Let's go ahead and create a new empty folder in our sidebar.

31
00:02:15.850 --> 00:02:19.000
So new folder to just name it languages.

32
00:02:19.700 --> 00:02:24.430
OK, and then in our init function so it's named on init.

33
00:02:24.610 --> 00:02:28.270
Scroll down a little bit and look for that so you'll know it's the right function.

34
00:02:28.270 --> 00:02:34.930
If you see register Medda, register script style register block type maybe right above register Medda

35
00:02:34.930 --> 00:02:41.920
let's say load plug in text domain semicolon.

36
00:02:42.430 --> 00:02:48.660
First we give it the name we chose which just a moment ago we chose featured Dasch Professor comma.

37
00:02:48.880 --> 00:02:51.270
The next argument, we just give it a value of false.

38
00:02:51.280 --> 00:02:56.520
Now even the official WordPress documentation doesn't perfectly explain what's going on here.

39
00:02:56.830 --> 00:02:59.140
So for now, I'm just happy with the value of false.

40
00:02:59.290 --> 00:03:06.190
And then the third argument is where we just point towards that languages folder so we can say der name,

41
00:03:06.190 --> 00:03:13.930
call that inside the parentheses, just say plug in underscore based name, which is a function itself.

42
00:03:13.930 --> 00:03:14.860
Give it the file.

43
00:03:14.860 --> 00:03:18.430
Constancio underscore, underscore, file, underscore, underscore.

44
00:03:18.850 --> 00:03:25.330
Now after these two closing parentheses, but before the third closing parentheses we can add on a string

45
00:03:25.330 --> 00:03:27.730
of text languages.

46
00:03:28.210 --> 00:03:33.550
So altogether this is going to return the directory that the current file is in and then we're just

47
00:03:33.550 --> 00:03:35.710
adding on languages.

48
00:03:36.100 --> 00:03:36.490
Cool.

49
00:03:36.670 --> 00:03:42.220
At this point, WordPress is now aware that this plugin supports translations.

50
00:03:42.610 --> 00:03:48.370
So let's save this file and now let's actually jump into the JavaScript side of things.

51
00:03:48.370 --> 00:03:54.760
So in our Sarsae folder, let's go in index jazz up at the very top.

52
00:03:54.760 --> 00:03:56.500
We want to import something new.

53
00:03:56.500 --> 00:03:59.110
Well, I'm actually not going to import it.

54
00:03:59.110 --> 00:04:03.130
I'm just going to create a shortcut from the global scope of WordPress.

55
00:04:03.130 --> 00:04:13.380
So we'll say consed underscore underscore equals wp dot i eighteen mn dot underscore underscore.

56
00:04:13.870 --> 00:04:19.690
So essentially WordPress is making this available on the global scope and I'm just creating a shortcut

57
00:04:19.690 --> 00:04:23.620
to it so that whenever I want to use it, I don't have to type all of this.

58
00:04:23.800 --> 00:04:25.960
We can instead just type this.

59
00:04:26.390 --> 00:04:32.500
The reason I'm looking for it directly in the global scope instead of using this import from syntax

60
00:04:32.860 --> 00:04:39.490
is because I've seen that the logo translate plugin doesn't work perfectly unless we look for it directly

61
00:04:39.490 --> 00:04:40.270
like this.

62
00:04:40.810 --> 00:04:44.610
Anyways, we now have this underscore, underscore tool that we can use.

63
00:04:45.190 --> 00:04:46.780
So remember the task at hand.

64
00:04:46.780 --> 00:04:53.000
We want to make this select a professor text translatable so down in our joysticks.

65
00:04:53.050 --> 00:04:57.010
Just scroll down and find that we're looking for the select element.

66
00:04:57.490 --> 00:05:01.750
So right inside there, the first option says Select a professor.

67
00:05:02.080 --> 00:05:07.930
So we could just hollow out that value, instead have curly brackets inside there, we would just use

68
00:05:07.930 --> 00:05:09.580
our underscore, underscore tool.

69
00:05:09.970 --> 00:05:13.600
It's a function, so call it and then we give it to arguments.

70
00:05:13.930 --> 00:05:19.540
The first argument is the original text, which is select a professor.

71
00:05:20.110 --> 00:05:23.560
The second argument is the text domain of your plugin.

72
00:05:23.560 --> 00:05:30.310
So we chose a value of featured Dasch professor as our text domain.

73
00:05:30.760 --> 00:05:31.320
Really quick.

74
00:05:31.330 --> 00:05:37.660
I do want to point out that it's not as if you can only use this underscore underscore tool within curly

75
00:05:37.660 --> 00:05:38.310
brackets here.

76
00:05:38.710 --> 00:05:40.510
That's just what we're doing in this example.

77
00:05:40.510 --> 00:05:45.430
But you're free to use the underscore underscore basically anywhere in your JavaScript.

78
00:05:46.030 --> 00:05:48.610
OK, but we can go ahead and save this.

79
00:05:48.970 --> 00:05:53.560
And now let's go use logo translate to create a template for this plug in.

80
00:05:54.160 --> 00:06:00.310
So back in the WordPress admin dashboard towards the bottom of the left hand side bar, we're looking

81
00:06:00.310 --> 00:06:04.240
for logo translate in before we actually create a template.

82
00:06:04.240 --> 00:06:10.180
We do want to go into the settings of logo translate so you should see it in the hover menu here.

83
00:06:10.180 --> 00:06:16.400
Or if you click on the logo, translate first, then in this menu just click on settings.

84
00:06:17.260 --> 00:06:19.830
OK, now this is the option we're interested in.

85
00:06:19.840 --> 00:06:25.690
So it says scan javascript files with extensions and by default it's blank.

86
00:06:26.710 --> 00:06:28.570
So we just want to type into this field.

87
00:06:28.930 --> 00:06:34.910
J.S. This way it will actually look at and work with our JavaScript files.

88
00:06:35.290 --> 00:06:38.980
So with that in place, let's go down to the bottom and click save settings.

89
00:06:40.420 --> 00:06:46.660
OK, now we're ready to actually create the language template for this plug in so we can click on the

90
00:06:46.660 --> 00:06:48.790
main logo, translate menu option.

91
00:06:49.360 --> 00:06:51.630
We're looking for our featured professor plug in.

92
00:06:51.640 --> 00:06:56.200
So if you scroll down under running plug ins here, I can see it featured.

93
00:06:56.200 --> 00:06:58.060
Professor Blacktip, let's click that.

94
00:06:58.460 --> 00:07:02.650
OK, before we create the translation, we first need to click create template.

95
00:07:03.970 --> 00:07:06.550
It's letting me know it found six files to scan.

96
00:07:06.550 --> 00:07:08.890
You can see the largest one is nine kilobytes.

97
00:07:09.130 --> 00:07:11.530
That's most definitely my JavaScript file.

98
00:07:11.530 --> 00:07:12.580
So that's great.

99
00:07:12.970 --> 00:07:15.330
Local translate is aware of our JavaScript.

100
00:07:15.340 --> 00:07:17.380
Lets go ahead and click create template.

101
00:07:18.330 --> 00:07:22.870
OK, and now at this point I'm going to create an example, Spanish translation.

102
00:07:22.870 --> 00:07:26.230
So I'll click new language for the first option here.

103
00:07:26.230 --> 00:07:27.160
Select language.

104
00:07:27.160 --> 00:07:29.680
I'm going to select Spanish Mexico.

105
00:07:30.550 --> 00:07:32.920
I am happy with the default option for this.

106
00:07:32.920 --> 00:07:33.970
Choose a location.

107
00:07:33.970 --> 00:07:38.650
I do absolutely want the files to be stored in my plug in languages folder.

108
00:07:38.980 --> 00:07:39.490
Perfect.

109
00:07:39.490 --> 00:07:41.080
Let's click, start translating.

110
00:07:41.710 --> 00:07:47.200
OK, in this list, the only one I'm actually going to provide a translation for right now is Select

111
00:07:47.200 --> 00:07:49.150
a professor, so I'll click on that.

112
00:07:49.750 --> 00:07:55.720
And then if I scroll down the Spanish translation text box, I'll just click in there and I'll paste

113
00:07:55.720 --> 00:07:56.980
in my translation.

114
00:07:57.700 --> 00:07:59.800
OK, now let's save our progress.

115
00:08:00.130 --> 00:08:01.450
So back up towards the top.

116
00:08:01.450 --> 00:08:06.490
I'll just click this save button and I'm ready to test this out now.

117
00:08:06.730 --> 00:08:09.250
So I'm going to go into my WordPress settings.

118
00:08:09.430 --> 00:08:12.940
So not logo translate, but just WordPress as a whole.

119
00:08:12.940 --> 00:08:20.380
So settings and go into general and I'm just going to set my entire WordPress site to use Spanish so

120
00:08:20.380 --> 00:08:21.670
I can really test that out.

121
00:08:22.390 --> 00:08:27.700
About halfway down the page I see site language, so I'll just change that to Spanish of Mexico.

122
00:08:28.570 --> 00:08:36.820
OK, let me click save changes and now let's go test out our block type so I'll go into and Trada for

123
00:08:36.820 --> 00:08:44.020
posts and if I go into my yet another post and try to insert a new instance of the featured Professor

124
00:08:44.020 --> 00:08:44.620
Blacktip.

125
00:08:44.620 --> 00:08:48.990
So maybe right after this one if I just click Professor Call-out.

126
00:08:49.210 --> 00:08:51.460
Oops, we see it's not using our translation.

127
00:08:51.970 --> 00:08:56.770
So local translate was obviously aware of that piece of translated text.

128
00:08:57.280 --> 00:09:03.370
However, the final step is for you and I to connect the dots between our JavaScript and sort of the

129
00:09:03.370 --> 00:09:05.920
WordPress translation system as a whole.

130
00:09:06.340 --> 00:09:11.350
So let me show you how we do this within our plugins main file.

131
00:09:11.590 --> 00:09:18.030
Remember our on init function where we're loading the text domain and registering our meta in our script

132
00:09:18.040 --> 00:09:19.600
and our style in our blacktip.

133
00:09:20.110 --> 00:09:24.670
We'll do this with me right after these lines where we're registering our script in style.

134
00:09:24.670 --> 00:09:34.810
Let's add a new line and we're going to use a WordPress function called WP Set Script translations semicolon

135
00:09:35.170 --> 00:09:36.160
in the parentheses.

136
00:09:36.160 --> 00:09:37.990
We give it three arguments.

137
00:09:38.710 --> 00:09:42.580
So the first is the handle name of your script.

138
00:09:42.790 --> 00:09:47.920
So our script has a short name or handle name of featured professor script.

139
00:09:48.340 --> 00:09:51.070
So that's what we would use for the first argument here.

140
00:09:51.460 --> 00:09:54.910
The second argument is the text domain you want to work with.

141
00:09:54.910 --> 00:09:57.640
So ours is feature dash professor.

142
00:09:58.180 --> 00:10:02.200
And then the third argument is just pointing towards the languages folder.

143
00:10:02.710 --> 00:10:10.360
So instead of C that would be plug in Der path, call that inside there, give it underscore, underscore,

144
00:10:10.360 --> 00:10:12.550
file, underscore, underscore.

145
00:10:12.910 --> 00:10:19.660
In between those two closing parentheses will concatenate on a string of text with just slash languages.

146
00:10:20.590 --> 00:10:26.860
OK, so altogether this new line of code is just saying, hey, WordPress, this JavaScript file, Evars.

147
00:10:27.400 --> 00:10:32.800
Well we want to tie it to the translation system and here's where our language files are located.

148
00:10:33.040 --> 00:10:40.720
So as soon as we save this and now back in the edit screen, if I reload and now if I go try to insert

149
00:10:40.720 --> 00:10:42.640
a new instance of that block type.

150
00:10:43.300 --> 00:10:47.080
So right here, if I click Professor Call-out perfect.

151
00:10:47.110 --> 00:10:50.320
There is our Spanish translation for Select a Professor.

152
00:10:51.100 --> 00:10:56.770
So you are free to use that underscore underscore tool anywhere in your JavaScript and it will work

153
00:10:57.100 --> 00:10:59.230
just like what we've set up in this lesson.

154
00:10:59.440 --> 00:11:05.170
And that is going to bring not only this lesson but this chapter on JavaScript to a close.

155
00:11:05.770 --> 00:11:10.840
In our next lesson, we're starting a brand new chapter when it comes to WordPress plugin development.

156
00:11:11.110 --> 00:11:17.080
And we're going to be talking about databases or in other words, when it makes sense to use our own

157
00:11:17.350 --> 00:11:19.210
custom database table.

158
00:11:19.660 --> 00:11:20.860
This should be a lot of fun.

159
00:11:20.980 --> 00:11:22.180
In many situations.

160
00:11:22.180 --> 00:11:25.930
You can really increase the speed and performance of your plugin.

161
00:11:26.320 --> 00:11:28.720
Let's keep things rolling and I'll see you then.
