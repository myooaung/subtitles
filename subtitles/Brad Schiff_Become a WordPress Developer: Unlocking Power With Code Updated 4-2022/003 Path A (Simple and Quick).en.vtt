WEBVTT
1
00:00:02.200 --> 00:00:03.280
Hello, everyone.

2
00:00:03.580 --> 00:00:10.300
In this lesson, we will learn the simplest way of going live with a WordPress website.

3
00:00:10.720 --> 00:00:13.030
Without further ado, let's get started.

4
00:00:13.420 --> 00:00:18.850
OK, so first I want you to visit our fictional university Web site, OK?

5
00:00:18.910 --> 00:00:24.790
And at the moment, this website lives within your local dev environment, which means you are the only

6
00:00:24.790 --> 00:00:27.230
person on the planet that can view it.

7
00:00:27.520 --> 00:00:34.630
So our goal in this video is to learn how to push this website up onto the Web, onto our Web hosting

8
00:00:34.630 --> 00:00:38.100
account so that it's public and the entire world can view it.

9
00:00:38.290 --> 00:00:43.720
And the first step towards making that happen is to jump in to the admin dashboard.

10
00:00:44.230 --> 00:00:49.570
And just to be clear, this is the admin dashboard that we've been working with throughout this entire

11
00:00:49.570 --> 00:00:50.170
course.

12
00:00:50.470 --> 00:00:50.790
Right.

13
00:00:50.800 --> 00:00:55.330
This is our fictional university, local dev environment, admin dashboard.

14
00:00:55.630 --> 00:01:01.540
And throughout this course, we've spent a lot of time creating all sorts of different posts spread

15
00:01:01.540 --> 00:01:07.780
out across the different posts types, as well as customizing different settings and user roles and

16
00:01:07.780 --> 00:01:08.790
user accounts.

17
00:01:09.250 --> 00:01:16.090
So the idea is that we don't want to have to manually recreate each one of those posts and settings

18
00:01:16.090 --> 00:01:18.960
on our Web hosting WordPress installation.

19
00:01:19.300 --> 00:01:19.570
Right.

20
00:01:19.570 --> 00:01:20.740
That would take forever.

21
00:01:21.010 --> 00:01:29.200
So instead, we want to bundle up and export all of our data and all of our files so that we can import

22
00:01:29.200 --> 00:01:32.680
all of that within our Web hosting copy of WordPress.

23
00:01:32.980 --> 00:01:39.730
Now, you might have noticed that if you hover over tools in the sidebar, WordPress does have a native

24
00:01:39.730 --> 00:01:41.620
import and export feature.

25
00:01:41.890 --> 00:01:48.910
However, it's fairly basic and it will not include all of your data, nor will it include all of your

26
00:01:48.910 --> 00:01:49.670
files.

27
00:01:49.840 --> 00:01:56.140
So instead of the native import and export feature, we need something that's more exhaustive, something

28
00:01:56.140 --> 00:01:57.350
that's more holistic.

29
00:01:57.580 --> 00:02:03.060
So right now, I want to show you one of my all time favorite plug ins.

30
00:02:03.400 --> 00:02:07.000
So in the sidebar, hover over plug ins and click add new.

31
00:02:08.490 --> 00:02:19.230
Let's use the top right search field and search for all dash in one WP migration.

32
00:02:22.090 --> 00:02:30.730
And here it is, all in one migration as of this moment, it has 700000 active installs and it's created

33
00:02:30.730 --> 00:02:32.500
by Serv Mask.

34
00:02:32.870 --> 00:02:36.070
I'm sure a lot of these other similar plug ins are great as well.

35
00:02:36.070 --> 00:02:41.170
But from my own personal experience, I've had excellent luck with this plugin.

36
00:02:41.320 --> 00:02:43.420
So it's the one that I'm going to recommend.

37
00:02:43.660 --> 00:02:46.240
OK, so let's go ahead and install now.

38
00:02:48.060 --> 00:02:49.290
And then activate.

39
00:02:51.900 --> 00:02:58.560
And with the new plug in activated, we now see this new option in the sidebar, all in one WP migration,

40
00:02:58.740 --> 00:03:03.020
and you see it gives us options of export, import and backups.

41
00:03:03.420 --> 00:03:05.610
For now, we are interested in export.

42
00:03:05.610 --> 00:03:09.180
So you can either click that or just click on the main sidebar item.

43
00:03:11.520 --> 00:03:17.040
And from this screen, it's very easy to bundle up or export our site so that we can move it to our

44
00:03:17.040 --> 00:03:17.900
hosting account.

45
00:03:18.120 --> 00:03:20.610
However, before we do bundle it up.

46
00:03:20.820 --> 00:03:24.950
I do want to show you how to ignore certain unnecessary files.

47
00:03:25.380 --> 00:03:31.830
For example, if you jump to our text editor of our theme folder, in particular, we have this folder

48
00:03:31.980 --> 00:03:40.690
named Noad Underscore Module's, and this is a very large folder with many, many megabytes of files.

49
00:03:40.980 --> 00:03:47.160
Now, while these files are necessary on our local computer because we are the developer, these files

50
00:03:47.160 --> 00:03:51.890
are absolutely not necessary for the public version of our website.

51
00:03:52.200 --> 00:03:57.900
So there's no sense in bloating the bundled file that this plugin will create for us with all of these

52
00:03:58.050 --> 00:04:00.120
unnecessary node modules.

53
00:04:00.540 --> 00:04:06.780
So right now, I want to show you how we can tell this plugin to ignore a certain folder within our

54
00:04:06.780 --> 00:04:07.560
theme folder.

55
00:04:07.770 --> 00:04:12.720
We just jump in to our theme's functions file.

56
00:04:13.860 --> 00:04:21.000
You can do this anywhere, but maybe down at the very bottom of the file, let's say ad underscore filter.

57
00:04:22.220 --> 00:04:33.020
For the first argument, let's say quotes, and this needs to be a I one, W.M., underscore, exclude,

58
00:04:33.020 --> 00:04:39.020
underscore, content, underscore from underscore export.

59
00:04:39.530 --> 00:04:40.910
So I didn't make up this name.

60
00:04:40.910 --> 00:04:45.260
The creators of that all in one migration plug in created this filter name.

61
00:04:45.710 --> 00:04:50.450
And now for the second argument, we just give it a function, let's make up a name and then we can

62
00:04:50.450 --> 00:04:53.420
create this function in just about 10 seconds from now.

63
00:04:53.840 --> 00:04:57.320
Let's call it ignore certain files.

64
00:04:57.650 --> 00:04:59.890
Be sure to end this line with a semicolon.

65
00:05:00.290 --> 00:05:04.690
OK, and now on a new line, let's just create a function with that matching name.

66
00:05:04.700 --> 00:05:13.400
So function ignore certain files, parentheses, curly brackets in the parentheses for our function,

67
00:05:13.400 --> 00:05:20.530
let's say dollar sign, exclude underscore filters and then in the body of our function, let's say

68
00:05:20.780 --> 00:05:30.290
dollar sign, exclude underscore filters, square brackets right after that equals and then a pair of

69
00:05:30.290 --> 00:05:33.990
quotes and now we just point towards the node modules folder.

70
00:05:34.340 --> 00:05:38.270
Now this path is relative from our WPE content directory.

71
00:05:38.630 --> 00:05:42.920
So we're actually going to begin with looking inside the themes folder.

72
00:05:44.000 --> 00:05:51.080
And then the name of our theme is fictional Dasch University Dash Theme Slash.

73
00:05:51.080 --> 00:05:59.390
And then we say Noad Underscore Module's OK, be sure to end this line with a semicolon on a new line

74
00:05:59.390 --> 00:06:04.850
still within the body of the function here, let's say return and then we're just going to return.

75
00:06:04.850 --> 00:06:11.450
Exclude filters of dollar sign, exclude underscore filters, semicolon.

76
00:06:11.600 --> 00:06:13.280
Let's save this file.

77
00:06:13.850 --> 00:06:21.080
And now back in the admin, when we're viewing the plugin export screen, we're absolutely ready to

78
00:06:21.080 --> 00:06:26.720
export to a file and all we need to do is click on this export to menu.

79
00:06:27.650 --> 00:06:35.320
And let's choose file, so export to the first option file, and now the plugin is working its magic,

80
00:06:35.330 --> 00:06:37.790
so it's bundling together everything.

81
00:06:37.790 --> 00:06:46.280
We need a copy of our WordPress database, all WordPress system files, all of our theme files, any

82
00:06:46.280 --> 00:06:53.560
and all plug ins we've installed and any photographs we've uploaded through the WordPress media system.

83
00:06:53.900 --> 00:06:57.880
And once it completes, then we want to download that bundled file.

84
00:06:58.250 --> 00:07:01.580
So just click this animated button to download it, OK?

85
00:07:01.700 --> 00:07:08.390
And now if I check my computer's downloads folder, here is that brand new file that the plug in just

86
00:07:08.390 --> 00:07:09.030
created.

87
00:07:09.320 --> 00:07:14.950
So this one convenient file contains my entire WordPress website.

88
00:07:15.110 --> 00:07:21.020
It contains the hundreds or probably thousands of individual files that make up WordPress, as well

89
00:07:21.020 --> 00:07:24.540
as any of our assets and our entire database.

90
00:07:24.890 --> 00:07:31.980
So now all we need to do is import this one file within our Web hosting copy of WordPress.

91
00:07:32.540 --> 00:07:37.880
So back in the Web browser, open up a new tab and jump to your Web hosting site.

92
00:07:38.390 --> 00:07:41.570
Let me explain what I mean by this or what I'm referring to here.

93
00:07:41.600 --> 00:07:48.310
So every Web hosting company is different, but they all make it easy to create a new WordPress project.

94
00:07:48.680 --> 00:07:52.090
They usually have some sort of one click WordPress installer.

95
00:07:52.100 --> 00:07:57.590
So if you want to follow along with this lesson, you can pause the video right now and go into your

96
00:07:57.590 --> 00:08:06.020
Web host and just set up a new default, fresh copy of WordPress, perhaps on a subdomain like practice

97
00:08:06.290 --> 00:08:10.300
your domain dotcom or testing your domain dotcom.

98
00:08:11.000 --> 00:08:18.110
Essentially, we just want a WordPress site, even if it's empty up on the Web that we want to overwrite

99
00:08:18.110 --> 00:08:22.970
and transform into our fictional university site that we just exported.

100
00:08:23.510 --> 00:08:28.720
And let's go ahead and jump into the admin dashboard of this copy of WordPress.

101
00:08:29.060 --> 00:08:33.350
So all we need to do now is install that same migration plug in.

102
00:08:33.650 --> 00:08:37.340
Except now, instead of exporting, we want to import.

103
00:08:37.640 --> 00:08:40.730
So in the sidebar, plug ins, add new.

104
00:08:42.720 --> 00:08:51.150
In the top right search bar, I will search for all in one WP migration.

105
00:08:53.800 --> 00:08:55.870
Here it is, go ahead and install.

106
00:08:57.610 --> 00:08:58.900
And then activate.

107
00:09:00.380 --> 00:09:06.320
OK, in the sidebar, we now have this new option, all in one migration, this time I'm going to click

108
00:09:06.320 --> 00:09:08.320
import, right?

109
00:09:08.330 --> 00:09:13.580
We just want to import that convenient bundle file from our local dev environment.

110
00:09:14.300 --> 00:09:19.190
So I believe you can literally just drag this file onto this open area.

111
00:09:19.820 --> 00:09:24.710
Or if you're not a drag and drop kind of person, just click this import from menu.

112
00:09:25.670 --> 00:09:26.630
Choose File.

113
00:09:27.870 --> 00:09:32.430
Navigate to your computers downloads folder and choose our bundle file.

114
00:09:34.240 --> 00:09:36.170
That could take a few minutes to upload.

115
00:09:36.190 --> 00:09:43.060
So while we have some downtime, I will point out that this plug in is completely free as long as your

116
00:09:43.060 --> 00:09:51.070
bundle file is under 512 megabytes or in other words, as long as you didn't upload tons and tons of

117
00:09:51.070 --> 00:09:55.960
high resolution photographs within your local dev copy, you should be all right.

118
00:09:56.110 --> 00:10:01.420
If you are over this file size limit, do not feel like you need to purchase this plug in.

119
00:10:01.660 --> 00:10:07.510
Instead, you might just want to challenge yourself and try out the more advanced path B that we will

120
00:10:07.510 --> 00:10:09.040
cover in the next lesson.

121
00:10:09.490 --> 00:10:16.000
This message is just letting us know that this is going to completely overwrite and erase any and all

122
00:10:16.000 --> 00:10:19.490
data and files that currently live on this website.

123
00:10:19.750 --> 00:10:26.830
So long story short, we only want to use this import feature on a relatively new and empty WordPress

124
00:10:26.830 --> 00:10:30.370
installation that doesn't contain any content that we care about.

125
00:10:30.730 --> 00:10:36.190
OK, so just to be clear, before you click proceed, make sure that there's not anything on this website

126
00:10:36.190 --> 00:10:39.020
that you care about that you haven't already backed up.

127
00:10:39.460 --> 00:10:45.040
So in my case, since I'm working with a brand new, clean, fresh installation of WordPress on my Web

128
00:10:45.040 --> 00:10:48.130
host, I know that I'm safe to click proceed.

129
00:10:53.620 --> 00:10:59.170
Cool, we see a success message, and it's letting us know that in order to guarantee that all of our

130
00:10:59.170 --> 00:11:05.290
permalink work properly, we should jump into the permalink settings screen and click save twice.

131
00:11:05.560 --> 00:11:08.950
And that will be sure to clear out any of the old permalink cash.

132
00:11:09.310 --> 00:11:15.130
So I click close and now you'll notice that if I hover over settings in the sidebar and try to click

133
00:11:15.130 --> 00:11:15.960
on Permalink.

134
00:11:17.820 --> 00:11:23.460
Even though I was logged in five seconds ago, now it's asking me to log in again, this is because

135
00:11:23.460 --> 00:11:30.000
that import process just deleted the existing database and imported a copy of the database from our

136
00:11:30.000 --> 00:11:31.530
local dev environment.

137
00:11:31.830 --> 00:11:37.140
Obviously uploaded all of our files, too, because you can see that this is using our custom colors

138
00:11:37.380 --> 00:11:38.730
and in branding.

139
00:11:39.150 --> 00:11:39.640
Cool.

140
00:11:39.660 --> 00:11:44.940
Now, I do want to point out that you need to use your username and password that you set up at the

141
00:11:44.940 --> 00:11:49.000
very beginning of this course within your local dev environment.

142
00:11:49.140 --> 00:11:56.520
So in other words, now our Web host copy of WordPress is an identical copy from our local dev environment.

143
00:11:56.830 --> 00:12:01.830
OK, so whatever username password combo you've been logging into WordPress with throughout this entire

144
00:12:01.830 --> 00:12:04.610
course, be sure to use that here, OK?

145
00:12:04.620 --> 00:12:10.380
And once you log in, let's be sure to navigate to the settings permalink screen.

146
00:12:11.550 --> 00:12:17.490
We don't need to make any changes, we just want to click the blue save changes button and I'm pretty

147
00:12:17.490 --> 00:12:19.440
sure just clicking at once will do the trick.

148
00:12:19.440 --> 00:12:23.460
But the plug in did ask us to do it twice, so I will click it again.

149
00:12:23.940 --> 00:12:28.540
And that should guarantee that any of the old permalink cash is fully cleared.

150
00:12:28.740 --> 00:12:29.080
Cool.

151
00:12:29.100 --> 00:12:34.470
Now, if I use this link up in the top left to visit the front end of our website.

152
00:12:37.470 --> 00:12:45.210
Awesome, so this is now live up for the entire world to view now before we bring this lesson to a close,

153
00:12:45.420 --> 00:12:51.090
you might be wondering how can you make edits or changes to our theme files?

154
00:12:51.390 --> 00:12:58.890
So, for example, on our homepage, this large welcome headline, this text does not live in our database.

155
00:12:59.190 --> 00:13:02.340
Instead, it lives in one of our files.

156
00:13:02.700 --> 00:13:09.270
Now, if we were trying to edit our local dev copy of WordPress instead of our live Web hosting copy,

157
00:13:09.570 --> 00:13:15.960
we could just jump into our text editor and within our theme folder, jump into front dash page.

158
00:13:17.940 --> 00:13:19.230
And here's the heading level.

159
00:13:19.230 --> 00:13:20.670
One says welcome.

160
00:13:21.120 --> 00:13:26.790
But if we edit and save this file, that's only going to update our local dev website.

161
00:13:27.000 --> 00:13:34.560
So the question becomes, how can we access and edit the copy of this file that is powering our live

162
00:13:34.560 --> 00:13:35.300
Web site?

163
00:13:35.610 --> 00:13:40.500
Well, the answer to that question is going to be a little bit different, depending on which Web host

164
00:13:40.500 --> 00:13:41.150
you're using.

165
00:13:41.460 --> 00:13:44.370
But let me show you how we could do that within site ground.

166
00:13:44.610 --> 00:13:48.880
And it will probably be fairly similar no matter which hosting company you use.

167
00:13:49.260 --> 00:13:55.770
So in a separate tab, visit site, ground dotcom or whatever hosting company you're using and go ahead

168
00:13:55.770 --> 00:13:57.900
and log in with your user account.

169
00:14:01.560 --> 00:14:06.870
From the welcome screen, let's click on websites towards the top here, you should see your domain

170
00:14:06.870 --> 00:14:07.530
listed here.

171
00:14:07.530 --> 00:14:15.300
Let's click on site tools, OK, from these options, let's click on file manager from the file manager.

172
00:14:15.310 --> 00:14:18.350
Let's just drill down and find our theme folder.

173
00:14:18.390 --> 00:14:20.100
So go into your domain.

174
00:14:21.800 --> 00:14:29.680
Then click on public HTML and then WP content, and at this point you're familiar with this folder structure,

175
00:14:29.870 --> 00:14:31.910
so then we would go into theme's.

176
00:14:33.510 --> 00:14:39.630
Then go and do our fictional university theme, and these are the theme files that we've been working

177
00:14:39.630 --> 00:14:41.460
on throughout the course together.

178
00:14:41.910 --> 00:14:44.240
Now let's get back to the actual task at hand.

179
00:14:44.250 --> 00:14:51.670
So imagine we wanted to update this welcome text on the homepage to instead read hello.

180
00:14:52.260 --> 00:14:58.800
So first, let's make that change locally on our computer and then I'll show you how to upload it from

181
00:14:58.800 --> 00:14:59.850
within the site.

182
00:14:59.850 --> 00:15:01.070
Ground file manager.

183
00:15:01.470 --> 00:15:08.400
So in my text editor, if I change, welcome to Hello and Save that.

184
00:15:08.790 --> 00:15:15.040
That by itself does not update our live Web site that would only update our local dev Web site.

185
00:15:15.360 --> 00:15:21.780
However, back in the browser within our site ground file manager screen, we can just drag and drop

186
00:15:21.780 --> 00:15:24.630
a file from our computer into this area.

187
00:15:25.200 --> 00:15:29.880
So to actually find the files on our computer, you can use the local app, right?

188
00:15:29.880 --> 00:15:35.910
Click on your project and Choose Revealed and Finder or show an explorer and then just dig into your

189
00:15:35.910 --> 00:15:37.940
files like we've been doing throughout the course.

190
00:15:38.400 --> 00:15:45.120
So that's app public web content themes, fictional university theme.

191
00:15:45.420 --> 00:15:47.190
We're looking for front page.

192
00:15:48.510 --> 00:15:53.970
And then I'm just going to drag and drop that file onto the site.

193
00:15:53.970 --> 00:15:56.100
Ground File Manager website right here.

194
00:15:57.180 --> 00:16:02.070
So as soon as I released the drag and drop we see file already exists, what do you want to do?

195
00:16:02.070 --> 00:16:04.710
And I'm just going to click the overwrite button.

196
00:16:06.490 --> 00:16:09.310
So we see one file was uploaded successfully.

197
00:16:09.340 --> 00:16:15.910
And if I jump back to my site, Ground Domain or WordPress website and refresh perfect, we see.

198
00:16:16.090 --> 00:16:16.670
Hello.

199
00:16:17.320 --> 00:16:19.270
So that's one way to update a file.

200
00:16:19.270 --> 00:16:22.900
Just drag and drop or within the file manager.

201
00:16:23.380 --> 00:16:26.770
I can click on front page dot here.

202
00:16:28.890 --> 00:16:33.630
And that opens up a minimalist editor right here in the Web browser, so I could instead change this

203
00:16:33.630 --> 00:16:38.550
hello value to say hi there and then click this save icon.

204
00:16:39.740 --> 00:16:43.620
And then back on my live website refresh, and there we see the change.

205
00:16:43.940 --> 00:16:45.540
So that's super convenient.

206
00:16:45.560 --> 00:16:51.710
However, now you have this mismatch between the local copy of the file on your computer and the copy

207
00:16:51.710 --> 00:16:53.350
that lives on your public server.

208
00:16:53.660 --> 00:16:56.010
But as long as you're aware of that, it's OK.

209
00:16:56.540 --> 00:17:01.790
Now, I must say that neither of the two ways that we just updated that file are ideal.

210
00:17:02.090 --> 00:17:08.300
Manually uploading an individual file through our Web browser is not ideal and editing the text and

211
00:17:08.300 --> 00:17:11.030
code right in our Web browser is also not ideal.

212
00:17:11.240 --> 00:17:16.640
Now, if you have experience with websites, you might be yelling at the screen right now saying, Brad,

213
00:17:16.640 --> 00:17:18.620
why don't we just use FTP?

214
00:17:19.070 --> 00:17:23.630
Well, I'm here to tell you that using FTP is also not ideal.

215
00:17:23.900 --> 00:17:31.570
In fact, avoiding having to manually upload your files with FTP is the entire point of path B, right.

216
00:17:31.580 --> 00:17:35.510
The more advanced path of getting your website up onto the web.

217
00:17:35.720 --> 00:17:41.420
Now we have reached the end of this lesson and therefore the end of path a the simple way of pushing

218
00:17:41.420 --> 00:17:42.350
your website up.

219
00:17:42.590 --> 00:17:45.620
And I think the pros and cons of Pathé are clear now.

220
00:17:45.740 --> 00:17:52.550
It was relatively simple and fast to move the website, but then making any sort of future updates to

221
00:17:52.550 --> 00:17:56.380
the code files is not the most elegant thing in the world.

222
00:17:56.630 --> 00:18:03.590
So if you have any experience with the git version control system, in our very next lesson, we are

223
00:18:03.590 --> 00:18:08.080
going to review Path B for uploading and deploying a website.

224
00:18:08.300 --> 00:18:10.970
Path B is a bit more advanced and complicated.

225
00:18:11.370 --> 00:18:17.950
However, making future updates to code files and Path B is super easy and luxurious.

226
00:18:18.140 --> 00:18:20.230
Maybe that sounds like something you're interested in.

227
00:18:20.480 --> 00:18:21.450
Maybe it doesn't.

228
00:18:21.800 --> 00:18:26.450
Either way, let's keep things rolling and I will see you in the next lesson.
