1
00:00:02,020 --> 00:00:07,480
Hello, everyone, in this video, we're starting a new three chapter section of the course that is

2
00:00:07,480 --> 00:00:09,880
all about plug in development.

3
00:00:10,300 --> 00:00:14,960
Without further ado, let's review what these three new chapters are going to be about.

4
00:00:15,670 --> 00:00:17,590
So the first chapter will be about.

5
00:00:19,060 --> 00:00:24,400
This will cover sort of the traditional skeleton or building blocks of creating a new plug in.

6
00:00:24,970 --> 00:00:27,630
The next chapter will be about JavaScript.

7
00:00:28,060 --> 00:00:32,020
So it will create a new block type for the WordPress or Gutenberg block.

8
00:00:32,020 --> 00:00:35,530
Ed along the way will learn a little bit about react.

9
00:00:35,530 --> 00:00:42,400
But we need to remember that this is a course about WordPress not react, meaning we won't cover react

10
00:00:42,400 --> 00:00:46,810
as in-depth and as slow the pace as we would in my course.

11
00:00:46,810 --> 00:00:49,120
That's entirely dedicated to react.

12
00:00:49,400 --> 00:00:55,690
OK, and then in the final of these three plugin chapters, we'll talk about databases specifically

13
00:00:55,690 --> 00:00:57,870
when you're plugging needs to store data.

14
00:00:58,150 --> 00:01:04,690
We'll talk about when it makes sense to use the WordPress built in custom post type versus when it makes

15
00:01:04,690 --> 00:01:09,040
more sense to use or create your own custom database table.

16
00:01:09,610 --> 00:01:11,980
So that's an overview of the three chapters.

17
00:01:11,980 --> 00:01:17,260
But if you're anything like me, topics or keywords like this aren't that useful.

18
00:01:17,620 --> 00:01:22,510
And instead I prefer to see the real world result of what we're going to create.

19
00:01:22,930 --> 00:01:29,770
So right now, let's look at a quick preview, take a quick look at the finished product of what we're

20
00:01:29,770 --> 00:01:31,020
going to build together.

21
00:01:31,510 --> 00:01:37,750
So if I visit the blog section of my Web site and then view the permalink or single view for a post,

22
00:01:39,010 --> 00:01:45,580
you can see there's this area called Post Statistics and it says how many words the Post has, how many

23
00:01:45,580 --> 00:01:49,030
characters and about how long it would take to read the post.

24
00:01:49,550 --> 00:01:55,780
So this area of content is dynamically being added to this blog post through a plug in.

25
00:01:56,200 --> 00:02:02,380
Now let's go into the admin dashboard and look at the settings screen that will build for this particular

26
00:02:02,380 --> 00:02:02,890
plug in.

27
00:02:04,660 --> 00:02:11,320
So under the settings menu in the sidebar, we see this brand new area called Word Count.

28
00:02:11,710 --> 00:02:14,160
If we click on that, we have different options.

29
00:02:14,170 --> 00:02:19,660
So you can say if you want the post statistics to be at the beginning or the end of the post, you can

30
00:02:19,660 --> 00:02:23,050
change the statistics headline text to be whatever you want.

31
00:02:23,350 --> 00:02:28,330
And then you can also check or uncheck which one of these pieces of content you want to include.

32
00:02:28,840 --> 00:02:32,300
OK, so that's the first example plug in that we're going to create together.

33
00:02:32,770 --> 00:02:35,560
Let's change gears and look at the second example.

34
00:02:35,560 --> 00:02:37,080
Plug in that will create together.

35
00:02:37,600 --> 00:02:43,030
So in the admin side bar, you'll see an entirely new section called Word Filter.

36
00:02:43,480 --> 00:02:47,610
It has its own custom icon and it actually has its own submenu.

37
00:02:47,620 --> 00:02:48,560
Two different pages.

38
00:02:48,910 --> 00:02:51,460
Let's look at the first page or just the words list.

39
00:02:52,880 --> 00:02:58,490
So here you can include a comma separated list of words that you don't want to show up on your website

40
00:02:58,490 --> 00:03:00,380
or in your blog post content.

41
00:03:00,390 --> 00:03:06,020
So, for example, if I want to filter out Ipsum right the second word and lorem ipsum and then comma,

42
00:03:06,020 --> 00:03:07,870
maybe the word tempore.

43
00:03:08,370 --> 00:03:10,370
OK, and then I'll click save changes.

44
00:03:10,760 --> 00:03:14,480
And then if I go back to the front end of my website, here's a blog post.

45
00:03:14,480 --> 00:03:15,800
And if I refresh.

46
00:03:16,810 --> 00:03:21,730
Notice it filtered out the word ipsum that would have been here and the word tempore that would have

47
00:03:21,730 --> 00:03:25,880
been here now in terms of what we want this replaced bit of content to be.

48
00:03:25,930 --> 00:03:30,940
Well, in the sidebar, the submenu for this new plugin, you can click on options.

49
00:03:31,750 --> 00:03:34,090
You could have included this on the previous page.

50
00:03:34,090 --> 00:03:37,780
But this is just going to be an example of how to have sub pages or submenu.

51
00:03:38,200 --> 00:03:44,410
So this can be anything you want as the replacement text, or you can just leave it blank and that will

52
00:03:44,410 --> 00:03:48,670
entirely remove those filtered words from your content.

53
00:03:49,250 --> 00:03:54,310
OK, so those two example plug ins that we just looked at, those will be in the first chapter about

54
00:03:54,650 --> 00:03:57,620
HP and just sort of traditional plug in development.

55
00:03:58,090 --> 00:04:03,910
Now, let's change gears, though, and talk about the second chapter, which is going to be about JavaScript

56
00:04:04,480 --> 00:04:05,350
in particular.

57
00:04:05,350 --> 00:04:07,410
We're going to create a new block type.

58
00:04:07,720 --> 00:04:09,550
So let me go edit this post.

59
00:04:09,550 --> 00:04:11,320
It's called a new sample post.

60
00:04:11,810 --> 00:04:18,370
If I go into posts, a new sample post, OK, and let's imagine that maybe after this first paragraph,

61
00:04:18,370 --> 00:04:19,960
I want to add a new block.

62
00:04:22,020 --> 00:04:27,180
I can use this button and here we see two new block types that you're not used to seeing.

63
00:04:27,540 --> 00:04:32,800
Quick question and Professor Call-out, so we're going to build both of these together.

64
00:04:33,030 --> 00:04:34,990
Let's start with a quick question.

65
00:04:35,020 --> 00:04:40,110
So if I click on that, you can ask the viewers of your website a question to make sure that they're

66
00:04:40,110 --> 00:04:47,240
paying attention so we could say what color is the sky on a clear and sunny day?

67
00:04:47,670 --> 00:04:52,550
And then you give it multiple options or answers so we could say orange.

68
00:04:52,950 --> 00:04:58,140
Add another answer green and another answer blue.

69
00:04:58,590 --> 00:05:02,970
And then I'm not sure if you can see it, but there are yellow star outlines and that's how you can

70
00:05:02,970 --> 00:05:05,340
mark which answer is the correct answer.

71
00:05:05,360 --> 00:05:07,770
So I'll start the blue answer.

72
00:05:08,700 --> 00:05:13,600
OK, let me go ahead and save or update this post and then let's view this on the front end of our website.

73
00:05:14,220 --> 00:05:18,960
So if I refresh the front end after the first paragraph, cool.

74
00:05:19,470 --> 00:05:24,930
And now if I get this question wrong on purpose, as a viewer of the article, you can see sorry, try

75
00:05:24,930 --> 00:05:25,380
again.

76
00:05:25,650 --> 00:05:27,090
But if I get it correct.

77
00:05:27,930 --> 00:05:28,840
That's correct.

78
00:05:29,370 --> 00:05:29,610
Cool.

79
00:05:29,610 --> 00:05:34,170
And then when it fades back, you can see it sort of lets you know which answers are wrong and marks

80
00:05:34,170 --> 00:05:36,300
the correct answer with a green checkmark.

81
00:05:36,630 --> 00:05:40,350
Also by default, notice this block has a gray background color.

82
00:05:40,680 --> 00:05:46,470
But if we go back into the admin or the edit screen, if I open up the right hand sidebar with this

83
00:05:46,470 --> 00:05:49,850
block selected, you can choose any color you want.

84
00:05:50,010 --> 00:05:53,430
So maybe I'll give it a really sort of like green color.

85
00:05:54,680 --> 00:05:59,930
Click, update, refresh on the front end, you can see that's reflected cool, so that's the first

86
00:05:59,930 --> 00:06:06,350
block type that will create together using JavaScript and react and working with the Gutenberg system

87
00:06:06,350 --> 00:06:07,370
in WordPress.

88
00:06:07,850 --> 00:06:11,690
Let's change gears and look at the second block type that will create together.

89
00:06:12,080 --> 00:06:13,160
Let me scroll down a bit here.

90
00:06:13,160 --> 00:06:16,910
Maybe after this paragraph, I want to show you the next block type.

91
00:06:16,940 --> 00:06:24,080
So at this and it's called Professor Call-out, let's click that and then you can select a professor

92
00:06:24,080 --> 00:06:27,170
that you want to highlight or feature in this blog post.

93
00:06:27,470 --> 00:06:29,300
So I'll say Dr. Bachs a lot.

94
00:06:30,050 --> 00:06:31,250
And now here's the cool part.

95
00:06:31,580 --> 00:06:36,640
This is pulling in the real data for Dr. Bachs a lot on the fly.

96
00:06:37,070 --> 00:06:43,910
So if I save this, this is not hard coded content that's getting injected into this blog post.

97
00:06:43,910 --> 00:06:50,240
Instead, if we ever update the doctor barks a lot post in the future, this content within the blog

98
00:06:50,240 --> 00:06:52,510
post will automatically get updated.

99
00:06:52,970 --> 00:06:57,890
This is made possible by learning how to leverage metadata or post meta.

100
00:06:58,310 --> 00:07:03,980
So instead of using something like advanced custom fields, we can roll up our sleeves and create our

101
00:07:03,980 --> 00:07:09,620
own custom solution where you can store a relationship between different pieces of content.

102
00:07:10,020 --> 00:07:13,010
Anyways, we'll talk more about this when we actually build this feature.

103
00:07:13,010 --> 00:07:18,500
But back on the front end, if I refresh now, you can see below that paragraph there's a callout to

104
00:07:18,500 --> 00:07:25,730
Dr. A and then if you visit Dr Bachs lots page, we can show the relationship coming from the other

105
00:07:25,730 --> 00:07:26,210
direction.

106
00:07:26,430 --> 00:07:33,770
So the plug in dynamically adds this little piece of content to the Professor Permalink, and it's going

107
00:07:33,770 --> 00:07:38,300
to find any blog posts that have a relationship with this professor.

108
00:07:38,530 --> 00:07:43,040
OK, once we finish that plug in together, that will wrap up the JavaScript chapter.

109
00:07:43,430 --> 00:07:47,660
Now let's change gears and talk about the plugin database chapter.

110
00:07:48,110 --> 00:07:53,120
So in this chapter, we're going to add a new section to our website called Pet Adoption.

111
00:07:53,240 --> 00:07:59,890
In the adoption section, you can see there's going to be 100000 randomly generated pets.

112
00:08:00,350 --> 00:08:05,090
So one hundred thousand items that need to be stored in the database somewhere.

113
00:08:05,570 --> 00:08:07,610
Let me zoom in a little bit so you can see what's going on.

114
00:08:07,620 --> 00:08:11,240
So each pet will have a randomly generated name.

115
00:08:11,240 --> 00:08:15,670
Species wait birth year Hobbie favorite color and favorite food.

116
00:08:16,070 --> 00:08:21,200
Now, right about here, you can see how long it took for WordPress to create this page.

117
00:08:21,210 --> 00:08:24,380
So if I refresh every time, it's going to be slightly different.

118
00:08:25,910 --> 00:08:31,910
But you can see that on average on my computer, it's taking about two tenths of a second to load the

119
00:08:31,910 --> 00:08:35,880
first one hundred pets out of the one hundred thousand items.

120
00:08:36,440 --> 00:08:38,240
Now, that's not too bad of a speed.

121
00:08:38,510 --> 00:08:40,150
However, it gets a lot worse.

122
00:08:40,430 --> 00:08:44,010
So this is just a generic query to show us any and all pets.

123
00:08:44,390 --> 00:08:51,230
What if instead I only want to see the pets that are of the species cat and only cats that have a favorite

124
00:08:51,230 --> 00:08:53,760
hobby of scratching furniture?

125
00:08:54,590 --> 00:09:04,640
So if I go up into the address bar and add on questionmark species equals cat and fav Hobbie equals

126
00:09:04,910 --> 00:09:07,310
scratching furniture.

127
00:09:10,130 --> 00:09:14,380
We scroll down a little bit so you can see out of the hundred thousand pets, there are eight hundred

128
00:09:14,380 --> 00:09:16,990
and five that match that specific search.

129
00:09:17,110 --> 00:09:20,920
However, that took almost a full second to complete.

130
00:09:20,920 --> 00:09:26,470
Let me refresh again so we can see sort of an average speed that took one point one seconds.

131
00:09:26,860 --> 00:09:30,020
Everything's subjective, but I feel like that's very slow.

132
00:09:30,400 --> 00:09:37,330
Now, this example that we're looking at right now, this is using custom post types to store the pet

133
00:09:37,330 --> 00:09:37,720
data.

134
00:09:37,900 --> 00:09:42,460
So each one of these hundred thousand pets is a post right.

135
00:09:42,460 --> 00:09:44,440
Of the custom post type called PET.

136
00:09:44,710 --> 00:09:49,900
And then each one of these custom pieces of data about the pet, that's a piece of Medda.

137
00:09:50,500 --> 00:09:54,070
Now, when we actually get to this chapter, we'll discuss this in greater detail.

138
00:09:54,070 --> 00:10:00,060
But essentially, there are many things that you get for free when you use WordPress custom post types.

139
00:10:00,340 --> 00:10:05,950
Every developer has a different opinion, but I believe custom post types are a great idea.

140
00:10:06,160 --> 00:10:11,680
Unless you need to be able to search or query by a piece of metadata.

141
00:10:11,980 --> 00:10:17,890
At that point, it gets very inefficient and very slow because, for example, in this tab we have the

142
00:10:17,890 --> 00:10:20,350
exact same hundred thousand pets.

143
00:10:20,680 --> 00:10:24,970
Only now we're no longer using custom post types in this tab.

144
00:10:24,970 --> 00:10:25,690
On this site.

145
00:10:25,690 --> 00:10:33,880
In this example, I've created my own separate custom database table and I'm writing my own SQL queries.

146
00:10:34,330 --> 00:10:41,530
So if I perform the same search right, if I say only show me where Species' equals cat and fav Hobbie

147
00:10:43,210 --> 00:10:46,030
equals scratching furniture.

148
00:10:47,570 --> 00:10:54,710
You can see if I refresh, that's only taking about a tenth of a second compared to over one point one

149
00:10:54,710 --> 00:10:58,070
seconds using the WordPress custom post type solution.

150
00:10:58,370 --> 00:11:01,940
So that's somewhere in the ballpark of ten times faster.

151
00:11:02,480 --> 00:11:08,780
Anyways, in this chapter will discuss in detail when it makes sense to use custom post types for your

152
00:11:08,780 --> 00:11:15,230
plug in data needs and when it makes sense to implement your own custom database table like this.

153
00:11:15,620 --> 00:11:22,400
We'll also learn how to have this red X to the side so you can delete any one of the pet items.

154
00:11:22,610 --> 00:11:28,430
Also down at the very bottom of this page, there's a form where you can add in a name and then it will

155
00:11:28,430 --> 00:11:33,620
randomly generate all of the other attributes about the pet and add it to the database so that we can

156
00:11:33,620 --> 00:11:39,950
practice sort of the basics of CRUD operations using your own custom database table.

157
00:11:40,710 --> 00:11:44,990
OK, so that wraps up the quick preview or the quick look at the finished product of what we're going

158
00:11:44,990 --> 00:11:46,010
to build together.

159
00:11:46,430 --> 00:11:52,160
At this point, you might be thinking to yourself, but what about topics or features X, Y and Z and

160
00:11:52,160 --> 00:11:56,590
WordPress like widgets or any of the other ten thousand features and WordPress?

161
00:11:56,990 --> 00:12:03,890
Well, these three chapters of the course, they're meant to be a guided tour, not an exhaustive encyclopedia

162
00:12:04,070 --> 00:12:05,570
of plugin development.

163
00:12:05,810 --> 00:12:12,050
WordPress is just too big of a topic with too many different features and APIs and sort of the whole

164
00:12:12,050 --> 00:12:16,730
point of plug ins is that the possibilities are infinite, endless.

165
00:12:16,850 --> 00:12:22,580
Anything that you can think of that you want to extend or customize and WordPress, you can do that

166
00:12:22,580 --> 00:12:23,420
with a plugin.

167
00:12:23,570 --> 00:12:30,320
So every single option, every parameter, every action or every filter that we can hook on to any setting

168
00:12:30,320 --> 00:12:33,680
that we can change anything is possible with plugins.

169
00:12:33,830 --> 00:12:37,930
So it's impossible to cover it all in a course like this.

170
00:12:38,150 --> 00:12:43,380
Trust me, the course would become 400 hours long and everyone would lose interest.

171
00:12:43,580 --> 00:12:50,030
The idea here is just to show you the core basic building blocks and the most common features that you're

172
00:12:50,030 --> 00:12:54,230
going to need to work with in order to build plug ins from there.

173
00:12:54,410 --> 00:13:00,470
Once you're familiar with these basics, it'll be easy for you to Google and do a bit of research on

174
00:13:00,470 --> 00:13:07,550
the specifics of a WordPress feature or API that you need to customize to bring your plug in idea to

175
00:13:07,550 --> 00:13:08,090
life.

176
00:13:08,670 --> 00:13:14,560
OK, so the whole point of these three chapters is to give you a rock solid foundation to build upon,

177
00:13:14,880 --> 00:13:16,520
and I think it's going to be a ton of fun.

178
00:13:16,940 --> 00:13:22,870
Now, in our very next lesson, we're going to get started will be starting with the traditional chapter.

179
00:13:23,090 --> 00:13:28,700
So just sort of creating a new plug in, maybe creating an admin menu, so on and so forth.

180
00:13:28,980 --> 00:13:30,680
I'm excited to jump into this with you.

181
00:13:31,010 --> 00:13:34,580
Let's keep things rolling and I'll see you in the next video.
