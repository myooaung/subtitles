WEBVTT
1
00:00:02.210 --> 00:00:03.260
Hello, everyone.

2
00:00:03.650 --> 00:00:10.850
In this lesson, we are going to set up a new feature so that subscriber accounts can like or heart

3
00:00:10.850 --> 00:00:14.360
a professor, it's a bit difficult to explain with words.

4
00:00:14.360 --> 00:00:15.620
So let me show you.

5
00:00:15.800 --> 00:00:22.280
OK, so here I am on the home page, but I want to navigate to a professor detailed screen so you can

6
00:00:22.280 --> 00:00:28.490
either jump to a professor by navigating through the programs or just press the key on your keyboard.

7
00:00:28.850 --> 00:00:31.910
And I'm going to search for Professor Bachs a lot.

8
00:00:33.350 --> 00:00:33.690
Cool.

9
00:00:33.710 --> 00:00:34.230
There it is.

10
00:00:34.250 --> 00:00:36.830
Let me visit the detail screen for that professor.

11
00:00:37.250 --> 00:00:40.390
OK, and what I want to do is right about here.

12
00:00:40.730 --> 00:00:47.660
I want to add a little box with a heart icon and then a number indicating how many likes a professor

13
00:00:47.660 --> 00:00:48.650
has received.

14
00:00:48.780 --> 00:00:54.560
And I want to set things up so that you need to be logged in with a subscriber count in order to add

15
00:00:54.560 --> 00:00:55.940
your like to the count.

16
00:00:56.270 --> 00:01:04.280
OK, and we will also implement custom logic so that each user account can only add one like, but they

17
00:01:04.280 --> 00:01:09.250
can click the heart button again to toggle or remove their original like.

18
00:01:09.620 --> 00:01:10.130
All right.

19
00:01:10.130 --> 00:01:15.630
And we can display the total number of likes that a professor has received to the general public.

20
00:01:16.040 --> 00:01:21.560
The reason we are going to work on this feature is because I think it's a great exercise to learn how

21
00:01:21.560 --> 00:01:26.040
to set up your own custom rest API endpoints.

22
00:01:26.360 --> 00:01:29.990
OK, but anyways, let's begin with the visual aspect.

23
00:01:30.000 --> 00:01:36.290
So right now, let's go edit the single professor template so that the little heart box can sit right

24
00:01:36.290 --> 00:01:36.590
here.

25
00:01:37.430 --> 00:01:44.810
So over in our text editor within our theme folder, I want you to open up a single dash, Professor

26
00:01:44.920 --> 00:01:46.930
Dot, OK?

27
00:01:47.030 --> 00:01:52.120
And I want you to find the block where we are outputting the content.

28
00:01:52.370 --> 00:01:56.110
So for me, it's sitting within the div with a class of two thirds.

29
00:01:56.660 --> 00:01:56.990
Right.

30
00:01:56.990 --> 00:01:58.170
That's this area.

31
00:01:58.820 --> 00:02:07.220
OK, and right above this block, let's add a new line and let's create a span element.

32
00:02:08.120 --> 00:02:15.770
And let's give the opening tag a class of like Dasch box, and then within the span, I'm going to drop

33
00:02:15.770 --> 00:02:18.380
down and add several more elements.

34
00:02:18.680 --> 00:02:27.290
So first, let's add a heart icon, so an eye element, and let's give it a class of F.A.A. four font.

35
00:02:27.290 --> 00:02:27.920
Awesome.

36
00:02:28.280 --> 00:02:30.160
Which is our icon library.

37
00:02:30.470 --> 00:02:35.890
Let's give it a secondary class of F a dash heart dash o.

38
00:02:36.260 --> 00:02:43.670
And let's also add another attribute named Ariah Dash hidden and set it to true.

39
00:02:44.120 --> 00:02:48.290
OK, and this will give us a hollow or outlined heart icon.

40
00:02:48.500 --> 00:02:53.620
And then right below this element, I want to add another icon of a filled in heart.

41
00:02:53.900 --> 00:03:01.760
So just duplicate this I element copy and paste and for the second one just remove the dash o on the

42
00:03:01.760 --> 00:03:03.110
secondary class.

43
00:03:03.650 --> 00:03:05.870
So simply f a dash heart.

44
00:03:06.200 --> 00:03:07.730
OK then blow this icon.

45
00:03:07.730 --> 00:03:13.550
Let's create another span and let's just make up a fictitious number of how many likes it's received.

46
00:03:13.730 --> 00:03:14.810
I will say three.

47
00:03:15.230 --> 00:03:20.630
And let's give this element a class of like Dasht Count.

48
00:03:20.960 --> 00:03:23.570
OK, so let's go ahead and save this.

49
00:03:24.050 --> 00:03:25.400
And if we refresh.

50
00:03:27.130 --> 00:03:32.950
Cool, there we see the little heart box, and if the current user has already liked the professor they're

51
00:03:32.950 --> 00:03:38.620
viewing instead of a hollow outline of a heart, it would be a solid filled in heart.

52
00:03:38.950 --> 00:03:42.020
Don't worry, we will set up that detail a bit later on.

53
00:03:42.310 --> 00:03:49.650
OK, so now that we've taken care of the visual aspect of this feature, let's focus on the data aspect.

54
00:03:49.840 --> 00:03:50.170
Right.

55
00:03:50.190 --> 00:03:56.290
The question becomes, how are we going to save these likes into the WordPress database?

56
00:03:56.560 --> 00:04:01.930
Well, there are a lot of different ways you could do this, but I'm just going to create a new custom

57
00:04:01.930 --> 00:04:10.990
post type and give it a name of like and each individual like post will represent a one to one relationship

58
00:04:10.990 --> 00:04:17.180
between the ID number of the current user and the ID number of the Leicht professor.

59
00:04:17.470 --> 00:04:21.960
So without any further ado, let's go create a brand new custom post type.

60
00:04:22.300 --> 00:04:23.560
We've been through this before.

61
00:04:23.560 --> 00:04:24.530
We know what to do.

62
00:04:24.880 --> 00:04:29.680
So over in the text editor, instead of our theme folder, let's jump into the M.

63
00:04:29.680 --> 00:04:31.750
You must use plugins folder.

64
00:04:32.050 --> 00:04:35.670
And we've got this file where we register our custom post types.

65
00:04:35.950 --> 00:04:42.400
I'm going to scroll down to the very bottom and I'm just going to use the note post type as a copy and

66
00:04:42.400 --> 00:04:43.630
paste duplicate.

67
00:04:44.470 --> 00:04:46.560
Copy that, duplicate it.

68
00:04:46.870 --> 00:04:54.190
Let's change the comment to say like post type, change the short name or variable name to like.

69
00:04:54.880 --> 00:05:00.400
OK, and now here's the important part of what's making this feature unique from the My Notes feature.

70
00:05:00.610 --> 00:05:06.370
This ability to like professors is going to require us to implement quite a bit of custom logic.

71
00:05:06.580 --> 00:05:06.930
Right.

72
00:05:06.940 --> 00:05:09.850
Each user can only like a professor once.

73
00:05:10.120 --> 00:05:15.640
And we will also want to make sure that the idea that they say they are liking is actually a professor

74
00:05:15.640 --> 00:05:18.880
post and not a campus post or a blog post.

75
00:05:19.180 --> 00:05:25.600
So long story short, what I'm getting at here is this is not just a simple case of crud, right.

76
00:05:25.600 --> 00:05:27.910
Of create, read, update and delete.

77
00:05:28.150 --> 00:05:29.080
That's a part of it.

78
00:05:29.080 --> 00:05:29.530
Yes.

79
00:05:29.530 --> 00:05:33.940
But there's also going to be a bit of custom logic that we need to enforce.

80
00:05:34.300 --> 00:05:40.090
And when that's the case, when you need to implement your own custom restrictions and logic, I don't

81
00:05:40.090 --> 00:05:43.570
like to use the built in rest API endpoints.

82
00:05:43.720 --> 00:05:47.860
Instead, I like to create my own brand new custom endpoints.

83
00:05:48.130 --> 00:05:52.200
And I also like to take care of permissions manually by myself.

84
00:05:52.540 --> 00:05:57.040
So for this new like post type, I'm going to delete the show and rest line.

85
00:05:57.250 --> 00:06:02.730
You could set this to false, but that's not necessary because it defaults to false.

86
00:06:02.740 --> 00:06:04.810
So if we just delete, show and rest.

87
00:06:06.190 --> 00:06:06.700
All right.

88
00:06:06.700 --> 00:06:13.630
And also we do not need capability type or map meta cap because we are going to handle permissions on

89
00:06:13.630 --> 00:06:16.410
our own when it comes to the like post type.

90
00:06:16.870 --> 00:06:18.730
So I'm going to delete these two lines.

91
00:06:20.560 --> 00:06:21.490
OK, moving on.

92
00:06:21.490 --> 00:06:25.810
When it comes to the supports array, we do not need the editor feature.

93
00:06:26.800 --> 00:06:28.810
We literally just need title.

94
00:06:29.200 --> 00:06:34.300
Let's keep public set to false and let's keep sho UI set to true.

95
00:06:34.840 --> 00:06:37.450
Then let's go ahead and update the label values.

96
00:06:37.780 --> 00:06:43.570
So to save some typing, I'm just going to highlight the base of the word not notes but just note and

97
00:06:43.570 --> 00:06:49.840
then I can press command or control D to select the next few instances, then just type the word like

98
00:06:49.840 --> 00:06:52.510
once and it updates in all locations.

99
00:06:52.630 --> 00:06:53.680
You don't need to do that.

100
00:06:53.680 --> 00:06:57.070
But it's a nice little trick if you're using sublime text or atom.

101
00:06:57.340 --> 00:07:02.230
OK, and finally, let's update the menu icon to dash ACoNs dash.

102
00:07:03.550 --> 00:07:04.160
Part.

103
00:07:04.900 --> 00:07:11.110
OK, now let's go ahead and save this and then let's jump to a window where we are logged in as the

104
00:07:11.110 --> 00:07:14.380
admin account and jump into the dashboard.

105
00:07:14.860 --> 00:07:16.390
And if you refresh.

106
00:07:17.350 --> 00:07:25.090
Now in the sidebar, we have links now in the future, once we've written all of the necessary JavaScript,

107
00:07:25.450 --> 00:07:27.730
you will be able to come to a professor page.

108
00:07:28.000 --> 00:07:32.590
And when you click on the heart box, that will create a like post.

109
00:07:32.920 --> 00:07:37.150
Now, obviously, we have not written all of that in JavaScript yet.

110
00:07:37.150 --> 00:07:45.340
So for the moment, let's cheat and let's use the backend to manually create a lightpost just as a test.

111
00:07:45.620 --> 00:07:49.480
So in the admin, hover over likes and click add new.

112
00:07:50.140 --> 00:07:53.070
Now there are a lot of different ways we could set this up.

113
00:07:53.380 --> 00:07:59.520
I'm going to set things up so that whoever is the author of a light post represents the user that's

114
00:07:59.530 --> 00:08:00.820
doing the liking.

115
00:08:01.480 --> 00:08:08.860
And then I want there to be a custom field named Leicht Professor I.D. And obviously that custom field

116
00:08:08.860 --> 00:08:14.020
will store the ID number of the current professor that you're trying to like.

117
00:08:14.380 --> 00:08:21.490
So, for example, whatever the idea of Dr. Bachs, a lot is, OK, so at the moment are like Post does

118
00:08:21.490 --> 00:08:25.210
not have a custom field named Leicht Professor ID.

119
00:08:25.210 --> 00:08:27.070
So why don't we go create one?

120
00:08:27.370 --> 00:08:34.090
So towards the bottom of our sidebar, let's click on Custom Fields and I'm going to create a new group

121
00:08:34.090 --> 00:08:35.080
here up at the top.

122
00:08:35.080 --> 00:08:35.770
Add new.

123
00:08:36.840 --> 00:08:44.940
I will name it liked Professor Idee, and then I need one field, so I will click add field.

124
00:08:45.950 --> 00:08:55.040
Give it a label like Professor I.D. that auto generates this name and for the field type instead of

125
00:08:55.040 --> 00:08:57.380
text, I will choose no.

126
00:08:58.570 --> 00:09:00.770
The field type is not super important.

127
00:09:00.970 --> 00:09:04.170
This will just provide one extra layer of validation.

128
00:09:04.540 --> 00:09:06.080
All right, for required.

129
00:09:06.100 --> 00:09:11.770
I want to be sure to leave it set to know, because later on, when we learn how to programmatically

130
00:09:11.770 --> 00:09:18.370
create a new post with HP, when the new light post is first created for a split second, it will not

131
00:09:18.370 --> 00:09:20.560
contain a Leicht professor ID.

132
00:09:20.830 --> 00:09:23.350
So be sure that required to set to know.

133
00:09:23.350 --> 00:09:32.320
And then let's scroll down to this location box and let's say only show this field group if post type

134
00:09:32.590 --> 00:09:36.070
is equal to and let's choose like.

135
00:09:37.720 --> 00:09:40.390
OK, then we can scroll up and click publish.

136
00:09:42.070 --> 00:09:47.530
OK, and let's go take this new custom field for a test drive, let's create a like post.

137
00:09:47.840 --> 00:09:54.850
So over in the sidebar under likes I will click add new cool and there we see it, the professor I.D..

138
00:09:55.270 --> 00:09:58.870
So I'm going to pretend that I like the doctor barks a lot, Professor.

139
00:09:58.870 --> 00:10:03.330
So I would need to go find the ID for this professor post.

140
00:10:03.790 --> 00:10:07.000
Don't worry, the visitors of our website will not need to do that.

141
00:10:07.360 --> 00:10:11.320
This is just our first little quick test that we are setting up manually.

142
00:10:11.560 --> 00:10:17.620
So let's go find the ID number for Dr. Bachs a lot, or in your case, find the idea of whatever professor

143
00:10:17.620 --> 00:10:20.890
you want to add to like four back in the admin.

144
00:10:21.250 --> 00:10:27.550
If I jump to professors really quick and click on Dr. Bachs a lot, I can see up in the address bar

145
00:10:27.550 --> 00:10:31.500
that that Professor Post has an ID of 104.

146
00:10:31.780 --> 00:10:35.890
So in your case, take note of whatever Professor ID you want to like.

147
00:10:36.250 --> 00:10:41.140
OK, and now with this number in mind, let's go actually create a like post.

148
00:10:41.950 --> 00:10:44.980
OK, so the title of the light post does not matter.

149
00:10:44.980 --> 00:10:49.600
You can even leave it blank and WordPress will generate something for us automatically.

150
00:10:50.320 --> 00:10:56.700
The important part is for Leicht Professor ID, I will say 104 and that's all we need.

151
00:10:56.710 --> 00:10:58.300
So then I will click publish.

152
00:11:01.330 --> 00:11:07.120
And now at this point, let's work on making our front end display real data, right?

153
00:11:07.140 --> 00:11:10.390
So instead of the number three here, the doctor barks a lot.

154
00:11:10.390 --> 00:11:16.360
Lightbox should say one and all of the other professor pages should say zero.

155
00:11:16.630 --> 00:11:21.070
We want this number to reflect the count of relevant like posts.

156
00:11:21.400 --> 00:11:24.610
So to set that up, let's jump back into our text editor.

157
00:11:25.000 --> 00:11:29.020
And instead of our Mbewe Plugins folder, let's jump to the theme folder.

158
00:11:29.500 --> 00:11:34.000
And we should already have open single Professor Dot P p.

159
00:11:34.450 --> 00:11:35.520
And let's do this.

160
00:11:35.740 --> 00:11:39.610
How about right above the span with a class of lightbox?

161
00:11:40.030 --> 00:11:40.900
Right above that.

162
00:11:40.900 --> 00:11:47.380
Let's add a new line and let's drop into P and within the P block.

163
00:11:48.580 --> 00:11:50.500
Let's create a new variable.

164
00:11:51.010 --> 00:11:52.870
We could name it whatever we want.

165
00:11:52.880 --> 00:12:02.530
I'm going to name it like count and let's set it to equal a new instance of the WP query class.

166
00:12:03.280 --> 00:12:03.730
All right.

167
00:12:03.730 --> 00:12:10.540
Within these parentheses, let's build out an array that describes the exact posts that we are looking

168
00:12:10.540 --> 00:12:10.930
for.

169
00:12:11.530 --> 00:12:21.070
So let's say post type and set it to like and then let's add a comma and add a new line and let's say

170
00:12:21.280 --> 00:12:22.410
meta query.

171
00:12:23.230 --> 00:12:30.790
We need to use a meta query because we only want to pull in like posts where the Leicht professor ID

172
00:12:30.790 --> 00:12:35.930
value matches the I.D. of the current professor page that you're viewing.

173
00:12:36.550 --> 00:12:46.830
So to do that, let's set our meta query argument to equal an array and within the parentheses dropdown.

174
00:12:47.020 --> 00:12:52.030
And remember that the meta query is actually an array of arrays.

175
00:12:52.390 --> 00:12:55.290
Each inner array is a filter and you can have multiple.

176
00:12:55.690 --> 00:13:01.590
So within the array will create an inner array dropdown and now within this entire array.

177
00:13:02.080 --> 00:13:03.300
Let me scroll down a little bit.

178
00:13:03.610 --> 00:13:06.070
This is where we provide three things.

179
00:13:06.280 --> 00:13:08.830
A key as a placeholder.

180
00:13:08.830 --> 00:13:10.540
I will set it to equal X.

181
00:13:11.080 --> 00:13:18.100
The second thing we provide is how we want to compare, and the third is the value.

182
00:13:19.780 --> 00:13:21.720
Now, let's fill these out one by one.

183
00:13:21.730 --> 00:13:24.730
So the key is the name of the custom field.

184
00:13:25.300 --> 00:13:33.340
Remember, we named ours liked Professor D for the COMPAR operator.

185
00:13:33.340 --> 00:13:40.060
We are looking for an exact match so we can say single quote equal single quote.

186
00:13:40.510 --> 00:13:40.840
Right.

187
00:13:40.840 --> 00:13:46.300
We're looking for instances where this equals and then for value.

188
00:13:46.300 --> 00:13:50.050
It would be the idea of the current professor that you're viewing.

189
00:13:50.920 --> 00:13:56.830
So we can just say get the ID and that's all we need.

190
00:13:57.010 --> 00:14:01.110
So now we have this query object named like Count.

191
00:14:01.510 --> 00:14:09.280
So now however many total posts this query finds, we just want to output that number into the HTML

192
00:14:09.280 --> 00:14:09.840
right here.

193
00:14:10.420 --> 00:14:14.260
So within our AP file, it scroll down a little bit.

194
00:14:15.010 --> 00:14:20.440
Here's the lightbox span and here's the inner span where we currently hardcoded the number three.

195
00:14:20.830 --> 00:14:29.770
Let's delete that and instead drop into P and let's just echo out the name of our query object, which

196
00:14:29.770 --> 00:14:31.720
is like count.

197
00:14:32.110 --> 00:14:38.020
And then we want to look inside that object with Dasch greater than and we're interested in the property

198
00:14:38.020 --> 00:14:41.260
named found underscore posts.

199
00:14:41.710 --> 00:14:45.430
This will give us the total number of posts that the query found.

200
00:14:45.670 --> 00:14:48.880
And thankfully, this property ignores pagination.

201
00:14:49.120 --> 00:14:54.460
So even if we set posts per page to one or two or three, this property doesn't care.

202
00:14:54.670 --> 00:14:59.440
It's going to give you the absolute total number of posts that match the query.

203
00:15:00.280 --> 00:15:04.740
OK, so with this in place, let's save and then refresh the front end.

204
00:15:06.070 --> 00:15:06.610
Perfect.

205
00:15:06.610 --> 00:15:12.100
And we see one which represents that one like post that we manually created.

206
00:15:12.460 --> 00:15:14.380
And if we visit another professor.

207
00:15:14.380 --> 00:15:22.000
So if I search for yours a lot and visit their page, perfect.

208
00:15:22.030 --> 00:15:23.100
We see zero.

209
00:15:23.560 --> 00:15:30.160
Next, let's set things up so that if the current user has already liked the current professor that

210
00:15:30.160 --> 00:15:35.770
they're viewing, then the heart should be solid and filled in instead of a hollow outline.

211
00:15:36.160 --> 00:15:42.640
Now, before we write P p to check if that is the case or not, let's first review the success that

212
00:15:42.640 --> 00:15:44.360
I've already written for us.

213
00:15:44.650 --> 00:15:51.580
So, for example, if I write, click on the Like Box and choose inspect, here is the overall span

214
00:15:51.580 --> 00:15:53.140
with a class of like box.

215
00:15:53.140 --> 00:15:59.590
And if I give this opening span a data attribute of data, dash exists.

216
00:16:00.250 --> 00:16:00.760
And if.

217
00:16:00.790 --> 00:16:07.030
I give that a value of yes, as soon as I push enter to confirm that change, watch the heart.

218
00:16:07.990 --> 00:16:12.820
It fills up, but if data exists is set to anything other than yes.

219
00:16:14.150 --> 00:16:15.770
Then the heart becomes empty.

220
00:16:15.980 --> 00:16:21.790
OK, so we've already got systems in place that is watching for data exists equals.

221
00:16:21.800 --> 00:16:22.440
Yes.

222
00:16:22.700 --> 00:16:30.380
So now all we need to do is write P P that outputs data exists equals either yes or no.

223
00:16:30.770 --> 00:16:35.150
So let's jump back into our P file and let's do this.

224
00:16:35.420 --> 00:16:39.170
Let's use this query that we just wrote named like Count.

225
00:16:39.320 --> 00:16:42.810
Let's use it as a template in order to save a bunch of typing.

226
00:16:43.160 --> 00:16:47.380
So I'm just going to copy this into my clipboard and duplicate it.

227
00:16:48.230 --> 00:16:54.230
OK, and on this duplicate copy, I'm going to change the variable name to exist.

228
00:16:54.230 --> 00:16:56.060
Query the name.

229
00:16:56.060 --> 00:16:57.920
Doesn't matter, choose whatever you want.

230
00:16:58.430 --> 00:17:02.020
And I'm just going to add one key option to this array.

231
00:17:02.420 --> 00:17:10.190
So it may be before the post type equals like let's add a new line and let's say that the author needs

232
00:17:10.190 --> 00:17:13.810
to equal whatever user is currently viewing the page.

233
00:17:13.820 --> 00:17:18.290
So get current user I.D..

234
00:17:18.590 --> 00:17:20.810
Be sure to include a comma at the end of the line.

235
00:17:21.110 --> 00:17:28.580
OK, so this query object will only contain results if the current user has already liked the current

236
00:17:28.580 --> 00:17:29.250
professor.

237
00:17:29.600 --> 00:17:32.270
So why don't we do this right above this new query?

238
00:17:32.450 --> 00:17:37.210
Let's create a new variable and I will name it exist status.

239
00:17:37.220 --> 00:17:41.960
The name doesn't matter and by default I will set its value to know.

240
00:17:42.800 --> 00:17:45.710
OK then right below this new custom query.

241
00:17:46.830 --> 00:17:55.140
Let's say if if parentheses, curly brackets and for the condition, let's say if they exist, query,

242
00:17:55.440 --> 00:18:03.120
look inside it for found posts and as long as it's greater than zero, this will evaluate to true.

243
00:18:03.420 --> 00:18:07.080
And if it is true, then let's set this variable to equal.

244
00:18:07.090 --> 00:18:12.090
Yes, so exist status equals.

245
00:18:12.090 --> 00:18:13.560
Yes, cool.

246
00:18:13.590 --> 00:18:19.920
So now we've got this variable that will equal yes or no and now down within the H html for the like

247
00:18:19.920 --> 00:18:30.150
box on the overall opening span tag, let's just say data dash exists equals and then drop into P p

248
00:18:30.720 --> 00:18:35.220
and just echo out the contents of our existing status variable.

249
00:18:35.580 --> 00:18:36.080
All right.

250
00:18:36.090 --> 00:18:42.600
Now if we go ahead and save that and refresh the page, it makes sense that the heart is hollow on the

251
00:18:42.600 --> 00:18:46.530
doctor miaows a lot page because I haven't liked this professor yet.

252
00:18:46.530 --> 00:18:52.410
But if I jump back to the Bachs lot page and you might need to refresh to clear your browsers immediate

253
00:18:52.410 --> 00:18:53.100
cache.

254
00:18:53.400 --> 00:18:59.160
But cool, there we see that the heart is filled in and that's going to bring this lesson to a close.

255
00:18:59.520 --> 00:19:06.330
In our next lesson, we will work on JavaScript so that when you click on the like box, we send out

256
00:19:06.330 --> 00:19:13.410
a request to a custom rest API endpoint to either create a new like post if you haven't already like

257
00:19:13.410 --> 00:19:17.220
the professor or if you have already liked the current professor.

258
00:19:17.340 --> 00:19:22.950
If you click on the box, we would interpret that as a request to remove your like, in which case we

259
00:19:22.950 --> 00:19:25.140
would delete the relevant like post.

260
00:19:25.380 --> 00:19:26.990
Should be a lot of fun to set up.

261
00:19:27.000 --> 00:19:30.870
So let's keep things rolling and I will see you in the next lesson.
