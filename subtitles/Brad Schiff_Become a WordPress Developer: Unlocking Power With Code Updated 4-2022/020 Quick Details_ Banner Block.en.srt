1
00:00:02,590 --> 00:00:03,430
Hello, everyone.

2
00:00:03,760 --> 00:00:09,550
In this lesson, we're going to work on a couple small, quick details to truly finish our banner block.

3
00:00:10,000 --> 00:00:11,320
Let's jump into the action.

4
00:00:11,680 --> 00:00:18,670
So to explain the first issue that we're going to fix, if I insert a new fresh copy of our banner block

5
00:00:19,600 --> 00:00:25,390
banner notice it cannot locate a default background image on the editor side.

6
00:00:25,390 --> 00:00:32,830
But if I save this and refresh on the front end, well, because we wrote the P code to have a fallback

7
00:00:32,830 --> 00:00:35,170
image, it works without a problem.

8
00:00:35,290 --> 00:00:42,040
So really quick, let's set things up in a way so that our client side, JavaScript admin side, it

9
00:00:42,040 --> 00:00:46,420
also has a default or fallback image when you first insert the block.

10
00:00:47,140 --> 00:00:53,860
So in our text editor inside of banner tags in our attributes, what we could really do is just give

11
00:00:53,860 --> 00:01:00,190
this image URL attribute, just give it a default tag like this and just give it a value that makes

12
00:01:00,190 --> 00:01:00,820
sense.

13
00:01:01,360 --> 00:01:07,960
However, I've dug through the WordPress documentation and I can't seem to find an easy way from within

14
00:01:07,960 --> 00:01:12,370
JavaScript to point towards the currently installed theme folder.

15
00:01:12,910 --> 00:01:18,370
Now yes, you could make some assumptions and hard coded, so you could begin the path to your hardcoded

16
00:01:18,370 --> 00:01:22,510
fallback image with a forward slash to mean the root of your domain.

17
00:01:22,810 --> 00:01:26,590
But what if someone installed WordPress in a subfolder on their domain?

18
00:01:26,950 --> 00:01:30,190
Or what if they renamed their WP content folder?

19
00:01:30,700 --> 00:01:30,940
Right.

20
00:01:30,940 --> 00:01:38,350
So we want some sort of robust or dynamic way to have WordPress itself give us a URL path to the currently

21
00:01:38,350 --> 00:01:39,430
installed theme.

22
00:01:40,060 --> 00:01:44,020
If you are aware of a simple way of doing that with JavaScript, please let me know.

23
00:01:44,320 --> 00:01:46,960
But I'm going to resort to using PHP.

24
00:01:47,500 --> 00:01:53,920
We can have PHP output a little bit of JSON and then it will be very easy for our JavaScript to just

25
00:01:53,920 --> 00:01:55,150
access that value.

26
00:01:55,450 --> 00:02:02,110
So let me show you what I have in mind in our functions dot AP file, scroll down to the very bottom.

27
00:02:02,680 --> 00:02:08,410
So when we're using the Gsx block and we're calling it here for a new instance and we're seeing that

28
00:02:08,410 --> 00:02:12,340
it's named Banner and we're saying that it's true, meaning it should have a callback.

29
00:02:12,880 --> 00:02:15,610
Let's just provide a third argument here.

30
00:02:15,610 --> 00:02:23,680
So comma, let's give it a IP array, so square brackets and we can make up a property name quotes.

31
00:02:24,370 --> 00:02:31,660
Let's make up a name of fallback image and then arrow symbol and then we just give it whatever URL value

32
00:02:31,660 --> 00:02:32,200
we want.

33
00:02:33,160 --> 00:02:36,820
So how about we just say get theme file?

34
00:02:36,820 --> 00:02:44,140
You are I parentheses to call that quotes slash images slash library hero dot jpeg.

35
00:02:44,740 --> 00:02:45,040
Cool.

36
00:02:45,040 --> 00:02:48,220
So we're giving this IP array of data into our class.

37
00:02:48,550 --> 00:02:54,220
Now let's just adjust our class so that if there is a third argument, we handle this in a way where

38
00:02:54,220 --> 00:02:58,750
we output it as a JSON object using something called localized script.

39
00:02:59,110 --> 00:03:00,130
So here's what I would do.

40
00:03:00,460 --> 00:03:07,270
Let's go find the class, the opening class for JS block on the construct function, let's add a comma,

41
00:03:07,270 --> 00:03:09,460
let's have a third argument or a third parameter.

42
00:03:09,460 --> 00:03:11,320
Let's call it dollar sign.

43
00:03:11,650 --> 00:03:13,930
Just data equals null.

44
00:03:13,930 --> 00:03:18,250
So that way, if I instance doesn't provide this, we don't run into a problem.

45
00:03:18,880 --> 00:03:21,250
Let's be sure to hold on to that incoming value.

46
00:03:21,250 --> 00:03:28,240
So I'll say dollar sign this dash greater than data equals dollar sign data semicolon.

47
00:03:28,690 --> 00:03:32,980
Now here's what I would do to actually use it on our on init function.

48
00:03:33,640 --> 00:03:38,860
We're going to write a line of code and it just needs to be below the line of code where we say WP register

49
00:03:38,860 --> 00:03:39,430
script.

50
00:03:39,910 --> 00:03:43,480
So whether you place it here or here or here doesn't matter.

51
00:03:43,630 --> 00:03:49,510
But it does need to come after we've already registered this script with this name, so maybe right

52
00:03:49,510 --> 00:03:51,670
below that line I'm just going to have an if statement.

53
00:03:51,670 --> 00:03:57,220
So if parentheses, curly brackets for the condition, let's just say dollar sign this dash greater

54
00:03:57,220 --> 00:03:58,060
than data.

55
00:03:58,570 --> 00:04:03,730
So essentially when you're instantiating your new object, only if you actually provided data do we

56
00:04:03,730 --> 00:04:09,730
want to then just call WP localize script semicolon.

57
00:04:10,030 --> 00:04:12,280
Now in these parentheses we give it three things.

58
00:04:12,280 --> 00:04:18,700
So a comma, B, comma, c, the first thing you give it is the script that you're trying to hook on

59
00:04:18,700 --> 00:04:19,150
to.

60
00:04:19,570 --> 00:04:25,150
Essentially, when word press outputs this script to the page, it's going to let us output a little

61
00:04:25,150 --> 00:04:27,130
bit of JSON along with it.

62
00:04:27,700 --> 00:04:32,530
So this first value would just be dollar sign this dash greater than name.

63
00:04:32,890 --> 00:04:38,170
The second argument is where we get to make up the name for this JavaScript variable that'll be output

64
00:04:38,170 --> 00:04:39,370
into the HTML.

65
00:04:39,820 --> 00:04:44,440
So again, let's just use the name values of dollar sign this dash greater that name.

66
00:04:44,710 --> 00:04:48,100
The third value is the actual data that you want to output.

67
00:04:48,280 --> 00:04:52,600
So that would just be dollar sign this dash greater than data.

68
00:04:53,470 --> 00:04:57,130
Let's go ahead and give that a save and now I'll show you where you can find this.

69
00:04:57,580 --> 00:05:00,010
So if you refresh your template editor.

70
00:05:01,570 --> 00:05:06,040
And then right click somewhere up in this empty area and choose view page source.

71
00:05:07,750 --> 00:05:11,320
Then press control F or command F to search or find something.

72
00:05:11,320 --> 00:05:14,860
And let's just look for fallback image, right?

73
00:05:14,860 --> 00:05:16,300
Because that's what we named our property.

74
00:05:16,810 --> 00:05:18,070
We zoom in a little bit here.

75
00:05:19,090 --> 00:05:19,480
Cool.

76
00:05:19,480 --> 00:05:25,540
So WordPress output, this little bit of JavaScript, there's our variable name banner and it equals

77
00:05:25,540 --> 00:05:26,830
this JSON object.

78
00:05:27,160 --> 00:05:30,880
So now we can just use this value in our client side JavaScript.

79
00:05:31,510 --> 00:05:39,580
So to bring this full circle, just go back into banner dot Jess in our attributes area and image URL,

80
00:05:39,640 --> 00:05:43,540
just say comma default value should be.

81
00:05:44,880 --> 00:05:45,560
Banner.

82
00:05:46,200 --> 00:05:49,650
If you really wanted to make it obvious, you could even spell out the word windows.

83
00:05:49,650 --> 00:05:54,540
You could say window, dot banner, dot, fallback image.

84
00:05:55,260 --> 00:05:59,070
But in JavaScript, in a web browser, the window is just sort of implied.

85
00:05:59,250 --> 00:06:03,810
The point is we're just pulling it from sort of the global browser scope, but we can go ahead and give

86
00:06:03,810 --> 00:06:04,530
that a save.

87
00:06:04,740 --> 00:06:08,070
Make sure that you're running NPM run start.

88
00:06:09,730 --> 00:06:12,340
Now back in our template editor if we refresh.

89
00:06:13,990 --> 00:06:20,710
Let me zoom out a little bit and then let me delete this old copy and insert a totally brand new fresh

90
00:06:20,710 --> 00:06:21,250
copy.

91
00:06:21,910 --> 00:06:22,290
Cool.

92
00:06:22,300 --> 00:06:23,440
Just to prove that it's working.

93
00:06:23,740 --> 00:06:26,140
There is our fallback image URL.

94
00:06:26,170 --> 00:06:26,860
Perfect.

95
00:06:27,460 --> 00:06:30,520
And just to prove that our other features are still working, you can click on it.

96
00:06:30,530 --> 00:06:31,690
Click, Choose, image.

97
00:06:31,840 --> 00:06:33,100
Choose any image you want.

98
00:06:33,550 --> 00:06:34,120
Perfect.

99
00:06:34,480 --> 00:06:36,970
Let's take care of a couple more tiny details.

100
00:06:37,630 --> 00:06:43,990
So in our code, I want you to find the area where we're calling use effect in this function.

101
00:06:44,000 --> 00:06:47,170
So from async down to when we actually call go.

102
00:06:47,830 --> 00:06:49,870
I want you to copy that into your clipboard.

103
00:06:50,620 --> 00:06:52,630
We're going to need it in about 10 seconds from now.

104
00:06:53,080 --> 00:06:55,330
And I want to wrap that in an if statement.

105
00:06:55,330 --> 00:07:02,950
So if parentheses, curly brackets for the condition, I want to say only perform that API lookup if

106
00:07:02,950 --> 00:07:07,370
props attributes image ID if that evaluates to true.

107
00:07:07,390 --> 00:07:14,350
So in other words, if the user hasn't even provided an image ID value yet, we don't need to bother

108
00:07:14,560 --> 00:07:16,540
looking up that API data.

109
00:07:16,960 --> 00:07:20,350
So then in the curly brackets for if just paste in your clipboard again.

110
00:07:20,770 --> 00:07:21,190
Cool.

111
00:07:21,580 --> 00:07:26,380
Let's give that save and test everything out to make sure it's still working so I can refresh.

112
00:07:29,400 --> 00:07:31,410
Let me insert a fresh copy.

113
00:07:32,800 --> 00:07:35,950
So, Banner, let me choose a new image.

114
00:07:35,950 --> 00:07:37,030
I'll choose this cat.

115
00:07:38,600 --> 00:07:38,870
Cool.

116
00:07:38,870 --> 00:07:41,600
And if I look in my console, perfect.

117
00:07:41,600 --> 00:07:47,480
At no point do we see a red error message saying, Hey, you're hitting up the API for an image media

118
00:07:47,510 --> 00:07:49,460
ID value that doesn't even exist.

119
00:07:50,000 --> 00:07:50,630
Perfect.

120
00:07:51,110 --> 00:07:53,360
Now for one tiny CC fix.

121
00:07:53,660 --> 00:07:59,870
If you refresh on the front end, I think it would be better if the images were centered horizontally.

122
00:08:00,470 --> 00:08:06,050
For example, I know that the original image of this frog, I know that the frog is centered horizontally.

123
00:08:06,260 --> 00:08:10,730
So we can adjust our CSS a little bit just to make sure that our images appear that way.

124
00:08:11,330 --> 00:08:14,150
So this has nothing to do with WordPress, but it's just a quick fix.

125
00:08:14,150 --> 00:08:19,040
If you go into the CC folder and then go into modules, then go into page banner.

126
00:08:19,640 --> 00:08:20,540
Scroll down a little bit.

127
00:08:20,540 --> 00:08:24,980
We're looking for this BG image area right after background size.

128
00:08:24,980 --> 00:08:32,480
You can just say background dash position and just set it to center, center, give that a save and

129
00:08:32,480 --> 00:08:34,040
then refresh the front end.

130
00:08:34,670 --> 00:08:35,360
Perfect.

131
00:08:36,020 --> 00:08:37,790
That's going to bring this video to a close.

132
00:08:37,790 --> 00:08:40,550
And we have now officially completed the banner block.

133
00:08:40,880 --> 00:08:43,010
In our next lesson, we're going to change gears.

134
00:08:43,340 --> 00:08:47,330
So I just switched to a tab where I'm looking at the finished product of what we're going to build.

135
00:08:47,720 --> 00:08:50,630
And up next, we're going to work on this area.

136
00:08:51,380 --> 00:08:52,550
So this is on the homepage.

137
00:08:52,550 --> 00:08:58,280
We pull in the two most rapidly approaching events and we pull in the two newest blog posts.

138
00:08:59,000 --> 00:09:03,710
So we're just going to move this over or implement this within the new theme that we're building together

139
00:09:04,100 --> 00:09:05,120
should be a lot of fun.

140
00:09:05,360 --> 00:09:07,550
Let's keep things rolling and I'll see you then.
