1
00:00:02,200 --> 00:00:03,140
Hello, everyone.

2
00:00:03,460 --> 00:00:08,680
In this lesson, we're going to begin coding the actual feature of our plug in.

3
00:00:09,160 --> 00:00:11,600
Let's jump into the action and let me explain.

4
00:00:11,620 --> 00:00:15,070
So this is a sneak peek of the finished product.

5
00:00:15,520 --> 00:00:23,470
And on a single detail blog post screen, you can see that the plug in is dynamically adding this word

6
00:00:23,470 --> 00:00:27,500
count statistics before the actual body content.

7
00:00:27,910 --> 00:00:33,070
So in this lesson, we just want to write a bit of PHP that's going to output the headline.

8
00:00:33,070 --> 00:00:39,070
And then the three statistics write the word count, character count and the approximate read time.

9
00:00:39,400 --> 00:00:45,460
So let me jump back over to a tab where I have not completed this yet and we're going to work on this

10
00:00:45,460 --> 00:00:46,090
together.

11
00:00:46,640 --> 00:00:48,580
So let's jump into our text editor.

12
00:00:49,180 --> 00:00:52,870
And what we want to do is filter the content for a post.

13
00:00:53,290 --> 00:00:56,790
Now, we've actually already seen this filter hook a few lessons ago.

14
00:00:56,800 --> 00:01:04,840
So in our constructor function, let's just add a new line and say add, underscore, filter, semicolon.

15
00:01:04,840 --> 00:01:06,310
We're going to give it to arguments.

16
00:01:06,550 --> 00:01:10,240
So the first is the underscore content, comma.

17
00:01:10,240 --> 00:01:15,130
And then let's just point towards a method that we're going to create in about ten seconds so we can

18
00:01:15,130 --> 00:01:17,500
use the array callable syntax.

19
00:01:17,680 --> 00:01:21,460
So array, the first argument is sign this.

20
00:01:21,910 --> 00:01:24,870
The second argument is just a name that we get to make up.

21
00:01:25,210 --> 00:01:29,580
So you could choose any name you want, but I'm actually going to name it if rap.

22
00:01:30,340 --> 00:01:32,530
OK, then I would just create a function with that.

23
00:01:32,530 --> 00:01:36,500
Names function if wrap parentheses curly brackets.

24
00:01:36,760 --> 00:01:41,350
Now I'm doing this because we only really need to change or filter the content.

25
00:01:41,560 --> 00:01:49,870
If a you're on a single blog post screen and B if the user has any of the three checkboxes checked.

26
00:01:50,000 --> 00:01:57,490
So for example, if I go into settings word count, if someone uncheck all three of these checkboxes,

27
00:01:57,490 --> 00:02:01,420
then we don't need to filter or manipulate the content.

28
00:02:01,960 --> 00:02:07,420
Now, you could have wrapped this overall add filter line in an if statement.

29
00:02:07,720 --> 00:02:09,150
That would make a lot of sense.

30
00:02:09,310 --> 00:02:15,160
However, it's just my personal preference that I like my constructor function to be very clean and

31
00:02:15,160 --> 00:02:15,670
minimal.

32
00:02:15,880 --> 00:02:22,030
I like to be able to look at the constructor, function at a quick glance and immediately see the actions

33
00:02:22,030 --> 00:02:23,500
and filters that I'm using.

34
00:02:23,890 --> 00:02:25,510
So this is just how I'm going to do it.

35
00:02:25,630 --> 00:02:30,670
But in our if rap function inside the body, let's set up an if statement.

36
00:02:31,010 --> 00:02:38,890
So if parentheses curly brackets for the condition in these parentheses, let's say only if this is

37
00:02:38,890 --> 00:02:46,870
the main query parentheses to call that, and if this is a single blog post page.

38
00:02:46,900 --> 00:02:48,670
So parentheses to call that.

39
00:02:49,240 --> 00:02:54,810
OK, so we've already used and in our condition now I also want to use or in our condition.

40
00:02:54,820 --> 00:02:59,830
So here's what I'm going to do, wrap both of these in a set of parentheses.

41
00:03:00,100 --> 00:03:03,400
So right before the word is another opening parentheses.

42
00:03:03,760 --> 00:03:07,480
And then in between these two closing, I have another closing, OK?

43
00:03:07,570 --> 00:03:09,310
And then I'm going out of space right here.

44
00:03:10,270 --> 00:03:16,030
And then I'm going to say end and then another set of parentheses.

45
00:03:16,030 --> 00:03:22,420
And now in here I'm going to use or and I'm going to include all three of our checkbox options.

46
00:03:22,900 --> 00:03:29,350
So if this one is checked or if this one is checked or if this one is checked, so if even just one

47
00:03:29,350 --> 00:03:33,260
of them is checked, then we are going to want to manipulate the content.

48
00:03:33,280 --> 00:03:38,560
So in this set of parentheses, I would just say get underscore option.

49
00:03:39,130 --> 00:03:45,880
The first one we named it WCP, underscore word count now after that string of text.

50
00:03:45,880 --> 00:03:50,110
But still inside there, I would say comma, the default value of one.

51
00:03:50,440 --> 00:03:55,810
This default value is important because if the user just installs your plugin and then they haven't

52
00:03:55,810 --> 00:04:01,510
actually checked in unchecked and rechecked boxes and saved all their settings, well, this option

53
00:04:01,510 --> 00:04:04,830
won't actually exist in the database yet, right?

54
00:04:05,020 --> 00:04:09,520
If the users just using the default option, we won't find anything in the database.

55
00:04:09,530 --> 00:04:13,570
So then WordPress will use this value that we're providing here as a fallback.

56
00:04:13,960 --> 00:04:22,060
OK, so just after that one set of parentheses, now we can say or if get option, this one will be

57
00:04:22,060 --> 00:04:32,110
quotes WCP underscore character count after the quotes, comma default value after just the one closing

58
00:04:32,110 --> 00:04:42,100
parentheses one more or get option quotes WCP read time again.

59
00:04:42,100 --> 00:04:44,080
The second option, the default value.

60
00:04:44,530 --> 00:04:49,600
I realized that line of code was very difficult to follow along with so you can pause the video right

61
00:04:49,600 --> 00:04:49,750
now.

62
00:04:49,750 --> 00:04:55,900
I've broken it down to fit on multiple lines or also know that you can always download my finished code

63
00:04:55,900 --> 00:04:57,070
for each lesson.

64
00:04:57,550 --> 00:05:01,180
There's a downloadable zip file that you can find after each video.

65
00:05:01,650 --> 00:05:08,760
Anyways, big picture, we just want to make sure that both of these are true and any single one of

66
00:05:08,760 --> 00:05:16,560
these is true, if that's the case right then in the curly brackets for our if statement, let's return.

67
00:05:17,250 --> 00:05:18,330
And what do we want to return?

68
00:05:18,360 --> 00:05:24,020
Well, we want a chance to manipulate or change the content for a blog post.

69
00:05:24,600 --> 00:05:29,790
So in this function that we're creating, let's make sure we have a parameter you can name it anything

70
00:05:29,790 --> 00:05:32,760
like maybe input, only content.

71
00:05:33,480 --> 00:05:34,800
So dollar sign content.

72
00:05:34,800 --> 00:05:40,470
And then since this function already has a bit of complexity to it, I'm just going to pass the task

73
00:05:40,470 --> 00:05:41,820
off to a new function.

74
00:05:42,030 --> 00:05:47,040
They will only have the one single responsibility of manipulating the string of text.

75
00:05:47,040 --> 00:05:50,150
So I'm just going to say sign this right.

76
00:05:50,160 --> 00:05:52,590
Our class or this instance of the object.

77
00:05:53,070 --> 00:05:59,010
Let's look inside it with dash greater than and then we can make up a method name that we'll create

78
00:05:59,010 --> 00:06:00,750
in about ten seconds from now.

79
00:06:01,140 --> 00:06:03,000
You can name this method, whatever you want.

80
00:06:03,030 --> 00:06:09,660
I'll call it create HTML parentheses to actually call it semicolon.

81
00:06:09,900 --> 00:06:16,920
And then in these parentheses, let's just pass along the default version of the content before we get

82
00:06:16,920 --> 00:06:17,840
to manipulate it.

83
00:06:17,880 --> 00:06:19,500
So dollar sign content.

84
00:06:19,890 --> 00:06:25,800
OK, now that was if our condition is met, if our condition is not met, well then just right below

85
00:06:25,800 --> 00:06:32,490
the if statement right here we can simply return dollar sign content without modifying it in any way.

86
00:06:33,030 --> 00:06:33,450
Cool.

87
00:06:33,780 --> 00:06:39,020
At this point let's just go create a method now with this name, create HTML.

88
00:06:39,930 --> 00:06:46,440
So right about here I would just say function create html parentheses, curly brackets.

89
00:06:46,680 --> 00:06:49,110
Let's make sure to have a parameter again.

90
00:06:49,110 --> 00:06:51,960
You could call it anything, I'll call it dollar sign content.

91
00:06:52,480 --> 00:06:58,230
OK, before we move forward, if you want to make sure that your code is working so far in this function,

92
00:06:58,230 --> 00:07:05,010
you can just return dollar sign content and then concatenate on maybe just a space and the word hey

93
00:07:05,220 --> 00:07:09,290
or hello semicolon and let's hit save and test it out.

94
00:07:09,960 --> 00:07:17,640
So if we refresh on a single blog post detail screen down at the very bottom of your content, you should

95
00:07:17,640 --> 00:07:18,810
see hello.

96
00:07:19,320 --> 00:07:24,480
And to truly test that our logic is working, you can just go into your plug in settings screen and

97
00:07:24,480 --> 00:07:26,340
uncheck all three of these.

98
00:07:28,810 --> 00:07:36,040
Save changes, reload again, notice the hello goes away cool, so let's put those settings back.

99
00:07:40,200 --> 00:07:45,850
OK, and let's move forward and actually begin quoting the real content to back in our code.

100
00:07:46,140 --> 00:07:52,920
Actually, I do want to take a quick time out and explain the difference between this syntax where we're

101
00:07:52,920 --> 00:08:01,400
calling a method in our class versus this syntax where we're providing a reference to one of our methods.

102
00:08:01,890 --> 00:08:06,120
So down here, we didn't need to use the array callable syntax.

103
00:08:06,600 --> 00:08:12,660
We could just directly begin looking inside the class or this instance of the object and then simply

104
00:08:12,660 --> 00:08:13,630
call the method.

105
00:08:13,890 --> 00:08:18,900
This is because we wanted to call and execute this method right here.

106
00:08:18,900 --> 00:08:25,590
Right now up here, we are not the ones calling the method, so we don't want to call it right here.

107
00:08:25,590 --> 00:08:30,690
Right now, we're just passing a reference to the method into WordPress.

108
00:08:30,690 --> 00:08:37,740
And then WordPress is responsible for actually executing and calling the methods at just the right moment.

109
00:08:38,230 --> 00:08:43,680
OK, so hopefully that clears up the difference between this syntax and this syntax.

110
00:08:44,130 --> 00:08:45,840
Also, just a quick note.

111
00:08:46,080 --> 00:08:51,810
While I'm looking at this code, I'm realizing that we actually didn't need the entire set of parentheses

112
00:08:51,810 --> 00:08:53,760
to group these two conditions.

113
00:08:54,180 --> 00:08:59,280
I think I was sort of caught up in the moment of thinking of the actual logic and not so much thinking

114
00:08:59,280 --> 00:09:00,990
about the code syntax itself.

115
00:09:00,990 --> 00:09:06,270
So you could get rid of this inner parentheses right before his main query and then you can get rid

116
00:09:06,270 --> 00:09:08,790
of this closing parentheses right here.

117
00:09:09,240 --> 00:09:09,500
Right.

118
00:09:09,520 --> 00:09:10,920
There's really no need to group these two.

119
00:09:10,920 --> 00:09:18,620
So we're just saying if this is true and if this is true and if any one of these three is true, cool.

120
00:09:19,290 --> 00:09:25,560
Now, at this point, let's actually get to the fun part of the lesson, building out our creative HTML

121
00:09:25,560 --> 00:09:26,070
method.

122
00:09:26,610 --> 00:09:33,810
Why don't we begin by outputting a heading level three that says post statistics or whatever the user's

123
00:09:33,810 --> 00:09:38,040
typed into their custom title field, so we don't actually want to return the content.

124
00:09:38,040 --> 00:09:43,890
Plus, hello, we can give ourselves a clean slate in this method and why don't we create a variable

125
00:09:44,130 --> 00:09:49,800
that we can keep adding on to as we go so we can name it anything we want, but I'm going to name it

126
00:09:49,800 --> 00:09:55,740
Dollar Sign HTML and let's set it to equal string of text.

127
00:09:55,950 --> 00:10:01,350
Let's just add a semicolon right now so we don't forget in the string of text let's have had in level

128
00:10:01,350 --> 00:10:07,770
three after the heading level three, let's have an opening P tag and then a bit later we can actually

129
00:10:07,770 --> 00:10:10,110
fill in that paragraph and close it out.

130
00:10:10,110 --> 00:10:11,540
But for now we just want to open it.

131
00:10:11,850 --> 00:10:19,410
OK, now inside the H3 tags, this is where we want to say post statistics or whatever the user entered.

132
00:10:19,810 --> 00:10:20,700
So let's do this.

133
00:10:20,880 --> 00:10:26,430
Let's close out this first part of the string and then concatenate on something else.

134
00:10:26,430 --> 00:10:31,350
For now, you can just hit X as a placeholder and then you'd want to concatenate on and then just open

135
00:10:31,350 --> 00:10:32,280
up another string.

136
00:10:32,680 --> 00:10:35,550
OK, now we didn't actually want the X as a placeholder.

137
00:10:35,550 --> 00:10:41,520
Instead, what we would want here is get option in back in the admin panel.

138
00:10:41,520 --> 00:10:45,570
Remember this field where the user can type in their own custom headline text.

139
00:10:45,870 --> 00:10:54,660
We named that option or that field WCP underscore headline if the user hasn't entered a custom value

140
00:10:54,660 --> 00:11:00,330
yet or if they just installed the plugin and we need a default or fallback value, let's say quotes,

141
00:11:00,570 --> 00:11:03,150
post statistics.

142
00:11:03,690 --> 00:11:08,400
OK, we're almost ready to test this out on a new line, but still in this function.

143
00:11:08,670 --> 00:11:13,950
Now, let's just add this onto the standard blog post content.

144
00:11:14,430 --> 00:11:19,230
Now, we do want to pay attention to whether we should add it to the beginning of the content or to

145
00:11:19,230 --> 00:11:20,970
the end of the content.

146
00:11:21,270 --> 00:11:22,890
So here's how I would handle that.

147
00:11:23,220 --> 00:11:30,030
I would just open up an if statement for the condition if get option.

148
00:11:30,600 --> 00:11:37,350
We named it WCP underscore location, comma, and we'd actually want that to have a default value of

149
00:11:37,350 --> 00:11:37,860
zero.

150
00:11:37,860 --> 00:11:43,500
Remember, we said by default it should be at the beginning of the post and we set the value of one

151
00:11:43,500 --> 00:11:49,350
to mean at the end of the post in between these two closing parentheses, I'm going to say if that equals

152
00:11:49,350 --> 00:11:52,080
zero, obviously this one equals zero.

153
00:11:52,080 --> 00:11:56,880
But we want to make sure if it's coming from the database, if the user has actually saved that option

154
00:11:57,030 --> 00:12:04,470
or changed it from the default value, if that is zero, then we would just want to add on our content

155
00:12:04,470 --> 00:12:06,840
to the beginning of the blog post content.

156
00:12:07,110 --> 00:12:15,570
So if that was the case, I would just return our HTML plus or concatenate on dollar sign content.

157
00:12:16,210 --> 00:12:21,300
If this is not the case, then we would want to add our HTML at the end of the content.

158
00:12:21,300 --> 00:12:28,260
So right below this if statement we can just say return dollar sign content, concatenate on dollar

159
00:12:28,260 --> 00:12:29,300
sign HTML.

160
00:12:29,310 --> 00:12:30,390
So just the reverse.

161
00:12:30,870 --> 00:12:33,570
OK, let's give this a save and test it out.

162
00:12:34,230 --> 00:12:39,330
So back on the front end, if we reload, cool up the very top of the post.

163
00:12:39,470 --> 00:12:49,700
See post info, and if I change this to end of post and save the changes and then reload, cool, now

164
00:12:49,700 --> 00:12:51,590
it's down at the very bottom of the post.

165
00:12:52,160 --> 00:12:57,270
At this point, we're ready to actually start outputting the word count, character count and retire.

166
00:12:57,590 --> 00:13:04,910
So right after this line where we have dollar sign, HTML equals our headline right below that.

167
00:13:04,910 --> 00:13:09,080
Let's just begin adding the content that would live inside this paragraph.

168
00:13:09,420 --> 00:13:16,490
So I'll write a comment to ourselves and let's say let's calculate or get the word count once and save

169
00:13:16,490 --> 00:13:22,580
it in a variable because we're going to need the word count for both outputting the word count and for

170
00:13:22,580 --> 00:13:24,190
calculating the read time.

171
00:13:24,230 --> 00:13:28,050
So we don't want to have to calculate or count the word count more than once.

172
00:13:28,490 --> 00:13:35,990
OK, now we can make up any variable name we want, but I'll call it word count equals.

173
00:13:36,620 --> 00:13:44,330
And then there's a function called s t r word count semicolon here.

174
00:13:44,810 --> 00:13:48,020
And then you could just include dollar sign content inside here.

175
00:13:48,140 --> 00:13:56,540
However, to be more accurate, let's first use strip tags so that we don't count individual HTML element

176
00:13:56,540 --> 00:13:58,610
tags, we just count actual content.

177
00:13:58,610 --> 00:14:03,550
So strip tags call that and give that the WordPress content.

178
00:14:04,310 --> 00:14:06,470
Now you could leave this line on its own.

179
00:14:06,620 --> 00:14:13,790
However, if your blog post had thousands and thousands of words, maybe you would only want to bother

180
00:14:13,790 --> 00:14:19,310
counting how many words there are if the word count or retimed checkboxes were checked.

181
00:14:19,520 --> 00:14:19,920
Right.

182
00:14:19,940 --> 00:14:25,870
Because if only the character count checkbox was checked, this would just be a wasted calculation.

183
00:14:26,540 --> 00:14:32,030
So what you could do is just cut this line into your clipboard and say if parentheses create brackets

184
00:14:32,030 --> 00:14:43,300
and the condition would just be if get option WCP word, count the default value of one for yes or if

185
00:14:43,310 --> 00:14:48,650
get option wcp read time default value of one.

186
00:14:48,770 --> 00:14:52,810
If either of those are true, then we do actually want to calculate the word count.

187
00:14:53,240 --> 00:14:53,590
Cool.

188
00:14:53,600 --> 00:14:56,960
So now let's just actually add a little bit of text into this paragraph.

189
00:14:56,960 --> 00:15:03,320
So right below this we can just say if parentheses curly brackets if word count is set to.

190
00:15:03,320 --> 00:15:03,850
Yes.

191
00:15:04,310 --> 00:15:08,210
So you could actually just reuse this copy and paste this to save a bit of typing.

192
00:15:08,570 --> 00:15:15,970
If this condition is true, then we would just want to add on to our HTML variable so you can just say

193
00:15:16,310 --> 00:15:21,890
dollar sign html dot equals sign to add on to the end of it.

194
00:15:22,400 --> 00:15:32,480
And we can just say this post has have a space concatenate on word count and then concatenate on another

195
00:15:32,480 --> 00:15:38,570
string, have a space after the word count number and say words and the sentence and then let's have

196
00:15:38,570 --> 00:15:41,360
a B-R tag semicolon.

197
00:15:41,550 --> 00:15:44,390
OK, now let's just do the same thing for character count.

198
00:15:45,020 --> 00:15:48,880
You could actually just use these three lines as a template and copy and paste that.

199
00:15:49,250 --> 00:15:56,930
So this would just be WCP character count and then we would change this.

200
00:15:56,960 --> 00:16:07,850
This post has this would be Kerry Derse and instead of dollar sign word count, we would say Starlee.

201
00:16:07,850 --> 00:16:11,450
And this is a function that will give us the length of a string.

202
00:16:11,810 --> 00:16:13,430
So call it now.

203
00:16:13,430 --> 00:16:19,330
You could give it content, but I'm going to use strip tags and then give that dollar sign content.

204
00:16:19,940 --> 00:16:21,870
Why don't we give this a save and test it out?

205
00:16:22,070 --> 00:16:24,320
So if I refresh cool.

206
00:16:24,860 --> 00:16:28,430
This post has this many words, this many characters.

207
00:16:29,000 --> 00:16:31,810
Finally, let's add the approximate read time.

208
00:16:32,240 --> 00:16:36,170
Now, there are a million different ways that you could calculate this, but I performed a little bit

209
00:16:36,170 --> 00:16:42,260
of Google research and it said that the average adult reads two hundred, approximately two hundred

210
00:16:42,260 --> 00:16:43,830
and twenty five words per minute.

211
00:16:44,420 --> 00:16:49,460
So with that in mind, here's how I would set that up right below this character count option.

212
00:16:49,460 --> 00:16:53,120
I would just say, well, I would actually just use these three lines as a template.

213
00:16:53,120 --> 00:17:01,610
Again, some copying page, duplicate them if get option WCP read time, OK, this entire text would

214
00:17:01,610 --> 00:17:08,690
be instead of this post has I would say this post will take about and then we can change this in just

215
00:17:08,690 --> 00:17:08,990
a minute.

216
00:17:08,990 --> 00:17:13,640
But imagine this was five, the number five and then it would say minutes to read.

217
00:17:13,640 --> 00:17:20,420
So it just changes minutes and you could put the S in parentheses like it's optional minutes to read

218
00:17:20,900 --> 00:17:22,130
for a bit of extra credit.

219
00:17:22,130 --> 00:17:27,470
If you didn't want the parentheses and you wanted to say minute if this was one and then minutes if

220
00:17:27,470 --> 00:17:33,170
it was any other number for a bit of extra credit, just look up p p ternary operator.

221
00:17:33,530 --> 00:17:35,930
But for now, this will do the trick anyways.

222
00:17:35,930 --> 00:17:39,170
Instead of dollar sign word count what we would really want right here.

223
00:17:39,690 --> 00:17:46,650
Is word count divided by two hundred and twenty five, and then we don't want an awkward decimal, so

224
00:17:46,650 --> 00:17:53,090
I would just round this up or down to the nearest whole number so you can just use the round function.

225
00:17:53,100 --> 00:17:56,430
So opening parentheses there, closing parentheses here.

226
00:17:57,120 --> 00:17:58,930
Let's save this and give it a try.

227
00:17:59,490 --> 00:18:06,390
So if we refresh cool, this post will take about two minutes to read and let me go find a shorter post

228
00:18:06,390 --> 00:18:08,680
so we can see if it'll just say just one minute.

229
00:18:08,700 --> 00:18:09,920
Another example post.

230
00:18:09,930 --> 00:18:10,200
Yep.

231
00:18:10,410 --> 00:18:16,200
This is a much shorter post with only two small paragraphs and you see take about one minute to read.

232
00:18:16,620 --> 00:18:16,950
Cool.

233
00:18:16,950 --> 00:18:23,960
Just for one final detail, let's not forget to close out the ending tag for this P or paragraph element.

234
00:18:24,360 --> 00:18:27,240
So just write down here before this.

235
00:18:27,240 --> 00:18:33,330
If logic where we're actually returning something just right here, I would say dollar sign HTML.

236
00:18:33,840 --> 00:18:40,140
Just give it a string of a closing paragraph, tag semicolon, give it a save and we're in business.

237
00:18:40,170 --> 00:18:41,700
So let's test this out.

238
00:18:41,700 --> 00:18:43,710
If you put this back to the beginning of the post.

239
00:18:44,430 --> 00:18:47,340
So beginning of post save reload.

240
00:18:47,850 --> 00:18:48,510
Perfect.

241
00:18:48,840 --> 00:18:50,070
I think this looks pretty good.

242
00:18:50,580 --> 00:18:56,430
One last security detail that I forgot because I was just trusting our admin users.

243
00:18:56,790 --> 00:19:03,240
But even if our admin users are super trustworthy, if our database somehow had malicious data injected

244
00:19:03,240 --> 00:19:08,870
into it, we never want our front end to output dynamic content without escaping it.

245
00:19:09,300 --> 00:19:17,790
So on this heading level three line, just wrap this git option, wrap that inside the escape HTML function

246
00:19:17,790 --> 00:19:18,870
just like this.

247
00:19:19,260 --> 00:19:23,400
And that's going to bring this lesson to a close in our next video.

248
00:19:23,400 --> 00:19:29,970
Before we start working on a new plug in, we're actually going to take a break to learn about translation's

249
00:19:30,210 --> 00:19:31,530
or localization.

250
00:19:31,620 --> 00:19:37,380
In other words, how to make your plugin easy to translate into any language in the world.

251
00:19:37,890 --> 00:19:43,260
Imagine you make a plug in and it becomes very popular and people from around the world would volunteer

252
00:19:43,260 --> 00:19:45,660
to translate it into their language.

253
00:19:45,900 --> 00:19:50,070
So we want to make sure that our WordPress code makes that easy to do.

254
00:19:50,430 --> 00:19:52,020
It should be a lot of fun to set up.

255
00:19:52,020 --> 00:19:55,770
Let's keep things rolling and I will see you in the next lesson.
