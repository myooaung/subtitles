1
00:00:02,220 --> 00:00:03,130
Hello, everyone.

2
00:00:03,480 --> 00:00:10,020
In this lesson, we're going to work on the design or styling of our plugin, so first we'll add our

3
00:00:10,020 --> 00:00:16,950
own custom icon in the sidebar, and then after that, we'll see how to add a bit of our own success

4
00:00:17,220 --> 00:00:19,810
just for this one admin page.

5
00:00:20,340 --> 00:00:24,410
So let's jump into the action and let's start with the custom icon.

6
00:00:24,900 --> 00:00:31,920
So currently down at the bottom, we have our word filter plug in menu and we're just using as a placeholder

7
00:00:31,920 --> 00:00:34,650
the dash icons, smiley icon.

8
00:00:35,340 --> 00:00:41,610
So right now, I want to show you how we can instead use our own custom SVG icon.

9
00:00:42,000 --> 00:00:45,350
If you don't have an icon that you would want to use.

10
00:00:45,630 --> 00:00:52,700
Well, in the downloadable resources for this lesson, you'll find a file named Custom Dot SVG.

11
00:00:53,160 --> 00:00:57,940
And this is the file that I'm going to use in this video so you can follow along with me.

12
00:00:58,400 --> 00:01:05,970
Anyways, let's jump into our text editor and within our hour menu function on this add menu page line.

13
00:01:06,900 --> 00:01:12,950
Remember, towards the very end, the second to last argument was dash icons Smiley.

14
00:01:13,440 --> 00:01:14,730
So let's get rid of this.

15
00:01:14,730 --> 00:01:21,000
But we can keep the quotes because we do want a string of text and there are several different ways

16
00:01:21,000 --> 00:01:22,260
to include an icon.

17
00:01:22,530 --> 00:01:26,430
The first way that I want to show you is, in my opinion, the best way.

18
00:01:26,790 --> 00:01:33,240
Essentially, instead of pointing towards a file, we just actually include the contents of the file

19
00:01:33,600 --> 00:01:36,020
directly in our code right here.

20
00:01:36,750 --> 00:01:37,650
Let me explain.

21
00:01:37,680 --> 00:01:53,580
So within the string, let's type data call an image slash SPG plus XML, semicolon base 64, OK.

22
00:01:53,610 --> 00:01:55,920
And then still in this same string of text.

23
00:01:55,920 --> 00:01:59,450
So still inside the quotes, Atacama.

24
00:01:59,880 --> 00:02:02,260
And now let's talk about what we include here.

25
00:02:02,790 --> 00:02:11,220
So what I want to do is actually open up my SVG file in a text editor so we can see the contents of

26
00:02:11,220 --> 00:02:11,810
the file.

27
00:02:12,330 --> 00:02:16,520
So I'm just going to drag the SVG icon on top of VTS code to open it up.

28
00:02:16,770 --> 00:02:22,780
Now, just select everything in the file, select everything and copy that into your clipboard.

29
00:02:23,310 --> 00:02:26,340
Now we cannot just directly paste that right here.

30
00:02:26,910 --> 00:02:33,570
Instead we need to take that text in our clipboard that is in binary format and we need to change it

31
00:02:33,570 --> 00:02:35,850
or convert it into ASCII format.

32
00:02:36,420 --> 00:02:40,310
Luckily for us, the Google Chrome Web browser can do this for us.

33
00:02:40,620 --> 00:02:46,530
So check this out in Google Chrome, open up your dev tools so you can just click anywhere and choose,

34
00:02:46,530 --> 00:02:56,190
inspect, then make sure you're on the console tab and type this in with me B to a all one word.

35
00:02:56,460 --> 00:02:59,430
And it's a function that we're going to call so parentheses.

36
00:02:59,970 --> 00:03:06,060
And then for the argument that we give it instead of a simple string of text with quotes like double

37
00:03:06,060 --> 00:03:09,900
quotes or single quotes, let's actually give it a template literal.

38
00:03:10,140 --> 00:03:17,370
So to back Tick's this way, JavaScript won't get confused by all of the quotes in the text that we're

39
00:03:17,370 --> 00:03:18,240
going to paste in.

40
00:03:18,240 --> 00:03:24,060
So in between the two back text, just paste in your clipboard, OK, and let's press enter to execute

41
00:03:24,060 --> 00:03:29,130
this function and just take this string of text that it returns.

42
00:03:29,700 --> 00:03:32,190
Just copy this entire thing into your clipboard.

43
00:03:32,340 --> 00:03:36,750
Now you do not want the quotes at the very beginning and the very end.

44
00:03:36,990 --> 00:03:41,550
So I'm just going to start selecting right inside those quotes all the way up right before the final

45
00:03:41,550 --> 00:03:41,940
quote.

46
00:03:42,270 --> 00:03:43,980
So copy that into your clipboard.

47
00:03:43,980 --> 00:03:51,510
And then back in our text editor right after the base64, comma, just paste in your clipboard.

48
00:03:52,530 --> 00:03:55,560
OK, let's give this a save and test it out.

49
00:03:55,590 --> 00:03:59,040
So back in our admin panel, we refresh.

50
00:03:59,790 --> 00:04:00,240
Cool.

51
00:04:00,240 --> 00:04:02,100
There is our custom icon.

52
00:04:02,580 --> 00:04:05,520
Now, when you refresh, you'll see that for a split second.

53
00:04:05,520 --> 00:04:10,980
It might be even too fast to show up in this video recording, but you will see it on your computer.

54
00:04:11,250 --> 00:04:13,110
You'll see that for just a split second.

55
00:04:13,110 --> 00:04:16,530
The icon is yellow before it turns grey.

56
00:04:16,830 --> 00:04:17,970
I did this on purpose.

57
00:04:17,970 --> 00:04:23,910
So in the real world, you would use your editing software to create an icon that matches the WordPress

58
00:04:23,910 --> 00:04:24,450
Grey.

59
00:04:24,780 --> 00:04:28,470
But I wanted to demonstrate what's really going on here with this approach.

60
00:04:28,860 --> 00:04:35,700
So this is why the inline base64 approach that we took is my favorite way to include an icon, because

61
00:04:36,000 --> 00:04:40,260
we are giving WordPress the actual data for the SVG.

62
00:04:40,560 --> 00:04:48,840
So WordPress is able to change the full color on the SPG to match the exact shade of gray that WordPress

63
00:04:48,840 --> 00:04:49,320
uses.

64
00:04:49,530 --> 00:04:54,900
And this also means that WordPress automatically gives us the blue hover color.

65
00:04:55,650 --> 00:05:01,680
So yes, if you inspect the file that we used, if you zoom in really close, you can see that the outline.

66
00:05:01,760 --> 00:05:09,260
The star is usually yellow or gold in the actual SFG, but WordPress can modify it as it sees fit.

67
00:05:09,620 --> 00:05:10,060
Cool.

68
00:05:10,280 --> 00:05:16,060
However, there are times where maybe you do want a little bit of custom color in your icon.

69
00:05:16,490 --> 00:05:21,260
For example, look at the icon for the all in one WP migration.

70
00:05:22,230 --> 00:05:28,020
So if that's the case and you want a bit of custom color without WordPress adjusting your icon, let

71
00:05:28,020 --> 00:05:29,170
me show you what you can do.

72
00:05:29,610 --> 00:05:35,250
So back in our code, I'm just going to comment about this line that we just wrote, and I'll create

73
00:05:35,250 --> 00:05:36,580
a duplicate copy of it.

74
00:05:36,960 --> 00:05:42,030
The reason I'm doing this is because that's the approach that I actually want to use and I'm going to

75
00:05:42,030 --> 00:05:44,430
revert back to it in a minute or two.

76
00:05:44,820 --> 00:05:46,320
But I'm just creating a copy.

77
00:05:46,320 --> 00:05:53,880
And on this copy, I'm going to show you how you can actually load the SVG file instead of having to

78
00:05:53,880 --> 00:05:55,670
include the contents in line.

79
00:05:56,220 --> 00:05:59,970
So all you would do is find the argument that is the icon.

80
00:06:00,330 --> 00:06:01,680
So let me hollow this out.

81
00:06:02,190 --> 00:06:08,580
And then instead of saying Dasch icons Smiley or including our inline base64, you can just provide

82
00:06:08,580 --> 00:06:10,370
a path to your file.

83
00:06:10,950 --> 00:06:17,730
So instead of a string of text here, let's say plug in, underscore DÃ¼rer, underscore Eurail, this

84
00:06:17,730 --> 00:06:23,440
is a WordPress function inside the parentheses if we give it the constant of file.

85
00:06:23,460 --> 00:06:27,320
So that's underscore, underscore, file, underscore, underscore.

86
00:06:27,810 --> 00:06:28,770
This will give us a U.

87
00:06:28,770 --> 00:06:33,090
RL that's pointing towards the directory that the current file is living in.

88
00:06:33,360 --> 00:06:35,280
So from there we would just add on.

89
00:06:35,280 --> 00:06:41,830
So concatenate on now a string of text and let's say custom dot SPG.

90
00:06:42,330 --> 00:06:49,590
Let's go ahead and save this and then let's be sure to move the custom SVG file to live in our plug

91
00:06:49,590 --> 00:06:50,320
in folder.

92
00:06:50,910 --> 00:06:52,390
So here's my plugins folder.

93
00:06:52,390 --> 00:06:58,180
All go into our word filter plug in and I'm just going to move over that as SVG file.

94
00:06:58,890 --> 00:07:00,120
Let's go ahead and refresh.

95
00:07:00,930 --> 00:07:01,310
Cool.

96
00:07:01,320 --> 00:07:04,560
And now you can see that it's using our custom color.

97
00:07:04,950 --> 00:07:09,360
By default, WordPress will have a little bit transparent or see through, but then when you hover over

98
00:07:09,360 --> 00:07:11,030
it, it fully lights up.

99
00:07:11,340 --> 00:07:13,260
So it's up to you how you want to handle this.

100
00:07:13,590 --> 00:07:14,910
There's no right or wrong way.

101
00:07:14,910 --> 00:07:18,390
You are allowed to include a little bit of custom color in your icons.

102
00:07:18,390 --> 00:07:23,400
But personally, I like the fully integrated approach that we saw first.

103
00:07:23,580 --> 00:07:25,340
So that's what I'm going to stick with.

104
00:07:25,860 --> 00:07:31,500
So I'm going to remove that new line we just wrote where we loaded the file and let me uncommented this

105
00:07:31,500 --> 00:07:32,090
approach.

106
00:07:32,730 --> 00:07:33,090
Cool.

107
00:07:35,660 --> 00:07:43,220
One last quick note about the icon before we move on, I made this icon 20 pixels tall by 20 pixels

108
00:07:43,220 --> 00:07:43,730
wide.

109
00:07:44,090 --> 00:07:49,610
Obviously, the entire point of an SVG is that it can scale for any pixel density and screen size.

110
00:07:49,610 --> 00:07:55,540
But I found that 20 by 20 works nicely with the way that WordPress adds in the icon.

111
00:07:55,970 --> 00:07:59,240
Anyways, moving on, let's go ahead and actually visit our page.

112
00:08:00,770 --> 00:08:06,410
And what we want to work on now is the actual custom page right now, it just says Hello World, but

113
00:08:06,590 --> 00:08:10,500
let's begin building out the form that will live on this page.

114
00:08:11,120 --> 00:08:16,760
So back in our code, we're looking for our function called word filter page.

115
00:08:17,570 --> 00:08:23,390
And instead of hello, world, type this out with me, let's have an overall div such as div and then

116
00:08:23,390 --> 00:08:24,180
hit tab.

117
00:08:24,830 --> 00:08:27,400
Actually, I want to give this div a class of wrap.

118
00:08:27,410 --> 00:08:33,200
So a faster way is to just type div dot wrap and then hit tab.

119
00:08:34,490 --> 00:08:40,360
Cool inside this div let's have a heading level one that says word filter.

120
00:08:41,450 --> 00:08:45,280
OK then below that let's have an HTML form element.

121
00:08:46,010 --> 00:08:49,300
We'll talk more about how the form is submitted in our next lesson.

122
00:08:49,310 --> 00:08:54,200
For now though, we don't need the action, but let's just go ahead and be sure to set the method to

123
00:08:54,200 --> 00:08:56,270
equal post.

124
00:08:57,270 --> 00:09:00,330
OK, inside the form, it's dropdown.

125
00:09:01,570 --> 00:09:07,750
So we want the form to have a text field where users can type in a comma separated list of words to

126
00:09:07,750 --> 00:09:12,910
filter out of their content, so let's include a little bit of instructions or a label for the field.

127
00:09:12,920 --> 00:09:18,700
So I'll just say label four will point towards the idea of the actual text field.

128
00:09:18,700 --> 00:09:19,960
So we get to make that up.

129
00:09:20,310 --> 00:09:24,570
Why don't we call it plug in words to filter?

130
00:09:24,580 --> 00:09:27,840
You could choose any name you want inside the label.

131
00:09:27,850 --> 00:09:40,270
Let's have a paragraph and then let's say enter a comma separated list of words to filter from your

132
00:09:40,270 --> 00:09:41,860
site's content.

133
00:09:42,580 --> 00:09:48,490
OK, and just for attention to detail, I'm going to make comma separated bowl, so I'll wrap that in

134
00:09:48,490 --> 00:09:49,570
a strong tag.

135
00:09:52,960 --> 00:09:59,140
Below the label, let's add a div, I'm going to say divorce, and you can make up any class name that

136
00:09:59,140 --> 00:09:59,640
you want.

137
00:10:00,010 --> 00:10:04,270
I'm just making up this class name because I know the success that I'm going to want to write.

138
00:10:04,850 --> 00:10:06,850
I'll say a word filter.

139
00:10:07,060 --> 00:10:13,060
Underscore, underscore Fleck's container tab inside that div.

140
00:10:13,060 --> 00:10:20,350
I want a text area input fields of text area tab for the name and the ID.

141
00:10:20,350 --> 00:10:23,500
I'm just going to give it this plug in words to filter.

142
00:10:24,770 --> 00:10:30,440
We don't need the columns attribute, we don't need the rose attribute, we can go ahead and give it

143
00:10:30,440 --> 00:10:37,280
a placeholder value so the user can see example text as a placeholder equals and let's just say bad

144
00:10:37,280 --> 00:10:40,130
karma, mean karma, awful karma, horrible.

145
00:10:41,270 --> 00:10:44,300
Just so the user sees an example of a comma separated list.

146
00:10:44,700 --> 00:10:48,570
OK, then below the div that is housing the text area.

147
00:10:48,950 --> 00:10:53,580
Let's have a submit button so I'll just type input and then hit tab.

148
00:10:53,630 --> 00:10:55,930
Let's change the type to submit.

149
00:10:56,540 --> 00:10:58,410
Let's give it a name of submit.

150
00:10:58,430 --> 00:11:00,500
Let's give it an idea of submit.

151
00:11:00,920 --> 00:11:09,800
Let's give it a class of button and button dash primary and let's give it a value of save changes.

152
00:11:10,350 --> 00:11:13,130
Let's go ahead and save this and see what we're working with.

153
00:11:13,140 --> 00:11:18,170
So if we refresh, this is a good start, but it's not going to win any design awards.

154
00:11:18,470 --> 00:11:25,730
So let's add a little bit of success to make this text area use the full available width, perhaps be

155
00:11:25,730 --> 00:11:29,660
a bit taller, and then let's also add a bit of bottom margin to it.

156
00:11:29,900 --> 00:11:33,920
So there's a bit more vertical space between the field in the save button.

157
00:11:34,500 --> 00:11:41,270
However, before we can start to write any success, we first need to learn how to load a custom CSS

158
00:11:41,270 --> 00:11:44,630
file just for this one admin page.

159
00:11:44,990 --> 00:11:45,260
Right.

160
00:11:45,260 --> 00:11:51,290
Because there's no need to load our extra access for any other page in the admin that would be wasteful.

161
00:11:51,690 --> 00:11:58,760
So let me show you what we can do within our hour menu function, where we add the parent level page

162
00:11:58,760 --> 00:12:00,350
in the sub menu page.

163
00:12:00,800 --> 00:12:09,860
Within that function, we can add a new line and just say add action and the action hook is load and

164
00:12:09,860 --> 00:12:14,540
then dash and then I'm going to place an X as a temporary placeholder.

165
00:12:14,750 --> 00:12:20,570
But instead of an X, this is where you include the hook name for the specific page you're interested

166
00:12:20,570 --> 00:12:20,770
in.

167
00:12:21,260 --> 00:12:23,320
Let me explain where this is going to come from.

168
00:12:23,330 --> 00:12:31,370
So when we registered our parent page, this function is actually going to return the hook name that

169
00:12:31,370 --> 00:12:33,410
we can use here instead of the X..

170
00:12:33,710 --> 00:12:39,950
So at the start of this line, add menu page, we can just say, well, let's make up a variable name.

171
00:12:39,950 --> 00:12:43,190
So dollar sign and then any name you want, I'll call it.

172
00:12:43,580 --> 00:12:45,860
How about Main Page?

173
00:12:45,860 --> 00:12:53,810
Hook equals whatever this function returns, OK, that instead of X we want to use whatever string of

174
00:12:53,810 --> 00:12:56,150
text now lives in this variable.

175
00:12:56,600 --> 00:13:05,270
So instead of single quotes here around load X, if we use double quotes, well now inside this string

176
00:13:05,270 --> 00:13:06,710
we can do something dynamic.

177
00:13:06,710 --> 00:13:13,910
So get rid of the hardcoded X and instead we can say curly brackets and then inside there we can just

178
00:13:13,910 --> 00:13:14,960
access our variable.

179
00:13:14,960 --> 00:13:17,750
So dollar sign, main page hook.

180
00:13:18,590 --> 00:13:18,950
Cool.

181
00:13:18,950 --> 00:13:24,620
So now we have a hook that is for loading assets just on this one admin page.

182
00:13:24,890 --> 00:13:27,410
So that's the first argument for this add action.

183
00:13:27,410 --> 00:13:29,330
Let's add a comma here.

184
00:13:29,600 --> 00:13:32,540
The second argument is just a method that we want to run.

185
00:13:32,690 --> 00:13:36,710
So let's use the array callable syntax dollar.

186
00:13:36,710 --> 00:13:39,350
Sign this, let's make up a name, let's call it.

187
00:13:40,340 --> 00:13:43,700
How about main page assets?

188
00:13:44,120 --> 00:13:46,220
And then we just create a function with that name.

189
00:13:46,220 --> 00:13:50,060
So function main page assets.

190
00:13:50,840 --> 00:13:56,960
Inside this function we can just use the standard WordPress function of WP on queue.

191
00:13:57,230 --> 00:14:00,470
I always spell that word wrong on queue.

192
00:14:00,800 --> 00:14:04,010
Underscore style semicolon.

193
00:14:04,640 --> 00:14:07,820
We can make up a short name or slug name for the style.

194
00:14:08,510 --> 00:14:12,710
Let's call it filter admin access.

195
00:14:13,070 --> 00:14:17,360
The next argument is just a file path towards our access file.

196
00:14:17,840 --> 00:14:21,500
We haven't created a case file yet, but we will in just a moment.

197
00:14:21,800 --> 00:14:23,480
Let's say plug in.

198
00:14:23,780 --> 00:14:25,340
There you are URL.

199
00:14:25,790 --> 00:14:32,030
We can use the constant of underscore, underscore, file, underscore, underscore and then just concatenate

200
00:14:32,030 --> 00:14:39,770
on and let's just have it be in the main top level plugin folder and we can call it Styles Dot, CSX,

201
00:14:40,250 --> 00:14:41,390
let's save this.

202
00:14:41,390 --> 00:14:48,920
And then in our plug in folder, let's create that new txt file new file styles dot CSC.

203
00:14:49,070 --> 00:14:56,810
Just to make sure that's loading, let's include something super obvious, like asterisk to select everything

204
00:14:57,110 --> 00:15:02,450
and set the color to blue and make it important just so we can really see if the file is loading or

205
00:15:02,450 --> 00:15:02,870
not.

206
00:15:03,890 --> 00:15:06,710
Let's give that a save if we reload on our page.

207
00:15:06,830 --> 00:15:07,400
Cool.

208
00:15:07,430 --> 00:15:13,430
Obviously that's txt file is loading so we can remove that rule now.

209
00:15:14,510 --> 00:15:22,400
And instead let's write a rule that targets this div class we set up called word filter flex container.

210
00:15:22,850 --> 00:15:23,870
So I'll just copy.

211
00:15:23,950 --> 00:15:34,120
His name back in CSA, dot pasted in and all we need to do is say display Fleck's and then a new rule

212
00:15:34,120 --> 00:15:41,710
where we say dot pastie do look inside that element for any text area element and just tell it to be

213
00:15:42,160 --> 00:15:48,670
Fleck's one, which will allow it to use all of the available space and then let's give it a basic height.

214
00:15:48,670 --> 00:15:50,740
So maybe height, 200 pixels.

215
00:15:51,010 --> 00:15:53,690
And then we wanted to give it a bit of margin bottom.

216
00:15:53,710 --> 00:15:56,160
So the save button isn't right up against it.

217
00:15:56,170 --> 00:15:57,430
So you say margin.

218
00:15:57,730 --> 00:16:04,120
Actually a V code tip, you can just type M be short for margin bottom and then hit tab.

219
00:16:04,330 --> 00:16:06,370
Or even better yet, check this out.

220
00:16:06,370 --> 00:16:10,300
You can just type M B 20 hit tab.

221
00:16:10,780 --> 00:16:12,050
It knows what we mean.

222
00:16:12,490 --> 00:16:12,850
Cool.

223
00:16:13,120 --> 00:16:15,520
Let's give this a save if we reload.

224
00:16:16,780 --> 00:16:19,380
I think this looks a lot better now.

225
00:16:19,390 --> 00:16:19,780
Yes.

226
00:16:19,780 --> 00:16:26,770
We did not set up any super custom artistic layout with our success, but this is not a course about

227
00:16:26,770 --> 00:16:27,640
success.

228
00:16:27,640 --> 00:16:29,080
So that's outside our scope.

229
00:16:29,440 --> 00:16:36,700
The point is you can now take whatever skills you have and implement whatever you want.

230
00:16:37,150 --> 00:16:41,050
You can get as creative and custom as you want to write in.

231
00:16:41,050 --> 00:16:45,840
Your success will only be applied for this particular admin page.

232
00:16:46,420 --> 00:16:50,530
Now, that is going to bring this lesson to a close in our very next video.

233
00:16:50,530 --> 00:16:58,180
We're going to actually work on submitting this form and handling the security and the data handling

234
00:16:58,300 --> 00:17:00,130
with our own code.

235
00:17:00,820 --> 00:17:01,990
There should be a lot of fun.

236
00:17:02,200 --> 00:17:04,780
Let's keep things rolling and I'll see you then.
