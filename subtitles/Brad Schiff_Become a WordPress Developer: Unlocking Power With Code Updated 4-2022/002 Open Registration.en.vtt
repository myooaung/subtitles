WEBVTT
1
00:00:01.910 --> 00:00:03.020
Hello, everyone.

2
00:00:03.470 --> 00:00:11.030
In this lesson, we will learn how to set up open registration so that anyone can come to our site and

3
00:00:11.030 --> 00:00:12.560
sign up for a new account.

4
00:00:13.040 --> 00:00:16.610
Now, don't worry, they're not signing up to become administrators.

5
00:00:16.880 --> 00:00:18.910
They will just become subscribers.

6
00:00:19.370 --> 00:00:23.330
And remember that the subscriber role basically cannot do anything.

7
00:00:23.690 --> 00:00:30.020
Now, the reason we're going to do this is because it's the perfect exercise to learn more about WordPress,

8
00:00:30.020 --> 00:00:39.560
permissions, security and most importantly, how to handle creating, updating and deleting user specific

9
00:00:39.560 --> 00:00:40.370
content.

10
00:00:40.700 --> 00:00:47.930
In our case, in future lessons, we will allow these basic subscriber accounts to take notes in class

11
00:00:48.200 --> 00:00:54.260
right from within our website so they'll be able to create, edit and delete their own private notes.

12
00:00:54.680 --> 00:01:01.970
And a bit later on, we will also learn how to let these accounts like or heart or favorite a professor.

13
00:01:02.300 --> 00:01:09.110
And then on each individual professor page, we can show the general public how many hearts or likes

14
00:01:09.110 --> 00:01:10.730
a professor has received.

15
00:01:11.030 --> 00:01:16.400
Now, I know these are not the most amazing features in the world, but trust me, these will give you

16
00:01:16.400 --> 00:01:20.630
the basic building blocks for making your site more interactive.

17
00:01:20.820 --> 00:01:25.250
And then once you've mastered these concepts, you can take the ball and run with it.

18
00:01:25.550 --> 00:01:29.060
OK, but let's not get ahead of ourselves in this lesson.

19
00:01:29.060 --> 00:01:35.630
We just want to focus on allowing open registration and then integrating it with our site layout.

20
00:01:36.350 --> 00:01:36.830
All right.

21
00:01:36.830 --> 00:01:40.400
So the first step is to visit our admin dashboard.

22
00:01:41.270 --> 00:01:44.930
And towards the bottom of the sidebar, let's click on settings.

23
00:01:45.770 --> 00:01:51.250
And from this general setting screen, about the sixth option down is membership.

24
00:01:51.740 --> 00:01:53.240
So we see this checkbox.

25
00:01:53.240 --> 00:01:54.820
Anyone can register.

26
00:01:54.830 --> 00:01:57.380
So let's just go ahead and check that check box.

27
00:01:57.770 --> 00:02:02.030
And then the very next field reads new user default roll.

28
00:02:02.330 --> 00:02:08.900
And we definitely want to set this to subscriber because remember, that's the role that basically cannot

29
00:02:08.900 --> 00:02:10.130
do anything.

30
00:02:10.370 --> 00:02:16.220
And if we are going to allow random strangers to come to our website and sign up, we definitely don't

31
00:02:16.220 --> 00:02:19.560
want to give them any actual capabilities right away.

32
00:02:19.970 --> 00:02:25.340
In other words, letting someone become a subscriber does not pose a security risk for us.

33
00:02:25.670 --> 00:02:29.000
OK, then let's scroll down to the bottom and click save changes.

34
00:02:30.440 --> 00:02:37.910
And now in a new private or incognito browser window where you are not currently signed into WordPress,

35
00:02:38.240 --> 00:02:41.080
let's go ahead and try to sign up for a new account.

36
00:02:41.420 --> 00:02:49.630
So up in the address bar at the end of the route of your you URL, you can just add on slash WP dash

37
00:02:49.640 --> 00:02:52.730
sign up dot thp.

38
00:02:54.210 --> 00:03:00.750
And we see register for this site and you just choose a username and email, however, you and I know

39
00:03:00.750 --> 00:03:05.150
that we can visit that you IRL, but the general public has no idea.

40
00:03:05.160 --> 00:03:06.330
So let's go back.

41
00:03:07.230 --> 00:03:13.770
And first, why don't we set things up so that this top right orange button that reads sign up, we

42
00:03:13.770 --> 00:03:18.880
should modify this so that it points to that you are real that we just manually typed in.

43
00:03:19.200 --> 00:03:20.450
Let me show you what I mean.

44
00:03:20.460 --> 00:03:27.510
So open up your text editor and within your theme folder, let's jump in to header dot p.

45
00:03:28.320 --> 00:03:34.110
And if we scroll down towards the bottom here, we see that link or button that reads sign up.

46
00:03:34.920 --> 00:03:41.130
So let's just update its draft value to actually point towards the WordPress sign up page.

47
00:03:41.640 --> 00:03:48.240
So instead of the placeholder hash tag, let's open up P and echo out site.

48
00:03:48.240 --> 00:03:57.210
You are URL and within the parentheses, let's say slash WP, sign up dot p p.

49
00:03:57.780 --> 00:04:01.860
And just to be extra secure, why don't we wrap this within escape.

50
00:04:01.860 --> 00:04:04.110
You are so right before site.

51
00:04:04.110 --> 00:04:11.510
You URLs escape, you are open parentheses and then close out the parentheses sandwich right here.

52
00:04:11.520 --> 00:04:13.980
So we want a second closing parentheses.

53
00:04:14.420 --> 00:04:16.320
OK, let's go ahead and save that.

54
00:04:16.590 --> 00:04:21.600
And then back in our private chrome window I refresh and now click on the top.

55
00:04:21.600 --> 00:04:22.500
Right, sign up.

56
00:04:23.010 --> 00:04:23.700
Perfect.

57
00:04:24.000 --> 00:04:28.630
Now let's pretend that we are just a random stranger visitor and try to create a new account.

58
00:04:29.040 --> 00:04:34.800
Personally, I don't have an infinite number of alternate email addresses to use here, and I don't

59
00:04:34.800 --> 00:04:36.900
want to use fake bogus emails.

60
00:04:36.900 --> 00:04:43.230
So I'm actually going to go back in to the browser where I'm the main admin and I'm going to delete

61
00:04:43.230 --> 00:04:49.980
my coworker Kitty Doe account from our previous lessons just so that I can reuse that email address

62
00:04:49.980 --> 00:04:52.320
now that I'm trying to pretend that I'm a stranger.

63
00:04:52.680 --> 00:04:57.630
If you have three or four different email addresses that you own, then you do not need to do this.

64
00:04:58.020 --> 00:05:06.150
But back in this window or I'm the admin, lets hover over users, click all users and here's that kiddo

65
00:05:06.150 --> 00:05:07.290
coworker account.

66
00:05:07.680 --> 00:05:14.100
So I'm just going to click delete and then WordPress asks me, what do you want to do with the content

67
00:05:14.100 --> 00:05:15.510
that that user created.

68
00:05:15.840 --> 00:05:20.970
You can either delete all of their posts and pages or you can attribute it to another user.

69
00:05:20.970 --> 00:05:24.720
So I'm just going to choose that and assign it to my main admin account.

70
00:05:25.110 --> 00:05:26.670
Go ahead and delete that user.

71
00:05:27.040 --> 00:05:32.850
OK, so now back in this window, when I'm pretending I'm a random stranger now, I can use that alternate

72
00:05:32.850 --> 00:05:34.110
email address of mine.

73
00:05:34.470 --> 00:05:36.330
So let's pretend we're a random visitor.

74
00:05:36.330 --> 00:05:37.950
Pick whatever username you want.

75
00:05:38.070 --> 00:05:39.810
I'm going to choose Kitty Doe again.

76
00:05:40.650 --> 00:05:41.010
All right.

77
00:05:41.010 --> 00:05:42.060
Let's try to register.

78
00:05:42.960 --> 00:05:43.320
Cool.

79
00:05:43.320 --> 00:05:45.960
So we see a message registration complete.

80
00:05:45.960 --> 00:05:50.100
Check your email so WordPress will email you your password.

81
00:05:50.340 --> 00:05:56.790
However, a lot of local WordPress dev environments do not support email right out of the box.

82
00:05:57.120 --> 00:05:58.260
It's hit or miss.

83
00:05:58.260 --> 00:06:05.190
Throughout the years when I've used man, for example, or Wamp or Vagrant, sometimes local dev email

84
00:06:05.190 --> 00:06:07.110
works and sometimes it doesn't.

85
00:06:07.290 --> 00:06:12.570
It really just depends on a combination of your local network settings, your security firewall.

86
00:06:12.870 --> 00:06:18.780
So if your local WordPress email servers work, then you can just go retrieve the email that it generated

87
00:06:18.780 --> 00:06:21.510
for you and find your password that way.

88
00:06:21.510 --> 00:06:27.660
But if your local dev email does not work, I'll show you a way around this so we can log in as our

89
00:06:27.660 --> 00:06:29.490
stranger random account.

90
00:06:29.910 --> 00:06:34.470
So back in the window where you are the main admin, just visit the users.

91
00:06:34.470 --> 00:06:39.840
All users screen again and click on the new stranger account that you just generated.

92
00:06:41.130 --> 00:06:47.250
And if we scroll down to the very bottom, we see this area named New Password so you can click this

93
00:06:47.250 --> 00:06:52.350
generate button and then feel free to type in a password that you can remember.

94
00:06:52.590 --> 00:06:54.630
And when you're done, click update user.

95
00:06:55.270 --> 00:07:00.870
OK, once you've done that, now back in the window where we are a stranger, we should be able to finally

96
00:07:00.870 --> 00:07:01.590
log in.

97
00:07:01.920 --> 00:07:03.510
So enter your credentials.

98
00:07:07.210 --> 00:07:13.330
And we get logged into the dashboard, but we don't actually have permission to do anything, so all

99
00:07:13.330 --> 00:07:20.230
we can do is see a list of the most recent blog posts or we can click profile to change our own first

100
00:07:20.230 --> 00:07:22.600
name, last name, so on and so forth.

101
00:07:22.990 --> 00:07:28.540
However, even though a subscriber can't do anything within the dashboard, I still don't want them

102
00:07:28.540 --> 00:07:31.300
to even be able to see the admin dashboard.

103
00:07:31.570 --> 00:07:36.820
So in just a few minutes, we can update things so that when a subscriber logs in, they get redirected

104
00:07:36.820 --> 00:07:39.080
to the front end homepage instead.

105
00:07:39.550 --> 00:07:43.060
But first, let's focus on something that's even a bit more important.

106
00:07:43.460 --> 00:07:49.260
So as a subscriber, if we visit the front end of the website, now that we're logged in, these top

107
00:07:49.260 --> 00:07:51.850
bright orange buttons don't make any sense.

108
00:07:52.240 --> 00:07:58.930
So right now, why don't we update our headers so that it uses a bit of conditional logic.

109
00:07:59.110 --> 00:08:03.310
If you are not currently signed in, then we can display these buttons.

110
00:08:03.940 --> 00:08:08.340
But if you're signed in, then let's display a button that says log out.

111
00:08:08.830 --> 00:08:13.260
And on that button, we can also show the user's tiny little Avatar photo.

112
00:08:13.600 --> 00:08:20.200
And once we've successfully set that up, then we can go ahead and completely hide the top ad Minbar

113
00:08:20.560 --> 00:08:22.390
for subscriber users.

114
00:08:22.750 --> 00:08:29.530
So that way our website doesn't feel like a generic WordPress site, but feels really custom and unique.

115
00:08:29.980 --> 00:08:36.070
So anyways, let's go into our header file and make these buttons conditional so that someone can log

116
00:08:36.070 --> 00:08:36.430
out.

117
00:08:36.790 --> 00:08:41.800
So back in header http down towards the bottom, we've got these links right.

118
00:08:41.830 --> 00:08:44.620
This is the log in and this is the sign up button.

119
00:08:44.980 --> 00:08:52.710
So right before or above those links, let's create a block and let's create an if statement.

120
00:08:53.110 --> 00:09:01.690
So if parentheses, curly brackets and for the condition that we want to check, let's say, is user

121
00:09:02.290 --> 00:09:05.560
logged in and that's a function.

122
00:09:05.560 --> 00:09:10.360
So it gets its own parentheses and it will either return true or false.

123
00:09:10.720 --> 00:09:14.970
So if it's true, then we just want to display a log out button here.

124
00:09:15.460 --> 00:09:19.630
But if it's false, then else we want to do something else.

125
00:09:20.050 --> 00:09:24.800
If it's false, we can just display the usual log in and sign up buttons.

126
00:09:25.240 --> 00:09:29.820
So first, let's just cut and paste these two links, log in and sign up.

127
00:09:29.830 --> 00:09:33.530
Let's cut both of those to live within the else statement.

128
00:09:34.450 --> 00:09:39.040
Now, I just accidentally pasted HTML into a block.

129
00:09:39.190 --> 00:09:46.750
So to make this work right after the opening curly bracket for else we can just exit PHP and then right

130
00:09:46.750 --> 00:09:51.570
before the closing curly bracket, we can just jump back into BHP.

131
00:09:52.210 --> 00:09:54.010
OK, so that takes care of the else.

132
00:09:54.010 --> 00:10:01.390
But if someone is indeed logged in, let's just show them a log out button in order to save a bit of

133
00:10:01.390 --> 00:10:01.960
typing.

134
00:10:01.960 --> 00:10:05.620
I'm just going to recycle and copy and paste the sign up link.

135
00:10:06.610 --> 00:10:11.000
So copy that and then within the if statement pasted in.

136
00:10:11.320 --> 00:10:14.470
Now again, this is HTML within a block.

137
00:10:14.470 --> 00:10:21.640
So right after the opening curly bracket close up and right before this closing curly bracket jump back

138
00:10:21.640 --> 00:10:22.930
into P.

139
00:10:23.320 --> 00:10:23.800
All right.

140
00:10:23.800 --> 00:10:31.660
Now for the text that users actually click on, let's change it from sign up to log out and then for

141
00:10:31.660 --> 00:10:37.750
the value of where users will be taken if they click on it, lets leave the echo.

142
00:10:37.750 --> 00:10:39.520
But let's delete this.

143
00:10:40.600 --> 00:10:47.800
So we've still got a P block and let's just say Echo and WordPress has a special function named WP.

144
00:10:48.580 --> 00:10:50.850
Log out you R-AL.

145
00:10:51.460 --> 00:10:57.100
OK, now if we save that and jump back to the window where we are a subscriber, perfect.

146
00:10:57.100 --> 00:10:59.190
Now we just see a log out button.

147
00:10:59.740 --> 00:11:05.860
Now before I click this to test it out, I think it would be cool if on the side of this button we had

148
00:11:05.860 --> 00:11:09.430
the gravitas or little tiny avatar for this user.

149
00:11:09.940 --> 00:11:14.490
So that way they recognise the logout action is tied to them specifically.

150
00:11:14.800 --> 00:11:16.120
Let me show you how to do that.

151
00:11:16.120 --> 00:11:21.160
So back in the ED on the log out button, let's give it an additional class.

152
00:11:21.370 --> 00:11:29.440
So after all of these classes that it already has, let's also say button, dash, dash width photo.

153
00:11:29.890 --> 00:11:35.200
And this is just for sixths styling reasons, which is specific to our website.

154
00:11:35.230 --> 00:11:37.330
It doesn't have anything to do with WordPress yet.

155
00:11:37.570 --> 00:11:43.210
OK, and then within the actual element, right before the words log out, I'm going to drop down to

156
00:11:43.210 --> 00:11:45.520
a new line so we can stay organized.

157
00:11:46.030 --> 00:11:52.210
And just for a couple of seconds we can delete log out and it is placed, let's add, to empty spane

158
00:11:52.210 --> 00:11:52.900
elements.

159
00:11:53.530 --> 00:12:01.180
So span span within the second span we can say log out and within the first span, let's output the

160
00:12:01.180 --> 00:12:03.910
user's avatar or profile image.

161
00:12:04.180 --> 00:12:06.270
So within this span, let's drop in.

162
00:12:06.620 --> 00:12:15.920
BHP and echo out a WordPress function named Git Avatar, and this function takes two arguments.

163
00:12:16.230 --> 00:12:20.690
The first is the user ID or email address that you want to look up.

164
00:12:21.390 --> 00:12:25.150
And the second argument is the size of the image that you want.

165
00:12:25.230 --> 00:12:30.670
So do you want a tiny 15 pixel image or do you want a larger 100 pixel image?

166
00:12:30.990 --> 00:12:33.210
So first is the user that we're interested in.

167
00:12:33.210 --> 00:12:39.330
So we can just say get current user I.D., which is a function.

168
00:12:39.630 --> 00:12:44.070
OK, and then for the second argument, comma, we just say how large of an image we want.

169
00:12:44.430 --> 00:12:47.580
So let's say 60 as in 60 pixels.

170
00:12:47.910 --> 00:12:54.840
OK, and then finally, in order to get the CFS layout just right, let's give these two new spans classes.

171
00:12:55.260 --> 00:13:05.460
So for this first Avatar span, let's give it a class of site header, underscore, underscore, avatar

172
00:13:05.820 --> 00:13:13.680
and let's give the logout span a class of button or btn underscore underscore text.

173
00:13:14.190 --> 00:13:17.430
OK, now if we save that and jump back to the front end.

174
00:13:17.730 --> 00:13:18.270
Perfect.

175
00:13:18.300 --> 00:13:19.890
Let me zoom in a little bit for you.

176
00:13:20.460 --> 00:13:23.780
That adds the user's gravitas to their log out button.

177
00:13:24.240 --> 00:13:29.100
If you've never heard of Gravitron, it stands for globally recognized Avatar.

178
00:13:29.430 --> 00:13:31.320
It's tied to your email address.

179
00:13:31.320 --> 00:13:35.970
And if you want to set one up for yourself, just Google for Gravity Dotcom.

180
00:13:36.360 --> 00:13:38.250
And it's very intuitive to set up.

181
00:13:38.640 --> 00:13:44.250
The cool part is that it follows you around the entire Internet anywhere that you use that specific

182
00:13:44.250 --> 00:13:45.300
email address.

183
00:13:45.660 --> 00:13:48.830
OK, now let's go ahead and actually test this button out.

184
00:13:49.080 --> 00:13:52.760
So if I click it cool, it successfully logs me out.

185
00:13:53.310 --> 00:13:59.460
Now, the next thing that I want to work on has to do with where subscribers are taken to when they

186
00:13:59.460 --> 00:14:00.190
log in.

187
00:14:00.450 --> 00:14:03.210
So at the moment, if I log back in really quick.

188
00:14:05.410 --> 00:14:12.340
It takes me to the admin dashboard now that might work for some websites, but I want my website to

189
00:14:12.340 --> 00:14:14.380
feel really custom and unique.

190
00:14:14.680 --> 00:14:22.510
So I don't want random strangers subscriber accounts to even be able to see the admin dashboard instead

191
00:14:22.510 --> 00:14:24.100
when a subscriber logs in.

192
00:14:24.310 --> 00:14:28.090
Why don't we just redirect them to our front end, to our home page?

193
00:14:28.570 --> 00:14:30.070
So I'm going to log out again.

194
00:14:31.300 --> 00:14:38.200
And right now, let's go right a bit of code that redirects subscribers out of the admin and onto the

195
00:14:38.200 --> 00:14:39.050
home page.

196
00:14:39.430 --> 00:14:42.520
So over an hour, text editor within our theme folder.

197
00:14:42.520 --> 00:14:46.050
Let's jump into functions dot p p.

198
00:14:46.750 --> 00:14:50.920
We could write this new code anywhere, but I'm going to scroll down to the very bottom.

199
00:14:52.060 --> 00:15:01.360
And just to stay organized, why don't we write a new comment and say redirect subscriber accounts out

200
00:15:01.390 --> 00:15:07.930
of admin and onto home page and to make that actually happen?

201
00:15:08.350 --> 00:15:11.350
The first thing we want to do is add an action.

202
00:15:11.470 --> 00:15:12.480
So add action.

203
00:15:12.790 --> 00:15:18.610
The name of the WordPress event that we want to hook on to is Admin Annet.

204
00:15:19.240 --> 00:15:22.960
And then the second argument is just a function that we're going to make up.

205
00:15:23.590 --> 00:15:30.550
We could call it whatever we want, but I'm going to name it, redirect subs for subscribers, redirect

206
00:15:30.550 --> 00:15:33.410
subs to front end.

207
00:15:33.820 --> 00:15:34.480
All right, then.

208
00:15:34.480 --> 00:15:37.360
Let's go ahead and create a function with that exact name.

209
00:15:37.360 --> 00:15:42.940
So function redirect subs to front end.

210
00:15:44.170 --> 00:15:47.250
OK, and let's begin by writing an if statement.

211
00:15:47.500 --> 00:15:56.830
So if parentheses curly brackets and let's say only if the current user only has one role and that one

212
00:15:56.830 --> 00:16:03.160
role is subscriber only, if that is the case, then we want to redirect them to the home page, to

213
00:16:03.160 --> 00:16:04.020
the front end.

214
00:16:04.240 --> 00:16:10.450
So in order to find out information about the current user, what we can do is right before the IF statement,

215
00:16:10.900 --> 00:16:14.500
we can create our own new variable, name it whatever we want.

216
00:16:15.110 --> 00:16:23.690
I will say our current user and just set it to equal WP, get current user.

217
00:16:24.010 --> 00:16:27.220
OK, so now we can reference this within our IF statement.

218
00:16:27.220 --> 00:16:38.740
So let's say if our current user and we can look inside this object for an array named roles and this

219
00:16:38.740 --> 00:16:42.360
contains all of the different roles that have been assigned to a user.

220
00:16:42.520 --> 00:16:49.240
So what I want to do here is I want to say if the current user only has one item in their roles array.

221
00:16:49.540 --> 00:16:57.160
So if I want to see how many items are in an array, you can just wrap the array in the count tool.

222
00:16:57.160 --> 00:17:01.420
So count open up parentheses, closed parentheses.

223
00:17:01.700 --> 00:17:08.500
OK, so if the part that I'm highlighting right now equals one, that means the current user only has

224
00:17:08.500 --> 00:17:16.000
a single roll and then let's say and if that single role is subscriber, well then that's the condition

225
00:17:16.000 --> 00:17:19.530
we're checking for and we can redirect them to the home page.

226
00:17:19.840 --> 00:17:28.350
So for the second condition will say and our current user look inside the object for the roles array,

227
00:17:28.600 --> 00:17:35.740
then let's look for the first item in the array and see if it equals the word subscriber.

228
00:17:36.280 --> 00:17:42.100
OK, so if this condition evaluates to true, then within these curly brackets there is a WordPress

229
00:17:42.100 --> 00:17:44.500
function we can use to redirect someone.

230
00:17:44.950 --> 00:17:51.260
So it's WP redirect and you just provide where you want to send them to.

231
00:17:51.310 --> 00:17:56.880
So let's say site you URL and just send them to the home page or slash.

232
00:17:57.250 --> 00:18:03.490
OK, but then finally after this line, still within the curly brackets, let's also say exit in this

233
00:18:03.490 --> 00:18:09.250
basically tells me that it can stop spinning its gears once it redirects someone.

234
00:18:09.610 --> 00:18:15.070
OK, so let's give this a save and then let's try to log in again as our subscriber account.

235
00:18:17.560 --> 00:18:23.680
Perfect takes me to the homepage instead of the admin dashboard, and now even if I try to go up into

236
00:18:23.680 --> 00:18:30.580
the address bar and manually type in WP admin, that also redirects me to the home page.

237
00:18:30.730 --> 00:18:37.020
Now, the next thing I want to work on is hiding this top admin bar for subscribers.

238
00:18:37.420 --> 00:18:43.300
So to do that back in our code in order to save a lot of typing, let's just actually copy and paste

239
00:18:43.300 --> 00:18:47.490
and duplicate the action that we just added as well as its function.

240
00:18:48.100 --> 00:18:51.940
So copy that to your clipboard, paste it in and duplicate it.

241
00:18:52.360 --> 00:18:59.200
And within our new copy, the WordPress event that we want to hook on to is WP Loaded.

242
00:18:59.590 --> 00:19:08.050
And let's provide a new unique function name, let's say no subs, admin bar and then use this name

243
00:19:08.050 --> 00:19:10.810
for the actual function definition down here.

244
00:19:11.270 --> 00:19:14.380
OK, and we can use the exact same condition.

245
00:19:14.380 --> 00:19:22.300
Check only this time, if it's true, let's delete the WP, redirect and exit and instead just say show

246
00:19:22.780 --> 00:19:27.990
admin bar and within the parentheses say false.

247
00:19:28.480 --> 00:19:28.840
Cool.

248
00:19:28.840 --> 00:19:30.010
So let's save that.

249
00:19:30.820 --> 00:19:32.170
Refresh the front end.

250
00:19:32.380 --> 00:19:32.950
Perfect.

251
00:19:32.950 --> 00:19:36.940
The admin bar is gone, but only for subscriber accounts.

252
00:19:36.940 --> 00:19:42.820
So if I go back to my main window and visit the front end, since I'm logged in as an admin, I've still

253
00:19:42.820 --> 00:19:44.020
got the admin bar.

254
00:19:44.500 --> 00:19:44.890
Cool.

255
00:19:45.070 --> 00:19:47.260
That's going to bring this lesson to a close.

256
00:19:47.530 --> 00:19:54.910
In our next lesson, we will learn how to customize the WordPress login screen so that it's not branded

257
00:19:54.910 --> 00:19:56.880
with the big WordPress logo.

258
00:19:57.100 --> 00:19:59.440
Let's keep things rolling and I will see you then.
