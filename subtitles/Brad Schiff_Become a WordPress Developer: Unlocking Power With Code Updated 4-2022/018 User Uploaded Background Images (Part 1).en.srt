1
00:00:02,520 --> 00:00:03,390
Hello, everyone.

2
00:00:03,810 --> 00:00:09,960
In this lesson, we're going to actually start working on the background image choosing functionality

3
00:00:10,170 --> 00:00:11,400
for our banner block.

4
00:00:11,910 --> 00:00:13,230
Let's jump into the action.

5
00:00:13,620 --> 00:00:18,000
So right away the question becomes from the template editor screen.

6
00:00:18,330 --> 00:00:20,880
If you have the overall banner block selected.

7
00:00:20,880 --> 00:00:27,390
So if I click right about here, well then over in this right hand menu for that block, maybe right

8
00:00:27,390 --> 00:00:32,220
about here, we would want a button that lets you choose the background image.

9
00:00:32,730 --> 00:00:34,110
So how do we set that up?

10
00:00:34,320 --> 00:00:38,640
Well, let's begin by importing all of the ingredients that will need.

11
00:00:39,000 --> 00:00:43,080
So in our text editor in the our blocks folder, jump into banner.

12
00:00:43,080 --> 00:00:44,040
Gorgeous.

13
00:00:44,790 --> 00:00:47,310
And let's pull in all of the ingredients we'll need.

14
00:00:47,310 --> 00:00:53,190
So up at the top here on this line where we're importing from block editor, let's add a comma here

15
00:00:53,190 --> 00:00:59,040
and also import something called inspector controls comma.

16
00:00:59,040 --> 00:01:03,210
We also want media upload comma.

17
00:01:03,210 --> 00:01:07,740
We also want media upload check.

18
00:01:08,850 --> 00:01:14,910
Okay then we need to import on an entirely new line because we need to pull something in from components.

19
00:01:15,060 --> 00:01:22,440
So import curly brackets from quotes at WordPress slash components.

20
00:01:22,740 --> 00:01:33,240
Now in the curly brackets, what we want to pull in is button comma, panel, body, comma, panel row.

21
00:01:33,750 --> 00:01:38,550
Okay, now let's go actually leverage and use all of these new ingredients.

22
00:01:39,060 --> 00:01:41,880
So we're interested in our edit component.

23
00:01:42,480 --> 00:01:46,590
So within our edit component, we're just looking for the sex that we're returning.

24
00:01:47,100 --> 00:01:50,610
Now, remember in G6, you can only have one top level element.

25
00:01:50,910 --> 00:01:52,110
So here's what I'm going to do.

26
00:01:52,590 --> 00:01:56,130
Cut all of this current G6 into your clipboard.

27
00:01:56,910 --> 00:02:01,200
So the entire wrapper of all of its contents, everything just cut it in its place.

28
00:02:01,200 --> 00:02:02,940
Let's have a react fragment.

29
00:02:03,480 --> 00:02:09,810
Now, in that fragment, sure, we can paste in our clipboard, but then inside the fragment right above

30
00:02:09,810 --> 00:02:13,680
what we just paste it in, let's have an inspector controls component.

31
00:02:13,680 --> 00:02:20,520
So in Spectre controls, we do indeed want the actual closing tag.

32
00:02:20,910 --> 00:02:28,560
Inside of that we want a panel body, panel body on the opening tag.

33
00:02:28,560 --> 00:02:30,090
Let's give it a prop of title.

34
00:02:30,420 --> 00:02:37,620
You could make up anything, but let's call it background and let's set initial open two equals curly

35
00:02:37,620 --> 00:02:40,710
brackets true within the panel body.

36
00:02:40,710 --> 00:02:44,400
Let's have a panel row within that.

37
00:02:44,400 --> 00:02:48,060
Let's have a media upload check.

38
00:02:48,840 --> 00:02:53,460
So this is a component that WordPress makes available to us and it's going to check to make sure that

39
00:02:53,460 --> 00:02:58,080
the current logged in user actually has permissions to upload media.

40
00:02:58,620 --> 00:03:00,330
So it'll take care of that for us.

41
00:03:00,660 --> 00:03:07,950
Nested inside of that, let's have a component finally called media upload and this can be a self-closing

42
00:03:07,950 --> 00:03:09,210
component just like this.

43
00:03:09,210 --> 00:03:12,420
We don't need the actual closing tag now.

44
00:03:12,570 --> 00:03:19,980
We just give media, upload a few props, so let's spell out all of them on select equals curly brackets,

45
00:03:20,340 --> 00:03:25,770
value equals curly brackets and finally render equals curly brackets.

46
00:03:26,430 --> 00:03:29,490
So we'll walk through all three of these, but let's start with render.

47
00:03:30,210 --> 00:03:36,960
So in these curly brackets, we just give it a function that returns a bit of JS X and that JSF will

48
00:03:36,960 --> 00:03:38,190
actually appear here.

49
00:03:38,640 --> 00:03:39,960
So what do we want to live here?

50
00:03:40,140 --> 00:03:43,200
Let's just have a button that says Choose Image.

51
00:03:43,890 --> 00:03:47,160
So here's what we would do in these render curly brackets.

52
00:03:47,160 --> 00:03:48,750
Let's give it an arrow function.

53
00:03:48,750 --> 00:03:53,970
So parentheses, arrow, symbol, curly brackets we can drop down.

54
00:03:54,570 --> 00:03:56,130
Let's just return a bit of JSF.

55
00:03:56,340 --> 00:03:57,750
That's simply a button.

56
00:03:57,750 --> 00:04:00,120
And let's say choose image.

57
00:04:00,570 --> 00:04:03,090
Now when you click on this button, what should happen?

58
00:04:03,090 --> 00:04:06,630
Well, we would say on click equals curly brackets.

59
00:04:06,930 --> 00:04:13,020
And now this is why we're giving render a function, because render is going to give us something that

60
00:04:13,020 --> 00:04:15,090
we can use for on click here.

61
00:04:15,540 --> 00:04:22,410
I'm not sure why, but the media upload block actually gives us an object, so we would need to structure

62
00:04:22,410 --> 00:04:22,590
it.

63
00:04:22,590 --> 00:04:29,670
So in these parentheses it's going to give us an object so curly brackets to structure it and the property

64
00:04:29,670 --> 00:04:32,760
that we're interested in, the only properties called open.

65
00:04:33,660 --> 00:04:37,230
So now in the body of our function here, we can use that.

66
00:04:37,230 --> 00:04:42,090
So when you click on this button, the on click would just be open.

67
00:04:43,080 --> 00:04:49,050
In other words, the WordPress team has already coded this block for us and this will open the standard

68
00:04:49,050 --> 00:04:52,650
traditional WordPress media upload or media choose window.

69
00:04:53,220 --> 00:04:55,260
Okay, so that takes care of the render prop.

70
00:04:55,290 --> 00:04:58,200
Let's work through these other two props for value.

71
00:04:58,410 --> 00:05:00,270
This is just the image ID.

72
00:05:00,570 --> 00:05:01,740
So you know in WordPress every.

73
00:05:01,850 --> 00:05:03,170
Post and page as an ID.

74
00:05:03,560 --> 00:05:06,590
Well, every piece of media also has an ID number.

75
00:05:07,010 --> 00:05:09,010
We'll circle back to this later in the video.

76
00:05:09,020 --> 00:05:12,140
For now, let's just hard code it to the number one.

77
00:05:12,470 --> 00:05:15,080
Don't worry, we will actually make this dynamic.

78
00:05:15,680 --> 00:05:17,300
Let's move on to on select.

79
00:05:17,600 --> 00:05:23,870
So this is a function we give it a function in WordPress will call that function whenever the user actually

80
00:05:23,870 --> 00:05:26,420
selects which image they want to use.

81
00:05:26,930 --> 00:05:32,090
Now, you absolutely could write an arrow function directly in these curly brackets, but to stay organized,

82
00:05:32,090 --> 00:05:33,680
why don't we point towards a function?

83
00:05:34,070 --> 00:05:41,780
So let's make up a name and call it on file select and let's just go create a function with that name.

84
00:05:41,780 --> 00:05:49,160
So right above our return here, we can just say function on file, select parentheses, curly brackets.

85
00:05:49,730 --> 00:05:55,250
And now anytime WordPress is going to call a function for me, here's what I like to do because I'm

86
00:05:55,250 --> 00:05:57,890
not exactly sure what it's going to give back to me.

87
00:05:58,370 --> 00:06:03,410
I just like to log it to the console so I can get my own feel for what WordPress is giving us.

88
00:06:03,980 --> 00:06:09,860
So for the parameter, let's just make up a name of X and then in our function let's just log that to

89
00:06:09,860 --> 00:06:10,490
the console.

90
00:06:10,490 --> 00:06:13,910
So console that log x, we can take a look.

91
00:06:13,910 --> 00:06:18,830
And once we have an idea of what WordPress is giving us based on the image file that the user chose,

92
00:06:19,160 --> 00:06:21,710
then we can make something actually useful happen.

93
00:06:22,400 --> 00:06:24,350
But let's not get too many steps ahead of ourselves.

94
00:06:24,350 --> 00:06:30,350
Let's save this and make sure that you have your NPM run start task up and running because we just saved

95
00:06:30,350 --> 00:06:34,610
a JavaScript file and then back in the browser we can refresh.

96
00:06:36,170 --> 00:06:40,640
So if you click on the empty background area, you've selected the banner block as a whole.

97
00:06:40,670 --> 00:06:41,360
Here we see.

98
00:06:41,510 --> 00:06:42,320
Choose Image.

99
00:06:42,590 --> 00:06:47,810
Now, before I click on that, open up your inspector and open up your console so we can get a feel

100
00:06:47,810 --> 00:06:49,640
for what WordPress is going to give us.

101
00:06:50,180 --> 00:06:53,180
These are all of the default things that WordPress logs to the console.

102
00:06:53,190 --> 00:06:56,660
You can actually click this icon right about here to clear the console.

103
00:06:56,960 --> 00:07:02,570
So now it will be obvious when something new gets logged here, but let's just go back in and actually

104
00:07:02,570 --> 00:07:04,740
try to choose or upload a background image.

105
00:07:04,740 --> 00:07:05,870
So choose image.

106
00:07:06,350 --> 00:07:10,640
You can choose one of your existing images or you can upload a new file.

107
00:07:10,670 --> 00:07:11,360
I'll do that.

108
00:07:12,260 --> 00:07:15,110
I'll choose this image of this dog and me upload that.

109
00:07:15,740 --> 00:07:18,770
Now, here is where the functionality comes full circle.

110
00:07:19,460 --> 00:07:24,860
As soon as you click this select button down here in the bottom right corner, that's what's going to

111
00:07:24,860 --> 00:07:27,950
trigger the on select function call.

112
00:07:28,490 --> 00:07:33,020
So as soon as we actually click that little select blue button, WordPress will call our function for

113
00:07:33,020 --> 00:07:34,580
us so we can check that out.

114
00:07:34,580 --> 00:07:35,750
If I click select.

115
00:07:36,920 --> 00:07:38,420
And then we check our console.

116
00:07:38,780 --> 00:07:41,300
You can see WordPress logged this to the console.

117
00:07:41,510 --> 00:07:46,010
So now let's just take a look at what it's giving us and what we might find useful.

118
00:07:46,730 --> 00:07:50,180
Right away, I want to draw your attention to this ID property.

119
00:07:50,450 --> 00:07:52,820
Personally, that's what I'm interested in.

120
00:07:52,820 --> 00:07:55,370
But let's not get too far ahead of ourselves.

121
00:07:55,790 --> 00:08:01,640
So what we're ultimately trying to get is a huge URL for the image, but not just any URL.

122
00:08:01,820 --> 00:08:08,150
We want one for the cropped or sized version of the image that makes sense for our use case.

123
00:08:08,540 --> 00:08:14,390
In other words, if someone uploaded a 6000 pixel white image, we don't want the original and we don't

124
00:08:14,390 --> 00:08:16,310
want a tiny square thumbnail.

125
00:08:16,430 --> 00:08:19,160
We want a reasonable size for the task at hand, right?

126
00:08:19,280 --> 00:08:23,660
We want a reasonable size for a banner background area like this.

127
00:08:24,200 --> 00:08:29,870
So depending on the website and block that you're building, you might be able to just look in this

128
00:08:29,870 --> 00:08:31,950
property called sizes.

129
00:08:31,970 --> 00:08:38,720
If you expand that, you'll see that there's full, large, medium and thumbnail, right with the URLs

130
00:08:38,720 --> 00:08:39,620
to the JPEG.

131
00:08:40,040 --> 00:08:42,140
That might be what you're looking for.

132
00:08:42,560 --> 00:08:44,810
But personally, I'm not interested in those.

133
00:08:45,140 --> 00:08:51,920
I specifically want our image size that we created back in our theme chapter called Page Banner.

134
00:08:52,220 --> 00:08:59,000
And unfortunately, this data that WordPress is giving us by default, it does not include custom image

135
00:08:59,000 --> 00:08:59,730
sizes.

136
00:09:00,200 --> 00:09:07,430
To refresh your memory, if you jump into our theme folder and open up functions, dot up and then press

137
00:09:07,430 --> 00:09:13,190
control F or command F and search for add underscore image, underscore size.

138
00:09:13,520 --> 00:09:13,760
Right?

139
00:09:13,760 --> 00:09:20,030
We added these custom aspect ratios called Professor Landscape, Professor Portrait, and another one

140
00:09:20,030 --> 00:09:21,380
called Page Banner.

141
00:09:21,740 --> 00:09:25,340
So this is the size, this page banner aspect ratio.

142
00:09:25,700 --> 00:09:28,000
That is the size that I want to use.

143
00:09:28,010 --> 00:09:31,970
That's the URL for the selected image that I really want.

144
00:09:32,570 --> 00:09:38,630
Now again, unfortunately, this data that WordPress provides does not include custom sizes and aspect

145
00:09:38,630 --> 00:09:39,380
ratios.

146
00:09:39,740 --> 00:09:41,420
But here's what we can do.

147
00:09:41,900 --> 00:09:48,860
We can just use the idea of the selected piece of media, and we can use that value, whatever it may

148
00:09:48,890 --> 00:09:51,800
be, to take matters into our own hands.

149
00:09:52,280 --> 00:09:56,720
Now, before we actually go look up the aspect ratio based on this ID value.

150
00:09:56,960 --> 00:09:58,580
Let's take things one step at a time.

151
00:09:58,880 --> 00:10:05,000
First, let's just make sure that we're holding on to this ID value in a block attribute.
