1
00:00:02,340 --> 00:00:03,240
Hello, everyone.

2
00:00:03,600 --> 00:00:07,740
In this lesson, we're going to learn how to create a block theme.

3
00:00:08,040 --> 00:00:14,310
And more importantly, we're going to fully understand what exactly a block theme truly is.

4
00:00:14,820 --> 00:00:20,280
I think hands on experience is way more valuable than listening to technical explanations.

5
00:00:20,550 --> 00:00:22,350
So let's do this right now.

6
00:00:22,350 --> 00:00:24,030
I want you to follow along with me.

7
00:00:24,330 --> 00:00:27,750
Let's just go create a brand new theme folder.

8
00:00:28,230 --> 00:00:33,930
So on your computer, navigate to wherever your local WordPress installation lives.

9
00:00:34,200 --> 00:00:40,290
So basically you're looking for the directory that has folders such as WP content, WP admin.

10
00:00:40,680 --> 00:00:45,360
So we would dig into WP content, dig into the themes folder.

11
00:00:46,680 --> 00:00:50,610
And in this folder, let's just together right now create a brand new folder.

12
00:00:50,820 --> 00:00:55,500
You can name it whatever you want, but just so you and I are on the same page, why don't we name the

13
00:00:55,500 --> 00:01:01,200
new folder, maybe fictional dash block dash theme.

14
00:01:01,620 --> 00:01:04,950
Okay, now go ahead and open this folder up with your text editor.

15
00:01:05,700 --> 00:01:06,030
Okay.

16
00:01:06,030 --> 00:01:10,110
Now, just like a traditional theme, we want to begin by having a certain file named.

17
00:01:10,380 --> 00:01:14,490
So new file style dot C assets, right?

18
00:01:14,490 --> 00:01:15,870
Some things never change.

19
00:01:16,500 --> 00:01:20,700
And even if we don't want to include any access in this file, we just include a comment.

20
00:01:20,700 --> 00:01:22,710
So slash asterisk.

21
00:01:22,710 --> 00:01:26,580
And then we say theme name colon and then just make up a name.

22
00:01:26,580 --> 00:01:32,490
Let's call it fictional university block theme, close out the comment.

23
00:01:32,490 --> 00:01:35,220
So asterisk slash, that's all we need for now.

24
00:01:35,220 --> 00:01:36,420
We can save this file.

25
00:01:36,960 --> 00:01:43,680
And just like with a traditional theme, we need to have another file named index dot p p.

26
00:01:45,420 --> 00:01:49,400
Now, interestingly enough, we don't need to do anything in this file.

27
00:01:49,410 --> 00:01:51,060
We can leave it completely blank.

28
00:01:51,420 --> 00:01:57,210
I believe in the future WordPress is even considering removing this requirement to even have this file

29
00:01:57,210 --> 00:01:57,610
at all.

30
00:01:57,630 --> 00:02:00,540
But as of today, we still need this file.

31
00:02:01,050 --> 00:02:01,380
Okay.

32
00:02:01,800 --> 00:02:06,140
Finally, let's create a folder within our theme folder.

33
00:02:06,150 --> 00:02:09,990
So new folder and it needs to be named templates.

34
00:02:10,230 --> 00:02:12,330
So this exact name templates.

35
00:02:13,490 --> 00:02:18,170
In this new subfolder of templates, let's create a new file and name it.

36
00:02:18,650 --> 00:02:21,080
Index source html.

37
00:02:21,800 --> 00:02:25,910
Now, in this HTML file, just for a quick test, just say hello or hey.

38
00:02:26,000 --> 00:02:26,480
Hi.

39
00:02:26,900 --> 00:02:28,280
Just for a proof of concept.

40
00:02:28,700 --> 00:02:29,120
Cool.

41
00:02:29,150 --> 00:02:30,050
So we save that.

42
00:02:30,060 --> 00:02:33,200
Now, back in WordPress, let's go activate this theme.

43
00:02:34,220 --> 00:02:38,000
So in the admin dashboard under appearance.

44
00:02:39,110 --> 00:02:40,610
From the theme selection screen.

45
00:02:40,610 --> 00:02:42,740
There it is, a fictional university block theme.

46
00:02:42,740 --> 00:02:44,030
Just click activate.

47
00:02:44,810 --> 00:02:47,300
And if I refresh the front end, cool.

48
00:02:47,300 --> 00:02:48,950
Now we just see the word hello.

49
00:02:49,730 --> 00:02:55,040
So now that we've created this new empty theme with just the word hello, let's actually talk about

50
00:02:55,040 --> 00:03:04,070
what in the world is supposed to be going on in this HTML file because the file ends in a dot HTML extension,

51
00:03:04,280 --> 00:03:07,340
you might assume that you're allowed to have HTML on the file.

52
00:03:07,340 --> 00:03:10,340
So maybe you want a, for example, a paragraph element.

53
00:03:10,340 --> 00:03:14,590
So P tag and say hello there exclamation.

54
00:03:15,830 --> 00:03:19,040
However, if save this, we just broke the theme.

55
00:03:19,070 --> 00:03:19,850
Let me explain.

56
00:03:20,480 --> 00:03:22,640
Technically, yes, that shows up here.

57
00:03:23,770 --> 00:03:25,840
But it's not a valid block theme.

58
00:03:25,840 --> 00:03:31,630
And the whole point of block beams in full site editing has just been destroyed by us, including top

59
00:03:31,630 --> 00:03:33,040
level HTML like this.

60
00:03:33,280 --> 00:03:34,210
Let me show you what I mean.

61
00:03:34,510 --> 00:03:39,670
If you go into the admin and click on editor under the appearance menu.

62
00:03:39,700 --> 00:03:40,510
So editor.

63
00:03:43,320 --> 00:03:46,470
And you can see we're trying to edit the index template.

64
00:03:46,890 --> 00:03:50,610
Well, this block has encountered an error and cannot be previewed.

65
00:03:51,120 --> 00:03:57,330
So to get back to the question of what in the world is supposed to live in this file, you cannot include

66
00:03:57,330 --> 00:03:59,250
each HTML directly like this.

67
00:03:59,610 --> 00:04:03,990
Instead, everything within this file needs to be a block.

68
00:04:04,770 --> 00:04:10,590
That way, this editing screen can treat it just like a regular WordPress poster page.

69
00:04:10,590 --> 00:04:10,920
Right?

70
00:04:11,130 --> 00:04:14,310
Everything is comprised of different blocks.

71
00:04:14,850 --> 00:04:18,360
So if we wanted to include a paragraph, what would we have to do?

72
00:04:18,660 --> 00:04:25,620
You would have to have an HTML comment like this WP colon paragraph.

73
00:04:26,010 --> 00:04:31,080
Then you could have an HTML opening and closing and say hello there.

74
00:04:31,200 --> 00:04:33,600
This is a paragraph.

75
00:04:33,870 --> 00:04:36,750
And then below that closed the HTML comment.

76
00:04:37,260 --> 00:04:41,580
So now it would be forward slash wp colon paragraph.

77
00:04:41,970 --> 00:04:45,240
So if I give that to save the front end still works.

78
00:04:45,240 --> 00:04:45,750
There it is.

79
00:04:45,750 --> 00:04:48,500
Only now the editing screen will actually work.

80
00:04:48,510 --> 00:04:49,980
So if I refresh this screen.

81
00:04:51,260 --> 00:04:51,800
Perfect.

82
00:04:52,040 --> 00:04:59,030
WordPress and the block editor can actually make sense of what was in our HTML template file so the

83
00:04:59,030 --> 00:05:03,890
block editor can definitely handle us making changes to that existing paragraph.

84
00:05:04,160 --> 00:05:06,230
So maybe we change it to just be hello.

85
00:05:06,560 --> 00:05:13,520
And then if we press enter, this is the exact or at least 99.9%, the same interface you're used to

86
00:05:13,520 --> 00:05:16,070
working with when creating posts and pages.

87
00:05:16,520 --> 00:05:22,430
So maybe I want to add a heading level three so you can type forward slash and choose heading or if

88
00:05:22,430 --> 00:05:26,330
you prefer to use this icon right about here or this icon up here, right.

89
00:05:26,330 --> 00:05:28,580
However you like to use the block editor.

90
00:05:28,580 --> 00:05:32,630
But let me just add a heading level three, so I'll change it to page three.

91
00:05:33,470 --> 00:05:35,960
Welcome to our site.

92
00:05:36,380 --> 00:05:41,060
Now that I've made a change to the template from within the editor instead of my text editor, let's

93
00:05:41,060 --> 00:05:42,530
actually click save.

94
00:05:42,980 --> 00:05:44,960
So and then click Save again.

95
00:05:45,320 --> 00:05:50,210
Now if we look at the front end and refresh, we see those changes reflected right here.

96
00:05:50,480 --> 00:05:56,990
However, it's not as if WordPress just automagically updated our text editor file so you can see indexed

97
00:05:56,990 --> 00:06:00,770
are each HTML did not get updated with the heading level three here.

98
00:06:01,100 --> 00:06:05,750
At this point, I think the easiest way to make sense of what's going on is to actually look at the

99
00:06:05,750 --> 00:06:08,510
database that's powering our WordPress.

100
00:06:08,870 --> 00:06:14,390
So if you're using the local BI flywheel software for your website, you can just click on to database

101
00:06:14,390 --> 00:06:16,820
and then click open up add minor.

102
00:06:17,240 --> 00:06:19,130
So Abner will look something like this.

103
00:06:19,130 --> 00:06:21,800
Now let's just go look in our post table.

104
00:06:21,800 --> 00:06:23,810
So WP underscore posts.

105
00:06:24,050 --> 00:06:26,390
We don't want to look at the structure, we want to look at the actual data.

106
00:06:26,390 --> 00:06:31,940
So select data and then just order them or go to the actual last or final page.

107
00:06:32,150 --> 00:06:34,880
So I'll click on last scroll down to the very bottom.

108
00:06:35,180 --> 00:06:41,240
So this is the most recent post that we created or edited, and if you click on edit just so we can

109
00:06:41,240 --> 00:06:45,620
view the content here, notice the post underscore content field.

110
00:06:45,620 --> 00:06:49,370
So this is where the actual body content for the post entity lives.

111
00:06:49,910 --> 00:06:50,780
Well, there it is.

112
00:06:50,780 --> 00:06:56,540
Let me zoom in a little bit, but there's the paragraph and below it there is the heading level three.

113
00:06:56,810 --> 00:07:01,130
So this is the exact code that would live in your template file.

114
00:07:01,370 --> 00:07:09,380
In other words, WordPress is storing the copy of it here because we as the end user or the client or

115
00:07:09,380 --> 00:07:15,830
the non web developer person that's working with the web site, we made our changes within the web browser.

116
00:07:16,970 --> 00:07:23,510
So WordPress is saving or storing the template that we edited into the database.

117
00:07:23,630 --> 00:07:30,800
But now if we want to export this into our actual true template file, well, you have a couple of options.

118
00:07:31,100 --> 00:07:35,840
Number one, you can just grab this value and just copy and paste it into your clipboard right out of

119
00:07:35,840 --> 00:07:36,590
the database.

120
00:07:37,070 --> 00:07:44,120
Or another option from the editor screen, you can click these three dots, click export right about

121
00:07:44,120 --> 00:07:44,540
here.

122
00:07:44,780 --> 00:07:46,280
That's going to download a zip.

123
00:07:46,610 --> 00:07:51,890
And if you look inside that zip file, you'll see template files with the code that you created from

124
00:07:51,890 --> 00:07:52,460
the editor.

125
00:07:52,760 --> 00:07:58,460
In my case, I'm just going to grab the value right from the database and then I could place that into

126
00:07:58,460 --> 00:08:01,670
my actual true HTML template file here.

127
00:08:01,760 --> 00:08:06,170
So now if I save this, let me show you the whole point of having this in the actual file.

128
00:08:06,170 --> 00:08:13,040
So if we save that and then go back into the editor and let's say we make a mistake, so we add a new

129
00:08:13,040 --> 00:08:15,170
paragraph and it's just nonsense.

130
00:08:15,470 --> 00:08:18,800
And we accidentally deleted all of the other content.

131
00:08:18,800 --> 00:08:23,420
And then we click Save and we refreshed and we realize, Oh no, we don't like this.

132
00:08:23,720 --> 00:08:28,070
We liked the starter version that was from our actual template file.

133
00:08:28,520 --> 00:08:29,780
Well, that's the good news.

134
00:08:29,780 --> 00:08:35,450
This actual file always serves as sort of a safe home base that you can revert back to.

135
00:08:35,810 --> 00:08:41,510
So in the admin screen you can click on the top left icon going to templates.

136
00:08:42,050 --> 00:08:45,020
Now you do sometimes need to manually refresh this screen.

137
00:08:45,020 --> 00:08:46,070
So if I refresh.

138
00:08:47,260 --> 00:08:47,650
Cool.

139
00:08:48,010 --> 00:08:53,800
This blue icon here for the index template indicates that you've made customizations from within your

140
00:08:53,800 --> 00:08:54,490
browser.

141
00:08:55,000 --> 00:09:00,310
But if we click these three icons here, we can revert or clear those customizations, right?

142
00:09:00,330 --> 00:09:07,180
In other words, it's going to use the actual HTML hard drive file so we can click clear customizations.

143
00:09:07,720 --> 00:09:12,310
And now our website is back to just using the exact code from our file.

144
00:09:12,850 --> 00:09:14,710
So you can see that there's some give and take.

145
00:09:14,710 --> 00:09:19,210
There's interaction between the editor and our text editor, right?

146
00:09:19,300 --> 00:09:24,910
We didn't have to manually type out this comment for a WordPress heading level three block.

147
00:09:25,180 --> 00:09:27,760
We used the click and drag point and click.

148
00:09:27,760 --> 00:09:33,430
What you see is what you get editor to create this, but then we just pasted it into our template file.

149
00:09:34,000 --> 00:09:41,380
Now at this point, if you're anything like me, you're probably 101% disgusted at the thought of having

150
00:09:41,380 --> 00:09:43,870
to use this approach for your entire theme.

151
00:09:44,290 --> 00:09:44,530
Right?

152
00:09:44,530 --> 00:09:51,040
You probably don't want to be limited and restricted to only using WordPress core blocks like this and

153
00:09:51,040 --> 00:09:55,840
never getting to actually write your own custom HTML structure.

154
00:09:56,290 --> 00:09:56,590
Right.

155
00:09:56,680 --> 00:09:59,800
What if you don't want to write HTML the way that WordPress does?

156
00:09:59,800 --> 00:10:02,170
What if you want to write your own HTML?

157
00:10:02,620 --> 00:10:03,820
Well, don't worry.

158
00:10:03,820 --> 00:10:06,730
We'll address that concern a bit later in the lesson.

159
00:10:07,030 --> 00:10:08,110
I promise we will.

160
00:10:08,290 --> 00:10:13,480
But for right now, I want to keep showing you how a block theme works at its most basic level.

161
00:10:13,960 --> 00:10:18,310
So in our templates folder we just have the one file indexed on HTML.

162
00:10:18,640 --> 00:10:25,270
Now, just like in a traditional theme that would have indexed AP that serves as sort of the universal

163
00:10:25,270 --> 00:10:26,530
fallback file.

164
00:10:27,070 --> 00:10:34,090
However, if you wanted to control what an individual single blogpost URL looks like, well, in a traditional

165
00:10:34,090 --> 00:10:38,560
theme you would have a file named single dot AP, right?

166
00:10:38,560 --> 00:10:43,780
Or if you wanted to control what a page instead of a post looked like, you'd have a file named page

167
00:10:43,780 --> 00:10:44,020
dot.

168
00:10:44,440 --> 00:10:50,770
AP Well, the good news is, is that from what I've seen, at least 99% of the time that exact same

169
00:10:50,770 --> 00:10:54,520
naming system carries over into block themes.

170
00:10:54,880 --> 00:10:59,410
In other words, you just include those same named files in your templates folder.

171
00:10:59,770 --> 00:11:05,770
So if we wanted to control what an individual blog post screen looks like in our templates folder,

172
00:11:05,770 --> 00:11:13,120
we would just create a file named single, but instead of it's single dot html.

173
00:11:14,370 --> 00:11:22,590
So in this file, imagine we just want to copy over a paragraph and we'll say this is a single blogpost

174
00:11:22,590 --> 00:11:23,760
template screen.

175
00:11:24,420 --> 00:11:26,160
Let's give that a save and test it out.

176
00:11:26,220 --> 00:11:29,490
So if we refresh the homepage, we still see that template.

177
00:11:29,730 --> 00:11:35,580
However, we go into our dashboard and maybe just go find a blog post to get the URL right.

178
00:11:35,580 --> 00:11:40,170
So just on any of your posts, click the view link when you hover over one.

179
00:11:41,830 --> 00:11:42,340
Perfect.

180
00:11:42,880 --> 00:11:45,220
This is the URL for a single post and there we see it.

181
00:11:45,250 --> 00:11:47,800
This is a single blog post template screen.

182
00:11:48,370 --> 00:11:51,880
And now all of your knowledge of a traditional theme carries over, right?

183
00:11:51,880 --> 00:11:55,830
So you would have files in this templates folder called archive.org.

184
00:11:56,080 --> 00:11:58,930
HTML page dot html.

185
00:11:59,530 --> 00:12:01,540
And it also works with custom post types.

186
00:12:01,540 --> 00:12:01,750
Right?

187
00:12:01,750 --> 00:12:05,830
So just like you would have a single dash and then the name of your custom post type.

188
00:12:06,460 --> 00:12:10,420
Well, that exact same naming system works here in the templates folder.

189
00:12:10,900 --> 00:12:13,950
So the good news is a lot of your knowledge gets recycled here.

190
00:12:13,960 --> 00:12:15,970
It's not as if we're starting from scratch.

191
00:12:16,420 --> 00:12:16,740
Okay.

192
00:12:16,750 --> 00:12:22,000
Now, before we go any further, and especially now that we've looked at the single blog post screen,

193
00:12:22,240 --> 00:12:27,850
we really need to ask ourselves, well, what if we don't want just hard coded static template code?

194
00:12:28,150 --> 00:12:34,390
What if we want code or content that's actually dynamic for this specific blog post, right?

195
00:12:34,510 --> 00:12:40,330
How do you actually load the title of this blog post in the body content for this blog post?

196
00:12:40,750 --> 00:12:40,990
Right.

197
00:12:41,140 --> 00:12:44,890
How do you do anything dynamic without PHP?

198
00:12:45,100 --> 00:12:48,430
If we can only use each HTML comments and blocks.

199
00:12:49,300 --> 00:12:53,350
Let's give ourselves a super specific and concrete goal right now.

200
00:12:53,380 --> 00:12:59,350
So let's imagine we want to add the title of the current single blog post your viewing right here.

201
00:12:59,680 --> 00:13:05,830
Now we could spell out the block manually, but I think it's way more intuitive to use the WordPress

202
00:13:05,830 --> 00:13:07,330
full site editor screen.

203
00:13:07,600 --> 00:13:12,430
So back in our dashboard, look under the appearance menu and click on editor.

204
00:13:13,420 --> 00:13:16,270
By default, it's going to take you to your home page template.

205
00:13:16,510 --> 00:13:17,740
We're not interested in that.

206
00:13:17,740 --> 00:13:24,430
So you can click the top left click templates and we want to edit the single blogpost template.

207
00:13:24,440 --> 00:13:25,540
So let's click on that.

208
00:13:25,990 --> 00:13:31,470
We don't actually need this paragraph block so you can get rid of that if you want with it empty.

209
00:13:31,480 --> 00:13:37,210
I just like to type a forward slash because you can begin typing the block type you're interested in.

210
00:13:37,690 --> 00:13:40,480
But I'm interested in something called post title.

211
00:13:40,780 --> 00:13:44,650
So there you can see it available post title, click that.

212
00:13:44,920 --> 00:13:46,540
Maybe right below that.

213
00:13:46,930 --> 00:13:51,370
I want post content, so I'll just click that.

214
00:13:51,640 --> 00:13:56,470
So title content if I save this and then refresh the front end.

215
00:13:56,950 --> 00:14:01,600
Well, as you might have guessed, there is the specific title for this blog and here is the actual

216
00:14:01,600 --> 00:14:02,320
content.

217
00:14:02,770 --> 00:14:08,470
Now that was simple enough because we're viewing the URL from one single individual blog post.

218
00:14:08,470 --> 00:14:15,280
But what if, for example, on our homepage URL, we want it to show the five most recent blog posts

219
00:14:15,280 --> 00:14:17,410
or the ten most recent blog posts?

220
00:14:17,890 --> 00:14:18,900
Well, let's try it out.

221
00:14:18,910 --> 00:14:20,230
So back on this screen.

222
00:14:20,230 --> 00:14:25,240
If we go to our templates list just for a quick test, we can edit our index, you know, sort of our

223
00:14:25,240 --> 00:14:26,350
homepage template.

224
00:14:27,130 --> 00:14:32,530
And imagine we wanted to display the five most recent blog posts right here and we wanted their title,

225
00:14:32,800 --> 00:14:35,050
then their date and then maybe an excerpt.

226
00:14:35,710 --> 00:14:41,350
So we can just add a new block here called query loop to the Query Loop block.

227
00:14:42,400 --> 00:14:48,250
I like to choose this start blank option and maybe just choose title an excerpt.

228
00:14:49,180 --> 00:14:54,430
Now, in order to make sense of what's going on here, I think it's almost mandatory to click this icon

229
00:14:54,430 --> 00:14:55,060
right here.

230
00:14:55,690 --> 00:15:02,200
So that gives you a bird's eye view and it makes nested blocks actually possible to understand and visualize.

231
00:15:02,210 --> 00:15:08,200
So we've got the query loop and then inside the query loop there's nested the post template pagination.

232
00:15:08,590 --> 00:15:09,760
I don't want pagination.

233
00:15:09,760 --> 00:15:12,190
So I'll just click on that and click backspace or delete.

234
00:15:12,790 --> 00:15:15,730
So I've just got my post template that lives inside a query loop.

235
00:15:16,060 --> 00:15:22,060
Anything that lives inside of post template will be duplicated for however many posts we want to display.

236
00:15:22,570 --> 00:15:28,630
So if we wanted to display five, let's click on the overall query loop block and then we can click

237
00:15:28,630 --> 00:15:32,470
on this icon display settings and items per page.

238
00:15:32,680 --> 00:15:34,090
Just bump it up to five.

239
00:15:34,570 --> 00:15:34,910
Okay.

240
00:15:35,200 --> 00:15:40,390
Inside the post template, what if we wanted the date for the blog post to sit in between the title

241
00:15:40,390 --> 00:15:41,140
and the excerpt?

242
00:15:41,560 --> 00:15:47,770
So I just click on the title, click insert after and for the block type right here, I would just say

243
00:15:47,950 --> 00:15:52,060
post date click that we can click save.

244
00:15:52,640 --> 00:15:54,010
We refresh the front end.

245
00:15:54,880 --> 00:15:59,830
Now you might be thinking to yourself, Whoa, are we never going to use ever again?

246
00:16:00,340 --> 00:16:04,600
Does this mean that we can just use block types like this for all of our dynamic needs?

247
00:16:05,140 --> 00:16:07,660
No, the answer is no, no, no.

248
00:16:07,840 --> 00:16:12,010
We're still absolutely going to use up the query loop.

249
00:16:12,010 --> 00:16:14,140
BLOCK is incredibly basic.

250
00:16:14,410 --> 00:16:17,560
You cannot build custom powerful queries with it.

251
00:16:17,860 --> 00:16:24,220
So if you click on the query loop and then click on the settings icon in this right hand sidebar, you

252
00:16:24,220 --> 00:16:29,200
can see if you scroll down, you can choose which post type you're querying for.

253
00:16:29,650 --> 00:16:30,490
So that's pretty cool.

254
00:16:30,490 --> 00:16:33,250
You could choose, you know, whatever custom post type you want.

255
00:16:33,880 --> 00:16:38,170
You can choose if you're ordering by the newest or oldest, but that's really it.

256
00:16:38,170 --> 00:16:40,810
I mean, you can filter by category, but that.

257
00:16:40,840 --> 00:16:41,080
Is it?

258
00:16:41,470 --> 00:16:46,120
So there'd be no way to filter for relationships or meta values.

259
00:16:46,660 --> 00:16:51,370
Or if you think back to our actual fictional university website, remember, for example, this upcoming

260
00:16:51,370 --> 00:16:52,150
events area?

261
00:16:52,690 --> 00:16:59,200
Remember we wrote a custom query that looks at today's date and then only shows events where not the

262
00:16:59,200 --> 00:17:06,160
post date but the event date, which is a meta value where it is greater than today's date write upcoming

263
00:17:06,160 --> 00:17:06,470
events.

264
00:17:06,490 --> 00:17:12,760
So my point is, you would still need to absolutely write your own custom API to perform truly custom

265
00:17:12,760 --> 00:17:13,460
queries.

266
00:17:13,900 --> 00:17:15,400
And there's nothing wrong with that.

267
00:17:15,640 --> 00:17:19,780
It's not like PHP is now against the law in WordPress.

268
00:17:20,080 --> 00:17:26,200
And it's not as if avoiding PHP and using blocks for everything magically makes your site more modern

269
00:17:26,200 --> 00:17:27,070
or faster.

270
00:17:27,460 --> 00:17:34,030
Because even if you do use blocks for everything, WordPress is still 100% going to use PHP.

271
00:17:34,450 --> 00:17:35,650
Let me show you an example.

272
00:17:35,950 --> 00:17:38,470
So let's think about that post title block.

273
00:17:38,890 --> 00:17:45,430
If you dig in to your WordPress installation instead of going into WP content, if you go into WP includes

274
00:17:45,760 --> 00:17:47,350
and then go into the blocks folder.

275
00:17:47,740 --> 00:17:51,490
This has a lot of the core default built in WordPress blocks.

276
00:17:52,210 --> 00:17:56,500
And if you scroll down, you'll see a file named post titled Dot PHP.

277
00:17:56,770 --> 00:18:04,360
If you open that up in your text editor and go down to about line 23, you'll see the good old AP function,

278
00:18:04,690 --> 00:18:09,490
get the title, and then below that it's going to perform its own logic.

279
00:18:09,490 --> 00:18:11,290
Like, Do you want to wrap it in a link?

280
00:18:11,560 --> 00:18:13,720
Do you want it to be a heading level one?

281
00:18:13,720 --> 00:18:14,650
Heading level two?

282
00:18:14,830 --> 00:18:16,930
So it's controlling the HTML.

283
00:18:17,110 --> 00:18:19,660
It's actually calling the B function.

284
00:18:20,140 --> 00:18:22,270
There is no magic going on here.

285
00:18:22,690 --> 00:18:28,090
So remember earlier in the lesson when I promised I'd address how we as web developers can actually

286
00:18:28,090 --> 00:18:30,010
control the HTML of our theme?

287
00:18:30,400 --> 00:18:32,440
Well, you're looking at the answer right here.

288
00:18:32,920 --> 00:18:40,600
We are going to create our own custom block types ourselves instead of only relying on WordPress default

289
00:18:40,600 --> 00:18:41,650
core blocks.

290
00:18:42,220 --> 00:18:50,290
That way we can still write our own custom queries and we can control the HTML output if we want to.

291
00:18:50,740 --> 00:18:55,930
Now you might be thinking to yourself, but Brad, how does the new default 2022 theme?

292
00:18:56,350 --> 00:18:59,110
How does it work with basically zero PHP?

293
00:18:59,500 --> 00:19:01,210
In my answer to that is quite simple.

294
00:19:01,210 --> 00:19:06,550
So you can go ahead and open up the 2022 theme and vs code and look through the templates.

295
00:19:06,760 --> 00:19:12,910
And the reason it's able to get by with basically zero custom PHP is because it's not doing anything

296
00:19:12,910 --> 00:19:13,510
custom.

297
00:19:13,960 --> 00:19:20,080
For example, if you dig into single HTML, it's literally just using WordPress core blocks.

298
00:19:20,620 --> 00:19:27,700
At no point does it have any need for custom queries, custom relationships, custom HTML output.

299
00:19:28,000 --> 00:19:31,180
So yes, if the website you're trying to build fits with that.

300
00:19:31,540 --> 00:19:32,050
Sure.

301
00:19:32,350 --> 00:19:37,150
Maybe this approach is great and you can start to use WordPress as a design tool instead of a content

302
00:19:37,150 --> 00:19:38,020
management system.

303
00:19:38,440 --> 00:19:41,470
But that is not the approach we've ever taken in this course.

304
00:19:42,010 --> 00:19:43,180
So where do we go from here?

305
00:19:43,390 --> 00:19:48,400
Well, in our very next lesson, we're going to continue to discuss this 2022 theme a bit.

306
00:19:48,820 --> 00:19:53,890
And more importantly, we'll actually start to begin real work on our block theme together.

307
00:19:54,220 --> 00:19:58,540
Anyways, let's keep our momentum rolling and I will see you in the next lesson.
