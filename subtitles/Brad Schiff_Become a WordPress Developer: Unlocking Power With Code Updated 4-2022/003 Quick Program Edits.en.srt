1
00:00:01,460 --> 00:00:02,580
Hello, everyone.

2
00:00:02,870 --> 00:00:08,360
In this lesson, we will make a few quick edits to our single program template.

3
00:00:08,780 --> 00:00:10,800
Without further ado, let's dive right in.

4
00:00:11,180 --> 00:00:14,750
Let's begin by visiting an individual program post.

5
00:00:15,060 --> 00:00:18,590
We haven't set up the programs link in the header navigation yet.

6
00:00:18,830 --> 00:00:24,620
So to get to a program post, I'm just going to click on an event that I know has a related program.

7
00:00:24,920 --> 00:00:30,510
So the science of cats related programs and then I can click on biology.

8
00:00:31,190 --> 00:00:35,750
So our goal for this lesson is to improve the styling and formatting that we see here.

9
00:00:36,200 --> 00:00:36,470
Right.

10
00:00:36,470 --> 00:00:39,890
There should probably be a bit of vertical spacing in between this content.

11
00:00:40,160 --> 00:00:45,070
And there should also be a headline that reads upcoming biology events.

12
00:00:45,350 --> 00:00:51,260
So if we want to customize this, we need to jump in to our text editor and within our theme folder,

13
00:00:51,260 --> 00:00:55,420
let's open up the single program file.

14
00:00:56,180 --> 00:01:00,140
And if we scroll down a bit here, we see our custom query that we wrote.

15
00:01:02,280 --> 00:01:07,930
And here we see the while loop that is responsible for outputting each related event.

16
00:01:09,330 --> 00:01:15,600
So right before this while loop and right below the custom query, let's just output a headline.

17
00:01:16,290 --> 00:01:27,570
So let's say echo, maybe a heading level two and let's say up, coming lank events, except we obviously

18
00:01:27,570 --> 00:01:29,810
want the word blank to be dynamic.

19
00:01:30,060 --> 00:01:34,910
So depending on the current Eurail, this would be biology or math or English.

20
00:01:35,340 --> 00:01:41,910
So let's delete the word blank and instead use the get the title function.

21
00:01:42,420 --> 00:01:47,460
Except we can't just run a function in the middle of a string of text that we're trying to echo.

22
00:01:47,790 --> 00:01:55,470
But what we can do is close out the quote right after the word upcoming and then use a period to concatenate

23
00:01:55,470 --> 00:01:57,870
or add on whatever we choose.

24
00:01:58,080 --> 00:02:03,920
And then right after that, we can also concatenate on and then open up a beginning quote.

25
00:02:03,930 --> 00:02:05,670
And then we've still got our closing quote.

26
00:02:06,000 --> 00:02:12,840
And we do want to be sure to include a space right after the word upcoming and then another space right

27
00:02:12,840 --> 00:02:14,670
before the word events.

28
00:02:15,060 --> 00:02:15,330
Right.

29
00:02:15,330 --> 00:02:19,500
Because this function isn't going to add its own spacing around the word on its own.

30
00:02:20,220 --> 00:02:25,300
So let's save that cool upcoming biology events.

31
00:02:25,770 --> 00:02:31,430
Why don't we go ahead and give this each to a few classes just so the CSF design looks a bit better.

32
00:02:31,950 --> 00:02:37,980
So class equals headline and headline dash dash medium.

33
00:02:40,750 --> 00:02:46,900
OK, next, let's add a bit of vertical spacing in between this main content and the headline.

34
00:02:48,990 --> 00:02:57,060
So right above the heading level two line, we can also just echo out an HTML horizontal rule and give

35
00:02:57,060 --> 00:02:59,640
that a class section break.

36
00:03:02,560 --> 00:03:03,190
Perfect.

37
00:03:03,520 --> 00:03:09,760
So this looks good for programs that do indeed have upcoming events associated with them, but what

38
00:03:09,760 --> 00:03:15,910
if we click all programs and pull up a program that doesn't have any associated events?

39
00:03:16,390 --> 00:03:22,870
So if I click on the English program now, we have this horizontal rule and a headline, even though

40
00:03:22,870 --> 00:03:25,740
we don't have any actual relevant content here.

41
00:03:26,560 --> 00:03:29,260
So all we need to do to fix that is wrap.

42
00:03:29,260 --> 00:03:33,520
All of this are to echo lines and the while loop.

43
00:03:33,760 --> 00:03:36,710
We just want to wrap all of that in an IF statement.

44
00:03:37,030 --> 00:03:41,670
So before we write the if statement, why don't we first cut all of this into our clipboard?

45
00:03:42,070 --> 00:03:49,450
So from the beginning of the first echo line down to the end of this wire loop, so right at the end

46
00:03:49,450 --> 00:03:54,720
of this curly bracket down here, let's cut that into our clipboard, OK?

47
00:03:55,330 --> 00:04:02,860
And now right after this custom query code, let's just write if statement, let's say if parentheses,

48
00:04:02,860 --> 00:04:06,910
curly bracket within the parentheses for our condition check.

49
00:04:07,210 --> 00:04:11,830
We want to begin by looking inside the variable name of this custom query.

50
00:04:12,130 --> 00:04:14,830
So in this case, the name is homepage events.

51
00:04:15,880 --> 00:04:22,330
So we'll say if homepage events and then look inside that object.

52
00:04:22,330 --> 00:04:28,450
So Dasch greater than if it has posts or I should say, have posts.

53
00:04:28,780 --> 00:04:30,430
This will evaluate to true.

54
00:04:30,670 --> 00:04:36,970
But if this custom query that looks for related events is empty, well then this will evaluate the false

55
00:04:36,970 --> 00:04:38,410
and our code will not run.

56
00:04:38,950 --> 00:04:44,200
So then within the body of our if statement, within the curly brackets, we can just go ahead and paste

57
00:04:44,200 --> 00:04:45,100
in our clipboard.

58
00:04:46,730 --> 00:04:48,680
Cool, so let's go ahead and save that.

59
00:04:50,720 --> 00:04:56,900
So I'm on this program page with no related events, and we no longer see that code, but if we go back

60
00:04:56,900 --> 00:05:00,350
to the biology program, we are still in business.

61
00:05:01,010 --> 00:05:01,550
All right.

62
00:05:01,550 --> 00:05:02,950
Let's change gears now.

63
00:05:03,140 --> 00:05:08,780
The only other thing I want to take care of in this quick lesson is the program's link up in the main

64
00:05:09,020 --> 00:05:10,280
header navigation.

65
00:05:10,640 --> 00:05:13,730
At the moment, if you click on that, it doesn't do anything.

66
00:05:14,090 --> 00:05:20,930
So to fix that, let's jump in to our theme folder and open up the header file.

67
00:05:22,160 --> 00:05:26,980
Here's the header navigation and here's the list item and link for programs.

68
00:05:27,260 --> 00:05:29,740
Let's begin by filling out the roof value.

69
00:05:29,750 --> 00:05:37,940
So delete the hash tag placeholder and drop into P and let's echo out the results of a function.

70
00:05:38,510 --> 00:05:42,740
Get post type archive link.

71
00:05:43,580 --> 00:05:46,310
And the argument is simply the name of the post type.

72
00:05:46,430 --> 00:05:47,580
So program.

73
00:05:49,040 --> 00:05:50,250
OK, let's test that out.

74
00:05:50,270 --> 00:05:57,160
So if I go back to the home page and then click programs in the header, perfect.

75
00:05:57,350 --> 00:06:04,250
Now let's set things up so that the link stays lit up as a subtle yellow color when we are on this screen

76
00:06:04,250 --> 00:06:06,430
or an individual program post.

77
00:06:06,710 --> 00:06:15,580
So in our code on this opening list item tag, let's just drop in and let's use an if statement.

78
00:06:15,590 --> 00:06:21,860
So if and for the condition check, we can just see what the current post type is.

79
00:06:22,280 --> 00:06:30,290
So if the results of git post type and that's a function, so give it its own parentheses, if that

80
00:06:30,290 --> 00:06:36,190
equals program, well, then we want to add the class that will make the link yellow.

81
00:06:36,560 --> 00:06:42,500
And again, when you're writing an if statement all on one line, you do not need curly brackets after

82
00:06:42,500 --> 00:06:43,500
the parentheses.

83
00:06:43,880 --> 00:06:47,800
So now we can just echo out a bit of HTML.

84
00:06:47,810 --> 00:06:56,800
So single quotes and then we'll say class equals double quotes, current menu item.

85
00:06:57,470 --> 00:06:58,570
Let's give that to save.

86
00:06:59,690 --> 00:07:05,540
OK, we're on the all programs page and we can see up in the header programs is lit up and if I click

87
00:07:05,540 --> 00:07:08,300
on the biology it stays lit up.

88
00:07:08,900 --> 00:07:13,160
OK, and one final tiny edit before we bring this lesson to a close.

89
00:07:13,430 --> 00:07:20,750
If we go back to the home page, this large hero blue button that reads Find your major, let's go ahead

90
00:07:20,750 --> 00:07:23,330
and link that to the all programs page.

91
00:07:23,630 --> 00:07:32,360
So in our theme folder, let's jump in to front dash page B up the top, we see a div with a class of

92
00:07:32,360 --> 00:07:36,920
page banner and towards the end of it we see that link or that button.

93
00:07:37,250 --> 00:07:38,290
Find your major.

94
00:07:38,630 --> 00:07:47,000
So let's just target the graph, get rid of the placeholder, go into P, echo out the results of git

95
00:07:47,540 --> 00:07:54,890
post type archive link and the argument is the post type of program.

96
00:07:55,760 --> 00:07:59,200
Let's give that a save test out this button.

97
00:08:00,620 --> 00:08:01,310
Perfect.

98
00:08:01,850 --> 00:08:04,130
That's going to bring this lesson to a close.

99
00:08:04,430 --> 00:08:10,010
In our next lesson, we will create a brand new post type for professors.

100
00:08:10,280 --> 00:08:16,010
And what's going to make it interesting and fun is that we will learn how to associate an image with

101
00:08:16,010 --> 00:08:17,000
each post.

102
00:08:17,360 --> 00:08:21,890
We will learn about the WordPress native featured image or thumbnail image.

103
00:08:22,130 --> 00:08:28,520
And even beyond that, we will learn how to create our own extra image fields using advanced custom

104
00:08:28,520 --> 00:08:29,180
fields.

105
00:08:29,390 --> 00:08:36,410
We will even learn how to tell WordPress to automatically generate multiple sizes and aspect ratios

106
00:08:36,620 --> 00:08:38,720
of each photo that gets uploaded.

107
00:08:38,960 --> 00:08:44,300
Learning how to be in control of images like this is a huge step in your WordPress journey.

108
00:08:44,690 --> 00:08:46,250
It should be a lot of fun.

109
00:08:46,250 --> 00:08:50,330
Let's keep things rolling and I will see you in the next lesson.
