1
00:00:02,190 --> 00:00:03,240
Hello, everyone.

2
00:00:03,630 --> 00:00:11,160
In this lesson, we will answer the question, what is a function instead of trying to explain with

3
00:00:11,160 --> 00:00:12,870
words what a function is?

4
00:00:13,290 --> 00:00:16,860
Let me show you visually what a function is.

5
00:00:17,190 --> 00:00:24,960
So let's jump into our text editor and open up the index stock, BHP file that lives in our theme folder.

6
00:00:25,470 --> 00:00:27,690
Let's try to write some new code here together.

7
00:00:27,960 --> 00:00:34,410
So delete this sample line of text and then let's drop in or enter into P HP mode.

8
00:00:35,470 --> 00:00:42,280
So remember, from our first taste of pee pee lesson to enter BHP Moad, its less than symbol, questionmark

9
00:00:42,310 --> 00:00:45,190
BHP and then maybe down on this line.

10
00:00:45,220 --> 00:00:47,290
Let's close out of P HP mode.

11
00:00:48,100 --> 00:00:50,410
So a question mark, greater than symbol.

12
00:00:50,710 --> 00:00:52,540
And then in between those two lines.

13
00:00:52,600 --> 00:00:56,920
So where my cursor is now, we are free to write BHP code.

14
00:00:57,310 --> 00:01:01,570
So remember, from a lesson or two ago, we tried echoing out a math problem.

15
00:01:01,600 --> 00:01:01,820
Right.

16
00:01:01,870 --> 00:01:04,270
We could say echo two plus two.

17
00:01:04,750 --> 00:01:09,790
So if I go ahead and save this and then refresh my Web site here we see the answer.

18
00:01:09,800 --> 00:01:09,990
Right.

19
00:01:10,030 --> 00:01:11,380
Two plus two equals four.

20
00:01:11,740 --> 00:01:12,070
OK.

21
00:01:12,130 --> 00:01:15,280
So that should jog our memory of working with P HP.

22
00:01:15,640 --> 00:01:18,700
Now let's have our first look at a function.

23
00:01:19,060 --> 00:01:23,050
So let's delete this line and let's create our very own first function.

24
00:01:23,290 --> 00:01:25,000
We don't even know what a function is yet.

25
00:01:25,030 --> 00:01:26,140
But let's create one.

26
00:01:26,410 --> 00:01:33,550
So right out the word function and then a space and then we can make up a name for our function.

27
00:01:34,090 --> 00:01:37,990
Why don't we call it my first function?

28
00:01:38,500 --> 00:01:38,700
Right.

29
00:01:38,710 --> 00:01:40,120
The name doesn't really matter.

30
00:01:40,150 --> 00:01:41,620
It's up to us to choose a name.

31
00:01:41,890 --> 00:01:44,350
And then right after that, we don't even need a space.

32
00:01:44,410 --> 00:01:46,870
Let's just open up a pair of parentheses.

33
00:01:47,170 --> 00:01:51,730
And then after the opening closed parentheses, let's add a pair of curly brackets.

34
00:01:52,090 --> 00:01:55,300
These are the same curly brackets that you use and CSX.

35
00:01:55,540 --> 00:02:00,070
So you just hold down the shift key and then press the key to the right of your peaky.

36
00:02:00,370 --> 00:02:00,610
OK.

37
00:02:00,670 --> 00:02:06,760
And in between the two curly brackets, I like to drop down to a new line just to stay organized.

38
00:02:07,180 --> 00:02:07,420
OK.

39
00:02:07,480 --> 00:02:11,010
And in between the curly brackets, let's right out our echo.

40
00:02:11,330 --> 00:02:13,150
Two plus two again.

41
00:02:13,510 --> 00:02:18,440
Now, if I save this and refresh the browser, we do not see the number four.

42
00:02:18,490 --> 00:02:19,660
We don't see anything.

43
00:02:19,690 --> 00:02:21,730
It's just a completely blank page.

44
00:02:22,150 --> 00:02:26,500
And that's because this code here that we wrote is a function definition.

45
00:02:26,770 --> 00:02:31,930
So really, all we did here with this code is we took the task of adding two plus two.

46
00:02:32,260 --> 00:02:33,400
And we gave it a name.

47
00:02:33,490 --> 00:02:34,840
My first function.

48
00:02:35,170 --> 00:02:39,760
So a function definition like we have here doesn't actually do anything.

49
00:02:40,060 --> 00:02:46,150
It's just a description of an action or a task in order to actually run this function.

50
00:02:46,450 --> 00:02:46,720
Right.

51
00:02:46,750 --> 00:02:49,150
And actually evaluate two plus two.

52
00:02:49,420 --> 00:02:52,210
What we can do is below this function definition.

53
00:02:52,480 --> 00:02:56,800
So maybe on a new line like right here, we just type out the name of the function.

54
00:02:56,830 --> 00:03:04,180
So my first function and then include parentheses and let's include a semicolon at the end of that line.

55
00:03:04,570 --> 00:03:08,260
And now if we save and refresh, we do see for.

56
00:03:09,260 --> 00:03:11,480
So this is how you define a function.

57
00:03:11,510 --> 00:03:14,480
It's like the recipe for the action that you want to take.

58
00:03:14,870 --> 00:03:19,130
And then this is how you actually run or call or use the function.

59
00:03:19,430 --> 00:03:22,700
Now, what's cool is you can use the function again and again and again.

60
00:03:23,090 --> 00:03:24,650
You can recycle that recipe.

61
00:03:24,740 --> 00:03:27,890
So we could say it again, my first function.

62
00:03:29,150 --> 00:03:29,660
Save it.

63
00:03:30,080 --> 00:03:30,770
Refresh it.

64
00:03:31,310 --> 00:03:32,780
And now we see a second four.

65
00:03:33,020 --> 00:03:37,760
This is a little bit confusing because it looks like 44, but really it's just the number four.

66
00:03:37,780 --> 00:03:39,020
And then there's no spacing.

67
00:03:39,040 --> 00:03:40,250
And then the number four again.

68
00:03:40,670 --> 00:03:46,040
So let's try something a little bit clearer up in our function instead of echo two plus two.

69
00:03:46,400 --> 00:03:47,360
Let's delete that.

70
00:03:47,420 --> 00:03:51,230
And instead, let's say echo out a string of text.

71
00:03:51,470 --> 00:03:56,240
So give me double quotes and then let's create an H team L paragraph tag.

72
00:03:56,270 --> 00:03:56,660
Right.

73
00:03:56,690 --> 00:03:59,280
So the opening and closing tag and in between them.

74
00:03:59,420 --> 00:04:00,990
Let's say hello.

75
00:04:01,520 --> 00:04:04,440
This is my first function.

76
00:04:05,330 --> 00:04:11,240
And let's be sure to add a semicolon at the very end of this line to let P p know that we are done with

77
00:04:11,240 --> 00:04:12,020
this action.

78
00:04:12,320 --> 00:04:12,560
OK.

79
00:04:12,620 --> 00:04:19,880
And now if we save this and refresh, cool, we see it twice because we are calling the function twice

80
00:04:19,880 --> 00:04:20,420
down here.

81
00:04:20,720 --> 00:04:25,610
So you only have to define a function once and then you can use it and reuse it as many times as you

82
00:04:25,610 --> 00:04:25,880
want.

83
00:04:26,420 --> 00:04:29,330
So if I copied this and pasted it again, so there's three of them.

84
00:04:29,930 --> 00:04:31,640
Obviously we see it three times.

85
00:04:32,210 --> 00:04:38,480
OK, so now that we've learned how to create a function and then run or call the function, let's go

86
00:04:38,480 --> 00:04:42,740
ahead and delete all of this and try something a little bit more advanced.

87
00:04:43,070 --> 00:04:45,320
So first, let's give ourselves a goal.

88
00:04:45,590 --> 00:04:48,530
Let's imagine that we want to create these two paragraphs.

89
00:04:48,950 --> 00:04:52,550
Hi, my name is John and my favorite color is Blue and.

90
00:04:52,580 --> 00:04:55,430
Hi, my name is Jane and my favorite color is green.

91
00:04:55,910 --> 00:05:00,980
Now, when I say that we want to create these two paragraphs, I don't mean just type them out like

92
00:05:00,980 --> 00:05:01,790
we see here.

93
00:05:02,270 --> 00:05:06,560
Instead, what I mean is because these two lines are so similar to each other.

94
00:05:06,920 --> 00:05:10,610
And the only unique parts are the names and the colors.

95
00:05:11,000 --> 00:05:16,550
Why don't we try to create a single function that can generate both of these paragraphs?

96
00:05:17,000 --> 00:05:21,950
So let me delete these and try this out with me up here and our P p area.

97
00:05:22,280 --> 00:05:23,960
Let's create a new function.

98
00:05:24,500 --> 00:05:28,190
So to do that, we just spell out the word function and then a space.

99
00:05:28,400 --> 00:05:30,590
And now we make up a name for the function.

100
00:05:31,100 --> 00:05:32,700
Why don't we call it a greet?

101
00:05:33,350 --> 00:05:33,570
OK.

102
00:05:33,680 --> 00:05:36,080
And then right after that, we don't even need a space.

103
00:05:36,170 --> 00:05:38,000
Open up a pair of parentheses.

104
00:05:38,390 --> 00:05:42,140
And then after the parentheses, let's open up a pair of curly brackets.

105
00:05:42,500 --> 00:05:45,170
And then in between the opening and closing curly brackets.

106
00:05:45,200 --> 00:05:47,120
Let's drop down to a new line.

107
00:05:47,480 --> 00:05:50,510
And then let's echo or output a bit of text.

108
00:05:50,900 --> 00:05:54,020
So we want to wrap our text in double quotes.

109
00:05:54,350 --> 00:05:54,510
OK.

110
00:05:54,560 --> 00:05:58,970
So in between those quotes, let's just begin an H t Amelle paragraph tag.

111
00:05:59,520 --> 00:06:00,710
Then let's close it out.

112
00:06:01,370 --> 00:06:06,530
And in between those, we will say hi, my name is Blank.

113
00:06:06,710 --> 00:06:10,190
And my favorite color is blank.

114
00:06:10,730 --> 00:06:14,630
And then at the very end of this line, let's be sure to end it with a semicolon.

115
00:06:15,050 --> 00:06:15,330
OK.

116
00:06:15,380 --> 00:06:18,170
And now right below our function definition here.

117
00:06:18,230 --> 00:06:23,000
So down here, let's just call or run the function once for John.

118
00:06:23,060 --> 00:06:24,080
And once for Jane.

119
00:06:24,740 --> 00:06:28,670
So greet, parentheses, semicolon that will run at once.

120
00:06:28,730 --> 00:06:30,470
And then let's just run it a second time.

121
00:06:31,130 --> 00:06:34,190
So if I save this and refresh in the browser.

122
00:06:34,760 --> 00:06:35,120
Cool.

123
00:06:35,210 --> 00:06:36,770
We see the two paragraphs.

124
00:06:37,070 --> 00:06:43,040
So now all we need to do is find a way to pass information about John from this function.

125
00:06:43,040 --> 00:06:45,200
Call into the function itself.

126
00:06:45,260 --> 00:06:45,530
Right.

127
00:06:45,560 --> 00:06:47,960
Because we don't want it to say blank and blank.

128
00:06:48,320 --> 00:06:49,190
So check this out.

129
00:06:49,490 --> 00:06:55,500
When we call the function for the first time in between the parentheses, let's say, John.

130
00:06:56,060 --> 00:06:57,710
And let's do the same thing for Jane.

131
00:06:57,770 --> 00:07:00,740
So in between these parentheses, let's say Jane.

132
00:07:01,360 --> 00:07:01,570
OK.

133
00:07:01,640 --> 00:07:08,930
Now back up in our function definition within these parentheses, let's add a dollar symbol and let's

134
00:07:08,930 --> 00:07:09,830
say name.

135
00:07:10,190 --> 00:07:15,820
Remember from an earlier lesson that the dollar symbol is how you create a variable mph HP.

136
00:07:16,340 --> 00:07:17,660
This isn't a special word.

137
00:07:17,690 --> 00:07:18,500
I just made it up.

138
00:07:18,530 --> 00:07:21,830
We could have said unicorn or pizza.

139
00:07:22,260 --> 00:07:22,390
OK.

140
00:07:22,520 --> 00:07:23,540
The name doesn't matter.

141
00:07:23,810 --> 00:07:26,620
But for now, let's just call it name because that makes sense, right?

142
00:07:26,660 --> 00:07:28,340
John and Jane are names.

143
00:07:28,730 --> 00:07:34,460
So what this is going to do is it's going to create a variable of sorts that we can use within the meat

144
00:07:34,490 --> 00:07:36,260
and potatoes of this function.

145
00:07:36,620 --> 00:07:40,430
So we can use this dollar symbol, name variable wherever we see fit.

146
00:07:40,700 --> 00:07:43,610
So all we need to do now is just remove this blank.

147
00:07:43,700 --> 00:07:43,940
Right.

148
00:07:43,970 --> 00:07:44,870
We don't want that.

149
00:07:45,300 --> 00:07:47,780
And let's replace it with dollar symbol name.

150
00:07:48,350 --> 00:07:48,650
OK.

151
00:07:48,710 --> 00:07:53,750
Now, before I explain what's going on here and give you the technical names of what we're doing, let's

152
00:07:53,750 --> 00:07:56,090
just go ahead and save this and test it out.

153
00:07:56,630 --> 00:07:58,370
So if I refresh in the browser.

154
00:07:58,700 --> 00:07:59,090
Cool.

155
00:07:59,270 --> 00:08:01,700
Hi, my name is John and my favorite color is blank.

156
00:08:01,790 --> 00:08:03,050
Hi, my name is Jane.

157
00:08:03,080 --> 00:08:04,610
And my favorite color is blank.

158
00:08:04,910 --> 00:08:08,600
So let's review what's going on here and let's build up our vocabulary.

159
00:08:09,000 --> 00:08:14,670
So when we call the function down here twice, there's a little bit of data named John in this little

160
00:08:14,670 --> 00:08:16,290
bit of data named Jane.

161
00:08:16,620 --> 00:08:18,690
Those are called arguments.

162
00:08:19,170 --> 00:08:23,790
And within a single function call like this, you can include multiple arguments.

163
00:08:24,330 --> 00:08:25,030
So check this out.

164
00:08:25,050 --> 00:08:26,700
Right after the John, end quote.

165
00:08:26,760 --> 00:08:29,800
Let's add a comma and say blue.

166
00:08:30,000 --> 00:08:30,260
Right.

167
00:08:30,270 --> 00:08:31,860
Because blue was his favorite color.

168
00:08:32,280 --> 00:08:33,780
Let's do the same thing for Jane.

169
00:08:33,990 --> 00:08:39,750
So after this first argument of her name, let's add a comma and include another argument.

170
00:08:40,440 --> 00:08:41,820
Her favorite color was green.

171
00:08:42,290 --> 00:08:42,500
OK.

172
00:08:42,600 --> 00:08:48,480
So if we are calling a function and giving it to arguments, we better make sure that up in our function

173
00:08:48,480 --> 00:08:52,230
definition, we are ready for two parameters.

174
00:08:52,650 --> 00:08:58,650
Think of a parameter as a hollowed out variable or a little container that can receive the incoming

175
00:08:58,770 --> 00:08:59,670
arguments.

176
00:09:00,030 --> 00:09:03,510
So we already have a parameter to receive the incoming name.

177
00:09:03,870 --> 00:09:09,570
So right after that, let's add a comma and then let's just say dollar sign color.

178
00:09:10,590 --> 00:09:12,790
Again, the parameter name doesn't really matter.

179
00:09:12,810 --> 00:09:13,830
You can make it up.

180
00:09:14,130 --> 00:09:15,660
You can use whatever name you want.

181
00:09:16,020 --> 00:09:16,290
OK.

182
00:09:16,350 --> 00:09:22,110
But what's important is that now we can use dollar symbol color within the body of this function.

183
00:09:22,440 --> 00:09:29,040
So let's go ahead and delete this second blank here and let's replace it with dollar symbol color.

184
00:09:29,610 --> 00:09:31,650
Let's save this and refresh.

185
00:09:32,690 --> 00:09:33,020
Cool.

186
00:09:33,080 --> 00:09:36,650
So we see my favorite color is blue and my favorite color is green.

187
00:09:37,220 --> 00:09:37,490
OK.

188
00:09:37,590 --> 00:09:44,870
So that's how you can create your own function and use parameters to receive the incoming arguments

189
00:09:45,170 --> 00:09:47,270
so that your function can be flexible.

190
00:09:47,780 --> 00:09:48,000
OK.

191
00:09:48,050 --> 00:09:51,020
Now let's change gears and bring this full circle.

192
00:09:51,230 --> 00:09:53,300
Let's tie it back to WordPress.

193
00:09:53,750 --> 00:10:00,920
So the beauty of WordPress is that it comes bundled with tons of its own prebuilt functions that we

194
00:10:00,920 --> 00:10:01,910
can leverage.

195
00:10:02,270 --> 00:10:02,510
Right.

196
00:10:02,540 --> 00:10:06,890
So WordPress has already created and defined lots of functions.

197
00:10:07,310 --> 00:10:11,810
And then we just get to come along and run or call or use those functions.

198
00:10:12,290 --> 00:10:16,280
So, for example, down here, once we are out of P HP mode.

199
00:10:16,310 --> 00:10:16,550
Right.

200
00:10:16,580 --> 00:10:19,130
So this line closes BHP mode.

201
00:10:19,430 --> 00:10:22,340
So down here in regular old H t AML mode.

202
00:10:22,640 --> 00:10:29,450
Let's imagine that we want to create a large H.T. Amelle headline and we want the contents of this headline

203
00:10:29,450 --> 00:10:32,360
to be our Web site's overall name or title.

204
00:10:32,750 --> 00:10:37,160
Well, WordPress has a function that will give us our Web site's name.

205
00:10:37,580 --> 00:10:38,390
So check this out.

206
00:10:38,450 --> 00:10:45,170
In between the H1 tags, let's drop into P, HP mode K and then let's exit BHP mode.

207
00:10:45,350 --> 00:10:45,550
OK.

208
00:10:45,610 --> 00:10:52,880
But in the middle of those two, let's run or call a WordPress function named blog info.

209
00:10:53,270 --> 00:10:53,600
OK.

210
00:10:53,660 --> 00:10:58,370
So this is a function that has already been created and defined by WordPress.

211
00:10:58,700 --> 00:11:03,210
And what this function can do is give us all kinds of information about our Web site.

212
00:11:03,590 --> 00:11:09,860
And within these parentheses, we just provide an argument to tell WordPress what little bit of info

213
00:11:09,860 --> 00:11:11,690
in particular we are looking for.

214
00:11:11,930 --> 00:11:17,540
So single quotes and let's say name, we want the name or title of our Web site.

215
00:11:17,900 --> 00:11:22,910
And let's add a semicolon right after that, just to tell HP that we are done with this task.

216
00:11:23,210 --> 00:11:23,390
OK.

217
00:11:23,450 --> 00:11:28,800
And if we save this and refresh, cool, we see the name of our Web site.

218
00:11:29,120 --> 00:11:35,030
Now, in case you're wondering where this is coming from, let's hop over and a new tab into the admen

219
00:11:35,030 --> 00:11:37,190
dashboard of our WordPress Web site.

220
00:11:37,490 --> 00:11:43,670
And towards the bottom of this Left-Hand Sidebar, hover over settings and then choose General.

221
00:11:44,850 --> 00:11:45,120
OK.

222
00:11:45,190 --> 00:11:48,100
So see this first field named site title?

223
00:11:48,580 --> 00:11:49,900
That's the name of our Web site.

224
00:11:49,930 --> 00:11:57,100
So if we changed this from fictional university to amazing university and then scroll down and click

225
00:11:57,100 --> 00:11:57,730
save.

226
00:11:58,970 --> 00:12:03,680
Now, if we refresh the front end of our Web site, we see that name change reflected.

227
00:12:04,100 --> 00:12:04,490
Cool.

228
00:12:04,640 --> 00:12:06,830
So this function blog info.

229
00:12:07,040 --> 00:12:09,500
We didn't create or define this function.

230
00:12:09,800 --> 00:12:11,690
WordPress creates it for us.

231
00:12:11,780 --> 00:12:13,340
And then we just get to leverage it.

232
00:12:13,730 --> 00:12:19,100
Now, the cool part is that we don't need to understand how WordPress goes and talks to the database

233
00:12:19,370 --> 00:12:22,220
to dynamically find the name of our Web site.

234
00:12:22,430 --> 00:12:28,550
WordPress abstracts away all of those technical database details so we don't have to worry about it.

235
00:12:28,910 --> 00:12:31,700
All we have to do is run this convenient function.

236
00:12:32,000 --> 00:12:32,240
OK.

237
00:12:32,300 --> 00:12:37,880
And that's really the heart and soul of 95 percent of custom WordPress development.

238
00:12:38,180 --> 00:12:43,310
It's just a matter of knowing the WordPress functions that are at our disposal and then running them

239
00:12:43,310 --> 00:12:45,260
in the right place at the right time.

240
00:12:45,680 --> 00:12:48,620
Let's try one more example before we close out this lesson.

241
00:12:48,860 --> 00:12:55,250
So let's imagine that below this headline, we want to include a paragraph that includes our Web site's

242
00:12:55,310 --> 00:12:57,890
slogan or tagline or description.

243
00:12:58,220 --> 00:13:03,020
In case you're wondering what I'm talking about, back in the Admon dashboard on this general setting

244
00:13:03,020 --> 00:13:06,140
screen, we see that the second field is named tag line.

245
00:13:06,470 --> 00:13:11,140
So by default, WordPress sets this to just another WordPress Web site.

246
00:13:11,690 --> 00:13:17,480
But we could change this to the best university in the world.

247
00:13:18,140 --> 00:13:19,790
And then scroll down and save that.

248
00:13:21,280 --> 00:13:27,190
And then back in our code, if we want to dynamically output that tag line in between the paragraph

249
00:13:27,190 --> 00:13:27,550
tag.

250
00:13:27,580 --> 00:13:31,100
Let's just drop and BHP mode and close out.

251
00:13:31,770 --> 00:13:35,680
But in the middle, let's call that blog info function again.

252
00:13:36,160 --> 00:13:40,990
And then we can give it an argument to tell it which piece of information in particular we want it to

253
00:13:40,990 --> 00:13:41,620
return.

254
00:13:42,310 --> 00:13:43,870
And we will say description.

255
00:13:44,500 --> 00:13:49,210
Let's add a semicolon here and then let's save this and refresh.

256
00:13:51,010 --> 00:13:51,310
Cool.

257
00:13:51,340 --> 00:13:52,750
There's our slogan or tagline.

258
00:13:53,170 --> 00:13:57,700
And now, if in the future we ever change the tag line from the word press admin area.

259
00:13:57,970 --> 00:14:00,970
So if I change this to we are pretty good.

260
00:14:01,540 --> 00:14:02,960
And then save it.

261
00:14:04,790 --> 00:14:08,360
Our front end Web site will automatically always display that value.

262
00:14:08,810 --> 00:14:14,480
OK, so now at this point, we are at least a little bit familiar with what a function is.

263
00:14:14,750 --> 00:14:21,920
And now there's only one more topic we need to go over before we can start doing powerful, actually

264
00:14:21,920 --> 00:14:24,560
useful word pressie things.

265
00:14:24,980 --> 00:14:27,400
And that topic is a raise.

266
00:14:27,860 --> 00:14:29,780
So what in the world is an array?

267
00:14:30,110 --> 00:14:33,440
Well, that's exactly what we're going to cover in our next lesson.

268
00:14:33,760 --> 00:14:39,320
I'll give you a hint right now, though, understanding arrays is what's going to let us start displaying

269
00:14:39,410 --> 00:14:45,980
actual dynamic WordPress content on the front end of our Web site, things like posts and pages.

270
00:14:46,250 --> 00:14:47,360
It's gonna be a lot of fun.

271
00:14:47,450 --> 00:14:48,740
Let's keep things rolling.

272
00:14:48,830 --> 00:14:51,590
And I will see you in the next lesson.
