1
00:00:02,090 --> 00:00:03,090
Hello, everyone.

2
00:00:03,440 --> 00:00:11,000
In this lesson, we're going to learn about the settings API in WordPress, let's jump right into the

3
00:00:11,000 --> 00:00:11,530
action.

4
00:00:11,540 --> 00:00:14,750
So currently this is what our settings page looks like.

5
00:00:15,080 --> 00:00:18,620
This area where we would want a form is currently empty.

6
00:00:19,040 --> 00:00:22,490
Now, remember, this is the finished product of what we want it to look like.

7
00:00:23,030 --> 00:00:29,540
And in terms of moving forward here, I think the best way to understand things is to actually look

8
00:00:29,540 --> 00:00:32,380
at the end and then work backwards.

9
00:00:32,870 --> 00:00:40,310
What I mean by that is our real goal here is just to permanently save the user's preferences into the

10
00:00:40,310 --> 00:00:41,080
database.

11
00:00:41,510 --> 00:00:49,620
So let's begin by looking at the WordPress database and seeing where it stores settings and option values.

12
00:00:50,000 --> 00:00:51,410
So how do we look at our database?

13
00:00:51,440 --> 00:00:58,340
Well, if you're using the local WP or local buy a flywheel application, just click on the current

14
00:00:58,340 --> 00:00:59,240
site that you're running.

15
00:00:59,570 --> 00:01:02,540
And then in this area you'll see a database tab.

16
00:01:03,250 --> 00:01:07,790
You can click on that and then just click on this open add mynor button.

17
00:01:09,370 --> 00:01:15,430
Once you click on that, it should open a new tab that looks something like this, and this is the database

18
00:01:15,430 --> 00:01:16,750
for your WordPress website.

19
00:01:17,170 --> 00:01:19,420
Over here we see the different tables.

20
00:01:19,900 --> 00:01:24,280
The one that I want to draw attention to right now, though, is called options.

21
00:01:24,730 --> 00:01:27,090
So let's click onto that options table.

22
00:01:27,730 --> 00:01:33,170
And then instead of just showing the structure for the table, let's click this select data link.

23
00:01:34,090 --> 00:01:34,520
Cool.

24
00:01:34,540 --> 00:01:40,290
So this is where WordPress stores all of your preferences, your settings and options.

25
00:01:40,840 --> 00:01:41,860
It's pretty simple.

26
00:01:41,870 --> 00:01:43,720
This column option name.

27
00:01:43,960 --> 00:01:47,550
You can just look through these and it's self-explanatory, right?

28
00:01:47,560 --> 00:01:50,500
Your site URL, the name of your site, the description.

29
00:01:50,500 --> 00:01:55,420
And if you scroll through this list, you'll see that most of them are a little bit self-explanatory.

30
00:01:55,600 --> 00:01:58,680
And then this column is just the value.

31
00:01:59,230 --> 00:02:06,700
So really, all we're trying to do with our plug in right now is just create a new row in this database

32
00:02:06,700 --> 00:02:07,060
table.

33
00:02:07,060 --> 00:02:07,410
Right.

34
00:02:07,660 --> 00:02:15,010
So instead of site you URL or blog name or blog description, we would want a new row where the option

35
00:02:15,010 --> 00:02:24,100
name is perhaps display location for word count or word count, show word count or word count, show

36
00:02:24,100 --> 00:02:26,830
character count or word count show read time.

37
00:02:27,250 --> 00:02:27,540
Right.

38
00:02:27,550 --> 00:02:29,530
We're just trying to create a new option.

39
00:02:29,680 --> 00:02:34,260
And then in the value column, this option underscore value.

40
00:02:34,690 --> 00:02:39,310
That's where we would just store, for example, whatever the user types in here, their preferences

41
00:02:39,310 --> 00:02:41,030
for each of these fields.

42
00:02:41,800 --> 00:02:44,440
So that is our end goal from here.

43
00:02:44,440 --> 00:02:48,160
We're just going to sort of work backwards and see how we get here.

44
00:02:48,160 --> 00:02:48,460
Right.

45
00:02:48,490 --> 00:02:53,010
How do we end up getting the user's preferences from an HTML form?

46
00:02:53,530 --> 00:02:57,330
How do we get from the form into the actual database?

47
00:02:58,150 --> 00:03:04,690
So let's jump back to our empty example, where we're going to build things together and let's get started.

48
00:03:05,060 --> 00:03:11,470
Let's jump back into our text editor and within the construct function in our class, let's just add

49
00:03:11,470 --> 00:03:12,510
a new action.

50
00:03:12,640 --> 00:03:15,700
So right here, let's say add action.

51
00:03:16,210 --> 00:03:16,420
Sure.

52
00:03:16,420 --> 00:03:23,490
To include the semicolon and the name of the action hook is admin underscore Annet.

53
00:03:24,100 --> 00:03:26,050
OK, comma, the second argument.

54
00:03:26,380 --> 00:03:31,450
Well, we haven't created a new function yet, but let's just point towards a function or I should say

55
00:03:31,450 --> 00:03:34,840
a method, and then we can create it in about ten seconds from now.

56
00:03:34,840 --> 00:03:39,690
So an array the first argument is dollar sign this comma.

57
00:03:39,700 --> 00:03:40,750
The second argument.

58
00:03:41,170 --> 00:03:43,960
Well, we just get to make up a simple name for the method.

59
00:03:44,380 --> 00:03:46,090
I'll call it settings.

60
00:03:46,790 --> 00:03:49,840
OK, now let's just create a function with that name.

61
00:03:49,840 --> 00:03:56,560
So right below the constructor function we can just say function settings, parentheses, curly brackets.

62
00:03:56,830 --> 00:03:59,760
And now let's talk about what I want to do in this function.

63
00:04:00,370 --> 00:04:07,240
So before we worry at all about the HTML that we're going to output for the form, we first just need

64
00:04:07,240 --> 00:04:10,030
to register the settings or the fields.

65
00:04:10,480 --> 00:04:12,700
Right, that we want to store in the database.

66
00:04:13,360 --> 00:04:20,020
So within here, let's use the WordPress function called register underscore setting.

67
00:04:21,130 --> 00:04:25,750
OK, inside these parentheses, we're going to give it three arguments.

68
00:04:25,750 --> 00:04:28,300
So one, two, three as placeholders.

69
00:04:28,820 --> 00:04:34,930
OK, now we're going to use this register setting function once for each of the options.

70
00:04:35,290 --> 00:04:41,650
So you can see overall we're going to have about one, two, three, four, five options.

71
00:04:42,100 --> 00:04:44,530
So ultimately we're going to use this five times.

72
00:04:44,530 --> 00:04:49,930
But for now, let's just register the very first setting, which will be the display location.

73
00:04:49,930 --> 00:04:50,200
Right.

74
00:04:50,200 --> 00:04:56,110
Do you want the word count post statistics to be at the start of the post or at the end of the post?

75
00:04:56,540 --> 00:04:58,780
OK, so let's talk about these three arguments.

76
00:04:59,020 --> 00:05:04,330
The first argument is actually the name of the group that this setting belongs to.

77
00:05:04,870 --> 00:05:11,230
So let's call it you could call it anything, but let's call it maybe word count, plug in.

78
00:05:12,070 --> 00:05:15,280
We'll see where this name comes into play a little bit later in the video.

79
00:05:15,520 --> 00:05:16,270
Let's move on, though.

80
00:05:16,270 --> 00:05:21,550
So this second argument, this is the actual name for this specific setting.

81
00:05:22,060 --> 00:05:22,360
Right.

82
00:05:22,360 --> 00:05:27,280
So in terms of asking the user the display location, do you want to at the beginning or the end, you

83
00:05:27,280 --> 00:05:31,180
can name this anything you want, but maybe I'll name it WCP.

84
00:05:31,180 --> 00:05:37,330
I'm just making this up short for word count, plug in and then maybe underscore location.

85
00:05:38,140 --> 00:05:43,180
OK, the third argument is an array with several different options.

86
00:05:43,180 --> 00:05:45,940
So let's give it an array, OK?

87
00:05:46,120 --> 00:05:50,950
And then inside this array, we want to give it to properties, a sanitized callback.

88
00:05:50,950 --> 00:05:57,160
So how we want to either sanitize or validate the value and then also a default value.

89
00:05:57,550 --> 00:06:03,130
So if no value exists in the database yet, what do we want to sort of consider the standard or default

90
00:06:03,130 --> 00:06:04,090
answer to be?

91
00:06:04,540 --> 00:06:08,440
So let's just say quotes sanitize.

92
00:06:08,540 --> 00:06:09,890
Underscore callback.

93
00:06:10,940 --> 00:06:16,730
And then the arrow symbol, right, so equal sign greater then and let's just set that to underscore,

94
00:06:16,730 --> 00:06:20,840
sanitise, underscore text, underscore field.

95
00:06:21,350 --> 00:06:27,890
OK, then have a comma and then we just need one more property, which is default and arrow symbol.

96
00:06:27,890 --> 00:06:31,190
And let's just say that it has a default value of zero.

97
00:06:31,190 --> 00:06:31,540
Right.

98
00:06:31,760 --> 00:06:34,880
So you could store anything you want in the database.

99
00:06:34,910 --> 00:06:35,160
Right.

100
00:06:35,180 --> 00:06:41,660
If we look at the options table again, you can store a string of text, you can store a serialized

101
00:06:41,660 --> 00:06:45,130
array so we can store whatever we want for that option.

102
00:06:45,140 --> 00:06:49,940
We could store a string of text that says display at the beginning or display at the end.

103
00:06:50,270 --> 00:06:56,030
But in terms of being efficient and not storing more data than we need, I would probably just, you

104
00:06:56,030 --> 00:07:02,690
know, are with our own logic, say that zero can mean display at the beginning and a value of one can

105
00:07:02,690 --> 00:07:03,980
mean display at the end.

106
00:07:04,250 --> 00:07:06,130
But that's totally personal preference.

107
00:07:06,740 --> 00:07:12,380
Also, before we move on, I do want to let you know that this value of sanitized text field, this

108
00:07:12,380 --> 00:07:17,420
is just a standard function in WordPress that will sanitize a user's input value.

109
00:07:17,420 --> 00:07:22,280
For us, it's sort of a generic WordPress sanitize tool that I like to use.

110
00:07:22,490 --> 00:07:29,630
In our next video, we'll learn how we can supply a custom function name here and write our own sanitized

111
00:07:29,630 --> 00:07:30,170
function.

112
00:07:30,410 --> 00:07:34,910
So not only for sanitisation, but if we want to validate an option.

113
00:07:34,910 --> 00:07:35,270
Right.

114
00:07:35,330 --> 00:07:41,450
For example, what if we want to make sure that the number is only zero or one and that the user doesn't

115
00:07:41,450 --> 00:07:43,970
somehow enter too or a word?

116
00:07:44,510 --> 00:07:48,530
So we can learn more about sort of custom validation in the next video.

117
00:07:48,530 --> 00:07:54,090
But for now, this just gives us sort of debate in standard WordPress sanitisation.

118
00:07:54,860 --> 00:07:56,690
OK, let's go back to the beginning of this line.

119
00:07:56,690 --> 00:07:58,910
So we registered our setting.

120
00:07:59,340 --> 00:08:03,380
So this gives WordPress the info that it would need to store value in the database.

121
00:08:03,710 --> 00:08:08,390
But now we need to tie things back in to our HTML form.

122
00:08:09,050 --> 00:08:12,730
So let's do this right above this register setting line.

123
00:08:13,160 --> 00:08:21,130
Let's add a new line and say add underscore settings, underscore field semicolon here.

124
00:08:21,140 --> 00:08:29,060
Now, the job of this function is to sort of begin to build out the HTML input field for our form.

125
00:08:29,180 --> 00:08:33,320
So we're sort of tying HTML to this setting that we just registered.

126
00:08:33,830 --> 00:08:37,550
So within these parentheses here, we're going to give it five arguments.

127
00:08:37,550 --> 00:08:39,650
So let's add some placeholders.

128
00:08:40,670 --> 00:08:45,320
The first argument is the name of the option or setting that we want to tie this to.

129
00:08:45,350 --> 00:08:51,340
So basically the name that we registered right here, we chose WCP, underscore location.

130
00:08:51,740 --> 00:08:53,220
So that's our first value.

131
00:08:54,050 --> 00:08:58,070
The second argument is the HTML label text.

132
00:08:58,290 --> 00:09:04,240
So what the users will see on the front end, let's say quotes display location.

133
00:09:05,090 --> 00:09:10,730
The third argument is a function that's responsible for actually outputting the HTML.

134
00:09:10,760 --> 00:09:11,740
So this is really nice.

135
00:09:11,750 --> 00:09:15,580
We can include our own custom HTML, which is very flexible.

136
00:09:15,980 --> 00:09:18,920
So instead of this three placeholder, let's give it an array.

137
00:09:19,270 --> 00:09:22,470
First argument is dollar sign this comma.

138
00:09:22,490 --> 00:09:26,180
The second argument is just a function or method name that we get to make up.

139
00:09:26,660 --> 00:09:29,530
Let's call it location.

140
00:09:29,690 --> 00:09:36,040
HTML will actually create this function in just a moment, but let's keep going through these arguments.

141
00:09:36,050 --> 00:09:41,870
So the fourth argument is the page slug for this settings page that we're working with.

142
00:09:42,290 --> 00:09:43,790
So back up in the address bar.

143
00:09:43,790 --> 00:09:50,600
Remember, we chose word dash dash settings page back in our code.

144
00:09:50,600 --> 00:09:54,170
We chose that value when we added an options page.

145
00:09:54,680 --> 00:09:59,890
And remember, we chose a value of word count settings page for the slug of this page.

146
00:09:59,900 --> 00:10:01,550
So you can just copy that.

147
00:10:02,240 --> 00:10:05,780
And then that is the fourth argument where we were just working.

148
00:10:06,940 --> 00:10:14,470
OK, and then the fifth and final argument is the section that you want to add this field to, we haven't

149
00:10:14,470 --> 00:10:15,880
created any sections yet.

150
00:10:15,880 --> 00:10:17,020
We will in just a moment.

151
00:10:17,020 --> 00:10:18,580
But let's just make up a name.

152
00:10:18,850 --> 00:10:26,560
How about WCP for word count, plug in, maybe underscore first section.

153
00:10:27,600 --> 00:10:32,970
Now, let me pause for just a minute and say that I am well aware at this point in time this code is

154
00:10:32,970 --> 00:10:37,920
not very intuitive and it's sort of hard to see how all of these puzzle pieces fit together.

155
00:10:37,920 --> 00:10:43,050
And there's all these different options and functions and things are a bit cloudy.

156
00:10:43,800 --> 00:10:48,650
Or at least I know the first time that I worked with this API, I thought it was cloudy and confusing.

157
00:10:48,900 --> 00:10:54,600
However, we're almost getting to the point where everything sort of connects and we can begin to see

158
00:10:54,600 --> 00:10:57,330
things take shape visually right here.

159
00:10:57,330 --> 00:11:01,990
And I think once we get to that point, this will all start to make a little bit of sense.

160
00:11:02,670 --> 00:11:06,390
That's just my way of saying if things are confusing right now, that's OK.

161
00:11:06,570 --> 00:11:07,800
That's to be expected.

162
00:11:08,520 --> 00:11:11,520
However, we just chose this name for a section.

163
00:11:11,920 --> 00:11:13,970
Let's go ahead and create that section now.

164
00:11:13,980 --> 00:11:23,760
So right above this line that we were just writing, let's say add settings section semicolon in these

165
00:11:23,760 --> 00:11:26,920
parentheses, we're going to give it for arguments.

166
00:11:26,940 --> 00:11:30,860
So the first argument is the name of the section.

167
00:11:30,870 --> 00:11:35,270
So we chose WCP first section.

168
00:11:36,120 --> 00:11:39,810
The second argument is the title for the section.

169
00:11:40,200 --> 00:11:43,260
Now you can include a subtitle for each section.

170
00:11:43,260 --> 00:11:48,750
For example, if your settings page was going to have three different sections, you could have a subtitle

171
00:11:48,750 --> 00:11:50,760
here, subtitle here, subtitle here.

172
00:11:51,330 --> 00:11:53,640
I don't really want a subtitle.

173
00:11:54,060 --> 00:12:00,300
So while we do need to include this argument, if you don't actually want a visible subtitle, you can

174
00:12:00,300 --> 00:12:02,420
just make this be a value of Nole.

175
00:12:03,120 --> 00:12:06,480
OK, and then a similar thing is going on with the third argument.

176
00:12:06,690 --> 00:12:12,000
The third argument allows you to have a little bit of content towards the top of a section.

177
00:12:12,000 --> 00:12:18,540
So instead of a sub headline, you could have maybe a paragraph of text, just sort of any generic HTML

178
00:12:18,540 --> 00:12:19,530
content you want.

179
00:12:19,920 --> 00:12:22,700
Now, again, I don't really want any content.

180
00:12:22,710 --> 00:12:26,950
So while we do want this argument, I'm just going to give it a value of no.

181
00:12:27,570 --> 00:12:34,470
OK, and then this fourth and final argument, this is the page slug that we want to add this section

182
00:12:34,470 --> 00:12:34,780
to.

183
00:12:35,370 --> 00:12:39,570
So, again, if you're ever confused what that would be, it's up in the address bar on your page.

184
00:12:39,570 --> 00:12:43,850
So it's word count settings page, or at least that's what I chose.

185
00:12:45,060 --> 00:12:49,600
So that's why I'm going to use here quotes, word count, settings, page, OK.

186
00:12:49,770 --> 00:12:56,070
And before we actually start to tie things together and output in HTML form, let's just create this

187
00:12:56,070 --> 00:12:57,750
function that we said we would create.

188
00:12:57,900 --> 00:12:58,320
Right.

189
00:12:58,470 --> 00:13:03,600
We said that our class should have a method named location HTML.

190
00:13:04,150 --> 00:13:05,640
So let's create that really quick.

191
00:13:06,090 --> 00:13:07,110
Right below this function.

192
00:13:07,110 --> 00:13:12,540
We can just say function, location, html, parentheses, curly brackets.

193
00:13:12,810 --> 00:13:15,830
And now where the cursor is, I want to include HTML.

194
00:13:15,840 --> 00:13:22,320
So what I like to do is just drop out of PHP right here and then before the ending curly bracket you

195
00:13:22,320 --> 00:13:24,060
can just go back into PHP.

196
00:13:25,190 --> 00:13:33,590
OK, and right here, we would actually include perhaps an input field or a text area, but just so

197
00:13:33,590 --> 00:13:40,010
we can actually see things take shape in the browser for now, let's just output the word hello and

198
00:13:40,010 --> 00:13:42,030
then we can circle back to the HTML.

199
00:13:42,650 --> 00:13:47,660
OK, now we're finally to the point where we can slowly start to have things make sense and we're going

200
00:13:47,660 --> 00:13:49,060
to connect all the dots now.

201
00:13:49,430 --> 00:13:54,210
So let's scroll down and we're looking for our overall our HTML function.

202
00:13:54,230 --> 00:13:59,870
Remember, we set this up at the end of our last lesson, and right now it's just outputting that wrapper

203
00:13:59,870 --> 00:14:01,190
div with an H1, right?

204
00:14:01,220 --> 00:14:02,340
That's all we see here.

205
00:14:02,900 --> 00:14:06,680
So this is where we just actually start to build out the HTML form.

206
00:14:06,680 --> 00:14:10,280
So below the heading level one, let's have a form tag.

207
00:14:10,700 --> 00:14:16,810
If you're using VTS code, you can just type form and then hit tab for the action.

208
00:14:16,820 --> 00:14:19,040
Let's give it a value of options.

209
00:14:19,670 --> 00:14:20,940
Dot p p.

210
00:14:21,270 --> 00:14:23,590
WordPress will know what to do with this.

211
00:14:24,320 --> 00:14:25,430
That's all we need to say.

212
00:14:25,730 --> 00:14:29,930
Let's also give it an attribute of method and set that to equal post.

213
00:14:30,640 --> 00:14:35,300
OK, now inside the HTML form, this is where things are pretty cool.

214
00:14:35,570 --> 00:14:37,520
We don't need to spell out very much.

215
00:14:37,520 --> 00:14:39,720
WordPress will do a lot of this for us.

216
00:14:40,220 --> 00:14:41,060
So check this out.

217
00:14:41,060 --> 00:14:46,120
We just drop into P and we drop down and then exit again.

218
00:14:46,130 --> 00:14:55,340
But inside here mode, we're just going to say do underscore settings, sections, semicolon.

219
00:14:55,670 --> 00:14:59,030
In these parentheses, we just give the slug of our settings page.

220
00:14:59,900 --> 00:15:08,480
So again, remember up in the address bar for me it's word count settings page, OK, WordPress will

221
00:15:08,480 --> 00:15:12,010
automatically look through any sections that have been registered.

222
00:15:12,020 --> 00:15:18,050
And remember, we added that one section called First Section and we tied it to this same page.

223
00:15:18,050 --> 00:15:24,170
So WordPress will see this and it will automatically loop through the sections and the fields for us

224
00:15:24,170 --> 00:15:25,070
that we registered.

225
00:15:25,400 --> 00:15:31,310
Then right below this, let's have the signature looking WordPress Blue Savours submit button so we

226
00:15:31,310 --> 00:15:37,460
just can call a WordPress function called submit button parentheses to call it semicolon.

227
00:15:37,760 --> 00:15:40,580
Let's give this a save and see what it looks like.

228
00:15:41,540 --> 00:15:44,450
So if we refresh our page, cool.

229
00:15:44,900 --> 00:15:46,460
So we only have one field.

230
00:15:46,460 --> 00:15:47,810
So it's not very impressive.

231
00:15:47,810 --> 00:15:52,460
But the idea is that WordPress will automatically generate the HTML for us.

232
00:15:52,760 --> 00:15:53,060
Right.

233
00:15:53,060 --> 00:15:59,810
Or this column is your label and then this column is the actual input field and then we have the signature

234
00:15:59,810 --> 00:16:00,720
looking blue button.

235
00:16:01,130 --> 00:16:04,220
Now remember, we just set this to be hello as a quick test.

236
00:16:04,220 --> 00:16:11,680
So instead, let's go back right now and change this to be a dropdown write in HTML select form element.

237
00:16:12,170 --> 00:16:19,430
So back in our text editor, we're just looking for this location HTML function instead of hello, let's

238
00:16:19,430 --> 00:16:24,980
have a select element so you can just type, select and hit tab and vs code.

239
00:16:25,490 --> 00:16:32,270
We do not need it to have an ID, but we do want it to have a name that matches the setting that we've

240
00:16:32,270 --> 00:16:32,990
registered.

241
00:16:33,410 --> 00:16:39,530
So remember sort of the variable name that we gave that setting was WCP underscore location.

242
00:16:39,530 --> 00:16:41,180
So that's what we want this name to be.

243
00:16:41,180 --> 00:16:44,150
WCP underscore location.

244
00:16:44,810 --> 00:16:51,920
OK, inside the select, let's have one option you can type option here tab give it a value of zero,

245
00:16:51,920 --> 00:17:00,440
but then the actual text that the user sees would be the beginning of post set dropdown use type option

246
00:17:00,440 --> 00:17:01,340
again hit tab.

247
00:17:01,340 --> 00:17:02,540
Give it a value of one.

248
00:17:02,840 --> 00:17:06,380
But what the user will actually see is end of post.

249
00:17:07,010 --> 00:17:10,550
OK, let's go ahead and save that and then if we refresh.

250
00:17:11,120 --> 00:17:11,570
Cool.

251
00:17:11,570 --> 00:17:16,910
Now if we tried to actually select end of post, I will warn you when we click save changes, we're

252
00:17:16,910 --> 00:17:21,080
going to run into some errors so you can see all sorts of errors here.

253
00:17:21,710 --> 00:17:23,360
Let me show you the solution to this.

254
00:17:23,570 --> 00:17:27,620
The reason this failed is because we're missing one line of code.

255
00:17:28,100 --> 00:17:32,270
So just navigate right back to your word count setting screen like this and let me show you what to

256
00:17:32,270 --> 00:17:38,090
fix down in our overall our HTML function, right where we have our wrapper, Dave.

257
00:17:38,090 --> 00:17:43,640
And the heading level one in the form tags right before this do setting sections line.

258
00:17:43,640 --> 00:17:51,200
Let's add a new line and we just say settings underscore fields', semicolon and we just give it the

259
00:17:51,200 --> 00:17:53,930
name of the field group that we chose earlier.

260
00:17:53,930 --> 00:17:59,690
So remember when we registered our setting, we made up a group name of word count plug in.

261
00:17:59,690 --> 00:18:04,040
So that's what we would use here, quotes, word count plugin.

262
00:18:04,280 --> 00:18:05,420
And what this is going to do.

263
00:18:05,450 --> 00:18:07,730
WordPress will do all of the hard work for us.

264
00:18:08,090 --> 00:18:16,280
It's going to see this and then add the appropriate hidden HTML fields with the nonce value, the action

265
00:18:16,280 --> 00:18:21,050
value, it's going to handle sort of the security and permission aspects for us.

266
00:18:21,320 --> 00:18:24,350
So just by including this, if we save.

267
00:18:24,880 --> 00:18:32,410
And reload the page now, if we try to set this to end of post and hit save, it actually worked and

268
00:18:32,410 --> 00:18:33,780
we see settings saved.

269
00:18:33,790 --> 00:18:36,060
Now, we don't see that value here.

270
00:18:36,220 --> 00:18:42,610
And that's because we didn't program that select HTML that we just wrote to actually pull the current

271
00:18:42,610 --> 00:18:44,760
value from the database to change this.

272
00:18:44,770 --> 00:18:44,960
Right.

273
00:18:45,010 --> 00:18:48,660
So that when you refresh, you actually see the most current value in the database.

274
00:18:48,970 --> 00:18:50,900
We can set that up in the next video.

275
00:18:50,920 --> 00:18:56,740
I don't want this lesson to go on for too long, but to make sure that things actually worked, all

276
00:18:56,740 --> 00:18:58,650
we need to do is look at our database.

277
00:18:59,050 --> 00:19:06,070
So remember back in this tab where you can look at your WordPress database in the options table, you

278
00:19:06,070 --> 00:19:07,930
won't see it if you just scroll down.

279
00:19:07,930 --> 00:19:10,930
And that's because you need to go to the very last page.

280
00:19:11,230 --> 00:19:16,750
Depending on your WordPress site and how many plug ins you've installed, you might have five, 10 or

281
00:19:16,750 --> 00:19:19,840
even 15 or 20 pages of different options.

282
00:19:19,840 --> 00:19:22,240
But just click on to the final page.

283
00:19:24,060 --> 00:19:32,010
And down at the very bottom, perfect, we see an option named WCP location, and it has a value of

284
00:19:32,130 --> 00:19:33,210
one, right?

285
00:19:33,210 --> 00:19:37,140
And that was the final value that we associated with end of post.

286
00:19:37,680 --> 00:19:38,070
Cool.

287
00:19:38,070 --> 00:19:42,240
So we are well on our way to building a fully functional setting screen.

288
00:19:42,840 --> 00:19:47,940
Now that we've got these basics out of the way, we can start to move a lot faster in our next lesson.

289
00:19:48,370 --> 00:19:50,700
Let's keep things rolling and I'll see you then.
