1
00:00:02,120 --> 00:00:03,050
Hello, everyone.

2
00:00:03,410 --> 00:00:08,960
In this lesson, we're going to start working on a new plug in first, let's look at what the plug in

3
00:00:08,960 --> 00:00:15,650
does and then after that will review why we're creating this plug in or what makes it different from

4
00:00:15,650 --> 00:00:17,450
the first plug in that we created.

5
00:00:17,990 --> 00:00:22,880
So right now, let's look at a sneak peak preview of the finished product of this next plug in.

6
00:00:22,890 --> 00:00:24,880
So it's called word filter.

7
00:00:25,610 --> 00:00:30,950
You give it a comma separated list of words that you want to filter out of your content.

8
00:00:31,610 --> 00:00:37,290
OK, and then you'll notice that in the admin menu for word filter, there's a sub menu of links.

9
00:00:37,640 --> 00:00:41,120
So this first page that we're already looking at is called Words List.

10
00:00:41,120 --> 00:00:43,730
But then there's another page called Options.

11
00:00:44,210 --> 00:00:50,100
If we click on to that, this is where you can type in whatever you want to replace those words with.

12
00:00:50,120 --> 00:00:55,910
So maybe you want to replace them with dollar sign, exclamation pound at symbol.

13
00:00:56,330 --> 00:00:57,980
So click save changes.

14
00:00:58,730 --> 00:01:04,640
And then if I go on the front end and find a blog post that uses any of those words, cool.

15
00:01:04,640 --> 00:01:06,720
There we see one instance where it was replaced.

16
00:01:06,740 --> 00:01:08,030
Here we see another.

17
00:01:08,300 --> 00:01:09,270
You get the idea.

18
00:01:09,860 --> 00:01:13,550
So that's really all the plugin does not super impressive.

19
00:01:13,760 --> 00:01:20,240
However, the reason we're building this plugin is because it's a good exercise to learn some new techniques.

20
00:01:20,510 --> 00:01:26,630
So what I mean is on this first page that we were looking at, this page is not going to be built using

21
00:01:26,630 --> 00:01:29,360
the WordPress form generator functions.

22
00:01:29,660 --> 00:01:34,700
We will build it ourselves, will also learn how to apply a little bit of our own success if we want

23
00:01:34,700 --> 00:01:35,000
to.

24
00:01:35,390 --> 00:01:42,050
And perhaps most importantly, we're going to write the piece that actually handles the submission and

25
00:01:42,050 --> 00:01:43,670
processing of this form.

26
00:01:43,670 --> 00:01:43,930
Right.

27
00:01:43,970 --> 00:01:45,920
Actually working with the data.

28
00:01:46,340 --> 00:01:51,510
So this is a bit more customer hands on instead of letting WordPress do everything for us.

29
00:01:51,890 --> 00:01:53,530
There's no right or wrong way.

30
00:01:53,750 --> 00:01:58,850
I would say if you can get away with the first approach we took with our last plugin, you should.

31
00:01:59,120 --> 00:02:05,030
However many times if you need that extra bit of customization, this is a great tool to have in your

32
00:02:05,030 --> 00:02:05,770
toolbox.

33
00:02:06,120 --> 00:02:11,480
OK, the other reason we're building this plugin is to get familiar with this idea of having our own

34
00:02:11,480 --> 00:02:19,550
top level admin dashboard menu with a sub menu and even providing your own custom SVG icon.

35
00:02:20,240 --> 00:02:21,490
OK, at this point.

36
00:02:21,530 --> 00:02:23,110
Let's jump into the action.

37
00:02:23,120 --> 00:02:30,380
So if I switch to this tab where I do not have this new plug in already created, let's start creating

38
00:02:30,380 --> 00:02:31,090
it together.

39
00:02:31,460 --> 00:02:37,940
So within your WordPress installation folder, find your plugins folder and let's just create a brand

40
00:02:37,940 --> 00:02:39,920
new folder for a new plugin.

41
00:02:40,430 --> 00:02:47,570
You can name the new folder anything, but I'll name it our word filter plug in.

42
00:02:48,260 --> 00:02:52,850
OK, then just open your new folder in your text editor in our new folder.

43
00:02:52,850 --> 00:03:02,240
Let's create a new file, I'll name it indexed P and to save a bit of time I'm going to paste in a bit

44
00:03:02,240 --> 00:03:03,380
of starter code.

45
00:03:03,620 --> 00:03:08,960
You can either pause the video and type this out or you can just copy and paste and borrow the first

46
00:03:08,960 --> 00:03:10,970
few lines from our previous plugin.

47
00:03:11,420 --> 00:03:13,220
So we're just opening up http.

48
00:03:13,280 --> 00:03:16,520
We're giving it an appropriate name description version.

49
00:03:16,520 --> 00:03:19,400
Author The only thing new here is this line.

50
00:03:19,850 --> 00:03:24,680
I've seen lots of the top plug ins in the WordPress community use this line of code before.

51
00:03:25,040 --> 00:03:32,540
Essentially if someone tries to visit this file directly from our plug in directory, well, we don't

52
00:03:32,540 --> 00:03:35,030
want them to be able to access the file directly.

53
00:03:35,270 --> 00:03:37,910
I don't mean that they could view the source code.

54
00:03:37,910 --> 00:03:44,720
What I mean is that just by viewing the Eurail for the file in their browser, that could potentially

55
00:03:44,870 --> 00:03:48,080
load or trigger or execute the code in this file.

56
00:03:48,290 --> 00:03:53,780
And depending on the code that you're plug in contains, that might trigger some unexpected behavior

57
00:03:53,780 --> 00:03:54,470
with your code.

58
00:03:54,770 --> 00:03:58,040
So this is just a nice little safeguard against that that I've seen.

59
00:03:58,430 --> 00:03:59,630
OK, moving on.

60
00:04:00,080 --> 00:04:03,230
Let's go ahead and begin by creating a class.

61
00:04:03,620 --> 00:04:12,380
So I'll say class and you could name anything, but I'll name it our word filter plug in, no parentheses,

62
00:04:12,380 --> 00:04:13,790
just curly brackets.

63
00:04:14,340 --> 00:04:18,260
OK, then below that, let's just create a new instance of our class.

64
00:04:18,260 --> 00:04:24,620
So just new and then you can even just copy and paste this parentheses semicolon.

65
00:04:24,740 --> 00:04:30,770
And then at the very start of this line, I like to save this new instance into a variable in case any

66
00:04:30,770 --> 00:04:37,280
other plugins perhaps want to remove one of our actions or filters, or if our plugin has a reusable

67
00:04:37,280 --> 00:04:41,870
method that we want the outside world like other plugin developers to be able to use.

68
00:04:42,320 --> 00:04:44,870
Well, they can access it all from our variable name.

69
00:04:44,870 --> 00:04:48,050
So right here we can just say dollar sign.

70
00:04:48,440 --> 00:04:50,180
And then let's start with the lowercase.

71
00:04:50,540 --> 00:04:55,730
Our word filter plugin equals that new instance.

72
00:04:56,390 --> 00:04:57,740
Cool within our class.

73
00:04:57,740 --> 00:04:59,870
Let's create the constructor function.

74
00:04:59,870 --> 00:05:01,160
So we just say function.

75
00:05:01,670 --> 00:05:09,290
With the exact name of underscore, underscore, construct, parentheses, curly bracket, and now let's

76
00:05:09,290 --> 00:05:12,030
ask ourselves, what do we want to work on first?

77
00:05:12,500 --> 00:05:18,170
I think we should begin by adding our own top level menu in the admin sidebar.

78
00:05:18,560 --> 00:05:25,820
So to make that happen in our constructor function, let's add an action semicolon.

79
00:05:26,240 --> 00:05:30,290
The action hook name is Admen Underscore Menu.

80
00:05:30,950 --> 00:05:34,710
And then the second argument is just a function that we give it.

81
00:05:35,630 --> 00:05:37,580
So let's use the callable syntax.

82
00:05:37,580 --> 00:05:39,460
We just give it an array dollar.

83
00:05:39,470 --> 00:05:40,420
Sign this.

84
00:05:40,430 --> 00:05:43,340
The second argument is a method name that we make up.

85
00:05:43,770 --> 00:05:46,760
You call it anything, but only omit our menu.

86
00:05:47,480 --> 00:05:49,760
Then we just go create a method with that name.

87
00:05:49,760 --> 00:05:57,470
So below the constructor function, we can just say scroll down a bit, function our menu, parentheses,

88
00:05:57,470 --> 00:05:59,360
curly brackets, OK?

89
00:05:59,360 --> 00:06:06,380
And then inside the body of this function, we're just going to use a WordPress function named add menu

90
00:06:06,380 --> 00:06:07,250
page.

91
00:06:07,680 --> 00:06:09,440
Let's call that semicolon.

92
00:06:09,560 --> 00:06:12,790
We're going to give this seven arguments.

93
00:06:13,070 --> 00:06:14,960
So just for quick placeholders.

94
00:06:18,700 --> 00:06:20,420
OK, let's go through these one by one.

95
00:06:20,440 --> 00:06:24,460
So the very first argument is the document title, right?

96
00:06:24,480 --> 00:06:29,120
So that's the text that would show up in the actual tab in your browser window.

97
00:06:29,860 --> 00:06:33,610
Why don't we call this words to filter?

98
00:06:34,260 --> 00:06:40,530
OK, the second argument is the text that will actually show up in the admin sidebar.

99
00:06:40,780 --> 00:06:44,500
So how about we say word filter?

100
00:06:45,130 --> 00:06:51,790
The third argument is the permission or capability that a user needs to have in order to see the page.

101
00:06:52,130 --> 00:06:53,920
Let's just go with Manege.

102
00:06:53,920 --> 00:06:55,480
Underscore options.

103
00:06:56,200 --> 00:07:02,670
The fourth argument is the short name or slug variable name for this new menu that we're creating.

104
00:07:03,220 --> 00:07:04,600
So we get to make up a name.

105
00:07:04,600 --> 00:07:08,840
Why don't we call it our word filter?

106
00:07:09,640 --> 00:07:17,530
OK, the fifth argument is a function that outputs the HTML for the actual page itself so we can use

107
00:07:17,530 --> 00:07:20,150
the array callable syntax will say array.

108
00:07:21,010 --> 00:07:23,050
The first argument is dollar.

109
00:07:23,050 --> 00:07:29,260
Sign this and then let's make up a method name, word, filter page.

110
00:07:29,890 --> 00:07:33,160
We'll be sure to actually create this method in just a moment from now.

111
00:07:33,160 --> 00:07:35,920
But let's finish out these two final arguments.

112
00:07:36,340 --> 00:07:40,570
The sixth argument is the icon that will appear in the admin menu.

113
00:07:41,200 --> 00:07:44,320
For now, let's just use a Dash Hakone for a quick test.

114
00:07:44,320 --> 00:07:50,080
And then a bit later on, we will indeed learn how to use our own custom SVG file.

115
00:07:50,470 --> 00:07:55,720
So I'll just say quotes Dasha seconds, dash smiley for a quick test.

116
00:07:56,170 --> 00:07:58,780
OK, and then the final seventh argument.

117
00:07:59,020 --> 00:08:04,300
This is a number that we give it that will control where our menu appears vertically.

118
00:08:04,300 --> 00:08:04,470
Right.

119
00:08:04,480 --> 00:08:08,620
Does it show up at the very top of the admin panel or down at the bottom?

120
00:08:08,650 --> 00:08:14,740
So if you give this a very small number like one, it will appear up here, give it a larger number.

121
00:08:14,740 --> 00:08:15,940
It's going to appear down here.

122
00:08:16,540 --> 00:08:17,880
This is totally up to you.

123
00:08:17,920 --> 00:08:19,480
I'll just give it a value of 100.

124
00:08:19,480 --> 00:08:20,630
So it's down at the bottom.

125
00:08:21,070 --> 00:08:27,220
OK, before we save our progress and test it out, let's create the method that's responsible for outputting

126
00:08:27,220 --> 00:08:29,890
the actual HTML content for the page.

127
00:08:29,890 --> 00:08:32,740
So we named it word filter page.

128
00:08:34,150 --> 00:08:39,850
So below this function, you can just create a brand new one function, word, filter, page, parentheses,

129
00:08:39,850 --> 00:08:44,840
curly brackets right where the cursor is, I want to be able to write HTML.

130
00:08:45,160 --> 00:08:47,560
So right here, I'll drop out of P.

131
00:08:48,040 --> 00:08:52,750
Then before this closing curly brackets, we can go back into groups.

132
00:08:53,140 --> 00:08:57,700
And then right here, for now, just as a quick test, we can say Hello World.

133
00:08:58,180 --> 00:09:00,550
OK, let's go ahead and save our progress.

134
00:09:01,090 --> 00:09:03,580
And then in the browser, let's refresh.

135
00:09:03,850 --> 00:09:06,760
Now we need to activate our plug in before we see anything.

136
00:09:06,760 --> 00:09:08,650
So go under plug ins.

137
00:09:09,590 --> 00:09:15,950
I named my plug in our word filter plug in, so just be sure to activate your plug in.

138
00:09:16,950 --> 00:09:24,420
OK, now down at the very bottom, well, if we can see logo translate clearly, used a number larger

139
00:09:24,420 --> 00:09:27,570
than 100 because theirs is at the very bottom.

140
00:09:27,570 --> 00:09:30,870
But there we see our new plug in word filter.

141
00:09:31,290 --> 00:09:32,220
If we click on it.

142
00:09:32,610 --> 00:09:32,910
Cool.

143
00:09:32,910 --> 00:09:33,210
We see.

144
00:09:33,210 --> 00:09:33,990
Hello, world.

145
00:09:34,500 --> 00:09:41,490
Next, let's go ahead and add a submenu to the word filter item in the admin sidebar.

146
00:09:41,860 --> 00:09:49,030
Imagine we want a secondary or sub page called options that should live under this menu item.

147
00:09:49,410 --> 00:09:56,820
So back in our code within our our menu function, below this add menu page line, let's add a new line

148
00:09:56,820 --> 00:10:02,050
and just say add sub menu page semicolon.

149
00:10:02,550 --> 00:10:06,350
This is a WordPress function that we give six arguments to.

150
00:10:06,360 --> 00:10:13,900
So for placeholders, the first argument is the menu that you want to add this page to.

151
00:10:14,190 --> 00:10:19,410
So that would be this short namer slug name that we chose for the parent page or menu.

152
00:10:19,890 --> 00:10:22,140
I chose the value of our word filter.

153
00:10:22,470 --> 00:10:24,600
So that's what we'll put here for the first argument.

154
00:10:25,320 --> 00:10:30,040
The second argument is the actual document title that you would see in the tab of your browser.

155
00:10:30,540 --> 00:10:32,130
Why don't we say a word?

156
00:10:32,130 --> 00:10:33,870
Filter options.

157
00:10:34,620 --> 00:10:39,360
The third argument is the text that you'll actually see in the admin sidebar.

158
00:10:40,120 --> 00:10:42,710
Let's use a value of just options.

159
00:10:43,560 --> 00:10:46,000
The fourth argument is the capability.

160
00:10:46,050 --> 00:10:48,950
So again, let's use manage options.

161
00:10:49,860 --> 00:10:52,530
That's the capability that's required to see this page.

162
00:10:52,680 --> 00:10:57,390
The fifth argument is the slug name or short name for this page.

163
00:10:57,570 --> 00:11:00,900
So you'll see this reflected in the UCLA address bar.

164
00:11:00,900 --> 00:11:04,320
When you visit the sub page, we can make up a value.

165
00:11:04,330 --> 00:11:12,210
Why don't we call it word Dasch filter Dasch options for the sixth and final argument.

166
00:11:12,390 --> 00:11:17,030
This is just a function that outputs the HTML for the page so we know what to do.

167
00:11:17,040 --> 00:11:18,090
You give it an array.

168
00:11:18,090 --> 00:11:21,540
First argument is dollar sign this second argument.

169
00:11:21,540 --> 00:11:22,860
We make up a method name.

170
00:11:23,130 --> 00:11:27,740
Why don't we call it options sub page.

171
00:11:28,350 --> 00:11:32,610
OK, let's go create that new method right now to save a bit of typing.

172
00:11:32,610 --> 00:11:35,040
We can actually just duplicate this function.

173
00:11:35,380 --> 00:11:43,770
So I'll just copy and paste those three lines on the new copy, change the name to options sub page

174
00:11:44,220 --> 00:11:48,050
and then say Hello World from the options page.

175
00:11:48,570 --> 00:11:50,320
Let's give that a save and test it out.

176
00:11:50,370 --> 00:11:55,740
So if we refresh down in our menu, cool, we now have this sub menu in.

177
00:11:55,740 --> 00:12:00,110
The second item in it is options and there's the new page.

178
00:12:00,600 --> 00:12:01,050
Cool.

179
00:12:01,260 --> 00:12:07,170
However, you might have noticed something a bit weird, and that is we have two items in the sub menu.

180
00:12:07,440 --> 00:12:11,190
So yes, we just added this one on purpose, the one called options.

181
00:12:11,190 --> 00:12:16,820
But you'll notice that the first link is just a copy of sort of the parent level link.

182
00:12:17,430 --> 00:12:23,700
At first this seems a bit weird to have it twice, but you'll notice that in default WordPress areas,

183
00:12:23,700 --> 00:12:27,690
for example, under posts if you click on posts.

184
00:12:29,330 --> 00:12:36,080
Well, the first item in that submenu is all posts, and it doesn't matter if you click on the top level

185
00:12:36,080 --> 00:12:43,030
link or just this first item in the menu, both of those take you to the exact same Eurail and page.

186
00:12:43,400 --> 00:12:47,510
So that's what's going on with our menu, with word filter.

187
00:12:47,840 --> 00:12:51,470
It just seems a bit awkward because we didn't provide different text.

188
00:12:51,620 --> 00:12:57,110
So the point I'm getting at here is if this first link said something different other than the exact

189
00:12:57,110 --> 00:13:01,610
same word filter text, I think it would not look or seem awkward.

190
00:13:02,100 --> 00:13:07,700
So even though clicking here and here take you to the same page, let me show you how we can customize

191
00:13:07,700 --> 00:13:12,080
the text that this first link uses back in our code.

192
00:13:12,420 --> 00:13:17,780
All we need to do is create a duplicate copy of this submenu page line.

193
00:13:18,050 --> 00:13:23,950
So just copy this entire line and then right above it pasted in.

194
00:13:24,460 --> 00:13:28,700
Now we want to make sure that we're adjusting or manipulating the first copy.

195
00:13:29,240 --> 00:13:35,120
From what I've seen, this line needs to come directly after the parent page line in order for it to

196
00:13:35,120 --> 00:13:35,510
work.

197
00:13:35,720 --> 00:13:43,550
But essentially we're just manually spelling out a submenu page that uses the exact same slug as the

198
00:13:43,550 --> 00:13:44,450
parent page.

199
00:13:44,690 --> 00:13:47,750
This way we can control the link or label text.

200
00:13:48,290 --> 00:13:50,360
So let's change the second argument.

201
00:13:51,080 --> 00:13:55,040
This is the document title will change it to words to filter.

202
00:13:55,370 --> 00:13:57,640
The third argument is what's important here.

203
00:13:58,010 --> 00:14:01,940
This is what's actually used in the admin sidebar.

204
00:14:02,120 --> 00:14:06,440
So imagine we want this to say words list, right?

205
00:14:06,560 --> 00:14:12,710
I think it will seem less awkward if this text says words list instead of word filter again.

206
00:14:13,440 --> 00:14:16,700
OK, we do need to change another argument or two.

207
00:14:16,700 --> 00:14:20,780
So if we keep scrolling to the right, we do want to change this argument.

208
00:14:20,780 --> 00:14:25,040
So we want this to be the slug name for the parent page.

209
00:14:25,430 --> 00:14:25,650
Right.

210
00:14:25,700 --> 00:14:32,570
So when you visit the overall parent page, notice in the address bar, the slug that we chose is our

211
00:14:32,570 --> 00:14:33,530
word filter.

212
00:14:33,710 --> 00:14:37,460
So we just want to associate that exact same name with this entry.

213
00:14:37,460 --> 00:14:45,080
So our word filter and then finally the HTML callback function should be the exact same for the parent

214
00:14:45,080 --> 00:14:45,420
page.

215
00:14:45,440 --> 00:14:49,150
So this would be word filter page.

216
00:14:49,580 --> 00:14:54,290
All in all, this was a lot of work to spell everything out again, but now it's going to use our custom

217
00:14:54,290 --> 00:14:54,890
text.

218
00:14:55,130 --> 00:15:02,570
So if we save this and reload down in our menu, perfect word filter words list.

219
00:15:02,570 --> 00:15:07,490
But if you click here or here, it's taking you to the exact same page.

220
00:15:07,880 --> 00:15:08,300
Cool.

221
00:15:08,900 --> 00:15:11,630
And that is going to bring this lesson to a close.

222
00:15:12,020 --> 00:15:19,880
In our next lesson, we're going to learn how to provide our own custom SVG icon instead of just using

223
00:15:19,880 --> 00:15:22,640
the built in dash icons that we can pick from.

224
00:15:23,120 --> 00:15:28,490
Also in that lesson, we'll start to build out our own custom HTML page here.

225
00:15:29,000 --> 00:15:34,340
So we'll see how we can add a bit of our own success that's unique to just this one page that we're

226
00:15:34,340 --> 00:15:34,970
creating.

227
00:15:35,360 --> 00:15:40,150
So that way we can really control the design and styling of our custom form page.

228
00:15:40,460 --> 00:15:46,370
Then in the lesson after that, we'll actually start learning how to handle the submission of the form

229
00:15:46,670 --> 00:15:50,600
and also processing the data with our own code.

230
00:15:51,140 --> 00:15:54,680
It should be a lot of fun to build a totally custom solution like this.

231
00:15:54,950 --> 00:15:59,150
So let's keep things rolling and I will see you in the next lesson.
