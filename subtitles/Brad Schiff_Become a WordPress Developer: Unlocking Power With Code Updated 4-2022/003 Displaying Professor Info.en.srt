1
00:00:02,300 --> 00:00:03,320
Hello, everyone.

2
00:00:03,650 --> 00:00:10,130
In this lesson, we're going to actually display information about the selected professor, let's jump

3
00:00:10,130 --> 00:00:11,050
into the action.

4
00:00:11,390 --> 00:00:12,740
So here's our BLACKTIP.

5
00:00:12,980 --> 00:00:18,840
And in this lesson, we're actually not going to start with this preview that should appear here.

6
00:00:19,310 --> 00:00:24,500
Instead, let's begin with the public front end output for our block type.

7
00:00:24,800 --> 00:00:30,950
So if I view this blog post on the front end and scroll down to where that blog type is, we see currently

8
00:00:30,950 --> 00:00:32,720
it's just outputting this paragraph.

9
00:00:33,050 --> 00:00:35,190
We will replace this content soon.

10
00:00:35,660 --> 00:00:38,300
So this is what we're going to work on in this lesson.

11
00:00:38,450 --> 00:00:41,440
We instead want it to look something like this.

12
00:00:42,500 --> 00:00:45,530
So the photo on the left hand side and then a bit of information.

13
00:00:45,950 --> 00:00:51,850
Now, by the end of this lesson, once we have a bit of HTML output right here on the public front end,

14
00:00:52,130 --> 00:00:59,180
well, then in a future lesson, it'll be very easy to reuse that exact same HTML template and have

15
00:00:59,180 --> 00:01:01,730
it display in the admin area.

16
00:01:01,880 --> 00:01:03,860
But for now, let's start with this.

17
00:01:04,250 --> 00:01:11,870
So to begin working in our text editor in our plug in folder, jump into our files, a minds named featured

18
00:01:11,870 --> 00:01:18,470
Professor P, if we scroll down just a bit when we are registering our block type, you can see that

19
00:01:18,470 --> 00:01:22,630
our render callback function is named render callback.

20
00:01:22,970 --> 00:01:25,520
So we're just looking for the method with this name.

21
00:01:25,550 --> 00:01:27,110
So here it is right here.

22
00:01:27,860 --> 00:01:33,440
Now, instead of just returning a string of text with this paragraph, let's actually just completely

23
00:01:33,440 --> 00:01:36,750
hollow out the body of this function and start fresh.

24
00:01:37,250 --> 00:01:42,370
So I'm going to start with an if statement and say if parentheses curly brackets right after that.

25
00:01:42,380 --> 00:01:44,090
Let's also have an else block.

26
00:01:44,390 --> 00:01:52,430
And for the condition, I only want to output a custom string of HTML if a professor ID exists for this

27
00:01:52,430 --> 00:01:53,180
block type.

28
00:01:53,450 --> 00:01:59,000
In other words, if the user has just inserted this block type and they have not selected a value yet

29
00:01:59,180 --> 00:02:05,000
and then they actually save the blog post, well then I wouldn't want to return regenerator output any

30
00:02:05,000 --> 00:02:06,140
sort of HTML.

31
00:02:06,140 --> 00:02:07,760
I would just want to output nothing.

32
00:02:08,060 --> 00:02:11,570
So I'll say if and then we're just going to look in the attributes.

33
00:02:11,570 --> 00:02:17,690
So make sure you have a parameter here of dollar sign attributes will say if dollar sign attributes

34
00:02:17,690 --> 00:02:21,170
look inside the array with square brackets quotes.

35
00:02:21,620 --> 00:02:28,520
We named the attribute Proff I.D. So if that exists we want to do something, but else if it doesn't

36
00:02:28,520 --> 00:02:32,300
exist, let's just return null or nothing.

37
00:02:32,840 --> 00:02:34,360
If it does exist.

38
00:02:34,370 --> 00:02:35,870
Well, let's do two things.

39
00:02:36,200 --> 00:02:40,040
First of all, let's load our CSC file on the front end.

40
00:02:41,000 --> 00:02:45,110
And then let's just start with the d'Hiv so we can see that the styling is working.

41
00:02:45,110 --> 00:02:53,960
So I'm going to say WP on Q style parentheses to call it, and we've already registered our CFS file

42
00:02:53,960 --> 00:02:55,910
up here with this name.

43
00:02:56,330 --> 00:02:58,180
So that's all you need to give this one.

44
00:02:58,190 --> 00:03:02,410
We're on cuing the styles and just quotes paste in that exact name from up here.

45
00:03:02,780 --> 00:03:03,110
Cool.

46
00:03:03,110 --> 00:03:05,570
So we're loading a style that's already been registered.

47
00:03:06,080 --> 00:03:11,390
And then for now, just as a test, let's return and then we're going to have a string of text.

48
00:03:11,390 --> 00:03:17,420
But just so you can use your voice code tab trigger instead of wrapping it in quotes right away, we

49
00:03:17,420 --> 00:03:20,270
can just say div dot for a class.

50
00:03:20,600 --> 00:03:25,520
It's a div dot professor dash call-out and then just hit tab.

51
00:03:26,180 --> 00:03:33,410
OK, now we would wrap that in quotes and be sure to end the line with a semicolon and then in between

52
00:03:33,410 --> 00:03:35,060
the opening and closing div tags.

53
00:03:35,060 --> 00:03:37,550
For now let's just output the word hello.

54
00:03:38,210 --> 00:03:40,270
Let's give this a save and see what it looks like.

55
00:03:40,280 --> 00:03:42,890
So if we refresh on the front end.

56
00:03:45,170 --> 00:03:50,400
Perfect, we see hello, but more importantly, those CSI styles are coming through, so you can see

57
00:03:50,400 --> 00:03:55,010
it has a gray background, very subtle rounded corners and a subtle shadow.

58
00:03:55,460 --> 00:04:01,850
Now that we have this basic output working, I want to stop for a moment and talk about code organization.

59
00:04:02,240 --> 00:04:08,990
What I'm getting at here is we need to output a lot of HTML to create the desired layout, and it's

60
00:04:08,990 --> 00:04:10,220
just personal preference.

61
00:04:10,490 --> 00:04:17,990
But I don't want this file to become huge with a hundred lines of HTML is just my own opinion and preference.

62
00:04:17,990 --> 00:04:24,440
But I want this file to be sort of the top level view or the bird's eye view of everything that our

63
00:04:24,440 --> 00:04:27,970
block is doing right from 10000 feet in the sky.

64
00:04:28,160 --> 00:04:34,340
So I don't want this file to be concerned with the nitty gritty details of an HTML template.

65
00:04:34,640 --> 00:04:42,710
I would rather have the big HTML template live in its own separate file where that's its only responsibility.

66
00:04:43,160 --> 00:04:43,960
So check this out.

67
00:04:43,970 --> 00:04:48,010
Here's what I would do on this line where we're returning the HTML.

68
00:04:48,230 --> 00:04:50,210
Let's get rid of that string of text.

69
00:04:50,210 --> 00:04:55,970
So it's just return and now let's call a function that doesn't even exist yet, but that we will create

70
00:04:56,660 --> 00:05:04,220
I'm going to name it, generate professor HTML parentheses to call it in the parentheses.

71
00:05:04,220 --> 00:05:09,340
Let's be sure to give it the professor I.D. so it will know what to query for.

72
00:05:09,590 --> 00:05:12,350
So that's just dollar sign attributes.

73
00:05:12,860 --> 00:05:13,940
Look inside the array.

74
00:05:13,940 --> 00:05:17,660
So square brackets for Prof Idy.

75
00:05:18,230 --> 00:05:18,590
Cool.

76
00:05:18,590 --> 00:05:25,430
So the idea here is we can go create a function with this name in an entirely separate file and this

77
00:05:25,430 --> 00:05:26,930
way we stay organized.

78
00:05:27,230 --> 00:05:31,190
Now currently if we save this file we will get an error on the front end.

79
00:05:31,190 --> 00:05:35,690
If we reload, that's to be expected because we haven't created that function yet.

80
00:05:36,080 --> 00:05:37,070
So do this with me.

81
00:05:37,370 --> 00:05:39,710
Maybe in the root of your project folder.

82
00:05:40,020 --> 00:05:43,940
I mean you could create the file anywhere, but I think it's sort of a standard practice to create a

83
00:05:43,940 --> 00:05:44,660
new folder.

84
00:05:44,960 --> 00:05:51,530
And again, it could be named anything but let's name it I n c short for includes the name doesn't matter.

85
00:05:51,530 --> 00:05:56,810
This is just so you and I are on the same page and in that new folder, let's create a new file.

86
00:05:57,230 --> 00:05:59,060
You can name it anything, but I'll name it.

87
00:05:59,060 --> 00:06:06,770
Generate Professor html dot p p in this new file.

88
00:06:06,770 --> 00:06:14,660
Let's go into P and let's create a function definitions of function with the exact name of generate

89
00:06:15,200 --> 00:06:20,090
professor html parentheses curly brackets within the parentheses.

90
00:06:20,090 --> 00:06:23,720
Let's be sure to receive that incoming ID with a parameter.

91
00:06:23,720 --> 00:06:25,400
So just dollar sign, I'll name it.

92
00:06:25,730 --> 00:06:30,590
I'd infer now just as a test to make sure that things are lining up correctly.

93
00:06:30,980 --> 00:06:38,630
Let's just return a value of hello from our new file, semicolon.

94
00:06:39,230 --> 00:06:40,460
Let's give this a save.

95
00:06:41,060 --> 00:06:46,100
And now back in our original file, up towards the very top.

96
00:06:46,520 --> 00:06:50,360
What I like to do to stay organized is maybe write about here.

97
00:06:50,720 --> 00:06:56,930
So right above our class definition, I'll just list any and all files that I'm loading or requiring

98
00:06:56,930 --> 00:07:05,570
in so we can just say require once and then I'll use the plug in der path function inside the parentheses,

99
00:07:05,570 --> 00:07:08,540
underscore, underscore, file, underscore, underscore.

100
00:07:09,020 --> 00:07:11,630
After that, concatenate on quotes.

101
00:07:11,960 --> 00:07:22,670
Look inside the ANC folder that we created in the file name is generate professor html dot b and that

102
00:07:22,670 --> 00:07:23,830
with a semicolon.

103
00:07:24,260 --> 00:07:27,920
So now the contents of that file will be available within this file.

104
00:07:28,100 --> 00:07:32,000
So when we try to use it down here, it should work perfectly.

105
00:07:32,000 --> 00:07:35,420
So if we save that and refresh on the front end.

106
00:07:36,710 --> 00:07:43,610
Perfect, hello from our new file at this point, let's go back into that new file and actually start

107
00:07:43,610 --> 00:07:46,480
spelling out the query in the HTML.

108
00:07:46,970 --> 00:07:51,440
Let's actually delete this return line because we aren't ready yet to return anything.

109
00:07:51,650 --> 00:07:53,560
We first need to perform our query.

110
00:07:53,930 --> 00:07:55,310
So let's create a variable.

111
00:07:55,340 --> 00:08:03,260
You can name it anything, but only Proff post equals a new instance of the WordPress provided class

112
00:08:03,260 --> 00:08:05,600
WP underscore query.

113
00:08:05,840 --> 00:08:08,410
Woops, just the first letter of that is capitalized.

114
00:08:08,810 --> 00:08:11,120
So we're calling that inside the parentheses.

115
00:08:11,120 --> 00:08:14,720
We give it an array so array parentheses you can drop down.

116
00:08:15,290 --> 00:08:17,360
So first let's spell out the post type.

117
00:08:17,360 --> 00:08:23,180
So post type arrow symbol would be quotes professor.

118
00:08:23,600 --> 00:08:29,240
And technically this isn't even necessary because we already know the exact IDE of the post.

119
00:08:29,630 --> 00:08:36,440
But I'm including this because if somehow the editor for that blog post included a bogus ID number,

120
00:08:36,770 --> 00:08:43,040
well, our query is only going to actually find that post if it truly is of the professor post type.

121
00:08:43,430 --> 00:08:47,630
So let's also include a comma here and then we would want to include the IDE.

122
00:08:48,080 --> 00:08:53,870
So the option for that is just the letter P and then Arrow symbol and now we would just use the parameter,

123
00:08:53,900 --> 00:08:55,150
the ID for the post.

124
00:08:55,160 --> 00:08:56,970
So a dollar sign I'd.

125
00:08:57,510 --> 00:09:03,340
OK, so WP query will do its job and it's going to store its returned value in Proff post.

126
00:09:03,620 --> 00:09:09,290
So right below this, be sure to include a semicolon after these parentheses, but right below that

127
00:09:09,290 --> 00:09:12,500
we can just loop through that proff post.

128
00:09:12,860 --> 00:09:19,760
So while parentheses curly brackets for the while condition, it's just while dollar sign proff post

129
00:09:20,270 --> 00:09:27,560
look inside it so it's not equal or greater than a dash, greater than we're looking inside it for have

130
00:09:27,740 --> 00:09:34,910
posts and we're actually calling that inside the curly brackets for while it's a dollar sign Proff post

131
00:09:35,150 --> 00:09:38,500
Dasch greater than and then call the post.

132
00:09:38,930 --> 00:09:44,000
So this will make all of the standard WordPress functions like the title and the content.

133
00:09:44,300 --> 00:09:46,130
It'll make sure that those work perfectly.

134
00:09:46,640 --> 00:09:52,190
OK, now at this point below this line, we're ready to start spelling out our HTML.

135
00:09:52,520 --> 00:09:57,440
But remember, we want this function as a whole to return a value.

136
00:09:57,770 --> 00:10:02,270
In other words, we can't just drop out of and start outputting HTML.

137
00:10:02,570 --> 00:10:06,770
We need everything that we want to include here to be returned.

138
00:10:07,160 --> 00:10:17,090
So in situations like this, I like to use the Obbie start function output buffer, start semicolon,

139
00:10:17,360 --> 00:10:19,610
then let's drop out of P.

140
00:10:19,910 --> 00:10:23,900
Now on this line we could start to include HTML for now.

141
00:10:23,900 --> 00:10:31,430
Let's just have a dash to represent HTML here, but then on a new line we can go back into PHP.

142
00:10:31,850 --> 00:10:34,130
I'll drop down and we can do two things.

143
00:10:34,370 --> 00:10:42,230
First of all, let's use WP reset post data because we ran our own custom query and this is our way

144
00:10:42,230 --> 00:10:48,620
of just giving control or setting the Global Post object back to whatever WordPress was doing for the

145
00:10:48,620 --> 00:10:50,720
main query for this current page.

146
00:10:51,260 --> 00:10:58,280
And then after that, let's return Obbie get clean semicolon.

147
00:10:58,670 --> 00:11:04,060
So we're starting the output buffer here and then we're ending it and returning the value here.

148
00:11:04,790 --> 00:11:10,520
So now here where we have the dash, we are free to just list out our HTML template.

149
00:11:10,940 --> 00:11:18,320
So let's get rid of the dash and let's say div dot professor call-out inside that div.

150
00:11:18,320 --> 00:11:24,470
Let's have one div for the photo of the professor and one div for the right hand text content.

151
00:11:25,100 --> 00:11:31,190
So we'll just say div dot professor dash call-out underscore underscore photo.

152
00:11:32,230 --> 00:11:40,030
It's a tab below that d'Hiv, let's have d'Hiv dot professor dash, call-out, underscore, underscore,

153
00:11:40,030 --> 00:11:43,600
text hit tab in this text.

154
00:11:43,720 --> 00:11:49,270
If we can drop down, let's have a heading level five and it can just output the title for the professor.

155
00:11:49,270 --> 00:11:52,930
Posts are going to be inside there.

156
00:11:52,930 --> 00:11:58,270
We can just use the title below the professor name or title.

157
00:11:58,280 --> 00:12:00,130
We can have a paragraph of text.

158
00:12:00,130 --> 00:12:08,380
Let's go into HP and let's just echo a WordPress function called the WP trem words.

159
00:12:08,950 --> 00:12:11,160
You give this function to arguments.

160
00:12:11,170 --> 00:12:15,250
So Akama be the first is the string of text that you want to work with.

161
00:12:15,490 --> 00:12:18,700
The second argument is how many words you want to limit it to.

162
00:12:18,980 --> 00:12:24,580
So I just want to output maybe the first 30 words of the professor content.

163
00:12:24,760 --> 00:12:29,290
And then for the first argument, this would just be get the content.

164
00:12:30,200 --> 00:12:33,920
OK, before we go any further, let's save this and see what it looks like.

165
00:12:34,090 --> 00:12:40,720
So if we refresh perfect, Dr. Markkula, the first 30 words of the post and then the photo would go

166
00:12:40,720 --> 00:12:41,350
right here.

167
00:12:41,770 --> 00:12:47,320
And just to prove that this is truly dynamic, if I went back into the admin panel and changed this

168
00:12:47,320 --> 00:12:52,370
to Dr. Miaows a lot and clicked update as soon as we refresh the front end.

169
00:12:52,780 --> 00:12:53,590
Perfect.

170
00:12:54,160 --> 00:12:57,330
OK, let's work on outputting the photograph right here.

171
00:12:58,120 --> 00:13:03,570
I'm actually going to add it as a background image instead of an inline IMG element.

172
00:13:03,910 --> 00:13:10,420
This way we can use access to very easily make it perfectly fit the available height and space.

173
00:13:10,850 --> 00:13:16,480
So let's do this on that opening div for the underscore underscore photo div.

174
00:13:16,810 --> 00:13:20,920
Let's give it another attribute of style equals quotes.

175
00:13:21,460 --> 00:13:23,950
Background dash image.

176
00:13:24,940 --> 00:13:31,980
Colon, and then you are l pair of parentheses now in these parentheses, we need to do something dynamic.

177
00:13:31,990 --> 00:13:33,460
We need to point towards the file.

178
00:13:33,460 --> 00:13:42,100
So I'm going to go into P and we're just going to call the WordPress function, the post thumbnail,

179
00:13:42,100 --> 00:13:44,500
you RL parentheses to call it.

180
00:13:44,500 --> 00:13:49,300
And now in these parentheses you can tell it which size of the photo you want.

181
00:13:49,570 --> 00:13:57,180
So quotes earlier in the course we already registered an image size called Professor Portrait.

182
00:13:58,150 --> 00:14:02,770
OK, now if we give that a save and refresh perfect.

183
00:14:02,770 --> 00:14:09,940
So the text will handle sizing and centering the image so that it just works perfectly at this point.

184
00:14:09,940 --> 00:14:15,490
Let's switch our focus back to the text content, because if we look at the finished product example,

185
00:14:15,970 --> 00:14:16,960
we zoom in a little bit.

186
00:14:16,960 --> 00:14:22,810
We want to be able to say what they teach, which related subjects they have assigned to them.

187
00:14:23,140 --> 00:14:27,280
And then finally below that, we just want to link that points towards their individual.

188
00:14:27,280 --> 00:14:32,980
Professor Post, you are so back in the version that we're working on together, let's go back into

189
00:14:32,980 --> 00:14:33,820
our FTP.

190
00:14:34,030 --> 00:14:39,010
So we're interested in this text div and maybe below the 30 words summary.

191
00:14:39,550 --> 00:14:43,870
We need to look up any and all of their related programs or subjects.

192
00:14:44,260 --> 00:14:51,090
So to do that, I'm going to enter back into P, close out of it and then we can drop down.

193
00:14:51,490 --> 00:14:55,480
So I'm going to create a variable called related programs.

194
00:14:55,480 --> 00:15:02,020
You could name it anything and then set that to equal gett underscore field semicolon.

195
00:15:02,230 --> 00:15:07,960
And then earlier in the course, when we set up the professor post type, we set up an advanced custom

196
00:15:07,960 --> 00:15:17,680
field called quotes related programs, OK, on a new line only if this exists and there are indeed related

197
00:15:17,680 --> 00:15:18,490
programs.

198
00:15:18,970 --> 00:15:27,100
So if parentheses curly brackets only if dollar sign related programs evaluates to true, well then

199
00:15:27,100 --> 00:15:34,690
I would want to output HTML here, so I'll exit here and then enter back into here.

200
00:15:35,110 --> 00:15:38,050
OK then on this line we're free to go into HTML.

201
00:15:38,050 --> 00:15:42,820
So I just want to have a paragraph tag and I want to say that their name.

202
00:15:42,820 --> 00:15:44,620
So we'll fill this blank in in just a moment.

203
00:15:44,620 --> 00:15:50,560
But their name teaches colon and then instead of a bulleted list, I'm just going to have something

204
00:15:50,560 --> 00:15:56,020
that looks like a sentence almost wherewith list a subject and then a comma and then a space and then

205
00:15:56,020 --> 00:15:57,160
the next subject.

206
00:15:57,460 --> 00:15:59,380
And then we can end it all with a period.

207
00:15:59,680 --> 00:16:02,350
So I'm not ready to close out the paragraph element yet.

208
00:16:02,350 --> 00:16:09,040
Instead, I'm going to drop down right after the colon and I'm going to go into P so I can loop through

209
00:16:09,310 --> 00:16:14,650
all of the related programs and output them so close inside here.

210
00:16:14,650 --> 00:16:22,890
I'm just going to use a for each parentheses curly brackets inside the parentheses we can say dollar

211
00:16:22,960 --> 00:16:31,240
sign related programs as Dollar Sign, Key Arrow Symbol Dollar Sign program.

212
00:16:31,700 --> 00:16:36,790
OK, now inside the foreach I'm going to have one last if statement and I'm just going to check to see

213
00:16:37,030 --> 00:16:44,800
if you should have a comma and a space sort of separating the subjects or if you're the last item in

214
00:16:44,800 --> 00:16:46,120
the array of items.

215
00:16:46,390 --> 00:16:49,570
Obviously we don't need a comma and a space for the very final one.

216
00:16:50,020 --> 00:16:55,570
Also, if there's only one program in the entire list, then we don't need commas at all anywhere.

217
00:16:55,870 --> 00:17:00,910
So before we even get into the if statement logic, we know that each and every program should output

218
00:17:00,910 --> 00:17:01,600
its title.

219
00:17:01,600 --> 00:17:09,580
So let's just say Echo, get the title inside the parentheses, just dollar sign program semicolon.

220
00:17:09,700 --> 00:17:12,190
Now this is where we would use our conditional logic.

221
00:17:12,220 --> 00:17:18,250
So if parentheses currently brackets for the condition, the first thing I want to check for is if you

222
00:17:18,250 --> 00:17:20,680
are not the last item in the array.

223
00:17:21,130 --> 00:17:30,310
So dollar sign key if that does not equal array key last parentheses to call that and then you give

224
00:17:30,310 --> 00:17:34,330
it the array you're checking on so related programs.

225
00:17:34,690 --> 00:17:41,710
So if that's true and double ampersand and let's count to make sure the array has more than one item

226
00:17:41,710 --> 00:17:41,980
in it.

227
00:17:41,980 --> 00:17:49,660
So if count parentheses to call it, give it the array related programs if that's greater than one.

228
00:17:50,200 --> 00:17:56,560
So if both of these things are true, then inside the curly brackets we would just echo string of text

229
00:17:56,560 --> 00:18:03,640
that's a comma and then a space semicolon and then sort of to close out the overall sentence.

230
00:18:04,000 --> 00:18:07,360
Right before we have the closing P tag, let's just have a period.

231
00:18:07,660 --> 00:18:09,750
Let's give this a save and see what it looks like.

232
00:18:10,210 --> 00:18:15,790
So if I refresh woops, you can see there is a space after the final subject and before the period.

233
00:18:16,090 --> 00:18:22,420
This is because I forgot about white space and so be is aware of the white space before our period.

234
00:18:22,600 --> 00:18:24,310
So you would actually get rid of our period.

235
00:18:24,360 --> 00:18:31,500
Here and place it immediately after we exit here this way, there's no output, white space for me to

236
00:18:31,500 --> 00:18:31,990
notice.

237
00:18:32,010 --> 00:18:35,310
So if we save that and refresh, perfect.

238
00:18:35,710 --> 00:18:40,700
OK, finally, let's output the link to the professor detail screen.

239
00:18:41,040 --> 00:18:47,520
So back on our copy in our text editor right below this closing tag here.

240
00:18:48,210 --> 00:18:50,680
We can just have a paragraph tag.

241
00:18:50,970 --> 00:18:57,420
Let's have the entire thing be bold, so I'll wrap it in a strong tag and then we can just hit a tab

242
00:18:57,420 --> 00:18:58,220
for a link.

243
00:18:58,680 --> 00:19:01,170
Let's first add the actual clickable text.

244
00:19:01,680 --> 00:19:07,440
So inside the tags it would be learn more about and then it would be their name.

245
00:19:07,440 --> 00:19:12,510
So I'll just have an X for a placeholder and then let's have a space and sort of a right angle, the

246
00:19:12,510 --> 00:19:13,320
arrow symbol.

247
00:19:13,320 --> 00:19:18,120
So ampersand are a Q, you know, semicolon.

248
00:19:18,660 --> 00:19:21,600
OK, let's replace the X placeholder with the professor's name.

249
00:19:21,600 --> 00:19:28,430
So we would just go into P and call the title, then let's fill in the RF value.

250
00:19:28,770 --> 00:19:34,020
So in the quotes we would just go into P and use the permalink.

251
00:19:34,680 --> 00:19:36,810
Let's give this a save and test it out.

252
00:19:36,830 --> 00:19:44,280
So if I refresh perfect so I can click on it and it takes me to that permalink or individual uttara

253
00:19:44,610 --> 00:19:46,800
that is going to bring this video to a close.

254
00:19:46,800 --> 00:19:53,850
But in our very next lesson, we're going to learn how to reuse that same HTML template for the live

255
00:19:53,850 --> 00:19:55,790
preview on the edit screen.

256
00:19:56,280 --> 00:19:58,560
Let's keep things rolling and I'll see you then.
