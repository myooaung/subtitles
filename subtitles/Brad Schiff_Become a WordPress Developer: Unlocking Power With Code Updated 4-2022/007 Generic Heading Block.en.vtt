WEBVTT
1
00:00:02.280 --> 00:00:03.150
Hello, everyone.

2
00:00:03.480 --> 00:00:07.830
In this lesson, we're going to start working on our generic heading block.

3
00:00:08.190 --> 00:00:09.930
Let's jump right into the action.

4
00:00:10.500 --> 00:00:13.950
So in our previous lesson, we set up this basic banner block.

5
00:00:14.250 --> 00:00:19.140
Now we want to create a new custom block that you can nest inside the banner.

6
00:00:19.650 --> 00:00:28.260
So to get started, I want us to jump in to our functions dot ap file in functions dot b scroll down

7
00:00:28.260 --> 00:00:29.520
to the very bottom.

8
00:00:30.670 --> 00:00:36.100
So remember, this is where we wrote the code that registered our banner block.

9
00:00:36.760 --> 00:00:42.850
Well, in this chapter, we're going to create a lot of custom blocks, and we don't want to have to

10
00:00:42.850 --> 00:00:45.520
repeat this code for each block.

11
00:00:46.030 --> 00:00:46.270
Right.

12
00:00:46.270 --> 00:00:47.890
That would get super repetitive.

13
00:00:48.220 --> 00:00:55.720
So what I like to do is create a reusable class and then we can just leverage it once for each block

14
00:00:55.720 --> 00:00:56.860
that we want to register.

15
00:00:57.220 --> 00:00:58.480
So here's what I would do.

16
00:00:58.570 --> 00:01:04.390
Maybe at the very bottom, let's add a new line of code and let's say class, and you can make up any

17
00:01:04.390 --> 00:01:05.150
name you want.

18
00:01:05.170 --> 00:01:13.230
I'm going to make up a name of J as X block curly brackets within our class here.

19
00:01:13.240 --> 00:01:18.220
Let's have a function with the very, very specific name of underscore.

20
00:01:18.220 --> 00:01:19.120
Underscore.

21
00:01:19.720 --> 00:01:20.620
Construct.

22
00:01:21.430 --> 00:01:22.240
Parentheses.

23
00:01:22.450 --> 00:01:23.470
Curly brackets.

24
00:01:24.160 --> 00:01:30.190
We want to use this exact name because we'll look for a method or function with this name.

25
00:01:30.310 --> 00:01:33.160
When you create a new object from this class.

26
00:01:33.700 --> 00:01:37.270
So for example, below all of this class code at the very, very bottom.

27
00:01:37.270 --> 00:01:44.210
Now we could say something like we want a new instance of J as X block semicolon.

28
00:01:44.230 --> 00:01:49.690
Now, in these parentheses, when we're instantiating a new J block instance, you can just give it

29
00:01:49.690 --> 00:01:50.190
a value.

30
00:01:50.200 --> 00:01:53.170
So let's give it a string of text called banner.

31
00:01:53.650 --> 00:01:53.880
Okay.

32
00:01:53.920 --> 00:01:58.780
And then right below that line, imagine we would also say we want a new instance of X block.

33
00:01:59.350 --> 00:01:59.920
Call that.

34
00:02:00.070 --> 00:02:04.570
Give it a string value of quotes, maybe generic heading.

35
00:02:05.290 --> 00:02:05.620
Okay.

36
00:02:05.620 --> 00:02:09.820
And then the idea is this is really the only value that would be dynamic.

37
00:02:10.060 --> 00:02:15.760
So if we think about this code that we don't want to repeat over and over, really the only thing that's

38
00:02:15.760 --> 00:02:18.950
going to change or be dynamic is the name of our JavaScript file.

39
00:02:18.970 --> 00:02:19.930
The name of our block.

40
00:02:20.200 --> 00:02:22.000
Right, the value that we're providing here.

41
00:02:22.390 --> 00:02:24.280
So now let's just build out our class.

42
00:02:24.790 --> 00:02:29.290
So first of all, in our construct function within these parentheses, let's have a parameter name at

43
00:02:29.290 --> 00:02:31.360
dollar sign name.

44
00:02:32.020 --> 00:02:32.470
Okay.

45
00:02:32.710 --> 00:02:38.140
Then in our construct function, let's have a property where we store that value so that we can access

46
00:02:38.140 --> 00:02:40.000
it from any method in the class.

47
00:02:40.030 --> 00:02:43.780
So dollar sign this arrow symbol.

48
00:02:43.780 --> 00:02:51.130
So dash greater than, let's call it, name equals and then just pull in this value dollar sign name

49
00:02:51.610 --> 00:02:53.530
semicolon on a new line.

50
00:02:53.530 --> 00:02:55.230
Let's now add an action.

51
00:02:55.240 --> 00:02:58.780
So add action so a comma be.

52
00:02:59.650 --> 00:03:01.840
The event that we want to hook on to is init.

53
00:03:02.710 --> 00:03:04.390
And then what function do we want to call?

54
00:03:04.420 --> 00:03:08.410
Well, we haven't created this method yet, but we can create it in about 10 seconds from now.

55
00:03:08.440 --> 00:03:16.960
So instead of the placeholder quotes, let's make up a name of on init call now within our class but

56
00:03:16.960 --> 00:03:18.550
below this construct function.

57
00:03:18.550 --> 00:03:21.390
So right here let's just create a function with that name.

58
00:03:21.400 --> 00:03:25.270
So function on init parentheses, curly brackets.

59
00:03:25.930 --> 00:03:28.420
And now we can just borrow all of this code.

60
00:03:28.810 --> 00:03:33.910
So up in our banner block function, the code that we don't want to repeat over and over starts selecting

61
00:03:33.910 --> 00:03:38.980
from WP Register script down to the three lines of code for register block type.

62
00:03:38.980 --> 00:03:42.580
Just copy those lines in on.

63
00:03:42.580 --> 00:03:43.870
Image pasted in.

64
00:03:44.950 --> 00:03:45.370
Okay.

65
00:03:45.550 --> 00:03:52.840
And now really all we need to do is hollow out the names so that they're not specific and instead use

66
00:03:52.870 --> 00:03:55.550
whatever value was passed into our class.

67
00:03:55.570 --> 00:04:00.400
So that's this dollar sign name or actually we made it available from this property.

68
00:04:01.450 --> 00:04:07.750
So for example, on WP Register script, let's get rid of this hardcoded name that's specific to a banner.

69
00:04:09.060 --> 00:04:14.250
So instead for that first argument, it would just be dollar sign this arrow symbol name.

70
00:04:14.820 --> 00:04:19.240
Okay then if we scroll over a little bit to the right, we wouldn't want a hard code to load banner.

71
00:04:19.620 --> 00:04:24.510
Yes, we would want this to be, you know, the wild card variable named Dot Jess.

72
00:04:25.260 --> 00:04:29.310
Now, there are a hundred different ways that you could work with concatenating the text together.

73
00:04:29.610 --> 00:04:30.600
But here's what I would do.

74
00:04:30.960 --> 00:04:34.830
If we use double quotes for this little bit of text instead of single quotes.

75
00:04:34.860 --> 00:04:36.690
So I just swap those two double quotes.

76
00:04:37.140 --> 00:04:38.730
Well, now we can do this.

77
00:04:39.210 --> 00:04:44.820
Wrap the word banner, the part that we want to hollow out, wrap that in curly brackets, and then

78
00:04:45.300 --> 00:04:47.220
in the curly brackets, hollow that out.

79
00:04:47.580 --> 00:04:51.240
And now we can just say dollar sign this arrow symbol name.

80
00:04:52.170 --> 00:04:52.540
Cool.

81
00:04:52.560 --> 00:04:54.960
Let's keep hollowing out the next few lines of code.

82
00:04:55.230 --> 00:04:58.590
So our block name, that's always going to be our namespace, but we don't want to.

83
00:04:58.590 --> 00:05:00.090
Hard code this banner.

84
00:05:00.480 --> 00:05:03.210
So just do the same thing because these are using double quotes.

85
00:05:03.630 --> 00:05:06.170
I'm just going to get rid of banner curly brackets.

86
00:05:06.180 --> 00:05:08.550
Dollar sign this arrow symbol name.

87
00:05:09.300 --> 00:05:10.530
Let's do the same thing here.

88
00:05:11.010 --> 00:05:14.350
We don't need to worry about concatenating anything here, so we don't need quotes at all.

89
00:05:14.370 --> 00:05:20.760
We can literally just pull in dollar sign this arrow symbol name cool at this point to test this out.

90
00:05:20.790 --> 00:05:21.780
Here's what we're going to do.

91
00:05:22.050 --> 00:05:27.180
Scroll up a little bit and I want you to just completely delete all of our banner block code.

92
00:05:27.750 --> 00:05:30.060
So get rid of the entire banner block function.

93
00:05:30.070 --> 00:05:33.270
Get rid of this line where we said add action and net banner block.

94
00:05:34.080 --> 00:05:34.440
Cool.

95
00:05:34.650 --> 00:05:38.700
So now we just have our reusable class and then we're leveraging it.

96
00:05:39.060 --> 00:05:41.150
One last detail before we save this file.

97
00:05:41.160 --> 00:05:43.710
I did lead you astray on this line of code.

98
00:05:44.190 --> 00:05:47.790
This is not the correct syntax to point to and execute a method.

99
00:05:47.820 --> 00:05:53.070
So for the second argument here, when we're saying add action and it hollow out that second argument,

100
00:05:53.070 --> 00:05:54.860
instead we give it an array.

101
00:05:54.870 --> 00:05:59.910
So square brackets, we give it a comma, be the first thing you give it is the object or the class

102
00:05:59.910 --> 00:06:00.380
itself.

103
00:06:00.390 --> 00:06:01.630
So dollar sign this.

104
00:06:02.310 --> 00:06:05.550
And then the second thing you give it is quotes the name of the method.

105
00:06:05.550 --> 00:06:12.750
So on init you might remember we used this syntax over and over again in our plug in development chapter.

106
00:06:13.230 --> 00:06:16.710
Anyways, to test this out to make sure it's working, let's just give it a save.

107
00:06:17.160 --> 00:06:20.310
And then back in the template editor screen if we refresh.

108
00:06:23.330 --> 00:06:23.820
Perfect.

109
00:06:23.840 --> 00:06:29.900
You'll know that you wrote that OP correctly if your ban or block still exists and it's still working.

110
00:06:30.680 --> 00:06:31.070
Cool.

111
00:06:31.280 --> 00:06:36.170
So at this point, remember, we also leveraged this same class for generic headings.

112
00:06:36.170 --> 00:06:41.630
So now we can just go create a JavaScript file with this name and that's really all we need to do.

113
00:06:42.050 --> 00:06:45.680
So check this out in our sidebar in the Our Blocks folder.

114
00:06:45.950 --> 00:06:50.960
Just create a new file, name it generic heading JS Right.

115
00:06:50.960 --> 00:06:53.730
Or whatever you chose here as your value.

116
00:06:53.750 --> 00:06:58.710
Hopefully you're following along with me just so we stay on the same page, but generic heading, generic

117
00:06:58.730 --> 00:06:58.910
heading.

118
00:06:59.150 --> 00:07:05.120
JS In order to save a bit of typing, why don't we just borrow the contents of Banner Dot JS?

119
00:07:05.300 --> 00:07:11.630
So just select everything in banner, copy it pasted into the new empty generic heading and now let's

120
00:07:11.630 --> 00:07:12.680
just hollow it out a bit.

121
00:07:13.070 --> 00:07:19.130
So we're not going to need inner blocks up here at the very top x, let's customize the block name.

122
00:07:19.130 --> 00:07:26.120
So we want the same namespace, but instead of slash banner this would be slash generic heading.

123
00:07:26.630 --> 00:07:32.330
Let's change the title value generic heading for the edit component.

124
00:07:32.330 --> 00:07:33.980
We definitely don't need this.

125
00:07:33.980 --> 00:07:38.330
Use me later constant so we can get rid of that in terms of what we want to return.

126
00:07:38.960 --> 00:07:43.040
Well, for now let's just have a div that says hello.

127
00:07:43.850 --> 00:07:48.140
So div hello in terms of what we want to save.

128
00:07:48.350 --> 00:07:53.570
Well, again, just for a quick test to make sure that everything's working, let's just return a div

129
00:07:53.570 --> 00:07:54.290
or a paragraph.

130
00:07:54.290 --> 00:07:59.330
Doesn't really matter that says this is our heading block.

131
00:08:00.350 --> 00:08:01.340
Let's give that a save.

132
00:08:01.340 --> 00:08:06.230
And now to truly test this out, we do need to adjust our package JSON file.

133
00:08:06.500 --> 00:08:13.850
So right now jump into package dot JSON on this start task, we just want to point towards that new

134
00:08:13.850 --> 00:08:15.470
generic heading JavaScript file.

135
00:08:15.800 --> 00:08:20.360
You can tell the WordPress package to use as many files as you want as an entry point.

136
00:08:20.840 --> 00:08:26.030
So at the end of this line, let's just add on a space and say, you know, also look in the our blocks

137
00:08:26.030 --> 00:08:33.830
folder slash for generic heading JS, that's all we need to do for our save and then just start up that

138
00:08:33.830 --> 00:08:34.430
task.

139
00:08:34.760 --> 00:08:37.610
So NPM run start.

140
00:08:39.900 --> 00:08:40.270
Cool.

141
00:08:40.290 --> 00:08:43.170
So now back on the template screen refresh.

142
00:08:45.450 --> 00:08:49.800
We won't be able to add it to our banner yet because remember, it's restricting which blocks you're

143
00:08:49.800 --> 00:08:50.510
allowed to add.

144
00:08:50.520 --> 00:08:55.290
But if you try to add it outside of the ban or block for now, so adblock block and if I start searching

145
00:08:55.290 --> 00:08:57.990
for generic there it is generic heading.

146
00:08:59.130 --> 00:09:04.020
You see the word hello if we save it and then look at the front end, we should see that bit of placeholder

147
00:09:04.020 --> 00:09:04.560
text.

148
00:09:04.560 --> 00:09:04.890
Yep.

149
00:09:05.340 --> 00:09:06.870
This is our heading block.

150
00:09:07.380 --> 00:09:07.740
Cool.

151
00:09:07.980 --> 00:09:15.630
So now all we need to do is adjust our banner block to only allow our custom block type of generic heading.

152
00:09:16.440 --> 00:09:19.350
So do this with me within our our blocks folder.

153
00:09:19.350 --> 00:09:22.530
Jump into banner dot J.S. down.

154
00:09:23.040 --> 00:09:24.900
For me it's around line number 27.

155
00:09:24.900 --> 00:09:31.890
But we see inner blocks allowed blocks equals and then it's an array well just hollow out the array.

156
00:09:32.340 --> 00:09:34.620
And for now we just want one value of quotes.

157
00:09:34.980 --> 00:09:42.540
And then remember our namespace is our block theme forward slash generic heading.

158
00:09:42.960 --> 00:09:45.360
That's the only block type we want to allow for now.

159
00:09:45.360 --> 00:09:52.020
In the future we can add more, but if we give that a save and then go back into the template editor

160
00:09:52.020 --> 00:09:52.770
and refresh.

161
00:09:56.040 --> 00:10:01.320
If we try to add a new block in the banner, it only lets us add that generic heading.

162
00:10:01.920 --> 00:10:03.470
Why don't we give ourselves a clean slate?

163
00:10:03.480 --> 00:10:08.360
So if you just click anywhere on the banner itself and then hit the backspace key on your keyboard,

164
00:10:08.370 --> 00:10:10.490
and then I'll also delete this generic headline here.

165
00:10:10.500 --> 00:10:15.630
But now the point is, if we start fresh and add in our banner block, search for banner.

166
00:10:15.630 --> 00:10:16.200
There it is.

167
00:10:17.310 --> 00:10:17.480
Okay.

168
00:10:17.490 --> 00:10:21.330
And then if you try to add a piece of content into the empty banner block, you can see if you even

169
00:10:21.330 --> 00:10:22.020
hover over.

170
00:10:22.230 --> 00:10:24.240
The only option here is add generic heading.

171
00:10:24.750 --> 00:10:25.170
Cool.

172
00:10:26.070 --> 00:10:29.850
In our next lesson, we'll actually start building out the generic heading block type.

173
00:10:30.150 --> 00:10:34.680
For this lesson, I really just wanted to get the repetitive AP solution out of the way.

174
00:10:35.400 --> 00:10:36.930
Let me go ahead and save this template.

175
00:10:37.470 --> 00:10:43.980
Also, one final detail, totally optional, but back in, for example, banner dot g's up at the very

176
00:10:43.980 --> 00:10:44.400
top.

177
00:10:44.820 --> 00:10:51.150
Remember, we used this import syntax if you wanted to, you could use this import syntax for the register

178
00:10:51.150 --> 00:10:52.530
block type function as well.

179
00:10:53.280 --> 00:11:00.710
So for example, you don't have to do this, but you could say import curly brackets and look for register

180
00:11:01.140 --> 00:11:08.550
block type from and the package name would be at symbol WordPress slash blocks.

181
00:11:09.420 --> 00:11:09.690
Right.

182
00:11:09.690 --> 00:11:14.550
And then on this line of code, you wouldn't need the WP dot blocks, dot get rid of that.

183
00:11:14.550 --> 00:11:18.240
It would literally just be using this directly if you wanted to.

184
00:11:18.240 --> 00:11:23.070
You could do the same thing in our generic heading JS file, so I would just copy this line of code

185
00:11:23.760 --> 00:11:29.100
up at the top of generic heading, just paste it in and then you can get rid of the WP dot blocks dot

186
00:11:29.970 --> 00:11:30.720
just like this.

187
00:11:31.290 --> 00:11:35.670
If we give that a save and also save banner JS, we can go test it out.

188
00:11:36.300 --> 00:11:38.370
So if we refresh our template edit screen.

189
00:11:41.470 --> 00:11:41.890
Cool.

190
00:11:41.920 --> 00:11:43.690
Everything still works wonderfully.

191
00:11:44.320 --> 00:11:46.000
It's going to bring this quick lesson to a close.

192
00:11:46.030 --> 00:11:52.960
In our next lesson, we're going to learn how to turn this into a rich text field that not only looks

193
00:11:52.960 --> 00:11:59.230
stylistically exactly like our fictional university headlines, but also takes advantage of the word

194
00:11:59.230 --> 00:11:59.620
press.

195
00:12:00.010 --> 00:12:02.020
Bold and italic icons.

196
00:12:02.530 --> 00:12:08.980
In other words, it will look like our custom headline, but it will behave just like a native rich

197
00:12:08.980 --> 00:12:09.450
text.

198
00:12:09.460 --> 00:12:11.200
WordPress BLOCK Editor Field.

199
00:12:11.590 --> 00:12:14.080
Let's keep our momentum rolling and I'll see you then.
