WEBVTT
1
00:00:00.330 --> 00:00:07.170
At this point, let's use the strategy we just learned to add a delete option for each row so you can

2
00:00:07.170 --> 00:00:12.320
imagine there's an extra column here with maybe a red X that you click on to delete that pet.

3
00:00:12.810 --> 00:00:18.930
To do that, let's jump in to our template file and let's look for the very beginning of the overall

4
00:00:18.930 --> 00:00:19.590
table.

5
00:00:19.980 --> 00:00:22.320
So this first row has all of the labels.

6
00:00:22.920 --> 00:00:26.340
Let's add a label at the very end that says delete.

7
00:00:26.910 --> 00:00:34.020
Now, I would only want to show this to admin users so you could use and say if parentheses curly brackets

8
00:00:34.020 --> 00:00:44.910
for the condition, it would just be if current user can administrator exit here, enter before the

9
00:00:44.910 --> 00:00:45.660
curly bracket.

10
00:00:46.230 --> 00:00:50.670
And then I would just say for a table header and just say delete.

11
00:00:51.630 --> 00:00:57.110
OK, now we also want to add an extra row to the dynamic row that gets output for each pet.

12
00:00:57.150 --> 00:01:03.870
So if we scroll down just a little bit after this last TD, we would just add one more TD in between

13
00:01:03.870 --> 00:01:08.610
the opening and closing TD all dropdown just so we have a little bit more space to work with.

14
00:01:09.030 --> 00:01:16.920
And inside it, let's have a form, some form tab for the action we can go into and just echo escape

15
00:01:16.920 --> 00:01:23.600
you rl in those parentheses a admin RL and give that a value of admin post http.

16
00:01:23.640 --> 00:01:29.010
Once again, let's also give the opening form tag a method of post.

17
00:01:30.110 --> 00:01:35.160
OK, now in the actual HTML form tag, let's have a hidden input.

18
00:01:35.610 --> 00:01:40.140
So input hit tab, change it to hidden it just like we did before.

19
00:01:40.500 --> 00:01:47.060
We know that its name needs to be exactly action, but then it's value we get to make that up.

20
00:01:47.070 --> 00:01:48.920
So let's call it delete pet.

21
00:01:49.740 --> 00:01:56.250
OK, blow this, let's have another hidden input that contains the ID number of the pet that we want

22
00:01:56.250 --> 00:01:56.880
to delete.

23
00:01:57.470 --> 00:02:02.040
So just input, let's set it to hidden, let's set its name.

24
00:02:02.040 --> 00:02:03.120
We get to make this up.

25
00:02:03.420 --> 00:02:15.150
How about ID to delete and I'll just give it a value of going to be and I'll just echo our pet items.

26
00:02:15.150 --> 00:02:15.890
A dollar pet.

27
00:02:16.040 --> 00:02:19.140
Look inside it for ID below this.

28
00:02:19.140 --> 00:02:23.670
Let's have a button that you actually click on to perform the delete or submit this form I should say.

29
00:02:23.670 --> 00:02:28.260
So button it tab just an uppercase X for visual styling.

30
00:02:28.260 --> 00:02:32.760
You can give it a class of delete pett button.

31
00:02:33.390 --> 00:02:40.500
And again for visual styling we can give this overall to a style of text align center.

32
00:02:41.040 --> 00:02:46.110
And let's not forget that this entire TD should really only be shown if you're an administrative user.

33
00:02:46.110 --> 00:02:50.790
So I would just cut that entire TD into my clipboard, wrap it in an IF statement.

34
00:02:50.790 --> 00:03:02.340
So in P if parentheses curly brackets if would be current user can quotes administrator exit P there.

35
00:03:02.340 --> 00:03:07.410
Go back into P here in between we can just paste in our clipboard.

36
00:03:08.010 --> 00:03:10.740
OK, let's give this a save and see what it looks like.

37
00:03:12.420 --> 00:03:18.300
Perfect, so now when you click the delete button for one of these, it's going to send a request to

38
00:03:18.300 --> 00:03:26.280
admin post with the action that we want to perform, which is delete and will have the I.D. of the exact

39
00:03:26.280 --> 00:03:27.100
item to delete.

40
00:03:27.600 --> 00:03:28.560
So let's just go right.

41
00:03:28.560 --> 00:03:30.670
That function and action hook now.

42
00:03:31.080 --> 00:03:36.810
So back in our main file, up at the top, we would just add another two actions.

43
00:03:37.230 --> 00:03:42.840
So you could actually just duplicate these two lines for create pet, just copy and paste them right

44
00:03:42.840 --> 00:03:48.010
below and just change it from create pet to delete pet.

45
00:03:48.600 --> 00:03:53.310
So the action hook name and the function that we want to call, we can create a function called delete

46
00:03:53.310 --> 00:03:53.700
pet.

47
00:03:54.090 --> 00:03:56.250
Change that for this no priv line as well.

48
00:03:56.250 --> 00:04:01.110
So delete pet the method we're calling delete pet.

49
00:04:01.530 --> 00:04:04.590
I would just then create a function right below the function.

50
00:04:04.590 --> 00:04:08.040
Delete pet parentheses, curly brackets.

51
00:04:08.880 --> 00:04:13.860
Actually to save a good amount of typing, let's just duplicate the create pet function and reuse it.

52
00:04:13.860 --> 00:04:16.590
So I'll just copy the entirety of create pet.

53
00:04:17.100 --> 00:04:19.830
Let's get rid of delete pet and just paste in our clipboard.

54
00:04:19.950 --> 00:04:22.520
Change the function name to delete pet.

55
00:04:23.430 --> 00:04:25.770
So I'm happy with this if else structure.

56
00:04:25.770 --> 00:04:30.240
But if the user has permission we don't need to generate a random pet.

57
00:04:31.200 --> 00:04:34.140
I do still want to sanitize an incoming value though.

58
00:04:34.140 --> 00:04:40.680
So let's change in this area when we're looking at the incoming post request, change the quoted item

59
00:04:40.680 --> 00:04:42.820
that we're looking for to be I.

60
00:04:42.870 --> 00:04:50.340
D to delete and then let's save that into a variable simply called dollar sign ID.

61
00:04:50.750 --> 00:04:56.760
OK, we still want to make the global WP DB available instead of using its insert method.

62
00:04:56.760 --> 00:04:59.160
We want to use a method called delete.

63
00:04:59.670 --> 00:05:01.380
First argument is still the table.

64
00:05:01.380 --> 00:05:03.240
We're working with the second argument.

65
00:05:03.630 --> 00:05:11.070
Well, we'll just give it an array with just one property of IDE and set its value to dollar sign.

66
00:05:11.070 --> 00:05:13.610
I'd write the one that we want to delete.

67
00:05:14.040 --> 00:05:18.270
Finally, just a little bit of security when it comes to the redirect and we should actually go ahead

68
00:05:18.270 --> 00:05:20.670
and do this for our example as well.

69
00:05:20.970 --> 00:05:26.280
Instead of just WP redirect, we should use a function called WP Safe.

70
00:05:26.280 --> 00:05:27.780
Underscore, redirect.

71
00:05:28.110 --> 00:05:29.940
Let's do that for the else block as well.

72
00:05:29.940 --> 00:05:32.490
So WP safe redirect.

73
00:05:32.730 --> 00:05:37.380
And then any time you're using redirect, it's always a good idea after it to call exit.

74
00:05:37.920 --> 00:05:42.720
Now instead of calling exit once after this line and once after this line, we could just include it

75
00:05:42.720 --> 00:05:49.050
once after the if else block right here and say exit, let's do the same thing for create pet.

76
00:05:49.080 --> 00:05:53.100
So just change WP redirect to safe redirect.

77
00:05:54.720 --> 00:05:59.760
This function essentially checks the Eurail that we're redirecting to to make sure that it's a local.

78
00:05:59.760 --> 00:06:06.630
You are well on our own website and then after both the IF and the else we can just call exit, let's

79
00:06:06.630 --> 00:06:10.770
go ahead and save this and test out our delete functionality.

80
00:06:11.760 --> 00:06:17.640
So I'll refresh my front end so we can see that my first entry, if I'm not performing any attribute

81
00:06:17.640 --> 00:06:19.440
queries, just the basic URL.

82
00:06:19.740 --> 00:06:23.100
My first entry is called Stylish Princess the Fifth.

83
00:06:23.640 --> 00:06:29.310
If I click this delete icon, it redirects me back and cool.

84
00:06:29.310 --> 00:06:32.220
That's no longer the first item to test it out again.

85
00:06:32.220 --> 00:06:37.050
You can see I currently have one hundred thousand and three items if I delete the first one.

86
00:06:37.680 --> 00:06:38.250
Perfect.

87
00:06:38.340 --> 00:06:39.930
One hundred thousand and two.

88
00:06:40.410 --> 00:06:41.400
Just a random tip.

89
00:06:41.400 --> 00:06:47.660
If you wanted this large number to add a comma after every three digits, well let's go do that.

90
00:06:47.670 --> 00:06:51.930
So in our template, let's find that paragraph right above the table.

91
00:06:52.350 --> 00:06:58.980
So where it says found and then the number, you can just wrap this in a function, a function called

92
00:06:58.980 --> 00:07:00.720
number dash format.

93
00:07:01.170 --> 00:07:04.410
So opening parentheses, closing parentheses here.

94
00:07:05.010 --> 00:07:08.010
Now, if we reload, perfect.

95
00:07:08.550 --> 00:07:12.690
And that is going to bring this lesson and this chapter to a close.

96
00:07:13.230 --> 00:07:17.280
Now, you might be thinking, hey, we didn't finish the pet adoption feature.

97
00:07:17.550 --> 00:07:17.820
Right.

98
00:07:17.820 --> 00:07:24.030
There's no form that guests can fill out to control which type of pets they see in the real world.

99
00:07:24.030 --> 00:07:28.680
You wouldn't actually expect people to have to manually type in their own Queretaro.

100
00:07:29.490 --> 00:07:32.640
There's also no ability to edit an existing item.

101
00:07:33.060 --> 00:07:37.290
And in terms of creating a pet, we're just filling in that one name field.

102
00:07:37.500 --> 00:07:44.160
So the whole point of this database chapter was not to be a 20 hour course on its own where we build

103
00:07:44.160 --> 00:07:46.740
a complete plug in with our own database table.

104
00:07:47.010 --> 00:07:51.900
I don't believe that would make for good educational material because at the end of the day, it has

105
00:07:51.900 --> 00:07:54.210
nothing to do with WordPress.

106
00:07:54.630 --> 00:08:02.310
The main idea here is once you leave the comfort of the concept of a post in WordPress, it's essentially

107
00:08:02.310 --> 00:08:03.930
the wild, wild West.

108
00:08:04.320 --> 00:08:04.590
Right?

109
00:08:04.590 --> 00:08:06.660
You're managing your own SQL statements.

110
00:08:06.660 --> 00:08:09.060
You're building your own queries and commands.

111
00:08:09.360 --> 00:08:11.640
And WordPress really isn't doing.

112
00:08:11.830 --> 00:08:18.310
Anything for us anymore, we've taken matters so much into our own hands that it's basically not even

113
00:08:18.310 --> 00:08:25.400
a WordPress course any longer and there are a billion different ways to write and SQL statements.

114
00:08:25.690 --> 00:08:30.700
Hopefully, though, these examples that we've worked through have shown you that it's not rocket science

115
00:08:30.820 --> 00:08:33.700
to set up your own custom database solution.

116
00:08:34.060 --> 00:08:37.670
I encourage you to take the concepts we've learned here and run with them.

117
00:08:37.810 --> 00:08:45.130
I think a really fun extra credit assignment would be to tie this custom database solution into custom

118
00:08:45.130 --> 00:08:52.020
rest API endpoints, write something that you could leverage on the front end with client side JavaScript.

119
00:08:52.450 --> 00:08:57.820
I'm not going to cover that in a chapter because I'd really just be repeating concepts that we've already

120
00:08:57.820 --> 00:09:01.930
learned, just that we haven't combined in that exact fashion.

121
00:09:02.380 --> 00:09:07.020
Anyways, that sort of brings us full circle into the nature of plug ins in the first place.

122
00:09:07.330 --> 00:09:13.840
There's an infinite number of ways that you can combine all of these different WordPress tools and technologies.

123
00:09:14.110 --> 00:09:15.610
That's the beauty of plug ins.

124
00:09:15.790 --> 00:09:18.820
You'll have a million different ideas for plug ins than I will.

125
00:09:19.000 --> 00:09:23.380
And there's so many different tools at your disposal to bring that plug in to life.

126
00:09:23.650 --> 00:09:29.800
Having said that, I don't think a 5000 hour long plug in section would make for a very useful course.

127
00:09:30.290 --> 00:09:32.560
So that is going to bring this chapter to a close.

128
00:09:32.740 --> 00:09:36.420
I encourage you to keep experimenting and building new plug ins.

129
00:09:36.730 --> 00:09:40.540
Let's keep things rolling and I will see you in the next lesson.
