WEBVTT
1
00:00:05.640 --> 00:00:10.140
Hello and welcome back to the advanced course in R programming in this tutorial we're going to learn

2
00:00:10.140 --> 00:00:12.000
about apply family functions.

3
00:00:12.120 --> 00:00:17.820
We're going to aim to understand the underlying fundamental principle behind them and how they operate

4
00:00:17.850 --> 00:00:22.740
and why and also through that we will see why they were created in the first place.

5
00:00:22.770 --> 00:00:24.190
So let's jump straight into it.

6
00:00:24.390 --> 00:00:26.870
Here we've got a matrix of three rows and five columns.

7
00:00:27.060 --> 00:00:29.900
Let's say this matrix has a name and it's called M.

8
00:00:29.910 --> 00:00:33.390
Now let's see what happens when we apply the simplest of the apply.

9
00:00:33.390 --> 00:00:37.070
Family of functions the Apply function to this matrix.

10
00:00:37.080 --> 00:00:40.750
So in order to do that would type in a line that looks something like this.

11
00:00:40.860 --> 00:00:47.190
Apply then the first argument would be m meaning the matrix that we want to use this function on then

12
00:00:47.280 --> 00:00:50.330
number one and we'll understand what number 1.

13
00:00:50.400 --> 00:00:56.790
In this case means just in the second and then a function that we want to use on the matrix.

14
00:00:56.790 --> 00:01:00.320
So here we're using the mean function as a what does this mean.

15
00:01:00.440 --> 00:01:07.320
Well this means that we want to literally take the mean function and apply it to matrix M and this is

16
00:01:07.410 --> 00:01:13.290
where the one comes into play because the one actually means that we want to apply this function mean

17
00:01:13.500 --> 00:01:17.260
to the rows of our matrix.

18
00:01:17.820 --> 00:01:23.190
So that is exactly what is going to happen when you run the Slyne apply is going to take mean and is

19
00:01:23.190 --> 00:01:29.790
going to apply it to every single row of the matrix and treat those rows as vectors.

20
00:01:29.940 --> 00:01:32.670
So that is where the name comes from.

21
00:01:32.670 --> 00:01:37.110
You want to apply something to your matrix and that's why you use Apply function.

22
00:01:37.290 --> 00:01:42.250
So when you do that what you'll get in result is a vector of three values.

23
00:01:42.270 --> 00:01:48.540
51 is the average for the first row for 41.6 is average for second row and 43 is the average for

24
00:01:48.540 --> 00:01:49.240
the third row.

25
00:01:49.380 --> 00:01:52.500
So that's how the Apply function works.

26
00:01:52.500 --> 00:01:53.810
Let's look at another example.

27
00:01:54.090 --> 00:02:01.170
Let's say we want to apply the function which is maximum to this matrix and also to the roads.

28
00:02:01.170 --> 00:02:02.270
How would we do that.

29
00:02:02.460 --> 00:02:09.900
Well I would say apply M 1 maximal meaning we want to take the maximal function applied to matrix M

30
00:02:10.320 --> 00:02:13.480
and use the rows of this matrix.

31
00:02:13.530 --> 00:02:15.000
So this would look like this.

32
00:02:15.120 --> 00:02:21.110
Once again apply the maximum to the first row to the second row to the third row and in result what

33
00:02:21.120 --> 00:02:22.080
do we get.

34
00:02:22.080 --> 00:02:28.320
We get a vector once again of three values hundred and eleven is the maximum of the first row 98 is the

35
00:02:28.320 --> 00:02:33.660
maximum of the second row and a hundred and one is the maximum of the third row.

36
00:02:33.660 --> 00:02:37.540
All right so hopefully this makes sense it's pretty simple concept.

37
00:02:37.560 --> 00:02:40.590
You just want to apply something to matrix to all of the rows.

38
00:02:40.590 --> 00:02:42.410
But now let's look an example like this.

39
00:02:42.420 --> 00:02:46.300
Let's say we want to apply to matrix M we apply the mean function.

40
00:02:46.410 --> 00:02:50.870
But this time instead of the one we're going to put a two in here what happens then.

41
00:02:51.000 --> 00:02:52.850
Well a 2 means columns.

42
00:02:52.860 --> 00:02:58.550
So basically we're applying the mean function to each one of the columns.

43
00:02:58.620 --> 00:03:00.710
And what do we get as a result of this.

44
00:03:00.930 --> 00:03:03.320
Well this we also get a vector but not of three values.

45
00:03:03.330 --> 00:03:08.370
This time the vector is going to have 5 values right because we have five columns.

46
00:03:08.610 --> 00:03:10.170
And here you can see those values.

47
00:03:10.170 --> 00:03:12.360
So 24 is the mean of the first column.

48
00:03:12.360 --> 00:03:14.660
Forty three point seven the mean of the second column.

49
00:03:14.880 --> 00:03:17.900
Forty three point three The mean of the third column and so on.

50
00:03:17.970 --> 00:03:21.120
And that is how the play function works.

51
00:03:21.120 --> 00:03:24.910
As you can see it's a very very simple and straightforward concept.

52
00:03:25.050 --> 00:03:31.200
And the interesting part here is that the first temptation that you might have when you want to apply

53
00:03:31.470 --> 00:03:38.310
the mean function for instance to this Matrix is to create a loop and loop through the rows of The Matrix

54
00:03:38.340 --> 00:03:40.790
and apply the mean function to every single row.

55
00:03:40.920 --> 00:03:42.140
Well that is also an option.

56
00:03:42.150 --> 00:03:46.470
And as you'll see further down in this section of the course we're actually going to experiment with

57
00:03:46.470 --> 00:03:50.640
that and we're going to test it out and compare the two approaches.

58
00:03:50.640 --> 00:03:57.390
But the power of R will a lot of the power of R actually lies inside of these apply functions that

59
00:03:57.690 --> 00:04:02.010
you can achieve the same results much quicker and much more efficient.

60
00:04:02.010 --> 00:04:08.730
And that's why it's considered to be such a powerful tool for data mining and data analytics and everything

61
00:04:08.730 --> 00:04:13.920
to do with data science because you have these apply functions and you can achieve results much much

62
00:04:13.920 --> 00:04:16.920
more efficiently so you don't have to worry so much about coding.

63
00:04:16.920 --> 00:04:20.660
You just type in an apply function and does the hard work for you.

64
00:04:21.030 --> 00:04:21.480
So there we go.

65
00:04:21.480 --> 00:04:23.290
That's the basic apply function.

66
00:04:23.290 --> 00:04:29.580
And now let's quickly have a look at the whole list of functions in the Apply family so the family consists

67
00:04:29.940 --> 00:04:35.850
of the following functions the Apply function which we just talked about it on the matrix and you can

68
00:04:35.880 --> 00:04:37.620
either use on the rows or columns.

69
00:04:37.680 --> 00:04:43.200
And in fact there is a bit more to it you can specify a vector of 1 and 2 and use it on the rows and

70
00:04:43.200 --> 00:04:44.060
columns at the same time.

71
00:04:44.070 --> 00:04:46.920
But that's a bit more sophisticated so we won't go into that.

72
00:04:46.920 --> 00:04:51.090
For now for us it's sufficient that we can use it on the rows all the columns.

73
00:04:51.150 --> 00:04:57.150
Then we've got the tapply function which is used on a vector to extract subgroups and apply a function

74
00:04:57.150 --> 00:04:57.860
to them.

75
00:04:58.050 --> 00:05:04.500
We've got the by function which is used on dataframes and the same is the same concept as a group in

76
00:05:04.500 --> 00:05:07.160
SQL as group by in SQL

77
00:05:07.410 --> 00:05:11.790
Then the eapply function which is used on an environment hence the letter e.

78
00:05:12.060 --> 00:05:13.500
Then you've got the lapply.

79
00:05:13.730 --> 00:05:19.340
It's a function that is applied to all elements of the list hence the letter L.

80
00:05:19.350 --> 00:05:22.310
Then you've got sapply it's a version of L apply.

81
00:05:22.410 --> 00:05:27.120
It can simplify the results so it's not presented as a list so it's either present as a matrix or a

82
00:05:27.120 --> 00:05:34.260
vector hence letter S You've got vapply which has a pre-specified type of return value hence letter V.

83
00:05:34.470 --> 00:05:40.020
You've got replicate which can run a function several times usually used with Generation random variables

84
00:05:40.040 --> 00:05:40.170
.

85
00:05:40.290 --> 00:05:44.790
So this is one of the few ones that doesn't actually have the word apply in it and also don't confuse

86
00:05:44.790 --> 00:05:50.620
it with the replicate function which is just R E P. which we've used before.

87
00:05:50.730 --> 00:05:52.510
So these are different functions.

88
00:05:52.710 --> 00:05:58.940
Then we've got mapply which is a multivariate version of sapply arguments can be recycled hence letter M

89
00:05:59.030 --> 00:06:01.680
As you can see this list just keeps going.

90
00:06:01.710 --> 00:06:06.960
And we've got rapply which is a recursive version of lapply hence the letter R.

91
00:06:07.320 --> 00:06:14.460
So as you can see just from the sheer size of this list we what how I've got here we've got 10 functions

92
00:06:14.550 --> 00:06:15.350
in this family.

93
00:06:15.420 --> 00:06:21.540
And actually some people attribute more functions to this family that are not on the slide just through

94
00:06:21.690 --> 00:06:23.820
by seeing the size of this list.

95
00:06:23.820 --> 00:06:28.820
You can tell that this is a very popular concept and R is very evolved.

96
00:06:28.860 --> 00:06:30.590
It's very thought through.

97
00:06:30.600 --> 00:06:35.370
There's lots of different applications to this family and that's why there's so many members in this

98
00:06:35.370 --> 00:06:36.040
family.

99
00:06:36.180 --> 00:06:42.450
And of course it would take many many many hours to get through all of these functions and master all

100
00:06:42.450 --> 00:06:42.960
of them.

101
00:06:42.990 --> 00:06:47.840
That's why in this section of the course we're going to focus on the three that are highlighted in bold

102
00:06:47.840 --> 00:06:47.890
.

103
00:06:47.890 --> 00:06:50.400
The apply function, the lapply and the sapply.

104
00:06:50.610 --> 00:06:56.670
They are by far the most popular ones the most used ones and they're the best to get started with there

105
00:06:56.710 --> 00:06:56.880
.

106
00:06:56.900 --> 00:06:59.210
I wouldn't say that they're ultra simple.

107
00:06:59.220 --> 00:07:05.250
They do get more complex and you will see we will build some very sophisticated examples using just

108
00:07:05.250 --> 00:07:06.200
these three functions.

109
00:07:06.360 --> 00:07:12.210
But even knowing about these three functions you will already have all of the basics you need to then

110
00:07:12.210 --> 00:07:14.870
explore the ones that you might require.

111
00:07:14.880 --> 00:07:15.940
Along the way.

112
00:07:16.050 --> 00:07:18.280
So hopefully you're excited about this section.

113
00:07:18.450 --> 00:07:24.350
And we're definitely going to learn a lot and learn some very powerful techniques in R Can't wait

114
00:07:24.340 --> 00:07:26.190
to get started on the first tutorial.

115
00:07:26.220 --> 00:07:28.850
And I'll see you there until next time happy coding

116
00:07:31.220 --> 00:07:33.680
.
