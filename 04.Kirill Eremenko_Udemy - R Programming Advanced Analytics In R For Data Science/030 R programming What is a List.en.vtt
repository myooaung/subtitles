WEBVTT
1
00:00:05.760 --> 00:00:08.540
Hello and welcome back to the Advanced course in R programming.

2
00:00:08.730 --> 00:00:12.180
In today's tutorial we're finally proceeding to lists.

3
00:00:12.180 --> 00:00:15.600
So question of the day what is a list.

4
00:00:15.600 --> 00:00:20.520
So remember how when we were talking about vectors we said that a vector can only contain elements of

5
00:00:20.520 --> 00:00:21.670
the same type.

6
00:00:21.870 --> 00:00:28.400
Well at least is a data object which is like a vector but it can contain absolutely any type of elements

7
00:00:28.400 --> 00:00:31.550
so it can contain a mix of different types of elements.

8
00:00:31.680 --> 00:00:34.250
And today we're going to learn how to work with lists.

9
00:00:34.470 --> 00:00:40.160
All right so to start off with let's subset our data frames. So we've got util

10
00:00:40.540 --> 00:00:49.500
And as you recall so if I look at summary for util we've got machines so we've got five different

11
00:00:49.500 --> 00:00:50.290
machines in here.

12
00:00:50.340 --> 00:00:56.070
And according to our challenge we only need to work with the machine which is called RL1.

13
00:00:56.100 --> 00:01:01.520
So let's go ahead and subset our data set we'll say RL1  will be util and then we'll

14
00:01:01.530 --> 00:01:10.740
add a filter util $ sign machine equals RL1 colma nothing so we get all the columns run

15
00:01:10.740 --> 00:01:11.200
that.

16
00:01:11.220 --> 00:01:19.640
And now if I look at summary for RL1 you'll see that we only have machine RL1.

17
00:01:19.800 --> 00:01:24.720
Now the other machines still come up because we need to rerun this factory can always do that.

18
00:01:24.720 --> 00:01:28.950
We can just say RL1 dollar sign machine.

19
00:01:28.950 --> 00:01:31.110
And then here will say factor.

20
00:01:31.140 --> 00:01:35.400
This is not compulsory but will make things look better.

21
00:01:35.400 --> 00:01:38.250
So machine if we run that.

22
00:01:38.280 --> 00:01:44.600
And now if you look at summary for RL1 you'll see that there's only that one factor.

23
00:01:44.600 --> 00:01:50.520
So you just need to when you do run a subset of a dataframe you do need to rerun the factor if you want

24
00:01:50.520 --> 00:01:54.100
to get rid of this legacy factor memory.

25
00:01:54.390 --> 00:01:58.740
So there we go we've only got one machine in this dataframe and that's great.

26
00:01:58.740 --> 00:02:05.120
So now we can start constructing a list so let's type that in construct list.

27
00:02:05.130 --> 00:02:10.290
Alright so we remember what we want in a list and we've got that information up at the top here.

28
00:02:10.350 --> 00:02:12.830
We've we wanted a character with the machine name.

29
00:02:12.960 --> 00:02:15.330
Then we've got some stats that we want.

30
00:02:15.450 --> 00:02:22.030
Then we want a logical vector is it has the utilization ever fallen below.

31
00:02:22.040 --> 00:02:23.990
That's certian value.

32
00:02:24.300 --> 00:02:28.110
And then we get some other things that we want to put in there but today we're just going to start with

33
00:02:28.200 --> 00:02:28.830
these three.

34
00:02:28.830 --> 00:02:33.120
So let's maybe copy them and add them in here.

35
00:02:33.150 --> 00:02:33.670
All right.

36
00:02:33.720 --> 00:02:35.850
So let's go ahead and get started.

37
00:02:35.940 --> 00:02:40.190
The list is going to have a name we'll give it a very descriptive name.

38
00:02:40.610 --> 00:02:44.880
Util actually we'll call it list RL1

39
00:02:45.030 --> 00:02:49.050
And before we put anything in the list let's calculate our stats.

40
00:02:49.080 --> 00:02:50.550
Actually let's get rid of that for now.

41
00:02:50.670 --> 00:02:52.400
Let's calculate our stats.

42
00:02:52.400 --> 00:02:53.920
We're going to.

43
00:02:54.050 --> 00:02:57.010
So where you have the machine name we know that it's RL1

44
00:02:57.240 --> 00:03:03.750
What we want to calculate is these stats are the mean minimum meaning minimum average or mean and the

45
00:03:03.750 --> 00:03:06.480
maximum of utilization for the month.

46
00:03:06.690 --> 00:03:08.280
So let's go ahead and do it.

47
00:03:08.300 --> 00:03:13.500
We'll going to create that vector so this is a vector and we're going to actually create it ourselves

48
00:03:13.510 --> 00:03:15.440
so let's go do that to util.

49
00:03:15.570 --> 00:03:20.350
stats RL1  is going to be a vector.

50
00:03:20.490 --> 00:03:22.600
And inside this vector we're going to put in.

51
00:03:22.770 --> 00:03:26.160
So minimum of RL1

52
00:03:26.220 --> 00:03:27.230
That's our data set.

53
00:03:27.240 --> 00:03:32.000
And then we just need to actually address utilization.

54
00:03:32.040 --> 00:03:39.700
So if we look at that RL1 utilization that is all of the utilization for this specific machine.

55
00:03:39.870 --> 00:03:45.380
Since we've subset a data frame and as it gets it's got some NA's at the start.

56
00:03:45.380 --> 00:03:50.430
So when we do run this minimum we're going to if we just run it like this.

57
00:03:50.430 --> 00:03:52.360
So we want to find the minimum value we'll get NA.

58
00:03:52.410 --> 00:03:53.120
.

59
00:03:53.400 --> 00:03:58.240
So we need to remove NA's from here so just say NA dot rm equals T.

60
00:03:58.620 --> 00:04:00.930
That is all minimal function now.

61
00:04:01.020 --> 00:04:02.220
Actually that just copy that.

62
00:04:02.250 --> 00:04:03.890
That'll be handy.

63
00:04:04.050 --> 00:04:13.120
And now into this vector we also want to add the median or mean actually and the maximum.

64
00:04:13.170 --> 00:04:14.610
So there we go.

65
00:04:14.790 --> 00:04:19.590
We are looking at the minimum of all of these values the mean and the maximum.

66
00:04:19.650 --> 00:04:22.870
If we run that we should get this vector.

67
00:04:22.860 --> 00:04:26.050
Now let's get this this let's copy this.

68
00:04:26.070 --> 00:04:26.400
There we go.

69
00:04:26.400 --> 00:04:28.830
So that's how minimum utilization is.

70
00:04:28.830 --> 00:04:30.480
You can see it is 0.

71
00:04:30.510 --> 00:04:32.520
It's about eighty four point nine percent.

72
00:04:32.640 --> 00:04:39.000
Ninety five point one percent is our average utilization for this machine for the month excluding ours

73
00:04:39.030 --> 00:04:41.010
where there is no information.

74
00:04:41.010 --> 00:04:44.550
And the maximum utilization was ninety nine point five percent.

75
00:04:44.700 --> 00:04:47.370
So never reached 100 actually in no.

76
00:04:47.370 --> 00:04:49.700
Given hour Was the utilization 100 percent.

77
00:04:50.040 --> 00:04:56.220
All right so now we want to check the flag or create the flag this flag over here has utilization ever

78
00:04:56.220 --> 00:04:58.920
fallen below 90 percent.

79
00:04:58.950 --> 00:05:04.830
The answer is yes we can already see from here that because the minimum is below 90 percent but we're

80
00:05:04.830 --> 00:05:07.920
still going to do it programmatically through R.

81
00:05:07.920 --> 00:05:12.630
So let's go ahead and do that util under 90.

82
00:05:12.660 --> 00:05:16.380
How do we do this how do we find out if the utilization

83
00:05:16.380 --> 00:05:23.160
So basically in this whole vector if we have something under 90 So let's go and start by looking at

84
00:05:23.160 --> 00:05:27.910
the vector or it's actually it's a column which is actually a vector.

85
00:05:28.000 --> 00:05:31.060
So if we run this there is a vector.

86
00:05:31.060 --> 00:05:32.830
How do we know if there's something underneath.

87
00:05:32.870 --> 00:05:37.090
Well it's pretty simple we just compare it to zero point ninety.

88
00:05:37.100 --> 00:05:37.370
Right.

89
00:05:37.370 --> 00:05:44.070
So if we're run this we've got a vector of false false false on this maybe make some space here false false

90
00:05:44.100 --> 00:05:44.430
false.

91
00:05:44.450 --> 00:05:46.220
Maybe somewhere there is true.

92
00:05:46.220 --> 00:05:49.190
How do we find if some of them are true.

93
00:05:49.370 --> 00:05:50.720
Which ones actually are true.

94
00:05:50.720 --> 00:05:53.470
How do we find if there's even at least one which is true.

95
00:05:53.660 --> 00:06:01.520
Well we're going to use the which operator if we put this in brackets then this will tell us which ones

96
00:06:01.520 --> 00:06:05.690
exactly of them are true so far on this.

97
00:06:05.690 --> 00:06:14.880
You can see here it is telling us which numbers in or which elements of this vector are true and it's

98
00:06:14.980 --> 00:06:17.240
the good thing about which is it ignores.

99
00:06:17.250 --> 00:06:18.120
NA

100
00:06:18.180 --> 00:06:25.010
It completely ignores NA's which is a great thing because they sometimes can get in the way of

101
00:06:25.300 --> 00:06:26.230
your analysis.

102
00:06:26.240 --> 00:06:33.170
So is basically telling us at which indices in this vector you've got true values and now what we want

103
00:06:33.170 --> 00:06:37.670
to do is basically we want to check even if there is one of these is true.

104
00:06:37.670 --> 00:06:44.920
So even if there is one element in this vector then that means that utilization did fall under 90 percent

105
00:06:44.930 --> 00:06:45.450
right.

106
00:06:45.500 --> 00:06:50.900
So we don't really mind which values are in here what we need to know if there is at least one value

107
00:06:50.920 --> 00:06:51.140
.

108
00:06:51.350 --> 00:06:52.340
So how do you do that.

109
00:06:52.340 --> 00:06:56.590
Well you just check the length of the spectrum lenth of which Right.

110
00:06:56.780 --> 00:07:00.760
So lenth I know it's getting a bit cumbersome but it all makes sense right.

111
00:07:00.760 --> 00:07:07.430
So this is all a vector of values comparing to 0.9 you're getting logical vectors applying which tells

112
00:07:07.430 --> 00:07:14.480
us if at which positions there are True's in this vector and then we're checking length just to see if

113
00:07:14.480 --> 00:07:15.620
there's at least one.

114
00:07:15.730 --> 00:07:21.230
So length is 27 so actually 27 times utilization fell below 90 percent.

115
00:07:21.230 --> 00:07:26.600
We don't really mind how many times utilization fell below 90 percent  we just want to check that it happened

116
00:07:26.600 --> 00:07:27.820
at least once.

117
00:07:27.920 --> 00:07:30.610
And so how do you convert this to a logical vector.

118
00:07:30.620 --> 00:07:35.180
Well there's a couple of ways you can say is this greater than zero.

119
00:07:35.260 --> 00:07:35.740
Right.

120
00:07:35.810 --> 00:07:37.150
If it's greater than zero.

121
00:07:37.130 --> 00:07:42.740
True but then that means that it has fallen below 90 percent.

122
00:07:42.880 --> 00:07:50.570
Or we can the other way you can do it is you could use as.logical right and then apply that to that

123
00:07:50.570 --> 00:07:51.160
vector.

124
00:07:51.200 --> 00:07:55.060
But I'll let you play around with that because that's just the other approach.

125
00:07:55.070 --> 00:08:00.350
And basically converts zero into false anything above zero into a true.

126
00:08:00.440 --> 00:08:06.440
So pretty much same result what we're going to do is we're going to use this approach and we're

127
00:08:06.440 --> 00:08:12.390
going to place this result into our flag so this is our flag.

128
00:08:12.710 --> 00:08:20.210
If I on this line now and I check this we've got true meaning that utilization did fall on 90 percent

129
00:08:20.210 --> 00:08:20.540
.

130
00:08:20.540 --> 00:08:26.240
So I know that this might be a bit fast we might be going a bit quick through scenes but that's my

131
00:08:26.240 --> 00:08:34.330
expectation that you are getting quite comfortable with R by now and that you have some of those basic

132
00:08:34.340 --> 00:08:34.860
skills.

133
00:08:35.000 --> 00:08:41.060
If it is going to fast then feel free to rewind a little bit and watch some sections again if you feel

134
00:08:41.060 --> 00:08:44.720
that you really like not keeping up.

135
00:08:44.720 --> 00:08:50.180
Then maybe it might be a good idea to check out the basic course once again just to refresh some of

136
00:08:50.170 --> 00:08:50.850
that knowledge.

137
00:08:51.010 --> 00:08:53.320
But if you're keeping up fine then that's great.

138
00:08:53.360 --> 00:08:56.110
Let's proceed onwards.

139
00:08:56.120 --> 00:09:00.560
All right so we've got under 90 utilization under 90.

140
00:09:00.620 --> 00:09:04.230
This is actually a flag so let's give is that name flag.

141
00:09:04.290 --> 00:09:10.970
And now what we want is we want to create our start creating a list because we know the machine name we've

142
00:09:10.970 --> 00:09:18.290
got this vector and we also know if utilization has fallen under 90 percent we've got that flag.

143
00:09:18.290 --> 00:09:24.160
So go ahead and create this list so to construct our list we're going to say at list underscore RL1

144
00:09:24.160 --> 00:09:28.120
and here we're going to sign it list.

145
00:09:28.150 --> 00:09:31.940
Surprise surprise the function to create a list is called List.

146
00:09:31.940 --> 00:09:35.160
It's very convenient because it's easy to remember that way.

147
00:09:35.170 --> 00:09:37.900
So we're going to assign a character.

148
00:09:37.900 --> 00:09:38.200
Right.

149
00:09:38.210 --> 00:09:47.270
So the name of the machine then we're going to say comma util stats RL1 stats and then

150
00:09:47.270 --> 00:09:56.450
we'll say you're util under 90 flag so far on this as you can see the 90 flag hasn't been created because

151
00:09:56.440 --> 00:10:01.020
we forgot to run the Slyne Let's run that again and just check that it's there.

152
00:10:01.070 --> 00:10:01.810
It is true.

153
00:10:01.880 --> 00:10:07.860
So now if I run this the list has been created so list_RL1

154
00:10:08.140 --> 00:10:11.850
And that is what our list looks like.

155
00:10:12.020 --> 00:10:16.160
As you can see it does look like a different structure we haven't seen something like this before it's

156
00:10:16.150 --> 00:10:23.490
printed out vertically so you've got double brackets to one and then you've got RL1

157
00:10:23.540 --> 00:10:28.140
So this one this one over here is actually comes from the vector.

158
00:10:28.250 --> 00:10:33.620
And this one also comes from the vector as you would normally print out a vector.

159
00:10:33.740 --> 00:10:39.730
That's the same indexation it just telling you when you're gone and you line which one it's printing

160
00:10:39.750 --> 00:10:39.970
.

161
00:10:40.250 --> 00:10:42.910
And then you've got to this logical value.

162
00:10:42.910 --> 00:10:48.990
So basically this is the indexation of list 1 2 and 3 as you can see is double brackets.

163
00:10:49.040 --> 00:10:54.290
It is very different it's got a combination of things so in here we already have a character.

164
00:10:54.320 --> 00:10:58.910
We've got some doubles or numerics and we've got a logical value.

165
00:10:59.060 --> 00:11:00.520
Very interesting structure.

166
00:11:00.590 --> 00:11:05.890
And we're going to learn how to work more with lists throughout the section.

167
00:11:06.130 --> 00:11:08.950
On that note this is going to be the end for today.

168
00:11:09.020 --> 00:11:12.390
Hope you enjoy this tutorial and I look forward to seeing you next time.

169
00:11:12.400 --> 00:11:14.000
Until then happy coding

170
00:11:16.380 --> 00:11:18.850
.
