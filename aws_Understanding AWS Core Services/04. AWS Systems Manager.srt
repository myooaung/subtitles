1
00:00:01,040 --> 00:00:04,780
So next, we're going to talk about the third service that provides

2
00:00:04,780 --> 00:00:07,980
resources for managing infrastructure within AWS,

3
00:00:07,980 --> 00:00:12,420
and that is going to be AWS Systems Manager. Now, Systems Manager

4
00:00:12,420 --> 00:00:15,480
provides this unified user interface so you can look at

5
00:00:15,480 --> 00:00:18,370
operational data from multiple AWS services.

6
00:00:18,370 --> 00:00:21,190
And for many of those services, you can even automate some

7
00:00:21,190 --> 00:00:24,140
operational tasks across those resources.

8
00:00:24,140 --> 00:00:28,350
So let's look at AWS Systems Manager at a little bit of a deeper level.

9
00:00:28,350 --> 00:00:29,120
First of all,

10
00:00:29,120 --> 00:00:32,360
know that it provides multiple tools that makes your life easier

11
00:00:32,360 --> 00:00:35,160
when you're managing infrastructure on AWS,

12
00:00:35,160 --> 00:00:39,340
and we will not be reviewing all of them, but we will touch on a few of them.

13
00:00:39,340 --> 00:00:43,880
First of all, it can enable you to automate tasks for common maintenance actions.

14
00:00:43,880 --> 00:00:46,430
Let's say that you have two applications in your AWS

15
00:00:46,430 --> 00:00:47,810
account that you're supporting.

16
00:00:47,810 --> 00:00:50,300
Let's say you have 10 servers that support one application

17
00:00:50,300 --> 00:00:52,540
and 10 servers that support another,

18
00:00:52,540 --> 00:00:55,330
and you want to update those EC2 instances for your first

19
00:00:55,330 --> 00:00:59,200
application with a new version of a library. You can actually write

20
00:00:59,200 --> 00:01:02,810
that action one time and then simultaneously send it out to all the

21
00:01:02,810 --> 00:01:04,540
servers that need to receive it,

22
00:01:04,540 --> 00:01:07,670
and then you could choose to have it update on those servers,

23
00:01:07,670 --> 00:01:10,450
but not have it affect the other servers at all.

24
00:01:10,450 --> 00:01:14,140
That's just a example of how you can use this automation capability.

25
00:01:14,140 --> 00:01:17,480
It also gives you a secure way to access your servers

26
00:01:17,480 --> 00:01:20,010
using just your AWS credentials.

27
00:01:20,010 --> 00:01:23,300
So if you don't want to have to deal with separate keys or separate passwords,

28
00:01:23,300 --> 00:01:26,740
you can utilize this approach for accessing those servers.

29
00:01:26,740 --> 00:01:29,130
Another thing is that you can store commonly used

30
00:01:29,130 --> 00:01:32,030
parameters securely for operational use.

31
00:01:32,030 --> 00:01:34,990
So let's say that you have a specific database password and you don't

32
00:01:34,990 --> 00:01:37,040
want to store that with each of your applications,

33
00:01:37,040 --> 00:01:39,550
but you want your applications to securely access

34
00:01:39,550 --> 00:01:45,000
that password when they launch. You could utilize Systems Manager for that.

