WEBVTT
1
00:00:01.040 --> 00:00:03.570
So next we're going to discuss another approach for

2
00:00:03.570 --> 00:00:09.000
managing your infrastructure on AWS, and that is going to be AWS OpsWorks.

3
00:00:09.000 --> 00:00:14.360
Now, OpsWorks is a configuration management service,

4
00:00:14.360 --> 00:00:18.080
and it provides managed instances of both Chef and Puppet,

5
00:00:18.080 --> 00:00:20.930
so if you're already using either Chef or Puppet,

6
00:00:20.930 --> 00:00:23.780
OpsWorks might be something that you want to take a look at.

7
00:00:23.780 --> 00:00:26.510
Now, if you're not familiar with Chef and Puppet,

8
00:00:26.510 --> 00:00:30.340
don't worry about diving into those to prepare for the exam.

9
00:00:30.340 --> 00:00:30.920
Next,

10
00:00:30.920 --> 00:00:34.240
your configuration is going to be defined as code for the

11
00:00:34.240 --> 00:00:36.820
servers that you're going to deploy it onto,

12
00:00:36.820 --> 00:00:39.830
and Chef and Puppet are going to manage the lifecycle of those

13
00:00:39.830 --> 00:00:42.740
configuration changes with your servers.

14
00:00:42.740 --> 00:00:43.040
Now,

15
00:00:43.040 --> 00:00:46.590
one of the things to note about OpsWorks is that it can

16
00:00:46.590 --> 00:00:49.140
work in a hybrid cloud architecture,

17
00:00:49.140 --> 00:00:53.240
so you can utilize it if you want to manage your deployments both in the cloud,

18
00:00:53.240 --> 00:00:56.310
as well as within your own data center.

19
00:00:56.310 --> 00:01:01.030
Now, OpsWorks itself is really made up of three separate subservices.

20
00:01:01.030 --> 00:01:04.890
First, we have AWS OpsWorks for Chef Automate.

21
00:01:04.890 --> 00:01:06.900
And so here this is your configuration management

22
00:01:06.900 --> 00:01:09.430
service that utilizes Chef Automate.

23
00:01:09.430 --> 00:01:13.440
Then we have AWS OpsWorks for Puppet Enterprise.

24
00:01:13.440 --> 00:01:17.700
So if you want to have a fully managed service that utilizes Puppet Enterprise,

25
00:01:17.700 --> 00:01:21.810
this would be for you. And next we have AWS OpsWorks Stacks,

26
00:01:21.810 --> 00:01:24.890
and this is what enables you to go in and define your

27
00:01:24.890 --> 00:01:28.540
application in layers, and then you can actually manage that

28
00:01:28.540 --> 00:01:30.750
using Chef recipes with Chef Solo.

29
00:01:30.750 --> 00:01:33.210
So, depending on what you would be looking to do,

30
00:01:33.210 --> 00:01:39.000
you would choose the specific subservice that matches the stack that you're working with.

