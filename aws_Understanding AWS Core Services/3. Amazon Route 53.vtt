WEBVTT
1
00:00:01.040 --> 00:00:04.900
So next we're going to talk about Amazon Route 53, and this is

2
00:00:04.900 --> 00:00:09.140
Amazon's DNS service. And we'll talk more about what DNS means in

3
00:00:09.140 --> 00:00:12.870
just a minute. But if you remember, we have already mentioned this service.

4
00:00:12.870 --> 00:00:16.500
This is one of the two services that leverage AWS's edge

5
00:00:16.500 --> 00:00:19.770
locations within their global infrastructure. But at a high

6
00:00:19.770 --> 00:00:22.460
level, Amazon Route 53 is a domain name service,

7
00:00:22.460 --> 00:00:25.190
as we mentioned, and it's also a global service,

8
00:00:25.190 --> 00:00:26.830
which we also had mentioned previously.

9
00:00:26.830 --> 00:00:30.270
That means that it is not a regional service, that means any

10
00:00:30.270 --> 00:00:32.790
changes that you make are applied globally.

11
00:00:32.790 --> 00:00:37.120
Next, it's highly available, which means this service is going to have minimal,

12
00:00:37.120 --> 00:00:38.450
if any, downtime.

13
00:00:38.450 --> 00:00:41.250
In addition to it being highly available, it enables you

14
00:00:41.250 --> 00:00:43.460
to create highly available services,

15
00:00:43.460 --> 00:00:46.640
and we'll actually give an example of that in just a minute.

16
00:00:46.640 --> 00:00:47.200
Next,

17
00:00:47.200 --> 00:00:50.200
it enables global resource routing. So you could actually

18
00:00:50.200 --> 00:00:53.250
send people to a specific server based on what country

19
00:00:53.250 --> 00:00:55.300
they're coming in from. Or, in addition,

20
00:00:55.300 --> 00:00:59.050
you also could say I want to send them to the server that responds the fastest.

21
00:00:59.050 --> 00:01:03.830
Now what is DNS? DNS is really just a process by which we can map domain

22
00:01:03.830 --> 00:01:09.380
names, like pluralsight.com or amazon.com, to the specific addresses that

23
00:01:09.380 --> 00:01:13.010
are needed for identifying the computer services and the devices that are

24
00:01:13.010 --> 00:01:14.760
going to serve that content.

25
00:01:14.760 --> 00:01:16.920
So this is the connective tissue between those

26
00:01:16.920 --> 00:01:19.600
domain names and those IP addresses.

27
00:01:19.600 --> 00:01:22.080
Now when we look here at the console utilizing Route

28
00:01:22.080 --> 00:01:23.960
53, as we've mentioned before,

29
00:01:23.960 --> 00:01:27.140
it is a global service and it does not require region selection.

30
00:01:27.140 --> 00:01:29.710
That means that any changes that you make here within the

31
00:01:29.710 --> 00:01:32.850
Route 53 console are applied globally.

32
00:01:32.850 --> 00:01:36.790
But you do need to know that DNS changes are not instantaneous.

33
00:01:36.790 --> 00:01:40.280
It does need to what we call propagate those changes throughout

34
00:01:40.280 --> 00:01:42.880
the network of DNS servers around the world.

35
00:01:42.880 --> 00:01:44.830
So it might take a couple of hours for some of your

36
00:01:44.830 --> 00:01:47.580
changes to be realized for everyone.

37
00:01:47.580 --> 00:01:50.860
So let's give an example of how Route 53 can enable you to

38
00:01:50.860 --> 00:01:52.940
have a highly available application.

39
00:01:52.940 --> 00:01:55.440
So in this case, we have an ecommerce site,

40
00:01:55.440 --> 00:01:58.060
and it is currently hosted in US East 1,

41
00:01:58.060 --> 00:02:01.060
which is in Northern Virginia. And we have users from all over

42
00:02:01.060 --> 00:02:03.580
the globe that actually leverage this site.

43
00:02:03.580 --> 00:02:06.900
Now in this case, we have a customer that's coming in from South America,

44
00:02:06.900 --> 00:02:08.600
and when they access the site,

45
00:02:08.600 --> 00:02:11.230
normally it's going to route them to US East 1 and

46
00:02:11.230 --> 00:02:13.040
everything works great; however,

47
00:02:13.040 --> 00:02:16.740
what happens if our server goes down in US East 1? Let's

48
00:02:16.740 --> 00:02:20.710
say we deploy a bad configuration, and that actually goes down. Well,

49
00:02:20.710 --> 00:02:21.590
what do we do?

50
00:02:21.590 --> 00:02:21.770
Well,

51
00:02:21.770 --> 00:02:25.000
we can configure Route 53 to have a failover so that if

52
00:02:25.000 --> 00:02:29.340
it can't reach its primary server, it can then route users to a new server.

53
00:02:29.340 --> 00:02:33.280
In this case, we can route them to EU West 1, which is in Dublin.

54
00:02:33.280 --> 00:02:34.140
And in this manner,

55
00:02:34.140 --> 00:02:37.270
the user doesn't have to know that anything has changed, but we're

56
00:02:37.270 --> 00:02:39.910
now routing them to a server that can fulfill their requests

57
00:02:39.910 --> 00:02:42.140
because we have that failover in place.

58
00:02:42.140 --> 00:02:50.000
And that's just one of several ways that we can utilize Route 53 to create highly available applications.

