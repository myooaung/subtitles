WEBVTT
1
00:00:01.040 --> 00:00:06.060
So next, we're going to discuss a service called the AWS Global Accelerator.

2
00:00:06.060 --> 00:00:07.650
And according to AWS,

3
00:00:07.650 --> 00:00:11.650
this is a networking service that sends your user's traffic through

4
00:00:11.650 --> 00:00:14.900
Amazon Web Services' global network infrastructure,

5
00:00:14.900 --> 00:00:18.850
improving your internet user performance by up to 60%.

6
00:00:18.850 --> 00:00:21.840
Now let's talk for a minute about how that's possible.

7
00:00:21.840 --> 00:00:22.840
So, first of all,

8
00:00:22.840 --> 00:00:26.690
Global Accelerator and one of the ways it's different from a solution

9
00:00:26.690 --> 00:00:30.360
like CloudFront is that it does utilize IP addresses,

10
00:00:30.360 --> 00:00:33.890
and in this case it still uses edge locations like CloudFront,

11
00:00:33.890 --> 00:00:38.640
but it's actually using it from IP resolution instead of DNS.

12
00:00:38.640 --> 00:00:41.730
So, once the user reaches the edge locations,

13
00:00:41.730 --> 00:00:45.850
instead of routing traffic with the user request through the public internet,

14
00:00:45.850 --> 00:00:50.730
once they reach those edge locations, no matter where you're resolving it to,

15
00:00:50.730 --> 00:00:54.090
it's going to route that traffic through the AWS

16
00:00:54.090 --> 00:00:56.240
network and not the public internet.

17
00:00:56.240 --> 00:01:00.040
And it can route requests to many different AWS resources,

18
00:01:00.040 --> 00:01:02.500
and that includes things like a network load balancer,

19
00:01:02.500 --> 00:01:06.460
or NLB, an application load balancer, or ALB,

20
00:01:06.460 --> 00:01:08.500
or even just EC2 instances,

21
00:01:08.500 --> 00:01:12.500
or maybe you've just assigned an elastic IP address to

22
00:01:12.500 --> 00:01:16.570
some type of AWS infrastructure, you could use that as well.

23
00:01:16.570 --> 00:01:19.440
Now let's talk about the different performance improvements

24
00:01:19.440 --> 00:01:22.640
that are possible with Global Accelerator.

25
00:01:22.640 --> 00:01:23.440
First of all,

26
00:01:23.440 --> 00:01:28.050
the distance between that user request and the initial endpoint is going

27
00:01:28.050 --> 00:01:31.340
to be minimized because it's using edge locations.

28
00:01:31.340 --> 00:01:31.470
Now,

29
00:01:31.470 --> 00:01:35.010
this is also true when you're using something like CloudFront. Traffic

30
00:01:35.010 --> 00:01:39.050
is going to be optimized by using the AWS network instead of the public

31
00:01:39.050 --> 00:01:42.140
internet with that IP‑based resolution.

32
00:01:42.140 --> 00:01:46.340
And what this does is it does result in improvement in that first byte latency,

33
00:01:46.340 --> 00:01:47.610
the jitter, and the throughput.

34
00:01:47.610 --> 00:01:51.050
So overall, the request is going to be more efficient,

35
00:01:51.050 --> 00:01:54.320
and it does also provides superior fault tolerance

36
00:01:54.320 --> 00:01:56.820
by not relying on DNS resolution.

37
00:01:56.820 --> 00:01:58.850
And let me speak to this for just a minute.

38
00:01:58.850 --> 00:02:00.030
So with most solutions,

39
00:02:00.030 --> 00:02:03.980
what can happen is is that we use a hostname, and that

40
00:02:03.980 --> 00:02:07.240
hostname, the IP address, might get cached.

41
00:02:07.240 --> 00:02:10.780
So if you're using something like Route 53 for failover,

42
00:02:10.780 --> 00:02:14.930
what happens is is that if the client remembers an old IP

43
00:02:14.930 --> 00:02:17.470
address and it needs to fail over to a new region,

44
00:02:17.470 --> 00:02:22.060
for example, in some cases that switchover might not be seamless.

45
00:02:22.060 --> 00:02:24.140
But here, because of Global Accelerator,

46
00:02:24.140 --> 00:02:27.440
we are using IP‑based resolution so it is able to

47
00:02:27.440 --> 00:02:29.540
make that transition seamlessly.

48
00:02:29.540 --> 00:02:33.900
So let's talk about when you would consider AWS Global Accelerator,

49
00:02:33.900 --> 00:02:36.430
especially over a solution like CloudFront,

50
00:02:36.430 --> 00:02:38.240
because they are similar.

51
00:02:38.240 --> 00:02:43.560
First of all, if you're using a non‑HTTP protocol, things like UDP,

52
00:02:43.560 --> 00:02:49.210
MQTT or VOIP, so you might be using UDP in a gaming context or

53
00:02:49.210 --> 00:02:54.340
in a video/audio type context, with MQTT, you might be

54
00:02:54.340 --> 00:02:58.270
leveraging this for IoT‑based devices. And then VOIP if you're

55
00:02:58.270 --> 00:02:59.940
doing, again, internet telephony.

56
00:02:59.940 --> 00:03:02.100
Now, if we look at another use case,

57
00:03:02.100 --> 00:03:05.190
and that's going to be if you have a situation that requires a

58
00:03:05.190 --> 00:03:09.040
static IP and not a DNS‑based resolution,

59
00:03:09.040 --> 00:03:12.940
then in this case you're going to need to use Global Accelerator.

60
00:03:12.940 --> 00:03:17.810
Also, if you need instant failover with the highest level of high availability,

61
00:03:17.810 --> 00:03:23.000
then in this case you would certainly want to take a look at the AWS Global Accelerator.

