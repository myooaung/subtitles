1
00:00:01,040 --> 00:00:04,440
So now that we have a good understanding of AWS as a whole,

2
00:00:04,440 --> 00:00:06,880
we're going to be looking at how we leverage the services

3
00:00:06,880 --> 00:00:09,170
that are included within the platform.

4
00:00:09,170 --> 00:00:11,990
And when we're talking about interacting with those services, we're

5
00:00:11,990 --> 00:00:14,540
really looking at three different approaches.

6
00:00:14,540 --> 00:00:17,390
The first of these is the AWS Console,

7
00:00:17,390 --> 00:00:21,020
and we used this when we set up our initial AWS account

8
00:00:21,020 --> 00:00:23,640
in a previous course within this path.

9
00:00:23,640 --> 00:00:26,950
Now, in addition to that, we also have the AWS CLI,

10
00:00:26,950 --> 00:00:28,630
or Command Line Interface,

11
00:00:28,630 --> 00:00:32,120
and this is what allows you to access those same AWS services,

12
00:00:32,120 --> 00:00:34,640
but just from the command line on your machine.

13
00:00:34,640 --> 00:00:34,830
Now,

14
00:00:34,830 --> 00:00:38,450
if you want to program access to your AWS resources, this is

15
00:00:38,450 --> 00:00:40,930
when you would look to leverage the AWS SDK,

16
00:00:40,930 --> 00:00:44,030
which is supported across a variety of languages.

17
00:00:44,030 --> 00:00:46,840
Now let's take a look at each of these in turn.

18
00:00:46,840 --> 00:00:49,640
First of all, we have the AWS Management Console,

19
00:00:49,640 --> 00:00:50,330
and as I mentioned,

20
00:00:50,330 --> 00:00:54,190
we have used the browser version of this earlier in this path.

21
00:00:54,190 --> 00:00:58,360
But there also is a mobile application that goes along with this. Now, it

22
00:00:58,360 --> 00:01:03,050
provides access to most all of the 150+ AWS services,

23
00:01:03,050 --> 00:01:07,440
and in this case, all major browsers and mobile operating systems are supported.

24
00:01:07,440 --> 00:01:10,750
Now, you'll probably primarily use the web‑based interface,

25
00:01:10,750 --> 00:01:12,850
but it wouldn't hurt to download the mobile version

26
00:01:12,850 --> 00:01:15,040
and explore that on your own.

27
00:01:15,040 --> 00:01:18,290
So here's an example of the browser version of the console.

28
00:01:18,290 --> 00:01:21,910
We can see here that we're logged in, I'm logged in as myself, and

29
00:01:21,910 --> 00:01:24,810
we can see that I'm using the Northern Virginia region. And you can

30
00:01:24,810 --> 00:01:28,940
see a list of some recently visited services that I have had here on

31
00:01:28,940 --> 00:01:30,640
this version of the console.

32
00:01:30,640 --> 00:01:34,380
Now, we'll dive into the console later on within this module.

33
00:01:34,380 --> 00:01:36,990
So next, we have the AWS Command Line Interface,

34
00:01:36,990 --> 00:01:40,800
or CLI, and this is a tool that allows you to manage your services

35
00:01:40,800 --> 00:01:42,980
from the command line, and this works on Windows,

36
00:01:42,980 --> 00:01:46,850
Mac, and Linux. And most everything you could do in the browser

37
00:01:46,850 --> 00:01:49,940
with the console, you can do with the CLI.

38
00:01:49,940 --> 00:01:50,920
So as an example,

39
00:01:50,920 --> 00:01:55,320
if we wanted to list the current users for our specific AWS account,

40
00:01:55,320 --> 00:01:58,640
we could run aws iam list‑users.

41
00:01:58,640 --> 00:02:01,490
Now, for those of you that maybe have some experience with the platform,

42
00:02:01,490 --> 00:02:05,840
you're noting that this is just limited to IAM users and not the root user,

43
00:02:05,840 --> 00:02:06,840
which is totally true.

44
00:02:06,840 --> 00:02:10,940
And we'll cover more of that in a later course within this path.

45
00:02:10,940 --> 00:02:15,530
Now, the next thing we have is the AWS Software Developer Kit, or SDK.

46
00:02:15,530 --> 00:02:18,530
And this is what allows us to use a programming language to actually

47
00:02:18,530 --> 00:02:22,010
script the process of how we interact with AWS.

48
00:02:22,010 --> 00:02:22,110
Now,

49
00:02:22,110 --> 00:02:24,380
this is great because it can allow us to automate

50
00:02:24,380 --> 00:02:26,440
many things within the platform.

51
00:02:26,440 --> 00:02:28,660
And as we look at the different languages that are supported,

52
00:02:28,660 --> 00:02:35,720
we do have quite a range here, and this includes Java, .NET, Node.js, JavaScript

53
00:02:35,720 --> 00:02:43,040
in the browser, PHP, Python, as well as Ruby, Go, and C++.

54
00:02:43,040 --> 00:02:44,270
So for most developers,

55
00:02:44,270 --> 00:02:49,540
you're working in one of these languages, and that is supported with an AWS SDK.

56
00:02:49,540 --> 00:02:54,580
Now, let's talk about when you would use one of these approaches versus another.

57
00:02:54,580 --> 00:02:55,220
So, first of all,

58
00:02:55,220 --> 00:02:59,590
the console is a great method for testing out AWS services. So if

59
00:02:59,590 --> 00:03:01,870
you want to leverage a service for the first time,

60
00:03:01,870 --> 00:03:05,660
if you want to spin up a virtual server and maybe you haven't used EC2 before,

61
00:03:05,660 --> 00:03:09,990
or maybe you're looking at testing out a new service that AWS just announced,

62
00:03:09,990 --> 00:03:12,490
the console is a great way to do this.

63
00:03:12,490 --> 00:03:13,060
However,

64
00:03:13,060 --> 00:03:15,630
if you have repeated tasks, you might want to look at

65
00:03:15,630 --> 00:03:18,440
using either the CLI or the SDK.

66
00:03:18,440 --> 00:03:21,920
If we require a person to log into their browser and go and

67
00:03:21,920 --> 00:03:24,420
perform tasks, that can be very cumbersome.

68
00:03:24,420 --> 00:03:26,710
But if we're going to be doing these tasks continually,

69
00:03:26,710 --> 00:03:29,160
this becomes a great case for automation,

70
00:03:29,160 --> 00:03:33,230
and both the CLI and SDK can enable that automation.

71
00:03:33,230 --> 00:03:39,020
And next, the SDK enables automation of AWS tasks within custom applications.

72
00:03:39,020 --> 00:03:43,240
So if you have a custom application that you're running on AWS and you want it

73
00:03:43,240 --> 00:03:46,520
to automate some way of interacting with an AWS service,

74
00:03:46,520 --> 00:03:49,740
the SDK becomes a great choice for that.

75
00:03:49,740 --> 00:03:50,900
Now, it's important to note here,

76
00:03:50,900 --> 00:03:55,050
most all services and actions can be performed in any of these three.

77
00:03:55,050 --> 00:03:57,060
Now, there are some exceptions to that rule,

78
00:03:57,060 --> 00:03:59,680
and we'll cover a few of those within this course. But at a high

79
00:03:59,680 --> 00:04:03,300
level, just know that for most services, you'll be able to use

80
00:04:03,300 --> 00:04:12,000
either the console, or the CLI, or the SDK to perform whatever tasks you need when using these services.

