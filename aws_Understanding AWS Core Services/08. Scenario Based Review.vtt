WEBVTT
1
00:00:01.040 --> 00:00:04.110
So next, we're going to talk through three different scenarios that

2
00:00:04.110 --> 00:00:07.680
will help you gauge how well you're doing at absorbing the information

3
00:00:07.680 --> 00:00:10.340
that we have presented within this module.

4
00:00:10.340 --> 00:00:12.060
So here in our first scenario,

5
00:00:12.060 --> 00:00:16.320
we're going to be looking at Elliot, and he is an operations engineer at a

6
00:00:16.320 --> 00:00:20.270
financial services company. And he recently, by chance,

7
00:00:20.270 --> 00:00:25.280
discovered that someone had disabled a key security setting on a server.

8
00:00:25.280 --> 00:00:28.900
Now he's really concerned that events like this are going to go undetected,

9
00:00:28.900 --> 00:00:32.360
there's no way to know about them, and he's afraid they're going to have a data

10
00:00:32.360 --> 00:00:35.140
breach and then it's going to become a huge deal.

11
00:00:35.140 --> 00:00:37.150
So for Elliot and his company,

12
00:00:37.150 --> 00:00:40.210
which service would allow the organization to continuously

13
00:00:40.210 --> 00:00:43.640
track configuration of infrastructure?

14
00:00:43.640 --> 00:00:47.040
Okay, next, we're going to be talking about James,

15
00:00:47.040 --> 00:00:51.580
and he is the lead architect at a SaaS company, a Software as a Service company,

16
00:00:51.580 --> 00:00:53.770
and they're going to be launching a new application

17
00:00:53.770 --> 00:00:55.570
that includes several components.

18
00:00:55.570 --> 00:00:57.670
It has some EC2 instances,

19
00:00:57.670 --> 00:01:02.400
some Lambda instances, it's also going to have some S3 buckets and some SNS

20
00:01:02.400 --> 00:01:07.070
topics and SQS queues. And he's looking to minimize the manual work that is

21
00:01:07.070 --> 00:01:11.070
required to create this infrastructure. So they're going to be launching dev

22
00:01:11.070 --> 00:01:14.880
environments and prod environments and testing environments and they don't want

23
00:01:14.880 --> 00:01:17.340
to have to do this manually every time.

24
00:01:17.340 --> 00:01:21.740
So, what service would enable James to automate much of this effort?

25
00:01:21.740 --> 00:01:25.360
Okay, our last scenario here has to do with Candace,

26
00:01:25.360 --> 00:01:28.960
and she is the CTO at a manufacturing company. And a cloud

27
00:01:28.960 --> 00:01:31.130
server that was needed to support their manufacturing

28
00:01:31.130 --> 00:01:33.640
process was accidentally deleted.

29
00:01:33.640 --> 00:01:35.820
Now they've managed to fix that issue,

30
00:01:35.820 --> 00:01:38.010
but they want to follow up with the individual that

31
00:01:38.010 --> 00:01:40.800
accidentally deleted that server so they can help them

32
00:01:40.800 --> 00:01:43.020
know how to not do that next time.

33
00:01:43.020 --> 00:01:45.910
So if they wanted to figure out who this individual is,

34
00:01:45.910 --> 00:01:48.860
what service would they leverage so they can go back and

35
00:01:48.860 --> 00:01:51.600
find out who performed this action?

36
00:01:51.600 --> 00:01:59.000
So in the next clip, we'll be walking through a summary of what we covered in this module and looking at the answers to these scenarios.

