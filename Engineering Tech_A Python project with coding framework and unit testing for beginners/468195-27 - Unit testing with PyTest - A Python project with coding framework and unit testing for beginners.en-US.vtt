WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.670 --> 00:00:07.380
Let's now understand how to unit test by an application using a popular pest employee.

00:00:07.380 --> 00:00:09.495
My part by test.

00:00:09.495 --> 00:00:12.000
We use unit test.

00:00:12.000 --> 00:00:13.905
Unit test is great verbage.

00:00:13.905 --> 00:00:18.225
You're looking at a glass demanded that period functions and write your test.

00:00:18.225 --> 00:00:23.460
Let's understand how this simplifies unit testing.

00:00:23.460 --> 00:00:25.725
To work with Python.

00:00:25.725 --> 00:00:29.190
And PyCharm will introduce a few configuration changes.

00:00:29.190 --> 00:00:33.675
Let's look at them. First, go to File Settings.

00:00:33.675 --> 00:00:36.550
Click on Python interpreter.

00:00:38.810 --> 00:00:41.860
Will start by desk.

00:00:45.990 --> 00:00:49.850
Pecan pie destiny install package.

00:00:50.310 --> 00:00:53.515
By it is it has been installed successfully.

00:00:53.515 --> 00:01:02.155
Let's close this. We can see by test here.

00:01:02.155 --> 00:01:04.270
Let's close this now.

00:01:04.270 --> 00:01:06.955
Let's go to File Settings again.

00:01:06.955 --> 00:01:09.805
This time we'll click on Tools.

00:01:09.805 --> 00:01:13.880
Then click on python integration tools.

00:01:16.170 --> 00:01:24.470
And under testing will select Default Test traumatized by this. Click Okay.

00:01:25.410 --> 00:01:33.560
Let's do one last configuration change before we can go to Run it configuration.

00:01:34.740 --> 00:01:40.615
Click Plus. Click, Test.

00:01:40.615 --> 00:01:44.960
And working directory would be the project directory.

00:01:46.470 --> 00:01:51.470
And sclera part would be done. Project directory.

00:01:51.900 --> 00:01:54.895
Click Apply, and Okay,

00:01:54.895 --> 00:01:58.610
Let's now create a new Python file.

00:01:59.160 --> 00:02:02.800
We'll call it dark parses.

00:02:02.800 --> 00:02:10.295
Do. Now we can write our test functions here.

00:02:10.295 --> 00:02:14.030
We do not have to create any class in Python installed.

00:02:14.030 --> 00:02:17.360
So all this should start with test underscore.

00:02:17.360 --> 00:02:23.315
Let's create a very simple test which would assert the Boolean value true.

00:02:23.315 --> 00:02:26.250
That means it would always pass.

00:02:27.520 --> 00:02:32.945
And we'll run this test by right-clicking and saying run by test.

00:02:32.945 --> 00:02:35.495
We have not important unit test.

00:02:35.495 --> 00:02:38.300
And now our default test is by test.

00:02:38.300 --> 00:02:39.935
And the test passed.

00:02:39.935 --> 00:02:44.760
We can say false and the test would fail.

00:02:45.100 --> 00:02:51.365
And here it says the assertion error because we're forced it. So it failed.

00:02:51.365 --> 00:02:54.770
Let's now see how to write a Certainly Colin by

00:02:54.770 --> 00:02:59.930
test for this or the colored rate is Cr 3.

00:02:59.930 --> 00:03:07.140
And let's compare it with for this failed.

00:03:07.390 --> 00:03:11.550
And if we change it to 3D should pass.

00:03:14.350 --> 00:03:18.275
We earlier wrote some test using unit test.

00:03:18.275 --> 00:03:21.990
Let's convert them to pilot test for marta.

00:03:29.290 --> 00:03:35.495
And we'll simply say assert the convention is to rate the expected value.

00:03:35.495 --> 00:03:38.240
And then like John value,

00:03:38.240 --> 00:03:39.830
you can date it the other way also,

00:03:39.830 --> 00:03:41.615
but this is the convention.

00:03:41.615 --> 00:03:44.375
Even in unit tests, there is the convention.

00:03:44.375 --> 00:03:49.355
Let's run it now. It says the test fairly secure.

00:03:49.355 --> 00:03:57.420
Self not found, will remove cell from here.

00:03:57.640 --> 00:04:06.720
We need to import our persist from processor and port persist.

00:04:10.660 --> 00:04:13.100
Now the test passed.

00:04:13.100 --> 00:04:16.460
You can also write and do run by testing,

00:04:16.460 --> 00:04:18.870
but the test will get executed.

00:04:22.420 --> 00:04:26.900
Let's now convert the other taste to buy a test.

00:04:26.900 --> 00:04:30.395
We'll copy this, which checks what an exception.

00:04:30.395 --> 00:04:32.880
Let's paste it here.

00:04:34.330 --> 00:04:42.540
Let's remove self will remove cell from here.

00:04:43.240 --> 00:04:48.450
And we'll import psycopg2.

00:04:52.150 --> 00:05:02.960
And here we intercept by testdata register for a surpluses European import by this.

00:05:02.960 --> 00:05:06.275
And then say this.radius,

00:05:06.275 --> 00:05:08.765
whatever editor you are expecting.

00:05:08.765 --> 00:05:13.205
And then call the method though we call it unit test.

00:05:13.205 --> 00:05:15.440
This runs fine.

00:05:15.440 --> 00:05:19.490
Now we can run all the three test using Python test.

00:05:19.490 --> 00:05:23.520
All three tests passed as expected.
