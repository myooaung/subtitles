WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.890 --> 00:00:05.895
In the previous slide, we saw how to control the logging using a config file.

00:00:05.895 --> 00:00:10.545
Next, we'll understand how to have different error level four different modules.

00:00:10.545 --> 00:00:14.595
For example, if we get some error in the production environment for the parses module,

00:00:14.595 --> 00:00:17.070
we can increase the energy level for the module

00:00:17.070 --> 00:00:20.220
without increasing log for that application.

00:00:20.220 --> 00:00:22.935
So let's see that in action.

00:00:22.935 --> 00:00:25.545
Now let's declare to more than loggers.

00:00:25.545 --> 00:00:29.560
One is ingest and the other is persist.

00:00:29.900 --> 00:00:36.910
Similar to the root logger will have properties for ingest and persist.

00:00:44.260 --> 00:00:51.800
Next, we need to define the name property using which you can get a 100 to the logger.

00:00:51.800 --> 00:00:56.465
Let's have a qual named ingest for the ingest logger.

00:00:56.465 --> 00:01:00.270
And a filename persist for the Persist logs.

00:01:02.260 --> 00:01:07.950
Let's keep a log level for all the loggers.

00:01:08.080 --> 00:01:10.265
Now let's see how to use this.

00:01:10.265 --> 00:01:13.325
Specific loggers will go to ingested by.

00:01:13.325 --> 00:01:16.070
Now after reading the config file,

00:01:16.070 --> 00:01:18.065
we'll declare a variable logger.

00:01:18.065 --> 00:01:20.240
And then we'll get the logo from the,

00:01:20.240 --> 00:01:25.140
from the logging get logger function using the column name.

00:01:26.070 --> 00:01:28.540
Now instead of logging dot info,

00:01:28.540 --> 00:01:34.910
we need to have Blogger dot info because that is the object we have within just login.

00:01:39.870 --> 00:01:44.420
Let's do similar change in the person class.

00:01:45.120 --> 00:01:49.220
Here we'll get lager persist.

00:01:57.090 --> 00:02:04.915
Let's now run it. Logger is a class level variable.

00:02:04.915 --> 00:02:09.530
So to use it in other functions will have to say self dot logger.

00:02:10.870 --> 00:02:14.480
Let's do the same change in ingested

00:02:14.480 --> 00:02:23.390
by now

00:02:23.390 --> 00:02:24.695
the program runs fine.

00:02:24.695 --> 00:02:28.445
So let's now understand how to control error level in different modules.

00:02:28.445 --> 00:02:31.610
We'll go to login dot conf and

00:02:31.610 --> 00:02:35.135
will suppress log from all the modules except parses module.

00:02:35.135 --> 00:02:38.370
We'll set this to info,

00:02:40.150 --> 00:02:42.665
will keep the root test debug.

00:02:42.665 --> 00:02:44.945
But in the ingest model we live info.

00:02:44.945 --> 00:02:47.885
So in this law will get printed,

00:02:47.885 --> 00:02:51.330
but persistence debug, so that should get printed.

00:02:52.510 --> 00:02:57.930
We can see that the info statement within the login model is getting printed.

00:02:59.710 --> 00:03:02.270
And it is getting printed twice,

00:03:02.270 --> 00:03:03.650
so we'll come to that in a bit.

00:03:03.650 --> 00:03:06.095
But the debug statement is not getting printed.

00:03:06.095 --> 00:03:10.350
Let's say that the log level to wanting in ingest.

00:03:10.870 --> 00:03:14.420
Now we can see that all the log statements within

00:03:14.420 --> 00:03:17.630
the ingest module that design within the file reader,

00:03:17.630 --> 00:03:21.240
reading a file, those had been suppressed.

00:03:21.700 --> 00:03:24.050
One thing you have noticed here is

00:03:24.050 --> 00:03:26.840
the debug statements are getting printed twice because by

00:03:26.840 --> 00:03:29.030
default it picks up that route logger can

00:03:29.030 --> 00:03:31.895
also the logger that is defined in a specific logger.

00:03:31.895 --> 00:03:34.910
Persister ingest to ensure law

00:03:34.910 --> 00:03:38.030
gets printed only once there is a property called propogate,

00:03:38.030 --> 00:03:40.190
we can set that to 0.

00:03:40.190 --> 00:03:44.730
So that would ensure that log is getting printed only once.
