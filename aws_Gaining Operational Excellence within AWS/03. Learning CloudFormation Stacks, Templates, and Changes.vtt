WEBVTT
1
00:00:01.340 --> 00:00:06.470
[Autogenerated] Let's talk about CloudFormation stacks within a W s

2
00:00:06.470 --> 00:00:11.150
CloudFormation uses what are called stacks to manage.

3
00:00:11.150 --> 00:00:17.180
Related Resource is so it's just a collection of the AWS Resource is

4
00:00:17.180 --> 00:00:20.770
logically grouped and managed as a single unit.

5
00:00:20.770 --> 00:00:24.920
So this is what allows us to deploy several pieces of an

6
00:00:24.920 --> 00:00:27.740
architecture er in a single click.

7
00:00:27.740 --> 00:00:32.400
And the beauty of CloudFormation stacks is that we can make changes

8
00:00:32.400 --> 00:00:37.630
to the stack and updated in place without having to necessarily

9
00:00:37.630 --> 00:00:40.340
tear it all down and recreated again.

10
00:00:40.340 --> 00:00:42.580
Now, along with updating in place,

11
00:00:42.580 --> 00:00:46.510
you can also obviously delete or create a new stack.

12
00:00:46.510 --> 00:00:50.240
Now updating has two different categories.

13
00:00:50.240 --> 00:00:54.140
We have direct updates, which are used for quick changes.

14
00:00:54.140 --> 00:00:57.140
And then there's a category called change sets,

15
00:00:57.140 --> 00:00:59.290
which error used when you want to review the

16
00:00:59.290 --> 00:01:01.940
changes that are going to be applied.

17
00:01:01.940 --> 00:01:04.860
So for something quick and in dire need,

18
00:01:04.860 --> 00:01:08.800
you can use a direct update, but usually change Sets are best,

19
00:01:08.800 --> 00:01:13.540
so you can actually see what you're approving in what you're deploying,

20
00:01:13.540 --> 00:01:19.640
and then, finally, it allows us to detect unmanaged config changes,

21
00:01:19.640 --> 00:01:23.240
aka drift using CloudFormation.

22
00:01:23.240 --> 00:01:28.520
So when CloudFormation the text that one of your resource is is out of scope,

23
00:01:28.520 --> 00:01:32.040
and it's not how it was configured via the deployment.

24
00:01:32.040 --> 00:01:36.240
It can market as drifted, so you can go and correct that.

25
00:01:36.240 --> 00:01:38.650
Now this technology is great,

26
00:01:38.650 --> 00:01:44.740
but it's important to know that not all resource is do support drift detection.

27
00:01:44.740 --> 00:01:47.040
So be sure to keep that in mind.

28
00:01:47.040 --> 00:01:51.530
So now that we know what stacks are, let's take a look at some templates.

29
00:01:51.530 --> 00:01:53.980
This is what makes up a template.

30
00:01:53.980 --> 00:01:58.580
Now, obviously, this is _____ down and it doesn't have anything specific,

31
00:01:58.580 --> 00:02:02.590
but we'll look at some actual templates here in the upcoming clips.

32
00:02:02.590 --> 00:02:04.840
When we deployed to our accounts,

33
00:02:04.840 --> 00:02:09.540
you can see they come in both JSON and Yamil template form.

34
00:02:09.540 --> 00:02:15.240
But no matter what form they come in, they all follow the same syntax.

35
00:02:15.240 --> 00:02:18.840
You can see there are several keys that we need to fill

36
00:02:18.840 --> 00:02:22.140
in order to successfully deployed.

37
00:02:22.140 --> 00:02:25.150
Now it's important to know that resource is here,

38
00:02:25.150 --> 00:02:26.940
which is where we define our A.

39
00:02:26.940 --> 00:02:32.610
W s resource is that we want to deploy, such as an S3 bucket or maybe an E c.

40
00:02:32.610 --> 00:02:38.840
Two instance, This field is the only required one in this entire template,

41
00:02:38.840 --> 00:02:43.480
so you can get away with only defining resource is in pushing your

42
00:02:43.480 --> 00:02:46.220
CloudFormation template up and deploying it.

43
00:02:46.220 --> 00:02:49.530
I would never recommend that, but it's just something to know,

44
00:02:49.530 --> 00:02:54.340
because this is something that a WS likes to test over.

45
00:02:54.340 --> 00:02:58.050
So now that we have an understanding of CloudFormation stacks

46
00:02:58.050 --> 00:03:01.340
and templates as well as our change sets,

47
00:03:01.340 --> 00:03:03.640
let's dive into some demos.

48
00:03:03.640 --> 00:03:06.750
The first demo we're going to look at is going to deal with

49
00:03:06.750 --> 00:03:11.140
deploying our very own CloudFormation stack.

50
00:03:11.140 --> 00:03:15.660
Now the one I used in this upcoming clip will be available for you and

51
00:03:15.660 --> 00:03:20.240
included with this course under the downloadable sections.

52
00:03:20.240 --> 00:03:25.440
And after we do that, we're going to go ahead and perform a stack update,

53
00:03:25.440 --> 00:03:29.340
and we'll perform both of the categories that we talked about

54
00:03:29.340 --> 00:03:32.800
so direct update as well as a change set.

55
00:03:32.800 --> 00:03:36.870
This way we can see the differences, and then finally,

56
00:03:36.870 --> 00:03:40.940
we're going to use the designer to edit a stack.

57
00:03:40.940 --> 00:03:41.230
Now,

58
00:03:41.230 --> 00:03:46.160
designer is a tool offered by a W S built into

59
00:03:46.160 --> 00:03:50.410
CloudFormation that allows us to visualize what our

60
00:03:50.410 --> 00:03:53.640
template is doing as well as make changes.

61
00:03:53.640 --> 00:03:56.680
It comes in handy when you want to see what you're actually

62
00:03:56.680 --> 00:03:59.940
deploying and maybe walk through a process.

63
00:03:59.940 --> 00:04:01.390
So let's end here.

64
00:04:01.390 --> 00:04:11.000
We'll take a break and then when we pick back up, we'll go ahead and start digging into the console within a W s CloudFormation.

