WEBVTT
1
00:00:00.740 --> 00:00:05.140
[Autogenerated] Let's talk about stack sets in nested stacks.

2
00:00:05.140 --> 00:00:11.240
Now nested stacks are stacks that error created via other CloudFormation stacks.

3
00:00:11.240 --> 00:00:16.150
So you do this by calling the aws CloudFormation

4
00:00:16.150 --> 00:00:19.540
stack resource within your templates.

5
00:00:19.540 --> 00:00:24.370
Now what these accomplishes allows us to establish common patterns

6
00:00:24.370 --> 00:00:28.040
that we can deploy but keep separate from each other.

7
00:00:28.040 --> 00:00:32.650
So, for instance, if you're used to deploying a multi tier web architecture,

8
00:00:32.650 --> 00:00:37.820
er you might have a stack that's always going to be reused for the back end.

9
00:00:37.820 --> 00:00:41.200
But you want to separate it from your front end in the middle layer so

10
00:00:41.200 --> 00:00:44.760
you might have separate stacks for all three pieces.

11
00:00:44.760 --> 00:00:49.040
And then you might call those from a parent or root stack,

12
00:00:49.040 --> 00:00:50.930
and then we have stack sets.

13
00:00:50.930 --> 00:00:55.590
Now stack sets allow us to deploy a single template

14
00:00:55.590 --> 00:00:58.540
across different regions and accounts.

15
00:00:58.540 --> 00:01:04.700
So what this allows us to do is essentially deploy one time the same changes

16
00:01:04.700 --> 00:01:08.740
throughout either multiple accounts or multiple regions,

17
00:01:08.740 --> 00:01:10.970
and you perform the same actions.

18
00:01:10.970 --> 00:01:13.830
So there's create, update and delete.

19
00:01:13.830 --> 00:01:21.000
Now that we have a grasp on what stack sets and nested stacks are, let's dive into the console

