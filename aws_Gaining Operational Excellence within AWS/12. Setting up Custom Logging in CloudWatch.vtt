WEBVTT
1
00:00:00.740 --> 00:00:01.110
[Autogenerated] Okay,

2
00:00:01.110 --> 00:00:04.840
so let's go ahead and dive into pushing custom logs and

3
00:00:04.840 --> 00:00:08.140
metrics to are CloudWatch services.

4
00:00:08.140 --> 00:00:11.260
Now, I did a little bit of some preemptive work here,

5
00:00:11.260 --> 00:00:15.740
and I just wanna walk you through that before we actually get started.

6
00:00:15.740 --> 00:00:18.780
Now I'm demo ing on an e c two server,

7
00:00:18.780 --> 00:00:22.800
but I'm going to treat it as though it's an on premise server that

8
00:00:22.800 --> 00:00:25.940
we're configuring the CloudWatch Agent four.

9
00:00:25.940 --> 00:00:30.610
And when we do this, there's a few differences than using easy to itself.

10
00:00:30.610 --> 00:00:35.520
The first thing we had to do is create, and I am username.

11
00:00:35.520 --> 00:00:40.190
And you could see I name this user CloudWatch agent and I attached the

12
00:00:40.190 --> 00:00:46.040
AWS managed policy of CloudWatch agent server policy.

13
00:00:46.040 --> 00:00:52.050
So this allows anyone with these user credentials to publish

14
00:00:52.050 --> 00:00:55.340
to CloudWatch with the CloudWatch agent.

15
00:00:55.340 --> 00:00:58.330
I then created some security credentials to

16
00:00:58.330 --> 00:01:01.340
configure on our instantiate later use.

17
00:01:01.340 --> 00:01:04.420
And then I save those so I can enter them here in

18
00:01:04.420 --> 00:01:07.040
this clip coming up in a second.

19
00:01:07.040 --> 00:01:10.240
So you have to do that on your own time.

20
00:01:10.240 --> 00:01:13.840
But for now, let's just go ahead and get started.

21
00:01:13.840 --> 00:01:14.950
And just so you know,

22
00:01:14.950 --> 00:01:18.600
I am going to include a text file with helpful steps and

23
00:01:18.600 --> 00:01:21.640
documents so you can get this going yourself.

24
00:01:21.640 --> 00:01:27.870
So I started this easy to instance, which I'm SSH to into here Now,

25
00:01:27.870 --> 00:01:28.930
First things first.

26
00:01:28.930 --> 00:01:34.940
We have to go ahead and download our RPM package with our CloudWatch agent.

27
00:01:34.940 --> 00:01:36.060
And once that's done,

28
00:01:36.060 --> 00:01:41.540
I'll go ahead and I'm going to install it using my RPM installer.

29
00:01:41.540 --> 00:01:42.840
And once that's done,

30
00:01:42.840 --> 00:01:49.040
the next step we have to take is we need to install and configure our AWS CLI.

31
00:01:49.040 --> 00:01:54.640
Now I'm on Amazon Linux too, so it's already installed for me.

32
00:01:54.640 --> 00:01:57.840
But if you're running this on a true on premise server,

33
00:01:57.840 --> 00:02:01.810
you'll need to download it and install it on your machines.

34
00:02:01.810 --> 00:02:04.840
Now, after it's downloaded and installed,

35
00:02:04.840 --> 00:02:10.110
we need to run an A W s configure for our specific profile.

36
00:02:10.110 --> 00:02:13.940
And that profile is the Amazon CloudWatch agent.

37
00:02:13.940 --> 00:02:16.250
Now, I already ran through here and did this,

38
00:02:16.250 --> 00:02:21.240
so I already have my access keys in place as well as my defaults.

39
00:02:21.240 --> 00:02:24.290
But you'll need to enter your access and secret keys that

40
00:02:24.290 --> 00:02:28.010
you created for your user in I am Now,

41
00:02:28.010 --> 00:02:32.140
this profile right here is extremely important,

42
00:02:32.140 --> 00:02:34.110
and by that I mean the spelling.

43
00:02:34.110 --> 00:02:39.350
So it's case sensitive, so make sure you fill that out Exactly how it is now,

44
00:02:39.350 --> 00:02:44.500
After we've installed both the CloudWatch agent and installed and configured

45
00:02:44.500 --> 00:02:50.690
the A W s CLI we have to go ahead and create our config file.

46
00:02:50.690 --> 00:02:51.090
Now,

47
00:02:51.090 --> 00:02:56.950
this CONFIG file is what's used by the CloudWatch agent to know where it

48
00:02:56.950 --> 00:03:00.720
should push data as well as what data and needs to push.

49
00:03:00.720 --> 00:03:01.070
Now,

50
00:03:01.070 --> 00:03:05.010
you can manually edit this file or you can also run a

51
00:03:05.010 --> 00:03:08.340
wizard provided to you by a W s.

52
00:03:08.340 --> 00:03:14.320
So a good idea might be to go ahead and run the wizard once generate your JSON

53
00:03:14.320 --> 00:03:20.410
config file and then store that somewhere like S S M in order to import in

54
00:03:20.410 --> 00:03:25.780
future instances that you spin up that way you can automate it in some fashion

55
00:03:25.780 --> 00:03:28.340
as opposed to manually creating this.

56
00:03:28.340 --> 00:03:30.340
So let's run this wizard.

57
00:03:30.340 --> 00:03:35.140
You can see it starts The CONFIG manager were installing this on Linux.

58
00:03:35.140 --> 00:03:37.870
I'm going to say this is an on premise server,

59
00:03:37.870 --> 00:03:41.830
not an easy to well run it as root which I don't recommend.

60
00:03:41.830 --> 00:03:45.640
But for the sake of this demo will go ahead and do that.

61
00:03:45.640 --> 00:03:47.060
We will start stats.

62
00:03:47.060 --> 00:03:52.440
D will run it on the default port and I'll accept the defaults for these.

63
00:03:52.440 --> 00:03:57.190
I'm not going to do collect d because that breaks this startup and

64
00:03:57.190 --> 00:04:00.290
I'm going to accept the defaults on most of these.

65
00:04:00.290 --> 00:04:05.540
So we're monitoring host metrics as well as CPU metrics per core.

66
00:04:05.540 --> 00:04:08.840
We'll do the default resolution and aggregation.

67
00:04:08.840 --> 00:04:10.390
We'll do basic metrics.

68
00:04:10.390 --> 00:04:14.840
But you can see we can do standard advanced or none as well.

69
00:04:14.840 --> 00:04:16.290
And I'm going to say yes.

70
00:04:16.290 --> 00:04:18.640
I'm happy with this config.

71
00:04:18.640 --> 00:04:21.790
Now, we do not have an existing CONFIG file,

72
00:04:21.790 --> 00:04:25.440
but this is where we can import from S S M if we needed to.

73
00:04:25.440 --> 00:04:26.130
Let's go ahead.

74
00:04:26.130 --> 00:04:28.770
And I do want to monitor Cem log files.

75
00:04:28.770 --> 00:04:33.190
So let's just do our secure log file Now it's gonna go

76
00:04:33.190 --> 00:04:36.600
ahead and create a log group of secure and then the

77
00:04:36.600 --> 00:04:38.740
stream name will be our host name.

78
00:04:38.740 --> 00:04:41.970
So it should be our instance I p and region No,

79
00:04:41.970 --> 00:04:45.170
to additional logs and no to S S M.

80
00:04:45.170 --> 00:04:46.580
So now it's exited.

81
00:04:46.580 --> 00:04:47.620
Well, that's great.

82
00:04:47.620 --> 00:04:50.100
But now what do we do now?

83
00:04:50.100 --> 00:04:54.240
I want to go ahead and start our CloudWatch agent.

84
00:04:54.240 --> 00:04:55.920
So I'm gonna run this command here,

85
00:04:55.920 --> 00:05:00.580
you can see we're running as pseudo I'm pointing to our binary.

86
00:05:00.580 --> 00:05:03.140
So we're running our CloudWatch Agent control.

87
00:05:03.140 --> 00:05:04.740
Been file.

88
00:05:04.740 --> 00:05:08.510
We have this dash a fetch config, and this is saying,

89
00:05:08.510 --> 00:05:09.120
Hey,

90
00:05:09.120 --> 00:05:15.340
make sure you go and update or grab the most recent update of our config file.

91
00:05:15.340 --> 00:05:20.910
We're specifying it's an on premise mode and then we specify our config file,

92
00:05:20.910 --> 00:05:24.830
which is the default path that's used with that

93
00:05:24.830 --> 00:05:27.940
config agent that we just ran through.

94
00:05:27.940 --> 00:05:32.810
And then Dash s starts the agent and there we go.

95
00:05:32.810 --> 00:05:33.980
It's pretty quick.

96
00:05:33.980 --> 00:05:36.430
You can see it started everything up.

97
00:05:36.430 --> 00:05:40.740
Now, after this runs, I wanna verify it's running successfully.

98
00:05:40.740 --> 00:05:46.630
So let me tail the log file and you can actually see

99
00:05:46.630 --> 00:05:48.470
we're getting some errors now.

100
00:05:48.470 --> 00:05:53.640
This is because since I'm treating this E c two as an on premise,

101
00:05:53.640 --> 00:06:00.340
it's looking for role credentials like a typical e c two application would use.

102
00:06:00.340 --> 00:06:02.170
So I needed to do one more thing.

103
00:06:02.170 --> 00:06:07.140
I need to edit a config file and specify a provider.

104
00:06:07.140 --> 00:06:07.360
Now,

105
00:06:07.360 --> 00:06:09.980
you won't have to do this if you're truly

106
00:06:09.980 --> 00:06:12.890
configuring on an actual on prem server.

107
00:06:12.890 --> 00:06:17.320
So let me go ahead and edit that really quickly.

108
00:06:17.320 --> 00:06:20.640
And I'm just gonna edit this credential section.

109
00:06:20.640 --> 00:06:24.870
You can see I'm specifying my profile that I created as well as my

110
00:06:24.870 --> 00:06:28.070
brute credentials file that we set up earlier.

111
00:06:28.070 --> 00:06:32.250
Now, if I run this startup command again, it should restart the service.

112
00:06:32.250 --> 00:06:33.740
There we go.

113
00:06:33.740 --> 00:06:37.140
And let's run that tail again.

114
00:06:37.140 --> 00:06:37.670
All right?

115
00:06:37.670 --> 00:06:39.880
Things error looking a little bit better now.

116
00:06:39.880 --> 00:06:49.940
So now if we navigate to CloudWatch here if I go to metrics all metrics

117
00:06:49.940 --> 00:06:54.240
we can CR custom name space under CloudWatch agent.

118
00:06:54.240 --> 00:06:59.000
Now, this is the default named Space created by this agent,

119
00:06:59.000 --> 00:07:04.940
and it's configurable via the config file for the Asian itself.

120
00:07:04.940 --> 00:07:09.430
So now all of our metrics are going to get pushed under this name space.

121
00:07:09.430 --> 00:07:11.630
Now I'm going to give it a few minutes,

122
00:07:11.630 --> 00:07:15.220
so I'll pause here just so we can actually push apps.

123
00:07:15.220 --> 00:07:17.740
Um, data to CloudWatch.

124
00:07:17.740 --> 00:07:19.920
Okay, you can see are metrics have updated.

125
00:07:19.920 --> 00:07:21.950
Now we have 44.

126
00:07:21.950 --> 00:07:28.740
So if I go into CPU and host we can see now our most recent instance here.

127
00:07:28.740 --> 00:07:34.120
So now we're pushing custom metric data up to CloudWatch off of

128
00:07:34.120 --> 00:07:36.980
our server configured with CloudWatch agent.

129
00:07:36.980 --> 00:07:42.290
You can see we can monitor file system paths as an example.

130
00:07:42.290 --> 00:07:48.710
So if I just monitor route here I can see the utilization on this disc,

131
00:07:48.710 --> 00:07:53.240
you could see it's currently at about 18% and it

132
00:07:53.240 --> 00:07:55.540
actually just recently drop-down.

133
00:07:55.540 --> 00:08:00.280
So our CloudWatch agent is continuously aggregating data and pushing it to

134
00:08:00.280 --> 00:08:04.840
CloudWatch in our AWS account from an on premise server.

135
00:08:04.840 --> 00:08:06.040
It's pretty neat.

136
00:08:06.040 --> 00:08:06.420
Now.

137
00:08:06.420 --> 00:08:09.570
The last thing I want to show here is under law groups.

138
00:08:09.570 --> 00:08:13.840
We have that custom law group that we created called Secure,

139
00:08:13.840 --> 00:08:17.050
and then we have our log stream name, which is our instance,

140
00:08:17.050 --> 00:08:19.890
host name and under here.

141
00:08:19.890 --> 00:08:24.800
You can see we have all types of log messages that error living in

142
00:08:24.800 --> 00:08:29.440
that bar blog secure log file on our instance.

143
00:08:29.440 --> 00:08:30.940
Now that's going to do it.

144
00:08:30.940 --> 00:08:31.380
Hopefully,

145
00:08:31.380 --> 00:08:35.300
you have a pretty firm understanding on how you can configure and use

146
00:08:35.300 --> 00:08:39.040
the CloudWatch agent on your on premise servers.

147
00:08:39.040 --> 00:08:45.000
We'll go ahead and wrap up here and then move on to the module. Wrap up in review

