WEBVTT
1
00:00:00.460 --> 00:00:10.190
In this demo, I will show you how to set up heapster with  influxdb and grafana.

2
00:00:10.190 --> 00:00:13.960
You first need heapster, which you can download from "www.github.com/kubernetes/heapster"

3
00:00:14.060 --> 00:00:16.490
So, here you clone or download.

4
00:00:16.500 --> 00:00:23.680
You can just download a zip file for instance or we can use clone, to clone this repository.

5
00:00:24.790 --> 00:00:38.650
And then, download this masters of heapster, unzip it, then you can find the files 

6
00:00:38.890 --> 00:00:39.880
that we need to deploy

7
00:00:42.080 --> 00:00:42.960
"ls deploy/kube-config/influxdb"

8
00:00:43.230 --> 00:00:51.140
And those files are meant to Kubernetes addon system, so what I am going to do is

9
00:00:51.410 --> 00:00:57.900
I am just going to use "kubectl" and add those as a pod.

10
00:00:58.090 --> 00:01:01.620
So, I will need to add some of these services.

11
00:01:01.630 --> 00:01:07.690
So, I will first start with Grafana service and here it says, 

12
00:01:07.690 --> 00:01:08.600
"If you are not using this addon, you comment out this line"

13
00:01:08.680 --> 00:01:09.930
So, that's what I'm going to do.

14
00:01:10.150 --> 00:01:16.540
And this needs to be of type "NotePort", because we are not going to use a load balancer on our minikube.

15
00:01:17.500 --> 00:01:26.110
If you are using AWS, and you want to use a load balancer, you could change this to "Load Balancer".

16
00:01:26.110 --> 00:01:28.400
I am going to edit the "heapster-services.yml".

17
00:01:28.470 --> 00:01:36.520
Again, this line should be commented. If I want to access this service externally I could add a NodePort,

18
00:01:36.520 --> 00:01:40.760
but for now I don't need it.

19
00:01:42.490 --> 00:01:45.580
And then we have influx TV service,

20
00:01:48.580 --> 00:01:55.900
and then I comment on this line again. This one again, influxes has a UI that you can use,

21
00:01:55.900 --> 00:02:03.010
then you just have to uncomment NodePort and uncomment these ports, and you can use the influxdb API 

22
00:02:03.010 --> 00:02:06.750
and you can do "create" directly on the database.

23
00:02:06.760 --> 00:02:10.720
I'm only going to show you the graphs using the dashboard and grafana.

24
00:02:10.760 --> 00:02:18.140
I don't need those, "kubectl create -f", I can do "-f" also on the directory, 

25
00:02:18.280 --> 00:02:25.420
those need to be files and I am going to add all those files.

26
00:02:25.690 --> 00:02:32.780
But, I see that I'm trying to connect to my kops cluster, which is off line and I want to use minikube.

27
00:02:32.980 --> 00:02:42.480
So, I'm just going to exit here and on my MacBook itself I have minikube running.

28
00:02:42.790 --> 00:02:51.010
So, I'm going to use, "kubectl create -f" right here, 

29
00:02:51.010 --> 00:03:00.960
because I use this "ubuntu-xenial", to my kops cluster, and I have my local MacBook Pro to connect to minikube.

30
00:03:00.960 --> 00:03:03.040
This now are running and I need at least one pod to show you an example.

31
00:03:03.120 --> 00:03:11.070
So, I am just going to create the from the "Kubernetes-course" the deployment, the "helloworld.yml"

32
00:03:14.400 --> 00:03:18.360
"Kubectl create"

33
00:03:19.820 --> 00:03:29.010
And when this, "monitoring grafana" service is up, I can do 

34
00:03:29.070 --> 00:03:30.920
"minikube service mentoring-grafana --url" 

35
00:03:31.010 --> 00:03:38.980
and also launched in a different namespace, so I have to specify, "--namespace=kube-system"

36
00:03:39.360 --> 00:03:47.120
This is going to give me a URL and then I should be able to connect.

37
00:03:47.120 --> 00:03:47.500
This is Grafana, you might need to log in here.

38
00:03:47.540 --> 00:03:55.430
So, make sure that if you make this public, that you immediately change the password or that you password protect this UI.

39
00:03:55.520 --> 00:04:05.480
User, standard user and password is admin, I am going to login with admin, and then I can see the cluster.

40
00:04:05.640 --> 00:04:07.850
This can take some time before it is running.

41
00:04:08.910 --> 00:04:13.790
So, I just refreshed because you have to wait a couple of minutes after you launch your cluster.

42
00:04:13.890 --> 00:04:16.420
And now we have one data point.

43
00:04:16.640 --> 00:04:23.750
It becomes more interesting, when we go inside of cluster to pods 

44
00:04:23.750 --> 00:04:24.470
and then here we can then see our pods.

45
00:04:24.500 --> 00:04:31.250
We have the namespace kube-system and the namespace default. 

46
00:04:31.250 --> 00:04:36.560
In a namespace default I have four instances of my "helloworld-deployment" that I just started, and then here you will be able to see how much

47
00:04:36.680 --> 00:04:44.650
CPU, how much memory, how much network usage, how much filesystem usage, the pods are using.

48
00:04:44.650 --> 00:04:50.830
And, also more interesting now is that, if you go to the dashboard, you will also be able to see graphs

49
00:04:50.890 --> 00:04:58.500
So you type, "minikube dashboards" and the URL, and I go to the kupe dashboard 

50
00:04:58.600 --> 00:05:06.710
and I will also now see memory usage, CPU usage of all those pods, which is very good to follow up.

51
00:05:06.760 --> 00:05:13.250
And you also need this monitoring to do auto-scaling, which I will explain to you in the next lecture.
