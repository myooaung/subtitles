1
1

00:00:00,172  -->  00:00:01,774
<v Edward>In this lecture I will show you</v>
2

2

00:00:01,774  -->  00:00:04,158
the metrics using Grafana.
3

3

00:00:04,158  -->  00:00:07,458
In Istio you can also have Metrics with Grafana.
4

4

00:00:07,458  -->  00:00:09,704
In this lecture I will show you how to reach
5

5

00:00:09,704  -->  00:00:13,704
the Grafana Dashboard and interpret the metrics.
6

6

00:00:14,891  -->  00:00:17,586
Just like I did with the distributed tracing,
7

7

00:00:17,586  -->  00:00:21,919
you can have a look at the services of istio-system,
8

8

00:00:23,978  -->  00:00:27,883
and you can expose one of the services using port forwarding
9

9

00:00:27,883  -->  00:00:30,753
or using a load balancer.
10

10

00:00:30,753  -->  00:00:32,531
Also if you're using a load balancer,
11

11

00:00:32,531  -->  00:00:33,716
everyone can contact it,
12

12

00:00:33,716  -->  00:00:36,526
so you might also want to contour some security groups
13

13

00:00:36,526  -->  00:00:38,824
to make sure that only you can contact it,
14

14

00:00:38,824  -->  00:00:42,033
or put the load balancer private, for example.
15

15

00:00:42,033  -->  00:00:46,366
So here we have Grafana, so let's edit this service,
16

16

00:00:48,602  -->  00:00:53,019
edit svc grafana, and we'll also turn this cluster IP
17

17

00:00:54,615  -->  00:00:56,365
into a load balancer.
18

18

00:00:58,791  -->  00:01:01,188
This will speed up a load balancer for Grafana,
19

19

00:01:01,188  -->  00:01:06,021
so let's get our services from istio-system using -o wide.
20

20

00:01:08,467  -->  00:01:13,467
And then we have here our external host name on port 3000
21

21

00:01:13,990  -->  00:01:16,823
that we can use to access Grafana.
22

22

00:01:19,682  -->  00:01:23,731
So this is the load balancer euro port 3000,
23

23

00:01:23,731  -->  00:01:28,048
and then you will see the Grafana Dashboard.
24

24

00:01:28,048  -->  00:01:30,556
You can click on Home, and there you will see
25

25

00:01:30,556  -->  00:01:32,585
all the predefined dashboards.
26

26

00:01:32,585  -->  00:01:35,294
So we have the Istio Galley Dashboard, Mesh Dashboard,
27

27

00:01:35,294  -->  00:01:37,086
Service Dashboard, and the Workload Dashboard,
28

28

00:01:37,086  -->  00:01:40,435
and then we have the Mixer and the Pilot Dashboard.
29

29

00:01:40,435  -->  00:01:44,219
Let's have a look at the Istio Service Dashboard.
30

30

00:01:44,219  -->  00:01:47,974
So, here we see all our services are helloservice
31

31

00:01:47,974  -->  00:01:49,702
is liked by default here.
32

32

00:01:49,702  -->  00:01:53,016
This is the first one, and there's currently no volume.
33

33

00:01:53,016  -->  00:01:55,008
So let's go back to our terminal,
34

34

00:01:55,008  -->  00:01:57,758
and let's contact this app again.
35

35

00:02:01,265  -->  00:02:04,639
This is the Istio ingress gateway on hello.
36

36

00:02:04,639  -->  00:02:09,639
Get Hello, World! because our hello application is deployed.
37

37

00:02:10,022  -->  00:02:11,363
If it's not deployed, then you can
38

38

00:02:11,363  -->  00:02:16,196
just redeploy helloworld.yaml and helloworld gateway.yaml.
39

39

00:02:17,074  -->  00:02:18,459
So we generated some traffic.
40

40

00:02:18,459  -->  00:02:21,709
Let's go back to our Grafana Dashboard.
41

41

00:02:22,775  -->  00:02:27,775
And now we see there's Client Request Volume 0.8 operations.
42

42

00:02:27,817  -->  00:02:31,296
The Server Request Volume, 100% was successful.
43

43

00:02:31,296  -->  00:02:35,808
There's no hp-500 responses, and we also see here
44

44

00:02:35,808  -->  00:02:39,858
that all the requests were under 30 milliseconds.
45

45

00:02:39,858  -->  00:02:43,563
We also see here the incoming requests.
46

46

00:02:43,563  -->  00:02:47,165
I did here 2.2 operations per second.
47

47

00:02:47,165  -->  00:02:49,682
And then right here five seconds later,
48

48

00:02:49,682  -->  00:02:53,154
I did only 0.8 operations per second.
49

49

00:02:53,154  -->  00:02:54,798
So this is the hello.default.
50

50

00:02:54,798  -->  00:02:58,161
So if you have then a look at our world.default,
51

51

00:02:58,161  -->  00:03:01,726
then we'll also see that our world
52

52

00:03:01,726  -->  00:03:05,222
has Client Requests and Server Requests.
53

53

00:03:05,222  -->  00:03:08,265
And if you then go to world-2.default service,
54

54

00:03:08,265  -->  00:03:11,182
then we also see Incoming Requests,
55

55

00:03:12,642  -->  00:03:15,160
and everything was successful.
56

56

00:03:15,160  -->  00:03:16,906
So this is a nice dashboard that you can use
57

57

00:03:16,906  -->  00:03:19,887
to see your traffic that is incoming,
58

58

00:03:19,887  -->  00:03:21,616
whether there are errors on your services,
59

59

00:03:21,616  -->  00:03:24,911
whether everything is healthy.
60

60

00:03:24,911  -->  00:03:26,361
This is a Service Dashboard,
61

61

00:03:26,361  -->  00:03:29,719
but you also have for example the Mixer, the Pilot Dashboard
62

62

00:03:29,719  -->  00:03:31,420
that can give you some general information
63

63

00:03:31,420  -->  00:03:34,421
about the health of your Istio Service, itself.
64

64

00:03:34,421  -->  00:03:36,345
So for example, the Mixer can tell you
65

65

00:03:36,345  -->  00:03:40,428
how much memory is in use, CPU, Disk, Goroutines,
66

66

00:03:41,416  -->  00:03:44,235
the incoming requests that go into the Mixer.
67

67

00:03:44,235  -->  00:03:46,228
So, this can give you some general idea
68

68

00:03:46,228  -->  00:03:49,074
of the health of Istio itself.
69

69

00:03:49,074  -->  00:03:51,469
And then you also have the Pilot Dashboard.
70

70

00:03:51,469  -->  00:03:55,160
This is the Istio Pilot here are also some server metrics,
71

71

00:03:55,160  -->  00:03:58,181
Memory, CPU, Disk, Goroutines, that you can see
72

72

00:03:58,181  -->  00:04:00,764
whether this is healthy or not.
73

73

00:04:01,868  -->  00:04:03,092
So mainly I think that
74

74

00:04:03,092  -->  00:04:05,900
the Istio Service Dashboard is really interesting
75

75

00:04:05,900  -->  00:04:10,427
because you can drill down on the services that are deployed
76

76

00:04:10,427  -->  00:04:14,185
on your cluster and have a look at how they are performing.
77

77

00:04:14,185  -->  00:04:16,558
In general the request rate, for example,
78

78

00:04:16,558  -->  00:04:18,758
is a very interesting metric.
79

79

00:04:18,758  -->  00:04:19,887
If this goes too high
80

80

00:04:19,887  -->  00:04:22,776
then it can have impact to your clients
81

81

00:04:22,776  -->  00:04:25,589
that are trying to reach your service, for example.
82

82

00:04:25,589  -->  00:04:27,365
I would say have a look at it yourself.
83

83

00:04:27,365  -->  00:04:30,344
Expose this service as a load balancer
84

84

00:04:30,344  -->  00:04:32,307
or just use port forwarding
85

85

00:04:32,307  -->  00:04:34,526
to have a look at this dashboard.
