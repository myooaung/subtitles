WEBVTT
1
1

00:00:00.000  -->  00:00:02.249
<v Edward>In this demo I will show you how</v>
2

2

00:00:02.249  -->  00:00:04.166
the external DNS works.
3

3

00:00:05.083  -->  00:00:08.308
In my data proposary I have a folder external DNS
4

4

00:00:08.308  -->  00:00:11.152
and here I have a README.
5

5

00:00:11.152  -->  00:00:12.738
This is the Project page
6

6

00:00:12.738  -->  00:00:13.980
if you want to read more about it
7

7

00:00:13.980  -->  00:00:16.308
or you want to read more about the different setups
8

8

00:00:16.308  -->  00:00:17.959
that are available.
9

9

00:00:17.959  -->  00:00:19.229
We need to do a few things
10

10

00:00:19.229  -->  00:00:22.144
before we can use this externaL-DNS.
11

11

00:00:22.144  -->  00:00:24.977
First we need to create IAM Policy
12

12

00:00:26.068  -->  00:00:28.212
because we need to give permissions
13

13

00:00:28.212  -->  00:00:31.870
to our nodes to create these DNS records.
14

14

00:00:31.870  -->  00:00:33.735
I have a script for this,
15

15

00:00:33.735  -->  00:00:35.299
this script adds permissions
16

16

00:00:35.299  -->  00:00:36.986
to the nodes IAM role,
17

17

00:00:36.986  -->  00:00:40.618
enabling any pod to use these AWS privileges.
18

18

00:00:40.618  -->  00:00:43.499
Usage of kube2iam is recommended
19

19

00:00:43.499  -->  00:00:47.183
but not yet implemented by default in kops.
20

20

00:00:47.183  -->  00:00:49.227
So this role will add privileges
21

21

00:00:49.227  -->  00:00:51.172
but it will add it to every node
22

22

00:00:51.172  -->  00:00:52.656
and pod can users.
23

23

00:00:52.656  -->  00:00:54.397
which is not really desired
24

24

00:00:54.397  -->  00:00:55.976
but it is still a short coming
25

25

00:00:55.976  -->  00:00:58.465
of a default deployment of kops.
26

26

00:00:58.465  -->  00:01:01.081
They are implementing kube2iam
27

27

00:01:01.081  -->  00:01:02.732
which resolves this,
28

28

00:01:02.732  -->  00:01:03.595
which make sure
29

29

00:01:03.595  -->  00:01:06.770
that you can put IAM roles on a pod basis
30

30

00:01:06.770  -->  00:01:08.965
rather than on a node basis
31

31

00:01:08.965  -->  00:01:10.997
but it is not implemented by default
32

32

00:01:10.997  -->  00:01:13.145
so I have chosen to to the demo this way
33

33

00:01:13.145  -->  00:01:15.060
and when there's a new version of kops
34

34

00:01:15.060  -->  00:01:19.310
then there will be a better way of using IAM roles.
35

35

00:01:20.470  -->  00:01:22.400
So to make this work
36

36

00:01:22.400  -->  00:01:24.776
you need to change the node role
37

37

00:01:24.776  -->  00:01:26.580
so this is the IAM role
38

38

00:01:26.580  -->  00:01:29.373
for me it nodes kubernetes newtech academy.
39

39

00:01:29.373  -->  00:01:33.873
So you will have to change this into you cluster name.
40

40

00:01:35.175  -->  00:01:37.714
I am going to apply this,
41

41

00:01:37.714  -->  00:01:40.980
if you don't get any output then it is working.
42

42

00:01:40.980  -->  00:01:43.733
I am going to apply the ingress control again.
43

43

00:01:43.733  -->  00:01:46.084
I am going to use apply instead of create
44

44

00:01:46.084  -->  00:01:47.746
because I'm gonna make changes
45

45

00:01:47.746  -->  00:01:50.072
to some of the objects later on.
46

46

00:01:50.072  -->  00:01:51.467
You can always use apply instead
47

47

00:01:51.467  -->  00:01:52.917
of create if you want.
48

48

00:01:52.917  -->  00:01:55.263
Apply will actually allow you
49

49

00:01:55.263  -->  00:01:56.545
to make changes DNS files
50

50

00:01:56.545  -->  00:01:58.997
and then apply those changes again.
51

51

00:01:58.997  -->  00:02:01.497
So I'm going to start ingress,
52

52

00:02:02.401  -->  00:02:04.977
in this setup we still have the host port
53

53

00:02:04.977  -->  00:02:08.251
because that's what I used in the previous lecture
54

54

00:02:08.251  -->  00:02:10.248
but actually that's not necessary anymore.
55

55

00:02:10.248  -->  00:02:12.440
So if you go to host port here
56

56

00:02:12.440  -->  00:02:14.069
you could remove these lines
57

57

00:02:14.069  -->  00:02:17.701
if you don't want to expose this port anymore
58

58

00:02:17.701  -->  00:02:19.453
because we're going to put a Load Balancer
59

59

00:02:19.453  -->  00:02:20.951
in front of this controller
60

60

00:02:20.951  -->  00:02:23.389
so the host ports here are actually really not necessary.
61

61

00:02:23.389  -->  00:02:25.258
So you could remove those
62

62

00:02:25.258  -->  00:02:27.831
and then do an apply again.
63

63

00:02:27.831  -->  00:02:29.739
I'm gonna create a Load Balancer
64

64

00:02:29.739  -->  00:02:31.072
for the ingress.
65

65

00:02:32.166  -->  00:02:35.666
This is going to create the Load Balancer.
66

66

00:02:37.585  -->  00:02:41.252
So now I have an ingress-nginx Load Balancer
67

67

00:02:42.101  -->  00:02:43.184
and this will
68

68

00:02:45.688  -->  00:02:47.440
give me this host name.
69

69

00:02:47.440  -->  00:02:49.686
So if I connect to this host name
70

70

00:02:49.686  -->  00:02:52.494
I'll end up at the ingress controller
71

71

00:02:52.494  -->  00:02:53.832
that's why you don't need
72

72

00:02:53.832  -->  00:02:57.045
this host port anymore in this setup.
73

73

00:02:57.045  -->  00:02:58.721
Then we're going to create external DNS
74

74

00:02:58.721  -->  00:03:00.319
and the ingress role.
75

75

00:03:00.319  -->  00:03:02.152
So let's create these,
76

76

00:03:04.588  -->  00:03:08.338
also you see that here apply service-l4.yaml.
77

77

00:03:09.185  -->  00:03:10.770
This service was created with
78

78

00:03:10.770  -->  00:03:13.197
this confignap was configured.
79

79

00:03:13.197  -->  00:03:15.509
If you use create instead of apply
80

80

00:03:15.509  -->  00:03:17.018
then it would give an error
81

81

00:03:17.018  -->  00:03:19.405
because we already have this confignap earlier,
82

82

00:03:19.405  -->  00:03:22.097
so that's why I'm using apply here.
83

83

00:03:22.097  -->  00:03:23.940
All this is created, let's have a look
84

84

00:03:23.940  -->  00:03:25.577
at my ingress demo file,
85

85

00:03:25.577  -->  00:03:29.742
again here I have configured instead of apply
86

86

00:03:29.742  -->  00:03:33.896
because I already had an ingress with helloworld-rules
87

87

00:03:33.896  -->  00:03:37.096
and now I applied one of the same name.
88

88

00:03:37.096  -->  00:03:38.346
So we're having
89

89

00:03:39.567  -->  00:03:43.450
2 hosts helloworld-v1 kubernetes newtech academy
90

90

00:03:43.450  -->  00:03:47.880
and helloworld-v2 kubernetes newtech academy.
91

91

00:03:47.880  -->  00:03:50.800
Let's have a look at the pods,
92

92

00:03:50.800  -->  00:03:53.405
should have an external DNS pods.
93

93

00:03:53.405  -->  00:03:55.996
Let's have a look at the logs,
94

94

00:03:55.996  -->  00:03:56.913
UPSERT logs
95

95

00:03:59.092  -->  00:04:01.228
and now you see we have
96

96

00:04:01.228  -->  00:04:03.829
the helloworld-v1 kubernetes newtech academy
97

97

00:04:03.829  -->  00:04:04.912
and v2 added.
98

98

00:04:07.562  -->  00:04:08.548
So all the records are up to date
99

99

00:04:08.548  -->  00:04:10.553
There's also a record
100

100

00:04:10.553  -->  00:04:13.344
for ingress kubernetes newtech academy
101

101

00:04:13.344  -->  00:04:17.208
because if I have a look at service-l4.yaml
102

102

00:04:17.208  -->  00:04:21.895
then I also specified an external DNS validation here
103

103

00:04:21.895  -->  00:04:26.395
to make sure that I also have a host for this ingress.
104

104

00:04:27.356  -->  00:04:28.189
So now you should be able
105

105

00:04:28.189  -->  00:04:30.540
to go to your browser
106

106

00:04:30.540  -->  00:04:31.373
and you should be able
107

107

00:04:31.373  -->  00:04:33.613
to reach helloworld-v1 kubernetes newtech academy
108

108

00:04:33.613  -->  00:04:36.597
and helloworld-v2 kubernetes newtech academy
109

109

00:04:36.597  -->  00:04:40.203
just like that there are no more changes necessary.
110

110

00:04:40.203  -->  00:04:43.573
The external DNS created the DNS circuit for us
111

111

00:04:43.573  -->  00:04:46.422
and it's pointing to Load Balancer, Load Balancer point
112

112

00:04:46.422  -->  00:04:49.480
to the ingress, then the ingress has all the correct rules.
113

113

00:04:49.480  -->  00:04:53.951
So I will curl but you can use your browser as well.
114

114

00:04:53.951  -->  00:04:56.861
Curl helloworld-v1 gives hello world
115

115

00:04:56.861  -->  00:05:00.111
curl helloworld-v2 gives helloworld v2.
116

116

00:05:01.135  -->  00:05:03.968
So if I have a look at my ingress,
117

117

00:05:05.343  -->  00:05:08.926
helloworld-v1 goes to helloworld-v1 service
118

118

00:05:09.926  -->  00:05:14.537
and helloworld-v2 goes to helloworld-v2 service.
119

119

00:05:14.537  -->  00:05:16.529
So this is all working.
120

120

00:05:16.529  -->  00:05:19.297
This is a very nice setup that you can use
121

121

00:05:19.297  -->  00:05:23.459
to have your DNS names automatically added.
122

122

00:05:23.459  -->  00:05:26.180
So then someone could just create an application
123

123

00:05:26.180  -->  00:05:27.853
with the service,
124

124

00:05:27.853  -->  00:05:29.202
with an ingress rule
125

125

00:05:29.202  -->  00:05:31.513
and everything gets automatically created
126

126

00:05:31.513  -->  00:05:33.806
and you can start using your apps immediately.
