WEBVTT
1
1

00:00:00.370  -->  00:00:01.400
<v Edward Viaene>In this demo,</v>
2

2

00:00:01.400  -->  00:00:04.823
I will show you how to use TLS on AWS ELB.
3

3

00:00:07.820  -->  00:00:09.840
The first step before we can enable TLS
4

4

00:00:09.840  -->  00:00:12.300
on our LS load balancer, is we need
5

5

00:00:12.300  -->  00:00:14.143
to create an SSL certificate.
6

6

00:00:15.320  -->  00:00:19.053
In AWS, we have the LS certificate manager.
7

7

00:00:20.040  -->  00:00:21.892
And this certificate manager allows us
8

8

00:00:21.892  -->  00:00:25.180
to create a new certificate that we then
9

9

00:00:25.180  -->  00:00:26.780
can attach to our load balancer.
10

10

00:00:28.510  -->  00:00:30.460
So this is the AWS Certificate Manager.
11

11

00:00:31.320  -->  00:00:34.420
You need to make sure you are in the correct region.
12

12

00:00:34.420  -->  00:00:36.010
I'm here in Ireland.
13

13

00:00:37.620  -->  00:00:40.010
And then I'm going to provision a certificate.
14

14

00:00:40.010  -->  00:00:41.963
So I'm going to click get started,
15

15

00:00:42.830  -->  00:00:44.683
gonna request a public certificate,
16

16

00:00:46.222  -->  00:00:48.460
and then I will use my domain name
17

17

00:00:48.460  -->  00:00:50.670
that I'm hosting in route 53
18

18

00:00:50.670  -->  00:00:55.170
because that's easier to then add the host name.
19

19

00:00:55.170  -->  00:00:57.163
I'll call this one, helloworld.
20

20

00:00:58.520  -->  00:01:03.460
And then my domain input is host, using route 53,
21

21

00:01:03.460  -->  00:01:07.570
kubernetes.newtech.academy. I click next.
22

22

00:01:11.750  -->  00:01:13.823
I will choose for DNS validation.
23

23

00:01:14.990  -->  00:01:16.260
Choose this option if you have
24

24

00:01:16.260  -->  00:01:18.600
or can obtain information to modify the DNS.
25

25

00:01:18.600  -->  00:01:20.500
This is the easiest way.
26

26

00:01:20.500  -->  00:01:22.352
You can also choose email validation,
27

27

00:01:22.352  -->  00:01:23.185
but then you have to make sure
28

28

00:01:23.185  -->  00:01:24.730
that your email addresses work.
29

29

00:01:24.730  -->  00:01:28.670
So DNS is the easiest. I'm gonna click review.
30

30

00:01:28.670  -->  00:01:32.120
Helloworld.kubernetes.newtech.academy. All correct.
31

31

00:01:32.120  -->  00:01:37.120
Confirm and request. Pending validation.
32

32

00:01:37.690  -->  00:01:40.770
I need to add these records first.
33

33

00:01:40.770  -->  00:01:44.600
So this is the name, it's type CNAME, and this is the value.
34

34

00:01:44.600  -->  00:01:48.040
And because I have kubernetes.newtech.academy host
35

35

00:01:48.040  -->  00:01:50.481
on route 53, I can click this button,
36

36

00:01:50.481  -->  00:01:53.440
create record in route 53.
37

37

00:01:53.440  -->  00:01:56.630
You'll only see this button, if this host name
38

38

00:01:56.630  -->  00:02:01.330
kubernetes.newtech.academy in my case, hosted on route 53.
39

39

00:02:01.330  -->  00:02:04.707
I click this button and then I click create,
40

40

00:02:04.707  -->  00:02:08.960
and it will create the records for me.
41

41

00:02:08.960  -->  00:02:10.853
So if I have a look at services,
42

42

00:02:12.280  -->  00:02:16.713
route 53, open it into a new tab.
43

43

00:02:18.530  -->  00:02:20.400
The DNS record was written successfully
44

44

00:02:20.400  -->  00:02:22.543
to your Route 53 hosted zone.
45

45

00:02:23.430  -->  00:02:27.080
So let's go to my Route 53 host zones.
46

46

00:02:27.080  -->  00:02:28.973
Kubernetes.newtech.academy.
47

47

00:02:30.330  -->  00:02:34.400
And then here I have this CNAME that has been added.
48

48

00:02:34.400  -->  00:02:36.130
If you don't have route 53,
49

49

00:02:36.130  -->  00:02:38.990
you have to add this manually yourself.
50

50

00:02:38.990  -->  00:02:41.703
So name, CNAME, and value.
51

51

00:02:44.210  -->  00:02:46.060
This will take some time to validate.
52

52

00:02:48.410  -->  00:02:52.690
And then after, maybe five to ten minutes,
53

53

00:02:52.690  -->  00:02:56.223
maybe even 30, we get status issued.
54

54

00:02:57.800  -->  00:03:00.343
This is the ARN. This is the ARN,
55

55

00:03:00.343  -->  00:03:04.320
that you can then use in your ML file.
56

56

00:03:04.320  -->  00:03:06.993
So this is a unique ID, that you need.
57

57

00:03:07.960  -->  00:03:10.293
So let's create our load balancer.
58

58

00:03:12.280  -->  00:03:14.780
In my kubernetes course, give the properties.
59

59

00:03:14.780  -->  00:03:19.123
I have luxury, elb-tls. And here I have two files.
60

60

00:03:19.960  -->  00:03:22.490
I have the helloworld yml file.
61

61

00:03:22.490  -->  00:03:24.420
That just contains a deployment.
62

62

00:03:24.420  -->  00:03:26.113
One that we used earlier already.
63

63

00:03:27.010  -->  00:03:29.103
And then we have the helloworld service.
64

64

00:03:29.948  -->  00:03:33.023
And here I'm going to use these annotations.
65

65

00:03:34.010  -->  00:03:36.070
So the first change that I need to make
66

66

00:03:36.070  -->  00:03:40.933
is this one, is the cert. I need to here paste my ARN
67

67

00:03:42.310  -->  00:03:45.163
that points to the certificate I just created.
68

68

00:03:46.410  -->  00:03:48.450
The backend protocol is http
69

69

00:03:48.450  -->  00:03:50.680
because the communication between the load balancer
70

70

00:03:50.680  -->  00:03:54.610
and my port is http. My helloworld to deployment
71

71

00:03:54.610  -->  00:03:58.860
is not on https, so this still needs to be http.
72

72

00:03:58.860  -->  00:04:01.450
The SSL port that I want to use,
73

73

00:04:01.450  -->  00:04:05.330
this is the listener, of my load balancer is 443.
74

74

00:04:05.330  -->  00:04:07.550
So port 80, will not use SSL.
75

75

00:04:07.550  -->  00:04:09.160
So it's important to set this,
76

76

00:04:09.160  -->  00:04:09.993
otherwise kubernetes will
77

77

00:04:09.993  -->  00:04:13.150
just put SSL on every single listener.
78

78

00:04:13.150  -->  00:04:15.470
I also enabled connection draining
79

79

00:04:15.470  -->  00:04:18.470
and connection draining is 60 seconds.
80

80

00:04:18.470  -->  00:04:20.360
So even though it gets deleted,
81

81

00:04:20.360  -->  00:04:21.410
it will keep the connections
82

82

00:04:21.410  -->  00:04:23.930
still live for another 60 seconds.
83

83

00:04:23.930  -->  00:04:27.370
And I also add two tags. Environment equals dev
84

84

00:04:27.370  -->  00:04:30.067
and app helloworld. These will be tags added in AWS.
85

85

00:04:31.710  -->  00:04:32.899
Then I have two ports,
86

86

00:04:32.899  -->  00:04:35.120
that will be added to the load balancer.
87

87

00:04:35.120  -->  00:04:39.540
An http port on port 80, that will go to my deployment,
88

88

00:04:39.540  -->  00:04:44.540
and an hps port on 443, that will also go to my deployment.
89

89

00:04:45.640  -->  00:04:50.050
So it will connect to the nodejs port of my helloworld app.
90

90

00:04:50.050  -->  00:04:52.450
So it's encrypted to the load balancer
91

91

00:04:52.450  -->  00:04:54.410
and then TLS is terminated
92

92

00:04:54.410  -->  00:04:56.398
and then it will go over plain tags
93

93

00:04:56.398  -->  00:05:00.700
to my port, because then I am in my internal network.
94

94

00:05:00.700  -->  00:05:04.253
I don't need SSL or TLS in my internal network.
95

95

00:05:05.090  -->  00:05:09.520
So that's it. I save this. I do kubectl create
96

96

00:05:11.016  -->  00:05:16.016
of helloworld.yml and of my helloworld-service.yml.
97

97

00:05:18.620  -->  00:05:21.120
And this will then create a new service
98

98

00:05:22.200  -->  00:05:26.543
that you can then get the host name off using -o wide.
99

99

00:05:27.840  -->  00:05:29.940
And now that we have this host name,
100

100

00:05:29.940  -->  00:05:32.351
we should also add the DNS name, hellowworld
101

101

00:05:32.351  -->  00:05:34.514
kubernetes.newtech.academy, so that we can connect
102

102

00:05:34.514  -->  00:05:38.690
on that host name rather than this one.
103

103

00:05:38.690  -->  00:05:42.393
Let's do that first. So I'm going to go back to route 53.
104

104

00:05:44.270  -->  00:05:49.270
Let's go to route 53. Hosted zones,
105

105

00:05:50.990  -->  00:05:52.899
my kubernetes.newtech.academy,
106

106

00:05:52.899  -->  00:05:54.963
and let's create a new record set.
107

107

00:05:56.550  -->  00:06:00.420
It's going to be helloworld. It's going to be an alias.
108

108

00:06:04.510  -->  00:06:06.720
You can also use CNAME but alias is easier
109

109

00:06:06.720  -->  00:06:11.520
because this will just show us the ELB's that are available.
110

110

00:06:11.520  -->  00:06:16.070
This is my ELB. I check that in another window.
111

111

00:06:16.070  -->  00:06:20.923
Services, EC2, and here we have load balancers on the left.
112

112

00:06:26.980  -->  00:06:29.563
So we only have one load balancer.
113

113

00:06:33.428  -->  00:06:36.653
This is correct. Do create, and now we have
114

114

00:06:37.610  -->  00:06:39.570
helloworld.kubernetes.newtech.academy
115

115

00:06:39.570  -->  00:06:42.963
that points to our newly created load balancer.
116

116

00:06:43.950  -->  00:06:46.240
So we now should be able to use this host name.
117

117

00:06:46.240  -->  00:06:49.500
And then we should then go to this load balancer here.
118

118

00:06:49.500  -->  00:06:51.933
Let's have a look at the configuration load balancer.
119

119

00:06:52.920  -->  00:06:55.910
We have two instances. These are our nodes.
120

120

00:06:55.910  -->  00:06:57.860
To mast a node is never used,
121

121

00:06:57.860  -->  00:07:00.750
we only scale a port on the node itself.
122

122

00:07:00.750  -->  00:07:03.250
They are in service, which means they are healthy.
123

123

00:07:03.250  -->  00:07:05.030
And then let's have a look at the listeners.
124

124

00:07:05.030  -->  00:07:08.410
You have two listeners, an http listener on port 80,
125

125

00:07:08.410  -->  00:07:13.153
an https listener on 443, and this one uses our certificate.
126

126

00:07:16.580  -->  00:07:18.410
And then we also have our tags.
127

127

00:07:18.410  -->  00:07:20.990
There are some tags that are added by kubernetes
128

128

00:07:20.990  -->  00:07:23.117
and we have the tag app equals helloworld
129

129

00:07:23.117  -->  00:07:25.060
and then environment equals dev.
130

130

00:07:25.060  -->  00:07:29.630
So those we added. So this should all be working.
131

131

00:07:29.630  -->  00:07:33.293
Let's test it. Back to our terminal.
132

132

00:07:35.880  -->  00:07:39.540
Kubectl get services -o wide shows us this host name.
133

133

00:07:39.540  -->  00:07:41.903
Let's test the http connection first.
134

134

00:07:43.630  -->  00:07:46.963
Replies Hello World. Let's try https.
135

135

00:07:48.650  -->  00:07:52.880
And this works, but it says certificate subject name,
136

136

00:07:52.880  -->  00:07:54.910
helloworld.kubernetes.newtech.academy,
137

137

00:07:54.910  -->  00:07:56.730
does not match target host name.
138

138

00:07:56.730  -->  00:07:59.620
And that's why we had to create this DNS name
139

139

00:07:59.620  -->  00:08:01.610
helloworld.kubernetes.newtech.academy
140

140

00:08:01.610  -->  00:08:03.500
because this needs to match because our certificate
141

141

00:08:03.500  -->  00:08:05.963
needs to match before we can use this.
142

142

00:08:07.620  -->  00:08:10.460
Curl of helloworld.kubernetes.newtech.academy
143

143

00:08:10.460  -->  00:08:13.470
shows us no warning and shows Hello World.
144

144

00:08:13.470  -->  00:08:17.360
Same if you do it over regular http.
145

145

00:08:17.360  -->  00:08:20.160
So that's why you need this extra configuration.
146

146

00:08:20.160  -->  00:08:21.546
We need to use a host name,
147

147

00:08:21.546  -->  00:08:24.023
otherwise it will give us a warning.
148

148

00:08:24.980  -->  00:08:26.550
You can also ignore the warning.
149

149

00:08:26.550  -->  00:08:30.470
With curl that's minus k, and then it will still work.
150

150

00:08:30.470  -->  00:08:33.370
In a normal browser, it will ask you
151

151

00:08:33.370  -->  00:08:34.770
whether you want to proceed.
152

152

00:08:35.730  -->  00:08:37.320
So this is how you can configure
153

153

00:08:37.320  -->  00:08:42.320
and add TLS certificates on your load balancer
154

154

00:08:42.560  -->  00:08:44.230
and then you can terminate encryption
155

155

00:08:44.230  -->  00:08:46.730
on your load balancer, which is a great way
156

156

00:08:46.730  -->  00:08:49.900
to manage your TLS and SSL certificates
157

157

00:08:49.900  -->  00:08:53.000
because there is almost no management of this.
158

158

00:08:53.000  -->  00:08:55.773
AWS will manage and renew your certificates.
