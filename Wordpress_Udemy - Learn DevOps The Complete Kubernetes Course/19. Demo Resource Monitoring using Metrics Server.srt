1
1

00:00:00,170  -->  00:00:01,090
<v Instructor>Before you start</v>
2

2

00:00:01,090  -->  00:00:04,720
with the Heapster Grafana demo,
3

3

00:00:04,720  -->  00:00:05,910
I want to make you aware
4

4

00:00:05,910  -->  00:00:08,640
that now Heapster is actually deprecated.
5

5

00:00:08,640  -->  00:00:12,030
So for new clusters, is actually not necessary
6

6

00:00:12,030  -->  00:00:16,270
anymore to install Heapster to get your metrics.
7

7

00:00:16,270  -->  00:00:19,850
There's now a metrics-server that came out that you can use.
8

8

00:00:19,850  -->  00:00:22,390
The metrics-server is a stripped down version of Heapster,
9

9

00:00:22,390  -->  00:00:24,590
is very similar but you cannot extract
10

10

00:00:24,590  -->  00:00:26,810
any metrics from it anymore.
11

11

00:00:26,810  -->  00:00:29,520
So, you cannot use sink to InfluxDB
12

12

00:00:29,520  -->  00:00:32,050
and show your metrics in Grafana.
13

13

00:00:32,050  -->  00:00:35,450
So now if you want to show external metrics,
14

14

00:00:35,450  -->  00:00:37,740
it's a little bit unclear how you have to do that.
15

15

00:00:37,740  -->  00:00:40,410
You will have to use a third-party tool like Prometheus.
16

16

00:00:40,410  -->  00:00:42,750
But, that's out of the plantation art yet,
17

17

00:00:42,750  -->  00:00:45,340
and still metrics-server is incubating,
18

18

00:00:45,340  -->  00:00:47,910
so it's a little bit early to do a full demo
19

19

00:00:47,910  -->  00:00:51,390
that shows you the statistics in Grafana.
20

20

00:00:51,390  -->  00:00:54,480
But I can already show you how to install metrics-server
21

21

00:00:54,480  -->  00:00:57,270
rather than using Heapster for newer clusters
22

22

00:00:57,270  -->  00:01:01,003
because Heapster will be deprecated from version 1.11.
23

23

00:01:02,550  -->  00:01:04,900
So, this is the Heapster GitHub proposed tree,
24

24

00:01:04,900  -->  00:01:09,900
and from Kubernetes 1.11, there's an initial deprecation.
25

25

00:01:09,920  -->  00:01:12,690
So, no new features or sinks will be added.
26

26

00:01:12,690  -->  00:01:14,200
Bug fixes might be made,
27

27

00:01:14,200  -->  00:01:19,200
and then, starting from 1.13, Heapster will be retired.
28

28

00:01:20,030  -->  00:01:21,550
At that point you should be using
29

29

00:01:21,550  -->  00:01:23,580
the metrics-server instead.
30

30

00:01:23,580  -->  00:01:27,830
The metrics-server is still in Kubernetes incubator,
31

31

00:01:27,830  -->  00:01:29,680
but it's now the way to go
32

32

00:01:29,680  -->  00:01:32,480
to get you node and bottom metrics.
33

33

00:01:32,480  -->  00:01:33,730
So, if you choose from metrics-server
34

34

00:01:33,730  -->  00:01:36,300
instead of Heapster with Influx in Grafana,
35

35

00:01:36,300  -->  00:01:37,950
you don't really have a front end.
36

36

00:01:37,950  -->  00:01:40,570
Even the dashboard hasn't changed it's code yet,
37

37

00:01:40,570  -->  00:01:43,740
but I'm pretty sure that it's gonna happen very soon.
38

38

00:01:43,740  -->  00:01:46,290
Then, rather than using Grafana, you're just gonna get
39

39

00:01:46,290  -->  00:01:49,000
the metrics in the Kubernetes dashboard,
40

40

00:01:49,000  -->  00:01:51,160
and then you don't even need Grafana anymore
41

41

00:01:51,160  -->  00:01:53,050
unless for other statistics,
42

42

00:01:53,050  -->  00:01:55,420
but not for these specific statistics
43

43

00:01:55,420  -->  00:02:00,060
that you then just need maybe for both out of scaling.
44

44

00:02:00,060  -->  00:02:03,340
So Metrics-Server is definitely the way to go in the future.
45

45

00:02:03,340  -->  00:02:05,140
So let me show you how it is set up.
46

46

00:02:06,610  -->  00:02:09,340
In my Kubernetes course get repository,
47

47

00:02:09,340  -->  00:02:10,253
I have directory.
48

48

00:02:11,610  -->  00:02:15,063
Metrics-Server and here I have all the yellow fast copies.
49

49

00:02:16,780  -->  00:02:20,793
So I just do Kubctl create over this directory.
50

50

00:02:24,000  -->  00:02:27,430
Then I should be able to do Kubectl top,
51

51

00:02:27,430  -->  00:02:30,350
so let me just show you without further arguments.
52

52

00:02:30,350  -->  00:02:35,350
So you can do kubctl top node and kubctl top pod.
53

53

00:02:36,660  -->  00:02:39,223
So let's try kubctl top node first.
54

54

00:02:41,040  -->  00:02:45,040
No metrics available yet and actually it takes some time
55

55

00:02:45,040  -->  00:02:46,400
to create those.
56

56

00:02:46,400  -->  00:02:48,210
We also need to be running a pod,
57

57

00:02:48,210  -->  00:02:51,653
so we just run a simple service.
58

58

00:02:54,090  -->  00:02:57,400
So I created the deployment hello-Kubernetes.
59

59

00:02:57,400  -->  00:02:58,500
This will start a pod.
60

60

00:03:02,860  -->  00:03:06,563
Just get pod because it ties this random string here.
61

61

00:03:07,630  -->  00:03:08,603
Let's try again.
62

62

00:03:09,800  -->  00:03:10,923
Top node.
63

63

00:03:12,020  -->  00:03:15,880
Now I have statistics, so now we see CP course,
64

64

00:03:15,880  -->  00:03:19,740
CP percentage, memory and memory percentage.
65

65

00:03:19,740  -->  00:03:21,610
So I have three nodes.
66

66

00:03:21,610  -->  00:03:25,520
One master node and two normal nodes.
67

67

00:03:25,520  -->  00:03:28,293
This is the master node and these are the normal nodes.
68

68

00:03:29,540  -->  00:03:32,280
Now let's try Kubctl top pod
69

69

00:03:33,610  -->  00:03:38,610
and this give me then the usage of the hello-Kubernetes pod.
70

70

00:03:39,210  -->  00:03:41,153
So it only uses two megabytes.
71

71

00:03:42,100  -->  00:03:43,610
Currently it doesn't use any CPU
72

72

00:03:43,610  -->  00:03:45,080
because we are not even contacting it,
73

73

00:03:45,080  -->  00:03:46,280
we're not even using it.
74

74

00:03:46,280  -->  00:03:47,860
So two megabytes.
75

75

00:03:47,860  -->  00:03:49,640
If you have more ProtoNym you will learn C.
76

76

00:03:49,640  -->  00:03:51,890
This increasing and changing.
77

77

00:03:51,890  -->  00:03:54,010
So to do the outer scaling lecture,
78

78

00:03:54,010  -->  00:03:58,010
which will come next, you only need the Metrics-Server.
79

79

00:03:58,010  -->  00:04:00,120
You don't need any other component anymore
80

80

00:04:00,120  -->  00:04:02,550
that I will still explain in the next lecture.
81

81

00:04:02,550  -->  00:04:04,163
Because those are deprecates.
82

82

00:04:05,770  -->  00:04:07,330
If you learn all the clusters,
83

83

00:04:07,330  -->  00:04:10,990
then you can still use Heapster and Influx in Grafana.
84

84

00:04:10,990  -->  00:04:13,040
But for newer clusters, starting from 1.8
85

85

00:04:14,260  -->  00:04:15,650
you don't need this anymore,
86

86

00:04:15,650  -->  00:04:17,573
you can use this Metrics-Server.
