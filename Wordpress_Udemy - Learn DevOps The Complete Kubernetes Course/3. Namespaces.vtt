WEBVTT
1
00:00:00.510 --> 00:00:07.720
Let's talk about Namespaces now. Namespaces allow you to create virtual clusters within the same physical cluster.

2
00:00:07.720 --> 00:00:11.680
Namespaces logically separate

3
00:00:11.700 --> 00:00:13.650
your cluster.

4
00:00:13.700 --> 00:00:19.570
The standard namespace is called default and that's where the resources are launched in by default.

5
00:00:19.820 --> 00:00:25.820
So, whenever we are not specifying a namespace, we are actually launching pods, deployments, and so on,

6
00:00:25.820 --> 00:00:33.550
in the default namespace. There's also a namespace for Kubernetes specific resources called kube-system. 

7
00:00:33.550 --> 00:00:40.960
For instance, our monitoring was launched in kube-system, the DNS addon also in kube-system.

8
00:00:41.200 --> 00:00:48.590
The dashboard is also an example of something that lives in the Kube-System namespace.

9
00:00:48.600 --> 00:00:55.020
Namespaces are intened when you have multiple teams/ multiple projects using the Kubernetes cluster. You don't need this,

10
00:00:55.020 --> 00:01:03.290
if you're the only user. The name of the resources need to be unique within a namespace, 

11
00:01:03.290 --> 00:01:04.280
but not across Namespaces.

12
00:01:04.550 --> 00:01:11.120
For instance, you can have the deployment "helloworld" multiple times in different Namespaces,

13
00:01:11.210 --> 00:01:12.420
but not twice in one namespace.

14
00:01:13.400 --> 00:01:21.320
You can divide resources of Kubernetes cluster using Namespaces. 

15
00:01:21.320 --> 00:01:23.130
You can limit the resources on a per namespace basis.

16
00:01:23.130 --> 00:01:26.090
So, this is what I just explained in a previous lecture,

17
00:01:26.090 --> 00:01:32.860
these are quotas that you can put in you typically put them per namespace for instance the marketing team

18
00:01:32.920 --> 00:01:38.350
can only use a maximum of 10 gigabyte of memory, two Load Balancers and two CPU cores.

19
00:01:38.350 --> 00:01:44.280
Course these are quotas that they can easily put in your communities cluster.

20
00:01:44.330 --> 00:01:47.540
First you need to create a new namespace.

21
00:01:48.020 --> 00:01:54.360
You can easily do that using "kubectl create namespace myspace", if you want a list of namespaces, you can do "kubectl get namespaces". 

22
00:01:54.380 --> 00:02:01.890
This now shows the "default" namespace, the "kube-system" namespace, and the newly created, "myspace".

23
00:02:01.900 --> 00:02:09.420
If you want to set that namespace as a default so that when you launch new resources

24
00:02:09.540 --> 00:02:11.590
those will not be launched as a default, 

25
00:02:11.610 --> 00:02:15.150
but in myspace, you can use those two lines.

26
00:02:15.240 --> 00:02:18.830
First you need to get the context with these  commands.

27
00:02:18.960 --> 00:02:29.620
Then you can change a context and you can specify that you want the namespace "myspace" used in the config.

28
00:02:29.760 --> 00:02:33.600
You can then create resource limits within that namespace.

29
00:02:33.600 --> 00:02:39.200
Here we have an object of kind of resource quota, you have the metadata that we give a name.

30
00:02:39.480 --> 00:02:46.770
Here we also have a namespace we specify our newly created namespace "myspace" and then we have the specifications.

31
00:02:46.980 --> 00:02:53.830
We have a hard limit on the "requests.cpu", "request.memory", "limits.cpu" and "limits.memory".

32
00:02:53.940 --> 00:02:57.150
The "request.cpu" is 1 core and 1Gi of memory.

33
00:02:57.300 --> 00:03:04.330
There's a limit on 2 cores and 2Gi memory. Here is an example where we specify limits

34
00:03:04.420 --> 00:03:07.770
on objects, so we can see in this namespace "myspace".

35
00:03:07.810 --> 00:03:14.650
You can only have 10 "configmaps", 4 "persistentvolumeclaims", 20 "replication controllers", 10 "secrets", 10 "services" and

36
00:03:14.650 --> 00:03:16.480
only 2 "loadbalancers".

37
00:03:16.490 --> 00:03:21.350
Those "loadbalancers" can be interesting, because on AWS it costs money for every Load Balancer that you have.

38
00:03:21.550 --> 00:03:27.450
So these are things that typically want to restrict. In the next demo, I will show you how this works.
