WEBVTT
1
00:00:00.610 --> 00:00:02.990
I will first start with an introduction.

2
00:00:03.260 --> 00:00:12.430
What is Kubernetes? Kubernetes is an open source orchestration system for Docker containers.

3
00:00:12.600 --> 00:00:17.660
It lets use schedule containers on a cluster of machines.

4
00:00:17.880 --> 00:00:24.660
You can run multiple containers on one machine and those machines then make up the cluster.

5
00:00:24.880 --> 00:00:33.140
You can run a long running services like web applications on your Kubernetes cluster. Kubernetes will manage 

6
00:00:33.230 --> 00:00:35.510
the state of these containers.

7
00:00:35.540 --> 00:00:41.990
You can start a container on a specific node and Kubernetes will restart the container when it gets 

8
00:00:41.990 --> 00:00:44.060
killed. 

9
00:00:44.070 --> 00:00:47.990
It can also move containers from one node to another node. 

10
00:00:48.060 --> 00:00:52.260
For instance if you're going to do maintenance on one node Kubernetes can take all the containers from 

11
00:00:52.260 --> 00:01:01.310
one node and move them to the other nodes. Instead of just running a few Docker containers on one host manually 

12
00:01:01.520 --> 00:01:06.320
because that's what you would do if you wouldn't have Kubernetes. Kubernetes is a platform that will 

13
00:01:06.320 --> 00:01:08.150
manage the containers for you.

14
00:01:09.080 --> 00:01:15.040
Kubernetes clusters can start with one node and can go up to thousands of nodes.

15
00:01:15.040 --> 00:01:22.170
Some other popular Docker orchestrators are DockerSwarm which comes with Docker by default but isn't

16
00:01:22.290 --> 00:01:27.790
as extensive as Kubernetes and Mesos which also support the containers 

17
00:01:27.900 --> 00:01:33.030
But it was built to run any type of workload Docker is just one of them.

18
00:01:33.030 --> 00:01:39.150
This course will be about Kubernetes which is in the same category as those two.

19
00:01:39.290 --> 00:01:46.690
You can run Kubernetes anywhere, on-premise in your own data center, public on the Google Cloud, on AWS, 

20
00:01:47.570 --> 00:01:54.350
maybe in other clouds or in a hybrid where you can run it public and private. Some of your workloads you

21
00:01:54.350 --> 00:01:55.940
might want to keep on premise, 

22
00:01:55.940 --> 00:02:01.100
so you might run them privately and other workloads you might run them on the public cloud so you can

23
00:02:01.100 --> 00:02:07.310
have the same system, the same abstraction on the public cloud as on private which is very powerful.

24
00:02:07.310 --> 00:02:08.830
It is highly modular,

25
00:02:09.080 --> 00:02:12.190
so you can make changes if necessary.

26
00:02:12.400 --> 00:02:13.760
It is open source.

27
00:02:13.840 --> 00:02:19.210
The product is on github you can easily make changes and they encourage everyone who wants to join the community 

28
00:02:19.210 --> 00:02:24.630
 you can make changes, which makes it a great community and is also backed by Google.

29
00:02:24.640 --> 00:02:30.160
So when they did the original release it was actually written by Google employees and they are still

30
00:02:30.160 --> 00:02:31.450
supporting it.

31
00:02:31.450 --> 00:02:36.070
So it's backed by Google and it incorporates all the good stuff that Google already does

32
00:02:36.060 --> 00:02:43.090
for decades. Google already runs containerized applications for more than 10 years using their own system. 

33
00:02:43.630 --> 00:02:48.990
It's called Borg now they incorporated those ideas in Kubernetes

34
00:02:49.020 --> 00:02:51.180
that they then released to the community.
