WEBVTT
1
00:00:00.580 --> 00:00:06.400
This is going to be a short demo, where I'm going to show you how to drain a node. I'm going to

2
00:00:06.400 --> 00:00:09.400
show this on our minikube cluster.

3
00:00:09.400 --> 00:00:10.480
We only have one note.

4
00:00:10.510 --> 00:00:12.560
So I'm just going to drain that one.

5
00:00:12.680 --> 00:00:14.930
So, "kubectl get node".

6
00:00:14.980 --> 00:00:19.210
You have one note in the ready status.

7
00:00:19.240 --> 00:00:23.860
Let me just get us something, I am going to create our "helloworld-deployment"

8
00:00:28.190 --> 00:00:33.490
So, let me get the pod list.

9
00:00:33.780 --> 00:00:36.750
So, all three pods are running on one note.

10
00:00:36.940 --> 00:00:43.410
Now, let's do "drain" nodename is "minikube".

11
00:00:44.080 --> 00:00:49.570
The name minikube comes from getting nodes. So, these pods are all going to be removed

12
00:00:49.570 --> 00:00:50.800
and can all be rescheduled.

13
00:00:50.800 --> 00:01:00.480
So, I'm just going to use force and if do "kubectl get node", then we can see that scheduling is disabled,

14
00:01:00.580 --> 00:01:04.380
we don't have any pods running on it anymore.

15
00:01:04.630 --> 00:01:07.650
They're all pending, because they can't schedule on it anymore.

16
00:01:08.020 --> 00:01:12.970
If you would try these on your Alus cluster launched with kops you would see that these nodes then run

17
00:01:13.150 --> 00:01:15.860
on a different node.

18
00:01:15.880 --> 00:01:22.390
So that's very simply shown how drain works and how we can use it when you need to put a node in maintenance.
