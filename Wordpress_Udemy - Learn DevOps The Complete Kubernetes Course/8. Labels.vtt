WEBVTT
1
00:00:00.360 --> 00:00:07.160
In this lecture, I'll be talking about labels. You've already used labels, but in this lecture I want to

2
00:00:07.160 --> 00:00:09.600
show you some more possibilities.

3
00:00:10.310 --> 00:00:14.170
Labels are key value pairs that can be attached to objects.

4
00:00:14.600 --> 00:00:20.900
Labels are like tags in AWS or other cloud providers, used to tag resources.

5
00:00:20.900 --> 00:00:25.590
If you've been using cloud then tags will be very familiar to you.

6
00:00:26.550 --> 00:00:28.420
Labels are kind of the same thing.

7
00:00:28.890 --> 00:00:34.290
You can label your objects, for instance, your pod following an organizational structure.

8
00:00:34.290 --> 00:00:40.300
You can see I want to tag my pods using key, environment, and value.

9
00:00:40.300 --> 00:00:47.580
Either dev, staging, qa, or prod. And then, you know whether your pod is part of your development environment

10
00:00:47.730 --> 00:00:49.510
or any other environment.

11
00:00:50.490 --> 00:00:52.000
You can also add another tag,

12
00:00:52.050 --> 00:00:57.810
you maybe have multiple departments, so you could say, "I'm going to tag all my pods and I'm going to

13
00:00:57.810 --> 00:01:00.270
see this is going to be from engineering,

14
00:01:00.270 --> 00:01:06.850
these pods are running software for finance, or these pods are running software for marketing".

15
00:01:06.870 --> 00:01:11.970
In our previous examples I have already been using labels to tag pods.

16
00:01:11.980 --> 00:01:12.960
This is how it looks,

17
00:01:12.970 --> 00:01:14.470
I always add labels,

18
00:01:14.470 --> 00:01:16.690
for instance, the "app: helloworld".

19
00:01:18.700 --> 00:01:26.090
Labels are not unique and multiple labels can be added to one object. 

20
00:01:26.090 --> 00:01:26.840
Once labels are attached to an object,

21
00:01:27.050 --> 00:01:30.970
you can use filters to narrow down the results.

22
00:01:30.980 --> 00:01:35.270
This is called the label selectors. Using label selectors,

23
00:01:35.300 --> 00:01:39.220
you can use matching expressions to match the labels.

24
00:01:39.350 --> 00:01:46.130
For instance a particular pod can only run on a note labeled with an "environment" equals "develop".

25
00:01:47.150 --> 00:01:49.130
More complex matching is also possible,

26
00:01:49.130 --> 00:01:56.700
you can say an environment needs to be either "development" or "qa". In earlier lectures,

27
00:01:56.760 --> 00:02:04.260
I have been using note labels for the services. The service has had a label selector to select the correct

28
00:02:04.420 --> 00:02:07.280
pod that the service was going to be for.

29
00:02:07.290 --> 00:02:12.270
You can also use labels to tag nodes. Once nodes are tagged,

30
00:02:12.300 --> 00:02:17.430
you can use the label selector to let pods only run on specific nodes.

31
00:02:17.880 --> 00:02:21.810
There are two steps required to run a pod on a specific set of nodes.

32
00:02:22.020 --> 00:02:24.410
First you tag the node itself,

33
00:02:24.570 --> 00:02:28.890
then you add the note selector to your pod confirmation.

34
00:02:28.920 --> 00:02:33.150
It can be to a single pod or a pod template within,

35
00:02:33.150 --> 00:02:36.060
for instance, a "deployment".

36
00:02:36.260 --> 00:02:42.320
The first step is to add a label or multiple labels to your notes and you can do that using 

37
00:02:42.410 --> 00:02:43.750
"kubectl label nodes".

38
00:02:44.240 --> 00:02:50.420
You just specify the node name and then the label that you want to give it using the equals value.

39
00:02:51.750 --> 00:02:56.380
Secondly, you add a pod that uses those labels.

40
00:02:56.390 --> 00:02:59.830
Here we have a pod definition and we just added the "nodeSelector".

41
00:02:59.860 --> 00:03:04.100
This "nodeSelector" says, hardware needs to be "high-spec".

42
00:03:04.100 --> 00:03:09.510
This pod will only run on notes that have the label "high-spec".

43
00:03:09.920 --> 00:03:15.520
I will show you how this works using a deployment with a node a later in the next demo.
