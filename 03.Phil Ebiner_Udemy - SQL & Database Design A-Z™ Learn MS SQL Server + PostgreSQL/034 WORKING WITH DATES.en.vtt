WEBVTT
1
00:00:01.250 --> 00:00:03.010
Hello and welcome back.

2
00:00:03.110 --> 00:00:05.360
And today we'll be working with dates.

3
00:00:05.360 --> 00:00:11.870
Dates are very important part of our life as well as part of corporate world expiration dates delivery

4
00:00:11.870 --> 00:00:15.160
dates release dates dates.

5
00:00:15.170 --> 00:00:19.450
There so many data that has to work with dates.

6
00:00:19.460 --> 00:00:23.760
So it's very important to keep track of them and to update them when necessary.

7
00:00:23.960 --> 00:00:25.200
This is why in.

8
00:00:25.200 --> 00:00:32.540
Q Well as long as many other languages there is a specific date they that type so they will be taking

9
00:00:32.540 --> 00:00:37.690
a closer look at that and learning how to use them and when to use them.

10
00:00:37.940 --> 00:00:40.300
So as you can see at PG&amp;E and loaded up.

11
00:00:40.300 --> 00:00:44.980
So let's quickly go up and posit great databases today we'll be working with console games.

12
00:00:45.050 --> 00:00:46.210
So it's loaded up.

13
00:00:46.370 --> 00:00:51.010
Let's load our tables up and we have console dates here.

14
00:00:51.020 --> 00:01:00.410
So first things first let's go ahead and open an inquiry tool and quickly right select all from console

15
00:01:00.440 --> 00:01:01.570
dates.

16
00:01:01.700 --> 00:01:06.340
We'll just do this to refresh our memory about what's inside of the table.

17
00:01:06.500 --> 00:01:14.240
Here we see that we have plug for name first retail availability discontinued units sold in millions

18
00:01:14.330 --> 00:01:16.820
and platform comments.

19
00:01:16.870 --> 00:01:22.100
Basically this table tells us everything about every platform.

20
00:01:22.480 --> 00:01:29.080
It tells us when it first began selling and when it was discontinued if it was not discontinued the

21
00:01:29.080 --> 00:01:30.600
value will be nothing.

22
00:01:30.850 --> 00:01:37.710
And then it also tells us how many units were sold and millions and just some comments for the platform

23
00:01:37.720 --> 00:01:42.610
name in case it's hard for us to understand what D.S. stands for.

24
00:01:42.610 --> 00:01:50.110
So it's a pretty straightforward table that is connected with a console games because they have the

25
00:01:50.110 --> 00:01:52.390
same platform that they're talking about.

26
00:01:52.380 --> 00:01:58.270
Now as you can see if we take a closer look here we can see that the first retail availability and this

27
00:01:58.270 --> 00:02:02.810
continued are both date types of data.

28
00:02:03.160 --> 00:02:10.510
And this is very important because as you can see date data has a very unique way of being written down

29
00:02:10.700 --> 00:02:14.320
and consist of year month and then date.

30
00:02:14.380 --> 00:02:20.790
So all in total it consists of 10 characters including three dashes to separate.

31
00:02:20.790 --> 00:02:22.990
Year for month and month from date.

32
00:02:23.230 --> 00:02:27.610
So let's quickly go ahead and just repeat this after me.

33
00:02:27.650 --> 00:02:36.440
What we want to do is we just want to select all and then we want to write that first retail availability.

34
00:02:42.370 --> 00:02:54.390
And then we want to say minus discontinued and then we're going to write as they's existed.

35
00:02:54.500 --> 00:03:00.710
So if we quickly go and run this.

36
00:03:00.860 --> 00:03:01.730
Sorry about that.

37
00:03:01.730 --> 00:03:02.880
Just make a mistake.

38
00:03:02.960 --> 00:03:10.480
So if we run this what it does it creates as a whole new exist existed column.

39
00:03:10.730 --> 00:03:16.790
And the difference with this way of writing it down instead of altering the table and then setting up

40
00:03:16.790 --> 00:03:24.770
the data is that if we quickly go ahead and run this again and just the show all from consummates we

41
00:03:24.770 --> 00:03:26.770
will see that these column disappeared.

42
00:03:26.780 --> 00:03:34.740
So it's only a temporary column that's helpful to us because we can assess and analyze the way better.

43
00:03:34.910 --> 00:03:38.030
So again if we return to us and now take a look at what it does.

44
00:03:38.030 --> 00:03:44.060
So basically you can see relative minuses here because what we're what we're doing is we're subtracting

45
00:03:44.150 --> 00:03:51.530
this continued date from first retail availability and that's why it's going to be mynahs because the

46
00:03:51.530 --> 00:03:55.230
discontinued follows after the first retail availability.

47
00:03:55.490 --> 00:04:02.610
So working with dates you always want to subtract the earlier date from the following date.

48
00:04:02.840 --> 00:04:05.030
It makes sense but just remember to do that.

49
00:04:05.030 --> 00:04:09.480
So now if we're on the correct version of the squirty you can see that all the minuses disappeared.

50
00:04:09.500 --> 00:04:11.250
And now it makes sense.

51
00:04:11.600 --> 00:04:17.870
The numbers you see here they're all in thousands and there are so many of them it's not years it's

52
00:04:17.870 --> 00:04:23.480
not months it's base by default if you subtract one date from another.

53
00:04:23.480 --> 00:04:27.880
It will give you the difference in number of days that went through.

54
00:04:28.130 --> 00:04:33.150
So this is quite important for us because right now we can go ahead and ask ourselves a question Hey

55
00:04:33.470 --> 00:04:40.400
how long did the platform existed on the market and we can say it was available for retail for four

56
00:04:40.460 --> 00:04:42.910
and five hundred twenty seven days.

57
00:04:42.920 --> 00:04:50.180
Now if we want to go a bit further what we can do is we can then put brackets around this expression

58
00:04:50.420 --> 00:04:54.660
and then we can divide everything here by 365.

59
00:04:54.820 --> 00:04:59.830
What this will do it will give us an approximate amount of years.

60
00:05:00.050 --> 00:05:02.040
So it all makes perfect sense doesn't it.

61
00:05:02.040 --> 00:05:05.900
It just is just a basic arithmetic operation that we do.

62
00:05:05.900 --> 00:05:10.400
We basically subtract one from another divide by the number of days in the year and we get a number

63
00:05:10.400 --> 00:05:15.500
of years if we divide this by roughly 30 We'll get the number of months that exist.

64
00:05:15.950 --> 00:05:26.450
This is just a very basic very standardized type of query and this is not the correct way to display

65
00:05:26.450 --> 00:05:28.580
the data in the sense that in.

66
00:05:28.620 --> 00:05:34.490
Q Well you have different functions that will help you to display the difference in data in months these

67
00:05:34.490 --> 00:05:36.370
years more accurately.

68
00:05:36.440 --> 00:05:43.260
But if you just need to run a very very weak query just understand for yourself what's happening in

69
00:05:43.260 --> 00:05:46.150
the here was the differences and all of that stuff.

70
00:05:46.160 --> 00:05:47.340
This is the way you can run it.

71
00:05:47.510 --> 00:05:54.170
And by the way it's always a good thing to practice order by or any other statements that you learn

72
00:05:54.170 --> 00:05:55.740
the scores for example here.

73
00:05:55.880 --> 00:05:58.640
What we can say is that we want to order it.

74
00:05:58.660 --> 00:06:05.760
My days expired and as you can see we can run it all in one equerry sorry.

75
00:06:05.860 --> 00:06:14.240
And as you can see we can run all of this in one query because even though we just created this here

76
00:06:14.360 --> 00:06:20.330
like in the select statement and this is all the same query posed very Eskew will allows us to run it

77
00:06:20.360 --> 00:06:24.150
all together because it makes X and on every line.

78
00:06:24.170 --> 00:06:26.960
So it progresses Khaled's line for line.

79
00:06:27.230 --> 00:06:34.040
So now as you can see we have it neatly organized by days existed and we can say that hey this is the

80
00:06:34.040 --> 00:06:41.750
platform that existed for the least amount of months and this is a platform that existed for the most

81
00:06:41.750 --> 00:06:43.020
amount of months.

82
00:06:43.040 --> 00:06:49.550
So now that we know now that we know the basics and understand that we can work with data quite easily

83
00:06:49.550 --> 00:06:53.470
we can divide them we can multiply them we can subtract and add them.

84
00:06:53.660 --> 00:07:02.810
Let's go ahead and take a look at some functions at some more commonly used and better to use more powerful

85
00:07:02.810 --> 00:07:03.760
functions.

86
00:07:03.770 --> 00:07:08.930
The first one we'll be taking look at is date part.

87
00:07:09.170 --> 00:07:17.850
So what they'd parred does it basically neglects our need to divide here by 30 or 365.

88
00:07:18.170 --> 00:07:20.650
And it gives us a more accurate answer.

89
00:07:20.840 --> 00:07:25.070
So the way to do this let's leave everything here the same.

90
00:07:25.070 --> 00:07:30.410
So so we're still going to get those exist that call them but we're just going to get there a different

91
00:07:30.410 --> 00:07:30.880
way.

92
00:07:31.070 --> 00:07:34.250
So what we want to say is that we want to ride this.

93
00:07:34.320 --> 00:07:43.790
They part and then we want to go ahead with this and and put that we want this to be demonstrated in

94
00:07:43.790 --> 00:07:44.330
years.

95
00:07:44.330 --> 00:07:49.440
So let's go at and change this four years existed just to make it a bit nicer.

96
00:07:49.640 --> 00:07:56.220
And so that we have date Baard year than we just write what we want to go first.

97
00:07:57.280 --> 00:08:02.960
Discontinued and then we want to do the subtraction.

98
00:08:03.230 --> 00:08:12.870
The minus symbol and go again this time what we want to do is we want to go ahead if we get here.

99
00:08:12.920 --> 00:08:13.840
Sorry about that.

100
00:08:13.850 --> 00:08:15.740
So we want to go ahead and write again.

101
00:08:15.770 --> 00:08:20.720
We want us to track them in years wanted them to be displayed in years and then we just need to write

102
00:08:20.720 --> 00:08:28.250
the name of the column first retail with the ability.

103
00:08:28.320 --> 00:08:29.790
So if we were on this

104
00:08:32.640 --> 00:08:41.140
sorry about that to keep making these mistakes so if we're on this as you can see we have and you'd

105
00:08:41.140 --> 00:08:45.270
neatly organize a table that's ordered by year's existed.

106
00:08:45.360 --> 00:08:52.320
But again because we only write that as a statement and not the altar and then sat table this will disappear

107
00:08:52.380 --> 00:08:58.080
as soon as we were on another query on the stables and as it deleted from here or go photo and write

108
00:08:58.080 --> 00:08:58.940
and equerry.

109
00:08:59.010 --> 00:09:04.330
But as you can see this is quite interesting because now we can analyze the data and determine what

110
00:09:04.320 --> 00:09:10.040
is the average span of lifetime for a platform and all of that useful stuff.

111
00:09:10.050 --> 00:09:15.060
Now as you can see this is one way you can do it that way you can divided by 365.

112
00:09:15.090 --> 00:09:20.120
That gives you a less accurate number but it still is relevant.

113
00:09:20.160 --> 00:09:29.010
Now what will happen if we change the part two month and change here to month as well and just let's

114
00:09:29.010 --> 00:09:35.570
quickly rename this two month existence and this kind of order by and change it.

115
00:09:35.770 --> 00:09:43.750
You would expect that this query will return to was number of months that these products platforms existed

116
00:09:44.050 --> 00:09:47.120
but it returns to this weird numbers.

117
00:09:47.140 --> 00:09:48.480
So what do they mean.

118
00:09:48.670 --> 00:09:52.570
Well when you do take part what it does it takes these two dates.

119
00:09:52.570 --> 00:09:57.240
And if you specify they part year it just subtracts one year from another.

120
00:09:57.280 --> 00:10:03.000
So 1994 or other 1998 minus 1994 will be four.

121
00:10:03.010 --> 00:10:09.040
And that's why the child asked for it right now if we take a look at months to minus 12 will be equal

122
00:10:09.040 --> 00:10:10.380
to minus 10.

123
00:10:10.570 --> 00:10:17.770
So it just shows the difference in months but not for the period but more like the position of the month

124
00:10:18.010 --> 00:10:19.210
on the calendar.

125
00:10:19.210 --> 00:10:24.100
So what is the use of date part month part day.

126
00:10:24.490 --> 00:10:25.560
In this scenario.

127
00:10:25.780 --> 00:10:34.180
Well let's quickly go ahead and take a look at the example we need to show all of the games all of the

128
00:10:34.180 --> 00:10:38.640
platforms that were released right before Black Friday.

129
00:10:38.710 --> 00:10:42.160
So they were released in November so people would buy more.

130
00:10:42.160 --> 00:10:43.780
And companies would profit more.

131
00:10:44.080 --> 00:10:47.230
And this is way it or they'd part comes in.

132
00:10:47.500 --> 00:10:58.840
What we do we select all we can just select platform name and from canceled dates then we instead of

133
00:10:58.840 --> 00:11:05.880
ordering by we include the word statement in which we specify that where they part

134
00:11:08.980 --> 00:11:13.940
in months off from the first retail availability.

135
00:11:17.790 --> 00:11:22.020
Minus and November is 11 months so minus 11

136
00:11:24.770 --> 00:11:26.630
equals zero.

137
00:11:26.630 --> 00:11:32.830
So we basically want to say that November minus 11 11 months Lemon has to be zero.

138
00:11:33.140 --> 00:11:43.460
This way if we quickly showed us we can see that the D.S. X3 60 is free for X-Box X-Box 1 all of them

139
00:11:43.550 --> 00:11:44.630
were released in the number.

140
00:11:44.630 --> 00:11:51.740
And now if we specify here that we want to select all we can actually see that is going quickly show

141
00:11:51.740 --> 00:11:55.160
here we can see that all of them were released in November.

142
00:11:55.160 --> 00:11:56.460
How crazy is that.

143
00:11:56.480 --> 00:12:03.470
You can see so much just from this table the table that consists of 30 rows now gives us about 12 rows

144
00:12:03.590 --> 00:12:06.230
of platforms that were all released in the member.

145
00:12:06.230 --> 00:12:12.230
Now let's go ahead and figure out which ones we're least right before Christmas.

146
00:12:12.230 --> 00:12:12.850
There we go.

147
00:12:12.950 --> 00:12:14.260
And that are five.

148
00:12:14.510 --> 00:12:22.400
So out of the 30 platforms most of them were released either in November or December right before the

149
00:12:22.400 --> 00:12:23.280
holidays.

150
00:12:23.630 --> 00:12:30.550
So let's just quickly go here just to demonstrate that a bit more right in or statement than write the

151
00:12:30.590 --> 00:12:37.850
part and just include Black Friday November retail of be bloody.

152
00:12:38.080 --> 00:12:40.720
So we go first retail

153
00:12:43.000 --> 00:12:43.750
retail

154
00:12:46.790 --> 00:12:52.670
ability and then we say that minus 11 has to be equal zero.

155
00:12:53.090 --> 00:13:00.950
And now if we show this we can see how much more exactly how much more we're just going to go select

156
00:13:01.100 --> 00:13:03.530
all count

157
00:13:06.080 --> 00:13:13.270
platform name.

158
00:13:13.370 --> 00:13:20.810
We have 16 platforms out of 30 that were released either in November or December.

159
00:13:20.870 --> 00:13:21.900
That's pretty crazy.

160
00:13:22.010 --> 00:13:25.060
And the worry about the count we will learn it a bit later in the course.

161
00:13:25.070 --> 00:13:29.500
It's very useful operator and that basically gives you.

162
00:13:29.660 --> 00:13:35.400
It counts the number of rows that you had in your table and display the result to you.

163
00:13:35.570 --> 00:13:39.320
So nothing too extraordinary but very useful at times.

164
00:13:39.350 --> 00:13:46.610
So you can see that was pretty crazy but the craziest part about it is we can actually go and do one

165
00:13:46.610 --> 00:13:54.850
more very useful date operator in possibly Asgill there's no date diff function that we can encounter

166
00:13:54.850 --> 00:13:56.430
in other rescue languages.

167
00:13:56.540 --> 00:14:00.720
But there is a date and the mother is an age function.

168
00:14:00.920 --> 00:14:11.940
So basically what we can do is we can get rid of this and just select all and then we will sell and

169
00:14:11.960 --> 00:14:14.610
include age.

170
00:14:14.850 --> 00:14:18.260
And then we want to say between

171
00:14:21.100 --> 00:14:21.930
discontinued

172
00:14:24.610 --> 00:14:25.120
and

173
00:14:31.710 --> 00:14:32.880
firster telling gullability

174
00:14:35.530 --> 00:14:47.310
there's retail ability and just let's put it years alive or rather just

175
00:14:52.110 --> 00:14:54.610
and let's run it and see what it gives to us.

176
00:14:54.900 --> 00:15:02.550
So this is much much much better and cleaner nicer way to display the difference between two dates in

177
00:15:02.610 --> 00:15:05.740
years months and days for it.

178
00:15:05.760 --> 00:15:12.740
So as you can see instead of subtracting a uter from another year and just be done over it or roughly

179
00:15:12.740 --> 00:15:19.820
dividing by 365 by the number of days the year that that can live to some inconsistency in your data

180
00:15:19.970 --> 00:15:25.760
just because if you have 40 years and you divide them by 365 that will not be entirely correct.

181
00:15:25.790 --> 00:15:30.270
So this gives us the most accurate the most nicely presented way.

182
00:15:30.440 --> 00:15:39.050
And then just quickly go had our favorite order by then go here platform alive.

183
00:15:40.000 --> 00:15:45.930
And what we get a band is a nicely neatly organized table.

184
00:15:46.180 --> 00:15:49.860
So don't worry about the nails that you see here basically empty cells.

185
00:15:49.870 --> 00:15:52.080
We will learn to work with them later on.

186
00:15:52.220 --> 00:15:55.110
For now just understand the logic behind this.

187
00:15:55.110 --> 00:16:01.810
Q All chose to last the number of years from in ascending order so the least amount of years on top

188
00:16:02.140 --> 00:16:03.870
the most amount of years gone the bottom.

189
00:16:03.940 --> 00:16:10.950
But because these platforms are not yet discontinued they're still selling.

190
00:16:11.020 --> 00:16:17.430
We cannot ask you cannot identify the exact amount of time they've existed.

191
00:16:17.800 --> 00:16:22.660
Basically what you want to do if you have to do that you want the field is discontinued discontinued

192
00:16:22.710 --> 00:16:26.880
continue call column with current dates and then just subtract.

193
00:16:26.950 --> 00:16:31.040
And that will give you the current lifespan of these platforms.

194
00:16:31.120 --> 00:16:33.720
But we will learn to do all of that later on.

195
00:16:33.790 --> 00:16:37.240
This was a very big lecture and we've learned a lot.

196
00:16:37.270 --> 00:16:44.470
It's very important that you understand how to work dates because again dates are mostly number one

197
00:16:44.530 --> 00:16:53.760
or number to date and narrowing tool because you want to find products that were released between this

198
00:16:53.760 --> 00:16:58.700
year or this year and you want to work with current data and then work with older data archiving data.

199
00:16:58.700 --> 00:17:02.010
You want to work with data prediction and all of that stuff.

200
00:17:02.010 --> 00:17:05.940
It will all include dates in some form or another.

201
00:17:06.120 --> 00:17:10.050
So again we learned today about the age function about the subtraction function.

202
00:17:10.140 --> 00:17:14.200
We're working with data about any algorithmic operators working with states.

203
00:17:14.340 --> 00:17:17.760
We work with that part and understand what that does.

204
00:17:18.000 --> 00:17:26.250
And we also did a lot of order by which is very good because practice practice practice is the one thing

205
00:17:26.250 --> 00:17:29.960
that will make you the best at school.

206
00:17:30.030 --> 00:17:32.970
Plus ask you all any language you can imagine.

207
00:17:33.030 --> 00:17:37.170
I hope you enjoy this lecture and I'll see you in the next one.
