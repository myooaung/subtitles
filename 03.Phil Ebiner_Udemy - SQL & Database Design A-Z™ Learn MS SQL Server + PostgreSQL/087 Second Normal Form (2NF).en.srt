1
00:00:00,740 --> 00:00:03,120
Hello and welcome back to the course on databases.

2
00:00:03,200 --> 00:00:06,580
Today we're talking about the second normal form.

3
00:00:06,590 --> 00:00:09,100
So what's the definition of the second normal form.

4
00:00:09,440 --> 00:00:12,420
Well the second normal form is defined as follows.

5
00:00:12,460 --> 00:00:19,970
And table is in the second normal form if first of all it fits in the first normal form.

6
00:00:20,000 --> 00:00:25,730
So basically satisfy it satisfies the criteria of the first and all a form and every non-prime attribute

7
00:00:25,850 --> 00:00:31,480
of the table is dependent on the whole of every candidate key.

8
00:00:31,490 --> 00:00:32,450
Now let's see that again.

9
00:00:32,450 --> 00:00:40,340
So every non-prime attribute of the table so non-prime actually said those that do not fall in in any

10
00:00:40,340 --> 00:00:41,680
of the candidate keys.

11
00:00:41,720 --> 00:00:47,500
So every non-prime attribute of the table is dependent on the whole of every candidate key.

12
00:00:48,080 --> 00:00:50,470
And how do we remember this.

13
00:00:50,480 --> 00:00:56,450
Well we already have all mnemonic Let's bring it up our mnemonic is every non-prime attribute must provide

14
00:00:56,450 --> 00:00:59,420
a fact about the key the whole key and nothing but the key.

15
00:00:59,420 --> 00:01:09,180
So the second normal form is that's part highlighted with the dashed box which is the whole key.

16
00:01:09,190 --> 00:01:16,020
So that part of the sentence and an important thing to note here about our mnemonic is actually you

17
00:01:16,040 --> 00:01:17,380
don't know what we're talking about.

18
00:01:17,420 --> 00:01:23,410
The key right about every non-prime attribute must provide a fact about the key the whole key and nothing

19
00:01:23,410 --> 00:01:25,100
but the key.

20
00:01:25,190 --> 00:01:31,640
And in this definition in the second formal form definition it's actually talking about dependent on

21
00:01:31,640 --> 00:01:33,530
the whole of every candidate.

22
00:01:33,650 --> 00:01:39,620
So you just need to remember that that just to make sure are shorter and easier to remember we said

23
00:01:39,800 --> 00:01:46,640
the key is one key but in reality all of these normal forms so both the second normal form and the third

24
00:01:46,640 --> 00:01:52,100
normal form they're referring to every candidate will see that about the third normal from further down.

25
00:01:52,100 --> 00:01:59,540
But just remember when you're saying the whole key you actually mean all of our every one of the candidate

26
00:01:59,590 --> 00:02:03,110
keys the whole of each one of the candidate keys.

27
00:02:03,200 --> 00:02:03,460
Right.

28
00:02:03,460 --> 00:02:04,670
So that's what it means.

29
00:02:04,670 --> 00:02:12,740
So basically I know this is we've so far we've read the definition and we've learned how to remember

30
00:02:12,740 --> 00:02:12,880
it.

31
00:02:12,890 --> 00:02:18,640
But probably it doesn't make any sense right now so what's hard is very hard to picture this without

32
00:02:18,650 --> 00:02:19,340
an example.

33
00:02:19,460 --> 00:02:26,510
So how do you picture non-prime attributes depending on the whole key hole of every candidate key and

34
00:02:26,540 --> 00:02:32,060
exactly for that reason we're going to move on to to an example right.

35
00:02:32,060 --> 00:02:34,640
So let's learn through an example.

36
00:02:34,640 --> 00:02:36,730
So here we've got an example of a table right.

37
00:02:36,740 --> 00:02:45,380
So this table here it does conform to the one NF to the first form or form and that is because it has

38
00:02:45,560 --> 00:02:46,600
no duplicate rows.

39
00:02:46,640 --> 00:02:51,980
And also it doesn't have more in every cell you only have one value so you don't have two or more values

40
00:02:51,980 --> 00:02:54,020
in any of the cells.

41
00:02:54,020 --> 00:02:54,700
Right.

42
00:02:54,710 --> 00:02:59,430
The question now is does it conform to the second normal form.

43
00:02:59,450 --> 00:03:00,860
So let's find out.

44
00:03:00,860 --> 00:03:05,840
Well the first thing that we're going to do is we need to identify which of the attributes here are

45
00:03:05,840 --> 00:03:10,370
prime attributes and which are non-prime attributes and do remember how to do that.

46
00:03:10,370 --> 00:03:13,190
Well yes it's a pretty straightforward process.

47
00:03:13,190 --> 00:03:19,070
First we need to identify all of the candidate keys in this table and this table electric toothbrush

48
00:03:19,070 --> 00:03:24,980
models we have two candidate keys so the first candidate key here is this column.

49
00:03:24,980 --> 00:03:31,020
Right because it has the full name of the model and the tables about electric toothbrush.

50
00:03:31,060 --> 00:03:39,200
So you would think that you would be able to pick up uniquely and your role from the table by just referencing

51
00:03:39,230 --> 00:03:40,990
the full name of the model.

52
00:03:41,150 --> 00:03:45,100
So if you have the full name of the model then you'll find a unique role in the table.

53
00:03:45,100 --> 00:03:46,190
That's basically what it means.

54
00:03:46,430 --> 00:03:57,110
And also you will see that the combination of these two columns or attributes actually together they

55
00:03:57,140 --> 00:04:00,070
create also a candidate.

56
00:04:00,060 --> 00:04:07,100
So basically if you don't have the moral fullname but you have the manufacturer and the model of the

57
00:04:07,370 --> 00:04:12,640
tooth brush then you'll be able to find its unique role in this data in this table.

58
00:04:12,830 --> 00:04:13,530
So why is that.

59
00:04:13,550 --> 00:04:20,270
Well as you can see these two together they indeed do identify each row individually you can just go

60
00:04:20,270 --> 00:04:21,780
through and check.

61
00:04:22,240 --> 00:04:24,940
And finally the manufacturer country.

62
00:04:24,940 --> 00:04:27,520
It's not actually part of any

63
00:04:30,550 --> 00:04:32,080
any candidate key.

64
00:04:32,140 --> 00:04:35,790
You can check that by going to the table but also if you just think about it.

65
00:04:35,860 --> 00:04:36,100
Right.

66
00:04:36,100 --> 00:04:41,430
So the manufacturer and model it could be manufactured any country.

67
00:04:41,440 --> 00:04:48,730
And so we don't like it's not it's not going to help us identify the rows right just logically but probably

68
00:04:48,730 --> 00:04:53,250
the better option is just go through the table and quickly check that indeed it's not part.

69
00:04:53,260 --> 00:04:58,480
You cannot create through this code on its own is not a candidate key right because it got duplicates

70
00:04:58,480 --> 00:05:02,580
in it and therefore it wouldn't identify uniquely their roles.

71
00:05:02,590 --> 00:05:09,340
But also if you combine it with any other of the columns it wouldn't be a candidate key and here you'd

72
00:05:09,340 --> 00:05:11,740
have to apply the definition of the candidate key.

73
00:05:12,130 --> 00:05:20,830
You know that it's a key that you cannot make a simplified and you know that's something that we covered

74
00:05:20,830 --> 00:05:22,060
off Preuss in the course.

75
00:05:22,090 --> 00:05:29,560
So now through identifying the candidate keys we've also identified that we only have one non-prime

76
00:05:29,560 --> 00:05:31,870
attribute and that is the manufacturer country.

77
00:05:31,870 --> 00:05:39,110
That's because this column is not part of any of the candidate keys that we have in this table.

78
00:05:39,460 --> 00:05:43,240
And therefore it's the only non-prime attribute.

79
00:05:43,360 --> 00:05:48,220
And now we will check the definition of the second normal form.

80
00:05:48,220 --> 00:05:54,850
Right so if we go back to the definition it says that yes this is correct it matches the personal form

81
00:05:54,850 --> 00:06:01,360
but then it says every non-prime attribute of the table is dependent on the whole of every candidate

82
00:06:01,360 --> 00:06:01,680
key.

83
00:06:01,690 --> 00:06:02,300
Right.

84
00:06:02,410 --> 00:06:04,240
The whole of every candidate.

85
00:06:04,600 --> 00:06:12,320
So basically we have to check that this column is dependent on the whole of this candidate key and this

86
00:06:12,320 --> 00:06:14,970
column is dependent on the whole of this candidate.

87
00:06:15,470 --> 00:06:15,740
All right.

88
00:06:15,740 --> 00:06:21,970
So it's obvious that this column is indeed dependent on the whole of this candidate because this candidate

89
00:06:22,070 --> 00:06:25,450
only consists of one column right so you can break it up.

90
00:06:25,450 --> 00:06:35,090
So this this row each or this column identifies the troll uniquely and therefore it identifies my future

91
00:06:35,090 --> 00:06:35,350
country.

92
00:06:35,350 --> 00:06:36,510
So there's no question about it.

93
00:06:36,680 --> 00:06:44,840
But then this candidate right which consists of the two columns does manufacture country really depends

94
00:06:44,900 --> 00:06:47,040
on the whole of this candidate.

95
00:06:47,090 --> 00:06:53,880
So is it necessary to have manufacturer and model try to find out what the manufacturer country is.

96
00:06:54,120 --> 00:06:54,880
Well not really.

97
00:06:54,890 --> 00:06:55,120
Right.

98
00:06:55,130 --> 00:07:00,830
Because if you just look at manufacturer you'll see that forta is always in Italy regardless of the

99
00:07:00,830 --> 00:07:01,520
model.

100
00:07:01,700 --> 00:07:05,520
Dental dental fresh is always in the USA.

101
00:07:05,690 --> 00:07:08,630
Kobayashi's always in Japan and which is in Germany.

102
00:07:08,880 --> 00:07:16,220
And we could extrapolate this and make this conclusion for even you know neuros that would be added

103
00:07:16,220 --> 00:07:20,540
to the database just simply on logic because manufacturer.

104
00:07:20,570 --> 00:07:21,790
This column is called manufacture.

105
00:07:21,800 --> 00:07:23,430
This is manufacturer country.

106
00:07:23,510 --> 00:07:30,320
So basically it is the country where the manufacturer is located the model has nothing to do with this

107
00:07:30,320 --> 00:07:31,120
column.

108
00:07:31,130 --> 00:07:39,140
And so basically what we see here is that manufacturer in this candidate key this can buy this commission

109
00:07:39,140 --> 00:07:46,370
of these two columns the kind of key that produces inside it manufacture on its own identifies with

110
00:07:46,370 --> 00:07:48,080
the manufacturer country.

111
00:07:48,110 --> 00:07:54,800
So a model is not necessary for that and therefore this table does not conform to the second normal

112
00:07:54,800 --> 00:07:56,330
form.

113
00:07:56,360 --> 00:07:57,990
So there you go.

114
00:07:58,010 --> 00:07:59,890
That's that's the issue here.

115
00:07:59,990 --> 00:08:01,750
So this is not a second order form.

116
00:08:01,790 --> 00:08:03,950
And at this stage you're probably wondering.

117
00:08:03,950 --> 00:08:10,550
So you're probably thinking OK so I understand why it doesn't conform to second normal form but why

118
00:08:10,550 --> 00:08:11,300
is it important.

119
00:08:11,300 --> 00:08:14,750
Why is why is that such a big deal why.

120
00:08:14,810 --> 00:08:21,050
Like why is this definition is worded the way it's worded Why.

121
00:08:21,050 --> 00:08:24,940
Why are we even checking for the second or from what does it give us in practice.

122
00:08:24,950 --> 00:08:33,170
Well what it gives us in practice is this table by not conforming to the second normal form is now more

123
00:08:33,170 --> 00:08:35,320
prone to errors.

124
00:08:35,330 --> 00:08:36,650
And it also says two things.

125
00:08:36,650 --> 00:08:38,780
First of all it is speed.

126
00:08:38,780 --> 00:08:44,660
It slows down the process of adding information into this database.

127
00:08:44,660 --> 00:08:48,100
And the second thing is that it is more prone to errors.

128
00:08:48,170 --> 00:08:49,060
So how does that happen.

129
00:08:49,080 --> 00:08:54,230
Well basically now whenever I add a new row into this database.

130
00:08:54,230 --> 00:08:54,500
Right.

131
00:08:54,500 --> 00:09:02,200
So if I add a let's say in your toothbrush which is also produced by forté but it has a different model.

132
00:09:02,360 --> 00:09:02,600
Right.

133
00:09:02,600 --> 00:09:03,580
So what will happen.

134
00:09:03,600 --> 00:09:05,750
I'll have to update this column.

135
00:09:05,780 --> 00:09:11,000
So add a new row with the new value in this column a new value in this column because it's in your model.

136
00:09:11,000 --> 00:09:16,580
This column will be a combination of the two and this column will actually be Italy.

137
00:09:16,580 --> 00:09:20,350
We already know in advance that whenever we add forta it will be Italy.

138
00:09:20,350 --> 00:09:20,730
All right.

139
00:09:20,780 --> 00:09:25,600
And when we add dental freshy will be USA whenever we add Horridge it will be Germany in a way that

140
00:09:25,610 --> 00:09:27,650
Kobayashi will be Japan.

141
00:09:27,650 --> 00:09:33,770
And so basically what that means is we are duplicating some of the information we're doing extra work

142
00:09:33,770 --> 00:09:37,920
by adding a new row here.

143
00:09:38,090 --> 00:09:49,250
If it's the manufacturer basically identifies It's a wire it's a it's a determined relationship between

144
00:09:49,250 --> 00:09:52,560
manufacturer it affects your country by adding in Euro.

145
00:09:52,700 --> 00:10:00,030
You are just writing the country where as this information is already present in the database and the

146
00:10:00,050 --> 00:10:04,190
like if you are and you manufacture that's omnipresent you know as soon as you add the second row for

147
00:10:04,190 --> 00:10:06,680
that manufacturer you're duplicating information.

148
00:10:06,680 --> 00:10:09,940
And so that takes pricing power and might not seem like a lot for one call.

149
00:10:09,950 --> 00:10:16,850
But imagine if you if you had you know a thousand of these homes that fall under this like work like

150
00:10:16,850 --> 00:10:18,340
this example that would be called a law.

151
00:10:18,360 --> 00:10:18,650
Right.

152
00:10:18,650 --> 00:10:25,100
And if you have a huge database which is which rows millions of rows are added to every hour that would

153
00:10:25,100 --> 00:10:26,300
take up a lot of time.

154
00:10:26,600 --> 00:10:29,390
And the second thing is there's more possibility of error right.

155
00:10:29,420 --> 00:10:33,320
So if you go forward to Italy for to Italy for to Italy every time.

156
00:10:33,320 --> 00:10:33,780
Right.

157
00:10:33,890 --> 00:10:40,100
And then for some reason something goes wrong and you add in for to Germany then you know you've just

158
00:10:40,100 --> 00:10:41,180
created an error right.

159
00:10:41,210 --> 00:10:48,560
Every time you duplicate the work you you dream you that work and there's a possibility of creating

160
00:10:48,560 --> 00:10:49,800
that error right.

161
00:10:49,940 --> 00:10:52,810
Instead of just having that information once in your database.

162
00:10:52,830 --> 00:10:53,870
And so what's the solution.

163
00:10:53,870 --> 00:10:58,850
How do you turn this into a table that conforms to the second normal form.

164
00:10:59,090 --> 00:11:02,000
Well it is very straightforward.

165
00:11:02,000 --> 00:11:04,160
So here we've got two tables now right.

166
00:11:04,190 --> 00:11:09,630
So we've got a table of actual moral and moral full name so those first three columns and then we've

167
00:11:09,630 --> 00:11:12,020
separated out the manufacturer country.

168
00:11:12,030 --> 00:11:19,200
So now we have a reference table where we can always look up in which country each manufacturer is located.

169
00:11:19,270 --> 00:11:25,260
And now whenever we add new rows to this table they're not going to have country anymore.

170
00:11:25,410 --> 00:11:30,570
The country will be just identified uniquely by that manufacturer so you can always if you need to find

171
00:11:30,570 --> 00:11:36,960
our country just look up based on the manufacturer just look them up here and you'll know the country

172
00:11:36,960 --> 00:11:37,970
him as a know.

173
00:11:37,970 --> 00:11:43,000
Our challenge is to just check these both these tables if they conform to the second normal form.

174
00:11:43,170 --> 00:11:45,640
So it's it's a pretty straightforward process.

175
00:11:45,780 --> 00:11:51,300
In the first table we need to identify all the candidate keys so wonderful name is a candidate key identifies

176
00:11:51,300 --> 00:11:52,550
every row uniquely.

177
00:11:52,560 --> 00:11:54,900
And this is a candidate key as well.

178
00:11:54,900 --> 00:12:02,890
So in this table we actually don't have any non-prime attributes or all the attributes of pride.

179
00:12:02,970 --> 00:12:10,800
And in this table our candidate key is manufacturer because you know you always add new manufacturers

180
00:12:10,800 --> 00:12:15,110
and maybe a manufacturer to manufacturers could be in the same country.

181
00:12:15,120 --> 00:12:16,510
That's not forbidden.

182
00:12:16,680 --> 00:12:17,880
Right.

183
00:12:18,270 --> 00:12:21,840
So therefore this is the key and this is not a candidate key.

184
00:12:22,050 --> 00:12:27,710
And so in this table we have one non-prime attribute which is this one.

185
00:12:27,850 --> 00:12:32,320
So the question is about the symbol does it fall.

186
00:12:32,340 --> 00:12:34,810
Does it conform to the second normal form will it come from.

187
00:12:34,810 --> 00:12:38,640
And first of all on the form and it doesn't have any non-prime attributes.

188
00:12:38,640 --> 00:12:46,590
So by default because it's the second normal form talks about non-prime attributes that they have to

189
00:12:47,730 --> 00:12:52,660
be dependent on the whole of any candidate key.

190
00:12:52,740 --> 00:12:57,330
What we don't have any non-prime actually so by default this table does conform to the second normal

191
00:12:57,330 --> 00:12:57,840
form.

192
00:12:58,110 --> 00:13:02,570
And in this case because our candidate key is just one column.

193
00:13:02,650 --> 00:13:11,370
That means that automatically this the second form as the criteria is met because you cannot split this

194
00:13:11,370 --> 00:13:18,510
into some into different columns so the non-prime attribute is going to be also dependent on the whole

195
00:13:18,960 --> 00:13:22,760
of the candidate key.

196
00:13:22,770 --> 00:13:24,440
So this is also second or before.

197
00:13:24,660 --> 00:13:25,500
All right there we go.

198
00:13:25,500 --> 00:13:31,740
So I know it's a bit it's a little of a lot of information to grasp and that's why I probably don't

199
00:13:31,740 --> 00:13:38,490
recommend moving on to the third no more form right away before you take some time to really let this

200
00:13:38,490 --> 00:13:44,670
knowledge sink in so maybe go through the tutorial again or look at these examples and really try to

201
00:13:44,670 --> 00:13:47,000
understand what's what's going on here.

202
00:13:47,430 --> 00:13:57,180
But basically what we've done as a result of May of changing the design of this table into two tables

203
00:13:57,180 --> 00:13:58,400
right by doing that.

204
00:13:58,410 --> 00:14:00,930
What we've created we've we've solved two issues.

205
00:14:00,930 --> 00:14:08,520
First of all now when you add more records you add more electric tooth brush models into a database.

206
00:14:09,350 --> 00:14:15,020
You will have to have to add information about the country unless you're adding a brand new manufacture

207
00:14:15,020 --> 00:14:20,960
then you just add them once here and then you just keep adding their models and basically in that situation

208
00:14:21,530 --> 00:14:24,020
you're saving processing power.

209
00:14:24,260 --> 00:14:29,390
Right you same processing power and also saving memory of your database.

210
00:14:29,470 --> 00:14:33,560
And again it doesn't sound like a lot for these two small tables but this is just an example to make

211
00:14:33,560 --> 00:14:37,480
it simple as you can imagine.

212
00:14:37,610 --> 00:14:43,130
When these principles are applied to tables with millions or billions of rows it makes a huge difference.

213
00:14:43,610 --> 00:14:50,300
And the second thing is that we have reduced the potential for error rates because we've only got the

214
00:14:50,300 --> 00:14:53,170
information about the manufacturer countries stored once.

215
00:14:53,420 --> 00:14:54,000
Right.

216
00:14:54,020 --> 00:14:59,060
It's just stored in this table and we only need to make sure that this information is correct once you

217
00:14:59,060 --> 00:15:06,980
don't have to have controls making sure that every time you inputting your manufacturer you're putting

218
00:15:06,980 --> 00:15:10,160
no correct country because you don't need to put the country anymore.

219
00:15:10,250 --> 00:15:14,520
And that is what the second normal form helps us do.

220
00:15:14,900 --> 00:15:15,510
So there we go.

221
00:15:15,530 --> 00:15:19,460
That's what's the second normal forms all about and that's how it works.

222
00:15:19,460 --> 00:15:27,000
I hope this tutorial made it clear and made it more easier to understand.

223
00:15:27,440 --> 00:15:29,120
It is much more complex.

224
00:15:29,120 --> 00:15:35,810
I agree it's much more complex and the first novel form much more complex understand but just just try

225
00:15:35,810 --> 00:15:42,680
to remember that mnemonic and you know the truth the whole truth the whole truth and nothing but the

226
00:15:42,680 --> 00:15:42,890
truth.

227
00:15:42,890 --> 00:15:52,820
So this was the part about the whole truth or the whole key that any non-prime attribute has to be dependent

228
00:15:53,300 --> 00:15:56,680
on the whole of any candidate.

229
00:15:58,010 --> 00:16:00,050
That's what this trial is about.

230
00:16:00,050 --> 00:16:02,690
Hope you enjoyed it and I'll look for it.

231
00:16:02,690 --> 00:16:03,550
See you next time.

232
00:16:03,560 --> 00:16:05,210
Until then happy analyzing.
