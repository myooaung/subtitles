1
00:00:00,270 --> 00:00:05,160
Hello and welcome back as you can see you have Microsoft skills Server Management Studio load it up

2
00:00:05,490 --> 00:00:10,860
and this can mean only one thing that today we're going to be working with practice.

3
00:00:10,890 --> 00:00:15,800
We're going to actually be putting in all of this we've learned into practice through writing our equerries.

4
00:00:15,840 --> 00:00:17,800
So I hope you're very excited about it.

5
00:00:17,940 --> 00:00:23,070
Before we go any further let's check that we have the refrain the same as you can say have consumer

6
00:00:23,070 --> 00:00:27,800
complaints that a base loaded up and inside of it I have a table called consumer complaints.

7
00:00:27,900 --> 00:00:35,070
So if we go ahead and just right click on it to like top falls and droves this should give us enough

8
00:00:35,070 --> 00:00:36,150
information.

9
00:00:36,180 --> 00:00:43,640
What are the table has appropriate information and the data inside of it is correct.

10
00:00:43,910 --> 00:00:49,030
And as you can see if we just scroll down on the results tab everything looks fine and normal.

11
00:00:49,220 --> 00:00:55,520
So we had to close this query and started writing our own queries for our own hands without needing

12
00:00:55,520 --> 00:00:58,430
to help from the Microsoft Asgill through her managers to.

13
00:00:58,610 --> 00:01:03,650
So first thing first you want to either press control or just left click this button right here that

14
00:01:03,650 --> 00:01:04,830
says new query.

15
00:01:04,980 --> 00:01:11,060
And inside of here the first task we're going to do is that we want to select every single row inside

16
00:01:11,060 --> 00:01:15,680
of this database we want to display all the data that's contained inside the stable called consumer

17
00:01:15,680 --> 00:01:16,640
complaints.

18
00:01:16,640 --> 00:01:24,470
As you know we can go ahead and say select and just open this column's up and then start typing all

19
00:01:24,470 --> 00:01:34,130
of them one by one so they receive it and then comma then probably name and then Colma and subproject

20
00:01:34,490 --> 00:01:38,150
comma issue comma and so on.

21
00:01:38,150 --> 00:01:45,300
Or alternatively instead of typing our cells what we can do is just drag and drop put.

22
00:01:45,350 --> 00:01:45,970
Come on.

23
00:01:46,070 --> 00:01:47,380
Don't worry about the brackets.

24
00:01:47,390 --> 00:01:53,120
You can write it both ways in brackets or about the rescue all just minor stuff with a scale sort of

25
00:01:53,120 --> 00:01:55,270
management studio just puts this practice here.

26
00:01:55,270 --> 00:02:02,840
When you drag and drop to identify where the table came from but because we're only working with one

27
00:02:02,840 --> 00:02:04,670
table it's not important.

28
00:02:04,670 --> 00:02:09,240
So right now we can just drag and drop separate them by comma and I'll speed up this process so you

29
00:02:09,240 --> 00:02:11,330
are not stuck with me doing this.

30
00:02:11,330 --> 00:02:19,150
So I'll see you in a bit so as you can see now I have all the columns written down and it took me quite

31
00:02:19,150 --> 00:02:23,830
a while to just drag and drop them as you can see mostly just drag and drop them instead of writing

32
00:02:23,830 --> 00:02:24,250
them.

33
00:02:24,340 --> 00:02:30,850
And still it took a lot of time and I could have easily made a mistake by either not dragging one of

34
00:02:30,850 --> 00:02:33,770
them out or duplicating some of the columns.

35
00:02:33,940 --> 00:02:40,540
And just to finish with this query Let's go ahead and write our second part of Slick's statement where

36
00:02:40,540 --> 00:02:41,600
we select from.

37
00:02:41,750 --> 00:02:43,840
In our case it's consumer complaints.

38
00:02:43,900 --> 00:02:48,690
So again you can either start typing it and type it all yourself or you can select it from the dropdown

39
00:02:48,700 --> 00:02:49,120
menu.

40
00:02:49,120 --> 00:02:54,310
In our case it's not the database It's the table or he can just drag and drop it from the screen right

41
00:02:54,310 --> 00:02:54,870
here.

42
00:02:54,910 --> 00:03:01,180
In my case I'll just use the down arrow press enter and it'll work again.

43
00:03:01,240 --> 00:03:02,320
Let's execute it.

44
00:03:02,350 --> 00:03:06,580
And as you can see we have everything displayed correctly appropriately.

45
00:03:06,580 --> 00:03:08,530
There seems to be no mistakes.

46
00:03:08,680 --> 00:03:12,620
All of the columns are presented correctly in the correct order.

47
00:03:12,760 --> 00:03:16,380
And as you can see we have sixty five thousand five hundred rows.

48
00:03:16,450 --> 00:03:18,530
So everything works perfectly fine.

49
00:03:18,580 --> 00:03:24,400
But let's just quickly zoom out here and you can see the size of the square is just insane.

50
00:03:24,400 --> 00:03:25,500
Imagine if you had to.

51
00:03:25,530 --> 00:03:26,920
All of that down yourself.

52
00:03:26,960 --> 00:03:32,140
Or imagine if you have 40 50 100 columns in your table in your database.

53
00:03:32,140 --> 00:03:34,800
Obviously that will not happen a lot and that should never happen.

54
00:03:34,800 --> 00:03:38,020
You have such absurd amount of columns in any given table.

55
00:03:38,110 --> 00:03:44,110
But just imagine if you do in this case you don't want to be writing them all one by one out.

56
00:03:44,260 --> 00:03:50,320
So as you can already guess there is another way of timing going to ask you all because you're working

57
00:03:50,320 --> 00:03:53,310
with big chunks big amounts of data all the time.

58
00:03:53,320 --> 00:04:00,340
So instead of writing all of that all that we could have driven is select star and select story gives

59
00:04:00,340 --> 00:04:05,770
us exactly the same results as selecting every single column we want.

60
00:04:05,770 --> 00:04:09,000
So again let's return let's copy this.

61
00:04:09,070 --> 00:04:12,290
So we're going to do select Star Control.

62
00:04:12,330 --> 00:04:15,300
Control C and then legis control Z.

63
00:04:15,640 --> 00:04:16,660
A couple of ways back.

64
00:04:16,720 --> 00:04:19,400
And as you can see this is our initial inquiry.

65
00:04:19,430 --> 00:04:24,190
Now let's run the new query in which we'll just say it's like old from consumer complaints.

66
00:04:24,190 --> 00:04:29,320
It gives us exactly the same amount of columns exactly the same information and the actually the same

67
00:04:29,320 --> 00:04:32,320
order and it gives us everything correctly.

68
00:04:32,350 --> 00:04:37,480
The only thing is that instead of writing all of this down instead of having to worry about if we've

69
00:04:37,480 --> 00:04:44,040
made any mistakes or not we just can press simply type and select all.

70
00:04:44,410 --> 00:04:50,350
So now I hope you understand the basic the most common select query where you have this like all of

71
00:04:50,350 --> 00:04:54,210
the data from the table and now let's move on to something more interesting.

72
00:04:54,250 --> 00:04:59,070
Let's just close this query Let's close this query just if you want to save them go ahead save them

73
00:04:59,080 --> 00:05:00,330
this menu will pop up.

74
00:05:00,340 --> 00:05:01,930
You can choose where to save them.

75
00:05:01,990 --> 00:05:07,330
In my case just I don't think we need to say such a simple query such fundamental queries.

76
00:05:07,450 --> 00:05:11,050
So let's just open a new query window and inside of it.

77
00:05:11,050 --> 00:05:13,950
I'll zoom in a bit so it's easier for you to see.

78
00:05:14,200 --> 00:05:17,580
And inside of Atlus work with specific data.

79
00:05:17,650 --> 00:05:23,250
So for example let's say I don't want to display every single column inside this table.

80
00:05:23,290 --> 00:05:29,180
I only want to see the product that issued this product had and the company that produced the product.

81
00:05:29,380 --> 00:05:32,800
So in this case of course they need the select.

82
00:05:32,860 --> 00:05:40,150
So now instead of writing down all the columns and then looking at them from the table and trying to

83
00:05:40,150 --> 00:05:43,210
just scroll for the table and pick the columns that we need.

84
00:05:43,210 --> 00:05:44,280
We just can't understand that.

85
00:05:44,280 --> 00:05:51,150
All we need is product name again just dragging dropping very easy easily made in Microsoft's scale

86
00:05:51,190 --> 00:05:52,310
Server Management Studio.

87
00:05:52,330 --> 00:05:57,370
Alternatively we can write it down so for example when it is like product name then we need to select

88
00:05:57,400 --> 00:06:00,910
issue and then we need to select a company name.

89
00:06:00,970 --> 00:06:02,830
So there we go.

90
00:06:02,830 --> 00:06:08,090
Company just the company as it's written here.

91
00:06:08,110 --> 00:06:14,530
So now if we finish writing this like curry all we have to do is select all of these free columns from

92
00:06:14,920 --> 00:06:16,590
consumer complaints table.

93
00:06:16,660 --> 00:06:20,360
So I just like this one and let's try it.

94
00:06:20,560 --> 00:06:27,260
As you can see now it gives us way more manageable view of the same database just because there's only

95
00:06:27,310 --> 00:06:29,110
free column selected.

96
00:06:29,230 --> 00:06:31,080
And it gives us all the correct information.

97
00:06:31,090 --> 00:06:37,060
And I would say that from this table this is probably the most important information you will be working

98
00:06:37,060 --> 00:06:37,590
with.

99
00:06:37,660 --> 00:06:42,760
Of course you can work with a lot more data and we will work a lot more data and combinations of different

100
00:06:42,760 --> 00:06:46,460
columns trying to find specific patterns as issues.

101
00:06:46,540 --> 00:06:52,960
Were any of the mellitus with data but this is just like in any company that you would go.

102
00:06:52,960 --> 00:06:58,660
Most of the time they want to find an issue of the data and that's just done by simply writing this

103
00:06:58,690 --> 00:06:59,760
small query.

104
00:06:59,770 --> 00:07:03,590
After that we will learn how to manipulate it to get results shorten it down.

105
00:07:03,610 --> 00:07:06,040
But for now I think this is a very good result.

106
00:07:06,160 --> 00:07:14,470
It's your first time writing a query in Microsoft I ask you all and you all ready perform the most fundamental

107
00:07:14,470 --> 00:07:19,160
the most powerful and the most important tasks that any company can have.

108
00:07:19,360 --> 00:07:22,810
So now just to make sure we understand what we want to do.

109
00:07:22,810 --> 00:07:27,160
Let's go ahead and just delete this Dubrow because we're obviously going to be working with consumer

110
00:07:27,160 --> 00:07:33,590
complaints for this lecture and for the whole rest of this section and inside of it.

111
00:07:33,610 --> 00:07:34,970
This like statement.

112
00:07:35,200 --> 00:07:36,880
Let's start this like something else.

113
00:07:36,910 --> 00:07:41,080
For example let's see what the product was.

114
00:07:41,080 --> 00:07:47,230
What was the product what was the issue and what was the state that it all came from.

115
00:07:47,230 --> 00:07:54,310
So in this case again what do we need the key elements of this query product subproject issue and state

116
00:07:54,310 --> 00:07:54,550
name.

117
00:07:54,550 --> 00:07:59,640
In our case the columns are written in a very understandable fashion.

118
00:07:59,650 --> 00:08:07,210
So if one product we just have to drag product name here put a column up then drag the subproject in

119
00:08:07,210 --> 00:08:15,100
here as well to separate them by space and put a call drive in issue and then put a call and drive and

120
00:08:15,100 --> 00:08:15,950
state name.

121
00:08:16,120 --> 00:08:23,380
So in other tables or in more advanced examples that are tasks what you might need to be might need

122
00:08:23,380 --> 00:08:29,980
to understand that which columns represent what or maybe a combination of some columns represents something

123
00:08:29,980 --> 00:08:35,700
else and then you'll have a bit more difficult time with identifying the key elements.

124
00:08:35,860 --> 00:08:42,520
But with any ESC you will query you will ever be working with as long as you identified the key elements

125
00:08:42,520 --> 00:08:48,810
as I like to call them the stuff you need to find and the stuff you have to work with.

126
00:08:48,970 --> 00:08:53,490
And the stuff where you have to work it from you should be right.

127
00:08:53,500 --> 00:08:55,150
Everything else is just logical.

128
00:08:55,150 --> 00:09:01,600
You have to take logical steps that you need to combine those or shorten this or maybe just narrow the

129
00:09:01,600 --> 00:09:02,890
search results is dumb.

130
00:09:03,010 --> 00:09:08,450
So coming back for example as you can see we have the like product name product and state them.

131
00:09:08,500 --> 00:09:12,870
Let's run it as you can see it gives us no mistake.

132
00:09:12,880 --> 00:09:17,880
Also you can already know this that some fields in the Sampradaya column are empty.

133
00:09:17,920 --> 00:09:19,100
Nothing to worry about.

134
00:09:19,120 --> 00:09:24,440
As you can see a lot of products will never even have an opportunity to have a sap product.

135
00:09:24,550 --> 00:09:31,360
Or maybe the people that put them in the database just put them as we need in order to put them in or

136
00:09:31,360 --> 00:09:38,650
put them with initially some mistake that had to be eradicated later on these fields called nulls and

137
00:09:38,650 --> 00:09:41,860
we'll be working with them later on in this course.

138
00:09:42,040 --> 00:09:43,830
But they're nothing to worry about.

139
00:09:43,840 --> 00:09:45,310
Nulls are very common in this.

140
00:09:45,310 --> 00:09:49,090
Q All in pretty much any database you come up with.

141
00:09:49,180 --> 00:10:00,180
So I hope this lecture made you understand as well better and most importantly drove your fear of quirkiest

142
00:10:00,220 --> 00:10:05,660
if you had any a way because as you can see programming languages are very logical.

143
00:10:05,730 --> 00:10:06,970
School is not different.

144
00:10:07,060 --> 00:10:13,420
All you need to understand is what you need to find and what elements you need to use in order to get

145
00:10:13,420 --> 00:10:14,330
those results.

146
00:10:14,410 --> 00:10:16,390
And then you just need to add different tools.

147
00:10:16,510 --> 00:10:20,920
And we're going to be teaching you all the tools all the different functions different statements all

148
00:10:20,920 --> 00:10:23,680
the different tricks and tips.

149
00:10:23,710 --> 00:10:30,230
So again don't worry if you think school is difficult if you think you will have any issues you won't.

150
00:10:30,370 --> 00:10:35,770
It's very logical if you do it right you will get the correct result 100 percent of the time.

151
00:10:35,860 --> 00:10:39,470
If you do something wrong it's very easy to go back and fix it.

152
00:10:39,730 --> 00:10:41,740
And I hope you enjoy this lecture.

153
00:10:41,740 --> 00:10:48,070
It's very interesting to be actually working inside the mildest of the scale management studio.

154
00:10:48,070 --> 00:10:53,620
It's a refreshing and I think it's always better to practice more rather than just sit for a few to

155
00:10:53,630 --> 00:10:57,080
read about having any real world data to work with.

156
00:10:57,370 --> 00:11:01,970
And as always I hope you enjoyed today's lecture and I'll see you in the next one.
