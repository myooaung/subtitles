WEBVTT
1
00:00:00.580 --> 00:00:07.120
Hello and welcome back as you can see I have Microsoft skills her management studio loaded up and today

2
00:00:07.120 --> 00:00:11.810
will be working with Araf medic data types in rescue all as you can see.

3
00:00:11.800 --> 00:00:13.820
I have two databases ready to go.

4
00:00:13.900 --> 00:00:18.100
And today we're working with console games database inside of Atlanta open up.

5
00:00:18.100 --> 00:00:20.020
Make sure you have the same information.

6
00:00:20.020 --> 00:00:21.640
We have two different tables.

7
00:00:21.640 --> 00:00:26.980
One is called cancel dates in which you have around five different columns and that one is called console

8
00:00:26.980 --> 00:00:30.340
games in which you have about 10 different columns.

9
00:00:30.340 --> 00:00:33.090
So let's go ahead and work with console games.

10
00:00:33.160 --> 00:00:35.160
So just select new Qwerty.

11
00:00:35.290 --> 00:00:41.120
And inside of it our first step as always is to select all from console games.

12
00:00:41.140 --> 00:00:45.060
Make sure you type in the table name of the database name and the correct table name.

13
00:00:45.070 --> 00:00:47.030
Otherwise you can also drag and drop.

14
00:00:47.350 --> 00:00:52.460
So just execute it now and we can see here we have different columns.

15
00:00:52.540 --> 00:00:59.710
Game rank game name flat for name game either John or publisher for American sales European sales you

16
00:00:59.820 --> 00:01:04.160
new sales and utter sales North American sales European sales of nice house.

17
00:01:04.210 --> 00:01:10.780
And our sales are represented in millions publisher genre game you reply for name game name and game

18
00:01:10.780 --> 00:01:11.080
rank.

19
00:01:11.110 --> 00:01:15.210
Our old easy to identify and easy to understand what they stand for.

20
00:01:15.220 --> 00:01:22.120
So basically we're working with a lot of different games here and trying to analyze the data of different

21
00:01:22.120 --> 00:01:25.600
games from different platforms and different years.

22
00:01:25.600 --> 00:01:30.140
As you can see this table consists of 16000 rows of data which is a lot.

23
00:01:30.160 --> 00:01:37.900
And we'll try to minimize that or rather experiment with this table to make it more useful to us.

24
00:01:37.900 --> 00:01:45.850
So the first thing I want to see is I do not want to calculate the number of total sales for every single

25
00:01:45.850 --> 00:01:51.250
game here because right now how in the know how many Final Fantasy 5 copies were sold.

26
00:01:51.250 --> 00:02:01.510
I have to add 0 0 two point 2.40 three million plus 20000 and that's just not convenient enough for

27
00:02:01.510 --> 00:02:08.530
me because imagine adding all of these Nehra for different column 16000 times over and over again that

28
00:02:08.530 --> 00:02:09.880
would just drive you crazy.

29
00:02:09.880 --> 00:02:16.030
So what we're going to be doing today is learning how to make as well or in our games Microsoft has

30
00:02:16.050 --> 00:02:17.570
killed to do it for us.

31
00:02:17.650 --> 00:02:22.480
The first thing I want to do is I want to add a new column and I want it to be consistent.

32
00:02:22.540 --> 00:02:30.790
So I want to add a column that will be called Global sales and this is what you would expect this to

33
00:02:30.790 --> 00:02:33.460
be the syntax for it and it is the syntax for it.

34
00:02:33.460 --> 00:02:39.000
The only thing that we need to change is we need to say what table we're adding this column to.

35
00:02:39.040 --> 00:02:43.870
So in our case we are saying the altered table and then I just drag and drop this here.

36
00:02:43.870 --> 00:02:52.390
So now if we execute it it three that was my but just remember to include your data type of the column.

37
00:02:52.400 --> 00:02:57.520
So not making any mistakes because we're working with floats as North American cells or European cells

38
00:02:57.560 --> 00:02:59.240
euphony cells or cells.

39
00:02:59.270 --> 00:03:05.450
I think it's appropriate to assign float data type to global sales so I'll also write it correctly.

40
00:03:05.450 --> 00:03:10.780
So now if we exited this it will solve us roofing completed successfully.

41
00:03:10.970 --> 00:03:17.990
Let's again select all from console games and if we're going to do this right now what we should see

42
00:03:17.990 --> 00:03:24.340
is we should see 11 columns now and global sales has now values all over the place.

43
00:03:24.350 --> 00:03:25.640
This is nothing to worry about.

44
00:03:25.640 --> 00:03:31.850
In fact this is absolutely normal and logical because we've just created this table this column and

45
00:03:31.850 --> 00:03:33.970
we haven't added any information to it.

46
00:03:34.010 --> 00:03:38.860
So it's just an empty column and by definition empty columns are filled with notes.

47
00:03:38.870 --> 00:03:45.920
Now if you take a look here in the columns section of the object Explorer you can see that we have only

48
00:03:45.920 --> 00:03:47.240
10 columns still.

49
00:03:47.240 --> 00:03:52.080
This is the fact that you need to do is right click refresh and there it is now.

50
00:03:52.130 --> 00:03:56.870
Now I have 11 columns everything science everything's at the right place.

51
00:03:57.230 --> 00:03:59.580
Now we don't want this to be empty.

52
00:03:59.600 --> 00:04:00.880
We want this to be useful.

53
00:04:00.890 --> 00:04:01.820
So global sales.

54
00:04:01.850 --> 00:04:06.530
All I want to say is that global sales have to be equal to North American sales plus European sales

55
00:04:06.530 --> 00:04:08.860
positive Benito's plus other sales.

56
00:04:08.870 --> 00:04:15.320
So in order to do this they need to do is I need to say that first of all I'm updating console games.

57
00:04:15.350 --> 00:04:22.070
So again the same way altering works with the design of a database outlaid works with more of a data

58
00:04:22.080 --> 00:04:22.690
inside of it.

59
00:04:22.730 --> 00:04:33.190
So we're updating the console games and then I want to say that I want to set global sales to be cool

60
00:04:33.270 --> 00:04:42.190
to American sales plus and Leger's drag and drop because it's much easier European cells plus Japanese

61
00:04:42.190 --> 00:04:50.790
sales plus other sales and logis quickly put this on the bottom.

62
00:04:50.830 --> 00:04:54.150
So it runs in the correct order and how we execute this.

63
00:04:54.160 --> 00:04:59.160
We should see the 11th column magically gain sense.

64
00:04:59.170 --> 00:05:06.850
So now instead of having to calculate all of this every time by myself I can actually go ahead and see

65
00:05:07.270 --> 00:05:13.750
the global sales the total amount of sales right here and this neatly organized last column.

66
00:05:13.810 --> 00:05:15.970
Now this is fun isn't it.

67
00:05:15.970 --> 00:05:23.440
It's actually quite amazing what you can do with update and alter commands because alter command ultra

68
00:05:23.440 --> 00:05:31.630
function lets you alter the design of database add or subtract different columns maybe merge them together.

69
00:05:31.640 --> 00:05:40.330
We'll learn about that later on the course and sat or other update lets you to work with the table with

70
00:05:40.330 --> 00:05:47.350
the dating side of it with set allowing you to create different different patterns and different rules

71
00:05:47.350 --> 00:05:49.090
for certain columns.

72
00:05:49.090 --> 00:05:53.000
So to make sure we learned this today.

73
00:05:53.050 --> 00:05:56.660
Let's quickly go ahead and run this exercise.

74
00:05:56.710 --> 00:06:07.490
What you need to do is you need to create a column or rather just this table so that the child us the

75
00:06:08.080 --> 00:06:15.390
percentage what percent North American sales were or the total sales.

76
00:06:15.400 --> 00:06:21.420
So it's basically we will have a new column called North American sales percentage that shows us in

77
00:06:21.430 --> 00:06:22.960
percent.

78
00:06:23.050 --> 00:06:25.230
How much was it on the global sales.

79
00:06:25.240 --> 00:06:30.400
Sounds pretty easy and it is because all we need to do again is we're going to our favorite older table

80
00:06:30.400 --> 00:06:31.480
command.

81
00:06:31.690 --> 00:06:39.550
We're going to alter table console games in which we will say that I want to add a new column called

82
00:06:39.550 --> 00:06:42.440
North American sales percent.

83
00:06:42.490 --> 00:06:43.780
You can call it whatever you want.

84
00:06:43.780 --> 00:06:45.530
For me this is just convenient.

85
00:06:45.540 --> 00:06:51.030
Again I'll make it all the data type float I'll execute it right now.

86
00:06:51.040 --> 00:06:57.730
Then I want to update or other religious selected to make sure it's all been correctly select all from

87
00:06:57.880 --> 00:07:02.860
console games and now we get this we can see another one.

88
00:07:03.170 --> 00:07:07.710
Twelf column that again is filled with no values nothing to worry about her again.

89
00:07:07.720 --> 00:07:15.010
All they need to do is fade space and sound a bit and typing update.

90
00:07:15.280 --> 00:07:18.000
Console games.

91
00:07:18.310 --> 00:07:33.470
And after that I want to say that I want to set a sales P.C. to be equal to North American sales divided

92
00:07:33.680 --> 00:07:35.030
by global sales

93
00:07:38.190 --> 00:07:41.940
so now if we're on this it should give us this error.

94
00:07:42.180 --> 00:07:45.360
And this is because divide by zero error and comfort.

95
00:07:45.510 --> 00:07:48.250
So as you remember it's very important.

96
00:07:48.260 --> 00:07:53.460
The one of the most fundamental important basic rules of math is that you can never divide by zero.

97
00:07:53.730 --> 00:07:58.780
And if you just control this for now and just select everything from the table.

98
00:07:58.860 --> 00:08:03.880
Right now we can see that global sales will have zeros in them.

99
00:08:04.110 --> 00:08:06.250
Not a lot of times but sometimes it will.

100
00:08:06.270 --> 00:08:14.280
And that's due to the fact that we're cutting this item short in the sense that we're not counting up

101
00:08:14.280 --> 00:08:21.200
to every single copy sold so some items will have very few copies sold less than ten thousand.

102
00:08:21.330 --> 00:08:27.270
And that would equal to as dividing by zero which is not correct.

103
00:08:27.480 --> 00:08:34.220
So what we want to do here what we need to do here is to use in our favor where function in which we'll

104
00:08:34.230 --> 00:08:41.100
specify that we only do this we only set on from Oracle sales per cent to be equal North American sales

105
00:08:41.100 --> 00:08:48.300
divide by global sales where global sales not equals zero.

106
00:08:50.080 --> 00:08:56.530
So this is one version that you can run it because if you put the exclamation point before equals that

107
00:08:56.530 --> 00:09:00.900
becomes not equals or you can also just say bigger than zero.

108
00:09:01.000 --> 00:09:02.350
This also works.

109
00:09:02.350 --> 00:09:05.730
So now you run this it will run it on the stakes.

110
00:09:05.740 --> 00:09:10.380
But atrophying you might want to do because you want this to be displayed in percentage.

111
00:09:10.450 --> 00:09:12.840
We need to multiply it by a hundred.

112
00:09:13.150 --> 00:09:19.360
So now that everything is ready and correct to run we execute it as you can see no mistakes given to

113
00:09:19.360 --> 00:09:22.480
us now because we followed every mathematical rule.

114
00:09:22.600 --> 00:09:29.770
And now if we go here we can see that North American sales per cent actually does work in this case.

115
00:09:29.770 --> 00:09:35.950
We get a lot of different numbers and the worry that North American sell sometimes or bigger and global

116
00:09:35.950 --> 00:09:37.630
sales again that's percentage.

117
00:09:37.630 --> 00:09:48.790
So in case this game Donkey Kong land to North American sells are made up almost 60 percent of the total

118
00:09:48.790 --> 00:09:57.280
sales which is quite interesting and you can work with this at just it advanced so to say table much

119
00:09:57.280 --> 00:10:02.590
easier and you can track much more information as you understand we can easily create another column

120
00:10:02.590 --> 00:10:07.720
named European 12 percent Japanese sales percentage and work our way from there.

121
00:10:07.960 --> 00:10:14.350
So as we learned today there's a lot you can do with tables than just working with the data.

122
00:10:14.380 --> 00:10:21.430
You can adjust table design to fit your needs and then adjust different columns the way you want to

123
00:10:21.430 --> 00:10:21.920
see them.

124
00:10:21.940 --> 00:10:28.120
If you don't like some data or for example right here if we don't like the way that is being portrayed

125
00:10:29.080 --> 00:10:35.140
we have a lot of zeros zeroed out something we can just multiply everything by 100 and say that now

126
00:10:35.140 --> 00:10:40.930
we're getting or other a multiply by a thousand get our total number of cells in essence rather than

127
00:10:40.930 --> 00:10:42.450
in millions.

128
00:10:42.530 --> 00:10:48.940
We can do that and you can do a lot of other things in which you can just set a whole new column which

129
00:10:48.940 --> 00:10:54.390
will just change one letter in the name or add a certain symbol at the end.

130
00:10:54.580 --> 00:11:01.050
So there is a lot of possibilities of using this update and alter commands.

131
00:11:01.090 --> 00:11:04.210
And there's a lot of possibilities using the set function.

132
00:11:04.210 --> 00:11:07.610
I hope you enjoy this lecture and I'll see you in the next one.
