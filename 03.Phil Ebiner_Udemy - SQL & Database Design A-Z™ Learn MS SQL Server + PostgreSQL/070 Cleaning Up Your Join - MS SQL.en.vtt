WEBVTT
1
00:00:00.400 --> 00:00:05.450
Hello and welcome back to the course on databases and to learn about cleaning up our joints.

2
00:00:05.460 --> 00:00:10.650
So as you can see here we've got quite a large table which resulted from our complex joint where we

3
00:00:10.650 --> 00:00:15.390
join three tables together we've got the Petz table the procedures history table and the procedures

4
00:00:15.390 --> 00:00:16.670
details table.

5
00:00:16.740 --> 00:00:20.000
And as you can see each one of these tables isn't that large.

6
00:00:20.010 --> 00:00:24.480
Only five so six columns here and and four columns in each one of these.

7
00:00:24.480 --> 00:00:29.390
But because of the number of tables the resulting table is quite big.

8
00:00:29.430 --> 00:00:35.220
And if we if the original tables were even greater in terms of the number of columns than the resulting

9
00:00:35.220 --> 00:00:36.530
table would be even bigger.

10
00:00:36.680 --> 00:00:45.960
And so it's important to learn and know how to keep your joints at a very lean representation so that

11
00:00:45.960 --> 00:00:51.660
you're only dealing with information that you need to deal if you actually need for analysis because

12
00:00:51.660 --> 00:00:58.010
that will help you keep your leg will help you keep everything more tidy.

13
00:00:58.020 --> 00:01:02.130
And and also help you navigate your resulting tables faster.

14
00:01:02.130 --> 00:01:11.080
So let's go ahead and create a new section we're going to talk about cleaning up your joints.

15
00:01:11.400 --> 00:01:17.730
So we're going to actually copy this code and we're going to learn first of all we're going to look

16
00:01:17.910 --> 00:01:20.930
at what we can remove what can we trim down.

17
00:01:21.090 --> 00:01:26.450
Well the first thing is you can always trim and unjoin is the column that you are joining on.

18
00:01:26.460 --> 00:01:34.650
So as you can see we're drawing on ID Cosby parodies so there's parody and there's parody and basically

19
00:01:34.800 --> 00:01:43.830
these two columns by default are always going to be equal so always the values in each one of the rows

20
00:01:43.830 --> 00:01:49.460
for these four and you know the values in each of these columns is going to be the same always just

21
00:01:49.470 --> 00:01:56.760
because of the way we created disjoined because if if the value is not the same it that call that roll

22
00:01:56.760 --> 00:02:03.180
wouldn't be in this joint because it would deny this condition which were specified for the and so basically

23
00:02:03.270 --> 00:02:09.210
always these two are equal and therefore you can just miss one of them except for very rare circumstances

24
00:02:09.210 --> 00:02:12.630
where for some reason you need both of them in your resulting tables.

25
00:02:12.660 --> 00:02:18.310
You specifically need them if you don't then it's very straightforward to just get rid of one of them.

26
00:02:18.360 --> 00:02:24.210
And in our case we have a complex join and therefore we're joining on actually three pairs of converse

27
00:02:24.210 --> 00:02:31.470
of pet ID procedure type and procedure subclause So there is pet ID then this procedure type these two

28
00:02:31.770 --> 00:02:34.060
and this procedure Subba called these two.

29
00:02:34.080 --> 00:02:36.580
So in total we can get rid of the recall.

30
00:02:36.600 --> 00:02:37.640
So let's go ahead and do that.

31
00:02:37.650 --> 00:02:42.810
We're going to ask you all what you need to do is you need to specify if you don't want to select all

32
00:02:42.810 --> 00:02:45.460
the columns you need to specify the ones that you exactly want to sign.

33
00:02:45.470 --> 00:03:03.200
So we're going to start with a a dot pet I.D. then we're going to say here a dog at lame and because

34
00:03:03.200 --> 00:03:12.860
the name is a code key word might as well just put it in square brackets a dot kind.

35
00:03:12.940 --> 00:03:19.700
So we're just going to specify all of them except for the ones we agreed to exclude H.

36
00:03:20.830 --> 00:03:29.190
A Daut on the ID that we've done so now we're going to go into B but we won't say pet ID because we

37
00:03:29.190 --> 00:03:30.550
already have pets Heidi.

38
00:03:30.660 --> 00:03:42.020
We're going to move on to procedure and date the dots procedure.

39
00:03:43.050 --> 00:03:50.000
Time and the door it's procedure support

40
00:03:53.510 --> 00:03:55.280
sub code.

41
00:03:55.690 --> 00:03:56.250
OK.

42
00:03:56.310 --> 00:04:01.820
And then we're going to move on to see.

43
00:04:01.890 --> 00:04:06.810
So here we don't want a procedure type we don't want procedure to have a subgoal because we're to have

44
00:04:06.810 --> 00:04:13.530
them with just one description and price so let's go see Daut description.

45
00:04:13.570 --> 00:04:15.130
This is also code words.

46
00:04:15.150 --> 00:04:21.940
Let's put it that and see Dot price.

47
00:04:21.940 --> 00:04:22.240
All right.

48
00:04:22.240 --> 00:04:22.840
So there we go.

49
00:04:22.840 --> 00:04:29.880
So now if we're on this joint you will see that already we have fewer columns and it looks a bit near.

50
00:04:29.920 --> 00:04:35.080
All right well sometimes for depending on the purpose of this join you might not need other information.

51
00:04:35.080 --> 00:04:41.050
For instance we might not need the name is going to come in these out the name of the pet kind with

52
00:04:41.050 --> 00:04:44.980
its dog cat or parrot the gender and the age.

53
00:04:44.980 --> 00:04:50.080
So if you don't need those columns just common demat or remove them and there you go so it's even neater

54
00:04:50.080 --> 00:04:51.530
now even tighter.

55
00:04:52.090 --> 00:04:59.950
And again depending on the reason for the joint or the purpose of the analysis you might not need other

56
00:04:59.950 --> 00:05:04.300
columns Well so for instance we might not even need the ID itself.

57
00:05:04.300 --> 00:05:11.290
We might not need a procedure date type sub code or description.

58
00:05:11.290 --> 00:05:16.230
So for instance let's say we want to invoice owners of the pets.

59
00:05:16.240 --> 00:05:19.320
We only need the owner ID and the price.

60
00:05:19.550 --> 00:05:22.210
Sometimes of course you would include more information on in.

61
00:05:22.230 --> 00:05:27.740
But for simplicity's sake let's say we just need the owner ID and the price from this resulting table

62
00:05:27.950 --> 00:05:30.770
and if we run this then we've got the owner idea and price.

63
00:05:30.800 --> 00:05:32.240
And this is where it gets interesting.

64
00:05:32.340 --> 00:05:32.990
Why is that.

65
00:05:32.990 --> 00:05:39.830
Well because we've got owner idea which comes from Table A and price which comes from Table C and we

66
00:05:39.830 --> 00:05:42.970
don't actually have anything that comes from table B.

67
00:05:42.980 --> 00:05:48.040
So you can see we've got to Table B here the procedures history and we've already commented everything

68
00:05:48.070 --> 00:05:52.710
out from table be so these columns are not part of the display result.

69
00:05:52.730 --> 00:05:57.390
Nevertheless there is no way that we could get from owner to price.

70
00:05:57.410 --> 00:06:02.330
We followed the intermediary table B which tells us the history of the procedures.

71
00:06:02.330 --> 00:06:09.740
So in reality we have what we have here is we've got this ghost type of table in between which we don't

72
00:06:09.740 --> 00:06:16.880
see in the displayed result at old so represented it in any way but it is crucial for this complex joint

73
00:06:16.940 --> 00:06:18.860
to operate correctly.

74
00:06:18.890 --> 00:06:19.130
Right.

75
00:06:19.130 --> 00:06:21.680
So I find that quite interesting.

76
00:06:21.710 --> 00:06:25.850
And yeah so that's how this resolved works.

77
00:06:26.000 --> 00:06:34.560
And it's also demonstrates that you don't actually have to have columns of old tables in the output.

78
00:06:34.900 --> 00:06:39.900
What it demonstrate demonstrates is that this is separate to this.

79
00:06:39.900 --> 00:06:44.350
So first this joins are performed then.

80
00:06:44.420 --> 00:06:50.020
If you had in you where clauses they would be applied and then on either select Saipan would run.

81
00:06:50.020 --> 00:06:55.760
So even if you Scilla if you even if you select nothing from the results right and if you comment out

82
00:06:55.790 --> 00:06:59.560
everything and then just select the know for instance or an empty call.

83
00:06:59.570 --> 00:07:05.240
This joint is still going to occur in the background is going to take a processing power and time.

84
00:07:05.330 --> 00:07:13.140
So yeah it's it's an interesting thing to observe that you don't really have to have columns from all

85
00:07:13.140 --> 00:07:15.450
of the tables in your final output.

86
00:07:16.010 --> 00:07:24.710
So there we go that's how we conduct a complex joint and that's how we also clean up our joints.

87
00:07:24.770 --> 00:07:29.280
It's an important habit to develop really a search.

88
00:07:29.490 --> 00:07:36.560
It's not really a sophisticated skill clean up but it's a habit that you should have or if it's good

89
00:07:36.560 --> 00:07:43.010
is a good idea to develop because it will help you in your analysis and also help other people fully

90
00:07:43.010 --> 00:07:50.840
analysys better because your code and your results will be more sinked.

91
00:07:50.840 --> 00:07:54.230
All right so I hope you enjoyed this tural and I'll see you next time.

92
00:07:54.230 --> 00:07:55.700
Until then I'd be analyzing.
