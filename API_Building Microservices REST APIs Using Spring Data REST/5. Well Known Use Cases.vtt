WEBVTT
1
00:00:02.934 --> 00:00:07.901
Consider a large company like Amazon that leverages

2
00:00:07.901 --> 00:00:09.763
a microservices architecture.

3
00:00:09.763 --> 00:00:12.848
When it comes to Amazon's global footprint,

4
00:00:12.848 --> 00:00:18.748
one big monolithic application would be very hard to manage.

5
00:00:18.748 --> 00:00:23.434
If you go back to 2001, the Amazon.

6
00:00:23.434 --> 00:00:27.535
com retail website was one large monolith.

7
00:00:27.535 --> 00:00:29.969
Rob Brigham, AWS Senior Project Manager,

8
00:00:29.969 --> 00:00:34.314
said, "That monolith is going to add overhead into your process,

9
00:00:34.314 --> 00:00:40.044
and that software development lifecycle is going to begin to slow down.

10
00:00:40.044 --> 00:00:41.671
We went through the code,

11
00:00:41.671 --> 00:00:45.031
and pulled out functional units that served a single purpose,

12
00:00:45.031 --> 00:00:48.275
and we wrapped those with a web service interface.

13
00:00:48.275 --> 00:00:53.865
" This is the approach that Amazon took to break up their big

14
00:00:53.865 --> 00:00:58.457
monolith application into smaller microservices.

15
00:00:58.457 --> 00:00:59.542
Consider Netflix,

16
00:00:59.542 --> 00:01:04.682
the company transitioned from a traditional development model with

17
00:01:04.682 --> 00:01:10.711
hundreds of engineers producing a monolithic DVD rental application to

18
00:01:10.711 --> 00:01:15.872
a microservices architecture with many small teams responsible for the

19
00:01:15.872 --> 00:01:19.638
end-to-end development of hundreds of microservices that worked

20
00:01:19.638 --> 00:01:26.000
together to steam digital entertainment to millions of Netflix customers every day.

