1
00:00:02,463 --> 00:00:05,595
Paging and sorting is easy when using Spring Data's

2
00:00:05,595 --> 00:00:09,486
PagingAndSortingRepository; however, up to this point,

3
00:00:09,486 --> 00:00:15,309
we've discussed the CrudRepository and shown examples using JpaRepository.

4
00:00:15,309 --> 00:00:19,670
What are the differences and how do they all fit together?

5
00:00:19,670 --> 00:00:24,101
The JpaRepository extends the PagingAndSortingRepository,

6
00:00:24,101 --> 00:00:28,491
and the PagingAndSortingRepository extends the CrudRepository.

7
00:00:28,491 --> 00:00:32,043
CrudRepository provides CRUD functions.

8
00:00:32,043 --> 00:00:34,617
PagingAndSortingRepository provides methods to do

9
00:00:34,617 --> 00:00:38,933
pagination and sorting records, JpaRepository provides JPA related methods,

10
00:00:38,933 --> 00:00:42,165
such as flushing the persistence context,

11
00:00:42,165 --> 00:00:44,986
and deleting records in batch.

12
00:00:44,986 --> 00:00:47,449
Because of this inheritance relationship,

13
00:00:47,449 --> 00:00:51,358
the JpaRepository contains the full API of

14
00:00:51,358 --> 00:00:53,181
CrudRepository and PagingAndSortingRepository,

15
00:00:53,181 --> 00:00:54,730
which works for our needs.

16
00:00:54,730 --> 00:00:58,308
Let's look more closely at the PagingAndSortingRepository,

17
00:00:58,308 --> 00:01:01,333
which adds two overloaded versions of findAll,

18
00:01:01,333 --> 00:01:05,629
which will be very useful to us; findAll takes a pageable object

19
00:01:05,629 --> 00:01:09,217
and returns a page of entities meeting the paging restrictions

20
00:01:09,217 --> 00:01:16,000
provided in the pageable object; findAll returns all entities sorted by the given options.

