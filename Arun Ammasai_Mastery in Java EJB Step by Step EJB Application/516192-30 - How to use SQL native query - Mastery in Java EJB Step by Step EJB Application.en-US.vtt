WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.890
Hello everyone, welcome back.

00:00:01.890 --> 00:00:07.500
So far we tried how to use a named query and how to create a named query, correct?

00:00:07.500 --> 00:00:10.980
At the same time, we used Create Query SQL.

00:00:10.980 --> 00:00:13.305
So if you want to create a query outset of your entity,

00:00:13.305 --> 00:00:15.840
we can use the Create query, okay,

00:00:15.840 --> 00:00:17.100
as I mentioned earlier,

00:00:17.100 --> 00:00:18.930
so I have my SQL query,

00:00:18.930 --> 00:00:21.210
how I can use it with the EGP is right.

00:00:21.210 --> 00:00:23.100
So that is where the create native where it

00:00:23.100 --> 00:00:25.695
comes into the picture. So what are we gonna do?

00:00:25.695 --> 00:00:27.960
We tried to, students start final,

00:00:27.960 --> 00:00:30.495
that is, select star from student, right?

00:00:30.495 --> 00:00:32.925
It's tried to do the same thing.

00:00:32.925 --> 00:00:36.090
Let's go to the interface first, let's add a method.

00:00:36.090 --> 00:00:41.930
But the problem is passing a list of amino new pausing native query,

00:00:41.930 --> 00:00:45.005
which means the outcome is going to be object.

00:00:45.005 --> 00:00:50.390
Because when you are passing Egypt BigQuery as the input that is object-based it,

00:00:50.390 --> 00:00:53.690
so it will know that this is my object and outcome is going to be this one.

00:00:53.690 --> 00:00:55.190
But when you're using native query,

00:00:55.190 --> 00:00:57.920
we will not have any idea what is the outcome of the query.

00:00:57.920 --> 00:01:00.995
So it will be always received through objects.

00:01:00.995 --> 00:01:05.435
So interrupts tour and we're going to use a list of objects.

00:01:05.435 --> 00:01:08.195
And then let's name it.

00:01:08.195 --> 00:01:10.680
Get all students.

00:01:11.980 --> 00:01:19.680
Get all rodents by native.

00:01:19.920 --> 00:01:29.540
Okay, so let's go back to our implementation and where can provide the definition side.

00:01:30.240 --> 00:01:33.280
Okay, So here what do we need to do?

00:01:33.280 --> 00:01:35.170
The, how to write the implementation?

00:01:35.170 --> 00:01:37.210
So entity manager, DOD,

00:01:37.210 --> 00:01:42.080
create grid,

00:01:43.620 --> 00:01:48.520
Native, Query and unit to provide the query what you're going to use.

00:01:48.520 --> 00:01:50.530
So let's do a select star from Sudan,

00:01:50.530 --> 00:01:51.835
which is the normal query.

00:01:51.835 --> 00:01:56.530
Select star from SBA is to write a normal GQ at, I mean,

00:01:56.530 --> 00:02:05.975
SQL query and get the stellate cells which will return a list of objects. Right?

00:02:05.975 --> 00:02:07.280
Okay.

00:02:07.280 --> 00:02:09.260
So it's been released reforms, That's right.

00:02:09.260 --> 00:02:11.555
So I don't want to keep it as a normal.

00:02:11.555 --> 00:02:15.080
And we're going to return the list as well.

00:02:15.080 --> 00:02:18.860
Okay, So the moment you save it,

00:02:18.860 --> 00:02:21.605
it automatically start deploying, deploying your code.

00:02:21.605 --> 00:02:22.820
So we don't have to wait for that.

00:02:22.820 --> 00:02:24.680
We'll go back to our client and we'll start

00:02:24.680 --> 00:02:28.820
implementing implementation for calling this method, right?

00:02:28.820 --> 00:02:31.175
So let's comment this too.

00:02:31.175 --> 00:02:33.515
So we don't want to get into common confusions.

00:02:33.515 --> 00:02:36.770
Save it and supplemental destructor.

00:02:36.770 --> 00:02:39.455
Okay, So all you need to do use a lookup

00:02:39.455 --> 00:02:43.040
and to call the guitar students by native method,

00:02:43.040 --> 00:02:46.970
which is going to be written list of This, right?

00:02:46.970 --> 00:02:51.185
So now all I need to do is just rename it a list.

00:02:51.185 --> 00:02:52.370
And then what we're gonna do,

00:02:52.370 --> 00:02:53.480
we're going to print all of them.

00:02:53.480 --> 00:02:58.430
Begin with, we're going to add to each and every data entered and they reprinted, right?

00:02:58.430 --> 00:03:03.245
So I'm going to use a for each list dot for each mentor,

00:03:03.245 --> 00:03:05.180
and then it's going to an object.

00:03:05.180 --> 00:03:08.105
And so OBJ, I'm using Lambda expression.

00:03:08.105 --> 00:03:11.975
If you don't ever, just to go back and check what is the lambda expressions.

00:03:11.975 --> 00:03:15.275
Okay, So now instead of Wells Fargo pile how the list of objects,

00:03:15.275 --> 00:03:17.630
each object contains multiple values.

00:03:17.630 --> 00:03:20.015
For example, if you take a look on this SQL result,

00:03:20.015 --> 00:03:24.425
so you're receiving this record ASA or not this one,

00:03:24.425 --> 00:03:26.810
because we're using select star from students, right?

00:03:26.810 --> 00:03:29.210
So which marriage will give all the information?

00:03:29.210 --> 00:03:30.125
Correct?

00:03:30.125 --> 00:03:32.495
So when I run this,

00:03:32.495 --> 00:03:37.145
you will get all the student list, right?

00:03:37.145 --> 00:03:39.770
So each object contains ID and a name card,

00:03:39.770 --> 00:03:42.875
which means it is going to be array of value in it.

00:03:42.875 --> 00:03:46.595
That now what I'm gonna do is set up for that.

00:03:46.595 --> 00:03:48.455
So now what I'm gonna do it.

00:03:48.455 --> 00:03:53.090
So here I am going to receive the objects have some array,

00:03:53.090 --> 00:03:59.885
C object array, and that data is going to be OBJ.

00:03:59.885 --> 00:04:03.244
And when retype cache two objects.

00:04:03.244 --> 00:04:05.975
And then what we can, we can simply print the data.

00:04:05.975 --> 00:04:07.610
So if I want to print a separate law,

00:04:07.610 --> 00:04:12.440
had a brand like data of 0,

00:04:12.440 --> 00:04:13.490
data of one, right?

00:04:13.490 --> 00:04:14.570
So Intrade out I'm going to do,

00:04:14.570 --> 00:04:17.780
I'm going to use the stream that off matter.

00:04:17.780 --> 00:04:24.320
And then I'm converting our array into a stream data.

00:04:24.320 --> 00:04:27.630
For each animal, print the data.

00:04:29.740 --> 00:04:33.230
Okay, so now we have everything in place.

00:04:33.230 --> 00:04:35.060
All we need to do is just run the client

00:04:35.060 --> 00:04:37.850
and check whether you are getting the proper outcome.

00:04:37.850 --> 00:04:39.815
Just right-click and arenas.

00:04:39.815 --> 00:04:42.210
Java application.

00:04:42.280 --> 00:04:45.635
Go to console with my taco.

00:04:45.635 --> 00:04:47.330
Few seconds.

00:04:47.330 --> 00:04:50.045
Okay, see now we've got all of them.

00:04:50.045 --> 00:04:51.800
One eij to John,

00:04:51.800 --> 00:04:56.930
three Paul for Daniel because each and every one of them out I element in a single array.

00:04:56.930 --> 00:04:59.584
So now we're able to use

00:04:59.584 --> 00:05:04.370
the get entity manager at it with the help of create query and create native gory anoles.

00:05:04.370 --> 00:05:07.850
So we'll have create named Marie aswell.

00:05:07.850 --> 00:05:10.535
So far we tried most of pretty much everything.

00:05:10.535 --> 00:05:14.360
How to create a named query and how to create a query and how to get in a day query.

00:05:14.360 --> 00:05:15.890
Okay, so whatever we learn so far,

00:05:15.890 --> 00:05:17.030
it is just the basics.

00:05:17.030 --> 00:05:17.510
Okay?

00:05:17.510 --> 00:05:18.770
So you might be asking,

00:05:18.770 --> 00:05:21.080
so what if I wanted to pull some complex queries

00:05:21.080 --> 00:05:23.855
because we have our different customers, employees, offices?

00:05:23.855 --> 00:05:26.525
Correct? Each office has multiple employees.

00:05:26.525 --> 00:05:28.955
He's employee is dealing with the multiple customers.

00:05:28.955 --> 00:05:31.879
So how you're going to do those information with some jottings.

00:05:31.879 --> 00:05:35.220
So we'll talk about that in the next video.
