WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.040
And everyone will come back.

00:00:02.040 --> 00:00:05.235
And the last example we tried how to use a named query,

00:00:05.235 --> 00:00:09.120
and we haven't spoke about how you can create a named query.

00:00:09.120 --> 00:00:13.350
Okay, So in this video we're gonna talk about how

00:00:13.350 --> 00:00:18.000
to create a named query and create a named query and create query both of them,

00:00:18.000 --> 00:00:24.435
it's a query language since this named query is available inside the entity itself.

00:00:24.435 --> 00:00:26.340
So it is called as a named query.

00:00:26.340 --> 00:00:29.190
And if you are writing out another entity that is a normal query,

00:00:29.190 --> 00:00:33.555
which means query into jQuery and this is named query.

00:00:33.555 --> 00:00:34.890
So to call this,

00:00:34.890 --> 00:00:37.125
we need to use create named Corey method.

00:00:37.125 --> 00:00:39.690
That's what we tried in the previous example here,

00:00:39.690 --> 00:00:41.110
student dot, find dot.

00:00:41.110 --> 00:00:45.425
Okay, let's take these two NADH find out here. Let's copy that.

00:00:45.425 --> 00:00:50.990
So this is the student and find all coding and just have a look at it.

00:00:50.990 --> 00:00:53.420
And this is where we have all the debits kinda

00:00:53.420 --> 00:00:56.360
because an eclipse IO database connection there we can see

00:00:56.360 --> 00:00:59.150
all the tables if you want to pull the information

00:00:59.150 --> 00:01:02.780
just random and you should be able to see the data here.

00:01:02.780 --> 00:01:06.365
So we can handle everything inside the eclipse itself, right?

00:01:06.365 --> 00:01:07.910
So let's copy this,

00:01:07.910 --> 00:01:10.445
paste the query which I copied.

00:01:10.445 --> 00:01:13.805
Okay, just have a look at this.

00:01:13.805 --> 00:01:18.500
So this is my JPA query.

00:01:18.500 --> 00:01:23.750
Jpa query. And this is

00:01:23.750 --> 00:01:30.590
my relational query. Okay?

00:01:30.590 --> 00:01:33.665
So even though both of them looks similar,

00:01:33.665 --> 00:01:35.555
that much difference, okay?

00:01:35.555 --> 00:01:38.990
So here if you take a look at select star from students, student is a table name,

00:01:38.990 --> 00:01:42.380
but here select S from students, which is a day, I mean,

00:01:42.380 --> 00:01:46.235
which is a Java class or entity.

00:01:46.235 --> 00:01:50.600
So I have a reference and unfolded S. And here we have Yes,

00:01:50.600 --> 00:01:52.250
because I want to return,

00:01:52.250 --> 00:01:53.915
these two are friends.

00:01:53.915 --> 00:01:55.250
And here we have a student,

00:01:55.250 --> 00:01:56.915
maybe you can put something like that.

00:01:56.915 --> 00:01:59.480
Student as SBU.

00:01:59.480 --> 00:02:03.380
And here what you can do is STU.

00:02:03.380 --> 00:02:06.065
Both of them are pretty much the same.

00:02:06.065 --> 00:02:10.400
Here we are dealing with a database tables and here dating with Java objects.

00:02:10.400 --> 00:02:16.010
So this will represent this whenever you call this named query,

00:02:16.010 --> 00:02:20.780
our container will convert our Cory into this query and it will return back

00:02:20.780 --> 00:02:27.425
the entities where that is happening internally to the ECB container itself.

00:02:27.425 --> 00:02:30.950
So now let's create a wound method.

00:02:30.950 --> 00:02:33.290
So because the one which you use it, right,

00:02:33.290 --> 00:02:37.520
it is going to be W, which is already existing.

00:02:37.520 --> 00:02:39.590
So what if I want to create a named query?

00:02:39.590 --> 00:02:44.480
So for example, I want to create a query to fetch the student by name.

00:02:44.480 --> 00:02:50.810
Okay, so here we have a different, different details, right?

00:02:50.810 --> 00:02:54.485
I'm indifferent student information so late, let me do that.

00:02:54.485 --> 00:03:01.715
Let me run this. So here we have a different students, right?

00:03:01.715 --> 00:03:03.410
So if I pass John,

00:03:03.410 --> 00:03:06.290
I want to retrieve only that particular student alone.

00:03:06.290 --> 00:03:08.450
So how I can write a query for that.

00:03:08.450 --> 00:03:10.835
Right? So let's do that.

00:03:10.835 --> 00:03:15.350
So first let's write in SQL and then we'll convert into a GP equity.

00:03:15.350 --> 00:03:23.255
So select star from student where name is equal to.

00:03:23.255 --> 00:03:25.925
And maybe again past Shawn here.

00:03:25.925 --> 00:03:29.730
So the moment when you execute a query and it will happen,

00:03:29.860 --> 00:03:33.170
we will get the outcome.

00:03:33.170 --> 00:03:37.565
So now we're going to only one record which is belongs to which John.

00:03:37.565 --> 00:03:42.680
So how this same thing can be converted into a JPA query. Let's write normal one.

00:03:42.680 --> 00:03:43.655
Select.

00:03:43.655 --> 00:03:45.230
So instead of a star,

00:03:45.230 --> 00:03:46.910
we need to provide the object reference.

00:03:46.910 --> 00:03:49.295
So what is the object we are trying to call student,

00:03:49.295 --> 00:03:52.100
maybe I'm grading your reference limb called SST you.

00:03:52.100 --> 00:03:55.625
From here we need to provide what is the table name,

00:03:55.625 --> 00:03:57.530
which is a student those tour and table,

00:03:57.530 --> 00:03:59.600
it is represented by a student Java class.

00:03:59.600 --> 00:04:01.400
So I'm going to provide that as well.

00:04:01.400 --> 00:04:04.160
Student and the reference limb is must year.

00:04:04.160 --> 00:04:06.950
And then what do we need to do is wear.

00:04:06.950 --> 00:04:09.470
So how we mentioned the name here directly?

00:04:09.470 --> 00:04:11.240
We mentioned them because we have a student here,

00:04:11.240 --> 00:04:13.325
but here we are you dealing with the objects, right?

00:04:13.325 --> 00:04:16.670
So if you want to access a name, what do you need to do?

00:04:16.670 --> 00:04:17.750
This is your student,

00:04:17.750 --> 00:04:18.995
right? And this is the name.

00:04:18.995 --> 00:04:22.400
So you need to use the object to call the method.

00:04:22.400 --> 00:04:27.635
So how I'm going to do is to use a reference rate S to U dot name is.

00:04:27.635 --> 00:04:31.340
And you can provide any input here with the colon.

00:04:31.340 --> 00:04:33.635
So this is how you need to pass information,

00:04:33.635 --> 00:04:37.265
it's input, or you can directly pass a name also here, but it's better.

00:04:37.265 --> 00:04:38.975
Let's do something like this.

00:04:38.975 --> 00:04:42.410
So which means whatever, whenever you're trying a colon and passing a name,

00:04:42.410 --> 00:04:45.455
which means it is taking input from the method.

00:04:45.455 --> 00:04:48.665
And we can set the parameter to pass the value for this.

00:04:48.665 --> 00:04:51.005
Okay, so let's try that.

00:04:51.005 --> 00:04:52.880
So let's go back to student.

00:04:52.880 --> 00:04:54.800
And here you only have a named correlated,

00:04:54.800 --> 00:04:59.030
just copy that copy that particular named Corey

00:04:59.030 --> 00:05:03.545
and just simply based on an underline and wrote a comma here.

00:05:03.545 --> 00:05:08.090
And here, I'm going to modify the named query find by name.

00:05:08.090 --> 00:05:09.605
And not only that,

00:05:09.605 --> 00:05:11.180
we have our different query, right,

00:05:11.180 --> 00:05:18.270
so let's copy this aswell console C and come back to student and then pays the Cori.

00:05:19.000 --> 00:05:21.590
So we have to name the words,

00:05:21.590 --> 00:05:22.985
but we have some issue here.

00:05:22.985 --> 00:05:27.020
So each and every entity must contain only one named query.

00:05:27.020 --> 00:05:29.120
But if you want to use multiple named,

00:05:29.120 --> 00:05:30.935
go to Unity, use the wrapper.

00:05:30.935 --> 00:05:38.795
So let's go copy these two and deleted Control C up to length.

00:05:38.795 --> 00:05:43.550
So we don't introduce another notation called named query.

00:05:43.550 --> 00:05:44.840
So named agreements, we're going to use

00:05:44.840 --> 00:05:46.820
only one if you're using named good is you can use

00:05:46.820 --> 00:05:54.185
multiple would indeed braces.

00:05:54.185 --> 00:05:57.470
Okay, So now that is no error because this

00:05:57.470 --> 00:06:01.055
single named caries contains multiple named decoding.

00:06:01.055 --> 00:06:04.430
So this is a named query which we are trying to call, right?

00:06:04.430 --> 00:06:06.380
Okay, so now the next thing what we need to do,

00:06:06.380 --> 00:06:09.260
we need to write a method to call the method, right?

00:06:09.260 --> 00:06:11.990
So let's go back to our management being.

00:06:11.990 --> 00:06:14.060
Here we have all students, right,

00:06:14.060 --> 00:06:15.575
Let's go to the interface,

00:06:15.575 --> 00:06:17.240
its creator, another matter.

00:06:17.240 --> 00:06:21.870
And here I'm gonna write a method called student

00:06:22.060 --> 00:06:31.625
and find by name and the pass rate, so string name.

00:06:31.625 --> 00:06:34.670
Okay, So the moment if we saved the file will

00:06:34.670 --> 00:06:37.760
get an error and D are management beam because we need to input,

00:06:37.760 --> 00:06:40.520
I mean, forward to implement the methods right,

00:06:40.520 --> 00:06:42.785
until one unimplemented method.

00:06:42.785 --> 00:06:45.120
And here what we're gonna do,

00:06:45.160 --> 00:06:49.770
first thing on Monday AM.

00:06:50.170 --> 00:06:54.785
So here, P M dot.

00:06:54.785 --> 00:07:01.790
Again, create a named query and you need to pass the named query name.

00:07:01.790 --> 00:07:03.005
So what is an M Codename?

00:07:03.005 --> 00:07:04.895
Let's go back and find it out here.

00:07:04.895 --> 00:07:07.670
So this is mine named curious name, right?

00:07:07.670 --> 00:07:10.250
And come back here and paste the data here.

00:07:10.250 --> 00:07:14.015
And then what do you need to do is there are multiple way you can use it.

00:07:14.015 --> 00:07:16.415
So if you provide dot,

00:07:16.415 --> 00:07:20.495
get single descent, it will still look all you need to do,

00:07:20.495 --> 00:07:23.120
just add the cast duet.

00:07:23.120 --> 00:07:25.550
But the problem with this approach,

00:07:25.550 --> 00:07:27.380
whenever you use a single result,

00:07:27.380 --> 00:07:31.250
which means this particular matter experts, only one output,

00:07:31.250 --> 00:07:34.160
either if it is written as 0 or if it's been more than one,

00:07:34.160 --> 00:07:36.155
this method will return an exception.

00:07:36.155 --> 00:07:38.165
So the better way to handle that,

00:07:38.165 --> 00:07:39.800
we can use something like this.

00:07:39.800 --> 00:07:45.920
What I can do is so instead of maybe you do want to let me do one thing.

00:07:45.920 --> 00:07:48.270
So let me delete this one.

00:07:48.520 --> 00:07:56.975
Let's copy this x explorers and property limitation here.

00:07:56.975 --> 00:07:57.815
Okay?

00:07:57.815 --> 00:08:02.615
So dot get a result set.

00:08:02.615 --> 00:08:03.665
Okay?

00:08:03.665 --> 00:08:05.180
So that is another question now.

00:08:05.180 --> 00:08:10.190
Okay, so we just call directly the results it so that I'm going to pass the input,

00:08:10.190 --> 00:08:14.465
then name data which I am receiving from the user.

00:08:14.465 --> 00:08:16.910
So that is where the parameter comes into place

00:08:16.910 --> 00:08:19.850
before you call the state results it all you need to do.

00:08:19.850 --> 00:08:25.100
You need to call another matter, dot set parameter.

00:08:25.100 --> 00:08:27.800
There are multiple ways you can use this ID parameter.

00:08:27.800 --> 00:08:31.070
Either you can use pushing on the value

00:08:31.070 --> 00:08:34.625
or you can directly provide the name of the field.

00:08:34.625 --> 00:08:36.650
So what is the name which we provided?

00:08:36.650 --> 00:08:38.390
So here if we go to the here,

00:08:38.390 --> 00:08:40.070
so this is a name which we're talking about.

00:08:40.070 --> 00:08:42.904
Okay, so you might be eating banana to USDA positions,

00:08:42.904 --> 00:08:45.995
introduced this if you're using question mark here,

00:08:45.995 --> 00:08:48.740
then you can use the position one.

00:08:48.740 --> 00:08:50.780
And then you can provide a value for it.

00:08:50.780 --> 00:08:52.520
Since areas in directly parameter names,

00:08:52.520 --> 00:08:54.050
we can directly provide the parameter name.

00:08:54.050 --> 00:08:58.235
So push admins in the same query you might have two or three input elements.

00:08:58.235 --> 00:09:01.865
And so wherever you want to put some in preliminary question mark,

00:09:01.865 --> 00:09:03.020
so based on the position,

00:09:03.020 --> 00:09:05.210
you can provide the input values for that.

00:09:05.210 --> 00:09:08.810
So for now, what I'm gonna do is I just pass the name

00:09:08.810 --> 00:09:12.530
here and what the value which is coming from the user input.

00:09:12.530 --> 00:09:15.290
Great, then to od.

00:09:15.290 --> 00:09:19.220
Okay, so we don't need to do that because they already have the good results at here.

00:09:19.220 --> 00:09:22.685
Okay, so this will return a correlate.

00:09:22.685 --> 00:09:25.850
So, so let's say it.

00:09:25.850 --> 00:09:30.545
And what I'm gonna do is they sell set,

00:09:30.545 --> 00:09:35.209
dot, size is greater than 0.

00:09:35.209 --> 00:09:41.630
Then return results list dot,

00:09:41.630 --> 00:09:46.860
get off 0 or else just return null.

00:09:47.200 --> 00:09:52.500
So which isn't much safer approach and it is going to be a list of students.

00:09:54.310 --> 00:09:56.180
Okay?

00:09:56.180 --> 00:09:59.300
So all we need to do just to save the file and deployed.

00:09:59.300 --> 00:10:03.020
So I enabled auto deploy or so whenever I made some new changes,

00:10:03.020 --> 00:10:04.400
all I needed to just save the file.

00:10:04.400 --> 00:10:06.800
It automatically start deploying it.

00:10:06.800 --> 00:10:08.930
Saying it's automatically that picked up.

00:10:08.930 --> 00:10:10.790
So six of and the diamond 671,

00:10:10.790 --> 00:10:12.530
so it's automatically deployed now.

00:10:12.530 --> 00:10:15.065
So now all we need to do, just go back to our artists

00:10:15.065 --> 00:10:18.185
client and then we call them data to see what is the outcome.

00:10:18.185 --> 00:10:20.165
So what are they motivated to call?

00:10:20.165 --> 00:10:26.540
So lookup dot, find by name.

00:10:26.540 --> 00:10:28.730
So what is the name? We are on a path we cannot pass.

00:10:28.730 --> 00:10:31.080
John writes, so John,

00:10:31.480 --> 00:10:38.930
so this is going to be return student.

00:10:38.930 --> 00:10:44.160
And then all I need to do is just print us to end my name.

00:10:44.200 --> 00:10:49.430
Okay, So let's comment out this particular line so we can now work some confusions.

00:10:49.430 --> 00:10:52.790
Okay, so now all we need to just run the file as

00:10:52.790 --> 00:10:57.480
a normal Java application will get the output here.

00:11:01.510 --> 00:11:05.945
Okay, So let me see. Now we got the output, right?

00:11:05.945 --> 00:11:08.990
So now we know how to write in a named code is read,

00:11:08.990 --> 00:11:10.280
it's in the next example,

00:11:10.280 --> 00:11:14.960
will try to create a query using manner gray instead of named query.

00:11:14.960 --> 00:11:17.090
Let's use create Kadima didn't.

00:11:17.090 --> 00:11:19.260
We'll see how it is going to walk.
