WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.040
Hello everyone, Welcome back.

00:00:02.040 --> 00:00:03.645
So we discussed what is

00:00:03.645 --> 00:00:08.460
a stateful and stateless session window and we have seen a simple example as well,

00:00:08.460 --> 00:00:10.065
how it does looks like.

00:00:10.065 --> 00:00:14.535
So the next thing which we need to know as part of EGP,

00:00:14.535 --> 00:00:16.575
persistence, the persistent myth,

00:00:16.575 --> 00:00:22.365
how that data will be persisted in a specific database or a table,

00:00:22.365 --> 00:00:29.445
and how the communication is happening between the application and the database.

00:00:29.445 --> 00:00:33.060
So in Egypt we do 0 entities are used to

00:00:33.060 --> 00:00:36.600
perform a database operation that has been replaced with Egypt with three,

00:00:36.600 --> 00:00:38.620
with a persistent mechanism.

00:00:38.620 --> 00:00:41.000
Okay, we're going to use identities,

00:00:41.000 --> 00:00:43.834
but we're going to use the persistent mechanism.

00:00:43.834 --> 00:00:46.310
And then I'll few key factors.

00:00:46.310 --> 00:00:50.930
You might be thinking, why do I need to have a persistence?

00:00:50.930 --> 00:00:53.060
So just think about this scenario.

00:00:53.060 --> 00:00:58.625
User is providing the information and you're having the business logic.

00:00:58.625 --> 00:01:00.410
And based on the business logic,

00:01:00.410 --> 00:01:02.795
you're manipulating some object,

00:01:02.795 --> 00:01:04.745
which is a Java object,

00:01:04.745 --> 00:01:06.650
and the database is entirely different,

00:01:06.650 --> 00:01:10.205
that is relational database.

00:01:10.205 --> 00:01:14.120
So how the object oriented will communicate to the relational database.

00:01:14.120 --> 00:01:17.150
So that is where the person comes into the picture and

00:01:17.150 --> 00:01:20.540
it will help us to achieve those goals.

00:01:20.540 --> 00:01:22.310
There are some key factors,

00:01:22.310 --> 00:01:28.640
entity and the entity manager and the persistent unit and data sources.

00:01:28.640 --> 00:01:31.025
So what is entity in the first place?

00:01:31.025 --> 00:01:37.175
Entity is nothing but it's just a intermediate between your database and a Java,

00:01:37.175 --> 00:01:40.610
which means the entity contains what is a Java field?

00:01:40.610 --> 00:01:42.290
And according to the Java field,

00:01:42.290 --> 00:01:44.525
what is the database field?

00:01:44.525 --> 00:01:46.625
So column name.

00:01:46.625 --> 00:01:49.220
So when you see a simple entity,

00:01:49.220 --> 00:01:51.950
you can see what I'm trying to say is, for example,

00:01:51.950 --> 00:01:57.784
in your database you have a firstname and you have a Java object called a student.

00:01:57.784 --> 00:02:01.385
And inside the store and you have a field called student name,

00:02:01.385 --> 00:02:06.035
that particular student named annotated with the database column ASA name.

00:02:06.035 --> 00:02:08.075
So when you see an example,

00:02:08.075 --> 00:02:10.265
you should be able to understand in a much clearer way.

00:02:10.265 --> 00:02:12.320
And what does the entity manager.

00:02:12.320 --> 00:02:16.310
So entity contains all the table information and Java information.

00:02:16.310 --> 00:02:17.960
And the entity manager, which,

00:02:17.960 --> 00:02:21.785
which takes the entities and pull forms.

00:02:21.785 --> 00:02:24.365
The database operation like cred,

00:02:24.365 --> 00:02:30.485
also used for query executions and the persistent units.

00:02:30.485 --> 00:02:32.315
So what is a post-season unit?

00:02:32.315 --> 00:02:36.830
Okay, So we know that it is going to be Java and also it is going to be persistence.

00:02:36.830 --> 00:02:40.100
So we have the entity which contains the Java

00:02:40.100 --> 00:02:44.285
and the database column information to our table column informations.

00:02:44.285 --> 00:02:47.180
But where I can provide what is the database name,

00:02:47.180 --> 00:02:50.870
what is appropriate, or you are worthy username and password ever to think.

00:02:50.870 --> 00:02:56.135
That is where the purse is in units come to the picture which holds the database.

00:02:56.135 --> 00:03:00.680
You order connection string and a username and a password.

00:03:00.680 --> 00:03:05.285
So that is where the person and you don't helps and data source names, okay,

00:03:05.285 --> 00:03:08.345
so per system unit which is available in your project,

00:03:08.345 --> 00:03:13.580
and there are a lot of scenarios you might not want to use your username and password.

00:03:13.580 --> 00:03:18.605
We just mentioned a newer persistent file which is available in your project itself.

00:03:18.605 --> 00:03:20.270
It's kinda hard coding, right?

00:03:20.270 --> 00:03:22.490
So what is the other way to do that?

00:03:22.490 --> 00:03:25.205
So we can have that data source and

00:03:25.205 --> 00:03:28.895
that particular data source name you can provide in their purses ten unit.

00:03:28.895 --> 00:03:32.870
So instead of getting the username and the password from the persistent unit,

00:03:32.870 --> 00:03:35.915
whenever there is a data source are available in a persistent unit,

00:03:35.915 --> 00:03:38.450
it will go to the WebLogic server and

00:03:38.450 --> 00:03:42.210
then it will look for the data source name over there.

00:03:42.610 --> 00:03:47.240
So what data source contains pretty much the same information,

00:03:47.240 --> 00:03:48.620
what we discussed before,

00:03:48.620 --> 00:03:54.750
connection, you oral, username and the password so that I can see that.

00:03:54.790 --> 00:03:57.425
Let's go back to the browser.

00:03:57.425 --> 00:03:59.570
Okay, So this is out of the blood, etc.

00:03:59.570 --> 00:04:08.360
So let's go to the WebLogic domain here where we can see all the information environment.

00:04:08.360 --> 00:04:14.389
Okay, so here you can see a lot of different options.

00:04:14.389 --> 00:04:18.200
So another service, you can see something like a data sources.

00:04:18.200 --> 00:04:19.625
This is what we're talking about.

00:04:19.625 --> 00:04:23.210
So when we create a data source name here, you will prove it.

00:04:23.210 --> 00:04:24.845
What is the database name?

00:04:24.845 --> 00:04:27.440
And war is a username and password.

00:04:27.440 --> 00:04:30.110
So which means from your application,

00:04:30.110 --> 00:04:34.969
if you're trying to call a particular database,

00:04:34.969 --> 00:04:39.335
there won't be any relevant information in newer coding,

00:04:39.335 --> 00:04:41.645
which means anywhere in your project structure,

00:04:41.645 --> 00:04:44.690
all you have is just a data source name.

00:04:44.690 --> 00:04:48.890
And that particular data source name will contents are the information.

00:04:48.890 --> 00:04:50.375
And now you might be thinking,

00:04:50.375 --> 00:04:54.500
so my EGP is here and how it will be rid,

00:04:54.500 --> 00:04:56.675
retrieve the WebLogic password.

00:04:56.675 --> 00:04:58.175
Think about this scenario.

00:04:58.175 --> 00:05:03.410
So this, our deployment is available in localhost seven w1,

00:05:03.410 --> 00:05:06.350
which means it's available in this WebLogic server.

00:05:06.350 --> 00:05:09.155
So in the same WebLogic server,

00:05:09.155 --> 00:05:10.490
you how the data source name,

00:05:10.490 --> 00:05:12.710
which means they are all in the same place,

00:05:12.710 --> 00:05:14.930
which means that they can communicate to each other.

00:05:14.930 --> 00:05:16.220
So you don't how deployed,

00:05:16.220 --> 00:05:18.230
what is the URL for your web lighting setup?

00:05:18.230 --> 00:05:20.975
Because the data sources and I'm available bad,

00:05:20.975 --> 00:05:22.999
their age group is deployed.

00:05:22.999 --> 00:05:26.490
So that is how they'll communicate to each other.
