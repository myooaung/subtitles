1
00:00:00,741 --> 00:00:04,049
The Spring Framework allows transactions to be managed

2
00:00:04,049 --> 00:00:07,379
seamlessly by offering a consistent programming model

3
00:00:07,379 --> 00:00:10,252
across global and local transactions.

4
00:00:10,252 --> 00:00:14,906
Essentially code is written once benefitting from different transaction

5
00:00:14,906 --> 00:00:20,245
management strategies within different environments.

6
00:00:20,245 --> 00:00:23,976
Spring provides support for programmatic transaction management.

7
00:00:23,976 --> 00:00:26,587
Now this is where the developer writes custom code to

8
00:00:26,587 --> 00:00:29,219
manage the transaction and set boundaries.

9
00:00:29,219 --> 00:00:33,341
Spring also provides support for declarative transaction management,

10
00:00:33,341 --> 00:00:35,757
which allows developers to separate transaction

11
00:00:35,757 --> 00:00:40,471
management from the business code.

12
00:00:40,471 --> 00:00:45,090
Spring supports isolation levels that help developers avoid problems

13
00:00:45,090 --> 00:00:54,000
that may arise when multiple transactions in the application are operating concurrently on the same data.

