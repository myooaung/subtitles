1
00:00:00,250 --> 00:00:04,484
The TransactionTemplate class simplifies programmatic transaction execution

2
00:00:04,484 --> 00:00:09,574
by wrapping the transaction manager API and providing a template method

3
00:00:09,574 --> 00:00:13,198
around which a transactional boundary is started.

4
00:00:13,198 --> 00:00:19,490
After the callback method concludes, the transaction is committed.

5
00:00:19,490 --> 00:00:24,495
A transaction template exposes its functionality via a callback method.

6
00:00:24,495 --> 00:00:28,432
One implementation does not have a return type.

7
00:00:28,432 --> 00:00:33,948
That's doInTransactionWithoutResult, and the other has a return type,

8
00:00:33,948 --> 00:00:38,842
doInTransactionWithResult.

9
00:00:38,842 --> 00:00:41,498
Let's look at a TrackZilla example.

10
00:00:41,498 --> 00:00:45,592
TransactionTemplate is implemented by implementing an anonymous inner

11
00:00:45,592 --> 00:00:49,479
class of type TransactionCallbackWithoutResult.

12
00:00:49,479 --> 00:01:02,000
This is an abstract class with one method, doInTransactionWithoutResult. With this code, we've explicitly specified our transaction boundaries.

