WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.330
In the last video, we were introduced numbers in

00:00:03.330 --> 00:00:07.065
JavaScript by store in our age into a variable.

00:00:07.065 --> 00:00:10.530
There is so much more we can do with these numbers though.

00:00:10.530 --> 00:00:13.620
Let's head over to the console and see this in action.

00:00:13.620 --> 00:00:17.220
If we click on this symbol here and clear the console,

00:00:17.220 --> 00:00:21.270
we can now start to take a look at numbers and arithmetic.

00:00:21.270 --> 00:00:23.970
Let's start with some basic arithmetic,

00:00:23.970 --> 00:00:29.395
such as subtraction, multiplication, addition, and division.

00:00:29.395 --> 00:00:33.410
So inside here, we can simply say it 10,

00:00:33.410 --> 00:00:36.590
take away five, and then returned,

00:00:36.590 --> 00:00:38.620
we get the value of five.

00:00:38.620 --> 00:00:41.430
We can go ahead and do 34.

00:00:41.430 --> 00:00:44.525
A multiplication is the start symbol.

00:00:44.525 --> 00:00:47.210
First of all, multiply by 7,

00:00:47.210 --> 00:00:50.530
and that's a value of 238.

00:00:50.530 --> 00:00:53.900
Addition is the plus symbol which you've seen before.

00:00:53.900 --> 00:00:57.955
So 12 add 6 is 18.

00:00:57.955 --> 00:01:00.290
If we want to divide in JavaScript,

00:01:00.290 --> 00:01:01.670
it's the forward slash.

00:01:01.670 --> 00:01:08.630
Three divided by three gives us a value of one. Let's try another.

00:01:08.630 --> 00:01:12.335
12 divided by 4, which is 3.

00:01:12.335 --> 00:01:14.440
We also have modulus,

00:01:14.440 --> 00:01:16.350
which is a percent symbol.

00:01:16.350 --> 00:01:19.785
Let's do 12 percent and then three.

00:01:19.785 --> 00:01:24.985
Modulus is the remainder which is leftover after dividing.

00:01:24.985 --> 00:01:27.955
Three goes into 12 equally.

00:01:27.955 --> 00:01:30.115
There's nothing left over.

00:01:30.115 --> 00:01:34.485
The same if we do 12 and then four.

00:01:34.485 --> 00:01:38.560
Four goes into 12, 3 times with nothing left over.

00:01:38.560 --> 00:01:40.330
The value is 0.

00:01:40.330 --> 00:01:43.445
However, if we change to be 13,

00:01:43.445 --> 00:01:47.550
and then free, free will go into 13,

00:01:47.550 --> 00:01:49.665
4 times making 12.

00:01:49.665 --> 00:01:51.635
With one leftover.

00:01:51.635 --> 00:01:54.855
This is why we get the value of one just here.

00:01:54.855 --> 00:01:59.210
All of these additions, subtractions, multiplications,

00:01:59.210 --> 00:02:01.850
divisions, and also modulus,

00:02:01.850 --> 00:02:04.954
a role, what we called arithmetic operators.

00:02:04.954 --> 00:02:07.880
The AMA operators two in JavaScript.

00:02:07.880 --> 00:02:11.195
We'll cover these two as we go through this course.

00:02:11.195 --> 00:02:16.070
These operators can also be used for values stored in variables too.

00:02:16.070 --> 00:02:19.550
Let's go over to our starter file into number two,

00:02:19.550 --> 00:02:22.555
which is arithmetic and operators.

00:02:22.555 --> 00:02:24.780
Let's close this down.

00:02:24.780 --> 00:02:27.365
Open up our second index page,

00:02:27.365 --> 00:02:29.600
and also open this up in the browser.

00:02:29.600 --> 00:02:36.840
I'm just going to copy the path from here and then paste this in to the browser.

00:02:36.840 --> 00:02:42.095
First let's look at some arithmetic operators inside of our code editor.

00:02:42.095 --> 00:02:47.335
So just here you can see all the operators which will have inside of a comment.

00:02:47.335 --> 00:02:50.115
Let's assign 0s this from variables.

00:02:50.115 --> 00:02:56.715
Variable, so let's say left school at the age of 16.

00:02:56.715 --> 00:02:59.475
Then we could says our age.

00:02:59.475 --> 00:03:01.980
My age is 34.

00:03:01.980 --> 00:03:07.835
Then we can do some calculations to work out how many years since we left school.

00:03:07.835 --> 00:03:14.190
Let's create a new variable called years since school.

00:03:14.480 --> 00:03:17.565
Then we can set this to our age.

00:03:17.565 --> 00:03:19.845
My age is 34.

00:03:19.845 --> 00:03:23.735
Take away the number of years since we left school,

00:03:23.735 --> 00:03:26.695
which is stored inside of this variable.

00:03:26.695 --> 00:03:32.190
This will translate to 34, takeaway 16.

00:03:32.190 --> 00:03:35.265
Let's check this out with a console log.

00:03:35.265 --> 00:03:38.840
Just like we did before to a console.log and

00:03:38.840 --> 00:03:42.500
then we can pass in our variable of years since school.

00:03:42.500 --> 00:03:45.805
Now the console should do this calculation photos.

00:03:45.805 --> 00:03:49.965
So refresh. We've got a spelling mistake there.

00:03:49.965 --> 00:03:54.225
So console.log refresh.

00:03:54.225 --> 00:03:56.365
So its number 18.

00:03:56.365 --> 00:04:01.670
Another thing which can trip people up is what is called operator precedence.

00:04:01.670 --> 00:04:05.995
This is just a fancy name for the order in which things happen.

00:04:05.995 --> 00:04:12.185
If we create a variable which stores the value of free numbers, just like this.

00:04:12.185 --> 00:04:15.760
Let's scroll down on, we'll add a comment.

00:04:15.760 --> 00:04:19.390
So order of operation.

00:04:19.900 --> 00:04:30.355
Let's draw a number such as 10 plus 10 multiplied by 2.

00:04:30.355 --> 00:04:34.140
Then is to a second console log.

00:04:35.320 --> 00:04:39.800
We can log to the console the value of number.

00:04:39.800 --> 00:04:45.830
Save that, reload and you get the value of 30.

00:04:45.830 --> 00:04:48.845
If we go back and look at our number,

00:04:48.845 --> 00:04:52.740
we may expect the calculation to be run from left to right.

00:04:52.740 --> 00:04:58.295
Ten plus 10 is 20 multiplied by two is 40.

00:04:58.295 --> 00:05:03.095
In fact, what happens is a multiplication happens first.

00:05:03.095 --> 00:05:07.090
Ten multiplied by 2 is 20,

00:05:07.090 --> 00:05:09.440
and then the 10 is added on,

00:05:09.440 --> 00:05:11.465
giving us a value of 30.

00:05:11.465 --> 00:05:16.000
This is the value which you see over in the console just here.

00:05:16.000 --> 00:05:19.835
This is because multiplication and also division

00:05:19.835 --> 00:05:24.400
have a higher precedence than subtraction or addition.

00:05:24.400 --> 00:05:26.130
If we wanted changes.

00:05:26.130 --> 00:05:29.400
So the 10 plus 10 happens first.

00:05:29.400 --> 00:05:34.715
We can wrap these inside of brackets, also called parentheses.

00:05:34.715 --> 00:05:38.130
Just like this. These brackets,

00:05:38.130 --> 00:05:41.225
will make sure that this calculation is performed first.

00:05:41.225 --> 00:05:46.720
This will be 20 multiplied by two given a value of 40.

00:05:46.720 --> 00:05:50.465
Let's check this out in a console by refreshing.

00:05:50.465 --> 00:05:53.495
There's a value of 40.

00:05:53.495 --> 00:05:55.370
It's worth noting too,

00:05:55.370 --> 00:05:58.580
that if all of the operators have equal precedence,

00:05:58.580 --> 00:06:02.435
then the calculation is performed from left to right.

00:06:02.435 --> 00:06:07.325
This will be the case if all operators were addition or subtraction.

00:06:07.325 --> 00:06:09.830
We said earlier these additions,

00:06:09.830 --> 00:06:11.720
multiplications and so on.

00:06:11.720 --> 00:06:13.400
Who called operators?

00:06:13.400 --> 00:06:17.390
There is also two more operators available tools called

00:06:17.390 --> 00:06:21.460
increment and decrement. Let's give this a go.

00:06:21.460 --> 00:06:26.525
If now common salaries console log with the two forward slashes.

00:06:26.525 --> 00:06:28.385
Also this one here.

00:06:28.385 --> 00:06:30.760
To give us a clear console.

00:06:30.760 --> 00:06:33.140
Below this, we want to create a new section,

00:06:33.140 --> 00:06:37.350
and this is for increment and decrement.

00:06:38.810 --> 00:06:43.835
We now know that is number of variable is a value of 40.

00:06:43.835 --> 00:06:47.735
If we're to go ahead and add number plus, plus,

00:06:47.735 --> 00:06:52.915
just like this, this would increment the value by one each time.

00:06:52.915 --> 00:07:01.410
If we save this and go over to the console with a console log of the number.

00:07:02.050 --> 00:07:07.330
This should now increment the value of 40 to be 41.

00:07:07.330 --> 00:07:10.565
If we were to go ahead and increment this again,

00:07:10.565 --> 00:07:12.710
we have number plus, plus.

00:07:12.710 --> 00:07:16.505
This should now give us a value of 42.

00:07:16.505 --> 00:07:19.655
This is something we'll see quite often in JavaScript,

00:07:19.655 --> 00:07:21.775
particularly when using loops.

00:07:21.775 --> 00:07:24.215
Let's now take a look at decrements,

00:07:24.215 --> 00:07:25.625
which as you may have guessed,

00:07:25.625 --> 00:07:28.460
will reduce the value by one each time.

00:07:28.460 --> 00:07:31.025
I'm going to do this with the negative symbols,

00:07:31.025 --> 00:07:34.175
just like that and reload.

00:07:34.175 --> 00:07:37.760
Now our initial value of 40 is now reduced to

00:07:37.760 --> 00:07:42.140
39.This is a common thing to do for increased in a place called,

00:07:42.140 --> 00:07:46.880
for example, or increase in the number of items in the shopping basket.

00:07:46.880 --> 00:07:51.720
This is something really useful to know when using JavaScript.
