WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.960
Welcome back. This video is where JavaScript begins

00:00:03.960 --> 00:00:07.770
to get really interesting by manipulating the DOM.

00:00:07.770 --> 00:00:11.520
The DOM stands for the Document Object Model and

00:00:11.520 --> 00:00:15.345
is a tree-like representation of our web documents.

00:00:15.345 --> 00:00:18.610
It is an interface to allow programming languages

00:00:18.610 --> 00:00:21.800
to access and update the content and structure.

00:00:21.800 --> 00:00:25.685
Here we see the same structure as our web pages.

00:00:25.685 --> 00:00:28.130
From the top, we have the document.

00:00:28.130 --> 00:00:31.565
Inside there is a root HTML element.

00:00:31.565 --> 00:00:35.210
Under this we have the familiar head and body.

00:00:35.210 --> 00:00:37.504
Then followed by our elements,

00:00:37.504 --> 00:00:40.205
texts and attributes, for example.

00:00:40.205 --> 00:00:44.134
The great thing about it is that it can connect two languages,

00:00:44.134 --> 00:00:47.170
such as JavaScript, so we can change things.

00:00:47.170 --> 00:00:49.880
This opens up many possibilities,

00:00:49.880 --> 00:00:52.415
such as the ability to access elements,

00:00:52.415 --> 00:00:53.945
to change the content,

00:00:53.945 --> 00:00:55.955
add attributes and styles,

00:00:55.955 --> 00:00:59.125
or even create and delete elements too.

00:00:59.125 --> 00:01:01.040
It may sound complex,

00:01:01.040 --> 00:01:03.940
but it is pretty easy to get started with.

00:01:03.940 --> 00:01:07.190
One of the easiest ways of manipulating the DOM

00:01:07.190 --> 00:01:10.865
is to grab an element on our page and change it.

00:01:10.865 --> 00:01:15.575
For example selecting the p elements and then changing the text.

00:01:15.575 --> 00:01:21.870
Let's head over to our JavaScript starter and open up the DOM manipulation section.

00:01:22.120 --> 00:01:27.515
Let's head over to our JavaScript starter files and go to our number 10,

00:01:27.515 --> 00:01:29.875
which is DOM manipulation.

00:01:29.875 --> 00:01:35.030
Inside here we first need some HTML to go ahead and change.

00:01:35.030 --> 00:01:38.270
Inside the body let's open and close

00:01:38.270 --> 00:01:42.925
the p elements and then add some text inside of hello.

00:01:42.925 --> 00:01:47.720
Then we'll open up the span elements and then add the text of user.

00:01:47.720 --> 00:01:51.610
This will display on the screen the text of hello user.

00:01:51.610 --> 00:01:55.580
We then need to add an ID to this span element,

00:01:55.580 --> 00:01:57.995
so we can grab it using JavaScript.

00:01:57.995 --> 00:02:02.100
Let's call this ID the username.

00:02:04.070 --> 00:02:07.730
Now if we scroll down to our script section,

00:02:07.730 --> 00:02:09.815
which is just below here,

00:02:09.815 --> 00:02:11.750
we can start with what is called,

00:02:11.750 --> 00:02:14.725
get element by ID.

00:02:14.725 --> 00:02:17.550
This is pre self-descriptive,

00:02:17.550 --> 00:02:21.870
this grabs an element by the ID, such as username.

00:02:21.870 --> 00:02:25.005
First we grab the document.

00:02:25.005 --> 00:02:27.710
This is the document object,

00:02:27.710 --> 00:02:30.140
which is basically our web page.

00:02:30.140 --> 00:02:34.085
Remember, the DOM stands for Document Object Model.

00:02:34.085 --> 00:02:37.625
Our tree-like structure is a model of our web page.

00:02:37.625 --> 00:02:39.555
Then after selecting this documents,

00:02:39.555 --> 00:02:41.580
we can then narrow this down.

00:02:41.580 --> 00:02:45.595
In this case, we're going to select an ID on the document,

00:02:45.595 --> 00:02:48.530
we'll get elements by ID.

00:02:48.530 --> 00:02:54.150
Inside the brackets we can then add the name of the ID which we would select.

00:02:54.150 --> 00:02:57.190
In our case it is username.

00:02:57.190 --> 00:02:59.825
Add a semicolon at the end.

00:02:59.825 --> 00:03:03.455
Notice when typing get elements by ID,

00:03:03.455 --> 00:03:07.540
we have an uppercase letter for every word after get.

00:03:07.540 --> 00:03:11.360
This is referred to as camel casing and it makes it more

00:03:11.360 --> 00:03:15.275
readable because we can better see the start of each word.

00:03:15.275 --> 00:03:17.765
If we save that and go over to the browser,

00:03:17.765 --> 00:03:20.395
we see that nothing will change.

00:03:20.395 --> 00:03:24.125
This is because we've selected the element we want,

00:03:24.125 --> 00:03:26.875
but we've not yet done anything with it.

00:03:26.875 --> 00:03:31.805
We can change the contents by setting the inner HTML.

00:03:31.805 --> 00:03:38.050
Just before the semicolon, we add a.innerHTML.

00:03:38.050 --> 00:03:42.410
Now we can set this to be a value such as a string.

00:03:42.410 --> 00:03:45.705
Let's say Chris, hold to the browser,

00:03:45.705 --> 00:03:49.470
reload and now we see the text of, hello Chris.

00:03:49.470 --> 00:03:53.705
As well as using a text string for our innerHTML,

00:03:53.705 --> 00:03:56.365
we can also use a variable too.

00:03:56.365 --> 00:03:59.820
Select set a variable for our name.

00:03:59.820 --> 00:04:05.550
Var name equals a string of Chris.

00:04:05.550 --> 00:04:08.405
Then rather than our string just here,

00:04:08.405 --> 00:04:11.520
we can pass in our variable name

00:04:12.010 --> 00:04:16.490
of the browser and reload and we still see that our text of,

00:04:16.490 --> 00:04:18.830
hello Chris, is now on the screen,

00:04:18.830 --> 00:04:21.185
but this time using a variable.

00:04:21.185 --> 00:04:26.965
We can also change the style too by changing any of the CSS values.

00:04:26.965 --> 00:04:34.790
Just below this, we can access the same elements, with document.getElementByID.

00:04:34.790 --> 00:04:38.285
Again, we want to select the username,

00:04:38.285 --> 00:04:44.045
the capital N for name and then instead of selecting the inner HTML,

00:04:44.045 --> 00:04:47.570
this time we can set the style and let's say

00:04:47.570 --> 00:04:52.555
the dark color to be equal to a value of red.

00:04:52.555 --> 00:04:58.650
This will change the text color of our text inside of the span.

00:04:58.720 --> 00:05:05.545
Save, refresh and there's our red color for the word Chris.

00:05:05.545 --> 00:05:10.115
We can use any CSS property we want inside it here.

00:05:10.115 --> 00:05:13.040
The only difference is we need to camel case

00:05:13.040 --> 00:05:16.580
any CSS properties which have multiple words,

00:05:16.580 --> 00:05:19.960
such as background color and font size.

00:05:19.960 --> 00:05:24.215
Over in CSS, we would normally do something like this.

00:05:24.215 --> 00:05:30.815
Would say font size using a hyphen or a dash but instead,

00:05:30.815 --> 00:05:34.655
when using JavaScript, we need to refer to this camel casing,

00:05:34.655 --> 00:05:36.375
which we see just here.

00:05:36.375 --> 00:05:41.510
Rather than a dash, we use a capital letter, such as this.

00:05:41.510 --> 00:05:46.830
Then let's set the text to be a value of 24 pixels.

00:05:47.060 --> 00:05:50.505
Let's see this in the browser and there we go.

00:05:50.505 --> 00:05:53.500
Now our text of Chris is a larger font.

00:05:53.500 --> 00:05:56.735
We can also use a class in place of this ID.

00:05:56.735 --> 00:06:03.625
Let's go up to our p element and then add a class of, hello.

00:06:03.625 --> 00:06:09.045
Then we can use document.getElementByClassName.

00:06:09.045 --> 00:06:14.380
Let's add a new section of getElementByClassName.

00:06:16.940 --> 00:06:19.940
This works in a similar way to above.

00:06:19.940 --> 00:06:25.620
First we select the document and then narrow it down by using the class name.

00:06:25.620 --> 00:06:28.980
Get elements by class name.

00:06:28.980 --> 00:06:31.325
Pass in the name of our class,

00:06:31.325 --> 00:06:35.935
which was hello, which matches this section just here.

00:06:35.935 --> 00:06:38.670
Then a semicolon at the end.

00:06:38.670 --> 00:06:41.345
Notice here when using the class name,

00:06:41.345 --> 00:06:44.005
we add an s onto the end of elements.

00:06:44.005 --> 00:06:48.335
This is because we may have multiple classes on our page.

00:06:48.335 --> 00:06:52.510
For example, we could have a second set of p elements.

00:06:52.510 --> 00:06:55.940
If we go ahead and add a second set just here,

00:06:55.940 --> 00:06:59.390
and then add the same class of hello.

00:06:59.390 --> 00:07:03.370
Now we'll add some text of welcome back.

00:07:03.370 --> 00:07:07.255
Now if we had more than one class selected,

00:07:07.255 --> 00:07:08.890
like we do just here,

00:07:08.890 --> 00:07:11.645
how do I know which one we're changing?

00:07:11.645 --> 00:07:16.690
Well, let's assign this to a variable and then display it to the console.

00:07:16.690 --> 00:07:22.215
Let's say variable of test equals our first class.

00:07:22.215 --> 00:07:29.965
Then into a console log inside the browser with the value of test.

00:07:29.965 --> 00:07:34.835
Over to the browser, right-click and inspect.

00:07:34.835 --> 00:07:41.920
Inside of the console we see a HTML collection with two items inside the brackets.

00:07:41.920 --> 00:07:45.710
This is like an array which we'll cover soon.

00:07:45.710 --> 00:07:50.560
These two items, our two elements with the class of hello.

00:07:50.560 --> 00:07:52.570
If you click on this arrow here,

00:07:52.570 --> 00:07:56.915
we can also open this up and find out more about the contents.

00:07:56.915 --> 00:08:03.040
We see the first p elements with the class of hello has a index position of zero.

00:08:03.040 --> 00:08:07.270
Then our second one has an index position of one.

00:08:07.270 --> 00:08:11.885
We can access these two elements by these index position.

00:08:11.885 --> 00:08:14.635
Inside the console, if we say test,

00:08:14.635 --> 00:08:18.640
which is the name of our variable and then inside the square brackets,

00:08:18.640 --> 00:08:22.670
we can access each of these elements by the index number.

00:08:22.670 --> 00:08:25.750
Beginning with zero, hit Enter,

00:08:25.750 --> 00:08:28.234
and there's our first p elements,

00:08:28.234 --> 00:08:31.345
which contains our texts of hello Chris.

00:08:31.345 --> 00:08:36.980
Then we can access our second value with test1, hit Enter.

00:08:36.980 --> 00:08:40.400
This is our second element with the text of welcome back.

00:08:40.400 --> 00:08:45.265
This position number can also be used inside of our selector.

00:08:45.265 --> 00:08:47.620
Over in our code,

00:08:47.620 --> 00:08:51.410
we're going to grab all the elements with the class name of hello.

00:08:51.410 --> 00:08:53.405
Then inside the square brackets,

00:08:53.405 --> 00:08:55.765
we can narrow this down to our first one,

00:08:55.765 --> 00:08:57.885
which is position zero.

00:08:57.885 --> 00:09:00.815
We can do anything which we've previously seen.

00:09:00.815 --> 00:09:07.920
Chart set in the style.color to be a value of purple.

00:09:08.510 --> 00:09:11.325
Save and then reload.

00:09:11.325 --> 00:09:14.130
So first element is now purple.

00:09:14.130 --> 00:09:16.815
And of course we can change this to be one,

00:09:16.815 --> 00:09:21.015
and this will now make the welcome buck text purple instead.

00:09:21.015 --> 00:09:24.930
Next we have getElementsByTagName.

00:09:24.930 --> 00:09:26.775
As the name suggests,

00:09:26.775 --> 00:09:30.240
we can select all the elements on a page by the tag,

00:09:30.240 --> 00:09:35.925
such as our p element for text or IMG for the image tag.

00:09:35.925 --> 00:09:38.655
Down at the very bottom,

00:09:38.655 --> 00:09:45.045
let's add a comment of getElementsByTagName.

00:09:45.045 --> 00:09:50.640
Again, this has a S2 because you can select more than one element.

00:09:50.640 --> 00:09:57.075
After here we use the document.getElementsByTagName,

00:09:57.075 --> 00:09:59.370
which is just here,

00:09:59.370 --> 00:10:05.055
the brackets and then inside the quotations we can add the elements we want to select,

00:10:05.055 --> 00:10:08.460
let's crop all p elements, and once more,

00:10:08.460 --> 00:10:11.340
because we have more than one set of p elements,

00:10:11.340 --> 00:10:14.070
we need to grab these by the index number.

00:10:14.070 --> 00:10:16.890
The first one is position zero,

00:10:16.890 --> 00:10:23.865
we can set the inner HTML and let's set this string value of changed.

00:10:23.865 --> 00:10:27.105
If we save that and then reload,

00:10:27.105 --> 00:10:31.035
we've now changed our p elements at index position zero.

00:10:31.035 --> 00:10:35.265
The next tool we're going to look at based on the querySelector.

00:10:35.265 --> 00:10:38.760
This is just like the selector we use in CSS.

00:10:38.760 --> 00:10:41.790
Let's see this with an empty image,

00:10:41.790 --> 00:10:46.710
so up to the HTML after our two p elements,

00:10:46.710 --> 00:10:49.275
let's add the IMG elements.

00:10:49.275 --> 00:10:52.860
If we give that save, that was the browser,

00:10:52.860 --> 00:10:55.725
you see we don't see any image on the screen

00:10:55.725 --> 00:10:59.280
because we have not yet set a source attributes.

00:10:59.280 --> 00:11:03.105
Let's add the source attributes using JavaScript.

00:11:03.105 --> 00:11:07.305
First, we can grab this image using querySelector,

00:11:07.305 --> 00:11:11.710
so a comment of querySelector.

00:11:12.860 --> 00:11:23.505
Then we use document.querySelector and then pass in the name of IMG.

00:11:23.505 --> 00:11:27.750
This is the same way as we would select our image in CSS.

00:11:27.750 --> 00:11:31.200
We can also select it with the ID and class name to,

00:11:31.200 --> 00:11:33.705
and we'll take a look at that in just a moment.

00:11:33.705 --> 00:11:41.295
Using querySelector, we still have access to the inner HTML and also adding styles too.

00:11:41.295 --> 00:11:42.750
But for this example,

00:11:42.750 --> 00:11:44.760
I'm going to show you something new,

00:11:44.760 --> 00:11:47.800
and this is how to add an attribute.

00:11:47.800 --> 00:11:49.880
The attribute we're going to add is

00:11:49.880 --> 00:11:55.525
the image source and we do this by using.setAttribute,

00:11:55.525 --> 00:11:59.940
inside the brackets, we go ahead and add two values.

00:11:59.940 --> 00:12:04.500
First is the name of the attribute we want to add, which is source,

00:12:04.500 --> 00:12:06.945
and then separated by a comma,

00:12:06.945 --> 00:12:10.725
and then the name of image dot.JPEG,

00:12:10.725 --> 00:12:13.425
you can use any image of your choice.

00:12:13.425 --> 00:12:18.165
But I've added an image into the starter file, which is just here.

00:12:18.165 --> 00:12:21.360
I'll close this down, give that save,

00:12:21.360 --> 00:12:23.340
and then reload the browser.

00:12:23.340 --> 00:12:26.640
There's an image which is now on the screen.

00:12:26.640 --> 00:12:33.345
If we open up the developer tools with right-click and inspect and then go to elements.

00:12:33.345 --> 00:12:36.855
We can see inside of the developer tools,

00:12:36.855 --> 00:12:38.700
we have our body section,

00:12:38.700 --> 00:12:41.865
we have our p with the text of changed,

00:12:41.865 --> 00:12:43.575
our second p element,

00:12:43.575 --> 00:12:49.950
we welcome back, and also our image with the source of image.JPEG.

00:12:49.950 --> 00:12:55.125
The end result is exactly the same as if we would type this in HTML,

00:12:55.125 --> 00:12:57.615
but we've added this by using JavaScript.

00:12:57.615 --> 00:13:00.735
We mentioned that when using queryselector,

00:13:00.735 --> 00:13:05.910
we can select any element in the same way as we normally would in CSS.

00:13:05.910 --> 00:13:08.985
As well as the tag name such as image,

00:13:08.985 --> 00:13:12.630
we can also select this image with a class or ID.

00:13:12.630 --> 00:13:19.575
If we add an ID to this image of image and then scroll down,

00:13:19.575 --> 00:13:21.360
just like when using CSS,

00:13:21.360 --> 00:13:26.800
we need to use the hash as the selector and then the ID name,

00:13:26.800 --> 00:13:29.060
now save and then reload.

00:13:29.060 --> 00:13:30.860
We can see this still works,

00:13:30.860 --> 00:13:33.515
but this time using the ID.

00:13:33.515 --> 00:13:35.540
The same for the class,

00:13:35.540 --> 00:13:38.240
it will change the image tab,

00:13:38.240 --> 00:13:41.140
a class of image.

00:13:41.140 --> 00:13:44.850
This time just like when selecting this in CSS,

00:13:44.850 --> 00:13:47.655
we need to use a dot as a prefix,

00:13:47.655 --> 00:13:51.030
and this should still work inside the browser.

00:13:51.030 --> 00:13:55.725
Finally, something similar to this is querySelectorAll;

00:13:55.725 --> 00:13:58.590
querySelector which we've just looked at,

00:13:58.590 --> 00:14:02.640
only selects the first matching elements on the page,

00:14:02.640 --> 00:14:08.505
querySelectorAll on the other hand will return a list of all the matching elements.

00:14:08.505 --> 00:14:13.455
We can see this by adding a second image into our HTML.

00:14:13.455 --> 00:14:20.145
Copy this section here and paste it in below using the same class name.

00:14:20.145 --> 00:14:22.500
If we save that and then refresh,

00:14:22.500 --> 00:14:26.700
we still see this only one image on the screen this is because

00:14:26.700 --> 00:14:31.065
querySelector will only select the first elements on the page.

00:14:31.065 --> 00:14:36.660
However, if we go ahead and add querySelectorAll which looks like

00:14:36.660 --> 00:14:44.050
this and then do document.querySelectorAll,

00:14:44.540 --> 00:14:49.080
this will go ahead and return a list of both of our images.

00:14:49.080 --> 00:14:52.185
First let's tag the class of image,

00:14:52.185 --> 00:14:55.889
and then after this we add the square brackets,

00:14:55.889 --> 00:14:58.485
then we can pass in our index number.

00:14:58.485 --> 00:15:04.410
Just like before, the index number of zero is the first image on our page.

00:15:04.410 --> 00:15:08.340
If I could just comment out this querySelector.

00:15:08.340 --> 00:15:10.770
Now we've selected our first image,

00:15:10.770 --> 00:15:14.955
we can then use setAttributes like we just looked at,

00:15:14.955 --> 00:15:18.465
then pass now first value which is the source,

00:15:18.465 --> 00:15:25.665
and the second one which is image.JPEG so this will select the first value,

00:15:25.665 --> 00:15:27.975
even as with one image on the screen.

00:15:27.975 --> 00:15:31.305
However, if we want to add the image in twice,

00:15:31.305 --> 00:15:34.095
we could copy this line of code here,

00:15:34.095 --> 00:15:36.495
and then paste it in one more time.

00:15:36.495 --> 00:15:43.860
But this time, select the index value of one and now we have two images on the screen.

00:15:43.860 --> 00:15:48.240
Selecting two elements like this would be better done with the loop,

00:15:48.240 --> 00:15:51.225
but we'll get into loops soon in this course.

00:15:51.225 --> 00:15:56.115
Understanding how to manipulate the DOM is something really important to know,

00:15:56.115 --> 00:16:00.135
and this is where JavaScript really begins to get interesting.

00:16:00.135 --> 00:16:02.955
Now we know how to select elements,

00:16:02.955 --> 00:16:04.830
it's now time to move on.

00:16:04.830 --> 00:16:10.689
Next we'll be learning all about how to add and remove elements using JavaScript.
