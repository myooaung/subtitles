WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.945
Now we have two random shapes appearing on the screen.

00:00:03.945 --> 00:00:07.535
We need a way to compare these two shaped objects.

00:00:07.535 --> 00:00:09.320
When the player clicks on the,

00:00:09.320 --> 00:00:11.680
Match button, which is just here.

00:00:11.680 --> 00:00:14.895
To begin, we have a variable at the top,

00:00:14.895 --> 00:00:16.605
which is called playing,

00:00:16.605 --> 00:00:19.140
which we set early on in this section,

00:00:19.140 --> 00:00:21.525
which is also set to false.

00:00:21.525 --> 00:00:24.330
Inside of All-Star game function,

00:00:24.330 --> 00:00:29.010
we can change this variable to be true once the game has started.

00:00:29.010 --> 00:00:32.775
Let's scroll down to our stock aim section,

00:00:32.775 --> 00:00:34.755
which is just here.

00:00:34.755 --> 00:00:37.695
Then once the user has clicked on the, Play button,

00:00:37.695 --> 00:00:42.400
we can then go ahead and set playing to be equal to true.

00:00:42.740 --> 00:00:48.970
Outside of this function, I'm going to create a new comment, which is compare.

00:00:48.970 --> 00:00:52.685
Now we can add an event handler to the match button,

00:00:52.685 --> 00:00:55.100
to trigger a function when clicked.

00:00:55.100 --> 00:01:01.890
Let's go over your index page and take a look for our match button, which is just here.

00:01:01.890 --> 00:01:04.075
This has an ID of match,

00:01:04.075 --> 00:01:07.055
so we can grab this inside of our scripts,

00:01:07.055 --> 00:01:14.910
so document.getElementById, the Id of match.

00:01:15.370 --> 00:01:20.490
Then we can use a onclick event handler,

00:01:20.680 --> 00:01:24.655
trigger a ES6 arrow function.

00:01:24.655 --> 00:01:31.860
Then inside this function we can add an if statement to check if playing a set to true.

00:01:31.930 --> 00:01:37.980
Let's say, if the variable of playing,

00:01:37.980 --> 00:01:39.860
so we can just say if playing,

00:01:39.860 --> 00:01:41.255
and when this is true,

00:01:41.255 --> 00:01:44.005
this will then run the code inside the if statement.

00:01:44.005 --> 00:01:46.910
This basically means the code inside this if

00:01:46.910 --> 00:01:50.735
statement will only run if the player is clicked, Start.

00:01:50.735 --> 00:01:54.025
Certainly play any variable to be true.

00:01:54.025 --> 00:01:58.040
Nested inside we can perform another if statements.

00:01:58.040 --> 00:02:00.755
This will be used to increase the player's score,

00:02:00.755 --> 00:02:03.215
if the objects are match.

00:02:03.215 --> 00:02:08.090
Lets nest a second if statement, just like this.

00:02:08.090 --> 00:02:13.385
But how do we first compare the objects to check if they're same?

00:02:13.385 --> 00:02:17.660
For this, we have something called objects.is.

00:02:17.660 --> 00:02:19.490
This will allow us to pass in and out,

00:02:19.490 --> 00:02:22.490
to shape variables to compare.

00:02:22.490 --> 00:02:29.450
Objects.is another new JavaScript feature from ES6 or ES 2015,

00:02:29.450 --> 00:02:32.660
just like the arrow functions and constant lets,

00:02:32.660 --> 00:02:34.505
which we looked at before.

00:02:34.505 --> 00:02:38.255
Inside the brackets here you can say objects,

00:02:38.255 --> 00:02:44.584
so object.is, and then open up the parentheses just afterwards.

00:02:44.584 --> 00:02:48.260
Inside here, we can pass in our values we want compare,

00:02:48.260 --> 00:02:55.705
which you have stored in the variables of shape 1 and also shaped 2.

00:02:55.705 --> 00:02:59.495
If these two objects inside here,

00:02:59.495 --> 00:03:03.335
are match, then we can increase the player's score.

00:03:03.335 --> 00:03:06.125
We have the player's score up at the top,

00:03:06.125 --> 00:03:11.200
could be set to zero and stored inside this current score variable.

00:03:11.200 --> 00:03:12.855
Let's increase this.

00:03:12.855 --> 00:03:14.475
If the object is a match,

00:03:14.475 --> 00:03:17.805
we've have put the score, plus, plus.

00:03:17.805 --> 00:03:21.155
Over in the index.html,

00:03:21.155 --> 00:03:26.745
we also have a span element with the Id of score, which is just here.

00:03:26.745 --> 00:03:31.610
This will allow us to crop these elements and then increase it with a player's score.

00:03:31.610 --> 00:03:33.910
We can see this value on the screen.

00:03:33.910 --> 00:03:37.655
Let's do this now back over to our if statements.

00:03:37.655 --> 00:03:39.290
If these two objects,

00:03:39.290 --> 00:03:47.450
are match we'll increase the score by one and then select the document.getElementById,

00:03:47.450 --> 00:03:49.895
then grab at the span container,

00:03:49.895 --> 00:03:53.130
which had the ID of score.

00:03:53.140 --> 00:03:59.520
Set the innerHTML to be equal to a value of current score.

00:04:01.940 --> 00:04:04.995
Good just blow this.

00:04:04.995 --> 00:04:08.305
After our if section which you just here,

00:04:08.305 --> 00:04:11.105
we're going to add our l statements.

00:04:11.105 --> 00:04:15.255
This l statements will run if the objects not match.

00:04:15.255 --> 00:04:19.810
This'll be used do the opposite and then take a point off the score.

00:04:19.810 --> 00:04:24.395
Let's say else, current score,

00:04:24.395 --> 00:04:27.330
and we'll decrease this by one.

00:04:27.330 --> 00:04:30.090
Then also do the same line here,

00:04:30.090 --> 00:04:37.920
so document.getElementById, the Id we want to grab, again is score.

00:04:37.920 --> 00:04:44.030
Then obtain the inner HTML to be equal to the current score.

00:04:45.110 --> 00:04:48.570
Then refresh, and let's give this a go,

00:04:48.570 --> 00:04:50.295
click on the Play button.

00:04:50.295 --> 00:04:52.695
Now, we need to click this Match button,

00:04:52.695 --> 00:04:55.365
when these two shapes are the same.

00:04:55.365 --> 00:04:58.690
Let's wave these to be the same.

00:05:00.170 --> 00:05:06.930
That goes to the value of 1, 2, 3.

00:05:06.930 --> 00:05:08.820
This also is working fine.

00:05:08.820 --> 00:05:11.460
If we click on this when the shapes are not match,

00:05:11.460 --> 00:05:14.710
we see will lose a point each time.

00:05:16.450 --> 00:05:19.390
Great, all seems to work in fine.

00:05:19.390 --> 00:05:21.580
But before we call this complete,

00:05:21.580 --> 00:05:24.870
there is a few small issues we need to address.

00:05:24.870 --> 00:05:27.314
First, after the game is started,

00:05:27.314 --> 00:05:29.560
if we keep on clicking the play button,

00:05:29.560 --> 00:05:31.970
so let's start the game off.

00:05:31.970 --> 00:05:35.300
Then if we click this multiple times,

00:05:35.300 --> 00:05:38.975
this will call the stocking function model months,

00:05:38.975 --> 00:05:42.055
generating lots of random shapes.

00:05:42.055 --> 00:05:44.210
Also, when playing the game,

00:05:44.210 --> 00:05:50.270
we want to restrict the user to only press this match button once per set interval.

00:05:50.270 --> 00:05:53.660
Currently if the user clicks on it multiple times,

00:05:53.660 --> 00:05:56.915
the score will keep going backwards or forwards.

00:05:56.915 --> 00:06:00.980
We want to restrict this to only one click per selection.

00:06:00.980 --> 00:06:04.280
Let's begin by disabling the stop button,

00:06:04.280 --> 00:06:06.500
when the game is already running.

00:06:06.500 --> 00:06:09.755
We can do this in side of the play function.

00:06:09.755 --> 00:06:11.870
On to our scripts,

00:06:11.870 --> 00:06:15.085
and let's go to the Star Game section here,

00:06:15.085 --> 00:06:16.865
which is the click handler.

00:06:16.865 --> 00:06:19.240
First, we need to grab our play button,

00:06:19.240 --> 00:06:23.630
which has an id of play, which we can see here.

00:06:23.630 --> 00:06:26.654
Then back to our Star game function,

00:06:26.654 --> 00:06:29.280
just under the playing equal true.

00:06:29.280 --> 00:06:36.770
Let's add a command to say disable the play button, when playing.

00:06:36.930 --> 00:06:43.980
document.getElementsById, select our Play button,

00:06:43.980 --> 00:06:49.845
and then we can set.disabled to be equal to true.

00:06:49.845 --> 00:06:52.620
Let's test this out,

00:06:52.620 --> 00:06:55.160
and then click Play.

00:06:55.160 --> 00:06:58.585
We see as soon as you click on play that it turns gray,

00:06:58.585 --> 00:07:01.120
and we can,t click on this button anymore.

00:07:01.120 --> 00:07:05.020
If we refresh, now our play button is back to normal,

00:07:05.020 --> 00:07:07.675
and we can restart a new game.

00:07:07.675 --> 00:07:13.805
Then we can now move on to stopping the player clicking this match button multiple times.

00:07:13.805 --> 00:07:17.550
First, let's store this match button inside of a variable.

00:07:17.550 --> 00:07:19.785
We put it up to the top of our code.

00:07:19.785 --> 00:07:24.270
Let's set up a constant called match button,

00:07:24.270 --> 00:07:28.515
and our familiar document.getElementById.

00:07:28.515 --> 00:07:32.430
The button you want to select has the Id of much,

00:07:32.430 --> 00:07:35.220
we add a semicolon at the end.

00:07:35.220 --> 00:07:37.850
I'll start this reference inside of a

00:07:37.850 --> 00:07:41.785
constant because we're going to be selecting this a multiple times.

00:07:41.785 --> 00:07:45.515
We're first going to disable the button once it's been clicked,

00:07:45.515 --> 00:07:51.400
and then reactivate the button once new set interval is being generated.

00:07:51.400 --> 00:07:53.315
Down to the bottom,

00:07:53.315 --> 00:07:57.605
we can set this button to be disabled after it's has been clicked.

00:07:57.605 --> 00:08:00.814
Down inside the compare section,

00:08:00.814 --> 00:08:04.285
and we'll do this in side of the playing section.

00:08:04.285 --> 00:08:12.760
Let's say matchbtn.disabled is going to be equal to true.

00:08:13.340 --> 00:08:17.180
This will disable the button after it has been clicked.

00:08:17.180 --> 00:08:19.655
Inside of this onclick function,

00:08:19.655 --> 00:08:23.740
this button there needs to be reactivated for each cycle.

00:08:23.740 --> 00:08:28.009
So can we re-enable it each time a new shape is generated.

00:08:28.009 --> 00:08:31.690
Up to the set interval section.

00:08:31.690 --> 00:08:34.910
Just after here, right at the very top,

00:08:34.910 --> 00:08:39.260
we can also select matchbtn.disabled,

00:08:39.260 --> 00:08:42.575
but this time to be false.

00:08:42.575 --> 00:08:44.585
Let's test this out,

00:08:44.585 --> 00:08:48.225
refresh the browser, click on, Play.

00:08:48.225 --> 00:08:49.775
Now our game starts,

00:08:49.775 --> 00:08:53.254
and if we try and click on the match button multiple times,

00:08:53.254 --> 00:08:56.620
it only works when a new shape is being generated,

00:08:56.620 --> 00:09:00.415
so we can only click on it once per selection.

00:09:00.415 --> 00:09:02.505
Great, this is our game.

00:09:02.505 --> 00:09:03.885
Now complete.

00:09:03.885 --> 00:09:08.210
Feel free to go ahead and do any customizations, make any changes,

00:09:08.210 --> 00:09:14.890
or play around with the speed of the shapes using our set interval value just here,

00:09:14.890 --> 00:09:19.625
or generally experiment with any new features which you like.

00:09:19.625 --> 00:09:23.910
I hope you've enjoyed building this game and bye for now.
