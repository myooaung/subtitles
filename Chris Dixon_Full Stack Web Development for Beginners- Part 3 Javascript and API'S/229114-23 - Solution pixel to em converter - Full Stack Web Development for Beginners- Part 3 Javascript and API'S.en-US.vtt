WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.870
Welcome back. I hope you managed to get your calculator to work,

00:00:03.870 --> 00:00:05.910
or at least give it a good go.

00:00:05.910 --> 00:00:09.690
I'm now going to go ahead and show you how I did my version.

00:00:09.690 --> 00:00:12.585
It maybe a different approach to how you did yours,

00:00:12.585 --> 00:00:14.940
but as long as it's working, it's fine.

00:00:14.940 --> 00:00:17.655
There is usually more than one way to do things.

00:00:17.655 --> 00:00:20.009
All the CSS and HTML,

00:00:20.009 --> 00:00:21.405
as you can see here,

00:00:21.405 --> 00:00:24.780
has been taken care of for us in the starter files.

00:00:24.780 --> 00:00:30.795
All we need to do is go over to the script.js and start to work inside of here.

00:00:30.795 --> 00:00:35.385
Let's go ahead and create a function to perform this calculation.

00:00:35.385 --> 00:00:37.965
I'm going to call mine calculate,

00:00:37.965 --> 00:00:41.140
and set this to ar function.

00:00:41.600 --> 00:00:48.735
Inside of here I'm going to begin by grabbing the values of the parents and required.

00:00:48.735 --> 00:00:52.140
That's this box here and this one here,

00:00:52.140 --> 00:00:55.035
and then store then them in side of variables.

00:00:55.035 --> 00:00:58.710
The variable of parent value.

00:00:58.710 --> 00:01:06.615
Distribute documents.getElementsById and the Id we want to grab.

00:01:06.615 --> 00:01:09.045
If we take a look at the index page,

00:01:09.045 --> 00:01:13.155
there's this parent input here with the Id if parents.

00:01:13.155 --> 00:01:19.050
Then the second input has han Id of required and we'll use this in just a moment.

00:01:19.050 --> 00:01:22.870
Let's add parents inside here.

00:01:22.880 --> 00:01:26.970
We can then grab the value with dots value,

00:01:26.970 --> 00:01:30.960
and then we could do the same for the required value.

00:01:30.960 --> 00:01:37.830
Required var is equal to documents.getElementByID.

00:01:37.830 --> 00:01:42.270
Remember the Id we looked at before was required,

00:01:42.270 --> 00:01:46.840
and then again we can grab the value with dot value.

00:01:46.910 --> 00:01:51.210
Now we're grabbing the two values of the two input fields.

00:01:51.210 --> 00:01:54.930
The third variable I want to create is for the output,

00:01:54.930 --> 00:01:58.530
and this is the result which you see here.

00:01:58.530 --> 00:02:01.380
This is the p element which is going to obtain

00:02:01.380 --> 00:02:04.995
the results each time we perform the calculation.

00:02:04.995 --> 00:02:10.020
Let's crop this with the Id of results and then store it inside a variable.

00:02:10.020 --> 00:02:16.605
Var results equals document.getsElementById,

00:02:16.605 --> 00:02:19.635
and the elements will have results,

00:02:19.635 --> 00:02:22.485
and we can just store this for now.

00:02:22.485 --> 00:02:25.770
Now we want to perform this calculation.

00:02:25.770 --> 00:02:28.740
Each time the user clicks on this convert button,

00:02:28.740 --> 00:02:31.755
if we go back to the index of html,

00:02:31.755 --> 00:02:34.260
this button is just here.

00:02:34.260 --> 00:02:36.225
We can grab this button with

00:02:36.225 --> 00:02:40.860
a query selector and then add an event listener for each click,

00:02:40.860 --> 00:02:44.700
to then go ahead and perform this calculation.

00:02:44.700 --> 00:02:49.200
The button will be installed inside a variable called

00:02:49.200 --> 00:02:54.850
btn, and then document.querySelector.

00:02:55.910 --> 00:03:05.790
Grab our button and then press btn and we can go ahead and add the EventListener.

00:03:05.790 --> 00:03:08.625
Inside the brackets, we can add two values.

00:03:08.625 --> 00:03:13.695
The first one is click and this is the type of event you want to listen out for.

00:03:13.695 --> 00:03:15.615
Once the button is being clicked,

00:03:15.615 --> 00:03:19.095
we then want to go ahead and run this function here.

00:03:19.095 --> 00:03:23.640
Let's add this in as our second value to check this is working okay,

00:03:23.640 --> 00:03:27.970
we can then do a console log inside the function,

00:03:28.640 --> 00:03:35.685
and then we can log our two values of the parent value and the required value.

00:03:35.685 --> 00:03:37.740
Status. Check these row, okay,

00:03:37.740 --> 00:03:41.130
so parentValue and then empty space,

00:03:41.130 --> 00:03:44.290
and then the required value.

00:03:44.810 --> 00:03:48.615
Save that onto the browser,

00:03:48.615 --> 00:03:51.460
and then open up the console.

00:03:56.210 --> 00:03:58.860
We'll just click on Convert first,

00:03:58.860 --> 00:04:00.660
and we shouldn't see anything inside

00:04:00.660 --> 00:04:05.205
the console because we're outputting the values of these two inputs.

00:04:05.205 --> 00:04:07.770
Let's add some fit inside here,

00:04:07.770 --> 00:04:12.360
20 and 16 converts, and so there we go.

00:04:12.360 --> 00:04:14.985
There's our two values inside of there.

00:04:14.985 --> 00:04:20.325
The simple way to go ahead and update this result here is just to grab

00:04:20.325 --> 00:04:23.010
this result variable here and set

00:04:23.010 --> 00:04:27.420
the innerHTML to be the results of this calculation here,

00:04:27.420 --> 00:04:31.995
which is a requiredValue divided by the parentValue.

00:04:31.995 --> 00:04:39.060
Let's give this a go. If we say results dot innerHTML is

00:04:39.060 --> 00:04:46.695
equal to the requiredvalue divided by the parentValue of the browser,

00:04:46.695 --> 00:04:50.010
and that's values into here

00:04:50.010 --> 00:04:58.035
converts and we'll get the value of 0.6 it will set these to both 20,

00:04:58.035 --> 00:05:03.750
we should get the value of 1 M. This is a straightforward way of doing things.

00:05:03.750 --> 00:05:09.254
However, if we refresh and only add one value in place click converts,

00:05:09.254 --> 00:05:12.495
we see we get the message of Infinity,

00:05:12.495 --> 00:05:16.800
or if we just click on Convert without any values in place,

00:05:16.800 --> 00:05:19.005
we'll get not a number.

00:05:19.005 --> 00:05:24.225
We want to protect against any empty fields resulting in these areas.

00:05:24.225 --> 00:05:29.745
We can do this by adding a if else statements inside of this calculation.

00:05:29.745 --> 00:05:37.965
Below this we can say if we can add an exclamation mark and then parentValue.

00:05:37.965 --> 00:05:40.605
If the parentValue is empty,

00:05:40.605 --> 00:05:47.115
and remember the pipe is for all or the required value is empty.

00:05:47.115 --> 00:05:50.100
So each one of these fields is empty,

00:05:50.100 --> 00:05:52.755
would then want to create an alert to the user

00:05:52.755 --> 00:05:57.430
just with a simple message of 'please fill in all fields.'

00:06:00.440 --> 00:06:05.385
Just like that, and then we can also add an else statement.

00:06:05.385 --> 00:06:09.765
So this else statement will run if all fields have been answered.

00:06:09.765 --> 00:06:12.810
If this is the case, we want to grab this results.

00:06:12.810 --> 00:06:20.715
HTML and go ahead and run this code and let's give us a go in the browser.

00:06:20.715 --> 00:06:22.905
Now if click on converts,

00:06:22.905 --> 00:06:26.175
you'll see the message of 'please fill in all fields'.

00:06:26.175 --> 00:06:28.695
Let's just try one of these.

00:06:28.695 --> 00:06:31.575
Will still get the same message,

00:06:31.575 --> 00:06:35.055
and then if we try the calculation,

00:06:35.055 --> 00:06:37.560
everything seems to work in fine.

00:06:37.560 --> 00:06:40.575
Okay, so this is how I completed this project.

00:06:40.575 --> 00:06:43.065
Remember if yours looks a little bit different,

00:06:43.065 --> 00:06:45.570
as long as it's working, everything is fine.

00:06:45.570 --> 00:06:48.780
This is now the end of the section all about

00:06:48.780 --> 00:06:52.485
DOM (Document Object Model) manipulations, functions, and events.

00:06:52.485 --> 00:06:54.945
If some things are still confusing to you,

00:06:54.945 --> 00:06:56.460
don't worry too much.

00:06:56.460 --> 00:06:59.190
Everyone learns at different paces and

00:06:59.190 --> 00:07:02.085
there is a lot to take in here if you are new to this.

00:07:02.085 --> 00:07:05.670
Remember though a lot of what we've learned in this section will be

00:07:05.670 --> 00:07:09.675
repeated many more times as you progress through this course.

00:07:09.675 --> 00:07:13.710
You'll still get plenty more practice or using these techniques.

00:07:13.710 --> 00:07:19.960
I will see you now in the next section where we'll cover loops, arrays, and objects.
