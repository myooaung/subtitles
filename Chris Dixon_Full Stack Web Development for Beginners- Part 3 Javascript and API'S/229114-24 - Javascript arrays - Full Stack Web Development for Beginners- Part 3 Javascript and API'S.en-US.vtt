WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.770
Let's kick off this new section by looking at JavaScript arrays.

00:00:04.770 --> 00:00:06.400
We've already had plenty of

00:00:06.400 --> 00:00:11.340
practice writing variables which as we know store a single value.

00:00:11.340 --> 00:00:13.950
Arrays also store values too,

00:00:13.950 --> 00:00:15.299
just like a variable,

00:00:15.299 --> 00:00:17.380
but we can add more than one.

00:00:17.380 --> 00:00:21.330
Over to the arrays starter file, which is just here.

00:00:21.330 --> 00:00:24.825
We can start an array just like a normal variable.

00:00:24.825 --> 00:00:29.700
Down to the script, we can use the var keyword and then set a name,

00:00:29.700 --> 00:00:31.800
which you want to set for our array.

00:00:31.800 --> 00:00:35.145
Just like a variable, we can also set our values,

00:00:35.145 --> 00:00:40.140
but we can set more than one separated by commas inside the square brackets.

00:00:40.140 --> 00:00:43.725
Let's say a cut, a comma,

00:00:43.725 --> 00:00:45.855
a string of dog,

00:00:45.855 --> 00:00:52.215
a comma and let's go for a tiger with a semicolon at the end.

00:00:52.215 --> 00:00:55.110
Now let's output this with an alert.

00:00:55.110 --> 00:00:58.080
Let's say alert. Inside this alert,

00:00:58.080 --> 00:01:00.975
we can alert our array of animals.

00:01:00.975 --> 00:01:04.790
Let's say our alert inside the browser reload.

00:01:04.790 --> 00:01:08.605
There's our three items which are inside of our array.

00:01:08.605 --> 00:01:11.205
Or we can output this to an element,

00:01:11.205 --> 00:01:12.870
just like we've already seen.

00:01:12.870 --> 00:01:16.160
If we go over to our HTML,

00:01:16.160 --> 00:01:22.130
let's create a div with an ID equal to animals,

00:01:22.130 --> 00:01:26.600
who can just leave the contents empty for now and then go down to our script.

00:01:26.600 --> 00:01:30.420
Then we can grab this with get element by ID.

00:01:32.380 --> 00:01:36.720
The ID was animals and then we can set

00:01:36.720 --> 00:01:44.080
the inner HTML like we seen in plenty times previously and set this to our animals array.

00:01:44.080 --> 00:01:51.410
Save, close this down in and refresh and now we'll see our array on the screen.

00:01:51.410 --> 00:01:53.900
We've only used strings inside this array,

00:01:53.900 --> 00:01:56.765
but we can also contain any other data type,

00:01:56.765 --> 00:01:59.260
such as numbers or Booleans.

00:01:59.260 --> 00:02:01.370
These going exactly the same,

00:02:01.370 --> 00:02:02.900
separated by a comma.

00:02:02.900 --> 00:02:05.765
We add our numbers, rather quotations,

00:02:05.765 --> 00:02:09.800
and we can also set our Boolean values of true or false.

00:02:09.800 --> 00:02:14.930
Save that, and we also see these outputted as expected.

00:02:14.930 --> 00:02:17.930
Display in our animals array, just like this,

00:02:17.930 --> 00:02:21.095
we'll display all items inside of our array.

00:02:21.095 --> 00:02:24.245
But if we just wanted to select a particular one,

00:02:24.245 --> 00:02:27.250
we could reference it by its position in the array.

00:02:27.250 --> 00:02:29.420
Just like we've looked at previously,

00:02:29.420 --> 00:02:34.865
we can select an index number with the square brackets and then add our index volume.

00:02:34.865 --> 00:02:37.790
Remember arrays, just like we've looked at earlier,

00:02:37.790 --> 00:02:39.655
begin at position zero.

00:02:39.655 --> 00:02:43.640
Save that and now we should get the first phoneme of cut,

00:02:43.640 --> 00:02:46.280
and of course we can change this to be any number.

00:02:46.280 --> 00:02:48.695
If we wanted Tiger would go zero,

00:02:48.695 --> 00:02:50.755
one, and then two.

00:02:50.755 --> 00:02:53.070
Set this to be two,

00:02:53.070 --> 00:02:56.235
and there's tiger inside the browser.

00:02:56.235 --> 00:02:59.630
This is similar to what we looked at earlier when we looked at

00:02:59.630 --> 00:03:03.650
query select all and added these square brackets after it.

00:03:03.650 --> 00:03:06.420
Along with accessing the values of an array.

00:03:06.420 --> 00:03:11.635
We can also use the [inaudible] property to see how many values it contains.

00:03:11.635 --> 00:03:15.465
Over to our script, leave the square brackets.

00:03:15.465 --> 00:03:17.950
Then we can say animals.length,

00:03:18.200 --> 00:03:21.720
and our array has five different values.

00:03:21.720 --> 00:03:25.030
We should see the value of five inside the browser.

00:03:25.030 --> 00:03:28.190
Good. This is how we can use JavaScript arrays.

00:03:28.190 --> 00:03:30.620
We will continue with arrays in the next video,

00:03:30.620 --> 00:03:34.500
where we will look at some built-in array methods.
