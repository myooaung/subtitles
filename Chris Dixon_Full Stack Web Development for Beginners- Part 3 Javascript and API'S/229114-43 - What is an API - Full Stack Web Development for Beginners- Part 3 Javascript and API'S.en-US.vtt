WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.250 --> 00:00:06.090
This API part of the course is going to be really exciting section.

00:00:06.090 --> 00:00:09.030
If you've not worked with any APIs before,

00:00:09.030 --> 00:00:12.600
or generally any data from external sources.

00:00:12.600 --> 00:00:16.260
We're going to begin by looking at APIs,

00:00:16.260 --> 00:00:20.370
and this stands for Application Programming Interface,

00:00:20.370 --> 00:00:24.000
which sounds really complex but it's just a way for us to

00:00:24.000 --> 00:00:29.250
connect our websites or application to another data source.

00:00:29.250 --> 00:00:34.540
It basically defines how our app can talk to other apps and services.

00:00:34.540 --> 00:00:37.310
Some of the biggest companies out there have

00:00:37.310 --> 00:00:40.600
an API for developers which we can connect with.

00:00:40.600 --> 00:00:44.570
For example, we could create our own music application,

00:00:44.570 --> 00:00:46.790
exactly how we wanted to look.

00:00:46.790 --> 00:00:51.920
Then use the Spotify API to search for songs or albums,

00:00:51.920 --> 00:00:54.290
or even access any user data,

00:00:54.290 --> 00:00:56.405
such as any saved tracks,

00:00:56.405 --> 00:01:00.040
and then display them right there in our own application.

00:01:00.040 --> 00:01:02.660
There is also a YouTube API,

00:01:02.660 --> 00:01:08.245
which we can use the search and display videos inside our own projects.

00:01:08.245 --> 00:01:12.140
This also provides a way for these companies to allow

00:01:12.140 --> 00:01:16.745
developers to safely access the data, which they allow.

00:01:16.745 --> 00:01:20.840
These providers will require registration and

00:01:20.840 --> 00:01:24.805
also an API key first, before granting access.

00:01:24.805 --> 00:01:26.730
Just like earlier in the course,

00:01:26.730 --> 00:01:29.055
we looked at using Google Maps.

00:01:29.055 --> 00:01:34.130
When we have to register and provide an API key, things to work.

00:01:34.130 --> 00:01:37.990
How do we access this API data?

00:01:37.990 --> 00:01:41.660
Well, not all APIs are exactly the same,

00:01:41.660 --> 00:01:45.679
but generally we make a request to a URL,

00:01:45.679 --> 00:01:47.435
this is a get request,

00:01:47.435 --> 00:01:49.265
as we learned about in the last video.

00:01:49.265 --> 00:01:52.255
Because we want to get some data.

00:01:52.255 --> 00:01:55.635
This URL is called an endpoints.

00:01:55.635 --> 00:02:00.290
For example, this is Spotify's API endpoints here at the top.

00:02:00.290 --> 00:02:06.620
This endpoint is usually extended to be more specific about the data we want to get.

00:02:06.620 --> 00:02:10.085
For example, we can grab some album information.

00:02:10.085 --> 00:02:13.190
We can get albums with a specific ID.

00:02:13.190 --> 00:02:18.890
We can perform searches and even retrieve a user's playlist information.

00:02:18.890 --> 00:02:22.115
To give you a better idea of how this works,

00:02:22.115 --> 00:02:29.010
there is a simple API which we can use with information all about types of dogs.

00:02:29.270 --> 00:02:39.780
Let's head over to the browser and I'm going to go to the dog CEO, which is www.dog.ceo.

00:02:41.270 --> 00:02:49.585
Then to grab the API would do forward slash dog dash API, hit "Enter."

00:02:49.585 --> 00:02:55.430
We can see this is the internet biggest collection of open-source dog pictures.

00:02:55.430 --> 00:02:58.640
Some of this will allow us to search through the dog breeds,

00:02:58.640 --> 00:03:00.515
search through the pictures,

00:03:00.515 --> 00:03:04.495
and generally gather information which we want to find.

00:03:04.495 --> 00:03:10.835
This will give us some examples of the end points we can use to get different dog data.

00:03:10.835 --> 00:03:14.110
This is useful to start with because we don't need to

00:03:14.110 --> 00:03:18.305
register or use any API keys to get started.

00:03:18.305 --> 00:03:21.595
Scrolling down, we can see our endpoints here,

00:03:21.595 --> 00:03:25.430
which is the first part of the web address which we just visited.

00:03:25.430 --> 00:03:29.950
Inside the API, we can then filter by breeds and then select the images,

00:03:29.950 --> 00:03:31.780
and then select a random image,

00:03:31.780 --> 00:03:34.870
and then we return with some JSON data.

00:03:34.870 --> 00:03:36.940
If we go to the documentation,

00:03:36.940 --> 00:03:39.755
we can look at some more examples.

00:03:39.755 --> 00:03:44.155
The first example we see is the list all breeds.

00:03:44.155 --> 00:03:47.110
So this is the URL end points you need to visit to

00:03:47.110 --> 00:03:50.935
grab all these dog breeds in JSON formats.

00:03:50.935 --> 00:03:53.350
If we click on this, copy,

00:03:53.350 --> 00:03:55.500
then paste it in the browser.

00:03:55.500 --> 00:04:00.030
Return back towards it's information in JSON format.

00:04:00.030 --> 00:04:04.520
If yours looks a little hard to read or doesn't look quite like this,

00:04:04.520 --> 00:04:11.260
you may need a JSON browser extension to format it into a more readable structure.

00:04:11.260 --> 00:04:14.600
There's lots of different JSON formats we can use,

00:04:14.600 --> 00:04:17.645
but I'm using a one called JSON formatter.

00:04:17.645 --> 00:04:22.980
I'll go to Chrome extension,

00:04:23.320 --> 00:04:26.910
and then JSON formatter.

00:04:27.910 --> 00:04:31.430
You can follow along with this link and then add this as

00:04:31.430 --> 00:04:35.900
a Chrome extension just by clicking on the "Add to Chrome" button at the top.

00:04:35.900 --> 00:04:37.625
I already have this installed,

00:04:37.625 --> 00:04:40.970
so I'm just going to close down its tab for now.

00:04:40.970 --> 00:04:45.685
JSON stands for JavaScript Object Notation

00:04:45.685 --> 00:04:49.420
and its syntax for exchanging data over the web.

00:04:49.420 --> 00:04:52.570
It's formatted like a JavaScript objects,

00:04:52.570 --> 00:04:55.690
but it's actually language independent,

00:04:55.690 --> 00:05:00.280
meaning it can be created and read by other languages too.

00:05:00.280 --> 00:05:05.470
Here we can see a object like syntax using these round in curly braces.

00:05:05.470 --> 00:05:10.400
We also have the name value pairs such as status of success.

00:05:10.400 --> 00:05:13.300
Then inside this message here we have an object

00:05:13.300 --> 00:05:16.465
containing all the dog breeds which requested.

00:05:16.465 --> 00:05:19.100
We can see some of them are just empty objects because there's

00:05:19.100 --> 00:05:21.575
no data for this particular breed.

00:05:21.575 --> 00:05:24.260
However, for example, if we scroll down,

00:05:24.260 --> 00:05:29.500
one such as the bulldog is an array which contains two different types.

00:05:29.500 --> 00:05:32.660
If we head back over to the API documentation,

00:05:32.660 --> 00:05:37.070
and then if we go down to breed list, here,

00:05:37.070 --> 00:05:39.500
we can click on the JSON information for

00:05:39.500 --> 00:05:42.010
any different type of breed which you want to check out.

00:05:42.010 --> 00:05:45.545
We can see which images we have associated with these.

00:05:45.545 --> 00:05:49.720
Let's go on a boxer and click on the "JSON Data".

00:05:49.720 --> 00:05:54.140
You can see by the URL endpoint at the top with filtering the breed,

00:05:54.140 --> 00:05:55.415
down by the boxer.

00:05:55.415 --> 00:05:57.590
Then we'll access the images.

00:05:57.590 --> 00:05:59.990
We can click on any of these images too,

00:05:59.990 --> 00:06:03.900
and then see which images are provided.

00:06:03.920 --> 00:06:08.330
To change the breed, all we need to do is change the URL.

00:06:08.330 --> 00:06:10.700
Rather than having boxer,

00:06:10.700 --> 00:06:14.845
let's change this to be something else such as hound.

00:06:14.845 --> 00:06:19.770
Then we get a list of different images for the hound.

00:06:20.890 --> 00:06:25.380
Let's try one more. Let's go for labrador.

00:06:27.890 --> 00:06:32.520
Here's a list of all images for the labradors.

00:06:32.520 --> 00:06:37.955
This is the JSON format and it's probably the most commonly used type.

00:06:37.955 --> 00:06:44.790
Some of them which used to be popular for data transfer too was a format called XML.

00:06:45.130 --> 00:06:52.250
Here is an example of the same data using both JSON on the left and XML on the right.

00:06:52.250 --> 00:06:56.135
XML is very descriptive using semantic tags,

00:06:56.135 --> 00:06:58.430
which looks a bit like HTML,

00:06:58.430 --> 00:07:03.335
you will still often see some API data supplied in XML format.

00:07:03.335 --> 00:07:06.800
However, most now have a JSON version 2,

00:07:06.800 --> 00:07:09.530
or even just JSON by itself,

00:07:09.530 --> 00:07:11.704
a more modern APIs.

00:07:11.704 --> 00:07:16.069
This is because JSON is a lot shorter and lightweight,

00:07:16.069 --> 00:07:19.975
as we can see over on the left with the same examples.

00:07:19.975 --> 00:07:26.045
Now I have some background into what an API is and how we can use the data.

00:07:26.045 --> 00:07:29.510
Let's now get back to our song find application,

00:07:29.510 --> 00:07:31.795
which started early on the course.

00:07:31.795 --> 00:07:34.830
Early we created the user interface.

00:07:34.830 --> 00:07:36.785
Now we're going to move on to grabbing

00:07:36.785 --> 00:07:41.700
our API data and showing a list of songs on the screen.
