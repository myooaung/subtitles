WEBVTT
1

00:00:00.930  -->  00:00:06.180
Up until now we have added some code into our store procedure to create the table.

2

00:00:06.330  -->  00:00:08.470
And today we're going to learn how to populate it.

3

00:00:08.490  -->  00:00:14.520
However before we do that let's quickly add a comment on top of this blog because our procedure is going

4

00:00:14.520  -->  00:00:16.090
to be split into blocks.

5

00:00:16.170  -->  00:00:19.390
So we're going to make it look amazing as well.

6

00:00:19.470  -->  00:00:25.580
So just copy this part over here and copy it into here as well.

7

00:00:25.590  -->  00:00:35.670
And now we're going to just type in that this is our create table lock and now we're going to add another

8

00:00:35.670  -->  00:00:40.110
block which is going to be an insert into table block.

9

00:00:40.290  -->  00:00:44.170
So we're going to call it in search in two.

10

00:00:44.460  -->  00:00:47.690
And let's get ahead and start with this.

11

00:00:47.700  -->  00:00:49.600
So we already have this table.

12

00:00:49.600  -->  00:00:51.680
It's as we know it's an empty table so we're here.

13

00:00:51.670  -->  00:00:56.310
So if I open it up it's got the right columns and they have the right types but they don't have any

14

00:00:56.310  -->  00:00:56.630
data.

15

00:00:56.640  -->  00:00:59.390
So let's find this data and insert it.

16

00:00:59.460  -->  00:01:05.220
We know that the data is stored in the raw table which I can execute here and I will see it so it's

17

00:01:05.280  -->  00:01:08.120
handy to have it in front of me.

18

00:01:08.250  -->  00:01:14.310
So I want to insert data into this into the table that we've created so I need to type in the following

19

00:01:14.310  -->  00:01:17.620
code insert into.

20

00:01:17.660  -->  00:01:19.380
Then I need to copy the table name.

21

00:01:19.380  -->  00:01:22.190
You'll see it is very easy to insert.

22

00:01:23.100  -->  00:01:27.030
And now I just copy all of these columns that I'm going to be inserting into.

23

00:01:27.030  -->  00:01:32.760
I won't be answering into the identity row because as we discussed it is populated automatically by

24

00:01:32.970  -->  00:01:37.130
this command into identity.

25

00:01:37.200  -->  00:01:39.470
So I'm just going to copy these rows.

26

00:01:39.850  -->  00:01:44.880
Obviously I don't need the comma at the start going to bring the brackets up.

27

00:01:44.910  -->  00:01:50.470
And you don't need the types here anymore so this is probably the only tedious part deleting these types

28

00:01:50.480  -->  00:01:50.870
.

29

00:01:51.120  -->  00:01:57.000
But once you've done that you already know that you want insert into this table into these columns.

30

00:01:57.000  -->  00:02:01.380
So if you didn't want to insert into zip code for instance you could just leave it out and you could

31

00:02:01.380  -->  00:02:06.690
insert into four but we're going to insert into all the columns and what are we going to insert.

32

00:02:06.690  -->  00:02:08.640
Well the answer is very simple.

33

00:02:08.640  -->  00:02:11.200
We're going to insert data from this table right.

34

00:02:11.220  -->  00:02:17.590
So we need to run a select statement so we're going to go select.

35

00:02:18.000  -->  00:02:22.710
Then you need to list the columns that you're going to be inserted so the columns from this table and

36

00:02:22.800  -->  00:02:28.620
then from the name of the table so I'm going to copy the name of the table here.

37

00:02:28.860  -->  00:02:34.110
But instead of listing the columns one by one manually I'm going to use a handy tricks I'm just going

38

00:02:34.110  -->  00:02:39.930
to open up the table customer list here and I'm just going to take and copy the columns once again before

39

00:02:40.020  -->  00:02:40.990
the row number.

40

00:02:41.400  -->  00:02:44.210
And now I just paste them in here.

41

00:02:44.210  -->  00:02:50.490
Now the reason why I didn't copy the columns if you're wondering from here is because sometimes you

42

00:02:50.490  -->  00:02:56.990
might choose to name them differently for instance I could have named instead of calling this a customer

43

00:02:57.030  -->  00:03:01.500
idea could have called that customer identity or things like that.

44

00:03:01.500  -->  00:03:07.410
So if the names of the columns in your working table are different to your raw table then you might

45

00:03:07.410  -->  00:03:08.590
get into a bit of trouble.

46

00:03:08.670  -->  00:03:14.850
So it's better to just copy the names of the columns from your raw table by doing a select up thousand

47

00:03:14.850  -->  00:03:15.680
rows.

48

00:03:15.690  -->  00:03:22.380
All right so basically what this is saying is select these rows send these columns from this table and

49

00:03:22.380  -->  00:03:25.670
insert them into this table into these columns.

50

00:03:25.680  -->  00:03:27.210
And so it'll match them this one.

51

00:03:27.210  -->  00:03:29.130
This column will go to this column.

52

00:03:29.340  -->  00:03:32.110
This column will go into this column and so on.

53

00:03:32.670  -->  00:03:34.560
And so that's all we had to do.

54

00:03:34.560  -->  00:03:39.750
The times will be converted automatically so as long as our data is nice and pretty and there are no

55

00:03:39.930  -->  00:03:45.420
anomalies which we will talk about in the next section of the Course as long as that's the case and

56

00:03:45.420  -->  00:03:52.530
we've set up these types correctly which we did in the previous tutorial then you all will automatically

57

00:03:52.530  -->  00:03:53.250
convert your data.

58

00:03:53.260  -->  00:03:57.330
So this one will go from a barge or a thousand to a watch or 100.

59

00:03:57.330  -->  00:03:59.550
This will stay our char a thousand.

60

00:03:59.550  -->  00:04:02.920
This one will go from Wataru thousand to five.

61

00:04:02.970  -->  00:04:07.790
And so on and age will move from being a string into a float.

62

00:04:07.860  -->  00:04:13.020
And if there are any errors along the way as know we'll let you know and you will be able to deal with

63

00:04:13.020  -->  00:04:14.830
them on a case by case basis.

64

00:04:15.000  -->  00:04:18.930
And once again we'll talk about that in the next section but it really save you time you don't have

65

00:04:18.930  -->  00:04:24.290
to convert every single one of these right now using the convert operator.

66

00:04:24.300  -->  00:04:29.390
So that's our insert into saw tables ready so let's go ahead and run this insert.

67

00:04:29.520  -->  00:04:33.720
I'm just going to select that part of the proc then I'm going to run and I'm going to click execute

68

00:04:33.720  -->  00:04:33.770
.

69

00:04:33.770  -->  00:04:37.650
Up here 43 rows affected correctly so affected.

70

00:04:37.650  -->  00:04:40.560
So what we're going to do is we're going to copy this message.

71

00:04:41.070  -->  00:04:47.730
I recommend doing this every time and we'll put it in as a comment after insert statement so that somebody

72

00:04:47.730  -->  00:04:55.070
who's looking through our code later on or editing it or tried to recreate it can know exactly how many

73

00:04:55.070  -->  00:04:59.960
rows were inserted that specific time when we ran this query.

74

00:05:00.000  -->  00:05:02.430
And now let's go ahead and look at the table.

75

00:05:02.670  -->  00:05:07.230
So there it is our table select top thousand rows and there you go.

76

00:05:07.230  -->  00:05:08.970
So no it's not empty anymore.

77

00:05:09.030  -->  00:05:12.220
It has the data in the correct format.

78

00:05:12.360  -->  00:05:18.710
Congratulations you have just populated your first working table and that's it for today.

79

00:05:18.750  -->  00:05:24.270
One last thing that we have to remember to do is we have to say about prok so for highlighting anything

80

00:05:24.760  -->  00:05:26.970
I'm just going to execute this proc.

81

00:05:27.150  -->  00:05:30.060
And now it's saved so I can close my proc.

82

00:05:30.060  -->  00:05:35.670
I can close my table I can close my other table and if I open up my proc again you will see that your

83

00:05:35.700  -->  00:05:37.350
code has been saved.

84

00:05:37.350  -->  00:05:41.930
Hope you enjoy this tutorial and I look forward to seeing you on the next one.
