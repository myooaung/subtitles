WEBVTT
1

00:00:01.440  -->  00:00:01.800
All right.

2

00:00:01.800  -->  00:00:10.380
So last time we stopped after we created the procedure for converting our row file into working file

3

00:00:10.380  -->  00:00:10.640
.

4

00:00:10.800  -->  00:00:12.370
So for fake names kind.

5

00:00:12.750  -->  00:00:15.820
And why did we stop Well we stopped because we got an error.

6

00:00:15.870  -->  00:00:17.270
We tried to run the procedure.

7

00:00:17.280  -->  00:00:22.450
The body of the procedure and we got an error saying that there's an error converting data type of bar

8

00:00:22.450  -->  00:00:23.990
chart to load.

9

00:00:24.180  -->  00:00:24.980
What does that mean.

10

00:00:25.050  -->  00:00:27.480
Well this is pretty straightforward.

11

00:00:27.480  -->  00:00:34.470
What it means is that somewhere here when we're selecting of our table from our table and putting the

12

00:00:34.470  -->  00:00:44.490
data into our working table there is a conversion error so we as we said we're relying on implicit conversion

13

00:00:45.960  -->  00:00:49.140
and that implicit conversion is not going through somewhere.

14

00:00:49.140  -->  00:00:54.810
So not for everything just for maybe one two or a couple of rows maybe a couple thousand rows but for

15

00:00:54.810  -->  00:01:05.600
some rows somewhere a VAR char so basically a line of text is not being converted properly into a float

16

00:01:05.610  -->  00:01:05.640
.

17

00:01:05.640  -->  00:01:10.740
There's an error in that conversion so that right away it narrows down our search we have to investigate

18

00:01:10.740  -->  00:01:10.940
this.

19

00:01:10.950  -->  00:01:12.650
And this narrows down our search.

20

00:01:12.720  -->  00:01:14.130
We only have two floats right.

21

00:01:14.130  -->  00:01:15.930
We don't have balance and interest rate.

22

00:01:15.930  -->  00:01:21.030
So one of them or maybe both of them but it kind of error message out as soon as that happens and actually

23

00:01:21.030  -->  00:01:22.350
tells you.

24

00:01:23.490  -->  00:01:28.970
Well you know it tells you the line of code in here so there's not a line in your in your daughter.

25

00:01:29.490  -->  00:01:35.040
So we need to investigate which one of these it is so that's the first step to find out exactly which

26

00:01:35.040  -->  00:01:41.250
column The error is happening and the way we're going to investigate is we going to take this and we're

27

00:01:41.250  -->  00:01:45.870
going to rerun the insert just by itself because everything else is ready the tables empty.

28

00:01:45.870  -->  00:01:50.580
This is just us experimenting now so we're going to run this insert and obviously as you get the same

29

00:01:50.580  -->  00:01:56.100
error now we will comment on to one of the float columns so balance that's come in and commented out

30

00:01:56.430  -->  00:02:00.450
and commented out here so basically were saying insert these columns.

31

00:02:00.560  -->  00:02:01.130
So.

32

00:02:01.330  -->  00:02:06.510
So these these columns and this column and find the data here.

33

00:02:06.570  -->  00:02:09.410
So basically it's gone ignore the Balance Bar and that's fine.

34

00:02:09.570  -->  00:02:10.700
You can do that.

35

00:02:10.740  -->  00:02:17.770
So if you're on this here it says string or binary data would be truncated.

36

00:02:17.940  -->  00:02:21.040
OK so what does that mean that means it's a different era.

37

00:02:21.480  -->  00:02:26.680
This means now that there is a problem.

38

00:02:26.900  -->  00:02:32.100
Now there's a different problem is a problem converting a string or not actually converting a string

39

00:02:32.160  -->  00:02:38.080
or taking a string and placing it into one of our columns so it's too long for one or more columns.

40

00:02:38.280  -->  00:02:44.490
So basically what that means for us is that by getting and coming out come into our balance we get rid

41

00:02:44.490  -->  00:02:49.080
of the previous era and we moved on to the next one so that original era that we're looking for was

42

00:02:49.080  -->  00:02:53.370
in the Balance column and not in the interest rate column although further down the track that might

43

00:02:53.370  -->  00:02:55.350
be another one in interest interest rate.

44

00:02:55.710  -->  00:03:01.120
So that's kind of a way to narrow down that one specific area that's going on right now.

45

00:03:01.150  -->  00:03:06.750
So now let's have a look at another approach a more thorough approach I guess.

46

00:03:06.750  -->  00:03:10.850
So we know that there's only two columns that are being converted to float.

47

00:03:10.980  -->  00:03:12.590
So why don't we check them.

48

00:03:12.600  -->  00:03:16.540
Why don't we check everything in these columns and understand what could be going wrong.

49

00:03:16.560  -->  00:03:20.110
So let's start with the balance column.

50

00:03:20.160  -->  00:03:24.960
So we're going to say select star.

51

00:03:24.990  -->  00:03:27.580
So still keep losing the star.

52

00:03:27.690  -->  00:03:35.710
Select everything from the road table where and this is just typing randomly so we'll delete this code

53

00:03:35.720  -->  00:03:38.220
so I'm gonna be part of the progress in our investigation.

54

00:03:38.220  -->  00:03:43.750
You could even open up a new and maybe let's do that just for you.

55

00:03:43.980  -->  00:03:46.530
So that it's it's more accurate.

56

00:03:46.650  -->  00:03:52.290
We'll open up a new query window here and we'll do our investigation or here so we'll say

57

00:03:56.130  -->  00:04:03.690
use your training go that might be better if we put it.

58

00:04:03.810  -->  00:04:05.070
No no it's fine.

59

00:04:05.430  -->  00:04:10.470
Is just saying go and they will say select star from are all fake names.

60

00:04:10.480  -->  00:04:20.940
Canada and here we want to say where they don't want to take the balance column and we want to put around

61

00:04:20.940  -->  00:04:23.670
the balance Corporate a function which is numeric.

62

00:04:23.700  -->  00:04:25.620
You can see it being part is popping up here.

63

00:04:25.620  -->  00:04:33.180
Now this pink means it's a built in function is numeric and it will say isn't equal to one meaning is

64

00:04:33.180  -->  00:04:34.180
not true.

65

00:04:34.290  -->  00:04:43.470
So this function checks if this column in that specific row the value of this column is a numeric or

66

00:04:43.470  -->  00:04:47.910
you know it can be an Americorp it can be a non-numeric can be a text for instance.

67

00:04:47.970  -->  00:04:52.010
So this function checks if it's a numeric and if it's not a numeric.

68

00:04:52.560  -->  00:04:56.360
If it's an American trojans or one if it's not in American returns is zero.

69

00:04:56.370  -->  00:04:59.460
So we want to know when does it return to zero.

70

00:04:59.460  -->  00:05:01.530
So let's run this.

71

00:05:01.530  -->  00:05:06.630
What this is going to give us is all of the columns where balance is not an American Let's have a look

72

00:05:06.630  -->  00:05:07.470
here.

73

00:05:07.890  -->  00:05:13.740
So here you can see that balance in their balance column we've got a very random values MasterCard Visa

74

00:05:13.830  -->  00:05:17.380
Mastercard Visa Mastercard Visa his visa 0.

75

00:05:17.640  -->  00:05:22.470
So basically obviously you can convert any of these values into a float and that's how we're getting

76

00:05:22.470  -->  00:05:24.090
the arrows.

77

00:05:24.360  -->  00:05:29.420
And that means that this is where the problem lies.

78

00:05:29.550  -->  00:05:30.090
These

79

00:05:32.820  -->  00:05:36.900
values have somehow gotten into the balance column when they shouldn't be there.

80

00:05:36.930  -->  00:05:44.910
So we need to exclude them obviously from our imports and put them into a separate table or file and

81

00:05:44.910  -->  00:05:50.100
then send them off to further investigation like like we would have done in the previous sections of

82

00:05:50.100  -->  00:05:50.560
the course.

83

00:05:50.670  -->  00:05:53.510
So let's do that will take.

84

00:05:53.510  -->  00:06:02.110
This is numeric bit and now we're going to start adding filters so it here will say filters.

85

00:06:04.110  -->  00:06:07.890
And this is going to be our first filter where is the very balance but we don't want to sort out the

86

00:06:07.890  -->  00:06:11.960
ones where it's not equal to what we want sort of the ones where it is equal to one.

87

00:06:12.030  -->  00:06:14.530
Why because we only want the numeric ones.

88

00:06:14.640  -->  00:06:24.360
So if we run that now it won't run properly again because of the other area but at least we don't have

89

00:06:24.480  -->  00:06:26.940
the original error which we had to balance.

90

00:06:26.940  -->  00:06:30.370
So if we run like this we're fault the filter.

91

00:06:30.540  -->  00:06:33.760
What happens is we get the Bartsch our error.

92

00:06:33.810  -->  00:06:41.040
But now if we conclude the filter because we're taking out these values that are screwing up this upload

93

00:06:41.280  -->  00:06:46.550
or conversion we only have this other error where something's been truncated.

94

00:06:46.620  -->  00:06:49.010
So that's how we're going to deal with errors.

95

00:06:49.740  -->  00:06:51.750
And this was our first one.

96

00:06:51.750  -->  00:06:57.220
The only other thing that we need to specify is how many rows this specific filter effect.

97

00:06:57.270  -->  00:07:04.180
So we know here from from this query we know that it's 10 rows so it's typed in here.

98

00:07:04.890  -->  00:07:09.780
We need to keep track of these things for quality assurance because at the end we will have a number

99

00:07:09.780  -->  00:07:11.710
of rows affected by the insert.

100

00:07:12.120  -->  00:07:19.160
And obviously it won't match up to the number of rows in the raw table but if we then add up all of

101

00:07:19.170  -->  00:07:27.240
the rows to be excluded and also the rows that actually got inserted then they should add up to the

102

00:07:27.360  -->  00:07:29.120
number of rows in the row table.

103

00:07:29.130  -->  00:07:32.260
So that's how we're going to work with anomalies.

104

00:07:32.280  -->  00:07:41.070
This is Us surgically removing elements that are nonconforming move the required format and in the next

105

00:07:41.220  -->  00:07:43.590
tutorial we will deal with this era
