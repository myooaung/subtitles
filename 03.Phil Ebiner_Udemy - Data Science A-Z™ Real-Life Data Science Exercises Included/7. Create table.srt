1

00:00:00,660  -->  00:00:01,140
All right.

2

00:00:01,140  -->  00:00:07,640
So today we're finally going to start building our stored procedure to create the working table.

3

00:00:08,070  -->  00:00:13,260
And the way we're going to go about it is we will break it up into a few tutorials to make them shorter

4

00:00:13,530  -->  00:00:16,600
and we will build it bit by bit.

5

00:00:16,680  -->  00:00:18,890
So today we're going to create the table.

6

00:00:19,110  -->  00:00:23,790
So let's get rid of this bit in the middle here we still going to use proc that we've already prepared

7

00:00:23,800  -->  00:00:24,110
.

8

00:00:24,300  -->  00:00:30,150
And now I'll show you a trick we're going to open up our customer list table which we're going to be

9

00:00:30,420  -->  00:00:33,210
creating a work table for.

10

00:00:33,240  -->  00:00:41,010
So as you remember the goal right now is to take this table which is all text fields which is not prepared

11

00:00:41,010  -->  00:00:47,770
for the real world this is a raw table and create a working table that we can later use in our analysis

12

00:00:48,060  -->  00:00:50,380
use to create other tables and so on.

13

00:00:50,380  -->  00:01:00,150
So basically give this table a makeover and we're going to start by copying all the columns here and

14

00:01:00,230  -->  00:01:01,940
we'll just click copy here.

15

00:01:02,850  -->  00:01:05,320
And for now we'll just copy them into here.

16

00:01:05,340  -->  00:01:08,460
We'll just leave them there and we will work with them in a bit.

17

00:01:08,610  -->  00:01:15,930
So the code that we're going to type in is we're going to type in create table and obviously the name

18

00:01:15,930  -->  00:01:20,150
of our table will be exactly this as the name of all Proc..

19

00:01:20,160  -->  00:01:21,470
But without the build part.

20

00:01:21,510  -->  00:01:26,390
So that's a convenient shortcut which is going to copy that and paste it into the square brackets.

21

00:01:26,520  -->  00:01:28,360
So that's the table we want to create.

22

00:01:28,360  -->  00:01:33,450
Right but that's not enough information for a scale we have to specify the columns that we want to put

23

00:01:33,450  -->  00:01:35,610
in the table and there types.

24

00:01:35,670  -->  00:01:43,560
So off to create table put a normal bracket and then after these Colma columns put another normal bracket

25

00:01:43,560  -->  00:01:45,610
over here closing on bracket.

26

00:01:45,630  -->  00:01:48,320
So let's tabulate this to make it look pretty.

27

00:01:48,660  -->  00:01:56,060
And before we go going to specify a row number column and I'll explain what it is in a second.

28

00:01:56,100  -->  00:02:03,360
So put a comma before customer ID and I'll just tabulate it nicely like that and so do you see what

29

00:02:03,360  -->  00:02:03,960
I did there.

30

00:02:03,960  -->  00:02:12,830
I used the end of the span of the script space so the end of the file as as kind of a bumper I bomb

31

00:02:12,900  -->  00:02:14,900
to all of them by pressing shift tab.

32

00:02:14,910  -->  00:02:17,070
I bumped them all to line them up.

33

00:02:17,070  -->  00:02:18,230
And I press tab once.

34

00:02:18,240  -->  00:02:20,950
And now they're all lined up with phone number.

35

00:02:21,300  -->  00:02:23,780
So there's another handy trick for you.

36

00:02:23,880  -->  00:02:28,920
And now we're going to specify the taps as you can see they're all like red and I can run this right

37

00:02:28,950  -->  00:02:33,060
now if I try running this it says datatype must be included.

38

00:02:33,060  -->  00:02:38,700
That's correct you creating a table you know the code names but you're not telling a skill Management

39

00:02:38,700  -->  00:02:42,650
Studio What exactly is going to be in those columns what's going to be stored in those calls.

40

00:02:42,660  -->  00:02:44,180
So let's go ahead and do that.

41

00:02:44,340  -->  00:02:50,250
And the way we do it is we look at the table that we are replicating or we creating a working table

42

00:02:50,250  -->  00:02:51,220
for this table.

43

00:02:51,240  -->  00:02:57,630
So let's take that table and let's select it so I'm here after that and keyword.

44

00:02:57,630  -->  00:03:08,010
I'm going to put in some comments and here we're going to put up a comment saying selects star from

45

00:03:08,790  -->  00:03:10,980
and this table that we are creating.

46

00:03:10,980  -->  00:03:15,190
So if I run it I'll have it at the bottom here I'll know what I'm working with.

47

00:03:15,300  -->  00:03:19,800
So to start off with row number is not this phone number it's separate.

48

00:03:19,800  -->  00:03:25,230
It's we're not just copying this number we creating an identity field separate for this table.

49

00:03:25,230  -->  00:03:31,410
I recommend creating identity fields for every single table that you have because that allows them to

50

00:03:31,410  -->  00:03:36,060
be stored better and they save space and they're more efficient.

51

00:03:36,150  -->  00:03:41,600
So never use this row number as a reference point because it might not match.

52

00:03:41,610  -->  00:03:46,590
Don't think of it that way it's just a phone number just the field just an identity field.

53

00:03:46,590  -->  00:03:49,610
That's how most of my tables start with.

54

00:03:50,010  -->  00:03:56,430
And now we're going to move onto the actual columns that we're copying so customer id on.

55

00:03:56,580  -->  00:03:58,980
So here let's start with city because it's easier.

56

00:03:58,980  -->  00:04:01,440
So City is a textfield right.

57

00:04:01,440  -->  00:04:06,300
So we need to give it a bar chart type.

58

00:04:06,510  -->  00:04:08,730
And how many characters.

59

00:04:08,730  -->  00:04:11,760
Well it can be quite a quite a long field.

60

00:04:11,760  -->  00:04:15,590
So here there are up to a thousand we know that because that's how we uploaded them.

61

00:04:15,600  -->  00:04:20,970
They look shorter or they can be maybe 100 symbols here but we will be on the safe side and we'll give

62

00:04:20,970  -->  00:04:26,280
it a thousand because that's the maximum that it can be in our roundtable that's the where we uploaded

63

00:04:26,280  -->  00:04:26,730
it.

64

00:04:26,730  -->  00:04:32,570
So we're definitely not going to risk anything by getting 1000 zip code.

65

00:04:32,820  -->  00:04:40,220
We will skip that one for now as well so gender is easy because obviously gender is male or female or

66

00:04:40,230  -->  00:04:46,650
an amp or an F and here will give gender also bar Chaar and we only give one character why.

67

00:04:46,740  -->  00:04:49,320
Well because here we can see there's only one character.

68

00:04:49,770  -->  00:04:51,930
And also it's like a safety thing.

69

00:04:51,930  -->  00:04:58,730
So if this Vascellaro one character if anything here is more than one character.

70

00:04:58,730  -->  00:05:08,130
So for instance somebody typed in a or a male or female then that is not the right format for this field

71

00:05:08,130  -->  00:05:08,150
.

72

00:05:08,160  -->  00:05:14,420
And there will be a truncation era because this field now is only expecting one character so when we're

73

00:05:14,430  -->  00:05:19,410
going to be copying this table into the new table there should be only one character if there's any

74

00:05:19,710  -->  00:05:23,700
more characters and one there'll be a truncation which will tell us that there's something wrong with

75

00:05:23,700  -->  00:05:29,400
the dot and we'll go in investigate So it's it's like a precaution method for us.

76

00:05:29,400  -->  00:05:30,760
All right so that's good.

77

00:05:30,800  -->  00:05:37,180
Next we're going to deal with age so age often is an integer and that's good.

78

00:05:37,200  -->  00:05:42,090
But in this case the data is stored as a float so you can see that there's a decimal point.

79

00:05:42,090  -->  00:05:45,720
There are some integers here but we don't want to lose this information.

80

00:05:45,840  -->  00:05:51,690
We don't lose any information when we doing this process so we want to make sure that we are converting

81

00:05:51,750  -->  00:05:55,500
this age which is right now stored as a string or a bar char.

82

00:05:55,520  -->  00:06:00,030
We need to convert it into a number and four number we're going to use a float.

83

00:06:00,030  -->  00:06:06,570
So a number with a floating decimal points or just basically a decimal point so here you can type and

84

00:06:06,570  -->  00:06:07,800
float.

85

00:06:07,800  -->  00:06:10,120
Now going back to zipcode and customer ID.

86

00:06:10,290  -->  00:06:12,360
So zipcode.

87

00:06:12,360  -->  00:06:14,850
The temptation here is to.

88

00:06:15,180  -->  00:06:16,590
It's a number it looks like a number right.

89

00:06:16,590  -->  00:06:21,410
So the temptation here is to use a integer for zipcode.

90

00:06:21,570  -->  00:06:28,290
But the thing is it is it is technically a number but you will never use zip code is the number you

91

00:06:28,290  -->  00:06:34,790
will never add add zip codes you will never order zip codes by ascending or descending order.

92

00:06:34,890  -->  00:06:40,080
You will never multiply zip codes you will never ever use zip code is the number for use zip code is

93

00:06:40,110  -->  00:06:47,610
actually is just a variable that allows you to it's a categorical variable is it allows you to understand

94

00:06:47,670  -->  00:06:50,490
you know what where this person lives and things like that.

95

00:06:50,490  -->  00:06:57,120
So you'll use it in Joines and you'll use it in groupings but you will never compare zip codes to each

96

00:06:57,120  -->  00:06:59,380
other so you shouldn't use it.

97

00:06:59,450  -->  00:07:00,390
Put it as an integer.

98

00:07:00,390  -->  00:07:06,260
It's actually a string you should keep it as a varchar So here we're going to type in Varsha.

99

00:07:06,270  -->  00:07:10,610
And these are the decisions you have to make here it's having two symbols five symbols.

100

00:07:10,860  -->  00:07:12,590
These are the decisions that you have to make.

101

00:07:12,630  -->  00:07:19,670
You have to understand what type of data type to give each of these variables.

102

00:07:19,710  -->  00:07:26,860
And if it's a or how long it should be and customer id So here we've got an interesting thing.

103

00:07:27,390  -->  00:07:30,860
Customer I.D. It's once again it's like zip code.

104

00:07:30,870  -->  00:07:34,830
It looks like a number it is technically a number but you don't want to store as a number you want to

105

00:07:34,830  -->  00:07:39,300
store it as text because you're not going to compare customer IDs to each other.

106

00:07:39,360  -->  00:07:45,350
It's an I.D. So you even think of it this way if something could have had technical or theoretically

107

00:07:45,370  -->  00:07:48,000
could have had a letter inside so would it.

108

00:07:48,060  -->  00:07:55,440
Would anything be different if all the customers IDs started with a letter the letter T for instance

109

00:07:55,990  -->  00:07:56,520
then.

110

00:07:56,670  -->  00:07:57,420
No they wouldn't.

111

00:07:57,420  -->  00:07:59,780
Nothing would be different for you.

112

00:07:59,790  -->  00:08:01,560
It's still an I.D. right.

113

00:08:01,560  -->  00:08:05,120
And some maybe some other customer customizes could solve for t some because of an F.

114

00:08:05,130  -->  00:08:06,720
Representing different things.

115

00:08:06,750  -->  00:08:07,300
Same thing.

116

00:08:07,320  -->  00:08:08,680
Nothing would have changed for you.

117

00:08:08,680  -->  00:08:10,480
You still be able to work with them.

118

00:08:10,500  -->  00:08:16,020
Well in that case with the letter T They're not numbers they're actually strings and you can't turn

119

00:08:16,020  -->  00:08:17,890
them into numbers so same thing here.

120

00:08:17,910  -->  00:08:20,900
We are not going to convert them to numbers because there's no need for that.

121

00:08:20,910  -->  00:08:23,970
And actually we can cause confusion by doing that.

122

00:08:23,970  -->  00:08:25,630
We're going to keep them as a bar chart.

123

00:08:25,890  -->  00:08:30,660
And here you look at the lenth you can see that the loan has variable so maybe give it like 100 symbols

124

00:08:30,690  -->  00:08:31,530
just in case.

125

00:08:31,710  -->  00:08:36,690
If you know for sure that your customer I.D. can not be more than nine symbols out then then give it

126

00:08:36,690  -->  00:08:37,280
nine symbols.

127

00:08:37,290  -->  00:08:44,620
But in this case it doesn't look like we can tell that from this short snippet of the data set.

128

00:08:44,640  -->  00:08:49,960
So that's how we create our table so that's actually how we write up the code to create our table.

129

00:08:50,100  -->  00:08:52,590
And now if we go ahead and run it.

130

00:08:52,710  -->  00:08:53,970
So first of all.

131

00:08:53,970  -->  00:09:00,680
First thing I recommend doing is save your stored procedure so just click 5 or execute.

132

00:09:00,930  -->  00:09:02,220
Now the stored procedures saved.

133

00:09:02,220  -->  00:09:09,110
And now we can run this body and create the table so if we highlight and click execute and if you're

134

00:09:09,110  -->  00:09:13,730
a short refresh tables you will see that there's a working table here.

135

00:09:13,740  -->  00:09:15,760
Office supplies customer list.

136

00:09:15,900  -->  00:09:21,900
And so let's open up select top thousand rows and of course it's empty because we've just created an

137

00:09:21,900  -->  00:09:25,060
empty table in the next few tutorials.

138

00:09:25,080  -->  00:09:28,350
We will learn how to populated our data
