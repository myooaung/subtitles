WEBVTT
1
00:00:02.540 --> 00:00:07.290
What does it mean to separate the handling of binary file on

2
00:00:07.290 --> 00:00:10.960
the one hand and text file on another hand?

3
00:00:10.960 --> 00:00:13.540
What is the difference between them?

4
00:00:13.540 --> 00:00:19.170
Well, first of all, binary fires are about storing bytes.

5
00:00:19.170 --> 00:00:21.560
In a binary file, you store bytes,

6
00:00:21.560 --> 00:00:25.230
and your application is going to make sense out of those bytes.

7
00:00:25.230 --> 00:00:31.540
So, for instance, if your bytes have to be grouped 4 by 4 to create integers,

8
00:00:31.540 --> 00:00:33.880
this is your interpretation,

9
00:00:33.880 --> 00:00:40.140
your application‑specific interpretation, of the binary content of a given file.

10
00:00:40.140 --> 00:00:45.240
On the other hand, text files are about storing characters.

11
00:00:45.240 --> 00:00:47.140
Now what is a character?

12
00:00:47.140 --> 00:00:51.140
A character is also a set of bytes in a text file,

13
00:00:51.140 --> 00:00:58.110
but it can be interpreted as this or that character using a charset.

14
00:00:58.110 --> 00:01:03.480
And trust me, they are really many charsets, dozens and dozens of them.

15
00:01:03.480 --> 00:01:07.560
The charset we should all be using is probably UTF‑8,

16
00:01:07.560 --> 00:01:18.000
but this is not the only one that is living around. So the API provides support for that, and we are going to see that on examples.

