1
00:00:00,240 --> 00:00:05,760
In this video we're going to wrap up our discussion of command line arguments by setting up yards to

2
00:00:05,760 --> 00:00:08,160
support some options for each of our comments.

3
00:00:08,160 --> 00:00:14,070
For example the ad command needs the title and body of the note you're adding the remove command needs

4
00:00:14,070 --> 00:00:18,940
the title of the note you're trying to remove and last up R reads command.

5
00:00:19,020 --> 00:00:22,270
It needs the title of the note you're trying to read.

6
00:00:22,380 --> 00:00:26,540
So we have to figure out how to configure options for those three commands.

7
00:00:26,670 --> 00:00:32,850
And the answer is that we set up another property on the configuration object we pass to command this

8
00:00:32,850 --> 00:00:34,950
property which I'm going to add right here.

9
00:00:34,950 --> 00:00:42,720
After describe is called BUILDER Builders value is an object and own that object we can define all of

10
00:00:42,720 --> 00:00:43,800
the options we want.

11
00:00:43,800 --> 00:00:47,190
This is given command to support now in the case of ADD.

12
00:00:47,280 --> 00:00:49,960
Once again there's two title and body.

13
00:00:50,100 --> 00:00:53,010
Let's start with title to define a new option.

14
00:00:53,010 --> 00:00:56,040
We set it up as a property on the builder object.

15
00:00:56,070 --> 00:01:01,620
So if I want to be able to provide a title when I run the ad command from the terminal I can set up

16
00:01:01,620 --> 00:01:03,950
title right here in builder.

17
00:01:03,960 --> 00:01:10,700
Now the value for this property is an object and in here we can customize how that option works.

18
00:01:10,770 --> 00:01:15,840
And the first thing we're gonna do is set up the describe a property just like we did for our command

19
00:01:15,840 --> 00:01:16,630
up above.

20
00:01:16,710 --> 00:01:21,680
Describe for an option allows us to describe that option and right here.

21
00:01:21,810 --> 00:01:26,870
I'm just going to say note title perfect with our option defined.

22
00:01:26,880 --> 00:01:33,090
We can now access that in the command handler down below and we get access to the arguments via this

23
00:01:33,090 --> 00:01:35,960
first argument that's provided to our function.

24
00:01:36,060 --> 00:01:42,330
So we give this function to yards and when the command is executed yards runs the function and it calls

25
00:01:42,330 --> 00:01:45,730
it with our V which contains all of those arguments.

26
00:01:45,780 --> 00:01:50,940
Let's go ahead and print that to the terminal so we can see what we got right here after our string.

27
00:01:50,940 --> 00:01:56,640
I'm going to pass a second argument to console dialog and the second argument is just going to be the

28
00:01:56,640 --> 00:01:58,840
ARG the variable.

29
00:01:58,860 --> 00:02:05,370
Now we can save things and run our application from down below what we're going to do is run node app

30
00:02:05,370 --> 00:02:13,200
and Dot J S add we are going to provide that title option and I'll set it equal to something like shopping

31
00:02:13,200 --> 00:02:14,890
list.

32
00:02:15,140 --> 00:02:17,540
I'm going to run the command and what do I get.

33
00:02:17,540 --> 00:02:23,720
Right here we have our console dot log printing adding a new note followed by ARG V from inside of the

34
00:02:23,720 --> 00:02:24,420
handler.

35
00:02:24,500 --> 00:02:30,800
And right here we have the title property with shopping list which means we have access to ARG the DOT

36
00:02:30,800 --> 00:02:35,480
title which we can now use to actually define a note.

37
00:02:35,480 --> 00:02:41,180
Now one thing to point out is that these are not required which means that I could run the command without

38
00:02:41,180 --> 00:02:45,980
title node app dot J s ad if I do that what do I get.

39
00:02:45,980 --> 00:02:49,790
Things still seem to work even though no title was provided.

40
00:02:49,790 --> 00:02:55,790
Now it's up to us as the developers to decide whether or not a given option should be required if it's

41
00:02:55,790 --> 00:02:56,380
not.

42
00:02:56,390 --> 00:03:00,580
You can leave the configuration as is if you want it to be required.

43
00:03:00,580 --> 00:03:02,470
You can set that up as well.

44
00:03:02,510 --> 00:03:06,230
Right here we have the demand option.

45
00:03:06,230 --> 00:03:07,190
Property.

46
00:03:07,190 --> 00:03:09,590
This is set to false by default.

47
00:03:09,650 --> 00:03:15,410
We can go ahead and flip that over to true meaning that you have to provide it in order for the command

48
00:03:15,440 --> 00:03:17,060
to work correctly.

49
00:03:17,060 --> 00:03:22,190
Now let's try to run the script again without providing title even though it's now required.

50
00:03:22,190 --> 00:03:23,770
When I do that what do I get.

51
00:03:23,810 --> 00:03:29,980
I get an error message printing it saying we are missing required arguments and it lists them out.

52
00:03:30,050 --> 00:03:32,130
In this case we are missing title.

53
00:03:32,330 --> 00:03:38,390
Right here it even shows the available options for the ad command and we can see that we have title

54
00:03:38,420 --> 00:03:44,330
as the last one and it is indeed shown as required over here on the right hand side which is correct

55
00:03:45,150 --> 00:03:50,970
now the other thing we want to make sure is that we always get a string value for this particular option.

56
00:03:50,970 --> 00:03:56,070
So if you provide the option but you don't give it a value it's going to show up as a boolean.

57
00:03:56,280 --> 00:03:59,300
Let's see what I mean by that node app.

58
00:03:59,310 --> 00:04:05,940
J ust add here we will use hyphen hyphen title but I'm not going to set it equal to a string like we

59
00:04:05,940 --> 00:04:07,180
did previously.

60
00:04:07,200 --> 00:04:12,370
If I do this we can see the value for title is true which is not what we want.

61
00:04:12,390 --> 00:04:17,340
I want to make sure that the ARG V that title property is always a string.

62
00:04:17,400 --> 00:04:24,270
We can go ahead and enforce that by setting up another property on our little options object configuration.

63
00:04:24,270 --> 00:04:26,140
Right here it is a type.

64
00:04:26,310 --> 00:04:32,380
And we're going to set the value equal to one of these supported types which is string in lowercase

65
00:04:32,940 --> 00:04:34,510
now that we have this in place.

66
00:04:34,570 --> 00:04:39,420
We are always going to have a string value for a title and it's required which means it's always going

67
00:04:39,420 --> 00:04:40,260
to be there.

68
00:04:40,260 --> 00:04:45,540
Now it could be an empty string but that's OK we can always perform a little validation later on to

69
00:04:45,540 --> 00:04:47,540
make sure the title has content.

70
00:04:47,790 --> 00:04:53,100
But if I rerun that previous command we can see that at least we have a string value for a title instead

71
00:04:53,100 --> 00:04:56,350
of a boolean which is a great step in the right direction.

72
00:04:56,370 --> 00:05:03,960
And obviously if I provided a string equals something like my title that's going to show up right there

73
00:05:04,020 --> 00:05:05,760
which is indeed ideal.

74
00:05:05,760 --> 00:05:07,980
So now we have this title option.

75
00:05:07,980 --> 00:05:09,540
We have a description for it.

76
00:05:09,580 --> 00:05:14,550
We've said that it needs to be provided and we've said that we're always expecting a string which is

77
00:05:14,640 --> 00:05:15,300
awesome.

78
00:05:15,300 --> 00:05:20,340
You'll notice in the terminal that we're getting the args printed twice because we print them once inside

79
00:05:20,340 --> 00:05:26,860
of the command handler for ad and then down below we print them again in a little console dialogue call.

80
00:05:26,880 --> 00:05:30,320
It's important to note that this is actually doing something.

81
00:05:30,450 --> 00:05:35,730
If we were to comment this line out and save the program it wouldn't work as expected.

82
00:05:35,730 --> 00:05:41,100
If I rerun it the exact same command which worked a few moments ago we can see we're not getting any

83
00:05:41,130 --> 00:05:41,900
output.

84
00:05:41,970 --> 00:05:45,870
So how exactly is printing the args making all of this work.

85
00:05:45,870 --> 00:05:52,650
Well when we access the ARG the property on Yahoo's yard's nose to actually do its thing and pass those

86
00:05:52,680 --> 00:05:53,580
arguments.

87
00:05:53,580 --> 00:05:57,290
Now if we don't need to access it that can be less than ideal.

88
00:05:57,300 --> 00:06:03,420
So there's another way to get that done it is yards dot pass it doesn't take any arguments and we can

89
00:06:03,420 --> 00:06:08,150
just call it like that if we save the program and we rerun the command.

90
00:06:08,160 --> 00:06:12,800
Now things are working once again and we're seeing our arguments printed just a single time.

91
00:06:13,020 --> 00:06:19,170
So yards pass actually goes through the process of passing the arguments with all of the configuration

92
00:06:19,170 --> 00:06:23,630
details you've provided with your yards command calls up above.

93
00:06:23,850 --> 00:06:29,220
It's almost challenge time but before we get there we are going to print the title explicitly.

94
00:06:29,220 --> 00:06:32,820
Down below as opposed to printing the entire object.

95
00:06:32,820 --> 00:06:36,890
So I'll remove our console log and replace it with a new one.

96
00:06:37,170 --> 00:06:38,940
And I'm going to print two things.

97
00:06:38,970 --> 00:06:45,390
First up I'm going to print a little title for the title so I'll say something like a title colon space

98
00:06:45,630 --> 00:06:52,740
and then I'll concatenate on the actual title value which is on ARG the DOT title where the title property

99
00:06:52,980 --> 00:06:54,790
matches up with the title property.

100
00:06:54,840 --> 00:06:57,120
We chose to create up above.

101
00:06:57,120 --> 00:07:01,530
Now if I run the script again things are just a bit more organized right here.

102
00:07:01,530 --> 00:07:04,050
Title my title is showing up.

103
00:07:04,080 --> 00:07:08,430
So now let's talk about what I'd like you to do as your challenge for the video.

104
00:07:08,430 --> 00:07:13,710
As always I have some challenge comments right here describing what I'd like you to do it is gonna be

105
00:07:13,710 --> 00:07:19,710
your goal to add a new option to yards and that's going to be for the ad command.

106
00:07:19,710 --> 00:07:25,710
So right here you're going to use what you've learned in the video to set up a body option for the ad

107
00:07:25,710 --> 00:07:31,440
command which means you'll be customizing the builder object we have right here adding a second prop.

108
00:07:31,890 --> 00:07:34,990
You're going to configure the body option to have a description.

109
00:07:35,070 --> 00:07:37,270
You can pick something that makes sense for you.

110
00:07:37,410 --> 00:07:39,930
You're going to make it a required option.

111
00:07:39,930 --> 00:07:46,290
We're gonna need a body and you're going to force it to be a string using the correct definition.

112
00:07:46,290 --> 00:07:53,150
Next up you're going to log the body value in the handler function like we log the title down below.

113
00:07:53,160 --> 00:07:55,410
And finally you're going to test your work.

114
00:07:55,500 --> 00:07:58,750
So you're going to run the command from the command line a few times.

115
00:07:58,770 --> 00:08:00,960
Try it once without providing the body.

116
00:08:01,020 --> 00:08:07,050
And make sure that fails try it again while providing the body and make sure you see both your title

117
00:08:07,140 --> 00:08:08,550
and body printing.

118
00:08:08,550 --> 00:08:14,460
So all you need to do is edit this object add some stuff inside of this function and test things out

119
00:08:14,640 --> 00:08:16,350
from the command line.

120
00:08:16,350 --> 00:08:18,670
All right take some time to knock that one out.

121
00:08:18,690 --> 00:08:21,990
As always we're going to work through these solution together.

122
00:08:21,990 --> 00:08:26,330
So take a moment to pause the video and when you're done come back and click play

123
00:08:30,340 --> 00:08:31,090
how'd that go.

124
00:08:31,090 --> 00:08:32,700
Let's kick things off together.

125
00:08:32,710 --> 00:08:37,630
We're gonna be setting up a new body option which means we need to add a new property onto the builder

126
00:08:37,630 --> 00:08:38,530
object.

127
00:08:38,530 --> 00:08:40,630
I could add it before or after title.

128
00:08:40,660 --> 00:08:41,890
Either way works.

129
00:08:41,920 --> 00:08:44,810
I'm just gonna add it right afterwards right here.

130
00:08:44,810 --> 00:08:50,840
If he knew property is called the body it is also going to have its value be an object like we did for

131
00:08:50,840 --> 00:08:53,550
a title and this is where we can customize it.

132
00:08:53,650 --> 00:08:55,290
So we want to set up a description.

133
00:08:55,390 --> 00:09:00,400
I want to make it required and I want to make it a string for the description we use are handy.

134
00:09:00,400 --> 00:09:02,080
Describe property.

135
00:09:02,080 --> 00:09:05,780
I'll use a description of something like note body for this one.

136
00:09:05,920 --> 00:09:10,600
Then we're also going to require it by setting demand option equal to true.

137
00:09:10,600 --> 00:09:13,420
Remember the default value is false.

138
00:09:13,420 --> 00:09:17,590
Finally I'm gonna set the type for this one equal to a string.

139
00:09:17,590 --> 00:09:20,470
So we always get a string value provide it.

140
00:09:20,590 --> 00:09:22,910
So that's the steps 1 and 2.

141
00:09:22,930 --> 00:09:25,900
Next up you needed to log the value in the handler.

142
00:09:25,900 --> 00:09:32,980
So down here we log out the title I'm going to add a new console dot log call to log out the body so

143
00:09:32,980 --> 00:09:34,440
body call in space.

144
00:09:34,540 --> 00:09:42,160
Then I'll concatenate on ARG v dot body where the body property comes from the same value as the name

145
00:09:42,160 --> 00:09:42,640
up above.

146
00:09:43,240 --> 00:09:48,700
Now that we have all of this in place we can move on to the final step which is to test our work and

147
00:09:48,700 --> 00:09:52,010
make sure we can now use body successfully.

148
00:09:52,030 --> 00:09:53,270
I'm gonna save app dot.

149
00:09:53,280 --> 00:09:58,870
J.S. I am going to clear the terminal output just to give us a little bit of thinking space so it's

150
00:09:58,870 --> 00:10:01,730
not so cluttered and we're gonna use our new command.

151
00:10:01,930 --> 00:10:08,860
So node app dot J S I am going to run ad and I'm going to do it with title.

152
00:10:08,860 --> 00:10:16,840
I'll provide a title I'll just use a title like buy and I'm not going to provide a body and that's intentional.

153
00:10:16,840 --> 00:10:22,560
When I do this I'm expecting it to fail and it does right here missing and required argument body.

154
00:10:22,720 --> 00:10:26,110
I can see both title and body showing up both required.

155
00:10:26,140 --> 00:10:27,700
Which is fantastic.

156
00:10:27,730 --> 00:10:32,950
The next thing we're gonna do is rerun the exact same command but this time we are going to provide

157
00:10:32,950 --> 00:10:33,740
a body.

158
00:10:33,780 --> 00:10:39,370
So after a space hyphen hyphen body equals right here inside of double quotes.

159
00:10:39,370 --> 00:10:43,620
These are what I need to buy.

160
00:10:43,720 --> 00:10:44,710
Period.

161
00:10:44,740 --> 00:10:47,380
Now if we go ahead and run this command what do we see.

162
00:10:47,380 --> 00:10:48,900
We see our two messages.

163
00:10:48,970 --> 00:10:52,450
I have the title console that log right here printing by.

164
00:10:52,510 --> 00:10:55,510
That comes from line thirty three and I have body.

165
00:10:55,510 --> 00:10:57,370
These are the things I need to buy.

166
00:10:57,400 --> 00:10:59,550
Coming from line 34.

167
00:10:59,590 --> 00:11:00,400
So there we go.

168
00:11:00,400 --> 00:11:01,980
That is it for the challenge.

169
00:11:01,990 --> 00:11:09,550
Our ad command now takes in all of the options necessary for it to actually create a new node and save

170
00:11:09,550 --> 00:11:11,390
it to a data store.

171
00:11:11,470 --> 00:11:16,750
Figuring out how we're going to save our data how we're going to save our notes is the topic of the

172
00:11:16,780 --> 00:11:17,980
very next video.

173
00:11:18,130 --> 00:11:20,770
So let's go ahead and jump right in to the next one.
