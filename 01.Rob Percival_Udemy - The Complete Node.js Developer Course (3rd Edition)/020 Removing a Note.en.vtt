WEBVTT
1
00:00:00.270 --> 00:00:06.570
In this video as promised it's going to be up to you to wire up the remove functionality for our notes

2
00:00:06.630 --> 00:00:07.740
application.

3
00:00:07.740 --> 00:00:13.350
We're gonna do this in three separate challenges as opposed to one big one so we can make sure we're

4
00:00:13.350 --> 00:00:15.170
all headed in the right direction.

5
00:00:15.210 --> 00:00:21.270
Along the way right here I have the challenge comments for the first of three challenges for this video.

6
00:00:21.270 --> 00:00:26.100
The goal here is to setup the command option and a function for removing notes.

7
00:00:26.160 --> 00:00:32.520
So step one set setup the remove command to take your required title option and that should be passed

8
00:00:32.550 --> 00:00:33.870
in as a string.

9
00:00:34.110 --> 00:00:39.750
So when you want to remove a note you have to remove it by specifying the title of the note to delete.

10
00:00:39.750 --> 00:00:45.390
So if I wanted to delete this first note I would call the remove command setting the title option equal

11
00:00:45.390 --> 00:00:47.060
to the letter T.

12
00:00:47.070 --> 00:00:50.490
Now step 2 you're going to create an export a remove.

13
00:00:50.490 --> 00:00:54.260
Note function from notes dot J s much like we have ADD.

14
00:00:54.270 --> 00:00:58.710
Note over here which takes title and body you're going to create remove.

15
00:00:58.740 --> 00:01:01.350
Note which just takes in the title.

16
00:01:01.350 --> 00:01:04.010
Step 3 you are going to call remove.

17
00:01:04.020 --> 00:01:06.790
Note in the remove command handler.

18
00:01:06.870 --> 00:01:12.240
Much like we call add note in the add command handler right here.

19
00:01:12.240 --> 00:01:14.640
Step 4 when you actually call remove.

20
00:01:14.650 --> 00:01:17.340
Note it's not going to do anything important just yet.

21
00:01:17.340 --> 00:01:19.800
That's one of the other challenges for now.

22
00:01:19.800 --> 00:01:25.710
You can go ahead and just use console dot log in that function to log out the title making sure it's

23
00:01:25.710 --> 00:01:27.500
getting passed through correctly.

24
00:01:27.510 --> 00:01:29.550
Last up you're going to test your work.

25
00:01:29.700 --> 00:01:31.610
You should be able to run this command.

26
00:01:31.620 --> 00:01:38.400
Here I am using the remove command and passing in a title and I should see this string print from a

27
00:01:38.400 --> 00:01:40.230
console log in the remove.

28
00:01:40.230 --> 00:01:45.750
Note function in notes dot J S so take some time to knock that out.

29
00:01:45.750 --> 00:01:50.970
Get everything up and running and actually test your work when you're done come back and click play

30
00:01:55.000 --> 00:01:55.660
how'd you do.

31
00:01:55.660 --> 00:01:58.260
Let's go ahead and walk through the process together.

32
00:01:58.270 --> 00:02:03.190
So step one we want to set up that title option for the remove command.

33
00:02:03.250 --> 00:02:06.220
Now the removed command is something that already exists.

34
00:02:06.220 --> 00:02:08.530
We created it several videos ago.

35
00:02:08.560 --> 00:02:14.170
We just need to customize it a little bit and remember to add an option or multiple options.

36
00:02:14.170 --> 00:02:21.250
We specify that builder property which is itself an object on here we can list out the options we want

37
00:02:21.250 --> 00:02:22.080
to support.

38
00:02:22.120 --> 00:02:27.110
In this case we just need a title so I'll set that up as an object value as well.

39
00:02:27.190 --> 00:02:31.300
Which is exactly what we did for the ad command previously.

40
00:02:31.300 --> 00:02:33.520
Next up we're going to configure title.

41
00:02:33.520 --> 00:02:38.620
I'll set up a describe property right here we could use something like.

42
00:02:38.620 --> 00:02:44.540
Note title then we can set up demand to make this a required option.

43
00:02:44.560 --> 00:02:51.970
So demand option is going to equal true and then the last property which we've set up previously and

44
00:02:51.970 --> 00:02:57.460
we're going to setup here is type and we'll be setting type equal to the string string.

45
00:02:57.460 --> 00:03:04.030
Now we have the title in place and that wraps up Step 1 we have the command ready to go.

46
00:03:04.030 --> 00:03:11.450
Step 2 We need to create an export a remove note function from notes dot J S so over here alongside

47
00:03:11.470 --> 00:03:15.270
of ADD note I'll add it down below the order is not important.

48
00:03:15.400 --> 00:03:18.570
We'll create a remove note function.

49
00:03:18.570 --> 00:03:24.220
So right here I'll set that variable up I'll create the function and as I mentioned this one just needs

50
00:03:24.220 --> 00:03:26.980
the title of the note to delete.

51
00:03:26.980 --> 00:03:30.670
Now once we have the function defined we have to make sure we export it.

52
00:03:30.700 --> 00:03:34.960
So down below on this object this needs to get export it.

53
00:03:35.020 --> 00:03:41.560
We didn't export low notes and save notes because those weren't required by any other files down below

54
00:03:42.220 --> 00:03:48.550
we are going to add remove note to the object we export and the value for that property will come from

55
00:03:48.610 --> 00:03:49.760
the remove.

56
00:03:49.900 --> 00:03:51.880
Note function variable.

57
00:03:51.880 --> 00:03:52.960
Perfect.

58
00:03:52.960 --> 00:03:59.650
Now we have it export exported and over inside of app dot J S we can go ahead and actually call it in

59
00:03:59.650 --> 00:04:01.940
the remove command handler.

60
00:04:01.990 --> 00:04:08.350
So down here in the command handler we're gonna go ahead and actually execute it.

61
00:04:08.570 --> 00:04:11.870
Now I'm gonna go ahead and call notes dot remove.

62
00:04:11.870 --> 00:04:15.710
Note we are going to pass to it just the title.

63
00:04:15.710 --> 00:04:20.880
Remember I wanted you to pass the title through and then log it from this function.

64
00:04:20.900 --> 00:04:27.470
So right here we can access that by first naming the ARG the argument like we've done previously.

65
00:04:27.470 --> 00:04:31.300
This is where we get access to all of the arguments in our handler.

66
00:04:31.430 --> 00:04:38.050
Then we're going to pass in ARG V that title which matches up with the option name we chose.

67
00:04:38.060 --> 00:04:44.720
So at this point we are passing things through to remove note and that wraps up the next step so call

68
00:04:44.720 --> 00:04:45.230
remove.

69
00:04:45.240 --> 00:04:48.500
Note indeed remove command handler.

70
00:04:48.500 --> 00:04:49.710
Next up have removed.

71
00:04:49.720 --> 00:04:52.360
Note log the title of the note to be removed.

72
00:04:52.370 --> 00:04:57.790
So for the moment we're going to add a little place holder dummy function console log.

73
00:04:57.800 --> 00:05:04.760
Just printing the title will actually wire that up in the next challenge and the final step was to test

74
00:05:04.820 --> 00:05:06.620
our works from the terminal.

75
00:05:06.650 --> 00:05:08.510
We're gonna make sure this command works.

76
00:05:08.540 --> 00:05:12.180
Let's make sure first we save the file and then we'll execute it.

77
00:05:12.230 --> 00:05:20.000
So node apt J S with remove like we have right here and I'll specify the title option listing out in

78
00:05:20.000 --> 00:05:26.930
quotes after the equal sign in the title of the note to remove and I'll just use some title as I specified

79
00:05:26.990 --> 00:05:28.070
up above.

80
00:05:28.070 --> 00:05:29.770
If I run the program what do I get.

81
00:05:29.780 --> 00:05:33.940
I get some entitled printing which is exactly what I was hoping for.

82
00:05:33.980 --> 00:05:36.440
We now have the option coming into the program.

83
00:05:36.550 --> 00:05:42.020
We've removed command knows what to do with it passing it off to remove note and now remove.

84
00:05:42.020 --> 00:05:48.500
Note has the data it needs to actually remove the note and that's gonna be the second challenge for

85
00:05:48.500 --> 00:05:54.410
this video right here the goal is to wire up the remove note function that function which currently

86
00:05:54.410 --> 00:05:56.990
just logs the title to the console.

87
00:05:57.050 --> 00:06:00.620
The first thing you have to do is make sure to load in the existing notes.

88
00:06:00.620 --> 00:06:05.050
We need an array of notes so we can actually try to remove something from it.

89
00:06:05.120 --> 00:06:10.100
Once we have that array of notes in the removed node function you're going to use the filter method

90
00:06:10.130 --> 00:06:12.310
on it like we did an add note.

91
00:06:12.440 --> 00:06:18.770
This time you're going to use the filter method to filter out the matching note if any you're going

92
00:06:18.770 --> 00:06:24.380
to keep all of the notes that didn't match so you're going to keep all of the notes whose title didn't

93
00:06:24.380 --> 00:06:26.810
match the title that was passed in.

94
00:06:26.870 --> 00:06:32.060
So this will leave you with an array of notes that should be capped and all you're going to do is use

95
00:06:32.060 --> 00:06:37.560
our existing save a functionality to save that array to our Jason File.

96
00:06:37.610 --> 00:06:39.620
Once you're done you want to test your work.

97
00:06:39.620 --> 00:06:41.750
Try it with a title that exists.

98
00:06:41.750 --> 00:06:47.080
You should see that note removed from our Jason File and the other ones should stay.

99
00:06:47.150 --> 00:06:52.730
Then try it with a title that doesn't exist and you should see no change to the Jason File.

100
00:06:52.730 --> 00:06:56.320
Take as much time as you need to wire this one up.

101
00:06:56.330 --> 00:07:01.270
Feel free to test your work use anything we've covered so far and use the internet.

102
00:07:01.280 --> 00:07:05.930
Use your Q and A in the course or whatever you need to get this challenge done.

103
00:07:05.930 --> 00:07:06.680
All right.

104
00:07:06.770 --> 00:07:10.600
Take a moment to pose the video when you're done come back and click play

105
00:07:14.610 --> 00:07:15.440
Let's get to it.

106
00:07:15.450 --> 00:07:18.400
Step one we have to load in those existing notes.

107
00:07:18.420 --> 00:07:24.410
So over in notes dot J s much like we did up above for ADD note we have to use load notes.

108
00:07:24.420 --> 00:07:29.420
So right here a new concept called Notes or called whatever you chose.

109
00:07:29.630 --> 00:07:35.780
And we will use the load notes function which takes no arguments since it's just reading data from our

110
00:07:35.780 --> 00:07:36.860
file.

111
00:07:36.860 --> 00:07:40.390
Next up we have to carry an array of the notes to keep.

112
00:07:40.390 --> 00:07:42.440
And we're going to use filter to get that done.

113
00:07:42.620 --> 00:07:48.280
So right here I can create a constant and I can call this whatever I'd like.

114
00:07:48.340 --> 00:07:55.430
I can say something like notes to keep and this will get its value from whatever comes back from notes

115
00:07:55.460 --> 00:07:58.290
Doc filter which is the method I wanted you to use.

116
00:07:58.310 --> 00:08:01.210
We used this previously to find duplicates.

117
00:08:01.250 --> 00:08:05.340
We're gonna use this now to find all of the notes we want to keep.

118
00:08:05.420 --> 00:08:11.360
I'm going to pass to it a function and we already know this function gets called one time for each note

119
00:08:11.480 --> 00:08:15.860
in the notes array and we get access to the individual object right here.

120
00:08:16.010 --> 00:08:18.990
I return true if I want to keep it in this new Array.

121
00:08:19.040 --> 00:08:21.020
I return False if I don't.

122
00:08:21.110 --> 00:08:24.890
So I want to return true when it's not a match.

123
00:08:24.890 --> 00:08:31.790
So right here that's gonna be when note that title is not equal to the title property.

124
00:08:31.790 --> 00:08:33.600
Those are the ones I want to keep.

125
00:08:33.680 --> 00:08:38.860
If the two match up I want to remove it and that will end up returning false which is correct.

126
00:08:39.530 --> 00:08:40.910
So right here what do we do.

127
00:08:40.910 --> 00:08:43.480
Well we have our new array and we have to save it.

128
00:08:43.490 --> 00:08:50.270
So I'm going to call save notes the function we already created and I am going to pass to it notes to

129
00:08:50.360 --> 00:08:50.840
keep.

130
00:08:50.840 --> 00:08:58.010
Which is our brand new array now that we have this in place we are all done and we can test out our

131
00:08:58.010 --> 00:08:58.730
work.

132
00:08:58.790 --> 00:09:04.640
I'm gonna make sure to save all of my files and we're going to use the remove command with a note that

133
00:09:04.640 --> 00:09:06.820
exists and one that does not.

134
00:09:07.010 --> 00:09:07.670
So down below.

135
00:09:07.690 --> 00:09:10.850
Let's go ahead and first try to remove a note that exists.

136
00:09:10.850 --> 00:09:16.780
I'm gonna remove this first one with a title t node app dot J.S. remove.

137
00:09:16.780 --> 00:09:20.220
We will add on that title option inside of quotes.

138
00:09:20.240 --> 00:09:26.240
After that equals sign the letter T I run the command and a couple of seconds later V.S. C should see

139
00:09:26.240 --> 00:09:28.800
the file changed and things will reload.

140
00:09:28.850 --> 00:09:32.710
If it does it you can always use this refresh button which tends to get the job done.

141
00:09:32.930 --> 00:09:35.970
Right here though I can see we now have just two notes.

142
00:09:36.080 --> 00:09:39.010
That first note was correctly removed.

143
00:09:39.050 --> 00:09:41.060
Now let's go ahead and try something else.

144
00:09:41.060 --> 00:09:46.640
I'm gonna run these same command again this time it should not find a match which means that nothing

145
00:09:46.700 --> 00:09:48.440
should change right here.

146
00:09:48.440 --> 00:09:52.210
We're just hoping that our two notes still stay in place.

147
00:09:52.250 --> 00:09:58.070
It looks like they are indeed still in place and that means everything is wired up correctly and we

148
00:09:58.070 --> 00:10:02.660
are able to successfully remove notes from our Jason File.

149
00:10:02.900 --> 00:10:08.060
Now that we have this in place we are all done with this second challenge and we're going to move on

150
00:10:08.060 --> 00:10:11.800
to the third one which is much simpler and a bit more fun.

151
00:10:11.810 --> 00:10:17.720
This is all about getting the user useful information when they run the command using the console log

152
00:10:17.900 --> 00:10:23.690
and Chuck right here the goal use chalk to provide useful logs for remove.

153
00:10:23.690 --> 00:10:27.260
So if a note is indeed removed I'd like you to print.

154
00:10:27.290 --> 00:10:34.310
Note removed with a green background if no note is removed I'd like you to print no note found with

155
00:10:34.310 --> 00:10:35.870
a red background.

156
00:10:35.930 --> 00:10:40.920
So the goal here is to let the user know exactly how things went down below.

157
00:10:41.000 --> 00:10:43.750
One of these commands worked and the other failed.

158
00:10:43.820 --> 00:10:47.720
But you wouldn't really know that based off of the output which is nothing.

159
00:10:47.810 --> 00:10:49.700
So take some time to knock that one out.

160
00:10:49.700 --> 00:10:51.940
I'm not going to give you any more hints than that.

161
00:10:51.980 --> 00:10:53.290
Actually I'll give you one hint.

162
00:10:53.300 --> 00:10:58.100
You only have to change the code in the remove note function.

163
00:10:58.130 --> 00:11:01.840
All right knocked that out when you're done come back and click play.

164
00:11:05.700 --> 00:11:06.260
All right.

165
00:11:06.270 --> 00:11:08.970
That is the last challenge for this video.

166
00:11:08.970 --> 00:11:12.040
Let's go ahead and knock it out over in notes.

167
00:11:12.060 --> 00:11:15.530
Jay s we can figure out if a note was removed or not.

168
00:11:15.600 --> 00:11:20.570
By comparing the length of our two arrays if they're the same then no note was removed.

169
00:11:20.580 --> 00:11:23.990
If they're different then we know something was indeed removed.

170
00:11:24.000 --> 00:11:27.160
So right here we can go ahead and create an if statement for that.

171
00:11:27.330 --> 00:11:38.730
If we are going to check if notes dot length is greater then notes to keep dot length.

172
00:11:38.730 --> 00:11:41.610
If it is indeed greater then we know.

173
00:11:41.640 --> 00:11:43.020
A note was removed.

174
00:11:43.020 --> 00:11:44.010
What are we going to do.

175
00:11:44.010 --> 00:11:46.380
We're gonna print our green message.

176
00:11:46.530 --> 00:11:54.040
So the first thing we have to do is load chalk into this file as it is not in ported const choc equals

177
00:11:54.100 --> 00:11:58.220
require we are requiring the chalk NPM library.

178
00:11:58.270 --> 00:12:03.840
There's no need to reinstall it as it's already installed in the project and once we have it loaded

179
00:12:03.880 --> 00:12:06.400
in we can configure it down below.

180
00:12:06.400 --> 00:12:11.370
Right here I'm going to use console dialog to print my message.

181
00:12:11.440 --> 00:12:15.380
I'll be using chalk to set up my color scheme.

182
00:12:15.460 --> 00:12:21.660
I want to use green and I'm going to inverse things to have the green background.

183
00:12:21.790 --> 00:12:26.690
Then I'm going to pass to it my message and I said I would print what did I say.

184
00:12:26.710 --> 00:12:28.930
Note removed over here.

185
00:12:29.030 --> 00:12:30.610
Note removed.

186
00:12:30.670 --> 00:12:31.580
Perfect.

187
00:12:31.600 --> 00:12:35.390
Now we can actually move these save notes call up here as well.

188
00:12:35.410 --> 00:12:39.600
There's no need to save the notes unless the length is different.

189
00:12:39.610 --> 00:12:42.480
Next up we can set up our else clause.

190
00:12:42.490 --> 00:12:49.480
This is only going to run if the notes dot length array is not greater than notes dot keep which means

191
00:12:49.600 --> 00:12:51.790
nothing was removed right here.

192
00:12:51.910 --> 00:12:58.840
We're going to print a single message using console dot log that's gonna be chalk dot red dot inverse

193
00:12:59.080 --> 00:13:00.310
passing to it.

194
00:13:00.370 --> 00:13:04.560
Our little message and I said no note found over here.

195
00:13:04.780 --> 00:13:08.690
No note found perfect.

196
00:13:08.890 --> 00:13:13.180
Now that we have this in place we can go ahead and test things out down below.

197
00:13:13.180 --> 00:13:15.020
I'm gonna save all of my files.

198
00:13:15.250 --> 00:13:17.370
I'm going to rerun the previous command.

199
00:13:17.410 --> 00:13:22.420
Now we already deleted that note as I would expect our read message and that is exactly what we got.

200
00:13:22.720 --> 00:13:30.100
No note found now rerun the previous command swapping out the title value so I'm gonna remove T from

201
00:13:30.100 --> 00:13:34.650
inside of those quotes and I'll replace it with one of my two notes over here.

202
00:13:34.690 --> 00:13:37.520
Let's go ahead and remove the note with the title list.

203
00:13:37.570 --> 00:13:41.970
Space too so down below list space 2.

204
00:13:42.210 --> 00:13:43.670
I run it and what do I get.

205
00:13:43.720 --> 00:13:47.510
I get my green message showing up which is fantastic.

206
00:13:47.530 --> 00:13:49.170
We are all done with the challenge.

207
00:13:49.180 --> 00:13:55.090
We now have the remove Kamen getting its job done and it's doing it in a way that actually provides

208
00:13:55.090 --> 00:13:57.940
useful information back to the user.

209
00:13:58.030 --> 00:14:00.990
That is it for the challenges in this video.

210
00:14:01.030 --> 00:14:05.610
I'm going to remove my challenge comments and over inside of notes J.

211
00:14:05.620 --> 00:14:07.740
S We have a nice remove.

212
00:14:07.750 --> 00:14:12.340
Note function wiring up the second of our four commands.

213
00:14:12.340 --> 00:14:14.470
We don't have ways to add a note.

214
00:14:14.470 --> 00:14:16.470
We have ways to remove a note.

215
00:14:16.540 --> 00:14:22.870
The only two left are related to reading a note and reading all your notes listing out the titles and

216
00:14:22.870 --> 00:14:26.820
we're going to knock those out in the coming lectures before we go.

217
00:14:26.830 --> 00:14:31.320
Let's actually add this chalk functionality to add note as well.

218
00:14:31.360 --> 00:14:35.260
So right here we have our new note added message.

219
00:14:35.260 --> 00:14:39.690
I'm gonna cut that string out and I'll use chalk dot right here.

220
00:14:39.700 --> 00:14:44.470
Green Dot inverse providing the same message we had before.

221
00:14:44.590 --> 00:14:51.850
Then down below that I'll use a red background for note titled taken so chalk dot red dot inverse passing

222
00:14:51.850 --> 00:14:53.840
in our string and there we go.

223
00:14:53.920 --> 00:14:55.540
That's where we're gonna stop for this one.

224
00:14:55.540 --> 00:14:58.840
I'll see you in the next video where we continue on with the program.
