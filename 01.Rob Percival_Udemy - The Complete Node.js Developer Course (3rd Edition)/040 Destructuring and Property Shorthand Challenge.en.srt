1
00:00:00,240 --> 00:00:05,820
In this video it's going to be up to you to use the object properties shorthand and d structuring which

2
00:00:05,820 --> 00:00:10,450
we covered in the last video inside of the weather application.

3
00:00:10,470 --> 00:00:16,530
Now to start I'm going to take our D structuring and object property shorthand playground file and I'll

4
00:00:16,530 --> 00:00:18,560
move that off to the right hand side.

5
00:00:18,570 --> 00:00:23,660
So we have all of our weather app scripts side by side over here and from the terminal.

6
00:00:23,670 --> 00:00:28,560
I am going to switch back into the weather app directory since we'll be running that application.

7
00:00:28,560 --> 00:00:34,120
In this lesson so S.D. dot dot forward slash weather hyphen app.

8
00:00:34,130 --> 00:00:40,710
Now once we're here the goal is to figure out what exactly we're supposed to do and as always with challenges.

9
00:00:40,860 --> 00:00:45,360
I have a set of challenged comments describing what I'd like you to get done.

10
00:00:45,460 --> 00:00:51,900
The big picture goal is to use both the destruction thing and the property shorthand syntax inside of

11
00:00:51,900 --> 00:00:53,550
the weather application.

12
00:00:53,550 --> 00:00:56,280
First up you're going to use de structuring an apt.

13
00:00:56,340 --> 00:01:04,020
J.S. forecast dot J.S. and geo code dot J S all three of these have an instance where we're using properties

14
00:01:04,050 --> 00:01:07,060
from an object that we could just d structure instead.

15
00:01:07,200 --> 00:01:13,050
Down below we grab things off of data those properties could be d structured into individual variables

16
00:01:13,530 --> 00:01:14,550
in forecast.

17
00:01:14,660 --> 00:01:21,540
J.S. end in geo coded dot J S the only thing we ever use off of the response object is body that could

18
00:01:21,540 --> 00:01:23,900
be destruction as well.

19
00:01:23,940 --> 00:01:28,110
From there we can talk about using the property shorthand syntax.

20
00:01:28,110 --> 00:01:36,120
This can be used in forecast J Yes and in geo code J S in both files we set up the options object we

21
00:01:36,120 --> 00:01:40,400
pass to request and we could use that syntax in there.

22
00:01:40,530 --> 00:01:45,840
So take some time to knock out all of those re factors in the files listed for each.

23
00:01:45,840 --> 00:01:51,750
Then when you're done test your work so make sure you can still run the application and get the expected

24
00:01:51,960 --> 00:01:53,320
weather output.

25
00:01:53,460 --> 00:01:54,030
All right.

26
00:01:54,030 --> 00:01:58,380
Pause the video knock that out and when you're done come back and click play

27
00:02:02,270 --> 00:02:03,140
how'd that go.

28
00:02:03,140 --> 00:02:09,230
I'm going to kick things off with app dot J S now in here we can use d structuring but there is no use

29
00:02:09,230 --> 00:02:17,330
case for the object property shorthand syntax and that's OK down below geo code has its callback called

30
00:02:17,330 --> 00:02:24,110
with two arguments and the first is error which is a string and the second is data and we know that

31
00:02:24,110 --> 00:02:31,430
data is an object we use three properties from it latitude longitude and location we're gonna go ahead

32
00:02:31,430 --> 00:02:38,090
and destructor those instead of accessing them off of data up above we have data I'm going to remove

33
00:02:38,090 --> 00:02:44,720
that and we are going to d structure the second argument passed to the callback right here we are gonna

34
00:02:44,720 --> 00:02:51,440
grab three things from it first up we have latitude then we're gonna have longitude and finally we're

35
00:02:51,440 --> 00:02:52,980
gonna have location.

36
00:02:53,150 --> 00:02:58,730
Now at this point our program is broken because we're still using that data variable but it no longer

37
00:02:58,730 --> 00:03:03,460
exists we're going to remove data and Dot in all three locations.

38
00:03:03,530 --> 00:03:09,380
Now we're just referencing latitude which is indeed defined we're just referencing longitude from up

39
00:03:09,380 --> 00:03:13,070
above and down below referencing location.

40
00:03:13,070 --> 00:03:17,870
Now that we have this in place we can actually test our work but more before moving on to the other

41
00:03:17,870 --> 00:03:18,830
files.

42
00:03:18,830 --> 00:03:22,500
It's always a good idea to test your work as you refactor.

43
00:03:22,550 --> 00:03:27,230
So instead of getting to the end and having a bunch of different files that could have caused the error

44
00:03:27,500 --> 00:03:32,820
it's easier to isolate the problem if you run the program multiple times.

45
00:03:32,870 --> 00:03:40,010
So node app not J S if this works with a search term like Philadelphia then we know our refactoring

46
00:03:40,010 --> 00:03:45,440
here is good if it doesn't work we know that it must just be the changes we made to this particular

47
00:03:45,440 --> 00:03:49,360
file making it easier to figure out what went wrong.

48
00:03:49,430 --> 00:03:52,340
Now let's move on to the other files forecast.

49
00:03:52,340 --> 00:04:00,290
J.S. and geo code dot J.S. both which can use de structuring and that shorthand syntax over in forecast

50
00:04:00,420 --> 00:04:07,670
J J.S. we can use these shorthand syntax in the object we pass to request instead of referencing you

51
00:04:07,670 --> 00:04:13,610
are L variable to get the U R L property we can use these shorthand syntax which does the exact same

52
00:04:13,610 --> 00:04:14,180
thing.

53
00:04:14,390 --> 00:04:20,720
This is still setting up a U R L property whose value comes from the variable up above because the names

54
00:04:20,780 --> 00:04:22,220
are identical.

55
00:04:22,280 --> 00:04:28,280
Now we can also use a little bit of distraction bring down below we have error and we have response

56
00:04:28,520 --> 00:04:33,830
we know response is an object but the only property we're ever using off of it is body.

57
00:04:33,980 --> 00:04:36,140
So we could just de structure that.

58
00:04:36,140 --> 00:04:42,830
I'll remove the response argument set up my curly races and list out body right here down below.

59
00:04:42,860 --> 00:04:48,690
We can now remove any use cases of response replacing them with just the call to bodies.

60
00:04:48,690 --> 00:04:55,490
So right here instead of response body dot error I have body dot error and I'll remove response dot

61
00:04:55,490 --> 00:05:01,370
down below I have it three times as we generate the forecast and I'll remove it in all three.

62
00:05:01,430 --> 00:05:07,770
Now we are just referencing body which does indeed exist as a standalone variable because we d structured

63
00:05:07,790 --> 00:05:09,260
it up above.

64
00:05:09,380 --> 00:05:16,160
Last up we can move to geo coded dot J S which is very similar to the forecast file I can use the shorthand

65
00:05:16,160 --> 00:05:22,600
syntax right here once again when setting up the U R L and once again I can d structure a body off of

66
00:05:22,610 --> 00:05:24,550
response.

67
00:05:24,590 --> 00:05:28,100
Now there are four situations where we used response before.

68
00:05:28,160 --> 00:05:34,190
Once you write here to fetch the length of the features array that's going to be just body dot features

69
00:05:34,190 --> 00:05:39,260
dot length now and down below we used it for each of these three property values.

70
00:05:39,350 --> 00:05:46,990
So I'm gonna take all three I'm gonna remove response dot accessing just dead body object.

71
00:05:47,080 --> 00:05:52,390
Now that we have this in place we've done all the refactoring that is steps one and two and we're going

72
00:05:52,390 --> 00:05:56,710
to move on to step three and actually test things out for a final time.

73
00:05:57,040 --> 00:05:59,230
So down below from the terminal.

74
00:05:59,230 --> 00:06:03,480
Let's go ahead and rerun the program right here.

75
00:06:03,480 --> 00:06:04,440
What do I get.

76
00:06:04,500 --> 00:06:05,790
I get my forecast.

77
00:06:05,790 --> 00:06:11,730
Still printing it is for the correct location Philadelphia Pennsylvania in the United States.

78
00:06:11,790 --> 00:06:14,250
And I have my forecast rain in the morning.

79
00:06:14,520 --> 00:06:16,950
Yep it is indeed raining outside.

80
00:06:16,980 --> 00:06:22,420
It's currently a bit chilly with a zero percent chance of rain as we continue through the day.

81
00:06:22,420 --> 00:06:29,850
And now that we have this in place we are all done and that is an introduction to yes six D structuring

82
00:06:29,880 --> 00:06:35,450
and the object property shorthand we're gonna use both of these extensively throughout the class.

83
00:06:35,460 --> 00:06:37,070
Now that we know about them.

84
00:06:37,140 --> 00:06:42,660
Sure there are other situations where we could have used these in notes Scott J S but we'll just continue

85
00:06:42,660 --> 00:06:47,040
to use these features going forward instead speaking of going forward.

86
00:06:47,070 --> 00:06:49,950
Let's go ahead and jump right in to the next video.
