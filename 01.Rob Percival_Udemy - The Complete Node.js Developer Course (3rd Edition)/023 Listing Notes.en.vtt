WEBVTT
1
00:00:00.300 --> 00:00:06.900
In this video it's gonna be up to you to wire up the list command the list command is the easiest of

2
00:00:06.900 --> 00:00:09.490
all of the commands we've created and will create.

3
00:00:09.690 --> 00:00:11.190
So let's go ahead and get to it.

4
00:00:11.190 --> 00:00:11.800
Goal.

5
00:00:11.800 --> 00:00:13.080
Wire up the command.

6
00:00:13.080 --> 00:00:15.240
There's no options required for this.

7
00:00:15.240 --> 00:00:21.750
Step one you're going to create an export a list of notes function from inside of notes dot J S which

8
00:00:21.750 --> 00:00:28.190
will be called in the correct command handler over here in app dot J S now what is list notes gonna

9
00:00:28.230 --> 00:00:28.870
do.

10
00:00:28.920 --> 00:00:33.150
Well it's going to use console dot log to print all of the notes to the terminal.

11
00:00:33.180 --> 00:00:35.800
First up you can print a header for the list.

12
00:00:35.820 --> 00:00:41.340
Say something like your notes and you can use chalk to style it in whatever looks good to you.

13
00:00:41.340 --> 00:00:47.400
Pick your favorite color and then below that you want to print out each note title and you can just

14
00:00:47.400 --> 00:00:49.710
print it using a for each loop.

15
00:00:49.710 --> 00:00:54.380
So for each note go ahead and log the title property.

16
00:00:54.390 --> 00:00:59.040
Now once you have that in place as I already mentioned make sure to actually call it from the command

17
00:00:59.040 --> 00:00:59.910
handler.

18
00:00:59.910 --> 00:01:03.450
And finally test your work now with my current data.

19
00:01:03.480 --> 00:01:08.040
I just have a single note so I would expect to see two lines print down below.

20
00:01:08.040 --> 00:01:12.830
I would expect to see your notes styled using chalk as ever I desire.

21
00:01:12.870 --> 00:01:17.130
Then below that I would expect to see all of the notes listed in this case.

22
00:01:17.130 --> 00:01:20.110
I just have one so I would see just that one.

23
00:01:20.280 --> 00:01:22.540
I'm going to go ahead and add a second one real quick.

24
00:01:22.560 --> 00:01:25.500
So we have some more interesting data right here.

25
00:01:25.500 --> 00:01:33.060
I'll go ahead and add course ideas as a note and I'll leave the body empty which is perfectly fine.

26
00:01:33.570 --> 00:01:39.240
So now that we have this in place we have a second note showing up in the data giving us some more interesting

27
00:01:39.300 --> 00:01:43.080
output when we actually write and test the list.

28
00:01:43.080 --> 00:01:46.880
Command take as much time as you need to knock this one out.

29
00:01:46.890 --> 00:01:53.930
Test your work and when you're done come back and click play.

30
00:01:54.020 --> 00:01:55.310
All right let's get to it.

31
00:01:55.310 --> 00:01:57.190
We're gonna kick things off in notes Don.

32
00:01:57.250 --> 00:02:01.920
Jay asks creating that list notes function I can add this wherever I'd like.

33
00:02:01.970 --> 00:02:08.930
I'm gonna put it right below remove note so a new concept list notes and from now on we'll be sticking

34
00:02:08.930 --> 00:02:13.630
with Arrow functions when we can and in this case we can indeed use an arrow function.

35
00:02:13.640 --> 00:02:16.730
Now we can't use the shorthand syntax but that's OK.

36
00:02:16.730 --> 00:02:21.210
List notes isn't going to take in any arguments but we do need to export it.

37
00:02:21.230 --> 00:02:28.780
So down below I'll be setting up list notes and the value for that property will come from the list

38
00:02:28.810 --> 00:02:31.070
notes variable defined up above.

39
00:02:31.120 --> 00:02:34.720
Making sure we can actually use it in other files.

40
00:02:34.720 --> 00:02:41.190
Now let's go ahead and call list notes in app dot J S so we have our handler down below.

41
00:02:41.350 --> 00:02:46.930
It is the third command we set up currently it just says listing out all the notes.

42
00:02:46.930 --> 00:02:53.560
We're gonna remove that and we're gonna add a call to notes dot list notes.

43
00:02:53.560 --> 00:02:54.680
Excellent.

44
00:02:54.700 --> 00:03:02.130
Now that we have this in place we've technically done steps 1 and steps 2 but we haven't finished up

45
00:03:02.140 --> 00:03:03.070
step 1.

46
00:03:03.070 --> 00:03:06.460
So let's actually define the function over here.

47
00:03:06.580 --> 00:03:12.700
We're gonna go through the process of first printing our title and for this one I'm going to use console

48
00:03:12.760 --> 00:03:20.260
dialog to print the your notes message and I'll use chalk and I'm just going to inverse the colors if

49
00:03:20.260 --> 00:03:27.730
I can ever spell it correctly and I will print your notes the exact styling you used wasn't important.

50
00:03:27.760 --> 00:03:29.470
You could go with whatever you wanted.

51
00:03:29.550 --> 00:03:33.160
And next up we have to print something for each note.

52
00:03:33.190 --> 00:03:38.560
Now we don't have the notes we have to load them using the load notes function.

53
00:03:38.560 --> 00:03:45.400
So we're going to add that first right here const notes equals a call to load notes.

54
00:03:45.460 --> 00:03:50.860
So we're getting the return value back our array of notes and we're storing it in that notes variable

55
00:03:51.100 --> 00:03:51.890
down below.

56
00:03:52.150 --> 00:03:57.250
We can now use notes dot for each to do something for each note.

57
00:03:57.310 --> 00:03:59.150
In this case what are we going to do.

58
00:03:59.170 --> 00:04:02.130
Well we'll define that in our function down below.

59
00:04:02.140 --> 00:04:06.660
This function gets called one time for each note with the individual note object.

60
00:04:06.730 --> 00:04:10.860
And I mentioned I just wanted you to print the title so console.

61
00:04:10.960 --> 00:04:14.460
Note dot title is going to get the job done.

62
00:04:14.770 --> 00:04:20.940
Now that we have this in place we're actually done and we can move on to Step 3 and test our work.

63
00:04:20.980 --> 00:04:23.410
I'm gonna make sure all my files are saved.

64
00:04:23.410 --> 00:04:24.630
Down below.

65
00:04:24.730 --> 00:04:28.050
That's gonna be node app dot J s list.

66
00:04:28.090 --> 00:04:30.550
This should list out all of the notes right here.

67
00:04:30.550 --> 00:04:31.400
What do I get.

68
00:04:31.510 --> 00:04:39.100
I get your notes undefined and undefined so I am not seeing the individual note titles and I can see

69
00:04:39.100 --> 00:04:39.660
right away.

70
00:04:39.670 --> 00:04:42.850
That's because I've missed spelled title.

71
00:04:42.940 --> 00:04:48.070
Now once again I'm gonna leave this typo in proving that not everyone's perfect and most errors are

72
00:04:48.070 --> 00:04:52.820
related to small changes out of all of the questions I get any Q and A.

73
00:04:52.870 --> 00:04:57.250
I'd say maybe 50 or 60 percent are just small one line typos.

74
00:04:57.250 --> 00:05:01.030
So right here I will simply fix my code.

75
00:05:01.030 --> 00:05:02.720
I'll rerun the command again.

76
00:05:02.830 --> 00:05:05.460
And now we're getting the results we expected.

77
00:05:05.470 --> 00:05:11.710
I have my styled title and I have my two items showing up down below matching up with the two notes

78
00:05:11.740 --> 00:05:14.240
I have in my Jason File.

79
00:05:14.320 --> 00:05:19.690
That is it for this quick video in creating the list command in the next one.

80
00:05:19.690 --> 00:05:24.120
We are going to create the last command we need for this application.

81
00:05:24.190 --> 00:05:25.840
That is the read command.

82
00:05:25.870 --> 00:05:27.280
I'm excited to get to that.

83
00:05:27.310 --> 00:05:30.250
So let's go ahead and jump right in to the next one.
