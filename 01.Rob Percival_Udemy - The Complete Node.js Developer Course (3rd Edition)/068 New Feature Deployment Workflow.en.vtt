WEBVTT
1
00:00:00.300 --> 00:00:05.940
In this video we're going to work through the new feature workflow so we have an existing application

2
00:00:05.940 --> 00:00:08.490
and we're ready to add something new to it.

3
00:00:08.490 --> 00:00:13.560
Obviously we know how we can change the code and get things working locally but we want to make sure

4
00:00:13.560 --> 00:00:17.700
we can get those changes up on github and Heroku as well.

5
00:00:17.700 --> 00:00:20.310
So we're gonna work through the process once together.

6
00:00:20.310 --> 00:00:26.510
Then you'll do it once on your own as the challenge for the video what we're going to do together is

7
00:00:26.510 --> 00:00:31.700
add some text to the about page describing where the data is coming from.

8
00:00:31.700 --> 00:00:37.280
That is your challenge for the video you're going to go ahead and add some new data into the forecast

9
00:00:37.280 --> 00:00:38.560
that comes back.

10
00:00:38.630 --> 00:00:44.270
So over inside of the terminal let's kick things off by starting up our local development server when

11
00:00:44.270 --> 00:00:49.940
we're adding a new feature we want to start by testing things out locally before shipping those code

12
00:00:49.940 --> 00:00:51.420
changes to the user.

13
00:00:51.440 --> 00:00:55.420
It's a bad idea to just write some code and deploy to production.

14
00:00:55.460 --> 00:00:59.540
We've got to make sure it works first even if it's a small change.

15
00:00:59.540 --> 00:01:06.920
So from the terminal we're going to start up node on no demand source forward slash app dot J S providing

16
00:01:07.010 --> 00:01:08.570
our extension list.

17
00:01:08.720 --> 00:01:16.130
J.S. comma H B S now once this is up and running we should be able to access our site from local host

18
00:01:16.280 --> 00:01:18.320
three thousand once again.

19
00:01:18.320 --> 00:01:20.840
And this is still gonna work like it did before.

20
00:01:21.050 --> 00:01:26.780
Even though we made changes in the last video getting the app ready for Heroku right here.

21
00:01:26.780 --> 00:01:30.670
If I search for Boston I can still correctly get the weather.

22
00:01:30.680 --> 00:01:33.980
Our goal though is to make a change to the about page.

23
00:01:34.040 --> 00:01:36.450
So let's go ahead and pull that up.

24
00:01:36.560 --> 00:01:43.430
I'm going to close all open editors and from the templates directory I'll move into the views folder

25
00:01:43.550 --> 00:01:50.360
and I'm going to open up about Dot HP s all I'm going to do is add a single paragraph right here below

26
00:01:50.360 --> 00:01:54.290
the header and above the image inside of that paragraph.

27
00:01:54.320 --> 00:02:00.500
I'm going to put some text describing exactly what this website is all about right here.

28
00:02:00.500 --> 00:02:04.750
This site was created by I'll put my name.

29
00:02:04.760 --> 00:02:08.310
You can put your name since you did indeed create it.

30
00:02:08.330 --> 00:02:17.300
It uses data from map box dot com and dark sky dot net.

31
00:02:17.360 --> 00:02:21.870
So here all I'm doing is adding a little bit of text into the application.

32
00:02:22.100 --> 00:02:27.360
Now after making the change the first thing we want to do is test things locally.

33
00:02:27.380 --> 00:02:29.660
I'll be saving the HB S. file.

34
00:02:29.660 --> 00:02:33.790
I'll be refreshing the page and making sure that my text shows up.

35
00:02:33.830 --> 00:02:34.520
It does.

36
00:02:34.520 --> 00:02:35.730
Which is great.

37
00:02:35.810 --> 00:02:41.330
Now that things are working locally we can go through the process of getting those changes pushed to

38
00:02:41.360 --> 00:02:44.050
get hub and to Heroku.

39
00:02:44.090 --> 00:02:49.250
So from the terminal the first thing we need to do is commit the changes right here.

40
00:02:49.250 --> 00:02:52.810
I'm going to run and get status to see exactly what's going on.

41
00:02:52.820 --> 00:02:59.730
We just have a single modified file I'll use get add dot to add that to the staging area.

42
00:02:59.780 --> 00:03:07.190
Then I'll create my commit get commit with the M flag to provide the message for the commit and I can

43
00:03:07.190 --> 00:03:11.030
use something like add about text.

44
00:03:11.120 --> 00:03:16.360
Now from here we are going to create the commit and now we need to push it up to get hub.

45
00:03:16.460 --> 00:03:22.200
So the code is backed up and up to date on that platform and we're going to push it up to Heroku.

46
00:03:22.280 --> 00:03:27.260
So our application gets redeployed right now on the live app.

47
00:03:27.260 --> 00:03:30.320
If I go over to the About Page what do I have.

48
00:03:30.320 --> 00:03:32.290
I don't have that text.

49
00:03:32.300 --> 00:03:34.060
Let's fix it right here.

50
00:03:34.130 --> 00:03:36.290
First up get push.

51
00:03:36.380 --> 00:03:40.980
This is equivalent to get push origin master.

52
00:03:41.000 --> 00:03:46.440
This is the command that's going to allow us to push up to the get hub remote.

53
00:03:46.490 --> 00:03:49.720
Once we round this all the code will be updated there.

54
00:03:49.730 --> 00:03:54.070
Next up we're gonna use get push Heroku master.

55
00:03:54.290 --> 00:04:00.560
This is going to push our latest comments up to her Roku which will redeploy our application allowing

56
00:04:00.560 --> 00:04:03.450
users to access the latest changes.

57
00:04:03.530 --> 00:04:07.420
This command should take just 15 seconds or so like it did before.

58
00:04:07.520 --> 00:04:13.220
And once it's done we'll be able to view those latest changes over on the live Web site.

59
00:04:13.250 --> 00:04:15.020
All right things are done over here.

60
00:04:15.050 --> 00:04:22.280
Let's test our work out over at get hub dot com I am going to give the repo page a refresh and I can

61
00:04:22.280 --> 00:04:28.820
see my latest changes are indeed showing up the templates directory was last updated a minute ago which

62
00:04:28.850 --> 00:04:30.110
is indeed correct.

63
00:04:30.230 --> 00:04:32.510
And then I'm gonna head over to her Roku app.

64
00:04:32.510 --> 00:04:38.870
You RL and refresh the about page when I do my text is showing up so there it is.

65
00:04:38.900 --> 00:04:44.360
That's all we need to do to add a new feature into the application and get it pushed up to get hub and

66
00:04:44.360 --> 00:04:45.940
deployed to Heroku.

67
00:04:45.950 --> 00:04:48.470
Now it's your turn to do the same.

68
00:04:48.500 --> 00:04:51.830
I have some challenged comments outlining what I'd like you to do.

69
00:04:51.830 --> 00:04:59.090
To start I am going to close down about Dot HP s and collapse the templates and public directory in

70
00:04:59.090 --> 00:05:00.550
the utilise folder.

71
00:05:00.590 --> 00:05:07.700
You're gonna be making some changes to forecast dot J S this is where we actually generate the forecast

72
00:05:07.760 --> 00:05:10.390
string that shows up in the browser.

73
00:05:10.400 --> 00:05:14.030
Your goal is to add some additional information inside of there.

74
00:05:14.030 --> 00:05:16.220
So right here we have the challenge comments.

75
00:05:16.220 --> 00:05:16.810
Goal.

76
00:05:16.910 --> 00:05:23.180
Add new data to the forecast Step 1 update any forecast string to include the new data.

77
00:05:23.180 --> 00:05:29.690
Step 2 You want to commit your changes after testing things locally then you're going to push your changes

78
00:05:29.750 --> 00:05:36.740
up to get hub and deploy them to Heroku and finally you're going to test your work in the live application.

79
00:05:36.740 --> 00:05:43.250
So you should be able to crack open the Heroku you are L fetch the forecast for a given location and

80
00:05:43.250 --> 00:05:46.640
see the new data you've included showing up.

81
00:05:46.640 --> 00:05:51.500
Now if you're looking for some inspiration as to what to include you could include some information

82
00:05:51.500 --> 00:05:54.680
about the temperature high and low for the day.

83
00:05:54.680 --> 00:06:01.070
This is available on that daily data object which we actually used to grab the summary.

84
00:06:01.110 --> 00:06:06.160
So on here there are other properties which you can explore to grab the high and low temperature.

85
00:06:06.290 --> 00:06:12.800
Then you could include something in the string saying the high today is fifty nine with a low of 38

86
00:06:12.980 --> 00:06:17.470
that you'd use the real data values instead of fifty nine and thirty eight.

87
00:06:17.510 --> 00:06:22.850
All right take some time to knock that out adding that data or any other data you'd like to see in the

88
00:06:22.850 --> 00:06:23.650
forecast.

89
00:06:23.660 --> 00:06:27.340
Test your work and when you're done come back and click play

90
00:06:31.200 --> 00:06:31.950
how that go.

91
00:06:31.950 --> 00:06:33.570
Let's go ahead and get to it.

92
00:06:33.570 --> 00:06:40.650
The first thing I'm gonna do is console dot log out the daily data object so we can figure out exactly

93
00:06:40.650 --> 00:06:43.110
what data we're going to add to the output.

94
00:06:43.590 --> 00:06:50.090
So right here I'll use console dot log so we can take a look at what properties we have available that

95
00:06:50.090 --> 00:06:50.540
will be.

96
00:06:50.540 --> 00:06:58.530
Body dot Daily Dot data grabbing the first day's data exactly like we do down below right here for the

97
00:06:58.530 --> 00:06:59.700
summary.

98
00:06:59.700 --> 00:07:04.410
Now I'm going to save the forecast dot J.S. file from the terminal.

99
00:07:04.410 --> 00:07:11.580
I'll use NPM run start to start up the application and then I'm just going to mess around with the app

100
00:07:11.640 --> 00:07:13.710
over inside of the browser.

101
00:07:13.710 --> 00:07:20.160
So here I have local host three thousand what I'm going to do is just search for the whether for anywhere

102
00:07:20.640 --> 00:07:28.230
I'll use Philadelphia click search and hopefully over here in the terminal we do see that daily object

103
00:07:28.260 --> 00:07:30.470
and that is exactly what we're getting.

104
00:07:30.480 --> 00:07:35.970
So right here we have a few different options when it comes to exactly what we want to include what

105
00:07:35.970 --> 00:07:40.020
we're gonna do is include the temperature high and temperature low.

106
00:07:40.020 --> 00:07:46.980
So right here I have temperature high with the value of thirty nine point nine in temperature low with

107
00:07:46.980 --> 00:07:50.220
the value of thirty three point four seven.

108
00:07:50.220 --> 00:07:56.770
So these are the two properties we're going to include in our string message to actually get this done

109
00:07:56.770 --> 00:08:03.060
and we can now go ahead and remove the console dialog call since we know what data we want to work with

110
00:08:03.510 --> 00:08:11.430
and over inside of our callback call on line 20 over going to do is manipulate what exactly we are sending

111
00:08:11.430 --> 00:08:12.300
back.

112
00:08:12.330 --> 00:08:18.740
So we start off with the summary and then we say it is currently x degrees out from there.

113
00:08:18.740 --> 00:08:21.750
What I'm going to do is add the next piece of data.

114
00:08:22.200 --> 00:08:29.760
So what I'm going to say is the high today is followed by the temperature high with a low of the temperature

115
00:08:29.880 --> 00:08:31.260
low right here.

116
00:08:31.260 --> 00:08:33.760
Let's go ahead and knock that out.

117
00:08:33.780 --> 00:08:40.640
Let's start with the high today is followed by a space.

118
00:08:40.660 --> 00:08:43.790
Now what we're going to do here is inject some data.

119
00:08:43.950 --> 00:08:47.620
So to get that done I will close off that string.

120
00:08:47.760 --> 00:08:54.110
I will open up the next one and right here I'll use the plus operator to concatenate them together.

121
00:08:54.120 --> 00:08:59.790
Now I actually want to add some more data inside of there so we'll add another plus operator.

122
00:08:59.820 --> 00:09:04.170
And right here we're going to set up the temperature high.

123
00:09:04.170 --> 00:09:12.250
So that's going to be a body dot Daily Dot data grabbing the first day's data.

124
00:09:12.250 --> 00:09:16.980
Then dot followed by a temperature Hi.

125
00:09:16.980 --> 00:09:18.060
Perfect.

126
00:09:18.180 --> 00:09:24.630
Now after that what we're going to do is continue on with our string message and we'll include the temperature

127
00:09:24.840 --> 00:09:25.710
low.

128
00:09:25.710 --> 00:09:30.690
So right here I'll use the plus operator again to add a little more static text.

129
00:09:31.050 --> 00:09:38.040
So after the temperature high I'll say space with a low of then right here.

130
00:09:38.040 --> 00:09:41.080
This is where I'm going to put the temperature low.

131
00:09:41.160 --> 00:09:49.370
So once again I'll use the plus operator to inject a dynamic value right inside that will be body dot

132
00:09:49.560 --> 00:09:52.860
Daily Dot data grabbing the first day's data.

133
00:09:53.130 --> 00:09:57.310
And this time it is temperature low.

134
00:09:57.310 --> 00:09:58.410
Perfect.

135
00:09:58.420 --> 00:10:02.710
Now with this in place we can wrap up with just a little more static text.

136
00:10:02.710 --> 00:10:09.460
So right here after I show that temperature low I'm going to add a period and a space just to make sure

137
00:10:09.460 --> 00:10:13.630
the two sentences are actually separated appropriately.

138
00:10:13.630 --> 00:10:17.650
Now once again you could have made any sort of customization you liked.

139
00:10:17.650 --> 00:10:22.200
In this case I chose to add the temperature high and temperature low.

140
00:10:22.240 --> 00:10:24.830
So at this point we have completed step 1.

141
00:10:24.880 --> 00:10:28.860
We have updated the forecast string to include the new data.

142
00:10:28.870 --> 00:10:34.210
Let's go ahead and run the program one more time just to make sure it's showing up locally if it is

143
00:10:34.420 --> 00:10:37.240
we'll get it running in production as well.

144
00:10:37.270 --> 00:10:43.660
So I started up the app I'll refresh the browser and I'm going to search for a location like Philae

145
00:10:44.320 --> 00:10:49.600
right here and as fetch to the weather and I can see the high today is thirty nine point nine with a

146
00:10:49.600 --> 00:10:52.930
low of thirty three point four seven.

147
00:10:52.930 --> 00:10:54.070
Fantastic.

148
00:10:54.070 --> 00:10:58.000
So now that we have this in place let's continue on with the challenge.

149
00:10:58.000 --> 00:11:01.340
The next thing we need to do is commit our changes.

150
00:11:01.390 --> 00:11:08.010
So right here I'll use control C to shut down the app and clear to clear the terminal output.

151
00:11:08.290 --> 00:11:11.330
Now up above I have my challenge comments in place.

152
00:11:11.350 --> 00:11:15.930
I'm going to take a quick moment to remove those so they don't get committed.

153
00:11:16.090 --> 00:11:20.350
And with all of the files saved we're now ready to add our commit.

154
00:11:20.410 --> 00:11:26.200
Let's go ahead and start with get status just to see what changes we have right here.

155
00:11:26.200 --> 00:11:28.840
We can see we have a couple of changes now.

156
00:11:28.930 --> 00:11:32.060
You have changes to files that I don't have here.

157
00:11:32.080 --> 00:11:37.870
I actually had to re film this part of the lesson since it got lost when I was recording and I had to

158
00:11:37.930 --> 00:11:41.310
update both of my api keys because they had changed.

159
00:11:41.320 --> 00:11:43.100
I had manually changed them.

160
00:11:43.180 --> 00:11:47.050
So you should only see a change to forecast dot J s here.

161
00:11:47.080 --> 00:11:50.020
Sorry for the confusion on that.

162
00:11:50.020 --> 00:11:56.350
Now that we have this in place we want to commit our changes so get at DOT followed by get commit with

163
00:11:56.350 --> 00:12:00.060
the M flag so we can provide our message right here.

164
00:12:00.070 --> 00:12:06.690
Something like add high and low to forecast is going to get the job done.

165
00:12:06.790 --> 00:12:10.600
Now once we've committed those changes we want to do two things.

166
00:12:10.600 --> 00:12:16.660
One we want to push them up to get hub and make sure they show up there and to we want to push them

167
00:12:16.660 --> 00:12:24.250
to Heroku and test out the production version of our server down below in the terminal to get that done.

168
00:12:24.250 --> 00:12:29.050
The first thing we're going to do is use clear to clear the terminal output.

169
00:12:29.050 --> 00:12:35.010
Next we're going to use get push to push our changes up to get hub right here.

170
00:12:35.030 --> 00:12:37.600
That should wrap up in just a couple of seconds.

171
00:12:37.600 --> 00:12:40.040
All of our changes have been pushed.

172
00:12:40.180 --> 00:12:47.110
And the next thing we're going to do after using clear is push all of our changes up to Heroku.

173
00:12:47.290 --> 00:12:53.140
I want to make sure that I can see the temperature highs and lows in the production version of our app

174
00:12:53.200 --> 00:12:54.400
as well.

175
00:12:54.400 --> 00:13:00.660
So right here that's going to be get push followed by Heroku master.

176
00:13:00.760 --> 00:13:05.750
That's going to allow us to deploy the latest version of our project.

177
00:13:05.830 --> 00:13:07.770
Let's go ahead and run the command.

178
00:13:07.770 --> 00:13:11.120
All right here it is attempting to deploy to Heroku.

179
00:13:11.230 --> 00:13:14.580
So it's going through the same process it's gone through before.

180
00:13:14.710 --> 00:13:20.200
And once this is done and we're just going to test things out over in the browser I'm gonna make sure

181
00:13:20.200 --> 00:13:21.820
that I do see that data.

182
00:13:21.910 --> 00:13:25.720
It looks like the new app is launching and it launched successfully.

183
00:13:26.010 --> 00:13:32.510
So over in the browser I'm going to refresh the production Heroku you are all right here.

184
00:13:32.560 --> 00:13:37.220
I'll navigate over to the weather page and I'll get the weather for Austin.

185
00:13:37.270 --> 00:13:40.170
I'm going to fire off these search and what do I see.

186
00:13:40.170 --> 00:13:46.270
I see my new data the high in Austin is 76 with a low of forty five.

187
00:13:46.330 --> 00:13:49.760
What I wouldn't do for those temperatures right now.

188
00:13:49.780 --> 00:13:50.500
All right.

189
00:13:50.500 --> 00:13:55.120
So there we go we have a brand new feature added and deployed.

190
00:13:55.130 --> 00:13:57.910
That's where we're going to stop for this one.

191
00:13:57.910 --> 00:14:01.540
There's just one video left in this section and it's coming up next.

192
00:14:01.540 --> 00:14:03.970
So stay tuned and I'll see you then.
