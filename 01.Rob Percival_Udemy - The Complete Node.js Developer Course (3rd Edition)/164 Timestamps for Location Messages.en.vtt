WEBVTT
1
00:00:00.300 --> 00:00:01.110
Welcome back.

2
00:00:01.110 --> 00:00:06.340
In this lesson it's going to be up to you to add timestamps for our location messages.

3
00:00:06.340 --> 00:00:11.580
So over here in the browser if I send my location it is indeed going to work.

4
00:00:11.580 --> 00:00:15.240
The problem is that what we're going to get back is just the link.

5
00:00:15.240 --> 00:00:18.770
We want to make sure to include a timestamp here as well.

6
00:00:18.780 --> 00:00:24.000
Now I have a series of challenged comments outlining what I'd like you to do and I'm going to go ahead

7
00:00:24.000 --> 00:00:27.020
and paste those right here below my templates.

8
00:00:27.150 --> 00:00:31.140
Right here the goal is to add timestamps for those location messages.

9
00:00:31.140 --> 00:00:39.290
Step one you want to create a new function called generate location message in the messages file alongside

10
00:00:39.300 --> 00:00:42.930
of the one we created for our standard messages.

11
00:00:42.930 --> 00:00:47.480
Now the new function should return an object in the following format.

12
00:00:47.490 --> 00:00:54.240
We're gonna have U.R.L. with the actual U.R.L. instead of the text string and we'll still have created

13
00:00:54.240 --> 00:00:56.010
at storing a timestamp.

14
00:00:56.220 --> 00:01:00.980
So it's similar to what we have for the standard message though slightly different.

15
00:01:01.020 --> 00:01:05.690
We're gonna have the U.R.L. passed in and added to the object instead.

16
00:01:05.700 --> 00:01:09.160
Next up you want to use generated location.

17
00:01:09.180 --> 00:01:15.870
That should be generate location message when the server emits the location message event.

18
00:01:15.870 --> 00:01:21.360
So when the server is emitting that event right now it's just sending back the U.R.L. we want to make

19
00:01:21.360 --> 00:01:24.130
sure in a past that you well through our function.

20
00:01:24.180 --> 00:01:27.230
So it ends up emitting an object.

21
00:01:27.360 --> 00:01:33.720
Then on the client we want to update the template to show the time just before it shows that you are

22
00:01:33.720 --> 00:01:34.520
real.

23
00:01:34.560 --> 00:01:42.050
And finally we need to make sure that we adjust the event listener for on location message ensuring

24
00:01:42.060 --> 00:01:44.410
that it passes in the correct data.

25
00:01:44.520 --> 00:01:51.840
When compiling the template it needs to provide the U.R.L. and the time which now both exist on the

26
00:01:51.840 --> 00:01:57.930
object and you're going to want to go ahead and format that time like we did with our other messages

27
00:01:58.380 --> 00:01:58.920
last up.

28
00:01:58.920 --> 00:02:05.280
Test your work if everything's working well you should see a timestamp showing up just before the link.

29
00:02:05.400 --> 00:02:12.040
Exactly like we're seeing up above the principles here are identical to what we did in the last video.

30
00:02:12.060 --> 00:02:15.300
So feel free to use that code as a reference.

31
00:02:15.300 --> 00:02:19.560
Take some time to get this done and when you're done come back and click play

32
00:02:23.510 --> 00:02:24.290
how that go.

33
00:02:24.290 --> 00:02:28.170
Hopefully you were able to get that done without too much trouble.

34
00:02:28.190 --> 00:02:32.110
There was quite a few different files to touch you had to edit all four.

35
00:02:32.150 --> 00:02:34.130
So let's go ahead and get started.

36
00:02:34.160 --> 00:02:42.340
First up over in messages will end up creating a new function const generate location message.

37
00:02:42.380 --> 00:02:48.560
This is going to take in the EU RL And right here we're going to set up an arrow function that returns

38
00:02:48.590 --> 00:02:56.480
the object we'll have the u are L property like we had up above with text and then we'll set up created

39
00:02:56.510 --> 00:03:02.430
at new date then get time.

40
00:03:02.460 --> 00:03:03.440
Perfect.

41
00:03:03.450 --> 00:03:10.740
So with this in place we can go ahead and export the function down below that is generate location message

42
00:03:11.040 --> 00:03:15.150
and once it's exported we're ready to move on to index downtown J.

43
00:03:15.150 --> 00:03:18.300
S. and make sure this function is actually used.

44
00:03:18.600 --> 00:03:24.340
So before we use it right here up top we want to go ahead and load it in.

45
00:03:24.390 --> 00:03:34.410
So I'm going to load in generate location message and down below we'll actually use the function.

46
00:03:34.410 --> 00:03:37.770
So right here this is the U.R.L. we want to provide.

47
00:03:37.830 --> 00:03:44.790
I'm gonna cut it out of its current location then I'm going to call generate location message and I'll

48
00:03:44.790 --> 00:03:51.300
go ahead and pass it right in now one thing you'll notice is that we've created this function and it

49
00:03:51.330 --> 00:03:56.440
technically could also calculate the static parts of the U.R.L. as well.

50
00:03:56.550 --> 00:04:01.760
That wasn't part of the challenge but if you did go that route that is perfectly fine as well.

51
00:04:01.770 --> 00:04:04.810
There are a lot of different ways we could structure this.

52
00:04:04.830 --> 00:04:11.400
The important thing at this point though is that when the server omits that location message it is sending

53
00:04:11.400 --> 00:04:13.350
back an object.

54
00:04:13.350 --> 00:04:19.980
Now that means over in chat dot J S we have to anticipate that object because currently we were looking

55
00:04:19.980 --> 00:04:21.390
for just a string.

56
00:04:21.420 --> 00:04:22.750
A You are real.

57
00:04:23.100 --> 00:04:29.880
So right here what I'm gonna do is call the U R L something different like message then down below as

58
00:04:29.880 --> 00:04:32.340
the value for the U R L property.

59
00:04:32.460 --> 00:04:38.250
I will grab message dot you are l like we were doing before so we're still providing the same value

60
00:04:38.250 --> 00:04:44.460
we're now just getting it off of the object from here we can also bring the data into the mix so we

61
00:04:44.460 --> 00:04:50.220
are going to want to render that in the template which means in index dot HDMI all we have to put it

62
00:04:50.220 --> 00:04:53.640
somewhere in our template which is this one right here.

63
00:04:53.640 --> 00:04:59.670
And as mentioned I just wanted you to put it right before the link so I'll add these same sort of structure

64
00:04:59.670 --> 00:05:06.400
we had up above that would be the date created at followed by a hyphen followed by the link.

65
00:05:06.480 --> 00:05:12.000
Now we can go ahead and make sure that created and gets provided when we render that template.

66
00:05:12.000 --> 00:05:20.000
So right here created and we are going to use moment to format message dot created at.

67
00:05:20.280 --> 00:05:23.120
And I'll go ahead and use that same pattern.

68
00:05:23.150 --> 00:05:29.660
So right here that is format followed by h colon m m space a.

69
00:05:29.910 --> 00:05:31.080
Excellent.

70
00:05:31.080 --> 00:05:36.990
Now that we have this in place we're ready to move on to Step Five which is to just test our work so

71
00:05:36.990 --> 00:05:43.020
we're generating an object on the server sending back the timestamp and we're taking advantage of that

72
00:05:43.020 --> 00:05:45.110
time stamp on the client.

73
00:05:45.150 --> 00:05:49.950
The only other thing we have to alter is our console log call right here.

74
00:05:49.950 --> 00:05:54.370
Right here we are trying to log out U.R.L. which no longer exists.

75
00:05:54.420 --> 00:06:00.180
I'll just continue to log out the message object so we can see exactly what we're getting back over

76
00:06:00.180 --> 00:06:00.880
in the browser.

77
00:06:00.900 --> 00:06:03.220
We just need to give things a refresh.

78
00:06:03.480 --> 00:06:05.790
We can see our timestamp showing up.

79
00:06:05.790 --> 00:06:12.030
I'm going to go ahead and share my location and right here I'm getting a timestamp along with that link

80
00:06:12.360 --> 00:06:17.430
down below I can see the object I'm getting back it has both of those properties which is great.

81
00:06:17.540 --> 00:06:23.400
And if I click the link it should open up a new tab pulling up my location in Google Maps and there

82
00:06:23.400 --> 00:06:23.950
we go.

83
00:06:24.510 --> 00:06:31.170
So now that we have this in place we have a really good system for working with time in our chat application.

84
00:06:31.170 --> 00:06:34.020
Now in this case we're formatting it in this format.

85
00:06:34.020 --> 00:06:40.230
If you wanted to include other parts of the times such as the month day of the month or the year you're

86
00:06:40.230 --> 00:06:42.700
more than welcome to do that as well.

87
00:06:42.720 --> 00:06:46.480
This is just the setup that I'm going to use going forward.

88
00:06:46.620 --> 00:06:51.960
With this in place we're ready to continue on to the next lesson and what we're going to focus on is

89
00:06:51.960 --> 00:06:58.350
getting some styles in place for the chat application taking it from looking like this to looking like

90
00:06:58.350 --> 00:07:00.930
something you'd actually want to use.

91
00:07:00.930 --> 00:07:02.580
I'm excited to get to that.

92
00:07:02.610 --> 00:07:04.770
So let's jump in to the next lesson.
