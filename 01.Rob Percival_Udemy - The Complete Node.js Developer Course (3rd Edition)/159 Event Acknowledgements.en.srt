1
00:00:00,210 --> 00:00:04,130
In this lesson you're going to learn about event acknowledgements in socket.

2
00:00:04,140 --> 00:00:04,630
Done.

3
00:00:04,690 --> 00:00:12,030
Oh now as the name suggests an event acknowledgement allows the receiver of the event to acknowledge

4
00:00:12,030 --> 00:00:15,250
that it received and processed the event now.

5
00:00:15,360 --> 00:00:22,680
An example use case for this would be sending a location or sending a message the client sends the location

6
00:00:22,710 --> 00:00:29,310
or the message off to the server but it's never quite sure that the server received it and actually

7
00:00:29,310 --> 00:00:35,490
did something with it with an acknowledgement the client would get notified that the message or the

8
00:00:35,490 --> 00:00:38,900
location was indeed delivered successfully.

9
00:00:38,940 --> 00:00:44,520
So that's what we're going to focus on setting up and we'll start this process over inside a Visual

10
00:00:44,520 --> 00:00:48,220
Studio code in chat dot J S.

11
00:00:48,240 --> 00:00:54,510
Now for the moment what I'm gonna do is just paste in a couple of comments just to solidify this idea

12
00:00:54,570 --> 00:00:55,690
one more time.

13
00:00:55,890 --> 00:01:03,540
So if the server omits the event that means the client is the receiver the client can send back an acknowledgement

14
00:01:03,540 --> 00:01:10,050
to the server allowing the server to know that the client processed it the same thing works in the other

15
00:01:10,050 --> 00:01:10,890
direction.

16
00:01:11,100 --> 00:01:16,830
If the client is emitting the event that means the server is receiving it and the server could send

17
00:01:16,830 --> 00:01:18,770
an acknowledgment back.

18
00:01:18,840 --> 00:01:24,930
Now obviously acknowledgements are optional since we haven't been using them so far so let's go ahead

19
00:01:24,930 --> 00:01:29,280
and see how we would actually implement these into our project to get started.

20
00:01:29,280 --> 00:01:36,420
We'll work with our send a message event which is emitted from the client and received by the server.

21
00:01:36,420 --> 00:01:43,500
Now an acknowledgement is the client getting notified that the event was received and processed and

22
00:01:43,500 --> 00:01:48,790
the code that's going to run is provided as the last argument to omit.

23
00:01:48,810 --> 00:01:50,880
So we have our event name.

24
00:01:50,880 --> 00:01:54,800
We have as many arguments for the data as we want to in this case.

25
00:01:54,810 --> 00:01:58,390
It's just one it could be 0 it could be 6.

26
00:01:58,470 --> 00:02:02,170
Then we provide a function as the final argument.

27
00:02:02,220 --> 00:02:09,990
This is going to run when the event is acknowledged and we're going to do is use console dialog to say

28
00:02:09,990 --> 00:02:15,360
something like the message was delivered perfect.

29
00:02:15,360 --> 00:02:21,030
Now with this in place what we need to do is make a change to the server as well.

30
00:02:21,030 --> 00:02:27,820
Right now the client is expecting this event to be acknowledged but it's never going to be acknowledged.

31
00:02:27,840 --> 00:02:32,750
We fix that by making a very small change to the event listener.

32
00:02:32,880 --> 00:02:38,930
So over in index dot J s what we do is we find the event listener for that event.

33
00:02:38,940 --> 00:02:45,120
In this case it's right here and we set up another parameter for the callback function.

34
00:02:45,210 --> 00:02:53,250
Right here we add a final one on called callback or something similar and we call this to acknowledge

35
00:02:53,250 --> 00:02:55,100
the event right here.

36
00:02:55,110 --> 00:03:01,140
I can call it at the bottom of the function after I've shared the message with everyone.

37
00:03:01,140 --> 00:03:06,270
Now with this in place we have a basic acknowledgement set up over in the browser.

38
00:03:06,300 --> 00:03:07,960
Let's test this out.

39
00:03:08,010 --> 00:03:12,470
So what I'm going to do is refresh the browser and I will send a message.

40
00:03:12,480 --> 00:03:14,380
This is a test.

41
00:03:14,460 --> 00:03:17,650
I'll send it I can see the message down below.

42
00:03:17,820 --> 00:03:23,580
And after it was delivered I have my little confirmation letting me know that my message was delivered

43
00:03:23,610 --> 00:03:25,300
successfully.

44
00:03:25,350 --> 00:03:30,960
Now when the server sends the acknowledgment back to the client it could also choose to provide some

45
00:03:30,960 --> 00:03:31,670
data.

46
00:03:31,860 --> 00:03:37,970
So as an example right here I could provide as many arguments to this function as I wanted to.

47
00:03:37,980 --> 00:03:46,100
For now I could just say something like delivered and then over inside of chat not J.S. I would have

48
00:03:46,130 --> 00:03:48,200
access to that argument.

49
00:03:48,230 --> 00:03:52,640
So over here this function is now going to get called.

50
00:03:52,640 --> 00:03:54,360
With that single argument.

51
00:03:54,500 --> 00:03:59,410
I could call it something like message and I could use the message down below.

52
00:03:59,540 --> 00:04:04,550
Right here what I'll do is just add it as the second argument to console dot loc.

53
00:04:04,610 --> 00:04:05,870
Perfect.

54
00:04:05,870 --> 00:04:10,390
I'll save all my files and make sure that shows up so over in the browser.

55
00:04:10,400 --> 00:04:13,720
Once again just giving things a quick refresh.

56
00:04:13,760 --> 00:04:20,480
I'll type test I'll click send I can see the message was delivered and I can see the message that the

57
00:04:20,480 --> 00:04:24,550
server sent to the client as part of the acknowledgement.

58
00:04:24,560 --> 00:04:25,810
And there we go.

59
00:04:25,850 --> 00:04:27,890
Everything is working really well.

60
00:04:28,280 --> 00:04:34,940
So once again an acknowledgement requires changes on the client and the server whoever is emitting the

61
00:04:34,940 --> 00:04:37,740
event sets up a callback function.

62
00:04:37,820 --> 00:04:43,230
Whoever is receiving the event receives a callback function that it needs to call.

63
00:04:43,280 --> 00:04:49,010
And as we just explored if it wanted to it could optionally send data back and forth.

64
00:04:49,070 --> 00:04:53,330
Now a great use case for acknowledgement could be something like validation.

65
00:04:53,360 --> 00:04:59,640
So maybe for example I don't want to allow messages that contain profane language.

66
00:04:59,640 --> 00:05:05,180
Now obviously that's up to the developer to determine whether or not they want to allow that but for

67
00:05:05,180 --> 00:05:08,340
an example let's say we want to avoid that language.

68
00:05:08,390 --> 00:05:13,970
There is actually an NPM module we can use to integrate this into our project.

69
00:05:13,970 --> 00:05:22,430
If we head over to the browser you can google NPM bad hyphen words and this is the module we'll be using

70
00:05:22,790 --> 00:05:29,930
bad words comes to pretty populated with a list of bad words and as the documentation below shows you

71
00:05:29,930 --> 00:05:33,620
can add your own bad words to be excluded.

72
00:05:33,620 --> 00:05:39,950
Now what we're going to do is reject any message that contains foul language so let's go ahead and start

73
00:05:39,950 --> 00:05:45,850
by installing this library and see how we can use event acknowledgments to get this done.

74
00:05:45,980 --> 00:05:52,310
So down below what I'm going to do is use control C to shut things down and then I'm going to install

75
00:05:52,310 --> 00:06:01,250
that library NPM I followed by bad hyphen words at three point zero point zero from here.

76
00:06:01,250 --> 00:06:07,640
We're gonna go ahead and run the installer once that's done and we'll start up our dev server once again

77
00:06:08,000 --> 00:06:11,480
by using the up arrow key twice and hitting Enter.

78
00:06:11,480 --> 00:06:15,490
And now we're going to integrate bad words into our project.

79
00:06:15,530 --> 00:06:23,160
So first up we have to load that module in up top const uppercase f filter equals.

80
00:06:23,180 --> 00:06:29,180
This is what comes back from requiring the bad words library if you want to learn more about what the

81
00:06:29,180 --> 00:06:36,780
bad words library can do you can always check out the documentation then down below inside of that function.

82
00:06:36,830 --> 00:06:42,880
We're going to go ahead and actually use it to check for profanity in this string a message.

83
00:06:42,890 --> 00:06:47,750
So right here the first thing we have to do is initialize bad words.

84
00:06:47,750 --> 00:06:55,040
So we're going to create a constant lowercase f filter and that is going to be a new instance of filter

85
00:06:55,550 --> 00:07:00,560
and then we're going to use a method on there called is profane.

86
00:07:00,560 --> 00:07:06,650
That's going to return either true or false and we'll use that in an if statement to determine what

87
00:07:06,650 --> 00:07:08,320
we want to do right here.

88
00:07:08,360 --> 00:07:15,980
If we are going to use a filter dot and we can see there are a few methods here I can add profane words

89
00:07:15,980 --> 00:07:24,020
to filter I can clean the profanity in the message replacing the profane words with the actress symbol

90
00:07:24,320 --> 00:07:30,980
I'm using is profane though to just check for profanity and right here I pass that message in.

91
00:07:31,040 --> 00:07:35,670
Now once again we're gonna get true if it is profane and false otherwise.

92
00:07:35,720 --> 00:07:43,070
So right here this code is only going to run if it is profane and what we're going to do is use return

93
00:07:43,070 --> 00:07:48,950
to stop the function execution and I'm going to call the callback with an error message.

94
00:07:49,040 --> 00:07:54,880
Something along the lines of profanity is not allowed.

95
00:07:56,060 --> 00:07:57,150
Perfect.

96
00:07:57,170 --> 00:08:03,890
Now with this in place down below we can go ahead and only omit the message when there is no profanity

97
00:08:04,310 --> 00:08:08,740
and I'll still call the callback to acknowledge that I did send things off.

98
00:08:08,870 --> 00:08:15,590
This time though I'm not going to provide any arguments so I provide a single string with an error message

99
00:08:15,590 --> 00:08:17,300
when an error occurs.

100
00:08:17,300 --> 00:08:21,140
Otherwise I provide nothing like I'm doing down below.

101
00:08:21,140 --> 00:08:27,020
Now on the client we can go ahead and while you're right up to actually work with this information over

102
00:08:27,010 --> 00:08:30,940
here what I'm going to do in chat dot Jay s is the following.

103
00:08:31,130 --> 00:08:31,900
Right here.

104
00:08:32,030 --> 00:08:38,630
I'm going to change the message parameter over to something a little more explicit like error and then

105
00:08:38,630 --> 00:08:43,910
we're going to set up some code to run and we'll use a condition inside of here.

106
00:08:43,910 --> 00:08:46,400
If there is an error we'll do one thing.

107
00:08:46,400 --> 00:08:48,690
Otherwise we'll do something else.

108
00:08:48,770 --> 00:08:52,820
So if there is an error I will stop the function execution and I'll print it.

109
00:08:52,820 --> 00:09:00,310
Console log error if there is no error I can go ahead and print something like console dialog.

110
00:09:00,440 --> 00:09:03,170
Message delivered perfect.

111
00:09:03,170 --> 00:09:07,010
Now with this in place we should be able to test out our changes.

112
00:09:07,010 --> 00:09:12,400
So what I'm going to do is save a chat dot J.S. over inside of the browser.

113
00:09:12,410 --> 00:09:17,270
We're going to refresh our application and I'm going to send off a regular message.

114
00:09:17,270 --> 00:09:21,440
This is a test I click send or hit enter.

115
00:09:21,500 --> 00:09:26,420
I can see my message shows up and message delivered to Prince which is great.

116
00:09:26,420 --> 00:09:32,480
Now I'll type hell in the box hit enter and down below I can see profanity is not allowed.

117
00:09:32,720 --> 00:09:35,250
So that message was never sent out.

118
00:09:35,300 --> 00:09:36,460
All I got back.

119
00:09:36,500 --> 00:09:38,460
As the sender was an error.

120
00:09:38,480 --> 00:09:41,480
No one else even knew I tried to send it.

121
00:09:41,570 --> 00:09:46,800
So acknowledgments can do a lot for us when it comes to creating real time applications.

122
00:09:46,850 --> 00:09:52,100
And now that you know how to use them you're gonna be setting up an acknowledgement for these send.

123
00:09:52,100 --> 00:09:58,340
Location event as well down below I have some challenge comments outlining what I'd like you to do.

124
00:09:58,490 --> 00:10:03,950
So right here I'll paste those in the goal setting up acknowledgement for send location.

125
00:10:04,110 --> 00:10:09,380
Now since the event is being emitted from the client the first thing you're gonna want to do is set

126
00:10:09,380 --> 00:10:12,290
up the acknowledgement function on the client.

127
00:10:12,290 --> 00:10:15,010
Much like we did for send a message.

128
00:10:15,030 --> 00:10:21,590
Then on the server you want to make sure that the server sends back the acknowledgement by calling that

129
00:10:21,590 --> 00:10:22,640
callback.

130
00:10:22,640 --> 00:10:27,310
Now in this case there's no need to call it with any arguments whatsoever.

131
00:10:27,380 --> 00:10:33,650
You can just call it after the location has indeed been shared with all of those connected clients.

132
00:10:33,740 --> 00:10:39,770
Now when the function on the client runs what do you want to do when the event is acknowledged.

133
00:10:39,770 --> 00:10:45,590
You're just going to print something like location shared to the console then test your work.

134
00:10:45,590 --> 00:10:52,820
Open up the application in two windows have a one person share the location you should see the location

135
00:10:52,880 --> 00:10:59,570
show up for both Windows and the one who shared the location should have the acknowledgement message

136
00:10:59,630 --> 00:11:00,620
as well.

137
00:11:00,710 --> 00:11:04,810
Take some time to knock that out and when you're done come back and click play

138
00:11:08,830 --> 00:11:09,640
how that go.

139
00:11:09,640 --> 00:11:14,760
Let's get started by providing a function as the final argument to emit.

140
00:11:14,770 --> 00:11:17,080
So right here I'm going to set that up.

141
00:11:17,080 --> 00:11:23,830
That's step 1 step 2 is to make sure that the server actually sends back an acknowledgement for send

142
00:11:23,830 --> 00:11:26,460
location so over in index.

143
00:11:26,460 --> 00:11:32,350
And Jay asks We have to find send location and we have to set up that callback parameter right here

144
00:11:32,950 --> 00:11:34,210
callback or something.

145
00:11:34,240 --> 00:11:41,410
Similarly named now after we emit the message we're gonna go ahead and call the callback letting the

146
00:11:41,410 --> 00:11:45,610
client know that the event has indeed been acknowledged.

147
00:11:45,610 --> 00:11:51,850
Right here we can go ahead and save that as it's the only change we need to make to the server from

148
00:11:51,880 --> 00:11:58,570
chat dot Jay S. we can move on to Step number three when the event is acknowledged we're gonna print

149
00:11:58,600 --> 00:12:00,000
location shared.

150
00:12:00,130 --> 00:12:06,820
So right here in that function we created console dialog printing location shared.

151
00:12:07,060 --> 00:12:08,110
Excellent.

152
00:12:08,110 --> 00:12:12,270
Now with this in place the only thing left to do is to test our work.

153
00:12:12,280 --> 00:12:16,120
So what I'm going to do is go ahead and remove the challenge comments.

154
00:12:16,120 --> 00:12:21,790
Make sure all of my files are saved and I'll head over to the browser right here.

155
00:12:21,820 --> 00:12:23,950
I have my first window.

156
00:12:23,980 --> 00:12:30,430
I'll also go ahead and create a second window cracking open the developer tools for that as well and

157
00:12:30,430 --> 00:12:33,970
I'll navigate over to local host three thousand.

158
00:12:33,980 --> 00:12:40,240
Now I'm going to send the location as this second to user I click the button in a second or two the

159
00:12:40,240 --> 00:12:43,390
location should indeed show up and it does.

160
00:12:43,390 --> 00:12:49,010
And the person who actually sent the location has the acknowledgement message right here.

161
00:12:49,060 --> 00:12:52,660
Location shared is printing which is fantastic.

162
00:12:52,660 --> 00:12:57,940
Now that we have this in place we're all done with acknowledgements acknowledgements are really useful

163
00:12:57,940 --> 00:13:00,130
for real time applications.

164
00:13:00,160 --> 00:13:06,050
It allows the event emitter to make sure that everything actually went as expected.

165
00:13:06,100 --> 00:13:11,590
Now that we have this in place in the next lesson we're going to focus on tying acknowledgements and

166
00:13:11,590 --> 00:13:20,330
socket dot o into the interface providing a clearer UI for users so they know what exactly is happening.

167
00:13:20,380 --> 00:13:22,010
I'm excited to get to that.

168
00:13:22,030 --> 00:13:25,300
So let's go ahead and jump right in to the next lesson.
