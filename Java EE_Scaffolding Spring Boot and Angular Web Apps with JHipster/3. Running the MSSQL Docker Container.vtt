WEBVTT
1
00:00:02.472 --> 00:00:04.460
The first step in deployment of the application is to

2
00:00:04.460 --> 00:00:06.806
ensure that we have a running database.

3
00:00:06.806 --> 00:00:09.143
If you remember from project generation,

4
00:00:09.143 --> 00:00:13.338
I selected Microsoft SQL Server as the production database.

5
00:00:13.338 --> 00:00:18.383
As a result, JHipster generated a docker file named mssql.

6
00:00:18.383 --> 00:00:21.251
yml, in the folder src/main/docker.

7
00:00:21.251 --> 00:00:28.027
Using docker, I can run an instance of Microsoft SQL server in a container,

8
00:00:28.027 --> 00:00:31.195
rather than installing it on a server or locally.

9
00:00:31.195 --> 00:00:34.806
Though, please evaluate the best option for your application.

10
00:00:34.806 --> 00:00:37.261
Note again that I won't be showing you the

11
00:00:37.261 --> 00:00:38.897
installation of docker in this course.

12
00:00:38.897 --> 00:00:40.922
I'm displaying the full YML file that was generated,

13
00:00:40.922 --> 00:00:45.764
but I want to just focus on one change that we need to make to the file.

14
00:00:45.764 --> 00:00:46.063
Earlier,

15
00:00:46.063 --> 00:00:48.751
we updated the application configuration to use a new

16
00:00:48.751 --> 00:00:51.963
password for the SA account in the database.

17
00:00:51.963 --> 00:00:53.190
As you can see,

18
00:00:53.190 --> 00:00:57.176
the password will also need to be updated here for the SA account.

19
00:00:57.176 --> 00:00:59.795
Let's do that now.

20
00:00:59.795 --> 00:01:03.033
I've opened up Eclipse, and I have the mssql.

21
00:01:03.033 --> 00:01:04.832
yml file in the editor.

22
00:01:04.832 --> 00:01:05.060
Again,

23
00:01:05.060 --> 00:01:09.050
we need to match the SA account password to the one that we set in

24
00:01:09.050 --> 00:01:11.549
the application properties for this example.

25
00:01:11.549 --> 00:01:14.233
Let's change the value to be Password with a capital P,

26
00:01:14.233 --> 00:01:17.958
the number 1, and an exclamation point.

27
00:01:17.958 --> 00:01:21.838
Okay, now our password matches the application configuration.

28
00:01:21.838 --> 00:01:25.210
However, we still have one gap with the configuration.

29
00:01:25.210 --> 00:01:27.593
This docker file will start up the database server,

30
00:01:27.593 --> 00:01:30.819
but it won't pre- create the database for us.

31
00:01:30.819 --> 00:01:34.870
Let's look at how we can go about doing that.

32
00:01:34.870 --> 00:01:35.917
To create the database,

33
00:01:35.917 --> 00:01:39.386
I'm going to use the tool Microsoft SQL Server Management Studio.

34
00:01:39.386 --> 00:01:42.137
I'm not going to demonstrate installation,

35
00:01:42.137 --> 00:01:45.180
however, you can download and install it from the bit.

36
00:01:45.180 --> 00:01:46.702
ly link that I've provided.

37
00:01:46.702 --> 00:01:50.739
You can also simply Google for the product name to find the download link.

38
00:01:50.739 --> 00:01:54.221
Once you've downloaded and installed the tool, you can proceed.

39
00:01:54.221 --> 00:01:59.125
Now that we have all the tools we need, let's get the database up and running.

40
00:01:59.125 --> 00:02:01.882
I'll start with opening a command window to run the

41
00:02:01.882 --> 00:02:04.438
Microsoft SQL Server docker container.

42
00:02:04.438 --> 00:02:08.448
I'll be running the command, docker-compose.

43
00:02:08.448 --> 00:02:12.493
I'll then include the docker file name using the -f flag,

44
00:02:12.493 --> 00:02:16.475
include the up flag to denote that we're starting the container,

45
00:02:16.475 --> 00:02:21.171
and the -d flag to run in detached mode from the console.

46
00:02:21.171 --> 00:02:22.960
After the docker container is started,

47
00:02:22.960 --> 00:02:26.864
I'll open up SQL Server Management Studio and demonstrate creating the

48
00:02:26.864 --> 00:02:30.658
application database with the name PatientPortal.

49
00:02:30.658 --> 00:02:32.901
Let's get started.

50
00:02:32.901 --> 00:02:34.881
In order to run the SQL Server docker container,

51
00:02:34.881 --> 00:02:39.629
there are two configurations that I needed to make to docker for Windows.

52
00:02:39.629 --> 00:02:42.105
I'm displaying the docker settings form.

53
00:02:42.105 --> 00:02:44.184
Start by clicking on Shared Drives.

54
00:02:44.184 --> 00:02:49.924
Make sure to check your main drive to be Shared, then click Apply.

55
00:02:49.924 --> 00:02:51.680
Next, click the Advanced tab.

56
00:02:51.680 --> 00:02:59.944
You will need to increase the memory to be at least 4 GB, then click Apply.

57
00:02:59.944 --> 00:03:01.245
With these settings in place,

58
00:03:01.245 --> 00:03:04.979
we should be able to successfully run the database in docker.

59
00:03:04.979 --> 00:03:09.416
I've opened a PowerShell window and navigated to the project directory.

60
00:03:09.416 --> 00:03:12.904
To run the container I'm going to execute the

61
00:03:12.904 --> 00:03:16.111
docker-compose command that I mentioned earlier.

62
00:03:16.111 --> 00:03:16.874
And hit Enter.

63
00:03:16.874 --> 00:03:19.936
Now note that this may take you time to download the image,

64
00:03:19.936 --> 00:03:24.430
but once the command is finished, you can run the command of docker ps,

65
00:03:24.430 --> 00:03:27.678
to assert that it's running.

66
00:03:27.678 --> 00:03:30.743
And here we see that the container is up and running.

67
00:03:30.743 --> 00:03:34.657
Now let's go ahead with creating the database.

68
00:03:34.657 --> 00:03:36.478
I've opened up SQL Server Management Studio,

69
00:03:36.478 --> 00:03:38.740
where I've been prompted with a login.

70
00:03:38.740 --> 00:03:43.785
For this example, we're using the default Server name of localhost,

71
00:03:43.785 --> 00:03:46.238
and Login of sa.

72
00:03:46.238 --> 00:03:51.984
Let's enter the Password as capital P, the number 1, and an exclamation point.

73
00:03:51.984 --> 00:03:52.222
Great.

74
00:03:52.222 --> 00:03:53.410
I'm able to log in,

75
00:03:53.410 --> 00:03:57.925
so that means the configuration for the password in the docker file worked.

76
00:03:57.925 --> 00:04:01.726
Now, I need to expand the databases selection.

77
00:04:01.726 --> 00:04:06.773
Next I'll right-click on Databases, and select a New Database.

78
00:04:06.773 --> 00:04:09.124
I'm going to enter the database name as PatientPortal,

79
00:04:09.124 --> 00:04:12.154
all as one word, with both Ps capitalized.

80
00:04:12.154 --> 00:04:17.108
I'll leave the rest as the default, and click OK.

81
00:04:17.108 --> 00:04:20.119
And our database got created.

82
00:04:20.119 --> 00:04:22.652
Note that I'm going to use Liquibase to generate our schema,

83
00:04:22.652 --> 00:04:25.992
but it's likely in a real production application that you'll deploy your

84
00:04:25.992 --> 00:04:29.885
database schema through an automated script as the next step.

85
00:04:29.885 --> 00:04:36.000
Now that the database is created and running, we can continue with application deployment.

