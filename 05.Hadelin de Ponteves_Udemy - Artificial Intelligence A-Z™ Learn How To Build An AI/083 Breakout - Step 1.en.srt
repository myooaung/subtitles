1
00:00:00,330 --> 00:00:07,100
Hello and welcome to the third module of discourse the H-3 sea as synchronous active critic agents.

2
00:00:07,200 --> 00:00:11,850
And so now I can really say welcome to the State of the art machine learning.

3
00:00:12,180 --> 00:00:16,560
Well at the time I'm saying this because maybe some of you will take the course in one to two years

4
00:00:16,590 --> 00:00:20,080
but at the time I'm saying this in 2017.

5
00:00:20,190 --> 00:00:25,410
Well you are about to work on one of the most powerful model in artificial intelligence but there is

6
00:00:25,410 --> 00:00:28,780
more that is not the only special thing about this module.

7
00:00:28,830 --> 00:00:35,280
Not only we're about to work with the most powerful model but we are going to implement the most powerful

8
00:00:35,280 --> 00:00:42,630
version of this algorithm that is the most optimized version implemented version of the A-380 model

9
00:00:42,990 --> 00:00:47,030
because you can imagine that there is the heart of the algorithm.

10
00:00:47,190 --> 00:00:50,880
But then there are a lot of tools that we can use to optimize the whole model.

11
00:00:50,970 --> 00:00:55,110
And so not only are you going to have the heart of the way through the algorithm but are also going

12
00:00:55,110 --> 00:00:59,450
to implement all these tools around it to make the model super powerful.

13
00:00:59,670 --> 00:01:01,490
And why did I want to do that.

14
00:01:01,590 --> 00:01:03,110
Well that's for two reasons.

15
00:01:03,120 --> 00:01:06,210
The first reason is that we are approaching the end of discourse.

16
00:01:06,210 --> 00:01:10,770
This course is the highest level course between the three courses and they'll deal in AI.

17
00:01:10,870 --> 00:01:14,340
It is that now I think you're ready to take it to the next level.

18
00:01:14,400 --> 00:01:19,230
And the second reason is that solving breakout is actually super challenging.

19
00:01:19,230 --> 00:01:24,270
Remember in the promo video we wanted to put break out as the first module because we thought it would

20
00:01:24,270 --> 00:01:29,410
be the easiest challenge but not at all it was actually the most difficult challenge and easier way

21
00:01:29,400 --> 00:01:36,060
of explaining this is that well in doom the monsters are big and therefore easier to detect and therefore

22
00:01:36,060 --> 00:01:37,620
easier to kill or avoid.

23
00:01:37,830 --> 00:01:44,160
But in Breakout we have this tiny ball that the eye has to detect as well because the eye will still

24
00:01:44,160 --> 00:01:44,810
have eyes.

25
00:01:44,800 --> 00:01:47,670
You we're still going to do deep reinforcement learning.

26
00:01:47,910 --> 00:01:53,340
So it's actually super challenging and that's why we don't really have a choice to implement.

27
00:01:53,340 --> 00:01:59,080
The most powerful version of the A-3 see now why do I say this is the most powerful version.

28
00:01:59,120 --> 00:02:00,350
That's for a particular reason.

29
00:02:00,350 --> 00:02:05,270
It's not like I'm saying that I'm going to implement the most powerful version of the A-380.

30
00:02:05,460 --> 00:02:06,420
No it's not this.

31
00:02:06,540 --> 00:02:11,550
The reason I'm saying this is that the version we were about to implement and this is something very

32
00:02:11,550 --> 00:02:18,090
special we're going to do is actually a version of the 3 C that was implemented by somebody but corrected

33
00:02:18,240 --> 00:02:23,910
by one of the most influential people in machine learning today who happens to be the creator of Pi

34
00:02:23,910 --> 00:02:24,810
torch.

35
00:02:24,810 --> 00:02:27,330
His name is Dan Pashka.

36
00:02:27,710 --> 00:02:28,840
Now what we're going to do.

37
00:02:29,040 --> 00:02:35,430
We're going to go on get have on the main page and if you scroll down down to the end down to the bottom

38
00:02:35,790 --> 00:02:40,700
you will see the team the team fight arch creators and contributors.

39
00:02:40,800 --> 00:02:45,500
And you can see here that my torch is currently maintained by Adam Pascal.

40
00:02:45,690 --> 00:02:51,340
That's the person who we should really be grateful for because there are very few versions of the three

41
00:02:51,340 --> 00:02:57,120
things that work well for breakout and he corrected one of the code for the A-380 to make breakout work

42
00:02:57,120 --> 00:02:58,470
perfectly well.

43
00:02:58,470 --> 00:03:04,320
So Pascal is not only maintaining By towards But also he is one of the creative by torch and as I said

44
00:03:04,320 --> 00:03:08,090
today he's in the top 10 most influential people in machine learning.

45
00:03:08,190 --> 00:03:13,500
So we can feel confident that the version we are about to implement is probably the most powerful version

46
00:03:13,500 --> 00:03:15,050
of the A-3 see today.

47
00:03:15,240 --> 00:03:17,580
And so what is this implementation.

48
00:03:17,760 --> 00:03:23,100
Well originally it comes from a developer called iliac history of.

49
00:03:23,220 --> 00:03:29,400
And so as you can see he did a by towards implementation of the A3 C which originally didn't work well

50
00:03:29,400 --> 00:03:32,950
for breakout but then somebody made a pull request.

51
00:03:32,970 --> 00:03:39,170
If we go to the pool request here we can see in the close one that we go we have this one a cleaner

52
00:03:39,170 --> 00:03:41,030
solution to Gretchen problem.

53
00:03:41,190 --> 00:03:43,810
And guess who this pull request was made from.

54
00:03:43,950 --> 00:03:51,060
It was made from Adam Pashka created by torch and that solved the problem that makes the A-380 work

55
00:03:51,060 --> 00:03:54,720
very well on break out without waiting for days and days.

56
00:03:55,200 --> 00:04:01,950
And therefore if we go back to this implementation we can see the four contributors of this most powerful

57
00:04:01,950 --> 00:04:02,900
implementation.

58
00:04:03,180 --> 00:04:04,590
And here are the contributors.

59
00:04:04,590 --> 00:04:10,380
So thank you very much to all of them and we can say a huge and special thank you to Adam passion for

60
00:04:10,380 --> 00:04:12,810
fixing the thread sharing problem.

61
00:04:12,810 --> 00:04:16,590
He started by doing a fork which is a subbranch of the code.

62
00:04:16,590 --> 00:04:20,970
And then he did a pull request to the developer to fix this problem.

63
00:04:20,970 --> 00:04:26,790
There wasn't a code which is a great and sharing problem and that's how he became a major contributor

64
00:04:26,790 --> 00:04:32,850
of this implementation making the whole thing work perfectly well and trust me I did a lot of experimentation

65
00:04:33,000 --> 00:04:36,390
on the AC DC model actually implemented five models.

66
00:04:36,390 --> 00:04:41,430
I was even desperate that it didn't work well so I made my own breakout and cavy to have a bigger ball

67
00:04:41,550 --> 00:04:44,300
and therefore an easier pre-processing of the images.

68
00:04:44,340 --> 00:04:48,780
Then I went back to the eye and made my own implementation of the 3C.

69
00:04:48,860 --> 00:04:53,280
But that took ages to run and train on a pretty powerful computer.

70
00:04:53,460 --> 00:04:55,190
So I wanted to find a better way.

71
00:04:55,380 --> 00:04:56,990
And that's the way it is.

72
00:04:57,150 --> 00:05:03,460
Very powerful implementation of the Silmaril of which one of the major contributors is the Creator by

73
00:05:03,530 --> 00:05:04,530
torch.

74
00:05:04,580 --> 00:05:11,270
So what we're going to do in this Mudgal I think you're ready for that is implement this highest level

75
00:05:11,270 --> 00:05:13,980
code for the implementation of the A3.

76
00:05:14,060 --> 00:05:19,720
So we're basically going to reimplement all these files and we will mostly insist on the files that

77
00:05:19,720 --> 00:05:24,650
are directly related to the three C all the parts that are directly related to the we see.

78
00:05:24,680 --> 00:05:27,800
We will implement the code line by line for the others.

79
00:05:27,820 --> 00:05:33,290
I will just expand the code so we should be able to tackle this without finding it too overwhelming

80
00:05:33,850 --> 00:05:36,150
so that we go quite a special module.

81
00:05:36,170 --> 00:05:42,220
Not only we work in a state of the art model of AI but also at the time I'm speaking and highly confident

82
00:05:42,230 --> 00:05:45,730
we are implementing the most powerful version of the A-380.

83
00:05:46,070 --> 00:05:47,050
So let's do it.

84
00:05:47,090 --> 00:05:51,740
Let's go back to Python and let's start all this before we start.

85
00:05:51,770 --> 00:05:54,800
We're going to do the most simple thing we're going to do in this module.

86
00:05:54,830 --> 00:05:56,870
Setting the working directory folder.

87
00:05:57,080 --> 00:06:02,660
Let's go to our AI is that template folder modules we break out most challenging one.

88
00:06:02,930 --> 00:06:03,830
And there we go.

89
00:06:03,830 --> 00:06:05,070
That's all our files.

90
00:06:05,240 --> 00:06:09,130
So let's see which ones are directly related to A-3 C.

91
00:06:09,200 --> 00:06:11,610
And so let's see which ones we're going to implement.

92
00:06:11,690 --> 00:06:14,770
Line by line and focus our energy on.

93
00:06:14,840 --> 00:06:16,450
So there are actually two files.

94
00:06:16,490 --> 00:06:22,250
The first one is not all the way which is this one so we will re-implemented line by line because that's

95
00:06:22,250 --> 00:06:25,450
the most important that's where we make the A-3 see brains.

96
00:06:25,550 --> 00:06:30,590
And the most important thing to understand here is that we will have a shared model which will have

97
00:06:30,590 --> 00:06:34,340
the same data of the weights for the actor and the critic.

98
00:06:34,370 --> 00:06:39,490
That's a part of this special version of the A-3 see the shared model with the shared data the weights

99
00:06:40,130 --> 00:06:43,890
and then the other most important founder to implement.

100
00:06:43,910 --> 00:06:51,270
Line by line is the trained up wildfowl of course right after we made the brains of the see.

101
00:06:51,500 --> 00:06:55,940
Well we have to train them and we train them in this train that I wife.

102
00:06:56,180 --> 00:07:02,720
So this is quite a long code but this is what contains the heart of the A3 C model which will have to

103
00:07:02,720 --> 00:07:08,900
Lass's to reduce the value in the US which is the last related to the predictions of the critic and

104
00:07:09,230 --> 00:07:14,640
the policy last which is the last related to the predictions of the atom.

105
00:07:14,840 --> 00:07:20,570
So this is quite new but you know that's because the A-380 were basically working with several agents

106
00:07:20,810 --> 00:07:23,210
each one having their own copy of the environment.

107
00:07:23,330 --> 00:07:28,790
We also have this fully connected layer that outputs a value of the function and that basically is a

108
00:07:28,790 --> 00:07:31,540
common vision of what's happening in the game.

109
00:07:31,550 --> 00:07:34,130
So this will be quite challenging.

110
00:07:34,220 --> 00:07:40,840
So make sure be in good shape and for the rest of the fellows Well I will just explain them in detail

111
00:07:40,880 --> 00:07:45,810
but not by spending too much time on them believe me you want to keep your energy for this.

112
00:07:45,830 --> 00:07:47,110
This will be already a lot.

113
00:07:47,150 --> 00:07:55,490
So these fellows are ants ducky Y which is an improvement of the gym environment thanks to universe.

114
00:07:55,490 --> 00:08:00,920
So basically that just improves the gym environment with universe and that allows us to have an optimal

115
00:08:00,920 --> 00:08:07,150
pre-processing of the images and also to normalize all the values of the environment like the colors

116
00:08:07,160 --> 00:08:10,160
intensities or the rewards intensities.

117
00:08:10,280 --> 00:08:15,710
Well all the values of the environment this file normalizes all these values and also make sure we have

118
00:08:15,800 --> 00:08:18,110
enough to not keep processing of the images.

119
00:08:18,170 --> 00:08:24,720
And as you can see this is taken from this opening I get her page where the universe story agent.

120
00:08:24,830 --> 00:08:28,870
So we will not spend too much time on this we will actually stop here.

121
00:08:28,910 --> 00:08:34,390
You just need to understand that we improved the gym environment with universe to get enough to not

122
00:08:34,390 --> 00:08:36,390
be processing of the images.

123
00:08:36,440 --> 00:08:39,900
The rest is not that important especially for the PC.

124
00:08:40,340 --> 00:08:45,190
Then we have main that P Y which is the code that will execute the whole thing.

125
00:08:45,200 --> 00:08:50,190
So you know the code that will run the whole thing create the brain train the brain and output the video.

126
00:08:50,210 --> 00:08:53,810
And that's because it will run all these codes here.

127
00:08:54,350 --> 00:08:57,700
So more we saw where it was then may have turned up.

128
00:08:57,710 --> 00:09:00,130
Why is the special optimizer.

129
00:09:00,380 --> 00:09:06,240
That's basically the atom optimizer but adapted to this shared model that we're implementing.

130
00:09:06,260 --> 00:09:09,290
So we will explain all this code in one tutorial.

131
00:09:09,290 --> 00:09:11,490
Then we have test W-why.

132
00:09:11,530 --> 00:09:13,610
It's actually the last one to test.

133
00:09:13,610 --> 00:09:17,410
Q Why is basically the file that will implement a test agent.

134
00:09:17,510 --> 00:09:22,440
So there is an agent that will play break out without updating the model.

135
00:09:22,490 --> 00:09:24,740
So that's totally independent from the training.

136
00:09:24,860 --> 00:09:27,460
And we will also expand this code in details.

137
00:09:27,530 --> 00:09:33,710
Besides the good news is that you will have two codes one code which will be the code we implement in

138
00:09:33,710 --> 00:09:36,080
the tutorials but without any comment.

139
00:09:36,290 --> 00:09:40,580
And one of the code that is one of the code folder with all the codes commands it.

140
00:09:40,700 --> 00:09:44,060
So with all these six fouls all well connected.

141
00:09:44,180 --> 00:09:49,520
So that if you miss something and tutorial Well you will be able to look at the content of the code

142
00:09:49,640 --> 00:09:51,010
to understand what's going on.

143
00:09:51,200 --> 00:09:52,130
So there we go.

144
00:09:52,130 --> 00:09:54,500
I hope you're excited to implement this.

145
00:09:54,500 --> 00:09:59,020
You're really at the top of the mountain now or just below the top because you need to understand this

146
00:09:59,120 --> 00:10:01,160
first but you're getting there.

147
00:10:01,190 --> 00:10:02,910
So take a good breathe of oxygen.

148
00:10:03,020 --> 00:10:05,690
And there we go with a super exciting journey.

149
00:10:05,720 --> 00:10:06,870
Until then enjoy.
