1
00:00:02,340 --> 00:00:05,315
Let's switch to the IDE and command line and build

2
00:00:05,315 --> 00:00:06,640
these three BookStore components.

3
00:00:06,640 --> 00:00:12,253
We will use the Angular CLI to save us some time and then

4
00:00:12,253 --> 00:00:15,435
type some TypeScript and HTML code.

5
00:00:15,435 --> 00:00:22,137
Remember that we used Twitter Bootstrap so we won't be adding any CSS.

6
00:00:22,137 --> 00:00:24,149
We keep it simple.

7
00:00:24,149 --> 00:00:29,782
Thanks to the feedback loop of Angular we will type code and always see it live.

8
00:00:29,782 --> 00:00:34,317
That's when the Chrome development tools will become handy.

9
00:00:34,317 --> 00:00:40,145
We will be able what's wrong in our code while we type.

10
00:00:40,145 --> 00:00:45,899
So I've split my screen with Chrome on the right and the IDE on the left.

11
00:00:45,899 --> 00:00:51,252
Let's start creating the book-list components with Angular CLI.

12
00:00:51,252 --> 00:00:54,471
So ng generate component book-list --spec false,

13
00:00:54,471 --> 00:00:57,584
so we don't have test classes,

14
00:00:57,584 --> 00:01:03,955
and inline-style so we don't have a separate CSS file.

15
00:01:03,955 --> 00:01:04,554
Brilliant.

16
00:01:04,554 --> 00:01:12,540
Angular CLI has created a book-list directory and inside the book-list.

17
00:01:12,540 --> 00:01:13,839
component.

18
00:01:13,839 --> 00:01:17,735
html and TypeScript.

19
00:01:17,735 --> 00:01:23,799
Okay so here in the HTML there's book-list works!

20
00:01:23,799 --> 00:01:30,127
So let's display that on the right side in Chrome.

21
00:01:30,127 --> 00:01:38,358
For that remember that a component has a selector, a name, bs-book-list.

22
00:01:38,358 --> 00:01:42,438
So we go to the main app.

23
00:01:42,438 --> 00:01:44,770
component and add bs-book-list.

24
00:01:44,770 --> 00:01:49,959
We save the page and here it is, book-list works!

25
00:01:49,959 --> 00:01:55,925
That's actually the content of our HTML page.

26
00:01:55,925 --> 00:01:57,740
Let's change that.

27
00:01:57,740 --> 00:02:06,868
So the title should be lists all the books and then the number of books.

28
00:02:06,868 --> 00:02:12,437
For the number of books, let's do some interpolation.

29
00:02:12,437 --> 00:02:16,800
So let's split the screen so I have the HTML at the

30
00:02:16,800 --> 00:02:20,015
bottom and the TypeScript at the top.

31
00:02:20,015 --> 00:02:25,299
So I'll create a variable called nbBooks and let's

32
00:02:25,299 --> 00:02:31,147
say I'm going to create two books, so = 2.

33
00:02:31,147 --> 00:02:38,233
Now on the HTML template, it's just a matter of using interpolation.

34
00:02:38,233 --> 00:02:42,287
Let's get rid of private so it's easier.

35
00:02:42,287 --> 00:02:47,644
I've saved the page, it compiled, and as you can see on the right,

36
00:02:47,644 --> 00:02:50,429
list of the books - 2.

37
00:02:50,429 --> 00:02:54,110
Now I'm going to iterate through these two books.

38
00:02:54,110 --> 00:03:00,187
So I'm going to add some dummy data, so here I'm creating an array of books,

39
00:03:00,187 --> 00:03:06,529
which is a JSON structure, and as you can see id equals 1,

40
00:03:06,529 --> 00:03:12,171
the title: dummy title 1, description: dummy description 1,

41
00:03:12,171 --> 00:03:19,353
and we display an image, so here I've copied the URL of a real image.

42
00:03:19,353 --> 00:03:22,394
So let's duplicate that so we have two books,

43
00:03:22,394 --> 00:03:28,352
we have a JSON array of 2 books, id equals 2,

44
00:03:28,352 --> 00:03:32,621
dummy title 2, dummy description 2.

45
00:03:32,621 --> 00:03:35,481
So how we display these two books?

46
00:03:35,481 --> 00:03:37,116
Well, with an iteration.

47
00:03:37,116 --> 00:03:46,299
So let's add some HTML and use the ngFor directive.

48
00:03:46,299 --> 00:03:51,721
So here I'm creating a variable book of type books and remember

49
00:03:51,721 --> 00:03:56,975
that books is the array on the TypeScript.

50
00:03:56,975 --> 00:04:09,325
So let's close that and let's use the HTML image tag and bind it to imageURL.

51
00:04:09,325 --> 00:04:19,131
We save the page, it refreshes, so here I have the two images of the two books.

52
00:04:19,131 --> 00:04:23,265
Next to the image we need to display the title of the book and

53
00:04:23,265 --> 00:04:27,518
the title of the book will actually be a link to the detail

54
00:04:27,518 --> 00:04:29,894
component that we will create later.

55
00:04:29,894 --> 00:04:34,076
But for now it's just an empty href.

56
00:04:34,076 --> 00:04:35,567
So book.

57
00:04:35,567 --> 00:04:41,532
title displays and let's finish with a book.

58
00:04:41,532 --> 00:04:42,278
description.

59
00:04:42,278 --> 00:04:43,896
Save the page.

60
00:04:43,896 --> 00:04:46,593
Okay it's not very nice.

61
00:04:46,593 --> 00:04:50,448
Remember that we have Twitter Bootstrap,

62
00:04:50,448 --> 00:04:58,087
so let's use the style sheet of Twitter Bootstrap.

63
00:04:58,087 --> 00:05:04,896
So here I'm using some styles on the list,

64
00:05:04,896 --> 00:05:14,450
let's do media and use the 4 columns, so that's slightly better.

65
00:05:14,450 --> 00:05:20,326
The image, let's create like a thumbnail,

66
00:05:20,326 --> 00:05:26,342
so I'm using img-thumbnail, save the page,

67
00:05:26,342 --> 00:05:28,061
that's nicer.

68
00:05:28,061 --> 00:05:38,209
The title too, let's put, so it displays underneath the description.

69
00:05:38,209 --> 00:05:41,687
Well, that's looking right now.

70
00:05:41,687 --> 00:05:47,251
Okay so now let's create the book detail,

71
00:05:47,251 --> 00:05:54,401
so the idea is when I click on the title of the book I go to the detail.

72
00:05:54,401 --> 00:05:59,426
So again, as you can guess, Angular CLI book-detail,

73
00:05:59,426 --> 00:06:06,161
it creates a new directory with two files,

74
00:06:06,161 --> 00:06:12,912
the HTML template and the TypeScript.

75
00:06:12,912 --> 00:06:14,564
Here it is.

76
00:06:14,564 --> 00:06:20,620
So first thing, let's display this component on our main component.

77
00:06:20,620 --> 00:06:32,208
So let's put it above, bs-book-detail, save the page, book-detail works!

78
00:06:32,208 --> 00:06:44,058
Okay, so let's change the title, so let's use an h2 Detail of a book,

79
00:06:44,058 --> 00:06:46,677
save the page, yes.

80
00:06:46,677 --> 00:06:52,570
So let's create a data structure of a book,

81
00:06:52,570 --> 00:06:57,489
like we did in JSON, but this time it's not an array,

82
00:06:57,489 --> 00:06:59,539
it's just a single book.

83
00:06:59,539 --> 00:07:06,715
So a book has a title, dummy title, a description,

84
00:07:06,715 --> 00:07:14,048
it also has a price, we call it unitCost,

85
00:07:14,048 --> 00:07:22,475
the isbn number, so let's put a random string,

86
00:07:22,475 --> 00:07:33,678
a book has a number of pages, and it's written in a certain language,

87
00:07:33,678 --> 00:07:34,908
so English.

88
00:07:34,908 --> 00:07:39,212
Now that we have the data structure,

89
00:07:39,212 --> 00:07:47,451
let's create some HTML to display nicely the details of the book.

90
00:07:47,451 --> 00:07:58,403
So the title, it's an input text and, as you can see, we used the binding book.

91
00:07:58,403 --> 00:08:06,646
title and it's read only so we use the HTML readonly tag.

92
00:08:06,646 --> 00:08:07,148
Again,

93
00:08:07,148 --> 00:08:13,782
let's use Twitter Bootstrap to make it nicer so we can have in

94
00:08:13,782 --> 00:08:19,240
a single row the title and the text field.

95
00:08:19,240 --> 00:08:26,374
The title will be two columns and because Twitter

96
00:08:26,374 --> 00:08:34,264
Bootstrap uses a 12 column data grid, we will put 10.

97
00:08:34,264 --> 00:08:40,807
So 2 for the label, 2 for the text field.

98
00:08:40,807 --> 00:08:42,233
That's nicer.

99
00:08:42,233 --> 00:08:50,843
Okay so let's duplicate that and do the same thing for the description,

100
00:08:50,843 --> 00:08:53,802
the unit cost, and so on.

101
00:08:53,802 --> 00:09:01,981
Description is longer so let's not use an input field, but a text area.

102
00:09:01,981 --> 00:09:09,424
So let's change input with textarea, let's give it three rows,

103
00:09:09,424 --> 00:09:12,570
so it's not a type text,

104
00:09:12,570 --> 00:09:17,950
and let's get rid of that because a text area we need

105
00:09:17,950 --> 00:09:24,042
to bind inside the tag text area, book.

106
00:09:24,042 --> 00:09:27,505
description, save the page.

107
00:09:27,505 --> 00:09:31,935
Okay we're getting there.

108
00:09:31,935 --> 00:09:36,417
Here is our detail book finished with the two buttons because we

109
00:09:36,417 --> 00:09:41,353
can delete a book and we can go back to the list.

110
00:09:41,353 --> 00:09:45,320
So we've created the book-list, the book-detail,

111
00:09:45,320 --> 00:09:50,001
one component missing, the book-form.

112
00:09:50,001 --> 00:09:56,948
Thanks to Angular CLI we created our two files,

113
00:09:56,948 --> 00:10:05,988
HTML and TypeScript, so the first thing we do is take the name of the component,

114
00:10:05,988 --> 00:10:12,042
bs-book-form and add it to our main component so it displays on the page.

115
00:10:12,042 --> 00:10:16,801
Here it is, book-form works!

116
00:10:16,801 --> 00:10:24,415
So let's change the HTML, put another title,

117
00:10:24,415 --> 00:10:27,579
this forms creates a new book,

118
00:10:27,579 --> 00:10:33,146
and now I'm going to do a little bit of copy/paste

119
00:10:33,146 --> 00:10:36,434
because it's more or less the same thing.

120
00:10:36,434 --> 00:10:41,693
So on the book detail I take the JSON structure and I

121
00:10:41,693 --> 00:10:46,818
copy and I paste it into the book-form.

122
00:10:46,818 --> 00:10:51,707
I'm just adding the imageURL.

123
00:10:51,707 --> 00:11:01,320
Okay so on the TypeScript file I have this book JSON structure.

124
00:11:01,320 --> 00:11:09,596
I'm going to copy a little bit of HTML too so it makes my life easier,

125
00:11:09,596 --> 00:11:14,592
back, let's make a bit of space, and here,

126
00:11:14,592 --> 00:11:17,368
save the page, it displays.

127
00:11:17,368 --> 00:11:25,225
So the difference is the form, it's not read only, so I get rid of read only.

128
00:11:25,225 --> 00:11:29,028
Now I have a text field where I can put data in.

129
00:11:29,028 --> 00:11:31,418
And remember the two way bindings.

130
00:11:31,418 --> 00:11:38,054
So we get rid of the interpolation syntax and we use the two way binding syntax.

131
00:11:38,054 --> 00:11:46,858
So ngModel and bind it to the book.

132
00:11:46,858 --> 00:11:47,958
title.

133
00:11:47,958 --> 00:11:51,740
Here is the form component created.

134
00:11:51,740 --> 00:11:57,199
As you can see, we've created the form, the detail,

135
00:11:57,199 --> 00:11:59,293
and the list books component.

136
00:11:59,293 --> 00:12:06,785
The three components with Angular CLI and a bit of Twitter Bootstrap.

137
00:12:06,785 --> 00:12:08,707
Let's commit our code.

138
00:12:08,707 --> 00:12:13,421
So each component has two files, book-detail, book-form, book-list.

139
00:12:13,421 --> 00:12:18,150
We added three components to the app.

140
00:12:18,150 --> 00:12:21,553
component, which is the main component,

141
00:12:21,553 --> 00:12:40,000
and Angular CLI updated the module behind our back. Let's change the commit message and we are done.

