1
00:00:02,310 --> 00:00:06,354
We've just seen the basic behavior of Angular router.

2
00:00:06,354 --> 00:00:12,296
Actually in our BookStore application we use this simple navigation quite often.

3
00:00:12,296 --> 00:00:15,127
But we also have other patterns.

4
00:00:15,127 --> 00:00:15,963
For example,

5
00:00:15,963 --> 00:00:20,564
we also need to pass parameters to the router when navigating

6
00:00:20,564 --> 00:00:23,663
or executing an action before navigating.

7
00:00:23,663 --> 00:00:30,613
Let's see how we handle these three different scenarios.

8
00:00:30,613 --> 00:00:36,335
The simple navigation is clicking on a link and displaying a new component.

9
00:00:36,335 --> 00:00:39,665
We do that on our navigation bar, for instance.

10
00:00:39,665 --> 00:00:45,997
When clicking on the Create menu, the book-form component is displayed.

11
00:00:45,997 --> 00:00:52,598
Or when clicking on the bar title, the book-list is displayed.

12
00:00:52,598 --> 00:00:58,257
Another example is when we create a new book and need to cancel this action.

13
00:00:58,257 --> 00:01:05,565
We click on the Cancel button and it brings us back to the list of books.

14
00:01:05,565 --> 00:01:08,007
If we look at our main app.

15
00:01:08,007 --> 00:01:08,355
component.

16
00:01:08,355 --> 00:01:11,623
html template where our navigation bar is defined,

17
00:01:11,623 --> 00:01:16,910
we see some HTML using the routing link directive.

18
00:01:16,910 --> 00:01:22,426
Here when we click on the navigation bar title or the list menu,

19
00:01:22,426 --> 00:01:29,437
we navigate to the book-list path, which executes the BookListComponent.

20
00:01:29,437 --> 00:01:31,503
When we click on Create,

21
00:01:31,503 --> 00:01:38,616
the navigation follows the book-form path and executes the book-form component.

22
00:01:38,616 --> 00:01:41,908
But simple navigation is not always enough.

23
00:01:41,908 --> 00:01:45,527
When we display the list of books we can click on the

24
00:01:45,527 --> 00:01:48,273
link to visualize the book details.

25
00:01:48,273 --> 00:01:53,797
But these details depend on the book we select.

26
00:01:53,797 --> 00:02:00,773
So clicking on Beginning Java EE 7 navigates to the book details component and

27
00:02:00,773 --> 00:02:06,117
displays all the information about this particular book.

28
00:02:06,117 --> 00:02:11,179
The way it works is that we pass a parameter when navigating,

29
00:02:11,179 --> 00:02:13,211
in this case the book identifier.

30
00:02:13,211 --> 00:02:18,907
As you can see, the router link directive takes an array of parameters.

31
00:02:18,907 --> 00:02:22,996
The path and the given parameter book.

32
00:02:22,996 --> 00:02:23,760
id.

33
00:02:23,760 --> 00:02:34,445
So the URL will be routerlink/123 if the book id is 123, for example.

34
00:02:34,445 --> 00:02:40,677
The last scenario that we have is doing an action before navigating.

35
00:02:40,677 --> 00:02:47,091
When we want to create a book we fill the form and click on Create.

36
00:02:47,091 --> 00:02:51,629
This will do an HTTP POST on our REST API and then,

37
00:02:51,629 --> 00:02:58,175
only then, will the user be directed to a different component.

38
00:02:58,175 --> 00:03:00,626
Same mechanism when we visualize a book,

39
00:03:00,626 --> 00:03:07,028
clicking on Delete will first execute an action on our REST API

40
00:03:07,028 --> 00:03:11,016
and then display the book-list component.

41
00:03:11,016 --> 00:03:13,523
Let's take this last example,

42
00:03:13,523 --> 00:03:18,121
the book-detail HTML template gives the detail of a book.

43
00:03:18,121 --> 00:03:23,556
And when clicking on the Delete button, it invokes the delete method.

44
00:03:23,556 --> 00:03:25,782
Notice the ngSubmit directive,

45
00:03:25,782 --> 00:03:31,897
here we are just saying when clicking on a button take all the data

46
00:03:31,897 --> 00:03:35,939
in the form and submit it to the delete method.

47
00:03:35,939 --> 00:03:40,037
The delete method is defined on our component class.

48
00:03:40,037 --> 00:03:45,100
It first invokes our backend, but that's for next module,

49
00:03:45,100 --> 00:03:51,176
and then uses the Angular router to navigate to the book-list path.

50
00:03:51,176 --> 00:03:54,982
This will have the same effect on what we've seen so far.

51
00:03:54,982 --> 00:03:57,424
It will execute the book-list component.

52
00:03:57,424 --> 00:04:09,000
The router needs to be injected in our component via the constructor. We need to import it from the Angular router module.

