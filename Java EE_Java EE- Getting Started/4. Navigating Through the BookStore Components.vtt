WEBVTT
1
00:00:02.372 --> 00:00:07.200
In this demo we will code the navigation through the BookStore components.

2
00:00:07.200 --> 00:00:11.785
We will not use the Angular CLI this time because we've already added the

3
00:00:11.785 --> 00:00:16.198
router module when we bootstrapped the application.

4
00:00:16.198 --> 00:00:21.066
So now it's just a matter of adding some router links in the HTML templates

5
00:00:21.066 --> 00:00:26.696
as well as using the router API in the TypeScript classes.

6
00:00:26.696 --> 00:00:31.981
Like in the previous demo we will run the web server while we code so

7
00:00:31.981 --> 00:00:37.839
the browser will automatically render what we type.

8
00:00:37.839 --> 00:00:39.175
When I develop in Angular,

9
00:00:39.175 --> 00:00:43.943
I like to have the browser on one side and the IDE on the

10
00:00:43.943 --> 00:00:48.196
other side so I can see what I'm coding.

11
00:00:48.196 --> 00:00:52.182
So let's go to our main component, the app.

12
00:00:52.182 --> 00:00:52.625
component.

13
00:00:52.625 --> 00:00:53.068
html,

14
00:00:53.068 --> 00:00:57.807
and until now we have our three components all bundled

15
00:00:57.807 --> 00:01:00.530
together instead of using navigation.

16
00:01:00.530 --> 00:01:10.269
So let's start the server and let's get rid of these three components.

17
00:01:10.269 --> 00:01:16.564
So if I save the page, it refreshes, the three components are gone.

18
00:01:16.564 --> 00:01:23.876
Let's move this tag router-outlet that ng CLI generated for us.

19
00:01:23.876 --> 00:01:31.135
This is the outlet that will display the component when navigating.

20
00:01:31.135 --> 00:01:32.912
But nothing is displayed.

21
00:01:32.912 --> 00:01:33.357
Why?

22
00:01:33.357 --> 00:01:36.023
Because we don't have a route.

23
00:01:36.023 --> 00:01:40.254
So let's go to the app-routing.

24
00:01:40.254 --> 00:01:47.892
module, I'm splitting the screen, I'm leaving the HTML template at the top,

25
00:01:47.892 --> 00:01:54.621
and I'm now creating a default route, so the home page,

26
00:01:54.621 --> 00:01:59.317
by default, should display the BookListComponent.

27
00:01:59.317 --> 00:02:03.418
Here it is, so if I save the page,

28
00:02:03.418 --> 00:02:11.079
it reloads and this time it will display the component on the default route.

29
00:02:11.079 --> 00:02:15.815
Let's duplicate that and create view routes.

30
00:02:15.815 --> 00:02:23.904
So the book-list, going to the book-list it will display the BookListComponent,

31
00:02:23.904 --> 00:02:29.551
and going to the book-form it will display the BookFormComponent.

32
00:02:29.551 --> 00:02:30.089
Good.

33
00:02:30.089 --> 00:02:37.723
So now I have these two routes, let's use them on our navigation bar.

34
00:02:37.723 --> 00:02:41.072
So when I click on Create,

35
00:02:41.072 --> 00:02:46.822
I'll tell the router link to go to the book-form route,

36
00:02:46.822 --> 00:02:49.354
which will display the BookFormComponent.

37
00:02:49.354 --> 00:02:55.858
So if I save the page, click on Create, yes it's working.

38
00:02:55.858 --> 00:03:04.474
So let's copy that and paste it on the list menu,

39
00:03:04.474 --> 00:03:09.752
but this time it will not go to book-form,

40
00:03:09.752 --> 00:03:10.728
but book-list.

41
00:03:10.728 --> 00:03:20.616
So I save the page and this time if I click on List, yep it's going to the list.

42
00:03:20.616 --> 00:03:23.926
So back to the Create book, so the book-form,

43
00:03:23.926 --> 00:03:28.546
when I click on Cancel, I want to go back to the book-list.

44
00:03:28.546 --> 00:03:34.987
So let's add the router link to the Cancel button.

45
00:03:34.987 --> 00:03:42.322
So I go to the book-form, I look for the Cancel button,

46
00:03:42.322 --> 00:03:53.140
here, and routerLink book-list, I save the page and now if I click on Cancel,

47
00:03:53.140 --> 00:03:56.590
good, it goes to the book-list.

48
00:03:56.590 --> 00:04:03.968
Now our second use case is when I click on the title of the book,

49
00:04:03.968 --> 00:04:06.904
I want the detail of this specific book.

50
00:04:06.904 --> 00:04:12.539
So I create a new route, book-detail, which will execute the BookDetailComponent,

51
00:04:12.539 --> 00:04:20.131
but look I'm passing a parameter that I called bookID.

52
00:04:20.131 --> 00:04:25.001
So let's add this new route in the BookListComponent,

53
00:04:25.001 --> 00:04:31.083
here it is, let's look for the title here,

54
00:04:31.083 --> 00:04:37.294
and I'm doing routLink book-detail and the second parameter

55
00:04:37.294 --> 00:04:42.287
will be the id attribute of our book.

56
00:04:42.287 --> 00:04:49.512
Save the page, click on dummy 1, oh it's not working,

57
00:04:49.512 --> 00:04:56.356
dummy 2, oh, let's open the dev tools from Chrome.

58
00:04:56.356 --> 00:05:02.533
Let's browse up, it's usually at the top.

59
00:05:02.533 --> 00:05:06.728
Oh okay, book-list, yep, so book-list/book-details,

60
00:05:06.728 --> 00:05:10.045
that's because there's a slash missing.

61
00:05:10.045 --> 00:05:11.373
Okay, sorry.

62
00:05:11.373 --> 00:05:16.023
Save the page, click on dummy, yeah.

63
00:05:16.023 --> 00:05:19.139
You see how handy the Dev Chrome Tools can be.

64
00:05:19.139 --> 00:05:25.720
So if I click on dummy title 2, yes, the URL has a 2.

65
00:05:25.720 --> 00:05:26.179
Brilliant.

66
00:05:26.179 --> 00:05:29.854
Dummy title 1, the URL has a 1.

67
00:05:29.854 --> 00:05:32.899
Now I want to delete the book,

68
00:05:32.899 --> 00:05:37.758
so when I press the Delete button I want to make an action,

69
00:05:37.758 --> 00:05:43.249
call our REST API and then go back to the book-list.

70
00:05:43.249 --> 00:05:46.723
So let's open the book-detail.

71
00:05:46.723 --> 00:05:47.417
component,

72
00:05:47.417 --> 00:05:56.051
the TypeScript and the HTML template and because it's a

73
00:05:56.051 --> 00:06:03.275
form I am using the directive ngSubmit.

74
00:06:03.275 --> 00:06:05.722
I'm telling Angular, when you submit the form,

75
00:06:05.722 --> 00:06:11.241
when you click on Delete, execute the method that I call delete.

76
00:06:11.241 --> 00:06:17.599
So now I have to define the Delete method in the TypeScript.

77
00:06:17.599 --> 00:06:23.957
So this method needs to navigate, so I need the router, the Angular router.

78
00:06:23.957 --> 00:06:29.508
Let's inject it, so private router of type Router.

79
00:06:29.508 --> 00:06:34.228
So when I press the Delete button, it invokes the delete method.

80
00:06:34.228 --> 00:06:38.896
This method will invoke our REST API in the next module,

81
00:06:38.896 --> 00:06:47.096
but then it uses the router API to navigate to the right route book-list.

82
00:06:47.096 --> 00:06:55.224
So now if I click on Delete, good, it goes back to the book-list.

83
00:06:55.224 --> 00:06:57.194
Let's commit our code now.

84
00:06:57.194 --> 00:07:03.337
So we've changed most of our components to add routing and navigation.

85
00:07:03.337 --> 00:07:06.722
So the book-detail, book-form, book-list,

86
00:07:06.722 --> 00:07:12.149
and of course we defined our routes on the app-routing.

87
00:07:12.149 --> 00:07:18.260
module and we got rid of our components to put the

88
00:07:18.260 --> 00:07:27.000
router outlet tag on our main component. Let's change the commit test and commit.

