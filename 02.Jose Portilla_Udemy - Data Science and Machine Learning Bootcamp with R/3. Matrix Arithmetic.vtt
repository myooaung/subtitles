WEBVTT
1

00:00:00.390  -->  00:00:05.910
Hello everyone and welcome to lecture on matrix arithmetic in this lecture we're going to be discussing

2

00:00:05.910  -->  00:00:10.080
just basic arithmetic and some basic operations on a matrix.

3

00:00:10.080  -->  00:00:11.620
Let's go ahead and jump to our studio.

4

00:00:11.640  -->  00:00:13.470
See how this all works.

5

00:00:13.470  -->  00:00:18.310
All right so here we are our studio when I'm going to go ahead and do is create a matrix.

6

00:00:18.320  -->  00:00:20.730
Just go ahead and call it Matt.

7

00:00:20.760  -->  00:00:21.890
Keep it simple.

8

00:00:22.050  -->  00:00:28.830
I'll use the matrix function or go him Pessin a vector using that colon rotation because it's just a

9

00:00:28.830  -->  00:00:30.720
sequential series of numbers.

10

00:00:30.720  -->  00:00:37.000
Let's go ahead and say by RHO is equal to true the capital-T is fine.

11

00:00:37.100  -->  00:00:43.020
Now I will specify the number of rows using end row argument parameter as 5.

12

00:00:43.320  -->  00:00:49.060
So this should result in a five by five matrix of the numbers 1 through 25.

13

00:00:49.250  -->  00:00:54.150
Now just walk through just some simple arithmetic operations just like a vector.

14

00:00:54.180  -->  00:00:59.490
If you do arithmetic operations with a scalar so a single number everything is going to be done on an

15

00:00:59.490  -->  00:01:01.200
element by element basis.

16

00:01:01.200  -->  00:01:08.200
So if I wanted to multiply all the numbers in my matrix by two I would just do Matt Asterix too.

17

00:01:08.250  -->  00:01:13.470
So I wanted to divide everything by two would just be a single slash divided by two.

18

00:01:13.940  -->  00:01:16.890
So I want to do everything in the power of two.

19

00:01:16.980  -->  00:01:18.810
I would just say that little carrot symbol.

20

00:01:18.810  -->  00:01:20.280
That's the power of two.

21

00:01:20.370  -->  00:01:26.130
I can even do reciprocals in the same manner so I can say 1 divided by Matt which is going to be the

22

00:01:26.130  -->  00:01:32.640
same as the basic reciprocal of every single element in that matrix.

23

00:01:32.640  -->  00:01:33.250
OK.

24

00:01:33.400  -->  00:01:37.230
So hopefully this looks pretty familiar given what we learn about vectors.

25

00:01:37.320  -->  00:01:42.810
We can also use comparison operators of matrices just like we could with vectors and remember with vectors

26

00:01:43.020  -->  00:01:45.780
we got in return an entire vector of logicals.

27

00:01:45.870  -->  00:01:50.550
In this case we'll get in return an entire matrix of logicals.

28

00:01:50.550  -->  00:01:57.630
So if I wanted to grab let's say everywhere where the matrix was greater than 15 I could do this and

29

00:01:57.630  -->  00:02:05.370
then I would get in return a matrix full of logical values and just like with the vectors I can use

30

00:02:05.370  -->  00:02:10.140
the same sort of notation actually filtered out by those values.

31

00:02:10.140  -->  00:02:14.470
So that's going to return a vector of where of all the values were that was true.

32

00:02:14.870  -->  00:02:15.390
OK.

33

00:02:15.690  -->  00:02:22.740
So we can even use matrices in arithmetic operations with each other like an atom matrices together

34

00:02:22.740  -->  00:02:22.830
.

35

00:02:22.830  -->  00:02:27.830
So if I wanted to say map plus map that's going to be the same as MAP times to.

36

00:02:27.930  -->  00:02:33.600
I can even do things like Map divided by map and that should all equal one which makes sense because

37

00:02:33.660  -->  00:02:36.570
any number divided by itself is equal to 1.

38

00:02:36.570  -->  00:02:39.310
So hopefully this all looks again pretty familiar.

39

00:02:39.490  -->  00:02:46.050
You can even do powers so I can say map to the power of map that's going to be some really large numbers

40

00:02:46.050  -->  00:02:48.510
here which makes sense but it all works out.

41

00:02:48.990  -->  00:02:57.070
And I can do let's say Matt Times Matt to go ahead and say 1 times 1 2 times 2 3 times 3 etc..

42

00:02:57.180  -->  00:03:00.160
Now a quick side note on Matrix multiplications.

43

00:03:00.240  -->  00:03:06.480
If you're familiar with linear algebra you'll notice that this isn't actually true matrix multiplication

44

00:03:06.480  -->  00:03:06.930
.

45

00:03:06.930  -->  00:03:11.190
So if you're familiar with the mathematics behind this topic then you would actually like to use are

46

00:03:11.340  -->  00:03:13.930
to perform true matrix multiplication.

47

00:03:13.950  -->  00:03:16.680
You can check out the Wikipedia links provided in the notes.

48

00:03:16.680  -->  00:03:23.400
For more background on matrix multiplication you can actually just use the following syntax so go ahead

49

00:03:23.400  -->  00:03:28.170
and make an example of this instead of saying.

50

00:03:28.180  -->  00:03:30.070
Matt times Matz.

51

00:03:30.240  -->  00:03:33.540
Which group would perform element by element multiplication.

52

00:03:33.540  -->  00:03:39.510
The action wanted to perform true matrix multiplication in the linear algebra concept of multiplication

53

00:03:39.510  -->  00:03:39.850
.

54

00:03:39.960  -->  00:03:45.870
You would use percentage signs surrounding that Asterix in order to confirm that you actually want to

55

00:03:45.870  -->  00:03:48.510
do matrix multiplication.

56

00:03:48.510  -->  00:03:50.370
So notice how those results are different.

57

00:03:50.430  -->  00:03:51.180
Don't worry too much.

58

00:03:51.210  -->  00:03:56.400
If you're not familiar with matrix multiplication in that linear algebra sense this is just for some

59

00:03:56.400  -->  00:04:00.550
quick information for those people that do know how to use that.

60

00:04:00.590  -->  00:04:02.840
OK so that's it for this lecture.

61

00:04:02.850  -->  00:04:07.470
It should all be feeling familiar because of everything we've gone over through vector's centrally.

62

00:04:07.470  -->  00:04:12.290
All the same operations the same indexing notation it's just in two dimensions.

63

00:04:12.320  -->  00:04:15.480
OK thanks everyone and I'll see at the next lecture.
