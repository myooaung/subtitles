1

00:00:01,170  -->  00:00:06,600
Hello everyone and welcome to the logistic regression with our lecture this lecture we're going to be

2

00:00:06,600  -->  00:00:08,820
learning how to use logistic regression with our.

3

00:00:08,850  -->  00:00:13,280
And we're going to be working with a famous Titanic dataset from Kaggle dot com.

4

00:00:13,620  -->  00:00:16,390
Let's go ahead and get started by jumping to our studio.

5

00:00:16,740  -->  00:00:18,580
OK Miriam our studio.

6

00:00:18,660  -->  00:00:22,870
And like I mentioned earlier we're going to be using the famous Titanic data set.

7

00:00:22,890  -->  00:00:27,960
It's actually really often that the data sets used for a student's first step into machine learning

8

00:00:27,960  -->  00:00:29,400
for classification.

9

00:00:29,430  -->  00:00:35,700
We're going to try to predict is whether someone survives or if this was deceased and the Titanic disaster

10

00:00:35,700  -->  00:00:36,970
.

11

00:00:37,050  -->  00:00:40,940
Let's go ahead and begin by getting the data itself.

12

00:00:41,000  -->  00:00:46,880
These files are on catgirls dot com Web site and there's a link for it in the notebook but it's also

13

00:00:46,880  -->  00:00:48,780
in the repository you download it.

14

00:00:48,780  -->  00:00:55,190
Go ahead and grab the Titanic underscore test that CCV file and the Titanic underscore train that CAC

15

00:00:55,200  -->  00:00:55,740
file.

16

00:00:55,890  -->  00:00:59,780
You can see here it's pretty split for you between testing and training data.

17

00:01:00,360  -->  00:01:07,690
Let's go ahead and move along by actually grabbing those data sets and sending them as data frames.

18

00:01:07,710  -->  00:01:13,350
I was going to use read dot CSV in a nice trick here is just type in the beginning of the file name

19

00:01:13,410  -->  00:01:16,140
press tab and it will auto complete this case.

20

00:01:16,140  -->  00:01:20,340
I just want that train that CFE data and let's go ahead and check out a couple of things.

21

00:01:20,340  -->  00:01:23,350
Let's check out the head of DFI train.

22

00:01:23,700  -->  00:01:29,250
And let's also go ahead and check out the structure of the train and we'll print that out as well

23

00:01:32,110  -->  00:01:39,530
and let's prints some statements or some large blank line here.

24

00:01:40,840  -->  00:01:42,170
OK.

25

00:01:42,780  -->  00:01:44,300
Here we have the head.

26

00:01:44,340  -->  00:01:47,780
We have a passenger ID column that just the past droite the number.

27

00:01:47,790  -->  00:01:49,720
You'll notice it's just like the index.

28

00:01:49,890  -->  00:01:56,010
Then we have a survived column which has a logical value 0 or 1 in the kidding whether or not they survived

29

00:01:56,010  -->  00:01:56,430
.

30

00:01:56,430  -->  00:01:59,130
We have a P class which is a passenger class.

31

00:01:59,340  -->  00:02:01,260
So there's different classes on the Titanic.

32

00:02:01,290  -->  00:02:03,620
First class second class third class.

33

00:02:03,780  -->  00:02:08,610
We have the name of the actual passenger the sex or the gender of the passenger.

34

00:02:08,610  -->  00:02:11,330
Male female the age of the passenger.

35

00:02:11,520  -->  00:02:17,430
And then we have these two features sit S P and P R C H.

36

00:02:17,430  -->  00:02:23,300
This first one S I B S P is the number of siblings or spouses on board.

37

00:02:23,520  -->  00:02:26,700
So it's not a logical even though you only see ones and zeros.

38

00:02:26,690  -->  00:02:30,950
Here it's an actual number of how many siblings or spouses this person had on board.

39

00:02:30,960  -->  00:02:36,950
And then we have P P A R C H which is the number of parents or children aboard.

40

00:02:37,050  -->  00:02:41,760
That way these basically indicate whether or not they had parents or children on board or a sibling

41

00:02:41,760  -->  00:02:47,730
or spouse onboard and how much of a factor that was in their survival is something we're going to look

42

00:02:47,730  -->  00:02:48,920
into later on.

43

00:02:48,960  -->  00:02:51,520
We also get a ticket number a fair.

44

00:02:51,570  -->  00:02:54,710
Meaning how much they paid for the ticket the cabin number.

45

00:02:54,740  -->  00:03:00,020
You have some missing points there and embarked is a code of word.

46

00:03:00,090  -->  00:03:06,280
Actually they got onto the ships of the ports of embarkation where sea is Cherbourg.

47

00:03:06,300  -->  00:03:09,460
Q Is Queenstown and Southampton.

48

00:03:09,660  -->  00:03:13,020
Let's go ahead and continue on to the actual structure of the data.

49

00:03:13,440  -->  00:03:20,150
We have 891 observations of 12 variables passenger IDs survive the class etc..

50

00:03:20,280  -->  00:03:25,530
Notice that the name is a factor of 891 levels that makes sense because they're essentially just all

51

00:03:25,530  -->  00:03:28,380
unique character strings for all unique names.

52

00:03:28,380  -->  00:03:32,250
Eventually we'll see that this is going to be useful to us in trying to predict who survived and who

53

00:03:32,250  -->  00:03:33,110
didn't survive.

54

00:03:33,360  -->  00:03:39,150
But you could maybe do some feature engineering and try to grab titles you may have noticed maybe like

55

00:03:39,150  -->  00:03:46,530
someone's called Mr. Anthony or Dr. Anthony etc. and maybe titles are an important indicator of whether

56

00:03:46,530  -->  00:03:51,470
someone survives or not if they have title of Sir or Madam they might actually be important enough for

57

00:03:51,480  -->  00:03:54,310
being first class indicating they survive.

58

00:03:54,330  -->  00:03:56,080
That's something we want to explore too much here.

59

00:03:56,100  -->  00:04:01,140
But just something to take note of that we have sex is also a factor with two levels.

60

00:04:01,140  -->  00:04:07,500
Female and male and then tickets are also a factor of a bunch of different levels and cabin and embarked

61

00:04:07,620  -->  00:04:09,560
are also levels.

62

00:04:09,570  -->  00:04:11,990
Let's go ahead and continue.

63

00:04:12,240  -->  00:04:22,170
I'm going to go ahead and clear the cons. Let's continue by exploring the actual data through exploratory

64

00:04:22,170  -->  00:04:23,100
data analysis.

65

00:04:23,100  -->  00:04:28,650
What are we going to do first is check how much missing data we have we can use the Emilia package to

66

00:04:28,650  -->  00:04:29,600
do this.

67

00:04:29,730  -->  00:04:34,110
First of all what you're going to have to do is install the Amulya package so go in and say install

68

00:04:34,410  -->  00:04:39,130
that packages and then install the Emilia package.

69

00:04:39,180  -->  00:04:44,640
This package is really useful for exploring and visualizing how much data you're missing in your data

70

00:04:44,640  -->  00:04:45,080
set.

71

00:04:45,090  -->  00:04:50,080
How many of those data points are actually and a values.

72

00:04:50,490  -->  00:04:54,870
The reason it's called the Milia is because it's named after Amelia Earhart who famously disappeared

73

00:04:54,870  -->  00:04:58,080
when flying over the Atlantic Ocean by herself.

74

00:04:58,080  -->  00:04:59,750
Go ahead and install this package.

75

00:04:59,760  -->  00:05:02,130
I won't install it because I actually already have it installed.

76

00:05:02,310  -->  00:05:06,400
So I would just call it instead of say library.

77

00:05:06,420  -->  00:05:15,280
Amelia book X what we're mainly going to be using Amelia for is for something called a missings map

78

00:05:15,280  -->  00:05:15,560
.

79

00:05:15,580  -->  00:05:18,810
So after you've called Library Amelia and install there.

80

00:05:18,970  -->  00:05:24,220
Go ahead and say help and type in Miss math and explore the documentation.

81

00:05:24,220  -->  00:05:28,800
Let me bring this over for the missing this map.

82

00:05:28,870  -->  00:05:35,100
And this basically plots a missing in this map showing where missing ness occurs in the dataset passed

83

00:05:35,110  -->  00:05:36,690
to the Amelia library.

84

00:05:36,760  -->  00:05:41,980
And what they mean by missing this is just how many values are in a or null.

85

00:05:41,980  -->  00:05:51,400
Let's go ahead and use this on our training data we'll call mis map is the function you pass in your

86

00:05:51,400  -->  00:05:59,050
data will say DFI train and in argument you could pass in Maine which is just the main title of your

87

00:05:59,050  -->  00:06:01,460
data or of your visualisation excuse me.

88

00:06:01,590  -->  00:06:11,770
In this case we'll just call it missing map the next argument we want to do is c o l and the argument

89

00:06:11,800  -->  00:06:15,110
is just the a vector of two colors.

90

00:06:15,220  -->  00:06:22,510
The first color is the colour for missing cells and the second color is for observed cells and you'll

91

00:06:22,510  -->  00:06:29,610
get a better idea of what this actually means when we actually see the missing map visualization.

92

00:06:29,610  -->  00:06:35,920
In this case I'll just put in a vector using the combined function that see with yellow as my first

93

00:06:35,920  -->  00:06:37,840
color and black as the second one.

94

00:06:37,840  -->  00:06:42,450
These are usually the most visible and they're the most commonly used for this sort of thing.

95

00:06:42,820  -->  00:06:46,670
And then finally we'll say legend is equal to false.

96

00:06:46,960  -->  00:06:49,800
Let's go ahead and run this.

97

00:06:50,050  -->  00:06:51,840
And there we have our missings map.

98

00:06:52,090  -->  00:06:59,500
So notice that we're missing or have a lot of and a values in age from this we can tell that about roughly

99

00:06:59,560  -->  00:07:02,950
20 percent of the age data is missing.

100

00:07:02,950  -->  00:07:09,510
The proportion of age missings is likely small enough for a reasonable replacement by some form of imputation

101

00:07:09,510  -->  00:07:09,910
.

102

00:07:09,970  -->  00:07:15,910
A lot of times your data you're gonna have to clean it by trying to take care of the missing data here

103

00:07:15,900  -->  00:07:16,220
.

104

00:07:16,450  -->  00:07:17,970
And that's how we're going to try to do.

105

00:07:17,980  -->  00:07:22,900
Let's go to continue on by visualizing some more of the data of G.G. plot too.

106

00:07:23,080  -->  00:07:28,750
And we'll do a little more exploratory data analysis and probably in part two of this logistic regression

107

00:07:28,750  -->  00:07:34,120
lecture series we will actually fill in some of this data and start to build our model.

108

00:07:34,120  -->  00:07:38,420
Right now we're still doing exploratory data analysis which is always a really important step for data

109

00:07:38,430  -->  00:07:39,970
.

110

00:07:40,060  -->  00:07:40,710
A quick no.

111

00:07:40,750  -->  00:07:46,120
If you had an error when you were running mismatched maybe it said something like Access not big enough

112

00:07:46,120  -->  00:07:46,320
.

113

00:07:46,420  -->  00:07:52,780
You have to make sure for mismatched that you actually extend this plot window big enough before you

114

00:07:52,780  -->  00:07:54,000
actually call the mismatch.

115

00:07:54,040  -->  00:07:55,630
So just keep that in mind.

116

00:07:55,710  -->  00:07:57,070
Let's go ahead and continue.

117

00:07:57,190  -->  00:07:59,010
I'm going to go ahead and clear this.

118

00:07:59,230  -->  00:08:02,670
Again you could always reference notes for all the code that I'm typing out here.

119

00:08:03,130  -->  00:08:07,810
Next we're going to do is call library G-G plot to just explore the data.

120

00:08:07,810  -->  00:08:10,440
Play around afit get a feel for it.

121

00:08:10,480  -->  00:08:19,930
I'm going to say geez you plot D-F train passing the survivors column and I just want to know with a

122

00:08:19,930  -->  00:08:25,030
bar plot how many people survived versus how many people didn't survive.

123

00:08:25,030  -->  00:08:27,670
Let's go ahead and check that out.

124

00:08:28,070  -->  00:08:31,170
And here we have a Barch plot with the count.

125

00:08:31,180  -->  00:08:37,070
Notice that I didn't edit the X-axis So it shows values such as negatives are 0.5 percent 0.5.

126

00:08:37,210  -->  00:08:42,640
But really we're just concerned about the center zero value versus one value zero as people that did

127

00:08:42,640  -->  00:08:43,690
not survive.

128

00:08:43,690  -->  00:08:52,750
One is people that did survive would be interesting is to try to continue this plot of bar plots by

129

00:08:52,870  -->  00:08:54,620
let's say class.

130

00:08:54,840  -->  00:08:59,700
So I'll say G-G plot's again pass my training data.

131

00:09:00,280  -->  00:09:02,290
I'm going to say peak class

132

00:09:05,000  -->  00:09:12,670
pass in geombar And what I'm going to go ahead and do is if I said I'm just passing geometer score bar

133

00:09:13,280  -->  00:09:22,060
NSA aesthetic and say the fill of the bar is by a factor of the P class which essentially I just want

134

00:09:22,060  -->  00:09:24,580
to color this by that P class.

135

00:09:24,610  -->  00:09:26,780
Let's go ahead and run that.

136

00:09:27,010  -->  00:09:33,790
And that allows me to automatically color by class looks like by far there was a lot more third class

137

00:09:33,790  -->  00:09:38,620
passengers than either just second class passengers or first class passengers.

138

00:09:38,620  -->  00:09:43,800
And there's slightly more first class passengers than second class passengers.

139

00:09:43,810  -->  00:09:49,030
Let's go ahead and do the same thing for the gender or sex of the passengers just to get an idea of

140

00:09:49,030  -->  00:09:51,150
there's more men than women on board.

141

00:09:51,150  -->  00:10:00,280
A message going to replace this with sex here and it replace P.E. class with the sex column there.

142

00:10:00,490  -->  00:10:03,420
Let's go ahead and run that.

143

00:10:03,790  -->  00:10:10,270
And here we can also see that there's a lot more males on board versus females on board almost around

144

00:10:10,270  -->  00:10:11,720
double the amount.

145

00:10:12,340  -->  00:10:15,130
Let's go ahead and continue on with a histogram.

146

00:10:15,160  -->  00:10:22,980
I'm going to clear these plot calls just so this is a little cleaner and SAGD plot to the left train

147

00:10:23,000  -->  00:10:23,280
.

148

00:10:24,340  -->  00:10:31,800
And let's go ahead and get a histogram of the ages onboard so say Jiya underscore histogram and I'm

149

00:10:31,800  -->  00:10:41,220
just going to say been 0 to 20 let's make alpha 0.5 and let's also say Phil just so you get a nicer

150

00:10:41,220  -->  00:10:43,950
colors blue.

151

00:10:43,950  -->  00:10:46,200
All right I notice it gives you a warning message.

152

00:10:46,200  -->  00:10:52,800
177 rows containing non-finite values were removed and those were the end values we saw earlier under

153

00:10:52,800  -->  00:10:54,480
the age column.

154

00:10:54,480  -->  00:10:56,460
So checking look at this.

155

00:10:56,520  -->  00:11:01,550
Looks like most people on board were somewhere between the ages of 20 and 40.

156

00:11:01,560  -->  00:11:03,470
We have less older people.

157

00:11:03,480  -->  00:11:08,550
But interestingly enough we actually have quite a few young people and children on board which is interesting

158

00:11:08,550  -->  00:11:10,600
to know.

159

00:11:11,490  -->  00:11:14,080
Going to go ahead and say Gigi.

160

00:11:14,100  -->  00:11:22,560
Let's make a few more visualisations the F train and let's go ahead and take a look at the sibling and

161

00:11:22,560  -->  00:11:32,160
spouse is on board and we'll go to make a bar plot just to get an idea of the sibling count or spouse

162

00:11:32,160  -->  00:11:32,850
count.

163

00:11:33,210  -->  00:11:38,280
Ok looks like the majority of people didn't have any siblings or spouses on board.

164

00:11:38,310  -->  00:11:43,530
So just a bunch of single people on the Titanic which kind of makes sense specially seeing how many

165

00:11:43,530  -->  00:11:45,950
third class men were on board.

166

00:11:45,960  -->  00:11:50,980
A lot of them just single workers on a one way trip on the Titanic.

167

00:11:51,480  -->  00:11:54,870
Probably a little more one way than they would have liked.

168

00:11:54,900  -->  00:12:01,650
Let's go ahead and continue by just doing a quick histogram of the fares paid to might be interesting

169

00:12:01,650  -->  00:12:02,620
to check checkout.

170

00:12:02,720  -->  00:12:06,120
Well say geez you plot the F train.

171

00:12:06,770  -->  00:12:14,370
I'm going to say the it is fair since I want to plot a histogram of fair will say GM underscore histogram

172

00:12:15,400  -->  00:12:16,450
.

173

00:12:16,530  -->  00:12:21,230
Let's go ahead and click enter here.

174

00:12:21,360  -->  00:12:24,620
I'm going to add a little more color to this since.

175

00:12:24,840  -->  00:12:27,390
Just to make it a little more readable I'm going to say Phil is green

176

00:12:30,030  -->  00:12:38,310
and our say color equals black and the color is the outline and the fill is the actual fill value of

177

00:12:38,310  -->  00:12:39,070
the color.

178

00:12:39,180  -->  00:12:42,870
And I'm going to go ahead and say Alfas equal to 0.5.

179

00:12:42,960  -->  00:12:46,860
This will make this plot a little nicer.

180

00:12:46,860  -->  00:12:47,250
OK.

181

00:12:47,280  -->  00:12:53,720
Looks like most people paid a low fare which makes sense because most people were on the third class

182

00:12:53,970  -->  00:12:59,310
and these higher fare values are probably only for the first or second class passengers.

183

00:12:59,370  -->  00:13:04,650
You can go ahead and play the bin amount or the bin with to view this data a little more closely if

184

00:13:04,640  -->  00:13:06,110
you want to.

185

00:13:06,960  -->  00:13:12,930
Well we're going to go ahead and do now is explore data cleaning and trying to fill in that missing

186

00:13:13,020  -->  00:13:13,860
data.

187

00:13:13,860  -->  00:13:19,140
We're going to need to make sure the state is clean and tidy before we actually run it through our logistic

188

00:13:19,130  -->  00:13:21,110
regression model.

189

00:13:21,660  -->  00:13:27,690
If we remember back to the missing map data where we have an issue if we have a bunch of N A value is

190

00:13:28,110  -->  00:13:35,880
in our data for age one way we could get rid of these any values is just drop all the rows the Haven't

191

00:13:35,940  -->  00:13:37,870
any value for age.

192

00:13:37,880  -->  00:13:39,690
However that's just too much data.

193

00:13:39,690  -->  00:13:46,810
Remember those 177 rows of data that was missing out of the around 800 900 total rows.

194

00:13:46,840  -->  00:13:51,390
That's just a little too much for us to comfortably get rid of all that data.

195

00:13:51,430  -->  00:13:58,290
They'll be throwing away a lot of information which you could also do is fill in that data through imputation

196

00:13:58,300  -->  00:13:58,580
.

197

00:13:58,590  -->  00:14:03,750
And one way you could do that is by filling in the average age of all the passengers.

198

00:14:03,820  -->  00:14:09,180
However you can be even smarter than just filling in the average age but actually fill in the average

199

00:14:09,240  -->  00:14:11,240
age by passenger class.

200

00:14:11,250  -->  00:14:14,780
And let me go ahead and show you how we can do this.

201

00:14:15,720  -->  00:14:26,910
Well say P.L. Gigi Plaut the train and I'm going to go ahead and make a bar plot or a box plot excuse

202

00:14:26,910  -->  00:14:39,450
me of class versus age and then let's go ahead and then reassigned people to P.L. Plus GM underscore

203

00:14:39,480  -->  00:14:44,750
box plots and going to head and put in a couple of special arguments here.

204

00:14:44,760  -->  00:14:56,100
I will say group P.E. class I always say Phil is the factor of P.E. class and this is mostly just for

205

00:14:56,150  -->  00:14:58,810
visualization purposes making it look nice.

206

00:14:58,880  -->  00:15:04,340
Now is the alpha equal to zero point for.

207

00:15:04,600  -->  00:15:12,120
And then finally what I'm going to go ahead and do is say P.L. plus scale y continuous and this will

208

00:15:12,120  -->  00:15:18,580
just allow me to set the actual numbers on the Y scale just for readability.

209

00:15:18,580  -->  00:15:24,190
You don't have to do all this but this just makes the plot look a little nicer scale y continuous basically

210

00:15:24,190  -->  00:15:27,480
just allows you to set the numbers on the y axis.

211

00:15:27,530  -->  00:15:30,720
Current system ground zero 100 200 300.

212

00:15:30,720  -->  00:15:36,130
But through this argument you can actually put in the number of breaks you want and the breaks argument

213

00:15:36,380  -->  00:15:38,100
is just a vector.

214

00:15:38,110  -->  00:15:40,710
This case I will use the SE Q function.

215

00:15:40,720  -->  00:15:43,450
The regular sequence generator function.

216

00:15:43,850  -->  00:15:56,520
I'll go ahead and say them in and 0 Max 80 and we'll go ahead and go by two.

217

00:15:57,490  -->  00:15:59,260
And this is the plot we get out.

218

00:15:59,290  -->  00:16:00,130
Kind of nice.

219

00:16:00,250  -->  00:16:04,910
Let's go ahead and make it just a tiny bit nicer by saying theme underscore.

220

00:16:04,980  -->  00:16:07,390
BW My favorite theme.

221

00:16:07,810  -->  00:16:08,610
And there we have it.

222

00:16:08,620  -->  00:16:10,230
Let's zoom in on this.

223

00:16:10,240  -->  00:16:16,750
The reason I made this plot was because I wanted to show you basically a smarter way of actually imputing

224

00:16:16,750  -->  00:16:17,810
those values.

225

00:16:17,950  -->  00:16:21,250
Remember we're missing about 20 percent of our age data.

226

00:16:21,280  -->  00:16:27,430
We could just grab the average age of every passenger and stick it as a replacement for all of that

227

00:16:27,430  -->  00:16:28,750
missing age data.

228

00:16:28,750  -->  00:16:36,370
However what we're going to do is be a little bit smarter and impute the average age by class because

229

00:16:36,370  -->  00:16:42,370
notice that first class passengers are a little older than second class passengers and second class

230

00:16:42,370  -->  00:16:45,550
passengers are a little older than third class passengers.

231

00:16:45,700  -->  00:16:51,460
This intuitively makes a little bit of sense because being in first class requires you to be a little

232

00:16:51,460  -->  00:16:58,210
wealthier and it probably takes a little more time to acquire that sort of wealth versus people in third

233

00:16:58,210  -->  00:17:04,770
class or these younger mostly men passengers who don't have as much money and are much younger than

234

00:17:04,780  -->  00:17:06,520
they are first class counterparts.

235

00:17:06,630  -->  00:17:08,360
So is the average age here.

236

00:17:08,470  -->  00:17:14,400
First class you're looking at about 37 second class around 29.

237

00:17:14,400  -->  00:17:17,070
And third class you're looking at about 24.

238

00:17:17,080  -->  00:17:22,120
So there's definitely a big difference from first class to third class as far as your average age.

239

00:17:22,120  -->  00:17:27,310
Well we're going to do is create a function in order to take that into account when we replaced the

240

00:17:27,340  -->  00:17:28,440
values.

241

00:17:28,450  -->  00:17:33,880
Let's go ahead and quickly make that function and actually going to copy and paste it from the notes

242

00:17:34,330  -->  00:17:42,370
and go through it and that will end part 1 of this lecture and then go ahead and leave those guys.

243

00:17:42,370  -->  00:17:43,870
So we'll call this section

244

00:17:46,270  -->  00:17:51,350
imputation of age based on class.

245

00:17:53,130  -->  00:17:55,760
And I'm going to go ahead and make a function to do that.

246

00:17:55,780  -->  00:18:00,480
Let me walk through it and actually copy and paste it from the notes here and hopefully have the ability

247

00:18:00,490  -->  00:18:03,050
to actually make the sort of function on your own.

248

00:18:03,100  -->  00:18:09,220
It's relatively simple as far as what the logic is doing what this is going to do is it's called imputes

249

00:18:09,280  -->  00:18:10,600
underscore age.

250

00:18:10,600  -->  00:18:18,070
It's a function that takes an age and class and then it has an outs as the age.

251

00:18:18,070  -->  00:18:21,010
So I noticed this doctor's going to be that way.

252

00:18:21,040  -->  00:18:27,550
Sensu are going to do is pass in the age column and the class column and then I'm going to say for I

253

00:18:27,550  -->  00:18:29,450
in one to length of age.

254

00:18:29,470  -->  00:18:38,590
So for every element in the age column I'm going to check if that age is an and a value if it's not

255

00:18:38,660  -->  00:18:44,010
an a value we can go all the way down to the else statement here that lines up that if I'm just going

256

00:18:44,020  -->  00:18:47,190
to say out of I is equal to age.

257

00:18:47,620  -->  00:18:54,990
So I'm using index is and I'm going to eventually just return out here that will be my fixed age if

258

00:18:55,000  -->  00:18:55,510
it is.

259

00:18:55,530  -->  00:19:00,850
And they are going to check the class of that specific passenger which is why musing I hear numbers

260

00:19:00,870  -->  00:19:07,350
saying for I and 1 through length of age essentially is going around indexing and then I'm saying if

261

00:19:07,360  -->  00:19:14,010
class of icicle to one of and a first class than out of I is 37.

262

00:19:14,110  -->  00:19:20,640
If the class of time is equal to second class the person's age going to be 29 the average of that otherwise

263

00:19:20,630  -->  00:19:21,820
it means they're in third class.

264

00:19:21,820  -->  00:19:28,100
So they're 24 years old and that's the way we can impute the average age based off of their class.

265

00:19:28,120  -->  00:19:34,050
And then once we have that function we can just go ahead and do something like this.

266

00:19:34,060  -->  00:19:44,970
I would say fixed dark ages and then call the imputes age function and in the age column as the first

267

00:19:44,970  -->  00:19:51,240
argument and then the class column as the second argument.

268

00:19:51,250  -->  00:19:51,850
All right.

269

00:19:52,120  -->  00:19:54,280
That's it for part 1 of this lecture.

270

00:19:54,310  -->  00:19:58,120
We'll go ahead and start right where we left off in part two.

271

00:19:58,120  -->  00:20:00,000
Thanks everyone and I'll see you at the next lecture
