1

00:00:01,620  -->  00:00:07,080
Hello everyone and welcome to the linear regression project solutions walk through for this project

2

00:00:07,080  -->  00:00:07,120
.

3

00:00:07,140  -->  00:00:13,410
What you had to do was explore and create a linear regression model trying to predict bike sharing demand

4

00:00:13,420  -->  00:00:13,540
.

5

00:00:13,680  -->  00:00:17,700
And it's actually it was a Kaggle or Kaggle challenge project.

6

00:00:17,730  -->  00:00:22,960
Let's go ahead and jump to our studio and walk through the solutions.

7

00:00:23,040  -->  00:00:23,440
OK.

8

00:00:23,490  -->  00:00:26,200
So here we are in our studio.

9

00:00:26,370  -->  00:00:32,970
Make sure that you went ahead and downloaded the BikeShare dot CSV file that was included in the notebook

10

00:00:33,000  -->  00:00:33,590
download.

11

00:00:33,690  -->  00:00:36,900
Or you can go ahead and download it directly from Kaggle.

12

00:00:37,080  -->  00:00:40,290
All we had to do was just complete the tasks outlined in The Notebook.

13

00:00:40,560  -->  00:00:42,760
First step was getting the data.

14

00:00:42,780  -->  00:00:44,260
Let's go ahead and do that.

15

00:00:44,310  -->  00:00:50,460
We wanted to read in the BikeShare that CSP file and set it to a data frame called like that's just

16

00:00:50,470  -->  00:00:59,460
saying bike read CSV and bikeshare notice since I already have this bike share that CXXVI in my working

17

00:00:59,460  -->  00:01:03,010
directory which is just here on their files tab.

18

00:01:03,070  -->  00:01:08,640
I just get to say like sure that cxxviii if you have the CSP file somewhere else you'll have to put

19

00:01:08,640  -->  00:01:10,680
in the whole path to the file.

20

00:01:10,680  -->  00:01:19,230
Let's go ahead and just check out the head of the bike file or that data from scootch this over to the

21

00:01:19,230  -->  00:01:20,080
right.

22

00:01:20,600  -->  00:01:21,010
OK.

23

00:01:21,090  -->  00:01:23,710
So we have quite a few variables.

24

00:01:23,820  -->  00:01:31,260
Notice we have a date time which is an hourly date plus a time stamp a season either 1 2 3 or 4 for

25

00:01:31,260  -->  00:01:38,940
spring summer fall and winter a holiday weather day is considered a holiday a working day 0 or 1 weather

26

00:01:38,940  -->  00:01:41,290
days neither a weekend or holiday.

27

00:01:41,370  -->  00:01:47,200
Some weather factor variables such as Clear mist light snow or heavy rain.

28

00:01:47,220  -->  00:01:53,850
Temperature in Celsius a temp which is what it feels like which takes into account things like humidity

29

00:01:53,850  -->  00:01:54,620
and wind.

30

00:01:54,840  -->  00:01:59,970
And we also have humidity and wind here and then casual which is a number of non-registered user rentals

31

00:01:59,970  -->  00:02:05,430
initiated registered which was the number of registered user rentals initiated and count which was the

32

00:02:05,430  -->  00:02:07,080
number of total rentals.

33

00:02:07,080  -->  00:02:11,820
Again you can refer to the notes if you want all the information on each of these variables represents

34

00:02:12,570  -->  00:02:15,850
what we want to do is figure out what is the target we're trying to predict.

35

00:02:15,870  -->  00:02:21,630
You have to check out the Kaggle link and hopefully discover that what you're trying to predict is this

36

00:02:21,630  -->  00:02:28,140
final count column you want to try to predict based off the various features of that particular day

37

00:02:28,200  -->  00:02:29,390
or hour.

38

00:02:29,520  -->  00:02:33,360
How many bikes are actually going to be rented at that time slot.

39

00:02:33,750  -->  00:02:37,080
Let's go at a start off of exploratory data analysis.

40

00:02:37,080  -->  00:02:42,880
The main point of this project was to get you comfortable with EDK or exploratory data analysis.

41

00:02:43,020  -->  00:02:48,110
So this is just such a huge part of performing data science data sets.

42

00:02:48,110  -->  00:02:49,410
You haven't seen before.

43

00:02:49,830  -->  00:02:53,710
Let's go ahead and call library.

44

00:02:54,620  -->  00:03:01,470
You plot to answer the first question was create a scatterplot of count versus temp.

45

00:03:01,740  -->  00:03:04,830
And it was also noted to set a good alpha value.

46

00:03:04,830  -->  00:03:07,050
Let's go ahead and do that.

47

00:03:07,080  -->  00:03:09,780
I'm actually going to run this in the console.

48

00:03:09,780  -->  00:03:14,080
Let me hash tag out that print statements clear the console.

49

00:03:14,850  -->  00:03:17,570
I'm going to call library plot.

50

00:03:18,140  -->  00:03:27,610
And then I going SHC plots Pessin my bike data and I'm going to plot out temperature as my X and count

51

00:03:27,720  -->  00:03:34,550
as my y and then the scatterplot hopefully are able to figure out that you should be calling Geum point

52

00:03:34,550  -->  00:03:35,700
.

53

00:03:35,760  -->  00:03:39,670
Let's go ahead and just call GM point and see what we get when we run this.

54

00:03:40,420  -->  00:03:43,660
Let's hope it's plots like zoom.

55

00:03:43,710  -->  00:03:44,040
All right.

56

00:03:44,040  -->  00:03:45,690
Now they've zoomed in on this plot.

57

00:03:45,690  -->  00:03:48,570
There's a few things I can immediately tell.

58

00:03:48,570  -->  00:03:53,340
One is that it would be good to set an alpha value because they don't really know how many points are

59

00:03:53,340  -->  00:03:55,360
stacked on top of each other.

60

00:03:55,390  -->  00:03:57,300
Are these lower count levels.

61

00:03:57,300  -->  00:03:58,840
It's a little hard to tell.

62

00:03:58,890  -->  00:04:04,110
The other one is that there's clearly a discrete jump when we're actually measuring temperature.

63

00:04:04,110  -->  00:04:06,420
There's no continuous values of temperature.

64

00:04:06,420  -->  00:04:11,310
There are actually things like 10 11 12 etc. which is why we get these sort of lines.

65

00:04:11,310  -->  00:04:15,280
Let's go ahead and try to edit this in order to make it even more clear.

66

00:04:15,390  -->  00:04:24,190
I'm going to go ahead and set an alpha value equal to let's say 0.3 and let's go ahead and run.

67

00:04:24,190  -->  00:04:28,450
That's.

68

00:04:28,560  -->  00:04:29,810
Check out the zoom here.

69

00:04:29,820  -->  00:04:30,300
All right.

70

00:04:30,300  -->  00:04:35,220
Now it's definitely starting to get a little more clear as to the information of where we have a lot

71

00:04:35,220  -->  00:04:41,340
of points stacked on top of each other and where we have just singular points and continue playing around

72

00:04:41,340  -->  00:04:42,240
with this.

73

00:04:42,330  -->  00:04:48,390
Something I did in the solutions which you didn't have to do but makes for a nice pretty graph is to

74

00:04:48,390  -->  00:04:56,550
actually use under GMAT score point aesthetics color equals temp and this will allow us to set the color

75

00:04:56,550  -->  00:04:58,070
based off the temperature.

76

00:04:58,350  -->  00:05:01,450
And then I also added a theme.

77

00:05:01,440  -->  00:05:07,390
BW just it's a little nicer.

78

00:05:07,440  -->  00:05:12,990
Now if we click zoom here now we have a pretty nice plot as far as interpret the results.

79

00:05:12,990  -->  00:05:19,560
I can see here that we have some heavy repeated counts over on the low counts of low temperatures and

80

00:05:19,560  -->  00:05:25,750
then lighter temperatures over here it's 40 degrees for higher count levels.

81

00:05:26,160  -->  00:05:31,950
But you can see the general trend that as you increase in temperature you get an increasing counts and

82

00:05:31,940  -->  00:05:35,160
that's basically all you really need to tell from this plot.

83

00:05:35,250  -->  00:05:40,790
Go ahead and mess around with your cheesy plot skills if you want to further customizes plot.

84

00:05:40,940  -->  00:05:47,790
We'll go ahead and move on to the next assignments or task which was the plot count versus date time

85

00:05:47,880  -->  00:05:53,850
as a scatterplot color gradient based off of temperature you'll need to convert the date time column

86

00:05:54,120  -->  00:05:58,310
into POS IXC t before plotting.

87

00:05:59,370  -->  00:06:01,910
Let's go ahead and do that.

88

00:06:02,400  -->  00:06:04,710
First thing I need to do is convert

89

00:06:07,920  -->  00:06:14,490
to time stamp and go ahead and review the time stamp lecture if you're a little fuzzy on this.

90

00:06:14,490  -->  00:06:28,210
But basically I'm just going to say the date time column of bike as day six city like Date Time.

91

00:06:28,750  -->  00:06:29,990
So go ahead and run.

92

00:06:30,000  -->  00:06:33,060
That's great.

93

00:06:33,060  -->  00:06:39,450
Now for a checkup by day time it should be as this time stamp information which means I can go ahead

94

00:06:39,480  -->  00:06:41,180
and start plotting it out.

95

00:06:41,260  -->  00:06:52,750
Analysts say G-G plots pass in bike and this one I want to plot is date time versus counts here.

96

00:06:52,760  -->  00:06:54,440
So count is on the Y date.

97

00:06:54,450  -->  00:07:00,540
Time is on X and then I want to scatterplot so geometer score point.

98

00:07:00,870  -->  00:07:07,390
It's the instruction I specifically requested that the caller great is based off temperature which means

99

00:07:07,390  -->  00:07:16,290
I'm going to go ahead and say under æsthetics here other GM points color equals temp and then I'll say

100

00:07:16,290  -->  00:07:20,050
Alpha is equal to zero point five.

101

00:07:20,190  -->  00:07:27,780
I'm going to go ahead and set this all to an object call P.L. and then I'm going to go ahead and print

102

00:07:27,810  -->  00:07:32,790
people because it's going to be a few more things I want to do of peel before we finally finished this

103

00:07:32,790  -->  00:07:34,500
.

104

00:07:34,560  -->  00:07:35,600
All right.

105

00:07:35,610  -->  00:07:39,530
What's interesting here is that you can kind of see a little bit of a trend.

106

00:07:39,600  -->  00:07:43,270
You notice a seasonality for the data for winter and summer.

107

00:07:43,520  -->  00:07:46,560
And you also note that bike rental counts are increasing in general.

108

00:07:46,560  -->  00:07:52,980
You kind of see these two modes and one to try to edit the color gradient to make this very clear.

109

00:07:53,220  -->  00:07:57,170
We're going to close this before we completely start analyzing the data.

110

00:07:57,660  -->  00:08:05,030
I'm going to take P.L. and I'm going to add or customize this color scale right now it goes from dark

111

00:08:05,040  -->  00:08:08,840
blue to light blue which is the default.

112

00:08:09,380  -->  00:08:20,130
And I'm going to customize it by using scale color underscore continuous and then with this I can specify

113

00:08:20,250  -->  00:08:23,580
the low value and the high value of the color.

114

00:08:23,580  -->  00:08:27,820
I went ahead and just kind of searched online for some pretty colors.

115

00:08:27,890  -->  00:08:34,950
I'm going to go out and copy them from the notebook but you can choose red or blue or whatever colors

116

00:08:34,950  -->  00:08:36,320
make sense to you.

117

00:08:36,330  -->  00:08:41,540
I played around the colors for a little bit and found that these two hex colors look nice and are clear

118

00:08:41,550  -->  00:08:42,460
to me.

119

00:08:43,380  -->  00:08:45,810
And then I'm going to go and say theme underscore.

120

00:08:45,840  -->  00:08:51,390
BW is one of my favorite themes and cheesy plot just because it makes a nice white background.

121

00:08:51,630  -->  00:08:54,920
Go ahead and call that.

122

00:08:55,110  -->  00:09:00,510
And here we have a new plot which to me is quite a bit more clear than the previous plot.

123

00:09:00,650  -->  00:09:05,970
And here we can definitely notice the two trends we have seasonality to the data for summer in winter

124

00:09:05,970  -->  00:09:06,380
.

125

00:09:06,380  -->  00:09:11,510
If you notice during the winter months we have lower counts versus the subsequent summer months.

126

00:09:11,510  -->  00:09:17,240
So over here we have winter notice that starts in January and as we move towards summer we get an increasing

127

00:09:17,250  -->  00:09:20,720
number of bike rentals again as we go back to winter.

128

00:09:20,730  -->  00:09:27,020
We see a decrease in bike rentals and as we continue on going to summer again you get an increase in

129

00:09:27,030  -->  00:09:27,690
bike rentals.

130

00:09:27,710  -->  00:09:31,070
That's one trend you see the winter summer winter summer.

131

00:09:31,080  -->  00:09:38,100
The other trend is that overall just as time progresses from 2011 to 2013 you see an increase in the

132

00:09:38,100  -->  00:09:40,230
number of bike rentals period.

133

00:09:40,230  -->  00:09:46,040
So the summer of 2011 had less rentals in the summer of 2012.

134

00:09:46,080  -->  00:09:51,590
This may or may not be good for a linear regression model depending how it's actually trying to predict

135

00:09:52,290  -->  00:09:55,710
the new count values.

136

00:09:55,710  -->  00:10:04,180
OK let's keep all of this in mind as we continue on with the solutions what we wanted to know next was

137

00:10:04,180  -->  00:10:07,810
what was the correlation between temperature and counts.

138

00:10:07,850  -->  00:10:13,210
Hopefully you remembered from the lectures that you can use the CEO are or correlation function in order

139

00:10:13,220  -->  00:10:18,370
to grab correlations but you have to figure out what you can actually just pass in columns directly

140

00:10:18,920  -->  00:10:27,440
so you can say something like we're going to clear this C or our bike Khama all rows for the columns

141

00:10:27,440  -->  00:10:27,460
.

142

00:10:27,470  -->  00:10:34,040
And here we can just pass an advocate or columns so capacitor temperature and then counts.

143

00:10:35,050  -->  00:10:40,460
And you can see now the correlation between temperature and count is around 0.4.

144

00:10:40,510  -->  00:10:46,390
We wanted to continue to explore the season data and we wanted to create a box plot with the y axis

145

00:10:46,420  -->  00:10:52,430
in the keening count and the x axis beginning a box for each season.

146

00:10:52,420  -->  00:10:54,890
Let's go ahead and do that.

147

00:10:54,910  -->  00:11:02,860
I'm going to say G-G plot pasand that my data which is bike æsthetics I want to do is season but remember

148

00:11:02,870  -->  00:11:11,540
season is a factor so I want to say Factor Season and then it counts then something a box plot and then

149

00:11:11,600  -->  00:11:17,320
go ahead and say GM underscore box plot and I'm going to go ahead and color

150

00:11:20,840  -->  00:11:22,110
by the season.

151

00:11:22,220  -->  00:11:25,380
Again I have to say Factor season since season is a factor.

152

00:11:25,420  -->  00:11:26,990
One two three or four.

153

00:11:27,130  -->  00:11:30,070
And then after all this I'll just go ahead and add a theme to it.

154

00:11:30,110  -->  00:11:31,540
I really liked the theme.

155

00:11:31,540  -->  00:11:33,930
BW since it's simple.

156

00:11:34,100  -->  00:11:35,680
Go ahead and put it all in.

157

00:11:35,800  -->  00:11:37,760
Check it out.

158

00:11:37,750  -->  00:11:38,290
All right.

159

00:11:38,290  -->  00:11:40,220
And this is what it looks like.

160

00:11:40,350  -->  00:11:41,440
Notice what this says.

161

00:11:41,470  -->  00:11:47,260
That means Slyne can't capture a non-linear relationship and that there's more rentals in winter than

162

00:11:47,330  -->  00:11:48,790
in spring.

163

00:11:49,030  -->  00:11:52,450
We know these issues because of the growth of the rental count.

164

00:11:52,610  -->  00:11:55,850
That's actually due to the season.

165

00:11:56,700  -->  00:12:03,430
And the reason I say that is because if you look at this box plot here it gives the indication that

166

00:12:03,500  -->  00:12:13,010
the most popular seasons to have the highest count of bike rentals are seasons 2 and 3 which are summer

167

00:12:13,100  -->  00:12:14,260
and fall.

168

00:12:14,500  -->  00:12:19,000
But you'll notice that spring is quite a bit lower than winter.

169

00:12:19,030  -->  00:12:26,320
Again that's because if we take a look back at our last plot here whoops.

170

00:12:26,530  -->  00:12:27,300
This one.

171

00:12:27,590  -->  00:12:30,300
The colored version of this.

172

00:12:30,580  -->  00:12:39,100
There is a continual growth and that's going to set off those kind of box plot diagrams because here

173

00:12:39,130  -->  00:12:45,220
we have a strong winter compared to the summer of 2011.

174

00:12:45,380  -->  00:12:52,030
But the summer of 2012 is much stronger as far as count numbers versus those lower winters.

175

00:12:52,030  -->  00:12:57,140
And that's because the trend that bike rental counts are moving up in general.

176

00:12:57,130  -->  00:13:01,610
However if you fall along with your mouse you can still see that there's a seasonality to that data

177

00:13:02,140  -->  00:13:06,790
and that's going to throw off a linear regression analysis as always.

178

00:13:06,790  -->  00:13:12,550
Keep that in mind as you're moving along with your exploratory data analysis of your data.

179

00:13:12,790  -->  00:13:17,330
A lot of times you only to use domain knowledge and experience to engineer create new features.

180

00:13:17,480  -->  00:13:25,100
Let's go ahead and move away from G-G plot for a second and try to perform some feature engineering

181

00:13:25,150  -->  00:13:27,750
.

182

00:13:30,390  -->  00:13:36,590
OK let's go ahead and create in our column that takes the hour from the date time column and you can

183

00:13:36,590  -->  00:13:37,980
do this a variety of ways.

184

00:13:38,020  -->  00:13:43,480
And there are some hints for you in the notebook but the simplest way is just to use an anonymous function

185

00:13:43,490  -->  00:13:46,120
with the Apply or apply method.

186

00:13:46,220  -->  00:13:59,020
I'm going to say bike hour to create a new column bike hour and say a supply bike date time and I want

187

00:13:59,020  -->  00:14:02,860
to create an anonymous function meaning I'm not going to create an entire function.

188

00:14:03,080  -->  00:14:08,660
I'm just going to go ahead and create an anonymous one.

189

00:14:08,770  -->  00:14:12,900
You could have gone ahead and created a function yourself.

190

00:14:12,910  -->  00:14:20,670
But this is a little easier as far as saving space in the way you would have noted this as far as you're

191

00:14:20,710  -->  00:14:23,570
maybe you're asking yourself how would I have known to done this format.

192

00:14:23,570  -->  00:14:30,150
The answer is actually a hint in your notebooks or your notebook actually has my copy and paste it.

193

00:14:30,460  -->  00:14:35,180
It has this as a hint so hopefully you're able to figure out that you could have formatted using this

194

00:14:35,260  -->  00:14:36,990
time stamp.

195

00:14:37,000  -->  00:14:40,090
Large our large h sign capital H.

196

00:14:40,370  -->  00:14:43,630
OK let's go ahead and move along.

197

00:14:43,630  -->  00:14:46,630
That's the feature engineering that's how you can create a bike.

198

00:14:46,660  -->  00:14:47,790
Our column.

199

00:14:48,050  -->  00:14:55,260
So if we go ahead and print the head of bike we should see that now.

200

00:14:58,080  -->  00:15:03,800
All right so now we have an hour column that indicates our from zero to 24.

201

00:15:04,470  -->  00:15:10,680
Let's go ahead and continue on using this information by creating a scatterplot of count versus our

202

00:15:11,070  -->  00:15:15,840
with a color scale based on temperature and also only use bike data.

203

00:15:15,840  -->  00:15:18,390
We're working days equal to one.

204

00:15:18,900  -->  00:15:26,850
I'm going to go ahead and put in a call to the supplier library.

205

00:15:26,870  -->  00:15:32,520
It's going to make that filter just a little more readable to use make believe that print statement

206

00:15:32,640  -->  00:15:37,470
and I'll delete this print statements may clear this up.

207

00:15:37,680  -->  00:15:46,090
And let's start with that scatterplot or go ahead and do this in the script.

208

00:15:46,830  -->  00:16:00,260
I want to say P L is equal to G-G plots and I'm going to filter bike by working day equal to one.

209

00:16:00,840  -->  00:16:03,310
And that's what I'm passing in as my data.

210

00:16:03,570  -->  00:16:07,860
So I'm not just going to pass and bike and then a person the filter of bike or working day is equal

211

00:16:07,860  -->  00:16:09,300
to one meaning.

212

00:16:09,300  -->  00:16:15,800
Monday Tuesday Wednesday Thursday Friday and then for the aesthetics it's going to be our on the x axis

213

00:16:15,870  -->  00:16:18,960
and count on the y axis.

214

00:16:18,960  -->  00:16:27,480
Let's go ahead and add some more to appeal to musée peoples then equal to P.L. Plus GM underscore points

215

00:16:27,480  -->  00:16:32,490
for the scatterplot and I'm going to add some additional arguments later on.

216

00:16:32,610  -->  00:16:42,270
But let's go ahead and keep it as Geum point right now and I will say Prince P L is going to run this

217

00:16:42,270  -->  00:16:42,640
.

218

00:16:42,660  -->  00:16:46,190
See if it all worked out for us right.

219

00:16:46,360  -->  00:16:47,890
But go ahead and zoom on this.

220

00:16:48,000  -->  00:16:49,760
I get an interesting plot here.

221

00:16:49,830  -->  00:16:57,510
I can see on an average the number of used counts are bike rental counts based on the hour of the day

222

00:16:57,510  -->  00:16:57,790
.

223

00:16:58,050  -->  00:17:01,680
We see here that it's pretty low in the early morning which makes sense.

224

00:17:01,680  -->  00:17:04,340
Lowest is around 3:00 in the morning makes sense.

225

00:17:04,340  -->  00:17:06,700
No one's really out at 3:00 in the morning on their bicycle.

226

00:17:06,810  -->  00:17:11,970
But as the commute hour starts to pick up especially around 7:00 a.m. 9:00 a.m. People are trying to

227

00:17:11,970  -->  00:17:12,980
get to work.

228

00:17:13,050  -->  00:17:16,650
A lot of people need to get to work on their bikes or they go ahead and rent that bike.

229

00:17:16,650  -->  00:17:18,000
Then it dies down again.

230

00:17:18,000  -->  00:17:23,520
A little peak around lunchtime but then a major peak where people are out of off of work and trying

231

00:17:23,520  -->  00:17:25,800
to head home or maybe they're off of work.

232

00:17:25,800  -->  00:17:27,010
I want to go on a bike ride.

233

00:17:27,160  -->  00:17:31,500
And then it slowly dies down towards the evening.

234

00:17:31,500  -->  00:17:36,540
Let's go ahead and try to get some more information out of this plot through the use of skill color

235

00:17:36,540  -->  00:17:40,090
gradients and jitter.

236

00:17:40,110  -->  00:17:43,250
First of all add in scale color gradients.

237

00:17:43,470  -->  00:17:55,050
So I'm going to say P.L. in assign it to people plus a scale underscore color underscore gradients.

238

00:17:55,080  -->  00:18:00,390
And I'm going to go ahead and say gradient n and what gradients and and if you want more information

239

00:18:00,510  -->  00:18:10,650
you can just say helped scale underscore color gradient and but essentially what does is it creates

240

00:18:10,650  -->  00:18:16,050
a two color gradient where you can actually specify the actual color names you want to perform your

241

00:18:16,050  -->  00:18:17,100
gradient.

242

00:18:17,130  -->  00:18:22,020
In this case I'm going to go ahead and just copy the colors from the notebooks it's quite a long list

243

00:18:23,730  -->  00:18:28,320
and the colors I want for my gradient are from dark blue to blue to light blue to light green to yellow

244

00:18:28,320  -->  00:18:29,520
to orange to red.

245

00:18:29,880  -->  00:18:32,690
Let's go ahead and try that out.

246

00:18:33,670  -->  00:18:43,290
Also here I'll say Prince P.L. Let's run this.

247

00:18:44,910  -->  00:18:51,870
And notice I don't get anything out because I forgot to say GM points and said æsthetics color equal

248

00:18:51,870  -->  00:18:57,650
to temperature see MP negatron from see if we get something different.

249

00:18:58,590  -->  00:19:05,130
OK now I can see what I want to see which was color based off of the temperature gradient.

250

00:19:05,130  -->  00:19:11,570
Now that we have some extra space to play around here with between the hours so between 7 and 8 there's

251

00:19:11,580  -->  00:19:12,930
a bunch of empty space.

252

00:19:12,990  -->  00:19:20,430
You can use jitter to actually fill in that space by setting the data points off of their original data

253

00:19:20,970  -->  00:19:21,930
point a little bit.

254

00:19:21,960  -->  00:19:25,030
As far as the hour point I'm going to show you how to do that.

255

00:19:25,050  -->  00:19:28,040
The instructions are in your notebooks.

256

00:19:28,080  -->  00:19:30,700
The answer is actually there but it's just an additional argument.

257

00:19:30,720  -->  00:19:38,010
Go ahead and set just inside of Geum point which you go ahead and do is paste in this line position

258

00:19:38,010  -->  00:19:42,980
equals position jitter and we add a little bit of jitter with the W which is the width.

259

00:19:43,050  -->  00:19:48,900
We don't add any jitter along the y axis height and then what I'm going to go to do finally is add alpha

260

00:19:48,930  -->  00:19:50,430
equal to or 0.5.

261

00:19:50,430  -->  00:19:54,210
Here let's go ahead and run this again.

262

00:19:54,210  -->  00:19:59,240
This is all optional you'd have to actually do any of this as far as the more advanced commands but

263

00:19:59,300  -->  00:20:02,570
it's just a nice way to make a really nice looking plot.

264

00:20:02,790  -->  00:20:10,130
And finally it's actually at a theme to this same principle plus theme underscore B W.

265

00:20:12,990  -->  00:20:13,510
All right.

266

00:20:13,510  -->  00:20:19,610
And now we have a really pretty plot's really indicating the use cases for G-G plot 2.

267

00:20:19,620  -->  00:20:27,180
As far as exploring your data here we can clearly see a trend that the high counts of the morning commute

268

00:20:27,300  -->  00:20:30,420
and then the evening commute as well as some activity during lunch.

269

00:20:30,420  -->  00:20:35,850
What's interesting with this color skill gradient is I can see that there is higher count of bike rentals

270

00:20:35,850  -->  00:20:39,440
when it gets hotter and lower counts of bike rentals when it gets cooled down.

271

00:20:39,460  -->  00:20:43,410
That's really clearly indicated by the cool colors.

272

00:20:43,410  -->  00:20:49,030
All right we're starting to finish up our exploratory data analysis section of this project.

273

00:20:49,140  -->  00:20:55,170
Coming up next we'll do one more plot of the same for non-working days centrally setting this equal

274

00:20:55,170  -->  00:20:56,420
to zero.

275

00:20:56,760  -->  00:21:01,080
And we can actually do it right now if we just plot it out for non-working days.

276

00:21:01,170  -->  00:21:02,310
Zoom in.

277

00:21:02,310  -->  00:21:04,390
Notice that you don't get that morning commute.

278

00:21:04,560  -->  00:21:07,590
And five o'clock exit is just during the day.

279

00:21:07,580  -->  00:21:10,050
This is the weekend Saturday Sunday.

280

00:21:10,050  -->  00:21:12,820
You go ahead and enjoy the day on your bike.

281

00:21:12,900  -->  00:21:13,620
OK.

282

00:21:13,830  -->  00:21:18,540
Coming up next Like I mentioned we're going to focus not any more on exploratory data analysis but actually

283

00:21:18,540  -->  00:21:20,580
building the model itself.

284

00:21:20,940  -->  00:21:21,740
Thanks everyone.

285

00:21:21,840  -->  00:21:22,740
I'll see you at the next lecture
