WEBVTT
1

00:00:00.660  -->  00:00:03.630
Hello everyone and welcome to the lecture on scatterplot.

2

00:00:03.720  -->  00:00:10.020
This lecture room to learn how to use G-G plot to place points on a plot to show possible correlations

3

00:00:10.020  -->  00:00:12.110
between two features of a dataset.

4

00:00:12.450  -->  00:00:15.120
Let's go out and jump to our studio and see how this works.

5

00:00:15.120  -->  00:00:17.340
All right so here we are our studio.

6

00:00:17.340  -->  00:00:24.540
First thing we're going to go ahead and do is in our script say library and call you plot two and we're

7

00:00:24.540  -->  00:00:29.710
going to be working with the built 10 empty cars data frame that we know pretty well.

8

00:00:30.150  -->  00:00:34.950
Let's go ahead and just check the head of it so we can get a reminder what it looks like.

9

00:00:35.580  -->  00:00:37.380
And this is what the data frame looks like.

10

00:00:37.380  -->  00:00:42.230
We have some cars the index and basically a bunch of information on those cars.

11

00:00:42.240  -->  00:00:47.820
Now let's go ahead and start building up our understanding of how to create a scatterplot with G-G plot

12

00:00:47.820  -->  00:00:48.750
.

13

00:00:48.750  -->  00:00:55.740
So first thing you to do is create our data and aesthetics layer.

14

00:00:57.300  -->  00:01:05.160
So we're going to go ahead and do is say G-G plot Hasen our data which is going to just be Earth.

15

00:01:05.160  -->  00:01:10.470
So you have two options here you can say data equals death or you don't want to write so much you can

16

00:01:10.470  -->  00:01:16.290
just pass in ZF and it will automatically know that the first argument blocks the data and then we have

17

00:01:16.290  -->  00:01:17.890
to in aesthetics.

18

00:01:17.940  -->  00:01:20.010
So in this case it's him doing a scatterplot.

19

00:01:20.010  -->  00:01:23.170
I want both x and y information.

20

00:01:23.430  -->  00:01:29.930
So I'm going to go ahead and say X equals wait and y equals mpg.

21

00:01:29.930  -->  00:01:36.460
Let's go at an assigned that to the P.L. variable and then finally to actually see something come out

22

00:01:36.460  -->  00:01:37.200
on the screen.

23

00:01:37.260  -->  00:01:38.790
We need our geometries

24

00:01:40.980  -->  00:01:41.940
geometry

25

00:01:45.270  -->  00:01:51.920
and the geometry for a scatterplot is Geum underscore points.

26

00:01:52.140  -->  00:01:56.760
And again if you didn't know that you could reference Chichi I mentioned in the histogram lecture to

27

00:01:56.760  -->  00:02:02.810
find that let's go ahead and print this out and see what we get.

28

00:02:04.110  -->  00:02:10.420
OK so there we have a rather simple but effective scatterplot replot mpg versus weight.

29

00:02:10.560  -->  00:02:16.530
We can kind of see this trend where as your weight increases your MPG goes down which kind of makes

30

00:02:16.530  -->  00:02:16.860
sense.

31

00:02:16.860  -->  00:02:23.400
A heavier car should have worst mpg since that's it for the basics of a scatterplot.

32

00:02:23.400  -->  00:02:26.380
Let's go ahead and see how we could use that cheat sheet.

33

00:02:26.470  -->  00:02:31.710
As I mentioned in the previous lecture to add some more features of this plot I'm going to go ahead

34

00:02:31.710  -->  00:02:33.990
and jump to the cheat sheet now.

35

00:02:34.020  -->  00:02:35.970
All right so here I am at the cheat sheet.

36

00:02:35.970  -->  00:02:40.560
In using this cheat sheet I would come over here to the two variables sections and I'm working with

37

00:02:40.560  -->  00:02:44.490
two variables and sister are both continuous.

38

00:02:44.490  -->  00:02:47.880
So weight was continuous and mpg was continuous.

39

00:02:47.910  -->  00:02:50.170
I know I'm using geometer score point.

40

00:02:50.220  -->  00:02:54.180
So I notice I have alpha color fill shape and size to play around with.

41

00:02:54.420  -->  00:03:01.740
So let's go ahead and see how we can use those to affect our plot jump back to our studio now.

42

00:03:01.740  -->  00:03:02.140
All right.

43

00:03:02.170  -->  00:03:08.060
I'm back at our studio and I'm going to do is play around of some of these different factors.

44

00:03:08.160  -->  00:03:12.140
Let me go ahead and clear this con. and start editing our scripts.

45

00:03:12.940  -->  00:03:20.510
OK so for things like size and shape and Alpha we can just Passement to the geometry layer like this

46

00:03:20.520  -->  00:03:25.630
we can say size and then we can pass in a general number for size.

47

00:03:25.680  -->  00:03:27.260
So for instance I pass and five.

48

00:03:27.280  -->  00:03:31.510
It'll make the size a little larger by pass in something like 10.

49

00:03:31.510  -->  00:03:33.110
Ill just make them huge.

50

00:03:33.330  -->  00:03:37.770
So you can play around with sizes a number in case you want to increase the size of those data points

51

00:03:37.770  -->  00:03:38.550
.

52

00:03:38.610  -->  00:03:44.880
And another thing pasand to geometry we'll go back to the default size and say something like Alpha

53

00:03:45.800  -->  00:03:50.500
will say zero point five actually that's going to make the size large enough so you can see the effects

54

00:03:50.500  -->  00:03:57.780
or Sagan size it was five and then you can begin to see that the overlapping points if we check it out

55

00:03:57.780  -->  00:03:58.630
here.

56

00:03:58.670  -->  00:04:00.300
Go ahead and zoom in.

57

00:04:00.600  -->  00:04:05.700
We can see that these overlapping points actually will begin to become darker.

58

00:04:05.700  -->  00:04:13.350
So again if you click plot zoom here you'll get a nice pop up zoomed version of the plot continuing

59

00:04:13.350  -->  00:04:14.030
on.

60

00:04:14.160  -->  00:04:21.270
Let's go ahead and talk about some more complicated ways of sizing and shaping our points.

61

00:04:21.270  -->  00:04:28.170
So right now we just put in alpha and we said size with a certain number where we can actually size

62

00:04:28.440  -->  00:04:33.120
our data points based off of other features in their data frame.

63

00:04:33.120  -->  00:04:39.360
So right now we're just plotting our way versus mpg or I should actually say mpg versus Wake's amputees

64

00:04:39.360  -->  00:04:40.480
on the y axis.

65

00:04:40.890  -->  00:04:48.600
And if I could pass in size as a regular integer but if I pass it in using æsthetics inside the geometry

66

00:04:48.600  -->  00:04:57.330
layer I can begin to say sizes and shapes are defined by other features or columns in my data frame

67

00:04:57.340  -->  00:04:57.430
.

68

00:04:57.510  -->  00:04:59.530
So let me go ahead and show you what I mean by that.

69

00:04:59.780  -->  00:05:03.890
If we check our data one more time and we showed up here in the global environment variable.

70

00:05:04.020  -->  00:05:09.210
We can see that we have horsepower as an other option to plot with.

71

00:05:09.210  -->  00:05:18.560
So I'm going to go ahead and say inside æsthetics size equals HP and if I run this code from source

72

00:05:19.400  -->  00:05:27.040
notice now the size of my scatterplot points grow bigger as the HP value the horsepower grows bigger

73

00:05:27.420  -->  00:05:33.260
and that's because I was able to put them inside the aesthetics of the geometry layer.

74

00:05:33.470  -->  00:05:40.820
Again if I didn't put this inside the aesthetics argument here inside the geometry point layer then

75

00:05:40.810  -->  00:05:44.880
I would have had to use size equal to some sort of standard integer value.

76

00:05:44.960  -->  00:05:50.700
But if I begin to play around with this aesthetics I can use aesthetics in the geometry layer such as

77

00:05:50.710  -->  00:05:55.140
size and shape to actually define these.

78

00:05:55.490  -->  00:06:00.910
Basically the way these points are plotted out by other features in my data frame that I didn't define

79

00:06:01.430  -->  00:06:03.710
at the data level.

80

00:06:03.730  -->  00:06:04.030
OK.

81

00:06:04.040  -->  00:06:06.620
So let's go in and keep playing around this idea.

82

00:06:06.620  -->  00:06:13.520
Imagine I wanted to set the size of my points by a let's go ahead and say and other features such as

83

00:06:13.520  -->  00:06:14.550
cylinders.

84

00:06:14.690  -->  00:06:20.980
So if I look at my data frame and from just knowing my data frame I have four cylinder cars six cylinder

85

00:06:20.990  -->  00:06:22.710
cars an eight cylinder cars.

86

00:06:22.790  -->  00:06:27.600
If I just pass and size is equal to cylinders I won't get exactly what I want.

87

00:06:27.620  -->  00:06:32.020
So if I go ahead and run this I will get cylinders.

88

00:06:32.090  -->  00:06:36.520
So I do get the sizing relevant to the cylinders or the number of cylinders.

89

00:06:36.560  -->  00:06:44.560
But notice if I just say See L are size equal C Y L R will automatically think that cylinder's is a

90

00:06:44.570  -->  00:06:46.520
continuous variable values.

91

00:06:46.510  -->  00:06:48.850
So it goes for 5 6 7 8.

92

00:06:48.950  -->  00:06:54.140
But knowing the dataset and knowing what we know about cars in case you know a little bit about cars

93

00:06:54.130  -->  00:06:59.520
that these cylinder numbers should actually be usually even at least for a dataset there all even two

94

00:06:59.570  -->  00:07:01.260
there for six or eight.

95

00:07:01.510  -->  00:07:08.530
So I know there's a set number of cylinders and this actually should be then a factor value meaning

96

00:07:08.540  -->  00:07:15.020
I have groupings by cylinder and if you remember back to the very first grammar of graphics lecture

97

00:07:15.080  -->  00:07:20.420
we actually showed how we could use Fassett grid to make multiple plots based off a cylinder and we

98

00:07:20.420  -->  00:07:23.550
had three sets of cylinders for six and eight.

99

00:07:23.570  -->  00:07:29.390
So it doesn't make sense that we have five and seven here in this auto legend the way we can fix that

100

00:07:29.540  -->  00:07:36.770
if we know it should be some sort of categorical type feature that I will call factor on that column

101

00:07:36.760  -->  00:07:37.470
.

102

00:07:37.490  -->  00:07:39.520
Let's go ahead and run this

103

00:07:43.840  -->  00:07:48.270
and make sure I have enough parentheses here.

104

00:07:48.410  -->  00:07:49.430
OK.

105

00:07:49.750  -->  00:07:56.840
So here we have now the corrects version of how we should actually be sizing by some sort of fact factor

106

00:07:56.850  -->  00:07:57.510
.

107

00:07:58.220  -->  00:08:03.440
And again what I mean by factors that that feature is categorical meaning we only have four six and

108

00:08:03.470  -->  00:08:04.340
eight as options.

109

00:08:04.350  -->  00:08:12.620
It's not some continuous spectrum of cylinder values something to keep in mind though is using size

110

00:08:12.620  -->  00:08:17.370
for a discrete variable just like we're using right now isn't usually advised.

111

00:08:17.380  -->  00:08:21.970
What you probably want to do is instead define shapes for the street variables.

112

00:08:21.980  -->  00:08:28.250
So have four cylinder cars be a triangle maybe six cylinder cars a square an eight cylinder cars b a

113

00:08:28.250  -->  00:08:29.940
circle or something like that.

114

00:08:30.040  -->  00:08:34.870
And we can actually do that by passing in shape instead of size.

115

00:08:34.880  -->  00:08:36.620
So let's try that out.

116

00:08:36.800  -->  00:08:38.040
We'll go ahead and say shape.

117

00:08:38.060  -->  00:08:41.220
Run the source near enough you notice.

118

00:08:41.240  -->  00:08:43.360
Let's go to click zoom.

119

00:08:43.700  -->  00:08:47.680
My different cylinder numbers have a different shape to them.

120

00:08:47.720  -->  00:08:49.320
So these points are pretty small.

121

00:08:49.510  -->  00:08:55.680
Let's go ahead and change their size and we'll do that outside of this aesthetic argument or aesthetic

122

00:08:55.750  -->  00:08:59.980
function but still inside the GM underscore points.

123

00:09:00.160  -->  00:09:05.440
So I'm going to go ahead and say Khama size equals five.

124

00:09:05.480  -->  00:09:07.480
Just to make it more clear.

125

00:09:07.500  -->  00:09:14.510
Now if I run the source now I can really see how clicking zoom here how four cylinder cars are circles

126

00:09:14.620  -->  00:09:20.480
six cylinder cars or triangles an eight cylinder cars are squares.

127

00:09:20.970  -->  00:09:23.600
OK so that's a really useful method for us to learn.

128

00:09:23.650  -->  00:09:29.260
And the key thing I want you to be aware of is that if we're calling things like shape and size and

129

00:09:29.260  -->  00:09:35.920
want him to be based off of other features or columns from our data or data frame we should be passing

130

00:09:35.920  -->  00:09:41.860
them into this ABS function inside of the geometry layer.

131

00:09:41.960  -->  00:09:47.450
Otherwise when we call things like size or shape we'll have to call them by some sort of standard integer

132

00:09:47.440  -->  00:09:48.270
value.

133

00:09:48.640  -->  00:09:54.350
So to shown that another example of passing and things to this aesthetic function inside the geometry

134

00:09:54.350  -->  00:09:59.880
layer Let's go ahead and try coloring by cylinder as well.

135

00:09:59.920  -->  00:10:07.670
So I'm going to go ahead and say color is equal to it's going to say Factor seat while

136

00:10:11.120  -->  00:10:17.890
so see color equals factor make sure that's inside statics.

137

00:10:18.220  -->  00:10:22.660
It's good to make sure princes are balance looks like everything's ok and make sure we get no errors

138

00:10:22.660  -->  00:10:24.870
when we run this and there we have it.

139

00:10:24.940  -->  00:10:30.400
So now both shape and color are being affected by another column or a data frame.

140

00:10:30.490  -->  00:10:32.080
And that's a key difference.

141

00:10:32.080  -->  00:10:39.640
I could still use color outside of aesthetics but then I would have to define it not using another datapoint

142

00:10:39.740  -->  00:10:45.880
so I have to say something like size color and then it would just have to be a standard like blue or

143

00:10:45.880  -->  00:10:50.630
something and that everything would have to be the same color.

144

00:10:50.640  -->  00:10:55.760
So actually one of the fine size or color or any of those other additional arguments we saw that cheat

145

00:10:55.780  -->  00:10:56.470
sheet.

146

00:10:56.620  -->  00:11:00.560
But one of the findings by another column or variable in my data frame.

147

00:11:00.660  -->  00:11:05.790
I have to pass into this a static function inside of the geometry layer.

148

00:11:06.610  -->  00:11:11.560
And finally before we finish this lecture I want to go and build back from this basic plot and talk

149

00:11:11.560  -->  00:11:13.860
a little bit more about color.

150

00:11:13.900  -->  00:11:20.000
So again we could have just said in the geometry layer color is equal to.

151

00:11:20.170  -->  00:11:24.930
Let's go ahead and say just a standard color blue.

152

00:11:25.750  -->  00:11:28.300
And then all the points would have been colored blue.

153

00:11:28.300  -->  00:11:31.980
We can also pass next color arguments.

154

00:11:32.050  -->  00:11:34.650
In any case you're not familiar with hex color codes.

155

00:11:34.660  -->  00:11:40.720
They're basically just color coded models that standardized different colors to a certain code and they

156

00:11:40.720  -->  00:11:42.610
usually start of a hash tag.

157

00:11:42.610  -->  00:11:47.060
Let me go ahead and show you a great resource for picking out these hecks color codes.

158

00:11:47.230  -->  00:11:51.980
And then we'll finish out the lecture we're talking about scale color gradients.

159

00:11:52.060  -->  00:11:56.740
So in order to use a hex color code and I'll show you an example of what one looks like instead of saying

160

00:11:56.770  -->  00:12:04.090
blue you can type in a text color code and choose a particular color that you want in this case.

161

00:12:04.090  -->  00:12:06.230
This is a nice teal.

162

00:12:06.610  -->  00:12:13.420
Now the standard colors such as like purple green red blue etc. are your classic colors.

163

00:12:13.490  -->  00:12:18.460
They're going to our will know them by their character street name if you want to get more specific

164

00:12:18.470  -->  00:12:20.810
you can use these hex color codes.

165

00:12:20.830  -->  00:12:25.440
Let me go ahead and jump to the browser and show you how you can find these hex color codes.

166

00:12:26.170  -->  00:12:29.430
OK so I quickly jumped to the Google Chrome browser here.

167

00:12:29.440  -->  00:12:32.880
So go to Google dot com and search for hecks color.

168

00:12:32.920  -->  00:12:38.020
You can even search for hecks color picker and you'll get a bunch of different links and Web sites that

169

00:12:38.020  -->  00:12:41.390
help you choose a color and convert that to a hex code.

170

00:12:41.890  -->  00:12:44.210
I really like this color dash hex.

171

00:12:44.270  -->  00:12:45.040
Com.

172

00:12:45.200  -->  00:12:46.390
There's a ton of Web sites.

173

00:12:46.420  -->  00:12:47.680
A lot of them are really great.

174

00:12:47.680  -->  00:12:48.810
And to the point.

175

00:12:49.000  -->  00:12:54.790
But this one basically has a list of users latest favorite colors but you can also get your own hex

176

00:12:54.790  -->  00:13:00.860
codes so if you check out a peer at top let me go and zoom in here I'm here in the black square.

177

00:13:00.880  -->  00:13:07.420
You can choose whatever color you want using this sort of colored distinguisher.

178

00:13:07.420  -->  00:13:15.580
So if I want let's say this lime green looking color I can choose that color and it will spit out the

179

00:13:15.580  -->  00:13:20.330
hex code and hex codes must start with this powder hash tag symbol.

180

00:13:20.330  -->  00:13:23.990
So I'm going to copy that code go back to our studio.

181

00:13:24.290  -->  00:13:26.130
So I'll just minimize this.

182

00:13:26.140  -->  00:13:33.200
Here we have our studio and we can pass in that hex code has start for hash tag or pound sign.

183

00:13:33.400  -->  00:13:38.290
And then if I run that source now we have that interesting line green color.

184

00:13:38.290  -->  00:13:43.280
So that's one way of picking out specific colors for G-G plot.

185

00:13:43.380  -->  00:13:48.270
You can use those hex color picker's Passement color.

186

00:13:48.370  -->  00:13:54.130
Now as we've mentioned earlier we can actually set colors by other features in our data Frane.

187

00:13:54.130  -->  00:14:07.480
So for instance by passing in a here and saying color equals HP we can go ahead and say run that source

188

00:14:07.480  -->  00:14:07.530
.

189

00:14:07.590  -->  00:14:09.570
We make sure there's a comma there.

190

00:14:09.670  -->  00:14:12.520
That has to be separate from that source.

191

00:14:12.520  -->  00:14:18.370
And now I can see that HP has been colored by a different feature and as is features continuous HP is

192

00:14:18.370  -->  00:14:19.270
continuous.

193

00:14:19.480  -->  00:14:24.500
I get a nice continuous blue depending on what their horsepower is.

194

00:14:24.520  -->  00:14:30.000
So we kind of get this feeling that lighter blues are on the heavier weight car is of less miles per

195

00:14:30.000  -->  00:14:30.840
gallon.

196

00:14:31.030  -->  00:14:37.210
Cuyp it kind of makes sense because you'd expect more horsepower from a heavier car and the car if that's

197

00:14:37.210  -->  00:14:44.710
heavier with more horsepower probably gets less mpg issue I have here is that these blues aren't super

198

00:14:44.710  -->  00:14:47.320
clear on that sort of trend.

199

00:14:47.320  -->  00:14:53.470
So let's go ahead and try to choose our low color and our high color for this plot and we can do that

200

00:14:53.470  -->  00:14:56.880
by adding a scale color gradient to this.

201

00:14:57.130  -->  00:15:04.390
So I'm going to go ahead and say peel too close and then the additional argument here is going to be

202

00:15:04.390  -->  00:15:11.280
scale underscore color underscore gradients.

203

00:15:11.280  -->  00:15:17.290
Now what this will allow us to do is pasan a value for a low color and a value for a high color.

204

00:15:17.360  -->  00:15:20.650
So I said I'd go ahead and say low equals.

205

00:15:20.770  -->  00:15:27.070
For instance was going to choose blue a cooler color for low Ale's go and say high equals we'll just

206

00:15:27.070  -->  00:15:35.930
say red and this will work because I specified color as an aesthetic inside this geometry layer.

207

00:15:36.010  -->  00:15:45.190
We'll go out and set this to all three and then I will go ahead and print he'll three.

208

00:15:45.220  -->  00:15:47.050
Let's see if this works.

209

00:15:47.800  -->  00:15:48.720
And there we have it.

210

00:15:48.730  -->  00:15:50.900
Now the trend this quite a bit clear.

211

00:15:50.980  -->  00:15:58.690
So if I zoom in on this I can see that the higher horsepower cars tend to be heavier with less mpg and

212

00:15:58.690  -->  00:16:04.030
the lower horsepower cars tend to have a lower way and a higher Myer's mpg.

213

00:16:04.030  -->  00:16:09.780
And this actually also makes it really easy to pick out outliers on the horsepower scale.

214

00:16:10.240  -->  00:16:10.930
OK.

215

00:16:10.930  -->  00:16:17.010
So the way we were able to do that was by specifying here a US color equals HP.

216

00:16:17.260  -->  00:16:24.040
And then after that adding the scale underscore color underskirt gradients with a low and high value

217

00:16:24.040  -->  00:16:24.110
.

218

00:16:24.160  -->  00:16:28.190
And again we could have passed our own hex values here.

219

00:16:28.570  -->  00:16:34.360
So it could have passed in the old hex value if I wanted that teal green and made maybe some sort of

220

00:16:34.360  -->  00:16:36.580
weird color gradient here.

221

00:16:36.610  -->  00:16:41.860
So from green to red and now I can really see where the high horsepower is so it's up to you to choose

222

00:16:42.160  -->  00:16:43.620
what scales you think are best.

223

00:16:43.630  -->  00:16:47.140
And there's lots of online tools help me pick out those sort of scales.

224

00:16:47.700  -->  00:16:48.470
OK.

225

00:16:48.580  -->  00:16:50.800
So that's it for the scatterplot lecture.

226

00:16:50.800  -->  00:16:55.560
Go ahead and check the notes or the documentation for a couple more examples on how to make nice scatter

227

00:16:55.580  -->  00:16:56.580
plots.

228

00:16:56.680  -->  00:16:59.200
Thanks everyone and I'll see you at the next lecture.
