WEBVTT
1

00:00:00.810  -->  00:00:06.630
Hello everyone and welcome to the linear regression with our lecture notes for this lecture are located

2

00:00:06.690  -->  00:00:09.090
under the machine learning with our folder.

3

00:00:09.240  -->  00:00:13.030
And this is known as the linear regression lecture notebook.

4

00:00:13.080  -->  00:00:17.020
OK let's go ahead and jump to our studio and get started.

5

00:00:18.030  -->  00:00:20.050
All right so here we are our studio.

6

00:00:20.190  -->  00:00:22.710
The first step is getting the data.

7

00:00:22.830  -->  00:00:28.250
You can just use the CSP file that's included in the machine learning of our folder.

8

00:00:28.260  -->  00:00:31.630
It's called Student Dasch Matt CXXVIII.

9

00:00:31.710  -->  00:00:36.990
I have it located right here at the bottom or you can get the data directly by downloading it from the

10

00:00:36.990  -->  00:00:40.640
UCI dataset repository.

11

00:00:40.680  -->  00:00:46.470
Here's the link for it and the link is also in the notes but again you can just use the V that's included

12

00:00:46.710  -->  00:00:48.750
with the download of the notes.

13

00:00:48.750  -->  00:00:52.700
Let's start by reading the CAC file.

14

00:00:52.800  -->  00:00:56.440
I'm going to go ahead and do some of these commands in the console.

15

00:00:56.670  -->  00:01:00.580
That way we can go along it and type as we go.

16

00:01:01.200  -->  00:01:07.160
So I'll say read cxxviii and a nice trick here is do single quotes start with the first letter.

17

00:01:07.170  -->  00:01:14.850
I know it's called Students press tab and I should get a dropdown list to choose from.

18

00:01:14.880  -->  00:01:21.180
If you don't see the C as the file in the dropdown list you'll have to make sure that it's in your working

19

00:01:21.180  -->  00:01:26.360
directory and you can vear work indirectly by looking here under the files tab.

20

00:01:26.430  -->  00:01:30.850
So make sure you check that if you're not able to find or connect to the cxxviii file.

21

00:01:31.290  -->  00:01:35.420
Let's go ahead now and check the head of that different file.

22

00:01:35.430  -->  00:01:36.240
All right.

23

00:01:36.240  -->  00:01:42.060
So if we take a look at this I noticed something looks weird and what's happening here is there's a

24

00:01:42.060  -->  00:01:44.220
bunch of semi colons in my data.

25

00:01:44.220  -->  00:01:50.430
The reason for that being is that this comma separated file actually is separated by semi-colons not

26

00:01:50.430  -->  00:01:59.530
by a comma which means I'll need to read this line and add in an SEP argument.

27

00:01:59.790  -->  00:02:06.630
So analysts say set for separator and then pasan a string with a semi-colon.

28

00:02:06.630  -->  00:02:11.680
Now let's try to take a look at head DMF and now it looks much better.

29

00:02:11.790  -->  00:02:16.320
If you ever get some weird error like that when you're dealing with a CSP file make sure you actually

30

00:02:16.320  -->  00:02:22.200
try opening up CCV file maybe in notepad or just checking the first few lines of the CAC file and check

31

00:02:22.200  -->  00:02:24.910
to make sure that it's separated by commas.

32

00:02:24.930  -->  00:02:30.520
It may be separated by something else semi-colons is another common separator for CSB files.

33

00:02:30.590  -->  00:02:31.400
All right.

34

00:02:31.410  -->  00:02:34.890
Now that we check out the head we see that we have a bunch of columns here.

35

00:02:35.040  -->  00:02:40.590
You can go to check out the notes for descriptions of all these attributes but the basic idea here is

36

00:02:40.590  -->  00:02:46.380
that we have attributes for both students in a math course and students in a Portuguese language course

37

00:02:46.380  -->  00:02:46.620
.

38

00:02:46.650  -->  00:02:48.280
There's actually two data sets.

39

00:02:48.450  -->  00:02:52.470
In this case we're looking at the students math one which is why it's Dasch.

40

00:02:52.520  -->  00:02:57.940
Matt we're going to be trying to do is predict these final grades here.

41

00:02:57.960  -->  00:03:06.120
Notice they have G1 G-2 and G-3 Jiwon is the first period grade G2 is the second period grade and G-3

42

00:03:06.120  -->  00:03:08.730
is the final period grade.

43

00:03:08.730  -->  00:03:13.740
If you're interested in what all these other attributes stand for and mean go ahead and check out the

44

00:03:13.740  -->  00:03:19.740
note book the has all the information descriptions in it or you can even just check out the original

45

00:03:19.920  -->  00:03:24.870
scription available for you in the UCI machine learning repository link.

46

00:03:25.140  -->  00:03:26.090
Let's keep going.

47

00:03:26.220  -->  00:03:30.980
And just a quick check a summary of our data frame.

48

00:03:32.010  -->  00:03:39.230
So summary DMF and now I get a statistical summary we can go ahead and kind of explore this if we wanted

49

00:03:39.240  -->  00:03:40.060
to.

50

00:03:40.350  -->  00:03:41.250
In your own time.

51

00:03:41.270  -->  00:03:47.310
But I'm going to go in and clean the data now let's go ahead and check to make sure if we have any null

52

00:03:47.370  -->  00:03:54.670
values I'll clear the consul to check if there's any null values or an A values in our data frame.

53

00:03:54.840  -->  00:04:03.810
We can say any function is not an A and then pass in our data frame rate.

54

00:04:03.870  -->  00:04:09.440
So we get a false out which means that there are no and a values which is perfect.

55

00:04:09.510  -->  00:04:12.620
A lot of real data sets will have any or null values.

56

00:04:12.630  -->  00:04:19.260
But since we're just starting off linear regression we are using a nice clean data set has no N.A. values

57

00:04:19.260  -->  00:04:19.920
.

58

00:04:19.920  -->  00:04:21.530
Now let's go ahead and move on.

59

00:04:21.690  -->  00:04:26.010
Let's make sure that categorical variables have a factor set to them.

60

00:04:26.040  -->  00:04:33.240
For example if we look at the M job column which refers to categories of job types and I can do that

61

00:04:33.240  -->  00:04:41.160
by checking the structure of my data frame with S T R though this year I have my job and it says it's

62

00:04:41.160  -->  00:04:48.030
a factor with 5 levels whenever you're dealing with a new data set you would want to make sure that

63

00:04:48.330  -->  00:04:55.890
variables are features you expect to be factors with levels are actually factors of levels.

64

00:04:55.890  -->  00:05:01.530
Notice however that we do have some features where you may choose to have them as a factor or not have

65

00:05:01.530  -->  00:05:02.850
them as a factor.

66

00:05:02.850  -->  00:05:12.170
For instance m Edu and F edu if you check out the descriptions and Edu is the mother's education FBD

67

00:05:12.260  -->  00:05:15.580
use the father's education where zero is none.

68

00:05:15.600  -->  00:05:22.420
One is primary meaning fourth grade level two is fifth to ninth grade and then three is secondary education

69

00:05:22.440  -->  00:05:24.060
for his higher education.

70

00:05:24.360  -->  00:05:31.740
It's up to you whether you want to classify these sort of data points as continuous or discrete because

71

00:05:31.740  -->  00:05:36.310
in a sense you can kind of treat them as both technically they are discrete.

72

00:05:36.360  -->  00:05:38.970
You are grouping them by educational level.

73

00:05:39.000  -->  00:05:42.010
But the numbers are actually in a continuous order.

74

00:05:42.030  -->  00:05:46.850
So 0 is the lowest level of education and 4 is the highest level of education.

75

00:05:47.040  -->  00:05:48.870
So you can't treat them as integers.

76

00:05:49.080  -->  00:05:51.600
This is a good test on your data.

77

00:05:51.720  -->  00:05:57.390
After you run your model to come back and see if it's worth changing one of these to a factor let's

78

00:05:57.390  -->  00:06:00.540
go ahead and move on and leave the data as is.

79

00:06:00.540  -->  00:06:04.190
There are other factors you can consider in this data.

80

00:06:04.230  -->  00:06:07.490
For instance trying to factor travel time or study time.

81

00:06:07.620  -->  00:06:12.890
But if we look at the data a lot of these can be treated either way either as integers or factors.

82

00:06:13.020  -->  00:06:17.940
And it looks like the ones that actually need factors with levels to them have already been taken care

83

00:06:17.940  -->  00:06:18.370
of.

84

00:06:18.720  -->  00:06:20.190
That means let's going to move on.

85

00:06:20.190  -->  00:06:22.780
The state has basically already been cleaned for us.

86

00:06:22.870  -->  00:06:30.210
What to do now is used G.G. plot to explore the data a little bit going to clear the cons..

87

00:06:30.450  -->  00:06:38.150
And let me go ahead and call the libraries here in my scripts the libraries I'll be using is G-G plus

88

00:06:38.190  -->  00:06:39.270
two.

89

00:06:39.940  -->  00:06:46.410
I'll go ahead and call G-G themes in case you want to put a nice theme and I'll also call the player

90

00:06:47.280  -->  00:06:49.050
so it's easier to work with my data.

91

00:06:49.200  -->  00:06:50.920
You go in and run this control shift.

92

00:06:50.950  -->  00:06:57.910
S wups G.G. quads.

93

00:06:58.290  -->  00:06:58.620
All right.

94

00:06:58.620  -->  00:07:00.120
There we go.

95

00:07:00.120  -->  00:07:02.020
Looks like everything's taken care of.

96

00:07:02.100  -->  00:07:08.790
What I want to do now is create some sort of plot that allows me to understand the correlations between

97

00:07:08.880  -->  00:07:16.380
each of the features correlation in statistics is suffer at the pendens or association any statistical

98

00:07:16.380  -->  00:07:23.390
relationship between two features of a data point correlation.

99

00:07:23.400  -->  00:07:28.800
Plots are a great way of exploring data and seeing if there's any interaction terms we can just start

100

00:07:28.800  -->  00:07:34.710
off by grabbing the numeric correlation and you can go ahead and check out the Wikipedia page for correlation

101

00:07:34.730  -->  00:07:34.830
.

102

00:07:34.890  -->  00:07:38.640
If you want more info on this there's also an infant in information.

103

00:07:38.670  -->  00:07:41.100
That bit in the notebook.

104

00:07:41.100  -->  00:07:46.840
First thing I to do is grab only the numeric columns.

105

00:07:47.130  -->  00:07:51.020
So I'll say name only and I'll say none.

106

00:07:51.060  -->  00:07:54.830
C o LS I'll say s.

107

00:07:54.840  -->  00:08:01.660
Apply pass in my data frame and then I'll pasan is that numeric.

108

00:08:01.980  -->  00:08:05.440
And that's going to return only the numeric Kolb's.

109

00:08:05.460  -->  00:08:07.170
Next I'm going to filter

110

00:08:09.930  -->  00:08:15.630
the numeric columns for correlation and I'll show you how we can do that we can say or make an object

111

00:08:15.630  -->  00:08:23.310
called core data and I can use the core function which belongs to stats and it's basically a function

112

00:08:23.310  -->  00:08:25.020
that allows us to grab correlations.

113

00:08:25.020  -->  00:08:31.340
So I just have to pass pass in my numeric columns here.

114

00:08:31.350  -->  00:08:38.490
Notice I'm saying a comma here in order to get all the numeric columns and then let's go ahead and print

115

00:08:38.580  -->  00:08:44.190
out order data.

116

00:08:44.190  -->  00:08:49.230
All right and this is essentially just the data frame of the correlation between each of the numeric

117

00:08:49.230  -->  00:08:51.660
variables in order to explain this.

118

00:08:51.660  -->  00:08:57.770
It makes sense that age and age have are perfectly correlated mean have a correlation of one.

119

00:08:57.860  -->  00:09:02.630
In fact you'll see essentially a diagonal of one being perfectly correlated.

120

00:09:02.700  -->  00:09:08.400
Going through this correlation data frame which makes sense because each feature is perfectly correlated

121

00:09:08.400  -->  00:09:09.210
with itself.

122

00:09:09.570  -->  00:09:14.980
And then you can explore numerically what other features are highly correlated with each other.

123

00:09:15.000  -->  00:09:16.330
Maybe you're interested in finding out.

124

00:09:16.350  -->  00:09:19.450
Does age have any correlation with education level.

125

00:09:19.620  -->  00:09:21.930
Maybe it's a negative correlation.

126

00:09:21.990  -->  00:09:28.950
OK so after exploring that a bit you may start thinking these numbers are little hard to actually interpret

127

00:09:29.040  -->  00:09:30.230
directly.

128

00:09:30.270  -->  00:09:33.350
While this is fantastic information it's pretty hard to take it all in.

129

00:09:33.540  -->  00:09:36.690
So what you're going to want to do is visualize this data.

130

00:09:36.690  -->  00:09:39.650
There are lots of amazing third party packages to do this.

131

00:09:39.750  -->  00:09:42.790
So let's go ahead and show you which ones you'll need to install.

132

00:09:45.650  -->  00:09:49.280
The packages we're going to be installing our core Graham and core plot.

133

00:09:49.400  -->  00:09:55.310
And these are really nice packages that help us to easily plot out correlation diagrams.

134

00:09:55.850  -->  00:09:58.020
So the first one is called Coorg Graham.

135

00:09:58.030  -->  00:09:58.940
It's c o.

136

00:09:58.950  -->  00:10:00.660
Archie r a.

137

00:10:00.680  -->  00:10:03.490
M go ahead and install that package.

138

00:10:03.590  -->  00:10:08.460
I'm going to jump now to the finish downloaded install.

139

00:10:08.530  -->  00:10:09.670
All right so I jumped ahead.

140

00:10:09.680  -->  00:10:11.210
Everything's downloading now.

141

00:10:11.240  -->  00:10:13.320
That was core Graham package.

142

00:10:13.370  -->  00:10:18.180
I'm going to go ahead and type it up here so we can go ahead and import it later.

143

00:10:18.680  -->  00:10:20.800
It's called Graham hopefully.

144

00:10:20.900  -->  00:10:27.050
Just go ahead and install that the next package I want to go ahead and install install the packages

145

00:10:27.120  -->  00:10:28.830
as core plots.

146

00:10:29.180  -->  00:10:34.310
C O R R R P L O T.

147

00:10:35.510  -->  00:10:38.780
And I'm going to go ahead and install that.

148

00:10:39.200  -->  00:10:44.340
Going to hit enter there and I'm going to go ahead and jump to the finished download and install.

149

00:10:44.510  -->  00:10:47.190
Let me go ahead and jump to that now.

150

00:10:47.450  -->  00:10:50.590
And here we are core plot successfully unpacked and installed.

151

00:10:50.780  -->  00:10:56.350
Let's go ahead and call that library as well or plots.

152

00:10:56.560  -->  00:10:57.130
OK.

153

00:10:57.380  -->  00:10:59.160
So we have court Graham and core plot.

154

00:10:59.160  -->  00:11:03.740
Go ahead install those packages Kishan you to reference the package names.

155

00:11:03.740  -->  00:11:07.140
Go ahead and check out the notes which has the package names for you.

156

00:11:07.400  -->  00:11:12.310
Well we're going to go ahead and do is start by using core plot which is the more common one.

157

00:11:12.530  -->  00:11:17.110
It has a really nice documentation page for the package and encourage you to play around with it.

158

00:11:17.330  -->  00:11:20.120
But the basic We use core plot is you just say

159

00:11:23.300  -->  00:11:26.700
core plots.

160

00:11:26.780  -->  00:11:32.630
After calling it let me go and just from the command line or from the console line excuse me call core

161

00:11:32.640  -->  00:11:33.760
plot.

162

00:11:34.760  -->  00:11:40.220
So library core plots and then we're going to worry about the warning message if you get one.

163

00:11:41.180  -->  00:11:51.590
And then what we can go ahead and do is save prints or plots in all you have to do is pass in the correlation

164

00:11:51.590  -->  00:11:57.380
data that we already have which is right here and this correlation data is just the core function called

165

00:11:57.380  -->  00:11:59.560
on only the numeric columns.

166

00:11:59.600  -->  00:12:02.400
You go ahead and look at your environment variables.

167

00:12:02.420  -->  00:12:09.770
You should have it over here and their core data and then you can pass in an additional method arguments

168

00:12:09.770  -->  00:12:11.840
.

169

00:12:11.840  -->  00:12:16.310
In this case the method we're going to do is just called Color.

170

00:12:16.310  -->  00:12:18.580
So go ahead and pass in the string color.

171

00:12:18.650  -->  00:12:23.850
There's various core plots you can do this one will do is called CT color.

172

00:12:23.870  -->  00:12:32.150
Click on Zoom and you can see a color coded core plot or correlation diagram which allows you to quickly

173

00:12:32.180  -->  00:12:35.180
easily visualize those correlations.

174

00:12:35.240  -->  00:12:41.720
You'll notice here that there is a diagonal dark blue which means perfect correlation that makes sense

175

00:12:41.720  -->  00:12:44.300
because every feature should be perfectly correlated.

176

00:12:44.400  -->  00:12:54.530
So we should also notice is that there's a high correlation between G1 G-2 and G-3 grades that intuitively

177

00:12:54.530  -->  00:12:59.930
makes sense because if you did a good grade on your first period you probably had a good grade on your

178

00:12:59.930  -->  00:13:03.720
second period and probably that had a good grade in your final third period.

179

00:13:03.890  -->  00:13:06.920
Or if you had a bad grade you probably had a bad grade.

180

00:13:06.920  -->  00:13:09.740
First one bad grade second one that great third one.

181

00:13:09.740  -->  00:13:13.100
So it makes sense that those three are highly correlated.

182

00:13:13.100  -->  00:13:21.800
It also makes sense that having a high grade is inversely correlated to the failures each year and the

183

00:13:21.800  -->  00:13:22.520
failures.

184

00:13:22.520  -->  00:13:28.780
Feature column was a number of past class failures and it was a numeric column.

185

00:13:28.790  -->  00:13:34.610
One last interesting interesting correlation is that the mother and father education levels are also

186

00:13:34.610  -->  00:13:40.750
pretty correlated which kind of makes sense usually couples pair up at a similar educational level not

187

00:13:40.780  -->  00:13:43.700
always but it makes sense here that they'd be correlated.

188

00:13:43.700  -->  00:13:45.700
Let's go ahead and move on.

189

00:13:45.700  -->  00:13:51.090
By using Cor Graham we just showed you how to use core plots.

190

00:13:51.200  -->  00:13:56.870
Again all you had to do was say Prince core plots pass in the correlation data and then pass in the

191

00:13:56.870  -->  00:13:57.700
method.

192

00:13:57.710  -->  00:14:00.130
Now we're going to learn how to use CT Graham.

193

00:14:00.160  -->  00:14:02.570
All right so we learned how to use core plot.

194

00:14:02.570  -->  00:14:05.060
Let's go ahead and move on to learning how to use CT.

195

00:14:05.050  -->  00:14:09.380
Graham there's a lot going on of course Graham and there's lots of options.

196

00:14:09.380  -->  00:14:12.040
We'll show you a few of them that may be useful to you.

197

00:14:12.200  -->  00:14:20.000
But the main feature about Coorg Graham versus core plot is that core plot required us to take and filter

198

00:14:20.000  -->  00:14:25.820
by numeric columns and then only grab those numeric columns where we can do of course Graham is actually

199

00:14:25.820  -->  00:14:28.340
just passing the data framed directly.

200

00:14:28.460  -->  00:14:30.090
I want to go ahead and show you how we can do that.

201

00:14:30.110  -->  00:14:37.790
You can say CT Graham and I'll just pass in the data frame at first to show you what it looks like and

202

00:14:37.790  -->  00:14:42.730
we click zoom here on the change we gets a data frame that looks something like this.

203

00:14:42.740  -->  00:14:48.290
This actually isn't super helpful if and in fact in the labels or bars but it's actually essentially

204

00:14:48.290  -->  00:14:49.680
the same information.

205

00:14:49.730  -->  00:14:54.790
Here again you can see that Jumanji 2G three are highly correlated because they are dark blue.

206

00:14:55.010  -->  00:14:59.420
And again you can see here with the education levels are also more correlated.

207

00:14:59.420  -->  00:15:05.480
This case we just have the instead of a diagonal of perfect correlation we actually just put in the

208

00:15:05.480  -->  00:15:08.950
feature name or the column name.

209

00:15:09.020  -->  00:15:16.090
Now you can keep adding a lot more arguments to court Graham if you want to check out all the possibilities

210

00:15:16.090  -->  00:15:16.720
of court.

211

00:15:16.760  -->  00:15:18.510
You can say help court Graham.

212

00:15:18.770  -->  00:15:23.980
And this is going to be basically telling you how to draw Curle epigram which is what we're doing.

213

00:15:24.680  -->  00:15:28.340
And it's a Cornello grim kind of mispronounced that previously.

214

00:15:28.360  -->  00:15:29.640
It's Karla Graham.

215

00:15:29.750  -->  00:15:34.050
And you can check out all the various arguments here there's a ton of stuff you can do with it.

216

00:15:34.070  -->  00:15:40.820
I would suggest that you actually just check out the links and notes that are in the documentation.

217

00:15:41.030  -->  00:15:46.910
The notes have links to documentation because there's a lot of options in the notes for this lecture

218

00:15:46.930  -->  00:15:47.180
.

219

00:15:47.450  -->  00:15:54.410
I have this command that you can go and copy and paste and essentially passing in the data frame ordering

220

00:15:54.680  -->  00:16:03.860
by is equal to true and what order does is it really orders on a basically PCA based re ordering a principal

221

00:16:03.860  -->  00:16:05.170
components analysis.

222

00:16:05.510  -->  00:16:11.660
And it goes ahead and we'll put in some lower panel upper panel text panel arguments as well.

223

00:16:11.660  -->  00:16:14.570
Again go ahead and check out the documentation if you're interested in that.

224

00:16:14.750  -->  00:16:20.420
But I'm going to go ahead and click enter here just to show you what this looks like and is what that

225

00:16:20.420  -->  00:16:22.020
plot looks like zoomed in.

226

00:16:22.100  -->  00:16:24.840
Again you have a diagonal of all the features.

227

00:16:25.020  -->  00:16:30.920
And in this case what we actually specified was that the lower panel is just a regular shaded box depicting

228

00:16:30.920  -->  00:16:37.970
the correlation and that the upper panel is a pie chart depicting the correlation where a fool pie chart

229

00:16:38.000  -->  00:16:41.460
would be equal to one perfectly correlated.

230

00:16:41.600  -->  00:16:46.100
And then this kind of gives you a rough idea of the actual numerical value.

231

00:16:46.100  -->  00:16:53.030
You can essentially just say how filled in the correlation pi is is how correlated they are where blue

232

00:16:53.030  -->  00:16:57.560
indicates positive correlation and red would indicate negative correlation.

233

00:16:57.560  -->  00:17:01.320
So something was fully covered blue or filled in blue as a pie chart.

234

00:17:01.320  -->  00:17:03.930
That would mean it's perfectly correlated.

235

00:17:04.440  -->  00:17:06.440
It's going close this.

236

00:17:06.860  -->  00:17:13.100
Again you can check the Coram documentation if you want core plot is usually the more commonly used

237

00:17:13.100  -->  00:17:14.040
one.

238

00:17:14.180  -->  00:17:20.860
You do have to only use numeric columns so you have to get the numeric columns and then call the C R

239

00:17:20.870  -->  00:17:26.280
correlation function on your data frame of the numeric columns core Graham.

240

00:17:26.300  -->  00:17:28.300
You can pass in the data frame directly.

241

00:17:28.400  -->  00:17:32.810
But then you have to add a couple more arguments in order to specify which you want the plot to actually

242

00:17:32.810  -->  00:17:33.810
look like.

243

00:17:34.250  -->  00:17:34.950
OK.

244

00:17:35.180  -->  00:17:38.190
So that's it for correlation plotting.

245

00:17:38.390  -->  00:17:44.450
Let's go ahead and do a little bit of a quick plot on the G3 score because that's actually what we're

246

00:17:44.450  -->  00:17:47.050
going to try to predict using linear regression.

247

00:17:47.480  -->  00:17:51.670
Again right now we're just doing exploratory data analysis.

248

00:17:51.890  -->  00:17:55.970
I'm going to go ahead and say G-G plots.

249

00:17:57.690  -->  00:18:01.860
Whoops Esson my data frame.

250

00:18:02.000  -->  00:18:04.380
I want a histogram of the D-3 score.

251

00:18:04.380  -->  00:18:06.490
Let's just go ahead and check that out.

252

00:18:06.710  -->  00:18:17.770
So I'll say X is G-3 and we'll say gee underscore histogram I'll say been sequel to 20.

253

00:18:17.890  -->  00:18:26.710
Given an alpha value of 0.5 and we'll say Phil is blue.

254

00:18:27.570  -->  00:18:28.320
Whoops.

255

00:18:28.850  -->  00:18:33.980
Let's go ahead and run that's if you're running it in your script.

256

00:18:34.020  -->  00:18:37.440
Say Prince some doing their eclipse at the con..

257

00:18:37.490  -->  00:18:38.680
They don't have to.

258

00:18:38.750  -->  00:18:40.400
This is what this looks like.

259

00:18:40.730  -->  00:18:47.600
It's going to zoom in on it looks like there are a bunch of zero g three values that's going to be important

260

00:18:47.600  -->  00:18:48.050
to know.

261

00:18:48.050  -->  00:18:53.130
So a lot of people just either don't show up for the test or completely fail the test.

262

00:18:53.270  -->  00:18:55.110
And that's why they get a zero score.

263

00:18:55.130  -->  00:18:59.760
But it also looks like we have a very high mean value at 10.

264

00:18:59.770  -->  00:19:06.440
So we may want to start asking is this test curve does that why there's so many values right at the

265

00:19:06.440  -->  00:19:09.490
middle at 10 what's actually going on there.

266

00:19:09.500  -->  00:19:14.840
All right that's it for the exploratory data analysis of this lecture.

267

00:19:14.900  -->  00:19:20.220
Coming up next will actually start building a model and performing linear regression on this data.

268

00:19:20.240  -->  00:19:20.990
Take your time.

269

00:19:20.990  -->  00:19:25.310
Go ahead and go through the data notebook and check out the structure of the summary.

270

00:19:25.310  -->  00:19:28.360
Do any other visualizations that are interesting to you.

271

00:19:28.520  -->  00:19:33.470
This was just the exploratory data analysis phase they should always do with your data to get a good

272

00:19:33.470  -->  00:19:34.510
feel for it.

273

00:19:34.520  -->  00:19:38.200
Coming up next is the actual building of the model of linear regression.

274

00:19:38.210  -->  00:19:40.070
Thanks everyone and I'll see you at the next lecture
