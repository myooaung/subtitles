WEBVTT
1

00:00:04.590  -->  00:00:09.900
Hello everyone and welcome to the lecture on grammar of graphics with G-G plot 2 in this lecture.

2

00:00:09.930  -->  00:00:14.640
We're going to be discussing the G-G plot to library as well as the philosophy of the grammar of graphics

3

00:00:14.640  -->  00:00:17.300
to build beautiful data visualizations.

4

00:00:17.310  -->  00:00:20.190
Let's go ahead and get started.

5

00:00:20.220  -->  00:00:23.070
So what is G-G plot 2 do plot.

6

00:00:23.070  -->  00:00:26.390
Who's the most popular data visualization package for our.

7

00:00:26.520  -->  00:00:31.670
It was created by Hadley Wickham who also created packages such as the plier and tidy year.

8

00:00:32.040  -->  00:00:37.830
While art does have its own basic plotting mechanisms G.G. plot 2 allows you to have a lot more control

9

00:00:37.920  -->  00:00:40.640
and create complicated but beautiful date of his life.

10

00:00:40.640  -->  00:00:42.080
Nations with are.

11

00:00:42.300  -->  00:00:47.520
It follows a distinct Raemer of Grafix philosophy which is built on the idea of adding layers to your

12

00:00:47.520  -->  00:00:49.140
visualization.

13

00:00:49.140  -->  00:00:53.250
Let's go out and see how these layers work.

14

00:00:53.250  -->  00:01:00.460
The first three layers are the most basic ones and those are data aesthetics and geometries.

15

00:01:00.540  -->  00:01:05.070
We're going to be showing some code as we continue forward as well as some little plots that the code

16

00:01:05.130  -->  00:01:07.060
outputs don't worry too much.

17

00:01:07.080  -->  00:01:11.400
If you don't understand the syntax for the code we're going to be getting a lot more practice with each

18

00:01:11.600  -->  00:01:15.290
different plot types as we go forward throughout this section of the course.

19

00:01:15.450  -->  00:01:19.800
For now just worry about the idea of the layers of the visualization.

20

00:01:20.180  -->  00:01:23.420
So to start off you always call library Gigia plot too.

21

00:01:23.520  -->  00:01:29.270
But then when you're actually plotting you just call G-G plot the first layer is the data layer where

22

00:01:29.280  -->  00:01:34.980
you just call it Jiechi plot and then pasand the data frame that you're working with for the layer itself

23

00:01:34.980  -->  00:01:35.740
of the data.

24

00:01:35.760  -->  00:01:41.140
In this case we're just going to work with the empty karst data frame that's built into our So we set

25

00:01:41.200  -->  00:01:44.650
the data layer and then we're going to add aesthetics.

26

00:01:44.710  -->  00:01:51.990
Aesthetics also goes into this basic G.G. plot function call what the æsthetics allows us to do is specify

27

00:01:52.050  -->  00:01:55.540
which columns or features that we actually want to plot out.

28

00:01:55.590  -->  00:02:00.840
In this case through this presentation we're going to be trying to create some basic scatter plots so

29

00:02:00.840  -->  00:02:05.930
we want X equals mpg column and y equals the horsepower column.

30

00:02:06.000  -->  00:02:13.050
If you just type this into your r consul or our script you still won't see any plot comes out and that's

31

00:02:13.050  -->  00:02:15.390
because we need one more layer to actually see it.

32

00:02:15.400  -->  00:02:21.030
Plot nuts or geometries layer in order to add this geometry layer Well we're going to go ahead and do

33

00:02:21.160  -->  00:02:27.200
is take her data and æsthetics command under that G-G plot function and assign it the variable P L.

34

00:02:27.420  -->  00:02:31.730
Then we'll take P L and say plus G underscore point.

35

00:02:31.740  -->  00:02:39.420
There's lots of other geometries we can use of G-G plot such as histograms scatter plots box plots cetera

36

00:02:39.460  -->  00:02:39.620
.

37

00:02:39.750  -->  00:02:44.250
Right now we'll just focus on a basic point plot which is like a scatter plot.

38

00:02:44.610  -->  00:02:49.560
So once you've entered this command P.L. plus Geum underscore point you'll actually see some output

39

00:02:49.560  -->  00:02:49.960
.

40

00:02:50.010  -->  00:02:51.330
So if these three layers.

41

00:02:51.390  -->  00:02:54.510
What a look like is something like this in the bottom right hand corner.

42

00:02:54.720  -->  00:03:01.410
You'll have a data layer æsthetics layer and with geometry you'll specify that you want your X mpg versus

43

00:03:01.410  -->  00:03:02.790
your y horsepower.

44

00:03:02.790  -->  00:03:04.200
That's just simple points.

45

00:03:04.200  -->  00:03:10.020
So that's G.M. underscore point and that's what a basic plot looks like of cheesy plot using just those

46

00:03:10.020  -->  00:03:10.860
three layers.

47

00:03:10.920  -->  00:03:13.250
Data aesthetics and geometries.

48

00:03:13.320  -->  00:03:15.890
Let's go in and discuss the next three layers.

49

00:03:16.260  -->  00:03:20.550
Those next three layers are facets statistics and coordinates.

50

00:03:20.550  -->  00:03:24.060
Now those three layers that we're about to talk about are actually necessary.

51

00:03:24.060  -->  00:03:29.160
You can get a plot with just data esthetics and geometries but the next three layers allow us to really

52

00:03:29.160  -->  00:03:31.760
customize our data visualization.

53

00:03:31.770  -->  00:03:39.840
Let's start with facets facets allow us to put multiple plots on a single Canibus again don't worry

54

00:03:39.840  -->  00:03:43.230
too much about the syntax of calling fast underskirt grid here.

55

00:03:43.500  -->  00:03:51.030
But what we're basically trying to do is put multiple plots of the MPG versus horsepower scatter plots

56

00:03:51.300  -->  00:03:53.420
separated by the cylinder counts.

57

00:03:53.490  -->  00:03:57.940
In this case that command with just these four layers would look something like this.

58

00:03:57.960  -->  00:04:04.410
We have MBG vs weight but we've put a Fassett grid meaning now we have three plots on a single canvas

59

00:04:04.830  -->  00:04:08.260
the separator being how many cylinders each of these cars had.

60

00:04:08.280  -->  00:04:15.780
So we have four six and eight cylinders of the same scatterplot but separated from number of cylinders

61

00:04:15.800  -->  00:04:15.920
.

62

00:04:16.050  -->  00:04:18.350
So that's the four layers we're dealing with for now.

63

00:04:18.370  -->  00:04:22.140
Data æsthetics geometries and we added a Fassett grid.

64

00:04:22.140  -->  00:04:25.050
Let's go ahead and keep going.

65

00:04:25.050  -->  00:04:29.110
The next command is Plus stat underscore smooth.

66

00:04:29.110  -->  00:04:31.340
This allows us to add a statistic Slayer.

67

00:04:31.440  -->  00:04:34.570
In this case just a smooth line fit to our data.

68

00:04:34.680  -->  00:04:39.690
You can see that there's a shadow around that line which has some sort of air measure for this smooth

69

00:04:39.690  -->  00:04:41.130
fit.

70

00:04:41.130  -->  00:04:43.370
So we have now five layers.

71

00:04:43.440  -->  00:04:49.080
Our basic data aesthetics and geometries layer we've added a Fassett grid to separate our plots on a

72

00:04:49.080  -->  00:04:54.850
single canvas by cylinder and then we went ahead and added a to six layer.

73

00:04:54.960  -->  00:04:59.320
Finally we can start messing around the coordinates so the coordinates layer here.

74

00:04:59.340  -->  00:05:05.040
We just went ahead and assigned P.L. Plus fast grid plus That's move to appeal to.

75

00:05:05.190  -->  00:05:12.150
And then we added to peel two plus coordinates Cartesian x limit goes from 15 to 25.

76

00:05:12.150  -->  00:05:13.960
We pass that in as a vector.

77

00:05:14.010  -->  00:05:16.540
Again don't worry too much about the syntax here.

78

00:05:16.560  -->  00:05:23.970
The basic idea is that we're limiting our coordinates or coordinates allow us to limit y axis or x axis

79

00:05:24.030  -->  00:05:30.360
or play around with the X versus Y ratio to stretch out or smooth out our plot.

80

00:05:30.750  -->  00:05:37.350
Our final layer is the theme layer the theme layer allows us to add a theme to our plot.

81

00:05:37.380  -->  00:05:43.140
So once we've figured out our data æsthetics geometries whether or not we want to use fasces or statistics

82

00:05:43.200  -->  00:05:48.870
or player up the coordinates we can add a theme to our plot in order to affect things such as the font

83

00:05:48.870  -->  00:05:52.490
size the coloring background the grid lines etc..

84

00:05:52.590  -->  00:05:57.990
There's a few builtin themes that come with G.G. plot but you can also download or create your own themes

85

00:05:58.260  -->  00:06:02.600
in order to customize plots to look exactly the way you want them to look.

86

00:06:02.610  -->  00:06:04.390
So what have we learned.

87

00:06:04.800  -->  00:06:08.170
We learned that G.G. plot 2 has lots of options for plot types.

88

00:06:08.190  -->  00:06:13.380
Our main idea is that we can add layers together for the next couple of lectures what we're going to

89

00:06:13.380  -->  00:06:19.470
do is discover how to create specific data visualizations such as histograms or box plots or scatter

90

00:06:19.470  -->  00:06:20.550
plots et cetera.

91

00:06:20.760  -->  00:06:27.600
So we'll focus on building on this idea of grammar graphics of layers in order to go ahead and discover

92

00:06:27.710  -->  00:06:31.250
and create data visualizations for particular plot types.

93

00:06:31.700  -->  00:06:33.700
Okay that's it for this lecture.

94

00:06:33.810  -->  00:06:37.570
I'm super excited to show you how to create date of his possessions GZ plot.

95

00:06:37.590  -->  00:06:40.920
This is really one of ours fantastic strengths.

96

00:06:40.920  -->  00:06:42.920
Thanks and I'll see it the next lecture.
