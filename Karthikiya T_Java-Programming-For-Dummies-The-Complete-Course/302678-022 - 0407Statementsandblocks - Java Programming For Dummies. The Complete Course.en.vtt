WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.630
in this video,

00:00:02.630 --> 00:00:05.950
we're going to talk about statement and blocks.

00:00:05.950 --> 00:00:09.410
Let's first talk about statements in Java.

00:00:09.410 --> 00:00:15.250
The statement in Java is similar to statements in our English language.

00:00:15.250 --> 00:00:19.450
Let's take a look at the procedure to make tea.

00:00:19.450 --> 00:00:22.050
Go to kitchen,

00:00:22.050 --> 00:00:25.050
turn on the style put on the pan,

00:00:25.050 --> 00:00:29.510
pour some water into T bank so hot.

00:00:29.510 --> 00:00:30.560
Enjoy OT.

00:00:30.560 --> 00:00:33.640
These are all the steps involved now,

00:00:33.640 --> 00:00:37.850
if you see each of this statement is ending with the period.

00:00:37.850 --> 00:00:39.930
And moreover,

00:00:39.930 --> 00:00:42.480
if you remove one of the world from here,

00:00:42.480 --> 00:00:48.780
this would result in not accomplishing our task off preparing tea.

00:00:48.780 --> 00:00:53.140
Because I go to kitchen tone on the what I don't know.

00:00:53.140 --> 00:00:56.510
I don't know what to do here in Java programming.

00:00:56.510 --> 00:00:59.650
This would result in compile ation error.

00:00:59.650 --> 00:01:08.450
Let's put it back now each of these statements collectively performing a certain task,

00:01:08.450 --> 00:01:10.210
keeping this in mind.

00:01:10.210 --> 00:01:11.910
Let's goto our Java program.

00:01:11.910 --> 00:01:16.630
So in the similar manner,

00:01:16.630 --> 00:01:20.080
we have statements in Java that ends with semi colon,

00:01:20.080 --> 00:01:21.840
whereas in English,

00:01:21.840 --> 00:01:24.450
the end with period that's it.

00:01:24.450 --> 00:01:29.650
Now we have multiple types off statements which I feel is not worth knowing.

00:01:29.650 --> 00:01:35.650
We have already taken a look at some of those statements like we have declaration and

00:01:35.650 --> 00:01:40.830
initialization statements who have mattering vocation statements will talk about methods

00:01:40.830 --> 00:01:42.450
later on etcetera.

00:01:42.450 --> 00:01:43.480
No,

00:01:43.480 --> 00:01:50.980
let's talk about blocks each of the bloc would constitute and number of statements it could

00:01:50.980 --> 00:01:51.750
be zero.

00:01:51.750 --> 00:01:54.450
Are any number of statements.

00:01:54.450 --> 00:01:57.670
We can just have an empty block.

00:01:57.670 --> 00:02:02.110
A Brock will start with the curly brace and end with the curly brace.

00:02:02.110 --> 00:02:04.390
In this program itself,

00:02:04.390 --> 00:02:05.700
we have multiple blocks.

00:02:05.700 --> 00:02:10.890
This is one block and in within this block,

00:02:10.890 --> 00:02:12.250
we have another block,

00:02:12.250 --> 00:02:17.120
which is this and we have one more.

00:02:17.120 --> 00:02:17.850
Brock,

00:02:17.850 --> 00:02:21.480
we have one more block has belt.

00:02:21.480 --> 00:02:29.250
We're calling this block One blocked two and blocked three.

00:02:29.250 --> 00:02:35.350
One important thing to note is the scope off variables.

00:02:35.350 --> 00:02:40.870
We have block one here and it has a variable car.

00:02:40.870 --> 00:02:41.350
A.

00:02:41.350 --> 00:02:42.080
Now,

00:02:42.080 --> 00:02:43.120
inside this block,

00:02:43.120 --> 00:02:45.600
we have sub blocks which is blocked and blocked.

00:02:45.600 --> 00:02:45.960
Three.

00:02:45.960 --> 00:02:53.450
The car A can be accessible from inside this block.

00:02:53.450 --> 00:02:55.860
And when I say inside this block,

00:02:55.860 --> 00:03:00.420
it also means inside the blocks inside this block.

00:03:00.420 --> 00:03:05.330
So the variable A is accessible within these blocs as well.

00:03:05.330 --> 00:03:06.450
Block two and block three,

00:03:06.450 --> 00:03:08.560
but not the other way.

00:03:08.560 --> 00:03:09.200
For example,

00:03:09.200 --> 00:03:09.800
in Block two,

00:03:09.800 --> 00:03:11.740
we have Karbi.

00:03:11.740 --> 00:03:17.600
If you try to access this variable outside this block,

00:03:17.600 --> 00:03:18.890
which is blocked to,

00:03:18.890 --> 00:03:25.390
then we would get a compel ish in error because the scoop off variable is restricted.

00:03:25.390 --> 00:03:30.340
But in the block where it was declared in this simple example,

00:03:30.340 --> 00:03:31.420
we're just explaining.

00:03:31.420 --> 00:03:34.450
A is accessible within block one.

00:03:34.450 --> 00:03:40.560
Block two and block three B is accessible within block to block tree,

00:03:40.560 --> 00:03:45.400
but not block one and C is accessible within on the block.

00:03:45.400 --> 00:03:45.770
Three,

00:03:45.770 --> 00:03:47.700
but not block two and block one.

00:03:47.700 --> 00:03:49.600
Let's run the program.

00:03:49.600 --> 00:04:01.720
All right.

00:04:01.720 --> 00:04:02.950
You see the output?

