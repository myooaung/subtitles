WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.210
in this chapter,

00:00:01.210 --> 00:00:03.610
we're gonna talk about job,

00:00:03.610 --> 00:00:04.180
Bible,

00:00:04.180 --> 00:00:06.550
our input and output.

00:00:06.550 --> 00:00:08.550
Consider the following example.

00:00:08.550 --> 00:00:16.420
Let's say you have a water purifying plant and only need to do is to take in the water from

00:00:16.420 --> 00:00:17.350
the river,

00:00:17.350 --> 00:00:22.350
purify it and send it to an overhead tank.

00:00:22.350 --> 00:00:24.400
So we have a river,

00:00:24.400 --> 00:00:27.550
which would be the source,

00:00:27.550 --> 00:00:31.350
and we'll have a nor had tank,

00:00:31.350 --> 00:00:35.580
which will be a destination now,

00:00:35.580 --> 00:00:36.070
we noted.

00:00:36.070 --> 00:00:41.210
To take in the water from the river you need to create at pipeline,

00:00:41.210 --> 00:00:44.000
and once we install the pipeline,

00:00:44.000 --> 00:00:46.360
a stream of water will stop flowing.

00:00:46.360 --> 00:00:50.870
This dream is called an input stream.

00:00:50.870 --> 00:00:57.400
The reason is this dream has become an input source off water to this water purifying plant

00:00:57.400 --> 00:00:57.400
.

00:00:57.400 --> 00:00:58.680
Similarly,

00:00:58.680 --> 00:01:05.050
wanted to have another stream between the water purifying plant and the or had tank,

00:01:05.050 --> 00:01:09.350
and we need to let the purified water floor in that string.

00:01:09.350 --> 00:01:17.680
Now this is called an output stream because the outboard that comes out of this plant is

00:01:17.680 --> 00:01:20.750
going to get transported to the overhead tank.

00:01:20.750 --> 00:01:21.640
Now,

00:01:21.640 --> 00:01:26.250
do taken note that once we taking all the water inside the river,

00:01:26.250 --> 00:01:27.590
there's nothing left.

00:01:27.590 --> 00:01:28.160
Endeavor.

00:01:28.160 --> 00:01:29.200
Similarly,

00:01:29.200 --> 00:01:32.670
once we transport all the water from the purifying plant.

00:01:32.670 --> 00:01:36.220
There is nothing left in purifying plant to process.

00:01:36.220 --> 00:01:36.750
Now,

00:01:36.750 --> 00:01:37.890
keeping this in mind,

00:01:37.890 --> 00:01:42.480
let's try to map the same example with I war in Java,

00:01:42.480 --> 00:01:51.670
we can replaces water purifying plant with a Java program and we can replace this source or

00:01:51.670 --> 00:01:54.290
the river with a file.

00:01:54.290 --> 00:01:57.740
There can be any number of sources,

00:01:57.740 --> 00:01:59.650
but for the sake of this example,

00:01:59.650 --> 00:02:02.450
let's consider it to be a file,

00:02:02.450 --> 00:02:05.460
and this file will have some kind of text in it.

00:02:05.460 --> 00:02:06.870
Similarly,

00:02:06.870 --> 00:02:08.310
we're gonna have a destination,

00:02:08.310 --> 00:02:10.090
and in this example,

00:02:10.090 --> 00:02:13.510
we're gonna consider another file as the destination.

00:02:13.510 --> 00:02:21.720
Our job is to copy all the text in here to the destination file and in between we may want

00:02:21.720 --> 00:02:22.750
to do some processing,

00:02:22.750 --> 00:02:24.270
but in this example,

00:02:24.270 --> 00:02:28.930
I just want to demonstrate you how to copy this text from the source to the destination.

00:02:28.930 --> 00:02:34.450
And for this purpose way to create the pipeline or the streams,

00:02:34.450 --> 00:02:41.990
you're gonna need to create an input stream and to put the data from the program to the

00:02:41.990 --> 00:02:45.450
destination way to create an output stream.

00:02:45.450 --> 00:02:50.920
That's exactly what I'm going to demonstrate you now in the scarce the stream that's going

00:02:50.920 --> 00:02:53.730
to floor is bites off information,

00:02:53.730 --> 00:02:59.710
although it's the text which we see on the file internally,

00:02:59.710 --> 00:03:01.350
it told zeros and ones,

00:03:01.350 --> 00:03:05.390
so this dream would constitute bites off information.

00:03:05.390 --> 00:03:08.780
Now let's go to Eclipse and see how this can be done.

00:03:08.780 --> 00:03:11.950
Important this project job Bible.

00:03:11.950 --> 00:03:14.210
And in that open of this file,

00:03:14.210 --> 00:03:16.350
Java Ivo file example.

00:03:16.350 --> 00:03:21.150
And here the first thing that I'm going to do is to create input string.

00:03:21.150 --> 00:03:23.040
Things were dealing with file.

00:03:23.040 --> 00:03:25.560
We're gonna create the firing bloodstream,

00:03:25.560 --> 00:03:43.570
and the argument that you're gonna pass in is depart to the source file.

00:03:43.570 --> 00:03:45.370
Let's create a source file.

00:03:45.370 --> 00:03:52.990
I have already done that have created this file to do start txt and in that I just have a

00:03:52.990 --> 00:03:56.050
text which is essentially my two toes.

00:03:56.050 --> 00:03:59.850
Let's get the part off this file.

00:03:59.850 --> 00:04:09.350
Let's copy this and best to door here.

00:04:09.350 --> 00:04:11.690
And remember,

00:04:11.690 --> 00:04:14.550
we need to use the escape character,

00:04:14.550 --> 00:04:25.490
which means another slash and you're gonna provide the name of the pile to those dark txt.

00:04:25.490 --> 00:04:29.470
Let's expand this.

00:04:29.470 --> 00:04:33.650
Now we have another here.

00:04:33.650 --> 00:04:35.850
Can you guess what it is?

00:04:35.850 --> 00:04:39.700
It's a checked exception.

00:04:39.700 --> 00:04:44.700
There could be a possibility that this file is not existed at all.

00:04:44.700 --> 00:04:46.850
So we need to either provide,

00:04:46.850 --> 00:04:47.070
try,

00:04:47.070 --> 00:04:47.400
catch,

00:04:47.400 --> 00:04:49.660
block or just use throws.

00:04:49.660 --> 00:04:53.490
Now we have created the input stream.

00:04:53.490 --> 00:04:56.950
Now let's create the output stream.

00:04:56.950 --> 00:05:02.950
Let's copy the statement and best adore here.

00:05:02.950 --> 00:05:05.650
Let's call this out.

00:05:05.650 --> 00:05:06.660
Of course,

00:05:06.660 --> 00:05:11.150
this has to be vile output stream.

00:05:11.150 --> 00:05:15.650
Let me copy this and pastor door here.

00:05:15.650 --> 00:05:20.990
And the argument that this is going to take in is the destination file.

00:05:20.990 --> 00:05:25.250
Let's have a new file naming here something like that.

00:05:25.250 --> 00:05:27.250
Now,

00:05:27.250 --> 00:05:32.970
the next thing that we're gonna do is to read each and every bite off information from the

00:05:32.970 --> 00:05:33.750
source file.

00:05:33.750 --> 00:05:36.440
And for that purpose,

00:05:36.440 --> 00:05:47.050
we're gonna use the method called Read inside this class filing put stream while we're also

00:05:47.050 --> 00:05:51.970
going to be needing an inter variable Well,

00:05:51.970 --> 00:05:54.350
it's the way in just a while.

00:05:54.350 --> 00:06:16.630
Hi equals and not read when this one.

00:06:16.630 --> 00:06:28.230
Now what we're trying to do here is the input stream in here is going to have steam off

00:06:28.230 --> 00:06:34.730
information and in this case is just bite bite off information.

00:06:34.730 --> 00:06:40.390
The text is essentially represented in bites in our hard drive,

00:06:40.390 --> 00:06:44.730
and that's exactly what is going to come inside the stream.

00:06:44.730 --> 00:06:45.490
The filing.

00:06:45.490 --> 00:06:50.920
But stream is going to have the bites off information off the text inside that filed the

00:06:50.920 --> 00:06:51.610
source smile.

00:06:51.610 --> 00:06:59.550
And this read method in here is going to read one bite at a time and wanted reach one bite

00:06:59.550 --> 00:06:59.550
.

00:06:59.550 --> 00:07:03.710
It's going to read the next bite the next time we come to this,

00:07:03.710 --> 00:07:04.750
come back to this loop.

00:07:04.750 --> 00:07:10.760
So we keep looping in the spiral loop for each and every bite off information.

00:07:10.760 --> 00:07:12.230
And in here,

00:07:12.230 --> 00:07:15.090
we want to do something with that bite off information.

00:07:15.090 --> 00:07:16.990
Also,

00:07:16.990 --> 00:07:19.740
there has to be a condition to break this loop.

00:07:19.740 --> 00:07:25.160
The conditioning here is when I read metal returns minus one.

00:07:25.160 --> 00:07:30.250
That means it has reached the end off while going back to a previous example.

00:07:30.250 --> 00:07:33.480
That means the river has no water to consume.

00:07:33.480 --> 00:07:35.150
So we'll quit off this look.

00:07:35.150 --> 00:07:40.280
But there we seem to we seem to have an ever here again.

00:07:40.280 --> 00:07:42.750
We're gonna provide the trust declaration.

00:07:42.750 --> 00:07:45.500
We're gonna come back and talk about try,

00:07:45.500 --> 00:07:45.860
catch,

00:07:45.860 --> 00:07:47.710
block how we can make use off it.

00:07:47.710 --> 00:07:48.320
In fact,

00:07:48.320 --> 00:07:49.970
this is the perfect place.

00:07:49.970 --> 00:07:50.720
Very well.

00:07:50.720 --> 00:07:51.660
Understand The try,

00:07:51.660 --> 00:07:52.030
catch,

00:07:52.030 --> 00:07:54.980
block and even the final block in better fashion.

00:07:54.980 --> 00:07:57.130
So we'll get there pretty soon.

00:07:57.130 --> 00:07:59.430
So for each bite off information,

00:07:59.430 --> 00:08:00.700
what we want to do,

00:08:00.700 --> 00:08:07.430
we want to print that into our We want to send that information to destination so we can

00:08:07.430 --> 00:08:10.850
certainly make use off this heart put stream.

00:08:10.850 --> 00:08:14.350
So we're gonna say out dot right,

00:08:14.350 --> 00:08:18.470
it's going to take in the integer perimeter,

00:08:18.470 --> 00:08:22.580
and I'm just going to pass in the eye.

00:08:22.580 --> 00:08:24.220
So what does?

00:08:24.220 --> 00:08:31.020
This variable I hold is just going to hold the indigent form off the bite information.

00:08:31.020 --> 00:08:37.310
So this read matter will read the data as bite and is going to convert that bite

00:08:37.310 --> 00:08:40.600
information into integer in the past,

00:08:40.600 --> 00:08:44.380
that indigent to this right matter off the are put stream,

00:08:44.380 --> 00:08:46.940
the right method is going to convert.

00:08:46.940 --> 00:08:47.680
In fact,

00:08:47.680 --> 00:08:51.850
it's going to typecast this integer into character.

00:08:51.850 --> 00:08:54.280
And how is this done?

00:08:54.280 --> 00:08:58.020
Going back to our typecasting examples in the beginning,

00:08:58.020 --> 00:08:59.260
Off this tutorial,

00:08:59.260 --> 00:09:03.550
we talked about how we can typecast and indigenous to a character.

00:09:03.550 --> 00:09:08.270
Let's say the value in here is 65.

00:09:08.270 --> 00:09:11.510
Then if we typecast it to a character,

00:09:11.510 --> 00:09:13.650
it's going to be capital A.

00:09:13.650 --> 00:09:16.050
Let's take a look at the ask you table.

00:09:16.050 --> 00:09:21.630
You can find this table in asking dot c l.

00:09:21.630 --> 00:09:31.360
And you can see if the India that we're gonna get is say 90 then that's going to be the

00:09:31.360 --> 00:09:35.800
letter Z Similarly poor 65.

00:09:35.800 --> 00:09:39.280
It's going to be Capitally hora per Casey.

00:09:39.280 --> 00:09:40.570
Likewise,

00:09:40.570 --> 00:09:43.990
we have total off 1 27 characters,

00:09:43.990 --> 00:09:47.550
and if you take a look at the extended Haski table,

00:09:47.550 --> 00:09:50.880
there will be total off to 56 characters.

00:09:50.880 --> 00:09:56.810
The reason why there are 2 56 characters is because in each bite there are eight bits.

00:09:56.810 --> 00:09:58.260
So within the eight bits,

00:09:58.260 --> 00:10:02.780
Hominy combinations off zeros and ones we can have is to 56.

00:10:02.780 --> 00:10:07.700
Let's go back when you want to read each and every bite.

00:10:07.700 --> 00:10:10.280
And when we can work the region,

00:10:10.280 --> 00:10:13.260
everybody to end and eventually to a character,

00:10:13.260 --> 00:10:19.780
it's not going to go beyond the 2 to 6 characters because ultimately we're reading one bite

00:10:19.780 --> 00:10:20.370
at a time.

00:10:20.370 --> 00:10:21.600
Hope that's clear,

00:10:21.600 --> 00:10:23.970
and this is very much it.

00:10:23.970 --> 00:10:27.480
This should copy all the contents in the two news doc.

00:10:27.480 --> 00:10:31.070
Txt to the tourist New dark Txt.

00:10:31.070 --> 00:10:34.680
Let's save the file and run the program.

00:10:34.680 --> 00:10:42.860
You probably won't see any control output because we don't have any system dot r dot

00:10:42.860 --> 00:10:44.010
Printed on instructions.

00:10:44.010 --> 00:10:46.540
Let's go to our desktop and see.

00:10:46.540 --> 00:10:47.450
Here it is.

00:10:47.450 --> 00:10:49.790
We have exact same information.

00:10:49.790 --> 00:10:53.920
This is definitely a good start for this chapter.

00:10:53.920 --> 00:10:55.750
See you in my next video.

