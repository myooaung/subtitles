WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.560
hold it in this chapter,

00:00:01.560 --> 00:00:04.180
we're gonna talk about packages,

00:00:04.180 --> 00:00:05.570
and especially in this video,

00:00:05.570 --> 00:00:07.750
we're gonna talk about how to use packages,

00:00:07.750 --> 00:00:09.100
how to import them,

00:00:09.100 --> 00:00:09.750
etcetera.

00:00:09.750 --> 00:00:12.280
Take a look at this folder.

00:00:12.280 --> 00:00:14.550
We have multiple files in here.

00:00:14.550 --> 00:00:17.770
Some of these files are related to music,

00:00:17.770 --> 00:00:20.260
and some of these files are related to cooking,

00:00:20.260 --> 00:00:23.500
and we got the other random files.

00:00:23.500 --> 00:00:24.160
Now,

00:00:24.160 --> 00:00:28.870
the problem with this is everything in here looks very tedious.

00:00:28.870 --> 00:00:30.920
These files are not organized.

00:00:30.920 --> 00:00:32.220
Also,

00:00:32.220 --> 00:00:35.990
if you wanted to create another file with the same name says some name,

00:00:35.990 --> 00:00:40.640
it's not possible to have two files with the same name in the same folder.

00:00:40.640 --> 00:00:42.510
So what is the solution?

00:00:42.510 --> 00:00:45.930
How do we make things look a lot cleaner?

00:00:45.930 --> 00:00:50.000
More organized his by creating folders.

00:00:50.000 --> 00:00:50.980
So let's do that.

00:00:50.980 --> 00:00:56.510
I went to rightly can create a folder on When did name it as music,

00:00:56.510 --> 00:01:04.950
music and files that are related to music will go inside that directory,

00:01:04.950 --> 00:01:10.440
which is fair atop this list and songs list.

00:01:10.440 --> 00:01:18.690
These two files will go in here and now we can have another directory say cooking,

00:01:18.690 --> 00:01:24.450
and then we're gonna move these two files in here.

00:01:24.450 --> 00:01:27.420
Another directory with,

00:01:27.420 --> 00:01:28.350
say,

00:01:28.350 --> 00:01:30.250
random or whatever.

00:01:30.250 --> 00:01:35.290
We're gonna move everything in here now.

00:01:35.290 --> 00:01:39.010
If you wanted to create another filed with the same names.

00:01:39.010 --> 00:01:41.520
The apple you can create in the same doctor.

00:01:41.520 --> 00:01:44.540
But you can always create in another directory.

00:01:44.540 --> 00:01:45.420
That's very obvious,

00:01:45.420 --> 00:01:45.780
right?

00:01:45.780 --> 00:01:54.270
But let's see how we can similar behaviour in or Java project using packages.

00:01:54.270 --> 00:01:55.890
Let's go to a project.

00:01:55.890 --> 00:01:57.630
No,

00:01:57.630 --> 00:01:58.090
actually,

00:01:58.090 --> 00:02:03.320
I have created this video long ago and after I finished recording all the court Java videos

00:02:03.320 --> 00:02:05.050
and I'm but I'm trying to edit,

00:02:05.050 --> 00:02:08.370
I found out that this video,

00:02:08.370 --> 00:02:10.460
which talks about packages,

00:02:10.460 --> 00:02:11.550
is corrupt.

00:02:11.550 --> 00:02:17.100
So I have to remake this video so you may see a slight mismatch between this video and the

00:02:17.100 --> 00:02:18.250
next video.

00:02:18.250 --> 00:02:20.010
I'll try to keep it smooth,

00:02:20.010 --> 00:02:22.460
but you may see a slight mismatch,

00:02:22.460 --> 00:02:24.410
so let me just get it off.

00:02:24.410 --> 00:02:28.250
The folders which have created in here are the packages that I've created,

00:02:28.250 --> 00:02:30.540
and I'll try to explain it again.

00:02:30.540 --> 00:02:32.670
Let me get it off.

00:02:32.670 --> 00:02:34.750
These two went to said dilate.

00:02:34.750 --> 00:02:36.350
Yes.

00:02:36.350 --> 00:02:41.150
Now what I'm going to do is create a new package and see what it is.

00:02:41.150 --> 00:02:43.470
I would right click on the project,

00:02:43.470 --> 00:02:47.180
say new and say job a package.

00:02:47.180 --> 00:02:51.780
I'm going to name it as new package.

00:02:51.780 --> 00:02:54.370
Want to leave the name as a tous click?

00:02:54.370 --> 00:02:56.930
Finish the moment you create a package.

00:02:56.930 --> 00:02:59.060
If you go into the project directory,

00:02:59.060 --> 00:03:02.150
you can get the part of the project by right clicking on the project.

00:03:02.150 --> 00:03:05.680
Click on properties and here you get the part.

00:03:05.680 --> 00:03:06.550
Let's go there.

00:03:06.550 --> 00:03:12.830
And once you go there and click on directory named SRC,

00:03:12.830 --> 00:03:13.970
stand for source.

00:03:13.970 --> 00:03:16.870
You're gonna see that package in here.

00:03:16.870 --> 00:03:17.700
Essentially,

00:03:17.700 --> 00:03:20.750
it is represented as a folder in Windows.

00:03:20.750 --> 00:03:22.690
Our director in Lenox.

00:03:22.690 --> 00:03:24.570
Same day.

00:03:24.570 --> 00:03:27.030
If you create a folder in here with,

00:03:27.030 --> 00:03:32.980
say some name so already there.

00:03:32.980 --> 00:03:35.110
So we can't have the same name.

00:03:35.110 --> 00:03:36.500
I'm going to call it,

00:03:36.500 --> 00:03:36.950
uh,

00:03:36.950 --> 00:03:39.790
some other name.

00:03:39.790 --> 00:03:43.260
And that way we go here,

00:03:43.260 --> 00:03:45.490
you see it created here.

00:03:45.490 --> 00:03:47.200
You can do it a the way you get.

00:03:47.200 --> 00:03:49.210
You can create a package and see a folder there.

00:03:49.210 --> 00:03:51.810
Or you can create a folded there and see a package here.

00:03:51.810 --> 00:03:53.280
Now,

00:03:53.280 --> 00:04:00.450
let's try to create a class inside that holder or a package.

00:04:00.450 --> 00:04:08.590
So you're gonna right click on that package and say Java class.

00:04:08.590 --> 00:04:13.010
I'm gonna leave the name as new class or you can give your own name,

00:04:13.010 --> 00:04:14.390
whatever finish.

00:04:14.390 --> 00:04:21.840
And once you do so when we auto generate the class you have seen begat all these

00:04:21.840 --> 00:04:23.070
unnecessary comments,

00:04:23.070 --> 00:04:24.220
which we can get it off.

00:04:24.220 --> 00:04:25.420
But the key thing is,

00:04:25.420 --> 00:04:30.740
you can see this particular statement would say It's package new package,

00:04:30.740 --> 00:04:37.790
which means this class is actually reciting in a package named New Package.

00:04:37.790 --> 00:04:43.000
If you're tired of you a different name or the name off a different package that's going to

00:04:43.000 --> 00:04:43.660
throw a never,

00:04:43.660 --> 00:04:44.700
for example,

00:04:44.700 --> 00:04:46.070
we can't give the package name,

00:04:46.070 --> 00:04:47.150
which we have just created.

00:04:47.150 --> 00:04:49.350
It's some other name,

00:04:49.350 --> 00:04:53.800
some other name that doesn't work.

00:04:53.800 --> 00:04:54.450
You get a compound,

00:04:54.450 --> 00:04:54.950
a mirror.

00:04:54.950 --> 00:04:58.950
So no,

00:04:58.950 --> 00:05:00.310
Uh,

00:05:00.310 --> 00:05:03.500
just as we have seen that we're able to keep things,

00:05:03.500 --> 00:05:05.150
keep files organized.

00:05:05.150 --> 00:05:06.380
Ah,

00:05:06.380 --> 00:05:09.450
begin also at you the same thing in here.

00:05:09.450 --> 00:05:16.230
Now we can also create a class filed with the same name New class on a different package.

00:05:16.230 --> 00:05:20.250
Let's say copy and you can passed it over here.

00:05:20.250 --> 00:05:23.900
Re factor copy are just copy.

00:05:23.900 --> 00:05:27.790
De facto copy would let you make changes to their name or whatever.

00:05:27.790 --> 00:05:29.860
So now let's click this,

00:05:29.860 --> 00:05:31.440
but obviously you get a never.

00:05:31.440 --> 00:05:35.550
Because we're not supposed to give the package name as new package,

00:05:35.550 --> 00:05:37.650
which is a package name of this.

00:05:37.650 --> 00:05:47.280
This supposed to be some other name now thinks work pretty well.

00:05:47.280 --> 00:05:49.680
So that's the beauty of packages.

00:05:49.680 --> 00:05:54.390
It will help you keep things or classes and more organized fashion.

00:05:54.390 --> 00:06:00.170
You can keep related class wells in a certain package.

00:06:00.170 --> 00:06:01.160
Now,

00:06:01.160 --> 00:06:08.560
let's say in here what you wanted to do is he wanted to use class files which are reciting

00:06:08.560 --> 00:06:09.950
in another package.

00:06:09.950 --> 00:06:11.980
How do we cheer that?

00:06:11.980 --> 00:06:15.710
Let's say I wanted to use class.

00:06:15.710 --> 00:06:20.080
Called this some name door Java,

00:06:20.080 --> 00:06:22.800
which is reciting in some name package.

00:06:22.800 --> 00:06:25.990
I want to use it in my class.

00:06:25.990 --> 00:06:27.240
Safer.

00:06:27.240 --> 00:06:31.550
Tried to create an object off some name.

00:06:31.550 --> 00:06:40.590
It just doesn't work new Some name,

00:06:40.590 --> 00:06:42.960
it throws an error.

00:06:42.960 --> 00:06:53.060
What you can do is you need to import this particular class into your project or into your

00:06:53.060 --> 00:06:53.810
package.

00:06:53.810 --> 00:07:00.600
What you need to do is you need to import this class into your class file.

00:07:00.600 --> 00:07:01.330
How do you do that?

00:07:01.330 --> 00:07:05.190
You gonna use a keyboard called import,

00:07:05.190 --> 00:07:12.660
and then you gonna specify the package name basically the package wherever you are desired

00:07:12.660 --> 00:07:12.660
.

00:07:12.660 --> 00:07:13.890
The class file is reciting,

00:07:13.890 --> 00:07:24.220
So it's going to be some name docked and you already got suggestions congest use arrow keys

00:07:24.220 --> 00:07:26.760
sent to let that classroom which wanted to use.

00:07:26.760 --> 00:07:27.770
And no,

00:07:27.770 --> 00:07:30.510
we should no longer be having the several,

00:07:30.510 --> 00:07:31.580
but still we have.

00:07:31.580 --> 00:07:37.160
That's because we don't have the name correct.

00:07:37.160 --> 00:07:38.920
It has to be lower case s.

00:07:38.920 --> 00:07:45.550
We already know that Joe is super case sends to and it gets annoying at times I could have

00:07:45.550 --> 00:07:46.250
seen just now.

00:07:46.250 --> 00:07:51.060
So let me just get it off this want and make sure we see another.

00:07:51.060 --> 00:07:52.380
Let's save the file.

00:07:52.380 --> 00:07:53.180
You gotten better.

00:07:53.180 --> 00:07:54.050
That's undue.

00:07:54.050 --> 00:07:55.420
Get it off,

00:07:55.420 --> 00:07:55.950
the better.

00:07:55.950 --> 00:08:03.790
Now you can call all the methods inside this class without any problem,

00:08:03.790 --> 00:08:06.300
and I don't think I need to do that.

00:08:06.300 --> 00:08:10.350
So that's how packages will work.

00:08:10.350 --> 00:08:17.670
Pole to say that you wanted to use all these classes reciting in the package.

00:08:17.670 --> 00:08:18.350
Some name.

00:08:18.350 --> 00:08:22.330
Then you don't have to import each in every class.

00:08:22.330 --> 00:08:29.990
You can just import the entire package like so I can use star character.

00:08:29.990 --> 00:08:38.650
And that would let you using any our all the classes inside the some name package.

00:08:38.650 --> 00:08:43.380
Alright,

00:08:43.380 --> 00:08:44.270
that's it done package.

00:08:44.270 --> 00:08:46.060
It's very simple.

00:08:46.060 --> 00:08:48.650
And is he?

00:08:48.650 --> 00:08:53.500
Now you may ask me if these are packages,

00:08:53.500 --> 00:08:55.790
then what are these?

00:08:55.790 --> 00:09:04.860
These are all just logical entities created by your I d like net beans are Eclipse does the

00:09:04.860 --> 00:09:05.480
same thing.

00:09:05.480 --> 00:09:07.710
It is just for our convenience.

00:09:07.710 --> 00:09:10.060
These are not actual folders.

00:09:10.060 --> 00:09:11.890
If you're going to the project directory,

00:09:11.890 --> 00:09:15.070
you won't see those folders.

00:09:15.070 --> 00:09:21.750
This logical entity called source packages will actually have source files.

00:09:21.750 --> 00:09:27.250
And this logical entity test packages will have the test files.

00:09:27.250 --> 00:09:28.170
Now,

00:09:28.170 --> 00:09:30.900
you probably don't know what a test file is.

00:09:30.900 --> 00:09:31.710
Ah,

00:09:31.710 --> 00:09:37.840
you will get to know when you when we talk about Jay unit or mock itto etcetera.

00:09:37.840 --> 00:09:39.750
So that's going to be different.

00:09:39.750 --> 00:09:40.870
Ah,

00:09:40.870 --> 00:09:42.150
chapter altogether,

00:09:42.150 --> 00:09:44.160
or rather different course altogether.

00:09:44.160 --> 00:09:45.320
So,

00:09:45.320 --> 00:09:46.610
at least for cordial,

00:09:46.610 --> 00:09:51.670
you're not really bothered about these this logical entity called test packages.

00:09:51.670 --> 00:09:56.140
What you should be concerned about is the source packages,

00:09:56.140 --> 00:09:57.530
libraries and test library.

00:09:57.530 --> 00:09:57.770
Second,

00:09:57.770 --> 00:09:58.950
you don't need test libraries.

00:09:58.950 --> 00:10:02.230
Libraries are just all the libraries.

00:10:02.230 --> 00:10:06.870
That too you're using in this particular project packages.

00:10:06.870 --> 00:10:09.480
So you're using all the gerica libraries,

00:10:09.480 --> 00:10:11.390
which is a deep all library,

00:10:11.390 --> 00:10:15.780
or you could import some external libraries to use them in your project will talk about

00:10:15.780 --> 00:10:16.990
them pretty soon.

00:10:16.990 --> 00:10:22.830
So these are not actually reciting in this directory packages.

00:10:22.830 --> 00:10:25.320
This is just a logical Oh,

00:10:25.320 --> 00:10:29.230
are These are just logical entities created by the I D.

00:10:29.230 --> 00:10:30.490
For your convenience.

00:10:30.490 --> 00:10:31.800
All right,

00:10:31.800 --> 00:10:33.650
see you in my next video.

