WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.030
Let's take a quick example off interface.

00:00:03.030 --> 00:00:03.460
What?

00:00:03.460 --> 00:00:08.550
That we're gonna create a new project which is obviously had Java project.

00:00:08.550 --> 00:00:17.090
Let's name this project as interface Project has a good naming convention.

00:00:17.090 --> 00:00:20.770
We always start our project name with a capital letter,

00:00:20.770 --> 00:00:30.490
and every subsequent words will also start with a capital letter that's click finish inside

00:00:30.490 --> 00:00:31.350
the project.

00:00:31.350 --> 00:00:33.350
We have ah default package.

00:00:33.350 --> 00:00:36.490
It's not increased that we use the default package.

00:00:36.490 --> 00:00:43.650
So we're gonna create a new package which is interface package,

00:00:43.650 --> 00:00:45.400
whatever the name that you want to give.

00:00:45.400 --> 00:00:49.230
But make sure you follow a naming convention off Camel case,

00:00:49.230 --> 00:00:54.870
where in the first letter starts with a lower case and all subsequent words who stopped

00:00:54.870 --> 00:01:01.360
with an uppercase click finish right click on this package.

00:01:01.360 --> 00:01:09.020
And we're gonna be creating an interface that's called this Inter First animal and click

00:01:09.020 --> 00:01:09.560
finish.

00:01:09.560 --> 00:01:11.130
There you have it.

00:01:11.130 --> 00:01:12.440
We have an interface.

00:01:12.440 --> 00:01:15.300
The next thing that we want to do is right.

00:01:15.300 --> 00:01:17.670
Click on the project and create a new class.

00:01:17.670 --> 00:01:27.550
This class I'm going to call it land animals best with animals that that live on land X

00:01:27.550 --> 00:01:28.360
click finish.

00:01:28.360 --> 00:01:32.330
So we got land animals and inside this animal interface,

00:01:32.330 --> 00:01:39.850
I'm going to define a method which is going to be and breathe something of that sort.

00:01:39.850 --> 00:01:44.750
Let's to control shift staff to go the proper indentation to the court.

00:01:44.750 --> 00:01:55.030
Now what we're going to do is we're gonna use the keyword implements implements animal Now

00:01:55.030 --> 00:01:56.350
by doing so,

00:01:56.350 --> 00:02:02.040
were forced to give the implementation for all the methods inside this interface.

00:02:02.040 --> 00:02:04.250
And that's what we have this ever in here.

00:02:04.250 --> 00:02:10.990
The type land animals must implement the inherited obstruct method animal breed.

00:02:10.990 --> 00:02:14.430
He congest resolved error.

00:02:14.430 --> 00:02:15.720
But clicking this,

00:02:15.720 --> 00:02:20.560
the clips that it will help us in doing so and whatever that you want to do,

00:02:20.560 --> 00:02:24.810
you can do it or hear system dar out dot print.

00:02:24.810 --> 00:02:25.210
Ellen,

00:02:25.210 --> 00:02:28.590
you're gonna say something,

00:02:28.590 --> 00:02:31.550
maybe breathing whatever.

00:02:31.550 --> 00:02:34.320
And besides this,

00:02:34.320 --> 00:02:36.850
you can also have your own other methods.

00:02:36.850 --> 00:02:40.950
This is fairly a very simple example Off using an interface.

00:02:40.950 --> 00:02:43.500
Let's take a look at another example.

00:02:43.500 --> 00:02:48.670
Let's consider something that falls in the subcategory off land animals.

00:02:48.670 --> 00:02:50.040
That's a frog.

00:02:50.040 --> 00:02:51.240
I'm going to copy it.

00:02:51.240 --> 00:02:53.540
This class I said it.

00:02:53.540 --> 00:02:55.680
This plants Aldo control see,

00:02:55.680 --> 00:03:00.730
sell it the project and Aldo control we This will copy the class Of course,

00:03:00.730 --> 00:03:02.150
we need to give a different name.

00:03:02.150 --> 00:03:04.150
And that's what we got this prompt.

00:03:04.150 --> 00:03:07.040
I'm wounded in this frog.

00:03:07.040 --> 00:03:12.180
And inside this class,

00:03:12.180 --> 00:03:15.150
I'm not going to implement animal.

00:03:15.150 --> 00:03:22.760
What I'm going to do is I'm going to I'm going to change a little recording here.

00:03:22.760 --> 00:03:26.850
I'm going to make this class and in defense.

00:03:26.850 --> 00:03:29.830
And,

00:03:29.830 --> 00:03:30.820
of course,

00:03:30.820 --> 00:03:34.000
interface does not have an implementation.

00:03:34.000 --> 00:03:40.710
So we're gonna have to get rid off this and we're gonna provide some kind off and abstract

00:03:40.710 --> 00:03:41.050
method.

00:03:41.050 --> 00:03:44.220
What is that one thing that every land animal does?

00:03:44.220 --> 00:03:49.150
Let's say jump just for the sake of example,

00:03:49.150 --> 00:03:51.640
I don't know if an elephant can jump,

00:03:51.640 --> 00:03:53.710
but just for the sake of example,

00:03:53.710 --> 00:03:55.680
let's assume so let's save the file.

00:03:55.680 --> 00:03:58.050
Can you guess why we have a never here.

00:03:58.050 --> 00:04:01.930
That's because music e what implements.

00:04:01.930 --> 00:04:06.290
We should provide the implementation for all the abstract methods.

00:04:06.290 --> 00:04:07.810
But in this case,

00:04:07.810 --> 00:04:09.540
this is an interface.

00:04:09.540 --> 00:04:14.110
An interface cannot provide implementation for its parent interface.

00:04:14.110 --> 00:04:17.180
So instead of using the keyword implements,

00:04:17.180 --> 00:04:24.870
you're gonna have to use extents que were just as class extends a class,

00:04:24.870 --> 00:04:25.620
an interface,

00:04:25.620 --> 00:04:27.070
extents and interface.

00:04:27.070 --> 00:04:30.610
But every class can implement and interferes.

00:04:30.610 --> 00:04:33.310
The reason is only if it is a class.

00:04:33.310 --> 00:04:37.660
Can it provide implementation for all the abstract methods of an interface.

00:04:37.660 --> 00:04:40.900
So the key word makes sense Now,

00:04:40.900 --> 00:04:41.770
if you observe,

00:04:41.770 --> 00:04:47.920
have frog is kind off the land animal and at the same time I land.

00:04:47.920 --> 00:04:49.070
Animal is a kind,

00:04:49.070 --> 00:04:49.980
often animal,

00:04:49.980 --> 00:04:53.270
are hierarchy is in right shape now.

00:04:53.270 --> 00:04:59.350
What I'm going to do is I'm going to do implements land,

00:04:59.350 --> 00:05:08.450
animal and by doing so not only should be provide the implementation for the Jump Mountain

00:05:08.450 --> 00:05:08.450
,

00:05:08.450 --> 00:05:14.170
but also for all the abstract method inside the grandparent interprets,

00:05:14.170 --> 00:05:15.530
which is in this case,

00:05:15.530 --> 00:05:32.790
is animal over your mouse over this ever and click on this there you have it breathing and

00:05:32.790 --> 00:05:39.260
jumping.

00:05:39.260 --> 00:05:48.280
This brings me to talk about one of the problems with the multiple inheritance are hybrid

00:05:48.280 --> 00:05:49.150
inheritance.

00:05:49.150 --> 00:05:52.590
Let's go the white board and I'll try to explain it.

00:05:52.590 --> 00:05:55.230
So what is a multiple inheritance?

00:05:55.230 --> 00:05:56.760
Take a look at this example.

00:05:56.760 --> 00:05:59.250
We have an animal class.

00:05:59.250 --> 00:06:04.040
We have a land animal and a water animal,

00:06:04.040 --> 00:06:08.750
which will both inherit the properties often often animal.

00:06:08.750 --> 00:06:12.380
Now let's assume we have an animal,

00:06:12.380 --> 00:06:12.880
which,

00:06:12.880 --> 00:06:14.910
which is Nader completely water,

00:06:14.910 --> 00:06:17.060
animal nor land animal,

00:06:17.060 --> 00:06:19.680
which are called amphibians.

00:06:19.680 --> 00:06:21.860
A good example often MPB and would be,

00:06:21.860 --> 00:06:22.280
ah,

00:06:22.280 --> 00:06:23.040
frog.

00:06:23.040 --> 00:06:26.940
Now this will have the properties off both land,

00:06:26.940 --> 00:06:30.910
animal and what animal Now if you think there's one thing in common,

00:06:30.910 --> 00:06:35.200
one thing is common between a land animal and what Ramel,

00:06:35.200 --> 00:06:42.380
which would be breathing What animal breathe in the water and the land animal will breathe

00:06:42.380 --> 00:06:43.350
in the air.

00:06:43.350 --> 00:06:45.220
But the Progress book.

00:06:45.220 --> 00:06:48.510
If we were to write a Java program,

00:06:48.510 --> 00:06:52.450
then we would have this matter inside both these classes.

00:06:52.450 --> 00:06:59.420
And let's assume the Java support multiple inheritance just for the sake off example.

00:06:59.420 --> 00:07:00.080
By the way,

00:07:00.080 --> 00:07:01.650
what is multiple inheritance here?

00:07:01.650 --> 00:07:09.900
This part off This is multiple inheritance where in a class will try to extend more than

00:07:09.900 --> 00:07:10.570
one class.

00:07:10.570 --> 00:07:17.680
So in here the frog class extends rand animal and water animal.

00:07:17.680 --> 00:07:19.790
If you do it programmatically,

00:07:19.790 --> 00:07:21.350
we get the compile time error here.

00:07:21.350 --> 00:07:25.750
The reason is Joe doesn't support multiple inheritance and will to why?

00:07:25.750 --> 00:07:28.600
Let's say we're supporting multiple inheritance.

00:07:28.600 --> 00:07:40.190
And if I create an object off this class frog so f so frog object equals new frog and if I

00:07:40.190 --> 00:07:41.520
do object,

00:07:41.520 --> 00:07:47.610
dark breathe is it going to call the breed method offer land,

00:07:47.610 --> 00:07:49.100
animal or water animal?

00:07:49.100 --> 00:07:50.690
There's a confusion,

00:07:50.690 --> 00:07:51.070
right?

00:07:51.070 --> 00:07:53.350
This is the ambiguity.

00:07:53.350 --> 00:07:57.750
JBM cannot figure out which matter to call at the wrong time.

00:07:57.750 --> 00:07:59.780
So to avoid the confusion,

00:07:59.780 --> 00:08:05.380
Java designers decided to eliminate the multiple inheritance all together.

00:08:05.380 --> 00:08:07.180
So in your program,

00:08:07.180 --> 00:08:09.450
you would get an error in the statement.

00:08:09.450 --> 00:08:12.130
You can't extend more than one class.

00:08:12.130 --> 00:08:15.880
This is also sometimes referred as the diamond problem.

00:08:15.880 --> 00:08:17.410
Looking at this pattern,

00:08:17.410 --> 00:08:20.650
which looks like a diamond hope that makes sense.

00:08:20.650 --> 00:08:25.900
Now People say that interfaces solve this problem off multiple inheritance,

00:08:25.900 --> 00:08:29.300
which is wrong within the Pacers.

00:08:29.300 --> 00:08:31.850
We eliminated the problem itself.

00:08:31.850 --> 00:08:33.900
We didn't solve the problem.

00:08:33.900 --> 00:08:38.460
So let's assume we have animal interface land,

00:08:38.460 --> 00:08:41.570
animal on defense and what random interface.

00:08:41.570 --> 00:08:44.400
And let's say we have a frog class.

00:08:44.400 --> 00:08:49.200
If Roe Class can implement both land,

00:08:49.200 --> 00:08:50.740
animal and water,

00:08:50.740 --> 00:08:56.950
animal interface and multiple inheritance with interfaces is possible in Java,

00:08:56.950 --> 00:08:58.950
also by the bay.

00:08:58.950 --> 00:09:02.710
This too will implement the animal class.

00:09:02.710 --> 00:09:03.320
Now,

00:09:03.320 --> 00:09:11.050
if we create an object off frog and do object dot breathe,

00:09:11.050 --> 00:09:13.450
you will not get a conflict.

00:09:13.450 --> 00:09:18.530
That's very obvious because there is no implementation,

00:09:18.530 --> 00:09:21.150
Our behavior written in these classes,

00:09:21.150 --> 00:09:27.190
the behaviour is defined or written inside the frog class.

00:09:27.190 --> 00:09:32.350
There are no two behaviors is just one behavior provided by the frog class itself.

00:09:32.350 --> 00:09:35.890
So there is no school for ambiguity.

00:09:35.890 --> 00:09:39.550
Let's take a look at this example in our workbench.

00:09:39.550 --> 00:09:40.950
Let's go back.

00:09:40.950 --> 00:09:43.290
So let's create another class,

00:09:43.290 --> 00:09:45.750
which could be a water animal.

00:09:45.750 --> 00:09:51.300
I just can't do control C and control we and in strove land animal,

00:09:51.300 --> 00:09:55.070
I'm going to be doing water.

00:09:55.070 --> 00:10:03.540
Animals se breathe.

00:10:03.540 --> 00:10:12.170
Let's have the same method declared inside the land animals as well,

00:10:12.170 --> 00:10:14.450
and in here,

00:10:14.450 --> 00:10:21.460
since we no longer have this matter will get better and save the file again.

00:10:21.460 --> 00:10:34.580
Important both water animal on land animals sent office by using coma like so water.

00:10:34.580 --> 00:10:40.230
How to control space To complete my statement.

00:10:40.230 --> 00:10:44.930
Let's save the file and let's great a new class in here,

00:10:44.930 --> 00:10:47.980
which would be our main method just to be able to eggs here.

00:10:47.980 --> 00:10:49.230
This matter.

00:10:49.230 --> 00:11:00.450
Let's right click you knew and class interface example.

00:11:00.450 --> 00:11:04.550
I'm going to be needing this public static wide main method.

00:11:04.550 --> 00:11:05.420
Let's click.

00:11:05.420 --> 00:11:14.350
Finish what I'm going to do as you pretty much can expect frog object.

00:11:14.350 --> 00:11:23.300
You frog dark breed was going to call the breed method inside the frog,

00:11:23.300 --> 00:11:24.410
which is pretty obvious.

00:11:24.410 --> 00:11:30.410
You can also have the difference.

00:11:30.410 --> 00:11:33.190
Type as one off these two categories.

00:11:33.190 --> 00:11:34.900
Land animals or water animals.

00:11:34.900 --> 00:11:36.450
Let's do it.

00:11:36.450 --> 00:11:45.340
Land animals object to most new frog.

00:11:45.340 --> 00:11:57.800
Let's go to end up step Minton a copy of the statement and bested or hair and you'll see no

00:11:57.800 --> 00:11:59.250
difference in the output.

00:11:59.250 --> 00:12:00.460
Let's run the program.

00:12:00.460 --> 00:12:01.090
There you go.

00:12:01.090 --> 00:12:06.810
These are the bare minimum examples off interfaces.

00:12:06.810 --> 00:12:09.980
We haven't yet walked into the mainstream yet.

00:12:09.980 --> 00:12:12.050
When we talk about collection framework,

00:12:12.050 --> 00:12:17.540
we're gonna be exclusively talking about some of the major features introduced in Java 1.8

00:12:17.540 --> 00:12:17.540
.

00:12:17.540 --> 00:12:20.310
They're going to be very interesting topics,

00:12:20.310 --> 00:12:22.650
and we'll get there pretty soon.

00:12:22.650 --> 00:12:24.280
But for now,

00:12:24.280 --> 00:12:26.050
let's Oh,

00:12:26.050 --> 00:12:28.990
it's just keep focused and stay tuned.

00:12:28.990 --> 00:12:30.700
See you in my next radio

