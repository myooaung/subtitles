WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.200
in this video we're gonna talk about.

00:00:03.200 --> 00:00:05.680
Some of the terminology is used in multi threading.

00:00:05.680 --> 00:00:11.020
All the terminology is that I'm going to talk about can be seen in this real world.

00:00:11.020 --> 00:00:11.750
Example.

00:00:11.750 --> 00:00:15.750
Let's talk about mutual exclusion.

00:00:15.750 --> 00:00:22.600
Just as we allowed each one off these customers to have exclusive access to the changing

00:00:22.600 --> 00:00:23.050
room,

00:00:23.050 --> 00:00:28.320
we load exclusive access to synchronize block for our threads.

00:00:28.320 --> 00:00:32.380
This phenomenon is called mutual exclusion.

00:00:32.380 --> 00:00:34.350
It's as simple as that.

00:00:34.350 --> 00:00:40.690
Now let's talk about something called an entry set.

00:00:40.690 --> 00:00:43.200
In this example,

00:00:43.200 --> 00:00:46.450
people kind off entered into this region.

00:00:46.450 --> 00:00:52.590
Now these set off people are called entry set.

00:00:52.590 --> 00:00:55.310
Similarly,

00:00:55.310 --> 00:01:00.760
all the threats which are trying to access the synchronized method are said to be in entry

00:01:00.760 --> 00:01:01.050
set.

00:01:01.050 --> 00:01:02.400
No,

00:01:02.400 --> 00:01:05.350
let's talk about something called Waits It.

00:01:05.350 --> 00:01:09.470
We did talk about inter thread communication,

00:01:09.470 --> 00:01:11.100
and the methods like Wait,

00:01:11.100 --> 00:01:15.030
notifying noted fell to be able to understand what is weight set.

00:01:15.030 --> 00:01:17.730
But just for the completeness off this video,

00:01:17.730 --> 00:01:19.880
I'll try to explain it,

00:01:19.880 --> 00:01:22.550
although it's hard to correlate,

00:01:22.550 --> 00:01:24.570
waits it in this real world example.

00:01:24.570 --> 00:01:26.080
I'll try my best.

00:01:26.080 --> 00:01:32.990
Let's say one person and turned this room by acquiring the look,

00:01:32.990 --> 00:01:38.120
of course and resume that for some reason in the middle,

00:01:38.120 --> 00:01:39.950
off his activity in the training room,

00:01:39.950 --> 00:01:44.910
he decided to sacrifice and let some of the person to get exclusive access to the changing

00:01:44.910 --> 00:01:45.250
room.

00:01:45.250 --> 00:01:51.250
So he will inform the monitor who is sitting and managing everything in here.

00:01:51.250 --> 00:01:58.180
Now the monitor will grab the lock from him and he will send that guy to another room

00:01:58.180 --> 00:02:06.650
called Waits it Now the guy who sacrificed the room for others come and stand in here.

00:02:06.650 --> 00:02:11.560
Now the Lok is made available for other people.

00:02:11.560 --> 00:02:12.950
In the entry set,

00:02:12.950 --> 00:02:18.390
all the people who are reciting in the weight set will come and continue with their

00:02:18.390 --> 00:02:24.620
activity in the changing room at later point off time only after somebody notifies them

00:02:24.620 --> 00:02:26.880
that they can continue with their activity.

00:02:26.880 --> 00:02:28.470
But of course,

00:02:28.470 --> 00:02:29.200
again,

00:02:29.200 --> 00:02:35.890
only after acquiring the key and one at a time you will better understand what I'm saying.

00:02:35.890 --> 00:02:38.340
When we talk about inter trade communication,

00:02:38.340 --> 00:02:40.530
we're gonna talk about it pretty soon.

00:02:40.530 --> 00:02:47.050
In programming terms where a thread called weight method off a particular object,

00:02:47.050 --> 00:02:53.300
the thread will temporarily release the lock off that object and makes it available for

00:02:53.300 --> 00:02:54.100
other threats.

00:02:54.100 --> 00:02:56.130
For now,

00:02:56.130 --> 00:02:58.370
I think this example shirts off ice.

00:02:58.370 --> 00:03:03.510
You'll understand more on rates that when we talk about inter threat communication.

00:03:03.510 --> 00:03:07.950
Now let's talk about monitor.

00:03:07.950 --> 00:03:10.000
In our example,

00:03:10.000 --> 00:03:15.150
we have already talked about a guy who was sitting near the changing room and handling the

00:03:15.150 --> 00:03:17.190
keys to one customer at a time.

00:03:17.190 --> 00:03:20.170
We also named him as Monitor,

00:03:20.170 --> 00:03:22.070
as he is monitoring all that.

00:03:22.070 --> 00:03:23.350
What is going on in here?

00:03:23.350 --> 00:03:28.050
He manages a changing room and reset and weight set.

00:03:28.050 --> 00:03:32.550
It's as simple as that So far in our examples,

00:03:32.550 --> 00:03:37.310
I was mentioning that each object or a class is associated with the loch.

00:03:37.310 --> 00:03:40.630
I have said so for simplicity's sake,

00:03:40.630 --> 00:03:43.420
but the right way to say it is eat off.

00:03:43.420 --> 00:03:47.860
The object of the class has a monitor associated with it,

00:03:47.860 --> 00:03:50.050
and the monitor takes care off,

00:03:50.050 --> 00:03:56.470
giving exclusive waxes to treads on this synchronized section off that object or class.

00:03:56.470 --> 00:03:59.040
So when I said it read,

00:03:59.040 --> 00:04:03.910
acquired the lock actually meant that thread acquired the monitor.

00:04:03.910 --> 00:04:08.550
And when I said the thread entered the synchronized section,

00:04:08.550 --> 00:04:12.130
I meant the thread owned the monitor,

00:04:12.130 --> 00:04:15.350
and when I said released the lock,

00:04:15.350 --> 00:04:19.150
I meant releasing the monitor off that object or class.

00:04:19.150 --> 00:04:20.710
However,

00:04:20.710 --> 00:04:23.250
if you find it convenient to use the term lock,

00:04:23.250 --> 00:04:24.250
you're most welcome.

00:04:24.250 --> 00:04:27.550
That's what typically used for simplicity.

00:04:27.550 --> 00:04:29.810
Hope that makes sense.

00:04:29.810 --> 00:04:31.250
See you in my next video.

