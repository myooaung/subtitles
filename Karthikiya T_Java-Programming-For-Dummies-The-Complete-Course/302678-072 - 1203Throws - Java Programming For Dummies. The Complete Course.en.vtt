WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.580
Okay,

00:00:00.580 --> 00:00:03.030
let's continue in here.

00:00:03.030 --> 00:00:08.010
I'm just calling him after inside another class and in type that mattered.

00:00:08.010 --> 00:00:12.380
I have a line off court that can potentially generate half.

00:00:12.380 --> 00:00:13.600
I'm not for one exception,

00:00:13.600 --> 00:00:16.650
and since it's a checked exception,

00:00:16.650 --> 00:00:19.420
I'm forced to provide the handler,

00:00:19.420 --> 00:00:20.730
and that's exactly what I did.

00:00:20.730 --> 00:00:23.580
I have robbed the lane with Try,

00:00:23.580 --> 00:00:24.450
catch block.

00:00:24.450 --> 00:00:28.850
Now let's say we need to do something with this argument se object.

00:00:28.850 --> 00:00:31.350
Don't example.

00:00:31.350 --> 00:00:38.540
I'm just calling this method that there is a potential that this line can generate a null

00:00:38.540 --> 00:00:39.490
pointer exception.

00:00:39.490 --> 00:00:41.550
So we need to wrap this cord.

00:00:41.550 --> 00:00:47.600
But try catch block and we handled another point or exception.

00:00:47.600 --> 00:00:53.790
Why this has to be exception by default will talk about it in a minute.

00:00:53.790 --> 00:00:57.680
Let's call this not a pointer except under control.

00:00:57.680 --> 00:00:59.170
Space daughter,

00:00:59.170 --> 00:01:00.150
Complete the statement.

00:01:00.150 --> 00:01:05.490
Now this is very tedious job because for each and every line off court right,

00:01:05.490 --> 00:01:08.600
I need to take care off providing the exception handling.

00:01:08.600 --> 00:01:09.460
Luckily,

00:01:09.460 --> 00:01:11.550
in Java we have a shortcut.

00:01:11.550 --> 00:01:19.020
You can have multiple lines off court inside a single try block What?

00:01:19.020 --> 00:01:24.920
That also means is we can have a single catch block that will handle multiple exceptions,

00:01:24.920 --> 00:01:28.750
so I'll do control X and best it in here.

00:01:28.750 --> 00:01:33.690
We need to separate both these exceptions with the pipe character.

00:01:33.690 --> 00:01:40.030
And also we can now get rid off this variable in here because this variable will the

00:01:40.030 --> 00:01:42.450
president heydar off these exceptions?

00:01:42.450 --> 00:01:49.820
And this approach will be apt only when you're providing the same handling for both this

00:01:49.820 --> 00:01:51.020
type of exceptions.

00:01:51.020 --> 00:01:55.400
Now we can get rid off this court or better yet,

00:01:55.400 --> 00:02:00.590
even just have simple exception.

00:02:00.590 --> 00:02:05.050
What did I just do all the exceptions that we're talking about?

00:02:05.050 --> 00:02:06.660
No wonder exceptions,

00:02:06.660 --> 00:02:08.090
while not foreign exceptions,

00:02:08.090 --> 00:02:10.230
are exception in general,

00:02:10.230 --> 00:02:14.750
are essentially class players that were created by somebody somewhere.

00:02:14.750 --> 00:02:19.770
Let me just take you to the hierarchy off all these exceptions.

00:02:19.770 --> 00:02:23.010
First of all,

00:02:23.010 --> 00:02:26.890
let me just quickly credit this website program creek dot com.

00:02:26.890 --> 00:02:29.140
I'm able to find this diagram,

00:02:29.140 --> 00:02:32.710
which I thought will help you understand what I'm trying to say.

00:02:32.710 --> 00:02:38.050
All the blocks in blue are all unchecked exceptions.

00:02:38.050 --> 00:02:44.950
In all the boxes in red that are below this exception class are all checked exceptions,

00:02:44.950 --> 00:02:49.370
an example of which is fine,

00:02:49.370 --> 00:02:55.890
not for an exception which were talked about and an example off The runtime exception would

00:02:55.890 --> 00:02:58.080
be the Null Pointer exception,

00:02:58.080 --> 00:02:59.850
which is an inject exception,

00:02:59.850 --> 00:03:03.790
and we talked about both of them.

00:03:03.790 --> 00:03:06.300
We've also talked about ever,

00:03:06.300 --> 00:03:07.160
for example,

00:03:07.160 --> 00:03:09.250
stack off forever.

00:03:09.250 --> 00:03:13.490
So whenever Jalen comes across with stack overflow error,

00:03:13.490 --> 00:03:18.870
it's essentially creating an object off the class stack old row error,

00:03:18.870 --> 00:03:22.610
which is the subclass off this error class.

00:03:22.610 --> 00:03:27.310
You don't see a stack overflow error class in this diagram,

00:03:27.310 --> 00:03:35.370
but do taken off it and both these classes ever and exception our child classes off trouble

00:03:35.370 --> 00:03:40.150
class will talk about this trouble class in a minute or two.

00:03:40.150 --> 00:03:46.270
So the point that I want to make here is all these exceptions that they're talked about our

00:03:46.270 --> 00:03:49.400
child classes off exception class.

00:03:49.400 --> 00:03:51.180
Now let's go back to record.

00:03:51.180 --> 00:03:52.680
So in here,

00:03:52.680 --> 00:03:56.080
since exception is the parent class,

00:03:56.080 --> 00:04:00.020
off bought find not for an exception and all point exception.

00:04:00.020 --> 00:04:03.650
It took it to have the parent class type in here.

00:04:03.650 --> 00:04:11.190
Sometimes it's better that we let the caller method handle the exception.

00:04:11.190 --> 00:04:12.280
For example,

00:04:12.280 --> 00:04:18.640
let's say we're calling this matter from here for the sake of explanation,

00:04:18.640 --> 00:04:22.090
Let's assume that this job file is not present here.

00:04:22.090 --> 00:04:26.300
All we have is the dark class by abortion off this job All file.

00:04:26.300 --> 00:04:31.980
We have imported that class while and then we're trying to call the method inside it.

00:04:31.980 --> 00:04:34.810
If there is some kind of an exception in this method,

00:04:34.810 --> 00:04:36.500
we are not providing.

00:04:36.500 --> 00:04:39.520
Be handling somebody else is probably in the handling.

00:04:39.520 --> 00:04:43.110
We want toe deal with the exception our own way.

00:04:43.110 --> 00:04:45.560
So what is the solution that Gela provides?

00:04:45.560 --> 00:04:47.650
Is the throw ski war?

00:04:47.650 --> 00:04:52.250
Let's go back here If you get it off the try catch block in here,

00:04:52.250 --> 00:04:56.670
we're going to get a camp altimeter.

00:04:56.670 --> 00:04:58.460
Compiler is yelling at you,

00:04:58.460 --> 00:05:04.340
saying that police provide the handling the way you convince the compiler that I'm not

00:05:04.340 --> 00:05:05.820
going to provide the handling,

00:05:05.820 --> 00:05:11.850
but I'll make sure that whoever is calling my method I'm going to force them to provide the

00:05:11.850 --> 00:05:12.600
handler.

00:05:12.600 --> 00:05:18.550
So the way you can wait is by using the key word dross,

00:05:18.550 --> 00:05:25.100
and then you will pass in the type of exceptions that are expected out of this method when

00:05:25.100 --> 00:05:31.160
it's while not phone exception and the other is no pointer exception.

00:05:31.160 --> 00:05:32.230
By doing this,

00:05:32.230 --> 00:05:37.040
even Java virtual machine will get convinced off the fact that whoever is calling this

00:05:37.040 --> 00:05:42.380
method must and should provide the handling for all the checked exceptions.

00:05:42.380 --> 00:05:45.580
So in here you should get another.

00:05:45.580 --> 00:05:46.530
There we have it.

00:05:46.530 --> 00:05:48.100
Now you have two options.

00:05:48.100 --> 00:05:53.230
Either you deal with the exception by providing the handler with the try catch.

00:05:53.230 --> 00:06:00.910
Or you can just use the same keyword truss to throw it to its calling matter,

00:06:00.910 --> 00:06:01.720
which in this case,

00:06:01.720 --> 00:06:02.850
is the main method.

00:06:02.850 --> 00:06:04.710
But this is a bad practice.

00:06:04.710 --> 00:06:07.960
You need to deal with exceptions as soon as possible.

00:06:07.960 --> 00:06:12.000
So let's handle it with the try,

00:06:12.000 --> 00:06:12.350
catch,

00:06:12.350 --> 00:06:12.890
block,

00:06:12.890 --> 00:06:16.600
the jobs or something.

00:06:16.600 --> 00:06:19.590
We got a couple of catch blocks will talk about it at later.

00:06:19.590 --> 00:06:20.490
One of time.

00:06:20.490 --> 00:06:21.670
No,

00:06:21.670 --> 00:06:26.440
Had it being the case that we didn't have this line off court,

00:06:26.440 --> 00:06:28.310
we can easily get rid off point,

00:06:28.310 --> 00:06:30.440
not phone exception Then,

00:06:30.440 --> 00:06:33.540
since this is not a checked exception,

00:06:33.540 --> 00:06:39.050
there is no need that the calling method needs to provide any handler at all.

00:06:39.050 --> 00:06:41.640
So what is intent off the throws?

00:06:41.640 --> 00:06:42.200
Keyword.

00:06:42.200 --> 00:06:47.670
The truce keyword will not be typically be used with inject exceptions.

00:06:47.670 --> 00:06:52.860
They're used with a their checked exceptions or use a different exceptions.

00:06:52.860 --> 00:06:54.160
In our next week,

00:06:54.160 --> 00:06:57.210
we're gonna talk about user defined exceptions.

00:06:57.210 --> 00:06:58.640
State June

