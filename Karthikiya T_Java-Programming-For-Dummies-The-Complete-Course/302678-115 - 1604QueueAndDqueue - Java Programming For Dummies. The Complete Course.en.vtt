WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.200
in this video,

00:00:01.200 --> 00:00:03.330
we're gonna talk about Q and D.

00:00:03.330 --> 00:00:06.650
Q A Que is like a que in a supermarket.

00:00:06.650 --> 00:00:11.450
The first person to enter the queue would be the first person to go out.

00:00:11.450 --> 00:00:15.340
That means it follows first in first out approach.

00:00:15.340 --> 00:00:18.150
The 1st 1 to come in is the 1st 1 to go out,

00:00:18.150 --> 00:00:21.870
and Q and programming world is no exception.

00:00:21.870 --> 00:00:26.780
So we have a queue interface and its implementation linked list.

00:00:26.780 --> 00:00:31.050
We have a couple of more popular implementations apart from link list,

00:00:31.050 --> 00:00:32.730
but nonetheless,

00:00:32.730 --> 00:00:34.960
link list will always saw the purpose.

00:00:34.960 --> 00:00:39.480
So what we're doing here is we're trying to add elements into the Q.

00:00:39.480 --> 00:00:41.350
It's like adding people into the queue.

00:00:41.350 --> 00:00:48.950
I'm just displaying the current elements in the queue and in here when I do que dot element

00:00:48.950 --> 00:00:48.950
,

00:00:48.950 --> 00:00:54.870
I'm just trying to retrieve the first element that is currently residing in the queue,

00:00:54.870 --> 00:00:57.060
and after that,

00:00:57.060 --> 00:00:59.720
I called this method que dot removed.

00:00:59.720 --> 00:01:01.320
When I call removed,

00:01:01.320 --> 00:01:05.350
it's going to remove the first element in the Q and the scarce.

00:01:05.350 --> 00:01:09.400
It's going to be Apple because that's what entered first.

00:01:09.400 --> 00:01:16.760
So the 1st 1 that enters will be the 1st 1 to go out when we do removed the next time you

00:01:16.760 --> 00:01:18.690
call it a mill again,

00:01:18.690 --> 00:01:20.350
it's going to remove the first element.

00:01:20.350 --> 00:01:23.650
And since Apple has already left,

00:01:23.650 --> 00:01:25.800
it's going to be banana,

00:01:25.800 --> 00:01:27.980
which is going to leave similarly,

00:01:27.980 --> 00:01:31.650
on our third call to remove its going to remove the pineapple.

00:01:31.650 --> 00:01:36.160
The only thing that is left is mango,

00:01:36.160 --> 00:01:38.750
and that's what we're trying to display.

00:01:38.750 --> 00:01:43.760
What's on the program as simple as that.

00:01:43.760 --> 00:01:46.010
Similarly,

00:01:46.010 --> 00:01:47.000
we have a dick.

00:01:47.000 --> 00:01:49.400
You stands for double ended.

00:01:49.400 --> 00:01:49.890
Q.

00:01:49.890 --> 00:01:52.760
It is similar to a Q,

00:01:52.760 --> 00:01:57.880
except it will allow us to add and remove elements from both the ends off the Q.

00:01:57.880 --> 00:01:59.590
In this case,

00:01:59.590 --> 00:02:05.750
I have the Deco interface and again the link list.

00:02:05.750 --> 00:02:10.360
So what this means is linked list implements the interface.

00:02:10.360 --> 00:02:11.660
Dick you as well.

00:02:11.660 --> 00:02:12.620
Ask the Q,

00:02:12.620 --> 00:02:16.560
and it provides implementation for both these interfaces.

00:02:16.560 --> 00:02:18.760
So in here I'm just trying to add some element,

00:02:18.760 --> 00:02:20.950
and in here I'm trying to.

00:02:20.950 --> 00:02:27.080
Here's the method at first to add day element at the first.

00:02:27.080 --> 00:02:33.950
That means before the apple and in here I'm adding at the last after mango.

00:02:33.950 --> 00:02:36.210
So at this point of time,

00:02:36.210 --> 00:02:39.550
if I try to print the current elements in the queue.

00:02:39.550 --> 00:02:41.640
It should start with.

00:02:41.640 --> 00:02:44.660
Add a first element and then apple,

00:02:44.660 --> 00:02:45.060
banana,

00:02:45.060 --> 00:02:45.470
pineapple,

00:02:45.470 --> 00:02:50.500
mango and then the set of elements end to it at a last.

00:02:50.500 --> 00:02:55.450
And this Stedman put print,

00:02:55.450 --> 00:02:58.060
the first element present in the current que.

00:02:58.060 --> 00:03:05.650
We're removing trail mints so it's going to be this element first and then apple banana,

00:03:05.650 --> 00:03:09.420
so we should see rest of the elements,

00:03:09.420 --> 00:03:11.060
starting with pineapple.

00:03:11.060 --> 00:03:12.250
Let's run the program.

00:03:12.250 --> 00:03:15.140
There it is,

00:03:15.140 --> 00:03:16.300
All right,

00:03:16.300 --> 00:03:17.040
that's it.

00:03:17.040 --> 00:03:18.880
On cue and Dick you.

00:03:18.880 --> 00:03:19.690
By the way,

00:03:19.690 --> 00:03:23.360
we haven't yet talked about the definition off a collection.

00:03:23.360 --> 00:03:27.870
All these kind off classes like Link list,

00:03:27.870 --> 00:03:29.220
enter list,

00:03:29.220 --> 00:03:32.230
hash map or harsh set,

00:03:32.230 --> 00:03:33.390
etcetera.

00:03:33.390 --> 00:03:39.440
Everything we talked about would constitute what collection off elements.

00:03:39.440 --> 00:03:43.950
And that's why we call these constructors collections.

00:03:43.950 --> 00:03:45.900
A linked list is a collection.

00:03:45.900 --> 00:03:47.490
An analyst is a collection.

00:03:47.490 --> 00:03:49.350
It has to do the collection.

00:03:49.350 --> 00:03:55.470
Everything is collection off elements except the different terms off how the deal with

00:03:55.470 --> 00:03:56.460
elements.

00:03:56.460 --> 00:03:57.770
Soon,

00:03:57.770 --> 00:03:59.390
maybe after a couple of videos,

00:03:59.390 --> 00:04:01.460
we're gonna take a look at the big picture off,

00:04:01.460 --> 00:04:07.250
how these classes are organized and their parent classes and which class implements what.

00:04:07.250 --> 00:04:11.250
And that way you'll be clear on the overall big picture.

00:04:11.250 --> 00:04:13.750
See you in my next radio

