WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:06.040
Let's talk about methods and constructors a little bit for the sake of explanation.

00:00:06.040 --> 00:00:08.010
I have great another class,

00:00:08.010 --> 00:00:11.360
and that has a court exactly what we need.

00:00:11.360 --> 00:00:18.160
I have two variables and an object off class mats.

00:00:18.160 --> 00:00:20.000
And using that object,

00:00:20.000 --> 00:00:23.460
we'll be able to execute this Method edition,

00:00:23.460 --> 00:00:26.150
which is reciting in the mats class.

00:00:26.150 --> 00:00:31.210
This essentially means we're triggering the behavior of the object now in here we're

00:00:31.210 --> 00:00:33.450
sending to perimeters to this method.

00:00:33.450 --> 00:00:35.430
This is not mandatory.

00:00:35.430 --> 00:00:36.820
It can also get rid off.

00:00:36.820 --> 00:00:40.600
This can also get it off it.

00:00:40.600 --> 00:00:42.200
Let's hear the file,

00:00:42.200 --> 00:00:48.180
whether I guess we have errors here because these two parameters are no longer available

00:00:48.180 --> 00:00:50.350
instead of what I'm going to do.

00:00:50.350 --> 00:00:53.610
Instead of finding the addition off and b,

00:00:53.610 --> 00:00:57.050
I went to find the addition off X and y.

00:00:57.050 --> 00:01:04.040
I want to say that the file Oh,

00:01:04.040 --> 00:01:09.160
this is going to bring an error here because in this matter were not receiving anything,

00:01:09.160 --> 00:01:11.380
so we should not send anything.

00:01:11.380 --> 00:01:13.200
We'll get rid off this.

00:01:13.200 --> 00:01:17.330
I was here the final and let's try to run the program.

00:01:17.330 --> 00:01:20.660
What is the result expected while creating the object?

00:01:20.660 --> 00:01:22.550
We're also calling the constructor in here,

00:01:22.550 --> 00:01:27.850
and we're setting this values just as I explained in my previous video.

00:01:27.850 --> 00:01:31.610
So the result that I'm expecting is 50.

00:01:31.610 --> 00:01:33.580
Let's try to run this program,

00:01:33.580 --> 00:01:34.500
brother.

00:01:34.500 --> 00:01:35.740
I guess we have another hell,

00:01:35.740 --> 00:01:40.410
It's scheduled off this on what is okay.

00:01:40.410 --> 00:01:41.800
We have approaching the method here.

00:01:41.800 --> 00:01:48.900
So it would impact here as well not taking north off this changing anything in here will

00:01:48.900 --> 00:01:49.370
actually,

00:01:49.370 --> 00:01:49.500
um,

00:01:49.500 --> 00:01:51.550
back everywhere else.

00:01:51.550 --> 00:01:52.900
Now,

00:01:52.900 --> 00:01:55.630
we're gonna talk about that problem and its solution.

00:01:55.630 --> 00:01:59.010
Pretty soon when we talk about access pacifiers,

00:01:59.010 --> 00:02:00.880
but for now,

00:02:00.880 --> 00:02:02.350
let's make the change.

00:02:02.350 --> 00:02:06.680
We're on this program.

00:02:06.680 --> 00:02:08.470
Run.

00:02:08.470 --> 00:02:08.790
Fine.

00:02:08.790 --> 00:02:11.650
This will give Wells 50.

00:02:11.650 --> 00:02:12.970
Well,

00:02:12.970 --> 00:02:14.510
hopefully no,

00:02:14.510 --> 00:02:19.390
it will 50.

00:02:19.390 --> 00:02:20.890
Great.

00:02:20.890 --> 00:02:24.390
Let's expand this.

00:02:24.390 --> 00:02:26.420
So we can also have method to be thought.

00:02:26.420 --> 00:02:30.160
Argument at all Methods can also have written time.

00:02:30.160 --> 00:02:31.450
What do I mean by that?

00:02:31.450 --> 00:02:37.200
I don't want to print this here instead what I want to do,

00:02:37.200 --> 00:02:40.050
I would like to return the result.

00:02:40.050 --> 00:02:42.750
And when we return something from this method,

00:02:42.750 --> 00:02:45.570
we also going to say what we're returning.

00:02:45.570 --> 00:02:50.870
Which type of data were sending back to the calling method in this guests.

00:02:50.870 --> 00:02:51.630
It's indigent,

00:02:51.630 --> 00:02:57.390
so I'm going to say and and if we're sending something,

00:02:57.390 --> 00:03:00.690
we also receive a deal here.

00:03:00.690 --> 00:03:03.580
So we're gonna have another variable,

00:03:03.580 --> 00:03:07.390
maybe in see,

00:03:07.390 --> 00:03:11.460
actually going to get it off the A and B because we're not using them.

00:03:11.460 --> 00:03:19.600
So I'm going to say in D equals zero and I'm going to assign value to that.

00:03:19.600 --> 00:03:23.950
A was that value would be whatever I'm returning from this method.

00:03:23.950 --> 00:03:29.350
So we're calling this method object dot addition here and whatever is being returned from

00:03:29.350 --> 00:03:29.750
here,

00:03:29.750 --> 00:03:34.550
we're gonna receive it and I like to print it.

00:03:34.550 --> 00:03:41.850
Stemmed out our dog print Ellen,

00:03:41.850 --> 00:03:48.180
it's friended.

00:03:48.180 --> 00:03:56.200
Let's run the program and you would get the same result They go Now let's take a look at

00:03:56.200 --> 00:03:58.470
this in tax off methods and constructors,

00:03:58.470 --> 00:04:01.920
a method will have the fallings in tax.

00:04:01.920 --> 00:04:06.740
It will have an access modifier which will talk about that later.

00:04:06.740 --> 00:04:07.450
Point of time.

00:04:07.450 --> 00:04:08.850
So ignore For now,

00:04:08.850 --> 00:04:14.050
we're gonna have a written type which I have just looked at.

00:04:14.050 --> 00:04:17.600
Original type can be off any type.

00:04:17.600 --> 00:04:22.930
It could be It could be a primitive later type or a user defined data attack Kataoka bodies

00:04:22.930 --> 00:04:24.080
that defined their A type.

00:04:24.080 --> 00:04:30.640
Pretty soon we're gonna give a name to that method and we can have no or any number off

00:04:30.640 --> 00:04:38.110
millimeters and within this bloc will have some court with optional return statement.

00:04:38.110 --> 00:04:41.030
If the written type is off white,

00:04:41.030 --> 00:04:43.420
then probably we don't need to written anything.

00:04:43.420 --> 00:04:46.790
If this is off type end,

00:04:46.790 --> 00:04:48.210
then probably we should written.

00:04:48.210 --> 00:04:50.420
They integer from this method,

00:04:50.420 --> 00:04:52.230
you know,

00:04:52.230 --> 00:04:53.570
coming to constructors.

00:04:53.570 --> 00:05:00.530
The syntax offer constructor is no different from method except for a constructor.

00:05:00.530 --> 00:05:02.190
There won't be any written by,

00:05:02.190 --> 00:05:05.680
but all it will have access modifier.

00:05:05.680 --> 00:05:14.560
It will have a name and the name supposed to be and should be exactly the same name Astra

00:05:14.560 --> 00:05:16.710
that off the class in which it is reciting,

00:05:16.710 --> 00:05:18.790
including the case,

00:05:18.790 --> 00:05:24.450
there won't be any written statement because we won't have any written type here.

00:05:24.450 --> 00:05:25.200
So,

00:05:25.200 --> 00:05:25.770
essentially,

00:05:25.770 --> 00:05:27.720
this is this index off a constructor.

00:05:27.720 --> 00:05:29.240
Okay,

00:05:29.240 --> 00:05:33.350
Now let's go back to call and talk about one important thing.

00:05:33.350 --> 00:05:36.700
You can think off Matt as a user defined there.

00:05:36.700 --> 00:05:38.480
A type just hasn't.

00:05:38.480 --> 00:05:41.340
It is a primitive their type.

00:05:41.340 --> 00:05:44.250
Matt is a user defined data type.

00:05:44.250 --> 00:05:48.210
Now when we have the statement defined,

00:05:48.210 --> 00:05:52.420
who can literally use this object just as any other data time,

00:05:52.420 --> 00:05:52.930
like in.

00:05:52.930 --> 00:06:00.000
So that also means we can also written an object from this method.

00:06:00.000 --> 00:06:03.100
This could be off any data type,

00:06:03.100 --> 00:06:05.150
including user defined data time.

00:06:05.150 --> 00:06:10.450
The match in here is just a user defined data type,

00:06:10.450 --> 00:06:14.900
and you can use the same way you use a primitive data type.

00:06:14.900 --> 00:06:15.650
I can't.

00:06:15.650 --> 00:06:17.010
Alright,

00:06:17.010 --> 00:06:18.830
This might sound a little confusing.

00:06:18.830 --> 00:06:23.110
I'm going to clarify it in next 23 videos.

00:06:23.110 --> 00:06:25.150
See you in my next radio.

