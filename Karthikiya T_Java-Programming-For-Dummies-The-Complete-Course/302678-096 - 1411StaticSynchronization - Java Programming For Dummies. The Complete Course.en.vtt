WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.480
in this video,

00:00:01.480 --> 00:00:03.850
we're gonna talk about static synchronized.

00:00:03.850 --> 00:00:08.450
I said a log is associated with each one of the object.

00:00:08.450 --> 00:00:10.410
In this example,

00:00:10.410 --> 00:00:14.950
both these threats are referring to the same object.

00:00:14.950 --> 00:00:21.010
So there is no problem off third inter prints because there is only one key associated with

00:00:21.010 --> 00:00:22.270
this object.

00:00:22.270 --> 00:00:25.540
But tread inter friends is still possible.

00:00:25.540 --> 00:00:31.060
If these two threats refer to two different objects as now,

00:00:31.060 --> 00:00:34.050
each one of these threats hold their own object key.

00:00:34.050 --> 00:00:42.180
Let me show you what I mean for this purpose I have again un commented this These lines off

00:00:42.180 --> 00:00:47.250
court for accessing have filed.

00:00:47.250 --> 00:00:51.300
I'm going to create another object.

00:00:51.300 --> 00:00:56.720
Let's call this se object three from thread one.

00:00:56.720 --> 00:01:05.150
I'm using the first object and from threat to I'm reading the file using Object Tree.

00:01:05.150 --> 00:01:09.170
Now both these methods are synchronized.

00:01:09.170 --> 00:01:14.080
Let me prove that to you synchronised and synchronized.

00:01:14.080 --> 00:01:17.470
But now thread indifference will happen.

00:01:17.470 --> 00:01:18.410
Let's run the program,

00:01:18.410 --> 00:01:22.990
Derek Tous.

00:01:22.990 --> 00:01:26.600
Clearly it's a problem.

00:01:26.600 --> 00:01:31.250
So what's the solution?

00:01:31.250 --> 00:01:32.990
Let me show you.

00:01:32.990 --> 00:01:44.450
So what I'm going to do is I'm going to make this map that's static.

00:01:44.450 --> 00:01:49.980
Now,

00:01:49.980 --> 00:01:52.450
by making these methods static,

00:01:52.450 --> 00:01:57.250
I can access his methods using the class name.

00:01:57.250 --> 00:02:13.260
I'm going to use the class Newman Street off the object like So let's on the program.

00:02:13.260 --> 00:02:15.950
And after that I'll explain you what I've just done.

00:02:15.950 --> 00:02:22.110
There is no Trident difference,

00:02:22.110 --> 00:02:25.150
and the result is as expected,

00:02:25.150 --> 00:02:30.070
The reason is just like an object either associated with the loch.

00:02:30.070 --> 00:02:33.150
Even the classes associate it with a lock.

00:02:33.150 --> 00:02:36.420
When we make the method static,

00:02:36.420 --> 00:02:42.820
that method is basically associated with not with an instance off the class,

00:02:42.820 --> 00:02:44.490
but with the class itself.

00:02:44.490 --> 00:02:51.150
So that means when Threatt one enters inside that static synchronized section,

00:02:51.150 --> 00:02:54.660
it's going to acquire the lock off the class,

00:02:54.660 --> 00:03:04.380
and no other threat can get a lock unless the threat t one releases that lock for the class

00:03:04.380 --> 00:03:04.380
.

00:03:04.380 --> 00:03:08.430
So in here we're calling that method read from file,

00:03:08.430 --> 00:03:11.930
using the class name as obviously,

00:03:11.930 --> 00:03:13.350
this is a static method,

00:03:13.350 --> 00:03:17.650
and by then the lock is not released.

00:03:17.650 --> 00:03:25.600
So which will keep this thread in waiting until the lock is released from threat even once

00:03:25.600 --> 00:03:25.970
tracked,

00:03:25.970 --> 00:03:30.880
even releases the log that requires a lock and goes ahead with execution.

00:03:30.880 --> 00:03:35.080
And that's where we're seeing pretty good results.

00:03:35.080 --> 00:03:37.720
All right,

00:03:37.720 --> 00:03:38.980
see you in my next video

