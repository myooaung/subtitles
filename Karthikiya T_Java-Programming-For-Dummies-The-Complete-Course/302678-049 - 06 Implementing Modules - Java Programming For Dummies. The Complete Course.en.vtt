WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.665
Let's take a look at how modules would walk with a quick example.

00:00:04.665 --> 00:00:07.960
Let's create a new Java project.

00:00:07.970 --> 00:00:11.880
By the way, make sure that you have the latest version of Eclipse.

00:00:11.880 --> 00:00:19.164
I'm going to name this project as email or whatever.

00:00:19.164 --> 00:00:23.495
Hit Next. And Finish.

00:00:23.495 --> 00:00:27.259
It has prompted me to enter the name of the module.

00:00:27.259 --> 00:00:30.830
I can enter the name right now or I can do it later.

00:00:30.830 --> 00:00:32.855
So I'll choose the option,

00:00:32.855 --> 00:00:37.130
don't create and will create it later.

00:00:37.130 --> 00:00:39.875
So our project has been created.

00:00:39.875 --> 00:00:43.655
What I am going to do now is I'm going to create a new package

00:00:43.655 --> 00:00:52.325
called com dot lab dot utiles.

00:00:52.325 --> 00:00:57.095
Now this is the package which I don't want to expose to the outside world.

00:00:57.095 --> 00:01:00.455
And then I'm going to create another package,

00:01:00.455 --> 00:01:04.595
com dot email app,

00:01:04.595 --> 00:01:09.390
dot e-mail or whatever.

00:01:09.880 --> 00:01:14.870
And this is something that we would like to expose inside this packet.

00:01:14.870 --> 00:01:16.640
I'm going to create a new class.

00:01:16.640 --> 00:01:19.955
And that would have public static, void, main.

00:01:19.955 --> 00:01:27.480
I'll just simply call it email sender. Hit finish.

00:01:27.610 --> 00:01:30.995
Let me also introduce a quick method,

00:01:30.995 --> 00:01:39.990
public wide send email as just simply going to have a sort statement.

00:01:43.630 --> 00:01:49.080
And we went to have a similar class inside this package as well.

00:01:50.620 --> 00:01:55.890
Maybe I'll call it internal utils.

00:01:56.950 --> 00:02:07.055
Let's change the method name of this to something else.

00:02:07.055 --> 00:02:17.255
Some mutual whatever from utile class.

00:02:17.255 --> 00:02:23.750
Save the file. As of now we don't have the marginal info file.

00:02:23.750 --> 00:02:25.640
So let's create one.

00:02:25.640 --> 00:02:30.860
I'm going to right-click on the project configure.

00:02:30.860 --> 00:02:35.660
And here we had the option to create the module Info.plist file.

00:02:35.660 --> 00:02:38.030
Here we're asked to enter the name.

00:02:38.030 --> 00:02:40.040
And as a good naming convention,

00:02:40.040 --> 00:02:44.105
it better be the same name as the root package,

00:02:44.105 --> 00:02:48.300
which in this case is com dot email app.

00:02:49.300 --> 00:02:55.220
And it has already added those two packages by default.

00:02:55.220 --> 00:02:59.795
Let's get it off the utils package because we don't want to expose it.

00:02:59.795 --> 00:03:05.255
Let's create another Java project.

00:03:05.255 --> 00:03:08.645
Let's call it as Banking.

00:03:08.645 --> 00:03:14.480
And this time I'm going to create the marginal file and

00:03:14.480 --> 00:03:20.550
went to name it as com dot banking app. Hit Create.

00:03:22.300 --> 00:03:27.290
And inside the banking app module file,

00:03:27.290 --> 00:03:30.335
I'm going to specify the margins that I'm requiring.

00:03:30.335 --> 00:03:37.590
So I would say requires com dot Emulab.

00:03:38.200 --> 00:03:41.855
Okay, it has given us an adder.

00:03:41.855 --> 00:03:43.880
Let's quickly fix it.

00:03:43.880 --> 00:03:49.620
We have to have this project and the build path.

00:03:51.430 --> 00:03:56.630
So you can right-click on the project, go to Properties.

00:03:56.630 --> 00:04:02.285
Choose Java, build, choose marginal path, and click Add.

00:04:02.285 --> 00:04:06.245
You'd be able to find the email app module there.

00:04:06.245 --> 00:04:09.930
But Eclipse has already done that for us.

00:04:11.710 --> 00:04:15.080
Let's create a new package.

00:04:15.080 --> 00:04:22.170
That com dot banking app.

00:04:23.140 --> 00:04:29.225
Hit Finish. And I'm going to create a new class file.

00:04:29.225 --> 00:04:36.780
I'll call it as banking app or whatever. It doesn't matter.

00:04:37.240 --> 00:04:41.880
Let's copy the public static void main method.

00:04:45.340 --> 00:04:50.180
And inside here, I tried to access the email sender,

00:04:50.180 --> 00:04:54.780
which was exposed by the email app.

00:04:54.970 --> 00:04:59.975
Center equals new email sender.

00:04:59.975 --> 00:05:02.510
How do control shift TO,

00:05:02.510 --> 00:05:03.905
to import that class?

00:05:03.905 --> 00:05:06.889
And we don't have any such,

00:05:06.889 --> 00:05:10.470
we can call it public methods.

00:05:10.900 --> 00:05:17.770
Like for example, we have send email for instance.

00:05:17.770 --> 00:05:22.220
But if you try to access internal utils,

00:05:23.160 --> 00:05:26.155
you cannot do so.

00:05:26.155 --> 00:05:32.150
Because wouldn't export it

00:05:35.430 --> 00:05:39.940
internally to new internal auditors.

00:05:39.940 --> 00:05:43.404
I'll do controllership o.

00:05:43.404 --> 00:05:49.360
And we have an error that says the type com

00:05:49.360 --> 00:05:55.090
dot HTML app.use adults is not accessible.

00:05:55.090 --> 00:06:04.400
So that explains we cannot use it. Save the file.

00:06:04.400 --> 00:06:11.810
And let's launch an application as the Java application.

00:06:11.810 --> 00:06:14.360
And we're able to see the message.

00:06:14.360 --> 00:06:16.890
But the point here is,

00:06:16.990 --> 00:06:26.630
we're able to export a package and all the classes in it are visible to other modules.

00:06:26.630 --> 00:06:32.520
Whereas the packages that we didn't export are not accessible.
