WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.430
in this video,

00:00:01.430 --> 00:00:05.750
we're gonna talk about bonded type methods and bounded type classes.

00:00:05.750 --> 00:00:07.040
But before that,

00:00:07.040 --> 00:00:12.290
I guess it's what mentioning that we had already used gender classes in our first example.

00:00:12.290 --> 00:00:13.530
Remember,

00:00:13.530 --> 00:00:19.560
we talked about the other list in that we had sent string as a type argument,

00:00:19.560 --> 00:00:24.690
which means we cannot add any other element that is not off type string.

00:00:24.690 --> 00:00:30.180
So we cannot add something like integer or something that will give a combat a mirror.

00:00:30.180 --> 00:00:33.610
And when reading the value,

00:00:33.610 --> 00:00:38.720
we don't have to explicitly type casted because job old rinos the kind of elements were

00:00:38.720 --> 00:00:39.850
storing in this case,

00:00:39.850 --> 00:00:40.450
it's string.

00:00:40.450 --> 00:00:43.330
Hold it going back.

00:00:43.330 --> 00:00:45.710
Let's talk about the bonded type methods.

00:00:45.710 --> 00:00:50.890
Sometimes you might want to restrict the kind of argument that the matter will receive.

00:00:50.890 --> 00:00:51.960
For example,

00:00:51.960 --> 00:00:55.740
in here were performing some kind off a mathematical operation.

00:00:55.740 --> 00:01:02.330
We're converting whatever is being sent as an argument to an inter value when we're trying

00:01:02.330 --> 00:01:04.160
to multiplied by 100.

00:01:04.160 --> 00:01:05.350
So in this case,

00:01:05.350 --> 00:01:09.810
we don't want string are a character to come as an argument.

00:01:09.810 --> 00:01:14.080
Whatever the type of data is going to be entering inside this method,

00:01:14.080 --> 00:01:18.780
it has to be a child class off the number of plants.

00:01:18.780 --> 00:01:21.000
If you remember,

00:01:21.000 --> 00:01:28.750
I said all over rapper classes like integer double by florid short Long.

00:01:28.750 --> 00:01:32.380
They're all child classes off the number class,

00:01:32.380 --> 00:01:37.540
and they basically deal with numbers and things were doing a mathematical operation here.

00:01:37.540 --> 00:01:43.150
We want to accept only the objects off classes that are child class off the number class,

00:01:43.150 --> 00:01:48.150
and the way we specify that is like Sil.

00:01:48.150 --> 00:01:50.510
Earlier we had this.

00:01:50.510 --> 00:01:51.270
But now,

00:01:51.270 --> 00:01:52.710
if I say extends number,

00:01:52.710 --> 00:01:59.870
this method is going to accept the objects off the child class off the number class.

00:01:59.870 --> 00:02:06.850
So in here have created multiple objects belong to different types.

00:02:06.850 --> 00:02:09.660
When I passed in danger,

00:02:09.660 --> 00:02:11.970
double our bite,

00:02:11.970 --> 00:02:12.960
there's no problem.

00:02:12.960 --> 00:02:15.970
But when you try to pass string,

00:02:15.970 --> 00:02:18.050
we're going to get a compile time error.

00:02:18.050 --> 00:02:21.850
It's under that.

00:02:21.850 --> 00:02:23.100
Similarly,

00:02:23.100 --> 00:02:24.700
when you tried to pass a character,

00:02:24.700 --> 00:02:26.970
we're going to have a combat a mirror.

00:02:26.970 --> 00:02:31.550
Same is the case with bone type classes.

00:02:31.550 --> 00:02:37.180
Let's do this class is meant for dealing with integers or numbers.

00:02:37.180 --> 00:02:44.010
Let's say now we don't want to have any type perimeter that is not a number.

00:02:44.010 --> 00:02:51.320
So we put that restriction an exact same fashion and By doing so,

00:02:51.320 --> 00:03:02.280
we're no longer permitted to send string as a type argument that will give a combat a

00:03:02.280 --> 00:03:02.710
mirror.

00:03:02.710 --> 00:03:05.150
Hope that makes sense.

00:03:05.150 --> 00:03:06.750
See you in my next video.

