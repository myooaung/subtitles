WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.810
in this video,

00:00:00.810 --> 00:00:04.450
we're gonna talk about the switch case or the switch statement.

00:00:04.450 --> 00:00:07.880
It has the fallings in tax.

00:00:07.880 --> 00:00:11.470
We're gonna have a variable and based around the variable,

00:00:11.470 --> 00:00:14.650
we're gonna execute a particular broke off statements.

00:00:14.650 --> 00:00:17.390
If the very bold say is it C one,

00:00:17.390 --> 00:00:23.610
then we're gonna execute the case C one and will execute all the statements that come

00:00:23.610 --> 00:00:24.650
within this block.

00:00:24.650 --> 00:00:29.550
We have a break statement that acts like a D limiter for each case.

00:00:29.550 --> 00:00:30.990
Similarly,

00:00:30.990 --> 00:00:36.390
we can have any number off care statements and finally will have default.

00:00:36.390 --> 00:00:38.170
If none of the case matches,

00:00:38.170 --> 00:00:44.550
then we're gonna execute this set off statements that are part off this default block.

00:00:44.550 --> 00:00:49.390
You will better understand this when we look at the court.

00:00:49.390 --> 00:00:50.550
So here's the court.

00:00:50.550 --> 00:00:56.150
What we're doing here is well from the user to enter a value.

00:00:56.150 --> 00:00:57.440
In this case,

00:00:57.440 --> 00:00:58.890
it's an integer value.

00:00:58.890 --> 00:01:01.150
And depending on what he enders,

00:01:01.150 --> 00:01:03.220
we're gonna choose the operation to performed.

00:01:03.220 --> 00:01:09.650
We have couple of variables declared here and initialized like the user interests one.

00:01:09.650 --> 00:01:16.280
Then we're gonna find this some off these two integers IFPI interests Option two.

00:01:16.280 --> 00:01:22.580
Then we're going to do this operation if we enter Astri.

00:01:22.580 --> 00:01:26.020
Then we're gonna want to play for these very parts.

00:01:26.020 --> 00:01:30.370
If the user enters anything other than the given options,

00:01:30.370 --> 00:01:32.280
which are in this case,

00:01:32.280 --> 00:01:37.280
123 then we're gonna go ahead and display message that says invalid entry.

00:01:37.280 --> 00:01:40.220
So let's see how this program works.

00:01:40.220 --> 00:01:48.630
I'm going to give the option off to enter to,

00:01:48.630 --> 00:01:50.590
to find out a minus bi.

00:01:50.590 --> 00:01:51.940
So?

00:01:51.940 --> 00:01:56.450
So I am expecting the result has five.

00:01:56.450 --> 00:01:57.790
Well,

00:01:57.790 --> 00:02:06.150
it let's run it once more and given option that is not listed here.

00:02:06.150 --> 00:02:10.950
Let's I want Inter seven invalid entry.

00:02:10.950 --> 00:02:19.350
Great do know Do they can know that we're only supposed to enter into Joe Value here.

00:02:19.350 --> 00:02:20.780
In this case,

00:02:20.780 --> 00:02:26.500
let's on the program once again and see what will happen if I enter something other than

00:02:26.500 --> 00:02:26.930
indigent.

00:02:26.930 --> 00:02:33.270
Let her enter A so that will result in an exception,

00:02:33.270 --> 00:02:37.330
will understand about these errors exceptions at later chapters,

00:02:37.330 --> 00:02:38.400
But for now,

00:02:38.400 --> 00:02:42.300
you're not supposed to enter anything other than integer because that's what we have here,

00:02:42.300 --> 00:02:47.770
and it doesn't necessarily have to be an integer.

00:02:47.770 --> 00:02:50.920
It can also be bite short car.

00:02:50.920 --> 00:02:53.310
These are all the supported,

00:02:53.310 --> 00:02:59.260
primitive later types for such case and This doesn't have to be 12 and three.

00:02:59.260 --> 00:03:04.610
This can also be like 11 22 or maybe 34.

00:03:04.610 --> 00:03:06.980
The program still works as expected,

00:03:06.980 --> 00:03:11.250
and one key thing to note here is Let's let's undo it.

00:03:11.250 --> 00:03:18.660
And one key thing to note here is we have a break statement and it's mandatory that you d

00:03:18.660 --> 00:03:22.570
limit each and every one of these cases with a break statement.

00:03:22.570 --> 00:03:24.670
It's very whiter in.

00:03:24.670 --> 00:03:31.170
Guess if you'd remove this break statement than the control just keeps throwing down the

00:03:31.170 --> 00:03:31.860
lines.

00:03:31.860 --> 00:03:34.120
Let me show you what I mean.

00:03:34.120 --> 00:03:34.940
Let's remove.

00:03:34.940 --> 00:03:36.980
Let's get rid off this break statement.

00:03:36.980 --> 00:03:40.950
Let's have the program and on the program.

00:03:40.950 --> 00:03:47.960
And once again,

00:03:47.960 --> 00:03:51.450
I get the option to the expected result is five.

00:03:51.450 --> 00:03:53.250
But see what will happen.

00:03:53.250 --> 00:03:56.500
I'm sorry.

00:03:56.500 --> 00:04:05.690
I'm supposed to give option two the tender,

00:04:05.690 --> 00:04:06.030
too.

00:04:06.030 --> 00:04:08.940
We got the result as five.

00:04:08.940 --> 00:04:10.550
But in addition to that,

00:04:10.550 --> 00:04:14.850
even these two statements got executed.

00:04:14.850 --> 00:04:20.190
So we got we got 50 as well and the invalid entry,

00:04:20.190 --> 00:04:21.860
which we're not expecting.

00:04:21.860 --> 00:04:27.350
Let's undo and share the program.

00:04:27.350 --> 00:04:32.100
You can also use it Felts clothes instead off switch case,

00:04:32.100 --> 00:04:34.480
but you have to decide which one is best.

00:04:34.480 --> 00:04:40.720
Which one looks more readable and which one performs better coming to performance?

00:04:40.720 --> 00:04:42.080
Let me explain you something.

00:04:42.080 --> 00:04:43.850
Let me pull the white board.

00:04:43.850 --> 00:04:52.660
Let's say we need to write the program where the program takes in an input from the user

00:04:52.660 --> 00:05:00.290
and the user has to enter a value between 1 to 12 depending on what he enters.

00:05:00.290 --> 00:05:02.460
Gonna print the corresponding month.

00:05:02.460 --> 00:05:04.300
Let's say the user enters one.

00:05:04.300 --> 00:05:06.550
Then we're gonna display January.

00:05:06.550 --> 00:05:10.950
If the user interface 11 then we're gonna display November.

00:05:10.950 --> 00:05:15.550
Now let's see how we can accomplish this using a felt's.

00:05:15.550 --> 00:05:17.440
You know,

00:05:17.440 --> 00:05:22.350
see if entered value equals equals one,

00:05:22.350 --> 00:05:26.100
then print January.

00:05:26.100 --> 00:05:27.590
If,

00:05:27.590 --> 00:05:29.970
while you're equals equals two,

00:05:29.970 --> 00:05:32.650
then print February.

00:05:32.650 --> 00:05:40.950
And we keep writing this for all the conditions and in or else block,

00:05:40.950 --> 00:05:44.350
we're gonna say invalid entry.

00:05:44.350 --> 00:05:49.350
That means user hasn't or something that is beyond the number 12.

00:05:49.350 --> 00:06:00.960
No coming to switch when I say switch month and we're gonna have a case one to print

00:06:00.960 --> 00:06:04.660
January brick and case,

00:06:04.660 --> 00:06:05.490
too,

00:06:05.490 --> 00:06:11.830
to print February break so on and so forth.

00:06:11.830 --> 00:06:13.980
And we're gonna have one last case,

00:06:13.980 --> 00:06:24.830
which is default that says invalid entry now during the run time.

00:06:24.830 --> 00:06:25.950
That means when we run,

00:06:25.950 --> 00:06:30.850
the program lets a user entered the value to our in,

00:06:30.850 --> 00:06:32.070
gets off a felts.

00:06:32.070 --> 00:06:35.100
It has to go from the line one.

00:06:35.100 --> 00:06:39.950
It has to check to see if the user enter Value is equals to one.

00:06:39.950 --> 00:06:40.960
No,

00:06:40.960 --> 00:06:45.850
his attic wants you to know it keeps going until the condition is met.

00:06:45.850 --> 00:06:52.140
So the control has to go through all the conditions and check to see if any off those

00:06:52.140 --> 00:06:54.050
conditions is met.

00:06:54.050 --> 00:07:00.990
Now coming to switch is just going to Dr Jump onto the exact case which needs to be

00:07:00.990 --> 00:07:01.580
executed.

00:07:01.580 --> 00:07:04.700
So we're saving quite a lot of time here.

00:07:04.700 --> 00:07:10.180
So there is a performance benefit when using switch instead off it felts No,

00:07:10.180 --> 00:07:11.890
let's go back to our workbench.

00:07:11.890 --> 00:07:15.590
Even in our previous example,

00:07:15.590 --> 00:07:18.420
let's go back to the continue statement example.

00:07:18.420 --> 00:07:22.250
So instead of writing the court in this manner,

00:07:22.250 --> 00:07:26.370
we could just say we're print well,

00:07:26.370 --> 00:07:26.630
you,

00:07:26.630 --> 00:07:31.500
in case if the number is divisible by 10.

00:07:31.500 --> 00:07:36.180
So this word essentially give us the same results that's running.

00:07:36.180 --> 00:07:39.280
There you go.

00:07:39.280 --> 00:07:44.620
But it's you who have to take the call on which one looks much better and which one makes

00:07:44.620 --> 00:07:45.360
more sense.

00:07:45.360 --> 00:07:53.180
So that summarizes the switch statement and the control statements chapter.

00:07:53.180 --> 00:07:55.470
See you in my next video

