WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.840
in this video,

00:00:01.840 --> 00:00:05.340
I'm going to talk about method and constructor overloading.

00:00:05.340 --> 00:00:10.280
You might want to import this project classes and objects extended,

00:00:10.280 --> 00:00:12.390
and then and then that.

00:00:12.390 --> 00:00:14.810
Open up the file or loading door JAMA.

00:00:14.810 --> 00:00:17.850
It's expend this.

00:00:17.850 --> 00:00:24.460
Sometimes he want Tokyo two mothers the same name,

00:00:24.460 --> 00:00:26.850
just as here.

00:00:26.850 --> 00:00:31.050
But in that gifts they should very in terms off the nature,

00:00:31.050 --> 00:00:34.500
these two methods in here,

00:00:34.500 --> 00:00:37.170
or having the same name,

00:00:37.170 --> 00:00:38.480
including the case,

00:00:38.480 --> 00:00:41.680
but the very in terms off signature.

00:00:41.680 --> 00:00:43.650
When it's a signature,

00:00:43.650 --> 00:00:49.570
it can very build on the number of parameters that we sent in the scares.

00:00:49.570 --> 00:00:50.170
It's too,

00:00:50.170 --> 00:00:52.590
and in the scarce it's three.

00:00:52.590 --> 00:00:56.960
Or it can also vary in terms off the data.

00:00:56.960 --> 00:00:58.850
Type off this para meters.

00:00:58.850 --> 00:01:03.020
Now when we call this matter,

00:01:03.020 --> 00:01:05.150
depending on number of parameters,

00:01:05.150 --> 00:01:09.370
the method would be called or depending on the type of data as well.

00:01:09.370 --> 00:01:12.930
I've created an object off match glass,

00:01:12.930 --> 00:01:18.380
and then I'm calling object dot addition and with two perimeters.

00:01:18.380 --> 00:01:20.280
Now,

00:01:20.280 --> 00:01:22.550
any guests on which method will get in walked.

00:01:22.550 --> 00:01:29.550
It should be this since we're taking two pyramid us,

00:01:29.550 --> 00:01:30.230
by the way,

00:01:30.230 --> 00:01:33.430
Why don't want tohave too much?

00:01:33.430 --> 00:01:34.890
That with same name.

00:01:34.890 --> 00:01:40.010
That's because these two methods are essentially doing the same.

00:01:40.010 --> 00:01:45.120
They're trying to find this some off all the perimeters that you send for the sake of

00:01:45.120 --> 00:01:45.920
readability.

00:01:45.920 --> 00:01:48.850
You might want to give the same name for both these methods.

00:01:48.850 --> 00:01:50.910
Okay,

00:01:50.910 --> 00:01:51.950
no going back.

00:01:51.950 --> 00:01:55.680
If we have another perimeter here,

00:01:55.680 --> 00:02:01.350
just 60 of this statement will call this method,

00:02:01.350 --> 00:02:06.810
and this statement will call this method.

00:02:06.810 --> 00:02:08.650
If you try to run the program,

00:02:08.650 --> 00:02:12.490
he would get 30 as the result of this instruction,

00:02:12.490 --> 00:02:19.550
and you would get 110 has the result of this construction.

00:02:19.550 --> 00:02:20.470
Well,

00:02:20.470 --> 00:02:22.040
let's try to add another matter.

00:02:22.040 --> 00:02:24.950
Let me copy this code.

00:02:24.950 --> 00:02:33.470
It's method and changes to double.

00:02:33.470 --> 00:02:40.150
We will have a compel ish in error here because we're trying to find the some off a double

00:02:40.150 --> 00:02:42.740
variable and an interview available.

00:02:42.740 --> 00:02:47.120
Double takes more memory than integer,

00:02:47.120 --> 00:02:52.000
so obviously the result cannot be off type end,

00:02:52.000 --> 00:02:57.960
so the ricin value that we send must be double as well.

00:02:57.960 --> 00:03:02.210
Let's do all ship deaf to give proper indentation.

00:03:02.210 --> 00:03:06.350
Now we can change.

00:03:06.350 --> 00:03:08.620
Let's add another strip,

00:03:08.620 --> 00:03:08.850
man.

00:03:08.850 --> 00:03:20.350
We can say $10.1 or $10 3 Whatever this instruction would result in calling this method.

00:03:20.350 --> 00:03:24.820
All of these two methods are having the same name,

00:03:24.820 --> 00:03:28.950
including the case as well and same number of parameters,

00:03:28.950 --> 00:03:33.550
their differing in the signature in terms off the data type.

00:03:33.550 --> 00:03:36.500
If I get rid of this matter,

00:03:36.500 --> 00:03:37.850
do we see errors?

00:03:37.850 --> 00:03:40.770
We don't let's of the file.

00:03:40.770 --> 00:03:43.550
Why do we not see Doubters?

00:03:43.550 --> 00:03:51.770
Because presenting couple of perimeters and this matter will certainly suffice it.

00:03:51.770 --> 00:03:56.750
The Pyramid of 10 is off type end while sending this perimeter.

00:03:56.750 --> 00:03:58.850
But when receiving it,

00:03:58.850 --> 00:04:02.940
we have type casted it into a double value,

00:04:02.940 --> 00:04:06.870
and it's not possible the other way.

00:04:06.870 --> 00:04:07.560
For example,

00:04:07.560 --> 00:04:09.550
if I'm sending a double value from here,

00:04:09.550 --> 00:04:12.880
and if I'm expecting an interview available,

00:04:12.880 --> 00:04:14.850
then that's not possible.

00:04:14.850 --> 00:04:20.420
If you have gone through my video on typecasting,

00:04:20.420 --> 00:04:22.110
you would better understand this.

00:04:22.110 --> 00:04:26.350
So this works like charm.

00:04:26.350 --> 00:04:30.950
That's undue.

00:04:30.950 --> 00:04:34.120
Save the file now.

00:04:34.120 --> 00:04:37.550
What if I change this time to double,

00:04:37.550 --> 00:04:42.030
we do get okay,

00:04:42.030 --> 00:04:43.210
lets train the written type.

00:04:43.210 --> 00:04:51.540
Here we do get an error where here because there is an ambiguity.

00:04:51.540 --> 00:04:53.850
We're calling addition,

00:04:53.850 --> 00:04:57.850
and we're sending couple off integers now compare.

00:04:57.850 --> 00:05:01.680
It is not able to figure out which mattered to be invoked.

00:05:01.680 --> 00:05:03.760
Should it be this Our deaths?

00:05:03.760 --> 00:05:08.680
This ambiguity causes the compassion error.

00:05:08.680 --> 00:05:12.660
It's under those changes.

00:05:12.660 --> 00:05:27.910
Let's run the program great.

00:05:27.910 --> 00:05:37.400
The result is as expected Now let's take a look at constructor or loading,

00:05:37.400 --> 00:05:40.650
same as methods.

00:05:40.650 --> 00:05:43.360
We might want to have constructors with the same name,

00:05:43.360 --> 00:05:44.750
but with different in nature.

00:05:44.750 --> 00:05:50.850
I don't have any constructor in this class.

00:05:50.850 --> 00:05:53.770
That means a default constructor is created.

00:05:53.770 --> 00:05:55.180
However,

00:05:55.180 --> 00:05:56.720
I can create my own constructor,

00:05:56.720 --> 00:06:04.940
That's and X and why.

00:06:04.940 --> 00:06:17.100
And let's have a couple of variables in here and eggs and why.

00:06:17.100 --> 00:06:33.510
And I said this dot exe equals x this dot bi equals why we will certainly have a narrow

00:06:33.510 --> 00:06:36.550
here because when we write the constructor on her own,

00:06:36.550 --> 00:06:41.350
there wouldn't be any default constructor generator while creating this object.

00:06:41.350 --> 00:06:42.990
We're not sending any para meters.

00:06:42.990 --> 00:06:49.170
So either we have to send couple of perimeters here or we have to write a constructor

00:06:49.170 --> 00:06:50.800
without any para meters.

00:06:50.800 --> 00:06:54.770
Like so.

00:06:54.770 --> 00:07:05.390
And in this I just don't want to do anything at all.

00:07:05.390 --> 00:07:15.380
So I could prayer another object with Barham eaters it and and 40 I need to give a

00:07:15.380 --> 00:07:24.200
different name subject to this instruction will call the No Parametric Constructor.

00:07:24.200 --> 00:07:29.540
Then this will call the constructor with a couple of parameters which are off typing.

00:07:29.540 --> 00:07:33.180
Even in case off constructors.

00:07:33.180 --> 00:07:38.140
The signature matters the type of variables and the number of variables that you're going

00:07:38.140 --> 00:07:40.550
to have as part of the constructor.

00:07:40.550 --> 00:07:42.100
Now,

00:07:42.100 --> 00:07:46.460
sometimes you want to call this constructor from another constructor,

00:07:46.460 --> 00:07:47.870
for example,

00:07:47.870 --> 00:07:51.580
this particular constructor I don't want to set the value off X.

00:07:51.580 --> 00:07:54.330
I just want to take the value off.

00:07:54.330 --> 00:07:54.850
Why?

00:07:54.850 --> 00:07:59.400
So we get rid off it here as well.

00:07:59.400 --> 00:08:01.050
So have the file.

00:08:01.050 --> 00:08:03.010
Here we have a problem,

00:08:03.010 --> 00:08:03.550
right?

00:08:03.550 --> 00:08:06.650
Because we're not initialized in this variable X.

00:08:06.650 --> 00:08:08.370
How do we handle that?

00:08:08.370 --> 00:08:13.350
We call this empty constructor from here using the keyword called this.

00:08:13.350 --> 00:08:17.530
And as we've talked in our early radios,

00:08:17.530 --> 00:08:21.310
that this means the current object and do taken note.

00:08:21.310 --> 00:08:28.440
The statement in here has to be the full statement that silo control X and best it over

00:08:28.440 --> 00:08:31.350
here that's going to give me compelled him ever.

00:08:31.350 --> 00:08:35.420
That's under not doing so.

00:08:35.420 --> 00:08:37.900
We're sending our own value to why,

00:08:37.900 --> 00:08:43.180
and we're leaving the X to have the default value.

00:08:43.180 --> 00:08:45.790
I hope that makes sense.

