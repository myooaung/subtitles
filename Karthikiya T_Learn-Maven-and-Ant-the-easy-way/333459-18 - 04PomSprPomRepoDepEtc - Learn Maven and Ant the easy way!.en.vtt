WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.340
in this video.

00:00:01.340 --> 00:00:04.020
We're going to take a look at what's happening in this form,

00:00:04.020 --> 00:00:08.230
that XML that got auto generated after we created this maven project.

00:00:08.230 --> 00:00:13.150
So we're basically going to talk about all these basic tags that are available in here.

00:00:13.150 --> 00:00:17.950
But primarily we're going to focus on this so called dependency.

00:00:17.950 --> 00:00:19.750
And in the process,

00:00:19.750 --> 00:00:22.190
we're also going to talk about depository,

00:00:22.190 --> 00:00:25.850
local depository and a few of the stuff as well.

00:00:25.850 --> 00:00:26.790
Basically,

00:00:26.790 --> 00:00:30.150
we're going to get all your questions answered in this video.

00:00:30.150 --> 00:00:33.390
So let's get started with before that.

00:00:33.390 --> 00:00:35.830
Let's get it off all these panels in here,

00:00:35.830 --> 00:00:37.650
which are taking a plot off space.

00:00:37.650 --> 00:00:38.790
I mean,

00:00:38.790 --> 00:00:42.850
both is down so that we get a better view now.

00:00:42.850 --> 00:00:46.980
So here are the coordinates that we had provided while creating the project.

00:00:46.980 --> 00:00:49.950
You know the significance off these in a while,

00:00:49.950 --> 00:00:55.830
but purpose off this coordinates is to uniquely identify your project amongst all the

00:00:55.830 --> 00:00:57.750
projects available in the world.

00:00:57.750 --> 00:01:00.050
And then we have the stag name.

00:01:00.050 --> 00:01:03.050
Very would provide the name of the project.

00:01:03.050 --> 00:01:03.730
Now,

00:01:03.730 --> 00:01:05.470
this is similar to artifact I d.

00:01:05.470 --> 00:01:06.910
But for artifact,

00:01:06.910 --> 00:01:11.500
I did there certain naming convention that you need to follow that are applicable to the

00:01:11.500 --> 00:01:12.710
artifact names.

00:01:12.710 --> 00:01:16.720
But here you have the freedom to use any name off your choice.

00:01:16.720 --> 00:01:18.750
You can give a more descriptive name,

00:01:18.750 --> 00:01:19.940
and similarly,

00:01:19.940 --> 00:01:21.680
we also got You are.

00:01:21.680 --> 00:01:25.280
And that would point to the projects you are in our kids.

00:01:25.280 --> 00:01:29.890
This should be something like company dot com.

00:01:29.890 --> 00:01:31.400
And if you have is a project,

00:01:31.400 --> 00:01:37.360
then you would say sub project or whatever the significance off this tag would be like.

00:01:37.360 --> 00:01:38.130
He can use this,

00:01:38.130 --> 00:01:38.860
your lacrosse,

00:01:38.860 --> 00:01:40.490
your XML,

00:01:40.490 --> 00:01:42.750
and the Ural would remain consistent.

00:01:42.750 --> 00:01:44.850
And if you want to change the Ural,

00:01:44.850 --> 00:01:49.110
then you can just change in one location and it would get reflected across the document.

00:01:49.110 --> 00:01:50.080
And also,

00:01:50.080 --> 00:01:51.690
these perimeters will come in handy,

00:01:51.690 --> 00:01:56.540
especially if you distribute your jar file to somebody else so that when they try to take a

00:01:56.540 --> 00:01:58.370
look at the description off your project,

00:01:58.370 --> 00:02:00.380
then they get to know the project.

00:02:00.380 --> 00:02:01.900
You are the project name,

00:02:01.900 --> 00:02:02.550
etcetera.

00:02:02.550 --> 00:02:05.260
We can get it off it if you wish.

00:02:05.260 --> 00:02:06.400
Not a problem at all.

00:02:06.400 --> 00:02:08.900
Here we have the properties.

00:02:08.900 --> 00:02:11.950
The properties in from the maximal or maven,

00:02:11.950 --> 00:02:13.230
is similar to properties.

00:02:13.230 --> 00:02:14.180
In our build,

00:02:14.180 --> 00:02:14.850
our XML,

00:02:14.850 --> 00:02:16.200
we're going to talk about them.

00:02:16.200 --> 00:02:17.500
Incoming videos anyway.

00:02:17.500 --> 00:02:19.350
So let's skip it for now.

00:02:19.350 --> 00:02:23.640
And now we have this important thing dependency,

00:02:23.640 --> 00:02:25.090
or is dependency?

00:02:25.090 --> 00:02:25.920
Basically,

00:02:25.920 --> 00:02:31.180
if you talk about the definition of dependency than we can say that the set off libraries

00:02:31.180 --> 00:02:34.560
are jar files that our project is dependent on,

00:02:34.560 --> 00:02:35.860
for example,

00:02:35.860 --> 00:02:38.330
to go here in our and project,

00:02:38.330 --> 00:02:42.720
our project will not get compiled unless we have the Soviet FBI,

00:02:42.720 --> 00:02:43.210
John,

00:02:43.210 --> 00:02:47.390
because we have a soul it in our project and that requires that library.

00:02:47.390 --> 00:02:52.750
So we can say that our project is now dependent on that solid FBI dot jar.

00:02:52.750 --> 00:02:53.530
So,

00:02:53.530 --> 00:02:53.770
you know,

00:02:53.770 --> 00:02:58.390
in case off and what we had to do is we had to manually download that jar file,

00:02:58.390 --> 00:03:04.710
put it in some location and then in or build or XML would have to point to that location,

00:03:04.710 --> 00:03:10.300
make it part of property and then use the property as part for tasks for Java sea to

00:03:10.300 --> 00:03:11.500
compile etcetera.

00:03:11.500 --> 00:03:13.190
But believe it or not,

00:03:13.190 --> 00:03:21.060
to accomplish the same task in MEV in all you have to do is to add a dependence attack like

00:03:21.060 --> 00:03:21.590
this.

00:03:21.590 --> 00:03:28.000
So what we have here is a J and a dependency tag just as you're seeing here.

00:03:28.000 --> 00:03:31.250
And we have provided the coordinates off the J unit,

00:03:31.250 --> 00:03:37.550
and these set off tanks has actually made the Jena jar file available in our project.

00:03:37.550 --> 00:03:38.800
If you expand this,

00:03:38.800 --> 00:03:41.850
make independence is and you have the jar file in here,

00:03:41.850 --> 00:03:45.130
and we also have a sample test file created.

00:03:45.130 --> 00:03:51.050
That is part of the archetype are the Templar that we had chosen to create this project.

00:03:51.050 --> 00:03:58.850
And so now our project is dependent on this Janet jar file to run all these tests So we can

00:03:58.850 --> 00:04:01.250
say that our project is dependent on this jar.

00:04:01.250 --> 00:04:02.470
Now,

00:04:02.470 --> 00:04:04.620
let's say that you have a cell that in your project.

00:04:04.620 --> 00:04:06.840
So that means we're dependent on the subway,

00:04:06.840 --> 00:04:07.950
tapia dot John.

00:04:07.950 --> 00:04:15.550
Now all you have to do in maven as you go to Google and search for May have been sold it

00:04:15.550 --> 00:04:17.260
dependency,

00:04:17.260 --> 00:04:22.500
You can most likely choose any off the euros in the first bridge.

00:04:22.500 --> 00:04:29.180
I'm going to choose the 1st 1 and all you have to do now is to choose one of the washing

00:04:29.180 --> 00:04:31.250
that you would like to use.

00:04:31.250 --> 00:04:38.520
I would like to use the solid FBI off Washington five all.

00:04:38.520 --> 00:04:47.280
I'm going to do is to copy this dependency tag and then bested in my clips and all the

00:04:47.280 --> 00:04:50.410
control shift F to be a proper for mating.

00:04:50.410 --> 00:04:51.910
And that's all there is to it.

00:04:51.910 --> 00:04:53.350
This will do the magic.

00:04:53.350 --> 00:04:57.000
Now there's just one step to add this jar in a library.

00:04:57.000 --> 00:05:04.550
All they have to do this right click on this project maven and then click Update project,

00:05:04.550 --> 00:05:08.930
choose the project and hit OK and even to now,

00:05:08.930 --> 00:05:09.460
See,

00:05:09.460 --> 00:05:13.450
that's so let FBI getting populated over here.

00:05:13.450 --> 00:05:17.250
But let this progress complete 200%.

00:05:17.250 --> 00:05:20.630
It might take a while,

00:05:20.630 --> 00:05:23.250
so I'm going to pause the video and get back.

00:05:23.250 --> 00:05:27.070
And here we have it.

00:05:27.070 --> 00:05:30.020
So what's actually happening behind the scenes?

00:05:30.020 --> 00:05:35.000
How is it possible that I'm just adding set off tags and is doing everything for me?

00:05:35.000 --> 00:05:35.900
Well,

00:05:35.900 --> 00:05:36.850
the trick is,

00:05:36.850 --> 00:05:39.550
there's something called Repository.

00:05:39.550 --> 00:05:41.250
What is a repository?

00:05:41.250 --> 00:05:42.780
Living providers?

00:05:42.780 --> 00:05:44.040
A central depository,

00:05:44.040 --> 00:05:50.380
meaning you can think of repository as a centralized server where everyone who want to make

00:05:50.380 --> 00:05:53.460
their libraries public can keep their files in.

00:05:53.460 --> 00:05:59.460
So in here this particular dependency talks about J unit.

00:05:59.460 --> 00:06:04.450
So now what moving is going to do is based on all the details that we have provided as part

00:06:04.450 --> 00:06:06.450
of this dependence attack for J in it,

00:06:06.450 --> 00:06:12.100
it will be able to locate that jar file in the central as depository.

00:06:12.100 --> 00:06:15.920
But where did we define the central as depositary?

00:06:15.920 --> 00:06:19.850
We don't have any silver defined as part off upon that XML.

00:06:19.850 --> 00:06:21.550
So where is it?

00:06:21.550 --> 00:06:22.550
Well,

00:06:22.550 --> 00:06:24.610
there's something called a super palm.

00:06:24.610 --> 00:06:28.720
Although you're seeing this much content in your poem that XML,

00:06:28.720 --> 00:06:35.890
in reality your poem Fell has also inherited whatever is there in the Super Palm.

00:06:35.890 --> 00:06:39.480
You confined the super palm in the maven libraries.

00:06:39.480 --> 00:06:41.050
But alternately,

00:06:41.050 --> 00:06:46.250
eclipse provides of the convenience off viewing so called an effective bomb,

00:06:46.250 --> 00:06:50.750
which is combination off super poem as well as your palm.

00:06:50.750 --> 00:06:58.350
So this is kind of like the combination off to and in here we would find the depository

00:06:58.350 --> 00:07:00.320
server defined.

00:07:00.320 --> 00:07:02.540
So under this repository stand,

00:07:02.540 --> 00:07:04.230
you'd find that server.

00:07:04.230 --> 00:07:06.780
So this is the depository that I'm talking about.

00:07:06.780 --> 00:07:11.740
This is where all the people are going to store their libraries if they have the intention

00:07:11.740 --> 00:07:13.490
to make their libraries public.

00:07:13.490 --> 00:07:21.430
Someone to copy this Ural Goto a browser and passed it in here and now let me show you how

00:07:21.430 --> 00:07:27.250
maven is going to look at those jar files based on the corners that we had provided.

00:07:27.250 --> 00:07:30.550
So let's go back to a poem that XML.

00:07:30.550 --> 00:07:31.830
Well,

00:07:31.830 --> 00:07:32.220
by the way,

00:07:32.220 --> 00:07:36.660
if you'd like to see the effective bomb from the command line,

00:07:36.660 --> 00:07:40.100
you can simply execute this following command.

00:07:40.100 --> 00:07:43.210
Ambien help hyphen and ineffective palm.

00:07:43.210 --> 00:07:44.410
But before that,

00:07:44.410 --> 00:07:47.620
make sure you're in the directory wherever the palm file is reciting.

00:07:47.620 --> 00:07:54.370
So let's go back and builds on information provided in here.

00:07:54.370 --> 00:08:01.370
I can say that the artifact is actually located in J unit directory.

00:08:01.370 --> 00:08:07.650
So So let's go to rip Ulster and search for J unit so they would have it.

00:08:07.650 --> 00:08:11.450
And then let's go back.

00:08:11.450 --> 00:08:15.210
So again we have the artifact I d.

00:08:15.210 --> 00:08:17.130
With the name June it.

00:08:17.130 --> 00:08:19.550
This could be the project name as well.

00:08:19.550 --> 00:08:20.500
Second,

00:08:20.500 --> 00:08:29.030
you would find that J unit and you go to the worship number 381 You'd be able to locate the

00:08:29.030 --> 00:08:30.050
same as well,

00:08:30.050 --> 00:08:34.790
see how specific were getting to finally find that artifact.

00:08:34.790 --> 00:08:39.940
And in here we're going to have an artifact with the name Jane,

00:08:39.940 --> 00:08:41.690
it with the falling wash in.

00:08:41.690 --> 00:08:46.980
And certainly we have the jar file so may even knows.

00:08:46.980 --> 00:08:51.700
The silver location may even also know the pot to the jar file,

00:08:51.700 --> 00:08:54.090
so now it can download it.

00:08:54.090 --> 00:08:56.460
But where is it going to download?

00:08:56.460 --> 00:08:56.950
Really,

00:08:56.950 --> 00:09:01.470
it is going to download and so called a local depository.

00:09:01.470 --> 00:09:04.350
Where is that local depositary located?

00:09:04.350 --> 00:09:05.650
It's right here.

00:09:05.650 --> 00:09:08.170
If you go to the sea,

00:09:08.170 --> 00:09:11.840
dry abusers and Edmund had mean or whatever is the user.

00:09:11.840 --> 00:09:16.090
And then you would find this for the named dot m two.

00:09:16.090 --> 00:09:18.420
This is where all or Maven files would decide,

00:09:18.420 --> 00:09:22.220
and inside that you would find this directory called Depository.

00:09:22.220 --> 00:09:22.880
Now,

00:09:22.880 --> 00:09:26.690
this is what is going to act like a local depository,

00:09:26.690 --> 00:09:30.300
and this is where it stores all those jar files.

00:09:30.300 --> 00:09:31.470
So now,

00:09:31.470 --> 00:09:37.380
in case off and we had to dollar the jar file and point to a certain directory in case off

00:09:37.380 --> 00:09:37.970
maven,

00:09:37.970 --> 00:09:43.080
it's going to make use of the depositary to Donald the Jar file in the repository in the

00:09:43.080 --> 00:09:44.260
local depository.

00:09:44.260 --> 00:09:50.720
And so now we don't have to provide any kind of tags to point to that depository because

00:09:50.720 --> 00:09:56.580
implicitly Melvin would assume that all the library files that are project depends on will

00:09:56.580 --> 00:09:58.490
be reciting in the local depositor,

00:09:58.490 --> 00:10:05.770
which is the dot M two directory repository and in the same fashion when they provided this

00:10:05.770 --> 00:10:06.860
dependency toe.

00:10:06.860 --> 00:10:12.240
So that FBI maybe knows the location off that artifact inside the depository.

00:10:12.240 --> 00:10:20.220
So let's go back and try to travels through this pot and find out this artifact.

00:10:20.220 --> 00:10:21.650
So that's job like soul it.

00:10:21.650 --> 00:10:24.040
So let's go to Java X.

00:10:24.040 --> 00:10:29.650
It's it's for Java X.

00:10:29.650 --> 00:10:40.150
Click it and then we have so let and click it.

00:10:40.150 --> 00:10:42.770
And then again,

00:10:42.770 --> 00:10:45.000
we'll get more specific.

00:10:45.000 --> 00:10:46.510
Can't find the project.

00:10:46.510 --> 00:10:47.800
I deserve that FBI.

00:10:47.800 --> 00:10:53.100
So we have this old FBI and the Worsen as well,

00:10:53.100 --> 00:10:54.550
which will be 2.5.

00:10:54.550 --> 00:10:56.990
It looks like we have entered the wrong location.

00:10:56.990 --> 00:11:00.560
Let's go back a bit and click on Soledad FBI.

00:11:00.560 --> 00:11:01.830
And sure enough,

00:11:01.830 --> 00:11:05.110
you would find that washing to Bonfire inside.

00:11:05.110 --> 00:11:05.280
What?

00:11:05.280 --> 00:11:09.850
You would also find that artifact from where the maven don't load it.

00:11:09.850 --> 00:11:12.190
So isn't that beautiful?

00:11:12.190 --> 00:11:13.240
This is quite handy,

00:11:13.240 --> 00:11:13.610
right?

00:11:13.610 --> 00:11:15.630
No mess or whatever.

00:11:15.630 --> 00:11:19.520
You don't have to download manually and point to that directory in your scripts,

00:11:19.520 --> 00:11:20.190
etcetera.

00:11:20.190 --> 00:11:22.160
He did it off all such mess,

00:11:22.160 --> 00:11:27.960
but may have been So now I believe that you got somebody on the significance off all these

00:11:27.960 --> 00:11:28.620
coordinates.

00:11:28.620 --> 00:11:31.550
But we're going to talk about this cope tank.

00:11:31.550 --> 00:11:33.050
Incoming videos.

00:11:33.050 --> 00:11:35.980
But you got the idea off the dependency,

00:11:35.980 --> 00:11:37.170
the coordinate,

00:11:37.170 --> 00:11:41.750
etcetera and seem is applicable in here as well.

00:11:41.750 --> 00:11:48.080
And that's the reason why we have to follow all those naming conventions good practices

00:11:48.080 --> 00:11:51.350
while defining all this coordinates for a project.

00:11:51.350 --> 00:11:52.970
So,

00:11:52.970 --> 00:11:53.220
no,

00:11:53.220 --> 00:11:57.030
Let's see if we got answers to all the questions we had in our mind.

00:11:57.030 --> 00:11:57.750
I mean,

00:11:57.750 --> 00:11:59.050
I'm talking about these,

00:11:59.050 --> 00:12:03.350
So why are this called coordinates?

00:12:03.350 --> 00:12:04.460
Well,

00:12:04.460 --> 00:12:06.310
if you remember in our childhood,

00:12:06.310 --> 00:12:10.170
we had learned about coordinate system in our math class.

00:12:10.170 --> 00:12:12.910
Let me just type this down in Google,

00:12:12.910 --> 00:12:16.990
and then you'll be able to recollect what I mean coordinates.

00:12:16.990 --> 00:12:19.980
Then if you go to images,

00:12:19.980 --> 00:12:21.650
remember this.

00:12:21.650 --> 00:12:23.210
Let it come.

00:12:23.210 --> 00:12:26.410
Remember these graphs.

00:12:26.410 --> 00:12:29.250
If I were to look at a point in this graph,

00:12:29.250 --> 00:12:31.550
then I would use coordinates.

00:12:31.550 --> 00:12:33.020
For example,

00:12:33.020 --> 00:12:37.030
this point could be located with X and Y coordinates.

00:12:37.030 --> 00:12:42.240
So this could be excess for And why is four to look at this particular point?

00:12:42.240 --> 00:12:43.650
Let me just click this image.

00:12:43.650 --> 00:12:44.900
No,

00:12:44.900 --> 00:12:47.270
to look at this particular point in the graph,

00:12:47.270 --> 00:12:51.110
I would say X is for and why is four?

00:12:51.110 --> 00:12:53.720
So we're able to look it.

00:12:53.720 --> 00:12:57.750
A specific point is in this coordinate in a similar fashion.

00:12:57.750 --> 00:13:05.270
These are called coordinates because it will help us pinpoint the location of that artifact

00:13:05.270 --> 00:13:06.650
in a repository.

00:13:06.650 --> 00:13:10.250
So the world coordinate does make sense.

00:13:10.250 --> 00:13:14.250
Now let's see the other questions.

00:13:14.250 --> 00:13:15.460
My group,

00:13:15.460 --> 00:13:15.720
I D,

00:13:15.720 --> 00:13:16.940
has to be unique.

00:13:16.940 --> 00:13:18.460
We got the answer already.

00:13:18.460 --> 00:13:24.290
That's because we want to uniquely identify our project amongst all the projects in the

00:13:24.290 --> 00:13:26.760
world so that there won't be any conflicts.

00:13:26.760 --> 00:13:31.650
And why do we need to use the rivers domain name as a group,

00:13:31.650 --> 00:13:31.880
I d.

00:13:31.880 --> 00:13:36.140
That's because I may have company dot com,

00:13:36.140 --> 00:13:39.700
but somebody else can have company dot net.

00:13:39.700 --> 00:13:45.160
So if I don't use the reverse name and if I want to use the same group,

00:13:45.160 --> 00:13:45.670
I D.

00:13:45.670 --> 00:13:46.360
Then,

00:13:46.360 --> 00:13:49.560
in order to look at my artifact in the Memon depository,

00:13:49.560 --> 00:14:00.850
answer off typing com slash company or whatever we have to type company slash com,

00:14:00.850 --> 00:14:02.290
etcetera.

00:14:02.290 --> 00:14:08.050
Now this is going to cause problem because somebody else may have a domain name with net.

00:14:08.050 --> 00:14:11.190
I mean,

00:14:11.190 --> 00:14:14.910
it's not possible that two companies will be able to have the same name.

00:14:14.910 --> 00:14:16.450
But if you reverse it,

00:14:16.450 --> 00:14:17.000
though,

00:14:17.000 --> 00:14:18.850
there won't be any conflict.

00:14:18.850 --> 00:14:21.750
For example,

00:14:21.750 --> 00:14:24.270
you can have it like this,

00:14:24.270 --> 00:14:25.200
and you're good to go.

00:14:25.200 --> 00:14:29.100
But if you'd like to access the artifact Ron company dot com,

00:14:29.100 --> 00:14:30.330
then you just type in.

00:14:30.330 --> 00:14:33.210
Come here and then company.

00:14:33.210 --> 00:14:37.310
So all the board the companies have the same name company,

00:14:37.310 --> 00:14:41.360
the different terms off the top level domain.

00:14:41.360 --> 00:14:47.410
And so you're artifact that will be identified uniquely without any conflicts.

00:14:47.410 --> 00:14:49.700
So it does make sense,

00:14:49.700 --> 00:14:50.170
right?

00:14:50.170 --> 00:14:51.650
And moreover,

00:14:51.650 --> 00:14:55.980
nobody is really enforcing you to follow that naming convention.

00:14:55.980 --> 00:14:57.980
You're free to use anything you wish.

00:14:57.980 --> 00:14:58.960
In fact,

00:14:58.960 --> 00:15:02.840
the dependence is that we have taken Look at J on it,

00:15:02.840 --> 00:15:03.690
for instance,

00:15:03.690 --> 00:15:05.160
didn't follow that convention,

00:15:05.160 --> 00:15:07.040
so it's perfectly fine.

00:15:07.040 --> 00:15:08.310
But it's just a good practice.

00:15:08.310 --> 00:15:09.250
For example,

00:15:09.250 --> 00:15:14.450
if I would like to take a look at all the artifacts that are made available by your company

00:15:14.450 --> 00:15:14.450
,

00:15:14.450 --> 00:15:20.760
then I would know your company website and build on that I'd be able to navigate to those

00:15:20.760 --> 00:15:24.180
opted facts in the maven depository,

00:15:24.180 --> 00:15:26.960
just as we did hear that it will be easy.

00:15:26.960 --> 00:15:28.500
Otherwise,

00:15:28.500 --> 00:15:29.210
I have to.

00:15:29.210 --> 00:15:35.700
I have to have somebody telling me that in order to access your company's jar files or art

00:15:35.700 --> 00:15:35.700
.

00:15:35.700 --> 00:15:36.250
If I piss,

00:15:36.250 --> 00:15:38.890
then I have to use a specific group I D.

00:15:38.890 --> 00:15:42.890
So if you use the domain name and reverse it as a group,

00:15:42.890 --> 00:15:43.290
I d.

00:15:43.290 --> 00:15:47.940
That will be a lot convenient for a stranger to search for your projects and libraries that

00:15:47.940 --> 00:15:50.980
you made available for public to access and use.

00:15:50.980 --> 00:15:52.390
So it makes sense.

00:15:52.390 --> 00:15:53.390
And in fact,

00:15:53.390 --> 00:15:54.520
to be honest,

00:15:54.520 --> 00:15:57.350
if you're pointing to your own depository,

00:15:57.350 --> 00:15:59.360
but not the central depository,

00:15:59.360 --> 00:16:01.330
which would most likely be the case,

00:16:01.330 --> 00:16:03.800
especially if you're working in a corporate company,

00:16:03.800 --> 00:16:06.240
they would have their own depository.

00:16:06.240 --> 00:16:06.900
In that case,

00:16:06.900 --> 00:16:11.860
you don't really have to follow those naming conventions because the chance of conflict is

00:16:11.860 --> 00:16:12.610
very less,

00:16:12.610 --> 00:16:17.390
but only when you use the central as the poster where entire world has access to to put

00:16:17.390 --> 00:16:18.280
their libraries.

00:16:18.280 --> 00:16:21.670
It's always recommended that you followed this conventions,

00:16:21.670 --> 00:16:27.490
so no regard this question answered as well.

00:16:27.490 --> 00:16:30.470
Now let's take a look at this.

00:16:30.470 --> 00:16:35.780
Whether package name where the source code would decide should be seem as the group I d

00:16:35.780 --> 00:16:36.590
plus artifact,

00:16:36.590 --> 00:16:40.960
I D if you notice we click this aptos dot Java,

00:16:40.960 --> 00:16:43.650
we had this package,

00:16:43.650 --> 00:16:45.130
which is combination of Group I.

00:16:45.130 --> 00:16:45.500
D.

00:16:45.500 --> 00:16:47.130
Plus the project name.

00:16:47.130 --> 00:16:48.310
The reason is,

00:16:48.310 --> 00:16:53.080
let's say that wanted to make your project and open source so that somebody can take a look

00:16:53.080 --> 00:16:53.880
at the source code,

00:16:53.880 --> 00:16:54.640
etcetera.

00:16:54.640 --> 00:16:57.620
Then just been looking at the source code there.

00:16:57.620 --> 00:17:03.430
Be able to know to which company does the source for belong to this sort of get a sense off

00:17:03.430 --> 00:17:06.030
to whom this classified belongs to,

00:17:06.030 --> 00:17:09.370
and that will come in handy certain times.

00:17:09.370 --> 00:17:10.970
So that's about it.

00:17:10.970 --> 00:17:16.260
And we have the final question why it took so much time to create Maven Project.

00:17:16.260 --> 00:17:18.160
It's a pretty good question.

00:17:18.160 --> 00:17:19.420
The reason is,

00:17:19.420 --> 00:17:21.380
as I've already mentioned,

00:17:21.380 --> 00:17:24.000
although you're seeing this much content in a problem.

00:17:24.000 --> 00:17:24.820
That example.

00:17:24.820 --> 00:17:26.000
Behind the scenes,

00:17:26.000 --> 00:17:27.490
we have this effective palm,

00:17:27.490 --> 00:17:33.140
which in turn will have some additional stuff as a for example,

00:17:33.140 --> 00:17:34.010
plug ins.

00:17:34.010 --> 00:17:35.110
Now,

00:17:35.110 --> 00:17:36.200
what is a plug in?

00:17:36.200 --> 00:17:40.300
You can think off plug in as a component that does a certain task,

00:17:40.300 --> 00:17:42.210
and literally,

00:17:42.210 --> 00:17:47.050
for all the tiles that were about to do with heaven will have unplugging associate ID.

00:17:47.050 --> 00:17:53.840
Meghan in itself is completely useless because all the tasks were actually done by plug ins

00:17:53.840 --> 00:17:53.840
.

00:17:53.840 --> 00:17:57.940
We have plug ins for literally all the typical towns that we perform,

00:17:57.940 --> 00:17:58.790
for example,

00:17:58.790 --> 00:18:01.340
to compile the source code.

00:18:01.340 --> 00:18:02.080
In our project,

00:18:02.080 --> 00:18:04.850
we have compiler plug in,

00:18:04.850 --> 00:18:08.570
and here we had defined it and similar.

00:18:08.570 --> 00:18:11.660
We have one to create a jar archive,

00:18:11.660 --> 00:18:16.820
and we also have one for reporting etcetera.

00:18:16.820 --> 00:18:19.390
You can also add additional plug ins if you wish.

00:18:19.390 --> 00:18:21.210
If you want to use one,

00:18:21.210 --> 00:18:24.300
and you can even go ahead and write your own plug ins,

00:18:24.300 --> 00:18:29.060
we'll talk about plug ins when we talk about the bill.

00:18:29.060 --> 00:18:31.440
Lifecycle phases,

00:18:31.440 --> 00:18:31.990
goals,

00:18:31.990 --> 00:18:32.700
etcetera.

00:18:32.700 --> 00:18:34.290
But just for the sake,

00:18:34.290 --> 00:18:35.290
off this video,

00:18:35.290 --> 00:18:39.550
plug ins is synonymous to applications running in an operating system.

00:18:39.550 --> 00:18:44.170
There's no purpose off operating system without applications.

00:18:44.170 --> 00:18:46.450
Are the software's between stolen top off it?

00:18:46.450 --> 00:18:47.170
I mean,

00:18:47.170 --> 00:18:53.270
just operating system alone is useless without installing APS like Microsoft Ward browser,

00:18:53.270 --> 00:18:54.080
etcetera.

00:18:54.080 --> 00:18:55.020
Similarly,

00:18:55.020 --> 00:18:58.050
maven in itself is useless without plug ins,

00:18:58.050 --> 00:19:04.720
and all this plug ins were actually jar files and are going to recite in our local

00:19:04.720 --> 00:19:05.710
depository.

00:19:05.710 --> 00:19:07.050
So guess what?

00:19:07.050 --> 00:19:08.880
When we created this project,

00:19:08.880 --> 00:19:14.550
Megan is not only going to download the dependencies that we had mentioned in or XML

00:19:14.550 --> 00:19:15.300
document,

00:19:15.300 --> 00:19:19.670
but also all these plug ins that were part off,

00:19:19.670 --> 00:19:20.550
or XML.

00:19:20.550 --> 00:19:27.090
And that's why it took a lot of time to download all those jar files from the repository to

00:19:27.090 --> 00:19:28.420
your local depository.

00:19:28.420 --> 00:19:29.860
And along with that,

00:19:29.860 --> 00:19:31.660
the beautiful May Vinny's.

00:19:31.660 --> 00:19:36.200
It is not only going to download these dependent jars,

00:19:36.200 --> 00:19:39.900
but also the jar files that these files depend on.

00:19:39.900 --> 00:19:46.160
And so it's going to download the entire set off libraries that your project ever needs.

00:19:46.160 --> 00:19:47.920
Isn't that beautiful?

00:19:47.920 --> 00:19:54.130
So that's why we have so many directors in here all the way had just defined this to

00:19:54.130 --> 00:19:55.160
dependencies.

00:19:55.160 --> 00:19:58.620
We got not only those dependence is,

00:19:58.620 --> 00:20:04.290
but also the dependency is that our dependence is were dependent on and along with that,

00:20:04.290 --> 00:20:10.410
MoveOn has also downloaded the required plug ins to just search for compiler,

00:20:10.410 --> 00:20:16.780
and they would notice that you would find a jar file specific to that.

00:20:16.780 --> 00:20:20.160
Let's get inside the static tree and you would find that jar file.

00:20:20.160 --> 00:20:25.760
So that's what I'm talking about or it we have a lot more to come,

00:20:25.760 --> 00:20:32.090
and I hope that you're now starting to feel comfortable with Maven But I'm sure you still

00:20:32.090 --> 00:20:34.220
have some questions at the back off your mind.

00:20:34.220 --> 00:20:37.290
They will all be answered pretty shortly.

00:20:37.290 --> 00:20:39.710
But at least for the time being,

00:20:39.710 --> 00:20:42.990
we got all over questions answered.

00:20:42.990 --> 00:20:44.610
And along with that,

00:20:44.610 --> 00:20:48.560
we also had some good understanding off how things are working with me.

00:20:48.560 --> 00:20:48.870
Even.

00:20:48.870 --> 00:20:49.960
All right,

00:20:49.960 --> 00:20:51.390
that will suffice for this video.

00:20:51.390 --> 00:20:52.160
See you soon.

