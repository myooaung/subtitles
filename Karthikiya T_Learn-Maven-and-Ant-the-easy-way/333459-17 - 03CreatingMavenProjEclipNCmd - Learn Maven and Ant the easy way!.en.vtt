WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.220
in this video,

00:00:01.220 --> 00:00:04.170
we're going to take a look at how to create a maven project,

00:00:04.170 --> 00:00:06.870
and this is going to be a good start to learn maven.

00:00:06.870 --> 00:00:12.460
There are multiple ways you can create a maven Project one is from the command line and the

00:00:12.460 --> 00:00:15.060
other is from the Eclipse I d.

00:00:15.060 --> 00:00:15.670
First,

00:00:15.670 --> 00:00:19.470
let's take a look at how to create a maven project from Eclipse I D.

00:00:19.470 --> 00:00:23.250
And then we'll take a look at how to do the same from command line.

00:00:23.250 --> 00:00:24.870
And for this purpose,

00:00:24.870 --> 00:00:29.460
you're not really required to install any additional plug ins in Eclipse.

00:00:29.460 --> 00:00:34.550
To Support Maven Eclipse comes with built in maven capabilities,

00:00:34.550 --> 00:00:36.290
and you don't have to do much.

00:00:36.290 --> 00:00:39.360
But make sure that you have the latest washing off it.

00:00:39.360 --> 00:00:40.400
Lips installed,

00:00:40.400 --> 00:00:42.140
which is recommended.

00:00:42.140 --> 00:00:48.630
So let's goto our file menu and then new and then choose this option maven project.

00:00:48.630 --> 00:00:51.710
If you're not able to see Maven project on the list,

00:00:51.710 --> 00:00:59.040
then click on other Search for Maven and then you'll be able to locate the Maven Project.

00:00:59.040 --> 00:01:05.700
Select it and click next so this will take us to the project creation reserved for Maven

00:01:05.700 --> 00:01:06.320
Project.

00:01:06.320 --> 00:01:09.190
Now you can leave all these options to default.

00:01:09.190 --> 00:01:11.020
But just for your information,

00:01:11.020 --> 00:01:12.610
if you enable this option,

00:01:12.610 --> 00:01:16.970
this would essentially skip on next step where we would get to choose.

00:01:16.970 --> 00:01:20.090
Thea Archetype will talk about archetype in a second,

00:01:20.090 --> 00:01:26.660
but make sure that you un selected and this option tells us where they want to use the

00:01:26.660 --> 00:01:29.350
default eclipse workspace location.

00:01:29.350 --> 00:01:31.160
Or if you wish to use something else,

00:01:31.160 --> 00:01:32.290
then you can change it.

00:01:32.290 --> 00:01:33.480
In my case,

00:01:33.480 --> 00:01:39.090
my workspace location is an either through the folder name Ambien Workspace.

00:01:39.090 --> 00:01:43.750
That's where all my class projects are going to recite from this point,

00:01:43.750 --> 00:01:50.130
and this option in here has something to do but working said so you should have a working

00:01:50.130 --> 00:01:52.850
said created prior to this.

00:01:52.850 --> 00:01:56.750
But this particular option has nothing to do with Maven Project,

00:01:56.750 --> 00:01:58.750
so we can just simply ignore it.

00:01:58.750 --> 00:02:01.100
It's not really relevant to this course as well,

00:02:01.100 --> 00:02:03.180
so let's keep it for the time being.

00:02:03.180 --> 00:02:05.780
It next now in the screen,

00:02:05.780 --> 00:02:07.790
you will get to choose an archetype.

00:02:07.790 --> 00:02:14.950
Now what is an archetype you can think often archetype as a pre defined product structure,

00:02:14.950 --> 00:02:20.550
and we have multiple archetypes for various different types of projects.

00:02:20.550 --> 00:02:21.670
For example,

00:02:21.670 --> 00:02:24.230
if you'd like to work with Enterprise Java beans.

00:02:24.230 --> 00:02:25.750
So that's just peace,

00:02:25.750 --> 00:02:27.120
etcetera.

00:02:27.120 --> 00:02:33.160
Then you would essentially want a project that is a jot enterprise edition project.

00:02:33.160 --> 00:02:39.910
And here you will get to see a lot off modules where you will get to work with the Joe

00:02:39.910 --> 00:02:43.110
Enterprise Edition Technologies like Enterprise Java beans,

00:02:43.110 --> 00:02:44.050
the services,

00:02:44.050 --> 00:02:47.550
etcetera similarly got many of the archetypes.

00:02:47.550 --> 00:02:48.170
No,

00:02:48.170 --> 00:02:50.340
depending on the architect that you select,

00:02:50.340 --> 00:02:54.020
the underlying product structure is going to change accordingly.

00:02:54.020 --> 00:02:58.230
So this is kind offer convenience that may have nous providing else so that we don't have

00:02:58.230 --> 00:03:00.050
to create everything from scratch.

00:03:00.050 --> 00:03:03.950
So this is quite handy.

00:03:03.950 --> 00:03:10.350
So this is essentially going to have this standard that it really or that we talked about

00:03:10.350 --> 00:03:13.050
Not all projects will have all these.

00:03:13.050 --> 00:03:15.220
Depending on the archetype that you select,

00:03:15.220 --> 00:03:17.770
some of these will be populated.

00:03:17.770 --> 00:03:19.770
Some of these will not be populated.

00:03:19.770 --> 00:03:22.840
For example,

00:03:22.840 --> 00:03:26.000
the one that we're going to use now is this maven archetype.

00:03:26.000 --> 00:03:26.750
Quick start.

00:03:26.750 --> 00:03:28.930
This is a very simple project,

00:03:28.930 --> 00:03:32.030
and this will suffice for now.

00:03:32.030 --> 00:03:33.970
But just for your information,

00:03:33.970 --> 00:03:36.750
the archetypes are not just limited to these.

00:03:36.750 --> 00:03:38.080
There are in fact,

00:03:38.080 --> 00:03:39.190
hundreds off them.

00:03:39.190 --> 00:03:45.400
If you would like to get access to or if you'd like to populate all those artifacts in here

00:03:45.400 --> 00:03:45.400
,

00:03:45.400 --> 00:03:49.960
then you have to configure that under preferences.

00:03:49.960 --> 00:03:51.320
Let me just show you what I mean.

00:03:51.320 --> 00:04:00.440
Go to preferences such for maven archetype and add remote catalogue.

00:04:00.440 --> 00:04:06.090
And you have to point to an XML that recites in the repository.

00:04:06.090 --> 00:04:09.590
Now you don't know what his repository will talk about it.

00:04:09.590 --> 00:04:14.090
But let me just pause it really and try to get the XML part in here.

00:04:14.090 --> 00:04:16.470
So here it is.

00:04:16.470 --> 00:04:18.760
Once you provide the sex symbol part and hit,

00:04:18.760 --> 00:04:19.450
OK,

00:04:19.450 --> 00:04:23.600
this is actually going to introduce a lot off stuff.

00:04:23.600 --> 00:04:24.290
I mean,

00:04:24.290 --> 00:04:27.710
a lot off archetypes has part off this visit,

00:04:27.710 --> 00:04:31.370
but I didn't do that because that's going to create a lot off mess,

00:04:31.370 --> 00:04:34.110
and I would recommend you to do the same.

00:04:34.110 --> 00:04:41.700
Don't try to import those archetypes because the list is simply way too big.

00:04:41.700 --> 00:04:42.430
Like I said,

00:04:42.430 --> 00:04:46.950
there are hundreds off them and may not be needing to populate all of them in here.

00:04:46.950 --> 00:04:48.250
For example,

00:04:48.250 --> 00:04:53.750
if you would like to work with spring framework than we have artifact specific to that,

00:04:53.750 --> 00:05:00.140
we also have one for struts like as many people introduced many different archetypes.

00:05:00.140 --> 00:05:04.490
So depending on watch need you have to choose that and gets,

00:05:04.490 --> 00:05:05.030
if inaudible,

00:05:05.030 --> 00:05:06.720
to see that archetype over here.

00:05:06.720 --> 00:05:07.590
And at the same time,

00:05:07.590 --> 00:05:11.040
you don't want to populate all the archetypes that ever existed.

00:05:11.040 --> 00:05:15.470
Then you can add a specific archetype by clicking this button,

00:05:15.470 --> 00:05:19.240
and then you will provide the location in the repository.

00:05:19.240 --> 00:05:20.270
And obviously,

00:05:20.270 --> 00:05:21.210
at this point of time,

00:05:21.210 --> 00:05:22.960
you don't know what is Group I the artifact.

00:05:22.960 --> 00:05:24.740
I d wash in etcetera.

00:05:24.740 --> 00:05:26.910
So we're going to skip it for now.

00:05:26.910 --> 00:05:29.870
So let's choose this option.

00:05:29.870 --> 00:05:31.670
May even archetype quick,

00:05:31.670 --> 00:05:33.350
start and click next.

00:05:33.350 --> 00:05:34.260
Now,

00:05:34.260 --> 00:05:36.380
what are you seeing here right now?

00:05:36.380 --> 00:05:38.600
Are called coordinates.

00:05:38.600 --> 00:05:39.240
Now,

00:05:39.240 --> 00:05:41.410
you probably don't know what is Coordinate.

00:05:41.410 --> 00:05:42.950
We'll talk about it later.

00:05:42.950 --> 00:05:43.870
In fact,

00:05:43.870 --> 00:05:46.750
I'm going to say a lot of things that will talk about it later.

00:05:46.750 --> 00:05:48.600
You just have to trust me on that,

00:05:48.600 --> 00:05:50.670
because at this point,

00:05:50.670 --> 00:05:52.540
you're you're a beginner with maven,

00:05:52.540 --> 00:05:57.790
and it doesn't make sense for me to use all those term knowledge.

00:05:57.790 --> 00:05:59.810
Is that chocolate lee A never off.

00:05:59.810 --> 00:06:01.590
So just trust me on that.

00:06:01.590 --> 00:06:05.580
We will definitely be covering whatever I said I will cover letter.

00:06:05.580 --> 00:06:09.220
Let me just rattle is down all the questions that we may be having.

00:06:09.220 --> 00:06:21.300
So why are these called coordinates that small one?

00:06:21.300 --> 00:06:26.430
The group I The has to be unique for your entire organization.

00:06:26.430 --> 00:06:32.080
Whatever the idea that you provide in here is going to remain common for all the parties

00:06:32.080 --> 00:06:36.100
that to create in your organization and as a good naming convention,

00:06:36.100 --> 00:06:40.860
it would always be better that you use your domain name if you only company.

00:06:40.860 --> 00:06:44.310
That means there's a high chance that you also only domain name,

00:06:44.310 --> 00:06:46.920
like google dot com or Apache dot org,

00:06:46.920 --> 00:06:47.640
etcetera.

00:06:47.640 --> 00:06:48.830
If you don't,

00:06:48.830 --> 00:06:51.160
then it's recommended that you have one.

00:06:51.160 --> 00:06:55.550
But I don't mean to say that you have to go and the district domain name right now,

00:06:55.550 --> 00:06:59.230
because for this course is just simply not required.

00:06:59.230 --> 00:07:03.170
But in real time Projects told is better that you use the domain name here.

00:07:03.170 --> 00:07:03.970
For example,

00:07:03.970 --> 00:07:08.960
if your domain name is ah company dot com,

00:07:08.960 --> 00:07:11.350
then you just have to reverse it.

00:07:11.350 --> 00:07:12.530
For example,

00:07:12.530 --> 00:07:16.290
the company dot com will now become calm.

00:07:16.290 --> 00:07:18.750
Dark Company has a group I D.

00:07:18.750 --> 00:07:21.630
No way it has to be this way.

00:07:21.630 --> 00:07:22.900
We'll talk about it later,

00:07:22.900 --> 00:07:25.270
but let's lose down this question as well,

00:07:25.270 --> 00:07:27.250
so that we can address it later.

00:07:27.250 --> 00:07:45.760
Why Group I D has to be unique and why we need to reverse the domain name,

00:07:45.760 --> 00:07:53.010
and I hope we all regard the answer for why I want to use the domain name is because you

00:07:53.010 --> 00:07:56.560
want to keep this group I d unique for your company.

00:07:56.560 --> 00:08:00.050
Nobody can create a domain name with the alderman name,

00:08:00.050 --> 00:08:04.740
so as long as you use your own domain name that you personally own,

00:08:04.740 --> 00:08:11.910
then it's going to remain unique for your organization or company and more often for larger

00:08:11.910 --> 00:08:17.660
organisations who will have multiple projects they may not have group I did that looks very

00:08:17.660 --> 00:08:19.610
simple like this.

00:08:19.610 --> 00:08:20.960
For example,

00:08:20.960 --> 00:08:24.380
take the example off Google.

00:08:24.380 --> 00:08:31.390
So the group added that they're going to use for their project is going to be com dot

00:08:31.390 --> 00:08:32.200
google,

00:08:32.200 --> 00:08:36.850
and now this project may have lot of sub projects as well.

00:08:36.850 --> 00:08:37.890
For example,

00:08:37.890 --> 00:08:41.310
we have Google AdWords and Google Analytics etcetera.

00:08:41.310 --> 00:08:44.020
So for each one of those projects,

00:08:44.020 --> 00:08:45.450
they have their own group,

00:08:45.450 --> 00:08:46.050
i D.

00:08:46.050 --> 00:08:52.630
But they're still end up having the common group idea off the parent.

00:08:52.630 --> 00:08:53.750
For example,

00:08:53.750 --> 00:09:05.670
the sub project of Google could be com dot google dot analytics or it could be calm dot

00:09:05.670 --> 00:09:09.800
google dot had words except dra.

00:09:09.800 --> 00:09:10.930
Similarly,

00:09:10.930 --> 00:09:13.840
take the example off Apache dot ogg.

00:09:13.840 --> 00:09:16.420
It's going to be our dot Apache,

00:09:16.420 --> 00:09:19.610
and then we can have multiple sub projects in it,

00:09:19.610 --> 00:09:21.070
for example,

00:09:21.070 --> 00:09:28.650
or dot Apache dot tomcat server or order Apache dot maven etcetera.

00:09:28.650 --> 00:09:29.780
In fact,

00:09:29.780 --> 00:09:32.360
when I walk you through the repository,

00:09:32.360 --> 00:09:35.170
it will tend to understand all of these.

00:09:35.170 --> 00:09:36.850
But I hope you got the point.

00:09:36.850 --> 00:09:42.040
So your organization is going to have a common group i d.

00:09:42.040 --> 00:09:43.800
And internally.

00:09:43.800 --> 00:09:46.450
When you have sub projects like this,

00:09:46.450 --> 00:09:53.590
you map and additional strings separated by a dot and make sure that you keep your group by

00:09:53.590 --> 00:09:58.570
the very simple without any special characters and all lower case.

00:09:58.570 --> 00:10:03.030
So why we have to follow all these naming conventions?

00:10:03.030 --> 00:10:06.570
You'll get clarity on it in coming videos.

00:10:06.570 --> 00:10:08.450
Most likely next couple of videos.

00:10:08.450 --> 00:10:14.080
You should be knowing why we're trying to enforce such good naming conventions.

00:10:14.080 --> 00:10:14.940
Well,

00:10:14.940 --> 00:10:16.420
nobody really is enforcing.

00:10:16.420 --> 00:10:19.880
You're free to use any name that you wish interred in the special characters,

00:10:19.880 --> 00:10:25.290
but it is you who is going to face problems that let a point of time if you don't follow

00:10:25.290 --> 00:10:29.690
these good name and conventions that somebody has already tried and experimented.

00:10:29.690 --> 00:10:32.250
And now comes the artifact I D.

00:10:32.250 --> 00:10:33.490
Essentially,

00:10:33.490 --> 00:10:34.650
when you build the project,

00:10:34.650 --> 00:10:37.580
the final artifact will have the following name.

00:10:37.580 --> 00:10:41.370
Now this will also correspond to the project name.

00:10:41.370 --> 00:10:44.310
Let's enter some name in here.

00:10:44.310 --> 00:10:48.990
I'm going to say my project or whatever,

00:10:48.990 --> 00:10:52.110
but make sure you would put it very simple.

00:10:52.110 --> 00:10:59.180
If you have multiple words in your project name or the artifact I d separated with a hyphen

00:10:59.180 --> 00:10:59.180
.

00:10:59.180 --> 00:11:00.220
And again,

00:11:00.220 --> 00:11:02.140
don't you special characters.

00:11:02.140 --> 00:11:06.950
It za bad practice because when you're trying to create an artifact,

00:11:06.950 --> 00:11:11.600
that tool that creates that artifact may not be accepting those special characters.

00:11:11.600 --> 00:11:12.810
So always started.

00:11:12.810 --> 00:11:14.050
Keep in simple.

00:11:14.050 --> 00:11:18.850
The simple you put by following all this good naming conventions,

00:11:18.850 --> 00:11:24.040
the lesser are the problems that you're going to face that later point of time are examples

00:11:24.040 --> 00:11:26.390
are going to be very simple examples,

00:11:26.390 --> 00:11:28.230
so no worries at all,

00:11:28.230 --> 00:11:33.140
But I'm guiding you because at little one of time in future,

00:11:33.140 --> 00:11:36.700
you certainly have to follow all these standard practices.

00:11:36.700 --> 00:11:39.960
So now we're done with artifact i D.

00:11:39.960 --> 00:11:43.410
And then let's take a look at the wash in.

00:11:43.410 --> 00:11:46.660
We're going to talk about worsening snapshot,

00:11:46.660 --> 00:11:47.460
etcetera,

00:11:47.460 --> 00:11:50.590
but you're free to do any washing that you wish.

00:11:50.590 --> 00:11:51.890
For example,

00:11:51.890 --> 00:11:54.380
let's say your project is about Windows 10.

00:11:54.380 --> 00:11:58.990
You would name a test 10 and then you would give it some Warsh intend on Oh,

00:11:58.990 --> 00:12:00.570
at later point of time.

00:12:00.570 --> 00:12:03.470
When introduced some changes in your project.

00:12:03.470 --> 00:12:09.240
You'd like to send an update to all living Dustin customers and that update abortion is

00:12:09.240 --> 00:12:10.980
going to be 10.1.

00:12:10.980 --> 00:12:13.850
That means Windows Stan update one.

00:12:13.850 --> 00:12:14.420
Or,

00:12:14.420 --> 00:12:16.600
if you have even minor updates,

00:12:16.600 --> 00:12:24.830
then you might want upend one more level off rationing zero or 10 or whatever for the time

00:12:24.830 --> 00:12:26.450
being less living to default,

00:12:26.450 --> 00:12:28.830
which is a snapshot portion.

00:12:28.830 --> 00:12:33.200
The snapshot signifies that your project is under construction.

00:12:33.200 --> 00:12:35.070
It's still not in production.

00:12:35.070 --> 00:12:36.050
We'll talk about it,

00:12:36.050 --> 00:12:42.810
and the package name is going to be whatever the group idea,

00:12:42.810 --> 00:12:43.480
an artifact,

00:12:43.480 --> 00:12:44.100
I d.

00:12:44.100 --> 00:12:44.890
That you said.

00:12:44.890 --> 00:12:46.070
And again,

00:12:46.070 --> 00:12:47.470
nobody is really enforcing.

00:12:47.470 --> 00:12:48.820
But this is a good practice.

00:12:48.820 --> 00:12:51.250
So let's put this question as well,

00:12:51.250 --> 00:13:09.970
and why the package should be same as Group I d bless artifact I d.

00:13:09.970 --> 00:13:15.980
So we'll have an answer for that pretty soon.

00:13:15.980 --> 00:13:22.050
Now let's hit finish and Central create a project.

00:13:22.050 --> 00:13:23.130
Now,

00:13:23.130 --> 00:13:29.080
let me tell you that this is going to take quite a lot off time.

00:13:29.080 --> 00:13:29.570
Now,

00:13:29.570 --> 00:13:30.710
this is another question,

00:13:30.710 --> 00:13:31.160
right?

00:13:31.160 --> 00:13:44.550
So let's put it why it took so much time to create a maven project.

00:13:44.550 --> 00:13:53.240
So let me just pause the video and get back after the project gets created completely.

00:13:53.240 --> 00:13:55.760
Okay,

00:13:55.760 --> 00:13:57.530
here we have our project created.

00:13:57.530 --> 00:13:59.120
After waiting for a long time,

00:13:59.120 --> 00:14:00.550
it's expanded.

00:14:00.550 --> 00:14:04.190
And if you go to this direct resource mean Java,

00:14:04.190 --> 00:14:08.580
which is begin standard data to structure off heaven.

00:14:08.580 --> 00:14:15.530
And obviously you may not be able to see all these that reason here because they're not

00:14:15.530 --> 00:14:18.150
needed for this particular project.

00:14:18.150 --> 00:14:22.450
And it depends on the type of archetype that you have chosen while creating the project.

00:14:22.450 --> 00:14:31.320
So let's try to expand this job and see that we have the package structure and may even has

00:14:31.320 --> 00:14:35.810
actually created a sample Java file with the hello World message.

00:14:35.810 --> 00:14:37.840
And here's a package.

00:14:37.840 --> 00:14:39.250
Hold it.

00:14:39.250 --> 00:14:40.770
So similarly,

00:14:40.770 --> 00:14:42.370
we also have the test folder.

00:14:42.370 --> 00:14:50.550
But the key thing to note here is this so called palm dot XML form stands for Project

00:14:50.550 --> 00:14:52.450
Object Model,

00:14:52.450 --> 00:14:55.520
and this will essentially describe our project.

00:14:55.520 --> 00:14:58.510
What are all the things that are going to happen in our project?

00:14:58.510 --> 00:15:04.800
And we're basically instructing Maven What should happen when we build our project are

00:15:04.800 --> 00:15:06.790
perform various tasks,

00:15:06.790 --> 00:15:07.750
etcetera.

00:15:07.750 --> 00:15:09.120
In other words,

00:15:09.120 --> 00:15:12.130
just as we have build our XML for aunt,

00:15:12.130 --> 00:15:14.960
we have despond or XML for maven.

00:15:14.960 --> 00:15:15.890
But little better,

00:15:15.890 --> 00:15:16.410
though,

00:15:16.410 --> 00:15:18.270
because as of all that you mentioned,

00:15:18.270 --> 00:15:24.790
Memon is just not built toe but also dependent management plug ins,

00:15:24.790 --> 00:15:27.250
gold's etcetera and etcetera.

00:15:27.250 --> 00:15:33.440
Now I hope that this has brought in some great amount off curiosity to learn more and more

00:15:33.440 --> 00:15:34.280
on maven,

00:15:34.280 --> 00:15:36.130
and that's why we're here.

00:15:36.130 --> 00:15:40.540
We're going to uncover a lot off things that may even offers and you will find it

00:15:40.540 --> 00:15:41.410
interesting.

00:15:41.410 --> 00:15:48.550
But let's also take a look at how to create the Maven project from command line for that

00:15:48.550 --> 00:15:49.250
purpose.

00:15:49.250 --> 00:15:52.240
This is a command that you have to use Ambien,

00:15:52.240 --> 00:15:53.010
archetype,

00:15:53.010 --> 00:15:53.470
hyphen,

00:15:53.470 --> 00:15:54.150
generate.

00:15:54.150 --> 00:15:58.240
And when you run this command that I've just highlighted,

00:15:58.240 --> 00:16:04.240
the script will ask you to provide the following para meters my group I d art.

00:16:04.240 --> 00:16:06.760
If I tidy archetype artifact.

00:16:06.760 --> 00:16:06.970
I t.

00:16:06.970 --> 00:16:07.750
Etcetera.

00:16:07.750 --> 00:16:08.880
Basically,

00:16:08.880 --> 00:16:13.800
these are the same perimeters which we had set while creating our project in eclipse as

00:16:13.800 --> 00:16:14.160
well.

00:16:14.160 --> 00:16:18.360
And the command line tool will also ask you to enter the same.

00:16:18.360 --> 00:16:24.240
But whereas in here what we're trying to do is we're providing all those perimeters right

00:16:24.240 --> 00:16:25.100
in this command.

00:16:25.100 --> 00:16:28.350
So that script will run smoothly without interruptions.

00:16:28.350 --> 00:16:33.620
And it won't be prompted to enter all these and not to provide these perimeters.

00:16:33.620 --> 00:16:35.560
He would use this option hyphen d,

00:16:35.560 --> 00:16:38.290
and you provide all these coordinates.

00:16:38.290 --> 00:16:43.150
But make sure you also provide this additional perimeter which says interactive mode.

00:16:43.150 --> 00:16:46.460
And you need to set this to false my default.

00:16:46.460 --> 00:16:47.450
This is true.

00:16:47.450 --> 00:16:50.110
Which means if you don't set this,

00:16:50.110 --> 00:16:56.290
then you're still going to be prompted to enter all these details even though you have

00:16:56.290 --> 00:16:58.380
provided them as part of the command.

00:16:58.380 --> 00:17:02.580
So make sure you also said this particular flag two falls.

00:17:02.580 --> 00:17:10.240
So let's copy this Command and Goto our command processor for this purpose have created

00:17:10.240 --> 00:17:13.700
this directory First maven project under E drive.

00:17:13.700 --> 00:17:20.670
I'm going to place my command here Yearender and again,

00:17:20.670 --> 00:17:22.420
this is going to take a while,

00:17:22.420 --> 00:17:24.880
but do take a note that this is down wearing something.

00:17:24.880 --> 00:17:27.380
That's where a majority of the time is going.

00:17:27.380 --> 00:17:30.230
But what it is downloading from merit,

00:17:30.230 --> 00:17:34.420
his own loading is something that you'll get to know incoming videos.

00:17:34.420 --> 00:17:35.430
Well,

00:17:35.430 --> 00:17:38.100
I know I'm saying a lot of things that will talk later,

00:17:38.100 --> 00:17:41.950
but trust me will definitely talk about them.

00:17:41.950 --> 00:17:47.580
So let me just quickly pause this video until this project gets created.

00:17:47.580 --> 00:17:50.550
Hold it.

00:17:50.550 --> 00:17:51.810
The project is created.

00:17:51.810 --> 00:17:54.770
And so you're able to see this message build success.

00:17:54.770 --> 00:17:56.760
And if you go to the directory,

00:17:56.760 --> 00:17:57.910
sure enough,

00:17:57.910 --> 00:18:02.100
we have that project created along with its bond or XML.

00:18:02.100 --> 00:18:06.040
So you have the following back age,

00:18:06.040 --> 00:18:09.700
etcetera everything the same as what you have seen in eclipse.

00:18:09.700 --> 00:18:11.550
Nothing different.

00:18:11.550 --> 00:18:16.370
And you can no actually important the same project into a collapse as well,

00:18:16.370 --> 00:18:17.130
if you wish.

00:18:17.130 --> 00:18:19.730
And I hope that you know how to do that.

00:18:19.730 --> 00:18:24.550
You just have to go wreck lips and then choose import,

00:18:24.550 --> 00:18:31.750
and then choose the kind of project that you want import existing Memin project and you

00:18:31.750 --> 00:18:33.850
would point to the Data Street to import.

00:18:33.850 --> 00:18:39.110
And then you can start working with that project inside the eclipse Anyway,

00:18:39.110 --> 00:18:40.090
That's a different story.

00:18:40.090 --> 00:18:42.180
So that's about it for this video.

00:18:42.180 --> 00:18:43.970
I think this is a good starter.

00:18:43.970 --> 00:18:47.100
Although we have so many unanswered questions,

00:18:47.100 --> 00:18:49.390
this is definitely a good start.

00:18:49.390 --> 00:18:50.490
All right.

00:18:50.490 --> 00:18:52.000
See you in my next video.

