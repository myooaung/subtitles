WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.810
in this,

00:00:00.810 --> 00:00:01.040
really,

00:00:01.040 --> 00:00:03.820
we're going to talk about part like structures.

00:00:03.820 --> 00:00:07.250
But before that I think about the falling scenario.

00:00:07.250 --> 00:00:14.200
Let's say that I wanted to write a builder XML file that's going to help me compile it.

00:00:14.200 --> 00:00:15.970
Our file as well as run it.

00:00:15.970 --> 00:00:17.970
So for this purpose.

00:00:17.970 --> 00:00:19.620
I've created this Java file,

00:00:19.620 --> 00:00:24.170
and all it does is it's going to help us print a very simple message.

00:00:24.170 --> 00:00:24.390
Hello,

00:00:24.390 --> 00:00:26.500
world on the standard output.

00:00:26.500 --> 00:00:30.880
So I've used this system that are doctor until an instruction to do so.

00:00:30.880 --> 00:00:32.150
Very simple program.

00:00:32.150 --> 00:00:38.040
And here is our XML file that does a couple off tasks.

00:00:38.040 --> 00:00:43.230
One is to compel and the other is to run the target.

00:00:43.230 --> 00:00:44.490
Ron is the default one,

00:00:44.490 --> 00:00:47.110
but it depends on the compile target,

00:00:47.110 --> 00:00:49.760
so this will get executed first.

00:00:49.760 --> 00:00:52.130
Inside the compile target,

00:00:52.130 --> 00:00:54.380
we have the staff Java Sea.

00:00:54.380 --> 00:00:57.690
The Java Sea task will help us compile a Java program,

00:00:57.690 --> 00:01:04.510
and it's going to accept the following attributes when our foot he is going to let us

00:01:04.510 --> 00:01:07.200
specify the jar file that we want to compile.

00:01:07.200 --> 00:01:13.020
We can also specify the Destination directory where the resulting dark class file should

00:01:13.020 --> 00:01:13.610
reside.

00:01:13.610 --> 00:01:14.690
In our case,

00:01:14.690 --> 00:01:16.410
it's going to be the same directory.

00:01:16.410 --> 00:01:20.470
So once this task gets executed,

00:01:20.470 --> 00:01:23.910
will have a dark class file deciding the same directory.

00:01:23.910 --> 00:01:31.250
And then the control comes into this target to run the class file by using this task Java

00:01:31.250 --> 00:01:34.280
and we specified the name of the class.

00:01:34.280 --> 00:01:35.850
Just as you see here.

00:01:35.850 --> 00:01:40.190
Let's try to run this file and see if we get any.

00:01:40.190 --> 00:01:40.650
Ever.

00:01:40.650 --> 00:01:47.250
We're going to get a never compel elation is successful.

00:01:47.250 --> 00:01:51.530
We have a never here because it says class not found exception.

00:01:51.530 --> 00:01:53.150
So what's going on?

00:01:53.150 --> 00:01:56.400
Well and is ever offered.

00:01:56.400 --> 00:02:01.500
The Java is installed and where the standard libraries or reciting So it is comfortable

00:02:01.500 --> 00:02:03.850
able to compile the source file.

00:02:03.850 --> 00:02:11.650
But it cannot run it because the door class file is reciting in this folder which aunt is

00:02:11.650 --> 00:02:12.550
not aware off,

00:02:12.550 --> 00:02:16.380
so way to tell it explicitly where this class file is reciting.

00:02:16.380 --> 00:02:20.850
So guess what weight to give the class pot,

00:02:20.850 --> 00:02:22.350
just as you see here.

00:02:22.350 --> 00:02:28.040
So this is attack that we're going to use within which we can specify apart element,

00:02:28.040 --> 00:02:30.750
and we can give the pot,

00:02:30.750 --> 00:02:31.760
in our case,

00:02:31.760 --> 00:02:38.020
the doctors filing residing in the same directory and so it's going to be a dot now let's

00:02:38.020 --> 00:02:39.550
see if things will work.

00:02:39.550 --> 00:02:43.380
Sure enough,

00:02:43.380 --> 00:02:45.050
we have this message displayed.

00:02:45.050 --> 00:02:45.280
Hello,

00:02:45.280 --> 00:02:45.750
world.

00:02:45.750 --> 00:02:48.780
Now,

00:02:48.780 --> 00:02:54.100
in case if your job profile is using any external libraries that are not part off standard

00:02:54.100 --> 00:02:55.170
Java libraries,

00:02:55.170 --> 00:02:58.770
then you'll have to provide class spot here as well,

00:02:58.770 --> 00:03:00.250
just as you did here.

00:03:00.250 --> 00:03:01.970
But in this case,

00:03:01.970 --> 00:03:05.790
we don't need one as we're just simply using the Java standard library.

00:03:05.790 --> 00:03:06.850
So we're good.

00:03:06.850 --> 00:03:12.660
But here is what is we need to note the class part.

00:03:12.660 --> 00:03:18.920
So this is just to show an example how a part is used within a task.

00:03:18.920 --> 00:03:24.790
We could have many more of the task which may need a part like this.

00:03:24.790 --> 00:03:25.570
Now,

00:03:25.570 --> 00:03:26.220
in this case,

00:03:26.220 --> 00:03:27.950
we just have one drawer class file,

00:03:27.950 --> 00:03:31.040
and so we can just get it over with this simple statement.

00:03:31.040 --> 00:03:32.770
But in real time projects,

00:03:32.770 --> 00:03:34.990
this class part may get little complex.

00:03:34.990 --> 00:03:41.250
So let me show you various ways you can define a class spot,

00:03:41.250 --> 00:03:44.650
have created this document,

00:03:44.650 --> 00:03:47.970
you can take a look at it.

00:03:47.970 --> 00:03:52.480
So here is one way to define a class pot.

00:03:52.480 --> 00:03:59.350
I'm using the part element along with their tribute location and this location points to an

00:03:59.350 --> 00:04:00.600
external jar file,

00:04:00.600 --> 00:04:05.050
which means we're going to use all the dark class files residing in this jar file.

00:04:05.050 --> 00:04:07.730
Alternatively,

00:04:07.730 --> 00:04:10.990
you can also specify the same like this.

00:04:10.990 --> 00:04:12.840
You condemn tickly.

00:04:12.840 --> 00:04:26.400
Copy this attribute to the class pot tag and similarly can also give a location off a part

00:04:26.400 --> 00:04:31.650
where you may be having multiple jar files and our class files mixed together.

00:04:31.650 --> 00:04:37.390
So in here are specified this property and whose well is going to point to the directory

00:04:37.390 --> 00:04:38.690
off the class part.

00:04:38.690 --> 00:04:42.350
And I'm referring to this particular property in here.

00:04:42.350 --> 00:04:52.060
Did you know that this time that tribute is part not the location and alternately can also

00:04:52.060 --> 00:05:00.640
make the Saturday part of the class part tag itself like you see here you can also specify

00:05:00.640 --> 00:05:03.750
a class part by including a set off files.

00:05:03.750 --> 00:05:04.910
And for that,

00:05:04.910 --> 00:05:10.630
you're going to use this type file set again moron types at later point of time.

00:05:10.630 --> 00:05:16.060
But what this means is we wanted to include all the dark jar files residing in the lib

00:05:16.060 --> 00:05:16.790
directory.

00:05:16.790 --> 00:05:17.880
Regardless,

00:05:17.880 --> 00:05:21.050
off of the jar file is reciting in a subdirectory or not.

00:05:21.050 --> 00:05:25.160
We won't include all the jar files inside the laboratory,

00:05:25.160 --> 00:05:28.890
and we're going to consider them in over task.

00:05:28.890 --> 00:05:29.610
Now,

00:05:29.610 --> 00:05:30.480
you may ask me,

00:05:30.480 --> 00:05:34.150
What's the difference between using the file said versus apart?

00:05:34.150 --> 00:05:35.320
Well,

00:05:35.320 --> 00:05:37.530
when you specify apart like this,

00:05:37.530 --> 00:05:41.530
this is as good as specifying the spot inside the system,

00:05:41.530 --> 00:05:42.550
but variable.

00:05:42.550 --> 00:05:44.180
But where is here?

00:05:44.180 --> 00:05:50.030
We're telling aunt to take a look at all the jar files under a specific directory.

00:05:50.030 --> 00:05:54.450
You're also going to get more control on what kind of files that you want to consider,

00:05:54.450 --> 00:05:58.290
whereas in here that's not the case.

00:05:58.290 --> 00:06:02.800
You grew apart to a folder order directory,

00:06:02.800 --> 00:06:07.740
and it's going to be considered as a system part variable well,

00:06:07.740 --> 00:06:11.200
more or less similarly,

00:06:11.200 --> 00:06:13.850
we have another type they're set,

00:06:13.850 --> 00:06:21.410
which will let us include a directory versus piles.

00:06:21.410 --> 00:06:28.440
So in here we wanted to include everything that is deciding inside this directory classes

00:06:28.440 --> 00:06:29.150
directory.

00:06:29.150 --> 00:06:30.560
And in fact,

00:06:30.560 --> 00:06:37.120
you can also use the stag exclude to tell and what are all the files that you don't want to

00:06:37.120 --> 00:06:39.770
consider as part of a class part?

00:06:39.770 --> 00:06:48.620
And know that this part is actually related to the path or the directory that you specify

00:06:48.620 --> 00:06:49.180
In here,

00:06:49.180 --> 00:06:57.040
you can combine all these and specify a single class part,

00:06:57.040 --> 00:06:58.450
just as we did here.

00:06:58.450 --> 00:07:09.040
So you're gonna include apart as several files a location as well as set off directories,

00:07:09.040 --> 00:07:09.830
etcetera,

00:07:09.830 --> 00:07:11.710
and together before my class part.

00:07:11.710 --> 00:07:17.070
We can specify this class part that spot off task like,

00:07:17.070 --> 00:07:17.700
for example,

00:07:17.700 --> 00:07:19.250
Java C or Java task.

00:07:19.250 --> 00:07:20.950
And finally,

00:07:20.950 --> 00:07:25.000
if you want to use a class part in multiple tasks,

00:07:25.000 --> 00:07:27.250
for example to go back,

00:07:27.250 --> 00:07:30.800
let's I wanted to use the same class about here as well.

00:07:30.800 --> 00:07:34.950
Then you don't have to copy it everywhere you need it.

00:07:34.950 --> 00:07:42.930
You can just simply make it part off this pot tag and give it some I d.

00:07:42.930 --> 00:07:47.950
So that you can include class spot but referencing toe that I d.

00:07:47.950 --> 00:07:55.600
So the statement in here is equal into creating a transport like this,

00:07:55.600 --> 00:07:58.900
but the content in star,

00:07:58.900 --> 00:08:01.950
it would be this.

00:08:01.950 --> 00:08:13.050
We're actually going to take an example on writing the builder maximal for our project,

00:08:13.050 --> 00:08:19.410
thereby We're going to combine everything what we've learned so far and then you'll get a

00:08:19.410 --> 00:08:20.250
better picture.

00:08:20.250 --> 00:08:22.660
All right.

00:08:22.660 --> 00:08:24.450
I guess that's it on this video.

00:08:24.450 --> 00:08:25.930
See you soon.

