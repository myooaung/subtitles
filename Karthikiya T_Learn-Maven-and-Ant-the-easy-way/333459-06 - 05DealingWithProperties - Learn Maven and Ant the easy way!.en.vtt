WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.160
in this video,

00:00:01.160 --> 00:00:03.550
we're going to talk about properties.

00:00:03.550 --> 00:00:09.780
The properties that you specify in an XML document is equal into properties that you

00:00:09.780 --> 00:00:11.650
specify in a programming language.

00:00:11.650 --> 00:00:14.100
Take the example off a Java program.

00:00:14.100 --> 00:00:17.760
He would have a couple of variables like this.

00:00:17.760 --> 00:00:23.250
The value trip on 14 can be the presented using this variable pie.

00:00:23.250 --> 00:00:24.120
Similarly,

00:00:24.120 --> 00:00:25.850
this Ural can be represented.

00:00:25.850 --> 00:00:28.790
He wasn't this variable,

00:00:28.790 --> 00:00:29.460
Ural.

00:00:29.460 --> 00:00:35.650
The same thing can be accomplished in your and maximal document,

00:00:35.650 --> 00:00:37.470
just as you see here.

00:00:37.470 --> 00:00:40.590
So basically have a key and a value pair.

00:00:40.590 --> 00:00:41.550
Similarly,

00:00:41.550 --> 00:00:45.250
you have a key and the value pair as well.

00:00:45.250 --> 00:00:52.930
You're going to use this task property to be able to define your own property just as you

00:00:52.930 --> 00:00:53.590
see here.

00:00:53.590 --> 00:00:58.400
And the advantage off using the property is similar to that wanted us.

00:00:58.400 --> 00:01:01.490
You have in using a variable in programming language,

00:01:01.490 --> 00:01:02.900
for instance.

00:01:02.900 --> 00:01:08.090
You don't have to type this value everywhere in your program.

00:01:08.090 --> 00:01:10.820
You can just use this variable name instead.

00:01:10.820 --> 00:01:12.370
It's very readable.

00:01:12.370 --> 00:01:13.190
Also,

00:01:13.190 --> 00:01:14.680
if you want to make changes,

00:01:14.680 --> 00:01:17.810
you don't have to make changes everywhere.

00:01:17.810 --> 00:01:20.090
Where about this values reciting in your program?

00:01:20.090 --> 00:01:20.800
Instead,

00:01:20.800 --> 00:01:26.050
you can just change it in the variable itself and it would get reflected everywhere.

00:01:26.050 --> 00:01:27.600
So likewise,

00:01:27.600 --> 00:01:31.670
you're going to represent this value by using this key,

00:01:31.670 --> 00:01:35.830
and you're going to use it across your example document in your task.

00:01:35.830 --> 00:01:36.590
Similarly,

00:01:36.590 --> 00:01:39.360
you don't have to type the entire euro everywhere.

00:01:39.360 --> 00:01:39.710
Instead,

00:01:39.710 --> 00:01:43.000
you can just represent this Euro isn't this key.

00:01:43.000 --> 00:01:49.490
And you're gonna use this key across your XML document so that tomorrow let's that you

00:01:49.490 --> 00:01:51.310
wanted to point to a different website,

00:01:51.310 --> 00:01:56.900
Then you can just simply change it or here and it would get reflected across your entire

00:01:56.900 --> 00:01:57.650
document.

00:01:57.650 --> 00:01:59.310
So that's ah,

00:01:59.310 --> 00:02:05.150
quick understanding on properties and you can see how we defined one here,

00:02:05.150 --> 00:02:08.660
something is defined or here as well.

00:02:08.660 --> 00:02:12.440
But unlike in Java Bay have multiple data types,

00:02:12.440 --> 00:02:14.950
you're not going to have any data types in here.

00:02:14.950 --> 00:02:18.090
Everything is considered to be a string,

00:02:18.090 --> 00:02:21.890
so this is not considered as an indigent or something.

00:02:21.890 --> 00:02:24.620
This is still a string equal into this.

00:02:24.620 --> 00:02:34.740
So we have a couple off property specified here and I'm just using this task echo tobe able

00:02:34.740 --> 00:02:39.620
to display them and in order to display them unit to use the fallings in tax,

00:02:39.620 --> 00:02:45.150
we're going to start by saying dollar sign and then starting college brace.

00:02:45.150 --> 00:02:54.410
You want to specify the key name and you end with the Cali brace and this particular piece

00:02:54.410 --> 00:03:00.890
off code is actually going to display the value that is corresponding to this key.

00:03:00.890 --> 00:03:05.510
So you're gonna use dollar calibrates and in vertical brace,

00:03:05.510 --> 00:03:07.440
so similarly,

00:03:07.440 --> 00:03:12.850
were also displaying this particular property isn't the same syntax.

00:03:12.850 --> 00:03:17.150
The rest of the text is just for presentation Purpose.

00:03:17.150 --> 00:03:23.750
When we run this example document were going toe say this text as simple as that.

00:03:23.750 --> 00:03:25.410
Similarly,

00:03:25.410 --> 00:03:29.160
there are certain properties which you don't have to manually define.

00:03:29.160 --> 00:03:34.430
You can get the access to the system properties and as an example,

00:03:34.430 --> 00:03:36.360
even to say Oh yes,

00:03:36.360 --> 00:03:40.600
stands for operating system dot name to display the OS name.

00:03:40.600 --> 00:03:45.580
Similarly another example Office system property would be Jaradat v.

00:03:45.580 --> 00:03:51.460
M dot vendor is going to display the JV and vendor name off the JV in vendor Nor case it's

00:03:51.460 --> 00:03:58.640
Oracle and we have host off such system properties we can use in a maximal document and

00:03:58.640 --> 00:04:04.310
I've actually created a document for the same where have listed all the list off system

00:04:04.310 --> 00:04:10.380
properties available that you can use in your example document and just take a look at it

00:04:10.380 --> 00:04:12.790
along with their descriptions.

00:04:12.790 --> 00:04:16.820
And similarly,

00:04:16.820 --> 00:04:18.820
we also have building properties.

00:04:18.820 --> 00:04:20.690
An example of what you can see here.

00:04:20.690 --> 00:04:23.190
We're trying to display the best directory.

00:04:23.190 --> 00:04:30.260
This would be whatever the attribute that you given the project tag similarly can also

00:04:30.260 --> 00:04:34.520
display the and home the home directory off the end.

00:04:34.520 --> 00:04:42.740
And this is going to be whatever the enrollment variable that you said finally can also use

00:04:42.740 --> 00:04:46.780
a matter like to string to display at type.

00:04:46.780 --> 00:04:48.970
Now we haven't it talked about types.

00:04:48.970 --> 00:04:51.120
We'll talk about it.

00:04:51.120 --> 00:04:52.610
Incoming videos.

00:04:52.610 --> 00:04:54.710
But just for the sake of this example,

00:04:54.710 --> 00:05:02.050
here is an example off a type file set and is actually going to represent all the files

00:05:02.050 --> 00:05:03.160
that we mentioned here.

00:05:03.160 --> 00:05:03.770
In our case.

00:05:03.770 --> 00:05:09.790
We're just trying to consider all the XML files in the current directory,

00:05:09.790 --> 00:05:16.850
and we won't do refer to this type using this identify i d.

00:05:16.850 --> 00:05:21.950
And in here I'm just trying to echo this particular type.

00:05:21.950 --> 00:05:26.930
Why isn't this to string method to string colon,

00:05:26.930 --> 00:05:29.080
and then the i d.

00:05:29.080 --> 00:05:30.660
The reference I D.

00:05:30.660 --> 00:05:33.060
And obviously not to display.

00:05:33.060 --> 00:05:34.680
We're going to use the syntax,

00:05:34.680 --> 00:05:37.710
dollar calibrates and end with a collie brace.

00:05:37.710 --> 00:05:45.000
So this were basically display this particular type based on how the court is written in

00:05:45.000 --> 00:05:47.680
the and library for this type again,

00:05:47.680 --> 00:05:49.970
we're going to talk about types at later point of time.

00:05:49.970 --> 00:05:50.860
But for now,

00:05:50.860 --> 00:05:53.980
just try to get some understanding on this particular statement.

00:05:53.980 --> 00:05:55.750
Pretty straightforward.

00:05:55.750 --> 00:06:03.730
You can think of this as we're trying to display an object using gets to string method and

00:06:03.730 --> 00:06:03.730
,

00:06:03.730 --> 00:06:04.200
in fact,

00:06:04.200 --> 00:06:05.130
behind the scenes.

00:06:05.130 --> 00:06:08.190
It is going to be a two string method,

00:06:08.190 --> 00:06:12.850
so let's see how everything goes by running the script.

00:06:12.850 --> 00:06:19.600
So use the defined properties and you're going to see about the properties that we defined

00:06:19.600 --> 00:06:24.570
in here as well as you see system properties built in properties.

00:06:24.570 --> 00:06:26.660
So we got the oils name in Dustin.

00:06:26.660 --> 00:06:33.460
Wender is going to be Oracle Corporation Building Properties based directory is actually

00:06:33.460 --> 00:06:39.090
going to display the absolute part to the current directory because that's what is

00:06:39.090 --> 00:06:44.320
considered when you don't give any attribute in here to set the Bears directory is just

00:06:44.320 --> 00:06:46.040
going to assume the directory.

00:06:46.040 --> 00:06:46.570
Toby,

00:06:46.570 --> 00:06:48.610
wherever you're XML file is reciting,

00:06:48.610 --> 00:06:58.300
and so we have the following result and home is is exactly the same and finally to string

00:06:58.300 --> 00:07:00.080
off files that type.

00:07:00.080 --> 00:07:03.820
So we got a couple of facsimil documents in the current directory,

00:07:03.820 --> 00:07:06.140
and so they're being displayed,

00:07:06.140 --> 00:07:10.250
so you can't really control how this is going to get displayed.

00:07:10.250 --> 00:07:16.220
It's all written in the two string logic off this particular type file set again.

00:07:16.220 --> 00:07:20.860
We're going to talk about types and coming videos last year.

00:07:20.860 --> 00:07:24.180
Like to mention that he can also have a Properties file created.

00:07:24.180 --> 00:07:25.280
Let me show you what I mean.

00:07:25.280 --> 00:07:29.250
I'm going to create a properties file quickly.

00:07:29.250 --> 00:07:34.990
Let's call it build Dart Properties,

00:07:34.990 --> 00:07:38.850
fire the mad couple of entries in here.

00:07:38.850 --> 00:07:42.890
I'm going to say some name equals,

00:07:42.890 --> 00:07:52.150
so we know that Dark Properties all will have given repairs and some value more to save it

00:07:52.150 --> 00:07:52.150
.

00:07:52.150 --> 00:07:53.650
And let's go here.

00:07:53.650 --> 00:07:59.320
We're going to write a task here that will refer to this particular properties file so that

00:07:59.320 --> 00:08:04.730
now we can actually use this properties file to deal with our properties.

00:08:04.730 --> 00:08:05.060
Now,

00:08:05.060 --> 00:08:08.700
this statement is equal into this one.

00:08:08.700 --> 00:08:12.350
Let me show you what I mean.

00:08:12.350 --> 00:08:15.720
You're going to use the same task property.

00:08:15.720 --> 00:08:21.750
But this time the attribute is going to change to file,

00:08:21.750 --> 00:08:28.850
and we would point to that file build dot properties.

00:08:28.850 --> 00:08:32.060
We don't need this now.

00:08:32.060 --> 00:08:33.540
We can actually display.

00:08:33.540 --> 00:08:36.100
Isn't the eco message something like this?

00:08:36.100 --> 00:08:41.150
And let's give its key name.

00:08:41.150 --> 00:08:44.450
What?

00:08:44.450 --> 00:08:46.570
Let's get it off all of this.

00:08:46.570 --> 00:08:49.150
Let's keep the text more relevant.

00:08:49.150 --> 00:08:55.950
So let's say from properties file or whatever.

00:08:55.950 --> 00:08:57.380
It doesn't matter.

00:08:57.380 --> 00:09:03.450
And let's Renault script and see if things work.

00:09:03.450 --> 00:09:03.850
Well,

00:09:03.850 --> 00:09:04.870
well,

00:09:04.870 --> 00:09:05.490
they did.

00:09:05.490 --> 00:09:07.180
You see that?

00:09:07.180 --> 00:09:07.530
Wild?

00:09:07.530 --> 00:09:13.110
You all right?

00:09:13.110 --> 00:09:13.570
That's it.

00:09:13.570 --> 00:09:14.510
On properties.

00:09:14.510 --> 00:09:15.960
See you soon.

