WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.870
in this video,

00:00:00.870 --> 00:00:05.410
we're going to talk about snapshot abortion and for the sake off this example,

00:00:05.410 --> 00:00:06.390
that is a gin,

00:00:06.390 --> 00:00:10.540
that I have an organisation within which I have a couple of projects,

00:00:10.540 --> 00:00:14.980
and one of the project is actually dependent on the other.

00:00:14.980 --> 00:00:21.340
So assume that I'm working on Project A and my project is dependent on another project

00:00:21.340 --> 00:00:22.890
within the same organization.

00:00:22.890 --> 00:00:24.410
Put his Project X.

00:00:24.410 --> 00:00:25.110
Now,

00:00:25.110 --> 00:00:26.690
for the sake of explanation,

00:00:26.690 --> 00:00:29.970
I have actually created couple off eclipse and romance,

00:00:29.970 --> 00:00:37.080
and in each enrolment we have each individual project but unit assume that this particular

00:00:37.080 --> 00:00:42.240
eclipse and Roman is reciting in another computer and some other developers actually

00:00:42.240 --> 00:00:46.650
working on Project X while me in my computer,

00:00:46.650 --> 00:00:48.330
I'm working on Project A.

00:00:48.330 --> 00:00:52.940
Not since I have all the dimension that Project A is dependent on Project X.

00:00:52.940 --> 00:00:58.590
I need to add the dependency off Project Tex in Project Days bomb dot xml file.

00:00:58.590 --> 00:01:00.990
I have actually done that,

00:01:00.990 --> 00:01:03.520
and here it is.

00:01:03.520 --> 00:01:06.900
Here's how I specified.

00:01:06.900 --> 00:01:10.710
But things may not work so smooth in real world.

00:01:10.710 --> 00:01:11.900
For example,

00:01:11.900 --> 00:01:14.660
let's say that both the projects are in progress.

00:01:14.660 --> 00:01:15.520
I mean,

00:01:15.520 --> 00:01:18.980
let's say that Project X is in progress.

00:01:18.980 --> 00:01:25.870
That means until the developer off Project X makes all the changes he needs to do and make

00:01:25.870 --> 00:01:28.050
it available in the remote repository.

00:01:28.050 --> 00:01:35.900
I cannot really work on my project because my project is actually dependent on Project X

00:01:35.900 --> 00:01:41.110
and the artifact off Project X is not available in the remote repository because it is

00:01:41.110 --> 00:01:42.110
under progress.

00:01:42.110 --> 00:01:43.840
So we thought so.

00:01:43.840 --> 00:01:45.700
Called the feature off snapshots.

00:01:45.700 --> 00:01:48.500
I would have to wait for a month or two.

00:01:48.500 --> 00:01:57.420
I have to sit I little before Project X artifact is made available for me to download into

00:01:57.420 --> 00:01:58.800
my local depository.

00:01:58.800 --> 00:02:05.030
And then I start working on a project A that is terrible West off productivity and is going

00:02:05.030 --> 00:02:06.370
to West Lot off time.

00:02:06.370 --> 00:02:12.820
What can we do in here so that both the developers can work simultaneously?

00:02:12.820 --> 00:02:15.200
The answer is snapshot wash in.

00:02:15.200 --> 00:02:21.300
So the developer of Project X is going to realize the fact that there are many other

00:02:21.300 --> 00:02:24.640
projects which are dependent on his project.

00:02:24.640 --> 00:02:28.240
So what he's going to do is just going to go to his bomb,

00:02:28.240 --> 00:02:29.080
that XML,

00:02:29.080 --> 00:02:34.950
and then he's going to make this worse shin as snapshot.

00:02:34.950 --> 00:02:45.910
So no by specifying this keyword snapshot along with the case,

00:02:45.910 --> 00:02:50.920
the Dola Per is actually instructing maven that the project is under progress,

00:02:50.920 --> 00:02:55.410
and if anybody wants to download his artifact and using the project,

00:02:55.410 --> 00:02:56.970
they can do so.

00:02:56.970 --> 00:03:00.610
But be warned that the project is still in progress.

00:03:00.610 --> 00:03:02.590
The development is not done yet.

00:03:02.590 --> 00:03:06.380
And inside my project A.

00:03:06.380 --> 00:03:08.960
That's exactly what I'm going to specify.

00:03:08.960 --> 00:03:12.850
I'm going to say hyphen snapshot.

00:03:12.850 --> 00:03:14.990
And by doing so,

00:03:14.990 --> 00:03:21.240
I'm instructing Maven that remember that Project X is under progress.

00:03:21.240 --> 00:03:22.320
But still,

00:03:22.320 --> 00:03:28.040
I risk downloading the artifact and using my project so that I can continue with my

00:03:28.040 --> 00:03:29.680
development off Project A.

00:03:29.680 --> 00:03:31.870
It's as simple as that.

00:03:31.870 --> 00:03:37.680
So every time the dollar per off project that's going to do may even install,

00:03:37.680 --> 00:03:42.200
the artifact will get deployed into the remote repository.

00:03:42.200 --> 00:03:47.700
And when the maven deploys the artifact onto the remote repository,

00:03:47.700 --> 00:03:50.150
it replaces this particular string.

00:03:50.150 --> 00:03:56.100
Are this particular keyword with the current times tramp somewhat like this?

00:03:56.100 --> 00:03:59.810
If this is what you have specified in your palm,

00:03:59.810 --> 00:04:00.680
for example,

00:04:00.680 --> 00:04:03.830
it would get replaced with the wash in,

00:04:03.830 --> 00:04:08.940
and then this keyword snapshot will get replaced with a random numerical.

00:04:08.940 --> 00:04:10.050
Basically,

00:04:10.050 --> 00:04:13.600
the number is dependent on the current times tramp.

00:04:13.600 --> 00:04:15.010
It keeps changing.

00:04:15.010 --> 00:04:22.760
So now the remote repository will have the artifact with a name like this And on Project

00:04:22.760 --> 00:04:23.290
Day,

00:04:23.290 --> 00:04:26.580
Whenever I tried to build a project or update the project,

00:04:26.580 --> 00:04:32.690
I'm actually going to get the latest version off Project X are defying into my local

00:04:32.690 --> 00:04:33.650
depository.

00:04:33.650 --> 00:04:37.040
If I already have the artifact off Project Texan,

00:04:37.040 --> 00:04:43.660
my local depository 1,000,000 is going to compare the Times tramp on the local depository

00:04:43.660 --> 00:04:44.160
were,

00:04:44.160 --> 00:04:46.940
says the Times tramp on the remote repository.

00:04:46.940 --> 00:04:53.150
And it finds out that the remote repository artifact is latest compared to the one in the

00:04:53.150 --> 00:04:59.130
local depository and is going to download the latest wash in for you to work on.

00:04:59.130 --> 00:05:00.820
And in fact,

00:05:00.820 --> 00:05:05.920
even if the Times tramp in both local and demote repository are same 1,000,000 is still

00:05:05.920 --> 00:05:10.360
going to download the latest one so with the so called a snapshot abortion.

00:05:10.360 --> 00:05:15.220
But the projects can actually work simultaneously so that they wouldn't be lost off

00:05:15.220 --> 00:05:20.680
productivity or loss off time spent on developing the applications.

00:05:20.680 --> 00:05:26.090
And obviously this can be demonstrated right now because we don't have the remote

00:05:26.090 --> 00:05:27.090
repository.

00:05:27.090 --> 00:05:28.490
As of all the dimension,

00:05:28.490 --> 00:05:31.890
it's not really what setting up one at the moment.

00:05:31.890 --> 00:05:33.850
But just for your information,

00:05:33.850 --> 00:05:38.380
the central depository does not support snapshots.

00:05:38.380 --> 00:05:39.040
Abortion.

00:05:39.040 --> 00:05:42.760
It only supports the official releases.

00:05:42.760 --> 00:05:47.800
So if you go to the effect of palm and take a look at what is defined in here,

00:05:47.800 --> 00:05:49.550
it's a snapshot.

00:05:49.550 --> 00:05:51.910
Is set two falls.

00:05:51.910 --> 00:05:57.610
This is mentioning that the reporter is not supporting Snapshot worsens.

00:05:57.610 --> 00:06:00.670
But if you have a remote repository on your own,

00:06:00.670 --> 00:06:08.250
then you would have to configure this snapshot depositary like So you can define these tags

00:06:08.250 --> 00:06:09.900
that didn't upon the XML.

00:06:09.900 --> 00:06:11.110
Or better yet,

00:06:11.110 --> 00:06:12.600
as I've already discussed,

00:06:12.600 --> 00:06:17.940
it's better that you define this in settings or XML under the daughter into directory.

00:06:17.940 --> 00:06:19.750
And here's how you define it.

00:06:19.750 --> 00:06:22.890
He would sort of disabled releases,

00:06:22.890 --> 00:06:24.900
which are the official Russians.

00:06:24.900 --> 00:06:27.440
And then in the snapshots stag.

00:06:27.440 --> 00:06:29.640
You would say that it is enabled,

00:06:29.640 --> 00:06:35.360
meaning that the remote repository is configured to support the snapshot abortions.

00:06:35.360 --> 00:06:37.990
So while setting up the remote repository,

00:06:37.990 --> 00:06:41.290
you need to enable snapshots to be stored.

00:06:41.290 --> 00:06:44.490
Only then can we set this to true,

00:06:44.490 --> 00:06:49.250
and then you can also specify how often you want update the artefacts.

00:06:49.250 --> 00:06:54.800
There are multiple options you can provide in here daily is a default one,

00:06:54.800 --> 00:06:58.360
but you can set it to always.

00:06:58.360 --> 00:07:04.340
Or you can even specify a number off minutes as to how often the update should happen and

00:07:04.340 --> 00:07:04.580
checks.

00:07:04.580 --> 00:07:04.710
Um,

00:07:04.710 --> 00:07:06.450
has something to do with the security.

00:07:06.450 --> 00:07:09.360
But let me tell you that when you're dealing with snapshots,

00:07:09.360 --> 00:07:12.930
you don't have to care too much about encryption,

00:07:12.930 --> 00:07:13.760
etcetera.

00:07:13.760 --> 00:07:17.250
They are applicable with the release versions,

00:07:17.250 --> 00:07:19.790
and with this attack,

00:07:19.790 --> 00:07:21.080
we sort of disabled.

00:07:21.080 --> 00:07:23.460
Hello going to download the releases?

00:07:23.460 --> 00:07:26.850
And here's a depositor location.

00:07:26.850 --> 00:07:28.180
Pretty straightforward,

00:07:28.180 --> 00:07:29.520
alternatively,

00:07:29.520 --> 00:07:31.500
can also specify the falling tag,

00:07:31.500 --> 00:07:33.760
which is snapshot repository,

00:07:33.760 --> 00:07:37.420
and then you would specify the repository details.

00:07:37.420 --> 00:07:39.760
So once you have everything set up,

00:07:39.760 --> 00:07:41.980
you can start working with snapshots.

00:07:41.980 --> 00:07:49.550
Thereby multiple projects which are dependent on each other can work simultaneously.

00:07:49.550 --> 00:07:55.690
And I'm not sure if you've noticed every time we create a new maven project by default,

00:07:55.690 --> 00:08:02.560
the washing is having the following key ward snapshot because of the very reason we just

00:08:02.560 --> 00:08:03.670
created our project.

00:08:03.670 --> 00:08:08.320
Our project is not official yet it's still under development,

00:08:08.320 --> 00:08:09.530
so it makes sense,

00:08:09.530 --> 00:08:10.050
right?

00:08:10.050 --> 00:08:11.530
Hold.

00:08:11.530 --> 00:08:16.810
It's what mentioning that once we're done with the snapshot business and after a lot of

00:08:16.810 --> 00:08:18.160
testing off your project.

00:08:18.160 --> 00:08:23.950
You have to get it off this keyword snapshot and then give it some official wash in

00:08:23.950 --> 00:08:26.650
everywhere in all the projects.

00:08:26.650 --> 00:08:32.270
If you forget to remove this natural dependence is and replace them with the official

00:08:32.270 --> 00:08:32.990
abortions,

00:08:32.990 --> 00:08:39.530
your project is actually going to rely on the under development projects forever until you

00:08:39.530 --> 00:08:43.250
change the dependencies abortion to their official Russians.

