1
00:00:04,315 --> 00:00:09,355
The next set of tags to look at in the core library are the iteration tags,

2
00:00:09,355 --> 00:00:11,365
and there are primarily two of these.

3
00:00:11,365 --> 00:00:16,335
There's a for-each tag and a for-tokens tag.

4
00:00:16,335 --> 00:00:22,345
So on our page, we have a set of tabs, and these tabs are rendered here.

5
00:00:22,345 --> 00:00:24,375
They're in a list.

6
00:00:24,375 --> 00:00:26,355
Whenever you see code like this,

7
00:00:26,355 --> 00:00:30,016
this is a prime candidate for replacement with some form of iteration.

8
00:00:30,016 --> 00:00:33,365
So here for example we're outputting the name of the tab,

9
00:00:33,365 --> 00:00:39,365
the app.tabNames, and also an href for the tab.

10
00:00:39,365 --> 00:00:44,127
You may remember that the way this is set up currently is that in

11
00:00:44,127 --> 00:00:46,355
the ControllerServlet inside the init method,

12
00:00:46,355 --> 00:00:49,365
we create the tab names, so we just create an array of strings,

13
00:00:49,365 --> 00:00:54,335
and we call this application.setTabNames,

14
00:00:54,335 --> 00:01:00,365
and application.setTabNames stores these tab names inside an array.

15
00:01:00,365 --> 00:01:04,315
We can then set the applicationSettings into the ServletContext,

16
00:01:04,315 --> 00:01:07,305
so these names are then available within the page,

17
00:01:07,305 --> 00:01:10,325
and we use the names here.

18
00:01:10,325 --> 00:01:13,663
What we'd like to do is to have a structure that

19
00:01:13,663 --> 00:01:16,365
will associate the name of the tab, home,

20
00:01:16,365 --> 00:01:23,305
with the href, and to do that we've created a new class called Tab,

21
00:01:23,305 --> 00:01:26,325
and Tab has a name and a URL.

22
00:01:26,325 --> 00:01:29,369
So we'll use the for-each tag to replace this hard-coded

23
00:01:29,369 --> 00:01:33,345
set of list items in the tab list.

24
00:01:33,345 --> 00:01:37,385
So to do that we need to add c:forEach here,

25
00:01:37,385 --> 00:01:40,325
and that has an items attribute,

26
00:01:40,325 --> 00:01:45,315
and the items attribute specifies the item that we want to iterate over.

27
00:01:45,315 --> 00:01:50,295
You can iterate over any collection, so an array, a list, maybe a hash map.

28
00:01:50,295 --> 00:01:52,325
In this case we're going to iterate over a list,

29
00:01:52,325 --> 00:01:53,385
and the list is called tabs,

30
00:01:53,385 --> 00:01:57,325
and tabs is stored in the ApplicationSettings object,

31
00:01:57,325 --> 00:01:59,315
and that's part of the request scope.

32
00:01:59,315 --> 00:02:05,375
So in here you can say $ app.tabs.

33
00:02:05,375 --> 00:02:08,367
Each time the for-each tag iterates,

34
00:02:08,367 --> 00:02:13,325
it stores the reference to the current item in a variable.

35
00:02:13,325 --> 00:02:14,365
We give that variable a name.

36
00:02:14,365 --> 00:02:15,615
So we can save var=,

37
00:02:15,615 --> 00:02:26,345
in this case we'll just say var=tab Each tab in here is of type tab,

38
00:02:26,345 --> 00:02:27,365
and that's defined here.

39
00:02:27,365 --> 00:02:31,325
Each of these has a name and a URL,

40
00:02:31,325 --> 00:02:33,340
and these are set up in the same way that list was

41
00:02:33,340 --> 00:02:36,315
previously set up inside the ControllerServlet,

42
00:02:36,315 --> 00:02:39,695
so inside here we create an ArrayList of tab objects,

43
00:02:39,695 --> 00:02:44,325
and each of these has text that will appear on the page,

44
00:02:44,325 --> 00:02:48,365
and the URL that we will go to when we click on that tab.

45
00:02:48,365 --> 00:02:51,365
Just to make things slightly different here, we've added five tabs.

46
00:02:51,365 --> 00:02:55,375
There's SignIn, Home, Profile, Messages, and Settings.

47
00:02:55,375 --> 00:02:57,380
We've done that just so that when we refresh the

48
00:02:57,380 --> 00:03:00,365
page we can see these differences.

49
00:03:00,365 --> 00:03:02,129
So we create the tabs list,

50
00:03:02,129 --> 00:03:05,355
and we set that inside the ApplicationSettings object,

51
00:03:05,355 --> 00:03:10,295
and that is then stored inside the ServletContext.

52
00:03:10,295 --> 00:03:14,606
So the ApplicationSettings object has a list of tabs that

53
00:03:14,606 --> 00:03:18,375
we can access from inside the page.

54
00:03:18,375 --> 00:03:24,325
So back in the page, we now need to output a list item for each of these tabs,

55
00:03:24,325 --> 00:03:31,385
so just grabbing one of these, and we can now edit this.

56
00:03:31,385 --> 00:03:36,325
So rather than hard coding these values on the page,

57
00:03:36,325 --> 00:03:41,295
we can use an expression, we can say $tab,

58
00:03:41,295 --> 00:03:45,315
which is the variable name defined here,

59
00:03:45,315 --> 00:03:58,365
and then for this thing, say .url, and over here say $ tab.name.

60
00:03:58,365 --> 00:04:00,315
And we'll get rid of this list.

61
00:04:00,315 --> 00:04:04,305
So if I redeployed the code, back in the browser if I refresh,

62
00:04:04,305 --> 00:04:12,335
I should see five tabs, and sure enough we now have the Messages tab.

63
00:04:12,335 --> 00:04:17,325
So the iteration code has greatly simplified the UI

64
00:04:17,325 --> 00:04:18,385
and it's made the page more dynamic.

65
00:04:18,385 --> 00:04:21,355
We could certainly read this list of tabs now from a database.

66
00:04:21,355 --> 00:04:24,047
That means that as an admin user, we could go in,

67
00:04:24,047 --> 00:04:30,000
add new tabs when we need to, and we wouldn't need to go back in and edit the JavaServer Pages to do that.

