1
00:00:02,467 --> 00:00:04,842
The next two tags we're going to take a look at are

2
00:00:04,842 --> 00:00:07,467
the import tag and the URL tag.

3
00:00:07,467 --> 00:00:10,397
The import tag is like an include tag,

4
00:00:10,397 --> 00:00:12,407
and it lets us bring other data into the page.

5
00:00:12,407 --> 00:00:15,407
So we can include for example other HTML files,

6
00:00:15,407 --> 00:00:17,457
we could bring that data maybe from another server,

7
00:00:17,457 --> 00:00:20,467
we could bring that data from another what's called a context on this server,

8
00:00:20,467 --> 00:00:20,842
i.e.

9
00:00:20,842 --> 00:00:23,467
another application running on the same server.

10
00:00:23,467 --> 00:00:28,417
When we import the data, we can also store the data inside a variable.

11
00:00:28,417 --> 00:00:30,467
That lets us reuse the input on the page.

12
00:00:30,467 --> 00:00:32,477
So rather than running multiple import tags,

13
00:00:32,477 --> 00:00:35,407
which may be costly, we can run the tag once,

14
00:00:35,407 --> 00:00:38,467
store the data, and then display that data multiple times.

15
00:00:38,467 --> 00:00:40,427
So within the page currently,

16
00:00:40,427 --> 00:00:44,447
we include the header.jsp file that's included here,

17
00:00:44,447 --> 00:00:47,397
and if we look at the page inside the browser,

18
00:00:47,397 --> 00:00:49,407
so that gives us this section here within the page.

19
00:00:49,407 --> 00:00:51,417
That's the navigation section.

20
00:00:51,417 --> 00:00:57,694
And if we take that page, include out, and refresh the browser,

21
00:00:57,694 --> 00:01:00,477
we see the header's disappeared.

22
00:01:00,477 --> 00:01:08,427
So in the page what we could do is to use the import tag, so that's c:import.

23
00:01:08,427 --> 00:01:13,397
We specify a URL, which is header.jsp, and we can just close that off.

24
00:01:13,397 --> 00:01:17,457
And if we go back to the browser, and we should get the header back.

25
00:01:17,457 --> 00:01:19,387
And sure enough, the header's there.

26
00:01:19,387 --> 00:01:23,387
Now in this case, the input tag is perhaps not appropriate,

27
00:01:23,387 --> 00:01:26,591
as the include tag does the job perfectly well; however,

28
00:01:26,591 --> 00:01:29,437
there may be occasions where we want to reuse the data we import.

29
00:01:29,437 --> 00:01:32,477
So to do that we can say var=, and give this variable a name,

30
00:01:32,477 --> 00:01:36,477
and in this case maybe _header.

31
00:01:36,477 --> 00:01:40,437
If we rerun the page now, we'll see the header disappears.

32
00:01:40,437 --> 00:01:44,437
That's because now it's reading in the data, but storing it inside the variable.

33
00:01:44,437 --> 00:01:47,467
And to display that header now, you need to use an expression,

34
00:01:47,467 --> 00:01:52,437
so we'd say dollar brace, and inside here we'll just put the variable name,

35
00:01:52,437 --> 00:01:55,387
and the expression will just render the variable.

36
00:01:55,387 --> 00:01:59,770
If we go back to the page and refresh, we get the header,

37
00:01:59,770 --> 00:02:06,457
and indeed we could use this in multiple places,

38
00:02:06,457 --> 00:02:09,427
and we see the header appearing each time we use the expression.

39
00:02:09,427 --> 00:02:10,477
Not a good idea in this case obviously,

40
00:02:10,477 --> 00:02:15,467
but it's something you can do with the tag and something that might be useful.

41
00:02:15,467 --> 00:02:18,910
So we use URLs inside a web application in many,

42
00:02:18,910 --> 00:02:23,437
many places, but they aren't issued when we create URLs inside a web application.

43
00:02:23,437 --> 00:02:27,680
That's primarily because the browser has no concept of

44
00:02:27,680 --> 00:02:29,437
what a web application actually is.

45
00:02:29,437 --> 00:02:31,437
Remember that when we deploy the application,

46
00:02:31,437 --> 00:02:35,437
we deploy it to a server, and then to an application in that server,

47
00:02:35,437 --> 00:02:37,447
and often when we create URLs,

48
00:02:37,447 --> 00:02:41,387
we'd like to create the URL relative to the application itself.

49
00:02:41,387 --> 00:02:45,387
However, depending on how we generate the URL inside the server,

50
00:02:45,387 --> 00:02:47,447
if we use something like / somepage.jsp,

51
00:02:47,447 --> 00:02:51,156
that forward slash says to the browser that this URL is

52
00:02:51,156 --> 00:02:52,467
relative to the root of the server,

53
00:02:52,467 --> 00:02:58,417
so we'd end up with a URL that looks like http:// myserver.com / sompage.jsp.

54
00:02:58,417 --> 00:02:59,629
If we leave the slash out,

55
00:02:59,629 --> 00:03:03,397
then we end up with a URL that's relative to the current page,

56
00:03:03,397 --> 00:03:06,960
so that will give us myserver.com /application name/ where

57
00:03:06,960 --> 00:03:10,407
this page is in the application/page name.

58
00:03:10,407 --> 00:03:14,407
So if we need just to create a URL that was relative to the application,

59
00:03:14,407 --> 00:03:19,387
that's impossible to do just using a standard anchor tag with an href.

60
00:03:19,387 --> 00:03:22,417
So to fix that, we can use the url tag.

61
00:03:22,417 --> 00:03:27,467
The url tag allows us to create application-relative URLs.

62
00:03:27,467 --> 00:03:32,477
And we can do that by simply using c:url as the name of the tag,

63
00:03:32,477 --> 00:03:37,467
and then specifying the value, which is the value of the URL we want to create.

64
00:03:37,467 --> 00:03:38,472
Just like the import tag,

65
00:03:38,472 --> 00:03:41,467
we can store the value of this URL inside a variable name,

66
00:03:41,467 --> 00:03:47,447
and again use that within many places within the page.

67
00:03:47,447 --> 00:03:52,477
To illustrate how this works, I've set up a very simple JavaServer Page here.

68
00:03:52,477 --> 00:03:56,457
This JavaServer Page is called home.jsp,

69
00:03:56,457 --> 00:04:01,447
and it's in the app directory of the application itself.

70
00:04:01,447 --> 00:04:08,397
So the URL of this page is hostname/app/app/ home.jsp.

71
00:04:08,397 --> 00:04:11,387
Then within here I've added three anchor tags.

72
00:04:11,387 --> 00:04:15,457
So the first one has an href of / signin.jsp,

73
00:04:15,457 --> 00:04:22,477
the second one has no forward slash, and the third one uses the core url tag,

74
00:04:22,477 --> 00:04:25,452
and inside here that would give it a value of,

75
00:04:25,452 --> 00:04:27,447
again, / signin.jsp.

76
00:04:27,447 --> 00:04:29,407
So based on what we know,

77
00:04:29,407 --> 00:04:33,417
the first URL we see here should be relative to the root of the server.

78
00:04:33,417 --> 00:04:37,387
The second URL should be relative to the root of this particular page,

79
00:04:37,387 --> 00:04:41,397
so that should be /app/app/ signin.jsp.

80
00:04:41,397 --> 00:04:44,467
And the third URL should be relative to the root of this application,

81
00:04:44,467 --> 00:04:50,437
so it should just be /app/ signin.jsp.

82
00:04:50,437 --> 00:04:54,437
So if I run this page in the browser, we can see the three URLs here,

83
00:04:54,437 --> 00:04:58,447
and if I click on each one in turn, we can see that the address bar will change,

84
00:04:58,447 --> 00:05:02,467
and the address bar will change to the URL defined by the href here,

85
00:05:02,467 --> 00:05:05,585
and with the first one, which was a root-relative URL,

86
00:05:05,585 --> 00:05:10,467
if I click on that, the address changes to localhost of / signin.jsp,

87
00:05:10,467 --> 00:05:15,397
so we get the fully server root-relative URL.

88
00:05:15,397 --> 00:05:18,407
The second one we created with a standard href,

89
00:05:18,407 --> 00:05:22,427
but with no forward slash, so that should be the application relative,

90
00:05:22,427 --> 00:05:27,417
so that should go to /app/app and then the signin.jsp,

91
00:05:27,417 --> 00:05:31,417
and if we click on that, sure enough, we get a 404 because the page isn't there,

92
00:05:31,417 --> 00:05:34,477
and it's at /app/app/ signin.jsp.

93
00:05:34,477 --> 00:05:39,387
And the third one was the application relative sign-in page,

94
00:05:39,387 --> 00:05:44,407
so that should go to /app/ signin.jsp, and sure enough we get some input.

95
00:05:44,407 --> 00:05:50,397
We get some display here, and the URL changes to /app/ signin.jsp.

96
00:05:50,397 --> 00:05:52,427
Frequently in a Java web application,

97
00:05:52,427 --> 00:05:55,467
you'll need to create application-relative URLs,

98
00:05:55,467 --> 00:06:00,000
and c:url is your friend. It's the way that you do that.

