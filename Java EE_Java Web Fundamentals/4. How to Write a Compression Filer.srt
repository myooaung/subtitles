1
00:00:00,407 --> 00:00:02,646
So now that we've seen the logging filter and taken a

2
00:00:02,646 --> 00:00:05,397
look at how we wrap up requests,

3
00:00:05,397 --> 00:00:08,427
we'll now take a look at how we wrap up responses.

4
00:00:08,427 --> 00:00:11,447
And we do this because we might want to change the response.

5
00:00:11,447 --> 00:00:12,568
So for example,

6
00:00:12,568 --> 00:00:17,659
imagine we have a website where the response data is coming back as XML and we

7
00:00:17,659 --> 00:00:21,417
need to run an XSLT transform on that to turn it into HTML,

8
00:00:21,417 --> 00:00:24,427
and we can do that with a response wrapper.

9
00:00:24,427 --> 00:00:29,424
So to do this, we create an HttpServletResponseWrapper derived object,

10
00:00:29,424 --> 00:00:34,477
and as we'll see, response wrappers are more interesting than request wrappers.

11
00:00:34,477 --> 00:00:38,427
There's more work to do inside the response wrapper.

12
00:00:38,427 --> 00:00:40,906
We have to cope with at least content length,

13
00:00:40,906 --> 00:00:44,477
content type, the container might call getWriter to write the data,

14
00:00:44,477 --> 00:00:47,427
or it might call getOutputStream to write the data,

15
00:00:47,427 --> 00:00:49,467
and we have to deal with all of these things.

16
00:00:49,467 --> 00:00:53,477
So to show an example of this, we'll write a compression filter.

17
00:00:53,477 --> 00:00:58,467
So what this filter will do is any response that comes back to it will use

18
00:00:58,467 --> 00:01:02,447
the Java GZipOutputStream class to compress the content.

19
00:01:02,447 --> 00:01:04,427
Once the content's compressed,

20
00:01:04,427 --> 00:01:07,145
we have to change the headers going back out of the servlet

21
00:01:07,145 --> 00:01:09,477
container to say this data's now compressed data,

22
00:01:09,477 --> 00:01:12,903
and we have to make sure we set the right content length and

23
00:01:12,903 --> 00:01:16,467
content type headers on the response as well.

24
00:01:16,467 --> 00:01:22,000
And we do that by overriding a response wrapper. So let's see how we do that now.

