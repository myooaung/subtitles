1
00:00:04,760 --> 00:00:09,120
Hello everyone and welcome to part nine function exercises.

2
00:00:09,120 --> 00:00:13,920
Let's take a quick look at some of the function exercises that are here for you to answer the relative

3
00:00:13,920 --> 00:00:19,530
files are part 9 function exercises and part nine function exercises solutions that high.

4
00:00:19,560 --> 00:00:22,160
Let's open them up in the editor and see what they're all about.

5
00:00:22,290 --> 00:00:22,590
OK.

6
00:00:22,590 --> 00:00:28,740
Here we have part nine function exercises open and complete the tasks below by writing functions and

7
00:00:28,740 --> 00:00:31,250
keep in mind these problems are actually meant to be really tough.

8
00:00:31,290 --> 00:00:36,360
Even if you do know Python it's all about breaking the problem down into smaller logical steps and if

9
00:00:36,360 --> 00:00:41,340
you get stuck on this don't feel bad about having to take a peek at the solutions file or at the solutions

10
00:00:41,340 --> 00:00:47,310
lecture for the first problem you'll be given a list of integers and I want you to return true if the

11
00:00:47,310 --> 00:00:51,280
sequence of numbers 1 2 3 appears in the list somewhere.

12
00:00:51,300 --> 00:00:55,950
So for example in this first one here we have 1 two 3 in the center.

13
00:00:55,950 --> 00:00:57,390
So we return true.

14
00:00:57,390 --> 00:00:58,670
Here we don't have one two three.

15
00:00:58,710 --> 00:00:59,880
So we return false.

16
00:00:59,880 --> 00:01:01,030
Here we have 1 2 3.

17
00:01:01,080 --> 00:01:07,830
At the end to return true and just fill out this array check function and here we're actually using

18
00:01:07,830 --> 00:01:08,580
camel cases.

19
00:01:08,580 --> 00:01:10,620
We should be using snake case in Python.

20
00:01:10,620 --> 00:01:12,480
But don't worry about that too much slower.

21
00:01:12,510 --> 00:01:18,540
Either way with Problem 2 given the string we want to return a new string made of every other character

22
00:01:18,540 --> 00:01:19,530
starting with the first.

23
00:01:19,530 --> 00:01:20,760
So hello yields.

24
00:01:20,800 --> 00:01:21,840
H l o.

25
00:01:22,080 --> 00:01:23,470
Again some examples here.

26
00:01:23,610 --> 00:01:27,980
Hopefully you remember string slicing and indexing enough to make this an easy task for you.

27
00:01:28,700 --> 00:01:30,570
And now on to problem 3.

28
00:01:30,800 --> 00:01:32,990
Problem 3 is given two strings.

29
00:01:32,990 --> 00:01:39,210
I want you to return true if either of the strings appears at the very end of the other string and I

30
00:01:39,200 --> 00:01:41,700
want you to also ignore upper and lower case differences.

31
00:01:41,700 --> 00:01:45,140
So in other words the computation should not be case sensitive.

32
00:01:45,350 --> 00:01:46,610
And a quick hint slash.

33
00:01:46,610 --> 00:01:47,140
Note.

34
00:01:47,210 --> 00:01:51,220
You can use estat lower to return the lower case version of a string.

35
00:01:51,230 --> 00:01:53,700
So here we can see three examples that will yield true.

36
00:01:53,990 --> 00:01:56,810
I have high ABC and ABC.

37
00:01:56,810 --> 00:02:00,910
Note that ABC is at the end of the first drink so that returns true.

38
00:02:01,130 --> 00:02:02,380
Then I kind of have the opposite.

39
00:02:02,420 --> 00:02:09,320
ABC and hi ABC ABC is at the end of the second string here so that also returns true and then I have

40
00:02:09,350 --> 00:02:15,800
ABC and then ABC NBC ABC here Piers the end of this once that was hers true again.

41
00:02:15,840 --> 00:02:23,720
If either string is at the end of the other string you return true problem for is given a string return

42
00:02:23,720 --> 00:02:27,800
a string where for every character in the original There are two characters.

43
00:02:28,010 --> 00:02:31,820
So here we're kind of just doubling the characters in the string so you can check out these examples

44
00:02:32,140 --> 00:02:33,440
so get an idea of what I mean.

45
00:02:35,320 --> 00:02:41,380
Then problem 5 is probably the most difficult problem here but it's basically just read this problem

46
00:02:41,380 --> 00:02:45,480
statement carefully and then check out the actual examples here.

47
00:02:45,550 --> 00:02:48,330
So it's kind of a longer read but check it out.

48
00:02:48,370 --> 00:02:50,470
It's probably the trickier problem.

49
00:02:50,470 --> 00:02:56,990
There's two functions for it then problem 6 is a bit easier.

50
00:02:56,990 --> 00:02:59,770
It just says return the number of even integers in the given array.

51
00:03:00,050 --> 00:03:06,110
So this one should be pretty straightforward if you have an off list or an array of comany even integers

52
00:03:06,110 --> 00:03:07,220
are inside of it.

53
00:03:07,480 --> 00:03:12,100
OK thanks everyone and I'll see at the next lecture were actually be programming through solutions.
