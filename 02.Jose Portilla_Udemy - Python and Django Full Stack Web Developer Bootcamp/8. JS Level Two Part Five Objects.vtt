WEBVTT
1
00:00:04.930 --> 00:00:08.260
Hello everyone and welcome back to Part five objects.

2
00:00:08.900 --> 00:00:14.030
And this lecture we're going to be talking about javascript objects and javascript objects are essentially

3
00:00:14.030 --> 00:00:19.400
hash tables they store information in a key value pair in other programming language.

4
00:00:19.400 --> 00:00:22.020
This is sometimes known as a dictionary.

5
00:00:22.140 --> 00:00:29.900
And unlike an array a javascript object will not retain any sort of order the name object can sometimes

6
00:00:29.900 --> 00:00:33.960
be confusing for coming in from another programming language because it sounds so generic.

7
00:00:33.980 --> 00:00:40.330
But keep in mind when someone says javascript objects are talking about a very specific thing now that

8
00:00:40.330 --> 00:00:45.350
typical javascript object is in this form it's inside curly brackets.

9
00:00:45.350 --> 00:00:50.690
And then you have the key colon and then the actual value that's associated with that key and you can

10
00:00:50.720 --> 00:00:53.470
access values through the corresponding key.

11
00:00:53.900 --> 00:00:58.310
All right let's hop to the consul and see some actual examples of this so we can learn more about javascript

12
00:00:58.340 --> 00:00:59.430
objects.

13
00:00:59.450 --> 00:01:01.460
I'm going to hop to my browser now.

14
00:01:01.460 --> 00:01:05.720
OK here I am at my browser of the console open and has a quick note.

15
00:01:05.990 --> 00:01:11.290
The Mozilla Developer Network has a great page on working of objects has a great overview.

16
00:01:11.330 --> 00:01:15.450
Talks about object properties and the various methods you can work with an object.

17
00:01:15.570 --> 00:01:21.050
And there's also a page in W3 schools dot com on javascript objects and what's really common we are

18
00:01:21.050 --> 00:01:27.350
working with objects with the very first time is a car object where you have different aspects of a

19
00:01:27.350 --> 00:01:31.220
car inside of an object so we can see it's actually here on both pages.

20
00:01:31.220 --> 00:01:37.130
So let's continue that trend by creating our first object to be some information about a car and we'll

21
00:01:37.130 --> 00:01:38.800
call it car info.

22
00:01:39.050 --> 00:01:43.310
And I've actually written this previously which is why you see it pop up here but I'm going to make

23
00:01:43.310 --> 00:01:45.030
a variable called car info.

24
00:01:45.050 --> 00:01:50.920
Start with a curly bracket and then the first key I'll have is the make the car and the make of the

25
00:01:50.920 --> 00:01:58.920
car is going to be Toyota then the next car I have is going to be year and it's 1990.

26
00:01:58.920 --> 00:02:05.310
So we can already see that a javascript object can take in and mix data types and then finally I'll

27
00:02:05.310 --> 00:02:08.790
have the model of the car and that will be the string Camry

28
00:02:11.730 --> 00:02:13.050
and then we've close this all off.

29
00:02:13.050 --> 00:02:15.940
Another curly bracket enter.

30
00:02:15.990 --> 00:02:17.050
And there we have it.

31
00:02:17.460 --> 00:02:24.700
So if I call car in full now I see I have a make Toyota year 1990 and the model is Camry.

32
00:02:25.010 --> 00:02:28.380
If I actually want to get a value back so the values are.

33
00:02:28.400 --> 00:02:32.480
Toyota 1994 Camry I have to call the corresponding key.

34
00:02:32.930 --> 00:02:38.210
So instead of indexing like we did of an array I will actually pass on the key.

35
00:02:38.210 --> 00:02:43.170
So if I want to make the car it looks like this.

36
00:02:43.280 --> 00:02:45.080
And then I get back Toyota.

37
00:02:45.140 --> 00:02:51.000
Something to keep in mind especially if you're used to Python is that by convention for javascript objects.

38
00:02:51.020 --> 00:02:54.970
The keys don't have quotes around them when you're building out the object itself.

39
00:02:54.980 --> 00:03:00.560
So you can see here make year and model won't have any quotes around them so they're not strings.

40
00:03:00.560 --> 00:03:05.840
But when you're calling the actual key value pair you do have to pass in strings.

41
00:03:05.990 --> 00:03:13.340
Otherwise if you were to just call car info and then call make in this manner with it not being a string

42
00:03:13.600 --> 00:03:18.440
javascript's is going to get confused because it thinks you're actually referencing some variable called

43
00:03:18.440 --> 00:03:19.430
make earlier.

44
00:03:19.640 --> 00:03:22.510
So keep that in mind when you're creating the actual object.

45
00:03:22.520 --> 00:03:27.560
By convention you're not going to have a string here but you also need when you're actually calling

46
00:03:27.560 --> 00:03:30.360
the key value pair a string here.

47
00:03:30.380 --> 00:03:30.950
All right.

48
00:03:30.950 --> 00:03:35.710
So that's just the point of confusion sometimes for beginners or people coming in from Python programming.

49
00:03:35.720 --> 00:03:36.860
So keep that in mind.

50
00:03:36.970 --> 00:03:40.430
We're going to clear this to show an other example.

51
00:03:41.230 --> 00:03:49.570
Javascript objects are really flexible that data types they can take in so we can make mine you will

52
00:03:49.630 --> 00:03:58.980
say my new show for my new jobs project and we'll say a has a string.

53
00:03:59.080 --> 00:04:00.580
So here's a key value pair.

54
00:04:00.670 --> 00:04:05.590
A hello will say the key B has an array.

55
00:04:05.680 --> 00:04:07.070
One two three.

56
00:04:07.150 --> 00:04:14.380
And finally we can say Keesey has a javascript object inside of it so we're nesting it and we can say

57
00:04:14.380 --> 00:04:16.000
something like inside.

58
00:04:16.390 --> 00:04:23.510
And then a b and let's make sure we actually balance out these brackets.

59
00:04:24.840 --> 00:04:26.740
And here we have my new O.

60
00:04:26.740 --> 00:04:28.200
So let's check it out.

61
00:04:28.690 --> 00:04:30.130
And it's the javascript object.

62
00:04:30.150 --> 00:04:34.280
And notice when we actually print this out it says oh for the Keesey we have.

63
00:04:34.290 --> 00:04:35.210
So their object.

64
00:04:35.220 --> 00:04:38.140
And then I can expand this and keep checking stuff out here.

65
00:04:39.260 --> 00:04:39.570
OK.

66
00:04:39.590 --> 00:04:41.810
Let's practice actually grabbing some stuff here.

67
00:04:41.810 --> 00:04:47.210
So the first thing I want to try to grab is hello in puzzle video see finger up hello on your own.

68
00:04:47.600 --> 00:04:49.010
OK I'm going to do it now.

69
00:04:49.400 --> 00:04:50.240
Well that's pretty easy.

70
00:04:50.240 --> 00:04:54.590
Just passin the string a here and it Riffe triva.

71
00:04:54.590 --> 00:04:55.520
Hello.

72
00:04:55.520 --> 00:04:59.740
Now see if you're able to get the number two out of this mine.

73
00:04:59.800 --> 00:05:02.730
Oh OK let's try it out.

74
00:05:02.900 --> 00:05:04.140
I get mine you know.

75
00:05:04.250 --> 00:05:10.280
First thing I want to do is actually grab B and then I see I have the array out so I can actually if

76
00:05:10.280 --> 00:05:16.580
I press up a my key stack the calls these indexing calls are these key calls in if I want the number

77
00:05:16.580 --> 00:05:16.980
to.

78
00:05:17.000 --> 00:05:19.010
Well that's index one number.

79
00:05:19.020 --> 00:05:23.150
0 is the starting index and there I have it.

80
00:05:23.150 --> 00:05:24.630
There's the number two.

81
00:05:24.770 --> 00:05:29.240
Now try to get the letter B from the very last object.

82
00:05:30.230 --> 00:05:31.600
So I call mine.

83
00:05:31.640 --> 00:05:36.140
Oh I have to grab the Keesey to begin with.

84
00:05:36.140 --> 00:05:45.980
Then I have to grab the key inside and then finally I have to grab the second item index one which is

85
00:05:45.980 --> 00:05:46.910
the letter B.

86
00:05:47.000 --> 00:05:47.560
I hit enter.

87
00:05:47.560 --> 00:05:48.800
Let's see if I got this right.

88
00:05:48.950 --> 00:05:50.310
There it is the letter B.

89
00:05:50.330 --> 00:05:55.700
So take your time make sure you can understand each of these steps for grabbing something that's nested

90
00:05:55.820 --> 00:05:57.640
inside of a javascript object.

91
00:05:57.650 --> 00:06:01.730
Now as a quick note it's definitely not that common to have something this nested.

92
00:06:01.730 --> 00:06:07.290
This is a pretty extreme example but just keep that in mind the capability that you can have objects

93
00:06:07.290 --> 00:06:08.870
with in objects.

94
00:06:08.870 --> 00:06:16.190
All right let's move along and talk about actually changing values that correspond to key going to clear

95
00:06:16.190 --> 00:06:17.300
my cons..

96
00:06:17.390 --> 00:06:20.380
And let's go back to car info that we had earlier.

97
00:06:20.390 --> 00:06:22.320
Remember let's just make here and model.

98
00:06:22.430 --> 00:06:30.230
If I wanted to change the car a year all I have to do is grab car info and then in the key I want to

99
00:06:30.230 --> 00:06:34.220
change in this case it's here and set it equal to some new value.

100
00:06:34.220 --> 00:06:41.000
So for instance we can make it 2006 and that want I call car info I can see that I successfully changed

101
00:06:41.000 --> 00:06:44.500
the year of my car OK.

102
00:06:44.510 --> 00:06:47.750
We can also use a reference to the object itself.

103
00:06:47.930 --> 00:06:57.860
So I can do something like this car info year and then say plus equals 1 and that will also work.

104
00:06:57.880 --> 00:07:02.900
Turn back 2007 and if I call car info I see it's 2007 now.

105
00:07:03.050 --> 00:07:06.710
So that works when your value is an actual number.

106
00:07:06.710 --> 00:07:13.630
You can edit it that way if we want to show an entire object sometimes different browser.

107
00:07:13.700 --> 00:07:20.760
So shoot I mean I'm going to clear this sometimes for some browsers if you just pass in the object itself

108
00:07:20.820 --> 00:07:23.520
it won't actually show you the entire object.

109
00:07:23.520 --> 00:07:30.330
But if you really want to make sure that you show the entire object you can call console dot Diyar and

110
00:07:30.330 --> 00:07:32.080
then passen your object here.

111
00:07:32.370 --> 00:07:39.550
So you pass incar info and we see we have the object itself and then you can expand this to see the

112
00:07:39.870 --> 00:07:42.450
different keys and the value pairs.

113
00:07:42.480 --> 00:07:48.570
Now for this very small object we basically got the same thing in our console so keep in mind that for

114
00:07:48.570 --> 00:07:53.280
some reason you're working at a browser and you have a very large object that you're not able to see

115
00:07:53.280 --> 00:07:59.670
the entire thing you can always call console dot Diyar and then passing your javascript object to make

116
00:07:59.670 --> 00:08:02.780
sure you see the entire thing and expand it.

117
00:08:02.830 --> 00:08:03.280
All right.

118
00:08:03.280 --> 00:08:08.470
Continuing on let's talk about iterating through an object so to iterate through an object you can actually

119
00:08:08.470 --> 00:08:12.830
use a for in and let me show you what that looks like.

120
00:08:12.880 --> 00:08:18.060
You say four and then you make up some temporary variable.

121
00:08:18.130 --> 00:08:22.140
Noise say four key in and then you pass in your object.

122
00:08:22.150 --> 00:08:23.840
In my case it's car info.

123
00:08:25.170 --> 00:08:33.050
Open curly brackets and a quick thing to remind you is there is no specific order to a javascript object.

124
00:08:33.060 --> 00:08:38.430
Even though I can iterate through it with a for loop I have no guarantees about what order and when

125
00:08:38.430 --> 00:08:39.390
to grab stuff in.

126
00:08:39.430 --> 00:08:41.520
Sometimes a year may come out first.

127
00:08:41.520 --> 00:08:45.080
Sometimes model may come up first sometimes make may come up first.

128
00:08:45.210 --> 00:08:46.060
So keep that in mind.

129
00:08:46.050 --> 00:08:52.600
There's not going to be any specific order continuing on let's show you how to grab keys so this is

130
00:08:52.600 --> 00:08:55.040
going to grab the keys.

131
00:08:55.050 --> 00:09:04.800
Want to do a console that log of the key itself and then close that bracket.

132
00:09:04.990 --> 00:09:07.240
So I see here for key incar info.

133
00:09:07.250 --> 00:09:11.680
Cancel that log key and just to quickly know I could have called key here.

134
00:09:11.680 --> 00:09:15.700
Anything this is just a temporary variable so I could call this jelly as well.

135
00:09:15.700 --> 00:09:18.820
Doesn't have to be the actual word key.

136
00:09:18.880 --> 00:09:22.350
So if I say for jelling car info I still get all the keys out.

137
00:09:22.420 --> 00:09:27.730
Now usually when you're programming you want to use some sort of variable name that makes sense so obviously

138
00:09:27.730 --> 00:09:29.210
Jelly's not a good idea.

139
00:09:29.240 --> 00:09:32.520
Maybe something simple like k is a good fit here.

140
00:09:32.590 --> 00:09:40.860
So if I'm actually able to use this for Eneloop to grab the keys it means I can grab items as well or

141
00:09:40.860 --> 00:09:42.290
those actual values.

142
00:09:42.390 --> 00:09:44.020
Let's show you how to do that.

143
00:09:44.070 --> 00:09:55.390
I'll just say console log and then inside of this I can call car info and then access at that key.

144
00:09:55.420 --> 00:09:56.570
Let's show that.

145
00:09:56.770 --> 00:09:58.680
Here we see make Toyota.

146
00:09:58.720 --> 00:10:01.450
Year 2007 model Camry.

147
00:10:01.450 --> 00:10:04.540
Now that's just by doing car info at that key.

148
00:10:04.600 --> 00:10:09.850
All right that's all we're going to discuss right now for this first part of javascript objects in the

149
00:10:09.850 --> 00:10:14.690
next part of five objects we're going to discuss object methods.

150
00:10:14.770 --> 00:10:17.380
Let's quickly review what we've covered so far.

151
00:10:17.590 --> 00:10:19.920
Javascript objects are key value pairs.

152
00:10:19.960 --> 00:10:23.630
You have a key and then you have a value that corresponds to that key.

153
00:10:23.760 --> 00:10:27.870
If you want to actually grab something you can use bracket notation to do it.

154
00:10:27.880 --> 00:10:30.550
So again I clear my Consul here.

155
00:10:30.550 --> 00:10:37.690
I can say the name of my object and in square brackets passen a string that corresponds with whatever

156
00:10:37.690 --> 00:10:39.280
Qiam interested in.

157
00:10:39.280 --> 00:10:44.740
So in this case Fomitch that and grabbing the make I get back that key value pair and then if we want

158
00:10:44.740 --> 00:10:52.510
to actually iterate through a javascript object Well I can just use this for N and I grab the keys here

159
00:10:52.780 --> 00:10:57.400
with my temporary variable name and if I want to grab the actual value the correspondence that key will

160
00:10:57.430 --> 00:11:03.370
then I just make the call with the variable name inside of this for loop and that's really all you need

161
00:11:03.370 --> 00:11:05.640
to know about objects at this time.

162
00:11:05.650 --> 00:11:11.490
Coming up next we're going to discuss a really cool feature of javascript objects which are object methods.

163
00:11:11.500 --> 00:11:13.390
Thanks everyone and I'll see at the next lecture.
