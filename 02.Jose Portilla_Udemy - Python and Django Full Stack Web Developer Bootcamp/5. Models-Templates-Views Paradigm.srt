1
00:00:04,920 --> 00:00:11,130
Hello everyone and welcome to the models templates views lecture for Django Django operates on what

2
00:00:11,130 --> 00:00:14,890
is known as a model's templates and views paradigm.

3
00:00:15,000 --> 00:00:19,440
It's also called MTV for short and it encompasses the idea of how to connect everything we've talked

4
00:00:19,440 --> 00:00:20,520
about so far.

5
00:00:20,550 --> 00:00:24,830
So we've talked about models and databases we showed a little bit of templates and their tagging and

6
00:00:24,840 --> 00:00:28,530
we've talked about views as well how do we actually connect everything.

7
00:00:28,530 --> 00:00:33,600
There are a few basic steps to achieving the goal of serving dynamic content to a user based off the

8
00:00:33,600 --> 00:00:35,880
connection of those models we use and templates.

9
00:00:35,880 --> 00:00:38,280
Let's walk through these steps.

10
00:00:38,400 --> 00:00:44,150
The first step is that that views that PI file we import any models that we will need to use.

11
00:00:44,190 --> 00:00:48,970
The second step is to use a view to query the model for data that we will need.

12
00:00:49,020 --> 00:00:53,510
The third step is to pass results from the model to the template.

13
00:00:53,530 --> 00:00:58,270
The fourth step is to edit the template so that it's ready to accept and display the data from the model

14
00:00:58,660 --> 00:01:01,940
and then the fifth step is to map a L to that actual view.

15
00:01:03,020 --> 00:01:07,580
We can practice this methodology by changing what we display on the front index page.

16
00:01:07,640 --> 00:01:12,410
So to get our understanding of this entire process we're going to start by actually generating a table

17
00:01:12,620 --> 00:01:14,780
on that index page.

18
00:01:14,780 --> 00:01:19,820
The table will display all the web pages and access records from the Access record database we created

19
00:01:19,820 --> 00:01:21,070
and populated.

20
00:01:21,350 --> 00:01:25,730
Will also be using template tagging to connect the model to that age Tim Page.

21
00:01:25,730 --> 00:01:30,320
This entire process is going to be introducing a lot of new things so don't be intimidated.

22
00:01:30,350 --> 00:01:33,620
The template tagging especially can seem confusing at first.

23
00:01:33,650 --> 00:01:38,870
We've already seen a little bit of it with the static images that we use template tagging to inject

24
00:01:38,870 --> 00:01:42,860
into the HD M-L But again don't worry if the template tagging seems confusing.

25
00:01:42,860 --> 00:01:47,760
We're going to be getting tons of practice with this later on as we develop more clones of Web sites

26
00:01:48,980 --> 00:01:51,330
after we walk through all of this with some code.

27
00:01:51,440 --> 00:01:55,240
You will have a challenge to practice your own MTV skills on your own.

28
00:01:55,250 --> 00:02:00,440
Level 3 is going to focus a lot more on expanding this idea of MTV and the mapping or else step that

29
00:02:00,480 --> 00:02:05,120
step number five which we haven't really dived into yet and we won't focus too much on this particular

30
00:02:05,120 --> 00:02:06,470
section of the course.

31
00:02:06,860 --> 00:02:08,380
OK let's get started.

32
00:02:08,380 --> 00:02:14,990
No knowing to open up my editor to walk through this entire MTV paradigm OK let's get started showing

33
00:02:14,990 --> 00:02:18,870
an example of how to actually use MTV paradigm.

34
00:02:18,950 --> 00:02:24,830
So I'm going to come over here to first project first app and open up my views up py file and so far

35
00:02:24,920 --> 00:02:31,050
I have this simple index request that took this dictionary and then used that to actually inject with

36
00:02:31,070 --> 00:02:33,100
template tagging the actual content and taste.

37
00:02:33,110 --> 00:02:38,850
You know we're going to be expanding on this idea by connecting this to the database.

38
00:02:39,080 --> 00:02:48,630
So I would say from first app models import and then the three models we had a topic we had a web page

39
00:02:48,690 --> 00:02:50,610
and we had access record.

40
00:02:50,940 --> 00:02:52,800
And then here in this actual index.

41
00:02:52,800 --> 00:02:55,590
And I would change this if I wanted to do a different view.

42
00:02:55,600 --> 00:02:59,060
But right now we'll keep things simple everything on the home page.

43
00:02:59,070 --> 00:03:07,110
I'm going to make a variable called web pages list and this is going to be equal to access record.

44
00:03:07,530 --> 00:03:14,900
And then I'm going to call the objects and then I'm going to call the objects and say order by which

45
00:03:14,900 --> 00:03:20,310
is a method off of these objects and then order by the date field.

46
00:03:20,690 --> 00:03:25,460
So if you're a little confused by that order by it's a really common sequel command so you can if you're

47
00:03:25,550 --> 00:03:30,500
used to sequel that probably feels really natural but it basically just says order this by that date

48
00:03:30,500 --> 00:03:32,140
field or that date column.

49
00:03:33,140 --> 00:03:36,620
That is going to create a dictionary.

50
00:03:36,710 --> 00:03:46,430
So say dates underscore the T is equal to and then I'm going to call the key access record.

51
00:03:48,640 --> 00:03:56,470
All access records and then that web pages list is going to be the actual value for that.

52
00:03:56,470 --> 00:03:58,260
So let's get rid of this dictionary.

53
00:03:58,480 --> 00:04:04,420
And then finally going to return render first AB slash index let each symbol and then for the context

54
00:04:04,450 --> 00:04:12,160
it's going to be instead of that my dictionary will be that the dictionary date underscore the ICC OK.

55
00:04:12,160 --> 00:04:17,230
So the main thing is to get across here is that we are infused up high in that first I remember is we

56
00:04:17,290 --> 00:04:23,920
actually import the models and then here I'm going to use render to actually grab stuff from the model

57
00:04:23,920 --> 00:04:29,380
itself and then use template tagging later on to inject that into the H T.M..

58
00:04:29,430 --> 00:04:35,280
So so far we're done in steps 1 and 2 where we imported the models and use the view to query the model

59
00:04:35,490 --> 00:04:37,050
for the data we need.

60
00:04:37,050 --> 00:04:43,570
Now I'm going to come over to my actual HVM L and that's over here under templates.

61
00:04:44,130 --> 00:04:50,210
First app index that each T.M. and then go into I'm going to essentially clear all of this.

62
00:04:50,250 --> 00:04:53,110
This is now going to be the original index that each team L.

63
00:04:53,130 --> 00:04:59,400
So if you open up the Django level two files you'll notice that there's two HVM L's original index and

64
00:04:59,400 --> 00:05:00,830
then index.

65
00:05:00,960 --> 00:05:06,230
Right now I'm going to go with the index the original indexes just everything I deleted.

66
00:05:08,130 --> 00:05:13,570
All right so I said H Tim L and then if we're ever dealing of static files will want to load them.

67
00:05:13,890 --> 00:05:19,500
We may or may not have this time but it's always a good idea to say load static files in case you're

68
00:05:19,500 --> 00:05:29,060
going to have them and then we'll keep the title say title is Shingo level 2 and also in the head.

69
00:05:29,060 --> 00:05:32,810
Let's give the link to the CSSA file so we can get used to doing that.

70
00:05:32,810 --> 00:05:34,400
So I'll type and link.

71
00:05:34,670 --> 00:05:41,510
It's a stylesheet ref is going to be an injection here with template tagging.

72
00:05:41,510 --> 00:05:42,380
So I'll say

73
00:05:44,860 --> 00:05:47,090
static.

74
00:05:47,290 --> 00:05:48,770
And then here in quotes.

75
00:05:48,790 --> 00:05:50,560
And actually this whole thing needs to be in quotes.

76
00:05:50,570 --> 00:05:52,100
Let's make sure that's correct.

77
00:05:57,600 --> 00:06:06,510
And I'm going to say closing tech here static and then if another set of quotes see assess and then

78
00:06:06,510 --> 00:06:15,110
whatever happened to be I believe it was my style and we can add that in that SS So we'll save this

79
00:06:15,460 --> 00:06:21,380
in if I expand my static folder or I should CC SS and there's my style that that's SS.

80
00:06:21,500 --> 00:06:23,180
It only changes heading to color red.

81
00:06:23,180 --> 00:06:25,200
But we can work that later on.

82
00:06:25,620 --> 00:06:32,170
OK so so far I floated the static files and I was able to do that to link to actual CSSA.

83
00:06:32,420 --> 00:06:38,540
But what we really want to focus on here is using the template tagging to grab from the view the requested

84
00:06:38,540 --> 00:06:39,930
information from the models.

85
00:06:39,940 --> 00:06:53,750
So inside the body I'll say H-1 I will say Hi welcome to Gengel level 2 and then H-2 will say Here are

86
00:06:53,750 --> 00:06:54,470
your

87
00:06:57,280 --> 00:07:03,260
access records probably won't want to do something like this realistically on a Web site where you just

88
00:07:03,260 --> 00:07:05,530
display all the information from your model.

89
00:07:05,540 --> 00:07:11,480
But right now keeping things simple and I'm going to make a diff here and this class is going to just

90
00:07:11,480 --> 00:07:13,620
be Jeng too.

91
00:07:13,910 --> 00:07:15,520
Now I can grab it later on.

92
00:07:15,830 --> 00:07:20,180
OK and this is where he's going to look a little strange with the template tagging.

93
00:07:20,220 --> 00:07:26,560
I'm going to say here with the curly brackets and then the percent sign.

94
00:07:26,610 --> 00:07:30,510
If axis underscore records.

95
00:07:30,540 --> 00:07:32,060
So what does that actually mean.

96
00:07:32,160 --> 00:07:35,680
Here I'm just checking if I actually have the access records from.

97
00:07:35,700 --> 00:07:38,270
But go back to views that PI right here.

98
00:07:38,280 --> 00:07:43,920
So if I actually have this key then do some stuff so you can see it's a little bit like Python is not

99
00:07:43,920 --> 00:07:49,100
quite full Python as far as a syntax but it's similar.

100
00:07:49,190 --> 00:07:57,250
And then I'm going to create a table tag and then will create the head and then I'll say site name.

101
00:07:59,630 --> 00:08:07,610
And then here I will say they accessed.

102
00:08:07,720 --> 00:08:14,530
OK so those are the basics here and now I need to do is actually insert the table rows in the table

103
00:08:14,530 --> 00:08:17,670
rows are going to be connected to the actual model.

104
00:08:17,800 --> 00:08:24,850
So I need to somehow add in logic here that loops through every row in the access records and what that

105
00:08:24,850 --> 00:08:25,960
looks like is this.

106
00:08:25,960 --> 00:08:34,690
I say for some temporary variable name will say A.S.C. in and then access records.

107
00:08:34,690 --> 00:08:37,600
And this has to match in whatever you had over here.

108
00:08:37,640 --> 00:08:40,050
Views for the key.

109
00:08:40,090 --> 00:08:45,580
So what I'm saying is for this temporary variable in access records remember access records is going

110
00:08:45,580 --> 00:08:49,920
to be this list of web pages that's ordered by the date from the model.

111
00:08:49,930 --> 00:08:55,000
Hopefully here we can begin to see kind of that peak of the iceberg of that MTV how we're connecting

112
00:08:55,000 --> 00:09:04,220
all the moving pieces and then what I do is I create the table rotate TR And I'll create table cell

113
00:09:04,220 --> 00:09:06,830
tag tiddy and inside of this.

114
00:09:06,830 --> 00:09:13,040
Now I use this set of curly brackets of No percent sign because it's not actually logic is essentially

115
00:09:13,040 --> 00:09:14,750
just injecting text right now.

116
00:09:14,940 --> 00:09:22,610
I will say A.S.C. dot and then we actually call what we want so I'll say that name for the site name.

117
00:09:23,840 --> 00:09:28,100
And then again I'll call a CC and then the actual field I want.

118
00:09:28,100 --> 00:09:31,550
In this case the field is date because that's how I have it here.

119
00:09:31,550 --> 00:09:37,130
Site name and they accessed and then finally you have to make sure that whenever you have this for tag

120
00:09:37,610 --> 00:09:39,550
that for luteal you end it.

121
00:09:39,720 --> 00:09:48,280
So here I'm going to make sure that we end that by saying And for now that's a little different than

122
00:09:48,280 --> 00:09:55,320
anything we've seen in Python so keep that in mind and actually want this whole thing to be inside that

123
00:09:55,320 --> 00:09:56,460
closing table tag.

124
00:09:57,780 --> 00:09:59,590
So I will save that.

125
00:09:59,790 --> 00:10:04,370
And then since I have this if access records I need an else to go along with it.

126
00:10:05,270 --> 00:10:08,910
So let's add that in and that's going to be outside of the table.

127
00:10:12,970 --> 00:10:27,900
Well say else we'll print out a paragraph no access records founds and then since I have that if else

128
00:10:27,960 --> 00:10:28,900
I need to end it.

129
00:10:30,070 --> 00:10:36,710
So we say and if and then that's the end of the div tag.

130
00:10:36,870 --> 00:10:38,720
And that's really all we need here.

131
00:10:39,030 --> 00:10:40,400
So we'll save that.

132
00:10:40,400 --> 00:10:43,880
And let's check out the or else that PI file make sure that's all linked up.

133
00:10:43,900 --> 00:10:46,820
So on their first project they have your L's up high.

134
00:10:46,860 --> 00:10:48,390
Make sure that's OK.

135
00:10:48,660 --> 00:10:50,220
And that also looks good.

136
00:10:50,250 --> 00:10:55,450
Looks like I'm connecting views that index to the home page so that makes sense and if I look at my

137
00:10:55,450 --> 00:10:58,890
uro's up high fall at first that that also makes sense here.

138
00:10:58,890 --> 00:10:59,240
Great.

139
00:10:59,280 --> 00:11:11,970
So let's see if this actually worked and tried out going to say Python managed up PI run server enter.

140
00:11:12,050 --> 00:11:17,280
See if we get any errors here OK no errors it's a good sign.

141
00:11:17,280 --> 00:11:21,660
We're going to copy and paste this into my browser.

142
00:11:21,940 --> 00:11:25,140
Let's bring it over so bring it over.

143
00:11:25,140 --> 00:11:26,060
Get this.

144
00:11:26,090 --> 00:11:27,920
It says Hi welcome to jingle too.

145
00:11:27,930 --> 00:11:33,610
Here are your access records and embarrassingly I spelled your wrong but hopefully you forgive me.

146
00:11:33,740 --> 00:11:36,030
And here I can see that I have the actual table.

147
00:11:36,530 --> 00:11:40,460
So let's give a little bit of styling to this table so it's a little bit more readable.

148
00:11:40,580 --> 00:11:43,170
And I can do that simply by affecting the SS.

149
00:11:43,220 --> 00:11:48,510
So if I come over here to static remember I'm loading the sexual static.

150
00:11:48,530 --> 00:11:52,270
So let's change it up so we get a little bit of color on those table cells.

151
00:11:53,960 --> 00:11:55,940
So I will say here.

152
00:11:55,940 --> 00:12:05,260
Table and then it give it a border let's say two pixels solid black.

153
00:12:05,480 --> 00:12:09,740
And if I want to actually give border not just the outside of the table but to the table header and

154
00:12:09,740 --> 00:12:12,590
table rows I can put a comma here.

155
00:12:12,590 --> 00:12:15,270
Th comma CD.

156
00:12:15,650 --> 00:12:18,740
Or since I actually gave it a class if I remember correctly.

157
00:12:18,740 --> 00:12:20,880
Coming up here so is Django too.

158
00:12:20,890 --> 00:12:25,290
So let's actually grab this Jing to class and then added in.

159
00:12:25,290 --> 00:12:29,540
So I'll say that jingle to see if that actually works.

160
00:12:30,240 --> 00:12:34,760
Come back here bring back my actual age T.M. or excuse me refresh the page.

161
00:12:35,050 --> 00:12:37,370
And we're getting not found static.

162
00:12:37,540 --> 00:12:40,040
Let's come back here to index that smil.

163
00:12:40,150 --> 00:12:45,890
Make sure that was all correct and I missing the percent sign to close this so that should have matched

164
00:12:46,550 --> 00:12:47,190
OK.

165
00:12:47,230 --> 00:12:50,670
Now let's save this run this again.

166
00:12:50,720 --> 00:12:51,670
Control-C.

167
00:12:51,790 --> 00:12:53,630
My thumb is up I run server.

168
00:12:53,800 --> 00:12:59,760
Bring back my actual browser and if I bring it back here now I see that the heading is also connected

169
00:12:59,760 --> 00:13:04,890
so I probably should add those that last time and I can see here that I have the table of the border.

170
00:13:04,890 --> 00:13:08,200
So looks like I need to actually add in some more.

171
00:13:08,190 --> 00:13:10,740
So let's just make it table.

172
00:13:10,740 --> 00:13:11,440
Th.

173
00:13:11,440 --> 00:13:19,090
T The Save that will refresh the page and restart this and refresh on that page.

174
00:13:19,090 --> 00:13:21,430
Now I get these nice double borders.

175
00:13:21,430 --> 00:13:21,720
OK.

176
00:13:21,730 --> 00:13:24,260
So hopefully you can begin to see how you connect that.

177
00:13:24,280 --> 00:13:25,650
Everything OK.

178
00:13:25,660 --> 00:13:30,760
Now I wanted to take a little bit of time to discuss how Django can help you debug your code especially

179
00:13:30,760 --> 00:13:32,110
if template tagging.

180
00:13:32,110 --> 00:13:33,820
If you ever feel confused on it.

181
00:13:34,060 --> 00:13:38,890
So as you probably just notice like even I can confuse the tempo of tagging or actually accidentally

182
00:13:38,890 --> 00:13:43,390
make mistakes the error reporting is actually really good for this sort of thing.

183
00:13:43,390 --> 00:13:48,010
So if you come down you know you're doing a template tagging and you forgot to write.

184
00:13:48,040 --> 00:13:51,930
And if so your code is really long.

185
00:13:51,960 --> 00:13:57,150
You had the statement up here and you know typically in Python you know how to say and if so you just

186
00:13:57,150 --> 00:13:58,240
accidentally forget.

187
00:13:58,530 --> 00:14:04,890
Well if you take a look at what the refresh site looks like after you say and if I refresh it and here

188
00:14:04,920 --> 00:14:10,520
we already see that I have a template syntax error and bringing the page over look something like this

189
00:14:10,530 --> 00:14:11,790
it says unclose tag.

190
00:14:11,800 --> 00:14:13,680
If looking for one of.

191
00:14:13,740 --> 00:14:18,750
And if it actually reports back that it's looking for an end if and if you scroll down it will actually

192
00:14:18,750 --> 00:14:21,150
tell you what it's looking for as far as it's match.

193
00:14:21,150 --> 00:14:27,090
So it says hey this highlighted line if access records has no matching and if and you can see there's

194
00:14:27,090 --> 00:14:28,670
an entire traceback here.

195
00:14:28,750 --> 00:14:29,910
You can follow as well.

196
00:14:29,910 --> 00:14:33,440
So the error reporting is actually really good on the Web site.

197
00:14:33,480 --> 00:14:35,140
So definitely take advantage of that.

198
00:14:35,220 --> 00:14:38,550
Well essentially almost always tell you that correctly what it's looking for.

199
00:14:38,550 --> 00:14:42,240
Now if you don't actually know what this means then you can always google search it or search stack

200
00:14:42,240 --> 00:14:44,760
overflow and you'll probably find your answer there.

201
00:14:45,030 --> 00:14:45,640
OK.

202
00:14:45,900 --> 00:14:51,210
Hopefully now you have a better understanding of how to use the MTV paradigm to actually connect your

203
00:14:51,210 --> 00:14:54,510
models and inject content into the T.M..

204
00:14:54,540 --> 00:14:56,570
Thanks everyone and I'll see at the next lecture.
