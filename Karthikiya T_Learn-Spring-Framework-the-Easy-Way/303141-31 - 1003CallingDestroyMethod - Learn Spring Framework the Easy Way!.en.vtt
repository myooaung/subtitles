WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:09.860
as I was mentioning in my previous we do that we can actually work around and indeed called

00:00:09.860 --> 00:00:12.750
the destroy matter off a product I've bean in this week,

00:00:12.750 --> 00:00:16.100
I'm going to demonstrate the same first things first,

00:00:16.100 --> 00:00:20.460
since this being he is scoped toe prototype.

00:00:20.460 --> 00:00:24.650
The destroy face cannot be controlled by the spring container,

00:00:24.650 --> 00:00:27.600
so there's no point in specifying this attribute.

00:00:27.600 --> 00:00:29.260
I'll get it off it,

00:00:29.260 --> 00:00:30.950
but what we can use,

00:00:30.950 --> 00:00:31.750
rather,

00:00:31.750 --> 00:00:38.890
is this interface disposable being and that would let us provide the implementation to the

00:00:38.890 --> 00:00:39.810
destroy matted.

00:00:39.810 --> 00:00:43.070
But spring still doesn't call this method.

00:00:43.070 --> 00:00:45.860
We're going to actually introduce another bean,

00:00:45.860 --> 00:00:48.650
which is going to be a single done being.

00:00:48.650 --> 00:00:55.820
And there were going to write some tricky code that will ultimately call this method off a

00:00:55.820 --> 00:01:02.250
product I've bean when the container is closed or when the shutdown hook is called.

00:01:02.250 --> 00:01:06.650
And here is where the magic cord is reciting.

00:01:06.650 --> 00:01:11.350
Don't be overwhelmed by looking at this code.

00:01:11.350 --> 00:01:14.550
Let me walk you through and then you'll understand it.

00:01:14.550 --> 00:01:22.300
So what I'm trying to do is I have introduced this interface being Post Prosser,

00:01:22.300 --> 00:01:25.650
and I'm going to keep this method.

00:01:25.650 --> 00:01:26.390
Ozzy's.

00:01:26.390 --> 00:01:28.450
I'm just simply returning the same object.

00:01:28.450 --> 00:01:34.330
But I'm going to provide some behavior toe this method in here Post process after

00:01:34.330 --> 00:01:35.380
nationalisation.

00:01:35.380 --> 00:01:38.900
So this would be called after the unit matter off.

00:01:38.900 --> 00:01:41.490
This being is called in this case,

00:01:41.490 --> 00:01:42.900
we don't have it in it method.

00:01:42.900 --> 00:01:44.250
So that's fine.

00:01:44.250 --> 00:01:50.210
And what I'm trying to do here is I'm actually making use off the bean factory object which

00:01:50.210 --> 00:01:52.010
will be provided by the container.

00:01:52.010 --> 00:01:54.250
And in order to acquire this object,

00:01:54.250 --> 00:02:01.250
I've also implemented the being factory ever interface and ah,

00:02:01.250 --> 00:02:03.200
using the center injection,

00:02:03.200 --> 00:02:11.520
I'm letting the spring container inject the being factory object for me and in here using a

00:02:11.520 --> 00:02:12.790
synchronized block.

00:02:12.790 --> 00:02:23.790
I'm just trying to add all the beans off prototype scope by using this method off being

00:02:23.790 --> 00:02:28.290
factory ease prototype and then I would provide the name of the bean.

00:02:28.290 --> 00:02:34.200
And remember the post process after nationalisation mattered will receive these two para

00:02:34.200 --> 00:02:38.250
meters by the container when it's called.

00:02:38.250 --> 00:02:43.070
So by the time the container makes all the beans available for us to use in the application

00:02:43.070 --> 00:02:43.070
,

00:02:43.070 --> 00:02:50.050
this list in here must be populated with all the prototype beans available in the container

00:02:50.050 --> 00:02:50.050
.

00:02:50.050 --> 00:02:58.210
And after that during the destroy phase off this particular bean.

00:02:58.210 --> 00:03:07.790
We're just simply trying to loop through that list and simply calling their destroy method

00:03:07.790 --> 00:03:07.790
.

00:03:07.790 --> 00:03:09.550
It's as simple as that.

00:03:09.550 --> 00:03:16.580
And we all didn't know that this destroy method would be called before the container gets

00:03:16.580 --> 00:03:17.250
closed.

00:03:17.250 --> 00:03:24.550
Our before they shut down hook off JV and would be called and in or conflict file.

00:03:24.550 --> 00:03:27.150
We just defined despite it.

00:03:27.150 --> 00:03:30.100
I've destroyed bean just as you see in here.

00:03:30.100 --> 00:03:32.350
I was chained the name.

00:03:32.350 --> 00:03:34.600
Okay,

00:03:34.600 --> 00:03:36.010
this is little misleading.

00:03:36.010 --> 00:03:40.630
Same should go in the Java Khan for Gassville.

00:03:40.630 --> 00:03:43.250
So quick correction there.

00:03:43.250 --> 00:03:50.700
So since has bean is singleton scope bean spring will have complete control off its life

00:03:50.700 --> 00:03:51.350
cycle.

00:03:51.350 --> 00:03:55.250
And so all these methods would be called.

00:03:55.250 --> 00:04:01.030
And when spring caused the destroy method internally were having a logic that actually

00:04:01.030 --> 00:04:04.750
caused the destroy matted off each and every product I bean.

00:04:04.750 --> 00:04:11.050
Now let's try to run the program and make sure that this statement will get executed.

00:04:11.050 --> 00:04:15.980
And sure enough,

00:04:15.980 --> 00:04:17.000
it worked.

00:04:17.000 --> 00:04:24.470
Also do make sure that you have this check in here to check to see if the product I've bean

00:04:24.470 --> 00:04:27.300
is in stance off disposable being.

00:04:27.300 --> 00:04:28.520
Otherwise,

00:04:28.520 --> 00:04:32.610
if you have a prototype bean that doesn't implement the disposable being.

00:04:32.610 --> 00:04:36.060
You may have a runtime exception because that being made,

00:04:36.060 --> 00:04:38.050
not implement the destroy mattered.

00:04:38.050 --> 00:04:44.980
So make sure that you have this check before you call the destroy method and,

00:04:44.980 --> 00:04:45.270
ah,

00:04:45.270 --> 00:04:47.670
everything should work smooth.

00:04:47.670 --> 00:04:51.140
And Tim is the case with Java conflict.

00:04:51.140 --> 00:04:53.680
Nothing different.

00:04:53.680 --> 00:04:56.750
Pretty straightforward,

00:04:56.750 --> 00:04:59.350
very easy stuff.

00:04:59.350 --> 00:05:07.150
And just try toe run it again on it worked.

00:05:07.150 --> 00:05:13.730
So just try to walk through this cold and try to understand what you're trying to do or if

00:05:13.730 --> 00:05:14.480
it is clear,

00:05:14.480 --> 00:05:17.370
that's fine to simply move on with my other videos.

00:05:17.370 --> 00:05:20.450
All right,

00:05:20.450 --> 00:05:22.020
that's about it.

00:05:22.020 --> 00:05:23.150
Elsie ism.

