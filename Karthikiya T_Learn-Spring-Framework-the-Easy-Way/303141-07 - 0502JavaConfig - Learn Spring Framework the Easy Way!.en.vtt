WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.320
so far,

00:00:01.320 --> 00:00:05.060
we're trying to use an example document to define our beans.

00:00:05.060 --> 00:00:07.920
But using an external document may not be right.

00:00:07.920 --> 00:00:09.150
Choice Every time,

00:00:09.150 --> 00:00:10.560
for example,

00:00:10.560 --> 00:00:12.920
said that I'm trying to change the name off this job.

00:00:12.920 --> 00:00:13.630
All files,

00:00:13.630 --> 00:00:18.370
then there won't be any kind off a highlighting Index Immel document indicating that the

00:00:18.370 --> 00:00:19.550
change has happened.

00:00:19.550 --> 00:00:22.390
This is going to be a bit off a concern,

00:00:22.390 --> 00:00:25.250
especially when you're working on a large scale projects.

00:00:25.250 --> 00:00:28.250
Because in order to test your changes,

00:00:28.250 --> 00:00:33.250
you have to build the entire project and then deploy the artifact under the server.

00:00:33.250 --> 00:00:38.970
And then you will realize that the application has crashed because off a small type of

00:00:38.970 --> 00:00:41.060
error in your XML conflict,

00:00:41.060 --> 00:00:45.360
that is going to be a very frustrating moment for a developer.

00:00:45.360 --> 00:00:46.560
Also,

00:00:46.560 --> 00:00:52.150
it would be hard to re factor your code when you're trying to configure things using XML

00:00:52.150 --> 00:00:52.700
file.

00:00:52.700 --> 00:00:55.470
So since spring washing number three,

00:00:55.470 --> 00:00:58.330
we have a solution to address this very problem,

00:00:58.330 --> 00:01:04.140
and the solution is you can now configure all your beans in a Java file,

00:01:04.140 --> 00:01:05.870
for let's see how it's done.

00:01:05.870 --> 00:01:09.960
I have the exact same court as previous,

00:01:09.960 --> 00:01:16.700
but the only change is I have now changed the name off the being for Java toe animal noise

00:01:16.700 --> 00:01:19.140
dot Java for two good reasons.

00:01:19.140 --> 00:01:23.530
The name being is contracting with the name being in spring.

00:01:23.530 --> 00:01:25.870
It's not a good practice to use that name.

00:01:25.870 --> 00:01:27.290
And number two,

00:01:27.290 --> 00:01:29.290
this name makes more sense.

00:01:29.290 --> 00:01:34.020
So let us see how we can configure our beans using a job,

00:01:34.020 --> 00:01:34.850
a conflict.

00:01:34.850 --> 00:01:35.900
So for this purpose,

00:01:35.900 --> 00:01:42.540
I'm actually going to create a new folder inside a package and the name off it is going to

00:01:42.540 --> 00:01:46.050
be simply conflict.

00:01:46.050 --> 00:01:51.480
So this is where all our conflict files would remain.

00:01:51.480 --> 00:01:53.570
Well,

00:01:53.570 --> 00:01:54.100
I said,

00:01:54.100 --> 00:01:55.290
convict files,

00:01:55.290 --> 00:02:01.190
meaning that we can have multiple conflagrations split across multiple files and we're

00:02:01.190 --> 00:02:03.450
going to take a look at it at later point of time.

00:02:03.450 --> 00:02:04.910
Or maybe pretty soon.

00:02:04.910 --> 00:02:09.050
So now let's try to create a Java file inside that folder.

00:02:09.050 --> 00:02:14.150
Best clear class file.

00:02:14.150 --> 00:02:19.140
I'm going to give the name as Java conflict.

00:02:19.140 --> 00:02:21.250
He can give any name off your choice,

00:02:21.250 --> 00:02:28.000
and then here were just simply going to define our beans.

00:02:28.000 --> 00:02:32.650
And we're trying to replicate the same thing that we're trying to do here.

00:02:32.650 --> 00:02:37.110
So let me try to imitate the same being in our Java conflict.

00:02:37.110 --> 00:02:43.220
So all I have to do now is to create a method that just simply returns and in stance,

00:02:43.220 --> 00:02:46.490
off animal or rather,

00:02:46.490 --> 00:02:48.950
cat to be more specific.

00:02:48.950 --> 00:02:56.270
So I'm just simply going to define the public method public and is going to return an

00:02:56.270 --> 00:02:58.510
object off animal.

00:02:58.510 --> 00:03:02.900
I'm going to name this method as simply animal.

00:03:02.900 --> 00:03:05.950
So this is going to be the name of the being that level.

00:03:05.950 --> 00:03:11.420
Using our code and written to call the braces were just simply going to use the written

00:03:11.420 --> 00:03:12.250
statement,

00:03:12.250 --> 00:03:15.550
return a new instance,

00:03:15.550 --> 00:03:21.770
offer the cat or dog the start with dog and with semi Colin all the country's shift.

00:03:21.770 --> 00:03:22.290
Oh,

00:03:22.290 --> 00:03:25.450
to import all the required classes and interfaces.

00:03:25.450 --> 00:03:31.500
And although control shift F to give a proper indentation to our code now,

00:03:31.500 --> 00:03:37.380
wait explicitly mentioned spring that this file is a convict file within which will have

00:03:37.380 --> 00:03:38.150
our beans.

00:03:38.150 --> 00:03:50.680
And this in here is a bean that we can do by specifying the falling annotations you would

00:03:50.680 --> 00:03:51.750
say configuration.

00:03:51.750 --> 00:03:56.550
So now spring will start looking for beans in this file,

00:03:56.550 --> 00:04:03.270
and then we're going to give the bean annotation to tell spring that we're trying to define

00:04:03.270 --> 00:04:12.200
the being in here 1000 blouse that now let us also try to configure just being in here,

00:04:12.200 --> 00:04:16.270
I'm just simply going to copy the same mattered.

00:04:16.270 --> 00:04:34.620
But this time I'm going to return an instance off animal noise and same should get

00:04:34.620 --> 00:04:35.750
reflected in here.

00:04:35.750 --> 00:04:38.650
He can give any name off a choice to this method.

00:04:38.650 --> 00:04:39.990
That's fine.

00:04:39.990 --> 00:04:42.630
Although control shipped.

00:04:42.630 --> 00:04:43.050
Oh,

00:04:43.050 --> 00:04:48.210
let me pull this down now,

00:04:48.210 --> 00:04:52.470
Just like we're trying to pass an argument to the constructor off animal noise,

00:04:52.470 --> 00:04:54.950
we have to do the same stuff in here as well.

00:04:54.950 --> 00:05:00.380
I'm just simply going to call this matter from here.

00:05:00.380 --> 00:05:06.770
So this would essentially pass a new instance off dog to the constructor off animal noise

00:05:06.770 --> 00:05:09.350
just as we're trying to do in here.

00:05:09.350 --> 00:05:11.410
Nothing different.

00:05:11.410 --> 00:05:13.350
And guess what?

00:05:13.350 --> 00:05:16.580
We just declared all our beans inside a job.

00:05:16.580 --> 00:05:17.550
A convict file.

00:05:17.550 --> 00:05:18.080
Now,

00:05:18.080 --> 00:05:22.530
inside our main logic instructors in class politics,

00:05:22.530 --> 00:05:23.690
similar application.

00:05:23.690 --> 00:05:31.900
I'm going to copy this and use the different implementation off application context that

00:05:31.900 --> 00:05:34.740
will help create a context using a job,

00:05:34.740 --> 00:05:45.260
a conflict and the instruction that I'm going to use is annotation control space to give

00:05:45.260 --> 00:05:52.340
some suggestion conflict application context And of course,

00:05:52.340 --> 00:05:55.980
we would no longer provide XML as an argument.

00:05:55.980 --> 00:05:57.560
This has to be our job.

00:05:57.560 --> 00:06:03.550
A convict file dot class.

00:06:03.550 --> 00:06:09.190
Let me pull this in here so that you have a better view.

00:06:09.190 --> 00:06:15.000
So that's all there is to it that's on the program and say things are working.

00:06:15.000 --> 00:06:21.370
Sure enough,

00:06:21.370 --> 00:06:22.250
it work.

00:06:22.250 --> 00:06:25.850
Now Let's try to change this to can't,

00:06:25.850 --> 00:06:28.060
I would say,

00:06:28.060 --> 00:06:35.530
Kat said the file and on the program and always seem to have a never.

00:06:35.530 --> 00:06:39.590
That's because we haven't imported the cat class,

00:06:39.590 --> 00:06:40.980
although control ship Oh,

00:06:40.980 --> 00:06:43.870
and let's run the program.

00:06:43.870 --> 00:06:45.650
And sure enough,

00:06:45.650 --> 00:06:46.990
we have different output.

00:06:46.990 --> 00:06:52.790
No letter that I found this name animal noise a little misleading.

00:06:52.790 --> 00:06:55.980
I'm going to change the name to something else.

00:06:55.980 --> 00:06:56.810
Maybe I would name it.

00:06:56.810 --> 00:06:59.220
Does animals sound?

00:06:59.220 --> 00:06:59.830
Now?

00:06:59.830 --> 00:07:00.670
Guess what.

00:07:00.670 --> 00:07:03.250
We have syntax highlighting everywhere,

00:07:03.250 --> 00:07:05.500
including this Java conflict file.

00:07:05.500 --> 00:07:07.290
That's the beauty off it,

00:07:07.290 --> 00:07:09.810
whereas if you go to maximal document,

00:07:09.810 --> 00:07:11.350
you don't see any difference.

00:07:11.350 --> 00:07:19.100
So we can just rename the file and triples the name everywhere else.

00:07:19.100 --> 00:07:23.350
So this is a lot easier,

00:07:23.350 --> 00:07:39.950
and this should dio I'll save the file and something should get reflected in here and run

00:07:39.950 --> 00:07:40.680
the program.

00:07:40.680 --> 00:07:43.450
Everything is smelt.

00:07:43.450 --> 00:07:45.480
So which one is better?

00:07:45.480 --> 00:07:51.100
Should we use XML file or the Java conflict while it depends on your requirements But if

00:07:51.100 --> 00:07:52.980
you're not sure off which one to use,

00:07:52.980 --> 00:07:56.310
I would suggest you to go with Java conflict.

00:07:56.310 --> 00:07:58.660
As off the time of this recording,

00:07:58.660 --> 00:08:03.250
I would say to the most pot industry is still using XML convicts.

00:08:03.250 --> 00:08:05.110
But sooner or later,

00:08:05.110 --> 00:08:11.160
industry is going to move towards using a Java conflict because off its benefits.

00:08:11.160 --> 00:08:15.000
So all the double come pick is not a popular way to define your beans as off.

00:08:15.000 --> 00:08:17.650
Now it is going to be the future.

00:08:17.650 --> 00:08:19.040
So for that reason,

00:08:19.040 --> 00:08:24.150
even I would be inclined towards using Java conflict or a maximal document.

00:08:24.150 --> 00:08:29.590
Or I will try to use mics off both that we will get to know how things are configured in

00:08:29.590 --> 00:08:30.770
both these files.

00:08:30.770 --> 00:08:31.950
But again,

00:08:31.950 --> 00:08:33.720
I will try to use boat.

00:08:33.720 --> 00:08:39.520
But I won't promise I would aid to go with Java con flick which would most likely be the

00:08:39.520 --> 00:08:42.750
case or XML document or both.

00:08:42.750 --> 00:08:44.420
So let's see how it goes.

00:08:44.420 --> 00:08:48.330
Incoming videos also for using example document.

00:08:48.330 --> 00:08:52.880
I want to quickly talk about another implementation of application context,

00:08:52.880 --> 00:08:59.300
which will let you configured XML file that recites in your computer and implementation

00:08:59.300 --> 00:09:10.970
that I'm talking about is file system maximal application context and in here as an

00:09:10.970 --> 00:09:11.760
argument,

00:09:11.760 --> 00:09:14.570
you would get the part to the maximal file,

00:09:14.570 --> 00:09:15.580
but off course,

00:09:15.580 --> 00:09:21.170
more often it's always better to use an XML document that recites in the class part over

00:09:21.170 --> 00:09:23.500
giving a file part in your local file system.

00:09:23.500 --> 00:09:24.350
But,

00:09:24.350 --> 00:09:25.140
like wires,

00:09:25.140 --> 00:09:29.990
we also have many other implementations which were not concerned about right now.

00:09:29.990 --> 00:09:35.130
They would come into picture when you're trying to use spring to develop Web applications.

00:09:35.130 --> 00:09:36.610
So for now,

00:09:36.610 --> 00:09:38.050
we're not talking about them.

00:09:38.050 --> 00:09:40.070
Let me under the changes,

00:09:40.070 --> 00:09:42.650
and I'll see you in my next video.

