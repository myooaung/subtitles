WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.270
okay,

00:00:01.270 --> 00:00:05.150
I was mentioning that he shouldn't be using the single done designed baton.

00:00:05.150 --> 00:00:09.580
If you're expecting your object to hold a certain state well,

00:00:09.580 --> 00:00:10.160
in the sweet,

00:00:10.160 --> 00:00:11.650
I'm going to prove my point.

00:00:11.650 --> 00:00:13.610
And for this purpose,

00:00:13.610 --> 00:00:21.130
I went into just a new property in here that's going to hold the state off this object and

00:00:21.130 --> 00:00:22.950
in order to keep things simple.

00:00:22.950 --> 00:00:26.780
Is this going to be a string?

00:00:26.780 --> 00:00:30.650
Let's call it a message.

00:00:30.650 --> 00:00:38.180
So instead of setting the message from a method argument,

00:00:38.180 --> 00:00:45.870
we would introduce the settle method to do the same about a soldier,

00:00:45.870 --> 00:00:47.120
settlers and getters.

00:00:47.120 --> 00:00:49.470
And then I want to gender it.

00:00:49.470 --> 00:00:50.840
Only the settlement ID.

00:00:50.840 --> 00:00:56.850
Let me make the necessary changes in the main class as well.

00:00:56.850 --> 00:00:58.550
And then I'll get back.

00:00:58.550 --> 00:01:01.380
Okay,

00:01:01.380 --> 00:01:02.390
here we are again,

00:01:02.390 --> 00:01:08.150
and all I'm trying to do in here is I'm trying to create multiple treads.

00:01:08.150 --> 00:01:10.550
So here we have four different threads,

00:01:10.550 --> 00:01:15.630
and each stretches essentially hand the same base off court with slight variation.

00:01:15.630 --> 00:01:17.000
So in each thread,

00:01:17.000 --> 00:01:18.810
I'm trying to get the instance.

00:01:18.810 --> 00:01:20.150
Remember,

00:01:20.150 --> 00:01:22.140
we're still following the Singleton descent,

00:01:22.140 --> 00:01:22.750
Patton.

00:01:22.750 --> 00:01:30.970
So all these threats would get the same object every time and each threat is actually taken

00:01:30.970 --> 00:01:31.630
gear off,

00:01:31.630 --> 00:01:35.150
setting the value or no case setting the message.

00:01:35.150 --> 00:01:44.410
So the first thread is setting it s t one second thread as t two seamers with other tragedy

00:01:44.410 --> 00:01:44.960
as well.

00:01:44.960 --> 00:01:46.650
And then after that,

00:01:46.650 --> 00:01:48.950
I'm just trying to wait for a second.

00:01:48.950 --> 00:01:55.920
This method simply has a logic that keeps that read on hold for a second.

00:01:55.920 --> 00:02:04.150
And then I'm just simply trying to call this method which would just simply display that

00:02:04.150 --> 00:02:05.050
message.

00:02:05.050 --> 00:02:07.580
No.

00:02:07.580 --> 00:02:09.710
What is output that you're expecting?

00:02:09.710 --> 00:02:11.250
If I run this program,

00:02:11.250 --> 00:02:16.530
just try to imagine and guess the output Well,

00:02:16.530 --> 00:02:18.620
this is actually going to mess things up.

00:02:18.620 --> 00:02:20.150
Let's see what's going to happen.

00:02:20.150 --> 00:02:22.780
So here it is.

00:02:22.780 --> 00:02:29.100
I'm expecting something like t one t two d 34 all the not in same order,

00:02:29.100 --> 00:02:30.580
but here.

00:02:30.580 --> 00:02:32.620
We're seeing a completely different result.

00:02:32.620 --> 00:02:34.230
Why is this happening?

00:02:34.230 --> 00:02:35.750
It's quite simple.

00:02:35.750 --> 00:02:40.200
All the threads are trying to set the value on the same instance,

00:02:40.200 --> 00:02:45.850
and the last read that serves the value is the value that will be remained for that object

00:02:45.850 --> 00:02:52.670
until all the objects are just trying to display that particular message.

00:02:52.670 --> 00:02:58.580
So this is clearly a problem And what is the solution,

00:02:58.580 --> 00:02:59.270
don't you?

00:02:59.270 --> 00:03:00.450
Singleton Patton?

00:03:00.450 --> 00:03:04.050
Instant creating instance for each and every thread.

00:03:04.050 --> 00:03:09.250
And soon we're going to talk about how all these can be applicable in spring framework.

00:03:09.250 --> 00:03:10.850
So stay tuned.

00:03:10.850 --> 00:03:12.350
I would see you soon.

