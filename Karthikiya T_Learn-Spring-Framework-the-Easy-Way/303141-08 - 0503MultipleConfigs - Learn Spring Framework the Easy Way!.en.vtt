WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.450
as off now,

00:00:01.450 --> 00:00:03.460
since our application is very small,

00:00:03.460 --> 00:00:06.230
we don't really have to configure a lot of beans.

00:00:06.230 --> 00:00:09.120
But more often in real world projects,

00:00:09.120 --> 00:00:12.360
we might need to configure hundreds off beans.

00:00:12.360 --> 00:00:13.430
In that case,

00:00:13.430 --> 00:00:18.860
it may not be an ideal choice to list down all the beans that existed in your application

00:00:18.860 --> 00:00:20.650
in a single conflict file.

00:00:20.650 --> 00:00:25.160
We might want to spit that conflict file into multiple conflict files,

00:00:25.160 --> 00:00:29.280
and each file would constitute list off related beans.

00:00:29.280 --> 00:00:31.480
That way it is easier to manage.

00:00:31.480 --> 00:00:32.580
For example,

00:00:32.580 --> 00:00:35.540
let's say that you have an e commerce application.

00:00:35.540 --> 00:00:36.830
In that case,

00:00:36.830 --> 00:00:43.150
you might have a convict file with list off beans whose responsibility is to manage the

00:00:43.150 --> 00:00:44.430
customer orders.

00:00:44.430 --> 00:00:46.470
And then you may have another convict file,

00:00:46.470 --> 00:00:50.090
which may have beans that are related to payment processing,

00:00:50.090 --> 00:00:51.050
etcetera.

00:00:51.050 --> 00:00:51.970
In this video,

00:00:51.970 --> 00:00:55.150
we're going to take a look at how we can manage multiple conflict files.

00:00:55.150 --> 00:00:56.460
So in this video,

00:00:56.460 --> 00:01:00.590
we're going to take a look at how we can manage to have multiple convict files.

00:01:00.590 --> 00:01:01.180
First,

00:01:01.180 --> 00:01:03.650
let's talk about XML configuration.

00:01:03.650 --> 00:01:06.940
So in here I have defined couple of beans.

00:01:06.940 --> 00:01:07.430
No,

00:01:07.430 --> 00:01:11.150
let's say that I wanted to spread this xml file into multiple files.

00:01:11.150 --> 00:01:13.840
So I'm just going to make a copy of this file.

00:01:13.840 --> 00:01:18.920
You can give any name off your choice.

00:01:18.920 --> 00:01:21.350
I'm going to leave it to convict to dot XML.

00:01:21.350 --> 00:01:24.760
And inside this file,

00:01:24.760 --> 00:01:27.150
I'd like to define this being,

00:01:27.150 --> 00:01:31.590
so I'll get it off the other one from here said the file.

00:01:31.590 --> 00:01:36.950
And in here I'd like to keep this and get rid off this.

00:01:36.950 --> 00:01:43.790
Now we need to do something that will connect these to convict files and attack that I'm

00:01:43.790 --> 00:01:45.080
going to use to solve.

00:01:45.080 --> 00:01:49.250
That purpose is import.

00:01:49.250 --> 00:01:55.450
And you would set an attribute resource that just points to the conflict to dot XML.

00:01:55.450 --> 00:02:00.050
It's as simple as that.

00:02:00.050 --> 00:02:02.670
That's all there is to it.

00:02:02.670 --> 00:02:05.160
Now.

00:02:05.160 --> 00:02:06.350
If you're on the program,

00:02:06.350 --> 00:02:09.110
everything will work,

00:02:09.110 --> 00:02:10.260
as expected,

00:02:10.260 --> 00:02:12.070
pretty straightforward.

00:02:12.070 --> 00:02:19.570
So this instruction is as good as importing all the list of beans that are available in

00:02:19.570 --> 00:02:20.280
this file.

00:02:20.280 --> 00:02:22.980
So this file Now,

00:02:22.980 --> 00:02:26.760
let's take a look at how we can do the same in Java conflict file.

00:02:26.760 --> 00:02:34.590
So I'll go here and make a copy of Java con fink.

00:02:34.590 --> 00:02:42.330
I'm going to leave the name to Java,

00:02:42.330 --> 00:02:43.990
constitute or java.

00:02:43.990 --> 00:02:47.750
Let me open that up.

00:02:47.750 --> 00:02:50.030
Okay,

00:02:50.030 --> 00:02:50.450
Now,

00:02:50.450 --> 00:02:52.850
similar to what we have done with XML conflict.

00:02:52.850 --> 00:02:55.400
We're going to do the same in here as well,

00:02:55.400 --> 00:02:58.650
so I'll get it off this being from here.

00:02:58.650 --> 00:03:02.150
But I would keep it in the original conflict file.

00:03:02.150 --> 00:03:06.150
And just like we did an import in here,

00:03:06.150 --> 00:03:12.700
we're going to do exact same thing with an annotation.

00:03:12.700 --> 00:03:26.850
Also add rate import and inside the parentis is I would just say Java conflict to dot class

00:03:26.850 --> 00:03:26.850
.

00:03:26.850 --> 00:03:30.430
But since we don't have this method in here,

00:03:30.430 --> 00:03:41.770
we have to pass that as a perimeter and things that look smoothly.

00:03:41.770 --> 00:03:45.890
Now we don't really have to get into internals off how this is working.

00:03:45.890 --> 00:03:47.380
Who is passing the perimeter,

00:03:47.380 --> 00:03:48.100
etcetera.

00:03:48.100 --> 00:03:50.850
It would all be taken care by the spring framework.

00:03:50.850 --> 00:03:54.700
When you have this annotation at the red Bean,

00:03:54.700 --> 00:03:58.310
let's go to our program and try to see if things are working.

00:03:58.310 --> 00:04:06.350
I'm going time come in that line and run the program,

00:04:06.350 --> 00:04:10.590
and it worked well.

00:04:10.590 --> 00:04:15.270
You can also mix board Java convict an XML conflict if you wish.

00:04:15.270 --> 00:04:16.980
So let's see how it's done.

00:04:16.980 --> 00:04:20.290
All you have to do now is in straw,

00:04:20.290 --> 00:04:27.270
fusing the import annotation you would say import resource and you would toward the class

00:04:27.270 --> 00:04:29.180
but off the XML file.

00:04:29.180 --> 00:04:38.650
For that you have to mention class part and then a colon and then the name of the XML.

00:04:38.650 --> 00:04:42.450
So that's going to be conflict to dot XML.

00:04:42.450 --> 00:04:45.080
And let's if things are working.

00:04:45.080 --> 00:04:48.680
Sure enough,

00:04:48.680 --> 00:04:52.210
it worked well.

00:04:52.210 --> 00:04:54.910
Same thing can be done from XML file as well,

00:04:54.910 --> 00:04:57.220
but it is bit off a task.

00:04:57.220 --> 00:04:59.360
So let me just quickly Paul's a video,

00:04:59.360 --> 00:05:02.250
make those changes and then I'll come back.

00:05:02.250 --> 00:05:06.820
So here we are again,

00:05:06.820 --> 00:05:10.680
and in order to include a Java conflict into an XML file,

00:05:10.680 --> 00:05:15.770
you have to now introduce the following names space into your XML file.

00:05:15.770 --> 00:05:17.570
And in addition to that,

00:05:17.570 --> 00:05:22.720
you also have to include the following schema locations in order for it to work,

00:05:22.720 --> 00:05:28.420
after which you would define the stag that just simply tells spring that we're trying to

00:05:28.420 --> 00:05:29.730
use a Java conflict,

00:05:29.730 --> 00:05:36.660
and then you can define all your java conflicts by using the bean tag just as you see in

00:05:36.660 --> 00:05:37.150
here.

00:05:37.150 --> 00:05:42.350
And make sure that you include the complete package name as well,

00:05:42.350 --> 00:05:44.990
and that's all there is to it now.

00:05:44.990 --> 00:05:51.170
This is as good as including all the beans defined in here in your XML file.

00:05:51.170 --> 00:05:58.790
But make sure that you're not using the names that you have given to the methods.

00:05:58.790 --> 00:06:03.350
So let's on the program and see if things are working.

00:06:03.350 --> 00:06:06.500
And sure enough,

00:06:06.500 --> 00:06:07.350
it did.

00:06:07.350 --> 00:06:15.050
Let's try to change us to say cat and run the program and things will work.

00:06:15.050 --> 00:06:23.050
Hopes that import the class in here and on the program should work.

00:06:23.050 --> 00:06:30.440
So spring off a lot of flexibility to mix and match multiple conflict files and took on

00:06:30.440 --> 00:06:31.550
Figure your beans.

00:06:31.550 --> 00:06:34.120
And when we talk about Arthur Wiring,

00:06:34.120 --> 00:06:36.470
we'll talk more on similar lines,

00:06:36.470 --> 00:06:38.350
so I will see you soon.

