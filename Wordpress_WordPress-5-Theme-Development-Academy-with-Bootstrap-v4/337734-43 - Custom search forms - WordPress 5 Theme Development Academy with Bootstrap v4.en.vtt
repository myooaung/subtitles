WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.340 --> 00:00:06.525
In the last video, we added a custom widget for a search box.

00:00:06.525 --> 00:00:08.730
We discovered by default that

00:00:08.730 --> 00:00:12.090
the WordPress search form is not currently the best looking,

00:00:12.090 --> 00:00:14.640
and could benefit from a little styling.

00:00:14.640 --> 00:00:22.040
We can create a custom search by adding a file in 12 theme, called the searchform.php.

00:00:22.040 --> 00:00:28.135
We do this in the root of our project, the searchform.php.

00:00:28.135 --> 00:00:30.260
Then open up this file.

00:00:30.260 --> 00:00:34.300
This search form will override the default WordPress form.

00:00:34.300 --> 00:00:37.880
Creating our own will allow us to add the form in by

00:00:37.880 --> 00:00:41.540
using Bootstrap classes to match the rest of our theme.

00:00:41.540 --> 00:00:45.005
Let's begin just as we would with any of a regular form.

00:00:45.005 --> 00:00:48.250
We create the opening and the closing tag.

00:00:48.250 --> 00:00:52.385
We're then going to add a action attribute to our form.

00:00:52.385 --> 00:00:56.795
The action attribute is where we send the form data to be processed.

00:00:56.795 --> 00:00:59.060
In our case, since we are using WordPress,

00:00:59.060 --> 00:01:02.080
we're going to open up the PHP tags.

00:01:02.080 --> 00:01:07.640
Close them off. Then inside here we're going to send this to our Home URL.

00:01:07.640 --> 00:01:10.250
We're going to send this to our home URL,

00:01:10.250 --> 00:01:11.720
which is our blog.

00:01:11.720 --> 00:01:19.100
We'll do this by echoing and then escaping any unwanted characters with escape URL.

00:01:19.100 --> 00:01:22.324
We can then pass in the Home URL,

00:01:22.324 --> 00:01:25.430
passing in a forward slash as a string.

00:01:25.430 --> 00:01:27.020
This is a GET request,

00:01:27.020 --> 00:01:29.910
so we can add this in as a method.

00:01:30.290 --> 00:01:34.100
Next up we can construct our Bootstrap form by

00:01:34.100 --> 00:01:38.400
surrounding the inputs with a class of form group.

00:01:40.280 --> 00:01:43.620
This form group is going to have a label.

00:01:43.620 --> 00:01:46.485
This label is for our search,

00:01:46.485 --> 00:01:50.310
and then I'll bootstrap classes of h4.

00:01:50.310 --> 00:01:52.605
Then font italic.

00:01:52.605 --> 00:01:56.200
This is because we are using a level four heading for the rest

00:01:56.200 --> 00:01:59.680
of the widgets and also, the italic text.

00:01:59.680 --> 00:02:04.790
We can add this label as the value of search.

00:02:04.940 --> 00:02:08.845
After this label, we then create our text inputs,

00:02:08.845 --> 00:02:11.365
which is going to be for our search.

00:02:11.365 --> 00:02:13.470
We can give this input a name,

00:02:13.470 --> 00:02:16.015
and this needs to be equal to the value of

00:02:16.015 --> 00:02:20.890
S. It's name attributes of S is a required field by WordPress,

00:02:20.890 --> 00:02:24.150
so it knows where to grab the input value from.

00:02:24.150 --> 00:02:30.025
We then also need to add an ID of search which will match our label.

00:02:30.025 --> 00:02:34.295
Then we're going to add a value which is going to be PHP.

00:02:34.295 --> 00:02:37.640
Lets open up and close the PHP section.

00:02:37.640 --> 00:02:43.740
For this value, we are going to use a WordPress function called the search query.

00:02:43.930 --> 00:02:48.065
Open up the brackets and the semicolon at the end.

00:02:48.065 --> 00:02:50.960
By adding the search query as a value,

00:02:50.960 --> 00:02:56.915
this will allow the text box to contain the value of the previous search inputs.

00:02:56.915 --> 00:03:01.660
We then need to add a class just after the PHP.

00:03:01.660 --> 00:03:06.360
This class is a Bootstrap class of form control.

00:03:06.360 --> 00:03:09.260
Then let's close the sidebar down.

00:03:09.260 --> 00:03:11.060
Give this file a save,

00:03:11.060 --> 00:03:13.565
and then go over to the browser.

00:03:13.565 --> 00:03:17.375
Reload. We can just test this is working.

00:03:17.375 --> 00:03:19.630
Let's search for 'is'.

00:03:19.630 --> 00:03:22.020
That all seems to work.

00:03:22.020 --> 00:03:23.120
We can see up at the top,

00:03:23.120 --> 00:03:25.085
we have the value of S,

00:03:25.085 --> 00:03:27.920
which is the name of our input.

00:03:27.920 --> 00:03:32.840
This is set equal to the word that we just typed in of 'is'.

00:03:32.840 --> 00:03:36.710
Now search form matches in with the rest of our Bootstrap styling.

00:03:36.710 --> 00:03:41.645
These results are displayed using a fallbackindex.php template.

00:03:41.645 --> 00:03:46.530
Next up we'll create a custom template to display these results.
