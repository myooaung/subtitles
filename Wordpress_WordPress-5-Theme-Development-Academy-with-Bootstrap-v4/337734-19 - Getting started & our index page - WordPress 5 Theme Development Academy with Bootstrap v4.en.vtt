WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.560 --> 00:00:05.850
One of the first stages of creating a WordPress theme is to break up

00:00:05.850 --> 00:00:10.605
our sections of our websites into their own WordPress folders.

00:00:10.605 --> 00:00:14.655
At moments, we created the file folders in the last video,

00:00:14.655 --> 00:00:16.470
which is going to hold the header,

00:00:16.470 --> 00:00:18.960
the footer, the sidebar.

00:00:18.960 --> 00:00:20.985
We also create one for the functions,

00:00:20.985 --> 00:00:24.840
but we also have the index.php too which at

00:00:24.840 --> 00:00:29.400
the moment it just contains our content from Bootstrap template.

00:00:29.400 --> 00:00:34.605
Let's get to work with taking our content into their own separate files.

00:00:34.605 --> 00:00:36.690
We'll begin with the header,

00:00:36.690 --> 00:00:40.035
so if we scroll down to the closing header tag,

00:00:40.035 --> 00:00:42.040
which is this one here,

00:00:42.040 --> 00:00:45.365
select all the way up to the DOCTYPE.

00:00:45.365 --> 00:00:47.890
Going to put this out,

00:00:47.890 --> 00:00:54.890
then paste its contents into the header.php breaking up our code into small files like

00:00:54.890 --> 00:00:58.550
this is a really convenient way of doing things rather

00:00:58.550 --> 00:01:02.710
than having this header hard-coded into every single page.

00:01:02.710 --> 00:01:04.260
WordPress will just have it in

00:01:04.260 --> 00:01:08.805
one single file and then inject it to each page as required.

00:01:08.805 --> 00:01:15.630
We can also go back to our index and do the same for the footer, down at the bottom.

00:01:16.940 --> 00:01:20.895
Scroll down to our footer section,

00:01:20.895 --> 00:01:27.730
put the section out all the way down to the bottom including the HTML.

00:01:28.850 --> 00:01:32.595
Paste this into our footer.php,

00:01:32.595 --> 00:01:37.220
if we save this and reload the browser on our index,

00:01:37.220 --> 00:01:40.700
we see we just have the content which is placed in between.

00:01:40.700 --> 00:01:43.510
We no longer have the header and footer.

00:01:43.510 --> 00:01:46.245
To put these back into our theme,

00:01:46.245 --> 00:01:50.620
we need to go into the index page where once these in.

00:01:50.620 --> 00:01:52.625
Hop at the very top,

00:01:52.625 --> 00:01:54.965
in place of the header content,

00:01:54.965 --> 00:01:57.200
we can open up the PHP tags,

00:01:57.200 --> 00:02:01.555
which is the left angle bracket, question mark, PHP.

00:02:01.555 --> 00:02:05.780
Then we can use a WordPress function, pulling this header.

00:02:05.780 --> 00:02:12.395
It's WordPress function is called "get_header" with the brackets stuffed afterwards.

00:02:12.395 --> 00:02:17.300
Since we are now coming back out to PHP and then into regular HTML,

00:02:17.300 --> 00:02:20.240
we need to close off our PHP tags with

00:02:20.240 --> 00:02:24.100
a question mark and the angle brackets, just like this.

00:02:24.100 --> 00:02:29.880
Then we do a very similar thing at the bottom in place of our footer,

00:02:29.900 --> 00:02:34.845
where our footer was when inside the PHP.

00:02:34.845 --> 00:02:39.270
We use a WordPress function this time called get_footer,

00:02:39.270 --> 00:02:42.275
and then close off our PHP,

00:02:42.275 --> 00:02:45.565
save this, and reload the browser.

00:02:45.565 --> 00:02:49.530
Still doesn't look like much our content is back in place,

00:02:49.530 --> 00:02:52.650
we have the header section, down at the bottom,

00:02:52.650 --> 00:02:53.985
we have our footer,

00:02:53.985 --> 00:02:56.310
and this is all fine for now.

00:02:56.310 --> 00:02:59.040
Of any function from PHP,

00:02:59.040 --> 00:03:03.270
we can begin to work with this by adding a comment at the top.

00:03:03.370 --> 00:03:05.945
This is going to be a PHP commands,

00:03:05.945 --> 00:03:09.385
so let's open and close the PHP brackets.

00:03:09.385 --> 00:03:12.455
We start a comment with forward slash and star,

00:03:12.455 --> 00:03:15.425
then we close this off with the reverse with a star,

00:03:15.425 --> 00:03:18.975
and a forward slash, and then a star for each new line.

00:03:18.975 --> 00:03:22.300
This is going to be a description of the file and I'm just going to

00:03:22.300 --> 00:03:26.875
add function definitions for

00:03:26.875 --> 00:03:30.640
Tranquil Spa theme since

00:03:30.640 --> 00:03:35.125
this file is going to contain all functions which are required for our theme.

00:03:35.125 --> 00:03:38.515
This file is used to change the default behavior.

00:03:38.515 --> 00:03:42.460
It can be used to add functionality and also new features.

00:03:42.460 --> 00:03:47.890
These functions can either be native WordPress functions provided tubers,

00:03:47.890 --> 00:03:51.115
or we can also add our own custom functions too.

00:03:51.115 --> 00:03:54.100
We'll look at both types during this course.

00:03:54.100 --> 00:03:58.050
The first thing to do is to create a setup function.

00:03:58.050 --> 00:04:00.785
This will run as soon as our theme loads.

00:04:00.785 --> 00:04:02.735
Then inside of this function we can add

00:04:02.735 --> 00:04:07.175
any necessary functionality which we need to be loaded straight away,

00:04:07.175 --> 00:04:09.080
such as our nav menus.

00:04:09.080 --> 00:04:12.950
Underneath the comments, I'm going to open up the PHP,

00:04:12.950 --> 00:04:15.704
then create a PHP function,

00:04:15.704 --> 00:04:22.195
this name of the function is going to be Tranquil wp_setup,

00:04:22.195 --> 00:04:24.375
the brackets just afterwards.

00:04:24.375 --> 00:04:26.075
Then our function body,

00:04:26.075 --> 00:04:30.075
the first thing we want to do is add theme support.

00:04:30.075 --> 00:04:34.310
This will register our theme support for a given feature.

00:04:34.310 --> 00:04:38.190
The first one is going to be automatic-feed-links,

00:04:41.210 --> 00:04:43.815
separated by the dashes.

00:04:43.815 --> 00:04:49.505
Automatic-feed-links enables posts and comments RSS feeds by default.

00:04:49.505 --> 00:04:53.420
These feeds will be displayed in the head section automatically.

00:04:53.420 --> 00:04:58.970
I'm going to duplicate this and also add theme support for the title tag,

00:04:58.970 --> 00:05:04.595
title-tag and the semicolons at the end.

00:05:04.595 --> 00:05:08.660
This lets WordPress manage our document title,

00:05:08.660 --> 00:05:10.685
in place of the title tag.

00:05:10.685 --> 00:05:14.945
This is basically saying we won't WordPress to control the title of the page.

00:05:14.945 --> 00:05:17.450
Rather than using our hard coded one.

00:05:17.450 --> 00:05:19.115
Outside of our function,

00:05:19.115 --> 00:05:21.570
we then add an action.

00:05:21.580 --> 00:05:24.530
This is going to take in two arguments,

00:05:24.530 --> 00:05:28.900
the first one is after_setup_theme,

00:05:28.900 --> 00:05:33.140
and then the second one is the name of our function,

00:05:33.140 --> 00:05:39.125
which is tranquilwp_setup, a semicolon at the end,

00:05:39.125 --> 00:05:41.605
and I can close off the PHP.

00:05:41.605 --> 00:05:46.160
After_setup_theme, which we passed in as the first argument,

00:05:46.160 --> 00:05:47.600
is a WordPress hook,

00:05:47.600 --> 00:05:50.390
which will be called queuing page load,

00:05:50.390 --> 00:05:52.370
once the theme is initialized,

00:05:52.370 --> 00:05:55.280
it's generally used to form a basic setup,

00:05:55.280 --> 00:05:59.560
registration, and also any need actions for our theme.

00:05:59.560 --> 00:06:04.415
We then go ahead and pass in our own custom set of function.

00:06:04.415 --> 00:06:10.120
Also run and provide our own custom startup functionality, which you've added in here.

00:06:10.120 --> 00:06:12.980
Next, can add the content width.

00:06:12.980 --> 00:06:16.550
First, need to check if the content width has already been set.

00:06:16.550 --> 00:06:22.790
This feature allows us to set the maximum allowed width or any content added 12 theme,

00:06:22.790 --> 00:06:25.120
such as an image in a post.

00:06:25.120 --> 00:06:27.635
Our design doesn't look out of place.

00:06:27.635 --> 00:06:32.330
If we use a was to go ahead and upload a larger than expected image.

00:06:32.330 --> 00:06:36.335
The first thing we need to do is to create a PHP if statement.

00:06:36.335 --> 00:06:40.460
To check if the content which is already been set,

00:06:40.460 --> 00:06:45.430
we can access the content with with the variable of content_width.

00:06:45.550 --> 00:06:50.470
Remember, PHP uses a $ symbol to declare a variable.

00:06:50.470 --> 00:06:52.860
We, however, want to do the opposite,

00:06:52.860 --> 00:06:56.160
and check if the content width has not been set.

00:06:56.160 --> 00:06:59.125
We do this with a exclamation mark.

00:06:59.125 --> 00:07:02.015
If the content width has not been set,

00:07:02.015 --> 00:07:04.760
we want to go ahead and set it ourselves.

00:07:04.760 --> 00:07:13.420
We can grab this variable of content width and set it to a pixel value of 660.

00:07:13.420 --> 00:07:17.990
Content width can also be accessed by plug-ins to allow

00:07:17.990 --> 00:07:22.270
our themes integrate with any of the plug-ins which are installed.

00:07:22.270 --> 00:07:24.470
If we go ahead and save this file,

00:07:24.470 --> 00:07:28.999
we shouldn't see anything different inside the browser once reload,

00:07:28.999 --> 00:07:34.180
since we haven't done anything other than a break of this content into separate files.

00:07:34.180 --> 00:07:38.840
However, this is an important first step into creating our WordPress theme.

00:07:38.840 --> 00:07:43.890
Now we'll move forward onto working with the header and footer files.
