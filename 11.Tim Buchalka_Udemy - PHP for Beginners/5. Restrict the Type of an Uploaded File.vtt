WEBVTT

00:05.800 --> 00:13.780
When we upload a file we can also restrict the type of file uploaded to the server when a file is uploaded

00:13.990 --> 00:19.340
the type elements of the array is set to the MIME type of the file.

00:21.920 --> 00:29.780
MIME types are simple strings are used to identify file formats for example a plain text files MIME

00:29.780 --> 00:35.100
type text slash plane AJ pic image is image.

00:35.210 --> 00:37.860
Slash j peg and so on.

00:38.330 --> 00:46.040
The complete list of MIME types is very long but this page lists some important ones relevant to web

00:46.070 --> 00:46.970
applications

00:49.650 --> 00:52.000
as we are uploading an image.

00:52.130 --> 00:58.550
We can restrict the MIME type of the uploaded file to types that correspond to the types of image files

00:58.820 --> 01:00.930
we want to allow.

01:01.040 --> 01:06.410
First let's add an array of acceptable MIME types.

01:06.410 --> 01:14.510
Then we'll use the in array function to check if the uploaded file type is in the array.

01:14.510 --> 01:22.480
This returns true if it is so will negate this to check if it's not in the array.

01:22.610 --> 01:25.380
If it's not we'll throw an exception.

01:28.720 --> 01:34.220
So now if I try and upload a file that's not an image.

01:34.690 --> 01:40.540
We get the error message if I upload an image file.

01:41.650 --> 01:44.770
No error message is shown.

01:46.670 --> 01:54.210
The MIME type in the files array is set on the client however and isn't checked by P 8 p.

01:54.290 --> 01:58.250
It can be easily set to something else by a malicious user.

01:58.250 --> 02:00.360
So we can't trust it.

02:02.860 --> 02:10.450
We could check the file extension for example checking that the file name ended in dot p n g r dot j

02:10.450 --> 02:15.900
peak for example and this would probably be okay.

02:16.030 --> 02:24.430
It is possible however to configure Apache to interpret multiple file extensions for the same file.

02:24.430 --> 02:32.080
This means that in theory you could append dot P N G to the end of a p h prescript view the image in

02:32.080 --> 02:36.790
a browser and execute the P HP code in the file.

02:36.790 --> 02:43.750
Although this is unlikely because of this it's best not to completely rely upon the file name extension

02:44.050 --> 02:47.420
to determine the type of file.

02:47.620 --> 02:55.390
There is an alternative we can use the file info functions in P P to more reliably determine the mime

02:55.390 --> 02:56.970
type of a file.

02:59.660 --> 03:07.350
First we call the file info open function passing in the mime type constant to get a new file.

03:07.360 --> 03:16.460
Info resource then we call the final infold file function passing in the file info resource and the

03:16.460 --> 03:19.790
path of the uploaded file.

03:19.790 --> 03:27.210
When files are uploaded they're temporarily saved to the path in the temp name element of the array.

03:27.650 --> 03:31.480
We'll look at this in more detail shortly.

03:31.490 --> 03:37.640
This returns a string containing the MIME type so when we check if it's in the array we can replace

03:37.640 --> 03:42.090
the type from the files array with this value.

03:45.900 --> 03:49.410
Let's try uploading a file that's not an image.

03:53.040 --> 03:55.200
And we get the error message.

03:55.570 --> 03:58.220
If I upload a valid image file.

04:00.220 --> 04:02.730
Then no error message is shown.
