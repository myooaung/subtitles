WEBVTT

00:04.450 --> 00:07.810
In a class with public properties like these.

00:07.870 --> 00:13.000
The value of these properties can be set directly like this.

00:13.210 --> 00:19.990
However as P HP is very loose when it comes to what value you can assign to a variable there's nothing

00:19.990 --> 00:25.180
to stop you assigning a value of any type to these properties.

00:25.180 --> 00:32.000
This could be a problem if one of the class methods expects data of a certain type.

00:32.140 --> 00:37.770
One solution to this is to use geter and SET methods instead.

00:37.840 --> 00:45.590
These work by first making the properties private and then adding to public functions.

00:45.730 --> 00:52.260
One to get the property value and one to set it.

00:52.270 --> 00:57.260
These are commonly referred to as geter and set up methods.

00:57.340 --> 01:02.900
You need to add a Jetter and set a method for each property.

01:03.490 --> 01:10.900
While the getter method to do is we turn the value of the property and all the setton methods do is

01:10.900 --> 01:15.780
set the value of the property to a value passed in as an argument.

01:18.510 --> 01:24.750
Then when you are using the object instead of accessing the properties directly like this which you

01:24.750 --> 01:31.370
can no longer do because the properties are private you call the setter's to assign values to the properties

01:33.360 --> 01:38.010
and the getters to read a property value like that.

01:42.000 --> 01:48.360
When we run this cold we get the value of the name property but access to via a getter method instead

01:48.360 --> 01:50.500
of the property directly.

01:52.800 --> 01:59.190
With the getters and setters you can control exactly what is stored in an object's properties and reject

01:59.220 --> 02:01.800
any values that are not valid.

02:01.800 --> 02:06.390
It's also possible to perform additional processing when a value is set.

02:06.390 --> 02:12.670
I'll get for example setting a counter are writing a value to a log file.

02:12.840 --> 02:23.310
You can also make a property read only by deleting the setter are right only by deleting the geter Opinion

02:23.370 --> 02:29.720
and which method to use is divided while getters and setters do offer many advantages.

02:29.760 --> 02:36.220
They do make the code that uses them less readable and they require more effort to write.

02:36.240 --> 02:39.970
You have to create two methods for each property.

02:43.410 --> 02:49.450
Having said that though several code editors will generate getters and setters for you after Mattingly.

02:49.740 --> 02:56.010
For example if you using atom there's a package here that does just that.

02:56.010 --> 03:03.690
There's also a third option using what P HP calls Magic methods similar to the construct method they

03:03.690 --> 03:12.850
get and set magic methods can be used to access private properties.

03:12.990 --> 03:19.660
But I don't recommend using these as they can make your code difficult to understand and debug.

03:22.900 --> 03:25.830
Although getters and setters do have advantages.

03:26.020 --> 03:33.280
I think they can make you a class for the complex and calling them makes that code difficult to read.

03:33.280 --> 03:39.810
Personally I prefer to use public properties most of the time but if I do need to do additional processing

03:40.180 --> 03:46.910
I'll have a read only property for example then and only then will they use their getter setter.
