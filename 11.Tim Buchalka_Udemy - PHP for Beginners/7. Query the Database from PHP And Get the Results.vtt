WEBVTT

00:05.180 --> 00:10.810
Now that we've connected to the database from HP we can query it for some data.

00:11.300 --> 00:18.090
First let's create a variable with the ESC U L statement that we want to use.

00:18.200 --> 00:25.040
You could put this all on one line but I've split it up so it's easier to read and it's perfectly okay

00:25.040 --> 00:27.610
to do this with strings in p p.

00:28.170 --> 00:33.470
And note the semicolon at the end of the school is optional here.

00:36.470 --> 00:41.420
Next we need to send this esky Well query to the database will use this.

00:41.450 --> 00:47.600
My Escuela query functioned for that and again will use the procedural style for now as that's what

00:47.600 --> 00:50.040
we've been using up to this point.

00:52.340 --> 00:59.840
So we'll call this function passing in the connection and the ESC U L and it will return some results

00:59.840 --> 01:00.860
to us.

01:03.810 --> 01:07.690
These results will be the boolean value false.

01:07.710 --> 01:08.940
If there was an error.

01:09.210 --> 01:11.230
So we need to check for that.

01:13.370 --> 01:19.150
We could do that like this using the HP comparison operator.

01:19.160 --> 01:20.500
We learnt earlier.

01:20.660 --> 01:23.590
However there is a potential problem with this.

01:26.290 --> 01:34.460
If we compare a value to false using this operator the following values are also considered to be false.

01:34.720 --> 01:36.160
An empty string.

01:36.370 --> 01:38.980
An empty array and so on.

01:39.520 --> 01:46.900
To specifically check for the value false we need to use the identical comparison operator here which

01:46.900 --> 01:48.860
is three equal signs.

01:51.040 --> 01:58.320
So if we change the code to use that we can be sure that will only enter this cold block.

01:58.420 --> 02:07.660
If there is actually an error in that case let's print out the text of the error message using the my

02:07.870 --> 02:10.020
well error function.

02:10.720 --> 02:15.980
If there isn't an error we want to get the result set.

02:19.310 --> 02:25.750
Now you might see some code where the results are retrieved and processed one at a time using the fetch

02:25.990 --> 02:29.980
function and some people prefer to do that.

02:30.010 --> 02:36.490
However I think it's much clearer to fetch all the results at once into an array using the fetch all

02:36.490 --> 02:42.910
method as that where you dont have to check for the end of the resultset and your not mixing code that's

02:42.910 --> 02:46.070
retrieving results with presentation code.

02:48.510 --> 02:53.700
So will call the fetch I'll function passing in the results.

02:53.760 --> 02:59.550
Variable and this will return an array with the resultset from the database.

02:59.550 --> 03:04.360
So for now let's just dump that out like that.

03:07.030 --> 03:13.780
If we try that out in a browser we get an array containing data that's come from the database.

03:13.780 --> 03:19.530
If we view the source it's easier to see the structure of the array.

03:19.690 --> 03:21.780
It's an array of five items.

03:21.790 --> 03:30.670
So five riccarton the database each one of these represents an individual rijkaard the indexes of these

03:30.690 --> 03:32.480
records and numbers though.

03:32.800 --> 03:36.530
So we don't really know what these fields are.

03:40.610 --> 03:47.980
There's a second argument we can pass to this function which will make this return an associate of a

03:47.990 --> 03:49.290
ray instead.

03:52.170 --> 04:00.520
Now in the browser the results have indexes that correspond to the column names from the database idae

04:01.170 --> 04:06.940
title content and so on and of their corresponding values.

04:10.910 --> 04:15.240
Finally let's just check that our error handling code is working.

04:15.620 --> 04:26.330
If I introduce an error into this esky well like that I've spelt the key word select wrong in the browser

04:26.360 --> 04:28.510
we get an error message.

04:28.670 --> 04:34.430
It's important to pay attention to the text of the message as it will help you to find out exactly what

04:34.430 --> 04:35.930
the error is.

04:36.110 --> 04:41.290
In this case it's saying we have a syntax error in our escudo.

04:43.430 --> 04:45.680
You can correct that.

04:45.680 --> 04:47.700
But this time replace it with another error.

04:47.720 --> 04:50.290
This time in the table name.

04:55.130 --> 05:01.910
Now in the browser we get another error message saying that this table doesn't exist so the error message

05:01.940 --> 05:05.650
text will help us to correct the error.

05:06.920 --> 05:08.820
Let's just fix that.

05:13.210 --> 05:18.240
And our code is working properly again selecting data from the database.
