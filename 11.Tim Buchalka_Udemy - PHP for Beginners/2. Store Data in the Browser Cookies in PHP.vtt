WEBVTT

00:05.750 --> 00:14.390
By default sessions in pay HP stirrer cookie in the browser setting and retrieving the cookie value

00:14.420 --> 00:21.070
is handled After Matty Klee by the session functions in P eight p that we just saw.

00:21.110 --> 00:24.320
We can also manage cookies manually.

00:27.420 --> 00:30.260
So what exactly are cookies.

00:30.720 --> 00:37.540
Cookies are basically small strings of text that a website can store in a browser.

00:37.620 --> 00:44.710
The Web site can set a value in a cookie and later retrieve that value in subsequent requests.

00:47.910 --> 00:53.720
Cookies are specific to a particular website are more specifically domain.

00:55.460 --> 01:02.110
One website can not read the cookies stored in the browser they were sent from a different domain.

01:07.320 --> 01:14.720
Cookies can contain any text you like but they're easily viewed by anyone who has access to the browser.

01:14.790 --> 01:22.590
They're not hidden are encrypted in any way so we don't steal anything sensitive in there like an email

01:22.590 --> 01:24.950
address of a user idae.

01:28.060 --> 01:35.290
To set a cookie in P HP we use the set cookie function and once they've been set they can be read back

01:35.530 --> 01:37.010
in the cookie array.

01:40.990 --> 01:42.920
Let's look at an example.

01:43.180 --> 01:48.290
Here we have a script called Set cookie in which we're setting a cookie.

01:48.340 --> 01:54.790
The first argument to the set cookie function is the name of the cookie And the second argument is the

01:54.790 --> 01:56.060
value.

01:56.080 --> 02:00.920
So here we're setting a cookie called example with the value of hello.

02:02.340 --> 02:10.080
In this script we are just printing out the contents of the cookie array and in the index page we just

02:10.080 --> 02:13.030
have a link to both files.

02:15.480 --> 02:22.570
As we can see from the storage inspector in this browser There are currently no cookies for this domain.

02:23.040 --> 02:29.580
If I run the set cookie script then there's the cookie we just set.

02:31.260 --> 02:40.150
If I go back and open the read script we can see the cookie value in the P 8 p cookie array.

02:43.930 --> 02:48.570
By default the cookie is set to expire at the end of the session.

02:48.880 --> 02:53.190
This means that when the browser is closed the cookie is deleted.

02:56.470 --> 03:02.330
We can change this by adding an expiry using the third argument of set cookie.

03:04.330 --> 03:11.590
This value is a Unix timestamp which means it's an integer number of seconds since the 1st of January

03:11.800 --> 03:13.530
1970.

03:13.900 --> 03:20.600
The easiest way to set this is to use the time function and add a number of seconds to it.

03:20.680 --> 03:27.640
For example here I am adding two days worth of seconds to the current time meaning the cookie will expire

03:27.970 --> 03:29.650
two days from now.

03:33.170 --> 03:40.380
Now if I set the cookie we can see it has a specific expiry date and time.

03:46.230 --> 03:47.970
To delete a cookie.

03:47.970 --> 03:51.810
We set the expiry to a time in the past.

03:51.810 --> 03:56.190
For example here we're setting the expiration date to 1 hour ago.

03:56.370 --> 03:59.170
Which is three thousand six hundred seconds.

04:02.370 --> 04:11.400
So if I open this delete cookie script the cookie is deleted and it's no longer present in the cookie

04:11.400 --> 04:13.790
array on the server.

04:16.790 --> 04:23.420
Cookies also have a path attribute this defaults to the current directory.

04:23.420 --> 04:24.850
The script is running in.

04:29.720 --> 04:30.940
In this script.

04:31.100 --> 04:37.740
In a subfolder of the root we're setting a cookie as before but with a different name.

04:42.330 --> 04:49.950
When I run this there's the cookie and X path value is set to the folder.

04:49.950 --> 04:52.590
The script is in cookies.

04:52.590 --> 04:57.830
It's set in subdirectories are only available to scripts in those directories.

04:58.080 --> 05:06.830
So if I open the script to read cookies which is in the root we can't see it's in the cookie array.

05:12.400 --> 05:18.250
We can specify that the cookie should be available in the whole domain by adding a value for the path

05:18.340 --> 05:20.940
argument of the set cookie function.

05:26.350 --> 05:35.040
Now if I set the cookie from the subdirectory its path is set to the root instead of the subfolder.

05:35.620 --> 05:43.060
If we view the cookies array we can now see the cookie set from the subdirectory.

05:49.080 --> 05:54.680
As we just saw although session cookies are handled are to magically baby HP.

05:54.900 --> 05:58.920
So simply using the session functions like session starts.

05:58.920 --> 06:02.660
We don't need to do anything manually with the session cookie.
