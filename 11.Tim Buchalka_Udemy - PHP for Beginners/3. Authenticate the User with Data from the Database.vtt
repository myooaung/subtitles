WEBVTT

00:04.450 --> 00:08.010
Now we have a database table where we can still user data.

00:08.020 --> 00:15.470
We can replace this code in the User class that contains a hard coded username and password.

00:16.900 --> 00:21.090
First let's add a ricard to the user table.

00:22.480 --> 00:28.300
We'll let the database assign the idea so we'll leave that column blank and we'll just supply the username

00:29.470 --> 00:38.860
password and click go and there's the user rijkaard.

00:42.280 --> 00:49.390
Back in the authenticate method in the User class we can now remove this line and get the user data

00:49.390 --> 00:52.000
from the database instead.

00:52.000 --> 01:01.090
First Well at some ESC you l to select the user record with a place holder father user name then as

01:01.090 --> 01:02.970
this is a prepared statement.

01:03.100 --> 01:11.750
We prepare it which requires the database connection so thats out that as an argument to the method.

01:12.810 --> 01:15.590
And also to the comment block.

01:17.070 --> 01:26.250
Then we bind the value of the user name argument to the user name parameter which we blind as a string.

01:26.250 --> 01:34.170
Then we execute it and we won't bother checking if this returns true are not as if there's an exception

01:34.170 --> 01:44.670
we can deal with it later then we'll fetch the results into a variable like that by default This returns

01:44.730 --> 01:50.250
an array but as we're dealing with objects now we want an object instead.

01:50.280 --> 01:58.190
So let's set the fetch mode as we do it with the article class to return an object of this user class.

02:01.960 --> 02:07.000
So now the fetch method will return an object if a record is found and false.

02:07.000 --> 02:19.990
Otherwise if an object is returned will next check the password and if it matches return true.

02:20.170 --> 02:26.860
If we don't return anything from this method nold will be returned which still works in an IF statement

02:27.070 --> 02:31.720
as its boolean equivalent is false so we don't need to return false.

02:31.870 --> 02:34.630
If the username our password are wrong.

02:35.650 --> 02:40.090
Let's update the comment though like that.

02:44.810 --> 02:53.300
Then in our logging script we need to pass in the database connection object to this method and for

02:53.300 --> 03:02.000
that we need to require the database class at the top and then create a database object and get the

03:02.000 --> 03:03.330
connection.

03:07.500 --> 03:09.010
Let's give that a try.

03:09.270 --> 03:15.910
First without any credentials and that doesn't our case as expected.

03:15.990 --> 03:17.520
If I get the username wrong

03:20.310 --> 03:23.810
it also works and if I get the password wrong

03:27.450 --> 03:34.340
as well if I put the correct username and password.

03:37.390 --> 03:44.140
It Arthur indicates successfully using the rijkaard in the database instead of hard coded values.

03:48.460 --> 03:54.430
We can actually clean this code up a bit instead of assigning the result of the fetch method to the

03:54.430 --> 03:59.260
user variable then checking this in an IF statement below.

03:59.410 --> 04:01.510
We can do this in just one line

04:04.000 --> 04:07.690
assigning the variable at the same time we check its value

04:10.630 --> 04:11.640
on the next line.

04:11.650 --> 04:15.480
We're checking the Bula in value of this statement.

04:18.660 --> 04:19.350
Then returning.

04:19.350 --> 04:19.950
True.

04:20.010 --> 04:26.900
If it's true so we can just return this directly instead like that.

04:31.180 --> 04:33.310
And this still works as before

04:36.890 --> 04:39.280
logging goes in successfully.
