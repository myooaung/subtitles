WEBVTT

00:05.400 --> 00:08.980
When a user clicks on a link our submits a form.

00:09.180 --> 00:15.630
The web browser sends a request to the web server and the server sent back a response which is normally

00:15.900 --> 00:17.990
a full page if it's dml.

00:19.180 --> 00:26.320
One drawback with this though is that each response sent back is a full page of AITs to AML which means

00:26.380 --> 00:29.250
the entire page needs to be rendered.

00:31.690 --> 00:39.520
An alternative to full page requests is to use AJAX instead of the browser requesting a whole page in

00:39.520 --> 00:47.860
response to a click on a link or a farm submission javascript code sends a request to the server and

00:47.860 --> 00:54.970
the server can respond with h.t. AML are just data as we'll see in a moment.

00:54.970 --> 01:02.320
Using AJAX means that only a small amount of data can be passed between the browser and the server which

01:02.320 --> 01:06.870
can be much faster than requesting and returning an entire page.

01:11.520 --> 01:13.430
Let's look at an example.

01:13.620 --> 01:21.030
Here we have a p h piece prescript with some basic h t email and we using the P P date function to print

01:21.030 --> 01:24.550
out the current time inside a time element.

01:27.820 --> 01:34.960
If we view this in a browser the current time on the web server is printed out to update the time that's

01:34.960 --> 01:35.890
displayed.

01:35.890 --> 01:40.560
I need to refresh the entire page by clicking the reload button.

01:41.080 --> 01:47.230
This requests the entire page again from the web server and the web server sends the entire page back

01:47.230 --> 01:47.980
again.

01:52.120 --> 01:58.480
Let's change this so we can update just the parts of the page that contains the time instead using an

01:58.510 --> 02:00.480
AJAX request.

02:00.610 --> 02:08.310
First let's add a button with a value for the I.D. attribute so we can uniquely identify it.

02:09.350 --> 02:12.730
Then a reference to the J query library on a C D n.

02:14.130 --> 02:22.160
And then a script tag containing a handler for the Click event of the button.

02:25.770 --> 02:29.150
To make an AJAX request using plain javascript.

02:29.280 --> 02:31.160
We need all this code.

02:33.580 --> 02:35.050
Using J query.

02:35.290 --> 02:43.210
We can just call the Ajax method although using J query might be slightly slower to execute.

02:43.210 --> 02:48.520
It's much easier to code especially for Ajax requests.

02:51.440 --> 02:56.590
Then Ajax request makes a request to a U R L just like a link or a farm.

02:56.600 --> 02:57.880
Submission does.

02:58.160 --> 03:04.490
So let's add another script kalid get timed up p HP.

03:11.030 --> 03:14.270
And in here lets just print out the date.

03:15.450 --> 03:21.440
Our more specifically the time part of the current date just like we're doing in the other script.

03:24.800 --> 03:30.260
If we load this page directly in the browser it just prints out the current time.

03:34.640 --> 03:37.100
So in the handler for the button click.

03:37.230 --> 03:37.990
That's Carl.

03:38.030 --> 03:45.120
Jay Query Ajax function passing in the U R L to the file we just created.

03:45.120 --> 03:48.900
As this is in the same folder we can just use the file name.

03:52.150 --> 03:58.620
To handle the response when the server returns a response to the Ajax request a done method is execute

03:58.620 --> 03:59.320
it.

04:01.670 --> 04:11.120
We append this to the Ajax request and pass it a function which is what is executed when the server

04:11.180 --> 04:12.630
returns the response.

04:13.770 --> 04:18.830
The contents of the response are placed in the data argument to this function.

04:19.780 --> 04:23.840
For now let's just show this data in an alert message.

04:29.330 --> 04:35.720
When we first load the page the time shown is the time when the server executed the P HP to generate

04:35.720 --> 04:37.060
the page.

04:37.130 --> 04:45.040
If I click the button we are shown the time coming from the server getting it via an AJAX request.

04:45.410 --> 04:51.740
The page in the browser hasn't been updated as the time shown hasn't changed but every time I click

04:51.740 --> 04:58.320
the button it's making an AJAX request to the server which runs the P 8 p in the get timed updates B

04:58.340 --> 05:02.210
script and returns this to the javascript code.

05:04.050 --> 05:07.250
Which it then displays in the message box.

05:12.190 --> 05:19.450
Instead of showing this in a message box let's update the part of the page where the time is first let's

05:19.510 --> 05:23.630
add an idee to the AITs to email element where we're displaying the time.

05:26.410 --> 05:36.670
Then we can get this element based on its side E and use the h.t. AML method in J query to set the contents

05:36.670 --> 05:40.730
of that element to the response that comes back from the server.

05:45.640 --> 05:54.200
Now when I click the button the time is refreshed but only that part of the page has changed.

05:55.550 --> 06:02.320
We're updating only part of a page using an AJAX request instead of reloading the entire page.

06:02.360 --> 06:10.160
The server just returns the time instead of an entire page relates to AML which is faster and saves

06:10.220 --> 06:11.350
server bandwidth.
