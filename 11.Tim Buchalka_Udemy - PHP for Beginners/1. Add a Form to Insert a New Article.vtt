WEBVTT

00:04.460 --> 00:06.580
With what we've developed so far.

00:06.710 --> 00:12.260
We have a page where we can give you a list of all the articles in our database and a page where we

00:12.260 --> 00:19.370
can view a single article the data file these pages is coming from the database here.

00:19.370 --> 00:23.290
We can add new articles using P P madman here.

00:23.390 --> 00:32.050
But this isn't very user friendly and it's not what you do in a content management system.

00:32.180 --> 00:39.230
So now that we know how h.t. email farmers work to get data from the user Let's add a new page so we

00:39.230 --> 00:49.240
can insert a new article into the database from the browser we'll call it new article it.

00:49.270 --> 00:49.670
P

00:52.910 --> 01:02.660
let's include our standard h.t. Mail header and footer and then add a subheading and then add our farm

01:04.760 --> 01:11.740
as we'll be inserting data into the database we'll use the post method inside our farm.

01:11.780 --> 01:19.310
Let's add an input for the articles title making sure we include the name attributes so that we can

01:19.310 --> 01:20.990
use that to get the value.

01:20.990 --> 01:31.040
When the farm is submitted Let's add a label for this control with the FA attributed the label matching

01:31.040 --> 01:34.510
the attribute of the input.

01:36.230 --> 01:43.550
And let's wrap these two elements in a div element so that they're shown on a new line.

01:43.550 --> 01:46.980
Next let's add a control for the articles content.

01:48.400 --> 01:55.090
This time a text area so we can add some more than one line of taxed will add a corresponding label

01:56.350 --> 02:01.290
and in closing div element like that.

02:01.390 --> 02:09.190
Next a control for the articles publication date which is a date time local type and its corresponding

02:09.190 --> 02:13.980
label and div wrapper element.

02:14.110 --> 02:19.230
Finally it will add a button to submit the farm like that.

02:22.680 --> 02:30.090
As we submitting the farm to itself let's add some code up here to process the farm data once it's submitted

02:32.700 --> 02:41.040
as we're using the post method we can detect this and for now let's just dump out the posted data like

02:41.040 --> 02:42.110
that.

02:44.810 --> 02:46.880
In the browser it looks like this.

02:47.000 --> 02:57.590
We've got inputs for the articles title content and publication date and time we can enter values and

02:57.590 --> 03:04.350
submit the farm and we can access the posted data in our script.

03:05.480 --> 03:09.390
Next we need to insert this data into the database.
