WEBVTT

00:07.380 --> 00:14.550
Soulfire We've been writing a series of statements in P HP the two executed one after another.

00:14.640 --> 00:21.240
We've also learnt how to encapsulate a book of code into a function and then call that function from

00:21.240 --> 00:22.700
our code.

00:22.710 --> 00:24.780
This is known as procedural programming

00:27.570 --> 00:29.940
with object oriented programming.

00:30.000 --> 00:33.120
We can encapsulate code into classes.

00:33.630 --> 00:36.720
A class is like a blueprint or a template.

00:37.050 --> 00:42.020
We can then use this template to create objects of that class.

00:42.240 --> 00:49.860
For example you might have a User class and objects of that class could include Dave Alice Bob and so

00:49.860 --> 00:51.420
on.

00:51.990 --> 00:58.180
You might have a book class and objects of that class might include Hamlet Moby Dick.

00:58.180 --> 01:00.930
Wire and Peace and so on.

01:00.930 --> 01:07.350
Once a class is defined you can create as many objects as you like of that class.

01:10.300 --> 01:12.070
Let's look at an example.

01:12.220 --> 01:15.890
First let's create a file called 0 exampled up here.

01:15.910 --> 01:16.250
P

01:19.000 --> 01:25.340
and will add the p p opening tag to define a class in P HP.

01:25.360 --> 01:30.420
We put class followed by the name of the class.

01:30.700 --> 01:37.990
Then we have some curly braces inside which we will define the class's properties and methods will look

01:37.990 --> 01:42.770
at these shotley to create an object of a class.

01:42.790 --> 01:49.870
We used a new key word followed by the class name and optionally some brackets.

01:50.290 --> 01:54.310
I prefer to always put the brackets even if they're empty.

01:54.310 --> 01:59.500
We'll see what these brackets are used far later on to test this out.

01:59.500 --> 02:04.960
Let's use var dump to print out the contents of the variable.

02:07.770 --> 02:12.960
When we run this code in a browser we get an object of class item.

02:16.070 --> 02:19.470
We can create as many objects of a class as we like.

02:19.490 --> 02:25.450
So let's add another one and print that object out to like that.

02:27.680 --> 02:32.070
And when we run the code there we see the two objects printed out.

02:34.920 --> 02:41.860
Now you can have the class definition and the code that uses it in the same file like this.

02:42.000 --> 02:46.250
But it's better to have each class definition in its own file.

02:46.260 --> 02:49.440
We'll see why this is a good idea later on.

02:49.980 --> 02:55.980
So let's create a new file and call it item up HP.

02:58.160 --> 03:00.470
Will cut the class definition out of here

03:04.880 --> 03:10.880
then paste it in here and then back in the first file.

03:11.180 --> 03:16.340
Will require this new file like that.

03:16.340 --> 03:24.860
Note how as we saw earlier if a file contains just p HP code the p p closing tag isn't needed and it's

03:24.890 --> 03:29.820
actually recommended not to put it.

03:29.820 --> 03:34.550
And in the browser it works as before.

03:34.550 --> 03:42.380
When I created this class file I named it with the same name as the class including starting it with

03:42.380 --> 03:44.290
a capital letter.

03:44.300 --> 03:50.600
It's important to do this so that we can automatically load this file which will then how to do later

03:50.600 --> 03:52.870
on.

03:53.390 --> 04:00.770
As for naming the class classes can have any name you like but the PSA coding standard says you must

04:00.770 --> 04:04.000
use stoodley Caps like this.

04:04.010 --> 04:09.020
This means that the class name starts with a capital letter and if the class name contains more than

04:09.020 --> 04:15.770
one word that word starts with a capital letter two we'll see several examples of classes throughout

04:15.770 --> 04:17.330
the rest of the course.
