WEBVTT

00:05.550 --> 00:09.120
At the moment to publish an unpublished article.

00:09.120 --> 00:16.720
We need to edit the article at a valid publish date and time and update the article rijkaard.

00:17.010 --> 00:23.460
Now that we know how to make Ajax requests Let's add a published button to make publishing articles

00:23.520 --> 00:25.840
easier and quicker.

00:27.810 --> 00:37.740
In the admen index Let's add a published button next to each unpublished article as there could be multiple

00:37.740 --> 00:38.610
buttons.

00:38.610 --> 00:43.170
We'll give it to class so we can identify it in the script.

00:45.190 --> 00:46.610
In our script file.

00:46.810 --> 00:51.570
Let's add a handler for the Click event of albertson's of this class.

00:52.970 --> 00:58.000
The first thing we need to do in here is identify the article we want to publish.

00:58.100 --> 01:00.990
So we need it's idae.

01:01.010 --> 01:03.290
So we need to pass the article idae.

01:03.440 --> 01:07.050
So the click handler when the button is clicked.

01:10.070 --> 01:18.050
We can do this using data attributes we can add any attribute we like to an HP email element and store

01:18.080 --> 01:20.560
any arbitrary value in it.

01:20.750 --> 01:27.920
If we prefix the name of that attribute with the word data and a hyphen javascript defines a standard

01:27.920 --> 01:30.780
way to access these values.

01:31.010 --> 01:37.060
And as we're using Jake Query we can use the data function to easily retrieve these values.

01:39.320 --> 01:47.070
So let's add a data attribute to the button element that will contain the idea of the article.

01:49.410 --> 01:55.940
Then in the script when the button is clicked we can get the value of this attribute.

01:58.380 --> 02:05.670
This variable represents the button object that's been clicked and we call the data function on that

02:05.970 --> 02:13.400
passing in the name of the data attribute that we want without that data prefix to check this is working.

02:13.560 --> 02:16.220
Let's show this idea in a message box.

02:21.220 --> 02:25.980
When I click the button the idea of the article is shown.

02:31.680 --> 02:34.110
Now we have the idea of the article.

02:34.110 --> 02:36.800
We need to publish it first.

02:36.930 --> 02:41.150
Let's add a method to the article class to publish an article.

02:43.550 --> 02:50.160
In here we need Eskew L to update the article record with place holders father.

02:50.180 --> 02:56.150
Published at field we're going to update the field in the workforce.

02:56.420 --> 03:06.350
Then as always we'll prepare it and bind the deep place holder to the I.D. of the current rijkaard to

03:06.350 --> 03:06.950
set the.

03:06.980 --> 03:08.480
Published at field.

03:08.510 --> 03:15.340
First let's assign the current date and time in the format expected by the database to a variable.

03:15.740 --> 03:19.040
Then we can bind that value to the place holder.

03:20.760 --> 03:26.500
If the update is successful we'll return this value.

03:27.270 --> 03:34.470
Then we need a p h prescript that's going to call this method which is what will call in the Ajax request.

03:34.650 --> 03:41.000
So let's add a new script in the admin folder called publish article.

03:41.080 --> 03:41.950
P.

03:53.980 --> 04:02.800
In here as with all our HP code will require the initialization file require log in as this is a script

04:02.800 --> 04:08.110
for administrators only get the database connection.

04:08.470 --> 04:16.930
Then the article getting the idea from the post array as we were making a change on the server updating

04:16.930 --> 04:18.550
a value in the database.

04:18.550 --> 04:20.650
We should use the post method.

04:21.660 --> 04:29.190
Then we'll call the new published method on the article object and get its return value into a variable.

04:33.970 --> 04:37.070
Let's send back the same code that's displayed.

04:37.090 --> 04:42.360
If the article is published a time element containing the date and time.

04:46.410 --> 04:48.960
So we'll end the HP.

04:50.050 --> 04:56.430
And output a time element containing the return value from the published method.

04:58.030 --> 05:01.920
Now there are several places in here where we could get an error.

05:02.290 --> 05:09.280
If the post method isn't used if the article isn't found if the update doesn't work but will handle

05:09.280 --> 05:13.720
those later on for now we'll assume that it's going to work.

05:15.260 --> 05:23.840
Then in the button click handling script we can send the Ajax request passing in an array of options

05:23.840 --> 05:25.050
father request.

05:26.840 --> 05:27.670
The U R L.

05:27.680 --> 05:29.640
We want to send the request to.

05:29.640 --> 05:30.380
Is the script.

05:30.380 --> 05:31.860
We just added.

05:32.390 --> 05:39.520
We want to use the post method and we need to send the article idae to the page.

05:40.040 --> 05:44.300
We do this in the data element like this.

05:44.300 --> 05:51.570
You can add as many items in here as you like as this is the equivalent to inputs on a farm for example.

05:53.140 --> 06:00.770
When the Ajax request is done the page returns a time element containing the new published date.

06:04.190 --> 06:09.350
We want to replace the contents of this t d element with this data.

06:11.030 --> 06:16.100
The button element is contained inside this t d element.

06:16.580 --> 06:20.710
So the tedi element is the parent element of the button.

06:24.890 --> 06:30.620
So first let's get the object that represents the button into a variable.

06:32.470 --> 06:41.500
Then inside the done method we can call the parents method on the button object which returns an object

06:41.590 --> 06:43.850
that represents the tedi elements.

06:43.990 --> 06:49.950
Then we can call the h t a mail method passing in the data returned from the request.

06:50.940 --> 06:56.670
This will replace the contents of the tedi element with the time element that comes back from the Ajax

06:56.670 --> 06:57.460
request.

07:01.140 --> 07:02.700
Let's give that a try.

07:02.940 --> 07:07.120
If I click publish on one of the unpublished articles.

07:08.320 --> 07:16.150
The button is changed to the published date and time and if we view that article we can see that it

07:16.150 --> 07:18.790
has indeed been published.

07:22.640 --> 07:28.550
Let's see exactly what's happening with the Ajax request with the network monitor feature of the Web

07:28.550 --> 07:30.640
developer tools in this browser.

07:31.040 --> 07:36.300
If I click the publish button we can see the request here.

07:37.100 --> 07:44.420
We can see the parameters which is the article idae and the response that comes back.
