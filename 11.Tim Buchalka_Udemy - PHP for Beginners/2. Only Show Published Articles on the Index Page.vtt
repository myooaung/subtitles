WEBVTT

00:05.470 --> 00:12.410
If an article isn't published we're not displaying it showing it as not found.

00:12.430 --> 00:17.620
We also need to only show published articles here on the index page.

00:20.270 --> 00:26.490
In the index page we're using the get page method of the article class to get the data.

00:27.170 --> 00:33.200
Let's do the same thing we just did to the get with categories method and add a WHERE clause to restrict

00:33.230 --> 00:37.170
the article records to those that have been published only.

00:41.100 --> 00:47.110
First let's add an argument to the method with a default are false.

00:48.910 --> 00:55.900
In this query we have a sub query that selecting the data from the article table which were then joining

00:55.900 --> 01:00.230
to the category table via the article category join table.

01:01.350 --> 01:07.080
If we put the we're class at the end of this statement then we'll break the pagination as the limit

01:07.140 --> 01:10.940
and offset clauses we're using are on the sub query.

01:11.400 --> 01:18.750
So we need to put the where condition in here in the sub query so be for the esky Well let's create

01:18.750 --> 01:22.020
a variable containing the weather class.

01:24.110 --> 01:33.430
We can then insert this condition directly into the esky well by inserting the variable like that.

01:33.620 --> 01:37.740
We only want this condition though if the argument is true.

01:38.060 --> 01:40.610
So we'll use the ternary operator.

01:41.770 --> 01:43.450
To return the condition string.

01:43.450 --> 01:46.590
If the argument is true and an empty string.

01:46.600 --> 01:47.480
Otherwise.

01:49.220 --> 01:55.600
Then in the method call in the index page we passed true as the third argument.

02:00.660 --> 02:08.790
Now in the index page only those articles that are published are displayed in the Adam index however

02:09.120 --> 02:11.470
which uses the same get page method.

02:11.610 --> 02:14.330
All the articles are shown as before.

02:17.390 --> 02:25.430
The pagination still works showing 4 articles per page but there is a problem now that the next link

02:25.430 --> 02:29.170
is still shown on the last page.

02:32.480 --> 02:38.420
This is because the paginate is calculating the number of pages based on the total number returned by

02:38.420 --> 02:42.200
the get total method.

02:42.200 --> 02:49.280
However this method returns the total number of records regardless of whether they're published or not.

02:49.280 --> 02:56.930
So we need to do the same to this method as we did with the Get page method first add an optional argument

02:56.990 --> 02:59.620
to restrict to published articles only.

03:01.880 --> 03:11.240
Then we'll add the same condition string variable and insert this into the ASCII well making sure we

03:11.240 --> 03:17.140
change the single quotes to double quotes so that the variable interpolation works.

03:20.530 --> 03:26.680
Then when we call the get total method we passing true as the second argument.

03:30.920 --> 03:37.640
Now when we go to the last page the next link is disabled as it was originally.
