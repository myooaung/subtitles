WEBVTT

00:05.170 --> 00:11.800
One of the original reasons we had for using an array was that we might have an unknown number of something

00:12.040 --> 00:14.260
for example a list of articles

00:16.830 --> 00:21.570
an array can hold as few are as many elements as we want.

00:21.970 --> 00:29.680
However we solved all that we can't use airco to print out the contents of an array like this as it

00:29.680 --> 00:31.900
gives us an error.

00:33.310 --> 00:37.720
And if we use vare dump like this.

00:40.310 --> 00:43.580
It does print out the entire contents of the array.

00:43.850 --> 00:49.260
But this far out isn't suitable for displaying an array of data nicely.

00:51.770 --> 00:58.840
We could print out individual elements like this as we saw previously but we're back to the same problem.

00:58.910 --> 01:05.330
We want to be able to print out all the elements of the array without knowing in advance how many elements

01:05.330 --> 01:06.770
it's got.

01:09.000 --> 01:17.100
The solution is to use a loop a loop allows us to run some code on each element of the array regardless

01:17.100 --> 01:19.280
of how many elements it has.

01:21.720 --> 01:26.070
There are different types of loops in P HP which will learn about next.

01:26.070 --> 01:31.260
But for arrays the simplest one is a far each loop.

01:32.460 --> 01:38.750
Let's add a for each loop to our code to process this array.

01:38.790 --> 01:48.000
First we pass in the array and then the name of a variable that each element will be assigned to every

01:48.000 --> 01:51.580
time we go around the loop.

01:51.600 --> 02:00.600
Then inside the curly brackets we can add some code that will run on every loop iteration and we'll

02:00.600 --> 02:07.320
just echo out the value of this variable followed by a comma and a space.

02:07.350 --> 02:14.030
It's good practice to indent code inside a code block like this to make it more readable.

02:18.100 --> 02:24.110
The code between these curly braces here is called a cold block.

02:24.310 --> 02:30.670
I've only put one line of code here but you can have several lines of code in a code book if you like.

02:30.670 --> 02:35.850
Note how we dont need a semicolon at the end of a code block.

02:36.250 --> 02:42.090
Lets have a look in a browser and you can see it's printed out.

02:42.100 --> 02:48.070
Each element of the array in turn separated by a comma and a space.

02:51.150 --> 02:58.590
So what happened here we have the article's variable that contains an array and thus far each loop

03:01.290 --> 03:10.270
as the loop executes each element of the array in turn is assigned to this invariable article.

03:10.950 --> 03:16.630
Then in the far each code book you can access the value of that variable.

03:16.650 --> 03:18.610
This way we can run code.

03:18.660 --> 03:22.910
Each value of an array regardless of the array size.
