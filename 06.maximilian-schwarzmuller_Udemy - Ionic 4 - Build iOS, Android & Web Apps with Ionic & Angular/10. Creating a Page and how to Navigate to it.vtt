WEBVTT

00:01.980 --> 00:06.370
To see this navigation concept in action we need to create more pages.

00:06.380 --> 00:08.180
We only get the home page right now.

00:08.180 --> 00:10.340
Well that's not enough to navigate around.

00:10.340 --> 00:12.440
So let's create additional pages.

00:12.470 --> 00:14.970
We have two ways of creating additional pages.

00:14.990 --> 00:23.000
The first one is probably quicker one the automatic way we can use Geonic steel and run ionic generate

00:23.210 --> 00:27.590
page and then we can enter the name of the page.

00:27.650 --> 00:31.980
For example let's add a user's page here.

00:32.330 --> 00:39.380
Now by hitting enter this will create this page in the pages folder in a new subfolder named users and

00:39.380 --> 00:41.700
it automatically gives us those free files.

00:41.750 --> 00:46.530
By the way if you're wondering what the SCA is as far as doing I'll come back to this soon.

00:47.090 --> 00:49.570
So this is a normal component here.

00:49.700 --> 00:56.120
And the downside of using the ionic command is that it gives us a lot of boilerplate like for example

00:56.120 --> 01:01.160
this comment like this import we don't need because we don't need to inject those things like will come

01:01.160 --> 01:02.360
back to them later.

01:02.480 --> 01:05.780
And we also don't need this strange method to which all will come back.

01:06.080 --> 01:12.750
So now that we clean this up you'll see it's a normal angler to component just a typescript KLOS with

01:12.800 --> 01:18.500
the at component decorator and decorator is imported from Angle core not from Ionic.

01:18.500 --> 01:24.920
So again a normal component and I'm stressing this because it's important to understand.

01:25.100 --> 01:30.770
Now of course our component also has a template extra little one here though you could also use the

01:30.770 --> 01:32.220
inline template.

01:32.420 --> 01:38.630
Now in this template we all got this boilerplate this unnecessary comment and then you see we have a

01:38.630 --> 01:42.980
header and a content section marked by those Ironhead.

01:43.090 --> 01:50.110
And I in content components components I on two ships with a typical page always has a header and a

01:50.120 --> 01:51.040
content.

01:51.200 --> 01:58.370
You can also add a folder with either footer though so this now marks the footer place and these are

01:58.370 --> 02:02.530
the three things you have in a typical page in the header.

02:02.540 --> 02:09.080
We have a number of built in component the IMF bar which basically sets up this tool bar at the top.

02:09.380 --> 02:12.430
And then there we have another component in title.

02:12.650 --> 02:18.050
And these are all components shipping with ionic too which provide nice styling placed those things

02:18.050 --> 02:21.440
correctly make them look nice on mobile devices.

02:21.440 --> 02:26.080
Here I I'm renaming the title to their users and then the content.

02:26.090 --> 02:31.100
I don't want to display buttons for different users you could say.

02:31.490 --> 02:39.760
So here I want to add a button and to make it look nicer ironic to ships with a certain directive.

02:40.070 --> 02:41.700
I unbuttoned directive.

02:41.870 --> 02:50.320
I will come back to this directive and to the ionic components shortly here you can click on user Max

02:50.320 --> 02:52.890
let's say does the caption off the button.

02:53.110 --> 02:55.970
And then I'll add a horizontal line and add another button.

02:55.990 --> 03:01.900
All the wifi and Button directive where I say user Anna of course choose any text you like.

03:01.900 --> 03:04.420
Now we have two buttons in the footer.

03:04.420 --> 03:11.640
I'm going to place the footer and I'm adding a number directive which you also see on iron content padding.

03:11.790 --> 03:17.140
Does the Navarrete built in help or direct the on a two ships with which simply add some padding to

03:17.140 --> 03:22.030
make it look nice to have the content not sit directly on the edges.

03:23.200 --> 03:26.280
Know the buttons alone of course don't do much.

03:26.290 --> 03:31.590
We want to hooked them up to navigate us somewhere and we will do this in a second.

03:31.600 --> 03:35.750
But right now we don't even have a way to get to this user's page here.

03:35.830 --> 03:38.890
Remember the default page is the home page.

03:38.970 --> 03:42.640
So what be nice if you could go to the user's page from the home page.

03:42.820 --> 03:49.570
So let's switch to the home template and there in the content I'm going to delete all this year and

03:49.570 --> 03:53.760
maybe all change is too ironic to basics whatever you like.

03:54.160 --> 03:57.530
And here are all add another button I-and button.

03:58.710 --> 04:05.550
And simply say users now want to be taken to the user's page when I click this button and we can do

04:05.550 --> 04:09.310
this by adding a click listener and then executing some effort.

04:09.330 --> 04:14.620
For example on Go-To users and now of course we need to implement this method.

04:14.640 --> 04:24.410
This is normal English to code we can implement it here in the home the tears file and now we already

04:24.500 --> 04:28.690
have the constructor injecting the NAF control.

04:28.880 --> 04:31.190
We will need this to navigate around.

04:31.490 --> 04:36.980
Now D-Nev. control or basically is a tool a class provided by ironic.

04:37.040 --> 04:43.550
You can see we're importing it from ionic angler which allows us to manage this stack of pages.

04:43.550 --> 04:49.730
Remember this was the important concept I wanted to was using when we talk about navigating around so

04:49.850 --> 04:52.770
the nav controller is responsible for managing this.

04:52.820 --> 04:59.870
Therefore if you want to switch the page we should use the nav controller to push a new page on that

04:59.870 --> 05:03.370
stack because again this is how navigation works.

05:03.470 --> 05:08.800
We simply push and pop items and we always view the top most one.

05:09.140 --> 05:17.510
So here I want to push my users page and I do this by pushing users page simply to type here and also

05:17.510 --> 05:22.190
make sure to import this type from users users.

05:22.190 --> 05:29.500
So from this file now if this push to make it work I also be registered users page in the app module.

05:29.510 --> 05:31.260
Let's do this in declarations.

05:31.310 --> 05:37.060
Users page make sure to also add the import and also add it to the entry components.

05:37.130 --> 05:43.820
Because again angle or two is not aware that this page here is due to be loaded that this component

05:43.820 --> 05:48.920
is due to be loaded because we're not using it with a selector and we're not using the English to router

05:49.610 --> 05:53.560
with those changes in place and I on externe serves still running.

05:53.720 --> 05:55.620
It will automatically recompile this.

05:55.640 --> 06:02.180
Once you save it and you can then wisit your app in the browser and you see the users button and if

06:02.180 --> 06:03.700
you click on this button.

06:03.920 --> 06:04.530
Wow.

06:04.610 --> 06:10.970
You see you're taken to your newly created page the users page and you automatically get this back button

06:10.980 --> 06:11.860
added here.

06:12.080 --> 06:17.900
This is what I want to use doing for you doing this animation and giving you the back button when you

06:17.900 --> 06:20.840
use it's navigation concept.

06:20.840 --> 06:27.620
This stack of pages and does is super super important to understand this is the core of our next to

06:27.910 --> 06:33.000
this idea of navigating around this stack of pages which you manage.

06:33.020 --> 06:36.750
Now we will learn much more about the stack throughout the course.

06:36.920 --> 06:41.660
But this was very important to get out of the way right at the beginning.

06:41.660 --> 06:49.910
And with that I'd say let's dive deeper into some of the ionic to basics and what it offers us
