WEBVTT

00:02.220 --> 00:07.480
So on offer bookings, we need to extract that ID of the place we loaded

00:07.530 --> 00:13.620
and for that, I'll actually store the whole place here in a property of the offer bookings page class,

00:13.920 --> 00:20.340
for that you need to import that place model and to get access to the dynamic parts in our URL, we

00:20.340 --> 00:22.640
can use the activated route and

00:22.680 --> 00:24.800
I'll just name it route here, that property

00:24.810 --> 00:31.500
but the type is activated route which you need to import from @angular/router.

00:31.500 --> 00:37.740
This then allows us to subscribe to changes to our route params in the URL which is where we do store

00:37.860 --> 00:39.640
that dynamic segment.

00:39.660 --> 00:48.150
So here we can set up this root param map subscribe, by the way with all the information about caching

00:48.150 --> 00:55.470
pages and so on, the subscription here will live on even if the page is invisible and therefore you don't

00:55.470 --> 00:58.850
need to do this in ionViewWillEnter or anything like this,

00:58.890 --> 01:04.830
it's OK if you do it in ngOnInit, this will be set up one time but it will then automatically update

01:04.860 --> 01:10.950
even if you are coming back from another page that did change that selected place ID because that subscription

01:11.010 --> 01:16.650
that listens to changes in the URLs will always be live, no matter if the page is currently visible

01:16.650 --> 01:17.790
or not visible

01:17.790 --> 01:25.620
and no matter if ngOnInit executed once or five times. It's managed for you by Angular, this subscription

01:25.860 --> 01:32.520
and therefore you can rely on getting the latest place ID or any dynamic segment you might have all

01:32.520 --> 01:33.210
the time.

01:33.980 --> 01:42.190
So in here, you get that param map object and now we first of all can check if we don't have our place

01:42.190 --> 01:48.520
ID for some reason, if that would be the case, then I want to navigate away and then we can actually

01:48.760 --> 01:57.400
use the nav controller now by injecting nav controller here, from @ionic/angular is where you have

01:57.400 --> 01:58.600
to import it

01:58.990 --> 02:05.940
and now if we don't have a place ID for whatever reason, then I want to navigate back here to places

02:05.940 --> 02:13.000
tabs offers. I'll also return here so that other code doesn't get executed in here.

02:13.940 --> 02:19.430
If we do have a place ID, well then we simply want to store or we want to load the place with that

02:19.430 --> 02:24.560
ID and for this, we'll needs to place service because that is where we have the places.

02:24.560 --> 02:33.130
So our places service is what we need to inject as well and for that of course, you also need to add

02:33.130 --> 02:41.890
the import to places service and then down there, we can set this place equal to this places service

02:42.010 --> 02:49.030
places which is a list of all the places and there we could now find our fitting place by executing

02:49.030 --> 02:55.750
a function on it where we get the place as an input because this function executes on every element

02:55.750 --> 03:00.940
in the places array and then we need to return true if that is the place we want and then the execution

03:00.940 --> 03:07.020
will stop and it will return that place here and store it in this place and true should be returned

03:07.030 --> 03:14.160
when the ID of the place we're looking at here is equal to param map get place ID.

03:14.760 --> 03:19.770
Alternatively, you could outsource this logic into a function in the service and that is what I will do.

03:19.980 --> 03:27.180
So in the places service, I will add a get place method where I pass in the ID of the place and then

03:27.180 --> 03:37.800
in here, I return this underscore places, accessing my private places array, find comparing the ID here, not

03:37.800 --> 03:42.810
to param map get place ID, I don't have access to that here but simply to the ID we're getting

03:42.810 --> 03:51.160
as an argument and I return that and I will clone that entire object like this using the spread operator

03:51.160 --> 03:57.280
here and then I pull out all the properties of the place object we retrieved here and add them into a

03:57.280 --> 04:03.010
new object so that if we now were to add it, this object, we wouldn't edit the original object which is

04:03.010 --> 04:06.370
a good pattern and a good habit to get into.

04:06.370 --> 04:08.370
So we have the get place method,

04:08.530 --> 04:16.110
therefore here on places service, I now call get place and I now pass param map get place ID

04:16.360 --> 04:21.640
to this get place method. This now gives us access to the place and we have access to this place in our

04:21.640 --> 04:23.930
entire component here now.

04:23.950 --> 04:31.300
Therefore for one, I can adjust the title and can adjust this to place title and for constructing this

04:31.300 --> 04:33.550
link here, now we can do that,

04:33.580 --> 04:43.260
now we can go to /places tabs offers and then our place ID,

04:43.270 --> 04:47.260
so that dynamic segment here. Let's give that a try,

04:47.290 --> 04:54.300
if I now click edit here, we are editing the Manhattan mansion by the looks of it and nothing happens

04:54.310 --> 04:57.010
because I of course have the wrong link.

04:57.040 --> 05:02.340
This is the link of the page we already are on, of the offer bookings page.

05:02.470 --> 05:05.880
If we have a quick look at the places-routing module again,

05:06.040 --> 05:10.010
I of course want to go to edit/ and then that place ID,

05:10.030 --> 05:13.690
so the correct path here would be another segment, 

05:13.720 --> 05:17.440
the edit segment after offers and then the place ID.

05:17.470 --> 05:23.480
So now let's wait for this to reload and this takes us to the edit offer page. So we can reach that

05:23.480 --> 05:24.490
page too,

05:24.500 --> 05:27.440
let's now just adjust the title a little bit,

05:29.950 --> 05:32.140
add an offer and we're good.
