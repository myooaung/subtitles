WEBVTT

00:02.150 --> 00:04.100
So we enabled Google Maps API.

00:04.160 --> 00:07.610
Let's now add maps to our project.

00:07.640 --> 00:13.910
Now we could grab that import for the Javascript SDK and in our project we could add that to the index

00:13.920 --> 00:14.660
HDD himself.

00:14.720 --> 00:20.760
But that would always load the entire Google Maps Javascript SDK even if we're not using it yet.

00:20.880 --> 00:23.740
And the effort is actually not the approach I will use.

00:23.810 --> 00:27.490
Instead we'll dynamically import this when we need it.

00:27.500 --> 00:35.300
So for that let's go back to our code and there let's plan which kind of components we now need or what

00:35.300 --> 00:36.590
we want to add.

00:36.590 --> 00:39.260
Now my goal is that when we create a new offer.

00:39.290 --> 00:45.780
So on this new offer page in the existing form which we already have below our date inputs.

00:45.950 --> 00:53.180
I actually want to add a new input that custom input which allows the user to click on a button let's

00:53.180 --> 00:53.830
say.

00:53.990 --> 00:56.680
And later on the preview of the location.

00:56.900 --> 01:02.960
And that should open up a modal which presents a map where we can pick a location and later in the next

01:02.960 --> 01:08.780
section where we tap into a native device features we will actually also add an option to all to locate

01:08.810 --> 01:09.710
the user.

01:09.830 --> 01:17.120
So I want to be able to pick a location on a map and therefore we'll have to add our own form control

01:17.120 --> 01:21.770
so to say our own components dad allows us to do just that.

01:22.130 --> 01:23.760
And hence I will add this.

01:23.780 --> 01:31.580
So here in my ionic project I'll use ionic generate component and generate a new component which we

01:31.580 --> 01:38.840
can use as that form control that allows us to pick a map and I want to store that in let's say the

01:38.840 --> 01:43.340
shared folder and they are under pickers and of course the path is totally up to you.

01:43.550 --> 01:46.080
And I'll named as location dash picker.

01:46.280 --> 01:50.930
And again you can named as whoever you want and stored is wherever you want but in the end that kind

01:50.930 --> 01:56.000
of describes what it is in a store in a shared folder because we could use that application wide in

01:56.000 --> 01:59.270
any form where we need a picture for a map.

01:59.270 --> 02:05.630
Now that location picker is in the end the component that should present a button and a preview of the

02:05.630 --> 02:10.990
map snippet we picked later that allows the user to tap and then open up a modal.

02:11.000 --> 02:17.050
Now for the modal that should open up all generate another component and let's say we do that just under

02:17.050 --> 02:23.240
shared here the map that modal component that will be the component that holds the actual map and that

02:23.240 --> 02:29.900
opens in a modal and that will be the place where we then also import Google Maps API or that Google

02:29.900 --> 02:32.490
Maps Javascript SDK later.

02:32.510 --> 02:39.470
So with these two components added here in the shared folder let's say continue and let's actually start

02:39.470 --> 02:45.110
by ensuring that we open that model as fast as possible before we then focus on adding logic for the

02:45.110 --> 02:48.020
user to click there and select the location.

02:48.020 --> 02:56.980
So on the location picker here I'll start really simple by adding a death that should wrap basically

02:57.010 --> 03:06.640
my entire picker logic and in the div here I want to have a I am button where I say select location

03:08.490 --> 03:18.480
and that button will receive a color of primary let's say and yeah that doesn't sound too bad.

03:18.640 --> 03:28.300
Now when this button gets clicked I'll fire or else trigger the on pick location method here and inside

03:28.300 --> 03:33.770
of the button I actually also want to show I can let's say is the let's all Z I and I can here with

03:33.770 --> 03:42.670
the name of map and the slot should be start so that this is nicely positioned in the button and let's

03:43.330 --> 03:48.430
wrap the text in eye and label.

03:48.430 --> 03:54.520
Not necessarily required but let's still do that to make sure that all the styling works out correctly.

03:55.390 --> 03:59.210
So now we added this button with the icon and the label in there.

03:59.290 --> 04:07.190
Now with that added We can add the on pick location method here to the location picker a component and

04:07.210 --> 04:12.760
they add should be the method that actually opens up that modal that's displace the map thereafter.

04:12.760 --> 04:18.820
Now if you want to load a modal or display a modal you know what that means we have to inject the modal

04:18.820 --> 04:23.370
controller modal controller which we import from ionic angular.

04:23.440 --> 04:26.400
That is what we did before in this application as well.

04:26.590 --> 04:32.710
And now here I will use the modal controller and call create to create a new modal.

04:32.710 --> 04:39.100
Here we now need to specified a component that should be loaded and that should be my map modal component

04:39.100 --> 04:40.350
so let's add it here.

04:40.390 --> 04:45.010
Now before we continue of course you need to make sure that you add at the airport but besides that

04:45.040 --> 04:51.040
we need to make sure that the map modal component is added as an entry component to a module.

04:51.040 --> 04:57.610
And speaking of modules DL I automatically added the map modal component and the location picture component

04:58.030 --> 05:00.310
to the declarations of the app module.

05:00.310 --> 05:05.500
Now that is actually not the place where I want this because I not be using the location picker in my

05:05.830 --> 05:10.540
app component which is the only other component declared here and therefore which is the only component

05:10.540 --> 05:17.890
where I could use that instead I'll remove these declarations from the app module and I'll add a new

05:18.100 --> 05:22.450
shared module here in my shared folder.

05:22.450 --> 05:28.780
Now the idea behind the shared modules simply is that I can thereafter import that share module into

05:28.870 --> 05:35.140
any component or any other module that wants to use the location paper or the map model and that gives

05:35.140 --> 05:36.960
us more flexibility.

05:37.000 --> 05:46.420
So here I'll export a class shared module and we should add at N.G. module here and in there we can

05:46.420 --> 05:54.820
all add declarations and I want to add my location picker component and the modal the map modal component

05:54.820 --> 05:55.530
here.

05:55.810 --> 05:58.780
And of course add to imports as well.

05:58.780 --> 06:02.540
And now I also want to export that.

06:02.560 --> 06:08.920
So the location picker component and the map modal component so that we can use them in any component

06:08.920 --> 06:14.860
or in any modules components that imports that shared module.

06:14.860 --> 06:21.360
I also will add entry components here and add the map modal component there and we'll also add a imports

06:21.360 --> 06:26.860
array because I want to be able to use things like energy if in these components and therefore we need

06:26.860 --> 06:35.410
to import the common module here from at angular common so with all that added We got the shared modules

06:35.410 --> 06:40.840
set up and we can now import the shared module in all the other modules where we plan on using the location

06:40.840 --> 06:46.050
picker or the map modal with that back to the location picture component.

06:46.150 --> 06:49.000
Let's continue working on showing that map modal.
