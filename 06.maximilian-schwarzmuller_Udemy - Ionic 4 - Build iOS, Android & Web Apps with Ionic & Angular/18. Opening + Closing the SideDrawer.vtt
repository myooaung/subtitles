WEBVTT

00:02.200 --> 00:07.200
How can we now open this menu? Ionic makes this really simple

00:07.220 --> 00:11.800
thankfully. You just go to the page or to the component where you want to open it,

00:11.810 --> 00:18.620
so where you want to add that hamburger icon in the toolbar and there are other ways of opening it too

00:18.650 --> 00:23.900
in case you don't want to open it through that hamburger but I'll show you the hamburger first and let's

00:23.900 --> 00:27.330
say that would be the offers page here. There

00:27.500 --> 00:31.020
I want to render this icon on the left, so I'll add my ion buttons

00:31.040 --> 00:36.660
slot start wrapper here and in there, you can add an ion menu button.

00:36.740 --> 00:40.560
This is a component Ionic ships with which you can drop in like this

00:40.700 --> 00:45.660
and it will automatically take your default menu you have and open that.

00:45.680 --> 00:51.240
Now in case you have multiple menus, one from the left and one from the right let's say, you can give

00:51.240 --> 00:59.490
your menus here a menu ID and that could be any string you want, like m1 or anything you want and

00:59.490 --> 01:03.610
then you can also connect this opening button to that ID.

01:03.630 --> 01:11.680
So here on ion menu button, you can add a menu key and use that same ID to basically inform Ionic

01:11.730 --> 01:14.450
which menu it should open with that button.

01:14.490 --> 01:19.850
So here, let's now save that and wait for this app to reload and

01:19.890 --> 01:25.500
let's go to offers and there, we now see that hamburger icon and if you tab it, that menu slides open

01:25.740 --> 01:31.110
and it gets removed by sliding or by simply pressing the backdrop, you can also slide it open by the

01:31.110 --> 01:33.140
way here from the left.

01:33.150 --> 01:34.310
So that is all supported,

01:34.320 --> 01:38.760
that is a nice native-like behavior as we would expect it

01:38.880 --> 01:42.390
and you see, these are all the items we added, no lines in between them,

01:42.390 --> 01:44.310
these are the icons I chose

01:44.460 --> 01:50.820
and you can use that menu ID to select it or as I mentioned, if you only have one menu, then this will

01:50.820 --> 01:52.140
be picked automatically

01:52.140 --> 01:54.660
so you don't have to assign a menu ID then.

01:54.660 --> 02:02.860
So if I remove the menu ID and I remove the menu attribute from the ion menu button, then it still works.

02:02.940 --> 02:05.320
Now this is one way of opening the menu,

02:05.460 --> 02:11.760
what would be another way? Another way would be to do it programmatically and I don't really need this

02:11.760 --> 02:13.740
in this application but I want to show it to you.

02:14.310 --> 02:22.540
So let's say on the discover page here, obviously I want to add that ion buttons thing here with slot

02:22.540 --> 02:28.750
start and we could add the ion menu button and in reality, you would do that because why wouldn't you?

02:28.800 --> 02:37.900
Now let's say we have an ion button here which says open and we want to add our own click listener

02:37.900 --> 02:42.730
to do that programmatically and more realistic scenarios of course would be that you have some other

02:42.730 --> 02:48.580
button somewhere on your page that when the user presses, it should simply open a side menu because maybe

02:49.210 --> 02:54.940
you're showing some special settings for this page in your app menu, in your side menu which you want

02:54.940 --> 02:58.480
to show when the user clicked config somewhere in your page.

02:58.480 --> 03:05.320
But here the idea is the same, I'll add onOpenMenu, you can name this method whatever you want and you

03:05.320 --> 03:10.930
just have to add it to your Typescript file then. In onOpenMenu, how can we now get access to our

03:10.930 --> 03:18.970
menu? Well there is a special controller you can inject, the menu controller, it's of type menu controller

03:19.330 --> 03:27.440
and you do import it from @ionic/angular. With the menu controller injected, this gives you access

03:27.440 --> 03:33.980
to your menus, so you can now use the menu controller and there you can get for example an array

03:33.980 --> 03:38.270
of all the menus it finds. You can close the current menu,

03:38.300 --> 03:44.150
alternatively here you can also pass a menu ID if you have multiple menus, like m1 or if you call

03:44.150 --> 03:50.990
it like this, it basically closes the menu it finds as your main menu and so on. You also have an open

03:50.990 --> 03:56.330
method of course and an isOpen method to check whether it is open and you have the toggle method which

03:56.330 --> 04:02.030
actually will open it if it's closed or close it if it's open. And you could have used open or toggle

04:02.030 --> 04:08.010
here, it doesn't really matter, if I use toggle here, you see that on discover, here is the open button

04:08.030 --> 04:14.940
I added and that indeed opens the menu through that menu controller and therefore programmatically.

04:15.050 --> 04:17.320
Now it's not the solution I will use here,

04:17.360 --> 04:23.900
so I'll comment this out so that you can still see this code here but it's not the solution I want to

04:24.110 --> 04:29.420
use here, it doesn't make a lot of sense here but it's important to know how you could open that menu

04:29.540 --> 04:31.020
from code if you needed that,

04:31.190 --> 04:35.630
I will bring that menu button back though because I want to have that hamburger icon

04:35.630 --> 04:39.880
and why would I write my own code if it works like this out of the box.

04:39.950 --> 04:44.180
So let's make sure we can now also add links here and then switch pages.
