WEBVTT

00:01.960 --> 00:06.080
We're almost done with our application here we implemented the side menu.

00:06.220 --> 00:12.020
Now it's time to implement the settings page so that we're actually able to change something there and

00:12.020 --> 00:19.630
to switch to an alternative background in order to do this all go to the settings page and I'll start

00:19.630 --> 00:20.810
on a template.

00:20.830 --> 00:27.570
First of all all changed is to settings for capital S and then here in the content I'll use the I didn't

00:27.600 --> 00:28.250
read.

00:28.270 --> 00:35.470
Now even with the grid component wrapper because now I want that extra margin it introduces all place

00:35.470 --> 00:39.750
a row inside of it as you already saw it and a column.

00:39.760 --> 00:49.480
Now the goal is to first of all have a label and then some input element which allows us to toggle the

00:49.480 --> 00:55.610
option the option of one to have is if we want to have the alternative background switched on or not.

00:55.690 --> 01:01.390
Now we can of course simply add some text to your but when we're working with form elements and I will

01:01.390 --> 01:03.000
create a full form here.

01:03.010 --> 01:08.800
We will see this later in the course though we can also use either label does a special version of the

01:08.800 --> 01:16.390
normal HVM label style nicely and having some extra features really look nice on mobile devices.

01:16.570 --> 01:23.560
And here I would say alternative background because this describes the option and in a separate column

01:23.800 --> 01:29.410
which I want to have sit next to it which is why I don't set up any whiffs with that it will automatically

01:29.890 --> 01:32.760
distribute itself across this row.

01:33.250 --> 01:41.290
So here I want to add another built in component ion toggle which you guessed it is a toggle element

01:41.320 --> 01:46.490
and again consult the official documentation to dive super deep into it though.

01:46.540 --> 01:51.400
One important thing we're going to learn much more about foreigns and different form elements later

01:51.400 --> 01:53.290
in the chords in Obert apps.

01:54.000 --> 02:00.900
So here what I want to do is I want to be able to switch between yes or no if I want to have alternative

02:00.950 --> 02:06.990
background I can already see those if we say this and we go to the settings page.

02:07.200 --> 02:09.120
This is to toggle.

02:09.120 --> 02:14.830
So this looks nice but it doesn't do anything as of now right.

02:14.850 --> 02:21.960
So in order to make it do anything I want to listen to a band does the event I want it to give us on

02:21.960 --> 02:29.830
this custom Capulet it gives us its called ion change it's fired whenever we change to toggle.

02:29.880 --> 02:31.920
How do I know that to see when it exists.

02:31.920 --> 02:36.900
Well you could find formation like this in the API documentation if you need some kind of special component

02:37.770 --> 02:43.290
in here or want to execute on Talk of a method which I have to implement and that will pass the event

02:43.320 --> 02:50.810
object I and change will embed in my settings component your app will get rid of all the boilerplate.

02:50.850 --> 02:55.290
I don't need right now and I will simply implement on toggle here.

02:55.290 --> 03:04.200
For now I know that I get the event and I know that this event actually is of type toggle toggle is

03:05.070 --> 03:07.090
Event type of class I own it.

03:07.100 --> 03:16.530
Q gives me we have to import toggle from webs from ionic angular

03:19.010 --> 03:27.710
import like this now toggle simply has some information about this toggle event about the state of this

03:27.710 --> 03:28.580
input.

03:29.010 --> 03:37.370
So we can log to the console learn more about this type like this but save this and now let's watch

03:37.370 --> 03:40.790
the console when we switch just toggle here.

03:41.650 --> 03:47.110
For guild there and a switch that you see does a city event emitted or the information we get by avionic

03:47.140 --> 03:48.610
to about the toggle state.

03:48.610 --> 03:50.260
Quite a lot of information.

03:50.290 --> 03:52.500
The most important information is down here.

03:52.630 --> 03:59.320
It's checked and we could also see that it's not disabled and we can also listen to an event dimeter

03:59.320 --> 04:01.510
on this target object itself.

04:01.630 --> 04:04.100
So these are things we can do with that.

04:04.330 --> 04:07.610
Of course the information that it's checked is pretty important.

04:07.690 --> 04:12.730
If I click on it again you'll see that checked is of course false because now I disabled it and this

04:12.730 --> 04:14.880
is exactly the information we need.

04:15.370 --> 04:22.810
So now we somehow need to store that information in a central place so that we can also access it in

04:22.870 --> 04:27.770
our favorites page where we actually want to display an alternative background.

04:28.180 --> 04:33.820
Well if we're thinking about central places to store information what does this sound like.

04:34.460 --> 04:36.610
Of course we need a service.

04:36.830 --> 04:42.230
Now it is kind of an advanced challenge for you but it might be interesting to try to implement such

04:42.230 --> 04:43.690
a service on your own.

04:44.000 --> 04:53.030
You somehow need to store the current state of data so you don't need to simply store if it's true or

04:53.030 --> 04:56.410
false if it's switched on or not in that service.

04:56.570 --> 05:01.940
So that would be that were later able to inject a service in the favorite's page and simply check which

05:01.940 --> 05:06.090
state currently is triggered or which state we have.

05:06.350 --> 05:10.430
This is your task in a next lecture I will create a service together with you.
