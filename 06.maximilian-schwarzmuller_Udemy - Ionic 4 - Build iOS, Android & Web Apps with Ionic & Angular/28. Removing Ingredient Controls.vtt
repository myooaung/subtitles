WEBVTT

00:02.040 --> 00:09.150
So out and we added a way to add new controls add new ingredients you're Let's now work on the removal

00:09.150 --> 00:10.470
of those ingredients.

00:10.590 --> 00:12.510
That's something we're not able to do right now.

00:12.510 --> 00:13.080
Right.

00:13.320 --> 00:18.730
So back in the code back to this action sheet right now we're only presenting this dialogue if we click

00:18.730 --> 00:24.750
the button but now when I go to this remove all ingredients hÃ¤ndler here and also do something in this

00:24.750 --> 00:29.200
callback and this handler function which is executed if you click this button here.

00:29.230 --> 00:35.820
The goal is to somehow remove all items in our array of ingredients right.

00:35.820 --> 00:39.050
So how can we actually do this.

00:39.090 --> 00:45.780
Now it turns out that as of now resetting such a former array is not a super trivial but it's not that

00:45.780 --> 00:53.870
hard to first of all I will retrieve is former array and I will store it in a new property and a new

00:53.900 --> 00:55.750
consonant should say excuse me.

00:55.800 --> 01:03.100
So does Formery are stored in the array constant here is.

01:03.110 --> 01:06.000
Of course of type for array like this.

01:06.150 --> 01:13.860
And I will simply exit my recipe form and get my ingredients property like this which will be a form

01:13.890 --> 01:14.470
array.

01:14.670 --> 01:22.080
Now of course typescript does know that this will actually be a form array so will explicitly costis

01:22.710 --> 01:27.130
and now it knows this gives me access to my Formery next.

01:27.240 --> 01:31.300
I want to loop through all the controls in this array.

01:31.380 --> 01:35.910
However I will then also remove the controls step by step.

01:36.000 --> 01:40.400
So I will shrink this array while looping frood to do this.

01:40.390 --> 01:45.440
I'll create a new helper constant Where is stored the length of this array of form array and then length

01:45.450 --> 01:51.150
which gives me the number of items in theory and then I'll check if length is greater than zero.

01:51.150 --> 01:57.180
So if I actually do have items in the array if this is the case I will trigger a for loop where I loop

01:57.180 --> 02:04.220
through my length minus 1 as a starting point due to the difference between index and length.

02:04.530 --> 02:11.310
Then I will loop as long as I have greater than zero and I will decrement either one on each iteration.

02:11.460 --> 02:19.890
So this will do loop from the end of the array to the beginning and then I can simply use my X my array

02:19.890 --> 02:24.560
here and call remove at and pass I.

02:24.840 --> 02:31.230
So if that i'm Step-By-Step removing the ingredients in there the nice thing about this method is if

02:31.230 --> 02:36.750
you were to change your app that you are also able to kind of remove the last five elements or something

02:36.750 --> 02:43.920
like this you can easily use this approach to only loop until you're at the fifth last element and something

02:43.920 --> 02:47.280
like that instead of emptying the array completely.

02:47.280 --> 02:53.220
So with this I'm now removing all elements and that should already be all we need.

02:53.220 --> 03:00.090
So if I now let this recompile and then have a look at the running application let's reloaders and go

03:00.090 --> 03:01.100
to our page.

03:01.110 --> 03:08.170
Let's add two new ingredients like milk and then also bread again.

03:08.880 --> 03:12.420
And let's now call remove all ingredients and they're gone.

03:12.420 --> 03:15.170
So this works as intended which is great.

03:15.180 --> 03:19.080
The next step of course is to now also show some helpful messages.

03:19.080 --> 03:24.810
For example if we try to add an ingredient like this it just fails because we're not allowed to add

03:24.810 --> 03:31.260
an empty ingredient but it would be nice to see some message and for Dad we'd get toasts little helper

03:31.280 --> 03:34.220
messages would disappear after a couple of seconds.

03:34.380 --> 03:36.870
Let's have a closer look at them and the next lecture.
