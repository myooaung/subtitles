WEBVTT

00:00.140 --> 00:06.810
In the last lecture I explain how you get started with a new angle to project using the Seelye and how

00:06.810 --> 00:08.640
the angle to application starts.

00:08.640 --> 00:17.340
In general you learn or I hope you already knew that but you might remember that the app component is

00:17.400 --> 00:23.820
the root component of our application but at an angle or two application of course may have multiple

00:23.820 --> 00:25.050
components.

00:25.050 --> 00:30.260
So let's create a new one and we could do that through the seal or manually.

00:30.390 --> 00:35.850
So I will create a new component and I will create a new subfolder for this in the app folder named

00:36.030 --> 00:39.570
users and I'll name the component users component to you.

00:39.630 --> 00:46.050
And here the angler to naming convention is to have the name of your whatever you are building a component

00:46.050 --> 00:46.710
in this case.

00:46.710 --> 00:51.240
Ask the first part of your file name then the description of what you're both building.

00:51.240 --> 00:52.810
So a component in this case.

00:52.860 --> 00:55.230
And then of course the file extension.

00:55.230 --> 01:03.060
Now in this user component dot file I'll export a class which constitutes my component in the end and

01:03.060 --> 01:04.550
I'll name a user's component.

01:04.550 --> 01:09.340
This again is the naming convention to be explicit about what you're building here.

01:09.600 --> 01:17.160
Now with the users component set up here I don't have anything besides a type clause.

01:17.190 --> 01:25.570
So to really make this more than just the class I need to add a decorator the x component decorator.

01:25.590 --> 01:34.020
Now this is imported from angular coord and this component decorator turnstyles normal typescript class

01:34.080 --> 01:41.460
which of course is also compiled to Chavismo and into more than just the boring types to class.

01:41.460 --> 01:46.780
It instead turns it into something engorge you will recognize as a component.

01:46.830 --> 01:52.700
So this component decorator gets javascript object as an argument.

01:52.980 --> 01:57.240
And here we need to set up at least one thing that template.

01:57.450 --> 02:01.400
You can also give it a selector and you will need to do that.

02:01.410 --> 02:07.620
If you load this component by placing it in some other template but you can leave out the selector if

02:07.620 --> 02:14.400
you're loading it from routing for example a template is always needed though and you can even define

02:14.400 --> 02:23.910
it like this in line or with the template you are all property pointing to an external template.

02:23.910 --> 02:32.520
Now you are to use the inline approach and I use that takes year to have the ability to write over multiple

02:32.520 --> 02:34.990
lines.

02:35.040 --> 02:39.810
Now with that I can output anything which should go into my users component.

02:39.810 --> 02:48.360
For example a paragraph where I say I'm in the users cupola to indicate where I am now to be able to

02:48.360 --> 02:50.540
use this component since I don't want to use routing.

02:50.570 --> 02:53.700
I'll give it a selector and forward a selector.

02:53.820 --> 03:00.240
You should make sure that it's a unique one not overriding any default HDMI elements and not interfering

03:00.240 --> 03:01.770
with any third party packages.

03:01.770 --> 03:02.520
You might have.

03:02.670 --> 03:11.330
So I'm going to name this app users and this app refix should make sure that I'm using a unique selector.

03:11.430 --> 03:18.290
Now with that set up I can go into my app component aged hemol file and add the selector here.

03:18.450 --> 03:22.060
So I'll add a horizontal line and then app users.

03:22.080 --> 03:24.710
No this alone wouldn't do anything.

03:24.780 --> 03:31.770
Angle or two won't scan your whole application for all components we have and therefore recognize the

03:31.770 --> 03:32.560
selector.

03:32.760 --> 03:39.210
Instead you have to tell you which components your app really uses and has and you could even create

03:39.210 --> 03:46.140
multiple modules and not only have the app Marchal and registers some components on module one and the

03:46.140 --> 03:48.230
other components on module 2.

03:48.270 --> 03:52.950
So you really have to be explicit about which components a module uses.

03:52.950 --> 03:59.490
Now here we only have one module and I want to use my users component in this module in my app component.

03:59.730 --> 04:05.370
So I need to go to my app Marchal and register a complaint there and we do this in the declarations

04:05.390 --> 04:06.740
array here.

04:06.780 --> 04:13.420
Ultimately add user s component and you also need to add this import pointing to your users component

04:13.440 --> 04:16.170
dot TS poverty file.

04:16.260 --> 04:22.320
But without the dot TS and the import here now with this England who knows about the component it will

04:22.320 --> 04:28.710
therefore have a look at it recognize or see the selector and then recognize the selector in our app

04:28.710 --> 04:29.530
component.

04:29.760 --> 04:35.160
So after saving the should automatically rebuild our project if you still have any reserve running.

04:35.460 --> 04:38.880
And then if we have a look at it you'll see I'm on the users component here.

04:38.940 --> 04:44.880
This is our newly created component and this is how you work with multiple components and templates.
