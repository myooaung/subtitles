WEBVTT

00:02.010 --> 00:06.180
In the last lecture we had a look at how we can publish our app and the Android Play Store.

00:06.360 --> 00:09.110
Let's now published the app in the Apple App Store.

00:09.270 --> 00:12.560
For this you will need a paid Apple developer account.

00:12.660 --> 00:18.540
And here in the ionic framework documentation under Publishing your app you can find all that information

00:18.540 --> 00:24.180
where you need to click to enroll into this account and be aware that it costs money $99 per year and

00:24.180 --> 00:28.090
then how to at that account to X killed we all saw this before.

00:28.170 --> 00:35.520
And with a paid account you will be able to click this create button next to Iowa as distribution to

00:35.520 --> 00:41.640
create a signing identity so that now your app is signed not just for development to run on your own

00:41.640 --> 00:46.960
device but also for publishing it so that you can then upload it to the App Store.

00:47.100 --> 00:50.120
Now let's walk through those steps step by step.

00:50.310 --> 00:52.290
So I locked into my developer account.

00:52.320 --> 00:58.320
But before we do anything here let's go back up and build it for iOS.

00:58.320 --> 01:01.280
So make sure you added iOS as a platform.

01:01.290 --> 01:09.780
If you didn't do this run ionic platform add and then iOS and thereafter also run on big resources to

01:09.780 --> 01:13.750
treat all those icons and splash screens for this newly edit platform.

01:13.920 --> 01:21.540
I already did all those steps so I will now run ionic build release and now iOS to built this app for

01:21.540 --> 01:29.340
release on iOS and once this will finish I will open it in X code so I'll open my project here in X

01:29.350 --> 01:36.540
code does X code project file which was created in the folder in the platform's folder or simply open

01:36.540 --> 01:44.030
it here and now if we click on this project we need to make sure that our team is assigned here.

01:44.170 --> 01:50.140
And now if I go to preferences you might recall this step from the Abaroa section where you first Chipp

01:50.140 --> 01:50.800
the two already why.

01:50.800 --> 01:56.980
If I click on View details you're now going to recognize that since I have a paid developer account

01:57.010 --> 02:04.570
I can now click on Create your for iOS iOS distribution and after doing this I now get this added to

02:04.570 --> 02:05.330
my account.

02:05.340 --> 02:08.100
So now I can sign my apps for distribution too.

02:08.380 --> 02:10.400
So let's sit down and leave this.

02:10.450 --> 02:12.710
Make sure again that this is assigned here.

02:12.820 --> 02:19.350
The next step leads us back to a developer to develop Precentor here so make sure to go into your account.

02:20.410 --> 02:27.690
Now here click on certificates identifiers and profiles and you will then see D2 with certificates we

02:27.690 --> 02:28.040
have.

02:28.050 --> 02:33.090
We created them through X code by clicking on those create buttons and under identifier as you should

02:33.150 --> 02:35.160
already see your app.

02:35.220 --> 02:37.700
This was created fruity Seelye.

02:37.860 --> 02:44.520
This was created automatically when you ran the deployment Truex killed the first time with your development

02:45.430 --> 02:46.180
setup.

02:46.310 --> 02:49.050
You can go and added this to your needs.

02:49.050 --> 02:54.890
For example enter a nicer name and adjustors to check any features you might use here.

02:54.900 --> 02:57.070
We aren't using any of them so that's OK.

02:57.210 --> 03:02.610
And then simply save your changes so you can update the identifier which was created through X code

03:02.610 --> 03:03.500
automatically.

03:03.600 --> 03:09.410
Or if you don't have it at all you can create a new one with your bundle ID and this of course is the

03:09.570 --> 03:11.860
U.S. here in the conflict SML file.

03:11.880 --> 03:15.070
So make sure that you have this identifier in the end.

03:15.150 --> 03:17.820
The next step then leads to iTunes Connect.

03:17.820 --> 03:20.580
This is where you managed the actual application.

03:20.580 --> 03:25.260
So here in the developer account you only manage your certificates and identifies the need for signing

03:25.260 --> 03:25.820
the app.

03:25.950 --> 03:29.040
Here you manage the apps you deployed the App Store.

03:29.310 --> 03:36.640
So log in with your app like here too and then you can click on my apps and create a new app app by

03:36.640 --> 03:39.160
clicking on plus your new app.

03:39.160 --> 03:45.640
Now you should check Aiwass then enter your name as it will be displayed in the App Store so here you

03:45.640 --> 03:51.010
can see this is what we label actually seen the App Store choose your primary language.

03:51.020 --> 03:54.140
She was the bun lady here I only got one to choose from.

03:54.160 --> 03:59.980
Awesome places and a unique identifier which will show up on your payment statements like let's say

03:59.980 --> 04:01.600
awesome license.

04:01.870 --> 04:07.820
Let's head to create here and looks like this name is already taken by someone else.

04:07.930 --> 04:09.430
So let's maybe name it.

04:09.430 --> 04:10.870
Super ironic.

04:11.110 --> 04:11.920
Awesome places.

04:11.920 --> 04:16.920
Of course you should check that name is available before using it so this seems to work now and then

04:17.000 --> 04:22.090
here you can set it up just like in the Google Developer console you can see some things which will

04:22.090 --> 04:23.420
show up and yeps store.

04:23.440 --> 04:25.770
I'm not going to walk free this year.

04:25.780 --> 04:30.700
You can also change the pricing and so on from here on you should really consult the official Apple

04:30.700 --> 04:33.870
developer documentation on how to publish replication.

04:34.090 --> 04:40.090
What do we need to do is we need to go back to X code and there we should create an archive which holds

04:40.120 --> 04:41.270
our application.

04:41.590 --> 04:50.890
For this we will go to product and then scheme and then added scheme choose archive your for it release

04:51.490 --> 04:57.770
both configuration release archive name that is ok and configured directly want to check this.

04:57.880 --> 05:02.980
You should go here where we currently select that the iPhone and now we want to build for a generic

05:02.980 --> 05:05.140
iOS device.

05:05.290 --> 05:12.020
And now with product archive you're going to create such archives so now it is bundling your app up

05:12.320 --> 05:14.790
to be deployed to the App Store.

05:15.020 --> 05:21.050
Now this is an annoying little error and it's a little bit tricky to fix but we can do it.

05:21.050 --> 05:26.360
There is a nice description on stack overflow and how to fix it and I will link this in the article

05:26.360 --> 05:28.910
at the end of his lecture too so let's go forward together.

05:29.060 --> 05:32.570
And of course you can simply skip ahead if you don't have to say error.

05:32.750 --> 05:38.390
So the first thing you'll do is we will go to our app and click on the General tab and then uncheck

05:38.450 --> 05:40.540
automatically managed signing.

05:40.580 --> 05:45.000
So we do this year automatically manage signing removed this year.

05:45.020 --> 05:49.370
Now this needs to be done for all targets you see here.

05:49.730 --> 05:55.310
Next we're going to be built setting still have to select that next to built settings here and under

05:55.430 --> 06:01.100
signing here we're going to choose our development team.

06:01.130 --> 06:09.870
Now we can go to product clean to clean our project and we go back to General tap and hit automatically

06:09.870 --> 06:11.330
managed signing again.

06:11.620 --> 06:15.350
So make this make sure you do this and choose your team here.

06:15.690 --> 06:19.880
And with this let's try again by running product archive.

06:20.310 --> 06:26.700
Now this looks much better and it should now create a package of our application the build succeeded

06:26.730 --> 06:27.510
indeed.

06:27.900 --> 06:32.900
And now it should open up a window where you can already hit upload to AppStore.

06:32.940 --> 06:41.100
So let's do this let's use your account here and then simply hit upload and now it will push it to the

06:41.100 --> 06:41.780
App Store.

06:41.790 --> 06:48.030
You may need to allow access to your store a couple of times because it will now all will sign it and

06:48.030 --> 06:51.100
prepare everything so that you can ship it.

06:51.100 --> 06:57.960
Now as a side note if you are stuck at this step here you should go back to X code and check under open

06:57.960 --> 07:00.860
developer tool application loader.

07:00.990 --> 07:04.470
If you're prompted to accept some terms in addition here.

07:04.470 --> 07:10.370
Now here your normal Apple I.D. password won't work instead you should go to apples to apples.

07:10.390 --> 07:13.380
Com log in there and once you are locked in.

07:13.380 --> 07:16.770
Click on aspecific password generate password.

07:17.040 --> 07:19.200
So here you can generate a label.

07:19.210 --> 07:23.210
First let's name it X code click Create.

07:24.340 --> 07:27.310
And then you get your specific password.

07:27.310 --> 07:33.290
Now copy this and thereafter back on his ex-coach screen you simply enter his password here.

07:33.310 --> 07:35.200
Now you should be able to connect.

07:35.710 --> 07:43.980
And now when you did this you can basically ignore it as we know your go back to X code and do your

07:44.040 --> 07:51.180
upload proses click upload again let it fetched it again click OK and simply go through the steps from

07:51.180 --> 07:52.340
before again.

07:52.860 --> 07:59.100
And now it should not get stuck again but instead should be successfully logging into iTunes Connect

07:59.520 --> 08:01.560
and then upload your application.

08:01.560 --> 08:05.230
So with that just a little arrow which might occur doesn't have to.

08:05.310 --> 08:07.860
But if it does occur does this how you can fix it.

08:08.070 --> 08:10.710
And I'll be back once this was successfully uploaded.

08:11.810 --> 08:17.870
So this now uploaded it successfully you can now close to the interface and back on iTunes Connect You

08:17.870 --> 08:24.690
can now continue work on your application you're filling out all information before you then finally

08:24.770 --> 08:26.420
submit the application.

08:27.530 --> 08:31.220
By hitting submit for revenue here under iOS app.

08:31.220 --> 08:32.870
Prepare for resubmission.

08:32.960 --> 08:37.550
This is how you may now proceed to publish your app as you saw there are some things to watch out for.

08:37.550 --> 08:43.250
Unfortunately the iOS publishing process is a bit tricky but with that video and potential errors which

08:43.250 --> 08:49.010
might occur which you saw in the video you should be able to get through it all and publish your application

08:49.010 --> 08:50.730
for iOS as well.
