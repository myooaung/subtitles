WEBVTT

00:02.230 --> 00:08.020
So let's move back to the location picker where we now get these coordinates having recorded answers

00:08.020 --> 00:14.380
of course nice but we want to use them to get a real address to display and that snapshot that review

00:14.650 --> 00:21.580
I was talking about and we can get both from a separate Google API is not fruit at Javascript SDK but

00:21.580 --> 00:24.640
through Abra API we can directly call.

00:24.700 --> 00:25.480
So let's do that.

00:25.480 --> 00:30.420
Let's first of all let's say gets the address for this.

00:30.470 --> 00:38.690
I'll add a new private method here in the location picker now get address where I expect to get a latitude

00:38.690 --> 00:44.000
which will be a number and a long etude which will be a number because we get an address for this coordinate

00:44.000 --> 00:51.700
pair and now in here I want to use the angular age to the client so let's inject it into the location

00:51.700 --> 01:01.280
picker age to be of type h to be client which should be imported from at angular common H2 DP because

01:01.280 --> 01:05.300
now we can send a regular HBP request to an API endpoint.

01:05.600 --> 01:13.600
This API endpoint is reached with a get request let's call get and now the exact address is something

01:13.600 --> 01:16.390
we of course can get from the Google documentation.

01:16.390 --> 01:26.020
So here in our Google Cloud Platform overview asked us loads you have a rough overview over how many

01:26.020 --> 01:31.180
requests you send in your billing and that is a good way of keeping track of course.

01:31.390 --> 01:40.160
Now under API eyes here you see the API that were unlocked and there will now need the geo coding API.

01:40.460 --> 01:50.370
Now to learn more about that that simply search for Google geo coding API to find the documentation

01:50.370 --> 01:57.260
for that API and of course as always this is a great place to learn more about that.

01:57.380 --> 02:03.110
Now what we want to do here is we want to do an address look up where we pass latitude and longitude

02:03.110 --> 02:03.870
pair.

02:03.950 --> 02:11.420
So in the end you can just copy that API path here which is de you are ELT which we need to send the

02:11.420 --> 02:12.080
request.

02:12.080 --> 02:16.140
Let's add it here and of course we now need our API key again.

02:16.160 --> 02:22.160
Now we have that API key in the map modal component already and we can definitely copy and paste it

02:22.160 --> 02:22.710
around.

02:22.820 --> 02:28.880
But this is a bit cumbersome so bad better way of managing is to cut it from there and actually go to

02:28.880 --> 02:32.770
dead environments folder in the project and they are under environment.

02:32.960 --> 02:39.590
You can add your own global variables that you can use in your angular project like the Google Maps

02:39.710 --> 02:46.190
API key or whatever you want to named US and here you then store that key and now you can import this

02:46.190 --> 02:51.560
into any of your files and you could even switch to values for production so that in production mode

02:51.800 --> 02:54.850
you use different keys hero ever.

02:54.860 --> 03:00.260
I will use the same but you could have a different key one that is locked down quite a bit for development

03:00.500 --> 03:06.230
and one that has more permissions which you can all set up in the Google platforms console by the way

03:06.800 --> 03:08.090
for production.

03:08.090 --> 03:14.060
Here again I will use the same key but now we can go back to the map modal component and simply add

03:14.090 --> 03:15.010
that key here.

03:15.080 --> 03:17.000
For Dad we just need to import it.

03:17.150 --> 03:26.500
Let's add a fourth here from the environments folder and there the environment file and then the thing

03:26.500 --> 03:31.350
I want to import here is environment and this environment object.

03:31.450 --> 03:38.950
Now we'll have our Google Maps API key and now we can do the same here in the location picker here where

03:38.950 --> 03:48.740
I need my api key I instead simply add environment which should be imported from the environment folder

03:48.740 --> 03:56.530
and there the environment file and you should use a relative import path here and then we don't import

03:56.530 --> 04:00.560
the full or we don't use the follow up object but we used to Google Maps API key.

04:01.090 --> 04:09.400
So now we can send a request there and of course that request as I mentioned actually holds the latitude

04:09.400 --> 04:10.900
and longitude pair.

04:11.110 --> 04:15.790
So let's use back takes here so that we can inject value is easier.

04:15.960 --> 04:18.790
And that of course means we can also change the way we add our key.

04:18.790 --> 04:25.510
We can simply add days dollar sign curly brace thing here and then not concatenate our key as we did

04:25.510 --> 04:31.810
before with the plus but instead simply injected like this and now we want to do the same for the latitude

04:31.810 --> 04:32.670
in the long etude.

04:33.040 --> 04:38.800
So for the latitude here we pass lat which is our first argument we're getting and for a long etude

04:39.640 --> 04:41.430
and don't delete that comma.

04:41.440 --> 04:42.720
That does matter.

04:42.970 --> 04:51.010
We add LNG for a long etude so now we send a request to a U R L that should actually give us the address

04:51.250 --> 04:59.070
for this coordinate pair as always this gives us a and observable here and it is observable will actually

05:00.030 --> 05:03.760
give us a response that will not have the form and we need it in.

05:03.780 --> 05:12.210
So let's pipe that map operator here which of course is imported from our exchange as operators there

05:12.210 --> 05:16.680
will get some geo data which we now have to transform it for that.

05:16.680 --> 05:19.530
First of all let us console locked you data shall we.

05:19.530 --> 05:21.770
That sounds like a good starting place.

05:21.780 --> 05:24.150
Now we can call get an address here.

05:24.150 --> 05:25.980
Once we got our coordinates.

05:25.980 --> 05:32.200
So here we can call get an address and forward and forward modal data dots data.

05:32.220 --> 05:40.240
And now this should be of course our coordinate pair but only if we selected a place on the map.

05:40.260 --> 05:41.880
Not if we canceled it.

05:41.880 --> 05:45.270
So first of all check if modal data thought data is set.

05:45.270 --> 05:52.470
If it is not undefined or in other words if it is on the find I will simply return here in this function

05:52.470 --> 05:58.260
because then it don't want to continue if it is defined however then it will hold de coordinates and

05:58.260 --> 06:01.320
therefore then data is of course in the format.

06:01.320 --> 06:10.740
We return it here upon a click so it will be an object with a lad and a long field so here we can therefore

06:10.740 --> 06:17.290
access lat and modal data data LNG.

06:17.330 --> 06:19.660
Now this should return an observable here actually.

06:19.710 --> 06:27.060
Let's return this year and get address so that up there in on pick location where I call get at risk

06:27.200 --> 06:28.290
I can subscribe.

06:28.430 --> 06:36.290
So that this request actually gets sent let's save this now and let's see what this gives us.

06:36.290 --> 06:45.830
So once this restarts let's pick a location and it gives us back a result that looks like dead an object

06:45.830 --> 06:48.590
with a couple of fields results.

06:48.590 --> 06:52.980
Sounds promising and that actually holds an array and array of addresses.

06:53.000 --> 06:56.750
It basically identified and that is what we'll have to do in the map method.

06:56.750 --> 07:00.050
Now we'll have to return only a single address.

07:00.050 --> 07:08.060
I'm not interested in all these addresses here so in the map operator down there we can now check first

07:08.060 --> 07:17.480
of all if we didn't get geo data or if we have dual data but there somehow is no results key or if we

07:17.570 --> 07:20.000
have two data and we have a results key.

07:20.180 --> 07:25.460
But the length is equal to zero in all these cases there is no address to retrieve and therefore I will

07:25.460 --> 07:35.320
return null here otherwise I will return geo data results and then access the first element in that

07:35.320 --> 07:43.390
results array and there we have a formatted underscore address field that is what you can see in our

07:43.390 --> 07:47.400
example output here this field here is what I retrieve

07:50.390 --> 07:57.460
now do not get any errors here I will actually wrap this and tell typescript that this will highlight

07:57.500 --> 07:59.150
that this will be of type any.

07:59.150 --> 08:05.250
Alternatively which just add angled brackets after get and set this to any here.

08:05.660 --> 08:11.600
So now we should retrieve that address as a string which is in the end what I want and they are for

08:11.600 --> 08:13.820
in the location Pinker we now

08:17.360 --> 08:23.420
get our address here and we can console locked us for a start.

08:23.430 --> 08:27.720
Let's do that let's console lock the address which we hopefully picked and let's wait for this to reload.

08:30.210 --> 08:32.160
Pick the address and here it is.

08:32.580 --> 08:34.180
So this sounds quite good.

08:34.240 --> 08:42.630
Let's as a next step also make sure that we generate as snapshot a screenshot of that map area where

08:42.630 --> 08:45.300
we have our pick place.
