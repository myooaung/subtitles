
00:02.200 --> 00:09.430
For iOS apps which you of course can only build on a MacOS system, you can run ionic capacitor run

00:09.600 --> 00:15.500
ios -l to bring up that live reload server and again this will spin up that server, build

00:15.520 --> 00:22.240
the app, set up everything so that the live server and the app are connected and then open Xcode for

00:22.240 --> 00:22.530
you

00:22.530 --> 00:26.890
so that you can now start the app on the emulator of your choice.

00:26.890 --> 00:34.120
So here's Xcode loading that app and in there, choose the simulator you want to use

00:34.120 --> 00:38.340
like iPhone XS here maybe and launch it with the app play button here and

00:38.350 --> 00:44.570
this launches this native app Ionic Capacitor gives you with your Ionic app inside of it.

00:48.280 --> 00:52.230
So let's wait for this simulator here to start up

00:52.230 --> 00:58.690
and now for the iOS app, you can't use Chrome dev tools or Chrome inspect as we did for Android but you

00:58.690 --> 01:03.640
can use a feature in the Safari browser which you only have on MacOS systems

01:03.640 --> 01:08.740
but hey you can only build MacOS apps anyway so this is fine. In there,

01:08.770 --> 01:16.290
go to the develop menu, choose that simulator you should find here for your iPhone and then click the

01:16.300 --> 01:18.690
IP you see here.

01:18.840 --> 01:20.580
That should open up the web

01:20.580 --> 01:28.650
inspector Safari offers and that is a tool where you can also see outgoing network requests, the DOM

01:28.680 --> 01:35.400
as it's being rendered, you can inspect all these elements there and in the last lecture of this module

01:35.400 --> 01:38.590
you'll find some detailed information on how the web inspector works,

01:38.700 --> 01:45.710
for example here top right corner, if you click that, you see the styles that are applied to an element and the

01:45.810 --> 01:48.230
computed styles which actually are applied.

01:48.240 --> 01:52.360
So that is also something which looks quite familiar to Chrome,

01:52.410 --> 01:57.220
you also have that debugger and on first look, that's a bit hard to use but what you can do then there

01:57.220 --> 02:00.140
is in the filter field, you can search for a file,

02:00.150 --> 02:07.950
let's say the recipe page or just type recipe as a start and you will actually find your raw Typescript

02:07.950 --> 02:10.050
files here as well.

02:10.110 --> 02:18.190
So if I type recipes page, recipes page like this, I find my recipes.page.ts file and I can set

02:18.190 --> 02:20.620
a breakpoint here as well.

02:20.620 --> 02:27.970
Now to showcase how this works, I'll not set it here actually, I'll go to my details and then go back

02:28.090 --> 02:29.760
so that this is lazy loaded

02:29.950 --> 02:35.890
and now I will look for that recipe detail page, so recipe detail,

02:35.890 --> 02:36.940
here it is

02:36.940 --> 02:39.430
and now I will set a breakpoint here

02:39.430 --> 02:43.560
after I got my recipeId, just what I did before on Android as well.

02:43.650 --> 02:46.120
And with that breakpoint set,

02:46.120 --> 02:52.030
now if I go here, this actually also pauses and I'm here and I can now also inspect what's in my recipeId,

02:52.030 --> 02:57.710
what's in param map, so you can now also walk through the code step-by-step here.

02:57.730 --> 03:03.310
Here are your controls to step to the next part, to step into a function, step out of a function

03:03.340 --> 03:04.070
and so on

03:04.120 --> 03:06.520
and then ultimately continue with the blue button,

03:06.730 --> 03:12.400
again detailed docs on the web inspector can be found in the last lecture. Besides debugger, you also

03:12.400 --> 03:19.170
have timelines here, that allows you to find out how long a network request takes for example. You have

03:19.170 --> 03:25.590
your console here to see all your nice console logs you're getting in your application, down there,

03:25.590 --> 03:27.510
here they are.

03:27.560 --> 03:34.430
You're also able to inspect the storage your application uses, things like local storage and in general,

03:34.550 --> 03:41.360
you can inspect a lot of things about your iOS app or about the Ionic app running in your iOS or on

03:41.360 --> 03:43.350
your iOS device in this native app,

03:43.430 --> 03:46.190
you can get that information here. Again

03:46.280 --> 03:50.600
check out that last lecture for detailed instructions on these Safari web inspector if you want to

03:50.600 --> 03:52.430
learn all about it.

03:52.460 --> 03:55.880
Another important thing to be aware of, in our Android Studio

03:55.880 --> 04:00.120
I showed you the built-in log, you have that here as well, here

04:00.230 --> 04:05.350
this thing is also a console log and indeed a bit more readable than the one in Android Studio.

04:05.360 --> 04:09.440
So besides the web inspector, you can also see log output in here,

04:09.440 --> 04:13.280
this is automatically showing up as soon as you run an app, which I'm currently doing.