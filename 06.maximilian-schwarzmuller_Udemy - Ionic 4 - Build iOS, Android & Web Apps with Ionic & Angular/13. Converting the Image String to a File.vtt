WEBVTT

00:02.290 --> 00:09.220
To amidst his image I of course want to use my image pick custom event and I actually want to allow

00:09.400 --> 00:14.140
to even emit a string here or what you can do by adding one pipe here.

00:14.260 --> 00:17.920
A file file is a default javascript type.

00:17.920 --> 00:25.300
Now of course we do convert our image here to base64 string and so we could image that string here wouldn't

00:25.300 --> 00:26.590
be wrong.

00:26.620 --> 00:34.540
It would work but later we haven't added this yet but later we will actually convert dead base64 string

00:34.660 --> 00:37.390
to a file that we can upload.

00:37.480 --> 00:41.500
We need to do this for the camera where we get such a base64 string.

00:41.500 --> 00:43.490
Here we already get a file.

00:43.570 --> 00:48.370
So converting it to a string and then converting it back sounds a bit redundant.

00:48.430 --> 00:55.160
So they have for a year I want to emit my picked file with the image pig event here just like dead.

00:55.180 --> 00:59.440
So I want a mid picked file here without errors.

00:59.440 --> 01:00.510
And now we're doing that.

01:00.520 --> 01:03.790
Now we're emitting a file picked through your file picker as well.

01:03.790 --> 01:09.850
The next step is now to continue with that in the new offer page and there of course we're receiving

01:09.850 --> 01:12.810
that image data and dad no longer is just a string.

01:12.820 --> 01:15.440
It could also be a file of course.

01:15.520 --> 01:20.530
Therefore here in on image pick and then you offer a component where we get either a string which is

01:20.530 --> 01:29.050
the space 64 you are L or where we get the file first of all have to check the type of image data and

01:29.050 --> 01:35.770
if that is a string I want to do something else I want to do something else because else it's a file

01:36.190 --> 01:42.260
and if it's a file I don't need to convert it if it is a string I need to convert it to a file though.

01:42.370 --> 01:48.250
Now to make that conversion we'll use your utility function which you'll find attached to this video.

01:48.850 --> 01:55.030
You can just paste it here into your component file above the add component decorator below your imports

01:55.440 --> 02:03.040
does a function Dad will basically convert base64 string as we're getting it to a blob which in the

02:03.040 --> 02:05.970
end is a file so you can just copy that in.

02:06.010 --> 02:11.800
Don't need to change anything there and an on image picked here if we have such a base64 string which

02:11.800 --> 02:19.300
we need to convert you can now call base64 to blob and pass your image data in there.

02:19.300 --> 02:22.750
Now important it won't work like that.

02:22.750 --> 02:30.670
Instead you need to call replace on that image data string and replace a string which is data colon

02:30.820 --> 02:39.280
image slash J PAC semicolon base 64 comma with nothing.

02:39.280 --> 02:45.550
Because this basically is a prefix that the image is generated by the camera plug in will have.

02:45.550 --> 02:50.850
And this basically turns it into an invalid base64 string that can be converted by this method.

02:50.860 --> 02:53.160
So we have to remove it which is what we're doing here

02:56.210 --> 02:57.200
D.

02:57.410 --> 03:05.540
Base64 to blob method here also requires a second argument and that is the content type and that will

03:05.630 --> 03:10.520
always be image JPEG because the capacitor camera plugin gives you cheap hack images.

03:11.390 --> 03:16.280
So now does gives us a file but of course we want to store that falls somewhere and I'll store it in

03:16.280 --> 03:26.050
my image file property year and it is a good idea to all to wrap this with a try block so that in case

03:26.050 --> 03:33.370
this conversion fails for whatever reason we can catch the error and then do something with it here.

03:33.370 --> 03:39.280
So for example throw an alert and inform and inform the user that this image can be used and that he

03:39.280 --> 03:43.780
should choose a number one for example but for us this should really work and this app here.

03:43.800 --> 03:48.980
Still good idea to provide a fallback or handle the error somehow.

03:48.990 --> 03:52.200
Now that is the case that we're getting such a base64 string.

03:52.480 --> 04:02.470
If we are getting file so an image file then we don't really need to do anything too fancy with it we

04:02.470 --> 04:08.770
can just use it as it is because that is now the next thing I want to add a new control here on our

04:08.770 --> 04:09.750
form.

04:09.790 --> 04:15.990
We do have that location control which we add it now at a image control here which is a new forum control

04:17.320 --> 04:19.200
and the initial value should be null.

04:19.210 --> 04:24.380
And here I also will not set any validators but it should just be a form control like that.

04:24.550 --> 04:29.750
And now when we picked an image I want to set that image to that image control.

04:29.920 --> 04:37.060
Therefore an on image picked I'll actually not initialize a constant image file here but a variable

04:37.120 --> 04:44.530
left image file and then does even as the result of my conversion here or in daily block image file

04:44.560 --> 04:53.510
is image data because the image data then is a file so that after this if check here we can just call

04:53.510 --> 05:02.150
this form patch value and set that image control we just added to our image file because we can store

05:02.150 --> 05:04.470
that file in our control as well.

05:04.760 --> 05:09.980
And now we have the files stored and we can now work on the form submission and see what we do with

05:09.980 --> 05:10.550
that file.
