WEBVTT

00:02.320 --> 00:07.480
Now of course when there is invalid data entered into our inputs we might want to do more than just

00:07.480 --> 00:09.040
color the border.

00:09.040 --> 00:10.860
The border at the bottom you're red.

00:10.900 --> 00:17.060
Maybe we all have one eye color to label a red and maybe you also want to show a little error message.

00:17.060 --> 00:19.600
And that is absolutely possible and something you can do.

00:20.560 --> 00:23.110
For your own error or styles for the labels.

00:23.110 --> 00:31.150
Just keep in mind that when you do have invalid input here on the eye an item you get the eye an invalid

00:31.220 --> 00:38.910
enzyme on classes so you can use these classes to color the label which is inside of the item appropriately.

00:39.220 --> 00:42.700
So we could set up that styling now and our off page SPSS file.

00:42.790 --> 00:46.110
But maybe we want to have that styling application wide.

00:46.290 --> 00:52.900
Therefore all will go to the global SPSS file and they are all add a new rule that if we have to iron

00:52.960 --> 01:01.750
invalid class and the ion touch class that any I label that is nested inside of a component that has

01:01.750 --> 01:11.050
these two classes on it will receive a color a text color therefore which is using our ion color danger

01:11.490 --> 01:12.100
color.

01:12.130 --> 01:14.070
So it is variable here.

01:14.290 --> 01:21.220
If we have a look at the variables real quick there will see that we have our eye and color danger variable

01:21.220 --> 01:22.810
here which should be red.

01:22.810 --> 01:30.070
So now we assign that variables color to the text color of I label instead of a component that has I

01:30.130 --> 01:32.040
an invalid an eye and touched on it

01:35.700 --> 01:39.420
so that for now if I click in there this label laws becomes red.

01:39.450 --> 01:43.530
As soon as I'm done touching or working with this input.

01:43.800 --> 01:45.240
So this looks now good.

01:45.270 --> 01:51.490
Now also we can show an error message and for this you simply go into your off page again.

01:51.630 --> 01:56.820
And all we now need is we need to find out whether a given input is invalid or not.

01:56.820 --> 02:02.640
And the easiest way of doing that is to assign a local reference to it here for example email control

02:02.880 --> 02:10.440
whatever you want to use and that should also be holding a value here and that value should be energy

02:10.530 --> 02:11.680
model.

02:11.730 --> 02:17.190
So up here we had energy forum to get access to the form angular created for us with energy model assigned

02:17.190 --> 02:17.560
here.

02:17.610 --> 02:21.020
We get access to the form control angular created for us.

02:21.210 --> 02:25.230
And this has certain fields like the current value but also the current validity.

02:25.440 --> 02:33.550
And for that here we could add a paragraph where we say should be a valid email address and that should

02:33.550 --> 02:36.220
only show up if d My address is invalid.

02:36.220 --> 02:44.230
So at N.G. if and check if not email control using that local reference here email control is valid

02:44.710 --> 02:52.200
and email control touched so it should should have been touched the user should have had a chance of

02:52.200 --> 02:53.910
entering something there.

02:53.910 --> 03:01.420
Now when we save that and our application reloads we see nothing year but if I click in there and out

03:01.420 --> 03:01.890
of there.

03:01.930 --> 03:07.510
Now we get that should be a valid e-mail address but of course the positioning is not really that great.

03:07.510 --> 03:14.290
Right it's inside of the input now and that is simply related to the fact how I an item and I label

03:14.290 --> 03:15.870
and I an input work together.

03:16.030 --> 03:25.460
It works better if we simply put that into its own eye an item here and at the end have directive on

03:25.460 --> 03:29.500
the item therefore like this

03:35.160 --> 03:38.940
now if you click in there and out of there we got this little output here.

03:39.000 --> 03:42.520
Now I'm not a fan of getting that line below that though.

03:42.690 --> 03:49.440
So they offer all take advantage of a little attribute I can set on an item I can set lines here to

03:49.440 --> 03:50.370
non soda.

03:50.370 --> 03:57.350
This item will not render any visual line and therefore it will just output that text without any lines.

03:57.660 --> 04:05.850
And this is now a way better style obviously we can now all replace the paragraph here with a label

04:06.060 --> 04:07.110
that is not a mask.

04:07.110 --> 04:12.240
You could have capped the paragraph but I actually don't need the extra margins added by the paragraph.

04:12.270 --> 04:17.500
I think it looks a bit nicer if it's just I and label and we take up less space.

04:17.700 --> 04:24.510
Now let's do the same for the password and of course feel free to do that on your own I will simply

04:24.510 --> 04:26.900
grab my eye an item here.

04:26.940 --> 04:28.350
Copy that.

04:28.380 --> 04:34.160
An added below that item forward a password and then all the password.

04:34.210 --> 04:41.570
Assign a password control local reference which points that energy model to get access to D created

04:41.570 --> 04:42.880
form control.

04:42.950 --> 04:50.390
Then here we can replace email control with password control like that and their one output should at

04:50.390 --> 04:54.920
least be six characters long.

04:54.920 --> 05:03.220
Or whichever message you want to show.

05:03.240 --> 05:06.270
So now we have our validation in place here.

05:06.270 --> 05:12.900
Last but not least let's disable to log in button if we are in an invalid state and therefore on this

05:12.900 --> 05:18.600
button on the log and button we can bind the disabled attribute and we want a disabled is when the form

05:18.600 --> 05:27.930
is invalid so we can use our f local reference which remember refers to the overall form and we use

05:27.930 --> 05:34.970
that local reference to check whether it is valid and if it's not valid then I want a disabled button.

05:35.000 --> 05:40.230
So this is my condition here and it will not watch for the user attaching anything I will just make

05:40.230 --> 05:46.290
sure if it's not valid despite this disabled done and therefore now we start with a disabled button

05:46.290 --> 05:49.770
which has this nice disabled look and can be clicked.

05:50.220 --> 05:51.090
Awesome.

05:51.090 --> 05:52.780
So if that were almost done.

05:52.800 --> 05:56.250
Let's now make sure we correctly extract the data when the form is submitted.

05:56.430 --> 06:00.110
And of course make sure that we actually can toggle between log in and sign up.
