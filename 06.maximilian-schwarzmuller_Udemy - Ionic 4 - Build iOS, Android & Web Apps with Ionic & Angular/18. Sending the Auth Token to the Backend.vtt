WEBVTT

00:02.530 --> 00:09.640
So to check whether everything works we now have to append our token to our different requests.

00:09.760 --> 00:16.350
Now in the off service we have the user as I think had it getter and user I.D. getter.

00:16.360 --> 00:21.610
Now we need a new getter that actually allows us to get access to our token from the different parts

00:21.610 --> 00:23.130
of our application.

00:23.380 --> 00:30.580
Now there I will basically just take the same logic I did here for a user I.D. in my token getter all

00:30.970 --> 00:38.470
get the user and then map it and even we have a user in which case I want to return that token or we

00:38.470 --> 00:41.310
have no user in which case I want a return NULL.

00:41.310 --> 00:45.760
This will by the way all the return null if the token should be invalid for whatever reason.

00:45.760 --> 00:49.360
Normally we should be locked out in that case of course.

00:49.360 --> 00:54.580
Now the places where we send requests are in our place service and in our booking service.

00:54.760 --> 01:01.570
Let's start with a place service every age GDP request your needs to have a token appended to it and

01:01.570 --> 01:07.930
the way you append a token can be learned in the official firebase real time database REST API docs

01:08.560 --> 01:17.140
you can add a query parameter at the end off which simply holds your token as a value for this all changed

01:17.240 --> 01:22.210
quotes here to back ticks so that injecting data into the string is easier.

01:22.210 --> 01:29.230
And now here I want to inject my token of course that means that we need to get that token now.

01:29.230 --> 01:37.060
For that we can reach out to the off service get that token observable and since it is an observable

01:37.420 --> 01:44.470
add pipe here with a switch map you know that from the user I.D. we get our token and in the end we

01:44.470 --> 01:47.560
return our get request in there.

01:47.620 --> 01:55.390
But now here we have access to the token and we can add this here and now we simply call or add all

01:55.390 --> 01:59.580
the obvious steps we had in the pipe method before to this pipe method.

01:59.740 --> 02:03.130
And of course we should return this H to the request.

02:03.130 --> 02:11.170
Now this should allow us to fetch places with a token Let's reload this app and see if we get our places

02:11.170 --> 02:12.760
here and this looks good.

02:12.760 --> 02:14.950
I can see my place is here.

02:15.280 --> 02:20.860
Now we can also see the images because the link we have for displaying the images does not require any

02:20.860 --> 02:22.550
authentication.

02:22.630 --> 02:29.200
Let's work on getting a single place now because at the moment if I was at a single place I can't load

02:29.230 --> 02:30.290
that.

02:30.430 --> 02:40.690
So here in get place let's all the ad off service token and at the pipe method to add a switch map.

02:40.690 --> 02:48.490
Operator here where we get dead token justice before and now I will return my website my get request

02:48.580 --> 02:57.430
in there return the entire observable chain here and append to token at the end by adding off and then

02:57.430 --> 03:07.200
we can inject our token here and now as before we just add the obvious steps in that observable chain

03:07.200 --> 03:09.610
to this.

03:09.640 --> 03:12.150
Now let's move on to upload image data.

03:12.190 --> 03:20.450
We all need to token and there we add it in a header actually and not with this query parameter still.

03:20.500 --> 03:27.490
First of all I will return this off service token because we'll need it and then I pipe a switch map

03:27.490 --> 03:34.990
here to get that token and return a new observable Where did new observable of course is my well old

03:34.990 --> 03:36.950
request I made here.

03:36.990 --> 03:42.210
Now here I don't need to use back ticks instead of quotes because I will add to token in the header

03:42.300 --> 03:49.230
and hence I pass a third argument to that post method that is a object that allows us to configure the

03:49.230 --> 03:58.860
request and we can set the headers there and I want to set the authorization header to bearer whitespace

03:59.070 --> 04:04.380
and then the token that is what we're looking for in the cloud function and what allows us to retrieve

04:04.410 --> 04:12.360
that token So this hopefully will extend now at place all the needs to be changed there.

04:12.410 --> 04:19.100
I'm already getting the user I.D. and I take one that is an important note by the way all the places

04:19.100 --> 04:26.630
where I'm getting the token I should also only take one to not set up a recurring ongoing subscription.

04:26.630 --> 04:35.830
Instead take one all the time but now going down to ad place I'm getting the user I.D. which is nice

04:36.220 --> 04:37.160
then I'll add.

04:37.270 --> 04:43.560
So which map here to also get my token.

04:43.560 --> 04:52.740
So here I get that user idea fetched for Dad let me store it here in a fetched user I.D. field for example

04:52.800 --> 04:55.620
so that I can access it everywhere.

04:55.620 --> 05:02.190
That's my user I.D. I'm getting here and then here I will return and never call to the off service where

05:02.190 --> 05:11.380
I get the token this time and therefore this switch map I actually get the token by the way add take

05:11.380 --> 05:16.540
one here as well to only take one token and not set up a ongoing subscription.

05:16.660 --> 05:24.190
Then here I get that token user I.D. here that is my fetched user I.D. which I find up there and which

05:24.190 --> 05:32.200
I then set here when I have the I.D. let's use that also here and now for the HDP request I need to

05:32.200 --> 05:34.120
append that token.

05:34.120 --> 05:43.000
So at the end here I again add off and set as equal to my injected or to my fetched token here injected

05:43.000 --> 05:47.090
into this string with this string literal syntax.

05:47.110 --> 05:50.550
So now we have the token here as well an update place.

05:50.560 --> 06:02.990
I of course also want to get that so in there I'll return this off serve as token pipe methods on that.

06:04.060 --> 06:12.730
And first of all start with take one then add switch map here where I get that token and index which

06:12.730 --> 06:20.260
map I will return my actual next step here where I get my places.

06:20.410 --> 06:29.870
So return this places which already is an observable at the other operators to this same chain since

06:29.870 --> 06:37.490
I get the token here however and I don't need it in this step all store it in a fetched token variable

06:37.670 --> 06:39.360
which I initialize here then.

06:39.500 --> 06:47.960
So fetch token is equal to the token I get from my first or from this subscription where I only take

06:47.960 --> 06:56.090
one value though then I continue to do places and then when I need the token here at the bottom then

06:56.090 --> 07:02.900
I just add Western mask off and set as equal to my fetched token.

07:02.900 --> 07:06.390
So now all the places functions should be up to date.

07:06.410 --> 07:08.270
Let's test them.

07:08.270 --> 07:15.070
This compiles and I log in visiting a single place works booking will not work.

07:15.100 --> 07:16.750
We haven't worked on that yet.

07:16.750 --> 07:26.720
Now let's add a new place with off hopefully works let's set all this data here.

07:28.180 --> 07:33.770
Here we go.

07:33.970 --> 07:35.400
That looks pretty good.

07:35.440 --> 07:39.840
Looks like the image all that was uploaded successfully if I now editors.

07:39.850 --> 07:42.290
Let's see if editing all the works.

07:42.310 --> 07:46.780
Yeah so that all works as it should.

07:46.780 --> 07:52.000
Now let's move on and let's make sure that booking all the works of course definitely feel free to do

07:52.000 --> 07:53.410
this on your own as a practice.
