WEBVTT

00:02.200 --> 00:05.140
There are also other ways in which we could mess this up.

00:05.140 --> 00:11.140
Let's say we're manually changing you or L or we got a invalid link in our app or anything like that

00:11.340 --> 00:16.300
and hence we're trying to fetch a place which doesn't exist right now.

00:16.300 --> 00:18.370
This is the user experience we're offering.

00:18.370 --> 00:20.290
Not really that great is it.

00:20.290 --> 00:20.500
Right.

00:20.500 --> 00:22.040
We get an error here.

00:22.090 --> 00:24.620
This is not really looking that good.

00:24.700 --> 00:26.730
Well certainly not the user experience.

00:26.740 --> 00:27.940
We want to offer.

00:27.940 --> 00:35.530
We all want to handle that case so here is a working case with an idea and that is the broken one.

00:35.530 --> 00:39.350
So we want to catch errors like this and show a message to the user.

00:39.490 --> 00:47.120
So let's go to the edit offer page and first of all for the spinner that should be centered.

00:47.130 --> 00:48.530
But that's a minor thing.

00:48.580 --> 00:51.810
The more important thing is that I want to handle my error here.

00:51.840 --> 00:56.130
Not the good thing is when you are subscribing as we are doing it here when we're fetching a single

00:56.130 --> 00:57.240
place.

00:57.360 --> 01:02.750
We've thus far only cared about the function we passed subscribe as our first argument.

01:02.820 --> 01:09.270
I'm saying first argument because it turns out that the subscribe method takes more than one argument.

01:09.540 --> 01:12.040
You can pass a second function in there too.

01:12.180 --> 01:17.280
And this will be the function that is triggered when an error occurs and that is of course the function

01:17.280 --> 01:22.900
here that allows us to handle that error and save the day provide a better user experience.

01:23.010 --> 01:30.570
For example here we could show an alert to the user and ask the user if he wants to go back to a different

01:30.570 --> 01:33.530
part of the app that should work or anything like that.

01:33.630 --> 01:35.680
And that is exactly what I will do here.

01:35.730 --> 01:44.220
I will inject the alert controller provided by ionic so the alert controller which is imported from

01:44.640 --> 01:54.660
at ionic angular and the alert controller can now be used here in that error function to create a new

01:54.660 --> 01:55.140
alert.

01:55.290 --> 02:05.930
Obviously where I set the header to an error occurred and then a message where I maybe say plays could

02:06.020 --> 02:08.400
not be fetched.

02:08.400 --> 02:11.880
Please try again later.

02:13.670 --> 02:20.810
And then here I will simply add one button and that will be the okay button here

02:24.100 --> 02:30.760
to be precise I'll add object here so that I can now set the text but also define a handler so that

02:30.790 --> 02:33.100
I can define a function that should run Windows OK.

02:33.100 --> 02:39.680
Button is pressed and here I'll use my rotor to navigate the user to slash plays says.

02:39.680 --> 02:46.980
Taps offers let's say of navigate the user away.

02:47.440 --> 02:54.520
Now just as before this gives us a promise where we get this alert element and I can then simply call

02:54.580 --> 02:57.990
alert l precedent to show this.

02:58.270 --> 03:01.540
And now we should have a way better a user experience.

03:01.540 --> 03:08.380
Now when does reloads it breaks and we get this alert and if I click OK I've navigated a way hopefully

03:08.380 --> 03:13.950
to a place that now works and if I now go back to editing here this would work.

03:13.960 --> 03:17.170
So this is now a way of handling that error.

03:17.170 --> 03:22.210
And this is something you of course could consider for all the places were making HBP requests and to

03:22.210 --> 03:24.910
ensure that you have the best user experience possible.
