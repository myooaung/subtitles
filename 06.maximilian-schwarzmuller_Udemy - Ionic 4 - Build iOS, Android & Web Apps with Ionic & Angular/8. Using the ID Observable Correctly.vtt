WEBVTT

00:02.450 --> 00:07.970
We got errors because I changed user IDs authenticated and user I.D. and therefore in places where we

00:07.970 --> 00:10.220
used these fields we now have problems.

00:10.280 --> 00:16.130
For example in the booking service if we have a look at the booking service there we have an error where

00:16.130 --> 00:18.630
I extract a user I.D. and that makes sense.

00:18.650 --> 00:25.990
The user idea is no longer a string I can just pass here as an argument instead in the off service.

00:26.030 --> 00:32.930
I changed my user I.D. to essentially return and observable and therefore we need to change the way

00:32.930 --> 00:39.070
we extracted here when we need dead user I.D. We need to reach out to the off service which we already

00:39.110 --> 00:40.170
do.

00:40.280 --> 00:43.810
But then on the user I.D. Here we simply need to subscribe.

00:44.390 --> 00:50.480
And of course I don't want to set up a ongoing subscription but I want to get exactly the latest snapshot.

00:50.480 --> 00:57.440
So I'll add the pipe method here and then to take operator which you therefore need to import from our

00:57.440 --> 01:00.940
exchange as operators in case you're not doing that already.

01:01.010 --> 01:04.900
And then here I want to take exactly one value add in here.

01:04.910 --> 01:11.420
I then get my user I.D. which is that string and if we're not getting a user I.D..

01:11.450 --> 01:16.200
So if this is null for some reason I want to return and not continue.

01:16.340 --> 01:21.990
Otherwise I can now create my new booking here and there.

01:22.010 --> 01:25.150
We now have that user I.D. field.

01:25.300 --> 01:31.540
The problem we now have is that I create that new booking in the subscribe method of my subscription

01:31.540 --> 01:37.450
to user idea and I then want to use that here in this age GDP request which is a never observable change

01:38.020 --> 01:44.020
if I leave the code like this does will not work because we already see it here new booking is not available

01:44.020 --> 01:50.290
there and even with who would define it as a variable that is available everywhere even then the order

01:50.290 --> 01:55.510
of execution would be incorrect because this is an asynchronous task here and therefore it is would

01:55.510 --> 01:58.400
not be finished before this executes.

01:58.450 --> 02:04.330
So we actually have to move this into our observable chain.

02:04.330 --> 02:12.490
We have up there and hence I will actually not subscribe here but use a switch map because that allows

02:12.490 --> 02:18.400
me to convert one observable my user idea observable into a different one which will be this HDP request

02:18.400 --> 02:20.170
observable down there.

02:20.170 --> 02:26.680
So here in this switch map I now get my user I.D. just as before in the subscription and I will move

02:26.680 --> 02:38.360
the entire code I had into there and now in their I will return this observable where I send a post

02:38.360 --> 02:45.810
request I returned this after creating the new booking and now we can add the operators we had on that

02:45.810 --> 02:55.970
observable chain simply to the pipe method we had up there like this now the one thing that is now problematic

02:55.970 --> 03:05.600
is the new booking which now is a well up there but not down here where I need to get the I.D. of that

03:05.600 --> 03:13.640
booking where where I want to set it and for Dad Well we simply can define let new booking up there

03:13.760 --> 03:21.350
as a variable which is which eventually will hold a booking and then I just don't create a constant

03:21.350 --> 03:25.620
here but assign this to my booking to my new booking.

03:25.640 --> 03:30.860
Now this might look very complicated but in the end what I did here is simply create a new observable

03:30.860 --> 03:38.090
chain where it first of all get my user I.D. once to get the latest snapshot and then I return nothing

03:38.090 --> 03:43.430
if we have no user I.D. which actually would be invalid code because which map always needs to have

03:43.430 --> 03:45.060
an observable return.

03:45.140 --> 03:53.000
So indeed I will not return nothing here but actually throw a new error or no user I.D. found so that

03:53.000 --> 03:58.010
we really have an error in the application and therefore make it into the error handler of that observable

03:58.010 --> 03:58.700
chain.

03:58.940 --> 04:05.900
But we should have a user I.D. by default and then I create a new booking I use that and that HDP request

04:05.900 --> 04:12.020
which I then return in this switch map because which map is an operator that gives us the result of

04:12.020 --> 04:18.140
one observable and returns a new observable and then we have our operators that pick up on that return

04:18.140 --> 04:26.510
response by that observable and do the same we did before now we've fixed the booking file in the Discover

04:27.620 --> 04:36.200
page we have another issue and there I also have the issue of me using the user I.D. which now is no

04:36.200 --> 04:38.950
longer a string but an observable.

04:38.990 --> 04:40.610
Now let's also fix that.
