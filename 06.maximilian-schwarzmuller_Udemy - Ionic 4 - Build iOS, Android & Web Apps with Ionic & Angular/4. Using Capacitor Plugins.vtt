WEBVTT

00:02.550 --> 00:07.940
So here I am back in the application and what you might have noticed before already is that whenever

00:07.950 --> 00:14.290
does app restarts you get these warnings here in our browser on a P.C. or a Mac book Dad.

00:14.670 --> 00:21.690
These calls were not available with clear devices something now that is they are all linked from older

00:21.690 --> 00:26.650
times and depending at the point of view your viewing distance might not even occur anymore.

00:26.760 --> 00:32.640
But what's basically happening here is that when we have a look at the app component here you see in

00:32.640 --> 00:35.190
the constructor we call the initialize app.

00:35.190 --> 00:43.560
And there we wait for the platform to be ready and if it is ready then we tried to call status bar style

00:43.560 --> 00:45.690
default and splash screen height.

00:45.690 --> 00:47.070
Now what's this all.

00:47.400 --> 00:54.810
Now the platform here this platform is a service that is injected and the platform is provided by at

00:54.810 --> 00:55.920
ionic angular.

00:55.920 --> 01:01.580
Now the platform is a really helpful service that allows you to detect well whenever.

01:01.650 --> 01:04.550
Basically the platform on which you wrap runs is ready.

01:04.980 --> 01:07.430
But here you can also learn more about your platform.

01:07.440 --> 01:10.530
You can find out if you're currently in landscape or portrait mode.

01:10.530 --> 01:17.250
You can get the dimensions off the platform and you can also check with is what platform you're running

01:17.250 --> 01:17.620
on.

01:17.670 --> 01:20.710
And here values are Android I guess.

01:20.900 --> 01:25.080
Is it a platform that supports capacitor or is capacitor enabled.

01:25.080 --> 01:26.400
Is it a desktop.

01:26.400 --> 01:30.660
You're running on is a hybrid environment so you can play around with that.

01:30.660 --> 01:37.710
You can also just try different values here and console log to resolve to see when which check returns

01:37.710 --> 01:38.420
true.

01:38.490 --> 01:43.470
And this can be helpful whenever you have code that you only want to run under certain circumstances.

01:43.710 --> 01:49.140
So whenever you have code where you know I only want to execute this code if I'm able on platform x

01:49.140 --> 01:53.250
y is set and I will come back to that later when we'll utilize this.

01:53.820 --> 01:57.360
So that's the platform and what's the status bar and splash screen.

01:57.450 --> 01:59.560
These are all injected services here.

01:59.580 --> 02:05.340
Status bar and splash screen and they are actually coming from a package named ionic native.

02:05.340 --> 02:10.780
Now these specific packages here are stemming from the court of a world that they offer.

02:10.800 --> 02:13.010
I don't really want to use them here.

02:13.050 --> 02:16.800
Instead I want to use equivalence from capacitor.

02:16.800 --> 02:22.710
If you have a look at the capacitor core API is here you see a splash screen and a status bar API there

02:22.710 --> 02:28.030
as well and you can learn more about it in these official docs here of course.

02:28.040 --> 02:33.560
Now I want to get rid of these two Cordova plugins here and therefore we also have to get rid of the

02:33.560 --> 02:38.680
injection year instead we'll do the same with the capacitor API.

02:39.410 --> 02:41.380
And for that let's import them here.

02:41.390 --> 02:50.590
Let's import something from and then you import from at capacitor slash core so from add capacitors

02:50.590 --> 02:56.710
slash core what you can import there is a plug ins object.

02:56.710 --> 03:02.250
Dad is basically an object that bundles all the plug ins takes post by a capacitor.

03:02.290 --> 03:09.220
Now in initialize app I still wait for the platform to be ready before I do anything which is my signal

03:09.220 --> 03:10.430
that everything loaded.

03:10.630 --> 03:16.600
But then I'll check if And now I'll also import capacitor itself here.

03:16.600 --> 03:19.460
So plug ins and capacitor is imported.

03:19.540 --> 03:26.930
I check if capacitor is plugged in a way lable splash screen.

03:26.930 --> 03:34.080
And if it is available I call plug ins from that plugins object we're importing splash screen height

03:34.110 --> 03:39.210
and his hides this large screen which is automatically shown when the application boots.

03:39.310 --> 03:43.950
You can learn more about the configuration of the splash screen here in the official docs and we'll

03:43.950 --> 03:49.560
actually dive into setting our own splash screen later in the deployment section of this course.

03:49.620 --> 03:55.830
But here you can learn how you could set the auto height duration because it will height the splashdown

03:55.860 --> 04:00.110
automatically after a certain amount of time with the help of to get past the conflict.

04:00.120 --> 04:05.760
Jason File but hiding it manually once the app is ready is of course what you should do because Dad

04:05.760 --> 04:11.490
will typically hide it faster than offered his auto height time that you can set up.

04:11.490 --> 04:16.530
Still you can learn more about the configuration of the splash screen here if you want you will dive

04:16.530 --> 04:19.340
into providing our own splash screen later in the course.

04:19.350 --> 04:21.120
For now let's go with that.

04:21.180 --> 04:26.620
And now regarding the status bar here we don't actually need to call that style default method.

04:26.650 --> 04:30.410
Capacitor calls it doesn't provide that method because it doesn't need it.

04:30.420 --> 04:37.980
So with capacitor we only need to hide the splash screen and if we do that and we let this reload it

04:37.980 --> 04:39.970
shouldn't change much here on the web app.

04:40.010 --> 04:44.090
But one thing it should change is that we don't have these warnings anymore.

04:44.100 --> 04:48.570
Now let's also have a look at our application as it runs on mobile devices.

04:48.690 --> 04:54.710
And for this let's try it on Android first with ionic capacitor run Android.

04:54.810 --> 05:01.260
Here in the project folder and this will now build the application and then also build it for android

05:01.350 --> 05:04.550
and open Android Studio which then allows us to launch it.

05:04.560 --> 05:08.020
So let's wait for that here it is now.

05:08.110 --> 05:14.950
I'll click that play button that run app button here and then we can choose a real connect device or

05:14.950 --> 05:22.120
any of these emulators and I'll go with an emulator here and now it will start that emulator for me

05:22.150 --> 05:28.240
and then launched the app on that emulator and here it is launching

05:33.390 --> 05:34.390
and this looks quite good.

05:34.390 --> 05:40.240
We have our status bar here and so that definitely all works and we can navigate around and play around

05:40.240 --> 05:41.240
with our app.

05:41.260 --> 05:50.610
Now let's all try it on IAW by running ionic capacitor run IOW so that this is all the built for IWC

05:50.670 --> 05:52.300
and X code is open up.

05:52.300 --> 06:00.310
Of course ISIS only works on mac os systems so you can't run this on Windows and here it is opened in

06:00.310 --> 06:00.940
X code.

06:00.940 --> 06:05.560
Now let me also pick a device here and then run the app on that.

06:05.560 --> 06:11.470
So now it will build it here in X code and then open that emulator and run the app on that emulator

06:12.430 --> 06:13.260
that is looking nice.

06:13.260 --> 06:16.610
We see our application that all seems to work.

06:16.780 --> 06:19.930
So this is our first glimpse at capacitor.

06:19.990 --> 06:25.210
Here we just replaced some cord of a plug ins with it but nonetheless this is how a capacitor generally

06:25.210 --> 06:26.560
works and how we will use it.

06:27.100 --> 06:31.440
Now let's use it to provide an alternative to picking a place on a map.

06:31.480 --> 06:36.640
Let's allow a user to auto locate himself by using a feature called geo location.
