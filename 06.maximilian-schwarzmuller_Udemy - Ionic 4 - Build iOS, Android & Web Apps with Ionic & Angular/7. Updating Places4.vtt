WEBVTT

00:02.160 --> 00:03.780
Storing and fetching data is nice.

00:03.780 --> 00:04.650
What's missing.

00:04.650 --> 00:10.890
Well editing and deleting will see deleting once we added bookings because we in our app here can't

00:10.890 --> 00:11.720
delete places.

00:11.730 --> 00:15.300
But we can delete or cancel bookings.

00:15.510 --> 00:19.290
But of course we can update places so let's focus on that first.

00:19.470 --> 00:26.640
And if it isn't the place a service we have our update place method of course and it's this update place

00:26.640 --> 00:30.590
method on which we can work to update a place.

00:30.600 --> 00:37.620
Right now we're updating it in place and our existing list of places of course said that is not really

00:37.620 --> 00:38.540
what I want to do here.

00:38.550 --> 00:42.590
I want updated on the server instead so as before.

00:42.600 --> 00:50.070
The goal here is to send an age to be request and if you want to update something on firebase you typically

00:50.070 --> 00:57.330
do this with the put method which replaces the existing resource you are targeting with the new resource

00:57.360 --> 01:02.940
you're sending along with this request and therefore I will send along my updated place essentially

01:02.940 --> 01:05.080
and target the existing place.

01:05.250 --> 01:12.150
So let's first of all grab that you URL from up there and I will send the request to almost the same

01:12.150 --> 01:14.830
your URL but not exactly the same.

01:14.940 --> 01:23.310
Instead on firebase the cool thing is if you want to target a special path or a specific thing in your

01:23.610 --> 01:29.400
database you can click on it like let's say we would want to delete displays and you see this is now

01:29.430 --> 01:32.480
the URL we would have to target with DOT Jason.

01:32.520 --> 01:33.190
At the end.

01:33.420 --> 01:38.340
So we basically construct a path here that reflects the path in our database.

01:38.340 --> 01:44.820
So if we want to delete the place with that idea we would target this year El slash offered places slash

01:44.820 --> 01:52.170
this year l thought Jason and hence here I don't want to target slash offered places not to Jason but

01:52.170 --> 02:00.920
slash offered places slash and now the idea of the place I want to update so I will use a different

02:01.370 --> 02:05.860
way of constructing the string here using iOS 6 feature string laterals.

02:06.020 --> 02:11.060
You have to use a back tick here not a single quote and this allows you to inject dynamic values into

02:11.060 --> 02:15.270
your string with this syntax with the dollar sign and the curly braces.

02:15.320 --> 02:17.600
And here I want to inject my place Aidid.

02:18.020 --> 02:25.990
So this constructs a path where the I.D. is part of the path and then we have dotted Jason at the end.

02:26.000 --> 02:31.250
Now as I mentioned the second argument here for a put then has to be the data with which the existing

02:31.250 --> 02:39.320
data on this node should be replaced and that of course is my existing place with its new title and

02:39.320 --> 02:40.580
description.

02:40.850 --> 02:45.510
Now that existing place of course is fetched from my current list of places.

02:45.560 --> 02:52.960
So what I actually want to do here is I will keep my old observable chain here without the delay though

02:54.060 --> 03:01.590
copy that and actually start with this year to fetch my current list of places.

03:01.590 --> 03:09.780
And after taking that latest snapshot and then clearing the subscription year in that method to that

03:09.900 --> 03:17.670
place is observable here to my list of places observable so to say there I can now use a switch map

03:17.670 --> 03:25.330
again to switch my observable which currently targets that array of places into debt HBP to observable.

03:25.400 --> 03:31.860
And here I'll get my places list and now we can use our updating place logic which we have done there

03:31.860 --> 03:38.540
except for the part where I basically emit this event here on the subject so I will move that in here

03:40.300 --> 03:49.490
to identify the place I want to update and so on I construct a new place which is my updated place and

03:49.490 --> 03:54.690
then I will return in that switch map method.

03:54.950 --> 04:01.430
So in here I will return this H if you put in the second argument.

04:01.430 --> 04:06.240
Here is a new object where I want to copy that new place I'm creating here.

04:06.320 --> 04:12.950
So I want to take that place here in my list of places that are replaced with the new place and I'll

04:12.950 --> 04:18.590
copy all the properties from it and overwrite the I.D. to set it to now because the I.D. is not stored

04:18.590 --> 04:23.540
on firebase Data's handled differently but all the other properties should be stored.

04:23.540 --> 04:27.410
So now I'm sending this to Firebase and I'm returning this.

04:27.410 --> 04:35.330
So in the next step of this observable operator chain we'll get back the response of that HBP request.

04:35.330 --> 04:36.990
So Europe will add a tap.

04:37.160 --> 04:42.920
Operator again where I get my response data and I'm not really interested in the response data because

04:42.920 --> 04:43.980
I'm not using it.

04:44.060 --> 04:49.650
So you could also just accept nothing here as an argument even though you will get something.

04:49.790 --> 04:58.070
And here my goal then simply is to update the place locally and emit the new list of updated places.

04:59.200 --> 05:08.950
So essentially a one I call this year the next method on my Place's subject and now get rid of all of

05:08.950 --> 05:10.720
that down there.

05:10.720 --> 05:18.840
Now we'll face one issue with that approach the issue is that updated places is not available here in

05:18.840 --> 05:19.680
the tap.

05:19.750 --> 05:21.930
Operator function.

05:21.930 --> 05:27.480
The reason for that is that updated places is managed here in switch map and the function in which we're

05:27.480 --> 05:30.610
running all this code is simply a different function than this one.

05:30.750 --> 05:35.650
Some updated places is not available here but of course the fix is simple.

05:35.740 --> 05:44.640
Again we simply initialize our new updated places variable up here and this will simply be an array

05:44.640 --> 05:51.750
of places as we know then year it's not a constant but we just use that on initialized or undefined

05:51.780 --> 05:58.670
updated places variable here and hence it's all the way down there now where we emitted and it's fine

05:58.670 --> 06:04.350
that we updated here before does HBP request is actually sent because the data with which we update

06:04.440 --> 06:12.430
won't change on the server we just want to wait with emitting the data until we're done.

06:12.480 --> 06:18.660
Now let's return this observable change here Soledad from inside our components we can still subscribe

06:18.660 --> 06:19.880
to that.

06:19.920 --> 06:21.990
And with that our absolute already work.

06:21.990 --> 06:27.540
So now if you go back to the offers and we added the test here to add a couple of estimation marks and

06:27.540 --> 06:31.860
save that here's the spinner and here's the updated result.

06:31.860 --> 06:35.610
And by the way of course the results reflect that here on the Discover tab.
