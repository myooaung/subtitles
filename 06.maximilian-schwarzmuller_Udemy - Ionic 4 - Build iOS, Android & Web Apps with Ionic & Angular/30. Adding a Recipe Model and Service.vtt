WEBVTT

00:02.030 --> 00:08.300
In the last lecture we added some messages some toast Yep let's not make sure that we can actually submit

00:08.360 --> 00:14.240
our recipe here and added to well to some servers we still need to create so that we can actually output

00:14.240 --> 00:17.760
a list of recipes on our recipes page here.

00:18.050 --> 00:19.180
So step by step.

00:19.340 --> 00:21.570
Let's start by being able to submit this.

00:21.590 --> 00:28.160
We already got a submit button here in the recipe template I want to add something to that button though

00:28.460 --> 00:31.610
I want to disable it if the form is not valid.

00:31.730 --> 00:36.320
So it will simply disable it if recipe for invalid is false.

00:36.320 --> 00:41.000
In this case I don't want to offer a submit button because well the volleys are not valid.

00:41.000 --> 00:44.110
It should not be submodel if that is submodel.

00:44.100 --> 00:47.470
Also if the form is valid we will trigger on submit.

00:47.480 --> 00:53.330
So we now need to work on in on Zammit to actually do submit the whole form and do something with that

00:53.330 --> 00:54.200
value.

00:54.290 --> 01:00.800
And for that I will need a new service recipe's service which stores an array of recipes.

01:00.800 --> 01:05.410
So kind of similar to the shopping lists service where we had all our ingredients.

01:05.450 --> 01:12.830
Now we want to have a list of recipes and I want them to have methods to get all my recipes add them

01:12.920 --> 01:20.430
edit them remove them and maybe also add a model for every recipe just like we have a model for ingredient.

01:20.570 --> 01:24.160
So let's start with the model and that will be a challenge for you.

01:24.170 --> 01:30.740
Think about what such a recipe should have as properties and then feel free to create the model.

01:30.740 --> 01:34.960
You could also already feel free to work on the recipe service if you feel like it.

01:34.970 --> 01:38.510
I've mentioned dimethyl to should have a couple of seconds ago.

01:38.780 --> 01:41.210
Starting in a few seconds we'll do this together.

01:43.330 --> 01:46.260
So I want to start with the model here.

01:46.270 --> 01:49.660
I will add a new file to the models file recipe.

01:49.790 --> 01:57.170
Yes I do this because we will use the recipe for this application and it will always have the same properties.

01:57.190 --> 02:01.100
So it makes sense to create kind of a blueprint for us for this.

02:01.210 --> 02:08.740
So we'll export this recipe class here and will create or I will treat all the properties here in the

02:08.740 --> 02:14.240
constructor to automatically assign the values you passed to the constructor to those properties.

02:14.440 --> 02:20.530
We will need a title property and I do know that because we can simply have a look at our added recipe

02:20.530 --> 02:21.660
age file.

02:21.700 --> 02:23.920
We do have a title a description of difficulty.

02:24.040 --> 02:26.580
And we are able to add ingredients.

02:26.740 --> 02:33.340
So it makes sense to have a title which is of type string to also have a description which is of type

02:33.340 --> 02:40.650
string to also have a difficulty and not public though that should all be private.

02:40.660 --> 02:43.090
That should all be public excuse me.

02:43.090 --> 02:50.170
So let's also add a difficulty public one two places there were multiple lines so that it's easier to

02:50.170 --> 02:51.580
keep track.

02:51.700 --> 02:53.830
The difficulty will also be a string.

02:53.830 --> 02:56.860
We do select from a dropdown but ultimately it's a string.

02:56.860 --> 02:59.260
We do populate to drop down with an array of strings.

02:59.260 --> 03:00.410
Keep that in mind.

03:00.790 --> 03:03.780
And finally we do have an array of ingredients.

03:03.880 --> 03:10.870
So here I will use my ingredient model going to import this into my recipe model and assign this ingredient

03:10.930 --> 03:15.340
array type here and also add to construct a body.

03:15.370 --> 03:16.770
Even though it's empty.

03:16.810 --> 03:21.690
So if I'm initializing the recipe and again keep in mind this set up here will automatically create

03:21.700 --> 03:25.810
refitting properties and assign the values if we pass them.

03:25.810 --> 03:28.120
So this is not a blueprint for our recipe.

03:28.120 --> 03:33.430
The next step is to create a fitting service or recipe service where we can manage an array of such

03:33.430 --> 03:38.710
recipes by getting it adding items updating items and removing items.

03:38.800 --> 03:40.570
Let's work on this together next.

03:40.600 --> 03:44.630
You can go ahead and try reading the service on your own right now.

03:48.030 --> 03:51.690
So let's add recipe's service into services file.

03:51.690 --> 04:02.190
I'm going to add my recipes tortillas file and in this file I will export my recipes service just like

04:02.190 --> 04:03.720
this.

04:03.730 --> 04:06.490
So this is my recipe service in there.

04:06.520 --> 04:14.530
I want to manage my recipes array which uses the recipe model I just created so make sure to add this

04:14.530 --> 04:18.310
import to the model's directory and then the recipe file.

04:18.400 --> 04:24.780
And it's an area of recipes you're empty initially and then only a couple of methods.

04:24.970 --> 04:28.620
For example you add recipe method in this method.

04:28.630 --> 04:36.100
You could even receive a finished recipe like this or you received individual parts just like we did

04:36.100 --> 04:37.640
in the shopping service.

04:37.810 --> 04:40.890
So here we will receive a title which is a string.

04:41.200 --> 04:48.670
We will receive the description which is a string will will receive the difficulty which is a string

04:48.940 --> 04:54.140
and we will get the ingredients which is and type or which is an array of ingredients.

04:54.160 --> 05:00.360
So make sure to add this ingredient imported at the top 2 and set this to type ingredient here.

05:00.640 --> 05:06.850
And also here I will split this were multiple lines and then add the body of that method.

05:07.180 --> 05:10.990
So that's my ADD recipe method in here.

05:11.020 --> 05:16.260
I want to access my recipes array and simply push a new recipe on it.

05:16.390 --> 05:24.590
So hirable treat a new recipe with the recipe model and I just notice a mistake here.

05:24.730 --> 05:31.570
The moral name should not be recipes it should be recipes similar because this is one recipe.

05:31.900 --> 05:38.800
So make sure to adjust this to have recipe as a name here and now let's create a new recipe here and

05:38.800 --> 05:45.070
pass the title the description the difficulty and the ingredients to it.

05:45.220 --> 05:50.440
And with that we're adding a new recipe that's all adding It is nice.

05:50.440 --> 05:52.210
I also want to be able to get it.

05:52.270 --> 05:59.710
So here I will add I get recipes Meffert and here I simply will return my recipes array but again with

05:59.710 --> 06:06.610
the slice method to create a copy of it and not return the same object the same array here.

06:07.120 --> 06:14.480
Well and we will also be able to edit such a recipe and it will already add the method to do so.

06:14.680 --> 06:15.220
I will name it.

06:15.250 --> 06:16.710
Update recipe.

06:16.900 --> 06:23.890
And here I expect to get an index which is a number of the recipe in the array I want to change as well

06:23.890 --> 06:32.410
as well again over multiple lines a tile which is a string description which is a string difficulty

06:32.410 --> 06:33.390
which is a string.

06:33.400 --> 06:38.030
And of course my ingredients which is an array of ingredients.

06:38.290 --> 06:42.060
So these are the arguments I expect to get what to edit.

06:42.130 --> 06:44.880
And then the new values.

06:45.030 --> 06:52.930
And with that I can then access my recipes array at the index I get as an argument and then simply create

06:52.930 --> 06:58.450
a new real recipe and replace the existing ideas with them with that and that recipe will again use

06:58.450 --> 07:02.940
the title the description the difficulty and the ingredients.

07:02.950 --> 07:06.460
So I'm simply creating a new recipe and overwriting the old one with it.

07:06.850 --> 07:10.870
Well and finally I need a method to remove a recipe right.

07:11.290 --> 07:16.780
So removing a recipe works like this I add the index number here.

07:17.650 --> 07:28.250
And then I'd say this recipe is splice in the eggs one to remove this very recipe from the array.

07:28.260 --> 07:30.150
These are all the methods I need.

07:30.150 --> 07:36.090
I will also already at is service to my app Marchal here to the provider's area because I want to be

07:36.090 --> 07:36.850
able to use it.

07:36.870 --> 07:40.180
Application wide recipe's service.

07:40.290 --> 07:47.000
Also make sure to add this import and with that we're going to use this recipe service in our app.

07:47.160 --> 07:53.500
And let's start using it in the edit recipe component and this page where we want to add new recipes.
