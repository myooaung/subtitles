WEBVTT

00:02.570 --> 00:08.210
The I want it to project be created and any I want to project you're going to trade ships with a lot

00:08.210 --> 00:10.420
of folders and files as you can see.

00:10.490 --> 00:14.950
We already had a look at the source folder and this is the most important folder for us because this

00:14.950 --> 00:19.310
is where we're going to develop our angle or to Web and therefore our mobile app.

00:19.310 --> 00:23.240
In the end this is where we will spend the majority of our time.

00:23.360 --> 00:28.220
Nonetheless I want to go for all the other folders too and explain what all those folders and files

00:28.250 --> 00:28.960
do.

00:29.240 --> 00:31.470
Let's start at the top with the Hooke's folder.

00:31.610 --> 00:34.030
That is a folder you might need.

00:34.070 --> 00:39.470
If you were an advanced developer because here you can find certain hooks and you can have a look at

00:39.470 --> 00:46.280
this read me to find out more which are automatically run little scripts I should say which are automatically

00:46.280 --> 00:49.040
triggered by coord of a During the build process.

00:49.130 --> 00:51.400
Here you can see some of the hooks which are supported.

00:51.500 --> 00:57.110
So you can basically instruct cordura to run a certain script after a build has been finished after

00:57.120 --> 01:00.670
build has been run after it has been served and so on.

01:00.680 --> 01:05.960
So some advanced topics which could then automatically push your code to good publish it or something

01:05.960 --> 01:06.690
like this.

01:06.830 --> 01:12.350
So I won't go into that in this course but it's good to know that there's a stair node module is a folder

01:12.350 --> 01:16.100
which is managed automatically by NPM our package manager.

01:16.220 --> 01:21.170
And you shouldn't touch it when we install new packages that are uninstalled and they will be stored

01:21.170 --> 01:21.520
here.

01:21.560 --> 01:27.680
So all our dependencies live here in the end when we publish our application all our code will of course

01:27.680 --> 01:32.510
be bundled into a single bundle so no worries you don't need to deploy all those packages where you

01:32.510 --> 01:39.890
don't need to kind of upload all those folders anywhere on the platforms folders in important folder.

01:39.890 --> 01:43.940
It basically stores all the platforms you added to this project.

01:43.940 --> 01:50.270
Now the compact does indeed run it on an emulator or real device section in this course of platforms

01:50.270 --> 01:53.030
are basically the targets you're developing your app for.

01:53.030 --> 01:58.090
So if you're developing apps for iOS you need to add the Iowa platform here.

01:58.100 --> 02:01.950
Now for me it has already been added since I created this project on a Mac.

02:02.030 --> 02:03.590
That might not be the case for you.

02:03.590 --> 02:06.320
You might see Android here or no platform at all.

02:06.320 --> 02:11.360
Again I would show you how to add such platforms later in the course and you always need to add a platform

02:11.360 --> 02:14.740
if you plan to publish your application on this platform.

02:14.900 --> 02:16.330
So that is what's happening here.

02:16.340 --> 02:21.140
You will learn that we add blood from a command to so you don't need to change anything in this folder

02:21.140 --> 02:22.220
to plugins.

02:22.260 --> 02:27.980
Stores all D-CT of up like you might use and that is required to access native device features.

02:27.980 --> 02:31.700
For example the camera we will later in the course of course see this too.

02:31.700 --> 02:35.900
Basically you don't touch this folder SD above folders too.

02:35.960 --> 02:41.780
Instead we will use the command line to install black in our project and they are for a new folder will

02:41.780 --> 02:47.180
then be created in this folder which contains the functionality we need to access those features on

02:47.180 --> 02:47.730
the device.

02:47.750 --> 02:50.630
Again managed for you automatically.

02:50.630 --> 02:54.560
Now the resources folder is something we'll have a look at in the deployment section.

02:54.590 --> 02:58.490
Here you can basically define your own app icon and splash screen.

02:58.490 --> 03:02.990
You can also define this on a per platform basis if you don't want to define a shared resource.

03:03.170 --> 03:07.910
And then you'll have a handy Command which has all the shown in the deployment section which will kind

03:07.910 --> 03:14.300
of automatically scaffold out a couple of images plus screens and I can see four different devices for

03:14.300 --> 03:16.950
us so that is something we will work with later.

03:16.970 --> 03:18.880
Now already talked about the source folder.

03:18.890 --> 03:23.440
I'll come back to those files in a second but be finished with the W W W folder.

03:23.450 --> 03:25.520
This is also a folder you won't touch.

03:25.520 --> 03:26.000
Man.

03:26.030 --> 03:27.710
Not a lot of folders to work with right.

03:27.980 --> 03:32.630
Because this folder here is managed by Iyonix to hold your web app.

03:32.660 --> 03:38.010
So it's this in-between step before your application gets compiled to a native app from Cordova.

03:38.020 --> 03:41.460
This is tiap you are actually seeing in the browser when running Iyonix serve.

03:41.540 --> 03:45.670
So it is created for you automatically with this Iyonix serve process.

03:45.680 --> 03:48.080
It's in the end your compiled you learn to code.

03:48.170 --> 03:50.150
But again not your native app.

03:50.180 --> 03:51.050
A web app.

03:51.290 --> 03:56.300
Now all those other facts are basically conflict Fahd's which allow you to configure your project except

03:56.300 --> 04:00.710
for the conflict Exham file will have a look at this later in the deployment section.

04:00.710 --> 04:04.530
Here you can configure your app like the name of the app and so on.

04:04.790 --> 04:07.340
Well and the fans are really just for the project.

04:07.340 --> 04:12.010
For example the package file holds all our dependencies of this project.

04:12.080 --> 04:17.420
Most of the time don't edit this file directly but use the NPM command line tool to install new pictures.

04:17.420 --> 04:20.140
And again this is something you will see in this course.

04:20.180 --> 04:25.340
So back to the source folder then the app folder holds are app component app modules to everything.

04:25.340 --> 04:30.860
We kind of need to start our app you could say and we will have a closer look at how the upstarts in

04:30.860 --> 04:35.800
the next lectures the folder is a place where you can store static images.

04:35.810 --> 04:40.520
So if you have an image you're going to use in your application which is not fetched from a server or

04:40.520 --> 04:41.550
something like this.

04:41.600 --> 04:46.520
You could store it here and reference it in your templates and then it will automatically be copied

04:46.520 --> 04:47.870
when you compile the application.

04:47.870 --> 04:54.470
So a nice place to store static files the pages folder is obviously where we will store all our pages

04:54.470 --> 04:59.460
in our eye on it to help and we will soon learn what pages really are and how they compare to angler

04:59.460 --> 05:00.860
to components.

05:00.860 --> 05:06.460
And the theme for is a folder which allows you to adjust the themes or the look of your application

05:06.490 --> 05:09.220
and will have a detailed look at this file and this section.

05:09.390 --> 05:16.140
Now our forefathers declaration started here as a file where you can basically declare your own variables

05:16.150 --> 05:19.910
you want types content to know you really need to work with this file.

05:19.920 --> 05:25.030
It's kind of advanced usage if you know that something exists and typescript does know it you could

05:25.030 --> 05:26.340
add it here.

05:26.440 --> 05:29.040
Then we have the next age team I'll follow.

05:29.050 --> 05:35.110
This is the file which in the end while it kicks off our application which starts our app and of course

05:35.110 --> 05:40.990
in the end it is taken by Cordova and we'll be all packed into a native code into a code which can run

05:40.990 --> 05:42.030
on a native device.

05:42.190 --> 05:48.100
But especially for that in-between step we can find the same file here indeed w w w folders or does

05:48.100 --> 05:55.160
this where we as a normal and you are EPK kickstart our application many chase and service work or braceros

05:55.190 --> 05:55.590
our.

05:55.600 --> 05:59.100
I'm not going to look at this course because these two fonts are required.

05:59.110 --> 06:05.620
If you're building a progressive Web app which is a web app which is not a native app it's not compiled

06:05.620 --> 06:08.970
to native code for devices and therefore not the scope of discourse.

06:09.100 --> 06:15.010
But instead that would be your app which you can kind of install on your device directly from a web

06:15.010 --> 06:18.370
page and it kind of runs in the browser.

06:18.400 --> 06:21.360
And also as a native app depending on where you started.

06:21.400 --> 06:25.960
So this is an interesting feature and something you can definitely have a look at in the future which

06:26.050 --> 06:27.410
might alter coverage in a course.

06:27.430 --> 06:30.610
Again it does not related to native apps though they are for.

06:30.640 --> 06:34.530
You can just leave these files where they are but we don't need to work with them.

06:34.750 --> 06:37.200
That's an overview over the project structure.

06:37.300 --> 06:40.040
Again source folder the most important folder for us.

06:40.180 --> 06:44.870
And then we'll step by step learn how to use all those files and how to develop our application.
