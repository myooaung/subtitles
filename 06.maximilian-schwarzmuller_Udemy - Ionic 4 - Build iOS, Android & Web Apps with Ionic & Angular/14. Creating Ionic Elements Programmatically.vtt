WEBVTT

00:02.240 --> 00:07.340
So I want to render a list of all these expenses below my card here.

00:07.570 --> 00:12.860
Now please keep in mind we are in the ion-grid with rows and columns and I added this to control the

00:12.860 --> 00:15.410
width of my elements in the grid.

00:15.410 --> 00:19.000
The list which I want to render also should have its width controlled,

00:19.010 --> 00:26.450
it should not take a full page width on big screens. So I will add a new ion-row beneath the first one,

00:26.960 --> 00:29.470
with a new ion-column inside of it

00:31.340 --> 00:41.430
and in that ion-column here, I want to render a so-called ion-list. Now I'll give this list an ID

00:42.120 --> 00:50.670
of expenses list because I want to access this list programmatically and render items into it.

00:50.670 --> 00:58.990
Now ion-list here is an element provided by Ionic that helps us structure list data,

00:59.010 --> 01:05.950
so basically structure elements beneath each other and displaying it as a nice list.

01:06.270 --> 01:11.490
You can actually also add other features like sliding list items and these are all things we'll dive

01:11.490 --> 01:12.960
into the course later,

01:12.960 --> 01:18.840
for now let's just go with the list like this and add it just like that and let's add some logic to

01:18.840 --> 01:22.290
add an an item dynamically to that list.

01:22.350 --> 01:31.410
So in app.js, I want to get access to this list of expenses, so my expenses list here is fetched or

01:31.560 --> 01:34.780
a reference to it is fetched with query selector hashtag

01:34.800 --> 01:35.790
expenses list,

01:35.790 --> 01:38.550
so the ID I added to the expenses list.

01:38.730 --> 01:44.550
Now we can use this reference to add new items to it and I want to add new items here where I currently

01:44.550 --> 01:52.140
console log the entered recent amount. I'll create a new item with documents create element which

01:52.140 --> 01:58.790
is a default DOM API, has nothing to do with Ionic that allows us to create new HTML elements and now

01:58.800 --> 02:05.460
the nice thing is these web components, these custom HTML elements can be created just like regular

02:05.650 --> 02:07.350
HTML elements.

02:07.350 --> 02:14.190
So here we can enter ion-item which is the selector or the tag provided by Ionic for this

02:14.230 --> 02:21.330
item element and we used the ion-item before already when we didn't create it programmatically, we used it

02:21.450 --> 02:28.500
here to wrap our label and input. ion-item turns out to be an element which can be used in different

02:28.500 --> 02:29.420
situations

02:29.490 --> 02:35.130
and I'll dive a bit deeper into that in a later module, where we have a closer look at components and

02:35.130 --> 02:40.020
do some deep dives on some important components, ion-item is one of them,

02:40.020 --> 02:43.060
so ion-item actually can be used in different situations.

02:43.110 --> 02:49.740
It can be used to group label and input together but it can also be used inside of an ion-list to

02:49.740 --> 02:55.520
wrap all the content of a single list item that basically should be rendered in a nice way.

02:55.870 --> 03:05.020
So here I'm creating a new ion-item and on this new item here, I want to set a text content which is

03:05.020 --> 03:15.170
equal to my entered reason then colon and then a dollar sign, whoops entered reason plus then a colon

03:15.200 --> 03:17.240
then a dollar sign and then the entered value,

03:17.240 --> 03:23.030
so I'm just constructing some text here where I have the reason and a colon then a dollar sign and after

03:23.030 --> 03:26.660
that the value which I simply assume to be in dollars.

03:26.660 --> 03:31.880
So now I'm setting this as a text to my new item and we can now reach out to the expenses list which

03:31.880 --> 03:40.460
we got access to here and call append child and we'll not do this again later in the course,

03:40.480 --> 03:44.150
then we will use Angular for all these DOM manipulations.

03:44.170 --> 03:50.320
I'm just doing it here with vanilla Javascript to give you an introduction, a feeling for just the Ionic

03:50.320 --> 03:52.300
elements and nothing else.

03:52.360 --> 04:00.460
So here, I append a child and that child is the new item we created. What should now happen is that we

04:00.460 --> 04:03.260
see that up here below our input here

04:03.400 --> 04:08.290
once we reload and we enter valid data again. And here it is,

04:08.290 --> 04:10.360
you see food 12.99

04:10.360 --> 04:14.830
show up below that and you can hit this multiple times to generate more of these items.

04:16.030 --> 04:21.310
Now this is how you can interact with Ionic components in your code

04:21.310 --> 04:28.450
and whilst we will not write this code again later, Angular will basically do this for us behind the

04:28.450 --> 04:29.260
scenes later,

04:29.560 --> 04:35.530
so it's super important to understand that Angular interacts with these web components, with the Ionic

04:35.530 --> 04:42.090
components just as it does with normal HTML elements it can render them to the DOM and so on. It's

04:42.100 --> 04:48.890
not Angular compiling these web components to some normal HTML and Javascript code, instead

04:49.060 --> 04:55.450
this is normal HTML and Javascript code that can be used directly with the DOM APIs.
