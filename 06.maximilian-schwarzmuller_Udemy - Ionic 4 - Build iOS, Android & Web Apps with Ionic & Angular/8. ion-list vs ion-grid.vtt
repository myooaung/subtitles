WEBVTT

00:02.250 --> 00:08.970
With the ion-grid covered, we now have two main components for structuring layout on that page.

00:09.060 --> 00:14.290
It might not have been obvious but ion-list is essentially fulfilling a similar purpose,

00:14.310 --> 00:17.310
it helps you layout items on a page.

00:17.310 --> 00:25.040
So where is the important difference and when should you use which? Ion-list has a very narrow purpose

00:25.040 --> 00:28.990
actually, it's there to help you render ion-item,

00:29.000 --> 00:36.870
so really this one component which in turn might hold any kind of content vertically from top to bottom.

00:37.190 --> 00:41.150
And of course especially in mobile apps but also on desktop apps,

00:41.180 --> 00:43.410
we work a lot with lists,

00:43.430 --> 00:46.130
lists are everywhere, in this course here,

00:46.130 --> 00:53.120
the curriculum is a list. So that use case of structuring content from top to bottom is pretty common

00:53.120 --> 00:59.440
and you actually have that quite a bit and whenever you have that scenario that you simply want to structure

00:59.450 --> 01:06.230
content from top to bottom and you don't need specific control across its width, then you can use an

01:06.230 --> 01:07.640
ion-list.

01:07.820 --> 01:11.090
You should only include ion-items in there, that is important,

01:11.090 --> 01:13.460
that is how the Ionic list just works,

01:13.520 --> 01:20.780
it is optimized for working with ion-items regarding the looks and so on and in general as I mentioned,

01:20.780 --> 01:25.560
use it for possibly scrollable vertical list content.

01:25.700 --> 01:32.120
Now what you can do though is you can wrap your list with your grid because the list always takes the

01:32.120 --> 01:38.750
full width of its container and if the container is the grid or a grid column to be precise, then you

01:38.750 --> 01:41.690
can control the sizing of the list through the grid

01:41.690 --> 01:43.160
and that takes us to the grid.

01:43.250 --> 01:51.680
It can render any content inside of ion-column and that's important because you always must have that

01:51.680 --> 01:59.260
structure of having an ion-row or multiple ion-rows in your ion-grid as a direct child or direct children

01:59.510 --> 02:06.440
and then inside of the ion-row, you always must have ion-columns, one or multiple ion-columns which

02:06.500 --> 02:08.090
are also the only direct

02:08.090 --> 02:16.040
children of ion-row. But inside of ion-column, you then can have any content you want, be that a div, a

02:16.040 --> 02:23.540
paragraph, a h1 tag or an ion-list or any other component or element, that is all fine.

02:23.540 --> 02:26.930
So the two can actually work together quite nicely,

02:26.930 --> 02:30.190
you can also have an ion-grid inside of ion-item

02:30.190 --> 02:37.340
inside of an ion-list for example and therefore, you basically use the grid whenever you have content

02:37.370 --> 02:43.400
that needs a more complex structure, where you want to have items sit next to each other in the same

02:43.400 --> 02:52.160
row or where you need to control the width or the positioning, the alignment of items.

02:52.310 --> 02:59.750
Whenever you have just top to bottom content, use an ion-list and if you need to set that width, you either

02:59.750 --> 03:04.330
do that directly through CSS or by wrapping it into an ion-grid.
