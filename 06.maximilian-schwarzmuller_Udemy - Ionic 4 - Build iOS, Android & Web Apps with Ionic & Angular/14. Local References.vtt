WEBVTT

00:02.050 --> 00:10.900
Well to get the input here, we can use a convenient feature added by Angular, we can add a local reference

00:11.230 --> 00:19.270
to any HTML element here by adding a hashtag and then some name of your choice, like person name

00:19.270 --> 00:23.750
but you can name this however you want and I'll name it person name el because it really is a reference to

00:23.750 --> 00:29.110
the element, not to the value in there but to the whole element because you could add this to any element,

00:29.230 --> 00:31.000
not just to inputs.

00:31.000 --> 00:36.270
Now this is a reference which is now only available in this template by default but that's no problem,

00:36.400 --> 00:44.060
we can pass it as an argument to our button and actually, I don't pass the whole element but I know it's

00:44.060 --> 00:51.790
an element on our input, so I can just pass person el.value here to access to value property

00:52.210 --> 00:59.200
of this element because this input element, the underlying Javascript object which is implicitly stored

00:59.200 --> 01:04.660
in here has a value property which holds the current value we entered.

01:04.660 --> 01:11.650
So now we know we pass the current value of this input to onCreatePerson and therefore back in the component,

01:11.710 --> 01:18.760
we can expect this as an argument, person name and again it's a good idea to define the type,

01:18.940 --> 01:22.240
so we add colon string because we know it will be a string,

01:22.270 --> 01:28.900
it's the value of an input element that always is a string. And then we could output created a person

01:29.050 --> 01:33.400
plus person name, to output that name as well.

01:33.430 --> 01:36.890
If you now save that and you go back to the application,

01:37.060 --> 01:42.310
if I enter Max here and click create, you see created a person Max.

01:42.310 --> 01:47.020
So passing the data works as well with the help of local references.
