WEBVTT

00:02.490 --> 00:10.620
So let's focus on the book about places that will mostly be you I state that now matters.

00:11.010 --> 00:12.900
And of course it's not really important for you.

00:12.900 --> 00:18.930
Did you always think about is that you I state or is it temporary state because that we're only my categories

00:18.970 --> 00:23.390
anyways it's just important that you think about where do I want to manage some data.

00:23.400 --> 00:25.360
Where does it have an impact.

00:25.380 --> 00:28.940
And of course filtering only has an impact on this component.

00:29.040 --> 00:34.090
So there is no need to manage the filtered places in the service.

00:34.140 --> 00:39.810
It should suffice if we managed them here in this component that of course is our discover page here

00:40.740 --> 00:43.400
and there we do have that on filter update method.

00:43.410 --> 00:51.500
Right now we only lock that shows in value there and that is either all or buckle as you can see on

00:51.500 --> 00:52.000
that value.

00:52.010 --> 00:57.820
Keep so let's take this and we do have our loaded places right.

00:57.830 --> 01:06.580
We do have our loaded places here now of course our loaded places are always the same but maybe the

01:06.580 --> 01:14.900
places we output should differ based on our selection so let's add a new property here for our local

01:14.900 --> 01:20.220
state management which will name relevant places.

01:20.240 --> 01:27.240
So yet another list of places here and now by default I'll set this relevant places equal to this load

01:27.240 --> 01:28.910
at places.

01:28.910 --> 01:37.740
And here I will slice my this relevant places list which of course right now is just the same as before.

01:37.920 --> 01:44.290
Into this cover page for the featured place I will get my first relevant

01:46.950 --> 01:52.710
places element here and of course also up here.

01:52.720 --> 02:01.150
So loaded places is now always replaced with relevant places and that means that right now if I save

02:01.150 --> 02:06.500
this it should still work as before and it does.

02:06.530 --> 02:10.770
Now let's change the relevant places when we change our filter.

02:10.880 --> 02:17.260
So here on filter update I will check if event detail value.

02:17.260 --> 02:19.740
Remember we do have a value property there.

02:19.840 --> 02:22.130
If that is equal to all.

02:22.510 --> 02:34.320
If it is then this relevant places we'll be equal to this loaded places and our listed loaded places

02:34.580 --> 02:36.080
they four year olds update.

02:36.090 --> 02:39.720
Based on that now in the Ellis case here.

02:39.720 --> 02:47.220
So if we for example chose buckle places then this relevant places will be equal to this load of places

02:47.250 --> 02:49.270
where I filter them down.

02:49.320 --> 02:56.130
So not all loaded places but only the ones where a specific condition is met and the condition is that

02:56.130 --> 03:02.670
the user I.D. off that place so if the creator of that place is not my user I.D. because I should not

03:02.670 --> 03:08.910
be able to book my own places know my own user idea is managed and the off service right here and through

03:08.910 --> 03:10.270
that getter.

03:10.320 --> 03:14.990
So we have to get access to the user I.D. here in the Discover bait page component.

03:15.270 --> 03:17.560
We can do that of course by injecting it.

03:17.580 --> 03:25.470
So here in the constructor of the Discover page component we inject the of service for dad make sure

03:25.470 --> 03:32.480
you add derived import puff up there to the off service file with the off serve as imported and injected

03:32.520 --> 03:35.740
here in my filter.

03:35.790 --> 03:40.800
We'll have a look at every place so dysfunctional execute on every place in the loaded places array

03:41.520 --> 03:47.120
and then I can check if the place I.D. is not equal to this of service user I.D..

03:47.130 --> 03:49.450
So if it's not equal to my own user I.D..

03:49.530 --> 03:54.780
And if they're not equal then I know displays was not created by me and therefore it's bookmobile and

03:54.780 --> 04:02.990
hence relevant with that of course all to make sure that you update listed loaded places here to match

04:02.990 --> 04:05.200
your relevant places.

04:05.630 --> 04:08.390
And with that What's one problem.

04:08.390 --> 04:12.830
One important thing of course we don't want to compare the place I.D. but the user idea of that place

04:12.890 --> 04:14.600
with our own user I.D..

04:14.600 --> 04:18.050
So with that now we're comparing the right things and now it is reloads.

04:18.110 --> 04:23.090
We see all the places here but on bookmobile places I get an error which is a good sign here actually

04:23.240 --> 04:28.860
because it means we tried to access data for a place that probably doesn't exist.

04:28.940 --> 04:33.050
And the reason simply is that right now I got no places that would not be created by me.

04:33.390 --> 04:39.110
If we go to the place service real quick and for one place we change that dummy I.D. to ABC which happens

04:39.110 --> 04:46.280
to be my current dummy user I.D. as well to X Y set then we should see that if this reloads and we go

04:46.280 --> 04:49.300
from all places to book able places.

04:49.430 --> 04:55.010
Well only Manhattan mentioned states because that is the place for which I just changed the idea.

04:56.210 --> 05:00.950
I'll change this back because of course we should also handle that error though because we definitely

05:00.950 --> 05:10.240
can have circumstances where we have no bookmobile place and they offer let's go into our discover component

05:10.270 --> 05:12.180
there in a template.

05:12.200 --> 05:16.660
When I try to output data here in my grid where I output that card and so on.

05:17.140 --> 05:22.960
Well in the end we can add the engine block and make sure that we only output data here if relevant

05:22.960 --> 05:31.140
places length is greater than 0 because otherwise there will be nothing to load and display.

05:31.140 --> 05:36.600
So with Dad if we save dad and we go to book a it's now empty we're not getting an error.

05:36.690 --> 05:43.620
Of course some message would be nice and therefore we could render an alternative we could add another

05:43.710 --> 05:48.490
iron grid up there with the number ion row here and then there and number.

05:48.630 --> 05:56.680
Irene Cullen with the same dimensions as this column and also centered text and here we can see we all

05:56.680 --> 06:06.860
put there are no bankable places right now please come back later of course that's right and not with

06:08.280 --> 06:16.170
here I will add the check with Angie if we're not on the column but on the entire grid let's say Angie

06:16.230 --> 06:27.890
if relevant places length smaller or equal to zero or maybe if relevant places somehow isn't set so

06:27.890 --> 06:31.160
if it's not relevant places then I also want to show this.

06:31.190 --> 06:38.990
So either if relevant places somehow is undefined or if it is defined by its length is equal to zero

06:38.990 --> 06:43.550
should be enough but doesn't hurt to have does extra check if that's the case and then we should show

06:43.550 --> 06:44.550
this text.

06:44.600 --> 06:51.140
So let's see if that works if this reloads would go to book of all places here is our text now and here

06:51.140 --> 06:52.150
are all places.

06:52.520 --> 06:57.920
So there's no works and this is another example of local component specific state for our different

06:57.920 --> 06:58.700
filters here.
