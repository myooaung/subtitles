WEBVTT

00:02.290 --> 00:09.590
For the men and max values on the day times I will use data from the selected place we have theater.

00:09.610 --> 00:13.310
So back in the template I can choose.

00:13.460 --> 00:14.920
Select the place.

00:15.050 --> 00:21.100
And now here we have no dates in there because right now our model isn't set up to hold any dates for

00:21.100 --> 00:28.420
places so that it's to change and I'll therefore go to my place model here and I will add new fields

00:28.930 --> 00:38.080
a public field available from which will be a date and a public field away lable Q which should be a

00:38.080 --> 00:40.270
date is a date not a date.

00:40.270 --> 00:40.690
Q

00:43.890 --> 00:49.170
When we save that of course our parts of our application will break namely the parts where we do use

00:49.260 --> 00:57.960
these models thus far and that is our place as service in there we do create our places and currently

00:58.050 --> 01:01.170
without any dates so time to change that.

01:01.630 --> 01:03.520
For that does here is our starting date.

01:03.530 --> 01:08.930
I'll add a new date and like this it would take the current timestamp which we could do but all hard

01:08.930 --> 01:12.280
code a different date in here so that it's based on that.

01:12.560 --> 01:20.420
And then let's say we use the first January 2019 as a starting date and as an ending date I use the

01:21.050 --> 01:23.740
twist at December thirty first.

01:23.750 --> 01:30.460
Now I'll do that on all these places and later of course we'll use our own data there.

01:30.470 --> 01:37.540
So now we have a valid page again or a valid application again back to day create bookings page.

01:37.550 --> 01:39.370
We can now bind min and max.

01:39.470 --> 01:46.460
Here we have select the place away lable from and Max here is select and place away label Q And on the

01:46.460 --> 01:51.650
second day time we already bound minimum to the selected date and the first input.

01:51.680 --> 01:59.900
So here I'll only bind Max to the selected place away lable to date with that.

01:59.910 --> 02:11.600
If this no saves and reloads our application and we try to book displays here we actually get an error

02:11.600 --> 02:15.260
when I try to pick a date.

02:15.280 --> 02:21.520
Now the fixes that are the problem is that we're passing in a javascript Date object is actually not

02:21.520 --> 02:22.830
what it wants here.

02:22.840 --> 02:29.980
Instead we should call Q ISO string here to convert this to string following the ISO norm.

02:29.980 --> 02:35.020
We do this here on both men and Max and all the down there on Max don't need to do it here on the main

02:35.020 --> 02:41.100
binding because the value we get back here from the first iron day time will already be such a string.

02:41.140 --> 02:46.710
So now let's wait for this to reload click book select date.

02:46.960 --> 02:52.560
And now here we can open that date picker and indeed you see it starts at January 1st 1919.

02:52.570 --> 03:00.730
We can pick any every year and it ends in December thirty first and if I now would pick let's say November

03:00.730 --> 03:07.900
22nd or October 22nd here then on the second day time I start on that date and I can't pick any date

03:07.900 --> 03:08.920
prior to that.

03:08.920 --> 03:13.010
So that's pretty neat and exactly the behavior we want now.

03:13.030 --> 03:19.840
What about that scenario where we pre fill this with some randomly selected dates though regarding the

03:19.840 --> 03:22.360
randomly selected dates.

03:22.390 --> 03:30.310
I'll first of all go back to my Discover place detail page because there we actually opened that action

03:30.310 --> 03:36.170
sheet here in our typescript file where we open the booking modal in select or random mode.

03:36.220 --> 03:41.440
Now first of all I need to forward that information into my modal so that I can initialize the form

03:41.440 --> 03:42.960
differently there.

03:43.060 --> 03:49.620
So in component props I will not just forward to select the place but also the selected mode let's say.

03:49.780 --> 03:52.890
And that will just be the mode I'm getting here as an argument.

03:52.900 --> 03:56.170
So a string which is either select or random.

03:56.170 --> 04:06.240
So inside of my create booking component here I will now not just expect that select to place input

04:06.660 --> 04:15.450
but also that selected mode input which is that string either select or random because that is what

04:15.450 --> 04:19.930
I am forwarding from the action sheet into the model and now based on that.

04:20.000 --> 04:27.420
An engine in it we can generate starting dates or a starting and ending date that will pre fill into

04:27.420 --> 04:30.310
these daytime inputs for that year.

04:30.360 --> 04:37.500
All first of all find out which General date range I may use based on the place we got.

04:37.620 --> 04:38.160
So here it is.

04:38.160 --> 04:45.300
I'll add a away lable from constant here which constructs a new Date object because here I now need

04:45.300 --> 04:56.170
to work with date objects not with strings where I access this select the place available from now I'll

04:56.180 --> 05:00.850
duplicate this to also create a constant for a way lable too.

05:01.170 --> 05:09.560
And now I'll pick a random range between that starting and end date but only if this selected mode is

05:09.560 --> 05:17.300
equal to random if it is select or anything else then I certainly don't want to preselect dates.

05:17.570 --> 05:22.210
So the next thing we need is two new properties up here.

05:22.250 --> 05:30.990
One is the start date which is a date object and one is the end date which is a date object or actually

05:31.500 --> 05:35.670
both can be strings because we need to pass a string into our template anyways.

05:36.950 --> 05:42.110
So now here in this if statement I want to generate these two strings and for that I'll bind this start

05:42.110 --> 05:46.370
date equal to and now I will access a way lable from.

05:46.370 --> 05:49.970
So this constant here and there call get time.

05:49.970 --> 05:50.950
This is a method.

05:51.080 --> 05:58.340
Every date object hasn't javascript that gives me this state as milliseconds since the beginning of

05:58.340 --> 06:03.770
time which in JavaScript world like in most our programming languages is at.

06:03.770 --> 06:06.490
January 1st 1970.

06:06.500 --> 06:13.490
So I get the amount of milliseconds that passed since then and now there I want to add a random amount

06:13.490 --> 06:18.830
of milliseconds to choose my starting date which is not the starting date of the place but any starting

06:18.830 --> 06:20.900
date after debt starting date.

06:21.050 --> 06:32.170
So I'll use math random here to generate a random number between 0 and 1 and multiply that random number

06:32.770 --> 06:33.750
with.

06:33.790 --> 06:37.250
And now I need the maximum to up to which I may go.

06:37.270 --> 06:40.410
So I weigh a too and get my time there.

06:40.410 --> 06:46.140
So get the milli second stare.

06:46.310 --> 06:48.530
Put this back into brackets here.

06:48.530 --> 06:50.180
So a well-built you get time.

06:50.270 --> 06:53.060
And there I now deduct at least one week.

06:53.060 --> 06:53.930
Why.

06:53.930 --> 06:59.240
Because I basically want to start at the lowest date I can use for the place and go all the way up to

06:59.240 --> 06:59.840
the highest.

06:59.900 --> 07:06.170
But I want to leave for at least one week of away little time we can book because this is the starting

07:06.170 --> 07:06.410
date.

07:06.410 --> 07:12.050
I also will need to generate an end date and dead end date will obviously take the start date into account

07:12.410 --> 07:17.050
and therefore there should be some days left after do you randomly generated start date.

07:17.080 --> 07:21.140
So from the maximum and date I'll deduct a week.

07:21.140 --> 07:27.390
And now that will be a week in milliseconds so seven days times 24 hours per day.

07:27.430 --> 07:32.470
Time's 60 minutes per hour time's 60 seconds per minute.

07:32.540 --> 07:35.380
Time's 1000 milliseconds per second.

07:35.390 --> 07:41.300
This is the conversion we have to do here to deduct one week from our end date in milliseconds

07:44.310 --> 07:49.210
notice would still be a large number it would be the amount of milliseconds since the beginning of time.

07:49.310 --> 07:55.940
I need the amount of milliseconds since the starting date and therefore I will now deduct a whale from

07:56.570 --> 07:59.330
get time here again.

07:59.330 --> 08:01.100
And now does this do you finished expression.

08:01.100 --> 08:08.890
I want here but the problem is what I get here as a result will just be a value in milliseconds.

08:08.930 --> 08:15.500
Now I will convert this back into a date by wrapping it with the new date constructor so I pass this

08:15.500 --> 08:22.510
expression into new date here and now I get a date object that actually will be a valid timestamp.

08:22.610 --> 08:26.360
No start date should be a string though which is no problem.

08:26.360 --> 08:31.040
I will simply call CU ISO string here at the end and that's it.

08:31.070 --> 08:33.400
That's a randomly generated date.

08:33.470 --> 08:38.300
Taking the starting date off that offered place and the ending date into account.

08:38.300 --> 08:45.050
Now we can also set the end date here and the end date will of course be based on our start date.

08:45.050 --> 08:47.210
Now that start date is a string year.

08:47.300 --> 08:54.530
We need a date object to work with those all first of all wrap this start date which we calculated here

08:54.950 --> 09:01.510
into the new date constructor to get a date object again and then there I will call get time to again

09:01.540 --> 09:04.480
get the milliseconds for the start date.

09:04.480 --> 09:09.280
We calculated here which is not to started off the place but our starting date for that random period

09:10.090 --> 09:18.670
plus and now here MOF random again times and now in brackets I will use my start date which I generated

09:18.670 --> 09:23.710
up here not the place start date of course but the start date we already picked.

09:23.830 --> 09:26.410
And since this is a string I'll wrap it in you date.

09:26.410 --> 09:31.870
So this start date and then on that date object I can call get time because I need the milliseconds

09:31.870 --> 09:39.790
here and then to these milliseconds which are since the beginning of time I will add let's say 6 days

09:40.270 --> 09:42.030
as our range.

09:42.040 --> 09:53.660
I want to add as a maximum so six times 24 times 60 times 60 times 1000 and then deduct new Date.

09:53.830 --> 10:01.590
This start date and then call get time to not get a millisecond value since the beginning of time.

10:01.600 --> 10:06.880
But since our start date here and this year is the time between our start date and the beginning of

10:06.880 --> 10:15.230
time so by deducting that difference we get just the difference between our start date and now.

10:15.260 --> 10:17.810
So this is my date.

10:17.810 --> 10:24.290
This however would be a number in milliseconds so let me wrap that into a new date.

10:24.680 --> 10:32.900
Call here and since we just string call to ISO string thereafter and this now is my end date calculated

10:32.900 --> 10:38.360
based on that start date with that let's implement both in the template so in the template I can now

10:38.360 --> 10:44.840
bind energy model on the two date time inputs on the first energy model here on the first date time

10:44.840 --> 10:52.940
input I'll bind it to starts date and this Iva is my string my generated start date or it is undefined

10:52.970 --> 10:56.900
if we're not in a random mode and if it's undefined then this is OK.

10:56.930 --> 11:02.510
This picker will then just work as it did before where we also didn't set a default value but if it

11:02.510 --> 11:08.390
is dead start date Isaac string that was randomly generated then it should indeed start at that date

11:09.040 --> 11:16.100
and now for that second date time I'll bind this to end date therefore with the same logic let's now

11:16.100 --> 11:19.130
save that and see whether it works or not.

11:19.130 --> 11:27.290
So back to our page here if we open that modal first of all in the normal non-random date I can use

11:27.290 --> 11:29.660
these pictures just as I could before.

11:29.660 --> 11:31.040
So that looks good.

11:31.280 --> 11:37.870
And now if I try booking that in the random mode here I indeed see that there is a random date selected.

11:38.030 --> 11:39.800
So let's try that again.

11:40.490 --> 11:42.530
Yeah looks pretty good to me.
