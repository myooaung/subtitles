WEBVTT

00:02.440 --> 00:04.270
We're nearing the end of this section,

00:04.270 --> 00:09.910
now let's do something which I actually need on this application. On this discover page here,

00:09.910 --> 00:16.810
I want to have two types of places I can discover, one are all the places including the ones I'm offering

00:16.810 --> 00:19.300
and of course you could also simply filter those out

00:19.300 --> 00:25.000
but I want to introduce a new component as well, a component that allows us to switch between two different

00:25.000 --> 00:31.540
modes here. A mode for viewing all places and a mode for viewing actual bookable places, 

00:31.540 --> 00:33.770
so places not offered by us.

00:33.970 --> 00:39.640
Now we could use tabs but tabs should be used for navigating between different pages.

00:39.640 --> 00:44.790
I don't want to load different pages, I in the end just want to set a different filter here.

00:44.800 --> 00:48.310
Now how could we do that? For that on the discover page,

00:48.310 --> 00:54.760
we can add a new component at the very top of this page, outside of the ion-grid even

00:54.780 --> 01:02.570
but you could also add it inside depending on the styling you want and that is the ion-segment component.

01:03.170 --> 01:10.100
The ion-segment component allows you to add so-called segmented buttons which means buttons where only

01:10.100 --> 01:17.000
one button of the set of buttons can be active at a time. In there, you do indeed add the ion-segment

01:17.000 --> 01:24.650
button components and these buttons can get icons, labels, so basically how you style regular buttons

01:24.650 --> 01:31.540
or the content you can pass into regular buttons and I'll have all places on one button and on the other

01:31.550 --> 01:33.970
button, bookable places

01:33.980 --> 01:34.460
let's say

01:37.980 --> 01:44.580
Now important, to these buttons you can assign a value property which will not be visible but when you

01:44.580 --> 01:50.910
later select a button and listen to that event, that value property will be passed with the event so

01:50.910 --> 01:53.990
that in your code, you can find out which button was pressed,

01:54.000 --> 01:56.060
so like an identifier basically.

01:56.130 --> 01:58.370
So here, I'll pass all

01:58.380 --> 02:02.170
and here as a value, I'll pass bookable.

02:02.220 --> 02:08.430
You can also set the checked attribute but only one button at a time can be checked and that will basically

02:08.430 --> 02:12.800
be the pre-selected button which is selected at the start.

02:12.840 --> 02:20.550
Now in on the ion-segment, you can listen to changes in the selection and you do that with the ionChange

02:20.550 --> 02:21.440
event.

02:21.450 --> 02:27.840
This is obviously not a standard event but it is an event emitted by Ionic through its components,

02:27.840 --> 02:35.260
so Ionic will emit this event whenever a new selection is made and then you can for example run 

02:35.260 --> 02:37.980
onFilterUpdate, the name of the method is up to you

02:37.980 --> 02:44.850
and important, forward the default event object you get here by Ionic and you do that in Angular by

02:44.850 --> 02:51.540
using the $event variable here which is made available by Angular to hold the event object

02:51.540 --> 03:00.120
you're getting. And all you have to do now is in onFilterUpdate, in this component page, you can listen

03:00.120 --> 03:08.200
to that event and then react. So there, you'll get your event which is of type custom event and custom

03:08.200 --> 03:10.110
event does not need to be imported,

03:10.120 --> 03:12.690
it's a default web feature,

03:12.880 --> 03:19.810
it's a so-called generic type which means you can also pass some extra data about which customer event

03:19.840 --> 03:22.720
data this custom event object will hold

03:22.720 --> 03:29.800
and in this case, this would be the segment change event detail object which now needs to be imported

03:29.920 --> 03:31.440
from @ionic/core.

03:31.450 --> 03:39.190
Now it is optional to import this but with this type assignment, you get better auto-completion.

03:39.220 --> 03:46.390
So this is the event we'll be getting here and inside of this onFilterUpdate, I'll simply log event

03:46.870 --> 03:51.820
and then detail is a property that holds the detailed event data for this event,

03:51.820 --> 03:53.880
so that should be that segment change event

03:53.890 --> 04:02.580
detail data. And now if we go back, we see these two tabs here at the top and if we switch to an iPhone,

04:02.580 --> 04:07.370
we also see that as soon as we reload, this has the iPhone look

04:07.540 --> 04:09.980
and now let me open the console log here,

04:10.080 --> 04:15.900
you see we get this object value all right at the start because I chose checked for the first segment

04:16.290 --> 04:24.790
and if we now switch, we see this now gets emitted here, value bookable. So these are the values you

04:24.790 --> 04:31.200
entered in your HTML code and this will become important later when we actually filter our data

04:31.270 --> 04:37.600
or when we load different data depending on our selection, to either view all places or only the places

04:37.600 --> 04:38.770
we can actually book.
