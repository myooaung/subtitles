WEBVTT

00:02.010 --> 00:05.310
We finished sign up process and The Last Lecture.

00:05.310 --> 00:07.550
Now let's work on the sign in process.

00:07.860 --> 00:11.660
I'll start in the off service again and here I'll add a new method.

00:11.790 --> 00:18.050
Sign in here I also expect to get a string and a password because these are the these are the credentials

00:18.060 --> 00:24.130
we're going to sign in with and then I'll again return fire firebase off call.

00:24.300 --> 00:30.170
And here it's not create user with e-mail and password but sign in with email and password.

00:30.180 --> 00:35.580
So also very descriptive descriptive method name and here has to email and password.

00:35.580 --> 00:42.150
And then this will again behind the scenes send HTP request to firebase containing our data doing some

00:42.150 --> 00:48.090
validation on the firebase servers potentially sending back a success message or an error handling this

00:48.090 --> 00:48.590
error.

00:48.630 --> 00:54.840
And in the end this gives us a promise where we can listen to everready success case with then or a

00:54.840 --> 00:58.020
potential error in the catch method.

00:58.020 --> 01:01.690
Now with this let's go to the sign in Meffert and here it on sign in.

01:01.740 --> 01:03.250
Of course I want to use the service.

01:03.270 --> 01:07.500
So let's inject it let's inject our off service year

01:11.370 --> 01:15.030
and with this service and check that I'm going to remove Descanso lock.

01:15.090 --> 01:22.350
And again I'll reach out to be of service to the sign in Mefford and then pass on the e-mail and the

01:23.160 --> 01:23.760
password.

01:23.760 --> 01:32.070
We entered and again have a method for the success case and catch method for any errors you might get.

01:32.070 --> 01:34.130
Indeed then method here.

01:35.200 --> 01:37.990
I know I get some data in a success case here.

01:37.990 --> 01:43.790
I for now simply want to lock the state again before we will start refining this method as we did for

01:43.790 --> 01:45.210
the sign up method.

01:45.470 --> 01:47.990
Well and here I know I'll get an error.

01:47.990 --> 01:56.900
So let's lock this error to the console for now with this in place we get all we need for a basic functionality

01:56.900 --> 01:58.210
to see if this works.

01:58.310 --> 02:00.680
So let's now go back to our running application.

02:00.680 --> 02:06.660
Click on sign in and let me try signing in with the correct credentials here.

02:06.680 --> 02:13.910
So the ones I did use to create a new user does against the success case is cryptic object.

02:13.910 --> 02:17.950
Now let's try a valid email address one we haven't created.

02:17.990 --> 02:21.610
Now we see an error that the user is not found.

02:21.620 --> 02:24.270
This looks really great to me.

02:24.440 --> 02:31.500
Now with that in place let's again dive into refining the sign in page and add some loader to it.

02:31.520 --> 02:32.350
And so on
