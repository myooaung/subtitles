WEBVTT

00:02.560 --> 00:08.790
I'm bringing ionic Cerf back up because the next steps can be tested in the browser and there.

00:08.810 --> 00:12.300
I first of all want to work on the styling for Dad.

00:12.310 --> 00:19.080
Let me go to my location picker and I'll copy the styles and set up there and move them into my image

00:19.090 --> 00:20.430
picker SC is as follows.

00:20.560 --> 00:25.880
And yes as I mentioned you could definitely refactor the shell around our picker logic.

00:25.900 --> 00:32.020
So does container because I'll keep that picker style just as I set it up here for the location picker

00:32.740 --> 00:37.570
and location image will alter state of weight is I'll rename it from location image to just the image

00:37.600 --> 00:41.480
though because that is the name I'm using here in my image.

00:41.480 --> 00:50.960
Pick our template so let's wait for this to reload here in the browser yep that looks better and now

00:50.960 --> 00:59.440
let's tackle this error next now regarding that error in the browser I mentioned that you can't a of

00:59.440 --> 01:05.140
course prevent a fallback but B we can also install a package that makes this camera work here.

01:05.470 --> 01:09.800
I want to start with the fallback though because that would be a valid strategy as well.

01:09.850 --> 01:11.550
Now how could that work.

01:11.590 --> 01:17.890
Well we probably want to find out if we're running in a browser or on a platform where it's likely that

01:17.890 --> 01:25.870
we're not that will not be able to use the camera and that we can find out in which platform we're running

01:25.870 --> 01:30.360
with the platform service let's check platform here.

01:30.370 --> 01:36.880
Platform is imported from ionic angular and with that injected in the end zone in it here first of all

01:36.880 --> 01:46.600
when I get a feeling for when what is true so let's check platform mobile when this is true and I will

01:46.600 --> 01:53.590
do it for output mobile here so that we can see which result which result of this check here refers

01:53.590 --> 02:01.070
to which while check property I will check mobile I will check hybrid.

02:01.210 --> 02:12.400
I will also check Io s here and Android and I also want to check desktop

02:17.230 --> 02:23.070
with all these checks added an NGO in it let's wait for it to restart.

02:23.070 --> 02:24.530
Let's see what we get here.

02:24.530 --> 02:30.510
And we should get this as soon as this new offer page loads and we see actually here surprisingly mobile

02:30.510 --> 02:31.160
is true.

02:31.170 --> 02:33.660
And that is why I wanted to show this to you.

02:33.660 --> 02:37.010
You might have expected that mobile is false here in the browser.

02:37.020 --> 02:39.840
Since this looks like a mobile view here.

02:39.840 --> 02:47.150
But I'm still on my normal Mac OS browser but instead it is true because it is emulator here suffices

02:47.160 --> 02:50.720
to send a signal that we're running does in Mobile mode.

02:50.760 --> 02:55.930
That also means that we can't take this as a signal for whether we'll have a camera or not.

02:56.010 --> 02:59.900
We see that hybrid is false here though so that's interesting.

02:59.940 --> 03:07.470
IOW is true because I'm running this on my OS simulator here and therefore Android is false and desktop.

03:07.620 --> 03:10.440
That's all the interesting is also false here.

03:10.440 --> 03:15.900
So a hybrid seems to be an indicator for whether we're really running this on a native mobile device

03:15.900 --> 03:17.130
or not.

03:17.280 --> 03:24.270
If I don't preview this in mobile view and a now reload we can also see that we might want to position

03:24.270 --> 03:27.410
these pictures differently but that's not the main thing.

03:27.420 --> 03:31.440
The interesting thing here is we see mobile is now false.

03:31.470 --> 03:36.150
Hybrid is still false I guess and or is false but desktop is now true.

03:36.150 --> 03:42.210
So desktop is really just true of reviewing this in a non emulated mode which would probably be the

03:42.210 --> 03:48.120
default for your wizards from your desktop devices but you can't rely on this.

03:48.120 --> 03:52.110
That's my main thing I want to emphasize here.

03:52.190 --> 03:57.530
So with that we know how to read that.

03:57.530 --> 04:01.770
Now how does this look like on our emulators for dad of course.

04:01.940 --> 04:09.800
We want to run our app on Android and on ISIS to get a feeling for that or I will actually just run

04:09.800 --> 04:15.320
it on Android because the only difference will be that IOW check and you can rely on that being true

04:15.530 --> 04:16.820
on an ISIS device.

04:16.820 --> 04:22.250
But we want to see what happens to mobile and hybrid and so on when we run this on a real native mobile

04:22.250 --> 04:25.820
device here it's starting up on Android

04:29.020 --> 04:34.870
now let's go to offers and then a new off her page here and to see the console log output you can go

04:34.870 --> 04:41.290
to run year in Android Studio does run tab and here you will see their log messages.

04:41.290 --> 04:45.970
These are log messages I'm interested in and what we can see here is dead.

04:45.970 --> 04:49.260
Mobile is true and hybrid is also true here.

04:49.270 --> 04:55.550
And remember that was false when we previewed this in Mobile mode on a desktop device.

04:55.870 --> 04:58.210
Never we can use this as an indicator.
