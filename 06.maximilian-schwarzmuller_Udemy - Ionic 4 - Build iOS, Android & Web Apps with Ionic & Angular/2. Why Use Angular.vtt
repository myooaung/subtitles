WEBVTT

00:02.270 --> 00:04.550
So why would we use Angular?

00:04.640 --> 00:07.940
I did briefly touch on this in the last course section already

00:07.940 --> 00:13.150
and I'll just repeat it here in case you skipped that, otherwise you can skip this lecture here.

00:13.220 --> 00:20.360
So we use Angular because when we build more complex apps where we have more and more complex logic

00:20.360 --> 00:27.350
in our Javascript code, we don't want to focus on nitty-gritty details like updating the DOM correctly,

00:27.350 --> 00:29.930
managing our application state correctly,

00:29.960 --> 00:34.510
these things are hard and they are annoying and we don't want to care about them,

00:34.510 --> 00:38.280
we want to focus on the core logic that drives our app.

00:38.420 --> 00:44.000
So all these things which will be hard, like handling the complex logic, where we would have to reinvent

00:44.030 --> 00:50.000
the wheel over and over again and where we might introduce bugs or state management where we could

00:50.000 --> 00:56.300
get an unpredictably behaving user interface if we mess it up because we don't update one part of the

00:56.300 --> 01:03.380
app correctly when something changes in another part or things like routing where we might have some

01:03.380 --> 01:10.340
form of switching between pages but it doesn't handle advanced use cases like protecting certain routes

01:10.340 --> 01:13.130
from unauthenticated access or anything like that,

01:13.130 --> 01:18.680
these are things which are relatively hard to implement on our own and hence we use frameworks like

01:18.680 --> 01:19.360
Angular

01:19.400 --> 01:25.460
and of course we could use Raect or Vue here but this is an @ionic/angular course where Angular helps

01:25.460 --> 01:27.330
us with solving these problems.

01:27.410 --> 01:33.050
It gives us clearly defined rules on how we build our apps with components and directives and it takes

01:33.050 --> 01:39.800
care about the actual DOM rendering so that we can just focus on the logic that changes our state, our

01:39.800 --> 01:47.060
data, that triggers a DOM update in the end. It gives us services and other means of transporting data

01:47.060 --> 01:53.210
from A to B, from component to component and it also helps us with routing where we can conveniently

01:53.210 --> 01:59.450
pass data around to, where we got lazy loading, where we can add authentication guards and all this fun

01:59.450 --> 02:00.620
stuff.

02:00.650 --> 02:07.910
This is why we would use Angular instead of just Ionic, for very very simple apps, you'll not need it

02:08.180 --> 02:14.750
and you will also always find solutions around Angular if you don't want to use it, other libraries or

02:14.750 --> 02:16.310
frameworks for example.

02:16.310 --> 02:20.530
But this is an @ionic/angular course, Angular is an amazing framework,

02:20.630 --> 02:27.080
it can be used to build extremely powerful and fast and reactive web applications and therefore, it's

02:27.080 --> 02:29.400
the perfect fit here for Ionic

02:29.480 --> 02:36.680
where we want to also build a fast, reactive web and then also native mobile application.
