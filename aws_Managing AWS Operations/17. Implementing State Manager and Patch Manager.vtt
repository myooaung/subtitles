WEBVTT
1
00:00:00.980 --> 00:00:01.470
[Autogenerated] all right.

2
00:00:01.470 --> 00:00:02.520
Hopefully you're hanging in.

3
00:00:02.520 --> 00:00:06.810
There were just now gonna finish up this last bit of services

4
00:00:06.810 --> 00:00:10.610
and capabilities under instances and notes.

5
00:00:10.610 --> 00:00:14.070
The first capability is state manager Now.

6
00:00:14.070 --> 00:00:17.640
We kind of looked at this a little bit previously,

7
00:00:17.640 --> 00:00:20.450
but let's talk about it a little bit more.

8
00:00:20.450 --> 00:00:24.760
State Manager allows us to have secure and scalable

9
00:00:24.760 --> 00:00:30.020
configuration to automate processes revolving around E.

10
00:00:30.020 --> 00:00:33.940
C two and are managed instances on Prem.

11
00:00:33.940 --> 00:00:38.500
So let's just go ahead and walk through creating an association.

12
00:00:38.500 --> 00:00:40.140
We would give it a name.

13
00:00:40.140 --> 00:00:42.840
We would specify a document.

14
00:00:42.840 --> 00:00:47.840
So what this does is it allows us to specify what we want to do.

15
00:00:47.840 --> 00:00:51.300
So let's just say we want to go ahead and apply Sum's Chef

16
00:00:51.300 --> 00:00:54.990
recipes whenever this association occurs.

17
00:00:54.990 --> 00:00:58.510
So I choose apply chef recipes.

18
00:00:58.510 --> 00:01:02.420
We specify a source type, so get hub or s three.

19
00:01:02.420 --> 00:01:06.570
In this case, we specify the source info.

20
00:01:06.570 --> 00:01:09.040
So what file are we looking for?

21
00:01:09.040 --> 00:01:11.760
And then these air all specific to chef,

22
00:01:11.760 --> 00:01:14.990
So I'm not going to dive into them too much.

23
00:01:14.990 --> 00:01:18.910
But if I go back and I select a different document for us to use,

24
00:01:18.910 --> 00:01:21.600
like let's say we want to configure Docker.

25
00:01:21.600 --> 00:01:25.020
On the instance you'll see the parameters change.

26
00:01:25.020 --> 00:01:30.070
So now we can install or uninstall docker and we can specify are targets.

27
00:01:30.070 --> 00:01:34.540
So hey, I want to go ahead and install Docker on all prod.

28
00:01:34.540 --> 00:01:37.450
Resource is in this prod resource group.

29
00:01:37.450 --> 00:01:43.110
We could specify a schedule or we can just run it once,

30
00:01:43.110 --> 00:01:45.680
and the schedule is similar to what you've seen.

31
00:01:45.680 --> 00:01:49.500
There's Cron, theres rate, and then there's expression.

32
00:01:49.500 --> 00:01:52.640
So what I'll do is I'll do no schedule.

33
00:01:52.640 --> 00:01:55.780
We can specify our compliance severity levels.

34
00:01:55.780 --> 00:02:01.650
So if this doesn't work, what category under compliance with this show up at?

35
00:02:01.650 --> 00:02:04.500
So let's say I want to make it critical.

36
00:02:04.500 --> 00:02:10.800
We can specify a Ray control once again and we can write toe S three as needed.

37
00:02:10.800 --> 00:02:14.710
So what I would do is I would create association and you

38
00:02:14.710 --> 00:02:17.180
can see it's actually already done.

39
00:02:17.180 --> 00:02:18.840
It's successful.

40
00:02:18.840 --> 00:02:22.890
We can see our target values are propagated here,

41
00:02:22.890 --> 00:02:24.910
and we've already looked at some of these taps,

42
00:02:24.910 --> 00:02:27.060
so I'm not going to go through these again.

43
00:02:27.060 --> 00:02:32.810
But what this allows us to do is create a reusable association so we

44
00:02:32.810 --> 00:02:39.520
can perform certain actions leveraging AWS Systems manager documents to

45
00:02:39.520 --> 00:02:44.960
perform actions on those e C two instances or are hybrid on Prem

46
00:02:44.960 --> 00:02:50.410
instances now building off of that, Let's dive into Patch Manager.

47
00:02:50.410 --> 00:02:55.500
This is a very popular service, and it's used heavily by operations.

48
00:02:55.500 --> 00:03:01.920
Teams Patch Manager allows us to automate are patching processes on our

49
00:03:01.920 --> 00:03:06.850
managed instances so weaken do so we can essentially offload,

50
00:03:06.850 --> 00:03:11.940
are patching procedures to a W S systems manager,

51
00:03:11.940 --> 00:03:14.140
and we can automate it from there.

52
00:03:14.140 --> 00:03:18.060
Now what this does is it uses patch baselines and a patch

53
00:03:18.060 --> 00:03:23.060
baseline is essentially a set of rules for approvals of

54
00:03:23.060 --> 00:03:25.430
patches that you want to apply.

55
00:03:25.430 --> 00:03:31.820
You'll see that AWS provides several defaults that you can use.

56
00:03:31.820 --> 00:03:36.540
So if I just open up this Amazon Lennox to default patch baseline,

57
00:03:36.540 --> 00:03:38.580
we can see these details.

58
00:03:38.580 --> 00:03:42.830
So the description of it in the different settings and

59
00:03:42.830 --> 00:03:44.410
then we have our approval rules.

60
00:03:44.410 --> 00:03:48.340
So this is where we can get a little bit more specific.

61
00:03:48.340 --> 00:03:52.890
So for patches that are security based and critical or important,

62
00:03:52.890 --> 00:03:58.540
we wanna wait seven days and then we'll auto approve those patches for install.

63
00:03:58.540 --> 00:04:02.990
And then, if it's a bug fix with any severity level,

64
00:04:02.990 --> 00:04:08.340
I want to wait seven days a swell Now we can also specify an exception,

65
00:04:08.340 --> 00:04:10.090
which they don't do here.

66
00:04:10.090 --> 00:04:13.920
And they also don't specify a secondary patch source.

67
00:04:13.920 --> 00:04:18.350
So let's actually go back and let's create a patch baseline of our own.

68
00:04:18.350 --> 00:04:21.140
Let me go in here and type in plural site.

69
00:04:21.140 --> 00:04:23.700
We specify the operating system,

70
00:04:23.700 --> 00:04:26.440
and you can see there are several different types.

71
00:04:26.440 --> 00:04:28.810
I'm just gonna choose what I have running,

72
00:04:28.810 --> 00:04:32.000
and we can set this as the default for Amazon Lennix.

73
00:04:32.000 --> 00:04:34.940
Two instances Now they give you a warning saying,

74
00:04:34.940 --> 00:04:39.840
Hey, really make sure you understand what's going on before doing this,

75
00:04:39.840 --> 00:04:44.230
because Amazon uses their own defaults that work in our

76
00:04:44.230 --> 00:04:46.920
controlled and guaranteed by them.

77
00:04:46.920 --> 00:04:48.300
But if I wanted to,

78
00:04:48.300 --> 00:04:52.720
I could set my own and keep this that if all now all de select

79
00:04:52.720 --> 00:04:55.970
that and let's go down to approval rules.

80
00:04:55.970 --> 00:04:59.090
So this is where we add those rules that we saw where it

81
00:04:59.090 --> 00:05:02.480
specifies what kind of products and what kind of severity

82
00:05:02.480 --> 00:05:04.500
levels we want to work with.

83
00:05:04.500 --> 00:05:08.450
So if it's a security and critical patch,

84
00:05:08.450 --> 00:05:12.600
weaken auto approved after either a certain number of days,

85
00:05:12.600 --> 00:05:17.670
or we can approve all patches released up to a specific date.

86
00:05:17.670 --> 00:05:22.580
So anything before and on this date will auto approve.

87
00:05:22.580 --> 00:05:24.450
Now we can have compliance reporting.

88
00:05:24.450 --> 00:05:28.490
So if this doesn't work or some of our instances are

89
00:05:28.490 --> 00:05:32.520
not in sync with our patch baseline,

90
00:05:32.520 --> 00:05:37.900
what category do we want to report this at in our compliance tab over here?

91
00:05:37.900 --> 00:05:40.560
And then finally, we have include non security.

92
00:05:40.560 --> 00:05:46.340
So if we wanted to, we get also include non security updates to be installed.

93
00:05:46.340 --> 00:05:50.040
So this is where we can have up to nine mawr rules.

94
00:05:50.040 --> 00:05:54.290
So let's just say we want to do low and bug fixes and

95
00:05:54.290 --> 00:05:59.540
enhancements and I wanna wait just five days for that.

96
00:05:59.540 --> 00:06:02.710
We can specify patch exceptions.

97
00:06:02.710 --> 00:06:04.980
So if we knew a patch name here,

98
00:06:04.980 --> 00:06:09.780
we could enter it and this would automatically be approved and it would bypass

99
00:06:09.780 --> 00:06:13.830
these settings that we set up here in our approval rules.

100
00:06:13.830 --> 00:06:17.550
We show the compliance level once again if necessary,

101
00:06:17.550 --> 00:06:21.340
and we can do the same thing with non security updates.

102
00:06:21.340 --> 00:06:24.070
Now we can also inter rejected patches.

103
00:06:24.070 --> 00:06:25.570
So no matter what,

104
00:06:25.570 --> 00:06:31.300
which patches do we want to explicitly reject so they never get installed.

105
00:06:31.300 --> 00:06:34.940
And to build on this, we can actually decide.

106
00:06:34.940 --> 00:06:40.840
Hey, let's go ahead and allow this if it's a dependency of another package.

107
00:06:40.840 --> 00:06:41.790
So, for instance,

108
00:06:41.790 --> 00:06:45.300
of this approved patch here had a dependency on a

109
00:06:45.300 --> 00:06:48.300
patch that we specify and rejected.

110
00:06:48.300 --> 00:06:51.180
We can allow it to go ahead and get installed,

111
00:06:51.180 --> 00:06:53.880
Otherwise we can just block it completely.

112
00:06:53.880 --> 00:06:57.930
We can say, Hey, don't ever install this no matter what.

113
00:06:57.930 --> 00:07:02.420
And this brings us to our patch sources so we could enter a source here and

114
00:07:02.420 --> 00:07:07.390
let's just say plural site Repo we could select all products.

115
00:07:07.390 --> 00:07:11.740
And then what we would do is we would specify this little file here,

116
00:07:11.740 --> 00:07:15.280
which is a symptom which in this case is essentially a

117
00:07:15.280 --> 00:07:18.690
young config for young based repost.

118
00:07:18.690 --> 00:07:20.330
So we're just saying, Hey,

119
00:07:20.330 --> 00:07:25.390
look here for the cash and configure this main configuration repo that

120
00:07:25.390 --> 00:07:29.890
we want to source are patches from so you can add several different

121
00:07:29.890 --> 00:07:34.900
sources if you have your own controlled repositories and you can do that

122
00:07:34.900 --> 00:07:37.970
via this menu here or command line.

123
00:07:37.970 --> 00:07:42.210
So this is very helpful for compliance based environments where

124
00:07:42.210 --> 00:07:45.240
they need to control what patches are available.

125
00:07:45.240 --> 00:07:47.140
Now I'll remove this.

126
00:07:47.140 --> 00:07:49.400
We can add tags if we wanted to.

127
00:07:49.400 --> 00:07:53.730
And then we would just create our patch baseline and I forgot to fill this out.

128
00:07:53.730 --> 00:07:57.380
So let me go back here and change this to seven.

129
00:07:57.380 --> 00:08:00.260
I'll click back on, create and there we go.

130
00:08:00.260 --> 00:08:02.700
We've now created our patch baseline.

131
00:08:02.700 --> 00:08:04.550
So if I goto view details,

132
00:08:04.550 --> 00:08:08.280
we can see the rules we specified right here in the middle.

133
00:08:08.280 --> 00:08:13.120
Now, I didn't specify any sources, but if I did, they would show up here.

134
00:08:13.120 --> 00:08:19.320
And let's actually just go ahead and do that just to see what it looks like.

135
00:08:19.320 --> 00:08:22.940
So add in these details here, I'll save it.

136
00:08:22.940 --> 00:08:27.920
And if I go back in, we should see our patch source and we dio.

137
00:08:27.920 --> 00:08:32.140
So that's how you can configure your own custom patch baseline

138
00:08:32.140 --> 00:08:36.340
to be used with S S M document automation.

139
00:08:36.340 --> 00:08:41.450
So if I go back to patch Manager, click on configure patching.

140
00:08:41.450 --> 00:08:46.190
This is where we can set up a patching schedule and our targets so

141
00:08:46.190 --> 00:08:49.440
we can select a patch group which doesnt exist.

142
00:08:49.440 --> 00:08:52.210
Yet we could specify tags.

143
00:08:52.210 --> 00:08:56.040
We could specify a patch group and to do a patch group.

144
00:08:56.040 --> 00:09:00.540
What we would do is we would go to our instances that are managed.

145
00:09:00.540 --> 00:09:03.010
Let me go ahead and go here.

146
00:09:03.010 --> 00:09:07.670
And you would essentially add a tag over here on the left so I would

147
00:09:07.670 --> 00:09:11.360
call this Patch group and then I would give it a name.

148
00:09:11.360 --> 00:09:15.100
So I'll do prod here, I'll click on Save.

149
00:09:15.100 --> 00:09:19.290
And then this would add this instance to a patch group of pride.

150
00:09:19.290 --> 00:09:24.830
So now if I cancel out and I go back in here if we gave this enough time,

151
00:09:24.830 --> 00:09:27.990
this would show up in our patch group selection.

152
00:09:27.990 --> 00:09:30.810
Now it hasn't propagated yet, so it doesn't show up,

153
00:09:30.810 --> 00:09:34.940
but we would see a patch group of prod here that we could use.

154
00:09:34.940 --> 00:09:37.880
Now the next option we have is we can select manually,

155
00:09:37.880 --> 00:09:40.750
so I'll go ahead and do that for this demo.

156
00:09:40.750 --> 00:09:42.930
And then we set up a patching schedule.

157
00:09:42.930 --> 00:09:46.120
So do we want to use an existing maintenance window,

158
00:09:46.120 --> 00:09:48.110
which we talked about earlier?

159
00:09:48.110 --> 00:09:52.490
Do we want to schedule in a new one and create our new window here?

160
00:09:52.490 --> 00:09:54.420
Or do we want to skip that?

161
00:09:54.420 --> 00:09:57.840
Don't schedule anything and patch it now?

162
00:09:57.840 --> 00:10:03.700
It's also like patch now, weaken skin and install or just scan on Lee.

163
00:10:03.700 --> 00:10:08.280
I'll choose scan and install, and then we have some additional settings.

164
00:10:08.280 --> 00:10:11.210
If we were using Patch Group now, I'll go ahead.

165
00:10:11.210 --> 00:10:13.340
I'll click configure, patching.

166
00:10:13.340 --> 00:10:18.280
And what's happening now is you can see Patch Manager will use run command,

167
00:10:18.280 --> 00:10:20.780
which we looked at to patch are instances.

168
00:10:20.780 --> 00:10:22.840
So if I go to view details,

169
00:10:22.840 --> 00:10:29.650
you can see this is running now this is using the default patch baseline,

170
00:10:29.650 --> 00:10:31.920
so it's not using our custom one.

171
00:10:31.920 --> 00:10:34.710
But if we set our custom one to default than this

172
00:10:34.710 --> 00:10:36.770
document would be running that.

173
00:10:36.770 --> 00:10:41.320
So what is happening here is this is running some patch updates on

174
00:10:41.320 --> 00:10:45.110
our platform and it's successful and you can see one of the steps

175
00:10:45.110 --> 00:10:47.080
was skipped because it was for Windows.

176
00:10:47.080 --> 00:10:50.900
So it only did the Lennix instance commands.

177
00:10:50.900 --> 00:10:53.710
So I'm not gonna wait for this to finish,

178
00:10:53.710 --> 00:10:56.970
and this clip is starting to get a little bit lengthy.

179
00:10:56.970 --> 00:11:04.000
So let's go ahead and break here and in the next clip will have a quick discussion on distributor

