WEBVTT
1
00:00:00.840 --> 00:00:05.150
Phases themselves are actually fairly boring to talk about, but we're going

2
00:00:05.150 --> 00:00:08.390
to run through them really quickly just to give you an idea of what phases

3
00:00:08.390 --> 00:00:11.540
are available for you to tie your plug‑ins to.

4
00:00:11.540 --> 00:00:16.870
We start off with the validate phase, and this validates the project as

5
00:00:16.870 --> 00:00:20.840
correct and necessary and has all of the information available.

6
00:00:20.840 --> 00:00:23.690
It has all the plug‑ins that it needs, it has all the artifacts

7
00:00:23.690 --> 00:00:26.480
downloaded, all of our structures in place,

8
00:00:26.480 --> 00:00:30.840
has permissions to create these directories, or do things like that.

9
00:00:30.840 --> 00:00:33.340
Then there's the compile phase.

10
00:00:33.340 --> 00:00:35.750
Compile is exactly what it sounds like; it's where

11
00:00:35.750 --> 00:00:37.990
we compile our source code out.

12
00:00:37.990 --> 00:00:43.740
It should be of note, though, that this is not where testing code gets compiled.

13
00:00:43.740 --> 00:00:49.460
That happens in the test phase of our application. Testing tests the

14
00:00:49.460 --> 00:00:53.480
compile source code and actually compiles our test source code and

15
00:00:53.480 --> 00:00:57.050
makes sure all of the resources are in line with our test package, so

16
00:00:57.050 --> 00:00:59.940
our src/test/java directory.

17
00:00:59.940 --> 00:01:01.990
Then we have the package phase.

18
00:01:01.990 --> 00:01:05.770
The package phase packages all of our code in its

19
00:01:05.770 --> 00:01:08.440
defined packaging such as jars.

20
00:01:08.440 --> 00:01:10.290
If you remember at the top of our POM,

21
00:01:10.290 --> 00:01:14.040
we have the packaging type associated with that. It doesn't do anything

22
00:01:14.040 --> 00:01:17.250
with it once it is packaged, but allows us to test to make sure that

23
00:01:17.250 --> 00:01:19.780
everything is in its proper order that it should be.

24
00:01:19.780 --> 00:01:22.700
A lot of people will tie generating resources or

25
00:01:22.700 --> 00:01:25.460
Javadocs or stuff like that to this phase,

26
00:01:25.460 --> 00:01:29.340
which we're going to talk about here in just a second.

27
00:01:29.340 --> 00:01:36.640
The other phases that we have are the newer to Maven integration‑test phase.

28
00:01:36.640 --> 00:01:41.040
This will allow us to deploy and run integration tests.

29
00:01:41.040 --> 00:01:43.400
A lot of people don't use this yet because it's still a

30
00:01:43.400 --> 00:01:46.540
newer phase to the Maven life cycle.

31
00:01:46.540 --> 00:01:49.280
Then we have the verify phase.

32
00:01:49.280 --> 00:01:54.450
This runs checks against our project to verify that it's good and meets

33
00:01:54.450 --> 00:01:57.700
all the requirements that it should before we install it in our local

34
00:01:57.700 --> 00:02:02.340
repository or we deploy it to a remote repository.

35
00:02:02.340 --> 00:02:06.800
Our install and deploy have almost the same goal.

36
00:02:06.800 --> 00:02:15.000
The install will package it and put it in our local repo, where the deploy will copy it up to a remote repository.

