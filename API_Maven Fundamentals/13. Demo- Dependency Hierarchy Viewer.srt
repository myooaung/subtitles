1
00:00:00,840 --> 00:00:06,130
We've seen how to add dependencies to our POM using the Dependencies tab.

2
00:00:06,130 --> 00:00:09,160
And you may have even clicked on the Dependency Hierarchy tab already,

3
00:00:09,160 --> 00:00:11,670
and you'll see that with JUnit, there are some

4
00:00:11,670 --> 00:00:13,550
transitive dependencies that it's pulling in,

5
00:00:13,550 --> 00:00:16,950
but we really only have one conflict you may have not even caught that

6
00:00:16,950 --> 00:00:23,580
that junit‑platform‑commons has a conflict with 1.0.2. Let's make this a

7
00:00:23,580 --> 00:00:26,740
little bit more interesting and come back to our Dependencies tab and

8
00:00:26,740 --> 00:00:32,800
click Add, and I'm going to enter in hibernate here. Now, one thing that

9
00:00:32,800 --> 00:00:35,620
I may have not mentioned to you earlier is that if you have not

10
00:00:35,620 --> 00:00:37,210
downloaded this before,

11
00:00:37,210 --> 00:00:41,220
it searches your local repo so it may not be available to you.

12
00:00:41,220 --> 00:00:47,340
So if I click on 5.4.1.Final[jar], and you don't have that,

13
00:00:47,340 --> 00:00:49,020
it's because you're going to have to come up here and

14
00:00:49,020 --> 00:00:51,810
enter in the group ID of org.hibernate,

15
00:00:51,810 --> 00:00:55,640
the artifact ID of hibernate‑core, and the version of

16
00:00:55,640 --> 00:01:00,790
5.4.1.Final, and that is proper case, so capital F and a

17
00:01:00,790 --> 00:01:04,340
lowercase i, n, a, l for Final.

18
00:01:04,340 --> 00:01:05,670
Once you have that entered,

19
00:01:05,670 --> 00:01:08,440
or you have the option to click that in the search results,

20
00:01:08,440 --> 00:01:12,230
go ahead and click OK. You'll have some progress of it downloading

21
00:01:12,230 --> 00:01:16,280
some things and adding that to your POM, but I'm going to show you a

22
00:01:16,280 --> 00:01:18,890
little mistake that people commonly make.

23
00:01:18,890 --> 00:01:25,240
If you notice the top of this tab, I have an asterisk next to *Foo/pom.xml.

24
00:01:25,240 --> 00:01:28,640
If I click on my Dependency Hierarchy tab right now,

25
00:01:28,640 --> 00:01:32,540
nothing shows up, and it's because I haven't saved my POM yet.

26
00:01:32,540 --> 00:01:37,020
It won't build that hierarchy for me until I save it, so you can hit

27
00:01:37,020 --> 00:01:42,230
Ctrl+S or you can come up and click the Save icon.

28
00:01:42,230 --> 00:01:43,500
And once I do that,

29
00:01:43,500 --> 00:01:46,570
you'll notice it blows up my Dependency Hierarchy screen

30
00:01:46,570 --> 00:01:50,440
here, and you'll see that we have a bunch of different things

31
00:01:50,440 --> 00:01:53,100
that it's overridden or omitted.

32
00:01:53,100 --> 00:01:59,230
So my jboss‑logging, it's told you that it's updated for 3.3.2.Final

33
00:01:59,230 --> 00:02:02,170
because there was a older version of that in here.

34
00:02:02,170 --> 00:02:06,370
You'll see that we had the activation API. There's a bunch of little things

35
00:02:06,370 --> 00:02:12,930
that it's overridden and omitted to a newer version, so really handy to

36
00:02:12,930 --> 00:02:15,810
determine what's going on inside of your application.

37
00:02:15,810 --> 00:02:17,630
Another useful feature, though,

38
00:02:17,630 --> 00:02:20,330
is if you've got a .jar inside of your application and

39
00:02:20,330 --> 00:02:23,910
you're wondering where it came from, common problem,

40
00:02:23,910 --> 00:02:26,350
common concern with Java. In fact,

41
00:02:26,350 --> 00:02:30,720
a while ago it used to be that you would just have all of these .jars shoved

42
00:02:30,720 --> 00:02:33,750
in a live directory package inside of your application.

43
00:02:33,750 --> 00:02:39,680
But if you're wondering, why do I need to have the jaxb‑api?

44
00:02:39,680 --> 00:02:41,530
You can click on that,

45
00:02:41,530 --> 00:02:45,280
and it'll tell you exactly where it came through your hierarchy.

46
00:02:45,280 --> 00:02:52,310
So specifically, hibernate‑core wants the jaxb‑api, or you can click on

47
00:02:52,310 --> 00:02:59,380
jboss‑logging, that's also from the core, jandex. So it'll go through and allow

48
00:02:59,380 --> 00:03:03,740
you to determine where this library is coming from and who specifically is

49
00:03:03,740 --> 00:03:10,160
asking for it, FastInfoset, dom4j, byte‑buddy, antlr.

50
00:03:10,160 --> 00:03:17,000
Everything will tell you where it's coming from and who's pulling it in as a transitive dependency.

