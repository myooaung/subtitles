WEBVTT
1
00:00:00.740 --> 00:00:04.940
We've covered local repositories in a previous module.

2
00:00:04.940 --> 00:00:08.870
We're going to briefly go over them again just to tie it all together

3
00:00:08.870 --> 00:00:14.300
with where it downloads your code from. Maven looks in your local repo

4
00:00:14.300 --> 00:00:16.900
first. It's where it stores everything.

5
00:00:16.900 --> 00:00:19.300
It looks locally to see if we have this code,

6
00:00:19.300 --> 00:00:24.140
and if it doesn't, it will go out and download that from a remote repository.

7
00:00:24.140 --> 00:00:30.740
When it downloads it, it will install it in your home directory /.m2.

8
00:00:30.740 --> 00:00:35.150
For the past few years, Windows has allowed Linux or Unix‑style paths,

9
00:00:35.150 --> 00:00:38.100
so these paths should work, whether you are on a

10
00:00:38.100 --> 00:00:40.940
Windows or Linux Unix‑type system.

11
00:00:40.940 --> 00:00:48.660
The home directory /m2/<groupId>/<artifactId> is these default location,

12
00:00:48.660 --> 00:00:53.050
and you can override it, but most people just generally leave it here,

13
00:00:53.050 --> 00:00:55.270
and I would recommend you doing so, too.

14
00:00:55.270 --> 00:00:59.540
If you upgrade Maven versions or other configuration changes,

15
00:00:59.540 --> 00:01:02.880
it's easy to forget that it was changed and can cause you some

16
00:01:02.880 --> 00:01:07.320
unnecessary headaches. In our local repository, we always store

17
00:01:07.320 --> 00:01:10.280
artifacts using the information that we provided for the

18
00:01:10.280 --> 00:01:12.940
artifact, group, and version ID.

19
00:01:12.940 --> 00:01:16.790
It's not something that we necessarily get to choose. Its these

20
00:01:16.790 --> 00:01:20.440
three things that are required to download anything.

21
00:01:20.440 --> 00:01:22.660
We don't get to choose it because it's defined by the people

22
00:01:22.660 --> 00:01:25.100
who created the artifact that we want to use.

23
00:01:25.100 --> 00:01:26.430
So, for example,

24
00:01:26.430 --> 00:01:32.440
we previously used commons‑lang, the org‑apache‑commons was

25
00:01:32.440 --> 00:01:37.190
the group ID, and the commons‑lang3 was the artifact ID,

26
00:01:37.190 --> 00:01:40.180
and 3 was the version number.

27
00:01:40.180 --> 00:01:43.850
The reason this is good is it avoids duplication by copying everything in our

28
00:01:43.850 --> 00:01:47.740
project and storing it in our source code control module.

29
00:01:47.740 --> 00:01:51.420
So our path looked something very similar to this. We had

30
00:01:51.420 --> 00:01:58.940
~/.m2/repository/<groupId>/<artifactId>.

31
00:01:58.940 --> 00:02:04.570
This naming convention keeps us from storing those jars in our subversion or

32
00:02:04.570 --> 00:02:10.230
Git, Bitbucket repositories, whatever you're using for your SCM, and just to

33
00:02:10.230 --> 00:02:13.490
show you a kind of image of where this is all stored at, here it is on my

34
00:02:13.490 --> 00:02:15.480
local box that I'm using right now.

35
00:02:15.480 --> 00:02:20.160
You can see that I've got my user's directory, m2,

36
00:02:20.160 --> 00:02:31.000
and then my repository, and then it goes clear up the ladder into org, apache, commons, commons‑lang, 3.8.1.

