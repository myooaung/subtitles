WEBVTT
1
00:00:00.840 --> 00:00:07.720
The Javadoc plugin is typically tied to actually a Maven site goal.

2
00:00:07.720 --> 00:00:10.460
And just to show you an example of overriding it,

3
00:00:10.460 --> 00:00:17.240
we're going to tie it to the same configuration we had for the Source Plugin.

4
00:00:17.240 --> 00:00:20.240
So I've gone ahead and type this all out already,

5
00:00:20.240 --> 00:00:24.910
and you can see we have the org.apache.maven.plugins groupId again,

6
00:00:24.910 --> 00:00:28.430
the maven‑javadoc‑plugin artifactId, and then a version

7
00:00:28.430 --> 00:00:32.730
3.1.0, and we've tied it to those same execution goals

8
00:00:32.730 --> 00:00:34.940
and phase that we had upabove.

9
00:00:34.940 --> 00:00:38.840
You may just want to copy that and paste it from up above yourself.

10
00:00:38.840 --> 00:00:40.680
I'm going to go ahead and save this, and then go out to my

11
00:00:40.680 --> 00:00:47.420
command line, and run maven install again, and it will go

12
00:00:47.420 --> 00:00:49.620
through, and this will take a little bit longer.

13
00:00:49.620 --> 00:00:52.840
You'll see why people tie this to later phases.

14
00:00:52.840 --> 00:00:57.360
It'll go through and check all of the source structure, and

15
00:00:57.360 --> 00:01:00.480
then generate all those HTML files for us.

16
00:01:00.480 --> 00:01:06.400
Now we could navigate down into the target directory and show you the apidocs.

17
00:01:06.400 --> 00:01:09.140
In fact, we'll do just that.

18
00:01:09.140 --> 00:01:13.960
If we do a dir, you can see the folder apidoc that wasn't there before,

19
00:01:13.960 --> 00:01:21.280
but let's go to the actual Explorer and navigate into it, and you'll see

20
00:01:21.280 --> 00:01:27.870
that we have an index, and this is the Javadocs, just like you're used to

21
00:01:27.870 --> 00:01:32.100
normally seeing when you go look at anything for the Java API. We don't

22
00:01:32.100 --> 00:01:33.390
have any other classes,

23
00:01:33.390 --> 00:01:36.740
so looking at it in the form of a package structure, when we're

24
00:01:36.740 --> 00:01:39.690
using the default package doesn't do you any good, but you can see

25
00:01:39.690 --> 00:01:44.860
how this goes through and builds all of this documentation and

26
00:01:44.860 --> 00:01:47.540
information for us by default.

27
00:01:47.540 --> 00:01:51.770
So, it's really a handy plugin if you are producing a public API,

28
00:01:51.770 --> 00:01:55.660
or you have multiple teams working together, and you want to share some

29
00:01:55.660 --> 00:02:00.460
documentation with that other team, and not have them need to go through all

30
00:02:00.460 --> 00:02:06.380
of the source code to figure out what they're trying to do with this API. So

31
00:02:06.380 --> 00:02:10.040
the Javadoc API is really easy to use, and if you comment your code,

32
00:02:10.040 --> 00:02:14.000
it'll actually go through and build all this documentation for you automatically.

