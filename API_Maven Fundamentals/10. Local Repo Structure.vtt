WEBVTT
1
00:00:01.040 --> 00:00:04.220
Once we've ran the compile command or any command that

2
00:00:04.220 --> 00:00:06.050
is preceded by the compile command,

3
00:00:06.050 --> 00:00:09.940
it will download all of your dependencies to your local storage.

4
00:00:09.940 --> 00:00:13.290
Our local storage is by default in our home directory

5
00:00:13.290 --> 00:00:15.890
under the hidden directory of .m2.

6
00:00:15.890 --> 00:00:20.840
The path is almost identical regardless of your operating system.

7
00:00:20.840 --> 00:00:26.000
I'm using a Mac for some of the recording in this demo and a Windows machine,

8
00:00:26.000 --> 00:00:30.840
and they're both storing Maven artifacts underneath my .m2 directory.

9
00:00:30.840 --> 00:00:35.090
You can see in the image on the left that it has the path

10
00:00:35.090 --> 00:00:40.620
underneath my username, .m2, repository, org, apache, commons,

11
00:00:40.620 --> 00:00:46.040
commonsâ€‘lang3, 3.8.1 folder structure.

12
00:00:46.040 --> 00:00:50.940
This is all it does to store artifacts using this info.

13
00:00:50.940 --> 00:00:52.360
Now, this is just a default.

14
00:00:52.360 --> 00:00:55.940
You don't have to have things stored underneath the .m2 directory,

15
00:00:55.940 --> 00:01:01.540
but 95% of people I see use Maven actually just leave it here.

16
00:01:01.540 --> 00:01:05.510
When you upgrade from Maven from time to time to a newer version,

17
00:01:05.510 --> 00:01:09.640
you'd have to go back in there and change the settings that it's stored with.

18
00:01:09.640 --> 00:01:14.380
Now everything we've seen stores this based off of your

19
00:01:14.380 --> 00:01:16.660
groupId, artifactId, and version.

20
00:01:16.660 --> 00:01:19.930
I've repeated this multiple times now, honestly because

21
00:01:19.930 --> 00:01:21.400
I'm just trying to get it to stick.

22
00:01:21.400 --> 00:01:25.440
Everything goes with your groupId, your artifactId, and your version.

23
00:01:25.440 --> 00:01:27.830
As you recall from our demo a minute ago,

24
00:01:27.830 --> 00:01:31.810
it had our groupId for the folder structure, the artifactId for the

25
00:01:31.810 --> 00:01:35.710
subfolder, and then the version for a folder as well.

26
00:01:35.710 --> 00:01:36.500
On top of that,

27
00:01:36.500 --> 00:01:40.060
it uses all of those combined to make that artifact name that's

28
00:01:40.060 --> 00:01:43.240
stored underneath our .m2 repository directory.

29
00:01:43.240 --> 00:01:46.500
This structure helps us avoid duplication.

30
00:01:46.500 --> 00:01:49.630
We don't need to copy these jars into every application we have.

31
00:01:49.630 --> 00:01:51.700
They can all be referenced from this location.

32
00:01:51.700 --> 00:01:55.500
We also don't bloat our Git or Bitbucket or whatever SCM

33
00:01:55.500 --> 00:01:58.810
we're using to store our application.

34
00:01:58.810 --> 00:02:01.120
There's no reason to keep storing these jar files

35
00:02:01.120 --> 00:02:07.000
repetitively in there for each application, we can access them from one central repository.

