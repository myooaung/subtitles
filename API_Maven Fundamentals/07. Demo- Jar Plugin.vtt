WEBVTT
1
00:00:00.740 --> 00:00:07.240
The Jar Plugin is already configured by default as part of the packaging phase,

2
00:00:07.240 --> 00:00:10.840
but if we want to configure it, we have to change some things on our own.

3
00:00:10.840 --> 00:00:15.740
So let's go ahead and add that plugin to our POM now.

4
00:00:15.740 --> 00:00:19.610
Let me go ahead and make this full screen so you can see it a little bit easier,

5
00:00:19.610 --> 00:00:23.330
and I've gone ahead and typed this all out already so you

6
00:00:23.330 --> 00:00:25.860
don't have to watch me type this in,

7
00:00:25.860 --> 00:00:28.690
but I want to call out a few specific things here.

8
00:00:28.690 --> 00:00:33.100
So same groupId, org.apache.maven.plugins.

9
00:00:33.100 --> 00:00:35.940
They're not all from there, but a lot of them are.

10
00:00:35.940 --> 00:00:41.390
The artifactId is maven‑jar‑plugin, and we're not overriding the phase,

11
00:00:41.390 --> 00:00:44.140
so we're going to leave that configuration out.

12
00:00:44.140 --> 00:00:49.200
The version is 3.1.2, and the configuration section, I've

13
00:00:49.200 --> 00:00:53.360
included a little snippet to make it forcefully include all

14
00:00:53.360 --> 00:00:56.220
XML files in all subdirectories.

15
00:00:56.220 --> 00:00:59.980
So here's an example of us using this plugin with a specific

16
00:00:59.980 --> 00:01:04.310
configuration that will go navigate our parent directory and

17
00:01:04.310 --> 00:01:07.090
recurse through all of our directories as we're building our

18
00:01:07.090 --> 00:01:10.830
jar to include all XML files.

19
00:01:10.830 --> 00:01:14.440
So that double asterisk says go through all the directories and look

20
00:01:14.440 --> 00:01:18.260
for anything named .xml on the end of that extension.

21
00:01:18.260 --> 00:01:23.100
So this is a basic configuration for the Jar Plugin,

22
00:01:23.100 --> 00:01:26.890
and you can run that inside of your application, or we can go ahead

23
00:01:26.890 --> 00:01:33.140
and go to our command line, and do maven package,

24
00:01:33.140 --> 00:01:37.140
and it will download any plugins that it needs to still compile your

25
00:01:37.140 --> 00:01:41.950
application, and then go through and include all of those resources

26
00:01:41.950 --> 00:01:45.940
into your final packaged built jar,

27
00:01:45.940 --> 00:01:49.780
and this is a little reminder that as you run some of these new functions,

28
00:01:49.780 --> 00:01:53.340
it's going to go through and download them all the very first time

29
00:01:53.340 --> 00:01:55.070
you run it, and then they'll be cached after that.

30
00:01:55.070 --> 00:01:58.200
But you can see here we've now built our jar,

31
00:01:58.200 --> 00:02:01.430
and if we have any XML files in our subdirectories,

32
00:02:01.430 --> 00:02:04.840
they'll automatically be included inside of that jar file.

33
00:02:04.840 --> 00:02:05.480
Likewise,

34
00:02:05.480 --> 00:02:14.000
you could exclude XML files, and just change it from the includes to the excludes configuration, and do that exact same thing.

