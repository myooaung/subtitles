WEBVTT

00:02.710 --> 00:07.990
We're nearing the end of this first part of the section where we will then have a first assignment and

00:07.990 --> 00:10.480
where we will then leave JS For off.

00:10.540 --> 00:12.910
There are still two things I want to dive into.

00:12.910 --> 00:18.760
One is how we may use more than one component and which different types of components you may use and

00:18.760 --> 00:23.040
also how we can pass an event from a component to the parent component.

00:23.350 --> 00:29.130
The average is how we can use to rebinding or how we can handle four inputs basically.

00:29.200 --> 00:30.690
Let's start with the formant.

00:30.700 --> 00:36.760
What's now for this I'll add a new input and if I return year.

00:37.150 --> 00:42.220
So that's going to be a normal input element of type text like this.

00:42.340 --> 00:46.570
And now I basically need to treat my own two way data binding.

00:46.690 --> 00:48.450
How do we do that.

00:48.640 --> 00:50.470
I'll start in the state.

00:50.720 --> 00:55.350
I want to output a message here or allow the user to enter a message here.

00:55.510 --> 00:57.550
So I will name this message.

00:57.550 --> 01:02.010
Of course you may choose a different name and I'll send it to an empty string initially.

01:02.200 --> 01:10.440
I can now go to my input and bind de-value property to my this state message property I just created

01:10.640 --> 01:14.280
I had control enter the input with nothing in it.

01:14.320 --> 01:17.960
Now I want to be able to react to keystrokes because of another type.

01:17.980 --> 01:19.940
You see I can't even type in there.

01:19.960 --> 01:26.320
The reason for this is that I constantly set value to my message so whenever I change something there

01:26.530 --> 01:28.540
it immediately gets overwritten by react.

01:28.570 --> 01:33.880
Yes so I need to be able to handle the case to user types there.

01:34.240 --> 01:39.670
For this I want to react to the onchange event which is fired when the user types here.

01:39.700 --> 01:45.580
I want to execute a method and it will split over multiple lines here to do just make it a bit easier

01:45.580 --> 01:50.140
to read all these attributes and properties of this input element.

01:51.360 --> 01:56.370
So I want to be able to do something when the user types in and want to fire a method which I need to

01:56.370 --> 01:56.650
add.

01:56.650 --> 02:03.630
It's the last method for now change message input could be a fitting name and there of course I will

02:03.630 --> 02:12.330
receive my default event object that's passed to me automatically and then there I now want to call

02:12.330 --> 02:18.130
this set state to update the value which we don't again point to the input here.

02:18.300 --> 02:18.580
Right.

02:18.600 --> 02:20.740
We do binded value or that message here.

02:20.760 --> 02:26.370
So I need to update this so-called set state or pass a javascript object.

02:26.370 --> 02:30.730
I only want to update the message here and I want to set it to the event.

02:30.810 --> 02:38.910
Target value event target simply input and weld and values what we entered does will update the message.

02:38.910 --> 02:45.500
Now of course I need to call this so here I'll call this change message input.

02:45.510 --> 02:54.060
The method we just created and bind this like that fanout control enter and I enter something here.

02:54.120 --> 03:00.730
You see we can type again to see if this also is output table outside of this import.

03:00.960 --> 03:09.690
Well I can simply add a new paragraph below it here where I output this state message between single

03:09.690 --> 03:10.850
call braces.

03:10.950 --> 03:11.710
Now if a type.

03:11.720 --> 03:18.000
Hello there you'll see it gets out below the form input and that is how we can handle user input and

03:18.000 --> 03:21.480
how we set up our own two way by adding d re-act way.
